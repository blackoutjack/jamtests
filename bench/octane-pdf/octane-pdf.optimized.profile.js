
JAM.startProfile('load');
function pdfjsWrapper(){function MetadataClosure(){function Metadata_has(name){var v20990=this.metadata;introspect(JAM.policy.p1)name=v20990[name];return"undefined"!==typeof name}function Metadata_get(name){var v6228=this.metadata;introspect(JAM.policy.p1)name=v6228[name];name||(name=null);return name}function Metadata_parse(){var doc=this.metaDocument,doc=doc.documentElement;if("rdf:rdf"!==doc.nodeName.toLowerCase()){var v6231=doc=doc.firstChild;for(v6231&&(v6231="rdf:rdf"!==doc.nodeName.toLowerCase());v6231;)(v6231=
doc=doc.nextSibling)&&(v6231="rdf:rdf"!==doc.nodeName.toLowerCase())}var v6231=doc?doc.nodeName.toLowerCase():null,v6234=!doc;v6234||((v6231="rdf:rdf"!==v6231)||(v6231=!doc.hasChildNodes()),v6234=v6231);if(!v6234){var doc=doc.childNodes,desc,entries,entry,v6231=0,v6234=doc.length;for(entries=v6231<v6234;entries;){desc=doc[v6231];if("rdf:description"===desc.nodeName.toLowerCase()){entries=[];var ii=0,iLength=desc.childNodes.length;for(entry=ii<iLength;entry;){entry=desc.childNodes;introspect(JAM.policy.p1)entry=
entry[ii];if("#text"!==entry.nodeName.toLowerCase()){entry=desc.childNodes;introspect(JAM.policy.p1)entry=entry[ii];JAM.call(entries.push,entries,[entry])}ii+=1;entry=ii<iLength}ii=0;iLength=entries.length;for(desc=ii<iLength;desc;){entry=entries[ii];var name=entry.nodeName.toLowerCase();desc=this.metadata;entry=entry.textContent.trim();JAM.set(desc,name,entry);ii+=1;desc=ii<iLength}}v6231+=1;entries=v6231<v6234}}}function fixMetadata(meta){function v90(all,codes){function v89(code,d1,d2,d3){return String.fromCharCode(64*
d1+8*d2+1*d3)}for(var bytes=codes.replace(/\\([0-3])([0-7])([0-7])/g,v89),chars="",i=0,v110=i<bytes.length;v110;){var v110=256*bytes.charCodeAt(i)+bytes.charCodeAt(i+1),v22913=32<=v110;v22913&&(v22913=127>v110)&&(v22913=60!=v110)&&(v22913=62!=v110)&&(v22913=38!=v110)&&(v22913=!1);v22913?v110=String.fromCharCode(v110):(v110=65536+v110,v110="&#x"+JAM.call(v110.toString,v110,[16]).substring(1)+";");chars+=v110;i+=2;v110=i<bytes.length}return">"+chars}return meta.replace(/>\\376\\377([^<]+)/g,v90)}function Metadata(meta){if("string"===
typeof meta){meta=fixMetadata(meta);var parser=new DOMParser;meta=parser.parseFromString(meta,"application/xml")}else meta instanceof Document||error$$1("Metadata: Invalid metadata object");this.metaDocument=meta;this.metadata={};this.parse()}Metadata.prototype={parse:Metadata_parse,get:Metadata_get,has:Metadata_has};return Metadata}function bidiClosure(){function reverseValues(arr,start,end){end-=1;for(var v113=start<end;v113;){introspect(JAM.policy.p1)v113=arr[start];JAM.set(arr,start,arr[end]);
arr[end]=v113;start+=1;end-=1;v113=start<end}}function bidi(text,startLevel){var str=text.str,strLength=str.length;if(0==strLength)return str;for(var chars=[],types=[],numBidi=0,i=0,v123=i<strLength;v123;){var v115=chars,v116=i,v23353=str.charAt(i);v115[v116]=v23353;var charCode=str.charCodeAt(i),charType="L";if(255>=charCode)introspect(JAM.policy.p1)charType=baseTypes[charCode];else{var v6249=1424<=charCode;v6249&&(v6249=1524>=charCode);if(v6249)charType="R";else{var v6250=1536<=charCode;v6250&&
(v6250=1791>=charCode);if(v6250)charType=arabicTypes[charCode&255];else{var v6251=1792<=charCode;v6251&&(v6251=2220>=charCode);v6251&&(charType="AL")}}}var v6252="R"==charType;if(!v6252){var v21001="AL"==charType;v21001||(v21001="AN"==charType);v6252=v21001}v6252&&(numBidi+=1);types[i]=charType;i+=1;v123=i<strLength}if(0==numBidi)return text.direction="ltr",str;-1==startLevel&&(0.3>strLength/numBidi?(text.direction="ltr",startLevel=0):(text.direction="rtl",startLevel=1));for(var levels=[],i=0,v127=
i<strLength;v127;)levels[i]=startLevel,i+=1,v127=i<strLength;for(var v128,e=v128=0!=(startLevel&1)?"R":"L",sor=e,eor=sor,lastType=sor,i=0,v130=i<strLength;v130;){introspect(JAM.policy.p1)var v6255=types[i];"NSM"==v6255?types[i]=lastType:lastType=types[i];i+=1;v130=i<strLength}for(var lastType=sor,i=0,v134=i<strLength;v134;){introspect(JAM.policy.p1)var t=types[i];if("EN"==t){var v131;v131="AL"==lastType?"AN":"EN";types[i]=v131}else{var v6257="R"==t;if(!v6257){var v21004="L"==t;v21004||(v21004="AL"==
t);v6257=v21004}v6257&&(lastType=t)}i+=1;v134=i<strLength}for(var i=0,v136=i<strLength;v136;)t=types[i],"AL"==t&&(types[i]="R"),i+=1,v136=i<strLength;for(var i=1,v140=i<strLength-1;v140;){introspect(JAM.policy.p1)var v21006=types[i];var v6259="ES"==v21006;if(v6259){var v22915=i-1;introspect(JAM.policy.p1)var v22370=types[v22915];var v21007="EN"==v22370;if(v21007){var v22916=i+1;introspect(JAM.policy.p1)var v22371=types[v22916];v21007="EN"==v22371}v6259=v21007}v6259&&(types[i]="EN");introspect(JAM.policy.p1)var v21008=
types[i];var v6260="CS"==v21008;if(v6260){var v23100=i-1;introspect(JAM.policy.p1)var v22917=types[v23100];var v22372="EN"==v22917;if(!v22372){var v23101=i-1;introspect(JAM.policy.p1)var v22918=types[v23101];v22372="AN"==v22918}var v21009=v22372;if(v21009){var v22920=i+1;introspect(JAM.policy.p1)var v22373=types[v22920];var v22921=i-1;introspect(JAM.policy.p1)var v22374=types[v22921];v21009=v22373==v22374}v6260=v21009}v6260&&(types[i]=types[i-1]);i+=1;v140=i<strLength-1}for(var i=0,v146=i<strLength;v146;){introspect(JAM.policy.p1)var v6262=
types[i];if("EN"==v6262){for(var j=i-1,v142=0<=j;v142;){introspect(JAM.policy.p1)var v6263=types[j];if("ET"!=v6263)break;types[j]="EN";j-=1;v142=0<=j}for(var j=i+1,v144=j<strLength;v144;){introspect(JAM.policy.p1)var v6264=types[j];if("ET"!=v6264)break;types[j]="EN";j-=1;v144=j<strLength}}i+=1;v146=i<strLength}for(var i=0,v148=i<strLength;v148;){var t=types[i],v6265="WS"==t;if(!v6265){var v21010="ES"==t;if(!v21010){var v22375="ET"==t;v22375||(v22375="CS"==t);v21010=v22375}v6265=v21010}v6265&&(types[i]=
"ON");i+=1;v148=i<strLength}for(var lastType=sor,i=0,v152=i<strLength;v152;){t=types[i];if("EN"==t){var v149;v149="L"==lastType?"L":"EN";types[i]=v149}else{var v6267="R"==t;v6267||(v6267="L"==t);v6267&&(lastType=t)}i+=1;v152=i<strLength}for(var i=0,v164=i<strLength;v164;){introspect(JAM.policy.p1)var v6268=types[i];if("ON"==v6268){var end;JSCompiler_inline_label_findUnequal_268:{for(var j$$0=void 0,j$$0=i+1,jj=types.length,v154=j$$0<jj;v154;){introspect(JAM.policy.p1)var v6269=types[j$$0];if("ON"!=
v6269){end=j$$0;break JSCompiler_inline_label_findUnequal_268}j$$0+=1;v154=j$$0<jj}end=j$$0}var before=sor;0<i&&(before=types[i-1]);var after=eor;end+1<strLength&&(after=types[end+1]);"L"!=before&&(before="R");"L"!=after&&(after="R");if(before==after)for(var arr=types,end$$0=end,value=before,j$$1=i,v161=j$$1<end$$0;v161;)arr[j$$1]=value,j$$1+=1,v161=j$$1<end$$0;i=end-1}i+=1;v164=i<strLength}for(var i=0,v166=i<strLength;v166;){introspect(JAM.policy.p1)var v6271=types[i];"ON"==v6271&&(types[i]=e);i+=
1;v166=i<strLength}for(var i=0,v171=i<strLength;v171;){t=types[i];introspect(JAM.policy.p1)var v21013=levels[i];if(0==(v21013&1))if("R"==t){introspect(JAM.policy.p1)var v6273=levels[i];levels[i]=v6273+1}else{var v6274="AN"==t;v6274||(v6274="EN"==t);if(v6274){introspect(JAM.policy.p1)var v6275=levels[i];levels[i]=v6275+2}}else{var v6276="L"==t;if(!v6276){var v21015="AN"==t;v21015||(v21015="EN"==t);v6276=v21015}if(v6276){introspect(JAM.policy.p1)var v6277=levels[i];levels[i]=v6277+1}}i+=1;v171=i<strLength}for(var highestLevel=
-1,lowestOddLevel=99,i=0,ii=levels.length,v174=i<ii;v174;){introspect(JAM.policy.p1)var level=levels[i];highestLevel<level&&(highestLevel=level);var v6278=lowestOddLevel>level;v6278&&(v6278=0!=(level&1));v6278&&(lowestOddLevel=level);i+=1;v174=i<ii}for(var level=highestLevel,v181=level>=lowestOddLevel;v181;){for(var start=-1,i=0,ii=levels.length,v178=i<ii;v178;){introspect(JAM.policy.p1)var v6279=levels[i];v6279<level?0<=start&&(reverseValues(chars,start,i),start=-1):0>start&&(start=i);i+=1;v178=
i<ii}0<=start&&reverseValues(chars,start,levels.length);level-=1;v181=level>=lowestOddLevel}for(var result="",i=0,ii=chars.length,v183=i<ii;v183;){introspect(JAM.policy.p1)var ch=chars[i];var v6280="<"!=ch;v6280&&(v6280=">"!=ch);v6280&&(result+=ch);i+=1;v183=i<ii}return result}var baseTypes="BN BN BN BN BN BN BN BN BN S B S WS B BN BN BN BN BN BN BN BN BN BN BN BN BN BN B B B S WS ON ON ET ET ET ON ON ON ON ON ON CS ON CS ON EN EN EN EN EN EN EN EN EN EN ON ON ON ON ON ON ON L L L L L L L L L L L L L L L L L L L L L L L L L L ON ON ON ON ON ON L L L L L L L L L L L L L L L L L L L L L L L L L L ON ON ON ON BN BN BN BN BN BN B BN BN BN BN BN BN BN BN BN BN BN BN BN BN BN BN BN BN BN BN BN BN BN BN BN BN CS ON ET ET ET ET ON ON ON ON L ON ON ON ON ON ET ET EN EN ON L ON ON ON EN L ON ON ON ON ON L L L L L L L L L L L L L L L L L L L L L L L ON L L L L L L L L L L L L L L L L L L L L L L L L L L L L L L L ON L L L L L L L L".split(" "),
arabicTypessplit(" ");
return bidi}function JpxImageClosure(){function ReversibleTransformClosure(){function reversibleTransformFilter(y,offset,length,i0,x){var i0_=Math.floor(i0/2),i1_=Math.floor((i0+length)/2),offset_=offset-i0%1;offset=i0_;i0=i1_+1;length=offset_;for(var v189=offset<i0;v189;){var v189=x,v188=length;introspect(JAM.policy.p1)var v6282=y[length];var v23169=length-1;introspect(JAM.policy.p1)v23169=y[v23169];var v23170=length+1;introspect(JAM.policy.p1)v23170=y[v23170];v189[v188]=v6282-Math.floor((v23169+
v23170+2)/4);offset+=1;length+=2;v189=offset<i0}offset=i0_;i0=i1_;length=offset_+1;for(i0_=offset<i0;i0_;){i0_=x;i1_=length;introspect(JAM.policy.p1)offset_=y[length];v189=length-1;introspect(JAM.policy.p1)v189=x[v189];v188=length+1;introspect(JAM.policy.p1)v188=x[v188];i0_[i1_]=offset_+Math.floor((v189+v188)/2);offset+=1;length+=2;i0_=offset<i0}}function ReversibleTransform(){JAM.call(Transform.call,Transform,[this])}var v193=ReversibleTransform,v23354=Object.create(Transform.prototype);v193.prototype=
v23354;ReversibleTransform.prototype.filter=reversibleTransformFilter;return ReversibleTransform}function IrreversibleTransformClosure(){function irreversibleTransformFilter(y,offset,length,i0,x){var i0_=Math.floor(i0/2),i1_=Math.floor((i0+length)/2),offset_=offset-i0%1;offset=-1.586134342059924;var beta=-0.052980118572961,gamma=0.882911075530934,delta=0.443506852043971,K=1.230174104914001,K_=1/K;i0=offset_-2;length=i0_-1;for(var nn=i1_+2,v199=length<nn;v199;){introspect(JAM.policy.p1)v199=y[i0];
x[i0]=K*v199;length+=1;i0+=2;v199=length<nn}i0=offset_-3;length=i0_-2;nn=i1_+2;for(K=length<nn;K;){introspect(JAM.policy.p1)K=y[i0];x[i0]=K_*K;length+=1;i0+=2;K=length<nn}i0=offset_-2;length=i0_-1;nn=i1_+2;for(y=length<nn;y;){introspect(JAM.policy.p1)y=x[i0];K_=i0-1;introspect(JAM.policy.p1)K_=x[K_];K=i0+1;introspect(JAM.policy.p1)K=x[K];x[i0]=y-delta*(K_+K);length+=1;i0+=2;y=length<nn}i0=offset_-1;length=i0_-1;nn=i1_+1;for(delta=length<nn;delta;){introspect(JAM.policy.p1)delta=x[i0];y=i0-1;introspect(JAM.policy.p1)y=
x[y];K_=i0+1;introspect(JAM.policy.p1)K_=x[K_];x[i0]=delta-gamma*(y+K_);length+=1;i0+=2;delta=length<nn}i0=offset_;length=i0_;nn=i1_+1;for(gamma=length<nn;gamma;){introspect(JAM.policy.p1)gamma=x[i0];delta=i0-1;introspect(JAM.policy.p1)delta=x[delta];y=i0+1;introspect(JAM.policy.p1)y=x[y];x[i0]=gamma-beta*(delta+y);length+=1;i0+=2;gamma=length<nn}i0=offset_+1;length=i0_;nn=i1_;for(i0_=length<nn;i0_;){introspect(JAM.policy.p1)i0_=x[i0];i1_=i0-1;introspect(JAM.policy.p1)i1_=x[i1_];offset_=i0+1;introspect(JAM.policy.p1)offset_=
x[offset_];x[i0]=i0_-offset*(i1_+offset_);length+=1;i0+=2;i0_=length<nn}}function IrreversibleTransform(){JAM.call(Transform.call,Transform,[this])}var v206=IrreversibleTransform,v23355=Object.create(Transform.prototype);v206.prototype=v23355;IrreversibleTransform.prototype.filter=irreversibleTransformFilter;return IrreversibleTransform}function TransformClosure(){function Transform_iterate(ll,hl,lh,hh,u0,v0){var llWidth=ll.width,llHeight=ll.height,llItems=ll.items,hlWidth=hl.width,hlHeight=hl.height,
hlItems=hl.items,lhWidth=lh.width,lhHeight=lh.height,lhItems=lh.items;ll=hh.width;var hhHeight=hh.height,hhItems=hh.items;hh=llWidth+hlWidth;lh=llHeight+lhHeight;hl=new Float32Array(hh*lh);for(var i=0,ii=llHeight,llHeight=i<ii;llHeight;){for(var llHeight=i*llWidth,l=2*i*hh,j=0,jj=llWidth,v210=j<jj;v210;){introspect(JAM.policy.p1)hl[l]=llItems[llHeight];j+=1;llHeight+=1;l+=2;v210=j<jj}i+=1;llHeight=i<ii}i=0;ii=hlHeight;for(llHeight=i<ii;llHeight;){llHeight=i*hlWidth;l=2*i*hh+1;j=0;jj=hlWidth;for(llWidth=
j<jj;llWidth;){introspect(JAM.policy.p1)hl[l]=hlItems[llHeight];j+=1;llHeight+=1;l+=2;llWidth=j<jj}i+=1;llHeight=i<ii}i=0;ii=lhHeight;for(llHeight=i<ii;llHeight;){llHeight=i*lhWidth;l=(2*i+1)*hh;j=0;jj=lhWidth;for(hlWidth=j<jj;hlWidth;){introspect(JAM.policy.p1)hl[l]=lhItems[llHeight];j+=1;llHeight+=1;l+=2;hlWidth=j<jj}i+=1;llHeight=i<ii}i=0;ii=hhHeight;for(lhWidth=i<ii;lhWidth;){llHeight=i*ll;l=(2*i+1)*hh+1;j=0;jj=ll;for(lhWidth=j<jj;lhWidth;){introspect(JAM.policy.p1)hl[l]=hhItems[llHeight];j+=
1;llHeight+=1;l+=2;lhWidth=j<jj}i+=1;lhWidth=i<ii}ll=4;hhItems=new Float32Array(Math.max(hh,lh)+2*ll);lhWidth=new Float32Array(hhItems);hhItems=new Float32Array(hhItems);hlWidth=0;for(llHeight=hlWidth<lh;llHeight;){if(1==hh){if(0!=u0%1){llHeight=hlWidth*hh;introspect(JAM.policy.p1)l=hl[llHeight];hl[llHeight]=l/2}}else{llHeight=hlWidth*hh;l=ll;lhItems=0;for(i=lhItems<hh;i;){introspect(JAM.policy.p1)lhWidth[l]=hl[llHeight];lhItems+=1;llHeight+=1;l+=1;i=lhItems<hh}hhHeight=ll-1;i=ll+1;llHeight=ll+hh-
2;l=ll+hh;lhItems=hhHeight;hhHeight-=1;ii=i;i+=1;lhWidth[lhItems]=lhWidth[ii];lhItems=l;l+=1;ii=llHeight;llHeight-=1;JAM.set(lhWidth,lhItems,lhWidth[ii]);lhItems=hhHeight;hhHeight-=1;ii=i;i+=1;lhWidth[lhItems]=lhWidth[ii];lhItems=l;l+=1;ii=llHeight;llHeight-=1;JAM.set(lhWidth,lhItems,lhWidth[ii]);lhItems=hhHeight;hhHeight-=1;ii=i;i+=1;lhWidth[lhItems]=lhWidth[ii];lhItems=l;l+=1;ii=llHeight;llHeight-=1;JAM.set(lhWidth,lhItems,lhWidth[ii]);lhItems=hhHeight;lhWidth[lhItems]=lhWidth[i];JAM.set(lhWidth,
l,lhWidth[llHeight]);JAM.call(this.filter,this,[lhWidth,ll,hh,u0,hhItems]);llHeight=hlWidth*hh;l=ll;lhItems=0;for(i=lhItems<hh;i;)JAM.set(hl,llHeight,hhItems[l]),lhItems+=1,llHeight+=1,l+=1,i=lhItems<hh}hlWidth+=1;llHeight=hlWidth<lh}lhItems=0;for(u0=lhItems<hh;u0;){if(1==lh){if(0!=v0%1){introspect(JAM.policy.p1)u0=hl[lhItems];hl[lhItems]=u0/2}}else{llHeight=lhItems;l=ll;hlWidth=0;for(u0=hlWidth<lh;u0;){introspect(JAM.policy.p1)lhWidth[l]=hl[llHeight];hlWidth+=1;llHeight+=hh;l+=1;u0=hlWidth<lh}hhHeight=
ll-1;i=ll+1;llHeight=ll+lh-2;l=ll+lh;u0=hhHeight;hhHeight-=1;hlWidth=i;i+=1;lhWidth[u0]=lhWidth[hlWidth];u0=l;l+=1;hlWidth=llHeight;llHeight-=1;JAM.set(lhWidth,u0,lhWidth[hlWidth]);u0=hhHeight;hhHeight-=1;hlWidth=i;i+=1;lhWidth[u0]=lhWidth[hlWidth];u0=l;l+=1;hlWidth=llHeight;llHeight-=1;JAM.set(lhWidth,u0,lhWidth[hlWidth]);u0=hhHeight;hhHeight-=1;hlWidth=i;i+=1;lhWidth[u0]=lhWidth[hlWidth];u0=l;l+=1;hlWidth=llHeight;llHeight-=1;JAM.set(lhWidth,u0,lhWidth[hlWidth]);u0=hhHeight;lhWidth[u0]=lhWidth[i];
u0=l;JAM.set(lhWidth,u0,lhWidth[llHeight]);JAM.call(this.filter,this,[lhWidth,ll,lh,v0,hhItems]);llHeight=lhItems;l=ll;hlWidth=0;for(u0=hlWidth<lh;u0;)JAM.set(hl,llHeight,hhItems[l]),hlWidth+=1,llHeight+=hh,l+=1,u0=hlWidth<lh}lhItems+=1;u0=lhItems<hh}return{width:hh,height:lh,items:hl}}function transformCalculate(subbands,u0,v0){for(var ll=subbands[0],i=1,ii=subbands.length,v254=i<ii;v254;){introspect(JAM.policy.p1)v254=subbands[i];var v6321=i+1;introspect(JAM.policy.p1)v6321=subbands[v6321];var v6322=
i+2;introspect(JAM.policy.p1)v6322=subbands[v6322];ll=JAM.call(this.iterate,this,[ll,v254,v6321,v6322,u0,v0]);i+=3;v254=i<ii}return ll}function Transform(){}Transform.prototype.calculate=transformCalculate;Transform.prototype.iterate=Transform_iterate;return Transform}function BitModelClosure(){function BitModel_runCleanupPass(){for(var decoder=this.decoder,width=this.width,height=this.height,neighborsSignificance=this.neighborsSignificance,coefficentsMagnitude=this.coefficentsMagnitude,coefficentsSign=
this.coefficentsSign,contexts=this.contexts,labels=this.contextLabelTable,bitsDecoded=this.bitsDecoded,processingFlags=this.processingFlags,processedMask=1,firstMagnitudeBitMask=2,oneRowDown=width,twoRowsDown=2*width,threeRowsDown=3*width,i0=0,v269=i0<height;v269;){for(var v269=0,v268=v269<width;v268;){var v268=i0*width+v269,v258=i0+3<height;if(v258){introspect(JAM.policy.p1)v258=processingFlags[v268];if(v258=0==v258){v258=v268+oneRowDown;introspect(JAM.policy.p1)v258=processingFlags[v258];if(v258=
0==v258){v258=v268+twoRowsDown;introspect(JAM.policy.p1)v258=processingFlags[v258];if(v258=0==v258){v258=v268+threeRowsDown;introspect(JAM.policy.p1)v258=processingFlags[v258];if(v258=0==v258){introspect(JAM.policy.p1)v258=neighborsSignificance[v268];if(v258=0==v258){v258=v268+oneRowDown;introspect(JAM.policy.p1)v258=neighborsSignificance[v258];if(v258=0==v258){v258=v268+twoRowsDown;introspect(JAM.policy.p1)v258=neighborsSignificance[v258];if(v258=0==v258){v258=v268+threeRowsDown;introspect(JAM.policy.p1)v258=
neighborsSignificance[v258];v258=0==v258}}}}}}}}var allEmpty=v258,i1=0,v258=v268,cx;if(allEmpty){cx=this.runLengthContext;i1=JAM.call(decoder.readBit,decoder,[cx]);if(!i1){introspect(JAM.policy.p1)v258=bitsDecoded[v268];bitsDecoded[v268]=v258+1;v258=v268+oneRowDown;i1=v268+oneRowDown;introspect(JAM.policy.p1)i1=bitsDecoded[i1];JAM.set(bitsDecoded,v258,i1+1);v258=v268+twoRowsDown;i1=v268+twoRowsDown;introspect(JAM.policy.p1)i1=bitsDecoded[i1];bitsDecoded[v258]=i1+1;v258=v268+threeRowsDown;v268+=threeRowsDown;
introspect(JAM.policy.p1)v268=bitsDecoded[v268];bitsDecoded[v258]=v268+1;v269+=1;v268=v269<width;continue}cx=this.uniformContext;i1=JAM.call(decoder.readBit,decoder,[cx])<<1|JAM.call(decoder.readBit,decoder,[cx]);allEmpty=i0+i1;v258+=i1*width;cx=JAM.call(this.decodeSignBit,this,[allEmpty,v269]);JAM.set(coefficentsSign,v258,cx);JAM.set(coefficentsMagnitude,v258,1);JAM.call(this.setNeighborsSignificance,this,[allEmpty,v269]);introspect(JAM.policy.p1)cx=processingFlags[v258];JAM.set(processingFlags,
v258,cx|firstMagnitudeBitMask);v258=v268;v268=i0;for(cx=v268<=allEmpty;cx;){introspect(JAM.policy.p1)cx=bitsDecoded[v258];JAM.set(bitsDecoded,v258,cx+1);v268+=1;v258+=width;cx=v268<=allEmpty}i1+=1}for(v268=4>i1;v268;){allEmpty=i0+i1;if(allEmpty>=height)break;introspect(JAM.policy.p1)v268=coefficentsMagnitude[v258];if(!v268){introspect(JAM.policy.p1)v268=processingFlags[v258];v268=0!=(v268&processedMask)}if(!v268){introspect(JAM.policy.p1)v268=neighborsSignificance[v258];introspect(JAM.policy.p1)v268=
labels[v268];introspect(JAM.policy.p1)cx=contexts[v268];v268=JAM.call(decoder.readBit,decoder,[cx]);if(1==v268){cx=JAM.call(this.decodeSignBit,this,[allEmpty,v269]);JAM.set(coefficentsSign,v258,cx);JAM.set(coefficentsMagnitude,v258,1);JAM.call(this.setNeighborsSignificance,this,[allEmpty,v269]);introspect(JAM.policy.p1)v268=processingFlags[v258];JAM.set(processingFlags,v258,v268|firstMagnitudeBitMask)}introspect(JAM.policy.p1)v268=bitsDecoded[v258];JAM.set(bitsDecoded,v258,v268+1)}i1+=1;v258+=width;
v268=4>i1}v269+=1;v268=v269<width}i0+=4;v269=i0<height}}function BitModel_runMagnitudeRefinementPass(){for(var decoder=this.decoder,width=this.width,height=this.height,coefficentsMagnitude=this.coefficentsMagnitude,neighborsSignificance=this.neighborsSignificance,contexts=this.contexts,bitsDecoded=this.bitsDecoded,processingFlags=this.processingFlags,processedMask=1,firstMagnitudeBitMask=2,i0=0,v281=i0<height;v281;){for(var v281=0,v280=v281<width;v280;){for(var v280=0,v279=4>v280;v279;){var i=i0+
v280;if(i>=height)break;v279=i*width+v281;introspect(JAM.policy.p1)var v21033=coefficentsMagnitude[v279];v21033=!v21033;if(!v21033){introspect(JAM.policy.p1)v21033=processingFlags[v279];v21033=0!=(v21033&processedMask)}if(!v21033){v21033=16;introspect(JAM.policy.p1)var v21036=processingFlags[v279];if(0!=(v21036&firstMagnitudeBitMask)){i=i*width+v281;introspect(JAM.policy.p1)v21033=processingFlags[i];processingFlags[i]=v21033^firstMagnitudeBitMask;introspect(JAM.policy.p1)i=neighborsSignificance[v279];
i=(i&3)+(i>>2&3)+(i>>4&7);v21033=i=1<=i?15:14}introspect(JAM.policy.p1)i=contexts[v21033];i=JAM.call(decoder.readBit,decoder,[i]);introspect(JAM.policy.p1)v21033=coefficentsMagnitude[v279];coefficentsMagnitude[v279]=v21033<<1|i;introspect(JAM.policy.p1)i=bitsDecoded[v279];bitsDecoded[v279]=i+1;introspect(JAM.policy.p1)i=processingFlags[v279];processingFlags[v279]=i|processedMask}v280+=1;v279=4>v280}v281+=1;v280=v281<width}i0+=4;v281=i0<height}}function BitModel_decodeSignBit(row,column){var width=
this.width,height=this.height,index=row*width+column,coefficentsMagnitude=this.coefficentsMagnitude,coefficentsSign=this.coefficentsSign,v6346=0<column;v6346&&(v6346=coefficentsMagnitude[index-1]);var v6347=index-1;introspect(JAM.policy.p1)v6347=coefficentsSign[v6347];var v6348=column+1<width;if(v6348){v6348=index+1;introspect(JAM.policy.p1)v6348=coefficentsMagnitude[v6348]}var v6349=index+1;introspect(JAM.policy.p1)v6349=coefficentsSign[v6349];v6346=calcSignContribution(v6346,v6347,v6348,v6349);
(v6347=0<row)&&(v6347=coefficentsMagnitude[index-width]);v6348=index-width;introspect(JAM.policy.p1)v6348=coefficentsSign[v6348];if(height=row+1<height){height=index+width;introspect(JAM.policy.p1)height=coefficentsMagnitude[height]}coefficentsMagnitude=height;width=index+width;introspect(JAM.policy.p1)coefficentsSign=coefficentsSign[width];coefficentsSign=calcSignContribution(v6347,v6348,coefficentsMagnitude,coefficentsSign);coefficentsSign=3*(1-v6346)+(1-coefficentsSign);introspect(JAM.policy.p1)coefficentsSign=
SignContextLabels[coefficentsSign];width=coefficentsSign.contextLabel;index=this.contexts;introspect(JAM.policy.p1)width=index[width];index=this.decoder;width=JAM.call(index.readBit,index,[width]);return width^coefficentsSign.xorBit}function BitModel_runSignificancePropogationPass(){for(var decoder=this.decoder,width=this.width,height=this.height,coefficentsMagnitude=this.coefficentsMagnitude,coefficentsSign=this.coefficentsSign,neighborsSignificance=this.neighborsSignificance,processingFlags=this.processingFlags,
contexts=this.contexts,labels=this.contextLabelTable,bitsDecoded=this.bitsDecoded,processedInverseMask=-2,processedMask=1,firstMagnitudeBitMask=2,q=0,qq=width*height,v295=q<qq;v295;){introspect(JAM.policy.p1)v295=processingFlags[q];processingFlags[q]=v295&processedInverseMask;q+=1;v295=q<qq}processedInverseMask=0;for(q=processedInverseMask<height;q;){q=0;for(qq=q<width;qq;){for(var qq=processedInverseMask*width+q,v295=0,v300=4>v295;v300;){v300=processedInverseMask+v295;if(v300>=height)break;introspect(JAM.policy.p1)var v6357=
coefficentsMagnitude[qq];if(!v6357){introspect(JAM.policy.p1)v6357=neighborsSignificance[qq];v6357=!v6357}if(!v6357){introspect(JAM.policy.p1)v6357=neighborsSignificance[qq];introspect(JAM.policy.p1)v6357=labels[v6357];introspect(JAM.policy.p1)v6357=contexts[v6357];if(v6357=JAM.call(decoder.readBit,decoder,[v6357])){v6357=JAM.call(this.decodeSignBit,this,[v300,q]);JAM.set(coefficentsSign,qq,v6357);JAM.set(coefficentsMagnitude,qq,1);JAM.call(this.setNeighborsSignificance,this,[v300,q]);introspect(JAM.policy.p1)v300=
processingFlags[qq];JAM.set(processingFlags,qq,v300|firstMagnitudeBitMask)}introspect(JAM.policy.p1)v300=bitsDecoded[qq];JAM.set(bitsDecoded,qq,v300+1);introspect(JAM.policy.p1)v300=processingFlags[qq];JAM.set(processingFlags,qq,v300|processedMask)}v295+=1;qq+=width;v300=4>v295}q+=1;qq=q<width}processedInverseMask+=4;q=processedInverseMask<height}}function BitModel_setNeighborsSignificance(row,column){var neighborsSignificance=this.neighborsSignificance,width=this.width,height=this.height,index=row*
width+column;if(0<row){if(0<column){var v304=index-width-1;introspect(JAM.policy.p1)var v21048=neighborsSignificance[v304];neighborsSignificance[v304]=v21048+16}if(column+1<width){v304=index-width+1;introspect(JAM.policy.p1)v21048=neighborsSignificance[v304];neighborsSignificance[v304]=v21048+16}v304=index-width;introspect(JAM.policy.p1)v21048=neighborsSignificance[v304];neighborsSignificance[v304]=v21048+4}if(row+1<height){if(0<column){height=index+width-1;introspect(JAM.policy.p1)v304=neighborsSignificance[height];
neighborsSignificance[height]=v304+16}if(column+1<width){height=index+width+1;introspect(JAM.policy.p1)v304=neighborsSignificance[height];JAM.set(neighborsSignificance,height,v304+16)}height=index+width;introspect(JAM.policy.p1)v304=neighborsSignificance[height];JAM.set(neighborsSignificance,height,v304+4)}if(0<column){height=index-1;introspect(JAM.policy.p1)v304=neighborsSignificance[height];neighborsSignificance[height]=v304+1}if(column+1<width){width=index+1;introspect(JAM.policy.p1)height=neighborsSignificance[width];
JAM.set(neighborsSignificance,width,height+1)}introspect(JAM.policy.p1)width=neighborsSignificance[index];JAM.set(neighborsSignificance,index,width|128)}function BitModel_reset(){this.uniformContext={index:46,mps:0};this.runLengthContext={index:3,mps:0};var v320=this.contexts=[];JAM.call(v320.push,v320,[{index:4,mps:0}]);for(var v320=1,v324=16>=v320;v324;)v324=this.contexts,JAM.call(v324.push,v324,[{index:0,mps:0}]),v320+=1,v324=16>=v320}function BitModel_setDecoder(decoder){this.decoder=decoder}
function calcSignContribution(significance0,sign0,significance1,sign1){return significance1?sign1?significance0=significance0?sign0?-1:0:-1:significance0=significance0?sign0?0:1:1:significance0=significance0?sign0?-1:1:0}function BitModel(width,height,subband,zeroBitPlanes){this.width=width;this.height=height;this.contextLabelTable=subband="HH"==subband?HHContextLabel:"HL"==subband?HLContextLabel:LLAndLHContextsLabel;width*=height;this.neighborsSignificance=height=new Uint8Array(width);this.coefficentsSign=
height=new Uint8Array(width);this.coefficentsMagnitude=height=new Uint32Array(width);this.processingFlags=width=new Uint8Array(width);width=new Uint8Array(this.width*this.height);height=0;subband=width.length;for(var v331=height<subband;v331;)width[height]=zeroBitPlanes,height+=1,v331=height<subband;this.bitsDecoded=width;this.reset()}var LLAndLHContextsLabel=new Uint8Array([0,5,8,0,3,7,8,0,4,7,8,0,0,0,0,0,1,6,8,0,3,7,8,0,4,7,8,0,0,0,0,0,2,6,8,0,3,7,8,0,4,7,8,0,0,0,0,0,2,6,8,0,3,7,8,0,4,7,8,0,0,0,
0,0,2,6,8,0,3,7,8,0,4,7,8]),HLContextLabel=new Uint8Array([0,3,4,0,5,7,7,0,8,8,8,0,0,0,0,0,1,3,4,0,6,7,7,0,8,8,8,0,0,0,0,0,2,3,4,0,6,7,7,0,8,8,8,0,0,0,0,0,2,3,4,0,6,7,7,0,8,8,8,0,0,0,0,0,2,3,4,0,6,7,7,0,8,8,8]),HHContextLabel=new Uint8Array([0,1,2,0,1,2,2,0,2,2,2,0,0,0,0,0,3,4,5,0,4,5,5,0,5,5,5,0,0,0,0,0,6,7,7,0,7,7,7,0,7,7,7,0,0,0,0,0,8,8,8,0,8,8,8,0,8,8,8,0,0,0,0,0,8,8,8,0,8,8,8,0,8,8,8]),SignContextLabels=[{contextLabel:13,xorBit:0},{contextLabel:12,xorBit:0},{contextLabel:11,xorBit:0},{contextLabel:10,
xorBit:0},{contextLabel:9,xorBit:0},{contextLabel:10,xorBit:1},{contextLabel:11,xorBit:1},{contextLabel:12,xorBit:1},{contextLabel:13,xorBit:1}];BitModel.prototype={setDecoder:BitModel_setDecoder,reset:BitModel_reset,setNeighborsSignificance:BitModel_setNeighborsSignificance,runSignificancePropogationPass:BitModel_runSignificancePropogationPass,decodeSignBit:BitModel_decodeSignBit,runMagnitudeRefinementPass:BitModel_runMagnitudeRefinementPass,runCleanupPass:BitModel_runCleanupPass};return BitModel}
function ArithmeticDecoderClosure(){function ArithmeticDecoder_exchangeLps(cx){var d;d=cx.index;introspect(JAM.policy.p1)var qeTableIcx=QeTable[d];this.a<qeTableIcx.qe?(this.a=qeTableIcx.qe,d=cx.mps,cx.index=qeTableIcx.nmps):(this.a=qeTableIcx.qe,d=1-cx.mps,1==qeTableIcx.switchFlag&&(cx.mps=1-cx.mps),cx.index=qeTableIcx.nlps);return d}function ArithmeticDecoder_exchangeMps(cx){var d;d=cx.index;introspect(JAM.policy.p1)var qeTableIcx=QeTable[d];this.a<qeTableIcx.qe?(d=1-cx.mps,1==qeTableIcx.switchFlag&&
(cx.mps=1-cx.mps),cx.index=qeTableIcx.nlps):(d=cx.mps,cx.index=qeTableIcx.nmps);return d}function ArithmeticDecoder_renormD(){var v358=0==(this.a&32768);do 0==this.ct&&this.byteIn(),this.a<<=1,this.chigh=this.chigh<<1&65535|this.clow>>15&1,this.clow=this.clow<<1&65535,this.ct-=1,v358=0==(this.a&32768);while(v358)}function ArithmeticDecoder_readBit(cx){var v6391=cx.index;introspect(JAM.policy.p1)v6391=QeTable[v6391];v6391=v6391.qe;this.a-=v6391;if(this.chigh<v6391)return cx=JAM.call(this.exchangeLps,
this,[cx]),this.renormD(),cx;this.chigh-=v6391;return 0==(this.a&32768)?(cx=JAM.call(this.exchangeMps,this,[cx]),this.renormD(),cx):cx.mps}function ArithmeticDecoder_byteIn(){var data=this.data,bp=this.bp;introspect(JAM.policy.p1)var v6396=data[bp];if(255==v6396){v6396=bp+1;introspect(JAM.policy.p1)v6396=data[v6396];if(143<v6396)this.clow+=65280,this.ct=8;else{bp+=1;v6396=this.clow;introspect(JAM.policy.p1)data=data[bp];this.clow=v6396+(data<<9);this.ct=7;this.bp=bp}}else{bp+=1;v6396=this.clow;if(bp<
this.dataEnd){introspect(JAM.policy.p1)data=data[bp];data<<=8}else data=65280;this.clow=v6396+data;this.ct=8;this.bp=bp}65535<this.clow&&(this.chigh+=this.clow>>16,this.clow&=65535)}function ArithmeticDecoder(data,start,end){this.data=data;this.bp=start;this.dataEnd=end;introspect(JAM.policy.p1)this.chigh=data[start];this.clow=0;this.byteIn();this.chigh=this.chigh<<7&65535|this.clow>>9&127;this.clow=this.clow<<7&65535;this.ct-=7;this.a=32768}var QeTable=[{qe:22017,nmps:1,nlps:1,switchFlag:1},{qe:13313,
nmps:2,nlps:6,switchFlag:0},{qe:6145,nmps:3,nlps:9,switchFlag:0},{qe:2753,nmps:4,nlps:12,switchFlag:0},{qe:1313,nmps:5,nlps:29,switchFlag:0},{qe:545,nmps:38,nlps:33,switchFlag:0},{qe:22017,nmps:7,nlps:6,switchFlag:1},{qe:21505,nmps:8,nlps:14,switchFlag:0},{qe:18433,nmps:9,nlps:14,switchFlag:0},{qe:14337,nmps:10,nlps:14,switchFlag:0},{qe:12289,nmps:11,nlps:17,switchFlag:0},{qe:9217,nmps:12,nlps:18,switchFlag:0},{qe:7169,nmps:13,nlps:20,switchFlag:0},{qe:5633,nmps:29,nlps:21,switchFlag:0},{qe:22017,
nmps:15,nlps:14,switchFlag:1},{qe:21505,nmps:16,nlps:14,switchFlag:0},{qe:20737,nmps:17,nlps:15,switchFlag:0},{qe:18433,nmps:18,nlps:16,switchFlag:0},{qe:14337,nmps:19,nlps:17,switchFlag:0},{qe:13313,nmps:20,nlps:18,switchFlag:0},{qe:12289,nmps:21,nlps:19,switchFlag:0},{qe:10241,nmps:22,nlps:19,switchFlag:0},{qe:9217,nmps:23,nlps:20,switchFlag:0},{qe:8705,nmps:24,nlps:21,switchFlag:0},{qe:7169,nmps:25,nlps:22,switchFlag:0},{qe:6145,nmps:26,nlps:23,switchFlag:0},{qe:5633,nmps:27,nlps:24,switchFlag:0},
{qe:5121,nmps:28,nlps:25,switchFlag:0},{qe:4609,nmps:29,nlps:26,switchFlag:0},{qe:4353,nmps:30,nlps:27,switchFlag:0},{qe:2753,nmps:31,nlps:28,switchFlag:0},{qe:2497,nmps:32,nlps:29,switchFlag:0},{qe:2209,nmps:33,nlps:30,switchFlag:0},{qe:1313,nmps:34,nlps:31,switchFlag:0},{qe:1089,nmps:35,nlps:32,switchFlag:0},{qe:673,nmps:36,nlps:33,switchFlag:0},{qe:545,nmps:37,nlps:34,switchFlag:0},{qe:321,nmps:38,nlps:35,switchFlag:0},{qe:273,nmps:39,nlps:36,switchFlag:0},{qe:133,nmps:40,nlps:37,switchFlag:0},
{qe:73,nmps:41,nlps:38,switchFlag:0},{qe:37,nmps:42,nlps:39,switchFlag:0},{qe:21,nmps:43,nlps:40,switchFlag:0},{qe:9,nmps:44,nlps:41,switchFlag:0},{qe:5,nmps:45,nlps:42,switchFlag:0},{qe:1,nmps:45,nlps:43,switchFlag:0},{qe:22017,nmps:46,nlps:46,switchFlag:0}];ArithmeticDecoder.prototype={byteIn:ArithmeticDecoder_byteIn,readBit:ArithmeticDecoder_readBit,renormD:ArithmeticDecoder_renormD,exchangeMps:ArithmeticDecoder_exchangeMps,exchangeLps:ArithmeticDecoder_exchangeLps};return ArithmeticDecoder}function InclusionTreeClosure(){function InclusionTree_nextLevel(){var currentLevel=
this.currentLevel,v416=this.levels;introspect(JAM.policy.p1)v416=v416[currentLevel];var v417=v416.items,v418=v416.index;introspect(JAM.policy.p1)v417=v417[v418];JAM.set(v416.items,v416.index,255);currentLevel-=1;if(0>currentLevel)return!1;this.currentLevel=currentLevel;v416=this.levels;introspect(JAM.policy.p1)v416=v416[currentLevel];JAM.set(v416.items,v416.index,v417);return!0}function InclusionTree_propagateValues(){var levelIndex=this.currentLevel,v425=this.levels;introspect(JAM.policy.p1)var level=
v425[levelIndex];v425=level.items;level=level.index;introspect(JAM.policy.p1)v425=v425[level];for(level=0<=(levelIndex-=1);level;){level=this.levels;introspect(JAM.policy.p1)level=level[levelIndex];JAM.set(level.items,level.index,v425);level=0<=(levelIndex-=1)}}function InclusionTree_incrementValue(stopValue){var v432=this.levels,v433=this.currentLevel;introspect(JAM.policy.p1)v432=v432[v433];JAM.set(v432.items,v432.index,stopValue+1);this.propagateValues()}function InclusionTree_reset(i,j,stopValue){for(var currentLevel=
0,v441=currentLevel<this.levels.length;v441;){v441=this.levels;introspect(JAM.policy.p1)var level=v441[currentLevel];v441=i+j*level.width;level.index=v441;level=level.items;introspect(JAM.policy.p1)v441=level[v441];if(255==v441)break;if(v441>stopValue)return this.currentLevel=currentLevel,this.propagateValues(),!1;i>>=1;j>>=1;currentLevel+=1;v441=currentLevel<this.levels.length}this.currentLevel=currentLevel-1;return!0}function InclusionTree(width,height,defaultValue){var levelsLength=log2(Math.max(width,
height))+1;this.levels=[];for(var i=0,v448=i<levelsLength;v448;){for(var v448=new Uint8Array(width*height),j=0,jj=v448.length,v444=j<jj;v444;)v448[j]=defaultValue,j+=1,v444=j<jj;v448={width:width,height:height,items:v448};j=this.levels;JAM.call(j.push,j,[v448]);width=Math.ceil(width/2);height=Math.ceil(height/2);i+=1;v448=i<levelsLength}}InclusionTree.prototype={reset:InclusionTree_reset,incrementValue:InclusionTree_incrementValue,propagateValues:InclusionTree_propagateValues,nextLevel:InclusionTree_nextLevel};
return InclusionTree}function TagTreeClosure(){function TagTree_nextLevel(){var currentLevel=this.currentLevel,v449=this.levels;introspect(JAM.policy.p1)v449=v449[currentLevel];var v450=v449.items,v449=v449.index;introspect(JAM.policy.p1)v450=v450[v449];currentLevel-=1;if(0>currentLevel)return this.value=v450,!1;this.currentLevel=currentLevel;v449=this.levels;introspect(JAM.policy.p1)v449=v449[currentLevel];JAM.set(v449.items,v449.index,v450);return!0}function TagTree_incrementValue(){var v456=this.levels,
v457=this.currentLevel;introspect(JAM.policy.p1)var level=v456[v457];var v456=level.items,v457=level.index,v22397=level.items,level=level.index;introspect(JAM.policy.p1)v22397=v22397[level];JAM.set(v456,v457,v22397+1)}function TagTree_reset(i,j){for(var currentLevel=0,value=0,v462=currentLevel<this.levels.length;v462;){v462=this.levels;introspect(JAM.policy.p1)var level=v462[currentLevel];v462=i+j*level.width;if(v462 in level.items){value=level.items;introspect(JAM.policy.p1)value=value[v462];break}level.index=
v462;i>>=1;j>>=1;currentLevel+=1;v462=currentLevel<this.levels.length}currentLevel-=1;level=this.levels[currentLevel];JAM.set(level.items,level.index,value);this.currentLevel=currentLevel;delete this.value}function TagTree(width,height){var levelsLength=log2(Math.max(width,height))+1;this.levels=[];for(var i=0,v470=i<levelsLength;v470;){var v470={width:width,height:height,items:[]},v467=this.levels;JAM.call(v467.push,v467,[v470]);width=Math.ceil(width/2);height=Math.ceil(height/2);i+=1;v470=i<levelsLength}}
TagTree.prototype={reset:TagTree_reset,incrementValue:TagTree_incrementValue,nextLevel:TagTree_nextLevel};return TagTree}function JpxImage_parseCodestream(data,start,end){var context={};try{for(var position=start,v627=position<end;v627;){var code=readUint16(data,position),position=position+2,length=0,j;switch(code){case 65359:context.mainHeader=!0;break;case 65497:break;case 65361:var length=readUint16(data,position),siz={},v471=siz,v23360=readUint32(data,position+4);v471.Xsiz=v23360;var v472=siz,
v23361=readUint32(data,position+8);v472.Ysiz=v23361;var v473=siz,v23362=readUint32(data,position+12);v473.XOsiz=v23362;var v474=siz,v23363=readUint32(data,position+16);v474.YOsiz=v23363;var v475=siz,v23364=readUint32(data,position+20);v475.XTsiz=v23364;var v476=siz,v23365=readUint32(data,position+24);v476.YTsiz=v23365;var v477=siz,v23366=readUint32(data,position+28);v477.XTOsiz=v23366;var v478=siz,v23367=readUint32(data,position+32);v478.YTOsiz=v23367;var componentsCount=readUint16(data,position+
36);siz.Csiz=componentsCount;var components=[];j=position+38;for(var i=0,v492=i<componentsCount;v492;){introspect(JAM.policy.p1)var v21075=data[j];var v480=(v21075&127)+1;introspect(JAM.policy.p1)var v22399=data[j];var v481=!!(v22399&128),v6433=j+1;introspect(JAM.policy.p1)var v482=data[v6433];var v6434=j+1;introspect(JAM.policy.p1)var v483=data[v6434];var component={precision:v480,isSigned:v481,XRsiz:v482,YRsiz:v483},component$$0=component,siz$$0=siz,v484=component$$0,v23368=Math.ceil(siz$$0.XOsiz/
component$$0.XRsiz);v484.x0=v23368;var v485=component$$0,v23369=Math.ceil(siz$$0.Xsiz/component$$0.XRsiz);v485.x1=v23369;var v486=component$$0,v23370=Math.ceil(siz$$0.YOsiz/component$$0.YRsiz);v486.y0=v23370;var v487=component$$0,v23371=Math.ceil(siz$$0.Ysiz/component$$0.YRsiz);v487.y1=v23371;component$$0.width=component$$0.x1-component$$0.x0;component$$0.height=component$$0.y1-component$$0.y0;JAM.call(components.push,components,[component]);i+=1;v492=i<componentsCount}context.SIZ=siz;context.components=
components;for(var context$$0=context,components$$0=components,siz$$1=context$$0.SIZ,tiles=[],numXtiles=Math.ceil((siz$$1.Xsiz-siz$$1.XTOsiz)/siz$$1.XTsiz),numYtiles=Math.ceil((siz$$1.Ysiz-siz$$1.YTOsiz)/siz$$1.YTsiz),q=0,v504=q<numYtiles;v504;){for(var p=0,v503=p<numXtiles;v503;){var tile={},v495=tile,v23372=Math.max(siz$$1.XTOsiz+p*siz$$1.XTsiz,siz$$1.XOsiz);v495.tx0=v23372;var v496=tile,v23373=Math.max(siz$$1.YTOsiz+q*siz$$1.YTsiz,siz$$1.YOsiz);v496.ty0=v23373;var v497=tile,v23374=Math.min(siz$$1.XTOsiz+
(p+1)*siz$$1.XTsiz,siz$$1.Xsiz);v497.tx1=v23374;var v498=tile,v23375=Math.min(siz$$1.YTOsiz+(q+1)*siz$$1.YTsiz,siz$$1.Ysiz);v498.ty1=v23375;tile.width=tile.tx1-tile.tx0;tile.height=tile.ty1-tile.ty0;tile.components=[];JAM.call(tiles.push,tiles,[tile]);p+=1;v503=p<numXtiles}q+=1;v504=q<numYtiles}context$$0.tiles=tiles;for(var componentsCount$$0=siz$$1.Csiz,i$$0=0,ii=componentsCount$$0,v515=i$$0<ii;v515;){introspect(JAM.policy.p1)var component$$1=components$$0[i$$0];for(var j$$0=0,jj=tiles.length,v514=
j$$0<jj;v514;){var tileComponent={},tile=tiles[j$$0],v505=tileComponent,v23376=Math.ceil(tile.tx0/component$$1.XRsiz);v505.tcx0=v23376;var v506=tileComponent,v23377=Math.ceil(tile.ty0/component$$1.YRsiz);v506.tcy0=v23377;var v507=tileComponent,v23378=Math.ceil(tile.tx1/component$$1.XRsiz);v507.tcx1=v23378;var v508=tileComponent,v23379=Math.ceil(tile.ty1/component$$1.YRsiz);v508.tcy1=v23379;tileComponent.width=tileComponent.tcx1-tileComponent.tcx0;tileComponent.height=tileComponent.tcy1-tileComponent.tcy0;
tile.components[i$$0]=tileComponent;j$$0+=1;v514=j$$0<jj}i$$0+=1;v515=i$$0<ii}context.QCC=[];context.COC=[];break;case 65372:var length=readUint16(data,position),qcd={},v516=j=position+2;j+=1;introspect(JAM.policy.p1)var sqcd=data[v516];var spqcdSize,scalarExpounded;switch(sqcd&31){case 0:spqcdSize=8;scalarExpounded=!0;break;case 1:spqcdSize=16;scalarExpounded=!1;break;case 2:spqcdSize=16;scalarExpounded=!0;break;default:throw"Invalid SQcd value "+sqcd;}qcd.noQuantization=8==spqcdSize;qcd.scalarExpounded=
scalarExpounded;qcd.guardBits=sqcd>>5;for(var spqcds=[],v523=j<length+position;v523;){var spqcd={};if(8==spqcdSize){var v6456=j;j+=1;introspect(JAM.policy.p1)var v518=data[v6456];spqcd.epsilon=v518>>3;spqcd.mu=0}else{introspect(JAM.policy.p1)var v519=data[j];spqcd.epsilon=v519>>3;introspect(JAM.policy.p1)var v21105=data[j];var v520=(v21105&7)<<8,v6458=j+1;introspect(JAM.policy.p1)var v521=data[v6458];spqcd.mu=v520|v521;j+=2}JAM.call(spqcds.push,spqcds,[spqcd]);v523=j<length+position}qcd.SPqcds=spqcds;
context.mainHeader?context.QCD=qcd:(context.currentTile.QCD=qcd,context.currentTile.QCC=[]);break;case 65373:var length=readUint16(data,position),qcc={};j=position+2;var cqcc;if(257>context.SIZ.Csiz){var v527=j;j+=1;introspect(JAM.policy.p1)cqcc=data[v527]}else cqcc=readUint16(data,j),j+=2;var v529=j;j+=1;introspect(JAM.policy.p1)sqcd=data[v529];switch(sqcd&31){case 0:spqcdSize=8;scalarExpounded=!0;break;case 1:spqcdSize=16;scalarExpounded=!1;break;case 2:spqcdSize=16;scalarExpounded=!0;break;default:throw"Invalid SQcd value "+
sqcd;}qcc.noQuantization=8==spqcdSize;qcc.scalarExpounded=scalarExpounded;qcc.guardBits=sqcd>>5;for(var spqcds=[],v536=j<length+position;v536;){spqcd={};if(8==spqcdSize){var v6462=j;j+=1;introspect(JAM.policy.p1)var v531=data[v6462];spqcd.epsilon=v531>>3;spqcd.mu=0}else{introspect(JAM.policy.p1)var v532=data[j];spqcd.epsilon=v532>>3;introspect(JAM.policy.p1)var v21107=data[j];var v533=(v21107&7)<<8,v6464=j+1;introspect(JAM.policy.p1)var v534=data[v6464];spqcd.mu=v533|v534;j+=2}JAM.call(spqcds.push,
spqcds,[spqcd]);v536=j<length+position}qcc.SPqcds=spqcds;context.mainHeader?JAM.set(context.QCC,cqcc,qcc):JAM.set(context.currentTile.QCC,cqcc,qcc);break;case 65362:var length=readUint16(data,position),cod={},v540=j=position+2;j+=1;introspect(JAM.policy.p1)var scod=data[v540];cod.entropyCoderWithCustomPrecincts=!!(scod&1);cod.sopMarkerUsed=!!(scod&2);cod.ephMarkerUsed=!!(scod&4);var v544=j;j+=1;introspect(JAM.policy.p1)cod.progressionOrder=data[v544];var v545=cod,v23380=readUint16(data,j);v545.layersCount=
v23380;var v546=j+=2;j+=1;introspect(JAM.policy.p1)cod.multipleComponentTransform=data[v546];var v547=j;j+=1;introspect(JAM.policy.p1)cod.decompositionLevelsCount=data[v547];var v21108=j;j+=1;introspect(JAM.policy.p1)var v6470=data[v21108];cod.xcb=(v6470&15)+2;var v21109=j;j+=1;introspect(JAM.policy.p1)var v6471=data[v21109];cod.ycb=(v6471&15)+2;var v550=j;j+=1;introspect(JAM.policy.p1)var blockStyle=data[v550];cod.selectiveArithmeticCodingBypass=!!(blockStyle&1);cod.resetContextProbabilities=!!(blockStyle&
2);cod.terminationOnEachCodingPass=!!(blockStyle&4);cod.verticalyStripe=!!(blockStyle&8);cod.predictableTermination=!!(blockStyle&16);cod.segmentationSymbolUsed=!!(blockStyle&32);var v557=j;j+=1;introspect(JAM.policy.p1)cod.transformation=data[v557];if(cod.entropyCoderWithCustomPrecincts){for(var precinctsSizes={},v559=j<length+position;v559;){introspect(JAM.policy.p1)var precinctsSize=data[j];JAM.call(precinctsSizes.push,precinctsSizes,[{PPx:precinctsSize&15,PPy:precinctsSize>>4}]);v559=j<length+
position}cod.precinctsSizes=precinctsSizes}var v6482=cod.sopMarkerUsed;if(!v6482){var v21110=cod.ephMarkerUsed;if(!v21110){var v22406=cod.selectiveArithmeticCodingBypass;if(!v22406){var v22938=cod.resetContextProbabilities;if(!v22938){var v23109=cod.terminationOnEachCodingPass;if(!v23109){var v23174=cod.verticalyStripe;if(!v23174){var v23207=cod.predictableTermination;v23207||(v23207=cod.segmentationSymbolUsed);v23174=v23207}v23109=v23174}v22938=v23109}v22406=v22938}v21110=v22406}v6482=v21110}if(v6482)throw"Unsupported COD options: "+
JAM.call(uneval,null,[cod]);context.mainHeader?context.COD=cod:(context.currentTile.COD=cod,context.currentTile.COC=[]);break;case 65424:var length=readUint16(data,position),tile$$0={},v566=tile$$0,v23381=readUint16(data,position+2);v566.index=v23381;var v567=tile$$0,v23382=readUint32(data,position+4);v567.length=v23382;tile$$0.dataEnd=tile$$0.length+position-2;var v569=position+8;introspect(JAM.policy.p1)tile$$0.partIndex=data[v569];var v570=position+9;introspect(JAM.policy.p1)tile$$0.partsCount=
data[v570];context.mainHeader=!1;if(0==tile$$0.partIndex){tile$$0.COD=context.COD;var v571=tile$$0,v23383=context.COC.slice(0);v571.COC=v23383;tile$$0.QCD=context.QCD;var v572=tile$$0,v23384=context.QCC.slice(0);v572.QCC=v23384}context.currentTile=tile$$0;break;case 65427:tile$$0=context.currentTile;if(0==tile$$0.partIndex){var context$$1=context,siz$$2=context$$1.SIZ,componentsCount$$1=siz$$2.Csiz,v574=context$$1.tiles,v575=tile$$0.index;introspect(JAM.policy.p1)var tile$$1=v574[v575];for(var c=
0,v579=c<componentsCount$$1;v579;){var v576=tile$$1.components;introspect(JAM.policy.p1)var component$$2=v576[c];var v577,qcdOrQcc=v577=c in context$$1.currentTile.QCC?context$$1.currentTile.QCC[c]:context$$1.currentTile.QCD;component$$2.quantizationParameters=qcdOrQcc;var v578,codOrCoc=v578=c in context$$1.currentTile.COC?context$$1.currentTile.COC[c]:context$$1.currentTile.COD;component$$2.codingStyleParameters=codOrCoc;c+=1;v579=c<componentsCount$$1}tile$$1.codingStyleDefaultParameters=context$$1.currentTile.COD;
var context$$2=context,siz$$3=context$$2.SIZ,tileIndex=context$$2.currentTile.index,v582=context$$2.tiles;introspect(JAM.policy.p1)var tile$$2=v582[tileIndex];for(var componentsCount$$2=siz$$3.Csiz,c$$0=0,v620=c$$0<componentsCount$$2;v620;){var v583=tile$$2.components;introspect(JAM.policy.p1)var component$$3=v583[c$$0];for(var decompositionLevelsCount=component$$3.codingStyleParameters.decompositionLevelsCount,resolutions=[],subbands=[],r=0,v619=r<=decompositionLevelsCount;v619;){var blocksDimensions,
r$$0=r,codOrCoc$$0=component$$3.codingStyleParameters,result={};if(codOrCoc$$0.entropyCoderWithCustomPrecincts){var v6497=codOrCoc$$0.precinctsSizes;introspect(JAM.policy.p1)var v585=v6497[r$$0];result.PPx=v585.PPx;var v6498=codOrCoc$$0.precinctsSizes;introspect(JAM.policy.p1)var v586=v6498[r$$0];result.PPy=v586.PPy}else result.PPx=15,result.PPy=15;var v588=result,v6499;v6499=0<r$$0?Math.min(codOrCoc$$0.xcb,result.PPx-1):Math.min(codOrCoc$$0.xcb,result.PPx);v588.xcb_=v6499;var v589=result,v6500;v6500=
0<r$$0?Math.min(codOrCoc$$0.ycb,result.PPy-1):Math.min(codOrCoc$$0.ycb,result.PPy);v589.ycb_=v6500;blocksDimensions=result;var resolution={},scale=1<<decompositionLevelsCount-r,v591=resolution,v23385=Math.ceil(component$$3.tcx0/scale);v591.trx0=v23385;var v592=resolution,v23386=Math.ceil(component$$3.tcy0/scale);v592.try0=v23386;var v593=resolution,v23387=Math.ceil(component$$3.tcx1/scale);v593.trx1=v23387;var v594=resolution,v23388=Math.ceil(component$$3.tcy1/scale);v594.try1=v23388;var resolution$$0=
resolution,precinctWidth=1<<blocksDimensions.PPx,precinctHeight=1<<blocksDimensions.PPy,v597,numprecinctswide=v597=resolution$$0.trx1>resolution$$0.trx0?Math.ceil(resolution$$0.trx1/precinctWidth)-Math.floor(resolution$$0.trx0/precinctWidth):0,v598,numprecinctshigh=v598=resolution$$0.try1>resolution$$0.try0?Math.ceil(resolution$$0.try1/precinctHeight)-Math.floor(resolution$$0.try0/precinctHeight):0,numprecincts=numprecinctswide*numprecinctshigh,precinctXOffset=Math.floor(resolution$$0.trx0/precinctWidth)*
precinctWidth,precinctYOffset=Math.floor(resolution$$0.try0/precinctHeight)*precinctHeight;resolution$$0.precinctParameters={precinctXOffset:precinctXOffset,precinctYOffset:precinctYOffset,precinctWidth:precinctWidth,precinctHeight:precinctHeight,numprecinctswide:numprecinctswide,numprecinctshigh:numprecinctshigh,numprecincts:numprecincts};JAM.call(resolutions.push,resolutions,[resolution]);var subband;if(0==r){var v601=subband={type:"LL"},v23389=Math.ceil(component$$3.tcx0/scale);v601.tbx0=v23389;
var v602=subband,v23390=Math.ceil(component$$3.tcy0/scale);v602.tby0=v23390;var v603=subband,v23391=Math.ceil(component$$3.tcx1/scale);v603.tbx1=v23391;var v604=subband,v23392=Math.ceil(component$$3.tcy1/scale);v604.tby1=v23392;subband.resolution=resolution;buildCodeblocks(context$$2,subband,blocksDimensions);JAM.call(subbands.push,subbands,[subband]);resolution.subbands=[subband]}else{var bscale=1<<decompositionLevelsCount-r+1,resolutionSubbands=[],v606=subband={type:"HL"},v23393=Math.ceil(component$$3.tcx0/
bscale-0.5);v606.tbx0=v23393;var v607=subband,v23394=Math.ceil(component$$3.tcy0/bscale);v607.tby0=v23394;var v608=subband,v23395=Math.ceil(component$$3.tcx1/bscale-0.5);v608.tbx1=v23395;var v609=subband,v23396=Math.ceil(component$$3.tcy1/bscale);v609.tby1=v23396;subband.resolution=resolution;buildCodeblocks(context$$2,subband,blocksDimensions);JAM.call(subbands.push,subbands,[subband]);JAM.call(resolutionSubbands.push,resolutionSubbands,[subband]);var v610=subband={type:"LH"},v23397=Math.ceil(component$$3.tcx0/
bscale);v610.tbx0=v23397;var v611=subband,v23398=Math.ceil(component$$3.tcy0/bscale-0.5);v611.tby0=v23398;var v612=subband,v23399=Math.ceil(component$$3.tcx1/bscale);v612.tbx1=v23399;var v613=subband,v23400=Math.ceil(component$$3.tcy1/bscale-0.5);v613.tby1=v23400;subband.resolution=resolution;buildCodeblocks(context$$2,subband,blocksDimensions);JAM.call(subbands.push,subbands,[subband]);JAM.call(resolutionSubbands.push,resolutionSubbands,[subband]);var v614=subband={type:"HH"},v23401=Math.ceil(component$$3.tcx0/
bscale-0.5);v614.tbx0=v23401;var v615=subband,v23402=Math.ceil(component$$3.tcy0/bscale-0.5);v615.tby0=v23402;var v616=subband,v23403=Math.ceil(component$$3.tcx1/bscale-0.5);v616.tbx1=v23403;var v617=subband,v23404=Math.ceil(component$$3.tcy1/bscale-0.5);v617.tby1=v23404;subband.resolution=resolution;buildCodeblocks(context$$2,subband,blocksDimensions);JAM.call(subbands.push,subbands,[subband]);JAM.call(resolutionSubbands.push,resolutionSubbands,[subband]);resolution.subbands=resolutionSubbands}r+=
1;v619=r<=decompositionLevelsCount}component$$3.resolutions=resolutions;component$$3.subbands=subbands;c$$0+=1;v620=c$$0<componentsCount$$2}var progressionOrder=tile$$2.codingStyleDefaultParameters.progressionOrder;switch(progressionOrder){case 0:var v622=tile$$2,v23405=new LayerResolutionComponentPositionIterator(context$$2);v622.packetsIterator=v23405;break;case 1:var v623=tile$$2,v23406=new ResolutionLayerComponentPositionIterator(context$$2);v623.packetsIterator=v23406;break;default:throw"Unsupported progression order "+
progressionOrder;}}length=tile$$0.dataEnd-position;parseTilePackets(context,data,position,length);break;case 65380:length=readUint16(data,position);break;default:throw"Unknown codestream code: "+JAM.call(code.toString,code,[16]);}position+=length;v627=position<end}}catch(e){this.failOnCorruptedImage?error$$1("JPX error: "+e):warn("JPX error: "+e+". Trying to recover")}for(var JSCompiler_inline_result,context$$3=context,siz$$4=context$$3.SIZ,components$$1=context$$3.components,componentsCount$$3=siz$$4.Csiz,
resultImages=[],i$$1=0,ii$$0=context$$3.tiles.length,v709=i$$1<ii$$0;v709;){var v632=context$$3.tiles;introspect(JAM.policy.p1)var tile$$3=v632[i$$1];for(var result$$0=[],c$$1=0,v690=c$$1<componentsCount$$3;v690;){var image,v633=tile$$3.components;introspect(JAM.policy.p1)var component$$4=v633[c$$1];var codingStyleParameters=component$$4.codingStyleParameters,quantizationParameters=component$$4.quantizationParameters,decompositionLevelsCount$$0=codingStyleParameters.decompositionLevelsCount,spqcds$$0=
quantizationParameters.SPqcds,scalarExpounded$$0=quantizationParameters.scalarExpounded,guardBits=quantizationParameters.guardBits,transformation=codingStyleParameters.transformation,v6531=context$$3.components;introspect(JAM.policy.p1)var v634=v6531[c$$1];for(var precision=v634.precision,subbandCoefficients=[],b=0,i$$2=0,v681=i$$2<=decompositionLevelsCount$$0;v681;){var v635=component$$4.resolutions;introspect(JAM.policy.p1)var resolution$$1=v635[i$$2];for(var j$$1=0,jj$$0=resolution$$1.subbands.length,
v680=j$$1<jj$$0;v680;){var mu,epsilon;if(scalarExpounded$$0){introspect(JAM.policy.p1)var v640=spqcds$$0[b];mu=v640.mu;introspect(JAM.policy.p1)var v641=spqcds$$0[b];epsilon=v641.epsilon}else{mu=spqcds$$0[0].mu;var v638=spqcds$$0[0].epsilon,v6533;v6533=0<i$$2?1-i$$2:0;epsilon=v638+v6533}var v643=resolution$$1.subbands;introspect(JAM.policy.p1)var subband$$0=v643[j$$1];var width=subband$$0.tbx1-subband$$0.tbx0,height=subband$$0.tby1-subband$$0.tby0,v648=subband$$0.type;introspect(JAM.policy.p1)var gainLog2=
SubbandsGainLog2[v648];for(var delta=Math.pow(2,precision+gainLog2-epsilon)*(1+mu/2048),mb=guardBits+epsilon-1,coefficients=new Float32Array(width*height),coefficients$$0=coefficients,x0=subband$$0.tbx0,y0=subband$$0.tby0,width$$0=width,delta$$0=delta,mb$$0=mb,codeblocks=subband$$0.codeblocks,transformation$$0=transformation,r$$1=0.5,i$$3=0,ii$$1=codeblocks.length,v678=i$$3<ii$$1;v678;){introspect(JAM.policy.p1)var codeblock=codeblocks[i$$3];var blockWidth=codeblock.tbx1_-codeblock.tbx0_,blockHeight=
codeblock.tby1_-codeblock.tby0_,v6536=0==blockWidth;v6536||(v6536=0==blockHeight);if(!v6536&&"data"in codeblock){var bitModel,currentCodingpassType;bitModel=JAM.new(BitModel,[blockWidth,blockHeight,codeblock.subbandType,codeblock.zeroBitPlanes]);currentCodingpassType=2;for(var data$$0=codeblock.data,totalLength=0,codingpasses=0,q$$0=0,qq=data$$0.length,v661=q$$0<qq;v661;){introspect(JAM.policy.p1)var dataItem=data$$0[q$$0];totalLength+=dataItem.end-dataItem.start;codingpasses+=dataItem.codingpasses;
q$$0+=1;v661=q$$0<qq}for(var encodedData=new Uint8Array(totalLength),k=0,q$$0=0,qq=data$$0.length,v665=q$$0<qq;v665;){var dataItem=data$$0[q$$0],chunk=dataItem.data.subarray(dataItem.start,dataItem.end);JAM.call(encodedData.set,encodedData,[chunk,k]);k+=chunk.length;q$$0+=1;v665=q$$0<qq}var decoder=JAM.new(ArithmeticDecoder,[encodedData,0,totalLength]);JAM.call(bitModel.setDecoder,bitModel,[decoder]);for(var q$$0=0,v667=q$$0<codingpasses;v667;){switch(currentCodingpassType){case 0:bitModel.runSignificancePropogationPass();
break;case 1:bitModel.runMagnitudeRefinementPass();break;case 2:bitModel.runCleanupPass()}currentCodingpassType=(currentCodingpassType+1)%3;q$$0+=1;v667=q$$0<codingpasses}for(var offset=codeblock.tbx0_-x0+(codeblock.tby0_-y0)*width$$0,position$$0=0,j$$2=0,v677=j$$2<blockHeight;v677;){for(var k=0,v676=k<blockWidth;v676;){var v6543,v22424=bitModel.coefficentsSign;introspect(JAM.policy.p1)var v21162=v22424[position$$0];var v670=v6543=v21162?-1:1,v6544=bitModel.coefficentsMagnitude;introspect(JAM.policy.p1)var v671=
v6544[position$$0];var n=v670*v671,v672=bitModel.bitsDecoded;introspect(JAM.policy.p1)var nb=v672[position$$0];var correction,v6545=0==transformation$$0;v6545||(v6545=mb$$0>nb);if(v6545){var v21164;if(0>n)v21164=n-r$$1;else{var v22425;v21164=v22425=0<n?n+r$$1:0}n+=v21164;correction=1<<mb$$0-nb}else correction=1;var v675=offset,offset=offset+1;coefficients$$0[v675]=n*correction*delta$$0;position$$0+=1;k+=1;v676=k<blockWidth}offset+=width$$0-blockWidth;j$$2+=1;v677=j$$2<blockHeight}}i$$3+=1;v678=i$$3<
ii$$1}JAM.call(subbandCoefficients.push,subbandCoefficients,[{width:width,height:height,items:coefficients}]);b+=1;j$$1+=1;v680=j$$1<jj$$0}i$$2+=1;v681=i$$2<=decompositionLevelsCount$$0}var transformation=codingStyleParameters.transformation,v682,transform=v682=0==transformation?new IrreversibleTransform:new ReversibleTransform,result$$1=JAM.call(transform.calculate,transform,[subbandCoefficients,component$$4.tcx0,component$$4.tcy0]);image={left:component$$4.tcx0,top:component$$4.tcy0,width:result$$1.width,
height:result$$1.height,items:result$$1.items};JAM.call(result$$0.push,result$$0,[image]);c$$1+=1;v690=c$$1<componentsCount$$3}if(tile$$3.codingStyleDefaultParameters.multipleComponentTransform)for(var y0items=result$$0[0].items,y1items=result$$0[1].items,y2items=result$$0[2].items,j$$3=0,jj$$1=y0items.length,v695=j$$3<jj$$1;v695;){introspect(JAM.policy.p1)var y0$$0=y0items[j$$3];introspect(JAM.policy.p1)var y1=y1items[j$$3];introspect(JAM.policy.p1)var y2=y2items[j$$3];var i1=y0$$0-(y2+y1>>2);y1items[j$$3]=
i1;y0items[j$$3]=y2+i1;y2items[j$$3]=y1+i1;j$$3+=1;v695=j$$3<jj$$1}for(var c$$1=0,v700=c$$1<componentsCount$$3;v700;){introspect(JAM.policy.p1)var component$$5=components$$1[c$$1];if(!component$$5.isSigned){var offset$$0=1<<component$$5.precision-1;introspect(JAM.policy.p1)var tileImage=result$$0[c$$1];for(var items=tileImage.items,j$$3=0,jj$$1=items.length,v699=j$$3<jj$$1;v699;){introspect(JAM.policy.p1)var v6553=items[j$$3];items[j$$3]=v6553+offset$$0;j$$3+=1;v699=j$$3<jj$$1}}c$$1+=1;v700=c$$1<
componentsCount$$3}for(var c$$1=0,v708=c$$1<componentsCount$$3;v708;){for(var component$$5=components$$1[c$$1],v701,offset$$0=v701=component$$5.isSigned?128:0,shift=component$$5.precision-8,tileImage=result$$0[c$$1],items=tileImage.items,data$$1=new Uint8Array(items.length),j$$3=0,jj$$1=items.length,v706=j$$3<jj$$1;v706;){introspect(JAM.policy.p1)var v6555=items[j$$3];var value=(v6555>>shift)+offset$$0,v705;if(0>value)v705=0;else{var v6556;v705=v6556=255<value?255:value}data$$1[j$$3]=v705;j$$3+=1;
v706=j$$3<jj$$1}introspect(JAM.policy.p1)var v707=result$$0[c$$1];v707.items=data$$1;c$$1+=1;v708=c$$1<componentsCount$$3}JAM.call(resultImages.push,resultImages,[result$$0]);i$$1+=1;v709=i$$1<ii$$0}this.tiles=JSCompiler_inline_result=resultImages;this.width=context.SIZ.Xsiz-context.SIZ.XOsiz;this.height=context.SIZ.Ysiz-context.SIZ.YOsiz;this.componentsCount=context.SIZ.Csiz}function JpxImage_parse(data$$0){function ReadUint(data,offset,bytes){for(var n=0,i=0,v717=i<bytes;v717;){n*=256;v717=offset+
i;introspect(JAM.policy.p1)v717=data[v717];n+=v717&255;i+=1;v717=i<bytes}return n}for(var position=0,length=data$$0.length,v724=position<length;v724;){var headerSize=8,lbox=ReadUint(data$$0,position,4),v724=ReadUint(data$$0,position+4,4),position=position+headerSize;1==lbox&&(lbox=ReadUint(data$$0,position,8),position+=8,headerSize+=8);0==lbox&&(lbox=length-position+headerSize);lbox<headerSize&&error$$1("JPX error: Invalid box field size");headerSize=lbox-headerSize;lbox=!0;switch(v724){case 1785737832:lbox=
!1;break;case 1785737827:JAM.call(this.parseCodestream,this,[data$$0,position,position+headerSize])}lbox&&(position+=headerSize);v724=position<length}}function JpxImage_load(url){function v88(){var v6563=xhr.response;v6563||(v6563=xhr.mozResponseArrayBuffer);v6563=new Uint8Array(v6563);JAM.call(this.parse,this,[v6563]);if(this.onload)this.onload()}var xhr=new PdfJS_window.XMLHttpRequest;JAM.call(JAM.get(xhr,"open",JAM.policy.p1),xhr,["GET",url,!0]);xhr.responseType="arraybuffer";url=xhr;var v23407=
JAM.call(v88.bind,v88,[this]);JAM.set(url,"onload",v23407);JAM.call(xhr.send,xhr,[null])}function JpxImage(){this.failOnCorruptedImage=!1}function readUint32(data,offset){introspect(JAM.policy.p1)var v22427=data[offset];var v22427=v22427<<24,v22941=offset+1;introspect(JAM.policy.p1)v22941=data[v22941];v22427|=v22941<<16;v22941=offset+2;introspect(JAM.policy.p1)v22941=data[v22941];v22427|=v22941<<8;v22941=offset+3;introspect(JAM.policy.p1)v22941=data[v22941];return v22427|v22941}function readUint16(data,
offset){introspect(JAM.policy.p1)var v6567=data[offset];var v6567=v6567<<8,v6568=offset+1;introspect(JAM.policy.p1)v6568=data[v6568];return v6567|v6568}function log2(x){for(var n=1,i=0,v733=x>n;v733;)n<<=1,i+=1,v733=x>n;return i}function buildCodeblocks(context,subband,dimensions){context=dimensions.xcb_;var ycb_=dimensions.ycb_,codeblockWidth=1<<context,codeblockHeight=1<<ycb_,cbx0=Math.floor(subband.tbx0/codeblockWidth),cby0=Math.floor(subband.tby0/codeblockHeight),cbx1=Math.ceil(subband.tbx1/codeblockWidth),
cby1=Math.ceil(subband.tby1/codeblockHeight),precinctParameters=subband.resolution.precinctParameters,codeblocks=[];dimensions=[];for(var j=cby0,cby0=j<cby1;cby0;){for(var cby0=cbx0,v757=cby0<cbx1;v757;){var v757={cbx:cby0,cby:j,tbx0:codeblockWidth*cby0,tby0:codeblockHeight*j,tbx1:codeblockWidth*(cby0+1),tby1:codeblockHeight*(j+1)},pi=Math.floor((v757.tbx0-precinctParameters.precinctXOffset)/precinctParameters.precinctWidth),pj=Math.floor((v757.tby0-precinctParameters.precinctYOffset)/precinctParameters.precinctHeight),
pi=pj+pi*precinctParameters.numprecinctswide,pj=v757,v23408=Math.max(subband.tbx0,v757.tbx0);pj.tbx0_=v23408;pj=v757;v23408=Math.max(subband.tby0,v757.tby0);pj.tby0_=v23408;pj=v757;v23408=Math.min(subband.tbx1,v757.tbx1);pj.tbx1_=v23408;pj=v757;v23408=Math.min(subband.tby1,v757.tby1);pj.tby1_=v23408;v757.precinctNumber=pi;v757.subbandType=subband.type;v757.Lblock=3;JAM.call(codeblocks.push,codeblocks,[v757]);pi in dimensions?(pj=pi=dimensions[pi],v23408=Math.min(pi.cbxMin,cby0),pj.cbxMin=v23408,pj=
pi,v23408=Math.min(pi.cbyMin,j),pj.cbyMin=v23408,pj=pi,v23408=Math.max(pi.cbxMax,cby0),pj.cbxMax=v23408,pj=pi,v23408=Math.max(pi.cbyMax,j),pj.cbyMax=v23408):dimensions[pi]=pi={cbxMin:cby0,cbyMin:j,cbxMax:cby0,cbyMax:j};v757.precinct=pi;cby0+=1;v757=cby0<cbx1}j+=1;cby0=j<cby1}subband.codeblockParameters={codeblockWidth:context,codeblockHeight:ycb_,numcodeblockwide:cbx1-cbx0+1,numcodeblockhigh:cby1-cby1+1};subband.codeblocks=codeblocks;cby0=0;context=codeblocks.length;for(ycb_=cby0<context;ycb_;)cby0+=
1,ycb_=cby0<context;subband.precincts=dimensions}function createPacket(resolution,precinctNumber,layerNumber){var precinctCodeblocks=[];resolution=resolution.subbands;for(var i=0,ii=resolution.length,v764=i<ii;v764;){introspect(JAM.policy.p1)v764=resolution[i];for(var v764=v764.codeblocks,j=0,jj=v764.length,v763=j<jj;v763;){introspect(JAM.policy.p1)v763=v764[j];v763.precinctNumber==precinctNumber&&JAM.call(precinctCodeblocks.push,precinctCodeblocks,[v763]);j+=1;v763=j<jj}i+=1;v764=i<ii}return{layerNumber:layerNumber,
codeblocks:precinctCodeblocks}}function LayerResolutionComponentPositionIterator(context){function JpxImage_nextPacket(){for(var v772=l<layersCount;v772;){for(v772=r<=maxDecompositionLevelsCount;v772;){for(v772=i<componentsCount;v772;){v772=tile.components;introspect(JAM.policy.p1)v772=v772[i];if(!(r>v772.codingStyleParameters.decompositionLevelsCount)){v772=v772.resolutions;introspect(JAM.policy.p1)v772=v772[r];for(var numprecincts=v772.precinctParameters.numprecincts,numprecincts=k<numprecincts;numprecincts;)return v772=
createPacket(v772,k,l),k+=1,v772;k=0}i+=1;v772=i<componentsCount}i=0;r+=1;v772=r<=maxDecompositionLevelsCount}r=0;l+=1;v772=l<layersCount}throw"Out of packets";}var siz=context.SIZ,tileIndex=context.currentTile.index;context=context.tiles;introspect(JAM.policy.p1)var tile=context[tileIndex];for(var layersCount=tile.codingStyleDefaultParameters.layersCount,componentsCount=siz.Csiz,maxDecompositionLevelsCount=0,siz=0,tileIndex=siz<componentsCount;tileIndex;){tileIndex=tile.components;introspect(JAM.policy.p1)tileIndex=
tileIndex[siz];maxDecompositionLevelsCount=Math.max(maxDecompositionLevelsCount,tileIndex.codingStyleParameters.decompositionLevelsCount);siz+=1;tileIndex=siz<componentsCount}var l=0,r=0,i=0,k=0;this.nextPacket=JpxImage_nextPacket}function ResolutionLayerComponentPositionIterator(context){function JpxImage_nextPacket(){for(var v785=r<=maxDecompositionLevelsCount;v785;){for(v785=l<layersCount;v785;){for(v785=i<componentsCount;v785;){v785=tile.components;introspect(JAM.policy.p1)v785=v785[i];if(!(r>
v785.codingStyleParameters.decompositionLevelsCount)){v785=v785.resolutions;introspect(JAM.policy.p1)v785=v785[r];for(var numprecincts=v785.precinctParameters.numprecincts,numprecincts=k<numprecincts;numprecincts;)return v785=createPacket(v785,k,l),k+=1,v785;k=0}i+=1;v785=i<componentsCount}i=0;l+=1;v785=l<layersCount}l=0;r+=1;v785=r<=maxDecompositionLevelsCount}throw"Out of packets";}var siz=context.SIZ,tileIndex=context.currentTile.index;context=context.tiles;introspect(JAM.policy.p1)var tile=context[tileIndex];
for(var layersCount=tile.codingStyleDefaultParameters.layersCount,componentsCount=siz.Csiz,maxDecompositionLevelsCount=0,siz=0,tileIndex=siz<componentsCount;tileIndex;){tileIndex=tile.components;introspect(JAM.policy.p1)tileIndex=tileIndex[siz];maxDecompositionLevelsCount=Math.max(maxDecompositionLevelsCount,tileIndex.codingStyleParameters.decompositionLevelsCount);siz+=1;tileIndex=siz<componentsCount}var r=0,l=0,i=0,k=0;this.nextPacket=JpxImage_nextPacket}function parseTilePackets(context,data,offset,
dataLength){function readBits(count){for(var v795=bufferSize<count;v795;){v795=offset+position;introspect(JAM.policy.p1)v795=data[v795];position+=1;skipNextBit?(buffer=buffer<<7|v795,bufferSize+=7,skipNextBit=!1):(buffer=buffer<<8|v795,bufferSize+=8);255==v795&&(skipNextBit=!0);v795=bufferSize<count}bufferSize-=count;return buffer>>>bufferSize&(1<<count)-1}function readCodingpasses(){var value=readBits(1);if(0==value)return 1;value=value<<1|readBits(1);if(2==value)return 2;value=value<<2|readBits(2);
if(14>=value)return(value&3)+3;value=value<<5|readBits(5);if(510>=value)return(value&31)+6;value=value<<7|readBits(7);return(value&127)+37}var position=0,buffer,bufferSize=0,skipNextBit=!1,tileIndex=context.currentTile.index;context=context.tiles;introspect(JAM.policy.p1)tileIndex=context[tileIndex];tileIndex=tileIndex.packetsIterator;for(context=position<dataLength;context;){var packet=tileIndex.nextPacket();if(readBits(1)){var layerNumber=packet.layerNumber;context=[];for(var i=0,ii=packet.codeblocks.length,
v837=i<ii;v837;){v837=packet.codeblocks;introspect(JAM.policy.p1)v837=v837[i];var precinct=v837.precinct,codeblockColumn=v837.cbx-precinct.cbxMin,codeblockRow=v837.cby-precinct.cbyMin,codeblockIncluded=!1,firstTimeInclusion=!1;if("included"in v837)codeblockIncluded=!!readBits(1);else{var precinct=v837.precinct,inclusionTree,zeroBitPlanesTree;if("inclusionTree"in precinct)inclusionTree=precinct.inclusionTree;else{zeroBitPlanesTree=precinct.cbxMax-precinct.cbxMin+1;var height=precinct.cbyMax-precinct.cbyMin+
1;inclusionTree=JAM.new(InclusionTree,[zeroBitPlanesTree,height,layerNumber]);zeroBitPlanesTree=JAM.new(TagTree,[zeroBitPlanesTree,height]);precinct.inclusionTree=inclusionTree;precinct.zeroBitPlanesTree=zeroBitPlanesTree}if(JAM.call(inclusionTree.reset,inclusionTree,[codeblockColumn,codeblockRow,layerNumber]))for(;;)if(readBits(1)){if(height=!inclusionTree.nextLevel()){codeblockIncluded=firstTimeInclusion=v837.included=!0;break}}else{JAM.call(inclusionTree.incrementValue,inclusionTree,[layerNumber]);
break}}if(codeblockIncluded){if(firstTimeInclusion){zeroBitPlanesTree=precinct.zeroBitPlanesTree;for(JAM.call(zeroBitPlanesTree.reset,zeroBitPlanesTree,[codeblockColumn,codeblockRow]);;)if(readBits(1)){if(height=!zeroBitPlanesTree.nextLevel())break}else zeroBitPlanesTree.incrementValue();v837.zeroBitPlanes=zeroBitPlanesTree.value}precinct=readCodingpasses();for(codeblockColumn=readBits(1);codeblockColumn;)v837.Lblock+=1,codeblockColumn=readBits(1);codeblockColumn=log2(precinct);codeblockColumn=precinct<
1<<codeblockColumn?codeblockColumn-1:codeblockColumn;codeblockColumn+=v837.Lblock;codeblockColumn=readBits(codeblockColumn);JAM.call(context.push,context,[{codeblock:v837,codingpasses:precinct,dataLength:codeblockColumn}])}i+=1;v837=i<ii}bufferSize=0;skipNextBit&&(position+=1,skipNextBit=!1);for(packet=0<context.length;packet;)packet=context.shift(),v837=packet.codeblock,"data"in v837||(v837.data=[]),layerNumber=v837.data,JAM.call(layerNumber.push,layerNumber,[{data:data,start:offset+position,end:offset+
position+packet.dataLength,codingpasses:packet.codingpasses}]),position+=packet.dataLength,packet=0<context.length}else bufferSize=0,skipNextBit&&(position+=1,skipNextBit=!1);context=position<dataLength}}var SubbandsGainLog2={LL:0,LH:1,HL:1,HH:2};JpxImage.prototype={load:JpxImage_load,parse:JpxImage_parse,parseCodestream:JpxImage_parseCodestream};var TagTree=TagTreeClosure(),InclusionTree=InclusionTreeClosure(),ArithmeticDecoder=ArithmeticDecoderClosure(),BitModel=BitModelClosure(),Transform=TransformClosure(),
IrreversibleTransform=IrreversibleTransformClosure(),ReversibleTransform=ReversibleTransformClosure();return JpxImage}function jpegImage$$0(){function copyToImageData(imageData){var width=imageData.width,height=imageData.height;imageData=imageData.data;var data=JAM.call(this.getData,this,[width,height]),i=0,j=0,x,y,Y,K,C,M;switch(this.components.length){case 1:y=0;for(x=y<height;x;){x=0;for(Y=x<width;Y;)Y=i,i+=1,Y=data[Y],C=j,j+=1,imageData[C]=Y,C=j,j+=1,imageData[C]=Y,C=j,j+=1,imageData[C]=Y,Y=j,
j+=1,imageData[Y]=255,x+=1,Y=x<width;y+=1;x=y<height}break;case 3:y=0;for(x=y<height;x;){x=0;for(Y=x<width;Y;)Y=i,i+=1,C=data[Y],Y=i,i+=1,M=data[Y],Y=i,i+=1,Y=data[Y],K=j,j+=1,imageData[K]=C,C=j,j+=1,imageData[C]=M,C=j,j+=1,imageData[C]=Y,Y=j,j+=1,imageData[Y]=255,x+=1,Y=x<width;y+=1;x=y<height}break;case 4:y=0;for(x=y<height;x;){x=0;for(Y=x<width;Y;)Y=i,i+=1,C=data[Y],Y=i,i+=1,M=data[Y],Y=i,i+=1,Y=data[Y],K=i,i+=1,K=data[K],C=255-JAM.call(clampTo8bit,null,[C*(1-K/255)+K]),M=255-JAM.call(clampTo8bit,
null,[M*(1-K/255)+K]),Y=255-JAM.call(clampTo8bit,null,[Y*(1-K/255)+K]),K=j,j+=1,imageData[K]=C,C=j,j+=1,imageData[C]=M,C=j,j+=1,imageData[C]=Y,Y=j,j+=1,imageData[Y]=255,x+=1,Y=x<width;y+=1;x=y<height}break;default:throw"Unsupported color mode";}}function getData(width,height){function clampTo8bit(a){return a=0>a?0:255<a?255:a}var scaleX=this.width/width,scaleY=this.height/height,component1,component2,component3,component4,component1Line,component2Line,component3Line,component4Line,x,y,offset=0,Y,
Cb,Cr,K,C,colorTransform,dataLength=width*height*this.components.length,dataLength=new Uint8Array(dataLength);switch(this.components.length){case 1:component1=this.components[0];y=0;for(colorTransform=y<height;colorTransform;){component1Line=component1.lines[0|y*component1.scaleY*scaleY];x=0;for(colorTransform=x<width;colorTransform;)Y=component1Line[0|x*component1.scaleX*scaleX],colorTransform=offset,offset+=1,dataLength[colorTransform]=Y,x+=1,colorTransform=x<width;y+=1;colorTransform=y<height}break;
case 3:colorTransform=!0;if(component1=this.adobe)component1=this.adobe.transformCode;component1?colorTransform=!0:"undefined"!==typeof this.colorTransform&&(colorTransform=!!this.colorTransform);component1=this.components[0];component2=this.components[1];component3=this.components[2];y=0;for(component1Line=y<height;component1Line;){component1Line=component1.lines[0|y*component1.scaleY*scaleY];component2Line=component2.lines[0|y*component2.scaleY*scaleY];component3Line=component3.lines[0|y*component3.scaleY*
scaleY];x=0;for(component4=x<width;component4;)colorTransform?(Y=component1Line[0|x*component1.scaleX*scaleX],Cb=component2Line[0|x*component2.scaleX*scaleX],Cr=component3Line[0|x*component3.scaleX*scaleX],component4=clampTo8bit(Y+1.402*(Cr-128)),component4Line=clampTo8bit(Y-0.3441363*(Cb-128)-0.71413636*(Cr-128)),K=clampTo8bit(Y+1.772*(Cb-128))):(component4=component1Line[0|x*component1.scaleX*scaleX],component4Line=component2Line[0|x*component2.scaleX*scaleX],K=component3Line[0|x*component3.scaleX*
scaleX]),Y=offset,offset+=1,dataLength[Y]=component4,component4=offset,offset+=1,dataLength[component4]=component4Line,component4=offset,offset+=1,dataLength[component4]=K,x+=1,component4=x<width;y+=1;component1Line=y<height}break;case 4:if(!this.adobe)throw"Unsupported color mode (4 components)";colorTransform=!1;if(component1=this.adobe)component1=this.adobe.transformCode;component1?colorTransform=!0:"undefined"!==typeof this.colorTransform&&(colorTransform=!!this.colorTransform);component1=this.components[0];
component2=this.components[1];component3=this.components[2];component4=this.components[3];y=0;for(component1Line=y<height;component1Line;){component1Line=component1.lines[0|y*component1.scaleY*scaleY];component2Line=component2.lines[0|y*component2.scaleY*scaleY];component3Line=component3.lines[0|y*component3.scaleY*scaleY];component4Line=component4.lines[0|y*component4.scaleY*scaleY];x=0;for(K=x<width;K;)colorTransform?(Y=component1Line[0|x*component1.scaleX*scaleX],Cb=component2Line[0|x*component2.scaleX*
scaleX],Cr=component3Line[0|x*component3.scaleX*scaleX],K=component4Line[0|x*component4.scaleX*scaleX],C=255-clampTo8bit(Y+1.402*(Cr-128)),Cr=255-clampTo8bit(Y-0.3441363*(Cb-128)-0.71413636*(Cr-128)),Y=255-clampTo8bit(Y+1.772*(Cb-128))):(C=component1Line[0|x*component1.scaleX*scaleX],Cr=component2Line[0|x*component2.scaleX*scaleX],Y=component3Line[0|x*component3.scaleX*scaleX],K=component4Line[0|x*component4.scaleX*scaleX]),Cb=offset,offset+=1,dataLength[Cb]=C,Cb=offset,offset+=1,dataLength[Cb]=Cr,
Cb=offset,offset+=1,dataLength[Cb]=Y,Y=offset,offset+=1,dataLength[Y]=K,x+=1,K=x<width;y+=1;component1Line=y<height}break;default:throw"Unsupported color mode";}return dataLength}function parse(data){function readUint16(){introspect(JAM.policy.p1)var v6664=data[offset];var v6664=v6664<<8,v6665=offset+1;introspect(JAM.policy.p1)v6665=data[v6665];v6664|=v6665;offset+=2;return v6664}function readDataBlock(){var length=readUint16(),length=data.subarray(offset,offset+length-2);offset+=length.length;return length}
function prepareComponents(frame){var maxH=0,maxV=0,component,componentId;for(componentId in frame.components)if(frame.components.hasOwnProperty(componentId)){var v950=frame.components;introspect(JAM.policy.p1)component=v950[componentId];maxH<component.h&&(maxH=component.h);maxV<component.v&&(maxV=component.v)}var v950=Math.ceil(frame.samplesPerLine/8/maxH),mcusPerColumn=Math.ceil(frame.scanLines/8/maxV);for(componentId in frame.components)if(frame.components.hasOwnProperty(componentId)){component=
frame.components;introspect(JAM.policy.p1)component=component[componentId];for(var blocksPerLine=Math.ceil(Math.ceil(frame.samplesPerLine/8)*component.h/maxH),blocksPerColumn=Math.ceil(Math.ceil(frame.scanLines/8)*component.v/maxV),blocksPerLineForMcu=v950*component.h,blocksPerColumnForMcu=mcusPerColumn*component.v,blocks=[],i=0,v964=i<blocksPerColumnForMcu;v964;){for(var v964=[],j=0,v963=j<blocksPerLineForMcu;v963;)JAM.call(v964.push,v964,[new Int32Array(64)]),j+=1,v963=j<blocksPerLineForMcu;JAM.call(blocks.push,
blocks,[v964]);i+=1;v964=i<blocksPerColumnForMcu}component.blocksPerLine=blocksPerLine;component.blocksPerColumn=blocksPerColumn;component.blocks=blocks}frame.maxH=maxH;frame.maxV=maxV;frame.mcusPerLine=v950;frame.mcusPerColumn=mcusPerColumn}var offset=0,jfif=null,adobe=null,frame$$0,resetInterval,quantizationTables=[],frames=[],huffmanTablesAC=[],huffmanTablesDC=[],fileMarker=readUint16();if(65496!=fileMarker)throw"SOI not found";for(var fileMarker=readUint16(),v1021=65497!=fileMarker;v1021;){switch(fileMarker){case 65504:case 65505:case 65506:case 65507:case 65508:case 65509:case 65510:case 65511:case 65512:case 65513:case 65514:case 65515:case 65516:case 65517:case 65518:case 65519:case 65534:v1021=
readDataBlock();if(65504===fileMarker){var v6676=74===v1021[0];v6676&&(v6676=70===v1021[1])&&(v6676=73===v1021[2])&&(v6676=70===v1021[3])&&(v6676=0===v1021[4]);v6676&&(jfif={version:{major:v1021[5],minor:v1021[6]},densityUnits:v1021[7],xDensity:v1021[8]<<8|v1021[9],yDensity:v1021[10]<<8|v1021[11],thumbWidth:v1021[12],thumbHeight:v1021[13],thumbData:v1021.subarray(14,14+3*v1021[12]*v1021[13])})}65518===fileMarker&&((fileMarker=65===v1021[0])&&(fileMarker=100===v1021[1])&&(fileMarker=111===v1021[2])&&
(fileMarker=98===v1021[3])&&(fileMarker=101===v1021[4])&&(fileMarker=0===v1021[5]),fileMarker&&(adobe={version:v1021[6],flags0:v1021[7]<<8|v1021[8],flags1:v1021[9]<<8|v1021[10],transformCode:v1021[11]}));break;case 65499:v6676=Math.floor((readUint16()-2)/65);v1021=0;for(fileMarker=v1021<v6676;fileMarker;){fileMarker=offset;offset+=1;introspect(JAM.policy.p1)var quantizationTableSpec=data[fileMarker];var tableData=new Int32Array(64);if(0===quantizationTableSpec>>4)for(var fileMarker=0,v986=64>fileMarker;v986;){introspect(JAM.policy.p1)v986=
dctZigZag[fileMarker];var v985=offset,offset=offset+1;JAM.set(tableData,v986,JAM.get(data,v985,JAM.policy.p1));fileMarker+=1;v986=64>fileMarker}else if(1===quantizationTableSpec>>4)for(fileMarker=0,v986=64>fileMarker;v986;){introspect(JAM.policy.p1)v986=dctZigZag[fileMarker];v985=readUint16();JAM.set(tableData,v986,v985);fileMarker+=1;v986=64>fileMarker}else throw"DQT: invalid table spec";quantizationTables[quantizationTableSpec&15]=tableData;v1021+=1;fileMarker=v1021<v6676}break;case 65472:case 65474:readUint16();
frame$$0={};frame$$0.progressive=65474===fileMarker;v1021=offset;offset+=1;introspect(JAM.policy.p1)frame$$0.precision=data[v1021];v1021=frame$$0;fileMarker=readUint16();v1021.scanLines=fileMarker;v1021=frame$$0;fileMarker=readUint16();v1021.samplesPerLine=fileMarker;frame$$0.components={};frame$$0.componentsOrder=[];v1021=offset;offset+=1;introspect(JAM.policy.p1)fileMarker=data[v1021];v1021=0;for(v6676=v1021<fileMarker;v6676;){introspect(JAM.policy.p1)v6676=data[offset];quantizationTableSpec=offset+
1;introspect(JAM.policy.p1)quantizationTableSpec=data[quantizationTableSpec];quantizationTableSpec>>=4;tableData=offset+1;introspect(JAM.policy.p1)tableData=data[tableData];tableData&=15;v986=offset+2;introspect(JAM.policy.p1)v986=data[v986];v985=frame$$0.componentsOrder;JAM.call(v985.push,v985,[v6676]);v985=frame$$0.components;introspect(JAM.policy.p1)v986=quantizationTables[v986];JAM.set(v985,v6676,{h:quantizationTableSpec,v:tableData,quantizationTable:v986});offset+=3;v1021+=1;v6676=v1021<fileMarker}prepareComponents(frame$$0);
JAM.call(frames.push,frames,[frame$$0]);break;case 65476:v6676=readUint16();v1021=2;for(fileMarker=v1021<v6676;fileMarker;){fileMarker=offset;offset+=1;introspect(JAM.policy.p1)tableData=data[fileMarker];quantizationTableSpec=new Uint8Array(16);fileMarker=v985=0;for(v986=16>fileMarker;v986;)v985+=JAM.set(quantizationTableSpec,fileMarker,JAM.get(data,offset,JAM.policy.p1)),fileMarker+=1,offset+=1,v986=16>fileMarker;for(var v986=new Uint8Array(v985),fileMarker=0,v1004=fileMarker<v985;v1004;)JAM.set(v986,
fileMarker,JAM.get(data,offset,JAM.policy.p1)),fileMarker+=1,offset+=1,v1004=fileMarker<v985;v1021+=17+v985;fileMarker=0===tableData>>4?huffmanTablesDC:huffmanTablesAC;tableData&=15;quantizationTableSpec=buildHuffmanTable(quantizationTableSpec,v986);fileMarker[tableData]=quantizationTableSpec;fileMarker=v1021<v6676}break;case 65501:readUint16();resetInterval=readUint16();break;case 65498:readUint16();v1021=offset;offset+=1;introspect(JAM.policy.p1)v6676=data[v1021];fileMarker=[];v1021=0;for(quantizationTableSpec=
v1021<v6676;quantizationTableSpec;){quantizationTableSpec=frame$$0.components;tableData=offset;offset+=1;introspect(JAM.policy.p1)tableData=data[tableData];introspect(JAM.policy.p1)quantizationTableSpec=quantizationTableSpec[tableData];tableData=offset;offset+=1;introspect(JAM.policy.p1)tableData=data[tableData];quantizationTableSpec.huffmanTableDC=huffmanTablesDC[tableData>>4];quantizationTableSpec.huffmanTableAC=huffmanTablesAC[tableData&15];JAM.call(fileMarker.push,fileMarker,[quantizationTableSpec]);
v1021+=1;quantizationTableSpec=v1021<v6676}v1021=offset;offset+=1;introspect(JAM.policy.p1)v1021=data[v1021];v6676=offset;offset+=1;introspect(JAM.policy.p1)v6676=data[v6676];quantizationTableSpec=offset;offset+=1;introspect(JAM.policy.p1)quantizationTableSpec=data[quantizationTableSpec];v1021=decodeScan(data,offset,frame$$0,fileMarker,resetInterval,v1021,v6676,quantizationTableSpec>>4,quantizationTableSpec&15);offset+=v1021;break;default:throw"unknown JPEG marker "+JAM.call(fileMarker.toString,fileMarker,
[16]);}fileMarker=readUint16();v1021=65497!=fileMarker}if(1!=frames.length)throw"only single frame JPEGs supported";this.width=frame$$0.samplesPerLine;this.height=frame$$0.scanLines;this.jfif=jfif;this.adobe=adobe;this.components=[];v1021=0;for(jfif=v1021<frame$$0.componentsOrder.length;jfif;){jfif=frame$$0.components;adobe=frame$$0.componentsOrder;introspect(JAM.policy.p1)adobe=adobe[v1021];introspect(JAM.policy.p1)quantizationTableSpec=jfif[adobe];jfif=this.components;JAM.call(jfif.push,jfif,[{lines:buildComponentData(frame$$0,
quantizationTableSpec),scaleX:quantizationTableSpec.h/frame$$0.maxH,scaleY:quantizationTableSpec.v/frame$$0.maxV}]);v1021+=1;jfif=v1021<frame$$0.componentsOrder.length}}function load(path){function v87(){var v6706=xhr.response;v6706||(v6706=xhr.mozResponseArrayBuffer);v6706=new Uint8Array(v6706);JAM.call(this.parse,this,[v6706]);if(this.onload)this.onload()}var xhr=new PdfJS_window.XMLHttpRequest;JAM.call(JAM.get(xhr,"open",JAM.policy.p1),xhr,["GET",path,!0]);xhr.responseType="arraybuffer";path=xhr;
var v23420=JAM.call(v87.bind,v87,[this]);JAM.set(path,"onload",v23420);JAM.call(xhr.send,xhr,[null])}function constructor(){}function buildHuffmanTable(codeLengths,values){var k=0,code=[],i,j,length=16;if(i=0<length){i=length-1;introspect(JAM.policy.p1)i=codeLengths[i];i=!i}for(;i;)if(length-=1,i=0<length){i=length-1;introspect(JAM.policy.p1)i=codeLengths[i];i=!i}JAM.call(code.push,code,[{children:[],index:0}]);var p=code[0],q;i=0;for(j=i<length;j;){j=0;introspect(JAM.policy.p1)q=codeLengths[i];for(q=
j<q;q;){p=code.pop();JAM.set(p.children,p.index,values[k]);for(q=0<p.index;q;)p=code.pop(),q=0<p.index;p.index+=1;JAM.call(code.push,code,[p]);for(q=code.length<=i;q;)JAM.call(code.push,code,[q={children:[],index:0}]),JAM.set(p.children,p.index,q.children),p=q,q=code.length<=i;k+=1;j+=1;introspect(JAM.policy.p1)q=codeLengths[i];q=j<q}i+1<length&&(JAM.call(code.push,code,[q={children:[],index:0}]),JAM.set(p.children,p.index,q.children),p=q);i+=1;j=i<length}return code[0].children}function decodeScan(data,
offset,frame,components,resetInterval,spectralStart,spectralEnd,successivePrev,successive){function readBit(){if(0<bitsCount)return bitsCount-=1,bitsData>>bitsCount&1;var v1050=offset;offset+=1;introspect(JAM.policy.p1)bitsData=data[v1050];if(255==bitsData){v1050=offset;offset+=1;introspect(JAM.policy.p1)v1050=data[v1050];if(v1050)throw v1050|=bitsData<<8,"unexpected marker: "+JAM.call(v1050.toString,v1050,[16]);}bitsCount=7;return bitsData>>>7}function decodeHuffman(tree){for(var bit,v1056=null!==
(bit=readBit());v1056;){introspect(JAM.policy.p1)tree=tree[bit];if("number"===typeof tree)return tree;if("object"!==typeof tree)throw"invalid huffman sequence";v1056=null!==(bit=readBit())}return null}function receive(length){for(var n=0,v1059=0<length;v1059;){v1059=readBit();if(null===v1059)return;n=n<<1|v1059;length-=1;v1059=0<length}return n}function receiveAndExtend(length){var n=receive(length);return n>=1<<length-1?n:n+(-1<<length)+1}function decodeBaseline(component,zz){var t=decodeHuffman(component.huffmanTableDC),
t=0===t?0:receiveAndExtend(t);zz[0]=component.pred+=t;for(var t=1,v1067=64>t;v1067;){var rs=decodeHuffman(component.huffmanTableAC),v1067=rs&15,rs=rs>>4;if(0===v1067){if(15>rs)break;t+=16}else{t+=rs;introspect(JAM.policy.p1)rs=dctZigZag[t];v1067=receiveAndExtend(v1067);JAM.set(zz,rs,v1067);t+=1}v1067=64>t}}function decodeDCFirst(component,zz){var t=decodeHuffman(component.huffmanTableDC),t=0===t?0:receiveAndExtend(t)<<successive;zz[0]=component.pred+=t}function decodeDCSuccessive(component,zz){var v1070=
zz;v1070[0]|=readBit()<<successive}function decodeACFirst(component,zz){if(0<eobrun)eobrun-=1;else for(var k=spectralStart,e=spectralEnd,v1078=k<=e;v1078;){var rs=decodeHuffman(component.huffmanTableAC),v1078=rs&15,rs=rs>>4;if(0===v1078){if(15>rs){eobrun=receive(rs)+(1<<rs)-1;break}k+=16}else{k+=rs;introspect(JAM.policy.p1)rs=dctZigZag[k];JAM.set(zz,rs,receiveAndExtend(v1078)*(1<<successive));k+=1}v1078=k<=e}}function decodeACSuccessive(component,zz){for(var k=spectralStart,e=spectralEnd,r=0,v1097=
k<=e;v1097;){introspect(JAM.policy.p1)v1097=dctZigZag[k];switch(successiveACState){case 0:r=decodeHuffman(component.huffmanTableAC);v1097=r&15;r>>=4;if(0===v1097)15>r?(eobrun=receive(r)+(1<<r),successiveACState=4):(r=16,successiveACState=1);else{if(1!==v1097)throw"invalid ACn encoding";successiveACNextValue=receiveAndExtend(v1097);successiveACState=v1097=r?2:3}v1097=k<=e;continue;case 1:case 2:introspect(JAM.policy.p1)var v1090=zz[v1097];if(v1090){v1090=zz;introspect(JAM.policy.p1)var v21251=v1090[v1097];
JAM.set(v1090,v1097,v21251+(readBit()<<successive))}else r-=1,0===r&&(successiveACState=v1097=2==successiveACState?3:0);break;case 3:introspect(JAM.policy.p1)v1090=zz[v1097];if(v1090){v1090=zz;introspect(JAM.policy.p1)v21251=v1090[v1097];JAM.set(v1090,v1097,v21251+(readBit()<<successive))}else JAM.set(zz,v1097,successiveACNextValue<<successive),successiveACState=0;break;case 4:introspect(JAM.policy.p1)v1090=zz[v1097];if(v1090){v1090=zz;introspect(JAM.policy.p1)v21251=v1090[v1097];JAM.set(v1090,v1097,
v21251+(readBit()<<successive))}}k+=1;v1097=k<=e}4===successiveACState&&(eobrun-=1,0===eobrun&&(successiveACState=0))}function decodeMcu(component,decode,mcu,row,col){var mcuRow=mcu/mcusPerLine|0;mcu%=mcusPerLine;row=mcuRow*component.v+row;col=mcu*component.h+col;mcuRow=component.blocks;introspect(JAM.policy.p1)row=mcuRow[row];introspect(JAM.policy.p1)col=row[col];JAM.call(decode,null,[component,col])}function decodeBlock(component,decode,mcu){var blockRow=mcu/component.blocksPerLine|0;mcu%=component.blocksPerLine;
var v21258=component.blocks;introspect(JAM.policy.p1)blockRow=v21258[blockRow];introspect(JAM.policy.p1)blockRow=blockRow[mcu];JAM.call(decode,null,[component,blockRow])}var mcusPerLine=frame.mcusPerLine,progressive=frame.progressive,startOffset=offset,bitsData=0,bitsCount=0,eobrun=0,successiveACState=0,successiveACNextValue,componentsLength=components.length,component,i,j,k$$0,n$$0;successivePrev=progressive?0===spectralStart?0===successivePrev?decodeDCFirst:decodeDCSuccessive:0===successivePrev?
decodeACFirst:decodeACSuccessive:decodeBaseline;progressive=0;frame=1==componentsLength?components[0].blocksPerLine*components[0].blocksPerColumn:mcusPerLine*frame.mcusPerColumn;resetInterval||(resetInterval=frame);var h,v;for(i=progressive<frame;i;){i=0;for(n$$0=i<componentsLength;n$$0;){introspect(JAM.policy.p1)n$$0=components[i];n$$0.pred=0;i+=1;n$$0=i<componentsLength}eobrun=0;if(1==componentsLength)for(component=components[0],n$$0=0,i=n$$0<resetInterval;i;)decodeBlock(component,successivePrev,
progressive),progressive+=1,n$$0+=1,i=n$$0<resetInterval;else for(n$$0=0,i=n$$0<resetInterval;i;){i=0;for(component=i<componentsLength;component;){introspect(JAM.policy.p1)component=components[i];h=component.h;v=component.v;j=0;for(k$$0=j<v;k$$0;){k$$0=0;for(var v1118=k$$0<h;v1118;)decodeMcu(component,successivePrev,progressive,j,k$$0),k$$0+=1,v1118=k$$0<h;j+=1;k$$0=j<v}i+=1;component=i<componentsLength}progressive+=1;n$$0+=1;i=n$$0<resetInterval}bitsCount=0;introspect(JAM.policy.p1)i=data[offset];
i<<=8;n$$0=offset+1;introspect(JAM.policy.p1)n$$0=data[n$$0];i|=n$$0;if(65280>=i)throw"marker was not found";(n$$0=65488<=i)&&(n$$0=65495>=i);if(n$$0)offset+=2;else break;i=progressive<frame}return offset-startOffset}function buildComponentData(frame,component){for(var lines=[],blocksPerLine=component.blocksPerLine,blocksPerColumn=component.blocksPerColumn,samplesPerLine=blocksPerLine<<3,R=new Int32Array(64),r=new Uint8Array(64),i,j,blockRow=0,v1228=blockRow<blocksPerColumn;v1228;){var scanLine=blockRow<<
3;i=0;for(var v1129=8>i;v1129;)JAM.call(lines.push,lines,[new Uint8Array(samplesPerLine)]),i+=1,v1129=8>i;for(var blockCol=0,v1227=blockCol<blocksPerLine;v1227;){var v6746=component.blocks;introspect(JAM.policy.p1)var v1130=v6746[blockRow];introspect(JAM.policy.p1)var zz=v1130[blockCol];for(var dataOut=r,dataIn=R,qt=component.quantizationTable,v0=void 0,v1=void 0,v2=void 0,v3=void 0,v4=void 0,v5=void 0,v6=void 0,v7=void 0,t=void 0,p=dataIn,i$$0=void 0,i$$0=0,v1133=64>i$$0;v1133;){introspect(JAM.policy.p1)var v1131=
zz[i$$0];introspect(JAM.policy.p1)var v1132=qt[i$$0];JAM.set(p,i$$0,v1131*v1132);i$$0+=1;v1133=64>i$$0}for(var i$$0=0,v1176=8>i$$0;v1176;){var row=8*i$$0,v22479=1+row;introspect(JAM.policy.p1)var v21259=p[v22479];var v6747=0==v21259;if(v6747){var v22953=2+row;introspect(JAM.policy.p1)var v22480=p[v22953];var v21260=0==v22480;if(v21260){var v23115=3+row;introspect(JAM.policy.p1)var v22954=p[v23115];var v22481=0==v22954;if(v22481){var v23178=4+row;introspect(JAM.policy.p1)var v23116=p[v23178];var v22955=
0==v23116;if(v22955){var v23209=5+row;introspect(JAM.policy.p1)var v23179=p[v23209];var v23117=0==v23179;if(v23117){var v23236=6+row;introspect(JAM.policy.p1)var v23210=p[v23236];var v23180=0==v23210;if(v23180){var v23237=7+row;introspect(JAM.policy.p1)var v23211=p[v23237];v23180=0==v23211}v23117=v23180}v22955=v23117}v22481=v22955}v21260=v22481}v6747=v21260}if(v6747){var v22482=0+row;introspect(JAM.policy.p1)var v21261=p[v22482];t=dctSqrt2*v21261+512>>10;p[0+row]=t;p[1+row]=t;p[2+row]=t;p[3+row]=
t;p[4+row]=t;p[5+row]=t;p[6+row]=t;p[7+row]=t}else{var v22483=0+row;introspect(JAM.policy.p1)var v21262=p[v22483];var v0=dctSqrt2*v21262+128>>8,v22484=4+row;introspect(JAM.policy.p1)var v21263=p[v22484];var v1=dctSqrt2*v21263+128>>8,v2=p[2+row],v3=p[6+row],v22956=1+row;introspect(JAM.policy.p1)var v22485=p[v22956];var v22957=7+row;introspect(JAM.policy.p1)var v22486=p[v22957];var v4=dctSqrt1d2*(v22485-v22486)+128>>8,v22958=1+row;introspect(JAM.policy.p1)var v22487=p[v22958];var v22959=7+row;introspect(JAM.policy.p1)var v22488=
p[v22959];var v7=dctSqrt1d2*(v22487+v22488)+128>>8,v6753=3+row;introspect(JAM.policy.p1)var v1150=p[v6753];var v5=v1150<<4,v6754=5+row;introspect(JAM.policy.p1)var v1151=p[v6754];v6=v1151<<4;t=v0-v1+1>>1;v0=v0+v1+1>>1;v1=t;t=v2*dctSin6+v3*dctCos6+128>>8;v2=v2*dctCos6-v3*dctSin6+128>>8;v3=t;t=v4-v6+1>>1;v4=v4+v6+1>>1;v6=t;t=v7+v5+1>>1;v5=v7-v5+1>>1;v7=t;t=v0-v3+1>>1;v0=v0+v3+1>>1;v3=t;t=v1-v2+1>>1;v1=v1+v2+1>>1;v2=t;t=v4*dctSin3+v7*dctCos3+2048>>12;v4=v4*dctCos3-v7*dctSin3+2048>>12;v7=t;t=v5*dctSin1+
v6*dctCos1+2048>>12;v5=v5*dctCos1-v6*dctSin1+2048>>12;v6=t;p[0+row]=v0+v7;p[7+row]=v0-v7;p[1+row]=v1+v6;p[6+row]=v1-v6;p[2+row]=v2+v5;p[5+row]=v2-v5;p[3+row]=v3+v4;p[4+row]=v3-v4}i$$0+=1;v1176=8>i$$0}for(var i$$0=0,v1219=8>i$$0;v1219;){var col=i$$0,v22489=8+col;introspect(JAM.policy.p1)var v21278=p[v22489];var v6771=0==v21278;if(v6771){var v22961=16+col;introspect(JAM.policy.p1)var v22490=p[v22961];var v21279=0==v22490;if(v21279){var v23119=24+col;introspect(JAM.policy.p1)var v22962=p[v23119];var v22491=
0==v22962;if(v22491){var v23182=32+col;introspect(JAM.policy.p1)var v23120=p[v23182];var v22963=0==v23120;if(v22963){var v23213=40+col;introspect(JAM.policy.p1)var v23183=p[v23213];var v23121=0==v23183;if(v23121){var v23239=48+col;introspect(JAM.policy.p1)var v23214=p[v23239];var v23184=0==v23214;if(v23184){var v23240=56+col;introspect(JAM.policy.p1)var v23215=p[v23240];v23184=0==v23215}v23121=v23184}v22963=v23121}v22491=v22963}v21279=v22491}v6771=v21279}if(v6771){var v22492=i$$0+0;introspect(JAM.policy.p1)var v21280=
dataIn[v22492];t=dctSqrt2*v21280+8192>>14;p[0+col]=t;p[8+col]=t;p[16+col]=t;p[24+col]=t;p[32+col]=t;p[40+col]=t;p[48+col]=t;p[56+col]=t}else{var v22493=0+col;introspect(JAM.policy.p1)var v21281=p[v22493];var v0=dctSqrt2*v21281+2048>>12,v22494=32+col;introspect(JAM.policy.p1)var v21282=p[v22494];var v1=dctSqrt2*v21282+2048>>12,v2=p[16+col],v3=p[48+col],v22966=8+col;introspect(JAM.policy.p1)var v22495=p[v22966];var v22967=56+col;introspect(JAM.policy.p1)var v22496=p[v22967];var v4=dctSqrt1d2*(v22495-
v22496)+2048>>12,v22968=8+col;introspect(JAM.policy.p1)var v22497=p[v22968];var v22969=56+col;introspect(JAM.policy.p1)var v22498=p[v22969];v7=dctSqrt1d2*(v22497+v22498)+2048>>12;v5=p[24+col];v6=p[40+col];t=v0-v1+1>>1;v0=v0+v1+1>>1;v1=t;t=v2*dctSin6+v3*dctCos6+2048>>12;v2=v2*dctCos6-v3*dctSin6+2048>>12;v3=t;t=v4-v6+1>>1;v4=v4+v6+1>>1;v6=t;t=v7+v5+1>>1;v5=v7-v5+1>>1;v7=t;t=v0-v3+1>>1;v0=v0+v3+1>>1;v3=t;t=v1-v2+1>>1;v1=v1+v2+1>>1;v2=t;t=v4*dctSin3+v7*dctCos3+2048>>12;v4=v4*dctCos3-v7*dctSin3+2048>>
12;v7=t;t=v5*dctSin1+v6*dctCos1+2048>>12;v5=v5*dctCos1-v6*dctSin1+2048>>12;v6=t;p[0+col]=v0+v7;p[56+col]=v0-v7;p[8+col]=v1+v6;p[48+col]=v1-v6;p[16+col]=v2+v5;p[40+col]=v2-v5;p[24+col]=v3+v4;p[32+col]=v3-v4}i$$0+=1;v1219=8>i$$0}for(var i$$0=0,v1222=64>i$$0;v1222;){introspect(JAM.policy.p1)var v21297=p[i$$0];var sample$$0=128+(v21297+8>>4),v1221;if(0>sample$$0)v1221=0;else{var v6814;v1221=v6814=255<sample$$0?255:sample$$0}JAM.set(dataOut,i$$0,v1221);i$$0+=1;v1222=64>i$$0}var offset=0,sample=blockCol<<
3;j=0;for(var v1226=8>j;v1226;){var v1223=scanLine+j;introspect(JAM.policy.p1)var line=lines[v1223];i=0;for(var v1225=8>i;v1225;){var v1224=sample+i,v6816=offset,offset=offset+1;line[v1224]=r[v6816];i+=1;v1225=8>i}j+=1;v1226=8>j}blockCol+=1;v1227=blockCol<blocksPerLine}blockRow+=1;v1228=blockRow<blocksPerColumn}return lines}var dctZigZag=new Int32Array([0,1,8,16,9,2,3,10,17,24,32,25,18,11,4,5,12,19,26,33,40,48,41,34,27,20,13,6,7,14,21,28,35,42,49,56,57,50,43,36,29,22,15,23,30,37,44,51,58,59,52,45,
38,31,39,46,53,60,61,54,47,55,62,63]),dctCos1=4017,dctSin1=799,dctCos3=3406,dctSin3=2276,dctCos6=1567,dctSin6=3784,dctSqrt2=5793,dctSqrt1d2=2896;constructor.prototype={load:load,parse:parse,getData:getData,copyToImageData:copyToImageData};return constructor}function timeEnd(name){introspect(JAM.policy.p1)var time=consoleTimer[name];null==time&&error$$1("Unkown timer name "+name);JAM.call(this.log,this,["Timer:",name,Date.now()-time])}function time$$0(name){var v1233=consoleTimer,v23422=Date.now();
JAM.set(v1233,name,v23422)}function error$$0(){var v1235=Array.prototype.slice,v1235=JAM.call(v1235.call,v1235,[arguments]);JAM.call(postMessage,null,[{action:"console_error",data:v1235}]);throw"pdf.js execution error";}function log(){var v1237=Array.prototype.slice,v1237=JAM.call(v1237.call,v1237,[arguments]);JAM.call(postMessage,null,[{action:"console_log",data:v1237}])}function wphSetup(handler){function wphSetupRenderPage(data){var pageNum=data.pageIndex+1;JAM.new(CanvasGraphics,[null]);Date.now();
var dependency=[],operatorList=null;try{var page=JAM.call(pdfModel.getPage,pdfModel,[pageNum]),operatorList=JAM.call(page.getOperatorList,page,[handler,dependency])}catch(e){data="worker.js: while trying to getPage() and getOperatorList()";"string"===typeof e?e={message:e,stack:data}:"object"===typeof e?((dependency=e.message)||(dependency=e.toString()),(operatorList=e.stack)||(operatorList=data),e={message:dependency,stack:operatorList}):e={message:"Unknown exception type: "+typeof e,stack:data};
JAM.call(handler.send,handler,["PageError",{pageNum:pageNum,error:e}]);return}for(var pageNum={},page=0,ii=dependency.length,v1247=page<ii;v1247;){introspect(JAM.policy.p1)v1247=dependency[page];0==v1247.indexOf("font_")&&JAM.set(pageNum,v1247,!0);page+=1;v1247=page<ii}JAM.call(handler.send,handler,["RenderPage",{pageIndex:data.pageIndex,operatorList:operatorList,depFonts:Object.keys(pageNum)}])}function wphSetupGetAnnotations(data){var pdfPage=JAM.call(pdfModel.getPage,pdfModel,[data.pageIndex+1]);
JAM.call(handler.send,handler,["GetAnnotations",{pageIndex:data.pageIndex,annotations:pdfPage.getAnnotations()}])}function wphSetupGetPage(data){var pageNumber=data.pageIndex+1,pageNumber=JAM.call(pdfModel.getPage,pdfModel,[pageNumber]);data={pageIndex:data.pageIndex,rotate:pageNumber.rotate,ref:pageNumber.ref,view:pageNumber.view};JAM.call(handler.send,handler,["GetPage",{pageInfo:data}])}function wphSetupDoc(data){pdfModel=JAM.new(PDFDocument,[JAM.new(Stream,[data])]);data={numPages:pdfModel.numPages,
fingerprint:pdfModel.getFingerprint(),destinations:pdfModel.catalog.destinations,outline:pdfModel.catalog.documentOutline,info:pdfModel.getDocumentInfo(),metadata:pdfModel.catalog.metadata};JAM.call(handler.send,handler,["GetDoc",{pdfInfo:data}])}function wphSetupTest(data){JAM.call(handler.send,handler,["test",data instanceof Uint8Array])}var pdfModel=null;JAM.call(handler.on,handler,["test",wphSetupTest]);JAM.call(handler.on,handler,["GetDocRequest",wphSetupDoc]);JAM.call(handler.on,handler,["GetPageRequest",
wphSetupGetPage]);JAM.call(handler.on,handler,["GetAnnotationsRequest",wphSetupGetAnnotations]);JAM.call(handler.on,handler,["RenderPageRequest",wphSetupRenderPage,this])}function messageHandlerSend(actionName,data,callback){actionName={action:actionName,data:data};callback&&(data=this.callbackIndex,this.callbackIndex+=1,JAM.set(this.callbacks,data,callback),actionName.callbackId=data);callback=this.comObj;JAM.call(callback.postMessage,callback,[actionName])}function messageHandlerOn(actionName,handler,
scope){var ah=this.actionHandler;introspect(JAM.policy.p1)var v1269=ah[actionName];v1269&&error$$1('There is already an actionName called "'+actionName+'"');JAM.set(ah,actionName,[handler,scope])}function LZWStreamClosure(){function LZWStream_readBlock(){var blockSize=512,estimatedDecodedSize=2*blockSize,decodedSizeDelta=blockSize,i,j,q,lzwState=this.lzwState;if(lzwState){var earlyChange=lzwState.earlyChange,nextCode=lzwState.nextCode,dictionaryValues=lzwState.dictionaryValues,dictionaryLengths=lzwState.dictionaryLengths,
dictionaryPrevCodes=lzwState.dictionaryPrevCodes,codeLength=lzwState.codeLength,prevCode=lzwState.prevCode,currentSequence=lzwState.currentSequence,currentSequenceLength=lzwState.currentSequenceLength,decodedLength=0,currentBufferLength=this.bufferLength,buffer=JAM.call(this.ensureBuffer,this,[this.bufferLength+estimatedDecodedSize]);i=0;for(var v1285=i<blockSize;v1285;){var v1285=JAM.call(this.readBits,this,[codeLength]),hasPrev=0<currentSequenceLength;if(256>v1285)currentSequence[0]=v1285,currentSequenceLength=
1;else if(258<=v1285)if(v1285<nextCode){introspect(JAM.policy.p1)currentSequenceLength=dictionaryLengths[v1285];j=currentSequenceLength-1;q=v1285;for(var v1272=0<=j;v1272;){JAM.set(currentSequence,j,JAM.get(dictionaryValues,q,JAM.policy.p1));introspect(JAM.policy.p1)q=dictionaryPrevCodes[q];j-=1;v1272=0<=j}}else j=currentSequenceLength,currentSequenceLength+=1,JAM.set(currentSequence,j,currentSequence[0]);else if(256==v1285){codeLength=9;nextCode=258;currentSequenceLength=0;i+=1;v1285=i<blockSize;
continue}else{this.eof=!0;delete this.lzwState;break}if(hasPrev){JAM.set(dictionaryPrevCodes,nextCode,prevCode);introspect(JAM.policy.p1)prevCode=dictionaryLengths[prevCode];JAM.set(dictionaryLengths,nextCode,prevCode+1);JAM.set(dictionaryValues,nextCode,currentSequence[0]);nextCode+=1;codeLength=nextCode+earlyChange&nextCode+earlyChange-1?codeLength:Math.min(JAM.call(Math.log,Math,[nextCode+earlyChange])/0.6931471805599453+1,12)|0}prevCode=v1285;decodedLength+=currentSequenceLength;if(estimatedDecodedSize<
decodedLength){buffer=estimatedDecodedSize<decodedLength;do estimatedDecodedSize+=decodedSizeDelta,buffer=estimatedDecodedSize<decodedLength;while(buffer);buffer=JAM.call(this.ensureBuffer,this,[this.bufferLength+estimatedDecodedSize])}j=0;for(v1285=j<currentSequenceLength;v1285;)v1285=currentBufferLength,currentBufferLength+=1,JAM.set(buffer,v1285,JAM.get(currentSequence,j,JAM.policy.p1)),j+=1,v1285=j<currentSequenceLength;i+=1;v1285=i<blockSize}lzwState.nextCode=nextCode;lzwState.codeLength=codeLength;
lzwState.prevCode=prevCode;lzwState.currentSequenceLength=currentSequenceLength;this.bufferLength=currentBufferLength}}function LZWStream_readBits(n){for(var bitsCached=this.bitsCached,cachedData=this.cachedData,v1289=bitsCached<n;v1289;){v1289=this.str.getByte();if(null==v1289)return this.eof=!0,null;cachedData=cachedData<<8|v1289;bitsCached+=8;v1289=bitsCached<n}this.bitsCached=bitsCached-=n;this.cachedData=cachedData;this.lastCode=null;return cachedData>>>bitsCached&(1<<n)-1}function LZWStream(str,
earlyChange){this.str=str;this.dict=str.dict;this.bitsCached=this.cachedData=0;for(var maxLzwDictionarySize=4096,maxLzwDictionarySize={earlyChange:earlyChange,codeLength:9,nextCode:258,dictionaryValues:new Uint8Array(maxLzwDictionarySize),dictionaryLengths:new Uint16Array(maxLzwDictionarySize),dictionaryPrevCodes:new Uint16Array(maxLzwDictionarySize),currentSequence:new Uint8Array(maxLzwDictionarySize),currentSequenceLength:0},i=0,v1298=256>i;v1298;)maxLzwDictionarySize.dictionaryValues[i]=i,maxLzwDictionarySize.dictionaryLengths[i]=
1,i+=1,v1298=256>i;this.lzwState=maxLzwDictionarySize;JAM.call(DecodeStream.call,DecodeStream,[this])}var v1299=LZWStream,v23423=Object.create(DecodeStream.prototype);v1299.prototype=v23423;LZWStream.prototype.readBits=LZWStream_readBits;LZWStream.prototype.readBlock=LZWStream_readBlock;return LZWStream}function CCITTFaxStreamClosure(){function CCITTFaxStream_eatBits(n){0>(this.inputBits-=n)&&(this.inputBits=0)}function CCITTFaxStream_lookBits(n){var c;for(c=this.inputBits<n;c;){if(null==(c=this.str.getByte()))return 0==
this.inputBits?EOF:this.inputBuf<<n-this.inputBits&65535>>16-n;this.inputBuf=(this.inputBuf<<8)+c;this.inputBits+=8;c=this.inputBits<n}return this.inputBuf>>this.inputBits-n&65535>>16-n}function ccittFaxStreamGetBlackCode(){var code;if(this.eoblock){code=JAM.call(this.lookBits,this,[13]);if(code==EOF)return 1;if(0==code>>7)introspect(JAM.policy.p1)code=blackTable1[code];else{var v6856=0==code>>9;v6856&&(v6856=0!=code>>7);code=v6856?blackTable2[(code>>1)-64]:blackTable3[code>>7]}if(0<code[0])return JAM.call(this.eatBits,
this,[code[0]]),code[1]}else{code=JAM.call(this.findTableCode,this,[2,6,blackTable3]);if(code[0])return code[1];code=JAM.call(this.findTableCode,this,[7,12,blackTable2,64]);if(code[0])return code[1];code=JAM.call(this.findTableCode,this,[10,13,blackTable1]);if(code[0])return code[1]}warn("bad black code");JAM.call(this.eatBits,this,[1]);return 1}function ccittFaxStreamGetWhiteCode(){var code=0;if(this.eoblock){code=JAM.call(this.lookBits,this,[12]);if(code==EOF)return 1;if(0==code>>5)introspect(JAM.policy.p1)code=
whiteTable1[code];else code=whiteTable2[code>>3];if(0<code[0])return JAM.call(this.eatBits,this,[code[0]]),code[1]}else{code=JAM.call(this.findTableCode,this,[1,9,whiteTable2]);if(code[0])return code[1];code=JAM.call(this.findTableCode,this,[11,12,whiteTable1]);if(code[0])return code[1]}warn("bad white code");JAM.call(this.eatBits,this,[1]);return 1}function ccittFaxStreamGetTwoDimCode(){var code=0;if(this.eoblock){code=JAM.call(this.lookBits,this,[7]);introspect(JAM.policy.p1)code=twoDimTable[code];
var v6861=code;v6861&&(v6861=0<code[0]);if(v6861)return JAM.call(this.eatBits,this,[code[0]]),code[1]}else if(code=JAM.call(this.findTableCode,this,[1,7,twoDimTable]),(v6861=code[0])&&(v6861=code[2]),v6861)return code[1];warn("Bad two dim code");return EOF}function ccittFaxStreamFindTableCode(start,end,table,limit){limit=limit||0;for(var v1340=start<=end;v1340;){v1340=JAM.call(this.lookBits,this,[start]);if(v1340==EOF)return[!0,1,!1];start<end&&(v1340<<=end-start);var v6864=!limit;v6864||(v6864=v1340>=
limit);if(v6864){v1340-=limit;introspect(JAM.policy.p1)v1340=table[v1340];if(v1340[0]==start)return JAM.call(this.eatBits,this,[start]),[!0,v1340[1],!0]}start+=1;v1340=start<=end}return[!1,0,!1]}function CCITTFaxStream_lookChar(){if(this.buf!=EOF)return this.buf;var refLine=this.refLine,codingLine=this.codingLine,columns=this.columns,refPos,blackPixels,bits;if(0==this.outputBits){if(this.eof)return null;this.err=!1;var code1,code2,code3;if(this.nextLine2D){var i=0;introspect(JAM.policy.p1)var v6868=
codingLine[i];for(var v1343=v6868<columns;v1343;){refLine[i]=codingLine[i];i+=1;introspect(JAM.policy.p1)var v6869=codingLine[i];v1343=v6869<columns}var v1344=i,i=i+1;refLine[v1344]=columns;refLine[i]=columns;var v21311=blackPixels=refPos=this.codingPos=codingLine[0]=0;introspect(JAM.policy.p1)var v6870=codingLine[v21311];for(var v1380=v6870<columns;v1380;){code1=this.getTwoDimCode();switch(code1){case twoDimPass:var v6871=refPos+1;introspect(JAM.policy.p1)var v1345=refLine[v6871];JAM.call(this.addPixels,
this,[v1345,blackPixels]);var v21312=refPos+1;introspect(JAM.policy.p1)var v6872=refLine[v21312];v6872<columns&&(refPos+=2);break;case twoDimHoriz:code1=code2=0;if(blackPixels){var v1347=64<=code3;do code1+=code3=this.getBlackCode(),v1347=64<=code3;while(v1347);var v1348=64<=code3;do code2+=code3=this.getWhiteCode(),v1348=64<=code3;while(v1348)}else{var v1349=64<=code3;do code1+=code3=this.getWhiteCode(),v1349=64<=code3;while(v1349);var v1350=64<=code3;do code2+=code3=this.getBlackCode(),v1350=64<=
code3;while(v1350)}var v21313=this.codingPos;introspect(JAM.policy.p1)var v6881=codingLine[v21313];JAM.call(this.addPixels,this,[v6881+code1,blackPixels]);var v21314=this.codingPos;introspect(JAM.policy.p1)var v6882=codingLine[v21314];if(v6882<columns){var v21315=this.codingPos;introspect(JAM.policy.p1)var v6883=codingLine[v21315];JAM.call(this.addPixels,this,[v6883+code2,blackPixels^1])}introspect(JAM.policy.p1)var v21316=refLine[refPos];var v22502=this.codingPos;introspect(JAM.policy.p1)var v21317=
codingLine[v22502];var v6884=v21316<=v21317;if(v6884){introspect(JAM.policy.p1)var v21318=refLine[refPos];v6884=v21318<columns}for(var v1355=v6884;v1355;){refPos+=2;introspect(JAM.policy.p1)var v21319=refLine[refPos];var v22503=this.codingPos;introspect(JAM.policy.p1)var v21320=codingLine[v22503];var v6885=v21319<=v21320;if(v6885){introspect(JAM.policy.p1)var v21321=refLine[refPos];v6885=v21321<columns}v1355=v6885}break;case twoDimVertR3:introspect(JAM.policy.p1)var v6886=refLine[refPos];JAM.call(this.addPixels,
this,[v6886+3,blackPixels]);blackPixels^=1;var v21322=this.codingPos;introspect(JAM.policy.p1)var v6887=codingLine[v21322];if(v6887<columns){refPos+=1;introspect(JAM.policy.p1)var v21323=refLine[refPos];var v22504=this.codingPos;introspect(JAM.policy.p1)var v21324=codingLine[v22504];var v6888=v21323<=v21324;if(v6888){introspect(JAM.policy.p1)var v21325=refLine[refPos];v6888=v21325<columns}for(var v1357=v6888;v1357;){refPos+=2;introspect(JAM.policy.p1)var v21326=refLine[refPos];var v22505=this.codingPos;
introspect(JAM.policy.p1)var v21327=codingLine[v22505];var v6889=v21326<=v21327;if(v6889){introspect(JAM.policy.p1)var v21328=refLine[refPos];v6889=v21328<columns}v1357=v6889}}break;case twoDimVertR2:introspect(JAM.policy.p1)var v6890=refLine[refPos];JAM.call(this.addPixels,this,[v6890+2,blackPixels]);blackPixels^=1;var v21329=this.codingPos;introspect(JAM.policy.p1)var v6891=codingLine[v21329];if(v6891<columns){refPos+=1;introspect(JAM.policy.p1)var v21330=refLine[refPos];var v22506=this.codingPos;
introspect(JAM.policy.p1)var v21331=codingLine[v22506];var v6892=v21330<=v21331;if(v6892){introspect(JAM.policy.p1)var v21332=refLine[refPos];v6892=v21332<columns}for(var v1360=v6892;v1360;){refPos+=2;introspect(JAM.policy.p1)var v21333=refLine[refPos];var v22507=this.codingPos;introspect(JAM.policy.p1)var v21334=codingLine[v22507];var v6893=v21333<=v21334;if(v6893){introspect(JAM.policy.p1)var v21335=refLine[refPos];v6893=v21335<columns}v1360=v6893}}break;case twoDimVertR1:introspect(JAM.policy.p1)var v6894=
refLine[refPos];JAM.call(this.addPixels,this,[v6894+1,blackPixels]);blackPixels^=1;var v21336=this.codingPos;introspect(JAM.policy.p1)var v6895=codingLine[v21336];if(v6895<columns){refPos+=1;introspect(JAM.policy.p1)var v21337=refLine[refPos];var v22508=this.codingPos;introspect(JAM.policy.p1)var v21338=codingLine[v22508];var v6896=v21337<=v21338;if(v6896){introspect(JAM.policy.p1)var v21339=refLine[refPos];v6896=v21339<columns}for(var v1363=v6896;v1363;){refPos+=2;introspect(JAM.policy.p1)var v21340=
refLine[refPos];var v22509=this.codingPos;introspect(JAM.policy.p1)var v21341=codingLine[v22509];var v6897=v21340<=v21341;if(v6897){introspect(JAM.policy.p1)var v21342=refLine[refPos];v6897=v21342<columns}v1363=v6897}}break;case twoDimVert0:introspect(JAM.policy.p1)var v1365=refLine[refPos];JAM.call(this.addPixels,this,[v1365,blackPixels]);blackPixels^=1;var v21343=this.codingPos;introspect(JAM.policy.p1)var v6898=codingLine[v21343];if(v6898<columns){refPos+=1;introspect(JAM.policy.p1)var v21344=
refLine[refPos];var v22510=this.codingPos;introspect(JAM.policy.p1)var v21345=codingLine[v22510];var v6899=v21344<=v21345;if(v6899){introspect(JAM.policy.p1)var v21346=refLine[refPos];v6899=v21346<columns}for(var v1366=v6899;v1366;){refPos+=2;introspect(JAM.policy.p1)var v21347=refLine[refPos];var v22511=this.codingPos;introspect(JAM.policy.p1)var v21348=codingLine[v22511];var v6900=v21347<=v21348;if(v6900){introspect(JAM.policy.p1)var v21349=refLine[refPos];v6900=v21349<columns}v1366=v6900}}break;
case twoDimVertL3:introspect(JAM.policy.p1)var v6901=refLine[refPos];JAM.call(this.addPixelsNeg,this,[v6901-3,blackPixels]);blackPixels^=1;var v21350=this.codingPos;introspect(JAM.policy.p1)var v6902=codingLine[v21350];if(v6902<columns){refPos=0<refPos?refPos-1:refPos+1;introspect(JAM.policy.p1)var v21351=refLine[refPos];var v22512=this.codingPos;introspect(JAM.policy.p1)var v21352=codingLine[v22512];var v6903=v21351<=v21352;if(v6903){introspect(JAM.policy.p1)var v21353=refLine[refPos];v6903=v21353<
columns}for(var v1370=v6903;v1370;){refPos+=2;introspect(JAM.policy.p1)var v21354=refLine[refPos];var v22513=this.codingPos;introspect(JAM.policy.p1)var v21355=codingLine[v22513];var v6904=v21354<=v21355;if(v6904){introspect(JAM.policy.p1)var v21356=refLine[refPos];v6904=v21356<columns}v1370=v6904}}break;case twoDimVertL2:introspect(JAM.policy.p1)var v6905=refLine[refPos];JAM.call(this.addPixelsNeg,this,[v6905-2,blackPixels]);blackPixels^=1;var v21357=this.codingPos;introspect(JAM.policy.p1)var v6906=
codingLine[v21357];if(v6906<columns){refPos=0<refPos?refPos-1:refPos+1;introspect(JAM.policy.p1)var v21358=refLine[refPos];var v22514=this.codingPos;introspect(JAM.policy.p1)var v21359=codingLine[v22514];var v6907=v21358<=v21359;if(v6907){introspect(JAM.policy.p1)var v21360=refLine[refPos];v6907=v21360<columns}for(var v1374=v6907;v1374;){refPos+=2;introspect(JAM.policy.p1)var v21361=refLine[refPos];var v22515=this.codingPos;introspect(JAM.policy.p1)var v21362=codingLine[v22515];var v6908=v21361<=
v21362;if(v6908){introspect(JAM.policy.p1)var v21363=refLine[refPos];v6908=v21363<columns}v1374=v6908}}break;case twoDimVertL1:introspect(JAM.policy.p1)var v6909=refLine[refPos];JAM.call(this.addPixelsNeg,this,[v6909-1,blackPixels]);blackPixels^=1;var v21364=this.codingPos;introspect(JAM.policy.p1)var v6910=codingLine[v21364];if(v6910<columns){refPos=0<refPos?refPos-1:refPos+1;introspect(JAM.policy.p1)var v21365=refLine[refPos];var v22516=this.codingPos;introspect(JAM.policy.p1)var v21366=codingLine[v22516];
var v6911=v21365<=v21366;if(v6911){introspect(JAM.policy.p1)var v21367=refLine[refPos];v6911=v21367<columns}for(var v1378=v6911;v1378;){refPos+=2;introspect(JAM.policy.p1)var v21368=refLine[refPos];var v22517=this.codingPos;introspect(JAM.policy.p1)var v21369=codingLine[v22517];var v6912=v21368<=v21369;if(v6912){introspect(JAM.policy.p1)var v21370=refLine[refPos];v6912=v21370<columns}v1378=v6912}}break;case EOF:JAM.call(this.addPixels,this,[columns,0]);this.eof=!0;break;default:warn("bad 2d code"),
JAM.call(this.addPixels,this,[columns,0]),this.err=!0}var v21371=this.codingPos;introspect(JAM.policy.p1)var v6913=codingLine[v21371];v1380=v6913<columns}}else{var v21372=blackPixels=this.codingPos=codingLine[0]=0;introspect(JAM.policy.p1)var v6914=codingLine[v21372];for(var v1384=v6914<columns;v1384;){code1=0;if(blackPixels){var v1381=64<=code3;do code1+=code3=this.getBlackCode(),v1381=64<=code3;while(v1381)}else{var v1382=64<=code3;do code1+=code3=this.getWhiteCode(),v1382=64<=code3;while(v1382)}var v21373=
this.codingPos;introspect(JAM.policy.p1)var v6919=codingLine[v21373];JAM.call(this.addPixels,this,[v6919+code1,blackPixels]);blackPixels^=1;var v21374=this.codingPos;introspect(JAM.policy.p1)var v6920=codingLine[v21374];v1384=v6920<columns}}this.byteAlign&&(this.inputBits&=-8);var gotEOL=!1,v6923=!this.eoblock;v6923&&(v6923=this.row==this.rows-1);if(v6923)this.eof=!0;else{code1=JAM.call(this.lookBits,this,[12]);for(var v1387=0==code1;v1387;)JAM.call(this.eatBits,this,[1]),code1=JAM.call(this.lookBits,
this,[12]),v1387=0==code1;1==code1?(JAM.call(this.eatBits,this,[12]),gotEOL=!0):code1==EOF&&(this.eof=!0)}var v6924=!this.eof;v6924&&(v6924=0<this.encoding);v6924&&(this.nextLine2D=!JAM.call(this.lookBits,this,[1]),JAM.call(this.eatBits,this,[1]));var v6925=this.eoblock;v6925&&(v6925=gotEOL);if(v6925){if(code1=JAM.call(this.lookBits,this,[12]),1==code1){JAM.call(this.eatBits,this,[12]);0<this.encoding&&(JAM.call(this.lookBits,this,[1]),JAM.call(this.eatBits,this,[1]));if(0<=this.encoding)for(var i=
0,v1397=4>i;v1397;)code1=JAM.call(this.lookBits,this,[12]),1!=code1&&warn("bad rtc code: "+code1),JAM.call(this.eatBits,this,[12]),0<this.encoding&&(JAM.call(this.lookBits,this,[1]),JAM.call(this.eatBits,this,[1])),i+=1,v1397=4>i;this.eof=!0}}else{var v6929=this.err;v6929&&(v6929=this.eoline);if(v6929){for(;;){code1=JAM.call(this.lookBits,this,[13]);if(code1==EOF)return this.eof=!0,null;if(1==code1>>1)break;JAM.call(this.eatBits,this,[1])}JAM.call(this.eatBits,this,[12]);0<this.encoding&&(JAM.call(this.eatBits,
this,[1]),this.nextLine2D=!(code1&1))}}this.outputBits=0<codingLine[0]?codingLine[this.codingPos=0]:codingLine[this.codingPos=1];this.row+=1}if(8<=this.outputBits){var v1410;this.buf=v1410=this.codingPos&1?0:255;this.outputBits-=8;var v6937=0==this.outputBits;if(v6937){var v22519=this.codingPos;introspect(JAM.policy.p1)var v21382=codingLine[v22519];v6937=v21382<columns}if(v6937){var v6939=this.codingPos+=1;introspect(JAM.policy.p1)var v1411=codingLine[v6939];var v6940=this.codingPos-1;introspect(JAM.policy.p1)var v1412=
codingLine[v6940];this.outputBits=v1411-v1412}}else{bits=8;this.buf=0;do if(this.outputBits>bits)this.buf<<=bits,this.codingPos&1||(this.buf|=255>>8-bits),this.outputBits-=bits,bits=0;else{this.buf<<=this.outputBits;this.codingPos&1||(this.buf|=255>>8-this.outputBits);bits-=this.outputBits;this.outputBits=0;var v21388=this.codingPos;introspect(JAM.policy.p1)var v6953=codingLine[v21388];if(v6953<columns){var v6955=this.codingPos+=1;introspect(JAM.policy.p1)var v1416=codingLine[v6955];var v6956=this.codingPos-
1;introspect(JAM.policy.p1)var v1417=codingLine[v6956];this.outputBits=v1416-v1417}else 0<bits&&(this.buf<<=bits,bits=0)}while(bits)}this.black&&(this.buf^=255);return this.buf}function ccittFaxStreamAddPixelsNeg(a1,blackPixels){var codingLine=this.codingLine,codingPos=this.codingPos;introspect(JAM.policy.p1)var v6959=codingLine[codingPos];if(a1>v6959)a1>this.columns&&(warn("row is wrong length"),this.err=!0,a1=this.columns),codingPos&1^blackPixels&&(codingPos+=1),JAM.set(codingLine,codingPos,a1);
else{introspect(JAM.policy.p1)v6959=codingLine[codingPos];if(a1<v6959){0>a1&&(warn("invalid code"),this.err=!0,a1=0);if(v6959=0<codingPos){v6959=codingPos-1;introspect(JAM.policy.p1)v6959=codingLine[v6959];v6959=a1<v6959}for(;v6959;)if(codingPos-=1,v6959=0<codingPos){v6959=codingPos-1;introspect(JAM.policy.p1)v6959=codingLine[v6959];v6959=a1<v6959}JAM.set(codingLine,codingPos,a1)}}this.codingPos=codingPos}function ccittFaxStreamAddPixels(a1,blackPixels){var codingLine=this.codingLine,codingPos=this.codingPos;
introspect(JAM.policy.p1)var v6965=codingLine[codingPos];a1>v6965&&(a1>this.columns&&(warn("row is wrong length"),this.err=!0,a1=this.columns),codingPos&1^blackPixels&&(codingPos+=1),JAM.set(codingLine,codingPos,a1));this.codingPos=codingPos}function CCITTFaxStream_readBlock(){for(var v1435=!this.eof;v1435;){v1435=this.lookChar();this.buf=EOF;JAM.call(this.ensureBuffer,this,[this.bufferLength+1]);var v1433=this.buffer,v1434=this.bufferLength;this.bufferLength+=1;JAM.set(v1433,v1434,v1435);v1435=!this.eof}}
function CCITTFaxStream(str,params){this.str=str;this.dict=str.dict;var v1436=params;v1436||(v1436=new Dict);params=v1436;(v1436=JAM.call(params.get,params,["K"]))||(v1436=0);this.encoding=v1436;(v1436=JAM.call(params.get,params,["EndOfLine"]))||(v1436=!1);this.eoline=v1436;(v1436=JAM.call(params.get,params,["EncodedByteAlign"]))||(v1436=!1);this.byteAlign=v1436;(v1436=JAM.call(params.get,params,["Columns"]))||(v1436=1728);this.columns=v1436;(v1436=JAM.call(params.get,params,["Rows"]))||(v1436=0);
this.rows=v1436;v1436=JAM.call(params.get,params,["EndOfBlock"]);null==v1436&&(v1436=!0);this.eoblock=v1436;(v1436=JAM.call(params.get,params,["BlackIs1"]))||(v1436=!1);this.black=v1436;this.codingLine=v1436=new Uint32Array(this.columns+1);this.refLine=v1436=new Uint32Array(this.columns+2);this.codingLine[0]=this.columns;this.row=this.codingPos=0;this.nextLine2D=0>this.encoding;this.outputBits=this.inputBuf=this.inputBits=0;this.buf=EOF;for(var v1448=0==(v1436=JAM.call(this.lookBits,this,[12]));v1448;)JAM.call(this.eatBits,
this,[1]),v1448=0==(v1436=JAM.call(this.lookBits,this,[12]));1==v1436&&JAM.call(this.eatBits,this,[12]);0<this.encoding&&(this.nextLine2D=!JAM.call(this.lookBits,this,[1]),JAM.call(this.eatBits,this,[1]));JAM.call(DecodeStream.call,DecodeStream,[this])}var ccittEOL=-2,twoDimPass=0,twoDimHoriz=1,twoDimVert0=2,twoDimVertR1=3,twoDimVertL1=4,twoDimVertR2=5,twoDimVertL2=6,twoDimVertR3=7,twoDimVertL3=8,twoDimTable=[[-1,-1],[-1,-1],[7,twoDimVertL3],[7,twoDimVertR3],[6,twoDimVertL2],[6,twoDimVertL2],[6,twoDimVertR2],
[6,twoDimVertR2],[4,twoDimPass],[4,twoDimPass],[4,twoDimPass],[4,twoDimPass],[4,twoDimPass],[4,twoDimPass],[4,twoDimPass],[4,twoDimPass],[3,twoDimHoriz],[3,twoDimHoriz],[3,twoDimHoriz],[3,twoDimHoriz],[3,twoDimHoriz],[3,twoDimHoriz],[3,twoDimHoriz],[3,twoDimHoriz],[3,twoDimHoriz],[3,twoDimHoriz],[3,twoDimHoriz],[3,twoDimHoriz],[3,twoDimHoriz],[3,twoDimHoriz],[3,twoDimHoriz],[3,twoDimHoriz],[3,twoDimVertL1],[3,twoDimVertL1],[3,twoDimVertL1],[3,twoDimVertL1],[3,twoDimVertL1],[3,twoDimVertL1],[3,twoDimVertL1],
[3,twoDimVertL1],[3,twoDimVertL1],[3,twoDimVertL1],[3,twoDimVertL1],[3,twoDimVertL1],[3,twoDimVertL1],[3,twoDimVertL1],[3,twoDimVertL1],[3,twoDimVertL1],[3,twoDimVertR1],[3,twoDimVertR1],[3,twoDimVertR1],[3,twoDimVertR1],[3,twoDimVertR1],[3,twoDimVertR1],[3,twoDimVertR1],[3,twoDimVertR1],[3,twoDimVertR1],[3,twoDimVertR1],[3,twoDimVertR1],[3,twoDimVertR1],[3,twoDimVertR1],[3,twoDimVertR1],[3,twoDimVertR1],[3,twoDimVertR1],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],
[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],
[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0]],whiteTable1=[[-1,-1],[12,ccittEOL],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,
-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[11,1792],[11,1792],[12,1984],[12,2048],[12,2112],[12,2176],[12,2240],[12,2304],[11,1856],[11,1856],[11,1920],[11,1920],[12,2368],[12,2432],[12,2496],[12,2560]],v1612=[-1,-1],v1613=[-1,-1],v1614=[-1,-1],v1615=[-1,-1],v1616=[8,29],v1617=[8,29],v1618=[8,30],v1619=[8,30],v1620=[8,45],v1621=[8,45],v1622=[8,46],v1623=[8,46],v1624=[7,22],v1625=[7,22],v1626=[7,22],v1627=[7,22],v1628=[7,23],v1629=[7,23],v1630=[7,23],v1631=[7,23],
v1632=[8,47],v1633=[8,47],v1634=[8,48],v1635=[8,48],v1636=[6,13],v1637=[6,13],v1638=[6,13],v1639=[6,13],v1640=[6,13],v1641=[6,13],v1642=[6,13],v1643=[6,13],v1644=[7,20],v1645=[7,20],v1646=[7,20],v1647=[7,20],v1648=[8,33],v1649=[8,33],v1650=[8,34],v1651=[8,34],v1652=[8,35],v1653=[8,35],v1654=[8,36],v1655=[8,36],v1656=[8,37],v1657=[8,37],v1658=[8,38],v1659=[8,38],v1660=[7,19],v1661=[7,19],v1662=[7,19],v1663=[7,19],v1664=[8,31],v1665=[8,31],v1666=[8,32],v1667=[8,32],v1668=[6,1],v1669=[6,1],v1670=[6,
1],v1671=[6,1],v1672=[6,1],v1673=[6,1],v1674=[6,1],v1675=[6,1],v1676=[6,12],v1677=[6,12],v1678=[6,12],v1679=[6,12],v1680=[6,12],v1681=[6,12],v1682=[6,12],v1683=[6,12],v1684=[8,53],v1685=[8,53],v1686=[8,54],v1687=[8,54],v1688=[7,26],v1689=[7,26],v1690=[7,26],v1691=[7,26],v1692=[8,39],v1693=[8,39],v1694=[8,40],v1695=[8,40],v1696=[8,41],v1697=[8,41],v1698=[8,42],v1699=[8,42],v1700=[8,43],v1701=[8,43],v1702=[8,44],v1703=[8,44],v1704=[7,21],v1705=[7,21],v1706=[7,21],v1707=[7,21],v1708=[7,28],v1709=[7,
28],v1710=[7,28],v1711=[7,28],v1712=[8,61],v1713=[8,61],v1714=[8,62],v1715=[8,62],v1716=[8,63],v1717=[8,63],v1718=[8,0],v1719=[8,0],v1720=[8,320],v1721=[8,320],v1722=[8,384],v1723=[8,384],v1724=[5,10],v1725=[5,10],v1726=[5,10],v1727=[5,10],v1728=[5,10],v1729=[5,10],v1730=[5,10],v1731=[5,10],v1732=[5,10],v1733=[5,10],v1734=[5,10],v1735=[5,10],v1736=[5,10],v1737=[5,10],v1738=[5,10],v1739=[5,10],v1740=[5,11],v1741=[5,11],v1742=[5,11],v1743=[5,11],v1744=[5,11],v1745=[5,11],v1746=[5,11],v1747=[5,11],v1748=
[5,11],v1749=[5,11],v1750=[5,11],v1751=[5,11],v1752=[5,11],v1753=[5,11],v1754=[5,11],v1755=[5,11],v1756=[7,27],v1757=[7,27],v1758=[7,27],v1759=[7,27],v1760=[8,59],v1761=[8,59],v1762=[8,60],v1763=[8,60],v1764=[9,1472],v1765=[9,1536],v1766=[9,1600],v1767=[9,1728],v1768=[7,18],v1769=[7,18],v1770=[7,18],v1771=[7,18],v1772=[7,24],v1773=[7,24],v1774=[7,24],v1775=[7,24],v1776=[8,49],v1777=[8,49],v1778=[8,50],v1779=[8,50],v1780=[8,51],v1781=[8,51],v1782=[8,52],v1783=[8,52],v1784=[7,25],v1785=[7,25],v1786=
[7,25],v1787=[7,25],v1788=[8,55],v1789=[8,55],v1790=[8,56],v1791=[8,56],v1792=[8,57],v1793=[8,57],v1794=[8,58],v1795=[8,58],v1796=[6,192],v1797=[6,192],v1798=[6,192],v1799=[6,192],v1800=[6,192],v1801=[6,192],v1802=[6,192],v1803=[6,192],v1804=[6,1664],v1805=[6,1664],v1806=[6,1664],v1807=[6,1664],v1808=[6,1664],v1809=[6,1664],v1810=[6,1664],v1811=[6,1664],v1812=[8,448],v1813=[8,448],v1814=[8,512],v1815=[8,512],v1816=[9,704],v1817=[9,768],v1818=[8,640],v1819=[8,640],v1820=[8,576],v1821=[8,576],v1822=
[9,832],v1823=[9,896],v1824=[9,960],v1825=[9,1024],v1826=[9,1088],v1827=[9,1152],v1828=[9,1216],v1829=[9,1280],v1830=[9,1344],v1831=[9,1408],v1832=[7,256],v1833=[7,256],v1834=[7,256],v1835=[7,256],v1836=[4,2],v1837=[4,2],v1838=[4,2],v1839=[4,2],v1840=[4,2],v1841=[4,2],v1842=[4,2],v1843=[4,2],v1844=[4,2],v1845=[4,2],v1846=[4,2],v1847=[4,2],v1848=[4,2],v1849=[4,2],v1850=[4,2],v1851=[4,2],v1852=[4,2],v1853=[4,2],v1854=[4,2],v1855=[4,2],v1856=[4,2],v1857=[4,2],v1858=[4,2],v1859=[4,2],v1860=[4,2],v1861=
[4,2],v1862=[4,2],v1863=[4,2],v1864=[4,2],v1865=[4,2],v1866=[4,2],v1867=[4,2],v1868=[4,3],v1869=[4,3],v1870=[4,3],v1871=[4,3],v1872=[4,3],v1873=[4,3],v1874=[4,3],v1875=[4,3],v1876=[4,3],v1877=[4,3],v1878=[4,3],v1879=[4,3],v1880=[4,3],v1881=[4,3],v1882=[4,3],v1883=[4,3],v1884=[4,3],v1885=[4,3],v1886=[4,3],v1887=[4,3],v1888=[4,3],v1889=[4,3],v1890=[4,3],v1891=[4,3],v1892=[4,3],v1893=[4,3],v1894=[4,3],v1895=[4,3],v1896=[4,3],v1897=[4,3],v1898=[4,3],v1899=[4,3],v1900=[5,128],v1901=[5,128],v1902=[5,128],
v1903=[5,128],v1904=[5,128],v1905=[5,128],v1906=[5,128],v1907=[5,128],v1908=[5,128],v1909=[5,128],v1910=[5,128],v1911=[5,128],v1912=[5,128],v1913=[5,128],v1914=[5,128],v1915=[5,128],v1916=[5,8],v1917=[5,8],v1918=[5,8],v1919=[5,8],v1920=[5,8],v1921=[5,8],v1922=[5,8],v1923=[5,8],v1924=[5,8],v1925=[5,8],v1926=[5,8],v1927=[5,8],v1928=[5,8],v1929=[5,8],v1930=[5,8],v1931=[5,8],v1932=[5,9],v1933=[5,9],v1934=[5,9],v1935=[5,9],v1936=[5,9],v1937=[5,9],v1938=[5,9],v1939=[5,9],v1940=[5,9],v1941=[5,9],v1942=[5,
9],v1943=[5,9],v1944=[5,9],v1945=[5,9],v1946=[5,9],v1947=[5,9],v1948=[6,16],v1949=[6,16],v1950=[6,16],v1951=[6,16],v1952=[6,16],v1953=[6,16],v1954=[6,16],v1955=[6,16],v1956=[6,17],v1957=[6,17],v1958=[6,17],v1959=[6,17],v1960=[6,17],v1961=[6,17],v1962=[6,17],v1963=[6,17],v1964=[4,4],v1965=[4,4],v1966=[4,4],v1967=[4,4],v1968=[4,4],v1969=[4,4],v1970=[4,4],v1971=[4,4],v1972=[4,4],v1973=[4,4],v1974=[4,4],v1975=[4,4],v1976=[4,4],v1977=[4,4],v1978=[4,4],v1979=[4,4],v1980=[4,4],v1981=[4,4],v1982=[4,4],v1983=
[4,4],v1984=[4,4],v1985=[4,4],v1986=[4,4],v1987=[4,4],v1988=[4,4],v1989=[4,4],v1990=[4,4],v1991=[4,4],v1992=[4,4],v1993=[4,4],v1994=[4,4],v1995=[4,4],v1996=[4,5],v1997=[4,5],v1998=[4,5],v1999=[4,5],v2000=[4,5],v2001=[4,5],v2002=[4,5],v2003=[4,5],v2004=[4,5],v2005=[4,5],v2006=[4,5],v2007=[4,5],v2008=[4,5],v2009=[4,5],v2010=[4,5],v2011=[4,5],v2012=[4,5],v2013=[4,5],v2014=[4,5],v2015=[4,5],v2016=[4,5],v2017=[4,5],v2018=[4,5],v2019=[4,5],v2020=[4,5],v2021=[4,5],v2022=[4,5],v2023=[4,5],v2024=[4,5],v2025=
[4,5],v2026=[4,5],v2027=[4,5],v2028=[6,14],v2029=[6,14],v2030=[6,14],v2031=[6,14],v2032=[6,14],v2033=[6,14],v2034=[6,14],v2035=[6,14],v2036=[6,15],v2037=[6,15],v2038=[6,15],v2039=[6,15],v2040=[6,15],v2041=[6,15],v2042=[6,15],v2043=[6,15],v2044=[5,64],v2045=[5,64],v2046=[5,64],v2047=[5,64],v2048=[5,64],v2049=[5,64],v2050=[5,64],v2051=[5,64],v2052=[5,64],v2053=[5,64],v2054=[5,64],v2055=[5,64],v2056=[5,64],v2057=[5,64],v2058=[5,64],v2059=[5,64],v2060=[4,6],v2061=[4,6],v2062=[4,6],v2063=[4,6],v2064=[4,
6],v2065=[4,6],v2066=[4,6],v2067=[4,6],v2068=[4,6],v2069=[4,6],v2070=[4,6],v2071=[4,6],v2072=[4,6],v2073=[4,6],v2074=[4,6],v2075=[4,6],v2076=[4,6],v2077=[4,6],v2078=[4,6],v2079=[4,6],v2080=[4,6],v2081=[4,6],v2082=[4,6],v2083=[4,6],v2084=[4,6],v2085=[4,6],v2086=[4,6],v2087=[4,6],v2088=[4,6],v2089=[4,6],v2090=[4,6],v2091=[4,6],v2092=[4,7],v2093=[4,7],v2094=[4,7],v2095=[4,7],v2096=[4,7],v2097=[4,7],v2098=[4,7],v2099=[4,7],v2100=[4,7],v2101=[4,7],v2102=[4,7],v2103=[4,7],v2104=[4,7],v2105=[4,7],v2106=
[4,7],v2107=[4,7],v2108=[4,7],v2109=[4,7],v2110=[4,7],v2111=[4,7],v2112=[4,7],v2113=[4,7],v2114=[4,7],v2115=[4,7],v2116=[4,7],v2117=[4,7],v2118=[4,7],v2119=[4,7],v2120=[4,7],v2121=[4,7],v2122=[4,7],v2123=[4,7],v23563=[v1612,v1613,v1614,v1615,v1616,v1617,v1618,v1619,v1620,v1621,v1622,v1623,v1624,v1625,v1626,v1627,v1628,v1629,v1630,v1631,v1632,v1633,v1634,v1635,v1636,v1637,v1638,v1639,v1640,v1641,v1642,v1643,v1644,v1645,v1646,v1647,v1648,v1649,v1650,v1651,v1652,v1653,v1654,v1655,v1656,v1657,v1658,v1659,
v1660,v1661,v1662,v1663,v1664,v1665,v1666,v1667,v1668,v1669,v1670,v1671,v1672,v1673,v1674,v1675,v1676,v1677,v1678,v1679,v1680,v1681,v1682,v1683,v1684,v1685,v1686,v1687,v1688,v1689,v1690,v1691,v1692,v1693,v1694,v1695,v1696,v1697,v1698,v1699,v1700,v1701,v1702,v1703,v1704,v1705,v1706,v1707,v1708,v1709,v1710,v1711,v1712,v1713,v1714,v1715,v1716,v1717,v1718,v1719,v1720,v1721,v1722,v1723,v1724,v1725,v1726,v1727,v1728,v1729,v1730,v1731,v1732,v1733,v1734,v1735,v1736,v1737,v1738,v1739,v1740,v1741,v1742,v1743,
v1744,v1745,v1746,v1747,v1748,v1749,v1750,v1751,v1752,v1753,v1754,v1755,v1756,v1757,v1758,v1759,v1760,v1761,v1762,v1763,v1764,v1765,v1766,v1767,v1768,v1769,v1770,v1771,v1772,v1773,v1774,v1775,v1776,v1777,v1778,v1779,v1780,v1781,v1782,v1783,v1784,v1785,v1786,v1787,v1788,v1789,v1790,v1791,v1792,v1793,v1794,v1795,v1796,v1797,v1798,v1799,v1800,v1801,v1802,v1803,v1804,v1805,v1806,v1807,v1808,v1809,v1810,v1811,v1812,v1813,v1814,v1815,v1816,v1817,v1818,v1819,v1820,v1821,v1822,v1823,v1824,v1825,v1826,v1827,
v1828,v1829,v1830,v1831,v1832,v1833,v1834,v1835,v1836,v1837,v1838,v1839,v1840,v1841,v1842,v1843,v1844,v1845,v1846,v1847,v1848,v1849,v1850,v1851,v1852,v1853,v1854,v1855,v1856,v1857,v1858,v1859,v1860,v1861,v1862,v1863,v1864,v1865,v1866,v1867,v1868,v1869,v1870,v1871,v1872,v1873,v1874,v1875,v1876,v1877,v1878,v1879,v1880,v1881,v1882,v1883,v1884,v1885,v1886,v1887,v1888,v1889,v1890,v1891,v1892,v1893,v1894,v1895,v1896,v1897,v1898,v1899,v1900,v1901,v1902,v1903,v1904,v1905,v1906,v1907,v1908,v1909,v1910,v1911,
v1912,v1913,v1914,v1915,v1916,v1917,v1918,v1919,v1920,v1921,v1922,v1923,v1924,v1925,v1926,v1927,v1928,v1929,v1930,v1931,v1932,v1933,v1934,v1935,v1936,v1937,v1938,v1939,v1940,v1941,v1942,v1943,v1944,v1945,v1946,v1947,v1948,v1949,v1950,v1951,v1952,v1953,v1954,v1955,v1956,v1957,v1958,v1959,v1960,v1961,v1962,v1963,v1964,v1965,v1966,v1967,v1968,v1969,v1970,v1971,v1972,v1973,v1974,v1975,v1976,v1977,v1978,v1979,v1980,v1981,v1982,v1983,v1984,v1985,v1986,v1987,v1988,v1989,v1990,v1991,v1992,v1993,v1994,v1995,
v1996,v1997,v1998,v1999,v2000,v2001,v2002,v2003,v2004,v2005,v2006,v2007,v2008,v2009,v2010,v2011,v2012,v2013,v2014,v2015,v2016,v2017,v2018,v2019,v2020,v2021,v2022,v2023,v2024,v2025,v2026,v2027,v2028,v2029,v2030,v2031,v2032,v2033,v2034,v2035,v2036,v2037,v2038,v2039,v2040,v2041,v2042,v2043,v2044,v2045,v2046,v2047,v2048,v2049,v2050,v2051,v2052,v2053,v2054,v2055,v2056,v2057,v2058,v2059,v2060,v2061,v2062,v2063,v2064,v2065,v2066,v2067,v2068,v2069,v2070,v2071,v2072,v2073,v2074,v2075,v2076,v2077,v2078,v2079,
v2080,v2081,v2082,v2083,v2084,v2085,v2086,v2087,v2088,v2089,v2090,v2091,v2092,v2093,v2094,v2095,v2096,v2097,v2098,v2099,v2100,v2101,v2102,v2103,v2104,v2105,v2106,v2107,v2108,v2109,v2110,v2111],v23564=[v2112,v2113,v2114,v2115,v2116,v2117,v2118,v2119,v2120,v2121,v2122,v2123],whiteTable2=v23563.concat(v23564),blackTable1=[[-1,-1],[-1,-1],[12,ccittEOL],[12,ccittEOL],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],
[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[11,1792],[11,1792],[11,1792],[11,1792],[12,1984],[12,1984],[12,2048],[12,2048],[12,2112],[12,2112],[12,2176],[12,2176],[12,2240],[12,2240],[12,2304],[12,2304],[11,1856],[11,1856],[11,1856],[11,1856],[11,1920],[11,1920],[11,1920],[11,1920],[12,2368],[12,2368],[12,2432],[12,2432],[12,2496],[12,2496],[12,2560],[12,2560],[10,18],[10,18],[10,18],[10,18],[10,18],[10,18],[10,18],[10,18],[12,52],[12,52],[13,640],[13,
704],[13,768],[13,832],[12,55],[12,55],[12,56],[12,56],[13,1280],[13,1344],[13,1408],[13,1472],[12,59],[12,59],[12,60],[12,60],[13,1536],[13,1600],[11,24],[11,24],[11,24],[11,24],[11,25],[11,25],[11,25],[11,25],[13,1664],[13,1728],[12,320],[12,320],[12,384],[12,384],[12,448],[12,448],[13,512],[13,576],[12,53],[12,53],[12,54],[12,54],[13,896],[13,960],[13,1024],[13,1088],[13,1152],[13,1216],[10,64],[10,64],[10,64],[10,64],[10,64],[10,64],[10,64],[10,64]],blackTable2=[[8,13],[8,13],[8,13],[8,13],[8,
13],[8,13],[8,13],[8,13],[8,13],[8,13],[8,13],[8,13],[8,13],[8,13],[8,13],[8,13],[11,23],[11,23],[12,50],[12,51],[12,44],[12,45],[12,46],[12,47],[12,57],[12,58],[12,61],[12,256],[10,16],[10,16],[10,16],[10,16],[10,17],[10,17],[10,17],[10,17],[12,48],[12,49],[12,62],[12,63],[12,30],[12,31],[12,32],[12,33],[12,40],[12,41],[11,22],[11,22],[8,14],[8,14],[8,14],[8,14],[8,14],[8,14],[8,14],[8,14],[8,14],[8,14],[8,14],[8,14],[8,14],[8,14],[8,14],[8,14],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,
10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[9,15],[9,15],[9,15],[9,15],[9,15],[9,15],[9,15],[9,15],[12,128],[12,192],[12,26],[12,27],[12,28],[12,29],
[11,19],[11,19],[11,20],[11,20],[12,34],[12,35],[12,36],[12,37],[12,38],[12,39],[11,21],[11,21],[12,42],[12,43],[10,0],[10,0],[10,0],[10,0],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12]],blackTable3=[[-1,-1],[-1,-1],[-1,-1],[-1,-1],[6,9],[6,8],[5,7],[5,7],[4,6],[4,6],[4,6],[4,6],[4,5],[4,5],[4,5],[4,5],[3,1],[3,1],[3,1],[3,
1],[3,1],[3,1],[3,1],[3,1],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,2],[2,2],[2,2],[2,2],[2,2],[2,2],[2,2],[2,2],[2,2],[2,2],[2,2],[2,2],[2,2],[2,2],[2,2],[2,2]],v2508=CCITTFaxStream,v23426=Object.create(DecodeStream.prototype);v2508.prototype=v23426;CCITTFaxStream.prototype.readBlock=CCITTFaxStream_readBlock;CCITTFaxStream.prototype.addPixels=ccittFaxStreamAddPixels;CCITTFaxStream.prototype.addPixelsNeg=
ccittFaxStreamAddPixelsNeg;CCITTFaxStream.prototype.lookChar=CCITTFaxStream_lookChar;CCITTFaxStream.prototype.findTableCode=ccittFaxStreamFindTableCode;CCITTFaxStream.prototype.getTwoDimCode=ccittFaxStreamGetTwoDimCode;CCITTFaxStream.prototype.getWhiteCode=ccittFaxStreamGetWhiteCode;CCITTFaxStream.prototype.getBlackCode=ccittFaxStreamGetBlackCode;CCITTFaxStream.prototype.lookBits=CCITTFaxStream_lookBits;CCITTFaxStream.prototype.eatBits=CCITTFaxStream_eatBits;return CCITTFaxStream}function RunLengthStreamClosure(){function RunLengthStream_readBlock(){var v2519=
this.str,repeatHeader=JAM.call(v2519.getBytes,v2519,[2]),v2519=!repeatHeader;v2519||(v2519=2>repeatHeader.length)||(v2519=128==repeatHeader[0]);if(v2519)this.eof=!0;else{var v2519=this.bufferLength,n=repeatHeader[0];if(128>n){var buffer=JAM.call(this.ensureBuffer,this,[v2519+n+1]),v2522=v2519,v2519=v2519+1;JAM.set(buffer,v2522,repeatHeader[1]);0<n&&(repeatHeader=this.str,repeatHeader=JAM.call(repeatHeader.getBytes,repeatHeader,[n]),JAM.call(buffer.set,buffer,[repeatHeader,v2519]),v2519+=n)}else for(var n=
257-n,repeatHeader=repeatHeader[1],buffer=JAM.call(this.ensureBuffer,this,[v2519+n+1]),v2522=0,v2527=v2522<n;v2527;)v2527=v2519,v2519+=1,JAM.set(buffer,v2527,repeatHeader),v2522+=1,v2527=v2522<n;this.bufferLength=v2519}}function RunLengthStream(str){this.str=str;this.dict=str.dict;JAM.call(DecodeStream.call,DecodeStream,[this])}var v2529=RunLengthStream,v23427=Object.create(DecodeStream.prototype);v2529.prototype=v23427;RunLengthStream.prototype.readBlock=RunLengthStream_readBlock;return RunLengthStream}
function AsciiHexStreamClosure(){function AsciiHexStream_readBlock(){var gtCode=62,bytes=this.str.getBytes(),c,n,decodeLength,bufferLength,i,length;decodeLength=bytes.length+1>>1;decodeLength=JAM.call(this.ensureBuffer,this,[this.bufferLength+decodeLength]);bufferLength=this.bufferLength;i=0;length=bytes.length;for(c=i<length;c;){introspect(JAM.policy.p1)c=bytes[i];introspect(JAM.policy.p1)c=hexvalueMap[c];for((n=-1==c)&&(n=i+1<length);n;){c=i+=1;introspect(JAM.policy.p1)c=bytes[c];introspect(JAM.policy.p1)c=
hexvalueMap[c];(n=-1==c)&&(n=i+1<length)}if(n=i+1<length){n=i+1;introspect(JAM.policy.p1)n=bytes[n];n=n!==gtCode}if(n){n=i+=1;introspect(JAM.policy.p1)n=bytes[n];introspect(JAM.policy.p1)n=hexvalueMap[n];var v2538=bufferLength;bufferLength+=1;JAM.set(decodeLength,v2538,16*c+n)}else{introspect(JAM.policy.p1)n=bytes[i];n!==gtCode&&(n=bufferLength,bufferLength+=1,JAM.set(decodeLength,n,16*c))}i+=1;c=i<length}this.bufferLength=bufferLength;this.eof=!0}function AsciiHexStream(str){this.str=str;this.dict=
str.dict;JAM.call(DecodeStream.call,DecodeStream,[this])}var hexvalueMap={9:-1,32:-1,48:0,49:1,50:2,51:3,52:4,53:5,54:6,55:7,56:8,57:9,65:10,66:11,67:12,68:13,69:14,70:15,97:10,98:11,99:12,100:13,101:14,102:15},v2543=AsciiHexStream,v23428=Object.create(DecodeStream.prototype);v2543.prototype=v23428;AsciiHexStream.prototype.readBlock=AsciiHexStream_readBlock;return AsciiHexStream}function Ascii85StreamClosure(){function Ascii85Stream_readBlock(){for(var tildaCode=126,zCode=122,str=this.str,c=str.getByte(),
v2545=JAM.call(Lexer.isSpace,Lexer,[String.fromCharCode(c)]);v2545;)c=str.getByte(),v2545=JAM.call(Lexer.isSpace,Lexer,[String.fromCharCode(c)]);(v2545=!c)||(v2545=c===tildaCode);if(v2545)this.eof=!0;else if(v2545=this.bufferLength,c==zCode){for(var tildaCode=JAM.call(this.ensureBuffer,this,[v2545+4]),zCode=0,v2549=4>zCode;v2549;)JAM.set(tildaCode,v2545+zCode,0),zCode+=1,v2549=4>zCode;this.bufferLength+=4}else{v2549=this.input;v2549[0]=c;zCode=1;for(c=5>zCode;c;){for(var c=str.getByte(),v2550=JAM.call(Lexer.isSpace,
Lexer,[String.fromCharCode(c)]);v2550;)c=str.getByte(),v2550=JAM.call(Lexer.isSpace,Lexer,[String.fromCharCode(c)]);v2549[zCode]=c;(v2550=!c)||(v2550=c==tildaCode);if(v2550)break;zCode+=1;c=5>zCode}tildaCode=JAM.call(this.ensureBuffer,this,[v2545+zCode-1]);this.bufferLength+=zCode-1;if(5>zCode){for(str=5>zCode;str;)v2549[zCode]=117,zCode+=1,str=5>zCode;this.eof=!0}zCode=str=0;for(c=5>zCode;c;){str*=85;introspect(JAM.policy.p1)c=v2549[zCode];str+=c-33;zCode+=1;c=5>zCode}zCode=3;for(v2549=0<=zCode;v2549;)JAM.set(tildaCode,
v2545+zCode,str&255),str>>=8,zCode-=1,v2549=0<=zCode}}function Ascii85Stream(str){this.str=str;this.dict=str.dict;this.input=str=new Uint8Array(5);JAM.call(DecodeStream.call,DecodeStream,[this])}var v2562=Ascii85Stream,v23430=Object.create(DecodeStream.prototype);v2562.prototype=v23430;Ascii85Stream.prototype.readBlock=Ascii85Stream_readBlock;return Ascii85Stream}function DecryptStreamClosure(){function DecryptStream_readBlock(){var v2564=this.str,v2564=JAM.call(v2564.getBytes,v2564,[chunkSize]),
v7010=!v2564;v7010||(v7010=0==v2564.length);if(v7010)this.eof=!0;else{var v7010=this.decrypt,v2564=JAM.call(v7010,null,[v2564]),v7010=this.bufferLength,i,n=v2564.length,buffer=JAM.call(this.ensureBuffer,this,[v7010+n]);i=0;for(var v2568=i<n;v2568;)v2568=v7010,v7010+=1,JAM.set(buffer,v2568,JAM.get(v2564,i,JAM.policy.p1)),i+=1,v2568=i<n;this.bufferLength=v7010}}function DecryptStream(str,decrypt){this.str=str;this.dict=str.dict;this.decrypt=decrypt;JAM.call(DecodeStream.call,DecodeStream,[this])}var chunkSize=
512,v2569=DecryptStream,v23431=Object.create(DecodeStream.prototype);v2569.prototype=v23431;DecryptStream.prototype.readBlock=DecryptStream_readBlock;return DecryptStream}function JpxStreamClosure(){function JpxStream_getChar(){error$$1("internal error: getChar is not valid on JpxStream")}function JpxStream_ensureBuffer(req){if(!this.bufferLength){req=new JpxImage;JAM.call(req.parse,req,[this.bytes]);var width=req.width,height=req.height,componentsCount=req.componentsCount,v7012=1!=componentsCount;
v7012&&(v7012=3!=componentsCount)&&(v7012=4!=componentsCount);v7012&&error$$1("JPX with "+componentsCount+" components is not supported");for(var height=new Uint8Array(width*height*componentsCount),v7012=0,kk=req.tiles.length,v2609=v7012<kk;v2609;){v2609=req.tiles;introspect(JAM.policy.p1)var tileCompoments=v2609[v7012];var v2609=tileCompoments[0].width,tileHeight=tileCompoments[0].height,tileLeft=tileCompoments[0].left,tileTop=tileCompoments[0].top,data0,data1,data2,data3;switch(componentsCount){case 1:data0=
tileCompoments[0].items;var tileLeft=width*tileTop+tileLeft,tileCompoments=width-v2609,j=tileTop=0;for(data1=j<tileHeight;data1;){var i=0;for(data1=i<v2609;data1;)data1=tileLeft,tileLeft+=1,data2=tileTop,tileTop+=1,JAM.set(height,data1,data0[data2]),i+=1,data1=i<v2609;tileLeft+=tileCompoments;j+=1;data1=j<tileHeight}break;case 3:data0=tileCompoments[0].items;data1=tileCompoments[1].items;data2=tileCompoments[2].items;tileLeft=3*(width*tileTop+tileLeft);tileCompoments=3*(width-v2609);j=tileTop=0;for(i=
j<tileHeight;i;){i=0;for(data3=i<v2609;data3;){data3=tileLeft;tileLeft+=1;introspect(JAM.policy.p1)height[data3]=data0[tileTop];data3=tileLeft;tileLeft+=1;introspect(JAM.policy.p1)height[data3]=data1[tileTop];data3=tileLeft;tileLeft+=1;introspect(JAM.policy.p1)height[data3]=data2[tileTop];tileTop+=1;i+=1;data3=i<v2609}tileLeft+=tileCompoments;j+=1;i=j<tileHeight}break;case 4:for(data0=tileCompoments[0].items,data1=tileCompoments[1].items,data2=tileCompoments[2].items,data3=tileCompoments[3].items,
tileLeft=4*(width*tileTop+tileLeft),tileCompoments=4*(width-v2609),j=tileTop=0,i=j<tileHeight;i;){for(var i=0,v2607=i<v2609;v2607;){v2607=tileLeft;tileLeft+=1;introspect(JAM.policy.p1)height[v2607]=data0[tileTop];v2607=tileLeft;tileLeft+=1;introspect(JAM.policy.p1)height[v2607]=data1[tileTop];v2607=tileLeft;tileLeft+=1;introspect(JAM.policy.p1)height[v2607]=data2[tileTop];v2607=tileLeft;tileLeft+=1;introspect(JAM.policy.p1)height[v2607]=data3[tileTop];tileTop+=1;i+=1;v2607=i<v2609}tileLeft+=tileCompoments;
j+=1;i=j<tileHeight}}v7012+=1;v2609=v7012<kk}this.buffer=height;this.bufferLength=height.length}}function JpxStream(bytes,dict){this.dict=dict;this.bytes=bytes;JAM.call(DecodeStream.call,DecodeStream,[this])}var v2610=JpxStream,v23432=Object.create(DecodeStream.prototype);v2610.prototype=v23432;JpxStream.prototype.ensureBuffer=JpxStream_ensureBuffer;JpxStream.prototype.getChar=JpxStream_getChar;return JpxStream}function JpegStreamClosure(){function JpegStream_isNativelyDecodable(xref,res){var v7019=
this.dict,v7019=JAM.call(ColorSpace.parse,ColorSpace,[JAM.call(v7019.get,v7019,["ColorSpace"]),xref,res]),v7019=v7019.numComps,v7020=1==v7019;v7020||(v7020=3==v7019);return v7020?!0:!1}function JpegStream_isNativelySupported(xref,res){var v7021=this.dict,v7021=JAM.call(ColorSpace.parse,ColorSpace,[JAM.call(v7021.get,v7021,["ColorSpace"]),xref,res]),v7022="DeviceGray"===v7021.name;v7022||(v7022="DeviceRGB"===v7021.name);if(v7022)return!0;(v7021="DeviceCMYK"===v7021.name)&&(v7021=!this.isAdobeImage)&&
(v7021=1>this.colorTransform);return v7021?!0:!1}function JpegStream_getChar(){error$$1("internal error: getChar is not valid on JpegStream")}function JpegStream_getIR(){return bytesToString(this.bytes)}function JpegStream_ensureBuffer(req){if(!this.bufferLength)try{var jpegImage=new JpegImage;-1!=this.colorTransform&&(jpegImage.colorTransform=this.colorTransform);JAM.call(jpegImage.parse,jpegImage,[this.bytes]);var width=jpegImage.width,height=jpegImage.height,data=JAM.call(jpegImage.getData,jpegImage,
[width,height]);this.buffer=data;this.bufferLength=data.length}catch(e){error$$1("JPEG error: "+e)}}function JpegStream(bytes,dict,xref){this.dict=dict;this.isAdobeImage=!1;(dict=JAM.call(dict.get,dict,["ColorTransform"]))||(dict=-1);this.colorTransform=dict;JSCompiler_inline_label_isAdobeImage_123:{dict=bytes;xref=Math.max(dict.length-16,1024);for(var i=0,v2627=i<xref;v2627;){introspect(JAM.policy.p1)v2627=dict[i];if(v2627=255==v2627){v2627=i+1;introspect(JAM.policy.p1)v2627=dict[v2627];if(v2627=
238==v2627){v2627=i+2;introspect(JAM.policy.p1)v2627=dict[v2627];if(v2627=0==v2627){v2627=i+3;introspect(JAM.policy.p1)v2627=dict[v2627];if(v2627=14==v2627){v2627=i+4;introspect(JAM.policy.p1)v2627=dict[v2627];if(v2627=65==v2627){v2627=i+5;introspect(JAM.policy.p1)v2627=dict[v2627];if(v2627=100==v2627){v2627=i+6;introspect(JAM.policy.p1)v2627=dict[v2627];if(v2627=111==v2627){v2627=i+7;introspect(JAM.policy.p1)v2627=dict[v2627];if(v2627=98==v2627){v2627=i+8;introspect(JAM.policy.p1)v2627=dict[v2627];
if(v2627=101==v2627){v2627=i+9;introspect(JAM.policy.p1)v2627=dict[v2627];v2627=0==v2627}}}}}}}}}if(v2627){dict=!0;break JSCompiler_inline_label_isAdobeImage_123}introspect(JAM.policy.p1)v2627=dict[i];if(v2627=255==v2627){v2627=i+1;introspect(JAM.policy.p1)v2627=dict[v2627];v2627=192==v2627}if(v2627)break;i+=1;v2627=i<xref}dict=!1}dict&&(this.isAdobeImage=!0,dict=new Uint8Array([255,236,0,8,69,77,66,69,68,0]),xref=new Uint8Array(bytes.length+dict.length),JAM.call(xref.set,xref,[bytes,dict.length]),
xref[0]=bytes[0],xref[1]=bytes[1],JAM.call(xref.set,xref,[dict,2]),bytes=xref);this.bytes=bytes;JAM.call(DecodeStream.call,DecodeStream,[this])}var v2631=JpegStream,v23433=Object.create(DecodeStream.prototype);v2631.prototype=v23433;JpegStream.prototype.ensureBuffer=JpegStream_ensureBuffer;JpegStream.prototype.getIR=JpegStream_getIR;JpegStream.prototype.getChar=JpegStream_getChar;JpegStream.prototype.isNativelySupported=JpegStream_isNativelySupported;JpegStream.prototype.isNativelyDecodable=JpegStream_isNativelyDecodable;
return JpegStream}function PredictorStreamClosure(){function predictorStreamReadBlockPng(){var rowBytes=this.rowBytes,pixBytes=this.pixBytes,predictor=this.stream.getByte(),v2638=this.stream,v2638=JAM.call(v2638.getBytes,v2638,[rowBytes]),bufferLength=this.bufferLength,buffer=JAM.call(this.ensureBuffer,this,[bufferLength+rowBytes]),prevRow=buffer.subarray(bufferLength-rowBytes,bufferLength);0==prevRow.length&&(prevRow=new Uint8Array(rowBytes));switch(predictor){case 0:predictor=0;for(pixBytes=predictor<
rowBytes;pixBytes;)pixBytes=bufferLength,bufferLength+=1,JAM.set(buffer,pixBytes,v2638[predictor]),predictor+=1,pixBytes=predictor<rowBytes;break;case 1:predictor=0;for(prevRow=predictor<pixBytes;prevRow;)prevRow=bufferLength,bufferLength+=1,JAM.set(buffer,prevRow,v2638[predictor]),predictor+=1,prevRow=predictor<pixBytes;for(prevRow=predictor<rowBytes;prevRow;){prevRow=bufferLength-pixBytes;introspect(JAM.policy.p1)prevRow=buffer[prevRow];introspect(JAM.policy.p1)var v7034=v2638[predictor];JAM.set(buffer,
bufferLength,prevRow+v7034&255);bufferLength+=1;predictor+=1;prevRow=predictor<rowBytes}break;case 2:predictor=0;for(pixBytes=predictor<rowBytes;pixBytes;){pixBytes=bufferLength;bufferLength+=1;introspect(JAM.policy.p1)v7034=prevRow[predictor];introspect(JAM.policy.p1)var v21416=v2638[predictor];JAM.set(buffer,pixBytes,v7034+v21416&255);predictor+=1;pixBytes=predictor<rowBytes}break;case 3:predictor=0;for(v7034=predictor<pixBytes;v7034;){v7034=bufferLength;bufferLength+=1;introspect(JAM.policy.p1)v21416=
prevRow[predictor];v21416>>=1;introspect(JAM.policy.p1)var v7037=v2638[predictor];JAM.set(buffer,v7034,v21416+v7037);predictor+=1;v7034=predictor<pixBytes}for(v7034=predictor<rowBytes;v7034;){introspect(JAM.policy.p1)v7034=prevRow[predictor];v21416=bufferLength-pixBytes;introspect(JAM.policy.p1)v21416=buffer[v21416];v7034=v7034+v21416>>1;introspect(JAM.policy.p1)v21416=v2638[predictor];JAM.set(buffer,bufferLength,v7034+v21416&255);bufferLength+=1;predictor+=1;v7034=predictor<rowBytes}break;case 4:predictor=
0;for(v7034=predictor<pixBytes;v7034;){introspect(JAM.policy.p1)v7034=prevRow[predictor];introspect(JAM.policy.p1)v21416=v2638[predictor];v7037=bufferLength;bufferLength+=1;JAM.set(buffer,v7037,v7034+v21416);predictor+=1;v7034=predictor<pixBytes}for(v7034=predictor<rowBytes;v7034;){v7034=prevRow[predictor];v21416=predictor-pixBytes;introspect(JAM.policy.p1)v7037=prevRow[v21416];v21416=bufferLength-pixBytes;introspect(JAM.policy.p1)var left=buffer[v21416];var v21416=left+v7034-v7037,pa=v21416-left;
0>pa&&(pa=-pa);var pb=v21416-v7034;0>pb&&(pb=-pb);var pc=v21416-v7037;0>pc&&(pc=-pc);var v21416=v2638[predictor],v7040=pa<=pb;v7040&&(v7040=pa<=pc);v7040?(v7034=bufferLength,bufferLength+=1,JAM.set(buffer,v7034,left+v21416)):pb<=pc?(v7037=bufferLength,bufferLength+=1,JAM.set(buffer,v7037,v7034+v21416)):(v7034=bufferLength,bufferLength+=1,JAM.set(buffer,v7034,v7037+v21416));predictor+=1;v7034=predictor<rowBytes}break;default:error$$1("Unsupported predictor: "+predictor)}this.bufferLength+=rowBytes}
function predictorStreamReadBlockTiff(){var rowBytes=this.rowBytes,bufferLength=this.bufferLength,buffer=JAM.call(this.ensureBuffer,this,[bufferLength+rowBytes]),bits=this.bits,colors=this.colors,v2670=this.stream,v2670=JAM.call(v2670.getBytes,v2670,[rowBytes]),inbuf=0,outbuf=0,inbits=0,outbits=0,pos=bufferLength;if(1===bits)for(bufferLength=0,bits=bufferLength<rowBytes;bits;){introspect(JAM.policy.p1)bits=v2670[bufferLength];inbuf=inbuf<<8|bits;outbits=pos;pos+=1;JAM.set(buffer,outbits,(bits^inbuf>>
colors)&255);inbuf&=65535;bufferLength+=1;bits=bufferLength<rowBytes}else if(8===bits){bufferLength=0;for(bits=bufferLength<colors;bits;)bits=pos,pos+=1,JAM.set(buffer,bits,v2670[bufferLength]),bufferLength+=1,bits=bufferLength<colors;for(bits=bufferLength<rowBytes;bits;){bits=pos-colors;introspect(JAM.policy.p1)bits=buffer[bits];introspect(JAM.policy.p1)inbuf=v2670[bufferLength];JAM.set(buffer,pos,bits+inbuf);pos+=1;bufferLength+=1;bits=bufferLength<rowBytes}}else{for(var pos=new Uint8Array(colors+
1),bitMask=(1<<bits)-1,j=0,k=bufferLength,columns=this.columns,bufferLength=0,v2690=bufferLength<columns;v2690;){for(var v2690=0,v2689=v2690<colors;v2689;){if(inbits<bits){inbuf<<=8;v2689=j;j+=1;introspect(JAM.policy.p1)v2689=v2670[v2689];inbuf|=v2689&255;inbits+=8}introspect(JAM.policy.p1)v2689=pos[v2690];pos[v2690]=v2689+(inbuf>>inbits-bits)&bitMask;inbits-=bits;outbuf<<=bits;introspect(JAM.policy.p1)v2689=pos[v2690];outbuf|=v2689;outbits+=bits;8<=outbits&&(v2689=k,k+=1,JAM.set(buffer,v2689,outbuf>>
outbits-8&255),outbits-=8);v2690+=1;v2689=v2690<colors}bufferLength+=1;v2690=bufferLength<columns}0<outbits&&(colors=k,JAM.set(buffer,colors,(outbuf<<8-outbits)+(inbuf&(1<<8-outbits)-1)))}this.bufferLength+=rowBytes}function PredictorStream(stream,params){var v2695=JAM.call(params.get,params,["Predictor"]);v2695||(v2695=1);v2695=this.predictor=v2695;if(1>=v2695)return stream;var v7052=2!==v2695;v7052&&((v7052=10>v2695)||(v7052=15<v2695));v7052&&error$$1("Unsupported predictor: "+v2695);this.readBlock=
2===v2695?this.readBlockTiff:this.readBlockPng;this.stream=stream;this.dict=stream.dict;(v2695=JAM.call(params.get,params,["Colors"]))||(v2695=1);v2695=this.colors=v2695;(v7052=JAM.call(params.get,params,["BitsPerComponent"]))||(v7052=8);var v7052=this.bits=v7052,v2702=JAM.call(params.get,params,["Columns"]);v2702||(v2702=1);v2702=this.columns=v2702;this.pixBytes=v2695*v7052+7>>3;this.rowBytes=v2702*v2695*v7052+7>>3;JAM.call(DecodeStream.call,DecodeStream,[this]);return this}var v2705=PredictorStream,
v23434=Object.create(DecodeStream.prototype);v2705.prototype=v23434;PredictorStream.prototype.readBlockTiff=predictorStreamReadBlockTiff;PredictorStream.prototype.readBlockPng=predictorStreamReadBlockPng;return PredictorStream}function FlateStreamClosure(){function FlateStream_readBlock(){var hdr=JAM.call(this.getBits,this,[3]);hdr&1&&(this.eof=!0);hdr>>=1;if(0==hdr){var hdr=this.bytes,bytesPos=this.bytesPos,b,v22536=bytesPos,bytesPos=bytesPos+1;introspect(JAM.policy.p1)v22536=b=hdr[v22536];"undefined"==
typeof v22536&&error$$1("Bad block header in flate stream");var blockLen=b,v22536=bytesPos,bytesPos=bytesPos+1;introspect(JAM.policy.p1)v22536=b=hdr[v22536];"undefined"==typeof v22536&&error$$1("Bad block header in flate stream");blockLen|=b<<8;v22536=bytesPos;bytesPos+=1;introspect(JAM.policy.p1)v22536=b=hdr[v22536];"undefined"==typeof v22536&&error$$1("Bad block header in flate stream");v22536=b;b=bytesPos;bytesPos+=1;introspect(JAM.policy.p1)var v21430=b=hdr[b];"undefined"==typeof v21430&&error$$1("Bad block header in flate stream");
v22536|=b<<8;v22536!=(~blockLen&65535)&&error$$1("Bad uncompressed block length in flate stream");this.codeSize=this.codeBuf=0;b=this.bufferLength;v22536=JAM.call(this.ensureBuffer,this,[b+blockLen]);this.bufferLength=blockLen=b+blockLen;v21430=b;for(b=v21430<blockLen;b;){b=bytesPos;bytesPos+=1;introspect(JAM.policy.p1)var v21432=b=hdr[b];if("undefined"==typeof v21432){this.eof=!0;break}JAM.set(v22536,v21430,b);v21430+=1;b=v21430<blockLen}this.bytesPos=bytesPos}else{if(1==hdr)bytesPos=fixedLitCodeTab,
b=fixedDistCodeTab;else if(2==hdr){v22536=JAM.call(this.getBits,this,[5])+257;blockLen=JAM.call(this.getBits,this,[5])+1;hdr=JAM.call(this.getBits,this,[4])+4;b=new Uint8Array(codeLenCodeMap.length);bytesPos=0;for(v21430=bytesPos<hdr;v21430;){v21430=b;introspect(JAM.policy.p1)v21432=codeLenCodeMap[bytesPos];var v23435=JAM.call(this.getBits,this,[3]);JAM.set(v21430,v21432,v23435);bytesPos+=1;v21430=bytesPos<hdr}b=JAM.call(this.generateHuffmanTable,this,[b]);bytesPos=hdr=0;blockLen=v22536+blockLen;
v21430=new Uint8Array(blockLen);for(v21432=bytesPos<blockLen;v21432;){v21432=JAM.call(this.getCode,this,[b]);if(16==v21432)var v23435=2,bitsOffset=3,v21432=hdr;else if(17==v21432)bitsOffset=v23435=3,v21432=hdr=0;else if(18==v21432)v23435=7,bitsOffset=11,v21432=hdr=0;else{hdr=bytesPos;bytesPos+=1;v21430[hdr]=hdr=v21432;v21432=bytesPos<blockLen;continue}bitsOffset=v23435=JAM.call(this.getBits,this,[v23435])+bitsOffset;v23435-=1;for(bitsOffset=0<bitsOffset;bitsOffset;)bitsOffset=bytesPos,bytesPos+=1,
v21430[bitsOffset]=v21432,bitsOffset=v23435,v23435-=1,bitsOffset=0<bitsOffset;v21432=bytesPos<blockLen}bytesPos=JAM.call(this.generateHuffmanTable,this,[v21430.subarray(0,v22536)]);b=JAM.call(this.generateHuffmanTable,this,[v21430.subarray(v22536,blockLen)])}else error$$1("Unknown block type in flate stream");blockLen=hdr=(v22536=this.buffer)?v22536.length:0;for(v21430=this.bufferLength;;)if(v21432=JAM.call(this.getCode,this,[bytesPos]),256>v21432)v21430+1>=blockLen&&(v22536=JAM.call(this.ensureBuffer,
this,[v21430+1]),blockLen=v22536.length),hdr=v21430,v21430+=1,JAM.set(v22536,hdr,v21432);else{if(256==v21432){this.bufferLength=v21430;break}v21432-=257;introspect(JAM.policy.p1)v21432=lengthDecode[v21432];v23435=v21432>>16;0<v23435&&(v23435=JAM.call(this.getBits,this,[v23435]));hdr=(v21432&65535)+v23435;v21432=JAM.call(this.getCode,this,[b]);introspect(JAM.policy.p1)v21432=distDecode[v21432];v23435=v21432>>16;0<v23435&&(v23435=JAM.call(this.getBits,this,[v23435]));v21432=(v21432&65535)+v23435;v21430+
hdr>=blockLen&&(v22536=JAM.call(this.ensureBuffer,this,[v21430+hdr]),blockLen=v22536.length);v23435=0;for(bitsOffset=v23435<hdr;bitsOffset;)JAM.set(v22536,v21430,v22536[v21430-v21432]),v23435+=1,v21430+=1,bitsOffset=v23435<hdr}}}function flateStreamGenerateHuffmanTable(lengths){for(var n=lengths.length,maxLen=0,i=0,v2752=i<n;v2752;){introspect(JAM.policy.p1)v2752=lengths[i];v2752>maxLen&&(maxLen=lengths[i]);i+=1;v2752=i<n}for(var v2752=1<<maxLen,codes=new Uint32Array(v2752),len=1,code=0,skip=2,i=
len<=maxLen;i;){for(var val=0,i=val<n;i;){introspect(JAM.policy.p1)i=lengths[val];if(i==len){for(var code2=0,t=code,i=0,v2755=i<len;v2755;)code2=code2<<1|t&1,t>>=1,i+=1,v2755=i<len;i=code2;for(code2=i<v2752;code2;)codes[i]=len<<16|val,i+=skip,code2=i<v2752;code+=1}val+=1;i=val<n}len+=1;code<<=1;skip<<=1;i=len<=maxLen}return[codes,maxLen]}function FlateStream_getCode(table){var codes=table[0],maxLen=table[1];table=this.codeSize;for(var codeBuf=this.codeBuf,bytes=this.bytes,bytesPos=this.bytesPos,v2762=
table<maxLen;v2762;){v2762=bytesPos;bytesPos+=1;introspect(JAM.policy.p1)var v21433=v2762=bytes[v2762];"undefined"==typeof v21433&&error$$1("Bad encoding in flate stream");codeBuf|=v2762<<table;table+=8;v2762=table<maxLen}maxLen=codeBuf&(1<<maxLen)-1;introspect(JAM.policy.p1)maxLen=codes[maxLen];codes=maxLen>>16;maxLen&=65535;bytes=0==table;bytes||(bytes=table<codes)||(bytes=0==codes);bytes&&error$$1("Bad encoding in flate stream");this.codeBuf=codeBuf>>codes;this.codeSize=table-codes;this.bytesPos=
bytesPos;return maxLen}function FlateStream_getBits(bits){var codeSize=this.codeSize,codeBuf=this.codeBuf,bytes=this.bytes,bytesPos=this.bytesPos,b;for(b=codeSize<bits;b;){b=bytesPos;bytesPos+=1;introspect(JAM.policy.p1)var v21437=b=bytes[b];"undefined"==typeof v21437&&error$$1("Bad encoding in flate stream");codeBuf|=b<<codeSize;codeSize+=8;b=codeSize<bits}b=codeBuf&(1<<bits)-1;this.codeBuf=codeBuf>>bits;this.codeSize=codeSize-bits;this.bytesPos=bytesPos;return b}function FlateStream(stream){var bytes=
stream.getBytes(),bytesPos=0;this.dict=stream.dict;stream=bytesPos;bytesPos+=1;introspect(JAM.policy.p1)stream=bytes[stream];var v2769=bytesPos,bytesPos=bytesPos+1;introspect(JAM.policy.p1)v2769=bytes[v2769];var v7080=-1==stream;v7080||(v7080=-1==v2769);v7080&&error$$1("Invalid header in flate stream: "+stream+", "+v2769);8!=(stream&15)&&error$$1("Unknown compression method in flate stream: "+stream+", "+v2769);0!=((stream<<8)+v2769)%31&&error$$1("Bad FCHECK in flate stream: "+stream+", "+v2769);
v2769&32&&error$$1("FDICT bit set in flate stream: "+stream+", "+v2769);this.bytes=bytes;this.bytesPos=bytesPos;this.codeBuf=this.codeSize=0;JAM.call(DecodeStream.call,DecodeStream,[this])}var codeLenCodeMap=new Uint32Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),lengthDecode=new Uint32Array([3,4,5,6,7,8,9,10,65547,65549,65551,65553,131091,131095,131099,131103,196643,196651,196659,196667,262211,262227,262243,262259,327811,327843,327875,327907,258,258,258]),distDecode=new Uint32Array([1,
2,3,4,65541,65543,131081,131085,196625,196633,262177,262193,327745,327777,393345,393409,459009,459137,524801,525057,590849,591361,657409,658433,724993,727041,794625,798721,868353,876545]),v23565=[459008,524368,524304,524568,459024,524400,524336,590016,459016,524384,524320,589984,524288,524416,524352,590048,459012,524376,524312,589968,459028,524408,524344,590032,459020,524392,524328,59E4,524296,524424,524360,590064,459010,524372,524308,524572,459026,524404,524340,590024,459018,524388,524324,589992,
524292,524420,524356,590056,459014,524380,524316,589976,459030,524412,524348,590040,459022,524396,524332,590008,524300,524428,524364,590072,459009,524370,524306,524570,459025,524402,524338,590020,459017,524386,524322,589988,524290,524418,524354,590052,459013,524378,524314,589972,459029,524410,524346,590036,459021,524394,524330,590004,524298,524426,524362,590068,459011,524374,524310,524574,459027,524406,524342,590028,459019,524390,524326,589996,524294,524422,524358,590060,459015,524382,524318,589980,
459031,524414,524350,590044,459023,524398,524334,590012,524302,524430,524366,590076,459008,524369,524305,524569,459024,524401,524337,590018,459016,524385,524321,589986,524289,524417,524353,590050,459012,524377,524313,589970,459028,524409,524345,590034,459020,524393,524329,590002,524297,524425,524361,590066,459010,524373,524309,524573,459026,524405,524341,590026,459018,524389,524325,589994,524293,524421,524357,590058,459014,524381,524317,589978,459030,524413,524349,590042,459022,524397,524333,590010,
524301,524429,524365,590074,459009,524371,524307,524571,459025,524403,524339,590022,459017,524387,524323,589990,524291,524419,524355,590054,459013,524379,524315,589974,459029,524411,524347,590038,459021,524395,524331,590006,524299,524427,524363,590070,459011,524375,524311,524575,459027,524407,524343,590030,459019,524391,524327,589998,524295,524423,524359,590062,459015,524383,524319,589982,459031,524415,524351,590046,459023,524399,524335,590014,524303,524431,524367,590078,459008,524368,524304,524568,
459024,524400,524336,590017,459016,524384,524320,589985,524288,524416,524352,590049,459012,524376,524312,589969,459028,524408,524344,590033,459020,524392,524328,590001,524296,524424,524360,590065,459010,524372,524308,524572,459026,524404,524340,590025,459018,524388,524324,589993,524292,524420,524356,590057,459014,524380,524316,589977,459030,524412,524348,590041,459022,524396,524332,590009,524300,524428,524364,590073,459009,524370,524306,524570,459025,524402,524338,590021,459017,524386,524322,589989,
524290,524418,524354,590053,459013,524378,524314,589973,459029,524410,524346,590037,459021,524394,524330,590005,524298,524426,524362,590069,459011,524374,524310,524574,459027,524406,524342,590029,459019,524390,524326,589997,524294,524422,524358,590061,459015,524382,524318,589981,459031,524414,524350,590045,459023,524398,524334,590013,524302,524430,524366,590077,459008,524369,524305,524569,459024,524401,524337,590019,459016,524385,524321,589987,524289,524417,524353,590051,459012,524377,524313,589971,
459028,524409,524345,590035,459020,524393,524329,590003,524297,524425,524361,590067,459010,524373,524309,524573,459026,524405,524341,590027,459018,524389,524325,589995,524293,524421,524357,590059,459014,524381,524317,589979,459030,524413,524349,590043,459022,524397,524333,590011,524301,524429,524365,590075,459009,524371,524307,524571,459025,524403,524339,590023,459017,524387,524323,589991,524291,524419,524355,590055,459013,524379,524315,589975,459029,524411,524347,590039,459021,524395,524331,590007,
524299,524427,524363,590071,459011,524375,524311,524575,459027,524407,524343,590031,459019,524391,524327,589999,524295,524423,524359,590063,459015,524383,524319,589983],v23566=[459031,524415,524351,590047,459023,524399,524335,590015,524303,524431,524367,590079],fixedLitCodeTab=[new Uint32Array(v23565.concat(v23566)),9],fixedDistCodeTab=[new Uint32Array([327680,327696,327688,327704,327684,327700,327692,327708,327682,327698,327690,327706,327686,327702,327694,0,327681,327697,327689,327705,327685,327701,
327693,327709,327683,327699,327691,327707,327687,327703,327695,0]),5],v23565=FlateStream,v23566=Object.create(DecodeStream.prototype);v23565.prototype=v23566;FlateStream.prototype.getBits=FlateStream_getBits;FlateStream.prototype.getCode=FlateStream_getCode;FlateStream.prototype.generateHuffmanTable=flateStreamGenerateHuffmanTable;FlateStream.prototype.readBlock=FlateStream_readBlock;return FlateStream}function StreamsSequenceStreamClosure(){function streamSequenceStreamReadBlock(){var streams=this.streams;
if(0==streams.length)this.eof=!0;else{var streams=streams.shift(),streams=streams.getBytes(),bufferLength=this.bufferLength,newLength=bufferLength+streams.length,buffer=JAM.call(this.ensureBuffer,this,[newLength]);JAM.call(buffer.set,buffer,[streams,bufferLength]);this.bufferLength=newLength}}function StreamsSequenceStream(streams){this.streams=streams;JAM.call(DecodeStream.call,DecodeStream,[this])}var v2790=StreamsSequenceStream,v23437=Object.create(DecodeStream.prototype);v2790.prototype=v23437;
StreamsSequenceStream.prototype.readBlock=streamSequenceStreamReadBlock;return StreamsSequenceStream}function FakeStreamClosure(){function FakeStream_getBytes(length){var pos=this.pos;if(length){JAM.call(this.ensureBuffer,this,[pos+length]);length=pos+length;var v7092=!this.eof;for(v7092&&(v7092=this.bufferLength<length);v7092;)this.readBlock(),(v7092=!this.eof)&&(v7092=this.bufferLength<length);v7092=this.bufferLength;length>v7092&&(length=v7092)}else this.eof=!0,length=this.bufferLength;this.pos=
length;return this.buffer.subarray(pos,length)}function FakeStream_readBlock(){var bufferLength=this.bufferLength,bufferLength=bufferLength+1024;JAM.call(this.ensureBuffer,this,[bufferLength]);this.bufferLength=bufferLength}function FakeStream(stream){this.dict=stream.dict;JAM.call(DecodeStream.call,DecodeStream,[this])}var v2796=FakeStream,v23438=Object.create(DecodeStream.prototype);v2796.prototype=v23438;FakeStream.prototype.readBlock=FakeStream_readBlock;FakeStream.prototype.getBytes=FakeStream_getBytes}
function DecodeStreamClosure(){function DecodeStream_reset(){this.pos=0}function DecodeStream_skip(n){n||(n=1);this.pos+=n}function DecodeStream_makeSubStream(start,length,dict){var end=start+length,v7096=this.bufferLength<=end;for(v7096&&(v7096=!this.eof);v7096;)this.readBlock(),(v7096=this.bufferLength<=end)&&(v7096=!this.eof);return JAM.new(Stream,[this.buffer,start,length,dict])}function DecodeStream_getChar(){for(var pos=this.pos,v2803=this.bufferLength<=pos;v2803;){if(this.eof)return null;this.readBlock();
v2803=this.bufferLength<=pos}pos=this.buffer;v2803=this.pos;this.pos+=1;introspect(JAM.policy.p1)pos=pos[v2803];return String.fromCharCode(pos)}function DecodeStream_lookChar(){for(var pos=this.pos,v2806=this.bufferLength<=pos;v2806;){if(this.eof)return null;this.readBlock();v2806=this.bufferLength<=pos}pos=this.buffer;v2806=this.pos;introspect(JAM.policy.p1)pos=pos[v2806];return String.fromCharCode(pos)}function DecodeStream_getBytes(length){var pos=this.pos;if(length){JAM.call(this.ensureBuffer,
this,[pos+length]);length=pos+length;var v7106=!this.eof;for(v7106&&(v7106=this.bufferLength<length);v7106;)this.readBlock(),(v7106=!this.eof)&&(v7106=this.bufferLength<length);v7106=this.bufferLength;length>v7106&&(length=v7106)}else{for(length=!this.eof;length;)this.readBlock(),length=!this.eof;length=this.bufferLength;length||(this.buffer=v7106=new Uint8Array(0))}this.pos=length;return this.buffer.subarray(pos,length)}function DecodeStream_getByte(){for(var pos=this.pos,v2815=this.bufferLength<=
pos;v2815;){if(this.eof)return null;this.readBlock();v2815=this.bufferLength<=pos}pos=this.buffer;v2815=this.pos;this.pos+=1;introspect(JAM.policy.p1)return pos[v2815]}function DecodeStream_ensureBuffer(requested){var buffer=this.buffer,v2818;v2818=buffer?buffer.byteLength:0;if(requested<v2818)return buffer;for(var size=512,v2820=size<requested;v2820;)size<<=1,v2820=size<requested;requested=new Uint8Array(size);size=0;for(v2820=size<v2818;v2820;)requested[size]=buffer[size],size+=1,v2820=size<v2818;
return this.buffer=requested}function DecodeStream(){this.bufferLength=this.pos=0;this.eof=!1;this.buffer=null}DecodeStream.prototype={ensureBuffer:DecodeStream_ensureBuffer,getByte:DecodeStream_getByte,getBytes:DecodeStream_getBytes,lookChar:DecodeStream_lookChar,getChar:DecodeStream_getChar,makeSubStream:DecodeStream_makeSubStream,skip:DecodeStream_skip,reset:DecodeStream_reset};return DecodeStream}function StringStreamClosure(){function StringStream(str){for(var length=str.length,bytes=new Uint8Array(length),
n=0,v2824=n<length;v2824;){var v2824=bytes,v2823=n,v23440=str.charCodeAt(n);v2824[v2823]=v23440;n+=1;v2824=n<length}JAM.call(Stream.call,Stream,[this,bytes])}StringStream.prototype=Stream.prototype}function StreamClosure(){function Stream_makeSubStream(start,length,dict){return new Stream(this.bytes.buffer,start,length,dict)}function Stream_moveStart(){this.start=this.pos}function Stream_reset(){this.pos=this.start}function Stream_skip(n){n||(n=1);this.pos+=n}function Stream_getChar(){if(this.pos>=
this.end)return null;var v7116=this.bytes,v7117=this.pos;this.pos+=1;introspect(JAM.policy.p1)v7116=v7116[v7117];return String.fromCharCode(v7116)}function Stream_lookChar(){if(this.pos>=this.end)return null;var v7120=this.bytes,v7121=this.pos;introspect(JAM.policy.p1)v7120=v7120[v7121];return String.fromCharCode(v7120)}function Stream_getBytes(length){var bytes=this.bytes,pos=this.pos,strEnd=this.end;if(!length)return bytes.subarray(pos,strEnd);length=pos+length;length>strEnd&&(length=strEnd);this.pos=
length;return bytes.subarray(pos,length)}function Stream_getByte(){if(this.pos>=this.end)return null;var v2834=this.bytes,v2835=this.pos;this.pos+=1;introspect(JAM.policy.p1)return v2834[v2835]}function Stream(arrayBuffer,start,length,dict){this.bytes=arrayBuffer=new Uint8Array(arrayBuffer);this.pos=this.start=start||0;start+=length;start||(start=this.bytes.length);this.end=start;this.dict=dict}function v2839(){return this.end-this.start}Stream.prototype={getByte:Stream_getByte,getBytes:Stream_getBytes,
lookChar:Stream_lookChar,getChar:Stream_getChar,skip:Stream_skip,reset:Stream_reset,moveStart:Stream_moveStart,makeSubStream:Stream_makeSubStream,isStream:!0};JAM.call(Object.defineProperty,Object,[Stream.prototype,"length",{get:v2839}]);return Stream}function TilingPatternClosure(){function TilingPattern_getPattern(){var matrix=this.matrix,curMatrix=this.curMatrix,ctx=this.ctx;if(curMatrix){var v2840=ctx.setTransform;JAM.call(v2840.apply,v2840,[ctx,curMatrix])}matrix&&(curMatrix=ctx.transform,JAM.call(curMatrix.apply,
curMatrix,[ctx,matrix]));matrix=this.scale;JAM.call(ctx.scale,ctx,[1/matrix[0],1/matrix[1]]);return ctx.createPattern(this.canvas,"repeat")}function TilingPattern_getIR(operatorList,dict,args){var matrix=JAM.call(dict.get,dict,["Matrix"]),bbox=JAM.call(dict.get,dict,["BBox"]),xstep=JAM.call(dict.get,dict,["XStep"]),ystep=JAM.call(dict.get,dict,["YStep"]);dict=JAM.call(dict.get,dict,["PaintType"]);return["TilingPattern",args,operatorList,matrix,bbox,xstep,ystep,dict]}function TilingPattern(IR,color,
ctx,objs){var operatorList=IR[2];this.matrix=IR[3];var bbox=IR[4],xstep=IR[5],ystep=IR[6],paintType=IR[7];TODO("TilingType");this.curMatrix=ctx.mozCurrentTransform;this.invMatrix=ctx.mozCurrentTransformInverse;this.ctx=ctx;this.type="Pattern";IR=bbox[0];var y0=bbox[1],x1=bbox[2],y1=bbox[3],topLeft=[IR,y0],botRight=[IR+xstep,y0+ystep],width=botRight[0]-topLeft[0],height=botRight[1]-topLeft[1];for((botRight=Math.abs(width)>MAX_PATTERN_SIZE)||(botRight=Math.abs(height)>MAX_PATTERN_SIZE);botRight;)width=
height=MAX_PATTERN_SIZE,(botRight=Math.abs(width)>MAX_PATTERN_SIZE)||(botRight=Math.abs(height)>MAX_PATTERN_SIZE);var botRight=createScratchCanvas(width,height),tmpCtx=JAM.call(botRight.getContext,botRight,["2d"]);objs=JAM.new(CanvasGraphics,[tmpCtx,objs]);switch(paintType){case PaintType.COLORED:tmpCtx.fillStyle=ctx.fillStyle;tmpCtx.strokeStyle=ctx.strokeStyle;break;case PaintType.UNCOLORED:color=JAM.call(Util.makeCssRgb,Util,[this,color[0],color[1],color[2]]);tmpCtx.fillStyle=color;tmpCtx.strokeStyle=
color;break;default:error$$1("Unsupported paint type: "+paintType)}this.scale=ystep=[width/xstep,height/ystep];xstep=[1,0,0,1,-topLeft[0],-topLeft[1]];ystep=[ystep[0],0,0,ystep[1],0,0];topLeft=objs.transform;JAM.call(topLeft.apply,topLeft,[objs,ystep]);ystep=objs.transform;JAM.call(ystep.apply,ystep,[objs,xstep]);(xstep=bbox)&&(xstep=isArray(bbox))&&(xstep=4==bbox.length);xstep&&(bbox=x1-IR,y1-=y0,JAM.call(objs.rectangle,objs,[IR,y0,bbox,y1]),objs.clip(),objs.endPath());JAM.call(objs.executeOperatorList,
objs,[operatorList]);this.canvas=botRight}var PaintType={COLORED:1,UNCOLORED:2},MAX_PATTERN_SIZE=512;TilingPattern.getIR=TilingPattern_getIR;TilingPattern.prototype={getPattern:TilingPattern_getPattern};return TilingPattern}function DummyClosure(){function Dummy_getIR(){return["Dummy"]}function Dummy_fromIR(){return"hotpink"}function Dummy(){this.type="Pattern"}Dummy.fromIR=Dummy_fromIR;Dummy.prototype={getIR:Dummy_getIR};return Dummy}function RadialAxialClosure(){function RadialAxial_getIR(){var coordsArr=
this.coordsArr,type=this.shadingType;if(type==JSCompiler_object_inline_AXIAL_293)var p0=[coordsArr[0],coordsArr[1]],p1=[coordsArr[2],coordsArr[3]],r0=null,r1=null;else type==JSCompiler_object_inline_RADIAL_294?(p0=[coordsArr[0],coordsArr[1]],p1=[coordsArr[3],coordsArr[4]],r0=coordsArr[2],r1=coordsArr[5]):error$$1("getPattern type unknown: "+type);if(coordsArr=this.matrix)p0=JAM.call(Util.applyTransform,Util,[p0,coordsArr]),p1=JAM.call(Util.applyTransform,Util,[p1,coordsArr]);return["RadialAxial",
type,this.colorStops,p0,p1,r0,r1]}function RadialAxial_fromIR(raw){function RadialAxial_getPattern(ctx){var curMatrix=ctx.mozCurrentTransform;if(curMatrix){var userMatrix=ctx.mozCurrentTransformInverse;p0=JAM.call(Util.applyTransform,Util,[p0,curMatrix]);p0=JAM.call(Util.applyTransform,Util,[p0,userMatrix]);p1=JAM.call(Util.applyTransform,Util,[p1,curMatrix]);p1=JAM.call(Util.applyTransform,Util,[p1,userMatrix])}var grad;type==JSCompiler_object_inline_AXIAL_293?grad=ctx.createLinearGradient(p0[0],
p0[1],p1[0],p1[1]):type==JSCompiler_object_inline_RADIAL_294&&(grad=ctx.createRadialGradient(p0[0],p0[1],r0,p1[0],p1[1],r1));ctx=0;curMatrix=colorStops.length;for(userMatrix=ctx<curMatrix;userMatrix;){introspect(JAM.policy.p1)userMatrix=colorStops[ctx];grad.addColorStop(userMatrix[0],userMatrix[1]);ctx+=1;userMatrix=ctx<curMatrix}return grad}var type=raw[1],colorStops=raw[2],p0=raw[3],p1=raw[4],r0=raw[5],r1=raw[6];return{type:"Pattern",getPattern:RadialAxial_getPattern}}function RadialAxial(dict,
matrix,xref,res,ctx){this.matrix=matrix;this.coordsArr=matrix=JAM.call(dict.get,dict,["Coords"]);this.shadingType=matrix=JAM.call(dict.get,dict,["ShadingType"]);this.type="Pattern";this.ctx=ctx;ctx=JAM.call(dict.get,dict,["ColorSpace","CS"]);this.cs=ctx=JAM.call(ColorSpace.parse,ColorSpace,[ctx,xref,res]);res=0;matrix=1;JAM.call(dict.has,dict,["Domain"])&&(matrix=JAM.call(dict.get,dict,["Domain"]),res=matrix[0],matrix=matrix[1]);var extendStart=!1,extendEnd=!1;JAM.call(dict.has,dict,["Extend"])&&
(extendEnd=JAM.call(dict.get,dict,["Extend"]),extendStart=extendEnd[0],extendEnd=extendEnd[1],TODO("Support extend"));this.extendStart=extendStart;this.extendEnd=extendEnd;dict=JAM.call(dict.get,dict,["Function"]);isArray(dict)&&error$$1("No support for array of functions");JSCompiler_inline_label_isPDFFunction_119:if(extendStart=dict,"object"!=typeof extendStart)extendStart=!1;else{if(!isDict(extendStart))if(isStream(extendStart))extendStart=extendStart.dict;else{extendStart=!1;break JSCompiler_inline_label_isPDFFunction_119}extendStart=
JAM.call(extendStart.has,extendStart,["FunctionType"])}extendStart||error$$1("Invalid function");xref=JAM.call(PDFFunction.parse,PDFFunction,[xref,dict]);dict=(matrix-res)/10;for(var extendStart=matrix-res,extendEnd=[],i=res,v2903=i<=matrix;v2903;)v2903=JAM.call(ctx.getRgb,ctx,[JAM.call(xref,null,[[i]])]),v2903=JAM.call(Util.makeCssRgb,Util,[v2903[0],v2903[1],v2903[2]]),JAM.call(extendEnd.push,extendEnd,[[(i-res)/extendStart,v2903]]),i+=dict,v2903=i<=matrix;this.colorStops=extendEnd}RadialAxial.fromIR=
RadialAxial_fromIR;RadialAxial.prototype={getIR:RadialAxial_getIR};return RadialAxial}function PatternClosure(){function Pattern_parseShading(shading,matrix,xref,res){shading=isStream(shading)?shading.dict:shading;var type=JAM.call(shading.get,shading,["ShadingType"]);switch(type){case JSCompiler_object_inline_AXIAL_293:case JSCompiler_object_inline_RADIAL_294:return JAM.new(Shadings.RadialAxial,[shading,matrix,xref,res]);default:return new Shadings.Dummy}}function Pattern_shadingFromIR(raw){var v7139=
raw[0];introspect(JAM.policy.p1)v7139=Shadings[v7139];return JAM.call(v7139.fromIR,v7139,[raw])}function Pattern_getPattern(ctx){error$$1("Should not call Pattern.getStyle: "+ctx)}function Pattern(){error$$1("should not call Pattern constructor")}Pattern.prototype={getPattern:Pattern_getPattern};Pattern.shadingFromIR=Pattern_shadingFromIR;Pattern.parseShading=Pattern_parseShading;return Pattern}function LinearizationClosure(){function Linearization_getHint(index){var linDict=this.linDict,obj2,v7140=
isDict(linDict);if(v7140&&(v7140=isArray(linDict=JAM.call(linDict.get,linDict,["H"])))&&(v7140=2<=linDict.length)){introspect(JAM.policy.p1)linDict=obj2=linDict[index];(linDict=isInt(linDict))&&(linDict=0<obj2);v7140=linDict}if(v7140)return obj2;error$$1("Hints table in linearization table is invalid: "+index)}function Linearization_getInt(name){var linDict=this.linDict,obj,v7141=isDict(linDict);v7141&&((linDict=isInt(obj=JAM.call(linDict.get,linDict,[name])))&&(linDict=0<obj),v7141=linDict);if(v7141)return obj;
error$$1('"'+name+'" field in linearization table is invalid')}function Linearization(stream){this.parser=stream=JAM.new(Parser,[JAM.new(Lexer,[stream]),!1,null]);var obj1=this.parser.getObj(),obj2=this.parser.getObj();stream=this.parser.getObj();var v23445=this.parser.getObj();this.linDict=v23445;if(obj1=isInt(obj1)){if(obj2=isInt(obj2))(stream=isCmd(stream,"obj"))&&(stream=isDict(this.linDict)),obj2=stream;obj1=obj2}obj1&&(stream=this.linDict,stream=JAM.call(stream.get,stream,["Linearized"]),(obj2=
isNum(stream))&&(obj2=0<stream),obj2||(this.linDict=null))}function v7146(){return isDict(this.linDict)?JAM.call(this.getInt,this,["L"]):0}function v7147(){return JAM.call(this.getHint,this,[0])}function v7148(){return JAM.call(this.getHint,this,[1])}function v7149(){return JAM.call(this.getHint,this,[2])}function v7150(){return JAM.call(this.getHint,this,[3])}function v7151(){return JAM.call(this.getInt,this,["O"])}function v7152(){return JAM.call(this.getInt,this,["E"])}function v7153(){return JAM.call(this.getInt,
this,["N"])}function v7154(){return JAM.call(this.getInt,this,["T"])}function v7155(){return JAM.call(this.getInt,this,["P"])}var v2922=Linearization;v2922.prototype={getInt:Linearization_getInt,getHint:Linearization_getHint};JAM.call(Object.defineProperty,Object,[v2922.prototype,"pageFirst",{get:v7155}]);JAM.call(Object.defineProperty,Object,[v2922.prototype,"mainXRefEntriesOffset",{get:v7154}]);JAM.call(Object.defineProperty,Object,[v2922.prototype,"numPages",{get:v7153}]);JAM.call(Object.defineProperty,
Object,[v2922.prototype,"endFirst",{get:v7152}]);JAM.call(Object.defineProperty,Object,[v2922.prototype,"objectNumberFirst",{get:v7151}]);JAM.call(Object.defineProperty,Object,[v2922.prototype,"hintsLenth2",{get:v7150}]);JAM.call(Object.defineProperty,Object,[v2922.prototype,"hintsOffset2",{get:v7149}]);JAM.call(Object.defineProperty,Object,[v2922.prototype,"hintsLength",{get:v7148}]);JAM.call(Object.defineProperty,Object,[v2922.prototype,"hintsOffset",{get:v7147}]);JAM.call(Object.defineProperty,
Object,[v2922.prototype,"length",{get:v7146}]);return Linearization}function LexerClosure(){function Lexer_skip(){this.stream.skip()}function Lexer_skipToNextLine(){for(var stream=this.stream;;){var ch=stream.getChar(),v7156=!ch;v7156||(v7156="\n"==ch);if(v7156)break;if("\r"==ch){"\n"==stream.lookChar()&&stream.skip();break}}}function Lexer_getObj(){for(var comment=!1,stream=this.stream,ch;;){if(!(ch=stream.getChar()))return EOF;if(comment){var v7159="\r"==ch;v7159||(v7159="\n"==ch);v7159&&(comment=
!1)}else if("%"==ch)comment=!0;else{var v7159=specialChars,v21494=ch.charCodeAt(0);introspect(JAM.policy.p1)v7159=v7159[v21494];if(1!=v7159)break}}switch(ch){case "0":case "1":case "2":case "3":case "4":case "5":case "6":case "7":case "8":case "9":case "+":case "-":case ".":return JAM.call(this.getNumber,this,[ch]);case "(":return this.getString();case "/":return JAM.call(this.getName,this,[ch]);case "[":case "]":return JAM.call(Cmd.get,Cmd,[ch]);case "<":return ch=stream.lookChar(),"<"==ch?(stream.skip(),
JAM.call(Cmd.get,Cmd,["<<"])):JAM.call(this.getHexString,this,[ch]);case ">":if(ch=stream.lookChar(),">"==ch)return stream.skip(),JAM.call(Cmd.get,Cmd,[">>"]);case "{":case "}":return JAM.call(Cmd.get,Cmd,[ch]);case ")":error$$1("Illegal character: "+ch)}comment=ch;if(v7159=!!(ch=stream.lookChar())){v7159=specialChars;v21494=ch.charCodeAt(0);introspect(JAM.policy.p1)v7159=v7159[v21494];v7159=!v7159}for(;v7159;)if(stream.skip(),128==comment.length&&error$$1("Command token too long: "+comment.length),
comment+=ch,v7159=!!(ch=stream.lookChar())){v7159=specialChars;v21494=ch.charCodeAt(0);introspect(JAM.policy.p1)v7159=v7159[v21494];v7159=!v7159}return"true"==comment?!0:"false"==comment?!1:"null"==comment?null:JAM.call(Cmd.get,Cmd,[comment])}function Lexer_getHexString(ch){for(var str="",stream=this.stream;;){ch=stream.getChar();if(">"==ch)break;if(!ch){warn("Unterminated hex string");break}var v21499=specialChars,v21500=ch.charCodeAt(0);introspect(JAM.policy.p1)v21499=v21499[v21500];if(1!=v21499){-1==
(v21499=toHexDigit(ch))&&error$$1("Illegal character in hex string: "+ch);ch=stream.getChar();var v21500=specialChars,v21502=ch.charCodeAt(0);introspect(JAM.policy.p1)v21500=v21500[v21502];for(v21500=1==v21500;v21500;){ch=stream.getChar();v21500=specialChars;v21502=ch.charCodeAt(0);introspect(JAM.policy.p1)v21500=v21500[v21502];v21500=1==v21500}-1==(v21500=toHexDigit(ch))&&error$$1("Illegal character in hex string: "+ch);str+=String.fromCharCode(v21499<<4|v21500)}}return str}function Lexer_getName(ch){var str=
"",stream=this.stream,v7172=!!(ch=stream.lookChar());if(v7172){var v7172=specialChars,v22561=ch.charCodeAt(0);introspect(JAM.policy.p1)v7172=v7172[v22561];v7172=!v7172}for(;v7172;)if(stream.skip(),"#"==ch?(ch=stream.lookChar(),v7172=toHexDigit(ch),-1!=v7172?(stream.skip(),ch=toHexDigit(stream.getChar()),-1==ch&&error$$1("Illegal digit in hex char in name: "+ch),str+=String.fromCharCode(v7172<<4|ch)):(str+="#",str+=ch)):str+=ch,v7172=!!(ch=stream.lookChar())){v7172=specialChars;v22561=ch.charCodeAt(0);
introspect(JAM.policy.p1)v7172=v7172[v22561];v7172=!v7172}128<str.length&&error$$1("Warning: name token is longer than allowed by the spec: "+str.length);return JAM.new(Name,[str])}function Lexer_getString(){var numParen=1,done=!1,str="",stream=this.stream,ch;ch=!done;do{ch=stream.getChar();switch(ch){case void 0:warn("Unterminated string");done=!0;break;case "(":numParen+=1;str+=ch;break;case ")":0==(numParen-=1)?done=!0:str+=ch;break;case "\\":ch=stream.getChar();switch(ch){case void 0:warn("Unterminated string");
done=!0;break;case "n":str+="\n";break;case "r":str+="\r";break;case "t":str+="\t";break;case "b":str+="\b";break;case "f":str+="\f";break;case "\\":case "(":case ")":str+=ch;break;case "0":case "1":case "2":case "3":case "4":case "5":case "6":case "7":var x=ch-0;ch=stream.lookChar();var v7179="0"<=ch;v7179&&(v7179="7">=ch);v7179&&(stream.skip(),x=(x<<3)+(ch-0),ch=stream.lookChar(),(v7179="0"<=ch)&&(v7179="7">=ch),v7179&&(stream.skip(),x=(x<<3)+(ch-0)));str+=String.fromCharCode(x);break;case "\r":ch=
stream.lookChar();"\n"==ch&&stream.skip();break;case "\n":break;default:str+=ch}break;default:str+=ch}ch=!done}while(ch);return str}function Lexer_getNumber(ch){for(var floating=!1,str=ch,stream=this.stream;;){ch=stream.lookChar();var v7183="."==ch;v7183&&(v7183=!floating);if(v7183)str+=ch,floating=!0;else if("-"==ch)warn("Badly formated number");else if((v7183="0"<=ch)&&(v7183="9">=ch),v7183)str+=ch;else if((floating="e"==ch)||(floating="E"==ch),floating)floating=!0;else break;stream.skip()}ch=parseFloat(str);
isNaN(ch)&&error$$1("Invalid floating point number: "+ch);return ch}function Lexer_isSpace(ch){var v2971=" "==ch;v2971||(v2971="\t"==ch,v2971||(v2971="\r"==ch)||(v2971="\n"==ch));return v2971}function Lexer(stream){this.stream=stream}function toHexDigit(ch){var v7188="0"<=ch;v7188&&(v7188="9">=ch);if(v7188)return ch.charCodeAt(0)-48;ch=ch.toUpperCase();(v7188="A"<=ch)&&(v7188="F">=ch);return v7188?ch.charCodeAt(0)-55:-1}Lexer.isSpace=Lexer_isSpace;var specialChars=[1,0,0,0,0,0,0,0,0,1,1,0,1,1,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,0,0,2,2,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,2,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];Lexer.prototype={getNumber:Lexer_getNumber,
getString:Lexer_getString,getName:Lexer_getName,getHexString:Lexer_getHexString,getObj:Lexer_getObj,skipToNextLine:Lexer_skipToNextLine,skip:Lexer_skip};return Lexer}function ParserClosure(){function Parser_makeFilter(stream,name,length,params){var v7190="FlateDecode"==name;v7190||(v7190="Fl"==name);if(v7190)return params?JAM.new(PredictorStream,[JAM.new(FlateStream,[stream]),params]):JAM.new(FlateStream,[stream]);(v7190="LZWDecode"==name)||(v7190="LZW"==name);if(v7190)return name=1,params?(JAM.call(params.has,
params,["EarlyChange"])&&(name=JAM.call(params.get,params,["EarlyChange"])),JAM.new(PredictorStream,[JAM.new(LZWStream,[stream,name]),params])):JAM.new(LZWStream,[stream,name]);(v7190="DCTDecode"==name)||(v7190="DCT"==name);if(v7190)return name=JAM.call(stream.getBytes,stream,[length]),JAM.new(JpegStream,[name,stream.dict,this.xref]);(v7190="JPXDecode"==name)||(v7190="JPX"==name);if(v7190)return name=JAM.call(stream.getBytes,stream,[length]),JAM.new(JpxStream,[name,stream.dict]);(length="ASCII85Decode"==
name)||(length="A85"==name);if(length)return JAM.new(Ascii85Stream,[stream]);(length="ASCIIHexDecode"==name)||(length="AHx"==name);if(length)return JAM.new(AsciiHexStream,[stream]);(length="CCITTFaxDecode"==name)||(length="CCF"==name);if(length)return JAM.new(CCITTFaxStream,[stream,params]);(params="RunLengthDecode"==name)||(params="RL"==name);if(params)return JAM.new(RunLengthStream,[stream]);"JBIG2Decode"==name&&error$$1("JBIG2 image format is not currently supprted.");warn('filter "'+name+'" not supported yet');
return stream}function Parser_filter(stream,dict,length){var filter=JAM.call(this.fetchIfRef,this,[JAM.call(dict.get,dict,["Filter","F"])]),params=JAM.call(this.fetchIfRef,this,[JAM.call(dict.get,dict,["DecodeParms","DP"])]);if(isName(filter))return JAM.call(this.makeFilter,this,[stream,filter.name,length,params]);if(isArray(filter)){dict=filter;for(var paramsArray=params,i=0,ii=dict.length,filter=i<ii;filter;){filter=dict[i];isName(filter)||error$$1("Bad filter name: "+filter);var params=null,v7200=
isArray(paramsArray);v7200&&(v7200=i in paramsArray);v7200&&(params=paramsArray[i]);stream=JAM.call(this.makeFilter,this,[stream,filter.name,length,params]);length=null;i+=1;filter=i<ii}}return stream}function Parser_makeStream(dict,cipherTransform){var lexer=this.lexer,stream=lexer.stream;lexer.skipToNextLine();var lexer=stream.pos,length=JAM.call(this.fetchIfRef,this,[JAM.call(dict.get,dict,["Length"])]);isInt(length)||error$$1("Bad "+length+" attribute in stream");stream.pos=lexer+length;this.shift();
this.shift();isCmd(this.buf1,"endstream")||error$$1("Missing endstream");this.shift();stream=JAM.call(stream.makeSubStream,stream,[lexer,length,dict]);cipherTransform&&(stream=JAM.call(cipherTransform.createStream,cipherTransform,[stream]));stream=JAM.call(this.filter,this,[stream,dict,length]);stream.parameters=dict;return stream}function Parser_fetchIfRef(obj){if(isRef(obj)){var v7204=this.xref;obj=JAM.call(v7204.fetch,v7204,[obj])}return obj}function Parser_makeInlineImage(cipherTransform){var lexer=
this.lexer,stream=lexer.stream,lexer=new Dict,v7206=!isCmd(this.buf1,"ID");for(v7206&&(v7206=this.buf1!=EOF);v7206;){isName(this.buf1)||error$$1("Dictionary key must be a name object");v7206=this.buf1.name;this.shift();if(this.buf1==EOF)break;JAM.call(lexer.set,lexer,[v7206,JAM.call(this.getObj,this,[cipherTransform])]);(v7206=!isCmd(this.buf1,"ID"))&&(v7206=this.buf1!=EOF)}var v7206=stream.pos,state=0,ch,v7210=4!=state;for(v7210&&(v7210=null!=(ch=stream.getByte()));v7210;){switch(ch){case 32:case 13:case 10:state=
3===state?4:0;break;case 69:state=2;break;case 73:state=2===state?3:0;break;default:state=0}(v7210=4!=state)&&(v7210=null!=(ch=stream.getByte()))}ch=500;if((this.inlineImg+=1)>=ch)return this.inlineImg===ch&&warn("Too many inline images"),this.shift(),null;ch=stream.pos-4-v7206;stream=JAM.call(stream.makeSubStream,stream,[v7206,ch,lexer]);cipherTransform&&(stream=JAM.call(cipherTransform.createStream,cipherTransform,[stream]));stream=JAM.call(this.filter,this,[stream,lexer,ch]);stream.parameters=
lexer;this.buf2=cipherTransform=JAM.call(Cmd.get,Cmd,["EI"]);this.shift();return stream}function Parser_getObj(cipherTransform){if(isCmd(this.buf1,"BI"))return this.shift(),JAM.call(this.makeInlineImage,this,[cipherTransform]);if(isCmd(this.buf1,"[")){this.shift();cipherTransform=[];var v7219=!isCmd(this.buf1,"]");for(v7219&&(v7219=this.buf1!=EOF);v7219;)JAM.call(cipherTransform.push,cipherTransform,[this.getObj()]),(v7219=!isCmd(this.buf1,"]"))&&(v7219=this.buf1!=EOF);this.buf1==EOF&&error$$1("End of file inside array");
this.shift();return cipherTransform}if(isCmd(this.buf1,"<<")){this.shift();var v7219=JAM.new(Dict,[this.xref]),v7223=!isCmd(this.buf1,">>");for(v7223&&(v7223=this.buf1!=EOF);v7223;){isName(this.buf1)||error$$1("Dictionary key must be a name object");v7223=this.buf1.name;this.shift();if(this.buf1==EOF)break;JAM.call(v7219.set,v7219,[v7223,JAM.call(this.getObj,this,[cipherTransform])]);(v7223=!isCmd(this.buf1,">>"))&&(v7223=this.buf1!=EOF)}this.buf1==EOF&&error$$1("End of file inside dictionary");if(isCmd(this.buf2,
"stream"))return cipherTransform=this.allowStreams?JAM.call(this.makeStream,this,[v7219,cipherTransform]):v7219;this.shift();return v7219}if(isInt(this.buf1))return cipherTransform=this.buf1,this.shift(),(v7219=isInt(this.buf1))&&(v7219=isCmd(this.buf2,"R")),v7219&&(cipherTransform=JAM.new(Ref,[cipherTransform,this.buf1]),this.shift(),this.shift()),cipherTransform;if(isString(this.buf1))return v7219=this.buf1,this.shift(),cipherTransform&&(v7219=JAM.call(cipherTransform.decryptString,cipherTransform,
[v7219])),v7219;cipherTransform=this.buf1;this.shift();return cipherTransform}function Parser_shift(){if(isCmd(this.buf2,"ID"))this.buf1=this.buf2,this.buf2=null,this.lexer.skip();else{this.buf1=this.buf2;var v23447=this.lexer.getObj();this.buf2=v23447}}function Parser_refill(){var v23448=this.lexer.getObj();this.buf1=v23448;this.buf2=v23448=this.lexer.getObj()}function Parser(lexer,allowStreams,xref){this.lexer=lexer;this.allowStreams=allowStreams;this.xref=xref;this.inlineImg=0;this.refill()}Parser.prototype=
{refill:Parser_refill,shift:Parser_shift,getObj:Parser_getObj,makeInlineImage:Parser_makeInlineImage,fetchIfRef:Parser_fetchIfRef,makeStream:Parser_makeStream,filter:Parser_filter,makeFilter:Parser_makeFilter};return Parser}function PDFImageClosure(){function PDFImage_getImageBytes(length){this.image.reset();var v3043=this.image;return JAM.call(v3043.getBytes,v3043,[length])}function PDFImage_fillGrayBuffer(buffer){var numComps=this.numComps;1!=numComps&&error$$1("Reading gray scale from a color image: "+
numComps);for(var width=this.width,height=this.height,bpc=this.bpc,numComps=width*numComps*bpc+7>>3,numComps=JAM.call(this.getImageBytes,this,[height*numComps]),numComps=JAM.call(this.getComponents,this,[numComps]),width=width*height,bpc=255/((1<<bpc)-1),height=0,v3050=height<width;v3050;){introspect(JAM.policy.p1)v3050=numComps[height];buffer[height]=bpc*v3050|0;height+=1;v3050=height<width}}function PDFImage_fillRgbaBuffer(buffer,width,height){var numComps=this.numComps,originalWidth=this.width,
originalHeight=this.height,bpc=this.bpc,numComps=originalWidth*numComps*bpc+7>>3,numComps=JAM.call(this.getImageBytes,this,[originalHeight*numComps]),v3053=this.colorSpace,bpc=JAM.call(v3053.getRgbBuffer,v3053,[JAM.call(this.getComponents,this,[numComps]),bpc]);(numComps=originalWidth!=width)||(numComps=originalHeight!=height);numComps&&(bpc=JAM.call(PDFImage.resize,PDFImage,[bpc,this.bpc,3,originalWidth,originalHeight,width,height]));originalWidth=0;originalHeight=JAM.call(this.getOpacity,this,[width,
height]);numComps=0;width=4*width*height;height=0;for(v3053=height<width;v3053;){v3053=originalWidth;originalWidth+=1;buffer[height]=bpc[v3053];var v3053=height+1,v7239=originalWidth,originalWidth=originalWidth+1;buffer[v3053]=bpc[v7239];v3053=height+2;v7239=originalWidth;originalWidth+=1;buffer[v3053]=bpc[v7239];v3053=height+3;v7239=numComps;numComps+=1;buffer[v3053]=originalHeight[v7239];height+=4;v3053=height<width}}function PDFImage_applyStencilMask(buffer,inverseDecode){var width=this.width,
height=this.height,bitStrideLength=width+7>>3,bitStrideLength=JAM.call(this.getImageBytes,this,[bitStrideLength*height]),imgArrayPos=0,i,j,mask,buf,bufferPos=3;i=0;for(j=i<height;j;){j=mask=0;for(var v3068=j<width;v3068;)mask||(buf=imgArrayPos,imgArrayPos+=1,buf=bitStrideLength[buf],mask=128),!(buf&mask)==inverseDecode&&(buffer[bufferPos]=0),bufferPos+=4,mask>>=1,j+=1,v3068=j<width;i+=1;j=i<height}}function PDFImage_getOpacity(width,height){var smask=this.smask,buf;if(smask){var sw=smask.width,sh=
smask.height;buf=new Uint8Array(sw*sh);JAM.call(smask.fillGrayBuffer,smask,[buf]);var v7243=sw!=width;v7243||(v7243=sh!=height);v7243&&(buf=JAM.call(PDFImage.resize,PDFImage,[buf,smask.bps,1,sw,sh,width,height]))}else for(buf=new Uint8Array(width*height),smask=0,sw=width*height,sh=smask<sw;sh;)buf[smask]=255,smask+=1,sh=smask<sw;return buf}function PDFImage_getComponents(buffer){var bpc=this.bpc,needsDecode=this.needsDecode,decodeMap=this.decode,v7244=8==bpc;v7244&&(v7244=!needsDecode);if(v7244)return buffer;
var width=this.width,v7244=this.height,numComps=this.numComps,length=width*v7244*numComps,bufferPos=0,v7244=8>=bpc?new Uint8Array(length):16>=bpc?new Uint16Array(length):new Uint32Array(length),width=width*numComps,decodeAddends,decodeCoefficients;needsDecode&&(decodeAddends=this.decodeAddends,decodeCoefficients=this.decodeCoefficients);var max=(1<<bpc)-1;if(8==bpc)for(decodeMap=0,bufferPos=decodeMap<length;bufferPos;){var compIndex=decodeMap%numComps;introspect(JAM.policy.p1)var value=buffer[decodeMap];
bufferPos=value;introspect(JAM.policy.p1)width=decodeAddends[compIndex];introspect(JAM.policy.p1)bpc=decodeCoefficients[compIndex];bufferPos=width+bufferPos*bpc;value=bufferPos=0>bufferPos?0:bufferPos>max?max:bufferPos;v7244[decodeMap]=value;decodeMap+=1;bufferPos=decodeMap<length}else if(1==bpc){decodeAddends=0;decodeCoefficients=1;decodeMap&&(decodeAddends=decodeMap[0]?1:0,decodeCoefficients=decodeMap[1]?1:0);for(var buf=numComps=0,decodeMap=0,max=decodeMap<length;max;)0==decodeMap%width?buf=numComps=
0:numComps>>=1,0>=numComps&&(numComps=bufferPos,bufferPos+=1,buf=buffer[numComps],numComps=128),max=buf&numComps?decodeCoefficients:decodeAddends,v7244[decodeMap]=max,decodeMap+=1,max=decodeMap<length}else for(var bits=0,decodeMap=buf=0,compIndex=decodeMap<length;compIndex;){0==decodeMap%width&&(bits=buf=0);for(compIndex=bits<bpc;compIndex;){buf<<=8;compIndex=bufferPos;bufferPos+=1;introspect(JAM.policy.p1)compIndex=buffer[compIndex];buf|=compIndex;bits+=8;compIndex=bits<bpc}bits-=bpc;value=buf>>
bits;if(needsDecode){compIndex=decodeMap%numComps;introspect(JAM.policy.p1)var v3094=decodeAddends[compIndex];introspect(JAM.policy.p1)compIndex=decodeCoefficients[compIndex];value=v3094+value*compIndex;value=compIndex=0>value?0:value>max?max:value}v7244[decodeMap]=value;buf&=(1<<bits)-1;decodeMap+=1;compIndex=decodeMap<length}return v7244}function PDFImage_resize(pixels,bpc,components,w1,h1,w2,h2){var length=w2*h2*components;bpc=8>=bpc?new Uint8Array(length):16>=bpc?new Uint16Array(length):new Uint32Array(length);
length=w1/w2;h1/=h2;for(var px,py,newIndex,i=0,v3112=i<h2;v3112;){v3112=0;for(newIndex=v3112<w2;newIndex;)px=Math.floor(v3112*length),py=Math.floor(i*h1),newIndex=i*w2+v3112,px=py*w1+px,1===components?JAM.set(bpc,newIndex,JAM.get(pixels,px,JAM.policy.p1)):3===components&&(newIndex*=3,px*=3,JAM.set(bpc,newIndex,JAM.get(pixels,px,JAM.policy.p1)),bpc[newIndex+1]=pixels[px+1],bpc[newIndex+2]=pixels[px+2]),v3112+=1,newIndex=v3112<w2;i+=1;v3112=i<h2}return bpc}function PDFImage_buildImage(callback,handler,
xref,res,image,inline){function v86(results){var imageData=results[0];results=results[1];imageData=new PDFImage(xref,res,imageData,inline,results);JAM.call(callback,null,[imageData])}var imageDataPromise=new Promise,smaskPromise=new Promise,v3113=JAM.call(Promise.all,Promise,[[imageDataPromise,smaskPromise]]);JAM.call(v3113.then,v3113,[v86]);handleImageData(handler,xref,res,image,imageDataPromise);image=image.dict;(image=JAM.call(image.get,image,["SMask"]))?handleImageData(handler,xref,res,image,
smaskPromise):JAM.call(smaskPromise.resolve,smaskPromise,[null])}function handleImageData(handler,xref,res,image,promise){function v85(message){message=message.data;message=JAM.new(Stream,[message,0,message.length,image.dict]);JAM.call(promise.resolve,promise,[message])}var v7265=image instanceof JpegStream;v7265&&(v7265=JAM.call(image.isNativelyDecodable,image,[xref,res]));v7265?(v7265=image.dict,v7265=JAM.call(v7265.get,v7265,["ColorSpace","CS"]),v7265=JAM.call(ColorSpace.parse,ColorSpace,[v7265,
xref,res]),xref=v7265.numComps,JAM.call(handler.send,handler,["JpegDecode",[image.getIR(),xref],v85])):JAM.call(promise.resolve,promise,[image])}function PDFImage(xref,res,image,inline,smask){this.image=image;image.getParams&&TODO("get params from actual stream");inline=image.dict;var v23450=JAM.call(inline.get,inline,["Width","W"]);this.width=v23450;this.height=v23450=JAM.call(inline.get,inline,["Height","H"]);(v23450=1>this.width)||(v23450=1>this.height);v23450&&error$$1("Invalid image width: "+
this.width+" or height: "+this.height);(v23450=JAM.call(inline.get,inline,["Interpolate","I"]))||(v23450=!1);this.interpolate=v23450;(v23450=JAM.call(inline.get,inline,["ImageMask","IM"]))||(v23450=!1);this.imageMask=v23450;image=image.bitsPerComponent;image||(image=JAM.call(inline.get,inline,["BitsPerComponent","BPC"]))||(this.imageMask?image=1:error$$1("Bits per component missing in image: "+this.imageMask));this.bpc=image;this.imageMask||(v23450=JAM.call(inline.get,inline,["ColorSpace","CS"]),
v23450||(TODO('JPX images (which don"t require color spaces'),v23450=JAM.new(Name,["DeviceRGB"])),this.colorSpace=v23450=JAM.call(ColorSpace.parse,ColorSpace,[v23450,xref,res]),this.numComps=this.colorSpace.numComps);this.decode=v23450=JAM.call(inline.get,inline,["Decode","D"]);this.needsDecode=!1;if(v23450=this.decode)if(v23450=this.colorSpace)v23450=this.colorSpace,v23450=!JAM.call(v23450.isDefaultDecode,v23450,[this.decode]);if(v23450){this.needsDecode=!0;image=(1<<image)-1;this.decodeCoefficients=
[];this.decodeAddends=[];for(var j=v23450=0,v3137=v23450<this.decode.length;v3137;){v3137=this.decode;introspect(JAM.policy.p1)v3137=v3137[v23450];var v3133=this.decode,v3134=v23450+1;introspect(JAM.policy.p1)v3133=v3133[v3134];this.decodeCoefficients[j]=v3133-v3137;this.decodeAddends[j]=image*v3137;v23450+=2;j+=1;v3137=v23450<this.decode.length}}(inline=JAM.call(inline.get,inline,["Mask"]))?TODO("masked images"):smask&&(this.smask=xref=new PDFImage(xref,res,smask,!1))}function v7281(){return this.smask?
Math.max(this.width,this.smask.width):this.width}function v7282(){return this.smask?Math.max(this.height,this.smask.height):this.height}PDFImage.buildImage=PDFImage_buildImage;PDFImage.resize=PDFImage_resize;var v3145=PDFImage;v3145.prototype={getComponents:PDFImage_getComponents,getOpacity:PDFImage_getOpacity,applyStencilMask:PDFImage_applyStencilMask,fillRgbaBuffer:PDFImage_fillRgbaBuffer,fillGrayBuffer:PDFImage_fillGrayBuffer,getImageBytes:PDFImage_getImageBytes};JAM.call(Object.defineProperty,
Object,[v3145.prototype,"drawHeight",{get:v7282}]);JAM.call(Object.defineProperty,Object,[v3145.prototype,"drawWidth",{get:v7281}]);return PDFImage}function CFFCompilerClosure(){function CFFCompiler_compileIndex(index,trackers){trackers=trackers||[];var objects=index.objects,count=objects.length;if(0==count)return[0,0,0];for(var data=[count>>8&255,count&255],lastOffset=1,i=0,v3149=i<count;v3149;){introspect(JAM.policy.p1)v3149=objects[i];lastOffset+=v3149.length;i+=1;v3149=i<count}lastOffset=256>
lastOffset?1:65536>lastOffset?2:16777216>lastOffset?3:4;JAM.call(data.push,data,[lastOffset]);for(var v3149=1,i=0,v3167=i<count+1;v3167;){1===lastOffset?JAM.call(data.push,data,[v3149&255]):2===lastOffset?JAM.call(data.push,data,[v3149>>8&255,v3149&255]):3===lastOffset?JAM.call(data.push,data,[v3149>>16&255,v3149>>8&255,v3149&255]):JAM.call(data.push,data,[v3149>>>24&255,v3149>>16&255,v3149>>8&255,v3149&255]);introspect(JAM.policy.p1)v3167=objects[i];if(v3167){introspect(JAM.policy.p1)v3167=objects[i];
v3149+=v3167.length}i+=1;v3167=i<count+1}i=0;for(lastOffset=i<count;lastOffset;){introspect(JAM.policy.p1)lastOffset=trackers[i];if(lastOffset){introspect(JAM.policy.p1)lastOffset=trackers[i];JAM.call(lastOffset.offset,lastOffset,[data.length])}lastOffset=0;introspect(JAM.policy.p1)v3149=objects[i];v3149=v3149.length;for(v3167=lastOffset<v3149;v3167;){introspect(JAM.policy.p1)v3167=objects[i];introspect(JAM.policy.p1)v3167=v3167[lastOffset];JAM.call(data.push,data,[v3167]);lastOffset+=1;v3167=lastOffset<
v3149}i+=1;lastOffset=i<count}return data}function CFFCompiler_compileTypedArray(data){for(var out=[],i=0,ii=data.length,v3175=i<ii;v3175;)out[i]=data[i],i+=1,v3175=i<ii;return out}function CFFCompiler_compileFDSelect(fdSelect){return JAM.call(this.compileTypedArray,this,[fdSelect])}function CFFCompiler_compileEncoding(encoding){return JAM.call(this.compileTypedArray,this,[encoding.raw])}function CFFCompiler_compileCharset(charset){return JAM.call(this.compileTypedArray,this,[charset.raw])}function CFFCompiler_compileCharStrings(charStrings){return JAM.call(this.compileIndex,
this,[charStrings])}function CFFCompiler_compileGlobalSubrIndex(){var globalSubrIndex=this.cff.globalSubrIndex,v3179=this.out;JAM.call(v3179.writeByteArray,v3179,[JAM.call(this.compileIndex,this,[globalSubrIndex])])}function CFFCompiler_compileStringIndex(strings){for(var stringIndex=new CFFIndex,i=0,ii=strings.length,v3182=i<ii;v3182;){introspect(JAM.policy.p1)v3182=strings[i];JAM.call(stringIndex.add,stringIndex,[stringToArray(v3182)]);i+=1;v3182=i<ii}return JAM.call(this.compileIndex,this,[stringIndex])}
function CFFCompiler_compileDict(dict,offsetTracker){for(var out=[],order=dict.order,i=0,v3200=i<order.length;v3200;){introspect(JAM.policy.p1)v3200=order[i];if(v3200 in dict.values){var v3184=dict.values;introspect(JAM.policy.p1)v3184=v3184[v3200];var v3185=dict.types;introspect(JAM.policy.p1)v3185=v3185[v3200];isArray(v3185)||(v3185=[v3185]);isArray(v3184)||(v3184=[v3184]);if(0!==v3184.length){for(var j=0,jj=v3185.length,v3198=j<jj;v3198;){introspect(JAM.policy.p1)v3198=v3185[j];introspect(JAM.policy.p1)var value=
v3184[j];switch(v3198){case "num":case "sid":out=out.concat(JAM.call(this.encodeNumber,this,[value]));break;case "offset":v3198=dict.keyToNameMap;introspect(JAM.policy.p1)v3198=v3198[v3200];JAM.call(offsetTracker.isTracking,offsetTracker,[v3198])||JAM.call(offsetTracker.track,offsetTracker,[v3198,out.length]);out=out.concat([29,0,0,0,0]);break;case "array":case "delta":for(var out=out.concat(JAM.call(this.encodeNumber,this,[value])),v3198=1,value=v3184.length,v3196=v3198<value;v3196;){introspect(JAM.policy.p1)v3196=
v3184[v3198];out=out.concat(JAM.call(this.encodeNumber,this,[v3196]));v3198+=1;v3196=v3198<value}break;default:error$$1("Unknown data type of "+v3198)}j+=1;v3198=j<jj}v3184=dict.opcodes;introspect(JAM.policy.p1)v3200=v3184[v3200];out=out.concat(v3200)}}i+=1;v3200=i<order.length}return out}function CFFCompiler_compilePrivateDicts(dicts,trackers,output){for(var i=0,ii=dicts.length,v3208=i<ii;v3208;){introspect(JAM.policy.p1)v3208=dicts[i];var v7307=!v3208.privateDict;v7307||(v7307=!JAM.call(v3208.hasName,
v3208,["Private"]));if(!v7307){var privateDict=v3208.privateDict,v3208=new CFFOffsetTracker,v7307=JAM.call(this.compileDict,this,[privateDict,v3208]);JAM.call(v3208.offset,v3208,[output.length]);introspect(JAM.policy.p1)var v3203=trackers[i];JAM.call(v3203.setEntryLocation,v3203,["Private",[v7307.length,output.length],output]);JAM.call(output.add,output,[v7307]);(v3203=privateDict.subrsIndex)&&(v3203=JAM.call(privateDict.hasName,privateDict,["Subrs"]));v3203&&(privateDict=JAM.call(this.compileIndex,
this,[privateDict.subrsIndex]),JAM.call(v3208.setEntryLocation,v3208,["Subrs",[v7307.length],output]),JAM.call(output.add,output,[privateDict]))}i+=1;v3208=i<ii}}function CFFCompiler_compileTopDicts(dicts,length){for(var fontDictTrackers=[],fdArrayIndex=new CFFIndex,i=0,ii=dicts.length,v3209=i<ii;v3209;){introspect(JAM.policy.p1)var fontDict=dicts[i];v3209=new CFFOffsetTracker;fontDict=JAM.call(this.compileDict,this,[fontDict,v3209]);JAM.call(fontDictTrackers.push,fontDictTrackers,[v3209]);JAM.call(fdArrayIndex.add,
fdArrayIndex,[fontDict]);JAM.call(v3209.offset,v3209,[length]);i+=1;v3209=i<ii}fdArrayIndex=JAM.call(this.compileIndex,this,[fdArrayIndex,fontDictTrackers]);return{trackers:fontDictTrackers,output:fdArrayIndex}}function CFFCompiler_compileNameIndex(names){for(var nameIndex=new CFFIndex,i=0,ii=names.length,v3211=i<ii;v3211;){introspect(JAM.policy.p1)v3211=names[i];JAM.call(nameIndex.add,nameIndex,[stringToArray(v3211)]);i+=1;v3211=i<ii}return JAM.call(this.compileIndex,this,[nameIndex])}function CFFCompiler_compileHeader(header){return[header.major,
header.minor,header.hdrSize,header.offSize]}function CFFCompiler_encodeInteger(value){var v7313=-107<=value;v7313&&(v7313=107>=value);v7313?value=[value+139]:((v7313=108<=value)&&(v7313=1131>=value),v7313?(value=[value-108],value=[(value>>8)+247,value&255]):((v7313=-1131<=value)&&(v7313=-108>=value),v7313?(value=-value-108,value=[(value>>8)+251,value&255]):((v7313=-32768<=value)&&(v7313=32767>=value),value=v7313?[28,value>>8&255,value&255]:[29,value>>24&255,value>>16&255,value>>8&255,value&255])));
return value}function CFFCompiler_encodeFloat(value){value=value.toString();"0."===value.substr(0,2)?value=value.substr(1):"-0."===value.substr(0,3)&&(value="-"+value.substr(2));for(var nibbles=[],i=0,ii=value.length,v3241=i<ii;v3241;){var v3241=value.charAt(i),b=value.charAt(i+1),v7325="e"===v3241;v7325&&(v7325="-"===b);v7325?(v3241=12,i+=1):v3241="."===v3241?10:"E"===v3241?11:"-"===v3241?14:v3241;JAM.call(nibbles.push,nibbles,[v3241]);i+=1;v3241=i<ii}JAM.call(nibbles.push,nibbles,[15]);nibbles.length%
2&&JAM.call(nibbles.push,nibbles,[15]);value=[30];i=0;ii=nibbles.length;for(v3241=i<ii;v3241;){introspect(JAM.policy.p1)v3241=nibbles[i];v3241<<=4;b=i+1;introspect(JAM.policy.p1)b=nibbles[b];JAM.call(value.push,value,[v3241|b]);i+=2;v3241=i<ii}return value}function CFFCompiler_encodeNumber(value){var v7329=parseFloat(value)==parseInt(value);v7329&&(v7329=!isNaN(value));return v7329?JAM.call(this.encodeInteger,this,[value]):JAM.call(this.encodeFloat,this,[value])}function CFFCompiler_compile(){function CFFCompiler_add(data){this.data=
data=this.data.concat(data);this.length=this.data.length}var cff=this.cff,output={data:[],length:0,add:CFFCompiler_add},header=JAM.call(this.compileHeader,this,[cff.header]);JAM.call(output.add,output,[header]);header=JAM.call(this.compileNameIndex,this,[cff.names]);JAM.call(output.add,output,[header]);var compiled=JAM.call(this.compileTopDicts,this,[[cff.topDict],output.length]);JAM.call(output.add,output,[compiled.output]);header=compiled.trackers[0];compiled=JAM.call(this.compileStringIndex,this,
[cff.strings.strings]);JAM.call(output.add,output,[compiled]);compiled=JAM.call(this.compileIndex,this,[cff.globalSubrIndex]);JAM.call(output.add,output,[compiled]);if(compiled=cff.encoding)compiled=cff.topDict,compiled=JAM.call(compiled.hasName,compiled,["Encoding"]);compiled&&(cff.encoding.predefined?JAM.call(header.setEntryLocation,header,["Encoding",[cff.encoding.format],output]):(compiled=JAM.call(this.compileEncoding,this,[cff.encoding]),JAM.call(header.setEntryLocation,header,["Encoding",[output.length],
output]),JAM.call(output.add,output,[compiled])));if(compiled=cff.charset)compiled=cff.topDict,compiled=JAM.call(compiled.hasName,compiled,["charset"]);compiled&&(cff.charset.predefined?JAM.call(header.setEntryLocation,header,["charset",[cff.charset.format],output]):(compiled=JAM.call(this.compileCharset,this,[cff.charset]),JAM.call(header.setEntryLocation,header,["charset",[output.length],output]),JAM.call(output.add,output,[compiled])));compiled=JAM.call(this.compileCharStrings,this,[cff.charStrings]);
JAM.call(header.setEntryLocation,header,["CharStrings",[output.length],output]);JAM.call(output.add,output,[compiled]);cff.isCIDFont&&(JAM.call(header.setEntryLocation,header,["FDSelect",[output.length],output]),compiled=JAM.call(this.compileFDSelect,this,[cff.fdSelect.raw]),JAM.call(output.add,output,[compiled]),compiled=JAM.call(this.compileTopDicts,this,[cff.fdArray,output.length]),JAM.call(header.setEntryLocation,header,["FDArray",[output.length],output]),JAM.call(output.add,output,[compiled.output]),
compiled=compiled.trackers,JAM.call(this.compilePrivateDicts,this,[cff.fdArray,compiled,output]));JAM.call(this.compilePrivateDicts,this,[[cff.topDict],[header],output]);return output.data}function stringToArray(str){for(var array=[],i=0,ii=str.length,v3280=i<ii;v3280;){var v3280=array,v3279=i,v23456=str.charCodeAt(i);v3280[v3279]=v23456;i+=1;v3280=i<ii}return array}function CFFCompiler(cff){this.cff=cff}CFFCompiler.prototype={compile:CFFCompiler_compile,encodeNumber:CFFCompiler_encodeNumber,encodeFloat:CFFCompiler_encodeFloat,
encodeInteger:CFFCompiler_encodeInteger,compileHeader:CFFCompiler_compileHeader,compileNameIndex:CFFCompiler_compileNameIndex,compileTopDicts:CFFCompiler_compileTopDicts,compilePrivateDicts:CFFCompiler_compilePrivateDicts,compileDict:CFFCompiler_compileDict,compileStringIndex:CFFCompiler_compileStringIndex,compileGlobalSubrIndex:CFFCompiler_compileGlobalSubrIndex,compileCharStrings:CFFCompiler_compileCharStrings,compileCharset:CFFCompiler_compileCharset,compileEncoding:CFFCompiler_compileEncoding,
compileFDSelect:CFFCompiler_compileFDSelect,compileTypedArray:CFFCompiler_compileTypedArray,compileIndex:CFFCompiler_compileIndex};return CFFCompiler}function CFFOffsetTrackerClosure(){function CFFOffsetTracker_setEntryLocation(key,values,output){key in this.offsets||error$$1("Not tracking location of "+key);output=output.data;var v3283=this.offsets;introspect(JAM.policy.p1)key=v3283[key];for(var v3283=5,i=0,ii=values.length,v3289=i<ii;v3289;){var v3289=i*v3283+key,offset1=v3289+1,offset2=v3289+2,
offset3=v3289+3,offset4=v3289+4;introspect(JAM.policy.p1)var v21578=output[v3289];v21578=29!==v21578;if(!v21578){introspect(JAM.policy.p1)v21578=output[offset1];v21578=0!==v21578;if(!v21578){introspect(JAM.policy.p1)v21578=output[offset2];v21578=0!==v21578;if(!v21578){introspect(JAM.policy.p1)v21578=output[offset3];v21578=0!==v21578;if(!v21578){introspect(JAM.policy.p1)v21578=output[offset4];v21578=0!==v21578}}}}v21578&&error$$1("writing to an offset that is not empty");introspect(JAM.policy.p1)v21578=
values[i];JAM.set(output,v3289,29);JAM.set(output,offset1,v21578>>24&255);JAM.set(output,offset2,v21578>>16&255);JAM.set(output,offset3,v21578>>8&255);JAM.set(output,offset4,v21578&255);i+=1;v3289=i<ii}}function CFFOffsetTracker_offset(value){for(var key in this.offsets){var v3290=this.offsets;introspect(JAM.policy.p1)var v21581=v3290[key];JAM.set(v3290,key,v21581+value)}}function CFFOffsetTracker_track(key,location){key in this.offsets&&error$$1("Already tracking location of "+key);JAM.set(this.offsets,
key,location)}function CFFOffsetTracker_isTracking(key){return key in this.offsets}function CFFOffsetTracker(){this.offsets={}}CFFOffsetTracker.prototype={isTracking:CFFOffsetTracker_isTracking,track:CFFOffsetTracker_track,offset:CFFOffsetTracker_offset,setEntryLocation:CFFOffsetTracker_setEntryLocation};return CFFOffsetTracker}function CFFFDSelectClosure(){function CFFFDSelect(fdSelect,raw){this.fdSelect=fdSelect;this.raw=raw}return CFFFDSelect}function CFFEncodingClosure(){function CFFEncoding(predefined,
format,encoding,raw){this.predefined=predefined;this.format=format;this.encoding=encoding;this.raw=raw}return CFFEncoding}function CFFCharsetClosure(){function CFFCharset(predefined,format,charset,raw){this.predefined=predefined;this.format=format;this.charset=charset;this.raw=raw}return CFFCharset}function CFFPrivateDictClosure(){function CFFPrivateDict(strings){null===tables&&(tables=JAM.call(CFFDict.createTables,CFFDict,[layout]));JAM.call(CFFDict.call,CFFDict,[this,tables,strings]);this.subrsIndex=
null}var layout=[[6,"BlueValues","delta",null],[7,"OtherBlues","delta",null],[8,"FamilyBlues","delta",null],[9,"FamilyOtherBlues","delta",null],[[12,9],"BlueScale","num",0.039625],[[12,10],"BlueShift","num",7],[[12,11],"BlueFuzz","num",1],[10,"StdHW","num",null],[11,"StdVW","num",null],[[12,12],"StemSnapH","delta",null],[[12,13],"StemSnapV","delta",null],[[12,14],"ForceBold","num",0],[[12,17],"LanguageGroup","num",0],[[12,18],"ExpansionFactor","num",0.06],[[12,19],"initialRandomSeed","num",0],[19,
"Subrs","offset",null],[20,"defaultWidthX","num",0],[21,"nominalWidthX","num",0]],tables=null,v3315=CFFPrivateDict,v23457=Object.create(CFFDict.prototype);v3315.prototype=v23457;return CFFPrivateDict}function CFFTopDictClosure(){function CFFTopDict(strings){null===tables&&(tables=JAM.call(CFFDict.createTables,CFFDict,[layout]));JAM.call(CFFDict.call,CFFDict,[this,tables,strings]);this.privateDict=null}var layout=[[[12,30],"ROS",["sid","sid","num"],null],[[12,20],"SyntheticBase","num",null],[0,"version",
"sid",null],[1,"Notice","sid",null],[[12,0],"Copyright","sid",null],[2,"FullName","sid",null],[3,"FamilyName","sid",null],[4,"Weight","sid",null],[[12,1],"isFixedPitch","num",0],[[12,2],"ItalicAngle","num",0],[[12,3],"UnderlinePosition","num",-100],[[12,4],"UnderlineThickness","num",50],[[12,5],"PaintType","num",0],[[12,6],"CharstringType","num",2],[[12,7],"FontMatrix","num num num num num num".split(" "),[0.001,0,0,0.001,0,0]],[13,"UniqueID","num",null],[5,"FontBBox",["num","num","num","num"],[0,
0,0,0]],[[12,8],"StrokeWidth","num",0],[14,"XUID","array",null],[15,"charset","offset",0],[16,"Encoding","offset",0],[17,"CharStrings","offset",0],[18,"Private",["offset","offset"],null],[[12,21],"PostScript","sid",null],[[12,22],"BaseFontName","sid",null],[[12,23],"BaseFontBlend","delta",null],[[12,31],"CIDFontVersion","num",0],[[12,32],"CIDFontRevision","num",0],[[12,33],"CIDFontType","num",0],[[12,34],"CIDCount","num",8720],[[12,35],"UIDBase","num",null],[[12,36],"FDArray","offset",null],[[12,
37],"FDSelect","offset",null],[[12,38],"FontName","sid",null]],tables=null,v3351=CFFTopDict,v23458=Object.create(CFFDict.prototype);v3351.prototype=v23458;return CFFTopDict}function CFFDictClosure(){function CFFDict_createTables(layout){for(var tables={keyToNameMap:{},nameToKeyMap:{},defaults:{},types:{},opcodes:{},order:[]},i=0,ii=layout.length,v3361=i<ii;v3361;){introspect(JAM.policy.p1)var entry=layout[i];v3361=isArray(entry[0])?(entry[0][0]<<8)+entry[0][1]:entry[0];JAM.set(tables.keyToNameMap,
v3361,entry[1]);JAM.set(tables.nameToKeyMap,entry[1],v3361);JAM.set(tables.types,v3361,entry[2]);JAM.set(tables.defaults,v3361,entry[3]);var v3358=tables.opcodes,v3359=v3361,entry=isArray(entry[0])?entry[0]:[entry[0]];JAM.set(v3358,v3359,entry);entry=tables.order;JAM.call(entry.push,entry,[v3361]);i+=1;v3361=i<ii}return tables}function CFFDict_removeByName(name){var v3362=this.values,v7391=this.nameToKeyMap;introspect(JAM.policy.p1)name=v7391[name];delete v3362[name]}function CFFDict_getByName(name){name in
this.nameToKeyMap||error$$1('Invalid dictionary name "'+name+'"');var v3366=this.nameToKeyMap;introspect(JAM.policy.p1)name=v3366[name];if(!(name in this.values)){v3366=this.defaults;introspect(JAM.policy.p1)return v3366[name]}v3366=this.values;introspect(JAM.policy.p1)return v3366[name]}function CFFDict_hasName(name){var v7395=this.nameToKeyMap;introspect(JAM.policy.p1)name=v7395[name];return name in this.values}function CFFDict_setByKey(key,value){if(!(key in this.keyToNameMap))return!1;if(0===
value.length)return!0;var v3374=this.types;introspect(JAM.policy.p1)v3374=v3374[key];var v7398="num"===v3374;v7398||(v7398="sid"===v3374)||(v7398="offset"===v3374);v7398&&(value=value[0]);JAM.set(this.values,key,value);return!0}function CFFDict(tables,strings){this.keyToNameMap=tables.keyToNameMap;this.nameToKeyMap=tables.nameToKeyMap;this.defaults=tables.defaults;this.types=tables.types;this.opcodes=tables.opcodes;this.order=tables.order;this.strings=strings;this.values={}}CFFDict.prototype={setByKey:CFFDict_setByKey,
hasName:CFFDict_hasName,getByName:CFFDict_getByName,removeByName:CFFDict_removeByName};CFFDict.createTables=CFFDict_createTables;return CFFDict}function CFFIndexClosure(){function CFFIndex_get(index){var v3377=this.objects;introspect(JAM.policy.p1)return v3377[index]}function CFFIndex_add(data){this.length+=data.length;var v3378=this.objects;JAM.call(v3378.push,v3378,[data])}function CFFIndex(){this.objects=[];this.length=0}function v3380(){return this.objects.length}CFFIndex.prototype={add:CFFIndex_add,
get:CFFIndex_get};JAM.call(Object.defineProperty,Object,[CFFIndex.prototype,"count",{get:v3380}]);return CFFIndex}function CFFStringsClosure(){function CFFStrings_add(value){var v3381=this.strings;JAM.call(v3381.push,v3381,[value])}function CFFStrings_get(index){var v7403=0<=index;v7403&&(v7403=390>=index);if(v7403)introspect(JAM.policy.p1)return CFFStandardStrings[index];if(index-391<=this.strings.length){v7403=this.strings;index-=391;introspect(JAM.policy.p1)return v7403[index]}return CFFStandardStrings[0]}
function CFFStrings(){this.strings=[]}function v3387(){return this.strings.length}CFFStrings.prototype={get:CFFStrings_get,add:CFFStrings_add};JAM.call(Object.defineProperty,Object,[CFFStrings.prototype,"count",{get:v3387}]);return CFFStrings}function CFFHeaderClosure(){function CFFHeader(major,minor,hdrSize,offSize){this.major=major;this.minor=minor;this.hdrSize=hdrSize;this.offSize=offSize}return CFFHeader}function CFFClosure(){function CFF(){this.header=null;this.names=[];this.topDict=null;var v23459=
new CFFStrings;this.strings=v23459;this.charStrings=this.charset=this.encoding=this.globalSubrIndex=null;this.fdArray=[];this.fdSelect=null;this.isCIDFont=!1}return CFF}function CFFParserClosure(){function CFFParser_parseFDSelect(pos,length){var start=pos,bytes=this.bytes,v3388=pos;pos+=1;introspect(JAM.policy.p1)var format=bytes[v3388];v3388=[];switch(format){case 0:for(var format=0,v3390=format<length;v3390;){v3390=pos;pos+=1;introspect(JAM.policy.p1)v3390=bytes[v3390];JAM.call(v3388.push,v3388,
[v3390]);format+=1;v3390=format<length}break;case 3:format=pos;pos+=1;introspect(JAM.policy.p1)format=bytes[format];format<<=8;v3390=pos;pos+=1;introspect(JAM.policy.p1)v3390=bytes[v3390];for(var v3390=format|v3390,format=0,v3399=format<v3390;v3399;){v3399=pos;pos+=1;introspect(JAM.policy.p1)v3399=bytes[v3399];var v3399=v3399<<8,v7411=pos;pos+=1;introspect(JAM.policy.p1)v7411=bytes[v7411];v7411|=v3399;v3399=pos;pos+=1;introspect(JAM.policy.p1)v3399=bytes[v3399];introspect(JAM.policy.p1)var v7412=
bytes[pos];var v7412=v7412<<8,v7413=pos+1;introspect(JAM.policy.p1)v7413=bytes[v7413];v7412|=v7413;for(v7413=v7411<v7412;v7413;)JAM.call(v3388.push,v3388,[v3399]),v7411+=1,v7413=v7411<v7412;format+=1;v3399=format<v3390}pos+=2;break;default:error$$1("Unknown fdselect format "+format)}format=pos;return JAM.new(CFFFDSelect,[v3388,bytes.subarray(start,format)])}function CFFParser_parseEncoding(pos,properties,strings,charset){var encoding={},bytes=this.bytes,predefined=!1,format,raw=null;(format=0==pos)||
(format=1==pos);if(format){predefined=!0;format=pos;var gid=1;pos=pos?Encodings.ExpertEncoding:Encodings.StandardEncoding;var i=0;properties=charset.length;for(strings=i<properties;strings;){introspect(JAM.policy.p1)strings=charset[i];strings=pos.indexOf(strings);-1!=strings&&(encoding[strings]=gid,gid+=1);i+=1;strings=i<properties}}else{format=charset=pos;pos+=1;introspect(JAM.policy.p1)format=bytes[format];switch(format&127){case 0:i=pos;pos+=1;introspect(JAM.policy.p1)gid=bytes[i];i=1;for(raw=
i<=gid;raw;){raw=pos;pos+=1;introspect(JAM.policy.p1)raw=bytes[raw];JAM.set(encoding,raw,i);i+=1;raw=i<=gid}break;case 1:i=pos;pos+=1;introspect(JAM.policy.p1)raw=bytes[i];for(var gid=1,i=0,v3414=i<raw;v3414;){v3414=pos;pos+=1;introspect(JAM.policy.p1)v3414=bytes[v3414];var v3412=pos;pos+=1;introspect(JAM.policy.p1)v3412=bytes[v3412];for(var j=v3414,v3413=j<=v3414+v3412;v3413;)JAM.set(encoding,j,gid),gid+=1,j+=1,v3413=j<=v3414+v3412;i+=1;v3414=i<raw}break;default:error$$1("Unknow encoding format: "+
format+" in CFF")}i=pos;if(format&128){introspect(JAM.policy.p1)gid=bytes[charset];JAM.set(bytes,charset,gid&127);gid=pos;pos+=1;introspect(JAM.policy.p1)gid=bytes[gid];raw=0;for(v3414=raw<gid;v3414;){v3414=pos;pos+=1;introspect(JAM.policy.p1)v3414=bytes[v3414];v3412=pos;pos+=1;introspect(JAM.policy.p1)v3412=bytes[v3412];v3412<<=8;j=pos;pos+=1;introspect(JAM.policy.p1)j=bytes[j];j=v3412+(j&255);v3412=encoding;j=properties.differences.indexOf(JAM.call(strings.get,strings,[j]));JAM.set(v3412,v3414,
j);raw+=1;v3414=raw<gid}}raw=bytes.subarray(charset,i)}format&=127;return JAM.new(CFFEncoding,[predefined,format,encoding,raw])}function CFFParser_parseCharsets(pos,length,strings,cid){if(0==pos)return JAM.new(CFFCharset,[!0,CFFCharsetPredefinedTypes.ISO_ADOBE,ISOAdobeCharset]);if(1==pos)return JAM.new(CFFCharset,[!0,CFFCharsetPredefinedTypes.EXPERT,ExpertCharset]);if(2==pos)return JAM.new(CFFCharset,[!0,CFFCharsetPredefinedTypes.EXPERT_SUBSET,ExpertSubsetCharset]);var bytes=this.bytes,start=pos,
v3432=pos;pos+=1;introspect(JAM.policy.p1)v3432=bytes[v3432];var charset=[".notdef"];length-=1;switch(v3432){case 0:for(var i=0,v3436=i<length;v3436;){v3436=pos;pos+=1;introspect(JAM.policy.p1)v3436=bytes[v3436];var v3436=v3436<<8,v7425=pos;pos+=1;introspect(JAM.policy.p1)v7425=bytes[v7425];v3436|=v7425;v3436=cid?v3436:JAM.call(strings.get,strings,[v3436]);JAM.call(charset.push,charset,[v3436]);i+=1;v3436=i<length}break;case 1:for(i=charset.length<=length;i;){i=pos;pos+=1;introspect(JAM.policy.p1)i=
bytes[i];i<<=8;v3436=pos;pos+=1;introspect(JAM.policy.p1)v3436=bytes[v3436];v3436|=i;i=pos;pos+=1;introspect(JAM.policy.p1)v7425=bytes[i];for(var i=0,v3441=i<=v7425;v3441;)cid?(v3441=v3436,v3436+=1):(v3441=v3436,v3436+=1,v3441=JAM.call(strings.get,strings,[v3441])),JAM.call(charset.push,charset,[v3441]),i+=1,v3441=i<=v7425;i=charset.length<=length}break;case 2:for(i=charset.length<=length;i;){i=pos;pos+=1;introspect(JAM.policy.p1)i=bytes[i];i<<=8;v3436=pos;pos+=1;introspect(JAM.policy.p1)v3436=bytes[v3436];
v3436|=i;i=pos;pos+=1;introspect(JAM.policy.p1)i=bytes[i];i<<=8;v7425=pos;pos+=1;introspect(JAM.policy.p1)v7425=bytes[v7425];v7425|=i;i=0;for(v3441=i<=v7425;v3441;)cid?(v3441=v3436,v3436+=1):(v3441=v3436,v3436+=1,v3441=JAM.call(strings.get,strings,[v3441])),JAM.call(charset.push,charset,[v3441]),i+=1,v3441=i<=v7425;i=charset.length<=length}break;default:error$$1("Unknown charset format")}bytes=bytes.subarray(start,pos);return JAM.new(CFFCharset,[!1,v3432,charset,bytes])}function CFFParser_parsePrivateDict(parentDict){if(JAM.call(parentDict.hasName,
parentDict,["Private"])){var privateOffset=JAM.call(parentDict.getByName,parentDict,["Private"]),v7440=!isArray(privateOffset);v7440||(v7440=2!==privateOffset.length);if(v7440)JAM.call(parentDict.removeByName,parentDict,["Private"]);else{var v7440=privateOffset[0],privateOffset=privateOffset[1],v7441=0===v7440;v7441||(v7441=privateOffset>=this.bytes.length);v7441?JAM.call(parentDict.removeByName,parentDict,["Private"]):(v7440=privateOffset+v7440,v7440=this.bytes.subarray(privateOffset,v7440),v7440=
JAM.call(this.parseDict,this,[v7440]),v7440=JAM.call(this.createDict,this,[CFFPrivateDict,v7440,parentDict.strings]),parentDict.privateDict=v7440,JAM.call(v7440.getByName,v7440,["Subrs"])&&(parentDict=JAM.call(v7440.getByName,v7440,["Subrs"]),privateOffset+=parentDict,(parentDict=0===parentDict)||(parentDict=privateOffset>=this.bytes.length),parentDict?JAM.call(v7440.removeByName,v7440,["Subrs"]):(parentDict=JAM.call(this.parseIndex,this,[privateOffset]),v7440.subrsIndex=parentDict.obj)))}}}function CFFParser_parseCharStrings(charStringOffset){charStringOffset=
JAM.call(this.parseIndex,this,[charStringOffset]).obj;for(var count=charStringOffset.count,i=0,v3466=i<count;v3466;){for(var v3466=JAM.call(charStringOffset.get,charStringOffset,[i]),length=v3466.length,j=0,v3465=j<=length;v3465;){v3465=j;j+=1;introspect(JAM.policy.p1)v3465=v3466[v3465];var v7444=12==v3465;if(v7444){v7444=j;j+=1;introspect(JAM.policy.p1)v7444=v3466[v7444];v7444=0==v7444}v7444?(v3466[j-2]=139,v3466[j-1]=22):28===v3465?j+=2:((v7444=247<=v3465)&&(v7444=254>=v3465),v7444?j+=1:255==v3465&&
(j+=4));v3465=j<=length}i+=1;v3466=i<count}return charStringOffset}function CFFParser_createDict(type,dict,strings){type=JAM.new(type,[strings]);strings=0;for(var ii=dict.length,v3467=strings<ii;v3467;){introspect(JAM.policy.p1)var pair=dict[strings];v3467=pair[0];pair=pair[1];JAM.call(type.setByKey,type,[v3467,pair]);strings+=1;v3467=strings<ii}return type}function CFFParser_parseStringIndex(index){for(var strings=new CFFStrings,i=0,ii=index.count,v3469=i<ii;v3469;){var v3469=JAM.call(index.get,
index,[i]),v7446=String.fromCharCode;JAM.call(strings.add,strings,[JAM.call(v7446.apply,v7446,[null,v3469])]);i+=1;v3469=i<ii}return strings}function CFFParser_parseNameIndex(index){for(var names=[],i=0,ii=index.count,v3475=i<ii;v3475;){for(var name=JAM.call(index.get,index,[i]),length=Math.min(name.length,127),v3475=[],j=0,v3473=j<length;v3473;){introspect(JAM.policy.p1)v3473=name[j];var v7447=0===j;v7447&&(v7447=0===v3473);v7447?v3475[j]=v3473:((v7447=33>v3473)||(v7447=126<v3473),v7447||(v7447=
91===v3473,v7447||(v7447=93===v3473,v7447||(v7447=40===v3473,v7447||(v7447=41===v3473,v7447||(v7447=123===v3473,v7447||(v7447=125===v3473,v7447||(v7447=60===v3473,v7447||(v7447=62===v3473,v7447||(v7447=47===v3473)||(v7447=37===v3473))))))))),v3475[j]=v7447?95:v3473);j+=1;v3473=j<length}name=String.fromCharCode;JAM.call(names.push,names,[JAM.call(name.apply,name,[null,v3475])]);i+=1;v3475=i<ii}return names}function CFFParser_parseIndex(pos){var cffIndex=new CFFIndex,bytes=this.bytes,v21615=pos;pos+=
1;introspect(JAM.policy.p1)v21615=bytes[v21615];var v21615=v21615<<8,v7451=pos;pos+=1;introspect(JAM.policy.p1)v7451=bytes[v7451];var count=v21615|v7451,v21615=[],end=pos;if(0!=count){v7451=pos;pos+=1;introspect(JAM.policy.p1)end=bytes[v7451];for(var startPos=pos+(count+1)*end-1,v7451=0,ii=count+1,v3482=v7451<ii;v3482;){for(var j=v3482=0,v3480=j<end;v3480;){v3482<<=8;v3480=pos;pos+=1;introspect(JAM.policy.p1)v3480=bytes[v3480];v3482+=v3480;j+=1;v3480=j<end}JAM.call(v21615.push,v21615,[startPos+v3482]);
v7451+=1;v3482=v7451<ii}end=v21615[count]}v7451=0;ii=v21615.length-1;for(pos=v7451<ii;pos;){introspect(JAM.policy.p1)pos=v21615[v7451];count=v7451+1;introspect(JAM.policy.p1)count=v21615[count];JAM.call(cffIndex.add,cffIndex,[bytes.subarray(pos,count)]);v7451+=1;pos=v7451<ii}return{obj:cffIndex,endPos:end}}function CFFParser_parseDict(dict){function parseOperand(){var v3488=pos;pos+=1;introspect(JAM.policy.p1)v3488=dict[v3488];if(30===v3488){for(var v3488="",eof=15,lookup=["0","1","2","3","4","5",
"6","7","8","9",".","E","E-",null,"-"],length=dict.length,v3492=pos<length;v3492;){v3492=pos;pos+=1;introspect(JAM.policy.p1)var b=dict[v3492];v3492=b>>4;b&=15;if(v3492==eof)break;introspect(JAM.policy.p1)v3492=lookup[v3492];v3488+=v3492;if(b==eof)break;introspect(JAM.policy.p1)v3492=lookup[b];v3488+=v3492;v3492=pos<length}return v3488=parseFloat(v3488)}if(28===v3488){v3488=pos;pos+=1;introspect(JAM.policy.p1)v3488=dict[v3488];v3488<<=8;eof=pos;pos+=1;introspect(JAM.policy.p1)eof=dict[eof];return v3488|=
eof}if(29===v3488){v3488=pos;pos+=1;introspect(JAM.policy.p1)v3488=dict[v3488];v3488<<=8;eof=pos;pos+=1;introspect(JAM.policy.p1)eof=dict[eof];v3488|=eof;v3488<<=8;eof=pos;pos+=1;introspect(JAM.policy.p1)eof=dict[eof];v3488|=eof;v3488<<=8;eof=pos;pos+=1;introspect(JAM.policy.p1)eof=dict[eof];return v3488|=eof}(eof=32<=v3488)&&(eof=246>=v3488);if(eof)return v3488-139;(eof=247<=v3488)&&(eof=250>=v3488);if(eof){v3488=256*(v3488-247);eof=pos;pos+=1;introspect(JAM.policy.p1)eof=dict[eof];return v3488+
eof+108}(eof=251<=v3488)&&(eof=254>=v3488);if(eof){v3488=-(256*(v3488-251));eof=pos;pos+=1;introspect(JAM.policy.p1)eof=dict[eof];return v3488-eof-108}error$$1("255 is not a valid DICT command");return-1}for(var pos=0,operands=[],entries=[],pos=0,end=dict.length,v3517=pos<end;v3517;){introspect(JAM.policy.p1)v3517=dict[pos];if(21>=v3517){if(12===v3517){var v3517=v3517<<8,v7467=pos+=1;introspect(JAM.policy.p1)v7467=dict[v7467];v3517|=v7467}JAM.call(entries.push,entries,[[v3517,operands]]);operands=
[];pos+=1}else JAM.call(operands.push,operands,[parseOperand()]);v3517=pos<end}return entries}function CFFParser_parseHeader(){var bytes=this.bytes,offset=0;introspect(JAM.policy.p1)var v7468=bytes[offset];for(v7468=1!=v7468;v7468;){offset+=1;introspect(JAM.policy.p1)v7468=bytes[offset];v7468=1!=v7468}0!=offset&&(warn("cff data is shifted"),this.bytes=bytes=bytes.subarray(offset));var v7468=bytes[0],minor=bytes[1],offset=bytes[2],bytes=bytes[3],bytes=JAM.new(CFFHeader,[v7468,minor,offset,bytes]);
return{obj:bytes,endPos:offset}}function CFFParser_parse(){var properties=this.properties,cff=new CFF;this.cff=cff;var header=this.parseHeader(),nameIndex=JAM.call(this.parseIndex,this,[header.endPos]),topDictIndex=JAM.call(this.parseIndex,this,[nameIndex.endPos]),stringIndex=JAM.call(this.parseIndex,this,[topDictIndex.endPos]),globalSubrIndex=JAM.call(this.parseIndex,this,[stringIndex.endPos]),topDictIndex=topDictIndex.obj,topDictIndex=JAM.call(this.parseDict,this,[JAM.call(topDictIndex.get,topDictIndex,
[0])]),topDictIndex=JAM.call(this.createDict,this,[CFFTopDict,topDictIndex,cff.strings]);cff.header=header.obj;header=cff;nameIndex=JAM.call(this.parseNameIndex,this,[nameIndex.obj]);header.names=nameIndex;nameIndex=cff;stringIndex=JAM.call(this.parseStringIndex,this,[stringIndex.obj]);nameIndex.strings=stringIndex;cff.topDict=topDictIndex;cff.globalSubrIndex=globalSubrIndex.obj;JAM.call(this.parsePrivateDict,this,[cff.topDict]);globalSubrIndex=cff;stringIndex=JAM.call(topDictIndex.hasName,topDictIndex,
["ROS"]);globalSubrIndex.isCIDFont=stringIndex;stringIndex=JAM.call(topDictIndex.getByName,topDictIndex,["CharStrings"]);globalSubrIndex=cff;stringIndex=JAM.call(this.parseCharStrings,this,[stringIndex]);globalSubrIndex.charStrings=stringIndex;if(cff.isCIDFont){properties=JAM.call(this.parseIndex,this,[JAM.call(topDictIndex.getByName,topDictIndex,["FDArray"])]).obj;globalSubrIndex=0;stringIndex=properties.count;for(nameIndex=globalSubrIndex<stringIndex;nameIndex;)nameIndex=JAM.call(properties.get,
properties,[globalSubrIndex]),nameIndex=JAM.call(this.createDict,this,[CFFTopDict,JAM.call(this.parseDict,this,[nameIndex]),cff.strings]),JAM.call(this.parsePrivateDict,this,[nameIndex]),header=cff.fdArray,JAM.call(header.push,header,[nameIndex]),globalSubrIndex+=1,nameIndex=globalSubrIndex<stringIndex;properties=null;globalSubrIndex=JAM.call(this.parseCharsets,this,[JAM.call(topDictIndex.getByName,topDictIndex,["charset"]),cff.charStrings.count,cff.strings,!0]);stringIndex=cff;topDictIndex=JAM.call(this.parseFDSelect,
this,[JAM.call(topDictIndex.getByName,topDictIndex,["FDSelect"]),cff.charStrings.count]);stringIndex.fdSelect=topDictIndex}else globalSubrIndex=JAM.call(this.parseCharsets,this,[JAM.call(topDictIndex.getByName,topDictIndex,["charset"]),cff.charStrings.count,cff.strings,!1]),properties=JAM.call(this.parseEncoding,this,[JAM.call(topDictIndex.getByName,topDictIndex,["Encoding"]),properties,cff.strings,globalSubrIndex.charset]);cff.charset=globalSubrIndex;cff.encoding=properties;return cff}function CFFParser(file,
properties){var v23466=file.getBytes();this.bytes=v23466;this.properties=properties}CFFParser.prototype={parse:CFFParser_parse,parseHeader:CFFParser_parseHeader,parseDict:CFFParser_parseDict,parseIndex:CFFParser_parseIndex,parseNameIndex:CFFParser_parseNameIndex,parseStringIndex:CFFParser_parseStringIndex,createDict:CFFParser_createDict,parseCharStrings:CFFParser_parseCharStrings,parsePrivateDict:CFFParser_parsePrivateDict,parseCharsets:CFFParser_parseCharsets,parseEncoding:CFFParser_parseEncoding,
parseFDSelect:CFFParser_parseFDSelect};return CFFParser}function CFFFontClosure(){function CFFFont_getCharStrings(charsets,encoding){function getCharStringsSort(a,b){return a.unicode-b.unicode}var charstrings=[],unicodeUsed=[],unassignedUnicodeItems=[],inverseEncoding=[];if(null!==encoding)for(var charcode in encoding){introspect(JAM.policy.p1)var v3549=encoding[charcode];JAM.set(inverseEncoding,v3549,charcode|0)}else inverseEncoding=charsets;charcode=0;for(var v3549=charsets.length,v3554=charcode<
v3549;v3554;){introspect(JAM.policy.p1)v3554=charsets[charcode];if(".notdef"!=v3554){introspect(JAM.policy.p1)var code=inverseEncoding[charcode];var v7478=!code;v7478||(v7478=isSpecialUnicode(code));v7478?JAM.call(unassignedUnicodeItems.push,unassignedUnicodeItems,[charcode]):(JAM.call(charstrings.push,charstrings,[{unicode:code,code:code,gid:charcode,glyph:v3554}]),JAM.set(unicodeUsed,code,!0))}charcode+=1;v3554=charcode<v3549}v3549=kCmapGlyphOffset;v3554=0;code=unassignedUnicodeItems.length;for(charcode=
v3554<code;charcode;){charcode=unassignedUnicodeItems[v3554];v7478=v3549 in unicodeUsed;for(;v7478;)v3549+=1,v7478=v3549 in unicodeUsed;v7478=v3549;v3549+=1;introspect(JAM.policy.p1)var v21624=inverseEncoding[charcode];v21624||(v21624=0);introspect(JAM.policy.p1)var v7480=charsets[charcode];JAM.call(charstrings.push,charstrings,[{unicode:v7478,code:v21624,gid:charcode,glyph:v7480}]);v3554+=1;charcode=v3554<code}charstrings.sort(getCharStringsSort);return charstrings}function CFFFont_readExtra(cff){var charset=
cff.charset.charset;cff=cff.encoding?cff.encoding.encoding:null;charset=JAM.call(this.getCharStrings,this,[charset,cff]);cff=[];for(var i=0,ii=charset.length,v3561=i<ii;v3561;){introspect(JAM.policy.p1)v3561=charset[i];JAM.call(cff.push,cff,[v3561.gid]);i+=1;v3561=i<ii}this.charstrings=charset;this.glyphIds=cff}function CFFFont(file,properties){this.properties=properties;var parser=JAM.new(CFFParser,[file,properties]),parser=parser.parse(),compiler=JAM.new(CFFCompiler,[parser]);JAM.call(this.readExtra,
this,[parser]);try{var v23467=compiler.compile();this.data=v23467}catch(e){warn("Failed to compile font "+properties.loadedName),this.data=file}}CFFFont.prototype={readExtra:CFFFont_readExtra,getCharStrings:CFFFont_getCharStrings};return CFFFont}function Type1Font_wrap(name,glyphs,charstrings,subrs,properties){function cffWrapPrivate(self){var data="\u008b\u0014\u008b\u0015",fieldMap={BlueValues:"\u0006",OtherBlues:"\u0007",FamilyBlues:"\b",FamilyOtherBlues:"\t",StemSnapH:"\f\f",StemSnapV:"\f\r",
BlueShift:"\f\n",BlueFuzz:"\f\x0B",BlueScale:"\f\t",LanguageGroup:"\f\u0011",ExpansionFactor:"\f\u0018"},field;for(field in fieldMap)if(properties.privateData.hasOwnProperty(field)){var v3564=properties.privateData;introspect(JAM.policy.p1)v3564=v3564[field];if(isArray(v3564))for(var data=data+JAM.call(self.encodeNumber,self,[v3564[0]]),i=1,ii=v3564.length,v3565=i<ii;v3565;){introspect(JAM.policy.p1)v3565=v3564[i];var v22986=i-1;introspect(JAM.policy.p1)v22986=v3564[v22986];data+=JAM.call(self.encodeNumber,
self,[v3565-v22986]);i+=1;v3565=i<ii}else data+=JAM.call(self.encodeNumber,self,[v3564]);introspect(JAM.policy.p1)v3564=fieldMap[field];data+=v3564}return data+=JAM.call(self.encodeNumber,self,[data.length+4])+"\u0013"}function charset(self){self="\x00";for(var count=glyphs.length,i=0,v3569=i<count;v3569;){introspect(JAM.policy.p1)v3569=charstrings[i];v3569=CFFStandardStrings.indexOf(v3569.glyph);-1==v3569&&(v3569=0);self+=String.fromCharCode(v3569>>8,v3569&255);i+=1;v3569=i<count}return self}function strings$$0(self){var strings=
["Version 0.11","See original notice",name,name,"Medium"];return JAM.call(self.createCFFIndexHeader,self,[strings])}function topDict(self){function cffWrapTopDict(){for(var header="\x00\u0001\u0001\u0001",dict="\u00f8\u001b\x00\u00f8\u001c\u0001\u00f8\u001d\u0002\u00f8\u001e\u0003\u00f8\u001f\u0004\u001c\x00\x00\u0010",boundingBox=properties.bbox,i=0,ii=boundingBox.length,v3571=i<ii;v3571;){introspect(JAM.policy.p1)v3571=boundingBox[i];dict+=JAM.call(self.encodeNumber,self,[v3571]);i+=1;v3571=i<ii}dict+=
"\u0005";boundingBox=fields.header.length+fields.names.length+(header.length+1)+(dict.length+8)+fields.strings.length+fields.globalSubrs.length;boundingBox=32767<boundingBox+fields.charstrings.length?boundingBox+9:boundingBox+7;dict+=JAM.call(self.encodeNumber,self,[boundingBox])+"\u000f";boundingBox=boundingBox+2*glyphs.length+1;dict+=JAM.call(self.encodeNumber,self,[boundingBox])+"\u0011";boundingBox+=fields.charstrings.length;dict+=JAM.call(self.encodeNumber,self,[fields.privateData.length]);dict+=
JAM.call(self.encodeNumber,self,[boundingBox])+"\u0012";return header+String.fromCharCode(dict.length+1)+dict}return cffWrapTopDict}var fields={header:"\u0001\x00\u0004\u0004",names:JAM.call(this.createCFFIndexHeader,this,[[name]]),topDict:topDict(this),strings:strings$$0(this),globalSubrs:JAM.call(this.createCFFIndexHeader,this,[[]]),charset:charset(this),charstrings:JAM.call(this.createCFFIndexHeader,this,[[[139,14]].concat(glyphs),!0]),privateData:cffWrapPrivate(this),localSubrs:JAM.call(this.createCFFIndexHeader,
this,[subrs,!0])};subrs=fields;var v23468=fields.topDict();subrs.topDict=v23468;subrs=[];for(var index in fields){introspect(JAM.policy.p1)v23468=fields[index];for(var i$$0=0,ii$$0=v23468.length,v3588=i$$0<ii$$0;v3588;)JAM.call(subrs.push,subrs,[v23468.charCodeAt(i$$0)]),i$$0+=1,v3588=i$$0<ii$$0}return subrs}function Type1Font_flattenCharstring(charstring,map){for(var i=0,v3602=i<charstring.length;v3602;){introspect(JAM.policy.p1)v3602=charstring[i];if(v3602.charAt){introspect(JAM.policy.p1)var cmd=
map[v3602];cmd||error$$1("Unknow command: "+v3602);isArray(cmd)?(v3602=i,i+=1,charstring.splice(v3602,1,cmd[0],cmd[1])):charstring[i]=cmd}else{if(32E3<v3602){cmd=i+1;introspect(JAM.policy.p1)cmd=charstring[cmd];v3602/=cmd;charstring.splice(i,3,28,v3602>>8,v3602&255)}else charstring.splice(i,1,28,v3602>>8,v3602&255);i+=2}i+=1;v3602=i<charstring.length}return charstring}function Type1Font_getType2Subrs(type1Subrs){for(var bias=0,count=type1Subrs.length,bias=1240>count?107:33900>count?1131:32768,type2Subrs=
[],i=0,v3606=i<bias;v3606;)JAM.call(type2Subrs.push,type2Subrs,[[11]]),i+=1,v3606=i<bias;i=0;for(bias=i<count;bias;){introspect(JAM.policy.p1)bias=type1Subrs[i];bias||(bias=[11]);JAM.call(type2Subrs.push,type2Subrs,[JAM.call(this.flattenCharstring,this,[bias,this.commandsMap])]);i+=1;bias=i<count}return type2Subrs}function Type1Font_getType2Charstrings(type1Charstrings){for(var type2Charstrings=[],count=type1Charstrings.length,i=0,v3612=i<count;v3612;){introspect(JAM.policy.p1)v3612=type1Charstrings[i];
v3612=v3612.charstring;JAM.call(type2Charstrings.push,type2Charstrings,[JAM.call(this.flattenCharstring,this,[v3612.slice(),this.commandsMap])]);i+=1;v3612=i<count}return type2Charstrings}function Type1Font_getOrderedCharStrings(glyphs,properties){function charstrings_sort(a,b){return a.unicode-b.unicode}var charstrings=[],i,length,glyphName,unusedUnicode=kCmapGlyphOffset;i=0;length=glyphs.length;for(glyphName=i<length;glyphName;){introspect(JAM.policy.p1)var item=glyphs[i];glyphName=item.glyph;var v3615;
if(glyphName in GlyphsUnicode)introspect(JAM.policy.p1)v3615=GlyphsUnicode[glyphName];else v3615=unusedUnicode,unusedUnicode+=1;JAM.call(charstrings.push,charstrings,[{glyph:glyphName,unicode:v3615,gid:i,charstring:item.data,width:item.width,lsb:item.lsb}]);i+=1;glyphName=i<length}charstrings.sort(charstrings_sort);return charstrings}function Type1Font_encodeNumber(value){value|=0;var v7528=-32768<=value;v7528&&(v7528=32767>=value);return v7528?"\u001c"+String.fromCharCode(value>>8&255)+String.fromCharCode(value&
255):"\u001d"+String.fromCharCode(value>>24&255)+String.fromCharCode(value>>16&255)+String.fromCharCode(value>>8&255)+String.fromCharCode(value&255)}function Type1Font_createCFFIndexHeader(objects,isByte){var count=objects.length;if(0==count)return"\x00\x00\x00";for(var data=String.fromCharCode(count>>8&255,count&255),data=data+"\u0004",relativeOffset=1,i=0,v3627=i<count+1;v3627;){data+=String.fromCharCode(relativeOffset>>>24&255,relativeOffset>>16&255,relativeOffset>>8&255,relativeOffset&255);introspect(JAM.policy.p1)v3627=
objects[i];if(v3627){introspect(JAM.policy.p1)v3627=objects[i];relativeOffset+=v3627.length}i+=1;v3627=i<count+1}i=0;for(relativeOffset=i<count;relativeOffset;){relativeOffset=0;introspect(JAM.policy.p1)v3627=objects[i];for(var v3627=v3627.length,v3629=relativeOffset<v3627;v3629;){if(isByte){introspect(JAM.policy.p1)v3629=objects[i];introspect(JAM.policy.p1)v3629=v3629[relativeOffset];v3629=String.fromCharCode(v3629&255)}else{introspect(JAM.policy.p1)v3629=objects[i];v3629=v3629[relativeOffset]}data+=
v3629;relativeOffset+=1;v3629=relativeOffset<v3627}i+=1;relativeOffset=i<count}return data}function FontClosure(){function Font_charsToGlyphs(chars){var charsCache=this.charsCache,glyphs;if(charsCache){introspect(JAM.policy.p1)glyphs=charsCache[chars];if(glyphs)return glyphs}charsCache||(charsCache=this.charsCache=charsCache=Object.create(null));glyphs=[];if(this.wideChars)for(var length=chars.length-1,i=0,v3635=i<length;v3635;){var v3635=i,i=i+1,v3635=int16([chars.charCodeAt(v3635),chars.charCodeAt(i)]),
glyph=JAM.call(this.charToGlyph,this,[v3635]);JAM.call(glyphs.push,glyphs,[glyph]);32==v3635&&JAM.call(glyphs.push,glyphs,[null]);i+=1;v3635=i<length}else for(i=0,length=chars.length,v3635=i<length;v3635;)v3635=chars.charCodeAt(i),glyph=JAM.call(this.charToGlyph,this,[v3635]),JAM.call(glyphs.push,glyphs,[glyph]),32==v3635&&JAM.call(glyphs.push,glyphs,[null]),i+=1,v3635=i<length;return JAM.set(charsCache,chars,glyphs)}function Font_charToGlyph(charcode){var fontCharCode,width,operatorList,disabled;
width=this.widths;introspect(JAM.policy.p1)width=width[charcode];switch(this.type){case "CIDFontType0":if(this.noUnicodeAdaptation){width=this.widths;fontCharCode=this.unicodeToCID;introspect(JAM.policy.p1)fontCharCode=fontCharCode[charcode];fontCharCode||(fontCharCode=charcode);introspect(JAM.policy.p1)width=width[fontCharCode];fontCharCode=mapPrivateUseChars(charcode);break}fontCharCode=this.toFontChar;introspect(JAM.policy.p1)fontCharCode=fontCharCode[charcode];fontCharCode||(fontCharCode=charcode);
break;case "CIDFontType2":if(this.noUnicodeAdaptation){width=this.widths;fontCharCode=this.unicodeToCID;introspect(JAM.policy.p1)fontCharCode=fontCharCode[charcode];fontCharCode||(fontCharCode=charcode);introspect(JAM.policy.p1)width=width[fontCharCode];fontCharCode=mapPrivateUseChars(charcode);break}fontCharCode=this.toFontChar;introspect(JAM.policy.p1)fontCharCode=fontCharCode[charcode];fontCharCode||(fontCharCode=charcode);break;case "Type1":fontCharCode=this.differences;introspect(JAM.policy.p1)fontCharCode=
fontCharCode[charcode];if(!fontCharCode){fontCharCode=this.encoding;introspect(JAM.policy.p1)fontCharCode=fontCharCode[charcode]}if(!isNum(width)){width=this.widths;introspect(JAM.policy.p1)width=width[fontCharCode]}if(this.noUnicodeAdaptation){introspect(JAM.policy.p1)fontCharCode=GlyphsUnicode[fontCharCode];fontCharCode||(fontCharCode=charcode);fontCharCode=mapPrivateUseChars(fontCharCode);break}disabled=this.glyphNameMap;introspect(JAM.policy.p1)disabled=disabled[fontCharCode];if(!disabled){introspect(JAM.policy.p1)fontCharCode=
GlyphsUnicode[fontCharCode];fontCharCode||(fontCharCode=charcode);disabled=fontCharCode}fontCharCode=disabled;break;case "Type3":operatorList=this.differences;introspect(JAM.policy.p1)operatorList=operatorList[charcode];if(!operatorList){operatorList=this.encoding;introspect(JAM.policy.p1)operatorList=operatorList[charcode]}fontCharCode=operatorList;operatorList=this.charProcOperatorList;introspect(JAM.policy.p1)operatorList=operatorList[fontCharCode];fontCharCode=charcode;break;case "TrueType":if(this.useToFontChar){fontCharCode=
this.toFontChar;introspect(JAM.policy.p1)fontCharCode=fontCharCode[charcode];fontCharCode||(fontCharCode=charcode);break}fontCharCode=this.differences;introspect(JAM.policy.p1)fontCharCode=fontCharCode[charcode];if(!fontCharCode){fontCharCode=this.encoding;introspect(JAM.policy.p1)fontCharCode=fontCharCode[charcode]}if(!fontCharCode){fontCharCode=Encodings.StandardEncoding;introspect(JAM.policy.p1)fontCharCode=fontCharCode[charcode]}if(!isNum(width)){width=this.widths;introspect(JAM.policy.p1)width=
width[fontCharCode]}if(this.noUnicodeAdaptation){introspect(JAM.policy.p1)fontCharCode=GlyphsUnicode[fontCharCode];fontCharCode||(fontCharCode=charcode);break}disabled=!this.hasEncoding;disabled||(disabled=this.isSymbolicFont);if(disabled){if(this.useToFontChar){fontCharCode=this.toFontChar;introspect(JAM.policy.p1)fontCharCode=fontCharCode[charcode]}else fontCharCode=charcode;break}if(fontCharCode in this.glyphNameMap){disabled=this.glyphNameMap;introspect(JAM.policy.p1)fontCharCode=disabled[fontCharCode]}else introspect(JAM.policy.p1)fontCharCode=
GlyphsUnicode[fontCharCode];break;default:warn("Unsupported font type: "+this.type)}if("toUnicode"in this){disabled=this.toUnicode;introspect(JAM.policy.p1)disabled=disabled[charcode];disabled||(disabled=charcode);charcode=disabled}"number"===typeof charcode&&(charcode=String.fromCharCode(charcode));width=isNum(width)?width:this.defaultWidth;width*=this.widthMultiplier;if(this.unicodeIsEnabled){disabled=this.unicodeIsEnabled;introspect(JAM.policy.p1)disabled=disabled[fontCharCode];disabled=!disabled}else disabled=
!1;return{fontChar:String.fromCharCode(fontCharCode),unicode:charcode,width:width,disabled:disabled,operatorList:operatorList}}function Font_bindDOM(data){var fontName=this.loadedName;data="url(data:"+this.mimetype+";base64,"+PdfJS_window.window.btoa(data)+");";var fontName="@font-face { font-family:'"+fontName+"';src:"+data+"}",v3678=PdfJS_window.document,v3678=JAM.call(v3678.createElement,v3678,["style"]),v21672=PdfJS_window.document.documentElement,v21672=JAM.call(v21672.getElementsByTagName,v21672,
["head"])[0];JAM.call(v21672.appendChild,v21672,[v3678]);v3678=v3678.sheet;JAM.call(v3678.insertRule,v3678,[fontName,v3678.cssRules.length]);if(v3678=PDFJS.pdfBug)v3678=FontInspector.enabled;v3678&&JAM.call(FontInspector.fontAdded,FontInspector,[this,data]);return fontName}function Font_loadCidToUnicode(properties){if(properties.cidSystemInfo){var cidToUnicodeMap=[],unicodeToCIDMap=[];this.cidToUnicode=cidToUnicodeMap;this.unicodeToCID=unicodeToCIDMap;properties=properties.cidSystemInfo;var cidToUnicode;
if(properties){cidToUnicode=properties.registry+"-"+properties.ordering;introspect(JAM.policy.p1)cidToUnicode=CIDToUnicodeMaps[cidToUnicode]}if(cidToUnicode){properties=1;var i,j,k,ii;i=0;ii=cidToUnicode.length;for(j=i<ii;j;){introspect(JAM.policy.p1)k=cidToUnicode[i];if(isArray(k)){var length=k.length;j=0;for(var v3686=j<length;v3686;){JAM.set(cidToUnicodeMap,properties,JAM.get(k,j,JAM.policy.p1));introspect(JAM.policy.p1)v3686=k[j];JAM.set(unicodeToCIDMap,v3686,properties);j+=1;v3686=j<length}properties+=
1}else if("object"===typeof k)if(length=k.f)for(k=k.c,j=0,v3686=j<length;v3686;)JAM.set(cidToUnicodeMap,properties,k),JAM.set(unicodeToCIDMap,k,properties),properties+=1,k+=1,j+=1,v3686=j<length;else properties+=k.s;else k&&(JAM.set(cidToUnicodeMap,properties,k),JAM.set(unicodeToCIDMap,k,properties)),properties+=1;i+=1;j=i<ii}}}}function Font_rebuildToUnicode(properties){var firstChar=properties.firstChar,lastChar=properties.lastChar,map=[];if(properties.composite){properties=0==this.cidToUnicode.length;
for(var v3693=firstChar<=lastChar;v3693;){v3693=firstChar;if(!properties){var v7592=this.cidToUnicode;introspect(JAM.policy.p1)v3693=v7592[v3693]}JAM.set(map,firstChar,v3693);firstChar+=1;v3693=firstChar<=lastChar}}else for(v3693=firstChar<=lastChar;v3693;){v3693=properties.differences;introspect(JAM.policy.p1)v3693=v3693[firstChar];if(!v3693){v3693=properties.baseEncoding;introspect(JAM.policy.p1)v3693=v3693[firstChar]}(v7592=!!v3693)&&(v7592=v3693 in GlyphsUnicode);v7592&&JAM.set(map,firstChar,
JAM.get(GlyphsUnicode,v3693,JAM.policy.p1));firstChar+=1;v3693=firstChar<=lastChar}this.toUnicode=map}function Font_buildToFontChar(toUnicode){for(var result=[],unusedUnicode=kCmapGlyphOffset,i=0,ii=toUnicode.length,v3702=i<ii;v3702;){introspect(JAM.policy.p1)v3702=toUnicode[i];var v3700;"object"===typeof v3702?(v3700=unusedUnicode,unusedUnicode+=1):v3700=v3702;"undefined"!==typeof v3702&&(result[i]=v3700);i+=1;v3702=i<ii}return result}function Font_convert(fontName,font,properties){function fontFieldsHmtx(){for(var hmtx=
"\x00\x00\x00\x00",i=0,ii=charstrings.length,v3704=i<ii;v3704;){introspect(JAM.policy.p1)v3704=charstrings[i];v3704="width"in v3704?v3704.width:0;hmtx+=string16(v3704)+string16(0);i+=1;v3704=i<ii}return stringToArray(hmtx)}function isFixedPitch(glyphs){for(var i=0,ii=glyphs.length-1,v3707=i<ii;v3707;){introspect(JAM.policy.p1)v3707=glyphs[i];var v21678=i+1;introspect(JAM.policy.p1)v21678=glyphs[v21678];if(v3707!=v21678)return!1;i+=1;v3707=i<ii}return!0}var otf={file:"",virtualOffset:144};createOpenTypeHeader("OTTO",
otf,9);var charstrings=font.charstrings,v3709=properties,v23470=isFixedPitch(charstrings);v3709.fixedPitch=v23470;for(var glyphNameMap={},v3709=0,v23470=v3709<charstrings.length;v23470;){introspect(JAM.policy.p1)v23470=charstrings[v3709];JAM.set(glyphNameMap,v23470.glyph,v23470.unicode);v3709+=1;v23470=v3709<charstrings.length}this.glyphNameMap=glyphNameMap;if(v3709=!properties.hasEncoding)(v3709="Type1C"==properties.subtype)||(v3709="CIDFontType0C"==properties.subtype);if(v3709){glyphNameMap=[];
v3709=0;for(v23470=v3709<charstrings.length;v23470;)v23470=charstrings[v3709],JAM.set(glyphNameMap,v23470.code,v23470.glyph),v3709+=1,v23470=v3709<charstrings.length;properties.baseEncoding=glyphNameMap}if("CIDFontType0C"==properties.subtype){glyphNameMap=[];v3709=0;for(v23470=v3709<charstrings.length;v23470;)v23470=charstrings[v3709],JAM.set(glyphNameMap,v23470.code,v23470.unicode),v3709+=1,v23470=v3709<charstrings.length;this.toFontChar=glyphNameMap}v3709=font.data;v23470=stringToArray(createOS2Table(properties,
charstrings));glyphNameMap=charstrings.slice();font="glyphIds"in font?font.glyphIds:null;font=createCMapTable(glyphNameMap,font);var glyphNameMap="\x00\u0001\x00\x00\x00\x00\u0010\x00\x00\x00\x00\x00_\u000f<\u00f5\x00\x00\u0003\u00e8\x00\x00\x00\x00\u009e\x0B~'\x00\x00\x00\x00\u009e\x0B~'\x00\x00"+safeString16(properties.descent)+"\u000f\u00ff"+safeString16(properties.ascent),v23248;v23248=properties.italicAngle?2:0;fontName={"CFF ":v3709,"OS/2":v23470,cmap:font,head:stringToArray(glyphNameMap+string16(v23248)+
"\x00\u0011\x00\x00\x00\x00\x00\x00"),hhea:stringToArray("\x00\u0001\x00\x00"+safeString16(properties.ascent)+safeString16(properties.descent)+"\x00\x00\u00ff\u00ff\x00\x00\x00\x00\x00\x00"+safeString16(properties.capHeight)+safeString16(Math.tan(properties.italicAngle)*properties.xHeight)+"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"+string16(charstrings.length+1)),hmtx:fontFieldsHmtx(),maxp:stringToArray("\x00\x00P\x00"+string16(charstrings.length+1)),name:stringToArray(createNameTable(fontName)),
post:stringToArray(createPostTable(properties))};for(var field in fontName){introspect(JAM.policy.p1)properties=fontName[field];createTableEntry(otf,field,properties)}for(field in fontName){introspect(JAM.policy.p1)properties=fontName[field];font=otf;font.file+=arrayToString(properties)}return stringToArray(otf.file)}function Font_checkAndRepair(name,font$$0,properties$$0){function tables_sort(a,b){return(a.tag>b.tag)-(a.tag<b.tag)}function readTableEntry(file){var tag=JAM.call(file.getBytes,file,
[4]),tag=String.fromCharCode(tag[0])+String.fromCharCode(tag[1])+String.fromCharCode(tag[2])+String.fromCharCode(tag[3]),checksum=int32(JAM.call(file.getBytes,file,[4])),offset=int32(JAM.call(file.getBytes,file,[4])),length=int32(JAM.call(file.getBytes,file,[4])),previousPosition=file.pos,v3737;v3737=file.start?file.start:0;file.pos=v3737;JAM.call(file.skip,file,[offset]);v3737=JAM.call(file.getBytes,file,[length]);file.pos=previousPosition;"head"==tag&&(v3737[8]=v3737[9]=v3737[10]=v3737[11]=0,v3737[17]|=
32);return{tag:tag,checksum:checksum,length:length,offset:offset,data:v3737}}function createGlyphNameMap(glyphs,ids,properties){var glyphNames=properties.glyphNames;if(glyphNames){for(var glyphsLength=glyphs.length,glyphNameMap={},encoding=[],i=0,v3744=i<glyphsLength;v3744;){introspect(JAM.policy.p1)v3744=ids[i];introspect(JAM.policy.p1)v3744=glyphNames[v3744];if(v3744){introspect(JAM.policy.p1)var v3742=glyphs[i];v3742=v3742.unicode;JAM.set(glyphNameMap,v3744,v3742);introspect(JAM.policy.p1)v3742=
glyphs[i];v3742=v3742.code;JAM.set(encoding,v3742,v3744)}i+=1;v3744=i<glyphsLength}properties.glyphNameMap=glyphNameMap;properties.hasEncoding||(properties.baseEncoding=encoding)}else properties.glyphNameMap={}}function readCMapTable(cmap,font){function fontReadCMapTableSort(a,b){return(a.platformID<<16)+a.encodingID-((b.platformID<<16)+b.encodingID)}var v7632;v7632=font.start?font.start:0;v7632+=cmap.offset;font.pos=v7632;for(var version=int16(JAM.call(font.getBytes,font,[2])),numRecords=int16(JAM.call(font.getBytes,
font,[2])),records=[],i=0,v3753=i<numRecords;v3753;)JAM.call(records.push,records,[{platformID:int16(JAM.call(font.getBytes,font,[2])),encodingID:int16(JAM.call(font.getBytes,font,[2])),offset:int32(JAM.call(font.getBytes,font,[4]))}]),i+=1,v3753=i<numRecords;records.sort(fontReadCMapTableSort);for(var v3753=[records[0]],i=1,v3757=i<numRecords;v3757;){introspect(JAM.policy.p1)v3757=records[i];var v3755=i-1;introspect(JAM.policy.p1)v3755=records[v3755];(v3757.platformID<<16)+v3757.encodingID<=(v3755.platformID<<
16)+v3755.encodingID||JAM.call(v3753.push,v3753,[v3757]);i+=1;v3757=i<numRecords}if(i=numRecords-v3753.length){numRecords=v3753.length;version=string16(version)+string16(numRecords);i=0;for(records=i<numRecords;records;){introspect(JAM.policy.p1)records=v3753[i];version+=string16(records.platformID)+string16(records.encodingID)+string32(records.offset);i+=1;records=i<numRecords}i=0;records=version.length;for(v3757=i<records;v3757;){var v3757=cmap.data,v3755=i,v23471=version.charCodeAt(i);v3757[v3755]=
v23471;i+=1;v3757=i<records}}i=0;for(version=i<numRecords;version;){records=v3753[i];font.pos=v7632+records.offset;version=int16(JAM.call(font.getBytes,font,[2]));int16(JAM.call(font.getBytes,font,[2]));int16(JAM.call(font.getBytes,font,[2]));if(0==version){version=[];records=[];v3757=0;for(v7632=256>v3757;v7632;){if(v7632=font.getByte())JAM.call(version.push,version,[{unicode:v3757,code:v3757}]),JAM.call(records.push,records,[v7632]);v3757+=1;v7632=256>v3757}return{glyphs:version,ids:records,hasShortCmap:!0}}if(4==
version){numRecords=int16(JAM.call(font.getBytes,font,[2]))>>1;JAM.call(font.getBytes,font,[6]);i=[];v3753=0;for(v7632=v3753<numRecords;v7632;)JAM.call(i.push,i,[{end:int16(JAM.call(font.getBytes,font,[2]))}]),v3753+=1,v7632=v3753<numRecords;JAM.call(font.getBytes,font,[2]);v3753=0;for(v7632=v3753<numRecords;v7632;){introspect(JAM.policy.p1)v7632=i[v3753];version=int16(JAM.call(font.getBytes,font,[2]));v7632.start=version;v3753+=1;v7632=v3753<numRecords}v3753=0;for(v7632=v3753<numRecords;v7632;){introspect(JAM.policy.p1)v7632=
i[v3753];version=int16(JAM.call(font.getBytes,font,[2]));v7632.delta=version;v3753+=1;v7632=v3753<numRecords}v3753=v7632=0;for(version=v3753<numRecords;version;){introspect(JAM.policy.p1)v3757=i[v3753];(version=int16(JAM.call(font.getBytes,font,[2])))?(v23471=(version>>1)-(numRecords-v3753),v3757.offsetIndex=v23471,v7632=Math.max(v7632,v23471+v3757.end-v3757.start+1)):v3757.offsetIndex=-1;v3753+=1;version=v3753<numRecords}v3755=[];v3757=0;for(v3753=v3757<v7632;v3753;)JAM.call(v3755.push,v3755,[int16(JAM.call(font.getBytes,
font,[2]))]),v3757+=1,v3753=v3757<v7632;version=[];records=[];v3753=0;for(v7632=v3753<numRecords;v7632;){introspect(JAM.policy.p1)v3757=i[v3753];v7632=v3757.start;for(var end=v3757.end,delta=v3757.delta,v23471=v3757.offsetIndex,v3757=v7632,v3791=v3757<=end;v3791;)65535!=v3757&&(v3791=0>v23471?v3757:v3755[v23471+v3757-v7632],v3791=v3791+delta&65535,0!=v3791&&(JAM.call(version.push,version,[{unicode:v3757,code:v3757}]),JAM.call(records.push,records,[v3791]))),v3757+=1,v3791=v3757<=end;v3753+=1;v7632=
v3753<numRecords}return{glyphs:version,ids:records}}if(6==version){v7632=int16(JAM.call(font.getBytes,font,[2]));numRecords=int16(JAM.call(font.getBytes,font,[2]));version=[];records=[];v3757=0;for(i=v3757<numRecords;i;)v3791=int16(JAM.call(font.getBytes,font,[2])),i=v7632+v3757,JAM.call(version.push,version,[{unicode:i,code:i}]),JAM.call(records.push,records,[v3791]),v3757+=1,i=v3757<numRecords;return{glyphs:version,ids:records}}i+=1;version=i<numRecords}error$$1("Unsupported cmap table format")}
function sanitizeMetrics(font,header,metrics,numGlyphs){var v7648=!header;v7648&&(v7648=!metrics);if(!v7648)if((v7648=!header)&&(v7648=metrics),v7648)metrics.data=null;else if(v7648=font.start?font.start:0,font.pos=v7648+header.offset,font.pos+=header.length-2,header=int16(JAM.call(font.getBytes,font,[2])),numGlyphs-=header,numGlyphs-=hmtx.length-4*header>>1,0<numGlyphs){header=font.start?font.start:0;font.pos=header+metrics.offset;header="";for(var v7648=0,ii=hmtx.length,v3810=v7648<ii;v3810;)header+=
String.fromCharCode(font.getByte()),v7648+=1,v3810=v7648<ii;v7648=0;for(font=v7648<numGlyphs;font;)header+="\x00\x00",v7648+=1,font=v7648<numGlyphs;font=stringToArray(header);metrics.data=font}}function sanitizeGlyph(source,sourceStart,sourceEnd,dest,destStart){if(12>=sourceEnd-sourceStart)return 0;source=source.subarray(sourceStart,sourceEnd);var contoursCount=source[0]<<8|source[1];if(contoursCount&32768)return JAM.call(dest.set,dest,[source,destStart]),source.length;sourceStart=10;for(var i=sourceEnd=
0,v3820=i<contoursCount;v3820;){introspect(JAM.policy.p1)sourceEnd=source[sourceStart];sourceEnd<<=8;v3820=sourceStart+1;introspect(JAM.policy.p1)v3820=source[v3820];sourceEnd|=v3820;sourceEnd+=1;sourceStart+=2;i+=1;v3820=i<contoursCount}introspect(JAM.policy.p1)i=source[sourceStart];i<<=8;contoursCount=sourceStart+1;introspect(JAM.policy.p1)contoursCount=source[contoursCount];i|=contoursCount;sourceStart+=2+i;i=contoursCount=0;for(v3820=i<sourceEnd;v3820;){v3820=sourceStart;sourceStart+=1;introspect(JAM.policy.p1)v3820=
source[v3820];if(v3820&192)return 0;var v7664;v7664=v3820&2?1:v3820&16?0:2;var v7665;v7665=v3820&4?1:v3820&32?0:2;v7664+=v7665;contoursCount+=v7664;if(v3820&8){v3820=sourceStart;sourceStart+=1;introspect(JAM.policy.p1)v3820=source[v3820];i+=v3820;contoursCount+=v3820*v7664}i+=1;v3820=i<sourceEnd}sourceStart+=contoursCount;if(sourceStart>source.length)return 0;if(3<source.length-sourceStart)return sourceStart=sourceStart+3&-4,JAM.call(dest.set,dest,[source.subarray(0,sourceStart),destStart]),sourceStart;
JAM.call(dest.set,dest,[source,destStart]);return source.length}function sanitizeGlyphLocations(loca,glyf,numGlyphs,isGlyphLocationsLong){function fontItemEncode(data,offset,value){JAM.set(data,offset,value>>9&255);JAM.set(data,offset+1,value>>1&255)}function fontItemDecode(data,offset){introspect(JAM.policy.p1)var v7670=data[offset];var v7670=v7670<<9,v21718=offset+1;introspect(JAM.policy.p1)v21718=data[v21718];return v7670|v21718<<1}function fontItemEncodeLong(data,offset,value){JAM.set(data,offset,
value>>>24&255);JAM.set(data,offset+1,value>>16&255);JAM.set(data,offset+2,value>>8&255);JAM.set(data,offset+3,value&255)}function fontItemDecodeLong(data,offset){introspect(JAM.policy.p1)var v22637=data[offset];var v22637=v22637<<24,v23000=offset+1;introspect(JAM.policy.p1)v23000=data[v23000];v22637|=v23000<<16;v23000=offset+2;introspect(JAM.policy.p1)v23000=data[v23000];v22637|=v23000<<8;v23000=offset+3;introspect(JAM.policy.p1)v23000=data[v23000];return v22637|v23000}var itemDecode,itemEncode;
isGlyphLocationsLong?(isGlyphLocationsLong=4,itemDecode=fontItemDecodeLong,itemEncode=fontItemEncodeLong):(isGlyphLocationsLong=2,itemDecode=fontItemDecode,itemEncode=fontItemEncode);loca=loca.data;var oldGlyfData=glyf.data,oldGlyfDataLength=oldGlyfData.length,newGlyfData=new Uint8Array(oldGlyfDataLength),startOffset=JAM.call(itemDecode,null,[loca,0]),writeOffset=0;JAM.call(itemEncode,null,[loca,0,writeOffset]);for(var i=0,j=isGlyphLocationsLong,v3846=i<numGlyphs;v3846;)v3846=JAM.call(itemDecode,
null,[loca,j]),v3846>oldGlyfDataLength||(startOffset=sanitizeGlyph(oldGlyfData,startOffset,v3846,newGlyfData,writeOffset),writeOffset+=startOffset),JAM.call(itemEncode,null,[loca,j,writeOffset]),startOffset=v3846,i+=1,j+=isGlyphLocationsLong,v3846=i<numGlyphs;if(0==writeOffset){itemDecode=new Uint8Array([0,1,0,0,0,0,0,0,0,0,0,0,0,0,49,0]);i=0;j=isGlyphLocationsLong;for(newGlyfData=i<numGlyphs;newGlyfData;)JAM.call(itemEncode,null,[loca,j,itemDecode.length]),i+=1,j+=isGlyphLocationsLong,newGlyfData=
i<numGlyphs;glyf.data=itemDecode}else numGlyphs=newGlyfData.subarray(0,writeOffset),glyf.data=numGlyphs}function findEmptyGlyphs(locaTable,isGlyphLocationsLong,emptyGlyphIds){function fontItemDecode(data,offset){introspect(JAM.policy.p1)var v7677=data[offset];var v7677=v7677<<9,v21722=offset+1;introspect(JAM.policy.p1)v21722=data[v21722];return v7677|v21722<<1}function fontItemDecodeLong(data,offset){introspect(JAM.policy.p1)var v22640=data[offset];var v22640=v22640<<24,v23001=offset+1;introspect(JAM.policy.p1)v23001=
data[v23001];v22640|=v23001<<16;v23001=offset+2;introspect(JAM.policy.p1)v23001=data[v23001];v22640|=v23001<<8;v23001=offset+3;introspect(JAM.policy.p1)v23001=data[v23001];return v22640|v23001}var itemDecode;isGlyphLocationsLong?(isGlyphLocationsLong=4,itemDecode=fontItemDecodeLong):(isGlyphLocationsLong=2,itemDecode=fontItemDecode);locaTable=locaTable.data;for(var length=locaTable.length,lastOffset=JAM.call(itemDecode,null,[locaTable,0]),i=isGlyphLocationsLong,j=0,v3857=i<length;v3857;)v3857=JAM.call(itemDecode,
null,[locaTable,i]),v3857==lastOffset&&(emptyGlyphIds[j]=!0),lastOffset=v3857,i+=isGlyphLocationsLong,j+=1,v3857=i<length}function readGlyphNameMap(post,properties){var v7682;v7682=font$$0.start?font$$0.start:0;v7682+=post.offset;font$$0.pos=v7682;var length=post.length,end=v7682+length;v7682=int32(JAM.call(font$$0.getBytes,font$$0,[4]));JAM.call(font$$0.getBytes,font$$0,[28]);var glyphNames;switch(v7682){case 65536:glyphNames=MacStandardGlyphOrdering;break;case 131072:v7682=int16(JAM.call(font$$0.getBytes,
font$$0,[2]));var length=[],i=0;for(glyphNames=i<v7682;glyphNames;)JAM.call(length.push,length,[int16(JAM.call(font$$0.getBytes,font$$0,[2]))]),i+=1,glyphNames=i<v7682;var customNames=[];for(glyphNames=font$$0.pos<end;glyphNames;){glyphNames=font$$0.getByte();for(var string="",i=0,v3864=i<glyphNames;v3864;)string+=font$$0.getChar(),i+=1,v3864=i<glyphNames;JAM.call(customNames.push,customNames,[string]);glyphNames=font$$0.pos<end}glyphNames=[];i=0;for(end=i<v7682;end;){introspect(JAM.policy.p1)end=
length[i];if(258>end)introspect(JAM.policy.p1)end=MacStandardGlyphOrdering[end];else{end-=258;introspect(JAM.policy.p1)end=customNames[end]}JAM.call(glyphNames.push,glyphNames,[end]);i+=1;end=i<v7682}break;case 196608:break;default:warn("Unknown/unsupported post table version "+v7682)}properties.glyphNames=glyphNames}function isOS2Valid(os2Table){os2Table=os2Table.data;os2Table=os2Table[74]<<8|os2Table[75];return 0==os2Table?!1:!0}var requiredTables="OS/2 cmap head hhea hmtx maxp name post".split(" "),
JSCompiler_object_inline_version_275=arrayToString(JAM.call(font$$0.getBytes,font$$0,[4])),JSCompiler_object_inline_numTables_276=int16(JAM.call(font$$0.getBytes,font$$0,[2]));int16(JAM.call(font$$0.getBytes,font$$0,[2]));int16(JAM.call(font$$0.getBytes,font$$0,[2]));int16(JAM.call(font$$0.getBytes,font$$0,[2]));for(var numTables=JSCompiler_object_inline_numTables_276,cmap$$0,post,maxp,hhea,hmtx,vhea,vmtx,head,loca,glyf,os2,tables=[],i$$0=0,v3892=i$$0<numTables;v3892;){var table=readTableEntry(font$$0),
index=requiredTables.indexOf(table.tag);-1!=index?("cmap"==table.tag?cmap$$0=table:"post"==table.tag?post=table:"maxp"==table.tag?maxp=table:"hhea"==table.tag?hhea=table:"hmtx"==table.tag?hmtx=table:"head"==table.tag?head=table:"OS/2"==table.tag&&(os2=table),requiredTables.splice(index,1)):"vmtx"==table.tag?vmtx=table:"vhea"==table.tag?vhea=table:"loca"==table.tag?loca=table:"glyf"==table.tag&&(glyf=table);JAM.call(tables.push,tables,[table]);i$$0+=1;v3892=i$$0<numTables}var numTables=tables.length+
requiredTables.length,ttf={file:"",virtualOffset:16*numTables};createOpenTypeHeader(JSCompiler_object_inline_version_275,ttf,numTables);var v7702=os2;v7702&&(v7702=!isOS2Valid(os2));v7702&&(tables.splice(tables.indexOf(os2),1),os2=null);var v7703=font$$0.start;v7703||(v7703=0);font$$0.pos=v7703+maxp.offset;int16(JAM.call(font$$0.getBytes,font$$0,[4]));var numGlyphs=int16(JAM.call(font$$0.getBytes,font$$0,[2]));sanitizeMetrics(font$$0,hhea,hmtx,numGlyphs);sanitizeMetrics(font$$0,vhea,vmtx,numGlyphs);
var isGlyphLocationsLong=int16([head.data[50],head.data[51]]),v7706=head;v7706&&(v7706=loca&&glyf);v7706&&sanitizeGlyphLocations(loca,glyf,numGlyphs,isGlyphLocationsLong);var emptyGlyphIds=[];glyf&&findEmptyGlyphs(loca,isGlyphLocationsLong,emptyGlyphIds);var v7707=0==hhea.data[10];v7707&&(v7707=0==hhea.data[11]);v7707&&(hhea.data[10]=255,hhea.data[11]=255);post&&readGlyphNameMap(post,properties$$0);var glyphs$$0,ids;if("CIDFontType2"==properties$$0.type){cmap$$0||(cmap$$0={tag:"cmap",data:null},JAM.call(tables.push,
tables,[cmap$$0]));var v3908=properties$$0.cidToGidMap;v3908||(v3908=[]);var cidToGidMap=v3908,gidToCidMap=[0];if(0<cidToGidMap.length){for(var j$$0=cidToGidMap.length-1,v3910=0<=j$$0;v3910;){introspect(JAM.policy.p1)var gid=cidToGidMap[j$$0];gid&&JAM.set(gidToCidMap,gid,j$$0);j$$0-=1;v3910=0<=j$$0}for(var nextCid=cidToGidMap.length,i$$0=1,v3912=i$$0<numGlyphs;v3912;){introspect(JAM.policy.p1)var v7711=gidToCidMap[i$$0];v7711||(JAM.set(gidToCidMap,i$$0,nextCid),nextCid+=1);i$$0+=1;v3912=i$$0<numGlyphs}}glyphs$$0=
[];ids=[];for(var usedUnicodes=[],unassignedUnicodeItems=[],i$$0=1,v3918=i$$0<numGlyphs;v3918;){introspect(JAM.policy.p1)var v3914=gidToCidMap[i$$0];v3914||(v3914=i$$0);var cid=v3914,v3915=this.toFontChar;introspect(JAM.policy.p1)var unicode=v3915[cid];var v7713=!unicode;if(!v7713){var v21733="number"!==typeof unicode;if(!v21733){var v22646=isSpecialUnicode(unicode);v22646||(v22646=unicode in usedUnicodes);v21733=v22646}v7713=v21733}v7713?JAM.call(unassignedUnicodeItems.push,unassignedUnicodeItems,
[i$$0]):(JAM.set(usedUnicodes,unicode,!0),JAM.call(glyphs$$0.push,glyphs$$0,[{unicode:unicode,code:cid}]),JAM.call(ids.push,ids,[i$$0]));i$$0+=1;v3918=i$$0<numGlyphs}for(var unusedUnicode=kCmapGlyphOffset,j$$0=0,jj=unassignedUnicodeItems.length,v3924=j$$0<jj;v3924;){i$$0=unassignedUnicodeItems[j$$0];introspect(JAM.policy.p1)var v3919=gidToCidMap[i$$0];v3919||(v3919=i$$0);var cid=v3919,v3920=unusedUnicode in usedUnicodes;for(;v3920;)unusedUnicode+=1,v3920=unusedUnicode in usedUnicodes;if(unusedUnicode>=
kCmapGlyphOffset+kSizeOfGlyphArea)break;unicode=unusedUnicode;unusedUnicode+=1;JAM.set(this.toFontChar,cid,unicode);JAM.set(usedUnicodes,unicode,!0);JAM.call(glyphs$$0.push,glyphs$$0,[{unicode:unicode,code:cid}]);JAM.call(ids.push,ids,[i$$0]);j$$0+=1;v3924=j$$0<jj}}else{var cmapTable=readCMapTable(cmap$$0,font$$0);glyphs$$0=cmapTable.glyphs;ids=cmapTable.ids;var hasShortCmap=!!cmapTable.hasShortCmap,toFontChar=this.toFontChar,v7717=hasShortCmap;v7717&&(v7717=ids.length==numGlyphs);if(v7717)for(var i$$0=
0,ii$$0=ids.length,v3926=i$$0<ii$$0;v3926;)JAM.set(ids,i$$0,i$$0),i$$0+=1,v3926=i$$0<ii$$0;var unusedUnicode=kCmapGlyphOffset,v3928=properties$$0.glyphNames;v3928||(v3928=[]);var glyphNames=v3928,encoding$$0=properties$$0.baseEncoding,differences=properties$$0.differences,v7719=toFontChar;v7719&&(v7719=0<toFontChar.length);if(v7719){for(var isIdentity=!0,i$$0=0,ii$$0=glyphs$$0.length,v3930=i$$0<ii$$0;v3930;){introspect(JAM.policy.p1)var v21737=glyphs$$0[i$$0];if(v21737.unicode!=i$$0+1){isIdentity=
!1;break}i$$0+=1;v3930=i$$0<ii$$0}var v7722=isIdentity;v7722&&(v7722=!this.isSymbolicFont);if(v7722){for(var usedUnicodes=[],unassignedUnicodeItems=[],i$$0=0,ii$$0=glyphs$$0.length,v3934=i$$0<ii$$0;v3934;){var unicode=toFontChar[i$$0+1],v7723=!unicode;if(!v7723){var v21739="number"!==typeof unicode;v21739||(v21739=unicode in usedUnicodes);v7723=v21739}if(v7723)JAM.call(unassignedUnicodeItems.push,unassignedUnicodeItems,[i$$0]);else{introspect(JAM.policy.p1)var v3933=glyphs$$0[i$$0];v3933.unicode=
unicode;JAM.set(usedUnicodes,unicode,!0)}i$$0+=1;v3934=i$$0<ii$$0}for(var j$$0=0,jj=unassignedUnicodeItems.length,v3938=j$$0<jj;v3938;){var i$$0=unassignedUnicodeItems[j$$0],v3935=unusedUnicode in usedUnicodes;for(;v3935;)unusedUnicode+=1,v3935=unusedUnicode in usedUnicodes;cid=i$$0+1;cid in toFontChar||JAM.set(toFontChar,cid,unusedUnicode);introspect(JAM.policy.p1)var v3937=glyphs$$0[i$$0];v3937.unicode=unusedUnicode;unusedUnicode+=1;j$$0+=1;v3938=j$$0<jj}this.useToFontChar=!0}}for(var glyphsRemoved=
0,i$$0=ids.length-1,v3943=0<=i$$0;v3943;){introspect(JAM.policy.p1)var v21741=ids[i$$0];var v7725=v21741<numGlyphs;if(v7725){introspect(JAM.policy.p1)var v23003=ids[i$$0];introspect(JAM.policy.p1)var v22650=emptyGlyphIds[v23003];var v21742=!v22650;v21742||(v21742=this.isSymbolicFont);v7725=v21742}v7725||(ids.splice(i$$0,1),glyphs$$0.splice(i$$0,1),glyphsRemoved+=1);i$$0-=1;v3943=0<=i$$0}if(this.isSymbolicFont){for(var minUnicode=65535,maxUnicode=0,i$$0=0,ii$$0=glyphs$$0.length,v3945=i$$0<ii$$0;v3945;){introspect(JAM.policy.p1)var v3944=
glyphs$$0[i$$0];unicode=v3944.unicode;minUnicode=Math.min(minUnicode,unicode);maxUnicode=Math.max(maxUnicode,unicode);i$$0+=1;v3945=i$$0<ii$$0}(maxUnicode&65280)!=(minUnicode&65280)&&(this.isSymbolicFont=!1)}2<glyphsRemoved&&(warn("Switching TrueType encoding to MacRomanEncoding for "+this.name+" font"),encoding$$0=Encodings.MacRomanEncoding);var v7729=hasShortCmap;if(v7729){var v21744=this.hasEncoding;v21744&&(v21744=!this.isSymbolicFont);v7729=v21744}if(v7729){for(var usedUnicodes=[],i$$0=0,ii$$0=
glyphs$$0.length,v3957=i$$0<ii$$0;v3957;){introspect(JAM.policy.p1)var v3950=glyphs$$0[i$$0];var code=v3950.unicode;introspect(JAM.policy.p1)gid=ids[i$$0];introspect(JAM.policy.p1)var v3951=glyphs$$0[i$$0];v3951.unicode+=kCmapGlyphOffset;introspect(JAM.policy.p1)var v3952=glyphs$$0[i$$0];JAM.set(toFontChar,code,v3952.unicode);introspect(JAM.policy.p1)var v3953=glyphNames[gid];if(!v3953)introspect(JAM.policy.p1)v3953=encoding$$0[code];var glyphName=v3953;if(glyphName in GlyphsUnicode){introspect(JAM.policy.p1)unicode=
GlyphsUnicode[glyphName];if(unicode in usedUnicodes){i$$0+=1;v3957=i$$0<ii$$0;continue}JAM.set(usedUnicodes,unicode,!0);introspect(JAM.policy.p1)var v21746=glyphs$$0[i$$0];JAM.call(glyphs$$0.push,glyphs$$0,[{unicode:unicode,code:v21746.code}]);JAM.call(ids.push,ids,[gid]);JAM.set(toFontChar,code,unicode)}i$$0+=1;v3957=i$$0<ii$$0}this.useToFontChar=!0}else{var v7732=!this.isSymbolicFont;if(v7732){var v21748=this.hasEncoding;if(!v21748){var v22653=properties$$0.glyphNames;v22653||(v22653=0<differences.length);
v21748=v22653}v7732=v21748}if(v7732){for(var reverseMap=[],i$$0=0,ii$$0=glyphs$$0.length,v3959=i$$0<ii$$0;v3959;){introspect(JAM.policy.p1)var v7733=glyphs$$0[i$$0];JAM.set(reverseMap,v7733.unicode,i$$0);i$$0+=1;v3959=i$$0<ii$$0}for(var newGlyphUnicodes=[],i$$0=0,ii$$0=glyphs$$0.length,v3965=i$$0<ii$$0;v3965;){introspect(JAM.policy.p1)var v3960=glyphs$$0[i$$0];var code=v3960.unicode,changeCode=!1;introspect(JAM.policy.p1)gid=ids[i$$0];introspect(JAM.policy.p1)glyphName=glyphNames[gid];if(!glyphName){introspect(JAM.policy.p1)var v3961=
differences[code];if(!v3961)introspect(JAM.policy.p1)v3961=encoding$$0[code];glyphName=v3961;changeCode=!0}if(glyphName in GlyphsUnicode){introspect(JAM.policy.p1)unicode=GlyphsUnicode[glyphName];var v7735=!unicode;if(!v7735){introspect(JAM.policy.p1)var v21749=reverseMap[unicode];v7735=v21749===i$$0}if(v7735){i$$0+=1;v3965=i$$0<ii$$0;continue}JAM.set(newGlyphUnicodes,i$$0,unicode);changeCode&&JAM.set(toFontChar,code,unicode);delete reverseMap[code]}i$$0+=1;v3965=i$$0<ii$$0}for(index in newGlyphUnicodes){introspect(JAM.policy.p1)unicode=
newGlyphUnicodes[index];introspect(JAM.policy.p1)var v3967=reverseMap[unicode];if(v3967){introspect(JAM.policy.p1)var v3966=glyphs$$0[index];v3966.unicode=unusedUnicode;unusedUnicode+=1}else{introspect(JAM.policy.p1)var v3968=glyphs$$0[index];v3968.unicode=unicode;JAM.set(reverseMap,unicode,index)}}this.useToFontChar=!0}}if(this.isSymbolicFont){for(var i$$0=0,ii$$0=glyphs$$0.length,v3973=i$$0<ii$$0;v3973;){introspect(JAM.policy.p1)var v7736=glyphs$$0[i$$0];var code=v7736.unicode&255,fontCharCode=
kSymbolicFontGlyphOffset|code;introspect(JAM.policy.p1)var v3972=glyphs$$0[i$$0];v3972.unicode=JAM.set(toFontChar,code,fontCharCode);i$$0+=1;v3973=i$$0<ii$$0}this.useToFontChar=!0}createGlyphNameMap(glyphs$$0,ids,properties$$0);this.glyphNameMap=properties$$0.glyphNameMap}var v3976=cmap$$0,v23476=createCMapTable(glyphs$$0,ids);v3976.data=v23476;for(var unicodeIsEnabled=[],i$$0=0,ii$$0=glyphs$$0.length,v3978=i$$0<ii$$0;v3978;){introspect(JAM.policy.p1)var v7737=glyphs$$0[i$$0];JAM.set(unicodeIsEnabled,
v7737.unicode,!0);i$$0+=1;v3978=i$$0<ii$$0}this.unicodeIsEnabled=unicodeIsEnabled;if(!os2){var override={unitsPerEm:int16([head.data[18],head.data[19]]),yMax:int16([head.data[42],head.data[43]]),yMin:int16([head.data[38],head.data[39]])-65536,ascent:int16([hhea.data[4],hhea.data[5]]),descent:int16([hhea.data[6],hhea.data[7]])-65536};JAM.call(tables.push,tables,[{tag:"OS/2",data:stringToArray(createOS2Table(properties$$0,glyphs$$0,override))}])}-1!=requiredTables.indexOf("post")&&JAM.call(tables.push,
tables,[{tag:"post",data:stringToArray(createPostTable(properties$$0))}]);-1!=requiredTables.indexOf("name")&&JAM.call(tables.push,tables,[{tag:"name",data:stringToArray(createNameTable(this.name))}]);tables.sort(tables_sort);for(var i$$0=0,ii$$0=tables.length,v3993=i$$0<ii$$0;v3993;){introspect(JAM.policy.p1)table=tables[i$$0];for(var data$$0=[],tableData=table.data,j$$0=0,jj=tableData.length,v3991=j$$0<jj;v3991;){introspect(JAM.policy.p1)var v3990=tableData[j$$0];JAM.call(data$$0.push,data$$0,[v3990]);
j$$0+=1;v3991=j$$0<jj}createTableEntry(ttf,table.tag,data$$0);i$$0+=1;v3993=i$$0<ii$$0}for(var i$$0=0,ii$$0=tables.length,v3997=i$$0<ii$$0;v3997;){introspect(JAM.policy.p1)table=tables[i$$0];var tableData=table.data,v3994=ttf;v3994.file+=arrayToString(tableData);for(var v3996=ttf.file.length&3;v3996;){var v3995=ttf;v3995.file+=String.fromCharCode(0);v3996=ttf.file.length&3}i$$0+=1;v3997=i$$0<ii$$0}return stringToArray(ttf.file)}function Font(name,file,properties){this.name=name;this.coded=properties.coded;
this.charProcOperatorList=properties.charProcOperatorList;this.sizes=[];var names=name.split("+"),names=1<names.length?names[1]:names[0];names.split(/[-,_]/g);this.isSerifFont=!!(properties.flags&FontFlags.Serif);this.isSymbolicFont=!!(properties.flags&FontFlags.Symbolic);this.type=names=properties.type;if(properties.ignore)this.loadedName=properties=this.isSerifFont?"serif":"sans-serif",this.loading=!1;else if(this.differences=properties.differences,this.widths=properties.widths,this.defaultWidth=
properties.defaultWidth,this.composite=properties.composite,this.wideChars=properties.wideChars,this.hasEncoding=properties.hasEncoding,this.fontMatrix=properties.fontMatrix,this.widthMultiplier=1,"Type3"==properties.type)this.encoding=properties.baseEncoding;else{JAM.call(this.loadCidToUnicode,this,[properties]);properties.toUnicode?this.toUnicode=properties.toUnicode:JAM.call(this.rebuildToUnicode,this,[properties]);var v23477=JAM.call(this.buildToFontChar,this,[this.toUnicode]);this.toFontChar=
v23477;if(file){var data;switch(names){case "Type1":case "CIDFontType0":this.mimetype="font/opentype";data=properties.subtype;(names="Type1C"==data)||(names="CIDFontType0C"==data);file=names?JAM.new(CFFFont,[file,properties]):new Type1Font(name,file,properties);data=JAM.call(this.convert,this,[name,file,properties]);break;case "TrueType":case "CIDFontType2":this.mimetype="font/opentype";data=JAM.call(this.checkAndRepair,this,[name,file,properties]);break;default:warn("Font "+properties.type+" is not supported")}this.data=
data;this.widthMultiplier=name=(this.fontMatrix=properties.fontMatrix)?1/properties.fontMatrix[0]:1;this.encoding=properties.baseEncoding;this.loadedName=properties.loadedName;this.loading=!0}else{file=name.replace(/[,_]/g,"-");introspect(JAM.policy.p1)data=stdFontMap[file];if(!data){introspect(JAM.policy.p1)data=nonStdFontMap[file];data||(data=file)}file=data;this.bold=-1!=file.search(/bold/gi);(data=-1!=file.search(/oblique/gi))||(data=-1!=file.search(/italic/gi));this.italic=data;this.black=-1!=
name.search(/Black/g);this.encoding=properties.baseEncoding;this.noUnicodeAdaptation=!0;this.loadedName=file.split("-")[0];this.loading=!1}}}function stringToArray(str){for(var array=[],i=0,ii=str.length,v4019=i<ii;v4019;){var v4019=array,v4018=i,v23478=str.charCodeAt(i);v4019[v4018]=v23478;i+=1;v4019=i<ii}return array}function arrayToString(arr){for(var str="",i=0,ii=arr.length,v4020=i<ii;v4020;){introspect(JAM.policy.p1)v4020=arr[i];str+=String.fromCharCode(v4020);i+=1;v4020=i<ii}return str}function int16(bytes){return(bytes[0]<<
8)+(bytes[1]&255)}function int32(bytes){return(bytes[0]<<24)+(bytes[1]<<16)+(bytes[2]<<8)+(bytes[3]&255)}function getMaxPower2(number){for(var maxPower=0,v4025=2<=number;v4025;)number/=2,maxPower+=1,v4025=2<=number;number=2;for(var v4025=1,v4026=v4025<maxPower;v4026;)number*=2,v4025+=1,v4026=v4025<maxPower;return number}function string16(value){return String.fromCharCode(value>>8&255)+String.fromCharCode(value&255)}function safeString16(value){value=32767<value?32767:-32768>value?-32768:value;return String.fromCharCode(value>>
8&255)+String.fromCharCode(value&255)}function string32(value){return String.fromCharCode(value>>24&255)+String.fromCharCode(value>>16&255)+String.fromCharCode(value>>8&255)+String.fromCharCode(value&255)}function createOpenTypeHeader(sfnt,file,numTables){"true"==sfnt&&(sfnt=string32(65536));sfnt+=string16(numTables);var tablesMaxPower2=getMaxPower2(numTables),searchRange=16*tablesMaxPower2;sfnt+=string16(searchRange);sfnt+=string16(JAM.call(Math.log,Math,[tablesMaxPower2])/JAM.call(Math.log,Math,
[2]));sfnt+=string16(16*numTables-searchRange);file.file+=sfnt;file.virtualOffset+=sfnt.length}function createTableEntry(file,tag,data){for(var offset=file.virtualOffset,length=data.length,v4035=data.length&3;v4035;)JAM.call(data.push,data,[0]),v4035=data.length&3;for(v4035=file.virtualOffset&3;v4035;)file.virtualOffset+=1,v4035=file.virtualOffset&3;for(var checksum=0,v4035=data.length,i=0,v4038=i<v4035;v4038;){introspect(JAM.policy.p1)v4038=data[i];var v23012=i+1;introspect(JAM.policy.p1)v23012=
data[v23012];var v23013=i+2;introspect(JAM.policy.p1)v23013=data[v23013];var v23014=i+3;introspect(JAM.policy.p1)v23014=data[v23014];checksum=checksum+int32([v4038,v23012,v23013,v23014])|0;i+=4;v4038=i<v4035}tag=tag+string32(checksum)+string32(offset)+string32(length);file.file+=tag;file.virtualOffset+=data.length}function getRanges(glyphs){function fontGetRangesSort(a,b){return a.unicode-b.unicode}for(var codes=[],length=glyphs.length,n=0,v4044=n<length;v4044;){introspect(JAM.policy.p1)v4044=glyphs[n];
JAM.call(codes.push,codes,[{unicode:v4044.unicode,code:n}]);n+=1;v4044=n<length}codes.sort(fontGetRangesSort);glyphs=[];n=0;for(v4044=n<length;v4044;){introspect(JAM.policy.p1)v4044=codes[n];v4044=v4044.unicode;introspect(JAM.policy.p1)var v7804=codes[n];var v7804=[v7804.code],n=n+1,end=v4044,v7805=n<length;if(v7805){v7805=end+1;introspect(JAM.policy.p1)var v22679=codes[n];v7805=v7805==v22679.unicode}for(;v7805;){introspect(JAM.policy.p1)v7805=codes[n];JAM.call(v7804.push,v7804,[v7805.code]);end+=
1;n+=1;if(v7805=n<length){v7805=end+1;introspect(JAM.policy.p1)v22679=codes[n];v7805=v7805==v22679.unicode}}JAM.call(glyphs.push,glyphs,[[v4044,end,v7804]]);v4044=n<length}return glyphs}function createCMapTable(glyphs,deltas){var ranges=getRanges(glyphs),numTables=1,numTables="\x00\x00"+string16(numTables)+"\x00\u0003\x00\u0001"+string32(4+8*numTables),segCount=ranges.length+1,segCount2=2*segCount,searchRange=2*getMaxPower2(segCount),searchEntry=JAM.call(Math.log,Math,[segCount])/JAM.call(Math.log,
Math,[2]),rangeShift=2*segCount-searchRange,startCount="",endCount="",idDeltas="",idRangeOffsets="",glyphsIds="",bias=0;if(deltas)for(var i=0,v4061=i<segCount-1;v4061;){introspect(JAM.policy.p1)var range=ranges[i];for(var v4061=range[0],end=range[1],offset=2*(segCount-i)+2*bias,bias=bias+(end-v4061+1),startCount=startCount+string16(v4061),endCount=endCount+string16(end),idDeltas=idDeltas+string16(0),idRangeOffsets=idRangeOffsets+string16(offset),v4061=range[2],end=0,range=v4061.length,offset=end<
range;offset;){introspect(JAM.policy.p1)offset=v4061[end];introspect(JAM.policy.p1)offset=deltas[offset];glyphsIds+=string16(offset);end+=1;offset=end<range}i+=1;v4061=i<segCount-1}else for(i=0,bias=i<segCount-1;bias;)range=ranges[i],v4061=range[0],end=range[1],bias=range[2][0],startCount+=string16(v4061),endCount+=string16(end),idDeltas+=string16(bias-v4061+1&65535),idRangeOffsets+=string16(0),i+=1,bias=i<segCount-1;endCount+="\u00ff\u00ff";startCount+="\u00ff\u00ff";idDeltas+="\x00\u0001";idRangeOffsets+=
"\x00\x00";ranges="\x00\x00"+string16(segCount2)+string16(searchRange)+string16(searchEntry)+string16(rangeShift)+endCount+"\x00\x00"+startCount+idDeltas+idRangeOffsets+glyphsIds;return stringToArray(numTables+"\x00\u0004"+string16(ranges.length+4)+ranges)}function createOS2Table(properties,charstrings,override){var v4066=override;v4066||(v4066={unitsPerEm:0,yMax:0,yMin:0,ascent:0,descent:0});override=v4066;var ulUnicodeRange1=0,ulUnicodeRange2=0,ulUnicodeRange3=0,ulUnicodeRange4=0,v4066=null,lastCharIndex=
0;if(charstrings)for(var i=0,v4076=i<charstrings.length;v4076;){introspect(JAM.policy.p1)v4076=charstrings[i];var v4076=v4076.unicode,v7838=v4066>v4076;v7838||(v7838=!v4066);v7838&&(v4066=v4076);lastCharIndex<v4076&&(lastCharIndex=v4076);JSCompiler_inline_label_getUnicodeRangeFor_89:{for(var v7838=0,ii=UnicodeRanges.length,v4071=v7838<ii;v4071;){introspect(JAM.policy.p1)v4071=UnicodeRanges[v7838];var v7839=v4076>=v4071.begin;v7839&&(v7839=v4076<v4071.end);if(v7839){v4076=v7838;break JSCompiler_inline_label_getUnicodeRangeFor_89}v7838+=
1;v4071=v7838<ii}v4076=-1}32>v4076?ulUnicodeRange1|=1<<v4076:64>v4076?ulUnicodeRange2|=1<<v4076-32:96>v4076?ulUnicodeRange3|=1<<v4076-64:123>v4076?ulUnicodeRange4|=1<<v4076-96:error$$1("Unicode ranges Bits > 123 are reserved for internal usage");i+=1;v4076=i<charstrings.length}else v4066=0,lastCharIndex=255;(charstrings=override.unitsPerEm)||(charstrings=kPDFGlyphSpaceUnits);ii=charstrings;charstrings=override.ascent;charstrings||(charstrings=properties.ascent);i=override.descent;i||(i=properties.descent);
(v4076=override.yMax)||(v4076=charstrings);(v7838=-override.yMin)||(v7838=-i);(v4071=ii!=kPDFGlyphSpaceUnits)&&(v4071="undefined"==typeof override.ascent);v4071&&(charstrings=Math.round(charstrings*ii/kPDFGlyphSpaceUnits),i=Math.round(i*ii/kPDFGlyphSpaceUnits),v4076=charstrings,v7838=-i);override="\x00\u0003\u0002$\u0001\u00f4\x00\u0005\x00\x00\u0002\u008a\u0002\u00bb\x00\x00\x00\u008c\u0002\u008a\u0002\u00bb\x00\x00\u0001\u00df\x001\u0001\u0002\x00\x00\x00\x00\u0006";ii=properties.fixedPitch?9:0;
ulUnicodeRange1=override+String.fromCharCode(ii)+"\x00\x00\x00\x00\x00\x00"+string32(ulUnicodeRange1)+string32(ulUnicodeRange2)+string32(ulUnicodeRange3)+string32(ulUnicodeRange4)+"*21*";ulUnicodeRange2=properties.italicAngle?1:0;ulUnicodeRange1+=string16(ulUnicodeRange2);ulUnicodeRange2=v4066;ulUnicodeRange2||(ulUnicodeRange2=properties.firstChar);ulUnicodeRange1+=string16(ulUnicodeRange2);lastCharIndex||(lastCharIndex=properties.lastChar);lastCharIndex=ulUnicodeRange1+string16(lastCharIndex)+string16(charstrings)+
string16(i)+"\x00d"+string16(v4076)+string16(v7838)+"\x00\x00\x00\x00\x00\x00\x00\x00"+string16(properties.xHeight)+string16(properties.capHeight)+string16(0);v4066||(v4066=properties.firstChar);return lastCharIndex+string16(v4066)+"\x00\u0003"}function createPostTable(properties){var angle=Math.floor(properties.italicAngle*Math.pow(2,16));return"\x00\u0003\x00\x00"+string32(angle)+"\x00\x00\x00\x00"+string32(properties.fixedPitch)+"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"}
function createNameTable(name){name=["Original licence",name,"Unknown","uniqueID",name,"Version 0.11","","Unknown","Unknown","Unknown"];for(var stringsUnicode=[],i=0,ii=name.length,v4089=i<ii;v4089;){introspect(JAM.policy.p1)var str=name[i];for(var strUnicode="",v4089=0,jj=str.length,v4088=v4089<jj;v4088;)strUnicode+=string16(str.charCodeAt(v4089)),v4089+=1,v4088=v4089<jj;JAM.call(stringsUnicode.push,stringsUnicode,[strUnicode]);i+=1;v4089=i<ii}for(var strUnicode=[name,stringsUnicode],v4088=["\x00\u0001",
"\x00\u0003"],encodings=["\x00\x00","\x00\u0001"],languages=["\x00\x00","\u0004\t"],i=name.length*v4088.length,nameTable="\x00\x00"+string16(i)+string16(12*i+6),strOffset=0,i=0,ii=v4088.length,v4089=i<ii;v4089;){introspect(JAM.policy.p1)var strs=strUnicode[i];v4089=0;jj=strs.length;for(str=v4089<jj;str;){str=strs[v4089];introspect(JAM.policy.p1)var v23024=v4088[i];introspect(JAM.policy.p1)var v23025=encodings[i];v23024+=v23025;introspect(JAM.policy.p1)v23025=languages[i];v23024=v23024+v23025+string16(v4089)+
string16(str.length)+string16(strOffset);nameTable+=v23024;strOffset+=str.length;v4089+=1;str=v4089<jj}i+=1;v4089=i<ii}return nameTable+=name.join("")+stringsUnicode.join("")}function v7872(){for(var possibleSpaceReplacements=["space","minus","one","i"],width,i=0,ii=possibleSpaceReplacements.length,v4106=i<ii;v4106;){introspect(JAM.policy.p1)width=possibleSpaceReplacements[i];if(width in this.widths){possibleSpaceReplacements=this.widths;introspect(JAM.policy.p1)width=possibleSpaceReplacements[width];
break}introspect(JAM.policy.p1)width=GlyphsUnicode[width];v4106=0;if(this.composite){v4106=this.unicodeToCID;introspect(JAM.policy.p1)v4106=v4106[width]}var v7869=!v4106;v7869&&(v7869="toUnicode"in this);v7869&&(v4106=this.toUnicode.indexOf(width));0<v4106||(v4106=width);width=this.widths;introspect(JAM.policy.p1)width=width[v4106];if(width)break;i+=1;v4106=i<ii}possibleSpaceReplacements=width;possibleSpaceReplacements||(possibleSpaceReplacements=this.defaultWidth);width=possibleSpaceReplacements*
this.widthMultiplier;return shadow(this,"spaceWidth",width)}var v4109=Font;v4109.prototype={name:null,font:null,mimetype:null,encoding:null,checkAndRepair:Font_checkAndRepair,convert:Font_convert,buildToFontChar:Font_buildToFontChar,rebuildToUnicode:Font_rebuildToUnicode,loadCidToUnicode:Font_loadCidToUnicode,bindDOM:Font_bindDOM,charToGlyph:Font_charToGlyph,charsToGlyphs:Font_charsToGlyphs};JAM.call(Object.defineProperty,Object,[v4109.prototype,"spaceWidth",{get:v7872}]);return Font}function fontLoaderPrepareFontLoadEvent(rules,
names,fonts){function fontLoaderMessage(e){JAM.call(JSON.parse,JSON,[e.data]);e=0;for(var ii=fonts.length,v4111=e<ii;v4111;){introspect(JAM.policy.p1)v4111=fonts[e];v4111.loading=!1;e+=1;v4111=e<ii}e=PdfJS_window.document;e=JAM.call(e.createEvent,e,["Events"]);JAM.call(e.initEvent,e,["pdfjsFontLoad",!0,!1]);ii=PdfJS_window.document.documentElement;JAM.call(ii.dispatchEvent,ii,[e])}if(/^\w+$/.test(names.join(""))){var v4116=PdfJS_window.document,div=JAM.call(v4116.createElement,v4116,["div"]);JAM.call(div.setAttribute,
div,["style","visibility: hidden;width: 10px; height: 10px;position: absolute; top: 0px; left: 0px;"]);for(var html="",v4116=0,ii$$0=names.length,v4118=v4116<ii$$0;v4118;){introspect(JAM.policy.p1)v4118=names[v4116];html+='<span style="font-family:'+v4118+'">Hi</span>';v4116+=1;v4118=v4116<ii$$0}JAM.set(div,"innerHTML",html);v4116=PdfJS_window.document.body;JAM.call(v4116.appendChild,v4116,[div]);this.listeningForFontLoad||(v4116=PdfJS_window.window,JAM.call(v4116.addEventListener,v4116,["message",
fontLoaderMessage,!1]),this.listeningForFontLoad=!0);div="<!DOCTYPE HTML><html><head>";div+='<style type="text/css">';v4116=0;ii$$0=rules.length;for(html=v4116<ii$$0;html;){introspect(JAM.policy.p1)html=rules[v4116];div+=html;v4116+=1;html=v4116<ii$$0}div+="</style>";div+='<script type="application/javascript">';rules="";v4116=0;ii$$0=names.length;for(html=v4116<ii$$0;html;){introspect(JAM.policy.p1)html=names[v4116];rules+='"'+html+'", ';v4116+=1;html=v4116<ii$$0}div+="  var fontNames=["+rules+"];\n";
div+="  PdfJS_window.window.onload = function fontLoaderOnload() {\n";div+='    parent.postMessage(JSON.stringify(fontNames), "*");\n';div+="  }";div+="\x3c/script></head><body>";v4116=0;ii$$0=names.length;for(rules=v4116<ii$$0;rules;){introspect(JAM.policy.p1)rules=names[v4116];div+="<p style=\"font-family:'"+rules+"'\">Hi</p>";v4116+=1;rules=v4116<ii$$0}div+="</body></html>";names=PdfJS_window.document;names=JAM.call(names.createElement,names,["iframe"]);names.src="data:text/html,"+div;JAM.call(names.setAttribute,
names,["style","visibility: hidden;width: 10px; height: 10px;position: absolute; top: 0px; left: 0px;"]);v4116=PdfJS_window.document.body;JAM.call(v4116.appendChild,v4116,[names])}else error$$1("Invalid font name(s): "+names.join())}function fontLoaderBind(fonts,callback){function checkFontsLoaded(){for(var i=0,ii=fonts.length,v4129=i<ii;v4129;){introspect(JAM.policy.p1)v4129=fonts[i];if(v4129.loading)return!1;i+=1;v4129=i<ii}i=PdfJS_window.document.documentElement;JAM.call(i.removeEventListener,
i,["pdfjsFontLoad",checkFontsLoaded,!1]);callback();return!0}for(var rules=[],names=[],fontsToLoad=[],i$$0=0,ii$$0=fonts.length,v4134=i$$0<ii$$0;v4134;){introspect(JAM.policy.p1)v4134=fonts[i$$0];var v7888=v4134.attached;v7888||(v7888=!1==v4134.loading);if(!v7888){v4134.attached=!0;JAM.call(fontsToLoad.push,fontsToLoad,[v4134]);var str="";if(v7888=v4134.data){for(var length=v7888.length,j=0,v4132=j<length;v4132;){introspect(JAM.policy.p1)v4132=v7888[j];str+=String.fromCharCode(v4132);j+=1;v4132=j<
length}if(v7888=JAM.call(v4134.bindDOM,v4134,[str]))JAM.call(rules.push,rules,[v7888]),JAM.call(names.push,names,[v4134.loadedName])}}i$$0+=1;v4134=i$$0<ii$$0}this.listeningForFontLoad=!1;if(i$$0=!isWorker)i$$0=rules.length;i$$0&&JAM.call(FontLoader.prepareFontLoadEvent,FontLoader,[rules,names,fontsToLoad]);checkFontsLoaded()||(rules=PdfJS_window.document.documentElement,JAM.call(rules.addEventListener,rules,["pdfjsFontLoad",checkFontsLoaded,!1]))}function EvalStateClosure(){function EvalState(){this.alphaIsShape=
!1;this.fontSize=0;this.textMatrix=IDENTITY_MATRIX;this.wordSpacing=this.charSpacing=this.lineY=this.lineX=this.leading=0;this.textHScale=1;this.strokeColorSpace=this.fillColorSpace=null}EvalState.prototype={};return EvalState}function PartialEvaluatorClosure(){function PartialEvaluator_translateFont(dict,xref,resources,dependency){var baseDict=dict,type=JAM.call(dict.get,dict,["Subtype"]);assertWellFormed(isName(type),"invalid font Subtype");var composite=!1;if("Type0"==type.name){dict=JAM.call(dict.get,
dict,["DescendantFonts"]);if(!dict)return null;dict=isArray(dict)?JAM.call(xref.fetchIfRef,xref,[dict[0]]):dict;type=JAM.call(dict.get,dict,["Subtype"]);assertWellFormed(isName(type),"invalid font Subtype");composite=!0}var v4143;v4143=composite?65535:255;var descriptor=JAM.call(dict.get,dict,["FontDescriptor"]);if(!descriptor)if("Type3"==type.name)descriptor=new Dict,JAM.call(descriptor.set,descriptor,["FontName",JAM.new(Name,[type.name])]);else{dependency=JAM.call(dict.get,dict,["BaseFont"]);if(!isName(dependency))return null;
dependency=dependency.name.replace(/[,_]/g,"-");var metrics=JAM.call(this.getBaseFontMetrics,this,[dependency]);resources=dependency.split("-")[0];var v7900;introspect(JAM.policy.p1)v7900=serifFonts[resources];v7900||(v7900=-1!=resources.search(/serif/gi));v7900=v7900?FontFlags.Serif:0;introspect(JAM.policy.p1)resources=symbolsFonts[resources];resources=resources?FontFlags.Symbolic:FontFlags.Nonsymbolic;resources|=v7900;v4143={type:type.name,widths:metrics.widths,defaultWidth:metrics.defaultWidth,
flags:resources,firstChar:0,lastChar:v4143};JAM.call(this.extractDataStructures,this,[dict,dict,xref,v4143]);return{name:dependency,dict:baseDict,properties:v4143}}(v7900=JAM.call(dict.get,dict,["FirstChar"]))||(v7900=0);var firstChar=v7900;(v7900=JAM.call(dict.get,dict,["LastChar"]))||(v7900=v4143);var lastChar=v7900;v7900=JAM.call(descriptor.get,descriptor,["FontName"]);isString(v7900)&&(v7900=JAM.new(Name,[v7900]));assertWellFormed(isName(v7900),"invalid font name");var fontFile=JAM.call(descriptor.get,
descriptor,["FontFile","FontFile2","FontFile3"]);if(fontFile&&fontFile.dict){var v4159=fontFile.dict;if(v4159=JAM.call(v4159.get,v4159,["Subtype"]))v4159=v4159.name;var v4160=fontFile.dict,v4160=JAM.call(v4160.get,v4160,["Length1"]),v4161=fontFile.dict,v4161=JAM.call(v4161.get,v4161,["Length2"])}var v4163=type.name,v7904=JAM.call(dict.get,dict,["FontMatrix"]);v7904||(v7904=IDENTITY_MATRIX);v4143={type:v4163,subtype:v4159,file:fontFile,length1:v4160,length2:v4161,composite:composite,wideChars:composite,
fixedPitch:!1,fontMatrix:v7904,firstChar:firstChar||0,lastChar:lastChar||v4143,bbox:JAM.call(descriptor.get,descriptor,["FontBBox"]),ascent:JAM.call(descriptor.get,descriptor,["Ascent"]),descent:JAM.call(descriptor.get,descriptor,["Descent"]),xHeight:JAM.call(descriptor.get,descriptor,["XHeight"]),capHeight:JAM.call(descriptor.get,descriptor,["CapHeight"]),flags:JAM.call(descriptor.get,descriptor,["Flags"]),italicAngle:JAM.call(descriptor.get,descriptor,["ItalicAngle"]),coded:!1};JAM.call(this.extractWidths,
this,[dict,xref,descriptor,v4143]);JAM.call(this.extractDataStructures,this,[dict,baseDict,xref,v4143]);if("Type3"===type.name)for(metrics in v4143.coded=!0,xref=JAM.call(dict.get,dict,["CharProcs"]).getAll(),(dict=JAM.call(dict.get,dict,["Resources"]))||(dict=resources),v4143.charProcOperatorList={},xref){introspect(JAM.policy.p1)v4159=xref[metrics];type=v4143.charProcOperatorList;resources=metrics;v4159=JAM.call(this.getOperatorList,this,[v4159,dict,dependency]);JAM.set(type,resources,v4159)}return{name:v7900.name,
dict:baseDict,file:fontFile,properties:v4143}}function PartialEvaluator_getBaseFontMetrics(name){var defaultWidth=0,widths=[];introspect(JAM.policy.p1)var v7907=stdFontMap[name];v7907||(v7907=name);name=v7907;introspect(JAM.policy.p1)name=Metrics[name];isNum(name)?defaultWidth=name:widths=name;return{defaultWidth:defaultWidth,widths:widths}}function PartialEvaluator_extractWidths(dict,xref,descriptor,properties){xref=[];var defaultWidth=0;if(properties.composite){var v4182=JAM.call(dict.get,dict,
["DW"]);v4182||(v4182=1E3);defaultWidth=v4182;if(v4182=JAM.call(dict.get,dict,["W"])){dict=descriptor=0;for(var ii=v4182.length,v4188=dict<ii;v4188;){introspect(JAM.policy.p1)var code=v4182[dict];if(isArray(code)){for(var v4188=0,jj=code.length,v4184=v4188<jj;v4184;)v4184=descriptor,descriptor+=1,JAM.set(xref,v4184,JAM.get(code,v4188,JAM.policy.p1)),v4188+=1,v4184=v4188<jj;descriptor=0}else if(descriptor){v4188=dict+=1;introspect(JAM.policy.p1)jj=v4182[v4188];v4188=descriptor;for(descriptor=v4188<=
code;descriptor;)JAM.set(xref,v4188,jj),v4188+=1,descriptor=v4188<=code;descriptor=0}else descriptor=code;dict+=1;v4188=dict<ii}}}else if(ii=properties.firstChar,v4182=JAM.call(dict.get,dict,["Widths"])){v4188=ii;dict=0;ii=v4182.length;for(defaultWidth=dict<ii;defaultWidth;)defaultWidth=v4188,v4188+=1,JAM.set(xref,defaultWidth,v4182[dict]),dict+=1,defaultWidth=dict<ii;(v4182=parseFloat(JAM.call(descriptor.get,descriptor,["MissingWidth"])))||(v4182=0);defaultWidth=v4182}else v4182=JAM.call(dict.get,
dict,["BaseFont"]),isName(v4182)&&(v4182=JAM.call(this.getBaseFontMetrics,this,[v4182.name]),xref=v4182.widths,defaultWidth=v4182.defaultWidth);properties.defaultWidth=defaultWidth;properties.widths=xref}function PartialEvaluator_readCidToGidMap(cidToGidStream){cidToGidStream=cidToGidStream.getBytes();for(var result=[],j=0,jj=cidToGidStream.length,v4198=j<jj;v4198;){v4198=j;j+=1;introspect(JAM.policy.p1)v4198=cidToGidStream[v4198];v4198<<=8;introspect(JAM.policy.p1)var v4196=cidToGidStream[j];v4198|=
v4196;0!=v4198&&(v4196=j>>1,result[v4196]=v4198);j+=1;v4198=j<jj}return result}function PartialEvaluator_readToUnicode(toUnicode,xref,properties){var cmapObj=toUnicode;toUnicode=[];if(isName(cmapObj))(properties="Identity-"==cmapObj.name.substr(0,9))||error$$1("ToUnicode file cmap translation not implemented");else if(isStream(cmapObj)){xref=[];for(var token="",beginArrayToken={},cmapObj=JAM.call(cmapObj.getBytes,cmapObj,[cmapObj.length]),i=0,ii=cmapObj.length,v4228=i<ii;v4228;){introspect(JAM.policy.p1)v4228=
cmapObj[i];var v7913=32==v4228;v7913||(v7913=13==v4228,v7913||(v7913=10==v4228,v7913||(v7913=60==v4228,v7913||(v7913=91==v4228)||(v7913=93==v4228))));if(v7913){switch(token){case "usecmap":error$$1("usecmap is not implemented");break;case "beginbfchar":case "beginbfrange":case "begincidchar":case "begincidrange":token="";xref=[];break;case "endcidrange":case "endbfrange":for(var v7913=0,jj=xref.length,v4209=v7913<jj;v4209;){introspect(JAM.policy.p1)v4209=xref[v7913];var v4202=v7913+1;introspect(JAM.policy.p1)v4202=
xref[v4202];var v4203=v7913+2;introspect(JAM.policy.p1)v4203=xref[v4203];65535==v4203&&(v4203=v4209);if(isArray(v4203))for(var codeindex=0,v4206=v4209<=v4202;v4206;)v4206=codeindex,codeindex+=1,JAM.set(toUnicode,v4209,v4203[v4206]),v4209+=1,v4206=v4209<=v4202;else for(codeindex=v4209<=v4202;codeindex;)JAM.set(toUnicode,v4209,v4203),v4203+=1,v4209+=1,codeindex=v4209<=v4202;v7913+=3;v4209=v7913<jj}break;case "endcidchar":case "endbfchar":v7913=0;jj=xref.length;for(v4209=v7913<jj;v4209;){introspect(JAM.policy.p1)v4209=
xref[v7913];v4203=xref[v7913+1];JAM.set(toUnicode,v4209,v4203);v7913+=2;v4209=v7913<jj}break;case "":break;default:(v7913="0"<=token[0])&&(v7913="9">=token[0]),v7913&&(token=parseInt(token,10)),JAM.call(xref.push,xref,[token]),token=""}switch(v4228){case 91:JAM.call(xref.push,xref,[beginArrayToken]);break;case 93:var v4228=[],item;for((v7913=xref.length)&&(v7913=(item=xref.pop())!=beginArrayToken);v7913;)v4228.unshift(item),(v7913=xref.length)&&(v7913=(item=xref.pop())!=beginArrayToken);JAM.call(xref.push,
xref,[v4228])}}else if(62==v4228){if(token.length){if(v4228=2>=token.length)v4228=properties.composite;v4228&&(properties.wideChars=!1);if(4>=token.length)JAM.call(xref.push,xref,[parseInt(token,16)]);else{v4228=[];v7913=0;jj=token.length;for(v4209=v7913<jj;v4209;){v4209=parseInt(token.substr(v7913,4),16);if(16>=v4209){v7913+=4;v4209=v4209<<16|parseInt(token.substr(v7913,4),16);v4209-=65536;JAM.call(v4228.push,v4228,[55296|v4209>>10]);JAM.call(v4228.push,v4228,[56320|v4209&1023]);break}JAM.call(v4228.push,
v4228,[v4209]);v7913+=4;v4209=v7913<jj}token=String.fromCharCode;JAM.call(xref.push,xref,[JAM.call(token.apply,token,[String,v4228])])}token=""}}else token+=String.fromCharCode(v4228);i+=1;v4228=i<ii}}return toUnicode}function partialEvaluatorExtractDataStructures(dict,baseDict,xref,properties){var v4231=JAM.call(dict.get,dict,["ToUnicode"]);v4231||(v4231=JAM.call(baseDict.get,baseDict,["ToUnicode"]));v4231&&(baseDict=properties,xref=JAM.call(this.readToUnicode,this,[v4231,xref,properties]),baseDict.toUnicode=
xref);properties.composite&&(xref=JAM.call(dict.get,dict,["CIDSystemInfo"]),isDict(xref)&&(properties.cidSystemInfo={registry:JAM.call(xref.get,xref,["Registry"]),ordering:JAM.call(xref.get,xref,["Ordering"]),supplement:JAM.call(xref.get,xref,["Supplement"])}),baseDict=JAM.call(dict.get,dict,["CIDToGIDMap"]),isStream(baseDict)&&(xref=properties,baseDict=JAM.call(this.readCidToGidMap,this,[baseDict]),xref.cidToGidMap=baseDict));baseDict=properties.flags;xref=[];v4231=baseDict=baseDict&FontFlags.Symbolic?
Encodings.symbolsEncoding:Encodings.StandardEncoding;if(baseDict=JAM.call(dict.has,dict,["Encoding"]))if(dict=JAM.call(dict.get,dict,["Encoding"]),isDict(dict)){var baseName=JAM.call(dict.get,dict,["BaseEncoding"]);if(baseName){v4231=baseName.name;introspect(JAM.policy.p1)v4231=Encodings[v4231]}else baseDict=!1;if(JAM.call(dict.has,dict,["Differences"])){dict=JAM.call(dict.get,dict,["Differences"]);for(var j=baseName=0,jj=dict.length,v4242=j<jj;v4242;){introspect(JAM.policy.p1)v4242=dict[j];if(isNum(v4242))baseName=
v4242;else{var v4240=baseName,baseName=baseName+1;JAM.set(xref,v4240,v4242.name)}j+=1;v4242=j<jj}}}else if(isName(dict)){dict=dict.name;introspect(JAM.policy.p1)v4231=Encodings[dict]}else error$$1("Encoding is not a Name nor a Dict");properties.differences=xref;properties.baseEncoding=v4231;properties.hasEncoding=baseDict}function PartialEvaluator_getOperatorList(stream,resources,dependency,queue){function canvasGraphicsSetGStateForEach(key,value){switch(key){case "Type":break;case "LW":case "LC":case "LJ":case "ML":case "D":case "RI":case "FL":case "CA":case "ca":JAM.call(gsStateObj.push,
gsStateObj,[[key,value]]);break;case "Font":JAM.call(gsStateObj.push,gsStateObj,[["Font",handleSetFont(null,value[0]),value[1]]]);break;case "OP":case "op":case "OPM":case "BG":case "BG2":case "UCR":case "UCR2":case "TR":case "TR2":case "HT":case "SM":case "SA":case "BM":case "SMask":case "AIS":case "TK":TODO("graphic state operator "+key);break;default:warn("Unknown graphic state operator "+key)}}function insertDependency(depList){JAM.call(fnArray.push,fnArray,["dependency"]);JAM.call(argsArray.push,
argsArray,[depList]);for(var i=0,ii=depList.length,v4253=i<ii;v4253;){introspect(JAM.policy.p1)v4253=depList[i];if(-1==dependency.indexOf(v4253)){introspect(JAM.policy.p1)v4253=depList[i];JAM.call(dependency.push,dependency,[v4253])}i+=1;v4253=i<ii}}function handleSetFont(fontName,font){var loadedName=null,fontRes=JAM.call(resources.get,resources,["Font"]);fontRes||error$$1("fontRes not available");var v4255=JAM.call(xref.fetchIfRef,xref,[font]);v4255||(v4255=JAM.call(fontRes.get,fontRes,[fontName]));
font=v4255;assertWellFormed(isDict(font));self.objIdCounter+=1;if(!font.translated&&(fontRes=font,v4255=JAM.call(self.translateFont,self,[font,xref,resources,dependency]),fontRes.translated=v4255,font.translated)){loadedName="font_"+uniquePrefix+self.objIdCounter;font.translated.properties.loadedName=loadedName;font.loadedName=loadedName;fontRes=font.translated;if(fontRes.file){var v4255=fontRes,v23483=fontRes.file.getBytes();v4255.file=v23483}fontRes.properties.file&&(v4255=fontRes.properties,v23483=
fontRes.properties.file.getBytes(),v4255.file=v23483);JAM.call(handler.send,handler,["obj",[loadedName,"Font",fontRes.name,fontRes.file,fontRes.properties]])}loadedName||(loadedName=font.loadedName);insertDependency([loadedName]);return loadedName}function buildPaintImageXObject(image,inline){function v84(imageObj){var drawWidth=imageObj.drawWidth,drawHeight=imageObj.drawHeight,imgData={width:drawWidth,height:drawHeight,data:new Uint8Array(4*drawWidth*drawHeight)},pixels=imgData.data;JAM.call(imageObj.fillRgbaBuffer,
imageObj,[pixels,drawWidth,drawHeight]);JAM.call(handler.send,handler,["obj",[objId,"Image",imgData]])}var dict=image.dict,w=JAM.call(dict.get,dict,["Width","W"]),h=JAM.call(dict.get,dict,["Height","H"]),v4272=JAM.call(dict.get,dict,["ImageMask","IM"]);v4272||(v4272=!1);if(v4272){var w=JAM.call(dict.get,dict,["Width","W"]),h=JAM.call(dict.get,dict,["Height","H"]),v4272=w+7>>3,v4272=JAM.call(image.getBytes,image,[v4272*h]),dict=JAM.call(dict.get,dict,["Decode","D"]),v4275=!!dict;v4275&&(v4275=0<dict[0]);
dict=v4275;fn="paintImageMaskXObject";args=[v4272,dict,w,h]}else{var objId="img_"+uniquePrefix+(self.objIdCounter+=1);insertDependency([objId]);args=[objId,w,h];(dict=JAM.call(dict.get,dict,["SMask","IM"]))||(dict=!1);(dict=!dict)&&(dict=image instanceof JpegStream)&&(dict=JAM.call(image.isNativelySupported,image,[xref,resources]));dict?(fn="paintJpegXObject",JAM.call(handler.send,handler,["obj",[objId,"JpegStream",image.getIR()]])):(fn="paintImageXObject",JAM.call(PDFImage.buildImage,PDFImage,[v84,
handler,xref,resources,image,inline]))}}var self=this,xref=this.xref,handler=this.handler,v4282=this.uniquePrefix;v4282||(v4282="");var uniquePrefix=v4282;queue||(queue={});queue.argsArray||(queue.argsArray=[]);queue.fnArray||(queue.fnArray=[]);var fnArray=queue.fnArray,argsArray=queue.argsArray,v4282=dependency||[],v4286=resources;v4286||(v4286=new Dict);resources=v4286;(v4286=JAM.call(resources.get,resources,["XObject"]))||(v4286=new Dict);var v4288=JAM.call(resources.get,resources,["Pattern"]);
v4288||(v4288=new Dict);stream=JAM.new(Parser,[JAM.new(Lexer,[stream]),!1,xref]);for(var res=resources,hasNextObj=!1,nextObj,args=[],obj,TILING_PATTERN=1,SHADING_PATTERN=2;;){if(hasNextObj)obj=nextObj,hasNextObj=!1;else if(obj=stream.getObj(),obj==EOF)break;if(isCmd(obj)){obj=obj.cmd;introspect(JAM.policy.p1)var fn=OP_MAP[obj];if(!fn){var cmds=splitCombinedOperations(obj);if(cmds){obj=cmds[0];introspect(JAM.policy.p1)fn=OP_MAP[obj];hasNextObj=!0;nextObj=JAM.call(Cmd.get,Cmd,[cmds[1]])}}assertWellFormed(fn,
'Unknown command "'+obj+'"');(cmds="SCN"==obj)||(cmds="scn"==obj);if(cmds){cmds=args.length-1;introspect(JAM.policy.p1)cmds=args[cmds];cmds=!cmds.code}if(cmds){obj=args.length-1;introspect(JAM.policy.p1)obj=args[obj];if(isName(obj)){var pattern=JAM.call(v4288.get,v4288,[obj.name]);if(pattern)if(obj=isStream(pattern)?pattern.dict:pattern,cmds=JAM.call(obj.get,obj,["PatternType"]),cmds==TILING_PATTERN){var cmds=v4282.length,v7961=JAM.call(obj.get,obj,["Resources"]);v7961||(v7961=resources);pattern=
JAM.call(this.getOperatorList,this,[pattern,v7961,v4282]);insertDependency(v4282.slice(cmds));args=JAM.call(TilingPattern.getIR,TilingPattern,[pattern,obj,args])}else cmds==SHADING_PATTERN?(pattern=JAM.call(obj.get,obj,["Shading"]),cmds=JAM.call(obj.get,obj,["Matrix"]),pattern=JAM.call(Pattern.parseShading,Pattern,[pattern,cmds,xref,res]),args=pattern.getIR()):error$$1("Unkown PatternType "+cmds)}}else if((cmds="Do"==obj)&&(cmds=!args[0].code),cmds){if(obj=args[0].name,obj=JAM.call(v4286.get,v4286,
[obj]))assertWellFormed(isStream(obj),"XObject should be a stream"),cmds=obj.dict,cmds=JAM.call(cmds.get,cmds,["Subtype"]),assertWellFormed(isName(cmds),"XObject should have a Name subtype"),"Form"==cmds.name?(cmds=obj.dict,cmds=JAM.call(cmds.get,cmds,["Matrix"]),pattern=obj.dict,pattern=JAM.call(pattern.get,pattern,["BBox"]),JAM.call(fnArray.push,fnArray,["paintFormXObjectBegin"]),JAM.call(argsArray.push,argsArray,[[cmds,pattern]]),cmds=v4282.length,pattern=obj.dict,(pattern=JAM.call(pattern.get,
pattern,["Resources"]))||(pattern=resources),JAM.call(this.getOperatorList,this,[obj,pattern,v4282,queue]),insertDependency(v4282.slice(cmds)),fn="paintFormXObjectEnd",args=[]):"Image"==cmds.name?buildPaintImageXObject(obj,!1):error$$1("Unhandled XObject subtype "+cmds.name)}else"Tf"==obj?(obj=args,cmds=handleSetFont(args[0].name),obj[0]=cmds):"EI"==obj&&buildPaintImageXObject(args[0],!0);switch(fn){case "setFillColorSpace":case "setStrokeColorSpace":args=[JAM.call(ColorSpace.parseToIR,ColorSpace,
[args[0],xref,resources])];break;case "shadingFill":(obj=JAM.call(res.get,res,["Shading"]))||error$$1("No shading resource found");(pattern=JAM.call(obj.get,obj,[args[0].name]))||error$$1("No shading object found");obj=JAM.call(Pattern.parseShading,Pattern,[pattern,null,xref,res]);obj=obj.getIR();args=[obj];fn="shadingFill";break;case "setGState":obj=args[0];cmds=JAM.call(resources.get,resources,["ExtGState"]);(pattern=!isDict(cmds))||(pattern=!JAM.call(cmds.has,cmds,[obj.name]));if(pattern)break;
obj=JAM.call(cmds.get,cmds,[obj.name]);var gsStateObj=[];JAM.call(obj.forEach,obj,[canvasGraphicsSetGStateForEach]);args=[gsStateObj]}JAM.call(fnArray.push,fnArray,[fn]);JAM.call(argsArray.push,argsArray,[args]);args=[]}else null!=obj&&(assertWellFormed(33>=args.length,"Too many arguments"),obj=obj instanceof Dict?obj.getAll():obj,JAM.call(args.push,args,[obj]))}return queue}function PartialEvaluator(xref,handler,uniquePrefix){var v23486=new EvalState;this.state=v23486;this.stateStack=[];this.xref=
xref;this.handler=handler;this.uniquePrefix=uniquePrefix;this.objIdCounter=0}function splitCombinedOperations(operations){for(var i=operations.length-1,v4333=0<i;v4333;){var v4333=operations.substring(0,i),op2=operations.substring(i),v7973=v4333 in OP_MAP;v7973&&(v7973=op2 in OP_MAP);if(v7973)return[v4333,op2];i-=1;v4333=0<i}return null}var OP_MAP={w:"setLineWidth",J:"setLineCap",j:"setLineJoin",M:"setMiterLimit",d:"setDash",ri:"setRenderingIntent",i:"setFlatness",gs:"setGState",q:"save",Q:"restore",
cm:"transform",m:"moveTo",l:"lineTo",c:"curveTo",v:"curveTo2",y:"curveTo3",h:"closePath",re:"rectangle",S:"stroke",s:"closeStroke",f:"fill",F:"fill","f*":"eoFill",B:"fillStroke","B*":"eoFillStroke",b:"closeFillStroke","b*":"closeEOFillStroke",n:"endPath",W:"clip","W*":"eoClip",BT:"beginText",ET:"endText",Tc:"setCharSpacing",Tw:"setWordSpacing",Tz:"setHScale",TL:"setLeading",Tf:"setFont",Tr:"setTextRenderingMode",Ts:"setTextRise",Td:"moveText",TD:"setLeadingMoveText",Tm:"setTextMatrix","T*":"nextLine",
Tj:"showText",TJ:"showSpacedText","'":"nextLineShowText",'"':"nextLineSetSpacingShowText",d0:"setCharWidth",d1:"setCharWidthAndBounds",CS:"setStrokeColorSpace",cs:"setFillColorSpace",SC:"setStrokeColor",SCN:"setStrokeColorN",sc:"setFillColor",scn:"setFillColorN",G:"setStrokeGray",g:"setFillGray",RG:"setStrokeRGBColor",rg:"setFillRGBColor",K:"setStrokeCMYKColor",k:"setFillCMYKColor",sh:"shadingFill",BI:"beginInlineImage",ID:"beginImageData",EI:"endInlineImage",Do:"paintXObject",MP:"markPoint",DP:"markPointProps",
BMC:"beginMarkedContent",BDC:"beginMarkedContentProps",EMC:"endMarkedContent",BX:"beginCompat",EX:"endCompat"};PartialEvaluator.prototype={getOperatorList:PartialEvaluator_getOperatorList,extractDataStructures:partialEvaluatorExtractDataStructures,readToUnicode:PartialEvaluator_readToUnicode,readCidToGidMap:PartialEvaluator_readCidToGidMap,extractWidths:PartialEvaluator_extractWidths,getBaseFontMetrics:PartialEvaluator_getBaseFontMetrics,translateFont:PartialEvaluator_translateFont};return PartialEvaluator}
function CipherTransformFactoryClosure(){function CipherTransformFactory_createCipherTransform(num,gen){function cipherConstructor(){return JAM.new(ARCFourCipher,[key])}if(4==this.algorithm)return JAM.new(CipherTransform,[buildCipherConstructor(this.cf,this.stmf,num,gen,this.encryptionKey),buildCipherConstructor(this.cf,this.strf,num,gen,this.encryptionKey)]);var key=buildObjectKey(num,gen,this.encryptionKey,!1);return JAM.new(CipherTransform,[cipherConstructor,cipherConstructor])}function CipherTransformFactory(dict,
fileId,password){var filter=JAM.call(dict.get,dict,["Filter"]),v7981=!isName(filter);v7981||(v7981="Standard"!=filter.name);v7981&&error$$1("unknown encryption method");this.dict=dict;filter=JAM.call(dict.get,dict,["V"]);v7981=!isInt(filter);v7981||(v7981=1!=filter)&&(v7981=2!=filter)&&(v7981=4!=filter);v7981&&error$$1("unsupported encryption algorithm");this.algorithm=filter;(v7981=JAM.call(dict.get,dict,["Length"]))||(v7981=40);var v7984=!isInt(v7981);v7984||(v7984=40>v7981)||(v7984=0!=v7981%8);
v7984&&error$$1("invalid key length");var ownerPassword=stringToBytes(JAM.call(dict.get,dict,["O"])),userPassword=stringToBytes(JAM.call(dict.get,dict,["U"])),flags=JAM.call(dict.get,dict,["P"]),revision=JAM.call(dict.get,dict,["R"]),encryptMetadata=!1!==JAM.call(dict.get,dict,["EncryptMetadata"]);fileId=stringToBytes(fileId);var passwordBytes;password&&(passwordBytes=stringToBytes(password));password=fileId;var v7984=passwordBytes,ownerPassword$$0=ownerPassword;passwordBytes=userPassword;userPassword=
flags;fileId=revision;var revision=v7981,ownerPassword=encryptMetadata,defaultPasswordBytes=new Uint8Array([40,191,78,94,78,117,138,65,100,0,78,86,255,250,1,8,46,46,0,182,208,104,62,128,47,12,169,254,100,83,105,122]),v7981=new Uint8Array(100),encryptMetadata=0;if(v7984)for(var flags=Math.min(32,v7984.length),v4347=encryptMetadata<flags;v4347;)v7981[encryptMetadata]=v7984[encryptMetadata],encryptMetadata+=1,v4347=encryptMetadata<flags;v7984=0;for(flags=32>encryptMetadata;flags;)flags=encryptMetadata,
encryptMetadata+=1,v4347=v7984,v7984+=1,v7981[flags]=defaultPasswordBytes[v4347],flags=32>encryptMetadata;v7984=0;flags=ownerPassword$$0.length;for(defaultPasswordBytes=v7984<flags;defaultPasswordBytes;){defaultPasswordBytes=encryptMetadata;encryptMetadata+=1;introspect(JAM.policy.p1)v7981[defaultPasswordBytes]=ownerPassword$$0[v7984];v7984+=1;defaultPasswordBytes=v7984<flags}v7984=encryptMetadata;encryptMetadata+=1;v7981[v7984]=userPassword&255;v7984=encryptMetadata;encryptMetadata+=1;v7981[v7984]=
userPassword>>8&255;v7984=encryptMetadata;encryptMetadata+=1;v7981[v7984]=userPassword>>16&255;v7984=encryptMetadata;encryptMetadata+=1;v7981[v7984]=userPassword>>>24&255;v7984=0;flags=password.length;for(userPassword=v7984<flags;userPassword;){userPassword=encryptMetadata;encryptMetadata+=1;introspect(JAM.policy.p1)v7981[userPassword]=password[v7984];v7984+=1;userPassword=v7984<flags}(v7984=4<=fileId)&&(v7984=!ownerPassword);v7984&&(v7984=encryptMetadata,encryptMetadata+=1,v7981[v7984]=255,v7984=
encryptMetadata,encryptMetadata+=1,v7981[v7984]=255,v7984=encryptMetadata,encryptMetadata+=1,v7981[v7984]=255,v7984=encryptMetadata,encryptMetadata+=1,v7981[v7984]=255);encryptMetadata=JAM.call(calculateMD5,null,[v7981,0,encryptMetadata]);revision>>=3;if(3<=fileId)for(v7984=0,flags=50>v7984;flags;)encryptMetadata=JAM.call(calculateMD5,null,[encryptMetadata,0,revision]),v7984+=1,flags=50>v7984;revision=encryptMetadata.subarray(0,revision);if(3<=fileId){encryptMetadata=32;v7984=0;flags=password.length;
for(fileId=v7984<flags;fileId;){fileId=encryptMetadata;encryptMetadata+=1;introspect(JAM.policy.p1)v7981[fileId]=password[v7984];v7984+=1;fileId=v7984<flags}fileId=JAM.new(ARCFourCipher,[revision]);password=JAM.call(fileId.encryptBlock,fileId,[JAM.call(calculateMD5,null,[v7981,0,encryptMetadata])]);flags=revision.length;v7981=new Uint8Array(flags);v7984=1;for(fileId=19>=v7984;fileId;){fileId=0;for(encryptMetadata=fileId<flags;encryptMetadata;){introspect(JAM.policy.p1)encryptMetadata=revision[fileId];
JAM.set(v7981,fileId,encryptMetadata^v7984);fileId+=1;encryptMetadata=fileId<flags}fileId=JAM.new(ARCFourCipher,[v7981]);password=JAM.call(fileId.encryptBlock,fileId,[password]);v7984+=1;fileId=19>=v7984}}else fileId=JAM.new(ARCFourCipher,[revision]),password=JAM.call(fileId.encryptBlock,fileId,[v7981.subarray(0,32)]);v7984=0;flags=password.length;for(v7981=v7984<flags;v7981;){introspect(JAM.policy.p1)v7981=passwordBytes[v7984];introspect(JAM.policy.p1)fileId=password[v7984];v7981!=fileId&&error$$1("incorrect password");
v7984+=1;v7981=v7984<flags}this.encryptionKey=passwordBytes=revision;4==filter&&(this.cf=filter=JAM.call(dict.get,dict,["CF"]),(filter=JAM.call(dict.get,dict,["StmF"]))||(filter=identityName),this.stmf=filter,(filter=JAM.call(dict.get,dict,["StrF"]))||(filter=identityName),this.strf=filter,dict=JAM.call(dict.get,dict,["EFF"]),dict||(dict=this.strf),this.eff=dict)}function buildObjectKey(num,gen,encryptionKey,isAes){var key=new Uint8Array(encryptionKey.length+9),i,n;i=0;n=encryptionKey.length;for(var v4380=
i<n;v4380;)JAM.set(key,i,JAM.get(encryptionKey,i,JAM.policy.p1)),i+=1,v4380=i<n;n=i;i+=1;key[n]=num&255;n=i;i+=1;key[n]=num>>8&255;n=i;i+=1;key[n]=num>>16&255;num=i;i+=1;key[num]=gen&255;num=i;i+=1;key[num]=gen>>8&255;isAes&&(gen=i,i+=1,key[gen]=115,gen=i,i+=1,key[gen]=65,gen=i,i+=1,key[gen]=108,gen=i,i+=1,key[gen]=84);key=JAM.call(calculateMD5,null,[key,0,i]);return key.subarray(0,Math.min(encryptionKey.length+5,16))}function buildCipherConstructor(cf,name,num,gen,key){function cipherTransformFactoryBuildCipherConstructorAESV2(){return JAM.new(AES128Cipher,
[buildObjectKey(num,gen,key,!0)])}function cipherTransformFactoryBuildCipherConstructorV2(){return JAM.new(ARCFourCipher,[buildObjectKey(num,gen,key,!1)])}function cipherTransformFactoryBuildCipherConstructorNone(){return new NullCipher}cf=JAM.call(cf.get,cf,[name.name]);var cfm;null!=cf&&(cfm=JAM.call(cf.get,cf,["CFM"]));(cf=!cfm)||(cf="None"==cfm.name);if(cf)return cipherTransformFactoryBuildCipherConstructorNone;if("V2"==cfm.name)return cipherTransformFactoryBuildCipherConstructorV2;if("AESV2"==
cfm.name)return cipherTransformFactoryBuildCipherConstructorAESV2;error$$1("Unknown crypto method")}var identityName=JAM.new(Name,["Identity"]);CipherTransformFactory.prototype={createCipherTransform:CipherTransformFactory_createCipherTransform};return CipherTransformFactory}function CipherTransformClosure(){function CipherTransform_decryptString(s){var cipher=new this.stringCipherConstructor;s=stringToBytes(s);s=JAM.call(cipher.decryptBlock,cipher,[s]);return bytesToString(s)}function CipherTransform_createStream(stream){function cipherTransformDecryptStream(data){return JAM.call(cipher.decryptBlock,
cipher,[data])}var cipher=new this.streamCipherConstructor;return JAM.new(DecryptStream,[stream,cipherTransformDecryptStream])}function CipherTransform(stringCipherConstructor,streamCipherConstructor){this.stringCipherConstructor=stringCipherConstructor;this.streamCipherConstructor=streamCipherConstructor}CipherTransform.prototype={createStream:CipherTransform_createStream,decryptString:CipherTransform_decryptString};return CipherTransform}function AES128CipherClosure(){function AES128Cipher_decryptBlock(data){var i,
sourceLength=data.length,buffer=this.buffer,bufferLength=this.bufferPosition;i=0;var v8003=16>bufferLength;for(v8003&&(v8003=i<sourceLength);v8003;)JAM.set(buffer,bufferLength,JAM.get(data,i,JAM.policy.p1)),i+=1,bufferLength+=1,(v8003=16>bufferLength)&&(v8003=i<sourceLength);if(16>bufferLength)return this.bufferLength=bufferLength,new Uint8Array([]);this.iv=buffer;this.buffer=i=new Uint8Array(16);this.bufferLength=0;this.decryptBlock=decryptBlock2;return JAM.call(this.decryptBlock,this,[data.subarray(16)])}
function AES128Cipher(key){var cipherKey=key;key=176;var result=new Uint8Array(key);JAM.call(result.set,result,[cipherKey]);for(var cipherKey=16,i=1,v4409=cipherKey<key;v4409;){v4409=cipherKey-3;introspect(JAM.policy.p1)v4409=result[v4409];var v4404=cipherKey-2;introspect(JAM.policy.p1)v4404=result[v4404];var v4405=cipherKey-1;introspect(JAM.policy.p1)v4405=result[v4405];var v4406=cipherKey-4;introspect(JAM.policy.p1)v4406=result[v4406];introspect(JAM.policy.p1)v4409=s[v4409];introspect(JAM.policy.p1)v4404=
s[v4404];introspect(JAM.policy.p1)v4405=s[v4405];introspect(JAM.policy.p1)v4406=s[v4406];introspect(JAM.policy.p1)var v4407=rcon[i];for(var v4409=v4409^v4407,v4407=0,v4408=4>v4407;v4408;){v4408=cipherKey-16;introspect(JAM.policy.p1)v4408=result[v4408];result[cipherKey]=v4409^=v4408;cipherKey+=1;v4408=cipherKey-16;introspect(JAM.policy.p1)v4408=result[v4408];result[cipherKey]=v4404^=v4408;cipherKey+=1;v4408=cipherKey-16;introspect(JAM.policy.p1)v4408=result[v4408];result[cipherKey]=v4405^=v4408;cipherKey+=
1;v4408=cipherKey-16;introspect(JAM.policy.p1)v4408=result[v4408];result[cipherKey]=v4406^=v4408;cipherKey+=1;v4407+=1;v4408=4>v4407}i+=1;v4409=cipherKey<key}this.key=key=result;this.buffer=key=new Uint8Array(16);this.bufferPosition=0}function decryptBlock2(data){var i,j,sourceLength=data.length,buffer=this.buffer;j=this.bufferPosition;var result=[],iv=this.iv;i=0;for(var v4430=i<sourceLength;v4430;){JAM.set(buffer,j,JAM.get(data,i,JAM.policy.p1));j+=1;if(!(16>j)){var input=buffer;j=this.key;v4430=
new Uint8Array(16);JAM.call(v4430.set,v4430,[input]);for(var i$$0=void 0,k=input=void 0,v=input=k=void 0,input=0,k=160,i$$0=16>input;i$$0;){introspect(JAM.policy.p1)i$$0=v4430[input];introspect(JAM.policy.p1)v=j[k];JAM.set(v4430,input,i$$0^v);input+=1;k+=1;i$$0=16>input}i$$0=9;for(input=1<=i$$0;input;){k=v4430[13];v4430[13]=v4430[9];v4430[9]=v4430[5];v4430[5]=v4430[1];v4430[1]=k;k=v4430[14];input=v4430[10];v4430[14]=v4430[6];v4430[10]=v4430[2];v4430[6]=k;v4430[2]=input;k=v4430[15];input=v4430[11];
v=v4430[7];v4430[15]=v4430[3];v4430[11]=k;v4430[7]=input;v4430[3]=v;input=0;for(k=16>input;k;){introspect(JAM.policy.p1)k=v4430[input];JAM.set(v4430,input,JAM.get(inv_s,k,JAM.policy.p1));input+=1;k=16>input}input=0;k=16*i$$0;for(v=16>input;v;){introspect(JAM.policy.p1)v=v4430[input];introspect(JAM.policy.p1)var v8012=j[k];JAM.set(v4430,input,v^v8012);input+=1;k+=1;v=16>input}input=0;for(k=16>input;k;){introspect(JAM.policy.p1)k=v4430[input];introspect(JAM.policy.p1)k=mix[k];v=input+1;introspect(JAM.policy.p1)v=
v4430[v];introspect(JAM.policy.p1)v=mix[v];v8012=input+2;introspect(JAM.policy.p1)v8012=v4430[v8012];introspect(JAM.policy.p1)v8012=mix[v8012];var v8015=input+3;introspect(JAM.policy.p1)v8015=v4430[v8015];introspect(JAM.policy.p1)v8015=mix[v8015];k=k^v>>>8^v<<24^v8012>>>16^v8012<<16^v8015>>>24^v8015<<8;JAM.set(v4430,input,k>>>24&255);v4430[input+1]=k>>16&255;v4430[input+2]=k>>8&255;v4430[input+3]=k&255;input+=4;k=16>input}i$$0-=1;input=1<=i$$0}k=v4430[13];v4430[13]=v4430[9];v4430[9]=v4430[5];v4430[5]=
v4430[1];v4430[1]=k;k=v4430[14];input=v4430[10];v4430[14]=v4430[6];v4430[10]=v4430[2];v4430[6]=k;v4430[2]=input;k=v4430[15];input=v4430[11];v=v4430[7];v4430[15]=v4430[3];v4430[11]=k;v4430[7]=input;v4430[3]=v;input=0;for(i$$0=16>input;i$$0;){introspect(JAM.policy.p1)i$$0=v4430[input];JAM.set(v4430,input,JAM.get(inv_s,i$$0,JAM.policy.p1));introspect(JAM.policy.p1)i$$0=v4430[input];introspect(JAM.policy.p1)k=j[input];JAM.set(v4430,input,i$$0^k);input+=1;i$$0=16>input}j=0;for(input=16>j;input;){introspect(JAM.policy.p1)input=
v4430[j];introspect(JAM.policy.p1)i$$0=iv[j];JAM.set(v4430,j,input^i$$0);j+=1;input=16>j}iv=buffer;JAM.call(result.push,result,[v4430]);buffer=new Uint8Array(16);j=0}i+=1;v4430=i<sourceLength}this.buffer=buffer;this.bufferLength=j;this.iv=iv;if(0==result.length)return new Uint8Array([]);if(1==result.length)return result[0];sourceLength=new Uint8Array(16*result.length);j=i=0;data=result.length;for(buffer=i<data;buffer;){introspect(JAM.policy.p1)buffer=result[i];JAM.call(sourceLength.set,sourceLength,
[buffer,j]);i+=1;j+=16;buffer=i<data}return sourceLength}var rcon=new Uint8Array([141,1,2,4,8,16,32,64,128,27,54,108,216,171,77,154,47,94,188,99,198,151,53,106,212,179,125,250,239,197,145,57,114,228,211,189,97,194,159,37,74,148,51,102,204,131,29,58,116,232,203,141,1,2,4,8,16,32,64,128,27,54,108,216,171,77,154,47,94,188,99,198,151,53,106,212,179,125,250,239,197,145,57,114,228,211,189,97,194,159,37,74,148,51,102,204,131,29,58,116,232,203,141,1,2,4,8,16,32,64,128,27,54,108,216,171,77,154,47,94,188,99,
198,151,53,106,212,179,125,250,239,197,145,57,114,228,211,189,97,194,159,37,74,148,51,102,204,131,29,58,116,232,203,141,1,2,4,8,16,32,64,128,27,54,108,216,171,77,154,47,94,188,99,198,151,53,106,212,179,125,250,239,197,145,57,114,228,211,189,97,194,159,37,74,148,51,102,204,131,29,58,116,232,203,141,1,2,4,8,16,32,64,128,27,54,108,216,171,77,154,47,94,188,99,198,151,53,106,212,179,125,250,239,197,145,57,114,228,211,189,97,194,159,37,74,148,51,102,204,131,29,58,116,232,203,141]),s=new Uint8Array([99,
124,119,123,242,107,111,197,48,1,103,43,254,215,171,118,202,130,201,125,250,89,71,240,173,212,162,175,156,164,114,192,183,253,147,38,54,63,247,204,52,165,229,241,113,216,49,21,4,199,35,195,24,150,5,154,7,18,128,226,235,39,178,117,9,131,44,26,27,110,90,160,82,59,214,179,41,227,47,132,83,209,0,237,32,252,177,91,106,203,190,57,74,76,88,207,208,239,170,251,67,77,51,133,69,249,2,127,80,60,159,168,81,163,64,143,146,157,56,245,188,182,218,33,16,255,243,210,205,12,19,236,95,151,68,23,196,167,126,61,100,93,
25,115,96,129,79,220,34,42,144,136,70,238,184,20,222,94,11,219,224,50,58,10,73,6,36,92,194,211,172,98,145,149,228,121,231,200,55,109,141,213,78,169,108,86,244,234,101,122,174,8,186,120,37,46,28,166,180,198,232,221,116,31,75,189,139,138,112,62,181,102,72,3,246,14,97,53,87,185,134,193,29,158,225,248,152,17,105,217,142,148,155,30,135,233,206,85,40,223,140,161,137,13,191,230,66,104,65,153,45,15,176,84,187,22]),inv_s=new Uint8Array([82,9,106,213,48,54,165,56,191,64,163,158,129,243,215,251,124,227,57,130,
155,47,255,135,52,142,67,68,196,222,233,203,84,123,148,50,166,194,35,61,238,76,149,11,66,250,195,78,8,46,161,102,40,217,36,178,118,91,162,73,109,139,209,37,114,248,246,100,134,104,152,22,212,164,92,204,93,101,182,146,108,112,72,80,253,237,185,218,94,21,70,87,167,141,157,132,144,216,171,0,140,188,211,10,247,228,88,5,184,179,69,6,208,44,30,143,202,63,15,2,193,175,189,3,1,19,138,107,58,145,17,65,79,103,220,234,151,242,207,206,240,180,230,115,150,172,116,34,231,173,53,133,226,249,55,232,28,117,223,110,
71,241,26,113,29,41,197,137,111,183,98,14,170,24,190,27,252,86,62,75,198,210,121,32,154,219,192,254,120,205,90,244,31,221,168,51,136,7,199,49,177,18,16,89,39,128,236,95,96,81,127,169,25,181,74,13,45,229,122,159,147,201,156,239,160,224,59,77,174,42,245,176,200,235,187,60,131,83,153,97,23,43,4,126,186,119,214,38,225,105,20,99,85,33,12,125]),mix=new Uint32Array([0,235474187,470948374,303765277,941896748,908933415,607530554,708780849,1883793496,2118214995,1817866830,1649639237,1215061108,1181045119,1417561698,
1517767529,3767586992,4003061179,4236429990,4069246893,3635733660,3602770327,3299278474,3400528769,2430122216,2664543715,2362090238,2193862645,2835123396,2801107407,3035535058,3135740889,3678124923,3576870512,3341394285,3374361702,3810496343,3977675356,4279080257,4043610186,2876494627,2776292904,3076639029,3110650942,2472011535,2640243204,2403728665,2169303058,1001089995,899835584,666464733,699432150,59727847,226906860,530400753,294930682,1273168787,1172967064,1475418501,1509430414,1942435775,2110667444,
1876241833,1641816226,2910219766,2743034109,2976151520,3211623147,2505202138,2606453969,2302690252,2269728455,3711829422,3543599269,3240894392,3475313331,3843699074,3943906441,4178062228,4144047775,1306967366,1139781709,1374988112,1610459739,1975683434,2076935265,1775276924,1742315127,1034867998,866637845,566021896,800440835,92987698,193195065,429456164,395441711,1984812685,2017778566,1784663195,1683407248,1315562145,1080094634,1383856311,1551037884,101039829,135050206,437757123,337553864,1042385657,
807962610,573804783,742039012,2531067453,2564033334,2328828971,2227573024,2935566865,2700099354,3001755655,3168937228,3868552805,3902563182,4203181171,4102977912,3736164937,3501741890,3265478751,3433712980,1106041591,1340463100,1576976609,1408749034,2043211483,2009195472,1708848333,1809054150,832877231,1068351396,766945465,599762354,159417987,126454664,361929877,463180190,2709260871,2943682380,3178106961,3009879386,2572697195,2538681184,2236228733,2336434550,3509871135,3745345300,3441850377,3274667266,
3910161971,3877198648,4110568485,4211818798,2597806476,2497604743,2261089178,2295101073,2733856160,2902087851,3202437046,2968011453,3936291284,3835036895,4136440770,4169408201,3535486456,3702665459,3467192302,3231722213,2051518780,1951317047,1716890410,1750902305,1113818384,1282050075,1584504582,1350078989,168810852,67556463,371049330,404016761,841739592,1008918595,775550814,540080725,3969562369,3801332234,4035489047,4269907996,3569255213,3669462566,3366754619,3332740144,2631065433,2463879762,2160117071,
2395588676,2767645557,2868897406,3102011747,3069049960,202008497,33778362,270040487,504459436,875451293,975658646,675039627,641025152,2084704233,1917518562,1615861247,1851332852,1147550661,1248802510,1484005843,1451044056,933301370,967311729,733156972,632953703,260388950,25965917,328671808,496906059,1206477858,1239443753,1543208500,1441952575,2144161806,1908694277,1675577880,1842759443,3610369226,3644379585,3408119516,3307916247,4011190502,3776767469,4077384432,4245618683,2809771154,2842737049,3144396420,
3043140495,2673705150,2438237621,2203032232,2370213795]);AES128Cipher.prototype={decryptBlock:AES128Cipher_decryptBlock};return AES128Cipher}function NullCipherClosure(){function NullCipher_decryptBlock(data){return data}function NullCipher(){}NullCipher.prototype={decryptBlock:NullCipher_decryptBlock};return NullCipher}function calculateMD5Closure(){function hash(data,offset,length){var h0=1732584193,h1=-271733879,h2=-1732584194,h3=271733878,paddedLength=length+72&-64,padded=new Uint8Array(paddedLength),
i;i=0;for(var v4443=i<length;v4443;)v4443=offset,offset+=1,JAM.set(padded,i,JAM.get(data,v4443,JAM.policy.p1)),i+=1,v4443=i<length;data=i;i+=1;padded[data]=128;data=paddedLength-8;for(offset=i<data;offset;)offset=i,i+=1,padded[offset]=0,offset=i<data;data=i;i+=1;padded[data]=length<<3&255;data=i;i+=1;padded[data]=length>>5&255;data=i;i+=1;padded[data]=length>>13&255;data=i;i+=1;padded[data]=length>>21&255;data=i;i+=1;padded[data]=length>>>29&255;length=i;i+=1;padded[length]=0;length=i;i+=1;padded[length]=
0;padded[i]=0;length=new Int32Array(16);i=0;for(data=i<paddedLength;data;){data=0;for(offset=16>data;offset;){introspect(JAM.policy.p1)offset=padded[i];v4443=i+1;introspect(JAM.policy.p1)v4443=padded[v4443];offset|=v4443<<8;v4443=i+2;introspect(JAM.policy.p1)v4443=padded[v4443];offset|=v4443<<16;v4443=i+3;introspect(JAM.policy.p1)v4443=padded[v4443];JAM.set(length,data,offset|v4443<<24);data+=1;i+=4;offset=16>data}var a=h0;offset=h1;var v4443=h2,d=h3,f,g;data=0;for(var v4472=64>data;v4472;){16>data?
(f=offset&v4443|~offset&d,g=data):32>data?(f=d&offset|~d&v4443,g=5*data+1&15):48>data?(f=offset^v4443^d,g=3*data+5&15):(f=v4443^(offset|~d),g=7*data&15);v4472=d;d=a+f;introspect(JAM.policy.p1)a=k[data];d+=a;introspect(JAM.policy.p1)g=length[g];g=d+g|0;introspect(JAM.policy.p1)a=r[data];d=v4443;v4443=offset;offset=offset+(g<<a|g>>>32-a)|0;a=v4472;data+=1;v4472=64>data}h0=h0+a|0;h1=h1+offset|0;h2=h2+v4443|0;h3=h3+d|0;data=i<paddedLength}return new Uint8Array([h0&255,h0>>8&255,h0>>16&255,h0>>>24&255,
h1&255,h1>>8&255,h1>>16&255,h1>>>24&255,h2&255,h2>>8&255,h2>>16&255,h2>>>24&255,h3&255,h3>>8&255,h3>>16&255,h3>>>24&255])}var r=new Uint8Array([7,12,17,22,7,12,17,22,7,12,17,22,7,12,17,22,5,9,14,20,5,9,14,20,5,9,14,20,5,9,14,20,4,11,16,23,4,11,16,23,4,11,16,23,4,11,16,23,6,10,15,21,6,10,15,21,6,10,15,21,6,10,15,21]),k=new Int32Array([-680876936,-389564586,606105819,-1044525330,-176418897,1200080426,-1473231341,-45705983,1770035416,-1958414417,-42063,-1990404162,1804603682,-40341101,-1502002290,1236535329,
-165796510,-1069501632,643717713,-373897302,-701558691,38016083,-660478335,-405537848,568446438,-1019803690,-187363961,1163531501,-1444681467,-51403784,1735328473,-1926607734,-378558,-2022574463,1839030562,-35309556,-1530992060,1272893353,-155497632,-1094730640,681279174,-358537222,-722521979,76029189,-640364487,-421815835,530742520,-995338651,-198630844,1126891415,-1416354905,-57434055,1700485571,-1894986606,-1051523,-2054922799,1873313359,-30611744,-1560198380,1309151649,-145523070,-1120210379,
718787259,-343485551]);return hash}function ARCFourCipherClosure(){function ARCFourCipher_encryptBlock(data){var i,n=data.length,tmp,tmp2,a=this.a,b=this.b,s=this.s,output=new Uint8Array(n);i=0;for(var v4485=i<n;v4485;){a=a+1&255;introspect(JAM.policy.p1)tmp=s[a];b=b+tmp&255;introspect(JAM.policy.p1)tmp2=s[b];JAM.set(s,a,tmp2);JAM.set(s,b,tmp);introspect(JAM.policy.p1)v4485=data[i];tmp=tmp+tmp2&255;introspect(JAM.policy.p1)tmp=s[tmp];JAM.set(output,i,v4485^tmp);i+=1;v4485=i<n}this.a=a;this.b=b;return output}
function ARCFourCipher(key){this.b=this.a=0;var s=new Uint8Array(256),i,j=0,tmp,keyLength=key.length;i=0;for(tmp=256>i;tmp;)JAM.set(s,i,i),i+=1,tmp=256>i;i=0;for(tmp=256>i;tmp;){introspect(JAM.policy.p1)tmp=s[i];var j=j+tmp,v21903=i%keyLength;introspect(JAM.policy.p1)v21903=key[v21903];j=j+v21903&255;JAM.set(s,i,s[j]);s[j]=tmp;i+=1;tmp=256>i}this.s=s}ARCFourCipher.prototype={encryptBlock:ARCFourCipher_encryptBlock};ARCFourCipher.prototype.decryptBlock=ARCFourCipher.prototype.encryptBlock;return ARCFourCipher}
function LabCSClosure(){function LabCS_isDefaultDecode(decodeMap){var v8063=0===decodeMap[0];v8063&&(v8063=100===decodeMap[1])&&(v8063=decodeMap[2]===this.amin)&&(v8063=decodeMap[3]===this.amax)&&(v8063=decodeMap[4]===this.bmin)&&(v8063=decodeMap[5]===this.bmax);return v8063?!0:!1}function LabCS_getRgbBuffer(input,bits){if(8==bits)return input;var i,length=input.length/3,rgbBuf=new Uint8Array(length),j=0;i=0;for(var v4498=i<length;v4498;){introspect(JAM.policy.p1)v4498=input[i];var v21906=i+1;introspect(JAM.policy.p1)v21906=
input[v21906];var v21907=i+2;introspect(JAM.policy.p1)v21907=input[v21907];v4498=JAM.call(this.getRgb,this,[[v4498,v21906,v21907]]);v21906=j;j+=1;rgbBuf[v21906]=v4498[0];v21906=j;j+=1;rgbBuf[v21906]=v4498[1];v21906=j;j+=1;rgbBuf[v21906]=v4498[2];i+=1;v4498=i<length}return rgbBuf}function LabCS_getRgb(color){var Ls=color[0],as=color[1];color=color[2];as=as>this.amax?this.amax:as;as=as<this.amin?this.amin:as;color=color>this.bmax?this.bmax:color;color=color<this.bmin?this.bmin:color;Ls=(Ls+16)/116;
as=Ls+as/500;color=Ls-color/200;as=this.XW*g(as);Ls=this.YW*g(Ls);color=this.ZW*g(color);var XYZtoRGB=[3.240479,-1.53715,-0.498535,-0.969256,1.875992,0.041556,0.055648,-0.204043,1.057311];return JAM.call(Util.apply3dTransform,Util,[XYZtoRGB,[as,Ls,color]])}function LabCS(whitePoint,blackPoint,range){this.name="Lab";this.numComps=3;this.defaultColor=[0,0,0];whitePoint||error$$1("WhitePoint missing - required for color space Lab");blackPoint||(blackPoint=[0,0,0]);range||(range=[-100,100,-100,100]);
this.XW=whitePoint[0];this.YW=whitePoint[1];this.ZW=whitePoint[2];this.amin=range[0];this.amax=range[1];this.bmin=range[2];this.bmax=range[3];this.XB=blackPoint[0];this.YB=blackPoint[1];this.ZB=blackPoint[2];whitePoint=0>this.XW;whitePoint||(whitePoint=0>this.ZW)||(whitePoint=1!==this.YW);whitePoint&&error$$1("Invalid WhitePoint components, no fallback available");whitePoint=0>this.XB;whitePoint||(whitePoint=0>this.YB)||(whitePoint=0>this.ZB);whitePoint&&(warn("Invalid BlackPoint, falling back to default"),
this.XB=this.YB=this.ZB=0);(whitePoint=this.amin>this.amax)||(whitePoint=this.bmin>this.bmax);whitePoint&&(warn("Invalid Range, falling back to defaults"),this.amin=-100,this.amax=100,this.bmin=-100,this.bmax=100)}function g(x){return x>=6/29?x*x*x:108/841*(x-4/29)}LabCS.prototype={getRgb:LabCS_getRgb,getRgbBuffer:LabCS_getRgbBuffer,isDefaultDecode:LabCS_isDefaultDecode};return LabCS}function DeviceCmykCSClosure(){function DeviceCmykCS_isDefaultDecode(decodeMap){return JAM.call(ColorSpace.isDefaultDecode,
ColorSpace,[decodeMap,this.numComps])}function DeviceCmykCS_getRgbBuffer(colorBuf,bits){for(var scale=1/((1<<bits)-1),length=colorBuf.length/4,rgbBuf=new Uint8Array(3*length),rgbBufPos=0,colorBufPos=0,i=0,v4532=i<length;v4532;){for(var cmyk=[],v4532=0,v4528=4>v4532;v4528;){v4528=colorBufPos;colorBufPos+=1;introspect(JAM.policy.p1)v4528=colorBuf[v4528];JAM.call(cmyk.push,cmyk,[scale*v4528]);v4532+=1;v4528=4>v4532}cmyk=JAM.call(this.getRgb,this,[cmyk]);v4532=0;for(v4528=3>v4532;v4528;){var v4528=rgbBuf,
v4530=rgbBufPos,rgbBufPos=rgbBufPos+1;introspect(JAM.policy.p1)var v21924=cmyk[v4532];v21924=Math.round(255*v21924);v4528[v4530]=v21924;v4532+=1;v4528=3>v4532}i+=1;v4532=i<length}return rgbBuf}function DeviceCmykCS_getRgb(color){var c=color[0],m=color[1],y=color[2];color=color[3];c=c*(1-color)+color;m=m*(1-color)+color;y=y*(1-color)+color;c=1-c;m=1-m;y=1-y;return[c,m,y]}function DeviceCmykCS(){this.name="DeviceCMYK";this.numComps=4;this.defaultColor=[0,0,0,1]}DeviceCmykCS.prototype={getRgb:DeviceCmykCS_getRgb,
getRgbBuffer:DeviceCmykCS_getRgbBuffer,isDefaultDecode:DeviceCmykCS_isDefaultDecode};return DeviceCmykCS}function DeviceRgbCSClosure(){function DeviceRgbCS_isDefaultDecode(decodeMap){return JAM.call(ColorSpace.isDefaultDecode,ColorSpace,[decodeMap,this.numComps])}function DeviceRgbCS_getRgbBuffer(input,bits){if(8==bits)return input;var scale=255/((1<<bits)-1),i,length=input.length,rgbBuf=new Uint8Array(length);i=0;for(var v4540=i<length;v4540;){introspect(JAM.policy.p1)v4540=input[i];JAM.set(rgbBuf,
i,scale*v4540|0);i+=1;v4540=i<length}return rgbBuf}function DeviceRgbCS_getRgb(color){return color}function DeviceRgbCS(){this.name="DeviceRGB";this.numComps=3;this.defaultColor=[0,0,0]}DeviceRgbCS.prototype={getRgb:DeviceRgbCS_getRgb,getRgbBuffer:DeviceRgbCS_getRgbBuffer,isDefaultDecode:DeviceRgbCS_isDefaultDecode};return DeviceRgbCS}function DeviceGrayCSClosure(){function DeviceGrayCS_isDefaultDecode(decodeMap){return JAM.call(ColorSpace.isDefaultDecode,ColorSpace,[decodeMap,this.numComps])}function DeviceGrayCS_getRgbBuffer(input,
bits){for(var scale=255/((1<<bits)-1),length=input.length,rgbBuf=new Uint8Array(3*length),i=0,j=0,v4548=i<length;v4548;){introspect(JAM.policy.p1)v4548=input[i];var v4548=scale*v4548|0,v4545=j,j=j+1;rgbBuf[v4545]=v4548;v4545=j;j+=1;rgbBuf[v4545]=v4548;v4545=j;j+=1;rgbBuf[v4545]=v4548;i+=1;v4548=i<length}return rgbBuf}function DeviceGrayCS_getRgb(color){color=color[0];return[color,color,color]}function DeviceGrayCS(){this.name="DeviceGray";this.numComps=1;this.defaultColor=[0]}DeviceGrayCS.prototype=
{getRgb:DeviceGrayCS_getRgb,getRgbBuffer:DeviceGrayCS_getRgbBuffer,isDefaultDecode:DeviceGrayCS_isDefaultDecode};return DeviceGrayCS}function IndexedCSClosure(){function IndexedCS_isDefaultDecode(decodeMap){return!0}function IndexedCS_getRgbBuffer(input){for(var base=this.base,numComps=base.numComps,lookup=this.lookup,length=input.length,baseBuf=new Uint8Array(length*numComps),baseBufPos=0,i=0,v4553=i<length;v4553;){introspect(JAM.policy.p1)v4553=input[i];for(var v4553=v4553*numComps,j=0,v4552=j<
numComps;v4552;)v4552=baseBufPos,baseBufPos+=1,baseBuf[v4552]=lookup[v4553+j],j+=1,v4552=j<numComps;i+=1;v4553=i<length}return JAM.call(base.getRgbBuffer,base,[baseBuf,8])}function IndexedCS_getRgb(color){var numComps=this.base.numComps,start=color[0]*numComps;color=[];for(var i=start,numComps=start+numComps,start=i<numComps;start;){start=this.lookup;introspect(JAM.policy.p1)start=start[i];JAM.call(color.push,color,[start]);i+=1;start=i<numComps}i=this.base;return JAM.call(i.getRgb,i,[color])}function IndexedCS(base,
highVal,lookup){this.name="Indexed";this.numComps=1;this.defaultColor=[0];this.base=base;this.highVal=highVal;base=base.numComps;base*=highVal;highVal=new Uint8Array(base);if(isStream(lookup))lookup=JAM.call(lookup.getBytes,lookup,[base]),JAM.call(highVal.set,highVal,[lookup]);else if(isString(lookup))for(var i=0,v4561=i<base;v4561;){var v4561=highVal,v4560=i,v23491=lookup.charCodeAt(i);v4561[v4560]=v23491;i+=1;v4561=i<base}else error$$1("Unrecognized lookup table: "+lookup);this.lookup=highVal}IndexedCS.prototype=
{getRgb:IndexedCS_getRgb,getRgbBuffer:IndexedCS_getRgbBuffer,isDefaultDecode:IndexedCS_isDefaultDecode};return IndexedCS}function PatternCSClosure(){function PatternCS(baseCS){this.name="Pattern";this.base=baseCS}PatternCS.prototype={};return PatternCS}function AlternateCSClosure(){function AlternateCS_isDefaultDecode(decodeMap){return JAM.call(ColorSpace.isDefaultDecode,ColorSpace,[decodeMap,this.numComps])}function AlternateCS_getRgbBuffer(input,bits){for(var tintFn=this.tintFn,base=this.base,scale=
1/((1<<bits)-1),length=input.length,pos=0,baseNumComps=base.numComps,baseBuf=new Uint8Array(baseNumComps*length),numComps=this.numComps,scaled=[],i=0,v4572=i<length;v4572;){for(var v4572=0,v4569=v4572<numComps;v4569;){v4569=i+v4572;introspect(JAM.policy.p1)v4569=input[v4569];scaled[v4572]=v4569*scale;v4572+=1;v4569=v4572<numComps}for(var v4572=JAM.call(tintFn,null,[scaled]),v4569=0,v4571=v4569<baseNumComps;v4571;){v4571=pos;pos+=1;introspect(JAM.policy.p1)var v8093=v4572[v4569];baseBuf[v4571]=255*
v8093;v4569+=1;v4571=v4569<baseNumComps}i+=numComps;v4572=i<length}return JAM.call(base.getRgbBuffer,base,[baseBuf,8])}function AlternateCS_getRgb(color){color=JAM.call(this.tintFn,this,[color]);var v4573=this.base;return JAM.call(v4573.getRgb,v4573,[color])}function AlternateCS(numComps,base,tintFn){this.name="Alternate";this.numComps=numComps;this.defaultColor=[];for(var i=0,v4575=i<numComps;v4575;)v4575=this.defaultColor,JAM.call(v4575.push,v4575,[1]),i+=1,v4575=i<numComps;this.base=base;this.tintFn=
tintFn}AlternateCS.prototype={getRgb:AlternateCS_getRgb,getRgbBuffer:AlternateCS_getRgbBuffer,isDefaultDecode:AlternateCS_isDefaultDecode};return AlternateCS}function ColorSpaceClosure(){function ColorSpace_isDefaultDecode(decode,n){if(!decode)return!0;if(2*n!==decode.length)return JAM.call(warning,null,["The decode map is not the correct length"]),!0;for(var i=0,ii=decode.length,v4579=i<ii;v4579;){introspect(JAM.policy.p1)v4579=decode[i];v4579=0!=v4579;if(!v4579){v4579=i+1;introspect(JAM.policy.p1)v4579=
decode[v4579];v4579=1!=v4579}if(v4579)return!1;i+=2;v4579=i<ii}return!0}function ColorSpace_parseToIR(cs,xref,res){if(isName(cs)){var colorSpaces=JAM.call(res.get,res,["ColorSpace"]);isDict(colorSpaces)&&(colorSpaces=JAM.call(colorSpaces.get,colorSpaces,[cs.name]))&&(cs=colorSpaces)}cs=JAM.call(xref.fetchIfRef,xref,[cs]);if(isName(cs))switch(this.mode=colorSpaces=cs.name,colorSpaces){case "DeviceGray":case "G":return"DeviceGrayCS";case "DeviceRGB":case "RGB":return"DeviceRgbCS";case "DeviceCMYK":case "CMYK":return"DeviceCmykCS";
case "Pattern":return["PatternCS",null];default:error$$1("unrecognized colorspace "+colorSpaces)}else if(isArray(cs))switch(this.mode=colorSpaces=cs[0].name,colorSpaces){case "DeviceGray":case "G":return"DeviceGrayCS";case "DeviceRGB":case "RGB":return"DeviceRgbCS";case "DeviceCMYK":case "CMYK":return"DeviceCmykCS";case "CalGray":return"DeviceGrayCS";case "CalRGB":return"DeviceRgbCS";case "ICCBased":xref=JAM.call(xref.fetchIfRef,xref,[cs[1]]);xref=xref.dict;colorSpaces=JAM.call(xref.get,xref,["N"]);
if(1==colorSpaces)return"DeviceGrayCS";if(3==colorSpaces)return"DeviceRgbCS";if(4==colorSpaces)return"DeviceCmykCS";break;case "Pattern":return(cs=cs[1])&&(cs=JAM.call(ColorSpace.parseToIR,ColorSpace,[cs,xref,res])),["PatternCS",cs];case "Indexed":case "I":return res=JAM.call(ColorSpace.parseToIR,ColorSpace,[cs[1],xref,res]),colorSpaces=cs[2]+1,xref=JAM.call(xref.fetchIfRef,xref,[cs[3]]),["IndexedCS",res,colorSpaces,xref];case "Separation":case "DeviceN":var name=cs[1],colorSpaces=1;isName(name)?
colorSpaces=1:isArray(name)&&(colorSpaces=name.length);res=JAM.call(ColorSpace.parseToIR,ColorSpace,[cs[2],xref,res]);xref=JAM.call(PDFFunction.getIR,PDFFunction,[xref,JAM.call(xref.fetchIfRef,xref,[cs[3]])]);return["AlternateCS",colorSpaces,res,xref];case "Lab":return xref=cs[1].getAll(),["LabCS",xref];default:error$$1('unimplemented color space object "'+colorSpaces+'"')}else error$$1('unrecognized color space object: "'+cs+'"');return null}function ColorSpace_fromIR(IR){var v4601;v4601=isArray(IR)?
IR[0]:IR;switch(v4601){case "DeviceGrayCS":return new DeviceGrayCS;case "DeviceRgbCS":return new DeviceRgbCS;case "DeviceCmykCS":return new DeviceCmykCS;case "PatternCS":return(IR=IR[1])&&(IR=JAM.call(ColorSpace.fromIR,ColorSpace,[IR])),JAM.new(PatternCS,[IR]);case "IndexedCS":v4601=IR[1];var hiVal=IR[2];IR=IR[3];return JAM.new(IndexedCS,[JAM.call(ColorSpace.fromIR,ColorSpace,[v4601]),hiVal,IR]);case "AlternateCS":return v4601=IR[1],hiVal=IR[2],IR=IR[3],JAM.new(AlternateCS,[v4601,JAM.call(ColorSpace.fromIR,
ColorSpace,[hiVal]),JAM.call(PDFFunction.fromIR,PDFFunction,[IR])]);case "LabCS":return v4601=IR[1].WhitePoint,hiVal=IR[1].BlackPoint,IR=IR[1].Range,JAM.new(LabCS,[v4601,hiVal,IR]);default:error$$1("Unkown name "+v4601)}return null}function ColorSpace_parse(cs,xref,res){cs=JAM.call(ColorSpace.parseToIR,ColorSpace,[cs,xref,res]);return cs instanceof AlternateCS?cs:JAM.call(ColorSpace.fromIR,ColorSpace,[cs])}function ColorSpace_getRgbBuffer(input){error$$1("Should not call ColorSpace.getRgbBuffer: "+
input)}function ColorSpace_getRgb(color){error$$1("Should not call ColorSpace.getRgb: "+color)}function ColorSpace(){error$$1("should not call ColorSpace constructor")}ColorSpace.prototype={getRgb:ColorSpace_getRgb,getRgbBuffer:ColorSpace_getRgbBuffer};ColorSpace.parse=ColorSpace_parse;ColorSpace.fromIR=ColorSpace_fromIR;ColorSpace.parseToIR=ColorSpace_parseToIR;ColorSpace.isDefaultDecode=ColorSpace_isDefaultDecode;return ColorSpace}function PostScriptLexerClosure(){function PostScriptLexer_getNumber(ch){for(var str=
ch,stream=this.stream;;){ch=stream.lookChar();var v21928="0"<=ch;v21928&&(v21928="9">=ch);v21928||(v21928="-"==ch)||(v21928="."==ch);if(v21928)str+=ch;else break;stream.skip()}ch=parseFloat(str);isNaN(ch)&&error$$1("Invalid floating point number: "+ch);return ch}function PostScriptLexer_getToken(){for(var ch,comment=!1,stream=this.stream;;){if(!(ch=stream.getChar()))return EOF;if(comment){var v8103="\n"==ch;v8103||(v8103="\r"==ch);v8103&&(comment=!1)}else if("%"==ch)comment=!0;else if(!JAM.call(Lexer.isSpace,
Lexer,[ch]))break}switch(ch){case "0":case "1":case "2":case "3":case "4":case "5":case "6":case "7":case "8":case "9":case "+":case "-":case ".":return JAM.new(PostScriptToken,[PostScriptTokenTypes.NUMBER,JAM.call(this.getNumber,this,[ch])]);case "{":return PostScriptToken.LBRACE;case "}":return PostScriptToken.RBRACE}for(comment=ch.toLowerCase();;){ch=stream.lookChar();if(null===ch)break;ch=ch.toLowerCase();(v8103="a"<=ch)&&(v8103="z">=ch);if(v8103)comment+=ch;else break;stream.skip()}switch(comment){case "if":return PostScriptToken.IF;
case "ifelse":return PostScriptToken.IFELSE;default:return JAM.call(PostScriptToken.getOperator,PostScriptToken,[comment])}}function PostScriptLexer(stream){this.stream=stream}PostScriptLexer.prototype={getToken:PostScriptLexer_getToken,getNumber:PostScriptLexer_getNumber};return PostScriptLexer}function PostScriptTokenClosure(){function PostScriptToken_getOperator(op){introspect(JAM.policy.p1)var opValue=opCache[op];if(opValue)return opValue;var opValue=opCache,v4624=op;op=new PostScriptToken(PostScriptTokenTypes.OPERATOR,
op);return JAM.set(opValue,v4624,op)}function PostScriptToken(type,value){this.type=type;this.value=value}var opCache={};PostScriptToken.getOperator=PostScriptToken_getOperator;var v4625=PostScriptToken,v23493=new PostScriptToken(PostScriptTokenTypes.LBRACE,"{");v4625.LBRACE=v23493;v4625=PostScriptToken;v23493=new PostScriptToken(PostScriptTokenTypes.RBRACE,"}");v4625.RBRACE=v23493;v4625=PostScriptToken;v23493=new PostScriptToken(PostScriptTokenTypes.IF,"IF");v4625.IF=v23493;v4625=PostScriptToken;
v23493=new PostScriptToken(PostScriptTokenTypes.IFELSE,"IFELSE");v4625.IFELSE=v23493;return PostScriptToken}function PostScriptParserClosure(){function PostScriptParser_parseCondition(){var conditionLocation=this.operators.length,v4630=this.operators;JAM.call(v4630.push,v4630,[null,null]);this.parseBlock();JAM.call(this.expect,this,[PostScriptTokenTypes.RBRACE]);if(JAM.call(this.accept,this,[PostScriptTokenTypes.IF]))JAM.set(this.operators,conditionLocation,this.operators.length),JAM.set(this.operators,
conditionLocation+1,"jz");else if(JAM.call(this.accept,this,[PostScriptTokenTypes.LBRACE])){var v4630=this.operators.length,v4636=this.operators;JAM.call(v4636.push,v4636,[null,null]);v4636=this.operators.length;this.parseBlock();JAM.call(this.expect,this,[PostScriptTokenTypes.RBRACE]);JAM.call(this.expect,this,[PostScriptTokenTypes.IFELSE]);JAM.set(this.operators,v4630,this.operators.length);JAM.set(this.operators,v4630+1,"j");JAM.set(this.operators,conditionLocation,v4636);JAM.set(this.operators,
conditionLocation+1,"jz")}else error$$1("PS Function: error parsing conditional.")}function PostScriptParser_parseBlock(){for(;;)if(JAM.call(this.accept,this,[PostScriptTokenTypes.NUMBER])){var v4648=this.operators;JAM.call(v4648.push,v4648,[this.prev.value])}else if(JAM.call(this.accept,this,[PostScriptTokenTypes.OPERATOR]))v4648=this.operators,JAM.call(v4648.push,v4648,[this.prev.value]);else if(JAM.call(this.accept,this,[PostScriptTokenTypes.LBRACE]))this.parseCondition();else break}function PostScriptParser_parse(){this.nextToken();
JAM.call(this.expect,this,[PostScriptTokenTypes.LBRACE]);this.parseBlock();JAM.call(this.expect,this,[PostScriptTokenTypes.RBRACE]);return this.operators}function PostScriptParser_expect(type){if(JAM.call(this.accept,this,[type]))return!0;error$$1("Unexpected symbol: found "+this.token.type+" expected "+type+".")}function PostScriptParser_accept(type){return this.token.type==type?(this.nextToken(),!0):!1}function PostScriptParser_nextToken(){this.prev=this.token;var v23497=this.lexer.getToken();this.token=
v23497}function PostScriptParser(lexer){this.lexer=lexer;this.operators=[]}PostScriptParser.prototype={nextToken:PostScriptParser_nextToken,accept:PostScriptParser_accept,expect:PostScriptParser_expect,parse:PostScriptParser_parse,parseBlock:PostScriptParser_parseBlock,parseCondition:PostScriptParser_parseCondition};return PostScriptParser}function PostScriptEvaluatorClosure(){function PostScriptEvaluator_execute(initialStack){initialStack=JAM.new(PostScriptStack,[initialStack]);var counter=0,operators=
this.operators,length=operators.length,operator,b;for(operator=counter<length;operator;){operator=counter;counter+=1;introspect(JAM.policy.p1)operator=operators[operator];if("number"==typeof operator)JAM.call(initialStack.push,initialStack,[operator]);else switch(operator){case "jz":b=initialStack.pop();(operator=initialStack.pop())||(counter=b);break;case "j":counter=operator=initialStack.pop();break;case "abs":operator=initialStack.pop();JAM.call(initialStack.push,initialStack,[Math.abs(operator)]);
break;case "add":b=initialStack.pop();operator=initialStack.pop();JAM.call(initialStack.push,initialStack,[operator+b]);break;case "and":b=initialStack.pop();operator=initialStack.pop();var v8123=isBool(operator);v8123&&(v8123=isBool(b));v8123?JAM.call(initialStack.push,initialStack,[operator&&b]):JAM.call(initialStack.push,initialStack,[operator&b]);break;case "atan":operator=initialStack.pop();JAM.call(initialStack.push,initialStack,[Math.atan(operator)]);break;case "bitshift":b=initialStack.pop();
operator=initialStack.pop();0<operator?JAM.call(initialStack.push,initialStack,[operator<<b]):JAM.call(initialStack.push,initialStack,[operator>>b]);break;case "ceiling":operator=initialStack.pop();JAM.call(initialStack.push,initialStack,[Math.ceil(operator)]);break;case "copy":operator=initialStack.pop();JAM.call(initialStack.copy,initialStack,[operator]);break;case "cos":operator=initialStack.pop();JAM.call(initialStack.push,initialStack,[Math.cos(operator)]);break;case "cvi":operator=initialStack.pop()|
0;JAM.call(initialStack.push,initialStack,[operator]);break;case "cvr":break;case "div":b=initialStack.pop();operator=initialStack.pop();JAM.call(initialStack.push,initialStack,[operator/b]);break;case "dup":JAM.call(initialStack.copy,initialStack,[1]);break;case "eq":b=initialStack.pop();operator=initialStack.pop();JAM.call(initialStack.push,initialStack,[operator==b]);break;case "exch":JAM.call(initialStack.roll,initialStack,[2,1]);break;case "exp":b=initialStack.pop();operator=initialStack.pop();
JAM.call(initialStack.push,initialStack,[Math.pow(operator,b)]);break;case "false":JAM.call(initialStack.push,initialStack,[!1]);break;case "floor":operator=initialStack.pop();JAM.call(initialStack.push,initialStack,[Math.floor(operator)]);break;case "ge":b=initialStack.pop();operator=initialStack.pop();JAM.call(initialStack.push,initialStack,[operator>=b]);break;case "gt":b=initialStack.pop();operator=initialStack.pop();JAM.call(initialStack.push,initialStack,[operator>b]);break;case "idiv":b=initialStack.pop();
operator=initialStack.pop();JAM.call(initialStack.push,initialStack,[operator/b|0]);break;case "index":operator=initialStack.pop();JAM.call(initialStack.index,initialStack,[operator]);break;case "le":b=initialStack.pop();operator=initialStack.pop();JAM.call(initialStack.push,initialStack,[operator<=b]);break;case "ln":operator=initialStack.pop();JAM.call(initialStack.push,initialStack,[JAM.call(Math.log,Math,[operator])]);break;case "log":operator=initialStack.pop();JAM.call(initialStack.push,initialStack,
[JAM.call(Math.log,Math,[operator])/Math.LN10]);break;case "lt":b=initialStack.pop();operator=initialStack.pop();JAM.call(initialStack.push,initialStack,[operator<b]);break;case "mod":b=initialStack.pop();operator=initialStack.pop();JAM.call(initialStack.push,initialStack,[operator%b]);break;case "mul":b=initialStack.pop();operator=initialStack.pop();JAM.call(initialStack.push,initialStack,[operator*b]);break;case "ne":b=initialStack.pop();operator=initialStack.pop();JAM.call(initialStack.push,initialStack,
[operator!=b]);break;case "neg":initialStack.pop();JAM.call(initialStack.push,initialStack,[-b]);break;case "not":operator=initialStack.pop();(v8123=isBool(operator))&&(v8123=isBool(b));v8123?JAM.call(initialStack.push,initialStack,[operator&&b]):JAM.call(initialStack.push,initialStack,[operator&b]);break;case "or":b=initialStack.pop();operator=initialStack.pop();(v8123=isBool(operator))&&(v8123=isBool(b));v8123?JAM.call(initialStack.push,initialStack,[operator||b]):JAM.call(initialStack.push,initialStack,
[operator|b]);break;case "pop":initialStack.pop();break;case "roll":b=initialStack.pop();operator=initialStack.pop();JAM.call(initialStack.roll,initialStack,[operator,b]);break;case "round":operator=initialStack.pop();JAM.call(initialStack.push,initialStack,[Math.round(operator)]);break;case "sin":operator=initialStack.pop();JAM.call(initialStack.push,initialStack,[Math.sin(operator)]);break;case "sqrt":operator=initialStack.pop();JAM.call(initialStack.push,initialStack,[Math.sqrt(operator)]);break;
case "sub":b=initialStack.pop();operator=initialStack.pop();JAM.call(initialStack.push,initialStack,[operator-b]);break;case "true":JAM.call(initialStack.push,initialStack,[!0]);break;case "truncate":operator=initialStack.pop();operator=0>operator?Math.ceil(operator):Math.floor(operator);JAM.call(initialStack.push,initialStack,[operator]);break;case "xor":b=initialStack.pop();operator=initialStack.pop();(v8123=isBool(operator))&&(v8123=isBool(b));v8123?JAM.call(initialStack.push,initialStack,[operator!=
b]):JAM.call(initialStack.push,initialStack,[operator^b]);break;default:error$$1("Unknown operator "+operator)}operator=counter<length}return initialStack.stack}function PostScriptEvaluator(operators,operands){this.operators=operators;this.operands=operands}PostScriptEvaluator.prototype={execute:PostScriptEvaluator_execute};return PostScriptEvaluator}function PostScriptStackClosure(){function PostScriptStack_roll(n,p){var stack=this.stack,l=stack.length-n,r=stack.length-1,c=l+(p-Math.floor(p/n)*n),
i,j,t;i=l;j=r;for(t=i<j;t;){introspect(JAM.policy.p1)t=stack[i];JAM.set(stack,i,JAM.get(stack,j,JAM.policy.p1));JAM.set(stack,j,t);i+=1;j-=1;t=i<j}i=l;j=c-1;for(l=i<j;l;){introspect(JAM.policy.p1)t=stack[i];JAM.set(stack,i,JAM.get(stack,j,JAM.policy.p1));JAM.set(stack,j,t);i+=1;j-=1;l=i<j}i=c;j=r;for(r=i<j;r;){introspect(JAM.policy.p1)t=stack[i];JAM.set(stack,i,JAM.get(stack,j,JAM.policy.p1));JAM.set(stack,j,t);i+=1;j-=1;r=i<j}}function PostScriptStack_index(n){var v8133=this.stack;n=this.stack.length-
n-1;introspect(JAM.policy.p1)v8133=v8133[n];JAM.call(this.push,this,[v8133])}function PostScriptStack_copy(n){this.stack.length+n>=MAX_STACK_SIZE&&error$$1("PostScript function stack overflow.");var stack=this.stack,i=stack.length-n;n-=1;for(var v4718=0<=n;v4718;){introspect(JAM.policy.p1)v4718=stack[i];JAM.call(stack.push,stack,[v4718]);n-=1;i+=1;v4718=0<=n}}function PostScriptStack_pop(){0>=this.stack.length&&error$$1("PostScript function stack underflow.");return this.stack.pop()}function PostScriptStack_push(value){this.stack.length>=
MAX_STACK_SIZE&&error$$1("PostScript function stack overflow.");var v4722=this.stack;JAM.call(v4722.push,v4722,[value])}function PostScriptStack(initialStack){this.stack=initialStack||[]}var MAX_STACK_SIZE=100;PostScriptStack.prototype={push:PostScriptStack_push,pop:PostScriptStack_pop,copy:PostScriptStack_copy,index:PostScriptStack_index,roll:PostScriptStack_roll};return PostScriptStack}function FunctionCacheClosure(){function FunctionCache_set(key,value){this.total<MAX_CACHE_SIZE&&(JAM.set(this.cache,
key,value),this.total+=1)}function FunctionCache_get(key){var v4725=this.cache;introspect(JAM.policy.p1)return v4725[key]}function FunctionCache_has(key){return key in this.cache}function FunctionCache(){this.cache={};this.total=0}var MAX_CACHE_SIZE=1024;FunctionCache.prototype={has:FunctionCache_has,get:FunctionCache_get,set:FunctionCache_set};return FunctionCache}function PDFFunctionClosure(){function PDFFunction_constructPostScriptFromIR(IR){function constructPostScriptFromIRResult(args){for(var initialStack=
[],i=0,ii=domain.length/2,v4729=i<ii;v4729;){introspect(JAM.policy.p1)v4729=args[i];JAM.call(initialStack.push,initialStack,[v4729]);i+=1;v4729=i<ii}args=initialStack.join("_");if(JAM.call(cache.has,cache,[args]))return JAM.call(cache.get,cache,[args]);initialStack=JAM.call(evaluator.execute,evaluator,[initialStack]);ii=[];i=numOutputs-1;for(v4729=0<=i;v4729;){var v4729=initialStack.pop(),rangeIndex=2*i;introspect(JAM.policy.p1)var v8140=range[rangeIndex];if(v4729<v8140)v4729=range[rangeIndex];else{v8140=
rangeIndex+1;introspect(JAM.policy.p1)v8140=range[v8140];v4729>v8140&&(v4729=range[rangeIndex+1])}ii[i]=v4729;i-=1;v4729=0<=i}JAM.call(cache.set,cache,[args,ii]);return ii}var domain=IR[1],range=IR[2];IR=IR[3];var numOutputs=range.length/2,evaluator=JAM.new(PostScriptEvaluator,[IR]),cache=new FunctionCache;return constructPostScriptFromIRResult}function PDFFunction_constructPostScript(fn,dict,xref){xref=JAM.call(dict.get,dict,["Domain"]);dict=JAM.call(dict.get,dict,["Range"]);xref||error$$1("No domain.");
dict||error$$1("No range.");fn=JAM.new(PostScriptLexer,[fn]);fn=JAM.new(PostScriptParser,[fn]);fn=fn.parse();return[CONSTRUCT_POSTSCRIPT,xref,dict,fn]}function PDFFunction_constructStichedFromIR(IR){function constructStichedFromIRResult(args){var v;args=args[0];v=domain[0];var max=domain[1];args>max?args=max:args<v&&(args=v);v=args;args=0;for(var max=bounds.length,v4741=args<max;v4741;){introspect(JAM.policy.p1)v4741=bounds[args];if(v<v4741)break;args+=1;v4741=args<max}max=domain[0];0<args&&(max=
bounds[args-1]);v4741=domain[1];args<bounds.length&&(v4741=bounds[args]);var v4745=2*args;introspect(JAM.policy.p1)v4745=encode[v4745];var v4746=2*args+1;introspect(JAM.policy.p1)v4746=encode[v4746];v=v4745+(v-max)*(v4746-v4745)/(v4741-max);return JAM.call(JAM.get(fns,args,JAM.policy.p1),fns,[[v]])}var domain=IR[1],bounds=IR[2],encode=IR[3];IR=IR[4];for(var fns=[],i=0,ii=IR.length,v4750=i<ii;v4750;){introspect(JAM.policy.p1)v4750=IR[i];JAM.call(fns.push,fns,[JAM.call(PDFFunction.fromIR,PDFFunction,
[v4750])]);i+=1;v4750=i<ii}return constructStichedFromIRResult}function PDFFunction_constructStiched(fn,dict,xref){(fn=JAM.call(dict.get,dict,["Domain"]))||error$$1("No domain");var inputSize=fn.length/2;1!=inputSize&&error$$1("Bad domain for stiched function");for(var fnRefs=JAM.call(dict.get,dict,["Functions"]),inputSize=[],i=0,ii=fnRefs.length,v4755=i<ii;v4755;){introspect(JAM.policy.p1)v4755=fnRefs[i];JAM.call(inputSize.push,inputSize,[JAM.call(PDFFunction.getIR,PDFFunction,[xref,JAM.call(xref.fetchIfRef,
xref,[v4755])])]);i+=1;v4755=i<ii}xref=JAM.call(dict.get,dict,["Bounds"]);dict=JAM.call(dict.get,dict,["Encode"]);return[CONSTRUCT_STICHED,fn,xref,dict,inputSize]}function PDFFunction_constructInterpolatedFromIR(IR){function constructInterpolatedFromIRResult(args){args=1==n?args[0]:Math.pow(args[0],n);for(var out=[],j=0,v4758=j<length;v4758;){introspect(JAM.policy.p1)v4758=c0[j];introspect(JAM.policy.p1)var v21943=diff[j];JAM.call(out.push,out,[v4758+args*v21943]);j+=1;v4758=j<length}return out}var c0=
IR[1],diff=IR[2],n=IR[3],length=diff.length;return constructInterpolatedFromIRResult}function PDFFunction_constructInterpolated(str,dict){var v4759=JAM.call(dict.get,dict,["C0"]);v4759||(v4759=[0]);var v4760=JAM.call(dict.get,dict,["C1"]);v4760||(v4760=[1]);var n=JAM.call(dict.get,dict,["N"]),v8155=!isArray(v4759);v8155||(v8155=!isArray(v4760));v8155&&error$$1("Illegal dictionary for interpolated function");for(var v8155=v4759.length,diff=[],i=0,v4763=i<v8155;v4763;){introspect(JAM.policy.p1)v4763=
v4760[i];introspect(JAM.policy.p1)var v8157=v4759[i];JAM.call(diff.push,diff,[v4763-v8157]);i+=1;v4763=i<v8155}return[CONSTRUCT_INTERPOLATED,v4759,diff,n]}function PDFFunction_constructSampledFromIR(IR){function constructSampledFromIRResult(args){var m=IR[1],domain=IR[2],encode=IR[3],decode=IR[4],samples=IR[5],size=IR[6],n=IR[7],range=IR[9];m!=args.length&&error$$1("Incorrect number of arguments: "+inputSize+" != "+args.length);var x=args;args=1<<m;for(var cubeN=new Float64Array(args),cubeVertex=
new Uint32Array(args),j=0,v4766=j<args;v4766;)cubeN[j]=1,j+=1,v4766=j<args;for(var k=n,pos=1,v4766=0,j=v4766<m;j;){introspect(JAM.policy.p1)j=domain[v4766];j=j[0];introspect(JAM.policy.p1)var v4768=domain[v4766];v4768=v4768[1];introspect(JAM.policy.p1)var v8161=x[v4766];var xi=Math.min(Math.max(v8161,j),v4768);introspect(JAM.policy.p1)v8161=encode[v4766];v8161=v8161[0];xi-=j;introspect(JAM.policy.p1)var v23040=encode[v4766];v23040=v23040[1];introspect(JAM.policy.p1)var v23041=encode[v4766];j=v8161+
xi*((v23040-v23041[0])/(v4768-j));introspect(JAM.policy.p1)v4768=size[v4766];for(var j=Math.min(Math.max(j,0),v4768-1),v23040=v8161=j<v4768-1?Math.floor(j):j-1,v8161=v23040+1-j,xi=j-v23040,v23040=v23040*k,v23041=v23040+k,j=0,v4777=j<args;v4777;){if(j&pos){introspect(JAM.policy.p1)v4777=cubeN[j];cubeN[j]=v4777*xi;introspect(JAM.policy.p1)v4777=cubeVertex[j];cubeVertex[j]=v4777+v23041}else{introspect(JAM.policy.p1)v4777=cubeN[j];cubeN[j]=v4777*v8161;introspect(JAM.policy.p1)v4777=cubeVertex[j];cubeVertex[j]=
v4777+v23040}j+=1;v4777=j<args}k*=v4768;pos<<=1;v4766+=1;j=v4766<m}m=new Float64Array(n);j=0;for(v4766=j<n;v4766;){v4766=domain=0;for(encode=v4766<args;encode;){introspect(JAM.policy.p1)encode=cubeVertex[v4766];encode+=j;introspect(JAM.policy.p1)encode=samples[encode];introspect(JAM.policy.p1)size=cubeN[v4766];domain+=encode*size;v4766+=1;encode=v4766<args}introspect(JAM.policy.p1)v4766=decode[j];v4766=v4766[0];domain-=0;introspect(JAM.policy.p1)encode=decode[j];encode=encode[1];introspect(JAM.policy.p1)size=
decode[j];domain=v4766+domain*((encode-size[0])/1);v4766=m;encode=j;introspect(JAM.policy.p1)size=range[j];domain=Math.max(domain,size[0]);introspect(JAM.policy.p1)size=range[j];domain=Math.min(domain,size[1]);v4766[encode]=domain;j+=1;v4766=j<n}return m}return constructSampledFromIRResult}function PDFFunction_constructSampled(str,dict){function toMultiArray(arr){for(var inputLength=arr.length,out=[],index=0,i=0,v4788=i<inputLength;v4788;){introspect(JAM.policy.p1)v4788=arr[i];var v8176=i+1;introspect(JAM.policy.p1)v8176=
arr[v8176];out[index]=[v4788,v8176];index+=1;i+=2;v4788=i<inputLength}return out}var domain=JAM.call(dict.get,dict,["Domain"]),range=JAM.call(dict.get,dict,["Range"]),v8177=!domain;v8177||(v8177=!range);v8177&&error$$1("No domain or range");var v8177=domain.length/2,outputSize=range.length/2,domain=toMultiArray(domain),range=toMultiArray(range),size=JAM.call(dict.get,dict,["Size"]),bps=JAM.call(dict.get,dict,["BitsPerSample"]),order=JAM.call(dict.get,dict,["Order"]);order||(order=1);1!==order&&error$$1("No support for cubic spline interpolation: "+
order);order=JAM.call(dict.get,dict,["Encode"]);if(!order)for(var order=[],i$$0=0,v4796=i$$0<v8177;v4796;){JAM.call(order.push,order,[0]);introspect(JAM.policy.p1)v4796=size[i$$0];JAM.call(order.push,order,[v4796-1]);i$$0+=1;v4796=i$$0<v8177}order=toMultiArray(order);i$$0=(i$$0=JAM.call(dict.get,dict,["Decode"]))?toMultiArray(i$$0):range;v4796=JAM.call(this.getSampleArray,this,[size,outputSize,bps,str]);return[CONSTRUCT_SAMPLED,v8177,domain,order,i$$0,v4796,size,outputSize,Math.pow(2,bps)-1,range]}
function PDFFunction_parse(xref,fn){var IR=JAM.call(this.getIR,this,[xref,fn]);return JAM.call(this.fromIR,this,[IR])}function PDFFunction_fromIR(IR){var type=IR[0];switch(type){case CONSTRUCT_SAMPLED:return JAM.call(this.constructSampledFromIR,this,[IR]);case CONSTRUCT_INTERPOLATED:return JAM.call(this.constructInterpolatedFromIR,this,[IR]);case CONSTRUCT_STICHED:return JAM.call(this.constructStichedFromIR,this,[IR]);default:return JAM.call(this.constructPostScriptFromIR,this,[IR])}}function PDFFunction_getIR(xref,
fn){var dict=fn.dict;dict||(dict=fn);var types=[this.constructSampled,null,this.constructInterpolated,this.constructStiched,this.constructPostScript],typeNum=JAM.call(dict.get,dict,["FunctionType"]);introspect(JAM.policy.p1)types=types[typeNum];types||error$$1("Unknown type of function");return JAM.call(types.call,types,[this,fn,dict,xref])}function PDFFunction_getSampleArray(size,outputSize,bps,str){for(var length=1,i=0,ii=size.length,v4806=i<ii;v4806;){introspect(JAM.policy.p1)v4806=size[i];length*=
v4806;i+=1;v4806=i<ii}length*=outputSize;size=[];ii=outputSize=0;v4806=1/(Math.pow(2,bps)-1);str=JAM.call(str.getBytes,str,[(length*bps+7)/8]);for(var strIdx=0,i=0,v4811=i<length;v4811;){for(v4811=outputSize<bps;v4811;){ii<<=8;v4811=strIdx;strIdx+=1;introspect(JAM.policy.p1)v4811=str[v4811];ii|=v4811;outputSize+=8;v4811=outputSize<bps}outputSize-=bps;JAM.call(size.push,size,[(ii>>outputSize)*v4806]);ii&=(1<<outputSize)-1;i+=1;v4811=i<length}return size}var CONSTRUCT_SAMPLED=0,CONSTRUCT_INTERPOLATED=
2,CONSTRUCT_STICHED=3,CONSTRUCT_POSTSCRIPT=4;return{getSampleArray:PDFFunction_getSampleArray,getIR:PDFFunction_getIR,fromIR:PDFFunction_fromIR,parse:PDFFunction_parse,constructSampled:PDFFunction_constructSampled,constructSampledFromIR:PDFFunction_constructSampledFromIR,constructInterpolated:PDFFunction_constructInterpolated,constructInterpolatedFromIR:PDFFunction_constructInterpolatedFromIR,constructStiched:PDFFunction_constructStiched,constructStichedFromIR:PDFFunction_constructStichedFromIR,constructPostScript:PDFFunction_constructPostScript,
constructPostScriptFromIR:PDFFunction_constructPostScriptFromIR}}function PDFObjectsClosure(){function PDFObjects_setData(objId,data){JAM.call(this.ensureObj,this,[objId]).data=data}function PDFObjects_hasData(objId){var objs=this.objs;introspect(JAM.policy.p1)var v8186=objs[objId];if(v8186){introspect(JAM.policy.p1)objId=objs[objId];return objId.hasData}return!1}function PDFObjects_isResolved(objId){var objs=this.objs;introspect(JAM.policy.p1)var v8187=objs[objId];if(v8187){introspect(JAM.policy.p1)objId=
objs[objId];return objId.isResolved}return!1}function PDFObjects_onData(objId,callback){var v4817=JAM.call(this.ensureObj,this,[objId]);JAM.call(v4817.onData,v4817,[callback])}function PDFObjects_resolve(objId,data){var objs=this.objs;introspect(JAM.policy.p1)var v4819=objs[objId];if(v4819){introspect(JAM.policy.p1)objs=objs[objId];JAM.call(objs.resolve,objs,[data])}else JAM.call(this.ensureObj,this,[objId,data])}function PDFObjects_get(objId,callback){if(callback){var v4820=JAM.call(this.ensureObj,
this,[objId]);JAM.call(v4820.then,v4820,[callback]);return null}v4820=this.objs;introspect(JAM.policy.p1)v4820=v4820[objId];var v8188=!v4820;v8188||(v8188=!v4820.isResolved);v8188&&error$$1("Requesting object that isn't resolved yet "+objId);return v4820.data}function PDFObjects_ensureObj(objId,data){var v8189=this.objs;introspect(JAM.policy.p1)v8189=v8189[objId];if(v8189){v8189=this.objs;introspect(JAM.policy.p1)return v8189[objId]}var v8189=this.objs,v4827=objId,v23499=JAM.new(Promise,[objId,data]);
return JAM.set(v8189,v4827,v23499)}function PDFObjects(){this.objs={}}PDFObjects.prototype={objs:null,ensureObj:PDFObjects_ensureObj,get:PDFObjects_get,resolve:PDFObjects_resolve,onData:PDFObjects_onData,isResolved:PDFObjects_isResolved,hasData:PDFObjects_hasData,setData:PDFObjects_setData};return PDFObjects}function XRefClosure(){function XRef_getCatalogObj(){return this.root}function XRef_fetch(ref,suppressEncryption){assertWellFormed(isRef(ref),"ref object is not a reference");var num=ref.num;
if(num in this.cache){var v4829=this.cache;introspect(JAM.policy.p1)return v4829[num]}v4829=JAM.call(this.getEntry,this,[num]);if(null===v4829)return JAM.set(this.cache,num,v4829);var gen=ref.gen,stream;if(v4829.uncompressed){v4829.gen!=gen&&error$$1("inconsistent generation in XRef");stream=this.stream;stream=JAM.call(stream.makeSubStream,stream,[v4829.offset]);stream=JAM.new(Parser,[JAM.new(Lexer,[stream]),!0,this]);var obj1=stream.getObj(),obj2=stream.getObj(),obj3=stream.getObj(),v8192=!isInt(obj1);
v8192||(obj1=obj1!=num,obj1||(obj1=!isInt(obj2),obj1||((obj2=obj2!=gen)||(obj2=!isCmd(obj3)),obj1=obj2)),v8192=obj1);v8192&&error$$1("bad XRef entry");if(!isCmd(obj3,"obj")){if(0==obj3.cmd.indexOf("obj")&&(num=parseInt(obj3.cmd.substring(3),10),!isNaN(num)))return num;error$$1("bad XRef entry")}(obj3=this.encrypt)&&(obj3=!suppressEncryption);if(obj3)try{var v8198=this.encrypt,v4829=JAM.call(stream.getObj,stream,[JAM.call(v8198.createCipherTransform,v8198,[num,gen])])}catch(ex){return JAM.call(this.fetch,
this,[ref,!0])}else v4829=stream.getObj();(stream=!isStream(v4829))||(stream=v4829 instanceof JpegStream);stream&&JAM.set(this.cache,num,v4829);return v4829}stream=JAM.call(this.fetch,this,[JAM.new(Ref,[v4829.offset,0])]);isStream(stream)||error$$1("bad ObjStm stream");num=stream.parameters;num=JAM.call(num.get,num,["First"]);gen=stream.parameters;gen=JAM.call(gen.get,gen,["N"]);(num=!isInt(num))||(num=!isInt(gen));num&&error$$1("invalid first and n parameters for ObjStm stream");stream=JAM.new(Parser,
[JAM.new(Lexer,[stream]),!1,this]);v8198=[];obj2=[];obj3=0;for(num=obj3<gen;num;)num=stream.getObj(),isInt(num)||error$$1("invalid object number in the ObjStm stream: "+num),JAM.call(obj2.push,obj2,[num]),num=stream.getObj(),isInt(num)||error$$1("invalid object offset in the ObjStm stream: "+num),obj3+=1,num=obj3<gen;obj3=0;for(num=obj3<gen;num;){JAM.call(v8198.push,v8198,[stream.getObj()]);num=this.cache;introspect(JAM.policy.p1)obj1=obj2[obj3];JAM.set(num,obj1,JAM.get(v8198,obj3,JAM.policy.p1));
obj3+=1;num=obj3<gen}v4829=v4829.gen;introspect(JAM.policy.p1)v4829=v8198[v4829];v4829||error$$1("bad XRef entry for compressed object");return v4829}function XRef_fetchIfRef(obj){return isRef(obj)?JAM.call(this.fetch,this,[obj]):obj}function XRef_getEntry(i){var v4865=this.entries;introspect(JAM.policy.p1)i=v4865[i];return null===i?null:i=i.free?null:i}function XRef_readXRef(startXRef,recoveryMode){var stream=this.stream;stream.pos=startXRef;try{var parser=JAM.new(Parser,[JAM.new(Lexer,[stream]),
!0,null]),obj=parser.getObj(),dict;if(isCmd(obj,"xref"))dict=JAM.call(this.readXRefTable,this,[parser]),obj=JAM.call(dict.get,dict,["XRefStm"]),isInt(obj)&&(stream=obj,stream in this.xrefstms||(JAM.set(this.xrefstms,stream,1),JAM.call(this.readXRef,this,[stream])));else if(isInt(obj)){var v8208=!isInt(parser.getObj());if(!v8208){var v21974=!isCmd(parser.getObj(),"obj");v21974||(v21974=!isStream(obj=parser.getObj()));v8208=v21974}v8208&&error$$1("Invalid XRef stream");(dict=JAM.call(this.readXRefStream,
this,[obj]))||error$$1("Failed to read XRef stream")}obj=JAM.call(dict.get,dict,["Prev"]);isInt(obj)?JAM.call(this.readXRef,this,[obj,recoveryMode]):isRef(obj)&&JAM.call(this.readXRef,this,[obj.num,recoveryMode]);return dict}catch(e){log$$0("(while reading XRef): "+e)}if(!recoveryMode)return warn("Indexing all PDF objects"),this.indexObjects()}function XRef_indexObjects(){function readToken(data,offset){var token="";introspect(JAM.policy.p1)var ch=data[offset];var v8209=13!==ch;for(v8209&&(v8209=
10!==ch);v8209&&!((offset+=1)>=data.length);){token+=String.fromCharCode(ch);introspect(JAM.policy.p1)ch=data[offset];(v8209=13!==ch)&&(v8209=10!==ch)}return token}function skipUntil(data,offset,what){for(var length=what.length,dataLength=data.length,skipped=0,v4884=offset<dataLength;v4884;){var v4884=0,v8215=v4884<length;if(v8215){v8215=offset+v4884;introspect(JAM.policy.p1)v8215=data[v8215];introspect(JAM.policy.p1)var v21977=what[v4884];v8215=v8215==v21977}for(;v8215;)if(v4884+=1,v8215=v4884<length){v8215=
offset+v4884;introspect(JAM.policy.p1)v8215=data[v8215];introspect(JAM.policy.p1)v21977=what[v4884];v8215=v8215==v21977}if(v4884>=length)break;offset+=1;skipped+=1;v4884=offset<dataLength}return skipped}var trailerBytes=new Uint8Array([116,114,97,105,108,101,114]),startxrefBytes=new Uint8Array([115,116,97,114,116,120,114,101,102]),endobjBytes=new Uint8Array([101,110,100,111,98,106]),xrefBytes=new Uint8Array([47,88,82,101,102]),stream=this.stream;stream.pos=0;for(var buffer=stream.getBytes(),position=
stream.start,length$$0=buffer.length,trailers=[],xrefStms=[],v4900=position<length$$0;v4900;){introspect(JAM.policy.p1)v4900=buffer[position];var v8217=32===v4900;v8217||(v8217=9===v4900,v8217||(v8217=13===v4900)||(v8217=10===v4900));if(v8217)position+=1;else if(37===v4900){(v8217=13!==v4900)&&(v8217=10!==v4900);v4900=v8217;do{position+=1;introspect(JAM.policy.p1)v4900=buffer[position];(v8217=13!==v4900)&&(v8217=10!==v4900);v4900=v8217}while(v4900)}else if(v4900=readToken(buffer,position),"xref"===
v4900)position+=skipUntil(buffer,position,trailerBytes),JAM.call(trailers.push,trailers,[position]),position+=skipUntil(buffer,position,startxrefBytes);else if(v8217=/^(\d+)\s+(\d+)\s+obj\b/.exec(v4900)){JAM.set(this.entries,v8217[1],{offset:position,gen:v8217[2]|0,uncompressed:!0});var v4900=skipUntil(buffer,position,endobjBytes)+7,v8217=buffer.subarray(position,position+v4900),xrefTagOffset=skipUntil(v8217,0,xrefBytes),v8225=xrefTagOffset<v4900;if(v8225){xrefTagOffset+=5;introspect(JAM.policy.p1)v8217=
v8217[xrefTagOffset];v8225=64>v8217}v8225&&(JAM.call(xrefStms.push,xrefStms,[position]),JAM.set(this.xrefstms,position,1));position+=v4900}else position+=v4900.length+1;v4900=position<length$$0}trailerBytes=0;startxrefBytes=xrefStms.length;for(endobjBytes=trailerBytes<startxrefBytes;endobjBytes;){introspect(JAM.policy.p1)endobjBytes=xrefStms[trailerBytes];JAM.call(this.readXRef,this,[endobjBytes,!0]);trailerBytes+=1;endobjBytes=trailerBytes<startxrefBytes}for(var dict,trailerBytes=0,startxrefBytes=
trailers.length,xrefStms=trailerBytes<startxrefBytes;xrefStms;){stream.pos=trailers[trailerBytes];xrefStms=JAM.new(Parser,[JAM.new(Lexer,[stream]),!0,null]);endobjBytes=xrefStms.getObj();if(isCmd(endobjBytes,"trailer")&&isDict(dict=xrefStms.getObj())&&JAM.call(dict.has,dict,["ID"]))return dict;trailerBytes+=1;xrefStms=trailerBytes<startxrefBytes}if(dict)return dict;error$$1("Invalid PDF structure")}function XRef_readXRefStream(stream){var streamParameters=stream.parameters,byteWidths=JAM.call(streamParameters.get,
streamParameters,["W"]),range=JAM.call(streamParameters.get,streamParameters,["Index"]);range||(range=[0,JAM.call(streamParameters.get,streamParameters,["Size"])]);for(var i,j,v4929=0<range.length;v4929;){var v4929=range[0],n=range[1],v8230=!isInt(v4929);v8230||(v8230=!isInt(n));v8230&&error$$1("Invalid XRef range fields: "+v4929+", "+n);var v8230=byteWidths[0],offsetFieldWidth=byteWidths[1],generationFieldWidth=byteWidths[2];i=!isInt(v8230);i||(i=!isInt(offsetFieldWidth))||(i=!isInt(generationFieldWidth));
i&&error$$1("Invalid XRef entry fields length: "+v4929+", "+n);i=0;for(var v4928=i<n;v4928;){var offset=v4928=0,generation=0;j=0;for(var v4916=j<v8230;v4916;)v4928=v4928<<8|stream.getByte(),j+=1,v4916=j<v8230;0==v8230&&(v4928=1);j=0;for(v4916=j<offsetFieldWidth;v4916;)offset=offset<<8|stream.getByte(),j+=1,v4916=j<offsetFieldWidth;j=0;for(v4916=j<generationFieldWidth;v4916;)generation=generation<<8|stream.getByte(),j+=1,v4916=j<generationFieldWidth;j={};j.offset=offset;j.gen=generation;switch(v4928){case 0:j.free=
!0;break;case 1:j.uncompressed=!0;break;case 2:break;default:error$$1("Invalid XRef entry type: "+v4928)}v4928=this.entries;offset=v4929+i;introspect(JAM.policy.p1)v4928=v4928[offset];v4928||JAM.set(this.entries,v4929+i,j);i+=1;v4928=i<n}range.splice(0,2);v4929=0<range.length}return streamParameters}function XRef_readXRefTable(parser){for(var obj,v4941=!isCmd(obj=parser.getObj(),"trailer");v4941;){var v4941=parser.getObj(),v8237=!isInt(obj);v8237||(v8237=!isInt(v4941));v8237&&error$$1("Invalid XRef table: wrong types in subsection header");
for(var v8237=0,v4940=v8237<v4941;v4940;){var v4931=v4940={},v23500=parser.getObj();v4931.offset=v23500;v4931=v4940;v23500=parser.getObj();v4931.gen=v23500;v4931=parser.getObj();isCmd(v4931,"f")?v4940.free=!0:isCmd(v4931,"n")&&(v4940.uncompressed=!0);v4931=!isInt(v4940.offset);v4931||(v4931=!isInt(v4940.gen),v4931||(v4931=v4940.free,v4931||(v4931=v4940.uncompressed),v4931=!v4931));v4931&&error$$1("Invalid entry in XRef subsection: "+obj+", "+v4941);v4931=this.entries;v23500=v8237+obj;introspect(JAM.policy.p1)v4931=
v4931[v23500];v4931||JAM.set(this.entries,v8237+obj,v4940);v8237+=1;v4940=v8237<v4941}v4941=!isCmd(obj=parser.getObj(),"trailer")}(v4941=this.entries[0])&&(v4941=!this.entries[0].free);v4941&&error$$1("Invalid XRef table: unexpected first object");isCmd(obj,"trailer")||error$$1("Invalid XRef table: could not find trailer dictionary");parser=parser.getObj();isDict(parser)||error$$1("Invalid XRef table: could not parse trailer dictionary");return parser}function XRef(stream,startXRef,mainXRefEntriesOffset){this.stream=
stream;this.entries=[];this.xrefstms={};stream=JAM.call(this.readXRef,this,[startXRef]);JAM.call(stream.assignXref,stream,[this]);this.trailer=stream;this.cache=[];if(startXRef=JAM.call(stream.get,stream,["Encrypt"]))mainXRefEntriesOffset=JAM.call(stream.get,stream,["ID"]),this.encrypt=startXRef=JAM.new(CipherTransformFactory,[startXRef,mainXRefEntriesOffset[0]]);(this.root=stream=JAM.call(stream.get,stream,["Root"]))||error$$1("Invalid root reference")}XRef.prototype={readXRefTable:XRef_readXRefTable,
readXRefStream:XRef_readXRefStream,indexObjects:XRef_indexObjects,readXRef:XRef_readXRef,getEntry:XRef_getEntry,fetchIfRef:XRef_fetchIfRef,fetch:XRef_fetch,getCatalogObj:XRef_getCatalogObj};return XRef}function CatalogClosure(){function Catalog_getPage(n){var pageCache=this.pageCache;pageCache||(this.pageCache=[],JAM.call(this.traverseKids,this,[this.toplevelPagesDict]));pageCache=this.pageCache;n-=1;introspect(JAM.policy.p1)return pageCache[n]}function Catalog_traverseKids(pagesDict){var pageCache=
this.pageCache;pagesDict=JAM.call(pagesDict.get,pagesDict,["Kids"]);assertWellFormed(isArray(pagesDict),"page dictionary kids object is not an array");for(var i=0,ii=pagesDict.length,v4957=i<ii;v4957;){introspect(JAM.policy.p1)v4957=pagesDict[i];assertWellFormed(isRef(v4957),"page dictionary kid is not a reference");var v4953=this.xref,v4953=JAM.call(v4953.fetch,v4953,[v4957]),v8246=isDict(v4953,"Page");v8246||(v8246=isDict(v4953))&&(v8246=!JAM.call(v4953.has,v4953,["Kids"]));v8246?JAM.call(pageCache.push,
pageCache,[JAM.new(Page,[this.xref,pageCache.length,v4953,v4957])]):(assertWellFormed(isDict(v4953),"page dictionary kid reference points to wrong type of object"),JAM.call(this.traverseKids,this,[v4953]));i+=1;v4957=i<ii}}function Catalog(xref){this.xref=xref;xref=xref.root;assertWellFormed(isDict(xref),"catalog object is not a dictionary");this.catDict=xref}function v8270(){var v4959=this.catDict,v4959=JAM.call(v4959.get,v4959,["Metadata"]),metadata,v8249=v4959;v8249&&(v8249=isDict(v4959.dict));
if(v8249){var v8249=v4959.dict,v8249=JAM.call(v8249.get,v8249,["Type"]),v4961=v4959.dict,v4961=JAM.call(v4961.get,v4961,["Subtype"]),v8250=isName(v8249);v8250&&(v8250=isName(v4961))&&((v8249="Metadata"===v8249.name)&&(v8249="XML"===v4961.name),v8250=v8249);v8250&&(metadata=stringToPDFString(bytesToString(v4959.getBytes())))}return shadow(this,"metadata",metadata)}function v8271(){var v4965=this.catDict,v4965=JAM.call(v4965.get,v4965,["Pages"]);assertWellFormed(isDict(v4965),"invalid top-level pages dictionary");
return shadow(this,"toplevelPagesDict",v4965)}function v8272(){var xref=this.xref,v4967=this.catDict,obj=JAM.call(v4967.get,v4967,["Outlines"]),v4967={items:[]};if(isDict(obj)){var obj=JAM.call(obj.getRaw,obj,["First"]),processed=new RefSet;if(isRef(obj)){var queue=[{obj:obj,parent:v4967}];JAM.call(processed.put,processed,[obj]);for(var v4984=0<queue.length;v4984;){var v4984=queue.shift(),outlineDict=JAM.call(xref.fetchIfRef,xref,[v4984.obj]);if(null!==outlineDict){JAM.call(outlineDict.has,outlineDict,
["Title"])||error$$1("Invalid outline item");(obj=JAM.call(outlineDict.get,outlineDict,["A"]))?obj=JAM.call(obj.get,obj,["D"]):JAM.call(outlineDict.has,outlineDict,["Dest"])&&(obj=JAM.call(outlineDict.getRaw,outlineDict,["Dest"]),isName(obj)&&(obj=obj.name));var title=JAM.call(outlineDict.get,outlineDict,["Title"]),title=stringToPDFString(title),v8255=JAM.call(outlineDict.get,outlineDict,["C"]);v8255||(v8255=[0,0,0]);title={dest:obj,title:title,color:v8255,count:JAM.call(outlineDict.get,outlineDict,
["Count"]),bold:!!(JAM.call(outlineDict.get,outlineDict,["F"])&2),italic:!!(JAM.call(outlineDict.get,outlineDict,["F"])&1),items:[]};obj=v4984.parent.items;JAM.call(obj.push,obj,[title]);obj=JAM.call(outlineDict.getRaw,outlineDict,["First"]);(v8255=isRef(obj))&&(v8255=!JAM.call(processed.has,processed,[obj]));v8255&&(JAM.call(queue.push,queue,[{obj:obj,parent:title}]),JAM.call(processed.put,processed,[obj]));obj=JAM.call(outlineDict.getRaw,outlineDict,["Next"]);(outlineDict=isRef(obj))&&(outlineDict=
!JAM.call(processed.has,processed,[obj]));outlineDict&&(JAM.call(queue.push,queue,[{obj:obj,parent:v4984.parent}]),JAM.call(processed.put,processed,[obj]))}v4984=0<queue.length}}}obj=xref=0<v4967.items.length?v4967.items:null;return shadow(this,"documentOutline",obj)}function v8273(){var v4988=this.toplevelPagesDict,v4988=JAM.call(v4988.get,v4988,["Count"]);assertWellFormed(isInt(v4988),"page count in top level pages object is not an integer");return shadow(this,"num",v4988)}function v8274(){function catalogForEach(key,
value){if(value){var v23504=fetchDestination(value);JAM.set(dests,key,v23504)}}function fetchDestination(dest){return dest=isDict(dest)?JAM.call(dest.get,dest,["D"]):dest}var xref=this.xref,dests={},nameTreeRef,nameDictionaryRef,v4992=this.catDict;(v4992=JAM.call(v4992.get,v4992,["Names"]))?nameTreeRef=JAM.call(v4992.getRaw,v4992,["Dests"]):(v4992=this.catDict,JAM.call(v4992.has,v4992,["Dests"])&&(nameDictionaryRef=this.catDict,nameDictionaryRef=JAM.call(nameDictionaryRef.get,nameDictionaryRef,["Dests"])));
nameDictionaryRef&&(v4992=nameDictionaryRef,JAM.call(v4992.forEach,v4992,[catalogForEach]));if(nameTreeRef)for(nameDictionaryRef=new RefSet,JAM.call(nameDictionaryRef.put,nameDictionaryRef,[nameTreeRef]),nameTreeRef=[nameTreeRef],v4992=0<nameTreeRef.length;v4992;){var n,v4992=JAM.call(xref.fetch,xref,[nameTreeRef.shift()]);if(JAM.call(v4992.has,v4992,["Kids"])){var kids=JAM.call(v4992.get,v4992,["Kids"]),v4992=0;n=kids.length;for(var v4997=v4992<n;v4997;){introspect(JAM.policy.p1)v4997=kids[v4992];
JAM.call(nameDictionaryRef.has,nameDictionaryRef,[v4997])&&error$$1("invalid destinations");JAM.call(nameTreeRef.push,nameTreeRef,[v4997]);JAM.call(nameDictionaryRef.put,nameDictionaryRef,[v4997]);v4992+=1;v4997=v4992<n}}else for(kids=JAM.call(v4992.get,v4992,["Names"]),v4992=0,n=kids.length,v4997=v4992<n;v4997;){v4997=dests;introspect(JAM.policy.p1)var v5000=kids[v4992];var v22756=v4992+1;introspect(JAM.policy.p1)v22756=kids[v22756];v22756=fetchDestination(JAM.call(xref.fetchIfRef,xref,[v22756]));
JAM.set(v4997,v5000,v22756);v4992+=2;v4997=v4992<n}v4992=0<nameTreeRef.length}return shadow(this,"destinations",dests)}var v5003=Catalog;v5003.prototype={traverseKids:Catalog_traverseKids,getPage:Catalog_getPage};JAM.call(Object.defineProperty,Object,[v5003.prototype,"destinations",{get:v8274}]);JAM.call(Object.defineProperty,Object,[v5003.prototype,"numPages",{get:v8273}]);JAM.call(Object.defineProperty,Object,[v5003.prototype,"documentOutline",{get:v8272}]);JAM.call(Object.defineProperty,Object,
[v5003.prototype,"toplevelPagesDict",{get:v8271}]);JAM.call(Object.defineProperty,Object,[v5003.prototype,"metadata",{get:v8270}]);return Catalog}function RefSetClosure(){function RefSet_put(ref){JAM.set(this.dict,"R"+ref.num+"."+ref.gen,ref)}function RefSet_has(ref){var v22031=this.dict;ref="R"+ref.num+"."+ref.gen;introspect(JAM.policy.p1)v22031=v22031[ref];return!!v22031}function RefSet(){this.dict={}}RefSet.prototype={has:RefSet_has,put:RefSet_put};return RefSet}function RefClosure(){function Ref(num,
gen){this.num=num;this.gen=gen}Ref.prototype={};return Ref}function DictClosure(){function Dict(xref){function Dict_forEach(callback){for(var key in map)JAM.call(callback,null,[key,JAM.call(this.get,this,[key])])}function Dict_has(key){return key in map}function Dict_set(key,value){JAM.set(map,key,value)}function Dict_getAll(){var all={},key;for(key in map){var obj=JAM.call(this.get,this,[key]),v5008=all,v5009=key,obj=obj instanceof Dict?obj.getAll():obj;JAM.set(v5008,v5009,obj)}return all}function Dict_getRaw(key){introspect(JAM.policy.p1)return map[key]}
function Dict_get(key1,key2,key3){var value;introspect(JAM.policy.p1)var v22760=value=map[key1];v22760="undefined"!=typeof v22760;v22760||((key1=key1 in map)||(key1="undefined"==typeof key2),v22760=key1);if(v22760)return key3=xref?JAM.call(xref.fetchIfRef,xref,[value]):value;introspect(JAM.policy.p1)key1=value=map[key2];key1="undefined"!=typeof key1;key1||((key2=key2 in map)||(key2="undefined"==typeof key3),key1=key2);if(key1)return key3=xref?JAM.call(xref.fetchIfRef,xref,[value]):value;introspect(JAM.policy.p1)key3=
map[key3];key3||(key3=null);value=key3;return key3=xref?JAM.call(xref.fetchIfRef,xref,[value]):value}function Dict_assignXref(newXref){xref=newXref}var map=Object.create(null);this.assignXref=Dict_assignXref;this.get=Dict_get;this.getRaw=Dict_getRaw;this.getAll=Dict_getAll;this.set=Dict_set;this.has=Dict_has;this.forEach=Dict_forEach}return Dict}function CmdClosure(){function Cmd_get(cmd){introspect(JAM.policy.p1)var cmdValue=cmdCache[cmd];if(cmdValue)return cmdValue;cmdValue=new Cmd(cmd);return JAM.set(cmdCache,
cmd,cmdValue)}function Cmd(cmd){this.cmd=cmd}Cmd.prototype={};var cmdCache={};Cmd.get=Cmd_get;return Cmd}function NameClosure(){function Name(name){this.name=name}Name.prototype={};return Name}function CanvasGraphicsPutBinaryImageDataShim(ctx,imgData,w,h){w=JAM.call(ctx.getImageData,ctx,[0,0,w,h]);h=w.data;for(var len=h.length,v5017=len,len=len-1;v5017;)JAM.set(h,len,JAM.get(imgData.data,len,JAM.policy.p1)),v5017=len,len-=1;JAM.call(ctx.putImageData,ctx,[w,0,0])}function CanvasGraphicsPutBinaryImageDataNative(ctx,
imgData){JAM.call(ctx.putImageData,ctx,[imgData,0,0])}function CanvasGraphicsClosure(){function CanvasGraphics_getSinglePixelWidth(scale){scale=this.ctx.mozCurrentTransformInverse;return Math.abs(scale[0]+scale[2])}function CanvasGraphics_restoreFillRule(rule){this.ctx.mozFillRule=rule}function CanvasGraphics_setEOFillRule(){var savedFillRule=this.ctx.mozFillRule;this.ctx.mozFillRule="evenodd";return savedFillRule}function CanvasGraphics_consumePath(){if(this.pendingClip){var savedFillRule=null;this.pendingClip==
EO_CLIP&&(savedFillRule=this.setEOFillRule());this.ctx.clip();this.pendingClip=null;null!==savedFillRule&&JAM.call(this.restoreFillRule,this,[savedFillRule])}this.ctx.beginPath()}function CanvasGraphics_endCompat(){TODO("stop ignoring undefined operators")}function CanvasGraphics_beginCompat(){TODO("ignore undefined operators (should we do that anyway?)")}function CanvasGraphics_endMarkedContent(){TODO("Marked content")}function CanvasGraphics_beginMarkedContentProps(tag,properties){TODO("Marked content")}
function CanvasGraphics_beginMarkedContent(tag){TODO("Marked content")}function CanvasGraphics_markPointProps(tag,properties){TODO("Marked content")}function CanvasGraphics_markPoint(tag){TODO("Marked content")}function CanvasGraphics_putBinaryImageData(){}function CanvasGraphics_paintImageXObject(objId){var v5028=this.objs;(objId=JAM.call(v5028.get,v5028,[objId]))||error$$1("Dependent image isn't ready yet");this.save();var v5028=this.ctx,w=objId.width,h=objId.height;JAM.call(v5028.scale,v5028,[1/
w,-1/h]);var tmpCanvas=createScratchCanvas(w,h),tmpCtx=JAM.call(tmpCanvas.getContext,tmpCanvas,["2d"]);JAM.call(this.putBinaryImageData,this,[tmpCtx,objId,w,h]);JAM.call(v5028.drawImage,v5028,[tmpCanvas,0,-h]);this.restore()}function CanvasGraphics_paintImageMaskXObject(imgArray,inverseDecode,width,height){this.save();var ctx=this.ctx,w=width,h=height;JAM.call(ctx.scale,ctx,[1/w,-1/h]);var tmpCanvas=createScratchCanvas(w,h),tmpCtx=JAM.call(tmpCanvas.getContext,tmpCanvas,["2d"]),fillColor=this.current.fillColor,
v5036=tmpCtx,v22766=fillColor;v22766&&(v22766=fillColor.hasOwnProperty("type"))&&(v22766="Pattern"===fillColor.type);fillColor=v22766?JAM.call(fillColor.getPattern,fillColor,[tmpCtx]):fillColor;v5036.fillStyle=fillColor;JAM.call(tmpCtx.fillRect,tmpCtx,[0,0,w,h]);var w=JAM.call(tmpCtx.getImageData,tmpCtx,[0,0,w,h]),v5036=w.data,fillColor=0,j,mask,buf,bufferPos=3,v22766=0;for(j=v22766<height;j;){j=mask=0;for(var v5040=j<width;v5040;)mask||(buf=fillColor,fillColor+=1,buf=imgArray[buf],mask=128),!(buf&
mask)==inverseDecode&&(v5036[bufferPos]=0),bufferPos+=4,mask>>=1,j+=1,v5040=j<width;v22766+=1;j=v22766<height}JAM.call(tmpCtx.putImageData,tmpCtx,[w,0,0]);JAM.call(ctx.drawImage,ctx,[tmpCanvas,0,-h]);this.restore()}function CanvasGraphics_paintJpegXObject(objId,w,h){var v5043=this.objs;(objId=JAM.call(v5043.get,v5043,[objId]))||error$$1("Dependent image isn't ready yet");this.save();v5043=this.ctx;JAM.call(v5043.scale,v5043,[1/w,-1/h]);JAM.call(v5043.drawImage,v5043,[objId,0,0,objId.width,objId.height,
0,-h,w,h]);this.restore()}function CanvasGraphics_paintFormXObjectEnd(){this.restore()}function CanvasGraphics_paintFormXObjectBegin(matrix,bbox){this.save();var v8287=matrix;v8287&&(v8287=isArray(matrix))&&(v8287=6==matrix.length);v8287&&(v8287=this.transform,JAM.call(v8287.apply,v8287,[this,matrix]));(v8287=bbox)&&(v8287=isArray(bbox))&&(v8287=4==bbox.length);if(v8287){var v8287=bbox[2]-bbox[0],height=bbox[3]-bbox[1];JAM.call(this.rectangle,this,[bbox[0],bbox[1],v8287,height]);this.clip();this.endPath()}}
function CanvasGraphics_beginImageData(){error$$1("Should not call beginImageData")}function CanvasGraphics_beginInlineImage(){error$$1("Should not call beginInlineImage")}function CanvasGraphics_shadingFill(patternIR){var ctx=this.ctx;this.save();var pattern=JAM.call(Pattern.shadingFromIR,Pattern,[patternIR]);patternIR=ctx;pattern=JAM.call(pattern.getPattern,pattern,[ctx]);patternIR.fillStyle=pattern;var inv=ctx.mozCurrentTransformInverse;if(inv){var ctx=ctx.canvas,width=ctx.width,height=ctx.height,
ctx=JAM.call(Util.applyTransform,Util,[[0,0],inv]);patternIR=JAM.call(Util.applyTransform,Util,[[0,height],inv]);var pattern=JAM.call(Util.applyTransform,Util,[[width,0],inv]),ur=JAM.call(Util.applyTransform,Util,[[width,height],inv]),inv=Math.min(ctx[0],patternIR[0],pattern[0],ur[0]),width=Math.min(ctx[1],patternIR[1],pattern[1],ur[1]),height=Math.max(ctx[0],patternIR[0],pattern[0],ur[0]),ctx=Math.max(ctx[1],patternIR[1],pattern[1],ur[1]);patternIR=this.ctx;JAM.call(patternIR.fillRect,patternIR,
[inv,width,height-inv,ctx-width])}else ctx=this.ctx,JAM.call(ctx.fillRect,ctx,[-1E10,-1E10,2E10,2E10]);this.restore()}function CanvasGraphics_setFillCMYKColor(c,m,y,k){if(!(this.current.fillColorSpace instanceof DeviceCmykCS)){var v5084=this.current,v23508=new DeviceCmykCS;v5084.fillColorSpace=v23508}c=JAM.call(Util.makeCssCmyk,Util,[c,m,y,k]);this.ctx.fillStyle=c;this.current.fillColor=c}function CanvasGraphics_setStrokeCMYKColor(c,m,y,k){if(!(this.current.strokeColorSpace instanceof DeviceCmykCS)){var v5088=
this.current,v23509=new DeviceCmykCS;v5088.strokeColorSpace=v23509}c=JAM.call(Util.makeCssCmyk,Util,[c,m,y,k]);this.ctx.strokeStyle=c;this.current.strokeColor=c}function CanvasGraphics_setFillRGBColor(r,g,b){if(!(this.current.fillColorSpace instanceof DeviceRgbCS)){var v5092=this.current,v23510=new DeviceRgbCS;v5092.fillColorSpace=v23510}r=JAM.call(Util.makeCssRgb,Util,[r,g,b]);this.ctx.fillStyle=r;this.current.fillColor=r}function CanvasGraphics_setStrokeRGBColor(r,g,b){if(!(this.current.strokeColorSpace instanceof
DeviceRgbCS)){var v5096=this.current,v23511=new DeviceRgbCS;v5096.strokeColorSpace=v23511}r=JAM.call(Util.makeCssRgb,Util,[r,g,b]);this.ctx.strokeStyle=r;this.current.strokeColor=r}function CanvasGraphics_setFillGray(gray){if(!(this.current.fillColorSpace instanceof DeviceGrayCS)){var v5100=this.current,v23512=new DeviceGrayCS;v5100.fillColorSpace=v23512}gray=JAM.call(Util.makeCssRgb,Util,[gray,gray,gray]);this.ctx.fillStyle=gray;this.current.fillColor=gray}function CanvasGraphics_setStrokeGray(gray){if(!(this.current.strokeColorSpace instanceof
DeviceGrayCS)){var v5104=this.current,v23513=new DeviceGrayCS;v5104.strokeColorSpace=v23513}gray=JAM.call(Util.makeCssRgb,Util,[gray,gray,gray]);this.ctx.strokeStyle=gray;this.current.strokeColor=gray}function CanvasGraphics_setFillColorN(){var cs=this.current.fillColorSpace;if("Pattern"==cs.name){var v5109=this.current,cs=JAM.call(this.getColorN_Pattern,this,[arguments,cs]);v5109.fillColor=cs}else v5109=this.setFillColor,JAM.call(v5109.apply,v5109,[this,arguments])}function CanvasGraphics_setFillColor(){var cs=
this.current.fillColorSpace,cs=JAM.call(cs.getRgb,cs,[arguments]),cs=JAM.call(Util.makeCssRgb,Util,[cs[0],cs[1],cs[2]]);this.ctx.fillStyle=cs;this.current.fillColor=cs}function CanvasGraphics_setStrokeColorN(){var cs=this.current.strokeColorSpace;if("Pattern"==cs.name){var v5119=this.current,cs=JAM.call(this.getColorN_Pattern,this,[arguments,cs]);v5119.strokeColor=cs}else v5119=this.setStrokeColor,JAM.call(v5119.apply,v5119,[this,arguments])}function CanvasGraphics_getColorN_Pattern(IR,cs){if("TilingPattern"==
IR[0]){var args=IR[1],base=cs.base,color;if(base){var baseComps=base.numComps;color=[];for(var i=0,v5123=i<baseComps;v5123;){introspect(JAM.policy.p1)v5123=args[i];JAM.call(color.push,color,[v5123]);i+=1;v5123=i<baseComps}color=JAM.call(base.getRgb,base,[color])}args=JAM.new(TilingPattern,[IR,color,this.ctx,this.objs])}else(color="RadialAxial"==IR[0])||(color="Dummy"==IR[0]),color?args=JAM.call(Pattern.shadingFromIR,Pattern,[IR]):error$$1("Unkown IR type "+IR[0]);return args}function CanvasGraphics_setStrokeColor(){var cs=
this.current.strokeColorSpace,cs=JAM.call(cs.getRgb,cs,[arguments]),cs=JAM.call(Util.makeCssRgb,Util,[cs[0],cs[1],cs[2]]);this.ctx.strokeStyle=cs;this.current.strokeColor=cs}function CanvasGraphics_setFillColorSpace(raw){var v5135=this.current;raw=JAM.call(ColorSpace.fromIR,ColorSpace,[raw]);v5135.fillColorSpace=raw}function CanvasGraphics_setStrokeColorSpace(raw){var v5136=this.current;raw=JAM.call(ColorSpace.fromIR,ColorSpace,[raw]);v5136.strokeColorSpace=raw}function CanvasGraphics_setCharWidthAndBounds(xWidth,
yWidth,llx,lly,urx,ury){JAM.call(this.rectangle,this,[llx,lly,urx-llx,ury-lly]);this.clip();this.endPath()}function CanvasGraphics_setCharWidth(xWidth,yWidth){}function CanvasGraphics_nextLineSetSpacingShowText(wordSpacing,charSpacing,text){JAM.call(this.setWordSpacing,this,[wordSpacing]);JAM.call(this.setCharSpacing,this,[charSpacing]);JAM.call(this.nextLineShowText,this,[text])}function CanvasGraphics_nextLineShowText(text){this.nextLine();JAM.call(this.showText,this,[text])}function CanvasGraphics_showSpacedText(arr){var ctx=
this.ctx,current=this.current,font=current.font,fontSize=current.fontSize,textHScale=current.textHScale;if(!font.coded){var v22775=current.fontMatrix;v22775||(v22775=IDENTITY_MATRIX);textHScale*=v22775[0]}var arrLength=arr.length,textLayer=this.textLayer,v22775={str:"",length:0,canvasWidth:0,geom:{}};if(textLayer=textLayer?!0:!1){ctx.save();if(font.coded){var v5141=ctx.transform;JAM.call(v5141.apply,v5141,[ctx,current.textMatrix]);JAM.call(ctx.scale,ctx,[1,-1]);JAM.call(ctx.translate,ctx,[current.x,
-1*current.y]);JAM.call(ctx.scale,ctx,[textHScale,1])}else this.applyTextTransforms();var v5141=v22775,v23518=this.getTextGeometry();v5141.geom=v23518;ctx.restore()}ctx=0;for(v5141=ctx<arrLength;v5141;){introspect(JAM.policy.p1)v5141=arr[ctx];isNum(v5141)?(v23518=0.001*-v5141*fontSize*textHScale,current.x+=v23518,textLayer&&(v22775.canvasWidth+=v23518,(v23518=0>v5141)&&(v23518=0<v22775.geom.spaceWidth),v23518&&(v5141=Math.round(-v5141/v22775.geom.spaceWidth),0<v5141&&(v22775.str+="\u00a0",v22775.length+=
1)))):isString(v5141)?(v5141=JAM.call(this.showText,this,[v5141,!0]),textLayer&&(v22775.str=" "===v5141.str?v22775.str+"\u00a0":v22775.str+v5141.str,v22775.canvasWidth+=v5141.canvasWidth,v22775.length+=v5141.length)):error$$1("Malformed PDF: "+("TJ array element "+v5141+" is not string or num"));ctx+=1;v5141=ctx<arrLength}textLayer&&(arr=this.textLayer,JAM.call(arr.appendText,arr,[v22775,font.loadedName,fontSize]))}function CanvasGraphics_showText(str,skipTextSelection){var ctx=this.ctx,current=this.current,
font=current.font,glyphs=JAM.call(font.charsToGlyphs,font,[str]),fontSize=current.fontSize,fontSizeScale=current.fontSizeScale,charSpacing=current.charSpacing,wordSpacing=current.wordSpacing,textHScale=current.textHScale,v5158=current.fontMatrix;v5158||(v5158=IDENTITY_MATRIX);var fontMatrix=v5158,textHScale2=textHScale*fontMatrix[0],glyphsLength=glyphs.length,textLayer=this.textLayer,v5158={str:"",length:0,canvasWidth:0,geom:{}};textLayer&&(textLayer=!skipTextSelection);var textLayer=textLayer?!0:
!1,textRenderingMode=current.textRenderingMode;if(font.coded){ctx.save();fontSizeScale=ctx.transform;JAM.call(fontSizeScale.apply,fontSizeScale,[ctx,current.textMatrix]);JAM.call(ctx.translate,ctx,[current.x,current.y]);JAM.call(ctx.scale,ctx,[textHScale,1]);textLayer&&(this.save(),JAM.call(ctx.scale,ctx,[1,-1]),fontSizeScale=v5158,textHScale2=this.getTextGeometry(),fontSizeScale.geom=textHScale2,this.restore());for(var i=0,fontSizeScale=i<glyphsLength;fontSizeScale;){introspect(JAM.policy.p1)var glyph=
glyphs[i];null===glyph?(fontSizeScale=this.ctx,JAM.call(fontSizeScale.translate,fontSizeScale,[wordSpacing,0])):(this.save(),JAM.call(ctx.scale,ctx,[fontSize,fontSize]),fontSizeScale=ctx.transform,JAM.call(fontSizeScale.apply,fontSizeScale,[ctx,fontMatrix]),JAM.call(this.executeOperatorList,this,[glyph.operatorList]),this.restore(),fontSizeScale=JAM.call(Util.applyTransform,Util,[[glyph.width,0],fontMatrix]),fontSizeScale=fontSizeScale[0]*fontSize+JAM.call(Util.sign,Util,[current.fontMatrix[0]])*
charSpacing,JAM.call(ctx.translate,ctx,[fontSizeScale,0]),current.x+=fontSizeScale*textHScale,v5158.str+=glyph.unicode,v5158.length+=1,v5158.canvasWidth+=fontSizeScale);i+=1;fontSizeScale=i<glyphsLength}}else{ctx.save();this.applyTextTransforms();i=current.lineWidth;textHScale=Math.abs(current.textMatrix[0]*fontMatrix[0]);(fontMatrix=0==textHScale)||(fontMatrix=0==i);i=fontMatrix?this.getSinglePixelWidth():i/textHScale;textLayer&&(textHScale=v5158,fontMatrix=this.getTextGeometry(),textHScale.geom=
fontMatrix);1!=fontSizeScale&&(JAM.call(ctx.scale,ctx,[fontSizeScale,fontSizeScale]),i/=fontSizeScale);ctx.lineWidth=i;i=textHScale=0;for(fontMatrix=i<glyphsLength;fontMatrix;){glyph=glyphs[i];if(null===glyph)textHScale+=JAM.call(Util.sign,Util,[current.fontMatrix[0]])*wordSpacing;else{var character=glyph.fontChar,fontMatrix=0.001*glyph.width*fontSize+JAM.call(Util.sign,Util,[current.fontMatrix[0]])*charSpacing;if(!glyph.disabled){var scaledX=textHScale/fontSizeScale;switch(textRenderingMode){default:case JSCompiler_object_inline_FILL_280:case JSCompiler_object_inline_FILL_ADD_TO_PATH_284:JAM.call(ctx.fillText,
ctx,[character,scaledX,0]);break;case JSCompiler_object_inline_STROKE_281:case JSCompiler_object_inline_STROKE_ADD_TO_PATH_285:JAM.call(ctx.strokeText,ctx,[character,scaledX,0]);break;case JSCompiler_object_inline_FILL_STROKE_282:case JSCompiler_object_inline_FILL_STROKE_ADD_TO_PATH_286:JAM.call(ctx.fillText,ctx,[character,scaledX,0]),JAM.call(ctx.strokeText,ctx,[character,scaledX,0]);case JSCompiler_object_inline_INVISIBLE_283:}}textHScale+=fontMatrix;glyph=" "===glyph.unicode?"\u00a0":glyph.unicode;
character=glyph.length;if(scaledX=1<character)JSCompiler_inline_label_isRTLRangeFor_20:{var scaledX=glyph.charCodeAt(0),range=UnicodeRanges[13],v8340=scaledX>=range.begin;v8340&&(v8340=scaledX<range.end);v8340?scaledX=!0:(range=UnicodeRanges[11],(v8340=scaledX>=range.begin)&&(v8340=scaledX<range.end),scaledX=v8340?!0:!1)}if(scaledX)for(scaledX=character-1,range=0<=scaledX;range;){range=v5158.str;introspect(JAM.policy.p1)v8340=glyph[scaledX];v5158.str=range+v8340;scaledX-=1;range=0<=scaledX}else v5158.str+=
glyph;v5158.length+=character;v5158.canvasWidth+=fontMatrix}i+=1;fontMatrix=i<glyphsLength}current.x+=textHScale*textHScale2}ctx.restore();textLayer&&(ctx=this.textLayer,JAM.call(ctx.appendText,ctx,[v5158,font.loadedName,fontSize]));return v5158}function CanvasGraphics_getTextGeometry(){var geometry={},ctx=this.ctx,font=this.current.font,ctxMatrix=ctx.mozCurrentTransform;ctxMatrix&&(ctx=JAM.call(Util.applyTransform,Util,[[0,0],ctxMatrix]),ctxMatrix=JAM.call(Util.applyTransform,Util,[[1,1],ctxMatrix]),
geometry.x=ctx[0],geometry.y=ctx[1],geometry.hScale=ctxMatrix[0]-ctx[0],geometry.vScale=ctxMatrix[1]-ctx[1]);geometry.spaceWidth=font.spaceWidth;return geometry}function CanvasGraphics_applyTextTransforms(){var ctx=this.ctx,current=this.current,textHScale=current.textHScale,v5198=current.fontMatrix;v5198||(v5198=IDENTITY_MATRIX);var v5199=ctx.transform;JAM.call(v5199.apply,v5199,[ctx,current.textMatrix]);JAM.call(ctx.scale,ctx,[1,-1]);JAM.call(ctx.translate,ctx,[current.x,-1*current.y]);current=ctx.transform;
JAM.call(current.apply,current,[ctx,v5198]);JAM.call(ctx.scale,ctx,[textHScale,1])}function CanvasGraphics_nextLine(){JAM.call(this.moveText,this,[0,this.current.leading])}function CanvasGraphics_setTextMatrix(a,b,c,d,e,f){this.current.textMatrix=[a,b,c,d,e,f];this.current.x=this.current.lineX=0;this.current.y=this.current.lineY=0}function CanvasGraphics_setLeadingMoveText(x,y){JAM.call(this.setLeading,this,[-y]);JAM.call(this.moveText,this,[x,y])}function CanvasGraphics_moveText(x,y){var v5209=this.current,
v8354=this.current;v5209.x=v8354.lineX+=x;v8354=v5209=this.current;v5209.y=v8354.lineY+=y}function CanvasGraphics_setTextRise(rise){TODO("text rise: "+rise)}function CanvasGraphics_setTextRenderingMode(mode){mode>=JSCompiler_object_inline_FILL_ADD_TO_PATH_284&&TODO("unsupported text rendering mode: "+mode);this.current.textRenderingMode=mode}function CanvasGraphics_setFont(fontRefName,size){var v5215=this.objs,v5215=JAM.call(v5215.get,v5215,[fontRefName]),current=this.current;v5215||error$$1("Can't find font for "+
fontRefName);if(v5215.fontMatrix)var v5218=current,v23521=v5215.fontMatrix.slice(0);else v5218=current,v23521=IDENTITY_MATRIX.slice(0);v5218.fontMatrix=v23521;(v5218=0===current.fontMatrix[0])||(v5218=0===current.fontMatrix[3]);v5218&&warn("Invalid font matrix for font "+fontRefName);0>size&&(size=-size,v5218=current.fontMatrix,v5218[0]*=-1,current=current.fontMatrix,current[3]*=-1);this.current.font=v5215;this.current.fontSize=size;if(!v5215.coded){(current=v5215.loadedName)||(current="sans-serif");
var v23521=current,current=v5215.black?v5215.bold?"bolder":"bold":v5215.bold?"bold":"normal",v5218=v5215.italic?"italic":"normal",v5215=v5215.isSerifFont?"serif":"sans-serif",v5215='"'+v23521+'", '+v5215,v23521=size>=MIN_FONT_SIZE?size:MIN_FONT_SIZE,v5235=this.current,v8366;v8366=v23521!=MIN_FONT_SIZE?1:size/MIN_FONT_SIZE;v5235.fontSizeScale=v8366;v5215=v5218+" "+current+" "+v23521+"px "+v5215;this.ctx.font=v5215}}function CanvasGraphics_setLeading(leading){this.current.leading=-leading}function CanvasGraphics_setHScale(scale){this.current.textHScale=
scale/100}function CanvasGraphics_setWordSpacing(spacing){this.current.wordSpacing=spacing}function CanvasGraphics_setCharSpacing(spacing){this.current.charSpacing=spacing}function CanvasGraphics_endText(){}function CanvasGraphics_beginText(){this.current.textMatrix=IDENTITY_MATRIX;this.current.x=this.current.lineX=0;this.current.y=this.current.lineY=0}function CanvasGraphics_eoClip(){this.pendingClip=EO_CLIP}function CanvasGraphics_clip(){this.pendingClip=NORMAL_CLIP}function CanvasGraphics_endPath(){this.consumePath()}
function CanvasGraphics_closeEOFillStroke(){var savedFillRule=this.setEOFillRule();this.closePath();this.fillStroke();JAM.call(this.restoreFillRule,this,[savedFillRule])}function CanvasGraphics_closeFillStroke(){this.closePath();this.fillStroke()}function CanvasGraphics_eoFillStroke(){var savedFillRule=this.setEOFillRule();this.fillStroke();JAM.call(this.restoreFillRule,this,[savedFillRule])}function CanvasGraphics_fillStroke(){JAM.call(this.fill,this,[!1]);JAM.call(this.stroke,this,[!1]);this.consumePath()}
function CanvasGraphics_eoFill(){var savedFillRule=this.setEOFillRule();this.fill();JAM.call(this.restoreFillRule,this,[savedFillRule])}function CanvasGraphics_fill(consumePath){consumePath="undefined"!==typeof consumePath?consumePath:!0;var ctx=this.ctx,fillColor=this.current.fillColor,v8371=fillColor;v8371&&(v8371=fillColor.hasOwnProperty("type"))&&(v8371="Pattern"===fillColor.type);v8371?(ctx.save(),v8371=ctx,fillColor=JAM.call(fillColor.getPattern,fillColor,[ctx]),v8371.fillStyle=fillColor,ctx.fill(),
ctx.restore()):ctx.fill();consumePath&&this.consumePath()}function CanvasGraphics_closeStroke(){this.closePath();this.stroke()}function CanvasGraphics_stroke(consumePath){consumePath="undefined"!==typeof consumePath?consumePath:!0;var ctx=this.ctx,strokeColor=this.current.strokeColor;if(0===this.current.lineWidth){var v5251=ctx,v23524=this.getSinglePixelWidth();v5251.lineWidth=v23524}ctx.globalAlpha=this.current.strokeAlpha;(v5251=strokeColor)&&(v5251=strokeColor.hasOwnProperty("type"))&&(v5251="Pattern"===
strokeColor.type);v5251?(ctx.save(),v5251=ctx,strokeColor=JAM.call(strokeColor.getPattern,strokeColor,[ctx]),v5251.strokeStyle=strokeColor,ctx.stroke(),ctx.restore()):ctx.stroke();consumePath&&this.consumePath();ctx.globalAlpha=this.current.fillAlpha}function CanvasGraphics_rectangle(x,y,width,height){var v5257=this.ctx;JAM.call(v5257.rect,v5257,[x,y,width,height])}function CanvasGraphics_closePath(){this.ctx.closePath()}function CanvasGraphics_curveTo3(x1,y1,x3,y3){JAM.call(this.curveTo,this,[x1,
y1,x3,y3,x3,y3]);x1=this.current;JAM.call(x1.setCurrentPoint,x1,[x3,y3])}function CanvasGraphics_curveTo2(x2,y2,x3,y3){var current=this.current;this.ctx.bezierCurveTo(current.x,current.y,x2,y2,x3,y3);JAM.call(current.setCurrentPoint,current,[x3,y3])}function CanvasGraphics_curveTo(x1,y1,x2,y2,x3,y3){this.ctx.bezierCurveTo(x1,y1,x2,y2,x3,y3);x1=this.current;JAM.call(x1.setCurrentPoint,x1,[x3,y3])}function CanvasGraphics_lineTo(x,y){var v5265=this.ctx;JAM.call(v5265.lineTo,v5265,[x,y]);v5265=this.current;
JAM.call(v5265.setCurrentPoint,v5265,[x,y])}function CanvasGraphics_moveTo(x,y){var v5267=this.ctx;JAM.call(v5267.moveTo,v5267,[x,y]);v5267=this.current;JAM.call(v5267.setCurrentPoint,v5267,[x,y])}function CanvasGraphics_transform(a,b,c,d,e,f){var v5269=this.ctx;JAM.call(v5269.transform,v5269,[a,b,c,d,e,f])}function CanvasGraphics_restore(){var prev=this.stateStack.pop();prev&&(this.current=prev,this.ctx.restore())}function CanvasGraphics_save(){this.ctx.save();var old=this.current,v5273=this.stateStack;
JAM.call(v5273.push,v5273,[old]);this.current=old=old.clone()}function CanvasGraphics_setGState(states){for(var i=0,ii=states.length,v5281=i<ii;v5281;){introspect(JAM.policy.p1)v5281=states[i];var key=v5281[0],value=v5281[1];switch(key){case "LW":JAM.call(this.setLineWidth,this,[value]);break;case "LC":JAM.call(this.setLineCap,this,[value]);break;case "LJ":JAM.call(this.setLineJoin,this,[value]);break;case "ML":JAM.call(this.setMiterLimit,this,[value]);break;case "D":JAM.call(this.setDash,this,[value[0],
value[1]]);break;case "RI":JAM.call(this.setRenderingIntent,this,[value]);break;case "FL":JAM.call(this.setFlatness,this,[value]);break;case "Font":JAM.call(this.setFont,this,[v5281[1],v5281[2]]);break;case "CA":this.current.strokeAlpha=v5281[1];break;case "ca":this.current.fillAlpha=v5281[1],this.ctx.globalAlpha=v5281[1]}i+=1;v5281=i<ii}}function CanvasGraphics_setFlatness(flatness){TODO("set flatness: "+flatness)}function CanvasGraphics_setRenderingIntent(intent){TODO("set rendering intent: "+intent)}
function CanvasGraphics_setDash(dashArray,dashPhase){this.ctx.mozDash=dashArray;this.ctx.mozDashOffset=dashPhase;this.ctx.webkitLineDash=dashArray;this.ctx.webkitLineDashOffset=dashPhase}function CanvasGraphics_setMiterLimit(limit){this.ctx.miterLimit=limit}function CanvasGraphics_setLineJoin(style){var v5289=this.ctx;introspect(JAM.policy.p1)v5289.lineJoin=LINE_JOIN_STYLES[style]}function CanvasGraphics_setLineCap(style){var v5290=this.ctx;introspect(JAM.policy.p1)v5290.lineCap=LINE_CAP_STYLES[style]}
function CanvasGraphics_setLineWidth(width){this.current.lineWidth=width;this.ctx.lineWidth=width}function CanvasGraphics_endDrawing(){this.ctx.restore();this.textLayer&&this.textLayer.endLayout()}function CanvasGraphics_executeOperatorList(operatorList,executionStartIdx,continueCallback,stepper){var argsArray=operatorList.argsArray;operatorList=operatorList.fnArray;executionStartIdx=executionStartIdx||0;var argsArrayLen=argsArray.length;if(argsArrayLen==executionStartIdx)return executionStartIdx;
for(var endTime=Date.now()+kExecutionTime,objs=this.objs,fnName,slowCommands=this.slowCommands;;){(fnName=stepper)&&(fnName=executionStartIdx===stepper.nextBreakPoint);if(fnName)return JAM.call(stepper.breakIt,stepper,[executionStartIdx,continueCallback]),executionStartIdx;introspect(JAM.policy.p1)fnName=operatorList[executionStartIdx];if("dependency"!==fnName){introspect(JAM.policy.p1)var v5299=this[fnName];introspect(JAM.policy.p1)var v5300=argsArray[executionStartIdx];JAM.call(v5299.apply,v5299,
[this,v5300])}else{introspect(JAM.policy.p1)v5299=argsArray[executionStartIdx];for(var v5300=0,nn=v5299.length,v5302=v5300<nn;v5302;){introspect(JAM.policy.p1)v5302=v5299[v5300];if(!JAM.call(objs.isResolved,objs,[v5302]))return JAM.call(objs.get,objs,[v5302,continueCallback]),executionStartIdx;v5300+=1;v5302=v5300<nn}}executionStartIdx+=1;if(executionStartIdx==argsArrayLen)return executionStartIdx;if(v5299=continueCallback){introspect(JAM.policy.p1)fnName=slowCommands[fnName];fnName&&(fnName=Date.now()>
endTime);v5299=fnName}if(v5299)return PdfJS_window.setTimeout(continueCallback,0),executionStartIdx}}function CanvasGraphics_beginDrawing(viewport){viewport=viewport.transform;this.ctx.save();var v5307=this.ctx.transform;JAM.call(v5307.apply,v5307,[this.ctx,viewport]);this.textLayer&&this.textLayer.beginLayout()}function CanvasGraphics(canvasCtx,objs,textLayer){this.ctx=canvasCtx;var v23527=new CanvasExtraState;this.current=v23527;this.stateStack=[];this.xobjs=this.res=this.pendingClip=null;this.objs=
objs;this.textLayer=textLayer;canvasCtx&&addContextCurrentTransform(canvasCtx)}var kExecutionTime=15,LINE_CAP_STYLES=["butt","round","square"],LINE_JOIN_STYLES=["miter","round","bevel"],NORMAL_CLIP={},EO_CLIP={};CanvasGraphics.prototype={slowCommands:{stroke:!0,closeStroke:!0,fill:!0,eoFill:!0,fillStroke:!0,eoFillStroke:!0,closeFillStroke:!0,closeEOFillStroke:!0,showText:!0,showSpacedText:!0,setStrokeColorSpace:!0,setFillColorSpace:!0,setStrokeColor:!0,setStrokeColorN:!0,setFillColor:!0,setFillColorN:!0,
setStrokeGray:!0,setFillGray:!0,setStrokeRGBColor:!0,setFillRGBColor:!0,setStrokeCMYKColor:!0,setFillCMYKColor:!0,paintJpegXObject:!0,paintImageXObject:!0,paintImageMaskXObject:!0,shadingFill:!0},beginDrawing:CanvasGraphics_beginDrawing,executeOperatorList:CanvasGraphics_executeOperatorList,endDrawing:CanvasGraphics_endDrawing,setLineWidth:CanvasGraphics_setLineWidth,setLineCap:CanvasGraphics_setLineCap,setLineJoin:CanvasGraphics_setLineJoin,setMiterLimit:CanvasGraphics_setMiterLimit,setDash:CanvasGraphics_setDash,
setRenderingIntent:CanvasGraphics_setRenderingIntent,setFlatness:CanvasGraphics_setFlatness,setGState:CanvasGraphics_setGState,save:CanvasGraphics_save,restore:CanvasGraphics_restore,transform:CanvasGraphics_transform,moveTo:CanvasGraphics_moveTo,lineTo:CanvasGraphics_lineTo,curveTo:CanvasGraphics_curveTo,curveTo2:CanvasGraphics_curveTo2,curveTo3:CanvasGraphics_curveTo3,closePath:CanvasGraphics_closePath,rectangle:CanvasGraphics_rectangle,stroke:CanvasGraphics_stroke,closeStroke:CanvasGraphics_closeStroke,
fill:CanvasGraphics_fill,eoFill:CanvasGraphics_eoFill,fillStroke:CanvasGraphics_fillStroke,eoFillStroke:CanvasGraphics_eoFillStroke,closeFillStroke:CanvasGraphics_closeFillStroke,closeEOFillStroke:CanvasGraphics_closeEOFillStroke,endPath:CanvasGraphics_endPath,clip:CanvasGraphics_clip,eoClip:CanvasGraphics_eoClip,beginText:CanvasGraphics_beginText,endText:CanvasGraphics_endText,setCharSpacing:CanvasGraphics_setCharSpacing,setWordSpacing:CanvasGraphics_setWordSpacing,setHScale:CanvasGraphics_setHScale,
setLeading:CanvasGraphics_setLeading,setFont:CanvasGraphics_setFont,setTextRenderingMode:CanvasGraphics_setTextRenderingMode,setTextRise:CanvasGraphics_setTextRise,moveText:CanvasGraphics_moveText,setLeadingMoveText:CanvasGraphics_setLeadingMoveText,setTextMatrix:CanvasGraphics_setTextMatrix,nextLine:CanvasGraphics_nextLine,applyTextTransforms:CanvasGraphics_applyTextTransforms,getTextGeometry:CanvasGraphics_getTextGeometry,showText:CanvasGraphics_showText,showSpacedText:CanvasGraphics_showSpacedText,
nextLineShowText:CanvasGraphics_nextLineShowText,nextLineSetSpacingShowText:CanvasGraphics_nextLineSetSpacingShowText,setCharWidth:CanvasGraphics_setCharWidth,setCharWidthAndBounds:CanvasGraphics_setCharWidthAndBounds,setStrokeColorSpace:CanvasGraphics_setStrokeColorSpace,setFillColorSpace:CanvasGraphics_setFillColorSpace,setStrokeColor:CanvasGraphics_setStrokeColor,getColorN_Pattern:CanvasGraphics_getColorN_Pattern,setStrokeColorN:CanvasGraphics_setStrokeColorN,setFillColor:CanvasGraphics_setFillColor,
setFillColorN:CanvasGraphics_setFillColorN,setStrokeGray:CanvasGraphics_setStrokeGray,setFillGray:CanvasGraphics_setFillGray,setStrokeRGBColor:CanvasGraphics_setStrokeRGBColor,setFillRGBColor:CanvasGraphics_setFillRGBColor,setStrokeCMYKColor:CanvasGraphics_setStrokeCMYKColor,setFillCMYKColor:CanvasGraphics_setFillCMYKColor,shadingFill:CanvasGraphics_shadingFill,beginInlineImage:CanvasGraphics_beginInlineImage,beginImageData:CanvasGraphics_beginImageData,paintFormXObjectBegin:CanvasGraphics_paintFormXObjectBegin,
paintFormXObjectEnd:CanvasGraphics_paintFormXObjectEnd,paintJpegXObject:CanvasGraphics_paintJpegXObject,paintImageMaskXObject:CanvasGraphics_paintImageMaskXObject,paintImageXObject:CanvasGraphics_paintImageXObject,putBinaryImageData:CanvasGraphics_putBinaryImageData,markPoint:CanvasGraphics_markPoint,markPointProps:CanvasGraphics_markPointProps,beginMarkedContent:CanvasGraphics_beginMarkedContent,beginMarkedContentProps:CanvasGraphics_beginMarkedContentProps,endMarkedContent:CanvasGraphics_endMarkedContent,
beginCompat:CanvasGraphics_beginCompat,endCompat:CanvasGraphics_endCompat,consumePath:CanvasGraphics_consumePath,setEOFillRule:CanvasGraphics_setEOFillRule,restoreFillRule:CanvasGraphics_restoreFillRule,getSinglePixelWidth:CanvasGraphics_getSinglePixelWidth};return CanvasGraphics}function CanvasExtraStateClosure(){function CanvasExtraState_setCurrentPoint(x,y){this.x=x;this.y=y}function CanvasExtraState_clone(){return Object.create(this)}function CanvasExtraState(old){this.alphaIsShape=!1;this.fontSize=
0;this.fontSizeScale=1;this.fontMatrix=this.textMatrix=IDENTITY_MATRIX;this.wordSpacing=this.charSpacing=this.lineY=this.lineX=this.y=this.x=this.leading=0;this.textHScale=1;this.textRenderingMode=JSCompiler_object_inline_FILL_280;var v23528=new DeviceGrayCS;this.fillColorSpace=v23528;this.fillColorSpaceObj=null;this.strokeColorSpace=v23528=new DeviceGrayCS;this.strokeColorObj=this.fillColorObj=this.strokeColorSpaceObj=null;this.strokeColor=this.fillColor="#000000";this.lineWidth=this.strokeAlpha=
this.fillAlpha=1;this.old=old}CanvasExtraState.prototype={clone:CanvasExtraState_clone,setCurrentPoint:CanvasExtraState_setCurrentPoint};return CanvasExtraState}function WorkerTransportClosure(){function WorkerTransport_getAnnotations(pageIndex){var v5312=this.messageHandler;JAM.call(v5312.send,v5312,["GetAnnotationsRequest",{pageIndex:pageIndex}])}function WorkerTransport_getPage(pageNumber,promise){var pageIndex=pageNumber-1;if(pageIndex in this.pagePromises){var v5314=this.pagePromises;introspect(JAM.policy.p1)return v5314[pageIndex]}promise=
JAM.new(PDFJS.Promise,["Page "+pageNumber]);this.pagePromises[pageIndex]=promise;v5314=this.messageHandler;JAM.call(v5314.send,v5314,["GetPageRequest",{pageIndex:pageIndex}]);return promise}function WorkerTransport_sendData(data){var v5321=this.messageHandler;JAM.call(v5321.send,v5321,["GetDocRequest",data])}function WorkerTransport_setupMessageHandler(messageHandler){function v83(data,promise){function messageHandler_onloadClosure(){var width=img.width,height=img.height,size=width*height,rgbaLength=
4*size,size=new Uint8Array(size*components),tmpCanvas=createScratchCanvas(width,height),tmpCanvas=JAM.call(tmpCanvas.getContext,tmpCanvas,["2d"]);JAM.call(tmpCanvas.drawImage,tmpCanvas,[img,0,0]);tmpCanvas=JAM.call(tmpCanvas.getImageData,tmpCanvas,[0,0,width,height]).data;if(3==components)for(var i=0,j=0,v5326=i<rgbaLength;v5326;)size[j]=tmpCanvas[i],size[j+1]=tmpCanvas[i+1],size[j+2]=tmpCanvas[i+2],i+=4,j+=3,v5326=i<rgbaLength;else if(1==components)for(j=i=0,v5326=i<rgbaLength;v5326;)size[j]=tmpCanvas[i],
i+=4,j+=1,v5326=i<rgbaLength;JAM.call(promise.resolve,promise,[{data:size,width:width,height:height}])}var imageData=data[0],components=data[1],v8382=3!=components;v8382&&(v8382=1!=components);v8382&&error$$1("Only 3 component or 1 component can be returned");var img=new Image,v8382=img,v23530=JAM.call(messageHandler_onloadClosure.bind,messageHandler_onloadClosure,[this]);JAM.set(v8382,"onload",v23530);imageData="data:image/jpeg;base64,"+PdfJS_window.window.btoa(imageData);img.src=imageData}function transportError(data){var v5334=
this.pageCache,v5335=data.pageNum-1;introspect(JAM.policy.p1)v5334=v5334[v5335];v5334.displayReadyPromise?(v5334=v5334.displayReadyPromise,JAM.call(v5334.reject,v5334,[data.error])):error$$1(data.error)}function transportObj(data){var id=data[0],type=data[1],v8385=this.objs;if(!JAM.call(v8385.hasData,v8385,[id]))switch(type){case "JpegStream":data=data[2];loadJpegStream(id,data,this.objs);break;case "Image":data=data[2];type=this.objs;JAM.call(type.resolve,type,[id,data]);break;case "Font":type=data[2];
v8385=data[3];data=data[4];if(v8385)var fontFileDict=new Dict,v8385=JAM.new(Stream,[v8385,0,v8385.length,fontFileDict]);data=JAM.new(Font,[type,v8385,data]);type=this.objs;JAM.call(type.resolve,type,[id,data]);break;default:error$$1("Got unkown object type "+type)}}function transportRender(data){var v5346=this.pageCache,v5347=data.pageIndex;introspect(JAM.policy.p1)v5346=v5346[v5347];var v5347=data.depFonts,v5348=v5346.stats;JAM.call(v5348.timeEnd,v5348,["Page Request"]);JAM.call(v5346.startRenderingFromOperatorList,
v5346,[data.operatorList,v5347])}function transportAnnotations(data){var annotations=data.annotations,v8386=this.pageCache;data=data.pageIndex;introspect(JAM.policy.p1)v8386=v8386[data];v8386=v8386.annotationsPromise;JAM.call(v8386.resolve,v8386,[annotations])}function transportPage(data){var pageInfo=data.pageInfo;data=JAM.new(PDFPageProxy,[pageInfo,this]);JAM.set(this.pageCache,pageInfo.pageIndex,data);var v5353=this.pagePromises,pageInfo=pageInfo.pageIndex;introspect(JAM.policy.p1)v5353=v5353[pageInfo];
JAM.call(v5353.resolve,v5353,[data])}function transportDoc(data){data=data.pdfInfo;this.pdfDocument=data=JAM.new(PDFDocumentProxy,[data,this]);var v5355=this.workerReadyPromise;JAM.call(v5355.resolve,v5355,[data])}this.messageHandler=messageHandler;JAM.call(messageHandler.on,messageHandler,["GetDoc",transportDoc,this]);JAM.call(messageHandler.on,messageHandler,["GetPage",transportPage,this]);JAM.call(messageHandler.on,messageHandler,["GetAnnotations",transportAnnotations,this]);JAM.call(messageHandler.on,
messageHandler,["RenderPage",transportRender,this]);JAM.call(messageHandler.on,messageHandler,["obj",transportObj,this]);JAM.call(messageHandler.on,messageHandler,["PageError",transportError,this]);JAM.call(messageHandler.on,messageHandler,["JpegDecode",v83])}function WorkerTransport_setupFakeWorker(){function WorkerTransport_terminate(){}function WorkerTransport_postMessage(obj){JAM.call(fakeWorker.onmessage,fakeWorker,[{data:obj}])}var fakeWorker={postMessage:WorkerTransport_postMessage,terminate:WorkerTransport_terminate},
messageHandler=new MessageHandler("main",fakeWorker);JAM.call(this.setupMessageHandler,this,[messageHandler]);JAM.call(WorkerMessageHandler.setup,WorkerMessageHandler,[messageHandler])}function WorkerTransport_destroy(){this.worker&&this.worker.terminate();this.pageCache=[];this.pagePromises=[]}function WorkerTransport(promise){function transportTest(supportTypedArray){supportTypedArray?(this.worker=worker,JAM.call(this.setupMessageHandler,this,[messageHandler])):(globalScope.PDFJS.disableWorker=
!0,this.setupFakeWorker())}this.workerReadyPromise=promise;this.objs=promise=new PDFObjects;this.pageCache=[];this.pagePromises=[];this.fontsLoading={};(promise=!globalScope.PDFJS.disableWorker)&&(promise="undefined"!==typeof PdfJS_window.Worker);if(promise){promise=PDFJS.workerSrc;"undefined"===typeof promise&&error$$1("No PDFJS.workerSrc specified");try{var worker;if(PDFJS.isFirefoxExtension){var bb=new MozBlobBuilder;bb.append(PdfJS_window.document.querySelector("#PDFJS_SCRIPT_TAG").textContent);
var v5362=PdfJS_window.window.URL,blobUrl=JAM.call(v5362.createObjectURL,v5362,[bb.getBlob()]);worker=new Worker(blobUrl)}else worker=new Worker(promise);var messageHandler=new MessageHandler("main",worker);this.messageHandler=messageHandler;JAM.call(messageHandler.on,messageHandler,["test",JAM.call(transportTest.bind,transportTest,[this])]);var testObj=new Uint8Array(1);JAM.call(messageHandler.send,messageHandler,["test",testObj]);return}catch(e){warn("The worker has been disabled.")}}globalScope.PDFJS.disableWorker=
!0;this.setupFakeWorker()}WorkerTransport.prototype={destroy:WorkerTransport_destroy,setupFakeWorker:WorkerTransport_setupFakeWorker,setupMessageHandler:WorkerTransport_setupMessageHandler,sendData:WorkerTransport_sendData,getPage:WorkerTransport_getPage,getAnnotations:WorkerTransport_getAnnotations};return WorkerTransport}function PDFPageProxyClosure(){function PDFPageProxy_destroy(){this.destroyed=!0;this.renderInProgress||(delete this.operatorList,delete this.displayReadyPromise)}function PDFPageProxy_getOperationList(){var promise=
new PDFJS.Promise,operationList={dependencyFontsID:null,operatorList:null};JAM.call(promise.resolve,promise,[operationList]);return promise}function PDFPageProxy_getTextContent(){var promise=new PDFJS.Promise,textContent="page text";JAM.call(promise.resolve,promise,[textContent]);return promise}function PDFPageProxy_display(gfx,viewport,callback){function next(){startIdx=JAM.call(gfx.executeOperatorList,gfx,[operatorList,startIdx,next,stepper]);startIdx==length&&(gfx.endDrawing(),JAM.call(stats.timeEnd,
stats,["Rendering"]),JAM.call(stats.timeEnd,stats,["Overall"]),callback&&callback())}var stats=this.stats;JAM.call(stats.time,stats,["Rendering"]);JAM.call(gfx.beginDrawing,gfx,[viewport]);var startIdx=0,length=this.operatorList.fnArray.length,operatorList=this.operatorList,stepper=null;if(viewport=PDFJS.pdfBug)viewport=StepperManager.enabled;if(viewport){stepper=StepperManager.create(this.pageNumber-1);JAM.call(stepper.init,stepper,[operatorList]);viewport=stepper;var v23532=stepper.getNextBreakPoint();
viewport.nextBreakPoint=v23532}next()}function PDFPageProxy_ensureFonts(fonts,callback){function pageEnsureFontsFontObjs(fontObjs){fontObjs=this.stats;JAM.call(fontObjs.timeEnd,fontObjs,["Font Loading"]);JAM.call(callback.call,callback,[this])}var v5377=this.stats;JAM.call(v5377.time,v5377,["Font Loading"]);for(var v5377=0,ii=fonts.length,v5379=v5377<ii;v5379;){v5379=this.objs.objs;introspect(JAM.policy.p1)var v8397=fonts[v5377];introspect(JAM.policy.p1)v5379=v5379[v8397];fonts[v5377]=v5379.data;
v5377+=1;v5379=v5377<ii}JAM.call(FontLoader.bind,FontLoader,[fonts,JAM.call(pageEnsureFontsFontObjs.bind,pageEnsureFontsFontObjs,[this])])}function PDFPageProxy_startRenderingFromOperatorList(operatorList,fonts){function pageStartRenderingFromOperatorListEnsureFonts(){displayContinuation()}function displayContinuation(){function pageSetTimeout(){self.displayReadyPromise.resolve()}PdfJS_window.setTimeout(pageSetTimeout)}var self=this;this.operatorList=operatorList;JAM.call(this.ensureFonts,this,[fonts,
pageStartRenderingFromOperatorListEnsureFonts])}function PDFPageProxy_render(params){function pageDisplayReadPromiseError(reason){complete(reason)}function pageDisplayReadyPromise(){if(self.destroyed)complete();else{var gfx=JAM.new(CanvasGraphics,[params.canvasContext,this.objs,params.textLayer]);try{JAM.call(this.display,this,[gfx,params.viewport,complete])}catch(e){complete(e)}}}function complete(error){self.renderInProgress=!1;self.destroyed&&(delete self.operatorList,delete self.displayReadyPromise);
error?JAM.call(promise.reject,promise,[error]):promise.resolve()}this.renderInProgress=!0;var promise=new Promise,stats=this.stats;JAM.call(stats.time,stats,["Overall"]);this.displayReadyPromise||(this.displayReadyPromise=stats=new Promise,this.destroyed=!1,stats=this.stats,JAM.call(stats.time,stats,["Page Request"]),stats=this.transport.messageHandler,JAM.call(stats.send,stats,["RenderPageRequest",{pageIndex:this.pageNumber-1}]));var self=this,stats=this.displayReadyPromise;JAM.call(stats.then,stats,
[JAM.call(pageDisplayReadyPromise.bind,pageDisplayReadyPromise,[this]),pageDisplayReadPromiseError]);return promise}function PDFPageProxy_getAnnotations(){if(this.annotationsPromise)return this.annotationsPromise;var promise=new PDFJS.Promise;this.annotationsPromise=promise;var v5396=this.transport;JAM.call(v5396.getAnnotations,v5396,[this.pageInfo.pageIndex]);return promise}function PDFPageProxy_getViewport(scale,rotate){2>arguments.length&&(rotate=this.rotate);return JAM.new(PDFJS.PageViewport,
[this.view,scale,rotate,0,0])}function PDFPageProxy(pageInfo,transport){this.pageInfo=pageInfo;this.transport=transport;var v23534=new StatTimer;this.stats=v23534;this.stats.enabled=!!globalScope.PDFJS.enableStats;this.objs=transport.objs;this.renderInProgress=!1}function v5406(){return this.pageInfo.pageIndex+1}function v5407(){return this.pageInfo.rotate}function v5408(){return this.pageInfo.ref}function v5409(){return this.pageInfo.view}PDFPageProxy.prototype={getViewport:PDFPageProxy_getViewport,
getAnnotations:PDFPageProxy_getAnnotations,render:PDFPageProxy_render,startRenderingFromOperatorList:PDFPageProxy_startRenderingFromOperatorList,ensureFonts:PDFPageProxy_ensureFonts,display:PDFPageProxy_display,getTextContent:PDFPageProxy_getTextContent,getOperationList:PDFPageProxy_getOperationList,destroy:PDFPageProxy_destroy};JAM.call(Object.defineProperty,Object,[PDFPageProxy.prototype,"view",{get:v5409}]);JAM.call(Object.defineProperty,Object,[PDFPageProxy.prototype,"ref",{get:v5408}]);JAM.call(Object.defineProperty,
Object,[PDFPageProxy.prototype,"rotate",{get:v5407}]);JAM.call(Object.defineProperty,Object,[PDFPageProxy.prototype,"pageNumber",{get:v5406}]);return PDFPageProxy}function PDFDocumentProxyClosure(){function PDFDocumentProxy_destroy(){this.transport.destroy()}function PDFDocumentProxy_getMetadata(){var promise=new PDFJS.Promise,info=this.pdfInfo.info,metadata=this.pdfInfo.metadata,metadata=metadata?JAM.new(PDFJS.Metadata,[metadata]):null;JAM.call(promise.resolve,promise,[{info:info,metadata:metadata}]);
return promise}function PDFDocumentProxy_getOutline(){var promise=new PDFJS.Promise,outline=this.pdfInfo.outline;JAM.call(promise.resolve,promise,[outline]);return promise}function PDFDocumentProxy_getDestinations(){var promise=new PDFJS.Promise,destinations=this.pdfInfo.destinations;JAM.call(promise.resolve,promise,[destinations]);return promise}function PDFDocumentProxy_getPage(number){var v5419=this.transport;return JAM.call(v5419.getPage,v5419,[number])}function PDFDocumentProxy(pdfInfo,transport){this.pdfInfo=
pdfInfo;this.transport=transport}function v5422(){return this.pdfInfo.numPages}function v5423(){return this.pdfInfo.fingerprint}PDFDocumentProxy.prototype={getPage:PDFDocumentProxy_getPage,getDestinations:PDFDocumentProxy_getDestinations,getOutline:PDFDocumentProxy_getOutline,getMetadata:PDFDocumentProxy_getMetadata,destroy:PDFDocumentProxy_destroy};JAM.call(Object.defineProperty,Object,[PDFDocumentProxy.prototype,"fingerprint",{get:v5423}]);JAM.call(Object.defineProperty,Object,[PDFDocumentProxy.prototype,
"numPages",{get:v5422}]);return PDFDocumentProxy}function getDocument(source){function getPDFLoad(data){JAM.call(transport.sendData,transport,[data])}function getPDFError(e){JAM.call(promise.reject,promise,["Unexpected server response of "+e.target.status+"."])}function getPDFProgress(evt){evt.lengthComputable&&JAM.call(promise.progress,promise,[{loaded:evt.loaded,total:evt.total}])}var promise=new PDFJS.Promise,transport=JAM.new(WorkerTransport,[promise]);"string"===typeof source?JAM.call(PDFJS.getPdf,
PDFJS,[{url:source,progress:getPDFProgress,error:getPDFError},getPDFLoad]):JAM.call(transport.sendData,transport,[source]);return promise}function StatTimerClosure(){function StatTimer_toString(){for(var times=this.times,out="",longest=0,i=0,ii=times.length,v5432=i<ii;v5432;){introspect(JAM.policy.p1)v5432=times[i];v5432=v5432.name;v5432.length>longest&&(longest=v5432.length);i+=1;v5432=i<ii}i=0;ii=times.length;for(v5432=i<ii;v5432;){introspect(JAM.policy.p1)var span=times[i];for(var v5432=span.end-
span.start,span=span.name,v5435=span.length<longest;v5435;)span+=" ",v5435=span.length<longest;out+=span+" "+v5432+"ms\n";i+=1;v5432=i<ii}return out}function StatTimer_timeEnd(name){if(this.enabled){if(!(name in this.started))throw"Timer has not been started for "+name;var v5440=this.times,v22096=this.started;introspect(JAM.policy.p1)v22096=v22096[name];JAM.call(v5440.push,v5440,[{name:name,start:v22096,end:Date.now()}]);delete this.started[name]}}function StatTimer_time(name){if(this.enabled){if(name in
this.started)throw"Timer is already running for "+name;var v5445=this.started,v23535=Date.now();JAM.set(v5445,name,v23535)}}function StatTimer(){this.started={};this.times=[];this.enabled=!0}StatTimer.prototype={time:StatTimer_time,timeEnd:StatTimer_timeEnd,toString:StatTimer_toString};return StatTimer}function PromiseClosure(){function Promise_then(callback,errback,progressback){callback||JAM.call(error,null,["Requiring callback"+this.name]);if(this.isResolved)errback=this.data,JAM.call(callback.call,
callback,[null,errback]);else if((error=this.isRejected)&&(error=errback),error){var error=this.error;JAM.call(errback.call,errback,[null,error])}else error=this.callbacks,JAM.call(error.push,error,[callback]),errback&&(callback=this.errbacks,JAM.call(callback.push,callback,[errback]));progressback&&(callback=this.progressbacks,JAM.call(callback.push,callback,[progressback]))}function Promise_reject(reason){this.isRejected&&error$$1("A Promise can be rejected only once "+this.name);this.isResolved&&
error$$1("The Promise was already resolved "+this.name);this.isRejected=!0;this.error=reason||null;for(var errbacks=this.errbacks,i=0,ii=errbacks.length,v5459=i<ii;v5459;){introspect(JAM.policy.p1)v5459=errbacks[i];JAM.call(v5459.call,v5459,[null,reason]);i+=1;v5459=i<ii}}function Promise_progress(data){for(var callbacks=this.progressbacks,i=0,ii=callbacks.length,v5461=i<ii;v5461;){introspect(JAM.policy.p1)v5461=callbacks[i];JAM.call(v5461.call,v5461,[null,data]);i+=1;v5461=i<ii}}function Promise_resolve(data){this.isResolved&&
error$$1("A Promise can be resolved only once "+this.name);this.isRejected&&error$$1("The Promise was already rejected "+this.name);this.isResolved=!0;this.data=data||null;for(var callbacks=this.callbacks,i=0,ii=callbacks.length,v5467=i<ii;v5467;){introspect(JAM.policy.p1)v5467=callbacks[i];JAM.call(v5467.call,v5467,[null,data]);i+=1;v5467=i<ii}}function Promise_onData(callback){this._data!==EMPTY_PROMISE?JAM.call(callback,null,[this._data]):this.onDataCallback=callback}function Promise_all(promises){function v82(i){function v81(value){JAM.set(results,
i,value);unresolved-=1;0===unresolved&&JAM.call(deferred.resolve,deferred,[results])}return v81}var deferred=new Promise,unresolved=promises.length,results=[];if(0===unresolved)return JAM.call(deferred.resolve,deferred,[results]),deferred;for(var i$$0=0,ii=promises.length,v5473=i$$0<ii;v5473;){introspect(JAM.policy.p1)v5473=promises[i$$0];JAM.call(v5473.then,v5473,[v82(i$$0)]);i$$0+=1;v5473=i$$0<ii}return deferred}function Promise(name,data){this.name=name;this.isRejected=!1;this.error=null;null!=
data?(this.isResolved=!0,this._data=data,this.hasData=!0):(this.isResolved=!1,this._data=EMPTY_PROMISE);this.callbacks=[];this.errbacks=[];this.progressbacks=[]}function v8443(){this._data===EMPTY_PROMISE&&error$$1("Promise "+this.name+": Cannot get data that isn't set");return this._data}function v8444(value){void 0!==value&&(this._data!==EMPTY_PROMISE&&error$$1("Promise "+this.name+": Cannot set the data of a promise twice"),this._data=value,this.hasData=!0,this.onDataCallback&&JAM.call(this.onDataCallback,
this,[value]))}var EMPTY_PROMISE={};Promise.all=Promise_all;var v5481=Promise;v5481.prototype={hasData:!1,onData:Promise_onData,resolve:Promise_resolve,progress:Promise_progress,reject:Promise_reject,then:Promise_then};JAM.call(Object.defineProperty,Object,[v5481.prototype,"data",{get:v8443,set:v8444}]);return Promise}function PageViewportClosure(){function PageViewport_convertToPdfPoint(x,y){return JAM.call(Util.applyInverseTransform,Util,[[x,y],this.transform])}function PageViewport_convertToViewportRectangle(rect){var tl=
JAM.call(Util.applyTransform,Util,[[rect[0],rect[1]],this.transform]);rect=JAM.call(Util.applyTransform,Util,[[rect[2],rect[3]],this.transform]);return[tl[0],tl[1],rect[0],rect[1]]}function PageViewport_convertToViewportPoint(x,y){return JAM.call(Util.applyTransform,Util,[[x,y],this.transform])}function PageViewport(viewBox,scale,rotate,offsetX,offsetY){var centerX=(viewBox[2]+viewBox[0])/2,centerY=(viewBox[3]+viewBox[1])/2,rotateB,rotateC,rotateD;switch(rotate){case -180:case 180:rotate=-1;rotateC=
rotateB=0;rotateD=1;break;case -270:case 90:rotate=0;rotateC=rotateB=1;rotateD=0;break;case -90:case 270:rotate=0;rotateC=rotateB=-1;rotateD=0;break;default:rotate=1,rotateC=rotateB=0,rotateD=-1}var offsetCanvasX,offsetCanvasY,width;0==rotate?(offsetCanvasX=Math.abs(centerY-viewBox[1])*scale+offsetX,offsetCanvasY=Math.abs(centerX-viewBox[0])*scale+offsetY,width=Math.abs(viewBox[3]-viewBox[1])*scale,viewBox=Math.abs(viewBox[2]-viewBox[0])*scale):(offsetCanvasX=Math.abs(centerX-viewBox[0])*scale+offsetX,
offsetCanvasY=Math.abs(centerY-viewBox[1])*scale+offsetY,width=Math.abs(viewBox[2]-viewBox[0])*scale,viewBox=Math.abs(viewBox[3]-viewBox[1])*scale);this.transform=[rotate*scale,rotateB*scale,rotateC*scale,rotateD*scale,offsetCanvasX-rotate*scale*centerX-rotateC*scale*centerY,offsetCanvasY-rotateB*scale*centerX-rotateD*scale*centerY];this.offsetX=offsetX;this.offsetY=offsetY;this.width=width;this.height=viewBox;this.fontScale=scale}PageViewport.prototype={convertToViewportPoint:PageViewport_convertToViewportPoint,
convertToViewportRectangle:PageViewport_convertToViewportRectangle,convertToPdfPoint:PageViewport_convertToPdfPoint};return PageViewport}function UtilClosure(){function Util_sign(num){return num=0>num?-1:1}function Util_intersect(rect1,rect2){function compare(a,b){return a-b}var orderedX=[rect1[0],rect1[2],rect2[0],rect2[2]].sort(compare),orderedY=[rect1[1],rect1[3],rect2[1],rect2[3]].sort(compare),result=[];rect1=JAM.call(Util.normalizeRect,Util,[rect1]);rect2=JAM.call(Util.normalizeRect,Util,[rect2]);
var v22117=orderedX[0]===rect1[0];v22117&&(v22117=orderedX[1]===rect2[0]);v22117||(v22117=orderedX[0]===rect2[0])&&(v22117=orderedX[1]===rect1[0]);if(v22117)result[0]=orderedX[1],result[2]=orderedX[2];else return!1;(orderedX=orderedY[0]===rect1[1])&&(orderedX=orderedY[1]===rect2[1]);orderedX||(orderedX=orderedY[0]===rect2[1])&&(orderedX=orderedY[1]===rect1[1]);if(orderedX)result[1]=orderedY[1],result[3]=orderedY[2];else return!1;return result}function Util_normalizeRect(rect){var r=rect.slice(0);
rect[0]>rect[2]&&(r[0]=rect[2],r[2]=rect[0]);rect[1]>rect[3]&&(r[1]=rect[3],r[3]=rect[1]);return r}function Util_apply3dTransform(m,v){return[m[0]*v[0]+m[1]*v[1]+m[2]*v[2],m[3]*v[0]+m[4]*v[1]+m[5]*v[2],m[6]*v[0]+m[7]*v[1]+m[8]*v[2]]}function Util_inverseTransform(m){var d=m[0]*m[3]-m[1]*m[2];return[m[3]/d,-m[1]/d,-m[2]/d,m[0]/d,(m[2]*m[5]-m[4]*m[3])/d,(m[4]*m[1]-m[5]*m[0])/d]}function Util_applyInverseTransform(p,m){var d=m[0]*m[3]-m[1]*m[2],xt=(p[0]*m[3]-p[1]*m[2]+m[2]*m[5]-m[4]*m[3])/d,d=(-p[0]*
m[1]+p[1]*m[0]+m[4]*m[1]-m[5]*m[0])/d;return[xt,d]}function Util_applyTransform(p,m){var xt=p[0]*m[0]+p[1]*m[2]+m[4],yt=p[0]*m[1]+p[1]*m[3]+m[5];return[xt,yt]}function Util_makeCssCmyk(c,m,y,k){var v5537=new DeviceCmykCS;c=JAM.call(v5537.getRgb,v5537,[[c,m,y,k]]);m=255*c[0]|0;y=255*c[1]|0;c=255*c[2]|0;return"rgb("+m+","+y+","+c+")"}function Util_makeCssRgb(r,g,b){r=255*r|0;g=255*g|0;b=255*b|0;return"rgb("+r+","+g+","+b+")"}function Util(){}Util.makeCssRgb=Util_makeCssRgb;Util.makeCssCmyk=Util_makeCssCmyk;
Util.applyTransform=Util_applyTransform;Util.applyInverseTransform=Util_applyInverseTransform;Util.inverseTransform=Util_inverseTransform;Util.apply3dTransform=Util_apply3dTransform;Util.normalizeRect=Util_normalizeRect;Util.intersect=Util_intersect;Util.sign=Util_sign;return Util}function PDFDocumentClosure(){function PDFDocument_getPage(n){var v5547=this.catalog;return JAM.call(v5547.getPage,v5547,[n])}function PDFDocument_getFingerprint(){function v80(el){var v8513=fileID;el=Number(el.charCodeAt(0));
fileID=v8513+JAM.call(el.toString,el,[16])}var xref=this.xref,fileID,v8515=xref.trailer;if(JAM.call(v8515.has,v8515,["ID"]))fileID="",xref=xref.trailer,xref=JAM.call(xref.get,xref,["ID"])[0],xref=xref.split(""),JAM.call(xref.forEach,xref,[v80]);else{xref=this.stream.bytes.subarray(0,100);xref=JAM.call(calculateMD5,null,[xref,0,xref.length]);fileID="";for(var v8515=0,length=xref.length,v5552=v8515<length;v5552;){v5552=fileID;introspect(JAM.policy.p1)var v22846=xref[v8515];v22846=Number(v22846);fileID=
v5552+JAM.call(v22846.toString,v22846,[16]);v8515+=1;v5552=v8515<length}}return shadow(this,"getFingerprint",fileID)}function PDFDocument_getDocumentInfo(){function v79(key,value){var v5554=info,v5555=key,v8520;v8520="string"!==typeof value?value:stringToPDFString(value);JAM.set(v5554,v5555,v8520)}var info,v8521=this.xref.trailer;JAM.call(v8521.has,v8521,["Info"])&&(v8521=this.xref.trailer,v8521=JAM.call(v8521.get,v8521,["Info"]),info={},JAM.call(v8521.forEach,v8521,[v79]));return shadow(this,"getDocumentInfo",
info)}function PDFDocument_setup(ownerPassword,userPassword){this.checkHeader();var xref=JAM.new(XRef,[this.stream,this.startXRef,this.mainXRefEntriesOffset]);this.xref=xref;this.catalog=xref=JAM.new(Catalog,[xref])}function PDFDocument_checkHeader(){var stream=this.stream;stream.reset();find(stream,"%PDF-",1024)&&stream.moveStart()}function PDFDocument(arg,callback){if(isStream(arg))init.call(this,arg);else{var v8523="object"==typeof arg;v8523&&(v8523=null!=arg)&&(v8523="byteLength"in arg);v8523?
init.call(this,JAM.new(Stream,[arg])):error$$1("PDFDocument: Unknown argument type")}}function init(stream){assertWellFormed(0<stream.length,"stream must have data");this.stream=stream;this.setup();stream=this.catalog.catDict;this.acroForm=stream=JAM.call(stream.get,stream,["AcroForm"])}function find(stream,needle,limit,backwards){var pos=stream.pos,end=stream.end,str="";pos+limit>end&&(limit=end-pos);for(var end=0,v5568=end<limit;v5568;)str+=stream.getChar(),end+=1,v5568=end<limit;stream.pos=pos;
needle=backwards?str.lastIndexOf(needle):str.indexOf(needle);if(-1==needle)return!1;stream.pos+=needle;return!0}function v8537(){var length=this.stream.length,linearization=!1;length&&(linearization=JAM.new(Linearization,[this.stream]),linearization.length!=length&&(linearization=!1));return shadow(this,"linearization",linearization)}function v8538(){var stream=this.stream,startXRef=0,linearization=this.linearization;if(linearization)stream.reset(),find(stream,"endobj",1024)&&(startXRef=stream.pos+
6);else{var linearization=1024,found=!1,pos=stream.end,v8531=!found;for(v8531&&(v8531=0<pos);v8531;)pos-=linearization-9,0>pos&&(pos=0),stream.pos=pos,found=find(stream,"startxref",linearization,!0),(v8531=!found)&&(v8531=0<pos);if(found){JAM.call(stream.skip,stream,[9]);var ch,startXRef=JAM.call(Lexer.isSpace,Lexer,[ch]);do ch=stream.getChar(),startXRef=JAM.call(Lexer.isSpace,Lexer,[ch]);while(startXRef);startXRef="";for(linearization=9>=ch-0;linearization;)startXRef+=ch,ch=stream.getChar(),linearization=
9>=ch-0;startXRef=parseInt(startXRef,10);isNaN(startXRef)&&(startXRef=0)}}return shadow(this,"startXRef",startXRef)}function v8539(){var mainXRefEntriesOffset=0,linearization=this.linearization;linearization&&(mainXRefEntriesOffset=linearization.mainXRefEntriesOffset);return shadow(this,"mainXRefEntriesOffset",mainXRefEntriesOffset)}function v8540(){var linearization=this.linearization,linearization=linearization?linearization.numPages:this.catalog.numPages;return shadow(this,"numPages",linearization)}
var v5582=PDFDocument;v5582.prototype={checkHeader:PDFDocument_checkHeader,setup:PDFDocument_setup,getDocumentInfo:PDFDocument_getDocumentInfo,getFingerprint:PDFDocument_getFingerprint,getPage:PDFDocument_getPage};JAM.call(Object.defineProperty,Object,[v5582.prototype,"numPages",{get:v8540}]);JAM.call(Object.defineProperty,Object,[v5582.prototype,"mainXRefEntriesOffset",{get:v8539}]);JAM.call(Object.defineProperty,Object,[v5582.prototype,"startXRef",{get:v8538}]);JAM.call(Object.defineProperty,Object,
[v5582.prototype,"linearization",{get:v8537}]);return PDFDocument}function PageClosure(){function Page_getAnnotations(){function getInheritableProperty(annotation,name){var item=annotation,v8541=item;for(v8541&&(v8541=!JAM.call(item.has,item,[name]));v8541;)(v8541=item=JAM.call(item.get,item,["Parent"]))&&(v8541=!JAM.call(item.has,item,[name]));return item?JAM.call(item.get,item,[name]):null}function isValidUrl(url){if(!url)return!1;var colon=url.indexOf(":");if(0>colon)return!1;url=url.substr(0,
colon);switch(url){case "http":case "https":case "ftp":case "mailto":return!0;default:return!1}}var xref=this.xref,v5587=this.annotations;v5587||(v5587=[]);var i,n=v5587.length,items=[];i=0;for(var v5611=i<n;v5611;){introspect(JAM.policy.p1)var annotationRef=v5587[i];var annotation=JAM.call(xref.fetch,xref,[annotationRef]);if(isDict(annotation)){var subtype=JAM.call(annotation.get,annotation,["Subtype"]);if(isName(subtype)){var rect=JAM.call(annotation.get,annotation,["Rect"]),v5611={};v5611.type=
subtype.name;v5611.rect=rect;switch(subtype.name){case "Link":if(subtype=JAM.call(annotation.get,annotation,["A"]))switch(JAM.call(subtype.get,subtype,["S"]).name){case "URI":annotation=JAM.call(subtype.get,subtype,["URI"]);isValidUrl(annotation)||(annotation="");v5611.url=annotation;break;case "GoTo":annotation=v5611;subtype=JAM.call(subtype.get,subtype,["D"]);annotation.dest=subtype;break;default:TODO("other link types")}else JAM.call(annotation.has,annotation,["Dest"])&&(subtype=JAM.call(annotation.get,
annotation,["Dest"]),annotation=v5611,subtype=isName(subtype)?subtype.name:subtype,annotation.dest=subtype);break;case "Widget":subtype=getInheritableProperty(annotation,"FT");if(!isName(subtype))break;v5611.fieldType=subtype.name;for(var subtype=[],namedItem=annotation;namedItem;){var rect=JAM.call(namedItem.get,namedItem,["Parent"]),parentRef=JAM.call(namedItem.getRaw,namedItem,["Parent"]);if(namedItem=JAM.call(namedItem.get,namedItem,["T"]))subtype.unshift(stringToPDFString(namedItem));else{var namedItem=
JAM.call(rect.get,rect,["Kids"]),j,jj;j=0;jj=namedItem.length;for(var v5598=j<jj;v5598;){introspect(JAM.policy.p1)v5598=namedItem[j];var v8550=v5598.num==annotationRef.num;v8550&&(v8550=v5598.gen==annotationRef.gen);if(v8550)break;j+=1;v5598=j<jj}subtype.unshift("`"+j)}namedItem=rect;annotationRef=parentRef}annotationRef=v5611;subtype=subtype.join(".");annotationRef.fullName=subtype;(subtype=JAM.call(annotation.get,annotation,["TU"]))||(subtype="");subtype=stringToPDFString(subtype);v5611.alternativeText=
subtype;(subtype=getInheritableProperty(annotation,"DA"))||(subtype="");if(annotationRef=/([\d\.]+)\sTf/.exec(subtype))subtype=v5611,annotationRef=parseFloat(annotationRef[1]),subtype.fontSize=annotationRef;subtype=v5611;annotationRef=getInheritableProperty(annotation,"Q");subtype.textAlignment=annotationRef;subtype=v5611;(annotation=getInheritableProperty(annotation,"Ff"))||(annotation=0);subtype.flags=annotation;break;case "Text":rect=JAM.call(annotation.get,annotation,["Contents"]);subtype=JAM.call(annotation.get,
annotation,["T"]);annotationRef=v5611;rect=stringToPDFString(rect||"");annotationRef.content=rect;annotationRef=v5611;subtype=stringToPDFString(subtype||"");annotationRef.title=subtype;subtype=v5611;annotation=JAM.call(annotation.has,annotation,["Name"])?JAM.call(annotation.get,annotation,["Name"]).name:"Note";subtype.name=annotation;break;default:TODO("unimplemented annotation type: "+subtype.name)}JAM.call(items.push,items,[v5611])}}i+=1;v5611=i<n}return items}function Page_getLinks(){var links=
[],annotations=pageGetAnnotations(),i,n=annotations.length;i=0;for(var v5614=i<n;v5614;){introspect(JAM.policy.p1)v5614=annotations[i];if("Link"==v5614.type){introspect(JAM.policy.p1)v5614=annotations[i];JAM.call(links.push,links,[v5614])}i+=1;v5614=i<n}return links}function Page_getOperatorList(handler,dependency){var xref=this.xref,content=this.content,resources=this.resources;if(isArray(content)){var streams=[],i,n=content.length;i=0;for(var v5616=i<n;v5616;){introspect(JAM.policy.p1)v5616=content[i];
JAM.call(streams.push,streams,[JAM.call(xref.fetchIfRef,xref,[v5616])]);i+=1;v5616=i<n}content=JAM.new(StreamsSequenceStream,[streams])}else isStream(content)?content.reset():content||(content=JAM.new(Stream,[new Uint8Array(0)]));xref=this.pe=xref=JAM.new(PartialEvaluator,[xref,handler,"p"+this.pageNumber+"_"]);return JAM.call(xref.getOperatorList,xref,[content,resources,dependency])}function Page_inheritPageProp(key){for(var dict=this.pageDict,obj=JAM.call(dict.get,dict,[key]),v5623=void 0===obj;v5623;){dict=
JAM.call(dict.get,dict,["Parent"]);if(!dict)break;obj=JAM.call(dict.get,dict,[key]);v5623=void 0===obj}return obj}function Page_getPageProp(key){var v5624=this.pageDict;return JAM.call(v5624.get,v5624,[key])}function Page(xref,pageNumber,pageDict,ref){this.pageNumber=pageNumber;this.pageDict=pageDict;this.xref=xref;this.ref=ref;this.displayReadyPromise=null}function v8567(){return shadow(this,"content",JAM.call(this.getPageProp,this,["Contents"]))}function v8568(){return shadow(this,"resources",JAM.call(this.inheritPageProp,
this,["Resources"]))}function v8569(){var obj=JAM.call(this.inheritPageProp,this,["MediaBox"]),v8562=!isArray(obj);v8562||(v8562=4!==obj.length);v8562&&(obj=[0,0,612,792]);return shadow(this,"mediaBox",obj)}function v8570(){var mediaBox=this.mediaBox,cropBox=JAM.call(this.inheritPageProp,this,["CropBox"]),v8563=!isArray(cropBox);v8563||(v8563=4!==cropBox.length);return v8563?shadow(this,"view",mediaBox):(cropBox=JAM.call(Util.intersect,Util,[cropBox,mediaBox]))?shadow(this,"view",cropBox):shadow(this,
"view",mediaBox)}function v8571(){return shadow(this,"annotations",JAM.call(this.inheritPageProp,this,["Annots"]))}function v8572(){var v5631=JAM.call(this.inheritPageProp,this,["Rotate"]);v5631||(v5631=0);0!=v5631%90?v5631=0:360<=v5631?v5631%=360:0>v5631&&(v5631=(v5631%360+360)%360);return shadow(this,"rotate",v5631)}var v5636=Page;v5636.prototype={getPageProp:Page_getPageProp,inheritPageProp:Page_inheritPageProp,getOperatorList:Page_getOperatorList,getLinks:Page_getLinks,getAnnotations:Page_getAnnotations};
JAM.call(Object.defineProperty,Object,[v5636.prototype,"rotate",{get:v8572}]);JAM.call(Object.defineProperty,Object,[v5636.prototype,"annotations",{get:v8571}]);JAM.call(Object.defineProperty,Object,[v5636.prototype,"view",{get:v8570}]);JAM.call(Object.defineProperty,Object,[v5636.prototype,"mediaBox",{get:v8569}]);JAM.call(Object.defineProperty,Object,[v5636.prototype,"resources",{get:v8568}]);JAM.call(Object.defineProperty,Object,[v5636.prototype,"content",{get:v8567}]);return Page}function Type1Font(name,
file,properties){var headerBlock=JAM.call(file.getBytes,file,[properties.length1]);JAM.call(type1Parser.extractFontHeader,type1Parser,[headerBlock,properties]);file=JAM.call(file.getBytes,file,[properties.length2]);file=JAM.call(type1Parser.extractFontProgram,type1Parser,[file]);for(var info in file.properties)JAM.set(properties,info,JAM.get(file.properties,info,JAM.policy.p1));info=JAM.call(this.getOrderedCharStrings,this,[file.charstrings,properties]);headerBlock=JAM.call(this.getType2Charstrings,
this,[info]);file=JAM.call(this.getType2Subrs,this,[file.subrs]);this.charstrings=info;this.data=name=JAM.call(this.wrap,this,[name,headerBlock,this.charstrings,file,properties])}function Type1Parser(){function Type1Parser_extractFontHeader(stream,properties){function getToken(){introspect(JAM.policy.p1)var character=headerString[i];var v8573=i<count;v8573&&((v8573=isSeparator(character))||(v8573="/"==character));for(;v8573;){character=i+=1;introspect(JAM.policy.p1)character=headerString[character];
if(v8573=i<count)(v8573=isSeparator(character))||(v8573="/"==character)}var v8573="",v8575=i<count;v8575&&((v8575=isSeparator(character))||(v8575="/"==character),v8575=!v8575);for(;v8575;){v8573+=character;character=i+=1;introspect(JAM.policy.p1)character=headerString[character];if(v8575=i<count)(v8575=isSeparator(character))||(v8575="/"==character),v8575=!v8575}return v8573}for(var headerString="",i=0,ii=stream.length,v5648=i<ii;v5648;){v5648=headerString;introspect(JAM.policy.p1)var v22209=stream[i];
headerString=v5648+String.fromCharCode(v22209);i+=1;v5648=i<ii}for(var token="",count=headerString.length,i=0,ii=i<count;ii;){v5648=getToken;introspect(JAM.policy.p1)ii=headerString[i];if(isSeparator(ii)){switch(token){case "/FontMatrix":for(var v5648=readNumberArray(headerString,i+1),ii=0,v22209=v5648.length,v5650=ii<v22209;v5650;){introspect(JAM.policy.p1)v5650=v5648[ii];v5648[ii]=1E3*v5650;ii+=1;v5650=ii<v22209}v5648[2]*=-1;properties.fontMatrix=v5648;break;case "/Encoding":ii=v5648();if(/^\d+$/.test(ii))for(v22209=
[],v5650=parseInt(ii,10),v5648(),ii=0,token=ii<v5650;token;){token=v5648();if("dup"==token){var token=parseInt(v5648(),10),glyph=v5648();v22209[token]=glyph;v5648()}ii+=1;token=ii<v5650}else introspect(JAM.policy.p1)v22209=Encodings[ii];(ii=!properties.hasEncoding)&&(ii=v22209);ii&&(properties.baseEncoding=v22209)}token=""}else token+=ii;i+=1;ii=i<count}}function Type1Parser_extractFontProgram(stream){function getToken(){var v8583=i<count;if(v8583){introspect(JAM.policy.p1)v8583=eexecStr[i];v8583=
isSeparator(v8583)}for(;v8583;)if(i+=1,v8583=i<count){introspect(JAM.policy.p1)v8583=eexecStr[i];v8583=isSeparator(v8583)}var v8583="",v8585=i<count;if(v8585){introspect(JAM.policy.p1)v8585=eexecStr[i];v8585=!isSeparator(v8585)}for(;v8585;){v8585=i;i+=1;introspect(JAM.policy.p1)v8585=eexecStr[v8585];v8583+=v8585;if(v8585=i<count){introspect(JAM.policy.p1)v8585=eexecStr[i];v8585=!isSeparator(v8585)}}return v8583}stream=decrypt(stream,kEexecEncryptionKey,4);for(var eexecStr="",i=0,ii=stream.length,
v5660=i<ii;v5660;){v5660=eexecStr;introspect(JAM.policy.p1)var v22216=stream[i];eexecStr=v5660+String.fromCharCode(v22216);i+=1;v5660=i<ii}for(var v5660=ii=!1,v22216={subrs:[],charstrings:[],properties:{privateData:{lenIV:4}}},glyph="",token="",length=0,c="",count=eexecStr.length,i=0,v5691=i<count;v5691;){v5691=getToken;introspect(JAM.policy.p1)c=eexecStr[i];var v8591=ii||v5660;v8591&&((v8591="RD"==token)||(v8591="-|"==token));if(v8591){var i=i+1,data=stream.slice(i,i+length),lenIV=v22216.properties.privateData.lenIV,
data=decrypt(data,kCharStringsEncryptionKey,lenIV),data=decodeCharString(data);ii?(token=v22216.charstrings,JAM.call(token.push,token,[{glyph:glyph,data:data.charstring,lsb:data.lsb,width:data.width}])):(token=v22216.subrs,JAM.call(token.push,token,[data.charstring]));i+=length;token=""}else if(isSeparator(c))length=parseInt(token,10),token="";else if(token+=c,!ii)switch(token){case "/CharString":ii=!0;break;case "/Subrs":i+=1;c=parseInt(v5691(),10);v5691();for(var v8591=0,v5679=v8591<c;v5679;){lenIV=
v5691();v5679="ND"==lenIV;v5679||(v5679="|-"==lenIV)||(v5679="noaccess"==lenIV);if(v5679)break;v5679=parseInt(v5691(),10);v5679>v8591&&(v8591=v5679);length=parseInt(v5691(),10);v5691();data=stream.slice(i+1,i+1+length);lenIV=v22216.properties.privateData.lenIV;data=decrypt(data,kCharStringsEncryptionKey,lenIV);data=decodeCharString(data);i=i+1+length;lenIV=v5691();"noaccess"==lenIV&&v5691();v22216.subrs[v5679]=data.charstring;v8591+=1;v5679=v8591<c}break;case "/BlueValues":case "/OtherBlues":case "/FamilyBlues":case "/FamilyOtherBlues":case "/StemSnapH":case "/StemSnapV":v5691=
v22216.properties.privateData;c=token.substring(1);v8591=readNumberArray(eexecStr,i+1);JAM.set(v5691,c,v8591);break;case "/StdHW":case "/StdVW":JAM.set(v22216.properties.privateData,token.substring(1),readNumberArray(eexecStr,i+2)[0]);break;case "/BlueShift":case "/lenIV":case "/BlueFuzz":case "/BlueScale":case "/LanguageGroup":case "/ExpansionFactor":v5691=v22216.properties.privateData,c=token.substring(1),v8591=readNumber(eexecStr,i+1),JAM.set(v5691,c,v8591)}else if("/"==c){token=glyph="";v5691=
i+=1;introspect(JAM.policy.p1)v5691=c=eexecStr[v5691];for(v5691=" "!=v5691;v5691;){glyph+=c;v5691=i+=1;introspect(JAM.policy.p1)v5691=c=eexecStr[v5691];v5691=" "!=v5691}}i+=1;v5691=i<count}return v22216}function decrypt(stream,key,discardNumber){for(var c1=52845,c2=22719,decryptedString=[],value="",count=stream.length,i=0,value=i<count;value;)value=stream[i],decryptedString[i]=value^key>>8,key=(value+key)*c1+c2&65535,i+=1,value=i<count;return decryptedString.slice(discardNumber)}function decodeCharString(array){for(var charstring=
[],lsb=0,width=0,flexState=0,value="",count=array.length,i=0,value=i<count;value;){value=array[i];if(32>value){var command=null;if(value==kEscapeCommand){var v5696=i+=1;introspect(JAM.policy.p1)v5696=array[v5696];if(16==v5696){for(var command=charstring.pop(),argc=charstring.pop(),j=0,v5697=j<argc;v5697;)JAM.call(charstring.push,charstring,["drop"]),j+=1,v5697=j<argc;if(3>command){i+=1;value=i<count;continue}if(3==command){JAM.call(charstring.push,charstring,[3]);i+=1;i+=1;value=i<count;continue}}else if((command=
17==v5696)||(command=33==v5696),command){i+=1;value=i<count;continue}else{if(command=!kHintingEnabled)(command=1==v5696)||(command=2==v5696);if(command){JAM.call(charstring.push,charstring,"drop drop drop drop drop drop".split(" "));i+=1;value=i<count;continue}}command=charStringDictionary["12"];introspect(JAM.policy.p1)command=command[v5696]}else{if(13==value){2==charstring.length?(lsb=charstring[0],width=charstring[1],charstring.splice(0,1)):((value=4==charstring.length)&&(value="div"==charstring[3]),
value?(lsb=charstring[0],width=charstring[1]/charstring[2],charstring.splice(0,1)):((value=4==charstring.length)&&(value="div"==charstring[2]),value?(lsb=charstring[0]/charstring[1],width=charstring[3],charstring.splice(0,3)):error$$1("Unsupported hsbw format: "+charstring)));JAM.call(charstring.push,charstring,[lsb,"hmoveto"]);i+=1;value=i<count;continue}else if(10==value){command=charstring.length-1;introspect(JAM.policy.p1)command=charstring[command];if(3>command){value=charstring.pop();switch(value){case 1:flexState=
1;break;case 2:flexState=2;break;case 0:JAM.call(charstring.push,charstring,["exch","drop","exch","drop"]),JAM.call(charstring.push,charstring,["flex"]),flexState=0}i+=1;value=i<count;continue}}else if((command=21==value)&&(command=0<flexState),command){if(1<flexState){i+=1;value=i<count;continue}value=5}else{if(command=!kHintingEnabled)(command=1==value)||(command=3==value);if(command){JAM.call(charstring.push,charstring,["drop","drop"]);i+=1;value=i<count;continue}}introspect(JAM.policy.p1)command=
charStringDictionary[value]}(argc=!command)&&(argc=i<count);if(argc){i+=1;value=i<count;continue}else if(!command)break;else if(-1==command&&(warn("Support for Type1 command "+value+" ("+v5696+") is not implemented in charstring: "+charstring),12==value))switch(v5696){case 7:JAM.call(charstring.push,charstring,["drop","drop","drop","drop"]);i+=1;value=i<count;continue;case 8:JAM.call(charstring.push,charstring,["drop"]);i+=1;value=i<count;continue}value=command}else if(246>=value)value-=139;else if(250>=
value){value=256*(value-247);command=i+=1;introspect(JAM.policy.p1)command=array[command];value=value+command+108}else if(254>=value){value=-(256*(value-251));command=i+=1;introspect(JAM.policy.p1)command=array[command];value=value-command-108}else{value=i+=1;introspect(JAM.policy.p1)value=array[value];value=(value&255)<<24;command=i+=1;introspect(JAM.policy.p1)command=array[command];value|=(command&255)<<16;command=i+=1;introspect(JAM.policy.p1)command=array[command];value|=(command&255)<<8;command=
i+=1;introspect(JAM.policy.p1)command=array[command];value|=(command&255)<<0}JAM.call(charstring.push,charstring,[value]);i+=1;value=i<count}return{charstring:charstring,width:width,lsb:lsb}}function readNumberArray(str,index){var start=index,v22241=index;index+=1;introspect(JAM.policy.p1)v22241=str[v22241];for(v22241="["!=v22241;v22241;){start+=1;v22241=index;index+=1;introspect(JAM.policy.p1)v22241=str[v22241];v22241="["!=v22241}var start=start+1,v22241=0,v22243=index;index+=1;introspect(JAM.policy.p1)v22243=
str[v22243];for(v22243="]"!=v22243;v22243;){v22241+=1;v22243=index;index+=1;introspect(JAM.policy.p1)v22243=str[v22243];v22243="]"!=v22243}str=str.substr(start,v22241);str=str.trim();str=str.replace(/\s+/g," ");for(var start=str.split(" "),v22241=0,v22243=start.length,v5737=v22241<v22243;v5737;){var v5737=start,v5736=v22241;introspect(JAM.policy.p1)var v22245=start[v22241];v22245||(v22245=0);v22245=parseFloat(v22245);v5737[v5736]=v22245;v22241+=1;v5737=v22241<v22243}return start}function readNumber(str,
index){introspect(JAM.policy.p1)var v8631=str[index];for(v8631=" "==v8631;v8631;){index+=1;introspect(JAM.policy.p1)v8631=str[index];v8631=" "==v8631}var v8631=index,count=0,v22246=index;index+=1;introspect(JAM.policy.p1)v22246=str[v22246];for(v22246=" "!=v22246;v22246;){count+=1;v22246=index;index+=1;introspect(JAM.policy.p1)v22246=str[v22246];v22246=" "!=v22246}(v8631=str.substr(v8631,count))||(v8631=0);return parseFloat(v8631)}function isSeparator(c){var v5741=" "==c;v5741||(v5741="\n"==c)||(v5741=
"\r"==c);return v5741}var kEexecEncryptionKey=55665,kCharStringsEncryptionKey=4330,charStringDictionary={1:"hstem",3:"vstem",4:"vmoveto",5:"rlineto",6:"hlineto",7:"vlineto",8:"rrcurveto",9:null,10:"callsubr",11:"return",12:{0:null,1:"vstem",2:"hstem",6:-1,7:-1,11:"sub",12:"div",16:"callothersubr",17:"pop",33:null},13:"hsbw",14:"endchar",21:"rmoveto",22:"hmoveto",30:"vhcurveto",31:"hvcurveto"},kEscapeCommand=12;this.extractFontProgram=Type1Parser_extractFontProgram;this.extractFontHeader=Type1Parser_extractFontHeader}
function getPdf(arg,callback){function getPdfOnreadystatechange(e){4===xhr.readyState&&(xhr.status===xhr.expected?(e=xhr.mozResponseArrayBuffer,e||(e=xhr.mozResponse,e||(e=xhr.responseArrayBuffer,e||(e=xhr.response))),JAM.call(callback,null,[e])):params.error&&JAM.call(params.error,params,[e]))}var params=arg;"string"===typeof arg&&(params={url:arg});var xhr=new PdfJS_window.XMLHttpRequest;JAM.call(JAM.get(xhr,"open",JAM.policy.p1),xhr,["GET",params.url]);xhr.mozResponseType=xhr.responseType="arraybuffer";
var v5750;v5750=0>params.url.indexOf(":")?PdfJS_window.window.location.protocol:params.url.substring(0,params.url.indexOf(":")+1);var v22255="http:"===v5750;v22255||(v22255="https:"===v5750);v5750=v22255?200:0;xhr.expected=v5750;"progress"in params&&((v5750=params.progress)||(v5750=void 0),JAM.set(xhr,"onprogress",v5750));"error"in params&&((v5750=params.error)||(v5750=void 0),JAM.set(xhr,"onerror",v5750));JAM.set(xhr,"onreadystatechange",getPdfOnreadystatechange);JAM.call(xhr.send,xhr,[null])}function log$$0(msg){var v8651=
PdfJS_window.console;v8651&&(v8651=PdfJS_window.console.log);v8651?(v8651=PdfJS_window.console,JAM.call(v8651.log,v8651,[msg])):print&&JAM.call(print,null,[msg])}function warn(msg){verbosity>=WARNINGS&&log$$0("Warning: "+msg)}function error$$1(msg){log$$0("Error: "+msg);var JSCompiler_inline_result;JSCompiler_inline_label_backtrace_11:try{throw Error();}catch(e){JSCompiler_inline_result=e.stack?e.stack.split("\n").slice(2).join("\n"):""}log$$0(JSCompiler_inline_result);throw Error(msg);}function TODO(what){verbosity>=
TODOS&&log$$0("TODO: "+what)}function assertWellFormed(cond,msg){cond||error$$1("Malformed PDF: "+msg)}function shadow(obj,prop,value){JAM.call(Object.defineProperty,Object,[obj,prop,{value:value,enumerable:!0,configurable:!0,writable:!1}]);return value}function bytesToString(bytes){for(var str="",length=bytes.length,n=0,v5767=n<length;v5767;){introspect(JAM.policy.p1)v5767=bytes[n];str+=String.fromCharCode(v5767);n+=1;v5767=n<length}return str}function stringToBytes(str){for(var length=str.length,
bytes=new Uint8Array(length),n=0,v5770=n<length;v5770;)bytes[n]=str.charCodeAt(n)&255,n+=1,v5770=n<length;return bytes}function stringToPDFString(str){var i,n=str.length,str2="";(i="\u00fe"===str[0])&&(i="\u00ff"===str[1]);if(i){i=2;for(var v5771=i<n;v5771;)str2+=String.fromCharCode(str.charCodeAt(i)<<8|str.charCodeAt(i+1)),i+=2,v5771=i<n}else for(i=0,v5771=i<n;v5771;){var v5771=PDFStringTranslateTable,v5773=str.charCodeAt(i);introspect(JAM.policy.p1)v5771=v5771[v5773];v5771=v5771?String.fromCharCode(v5771):
str.charAt(i);str2+=v5771;i+=1;v5771=i<n}return str2}function isBool(v){return"boolean"==typeof v}function isInt(v){var v5777="number"==typeof v;v5777&&(v5777=(v|0)==v);return v5777}function isNum(v){return"number"==typeof v}function isString(v){return"string"==typeof v}function isName(v){return v instanceof Name}function isCmd(v,cmd){var v5780=v instanceof Cmd;v5780&&((v5780=!cmd)||(v5780=v.cmd==cmd));return v5780}function isDict(v,type){var v5781=v instanceof Dict;v5781&&((v5781=!type)||(v5781=
JAM.call(v.get,v,["Type"]).name==type));return v5781}function isArray(v){return v instanceof Array}function isStream(v){var v5782="object"==typeof v;v5782&&(v5782=null!=v)&&(v5782="getChar"in v);return v5782}function isRef(v){return v instanceof Ref}function createScratchCanvas(width,height){var v5783=PdfJS_window.document,v5783=JAM.call(v5783.createElement,v5783,["canvas"]);v5783.width=width;v5783.height=height;return v5783}function addContextCurrentTransform(ctx){function ctxRotate(angle){var cosValue=
Math.cos(angle),sinValue=Math.sin(angle),m=this._transformMatrix;this._transformMatrix=[m[0]*cosValue+m[2]*sinValue,m[1]*cosValue+m[3]*sinValue,m[0]*-sinValue+m[2]*cosValue,m[1]*-sinValue+m[3]*cosValue,m[4],m[5]];JAM.call(this._originalRotate,this,[angle])}function ctxTransform(a,b,c,d,e,f){var m=this._transformMatrix;this._transformMatrix=[m[0]*a+m[2]*b,m[1]*a+m[3]*b,m[0]*c+m[2]*d,m[1]*c+m[3]*d,m[0]*e+m[2]*f+m[4],m[1]*e+m[3]*f+m[5]];JAM.call(ctx._originalTransform,ctx,[a,b,c,d,e,f])}function ctxScale(x,
y){var m=this._transformMatrix;m[0]*=x;m[1]*=x;m[2]*=y;m[3]*=y;JAM.call(this._originalScale,this,[x,y])}function ctxTranslate(x,y){var m=this._transformMatrix;m[4]=m[0]*x+m[2]*y+m[4];m[5]=m[1]*x+m[3]*y+m[5];JAM.call(this._originalTranslate,this,[x,y])}function ctxRestore(){var prev=this._transformStack.pop();prev&&(this._transformMatrix=prev,this._originalRestore())}function ctxSave(){var old=this._transformMatrix,v5805=this._transformStack;JAM.call(v5805.push,v5805,[old]);this._transformMatrix=old=
old.slice(0,6);this._originalSave()}function getCurrentTransformInverse(){var m=this._transformMatrix,a=m[0],b=m[1],c=m[2],d=m[3],e=m[4],m=m[5],ad_bc=a*d-b*c,bc_ad=b*c-a*d;return[d/ad_bc,b/bc_ad,c/bc_ad,a/ad_bc,(d*e-c*m)/bc_ad,(b*e-a*m)/ad_bc]}function getCurrentTransform(){return this._transformMatrix}ctx.mozCurrentTransform||(ctx._originalSave=ctx.save,ctx._originalRestore=ctx.restore,ctx._originalRotate=ctx.rotate,ctx._originalScale=ctx.scale,ctx._originalTranslate=ctx.translate,ctx._originalTransform=
ctx.transform,ctx._transformMatrix=[1,0,0,1,0,0],ctx._transformStack=[],JAM.call(Object.defineProperty,Object,[ctx,"mozCurrentTransform",{get:getCurrentTransform}]),JAM.call(Object.defineProperty,Object,[ctx,"mozCurrentTransformInverse",{get:getCurrentTransformInverse}]),ctx.save=ctxSave,ctx.restore=ctxRestore,ctx.translate=ctxTranslate,ctx.scale=ctxScale,ctx.transform=ctxTransform,ctx.rotate=ctxRotate)}function mapPrivateUseChars(code){switch(code){case 63721:case 63193:return 169;default:return code}}
function isSpecialUnicode(unicode){var v8695=31>=unicode;v8695||(v8695=127<=unicode)&&(v8695=unicode<kSizeOfGlyphArea);v8695||(v8695=unicode>=kCmapGlyphOffset)&&(v8695=unicode<kCmapGlyphOffset+kSizeOfGlyphArea);return v8695}function loadJpegStream(id,imageData,objs){function loadJpegStream_onloadClosure(){JAM.call(objs.resolve,objs,[id,img])}var img=new Image;JAM.set(img,"onload",loadJpegStream_onloadClosure);img.src="data:image/jpeg;base64,"+PdfJS_window.window.btoa(imageData)}function MessageHandler(name,
comObj){function messageHandlerComObjOnMessage(event){function v78(resolvedData){JAM.call(comObj.postMessage,comObj,[{isReply:!0,callbackId:data.callbackId,data:resolvedData}])}var data=event.data;if(data.isReply)if(event=data.callbackId,data.callbackId in callbacks){introspect(JAM.policy.p1)var callback=callbacks[event];delete callbacks[event];JAM.call(callback,null,[data.data])}else error$$1("Cannot resolve callback "+event);else if(data.action in ah){event=data.action;introspect(JAM.policy.p1)event=
ah[event];if(data.callbackId){callback=new Promise;JAM.call(callback.then,callback,[v78]);var v5826=event[0];JAM.call(v5826.call,v5826,[event[1],data.data,callback])}else callback=event[0],JAM.call(callback.call,callback,[event[1],data.data])}else error$$1("Unkown action from worker: "+data.action)}function ahConsoleError(data){var v5836=PdfJS_window.console.error;JAM.call(v5836.apply,v5836,[PdfJS_window.console,data])}function ahConsoleLog(data){var v5838=PdfJS_window.console.log;JAM.call(v5838.apply,
v5838,[PdfJS_window.console,data])}this.name=name;this.comObj=comObj;this.callbackIndex=1;var callbacks=this.callbacks={},ah=this.actionHandler={};ah.console_log=[ahConsoleLog];ah.console_error=[ahConsoleError];JAM.set(comObj,"onmessage",messageHandlerComObjOnMessage)}var JSCompiler_object_inline_FILL_280,JSCompiler_object_inline_STROKE_281,JSCompiler_object_inline_FILL_STROKE_282,JSCompiler_object_inline_INVISIBLE_283,JSCompiler_object_inline_FILL_ADD_TO_PATH_284,JSCompiler_object_inline_STROKE_ADD_TO_PATH_285,
JSCompiler_object_inline_FILL_STROKE_ADD_TO_PATH_286;PDFJS.build="3cc61f0";var v5840,globalScope=v5840="undefined"===typeof PdfJS_window.window?this:PdfJS_window.window,isWorker="undefined"==typeof PdfJS_window.window,WARNINGS=1,TODOS=5,verbosity=WARNINGS;globalScope.PDFJS||(globalScope.PDFJS={});globalScope.PDFJS.getPdf=getPdf;globalScope.PDFJS.pdfBug=!1;var Page=PageClosure(),PDFDocument=PDFDocumentClosure(),IDENTITY_MATRIX=[1,0,0,1,0,0],v5845=PDFJS,v23550=UtilClosure(),Util=v5845.Util=v23550,v5846=
PDFJS,v23551=PageViewportClosure();v5846.PageViewport=v23551;var PDFStringTranslateTable=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,728,711,710,729,733,731,730,732,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8226,8224,8225,8230,8212,8211,402,8260,8249,8250,8722,8240,8222,8220,8221,8216,8217,8218,8482,64257,64258,321,338,352,376,381,305,322,339,353,
382,0,8364],v5847=PDFJS,v23552=PromiseClosure(),Promise=v5847.Promise=v23552,StatTimer=StatTimerClosure();PDFJS.getDocument=getDocument;var PDFDocumentProxy=PDFDocumentProxyClosure(),PDFPageProxy=PDFPageProxyClosure(),WorkerTransport=WorkerTransportClosure();JSCompiler_object_inline_FILL_280=0;JSCompiler_object_inline_STROKE_281=1;JSCompiler_object_inline_FILL_STROKE_282=2;JSCompiler_object_inline_INVISIBLE_283=3;JSCompiler_object_inline_FILL_ADD_TO_PATH_284=4;JSCompiler_object_inline_STROKE_ADD_TO_PATH_285=
5;JSCompiler_object_inline_FILL_STROKE_ADD_TO_PATH_286=6;var MIN_FONT_SIZE=1,CanvasExtraState=CanvasExtraStateClosure(),CanvasGraphics=CanvasGraphicsClosure();if(!isWorker){var v5848=PdfJS_window.document,canvas=JAM.call(v5848.createElement,v5848,["canvas"]);canvas.width=1;canvas.height=1;var ctx=JAM.call(canvas.getContext,canvas,["2d"]);try{JAM.call(ctx.putImageData,ctx,[{width:1,height:1,data:new Uint8Array(4)},0,0]),CanvasGraphics.prototype.putBinaryImageData=CanvasGraphicsPutBinaryImageDataNative}catch(e$$0){CanvasGraphics.prototype.putBinaryImageData=
CanvasGraphicsPutBinaryImageDataShim}}var Name=NameClosure(),Cmd=CmdClosure(),Dict=DictClosure(),Ref=RefClosure(),RefSet=RefSetClosure(),Catalog=CatalogClosure(),XRef=XRefClosure(),PDFObjects=PDFObjectsClosure(),PDFFunction=PDFFunctionClosure(),FunctionCache=FunctionCacheClosure(),PostScriptStack=PostScriptStackClosure(),PostScriptEvaluator=PostScriptEvaluatorClosure(),PostScriptParser=PostScriptParserClosure(),PostScriptTokenTypes={LBRACE:0,RBRACE:1,NUMBER:2,OPERATOR:3,IF:4,IFELSE:5},PostScriptToken=
PostScriptTokenClosure(),PostScriptLexer=PostScriptLexerClosure(),ISOAdobeCharset=".notdef space exclam quotedbl numbersign dollar percent ampersand quoteright parenleft parenright asterisk plus comma hyphen period slash zero one two three four five six seven eight nine colon semicolon less equal greater question at A B C D E F G H I J K L M N O P Q R S T U V W X Y Z bracketleft backslash bracketright asciicircum underscore quoteleft a b c d e f g h i j k l m n o p q r s t u v w x y z braceleft bar braceright asciitilde exclamdown cent sterling fraction yen florin section currency quotesingle quotedblleft guillemotleft guilsinglleft guilsinglright fi fl endash dagger daggerdbl periodcentered paragraph bullet quotesinglbase quotedblbase quotedblright guillemotright ellipsis perthousand questiondown grave acute circumflex tilde macron breve dotaccent dieresis ring cedilla hungarumlaut ogonek caron emdash AE ordfeminine Lslash Oslash OE ordmasculine ae dotlessi lslash oslash oe germandbls onesuperior logicalnot mu trademark Eth onehalf plusminus Thorn onequarter divide brokenbar degree thorn threequarters twosuperior registered minus eth multiply threesuperior copyright Aacute Acircumflex Adieresis Agrave Aring Atilde Ccedilla Eacute Ecircumflex Edieresis Egrave Iacute Icircumflex Idieresis Igrave Ntilde Oacute Ocircumflex Odieresis Ograve Otilde Scaron Uacute Ucircumflex Udieresis Ugrave Yacute Ydieresis Zcaron aacute acircumflex adieresis agrave aring atilde ccedilla eacute ecircumflex edieresis egrave iacute icircumflex idieresis igrave ntilde oacute ocircumflex odieresis ograve otilde scaron uacute ucircumflex udieresis ugrave yacute ydieresis zcaron".split(" "),
ExpertCharset=".notdef space exclamsmall Hungarumlautsmall dollaroldstyle dollarsuperior ampersandsmall Acutesmall parenleftsuperior parenrightsuperior twodotenleader onedotenleader comma hyphen period fraction zerooldstyle oneoldstyle twooldstyle threeoldstyle fouroldstyle fiveoldstyle sixoldstyle sevenoldstyle eightoldstyle nineoldstyle colon semicolon commasuperior threequartersemdash periodsuperior questionsmall asuperior bsuperior centsuperior dsuperior esuperior isuperior lsuperior msuperior nsuperior osuperior rsuperior ssuperior tsuperior ff fi fl ffi ffl parenleftinferior parenrightinferior Circumflexsmall hyphensuperior Gravesmall Asmall Bsmall Csmall Dsmall Esmall Fsmall Gsmall Hsmall Ismall Jsmall Ksmall Lsmall Msmall Nsmall Osmall Psmall Qsmall Rsmall Ssmall Tsmall Usmall Vsmall Wsmall Xsmall Ysmall Zsmall colonmonetary onefitted rupiah Tildesmall exclamdownsmall centoldstyle Lslashsmall Scaronsmall Zcaronsmall Dieresissmall Brevesmall Caronsmall Dotaccentsmall Macronsmall figuredash hypheninferior Ogoneksmall Ringsmall Cedillasmall onequarter onehalf threequarters questiondownsmall oneeighth threeeighths fiveeighths seveneighths onethird twothirds zerosuperior onesuperior twosuperior threesuperior foursuperior fivesuperior sixsuperior sevensuperior eightsuperior ninesuperior zeroinferior oneinferior twoinferior threeinferior fourinferior fiveinferior sixinferior seveninferior eightinferior nineinferior centinferior dollarinferior periodinferior commainferior Agravesmall Aacutesmall Acircumflexsmall Atildesmall Adieresissmall Aringsmall AEsmall Ccedillasmall Egravesmall Eacutesmall Ecircumflexsmall Edieresissmall Igravesmall Iacutesmall Icircumflexsmall Idieresissmall Ethsmall Ntildesmall Ogravesmall Oacutesmall Ocircumflexsmall Otildesmall Odieresissmall OEsmall Oslashsmall Ugravesmall Uacutesmall Ucircumflexsmall Udieresissmall Yacutesmall Thornsmall Ydieresissmall".split(" "),
ExpertSubsetCharset=".notdef space dollaroldstyle dollarsuperior parenleftsuperior parenrightsuperior twodotenleader onedotenleader comma hyphen period fraction zerooldstyle oneoldstyle twooldstyle threeoldstyle fouroldstyle fiveoldstyle sixoldstyle sevenoldstyle eightoldstyle nineoldstyle colon semicolon commasuperior threequartersemdash periodsuperior asuperior bsuperior centsuperior dsuperior esuperior isuperior lsuperior msuperior nsuperior osuperior rsuperior ssuperior tsuperior ff fi fl ffi ffl parenleftinferior parenrightinferior hyphensuperior colonmonetary onefitted rupiah centoldstyle figuredash hypheninferior onequarter onehalf threequarters oneeighth threeeighths fiveeighths seveneighths onethird twothirds zerosuperior onesuperior twosuperior threesuperior foursuperior fivesuperior sixsuperior sevensuperior eightsuperior ninesuperior zeroinferior oneinferior twoinferior threeinferior fourinferior fiveinferior sixinferior seveninferior eightinferior nineinferior centinferior dollarinferior periodinferior commainferior".split(" "),
v8709=[32,160],v8710={f:12,c:33},v8711=[45,8209],v8712={f:46,c:46},v8713={f:2,c:93},v8714=[95,818],v8715=[96,768],v8716={f:27,c:97},v8717=[732,771],v8718=[700,8217],v8719=[699,8216],v8720=[126,8764],v8721={f:3,c:161},v8722={f:2,c:8249},v8723={f:2,c:64257},v8724=[8210,8211],v8725=[183,8729],v8726={f:2,c:769},v8727=[175,772],v8728={f:3,c:774},v8729=[184,807],v8730=[822,8212],v8731={f:2,c:178},v8732={f:3,c:188},v8733={f:6,c:192},v8734={f:16,c:199},v8735={f:6,c:217},v8736={f:6,c:224},v8737={f:16,c:231},
v8738={f:7,c:249},v8739=[773,8254],v8740={s:91},v8741={s:3},v8742={f:63,c:65377},v8743={s:243},v8744=[8195,12288],v8745={f:2,c:12289},v8746={f:2,c:65306},v8747={f:2,c:12443},v8748={f:2,c:12541},v8749={f:2,c:12445},v8750={f:3,c:12293},v8751=[12316,65374],v8752={s:4},v8753={f:2,c:65288},v8754={f:2,c:12308},v8755={f:10,c:12296},v8756=[8722,65293],v8757={f:2,c:8806},v8758={f:2,c:8242},v8759={f:2,c:65504},v8760={f:2,c:8592},v8761={f:2,c:8838},v8762={f:2,c:8834},v8763={f:2,c:8743},v8764={f:2,c:8810},v8765=
{f:2,c:8747},v8766={f:2,c:8224},v8767={f:10,c:65296},v8768={f:26,c:65313},v8769={f:26,c:65345},v8770={f:83,c:12353},v8771={f:86,c:12449},v8772={f:17,c:913},v8773={f:7,c:931},v8774={f:17,c:945},v8775={f:7,c:963},v8776={f:6,c:1040},v8777={f:32,c:1046},v8778={f:26,c:1078},v8779=[12176,34915],v8780=[12032,19968],v8781=[12155,32701],v8782=[12204,38632],v8783=[12165,33276],v8784=[12128,29916],v8785=[12009,40644],v8786=[12036,20057],v8787=[12211,38899],v8788=[12117,28779],v8789=[12146,31166],v8790=[12123,
29273],v8791=[12185,35997],v8792=[12179,35282],v8793=[12208,38761],v8794={f:2,c:38989},v8795=[12129,29926],v8796=[12082,24178],v8797=[12130,29976],v8798=[12152,32566],v8799=[12004,12225,39740],v8800=[12018,20096],v8801=[12233,40653],v8802=[12088,24339],v8803=[12124,29275],v8804=[12226,39770],v8805={f:2,c:20139},v8806=[12127,29577],v8807=[12081,24062],v8808=[12100,26020],v8809=[12198,37329],v8810=[12107,27424],v8811=[12147,31348],v8812=[12174,34880],v8813=[12105,26376],v8814=[12125,29356],v8815=[12178,
35211],v8816=[12126,29572],v8817=[12180,35328],v8818=[12080,24049],v8819=[12094,25144],v8820=[11969,34382],v8821=[12238,40723],v8822=[12061,21475],v8823=[12079,24037],v8824=[12175,34892],v8825=[12217,39321],v8826=[12220,39640],v8827=[12234,40658],v8828=[12219,39592],v8829=[12169,33390],v8830=[12139,30399],v8831=[12077,23665],v8832=[12064,22763],v8833=[12070,23376],v8834=[12096,25903],v8835=[12108,27490],v8836=[12114,27663],v8837=[12151,31992],v8838=[12164,33267],v8839=[12013,27503],v8840=[12144,31034],
v8841=[12157,32780],v8842=[12159,32819],v8843=[12163,33258],v8844=[12229,40575],v8845=[12190,36554],v8846=[12095,25163],v8847=[12216,39318],v8848=[12168,33311],v8849=[12055,21313],v8850=[12069,22899],v8851=[12073,23567],v8852=[12170,33394],v8853=[12215,39135],v8854=[12092,24515],v8855=[12162,33251],v8856=[12189,36523],v8857=[12191,36763],v8858=[12040,20154],v8859=[12116,27700],v8860=[12072,23544],v8861=[12131,29983],v8862=[11972,35199],v8863=[11992,38738],v8864=[12011,25993],v8865=[12143,30707],v8866=
[12186,36196],v8867=[12166,33292],v8868=[12167,33307],v8869=[12239,40736],v8870=[12187,36208],v8871=[12188,36275],v8872=[12068,22823],v8873=[12192,36784],v8874=[12181,35895],v8875=[12149,31481],v8876=[12173,34411],v8877=[11985,12199,38263],v8878=[12227,40165],v8879=[12118,29226],v8880=[12237,40718],v8881=[12133,3E4],v8882=[12099,26007],v8883=[12063,22303],v8884=[12049,20992],v8885=[12182,35910],v8886=[12195,37193],v8887=[12038,20108],v8888=[12161,32905],v8889=[12103,26085],v8890=[12042,20837],v8891=
[12218,39340],v8892=[12137,30333],v8893=[12008,40614],v8894=[12043,20843],v8895=[12196,37318],v8896=[12112,27604],v8897=[12138,30382],v8898=[12206,38750],v8899=[12214,39131],v8900=[12240,40763],v8901=[12134,30091],v8902=[12119,29238],v8903=[12201,38428],v8904=[12213,39080],v8905=[12098,25991],v8906=[12150,31859],v8907=[12212,38913],v8908=[12122,29255],v8909=[11935,27597],v8910=[12101,26041],v8911={f:2,c:24536},v8912=[12056,21340],v8913=[12231,40635],v8914=[12060,21448],v8915=[11922,24051],v8916=[11936,
27665],v8917=[12141,30683],v8918=[12207,38754],v8919=[12113,27611],v8920=[12106,26408],v8921=[12140,30446],v8922=[12200,38272],v8923=[12142,30690],v8924={f:2,c:29494},v8925=[12194,37009],v8926=[12067,22805],v8927=[12132,29992],v8928=[12154,32650],v8929=[12197,37324],v8930=[12148,31435],v8931=[12015,31452],v8932=[12243,40845],v8933=[12050,21147],v8934=[12156,32769],v8935=[12034,20022],v8936=[12035,20031],v8937=[12037,20101],v8938={f:2,c:20126},v8939=[12039,20128],v8940={f:2,c:20452},v8941={f:2,c:20681},
v8942={f:2,c:20737},v8943=[12041,20799],v8944=[11918,20800],v8945={f:2,c:20841},v8946=[12044,20866],v8947=[12045,20886],v8948={f:2,c:20905},v8949=[12046,20907],v8950={f:2,c:20913},v8951=[12047,20960],v8952=[12048,20981],v8953={f:2,c:21067},v8954={f:2,c:21164},v8955=[12051,21241],v8956=[12052,21269],v8957=[12053,21274],v8958=[12054,21304],v8959=[12057,21353],v8960=[12058,21378],v8961=[12059,21430],v8962={f:2,c:21548},v8963={f:2,c:21733},v8964={f:2,c:21846},v8965=[12062,22231],v8966={f:2,c:22327},v8967=
{f:2,c:22482},v8968={f:3,c:22779},v8969=[12065,22786],v8970=[12066,22794],v8971={f:2,c:22828},v8972={f:2,c:23001},v8973={f:2,c:23093},v8974={f:2,c:23290},v8975={f:2,c:23386},v8976=[12071,23424],v8977={f:2,c:23559},v8978=[11920,12074,23586],v8979=[12075,23608],v8980=[12076,23662],v8981=[12078,24027],v8982={f:2,c:24118},v8983={f:2,c:24181},v8984=[11923,12083,24186],v8985=[12084,24191],v8986={f:2,c:24257},v8987={f:2,c:24282},v8988={f:2,c:24296},v8989=[12085,24308],v8990=[12086,24318],v8991=[12087,24331],
v8992=[11924,24401],v8993={f:2,c:24406},v8994=[12090,24417],v8995=[12091,24435],v8996={f:2,c:24726},v8997={f:2,c:24822},v8998={f:2,c:24845},v8999={f:3,c:24920},v9000=[12093,25096],v9001={f:2,c:25138},v9002={f:2,c:25234},v9003={f:2,c:25824},v9004=[12097,25908],v9005=[11929,25909],v9006={f:2,c:25986},v9007=[12102,26080],v9008=[11931,26081],v9009={f:2,c:26165},v9010={f:2,c:26215},v9011=[12104,26352],v9012={f:2,c:26406},v9013={f:2,c:26467},v9014={f:2,c:27298},v9015=[12109,27513],v9016={f:2,c:27519},v9017=
{f:2,c:27562},v9018=[12110,27571],v9019=[12111,27595],v9020=[12115,27668],v9021={f:2,c:28372},v9022=[12120,29243],v9023=[12121,29247],v9024={f:2,c:29408},v9025={f:2,c:29518},v9026={f:2,c:29936},v9027={f:2,c:30086},v9028={f:2,c:30206},v9029={f:2,c:30194},v9030={f:3,c:30240},v9031={f:2,c:30279},v9032={f:2,c:30305},v9033={f:3,c:30312},v9034=[12136,30326],v9035={f:2,c:30361},v9036={f:3,c:30392},v9037={f:2,c:30501},v9038={f:2,c:30519},v9039={f:2,c:30652},v9040={f:2,c:31161},v9041={f:2,c:31256},v9042={f:2,
c:31329},v9043={f:2,c:31449},v9044={f:2,c:31457},v9045={f:2,c:31512},v9046={f:2,c:31600},v9047={f:2,c:32345},v9048={f:2,c:32392},v9049={f:2,c:32403},v9050={f:2,c:32411},v9051={f:3,c:32588},v9052=[12153,32593],v9053={f:2,c:32607},v9054={f:2,c:32616},v9055={f:2,c:32709},v9056=[12158,32786],v9057={f:2,c:32792},v9058=[12160,32895],v9059={f:2,c:33125},v9060={f:2,c:33247},v9061={f:2,c:33274},v9062={f:2,c:33281},v9063={f:2,c:33386},v9064=[12171,33400],v9065={f:2,c:33559},v9066={f:2,c:34071},v9067=[12172,
34381],v9068={f:2,c:34473},v9069={f:2,c:34443},v9070={f:2,c:34806},v9071={f:2,c:35011},v9072={f:2,c:35032},v9073={f:2,c:35114},v9074=[12177,35198],v9075={f:2,c:35263},v9076={f:2,c:35292},v9077={f:2,c:35493},v9078={f:2,c:35730},v9079={f:2,c:35737},v9080=[12183,35925],v9081=[12184,35960],v9082={f:2,c:35981},v9083={f:2,c:36018},v9084={f:2,c:36090},v9085={f:2,c:36100},v9086={f:2,c:36330},v9087={f:2,c:36360},v9088={f:2,c:36381},v9089={f:3,c:36706},v9090={f:2,c:36857},v9091={f:4,c:36943},v9092={f:2,c:37312},
v9093={f:2,c:37365},v9094={f:2,c:37804},v9095={f:2,c:37846},v9096={f:2,c:38296},v9097={f:2,c:38446},v9098={f:2,c:38577},v9099=[12202,38582],v9100=[12203,38585],v9101={f:2,c:38717},v9102={f:2,c:38799},v9103={f:2,c:38835},v9104=[12209,38859],v9105=[12210,38893],v9106={f:3,c:39023},v9107={f:2,c:39197},v9108={f:2,c:39229},v9109={f:2,c:39249},v9110={f:2,c:39319},v9111={f:2,c:39341},v9112={f:2,c:39405},v9113={f:2,c:39409},v9114={f:2,c:39635},v9115=[12221,39647],v9116={f:2,c:39650},v9117={f:2,c:39714},v9118=
[12222,39717],v9119={f:4,c:39719},v9120=[12223,39727],v9121=[12224,39730],v9122={f:2,c:39757},v9123={f:2,c:39830},v9124={f:2,c:39839},v9125={f:2,c:39889},v9126={f:2,c:40285},v9127={f:2,c:40474},v9128=[12228,40565],v9129={f:2,c:40587},v9130=[12230,40613],v9131={f:3,c:40654},v9132={f:2,c:40694},v9133=[12235,40697],v9134={f:2,c:40699},v9135=[12236,40701],v9136={f:2,c:40711},v9137=[12241,40778],v9138=[12242,40786],v9139={f:3,c:40799},v9140={f:2,c:40806},v9141=[12244,40860],v9142=[12245,40864],v9143={f:76,
c:9472},v9144={f:20,c:9312},v9145={f:10,c:8544},v9146={f:3,c:13212},v9147={f:2,c:13198},v9148={f:5,c:12964},v9149={f:2,c:12849},v9150={s:3},v9151={s:7},v9152={s:4},v9153={s:4},v9154={s:4},v9155={s:3},v9156={s:4},v9157={s:5},v9158={s:5},v9159={s:7},v9160={s:8},v9161={s:4},v9162={s:4},v9163={s:6},v9164={s:3},v9165={s:9},v9166={s:3},v9167={s:10},v9168={s:6},v9169={s:9},v9170={f:2,c:63890},v9171={s:7},v9172={s:4},v9173={s:21},v9174={s:15},v9175={s:12},v9176={f:2,c:65073},v9177={s:4},v9178={f:2,c:65077},
v9179={f:2,c:65081},v9180={f:2,c:65079},v9181={f:2,c:65087},v9182={f:2,c:65085},v9183={f:4,c:65089},v9184={f:2,c:65083},v9185={s:41},v9186={f:3,c:12436},v9187={s:41},v9188={f:2,c:13220},v9189={f:3,c:13189},v9190={s:3},v9191={f:9,c:9352},v9192={f:20,c:9332},v9193={f:10,c:8560},v9194={f:10,c:12882},v9195={f:26,c:9372},v9196={s:8},v9197={f:3,c:9131},v9198={f:3,c:9127},v9199={f:2,c:13192},v9200={f:6,c:12842},v9201={s:3},v9202={f:4,c:9728},v9203={f:2,c:9756},v9204={f:2,c:8554},v9205={s:3},v9206={f:8,c:9601},
v9207={f:2,c:9620},v9208={f:2,c:9581},v9209={f:2,c:9698},v9210={f:3,c:9585},v9211={s:20},v9212={f:9,c:10102},v9213={s:3},v9214={f:2,c:8570},v9215={s:3},v9216={f:2,c:8644},v9217={f:4,c:12535},v9218={s:3},v9219={s:3},v9220={s:30},v9221=[12033,20008],v9222={f:2,c:23992},v9223={f:2,c:28998},v9224={f:3,c:64024},v9225={f:2,c:64032},v9226={f:2,c:37357},v9227={f:2,c:37348},v9228={f:2,c:37495},v9229=[12205,38737],v9230={f:2,c:64042},v9231={s:636},v9232={f:2,c:64259},v9233={f:4,c:8539},v9234={f:2,c:8531},v9235=
{f:6,c:8308},v9236={f:10,c:8320},v9237={s:682},v9238={f:10,c:12832},v9239={s:108},v9240={f:4,c:12892},v9241={f:15,c:12977},v9242={s:50},v9243={f:26,c:9424},v9244={f:26,c:9398},v9245={s:48},v9246={f:47,c:13008},v9247={f:10,c:12928},v9248={f:6,c:12938},v9249={s:6},v9250={f:2,c:12960},v9251={s:6},v9252={s:11},v9253={f:10,c:9451},v9254={s:510},v9255={s:815},v9256={s:3},v9257={s:3},v9258={f:2,c:13271},v9259={s:3},v9260={f:2,c:13057},v9261={f:6,c:13070},v9262={f:4,c:13082},v9263={f:3,c:13087},v9264={f:2,
c:13096},v9265={f:3,c:13102},v9266={f:2,c:13108},v9267={s:3},v9268={f:3,c:13118},v9269={f:4,c:13123},v9270={f:2,c:13131},v9271={f:2,c:13135},v9272={f:2,c:13141},v9273={s:132},v9274={f:2,c:9832},v9275={s:5},v9276={f:3,c:12339},v9277={s:5},v9278={f:2,c:8818},v9279={s:6},v9280={f:2,c:12312},v9281={f:2,c:65375},v9282={s:10},v9283={f:2,c:9117},v9284={s:4},v9285={f:2,c:9123},v9286={s:12},v9287=[9116,9119,9122,9125,9130],v9288={s:8},v9289={s:4},v9290={s:4},v9291={f:2,c:8600},v9292={f:2,c:8598},v9293={s:10},
v9294={s:8},v9295={s:7},v9296={s:12},v9297={s:4},v9298={s:379},v9299={f:2,c:65093},v9300={s:679},v9301=[12232,40643],v9302={f:2,c:64091},v9303={s:120},v9304={s:120},v9305=[11965,158033],v9306={s:5},v9307={s:13},v9308={s:8},v9309={s:13},v9310={s:4},v9311={s:10},v9312={s:8},v9313={s:7},v9314={s:7},v9315={s:3},v9316={s:3},v9317={s:6},v9318={s:9},v9319={s:4},v9320={s:6},v9321={s:3},v9322={s:5},v9323={s:16},v9324={f:2,c:11916},v9325={s:3},v9326={s:5},v9327=[11999,39136],v9328=[11998,169599],v9329=[11927,
14586],v9330=[11909,20155],v9331={s:7},v9332=[11971,35200],v9333={s:4},v9334={s:4},v9335={s:7},v9336={s:4},v9337=[11978,163767],v9338={s:5},v9339={s:5},v9340={s:5},v9341={s:5},v9342={s:3},v9343={s:19},v9344={s:7},v9345={s:4},v9346={s:9},v9347={s:13},v9348=[11946,150804],v9349={s:46},v9350={s:8},v9351={s:9},v9352={s:5},v9353={s:4},v9354={s:3},v9355={s:5},v9356=[11961,32770],v9357={s:4},v9358=[11911,132648],v9359=[11915,13630],v9360={s:4},v9361={s:4},v9362={s:3},v9363={s:3},v9364=[11942,20012],v9365=
{s:6},v9366={s:3},v9367={s:5},v9368={s:4},v9369=[11966,33401],v9370=[11967,64094],v9371=[11968,64093],v9372={s:3},v9373={s:4},v9374={s:6},v9375={s:8},v9376={s:19},v9377={s:6},v9378={s:4},v9379={s:10},v9380={s:5},v9381={f:2,c:19972},v9382={f:2,c:20015},v9383={f:2,c:20032},v9384=[11907,20058],v9385={f:2,c:20349},v9386={f:2,c:20480},v9387=[11913,20994],v9388={f:2,c:21258},v9389={f:2,c:22030},v9390={f:2,c:22129},v9391={f:2,c:22188},v9392={f:2,c:22323},v9393={f:2,c:22517},v9394={f:2,c:23011},v9395={f:2,
c:23422},v9396=[11919,23587],v9397={f:2,c:24084},v9398={f:2,c:24171},v9399={f:2,c:24254},v9400={f:2,c:24348},v9401=[12089,24400],v9402=[11926,24516],v9403={f:3,c:24850},v9404=[11928,25164],v9405={f:2,c:25410},v9406={f:2,c:25790},v9407={f:2,c:26203},v9408={f:2,c:26672},v9409={f:2,c:26864},v9410={f:2,c:27007},v9411={f:2,c:27094},v9412={f:2,c:27216},v9413={f:3,c:27293},v9414=[11937,27701],v9415={f:2,c:27883},v9416={f:2,c:28583},v9417={f:2,c:28765},v9418=[11939,28780],v9419={f:2,c:28883},v9420={f:2,c:29269},
v9421=[11944,29357],v9422={f:2,c:29444},v9423={f:2,c:29573},v9424={f:3,c:29598},v9425={f:2,c:29722},v9426={f:3,c:29743},v9427={f:3,c:29829},v9428=[12135,30098],v9429={f:2,c:30229},v9430={f:2,c:30372},v9431={f:2,c:30559},v9432={f:2,c:30765},v9433={f:2,c:30944},v9434=[11949,31035],v9435={f:2,c:31067},v9436=[12145,31160],v9437={f:2,c:31419},v9438={f:2,c:31944},v9439={f:3,c:32007},v9440={f:2,c:32139},v9441=[11947,11954,32594],v9442=[11953,32595],v9443={f:2,c:32750},v9444={f:2,c:32983},v9445={f:2,c:33727},
v9446={f:2,c:34471},v9447={f:2,c:34732},v9448=[11970,34916],v9449={f:2,c:35005},v9450={f:2,c:35056},v9451={f:3,c:35096},v9452={f:2,c:35651},v9453=[12193,36789],v9454=[11981,36790],v9455={f:2,c:37293},v9456={f:2,c:37579},v9457=[11986,38264],v9458=[11983,11990,38429],v9459={f:2,c:38837},v9460={f:2,c:38994},v9461={f:2,c:39218},v9462={f:2,c:39353},v9463={f:2,c:39469},v9464={f:2,c:39605},v9465={f:2,c:39731},v9466=[11940,64073],v9467={s:4},v9468=[11980,64102],v9469={f:3,c:63584},v9470={s:23},v9471={f:2,
c:8836},v9472={f:2,c:8842},v9473={f:2,c:8965},v9474={s:9},v9475={f:2,c:8741},v9476={s:14},v9477={f:2,c:8822},v9478={s:4},v9479={s:209},v9480={f:2,c:8922},v9481={f:2,c:7742},v9482={f:2,c:504},v9483={f:5,c:741},v9484={f:2,c:799},v9485={f:2,c:797},v9486={f:2,c:792},v9487={f:2,c:826},v9488={s:3},v9489={f:2,c:610},v9490={f:2,c:736},v9491={s:6},v9492={s:287},v9493={f:2,c:12310},v9494={f:2,c:10548},v9495={f:2,c:10746},v9496={s:13},v9497={f:10,c:9461},v9498={f:2,c:9750},v9499={f:10,c:12784},v9500={f:6,c:12794},
v9501={f:15,c:9150},v9502={f:4,c:9680},v9503={f:2,c:8263},v9504={f:16,c:12688},v9505={s:13},v9506={f:2,c:9136},v9507={f:12,c:9842},v9508={f:2,c:12441},v9509={s:450},v9510={f:2,c:26231},v9511={f:2,c:30541},v9512={f:2,c:33127},v9513={f:2,c:33443},v9514={f:2,c:34308},v9515={f:2,c:37060},v9516={f:2,c:37154},v9517={f:2,c:37732},v9518={f:2,c:40015},v9519={f:2,c:40221},v9520={f:2,c:20343},v9521={f:2,c:20626},v9522={f:2,c:20666},v9523={f:2,c:21178},v9524={f:2,c:13661},v9525={f:2,c:21760},v9526={f:2,c:22262},
v9527={f:2,c:22341},v9528={f:3,c:22387},v9529={f:2,c:22429},v9530={f:2,c:22666},v9531={f:2,c:22671},v9532={f:2,c:22771},v9533={f:2,c:22789},v9534={f:2,c:22901},v9535={f:2,c:23199},v9536={f:2,c:14177},v9537={f:2,c:23655},v9538={f:2,c:24173},v9539={f:3,c:24530},v9540={f:2,c:24558},v9541={f:2,c:24978},v9542={f:2,c:142159},v9543={f:2,c:25403},v9544={f:2,c:25556},v9545={f:2,c:25579},v9546={f:2,c:25803},v9547={f:2,c:26220},v9548={f:3,c:26776},v9549={f:2,c:26794},v9550={f:2,c:26852},v9551={f:2,c:27118},
v9552={f:2,c:27186},v9553={f:3,c:27377},v9554={f:3,c:27407},v9555=[11934,27514],v9556={f:3,c:27591},v9557={f:2,c:27622},v9558={f:2,c:27942},v9559={f:2,c:28032},v9560={f:2,c:28232},v9561={f:2,c:28235},v9562={f:2,c:28243},v9563={f:2,c:28616},v9564={f:2,c:29102},v9565={f:2,c:29294},v9566={f:2,c:29464},v9567={f:2,c:29550},v9568={f:2,c:30013},v9569={f:2,c:30077},v9570={f:2,c:30143},v9571={f:2,c:30175},v9572={f:2,c:30235},v9573={f:2,c:30375},v9574={f:2,c:30686},v9575={f:2,c:30969},v9576={f:2,c:31180},v9577=
{f:2,c:31534},v9578={f:2,c:31926},v9579={f:2,c:32061},v9580={f:2,c:32390},v9581={f:2,c:32611},v9582={f:2,c:32637},v9583={f:2,c:33447},v9584={f:2,c:33543},v9585={f:2,c:33684},v9586={f:2,c:33873},v9587={f:2,c:33881},v9588={f:2,c:33998},v9589={f:2,c:34084},v9590={f:2,c:34145},v9591={f:2,c:159734},v9592={f:2,c:34264},v9593={f:2,c:34460},v9594={f:2,c:34660},v9595={f:2,c:34789},v9596={f:2,c:35732},v9597={f:2,c:36385},v9598={f:2,c:165320},v9599={f:2,c:37118},v9600={f:2,c:37190},v9601={f:2,c:37315},v9602=
{f:2,c:37398},v9603={f:2,c:37500},v9604={f:2,c:166330},v9605={f:2,c:37567},v9606={f:2,c:37910},v9607={f:2,c:38284},v9608={f:2,c:38451},v9609={f:2,c:38833},v9610={f:2,c:38962},v9611={f:2,c:39099},v9612={f:2,c:39152},v9613={f:2,c:39190},v9614={f:3,c:39194},v9615={f:3,c:39226},v9616={f:2,c:39787},v9617={f:2,c:39798},v9618={f:3,c:39960},v9619={f:2,c:40009},v9620={f:3,c:40041},v9621={f:2,c:40045},v9622=[171982,171991],v9623={f:2,c:40215},v9624={f:2,c:40310},v9625={f:2,c:20003},v9626={f:3,c:20748},v9627=
{f:2,c:20947},v9628={f:2,c:21041},v9629={f:2,c:21112},v9630={f:2,c:21444},v9631={f:2,c:21556},v9632={f:2,c:22033},v9633={f:2,c:22298},v9634={f:2,c:22333},v9635={f:2,c:24276},v9636={f:2,c:25518},v9637={f:2,c:25592},v9638={f:2,c:25752},v9639={f:2,c:26251},v9640={f:2,c:27336},v9641={f:2,c:27517},v9642={f:2,c:28378},v9643={f:2,c:28885},v9644={f:2,c:29263},v9645={f:2,c:29498},v9646={f:2,c:30604},v9647={f:2,c:31015},v9648={f:2,c:31826},v9649={f:3,c:31835},v9650={f:2,c:32245},v9651={f:2,c:32639},v9652={f:3,
c:32765},v9653={f:2,c:33245},v9654={f:2,c:33299},v9655={f:2,c:34711},v9656={f:3,c:34970},v9657={f:2,c:35086},v9658={f:2,c:36337},v9659={f:2,c:36416},v9660={f:3,c:36768},v9661={f:2,c:37563},v9662={f:2,c:37901},v9663={f:2,c:38353},v9664={f:2,c:38689},v9665={f:2,c:39010},v9666={f:2,c:39613},v9667={f:2,c:39693},v9668={f:3,c:40578},v9669={f:2,c:40746},v9670={s:4},v9671={s:4},v9672={s:6},v9673={s:21},v9674={s:9},v9675={s:5},v9676={s:8},v9677={s:5},v9678={s:9},v9679={s:34},v9680={s:12},v9681={s:4},v9682=
{s:71},v23567=[v8709,v8710,v8711,v8712,165,v8713,v8714,v8715,v8716,166,125,v8717,v8718,92,v8719,124,v8720,v8721,8260,402,0,164,8220,171,v8722,v8723,v8724,0,0,v8725,0,8226,8218,8222,8221,187,0,0,191,v8726,v8727,v8728,778,v8729,779,808,780,v8730,198,170,321,216,338,186,230,305,322,248,339,223,173,169,172,174,0,0,v8731,181,185,v8732,v8733,v8734,0,v8735,v8736,v8737,0,v8738,352,376,381,v8739,353,8482,382,0,8194,v8740,65512,v8741,v8742,v8743,v8744,v8745,65292,65294,12539,v8746,65311,65281,v8747,180,65344,
168,65342,65507,65343,v8748,v8749,12291,20189,v8750,12540,8213,8208,65295,65340,v8751,8214,65372,8230,8229,v8752,v8753,v8754,65339,65341,65371,65373,v8755,65291,v8756,177,215,247,65309,8800,65308,65310,v8757,8734,8756,9794,9792,176,v8758,8451,65509,65284,v8759,65285,65283,65286,65290,65312,167,9734,9733,9675,9679,9678,9671,9670,9633,9632,9651,9650,9661,9660,8251,12306,8594,v8760,8595,12307,8712,8715,v8761,v8762,8746,8745,v8763,65506,8658,8660,8704,8707,8736,8869,8978,8706,8711,8801,8786,v8764,8730,
8765,8733,8757,v8765,8491,8240,9839,9837,9834,v8766,182,9711,v8767,v8768,v8769,v8770,v8771,v8772,v8773,v8774,v8775,v8776,1025,v8777,1105,v8778,20124,21782,23043,38463,21696,24859,25384,23030,36898,33909,33564,31312,24746,25569,28197,26093,33894,33446,39925,26771,22311,26017,25201,23451,22992,34427,39156,32098,32190,39822,25110,31903,34999,23433,24245,25353,26263,26696,38343,38797,26447,20197,20234,20301,20381,20553,22258,22839,22996,23041,23561,24799,24847,24944,26131,26885,28858,30031,30064,31227,
32173,32239,32963,33806,v8779,35586,36949,36986,21307,20117,20133,22495,32946,37057,30959,v8780,22769,28322,36920,31282,33576,33419,39983,20801,21360,21693,21729,22240,23035,24341,39154,28139,32996,34093,38498,38512,38560,38907,21515,21491,23431,28879,v8781,36802,v8782,21359,40284,31418,19985,30867,v8783,28198,22040,21764,27421,34074,39995,23013,21417,28006,v8784,38287,22082,20113,36939,38642,33615,39180,21473,21942,23344,24433,26144,26355,26628,27704,27891,27945,29787,30408,31310,38964,33521,34907,
35424,37613,28082,30123,30410,39365,24742,35585,36234,38322,27022,21421,20870,22290,22576,22852,23476,24310,24616,25513,25588,27839,28436,28814,28948,29017,29141,29503,32257,33398,33489,34199,36960,37467,40219,22633,26044,27738,29989,20985,22830,22885,24448,24540,25276,26106,27178,27431,27572,29579,32705,35158,40236,40206,v8785,23713,27798,33659,20740,23627,25014,33222,26742,29281,v8786,20474,21368,24681,28201,31311,v8787,19979,21270,20206,20309,20285,20385,20339,21152,21487,22025,22799,23233,23478,
23521,31185,26247,26524,26550,27468,27827,v8788,29634,31117,v8789,31292,31623,33457,33499,33540,33655,33775,33747,34662,35506,22057,36008,36838,36942,38686,34442,20420,23784,25105,v8790,30011,33253,33469,34558,36032,38597,39187,39381,20171,20250,35299,22238,22602,22730,24315,24555,24618,24724,24674],v23569=[25040,25106,25296,25913,39745,26214,26800,28023,28784,30028,30342,32117,33445,34809,38283,38542,v8791,20977,21182,22806,21683,23475,23830,24936,27010,28079,30861,33995,34903,35442,37799,39608,
28012,39336,34521,22435,26623,34510,37390,21123,22151,21508,24275,25313,25785,26684,26680,27579,29554,30906,31339,35226,v8792,36203,36611,37101,38307,38548,v8793,23398,23731,27005,v8794,25499,31520,27179,27263,26806,39949,28511,21106,21917,24688,25324,27963,28167,28369,33883,35088,36676,19988,39993,21494,26907,27194,38788,26666,20828,31427,33970,37340,37772,22107,40232,26658,33541,33841,31909,21E3,33477,v8795,20094,20355,20896,23506,21002,21208,21223,24059,21914,22570,23014,23436,23448,23515,v8796,
24185,24739,24863,24931,25022,25563,25954,26577,26707,26874,27454,27475,27735,28450,28567,28485,29872,v8797,30435,30475,31487,31649,31777,32233,v8798,32752,32925,33382,33694,35251,35532,36011,36996,37969,38291,38289,38306,38501,38867,39208,33304,20024,21547,23736,24012,29609,30284,30524,23721,32747,36107,38593,38929,38996,39E3,20225,20238,21361,21916,22120,22522,22855,23305,23492,23696,24076,24190,24524,25582,26426,26071,26082,26399,26827,26820,27231,24112,27589,27671,27773,30079,31048,23395,31232,
32E3,24509,35215,35352,36020,36215,36556,36637,39138,39438,v8799,v8800,20605,20736,22931,23452,25135,25216,25836,27450,29344,30097,31047,32681,34811,35516,35696,25516,33738,38816,21513,21507,21931,26708,27224,35440,30759,26485,v8801,21364,23458,33050,34384,36870,19992,20037,20167,20241,21450,21560,23470,v8802,24613,25937,26429,27714,27762,27875,28792,29699,31350,31406,31496,32026,31998,32102,26087,v8803,21435,23621,24040,25298,25312,25369,28192,34394,35377,36317,37624,28417,31142,v8804,20136,v8805,
20379,20384,20689,20807,31478,20849,20982,21332,21281,21375,21483,21932,22659,23777,24375,24394,24623,24656,24685,25375,25945,27211,27841,29378,29421,30703,33016,33029,33288,34126,37111,37857,38911,39255,39514,20208,20957,23597,26241,26989,23616,26354,26997,v8806,26704,31873,20677,21220,22343,v8807,37670,v8808,27427,27453,29748,31105,31165,31563,32202,33465,33740,34943,35167,35641,36817,v8809,21535,37504,20061,20534,21477,21306,29399,29590,30697,33510,36527,39366,39368,39378,20855,24858,34398,21936,
31354,20598,23507,36935,38533,20018,27355,37351,23633,23624,25496,31391,27795,38772,36705,31402,29066,38536,31874,26647,32368,26705,37740,21234,21531,34219,35347,32676,36557,37089,21350,34952,31041,20418,20670,21009,20804,21843,22317,29674,22411,22865,24418,24452,24693,24950,24935,25001,25522,25658,25964,26223,26690,28179,30054,31293,31995,32076,32153,32331,32619,33550,33610,34509,35336,35427,35686,36605,38938,40335,33464,36814,39912,21127,25119,25731,28608,38553,26689,20625,v8810,27770,28500,v8811,
32080,v8812,35363,v8813,20214,20537,20518,20581,20860,21048,21091,21927,22287,22533,23244,24314,25010,25080,25331,25458,26908,27177,29309,v8814,29486,30740,30831,32121,30476,32937,v8815,35609,36066,36562,36963,37749,38522,38997,39443,40568,20803,21407,21427,24187,24358,28187,28304,v8816],v23571=[29694,32067,33335,v8817,35578,38480,20046,20491,21476,21628,22266,22993,23396,v8818,24235,24359,v8819,25925,26543,28246,29392,31946,34996,32929,32993,33776,v8820,35463,36328,37431,38599,39015,v8821,20116,
20114,20237,21320,21577,21566,23087,24460,24481,24735,26791,27278,29786,30849,35486,35492,35703,37264,20062,39881,20132,20348,20399,20505,20502,20809,20844,21151,21177,21246,21402,v8822,21521,21518,21897,22353,22434,22909,23380,23389,23439,v8823,24039,24055,24184,24195,24218,24247,24344,24658,24908,25239,25304,25511,25915,26114,26179,26356,26477,26657,26775,27083,27743,27946,28009,28207,28317,30002,30343,30828,31295,31968,32005,32024,32094,32177,32789,32771,32943,32945,33108,33167,33322,33618,v8824,
34913,35611,36002,36092,37066,37237,37489,30783,37628,38308,38477,38917,v8825,v8826,40251,21083,21163,21495,21512,22741,25335,28640,35946,36703,40633,20811,21051,21578,22269,31296,37239,40288,v8827,29508,28425,33136,29969,24573,24794,v8828,29403,36796,27492,38915,20170,22256,22372,22718,23130,24680,25031,26127,26118,26681,26801,28151,30165,32058,v8829,39746,20123,20304,21449,21766,23919,24038,24046,26619,27801,29811,30722,35408,37782,35039,22352,24231,25387,20661,20652,20877,26368,21705,22622,22971,
23472,24425,25165,25505,26685,27507,28168,28797,37319,29312,30741,30758,31085,25998,32048,33756,35009,36617,38555,21092,22312,26448,32618,36001,20916,22338,38442,22586,27018,32948,21682,23822,22524,30869,40442,20316,21066,21643,25662,26152,26388,26613,31364,31574,32034,37679,26716,39853,31545,21273,20874,21047,23519,25334,25774,25830,26413,27578,34217,38609,30352,39894,25420,37638,39851,v8830,26194,19977,20632,21442,v8831,24808,25746,25955,26719,29158,29642,29987,31639,32386,34453,35715,36059,37240,
39184,26028,26283,27531,20181,20180,20282,20351,21050,21496,21490,21987,22235,v8832,22987,22985,23039,v8833,23629,24066,24107,24535,24605,25351,v8834,23388,26031,26045,26088,26525,v8835,27515,v8836,29509,31049,31169,v8837,32025,32043,32930,33026,v8838,35222,35422,35433,35430,35468,35566,36039,36060,38604,39164,v8839,20107,20284,20365,20816,23383,23546,24904,25345,26178,27425,28363,27835,29246,29885,30164,30913,v8840,v8841,v8842,v8843,33940,36766,27728,v8844,24335,35672,40235,31482,36600,23437,38635,
19971,21489,22519,22833,23241,23460,24713,28287,28422,30142,36074,23455,34048,31712,20594,26612,33437,23649,34122,32286,33294,20889,23556,25448,36198,26012,29038,31038,32023,32773,35613,v8845,36974,34503,37034,20511,21242,23610,26451,28796,29237,37196,37320,37675,33509,23490,24369,24825,20027,21462,23432,v8846,26417,27530,29417,29664,31278,33131,36259,37202,v8847,20754,21463,21610,23551,25480,27193,32172,38656,22234,21454,21608,23447,23601,24030,20462,24833,25342,27954,31168,31179,32066,32333,32722,
33261,v8848,33936,34886,35186,35728,36468,36655,36913,37195,37228,38598,37276,20160,20303,20805,v8849,24467,25102,26580,27713,28171,29539,32294,37325,37507,21460,22809,23487,28113,31069,32302,31899,22654,29087,20986,34899,36848,20426,23803,26149,30636,31459,33308,39423,20934],v23573=[24490,26092,26991,27529,28147,28310,28516,30462,32020,24033,36981,37255,38918,20966,21021,25152,26257,26329,28186,24246,32210,32626,26360,34223,34295,35576,21161,21465,v8850,24207,24464,24661,37604,38500,20663,20767,
21213,21280,21319,21484,21736,21830,21809,22039,22888,22974,23100,23477,23558,v8851,23569,23578,24196,24202,24288,24432,25215,25220,25307,25484,25463,26119,26124,26157,26230,26494,26786,27167,27189,27836,28040,28169,28248,28988,28966,29031,30151,30465,30813,30977,31077,31216,31456,31505,31911,32057,32918,33750,33931,34121,34909,35059,35359,35388,35412,35443,35937,36062,37284,37478,37758,37912,38556,38808,19978,19976,19998,20055,20887,21104,22478,22580,22732,23330,24120,24773,25854,26465,26454,27972,
29366,30067,31331,33976,35698,37304,37664,22065,22516,39166,25325,26893,27542,29165,32340,32887,v8852,35302,v8853,34645,36785,23611,20280,20449,20405,21767,23072,23517,23529,v8854,24910,25391,26032,26187,26862,27035,28024,28145,30003,30137,30495,31070,31206,32051,v8855,33455,34218,35242,35386,v8856,v8857,36914,37341,38663,v8858,20161,20995,22645,22764,23563,29978,23613,33102,35338,36805,38499,38765,31525,35535,38920,37218,22259,21416,36887,21561,22402,24101,25512,v8859,28810,30561,31883,32736,34928,
36930,37204,37648,37656,38543,29790,39620,23815,23913,25968,26530,36264,38619,25454,26441,26905,33733,38935,38592,35070,28548,25722,v8860,19990,28716,30045,26159,20932,21046,21218,22995,24449,24615,25104,25919,25972,26143,26228,26866,26646,27491,28165,29298,v8861,30427,31934,32854,22768,35069,v8862,35488,35475,35531,36893,37266,v8863,38745,v8864,31246,33030,38587,24109,24796,25114,26021,26132,26512,v8865,31309,31821,32318,33034,36012,v8866,36321,36447,30889,20999,25305,25509,25666,25240,35373,31363,
31680,35500,38634,32118,v8867,34633,20185,20808,21315,21344,23459,23554,23574,24029,25126,25159,25776,26643,26676,27849,27973,27927,26579,28508,29006,29053,26059,31359,31661,32218,32330,32680,33146,v8868,33337,34214,35438,36046,36341,36984,36983,37549,37521,38275,39854,21069,21892,28472,28982,20840,31109,32341,33203,31950,22092,22609,23720,25514,26366,26365,26970,29401,30095,30094,30990,31062,31199,31895,32032,32068,34311,35380,38459,36961,v8869,20711,21109,21452,21474,20489,21930,22766,22863,29245,
23435,23652,21277,24803,24819,25436,25475,25407,25531,25805,26089,26361,24035,27085,27133,28437,29157,20105,30185,30456,31379,31967,32207,32156,32865,33609,33624,33900,33980,34299,35013,v8870,36865,36973,37783,38684,39442,20687,22679,24974,33235,34101,36104,36896,20419,20596,21063,21363,24687,25417,26463,28204,v8871,36895,20439,23646,36042,26063,32154,21330,34966,20854,25539,23384,23403,23562,25613,26449,36956,20182,22810,22826,27760,35409,21822,22549,22949,24816,25171,26561,33333,26965,38464,39364,
39464,20307,22534,23550,32784,23729,24111,24453,24608,24907,25140,26367,27888,28382,32974,33151,33492,34955,36024,36864,36910,38538,40667,39899,20195,21488,v8872,31532,37261,38988,40441,28381,28711,21331,21828,23429,25176,25246,25299,27810,28655,29730,35351,37944],v23575=[28609,35582,33592,20967,34552,21482,21481,20294,36948,v8873,22890,33073,24061,31466,36799,26842,v8874,29432,40008,27197,35504,20025,21336,22022,22374,25285,25506,26086,27470,28129,28251,28845,30701,31471,31658,32187,32829,32966,
34507,35477,37723,22243,22727,24382,26029,26262,27264,27573,30007,35527,20516,30693,22320,24347,24677,26234,27744,30196,31258,32622,33268,34584,36933,39347,31689,30044,v8875,31569,33988,36880,31209,31378,33590,23265,30528,20013,20210,23449,24544,25277,26172,26609,27880,v8876,34935,35387,37198,37619,39376,27159,28710,29482,33511,33879,36015,19969,20806,20939,21899,23541,24086,24115,24193,24340,24373,24427,24500,25074,25361,26274,26397,28526,29266,30010,30522,32884,33081,33144,34678,35519,35548,36229,
36339,37530,v8877,38914,v8878,21189,25431,30452,26389,27784,29645,36035,37806,38515,27941,22684,26894,27084,36861,37786,30171,36890,22618,26626,25524,27131,20291,28460,26584,36795,34086,32180,37716,26943,28528,22378,22775,23340,32044,v8879,21514,37347,40372,20141,20302,20572,20597,21059,35998,21576,22564,23450,24093,24213,24237,24311,24351,24716,25269,25402,25552,26799,27712,30855,31118,31243,32224,33351,35330,35558,36420,36883,37048,37165,37336,v8880,27877,25688,25826,25973,28404,30340,31515,36969,
37841,28346,21746,24505,25764,36685,36845,37444,20856,22635,22825,23637,24215,28155,32399,29980,36028,36578,39003,28857,20253,27583,28593,v8881,38651,20814,21520,22581,22615,22956,23648,24466,v8882,26460,28193,30331,33759,36077,36884,37117,37709,30757,30778,21162,24230,v8883,22900,24594,20498,20826,20908,20941,v8884,21776,22612,22616,22871,23445,23798,23947,24764,25237,25645,26481,26691,26812,26847,30423,28120,28271,28059,28783,29128,24403,30168,31095,31561,31572,31570,31958,32113,21040,33891,34153,
34276,35342,35588,v8885,36367,36867,36879,37913,38518,38957,39472,38360,20685,21205,21516,22530,23566,24999,25758,27934,30643,31461,33012,33796,36947,37509,23776,40199,21311,24471,24499,28060,29305,30563,31167,31716,27602,29420,35501,26627,27233,20984,31361,26932,23626,40182,33515,23493,v8886,28702,22136,23663,24775,25958,27788,35930,36929,38931,21585,26311,37389,22856,37027,20869,20045,20970,34201,35598,28760,25466,37707,26978,39348,32260,30071,21335,26976,36575,38627,27741,v8887,23612,24336,36841,
21250,36049,v8888,34425,24319,v8889,20083,v8890,22914,23615,38894,20219,22922,24525,35469,28641,31152,31074,23527,33905,29483,29105,24180,24565,25467,25754,29123,31896,20035,24316,20043,22492,22178,24745,28611,32013,33021,33075,33215,36786,35223,34468,24052,25226,25773,35207,26487,27874,27966,29750,30772,23110,32629,33453,v8891,20467,24259,25309,25490,25943,26479,30403,29260,32972,32954,36649,37197,20493,22521,23186,26757,26995,29028,29437,36023,22770,36064,38506,36889,34687,31204,30695,33833,20271,
21093,21338,25293,26575,27850,v8892,31636,31893,33334,34180,36843,26333,28448,29190,32283,33707,39361,v8893,20989,31665,30834,31672,32903,31560,27368,24161,32908,30033,30048,v8894,37474,28300,30330,37271,39658,20240,32624,25244,31567,38309,40169,22138],v23577=[22617,34532,38588,20276,21028,21322,21453,21467,24070,25644,26001,26495,27710,27726,29256,29359,29677,30036,32321,33324,34281,36009,31684,v8895,29033,38930,39151,25405,26217,30058,30436,30928,34115,34542,21290,21329,21542,22915,24199,24444,
24754,25161,25209,25259,26E3,v8896,27852,30130,v8897,30865,31192,32203,32631,32933,34987,35513,36027,36991,v8898,v8899,27147,31800,20633,23614,24494,26503,27608,29749,30473,32654,v8900,26570,31255,21305,v8901,39661,24422,33181,33777,32920,24380,24517,30050,31558,36924,26727,23019,23195,32016,30334,35628,20469,24426,27161,27703,28418,29922,31080,34920,35413,35961,24287,25551,30149,31186,33495,37672,37618,33948,34541,39981,21697,24428,25996,27996,28693,36007,36051,38971,25935,29942,19981,20184,22496,
22827,23142,23500,20904,24067,24220,24598,25206,25975,26023,26222,28014,v8902,31526,33104,33178,33433,35676,36E3,36070,36212,v8903,38468,20398,25771,27494,33310,33889,34154,37096,23553,26963,v8904,33914,34135,20239,21103,24489,24133,26381,31119,33145,35079,35206,28149,24343,25173,27832,20175,29289,39826,20998,21563,22132,22707,24996,25198,28954,22894,31881,31966,32027,38640,v8905,32862,19993,20341,20853,22592,24163,24179,24330,26564,20006,34109,38281,38491,v8906,v8907,20731,22721,30294,30887,21029,
30629,34065,31622,20559,22793,v8908,31687,32232,36794,36820,36941,20415,21193,23081,24321,38829,20445,33303,37610,22275,25429,27497,29995,35036,36628,31298,21215,22675,24917,25098,26286,v8909,31807,33769,20515,20472,21253,21574,22577,22857,23453,23792,23791,23849,24214,25265,25447,25918,v8910,26379,27861,27873,28921,30770,32299,32990,33459,33804,34028,34562,35090,35370,35914,37030,37586,39165,40179,40300,20047,20129,20621,21078,22346,22952,24125,v8911,25151,26292,26395,26576,26834,20882,32033,32938,
33192,35584,35980,36031,37502,38450,21536,38956,21271,20693,v8912,22696,25778,26420,29287,30566,31302,37350,21187,27809,27526,22528,24140,22868,26412,32763,20961,30406,25705,30952,39764,v8913,22475,22969,26151,26522,27598,21737,27097,24149,33180,26517,39850,26622,40018,26717,20134,20451,v8914,25273,26411,27819,36804,20397,32365,40639,19975,24930,28288,28459,34067,21619,26410,39749,v8915,31637,23724,23494,34588,28234,34001,31252,33032,22937,31885,v8916,30496,21209,22818,28961,29279,v8917,38695,40289,
26891,23167,23064,20901,21517,21629,26126,30431,36855,37528,40180,23018,29277,28357,20813,26825,32191,32236,v8918,40634,25720,27169,33538,22916,23391,v8919,29467,30450,32178,32791,33945,20786,v8920,40665,v8921,26466,21247,39173,23588,25147,31870,36016,21839,24758,32011,v8922,21249,20063,20918,22812,29242,32822,37326,24357,v8923,21380,24441,32004,34220,35379,36493,38742,26611,34222,37971,24841,24840,27833,30290,35565,36664,21807,20305,20778,21191,21451,23461,24189,24736,24962,25558,26377,26586,28263,
28044,v8924,30001,31056,35029,35480,36938,v8925,37109,38596,34701,v8926,20104,20313,19982,35465,36671,38928,20653,24188,22934,23481,24248,25562,25594,25793,26332,26954,27096,27915,28342,29076,v8927,31407,v8928,32768,33865,33993,35201,35617],v23579=[36362,36965,38525,39178,24958,25233,27442,27779,28020,32716,32764,28096,32645,34746,35064,26469,33713,38972,38647,27931,32097,33853,37226,20081,21365,23888,27396,28651,34253,34349,35239,21033,21519,23653,26446,26792,29702,29827,30178,35023,35041,v8929,
38626,38520,24459,29575,v8930,33870,25504,30053,21129,27969,28316,29705,30041,30827,31890,38534,v8931,v8932,20406,24942,26053,34396,20102,20142,20698,20001,20940,23534,26009,26753,28092,29471,30274,30637,31260,31975,33391,35538,36988,37327,38517,38936,v8933,32209,20523,21400,26519,28107,29136,29747,33256,36650,38563,40023,40607,29792,22593,28057,32047,39006,20196,20278,20363,20919,21169,23994,24604,29618,31036,33491,37428,38583,38646,38666,40599,40802,26278,27508,21015,21155,28872,35010,24265,24651,
24976,28451,29001,31806,32244,32879,34030,36899,37676,21570,39791,27347,28809,36034,36335,38706,21172,23105,24266,24324,26391,27004,27028,28010,28431,29282,29436,31725,v8934,32894,34635,37070,20845,40595,31108,32907,37682,35542,20525,21644,35441,27498,36036,33031,24785,26528,40434,20121,20120,39952,35435,34241,34152,26880,28286,30871,33109,24332,19984,19989,20010,20017,v8935,20028,v8936,20034,20054,20056,20098,v8937,35947,20106,33298,24333,20110,v8938,v8939,20130,20144,20147,20150,20174,20173,20164,
20166,20162,20183,20190,20205,20191,20215,20233,20314,20272,20315,20317,20311,20295,20342,20360,20367,20376,20347,20329,20336,20369,20335,20358,20374,20760,20436,20447,20430,20440,20443,20433,20442,20432,v8940,20506,20520,20500,20522,20517,20485,20252,20470,20513,20521,20524,20478,20463,20497,20486,20547,20551,26371,20565,20560,20552,20570,20566,20588,20600,20608,20634,20613,20660,20658,v8941,20659,20674,20694,20702,20709,20717,20707,20718,20729,20725,20745,v8942,20758,20757,20756,20762,20769,20794,
20791,20796,20795,v8943,v8944,20818,20812,20820,20834,31480,v8945,20846,20864,v8946,22232,20876,20873,20879,20881,20883,20885,v8947,20900,20902,20898,v8948,v8949,20915,v8950,20912,20917,20925,20933,20937,20955,v8951,34389,20969,20973,20976,v8952,20990,20996,21003,21012,21006,21031,21034,21038,21043,21049,21071,21060,v8953,21086,21076,21098,21108,21097,21107,21119,21117,21133,21140,21138,21105,21128,21137,36776,36775,v8954,21180,21173,21185,21197,21207,21214,21219,21222,39149,21216,21235,21237,21240,
v8955,21254,21256,30008,21261,21264,21263,v8956,v8957,21283,21295,21297,21299,v8958,21312,21318,21317,19991,21321,21325,20950,21342,v8959,21358,22808,21371,21367,v8960,21398,21408,21414,21413,21422,21424,v8961,21443,31762,38617,21471,26364,29166,21486,21480,21485,21498,21505,21565,21568,v8962,21564,21550,21558,21545,21533,21582,21647,21621,21646,21599,21617,21623,21616,21650,21627,21632,21622,21636,21648,21638,21703,21666,21688,21669,21676,21700,21704,21672,21675,21698,21668,21694,21692,21720,v8963,
21775,21780,21757,21742,21741,21754,21730,21817,21824,21859,21836,21806,21852,21829,v8964,21816,21811,21853,21913,21888,21679,21898,21919,21883,21886,21912,21918,21934,21884,21891,21929,21895,21928,21978,21957,21983,21956,21980],v23581=[21988,21972,22036,22007,22038,22014,22013,22043,22009,22094,22096,29151,22068,22070,22066,22072,22123,22116,22063,22124,22122,22150,22144,22154,22176,22164,22159,22181,22190,22198,22196,22210,22204,22209,22211,22208,22216,22222,22225,22227,v8965,22254,22265,22272,
22271,22276,22281,22280,22283,22285,22291,22296,22294,21959,22300,22310,v8966,22350,22331,22336,22351,22377,22464,22408,22369,22399,22409,22419,22432,22451,22436,22442,22448,22467,22470,22484,v8967,22538,22486,22499,22539,22553,22557,22642,22561,22626,22603,22640,27584,22610,22589,22649,22661,22713,22687,22699,22714,22750,22715,22712,22702,22725,22739,22737,22743,22745,22744,22757,22748,22756,22751,22767,22778,22777,v8968,v8969,v8970,22800,22811,26790,22821,v8971,22834,22840,22846,31442,22869,22864,
22862,22874,22872,22882,22880,22887,22892,22889,22904,22913,22941,20318,20395,22947,22962,22982,23016,23004,22925,v8972,23077,23071,23057,23068,23049,23066,23104,23148,23113,v8973,23138,23146,23194,23228,23230,23243,23234,23229,23267,23255,23270,23273,23254,v8974,23308,23307,23318,23346,23248,23338,23350,23358,23363,23365,23360,23377,23381,v8975,23397,23401,23408,23411,23413,23416,25992,23418,v8976,23427,23462,23480,23491,23495,23497,23508,23504,23524,23526,23522,23518,23525,23531,23536,23542,23539,
23557,v8977,23565,23571,23584,v8978,23592,v8979,23609,23617,23622,23630,23635,23632,23631,23409,23660,v8980,20066,23670,23673,23692,23697,23700,22939,23723,23739,23734,23740,23735,23749,23742,23751,23769,23785,23805,23802,23789,23948,23786,23819,23829,23831,23900,23839,23835,23825,23828,23842,23834,23833,23832,23884,23890,23886,23883,23916,23923,23926,23943,23940,23938,23970,23965,23980,23982,23997,23952,23991,23996,24009,24013,24019,24018,24022,v8981,24043,24050,24053,24075,24090,24089,24081,24091,
v8982,24132,24131,24128,24142,24151,24148,24159,24162,24164,24135,v8983,v8984,40636,v8985,24224,v8986,24264,24272,24271,24278,24291,24285,v8987,24290,24289,v8988,24300,24305,24307,24304,v8989,24312,v8990,24323,24329,24413,24412,v8991,24337,24342,24361,24365,24376,24385,24392,24396,24398,24367,v8992,v8993,24409,v8994,24429,v8995,24439,24451,24450,24447,24458,24456,24465,24455,24478,24473,24472,24480,24488,24493,24508,24534,24571,24548,24568,24561,24541,24755,24575,24609,24672,24601,24592,24617,24590,
24625,24603,24597,24619,24614,24591,24634,24666,24641,24682,24695,24671,24650,24646,24653,24675,24643,24676,24642,24684,24683,24665,24705,24717,24807,24707,24730,24708,24731,v8996,24722,24743,24715,24801,24760,24800,24787,24756,24560,24765,24774,24757,24792,24909,24853,24838,v8997,24832,24820,24826,24835,24865,24827,24817,v8998,24903,24894,24872,24871,24906,24895,24892,24876,24884,24893,24898,24900,24947,24951,v8999,24939,24948,24943,24933,24945,24927,24925,24915,24949,24985,24982,24967,25004,24980,
24986,24970,24977,25003,25006,25036,25034,25033,25079,25032,25027,25030,25018,25035,32633,25037,25062,25059,25078,25082,25076,25087,25085,25084,25086,25088,v9000,25097,25101,25100,25108,25115,25118,25121,25130,25134],v23583=[25136,v9001,25153,25166,25182,25187,25179,25184,25192,25212,25218,25225,25214,v9002,25238,25300,25219,25236,25303,25297,25275,25295,25343,25286,25812,25288,25308,25292,25290,25282,25287,25243,25289,25356,25326,25329,25383,25346,25352,25327,25333,25424,25406,25421,25628,25423,
25494,25486,25472,25515,25462,25507,25487,25481,25503,25525,25451,25449,25534,25577,25536,25542,25571,25545,25554,25590,25540,25622,25652,25606,25619,25638,25654,25885,25623,25640,25615,25703,25711,25718,25678,25898,25749,25747,25765,25769,25736,25788,25818,25810,25797,25799,25787,25816,25794,25841,25831,33289,v9003,25260,25827,25839,25900,25846,25844,25842,25850,25856,25853,25880,25884,25861,25892,25891,25899,v9004,v9005,25911,25910,25912,30027,25928,25942,25941,25933,25944,25950,25949,25970,25976,
v9006,35722,26011,26015,26027,26039,26051,26054,26049,26052,26060,26066,26075,26073,v9007,v9008,26097,26482,26122,26115,26107,26483,v9009,26164,26140,26191,26180,26185,26177,26206,26205,26212,v9010,26207,26210,26224,26243,26248,26254,26249,26244,26264,26269,26305,26297,26313,26302,26300,26308,26296,26326,26330,26336,26175,26342,26345,v9011,26357,26359,26383,26390,26398,v9012,38712,26414,26431,26422,26433,26424,26423,26438,26462,26464,26457,v9013,26505,26480,26537,26492,26474,26508,26507,26534,26529,
26501,26551,26607,26548,26604,26547,26601,26552,26596,26590,26589,26594,26606,26553,26574,26566,26599,27292,26654,26694,26665,26688,26701,26674,26702,26803,26667,26713,26723,26743,26751,26783,26767,26797,26772,26781,26779,26755,27310,26809,26740,26805,26784,26810,26895,26765,26750,26881,26826,26888,26840,26914,26918,26849,26892,26829,26836,26855,26837,26934,26898,26884,26839,26851,26917,26873,26848,26863,26920,26922,26906,26915,26913,26822,27001,26999,26972,27E3,26987,26964,27006,26990,26937,26996,
26941,26969,26928,26977,26974,26973,27009,26986,27058,27054,27088,27071,27073,27091,27070,27086,23528,27082,27101,27067,27075,27047,27182,27025,27040,27036,27029,27060,27102,27112,27138,27163,27135,27402,27129,27122,27111,27141,27057,27166,27117,27156,27115,27146,27154,27329,27171,27155,27204,27148,27250,27190,27256,27207,27234,27225,27238,27208,27192,27170,27280,27277,27296,27268,v9014,27287,34327,27323,27331,27330,27320,27315,27308,27358,27345,27359,27306,27354,27370,27387,27397,34326,27386,27410,
27414,39729,27423,27448,27447,30428,27449,39150,27463,27459,27465,27472,27481,27476,27483,27487,27489,27512,v9015,v9016,27524,27523,27533,27544,27541,27550,27556,v9017,27567,27570,27569,v9018,27575,27580,27590,v9019,27603,27615,27628,27627,27635,27631,40638,27656,27667,v9020,27675,27684,27683,27742,27733,27746,27754,27778,27789,27802,27777,27803,27774,27752,27763,27794,27792,27844,27889,27859,27837,27863,27845,27869,27822,27825,27838,27834,27867,27887,27865,27882,27935,34893,27958,27947,27965,27960,
27929,27957,27955,27922,27916,28003,28051,28004,27994,28025,27993,28046,28053,28644,28037,28153,28181,28170,28085,28103,28134,28088,28102,28140,28126,28108,28136,28114,28101,28154,28121,28132,28117,28138],v23585=[28142,28205,28270,28206,28185,28274,28255,28222,28195,28267,28203,28278,28237,28191,28227,28218,28238,28196,28415,28189,28216,28290,28330,28312,28361,28343,28371,28349,28335,28356,28338,v9021,28303,28325,28354,28319,28481,28433,28748,28396,28408,28414,28479,28402,28465,28399,28466,28364,
28478,28435,28407,28550,28538,28536,28545,28544,28527,28507,28659,28525,28546,28540,28504,28558,28561,28610,28518,28595,28579,28577,28580,28601,28614,28586,28639,28629,28652,28628,28632,28657,28654,28635,28681,28683,28666,28689,28673,28687,28670,28699,28698,28532,28701,28696,28703,28720,28734,28722,28753,28771,28825,28818,28847,28913,28844,28856,28851,28846,28895,28875,28893,28889,28937,28925,28956,28953,29029,29013,29064,29030,29026,29004,29014,29036,29071,29179,29060,29077,29096,29100,29143,29113,
29118,29138,29129,29140,29134,29152,29164,29159,29173,29180,29177,29183,29197,29200,29211,29224,29229,29228,29232,29234,v9022,29244,v9023,29248,29254,29259,29272,29300,29310,29314,29313,29319,29330,29334,29346,29351,29369,29362,29379,29382,29380,29390,29394,29410,v9024,29433,29431,20495,29463,29450,29468,29462,29469,29492,29487,29481,29477,29502,v9025,40664,29527,29546,29544,29552,29560,29557,29563,29562,29640,29619,29646,29627,29632,29669,29678,29662,29858,29701,29807,29733,29688,29746,29754,29781,
29759,29791,29785,29761,29788,29801,29808,29795,29802,29814,29822,29835,29854,29863,29898,29903,29908,29681,29920,29923,29927,29929,29934,29938,v9026,29944,29943,29956,29955,29957,29964,29966,29965,29973,29971,29982,29990,29996,30012,30020,30029,30026,30025,30043,30022,30042,30057,30052,30055,30059,30061,30072,30070,v9027,30068,30090,30089,30082,30100,30106,30109,30117,30115,30146,30131,30147,30133,30141,30136,30140,30129,30157,30154,30162,30169,30179,30174,v9028,30204,30209,30192,30202,v9029,30219,
30221,30217,30239,30247,v9030,30244,30260,30256,30267,v9031,30278,30300,30296,v9032,v9033,30311,30316,30320,30322,v9034,30328,30332,30336,30339,30344,30347,30350,30358,30355,v9035,30384,30388,v9036,30402,30413,30422,30418,30430,30433,30437,30439,30442,34351,30459,30472,30471,30468,30505,30500,30494,v9037,30491,v9038,30535,30554,30568,30571,30555,30565,30591,30590,30585,30606,30603,30609,30624,30622,30640,30646,30649,30655,v9039,30651,30663,30669,30679,30682,30684,30691,30702,30716,30732,30738,31014,
30752,31018,30789,30862,30836,30854,30844,30874,30860,30883,30901,30890,30895,30929,30918,30923,30932,30910,30908,30917,30922,30956,30951,30938,30973,30964,30983,30994,30993,31001,31020,31019,31040,31072,31063,31071,31066,31061,31059,31098,31103,31114,31133,31143,40779,31146,31150,31155,v9040,31177,31189,31207,31212,31201,31203,31240,31245,v9041,31264,31263,31104,31281,31291,31294,31287,31299,31319,31305,v9042,31337,40861,31344,31353,31357,31368,31383,31381,31384,31382,31401,31432,31408,31414,31429,
31428,31423,36995,31431,31434,31437,31439,31445,31443,v9043,31453,v9044,31462,31469,31472,31490,31503,31498,31494,31539,v9045,31518,31541,31528,31542,31568,31610,31492,31565,31499,31564,31557],v23587=[31605,31589,31604,31591,v9046,31596,31598,31645,31640,31647,31629,31644,31642,31627,31634,31631,31581,31641,31691,31681,31692,31695,31668,31686,31709,31721,31761,31764,31718,31717,31840,31744,31751,31763,31731,31735,31767,31757,31734,31779,31783,31786,31775,31799,31787,31805,31820,31811,31828,31823,
31808,31824,31832,31839,31844,31830,31845,31852,31861,31875,31888,31908,31917,31906,31915,31905,31912,31923,31922,31921,31918,31929,31933,31936,31941,31938,31960,31954,31964,31970,39739,31983,31986,31988,31990,31994,32006,32002,32028,32021,32010,32069,32075,32046,32050,32063,32053,32070,32115,32086,32078,32114,32104,32110,32079,32099,32147,32137,32091,32143,32125,32155,32186,32174,32163,32181,32199,32189,32171,32317,32162,32175,32220,32184,32159,32176,32216,32221,32228,32222,32251,32242,32225,32261,
32266,32291,32289,32274,32305,32287,32265,32267,32290,32326,32358,32315,32309,32313,32323,32311,32306,32314,32359,32349,32342,32350,v9047,32377,32362,32361,32380,32379,32387,32213,32381,36782,32383,v9048,32396,32402,32400,v9049,32406,32398,v9050,32568,32570,32581,v9051,32592,v9052,32597,32596,32600,v9053,v9054,32615,32632,32642,32646,32643,32648,32647,32652,32660,32670,32669,32666,32675,32687,32690,32697,32686,32694,32696,35697,v9055,32714,32725,32724,32737,32742,32745,32755,32761,39132,32774,32772,
32779,v9056,v9057,32796,32801,32808,32831,32827,32842,32838,32850,32856,32858,32863,32866,32872,32883,32882,32880,32886,32889,32893,v9058,32900,32902,32901,32923,32915,32922,32941,20880,32940,32987,32997,32985,32989,32964,32986,32982,33033,33007,33009,33051,33065,33059,33071,33099,38539,33094,33086,33107,33105,33020,33137,33134,v9059,33140,33155,33160,33162,33152,33154,33184,33173,33188,33187,33119,33171,33193,33200,33205,33214,33208,33213,33216,33218,33210,33225,33229,33233,33241,33240,33224,33242,
v9060,33255,v9061,33278,v9062,33285,33287,33290,33293,33296,33302,33321,33323,33336,33331,33344,33369,33368,33373,33370,33375,33380,33378,33384,v9063,33326,33393,33399,v9064,33406,33421,33426,33451,33439,33467,33452,33505,33507,33503,33490,33524,33523,33530,33683,33539,33531,33529,33502,33542,33500,33545,33497,33589,33588,33558,33586,33585,33600,33593,33616,33605,33583,33579,v9065,33669,33690,33706,33695,33698,33686,33571,33678,33671,33674,33660,33717,33651,33653,33696,33673,33704,33780,33811,33771,
33742,33789,33795,33752,33803,33729,33783,33799,33760,33778,33805,33826,33824,33725,33848,34054,33787,33901,33834,33852,34138,33924,33911,33899,33965,33902,33922,33897,33862,33836,33903,33913,33845,33994,33890,33977,33983,33951,34009,33997,33979,34010,34E3,33985,33990,34006,33953,34081,34047,34036,v9066,34092,34079,34069,34068,34044,34112,34147,34136,34120,34113,34306,34123,34133,34176,34212,34184,34193,34186,34216,34157,34196,34203,34282,34183,34204,34167,34174,34192,34249,34234,34255,34233,34256,
34261,34269,34277,34268,34297,34314,34323,34315,34302,34298,34310,34338,34330,34352,34367,v9067,20053,34388,34399,34407,34417,34451,34467,v9068,v9069,34486,34479,34500,34502,34480],v23589=[34505,34851,34475,34516,34526,34537,34540,34527,34523,34543,34578,34566,34568,34560,34563,34555,34577,34569,34573,34553,34570,34612,34623,34615,34619,34597,34601,34586,34656,34655,34680,34636,34638,34676,34647,34664,34670,34649,34643,34659,34666,34821,34722,34719,34690,34735,34763,34749,34752,34768,38614,34731,
34756,34739,34759,34758,34747,34799,34802,34784,34831,34829,34814,v9070,34830,34770,34833,34838,34837,34850,34849,34865,34870,34873,34855,34875,34884,34882,34898,34905,34910,34914,34923,34945,34942,34974,34933,34941,34997,34930,34946,34967,34962,34990,34969,34978,34957,34980,34992,35007,34993,v9071,35028,v9072,35037,35065,35074,35068,35060,35048,35058,35076,35084,35082,35091,35139,35102,35109,v9073,35137,35140,35131,35126,35128,35148,35101,35168,35166,35174,35172,35181,35178,35183,35188,35191,v9074,
35203,35208,35210,35219,35224,35233,35241,35238,35244,35247,35250,35258,35261,v9075,35290,v9076,35303,35316,35320,35331,35350,35344,35340,35355,35357,35365,35382,35393,35419,35410,35398,35400,35452,35437,35436,35426,35461,35458,35460,35496,35489,35473,v9077,35482,35491,35524,35533,35522,35546,35563,35571,35559,35556,35569,35604,35552,35554,35575,35550,35547,35596,35591,35610,35553,35606,35600,35607,35616,35635,38827,35622,35627,35646,35624,35649,35660,35663,35662,35657,35670,35675,35674,35691,35679,
35692,35695,35700,35709,35712,35724,35726,v9078,35734,v9079,35898,35905,35903,35912,35916,35918,35920,v9080,35938,35948,v9081,35962,35970,35977,35973,35978,v9082,35988,35964,35992,25117,36013,36010,36029,v9083,36014,36022,36040,36033,36068,36067,36058,36093,v9084,v9085,36106,36103,36111,36109,36112,40782,36115,36045,36116,36118,36199,36205,36209,36211,36225,36249,36290,36286,36282,36303,36314,36310,36300,36315,36299,v9086,36319,36323,36348,v9087,36351,v9088,36368,36383,36418,36405,36400,36404,36426,
36423,36425,36428,36432,36424,36441,36452,36448,36394,36451,36437,36470,36466,36476,36481,36487,36485,36484,36491,36490,36499,36497,36500,36505,36522,36513,36524,36528,36550,36529,36542,36549,36552,36555,36571,36579,36604,36603,36587,36606,36618,36613,36629,36626,36633,36627,36636,36639,36635,36620,36646,36659,36667,36665,36677,36674,36670,36684,36681,36678,36686,36695,36700,v9089,36764,36767,36771,36781,36783,36791,36826,36837,36834,36842,36847,36999,36852,36869,v9090,36881,36885,36897,36877,36894,
36886,36875,36903,36918,36917,36921,36856,v9091,36878,36937,36926,36950,36952,36958,36968,36975,36982,38568,36978,36994,36989,36993,36992,37002,37001,37007,37032,37039,37041,37045,37090,37092,25160,37083,37122,37138,37145,37170,37168,37194,37206,37208,37219,37221,37225,37235,37234,37259,37257,37250,37282,37291,37295,37290,37301,37300,37306,v9092,37321,37323,37328,37334,37343,37345,37339,37372,v9093,37406,37375,37396,37420,37397,37393,37470,37463,37445,37449,37476,37448,37525,37439,37451,37456,37532,
37526,37523,37531,37466,37583,37561,37559,37609,37647,37626,37700,37678,37657,37666,37658,37667,37690,37685,37691,37724,37728,37756,37742,37718,37808,v9094,37780,37817],v23591=[v9095,37864,37861,37848,37827,37853,37840,37832,37860,37914,37908,37907,37891,37895,37904,37942,37931,37941,37921,37946,37953,37970,37956,37979,37984,37986,37982,37994,37417,38E3,38005,38007,38013,37978,38012,38014,38017,38015,38274,38279,38282,38292,38294,v9096,38304,38312,38311,38317,38332,38331,38329,38334,38346,28662,38339,
38349,38348,38357,38356,38358,38364,38369,38373,38370,38433,38440,v9097,38466,38476,38479,38475,38519,38492,38494,38493,38495,38502,38514,38508,38541,38552,38549,38551,38570,38567,v9098,38576,38580,v9099,38584,v9100,38606,38603,38601,38605,35149,38620,38669,38613,38649,38660,38662,38664,38675,38670,38673,38671,38678,38681,38692,38698,38704,38713,v9101,38724,38726,38728,38722,38729,38748,38752,38756,38758,38760,21202,38763,38769,38777,38789,38780,38785,38778,38790,38795,v9102,38812,38824,38822,38819,
v9103,38851,38854,38856,v9104,38876,v9105,40783,38898,31455,38902,38901,38927,38924,38968,38948,38945,38967,38973,38982,38991,38987,39019,v9106,39028,39027,39082,39087,39089,39094,39108,39107,39110,39145,39147,39171,39177,39186,39188,39192,39201,v9107,39204,39200,39212,39214,v9108,39234,39241,39237,39248,39243,v9109,39244,39253,v9110,39333,v9111,39356,39391,39387,39389,39384,39377,v9112,v9113,39419,39416,39425,39439,39429,39394,39449,39467,39479,39493,39490,39488,39491,39486,39509,39501,39515,39511,
39519,39522,39525,39524,39529,39531,39530,39597,39600,39612,39616,39631,39633,v9114,39646,v9115,v9116,39654,39663,39659,39662,39668,39665,39671,39675,39686,39704,39706,39711,v9117,v9118,v9119,39726,v9120,v9121,39748,39747,39759,v9122,39761,39768,39796,39827,39811,39825,v9123,v9124,39848,39860,39872,39882,39865,39878,39887,v9125,39907,39906,39908,39892,39905,39994,39922,39921,39920,39957,39956,39945,39955,39948,39942,39944,39954,39946,39940,39982,39963,39973,39972,39969,39984,40007,39986,40006,39998,
40026,40032,40039,40054,40056,40167,40172,40176,40201,40200,40171,40195,40198,40234,40230,40367,40227,40223,40260,40213,40210,40257,40255,40254,40262,40264,v9126,40292,40273,40272,40281,40306,40329,40327,40363,40303,40314,40346,40356,40361,40370,40388,40385,40379,40376,40378,40390,40399,40386,40409,40403,40440,40422,40429,40431,40445,v9127,40478,v9128,40569,40573,40577,40584,v9129,40594,40597,40593,40605,v9130,40617,40632,40618,40621,38753,40652,v9131,40660,40668,40670,40669,40672,40677,40680,40687,
40692,v9132,v9133,v9134,v9135,v9136,30391,40725,40737,40748,40766,v9137,v9138,40788,40803,v9139,v9140,40812,40810,40823,40818,40822,40853,v9141,v9142,22575,27079,36953,29796,0,v9143,v9144,v9145,13129,13076,0,13133,0,13095,0,13110,13137,0,13069,13094,0,13099,13130,0,v9146,v9147,13252,13217,12317,12319,8470,13261,0,v9148,v9149,12857,13182,13181,13180,8750,8721,v9150,8735,8895,0,0,21854,v9151,167133,0,0,28976,0,40407,v9152,64054,0,0,22169,15694,v9153,20448,0,0,36544,0,194797,v9154,153716,32363,33606,
167670,v9155,40572,0,0,26171,0,40628,v9156,26629,v9157,23650,0],v23593=[194780,0,32353,0,0,64070,v9158,34083,37292,v9159,34796,v9160,25620,0,0,39506,v9161,64074,0,194692,v9162,31774,v9163,64016,25681,0,0,63980,22625,39002,0,194679,v9164,31153,0,28678,v9165,22218,v9166,21085,0,28497,37297,v9167,64106,v9168,38960,0,40629,v9169,33802,63939,v9170,63897,0,34847,194575,0,194771,194584,v9171,137754,23643,v9172,25890,0,0,26618,0,26766,0,148432,194848,v9173,34110,v9174,30562,v9175,65075,0,v9176,v9177,65072,
v9178,v9179,0,0,v9180,v9181,v9182,v9183,v9184,v9185,v9186,0,0,22099,v9187,65508,65287,65282,0,9665,9655,8681,8679,8678,8680,9634,9831,9825,9828,9826,13216,13218,v9188,13207,8467,13208,13235,13234,13233,13232,v9189,13259,13200,13268,13206,13090,13078,13080,13077,13059,13091,13143,13122,13113,13115,13056,13105,13127,13086,13098,0,13183,8481,9742,12342,12320,v9190,v9191,v9192,12881,v9193,v9194,v9195,12867,12861,12863,12852,12856,12851,12860,12866,12862,12854,12853,12859,12864,12858,12976,12973,12969,
12975,12948,12970,12952,12971,12946,12945,12947,12972,12974,12950,v9196,v9197,0,v9198,0,13260,13061,0,0,13215,13219,13222,0,0,12958,v9199,13256,8749,0,12848,v9200,12855,12865,10145,v9201,9673,9824,9829,9827,9830,v9202,9758,v9203,9759,12953,9450,v9204,v9205,v9206,9615,9614,9613,9612,9611,9610,9609,v9207,v9208,9584,9583,9552,9566,9578,9569,v9209,9701,9700,0,0,v9210,v9211,20956,29081,v9212,v9213,v9214,v9215,8575,8458,8457,0,0,12292,8646,v9216,0,v9217,0,0,12957,v9218,13179,v9219,13107,13134,v9220,32394,
35100,37704,37512,34012,20425,28859,26161,26824,37625,26363,24389,v9221,20193,20220,20224,20227,20281,20310,20370,20362,20378,20372,20429,20544,20514,20479,20510,20550,20592,20546,20628,20724,20696,20810,20836,20893,20926,20972,21013,21148,21158,21184,21211,21248,0,21284,21362,21395,21426,21469,64014,21660,21642,21673,21759,21894,22361,22373,22444,22472,22471,64015,0,22686,22706,22795,22867,22875,22877,22883,22948,22970,23382,23488,29999,23512,0,23582,23718,23738,23797,23847,23891,0,23874,23917,v9222,
24016,24353,24372,24423,24503,24542,24669,24709,24714,24798,24789,24864,24818,24849,24887,24880,24984,25107,25254,25589,25696,25757,25806,25934,26112,26133,26121,26158,0,26148,26213,26199,26201,64018,26227,26265,26272,26290,26303,26362,26382,0,26470,26555,26706,26560,0,26692,26831,64019,26984,64020,27032,27106,27184,27243,27206,27251,27262,27362,27364,27606,27711,27740,27782,27759,27866,27908,28039,28015,28054,28076,28111,28152,28146,28156,28217,28252,28199,28220,28351,28552,28597,28661,28677,28679,
28712,28805,28843,28943,28932,29020,v9223,0,29121,29182,29361,29374,29476,64022,29559,29629,29641,29654,29667,29650,29703,29685,29734,29738,29737,29742,0,29833,29855,29953,30063,30338,30364,30366,30363,30374,64023,30534,21167,30753,30798,30820,30842,31024,v9224,31124,64027,31131,31441,31463,64028,31467,31646,64029,32072,0],v23595=[32183,32160,32214,32338,32583,32673,64030,33537,33634,33663,33735,33782,33864,33972,34131,34137,34155,64031,34224,v9225,34823,35061,35346,35383,35449,35495,35518,35551,
64034,35574,35667,35711,36080,36084,36114,36214,64035,36559,0,64037,36967,37086,64038,37141,37159,37338,37335,37342,v9226,v9227,37382,37392,37386,37434,37440,37436,37454,37465,37457,37433,37479,37543,v9228,37607,37591,37593,37584,64039,37589,37600,37587,37669,37665,37627,64040,37662,37631,37661,37634,37744,37719,37796,37830,37854,37880,37937,37957,37960,38290,0,64041,38557,38575,38707,38715,38723,38733,38735,v9229,0,38999,39013,v9230,39207,64044,39326,39502,39641,39644,39797,39794,39823,39857,39867,
39936,40304,40299,64045,40473,40657,v9231,8364,8486,0,0,64256,v9232,257,299,363,275,333,256,298,362,274,332,v9233,v9234,8304,v9235,v9236,461,282,0,7868,463,0,296,465,0,467,366,360,462,283,0,7869,464,0,297,466,0,468,367,361,593,8049,8048,509,0,596,0,0,601,0,0,602,0,0,603,8051,8050,0,331,629,652,0,0,658,643,720,v9237,v9238,v9239,v9240,v9241,v9242,v9243,v9244,v9245,v9246,0,v9247,12944,v9248,0,12959,v9249,v9250,12955,12954,12963,12962,12951,0,12956,12949,v9251,9676,v9252,10111,v9253,v9254,8414,v9255,
13274,v9256,8448,13250,0,0,8453,0,13169,0,0,13197,13211,v9257,v9258,v9259,v9260,13060,13062,0,13064,0,13063,13066,0,13065,0,13067,0,13068,v9261,0,13079,0,13081,0,v9262,v9263,13092,0,13093,0,0,v9264,0,13101,0,0,v9265,13106,0,0,v9266,13116,v9267,13111,0,13112,13114,13117,13121,v9268,v9269,13128,v9270,v9271,0,0,13138,13140,0,0,13139,v9272,v9273,8501,976,8714,8463,0,981,987,977,0,v9274,9836,v9275,12347,0,v9276,8252,8265,v9277,8723,0,8771,v9278,v9279,v9280,v9281,v9282,9115,v9283,9120,v9284,9121,v9285,
9126,v9286,v9287,v9288,9986,0,0,12349,0,12447,0,0,8709,8864,8854,8856,8853,8855,v9289,9664,9654,v9290,8656,8596,v9291,v9292,8652,8651,v9293,12336,8967,v9294,10048,10047,v9295,9643,0,9642,0,10010,v9296,9702,v9297,10070,v9298,v9299,v9300,64103,64098,32227,v9301,28331,64082,64061,64069,64062,27114,28212,64096,64071,64056,64066,64078,34395,64105,64052,64099,25581,25802,30799,64084,63856,64077,64097,64072,64076,v9302,64081,64067,64090,28041,29376,0,194885,64086,64080,64049,64059,24034,64063,64101,21373,
64055,64095,24501,64064,0,64083,0,64085,64104,64068,64089,26202,64053,64075,64100,64065,64048,0,64057,64051,27493,64058,27599,64050,25150,64079,63773,63964,63798,28122,63952,26310,27511,64087,37706,0,37636,v9303,133390,v9304,35999,11991,v9305,v9306,37555,38321,0,0,194812,v9307,194965,v9308,194794,0,26478,11974,0,194594,v9309,13314,0,0,26083,v9310,134071,v9311,171339,0,194611,24378,v9312,11945,0,20465,v9313],v23597=[63753,v9314,11964,0,0,194732,26435,v9315,133732,35329,25142,0,0,21555,23067,v9316,
25221,0,0,194819,v9317,21567,v9318,27506,v9319,29986,19256,0,0,24063,v9320,194827,29626,134047,v9321,194600,0,194849,v9322,194623,v9323,194675,v9324,23577,v9325,131083,23426,194642,v9326,11997,v9327,v9328,14221,0,v9329,0,194887,0,v9330,131490,v9331,13599,0,194738,0,0,v9332,v9333,31237,v9334,35498,0,32085,0,28568,v9335,25591,30246,v9336,v9337,v9338,146686,v9339,13351,0,0,33067,0,0,194842,v9340,11950,v9341,194714,v9342,194831,v9343,22305,135741,194586,0,64003,v9344,21534,15240,20839,v9345,63839,v9346,
20023,v9347,v9348,24421,23020,194658,0,24217,v9349,13416,v9350,21200,v9351,26625,0,195024,195039,v9352,153215,0,0,11959,v9353,36534,63775,v9354,63875,v9355,31867,63906,0,63898,0,v9356,157360,v9357,v9358,0,0,131210,194604,v9359,v9360,21589,0,22841,0,0,23414,194669,23572,14306,23782,0,20040,0,0,194742,v9361,158105,25371,0,0,26211,0,194779,0,0,27126,27014,v9362,27596,0,28183,0,0,27818,v9363,v9364,0,0,29935,30069,30188,30286,16305,30570,30633,v9365,31571,0,0,16996,v9366,194924,0,0,32328,v9367,11955,v9368,
33089,17491,0,v9369,v9370,v9371,0,20857,33626,v9372,17701,0,34292,131248,v9373,34429,0,13358,35014,v9374,18406,v9375,36808,v9376,166279,0,0,167447,0,0,38969,v9377,39432,v9378,39903,v9379,148206,v9380,21385,0,64017,194785,0,146622,132625,0,v9381,19999,20011,v9382,v9383,20036,v9384,20095,20109,20118,20153,20176,20192,20221,20223,20235,20245,20320,20283,20297,20308,20346,v9385,20375,20414,20431,20477,v9386,20496,20507,20519,20526,20567,20582,20586,20539,20623,20630,20636,20684,20710,20713,20719,20744,
20747,20752,20763,20766,20831,20897,20924,0,20974,20980,20993,v9387,21011,21065,21089,21094,21139,21192,21232,v9388,21310,21324,21323,21345,21356,21419,21466,21478,21493,21543,21581,21606,21611,21620,21645,21654,21665,21677,21689,21695,21702,21709,21774,21803,21813,21834,21856,0,21896,21902,22024,v9389,22071,22079,22089,22091,22095,22118,22121,22127,v9390,22165,22170,v9391,22193,22217,22237,22244,22282,22293,22307,22319,v9392,22348,22384,22412,22428,22456,22502,22509,v9393,22527,22537,22560,22578,
22652,22656,22697,22734,22736,22740,22746,22761,22796,22820,22831,22881,22893,22986,22994,23005,v9394,23044,23052,23075,23111,23125,23139,23149,23166,23198,23207,23212,23219,23264,23296,23321,23333,23341,23361,23420,v9395,23434,v9396,23595,23600,23651,23657,23676,23755,23762,23796,23844,23846,23875,23878,23882,23954,23956,23961,23968,24024,24032,24056,24064,24082,v9397,24088,24110,24152,v9398,24232,24234,v9399,0,24274,24327,24334,v9400,24354,24360,24374,24379,24384,v9401,24408,24420,24457,24476,24487,
24484,24495,24504,v9402,24521,24545,24553,24557,24572,24599,24602,24627,24673,24703,24734,24740,24752,24779,24795,24824,v9403,24860,24956,24973,24991,25E3,25026,25055,25109,25129],v23599=[25155,25158,v9404,25169,25174,25284,25340,25354,25357,25368,25401,v9405,25445,25460,25469,25476,25479,25488,25502,25553,25564,25609,25616,25634,25684,25691,25709,25723,v9406,25829,25847,25851,25860,25878,25881,25927,25959,25985,25989,26050,26096,26098,26156,26188,v9407,26209,26219,0,26276,26312,26348,26373,26387,
26419,26440,26444,26486,26491,26544,26546,26617,26583,26585,26608,26668,v9408,26715,26738,26741,26746,26756,26789,26802,26832,26838,26856,26861,v9409,26876,26897,26899,26933,26939,26967,26979,26994,v9410,27046,27053,27063,v9411,27137,27151,27157,27176,27188,27198,27205,v9412,27222,27227,27267,27273,27281,v9413,27356,27367,27372,27422,27428,27445,27462,27478,27488,27522,27582,27617,27633,27664,27699,v9414,11938,27737,27766,27771,27781,27797,27804,27856,27860,27862,27872,v9415,27886,27914,27918,27921,
27950,27991,27998,28005,28034,28095,28100,28106,28118,28137,28194,28241,28359,28362,28366,28413,28442,28458,28463,28467,28506,28510,28514,28541,28555,28557,28562,28564,28570,v9416,28598,28634,28638,0,28729,28732,0,28756,v9417,28772,v9418,28798,28801,28821,28855,v9419,28888,28892,28935,28960,28977,29002,29010,29024,29049,29074,0,29131,29139,29142,29184,29213,29227,29240,29249,29267,v9420,29276,29325,v9421,29364,29383,29435,v9422,29480,29489,29507,29548,29564,29571,v9423,29589,v9424,29606,29611,29621,
29623,29628,29647,29657,29673,29684,29693,29700,29706,v9425,29732,29736,29740,v9426,29753,29764,29767,29771,29773,29777,29783,29798,29803,29809,29824,v9427,29840,29848,29852,29856,29859,29864,29867,29877,29887,29896,29914,29918,30030,30073,30081,30096,v9428,30099,30132,30180,30201,30208,30218,v9429,30233,30238,30253,30261,30275,30283,30309,30317,30319,30321,30324,v9430,30405,30412,30444,30460,30516,30518,30556,v9431,30578,30589,30613,30634,30694,30704,30708,30726,30754,v9432,30768,30773,30824,30878,
30920,30924,30926,30948,v9433,30962,30967,30971,31025,0,v9434,31037,31045,v9435,31115,31126,31128,v9436,31163,31178,31194,31235,31241,31249,31262,31277,31289,31301,31308,31325,0,31341,31352,31392,31395,31411,v9437,31430,31495,31508,31527,31537,31559,31566,31584,31593,31597,31602,31633,31663,31703,31705,31755,31759,31776,31782,31793,31798,31825,31833,31847,31854,31856,31932,31935,v9438,31959,31961,31965,31979,v9439,32019,32029,32035,32065,32083,32089,32093,32122,32134,v9440,32204,32235,32241,32249,
32264,32273,32277,32288,32327,32354,32366,32371,32397,32401,32408,32580,32591,v9441,v9442,32609,32657,32703,32718,32735,32741,32748,v9443,32762,32782,32785,32788,32804,32806,32826,32828,32864,32881,32885,32926,32934,32939,v9444,33046,33048,33082,33098,33100,33153,33156,33204,33231,33273,33283,33313,33330,33332,33350,33355,33359,33422,33454,33463,33470,33478,33534,33603,33617,33621,33670,33677,33682,33688,33705,v9445,33770,33807,33809,33866,33910,33960,33967,33984,33986,34032,34045,34060,34100,34142,
34191,34231,34254,34221,34322,34345,34386,34403,34412,34415,34426,34445,34449,34456,v9446,34554,34557,34571,34579,34585,34590,34600,34622,34673],v23601=[34696,34713,v9447,34741,34774,34795,34797,34817,0,34822,34827,34836,34844,34902,34911,v9448,34968,34986,v9449,35018,35026,35035,v9450,35078,v9451,35111,35120,35134,35195,35284,35286,35301,35313,35335,35343,35349,35362,35406,35455,35572,35615,35639,v9452,35668,35740,35742,35911,35924,35955,36004,36057,36065,36088,36094,36123,36201,36204,36228,36237,
36245,36262,36294,36302,36324,36332,36384,36427,36460,36464,36474,36498,36526,36531,36561,36564,36601,36631,36662,36774,v9453,v9454,0,36832,36836,36854,36866,36908,36932,37E3,37013,37017,37019,37026,37044,37079,37085,37108,37143,37148,37169,37178,37181,37192,37211,37217,37220,37262,37278,37288,v9455,37298,37308,37360,37367,37371,37383,37416,37427,37432,37443,37447,37455,37472,37570,v9456,37599,37645,37653,37663,37671,37703,37714,0,37738,37741,37787,37818,37801,37825,37834,37858,37882,37885,37903,
37940,37951,37973,37995,38002,v9457,38310,38313,0,38324,38333,38362,v9458,38465,38488,38532,38564,38569,38610,195060,38622,38633,38641,38658,38665,38746,38755,38766,38771,38810,38818,v9459,38873,38878,38900,38922,38926,38942,38947,38955,38974,v9460,39001,39020,39096,39098,39103,39112,39141,v9461,39232,39245,39260,39263,39345,v9462,39369,39426,39446,39460,39463,v9463,39478,39480,39498,39510,v9464,39673,39683,39712,v9465,39795,39801,39847,39873,39879,39895,39911,39915,39927,39930,39933,39947,39975,
39978,39990,40001,40019,40035,40048,40055,40194,40258,40263,40291,40297,40316,40318,40333,40369,40387,40391,40406,40415,40427,40436,40469,40477,40612,40616,40620,40679,40686,40720,40722,40727,40729,40751,40759,40761,40769,40773,40791,40808,40817,40821,40848,40852,40866,0,13317,194564,22048,24267,11925,0,144954,0,28665,28390,29107,v9466,v9467,v9468,0,23986,0,20435,20697,20720,20931,22134,27220,27905,28112,28226,28377,29668,29729,30060,30801,34805,144382,29608,15091,13531,17420,16010,0,0,19432,0,16090,
15138,0,17786,16531,0,18021,16643,17043,18094,13448,140809,v9469,63610,63615,v9470,v9471,v9472,8713,0,v9473,v9474,v9475,v9476,8802,0,8773,8776,v9477,v9478,8487,v9479,v9480,8533,8984,v9481,v9482,470,472,474,476,260,728,317,346,350,356,377,379,261,731,318,347,711,351,357,378,733,380,340,258,313,262,268,280,270,323,327,336,344,368,354,341,259,314,263,269,281,271,273,324,328,337,345,369,355,729,264,284,292,308,348,364,265,285,293,309,349,365,625,651,638,620,622,633,648,598,627,637,642,656,635,621,607,
626,669,654,609,624,641,295,661,660,614,664,450,595,599,644,608,403,616,649,600,604,606,592,623,650,612,594,653,613,674,673,597,657,634,615,865,712,716,721,8255,783,v9483,0,0,805,812,825,796,v9484,829,809,815,734,804,816,828,820,v9485,v9486,810,v9487,794,v9488,v9489,618,628,630,632,640,655],v23603=[665,668,671,688,690,695,704,v9490,v9491,8862,v9492,12348,12543,0,v9493,9838,9835,v9494,10687,0,12448,0,v9495,v9496,962,v9497,v9498,9649,v9499,0,v9500,v9501,0,0,10003,0,9251,9166,v9502,v9503,0,8273,8258,
v9504,v9505,v9506,v9507,v9508,8413,v9509,20296,20319,20330,20332,20494,20504,20545,20722,20688,20742,20739,20789,20821,20823,13493,20938,20962,21079,21196,21206,21243,21276,21347,21405,21522,21631,21640,21840,21889,21933,21966,22075,22174,22185,22195,22391,22396,135963,22479,22500,22628,22665,136302,22738,22752,34369,22923,22930,22979,23059,23143,23159,23172,23236,137405,23421,23443,23570,64060,136884,23674,23695,23711,23715,23722,23760,138804,23821,23879,23937,23972,23975,24011,24158,24313,24320,
24322,24355,24381,24404,24445,24589,24596,24600,24629,24647,24733,24788,24797,24875,25020,25017,25122,25178,25199,25302,25468,25573,25721,25796,25808,25897,26013,26170,26146,26155,26160,26163,26184,143812,v9510,26253,26299,26331,26344,26439,26497,26515,26520,26523,26620,26653,26787,26890,26953,144836,26946,26980,27045,27087,15286,15299,27113,27125,145215,27195,145251,27284,27301,15375,27419,27436,27495,27561,27565,27607,27647,27653,27764,27800,27899,27846,27953,27961,27967,27992,28052,28074,28123,
28125,28228,28254,28337,28353,28432,28505,28513,28542,28556,28576,28604,28615,28618,28656,28750,28789,28836,28900,28971,28958,28974,29009,29032,29061,29063,29114,29124,29205,15935,29339,149489,29479,29520,29542,29602,29739,29766,29794,29805,29862,29865,29897,29951,29975,16242,30158,30210,30216,30308,30337,30365,30378,30390,30414,30420,30438,30449,30474,30489,v9511,30586,30592,30612,30688,152718,30787,30830,30896,152846,30893,30976,31004,31022,31028,31046,31097,31176,153457,31188,31198,31211,31213,
31365,154052,31438,31485,31506,31533,31547,31599,31745,31795,155041,31853,31865,31887,31892,31904,31957,32049,32092,32131,32166,32194,32296,32663,32731,32821,32823,32970,32992,33011,33120,v9512,33133,33211,33226,33239,17499,33376,33396,158463,33441,v9513,33449,33471,33493,33533,33536,33570,33581,33594,33607,33661,33703,33743,33745,33761,33793,33798,33887,33904,33907,33925,33950,33978,159296,34098,34078,34095,34148,34170,34188,34210,34251,34285,34303,v9514,34320,159988,34328,34360,34391,34402,17821,
34421,34488,34556,34695,17898,34826,34832,35022,161412,35122,35129,35136,35220,35318,35399,35421,35425,35445,35536,35654,35673,35689,35741,35913,35944,36271,36305,36311,36387,36413,36475,164471,18500,36602,36638,36653,36692,164813,36840,36846,36872,36909,37015,37043,37054,v9515,37063,37103,37140,37142,v9516,37167,37172,37251,37361,37705,v9517,37795,37855,37892,37939,37962,37987,38001,38286,38303,38316,38326,38347,38352,38355,18864,38366,38565,38639,38734,38805,38830,38842,38849,38857,38875,38998,
39143,39256,39427,39617,39619,39630,39638,39682,39688,19479,39725,39774,39782,39812,39818,39838,39886,39909,39928,39971,v9518,40037,v9519,40259,40274,40330,40342,40384,40364,40380,172432,40423,40455,40606,40623,40855,131209,19970,19983,19986,20009,20014],v23605=[20039,131234,20049,13318,131236,20073,20125,13356,20156,20163,20168,20203,20186,20209,20213,20246,20324,20279,20286,20312,131603,v9520,20354,20357,20454,20402,20421,20427,20434,13418,20466,20499,20508,20558,20563,20579,20643,20616,v9521,20629,
20650,131883,20657,v9522,20676,20679,20723,131969,20686,131953,20692,20705,13458,132089,20759,132170,20832,132361,20851,20867,20875,13500,20888,20899,20909,13511,132566,20979,21010,21014,132943,21077,21084,21100,21111,21124,21122,133127,21144,133178,21156,v9523,21194,21201,133305,21239,21301,21314,133500,133533,21351,21370,21412,21428,133843,21431,21440,133917,v9524,21461,13667,21492,21540,21544,13678,21571,21602,21612,21653,21664,21670,21678,21687,21690,21699,134469,21740,21743,21745,21747,v9525,
21769,21820,21825,13734,21831,13736,21860,134625,21885,21890,21905,13765,21970,134805,134765,21951,21961,21964,21969,21981,13786,21986,134756,21993,22056,135007,22023,22032,22064,13812,22077,22080,22087,22110,22112,22125,13829,22152,22156,22173,22184,22194,22213,22221,22239,22248,v9526,135681,135765,22313,135803,v9527,22349,135796,22376,22383,v9528,22395,135908,135895,22426,v9529,22440,22487,135933,22476,135990,136004,22494,22512,13898,22520,22523,22525,22532,22558,22567,22585,136132,22601,22604,
22631,v9530,22669,v9531,22676,22685,22698,22705,136301,22723,22733,22754,v9532,v9533,22797,22804,136663,13969,22845,13977,22854,13974,158761,22879,136775,v9534,22908,22943,22958,22972,22984,22989,23006,23015,23022,136966,137026,14031,23053,23063,23079,23085,23141,23162,23179,23196,v9535,23202,23217,23221,23226,23231,23258,23260,23269,23280,23278,23285,23304,23319,23348,23372,23378,23400,23407,23425,23428,137667,23446,23468,v9536,23502,23510,14188,14187,23537,23549,14197,23555,23593,138326,23647,v9537,
23664,138541,138565,138616,138594,23688,23690,14273,138657,138652,23712,23714,23719,138642,23725,23733,138679,23753,138720,138803,23814,23824,23851,23837,23840,23857,23865,14312,23905,23914,14324,23920,139038,14333,23944,14336,23959,23984,23988,139126,24017,24023,139258,24036,24041,14383,14390,14400,24095,24126,24137,14428,24150,14433,v9538,139643,24229,24236,24249,24262,24281,140062,24317,24328,140205,24350,24391,24419,24434,24446,24463,24482,24519,24523,v9539,24546,v9540,24563,14615,24610,24612,
14618,24652,24725,24744,141043,24753,24766,24776,24793,24814,24821,24848,24857,24862,24890,14703,24897,24902,24928,141403,v9541,24983,24997,25005,141483,25045,25053,25077,141711,25123,25170,25185,25188,25211,25197,25203,25241,25301,142008,25341,25347,25360,v9542,25394,25397,v9543,25409,25412,25422,142150,25433,142365,142246,25452,25497,142372,25492,25533,v9544,25568,v9545,25586,25630,25637,25641,25647,25690,25693,25715,25725,25735,25745,25759,v9546,25813,25815,142817,25828,25855,14958,25871,25876,
14963,25886,25906,25924,25940,25963,25978,25988,25994,26034,26037,26040,26047,26057,26068,15062,26105,26108,26116,26120,26145,26154,26181,26193,26190,15082,143811,143861,143798,26218,v9547,26235,26240,26256,26258,15118,26285,26289,26293,15130,15132,15063,26369,26386,144242,26393,144339,144338,26445,26452,26461,144336],v23607=[144356,144341,26484,144346,26514,144351,33635,26640,26563,26568,26578,26587,26615,144458,144465,144459,26648,26655,26669,144485,26675,26683,26686,26693,26697,26700,26709,26711,
15223,26731,26734,26748,26754,26768,26774,15213,v9548,26780,v9549,26804,26811,26875,144612,144730,26819,26821,26828,26841,v9550,26860,26871,26883,26887,15239,144788,15245,26950,26985,26988,27002,27026,15268,27030,27056,27066,27068,27072,27089,144953,144967,144952,27107,v9551,27123,15309,27124,27134,27153,27162,27165,145180,v9552,27199,27209,27258,27214,27218,27236,145164,27275,15344,27297,145252,27307,27325,27334,27348,27344,27357,145407,145383,v9553,27389,145444,27403,v9554,145469,27415,15398,27439,
27466,27480,27500,27509,v9555,27521,27547,27566,146072,27581,v9556,27610,v9557,27630,27650,27658,27662,27702,146559,27725,27739,27757,27780,27785,15555,27796,27799,27821,27842,15570,27868,27881,27885,146688,27904,27940,v9558,27751,27951,27964,27995,28E3,28016,v9559,28042,28045,28049,28056,146752,146938,146937,146899,28075,28078,28084,28098,27956,28104,28110,28127,28150,28214,28190,15633,28210,v9560,v9561,28239,v9562,28247,28259,15646,28307,28327,28340,28355,28469,28395,28409,28411,28426,28428,28440,
28453,28470,28476,147326,28498,28503,28512,28520,28560,28566,28606,28575,28581,28591,15716,v9563,28649,147606,28668,28672,28682,28707,147715,28730,28739,28743,28747,15770,28773,28777,28782,28790,28806,28823,147910,28831,28849,147966,28908,28874,28881,28931,28934,28936,28940,15808,28975,29008,29011,29022,15828,29078,29056,29083,29088,29090,v9564,148412,29145,29148,29191,15877,29236,29241,29250,29271,29283,149033,v9565,29304,29311,29326,149157,29358,29360,29377,15968,29388,15974,15976,29427,29434,29447,
29458,v9566,16003,29497,29484,29491,29501,29522,16020,29547,149654,v9567,29553,29569,29578,29588,29592,29596,29605,29625,29631,29637,29643,29665,29671,29689,29715,29690,29697,29779,29760,29763,29778,29789,29825,29832,150093,29842,29847,29849,29857,29861,29866,29881,29883,29882,29910,29912,29931,150358,29946,150383,29984,29988,29994,16215,150550,v9568,30016,30024,30032,30034,30066,30065,30074,v9569,30092,16245,30114,16247,30128,30135,v9570,30150,30159,30163,30173,v9571,30183,30190,30193,30211,30232,
30215,30223,16302,151054,30227,v9572,151095,30245,30248,30268,30259,151146,16329,30273,151179,30281,30293,16343,30318,30357,30369,30368,v9573,30383,151626,30409,151637,30440,151842,30487,30490,30509,30517,151977,16441,152037,152013,30552,152094,30588,152140,16472,30618,30623,30626,30628,v9574,30692,30698,30700,30715,152622,30725,30729,30733,30745,30764,30791,30826,152793,30858,30868,30884,30877,30879,30907,30933,30950,v9575,30974,152999,30992,31003,31013,31050,31064,16645,31079,31090,31125,31137,
31145,31156,31170,31175,v9576,31190,16712,153513,153524,16719,31242,31253,31259,16739,31288,31303,31318,31321,31324,31327,31335,31338,31349,31362,31370,31376,31404,154068,16820,31417,31422,16831,31436,31464,31476,154340,154339,154353,31549,31530,v9577,16870,16883,31615,31553,16878,31573,31609,31588,31590,31603,154546,16903,31632,31643,16910,31669,31676,31685,31690],v23609=[154699,154724,31700,31702,31706,31722,31728,31747,31758,31813,31818,31831,31838,31841,31849,31855,155182,155222,155237,31910,
155234,v9578,155352,31940,155330,31949,155368,155427,31974,155484,31989,32003,17094,32018,32030,155616,155604,v9579,32064,32071,155660,155643,17110,32090,32106,32112,17117,32127,155671,32136,32151,155744,32157,32167,32170,32182,32192,32215,32217,32230,17154,155885,64088,32272,32279,32285,32295,32300,32325,32373,32382,v9580,17195,32410,17219,32572,32571,32574,32579,13505,156272,156294,v9581,32621,v9582,32656,20859,146702,32662,32668,32685,156674,32707,32719,32739,32754,32778,32776,32790,32812,32816,
32835,32870,32891,32921,32924,32932,32935,32952,157310,32965,32981,32998,33037,33013,33019,17390,33077,33054,17392,33060,33063,33068,157469,33085,17416,33129,17431,17436,33157,17442,33176,33202,33217,33219,33238,33243,157917,33252,157930,33260,33277,33279,158063,33284,158173,33305,33314,158238,33340,33353,33349,158296,17526,17530,33367,158348,33372,33379,158391,17553,33405,33407,33411,33418,33427,v9583,33458,33460,33466,33468,33506,33512,33527,v9584,33548,33620,33563,33565,33584,33596,33604,33623,
17598,17620,17587,v9585,33691,33693,33737,33744,33748,33757,33765,33785,33813,158835,33815,33849,33871,v9586,v9587,33884,158941,33893,33912,33916,33921,17677,33943,33958,33982,17672,v9588,34003,159333,34023,34026,34031,34033,34042,34075,v9589,34091,34127,34159,17731,34129,v9590,159636,34171,34173,34175,34177,34182,34195,34205,34207,159736,v9591,34236,34247,34250,v9592,34271,34273,34278,34294,34304,34321,34334,34337,34340,34343,160013,34361,34364,160057,34368,34387,34390,34423,34439,34441,v9593,34481,
34483,34497,34499,34513,34517,34519,34531,34534,17848,34565,34567,34574,34576,34591,34593,34595,34609,34618,34624,34627,34641,34648,v9594,34674,34684,160731,160730,34727,34697,34699,34707,34720,160766,17893,34750,160784,34753,34766,34783,160841,34787,v9595,34794,34835,34856,34862,34866,34876,17935,34890,34904,161301,161300,34921,161329,34927,34976,35004,35008,161427,35025,35027,17985,35073,161550,35127,161571,35138,35141,35145,161618,35170,35209,35216,35231,35248,35255,35288,35307,18081,35315,35325,
35327,18095,35345,35348,162181,35361,35381,35390,35397,35405,35416,35502,35472,35511,35543,35580,162436,35594,35589,35597,35612,35629,18188,35665,35678,35702,35713,35723,v9596,35897,162739,35901,162750,162759,35909,35919,35927,35945,35949,163E3,35987,35986,35993,18276,35995,36054,36053,163232,36081,163344,36105,36110,36296,36313,36364,18429,36349,36358,163978,36372,36374,v9597,36391,164027,18454,36406,36409,36436,36450,36461,36463,36504,36510,36533,36539,164482,18510,164595,36608,36616,36651,36672,
36682,36696,164876,36772,36788,164949,36801,36806,64036,36810,36813,36819,36821,36849,36853,36859,36876,36919,165227,36931,36957,v9598,36997,37004,37008,37025,18613,37040,37046,37059,37064,165591,37084,37087,165626,37110,37106,37120,37099,v9599,37124,37126,37144,37150,37175,37177,v9600,37207,37209,37236,37241,37253,37299,37302,v9601,166217,166214,37356,37377,v9602,166251,37442,37450,37462,37473,37477,37480,166280,v9603,37503],v23611=[37513,37517,37527,37529,37535,37547,v9604,37554,v9605,37574,37582,
37605,37649,166430,166441,37623,37673,166513,166467,37713,37722,37739,37745,37747,37793,166553,166605,37768,37771,37775,37790,37877,166628,166621,37873,37831,37852,37863,37897,v9606,37883,37938,37947,166849,166895,37997,37999,38265,38278,v9607,167184,167281,38344,167419,167455,38444,v9608,167478,38460,38497,167561,38530,167659,38554,167730,18919,38579,38586,38589,18938,167928,38616,38618,38621,18948,38676,38691,18985,38710,38721,38727,38743,38747,38762,168608,168625,38806,38814,v9609,38846,38860,
38865,38868,38872,38881,38897,38916,38925,38932,38934,19132,169104,v9610,38949,38983,39014,39083,39085,39088,169423,39095,v9611,39106,39111,39115,39137,39139,39146,v9612,39155,39176,19259,169712,v9613,169753,v9614,169808,39217,v9615,39233,39238,39246,39264,39331,39334,39357,39359,39363,39380,39385,39390,170182,39408,39417,39420,39434,39441,39450,39456,39473,39492,39500,39512,19394,39599,19402,39607,19410,39609,170610,39622,39632,39634,39637,39648,39653,39657,39692,39696,39698,39702,39708,39723,39741,
19488,39755,39779,39781,v9616,v9617,39846,39852,171483,39858,39864,39870,39923,39896,39901,39914,39919,39918,171541,171658,171593,39958,v9618,39965,39970,39977,171716,39985,39991,40005,40028,171753,v9619,171739,40020,40024,40027,40029,40031,v9620,v9621,40050,40053,40058,40166,40178,40203,v9622,40209,v9623,172079,19652,172058,40242,19665,40266,40287,40290,172281,172162,40307,v9624,40324,40345,40353,40383,40373,40377,40381,40393,40410,40416,40419,19719,40458,40450,40461,40476,40571,139800,40576,40581,
40603,172940,40637,173111,40671,40703,40706,19831,40707,40762,40765,40774,40787,40789,40792,173553,40797,173570,40809,40813,40816,173746,11948,13844,14509,15820,16348,17854,17936,19326,19512,19681,19980,v9625,20089,20211,20236,20249,20267,20270,20273,20356,20382,20407,20484,20492,20556,20575,20578,20599,20622,20638,20642,20675,20712,20721,20734,20743,v9626,20787,20792,20852,20868,20920,20922,20936,20943,20945,v9627,20952,20959,20997,21030,21032,21035,v9628,21045,21052,21082,21088,21102,v9629,21130,
21132,21217,21225,21233,21251,21265,21279,21293,21298,21309,21349,21357,21369,21374,21396,21401,21418,21423,21434,21441,v9630,21472,21523,21546,21553,v9631,21580,21671,21674,21681,21691,21710,21738,21756,21765,21768,21781,21799,21802,21814,21841,21862,21903,21906,21908,21924,21938,21955,21958,21971,21979,21996,21998,22001,22006,22008,22021,22029,v9632,22060,22069,22073,22093,22100,22149,22175,22182,22199,22220,22223,22233,22241,22251,22253,22257,22279,22284,v9633,22301,22316,22318,v9634,22367,22379,
22381,22394,22403,22423,22446,22485,22503,22541,22566,22605,22607,22623,22637,22655,22657,22680,22716,22815,22819,22873,22905,22935,22959,22963,23007,23025,23032,23218,23224,23274,23286,23323,23325,23329,23352,23479,23511,23520,23583,23594,23596,23606,23641,23644,23661,23773,23809,23860,23869,23897,23934,23939,24007,24057,24104,24114,24117,24155,24168,24170,24183,24192,24203,24243,24253,24273,v9635,24397,24492,24554,24583,24649,24660,24679,24763,24772,24829],v23613=[24842,24854,24874,24886,24926,
24932,24955,24957,24959,24989,25016,25052,25058,25061,25064,25092,25095,25137,25145,25149,25210,25232,25256,25306,25332,25366,25386,25398,25414,25419,25427,25457,25461,25471,25474,25482,v9636,25578,v9637,25618,25624,25632,25636,25642,25653,25661,25663,25682,25695,25716,25744,v9638,25772,25779,25837,25840,25883,25887,25902,25929,25952,26002,26005,26036,26046,26056,26062,26064,26079,26238,v9639,26291,26304,26319,26405,26421,26453,26496,26511,26513,26532,26545,26549,26558,26664,26758,26859,26869,26903,
26931,26936,26971,26981,27048,27051,27055,27109,27121,27210,27221,27239,27249,27311,v9640,27395,27451,27455,v9641,27568,27639,27641,27652,27657,27661,27692,27722,27730,27732,27769,27820,27828,27858,28001,28028,28089,28144,28229,28275,28283,28285,28297,28348,v9642,28454,28457,28464,28551,28573,28590,28599,28685,28704,28745,28824,28848,v9643,28997,29106,29172,29207,29215,29251,v9644,29274,29280,29288,29303,29316,29385,29413,29428,29442,29451,29470,29474,v9645,29517,29528,29543,29810,29871,29919,29924,
29940,29947,29974,29985,30015,30046,30105,30116,30145,30148,30156,30167,30172,30177,30191,30212,30220,30237,30258,30264,30277,30282,30303,30381,30397,30425,30443,30448,30457,30464,30478,30498,30504,30511,30521,30526,30533,30538,30543,30558,30564,30567,30572,30596,v9646,30614,30631,30639,30647,30654,30665,30673,30681,30705,30775,30812,30846,30872,30881,30897,30899,30921,30931,30988,31007,v9647,31039,31042,31060,31083,31100,31147,31172,31210,31234,31244,31280,31290,31300,31360,31366,31380,31413,31421,
31486,31531,31607,31648,31660,31664,31720,31730,31736,31740,31742,31753,31784,31791,31810,v9648,v9649,31858,31869,31879,31902,31930,31943,31955,31962,32060,32077,32130,32133,32141,32145,32158,32179,32185,32208,32229,v9650,32303,32310,32324,32367,32376,32385,32573,32603,32605,32613,32625,v9651,32651,32674,v9652,32775,32781,32798,32825,32904,32910,32975,32980,33005,33008,33015,33018,33022,33027,33047,33072,33111,33135,33139,33163,33168,33179,33182,33227,33237,v9653,33249,33263,33270,33280,33291,v9654,
33306,33338,33348,33389,33412,33417,33425,33450,33456,33488,33514,33519,33526,33622,33656,33784,33788,33880,33939,33969,33981,34043,34118,34134,34141,34181,34200,34370,34374,34496,34580,34594,34606,34617,34653,34683,34700,34702,v9655,34718,34723,34734,34751,34761,34778,34840,34843,34861,34874,34885,34891,34894,34901,34906,34926,v9656,35021,35040,35055,v9657,35110,35125,35162,35164,35179,35184,35196,35237,35253,35260,35285,35401,35415,35431,35454,35462,35478,35510,35529,35537,35549,35564,35573,35590,
35599,35601,35653,35666,35693,35704,35708,35710,35717,35743,35915,35923,35963,36026,36037,36041,36050,36076,36085,36087,36097,36099,36119,36124,36206,36241,36255,36267,36274,36309,36327,v9658,36340,36353,36363,36390,36401,v9659,36429,36431,36444,36449,36457,36465,36469,36471,36489,36496,36501,36506,36519,36521,36525,36584,36592,36615,36632,36645,36647,36652,36661,36666,36675,36679,36689,36693,v9660,36773,36868,36891,36911,36940,36955,36976,36980],v23614=[36985,37003,37016,37024,37042,37053,37065,
37104,37125,37157,37210,37223,37242,37258,37265,37269,37296,37307,37309,37314,37317,37376,37385,37411,37494,37518,37551,v9661,37569,37571,37573,37576,37652,37683,37686,37720,37759,37762,37770,37819,37836,37862,37881,37890,v9662,37934,37964,38280,38305,38335,38342,38345,v9663,38368,38372,38374,38436,38449,38456,38461,38484,38516,38523,38527,38529,38531,38537,38550,38574,38659,38683,v9664,38696,38705,38759,38774,38781,38783,38809,38815,38828,38841,38861,38880,38895,38919,38950,38958,v9665,39092,39109,
39170,39185,39189,39221,39240,39252,39262,39393,39436,39440,39459,39489,39505,v9666,39681,39689,39691,v9667,39705,39733,39752,39765,39784,39808,39814,39824,39837,39856,39871,39880,39935,39938,39964,39989,40004,40022,40033,40040,40240,40253,40298,40315,40421,40425,40435,40570,v9668,40624,40676,40688,40690,40713,40719,40724,40731,40738,40742,v9669,40756,40794,40815,40862,40869,131317,151044,151538,163187,194581,194630,194713,194726,194789,195038,13790,v9670,172722,0,0,131416,v9671,132529,0,0,132844,
v9672,134488,v9673,154060,v9674,14756,14776,142914,0,0,14940,0,0,143339,0,0,162228,0,15044,15051,v9675,14981,v9676,15347,27384,v9677,15665,v9678,147531,0,15936,14497,v9679,158878,v9680,18207,162876,v9681,18462,v9682,39709,39724,20482,20958,21255,23532,63784,26142,63785,28746,64021,21857,27706,31328,156492,34819,38315,38741,171581,173594],v23612=v23613.concat(v23614),v23610=v23611.concat(v23612),v23608=v23609.concat(v23610),v23606=v23607.concat(v23608),v23604=v23605.concat(v23606),v23602=v23603.concat(v23604),
v23600=v23601.concat(v23602),v23598=v23599.concat(v23600),v23596=v23597.concat(v23598),v23594=v23595.concat(v23596),v23592=v23593.concat(v23594),v23590=v23591.concat(v23592),v23588=v23589.concat(v23590),v23586=v23587.concat(v23588),v23584=v23585.concat(v23586),v23582=v23583.concat(v23584),v23580=v23581.concat(v23582),v23578=v23579.concat(v23580),v23576=v23577.concat(v23578),v23574=v23575.concat(v23576),v23572=v23573.concat(v23574),v23570=v23571.concat(v23572),v23568=v23569.concat(v23570),v5853=v23567.concat(v23568),
v9683={f:95,c:32},v9684=[12288,12644],v9685={f:2,c:12289},v9686=[8230,8943],v9687={f:2,c:8211},v9688={f:2,c:8216},v9689={f:2,c:8220},v9690={f:2,c:12308},v9691={f:10,c:12296},v9692={f:2,c:8804},v9693={f:2,c:8242},v9694={f:2,c:65504},v9695={f:2,c:8592},v9696={f:2,c:8595},v9697={f:2,c:8747},v9698={f:2,c:8838},v9699={f:2,c:8834},v9700={f:2,c:8743},v9701={f:2,c:9824},v9702={f:2,c:9680},v9703={f:2,c:9636},v9704={f:2,c:8224},v9705={f:2,c:9833},v9706={f:59,c:65281},v9707={f:33,c:65341},v9708={f:51,c:12593},
v9709={f:42,c:12645},v9710={f:10,c:8560},v9711={f:10,c:8544},v9712={f:17,c:913},v9713={f:7,c:931},v9714={f:17,c:945},v9715={f:7,c:963},v9716={f:2,c:9502},v9717={f:2,c:9505},v9718={f:2,c:9510},v9719={f:2,c:9513},v9720={f:2,c:9517},v9721={f:2,c:9521},v9722={f:2,c:9525},v9723={f:2,c:9529},v9724={f:2,c:9533},v9725={f:2,c:9536},v9726={f:8,c:9539},v9727={f:3,c:13205},v9728={f:4,c:13219},v9729={f:10,c:13209},v9730={f:3,c:13197},v9731={f:2,c:13192},v9732={f:2,c:13223},v9733={f:10,c:13232},v9734={f:5,c:13184},
v9735={f:6,c:13242},v9736={f:5,c:13200},v9737={f:2,c:13248},v9738={f:3,c:13194},v9739={f:3,c:13229},v9740={f:4,c:13225},v9741={f:28,c:12896},v9742={f:26,c:9424},v9743={f:15,c:9312},v9744={f:2,c:8531},v9745={f:4,c:8539},v9746={f:28,c:12800},v9747={f:26,c:9372},v9748={f:15,c:9332},v9749={f:2,c:178},v9750={f:4,c:8321},v9751={f:83,c:12353},v9752={f:86,c:12449},v9753={f:6,c:1040},v9754={f:32,c:1046},v9755={f:26,c:1078},v9756={f:2,c:44032},v9757={f:4,c:44039},v9758={f:8,c:44048},v9759={f:5,c:44057},v9760=
{f:2,c:44076},v9761={f:3,c:44079},v9762={f:2,c:44088},v9763={f:2,c:44144},v9764={f:2,c:44151},v9765={f:2,c:44160},v9766={f:4,c:44163},v9767={f:4,c:44169},v9768={f:2,c:44188},v9769={f:3,c:44191},v9770={f:3,c:44200},v9771={f:2,c:44207},v9772={f:2,c:44216},v9773={f:3,c:44219},v9774={f:2,c:44256},v9775={f:2,c:44263},v9776={f:3,c:44271},v9777={f:2,c:44277},v9778={f:2,c:44284},v9779={f:2,c:44300},v9780={f:2,c:44332},v9781={f:2,c:44340},v9782={f:2,c:44356},v9783={f:2,c:44396},v9784={f:4,c:44403},v9785={f:3,
c:44411},v9786={f:2,c:44417},v9787={f:2,c:44424},v9788={f:2,c:44444},v9789={f:2,c:44480},v9790={f:2,c:44496},v9791={f:2,c:44536},v9792={f:3,c:44543},v9793={f:2,c:44552},v9794={f:2,c:44592},v9795={f:2,c:44599},v9796={f:2,c:44608},v9797={f:2,c:44613},v9798={f:3,c:44620},v9799={f:2,c:44636},v9800={f:3,c:44639},v9801={f:2,c:44648},v9802={f:2,c:44664},v9803={f:3,c:44667},v9804={f:2,c:44676},v9805={f:3,c:44732},v9806={f:2,c:44748},v9807={f:3,c:44751},v9808={f:2,c:44760},v9809={f:2,c:44807},v9810={f:2,c:44844},
v9811={f:2,c:44860},v9812={f:3,c:44865},v9813={f:2,c:44872},v9814={f:2,c:44892},v9815={f:2,c:44900},v9816={f:2,c:44944},v9817={f:2,c:44984},v9818={f:3,c:44999},v9819={f:2,c:45005},v9820={f:2,c:45032},v9821={f:2,c:45040},v9822={f:2,c:45056},v9823={f:2,c:45084},v9824={f:2,c:45124},v9825={f:3,c:45139},v9826={f:2,c:45180},v9827={f:2,c:45196},v9828={f:3,c:45208},v9829={f:4,c:45215},v9830={f:2,c:45224},v9831={f:5,c:45227},v9832={f:3,c:45235},v9833={f:2,c:45252},v9834={f:3,c:45255},v9835={f:2,c:45264},v9836=
{f:2,c:45320},v9837={f:2,c:45323},v9838={f:2,c:45330},v9839={f:2,c:45336},v9840={f:3,c:45339},v9841={f:3,c:45347},v9842={f:2,c:45364},v9843={f:3,c:45367},v9844={f:2,c:45376},v9845={f:2,c:45392},v9846={f:2,c:45396},v9847={f:2,c:45432},v9848={f:2,c:45448},v9849={f:3,c:45458},v9850={f:2,c:45532},v9851={f:2,c:45544},v9852={f:2,c:45572},v9853={f:2,c:45579},v9854={f:2,c:45588},v9855={f:2,c:45672},v9856={f:2,c:45684},v9857={f:2,c:45700},v9858={f:2,c:45712},v9859={f:3,c:45720},v9860={f:2,c:45728},v9861={f:2,
c:45733},v9862={f:2,c:45768},v9863={f:2,c:45784},v9864={f:3,c:45796},v9865={f:5,c:45803},v9866={f:3,c:45811},v9867={f:5,c:45815},v9868={f:3,c:45823},v9869={f:2,c:45840},v9870={f:3,c:45843},v9871={f:3,c:45908},v9872={f:2,c:45915},v9873={f:2,c:45918},v9874={f:2,c:45924},v9875={f:2,c:45936},v9876={f:2,c:45952},v9877={f:3,c:45955},v9878={f:2,c:45984},v9879={f:2,c:46020},v9880={f:2,c:46027},v9881={f:2,c:46036},v9882={f:2,c:46120},v9883={f:2,c:46160},v9884={f:2,c:46176},v9885={f:2,c:46300},v9886={f:2,c:46307},
v9887={f:2,c:46316},v9888={f:2,c:46356},v9889={f:2,c:46363},v9890={f:2,c:46372},v9891={f:4,c:46375},v9892={f:2,c:46384},v9893={f:2,c:46400},v9894={f:3,c:46403},v9895={f:3,c:46411},v9896={f:2,c:46428},v9897={f:3,c:46431},v9898={f:2,c:46496},v9899={f:2,c:46506},v9900={f:2,c:46512},v9901={f:3,c:46515},v9902={f:3,c:46523},v9903={f:2,c:46540},v9904={f:3,c:46543},v9905={f:2,c:46608},v9906={f:2,c:46748},v9907={f:2,c:46763},v9908={f:2,c:46848},v9909={f:2,c:46888},v9910={f:2,c:46895},v9911={f:2,c:46904},v9912=
{f:2,c:46932},v9913={f:2,c:46960},v9914={f:2,c:46972},v9915={f:2,c:46988},v9916={f:4,c:46991},v9917={f:4,c:46998},v9918={f:2,c:47016},v9919={f:3,c:47019},v9920={f:2,c:47028},v9921={f:2,c:47084},v9922={f:2,c:47100},v9923={f:3,c:47103},v9924={f:3,c:47111},v9925={f:2,c:47128},v9926={f:2,c:47140},v9927={f:2,c:47156},v9928={f:3,c:47159},v9929={f:2,c:47196},v9930={f:2,c:47212},v9931={f:2,c:47296},v9932={f:2,c:47336},v9933={f:2,c:47352},v9934={f:2,c:47420},v9935={f:2,c:47448},v9936={f:2,c:47464},v9937={f:2,
c:47476},v9938={f:2,c:47492},v9939={f:2,c:47497},v9940={f:2,c:47501},v9941={f:2,c:47532},v9942={f:2,c:47548},v9943={f:2,c:47560},v9944={f:5,c:47566},v9945={f:2,c:47576},v9946={f:2,c:47581},v9947={f:3,c:47587},v9948={f:2,c:47604},v9949={f:4,c:47607},v9950={f:2,c:47616},v9951={f:2,c:47672},v9952={f:2,c:47688},v9953={f:2,c:47693},v9954={f:3,c:47699},v9955={f:2,c:47716},v9956={f:3,c:47719},v9957={f:2,c:47728},v9958={f:3,c:47747},v9959={f:2,c:47784},v9960={f:2,c:47787},v9961={f:2,c:47800},v9962={f:2,c:47832},
v9963={f:3,c:47924},v9964={f:4,c:47931},v9965={f:2,c:47940},v9966={f:2,c:47951},v9967={f:2,c:48120},v9968={f:2,c:48127},v9969={f:2,c:48136},v9970={f:3,c:48139},v9971={f:5,c:48148},v9972={f:5,c:48155},v9973={f:2,c:48164},v9974={f:2,c:48176},v9975={f:2,c:48192},v9976={f:3,c:48195},v9977={f:2,c:48204},v9978={f:2,c:48260},v9979={f:2,c:48267},v9980={f:2,c:48276},v9981={f:2,c:48281},v9982={f:2,c:48288},v9983={f:2,c:48295},v9984={f:2,c:48304},v9985={f:3,c:48307},v9986={f:2,c:48316},v9987={f:3,c:48335},v9988=
{f:3,c:48372},v9989={f:2,c:48388},v9990={f:2,c:48456},v9991={f:2,c:48472},v9992={f:2,c:48512},v9993={f:4,c:48519},v9994={f:2,c:48528},v9995={f:2,c:48537},v9996={f:2,c:48596},v9997={f:2,c:48652},v9998={f:2,c:48668},v9999={f:2,c:48708},v10000={f:2,c:48724},v10001={f:3,c:48729},v10002={f:2,c:48736},v10003={f:2,c:48752},v10004={f:3,c:48755},v10005={f:3,c:48763},v10006={f:2,c:48780},v10007={f:3,c:48783},v10008={f:2,c:48792},v10009={f:2,c:48848},v10010={f:2,c:48855},v10011={f:3,c:48867},v10012={f:2,c:48904},
v10013={f:2,c:48920},v10014={f:3,c:48923},v10015={f:2,c:48960},v10016={f:2,c:48976},v10017={f:2,c:49100},v10018={f:2,c:49256},v10019={f:2,c:49296},v10020={f:2,c:49312},v10021={f:2,c:49324},v10022={f:2,c:49327},v10023={f:4,c:49331},v10024={f:2,c:49340},v10025={f:3,c:49343},v10026={f:2,c:49352},v10027={f:2,c:49368},v10028={f:3,c:49371},v10029={f:2,c:49380},v10030={f:2,c:49396},v10031={f:5,c:49436},v10032={f:2,c:49443},v10033={f:2,c:49446},v10034={f:2,c:49452},v10035={f:3,c:49455},v10036={f:2,c:49464},
v10037={f:2,c:49480},v10038={f:3,c:49483},v10039={f:2,c:49492},v10040={f:2,c:49508},v10041={f:3,c:49511},v10042={f:3,c:49548},v10043={f:2,c:49564},v10044={f:2,c:49576},v10045={f:2,c:49623},v10046={f:2,c:49648},v10047={f:2,c:49660},v10048={f:2,c:49676},v10049={f:2,c:49688},v10050={f:2,c:49695},v10051={f:2,c:49704},v10052={f:2,c:49713},v10053={f:2,c:49744},v10054={f:2,c:49772},v10055={f:2,c:49788},v10056={f:2,c:49800},v10057={f:2,c:49828},v10058={f:2,c:49836},v10059={f:2,c:49844},v10060={f:2,c:49884},
v10061={f:2,c:49891},v10062={f:3,c:49899},v10063={f:2,c:49912},v10064={f:2,c:49915},v10065={f:2,c:49928},v10066={f:2,c:49932},v10067={f:3,c:49939},v10068={f:2,c:49956},v10069={f:2,c:49960},v10070={f:2,c:50024},v10071={f:2,c:50040},v10072={f:2,c:50044},v10073={f:2,c:50136},v10074={f:2,c:50143},v10075={f:2,c:50152},v10076={f:2,c:50164},v10077={f:2,c:50236},v10078={f:2,c:50276},v10079={f:2,c:50292},v10080={f:2,c:50416},v10081={f:3,c:50431},v10082={f:2,c:50472},v10083={f:2,c:50488},v10084={f:2,c:50500},
v10085={f:3,c:50504},v10086={f:3,c:50508},v10087={f:3,c:50515},v10088={f:3,c:50519},v10089={f:2,c:50525},v10090={f:2,c:50528},v10091={f:2,c:50544},v10092={f:3,c:50547},v10093={f:2,c:50556},v10094={f:2,c:50572},v10095={f:2,c:50583},v10096={f:2,c:50612},v10097={f:2,c:50616},v10098={f:4,c:50619},v10099={f:7,c:50628},v10100={f:2,c:50640},v10101={f:2,c:50656},v10102={f:3,c:50668},v10103={f:2,c:50678},v10104={f:6,c:50684},v10105={f:4,c:50693},v10106={f:2,c:50712},v10107={f:2,c:50715},v10108={f:2,c:50724},
v10109={f:3,c:50732},v10110={f:3,c:50739},v10111={f:2,c:50752},v10112={f:2,c:50768},v10113={f:3,c:50771},v10114={f:2,c:50780},v10115={f:2,c:50808},v10116={f:2,c:50824},v10117={f:2,c:50836},v10118={f:2,c:50852},v10119={f:2,c:50864},v10120={f:3,c:50872},v10121={f:2,c:50880},v10122={f:2,c:50892},v10123={f:2,c:50908},v10124={f:2,c:50912},v10125={f:2,c:50920},v10126={f:2,c:50936},v10127={f:2,c:50948},v10128={f:2,c:50964},v10129={f:2,c:50976},v10130={f:2,c:50992},v10131={f:2,c:51004},v10132={f:2,c:51020},
v10133={f:8,c:51025},v10134={f:2,c:51060},v10135={f:3,c:51068},v10136={f:3,c:51075},v10137={f:4,c:51079},v10138={f:2,c:51088},v10139={f:3,c:51094},v10140={f:2,c:51104},v10141={f:4,c:51107},v10142={f:2,c:51116},v10143={f:2,c:51132},v10144={f:3,c:51135},v10145={f:2,c:51144},v10146={f:2,c:51200},v10147={f:2,c:51216},v10148={f:2,c:51221},v10149={f:2,c:51228},v10150={f:2,c:51244},v10151={f:2,c:51272},v10152={f:2,c:51276},v10153={f:2,c:51312},v10154={f:2,c:51328},v10155={f:3,c:51333},v10156={f:3,c:51339},
v10157={f:2,c:51388},v10158={f:2,c:51412},v10159={f:2,c:51424},v10160={f:2,c:51452},v10161={f:3,c:51460},v10162={f:2,c:51468},v10163={f:2,c:51536},v10164={f:2,c:51552},v10165={f:2,c:51592},v10166={f:2,c:51608},v10167={f:2,c:51648},v10168={f:2,c:51655},v10169={f:2,c:51664},v10170={f:2,c:51669},v10171={f:2,c:51673},v10172={f:2,c:51676},v10173={f:2,c:51692},v10174={f:3,c:51695},v10175={f:2,c:51704},v10176={f:2,c:51720},v10177={f:3,c:51723},v10178={f:2,c:51788},v10179={f:2,c:51804},v10180={f:3,c:51807},
v10181={f:2,c:51900},v10182={f:2,c:51916},v10183={f:2,c:51928},v10184={f:2,c:52E3},v10185={f:2,c:52040},v10186={f:2,c:52056},v10187={f:2,c:52088},v10188={f:2,c:52236},v10189={f:2,c:52252},v10190={f:2,c:52257},v10191={f:3,c:52263},v10192={f:2,c:52280},v10193={f:4,c:52283},v10194={f:2,c:52292},v10195={f:2,c:52308},v10196={f:3,c:52311},v10197={f:2,c:52376},v10198={f:2,c:52392},v10199={f:3,c:52395},v10200={f:2,c:52404},v10201={f:2,c:52420},v10202={f:2,c:52488},v10203={f:2,c:52504},v10204={f:2,c:52588},
v10205={f:2,c:52628},v10206={f:2,c:52644},v10207={f:2,c:52728},v10208={f:2,c:52768},v10209={f:2,c:52784},v10210={f:2,c:52824},v10211={f:3,c:52831},v10212={f:2,c:52840},v10213={f:2,c:52852},v10214={f:2,c:52868},v10215={f:2,c:52880},v10216={f:2,c:52896},v10217={f:3,c:52899},v10218={f:2,c:52908},v10219={f:2,c:52964},v10220={f:2,c:52971},v10221={f:2,c:52980},v10222={f:3,c:52983},v10223={f:2,c:52992},v10224={f:2,c:53008},v10225={f:2,c:53036},v10226={f:3,c:53039},v10227={f:2,c:53076},v10228={f:2,c:53092},
v10229={f:2,c:53104},v10230={f:2,c:53216},v10231={f:2,c:53232},v10232={f:2,c:53300},v10233={f:2,c:53316},v10234={f:2,c:53356},v10235={f:2,c:53372},v10236={f:2,c:53412},v10237={f:2,c:53428},v10238={f:2,c:53440},v10239={f:2,c:53448},v10240={f:2,c:53456},v10241={f:3,c:53459},v10242={f:2,c:53468},v10243={f:2,c:53484},v10244={f:3,c:53487},v10245={f:2,c:53552},v10246={f:2,c:53568},v10247={f:3,c:53571},v10248={f:2,c:53580},v10249={f:2,c:53596},v10250={f:2,c:53664},v10251={f:2,c:53680},v10252={f:2,c:53804},
v10253={f:2,c:53820},v10254={f:2,c:53888},v10255={f:2,c:53904},v10256={f:2,c:53944},v10257={f:2,c:53951},v10258={f:2,c:53960},v10259={f:2,c:53988},v10260={f:2,c:54E3},v10261={f:2,c:54016},v10262={f:3,c:54028},v10263={f:2,c:54044},v10264={f:3,c:54047},v10265={f:2,c:54056},v10266={f:2,c:54072},v10267={f:3,c:54075},v10268={f:2,c:54084},v10269={f:2,c:54140},v10270={f:2,c:54156},v10271={f:3,c:54159},v10272={f:2,c:54168},v10273={f:2,c:54184},v10274={f:2,c:54212},v10275={f:2,c:54216},v10276={f:2,c:54252},
v10277={f:2,c:54268},v10278={f:2,c:54392},v10279={f:2,c:54399},v10280={f:2,c:54408},v10281={f:2,c:54548},v10282={f:2,c:54588},v10283={f:2,c:54604},v10284={f:2,c:54616},v10285={f:2,c:54632},v10286={f:2,c:54644},v10287={f:2,c:54660},v10288={f:3,c:54663},v10289={f:2,c:54728},v10290={f:2,c:54744},v10291={f:2,c:54756},v10292={f:2,c:54772},v10293={f:2,c:54784},v10294={f:2,c:54800},v10295={f:3,c:54803},v10296={f:2,c:54840},v10297={f:2,c:54856},v10298={f:2,c:54868},v10299={f:2,c:54896},v10300={f:2,c:54924},
v10301={f:2,c:54980},v10302={f:2,c:55036},v10303={f:2,c:55064},v10304={f:2,c:55080},v10305={f:2,c:55092},v10306={f:2,c:55120},v10307={f:4,c:55126},v10308={f:2,c:55136},v10309={f:2,c:55164},v10310={f:2,c:55176},v10311={f:2,c:55192},v10312={f:2,c:26550},v10313=[36040,63747],v10314=[12179,35282],v10315=[12082,24178],v10316=[12169,33390],v10317=[12130,29976],v10318={f:2,c:37969},v10319=[38477,64009],v10320=[12081,24062],v10321=[12125,29356],v10322=[12178,35211,64010],v10323=[26356,63745],v10324=[22865,
63753],v10325=[12220,39640],v10326=[12238,40723],v10327=[12181,35895],v10328=[12219,39592],v10329=[12079,24037],v10330=[20018,63749],v10331=[12093,25096],v10332=[12128,29916],v10333=[24275,64011],v10334=[12061,21475],v10335=[21477,63750],v10336=[12165,33276],v10337=[12244,40860,63751,63752],v10338=[12088,24339],v10339=[12225,39740],v10340=[12100,26020],v10341={f:2,c:34942},v10342=[12080,24049],v10343={f:2,c:26398},v10344={f:2,c:31047},v10345=[35912,63744],v10346={f:2,c:39438},v10347=[12198,37329,
63754],v10348=[25295,63835],v10349=[35582,63837],v10350=[22856,63756],v10351=[12069,22899,63873],v10352=[24180,63886],v10353=[25754,63889],v10354=[31178,63893],v10355=[24565,63907],v10356=[25467,63908],v10357=[23527,63839,63914],v10358=[24594,63840],v10359=[23615,63933],v10360=[26491,63944],v10361=[32016,63951],v10362=[27877,63971],v10363=[21311,63979],v10364=[28346,63980],v10365=[33590,63998],v10366=[20025,63838],v10367=[31958,64003],v10368=[12068,22823],v10369=[23429,64004],v10370=[12049,20992],
v10371=[24230,64001],v10372=[35712,63834],v10373=[27934,64005],v10374=[12099,26007],v10375=[12182,35910],v10376=[21895,63755],v10377=[25078,63757],v10378=[30313,63758],v10379=[32645,63759],v10380=[34367,63760],v10381=[34746,63761],v10382=[35064,63762],v10383=[37007,63763],v10384=[27931,63765],v10385=[28889,63766],v10386=[29662,63767],v10387=[33853,63768],v10388=[37226,63769],v10389=[39409,63770],v10390=[20098,63771],v10391=[21365,63772],v10392=[27396,63773],v10393=[29211,63774],v10394=[34349,63775],
v10395=[40478,63776],v10396=[23888,63777],v10397=[28651,63778],v10398=[34253,63779],v10399=[35172,63780],v10400=[25289,63781],v10401=[33240,63782],v10402=[34847,63783],v10403=[24266,63784],v10404=[26391,63785],v10405=[28010,63786],v10406=[29436,63787],v10407=[37086,63788],v10408=[20358,63789],v10409=[20919,63790],v10410=[25504,63861],v10411=[30053,63862],v10412=[20142,63863],v10413=[20841,63864],v10414=[20937,63865],v10415=[26753,63866],v10416=[31975,63867],v10417=[33391,63868],v10418=[35538,63869],
v10419=[37327,63870],v10420=[21237,63871],v10421=[21570,63872],v10422=[24300,63874],v10423=[26053,63875],v10424=[28670,63876],v10425=[31018,63877],v10426=[38317,63878],v10427=[39530,63879],v10428=[40599,63880],v10429=[40654,63881],v10430=[12050,21147,63882],v10431=[26310,63883],v10432=[27511,63884],v10433=[36706,63885],v10434=[24976,63887],v10435=[25088,63888],v10436=[28451,63890],v10437=[29001,63891],v10438=[29833,63892],v10439=[32244,63894],v10440=[32879,63895],v10441=[34030,63897],v10442=[36646,
63896],v10443=[36899,63898],v10444=[37706,63899],v10445=[21015,63900],v10446=[21155,63901],v10447=[28872,63903],v10448=[35010,63904],v10449=[24265,63906],v10450=[27566,63909],v10451=[31806,63910],v10452=[29557,63911],v10453=[20196,63912],v10454=[22265,63913],v10455=[23994,63915],v10456=[24604,63916],v10457=[29618,63917],v10458=[32666,63919],v10459=[32838,63920],v10460=[37428,63921],v10461=[38646,63922],v10462=[38728,63923],v10463=[38936,63924],v10464=[20363,63925],v10465=[31150,63926],v10466=[37300,
63927],v10467=[38583,63928],v10468=[21214,63791],v10469=[25796,63792],v10470=[27347,63793],v10471=[29200,63794],v10472=[30439,63795],v10473=[12156,32769,63796],v10474=[34310,63797],v10475=[34396,63798],v10476=[36335,63799],v10477=[38706,63800],v10478=[39791,63801],v10479=[40442,63802],v10480=[12228,40565],v10481=[30860,63803],v10482=[31103,63804],v10483=[32160,63805],v10484=[33737,63806],v10485=[37636,63807],v10486=[12229,40575,63808],v10487=[35542,63809],v10488=[22751,63810],v10489=[24324,63811],
v10490=[31840,63812],v10491=[32894,63813],v10492=[29282,63814],v10493=[30922,63815],v10494=[36034,63816],v10495=[38647,63817],v10496=[20102,63930],v10497=[20698,63931],v10498=[23534,63932],v10499=[26009,63934],v10500=[29134,63936],v10501=[30274,63937],v10502=[34044,63938],v10503=[36988,63939],v10504=[12243,40845,63940],v10505=[22744,63818],v10506=[23650,63819],v10507=[27155,63820],v10508=[28122,63821],v10509=[28431,63822],v10510=[32047,63823],v10511=[32311,63824],v10512=[38475,63825],v10513=[21129,
63943],v10514=[26611,63945],v10515=[27969,63946],v10516=[28316,63947],v10517=[29705,63948],v10518=[30041,63949],v10519=[30827,63950],v10520=[39006,63952],v10521=[20845,63953],v10522=[25134,63954],v10523=[38520,63955],v10524=[20523,63956],v10525=[23833,63957],v10526=[28138,63958],v10527=[36650,63959],v10528=[24459,63960],v10529=[24900,63961],v10530=[26647,63962],v10531=[38534,63964],v10532=[21202,63826],v10533=[32907,63827],v10534=[20956,63828],v10535=[20940,63829],v10536=[31260,63830],v10537=[32190,
63831],v10538=[33777,63832],v10539=[38517,63833],v10540=[21033,63965],v10541=[21519,63966],v10542=[23653,63967],v10543=[26446,63969],v10544=[26792,63970],v10545=[29702,63972],v10546=[30178,63973],v10547=[32633,63974],v10548=[35023,63975],v10549=[35041,63976],v10550=[12197,37324,63977],v10551=[38626,63978],v10552=[21533,63981],v10553=[29136,63982],v10554=[29848,63983],v10555=[34298,63984],v10556=[38563,63985],v10557=[40023,63986],v10558=[40607,63987],v10559=[26519,63988],v10560=[28107,63989],v10561=
[33256,63990],v10562=[12148,31435,63991],v10563=[31520,63992],v10564=[31890,63993],v10565=[12218,39340],v10566=[12231,40635],v10567={f:2,c:24536},v10568=[12230,40613],v10569=[12207,38754],v10570=[12139,30399],v10571={f:2,c:25720},v10572=[12113,27611],v10573=[12141,30683],v10574=[12106,26408],v10575=[12140,30446],v10576=[12102,26080],v10577=[12111,27595],v10578=[12098,25991],v10579={f:2,c:32010},v10580=[12200,38272],v10581=[12150,31859],v10582={f:2,c:26107},v10583=[30971,63844],v10584=[12101,26041],
v10585={f:2,c:35060},v10586=[12137,30333],v10587=[12056,21340],v10588=[24489,63846],v10589=[36667,64007],v10590={f:2,c:23791},v10591=[19981,63847],v10592=[12119,29238],v10593=[12152,32566],v10594={f:2,c:33104},v10595=[12201,38428],v10596=[21271,63843],v10597=[12052,21269],v10598=[12112,27604],v10599={f:3,c:27606},v10600=[12206,38750],v10601=[12214,39131],v10602=[12240,40763],v10603=[12064,22763],v10604=[12077,23665],v10605=[27578,63856],v10606=[29376,63994],v10607=[22622,63852],v10608=[32034,63850],
v10609=[12170,33394],v10610=[12131,29983],v10611=[12233,40653],v10612=[12239,40736],v10613=[12067,22805],v10614=[12143,30707],v10615=[12166,33292],v10616=[35498,63855,63905],v10617=[30465,63853],v10618=[12073,23567],v10619=[29575,63841,63963],v10620=[12095,25163],v10621=[25976,63849],v10622=[12116,27700],v10623={f:2,c:38567},v10624=[12216,39318],v10625=[25342,63859],v10626=[12075,23608],v10627=[12142,30690],v10628=[12144,31034],v10629=[12183,35925],v10630=[35672,63996],v10631=[12215,39135],v10632=
[12162,33251],v10633=[12189,36523],v10634=[12191,36763],v10635=[12092,24515],v10636=[20160,63997],v10637=[12055,21313],v10638=[12114,27663],v10639=[12123,29273],v10640=[24801,63929],v10641=[27138,63764,63836,63935],v10642=[33509,63860],v10643=[12154,32650],v10644=[12226,39770],v10645=[12180,35328],v10646=[26131,63968],v10647=[33865,63854],v10648=[12127,29577],v10649=[12129,29926],v10650={f:2,c:31401},v10651=[38446,63942],v10652=[12104,26352],v10653=[12132,29992],v10654=[12060,21448],v10655=[12124,
29275],v10656=[12155,32701],v10657=[12204,38632],v10658=[12105,26376],v10659=[12209,38859],v10660={f:2,c:24188},v10661={f:2,c:24840},v10662={f:2,c:26977},v10663={f:2,c:29494},v10664=[12195,37193],v10665=[12161,32905],v10666=[12160,32895],v10667=[12036,20057],v10668=[12211,38899],v10669=[12194,37009],v10670=[12176,34915],v10671=[12038,20108],v10672=[30064,63842],v10673=[12157,32780],v10674=[12159,32819],v10675=[12040,20154],v10676=[21693,63902],v10677=[12032,19968],v10678=[12103,26085],v10679=[12042,
20837],v10680=[21050,63999],v10681=[12070,23376],v10682=[28825,63995],v10683=[12163,33258],v10684=[12199,38263],v10685=[12186,36196],v10686=[12133,3E4],v10687=[20999,64E3],v10688=[12237,40718],v10689=[12241,40778],v10690=[12118,29226],v10691=[12227,40165],v10692=[12188,36275],v10693=[12168,33311],v10694=[12187,36208],v10695=[12149,31481],v10696=[12096,25903],v10697=[12108,27490],v10698=[12164,33267],v10699=[12192,36784,63857],v10700=[12190,36554,63746],v10701=[21443,63851],v10702={f:2,c:24920},v10703=
[25299,64002],v10704=[12167,33307],v10705=[12205,38737],v10706=[12171,33400],v10707=[12072,23544],v10708=[12242,40786],v10709=[27784,63858],v10710=[12063,22303],v10711=[12043,20843],v10712=[12185,35997],v10713=[20415,63845],v10714=[12122,29255],v10715=[26292,64006],v10716=[12213,39080],v10717=[12138,30382],v10718=[27852,63848],v10719=[12134,30091],v10720={f:2,c:38289},v10721=[12175,34892,64008],v10722=[12217,39321],v10723=[12208,38761],v10724=[12126,29572],v10725=[12147,31348],v10726=[12174,34880],
v10727=[12212,38913],v10728=[29801,63918],v10729=[12094,25142],v10730=[12117,28779],v10731=[12146,31166],v10732={f:2,c:30906},v10733=[28369,63748],v10734={f:2,c:26179},v10735=[12232,40643],v10736=[12120,29243],v10737=[26248,63941],v10738=[12234,40657],v10739=[12107,27424],v10740={f:2,c:29113},v10741={s:163},v10742={f:4,c:12310},v10743={s:14},v10744={f:2,c:8314},v10745={s:7},v10746={f:2,c:8317},v10747={s:23},v10748={s:44},v10749={s:20},v10750={f:10,c:10122},v10751={s:36},v10752={f:26,c:9398},v10753=
{s:61},v10754={f:2,c:8826},v10755={f:2,c:8910},v10756={f:2,c:8832},v10757={f:4,c:8816},v10758={f:2,c:8822},v10759={f:2,c:8922},v10760={s:5},v10761={s:78},v10762={s:11},v10763={s:4},v10764={s:4},v10765={s:4},v10766={f:2,c:8249},v10767={s:16},v10768={s:3},v10769={s:24},v10770={s:6},v10771={f:10,c:10102},v10772={s:17},v10773={s:13},v10774={f:2,c:8741},v10775={f:2,c:8806},v10776={f:3,c:8853},v10777={f:2,c:8814},v10778={f:2,c:8891},v10779={s:6},v10780={s:11},v10781={s:3},v10782={s:4},v10783={f:5,c:9327},
v10784={s:18},v10785={s:37},v10786={s:8},v10787={s:14},v10788={s:10},v10789={f:2,c:8644},v10790={s:144},v10791={f:5,c:9347},v10792={s:33},v10793={s:15},v10794={s:93},v10795={s:4},v10796={s:20},v10797={s:76},v10798={f:6,c:12938},v10799={s:15},v10800={f:2,c:12318},v10801={s:3},v10802={f:2,c:44034},v10803={f:2,c:44037},v10804={f:5,c:44043},v10805={f:2,c:44062},v10806={f:3,c:44065},v10807={f:7,c:44069},v10808={f:6,c:44082},v10809={f:2,c:44090},v10810={f:3,c:44093},v10811={f:10,c:44097},v10812={f:6,c:44110},
v10813={f:3,c:44117},v10814={f:3,c:44121},v10815={f:19,c:44125},v10816={f:2,c:44146},v10817={f:2,c:44149},v10818={f:5,c:44155},v10819={f:2,c:44167},v10820={f:3,c:44173},v10821={f:3,c:44177},v10822={f:7,c:44181},v10823={f:6,c:44194},v10824={f:2,c:44205},v10825={f:7,c:44209},v10826={f:3,c:44222},v10827={f:2,c:44226},v10828={f:3,c:44229},v10829={f:3,c:44233},v10830={f:8,c:44237},v10831={f:8,c:44248},v10832={f:2,c:44258},v10833={f:2,c:44261},v10834={f:2,c:44269},v10835={f:5,c:44279},v10836={f:2,c:44286},
v10837={f:3,c:44289},v10838={f:5,c:44295},v10839={f:6,c:44306},v10840={f:3,c:44313},v10841={f:3,c:44317},v10842={f:8,c:44321},v10843={f:2,c:44330},v10844={f:6,c:44334},v10845={f:2,c:44342},v10846={f:3,c:44345},v10847={f:7,c:44349},v10848={f:6,c:44362},v10849={f:3,c:44369},v10850={f:3,c:44373},v10851={f:8,c:44377},v10852={f:8,c:44388},v10853={f:2,c:44398},v10854={f:2,c:44401},v10855={f:4,c:44407},v10856={f:5,c:44419},v10857={f:2,c:44426},v10858={f:3,c:44429},v10859={f:11,c:44433},v10860={f:6,c:44446},
v10861={f:18,c:44453},v10862={f:8,c:44472},v10863={f:2,c:44482},v10864={f:3,c:44485},v10865={f:7,c:44489},v10866={f:8,c:44500},v10867={f:3,c:44509},v10868={f:3,c:44513},v10869={f:19,c:44517},v10870={f:2,c:44538},v10871={f:2,c:44541},v10872={f:6,c:44546},v10873={f:6,c:44558},v10874={f:27,c:44565},v10875={f:2,c:44594},v10876={f:2,c:44597},v10877={f:5,c:44603},v10878={f:3,c:44615},v10879={f:3,c:44625},v10880={f:5,c:44631},v10881={f:3,c:44642},v10882={f:2,c:44646},v10883={f:2,c:44650},v10884={f:3,c:44653},
v10885={f:7,c:44657},v10886={f:6,c:44670},v10887={f:6,c:44678},v10888={f:47,c:44685},v10889={f:3,c:44737},v10890={f:7,c:44741},v10891={f:6,c:44754},v10892={f:2,c:44762},v10893={f:11,c:44765},v10894={f:2,c:44777},v10895={f:6,c:44782},v10896={f:3,c:44789},v10897={f:3,c:44793},v10898={f:10,c:44797},v10899={f:4,c:44809},v10900={f:2,c:44814},v10901={f:27,c:44817},v10902={f:2,c:44846},v10903={f:7,c:44853},v10904={f:4,c:44868},v10905={f:6,c:44874},v10906={f:11,c:44881},v10907={f:6,c:44894},v10908={f:19,
c:44902},v10909={f:6,c:44922},v10910={f:3,c:44929},v10911={f:3,c:44933},v10912={f:7,c:44937},v10913={f:3,c:44946},v10914={f:6,c:44950},v10915={f:27,c:44957},v10916={f:2,c:44986},v10917={f:3,c:44989},v10918={f:6,c:44993},v10919={f:5,c:45007},v10920={f:7,c:45013},v10921={f:11,c:45021},v10922={f:6,c:45034},v10923={f:2,c:45042},v10924={f:3,c:45045},v10925={f:7,c:45049},v10926={f:2,c:45058},v10927={f:7,c:45061},v10928={f:3,c:45069},v10929={f:3,c:45073},v10930={f:7,c:45077},v10931={f:10,c:45086},v10932=
{f:27,c:45097},v10933={f:2,c:45126},v10934={f:4,c:45135},v10935={f:3,c:45146},v10936={f:30,c:45150},v10937={f:2,c:45182},v10938={f:3,c:45185},v10939={f:7,c:45189},v10940={f:6,c:45202},v10941={f:2,c:45213},v10942={f:5,c:45219},v10943={f:2,c:45238},v10944={f:3,c:45241},v10945={f:7,c:45245},v10946={f:6,c:45258},v10947={f:2,c:45266},v10948={f:3,c:45269},v10949={f:7,c:45273},v10950={f:4,c:45281},v10951={f:34,c:45286},v10952={f:3,c:45325},v10953={f:4,c:45332},v10954={f:5,c:45342},v10955={f:2,c:45350},v10956=
{f:3,c:45353},v10957={f:7,c:45357},v10958={f:6,c:45370},v10959={f:2,c:45378},v10960={f:3,c:45381},v10961={f:7,c:45385},v10962={f:2,c:45394},v10963={f:2,c:45398},v10964={f:3,c:45401},v10965={f:3,c:45405},v10966={f:23,c:45409},v10967={f:2,c:45434},v10968={f:3,c:45437},v10969={f:5,c:45443},v10970={f:4,c:45454},v10971={f:3,c:45461},v10972={f:3,c:45465},v10973={f:11,c:45469},v10974={f:35,c:45481},v10975={f:3,c:45517},v10976={f:3,c:45521},v10977={f:7,c:45525},v10978={f:8,c:45536},v10979={f:2,c:45546},v10980=
{f:3,c:45549},v10981={f:8,c:45553},v10982={f:6,c:45566},v10983={f:2,c:45574},v10984={f:2,c:45577},v10985={f:7,c:45581},v10986={f:6,c:45594},v10987={f:19,c:45601},v10988={f:7,c:45621},v10989={f:27,c:45629},v10990={f:3,c:45657},v10991={f:3,c:45661},v10992={f:7,c:45665},v10993={f:10,c:45674},v10994={f:6,c:45686},v10995={f:7,c:45693},v10996={f:3,c:45702},v10997={f:6,c:45706},v10998={f:2,c:45714},v10999={f:3,c:45717},v11000={f:5,c:45723},v11001={f:3,c:45735},v11002={f:3,c:45741},v11003={f:3,c:45745},v11004=
{f:19,c:45749},v11005={f:2,c:45770},v11006={f:3,c:45773},v11007={f:5,c:45779},v11008={f:4,c:45790},v11009={f:2,c:45801},v11010={f:3,c:45808},v11011={f:3,c:45820},v11012={f:2,c:45826},v11013={f:3,c:45829},v11014={f:7,c:45833},v11015={f:6,c:45846},v11016={f:55,c:45853},v11017={f:2,c:45913},v11018={f:4,c:45920},v11019={f:2,c:45932},v11020={f:2,c:45938},v11021={f:3,c:45941},v11022={f:7,c:45945},v11023={f:6,c:45958},v11024={f:3,c:45965},v11025={f:3,c:45969},v11026={f:11,c:45973},v11027={f:6,c:45986},v11028=
{f:3,c:45993},v11029={f:23,c:45997},v11030={f:2,c:46022},v11031={f:2,c:46025},v11032={f:3,c:46033},v11033={f:2,c:46046},v11034={f:3,c:46049},v11035={f:3,c:46053},v11036={f:19,c:46057},v11037={f:19,c:46077},v11038={f:7,c:46097},v11039={f:3,c:46105},v11040={f:3,c:46109},v11041={f:7,c:46113},v11042={f:8,c:46124},v11043={f:27,c:46133},v11044={f:2,c:46162},v11045={f:3,c:46165},v11046={f:7,c:46169},v11047={f:6,c:46182},v11048={f:19,c:46189},v11049={f:7,c:46209},v11050={f:20,c:46217},v11051={f:6,c:46238},
v11052={f:3,c:46245},v11053={f:3,c:46249},v11054={f:8,c:46253},v11055={f:6,c:46266},v11056={f:3,c:46273},v11057={f:3,c:46277},v11058={f:7,c:46281},v11059={f:4,c:46289},v11060={f:6,c:46294},v11061={f:2,c:46302},v11062={f:2,c:46305},v11063={f:5,c:46311},v11064={f:6,c:46322},v11065={f:27,c:46329},v11066={f:2,c:46358},v11067={f:2,c:46361},v11068={f:7,c:46365},v11069={f:5,c:46379},v11070={f:2,c:46386},v11071={f:3,c:46389},v11072={f:7,c:46393},v11073={f:5,c:46406},v11074={f:2,c:46414},v11075={f:3,c:46417},
v11076={f:7,c:46421},v11077={f:62,c:46434},v11078={f:2,c:46498},v11079={f:3,c:46501},v11080={f:4,c:46508},v11081={f:5,c:46518},v11082={f:2,c:46526},v11083={f:3,c:46529},v11084={f:7,c:46533},v11085={f:6,c:46546},v11086={f:19,c:46553},v11087={f:35,c:46573},v11088={f:2,c:46610},v11089={f:3,c:46613},v11090={f:12,c:46617},v11091={f:6,c:46630},v11092={f:7,c:46637},v11093={f:19,c:46645},v11094={f:27,c:46665},v11095={f:3,c:46693},v11096={f:51,c:46697},v11097={f:2,c:46750},v11098={f:3,c:46753},v11099={f:6,
c:46757},v11100={f:4,c:46765},v11101={f:34,c:46770},v11102={f:27,c:46805},v11103={f:3,c:46833},v11104={f:3,c:46837},v11105={f:7,c:46841},v11106={f:3,c:46850},v11107={f:34,c:46854},v11108={f:2,c:46890},v11109={f:2,c:46893},v11110={f:7,c:46897},v11111={f:8,c:46908},v11112={f:3,c:46917},v11113={f:3,c:46921},v11114={f:7,c:46925},v11115={f:10,c:46934},v11116={f:3,c:46945},v11117={f:3,c:46949},v11118={f:7,c:46953},v11119={f:6,c:46966},v11120={f:2,c:46974},v11121={f:3,c:46977},v11122={f:7,c:46981},v11123=
{f:3,c:46995},v11124={f:2,c:47002},v11125={f:3,c:47005},v11126={f:7,c:47009},v11127={f:6,c:47022},v11128={f:2,c:47030},v11129={f:14,c:47033},v11130={f:34,c:47050},v11131={f:2,c:47086},v11132={f:3,c:47089},v11133={f:7,c:47093},v11134={f:5,c:47106},v11135={f:2,c:47114},v11136={f:3,c:47117},v11137={f:7,c:47121},v11138={f:6,c:47134},v11139={f:2,c:47142},v11140={f:3,c:47145},v11141={f:7,c:47149},v11142={f:6,c:47162},v11143={f:3,c:47169},v11144={f:12,c:47173},v11145={f:8,c:47188},v11146={f:2,c:47198},v11147=
{f:3,c:47201},v11148={f:7,c:47205},v11149={f:6,c:47218},v11150={f:3,c:47225},v11151={f:16,c:47229},v11152={f:26,c:47246},v11153={f:7,c:47273},v11154={f:3,c:47281},v11155={f:3,c:47285},v11156={f:7,c:47289},v11157={f:6,c:47302},v11158={f:3,c:47309},v11159={f:3,c:47313},v11160={f:8,c:47317},v11161={f:6,c:47330},v11162={f:2,c:47338},v11163={f:3,c:47341},v11164={f:7,c:47345},v11165={f:6,c:47358},v11166={f:19,c:47365},v11167={f:7,c:47385},v11168={f:27,c:47393},v11169={f:2,c:47422},v11170={f:3,c:47425},
v11171={f:7,c:47429},v11172={f:2,c:47437},v11173={f:6,c:47442},v11174={f:2,c:47450},v11175={f:3,c:47453},v11176={f:7,c:47457},v11177={f:6,c:47470},v11178={f:2,c:47478},v11179={f:3,c:47481},v11180={f:7,c:47485},v11181={f:2,c:47499},v11182={f:29,c:47503},v11183={f:2,c:47534},v11184={f:3,c:47537},v11185={f:7,c:47541},v11186={f:6,c:47554},v11187={f:2,c:47562},v11188={f:5,c:47571},v11189={f:2,c:47583},v11190={f:2,c:47590},v11191={f:3,c:47593},v11192={f:7,c:47597},v11193={f:5,c:47611},v11194={f:6,c:47618},
v11195={f:12,c:47625},v11196={f:34,c:47638},v11197={f:2,c:47674},v11198={f:3,c:47677},v11199={f:5,c:47683},v11200={f:4,c:47695},v11201={f:2,c:47702},v11202={f:3,c:47705},v11203={f:7,c:47709},v11204={f:6,c:47722},v11205={f:2,c:47730},v11206={f:3,c:47733},v11207={f:10,c:47737},v11208={f:4,c:47752},v11209={f:27,c:47757},v11210={f:3,c:47789},v11211={f:5,c:47795},v11212={f:6,c:47806},v11213={f:3,c:47813},v11214={f:15,c:47817},v11215={f:34,c:47834},v11216={f:3,c:47869},v11217={f:3,c:47873},v11218={f:8,
c:47877},v11219={f:6,c:47890},v11220={f:3,c:47897},v11221={f:3,c:47901},v11222={f:8,c:47905},v11223={f:8,c:47916},v11224={f:2,c:47929},v11225={f:5,c:47935},v11226={f:3,c:47946},v11227={f:3,c:47953},v11228={f:3,c:47957},v11229={f:8,c:47961},v11230={f:8,c:47972},v11231={f:27,c:47981},v11232={f:3,c:48009},v11233={f:3,c:48013},v11234={f:19,c:48017},v11235={f:3,c:48037},v11236={f:3,c:48041},v11237={f:7,c:48045},v11238={f:2,c:48053},v11239={f:8,c:48056},v11240={f:3,c:48065},v11241={f:3,c:48069},v11242=
{f:7,c:48073},v11243={f:2,c:48081},v11244={f:36,c:48084},v11245={f:2,c:48122},v11246={f:2,c:48125},v11247={f:5,c:48131},v11248={f:2,c:48146},v11249={f:2,c:48153},v11250={f:4,c:48160},v11251={f:3,c:48170},v11252={f:2,c:48174},v11253={f:2,c:48178},v11254={f:3,c:48181},v11255={f:7,c:48185},v11256={f:3,c:48198},v11257={f:2,c:48202},v11258={f:2,c:48206},v11259={f:12,c:48209},v11260={f:38,c:48222},v11261={f:2,c:48262},v11262={f:2,c:48265},v11263={f:5,c:48271},v11264={f:5,c:48283},v11265={f:2,c:48290},v11266=
{f:2,c:48293},v11267={f:7,c:48297},v11268={f:6,c:48310},v11269={f:2,c:48318},v11270={f:3,c:48321},v11271={f:8,c:48325},v11272={f:3,c:48338},v11273={f:2,c:48342},v11274={f:3,c:48345},v11275={f:23,c:48349},v11276={f:3,c:48377},v11277={f:7,c:48381},v11278={f:6,c:48394},v11279={f:3,c:48401},v11280={f:15,c:48405},v11281={f:7,c:48421},v11282={f:19,c:48429},v11283={f:7,c:48449},v11284={f:2,c:48458},v11285={f:3,c:48461},v11286={f:7,c:48465},v11287={f:10,c:48474},v11288={f:3,c:48485},v11289={f:23,c:48489},
v11290={f:2,c:48514},v11291={f:2,c:48517},v11292={f:5,c:48523},v11293={f:3,c:48534},v11294={f:7,c:48541},v11295={f:11,c:48549},v11296={f:7,c:48561},v11297={f:27,c:48569},v11298={f:2,c:48598},v11299={f:3,c:48601},v11300={f:12,c:48605},v11301={f:6,c:48618},v11302={f:3,c:48625},v11303={f:3,c:48629},v11304={f:7,c:48633},v11305={f:2,c:48641},v11306={f:6,c:48646},v11307={f:2,c:48654},v11308={f:3,c:48657},v11309={f:7,c:48661},v11310={f:36,c:48672},v11311={f:2,c:48710},v11312={f:3,c:48713},v11313={f:5,c:48719},
v11314={f:4,c:48732},v11315={f:2,c:48738},v11316={f:3,c:48741},v11317={f:5,c:48747},v11318={f:5,c:48758},v11319={f:2,c:48766},v11320={f:3,c:48769},v11321={f:7,c:48773},v11322={f:6,c:48786},v11323={f:14,c:48794},v11324={f:39,c:48809},v11325={f:2,c:48850},v11326={f:2,c:48853},v11327={f:7,c:48857},v11328={f:2,c:48865},v11329={f:6,c:48870},v11330={f:20,c:48877},v11331={f:6,c:48898},v11332={f:14,c:48906},v11333={f:34,c:48926},v11334={f:2,c:48962},v11335={f:3,c:48965},v11336={f:7,c:48969},v11337={f:3,c:48978},
v11338={f:62,c:48982},v11339={f:27,c:49045},v11340={f:20,c:49073},v11341={f:6,c:49094},v11342={f:2,c:49102},v11343={f:3,c:49105},v11344={f:7,c:49109},v11345={f:2,c:49117},v11346={f:90,c:49122},v11347={f:20,c:49213},v11348={f:6,c:49234},v11349={f:3,c:49241},v11350={f:3,c:49245},v11351={f:7,c:49249},v11352={f:38,c:49258},v11353={f:2,c:49298},v11354={f:3,c:49301},v11355={f:7,c:49305},v11356={f:6,c:49318},v11357={f:2,c:49329},v11358={f:5,c:49335},v11359={f:3,c:49346},v11360={f:2,c:49350},v11361={f:2,
c:49354},v11362={f:3,c:49357},v11363={f:7,c:49361},v11364={f:6,c:49374},v11365={f:2,c:49382},v11366={f:3,c:49385},v11367={f:7,c:49389},v11368={f:6,c:49402},v11369={f:3,c:49409},v11370={f:3,c:49413},v11371={f:7,c:49417},v11372={f:4,c:49425},v11373={f:6,c:49430},v11374={f:2,c:49441},v11375={f:4,c:49448},v11376={f:4,c:49458},v11377={f:2,c:49466},v11378={f:3,c:49469},v11379={f:7,c:49473},v11380={f:6,c:49486},v11381={f:2,c:49494},v11382={f:3,c:49497},v11383={f:7,c:49501},v11384={f:6,c:49514},v11385={f:3,
c:49521},v11386={f:3,c:49525},v11387={f:12,c:49529},v11388={f:6,c:49542},v11389={f:3,c:49553},v11390={f:5,c:49559},v11391={f:3,c:49570},v11392={f:2,c:49574},v11393={f:2,c:49578},v11394={f:3,c:49581},v11395={f:12,c:49585},v11396={f:6,c:49598},v11397={f:3,c:49605},v11398={f:3,c:49609},v11399={f:7,c:49613},v11400={f:2,c:49621},v11401={f:7,c:49625},v11402={f:3,c:49633},v11403={f:3,c:49637},v11404={f:7,c:49641},v11405={f:8,c:49652},v11406={f:2,c:49662},v11407={f:3,c:49665},v11408={f:7,c:49669},v11409=
{f:6,c:49682},v11410={f:2,c:49690},v11411={f:2,c:49693},v11412={f:7,c:49697},v11413={f:19,c:49717},v11414={f:7,c:49737},v11415={f:2,c:49746},v11416={f:3,c:49749},v11417={f:7,c:49753},v11418={f:4,c:49761},v11419={f:6,c:49766},v11420={f:2,c:49774},v11421={f:3,c:49777},v11422={f:7,c:49781},v11423={f:6,c:49794},v11424={f:6,c:49802},v11425={f:7,c:49809},v11426={f:2,c:49817},v11427={f:6,c:49822},v11428={f:2,c:49830},v11429={f:3,c:49833},v11430={f:6,c:49838},v11431={f:34,c:49850},v11432={f:2,c:49886},v11433=
{f:2,c:49889},v11434={f:6,c:49893},v11435={f:4,c:49906},v11436={f:3,c:49917},v11437={f:7,c:49921},v11438={f:2,c:49930},v11439={f:5,c:49934},v11440={f:2,c:49942},v11441={f:3,c:49945},v11442={f:7,c:49949},v11443={f:2,c:49958},v11444={f:27,c:49962},v11445={f:34,c:49990},v11446={f:2,c:50026},v11447={f:3,c:50029},v11448={f:5,c:50035},v11449={f:2,c:50042},v11450={f:6,c:50046},v11451={f:3,c:50053},v11452={f:3,c:50057},v11453={f:51,c:50061},v11454={f:23,c:50113},v11455={f:2,c:50138},v11456={f:2,c:50141},
v11457={f:5,c:50147},v11458={f:3,c:50154},v11459={f:6,c:50158},v11460={f:2,c:50166},v11461={f:15,c:50169},v11462={f:7,c:50185},v11463={f:19,c:50193},v11464={f:7,c:50213},v11465={f:3,c:50221},v11466={f:3,c:50225},v11467={f:7,c:50229},v11468={f:10,c:50238},v11469={f:27,c:50249},v11470={f:2,c:50278},v11471={f:3,c:50281},v11472={f:7,c:50285},v11473={f:3,c:50294},v11474={f:6,c:50298},v11475={f:19,c:50305},v11476={f:7,c:50325},v11477={f:27,c:50333},v11478={f:3,c:50361},v11479={f:44,c:50365},v11480={f:6,
c:50410},v11481={f:2,c:50418},v11482={f:3,c:50421},v11483={f:4,c:50427},v11484={f:10,c:50434},v11485={f:3,c:50445},v11486={f:3,c:50449},v11487={f:7,c:50453},v11488={f:11,c:50461},v11489={f:2,c:50474},v11490={f:3,c:50477},v11491={f:7,c:50481},v11492={f:6,c:50494},v11493={f:2,c:50502},v11494={f:4,c:50511},v11495={f:3,c:50522},v11496={f:2,c:50530},v11497={f:3,c:50533},v11498={f:7,c:50537},v11499={f:6,c:50550},v11500={f:2,c:50558},v11501={f:3,c:50561},v11502={f:2,c:50565},v11503={f:4,c:50568},v11504=
{f:3,c:50578},v11505={f:3,c:50585},v11506={f:3,c:50589},v11507={f:8,c:50593},v11508={f:10,c:50602},v11509={f:2,c:50614},v11510={f:5,c:50623},v11511={f:2,c:50642},v11512={f:3,c:50645},v11513={f:7,c:50649},v11514={f:6,c:50662},v11515={f:3,c:50673},v11516={f:4,c:50680},v11517={f:3,c:50690},v11518={f:3,c:50697},v11519={f:3,c:50701},v11520={f:7,c:50705},v11521={f:7,c:50717},v11522={f:2,c:50726},v11523={f:3,c:50729},v11524={f:2,c:50737},v11525={f:4,c:50748},v11526={f:2,c:50754},v11527={f:3,c:50757},v11528=
{f:7,c:50761},v11529={f:6,c:50774},v11530={f:2,c:50782},v11531={f:11,c:50785},v11532={f:2,c:50797},v11533={f:6,c:50802},v11534={f:2,c:50810},v11535={f:3,c:50813},v11536={f:7,c:50817},v11537={f:6,c:50830},v11538={f:2,c:50838},v11539={f:3,c:50841},v11540={f:7,c:50845},v11541={f:6,c:50858},v11542={f:2,c:50866},v11543={f:3,c:50869},v11544={f:5,c:50875},v11545={f:6,c:50886},v11546={f:2,c:50894},v11547={f:3,c:50897},v11548={f:7,c:50901},v11549={f:2,c:50910},v11550={f:6,c:50914},v11551={f:2,c:50922},v11552=
{f:3,c:50925},v11553={f:7,c:50929},v11554={f:3,c:50938},v11555={f:6,c:50942},v11556={f:2,c:50950},v11557={f:3,c:50953},v11558={f:7,c:50957},v11559={f:6,c:50970},v11560={f:2,c:50978},v11561={f:3,c:50981},v11562={f:7,c:50985},v11563={f:4,c:51E3},v11564={f:2,c:51006},v11565={f:3,c:51009},v11566={f:5,c:51013},v11567={f:3,c:51033},v11568={f:3,c:51037},v11569={f:7,c:51041},v11570={f:2,c:51049},v11571={f:8,c:51052},v11572={f:2,c:51062},v11573={f:3,c:51065},v11574={f:4,c:51071},v11575={f:3,c:51083},v11576=
{f:2,c:51090},v11577={f:5,c:51099},v11578={f:5,c:51111},v11579={f:2,c:51118},v11580={f:3,c:51121},v11581={f:7,c:51125},v11582={f:6,c:51138},v11583={f:2,c:51146},v11584={f:7,c:51153},v11585={f:4,c:51161},v11586={f:6,c:51166},v11587={f:3,c:51173},v11588={f:3,c:51177},v11589={f:19,c:51181},v11590={f:2,c:51202},v11591={f:3,c:51205},v11592={f:5,c:51211},v11593={f:5,c:51223},v11594={f:2,c:51230},v11595={f:3,c:51233},v11596={f:7,c:51237},v11597={f:6,c:51250},v11598={f:3,c:51257},v11599={f:3,c:51261},v11600=
{f:7,c:51265},v11601={f:2,c:51274},v11602={f:6,c:51278},v11603={f:27,c:51285},v11604={f:2,c:51314},v11605={f:3,c:51317},v11606={f:5,c:51323},v11607={f:3,c:51336},v11608={f:6,c:51342},v11609={f:8,c:51349},v11610={f:6,c:51362},v11611={f:19,c:51369},v11612={f:6,c:51390},v11613={f:3,c:51397},v11614={f:3,c:51401},v11615={f:7,c:51405},v11616={f:6,c:51418},v11617={f:2,c:51426},v11618={f:16,c:51429},v11619={f:6,c:51446},v11620={f:2,c:51454},v11621={f:3,c:51457},v11622={f:5,c:51463},v11623={f:6,c:51474},v11624=
{f:19,c:51481},v11625={f:7,c:51501},v11626={f:27,c:51509},v11627={f:2,c:51538},v11628={f:3,c:51541},v11629={f:7,c:51545},v11630={f:8,c:51556},v11631={f:3,c:51565},v11632={f:3,c:51569},v11633={f:7,c:51573},v11634={f:11,c:51581},v11635={f:2,c:51594},v11636={f:3,c:51597},v11637={f:7,c:51601},v11638={f:34,c:51614},v11639={f:2,c:51650},v11640={f:2,c:51653},v11641={f:5,c:51659},v11642={f:2,c:51671},v11643={f:2,c:51678},v11644={f:2,c:51685},v11645={f:4,c:51688},v11646={f:6,c:51698},v11647={f:2,c:51706},
v11648={f:3,c:51709},v11649={f:7,c:51713},v11650={f:6,c:51726},v11651={f:3,c:51733},v11652={f:16,c:51737},v11653={f:34,c:51754},v11654={f:2,c:51790},v11655={f:3,c:51793},v11656={f:7,c:51797},v11657={f:6,c:51810},v11658={f:20,c:51817},v11659={f:6,c:51838},v11660={f:19,c:51845},v11661={f:35,c:51865},v11662={f:2,c:51902},v11663={f:3,c:51905},v11664={f:7,c:51909},v11665={f:4,c:51924},v11666={f:6,c:51930},v11667={f:11,c:51937},v11668={f:7,c:51949},v11669={f:19,c:51957},v11670={f:7,c:51977},v11671={f:3,
c:51985},v11672={f:3,c:51989},v11673={f:7,c:51993},v11674={f:31,c:52002},v11675={f:6,c:52034},v11676={f:2,c:52042},v11677={f:3,c:52045},v11678={f:7,c:52049},v11679={f:3,c:52058},v11680={f:6,c:52062},v11681={f:19,c:52069},v11682={f:34,c:52090},v11683={f:27,c:52125},v11684={f:27,c:52153},v11685={f:15,c:52181},v11686={f:2,c:52197},v11687={f:34,c:52202},v11688={f:2,c:52238},v11689={f:3,c:52241},v11690={f:7,c:52245},v11691={f:3,c:52254},v11692={f:4,c:52259},v11693={f:2,c:52266},v11694={f:7,c:52273},v11695=
{f:5,c:52287},v11696={f:2,c:52294},v11697={f:3,c:52297},v11698={f:7,c:52301},v11699={f:6,c:52314},v11700={f:3,c:52321},v11701={f:7,c:52329},v11702={f:4,c:52337},v11703={f:34,c:52342},v11704={f:2,c:52378},v11705={f:3,c:52381},v11706={f:7,c:52385},v11707={f:6,c:52398},v11708={f:2,c:52406},v11709={f:3,c:52409},v11710={f:7,c:52413},v11711={f:6,c:52426},v11712={f:3,c:52433},v11713={f:15,c:52437},v11714={f:7,c:52453},v11715={f:3,c:52461},v11716={f:16,c:52465},v11717={f:6,c:52482},v11718={f:2,c:52490},v11719=
{f:3,c:52493},v11720={f:7,c:52497},v11721={f:6,c:52510},v11722={f:3,c:52517},v11723={f:3,c:52521},v11724={f:12,c:52525},v11725={f:34,c:52538},v11726={f:3,c:52573},v11727={f:3,c:52577},v11728={f:7,c:52581},v11729={f:6,c:52594},v11730={f:15,c:52601},v11731={f:11,c:52617},v11732={f:2,c:52630},v11733={f:3,c:52633},v11734={f:7,c:52637},v11735={f:6,c:52650},v11736={f:19,c:52657},v11737={f:7,c:52677},v11738={f:3,c:52685},v11739={f:23,c:52689},v11740={f:3,c:52713},v11741={f:3,c:52717},v11742={f:7,c:52721},
v11743={f:6,c:52734},v11744={f:3,c:52741},v11745={f:3,c:52745},v11746={f:7,c:52749},v11747={f:4,c:52757},v11748={f:6,c:52762},v11749={f:2,c:52770},v11750={f:3,c:52773},v11751={f:7,c:52777},v11752={f:34,c:52790},v11753={f:2,c:52826},v11754={f:2,c:52829},v11755={f:6,c:52834},v11756={f:6,c:52846},v11757={f:2,c:52854},v11758={f:3,c:52857},v11759={f:7,c:52861},v11760={f:6,c:52874},v11761={f:2,c:52882},v11762={f:3,c:52885},v11763={f:7,c:52889},v11764={f:6,c:52902},v11765={f:19,c:52910},v11766={f:34,c:52930},
v11767={f:2,c:52966},v11768={f:2,c:52969},v11769={f:7,c:52973},v11770={f:6,c:52986},v11771={f:2,c:52994},v11772={f:3,c:52997},v11773={f:7,c:53001},v11774={f:6,c:53014},v11775={f:3,c:53021},v11776={f:3,c:53025},v11777={f:7,c:53029},v11778={f:6,c:53042},v11779={f:27,c:53049},v11780={f:2,c:53078},v11781={f:3,c:53081},v11782={f:7,c:53085},v11783={f:6,c:53098},v11784={f:2,c:53106},v11785={f:3,c:53109},v11786={f:7,c:53113},v11787={f:4,c:53121},v11788={f:6,c:53126},v11789={f:20,c:53133},v11790={f:6,c:53154},
v11791={f:7,c:53161},v11792={f:19,c:53169},v11793={f:27,c:53189},v11794={f:2,c:53218},v11795={f:3,c:53221},v11796={f:7,c:53225},v11797={f:6,c:53238},v11798={f:3,c:53245},v11799={f:3,c:53249},v11800={f:12,c:53253},v11801={f:6,c:53266},v11802={f:20,c:53273},v11803={f:6,c:53294},v11804={f:2,c:53302},v11805={f:3,c:53305},v11806={f:7,c:53309},v11807={f:6,c:53322},v11808={f:3,c:53329},v11809={f:3,c:53333},v11810={f:7,c:53337},v11811={f:11,c:53345},v11812={f:2,c:53358},v11813={f:3,c:53361},v11814={f:7,c:53365},
v11815={f:3,c:53374},v11816={f:34,c:53378},v11817={f:2,c:53414},v11818={f:3,c:53417},v11819={f:7,c:53421},v11820={f:6,c:53434},v11821={f:2,c:53442},v11822={f:3,c:53445},v11823={f:6,c:53450},v11824={f:6,c:53462},v11825={f:2,c:53470},v11826={f:3,c:53473},v11827={f:7,c:53477},v11828={f:6,c:53490},v11829={f:20,c:53497},v11830={f:34,c:53518},v11831={f:2,c:53554},v11832={f:3,c:53557},v11833={f:5,c:53563},v11834={f:6,c:53574},v11835={f:2,c:53582},v11836={f:3,c:53585},v11837={f:7,c:53589},v11838={f:6,c:53602},
v11839={f:3,c:53609},v11840={f:15,c:53613},v11841={f:7,c:53629},v11842={f:3,c:53637},v11843={f:23,c:53641},v11844={f:2,c:53666},v11845={f:3,c:53669},v11846={f:7,c:53673},v11847={f:4,c:53686},v11848={f:3,c:53693},v11849={f:23,c:53697},v11850={f:27,c:53721},v11851={f:3,c:53749},v11852={f:14,c:53753},v11853={f:6,c:53770},v11854={f:27,c:53777},v11855={f:2,c:53806},v11856={f:3,c:53809},v11857={f:7,c:53813},v11858={f:6,c:53826},v11859={f:19,c:53833},v11860={f:7,c:53853},v11861={f:27,c:53861},v11862={f:2,
c:53890},v11863={f:3,c:53893},v11864={f:7,c:53897},v11865={f:3,c:53906},v11866={f:6,c:53910},v11867={f:3,c:53917},v11868={f:3,c:53921},v11869={f:7,c:53925},v11870={f:4,c:53933},v11871={f:6,c:53938},v11872={f:2,c:53946},v11873={f:2,c:53949},v11874={f:5,c:53955},v11875={f:8,c:53964},v11876={f:3,c:53973},v11877={f:3,c:53977},v11878={f:7,c:53981},v11879={f:10,c:53990},v11880={f:2,c:54002},v11881={f:3,c:54005},v11882={f:7,c:54009},v11883={f:6,c:54022},v11884={f:3,c:54033},v11885={f:5,c:54039},v11886={f:3,
c:54050},v11887={f:2,c:54054},v11888={f:2,c:54058},v11889={f:3,c:54061},v11890={f:7,c:54065},v11891={f:6,c:54078},v11892={f:54,c:54086},v11893={f:2,c:54142},v11894={f:3,c:54145},v11895={f:7,c:54149},v11896={f:6,c:54162},v11897={f:2,c:54170},v11898={f:3,c:54173},v11899={f:7,c:54177},v11900={f:6,c:54190},v11901={f:3,c:54197},v11902={f:3,c:54201},v11903={f:7,c:54205},v11904={f:2,c:54214},v11905={f:6,c:54218},v11906={f:7,c:54225},v11907={f:8,c:54233},v11908={f:8,c:54244},v11909={f:2,c:54254},v11910={f:3,
c:54257},v11911={f:7,c:54261},v11912={f:6,c:54274},v11913={f:20,c:54281},v11914={f:34,c:54302},v11915={f:3,c:54337},v11916={f:23,c:54341},v11917={f:3,c:54365},v11918={f:3,c:54369},v11919={f:8,c:54373},v11920={f:8,c:54384},v11921={f:2,c:54394},v11922={f:2,c:54397},v11923={f:5,c:54403},v11924={f:6,c:54414},v11925={f:20,c:54421},v11926={f:34,c:54442},v11927={f:3,c:54477},v11928={f:3,c:54481},v11929={f:7,c:54485},v11930={f:2,c:54493},v11931={f:8,c:54496},v11932={f:3,c:54505},v11933={f:3,c:54509},v11934=
{f:7,c:54513},v11935={f:2,c:54521},v11936={f:6,c:54526},v11937={f:3,c:54533},v11938={f:3,c:54537},v11939={f:7,c:54541},v11940={f:36,c:54552},v11941={f:2,c:54590},v11942={f:3,c:54593},v11943={f:7,c:54597},v11944={f:6,c:54610},v11945={f:2,c:54618},v11946={f:3,c:54621},v11947={f:4,c:54625},v11948={f:2,c:54630},v11949={f:6,c:54638},v11950={f:2,c:54646},v11951={f:3,c:54649},v11952={f:7,c:54653},v11953={f:6,c:54666},v11954={f:20,c:54673},v11955={f:34,c:54694},v11956={f:2,c:54730},v11957={f:3,c:54733},v11958=
{f:5,c:54739},v11959={f:6,c:54750},v11960={f:2,c:54758},v11961={f:3,c:54761},v11962={f:7,c:54765},v11963={f:6,c:54778},v11964={f:2,c:54786},v11965={f:3,c:54789},v11966={f:7,c:54793},v11967={f:6,c:54806},v11968={f:3,c:54813},v11969={f:3,c:54817},v11970={f:8,c:54821},v11971={f:10,c:54830},v11972={f:2,c:54842},v11973={f:3,c:54845},v11974={f:4,c:54849},v11975={f:2,c:54854},v11976={f:3,c:54862},v11977={f:2,c:54866},v11978={f:2,c:54870},v11979={f:3,c:54873},v11980={f:10,c:54877},v11981={f:6,c:54890},v11982=
{f:2,c:54898},v11983={f:14,c:54901},v11984={f:6,c:54918},v11985={f:2,c:54926},v11986={f:3,c:54929},v11987={f:8,c:54933},v11988={f:6,c:54946},v11989={f:3,c:54953},v11990={f:3,c:54957},v11991={f:8,c:54961},v11992={f:8,c:54972},v11993={f:2,c:54982},v11994={f:3,c:54985},v11995={f:4,c:54989},v11996={f:2,c:54994},v11997={f:2,c:54997},v11998={f:6,c:55002},v11999={f:3,c:55009},v12000={f:3,c:55013},v12001={f:7,c:55017},v12002={f:4,c:55025},v12003={f:6,c:55030},v12004={f:2,c:55038},v12005={f:3,c:55041},v12006=
{f:12,c:55045},v12007={f:6,c:55058},v12008={f:2,c:55066},v12009={f:3,c:55069},v12010={f:7,c:55073},v12011={f:6,c:55086},v12012={f:2,c:55094},v12013={f:3,c:55097},v12014={f:7,c:55101},v12015={f:2,c:55109},v12016={f:6,c:55114},v12017={f:2,c:55122},v12018={f:6,c:55130},v12019={f:3,c:55142},v12020={f:2,c:55146},v12021={f:3,c:55149},v12022={f:3,c:55153},v12023={f:7,c:55157},v12024={f:3,c:55166},v12025={f:6,c:55170},v12026={f:2,c:55178},v12027={f:3,c:55181},v12028={f:7,c:55185},v12029={f:6,c:55198},v23615=
[v9683,8361,8208,169,0,0,v9684,v9685,12539,8229,v9686,168,12291,v9687,8214,65340,65374,v9688,v9689,v9690,v9691,177,215,247,8800,v9692,8734,8756,176,v9693,8451,8491,v9694,65509,9794,9792,8736,8869,8978,8706,8711,8801,8786,167,8251,9734,9733,9675,9679,9678,9671,9670,9633,9632,9651,9650,9661,9660,8594,v9695,v9696,12307,171,187,8730,8765,8733,8757,v9697,8712,8715,v9698,v9699,8746,8745,v9700,65506,8658,8660,8704,8707,180,732,711,728,733,730,729,184,731,161,191,8758,8750,8721,8719,164,8457,8240,9665,9664,
9655,9654,9828,v9701,9829,9831,9827,9673,9672,9635,v9702,9618,v9703,9640,9639,9638,9641,9832,9743,9742,9756,9758,182,v9704,8597,8599,8601,8598,8600,9837,v9705,9836,12927,12828,8470,13255,8482,13250,13272,8481,v9706,65510,v9707,65507,v9708,v9709,v9710,v9711,v9712,v9713,v9714,v9715,9472,9474,9484,9488,9496,9492,9500,9516,9508,9524,9532,9473,9475,9487,9491,9499,9495,9507,9523,9515,9531,9547,9504,9519,9512,9527,9535,9501,9520,9509,9528,9538,9490,9489,9498,9497,9494,9493,9486,9485,v9716,v9717,v9718,v9719,
v9720,v9721,v9722,v9723,v9724,v9725,v9726,v9727,8467,13208,13252,v9728,v9729,13258,v9730,13263,v9731,13256,v9732,v9733,v9734,v9735,v9736,8486,v9737,v9738,13270,13253,v9739,13275,v9740,13277,13264,13267,13251,13257,13276,13254,198,208,170,294,306,319,321,216,338,186,222,358,330,v9741,v9742,v9743,189,v9744,188,190,v9745,230,273,240,295,305,307,312,320,322,248,339,223,254,359,331,329,v9746,v9747,v9748,185,v9749,8308,8319,v9750,v9751,v9752,v9753,1025,v9754,1105,v9755,v9756,44036,v9757,v9758,v9759,44064,
44068,v9760,v9761,v9762,44092,44096,44107,44109,44116,44120,44124,v9763,44148,v9764,44154,v9765,v9766,v9767,44176,44180,v9768,v9769,v9770,44204,v9771,v9772,v9773,44225,44228,44232,44236,44245,44247,v9774,44260,v9775,44266,44268,v9776,44275,v9777,v9778,44288,44292,44294,v9779,44303,44305,44312,44316,44320,44329,v9780,v9781,44344,44348,v9782,44359,44361,44368,44372,44376,44385,44387,v9783,44400,v9784,v9785,44415,v9786,v9787,44428,44432,v9788,44452,44471,v9789,44484,44488,v9790,44499,44508,44512,44516,
v9791,44540,v9792,v9793,44555,44557,44564,v9794,44596,v9795,44602,v9796,44611,v9797,44618,v9798,44624,44628,44630,v9799,v9800,44645,v9801,44652,44656,v9802,v9803,v9804,44684,v9805,44736,44740,v9806,v9807,v9808,44764,44776,44779,44781,44788,44792,44796,v9809,44813,44816,v9810,44848,44850,44852,v9811,44863,v9812,v9813,44880,v9814,v9815,44921,44928,44932,44936,v9816,44949,44956,v9817,44988,44992,v9818,45003,v9819,45012,45020,v9820,v9821,45044,45048,v9822,45060,45068,45072,45076,v9823,45096,v9824,45128,
45130,45132,45134,v9825,45143,45145,45149,v9826,45184,45188,v9827,45199,45201,v9828,45212,v9829,v9830,v9831,45233,v9832,45240,45244,v9833,v9834,v9835,45268,45272,45280,45285,v9836,v9837,45328,v9838,v9839,v9840,v9841,45352,45356,v9842],v23617=[v9843,v9844,45380,45384,v9845,v9846,45400,45404,45408,v9847,45436,45440,45442,v9848,45451,45453,v9849,45464,45468,45480,45516,45520,45524,v9850,45535,v9851,45548,45552,45561,45563,45565,v9852,45576,v9853,v9854,45591,45593,45600,45620,45628,45656,45660,45664,
v9855,v9856,45692,v9857,45705,v9858,45716,v9859,v9860,45731,v9861,45738,45740,45744,45748,v9862,45772,45776,45778,v9863,45787,45789,45794,v9864,45800,v9865,v9866,v9867,v9868,45828,45832,v9869,v9870,45852,v9871,45912,v9872,v9873,v9874,45927,45929,45931,45934,v9875,45940,45944,v9876,v9877,45964,45968,45972,v9878,45992,45996,v9879,46024,v9880,46030,46032,v9881,46039,46041,46043,46045,46048,46052,46056,46076,46096,46104,46108,46112,v9882,46123,46132,v9883,46164,46168,v9884,46179,46181,46188,46208,46216,
46237,46244,46248,46252,46261,46263,46265,46272,46276,46280,46288,46293,v9885,46304,v9886,46310,v9887,46319,46321,46328,v9888,46360,v9889,v9890,v9891,v9892,46388,46392,v9893,v9894,v9895,46416,46420,v9896,v9897,v9898,46500,46504,v9899,v9900,v9901,v9902,46528,46532,v9903,v9904,46552,46572,v9905,46612,46616,46629,46636,46644,46664,46692,46696,v9906,46752,46756,v9907,46769,46804,46832,46836,46840,v9908,46853,v9909,46892,v9910,v9911,46907,46916,46920,46924,v9912,46944,46948,46952,v9913,46963,46965,v9914,
46976,46980,v9915,v9916,v9917,47004,47008,v9918,v9919,v9920,47032,47047,47049,v9921,47088,47092,v9922,v9923,v9924,47116,47120,v9925,47131,47133,v9926,47144,47148,v9927,v9928,47168,47172,47185,47187,v9929,47200,47204,v9930,47215,47217,47224,47228,47245,47272,47280,47284,47288,v9931,47299,47301,47308,47312,47316,47325,47327,47329,v9932,47340,47344,v9933,47355,47357,47364,47384,47392,v9934,47424,47428,47436,47439,47441,v9935,47452,47456,v9936,47467,47469,v9937,47480,47484,v9938,47495,v9939,v9940,v9941,
47536,47540,v9942,47551,47553,v9943,47564,v9944,v9945,47579,v9946,47585,v9947,47592,47596,v9948,v9949,v9950,47624,47637,v9951,47676,47680,47682,v9952,47691,v9953,v9954,47704,47708,v9955,v9956,v9957,47732,47736,v9958,47751,47756,v9959,v9960,47792,47794,v9961,47803,47805,47812,47816,v9962,47868,47872,47876,47885,47887,47889,47896,47900,47904,47913,47915,v9963,47928,v9964,v9965,47943,47945,47949,v9966,47956,47960,47969,47971,47980,48008,48012,48016,48036,48040,48044,48052,48055,48064,48068,48072,48080,
48083,v9967,48124,v9968,48130,v9969,v9970,48143,48145,v9971,v9972,v9973,48167,48169,48173,v9974,48180,48184,v9975,v9976,48201,v9977,48208,48221,v9978,48264,v9979,48270,v9980,48279,v9981,v9982,48292,v9983,v9984,v9985,v9986,48320,48324,48333,v9987,48341,48344,48348,v9988,48376,48380,v9989,48391,48393,48400,48404,48420,48428,48448,v9990,48460,48464,v9991,48484,48488,v9992,48516,v9993,v9994,48531,48533,v9995,48540,48548,48560,48568,v9996,48600,48604,48617,48624,48628,48632,48640,48643,48645,v9997,48656,
48660,v9998,48671,v9999,48712,48716,48718,v10000,48727,v10001,v10002,48740,48744,48746,v10003,v10004,v10005,48768,48772,v10006,v10007,v10008,48808,v10009,48852,v10010,48864,v10011,48876,48897,v10012,v10013,v10014,v10015,48964,48968,v10016],v23619=[48981,49044,49072,49093,v10017,49104,49108,49116,49119,49121,49212,49233,49240,49244,49248,v10018,v10019,49300,49304,v10020,49315,49317,v10021,v10022,v10023,v10024,v10025,49349,v10026,49356,49360,v10027,v10028,v10029,49384,49388,v10030,49399,49401,49408,
49412,49416,49424,49429,v10031,v10032,v10033,v10034,v10035,49462,v10036,49468,49472,v10037,v10038,v10039,49496,49500,v10040,v10041,49520,49524,49528,49541,v10042,49552,49556,49558,v10043,49567,49569,49573,v10044,49580,49584,49597,49604,49608,49612,49620,v10045,49632,49636,49640,v10046,49651,v10047,49664,49668,v10048,49679,49681,v10049,49692,v10050,v10051,49707,49709,49711,v10052,49716,49736,v10053,49748,49752,49760,49765,v10054,49776,49780,v10055,49791,49793,v10056,49808,49816,49819,49821,v10057,
49832,v10058,v10059,49847,49849,v10060,49888,v10061,v10062,49903,49905,49910,v10063,v10064,49920,v10065,v10066,v10067,49944,49948,v10068,v10069,49989,v10070,50028,50032,50034,v10071,v10072,50052,50056,50060,50112,v10073,50140,v10074,50146,v10075,50157,v10076,50168,50184,50192,50212,50220,50224,50228,v10077,50248,v10078,50280,50284,v10079,50297,50304,50324,50332,50360,50364,50409,v10080,50420,50424,50426,v10081,50444,50448,50452,50460,v10082,50476,50480,v10083,50491,50493,v10084,v10085,v10086,v10087,
v10088,v10089,v10090,50532,50536,v10091,v10092,v10093,50560,50564,50567,v10094,50575,50577,50581,v10095,50588,50592,50601,v10096,v10097,v10098,v10099,50636,50638,v10100,50644,50648,v10101,50659,50661,v10102,50672,50676,v10103,v10104,v10105,50700,50704,v10106,v10107,v10108,50728,v10109,50736,v10110,50743,50745,50747,v10111,50756,50760,v10112,v10113,v10114,50784,50796,50799,50801,v10115,50812,50816,v10116,50827,50829,v10117,50840,50844,v10118,50855,50857,v10119,50868,v10120,v10121,50883,50885,v10122,
50896,50900,v10123,v10124,v10125,50924,50928,v10126,50941,v10127,50952,50956,v10128,50967,50969,v10129,50980,50984,v10130,50995,50997,50999,v10131,51008,51012,51018,v10132,51023,v10133,51036,51040,51048,51051,v10134,51064,v10135,v10136,v10137,51086,v10138,51092,v10139,51098,v10140,v10141,v10142,51120,51124,v10143,v10144,v10145,51148,51150,51152,51160,51165,51172,51176,51180,v10146,51204,51208,51210,v10147,51219,v10148,v10149,51232,51236,v10150,51247,51249,51256,51260,51264,v10151,v10152,51284,v10153,
51316,51320,51322,v10154,51331,v10155,v10156,51348,51357,51359,51361,51368,v10157,51396,51400,51404,v10158,51415,51417,v10159,51428,51445,v10160,51456,v10161,v10162,51471,51473,51480,51500,51508,v10163,51540,51544,v10164,51555,51564,51568,51572,51580,v10165,51596,51600,v10166,51611,51613,v10167,51652,v10168,51658,v10169,51667,v10170,v10171,v10172,51680,51682,51684,51687,v10173,v10174,v10175,51708,51712,v10176,v10177,51732,51736,51753,v10178,51792,51796,v10179,v10180,51816,51837,51844,51864,v10181,
51904,51908,v10182,51919,51921,51923,v10183,51936,51948,51956,51976,51984,51988,51992,v10184,52033,v10185,52044,52048,v10186,52061,52068,v10187,52124,52152,52180,52196,52199,52201,v10188,52240,52244,v10189,v10190,v10191,52268,52270,52272,v10192,v10193,v10194,52296,52300,v10195,v10196,52320,52324,52326,52328,52336,52341,v10197,52380,52384,v10198,v10199,v10200,52408,52412,v10201,52423,52425,52432,52436,52452,52460],v23621=[52464,52481,v10202,52492,52496,v10203,52507,52509,52516,52520,52524,52537,52572,
52576,52580,v10204,52591,52593,52600,52616,v10205,52632,52636,v10206,52647,52649,52656,52676,52684,52688,52712,52716,52720,v10207,52731,52733,52740,52744,52748,52756,52761,v10208,52772,52776,v10209,52787,52789,v10210,52828,v10211,v10212,52843,52845,v10213,52856,52860,v10214,52871,52873,v10215,52884,52888,v10216,v10217,v10218,52929,v10219,52968,v10220,v10221,v10222,v10223,52996,53E3,v10224,53011,53013,53020,53024,53028,v10225,v10226,53048,v10227,53080,53084,v10228,53095,53097,v10229,53108,53112,53120,
53125,53132,53153,53160,53168,53188,v10230,53220,53224,v10231,53235,53237,53244,53248,53252,53265,53272,53293,v10232,53304,53308,v10233,53319,53321,53328,53332,53336,53344,v10234,53360,53364,v10235,53377,v10236,53416,53420,v10237,53431,53433,v10238,53444,v10239,v10240,v10241,v10242,53472,53476,v10243,v10244,53496,53517,v10245,53556,53560,53562,v10246,v10247,v10248,53584,53588,v10249,53599,53601,53608,53612,53628,53636,53640,v10250,53668,53672,v10251,53683,53685,53690,53692,53696,53720,53748,53752,
53767,53769,53776,v10252,53808,53812,v10253,53823,53825,53832,53852,53860,v10254,53892,53896,v10255,53909,53916,53920,53924,53932,53937,v10256,53948,v10257,53954,v10258,53963,53972,53976,53980,v10259,v10260,54004,54008,v10261,54019,54021,v10262,54032,54036,54038,v10263,v10264,54053,v10265,54060,54064,v10266,v10267,v10268,v10269,54144,54148,v10270,v10271,v10272,54172,54176,v10273,54187,54189,54196,54200,54204,v10274,v10275,54224,54232,54241,54243,v10276,54256,54260,v10277,54271,54273,54280,54301,54336,
54340,54364,54368,54372,54381,54383,v10278,54396,v10279,54402,v10280,54411,54413,54420,54441,54476,54480,54484,54492,54495,54504,54508,54512,54520,54523,54525,54532,54536,54540,v10281,54551,v10282,54592,54596,v10283,54607,54609,v10284,54620,54624,54629,v10285,54635,54637,v10286,54648,54652,v10287,v10288,54672,54693,v10289,54732,54736,54738,v10290,54747,54749,v10291,54760,54764,v10292,54775,54777,v10293,54788,54792,v10294,v10295,54812,54816,54820,54829,v10296,54844,54848,54853,v10297,54859,54861,54865,
v10298,54872,54876,54887,54889,v10299,54900,54915,54917,v10300,54928,54932,54941,54943,54945,54952,54956,54960,54969,54971,v10301,54984,54988,54993,54996,54999,55001,55008,55012,55016,55024,55029,v10302,55040,55044,55057,v10303,55068,55072,v10304,55083,55085,v10305,55096,55100,55108,55111,55113,v10306,55124,v10307,v10308,55139,55141,55145,55148,55152,55156,v10309,55169,v10310,55180,55184,v10311,55195,55197,20285,20339,20551,20729,21152,21487,21621,21733,22025,23233,23478,26247,v10312,26607,27468,
29634,30146,31292,33499,33540,34903,34952,35382,v10313,36303,36603,36838,39381,21051,21364,21508,24682,24932,27580,29647,33050,35258,v10314,38307,20355,21002,22718,22904,23014,v10315,24185,25031,25536,26438,26604,26751,28567,30286,30475,30965,31240,31487,31777,32925,v10316,33393,35563,38291,20075,21917,26359,28212,30883,31469,33883,35088,34638,38824,21208,22350,22570,23884,24863,25022,25121,25954,26577,27204,28187,v10317,30131,30435,30640,32058,37039,v10318,40853,21283,23724,30002,32987,37440,38296,
21083,22536],v23623=[23004,23713,23831,24247,24378,24394,24951,27743,30074,30086,31968,32115,32177,32652,33108,33313,34193,35137,35611,37628,v10319,40007,20171,20215,20491,20977,22607,24887,24894,24936,25913,27114,28433,30117,30342,30422,31623,33445,33995,37799,38283,21888,23458,22353,31923,32697,37301,20520,21435,23621,24040,25298,25454,25818,25831,28192,28844,31067,36317,36382,36989,37445,37624,20094,20214,20581,v10320,24314,24838,26967,33137,34388,36423,37749,39467,20062,20625,26480,26688,20745,
21133,21138,27298,30652,37392,40660,21163,24623,36850,20552,25001,25581,25802,26684,27268,28608,33160,35233,38548,22533,29309,v10321,29956,32121,32365,32937,v10322,35700,36963,40273,25225,27770,28500,32080,32570,35363,20860,24906,31645,35609,37463,37772,20140,20435,20510,20670,20742,21185,21197,21375,22384,22659,24218,24465,24950,25004,25806,25964,26223,26299,v10323,26775,28039,28805,28913,29855,29861,29898,30169,30828,30956,31455,31478,32069,32147,32789,32831,33051,33686,35686,36629,36885,37857,
38915,38968,39514,39912,20418,21843,22586,v10324,23395,23622,24760,25106,26690,26800,26856,28330,30028,30328,30926,31293,31995,32363,32380,35336,35489,35903,38542,40388,21476,21481,21578,21617,22266,22993,23396,23611,24235,25335,25911,25925,25970,26272,26543,27073,27837,30204,30352,30590,31295,32660,32771,32929,33167,33510,33533,33776,34241,34865,34996,35493,36764,37678,38599,39015,v10325,v10326,21741,26011,26354,26767,31296,v10327,40288,22256,22372,23825,26118,26801,26829,28414,29736,34974,39908,
27752,v10328,20379,20844,20849,21151,23380,v10329,24656,24685,25329,25511,25915,29657,31354,34467,36002,38799,v10330,23521,v10331,26524,v10332,31185,33747,35463,35506,36328,36942,37707,38982,v10333,27112,34303,37101,20896,23448,23532,24931,26874,27454,28748,29743,29912,31649,32592,33733,35264,36011,38364,39208,21038,24669,25324,36866,20362,20809,21281,22745,24291,26336,27960,28826,29378,29654,31568,33009,37979,21350,25499,32619,20054,20608,22602,22750,24618,24871,25296,27088,39745,23439,32024,32945,
36703,20132,20689,21676,21932,23308,23968,24039,25898,25934,26657,27211,29409,30350,30703,32094,32761,33184,34126,34527,36611,36686,37066,39171,39509,39851,19992,20037,20061,20167,20465,20855,21246,21312,v10334,v10335,21646,22036,22389,22434,23495,23943,24272,25084,25304,25937,26552,26601,27083,27472,27590,27628,27714,28317,28792,29399,29590,29699,30655,30697,31350,32127,32777,v10336,33285,33290,33503,34914,35635,36092,36544,36881,37041,37476,37558,39378,39493,40169,40407,v10337,22283,23616,33738,
38816,38827,40628,21531,31384,32676,35033,36557,37089,22528,23624,25496,31391,23470,v10338,31353,31406,33422,36524,20518,21048,21240,21367,22280,25331,25458,27402,28099,30519,21413,29527,34152,36470,38357,26426,27331,28528,35437,36556,39243,26231,27512,36020,v10339,21483,22317,22862,25542,27131,29674,30789,31418,31429,31998,33909,35215,36211,36917,38312,21243,22343,30023,31584,33740,37406,27224,20811,21067,21127,25119,26840,26997,38553,20677,21156,21220,25027,v10340,26681,27135,29822,31563,33465,
33771,35250,35641,36817,39241],v23625=[20170,22935,25810,26129,27278,29748,31105,31165,33449,v10341,35167,37670,20235,21450,24613,25201,27762,32026,32102,20120,20834,30684,32943,20225,20238,20854,20864,21980,22120,22331,22522,22524,22804,22855,22931,23492,23696,23822,v10342,24190,24524,25216,26071,26083,v10343,26462,26827,26820,27231,27450,27683,27773,27778,28103,29592,29734,29738,29826,29859,30072,30079,30849,30959,31041,v10344,31098,31637,32E3,32186,32648,32774,32813,32908,35352,35663,v10345,36215,
37665,37668,39138,39249,v10346,39525,40594,32202,20342,21513,25326,26708,v10347,21931,20794,23068,25062,v10348,25343,37027,v10349,26262,29014,38627,25423,25466,21335,26511,26976,28275,30007,32013,34930,22218,23064,20035,20839,v10350,26608,32784,v10351,v10352,v10353,v10354,v10355,24684,25288,v10356,v10357,23511,21162,22900,24361,v10358,29785,39377,28611,33215,36786,24817,33126,v10359,23273,35365,v10360,v10361,33021,23612,v10362,v10363,v10364,22810,v10365,v10366,20150,20294,21934,22296,22727,24406,
26039,26086,27264,27573,28237,30701,31471,31774,32222,34507,34962,37170,37723,25787,28606,29562,30136,36948,21846,22349,25018,25812,26311,28129,28251,28525,28601,30192,32835,33213,34113,35203,35527,35674,37663,27795,30035,31572,36367,36957,21776,22530,22616,24162,25095,25758,26848,30070,v10367,34739,40680,20195,22408,22382,v10368,23565,23729,24118,24453,25140,25825,29619,33274,34955,36024,38538,40667,v10369,24503,24755,20498,v10370,21040,22294,22581,22615,23566,23648,23798,23947,v10371,24466,24764,
25361,25481,25623,26691,26873,27330,28120,28193,28372,28644,29182,30428,30585,31153,31291,33796,35241,36077,36339,36424,36867,36884,36947,37117,37709,38518,38876,27602,28678,29272,29346,29544,30563,31167,31716,32411,v10372,22697,24775,25958,26109,26302,27788,28958,29129,35930,38931,20077,31361,20189,20908,20941,21205,21516,24999,26481,26704,26847,v10373,28540,30140,30643,31461,33012,33891,37509,20828,v10374,26460,26515,30168,31431,33651,v10375,36887,38957,23663,33216,33434,36929,36975,37389,24471,
23965,27225,29128,30331,31561,34276,35588,37159,39472,v10376,v10377,v10378,v10379,v10380,v10381,v10382,v10383,v10384,v10385,v10386,32097,v10387,v10388,v10389,v10390,v10391,v10392,27410,28734,v10393,v10394,v10395,21068,36771,v10396,25829,25900,27414,v10397,31811,32412,v10398,v10399,35261,v10400,v10401,v10402,v10403,v10404,v10405,v10406,29701,29807,34690,v10407,v10408,23821,24480,33802,v10409,v10410,v10411,v10412,20486,v10413,v10414,v10415,27153,31918,31921,v10416,v10417,v10418,36635,v10419,20406,20791,
v10420,v10421,v10422,24942,25150,v10423,27354,v10424,v10425,34268,34851,v10426,39522,v10427,v10428,v10429,v10430,v10431,v10432,28701,31019,v10433,38722,v10434,v10435,25891,v10436,v10437,v10438,v10439,v10440,v10441,v10442,v10443,v10444,20925,v10445,v10446,27916,v10447,v10448,v10449,25986,v10450,28610,v10451,v10452,v10453,20278,v10454,23738,v10455,v10456,v10457,31533,v10458,32718,v10459,36894,v10460,v10461,v10462,v10463,40801,v10464,28583,v10465,v10466,v10467,v10468,25736,v10469,v10470,28510,28696,
v10471,v10472,v10473,v10474,v10475,v10476,36613,v10477,v10478,v10479,v10480,v10481,v10482,v10483,v10484,v10485,v10486,40595,v10487,v10488,v10489,26407,28711,29903,v10490],v23627=[v10491,20769,28712,v10492,v10493,v10494,36058,36084,v10495,v10496,v10497,v10498,24278,v10499,v10500,v10501,30637,32842,v10502,v10503,39719,v10504,v10505,23105,v10506,v10507,v10508,v10509,30267,v10510,v10511,34078,35128,37860,v10512,v10513,26066,v10514,27060,v10515,v10516,28687,v10517,29792,v10518,30244,v10519,35628,v10520,
v10521,v10522,v10523,20374,v10524,v10525,v10526,32184,v10527,v10528,v10529,v10530,v10531,v10532,v10533,v10534,v10535,26974,v10536,v10537,v10538,v10539,20442,v10540,21400,v10541,21774,v10542,24743,v10543,v10544,28012,29313,29432,v10545,29827,v10546,31852,v10547,32696,33673,v10548,v10549,v10550,37328,v10551,39881,v10552,28542,v10553,v10554,v10555,36522,v10556,v10557,v10558,v10559,v10560,29747,v10561,38678,30764,v10562,v10563,v10564,25705,29802,30194,30908,30952,v10565,39764,v10566,23518,24149,28448,
33180,33707,37E3,19975,21325,23081,24018,24398,24930,25405,26217,26364,28415,28459,28771,30622,33836,34067,34875,36627,39237,39995,21788,25273,26411,27819,33545,35178,38778,20129,22916,v10567,26395,32178,32596,33426,33579,33725,36638,37017,22475,22969,23186,23504,26151,26522,26757,27599,29028,32629,36023,36067,36993,39749,33032,35978,38476,39488,v10568,23391,27667,29467,30450,30431,33804,20906,35219,20813,20885,21193,26825,27796,30468,30496,32191,32236,v10569,40629,28357,34065,20901,21517,21629,26126,
26269,26919,28319,v10570,30609,33559,33986,34719,37225,37528,40180,34946,20398,20882,21215,22982,24125,24917,v10571,26286,26576,27169,27597,v10572,29279,29281,29761,30520,v10573,32791,33468,33541,35584,35624,35980,v10574,27792,29287,v10575,30566,31302,40361,27519,27794,22818,26406,33945,21359,22675,22937,24287,25551,26164,26483,28218,29483,31447,33495,37672,21209,24043,25006,25035,25098,25287,25771,v10576,26969,27494,v10577,28961,29687,30045,32326,33310,33538,34154,35491,36031,38695,40289,22696,40664,
20497,21006,21563,21839,v10578,27766,v10579,32862,34442,v10580,38639,21247,27797,29289,21619,23194,23614,23883,24396,24494,26410,26806,26979,28220,28228,30473,v10581,32654,34183,35598,36855,38753,40692,23735,24758,24845,25003,25935,v10582,27665,27887,29599,29641,32225,38292,23494,34588,35600,21085,21338,25293,25615,25778,26420,27192,27850,29632,29854,31636,31893,32283,33162,33334,34180,36843,38649,39361,20276,21322,21453,21467,25292,25644,25856,26001,27075,27886,28504,29677,30036,30242,30436,30460,
30928,v10583,31020,32070,33324,34784,36820,38930,39151,21187,25300,25765,28196,28497,30332,36299,37297,37474,39662,39747,20515,20621,22346,22952,23592,24135,24439,25151,25918,v10584,26049,26121,26507,27036,28354,30917,32033,32938,33152,33323,33459,33953,34444,35370,35607,37030,38450,40848,20493,20467,22521,24472,25308,25490,26479,28227,28953,30403,32972,32986,v10585,35097,36064,36649,37197,38506,20271,20336,24091,26575,26658,v10586,30334,39748,24161,27146,29033,29140,30058,32321,34115,34281,39132,
20240,31567,32624,38309,20961,24070,26805,27710,27726,27867,29359,31684,33539,27861,29754,20731,21128,22721,25816,27287,29863,30294,30887,34327,38370,38713,21342,24321,35722,36776,36783,37002,21029,30629,40009,40712,19993,20482,20853,23643,24183,26142],v23629=[26170,26564,26821,28851,29953,30149,31177,31453,36647,39200,39432,20445,22561,22577,23542,26222,27493,27921,28282,28541,29668,29995,33769,35036,35091,35676,36628,20239,20693,21264,v10587,23443,v10588,26381,31119,33145,33583,34068,35079,35206,
36665,v10589,39333,39954,26412,20086,20472,22857,23553,v10590,25447,26834,28925,29090,29739,32299,34028,34562,36898,37586,40179,v10591,20184,20463,20613,21078,21103,21542,21648,22496,22827,23142,23386,23413,23500,24220,25206,25975,26023,28014,28325,v10592,31526,31807,v10593,v10594,33178,33344,33433,33705,35331,36E3,36070,36091,36212,36282,37096,37340,v10595,38468,39385,40167,v10596,20998,21545,22132,22707,22868,22894,24575,24996,25198,26128,27774,28954,30406,31881,31966,32027,33452,36033,38640,20315,
24343,24447,25282,23849,26379,26842,30844,32323,40300,19989,20633,v10597,21290,21329,22915,23138,24199,24754,24970,25161,25209,26E3,26503,27047,v10598,v10599,27832,29749,30202,30738,30865,31189,31192,31875,32203,32737,32933,33086,33218,33778,34586,35048,35513,35692,36027,37145,v10600,v10601,v10602,22188,23338,24428,25996,27315,27567,27996,28657,28693,29277,29613,36007,36051,38971,24977,27703,32856,39425,20045,20107,20123,20181,20282,20284,20351,20447,20735,21490,21496,21766,21987,22235,v10603,22882,
23057,23531,23546,23556,24051,24107,24473,24605,25448,26012,26031,26614,26619,26797,27515,27801,27863,28195,28681,29509,30722,31038,31040,31072,31169,31721,32023,32114,32902,33293,33678,34001,34503,35039,35408,35422,35613,36060,36198,36781,37034,39164,39391,40605,21066,26388,20632,21034,v10604,25955,27733,29642,29987,30109,31639,33948,37240,38704,20087,25746,v10605,29022,34217,19977,26441,26862,28183,33439,34072,34923,25591,28545,37394,39087,19978,20663,20687,20767,21830,21930,22039,23360,23577,23776,
24120,24202,24224,24258,24819,26705,27233,28248,29245,29248,v10606,30456,31077,31665,32724,35059,35316,35443,35937,36062,38684,v10607,29885,36093,21959,31329,v10608,v10609,29298,v10610,29989,31513,22661,22779,23996,24207,24246,24464,24661,25234,25471,25933,26257,26329,26360,26646,26866,29312,29790,31598,32110,32214,32626,32997,33298,34223,35199,35475,36893,37604,v10611,v10612,v10613,22893,24109,24796,26132,26227,26512,27728,28101,28511,v10614,30889,33990,37323,37675,20185,20682,20808,21892,23307,
23459,25159,25982,26059,28210,29053,29697,29764,29831,29887,30316,31146,32218,32341,32680,33146,33203,33337,34330,34796,35445,36323,36984,37521,37925,39245,39854,21352,23633,26964,27844,27945,28203,v10615,34203,35131,35373,v10616,38634,40807,21089,26297,27570,32406,34814,36109,38275,38493,25885,28041,29166,22478,22995,23468,24615,24826,25104,26143,26207,29481,29689,30427,v10617,31596,32854,32882,33125,35488,37266,19990,21218,27506,27927,31237,31545,32048,36016,21484,22063,22609,23477,v10618,23569,
24034,25152,25475,25620,26157,26803,27836,28040,28335,28703,28836,29138,29990,30095,30094,30233,31505,31712,31787,32032,32057,34092,34157,34311,35380,36877,36961,37045,37559,38902,39479,20439,23660,26463,28049,31903,32396,35606,36118,36895,23403,24061,25613,33984,36956],v23631=[39137,v10619,23435,24730,26494,28126,35359,35494,36865,38924,21047,28753,30862,37782,34928,37335,20462,21463,22013,22234,22402,22781,23234,23432,23723,23744,24101,24833,25101,v10620,25480,25628,25910,v10621,27193,27530,v10622,
27929,28465,29159,29417,29560,29703,29874,30246,30561,31168,31319,31466,31929,32143,32172,32353,32670,33065,33585,33936,34010,34282,34966,35504,35728,36664,36930,36995,37228,37526,37561,38539,v10623,38614,38656,38920,v10624,39635,39706,21460,22654,22809,23408,23487,28113,28506,29087,29729,29881,32901,33789,24033,24455,24490,24642,26092,26642,26991,27219,27529,27957,28147,29667,30462,30636,31565,32020,33059,33308,33600,34036,34147,35426,35524,37255,37662,38918,39348,25100,34899,36848,37477,23815,23847,
23913,29791,33181,34664,28629,v10625,32722,35126,35186,19998,20056,20711,21213,21319,25215,26119,32361,34821,38494,20365,21273,22070,22987,23204,v10626,23630,23629,24066,24337,24643,26045,26159,26178,26558,26612,29468,v10627,v10628,32709,33940,33997,35222,35430,35433,35553,v10629,35962,22516,23508,24335,24687,25325,26893,27542,28252,29060,31698,34645,v10630,36606,v10631,39166,20280,20353,20449,21627,23072,23480,24892,26032,26216,29180,30003,31070,32051,33102,v10632,33688,34218,34254,34563,35338,v10633,
v10634,36805,22833,23460,23526,24713,23529,23563,v10635,27777,28145,28683,29978,33455,35574,v10636,v10637,38617,v10638,20126,20420,20818,21854,23077,23784,25105,v10639,33469,33706,34558,34905,35357,38463,38597,39187,40201,40285,22538,23731,23997,24132,v10640,24853,25569,v10641,28197,37122,37716,38990,39952,40823,23433,23736,25353,26191,26696,30524,38593,38797,38996,39839,26017,35585,36555,38332,21813,23721,24022,24245,26263,30284,33780,38343,22739,25276,29390,40232,20208,22830,24591,26171,27523,31207,
40230,21395,21696,22467,23830,24859,26326,28079,30861,33406,38552,38724,21380,25212,25494,28082,32266,33099,38989,27387,32588,40367,40474,20063,20539,20918,22812,24825,25590,26928,29242,32822,37326,24369,32004,v10642,33903,33979,34277,36493,20335,22756,23363,24665,25562,25880,25965,26264,26954,27171,27915,28673,29036,30162,30221,31155,31344,v10643,35140,35731,37312,38525,39178,22276,24481,26044,28417,30208,31142,35486,39341,v10644,40812,20740,25014,25233,27277,33222,20547,22576,24422,28937,v10645,
35578,23420,34326,20474,20796,22196,22852,25513,28153,23978,26989,20870,20104,20313,22914,27487,27741,29877,30998,33287,33349,33593,36671,36701,39192,20134,22495,24441,v10646,30123,32377,35695,36870,39515,22181,22567,23032,23071,23476,24310,25424,25403,26941,27783,27839,28046,28051,28149,28436,28895,28982,29017,29123,29141,30799,30831,31605,32227,32303,34893,36575,37467,40182,24709,28037,29105,38321,21421,26579,28814,28976,29744,33398,33490,38331,39653,40573,26308,29121,v10647,22603,23992,24433,26144,
26254,27001,27054,27704,27891,28214,28481,28634,28699,28719,29008,29151,29552,29787,29908,30408,31310,32403,33521,35424,36814,37704,38681,20034,20522,21E3,21473,26355,27757,28618,29450,30591,31330,33454,34269,34306,35028,35427,35709,35947,37555,38675,38928,20116,20237,20425],v23633=[20658,21320,21566,21555,21978,22626,22714,22887,23067,23524,24735,25034,25942,26111,26212,26791,27738,28595,28879,29100,29522,31613,34568,35492,39986,40711,23627,27779,29508,v10648,37434,28331,29797,30239,31337,32277,
34314,20800,22725,25793,29934,29973,30320,32705,37013,38605,39252,28198,v10649,v10650,33253,34521,34680,35355,23113,23436,23451,26785,26880,28003,29609,29715,29740,30871,32233,32747,33048,33109,33694,35916,v10651,38929,v10652,24448,26106,26505,27754,29579,20525,23043,27498,30702,22806,23916,24013,29477,30031,20709,20985,22575,22829,22934,23002,23525,23970,25303,25622,25747,25854,26332,27208,29183,29796,31368,31407,32327,32350,32768,33136,34799,35201,35616,36953,36992,39250,24958,27442,28020,32287,
35109,36785,20433,20653,20887,21191,22471,22665,23481,24248,24898,27029,28044,28263,28342,29076,29794,v10653,29996,32883,33592,33993,36362,37780,37854,20110,20305,20598,20778,v10654,21451,21491,23431,23507,23588,24858,24962,26100,v10655,29591,29760,30402,31056,31121,31161,32006,v10656,33419,34261,34398,36802,36935,37109,37354,38533,v10657,38633,21206,24423,26093,26161,26671,29020,31286,37057,38922,20113,27218,27550,28560,29065,32792,33464,34131,36939,38549,38642,38907,34074,39729,20112,29066,38596,
20803,21407,21729,22291,22290,22435,23195,23236,23491,24616,24895,25588,27781,27961,28274,28304,29232,29503,29783,33489,34945,36677,36960,38498,39E3,40219,v10658,36234,37470,20301,20553,20702,21361,22285,22996,23041,23561,24944,26256,28205,29234,29771,32239,32963,33806,33894,34111,34655,34907,35096,35586,36949,v10659,39759,20083,20369,20754,20842,21807,21929,23418,23461,v10660,24254,24736,24799,v10661,25540,25912,26377,26580,26586,v10662,27833,27943,28216,28641,v10663,29788,30001,30290,32173,33278,
33848,35029,35480,35547,35565,36400,36418,36938,36926,36986,v10664,37321,37742,22537,27603,v10665,32946,20801,22891,23609,28516,29607,32996,36103,37399,38287,v10666,25102,28700,32104,34701,22432,24681,24903,27575,35518,37504,38577,v10667,21535,28139,34093,38512,v10668,39150,25558,27875,v10669,20957,25033,33210,40441,20381,20506,20736,23452,24847,25087,25836,26885,27589,30097,30691,32681,33380,34191,34811,v10670,35516,35696,37291,v10671,20197,20234,22839,23016,24050,24347,24411,24609,29246,29669,v10672,
30157,31227,v10673,v10674,32900,33505,33617,36029,36019,36999,39156,39180,28727,30410,32714,32716,32764,35610,v10675,20161,20995,21360,v10676,22240,23035,23493,24341,24525,28270,32106,33589,34451,35469,38765,38775,v10677,20314,20350,22777,v10678,28322,36920,37808,39353,20219,22764,22922,23001,24641,31252,33615,36035,v10679,21316,20173,21097,23381,33471,20180,v10680,21672,22985,23039,v10681,23383,23388,24675,24904,28363,v10682,29038,29574,29943,30133,30913,32043,32773,v10683,33576,34071,34249,35566,
36039,38604,20316,21242,22204,26027,26152,28796,28856,29237,32189,33421,37196,38592,40306,23409,26855,27544,28538,30430,23697,26283,28507,31668,31786,34870,38620,19976,20183,21280,22580,22715,22767,22892,23559,24115,24196,24373,25484,26290,26454,27167,27299,27404,28479,29254,29520,29835,31456,31911],v23635=[33144,33247,33255,33674,33900,34083,34196,34255,35037,36115,37292,v10684,38556,20877,21705,22312,23472,25165,26448,26685,26771,28221,28371,28797,32289,35009,36001,36617,40779,40782,29229,31631,
35533,37658,20295,20302,20786,21632,22992,24213,25269,26485,26990,27159,27822,28186,29401,29482,30141,31672,32053,33511,33785,33879,34295,35419,36015,36487,36889,37048,38606,40799,21219,21514,23265,23490,25688,25973,28404,29380,30340,31309,31515,31821,32318,32735,33659,35627,36042,v10685,36321,36447,36842,36857,36969,37841,20291,20346,20659,20840,20856,21069,21098,22625,22652,22880,23560,23637,24283,24731,25136,26643,27583,27656,28593,29006,29728,v10686,30008,30033,30322,31564,31627,31661,31686,32399,
35438,36670,36681,37439,37523,37666,37931,38651,39002,39019,39198,v10687,25130,25240,27993,30308,31434,31680,32118,21344,23742,24215,28472,28857,31896,38673,39822,40670,25509,25722,34678,19969,20117,20141,20572,20597,21576,22979,23450,24128,24237,24311,24449,24773,25402,25919,25972,26060,26230,26232,26622,26984,27273,27491,27712,28096,28136,28191,28254,28702,28833,29582,29693,30010,30555,30855,31118,31243,31357,31934,32142,33351,35330,35562,35998,37165,37194,37336,37478,37580,37664,38662,38742,38748,
38914,v10688,21046,21137,21884,22564,24093,24351,24716,25552,26799,28639,31085,31532,33229,34234,35069,35576,36420,37261,38500,38555,38717,38988,v10689,20430,20806,20939,21161,22066,24340,24427,25514,25805,26089,26177,26362,26361,26397,26781,26839,27133,28437,28526,29031,29157,v10690,29866,30522,31062,31066,31199,31264,31381,31895,31967,32068,32368,32903,34299,34468,35412,35519,36249,36481,36896,36973,37347,38459,38613,v10691,26063,31751,v10692,37827,23384,23562,21330,25305,29469,20519,23447,24478,
24752,24939,26837,28121,29742,31278,32066,32156,32305,33131,36394,36405,37758,37912,20304,22352,24038,24231,25387,32618,20027,20303,20367,20570,23005,32964,21610,21608,22014,22863,23449,24030,24282,26205,26417,26609,26666,27880,27954,28234,28557,28855,29664,30087,31820,32002,32044,32162,v10693,34523,35387,35461,v10694,36490,36659,36913,37198,37202,37956,39376,v10695,31909,20426,20737,20934,22472,23535,23803,26201,27197,27994,28310,28652,28940,30063,31459,34850,36897,36981,38603,39423,33537,20013,
20210,34886,37325,21373,27355,26987,27713,33914,22686,24974,26366,25327,28893,29969,30151,32338,33976,35657,36104,20043,21482,21675,22320,22336,24535,25345,25351,25711,v10696,26088,26234,26525,26547,v10697,27744,27802,28460,30693,30757,31049,31063,32025,32930,33026,v10698,33437,33463,34584,35468,36100,36286,36978,30452,31257,31287,32340,32887,21767,21972,22645,25391,25634,26185,26187,26733,27035,27524,27941,28337,29645,29800,29857,30043,30137,30433,30494,30603,31206,32265,32285,33275,34095,34967,
35386,36049,36587,v10699,36914,37805,38499,38515,38663,20356,21489,23018,23241,24089,26702,29894,30142,31209,31378,33187,34541,36074,36300,36845,26015,26389,22519,28503,32221,36655,37878,38598,24501,25074,28548,19988,20376,20511,21449,21983,23919,24046,27425,27492,30923,31642,36425,v10700,36974,25417,25662],v23637=[30528,31364,37679,38015,40810,25776,28591,29158,29864,29914,31428,31762,32386,31922,32408,35738,36106,38013,39184,39244,21049,23519,25830,26413,32046,20717,v10701,22649,v10702,25082,26028,
31449,35730,35734,20489,20513,21109,21809,23100,24288,24432,24884,25950,26124,26166,26274,27085,28356,28466,29462,30241,31379,33081,33369,33750,33980,20661,22512,23488,23528,24425,25505,30758,32181,33756,34081,37319,37365,20874,26613,31574,36012,20932,22971,24765,34389,20508,21076,23610,24957,25114,v10703,25842,26021,28364,30240,33034,36448,38495,38587,20191,21315,21912,22825,24029,25797,27849,28154,29588,31359,v10704,34214,36068,36368,36983,37351,38369,38433,38854,20984,21746,21894,24505,25764,28552,
32180,36639,36685,37941,20681,23574,27838,28155,29979,30651,31805,31844,35449,35522,22558,22974,24086,25463,29266,30090,30571,35548,36028,36626,24307,26228,28152,32893,33729,35531,v10705,39894,21059,26367,28053,28399,32224,35558,36910,36958,39636,21021,21119,21736,24980,25220,25307,26786,26898,26970,27189,28818,28966,30813,30977,30990,31186,31245,32918,v10706,33493,33609,34121,35970,36229,37218,37259,37294,20419,22225,29165,30679,34560,35320,v10707,24534,26449,37032,21474,22618,23541,24740,24961,
25696,32317,32880,34085,37507,25774,20652,23828,26368,22684,25277,25512,26894,27E3,27166,28267,30394,31179,33467,33833,35535,36264,36861,37138,37195,37276,37648,37656,37786,38619,39478,39949,19985,30044,31069,31482,31569,31689,32302,33988,36441,36468,36600,36880,26149,26943,29763,20986,26414,40668,20805,24544,27798,34802,34909,34935,24756,33205,33795,36101,21462,21561,22068,23094,23601,28810,32736,32858,33030,33261,36259,37257,39519,40434,20596,20164,21408,24827,28204,23652,20360,20516,21988,23769,
24159,24677,26772,27835,28100,29118,30164,30196,30305,31258,31305,32199,32251,32622,33268,34473,36636,38601,39347,v10708,21063,21189,39149,35242,19971,26578,28422,20405,23522,26517,v10709,28024,29723,30759,37341,37756,34756,31204,31281,24555,20182,21668,21822,22702,22949,24816,25171,25302,26422,26965,33333,38464,39345,39389,20524,21331,21828,22396,25176,25826,26219,26589,28609,28655,29730,29752,35351,37944,21585,22022,22374,24392,24986,27470,28760,28845,32187,35477,22890,33067,25506,30472,32829,36010,
22612,25645,27067,23445,24081,28271,34153,20812,21488,22826,24608,24907,27526,27760,27888,31518,32974,33492,36294,37040,39089,25799,28580,25745,25860,20814,21520,v10710,35342,24927,26742,30171,31570,32113,36890,22534,27084,33151,35114,36864,38969,20600,22871,22956,25237,36879,39722,24925,29305,38358,22369,23110,24052,25226,25773,25850,26487,27874,27966,29228,29750,30772,32631,33453,36315,38935,21028,22338,26495,29256,29923,36009,36774,37393,38442,v10711,21485,25420,20329,21764,24726,25943,27803,28031,
29260,29437,31255,35207,v10712,24429,28558,28921,33192,24846,v10713,20559,25153,v10714,31687,32232,32745,36941,38829,39449,36022,22378,24179,26544,33805,35413,21536,23318,24163,24290,24330,25987,32954,34109,38281,38491,20296,21253,21261,21263,21638,21754,22275,24067,24598,25243,25265,25429,27873,28006],v23639=[30129,30770,32990,33071,33502,33889,33970,34957,35090,36875,37610,39165,39825,24133,v10715,26333,28689,29190,20469,21117,24426,24915,26451,27161,28418,29922,31080,34920,35961,39111,39108,39491,
21697,31263,26963,35575,35914,v10716,39342,24444,25259,30130,v10717,34987,36991,38466,21305,24380,24517,v10718,29644,30050,v10719,31558,33534,39325,20047,36924,19979,20309,21414,22799,24264,26160,27827,29781,33655,34662,36032,36944,38686,39957,22737,23416,34384,35604,40372,23506,24680,24717,26097,27735,28450,28579,28698,32597,32752,v10720,38480,38867,21106,36676,20989,21547,21688,21859,21898,27323,28085,32216,33382,37532,38519,40569,21512,21704,30418,34532,38308,38356,38492,20130,20233,23022,23270,
24055,24658,25239,26477,26689,27782,28207,32568,32923,33322,38917,20133,20565,21683,22419,22874,23401,23475,25032,26999,28023,28707,34809,35299,35442,35559,36994,39405,39608,21182,26680,20502,24184,26447,33607,v10721,20139,21521,22190,29670,37141,38911,39177,39255,v10722,22099,22687,34395,35377,25010,27382,29563,36562,27463,38570,39511,22869,29184,36203,v10723,20436,23796,24358,25080,26203,27883,28843,v10724,29625,29694,30505,30541,32067,32098,32291,33335,34898,36066,37449,39023,23377,v10725,v10726,
v10727,23244,20448,21332,22846,23805,25406,28025,29433,33029,33031,33698,37583,38960,20136,20804,21009,22411,24418,27842,28366,28677,28752,28847,29074,29673,v10728,33610,34722,34913,36872,37026,37795,39336,20846,24407,24800,24935,26291,34137,36426,37295,38795,20046,20114,21628,22741,22778,22909,23733,24359,v10729,25160,26122,26215,27627,28009,28111,28246,28408,28564,28640,28649,28765,29392,29733,29786,29920,30355,31068,31946,32286,32993,33446,33899,33983,34382,34399,34676,35703,35946,37804,38912,
39013,24785,25110,37239,23130,26127,28151,28222,29759,39746,24573,24794,31503,21700,24344,27742,27859,27946,28888,32005,34425,35340,40251,21270,21644,23301,27194,v10730,30069,31117,v10731,33457,33775,35441,35649,36008,38772,25844,25899,v10732,31339,20024,21914,22864,23462,24187,24739,25563,27489,26213,26707,28185,29029,29872,32008,36996,39529,39973,27963,v10733,29502,35905,38346,20976,24140,24488,24653,24822,24880,24908,v10734,27045,27841,28255,28361,28514,29004,29852,30343,31681,31783,33618,34647,
36945,38541,v10735,21295,22238,24315,24458,24674,24724,25079,26214,26371,27292,28142,28590,28784,29546,32362,33214,33588,34516,35496,36036,21123,29554,23446,27243,37892,21742,22150,23389,25928,25989,26313,26783,28045,28102,v10736,32948,37237,39501,20399,20505,21402,21518,21564,21897,21957,24127,24460,26429,29030,29661,36869,21211,21235,22628,22734,28932,29071,29179,34224,35347,v10737,34216,21927,26244,29002,33841,21321,21913,27585,24409,24509,25582,26249,28999,35569,36637,40638,20241,25658,28875,
30054,34407,24676,35662,40440,20807,20982,21256,27958,33016,v10738,26133,27427,28824,30165,21507,23673,32007,35350,v10739,27453,27462,21560,24688,27965,32725,33288,20694,20958,21916,22123,22221,23020,23305,24076,24985,24984,25137,26206,26342,29081,v10740,29351,31143,31232,32690,35440,v10741,v10742,v10743,8223,8219,v10744],v23641=[v10745,8316,0,v10746,v10747,700,v10748,8942,8759,v10749,v10750,v10751,v10752,v10753,v10754,v10755,v10756,v10757,0,8842,0,8843,v10758,8825,v10759,v10760,8773,8771,8776,0,
8868,v10761,8244,v10762,9839,v10763,8258,v10764,10045,0,0,8226,v10765,v10766,v10767,10010,10006,0,9711,v10768,10070,0,9676,v10769,9775,v10770,12320,0,v10771,v10772,12306,12342,v10773,8710,0,8735,0,v10774,0,8787,8785,v10775,8723,v10776,0,8980,0,0,8802,0,9649,0,8738,8784,0,0,8867,0,0,v10777,8837,8836,8713,8716,v10778,8794,8966,v10779,12958,0,8252,v10780,9702,v10781,9663,9653,9657,9667,v10782,9674,12849,12857,13259,v10783,v10784,8656,8655,8653,v10785,8657,8659,v10786,8626,8625,0,8628,8624,8627,v10787,
8636,8640,v10788,v10789,v10790,v10791,v10792,12948,v10793,12965,v10794,8672,8674,8673,8675,v10795,8678,8680,8679,8681,v10796,9757,9759,v10797,12944,v10798,v10799,v10800,8246,0,8245,v10801,12540,0,0,v10802,v10803,v10804,44056,v10805,v10806,v10807,44078,v10808,v10809,v10810,v10811,44108,v10812,v10813,v10814,v10815,v10816,v10817,44153,v10818,44162,v10819,v10820,v10821,v10822,44190,v10823,44203,v10824,v10825,44218,v10826,v10827,v10828,v10829,v10830,44246,v10831,v10832,v10833,44265,44267,v10834,44274,
44276,v10835,v10836,v10837,44293,v10838,44302,44304,v10839,v10840,v10841,v10842,v10843,v10844,v10845,v10846,v10847,44358,44360,v10848,v10849,v10850,v10851,44386,v10852,v10853,v10854,v10855,44414,44416,v10856,v10857,v10858,v10859,v10860,v10861,v10862,v10863,v10864,v10865,44498,v10866,v10867,v10868,v10869,v10870,v10871,v10872,44554,44556,v10873,v10874,v10875,v10876,44601,v10877,44610,44612,v10878,44619,44623,v10879,44629,v10880,44638,v10881,v10882,v10883,v10884,v10885,44666,v10886,v10887,v10888,44735,
v10889,v10890,44750,v10891,v10892,v10893,v10894,44780,v10895,v10896,v10897,v10898,v10899,v10900,v10901,v10902,44849,44851,v10903,44862,44864,v10904,v10905,v10906,v10907,v10908,v10909,v10910,v10911,v10912,v10913,v10914,v10915,v10916,v10917,v10918,45002,45004,v10919,v10920,v10921,v10922,v10923,v10924,v10925,v10926,v10927,v10928,v10929,v10930,v10931,v10932,v10933,45129,45131,45133,v10934,45142,45144,v10935,v10936,v10937,v10938,v10939,45198,45200,v10940,45211,v10941,v10942,45226,45232,45234,v10943,v10944,
v10945,45254,v10946,v10947,v10948,v10949,v10950,v10951,45322,v10952,45329,v10953,45338,v10954,v10955,v10956,v10957,45366,v10958,v10959,v10960,v10961,v10962,v10963,v10964,v10965,v10966,v10967,v10968,45441,v10969,45450,45452,v10970,v10971,v10972,v10973,v10974,v10975,v10976,v10977,45534,v10978,v10979,v10980,v10981,45562,45564,v10982,v10983,v10984,v10985,45590,45592,v10986,v10987,v10988,v10989,v10990,v10991,v10992,v10993,v10994,v10995,v10996,v10997,v10998,v10999,v11000,45730,45732,v11001,45739,v11002,
v11003,v11004,v11005,v11006,45777,v11007,45786,45788,v11008,45795,45799,v11009,v11010,45814,v11011,v11012,v11013,v11014,45842,v11015,v11016,45911,v11017,45917,v11018,45926,45928,45930,v11019,45935,v11020,v11021,v11022,45954,v11023,v11024,v11025,v11026,v11027,v11028,v11029,v11030,v11031,46029,46031,v11032,46038,46040,46042,46044,v11033,v11034,v11035,v11036,v11037,v11038,v11039,v11040,v11041,46122,v11042,v11043,v11044,v11045,v11046,46178,46180],v23643=[v11047,v11048,v11049,v11050,v11051,v11052,v11053,
v11054,46262,46264,v11055,v11056,v11057,v11058,v11059,v11060,v11061,v11062,46309,v11063,46318,46320,v11064,v11065,v11066,v11067,v11068,46374,v11069,v11070,v11071,v11072,46402,v11073,v11074,v11075,v11076,46430,v11077,v11078,v11079,46505,v11080,46514,v11081,v11082,v11083,v11084,46542,v11085,v11086,v11087,v11088,v11089,v11090,v11091,v11092,v11093,v11094,v11095,v11096,v11097,v11098,v11099,v11100,v11101,v11102,v11103,v11104,v11105,v11106,v11107,v11108,v11109,v11110,46906,v11111,v11112,v11113,v11114,v11115,
v11116,v11117,v11118,46962,46964,v11119,v11120,v11121,v11122,46990,v11123,v11124,v11125,v11126,47018,v11127,v11128,v11129,47048,v11130,v11131,v11132,v11133,47102,v11134,v11135,v11136,v11137,47130,47132,v11138,v11139,v11140,v11141,47158,v11142,v11143,v11144,47186,v11145,v11146,v11147,v11148,47214,47216,v11149,v11150,v11151,v11152,v11153,v11154,v11155,v11156,47298,47300,v11157,v11158,v11159,v11160,47326,47328,v11161,v11162,v11163,v11164,47354,47356,v11165,v11166,v11167,v11168,v11169,v11170,v11171,v11172,
47440,v11173,v11174,v11175,v11176,47466,47468,v11177,v11178,v11179,v11180,47494,47496,v11181,v11182,v11183,v11184,v11185,47550,47552,v11186,v11187,47565,v11188,47578,47580,v11189,47586,v11190,v11191,v11192,47606,v11193,v11194,v11195,v11196,v11197,v11198,47681,v11199,47690,47692,v11200,v11201,v11202,v11203,47718,v11204,v11205,v11206,v11207,47750,v11208,v11209,47786,v11210,47793,v11211,47802,47804,v11212,v11213,v11214,v11215,v11216,v11217,v11218,47886,47888,v11219,v11220,v11221,v11222,47914,v11223,
47927,v11224,v11225,47942,47944,v11226,47950,v11227,v11228,v11229,47970,v11230,v11231,v11232,v11233,v11234,v11235,v11236,v11237,v11238,v11239,v11240,v11241,v11242,v11243,v11244,v11245,v11246,48129,v11247,48138,48142,48144,v11248,v11249,v11250,48166,48168,v11251,v11252,v11253,v11254,v11255,48194,v11256,v11257,v11258,v11259,v11260,v11261,v11262,48269,v11263,48278,48280,v11264,v11265,v11266,v11267,48306,v11268,v11269,v11270,v11271,48334,v11272,v11273,v11274,v11275,48375,v11276,v11277,48390,48392,v11278,
v11279,v11280,v11281,v11282,v11283,v11284,v11285,v11286,v11287,v11288,v11289,v11290,v11291,v11292,48530,48532,v11293,48539,v11294,v11295,v11296,v11297,v11298,v11299,v11300,v11301,v11302,v11303,v11304,v11305,48644,v11306,v11307,v11308,v11309,48670,v11310,v11311,v11312,48717,v11313,48726,48728,v11314,v11315,v11316,48745,v11317,48754,v11318,v11319,v11320,v11321,48782,v11322,v11323,v11324,v11325,v11326,v11327,v11328,v11329,v11330,v11331,v11332,48922,v11333,v11334,v11335,v11336,v11337,v11338,v11339,v11340,
v11341,v11342,v11343,v11344,v11345,49120,v11346,v11347,v11348,v11349,v11350,v11351,v11352,v11353,v11354,v11355,49314,49316,v11356,49326,v11357,v11358,49342,v11359,v11360,v11361,v11362,v11363,49370,v11364,v11365,v11366,v11367,49398,49400,v11368,v11369,v11370,v11371,v11372,v11373,v11374,49445,v11375,49454,v11376,49463,v11377,v11378,v11379,49482,v11380,v11381,v11382,v11383,49510,v11384,v11385,v11386,v11387,v11388,49551,v11389,49557,v11390,49566,49568,v11391,v11392,v11393,v11394,v11395,v11396,v11397,
v11398,v11399,v11400,v11401,v11402,v11403,v11404,49650,v11405,v11406,v11407,v11408,49678,49680,v11409,v11410,v11411,v11412,49706,49708,49710,49712,49715,v11413,v11414,v11415,v11416,v11417,v11418,v11419,v11420,v11421,v11422,49790,49792,v11423,v11424,v11425,v11426,49820,v11427,v11428,v11429,v11430,49846,49848],v23645=[v11431,v11432,v11433,v11434,49902,49904,v11435,49911,49914,v11436,v11437,v11438,v11439,v11440,v11441,v11442,v11443,v11444,v11445,v11446,v11447,50033,v11448,v11449,v11450,v11451,v11452,
v11453,v11454,v11455,v11456,50145,v11457,v11458,v11459,v11460,v11461,v11462,v11463,v11464,v11465,v11466,v11467,v11468,v11469,v11470,v11471,v11472,v11473,v11474,v11475,v11476,v11477,v11478,v11479,v11480,v11481,v11482,50425,v11483,v11484,v11485,v11486,v11487,v11488,v11489,v11490,v11491,50490,50492,v11492,v11493,50507,v11494,50518,v11495,50527,v11496,v11497,v11498,50546,v11499,v11500,v11501,v11502,v11503,50574,50576,v11504,50582,v11505,v11506,v11507,v11508,v11509,50618,v11510,50635,50637,50639,v11511,
v11512,v11513,50658,50660,v11514,50671,v11515,50677,v11516,v11517,v11518,v11519,v11520,50714,v11521,v11522,v11523,50735,v11524,50742,50744,50746,v11525,v11526,v11527,v11528,50770,v11529,v11530,v11531,v11532,50800,v11533,v11534,v11535,v11536,50826,50828,v11537,v11538,v11539,v11540,50854,50856,v11541,v11542,v11543,v11544,50882,50884,v11545,v11546,v11547,v11548,v11549,v11550,v11551,v11552,v11553,v11554,v11555,v11556,v11557,v11558,50966,50968,v11559,v11560,v11561,v11562,50994,50996,50998,v11563,v11564,
v11565,v11566,51019,51022,51024,v11567,v11568,v11569,v11570,v11571,v11572,v11573,v11574,51078,v11575,51087,v11576,51093,51097,v11577,51106,v11578,v11579,v11580,v11581,51134,v11582,v11583,51149,51151,v11584,v11585,v11586,v11587,v11588,v11589,v11590,v11591,51209,v11592,51218,51220,v11593,v11594,v11595,v11596,51246,51248,v11597,v11598,v11599,v11600,v11601,v11602,v11603,v11604,v11605,51321,v11606,51330,51332,v11607,v11608,v11609,51358,51360,v11610,v11611,v11612,v11613,v11614,v11615,51414,51416,v11616,
v11617,v11618,v11619,v11620,v11621,v11622,51470,51472,v11623,v11624,v11625,v11626,v11627,v11628,v11629,51554,v11630,v11631,v11632,v11633,v11634,v11635,v11636,v11637,51610,51612,v11638,v11639,v11640,51657,v11641,51666,51668,v11642,51675,v11643,51681,51683,v11644,v11645,51694,v11646,v11647,v11648,v11649,51722,v11650,v11651,v11652,v11653,v11654,v11655,v11656,51806,v11657,v11658,v11659,v11660,v11661,v11662,v11663,v11664,51918,51920,51922,v11665,v11666,v11667,v11668,v11669,v11670,v11671,v11672,v11673,
v11674,v11675,v11676,v11677,v11678,v11679,v11680,v11681,v11682,v11683,v11684,v11685,v11686,52200,v11687,v11688,v11689,v11690,v11691,v11692,v11693,52269,52271,v11694,52282,v11695,v11696,v11697,v11698,52310,v11699,v11700,52325,52327,v11701,v11702,v11703,v11704,v11705,v11706,52394,v11707,v11708,v11709,v11710,52422,52424,v11711,v11712,v11713,v11714,v11715,v11716,v11717,v11718,v11719,v11720,52506,52508,v11721,v11722,v11723,v11724,v11725,v11726,v11727,v11728,52590,52592,v11729,v11730,v11731,v11732,v11733,
v11734,52646,52648,v11735,v11736,v11737,v11738,v11739,v11740,v11741,v11742,52730,52732,v11743,v11744,v11745,v11746,v11747,v11748,v11749,v11750,v11751,52786,52788,v11752,v11753,v11754,v11755,52842,52844,v11756,v11757,v11758,v11759,52870,52872,v11760,v11761,v11762,v11763,52898,v11764,v11765,v11766,v11767,v11768,v11769,52982,v11770,v11771,v11772,v11773,53010,53012,v11774,v11775,v11776,v11777,53038,v11778,v11779,v11780,v11781,v11782,53094,53096,v11783,v11784,v11785,v11786,v11787,v11788,v11789,v11790,
v11791,v11792,v11793,v11794,v11795,v11796,53234,53236,v11797,v11798,v11799,v11800,v11801,v11802,v11803,v11804,v11805,v11806,53318,53320,v11807,v11808,v11809,v11810,v11811,v11812,v11813],v23646=[v11814,v11815,v11816,v11817,v11818,v11819,53430,53432,v11820,v11821,v11822,v11823,53458,v11824,v11825,v11826,v11827,53486,v11828,v11829,v11830,v11831,v11832,53561,v11833,53570,v11834,v11835,v11836,v11837,53598,53600,v11838,v11839,v11840,v11841,v11842,v11843,v11844,v11845,v11846,53682,53684,v11847,53691,v11848,
v11849,v11850,v11851,v11852,53768,v11853,v11854,v11855,v11856,v11857,53822,53824,v11858,v11859,v11860,v11861,v11862,v11863,v11864,v11865,v11866,v11867,v11868,v11869,v11870,v11871,v11872,v11873,53953,v11874,53962,v11875,v11876,v11877,v11878,v11879,v11880,v11881,v11882,54018,54020,v11883,54031,v11884,54037,v11885,54046,v11886,v11887,v11888,v11889,v11890,54074,v11891,v11892,v11893,v11894,v11895,54158,v11896,v11897,v11898,v11899,54186,54188,v11900,v11901,v11902,v11903,v11904,v11905,v11906,v11907,54242,
v11908,v11909,v11910,v11911,54270,54272,v11912,v11913,v11914,v11915,v11916,v11917,v11918,v11919,54382,v11920,v11921,v11922,54401,v11923,54410,54412,v11924,v11925,v11926,v11927,v11928,v11929,v11930,v11931,v11932,v11933,v11934,v11935,54524,v11936,v11937,v11938,v11939,54550,v11940,v11941,v11942,v11943,54606,54608,v11944,v11945,v11946,v11947,v11948,54634,54636,v11949,v11950,v11951,v11952,54662,v11953,v11954,v11955,v11956,v11957,54737,v11958,54746,54748,v11959,v11960,v11961,v11962,54774,54776,v11963,v11964,
v11965,v11966,54802,v11967,v11968,v11969,v11970,v11971,v11972,v11973,v11974,v11975,54858,54860,v11976,v11977,v11978,v11979,v11980,54888,v11981,v11982,v11983,54916,v11984,v11985,v11986,v11987,54942,54944,v11988,v11989,v11990,v11991,54970,v11992,v11993,v11994,v11995,v11996,v11997,55E3,v11998,v11999,v12000,v12001,v12002,v12003,v12004,v12005,v12006,v12007,v12008,v12009,v12010,55082,55084,v12011,v12012,v12013,v12014,v12015,55112,v12016,v12017,55125,v12018,55138,55140,v12019,v12020,v12021,v12022,v12023,
v12024,v12025,v12026,v12027,v12028,55194,55196,v12029],v23644=v23645.concat(v23646),v23642=v23643.concat(v23644),v23640=v23641.concat(v23642),v23638=v23639.concat(v23640),v23636=v23637.concat(v23638),v23634=v23635.concat(v23636),v23632=v23633.concat(v23634),v23630=v23631.concat(v23632),v23628=v23629.concat(v23630),v23626=v23627.concat(v23628),v23624=v23625.concat(v23626),v23622=v23623.concat(v23624),v23620=v23621.concat(v23622),v23618=v23619.concat(v23620),v23616=v23617.concat(v23618),v5854=v23615.concat(v23616),
v12030={f:95,c:32},v12031={s:3},v12032={f:2,c:12289},v12033={f:4,c:65108},v12034={s:4},v12035={f:2,c:65288},v12036={f:2,c:65077},v12037={f:2,c:65079},v12038={f:2,c:12308},v12039={f:2,c:65081},v12040={f:2,c:12304},v12041={f:2,c:65083},v12042={f:2,c:12298},v12043={f:2,c:65085},v12044={f:2,c:12296},v12045={f:2,c:65087},v12046={f:2,c:12300},v12047={f:2,c:65089},v12048={f:2,c:12302},v12049={f:2,c:65091},v12050={f:6,c:65113},v12051={f:2,c:8216},v12052={f:2,c:8220},v12053={f:2,c:12317},v12054={f:2,c:65097},
v12055={f:2,c:65101},v12056={f:2,c:65099},v12057={f:3,c:65119},v12058={f:2,c:8806},v12059={f:5,c:65122},v12060={f:2,c:8745},v12061={f:2,c:8598},v12062={f:2,c:162},v12063={f:3,c:65129},v12064={f:3,c:13212},v12065={f:2,c:13198},v12066=[20825,58834],v12067=[20827,58835],v12068=[20830,58837],v12069=[20829,58836],v12070=[29929,58044],v12071=[31950,58191],v12072={f:8,c:9601},v12073={f:2,c:9581},v12074={f:2,c:9698},v12075={f:3,c:9585},v12076={f:10,c:65296},v12077={f:10,c:8544},v12078={f:9,c:12321},v12079=
[21316,57443],v12080={f:26,c:65313},v12081={f:26,c:65345},v12082={f:17,c:913},v12083={f:7,c:931},v12084={f:17,c:945},v12085={f:7,c:963},v12086={f:37,c:12549},v12087=[9312,63153],v12088=[9313,63154],v12089=[9314,63155],v12090=[9315,63156],v12091=[9316,63157],v12092=[9317,63158],v12093=[9318,63159],v12094=[9319,63160],v12095=[9320,63161],v12096=[9321,63162],v12097=[9332,63163],v12098=[9333,63164],v12099=[9334,63165],v12100=[9335,63166],v12101=[9336,63167],v12102=[9337,63168],v12103=[9338,63169],v12104=
[9339,63170],v12105=[9340,63171],v12106=[9341,63172],v12107=[8560,63173],v12108=[8561,63174],v12109=[8562,63175],v12110=[8563,63176],v12111=[8564,63177],v12112=[8565,63178],v12113=[8566,63179],v12114=[8567,63180],v12115=[8568,63181],v12116=[8569,63182],v12117=[12033,20008],v12118=[12034,20022,63183],v12119=[12035,20031,63184],v12120=[12037,20101,63185],v12121=[12039,20128,63186],v12122=[12044,20866,63187],v12123=[12045,20886,63188],v12124=[12046,20907,63189],v12125=[12051,21241,63190],v12126=[12054,
21304,63191],v12127=[12057,21353,63192],v12128=[12059,21430,63193],v12129=[12065,12066,22786,22794,63194],v12130=[12071,23424,63195],v12131=[12078,24027,63196],v12132=[12083,24186,63197],v12133=[12084,24191,63198],v12134=[12085,24308],v12135=[12089,24400,63200],v12136=[12090,24417,63201],v12137=[12097,25908,63202],v12138=[12102,26080],v12139=[12135,30098,63204],v12140=[12136,30326],v12141=[12193,36789,63206],v12142=[12202,38582],v12143={f:32,c:9216},v12144=[12032,19968],v12145=[12036,20057],v12146=
[12038,20108],v12147=[12040,20154],v12148=[12041,20799],v12149=[12042,20837],v12150=[12043,20843],v12151=[12047,20960],v12152=[12049,20992],v12153=[12050,21147],v12154=[12052,21269],v12155=[12055,21313],v12156=[12056,21340],v12157=[12060,21448],v12158=[20800,64012],v12159=[12061,21475],v12160=[12063,22303],v12161=[12064,22763],v12162=[12067,22805],v12163=[12068,22823],v12164=[12069,22899],v12165=[12070,23376],v12166=[12072,23544],v12167=[12073,23567],v12168=[12074,23586],v12169=[12075,23608],v12170=
[12077,23665],v12171=[12079,24037],v12172=[12080,24049],v12173={f:2,c:24050},v12174=[12081,24062],v12175=[12082,24178],v12176=[12086,24318],v12177=[12087,24331],v12178=[12088,24339],v12179={f:2,c:20166},v12180={f:2,c:20170},v12181={f:2,c:20845},v12182={f:3,c:20998},v12183={f:2,c:21246},v12184={f:2,c:24340},v12185=[12092,24515],v12186=[12093,25096],v12187=[12094,25142],v12188=[12095,25163],v12189=[12096,25903],v12190=[12098,25991],v12191=[12099,26007],v12192=[12100,26020],v12193=[12101,26041],v12194=
[12103,26085],v12195=[12104,26352],v12196=[12105,26376],v12197=[12106,26408],v12198=[12107,27424],v12199=[12108,27490],v12200=[12109,27513],v12201=[12111,27595],v12202=[12112,27604],v12203=[12113,27611],v12204=[12114,27663],v12205=[12116,27700],v12206=[12117,28779],v12207=[12118,29226],v12208=[12119,29238],v12209=[12120,29243],v12210=[12122,29255],v12211=[12123,29273],v12212=[12124,29275],v12213=[12125,29356],v12214={f:4,c:20180},v12215={f:2,c:20195},v12216={f:2,c:20873},v12217={f:2,c:20985},v12218=
[21253,57435],v12219={f:2,c:24066},v12220={f:2,c:25171},v12221={f:2,c:26410},v12222=[12126,29572],v12223=[12127,29577],v12224=[12128,29916],v12225=[12129,29926],v12226=[12130,29976],v12227=[12131,29983],v12228=[12132,29992],v12229=[12133,3E4],v12230={f:3,c:30001},v12231=[12134,30091],v12232=[12137,30333],v12233=[12138,30382],v12234=[12139,30399],v12235=[12140,30446],v12236=[12141,30683],v12237=[12142,30690],v12238=[12143,30707],v12239=[12144,31034],v12240=[12146,31166],v12241=[12147,31348],v12242=
[12148,31435],v12243={f:2,c:19998},v12244={f:2,c:20050},v12245={f:2,c:20240},v12246={f:2,c:21009},v12247={f:2,c:21360},v12248={f:2,c:22809},v12249={f:2,c:22839},v12250={f:2,c:23383},v12251={f:2,c:23431},v12252={f:2,c:25100},v12253={f:2,c:26092},v12254={f:2,c:26354},v12255={f:2,c:27743},v12256={f:2,c:27725},v12257=[12149,31481],v12258=[12150,31859],v12259=[12151,31992],v12260=[12152,32566],v12261=[12154,32650],v12262=[12155,32701],v12263=[12156,32769],v12264=[12157,32780],v12265=[12158,32786],v12266=
[12159,32819],v12267=[12160,32895],v12268=[12161,32905],v12269={f:2,c:32907},v12270=[12162,33251],v12271=[12163,33258],v12272=[12164,33267],v12273=[12165,33276],v12274=[12166,33292],v12275=[12167,33307],v12276=[12168,33311],v12277=[12169,33390],v12278=[12170,33394],v12279=[12173,34411],v12280=[12174,34880],v12281=[12175,34892],v12282=[12176,34915],v12283={f:2,c:20304},v12284={f:2,c:20918},v12285={f:2,c:21033},v12286={f:2,c:21161},v12287={f:2,c:21557},v12288={f:2,c:23386},v12289={f:2,c:23616},v12290=
{f:2,c:23696},v12291={f:4,c:26446},v12292=[26462,57801],v12293={f:2,c:27784},v12294={f:2,c:28796},v12295={f:2,c:30007},v12296=[12178,35211],v12297=[12179,35282],v12298=[12180,35328],v12299=[12181,35895],v12300=[12182,35910],v12301=[12183,35925],v12302=[12185,35997],v12303=[12186,36196],v12304=[12187,36208],v12305=[12188,36275],v12306=[12189,36523],v12307=[12190,36554],v12308=[12191,36763],v12309=[12192,36784],v12310=[12194,37009],v12311=[12195,37193],v12312=[12196,37318],v12313=[12197,37324],v12314=
{f:2,c:20139},v12315={f:3,c:21367},v12316={f:2,c:22855},v12317={f:2,c:23621},v12318={f:2,c:24213},v12319={f:2,c:24358},v12320={f:2,c:24448},v12321={f:2,c:25299},v12322=[25296,60582],v12323={f:2,c:25302},v12324=[25294,61010],v12325={f:2,c:26479},v12326={f:2,c:27494},v12327={f:2,c:27837},v12328={f:2,c:29228},v12329={f:2,c:30105},v12330={f:2,c:31040},v12331=[32773,58236],v12332=[12198,37329],v12333=[12199,38263],v12334=[12200,38272],v12335=[12201,38428],v12336=[12203,38585],v12337=[12204,38632],v12338=
[12206,38750],v12339={f:2,c:20141},v12340={f:2,c:23630},v12341={f:2,c:24458},v12342=[24674,60712],v12343={f:2,c:27965},v12344={f:2,c:29408},v12345={f:2,c:30116},v12346={f:2,c:30114},v12347={f:3,c:30342},v12348={f:2,c:30732},v12349={f:2,c:31161},v12350={f:2,c:31185},v12351={f:2,c:32963},v12352={f:2,c:35330},v12353={f:3,c:38475},v12354=[12207,38754],v12355=[12208,38761],v12356=[12209,38859],v12357=[12210,38893],v12358=[12211,38899],v12359=[12212,38913],v12360=[12213,39080],v12361=[12214,39131],v12362=
[12215,39135],v12363=[12216,39318],v12364=[12217,39321],v12365={f:2,c:20492},v12366=[20521,57375],v12367={f:2,c:20900},v12368=[21375,57459],v12369={f:2,c:22275},v12370={f:2,c:22871},v12371={f:2,c:25386},v12372={f:2,c:25928},v12373={f:2,c:26388},v12374={f:2,c:27687},v12375={f:2,c:30130},v12376={f:2,c:30413},v12377={f:2,c:30495},v12378=[31203,60418],v12379={f:2,c:33322},v12380={f:2,c:34945},v12381={f:2,c:36001},v12382=[36215,58442],v12383={f:2,c:38498},v12384=[12218,39340],v12385=[12219,39592],v12386=
[12220,39640],v12387=[12222,39717],v12388=[12224,39730],v12389=[12225,39740],v12390=[20605,57382],v12391={f:2,c:21311},v12392={f:2,c:23644},v12393={f:2,c:24247},v12394={f:2,c:25114},v12395={f:2,c:26059},v12396={f:2,c:27627},v12397={f:2,c:28937},v12398={f:2,c:29942},v12399={f:2,c:30053},v12400={f:2,c:30164},v12401={f:2,c:33659},v12402=[37117,58488],v12403={f:2,c:38518},v12404={f:2,c:38914},v12405=[12226,39770],v12406=[12227,40165],v12407=[12228,40565],v12408=[12229,40575],v12409=[12230,40613],v12410=
[12231,40635],v12411={f:2,c:21108},v12412={f:2,c:22576},v12413={f:2,c:22777},v12414=[23159,57587],v12415={f:2,c:23562},v12416={f:2,c:24257},v12417={f:2,c:24489},v12418={f:2,c:25581},v12419={f:2,c:25954},v12420=[26228,57786],v12421={f:2,c:26366},v12422={f:2,c:27694},v12423=[28207,57904],v12424=[28189,57901],v12425={f:2,c:28953},v12426=[29038,57958],v12427={f:2,c:29749},v12428={f:2,c:29989},v12429={f:2,c:30331},v12430=[31569,60510],v12431={f:2,c:32724},v12432=[33729,58309],v12433={f:2,c:35009},v12434=
{f:2,c:37396},v12435={f:2,c:38533},v12436={f:2,c:38598},v12437={f:2,c:38917},v12438=[12232,40643],v12439=[12233,40653],v12440=[12234,40657],v12441={f:2,c:20658},v12442={f:2,c:21218},v12443={f:2,c:21987},v12444={f:2,c:21957},v12445={f:2,c:22290},v12446={f:2,c:25121},v12447={f:2,c:25622},v12448={f:2,c:26247},v12449=[29788,58019],v12450={f:2,c:30430},v12451={f:2,c:30871},v12452={f:2,c:31391},v12453={f:2,c:32617},v12454={f:2,c:33145},v12455={f:2,c:34562},v12456={f:2,c:35442},v12457={f:2,c:36039},v12458=
{f:2,c:38548},v12459={f:2,c:38601},v12460={f:2,c:38928},v12461={f:2,c:39165},v12462=[12237,40718],v12463=[12238,40723],v12464=[12239,40736],v12465=[20717,60903],v12466={f:2,c:22029},v12467={f:2,c:23525},v12468={f:2,c:24930},v12469={f:2,c:31118},v12470=[31672,58170],v12471={f:2,c:31933},v12472={f:2,c:32189},v12473=[32210,58202],v12474={f:2,c:32736},v12475={f:2,c:36049},v12476={f:2,c:38312},v12477={f:2,c:38935},v12478={f:2,c:39599},v12479={f:2,c:39745},v12480=[12240,40763],v12481=[12241,40778],v12482=
{f:2,c:20744},v12483={f:3,c:21127},v12484={f:2,c:22063},v12485={f:2,c:23652},v12486=[25744,57745],v12487={f:2,c:25975},v12488={f:2,c:27589},v12489={f:2,c:30241},v12490={f:2,c:31686},v12491={f:3,c:33179},v12492={f:2,c:34092},v12493={f:2,c:35090},v12494={f:2,c:36076},v12495={f:2,c:36066},v12496={f:2,c:38662},v12497={f:2,c:39662},v12498=[12242,40786],v12499={f:2,c:25787},v12500=[28598,60318],v12501={f:2,c:29123},v12502={f:2,c:29964},v12503={f:2,c:30622},v12504={f:2,c:31309},v12505={f:2,c:31957},v12506=
[32285,58211],v12507={f:2,c:32752},v12508=[32808,58239],v12509={f:2,c:33368},v12510={f:2,c:34152},v12511=[35238,58391],v12512={f:2,c:35585},v12513={f:2,c:38567},v12514=[38748,58565],v12515=[12243,40845],v12516=[12244,40860],v12517={f:2,c:25986},v12518={f:2,c:28639},v12519=[29151,60361],v12520={f:2,c:32881},v12521={f:2,c:36993},v12522={f:3,c:38346},v12523={f:2,c:40668},v12524={f:2,c:25850},v12525={f:2,c:27310},v12526={f:2,c:29179},v12527={f:2,c:30651},v12528={f:2,c:31329},v12529={f:2,c:31428},v12530=
{f:2,c:32340},v12531={f:2,c:37291},v12532={f:2,c:39230},v12533={f:2,c:22750},v12534={f:2,c:31806},v12535={f:2,c:32361},v12536={f:2,c:34276},v12537={f:2,c:35662},v12538={f:2,c:37002},v12539={f:2,c:37852},v12540={f:2,c:31983},v12541={f:2,c:34836},v12542={f:2,c:20791},v12543={f:2,c:38712},v12544=[38911,58586],v12545={f:2,c:40806},v12546={f:2,c:36118},v12547={f:2,c:37969},v12548={f:2,c:38717},v12549={f:2,c:39514},v12550={f:2,c:39635},v12551={f:2,c:30321},v12552=[30679,60226],v12553={f:2,c:40441},v12554=
{f:2,c:40572},v12555={f:2,c:38013},v12556={f:2,c:40055},v12557=[12048,20981],v12558=[12053,21274],v12559=[12058,21378],v12560=[12062,22231],v12561=[12076,23662],v12562=[12091,24435],v12563=[23568,60417],v12564=[12110,27571],v12565=[12115,27668],v12566=[12121,29247],v12567={f:2,c:22306},v12568=[12145,31160],v12569={f:2,c:23674},v12570=[24181,57646],v12571=[27722,60796],v12572={f:2,c:27723},v12573={f:2,c:29364},v12574=[12153,32593],v12575=[12171,33400],v12576=[12172,34381],v12577=[12177,35198],v12578=
[37015,59347],v12579={f:2,c:21165},v12580={f:2,c:21390},v12581={f:2,c:25230},v12582={f:2,c:27673},v12583=[27804,57900],v12584={f:2,c:29587},v12585={f:2,c:30100},v12586={f:2,c:33411},v12587=[12184,35960],v12588={f:2,c:21042},v12589={f:2,c:21258},v12590={f:2,c:22387},v12591={f:3,c:24354},v12592={f:2,c:26488},v12593={f:2,c:30015},v12594={f:2,c:34413},v12595=[20411,60346],v12596={f:2,c:21701},v12597={f:2,c:22430},v12598={f:2,c:23763},v12599={f:3,c:24097},v12600={f:2,c:25154},v12601={f:2,c:25363},v12602=
{f:2,c:26383},v12603={f:2,c:26569},v12604={f:2,c:27680},v12605={f:2,c:28852},v12606={f:2,c:29257},v12607={f:2,c:30023},v12608={f:3,c:30467},v12609={f:2,c:30695},v12610={f:2,c:30737},v12611=[30729,58095],v12612={f:2,c:31488},v12613={f:2,c:31864},v12614={f:3,c:31871},v12615={f:2,c:32782},v12616=[37332,60294],v12617={f:2,c:20470},v12618={f:2,c:20932},v12619={f:2,c:21086},v12620={f:2,c:21751},v12621={f:2,c:22273},v12622={f:2,c:23085},v12623={f:2,c:25412},v12624={f:2,c:26051},v12625={f:2,c:26386},v12626=
{f:2,c:26674},v12627={f:2,c:28003},v12628=[28007,59078],v12629={f:3,c:28869},v12630={f:2,c:29655},v12631={f:2,c:29918},v12632={f:2,c:29940},v12633={f:2,c:30489},v12634={f:2,c:31211},v12635={f:2,c:31371},v12636={f:2,c:34883},v12637={f:2,c:34933},v12638={f:2,c:37081},v12639={f:2,c:37198},v12640=[12221,39647],v12641=[12223,39727],v12642={f:2,c:20579},v12643={f:2,c:21877},v12644=[23143,60437],v12645={f:2,c:24242},v12646={f:2,c:24787},v12647={f:2,c:26733},v12648={f:2,c:27447},v12649={f:2,c:27533},v12650=
{f:2,c:28124},v12651={f:2,c:29307},v12652={f:2,c:30155},v12653={f:2,c:30513},v12654={f:2,c:31081},v12655={f:2,c:31222},v12656={f:2,c:32062},v12657={f:2,c:32668},v12658={f:2,c:32714},v12659={f:2,c:32720},v12660={f:2,c:34491},v12661={f:2,c:34493},v12662={f:2,c:35932},v12663={f:2,c:36576},v12664={f:2,c:37106},v12665={f:2,c:37099},v12666={f:2,c:37354},v12667=[24408,57673],v12668={f:2,c:26013},v12669={f:2,c:26845},v12670={f:2,c:27634},v12671={f:2,c:28230},v12672={f:2,c:28220},v12673={f:2,c:28213},v12674=
{f:2,c:29320},v12675={f:2,c:30534},v12676={f:2,c:30539},v12677={f:2,c:30820},v12678={f:2,c:32574},v12679={f:2,c:32613},v12680={f:2,c:32672},v12681={f:2,c:32847},v12682={f:3,c:33271},v12683={f:2,c:33340},v12684=[33743,60382],v12685=[33807,58332],v12686={f:2,c:35290},v12687={f:2,c:35415},v12688={f:2,c:35396},v12689={f:2,c:36583},v12690=[37124,60367],v12691={f:2,c:38536},v12692=[12235,40697],v12693={f:2,c:20099},v12694={f:2,c:21115},v12695=[21952,64013],v12696={f:2,c:23512},v12697={f:2,c:24905},v12698=
{f:2,c:25634},v12699={f:2,c:26952},v12700={f:2,c:27643},v12701={f:2,c:27639},v12702={f:2,c:28307},v12703=[29026,61080],v12704={f:2,c:29770},v12705={f:2,c:29775},v12706=[30201,60782],v12707={f:2,c:30559},v12708={f:2,c:30853},v12709={f:2,c:31256},v12710={f:2,c:32615},v12711={f:2,c:32731},v12712={f:2,c:35021},v12713={f:2,c:35972},v12714={f:2,c:36200},v12715={f:2,c:36238},v12716={f:2,c:36243},v12717={f:2,c:36615},v12718=[36619,60507],v12719={f:2,c:37230},v12720={f:2,c:38546},v12721={f:2,c:38775},v12722=
{f:2,c:38925},v12723=[12236,40701],v12724={f:2,c:21120},v12725={f:2,c:24152},v12726={f:2,c:24914},v12727={f:2,c:25714},v12728={f:3,c:27550},v12729={f:2,c:27587},v12730={f:2,c:28441},v12731={f:2,c:29954},v12732={f:2,c:31114},v12733={f:2,c:31403},v12734={f:2,c:32203},v12735={f:2,c:32738},v12736=[33960,58327],v12737={f:2,c:34598},v12738={f:2,c:35057},v12739={f:2,c:35944},v12740={f:2,c:36624},v12741={f:2,c:39085},v12742={f:2,c:39742},v12743={f:2,c:39776},v12744={f:2,c:40177},v12745={f:2,c:20742},v12746=
{f:2,c:20747},v12747={f:2,c:21131},v12748={f:2,c:26034},v12749={f:3,c:29534},v12750={f:2,c:29833},v12751=[29817,58868],v12752={f:3,c:30364},v12753={f:2,c:30915},v12754=[31131,59175],v12755={f:2,c:34023},v12756={f:2,c:34659},v12757={f:3,c:35095},v12758={f:2,c:35540},v12759={f:2,c:36390},v12760={f:2,c:36630},v12761={f:2,c:37161},v12762={f:2,c:37253},v12763={f:2,c:37249},v12764={f:2,c:37571},v12765={f:2,c:39190},v12766={f:2,c:39379},v12767=[39382,60270],v12768={f:2,c:40719},v12769=[23336,59539],v12770=
{f:2,c:24167},v12771={f:2,c:26314},v12772={f:2,c:27213},v12773={f:2,c:27562},v12774={f:2,c:29120},v12775={f:2,c:29146},v12776={f:2,c:29341},v12777={f:2,c:29542},v12778={f:2,c:30626},v12779={f:2,c:30945},v12780={f:2,c:30943},v12781={f:2,c:31952},v12782={f:2,c:32287},v12783={f:2,c:32635},v12784={f:3,c:33365},v12785={f:2,c:34704},v12786={f:2,c:35117},v12787={f:2,c:35572},v12788={f:2,c:35985},v12789={f:2,c:36412},v12790=[36662,60329],v12791={f:2,c:37173},v12792={f:2,c:37264},v12793={f:2,c:38329},v12794=
{f:2,c:40582},v12795={f:2,c:40661},v12796={f:2,c:22156},v12797={f:2,c:23537},v12798={f:2,c:29550},v12799={f:3,c:29968},v12800={f:2,c:30280},v12801={f:2,c:30971},v12802={f:2,c:31424},v12803=[31750,58176],v12804={f:2,c:31728},v12805={f:2,c:35314},v12806={f:2,c:37712},v12807={f:2,c:39211},v12808={f:2,c:39421},v12809={f:2,c:40238},v12810={f:2,c:40258},v12811=[12245,40864],v12812={f:2,c:20781},v12813={f:2,c:23657},v12814={f:2,c:24173},v12815={f:2,c:25069},v12816={f:2,c:26330},v12817={f:2,c:27318},v12818=
{f:2,c:28684},v12819={f:2,c:28671},v12820=[29185,60224],v12821={f:2,c:30995},v12822={f:2,c:32759},v12823={f:2,c:33233},v12824={f:2,c:35152},v12825={f:3,c:36678},v12826={f:2,c:37178},v12827={f:2,c:38354},v12828={f:3,c:38992},v12829={f:2,c:39684},v12830=[40726,58693],v12831={f:2,c:20788},v12832={f:2,c:22182},v12833={f:3,c:23357},v12834={f:3,c:28705},v12835={f:2,c:29349},v12836={f:2,c:30665},v12837={f:2,c:31335},v12838={f:2,c:32765},v12839={f:2,c:34806},v12840={f:2,c:35162},v12841={f:2,c:36102},v12842=
{f:2,c:36687},v12843={f:2,c:38362},v12844={f:2,c:38699},v12845={f:3,c:38877},v12846={f:2,c:39334},v12847={f:2,c:39914},v12848={f:2,c:40331},v12849={f:2,c:40308},v12850={f:2,c:40768},v12851={f:3,c:40790},v12852={f:2,c:24006},v12853={f:2,c:24302},v12854={f:2,c:24512},v12855={f:2,c:26339},v12856={f:2,c:27374},v12857={f:2,c:29203},v12858={f:2,c:30670},v12859={f:2,c:31015},v12860={f:2,c:31340},v12861={f:2,c:33384},v12862={f:2,c:34832},v12863={f:2,c:36694},v12864={f:2,c:37298},v12865={f:2,c:38702},v12866=
{f:2,c:38909},v12867={f:2,c:39010},v12868={f:2,c:39105},v12869={f:2,c:40358},v12870={f:2,c:22205},v12871={f:2,c:28739},v12872={f:2,c:28744},v12873={f:2,c:28741},v12874=[32391,60229],v12875={f:2,c:35706},v12876={f:2,c:37188},v12877={f:2,c:39703},v12878={f:2,c:39976},v12879={f:2,c:40377},v12880={f:2,c:23371},v12881={f:2,c:27400},v12882={f:3,c:28757},v12883={f:2,c:29214},v12884={f:2,c:31344},v12885={f:2,c:34356},v12886={f:2,c:36502},v12887={f:2,c:37962},v12888={f:2,c:37960},v12889={f:2,c:39507},v12890=
{f:2,c:25091},v12891={f:2,c:27409},v12892={f:2,c:38852},v12893={f:3,c:39710},v12894=[40432,60370],v12895={f:2,c:40690},v12896={f:2,c:40814},v12897={f:2,c:26349},v12898={f:2,c:35732},v12899={f:3,c:36510},v12900={f:2,c:37992},v12901={f:2,c:40448},v12902={f:3,c:40820},v12903={f:2,c:27416},v12904={f:2,c:30680},v12905={f:2,c:33248},v12906={f:3,c:34374},v12907={f:2,c:35193},v12908={f:2,c:35736},v12909=[39726,60830],v12910={f:2,c:39027},v12911={f:2,c:39526},v12912={f:2,c:38016},v12913={f:2,c:28777},v12914=
{s:97},v12915=[168,776,63208],v12916=[710,63209,65342],v12917=[12541,63210],v12918=[12542,63211],v12919=[12445,63212],v12920=[12446,63213],v12921=[12293,63216],v12922=[12294,63217],v12923=[12295,63218],v12924=[12540,63219],v12925=[63220,65339],v12926=[63221,65341],v12927=[10045,63222],v12928=[12353,63223],v12929=[12354,63224],v12930=[12355,63225],v12931=[12356,63226],v12932=[12357,63227],v12933=[12358,63228],v12934=[12359,63229],v12935=[12360,63230],v12936=[12361,63231],v12937=[12362,63232],v12938=
[12363,63233],v12939=[12364,63234],v12940=[12365,63235],v12941=[12366,63236],v12942=[12367,63237],v12943=[12368,63238],v12944=[12369,63239],v12945=[12370,63240],v12946=[12371,63241],v12947=[12372,63242],v12948=[12373,63243],v12949=[12374,63244],v12950=[12375,63245],v12951=[12376,63246],v12952=[12377,63247],v12953=[12378,63248],v12954=[12379,63249],v12955=[12380,63250],v12956=[12381,63251],v12957=[12382,63252],v12958=[12383,63253],v12959=[12384,63254],v12960=[12385,63255],v12961=[12386,63256],v12962=
[12387,63257],v12963=[12388,63258],v12964=[12389,63259],v12965=[12390,63260],v12966=[12391,63261],v12967=[12392,63262],v12968=[12393,63263],v12969=[12394,63264],v12970=[12395,63265],v12971=[12396,63266],v12972=[12397,63267],v12973=[12398,63268],v12974=[12399,63269],v12975=[12400,63270],v12976=[12401,63271],v12977=[12402,63272],v12978=[12403,63273],v12979=[12404,63274],v12980=[12405,63275],v12981=[12406,63276],v12982=[12407,63277],v12983=[12408,63278],v12984=[12409,63279],v12985=[12410,63280],v12986=
[12411,63281],v12987=[12412,63282],v12988=[12413,63283],v12989=[12414,63284],v12990=[12415,63285],v12991=[12416,63286],v12992=[12417,63287],v12993=[12418,63288],v12994=[12419,63289],v12995=[12420,63290],v12996=[12421,63291],v12997=[12422,63292],v12998=[12423,63293],v12999=[12424,63294],v13000=[12425,63295],v13001=[12426,63296],v13002=[12427,63297],v13003=[12428,63298],v13004=[12429,63299],v13005=[12430,63300],v13006=[12431,63301],v13007=[12432,63302],v13008=[12433,63303],v13009=[12434,63304],v13010=
[12435,63305],v13011=[12449,63306],v13012=[12450,63307],v13013=[12451,63308],v13014=[12452,63309],v13015=[12453,63310],v13016=[12454,63311],v13017=[12455,63312],v13018=[12456,63313],v13019=[12457,63314],v13020=[12458,63315],v13021=[12459,63316],v13022=[12460,63317],v13023=[12461,63318],v13024=[12462,63319],v13025=[12463,63320],v13026=[12464,63321],v13027=[12465,63322],v13028=[12466,63323],v13029=[12467,63324],v13030=[12468,63325],v13031=[12469,63326],v13032=[12470,63327],v13033=[12471,63328],v13034=
[12472,63329],v13035=[12473,63330],v13036=[12474,63331],v13037=[12475,63332],v13038=[12476,63333],v13039=[12477,63334],v13040=[12478,63335],v13041=[12479,63336],v13042=[12480,63337],v13043=[12481,63338],v13044=[12482,63339],v13045=[12483,63340],v13046=[12484,63341],v13047=[12485,63342],v13048=[12486,63343],v13049=[12487,63344],v13050=[12488,63345],v13051=[12489,63346],v13052=[12490,63347],v13053=[12491,63348],v13054=[12492,63349],v13055=[12493,63350],v13056=[12494,63351],v13057=[12495,63352],v13058=
[12496,63353],v13059=[12497,63354],v13060=[12498,63355],v13061=[12499,63356],v13062=[12500,63357],v13063=[12501,63358],v13064=[12502,63359],v13065=[12503,63360],v13066=[12504,63361],v13067=[12505,63362],v13068=[12506,63363],v13069=[12507,63364],v13070=[12508,63365],v13071=[12509,63366],v13072=[12510,63367],v13073=[12511,63368],v13074=[12512,63369],v13075=[12513,63370],v13076=[12514,63371],v13077=[12515,63372],v13078=[12516,63373],v13079=[12517,63374],v13080=[12518,63375],v13081=[12519,63376],v13082=
[12520,63377],v13083=[12521,63378],v13084=[12522,63379],v13085=[12523,63380],v13086=[12524,63381],v13087=[12525,63382],v13088=[12526,63383],v13089=[12527,63384],v13090=[12528,63385],v13091=[12529,63386],v13092=[12530,63387],v13093=[12531,63388],v13094=[12532,63389],v13095=[12533,63390],v13096=[12534,63391],v13097=[1040,63392],v13098=[1041,63393],v13099=[1042,63394],v13100=[1043,63395],v13101=[1044,63396],v13102=[1045,63397],v13103=[1025,63398],v13104=[1046,63399],v13105=[1047,63400],v13106=[1048,
63401],v13107=[1049,63402],v13108=[1050,63403],v13109=[1051,63404],v13110=[1052,63405],v13111=[1053,63406],v13112=[1054,63407],v13113=[1055,63408],v13114=[1056,63409],v13115=[1057,63410],v13116=[1058,63411],v13117=[1059,63412],v13118=[1060,63413],v13119=[1061,63414],v13120=[1062,63415],v13121=[1063,63416],v13122=[1064,63417],v13123=[1065,63418],v13124=[1066,63419],v13125=[1067,63420],v13126=[1068,63421],v13127=[1069,63422],v13128=[1070,63423],v13129=[1071,63424],v13130=[1072,63425],v13131=[1073,63426],
v13132=[1074,63427],v13133=[1075,63428],v13134=[1076,63429],v13135=[1077,63430],v13136=[1105,63431],v13137=[1078,63432],v13138=[1079,63433],v13139=[1080,63434],v13140=[1081,63435],v13141=[1082,63436],v13142=[1083,63437],v13143=[1084,63438],v13144=[1085,63439],v13145=[1086,63440],v13146=[1087,63441],v13147=[1088,63442],v13148=[1089,63443],v13149=[1090,63444],v13150=[1091,63445],v13151=[1092,63446],v13152=[1093,63447],v13153=[1094,63448],v13154=[1095,63449],v13155=[1096,63450],v13156=[1097,63451],v13157=
[1098,63452],v13158=[1099,63453],v13159=[1100,63454],v13160=[1101,63455],v13161=[1102,63456],v13162=[1103,63457],v13163=[8679,63458],v13164=[8632,63459],v13165=[8633,63460],v13166=[20033,63461],v13167=[63462,131276],v13168=[20058,63463],v13169=[63464,131210],v13170=[20994,63465],v13171=[17553,63466],v13172=[20872,63468],v13173=[13853,63469],v13174=[63470,161287],v13175={s:40},v13176=[172,63511,65506],v13177=[63512,65508],v13178=[63513,65287],v13179=[63514,65282],v13180=[12849,63515],v13181=[8470,
63516],v13182=[8481,63517],v13183=[37561,58501],v13184={s:3},v13185={s:5},v13186={s:26},v13187=[58129,147159],v13188=[22462,58130],v13189=[58131,159443],v13190=[28990,58132],v13191=[58133,153568],v13192=[27042,58135],v13193=[58136,166889],v13194=[23412,58137],v13195=[31305,58138],v13196=[58139,153825],v13197=[58140,169177],v13198=[31333,58141],v13199=[31357,58142],v13200=[58143,154028],v13201=[31419,58144],v13202=[31408,58145],v13203=[31426,58146],v13204=[31427,58147],v13205=[29137,58148],v13206=
[58149,156813],v13207=[16842,58150],v13208=[31450,58151],v13209=[31453,58152],v13210=[31466,58153],v13211=[16879,58154],v13212=[21682,58155],v13213=[58156,154625],v13214=[31499,58157],v13215=[31573,58158],v13216=[31529,58159],v13217=[58160,152334],v13218=[58161,154878],v13219=[31650,58162],v13220=[31599,58163],v13221=[33692,58164],v13222=[58165,154548],v13223=[58166,158847],v13224=[31696,58167],v13225=[33825,58168],v13226=[31634,58169],v13227=[58171,154912],v13228=[33938,58174],v13229=[31738,58175],
v13230=[31797,58177],v13231=[58178,154817],v13232=[31812,58179],v13233=[31875,58180],v13234=[58181,149634],v13235=[31910,58182],v13236=[58184,148856],v13237=[31945,58185],v13238=[31943,58186],v13239=[31974,58187],v13240=[31987,58189],v13241=[31989,58190],v13242=[32359,58192],v13243=[17693,58193],v13244=[58194,159300],v13245=[32093,58195],v13246=[58196,159446],v13247=[32137,58198],v13248=[32171,58199],v13249=[28981,58200],v13250=[32179,58201],v13251=[58203,147543],v13252=[58204,155689],v13253=[32228,
58205],v13254=[15635,58206],v13255=[32245,58207],v13256=[58208,137209],v13257=[32229,58209],v13258=[58210,164717],v13259=[58212,155937],v13260=[58213,155994],v13261=[32366,58214],v13262=[17195,58216],v13263=[37996,58217],v13264=[32295,58218],v13265=[32576,58219],v13266=[32577,58220],v13267=[32583,58221],v13268=[31030,58222],v13269=[58223,156368],v13270=[39393,58224],v13271=[32663,58225],v13272=[58226,156497],v13273=[32675,58227],v13274=[58228,136801],v13275=[58229,131176],v13276=[17756,58230],v13277=
[58231,145254],v13278=[58233,164666],v13279=[32762,58234],v13280=[58235,156809],v13281=[32776,58237],v13282=[32797,58238],v13283=[32815,58240],v13284=[58241,172167],v13285=[58242,158915],v13286=[32827,58243],v13287=[32828,58244],v13288=[32865,58245],v13289=[58246,141076],v13290=[18825,58247],v13291=[58248,157222],v13292=[58249,146915],v13293=[58250,157416],v13294=[26405,58251],v13295=[32935,58252],v13296=[58253,166472],v13297=[33031,58254],v13298=[33050,58255],v13299=[22704,58256],v13300=[58257,141046],
v13301=[27775,58258],v13302=[58259,156824],v13303=[25831,58261],v13304=[58262,136330],v13305=[33304,58263],v13306=[58264,137310],v13307=[27219,58265],v13308=[58266,150117],v13309=[58267,150165],v13310=[17530,58268],v13311=[33321,58269],v13312=[58271,158290],v13313=[58272,146814],v13314=[20473,58273],v13315=[58274,136445],v13316=[34018,58275],v13317=[33634,58276],v13318=[58278,149927],v13319=[58279,144688],v13320=[58280,137075],v13321=[58281,146936],v13322=[33450,58282],v13323=[26907,58283],v13324=
[58284,194964],v13325=[16859,58285],v13326=[34123,58286],v13327=[33488,58287],v13328=[33562,58288],v13329=[58289,134678],v13330=[58290,137140],v13331=[14017,58291],v13332=[58292,143741],v13333=[58293,144730],v13334=[33403,58294],v13335=[33506,58295],v13336=[33560,58296],v13337=[58297,147083],v13338=[58298,159139],v13339=[58299,158469],v13340=[58300,158615],v13341=[58301,144846],v13342=[15807,58302],v13343=[33565,58303],v13344=[21996,58304],v13345=[33669,58305],v13346=[17675,58306],v13347=[58307,159141],
v13348=[33708,58308],v13349=[33747,58310],v13350=[58312,159444],v13351=[27223,58313],v13352=[34138,58314],v13353=[13462,58315],v13354=[58316,159298],v13355=[33880,58318],v13356=[58319,154596],v13357=[33905,58320],v13358=[15827,58321],v13359=[17636,58322],v13360=[27303,58323],v13361=[33866,58324],v13362=[31064,58326],v13363=[58328,158614],v13364=[58329,159351],v13365=[58330,159299],v13366=[34014,58331],v13367=[33681,58333],v13368=[17568,58334],v13369=[33939,58335],v13370=[34020,58336],v13371=[58337,
154769],v13372=[16960,58338],v13373=[58339,154816],v13374=[17731,58340],v13375=[34100,58341],v13376=[23282,58342],v13377=[17703,58344],v13378=[34163,58345],v13379=[17686,58346],v13380=[26559,58347],v13381=[34326,58348],v13382=[58349,165413],v13383=[58350,165435],v13384=[34241,58351],v13385=[58352,159880],v13386=[34306,58353],v13387=[58354,136578],v13388=[58355,159949],v13389=[58356,194994],v13390=[17770,58357],v13391=[34344,58358],v13392=[13896,58359],v13393=[58360,137378],v13394=[21495,58361],v13395=
[58362,160666],v13396=[34430,58363],v13397=[58365,172280],v13398=[34798,58366],v13399=[58367,142375],v13400=[34737,58368],v13401=[34778,58369],v13402=[34831,58370,60990],v13403=[22113,58371],v13404=[34412,58372],v13405=[26710,58373],v13406=[17935,58374],v13407=[34885,58375],v13408=[34886,58376],v13409=[58377,161248],v13410=[58378,146873],v13411=[58379,161252],v13412=[34910,58380],v13413=[34972,58381],v13414=[18011,58382],v13415=[34996,58383],v13416=[34997,58384],v13417=[35013,58386],v13418=[58388,
161551],v13419=[35207,58389],v13420={s:3},v13421=[35239,58393],v13422=[35260,58394],v13423=[58395,166437],v13424=[35303,58396],v13425=[58397,162084],v13426=[58398,162493],v13427=[35484,58399],v13428=[30611,58400],v13429=[37374,58401],v13430=[35472,58402],v13431=[58403,162393],v13432=[31465,58404],v13433=[58405,162618],v13434=[18195,58407],v13435=[58408,162616],v13436=[29052,58409],v13437=[35596,58410],v13438=[35615,58411],v13439=[58412,152624],v13440=[58413,152933],v13441=[35647,58414],v13442=[35661,
58416],v13443=[35497,58417],v13444=[58418,150138],v13445=[35728,58419],v13446=[35739,58420],v13447=[35503,58421],v13448=[58422,136927],v13449=[17941,58423],v13450=[34895,58424],v13451=[35995,58425],v13452=[58426,163156],v13453=[58427,163215],v13454=[58428,195028],v13455=[14117,58429],v13456=[58430,163155],v13457=[36054,58431],v13458=[58432,163224],v13459=[58433,163261],v13460=[36114,58434],v13461=[36099,58435],v13462=[58436,137488],v13463=[36059,58437],v13464=[28764,58438],v13465=[36113,58439],v13466=
[16080,58441],v13467=[36265,58443],v13468=[58444,163842],v13469=[58445,135188],v13470=[58446,149898],v13471=[15228,58447],v13472=[58448,164284],v13473=[58449,160012],v13474=[31463,58450],v13475=[36525,58451],v13476=[36534,58452],v13477=[36547,58453],v13478=[37588,58454],v13479=[36633,58455],v13480=[36653,58456],v13481=[58457,164709],v13482=[58458,164882],v13483=[36773,58459],v13484=[37635,58460],v13485=[58461,172703],v13486=[58462,133712],v13487=[36787,58463],v13488=[58465,166366],v13489=[58466,165181],
v13490=[58467,146875],v13491=[24312,58468],v13492=[58469,143970],v13493=[36857,58470],v13494=[58474,140069],v13495=[14720,58475],v13496=[58476,159447],v13497=[36919,58477],v13498=[58478,165180],v13499=[58479,162494],v13500=[36961,58480],v13501=[58481,165228],v13502=[58482,165387],v13503=[37032,58483],v13504=[58484,165651],v13505=[37060,58485],v13506=[58486,165606],v13507=[37038,58487],v13508=[37223,58489],v13509=[37289,58491],v13510=[37316,58492],v13511=[31916,58493],v13512=[58494,166195],v13513=
[58495,138889],v13514=[37390,58496],v13515=[27807,58497],v13516=[37441,58498],v13517=[37474,58499],v13518=[58500,153017],v13519=[58502,166598],v13520=[58503,146587],v13521=[58504,166668],v13522=[58505,153051],v13523=[58506,134449],v13524=[37676,58507],v13525=[37739,58508],v13526=[58509,166625],v13527=[58510,166891],v13528=[23235,58512],v13529=[58513,166626],v13530=[58514,166629],v13531=[18789,58515],v13532=[37444,58516],v13533=[58517,166892],v13534=[58518,166969],v13535=[58519,166911],v13536=[37747,
58520],v13537=[37979,58521],v13538=[36540,58522],v13539=[38277,58523],v13540=[38310,58524],v13541=[37926,58525],v13542=[38304,58526],v13543=[28662,58527],v13544=[17081,58528],v13545=[58530,165592],v13546=[58531,135804],v13547=[58532,146990],v13548=[18911,58533],v13549=[27676,58534],v13550=[38523,58535],v13551=[38550,58536],v13552=[16748,58537],v13553=[38563,58538],v13554=[58539,159445],v13555=[25050,58540],v13556=[30965,58542],v13557=[58543,166624],v13558=[38589,58544],v13559=[21452,58545],v13560=
[18849,58546],v13561=[58547,158904],v13562=[58548,131700],v13563=[58549,156688],v13564=[58550,168111],v13565=[58551,168165],v13566=[58552,150225],v13567=[58553,137493],v13568=[58554,144138],v13569=[38705,58555],v13570=[34370,58556],v13571=[38710,58557],v13572=[18959,58558],v13573=[17725,58559],v13574=[17797,58560],v13575=[58561,150249],v13576=[28789,58562],v13577=[23361,58563],v13578=[38683,58564],v13579=[58566,168405],v13580=[38743,58567],v13581=[23370,58568],v13582=[58569,168427],v13583=[38751,
58570],v13584=[37925,58571],v13585=[20688,58572],v13586=[58573,143543],v13587=[58574,143548],v13588=[38793,58575],v13589=[38815,58576],v13590=[38833,58577],v13591=[38846,58578],v13592=[38848,58579],v13593=[38866,58580],v13594=[38880,58581],v13595=[58582,152684],v13596=[38894,58583],v13597=[29724,58584],v13598=[58585,169011],v13599=[38901,58587],v13600=[58588,168989],v13601=[58589,162170],v13602=[19153,58590],v13603=[38964,58591],v13604=[38963,58592],v13605=[38987,58593],v13606=[39014,58594],v13607=
[15118,58595],v13608=[58596,160117],v13609=[15697,58597],v13610=[58598,132656],v13611=[58599,147804],v13612=[58600,153350],v13613=[39114,58601],v13614=[39095,58602],v13615=[39112,58603],v13616=[39111,58604],v13617=[19199,58605],v13618=[58606,159015],v13619=[58607,136915],v13620=[21936,58608],v13621=[39137,58609],v13622=[39142,58610],v13623=[39148,58611],v13624=[37752,58612],v13625=[39225,58613],v13626=[58614,150057],v13627=[19314,58615],v13628=[58616,170071],v13629=[58617,170245],v13630=[39413,58618],
v13631=[39436,58619],v13632=[39483,58620],v13633=[39440,58621],v13634=[39512,58622],v13635=[58623,153381],v13636=[14020,58624],v13637=[58625,168113],v13638=[58626,170965],v13639=[39648,58627],v13640=[39650,58628],v13641=[58629,170757],v13642=[39668,58630],v13643=[19470,58631],v13644=[39700,58632],v13645=[39725,58633],v13646=[58634,165376],v13647=[20532,58635],v13648=[39732,58636],v13649=[14531,58638],v13650=[58639,143485],v13651=[39760,58640],v13652=[39744,58641],v13653=[58642,171326],v13654=[23109,
58643],v13655=[58644,137315],v13656=[39822,58645],v13657=[39938,58647],v13658=[39935,58648],v13659=[39948,58649],v13660=[58650,171624],v13661=[40404,58651],v13662=[58652,171959],v13663=[58653,172434],v13664=[58654,172459],v13665=[58655,172257],v13666=[58656,172323],v13667=[58657,172511],v13668=[40318,58658],v13669=[40323,58659],v13670=[58660,172340],v13671=[40462,58661],v13672=[40388,58663],v13673=[58665,172435],v13674=[58666,172576],v13675=[58667,137531],v13676=[58668,172595],v13677=[40249,58669],
v13678=[58670,172217],v13679=[58671,172724],v13680=[40592,58672],v13681=[40597,58673],v13682=[40606,58674],v13683=[40610,58675],v13684=[19764,58676],v13685=[40618,58677],v13686=[40623,58678],v13687=[58679,148324],v13688=[40641,58680],v13689=[15200,58681],v13690=[14821,58682],v13691=[15645,58683],v13692=[20274,58684],v13693=[14270,58685],v13694=[58686,166955],v13695=[40706,58687],v13696=[40712,58688],v13697=[19350,58689],v13698=[37924,58690],v13699=[58691,159138],v13700=[40727,58692,60836],v13701=
[40761,58694],v13702=[22175,58695],v13703=[22154,58696],v13704=[40773,58697],v13705=[39352,58698],v13706=[58699,168075],v13707=[38898,58700],v13708=[33919,58701],v13709=[40809,58703],v13710=[31452,58704],v13711=[40846,58705],v13712=[29206,58706],v13713=[19390,58707],v13714=[58708,149877],v13715=[58709,149947],v13716=[29047,58710],v13717=[58711,150008],v13718=[58712,148296],v13719=[58713,150097],v13720=[29598,58714],v13721=[58715,166874],v13722=[58716,137466],v13723=[31135,58717],v13724=[58718,166270],
v13725=[58719,167478],v13726=[37737,58720],v13727=[37875,58721],v13728=[58722,166468],v13729=[37612,58723],v13730=[37761,58724],v13731=[37835,58725],v13732=[58726,166252],v13733=[58727,148665],v13734=[29207,58728],v13735=[16107,58729],v13736=[30578,58730],v13737=[31299,58731],v13738=[28880,58732],v13739=[58733,148595],v13740=[58734,148472],v13741=[29054,58735],v13742=[58736,137199],v13743=[28835,58737],v13744=[58738,137406],v13745=[58739,144793],v13746=[16071,58740],v13747=[58741,137349],v13748=[58742,
152623],v13749=[58743,137208],v13750=[14114,58744],v13751=[58745,136955],v13752=[58746,137273],v13753=[14049,58747],v13754=[58748,137076],v13755=[58749,137425],v13756=[58750,155467],v13757=[14115,58751],v13758=[58752,136896],v13759=[22363,58753],v13760=[58754,150053],v13761=[58755,136190],v13762=[58756,135848],v13763=[58757,136134],v13764=[58758,136374],v13765=[34051,58759,58761],v13766=[58760,145062],v13767=[33877,58762],v13768=[58763,149908],v13769=[58764,160101],v13770=[58765,146993],v13771=[58766,
152924],v13772=[58767,147195],v13773=[58768,159826],v13774=[17652,58769],v13775=[58770,145134],v13776=[58771,170397],v13777=[58772,159526],v13778=[26617,58773],v13779=[14131,58774],v13780=[15381,58775],v13781=[15847,58776],v13782=[22636,58777],v13783=[58778,137506],v13784=[26640,58779],v13785=[16471,58780],v13786=[58781,145215],v13787=[58782,147681],v13788=[58783,147595],v13789=[58784,147727],v13790=[58785,158753],v13791=[21707,58786],v13792=[22174,58787],v13793=[58788,157361],v13794=[22162,58789],
v13795=[58790,135135],v13796=[58791,134056],v13797=[58792,134669],v13798=[58794,166675],v13799=[37788,58795],v13800=[20216,58796],v13801=[20779,58797],v13802=[14361,58798],v13803=[58799,148534],v13804=[20156,58800],v13805=[58801,132197],v13806=[20299,58803],v13807=[20362,58804],v13808=[58805,153169],v13809=[23144,58806],v13810=[58807,131499],v13811=[58808,132043],v13812=[14745,58809],v13813=[58810,131850],v13814=[58811,132116],v13815=[13365,58812],v13816=[20265,58813],v13817=[58814,131776],v13818=
[58815,167603],v13819=[58816,131701],v13820=[35546,58817],v13821=[58818,131596],v13822=[20120,58819],v13823=[20685,58820],v13824=[20749,58821],v13825=[20386,58822],v13826=[20227,58823],v13827=[58824,150030],v13828=[58825,147082],v13829=[20290,58826],v13830=[20526,58827],v13831=[20588,58828],v13832=[20609,58829],v13833=[20428,58830],v13834=[20453,58831],v13835=[20568,58832],v13836=[20732,58833],v13837=[28278,58838],v13838=[58839,144789],v13839=[58840,147001],v13840=[58841,147135],v13841=[28018,58842],
v13842=[58843,137348],v13843=[58844,147081],v13844=[20904,58845],v13845=[20931,58846],v13846=[58847,132576],v13847=[17629,58848],v13848=[58849,132259],v13849=[58850,132242],v13850=[58851,132241],v13851=[36218,58852],v13852=[58853,166556],v13853=[58854,132878],v13854=[21081,58855],v13855=[21156,58856],v13856=[58857,133235],v13857=[21217,58858],v13858=[18042,58860],v13859=[29068,58861],v13860=[58862,148364],v13861=[58863,134176],v13862=[58864,149932],v13863=[58865,135396],v13864=[27089,58866],v13865=
[58867,134685],v13866=[16094,58869],v13867=[29849,58870],v13868=[29716,58871],v13869=[29782,58872],v13870=[29592,58873],v13871=[19342,58874],v13872=[58875,150204],v13873=[58876,147597],v13874=[21456,58877],v13875=[13700,58878],v13876=[29199,58879],v13877=[58880,147657],v13878=[21940,58881],v13879=[58882,131909],v13880=[21709,58883],v13881=[58884,134086],v13882=[22301,58885],v13883=[37469,58886],v13884=[38644,58887],v13885=[22493,58889],v13886=[22413,58890],v13887=[22399,58891],v13888=[13886,58892],
v13889=[22731,58893],v13890=[23193,58894],v13891=[58895,166470],v13892=[58896,136954],v13893=[58897,137071],v13894=[58898,136976],v13895=[23084,58899],v13896=[22968,58900],v13897=[23166,58902],v13898=[23247,58903],v13899=[23058,58904],v13900=[58905,153926],v13901=[58906,137715],v13902=[58907,137313],v13903=[58908,148117],v13904=[14069,58909],v13905=[27909,58910],v13906=[29763,58911],v13907=[23073,58912],v13908=[58913,155267],v13909=[23169,58914],v13910=[58915,166871],v13911=[58916,132115],v13912=
[37856,58917],v13913=[29836,58918],v13914=[58919,135939],v13915=[28933,58920],v13916=[18802,58921],v13917=[37896,58922],v13918=[58923,166395],v13919=[37821,58924],v13920=[14240,58925],v13921=[23582,58926],v13922=[23710,58927],v13923=[24158,58928],v13924=[24136,58929],v13925=[58930,137622],v13926=[58931,137596],v13927=[58932,146158],v13928=[24269,58933],v13929=[23375,58934],v13930=[58935,137475],v13931=[58936,137476],v13932=[14081,58937],v13933=[58938,137376],v13934=[14045,58939],v13935=[58940,136958],
v13936=[14035,58941],v13937=[33066,58942],v13938=[58943,166471],v13939=[58944,138682],v13940=[58945,144498],v13941=[58946,166312],v13942=[24332,58947,60916],v13943=[24334,58948],v13944=[58949,137511],v13945=[58950,137131],v13946=[23147,58951],v13947=[58952,137019],v13948=[23364,58953],v13949=[58955,161277],v13950=[34912,58956],v13951=[24702,58957],v13952=[58958,141408],v13953=[58959,140843],v13954=[24539,58960],v13955=[16056,58961],v13956=[58962,140719],v13957=[58963,140734],v13958=[58964,168072],
v13959=[58965,159603],v13960=[25024,58966],v13961=[58967,131134],v13962=[58968,131142],v13963=[58969,140827],v13964=[24985,58970],v13965=[24984,58971],v13966=[24693,58972],v13967=[58973,142491],v13968=[58974,142599],v13969=[58975,149204],v13970=[58976,168269],v13971=[25713,58977],v13972=[58978,149093],v13973=[58979,142186],v13974=[14889,58980],v13975=[58981,142114],v13976=[58982,144464],v13977=[58983,170218],v13978=[58984,142968],v13979=[25399,58985],v13980=[25782,58987],v13981=[25393,58988],v13982=
[25553,58989],v13983=[58990,149987],v13984=[58991,142695],v13985=[25252,58992],v13986=[58993,142497],v13987=[25659,58994],v13988=[25963,58995],v13989=[26994,58996],v13990=[15348,58997],v13991=[58998,143502],v13992=[58999,144045],v13993=[59E3,149897],v13994=[59001,144043],v13995=[21773,59002],v13996=[59003,144096],v13997=[59004,137433],v13998=[59005,169023],v13999=[26318,59006],v14000=[59007,144009],v14001=[59008,143795],v14002=[15072,59009],v14003=[59011,152964],v14004=[59012,166690],v14005=[59013,
152975],v14006=[59014,136956],v14007=[59015,152923],v14008=[59016,152613],v14009=[30958,59017],v14010=[59018,143619],v14011=[59019,137258],v14012=[59020,143924],v14013=[13412,59021],v14014=[59022,143887],v14015=[59023,143746],v14016=[59024,148169],v14017=[26254,59025],v14018=[59026,159012],v14019=[26219,59027],v14020=[19347,59028],v14021=[26160,59029],v14022=[59030,161904],v14023=[59031,138731],v14024=[26211,59032],v14025=[59033,144082],v14026=[59034,144097],v14027=[26142,59035],v14028=[59036,153714],
v14029=[14545,59037],v14030=[59038,145466],v14031=[59039,145340],v14032=[15257,59040],v14033=[59041,145314],v14034=[59042,144382],v14035=[29904,59043],v14036=[15254,59044],v14037=[59046,149034],v14038=[26806,59047],v14039=[15300,59049],v14040=[27326,59050],v14041=[59052,145365],v14042=[59053,148615],v14043=[27187,59054],v14044=[27218,59055],v14045=[27337,59056],v14046=[27397,59057],v14047=[59058,137490],v14048=[25873,59059],v14049=[26776,59060],v14050=[27212,59061],v14051=[15319,59062],v14052=[27258,
59063],v14053=[27479,59064],v14054=[59065,147392],v14055=[59066,146586],v14056=[37792,59067],v14057=[37618,59068],v14058=[59069,166890],v14059=[59070,166603],v14060=[37513,59071],v14061=[59072,163870],v14062=[59073,166364],v14063=[37991,59074],v14064=[28069,59075],v14065=[28427,59076],v14066=[59079,147327],v14067=[15759,59080],v14068=[28164,59081],v14069=[59082,147516],v14070=[23101,59083],v14071=[28170,59084],v14072=[22599,59085],v14073=[27940,59086],v14074=[30786,59087],v14075=[28987,59088],v14076=
[59089,148250],v14077=[59090,148086],v14078=[28913,59091],v14079=[29264,59092,61085],v14080=[29319,59093],v14081=[29332,59094],v14082=[59095,149391],v14083=[59096,149285],v14084=[20857,59097],v14085=[59098,150180],v14086=[59099,132587],v14087=[29818,59100],v14088=[59101,147192],v14089=[59102,144991],v14090=[59103,150090],v14091=[59104,149783],v14092=[59105,155617],v14093=[16134,59106],v14094=[16049,59107],v14095=[59108,150239],v14096=[59109,166947],v14097=[59110,147253],v14098=[24743,59111],v14099=
[16115,59112],v14100=[29900,59113],v14101=[29756,59114],v14102=[37767,59115],v14103=[29751,59116],v14104=[17567,59117],v14105=[59118,159210],v14106=[17745,59119],v14107=[30083,59120],v14108=[16227,59121],v14109=[59122,150745],v14110=[59123,150790],v14111=[16216,59124],v14112=[30037,59125],v14113=[30323,59126],v14114=[59127,173510],v14115=[29800,59129,61070],v14116=[59130,166604],v14117=[59131,149931],v14118=[59132,149902],v14119=[15099,59133],v14120=[15821,59134],v14121=[59135,150094],v14122=[16127,
59136],v14123=[59137,149957],v14124=[59138,149747],v14125=[37370,59139],v14126=[22322,59140],v14127=[37698,59141],v14128=[59142,166627],v14129=[59143,137316],v14130=[20703,59144],v14131=[59145,152097],v14132=[59146,152039],v14133=[30584,59147],v14134=[59148,143922],v14135=[30478,59149],v14136=[30479,59150],v14137=[30587,59151],v14138=[59152,149143],v14139=[59153,145281],v14140=[14942,59154],v14141=[59155,149744],v14142=[29752,59156],v14143=[29851,59157],v14144=[16063,59158],v14145=[59159,150202],
v14146=[59160,150215],v14147=[16584,59161],v14148=[59162,150166],v14149=[59163,156078],v14150=[37639,59164],v14151=[59165,152961],v14152=[30750,59166],v14153=[30861,59167],v14154=[30856,59168],v14155=[30930,59169],v14156=[29648,59170],v14157=[31065,59171],v14158=[59172,161601],v14159=[59173,153315],v14160=[16654,59174],v14161=[31141,59177],v14162=[27181,59178],v14163=[59179,147194],v14164=[31290,59180],v14165=[31220,59181],v14166=[16750,59182],v14167=[59183,136934],v14168=[16690,59184],v14169=[37429,
59185],v14170=[31217,59186],v14171=[59187,134476],v14172=[59188,149900],v14173=[59189,131737],v14174=[59190,146874],v14175=[59191,137070],v14176=[13719,59192],v14177=[21867,59193],v14178=[13680,59194],v14179=[13994,59195],v14180=[59196,131540],v14181=[59197,134157],v14182=[31458,59198],v14183=[23129,59199],v14184=[59200,141045],v14185=[59201,154287],v14186=[59202,154268],v14187=[23053,59203],v14188=[59204,131675],v14189=[30960,59205],v14190=[23082,59206],v14191=[59207,154566],v14192=[31486,59208],
v14193=[16889,59209],v14194=[31837,59210],v14195=[31853,59211],v14196=[16913,59212],v14197=[59213,154547],v14198=[59214,155324],v14199=[59215,155302],v14200=[31949,59216],v14201=[59217,150009],v14202=[59218,137136],v14203=[31886,59219],v14204=[31868,59220],v14205=[31918,59221],v14206=[27314,59222],v14207=[32220,59223],v14208=[32263,59224],v14209=[32211,59225],v14210=[32590,59226],v14211=[59227,156257],v14212=[59228,155996],v14213=[59229,162632],v14214=[32151,59230],v14215=[59231,155266],v14216=[17002,
59232],v14217=[59233,158581],v14218=[59234,133398],v14219=[26582,59235],v14220=[59236,131150],v14221=[59237,144847],v14222=[22468,59238],v14223=[59239,156690],v14224=[59240,156664],v14225=[32733,59242],v14226=[31527,59243],v14227=[59244,133164],v14228=[59245,154345],v14229=[59246,154947],v14230=[31500,59247],v14231=[59248,155150],v14232=[39398,59249],v14233=[34373,59250],v14234=[39523,59251],v14235=[27164,59252],v14236=[59253,144447],v14237=[59255,150007],v14238=[59256,157101],v14239=[39455,59257],
v14240=[59258,157088],v14241=[59260,160039],v14242=[59261,158929],v14243=[17642,59262],v14244=[33079,59263],v14245=[17410,59264],v14246=[32966,59265],v14247=[33033,59266],v14248=[33090,59267],v14249=[59268,157620],v14250=[39107,59269],v14251=[59270,158274],v14252=[33378,59271],v14253=[33381,59272],v14254=[59273,158289],v14255=[33875,59274],v14256=[59275,159143],v14257=[34320,59276],v14258=[59277,160283],v14259=[23174,59278],v14260=[16767,59279],v14261=[59280,137280],v14262=[23339,59281],v14263=[59282,
137377],v14264=[23268,59283],v14265=[59284,137432],v14266=[34464,59285],v14267=[59286,195004],v14268=[59287,146831],v14269=[34861,59288],v14270=[59289,160802],v14271=[23042,59290],v14272=[34926,59291],v14273=[20293,59292],v14274=[34951,59293],v14275=[35007,59294],v14276=[35046,59295],v14277=[35173,59296],v14278=[35149,59297],v14279=[59298,153219],v14280=[35156,59299],v14281=[59300,161669],v14282=[59301,161668],v14283=[59302,166901],v14284=[59303,166873],v14285=[59304,166812],v14286=[59305,166393],
v14287=[16045,59306],v14288=[33955,59307],v14289=[18165,59308],v14290=[18127,59309],v14291=[14322,59310],v14292=[35389,59311],v14293=[35356,59312],v14294=[59313,169032],v14295=[24397,59314],v14296=[37419,59315],v14297=[59316,148100],v14298=[26068,59317],v14299=[28969,59318],v14300=[28868,59319],v14301=[59320,137285],v14302=[40301,59321],v14303=[35999,59322],v14304=[36073,59323],v14305=[59324,163292],v14306=[22938,59325],v14307=[30659,59326],v14308=[23024,59327],v14309=[14036,59329],v14310=[36394,
59330],v14311=[36519,59331],v14312=[59332,150537],v14313=[36656,59333],v14314=[36682,59334],v14315=[17140,59335],v14316=[27736,59336],v14317=[28603,59337],v14318=[59338,140065],v14319=[18587,59339],v14320=[28537,59340],v14321=[28299,59341],v14322=[59342,137178],v14323=[39913,59343],v14324=[14005,59344],v14325=[59345,149807],v14326=[37051,59346],v14327=[21873,59348],v14328=[18694,59349],v14329=[37307,59350],v14330=[37892,59351],v14331=[59352,166475],v14332=[16482,59353],v14333=[59354,166652],v14334=
[37927,59355],v14335=[59356,166941],v14336=[59357,166971],v14337=[34021,59358],v14338=[35371,59359],v14339=[38297,59360],v14340=[38311,59361],v14341=[38295,59362],v14342=[38294,59363],v14343=[59364,167220],v14344=[29765,59365],v14345=[16066,59366],v14346=[59367,149759],v14347=[59368,150082],v14348=[59369,148458],v14349=[16103,59370],v14350=[59371,143909],v14351=[38543,59372],v14352=[59373,167655],v14353=[59374,167526],v14354=[59375,167525],v14355=[16076,59376],v14356=[59377,149997],v14357=[59378,
150136],v14358=[59379,147438],v14359=[29714,59380],v14360=[29803,59381],v14361=[16124,59382],v14362=[38721,59383],v14363=[59384,168112],v14364=[26695,59385],v14365=[18973,59386],v14366=[59387,168083],v14367=[59388,153567],v14368=[37736,59390],v14369=[59391,166281],v14370=[59392,166950],v14371=[59393,166703],v14372=[59394,156606],v14373=[37562,59395],v14374=[23313,59396],v14375=[35689,59397],v14376=[18748,59398],v14377=[29689,59399],v14378=[59400,147995],v14379=[38811,59401],v14380=[39224,59403],v14381=
[59404,134950],v14382=[24001,59405],v14383=[59406,166853],v14384=[59407,150194],v14385=[38943,59408],v14386=[59409,169178],v14387=[37622,59410],v14388=[59411,169431],v14389=[37349,59412],v14390=[17600,59413],v14391=[59414,166736],v14392=[59415,150119],v14393=[59416,166756],v14394=[39132,59417],v14395=[59418,166469],v14396=[16128,59419],v14397=[37418,59420],v14398=[18725,59421],v14399=[33812,59422],v14400=[39227,59423],v14401=[39245,59424],v14402=[59425,162566],v14403=[15869,59426],v14404=[19311,59428],
v14405=[39338,59429],v14406=[39516,59430],v14407=[59431,166757],v14408=[59432,153800],v14409=[27279,59433],v14410=[39457,59434],v14411=[23294,59435],v14412=[39471,59436],v14413=[59437,170225],v14414=[19344,59438],v14415=[59439,170312],v14416=[39356,59440],v14417=[19389,59441],v14418=[19351,59442],v14419=[37757,59443],v14420=[22642,59444],v14421=[59445,135938],v14422=[22562,59446],v14423=[59447,149944],v14424=[59448,136424],v14425=[30788,59449],v14426=[59450,141087],v14427=[59451,146872],v14428=[26821,
59452],v14429=[15741,59453],v14430=[37976,59454],v14431=[14631,59455],v14432=[24912,59456],v14433=[59457,141185],v14434=[59458,141675],v14435=[24839,59459],v14436=[40015,59460],v14437=[40019,59461],v14438=[40059,59462],v14439=[39989,59463],v14440=[39952,59464],v14441=[39807,59465],v14442=[39887,59466],v14443=[59467,171565],v14444=[39839,59468],v14445=[59469,172533],v14446=[59470,172286],v14447=[40225,59471],v14448=[19630,59472],v14449=[59473,147716],v14450=[40472,59474],v14451=[19632,59475],v14452=
[40204,59476],v14453=[59477,172468],v14454=[59478,172269],v14455=[59479,172275],v14456=[59480,170287],v14457=[40357,59481],v14458=[33981,59482],v14459=[59483,159250],v14460=[59484,159711],v14461=[59485,158594],v14462=[34300,59486],v14463=[17715,59487],v14464=[59488,159140],v14465=[59489,159364],v14466=[59490,159216],v14467=[33824,59491],v14468=[34286,59492],v14469=[59493,159232],v14470=[59494,145367],v14471=[59495,155748],v14472=[31202,59496],v14473=[59497,144796],v14474=[59498,144960],v14475=[59500,
149982],v14476=[15714,59501],v14477=[37851,59502],v14478=[37566,59503],v14479=[37704,59504],v14480=[59505,131775],v14481=[30905,59506],v14482=[37495,59507],v14483=[37965,59508],v14484=[20452,59509],v14485=[13376,59510],v14486=[36964,59511],v14487=[59512,152925],v14488=[30781,59513],v14489=[30804,59514],v14490=[30902,59515],v14491=[30795,59516],v14492=[59517,137047],v14493=[59518,143817],v14494=[59519,149825],v14495=[13978,59520],v14496=[20338,59521],v14497=[28634,59522],v14498=[28633,59523],v14499=
[28702,59524,59525],v14500=[21524,59526],v14501=[59527,147893],v14502=[22459,59528],v14503=[22771,59529],v14504=[22410,59530],v14505=[40214,59531],v14506=[22487,59532],v14507=[28980,59533],v14508=[13487,59534],v14509=[59535,147884],v14510=[29163,59536],v14511=[59537,158784],v14512=[59538,151447],v14513=[59540,137141],v14514=[59541,166473],v14515=[24844,59542],v14516=[23246,59543],v14517=[23051,59544],v14518=[17084,59545],v14519=[59546,148616],v14520=[14124,59547],v14521=[19323,59548],v14522=[59549,
166396],v14523=[37819,59550],v14524=[37816,59551],v14525=[59552,137430],v14526=[59553,134941],v14527=[33906,59554],v14528=[59555,158912],v14529=[59556,136211],v14530=[59557,148218],v14531=[59558,142374],v14532=[59559,148417],v14533=[22932,59560],v14534=[59561,146871],v14535=[59562,157505],v14536=[32168,59563],v14537=[59564,155995],v14538=[59565,155812],v14539=[59566,149945],v14540=[59567,149899],v14541=[59568,166394],v14542=[37605,59569],v14543=[29666,59570],v14544=[16105,59571],v14545=[29876,59572],
v14546=[59573,166755],v14547=[59574,137375],v14548=[16097,59575],v14549=[59576,150195],v14550=[27352,59577],v14551=[29683,59578],v14552=[29691,59579],v14553=[16086,59580],v14554=[59581,150078],v14555=[59582,150164],v14556=[59583,137177],v14557=[59584,150118],v14558=[59585,132007],v14559=[59586,136228],v14560=[59587,149989],v14561=[29768,59588],v14562=[59589,149782],v14563=[28837,59590],v14564=[59591,149878],v14565=[37508,59592],v14566=[29670,59593],v14567=[37727,59594],v14568=[59595,132350],v14569=
[37681,59596],v14570=[59597,166606],v14571=[59598,166422],v14572=[37766,59599],v14573=[59600,166887],v14574=[59601,153045],v14575=[18741,59602],v14576=[59603,166530],v14577=[29035,59604],v14578=[59605,149827],v14579=[59606,134399],v14580=[22180,59607],v14581=[59608,132634],v14582=[59609,134123],v14583=[59610,134328],v14584=[21762,59611],v14585=[31172,59612],v14586=[59613,137210],v14587=[32254,59614],v14588=[59615,136898],v14589=[59616,150096],v14590=[59617,137298],v14591=[17710,59618],v14592=[37889,
59619],v14593=[14090,59620],v14594=[59621,166592],v14595=[59622,149933],v14596=[22960,59623],v14597=[59624,137407],v14598=[59625,137347],v14599=[59626,160900],v14600=[23201,59627],v14601=[14050,59628],v14602=[59629,146779],v14603=[14E3,59630],v14604=[37471,59631],v14605=[23161,59632],v14606=[59633,166529],v14607=[59634,137314],v14608=[37748,59635],v14609=[15565,59636],v14610=[59637,133812],v14611=[19094,59638],v14612=[14730,59639],v14613=[20724,59640],v14614=[15721,59641],v14615=[15692,59642],v14616=
[59643,136092],v14617=[29045,59644],v14618=[17147,59645],v14619=[59646,164376],v14620=[28175,59647],v14621=[59648,168164],v14622=[17643,59649],v14623=[27991,59650],v14624=[59651,163407],v14625=[28775,59652],v14626=[27823,59653],v14627=[15574,59654],v14628=[59655,147437],v14629=[59656,146989],v14630=[28162,59657],v14631=[28428,59658],v14632=[15727,59659],v14633=[59660,132085],v14634=[30033,59661],v14635=[14012,59662],v14636=[13512,59663],v14637=[18048,59664],v14638=[16090,59665],v14639=[18545,59666],
v14640=[22980,59667],v14641=[37486,59668],v14642=[18750,59669],v14643=[36673,59670],v14644=[59671,166940],v14645=[59672,158656],v14646=[22546,59673],v14647=[22472,59674],v14648=[14038,59675],v14649=[59676,136274],v14650=[28926,59677],v14651=[59678,148322],v14652=[59679,150129],v14653=[59680,143331],v14654=[59681,135856],v14655=[59682,140221],v14656=[26809,59683],v14657=[26983,59684],v14658=[59685,136088],v14659=[59686,144613],v14660=[59687,162804],v14661=[59688,145119],v14662=[59689,166531],v14663=
[59690,145366],v14664=[59691,144378],v14665=[59692,150687],v14666=[27162,59693],v14667=[59694,145069],v14668=[59695,158903],v14669=[33854,59696],v14670=[17631,59697],v14671=[17614,59698],v14672=[59699,159014],v14673=[59700,159057],v14674=[59701,158850],v14675=[59702,159710],v14676=[33597,59705],v14677=[59706,137018],v14678=[33773,59707],v14679=[59708,158848],v14680=[59709,159827],v14681=[59710,137179],v14682=[22921,59711],v14683=[23170,59712],v14684=[59713,137139],v14685=[23137,59714],v14686=[23153,
59715],v14687=[59716,137477],v14688=[59717,147964],v14689=[14125,59718],v14690=[23023,59719],v14691=[59720,137020],v14692=[14023,59721],v14693=[29070,59722],v14694=[37776,59723],v14695=[26266,59724],v14696=[59725,148133],v14697=[23150,59726],v14698=[23083,59727],v14699=[59728,148115],v14700=[27179,59729],v14701=[59730,147193],v14702=[59731,161590],v14703=[59732,148571],v14704=[59733,148170],v14705=[28957,59734],v14706=[59735,148057],v14707=[59736,166369],v14708=[20400,59737],v14709=[59738,159016],
v14710=[23746,59739],v14711=[59740,148686],v14712=[59741,163405],v14713=[59742,148413],v14714=[27148,59743],v14715=[59744,148054],v14716=[59745,135940],v14717=[28979,59747],v14718=[59748,148457],v14719=[15781,59749],v14720=[27871,59750],v14721=[59751,194597],v14722=[23019,59754],v14723=[24412,59757],v14724=[59764,144128],v14725=[31955,59776],v14726=[59783,162548],v14727=[59786,153334],v14728=[59790,162584],v14729=[36972,59791],v14730=[33270,59795],v14731=[30476,59797],v14732=[27810,59799],v14733=
[22269,59800],v14734=[22633,59828],v14735=[26465,59832],v14736=[23646,59838],v14737=[22770,59841],v14738=[28857,59843],v14739=[26627,59853],v14740=[36795,59859],v14741=[36796,59861],v14742=[20001,59871],v14743=[31545,59898],v14744=[15820,59902],v14745=[29482,57990,59909],v14746=[30048,59912],v14747=[22586,59920],v14748=[33446,59932],v14749=[27018,59940],v14750=[24803,59944],v14751=[20206,59984],v14752=[39364,60002],v14753=[40639,60023],v14754=[21249,60025],v14755=[26528,60038],v14756=[24808,60046],
v14757=[20916,60053],v14758=[31363,60064],v14759=[39994,60075],v14760=[31432,60093],v14761=[26906,60098],v14762=[22956,60100],v14763=[22592,60102],v14764=[21610,60114],v14765=[24807,60123],v14766=[22138,60125],v14767=[26965,60132],v14768=[39983,60133],v14769=[34725,60134],v14770=[23584,60141],v14771=[24075,60143],v14772=[26398,60147],v14773=[33965,60157],v14774=[35713,60161],v14775=[20088,60166],v14776=[25283,60176],v14777=[26709,60180],v14778=[33533,60190],v14779=[35237,60194],v14780=[36768,60196],
v14781=[38840,60198],v14782=[38983,60200],v14783=[39613,60201],v14784=[24497,60218],v14785=[26184,60219],v14786=[26303,60220],v14787=[60221,162425],v14788=[60225,149946],v14789=[60230,131910],v14790=[26382,60232],v14791=[26904,60233],v14792=[60235,161367],v14793=[60236,155618],v14794=[60239,161278],v14795=[60240,139418],v14796=[18640,60241],v14797=[19128,60242],v14798=[60244,166554],v14799=[60247,147515],v14800=[60250,150085],v14801=[60251,132554],v14802=[20946,60252],v14803=[60253,132625],v14804=
[22943,60254],v14805=[60255,138920],v14806=[15294,60256],v14807=[60257,146687],v14808=[14747,60262],v14809=[60264,165352],v14810=[60265,170441],v14811=[14178,60266],v14812=[60267,139715],v14813=[35678,60268],v14814=[60269,166734],v14815=[29193,60274],v14816=[60276,134264],v14817=[60280,132985],v14818=[36570,60281],v14819=[21135,60283],v14820=[29041,60285],v14821=[60288,147274],v14822=[60289,150183],v14823=[21948,60290],v14824=[60293,158546],v14825=[13427,60295],v14826=[60297,161330],v14827=[18200,
60299],v14828=[60303,149823],v14829=[20582,60305],v14830=[13563,60306],v14831=[60307,144332],v14832=[18300,60310],v14833=[60311,166216],v14834=[60315,138640],v14835=[60320,162834],v14836=[36950,60321],v14837=[60323,151450],v14838=[35682,60324],v14839=[23899,60327],v14840=[60328,158711],v14841=[60331,137500],v14842=[35562,60332],v14843=[60333,150006],v14844=[60335,147439],v14845=[19392,60337],v14846=[60340,141083],v14847=[37989,60341],v14848=[60342,153569],v14849=[24981,60343],v14850=[23079,60344],
v14851=[60345,194765],v14852=[60348,148769],v14853=[20074,60350],v14854=[60351,149812],v14855=[38486,60352],v14856=[28047,60353],v14857=[60354,158909],v14858=[35191,60356],v14859=[60359,156689],v14860=[31554,60363],v14861=[60364,168128],v14862=[60365,133649],v14863=[31301,60369],v14864=[39462,60372],v14865=[13919,60374],v14866=[60375,156777],v14867=[60376,131105],v14868=[31107,60377],v14869=[23852,60380],v14870=[60381,144665],v14871=[18128,60384],v14872=[30011,60386],v14873=[34917,60387],v14874=[22710,
60389],v14875=[14108,60390],v14876=[60391,140685],v14877=[15444,60394],v14878=[37505,60397],v14879=[60398,139642],v14880=[37680,60400],v14881=[60402,149968],v14882=[27705,60403],v14883=[60406,134904],v14884=[34855,60407],v14885=[35061,60408],v14886=[60409,141606],v14887=[60410,164979],v14888=[60411,137137],v14889=[28344,60412],v14890=[60413,150058],v14891=[60414,137248],v14892=[14756,60415],v14893=[17727,60419],v14894=[26294,60420],v14895=[60421,171181],v14896=[60422,170148],v14897=[35139,60423],
v14898=[16607,60427],v14899=[60428,136714],v14900=[14753,60429],v14901=[60430,145199],v14902=[60431,164072],v14903=[60432,136133],v14904=[29101,60433],v14905=[33638,60434],v14906=[60436,168360],v14907=[19639,60438],v14908=[60439,159919],v14909=[60440,166315],v14910=[60445,147834],v14911=[31555,60446],v14912=[31102,60447],v14913=[28597,60449],v14914=[60450,172767],v14915=[27139,60451],v14916=[60452,164632],v14917=[21410,60453],v14918=[60454,159239],v14919=[37823,60455],v14920=[26678,60456],v14921=
[38749,59389,60457],v14922=[60458,164207],v14923=[60460,158133],v14924=[60461,136173],v14925=[60462,143919],v14926=[23941,60464],v14927=[60465,166960],v14928=[22293,60467],v14929=[38947,60468],v14930=[60469,166217],v14931=[23979,60470],v14932=[60471,149896],v14933=[26046,60472],v14934=[27093,60473],v14935=[21458,60474],v14936=[60475,150181],v14937=[60476,147329],v14938=[15377,60477],v14939=[26422,60478],v14940=[60482,139169],v14941=[13770,60490],v14942=[18682,60493],v14943=[30728,60496],v14944=[37461,
60497],v14945=[17394,60499],v14946=[17375,60501],v14947=[23032,60505],v14948=[22155,60518],v14949=[60520,169449],v14950=[36882,60541],v14951=[21953,60546],v14952=[17673,60551],v14953=[32383,60552],v14954=[28502,60553],v14955=[27313,60554],v14956=[13540,60556],v14957=[60558,161949],v14958=[14138,60559],v14959=[60562,163876],v14960=[60565,162366],v14961=[15851,60567],v14962=[60569,146615],v14963=[60574,156248],v14964=[22207,60575],v14965=[36366,60577],v14966=[23405,60578],v14967=[25566,60581],v14968=
[25904,60585],v14969=[22061,60586],v14970=[21530,60588],v14971=[60591,171416],v14972=[19581,60592],v14973=[22050,60593],v14974=[22046,60594],v14975=[32585,60595],v14976=[22901,60597],v14977=[60598,146752],v14978=[34672,60599],v14979=[33047,60604],v14980=[40286,60605],v14981=[36120,60606],v14982=[30267,60607],v14983=[40005,60608],v14984=[30286,60609],v14985=[30649,60610],v14986=[37701,60611],v14987=[21554,60612],v14988=[33096,60613],v14989=[33527,60614],v14990=[22053,60615],v14991=[33074,60616],v14992=
[33816,60617],v14993=[32957,60618],v14994=[21994,60619],v14995=[31074,60620],v14996=[22083,60621],v14997=[21526,60622],v14998=[60623,134813],v14999=[13774,60624],v15000=[22021,57509,60625],v15001=[22001,60626],v15002=[26353,60627],v15003=[60628,164578],v15004=[13869,60629],v15005=[30004,60630],v15006=[22E3,60631],v15007=[21946,60632],v15008=[21655,60633],v15009=[21874,60634],v15010=[60635,134209],v15011=[60636,134294],v15012=[24272,57652,60637],v15013=[60639,134774],v15014=[60640,142434],v15015=[60641,
134818],v15016=[40619,60642],v15017=[32090,60643],v15018=[60645,135285],v15019=[25245,60646],v15020=[38765,60647],v15021=[21652,60648],v15022=[36045,60649],v15023=[29174,60650],v15024=[37238,60651],v15025=[25596,60652],v15026=[25529,60653],v15027=[25598,60654],v15028=[21865,60655],v15029=[60656,142147],v15030=[40050,60657],v15031=[60658,143027],v15032=[20890,60659],v15033=[13535,60660],v15034=[60661,134567],v15035=[20903,60662],v15036=[21581,60663],v15037=[21790,60664],v15038=[21779,60665],v15039=
[30310,60666],v15040=[36397,60667],v15041=[60668,157834],v15042=[30129,60669],v15043=[32950,60670],v15044=[34820,60671],v15045=[35015,60673],v15046=[33206,60674],v15047=[33820,60675],v15048=[17644,60677],v15049=[29444,60678],v15050=[33547,60681],v15051=[22139,60683],v15052=[37232,60690],v15053=[37384,60692],v15054=[60696,134905],v15055=[29286,60697],v15056=[18254,60699],v15057=[60701,163833],v15058=[16634,60703],v15059=[40029,60704],v15060=[25887,60705],v15061=[18675,60707],v15062=[60708,149472],
v15063=[60709,171388],v15064=[60713,161187],v15065=[60716,155720],v15066=[29091,60718],v15067=[32398,60719],v15068=[40272,60720],v15069=[13687,60723],v15070=[27826,60725],v15071=[21351,60726],v15072=[14812,60728],v15073=[60731,149016],v15074=[33325,60734],v15075=[21579,60735],v15076=[14930,60740],v15077=[29556,60742],v15078=[60743,171692],v15079=[19721,60744],v15080=[39917,60745],v15081=[19547,60748],v15082=[60751,171998],v15083=[33884,60752],v15084=[60754,160434],v15085=[25390,60757],v15086=[32037,
60758],v15087=[14890,60761],v15088=[36872,60762],v15089=[21196,60763],v15090=[15988,60764],v15091=[13946,60765],v15092=[17897,60766],v15093=[60767,132238],v15094=[30272,60768],v15095=[23280,60769],v15096=[60770,134838],v15097=[30842,60771],v15098=[18358,60772],v15099=[22695,60773],v15100=[16575,60774],v15101=[22140,60775],v15102=[39819,60776],v15103=[23924,60777],v15104=[30292,60778],v15105=[60779,173108],v15106=[40581,60780],v15107=[19681,60781],v15108=[14331,60783],v15109=[24857,60784],v15110=[60786,
148466],v15111=[22109,60788],v15112=[60792,171526],v15113=[21044,60793],v15114=[13741,60795],v15115=[40316,60797],v15116=[31830,60798],v15117=[39737,60799],v15118=[22494,60800],v15119=[23635,60802],v15120=[25811,60803],v15121=[60804,169168],v15122=[60805,156469],v15123=[34477,60807],v15124=[60808,134440],v15125=[60811,134513],v15126=[20990,60813],v15127=[60814,139023],v15128=[23950,60815],v15129=[38659,60816],v15130=[60817,138705],v15131=[40577,60818],v15132=[36940,60819],v15133=[31519,60820],v15134=
[39682,60821],v15135=[23761,60822],v15136=[31651,60823],v15137=[25192,60824],v15138=[25397,60825],v15139=[39679,60826],v15140=[31695,60827],v15141=[39722,60828],v15142=[31870,60829],v15143=[31810,60831],v15144=[31878,60832],v15145=[39957,60833],v15146=[31740,60834],v15147=[39689,60835],v15148=[40794,60839],v15149=[21875,60840],v15150=[23491,60841],v15151=[20477,60842],v15152=[40600,60843],v15153=[20466,60844],v15154=[21088,60845],v15155=[21201,60847],v15156=[22375,60848],v15157=[20566,60849],v15158=
[22967,60850],v15159=[24082,60851],v15160=[38856,60852],v15161=[40363,60853],v15162=[36700,60854],v15163=[21609,60855],v15164=[38836,60856],v15165=[39232,60857],v15166=[38842,60858],v15167=[21292,60859],v15168=[24880,60860],v15169=[26924,60861],v15170=[21466,60862],v15171=[39946,60863],v15172=[40194,60864],v15173=[19515,60865],v15174=[38465,60866],v15175=[27008,60867],v15176=[20646,60868],v15177=[30022,60869],v15178=[60870,137069],v15179=[39386,60871],v15180=[21107,60872],v15181=[37209,60874],v15182=
[38529,60875],v15183=[37212,60876],v15184=[37201,60878],v15185=[60879,167575],v15186=[25471,60880],v15187=[27338,60882],v15188=[22033,60883],v15189=[37262,60884],v15190=[30074,60885],v15191=[25221,60886],v15192=[29519,60888],v15193=[31856,60889],v15194=[60890,154657],v15195=[30422,60894],v15196=[39837,60895],v15197=[20010,60896],v15198=[60897,134356],v15199=[33726,60898],v15200=[34882,60899],v15201=[23626,60901],v15202=[27072,60902],v15203=[21023,60905],v15204=[24053,60906],v15205=[20174,60907],v15206=
[27697,60908],v15207=[60909,131570],v15208=[20281,60910],v15209=[21660,60911],v15210=[21146,60913],v15211=[36226,60914],v15212=[13822,60915],v15213=[13811,60917],v15214=[27474,60919],v15215=[37244,60920],v15216=[40869,60921],v15217=[39831,60922],v15218=[38958,60923],v15219=[39092,60924],v15220=[39610,60925],v15221=[40616,60926],v15222=[40580,60927],v15223=[31508,60929],v15224=[27642,60931],v15225=[34840,60932],v15226=[32632,60933],v15227=[22048,60935],v15228=[60936,173642],v15229=[36471,60937],v15230=
[40787,60938],v15231=[36308,60940],v15232=[36431,60941],v15233=[40476,60942],v15234=[36353,60943],v15235=[25218,60944],v15236=[60945,164733],v15237=[36392,60946],v15238=[36469,60947],v15239=[31443,60948],v15240=[31294,60950],v15241=[30936,60951],v15242=[27882,60952],v15243=[35431,60953],v15244=[30215,60954],v15245=[40742,60956],v15246=[27854,60957],v15247=[34774,60958],v15248=[30147,60959],v15249=[60960,172722],v15250=[30803,60961],v15251=[36108,60963],v15252=[29410,60964],v15253=[29553,60965],v15254=
[35629,60966],v15255=[29442,60967],v15256=[29937,60968],v15257=[36075,60969],v15258=[60970,150203],v15259=[34351,60971],v15260=[24506,60972],v15261=[34976,60973],v15262=[17591,60974],v15263=[60977,159237],v15264=[35454,60979],v15265=[60980,140571],v15266=[24829,60982],v15267=[30311,60983],v15268=[39639,60984],v15269=[40260,60985],v15270=[37742,58859,60986],v15271=[39823,60987],v15272=[34805,60988],v15273=[36087,60991],v15274=[29484,60992],v15275=[38689,60993],v15276=[39856,60994],v15277=[13782,60995],
v15278=[29362,60996],v15279=[19463,60997],v15280=[31825,60998],v15281=[39242,60999],v15282=[24921,61001],v15283=[19460,61002],v15284=[40598,61003],v15285=[24957,61004],v15286=[22367,61006],v15287=[24943,61007],v15288=[25254,61008],v15289=[25145,61009],v15290=[14940,61011],v15291=[25058,61012],v15292=[21418,61013],v15293=[25444,61015],v15294=[26626,61016],v15295=[13778,61017],v15296=[23895,61018],v15297=[36826,61020],v15298=[61021,167481],v15299=[20697,61023],v15300=[30982,61025],v15301=[21298,61026],
v15302=[38456,61027],v15303=[61028,134971],v15304=[16485,61029],v15305=[30718,61031],v15306=[31938,61033],v15307=[61034,155418],v15308=[31962,61035],v15309=[31277,61036],v15310=[32870,61037],v15311=[32867,61038],v15312=[32077,61039],v15313=[29957,61040],v15314=[29938,61041],v15315=[35220,61042],v15316=[33306,61043],v15317=[26380,61044],v15318=[32866,61045],v15319=[61046,160902],v15320=[32859,61047],v15321=[29936,61048],v15322=[33027,61049],v15323=[30500,61050],v15324=[35209,61051],v15325=[61052,157644],
v15326=[30035,61053],v15327=[34729,61055],v15328=[34766,61056],v15329=[33224,61057],v15330=[34700,61058],v15331=[35401,61059],v15332=[36013,61060],v15333=[35651,61061],v15334=[30507,61062],v15335=[29944,61063],v15336=[34010,61064],v15337=[27058,61066],v15338=[36262,61067],v15339=[35241,58392,61069],v15340=[28089,61071],v15341=[34753,61072],v15342=[61073,147473],v15343=[29927,61074],v15344=[15835,61075],v15345=[29046,61076],v15346=[24740,57702,61077],v15347=[24988,61078],v15348=[15569,61079],v15349=
[24695,61081],v15350=[32625,61083],v15351=[24809,61086],v15352=[19326,61087],v15353=[57344,132423],v15354=[37595,57345],v15355=[57346,132575],v15356=[57347,147397],v15357=[34124,57348],v15358=[17077,57349],v15359=[29679,57350],v15360=[20917,57351],v15361=[13897,57352],v15362=[57353,149826],v15363=[57354,166372],v15364=[37700,57355],v15365=[57356,137691],v15366=[33518,57357],v15367=[57358,146632],v15368=[30780,57359],v15369=[26436,57360],v15370=[25311,57361],v15371=[57362,149811],v15372=[57363,166314],
v15373=[57364,131744],v15374=[57365,158643],v15375=[57366,135941],v15376=[20395,57367],v15377=[57368,140525],v15378=[20488,57369],v15379=[57370,159017],v15380=[57371,162436],v15381=[57372,144896],v15382=[57373,150193],v15383=[57374,140563],v15384=[57376,131966],v15385=[24484,57377],v15386=[57378,131968],v15387=[57379,131911],v15388=[28379,57380],v15389=[57381,132127],v15390=[20737,57383],v15391=[13434,57384],v15392=[20750,57385],v15393=[39020,57386],v15394=[14147,57387],v15395=[33814,57388],v15396=
[57389,149924],v15397=[57390,132231],v15398=[20832,57391],v15399=[57392,144308],v15400=[20842,57393],v15401=[57394,134143],v15402=[57395,139516],v15403=[57396,131813],v15404=[57397,140592],v15405=[57398,132494],v15406=[57399,143923],v15407=[57400,137603],v15408=[23426,57401],v15409=[34685,57402],v15410=[57403,132531],v15411=[57404,146585],v15412=[20914,57405],v15413=[20920,57406],v15414=[40244,57407],v15415=[20937,57408],v15416=[20943,57409],v15417=[20945,57410],v15418=[15580,57411],v15419=[20947,
57412],v15420=[57413,150182],v15421=[20915,57414],v15422=[20973,57417],v15423=[33741,57418],v15424=[26942,57419],v15425=[57420,145197],v15426=[24443,57421],v15427=[21003,57422],v15428=[21030,57423],v15429=[21052,57424],v15430=[21173,57425],v15431=[21079,57426],v15432=[21140,57427],v15433=[21177,57428],v15434=[21189,57429],v15435=[31765,57430],v15436=[34114,57431],v15437=[21216,57432],v15438=[34317,57433],v15439=[57434,158483],v15440=[57436,166622],v15441=[21833,57437],v15442=[28377,57438],v15443=
[57439,147328],v15444=[57440,133460],v15445=[57441,147436],v15446=[21299,57442],v15447=[57444,134114],v15448=[27851,57445],v15449=[57446,136998],v15450=[26651,57447],v15451=[29653,57448],v15452=[24650,57449],v15453=[16042,57450],v15454=[14540,57451],v15455=[57452,136936],v15456=[29149,57453],v15457=[17570,57454],v15458=[21357,57455],v15459=[21364,57456],v15460=[57457,165547],v15461=[21374,57458],v15462=[57460,136598],v15463=[57461,136723],v15464=[30694,57462],v15465=[21395,57463],v15466=[57464,166555],
v15467=[21408,57465],v15468=[21419,57466],v15469=[21422,57467],v15470=[29607,57468],v15471=[57469,153458],v15472=[16217,57470],v15473=[29596,57471],v15474=[21441,57472],v15475=[21445,57473],v15476=[27721,57474],v15477=[20041,57475],v15478=[22526,57476],v15479=[21465,57477],v15480=[15019,57478],v15481=[57479,134031],v15482=[21472,57480],v15483=[57481,147435],v15484=[57482,142755],v15485=[21494,57483],v15486=[57484,134263],v15487=[21523,57485],v15488=[28793,57486],v15489=[21803,57487],v15490=[26199,
57488],v15491=[27995,57489],v15492=[21613,57490],v15493=[57491,158547],v15494=[57492,134516],v15495=[21853,57493],v15496=[21647,57494],v15497=[21668,57495],v15498=[18342,57496],v15499=[57497,136973],v15500=[57498,134877],v15501=[15796,57499],v15502=[57500,134477],v15503=[57501,166332],v15504=[57502,140952],v15505=[21831,57503],v15506=[19693,57504],v15507=[21551,57505],v15508=[29719,57506],v15509=[21894,57507],v15510=[21929,57508],v15511=[57510,137431],v15512=[57511,147514],v15513=[17746,57512],v15514=
[57513,148533],v15515=[26291,57514],v15516=[57515,135348],v15517=[22071,57516],v15518=[26317,57517],v15519=[57518,144010],v15520=[26276,57519],v15521=[22093,57521],v15522=[22095,57522],v15523=[30961,57523],v15524=[22257,57524],v15525=[38791,57525],v15526=[21502,57526],v15527=[22272,57527],v15528=[22255,57528],v15529=[22253,57529],v15530=[57530,166758],v15531=[13859,57531],v15532=[57532,135759],v15533=[22342,57533],v15534=[57534,147877],v15535=[27758,57535],v15536=[28811,57536],v15537=[22338,57537],
v15538=[14001,57538],v15539=[57539,158846],v15540=[22502,57540],v15541=[57541,136214],v15542=[22531,57542],v15543=[57543,136276],v15544=[57544,148323],v15545=[22566,57545],v15546=[57546,150517],v15547=[22698,57548],v15548=[13665,57549],v15549=[22752,57550],v15550=[22748,57551],v15551=[57552,135740],v15552=[22779,57553],v15553=[23551,57554],v15554=[22339,57555],v15555=[57556,172368],v15556=[57557,148088],v15557=[37843,57558],v15558=[13729,57559],v15559=[22815,57560],v15560=[26790,57561],v15561=[14019,
57562],v15562=[28249,57563],v15563=[57564,136766],v15564=[23076,57565],v15565=[57567,136850],v15566=[34053,57568],v15567=[22985,57569],v15568=[57570,134478],v15569=[57571,158849],v15570=[57572,159018],v15571=[57573,137180],v15572=[23001,57574],v15573=[57575,137211],v15574=[57576,137138],v15575=[57577,159142],v15576=[28017,57578],v15577=[57579,137256],v15578=[57580,136917],v15579=[23033,57581],v15580=[57582,159301],v15581=[23211,57583],v15582=[23139,57584],v15583=[14054,57585],v15584=[57586,149929],
v15585=[14088,57588],v15586=[23190,57589],v15587=[29797,57590],v15588=[23251,57591],v15589=[57592,159649],v15590=[57593,140628],v15591=[57595,137489],v15592=[14130,57596],v15593=[57597,136888],v15594=[24195,57598],v15595=[21200,57599],v15596=[23414,57600],v15597=[25992,57601],v15598=[23420,57602],v15599=[57603,162318],v15600=[16388,57604],v15601=[18525,57605],v15602=[57606,131588],v15603=[23509,57607],v15604=[57609,137780],v15605=[57610,154060],v15606=[57611,132517],v15607=[23539,57612],v15608=[23453,
57613],v15609=[19728,57614],v15610=[23557,57615],v15611=[57616,138052],v15612=[23571,57617],v15613=[29646,57618],v15614=[23572,57619],v15615=[57620,138405],v15616=[57621,158504],v15617=[23625,57622],v15618=[18653,57623],v15619=[23685,57624],v15620=[23785,57625],v15621=[23791,57626],v15622=[23947,57627],v15623=[57628,138745],v15624=[57629,138807],v15625=[23824,57630],v15626=[23832,57631],v15627=[23878,57632],v15628=[57633,138916],v15629=[23738,57634],v15630=[24023,57635],v15631=[33532,57636],v15632=
[14381,57637],v15633=[57638,149761],v15634=[57639,139337],v15635=[57640,139635],v15636=[33415,57641],v15637=[14390,57642],v15638=[15298,57643],v15639=[24110,57644],v15640=[27274,57645],v15641=[57648,148668],v15642=[57649,134355],v15643=[21414,57650],v15644=[20151,57651],v15645=[21416,57653],v15646=[57654,137073],v15647=[24073,57655],v15648=[57657,164994],v15649=[24313,57658],v15650=[24315,57659],v15651=[14496,57660],v15652=[24316,57661],v15653=[26686,57662],v15654=[37915,57663],v15655=[24333,57664],
v15656=[57665,131521],v15657=[57666,194708],v15658=[15070,57667],v15659=[57669,135994],v15660=[24378,57670],v15661=[57671,157832],v15662=[57672,140240],v15663=[57674,140401],v15664=[24419,57675],v15665=[57677,159342],v15666=[24434,57678],v15667=[37696,57679],v15668=[57680,166454],v15669=[24487,57681],v15670=[23990,57682],v15671=[15711,57683],v15672=[57684,152144],v15673=[57685,139114],v15674=[57686,159992],v15675=[57687,140904],v15676=[37334,57688],v15677=[57689,131742],v15678=[57690,166441],v15679=
[24625,57691],v15680=[26245,57692],v15681=[14691,57694],v15682=[15815,57695],v15683=[13881,57696],v15684=[22416,57697],v15685=[57698,141236],v15686=[31089,57699],v15687=[15936,57700],v15688=[24734,57701],v15689=[57704,149890],v15690=[57705,149903],v15691=[57706,162387],v15692=[29860,57707],v15693=[20705,57708],v15694=[23200,57709],v15695=[24932,57710],v15696=[24898,57712],v15697=[57713,194726],v15698=[57714,159442],v15699=[24961,57715],v15700=[20980,57716],v15701=[57717,132694],v15702=[24967,57718],
v15703=[23466,57719],v15704=[57720,147383],v15705=[57721,141407],v15706=[25043,57722],v15707=[57723,166813],v15708=[57724,170333],v15709=[25040,57725],v15710=[14642,57726],v15711=[57727,141696],v15712=[57728,141505],v15713=[24611,57729],v15714=[24924,57730],v15715=[25886,57731],v15716=[25483,57732],v15717=[57733,131352],v15718=[25285,57734],v15719=[57735,137072],v15720=[25301,57736],v15721=[57737,142861],v15722=[25452,57738],v15723=[57739,149983],v15724=[14871,57740],v15725=[25656,57741],v15726=[25592,
57742],v15727=[57743,136078],v15728=[57744,137212],v15729=[28554,57746],v15730=[57747,142902],v15731=[57750,153373],v15732=[25825,57751],v15733=[25829,57752],v15734=[38011,57753],v15735=[14950,57754],v15736=[25658,57755],v15737=[14935,57756],v15738=[25933,57757],v15739=[28438,57758],v15740=[57759,150056],v15741=[57760,150051],v15742=[25989,57761],v15743=[25965,57762],v15744=[25951,57763],v15745=[26037,57765],v15746=[57766,149824],v15747=[19255,57767],v15748=[26065,57768],v15749=[16600,57769],v15750=
[57770,137257],v15751=[26083,57772],v15752=[24543,57773],v15753=[57774,144384],v15754=[26136,57775],v15755=[57776,143863],v15756=[57777,143864],v15757=[26180,57778],v15758=[57779,143780],v15759=[57780,143781],v15760=[26187,57781],v15761=[57782,134773],v15762=[26215,57783],v15763=[57784,152038],v15764=[26227,57785],v15765=[57788,143921],v15766=[57789,165364],v15767=[57790,143816],v15768=[57791,152339],v15769=[30661,57792],v15770=[57793,141559],v15771=[39332,57794],v15772=[26370,57795],v15773=[57796,
148380],v15774=[57797,150049],v15775=[27130,57799],v15776=[57800,145346],v15777=[26471,57802],v15778=[26466,57803],v15779=[57804,147917],v15780=[57805,168173],v15781=[26583,57806],v15782=[17641,57807],v15783=[26658,57808],v15784=[28240,57809],v15785=[37436,57810],v15786=[26625,57811],v15787=[57812,144358],v15788=[57813,159136],v15789=[26717,57814],v15790=[57815,144495],v15791=[27105,57816],v15792=[27147,57817],v15793=[57818,166623],v15794=[26995,57819],v15795=[26819,57820],v15796=[57821,144845],v15797=
[26881,57822],v15798=[26880,57823],v15799=[14849,57825],v15800=[57826,144956],v15801=[15232,57827],v15802=[26540,57828],v15803=[26977,57829],v15804=[57830,166474],v15805=[17148,57831],v15806=[26934,57832],v15807=[27032,57833],v15808=[15265,57834],v15809=[57835,132041],v15810=[33635,57836],v15811=[20624,57837],v15812=[27129,57838],v15813=[57839,144985],v15814=[57840,139562],v15815=[27205,57841],v15816=[57842,145155],v15817=[27293,57843],v15818=[15347,57844],v15819=[26545,57845],v15820=[27336,57846],
v15821=[57847,168348],v15822=[15373,57848],v15823=[27421,57849],v15824=[57850,133411],v15825=[24798,57851,60308],v15826=[27445,57852],v15827=[27508,57853],v15828=[57854,141261],v15829=[28341,57855],v15830=[57856,146139],v15831=[57858,137560],v15832=[14144,57859],v15833=[21537,57860],v15834=[57861,146266],v15835=[27617,57862],v15836=[57863,147196],v15837=[27612,57864],v15838=[27703,57865],v15839=[57866,140427],v15840=[57867,149745],v15841=[57868,158545],v15842=[27738,57869],v15843=[33318,57870],v15844=
[27769,57871],v15845=[57872,146876],v15846=[17605,57873],v15847=[57874,146877],v15848=[57875,147876],v15849=[57876,149772],v15850=[57877,149760],v15851=[57878,146633],v15852=[14053,57879],v15853=[15595,57880],v15854=[57881,134450],v15855=[39811,57882],v15856=[57883,143865],v15857=[57884,140433],v15858=[32655,57885],v15859=[26679,57886],v15860=[57887,159013],v15861=[57888,159137],v15862=[57889,159211],v15863=[28054,57890],v15864=[27996,57891],v15865=[28284,57892],v15866=[28420,57893],v15867=[57894,
149887],v15868=[57895,147589],v15869=[57896,159346],v15870=[34099,57897],v15871=[57898,159604],v15872=[20935,57899],v15873=[33838,57902],v15874=[57903,166689],v15875=[57905,146991],v15876=[29779,57906],v15877=[57907,147330],v15878=[31180,57908],v15879=[28239,57909],v15880=[23185,57910],v15881=[57911,143435],v15882=[28664,57912],v15883=[14093,57913],v15884=[28573,57914],v15885=[57915,146992],v15886=[28410,57916],v15887=[57917,136343],v15888=[57918,147517],v15889=[17749,57919],v15890=[37872,57920],
v15891=[28484,57921],v15892=[28508,57922],v15893=[15694,57923],v15894=[28532,57924],v15895=[57925,168304],v15896=[15675,57926],v15897=[28575,57927],v15898=[57928,147780],v15899=[28627,57929],v15900=[57930,147601],v15901=[57931,147797],v15902=[57932,147513],v15903=[57933,147440],v15904=[57934,147380],v15905=[57935,147775],v15906=[20959,57936],v15907=[57937,147798],v15908=[57938,147799],v15909=[57939,147776],v15910=[57940,156125],v15911=[28747,57941],v15912=[28798,57942],v15913=[28839,57943],v15914=
[28876,57945],v15915=[28885,57946],v15916=[28886,57947],v15917=[28895,57948],v15918=[16644,57949],v15919=[15848,57950],v15920=[29108,57951],v15921=[29078,57952],v15922=[57953,148087],v15923=[28971,57954],v15924=[28997,57955],v15925=[23176,57956],v15926=[29002,57957],v15927=[57960,148325],v15928=[29007,57961],v15929=[37730,57962],v15930=[57963,148161],v15931=[28972,57964],v15932=[57965,148570],v15933=[57966,150055],v15934=[57967,150050],v15935=[29114,57968],v15936=[57969,166888],v15937=[28861,57970],
v15938=[29198,57971],v15939=[37954,57972],v15940=[29205,57973],v15941=[22801,57974],v15942=[37955,57975],v15943=[29220,57976],v15944=[37697,57977],v15945=[57978,153093],v15946=[29230,57979],v15947=[29248,57980],v15948=[57981,149876],v15949=[26813,57982],v15950=[29269,57983],v15951=[29271,57984],v15952=[15957,57985],v15953=[57986,143428],v15954=[26637,57987],v15955=[28477,57988],v15956=[29314,57989],v15957=[29483,57991],v15958=[57992,149539],v15959=[57993,165931],v15960=[18669,57994],v15961=[57995,
165892],v15962=[29480,57996],v15963=[29486,57997],v15964=[29647,57998],v15965=[29610,57999],v15966=[58E3,134202],v15967=[58001,158254],v15968=[29641,58002],v15969=[29769,58003],v15970=[58004,147938],v15971=[58005,136935],v15972=[58006,150052],v15973=[26147,58007],v15974=[14021,58008],v15975=[58009,149943],v15976=[58010,149901],v15977=[58011,150011],v15978=[29687,58012],v15979=[29717,58013],v15980=[26883,58014],v15981=[58015,150054],v15982=[29753,58016],v15983=[16087,58018],v15984=[58020,141485],v15985=
[29792,58021],v15986=[58022,167602],v15987=[29767,58023],v15988=[29668,58024],v15989=[29814,58025],v15990=[33721,58026],v15991=[29804,58027],v15992=[29812,58029],v15993=[37873,58030],v15994=[27180,58031],v15995=[29826,58032],v15996=[18771,58033],v15997=[58034,150156],v15998=[58035,147807],v15999=[58036,150137],v16000=[58037,166799],v16001=[23366,58038],v16002=[58039,166915],v16003=[58040,137374],v16004=[29896,58041],v16005=[58042,137608],v16006=[29966,58043],v16007=[29982,58045],v16008=[58046,167641],
v16009=[58047,137803],v16010=[23511,58048],v16011=[58049,167596],v16012=[37765,58050],v16013=[30029,58051],v16014=[30026,58052],v16015=[30055,58053],v16016=[30062,58054],v16017=[58055,151426],v16018=[16132,58056],v16019=[58057,150803],v16020=[30094,58058],v16021=[29789,58059],v16022=[30110,58060],v16023=[30132,58061],v16024=[30210,58062],v16025=[30252,58063],v16026=[30289,58064],v16027=[30287,58065],v16028=[30319,58066],v16029=[58068,156661],v16030=[30352,58069],v16031=[33263,58070],v16032=[14328,
58071],v16033=[58072,157969],v16034=[58073,157966],v16035=[30369,58074],v16036=[30373,58075],v16037=[30391,58076],v16038=[30412,58077],v16039=[58078,159647],v16040=[33890,58079],v16041=[58080,151709],v16042=[58081,151933],v16043=[58082,138780],v16044=[30494,58083],v16045=[30502,58084],v16046=[30528,58085],v16047=[25775,58086],v16048=[58087,152096],v16049=[30552,58088],v16050=[58089,144044],v16051=[30639,58090],v16052=[58091,166244],v16053=[58092,166248],v16054=[58093,136897],v16055=[30708,58094],
v16056=[26826,58098],v16057=[30895,58099],v16058=[30919,58100],v16059=[30931,58101],v16060=[38565,58102],v16061=[31022,58103],v16062=[58104,153056],v16063=[30935,58105],v16064=[31028,58106],v16065=[30897,58107],v16066=[58108,161292],v16067=[36792,58109],v16068=[34948,58110],v16069=[58113,140828],v16070=[31110,58114],v16071=[35072,58115],v16072=[26882,58116],v16073=[31104,58117],v16074=[58118,153687],v16075=[31133,58119],v16076=[58120,162617],v16077=[31036,58121],v16078=[31145,58122],v16079=[28202,
58123],v16080=[58124,160038],v16081=[16040,58125],v16082=[31174,58126],v16083=[58127,168205],v16084=[31188,58128],v16085=[21797,62526],v16086=[62528,134210],v16087=[62529,134421],v16088=[62530,151851],v16089=[21904,62531],v16090=[62532,142534],v16091=[14828,62533],v16092=[62534,131905],v16093=[36422,62535],v16094=[62536,150968],v16095=[62537,169189],v16096=[62539,164030],v16097=[30586,62540],v16098=[62541,142392],v16099=[14900,62542],v16100=[18389,62543],v16101=[62544,164189],v16102=[62545,158194],
v16103=[62546,151018],v16104=[25821,62547],v16105=[62548,134524],v16106=[62549,135092],v16107=[62550,134357],v16108=[25741,62552],v16109=[36478,62553],v16110=[62554,134806],v16111=[62556,135012],v16112=[62557,142505],v16113=[62558,164438],v16114=[62559,148691],v16115=[62561,134470],v16116=[62562,170573],v16117=[62563,164073],v16118=[18420,62564],v16119=[62565,151207],v16120=[62566,142530],v16121=[39602,62567],v16122=[14951,62568],v16123=[62569,169460],v16124=[16365,62570],v16125=[13574,62571],v16126=
[62572,152263],v16127=[62573,169940],v16128=[62575,142660],v16129=[40302,62576],v16130=[38933,62577],v16131=[17369,62579],v16132=[25780,62581],v16133=[21731,62582],v16134=[62584,142282],v16135=[14843,62586],v16136=[62588,157402],v16137=[62589,157462],v16138=[62590,162208],v16139=[25834,62591],v16140=[62592,151634],v16141=[62593,134211],v16142=[36456,62594],v16143=[62596,166732],v16144=[62597,132913],v16145=[18443,62599],v16146=[62600,131497],v16147=[16378,62601],v16148=[22643,62602],v16149=[62603,
142733],v16150=[62605,148936],v16151=[62606,132348],v16152=[62607,155799],v16153=[62608,134988],v16154=[21881,62610],v16155=[17338,62612],v16156=[19124,62614],v16157=[62615,141926],v16158=[62616,135325],v16159=[33194,62617],v16160=[39157,62618],v16161=[62619,134556],v16162=[25465,62620],v16163=[14846,62621],v16164=[62622,141173],v16165=[36288,62623],v16166=[22177,62624],v16167=[25724,62625],v16168=[15939,62626],v16169=[62628,173569],v16170=[62629,134665],v16171=[62630,142031],v16172=[62633,135368],
v16173=[62634,145858],v16174=[14738,62635],v16175=[14854,62636],v16176=[62637,164507],v16177=[13688,62638],v16178=[62639,155209],v16179=[62640,139463],v16180=[62643,142514],v16181=[62644,169760],v16182=[13500,62645],v16183=[27709,62646],v16184=[62647,151099],v16185=[62650,161140],v16186=[62651,142987],v16187=[62652,139784],v16188=[62653,173659],v16189=[62654,167117],v16190=[62655,134778],v16191=[62656,134196],v16192=[62683,161337],v16193=[62684,142286],v16194=[62687,142417],v16195=[14872,62689],v16196=
[62691,135367],v16197=[62693,173618],v16198=[62695,167122],v16199=[62696,167321],v16200=[62697,167114],v16201=[38314,62698],v16202=[62706,161630],v16203=[28992,62708],v16204=[20822,62385],v16205=[20616,62487],v16206=[13459,62489],v16207=[20870,62491],v16208=[24130,63037],v16209=[20997,62495],v16210=[21031,62436],v16211=[21113,62497],v16212=[13651,62504],v16213=[21442,62505],v16214=[21343,62715],v16215=[21823,62520],v16216=[21976,59986],v16217=[13789,62722],v16218=[22049,63067],v16219=[22100,60044],
v16220=[60148,135291],v16221=[60153,135379],v16222=[61095,135934],v16223=[14265,60104],v16224=[23745,61099],v16225=[23829,63066],v16226=[23894,63030],v16227=[14392,63036],v16228=[20097,62477],v16229=[24253,63038],v16230=[14612,63042],v16231=[25017,63050],v16232=[25232,63054],v16233=[25368,63056],v16234=[25690,63063],v16235=[25745,62381],v16236=[33133,62709],v16237=[33156,59922],v16238=[33171,59924],v16239=[26624,63080],v16240=[15292,63093],v16241=[29327,60517],v16242=[29389,59781],v16243=[29497,59785],
v16244=[30018,59811],v16245=[30172,59817],v16246=[16320,59818],v16247=[60278,151205],v16248=[16343,59820],v16249=[30348,59824,151388],v16250=[16552,59845],v16251=[30777,59846],v16252=[16643,59855],v16253=[31377,59863],v16254=[31771,59876],v16255=[31981,59884],v16256=[32659,62658],v16257=[32686,59892],v16258=[33535,59936],v16259=[22623,59981],v16260=[34482,59960],v16261=[34699,59963],v16262=[35143,59969],v16263=[35369,59972],v16264=[36465,59988],v16265=[60484,164233],v16266=[36528,59990],v16267=[37214,
62443],v16268=[37260,62441],v16269=[39182,60051],v16270=[39196,60054],v16271=[39809,60066],v16272=[40384,60080],v16273=[40339,60078],v16274=[40620,60085],v16275=[19857,60540],v16276=[40571,60084],v16277=[28809,63148],v16278=[29512,59788],v16279=[31129,59858],v16280=[36791,59997],v16281=[39234,60056],v16282={s:193},v16283={s:4},v16284=[12443,63518],v16285=[12444,63519],v16286=[11904,63520],v16287={f:5,c:62211},v16288=[62216,131340],v16289=[62218,131281],v16290=[62219,131277],v16291={f:2,c:62220},v16292=
[62222,131275],v16293=[62223,139240],v16294=[62225,131274],v16295={f:4,c:62226},v16296=[62230,131342],v16297={f:2,c:62231},v16298={f:2,c:62776},v16299=[62778,138177],v16300=[62779,194680],v16301=[12205,38737,62780],v16302=[62781,131206],v16303=[20059,62782],v16304=[20155,62783],v16305=[13630,62784],v16306=[23587,62785],v16307=[24401,62786],v16308=[24516,62787],v16309=[14586,62788],v16310=[25164,62789],v16311=[25909,62790],v16312=[27514,62791],v16313=[27701,62792],v16314=[27706,62793],v16315=[28780,
62794],v16316=[29227,62795],v16317=[20012,62796],v16318=[29357,62797],v16319=[62798,149737],v16320=[32594,62799],v16321=[31035,62800],v16322=[31993,62801],v16323=[32595,62802],v16324=[62803,156266],v16325=[13505,62804],v16326=[62806,156491],v16327=[32770,62807],v16328=[32896,62808],v16329=[62809,157202],v16330=[62810,158033],v16331=[21341,62811],v16332=[34916,62812],v16333=[35265,62813],v16334=[62814,161970],v16335=[35744,62815],v16336=[36125,62816],v16337=[38021,62817],v16338=[38264,62818],v16339=
[38271,62819],v16340=[38376,62820],v16341=[62821,167439],v16342=[38886,62822],v16343=[39029,62823],v16344=[39118,62824],v16345=[39134,62825],v16346=[39267,62826],v16347=[62827,17E4],v16348=[40060,62828],v16349=[40479,62829],v16350=[40644,62830],v16351=[27503,62831],v16352=[62832,63751],v16353=[20023,62833],v16354=[62834,131207],v16355=[38429,62835],v16356=[25143,62836],v16357=[38050,62837],v16358=[11908,63521],v16359=[11910,63522],v16360=[11911,63523],v16361=[11912,63524],v16362=[11914,63525],v16363=
[11916,63526],v16364=[11917,63527],v16365=[11925,63528],v16366=[11932,63529],v16367=[11941,63531],v16368=[11943,63532],v16369=[11946,63533],v16370=[11948,63534],v16371=[11950,63535],v16372=[11958,63536],v16373=[11964,63537],v16374=[11966,63538],v16375=[11978,63540],v16376=[11980,63541],v16377=[11981,63542],v16378=[11983,63543],v16379=[11990,63544],v16380=[11991,63545],v16381=[11998,63546],v16382=[62368,172969],v16383=[62369,135493],v16384=[25866,62371],v16385=[20029,62374],v16386=[28381,62375],v16387=
[40270,62376],v16388=[37343,62377],v16389=[62380,161589],v16390=[20250,62382],v16391=[20264,62383],v16392=[20392,62384],v16393=[20852,62386],v16394=[20892,62387],v16395=[20964,62388],v16396=[21153,62389],v16397=[21160,62390],v16398=[21307,62391],v16399=[21326,62392],v16400=[21457,62393],v16401=[21464,62394],v16402=[22242,62395],v16403=[22768,62396],v16404=[22788,62397],v16405=[22791,62398],v16406=[22834,62399],v16407=[22836,62400],v16408=[23398,62401],v16409=[23454,62402],v16410=[23455,62403],v16411=
[23706,62404],v16412=[24198,62405],v16413=[24635,62406],v16414=[25993,62407],v16415=[26622,62408],v16416=[26628,62409],v16417=[26725,62410],v16418=[27982,62411],v16419=[28860,62412],v16420=[30005,62413],v16421=[32420,62414],v16422=[32428,62415],v16423=[32442,62416],v16424=[32455,62417],v16425=[32463,62418],v16426=[32479,62419],v16427=[32518,62420],v16428=[32567,62421],v16429=[33402,62422],v16430=[33487,62423],v16431=[33647,62424],v16432=[35270,62425],v16433=[35774,62426],v16434=[35810,62427],v16435=
[36710,62428],v16436=[36711,62429],v16437=[36718,62430],v16438=[29713,62431],v16439=[31996,62432],v16440=[32205,62433],v16441=[26950,62434],v16442=[31433,62435],v16443=[30904,62442],v16444=[32956,62444],v16445=[36107,62446],v16446=[33014,62447],v16447=[62448,133607],v16448=[32927,62451],v16449=[40647,62452],v16450=[19661,62453],v16451=[40393,62454],v16452=[40460,62455],v16453=[19518,62456],v16454=[62457,171510],v16455=[62458,159758],v16456=[40458,62459],v16457=[62460,172339],v16458=[13761,62461],
v16459=[28314,62463],v16460=[33342,62464],v16461=[29977,62465],v16462=[18705,62467],v16463=[39532,62468],v16464=[39567,62469],v16465=[40857,62470],v16466=[31111,62471],v16467=[62472,164972],v16468=[62473,138698],v16469=[62474,132560],v16470=[62475,142054],v16471=[20004,62476],v16472=[20096,62478],v16473=[20103,62479],v16474=[20159,62480],v16475=[20203,62481],v16476=[20279,62482],v16477=[13388,62483],v16478=[20413,62484],v16479=[15944,62485],v16480=[20483,62486],v16481=[13437,62488],v16482=[13477,
62490],v16483=[22789,62492],v16484=[20955,62493],v16485=[20988,62494],v16486=[20105,62496],v16487=[21136,62498],v16488=[21287,62499],v16489=[13767,62500],v16490=[21417,62501],v16491=[13649,62502],v16492=[21424,62503],v16493=[21539,62506],v16494=[13677,62507],v16495=[13682,62508],v16496=[13953,62509],v16497=[21651,62510],v16498=[21667,62511],v16499=[21684,62512],v16500=[21689,62513],v16501=[21712,62514],v16502=[21743,62515],v16503=[21784,62516],v16504=[21795,62517],v16505=[21800,62518],v16506=[13720,
62519],v16507=[13733,62521],v16508=[13759,62522],v16509=[21975,62523],v16510=[13765,62524],v16511=[62525,163204],v16512=[16467,62538],v16513=[62551,135412],v16514=[62555,134155],v16515=[62574,161992],v16516=[62580,155813],v16517=[62583,142668],v16518=[62585,135287],v16519=[62587,135279],v16520=[62595,139681],v16521=[62609,134550],v16522=[16571,62611],v16523=[62631,142537],v16524=[22098,62641],v16525=[62642,134961],v16526=[62657,157724],v16527=[62659,135375],v16528=[62660,141315],v16529=[62661,141625],
v16530=[13819,62662],v16531=[62663,152035],v16532=[62664,134796],v16533=[62665,135053],v16534=[62666,134826],v16535=[16275,62667],v16536=[62668,134960],v16537=[62669,134471],v16538=[62670,135503],v16539=[62671,134732],v16540=[62673,134827],v16541=[62674,134057],v16542=[62675,134472],v16543=[62676,135360],v16544=[62677,135485],v16545=[16377,62678],v16546=[62679,140950],v16547=[25650,62680],v16548=[62681,135085],v16549=[62682,144372],v16550=[62685,134526],v16551=[62686,134527],v16552=[62688,142421],
v16553=[62690,134808],v16554=[62692,134958],v16555=[62694,158544],v16556=[21708,62699],v16557=[33476,62700],v16558=[21945,62701],v16559=[62703,171715],v16560=[39974,62704],v16561=[39606,62705],v16562=[62707,142830],v16563=[33004,62710],v16564=[23580,62711],v16565=[62712,157042],v16566=[33076,62713],v16567=[14231,62714],v16568=[62716,164029],v16569=[37302,62717],v16570=[62718,134906],v16571=[62719,134671],v16572=[62720,134775],v16573=[62721,134907],v16574=[62723,151019],v16575=[13833,62724],v16576=
[62725,134358],v16577=[22191,62726],v16578=[62727,141237],v16579=[62728,135369],v16580=[62729,134672],v16581=[62730,134776],v16582=[62731,135288],v16583=[62732,135496],v16584=[62733,164359],v16585=[62734,136277],v16586=[62735,134777],v16587=[62736,151120],v16588=[62737,142756],v16589=[23124,62738],v16590=[62739,135197],v16591=[62740,135198],v16592=[62741,135413],v16593=[62742,135414],v16594=[22428,62743],v16595=[62744,134673],v16596=[62745,161428],v16597=[62746,164557],v16598=[62747,135093],v16599=
[62748,134779],v16600=[62749,151934],v16601=[14083,62750],v16602=[62751,135094],v16603=[62752,135552],v16604=[62753,152280],v16605=[62754,172733],v16606=[62755,149978],v16607=[62756,137274],v16608=[62757,147831],v16609=[62758,164476],v16610=[22681,62759],v16611=[21096,62760],v16612=[13850,62761],v16613=[62762,153405],v16614=[31666,62763],v16615=[23400,62764],v16616=[18432,62765],v16617=[19244,62766],v16618=[40743,62767],v16619=[18919,62768],v16620=[39967,62769],v16621=[39821,62770],v16622=[62771,
154484],v16623=[62772,143677],v16624=[22011,62773],v16625=[13810,62774],v16626=[22153,62775],v16627=[23870,63028],v16628=[23880,63029],v16629=[15868,63031],v16630=[14351,63032],v16631=[23972,63033],v16632=[23993,63034],v16633=[14368,63035],v16634=[24357,63039],v16635=[24451,63040],v16636=[14600,63041],v16637=[14655,63043],v16638=[14669,63044],v16639=[24791,63045],v16640=[24893,63046],v16641=[23781,63047],v16642=[14729,63048],v16643=[25015,63049],v16644=[25039,63051],v16645=[14776,63052],v16646=[25132,
63053],v16647=[25317,63055],v16648=[14840,63057],v16649=[22193,63058],v16650=[14851,63059],v16651=[25570,63060],v16652=[25595,63061],v16653=[25607,63062],v16654=[14923,63064],v16655=[25792,63065],v16656=[40863,63068],v16657=[14999,63069],v16658=[25990,63070],v16659=[15037,63071],v16660=[26111,63072],v16661=[26195,63073],v16662=[15090,63074],v16663=[26258,63075],v16664=[15138,63076],v16665=[26390,63077],v16666=[15170,63078],v16667=[26532,63079],v16668=[15192,63081],v16669=[26698,63082],v16670=[26756,
63083],v16671=[15218,63084],v16672=[15217,63085],v16673=[15227,63086],v16674=[26889,63087],v16675=[26947,63088],v16676=[29276,63089],v16677=[26980,63090],v16678=[27039,63091],v16679=[27013,63092],v16680=[27094,63094],v16681=[15325,63095],v16682=[27237,63096],v16683=[27252,63097],v16684=[27249,63098],v16685=[27266,63099],v16686=[15340,63100],v16687=[27289,63101],v16688=[15346,63102],v16689=[27307,63103],v16690=[27317,63104],v16691=[27348,63105],v16692=[27382,63106],v16693=[27521,63107],v16694=[27585,
63108],v16695=[27626,63109],v16696=[27765,63110],v16697=[27818,63111],v16698=[15563,63112],v16699=[27906,63113],v16700=[27910,63114],v16701=[27942,63115],v16702=[28033,63116],v16703=[15599,63117],v16704=[28068,63118],v16705=[28081,63119],v16706=[28181,63120],v16707=[28184,63121],v16708=[28201,63122],v16709=[28294,63123],v16710=[63124,166336],v16711=[28347,63125],v16712=[28386,63126],v16713=[28378,63127],v16714=[40831,63128],v16715=[28392,63129],v16716=[28393,63130],v16717=[28452,63131],v16718=[28468,
63132],v16719=[15686,63133],v16720=[63134,147265],v16721=[28545,63135],v16722=[28606,63136],v16723=[15722,63137],v16724=[15733,63138],v16725=[29111,63139],v16726=[23705,63140],v16727=[15754,63141],v16728=[28716,63142],v16729=[15761,63143],v16730=[28752,63144],v16731=[28756,63145],v16732=[28783,63146],v16733=[28799,63147],v16734=[63149,131877],v16735=[17345,63150],v16736=[13809,63151],v16737=[63152,134872],v16738=[13902,58134],v16739=[15789,58172],v16740=[58173,154725],v16741=[26237,58183],v16742=
[31860,58188],v16743=[29837,58197],v16744=[32402,58215],v16745=[17667,58232],v16746=[58260,151480],v16747=[58270,133901],v16748=[58277,158474],v16749=[13438,58311],v16750=[58317,143087],v16751=[58325,146613],v16752=[58343,159385],v16753=[34673,58364],v16754=[25537,58385],v16755=[30583,58387],v16756=[35210,58390],v16757=[58406,147343],v16758=[35660,58415],v16759=[58440,150729],v16760=[18730,58464],v16761=[58471,172052],v16762=[58472,165564],v16763=[58473,165121],v16764=[15088,58490],v16765=[28815,
58511],v16766=[58529,140922],v16767=[58637,158120],v16768=[58646,148043],v16769=[26760,58662],v16770=[58664,139611],v16771=[40802,58702],v16772=[37830,58793],v16773=[58802,131967],v16774=[37734,58888],v16775=[37519,58901],v16776=[34324,58954],v16777=[58986,173147],v16778=[16784,59010],v16779=[26511,59045],v16780=[26654,59048],v16781=[14435,59051],v16782=[59077,149996],v16783=[15129,59128],v16784=[33942,59176],v16785=[59241,149858],v16786=[14818,59254],v16787=[33920,59259],v16788=[17262,59328],v16789=
[38769,59402],v16790=[39323,59427],v16791=[18733,59499],v16792=[28439,59703],v16793=[59704,160009],v16794=[28838,59746],v16795=[59752,150095],v16796=[32357,59753],v16797=[23855,59755],v16798=[15859,59756],v16799=[59758,150109],v16800=[59759,137183],v16801=[32164,59760],v16802=[33830,59761],v16803=[21637,59762],v16804=[59763,146170],v16805=[59765,131604],v16806=[22398,59766],v16807=[59767,133333],v16808=[59768,132633],v16809=[16357,59769],v16810=[59770,139166],v16811=[59771,172726],v16812=[28675,59772],
v16813=[59773,168283],v16814=[23920,59774],v16815=[29583,59775],v16816=[59777,166489],v16817=[59778,168992],v16818=[20424,59779],v16819=[32743,59780],v16820=[29456,59782],v16821=[29496,59784],v16822=[29505,59787],v16823=[16041,59789],v16824=[29173,59792],v16825=[59793,149746],v16826=[29665,59794],v16827=[16074,59796],v16828=[16081,59798],v16829=[29721,59801],v16830=[29726,59802],v16831=[29727,59803],v16832=[16098,59804],v16833=[16112,59805],v16834=[16116,59806],v16835=[16122,59807],v16836=[29907,
59808],v16837=[16142,59809],v16838=[16211,59810],v16839=[30061,59812],v16840=[30066,59813],v16841=[30093,59814],v16842=[16252,59815],v16843=[30152,59816],v16844=[30285,59819],v16845=[30324,59821],v16846=[16348,59822],v16847=[30330,59823],v16848=[29064,59825],v16849=[22051,59826],v16850=[35200,59827],v16851=[16413,59829],v16852=[30531,59830],v16853=[16441,59831],v16854=[16453,59833],v16855=[13787,59834],v16856=[30616,59835],v16857=[16490,59836],v16858=[16495,59837],v16859=[30654,59839],v16860=[30667,
59840],v16861=[30744,59842],v16862=[30748,59844],v16863=[30791,59847],v16864=[30801,59848],v16865=[30822,59849],v16866=[33864,59850],v16867=[59851,152885],v16868=[31027,59852],v16869=[31026,59854],v16870=[16649,59856],v16871=[31121,59857],v16872=[31238,59860],v16873=[16743,59862],v16874=[16818,59864],v16875=[31420,59865],v16876=[33401,59866],v16877=[16836,59867],v16878=[31439,59868],v16879=[31451,59869],v16880=[16847,59870],v16881=[31586,59872],v16882=[31596,59873],v16883=[31611,59874],v16884=[31762,
59875],v16885=[16992,59877],v16886=[17018,59878],v16887=[31867,59879],v16888=[31900,59880],v16889=[17036,59881],v16890=[31928,59882],v16891=[17044,59883],v16892=[36755,59885],v16893=[28864,59886],v16894=[59887,134351],v16895=[32207,59888],v16896=[32212,59889],v16897=[32208,59890],v16898=[32253,59891],v16899=[32692,59893],v16900=[29343,59894],v16901=[17303,59895],v16902=[32800,59896],v16903=[32805,59897],v16904=[32814,59899],v16905=[32817,59900],v16906=[32852,59901],v16907=[22452,59903],v16908=[28832,
59904],v16909=[32951,59905],v16910=[33001,59906],v16911=[17389,59907],v16912=[33036,59908],v16913=[33038,59910],v16914=[33042,59911],v16915=[33044,59913],v16916=[17409,59914],v16917=[15161,59915],v16918=[33110,59916],v16919=[33113,59917],v16920=[33114,59918],v16921=[17427,59919],v16922=[33148,59921],v16923=[17445,59923],v16924=[17453,59925],v16925=[33189,59926],v16926=[22511,59927],v16927=[33217,59928],v16928=[33252,59929],v16929=[33364,59930],v16930=[17551,59931],v16931=[33398,59933],v16932=[33482,
59934],v16933=[33496,59935],v16934=[17584,59937],v16935=[33623,59938],v16936=[38505,59939],v16937=[33797,59941],v16938=[28917,59942],v16939=[33892,59943],v16940=[33928,59945],v16941=[17668,59946],v16942=[33982,59947],v16943=[34017,59948],v16944=[34040,59949],v16945=[34064,59950],v16946=[34104,59951],v16947=[34130,59952],v16948=[17723,59953],v16949=[34159,59954],v16950=[34160,59955],v16951=[34272,59956],v16952=[17783,59957],v16953=[34418,59958],v16954=[34450,59959],v16955=[34543,59961],v16956=[38469,
59962],v16957=[17926,59964],v16958=[17943,59965],v16959=[34990,59966],v16960=[35071,59967],v16961=[35108,59968],v16962=[35217,59970],v16963=[59971,162151],v16964=[35384,59973],v16965=[35476,59974],v16966=[35508,59975],v16967=[35921,59976],v16968=[36052,59977],v16969=[36082,59978],v16970=[36124,59979],v16971=[18328,59980],v16972=[36291,59982],v16973=[18413,59983],v16974=[36410,59985],v16975=[22356,59987],v16976=[22005,59989],v16977=[18487,59991],v16978=[36558,59992],v16979=[36578,59993],v16980=[36580,
59994],v16981=[36589,59995],v16982=[36594,59996],v16983=[36801,59998],v16984=[36810,59999],v16985=[36812,6E4],v16986=[36915,60001],v16987=[18605,60003],v16988=[39136,60004],v16989=[37395,60005],v16990=[18718,60006],v16991=[37416,60007],v16992=[37464,60008],v16993=[37483,60009],v16994=[37553,60010],v16995=[37550,60011],v16996=[37567,60012],v16997=[37603,60013],v16998=[37611,60014],v16999=[37619,60015],v17000=[37620,60016],v17001=[37629,60017],v17002=[37699,60018],v17003=[37764,60019],v17004=[37805,
60020],v17005=[18757,60021],v17006=[18769,60022],v17007=[37911,60024],v17008=[37917,60026],v17009=[37933,60027],v17010=[37950,60028],v17011=[18794,60029],v17012=[37972,60030],v17013=[38009,60031],v17014=[38189,60032],v17015=[38306,60033],v17016=[18855,60034],v17017=[38388,60035],v17018=[38451,60036],v17019=[18917,60037],v17020=[18980,60039],v17021=[38720,60040],v17022=[18997,60041],v17023=[38834,60042],v17024=[38850,60043],v17025=[19172,60045],v17026=[39097,60047],v17027=[19225,60048],v17028=[39153,
60049],v17029=[22596,60050],v17030=[39193,60052],v17031=[39223,60055],v17032=[39261,60057],v17033=[39266,60058],v17034=[19312,60059],v17035=[39365,60060],v17036=[19357,60061],v17037=[39484,60062],v17038=[39695,60063],v17039=[39785,60065],v17040=[39901,60067],v17041=[39921,60068],v17042=[39924,60069],v17043=[19565,60070],v17044=[39968,60071],v17045=[14191,60072],v17046=[60073,138178],v17047=[40265,60074],v17048=[40702,60076],v17049=[22096,60077],v17050=[40381,60079],v17051=[40444,60081],v17052=[38134,
60082],v17053=[36790,60083],v17054=[40625,60086],v17055=[40637,60087],v17056=[40646,60088],v17057=[38108,60089],v17058=[40674,60090],v17059=[40689,60091],v17060=[40696,60092],v17061=[40772,60094],v17062=[60095,131220],v17063=[60096,131767],v17064=[60097,132E3],v17065=[38083,60099],v17066=[60101,132311],v17067=[38081,60103],v17068=[60105,132565],v17069=[60106,132629],v17070=[60107,132726],v17071=[60108,136890],v17072=[22359,60109],v17073=[29043,60110],v17074=[60111,133826],v17075=[60112,133837],v17076=
[60113,134079],v17077=[60115,194619],v17078=[60116,134091],v17079=[21662,60117],v17080=[60118,134139],v17081=[60119,134203],v17082=[60120,134227],v17083=[60121,134245],v17084=[60122,134268],v17085=[60124,134285],v17086=[60126,134325],v17087=[60127,134365],v17088=[60128,134381],v17089=[60129,134511],v17090=[60130,134578],v17091=[60131,134600],v17092=[60135,134660],v17093=[60136,134670],v17094=[60137,134871],v17095=[60138,135056],v17096=[60139,134957],v17097=[60140,134771],v17098=[60142,135100],v17099=
[60144,135260],v17100=[60145,135247],v17101=[60146,135286],v17102=[60149,135304],v17103=[60150,135318],v17104=[13895,60151],v17105=[60152,135359],v17106=[60154,135471],v17107=[60155,135483],v17108=[21348,60156],v17109=[60158,135907],v17110=[60159,136053],v17111=[60160,135990],v17112=[60162,136567],v17113=[60163,136729],v17114=[60164,137155],v17115=[60165,137159],v17116=[28859,60167],v17117=[60168,137261],v17118=[60169,137578],v17119=[60170,137773],v17120=[60171,137797],v17121=[60172,138282],v17122=
[60173,138352],v17123=[60174,138412],v17124=[60175,138952],v17125=[60177,138965],v17126=[60178,139029],v17127=[29080,60179],v17128=[60181,139333],v17129=[27113,60182],v17130=[14024,60183],v17131=[60184,139900],v17132=[60185,140247],v17133=[60186,140282],v17134=[60187,141098],v17135=[60188,141425],v17136=[60189,141647],v17137=[60191,141671],v17138=[60192,141715],v17139=[60193,142037],v17140=[60195,142056],v17141=[60197,142094],v17142=[60199,142143],v17143=[60202,142412],v17144=[60204,142472],v17145=
[60205,142519],v17146=[60206,154600],v17147=[60207,142600],v17148=[60208,142610],v17149=[60209,142775],v17150=[60210,142741],v17151=[60211,142914],v17152=[60212,143220],v17153=[60213,143308],v17154=[60214,143411],v17155=[60215,143462],v17156=[60216,144159],v17157=[60217,144350],v17158=[60222,144743],v17159=[60223,144883],v17160=[60227,144922],v17161=[60228,145174],v17162=[22709,60231],v17163=[60234,146087],v17164=[60237,146961],v17165=[60238,147129],v17166=[60243,147737],v17167=[60245,148206],v17168=
[60246,148237],v17169=[60248,148276],v17170=[60249,148374],v17171=[60258,148484],v17172=[60259,148694],v17173=[22408,60260],v17174=[60261,149108],v17175=[60263,149295],v17176=[60271,149522],v17177=[60272,149755],v17178=[60273,150037],v17179=[60275,150208],v17180=[22885,60277],v17181=[60279,151430],v17182=[60282,151596],v17183=[22335,60284],v17184=[60286,152217],v17185=[60287,152601],v17186=[60291,152646],v17187=[60292,152686],v17188=[60296,152895],v17189=[60298,152926],v17190=[60300,152930],v17191=
[60301,152934],v17192=[60302,153543],v17193=[60304,153693],v17194=[60309,153859],v17195=[60312,154286],v17196=[60313,154505],v17197=[60314,154630],v17198=[22433,60316],v17199=[29009,60317],v17200=[60319,155906],v17201=[60322,156082],v17202=[60325,156674],v17203=[60326,156746],v17204=[60330,156804],v17205=[60334,156808],v17206=[60336,156946],v17207=[60338,157119],v17208=[60339,157365],v17209=[22201,60347],v17210=[60349,157436],v17211=[13848,60355],v17212=[60357,157593],v17213=[60358,157806],v17214=
[60360,157790],v17215=[60362,157895],v17216=[60366,157990],v17217=[60368,158009],v17218=[60371,158202],v17219=[60373,158253],v17220=[60378,158260],v17221=[60379,158555],v17222=[60383,158621],v17223=[60385,158884],v17224=[60388,159150],v17225=[60392,159819],v17226=[60393,160205],v17227=[60395,160384],v17228=[60396,160389],v17229=[60399,160395],v17230=[60401,160486],v17231=[38047,60404],v17232=[60405,160848],v17233=[14009,60416],v17234=[60424,161740],v17235=[60425,161880],v17236=[22230,60426],v17237=
[60435,162269],v17238=[60441,162301],v17239=[60442,162314],v17240=[60443,162571],v17241=[60444,163174],v17242=[60448,163849],v17243=[60459,163875],v17244=[60463,163912],v17245=[60466,163971],v17246=[60479,163984],v17247=[60480,164084],v17248=[60481,164142],v17249=[60483,164175],v17250=[60485,164271],v17251=[60486,164378],v17252=[60487,164614],v17253=[60488,164655],v17254=[60489,164746],v17255=[60491,164968],v17256=[60492,165546],v17257=[25574,60494],v17258=[60495,166230],v17259=[60498,166328],v17260=
[60500,166375],v17261=[60502,166376],v17262=[60503,166726],v17263=[60504,166868],v17264=[60506,166921],v17265=[60508,167877],v17266=[60509,168172],v17267=[60511,168208],v17268=[60512,168252],v17269=[15863,60513],v17270=[60514,168286],v17271=[60515,150218],v17272=[36816,60516],v17273=[60519,169191],v17274=[60521,169392],v17275=[60522,169400],v17276=[60523,169778],v17277=[60524,170193],v17278=[60525,170313],v17279=[60526,170346],v17280=[60527,170435],v17281=[60528,170536],v17282=[60529,170766],v17283=
[60530,171354],v17284=[60531,171419],v17285=[32415,60532],v17286=[60533,171768],v17287=[60534,171811],v17288=[19620,60535],v17289=[38215,60536],v17290=[60537,172691],v17291=[29090,60538],v17292=[60539,172799],v17293=[60542,173515],v17294=[19868,60543],v17295=[60544,134300],v17296=[36798,60545],v17297=[36794,60547],v17298=[60548,140464],v17299=[36793,60549],v17300=[60550,150163],v17301=[20202,60555],v17302=[60557,166700],v17303=[36480,60560],v17304=[60561,137205],v17305=[60563,166764],v17306=[60564,
166809],v17307=[60566,157359],v17308=[60568,161365],v17309=[60570,153141],v17310=[60571,153942],v17311=[20122,60572],v17312=[60573,155265],v17313=[60576,134765],v17314=[60579,147080],v17315=[60580,150686],v17316=[60583,137206],v17317=[60584,137339],v17318=[60587,154698],v17319=[60589,152337],v17320=[15814,60590],v17321=[60596,155352],v17322=[19996,60600],v17323=[60601,135146],v17324=[60602,134473],v17325=[60603,145082],v17326=[60638,151880],v17327=[21982,60644],v17328=[34694,60672],v17329=[60676,
135361],v17330=[60679,149254],v17331=[23440,60680],v17332=[60682,157843],v17333=[60684,141044],v17334=[60685,163119],v17335=[60686,147875],v17336=[60687,163187],v17337=[60688,159440],v17338=[60689,160438],v17339=[60691,135641],v17340=[60693,146684],v17341=[60694,173737],v17342=[60695,134828],v17343=[60698,138402],v17344=[60700,151490],v17345=[60702,135147],v17346=[60706,142752],v17347=[60710,135148],v17348=[60711,134666],v17349=[60714,135149],v17350=[60717,135559],v17351=[19994,60721],v17352=[19972,
60722],v17353=[23309,60724],v17354=[13996,60727],v17355=[21373,60729],v17356=[13989,60730],v17357=[22682,60732],v17358=[60733,150382],v17359=[22442,60736],v17360=[60737,154261],v17361=[60738,133497],v17362=[60741,140389],v17363=[60746,146686],v17364=[60747,171824],v17365=[60749,151465],v17366=[60750,169374],v17367=[60753,146870],v17368=[60755,157619],v17369=[60756,145184],v17370=[60759,147191],v17371=[60760,146988],v17372=[60785,143578],v17373=[60789,135849],v17374=[22439,60790],v17375=[60791,149859],
v17376=[60794,159918],v17377=[60801,137068],v17378=[60806,160100],v17379=[60809,159010],v17380=[60810,150242],v17381=[39963,60837],v17382=[60838,149822],v17383=[15878,60846],v17384=[60881,159011],v17385=[60887,132092],v17386=[60891,146685],v17387=[60893,149785],v17388=[22394,60904],v17389=[21722,60912],v17390=[29050,60928],v17391=[60949,150135],v17392=[60955,166490],v17393=[60962,194624],v17394=[60976,137275],v17395=[61E3,155993],v17396=[61014,144373],v17397=[61019,166850],v17398=[61024,138566],v17399=
[61054,159441],v17400=[13877,61065],v17401=[61084,166701],v17402=[21024,61088],v17403=[15384,61089],v17404=[61090,146631],v17405=[61091,155351],v17406=[61092,161366],v17407=[61093,152881],v17408=[61094,137540],v17409=[61096,170243],v17410=[61097,159196],v17411=[61098,159917],v17412=[61100,156077],v17413=[61101,166415],v17414=[61102,145015],v17415=[61103,131310],v17416=[61104,157766],v17417=[61105,151310],v17418=[17762,61106],v17419=[23327,61107],v17420=[61108,156492],v17421=[40784,61109],v17422=[40614,
61110],v17423=[61111,156267],v17424=[20962,57415],v17425=[21314,57416],v17426=[26285,57520],v17427=[22620,57547],v17428=[21843,57566],v17429=[15749,57594],v17430=[24928,57608],v17431=[18606,57668],v17432=[38845,57676],v17433=[57693,137335],v17434=[24755,57703],v17435=[33828,57711],v17436=[38932,57748],v17437=[57749,147596],v17438=[57764,143486],v17439=[57787,138813],v17440=[15147,57798],v17441=[15666,57824],v17442=[57857,132021],v17443=[28801,57944],v17444=[23708,57959],v17445=[58017,132547],v17446=
[14128,58028],v17447=[58096,136054],v17448=[58097,150034],v17449=[58111,166699],v17450=[58112,155779],v17451=[256,62233],v17452=[193,62234],v17453=[461,62235],v17454=[192,62236],v17455=[274,62237],v17456=[201,62238],v17457=[282,62239],v17458=[200,62240],v17459=[332,62241],v17460=[211,62242],v17461=[465,62243],v17462=[210,62244],v17463=[7870,62246],v17464=[7872,62248],v17465=[202,62249],v17466=[257,62250],v17467=[225,62251],v17468=[462,62252],v17469=[224,62253],v17470=[593,62254],v17471=[275,62255],
v17472=[233,62256],v17473=[283,62257],v17474=[232,62258],v17475=[299,62259],v17476=[237,62260],v17477=[464,62261],v17478=[236,62262],v17479=[333,62263],v17480=[243,62264],v17481=[466,62265],v17482=[242,62266],v17483=[363,62267],v17484=[250,62268],v17485=[468,62269],v17486=[249,62270],v17487=[470,62271],v17488=[472,62272],v17489=[474,62273],v17490=[476,62274],v17491=[252,62275],v17492=[7871,62277],v17493=[7873,62279],v17494=[234,62280],v17495=[609,62281],v17496=[643,63551],v17497=[592,63552],v17498=
[603,63553],v17499=[596,63554],v17500=[629,63555],v17501=[339,63556],v17502=[248,63557],v17503=[331,63558],v17504=[650,63559],v17505=[618,63560],v17506={f:2,c:62282},v17507=[11933,63530],v17508=[11974,63539],v17509=[12003,63547],v17510=[62841,171123],v17511=[15817,62843],v17512=[62845,147790],v17513=[19232,62848],v17514=[62849,152013],v17515=[13657,62850],v17516=[62851,154928],v17517=[62853,166450],v17518=[62859,144001],v17519=[62860,172295],v17520=[15499,62861],v17521=[62862,137600],v17522=[19216,
62863],v17523=[62867,165647],v17524=[16393,62868],v17525=[62870,172730],v17526=[16931,62871],v17527=[62875,170311],v17528=[62876,166634],v17529=[62880,139390],v17530=[62883,166371],v17531=[62896,138678],v17532=[62900,141074],v17533=[62902,144377],v17534=[62905,146531],v17535=[62909,148741],v17536=[16091,62911],v17537=[62912,150035],v17538=[62916,154788],v17539=[62917,153237],v17540=[62934,167353],v17541=[62935,136255],v17542=[16497,62936],v17543=[17058,62937],v17544=[17014,62944],v17545=[62948,149883],
v17546=[62950,160013],v17547=[19585,62951],v17548=[62952,159092],v17549=[62954,158485],v17550=[62955,159678],v17551={f:2,c:62956},v23647=[v12030,v12031,12288,65292,v12032,65294,8226,65307,65306,65311,65281,65072,8230,8229,65104,65380,65106,183,v12033,65372,8211,65073,8212,v12034,v12035,v12036,65371,65373,v12037,v12038,v12039,v12040,v12041,v12042,v12043,v12044,v12045,v12046,v12047,v12048,v12049,v12050,v12051,v12052,v12053,8245,8242,65283,65286,65290,8251,167,12291,9675,9679,9651,9650,9678,9734,9733,
9671,9670,9633,9632,9661,9660,12963,8453,8254,0,65343,0,v12054,v12055,v12056,v12057,65291,65293,215,247,177,8730,65308,65310,65309,v12058,8800,8734,8786,8801,v12059,8764,v12060,8869,8736,8735,8895,13266,13265,8747,8750,8757,8756,9792,9794,9793,9737,8593,8595,8594,8592,v12061,8601,8600,8741,8739,0,0,65295,65340,65284,165,12306,v12062,65285,65312,8451,8457,v12063,13269,v12064,13262,13217,v12065,13252,176,v12066,v12067,v12068,v12069,20833,20835,21991,v12070,v12071,v12072,9615,9614,9613,9612,9611,9610,
9609,9532,9524,9516,9508,9500,9620,9472,9474,9621,9484,9488,9492,9496,v12073,9584,9583,9552,9566,9578,9569,v12074,9701,9700,v12075,v12076,v12077,v12078,0,v12079,0,v12080,v12081,v12082,v12083,v12084,v12085,v12086,729,714,711,715,v12087,v12088,v12089,v12090,v12091,v12092,v12093,v12094,v12095,v12096,v12097,v12098,v12099,v12100,v12101,v12102,v12103,v12104,v12105,v12106,v12107,v12108,v12109,v12110,v12111,v12112,v12113,v12114,v12115,v12116,v12117,v12118,v12119,v12120,v12121,v12122,v12123,v12124,v12125,
v12126,v12127,v12128,v12129,v12130,v12131,v12132,v12133,v12134,v12135,v12136,v12137,v12138,v12139,v12140,v12141,v12142,v12143,9249,v12144,v12145,19969,19971,20035,20061,20102,v12146,v12147,v12148,v12149,v12150,v12151,v12152,20993,v12153,v12154,v12155,v12156,v12157,19977,19979,19976,19978,20011,20024,20961,20037,20040,20063,20062,20110,20129,v12158,20995,21242,21315,21449,v12159,v12160,v12161,v12162,v12163,v12164,v12165,23377,23379,v12166,v12167,v12168,v12169,v12170,24029,v12171,v12172,v12173,v12174,
v12175,v12176,v12177,v12178,25165,19985,19984,19981,20013,20016,20025,20043,23609,20104,20113,20117,20114,20116,20130,20161,20160,20163,v12179,20173,v12180,20164,20803,20801,20839,v12181,20844,20887,20982,v12182,21243,v12183,21270,21305,21320,21319,21317,21342,21380,21451,21450,21453,22764,22825,22827,22826,22829,23380,23569,23588,23610,23663,24052,24187,24319,v12184,v12185,v12186,v12187,v12188,25166,v12189,v12190,v12191,v12192,v12193,v12194,v12195,v12196,v12197,v12198,v12199,v12200,v12201,v12202,
v12203,v12204,v12205,v12206,v12207,v12208,v12209,v12210,v12211,v12212,v12213,29579,19993,19990,19989,19988,19992,20027,20045,20047,20046,20197,20184,v12214,v12215,20185,20190,20805,20804,v12216,20908,v12217,20984,21002,21152,21151,v12218,21254,21271,21277,20191,21322,21321,21345,21344,21359,21358,21435,21487,21476,21491,21484,21486,21481,21480,21500,21496,21493,21483,21478,21482,21490,21489,21488,21477,21485,21499,22235,22234,22806,22830,22833,22900,22902,23381,23427,23612,24040,24039,24038,v12219,
24179,24188,24321,24344,24343,24517,25098,v12220,25170,25169,26021,26086,26414,26412,v12221,26413,27491,27597,27665,27664,27704,27713,27712,27710,29359,v12222,v12223,v12224,v12225,v12226,v12227],v23649=[v12228,29993,v12229,v12230,v12231,v12232,v12233,v12234,v12235,v12236,v12237,v12238,v12239,v12240,v12241,v12242,v12243,v12244,20073,20121,20132,20134,20133,20223,20233,20249,20234,20245,20237,v12245,20239,20210,20214,20219,20208,20211,20221,20225,20235,20809,20807,20806,20808,20840,20849,20877,20912,
21015,v12246,21006,21014,21155,21256,21281,21280,v12247,21513,21519,21516,21514,21520,21505,21515,21508,21521,21517,21512,21507,21518,21510,21522,22240,22238,22237,22323,22320,22312,22317,22316,22319,22313,v12248,v12249,22916,22904,22915,22909,22905,22914,22913,v12250,v12251,23429,23433,23546,23574,23673,24030,24070,24182,24180,24335,24347,24537,24534,25102,v12252,25104,25187,25179,25176,25910,26089,26088,v12253,v12254,26377,26429,26420,26417,26421,27425,27492,27515,27670,27741,27735,27737,v12255,
27728,27733,27745,27739,v12256,28784,29279,29277,30334,v12257,v12258,v12259,v12260,v12261,v12262,v12263,32771,v12264,v12265,v12266,v12267,v12268,v12269,v12270,v12271,v12272,v12273,v12274,v12275,v12276,v12277,v12278,33406,v12279,v12280,v12281,v12282,35199,38433,20018,20136,20301,20303,20295,20311,20318,20276,20315,20309,20272,v12283,20285,20282,20280,20291,20308,20284,20294,20323,20316,20320,20271,20302,20278,20313,20317,20296,20314,20812,20811,20813,20853,v12284,21029,21028,v12285,21032,21163,v12286,
21164,21283,21363,21365,21533,21549,21534,21566,21542,21582,21543,21574,21571,21555,21576,21570,21531,21545,21578,21561,21563,21560,21550,v12287,21536,21564,21568,21553,21547,21535,21548,22250,22256,22244,22251,22346,22353,22336,22349,22343,22350,22334,22352,22351,22331,22767,22846,22941,22930,22952,22942,22947,22937,22934,22925,22948,22931,22922,22949,23389,23388,v12288,23436,23435,23439,23596,v12289,23615,23614,v12290,23700,23692,24043,24076,24207,24199,24202,24311,24324,24351,24420,24418,24439,
24441,24536,24524,24535,24525,24561,24555,24568,24554,25106,25105,25220,25239,25238,25216,25206,25225,25197,25226,25212,25214,25209,25203,25234,25199,25240,25198,25237,25235,25233,25222,25913,25915,25912,26097,26356,26463,v12291,26460,26454,v12292,26441,26438,26464,26451,26455,27493,27599,27714,27742,27801,27777,v12293,27781,27803,27754,27770,27792,27760,27788,27752,27798,27794,27773,27779,27762,27774,27764,27782,27766,27789,27796,27800,27778,28790,v12294,28792,29282,29281,29280,29380,29378,29590,
29996,29995,v12295,30338,30447,30691,31169,31168,31167,31350,31995,32597,32918,32915,32925,32920,32923,32922,32946,33391,33426,33419,33421,v12296,v12297,v12298,v12299,v12300,v12301,v12302,v12303,v12304,v12305,v12306,v12307,v12308,v12309,36802,36806,36805,36804,24033,v12310,37026,37034,37030,37027,v12311,v12312,v12313,38450,38446,38449,38442,38444,20006,20054,20083,20107,20123,20126,v12314,20335,20381,20365,20339,20351,20332,20379,20363,20358,20355,20336,20341,20360,20329,20347,20374,20350,20367,20369,
20346,20820,20818,20821,20841,20855,20854,20856,20925,20989,21051,21048,21047,21050,21040,21038,21046,21057,21182,21179,21330,21332,21331,21329,21350,v12315,21462,21460,21463,21619,21621,21654,21624,21653,21632,21627,21623,21636,21650,21638,21628,21648,21617,21622,21644],v23651=[21658,21602,21608,21643,21629,21646,22266,22403,22391,22378,22377,22369,22374,22372,22396,22812,22857,v12316,22852,22868,22974,22971,22996,22969,22958,22993,22982,22992,22989,22987,22995,22986,22959,22963,22994,22981,23391,
23396,23395,23447,23450,23448,23452,23449,23451,23578,23624,v12317,23735,23713,23736,23721,23723,23729,23731,24088,24090,24086,24085,24091,24081,24184,24218,24215,24220,v12318,24310,v12319,24361,v12320,24447,24444,24541,24544,24573,24565,24575,24591,24596,24623,24629,24598,24618,24597,24609,24615,24617,24619,24603,25110,25109,25151,25150,25152,25215,25289,25292,25284,25279,25282,25273,25298,25307,25259,v12321,25291,25288,25256,25277,25276,v12322,25305,25287,25293,25269,25306,25265,25304,v12323,25286,
25260,v12324,25918,26023,26044,26106,26132,26131,26124,26118,26114,26126,26112,26127,26133,26122,26119,26381,26379,26477,26507,26517,26481,26524,26483,26487,26503,26525,26519,v12325,26495,26505,26494,26512,26485,26522,26515,26492,26474,26482,27427,v12326,27519,27667,27675,27875,27880,27891,27825,27852,27877,27827,v12327,27836,27874,27819,27861,27859,27832,27844,27833,27841,27822,27863,27845,27889,27839,27835,27873,27867,27850,27820,27887,27868,27862,27872,28821,28814,28818,28810,28825,v12328,29240,
29256,29287,29289,29376,29390,29401,29399,29392,29609,29608,29599,29611,29605,30013,30109,v12329,30340,30402,30450,30452,30693,30717,31038,v12330,31177,31176,31354,31353,31482,31998,32596,32652,32651,v12331,32954,32933,32930,32945,32929,32939,32937,32948,32938,32943,33253,33278,33293,33459,33437,33433,33453,33469,33439,33465,33457,33452,33445,33455,33464,33443,33456,33470,33463,34382,34417,21021,34920,36555,36814,36820,36817,37045,37048,37041,37046,37319,v12332,v12333,v12334,v12335,38464,38463,38459,
38468,38466,v12336,v12337,38738,v12338,20127,v12339,20449,20405,20399,20415,20448,20433,20431,20445,20419,20406,20440,20447,20426,20439,20398,20432,20420,20418,20442,20430,20446,20407,20823,20882,20881,20896,21070,21059,21066,21069,21068,21067,21063,21191,21193,21187,21185,21261,21335,21371,21402,21467,21676,21696,21672,21710,21705,21688,21670,21683,21703,21698,21693,21674,21697,21700,21704,21679,21675,21681,21691,21673,21671,21695,22271,22402,22411,22432,22435,22434,22478,22446,22419,22869,22865,
22863,22862,22864,23004,23E3,23039,23011,23016,23043,23013,23018,23002,23014,23041,23035,23401,23459,23462,23460,23458,23461,23553,v12340,23629,23627,23769,23762,24055,24093,24101,24095,24189,24224,24230,24314,24328,24365,24421,24456,24453,v12341,24455,24460,24457,24594,24605,24608,24613,24590,24616,24653,24688,24680,v12342,24646,24643,24684,24683,24682,24676,25153,25308,25366,25353,25340,25325,25345,25326,25341,25351,25329,25335,25327,25324,25342,25332,25361,25346,25919,25925,26027,26045,26082,26149,
26157,26144,26151,26159,26143,26152,26161,26148,26359,26623,26579,26609,26580,26576,26604,26550,26543,26613,26601,26607,26564,26577,26548,26586,26597,26552,26575,26590,26611,26544,26585,26594,26589,26578,27498,27523,27526,27573,27602,27607,27679,27849,27915,27954,27946,27969,27941],v23653=[27916,27953,27934,27927,27963,v12343,27958,27931,27893,27961,27943,27960,27945,27950,27957,27918,27947,28843,28858,28851,28844,28847,28845,28856,28846,28836,29232,29298,29295,29300,29417,v12344,29623,29642,29627,
29618,29645,29632,29619,29978,29997,30031,30028,30030,30027,30123,v12345,v12346,30328,v12347,30408,30406,30403,30405,30465,30457,30456,30473,30475,30462,30460,30471,30684,30722,30740,v12348,31046,31049,31048,31047,v12349,v12350,31179,31359,31361,31487,31485,31869,32002,32005,32E3,32009,32007,32004,32006,32568,32654,32703,32784,32781,32785,32822,32982,32997,32986,v12351,32972,32993,32987,32974,32990,32996,32989,33268,33314,33511,33539,33541,33507,33499,33510,33540,33509,33538,33545,33490,33495,33521,
33537,33500,33492,33489,33502,33491,33503,33519,33542,34384,34425,34427,34426,34893,34923,35201,35284,35336,v12352,35998,36E3,36212,36211,36276,36557,36556,36848,36838,36834,36842,36837,36845,36843,36836,36840,37066,37070,37057,37059,37195,37194,37325,38274,38480,v12353,v12354,v12355,v12356,v12357,v12358,v12359,v12360,v12361,v12362,v12363,v12364,20056,20147,v12365,20515,20463,20518,20517,20472,v12366,20502,20486,20540,20511,20506,20498,20497,20474,20480,20500,20520,20465,20513,20491,20505,20504,20467,
20462,20525,20522,20478,20523,20489,20860,v12367,20898,20941,20940,20934,20939,21078,21084,21076,21083,21085,21290,v12368,21407,21405,21471,21736,21776,21761,21815,21756,21733,21746,21766,21754,21780,21737,21741,21729,21769,21742,21738,21734,21799,21767,21757,21775,v12369,22466,22484,22475,22467,22537,22799,v12370,22874,23057,23064,23068,23071,23067,23059,23020,23072,23075,23081,23077,23052,23049,23403,23640,23472,23475,23478,23476,23470,23477,23481,23480,23556,23633,23637,23632,23789,23805,23803,
23786,23784,23792,23798,23809,23796,24046,24109,24107,24235,24237,24231,24369,24466,24465,24464,24665,24675,24677,24656,24661,24685,24681,24687,24708,24735,24730,24717,24724,24716,24709,24726,25159,25331,25352,25343,25422,25406,25391,25429,25410,25414,25423,25417,25402,25424,25405,v12371,25384,25421,25420,v12372,26009,26049,26053,26178,26185,26191,26179,26194,26188,26181,26177,26360,v12373,26391,26657,26680,26696,26694,26707,26681,26690,26708,26665,26803,26647,26700,26705,26685,26612,26704,26688,
26684,26691,26666,26693,26643,26648,26689,27530,27529,27575,27683,v12374,27686,27684,27888,28010,28053,28040,28039,28006,28024,28023,27993,28051,28012,28041,28014,27994,28020,28009,28044,28042,28025,28037,28005,28052,28874,28888,28900,28889,28872,28879,29241,29305,29436,29433,29437,29432,29431,29574,29677,29705,29678,29664,29674,29662,30036,30045,30044,30042,30041,30142,30149,30151,v12375,30141,30140,30137,30146,30136,30347,30384,30410,v12376,30505,v12377,30504,30697,30768,30759,30776,30749,30772,
30775,30757,30765,30752,30751,30770,31061,31056,31072,31071,31062,31070,31069,31063,31066,31204,v12378,31207,31199,31206,31209,31192,31364,31368,31449,31494,31505,31881,32033,32023,32011,32010,32032,32034,32020,32016,32021,32026,32028,32013,32025,32027,32570,32607,32660,32709,32705,32774,32772,32792,32789],v23655=[32793,32791,32829,32831,33009,33026,33008,33029,33005,33012,33030,33016,33011,33032,33021,33034,33020,33007,33261,33260,33280,33296,v12379,33320,33324,33467,33579,33618,33620,33610,33592,
33616,33609,33589,33588,33615,33586,33593,33590,33559,33600,33585,33576,33603,34388,34442,34474,34451,34468,34473,34444,34467,34460,34928,34935,v12380,34941,34937,35352,35344,35342,35340,35349,35338,35351,35347,35350,35343,35345,35912,35962,35961,v12381,v12382,36524,36562,36564,36559,36785,36865,36870,36855,36864,36858,36852,36867,36861,36869,36856,37013,37089,37085,37090,37202,37197,37196,37336,37341,37335,37340,37337,38275,v12383,38497,38491,38493,38500,38488,38494,38587,39138,v12384,v12385,v12386,
v12387,v12388,v12389,20094,20602,v12390,20572,20551,20547,20556,20570,20553,20581,20598,20558,20565,20597,20596,20599,20559,20495,20591,20589,20828,20885,20976,21098,21103,21202,21209,21208,21205,21264,21263,21273,v12391,21310,21443,26364,21830,21866,21862,21828,21854,21857,21827,21834,21809,21846,21839,21845,21807,21860,21816,21806,21852,21804,21859,21811,21825,21847,22280,22283,22281,22495,22533,22538,22534,22496,22500,22522,22530,22581,22519,22521,22816,22882,23094,23105,23113,23142,23146,23104,
23100,23138,23130,23110,23114,23408,23495,23493,23492,23490,23487,23494,23561,23560,23559,23648,v12392,23815,23814,23822,23835,23830,23842,23825,23849,23828,23833,23844,23847,23831,24034,24120,24118,24115,24119,v12393,24246,24245,24254,24373,24375,24407,24428,24425,24427,24471,24473,24478,24472,24481,24480,24476,24703,24739,24713,24736,24744,24779,24756,24806,24765,24773,24763,24757,24796,24764,24792,24789,24774,24799,24760,24794,24775,v12394,25160,25504,25511,25458,25494,25506,25509,25463,25447,
25496,25514,25457,25513,25481,25475,25499,25451,25512,25476,25480,25497,25505,25516,25490,25487,25472,25467,25449,25448,25466,25949,25942,25937,25945,25943,21855,25935,25944,25941,25940,26012,26011,26028,26063,v12395,26062,26205,26202,26212,26216,26214,26206,26361,21207,26395,26753,26799,26786,26771,26805,26751,26742,26801,26791,26775,26800,26755,26820,26797,26758,26757,26772,26781,26792,26783,26785,26754,27442,27578,v12396,27691,28046,28092,28147,28121,28082,28129,28108,28132,28155,28154,28165,28103,
28107,28079,28113,28078,28126,28153,28088,28151,28149,28101,28114,28186,28085,28122,28139,28120,28138,28145,28142,28136,28102,28100,28074,28140,28095,28134,28921,v12397,28925,28911,29245,29309,29313,29468,29467,29462,29459,29465,29575,29701,29706,29699,29702,29694,29709,29920,v12398,29980,29986,v12399,30050,30064,30095,v12400,30133,30154,30157,30350,30420,30418,30427,30519,30526,30524,30518,30520,30522,30827,30787,30798,31077,31080,31085,31227,31378,31381,31520,31528,31515,31532,31526,31513,31518,
31534,31890,31895,31893,32070,32067,32113,32046,32057,32060,32064,32048,32051,32068,32047,32066,32050,32049,32573,32670,32666,32716,32718,32722,32796,32842,32838,33071,33046,33059,33067,33065,33072,33060,33282,33333,33335,33334,33337,33678,33694,33688,33656,33698,33686,33725,33707,33682,33674,33683,33673,33696,33655],v23657=[v12401,33670,33703,34389,24426,34503,34496,34486,34500,34485,34502,34507,34481,34479,34505,34899,34974,34952,34987,34962,34966,34957,34955,35219,35215,35370,35357,35363,35365,
35377,35373,35359,35355,35362,35913,35930,36009,36012,36011,36008,36010,36007,36199,36198,36286,36282,36571,36575,36889,36877,36890,36887,36899,36895,36893,36880,36885,36894,36896,36879,36898,36886,36891,36884,37096,37101,v12402,37207,37326,37365,37350,37347,37351,37357,37353,38281,38506,38517,38515,38520,38512,38516,v12403,38508,38592,38634,38633,31456,31455,v12404,v12405,v12406,v12407,v12408,v12409,v12410,20642,20621,20613,20633,20625,20608,20630,20632,20634,26368,20977,21106,v12411,21097,21214,
21213,21211,21338,21413,21883,21888,21927,21884,21898,21917,21912,21890,21916,21930,21908,21895,21899,21891,21939,21934,21919,21822,21938,21914,21947,21932,21937,21886,21897,21931,21913,22285,22575,22570,22580,22564,v12412,22561,22557,22560,v12413,22880,v12414,23194,23167,23186,23195,23207,23411,23409,23506,23500,23507,23504,v12415,23601,23884,23888,23860,23879,24061,24133,24125,24128,24131,24190,24266,v12416,24260,24380,24429,v12417,24488,24785,24801,24754,24758,24800,24860,24867,24826,24853,24816,
24827,24820,24936,24817,24846,24822,24841,24832,24850,25119,25161,25507,25484,25551,25536,25577,25545,25542,25549,25554,25571,25552,25569,25558,v12418,25462,25588,25578,25563,25682,25562,25593,25950,25958,v12419,26001,26E3,26031,26222,26224,v12420,26230,26223,26257,26234,26238,26231,v12421,26399,26397,26874,26837,26848,26840,26839,26885,26847,26869,26862,26855,26873,26834,26866,26851,26827,26829,26893,26898,26894,26825,26842,26990,26875,27454,27450,27453,27544,27542,27580,27631,v12422,27692,v12423,
28216,28244,28193,28210,28263,28234,28192,28197,28195,28187,28251,28248,28196,28246,28270,28205,28198,28271,28212,28237,28218,28204,28227,v12424,28222,28363,28297,28185,28238,28259,28228,28274,28265,28255,v12425,28966,28976,28961,28982,v12426,28956,29260,29316,29312,29494,29477,29492,29481,29754,29738,29747,29730,29733,v12427,29748,29743,29723,29734,29736,v12428,30059,30058,30178,30171,30179,30169,30168,30174,30176,v12429,30358,30355,30388,30428,30543,30701,30813,30828,30831,31245,31240,31243,31237,
31232,31384,31383,31382,31461,31459,31561,31574,31558,31568,31570,31572,31565,31563,31567,v12430,31903,31909,32094,32080,32104,32085,32043,32110,32114,32097,32102,32098,32112,32115,21892,v12431,32779,32850,32901,33109,33108,33099,33105,33102,33081,33094,33086,33100,33107,33140,33298,33308,33769,33795,33784,33805,33760,33733,33803,v12432,33775,33777,33780,33879,33802,33776,33804,33740,33789,33778,33738,33848,33806,33796,33756,33799,33748,33759,34395,34527,34521,34541,34516,34523,34532,34512,34526,
34903,v12433,34993,35203,35222,35387,35424,35413,35422,35388,35393,35412,35419,35408,35398,35380,35386,35382,35414,35937,35970,36015,36028,36019,36029,36033,36027,36032,36020,36023,36022,36031,36024,36234,36229,36225,36302,36317,36299,36314,36305,36300,36315,36294,36603,36600,36604,36764,36910,36917,36913,36920,36914,36918,37122,37109,37129],v23659=[37118,37219,37221,37327,v12434,37411,37385,37406,37389,37392,37383,37393,38292,38287,38283,38289,38291,38290,38286,38538,38542,38539,38525,v12435,38541,
38514,38532,38593,38597,38596,v12436,38639,38642,38860,v12437,38920,39143,39146,39151,39145,39154,39149,39342,39341,v12438,v12439,v12440,20098,20653,20661,v12441,20677,20670,20652,20663,20667,20655,20679,21119,21111,21117,21215,21222,21220,v12442,21295,21983,21992,21971,21990,21966,21980,21959,21969,v12443,21999,21978,21985,v12444,21989,21961,v12445,22622,22609,22616,22615,22618,22612,22635,22604,22637,22602,22626,22610,22603,22887,23233,23241,23244,23230,23229,23228,23219,23234,23218,23913,23919,
24140,24185,24265,24264,24338,24409,24492,24494,24858,24847,24904,24863,24819,24859,24825,24833,24840,24910,24908,24900,24909,24894,24884,24871,24845,24838,24887,v12446,25619,25662,25630,25642,25645,25661,25644,25615,25628,25620,25613,25654,v12447,25606,25964,26015,26032,26263,26249,v12448,26262,26244,26264,26253,26371,27028,26989,26970,26999,26976,26964,26997,26928,27010,26954,26984,26987,26974,26963,27001,27014,26973,26979,26971,27463,27506,27584,27583,27603,27645,28322,28335,28371,28342,28354,
28304,28317,28359,28357,28325,28312,28348,28346,28331,28369,28310,28316,28356,28372,28330,28327,28340,29006,29017,29033,29028,29001,29031,29020,29036,29030,29004,29029,29022,28998,29032,29014,29242,29266,29495,29509,29503,29502,29807,29786,29781,29791,29790,29761,29759,29785,29787,v12449,30070,30072,30208,30192,30209,30194,30193,30202,30207,30196,30195,v12450,30555,30571,30566,30558,30563,30585,30570,30572,30556,30565,30568,30562,30702,30862,30896,v12451,30860,30857,30844,30865,30867,30847,31098,
31103,31105,33836,31165,31260,31258,31264,31252,31263,31262,v12452,31607,31680,31584,31598,31591,31921,31923,31925,32147,32121,32145,32129,32143,32091,32622,v12453,32626,32681,32680,32676,32854,32856,32902,32900,33137,33136,33144,33125,33134,33139,33131,v12454,33126,33285,33351,33922,33911,33853,33841,33909,33894,33899,33865,33900,33883,33852,33845,33889,33891,33897,33901,33862,34398,34396,34399,34553,34579,34568,34567,34560,34558,34555,v12455,34566,34570,34905,35039,35028,35033,35036,35032,35037,
35041,35018,35029,35026,35228,35299,35435,v12456,35430,35433,35440,35463,35452,35427,35488,35441,35461,35437,35426,35438,35436,35449,35451,35390,35432,35938,35978,35977,36042,v12457,36036,36018,36035,36034,36037,36321,36319,36328,36335,36339,36346,36330,36324,36326,36530,36611,36617,36606,36618,36767,36786,36939,36938,36947,36930,36948,36924,36949,36944,36935,36943,36942,36941,36945,36926,36929,37138,37143,37228,37226,37225,37321,37431,37463,37432,37437,37440,37438,37467,37451,37476,37457,37428,37449,
37453,37445,37433,37439,37466,38296,38552,v12458,38605,38603,v12459,38647,38651,38649,38646,38742,38772,38774,v12460,38931,38922,38930,38924,39164,39156,v12461,39347,39345,39348,39649,40169,40578,v12462,v12463,v12464,20711,20718,20709,20694,v12465,20698,20693,20687,20689,20721,20686,20713,20834,20979,21123,21122,21297,21421,22014,22016,22043,22039,22013,22036,22022],v23661=[22025,v12466,22007,22038,22047,22024,22032,22006,22296,22294,22645,22654,22659,22675,22666,22649,22661,22653,22781,22821,22818,
22820,22890,22889,23265,23270,23273,23255,23254,23256,23267,23413,23518,23527,23521,v12467,23528,23522,23524,23519,23565,23650,23940,23943,24155,24163,24149,24151,24148,24275,24278,24330,24390,24432,24505,24903,24895,24907,24951,v12468,24927,24922,24920,24949,25130,25735,25688,25684,25764,25720,25695,25722,25681,25703,25652,25709,25723,25970,26017,26071,26070,26274,26280,26269,27036,27048,27029,27073,27054,27091,27083,27035,27063,27067,27051,27060,27088,27085,27053,27084,27046,27075,27043,27465,27468,
27699,28467,28436,28414,28435,28404,28457,28478,28448,28460,28431,28418,28450,28415,28399,28422,28465,28472,28466,28451,28437,28459,28463,28552,28458,28396,28417,28402,28364,28407,29076,29081,29053,29066,29060,29074,29246,29330,29334,29508,29520,29796,29795,29802,29808,29805,29956,30097,30247,30221,30219,30217,30227,30433,30435,30596,30589,30591,30561,30913,30879,30887,30899,30889,30883,v12469,31117,31278,31281,31402,31401,31469,31471,31649,31637,31627,31605,31639,31645,31636,31631,v12470,31623,31620,
31929,v12471,32187,32176,32156,v12472,32160,32202,32180,32178,32177,32186,32162,32191,32181,32184,32173,v12473,32199,32172,32624,v12474,32735,32862,32858,32903,33104,33152,33167,33160,33162,33151,33154,33255,33274,33287,33300,33310,33355,33993,33983,33990,33988,33945,33950,33970,33948,33995,33976,33984,34003,33936,33980,34001,33994,34623,34588,34619,34594,34597,34612,34584,34645,34615,34601,35059,35074,35060,35065,35064,35069,35048,35098,35055,35494,35468,35486,35491,35469,35489,35475,35492,35498,
35493,35496,35480,35473,35482,35495,35946,35981,35980,36051,v12475,36203,36249,36245,36348,36628,36626,36629,36627,36771,36960,36952,36956,36963,36953,36958,36962,36957,36955,37145,37144,37150,37237,37240,37239,37236,37496,37548,37504,37509,37528,37526,37499,37523,37532,37544,37500,37521,38305,v12476,38307,38309,38308,38553,38556,38555,38604,38610,38656,38780,38789,38902,v12477,39087,39089,39171,39173,39180,39177,39361,v12478,39654,v12479,40180,40182,40179,40636,v12480,v12481,20740,20736,20731,20725,
20729,20738,v12482,20741,20956,v12483,21133,21130,21232,21426,22062,22075,22073,22066,22079,22068,22057,22099,22094,22103,22132,22070,v12484,22656,22687,22686,22707,22684,22702,22697,22694,22893,23305,23291,23307,23285,23308,23304,23534,23532,23529,23531,v12485,23965,23956,24162,24159,24161,24290,24282,24287,24285,24291,24288,24392,24433,24503,24501,24950,24935,24942,24925,24917,24962,24956,24944,24939,24958,24999,24976,25003,24974,25004,24986,24996,24980,25006,25134,25705,25711,25721,25758,25778,
25736,v12486,25776,25765,25747,25749,25769,25746,25774,25773,25771,25754,25772,25753,25762,25779,25973,v12487,26286,26283,26292,26289,27171,27167,27112,27137,27166,27161,27133,27169,27155,27146,27123,27138,27141,27117,27153,27472,27470,27556,v12488,28479,28540,28548,28497,28518,28500,28550,28525,28507,28536,28526,28558,28538,28528,28516,28567,28504,28373,28527,28512,28511],v23663=[29087,29100,29105,29096,29270,29339,29518,29527,29801,29835,29827,29822,29824,30079,30240,30249,30239,30244,30246,v12489,
30362,30394,30436,30606,30599,30604,30609,30603,30923,30917,30906,30922,30910,30933,30908,30928,31295,31292,31296,31293,31287,31291,31407,31406,31661,31665,31684,31668,v12490,31681,31648,31692,31946,32224,32244,32239,32251,32216,32236,32221,32232,32227,32218,32222,32233,32158,32217,32242,32249,32629,32631,32687,32745,32806,v12491,33184,33178,33176,34071,34109,34074,34030,v12492,34067,34065,34083,34081,34068,34028,34085,34047,34054,34690,34676,34678,34656,34662,34680,34664,34649,34647,34636,34643,
34907,34909,35088,35079,v12493,35093,35082,35516,35538,35527,35524,35477,35531,35576,35506,35529,35522,35519,35504,35542,35533,35510,35513,35547,35916,35918,35948,36064,36062,36070,36068,v12494,v12495,36060,36074,36065,36205,36255,36259,36395,36368,36381,36386,36367,36393,36383,36385,36382,36538,36637,36635,36639,36649,36646,36650,36636,36638,36645,36969,36974,36968,36973,36983,37168,37165,37159,37169,37255,37257,37259,37251,37573,37563,37559,37610,37604,37569,37555,37564,37586,37575,37616,37554,
38317,38321,38660,v12496,38665,38752,38797,38795,38799,38945,38955,38940,39091,39178,39187,39186,39192,39389,39376,39391,39387,39377,39381,39378,39385,39607,v12497,39719,39749,39748,39799,39791,40198,40201,40195,40617,40638,40654,22696,v12498,20754,20760,20756,20752,20757,20864,20906,20957,21137,21139,21235,22105,22123,22137,22121,22116,22136,22122,22120,22117,22129,22127,22124,22114,22134,22721,22718,22727,22725,22894,23325,23348,23416,23536,23566,24394,25010,24977,25001,24970,25037,25014,25022,
25034,25032,25136,25797,25793,25803,v12499,25818,25796,25799,25794,25805,25791,25810,25812,25790,25972,26310,26313,26297,26308,26311,26296,27197,27192,27194,27225,27243,27224,27193,27204,27234,27233,27211,27207,27189,27231,27208,27481,27511,27653,28610,28593,28577,28611,28580,28609,28583,28595,28608,28601,v12500,28582,28576,28596,29118,29129,29136,29138,29128,29141,29113,29134,29145,29148,v12501,29544,29852,29859,29848,29855,29854,29922,v12502,30260,30264,30266,30439,30437,30624,v12503,30629,30952,
30938,30956,30951,31142,v12504,31302,31308,31307,31418,31705,31761,31689,31716,31707,31713,31721,31718,v12505,32266,32273,32264,32283,32291,32286,v12506,32265,32272,32633,32690,v12507,32750,v12508,33203,33193,33192,33275,33288,v12509,34122,34137,34120,v12510,34115,34121,34157,34154,34142,34691,34719,34718,34722,34701,34913,35114,35122,35109,35115,35105,35242,v12511,35558,35578,35563,35569,35584,35548,35559,35566,35582,v12512,35575,35565,35571,35574,35580,35947,35949,35987,36084,36420,36401,36404,
36418,36409,36405,36667,36655,36664,36659,36776,36774,36981,36980,36984,36978,36988,36986,37172,37266,37664,37686,37624,37683,37679,37666,37628,37675,37636,37658,37648,37670,37665,37653,37678,37657,38331,v12513,38570,38613,38670,38673,38678,38669,38675,38671,38747,v12514,38758,38808,38960,38968,38971,38967,38957,38969,38948,39184,39208,39198,39195,39201,39194,39405,39394,39409,39608,39612,39675],v23665=[39661,39720,39825,40213,40227,40230,40232,40210,40219,40664,40660,v12515,v12516,20778,20767,20769,
20786,21237,22158,22144,22160,22149,22151,22159,22741,22739,22737,22734,23344,23338,23332,23418,23607,23656,23996,23994,23997,23992,24171,24396,24509,25033,25026,25031,25062,25035,25138,25140,25806,25802,25816,25824,25840,25830,25836,25841,25826,25837,v12517,26329,26326,27264,27284,27268,27298,27292,27355,27299,27262,27287,27280,27296,27484,27566,27610,27656,28632,28657,v12518,28635,28644,28651,28655,28544,28652,28641,28649,28629,28654,28656,29159,v12519,29166,29158,29157,29165,29164,29172,29152,
29237,29254,29552,29554,29865,29872,29862,29864,30278,30274,30284,30442,30643,30634,30640,30636,30631,30637,30703,30967,30970,30964,30959,30977,31143,31146,31319,31423,31751,31757,31742,31735,31756,31712,31968,31964,31966,31970,31967,31961,31965,32302,32318,32326,32311,32306,32323,32299,32317,32305,32325,32321,32308,32313,32328,32309,32319,32303,32580,32755,32764,v12520,32880,32879,32883,33222,33219,33210,33218,33216,33215,33213,33225,33214,33256,33289,33393,34218,34180,34174,34204,34193,34196,34223,
34203,34183,34216,34186,34214,34407,34752,34769,34739,34770,34758,34731,34747,34746,34760,34763,35131,35126,35140,35128,35133,35244,35598,35607,35609,35611,35594,35616,35613,35588,35600,35905,35903,35955,36090,36093,36092,36088,36091,36264,36425,36427,36424,36426,36676,36670,36674,36677,36671,36991,36989,36996,v12521,36992,37177,37283,37278,37276,37709,37762,37672,37749,37706,37733,37707,37656,37758,37740,37723,37744,37722,37716,v12522,38344,38342,38577,38584,38614,38684,38686,38816,38867,38982,39094,
39221,39425,39423,39854,39851,39850,39853,40251,40255,40587,40655,40670,v12523,40667,40766,40779,21474,22165,22190,22745,22744,23352,24413,25059,25139,25844,25842,25854,25862,v12524,25847,26039,26332,26406,27315,27308,27331,27323,27320,27330,v12525,27487,27512,27567,28681,28683,28670,28678,28666,28689,28687,v12526,29182,29176,29559,29557,29863,29887,29973,30294,30296,30290,30653,30655,v12527,30990,31150,v12528,31328,v12529,31787,31783,31786,31774,31779,31777,31975,v12530,32350,32346,32353,32338,32345,
32584,32761,32763,32887,32886,33229,33231,33290,34255,34217,34253,34256,34249,34224,34234,34233,34799,34796,34802,34784,35206,35250,35316,35624,35641,35628,35627,35920,36101,36441,36451,36454,36452,36447,36437,36544,36681,36685,36999,36995,37E3,v12531,37328,37780,37770,37782,37794,37811,37806,37804,37808,37784,37786,37783,38356,38358,38352,38357,38626,38620,38617,38619,38622,38692,38819,38822,38829,38905,38989,38991,38988,38990,38995,39098,v12532,39229,39214,39333,39438,39617,39683,39686,39759,39758,
39757,39882,39881,39933,39880,39872,40273,40285,40288,40672,40725,40748,20787,22181,22184,v12533,22754,23541,40848,24300,25074,25079,25078,25077,25856,25871,26336,26333,27365,27357,27354,27347,28699,28703,28712,28698,28701,28693,28696,29190,29197,29272,29346,29560,29562,29885,29898,29923,30087,30086,30303,30305,30663,31001,31153,31339,31337,v12534,31800,31805,31799,31808,32363,32365,32377,v12535],v23667=[32371,32645,32694,32697,32696,33240,34281,34269,34282,34261,v12536,34295,34811,34821,34829,34809,
34814,35168,35167,35158,35166,35649,35676,35672,35657,35674,v12537,35654,35673,36104,36106,36476,36466,36487,36470,36460,36474,36468,36692,36686,36781,v12538,37297,37294,37857,37841,37855,37827,37832,v12539,37846,37858,37837,37848,37860,37847,37864,38364,38580,38627,38698,38695,38753,38876,38907,39006,39E3,39003,39100,39237,39241,39446,39449,39693,39912,39911,39894,39899,40329,40289,40306,40298,40300,40594,40599,40595,40628,21240,22199,22198,22196,22204,22756,23360,23363,23421,23542,24009,25080,25082,
25880,25876,25881,26342,26407,27372,28734,28720,28722,29200,29563,29903,30306,30309,31014,31018,31020,31019,31431,31478,31820,31811,31821,v12540,36782,32381,32380,32386,32588,32768,33242,33382,34299,34297,34321,34298,34310,34315,34311,34314,v12541,35172,35258,35320,35696,35692,35686,35695,35679,35691,36111,36109,36489,36481,36485,36482,37300,37323,37912,37891,37885,38369,38704,39108,39250,39249,39336,39467,39472,39479,39477,39955,39949,40569,40629,40680,40751,40799,40803,40801,v12542,22209,22208,
22210,22804,23660,24013,25084,25086,25885,25884,26005,26345,27387,27396,27386,27570,28748,29211,29351,29910,29908,30313,30675,31824,32399,32396,32700,34327,34349,34330,34851,34850,34849,34847,35178,35180,35261,35700,35703,35709,36115,36490,36493,36491,36703,36783,37306,37934,37939,37941,37946,37944,37938,37931,38370,v12543,38706,v12544,39015,39013,39255,39493,39491,39488,39486,39631,39764,39761,39981,39973,40367,40372,40386,40376,40605,40687,40729,40796,v12545,20796,20795,22216,22218,22217,23423,
24020,24018,24398,25087,25892,27402,27489,28753,28760,29568,29924,30090,30318,30316,31155,31840,31839,32894,32893,33247,35186,35183,35324,35712,v12546,36497,36499,36705,37192,37956,v12547,v12548,38851,38849,39019,39253,39509,39501,39634,39706,40009,39985,39998,39995,40403,40407,40756,40812,40810,40852,22220,24022,25088,25891,25899,25898,26348,27408,29914,31434,31844,31843,31845,32403,32406,32404,33250,34360,34367,34865,35722,37008,37007,37987,37984,37988,38760,39023,39260,v12549,39511,v12550,39633,
40020,40023,40022,40421,40607,40692,22225,22761,25900,28766,v12551,v12552,32592,32648,34870,34873,34914,35731,35730,35734,33399,36123,37312,37994,38722,38728,38724,38854,39024,39519,39714,39768,40031,v12553,v12554,40711,40823,40818,24307,27414,28771,31852,31854,34875,35264,36513,37313,38002,38E3,39025,39262,39638,39715,40652,28772,30682,35738,38007,38857,39522,39525,32412,35740,36522,37317,v12555,38012,v12556,40695,35924,38015,40474,29224,39530,39729,40475,40478,31858,20034,20060,v12557,v12558,v12559,
19975,19980,20039,20109,v12560,v12561,v12562,19983,20871,19982,20014,20115,20162,20169,20168,20888,21244,21356,21433,22304,22787,22828,v12563,24063,26081,v12564,27596,v12565,v12566,20017,20028,20200,20188,20201,20193,20189,20186,21004,21001,21276,21324,v12567,22807,22831,23425,23428,23570,23611,23668,23667,24068,24192,24194,24521,25097,25168,27669,27702,27715,27711,27707,29358,29360,29578,v12568,32906,38430,20238],v23669=[20248,20268,20213,20244,20209,20224,20215,20232,20253,20226,20229,20258,20243,
20228,20212,20242,20913,21011,21008,21158,21282,21279,21325,21386,21511,22241,22239,22318,22314,22324,22844,22912,22908,22917,22907,22910,22903,22911,23382,23573,23589,23676,v12569,23678,24031,v12570,24196,24322,24346,24436,24533,24532,24527,25180,25182,25188,25185,25190,25186,25177,25184,25178,25189,25911,26095,26094,26430,26425,26424,26427,26426,26431,26428,26419,27672,27718,27730,27740,27727,v12571,27732,v12572,28785,29278,v12573,29582,29994,30335,31349,v12574,v12575,33404,33408,33405,33407,v12576,
v12577,37017,v12578,37016,37019,37012,38434,38436,38432,38435,20310,20283,20322,20297,20307,20324,20286,20327,20306,20319,20289,20312,20269,20275,20287,20321,20879,20921,21020,21022,21025,v12579,21257,21347,21362,v12580,21552,21559,21546,21588,21573,21529,21532,21541,21528,21565,21583,21569,21544,21540,21575,22254,22247,22245,22337,22341,22348,22345,22347,22354,22790,22848,22950,22936,22944,22935,22926,22946,22928,22927,22951,22945,23438,23442,23592,23594,23693,23695,23688,23691,23689,23698,23690,
23686,23699,23701,24032,24074,24078,24203,24201,24204,24200,24205,24325,24349,24440,24438,24530,24529,24528,24557,24552,24558,24563,24545,24548,24547,24570,24559,24567,24571,24576,24564,25146,25219,25228,v12581,25236,25223,25201,25211,25210,25200,25217,25224,25207,25213,25202,25204,26096,26100,26099,26098,26101,26437,26439,26457,26453,26444,26440,26461,26445,26458,26443,27600,v12582,27768,27751,27755,27780,27787,27791,27761,27759,27753,27802,27757,27783,27797,v12583,27750,27763,27749,27771,27790,
28788,28794,29283,29375,29373,29379,29382,29377,29370,29381,29589,29591,v12584,29586,30010,30009,v12585,30337,31037,32820,32917,32921,32912,32914,32924,33424,33423,33413,33422,33425,33427,33418,v12586,v12587,36809,36799,37023,37025,37029,37022,37031,37024,38448,38440,38447,38445,20019,20376,20348,20357,20349,20352,20359,20342,20340,20361,20356,20343,20300,20375,20330,20378,20345,20353,20344,20368,20380,20372,20382,20370,20354,20373,20331,20334,20894,20924,20926,21045,v12588,21062,21041,21180,v12589,
21308,21394,21396,21639,21631,21633,21649,21634,21640,21611,21626,21630,21605,21612,21620,21606,21645,21615,21601,21600,21656,21603,21607,21604,22263,22265,22383,22386,22381,22379,22385,22384,22390,22400,22389,22395,v12590,22370,22376,22397,22796,22853,22965,22970,22991,22990,22962,22988,22977,22966,22972,22979,22998,22961,22973,22976,22984,22964,22983,23394,23397,23443,23445,23620,23623,23726,23716,23712,23733,23727,23720,23724,23711,23715,23725,23714,23722,23719,23709,23717,23734,23728,23718,24087,
24084,24089,24360,v12591,24404,24450,24446,24445,24542,24549,24621,24614,24601,24626,24587,24628,24586,24599,24627,24602,24606,24620,24610,24589,24592,24622,24595,24593,24588,24585,24604,25108,25149,25261,25268,25297,25278,25258,25270,25290,25262,25267,25263,25275,25257,25264,25272,25917,26024,26043,26121,26108,26116,26130,26120,26107,26115,26123,26125,26117,26109,26129,26128,26358,26378,26501,26476,26510,26514,26486,26491],v23671=[26520,26502,26500,26484,26509,26508,26490,26527,26513,26521,26499,
26493,26497,v12592,26516,27429,27520,27518,27614,27677,27795,27884,27883,27886,27865,27830,27860,27821,27879,27831,27856,27842,27834,27843,27846,27885,27890,27858,27869,27828,27786,27805,27776,27870,27840,27952,27853,27847,27824,27897,27855,27881,27857,28820,28824,28805,28819,28806,28804,28817,28822,28802,28826,28803,29290,29398,29387,29400,29385,29404,29394,29396,29402,29388,29393,29604,29601,29613,29606,29602,29600,29612,29597,29917,29928,v12593,30014,30092,30104,30383,30451,30449,30448,30453,30712,
30716,30713,30715,30714,30711,31042,31039,31173,31352,31355,31483,31861,31997,32821,32911,32942,32931,32952,32949,32941,33312,33440,33472,33451,33434,33432,33435,33461,33447,33454,33468,33438,33466,33460,33448,33441,33449,33474,33444,33475,33462,33442,34416,34415,v12594,35926,36818,36811,36819,36813,36822,36821,36823,37042,37044,37039,37043,37040,38457,38461,38460,38458,38467,20429,20421,20435,20402,20425,20427,20417,20436,20444,20441,v12595,20403,20443,20423,20438,20410,20416,20409,20460,21060,21065,
21184,21186,21309,21372,21399,21398,21401,21400,21690,21665,21677,21669,21711,21699,33549,21687,21678,21718,21686,v12596,21664,21616,21692,21666,21694,21618,21726,21680,22453,v12597,22436,22412,22423,22429,22427,22420,22424,22415,22425,22437,22426,22421,22772,22797,22867,23009,23006,23022,23040,23025,23005,23034,23037,23036,23030,23012,23026,23031,23003,23017,23027,23029,23008,23038,23028,23021,23464,23628,23760,23768,23756,23767,23755,23771,23774,23770,23753,23751,23754,23766,v12598,23759,23752,
23750,23758,23775,23800,24057,v12599,24096,24100,24240,24228,24226,24219,24227,24229,24327,24366,24406,24454,24631,24633,24660,24690,24670,24645,24659,24647,24649,24667,24652,24640,24642,24671,24612,24644,24664,24678,24686,v12600,25295,25357,25355,25333,25358,25347,25323,25337,25359,25356,25336,25334,25344,v12601,25338,25365,25339,25328,25921,25923,26026,26047,26166,26145,26162,26165,26140,26150,26146,26163,26155,26170,26141,26164,26169,26158,v12602,26561,26610,26568,26554,26588,26555,26616,26584,
26560,26551,26565,26603,26596,26591,26549,26573,26547,26615,26614,26606,26595,26562,26553,26574,26599,26608,26546,26620,26566,26605,26572,26542,26598,26587,26618,v12603,26563,26602,26571,27432,27522,27524,27574,27606,27608,27616,v12604,27944,27956,27949,27935,27964,27967,27922,27914,27866,27955,27908,27929,27962,27930,27921,27904,27933,27970,27905,27928,27959,27907,27919,27968,27911,27936,27948,27912,27938,27913,27920,28855,28831,28862,28849,28848,28833,v12605,28841,29249,v12606,29292,29296,29299,
29294,29386,29412,29416,29419,29407,29418,29414,29411,29573,29644,29634,29640,29637,29625,29622,29621,29620,29675,29631,29639,29630,29635,29638,29624,29643,29932,29934,29998,v12607,30119,30122,30329,30404,30472,v12608,30474,30455,30459,30458,v12609,30726,v12610,30725,30736,30735,30734,v12611,30723,30739,31050,31052,31051,31045,31044,31189,31181,31183,31190,31182,31360,31358,31441,v12612,31866,v12613,v12614,32003,32008,32001,32600,32657],v23673=[32653,32702,32775,v12615,32788,32823,32984,32967,32992,
32977,32968,32962,32976,32965,32995,32985,32988,32970,32981,32969,32975,32983,32998,32973,33279,33313,33428,33497,33534,33529,33543,33512,33536,33493,33594,33515,33494,33524,33516,33505,33522,33525,33548,33531,33526,33520,33514,33508,33504,33530,33523,33517,34423,34420,34428,34419,34881,34894,34919,34922,34921,35283,35332,35335,36210,36835,36833,36846,36832,37105,37053,37055,37077,37061,37054,37063,37067,37064,v12616,37331,38484,38479,38481,38483,38474,38478,20510,20485,20487,20499,20514,20528,20507,
20469,20468,20531,20535,20524,v12617,20503,20508,20512,20519,20533,20527,20529,20494,20826,20884,20883,20938,v12618,20936,20942,21089,21082,21074,v12619,21077,21090,21197,21262,21406,21798,21730,21783,21778,21735,21747,21732,21786,21759,21764,21768,21739,21777,21765,21745,21770,21755,v12620,21728,21774,21763,21771,v12621,22476,22578,22485,22482,22458,22470,22461,22460,22456,22454,22463,22471,22480,22457,22465,22798,22858,23065,23062,v12622,23061,23055,23063,23050,23070,23091,23404,23463,23469,23468,
23555,23638,23636,23788,23807,23790,23793,23799,23808,23801,24105,24104,24232,24238,24234,24236,24371,24368,24423,24669,24666,24679,24641,24738,24712,24704,24722,24705,24733,24707,24725,24731,24727,24711,24732,24718,25113,25158,25330,25360,25430,25388,v12623,25398,25411,25572,25401,25419,25418,25404,25385,25409,25396,25432,25428,25433,25389,25415,25395,25434,25425,25400,25431,25408,25416,25930,25926,26054,v12624,26050,26186,26207,26183,26193,v12625,26655,26650,26697,v12626,26683,26699,26703,26646,
26673,26652,26677,26667,26669,26671,26702,26692,26676,26653,26642,26644,26662,26664,26670,26701,26682,26661,26656,27436,27439,27437,27441,27444,27501,32898,27528,27622,27620,27624,27619,27618,27623,27685,28026,v12627,28022,27917,28001,28050,27992,28002,28013,28015,28049,28045,28143,28031,28038,27998,v12628,28E3,28055,28016,28028,27999,28034,28056,27951,28008,28043,28030,28032,28036,27926,28035,28027,28029,28021,28048,28892,28883,28881,28893,28875,32569,28898,28887,28882,28894,28896,28884,28877,v12629,
28890,28878,28897,29250,29304,29303,29302,29440,29434,29428,29438,29430,29427,29435,29441,29651,29657,29669,29654,29628,29671,29667,29673,29660,29650,29659,29652,29661,29658,v12630,29672,v12631,v12632,29985,30043,30047,30128,30145,30139,30148,30144,30143,30134,30138,30346,30409,30493,30491,30480,30483,30482,30499,30481,30485,v12633,30498,30503,30755,30764,30754,30773,30767,30760,30766,30763,30753,30761,30771,30762,30769,31060,31067,31055,31068,31059,31058,31057,v12634,31200,31214,31213,31210,31196,
31198,31197,31366,31369,31365,v12635,31370,31367,31448,31504,31492,31507,31493,31503,31496,31498,31502,31497,31506,31876,31889,31882,31884,31880,31885,31877,32030,32029,32017,32014,32024,32022,32019,32031,32018,32015,32012,32604,32609,32606,32608,32605,32603,32662,32658,32707,32706,32704,32790,32830,32825,33018,33010,33017,33013,33025,33019,33024,33281,33327,33317,33587,33581,33604,33561,33617,33573,33622,33599,33601,33574,33564,33570,33602],v23675=[33614,33563,33578,33544,33596,33613,33558,33572,
33568,33591,33583,33577,33607,33605,33612,33619,33566,33580,33611,33575,33608,34387,34386,34466,34472,34454,34445,34449,34462,34439,34455,34438,34443,34458,34437,34469,34457,34465,34471,34453,34456,34446,34461,34448,34452,v12636,34925,v12637,34930,34944,34929,34943,34927,34947,34942,34932,34940,35346,35911,35927,35963,36004,36003,36214,36216,36277,36279,36278,36561,36563,36862,36853,36866,36863,36859,36868,36860,36854,37078,37088,v12638,37091,37087,37093,37080,37083,37079,37084,37092,37200,v12639,
37333,37346,37338,38492,38495,38588,39139,v12640,v12641,20095,20592,20586,20577,20574,20576,20563,20555,20573,20594,20552,20557,20545,20571,20554,20578,20501,20549,20575,20585,20587,v12642,20550,20544,20590,20595,20567,20561,20944,21099,21101,21100,21102,21206,21203,21293,21404,v12643,21820,21837,21840,21812,21802,21841,21858,21814,21813,21808,21842,21829,21772,21810,21861,21838,21817,21832,21805,21819,21824,21835,22282,22279,22523,22548,22498,22518,22492,22516,22528,22509,22525,22536,22520,22539,
22515,22479,22535,22510,22499,22514,22501,22508,22497,22542,22524,22544,22503,22529,22540,22513,22505,22512,22541,22532,22876,23136,23128,23125,v12644,23134,23096,23093,23149,23120,23135,23141,23148,23123,23140,23127,23107,23133,23122,23108,23131,23112,23182,23102,23117,23097,23116,23152,23145,23111,23121,23126,23106,23132,23410,23406,23489,23488,23641,23838,23819,23837,23834,23840,23820,23848,23821,23846,23845,23823,23856,23826,23843,23839,23854,24126,24116,24241,24244,24249,v12645,24374,24376,24475,
24470,24479,24714,24720,24710,24766,24752,24762,v12646,24783,24804,24793,24797,24776,24753,24795,24759,24778,24767,24771,24781,24768,25394,25445,25482,25474,25469,25533,25502,25517,25501,25495,25515,25486,25455,25479,25488,25454,25519,25461,25500,25453,25518,25468,25508,25403,25503,25464,25477,25473,25489,25485,25456,25939,26061,26213,26209,26203,26201,26204,26210,26392,26745,26759,26768,26780,v12647,26798,26795,26966,26735,26787,26796,26793,26741,26740,26802,26767,26743,26770,26748,26731,26738,26794,
26752,26737,26750,26779,26774,26763,26784,26761,26788,26744,26747,26769,26764,26762,26749,27446,27443,v12648,27537,27535,v12649,27532,27690,28096,28075,28084,28083,28276,28076,28137,28130,28087,28150,28116,28160,28104,28128,28127,28118,28094,28133,v12650,28123,28148,28106,28093,28141,28144,28090,28117,28098,28111,28105,28112,28146,28115,28157,28119,28109,28131,28091,28922,28941,28919,28951,28916,28940,28912,28932,28915,28944,28924,28927,28934,28947,28928,28920,28918,28939,28930,28942,29310,v12651,
29311,29469,29463,29447,29457,29464,29450,29448,29439,29455,29470,29576,29686,29688,29685,29700,29697,29693,29703,29696,29690,29692,29695,29708,29707,29684,29704,30052,30051,30158,30162,30159,v12652,30161,30160,30351,30345,30419,30521,30511,30509,v12653,30516,30515,30525,30501,30523,30517,30792,30802,30793,30797,30794,30796,30758,30789,30800,31076,31079,v12654,31075,31083,31073,31163,31226,31224,v12655,31375,31380,31376,31541,31547,31540,31525,31536],v23677=[31522,31524,31539,31512,31530,31517,31537,
31531,31533,31535,31538,31544,31514,31523,31892,31896,31894,31907,32053,32061,32056,32054,32058,32069,32044,32041,32065,32071,v12656,32074,32059,32040,32611,32661,v12657,32667,v12658,32717,v12659,32711,32719,32713,32799,32798,32795,32839,32835,32840,33048,33061,33049,33051,33069,33055,33068,33054,33057,33045,33063,33053,33058,33297,33336,33331,33338,33332,33330,33396,33680,33699,33704,33677,33658,33651,33700,33652,33679,33665,33685,33689,33653,33684,33705,33661,33667,33676,33693,33691,33706,33675,
33662,33701,33711,33672,33687,33712,33663,33702,33671,33710,33654,34393,34390,34495,34487,34498,34497,34501,34490,34480,34504,34489,34483,34488,34508,34484,v12660,34499,v12661,34898,34953,34965,34984,34978,34986,34970,34961,34977,34975,34968,34983,34969,34971,34967,34980,34988,34956,34963,34958,35202,35286,35289,35285,35376,35367,35372,35358,35897,35899,v12662,35965,36005,36221,36219,36217,36284,36290,36281,36287,36289,36568,36574,36573,36572,36567,v12663,36900,36875,36881,36892,36876,36897,37103,
37098,37104,37108,v12664,37076,v12665,37097,37206,37208,37210,37203,37205,37356,37364,37361,37363,37368,37348,37369,v12666,37367,37352,37358,38266,38278,38280,38524,38509,38507,38513,38511,38591,38762,38916,39141,39319,20635,20629,20628,20638,20619,20643,20611,20620,20622,20637,20584,20636,20626,20610,20615,20831,20948,21266,21265,21412,21415,21905,21928,21925,21933,21879,22085,21922,21907,21896,21903,21941,21889,21923,21906,21924,21885,21900,21926,21887,21909,21921,21902,22284,22569,22583,22553,
22558,22567,22563,22568,22517,22600,22565,22556,22555,22579,22591,22582,22574,22585,22584,22573,22572,22587,22881,23215,23188,23199,23162,23202,23198,23160,23206,23164,23205,23212,23189,23214,23095,23172,23178,23191,23171,23179,23209,23163,23165,23180,23196,23183,23187,23197,23530,23501,23499,23508,23505,23498,23502,23564,23600,23863,23875,23915,23873,23883,23871,23861,23889,23886,23893,23859,23866,23890,23869,23857,23897,23874,23865,23881,23864,23868,23858,23862,23872,23877,24132,24129,v12667,24486,
24485,24491,24777,24761,24780,24802,24782,24772,24852,24818,24842,24854,24837,24821,24851,24824,24828,24830,24769,24835,24856,24861,24848,24831,24836,24843,25162,25492,25521,25520,25550,25573,25576,25583,25539,25757,25587,25546,25568,25590,25557,25586,25589,25697,25567,25534,25565,25564,25540,25560,25555,25538,25543,25548,25547,25544,25584,25559,25561,25906,25959,25962,25956,25948,25960,25957,25996,v12668,26030,26064,26066,26236,26220,26235,26240,26225,26233,26218,26226,26369,26892,26835,26884,26844,
26922,26860,26858,26865,26895,26838,26871,26859,26852,26870,26899,26896,26867,26849,26887,26828,26888,26992,26804,26897,26863,26822,26900,26872,26832,26877,26876,26856,26891,26890,26903,26830,26824,v12669,26854,26868,26833,26886,26836,26857,26901,26917,26823,27449,27451,27455,27452,27540,27543,27545,27541,27581,27632,v12670,27696,28156,v12671,28191,28233,28296,v12672,28229,28258,28203,28223,28225,28253,28275,28188,28211,28235,28224,28241,28219,28163,28206],v23679=[28254,28264,28252,28257,28209,28200,
28256,28273,28267,28217,28194,28208,28243,28261,28199,28280,28260,28279,28245,28281,28242,28262,v12673,28250,28960,28958,28975,28923,28974,28977,28963,28965,28962,28978,28959,28968,28986,28955,29259,29274,v12674,29318,29317,29323,29458,29451,29488,29474,29489,29491,29479,29490,29485,29478,29475,29493,29452,29742,29740,29744,29739,29718,29722,29729,29741,29745,29732,29731,29725,29737,29728,29746,29947,29999,30063,30060,30183,30170,30177,30182,30173,30175,30180,30167,30357,30354,30426,v12675,30532,
30541,30533,30538,30542,v12676,30686,30700,30816,v12677,30812,30829,30833,30826,30830,30832,30825,30824,30814,30818,31092,31091,31090,31088,31234,31242,31235,31244,31236,31385,31462,31460,31562,31559,31556,31560,31564,31566,31552,31576,31557,31906,31902,31912,31905,32088,32111,32099,32083,32086,32103,32106,32079,32109,32092,32107,32082,32084,32105,32081,32095,32078,v12678,v12679,32674,v12680,32727,32849,v12681,33022,32980,33091,33098,33106,33103,33095,33085,33101,33082,33254,33262,v12682,33284,v12683,
33343,33397,33595,v12684,33785,33827,33728,33768,33810,33767,33764,33788,33782,33808,33734,33736,33771,33763,33727,33793,33757,33765,33752,33791,33761,33739,33742,33750,33781,33737,33801,v12685,33758,33809,33798,33730,33779,33749,33786,33735,33745,33770,33811,33690,33731,33772,33774,33732,33787,33751,33762,33819,33755,33790,34520,34530,34534,34515,34531,34522,34538,34525,34539,34524,34540,34537,34519,34536,34513,34888,34902,34901,35002,35031,35001,35E3,35008,35006,34998,35004,34999,35005,34994,35073,
35017,35221,35224,35223,35293,v12686,35406,35405,35385,35417,35392,v12687,v12688,35410,35400,35409,35402,35404,35407,35935,35969,35968,36026,36030,36016,36025,36021,36228,36224,36233,36312,36307,36301,36295,36310,36316,36303,36309,36313,36296,36311,36293,36591,36599,36602,36601,36582,36590,36581,36597,v12689,36598,36587,36593,36588,36596,36585,36909,36916,36911,37126,37164,v12690,37119,37116,37128,37113,37115,37121,37120,37127,37125,37123,37217,37220,37215,37218,37216,37377,37386,37413,37379,37402,
37414,37391,37388,37376,37394,37375,37373,37382,37380,37415,37378,37404,37412,37401,37399,37381,37398,38267,38285,38284,38288,38535,38526,v12691,38531,38528,38594,38600,38595,38641,38640,38764,38768,38766,38919,39081,39147,40166,v12692,v12693,20150,20669,20671,20678,20654,20676,20682,20660,20680,20674,20656,20673,20666,20657,20683,20681,20662,20664,20951,21114,21112,v12694,21955,21979,21964,21968,21963,21962,21981,v12695,21972,21956,21993,21951,21970,21901,21967,21973,21986,21974,21960,22002,21965,
21977,21954,22292,22611,22632,22628,22607,22605,22601,22639,22613,22606,22621,22617,22629,22619,22589,22627,22641,22780,23239,23236,23243,23226,23224,23217,23221,23216,23231,23240,23227,23238,23223,23232,23242,23220,23222,23245,23225,23184,23510,v12696,23583,23603,23921,23907,23882,23909,23922,23916,23902,23912,23911,23906,24048,24143,24142,24138,24141,24139,24261,24268,24262,24267,24263,24384,24495,24493,24823,v12697,24875,24901,24886,24882,24878,24902,24879,24911],v23681=[24873,24896,25120,37224,
25123,25125,25124,25541,25585,25579,25616,25618,25609,25632,25636,25651,25667,25631,25621,25624,25657,25655,v12698,25612,25638,25648,25640,25665,25653,25647,25610,25626,25664,25637,25639,25611,25575,25627,25646,25633,25614,25967,26002,26067,26246,26252,26261,26256,26251,26250,26265,26260,26232,26400,26982,26975,26936,26958,26978,26993,26943,26949,26986,26937,26946,26967,26969,27002,v12699,26933,26988,26931,26941,26981,26864,27E3,26932,26985,26944,26991,26948,26998,26968,26945,26996,26956,26939,26955,
26935,26972,26959,26961,26930,26962,26927,27003,26940,27462,27461,27459,27458,27464,27457,27547,v12700,27641,v12701,28315,28374,28360,28303,28352,28319,v12702,28320,28337,28345,28358,28370,28349,28353,28318,28361,28343,28336,28365,28326,28367,28338,28350,28355,28380,28376,28313,28306,28302,28301,28324,28321,28351,28339,28368,28362,28311,28334,28323,28999,29012,29010,29027,29024,28993,29021,v12703,29042,29048,29034,29025,28994,29016,28995,29003,29040,29023,29008,29011,28996,29005,29018,29263,29325,
29324,29329,29328,29326,29500,29506,29499,29498,29504,29514,29513,29764,v12704,29778,29777,29783,29760,v12705,29774,29762,29766,29773,29780,29921,29951,29950,29949,29981,30073,30071,27011,30191,30223,30211,30199,30206,30204,v12706,30200,30224,30203,30198,30189,30197,30205,30361,30389,30429,30549,v12707,30546,30550,30554,30569,30567,30548,30553,30573,30688,30855,30874,30868,30863,30852,30869,v12708,30881,30851,30841,30873,30848,30870,30843,31100,31106,31101,31097,31249,v12709,31250,31255,31253,31266,
31251,31259,31248,31395,31394,31390,31467,31590,31588,31597,31604,31593,31602,31589,31603,31601,31600,31585,31608,31606,31587,31922,31924,31919,32136,32134,32128,32141,32127,32133,32122,32142,32123,32131,32124,32140,32148,32132,32125,32146,32621,32619,v12710,32620,32678,32677,32679,v12711,32801,33124,33120,33143,33116,33129,33115,33122,33138,26401,33118,33142,33127,33135,33092,33121,33309,33353,33348,33344,33346,33349,34033,33855,33878,33910,33913,33935,33933,33893,33873,33856,33926,33895,33840,33869,
33917,33882,33881,33908,33907,33885,34055,33886,33847,33850,33844,33914,33859,33912,33842,33861,33833,33753,33867,33839,33858,33837,33887,33904,33849,33870,33868,33874,33903,33989,33934,33851,33863,33846,33843,33896,33918,33860,33835,33888,33876,33902,33872,34571,34564,34551,34572,34554,34518,34549,34637,34552,34574,34569,34561,34550,34573,34565,35030,35019,v12712,35038,35035,35034,35020,35024,35205,35227,35295,35301,35300,35297,35296,35298,35292,35302,35446,35462,35455,35425,35391,35447,35458,35460,
35445,35459,35457,35444,35450,35900,35915,35914,35941,35940,35942,35974,v12713,36044,v12714,36241,36236,v12715,36237,v12716,36240,36242,36336,36320,36332,36337,36334,36304,36329,36323,36322,36327,36338,36331,36340,36614,36607,36609,36608,36613,v12717,36610,v12718,36946,36927,36932,36937,36925,37136,37133,37135,37137,37142,37140,37131,37134,v12719,37448,37458,37424,37434,37478,37427,37477,37470,37507,37422,37450,37446,37485,37484,37455,37472,37479,37487,37430,37473,37488],v23683=[37425,37460,37475,
37456,37490,37454,37459,37452,37462,37426,38303,38300,38302,38299,v12720,38545,38551,38606,38650,38653,38648,38645,38771,v12721,38770,38927,v12722,39084,39158,39161,39343,39346,39344,39349,39597,39595,39771,40170,40173,40167,40576,v12723,20710,20692,20695,20712,20723,20699,20714,20701,20708,20691,20716,20720,20719,20707,20704,20952,v12724,21225,21227,21296,21420,22055,22037,22028,22034,22012,22031,22044,22017,22035,22018,22010,22045,22020,22015,22009,22665,22652,22672,22680,22662,22657,22655,22644,
22667,22650,22663,22673,22670,22646,22658,22664,22651,22676,22671,22782,22891,23260,23278,23269,23253,23274,23258,23277,23275,23283,23266,23264,23259,23276,23262,23261,23257,23272,23263,23415,23520,23523,23651,23938,23936,23933,23942,23930,23937,23927,23946,23945,23944,23934,23932,23949,23929,23935,v12725,24147,24280,24273,24279,24270,24284,24277,24281,24274,24276,24388,24387,24431,24502,24876,24872,24897,24926,24945,24947,v12726,24946,24940,24960,24948,24916,24954,24923,24933,24891,24938,24929,24918,
25129,25127,25131,25643,25677,25691,25693,25716,25718,v12727,25725,25717,25702,25766,25678,25730,25694,25692,25675,25683,25696,25680,25727,25663,25708,25707,25689,25701,25719,25971,26016,26273,26272,26271,26373,26372,26402,27057,27062,27081,27040,27086,27030,27056,27052,27068,27025,27033,27022,27047,27021,27049,27070,27055,27071,27076,27069,27044,27092,27065,27082,27034,27087,27059,27027,27050,27041,27038,27097,27031,27024,27074,27061,27045,27078,27466,27469,27467,v12728,v12729,27646,28366,28405,
28401,28419,28453,28408,28471,28411,28462,28425,28494,v12730,28455,28440,28475,28434,28397,28426,28470,28531,28409,28398,28461,28480,28464,28476,28469,28395,28423,28430,28483,28421,28413,28406,28473,28444,28412,28474,28447,28429,28446,28424,28449,29063,29072,29065,29056,29061,29058,29071,29051,29062,29057,29079,29252,29267,29335,29333,29331,29507,29517,29521,29516,29794,29811,29809,29813,29810,29799,29806,29952,v12731,30077,30096,30230,30216,30220,30229,30225,30218,30228,30392,30593,30588,30597,30594,
30574,30592,30575,30590,30595,30898,30890,30900,30893,30888,30846,30891,30878,30885,30880,30892,30882,30884,31128,v12732,31126,31125,31124,31123,31127,31112,31122,31120,31275,31306,31280,31279,31272,31270,31400,v12733,31470,31624,31644,31626,31633,31632,31638,31629,31628,31643,31630,31621,31640,21124,31641,31652,31618,31931,31935,31932,31930,32167,32183,32194,32163,32170,32193,32192,32197,32157,32206,32196,32198,v12734,32175,32185,32150,32188,32159,32166,32174,32169,32161,32201,32627,v12735,32741,
32734,32804,32861,32860,33161,33158,33155,33159,33165,33164,33163,33301,33943,33956,33953,33951,33978,33998,33986,33964,33966,33963,33977,33972,33985,33997,33962,33946,33969,34E3,33949,33959,33979,33954,33940,33991,33996,33947,33961,33967,v12736,34006,33944,33974,33999,33952,34007,34004,34002,34011,33968,33937,34401,34611,34595,34600,34667,34624,34606,34590,34593,34585,34587,34627,34604,34625,34622,34630,34592,34610,34602,34605,34620,34578,34618,34609,34613,34626,v12737,34616],v23685=[34596,34586,
34608,34577,35063,35047,v12738,35066,35070,35054,35068,35062,35067,35056,35052,35051,35229,35233,35231,35230,35305,35307,35304,35499,35481,35467,35474,35471,35478,35901,v12739,36053,36047,36055,36246,36361,36354,36351,36365,36349,36362,36355,36359,36358,36357,36350,36352,36356,v12740,36622,36621,37155,37148,37152,37154,37151,37149,37146,37156,37153,37147,37242,37234,37241,37235,37541,37540,37494,37531,37498,37536,37524,37546,37517,37542,37530,37547,37497,37527,37503,37539,37614,37518,37506,37525,
37538,37501,37512,37537,37514,37510,37516,37529,37543,37502,37511,37545,37533,37515,37421,38558,38561,38655,38744,38781,38778,38782,38787,38784,38786,38779,38788,38785,38783,38862,38861,38934,v12741,39170,39168,39175,39325,39324,39363,39353,39355,39354,39362,39357,39367,39601,39651,39655,v12742,v12743,39775,v12744,40181,40615,20735,20739,20784,20728,v12745,20726,20734,v12746,20733,20746,v12747,21233,21231,22088,22082,22092,22069,22081,22090,22089,22086,22104,22106,22080,22067,22077,22060,22078,22072,
22058,22074,22298,22699,22685,22705,22688,22691,22703,22700,22693,22689,22783,23295,23284,23293,23287,23286,23299,23288,23298,23289,23297,23303,23301,23311,23655,23961,23959,23967,23954,23970,23955,23957,23968,23964,23969,23962,23966,24169,24157,24160,24156,32243,24283,24286,24289,24393,24498,24971,24963,24953,25009,25008,24994,24969,24987,24979,25007,25005,24991,24978,25002,24993,24973,24934,25011,25133,25710,25712,25750,25760,25733,25751,25756,25743,25739,25738,25740,25763,25759,25704,25777,25752,
25974,25978,25977,25979,v12748,26293,26288,26281,26290,26295,26282,26287,27136,27142,27159,27109,27128,27157,27121,27108,27168,27135,27116,27106,27163,27165,27134,27175,27122,27118,27156,27127,27111,27200,27144,27110,27131,27149,27132,27115,27145,27140,27160,27173,27151,27126,27174,27143,27124,27158,27473,27557,27555,27554,27558,27649,27648,27647,27650,28481,28454,28542,28551,28614,28562,28557,28553,28556,28514,28495,28549,28506,28566,28534,28524,28546,28501,28530,28498,28496,28503,28564,28563,28509,
28416,28513,28523,28541,28519,28560,28499,28555,28521,28543,28565,28515,28535,28522,28539,29106,29103,29083,29104,29088,29082,29097,29109,29085,29093,29086,29092,29089,29098,29084,29095,29107,29336,29338,29528,29522,v12749,29533,29531,29537,29530,29529,29538,29831,v12750,29830,29825,29821,29829,29832,29820,v12751,29960,29959,30078,30245,30238,30233,30237,30236,30243,30234,30248,30235,v12752,30363,30605,30607,30601,30600,30925,30907,30927,30924,30929,30926,30932,30920,v12753,30921,31130,31137,31136,
31132,31138,v12754,27510,31289,31410,31412,31411,31671,31691,31678,31660,31694,31663,31673,31690,31669,31941,31944,31948,31947,32247,32219,32234,32231,32215,32225,32259,32250,32230,32246,32241,32240,32238,32223,32630,32684,32688,32685,32749,32747,32746,32748,32742,32744,32868,32871,33187,33183,33182,33173,33186,33177,33175,33302,33359,33363,33362,33360,33358,33361,34084,34107,34063,34048,34089,34062,34057,34061,34079,34058,34087,34076,34043,34091,34042,34056,34060,34036,34090,34034],v23687=[34069,
34039,34027,34035,34044,34066,34026,34025,34070,34046,34088,34077,34094,34050,34045,34078,34038,34097,34086,v12755,34032,34031,34041,34072,34080,34096,34059,34073,34095,34402,34646,v12756,34679,34785,34675,34648,34644,34651,34642,34657,34650,34641,34654,34669,34666,34640,34638,34655,34653,34671,34668,34682,34670,34652,34661,34639,34683,34677,34658,34663,34665,34906,35077,35084,35092,35083,v12757,35078,35094,35089,35086,35081,35234,35236,35235,35309,35312,35308,35535,35526,35512,35539,35537,v12758,
35515,35543,35518,35520,35525,35544,35523,35514,35517,35545,35902,35917,35983,36069,36063,36057,36072,36058,36061,36071,36256,36252,36257,36251,36384,36387,36389,36388,36398,36373,36379,36374,36369,36377,v12759,36372,36370,36376,36371,36380,36375,36378,36652,36644,36632,36634,36640,36643,v12760,36979,36976,36975,36967,36971,37167,37163,v12761,37170,37158,37166,v12762,37258,v12763,37252,37248,37584,v12764,37568,37593,37558,37583,37617,37599,37592,37609,37591,37597,37580,37615,37570,37608,37578,37576,
37582,37606,37581,37589,37577,37600,37598,37607,37585,37587,37557,37601,37669,37574,37556,38268,38316,38315,38318,38320,38564,38562,38611,38661,38664,38658,38746,38794,38798,38792,38864,38863,38942,38941,38950,38953,38952,38944,38939,38951,39090,39176,39162,39185,39188,v12765,39189,39388,39373,39375,v12766,39374,39369,v12767,39384,39371,39383,39372,39603,39660,39659,39667,39666,39665,39750,39747,39783,39796,39793,39782,39798,39797,39792,39784,39780,39788,40188,40186,40189,40191,40183,40199,40192,
40185,40187,40200,40197,40196,40579,40659,v12768,20764,20755,20759,20762,20753,20958,21300,21473,22128,22112,22126,22131,22118,22115,22125,22130,22110,22135,22300,22299,22728,22717,22729,22719,22714,22722,22716,22726,23319,23321,23323,23329,23316,23315,23312,23318,v12769,23322,23328,23326,23535,23980,23985,23977,23975,23989,23984,23982,23978,23976,23986,23981,23983,23988,v12770,24166,24175,24297,24295,24294,24296,24293,24395,24508,24507,24989,25E3,24982,25029,25012,25030,25025,25036,25018,25023,25016,
24972,25815,25814,25808,25807,25801,25789,25737,25795,25819,25843,25817,25907,25983,25980,26018,26312,26302,26304,v12771,26319,26301,26299,26298,26316,26403,27188,27238,27209,27239,27186,27240,27198,27229,27245,27254,27227,27217,27176,27226,27195,27199,27201,27242,27236,27216,27215,27220,27247,27241,27232,27196,27230,27222,27221,v12772,27206,27477,27476,27478,27559,v12773,27592,27591,27652,27651,27654,28589,28619,28579,28615,28604,28622,28616,28510,28612,28605,28574,28618,28584,28676,28581,28590,
28602,28588,28586,28623,28607,28600,28578,28617,28587,28621,28591,28594,28592,29125,29122,29119,29112,29142,v12774,29131,29140,29130,29127,29135,29117,29144,29116,29126,v12775,v12776,29545,v12777,29548,29541,29547,29546,29823,29850,29856,29844,29842,29845,29857,29963,30080,30255,30253,30257,30269,30259,30268,30261,30258,30256,30395,30438,30618,30621,30625,30620,30619,v12778,30613,30617,30615,30941,30953,30949,30954,30942,30947,30939,v12779,30957,v12780,31140,31300,31304,31303,31414,31416,31413,31409],
v23689=[31415,31710,31715,31719,31709,31701,31717,31706,31720,31737,31700,31722,31714,31708,31723,31704,31711,31954,31956,31959,v12781,32274,32289,32279,32268,v12782,32275,32270,32284,32277,32282,32290,32267,32271,32278,32269,32276,32293,32292,32579,v12783,32634,32689,32751,32810,32809,32876,33201,33190,33198,33209,33205,33195,33200,33196,33204,33202,33207,33191,33266,v12784,34134,34117,34155,34125,34131,34145,34136,34112,34118,34148,34113,34146,34116,34129,34119,34147,34110,34139,34161,34126,34158,
34165,34133,34151,34144,34188,34150,34141,34132,34149,34156,34403,34405,34404,34724,34715,34703,34711,34707,34706,34696,34689,34710,34712,34681,34695,34723,34693,v12785,34717,34692,34708,34716,34714,34697,35102,35110,35120,v12786,35111,35121,35106,35113,35107,35119,35116,35103,35313,35552,35554,35570,v12787,35549,35604,35556,35551,35568,35528,35550,35553,35560,35583,35567,35579,v12788,35984,36085,36078,36081,36080,36083,36204,36206,36261,36263,36403,36414,36408,36416,36421,36406,v12789,36417,36400,
36415,36541,v12790,36654,36661,36658,36665,36663,36660,36982,36985,36987,36998,37114,37171,v12791,37267,v12792,37261,37263,37671,37662,37640,37663,37638,37647,37754,37688,37692,37659,37667,37650,37633,37702,37677,37646,37645,37579,37661,37626,37651,37625,37623,37684,37634,37668,37631,37673,37689,37685,37674,37652,37644,37643,37630,37641,37632,37627,37654,38332,38349,38334,v12793,38326,38335,38325,38333,38569,38612,38667,38674,38672,38809,38807,38804,38896,38904,38965,38959,38962,39204,39199,39207,
39209,39326,39406,39404,39397,39396,39408,39395,39402,39401,39399,39609,39615,39604,39611,39670,39674,39673,39671,39731,39808,39813,39815,39804,39806,39803,39810,39827,39826,39824,39802,39829,39805,39816,40229,40215,40224,40222,40212,40233,40221,40216,40226,40208,40217,40223,40584,v12794,40622,40621,v12795,40698,40722,40765,20774,20773,20770,20772,20768,20777,21236,22163,v12796,22150,22148,22147,22142,22146,22143,22145,22742,22740,22735,22738,23341,23333,23346,23331,23340,23335,23334,23343,23342,
23419,v12797,23991,24172,24170,24510,25027,25013,25020,25063,25056,25061,25060,25064,25054,25839,25833,25827,25835,25828,25832,25985,25984,26038,26074,26322,27277,27286,27265,27301,27273,27295,27291,27297,27294,27271,27283,27278,27285,27267,27304,27300,27281,27263,27302,27290,27269,27276,27282,27483,27565,27657,28620,28585,28660,28628,28643,28636,28653,28647,28646,28638,28658,28637,28642,28648,29153,29169,29160,29170,29156,29168,29154,29555,v12798,29847,29874,29867,29840,29866,29869,29873,29861,29871,
v12799,29967,30084,30275,v12800,30279,30372,30441,30645,30635,30642,30647,30646,30644,30641,30632,30704,30963,30973,30978,v12801,30975,30962,30981,30969,30974,30980,31147,31144,31324,31323,31318,31320,31316,31322,31422,v12802,31749,31759,31730,31744,31743,31739,31758,31732,31755,31731,31746,31753,31747,31745,31736,31741,v12803,v12804,31760,31754,31976,32301,32316,32322,32307,38984,32312,32298,32329,32320,32327,32297,32332,32304,32315,32310,32324,32314,32581,32639,32638,32637,32756,32754,32812,33211,
33220,33228],v23691=[33226,33221,33223,33212,33257,33371,33370,33372,34179,34176,34191,34215,34197,34208,34187,34211,34171,34212,34202,34206,34167,34172,34185,34209,34170,34168,34135,34190,34198,34182,34189,34201,34205,34177,34210,34178,34184,34181,34169,34166,34200,34192,34207,34408,34750,34730,34733,34757,34736,34732,34745,34741,34748,34734,34761,34755,34754,34764,34743,34735,34756,34762,34740,34742,34751,34744,34749,34782,34738,35125,35123,35132,35134,35137,35154,35127,35138,35245,35247,35246,
v12805,35614,35608,35606,35601,35589,35595,35618,35599,35602,35605,35591,35597,35592,35590,35612,35603,35610,35919,35952,35954,35953,35951,35989,35988,36089,36207,36430,36429,36435,36432,36428,36423,36675,36672,36997,36990,37176,37274,37282,37275,37273,37279,37281,37277,37280,37793,37763,37807,37732,37718,37703,37756,37720,37724,37750,37705,v12806,37728,37741,37775,37708,37738,37753,37719,37717,37714,37711,37745,37751,37755,37729,37726,37731,37735,37710,37721,38343,38336,38345,38339,38341,38327,38574,
38576,38572,38688,38687,38680,38685,38681,38810,38817,38812,38814,38813,38869,38868,38897,38977,38980,38986,38985,38981,38979,39205,v12807,39210,39219,39218,39215,39213,39217,39216,39320,39331,39329,39426,39418,39412,39415,39417,39416,39414,39419,v12808,39420,39427,39614,39678,39677,39681,39676,39752,39834,39848,39838,39835,39846,39841,39845,39844,39814,39842,39840,39855,40243,40257,40295,40246,v12809,40241,40248,40240,40261,v12810,40254,40247,40256,40253,32757,40237,40586,40585,40589,40624,40648,
40666,40699,40703,40740,40739,40738,40788,v12811,20785,v12812,22168,22172,22167,22170,22173,22169,22896,23356,v12813,24E3,v12814,25048,25055,v12815,25073,25066,25072,25067,25046,25065,25855,25860,25853,25848,25857,25859,25852,26004,26075,v12816,26328,27333,27321,27325,27361,27334,27322,v12817,27335,27316,27309,27486,27593,27659,28679,v12818,28673,28677,28692,28686,v12819,28667,28710,28668,28663,28682,v12820,29183,29177,29187,29181,29558,29880,29888,29877,29889,29886,29878,29883,29890,29972,29971,
30300,30308,30297,30288,30291,30295,30298,30374,30397,30444,30658,30650,30988,v12821,30985,30992,30994,30993,31149,31148,31327,31772,31785,31769,31776,31775,31789,31773,31782,31784,31778,31781,31792,32348,32336,32342,32355,32344,32354,32351,32337,32352,32343,32339,32693,32691,v12822,32885,v12823,33232,33375,33374,34228,34246,34240,34243,34242,34227,34229,34237,34247,34244,34239,34251,34254,34248,34245,34225,34230,34258,34340,34232,34231,34238,34409,34791,34790,34786,34779,34795,34794,34789,34783,
34803,34788,34772,34780,34771,34797,34776,34787,34775,34777,34817,34804,34792,34781,35155,35147,35151,35148,35142,v12824,35145,35626,35623,35619,35635,35632,35637,35655,35631,35644,35646,35633,35621,35639,35622,35638,35630,35620,35643,35645,35642,35906,35957,35993,35992,35991,36094,36100,36098,36096,36444,36450,36448,36439,36438,36446,36453,36455,36443,36442,36449,36445,36457,36436,v12825,36683,37160,v12826,37182,37288,37285,37287,37295,37290,37813,37772,37778,37815,37787,37789,37769,37799,37774,
37802,37790,37798,37781,37768],v23693=[37785,37791,37760,37773,37809,37777,37810,37796,37800,37812,37795,v12827,38353,38579,38615,38618,24002,38623,38616,38621,38691,38690,38693,38828,38830,38824,38827,38820,38826,38818,38821,38871,38873,38870,38872,38906,v12828,39096,39233,39228,39226,39439,39435,39433,39437,39428,39441,39434,39429,39431,39430,39616,39644,39688,v12829,39721,39733,39754,39756,39755,39879,39878,39875,39871,39873,39861,39864,39891,39862,39876,39865,39869,40284,40275,40271,40266,40283,
40267,40281,40278,40268,40279,40274,40276,40287,40280,40282,40590,40588,40671,40705,40704,v12830,40741,40747,40746,40745,40744,40780,40789,v12831,21142,21239,21428,22187,22189,v12832,22186,22188,22746,22749,22747,22802,v12833,24003,24176,24511,25083,25863,25872,25869,25865,25868,25870,25988,26078,26077,26334,27367,27360,27340,27345,27353,27339,27359,27356,27344,27371,27343,27341,27358,27488,27568,27660,28697,28711,28704,28694,28715,v12834,28713,28695,28708,28700,29196,29194,29191,29186,29189,v12835,
29348,29347,29345,29899,29893,29879,29891,29974,30304,v12836,30660,30705,31005,31003,31009,31004,30999,31006,31152,v12837,31795,31804,31801,31788,31803,31980,31978,32374,32373,32376,32368,32375,32367,32378,32370,32372,32360,32587,32586,32643,32646,32695,v12838,32888,33239,33237,33291,33380,33377,33379,34283,34289,34285,34265,34273,34280,34266,34263,34284,34290,34296,34264,34271,34275,34268,34257,34288,34278,34287,34270,34274,34816,34810,34819,v12839,34825,34828,34827,34822,34812,34824,34815,34826,
34818,35170,v12840,35159,35169,35164,35160,35165,35161,35208,35255,35254,35318,35664,35656,35658,35648,35667,35670,35668,35659,35669,35665,35650,35666,35671,35907,35959,35958,35994,v12841,36105,36268,36266,36269,36267,36461,36472,36467,36458,36463,36475,36546,36690,36689,v12842,36691,36788,37184,37183,37296,37293,37854,37831,37839,37826,37850,37840,37881,37868,37836,37849,37801,37862,37834,37844,37870,37859,37845,37828,37838,37824,37842,37797,37863,38269,v12843,38625,38697,v12844,38696,38694,38835,
38839,38838,v12845,39004,39001,39005,38999,39103,39101,39099,39102,39240,39239,39235,v12846,39450,39445,39461,39453,39460,39451,39458,39456,39463,39459,39454,39452,39444,39618,39691,39690,39694,39692,39735,v12847,39904,39902,39908,39910,39906,39920,39892,39895,39916,39900,39897,39909,39893,39905,39898,40311,40321,40330,40324,40328,40305,40320,40312,40326,v12848,40317,40299,v12849,40304,40297,40325,40307,40315,40322,40303,40313,40319,40327,40296,40596,40593,40640,40700,40749,v12850,40781,v12851,21303,
22194,22197,22195,22755,23365,v12852,v12853,v12854,25081,25879,25878,25877,25875,26079,26344,v12855,27379,27376,27370,27368,27385,27377,v12856,28732,28725,28719,28727,28724,28721,28738,28728,28735,28730,28729,28714,28736,28731,28723,28737,v12857,29352,29565,29564,29882,30379,30378,30398,30445,30668,v12858,30669,30706,31013,31011,v12859,31012,31017,31154,31342,v12860,31479,31817,31816,31818,31815,31813,31982,32379,32382,32385,32384,32698,32767,32889,33243,33241,v12861,34338,34303,34305,34302,34331,
34304,34294,34308,34313,34309,34316,34301,34841,v12862],v23695=[34839,34835,34838,35171,35174,35257,35319,35680,35690,35677,35688,35683,35685,35687,35693,36270,36486,36488,36484,36697,v12863,36693,36696,36698,37005,37187,37185,37303,37301,v12864,37899,37907,37883,37920,37903,37908,37886,37909,37904,37928,37913,37901,37877,37888,37879,37895,37902,37910,37906,37882,37897,37880,37948,37898,37887,37884,37900,37878,37905,37894,38366,38368,38367,v12865,38841,38843,v12866,39008,v12867,39007,v12868,39248,
39246,39257,39244,39243,39251,39474,39476,39473,39468,39466,39478,39465,39470,39480,39469,39623,39626,39622,39696,39698,39697,39947,39944,39927,39941,39954,39928,4E4,39943,39950,39942,39959,39956,39945,40351,40345,40356,40349,40338,40344,40336,40347,40352,40340,40348,40362,40343,40353,40346,40354,40360,40350,40355,40383,40361,40342,v12869,40601,40603,40602,40677,40676,40679,40678,40752,40750,40795,40800,40798,40797,40793,40849,20794,20793,21144,21143,22211,v12870,23368,23367,24011,24015,24305,25085,
25883,27394,27388,27395,27384,27392,v12871,28746,v12872,v12873,29213,29210,29209,29566,29975,30314,30672,31021,31025,31023,31828,31827,31986,32394,v12874,32392,32395,32390,32397,32589,32699,32816,33245,34328,34346,34342,34335,34339,34332,34329,34343,34350,34337,34336,34345,34334,34341,34857,34845,34843,34848,34852,34844,34859,34890,35181,35177,35182,35179,35322,35705,35704,35653,v12875,36112,36116,36271,36494,36492,36702,36699,36701,37190,v12876,37305,37951,37947,37942,37929,37949,37936,37945,37930,
37943,37932,37952,37937,38373,38372,38371,38709,38714,38847,38881,39012,39113,39110,39104,39256,39254,39481,39485,39494,39492,39490,39489,39482,39487,39629,39701,v12877,39702,39738,39762,39979,39965,39964,39980,39971,v12878,39972,39969,40375,40374,40380,40385,40391,40394,40399,40382,40389,40387,40379,40373,40398,v12879,40364,40392,40369,40365,40396,40371,40397,40370,40570,40604,40683,40686,40685,40731,40728,40730,40753,40782,40805,40804,40850,20153,22214,22213,22219,22897,v12880,24021,24017,24306,
25889,25888,25894,25890,27403,v12881,27661,v12882,28754,v12883,29353,29567,29912,29909,29913,29911,30317,30381,31029,31156,v12884,31831,31836,31833,31835,31834,31988,31985,32401,32591,32647,33246,33387,v12885,34355,34348,34354,34358,34860,34856,34854,34858,34853,35185,35263,35262,35323,35710,35716,35714,35718,35717,35711,36117,36501,36500,36506,36498,36496,v12886,36704,36706,37191,37964,37968,v12887,37967,37959,37957,v12888,37958,38719,38883,39018,39017,39115,39252,39259,39502,v12889,39500,39503,
39496,39498,39497,39506,39504,39632,39705,39723,39739,39766,39765,40006,40008,39999,40004,39993,39987,40001,39996,39991,39988,39986,39997,39990,40411,40402,40414,40410,40395,40400,40412,40401,40415,40425,40409,40408,40406,40437,40405,40413,40630,40688,40757,40755,40754,40770,40811,40853,40866,20797,21145,22760,22759,22898,23373,24024,34863,24399,25089,v12890,25897,25893,26006,26347,v12891,27407,27594,28763,28762,29218,29570,29569,29571,30320,30676,31847,31846,32405,33388,34362,34368,34361,34364,34353,
34363,34366,34864,34866,34862,34867,35190,35188,35187,35326,35724,35726],v23697=[35723,35720,35909,36121,36504,36708,36707,37308,37986,37973,37981,37975,37982,v12892,38912,39510,39513,v12893,40018,40024,40016,40010,40013,40011,40021,40025,40012,40014,40443,40439,40431,40419,40427,40440,40420,40438,40417,40430,40422,40434,v12894,40418,40428,40436,40435,40424,40429,40642,40656,v12895,40710,40732,40760,40759,40758,40771,40783,40817,40816,v12896,22227,22221,23374,23661,25901,v12897,27411,28767,28769,
28765,28768,29219,29915,29925,30677,31032,31159,31158,31850,32407,32649,33389,34371,34872,34871,34869,34891,v12898,v12899,36509,37310,37309,37314,37995,v12900,38629,38726,38723,38727,38855,38885,39518,39637,39769,40035,40039,40038,40034,40030,40032,40450,40446,40455,40451,40454,40453,v12901,40457,40447,40445,40452,40608,40734,40774,v12902,22228,25902,26040,v12903,27415,27418,28770,29222,29354,v12904,31033,31849,31851,31990,32410,32408,32411,32409,v12905,v12906,v12907,35196,35195,35327,v12908,36517,
36516,36515,37998,37997,37999,38001,38003,38729,39026,39263,40040,40046,40045,40459,40461,40464,40463,40466,40465,40609,40693,40713,40775,40824,40827,40826,40825,22302,28774,31855,34876,36274,36518,37315,38004,38008,38006,38005,39520,v12909,40052,40051,40049,40053,40468,40467,40694,40714,40868,28776,28773,31991,34410,34878,34877,34879,35742,35996,36521,36553,38731,v12910,39116,39265,39339,39524,v12911,39716,40469,40471,40776,25095,27422,29223,34380,36520,38018,v12912,39529,39528,40473,34379,35743,
38019,40057,40631,30325,39531,40058,40477,v12913,29225,40612,40830,40777,40856,v12914,65075,0,65076,65103,v12915,v12916,v12917,v12918,v12919,v12920,0,v12921,v12922,v12923,v12924,v12925,v12926,v12927,v12928,v12929,v12930,v12931,v12932,v12933,v12934,v12935,v12936,v12937,v12938,v12939,v12940,v12941,v12942,v12943,v12944,v12945,v12946,v12947,v12948,v12949,v12950,v12951,v12952,v12953,v12954,v12955,v12956,v12957,v12958,v12959,v12960,v12961,v12962,v12963,v12964,v12965,v12966,v12967,v12968,v12969,v12970,v12971,
v12972,v12973,v12974,v12975,v12976,v12977,v12978,v12979,v12980,v12981,v12982,v12983,v12984,v12985,v12986,v12987,v12988,v12989,v12990,v12991,v12992,v12993,v12994,v12995,v12996,v12997,v12998,v12999,v13000,v13001,v13002,v13003,v13004,v13005,v13006,v13007,v13008,v13009,v13010,v13011,v13012,v13013,v13014,v13015,v13016,v13017,v13018,v13019,v13020,v13021,v13022,v13023,v13024,v13025,v13026,v13027,v13028,v13029,v13030,v13031,v13032,v13033,v13034,v13035,v13036,v13037,v13038,v13039,v13040,v13041,v13042,v13043,
v13044,v13045,v13046,v13047,v13048,v13049,v13050,v13051,v13052,v13053,v13054,v13055,v13056,v13057,v13058,v13059,v13060,v13061,v13062,v13063,v13064,v13065,v13066,v13067,v13068,v13069,v13070,v13071,v13072,v13073,v13074,v13075,v13076,v13077,v13078,v13079,v13080,v13081,v13082,v13083,v13084,v13085,v13086,v13087,v13088,v13089,v13090,v13091,v13092,v13093,v13094,v13095,v13096,v13097,v13098,v13099,v13100,v13101,v13102,v13103,v13104,v13105,v13106,v13107,v13108,v13109,v13110,v13111,v13112,v13113,v13114,v13115,
v13116,v13117,v13118,v13119,v13120,v13121,v13122,v13123,v13124,v13125,v13126,v13127,v13128,v13129,v13130,v13131,v13132,v13133,v13134,v13135,v13136,v13137,v13138,v13139,v13140,v13141,v13142,v13143,v13144,v13145,v13146,v13147,v13148,v13149,v13150,v13151,v13152,v13153,v13154,v13155,v13156,v13157,v13158,v13159,v13160,v13161],v23699=[v13162,v13163,v13164,v13165,v13166,v13167,v13168,v13169,v13170,v13171,63467,v13172,v13173,v13174,v13175,v13176,v13177,v13178,v13179,v13180,v13181,v13182,30849,v13183,35023,
22715,24658,31911,23290,9556,9574,9559,9568,9580,9571,9562,9577,9565,9554,9572,9557,v13184,9560,9575,9563,9555,9573,9558,9567,9579,9570,9561,9576,9564,9553,v13185,9619,v13186,v13187,v13188,v13189,v13190,v13191,v13192,v13193,v13194,v13195,v13196,v13197,v13198,v13199,v13200,v13201,v13202,v13203,v13204,v13205,v13206,v13207,v13208,v13209,v13210,v13211,v13212,v13213,v13214,v13215,v13216,v13217,v13218,v13219,v13220,v13221,v13222,v13223,v13224,v13225,v13226,0,v13227,0,v13228,v13229,0,v13230,v13231,v13232,
v13233,v13234,v13235,v13236,v13237,v13238,v13239,0,v13240,v13241,v13242,v13243,v13244,v13245,v13246,v13247,v13248,v13249,v13250,32214,v13251,v13252,v13253,v13254,v13255,v13256,v13257,v13258,0,v13259,v13260,v13261,0,v13262,v13263,v13264,v13265,v13266,v13267,v13268,v13269,v13270,v13271,v13272,v13273,v13274,v13275,v13276,v13277,v13278,v13279,v13280,0,v13281,v13282,0,v13283,v13284,v13285,v13286,v13287,v13288,v13289,v13290,v13291,v13292,v13293,v13294,v13295,v13296,v13297,v13298,v13299,v13300,v13301,v13302,
v13303,v13304,v13305,v13306,v13307,v13308,v13309,v13310,v13311,v13312,v13313,v13314,v13315,v13316,v13317,0,v13318,v13319,v13320,v13321,v13322,v13323,v13324,v13325,v13326,v13327,v13328,v13329,v13330,v13331,v13332,v13333,v13334,v13335,v13336,v13337,v13338,v13339,v13340,v13341,v13342,v13343,v13344,v13345,v13346,v13347,v13348,0,v13349,v13350,v13351,v13352,v13353,v13354,v13355,v13356,v13357,v13358,v13359,v13360,v13361,v13362,0,v13363,v13364,v13365,v13366,0,v13367,v13368,v13369,v13370,v13371,v13372,v13373,
v13374,v13375,v13376,0,v13377,v13378,v13379,v13380,v13381,v13382,v13383,v13384,v13385,v13386,v13387,v13388,v13389,v13390,v13391,v13392,v13393,v13394,v13395,v13396,0,v13397,v13398,v13399,v13400,v13401,v13402,v13403,v13404,v13405,v13406,v13407,v13408,v13409,v13410,v13411,v13412,v13413,v13414,v13415,v13416,v13417,v13418,v13419,v13420,v13421,v13422,v13423,v13424,v13425,v13426,v13427,v13428,v13429,v13430,v13431,v13432,v13433,v13434,v13435,v13436,v13437,v13438,v13439,v13440,v13441,0,v13442,v13443,v13444,
v13445,v13446,v13447,v13448,v13449,v13450,v13451,v13452,v13453,v13454,v13455,v13456,v13457,v13458,v13459,v13460,v13461,v13462,v13463,v13464,v13465,v13466,0,v13467,v13468,v13469,v13470,v13471,v13472,v13473,v13474,v13475,v13476,v13477,v13478,v13479,v13480,v13481,v13482,v13483,v13484,v13485,v13486,v13487,0,v13488,v13489,v13490,v13491,v13492,v13493,0,v13494,v13495,v13496,v13497,v13498,v13499,v13500,v13501,v13502,v13503,v13504,v13505,v13506,v13507,0,v13508,v13509,v13510,v13511,v13512,v13513,v13514,v13515,
v13516,v13517,v13518,v13519,v13520,v13521,v13522,v13523,v13524,v13525,v13526,v13527,v13528,v13529,v13530,v13531,v13532,v13533,v13534,v13535,v13536,v13537,v13538,v13539,v13540,v13541,v13542,v13543,v13544,v13545,v13546,v13547,v13548,v13549,v13550,v13551,v13552,v13553,v13554,v13555,58541,v13556,v13557,v13558,v13559,v13560,v13561,v13562,v13563,v13564,v13565,v13566,v13567,v13568,v13569,v13570,v13571,v13572,v13573,v13574,v13575,v13576,v13577,v13578,0,v13579,v13580,v13581,v13582,v13583,v13584,v13585,v13586,
v13587,v13588,v13589,v13590,v13591,v13592,v13593,v13594,v13595,v13596,v13597,v13598,0,v13599,v13600,v13601,v13602,v13603,v13604,v13605],v23701=[v13606,v13607,v13608,v13609,v13610,v13611,v13612,v13613,v13614,v13615,v13616,v13617,v13618,v13619,v13620,v13621,v13622,v13623,v13624,v13625,v13626,v13627,v13628,v13629,v13630,v13631,v13632,v13633,v13634,v13635,v13636,v13637,v13638,v13639,v13640,v13641,v13642,v13643,v13644,v13645,v13646,v13647,v13648,v13649,v13650,v13651,v13652,v13653,v13654,v13655,v13656,
v13657,v13658,v13659,v13660,v13661,v13662,v13663,v13664,v13665,v13666,v13667,v13668,v13669,v13670,v13671,v13672,v13673,v13674,v13675,v13676,v13677,v13678,v13679,v13680,v13681,v13682,v13683,v13684,v13685,v13686,v13687,v13688,v13689,v13690,v13691,v13692,v13693,v13694,v13695,v13696,v13697,v13698,v13699,v13700,0,v13701,v13702,v13703,v13704,v13705,v13706,v13707,v13708,0,v13709,v13710,v13711,v13712,v13713,v13714,v13715,v13716,v13717,v13718,v13719,v13720,v13721,v13722,v13723,v13724,v13725,v13726,v13727,
v13728,v13729,v13730,v13731,v13732,v13733,v13734,v13735,v13736,v13737,v13738,v13739,v13740,v13741,v13742,v13743,v13744,v13745,v13746,v13747,v13748,v13749,v13750,v13751,v13752,v13753,v13754,v13755,v13756,v13757,v13758,v13759,v13760,v13761,v13762,v13763,v13764,v13765,v13766,0,v13767,v13768,v13769,v13770,v13771,v13772,v13773,v13774,v13775,v13776,v13777,v13778,v13779,v13780,v13781,v13782,v13783,v13784,v13785,v13786,v13787,v13788,v13789,v13790,v13791,v13792,v13793,v13794,v13795,v13796,v13797,0,v13798,
v13799,v13800,v13801,v13802,v13803,v13804,v13805,0,v13806,v13807,v13808,v13809,v13810,v13811,v13812,v13813,v13814,v13815,v13816,v13817,v13818,v13819,v13820,v13821,v13822,v13823,v13824,v13825,v13826,v13827,v13828,v13829,v13830,v13831,v13832,v13833,v13834,v13835,v13836,v13837,v13838,v13839,v13840,v13841,v13842,v13843,v13844,v13845,v13846,v13847,v13848,v13849,v13850,v13851,v13852,v13853,v13854,v13855,v13856,v13857,0,v13858,v13859,v13860,v13861,v13862,v13863,v13864,v13865,0,v13866,v13867,v13868,v13869,
v13870,v13871,v13872,v13873,v13874,v13875,v13876,v13877,v13878,v13879,v13880,v13881,v13882,v13883,v13884,v13885,v13886,v13887,v13888,v13889,v13890,v13891,v13892,v13893,v13894,v13895,v13896,v13897,v13898,v13899,v13900,v13901,v13902,v13903,v13904,v13905,v13906,v13907,v13908,v13909,v13910,v13911,v13912,v13913,v13914,v13915,v13916,v13917,v13918,v13919,v13920,v13921,v13922,v13923,v13924,v13925,v13926,v13927,v13928,v13929,v13930,v13931,v13932,v13933,v13934,v13935,v13936,v13937,v13938,v13939,v13940,v13941,
v13942,v13943,v13944,v13945,v13946,v13947,v13948,v13949,v13950,v13951,v13952,v13953,v13954,v13955,v13956,v13957,v13958,v13959,v13960,v13961,v13962,v13963,v13964,v13965,v13966,v13967,v13968,v13969,v13970,v13971,v13972,v13973,v13974,v13975,v13976,v13977,v13978,v13979,v13980,v13981,v13982,v13983,v13984,v13985,v13986,v13987,v13988,v13989,v13990,v13991,v13992,v13993,v13994,v13995,v13996,v13997,v13998,v13999,v14000,v14001,v14002,v14003,v14004,v14005,v14006,v14007,v14008,v14009,v14010,v14011,v14012,v14013,
v14014,v14015,v14016,v14017,v14018,v14019,v14020,v14021,v14022,v14023,v14024,v14025,v14026,v14027,v14028,v14029,v14030,v14031,v14032,v14033,v14034,v14035,v14036,v14037,v14038,0,v14039,v14040,v14041,v14042,v14043,v14044,v14045,v14046,v14047,v14048,v14049,v14050,v14051,v14052,v14053,v14054,v14055,v14056,v14057,v14058,v14059,v14060,v14061,v14062,v14063,v14064,v14065,0,v14066,v14067,v14068,v14069,v14070,v14071,v14072,v14073,v14074,v14075,v14076,v14077,v14078,v14079,v14080,v14081,v14082,v14083,v14084,
v14085,v14086,v14087,v14088,v14089,v14090,v14091,v14092,v14093,v14094,v14095,v14096],v23703=[v14097,v14098,v14099,v14100,v14101,v14102,v14103,v14104,v14105,v14106,v14107,v14108,v14109,v14110,v14111,v14112,v14113,v14114,0,v14115,v14116,v14117,v14118,v14119,v14120,v14121,v14122,v14123,v14124,v14125,v14126,v14127,v14128,v14129,v14130,v14131,v14132,v14133,v14134,v14135,v14136,v14137,v14138,v14139,v14140,v14141,v14142,v14143,v14144,v14145,v14146,v14147,v14148,v14149,v14150,v14151,v14152,v14153,v14154,
v14155,v14156,v14157,v14158,v14159,v14160,0,0,v14161,v14162,v14163,v14164,v14165,v14166,v14167,v14168,v14169,v14170,v14171,v14172,v14173,v14174,v14175,v14176,v14177,v14178,v14179,v14180,v14181,v14182,v14183,v14184,v14185,v14186,v14187,v14188,v14189,v14190,v14191,v14192,v14193,v14194,v14195,v14196,v14197,v14198,v14199,v14200,v14201,v14202,v14203,v14204,v14205,v14206,v14207,v14208,v14209,v14210,v14211,v14212,v14213,v14214,v14215,v14216,v14217,v14218,v14219,v14220,v14221,v14222,v14223,v14224,v14225,
v14226,v14227,v14228,v14229,v14230,v14231,v14232,v14233,v14234,v14235,v14236,v14237,v14238,v14239,v14240,0,v14241,v14242,v14243,v14244,v14245,v14246,v14247,v14248,v14249,v14250,v14251,v14252,v14253,v14254,v14255,v14256,v14257,v14258,v14259,v14260,v14261,v14262,v14263,v14264,v14265,v14266,v14267,v14268,v14269,v14270,v14271,v14272,v14273,v14274,v14275,v14276,v14277,v14278,v14279,v14280,v14281,v14282,v14283,v14284,v14285,v14286,v14287,v14288,v14289,v14290,v14291,v14292,v14293,v14294,v14295,v14296,v14297,
v14298,v14299,v14300,v14301,v14302,v14303,v14304,v14305,v14306,v14307,v14308,v14309,v14310,v14311,v14312,v14313,v14314,v14315,v14316,v14317,v14318,v14319,v14320,v14321,v14322,v14323,v14324,v14325,v14326,0,v14327,v14328,v14329,v14330,v14331,v14332,v14333,v14334,v14335,v14336,v14337,v14338,v14339,v14340,v14341,v14342,v14343,v14344,v14345,v14346,v14347,v14348,v14349,v14350,v14351,v14352,v14353,v14354,v14355,v14356,v14357,v14358,v14359,v14360,v14361,v14362,v14363,v14364,v14365,v14366,v14367,0,v14368,
v14369,v14370,v14371,v14372,v14373,v14374,v14375,v14376,v14377,v14378,v14379,0,v14380,v14381,v14382,v14383,v14384,v14385,v14386,v14387,v14388,v14389,v14390,v14391,v14392,v14393,v14394,v14395,v14396,v14397,v14398,v14399,v14400,v14401,v14402,v14403,0,v14404,v14405,v14406,v14407,v14408,v14409,v14410,v14411,v14412,v14413,v14414,v14415,v14416,v14417,v14418,v14419,v14420,v14421,v14422,v14423,v14424,v14425,v14426,v14427,v14428,v14429,v14430,v14431,v14432,v14433,v14434,v14435,v14436,v14437,v14438,v14439,
v14440,v14441,v14442,v14443,v14444,v14445,v14446,v14447,v14448,v14449,v14450,v14451,v14452,v14453,v14454,v14455,v14456,v14457,v14458,v14459,v14460,v14461,v14462,v14463,v14464,v14465,v14466,v14467,v14468,v14469,v14470,v14471,v14472,v14473,v14474,v14475,v14476,v14477,v14478,v14479,v14480,v14481,v14482,v14483,v14484,v14485,v14486,v14487,v14488,v14489,v14490,v14491,v14492,v14493,v14494,v14495,v14496,v14497,v14498,0,v14499,v14500,v14501,v14502,v14503,v14504,v14505,v14506,v14507,v14508,v14509,v14510,v14511,
v14512,0,v14513,v14514,v14515,v14516,v14517,v14518,v14519,v14520,v14521,v14522,v14523,v14524,v14525,v14526,v14527,v14528,v14529,v14530,v14531,v14532,v14533,v14534,v14535,v14536,v14537,v14538,v14539,v14540,v14541,v14542,v14543,v14544,v14545,v14546,v14547,v14548,v14549,v14550,v14551,v14552,v14553,v14554,v14555,v14556,v14557,v14558,v14559,v14560,v14561,v14562,v14563,v14564,v14565,v14566,v14567,v14568,v14569,v14570,v14571,v14572,v14573,v14574,v14575,v14576,v14577,v14578,v14579,v14580,v14581,v14582,v14583,
v14584,v14585,v14586],v23705=[v14587,v14588,v14589,v14590,v14591,v14592,v14593,v14594,v14595,v14596,v14597,v14598,v14599,v14600,v14601,v14602,v14603,v14604,v14605,v14606,v14607,v14608,v14609,v14610,v14611,v14612,v14613,v14614,v14615,v14616,v14617,v14618,v14619,v14620,v14621,v14622,v14623,v14624,v14625,v14626,v14627,v14628,v14629,v14630,v14631,v14632,v14633,v14634,v14635,v14636,v14637,v14638,v14639,v14640,v14641,v14642,v14643,v14644,v14645,v14646,v14647,v14648,v14649,v14650,v14651,v14652,v14653,v14654,
v14655,v14656,v14657,v14658,v14659,v14660,v14661,v14662,v14663,v14664,v14665,v14666,v14667,v14668,v14669,v14670,v14671,v14672,v14673,v14674,v14675,0,0,v14676,v14677,v14678,v14679,v14680,v14681,v14682,v14683,v14684,v14685,v14686,v14687,v14688,v14689,v14690,v14691,v14692,v14693,v14694,v14695,v14696,v14697,v14698,v14699,v14700,v14701,v14702,v14703,v14704,v14705,v14706,v14707,v14708,v14709,v14710,v14711,v14712,v14713,v14714,v14715,v14716,0,v14717,v14718,v14719,v14720,v14721,v14722,v14723,v14724,v14725,
v14726,v14727,v14728,v14729,v14730,v14731,v14732,v14733,v14734,v14735,v14736,v14737,v14738,v14739,v14740,v14741,v14742,v14743,v14744,v14745,v14746,v14747,v14748,v14749,v14750,v14751,v14752,v14753,v14754,v14755,v14756,v14757,v14758,v14759,v14760,v14761,v14762,v14763,v14764,v14765,v14766,v14767,v14768,v14769,v14770,v14771,v14772,v14773,v14774,v14775,v14776,v14777,0,v14778,v14779,v14780,v14781,v14782,v14783,v14784,v14785,v14786,v14787,0,v14788,0,0,v14789,v14790,v14791,v14792,v14793,v14794,v14795,v14796,
v14797,v14798,v14799,v14800,v14801,v14802,v14803,v14804,v14805,v14806,v14807,v14808,v14809,v14810,v14811,v14812,v14813,v14814,0,v14815,v14816,v14817,v14818,v14819,v14820,v14821,v14822,v14823,v14824,v14825,v14826,v14827,v14828,v14829,v14830,v14831,0,v14832,v14833,v14834,0,v14835,v14836,v14837,v14838,v14839,v14840,0,v14841,v14842,v14843,v14844,v14845,v14846,v14847,v14848,v14849,v14850,v14851,0,v14852,v14853,v14854,v14855,v14856,v14857,v14858,v14859,0,v14860,v14861,v14862,0,v14863,v14864,v14865,v14866,
v14867,v14868,v14869,v14870,0,v14871,v14872,v14873,v14874,v14875,v14876,v14877,v14878,v14879,v14880,v14881,v14882,v14883,v14884,v14885,v14886,v14887,v14888,v14889,v14890,v14891,v14892,0,0,v14893,v14894,v14895,v14896,v14897,v14898,v14899,v14900,v14901,v14902,v14903,v14904,v14905,v14906,0,v14907,v14908,v14909,v14910,v14911,v14912,v14913,v14914,v14915,v14916,v14917,v14918,v14919,v14920,v14921,v14922,v14923,v14924,v14925,v14926,v14927,v14928,v14929,v14930,v14931,v14932,v14933,v14934,v14935,v14936,v14937,
v14938,v14939,v14940,v14941,v14942,0,v14943,v14944,v14945,v14946,v14947,0,v14948,v14949,v14950,v14951,v14952,v14953,v14954,v14955,v14956,v14957,v14958,0,v14959,v14960,v14961,v14962,v14963,v14964,v14965,v14966,v14967,0,v14968,v14969,v14970,v14971,v14972,v14973,v14974,v14975,v14976,v14977,v14978,v14979,v14980,v14981,v14982,v14983,v14984,v14985,v14986,v14987,v14988,v14989,v14990,v14991,v14992,v14993,v14994,v14995,v14996,v14997,v14998,v14999,v15000,v15001,v15002,v15003,v15004,v15005,v15006,v15007,v15008,
v15009,v15010,v15011,v15012,v15013,v15014,v15015,v15016,v15017,0,v15018,v15019,v15020,v15021,v15022,v15023,v15024,v15025,v15026,v15027,v15028,v15029,v15030,v15031,v15032,v15033,v15034,v15035,v15036,v15037,v15038,v15039,v15040,v15041,v15042,v15043,v15044,0,v15045,v15046,v15047,v15048,v15049,v15050,v15051,v15052,v15053,v15054,v15055,v15056,v15057,v15058,v15059,v15060,v15061,v15062],v23707=[v15063,0,v15064,60715,v15065,v15066,v15067,v15068,v15069,v15070,v15071,v15072,v15073,v15074,v15075,60739,v15076,
v15077,v15078,v15079,v15080,0,v15081,v15082,v15083,v15084,v15085,v15086,v15087,v15088,v15089,v15090,v15091,v15092,v15093,v15094,v15095,v15096,v15097,v15098,v15099,v15100,v15101,v15102,v15103,v15104,v15105,v15106,v15107,0,v15108,v15109,v15110,60787,v15111,v15112,v15113,v15114,0,v15115,v15116,v15117,v15118,v15119,v15120,v15121,v15122,v15123,v15124,v15125,60812,v15126,v15127,v15128,v15129,v15130,v15131,v15132,v15133,v15134,v15135,v15136,v15137,v15138,v15139,v15140,v15141,v15142,0,v15143,v15144,v15145,
v15146,v15147,0,39982,v15148,v15149,v15150,v15151,v15152,v15153,v15154,v15155,v15156,v15157,v15158,v15159,v15160,v15161,v15162,v15163,v15164,v15165,v15166,v15167,v15168,v15169,v15170,v15171,v15172,v15173,v15174,v15175,v15176,v15177,v15178,v15179,v15180,60873,v15181,v15182,v15183,60877,v15184,v15185,v15186,v15187,v15188,v15189,v15190,v15191,v15192,v15193,v15194,60892,v15195,v15196,v15197,v15198,v15199,v15200,60900,v15201,v15202,0,0,v15203,v15204,v15205,v15206,v15207,v15208,v15209,0,v15210,v15211,v15212,
0,v15213,60918,v15214,v15215,v15216,v15217,v15218,v15219,v15220,v15221,v15222,v15223,60930,v15224,v15225,v15226,60934,v15227,v15228,v15229,v15230,60939,v15231,v15232,v15233,v15234,v15235,v15236,v15237,v15238,v15239,v15240,v15241,v15242,v15243,v15244,v15245,v15246,v15247,v15248,v15249,v15250,v15251,v15252,v15253,v15254,v15255,v15256,v15257,v15258,v15259,v15260,v15261,v15262,60975,v15263,60978,v15264,v15265,60981,v15266,v15267,v15268,v15269,v15270,v15271,v15272,60989,0,v15273,v15274,v15275,v15276,v15277,
v15278,v15279,v15280,v15281,v15282,v15283,v15284,v15285,61005,v15286,v15287,v15288,v15289,0,v15290,v15291,v15292,v15293,v15294,v15295,v15296,v15297,v15298,61022,v15299,v15300,v15301,v15302,v15303,v15304,61030,v15305,61032,v15306,v15307,v15308,v15309,v15310,v15311,v15312,v15313,v15314,v15315,v15316,v15317,v15318,v15319,v15320,v15321,v15322,v15323,v15324,v15325,v15326,v15327,v15328,v15329,v15330,v15331,v15332,v15333,v15334,v15335,v15336,v15337,v15338,61068,v15339,0,v15340,v15341,v15342,v15343,v15344,
v15345,v15346,v15347,v15348,0,v15349,61082,v15350,0,v15351,v15352,v15353,v15354,v15355,v15356,v15357,v15358,v15359,v15360,v15361,v15362,v15363,v15364,v15365,v15366,v15367,v15368,v15369,v15370,v15371,v15372,v15373,v15374,v15375,v15376,v15377,v15378,v15379,v15380,v15381,v15382,v15383,0,v15384,v15385,v15386,v15387,v15388,v15389,20702,v15390,v15391,v15392,v15393,v15394,v15395,v15396,v15397,v15398,v15399,v15400,v15401,v15402,v15403,v15404,v15405,v15406,v15407,v15408,v15409,v15410,v15411,v15412,v15413,
v15414,v15415,v15416,v15417,v15418,v15419,v15420,v15421,0,0,v15422,v15423,v15424,v15425,v15426,v15427,v15428,v15429,v15430,v15431,v15432,v15433,v15434,v15435,v15436,v15437,v15438,v15439,0,v15440,v15441,v15442,v15443,v15444,v15445,v15446,0,v15447,v15448,v15449,v15450,v15451,v15452,v15453,v15454,v15455,v15456,v15457,v15458,v15459,v15460,v15461,0,v15462,v15463,v15464,v15465,v15466,v15467,v15468,v15469,v15470,v15471,v15472,v15473,v15474,v15475,v15476,v15477,v15478,v15479,v15480,v15481,v15482,v15483,v15484,
v15485,v15486,v15487,v15488,v15489,v15490,v15491,v15492,v15493,v15494,v15495,v15496,v15497,v15498,v15499,v15500,v15501,v15502,v15503,v15504,v15505,v15506,v15507,v15508,v15509,v15510,0,v15511,v15512,v15513,v15514,v15515,v15516],v23709=[v15517,v15518,v15519,v15520,0,v15521,v15522,v15523,v15524,v15525,v15526,v15527,v15528,v15529,v15530,v15531,v15532,v15533,v15534,v15535,v15536,v15537,v15538,v15539,v15540,v15541,v15542,v15543,v15544,v15545,v15546,0,v15547,v15548,v15549,v15550,v15551,v15552,v15553,v15554,
v15555,v15556,v15557,v15558,v15559,v15560,v15561,v15562,v15563,v15564,0,v15565,v15566,v15567,v15568,v15569,v15570,v15571,v15572,v15573,v15574,v15575,v15576,v15577,v15578,v15579,v15580,v15581,v15582,v15583,v15584,0,v15585,v15586,v15587,v15588,v15589,v15590,v15591,v15592,v15593,v15594,v15595,v15596,v15597,v15598,v15599,v15600,v15601,v15602,v15603,v15604,v15605,v15606,v15607,v15608,v15609,v15610,v15611,v15612,v15613,v15614,v15615,v15616,v15617,v15618,v15619,v15620,v15621,v15622,v15623,v15624,v15625,
v15626,v15627,v15628,v15629,v15630,v15631,v15632,v15633,v15634,v15635,v15636,v15637,v15638,v15639,v15640,0,57647,v15641,v15642,v15643,v15644,0,v15645,v15646,v15647,57656,v15648,v15649,v15650,v15651,v15652,v15653,v15654,v15655,v15656,v15657,v15658,v15659,v15660,v15661,v15662,v15663,v15664,v15665,v15666,v15667,v15668,v15669,v15670,v15671,v15672,v15673,v15674,v15675,v15676,v15677,v15678,v15679,v15680,v15681,v15682,v15683,v15684,v15685,v15686,v15687,v15688,0,0,v15689,v15690,v15691,v15692,v15693,v15694,
v15695,v15696,v15697,v15698,v15699,v15700,v15701,v15702,v15703,v15704,v15705,v15706,v15707,v15708,v15709,v15710,v15711,v15712,v15713,v15714,v15715,v15716,v15717,v15718,v15719,v15720,v15721,v15722,v15723,v15724,v15725,v15726,v15727,v15728,v15729,v15730,0,v15731,v15732,v15733,v15734,v15735,v15736,v15737,v15738,v15739,v15740,v15741,v15742,v15743,v15744,0,v15745,v15746,v15747,v15748,v15749,v15750,57771,v15751,v15752,v15753,v15754,v15755,v15756,v15757,v15758,v15759,v15760,v15761,v15762,v15763,v15764,0,
v15765,v15766,v15767,v15768,v15769,v15770,v15771,v15772,v15773,v15774,v15775,v15776,0,v15777,v15778,v15779,v15780,v15781,v15782,v15783,v15784,v15785,v15786,v15787,v15788,v15789,v15790,v15791,v15792,v15793,v15794,v15795,v15796,v15797,v15798,v15799,v15800,v15801,v15802,v15803,v15804,v15805,v15806,v15807,v15808,v15809,v15810,v15811,v15812,v15813,v15814,v15815,v15816,v15817,v15818,v15819,v15820,v15821,v15822,v15823,v15824,v15825,v15826,v15827,v15828,v15829,v15830,0,v15831,v15832,v15833,v15834,v15835,
v15836,v15837,v15838,v15839,v15840,v15841,v15842,v15843,v15844,v15845,v15846,v15847,v15848,v15849,v15850,v15851,v15852,v15853,v15854,v15855,v15856,v15857,v15858,v15859,v15860,v15861,v15862,v15863,v15864,v15865,v15866,v15867,v15868,v15869,v15870,v15871,v15872,0,0,v15873,v15874,0,v15875,v15876,v15877,v15878,v15879,v15880,v15881,v15882,v15883,v15884,v15885,v15886,v15887,v15888,v15889,v15890,v15891,v15892,v15893,v15894,v15895,v15896,v15897,v15898,v15899,v15900,v15901,v15902,v15903,v15904,v15905,v15906,
v15907,v15908,v15909,v15910,v15911,v15912,v15913,0,v15914,v15915,v15916,v15917,v15918,v15919,v15920,v15921,v15922,v15923,v15924,v15925,v15926,0,v15927,v15928,v15929,v15930,v15931,v15932,v15933,v15934,v15935,v15936,v15937,v15938,v15939,v15940,v15941,v15942,v15943,v15944,v15945,v15946,v15947,v15948,v15949,v15950,v15951,v15952,v15953,v15954,v15955,v15956,0,v15957,v15958,v15959,v15960,v15961,v15962,v15963,v15964,v15965,v15966,v15967,v15968,v15969,v15970,v15971,v15972,v15973,v15974,v15975,v15976,v15977,
v15978,v15979,v15980,v15981,v15982,v15983,0,v15984,v15985,v15986,v15987,v15988,v15989,v15990,v15991,v15992,v15993],v23711=[v15994,v15995,v15996,v15997,v15998,v15999,v16000,v16001,v16002,v16003,v16004,v16005,v16006,v16007,v16008,v16009,v16010,v16011,v16012,v16013,v16014,v16015,v16016,v16017,v16018,v16019,v16020,v16021,v16022,v16023,v16024,v16025,v16026,v16027,v16028,58067,v16029,v16030,v16031,v16032,v16033,v16034,v16035,v16036,v16037,v16038,v16039,v16040,v16041,v16042,v16043,v16044,v16045,v16046,v16047,
v16048,v16049,v16050,v16051,v16052,v16053,v16054,v16055,0,v16056,v16057,v16058,v16059,v16060,v16061,v16062,v16063,v16064,v16065,v16066,v16067,v16068,v16069,v16070,v16071,v16072,v16073,v16074,v16075,v16076,v16077,v16078,v16079,v16080,v16081,v16082,v16083,v16084,0,v16085,0,v16086,v16087,v16088,v16089,v16090,v16091,v16092,v16093,v16094,v16095,0,v16096,v16097,v16098,v16099,v16100,v16101,v16102,v16103,v16104,v16105,v16106,v16107,0,v16108,v16109,v16110,0,v16111,v16112,v16113,v16114,0,v16115,v16116,v16117,
v16118,v16119,v16120,v16121,v16122,v16123,v16124,v16125,v16126,v16127,0,v16128,v16129,v16130,0,v16131,0,v16132,v16133,0,v16134,0,v16135,0,v16136,v16137,v16138,v16139,v16140,v16141,v16142,0,v16143,v16144,0,v16145,v16146,v16147,v16148,v16149,0,v16150,v16151,v16152,v16153,0,v16154,0,v16155,0,v16156,v16157,v16158,v16159,v16160,v16161,v16162,v16163,v16164,v16165,v16166,v16167,v16168,0,v16169,v16170,v16171,0,0,v16172,v16173,v16174,v16175,v16176,v16177,v16178,v16179,0,0,v16180,v16181,v16182,v16183,v16184,
0,0,v16185,v16186,v16187,v16188,v16189,v16190,v16191,v16192,v16193,v16194,v16195,v16196,v16197,v16198,v16199,v16200,v16201,0,v16202,v16203,0,v16204,0,v16205,0,v16206,v16207,v16208,v16209,v16210,v16211,0,v16212,v16213,v16214,0,v16215,0,v16216,v16217,v16218,0,v16219,v16220,0,v16221,0,v16222,0,0,v16223,v16224,v16225,v16226,v16227,v16228,v16229,v16230,v16231,v16232,v16233,v16234,v16235,v16236,v16237,v16238,v16239,v16240,v16241,v16242,0,v16243,v16244,v16245,v16246,v16247,v16248,0,30336,v16249,v16250,v16251,
v16252,v16253,v16254,v16255,v16256,v16257,0,v16258,v16259,v16260,0,v16261,v16262,0,v16263,0,v16264,v16265,v16266,0,v16267,v16268,v16269,v16270,0,0,v16271,v16272,v16273,v16274,v16275,0,37818,v16276,v16277,v16278,0,v16279,v16280,0,v16281,v16282,8364,v16283,v16284,v16285,v16286,v16287,v16288,62217,v16289,v16290,v16291,v16292,v16293,62224,v16294,v16295,v16296,v16297,v16298,v16299,v16300,v16301,v16302,v16303,v16304,v16305,v16306,v16307,v16308,v16309,v16310,v16311,v16312,v16313,v16314,v16315,v16316,v16317,
v16318,v16319,v16320,v16321,v16322,v16323,v16324,v16325,v16326,v16327,v16328,v16329,v16330,v16331,v16332,v16333,v16334,v16335,v16336,v16337,v16338,v16339,v16340,v16341,v16342,v16343,v16344,v16345,v16346,v16347,v16348,v16349,v16350,v16351,v16352,v16353,v16354,v16355,v16356,v16357,v16358,v16359,v16360,v16361,v16362,v16363,v16364,v16365,v16366,v16367,v16368,v16369,v16370,v16371,v16372,v16373,v16374,v16375,v16376,v16377,v16378,v16379,v16380,v16381,v16382,v16383,v16384,v16385,v16386,v16387,v16388,v16389,
v16390,v16391,v16392,v16393,v16394,v16395,v16396,v16397,v16398,v16399,v16400,v16401,v16402,v16403,v16404,v16405,v16406,v16407,v16408,v16409,v16410,v16411,v16412,v16413,v16414,v16415,v16416,v16417,v16418,v16419,v16420,v16421,v16422,v16423,v16424,v16425,v16426,v16427,v16428,v16429,v16430,v16431,v16432,v16433,v16434,v16435,v16436,v16437],v23713=[v16438,v16439,v16440,v16441,v16442,v16443,v16444,v16445,v16446,v16447,v16448,v16449,v16450,v16451,v16452,v16453,v16454,v16455,v16456,v16457,v16458,v16459,v16460,
v16461,v16462,v16463,v16464,v16465,v16466,v16467,v16468,v16469,v16470,v16471,v16472,v16473,v16474,v16475,v16476,v16477,v16478,v16479,v16480,v16481,v16482,v16483,v16484,v16485,v16486,v16487,v16488,v16489,v16490,v16491,v16492,v16493,v16494,v16495,v16496,v16497,v16498,v16499,v16500,v16501,v16502,v16503,v16504,v16505,v16506,v16507,v16508,v16509,v16510,v16511,v16512,v16513,v16514,v16515,v16516,v16517,v16518,v16519,v16520,v16521,v16522,v16523,v16524,v16525,v16526,v16527,v16528,v16529,v16530,v16531,v16532,
v16533,v16534,v16535,v16536,v16537,v16538,v16539,v16540,v16541,v16542,v16543,v16544,v16545,v16546,v16547,v16548,v16549,v16550,v16551,v16552,v16553,v16554,v16555,v16556,v16557,v16558,v16559,v16560,v16561,v16562,v16563,v16564,v16565,v16566,v16567,v16568,v16569,v16570,v16571,v16572,v16573,v16574,v16575,v16576,v16577,v16578,v16579,v16580,v16581,v16582,v16583,v16584,v16585,v16586,v16587,v16588,v16589,v16590,v16591,v16592,v16593,v16594,v16595,v16596,v16597,v16598,v16599,v16600,v16601,v16602,v16603,v16604,
v16605,v16606,v16607,v16608,v16609,v16610,v16611,v16612,v16613,v16614,v16615,v16616,v16617,v16618,v16619,v16620,v16621,v16622,v16623,v16624,v16625,v16626,v16627,v16628,v16629,v16630,v16631,v16632,v16633,v16634,v16635,v16636,v16637,v16638,v16639,v16640,v16641,v16642,v16643,v16644,v16645,v16646,v16647,v16648,v16649,v16650,v16651,v16652,v16653,v16654,v16655,v16656,v16657,v16658,v16659,v16660,v16661,v16662,v16663,v16664,v16665,v16666,v16667,v16668,v16669,v16670,v16671,v16672,v16673,v16674,v16675,v16676,
v16677,v16678,v16679,v16680,v16681,v16682,v16683,v16684,v16685,v16686,v16687,v16688,v16689,v16690,v16691,v16692,v16693,v16694,v16695,v16696,v16697,v16698,v16699,v16700,v16701,v16702,v16703,v16704,v16705,v16706,v16707,v16708,v16709,v16710,v16711,v16712,v16713,v16714,v16715,v16716,v16717,v16718,v16719,v16720,v16721,v16722,v16723,v16724,v16725,v16726,v16727,v16728,v16729,v16730,v16731,v16732,v16733,v16734,v16735,v16736,v16737,v16738,v16739,v16740,v16741,v16742,v16743,v16744,v16745,v16746,v16747,v16748,
v16749,v16750,v16751,v16752,v16753,v16754,v16755,v16756,v16757,v16758,v16759,v16760,v16761,v16762,v16763,v16764,v16765,v16766,v16767,v16768,v16769,v16770,v16771,v16772,v16773,v16774,v16775,v16776,v16777,v16778,v16779,v16780,v16781,v16782,v16783,v16784,v16785,v16786,v16787,v16788,v16789,v16790,v16791,v16792,v16793,v16794,v16795,v16796,v16797,v16798,v16799,v16800,v16801,v16802,v16803,v16804,v16805,v16806,v16807,v16808,v16809,v16810,v16811,v16812,v16813,v16814,v16815,v16816,v16817,v16818,v16819,v16820,
v16821,v16822,v16823,v16824,v16825,v16826,v16827,v16828,v16829,v16830,v16831,v16832,v16833,v16834,v16835,v16836,v16837,v16838,v16839,v16840,v16841,v16842,v16843,v16844,v16845,v16846,v16847,v16848,v16849,v16850,v16851,v16852,v16853,v16854,v16855,v16856,v16857,v16858,v16859,v16860,v16861,v16862,v16863,v16864,v16865,v16866,v16867,v16868,v16869,v16870,v16871,v16872,v16873,v16874,v16875,v16876,v16877,v16878,v16879,v16880,v16881,v16882,v16883,v16884,v16885,v16886,v16887,v16888,v16889,v16890,v16891,v16892,
v16893,v16894,v16895,v16896,v16897,v16898,v16899,v16900,v16901,v16902,v16903,v16904,v16905,v16906,v16907,v16908,v16909,v16910,v16911,v16912,v16913,v16914,v16915,v16916,v16917,v16918,v16919,v16920,v16921,v16922,v16923,v16924,v16925,v16926,v16927,v16928,v16929,v16930,v16931,v16932,v16933,v16934,v16935,v16936,v16937],v23715=[v16938,v16939,v16940,v16941,v16942,v16943,v16944,v16945,v16946,v16947,v16948,v16949,v16950,v16951,v16952,v16953,v16954,v16955,v16956,v16957,v16958,v16959,v16960,v16961,v16962,v16963,
v16964,v16965,v16966,v16967,v16968,v16969,v16970,v16971,v16972,v16973,v16974,v16975,v16976,v16977,v16978,v16979,v16980,v16981,v16982,v16983,v16984,v16985,v16986,v16987,v16988,v16989,v16990,v16991,v16992,v16993,v16994,v16995,v16996,v16997,v16998,v16999,v17000,v17001,v17002,v17003,v17004,v17005,v17006,v17007,v17008,v17009,v17010,v17011,v17012,v17013,v17014,v17015,v17016,v17017,v17018,v17019,v17020,v17021,v17022,v17023,v17024,v17025,v17026,v17027,v17028,v17029,v17030,v17031,v17032,v17033,v17034,v17035,
v17036,v17037,v17038,v17039,v17040,v17041,v17042,v17043,v17044,v17045,v17046,v17047,v17048,v17049,v17050,v17051,v17052,v17053,v17054,v17055,v17056,v17057,v17058,v17059,v17060,v17061,v17062,v17063,v17064,v17065,v17066,v17067,v17068,v17069,v17070,v17071,v17072,v17073,v17074,v17075,v17076,v17077,v17078,v17079,v17080,v17081,v17082,v17083,v17084,v17085,v17086,v17087,v17088,v17089,v17090,v17091,v17092,v17093,v17094,v17095,v17096,v17097,v17098,v17099,v17100,v17101,v17102,v17103,v17104,v17105,v17106,v17107,
v17108,v17109,v17110,v17111,v17112,v17113,v17114,v17115,v17116,v17117,v17118,v17119,v17120,v17121,v17122,v17123,v17124,v17125,v17126,v17127,v17128,v17129,v17130,v17131,v17132,v17133,v17134,v17135,v17136,v17137,v17138,v17139,v17140,v17141,v17142,v17143,v17144,v17145,v17146,v17147,v17148,v17149,v17150,v17151,v17152,v17153,v17154,v17155,v17156,v17157,v17158,v17159,v17160,v17161,v17162,v17163,v17164,v17165,v17166,v17167,v17168,v17169,v17170,v17171,v17172,v17173,v17174,v17175,v17176,v17177,v17178,v17179,
v17180,v17181,v17182,v17183,v17184,v17185,v17186,v17187,v17188,v17189,v17190,v17191,v17192,v17193,v17194,v17195,v17196,v17197,v17198,v17199,v17200,v17201,v17202,v17203,v17204,v17205,v17206,v17207,v17208,v17209,v17210,v17211,v17212,v17213,v17214,v17215,v17216,v17217,v17218,v17219,v17220,v17221,v17222,v17223,v17224,v17225,v17226,v17227,v17228,v17229,v17230,v17231,v17232,v17233,v17234,v17235,v17236,v17237,v17238,v17239,v17240,v17241,v17242,v17243,v17244,v17245,v17246,v17247,v17248,v17249,v17250,v17251,
v17252,v17253,v17254,v17255,v17256,v17257,v17258,v17259,v17260,v17261,v17262,v17263,v17264,v17265,v17266,v17267,v17268,v17269,v17270,v17271,v17272,v17273,v17274,v17275,v17276,v17277,v17278,v17279,v17280,v17281,v17282,v17283,v17284,v17285,v17286,v17287,v17288,v17289,v17290,v17291,v17292,v17293,v17294,v17295,v17296,v17297,v17298,v17299,v17300,v17301,v17302,v17303,v17304,v17305,v17306,v17307,v17308,v17309,v17310,v17311,v17312,v17313,v17314,v17315,v17316,v17317,v17318,v17319,v17320,v17321,v17322,v17323,
v17324,v17325,v17326,v17327,v17328,v17329,v17330,v17331,v17332,v17333,v17334,v17335,v17336,v17337,v17338,v17339,v17340,v17341,v17342,v17343,v17344,v17345,v17346,v17347,v17348,v17349,v17350,v17351,v17352,v17353,v17354,v17355,v17356,v17357,v17358,v17359,v17360,v17361,v17362,v17363,v17364,v17365,v17366,v17367,v17368,v17369,v17370,v17371,v17372,v17373,v17374,v17375,v17376,v17377,v17378,v17379,v17380,v17381,v17382,v17383,v17384,v17385,v17386,v17387,v17388,v17389,v17390,v17391,v17392,v17393,v17394,v17395,
v17396,v17397,v17398,v17399,v17400,v17401,v17402,v17403,v17404,v17405,v17406,v17407,v17408,v17409,v17410,v17411,v17412,v17413,v17414,v17415,v17416,v17417,v17418,v17419,v17420,v17421,v17422,v17423,v17424,v17425,v17426,v17427,v17428,v17429,v17430,v17431,v17432,v17433,v17434,v17435,v17436,v17437],v23716=[v17438,v17439,v17440,v17441,v17442,v17443,v17444,v17445,v17446,v17447,v17448,v17449,v17450,v17451,v17452,v17453,v17454,v17455,v17456,v17457,v17458,v17459,v17460,v17461,v17462,62245,v17463,62247,v17464,
v17465,v17466,v17467,v17468,v17469,v17470,v17471,v17472,v17473,v17474,v17475,v17476,v17477,v17478,v17479,v17480,v17481,v17482,v17483,v17484,v17485,v17486,v17487,v17488,v17489,v17490,v17491,62276,v17492,62278,v17493,v17494,v17495,v17496,v17497,v17498,v17499,v17500,v17501,v17502,v17503,v17504,v17505,v17506,v17507,v17508,v17509,20539,28158,v17510,62842,v17511,34959,v17512,28791,23797,v17513,v17514,v17515,v17516,24866,v17517,36775,37366,29073,26393,29626,v17518,v17519,v17520,v17521,v17522,30948,29698,
20910,v17523,v17524,27235,v17525,v17526,34319,31274,v17527,v17528,38741,28749,21284,v17529,37876,30425,v17530,62884,30685,20131,20464,20668,20015,20247,62891,21556,32139,22674,22736,v17531,24210,24217,24514,v17532,25995,v17533,26905,27203,v17534,27903,29184,v17535,29580,v17536,v17537,23317,29881,35715,v17538,v17539,31379,31724,31939,32364,33528,34199,62924,34960,62926,36537,62928,36815,34143,39392,37409,62933,v17540,v17541,v17542,v17543,23066,39016,26475,v17544,22333,34262,v17545,33471,v17546,v17547,
v17548,23931,v17549,v17550,v17551,23446,62959,32347],v23714=v23715.concat(v23716),v23712=v23713.concat(v23714),v23710=v23711.concat(v23712),v23708=v23709.concat(v23710),v23706=v23707.concat(v23708),v23704=v23705.concat(v23706),v23702=v23703.concat(v23704),v23700=v23701.concat(v23702),v23698=v23699.concat(v23700),v23696=v23697.concat(v23698),v23694=v23695.concat(v23696),v23692=v23693.concat(v23694),v23690=v23691.concat(v23692),v23688=v23689.concat(v23690),v23686=v23687.concat(v23688),v23684=v23685.concat(v23686),
v23682=v23683.concat(v23684),v23680=v23681.concat(v23682),v23678=v23679.concat(v23680),v23676=v23677.concat(v23678),v23674=v23675.concat(v23676),v23672=v23673.concat(v23674),v23670=v23671.concat(v23672),v23668=v23669.concat(v23670),v23666=v23667.concat(v23668),v23664=v23665.concat(v23666),v23662=v23663.concat(v23664),v23660=v23661.concat(v23662),v23658=v23659.concat(v23660),v23656=v23657.concat(v23658),v23654=v23655.concat(v23656),v23652=v23653.concat(v23654),v23650=v23651.concat(v23652),v23648=v23649.concat(v23650),
v5855=v23647.concat(v23648),v17552={f:95,c:32},v17553={f:3,c:12288},v17554=[183,12539],v17555=[8230,8943],v17556={f:2,c:8216},v17557={f:2,c:8220},v17558={f:2,c:12308},v17559={f:8,c:12296},v17560={f:2,c:12310},v17561={f:2,c:12304},v17562={f:2,c:8743},v17563={f:2,c:8814},v17564={f:2,c:8804},v17565={f:2,c:8242},v17566={f:2,c:65504},v17567={f:2,c:8592},v17568={f:20,c:9352},v17569={f:20,c:9332},v17570={f:10,c:9312},v17571={f:10,c:12832},v17572={f:12,c:8544},v17573={f:3,c:65281},v17574={f:89,c:65285},v17575=
{f:83,c:12353},v17576={f:86,c:12449},v17577={f:17,c:913},v17578={f:7,c:931},v17579={f:17,c:945},v17580={f:7,c:963},v17581={f:7,c:59277},v17582={f:2,c:65077},v17583={f:2,c:65081},v17584={f:2,c:65087},v17585={f:2,c:65085},v17586={f:4,c:65089},v17587={f:2,c:59284},v17588={f:2,c:65083},v17589={f:2,c:65079},v17590={f:2,c:65075},v17591={f:6,c:1040},v17592={f:32,c:1046},v17593={f:26,c:1078},v17594={f:37,c:12549},v17595={f:76,c:9472},v17596={s:126},v17597=[12043,20843],v17598=[12137,30333],v17599=[12240,
40763],v17600=[12112,27604],v17601={f:2,c:36776},v17602=[12056,21340],v17603=[12058,21378],v17604=[12162,33251],v17605=[12192,36784],v17606=[12186,36196],v17607=[12173,34411],v17608=[12072,23544],v17609=[12068,22823],v17610=[12109,27513],v17611=[12049,20992],v17612=[12237,40718],v17613=[12099,26007],v17614=[12182,35910],v17615=[12157,32780],v17616=[12041,20799],v17617=[12159,32819],v17618=[12038,20108],v17619=[12101,26041],v17620=[12206,38750],v17621=[12201,38428],v17622=[12119,29238],v17623=[12082,
24178],v17624=[12130,29976],v17625=[12220,39640],v17626=[12093,25096],v17627=[12208,38761],v17628=[12079,24037],v17629=[12088,24339],v17630=[12238,40723],v17631=[12219,39592],v17632=[12181,35895],v17633=[12128,29916],v17634=[12084,24191],v17635=[12225,39740],v17636=[12146,31166],v17637=[12234,40657],v17638=[12117,28779],v17639=[12047,20960],v17640=[12080,24049],v17641=[12179,35282],v17642=[12081,24062],v17643=[12100,26020],v17644=[12198,37329],v17645=[12210,38893],v17646=[12165,33276],v17647=[12061,
21475],v17648=[12156,32769],v17649=[12197,37324],v17650=[12148,31435],v17651=[12202,38582],v17652=[12050,21147],v17653=[12229,40575],v17654=[12231,40635],v17655=[12113,27611],v17656=[12141,30683],v17657=[12150,31859],v17658=[12207,38754],v17659=[12139,30399],v17660={f:2,c:25720},v17661=[12106,26408],v17662=[12140,30446],v17663=[12124,29275],v17664=[12069,22899],v17665=[12138,30382],v17666=[12122,29255],v17667=[12115,27668],v17668=[12107,27424],v17669=[12125,29356],v17670=[12040,20154],v17671=[12103,
26085],v17672=[12161,32905],v17673=[12042,20837],v17674=[12170,33394],v17675=[12077,23665],v17676=[12166,33292],v17677=[12189,36523],v17678=[12131,29983],v17679=[12075,23608],v17680=[12055,21313],v17681=[12143,30707],v17682=[12215,39135],v17683=[12142,30690],v17684=[12144,31034],v17685=[12064,22763],v17686=[12114,27663],v17687=[12095,25163],v17688=[12216,39318],v17689=[12233,40653],v17690=[12239,40736],v17691=[12116,27700],v17692=[12133,3E4],v17693=[12063,22303],v17694=[12129,29926],v17695=[12153,
32593],v17696=[12098,25991],v17697=[12102,26080],v17698=[12111,27595],v17699=[12067,22805],v17700=[12217,39321],v17701=[12073,23567],v17702=[12191,36763],v17703=[12092,24515],v17704=[12175,34892],v17705=[12126,29572],v17706=[12147,31348],v17707=[12174,34880],v17708=[12123,29273],v17709=[12180,35328],v17710=[12154,32650],v17711=[12032,19968],v17712=[12176,34915],v17713=[12036,20057],v17714=[12194,37009],v17715=[12211,38899],v17716={f:2,c:33828},v17717=[12132,29992],v17718=[12195,37193],v17719=[12060,
21448],v17720=[12204,38632],v17721=[12155,32701],v17722=[12127,29577],v17723=[12104,26352],v17724=[12105,26376],v17725=[12096,25903],v17726=[12108,27490],v17727=[12164,33267],v17728=[12168,33311],v17729=[12149,31481],v17730=[12118,29226],v17731=[12070,23376],v17732=[12163,33258],v17733=[12187,36208],v17734=[12188,36275],v17735=[12224,39730],v17736=[12033,20008],v17737=[12035,20031],v17738=[12052,21269],v17739=[12120,29243],v17740=[12034,20022],v17741=[12053,21274],v17742={f:2,c:21055},v17743=[12044,
20866],v17744=[12245,40864],v17745=[12051,21241],v17746=[12039,20128],v17747=[12046,20907],v17748=[12045,20886],v17749={f:2,c:35750},v17750={f:2,c:35764},v17751={f:2,c:35778},v17752={f:3,c:35794},v17753={f:2,c:35800},v17754={f:2,c:35807},v17755={f:2,c:35816},v17756={f:2,c:35839},v17757={f:2,c:35857},v17758={f:3,c:35860},v17759={f:3,c:35871},v17760={f:2,c:35882},v17761={f:2,c:35886},v17762={f:2,c:35890},v17763={f:2,c:35893},v17764=[12057,21353],v17765={f:2,c:21164},v17766=[12085,24308],v17767=[12048,
20981],v17768=[12223,39727],v17769=[12059,21430],v17770={f:2,c:22318},v17771={f:2,c:33483},v17772={f:2,c:33556},v17773={f:2,c:33627},v17774={f:2,c:33645},v17775={f:2,c:33715},v17776={f:2,c:33784},v17777={f:2,c:33927},v17778=[12086,24318],v17779=[12074,23586],v17780={f:2,c:25783},v17781=[12087,24331],v17782={f:3,c:21586},v17783={f:2,c:21658},v17784={f:2,c:21715},v17785={f:2,c:21721},v17786={f:2,c:21673},v17787={f:2,c:21794},v17788={f:3,c:21877},v17789={f:2,c:21949},v17790={f:2,c:21995},v17791={f:2,
c:22002},v17792={f:2,c:21964},v17793={f:2,c:22139},v17794=[12062,22231],v17795={f:2,c:24123},v17796={f:2,c:23704},v17797={f:2,c:23810},v17798=[12091,24435],v17799=[12090,24417],v17800={f:2,c:29367},v17801={f:2,c:29434},v17802=[12167,33307],v17803=[12065,22786],v17804={f:6,c:39271},v17805={f:2,c:39312},v17806={f:3,c:39315},v17807={f:2,c:24581},v17808={f:2,c:24696},v17809={f:2,c:38389},v17810={f:2,c:38403},v17811={f:4,c:38410},v17812={f:3,c:38421},v17813={f:2,c:38425},v17814=[12121,29247],v17815={f:2,
c:27752},v17816={f:2,c:27895},v17817={f:2,c:28051},v17818={f:2,c:28243},v17819={f:2,c:28486},v17820=[12071,23424],v17821={f:2,c:36917},v17822={f:2,c:36945},v17823=[12089,24400],v17824=[12076,23662],v17825={f:2,c:22953},v17826={f:2,c:23045},v17827={f:2,c:39543},v17828={f:2,c:39552},v17829={f:2,c:39570},v17830={f:3,c:39579},v17831={f:2,c:39583},v17832={f:2,c:39586},v17833={f:2,c:32424},v17834={f:3,c:32448},v17835={f:2,c:32459},v17836={f:2,c:32480},v17837={f:2,c:32494},v17838={f:2,c:32497},v17839={f:2,
c:32506},v17840={f:3,c:32513},v17841={f:2,c:32519},v17842={f:2,c:32523},v17843={f:2,c:32529},v17844={f:7,c:32545},v17845={f:4,c:32554},v17846={f:5,c:32559},v17847=[12083,24186],v17848=[12078,24027],v17849={f:2,c:29824},v17850={f:2,c:29864},v17851={f:3,c:38890},v17852={f:2,c:26674},v17853={f:2,c:26720},v17854={f:2,c:26911},v17855={f:2,c:27015},v17856={f:2,c:27159},v17857={f:2,c:27521},v17858={f:2,c:27538},v17859={f:2,c:27546},v17860={f:3,c:36721},v17861={f:2,c:36725},v17862={f:2,c:36729},v17863={f:2,
c:36737},v17864={f:3,c:36749},v17865=[12097,25908],v17866={f:3,c:26094},v17867={f:2,c:26331},v17868={f:2,c:36146},v17869={f:2,c:36165},v17870={f:2,c:36168},v17871={f:3,c:35274},v17872={f:4,c:35278},v17873={f:2,c:29310},v17874={f:3,c:27672},v17875={f:4,c:32999},v17876={f:2,c:33037},v17877={f:2,c:33113},v17878={f:2,c:33148},v17879={f:3,c:39121},v17880={f:2,c:39129},v17881=[12110,27571],v17882={f:2,c:25160},v17883={f:2,c:31067},v17884=[12160,32895],v17885={f:2,c:30743},v17886={f:2,c:30748},v17887={f:3,
c:30777},v17888={f:2,c:30806},v17889=[12235,40697],v17890={f:2,c:40699},v17891={f:2,c:30471},v17892={f:2,c:30544},v17893={f:2,c:30623},v17894={f:3,c:38021},v17895={f:2,c:38028},v17896={f:2,c:38031},v17897={f:3,c:38042},v17898={f:2,c:38051},v17899={f:2,c:38063},v17900={f:5,c:38070},v17901={f:2,c:38076},v17902={f:7,c:38088},v17903={f:3,c:38096},v17904={f:3,c:38101},v17905={f:3,c:38110},v17906={f:2,c:38116},v17907={f:2,c:38119},v17908={f:2,c:38126},v17909={f:3,c:38131},v17910={f:2,c:38140},v17911={f:2,
c:38150},v17912={f:2,c:38153},v17913={f:3,c:38157},v17914={f:5,c:38162},v17915={f:3,c:38173},v17916={f:2,c:38186},v17917={f:2,c:38193},v17918={f:3,c:38198},v17919={f:2,c:38206},v17920={f:3,c:38212},v17921={f:2,c:38222},v17922={f:3,c:38226},v17923={f:4,c:38230},v17924={f:2,c:38238},v17925={f:2,c:38241},v17926={f:9,c:38244},v17927={f:3,c:38257},v17928={f:5,c:40488},v17929={f:2,c:40505},v17930={f:2,c:40513},v17931={f:4,c:40518},v17932={f:2,c:40523},v17933={f:3,c:40538},v17934={f:7,c:40550},v17935=[12135,
30098],v17936={f:2,c:30131},v17937={f:2,c:31352},v17938=[12134,30091],v17939=[12158,32786],v17940={f:3,c:32805},v17941={f:2,c:39052},v17942={f:2,c:39066},v17943={f:2,c:39070},v17944={f:2,c:39073},v17945={f:2,c:39077},v17946=[12172,34381],v17947={f:2,c:34545},v17948={f:2,c:34685},v17949=[12152,32566],v17950={f:2,c:32580},v17951={f:2,c:31491},v17952={f:2,c:31654},v17953={f:2,c:31717},v17954={f:2,c:33281},v17955={f:3,c:33313},v17956={f:2,c:33331},v17957={f:2,c:32687},v17958={f:2,c:31932},v17959={f:2,
c:31948},v17960=[12169,33390],v17961=[12151,31992],v17962={f:2,c:37198},v17963={f:2,c:37245},v17964={f:2,c:37282},v17965={f:3,c:37293},v17966=[12183,35925],v17967={f:2,c:36310},v17968={f:2,c:36302},v17969={f:2,c:36343},v17970={f:2,c:36417},v17971={f:2,c:36433},v17972=[12184,35960],v17973={f:6,c:40837},v17974=[12203,38585],v17975={f:2,c:38588},v17976={f:4,c:40069},v17977={f:3,c:40080},v17978={f:2,c:40084},v17979={f:2,c:40090},v17980={f:6,c:40094},v17981={f:5,c:40101},v17982={f:2,c:40109},v17983={f:8,
c:40112},v17984={f:4,c:40122},v17985={f:4,c:40132},v17986={f:7,c:40138},v17987={f:3,c:40147},v17988={f:3,c:40151},v17989={f:2,c:40156},v17990={f:2,c:38801},v17991={f:2,c:39627},v17992=[12221,39647],v17993={f:2,c:40637},v17994={f:2,c:40583},v17995={f:3,c:40667},v17996={f:2,c:40765},v17997={s:13},v17998=[12185,35997],v17999=[12199,38263],v18000=[12190,36554],v18001=[12242,40786],v18002=[12222,39717],v18003=[12214,39131],v18004=[12213,39080],v18005=[12244,40860],v18006=[12178,35211],v18007=[12243,40845],
v18008=[12218,39340],v18009=[12230,40613],v18010=[12200,38272],v18011=[12227,40165],v18012=[12241,40778],v18013=[12209,38859],v18014=[12212,38913],v18015=[12226,39770],v18016={f:2,c:35473},v18017={f:2,c:39146},v18018={f:3,c:39240},v18019={f:2,c:39491},v18020={f:2,c:32007},v18021={f:2,c:36638},v18022={f:2,c:39086},v18023={f:3,c:37330},v18024={f:2,c:37484},v18025={f:2,c:37926},v18026={f:2,c:37639},v18027={f:2,c:37852},v18028={f:2,c:30278},v18029={f:2,c:30317},v18030={f:2,c:38926},v18031=[12236,40701],
v18032={f:2,c:39914},v18033=[12228,40565],v18034={f:10,c:8560},v18035={f:2,c:714},v18036={f:4,c:8598},v18037={f:2,c:8806},v18038={f:36,c:9552},v18039={f:15,c:9601},v18040={f:3,c:9619},v18041={f:2,c:9660},v18042={f:4,c:9698},v18043={f:2,c:12317},v18044={f:9,c:12321},v18045={f:2,c:13198},v18046={f:3,c:13212},v18047={f:2,c:13265},v18048={f:2,c:12443},v18049={f:2,c:12541},v18050={f:2,c:12445},v18051={f:10,c:65097},v18052={f:4,c:65108},v18053={f:14,c:65113},v18054={f:4,c:65128},v18055={f:12,c:12272},v18056=
{f:3,c:19972},v18057={f:3,c:19999},v18058={f:2,c:20014},v18059={f:3,c:20032},v18060={f:2,c:20058},v18061={f:4,c:20066},v18062={f:2,c:20071},v18063={f:6,c:20074},v18064={f:10,c:20084},v18065={f:3,c:20095},v18066={f:2,c:20099},v18067=[12037,20101],v18068={f:2,c:20118},v18069={f:2,c:20124},v18070={f:3,c:20143},v18071={f:4,c:20150},v18072={f:3,c:20156},v18073={f:2,c:20175},v18074={f:3,c:20186},v18075={f:2,c:20198},v18076={f:3,c:20205},v18077={f:3,c:20216},v18078={f:7,c:20226},v18079={f:2,c:20235},v18080=
{f:5,c:20242},v18081={f:2,c:20252},v18082={f:2,c:20264},v18083={f:3,c:20268},v18084={f:5,c:20286},v18085={f:2,c:20292},v18086={f:6,c:20295},v18087={f:2,c:20321},v18088={f:2,c:20330},v18089={f:2,c:20333},v18090={f:2,c:20337},v18091={f:4,c:20343},v18092={f:3,c:20352},v18093={f:2,c:20370},v18094={f:3,c:20376},v18095={f:2,c:20382},v18096={f:2,c:20385},v18097={f:5,c:20400},v18098={f:9,c:20406},v18099={f:2,c:20416},v18100={f:4,c:20422},v18101={f:3,c:20427},v18102={f:5,c:20434},v18103={f:2,c:20452},v18104=
{f:2,c:20459},v18105={f:4,c:20468},v18106={f:3,c:20475},v18107={f:5,c:20481},v18108={f:2,c:20487},v18109={f:3,c:20501},v18110={f:2,c:20509},v18111={f:3,c:20514},v18112={f:11,c:20527},v18113={f:4,c:20543},v18114={f:3,c:20548},v18115={f:2,c:20554},v18116={f:5,c:20560},v18117={f:4,c:20566},v18118={f:8,c:20573},v18119={f:6,c:20582},v18120={f:7,c:20589},v18121={f:3,c:20600},v18122={f:2,c:20604},v18123={f:4,c:20609},v18124={f:2,c:20614},v18125={f:4,c:20617},v18126={f:8,c:20622},v18127={f:8,c:20634},v18128=
{f:2,c:20650},v18129={f:4,c:20654},v18130={f:2,c:20664},v18131={f:2,c:20668},v18132={f:3,c:20671},v18133={f:2,c:20675},v18134={f:3,c:20678},v18135={f:5,c:20682},v18136={f:3,c:20690},v18137={f:3,c:20695},v18138={f:3,c:20699},v18139={f:6,c:20703},v18140={f:3,c:20713},v18141={f:4,c:20719},v18142={f:3,c:20726},v18143={f:4,c:20732},v18144={f:4,c:20748},v18145={f:2,c:20758},v18146={f:6,c:20761},v18147={f:8,c:20770},v18148={f:7,c:20779},v18149={f:4,c:20787},v18150={f:2,c:20792},v18151={f:2,c:20797},v18152=
{f:3,c:20814},v18153={f:3,c:20823},v18154={f:5,c:20829},v18155={f:2,c:20835},v18156={f:2,c:20838},v18157={f:2,c:20862},v18158={f:2,c:20867},v18159={f:2,c:20870},v18160={f:2,c:20874},v18161={f:4,c:20878},v18162={f:2,c:20883},v18163={f:3,c:20893},v18164={f:5,c:20902},v18165={f:2,c:20909},v18166={f:3,c:20920},v18167={f:2,c:20926},v18168={f:3,c:20929},v18169={f:9,c:20946},v18170={f:2,c:20958},v18171={f:2,c:20962},v18172={f:6,c:20965},v18173={f:2,c:20996},v18174={f:2,c:21003},v18175={f:2,c:21007},v18176=
{f:3,c:21011},v18177={f:2,c:21022},v18178={f:3,c:21025},v18179={f:3,c:21029},v18180={f:2,c:21041},v18181={f:2,c:21044},v18182={f:2,c:21061},v18183={f:2,c:21064},v18184={f:2,c:21070},v18185={f:2,c:21074},v18186={f:4,c:21079},v18187={f:2,c:21087},v18188={f:3,c:21090},v18189={f:3,c:21099},v18190={f:2,c:21104},v18191={f:7,c:21110},v18192={f:3,c:21124},v18193={f:2,c:21134},v18194={f:7,c:21140},v18195={f:4,c:21156},v18196={f:3,c:21166},v18197={f:10,c:21172},v18198={f:3,c:21188},v18199={f:4,c:21196},v18200=
{f:2,c:21203},v18201={f:2,c:21216},v18202={f:11,c:21221},v18203={f:3,c:21234},v18204={f:2,c:21238},v18205={f:3,c:21243},v18206={f:4,c:21249},v18207={f:4,c:21257},v18208={f:4,c:21265},v18209={f:2,c:21275},v18210={f:2,c:21278},v18211={f:2,c:21284},v18212={f:3,c:21287},v18213={f:2,c:21291},v18214={f:6,c:21298},v18215=[12054,21304],v18216={f:2,c:21308},v18217={f:3,c:21323},v18218={f:2,c:21336},v18219={f:2,c:21356},v18220={f:4,c:21371},v18221={f:2,c:21376},v18222={f:2,c:21383},v18223={f:7,c:21390},v18224=
{f:2,c:21398},v18225={f:2,c:21403},v18226={f:3,c:21418},v18227={f:3,c:21423},v18228={f:4,c:21431},v18229={f:3,c:21436},v18230={f:4,c:21444},v18231={f:3,c:21454},v18232={f:2,c:21458},v18233={f:3,c:21468},v18234={f:3,c:21502},v18235={f:3,c:21528},v18236={f:2,c:21540},v18237={f:2,c:21558},v18238={f:2,c:21569},v18239={f:2,c:21572},v18240={f:4,c:21580},v18241={f:5,c:21597},v18242={f:8,c:21609},v18243={f:2,c:21625},v18244={f:2,c:21630},v18245={f:4,c:21639},v18246={f:2,c:21655},v18247={f:5,c:21662},v18248=
{f:3,c:21685},v18249={f:2,c:21689},v18250={f:2,c:21706},v18251={f:3,c:21730},v18252={f:2,c:21739},v18253={f:3,c:21743},v18254={f:6,c:21748},v18255={f:2,c:21762},v18256={f:5,c:21770},v18257={f:2,c:21778},v18258={f:6,c:21781},v18259={f:4,c:21788},v18260={f:2,c:21797},v18261={f:2,c:21800},v18262={f:3,c:21812},v18263={f:4,c:21816},v18264={f:2,c:21831},v18265={f:4,c:21835},v18266={f:2,c:21841},v18267={f:5,c:21847},v18268={f:2,c:21855},v18269={f:2,c:21858},v18270={f:2,c:21864},v18271={f:6,c:21871},v18272=
{f:2,c:21881},v18273={f:2,c:21893},v18274={f:3,c:21900},v18275={f:2,c:21906},v18276={f:3,c:21909},v18277={f:2,c:21914},v18278={f:7,c:21920},v18279={f:2,c:21928},v18280={f:2,c:21935},v18281={f:5,c:21951},v18282={f:2,c:21962},v18283={f:2,c:21967},v18284={f:3,c:21975},v18285={f:2,c:21997},v18286={f:2,c:22E3},v18287={f:5,c:22008},v18288={f:4,c:22018},v18289={f:2,c:22026},v18290={f:4,c:22032},v18291={f:2,c:22041},v18292={f:3,c:22048},v18293={f:2,c:22053},v18294={f:2,c:22058},v18295={f:3,c:22076},v18296=
{f:10,c:22082},v18297={f:5,c:22095},v18298={f:2,c:22101},v18299={f:2,c:22106},v18300={f:2,c:22110},v18301={f:2,c:22125},v18302={f:3,c:22141},v18303={f:4,c:22145},v18304={f:4,c:22152},v18305={f:3,c:22160},v18306={f:3,c:22166},v18307={f:9,c:22170},v18308={f:2,c:22180},v18309={f:5,c:22185},v18310={f:3,c:22192},v18311={f:4,c:22200},v18312={f:3,c:22205},v18313={f:2,c:22211},v18314={f:2,c:22214},v18315={f:4,c:22221},v18316={f:2,c:22226},v18317={f:2,c:22229},v18318={f:2,c:22232},v18319={f:6,c:22245},v18320=
{f:2,c:22254},v18321={f:2,c:22258},v18322={f:3,c:22262},v18323={f:2,c:22267},v18324={f:3,c:22272},v18325={f:4,c:22286},v18326={f:2,c:22292},v18327={f:3,c:22297},v18328={f:2,c:22301},v18329={f:3,c:22304},v18330={f:4,c:22308},v18331={f:2,c:22321},v18332={f:5,c:22324},v18333={f:2,c:22332},v18334={f:4,c:22339},v18335={f:2,c:22344},v18336={f:5,c:22354},v18337={f:2,c:22360},v18338={f:2,c:22370},v18339={f:3,c:22384},v18340={f:2,c:22388},v18341={f:3,c:22392},v18342={f:5,c:22397},v18343={f:4,c:22407},v18344=
{f:5,c:22413},v18345={f:7,c:22420},v18346={f:4,c:22428},v18347={f:3,c:22447},v18348={f:3,c:22453},v18349={f:9,c:22457},v18350={f:7,c:22468},v18351={f:2,c:22476},v18352={f:2,c:22480},v18353={f:2,c:22486},v18354={f:2,c:22491},v18355={f:2,c:22498},v18356={f:8,c:22501},v18357={f:4,c:22512},v18358={f:2,c:22517},v18359={f:2,c:22523},v18360={f:2,c:22526},v18361={f:2,c:22531},v18362={f:2,c:22536},v18363={f:3,c:22542},v18364={f:3,c:22546},v18365={f:2,c:22551},v18366={f:3,c:22554},v18367={f:2,c:22562},v18368=
{f:5,c:22565},v18369={f:4,c:22571},v18370={f:2,c:22578},v18371={f:14,c:22582},v18372={f:5,c:22597},v18373={f:2,c:22613},v18374={f:5,c:22617},v18375={f:3,c:22623},v18376={f:5,c:22630},v18377={f:8,c:22637},v18378={f:3,c:22646},v18379={f:4,c:22650},v18380={f:3,c:22662},v18381={f:7,c:22667},v18382={f:5,c:22676},v18383={f:8,c:22688},v18384={f:4,c:22698},v18385={f:4,c:22703},v18386={f:7,c:22708},v18387={f:2,c:22719},v18388={f:3,c:22722},v18389={f:9,c:22728},v18390={f:2,c:22742},v18391={f:3,c:22747},v18392=
{f:4,c:22757},v18393={f:2,c:22769},v18394={f:2,c:22772},v18395={f:2,c:22775},v18396={f:2,c:22779},v18397={f:4,c:22782},v18398={f:2,c:22789},v18399={f:2,c:22792},v18400=[12066,22794],v18401={f:2,c:22795},v18402={f:4,c:22800},v18403={f:2,c:22807},v18404={f:2,c:22813},v18405={f:2,c:22816},v18406={f:2,c:22834},v18407={f:2,c:22837},v18408={f:2,c:22847},v18409={f:2,c:22853},v18410={f:2,c:22860},v18411={f:2,c:22866},v18412={f:5,c:22875},v18413={f:2,c:22883},v18414={f:3,c:22886},v18415={f:4,c:22895},v18416=
{f:3,c:22906},v18417={f:3,c:22910},v18418={f:2,c:22923},v18419={f:4,c:22926},v18420={f:2,c:22932},v18421={f:3,c:22938},v18422={f:4,c:22943},v18423={f:2,c:22950},v18424={f:2,c:22956},v18425={f:2,c:22960},v18426={f:6,c:22963},v18427={f:2,c:22972},v18428={f:7,c:22975},v18429={f:3,c:22983},v18430={f:4,c:22988},v18431={f:2,c:22997},v18432={f:5,c:23006},v18433={f:2,c:23014},v18434={f:3,c:23017},v18435={f:12,c:23021},v18436={f:3,c:23036},v18437={f:2,c:23050},v18438={f:4,c:23053},v18439={f:4,c:23060},v18440=
{f:3,c:23065},v18441={f:2,c:23069},v18442={f:2,c:23073},v18443={f:3,c:23078},v18444={f:7,c:23082},v18445={f:5,c:23095},v18446={f:3,c:23101},v18447={f:4,c:23106},v18448={f:2,c:23111},v18449={f:10,c:23115},v18450={f:4,c:23126},v18451={f:7,c:23131},v18452={f:3,c:23139},v18453={f:2,c:23144},v18454={f:2,c:23147},v18455={f:6,c:23150},v18456={f:2,c:23160},v18457={f:4,c:23163},v18458={f:18,c:23168},v18459={f:7,c:23187},v18460={f:11,c:23196},v18461={f:2,c:23208},v18462={f:7,c:23211},v18463={f:2,c:23222},v18464=
{f:4,c:23225},v18465={f:2,c:23231},v18466={f:6,c:23235},v18467={f:2,c:23242},v18468={f:5,c:23245},v18469={f:3,c:23257},v18470={f:3,c:23261},v18471={f:2,c:23268},v18472={f:2,c:23271},v18473={f:5,c:23276},v18474={f:3,c:23282},v18475={f:5,c:23286},v18476={f:4,c:23292},v18477={f:7,c:23297},v18478={f:9,c:23309},v18479={f:7,c:23322},v18480={f:8,c:23330},v18481={f:5,c:23339},v18482={f:2,c:23349},v18483={f:7,c:23353},v18484={f:11,c:23361},v18485={f:3,c:23373},v18486={f:2,c:23392},v18487={f:2,c:23399},v18488=
{f:3,c:23405},v18489={f:2,c:23414},v18490={f:2,c:23419},v18491={f:2,c:23437},v18492={f:3,c:23440},v18493={f:3,c:23463},v18494={f:4,c:23468},v18495={f:2,c:23473},v18496={f:3,c:23482},v18497={f:2,c:23488},v18498={f:4,c:23496},v18499={f:3,c:23501},v18500={f:9,c:23508},v18501={f:4,c:23537},v18502={f:2,c:23549},v18503={f:2,c:23554},v18504={f:2,c:23570},v18505={f:4,c:23582},v18506={f:4,c:23592},v18507={f:4,c:23597},v18508={f:2,c:23602},v18509={f:2,c:23605},v18510={f:2,c:23619},v18511={f:2,c:23622},v18512=
{f:2,c:23628},v18513={f:3,c:23634},v18514={f:3,c:23638},v18515={f:4,c:23642},v18516={f:3,c:23657},v18517={f:7,c:23666},v18518={f:4,c:23675},v18519={f:5,c:23683},v18520={f:3,c:23689},v18521={f:2,c:23694},v18522={f:2,c:23698},v18523={f:4,c:23709},v18524={f:5,c:23716},v18525={f:3,c:23726},v18526={f:4,c:23737},v18527={f:2,c:23746},v18528={f:6,c:23749},v18529={f:6,c:23756},v18530={f:6,c:23763},v18531={f:7,c:23770},v18532={f:2,c:23778},v18533={f:2,c:23787},v18534={f:2,c:23790},v18535={f:3,c:23793},v18536=
{f:4,c:23799},v18537={f:4,c:23806},v18538={f:2,c:23812},v18539={f:5,c:23816},v18540={f:5,c:23823},v18541={f:3,c:23832},v18542={f:2,c:23836},v18543={f:5,c:23839},v18544={f:2,c:23850},v18545={f:5,c:23855},v18546={f:8,c:23861},v18547={f:8,c:23871},v18548={f:2,c:23880},v18549={f:3,c:23885},v18550={f:7,c:23889},v18551={f:2,c:23897},v18552={f:11,c:23902},v18553={f:2,c:23917},v18554={f:4,c:23920},v18555={f:12,c:23925},v18556={f:2,c:23941},v18557={f:15,c:23944},v18558={f:3,c:23962},v18559={f:2,c:23966},v18560=
{f:6,c:23969},v18561={f:15,c:23976},v18562={f:8,c:23997},v18563={f:5,c:24006},v18564={f:4,c:24014},v18565={f:6,c:24021},v18566={f:2,c:24031},v18567={f:2,c:24035},v18568={f:2,c:24044},v18569={f:2,c:24053},v18570={f:5,c:24056},v18571={f:2,c:24063},v18572={f:3,c:24073},v18573={f:2,c:24077},v18574={f:2,c:24082},v18575={f:7,c:24094},v18576={f:3,c:24104},v18577={f:2,c:24111},v18578={f:2,c:24116},v18579={f:2,c:24121},v18580={f:2,c:24126},v18581={f:6,c:24134},v18582={f:7,c:24141},v18583={f:2,c:24153},v18584=
{f:2,c:24156},v18585={f:7,c:24164},v18586={f:5,c:24173},v18587={f:3,c:24193},v18588={f:2,c:24200},v18589={f:3,c:24204},v18590={f:4,c:24225},v18591={f:3,c:24232},v18592={f:5,c:24238},v18593={f:4,c:24250},v18594={f:10,c:24255},v18595={f:6,c:24267},v18596={f:2,c:24276},v18597={f:4,c:24279},v18598={f:3,c:24284},v18599={f:4,c:24292},v18600={f:6,c:24301},v18601={f:2,c:24312},v18602={f:3,c:24315},v18603={f:3,c:24325},v18604={f:3,c:24332},v18605={f:2,c:24345},v18606={f:3,c:24348},v18607={f:4,c:24353},v18608=
{f:2,c:24363},v18609={f:3,c:24374},v18610={f:3,c:24381},v18611={f:5,c:24385},v18612={f:3,c:24393},v18613={f:3,c:24410},v18614={f:3,c:24414},v18615={f:2,c:24423},v18616={f:2,c:24430},v18617={f:3,c:24436},v18618={f:3,c:24445},v18619={f:3,c:24461},v18620={f:2,c:24467},v18621={f:2,c:24474},v18622={f:6,c:24482},v18623={f:2,c:24491},v18624={f:6,c:24495},v18625={f:2,c:24506},v18626={f:5,c:24510},v18627={f:2,c:24519},v18628={f:2,c:24522},v18629={f:3,c:24531},v18630={f:3,c:24538},v18631={f:2,c:24542},v18632=
{f:2,c:24546},v18633={f:2,c:24549},v18634={f:2,c:24552},v18635={f:2,c:24559},v18636={f:3,c:24562},v18637={f:2,c:24566},v18638={f:2,c:24569},v18639={f:3,c:24583},v18640={f:2,c:24587},v18641={f:2,c:24592},v18642={f:2,c:24599},v18643={f:2,c:24606},v18644={f:3,c:24610},v18645={f:3,c:24620},v18646={f:5,c:24624},v18647={f:5,c:24630},v18648={f:2,c:24637},v18649={f:7,c:24644},v18650={f:2,c:24654},v18651={f:2,c:24659},v18652={f:3,c:24662},v18653={f:2,c:24667},v18654={f:4,c:24670},v18655={f:2,c:24677},v18656=
{f:2,c:24689},v18657={f:2,c:24692},v18658={f:3,c:24704},v18659={f:4,c:24709},v18660={f:2,c:24714},v18661={f:4,c:24718},v18662={f:3,c:24727},v18663={f:2,c:24737},v18664={f:2,c:24740},v18665={f:2,c:24745},v18666={f:2,c:24761},v18667={f:8,c:24765},v18668={f:3,c:24775},v18669={f:5,c:24780},v18670={f:3,c:24786},v18671={f:2,c:24790},v18672={f:4,c:24802},v18673={f:2,c:24823},v18674={f:4,c:24828},v18675={f:4,c:24834},v18676={f:3,c:24842},v18677={f:5,c:24848},v18678={f:4,c:24854},v18679={f:2,c:24861},v18680=
{f:2,c:24865},v18681={f:3,c:24872},v18682={f:8,c:24876},v18683={f:2,c:24885},v18684={f:6,c:24888},v18685={f:8,c:24896},v18686={f:2,c:24911},v18687={f:3,c:24914},v18688={f:2,c:24918},v18689={f:2,c:24923},v18690={f:2,c:24928},v18691={f:2,c:24933},v18692={f:2,c:24940},v18693={f:2,c:24945},v18694={f:10,c:24952},v18695={f:7,c:24963},v18696={f:2,c:24972},v18697={f:5,c:24981},v18698={f:2,c:24987},v18699={f:6,c:24990},v18700={f:2,c:24997},v18701={f:3,c:25007},v18702={f:3,c:25011},v18703={f:6,c:25016},v18704=
{f:3,c:25023},v18705={f:4,c:25027},v18706={f:4,c:25037},v18707={f:9,c:25045},v18708={f:3,c:25056},v18709={f:2,c:25060},v18710={f:9,c:25065},v18711={f:2,c:25075},v18712={f:5,c:25089},v18713={f:3,c:25116},v18714={f:2,c:25128},v18715=[12094,25142],v18716={f:5,c:25144},v18717={f:3,c:25156},v18718={f:2,c:25167},v18719={f:3,c:25173},v18720={f:2,c:25177},v18721={f:7,c:25180},v18722={f:2,c:25188},v18723={f:2,c:25201},v18724={f:2,c:25204},v18725={f:2,c:25207},v18726={f:2,c:25210},v18727={f:3,c:25217},v18728=
{f:4,c:25221},v18729={f:6,c:25227},v18730={f:3,c:25244},v18731={f:2,c:25254},v18732={f:2,c:25257},v18733={f:4,c:25261},v18734={f:3,c:25266},v18735={f:3,c:25270},v18736={f:2,c:25280},v18737={f:2,c:25309},v18738={f:2,c:25312},v18739={f:2,c:25322},v18740={f:4,c:25336},v18741={f:4,c:25347},v18742={f:4,c:25354},v18743={f:2,c:25359},v18744={f:4,c:25362},v18745={f:3,c:25367},v18746={f:2,c:25382},v18747={f:3,c:25388},v18748={f:2,c:25392},v18749={f:6,c:25395},v18750={f:2,c:25403},v18751={f:3,c:25407},v18752=
{f:2,c:25415},v18753={f:4,c:25425},v18754={f:8,c:25430},v18755={f:3,c:25444},v18756={f:2,c:25455},v18757={f:3,c:25459},v18758={f:2,c:25464},v18759={f:4,c:25468},v18760={f:2,c:25477},v18761={f:3,c:25491},v18762={f:7,c:25497},v18763={f:2,c:25521},v18764={f:2,c:25525},v18765={f:3,c:25537},v18766={f:2,c:25543},v18767={f:3,c:25546},v18768={f:3,c:25555},v18769={f:3,c:25559},v18770={f:3,c:25563},v18771={f:5,c:25572},v18772={f:2,c:25579},v18773={f:3,c:25583},v18774={f:4,c:25593},v18775={f:2,c:25603},v18776=
{f:5,c:25606},v18777={f:2,c:25617},v18778={f:2,c:25621},v18779={f:3,c:25624},v18780={f:4,c:25634},v18781={f:3,c:25639},v18782={f:6,c:25646},v18783={f:3,c:25655},v18784={f:2,c:25659},v18785={f:2,c:25666},v18786={f:6,c:25675},v18787={f:3,c:25685},v18788={f:3,c:25689},v18789={f:7,c:25696},v18790={f:3,c:25706},v18791={f:3,c:25712},v18792={f:2,c:25716},v18793={f:6,c:25724},v18794={f:8,c:25737},v18795={f:2,c:25751},v18796={f:4,c:25754},v18797={f:3,c:25760},v18798={f:3,c:25766},v18799={f:2,c:25800},v18800=
{f:2,c:25813},v18801={f:3,c:25819},v18802={f:5,c:25831},v18803={f:2,c:25837},v18804={f:2,c:25845},v18805={f:2,c:25848},v18806={f:3,c:25857},v18807={f:2,c:25863},v18808={f:5,c:25866},v18809={f:2,c:25872},v18810={f:4,c:25886},v18811={f:4,c:25894},v18812={f:4,c:25904},v18813={f:2,c:25916},v18814={f:5,c:25920},v18815={f:2,c:25926},v18816={f:2,c:25930},v18817={f:2,c:25933},v18818={f:3,c:25938},v18819={f:3,c:25951},v18820={f:2,c:25956},v18821={f:4,c:25959},v18822={f:3,c:25965},v18823={f:9,c:25977},v18824=
{f:3,c:25988},v18825={f:3,c:25992},v18826={f:3,c:25997},v18827={f:2,c:26013},v18828={f:2,c:26018},v18829={f:6,c:26033},v18830={f:2,c:26042},v18831={f:3,c:26046},v18832={f:4,c:26055},v18833={f:2,c:26064},v18834={f:3,c:26067},v18835={f:8,c:26072},v18836={f:2,c:26083},v18837={f:2,c:26090},v18838={f:4,c:26098},v18839={f:2,c:26104},v18840={f:5,c:26107},v18841={f:2,c:26116},v18842={f:3,c:26119},v18843={f:3,c:26128},v18844={f:3,c:26134},v18845={f:3,c:26138},v18846={f:4,c:26145},v18847={f:4,c:26153},v18848=
{f:2,c:26162},v18849={f:5,c:26167},v18850={f:2,c:26175},v18851={f:7,c:26180},v18852={f:2,c:26189},v18853={f:2,c:26192},v18854={f:2,c:26200},v18855={f:2,c:26203},v18856={f:2,c:26210},v18857={f:5,c:26217},v18858={f:3,c:26225},v18859={f:2,c:26232},v18860={f:3,c:26235},v18861={f:3,c:26239},v18862={f:2,c:26245},v18863={f:2,c:26250},v18864={f:4,c:26253},v18865={f:4,c:26258},v18866={f:5,c:26264},v18867={f:4,c:26270},v18868={f:4,c:26275},v18869={f:2,c:26281},v18870={f:2,c:26284},v18871={f:5,c:26287},v18872=
{f:4,c:26293},v18873={f:4,c:26298},v18874={f:5,c:26303},v18875={f:12,c:26314},v18876={f:2,c:26327},v18877={f:2,c:26334},v18878={f:5,c:26337},v18879={f:2,c:26343},v18880={f:2,c:26346},v18881={f:3,c:26349},v18882={f:2,c:26357},v18883={f:2,c:26362},v18884={f:2,c:26369},v18885={f:4,c:26372},v18886={f:2,c:26382},v18887={f:3,c:26385},v18888={f:3,c:26392},v18889={f:6,c:26400},v18890={f:2,c:26418},v18891={f:4,c:26422},v18892={f:2,c:26427},v18893={f:2,c:26430},v18894={f:2,c:26436},v18895={f:2,c:26442},v18896=
{f:2,c:26452},v18897={f:5,c:26455},v18898={f:3,c:26466},v18899={f:2,c:26470},v18900={f:2,c:26475},v18901={f:4,c:26488},v18902={f:2,c:26498},v18903={f:2,c:26501},v18904={f:4,c:26508},v18905={f:4,c:26513},v18906={f:3,c:26527},v18907={f:2,c:26545},v18908={f:8,c:26553},v18909={f:10,c:26565},v18910={f:3,c:26581},v18911={f:2,c:26595},v18912={f:3,c:26598},v18913={f:2,c:26602},v18914={f:2,c:26605},v18915={f:8,c:26613},v18916={f:4,c:26625},v18917={f:2,c:26644},v18918={f:5,c:26648},v18919={f:3,c:26654},v18920=
{f:7,c:26658},v18921={f:7,c:26667},v18922={f:3,c:26676},v18923={f:2,c:26682},v18924={f:10,c:26710},v18925={f:8,c:26732},v18926={f:9,c:26744},v18927={f:8,c:26759},v18928={f:3,c:26768},v18929={f:3,c:26772},v18930={f:4,c:26777},v18931={f:2,c:26784},v18932={f:3,c:26787},v18933={f:4,c:26793},v18934={f:2,c:26801},v18935={f:10,c:26806},v18936={f:6,c:26819},v18937={f:4,c:26830},v18938={f:2,c:26835},v18939={f:4,c:26843},v18940={f:2,c:26849},v18941={f:3,c:26852},v18942={f:6,c:26856},v18943={f:3,c:26866},v18944=
{f:3,c:26870},v18945={f:4,c:26877},v18946={f:3,c:26882},v18947={f:5,c:26886},v18948={f:12,c:26899},v18949={f:3,c:26913},v18950={f:8,c:26917},v18951={f:2,c:26926},v18952={f:3,c:26929},v18953={f:4,c:26933},v18954={f:3,c:26938},v18955={f:2,c:26944},v18956={f:7,c:26947},v18957={f:8,c:26955},v18958={f:2,c:26965},v18959={f:2,c:26968},v18960={f:2,c:26971},v18961={f:2,c:26977},v18962={f:2,c:26980},v18963={f:2,c:26985},v18964={f:2,c:26991},v18965={f:3,c:26994},v18966={f:2,c:27002},v18967={f:3,c:27005},v18968=
{f:3,c:27018},v18969={f:6,c:27022},v18970={f:2,c:27030},v18971={f:2,c:27033},v18972={f:10,c:27037},v18973={f:2,c:27055},v18974={f:2,c:27058},v18975={f:2,c:27061},v18976={f:3,c:27064},v18977={f:3,c:27068},v18978={f:8,c:27074},v18979={f:3,c:27089},v18980={f:6,c:27093},v18981={f:3,c:27100},v18982={f:6,c:27105},v18983={f:5,c:27112},v18984={f:4,c:27118},v18985={f:9,c:27124},v18986={f:2,c:27139},v18987={f:4,c:27142},v18988={f:8,c:27147},v18989={f:3,c:27156},v18990={f:4,c:27162},v18991={f:4,c:27172},v18992=
{f:4,c:27179},v18993={f:3,c:27186},v18994={f:2,c:27190},v18995={f:2,c:27195},v18996={f:5,c:27199},v18997={f:2,c:27205},v18998={f:2,c:27209},v18999={f:4,c:27212},v19000={f:7,c:27217},v19001={f:3,c:27228},v19002={f:2,c:27235},v19003={f:11,c:27238},v19004={f:7,c:27250},v19005={f:2,c:27258},v19006={f:3,c:27261},v19007={f:3,c:27265},v19008={f:4,c:27269},v19009={f:4,c:27274},v19010={f:2,c:27282},v19011={f:2,c:27285},v19012={f:4,c:27288},v19013={f:3,c:27293},v19014={f:5,c:27300},v19015={f:2,c:27309},v19016=
{f:3,c:27312},v19017={f:4,c:27316},v19018={f:2,c:27321},v19019={f:7,c:27324},v19020={f:15,c:27332},v19021={f:6,c:27348},v19022={f:7,c:27360},v19023={f:6,c:27373},v19024={f:4,c:27380},v19025={f:2,c:27385},v19026={f:8,c:27388},v19027={f:5,c:27397},v19028={f:4,c:27403},v19029={f:2,c:27408},v19030={f:3,c:27411},v19031={f:7,c:27415},v19032={f:2,c:27429},v19033={f:10,c:27432},v19034={f:4,c:27443},v19035={f:2,c:27451},v19036={f:4,c:27455},v19037={f:2,c:27460},v19038={f:2,c:27466},v19039={f:3,c:27469},v19040=
{f:8,c:27473},v19041={f:5,c:27482},v19042={f:2,c:27496},v19043={f:7,c:27499},v19044={f:4,c:27507},v19045={f:4,c:27517},v19046={f:4,c:27534},v19047={f:2,c:27540},v19048={f:2,c:27548},v19049={f:2,c:27551},v19050={f:2,c:27554},v19051={f:5,c:27557},v19052={f:2,c:27564},v19053={f:2,c:27568},v19054={f:2,c:27576},v19055={f:3,c:27580},v19056={f:2,c:27587},v19057={f:4,c:27591},v19058={f:2,c:27600},v19059={f:5,c:27612},v19060={f:8,c:27618},v19061={f:3,c:27628},v19062={f:3,c:27632},v19063={f:3,c:27638},v19064=
{f:3,c:27642},v19065={f:5,c:27648},v19066={f:3,c:27657},v19067={f:3,c:27676},v19068={f:2,c:27702},v19069={f:4,c:27705},v19070={f:2,c:27710},v19071={f:3,c:27715},v19072={f:5,c:27723},v19073={f:3,c:27729},v19074={f:3,c:27736},v19075={f:2,c:27746},v19076={f:3,c:27749},v19077={f:5,c:27755},v19078={f:2,c:27767},v19079={f:3,c:27770},v19080={f:2,c:27775},v19081={f:2,c:27786},v19082={f:2,c:27789},v19083={f:2,c:27793},v19084={f:4,c:27797},v19085={f:3,c:27804},v19086={f:2,c:27823},v19087={f:4,c:27828},v19088=
{f:4,c:27840},v19089={f:3,c:27846},v19090={f:3,c:27853},v19091={f:2,c:27857},v19092={f:3,c:27864},v19093={f:2,c:27868},v19094={f:2,c:27878},v19095={f:2,c:27884},v19096={f:2,c:27903},v19097={f:2,c:27906},v19098={f:2,c:27909},v19099={f:3,c:27912},v19100={f:3,c:27919},v19101={f:4,c:27923},v19102={f:2,c:27932},v19103={f:6,c:27935},v19104={f:2,c:27944},v19105={f:2,c:27948},v19106={f:2,c:27951},v19107={f:3,c:27958},v19108={f:2,c:27967},v19109={f:4,c:27989},v19110={f:2,c:28001},v19111={f:2,c:28004},v19112=
{f:2,c:28007},v19113={f:3,c:28011},v19114={f:4,c:28016},v19115={f:2,c:28021},v19116={f:2,c:28026},v19117={f:5,c:28029},v19118={f:2,c:28035},v19119={f:2,c:28042},v19120={f:2,c:28047},v19121={f:5,c:28054},v19122={f:2,c:28076},v19123={f:2,c:28080},v19124={f:2,c:28083},v19125={f:2,c:28086},v19126={f:6,c:28089},v19127={f:3,c:28097},v19128={f:3,c:28104},v19129={f:4,c:28109},v19130={f:4,c:28114},v19131={f:3,c:28122},v19132={f:2,c:28130},v19133={f:3,c:28135},v19134={f:2,c:28143},v19135={f:8,c:28157},v19136=
{f:4,c:28166},v19137={f:2,c:28178},v19138={f:2,c:28184},v19139={f:2,c:28187},v19140={f:2,c:28190},v19141={f:2,c:28199},v19142={f:2,c:28208},v19143={f:3,c:28213},v19144={f:3,c:28219},v19145={f:4,c:28223},v19146={f:8,c:28229},v19147={f:4,c:28239},v19148={f:2,c:28249},v19149={f:2,c:28252},v19150={f:11,c:28256},v19151={f:2,c:28268},v19152={f:14,c:28272},v19153={f:3,c:28288},v19154={f:2,c:28295},v19155={f:5,c:28298},v19156={f:5,c:28305},v19157={f:3,c:28313},v19158={f:2,c:28320},v19159={f:2,c:28323},v19160=
{f:2,c:28328},v19161={f:4,c:28331},v19162={f:2,c:28344},v19163={f:3,c:28350},v19164={f:3,c:28360},v19165={f:2,c:28376},v19166={f:3,c:28379},v19167={f:2,c:28394},v19168={f:2,c:28397},v19169={f:2,c:28400},v19170={f:2,c:28405},v19171={f:5,c:28410},v19172={f:3,c:28419},v19173={f:2,c:28423},v19174={f:5,c:28426},v19175={f:3,c:28432},v19176={f:4,c:28438},v19177={f:5,c:28443},v19178={f:4,c:28453},v19179={f:2,c:28468},v19180={f:5,c:28473},v19181={f:4,c:28482},v19182={f:3,c:28488},v19183={f:3,c:28494},v19184=
{f:2,c:28498},v19185={f:3,c:28501},v19186={f:2,c:28506},v19187={f:3,c:28511},v19188={f:6,c:28519},v19189={f:2,c:28533},v19190={f:2,c:28541},v19191={f:3,c:28545},v19192={f:2,c:28554},v19193={f:8,c:28559},v19194={f:4,c:28568},v19195={f:3,c:28573},v19196={f:2,c:28578},v19197={f:2,c:28581},v19198={f:4,c:28586},v19199={f:2,c:28591},v19200={f:2,c:28596},v19201={f:2,c:28599},v19202={f:6,c:28602},v19203={f:5,c:28612},v19204={f:7,c:28618},v19205={f:2,c:28627},v19206={f:2,c:28630},v19207={f:2,c:28633},v19208=
{f:2,c:28636},v19209={f:2,c:28642},v19210={f:6,c:28645},v19211={f:2,c:28652},v19212={f:8,c:28658},v19213={f:6,c:28671},v19214={f:2,c:28679},v19215={f:3,c:28684},v19216={f:3,c:28690},v19217={f:2,c:28694},v19218={f:2,c:28705},v19219={f:3,c:28708},v19220={f:7,c:28713},v19221={f:2,c:28723},v19222={f:3,c:28726},v19223={f:4,c:28730},v19224={f:4,c:28735},v19225={f:7,c:28741},v19226={f:2,c:28749},v19227={f:3,c:28754},v19228={f:2,c:28758},v19229={f:4,c:28761},v19230={f:4,c:28767},v19231={f:2,c:28773},v19232=
{f:3,c:28776},v19233={f:4,c:28785},v19234={f:3,c:28793},v19235={f:4,c:28801},v19236={f:3,c:28806},v19237={f:3,c:28811},v19238={f:3,c:28815},v19239={f:2,c:28823},v19240={f:2,c:28826},v19241={f:13,c:28830},v19242={f:3,c:28852},v19243={f:2,c:28862},v19244={f:4,c:28868},v19245={f:4,c:28875},v19246={f:8,c:28880},v19247={f:3,c:28892},v19248={f:4,c:28896},v19249={f:4,c:28912},v19250={f:2,c:28917},v19251={f:3,c:28922},v19252={f:11,c:28926},v19253={f:5,c:28939},v19254={f:2,c:28945},v19255={f:6,c:28955},v19256=
{f:4,c:28962},v19257={f:8,c:28967},v19258={f:4,c:28978},v19259={f:14,c:28983},v19260={f:3,c:28998},v19261={f:3,c:29007},v19262={f:9,c:29011},v19263={f:3,c:29023},v19264={f:2,c:29034},v19265={f:3,c:29039},v19266={f:4,c:29044},v19267={f:2,c:29051},v19268={f:6,c:29054},v19269={f:5,c:29061},v19270={f:4,c:29067},v19271={f:2,c:29072},v19272={f:2,c:29077},v19273={f:5,c:29082},v19274={f:7,c:29089},v19275={f:3,c:29097},v19276={f:4,c:29101},v19277={f:3,c:29110},v19278={f:4,c:29114},v19279={f:2,c:29119},v19280=
{f:4,c:29124},v19281={f:5,c:29129},v19282={f:3,c:29135},v19283={f:3,c:29142},v19284={f:2,c:29146},v19285={f:2,c:29149},v19286={f:4,c:29153},v19287={f:5,c:29160},v19288={f:5,c:29167},v19289={f:4,c:29173},v19290={f:2,c:29178},v19291={f:7,c:29183},v19292={f:6,c:29191},v19293={f:2,c:29198},v19294={f:10,c:29201},v19295={f:10,c:29214},v19296={f:3,c:29229},v19297={f:2,c:29235},v19298={f:7,c:29248},v19299={f:3,c:29257},v19300={f:4,c:29262},v19301={f:3,c:29267},v19302={f:3,c:29283},v19303={f:4,c:29290},v19304=
{f:2,c:29296},v19305={f:2,c:29299},v19306={f:3,c:29302},v19307={f:2,c:29307},v19308={f:2,c:29314},v19309={f:5,c:29317},v19310={f:2,c:29328},v19311={f:3,c:29331},v19312={f:8,c:29335},v19313={f:2,c:29344},v19314={f:4,c:29347},v19315={f:4,c:29352},v19316={f:3,c:29361},v19317={f:6,c:29370},v19318={f:3,c:29381},v19319={f:4,c:29385},v19320={f:4,c:29395},v19321={f:4,c:29402},v19322={f:6,c:29410},v19323={f:2,c:29418},v19324={f:2,c:29429},v19325={f:3,c:29438},v19326={f:6,c:29444},v19327={f:3,c:29451},v19328=
{f:4,c:29455},v19329={f:3,c:29464},v19330={f:2,c:29471},v19331={f:2,c:29475},v19332={f:3,c:29478},v19333={f:2,c:29487},v19334={f:2,c:29490},v19335={f:2,c:29500},v19336={f:2,c:29506},v19337={f:7,c:29510},v19338={f:2,c:29518},v19339={f:4,c:29523},v19340={f:8,c:29528},v19341={f:7,c:29537},v19342={f:2,c:29555},v19343={f:3,c:29569},v19344={f:2,c:29573},v19345={f:2,c:29580},v19346={f:2,c:29583},v19347={f:4,c:29586},v19348={f:4,c:29591},v19349={f:3,c:29596},v19350={f:2,c:29600},v19351={f:6,c:29603},v19352=
{f:2,c:29612},v19353={f:3,c:29620},v19354={f:2,c:29624},v19355={f:4,c:29628},v19356={f:5,c:29635},v19357={f:2,c:29643},v19358={f:7,c:29650},v19359={f:4,c:29658},v19360={f:4,c:29665},v19361={f:3,c:29674},v19362={f:4,c:29678},v19363={f:11,c:29683},v19364={f:4,c:29695},v19365={f:2,c:29703},v19366={f:4,c:29707},v19367={f:9,c:29713},v19368={f:6,c:29724},v19369={f:2,c:29731},v19370={f:2,c:29745},v19371={f:5,c:29751},v19372={f:2,c:29757},v19373={f:9,c:29762},v19374={f:9,c:29772},v19375={f:3,c:29792},v19376=
{f:5,c:29796},v19377={f:2,c:29803},v19378={f:2,c:29806},v19379={f:5,c:29809},v19380={f:6,c:29816},v19381={f:3,c:29828},v19382={f:2,c:29836},v19383={f:11,c:29841},v19384={f:4,c:29855},v19385={f:2,c:29860},v19386={f:6,c:29866},v19387={f:9,c:29873},v19388={f:2,c:29883},v19389={f:12,c:29886},v19390={f:4,c:29899},v19391={f:2,c:29904},v19392={f:5,c:29909},v19393={f:7,c:29927},v19394={f:4,c:29936},v19395={f:7,c:29944},v19396={f:4,c:29952},v19397={f:7,c:29957},v19398={f:4,c:29972},v19399={f:2,c:29981},v19400=
{f:3,c:29984},v19401={f:2,c:29990},v19402={f:2,c:30012},v19403={f:4,c:30017},v19404={f:2,c:30022},v19405={f:2,c:30025},v19406={f:4,c:30032},v19407={f:4,c:30037},v19408={f:4,c:30046},v19409={f:2,c:30051},v19410={f:3,c:30055},v19411={f:6,c:30060},v19412={f:5,c:30074},v19413={f:3,c:30080},v19414={f:2,c:30084},v19415={f:3,c:30088},v19416={f:3,c:30092},v19417={f:2,c:30107},v19418={f:5,c:30118},v19419={f:2,c:30134},v19420={f:2,c:30138},v19421={f:3,c:30143},v19422={f:2,c:30155},v19423={f:4,c:30158},v19424=
{f:2,c:30172},v19425={f:3,c:30175},v19426={f:4,c:30188},v19427={f:2,c:30194},v19428={f:4,c:30197},v19429={f:2,c:30202},v19430={f:2,c:30205},v19431={f:4,c:30214},v19432={f:2,c:30222},v19433={f:4,c:30225},v19434={f:2,c:30236},v19435={f:2,c:30254},v19436={f:2,c:30257},v19437={f:2,c:30262},v19438={f:2,c:30265},v19439={f:2,c:30276},v19440={f:2,c:30282},v19441={f:6,c:30286},v19442={f:3,c:30297},v19443={f:2,c:30304},v19444={f:3,c:30323},v19445=[12136,30326],v19446={f:2,c:30329},v19447={f:3,c:30335},v19448=
{f:2,c:30345},v19449={f:2,c:30348},v19450={f:2,c:30351},v19451={f:2,c:30356},v19452={f:2,c:30359},v19453={f:9,c:30363},v19454={f:9,c:30373},v19455={f:2,c:30383},v19456={f:3,c:30389},v19457={f:4,c:30395},v19458={f:2,c:30400},v19459={f:2,c:30403},v19460={f:2,c:30411},v19461={f:2,c:30425},v19462={f:2,c:30428},v19463={f:6,c:30440},v19464={f:3,c:30453},v19465={f:2,c:30458},v19466={f:2,c:30463},v19467={f:2,c:30466},v19468={f:2,c:30469},v19469={f:11,c:30478},v19470={f:4,c:30491},v19471={f:3,c:30499},v19472=
{f:3,c:30506},v19473={f:5,c:30512},v19474={f:3,c:30525},v19475={f:3,c:30532},v19476={f:7,c:30536},v19477={f:8,c:30546},v19478={f:2,c:30556},v19479={f:2,c:30559},v19480={f:2,c:30569},v19481={f:12,c:30573},v19482={f:3,c:30586},v19483={f:3,c:30593},v19484={f:6,c:30598},v19485={f:2,c:30607},v19486={f:5,c:30611},v19487={f:5,c:30617},v19488={f:2,c:30627},v19489={f:2,c:30638},v19490={f:2,c:30641},v19491={f:5,c:30646},v19492={f:7,c:30656},v19493={f:5,c:30664},v19494={f:9,c:30670},v19495={f:2,c:30680},v19496=
{f:5,c:30685},v19497={f:3,c:30704},v19498={f:2,c:30708},v19499={f:4,c:30713},v19500={f:6,c:30723},v19501={f:2,c:30730},v19502={f:3,c:30734},v19503={f:3,c:30752},v19504={f:2,c:30762},v19505={f:2,c:30766},v19506={f:3,c:30769},v19507={f:2,c:30773},v19508={f:2,c:30785},v19509={f:4,c:30792},v19510={f:2,c:30803},v19511={f:5,c:30808},v19512={f:6,c:30814},v19513={f:3,c:30821},v19514={f:7,c:30832},v19515={f:4,c:30840},v19516={f:10,c:30845},v19517={f:2,c:30858},v19518={f:2,c:30863},v19519={f:3,c:30868},v19520=
{f:2,c:30877},v19521={f:3,c:30890},v19522={f:2,c:30894},v19523={f:3,c:30901},v19524={f:2,c:30911},v19525={f:3,c:30914},v19526={f:3,c:30918},v19527={f:4,c:30924},v19528={f:3,c:30929},v19529={f:3,c:30934},v19530={f:8,c:30939},v19531={f:3,c:30948},v19532={f:3,c:30953},v19533={f:2,c:30957},v19534={f:2,c:30960},v19535={f:2,c:30965},v19536={f:2,c:30968},v19537={f:2,c:30971},v19538={f:3,c:30974},v19539={f:3,c:30978},v19540={f:8,c:30982},v19541={f:4,c:30991},v19542={f:5,c:30996},v19543={f:4,c:31002},v19544=
{f:5,c:31007},v19545={f:3,c:31015},v19546={f:4,c:31021},v19547={f:2,c:31026},v19548={f:5,c:31029},v19549={f:4,c:31042},v19550={f:9,c:31050},v19551={f:2,c:31060},v19552={f:2,c:31064},v19553={f:2,c:31075},v19554={f:4,c:31081},v19555={f:7,c:31088},v19556={f:5,c:31099},v19557={f:2,c:31106},v19558={f:4,c:31110},v19559={f:2,c:31115},v19560={f:10,c:31120},v19561={f:11,c:31131},v19562={f:2,c:31144},v19563={f:3,c:31147},v19564={f:4,c:31156},v19565=[12145,31160],v19566={f:2,c:31172},v19567={f:2,c:31175},v19568=
{f:3,c:31182},v19569={f:2,c:31187},v19570={f:2,c:31190},v19571={f:6,c:31193},v19572={f:3,c:31200},v19573={f:7,c:31217},v19574={f:2,c:31225},v19575={f:2,c:31230},v19576={f:2,c:31236},v19577={f:4,c:31239},v19578={f:5,c:31247},v19579={f:2,c:31253},v19580={f:2,c:31256},v19581={f:3,c:31259},v19582={f:2,c:31265},v19583={f:10,c:31268},v19584={f:2,c:31279},v19585={f:3,c:31284},v19586={f:5,c:31297},v19587={f:5,c:31303},v19588={f:2,c:31311},v19589={f:5,c:31314},v19590={f:9,c:31320},v19591={f:6,c:31331},v19592=
{f:4,c:31340},v19593={f:3,c:31345},v19594={f:4,c:31355},v19595={f:4,c:31369},v19596={f:3,c:31374},v19597={f:2,c:31379},v19598={f:3,c:31385},v19599={f:4,c:31393},v19600={f:4,c:31407},v19601={f:2,c:31412},v19602={f:3,c:31415},v19603={f:4,c:31419},v19604={f:4,c:31424},v19605={f:10,c:31436},v19606={f:2,c:31447},v19607={f:4,c:31450},v19608={f:2,c:31457},v19609={f:3,c:31463},v19610={f:2,c:31467},v19611={f:6,c:31472},v19612={f:2,c:31479},v19613={f:2,c:31483},v19614={f:3,c:31488},v19615={f:3,c:31500},v19616=
{f:2,c:31506},v19617={f:3,c:31510},v19618={f:2,c:31516},v19619={f:3,c:31521},v19620={f:2,c:31535},v19621={f:4,c:31540},v19622={f:6,c:31551},v19623={f:2,c:31565},v19624={f:2,c:31582},v19625={f:4,c:31587},v19626={f:6,c:31592},v19627={f:2,c:31599},v19628={f:2,c:31603},v19629={f:2,c:31612},v19630={f:4,c:31617},v19631={f:5,c:31622},v19632={f:2,c:31630},v19633={f:3,c:31633},v19634={f:4,c:31640},v19635={f:3,c:31646},v19636={f:3,c:31651},v19637={f:3,c:31662},v19638={f:2,c:31666},v19639={f:3,c:31669},v19640=
{f:7,c:31673},v19641={f:2,c:31682},v19642={f:4,c:31693},v19643={f:5,c:31700},v19644={f:2,c:31707},v19645={f:3,c:31710},v19646={f:2,c:31714},v19647={f:2,c:31719},v19648={f:3,c:31723},v19649={f:2,c:31727},v19650={f:3,c:31732},v19651={f:4,c:31736},v19652={f:6,c:31745},v19653={f:3,c:31752},v19654={f:6,c:31760},v19655={f:7,c:31767},v19656={f:2,c:31780},v19657={f:2,c:31784},v19658={f:12,c:31788},v19659={f:4,c:31801},v19660={f:8,c:31812},v19661={f:14,c:31822},v19662={f:2,c:31837},v19663={f:3,c:31841},v19664=
{f:4,c:31845},v19665={f:3,c:31855},v19666={f:6,c:31861},v19667={f:11,c:31870},v19668={f:7,c:31882},v19669={f:2,c:31891},v19670={f:3,c:31897},v19671={f:2,c:31904},v19672={f:4,c:31910},v19673={f:3,c:31915},v19674={f:2,c:31919},v19675={f:5,c:31924},v19676={f:2,c:31930},v19677={f:2,c:31935},v19678={f:3,c:31938},v19679={f:7,c:31950},v19680={f:2,c:31962},v19681={f:6,c:31969},v19682={f:6,c:31977},v19683={f:2,c:31996},v19684={f:2,c:32014},v19685={f:2,c:32017},v19686={f:3,c:32029},v19687={f:4,c:32035},v19688=
{f:3,c:32040},v19689={f:3,c:32044},v19690={f:5,c:32052},v19691={f:2,c:32061},v19692={f:7,c:32071},v19693={f:12,c:32081},v19694={f:2,c:32095},v19695={f:3,c:32099},v19696={f:5,c:32105},v19697={f:2,c:32111},v19698={f:2,c:32116},v19699={f:7,c:32122},v19700={f:2,c:32132},v19701={f:5,c:32138},v19702={f:3,c:32144},v19703={f:8,c:32148},v19704={f:3,c:32159},v19705={f:2,c:32164},v19706={f:4,c:32167},v19707={f:3,c:32181},v19708={f:4,c:32192},v19709={f:2,c:32197},v19710={f:2,c:32200},v19711={f:5,c:32204},v19712=
{f:2,c:32213},v19713={f:3,c:32218},v19714={f:2,c:32228},v19715={f:2,c:32234},v19716={f:2,c:32237},v19717={f:2,c:32247},v19718={f:12,c:32252},v19719={f:4,c:32268},v19720={f:9,c:32274},v19721={f:3,c:32288},v19722={f:3,c:32292},v19723={f:3,c:32296},v19724={f:2,c:32303},v19725={f:2,c:32319},v19726={f:3,c:32322},v19727={f:10,c:32328},v19728={f:4,c:32342},v19729={f:3,c:32347},v19730={f:3,c:32351},v19731={f:6,c:32355},v19732={f:2,c:32369},v19733={f:5,c:32372},v19734={f:2,c:32378},v19735={f:3,c:32383},v19736=
{f:5,c:32387},v19737={f:3,c:32400},v19738={f:2,c:32409},v19739={f:2,c:32413},v19740={f:2,c:32443},v19741={f:7,c:32571},v19742={f:6,c:32582},v19743={f:2,c:32594},v19744={f:4,c:32603},v19745={f:5,c:32611},v19746={f:3,c:32619},v19747={f:2,c:32629},v19748={f:4,c:32634},v19749={f:2,c:32639},v19750={f:3,c:32642},v19751={f:5,c:32655},v19752={f:5,c:32661},v19753={f:2,c:32667},v19754={f:2,c:32674},v19755={f:5,c:32682},v19756={f:5,c:32691},v19757={f:2,c:32698},v19758={f:3,c:32706},v19759={f:4,c:32710},v19760=
{f:3,c:32719},v19761={f:2,c:32726},v19762={f:6,c:32729},v19763={f:3,c:32738},v19764={f:2,c:32743},v19765={f:4,c:32746},v19766={f:5,c:32756},v19767={f:3,c:32765},v19768={f:4,c:32775},v19769={f:2,c:32782},v19770={f:2,c:32794},v19771={f:3,c:32797},v19772={f:2,c:32803},v19773={f:2,c:32815},v19774={f:2,c:32825},v19775={f:2,c:32832},v19776={f:2,c:32836},v19777={f:3,c:32839},v19778={f:4,c:32846},v19779={f:3,c:32859},v19780={f:10,c:32863},v19781={f:4,c:32875},v19782={f:3,c:32890},v19783={f:2,c:32897},v19784=
{f:6,c:32909},v19785={f:2,c:32916},v19786={f:3,c:32934},v19787={f:2,c:32949},v19788={f:2,c:32952},v19789={f:5,c:32967},v19790={f:7,c:32975},v19791={f:2,c:32991},v19792={f:2,c:32994},v19793={f:4,c:33022},v19794={f:2,c:33027},v19795={f:2,c:33031},v19796={f:2,c:33035},v19797={f:2,c:33052},v19798={f:13,c:33055},v19799={f:2,c:33069},v19800={f:3,c:33075},v19801={f:4,c:33082},v19802={f:7,c:33087},v19803={f:2,c:33111},v19804={f:5,c:33115},v19805={f:3,c:33122},v19806={f:2,c:33138},v19807={f:3,c:33141},v19808=
{f:5,c:33155},v19809={f:4,c:33163},v19810={f:6,c:33170},v19811={f:2,c:33182},v19812={f:2,c:33185},v19813={f:2,c:33188},v19814={f:8,c:33195},v19815={f:6,c:33204},v19816={f:2,c:33220},v19817={f:2,c:33223},v19818={f:8,c:33232},v19819={f:4,c:33243},v19820={f:2,c:33249},v19821={f:3,c:33252},v19822={f:5,c:33262},v19823={f:5,c:33269},v19824={f:2,c:33294},v19825={f:6,c:33301},v19826={f:4,c:33316},v19827={f:2,c:33340},v19828={f:5,c:33343},v19829={f:2,c:33349},v19830={f:3,c:33356},v19831={f:8,c:33360},v19832=
{f:4,c:33371},v19833={f:4,c:33376},v19834={f:2,c:33385},v19835={f:2,c:33388},v19836={f:2,c:33397},v19837=[12171,33400],v19838={f:2,c:33403},v19839={f:2,c:33408},v19840={f:3,c:33413},v19841={f:4,c:33427},v19842={f:2,c:33434},v19843={f:2,c:33442},v19844={f:2,c:33461},v19845={f:2,c:33471},v19846={f:2,c:33474},v19847={f:2,c:33477},v19848={f:2,c:33497},v19849={f:3,c:33512},v19850={f:3,c:33516},v19851={f:2,c:33522},v19852={f:2,c:33525},v19853={f:5,c:33532},v19854={f:2,c:33546},v19855={f:2,c:33554},v19856=
{f:2,c:33560},v19857={f:10,c:33565},v19858={f:2,c:33577},v19859={f:3,c:33597},v19860={f:2,c:33601},v19861={f:2,c:33604},v19862={f:5,c:33610},v19863={f:5,c:33621},v19864={f:7,c:33648},v19865={f:2,c:33657},v19866={f:7,c:33662},v19867={f:2,c:33671},v19868={f:3,c:33675},v19869={f:3,c:33679},v19870={f:2,c:33684},v19871={f:2,c:33689},v19872={f:4,c:33699},v19873={f:4,c:33708},v19874={f:2,c:33726},v19875={f:3,c:33730},v19876={f:2,c:33736},v19877={f:2,c:33741},v19878={f:4,c:33744},v19879={f:3,c:33753},v19880=
{f:3,c:33762},v19881={f:3,c:33766},v19882={f:4,c:33771},v19883={f:5,c:33779},v19884={f:3,c:33786},v19885={f:3,c:33790},v19886={f:2,c:33800},v19887={f:6,c:33810},v19888={f:3,c:33817},v19889={f:6,c:33822},v19890={f:3,c:33833},v19891={f:4,c:33837},v19892={f:3,c:33842},v19893={f:2,c:33846},v19894={f:3,c:33849},v19895={f:8,c:33854},v19896={f:2,c:33863},v19897={f:7,c:33866},v19898={f:4,c:33875},v19899={f:4,c:33885},v19900={f:2,c:33895},v19901={f:7,c:33915},v19902={f:4,c:33923},v19903={f:4,c:33935},v19904=
{f:2,c:33941},v19905={f:2,c:33946},v19906={f:4,c:33949},v19907={f:13,c:33954},v19908={f:2,c:33968},v19909={f:3,c:33973},v19910={f:2,c:33986},v19911={f:4,c:33989},v19912={f:2,c:33998},v19913={f:2,c:34004},v19914={f:6,c:34007},v19915={f:2,c:34017},v19916={f:5,c:34023},v19917={f:11,c:34033},v19918={f:12,c:34048},v19919={f:4,c:34061},v19920={f:2,c:34069},v19921={f:2,c:34072},v19922={f:3,c:34075},v19923={f:2,c:34084},v19924={f:4,c:34087},v19925={f:9,c:34094},v19926={f:3,c:34110},v19927={f:2,c:34116},v19928=
{f:3,c:34123},v19929={f:3,c:34127},v19930={f:4,c:34138},v19931={f:3,c:34143},v19932={f:3,c:34149},v19933={f:2,c:34155},v19934={f:4,c:34158},v19935={f:2,c:34165},v19936={f:2,c:34172},v19937={f:5,c:34175},v19938={f:2,c:34189},v19939={f:2,c:34194},v19940={f:6,c:34197},v19941={f:2,c:34205},v19942={f:4,c:34208},v19943={f:3,c:34219},v19944={f:6,c:34225},v19945={f:6,c:34235},v19946={f:7,c:34242},v19947={f:3,c:34250},v19948={f:2,c:34257},v19949={f:6,c:34262},v19950={f:6,c:34270},v19951={f:3,c:34278},v19952=
{f:9,c:34283},v19953={f:2,c:34295},v19954={f:3,c:34300},v19955={f:4,c:34304},v19956={f:3,c:34312},v19957={f:5,c:34316},v19958={f:4,c:34322},v19959={f:3,c:34327},v19960={f:3,c:34331},v19961={f:3,c:34335},v19962={f:4,c:34339},v19963={f:3,c:34346},v19964={f:10,c:34350},v19965={f:2,c:34365},v19966={f:13,c:34368},v19967={f:2,c:34386},v19968={f:4,c:34390},v19969={f:2,c:34400},v19970={f:4,c:34403},v19971={f:3,c:34408},v19972={f:2,c:34415},v19973={f:7,c:34418},v19974={f:7,c:34435},v19975={f:5,c:34446},v19976=
{f:6,c:34454},v19977={f:5,c:34462},v19978={f:2,c:34469},v19979={f:2,c:34477},v19980={f:2,c:34482},v19981={f:3,c:34487},v19982={f:5,c:34491},v19983={f:3,c:34497},v19984={f:2,c:34508},v19985={f:2,c:34514},v19986={f:3,c:34517},v19987={f:2,c:34524},v19988={f:4,c:34528},v19989={f:4,c:34533},v19990={f:3,c:34538},v19991={f:3,c:34549},v19992={f:3,c:34555},v19993={f:2,c:34564},v19994={f:2,c:34571},v19995={f:4,c:34574},v19996={f:2,c:34591},v19997={f:3,c:34598},v19998={f:4,c:34602},v19999={f:2,c:34607},v20000=
{f:2,c:34610},v20001={f:2,c:34613},v20002={f:3,c:34616},v20003={f:2,c:34620},v20004={f:7,c:34624},v20005={f:2,c:34634},v20006={f:4,c:34639},v20007={f:6,c:34650},v20008={f:2,c:34657},v20009={f:7,c:34663},v20010={f:3,c:34673},v20011={f:2,c:34681},v20012={f:3,c:34687},v20013={f:2,c:34694},v20014={f:2,c:34697},v20015={f:5,c:34702},v20016={f:3,c:34708},v20017={f:6,c:34712},v20018={f:2,c:34720},v20019={f:5,c:34723},v20020={f:2,c:34729},v20021={f:3,c:34736},v20022={f:4,c:34742},v20023={f:2,c:34750},v20024=
{f:3,c:34753},v20025={f:2,c:34764},v20026={f:2,c:34767},v20027={f:7,c:34772},v20028={f:4,c:34780},v20029={f:2,c:34785},v20030={f:4,c:34790},v20031={f:2,c:34800},v20032={f:3,c:34803},v20033={f:2,c:34807},v20034={f:2,c:34812},v20035={f:4,c:34815},v20036={f:3,c:34823},v20037={f:5,c:34827},v20038={f:4,c:34839},v20039={f:3,c:34844},v20040={f:13,c:34852},v20041={f:3,c:34867},v20042={f:2,c:34871},v20043={f:3,c:34877},v20044={f:3,c:34881},v20045={f:3,c:34887},v20046={f:5,c:34894},v20047={f:2,c:34901},v20048=
{f:3,c:34910},v20049={f:2,c:34918},v20050={f:4,c:34931},v20051={f:3,c:34938},v20052={f:2,c:34950},v20053={f:2,c:34953},v20054={f:4,c:34958},v20055={f:3,c:34963},v20056={f:5,c:34967},v20057={f:5,c:34973},v20058={f:6,c:34981},v20059={f:3,c:34990},v20060={f:5,c:34994},v20061={f:4,c:35E3},v20062={f:4,c:35005},v20063={f:2,c:35011},v20064={f:2,c:35015},v20065={f:3,c:35019},v20066={f:2,c:35024},v20067={f:2,c:35030},v20068={f:2,c:35034},v20069={f:2,c:35040},v20070={f:2,c:35046},v20071={f:7,c:35049},v20072=
{f:3,c:35061},v20073={f:2,c:35066},v20074={f:3,c:35071},v20075={f:4,c:35075},v20076={f:2,c:35080},v20077={f:5,c:35083},v20078={f:5,c:35092},v20079={f:5,c:35100},v20080={f:3,c:35106},v20081={f:4,c:35110},v20082={f:4,c:35116},v20083={f:2,c:35129},v20084={f:5,c:35132},v20085={f:2,c:35138},v20086={f:2,c:35141},v20087={f:14,c:35144},v20088={f:6,c:35159},v20089={f:3,c:35169},v20090={f:3,c:35175},v20091={f:2,c:35181},v20092={f:2,c:35184},v20093={f:8,c:35187},v20094={f:2,c:35196},v20095=[12177,35198],v20096=
{f:2,c:35204},v20097={f:4,c:35207},v20098={f:3,c:35212},v20099={f:3,c:35216},v20100={f:2,c:35220},v20101={f:8,c:35225},v20102={f:4,c:35234},v20103={f:3,c:35239},v20104={f:2,c:35245},v20105={f:2,c:35248},v20106={f:4,c:35251},v20107={f:2,c:35256},v20108={f:2,c:35259},v20109={f:3,c:35283},v20110={f:3,c:35287},v20111={f:4,c:35295},v20112={f:4,c:35303},v20113={f:3,c:35308},v20114={f:3,c:35312},v20115={f:7,c:35321},v20116={f:3,c:35332},v20117={f:2,c:35345},v20118={f:2,c:35353},v20119={f:3,c:35360},v20120=
{f:4,c:35366},v20121={f:2,c:35371},v20122={f:3,c:35374},v20123={f:2,c:35378},v20124={f:3,c:35383},v20125={f:3,c:35387},v20126={f:2,c:35391},v20127={f:4,c:35394},v20128={f:5,c:35401},v20129={f:2,c:35414},v20130={f:2,c:35417},v20131={f:2,c:35420},v20132={f:2,c:35423},v20133={f:2,c:35428},v20134={f:2,c:35431},v20135={f:3,c:35446},v20136={f:2,c:35450},v20137={f:2,c:35453},v20138={f:4,c:35456},v20139={f:2,c:35467},v20140={f:3,c:35470},v20141={f:2,c:35478},v20142={f:3,c:35483},v20143={f:3,c:35497},v20144=
{f:3,c:35501},v20145={f:3,c:35507},v20146={f:2,c:35511},v20147={f:2,c:35514},v20148={f:2,c:35517},v20149={f:2,c:35520},v20150={f:2,c:35525},v20151={f:3,c:35539},v20152={f:3,c:35544},v20153={f:3,c:35551},v20154={f:3,c:35560},v20155={f:2,c:35567},v20156={f:2,c:35572},v20157={f:2,c:35592},v20158={f:3,c:35595},v20159={f:3,c:35601},v20160={f:3,c:35614},v20161={f:4,c:35618},v20162={f:2,c:35625},v20163={f:5,c:35630},v20164={f:5,c:35636},v20165={f:4,c:35642},v20166={f:10,c:35647},v20167={f:4,c:35658},v20168=
{f:6,c:35664},v20169={f:9,c:35677},v20170={f:4,c:35687},v20171={f:2,c:35693},v20172={f:3,c:35697},v20173={f:2,c:35701},v20174={f:5,c:35704},v20175={f:2,c:35710},v20176={f:9,c:35713},v20177={f:3,c:35723},v20178={f:3,c:35727},v20179={f:5,c:35735},v20180={f:9,c:35896},v20181={f:4,c:35906},v20182={f:2,c:35914},v20183={f:3,c:35917},v20184={f:4,c:35921},v20185={f:4,c:35926},v20186={f:6,c:35931},v20187={f:7,c:35939},v20188={f:7,c:35948},v20189={f:4,c:35956},v20190={f:7,c:35963},v20191={f:2,c:35971},v20192=
{f:3,c:35974},v20193={f:7,c:35981},v20194={f:3,c:35989},v20195={f:4,c:35993},v20196={f:4,c:36003},v20197={f:2,c:36013},v20198={f:6,c:36043},v20199={f:4,c:36054},v20200={f:2,c:36072},v20201={f:6,c:36078},v20202={f:5,c:36085},v20203={f:5,c:36095},v20204={f:2,c:36102},v20205={f:5,c:36113},v20206={f:4,c:36119},v20207={f:2,c:36177},v20208={f:3,c:36200},v20209={f:2,c:36206},v20210={f:2,c:36209},v20211={f:9,c:36216},v20212={f:2,c:36226},v20213={f:4,c:36230},v20214={f:5,c:36236},v20215={f:2,c:36242},v20216=
{f:3,c:36246},v20217={f:5,c:36250},v20218={f:3,c:36256},v20219={f:4,c:36260},v20220={f:8,c:36265},v20221={f:2,c:36278},v20222={f:3,c:36288},v20223={f:4,c:36295},v20224={f:4,c:36306},v20225={f:2,c:36312},v20226={f:3,c:36320},v20227={f:3,c:36325},v20228={f:2,c:36333},v20229={f:3,c:36336},v20230={f:7,c:36350},v20231={f:3,c:36358},v20232={f:2,c:36365},v20233={f:3,c:36369},v20234={f:8,c:36373},v20235={f:2,c:36384},v20236={f:5,c:36388},v20237={f:2,c:36402},v20238={f:3,c:36406},v20239={f:2,c:36411},v20240=
{f:2,c:36414},v20241={f:2,c:36421},v20242={f:4,c:36429},v20243={f:2,c:36435},v20244={f:3,c:36438},v20245={f:9,c:36442},v20246={f:2,c:36452},v20247={f:2,c:36455},v20248={f:2,c:36458},v20249={f:3,c:36471},v20250={f:2,c:36477},v20251={f:3,c:36482},v20252={f:5,c:36501},v20253={f:2,c:36511},v20254={f:3,c:36514},v20255={f:3,c:36519},v20256={f:2,c:36525},v20257={f:2,c:36528},v20258={f:7,c:36531},v20259={f:5,c:36539},v20260={f:9,c:36545},v20261={f:3,c:36559},v20262={f:6,c:36565},v20263={f:3,c:36572},v20264=
{f:4,c:36576},v20265={f:6,c:36581},v20266={f:6,c:36588},v20267={f:5,c:36595},v20268={f:4,c:36607},v20269={f:7,c:36619},v20270={f:5,c:36630},v20271={f:5,c:36640},v20272={f:2,c:36647},v20273={f:4,c:36651},v20274={f:3,c:36656},v20275={f:4,c:36660},v20276={f:2,c:36665},v20277={f:2,c:36668},v20278={f:2,c:36672},v20279={f:2,c:36679},v20280={f:3,c:36682},v20281={f:5,c:36687},v20282={f:10,c:36693},v20283={f:3,c:36768},v20284={f:2,c:36772},v20285={f:2,c:36787},v20286=[12193,36789],v20287={f:2,c:36791},v20288=
{f:3,c:36794},v20289={f:2,c:36799},v20290={f:5,c:36809},v20291={f:2,c:36822},v20292={f:2,c:36832},v20293={f:2,c:36849},v20294={f:2,c:36853},v20295={f:3,c:36858},v20296={f:2,c:36862},v20297={f:2,c:36871},v20298={f:2,c:36900},v20299={f:6,c:36903},v20300={f:2,c:36912},v20301={f:2,c:36915},v20302={f:2,c:36921},v20303={f:2,c:36927},v20304={f:2,c:36933},v20305={f:3,c:36936},v20306={f:2,c:36953},v20307={f:2,c:36966},v20308={f:3,c:36970},v20309={f:3,c:36975},v20310={f:2,c:36997},v20311={f:3,c:37004},v20312=
{f:3,c:37022},v20313={f:2,c:37028},v20314={f:3,c:37031},v20315={f:2,c:37052},v20316={f:2,c:37055},v20317={f:2,c:37058},v20318={f:2,c:37064},v20319={f:3,c:37067},v20320={f:3,c:37076},v20321={f:3,c:37080},v20322={f:3,c:37091},v20323={f:2,c:37097},v20324={f:4,c:37104},v20325={f:2,c:37110},v20326={f:4,c:37113},v20327={f:3,c:37119},v20328={f:2,c:37127},v20329={f:8,c:37130},v20330={f:2,c:37143},v20331={f:4,c:37146},v20332={f:3,c:37151},v20333={f:3,c:37156},v20334={f:5,c:37160},v20335={f:2,c:37175},v20336=
{f:8,c:37179},v20337={f:2,c:37188},v20338={f:4,c:37203},v20339={f:2,c:37208},v20340={f:2,c:37211},v20341={f:2,c:37215},v20342={f:3,c:37222},v20343={f:3,c:37242},v20344={f:5,c:37248},v20345={f:2,c:37262},v20346={f:3,c:37267},v20347={f:3,c:37271},v20348={f:5,c:37277},v20349={f:6,c:37284},v20350={f:4,c:37296},v20351={f:4,c:37302},v20352={f:5,c:37307},v20353=[12196,37318],v20354={f:2,c:37338},v20355={f:5,c:37342},v20356={f:2,c:37349},v20357={f:11,c:37354},v20358={f:5,c:37371},v20359={f:2,c:37378},v20360=
{f:3,c:37381},v20361={f:3,c:37386},v20362={f:2,c:37394},v20363={f:8,c:37398},v20364={f:4,c:37407},v20365={f:6,c:37416},v20366={f:2,c:37425},v20367={f:2,c:37429},v20368={f:2,c:37435},v20369={f:4,c:37441},v20370={f:2,c:37446},v20371={f:3,c:37450},v20372={f:3,c:37454},v20373={f:3,c:37458},v20374={f:2,c:37464},v20375={f:2,c:37468},v20376={f:3,c:37471},v20377={f:3,c:37475},v20378={f:5,c:37479},v20379={f:6,c:37486},v20380={f:3,c:37493},v20381={f:3,c:37500},v20382={f:2,c:37505},v20383={f:8,c:37510},v20384=
{f:2,c:37519},v20385={f:2,c:37524},v20386={f:3,c:37533},v20387={f:2,c:37537},v20388={f:2,c:37551},v20389={f:5,c:37554},v20390={f:4,c:37565},v20391={f:3,c:37577},v20392={f:2,c:37581},v20393={f:2,c:37584},v20394={f:10,c:37587},v20395={f:3,c:37600},v20396={f:2,c:37611},v20397={f:4,c:37618},v20398={f:3,c:37625},v20399={f:4,c:37629},v20400={f:4,c:37634},v20401={f:7,c:37641},v20402={f:2,c:37651},v20403={f:2,c:37654},v20404={f:3,c:37660},v20405={f:3,c:37667},v20406={f:2,c:37673},v20407={f:2,c:37676},v20408=
{f:2,c:37680},v20409={f:2,c:37684},v20410={f:5,c:37689},v20411={f:2,c:37700},v20412={f:3,c:37704},v20413={f:6,c:37710},v20414={f:3,c:37717},v20415={f:2,c:37721},v20416={f:8,c:37724},v20417={f:3,c:37734},v20418={f:3,c:37741},v20419={f:4,c:37745},v20420={f:3,c:37751},v20421={f:3,c:37755},v20422={f:3,c:37759},v20423={f:2,c:37765},v20424={f:2,c:37768},v20425={f:4,c:37771},v20426={f:6,c:37776},v20427={f:9,c:37785},v20428={f:2,c:37796},v20429={f:2,c:37809},v20430={f:2,c:37814},v20431={f:6,c:37817},v20432=
{f:3,c:37824},v20433={f:3,c:37828},v20434={f:3,c:37838},v20435={f:4,c:37842},v20436={f:3,c:37849},v20437={f:3,c:37861},v20438={f:12,c:37865},v20439={f:9,c:37882},v20440={f:7,c:37892},v20441={f:4,c:37900},v20442={f:3,c:37909},v20443={f:3,c:37914},v20444={f:2,c:37918},v20445={f:5,c:37921},v20446={f:5,c:37929},v20447={f:3,c:37935},v20448={f:2,c:37942},v20449={f:3,c:37947},v20450={f:4,c:37952},v20451={f:5,c:37957},v20452={f:5,c:37965},v20453={f:11,c:37973},v20454={f:2,c:37985},v20455={f:5,c:37990},v20456=
{f:2,c:37998},v20457={f:4,c:38003},v20458={f:2,c:38010},v20459={f:5,c:38016},v20460={f:2,c:38099},v20461={f:2,c:38260},v20462={f:7,c:38264},v20463={f:2,c:38276},v20464={f:2,c:38279},v20465={f:3,c:38293},v20466={f:8,c:38297},v20467={f:2,c:38310},v20468={f:4,c:38318},v20469={f:3,c:38323},v20470={f:2,c:38327},v20471={f:3,c:38336},v20472={f:2,c:38340},v20473={f:3,c:38349},v20474={f:3,c:38353},v20475={f:5,c:38359},v20476={f:2,c:38367},v20477={f:2,c:38371},v20478={f:2,c:38374},v20479={f:7,c:38435},v20480=
{f:3,c:38443},v20481={f:2,c:38447},v20482={f:4,c:38455},v20483={f:2,c:38478},v20484={f:3,c:38481},v20485={f:2,c:38486},v20486={f:2,c:38489},v20487={f:2,c:38501},v20488={f:3,c:38509},v20489={f:4,c:38521},v20490={f:7,c:38526},v20491={f:3,c:38545},v20492={f:10,c:38557},v20493={f:5,c:38571},v20494={f:2,c:38594},v20495={f:2,c:38602},v20496={f:2,c:38608},v20497={f:2,c:38611},v20498={f:2,c:38615},v20499={f:3,c:38621},v20500={f:4,c:38628},v20501={f:4,c:38635},v20502={f:2,c:38640},v20503={f:2,c:38644},v20504=
{f:2,c:38652},v20505={f:2,c:38658},v20506={f:3,c:38666},v20507={f:3,c:38672},v20508={f:2,c:38676},v20509={f:5,c:38679},v20510={f:8,c:38687},v20511={f:2,c:38696},v20512={f:2,c:38699},v20513={f:2,c:38702},v20514={f:5,c:38707},v20515={f:3,c:38714},v20516={f:3,c:38719},v20517={f:3,c:38725},v20518={f:8,c:38729},v20519=[12205,38737],v20520={f:2,c:38740},v20521={f:2,c:38743},v20522={f:2,c:38748},v20523={f:2,c:38755},v20524={f:2,c:38758},v20525={f:9,c:38762},v20526={f:5,c:38775},v20527={f:8,c:38781},v20528=
{f:5,c:38790},v20529={f:3,c:38805},v20530={f:7,c:38809},v20531={f:2,c:38817},v20532={f:2,c:38820},v20533={f:4,c:38823},v20534={f:2,c:38832},v20535={f:8,c:38837},v20536={f:5,c:38846},v20537={f:2,c:38852},v20538={f:2,c:38855},v20539={f:6,c:38861},v20540={f:5,c:38868},v20541={f:2,c:38874},v20542={f:7,c:38879},v20543={f:5,c:38894},v20544={f:8,c:38903},v20545={f:3,c:38932},v20546={f:3,c:38937},v20547={f:4,c:38941},v20548={f:2,c:38946},v20549={f:6,c:38951},v20550={f:2,c:38958},v20551={f:6,c:38961},v20552=
{f:2,c:38969},v20553={f:8,c:38974},v20554={f:5,c:38983},v20555={f:4,c:38991},v20556={f:3,c:38997},v20557={f:2,c:39004},v20558={f:3,c:39007},v20559={f:2,c:39011},v20560={f:3,c:39016},v20561={f:2,c:39021},v20562={f:5,c:39081},v20563={f:2,c:39092},v20564={f:5,c:39095},v20565={f:7,c:39101},v20566={f:5,c:39113},v20567={f:2,c:39119},v20568={f:2,c:39126},v20569={f:2,c:39132},v20570={f:4,c:39139},v20571={f:2,c:39152},v20572={f:7,c:39157},v20573={f:4,c:39167},v20574={f:3,c:39174},v20575={f:2,c:39182},v20576=
{f:4,c:39188},v20577={f:2,c:39193},v20578={f:2,c:39196},v20579={f:2,c:39199},v20580={f:6,c:39202},v20581={f:5,c:39209},v20582={f:4,c:39215},v20583={f:3,c:39220},v20584={f:4,c:39224},v20585={f:3,c:39232},v20586={f:2,c:39238},v20587={f:4,c:39245},v20588={f:4,c:39256},v20589={f:3,c:39263},v20590={f:2,c:39288},v20591={f:2,c:39298},v20592={f:11,c:39322},v20593={f:2,c:39334},v20594={f:3,c:39337},v20595={f:2,c:39343},v20596={f:12,c:39349},v20597={f:14,c:39362},v20598={f:2,c:39382},v20599={f:10,c:39395},
v20600={f:3,c:39406},v20601={f:13,c:39410},v20602={f:3,c:39426},v20603={f:7,c:39430},v20604={f:6,c:39440},v20605={f:2,c:39447},v20606={f:17,c:39450},v20607={f:5,c:39473},v20608={f:5,c:39481},v20609={f:4,c:39494},v20610={f:2,c:39499},v20611={f:5,c:39504},v20612={f:2,c:39512},v20613={f:3,c:39516},v20614={f:2,c:39520},v20615={f:4,c:39526},v20616={f:2,c:39565},v20617={f:2,c:39572},v20618={f:6,c:39593},v20619={f:4,c:39602},v20620={f:3,c:39613},v20621={f:2,c:39619},v20622={f:5,c:39622},v20623={f:2,c:39629},
v20624={f:6,c:39641},v20625={f:4,c:39650},v20626={f:4,c:39655},v20627={f:9,c:39664},v20628={f:7,c:39676},v20629={f:2,c:39684},v20630={f:4,c:39689},v20631={f:3,c:39696},v20632={f:6,c:39700},v20633={f:4,c:39707},v20634={f:2,c:39712},v20635={f:4,c:39722},v20636={f:8,c:39731},v20637={f:4,c:39741},v20638={f:3,c:39754},v20639={f:2,c:39762},v20640={f:3,c:39765},v20641={f:20,c:39771},v20642={f:4,c:39792},v20643={f:2,c:39797},v20644={f:9,c:39800},v20645={f:10,c:39812},v20646={f:7,c:39827},v20647={f:2,c:39835},
v20648={f:11,c:39839},v20649={f:17,c:39855},v20650={f:5,c:39874},v20651={f:9,c:39883},v20652={f:4,c:39895},v20653={f:3,c:39902},v20654={f:2,c:39909},v20655={f:4,c:39916},v20656={f:3,c:39921},v20657={f:8,c:39925},v20658={f:8,c:39936},v20659={f:3,c:39946},v20660={f:2,c:39950},v20661={f:12,c:39956},v20662={f:2,c:39969},v20663={f:2,c:39974},v20664={f:3,c:39978},v20665={f:3,c:39982},v20666={f:2,c:39996},v20667={f:6,c:39999},v20668={f:2,c:40006},v20669={f:8,c:40010},v20670={f:4,c:40025},v20671={f:7,c:40032},
v20672={f:5,c:40040},v20673={f:10,c:40046},v20674={f:2,c:40061},v20675={f:2,c:40067},v20676={f:2,c:40073},v20677={f:4,c:40086},v20678={f:5,c:40126},v20679={f:2,c:40136},v20680={f:2,c:40145},v20681={f:2,c:40154},v20682={f:2,c:40160},v20683={f:2,c:40163},v20684={f:3,c:40166},v20685={f:2,c:40170},v20686={f:6,c:40173},v20687={f:15,c:40183},v20688={f:11,c:40202},v20689={f:5,c:40214},v20690={f:3,c:40224},v20691={f:2,c:40228},v20692={f:6,c:40233},v20693={f:10,c:40241},v20694={f:3,c:40252},v20695={f:2,c:40256},
v20696={f:14,c:40259},v20697={f:8,c:40276},v20698={f:2,c:40286},v20699={f:8,c:40290},v20700={f:2,c:40301},v20701={f:2,c:40304},v20702={f:20,c:40307},v20703={f:9,c:40330},v20704={f:4,c:40340},v20705={f:10,c:40347},v20706={f:3,c:40358},v20707={f:5,c:40362},v20708={f:4,c:40368},v20709={f:6,c:40373},v20710={f:3,c:40381},v20711={f:14,c:40389},v20712={f:3,c:40404},v20713={f:10,c:40411},v20714={f:8,c:40423},v20715={f:2,c:40432},v20716={f:4,c:40436},v20717={f:17,c:40443},v20718={f:8,c:40461},v20719={f:4,
c:40470},v20720={f:2,c:40507},v20721={f:3,c:40530},v20722={f:4,c:40543},v20723={f:2,c:40558},v20724={f:3,c:40566},v20725={f:2,c:40576},v20726={f:4,c:40579},v20727={f:2,c:40585},v20728={f:6,c:40588},v20729={f:3,c:40596},v20730={f:5,c:40600},v20731={f:5,c:40608},v20732={f:2,c:40615},v20733={f:5,c:40618},v20734={f:4,c:40624},v20735={f:2,c:40630},v20736={f:2,c:40633},v20737={f:4,c:40639},v20738=[12232,40643],v20739={f:4,c:40645},v20740={f:2,c:40650},v20741={f:2,c:40658},v20742={f:3,c:40661},v20743={f:2,
c:40665},v20744={f:2,c:40675},v20745={f:4,c:40683},v20746={f:2,c:40688},v20747={f:2,c:40693},v20748={f:9,c:40704},v20749={f:2,c:40721},v20750={f:6,c:40730},v20751={f:9,c:40739},v20752={f:2,c:40749},v20753={f:7,c:40752},v20754={f:5,c:40767},v20755={f:5,c:40773},v20756={f:3,c:40780},v20757={f:4,c:40789},v20758={f:2,c:40794},v20759={f:2,c:40797},v20760={f:2,c:40804},v20761={f:3,c:40807},v20762={f:5,c:40813},v20763={f:4,c:40819},v20764={f:7,c:40824},v20765={f:2,c:40833},v20766={f:2,c:40846},v20767={f:3,
c:40849},v20768={f:3,c:40854},v20769={f:2,c:40861},v20770={f:5,c:40865},v20771={f:3,c:64013},v20772={f:2,c:64019},v20773={f:3,c:64031},v20774={f:2,c:64035},v20775={f:3,c:64039},v20776=[59414,131207],v20777=[59415,131209],v20778=[59416,131276],v20779={f:2,c:59435},v20780=[59441,136663],v20781={f:2,c:11958},v20782=[59451,141711],v20783=[59459,132361],v20784={f:2,c:18818},v20785={f:2,c:18821},v20786=[59476,133533],v20787=[59477,147966],v20788={f:3,c:19615},v20789={f:7,c:19731},v20790={s:226},v20791=
{s:17},v20792={s:14},v20793={f:3,c:12339},v20794={f:3,c:12344},v20795={f:3,c:12586},v20796={f:24,c:12704},v20797={f:2,c:11906},v20798={f:3,c:11909},v20799={f:2,c:11913},v20800={f:10,c:11917},v20801={f:2,c:11928},v20802={f:12,c:11931},v20803={f:2,c:11944},v20804={f:3,c:11947},v20805={f:4,c:11951},v20806={f:2,c:11956},v20807={f:3,c:11960},v20808={f:14,c:11964},v20809={f:41,c:11979},v20810={f:71,c:13312},v20811={f:43,c:13384},v20812={f:298,c:13428},v20813={f:111,c:13727},v20814={f:11,c:13839},v20815=
{f:765,c:13851},v20816={f:85,c:14617},v20817={f:96,c:14703},v20818={f:14,c:14801},v20819={f:147,c:14816},v20820={f:218,c:14964},v20821={f:287,c:15183},v20822={f:113,c:15471},v20823={f:885,c:15585},v20824={f:264,c:16471},v20825={f:471,c:16736},v20826={f:116,c:17208},v20827={f:4,c:17325},v20828={f:43,c:17330},v20829={f:248,c:17374},v20830={f:373,c:17623},v20831={f:20,c:17997},v20832={f:193,c:18018},v20833={f:5,c:18212},v20834={f:82,c:18218},v20835={f:16,c:18301},v20836={f:441,c:18318},v20837={f:50,
c:18760},v20838={f:2,c:18811},v20839={f:4,c:18814},v20840={f:20,c:18823},v20841={f:3,c:18844},v20842={f:22,c:18848},v20843={f:703,c:18872},v20844={f:39,c:19576},v20845={f:111,c:19620},v20846={f:148,c:19738},v20847={f:7,c:19887},v23717=[v17552,v17553,v17554,713,711,168,12291,12293,8212,65374,8214,v17555,v17556,v17557,v17558,v17559,v17560,v17561,177,215,247,8758,v17562,8721,8719,8746,8745,8712,8759,8730,8869,8741,8736,8978,8857,8747,8750,8801,8780,8776,8765,8733,8800,v17563,v17564,8734,8757,8756,9794,
9792,176,v17565,8451,65284,164,v17566,8240,167,8470,9734,9733,9675,9679,9678,9671,9670,9633,9632,9651,9650,8251,8594,v17567,8595,12307,v17568,v17569,v17570,v17571,v17572,v17573,65509,v17574,65507,v17575,v17576,v17577,v17578,v17579,v17580,v17581,v17582,v17583,v17584,v17585,v17586,v17587,v17588,v17589,65073,59286,v17590,v17591,1025,v17592,1105,v17593,257,225,462,224,275,233,283,232,299,237,464,236,333,243,466,242,363,250,468,249,470,472,474,476,252,234,593,7743,324,328,505,609,v17594,0,v17595,v17596,
21834,38463,22467,25384,21710,21769,21696,30353,30284,34108,30702,33406,30861,29233,38552,38797,27688,23433,20474,25353,26263,23736,33018,26696,32942,26114,30414,20985,25942,29100,32753,34948,20658,22885,25034,28595,33453,25420,25170,21485,21543,31494,v17597,30116,24052,25300,36299,38774,25226,32793,22365,38712,32610,29240,v17598,26575,30334,25670,20336,36133,25308,31255,26001,29677,25644,25203,33324,39041,26495,29256,25198,25292,20276,29923,21322,21150,32458,37030,24110,26758,27036,33152,32465,26834,
30917,34444,38225,20621,35876,33502,32990,21253,35090,21093,34180,38649,20445,22561,39281,23453,25265,25253,26292,35961,40077,29190,26479,30865,24754,21329,21271,36744,32972,36125,38049,20493,29384,22791,24811,28953,34987,22868,33519,26412,31528,23849,32503,29997,27893,36454,36856,36924,v17599,v17600,37145,31508,24444,30887,34006,34109,27605,27609,27606,24065,24199,30201,38381,25949,24330,24517,36767,22721,33218,36991,38491,38829,36793,32534,36140,25153,20415,21464,21342,v17601,36779,36941,26631,
24426,33176,34920,40150,24971,21035,30250,24428,25996,28626,28392,23486,25672,20853,20912,26564,19993,31177,39292,28851,30149,24182,29627,33760,25773,25320,38069,27874,21338,21187,25615,38082,31636,20271,24091,33334,33046,33162,28196,27850,39539,25429,v17602,21754,34917,22496,19981,24067,27493,31807,37096,24598,25830,29468,35009,26448,25165,36130,30572,36393,37319,24425,33756,34081,39184,21442,34453,27531,24813,24808,28799,33485,33329,20179,27815,34255,25805,31961,27133,26361,33609,21397,31574,20391,
20876,27979,23618,36461,25554,21449,33580,33590,26597,30900,25661,23519,23700,24046,35815,25286,26612,35962,25600,25530,34633,39307,35863,32544,38130,20135,38416,39076,26124,29462,22330,23581,24120,38271,20607,32928,v17603,25950,30021,21809,20513,36229,25220,38046,26397,22066,28526,24034,21557,28818,36710,25199,25764,25507,24443,28552,37108,v17604,v17605,23576,26216,24561,27785,38472,36225,34924,25745,31216,22478,27225,25104,21576,20056,31243,24809,28548,35802,25215,36894,39563,31204,21507,30196,
25345,21273,27744,36831,24347,39536,32827,40831,20360,23610,v17606,32709,26021,28861,20805,20914,v17607,23815,23456,25277,37228,30068,36364],v23719=[31264,24833,31609,20167,32504,30597,19985,33261,21021,20986,27249,21416,36487,38148,38607,28353,38500,26970,30784,20648,30679,25616,35302,22788,25571,24029,31359,26941,20256,33337,21912,20018,30126,31383,24162,24202,38383,21019,21561,28810,25462,38180,22402,26149,26943,37255,21767,28147,32431,34850,25139,32496,30133,33576,30913,38604,36766,24904,29943,
35789,27492,21050,36176,27425,32874,33905,22257,21254,20174,19995,20945,31895,37259,31751,20419,36479,31713,31388,25703,23828,20652,33030,30209,31929,28140,32736,26449,23384,v17608,30923,25774,25619,25514,25387,38169,25645,36798,31572,30249,25171,v17609,21574,v17610,20643,25140,24102,27526,20195,36151,34955,24453,36910,24608,32829,25285,20025,21333,37112,25528,32966,26086,27694,20294,24814,28129,35806,24377,34507,24403,25377,20826,33633,26723,v17611,25443,36424,20498,23707,31095,23548,21040,31291,
24764,36947,30423,24503,24471,30340,36460,28783,30331,31561,30634,20979,37011,22564,20302,28404,36842,25932,31515,29380,28068,32735,23265,25269,24213,22320,33922,31532,24093,24351,36882,32532,39072,25474,28359,30872,28857,20856,38747,22443,30005,20291,30008,24215,24806,22880,28096,27583,30857,21500,38613,20939,20993,25481,21514,38035,35843,36300,29241,30879,34678,36845,35853,21472,19969,30447,21486,38025,39030,v17612,38189,23450,35746,20002,19996,20908,33891,25026,21160,26635,20375,24683,20923,27934,
20828,25238,v17613,38497,v17614,36887,30168,37117,30563,27602,29322,29420,35835,22581,30585,36172,26460,38208,32922,24230,28193,22930,31471,30701,38203,27573,26029,32526,22534,20817,38431,23545,22697,21544,36466,25958,39039,22244,38045,30462,36929,25479,21702,22810,22842,22427,36530,26421,36346,33333,21057,24816,22549,34558,23784,40517,20420,39069,35769,23077,24694,21380,25212,36943,37122,39295,24681,v17615,v17616,v17617,23572,39285,27953,v17618,36144,21457,32602,31567,20240,20047,38400,27861,29648,
34281,24070,30058,32763,27146,30718,38034,32321,20961,28902,21453,36820,33539,36137,29359,39277,27867,22346,33459,v17619,32938,25151,38450,22952,20223,35775,32442,25918,33778,v17620,21857,39134,32933,21290,35837,21536,32954,24223,27832,36153,33452,37210,21545,27675,20998,32439,22367,28954,27774,31881,22859,20221,24575,24868,31914,20016,23553,26539,34562,23792,38155,39118,30127,28925,36898,20911,32541,35773,22857,20964,20315,21542,22827,25975,32932,23413,25206,25282,36752,24133,27679,31526,20239,20440,
26381,28014,28074,31119,34993,24343,29995,25242,36741,20463,37340,26023,33071,33105,24220,33104,36212,21103,35206,36171,22797,20613,20184,v17621,v17622,33145,36127,23500,35747,38468,22919,32538,21648,22134,22030,35813,25913,27010,38041,30422,28297,v17623,v17624,26438,26577,31487,32925,36214,24863,31174,25954,36195,20872,21018,38050,32568,32923,32434,23703,28207,26464,31705,30347,v17625,33167,32660,31957,25630,38224,31295,21578,21733,27468,25601,v17626,40509,33011,30105,21106,v17627,33883,26684,34532,
38401,38548,38124,20010,21508,32473,26681,36319,32789,26356,24218,32697,22466,32831,26775,v17628,25915,21151,24685,40858,20379,36524,20844,23467],v23721=[v17629,24041,27742,25329,36129,20849,38057,21246,27807,33503,29399,22434,26500,36141,22815,36764,33735,21653,31629,20272,27837,23396,22993,v17630,21476,34506,v17631,v17632,32929,25925,39038,22266,38599,21038,v17633,21072,23521,25346,35074,20054,25296,24618,26874,20851,23448,20896,35266,31649,39302,32592,24815,28748,36143,20809,v17634,36891,29808,
35268,22317,30789,24402,40863,38394,36712,v17635,35809,30328,26690,26588,36330,36149,21053,36746,28378,26829,38149,37101,22269,26524,35065,36807,21704,39608,23401,28023,27686,20133,23475,39559,37219,25E3,37039,38889,21547,28085,23506,20989,21898,32597,32752,25788,25421,26097,25022,24717,28938,27735,27721,22831,26477,33322,22741,22158,35946,27627,37085,22909,32791,21495,28009,21621,21917,33655,33743,26680,v17636,21644,20309,21512,30418,35977,38402,27827,28088,36203,35088,40548,36154,22079,v17637,30165,
24456,29408,24680,21756,20136,27178,34913,24658,36720,21700,28888,34425,40511,27946,23439,24344,32418,21897,20399,29492,21564,21402,20505,21518,21628,20046,24573,29786,22774,33899,32993,34676,29392,31946,28246,24359,34382,21804,25252,20114,27818,25143,33457,21719,21326,29502,28369,30011,21010,21270,35805,27088,24458,24576,28142,22351,27426,29615,26707,36824,32531,25442,24739,21796,30186,35938,28949,28067,23462,24187,33618,24908,40644,30970,34647,31783,30343,20976,24822,29004,26179,24140,24653,35854,
28784,25381,36745,24509,24674,34516,22238,27585,24724,24935,21321,24800,26214,36159,31229,20250,28905,27719,35763,35826,32472,33636,26127,23130,39746,27985,28151,35905,27963,20249,v17638,33719,25110,24785,38669,36135,31096,20987,22334,22522,26426,30072,31293,31215,31637,32908,39269,36857,28608,35749,40481,23020,32489,32521,21513,26497,26840,36753,31821,38598,21450,24613,30142,27762,21363,23241,32423,25380,v17639,33034,v17640,34015,25216,20864,23395,20238,31085,21058,24760,27982,23492,23490,35745,
35760,26082,24524,38469,22931,32487,32426,22025,26551,22841,20339,23478,21152,33626,39050,36158,30002,38078,20551,31292,20215,26550,39550,23233,27516,30417,22362,23574,31546,38388,29006,20860,32937,33392,22904,32516,33575,26816,26604,30897,30839,25315,25441,31616,20461,21098,20943,33616,27099,37492,36341,36145,35265,38190,31661,20214,20581,33328,21073,39279,28176,28293,28071,24314,20725,23004,23558,27974,27743,30086,33931,26728,22870,35762,21280,37233,38477,34121,26898,30977,28966,33014,20132,37066,
27975,39556,23047,22204,25605,38128,30699,20389,33050,29409,v17641,39290,32564,32478,21119,25945,37237,36735,36739,21483,31382,25581,25509,30342,31224,34903,38454,25130,21163,33410,26708,26480,25463,30571,31469,27905,32467,35299,22992,25106,34249,33445,30028,20511,20171,30117,35819,23626,v17642,31563,v17643,v17644,20170,27941,35167,32039,38182,20165,35880,36827,38771,26187,31105,36817,28908,28024,23613,21170,33606,20834,33550,30555,26230,40120,20140,24778,31934,31923,32463,20117,35686,26223,39048,
38745,22659,25964,38236,24452,30153,38742,31455,31454,20928,28847,31384,25578,31350,32416,29590,v17645,20037,28792,20061,37202,21417,25937,26087,v17646],v23723=[33285,21646,23601,30106,38816,25304,29401,30141,23621,39545,33738,23616,21632,30697,20030,27822,32858,25298,25454,24040,20855,36317,36382,38191,20465,21477,24807,28844,21095,25424,40515,23071,20518,30519,21367,32482,25733,25899,25225,25496,20500,29237,35273,20915,35776,32477,22343,33740,38055,20891,21531,23803,20426,31459,27994,37089,39567,
21888,21654,21345,21679,24320,25577,26999,20975,24936,21002,22570,21208,22350,30733,30475,24247,24951,31968,25179,25239,20130,28821,32771,25335,28900,38752,22391,33499,26607,26869,30933,39063,31185,22771,21683,21487,28212,20811,21051,23458,35838,32943,21827,22438,24691,22353,21549,31354,24656,23380,25511,25248,v17647,25187,23495,26543,21741,31391,33510,37239,24211,35044,22840,22446,25358,36328,33007,22359,31607,20393,24555,23485,27454,21281,31568,29378,26694,30719,30518,26103,20917,20111,30420,23743,
31397,33909,22862,39745,20608,39304,24871,28291,22372,26118,25414,22256,25324,25193,24275,38420,22403,25289,21895,34593,33098,36771,21862,33713,26469,36182,34013,23146,26639,25318,31726,38417,20848,28572,35888,25597,35272,25042,32518,28866,28389,29701,27028,29436,24266,37070,26391,28010,25438,21171,29282,v17648,20332,23013,37226,28889,28061,21202,20048,38647,38253,34174,30922,32047,20769,22418,25794,32907,31867,27882,26865,26974,20919,21400,26792,29313,40654,31729,29432,31163,28435,29702,26446,v17649,
40100,31036,33673,33620,21519,26647,20029,21385,21169,30782,21382,21033,20616,20363,20432,30178,v17650,31890,27813,v17651,v17652,29827,21737,20457,32852,33714,36830,38256,24265,24604,28063,24088,25947,33080,38142,24651,28860,32451,31918,20937,26753,31921,33391,20004,36742,37327,26238,20142,35845,25769,32842,20698,30103,29134,23525,36797,28518,20102,25730,38243,24278,26009,21015,35010,28872,21155,29454,29747,26519,30967,38678,20020,37051,40158,28107,20955,36161,21533,25294,29618,33777,38646,40836,
38083,20278,32666,20940,28789,38517,23725,39046,21478,20196,28316,29705,27060,30827,39311,30041,21016,30244,27969,26611,20845,40857,32843,21657,31548,31423,38534,22404,25314,38471,27004,23044,25602,31699,28431,38475,33446,21346,39045,24208,28809,25523,21348,34383,40065,40595,30860,38706,36335,36162,v17653,28510,31108,24405,38470,25134,39540,21525,38109,20387,26053,23653,23649,32533,34385,27695,24459,29575,28388,32511,23782,25371,23402,28390,21365,20081,25504,30053,25249,36718,20262,20177,27814,32438,
35770,33821,34746,32599,36923,38179,31657,39585,35064,33853,27931,39558,32476,22920,v17654,29595,30721,34434,39532,39554,22043,21527,22475,20080,40614,21334,36808,33033,30610,39314,34542,28385,34067,26364,24930,28459,35881,33426,33579,30450,27667,24537,33725,29483,33541,38170,v17655,v17656,38086,21359,33538,20882,24125,35980,36152,20040,29611,26522,26757,37238,38665,29028,27809,30473,23186,38209,27599,32654,26151,23504,22969,23194,38376,38391,20204,33804,33945,27308,30431,38192,29467,26790,23391,
30511,37274,38753,31964,36855,35868,24357,v17657,31192,35269,27852,34588,23494,24130,26825,30496,32501,20885,20813,21193,23081,32517,v17658,33495,25551],v23725=[30596,34256,31186,28218,24217,22937,34065,28781,27665,25279,v17659,25935,24751,38397,26126,34719,40483,38125,21517,21629,35884,v17660,34321,27169,33180,30952,25705,39764,25273,26411,33707,22696,40664,27819,28448,23518,38476,35851,29279,26576,25287,29281,20137,22982,27597,22675,26286,24149,21215,24917,v17661,v17662,30566,29287,31302,25343,
21738,21584,38048,37027,23068,32435,27670,20035,22902,32784,22856,21335,30007,38590,22218,25376,33041,24700,38393,28118,21602,39297,20869,23273,33021,22958,38675,20522,27877,23612,25311,20320,21311,33147,36870,28346,34091,25288,24180,30910,25781,25467,24565,23064,37247,40479,23615,25423,32834,23421,21870,38218,38221,28037,24744,26592,29406,20957,23425,25319,27870,v17663,25197,38062,32445,33043,27987,20892,24324,22900,21162,24594,v17664,26262,34384,30111,25386,25062,31983,35834,21734,27431,40485,27572,
34261,21589,20598,27812,21866,36276,29228,24085,24597,29750,25293,25490,29260,24472,28227,27966,25856,28504,30424,30928,30460,30036,21028,21467,20051,24222,26049,32810,32982,25243,21638,21032,28846,34957,36305,27873,21624,32986,22521,35060,36180,38506,37197,20329,27803,21943,30406,30768,25256,28921,28558,24429,34028,26842,30844,31735,33192,26379,40527,25447,30896,22383,30738,38713,25209,25259,21128,29749,27607,21860,33086,30130,v17665,21305,30174,20731,23617,35692,31687,20559,v17666,39575,39128,28418,
29922,31080,25735,30629,25340,39057,36139,21697,32856,20050,22378,33529,33805,24179,20973,29942,35780,23631,22369,27900,39047,23110,30772,39748,36843,31893,21078,25169,38138,20166,33670,33889,33769,33970,22484,26420,22275,26222,28006,35889,26333,28689,26399,27450,26646,25114,22971,19971,20932,28422,26578,27791,20854,26827,22855,27495,30054,23822,33040,40784,26071,31048,31041,39569,36215,23682,20062,20225,21551,22865,30732,22120,v17667,36804,24323,27773,27875,35755,25488,24688,27965,29301,25190,38030,
38085,21315,36801,31614,20191,35878,20094,40660,38065,38067,21069,28508,36963,27973,35892,22545,23884,v17668,27465,26538,21595,33108,32652,22681,34103,24378,25250,27207,38201,25970,24708,26725,30631,20052,20392,24039,38808,25772,32728,23789,20431,31373,20999,33540,19988,24623,31363,38054,20405,20146,31206,29748,21220,33465,25810,31165,23517,27777,38738,36731,27682,20542,21375,28165,25806,26228,27696,24773,39031,35831,24198,29756,31351,31179,19992,37041,29699,27714,22234,37195,27845,36235,21306,34502,
26354,36527,23624,39537,28192,21462,23094,40843,36259,21435,22280,39079,26435,37275,27849,20840,30154,25331,v17669,21048,21149,32570,28820,30264,21364,40522,27063,30830,38592,35033,32676,28982,29123,20873,26579,29924,22756,25880,22199,35753,39286,25200,32469,24825,28909,22764,20161,v17670,24525,38887,20219,35748,20995,22922,32427,25172,20173,v17671,25102,33592,33993,33635,34701,29076,28342,23481,32466,20887,25545,26580,v17672,33593,34837,20754,23418,22914,36785,20083,27741,v17673,35109,36719,38446,
34122,29790,38160,38384,28070,33509,24369,25746,27922,33832,33134,40131,22622,36187,19977,21441,20254,25955,26705,21971,20007,25620,39578,25195,23234],v23727=[29791,v17674,28073,26862,20711,33678,30722,26432,21049,27801,32433,20667,21861,29022,31579,26194,29642,33515,26441,v17675,21024,29053,34923,38378,38485,25797,36193,33203,21892,27733,25159,32558,22674,20260,21830,36175,26188,19978,23578,35059,26786,25422,31245,28903,33421,21242,38902,23569,21736,37045,32461,22882,36170,34503,v17676,33293,36198,
25668,23556,24913,28041,31038,35774,30775,30003,21627,20280,v17677,28145,23072,32453,31070,27784,23457,23158,29978,32958,24910,28183,22768,v17678,29989,29298,21319,32499,30465,30427,21097,32988,22307,24072,22833,29422,26045,28287,35799,v17679,34417,v17680,v17681,25342,26102,20160,v17682,34432,23454,35782,21490,v17683,20351,23630,39542,22987,24335,v17684,v17685,19990,26623,20107,25325,35475,36893,21183,26159,21980,22124,36866,20181,20365,37322,39280,v17686,24066,24643,23460,35270,35797,25910,v17687,
v17688,23432,23551,25480,21806,21463,30246,20861,34092,26530,26803,27530,25234,36755,21460,33298,28113,30095,20070,36174,23408,29087,34223,26257,26329,32626,34560,v17689,v17690,23646,26415,36848,26641,26463,25101,31446,22661,24246,25968,28465,24661,21047,32781,25684,34928,29993,24069,26643,25332,38684,21452,29245,35841,v17691,30561,31246,21550,30636,39034,33308,35828,30805,26388,28865,26031,25749,22070,24605,31169,21496,19997,27515,32902,23546,21987,22235,20282,20284,39282,24051,26494,32824,24578,
39042,36865,23435,35772,35829,25628,33368,25822,22013,33487,37221,20439,32032,36895,31903,20723,22609,28335,23487,35785,32899,37240,33948,31639,34429,38539,38543,32485,39635,30862,23681,31319,36930,38567,31071,23385,25439,31499,34001,26797,21766,32553,29712,32034,38145,25152,22604,20182,23427,22905,22612,29549,25374,36427,36367,32974,33492,25260,21488,27888,37214,22826,24577,27760,22349,25674,36138,30251,28393,22363,27264,30192,28525,35885,35848,22374,27631,34962,30899,25506,21497,28845,27748,22616,
25642,22530,26848,33179,21776,31958,20504,36538,28108,36255,28907,25487,28059,28372,32486,33796,26691,36867,28120,38518,35752,22871,29305,34276,33150,30140,35466,26799,21076,36386,38161,25552,39064,36420,21884,20307,26367,22159,24789,28053,21059,23625,22825,28155,22635,v17692,29980,24684,33300,33094,25361,26465,36834,30522,36339,36148,38081,24086,21381,21548,28867,27712,24311,20572,20141,24237,25402,33351,36890,26704,37230,30643,21516,38108,24420,31461,26742,25413,31570,32479,30171,20599,25237,22836,
36879,20984,31171,31361,22270,24466,36884,28034,23648,v17693,21520,20820,28237,22242,25512,39059,33151,34581,35114,36864,21534,23663,33216,25302,25176,33073,40501,38464,39534,39548,26925,22949,25299,21822,25366,21703,34521,27964,23043,v17694,34972,27498,22806,35916,24367,28286,29609,39037,20024,28919,23436,30871,25405,26202,30358,24779,23451,23113,19975,33109,27754,29579,20129,26505,v17695,24448,26106,26395,24536,22916,23041,24013,24494,21361,38886,36829,26693,22260,21807,24799,20026,28493,32500,
33479,33806,22996,20255,20266,23614,32428,26410,34074,21619,30031,32963,21890,39759,20301,28205,35859,23561,24944,21355,30239,28201,34442,v17696,38395,32441,21563],v23729=[31283,32010,38382,21985,32705,29934,25373,34583,28065,31389,25105,26017,21351,25569,27779,24043,21596,38056,20044,27745,35820,23627,v17697,33436,26791,21566,21556,v17698,27494,20116,25410,21320,33310,20237,20398,22366,25098,38654,26212,29289,21247,21153,24735,35823,26132,29081,26512,35199,30802,30717,26224,22075,21560,38177,29306,
31232,24687,24076,24713,33181,v17699,24796,29060,28911,28330,27728,29312,27268,34989,24109,20064,23219,21916,38115,27927,31995,38553,25103,32454,30606,34430,21283,38686,36758,26247,23777,20384,29421,19979,21414,22799,21523,25472,38184,20808,20185,40092,32420,21688,36132,34900,33335,38386,28046,24358,23244,26174,38505,29616,29486,21439,33146,39301,32673,23466,38519,38480,32447,30456,21410,38262,v17700,31665,35140,28248,20065,32724,31077,35814,24819,21709,20139,39033,24055,27233,20687,21521,35937,33831,
30813,38660,21066,21742,22179,38144,28040,23477,28102,26195,v17701,23389,26657,32918,21880,31505,25928,26964,20123,27463,34638,38795,21327,25375,25658,37034,26012,32961,35856,20889,26800,21368,34809,25032,27844,27899,35874,23633,34218,33455,38156,27427,v17702,26032,24571,v17703,20449,34885,26143,33125,29481,24826,20852,21009,22411,24418,37026,v17704,37266,24184,26447,24615,22995,20804,20982,33016,21256,27769,38596,29066,20241,20462,32670,26429,21957,38152,31168,34966,32483,22687,25100,38656,34394,
22040,39035,24464,35768,33988,37207,21465,26093,24207,30044,24676,32110,23167,32490,32493,36713,21927,23459,24748,26059,v17705,36873,30307,30505,32474,38772,34203,23398,v17706,38634,v17707,21195,29071,24490,26092,35810,23547,39535,24033,27529,27739,35757,35759,36874,36805,21387,25276,40486,40493,21568,20011,33469,v17708,34460,23830,34905,28079,38597,21713,20122,35766,28937,21693,38409,28895,28153,30416,20005,30740,34578,23721,24310,v17709,39068,38414,28814,27839,22852,25513,30524,34893,28436,33395,
22576,29141,21388,30746,38593,21761,24422,28976,23476,35866,39564,27523,22830,40495,31207,26472,25196,20335,30113,v17710,27915,38451,27687,20208,30162,20859,26679,28478,36992,33136,22934,29814,25671,23591,36965,31377,35875,23002,21676,33280,33647,35201,32768,26928,22094,32822,29239,37326,20918,20063,39029,25494,19994,21494,26355,33099,22812,28082,v17711,22777,21307,25558,38129,20381,20234,v17712,39056,22839,36951,31227,20202,33008,30097,27778,23452,23016,24413,26885,34433,20506,24050,v17713,30691,
20197,33402,25233,26131,v17714,23673,20159,24441,33222,36920,32900,30123,20134,35028,24847,27589,24518,20041,30410,28322,35811,35758,35850,35793,24322,32764,32716,32462,33589,33643,22240,27575,v17715,38452,23035,21535,38134,28139,23493,39278,23609,24341,38544,21360,33521,27185,23156,40560,24212,32552,33721,v17716,33639,34631,36814,36194,30408,24433,39062,30828,26144,21727,25317,20323,33219,30152,24248,38605,36362,34553,21647,27891,28044,27704,24703,21191,v17717,24189,20248,24736,24551,23588,30001,
37038,38080,29369,27833,28216,v17718,26377,21451,21491,20305,37321,35825,v17719,24188,36802,28132,20110,30402,27014,34398,24858,33286,20313,20446,36926,40060,24841,28189,28180],v23731=[38533,20104,23089,v17720,19982,23679,31161,23431,35821,v17721,v17722,22495,33419,37057,21505,36935,21947,23786,24481,24840,27442,29425,32946,35465,28020,23507,35029,39044,35947,39533,40499,28170,20900,20803,22435,34945,21407,25588,36757,22253,21592,22278,29503,28304,32536,36828,33489,24895,24616,38498,v17723,32422,
36234,36291,38053,23731,31908,v17724,24742,38405,32792,20113,37095,21248,38504,20801,36816,34164,37213,26197,38901,23381,21277,30776,26434,26685,21705,28798,23472,36733,20877,22312,21681,25874,26242,36190,36163,33039,33900,36973,31967,20991,34299,26531,26089,28577,34468,36481,22122,36896,30338,28790,29157,36131,25321,21017,27901,36156,24590,22686,24974,26366,36192,25166,21939,28195,26413,36711,38113,38392,30504,26629,27048,21643,20045,28856,35784,25688,25995,23429,31364,20538,23528,30651,27617,35449,
31896,27838,30415,26025,36759,23853,23637,34360,26632,21344,25112,31449,28251,32509,27167,31456,24432,28467,24352,25484,28072,26454,19976,24080,36134,20183,32960,30260,38556,25307,26157,25214,27836,36213,29031,32617,20806,32903,21484,36974,25240,21746,34544,36761,32773,38167,34071,36825,27993,29645,26015,30495,29956,30759,33275,36126,38024,20390,26517,30137,35786,38663,25391,38215,38453,33976,25379,30529,24449,29424,20105,24596,25972,25327,27491,25919,24103,30151,37073,35777,33437,26525,v17725,21553,
34584,30693,32930,33026,27713,20043,32455,32844,30452,26893,27542,25191,20540,20356,22336,25351,v17726,36286,21482,26088,32440,24535,25370,25527,v17727,33268,32622,24092,23769,21046,26234,31209,31258,36136,28825,30164,28382,27835,31378,20013,30405,24544,38047,34935,32456,31181,32959,37325,20210,20247,v17728,21608,24030,27954,35788,31909,36724,32920,24090,21650,30385,23449,26172,39588,29664,26666,34523,26417,29482,35832,35803,36880,v17729,28891,29038,25284,30633,22065,20027,33879,26609,21161,34496,
36142,38136,31569,20303,27880,31069,39547,25235,v17730,25341,19987,30742,36716,25776,36186,31686,26729,24196,35013,22918,25758,22766,29366,26894,38181,36861,36184,22368,32512,35846,20934,25417,25305,21331,26700,29730,33537,37196,21828,30528,28796,27978,20857,21672,36164,23039,28363,28100,23388,32043,20180,31869,28371,v17731,v17732,28173,23383,39683,26837,36394,23447,32508,24635,32437,37049,v17733,22863,25549,31199,v17734,21330,26063,31062,35781,38459,32452,38075,32386,22068,37257,26368,32618,23562,
36981,26152,24038,20304,26590,20570,20316,22352,24231,20109,19980,20800,19984,24319,21317,19989,20120,19998,v17735,23404,22121,v17736,31162,v17737,v17738,20039,22829,v17739,21358,27664,22239,32996,39319,27603,30590,40727,v17740,20127,40720,20060,20073,20115,33416,23387,21868,22031,20164,21389,21405,21411,21413,21422,38757,36189,v17741,21493,21286,21294,21310,36188,21350,21347,20994,21E3,21006,21037,21043,v17742,21068,21086,21089,21084,33967,21117,21122,21121,21136,21139,v17743,32596,20155,20163,20169,
20162,20200,20193,20203,20190,20251,20211,20258,20324,20213,20261,20263,20233,20267,20318,20327,25912,20314,20317,20319,20311,20274,20285,20342,20340,20369,20361,20355,20367,20350,20347],v23733=[20394,20348,20396,20372,20454,20456,20458,20421,20442,20451,20444,20433,20447,20472,20521,20556,20467,20524,20495,20526,20525,20478,20508,20492,20517,20520,20606,20547,20565,20552,20558,20588,20603,20645,20647,20649,20666,20694,20742,20717,20716,20710,20718,20743,20747,20189,27709,20312,20325,20430,v17744,
27718,31860,20846,24061,40649,39320,20865,22804,v17745,21261,35335,21264,20971,22809,20821,v17746,20822,20147,34926,34980,20149,33044,35026,31104,23348,34819,32696,v17747,20913,20925,20924,20935,v17748,20898,20901,35744,v17749,35754,v17750,35767,v17751,35787,35791,35790,v17752,35798,v17753,35804,v17754,35812,v17755,35822,35824,35827,35830,35833,35836,v17756,35842,35844,35847,35852,35855,v17757,v17758,35865,35867,35864,35869,v17759,35877,35879,v17760,v17761,v17762,v17763,v17764,21370,38429,38434,38433,
38449,38442,38461,38460,38466,38473,38484,38495,38503,38508,38514,38516,38536,38541,38551,38576,37015,37019,37021,37017,37036,37025,37044,37043,37046,37050,37048,37040,37071,37061,37054,37072,37060,37063,37075,37094,37090,37084,37079,37083,37099,37103,37118,37124,37154,37150,37155,37169,37167,37177,37187,37190,21005,22850,21154,v17765,21182,21759,21200,21206,21232,21471,29166,30669,v17766,v17767,20988,v17768,v17769,24321,30042,24047,22348,22441,22433,22654,22716,22725,22737,22313,22316,22314,22323,
22329,v17770,22364,22331,22338,22377,22405,22379,22406,22396,22395,22376,22381,22390,22387,22445,22436,22412,22450,22479,22439,22452,22419,22432,22485,22488,22490,22489,22482,22456,22516,22511,22520,22500,22493,22539,22541,22525,22509,22528,22558,22553,22596,22560,22629,22636,22657,22665,22682,22656,39336,40729,25087,33401,33405,33407,33423,33418,33448,33412,33422,33425,33431,33433,33451,33464,33470,33456,33480,33482,33507,33432,33463,33454,v17771,33473,33449,33460,33441,33450,33439,33476,33486,33444,
33505,33545,33527,33508,33551,33543,33500,33524,33490,33496,33548,33531,33491,33553,33562,33542,v17772,33504,33493,33564,33617,v17773,33544,33682,33596,33588,33585,33691,33630,33583,33615,33607,33603,33631,33600,33559,33632,33581,33594,33587,33638,33637,33640,33563,33641,33644,33642,v17774,33712,33656,v17775,33696,33706,33683,33692,33669,33660,33718,33705,33661,33720,33659,33688,33694,33704,33722,33724,33729,33793,33765,33752,22535,33816,33803,33757,33789,33750,33820,33848,33809,33798,33748,33759,
33807,33795,v17776,33770,33733,33728,33830,33776,33761,33884,33873,33882,33881,33907,v17777,33914,33929,33912,33852,33862,33897,33910,33932,33934,33841,33901,33985,33997,34E3,34022,33981,34003,33994,33983,33978,34016,33953,33977,33972,33943,34021,34019,34060,29965,34104,34032,34105,34079,34106,34134,34107,34047,34044,34137,34120,34152,34148,34142,34170,30626,34115,34162,34171,34212,34216,34183,34191,34169,34222,34204,34181,34233,34231,34224,34259,34241,34268,34303,34343,34309,34345,34326,34364,v17778,
24328,22844,22849,32823,22869,22874,22872,21263,v17779,23589,23596,23604,25164,25194,25247,25275,25290,25306,25303,25326,25378,25334,25401,25419,25411,25517,25590,25457,25466,25486,25524,25453,25516,25482],v23735=[25449,25518,25532,25586,25592,25568,25599,25540,25566,25550,25682,25542,25534,25669,25665,25611,25627,25632,25612,25638,25633,25694,25732,25709,25750,25722,v17780,25753,25786,25792,25808,25815,25828,25826,25865,25893,25902,v17781,24530,29977,24337,21343,21489,21501,21481,21480,21499,21522,
21526,21510,21579,v17782,21590,21571,21537,21591,21593,21539,21554,21634,21652,21623,21617,21604,v17783,21636,21622,21606,21661,21712,21677,21698,21684,21714,21671,21670,v17784,21618,21667,21717,21691,21695,21708,v17785,21724,v17786,21668,21725,21711,21726,21787,21735,21792,21757,21780,21747,v17787,21775,21777,21799,21802,21863,21903,21941,21833,21869,21825,21845,21823,21840,21820,21815,21846,v17788,21811,21808,21852,21899,21970,21891,21937,21945,21896,21889,21919,21886,21974,21905,21883,21983,v17789,
21908,21913,21994,22007,21961,22047,21969,v17790,21972,21990,21981,21956,21999,21989,v17791,v17792,21992,22005,21988,36756,22046,22024,22028,22017,22052,22051,22014,22016,22055,22061,22104,22073,22103,22060,22093,22114,22105,22108,22092,22100,22150,22116,22129,22123,v17793,22149,22163,22191,22228,v17794,22237,22241,22261,22251,22265,22271,22276,22282,22281,22300,24079,24089,24084,24081,24113,v17795,24119,24132,24148,24155,24158,24161,23692,23674,23693,23696,23702,23688,v17796,23697,23706,23708,23733,
23714,23741,23724,23723,23729,23715,23745,23735,23748,23762,23780,23755,23781,v17797,23847,23846,23854,23844,23838,23814,23835,23896,23870,23860,23869,23916,23899,23919,23901,23915,23883,23882,23913,23924,23938,23961,23965,35955,23991,24005,v17798,24439,24450,24455,24457,24460,24469,24473,24476,24488,24493,24501,24508,34914,v17799,29357,29360,29364,v17800,29379,29377,29390,29389,29394,29416,29423,29417,29426,29428,29431,29441,29427,29443,v17801,29463,29459,29473,29450,29470,29469,29461,29474,29497,
29477,29484,29496,29489,29520,29517,29527,29536,29548,29551,29566,v17802,22821,39143,22820,v17803,39267,v17804,39284,39287,39293,39296,39300,39303,39306,39309,v17805,v17806,24192,24209,24203,24214,24229,24224,24249,24245,24254,24243,36179,24274,24273,24283,24296,24298,33210,24516,24521,24534,24527,24579,24558,24580,24545,24548,24574,v17807,24554,24557,24568,24601,24629,24614,24603,24591,24589,24617,24619,24586,24639,24609,v17808,24699,24698,24642,24682,24701,24726,24730,24749,24733,24707,24722,24716,
24731,24812,24763,24753,24797,24792,24774,24794,24756,24864,24870,24853,24867,24820,24832,24846,24875,24906,24949,25004,24980,24999,25015,25044,25077,24541,38579,38377,38379,38385,38387,v17809,38396,38398,v17810,38406,38408,v17811,38415,38418,v17812,v17813,20012,v17814,25109,27701,27732,27740,27722,27811,27781,27792,27796,27788,v17815,27764,27766,27782,27817,27856,27860,27821,v17816,27889,27863,27826,27872,27862,27898,27883,27886,27825,27859,27887,27902,27961,27943,27916,27971,27976,27911,27908,27929,
27918,27947,27981,27950,27957,27930,27983,27986,27988,27955,28049,28015,28062,28064,27998,v17817,27996,28E3,28028,28003,28186,28103,28101,28126,28174,28095,28128,28177,28134,28125,28121,28182,28075,28172,28078,28203,28270],v23737=[28238,28267,28338,28255,28294,v17818,28210,28197,28228,28383,28337,28312,28384,28461,28386,28325,28327,28349,28347,28343,28375,28340,28367,28303,28354,28319,28514,v17819,28452,28437,28409,28463,28470,28491,28532,28458,28425,28457,28553,28557,28556,28536,28530,28540,28538,
28625,28617,28583,28601,28598,28610,28641,28654,28638,28640,28655,28698,28707,28699,28729,28725,28751,28766,v17820,23428,23445,23443,23461,23480,29999,39582,25652,23524,23534,35120,23536,36423,35591,36790,36819,36821,36837,36846,36836,36841,36838,36851,36840,36869,36868,36875,36902,36881,36877,36886,36897,v17821,36909,36911,36932,v17822,36944,36968,36952,36962,36955,26297,36980,36989,36994,37E3,36995,37003,v17823,24407,24406,24408,23611,21675,23632,23641,23409,23651,23654,32700,24362,24361,24365,
33396,24380,39739,v17824,22913,22915,22925,v17825,22947,22935,22986,22955,22942,22948,22994,22962,22959,22999,22974,v17826,23005,23048,23011,23E3,23033,23052,23049,23090,23092,23057,23075,23059,23104,23143,23114,23125,23100,23138,23157,33004,23210,23195,23159,23162,23230,23275,23218,23250,23252,23224,23264,23267,23281,23254,23270,23256,23260,23305,23319,23318,23346,23351,23360,23573,23580,23386,23397,23411,23377,23379,23394,39541,v17827,39546,39551,39549,v17828,39557,39560,39562,39568,v17829,39574,
39576,v17830,v17831,v17832,39589,39591,32415,32417,32419,32421,v17833,32429,32432,32446,v17834,32457,v17835,32464,32468,32471,32475,v17836,32488,32491,v17837,v17838,32525,32502,v17839,32510,v17840,v17841,v17842,32527,v17843,32535,32537,32540,32539,32543,v17844,v17845,v17846,32565,v17847,30079,v17848,30014,37013,29582,29585,29614,29602,29599,29647,29634,29649,29623,29619,29632,29641,29640,29669,29657,39036,29706,29673,29671,29662,29626,29682,29711,29738,29787,29734,29733,29736,29744,29742,29740,29723,
29722,29761,29788,29783,29781,29785,29815,29805,29822,29852,29838,v17849,29831,29835,29854,v17850,29840,29863,29906,29882,v17851,26444,26451,26462,26440,26473,26533,26503,26474,26483,26520,26535,26485,26536,26526,26541,26507,26487,26492,26608,26633,26584,26634,26601,26544,26636,26585,26549,26586,26547,26589,26624,26563,26552,26594,26638,26561,26621,v17852,v17853,26702,26722,26692,26724,26755,26653,26709,26726,26689,26727,26688,26686,26698,26697,26665,26805,26767,26740,26743,26771,26731,26818,26990,
26876,v17854,26873,26916,26864,26891,26881,26967,26851,26896,26993,26937,26976,26946,26973,27012,26987,27008,27032,27E3,26932,27084,v17855,27086,27017,26982,26979,27001,27035,27047,27067,27051,27053,27092,27057,27073,27082,27103,27029,27104,27021,27135,27183,27117,v17856,27237,27122,27204,27198,27296,27216,27227,27189,27278,27257,27197,27176,27224,27260,27281,27280,27305,27287,27307,29495,29522,v17857,27527,27524,v17858,27533,v17859,27553,27562,36715,36717,v17860,v17861,36728,36727,v17862,36732,36734,
v17863,36740,36743,36747,v17864,36760,36762,36558,25099,25111,25115,25119,25122,25121,25125,25124,25132,33255,29935,29940,29951,29967,29969,29971,v17865,v17866,26122,26137,26482,26115,26133,26112,28805,26359,26141,26164,26161,26166,26165,32774,26207,26196],v23739=[26177,26191,26198,26209,26199,26231,26244,26252,26279,26269,26302,v17867,26342,26345,v17868,36150,36155,36157,36160,v17869,v17870,36167,36173,36181,36185,35271,v17871,v17872,29294,29343,29277,29286,29295,v17873,29316,29323,29325,29327,29330,
25352,25394,25520,25663,25816,32772,27626,27635,27645,27637,27641,27653,27655,27654,27661,27669,v17874,27681,27689,27684,27690,27698,25909,25941,25963,29261,29266,29270,29232,34402,21014,32927,32924,32915,32956,26378,32957,32945,32939,32941,32948,32951,v17875,32987,32962,32964,32985,32973,32983,26384,32989,33003,33009,33012,33005,v17876,33010,33020,26389,33042,35930,33078,33054,33068,33048,33074,33096,33100,33107,33140,v17877,33137,33120,33129,v17878,33133,33127,22605,23221,33160,33154,33169,28373,
33187,33194,33228,26406,33226,33211,33217,33190,27428,27447,27449,27459,27462,27481,v17879,39125,v17880,v17881,24384,27586,35315,26E3,40785,26003,26044,26054,26052,26051,26060,26062,26066,26070,28800,28828,28822,28829,28859,28864,28855,28843,28849,28904,28874,28944,28947,28950,28975,28977,29043,29020,29032,28997,29042,29002,29048,29050,29080,29107,29109,29096,29088,29152,29140,29159,29177,29213,29224,28780,28952,29030,29113,25150,25149,25155,v17882,31035,31040,31046,31049,v17883,31059,31066,31074,
31063,31072,31087,31079,31098,31109,31114,31130,31143,31155,24529,24528,24636,24669,24666,24679,24641,24665,24675,24747,24838,24845,24925,25001,24989,25035,25041,25094,32896,v17884,27795,27894,28156,30710,30712,30720,30729,v17885,30737,26027,30765,v17886,v17887,30751,30780,30757,30764,30755,30761,30798,30829,v17888,30758,30800,30791,30796,30826,30875,30867,30874,30855,30876,30881,30883,30898,30905,30885,30932,30937,30921,30956,30962,30981,30964,30995,31012,31006,31028,40859,v17889,v17890,30449,30468,
30477,30457,v17891,30490,30498,30489,30509,30502,30517,30520,v17892,30535,30531,30554,30568,30562,30565,30591,30605,30589,30592,30604,30609,v17893,30640,30645,30653,30010,30016,30030,30027,30024,30043,30066,30073,30083,32600,32609,32607,35400,32616,32628,32625,32633,32641,32638,30413,30437,34866,v17894,38027,38026,v17895,v17896,38036,38039,38037,v17897,v17898,38059,38058,38061,38060,v17899,38066,38068,v17900,v17901,38079,38084,v17902,v17903,v17904,38105,38104,38107,v17905,38114,v17906,v17907,38122,
38121,38123,v17908,v17909,38135,38137,v17910,38143,38147,38146,v17911,v17912,v17913,v17914,38168,38171,v17915,38178,v17916,38185,38188,v17917,38196,v17918,38204,v17919,38210,38197,v17920,38217,38220,v17921,v17922,v17923,38235,v17924,38237,v17925,v17926,38255,v17927,38202,30695,30700,38601,31189,31213,31203,31211,31238,23879,31235,31234,31262,31252,31289,31287,31313,40655,39333,31344,30344,30350,30355,30361,30372,29918,29920,29996,40480,40482,v17928,40498,40497,40502,40504,40503,v17929,40510,v17930,
40516,v17931,v17932,40526,40529,40533,40535,v17933,40542,40547,v17934,40561,40557,40563,v17935,30100,30102,30112,30109,30124,30115,v17936,30136,30148,30129,30128,30147,30146,30166,30157,30179,30184,30182,30180,30187,30183,30211,30193,30204,30207,30224,30208,30213,30220,30231,30218,30245,30232,30229,30233,30235],v23741=[30268,30242,30240,30272,30253,30256,30271,30261,30275,30270,30259,30285,30302,30292,30300,30294,30315,30319,32714,31462,v17937,31360,31366,31368,31381,31398,31392,31404,31400,31405,
31411,34916,34921,34930,34941,34943,34946,34978,35014,34999,35004,35017,35042,35022,35043,35045,35057,35098,35068,35048,35070,35056,35105,35097,35091,35099,35082,35124,35115,35126,35137,35174,35195,v17938,32997,30386,30388,30684,v17939,32788,32790,32796,32800,32802,v17940,32809,32808,32817,32779,32821,32835,32838,32845,32850,32873,32881,35203,39032,39040,39043,39049,v17941,39055,39060,v17942,v17943,v17944,v17945,v17946,34388,34412,34414,34431,34426,34428,34427,34472,34445,34443,34476,34461,34471,
34467,34474,34451,34473,34486,34500,34485,34510,34480,34490,34481,34479,34505,34511,34484,34537,v17947,34541,34547,34512,34579,34526,34548,34527,34520,34513,34563,34567,34552,34568,34570,34573,34569,34595,34619,34590,34597,34606,34586,34622,34632,34612,34609,34601,34615,34623,34690,34594,v17948,34683,34656,34672,34636,34670,34699,34643,34659,34684,34660,34649,34661,34707,34735,34728,34770,34758,34696,34693,34733,34711,34691,34731,34789,34732,34741,34739,34763,34771,34749,34769,34752,34762,34779,34794,
34784,34798,34838,34835,34814,34826,34843,34849,34873,34876,v17949,32578,v17950,33296,31482,31485,31496,v17951,31509,31498,31531,31503,31559,31544,31530,31513,31534,31537,31520,31525,31524,31539,31550,31518,31576,31578,31557,31605,31564,31581,31584,31598,31611,31586,31602,31601,31632,v17952,31672,31660,31645,31656,31621,31658,31644,31650,31659,31668,31697,31681,31692,31709,31706,v17953,31722,31756,31742,31740,31759,31766,31755,31775,31786,31782,31800,31809,31808,33278,v17954,33284,33260,34884,v17955,
33325,33327,33320,33323,33336,33339,v17956,33342,33348,33353,33355,33359,33370,33375,33384,34942,34949,34952,35032,35039,35166,32669,32671,32679,v17957,32690,31868,25929,31889,31901,31900,31902,31906,31922,v17958,31937,31943,v17959,31944,31941,31959,31976,v17960,26280,32703,32718,32725,32741,32737,32742,32745,32750,32755,v17961,32119,32166,32174,32327,32411,40632,40628,36211,36228,36244,36241,36273,36199,36205,35911,35913,37194,37200,v17962,37220,37218,37217,37232,37225,37231,v17963,37234,37236,37241,
37260,37253,37264,37261,37265,v17964,37290,v17965,37301,37300,37306,v17966,40574,36280,36331,36357,36441,36457,36277,36287,36284,36282,36292,v17967,36314,36318,v17968,36315,36294,36332,v17969,36323,36345,36347,36324,36361,36349,36372,36381,36383,36396,36398,36387,36399,36410,36416,36409,36405,36413,36401,36425,v17970,v17971,36426,36464,36470,36476,36463,36468,36485,36495,36500,36496,36508,36510,v17972,35970,35978,35973,35992,35988,26011,35286,35294,35290,35292,35301,35307,35311,35390,35622,38739,
38633,38643,38639,38662,38657,38664,38671,38670,38698,38701,38704,38718,40832,40835,v17973,40844,40702,40715,40717,v17974,v17975,38606,38610,30655,38624,37518,37550,37576,37694,37738,37834,37775,37950,37995,40063,40066,v17976,31267,40075,40078,v17977,v17978,v17979,v17980,v17981,40107,v17982,v17983,v17984,v17985,v17986,v17987,v17988,v17989,40159,40162],v23743=[38780,38789,v17990,38804,38831,38827,38819,38834,38836,39601,39600,39607,40536,39606,39610,39612,39617,39616,39621,39618,v17991,39633,39749,
39747,39751,39753,39752,39757,39761,39144,39181,39214,39253,39252,v17992,39649,39654,39663,39659,39675,39661,39673,39688,39695,39699,39711,39715,v17993,32315,40578,v17994,40587,40594,37846,40605,40607,v17995,40672,40671,40674,40681,40679,40677,40682,40687,40738,40748,40751,40761,40759,v17996,40772,12295,v17997,30362,34297,31001,24859,39599,35158,22761,32631,25850,25943,38930,36774,32070,24171,32129,37770,35607,39165,23542,22577,39825,36649,v17998,37575,29437,20633,24970,32179,31558,30050,25987,24163,
38281,37002,32232,36022,35722,36783,36782,27161,40009,30303,28693,28657,36051,25839,39173,25765,37474,37457,39361,35036,36001,21443,34870,27544,24922,24920,29158,33980,33369,20489,28356,21408,20596,28204,23652,35435,25881,25723,34796,39262,35730,32399,37855,29987,38369,39019,22580,22039,v17999,20767,33144,24288,26274,37396,v18000,24505,22645,38515,35183,31281,25074,35488,39425,36978,39347,v18001,29118,34909,34802,23541,30087,36490,31820,32162,37276,37604,38619,30990,20786,35320,34389,20659,30241,
38358,21109,37656,32020,32189,36781,35422,36060,32880,24478,21474,36517,31428,37679,36948,24118,36024,25812,21934,37170,25763,33213,24986,35477,24392,30070,25803,40680,34153,27284,25623,23798,31153,23566,29128,37159,25973,28364,36958,32224,39003,40670,22666,38651,28593,37347,35519,35548,37336,38914,37664,35330,26481,21205,26847,20941,v18002,29346,29544,35712,36077,37709,37723,26039,32222,38538,23565,22136,38931,37389,22890,22702,40285,38989,35355,24801,39187,20818,29246,39180,36019,30332,32624,38309,
31020,37353,29033,31684,36009,39151,35370,32033,v18003,35513,24290,36027,32027,22707,22894,24996,31966,35920,26963,37586,v18004,30219,39342,32299,35575,40179,33178,36667,25771,36628,36070,24489,36E3,35331,23142,32283,35442,37411,33995,24185,36245,36123,23713,21083,37628,32177,23831,37804,25841,40255,38307,37499,20491,32102,40852,38799,36002,37390,28317,27083,36092,34865,39015,21102,38364,35264,39208,24931,36011,24291,35215,27512,v18005,38312,36556,35437,27331,36020,21130,36645,37707,22283,36942,39405,
38867,28450,34399,38305,40372,36032,36703,40251,32005,22778,35703,28396,22057,33775,30059,21123,35441,25079,22750,27489,29872,36996,32233,35594,25582,36637,36036,31330,26371,29172,21295,35569,35496,32362,33911,28222,29554,36008,31117,25802,27231,31309,39249,35663,40388,32318,32221,26997,36655,32026,25824,24190,34186,21137,28639,35336,35352,38555,32380,32E3,22846,33698,38960,36040,37440,20729,39381,27570,30435,22533,31627,38291,33393,32216,32365,27298,40572,25536,25791,31777,20745,34214,27323,37970,
36368,36068,v18006,37749,33382,21133,39198,28472,28666,28567,23559,28479,34083,27123,22892,35611,37292,33184,28550,39509,23308,25898,37496,30703,20709,39171,32371,32094,36686,36611,38542,31680,28500,32080,35489,32202,37670,20677,35641,36914,29180,30433,21185,33686,39912,39514,32147,38968,37857,24465,30169,31478,31998,33290,39378,33289,25818,37624,25084],v23745=[21127,40273,32121,35258,35363,32118,37406,36557,39423,38283,20977,38982,27579,35506,22718,25031,25715,24235,35122,35463,22602,20744,23532,
31014,26336,34407,24011,31418,39243,28528,25844,38346,34847,33240,33802,20358,36084,34253,27396,25876,31811,38348,34349,28734,35733,25900,35261,25078,32412,29211,28651,25736,21214,28551,27138,37939,22744,39006,31852,38626,28757,35023,39881,31150,40599,21426,21237,31019,27511,28701,38584,20486,32879,34030,36899,37934,24976,28451,31806,25986,33225,37832,25088,29001,32244,31975,20841,36635,35538,30274,36988,37904,29557,33256,37168,40023,36035,40801,37428,38728,23994,38936,39230,21129,v18007,32894,22184,
31840,22751,25871,38580,27155,23105,25695,31757,34310,30439,39025,24300,29200,25796,28407,34396,39791,36034,37682,38520,39522,37569,23650,32311,24942,28670,32209,24018,25891,23423,28772,20098,25476,36650,20523,20374,28138,32184,35542,34367,32645,37007,38012,31854,39486,39409,32097,23229,29802,30908,34718,v18008,39393,21966,36023,v18009,36067,36993,30622,39237,34875,28415,35646,37672,37466,36031,37762,v18010,24758,20497,37683,22818,35598,24396,35219,32191,32236,24287,28357,25003,38313,40180,37528,
35628,35584,30045,37385,32013,38627,25747,33126,24817,39719,39186,25836,33193,25862,37312,v18011,32886,22169,38007,37811,27320,29552,23527,25840,28632,37397,32016,33215,28611,36786,30247,35582,27472,40407,27590,22036,28442,30436,40848,36064,22132,40300,39449,39108,38971,36007,34315,24977,35413,28497,38935,25778,37610,20693,27192,35676,33229,v18012,39438,35912,21843,27683,35350,29309,37370,37467,36983,31805,35609,37666,37463,28154,35700,22649,27085,21958,22715,34196,25654,37740,27211,21932,20689,32761,
31429,31434,27453,35242,23522,36629,27691,20670,38915,35531,24950,29898,31406,36264,21312,36544,39493,40818,39028,27402,21240,40306,30906,35731,39250,25854,32350,29105,38860,35469,32009,27054,32104,36575,37613,38287,28516,28753,34217,39955,36093,20632,21930,39479,25475,28544,27578,32023,31721,26348,38275,38493,36109,32341,20663,36062,29138,32057,36050,25448,25885,25086,35373,32051,23529,23352,33102,28402,32882,32361,21213,32854,24107,29509,28629,35433,26178,34645,23526,35672,39387,21218,36969,37323,
39166,35222,35430,22781,29560,27166,36664,26360,36118,23660,34899,27193,31466,25976,24101,38617,35504,38918,35500,30889,29197,32114,39164,39686,32883,24939,38924,35359,35494,25851,34311,35380,32901,38614,38568,32143,27506,23403,25613,32302,29795,37782,29562,25787,33274,24907,25892,36010,30321,28760,22727,35674,35527,22022,28271,29145,28644,32295,35342,39472,35588,37563,38988,39636,26781,36028,37941,24307,32893,28916,37509,32113,38957,22294,22615,22296,38973,40213,39345,39389,27234,31402,35178,24398,
28771,38929,33836,32178,v18013,36949,22285,29234,28656,32173,33894,20553,20702,32239,35586,34907,32862,32011,31337,21839,25790,34680,28198,31401,21978,37794,28879,35491,28961,34154,22626,38695,21209,35492,37675,29351,35186,32722,37521,25138,32048,34662,36676,23805,20448,29433,22151,37697,39854,32406,36066,37532,38289,39023,38570,29694,29563,32291],v23747=[39201,25010,32171,38002,37129,35443,38911,38917,34157,22210,37559,26313,22063,21332,25406,33029,35559,23531,28681,35613,37573,37313,33288,37561,
32137,38920,35377,32210,32396,36562,25080,36984,30316,32098,23416,21211,35426,23563,39348,35347,35338,36956,22739,40201,40232,21854,20126,35357,38329,40573,22196,38996,38331,33399,21421,30831,35578,39511,40230,26954,25562,30221,38525,30306,39178,27171,22575,35617,34277,29242,v18014,26989,33865,37291,37541,38948,36986,20736,34811,34269,20740,25014,32681,35427,35696,35516,35695,32377,34093,38512,37504,39154,38577,27387,23344,40441,25033,32403,29801,34722,29151,29074,34821,36111,31310,21938,25793,20653,
30320,36404,20778,24962,37109,37438,29494,35480,36671,39192,v18015,28417,33287,23996,35486,39729,29508,35709,38928,39341,40219,28149,36677,22290,21729,22291,32227,36960,39E3,32004,36493,38E3,38322,38642,37142,38549,36939,34292,37270,26248,38620,36617,25890,26283,36106,36124,33247,38015,26839,31432,36012,25799,21063,28580,36042,36104,36555,37720,38296,35408,40779,20661,27656,30430,26028,36670,23940,26855,25136,32187,24373,28466,24115,36076,33081,36249,34756,36685,37754,36889,35998,37341,20597,35386,
37806,38499,24128,30309,37165,35657,32340,32887,22519,34937,32025,25711,25842,24159,36074,28399,37912,32066,31278,33131,34886,35589,36600,30394,26205,39519,35576,35461,29165,30682,22225,36015,37956,31689,39376,23560,30938,36681,36090,27137,33674,35037,22941,22767,29376,37648,36101,22684,32180,35524,28310,28609,36039,28460,32156,32317,32305,37138,35419,32068,38013,21959,21401,21428,38760,36107,21293,21297,36094,21060,21132,21108,20660,20480,20630,20757,20738,20756,20796,20791,20712,20674,20795,20752,
20794,20681,31988,40652,22213,40172,35131,33248,35329,35344,35340,35349,35635,35406,35365,35393,35382,35398,35412,35416,35410,35462,35460,35455,35440,35452,35445,35436,35438,35533,35554,35425,35482,35493,v18016,35535,35537,35529,35547,35543,35522,35510,35574,35563,35604,35585,35556,35565,35580,35571,35558,35566,35550,35624,35740,35606,35610,35600,35627,35629,35670,35673,35662,35742,35691,35734,38488,37178,37140,37172,37087,37174,37126,37192,33467,21233,24048,22538,22745,22754,22752,22746,22497,22607,
22550,22610,22557,22628,34188,34131,34294,33703,33799,34031,33511,34338,34086,22603,29026,34136,34045,34126,34184,34234,29334,28366,34113,34254,34130,33984,33874,33892,33940,33845,34207,34133,40367,33939,32264,34118,34146,34078,39488,34362,37795,34167,34334,34298,34308,34282,34330,22889,23607,25451,25718,25759,25681,25692,25779,25860,25878,25847,25852,25883,22064,22072,22216,22182,21764,21692,22144,22109,22112,22069,22006,22118,22130,22156,22117,22044,22062,21993,22038,22208,22029,22195,22209,22127,
36705,22198,22165,22279,24131,24172,24152,24151,23943,23796,23888,23852,23975,23968,23959,23821,23992,23937,24020,24480,29559,29505,29546,29499,29547,29568,29564,39136,39219,39145,39228,v18017,39149,39156,39177,39185,39195,39223,39231,39235,v18018,39244,39266,24289,36065,25082,25006,24938,24894,24757,24884,25036,24927,25064,24827,24887],v23749=[24818,24947,24860,24978,38274,38278,38344,38286,38292,38284,38373,38317,38315,39726,38316,38334,38326,39721,38335,38333,38332,38339,38347,38356,38352,38357,
38366,28739,28505,28711,28696,28668,28039,28025,28254,28590,28687,28408,28527,28150,28543,28678,28576,28683,28775,28740,28677,28535,28704,28703,28722,28712,28765,39467,36999,36885,37008,23656,24371,23285,23255,23296,23149,23304,23372,23207,23291,23307,23329,23338,23321,39380,39391,39385,39478,39515,39377,39384,39501,39498,39394,39530,39439,39437,39429,39490,39469,39446,39489,39470,39480,v18019,39503,39525,39524,31993,32006,32002,v18020,32394,32028,32021,32019,32058,32050,32049,32272,32060,32064,32063,
32093,32078,32115,32134,32131,32136,32190,32186,32203,32212,32196,32158,32172,32185,32163,32176,32199,32217,32215,32249,32242,32354,32230,32246,32241,32267,32225,32265,32285,32287,32286,32301,32266,32273,32381,32313,32309,32306,32326,32325,32392,32346,32338,32366,32382,32368,32367,32408,29859,29771,29903,38922,29885,29759,29833,29862,29908,29914,38873,38878,38876,27050,27370,26776,26838,27141,26783,27355,27379,27368,27359,27273,26895,27208,26984,27071,27194,27292,27410,27422,27357,27111,27407,27414,
27372,27354,27384,27315,27367,27299,27347,27358,27556,27550,27566,27563,27567,36564,36571,36594,36603,36708,36601,36604,36587,36580,36706,36602,36606,36618,36615,36613,36626,36646,v18021,36636,36659,36678,36692,25108,25127,29964,26311,26308,26249,26326,36033,36016,36026,36029,36100,36018,36037,36112,36049,36058,36053,36075,36071,36091,35224,35244,35233,35263,35238,35247,35250,35255,27647,27660,27692,29272,26407,33110,33242,33051,33214,33121,33231,27487,v18022,39094,39100,39110,39112,36674,40783,26005,
29036,29010,29079,29121,29148,29182,31152,31118,31146,25055,24932,25059,25095,28585,30959,30893,30824,30904,31018,31025,30820,30973,30951,30947,40853,30616,30558,30652,32646,32648,v18023,37337,37335,37333,37367,37351,37348,37702,37365,37369,37384,37414,37445,37393,37392,37377,37415,37380,37413,37376,37434,37478,37431,37427,37461,37437,37432,37470,v18024,37439,37984,37424,37449,37448,37453,37422,37433,37944,37548,37536,37498,37546,37614,37583,37891,37603,37946,37553,37542,37799,37526,37580,37545,37877,
37523,37503,37801,37530,37658,37547,37507,37899,37544,37539,37906,37688,37617,37847,37605,37616,37615,37608,37564,37597,37622,v18025,37571,37599,37606,37650,37638,37737,37659,37696,37633,37653,37678,37699,v18026,37663,37657,37733,37703,37750,37716,37732,37802,37744,37764,37860,37848,37928,37767,37836,37784,37816,37823,37798,37808,37813,37964,37858,v18027,37837,37854,37827,37831,37841,37908,37917,37879,37989,37907,37997,37920,38009,37881,37913,37962,37938,37951,37972,37987,37758,31329,40169,40182,
40199,40198,40227,40327,40469,40221,40223,40421,40239,40409,40240,40258,40478,40275,40477,40288,40274,40435,40284,40289,40339,40298,40303,40329,40344,40346,40384,40357,40361,40386,40380,40474,40403,40410,40431,40422,40434,40440,40460,40442,40475,30308,30296,30311,30210,v18028,30281,30238,30267,v18029,30313,30322,31431,31414,35168],v23751=[35123,35165,35143,35128,35172,30392,32814,32812,32889,32885,38919,v18030,38945,38940,28481,38950,38967,38990,38995,39027,39010,39001,39013,39020,39024,34787,34822,
34566,34851,34806,34554,34799,34692,34832,34760,34833,34747,34766,32588,31716,31591,31849,31731,31744,31691,31836,31774,31787,31779,31850,31839,33380,33387,35018,32677,31986,31990,31965,32310,40617,36274,37317,37315,40570,36489,36428,36498,36474,36437,36506,36491,36499,36497,36513,36451,36522,36518,35316,35318,38746,38722,38717,38724,40788,40799,40793,40800,40796,40806,40812,40810,40823,v18031,40703,40713,35726,38014,37864,39799,39796,39809,39811,39822,40056,31308,39826,40031,39824,39853,39834,39850,
39838,40045,39851,39837,40024,39873,40058,39985,39993,39971,39991,39872,39882,39879,39933,39894,v18032,39905,39908,39911,39901,39906,39920,39899,39924,39892,40029,39944,39952,39949,39954,39945,39935,39968,39986,39981,39976,39973,39977,39987,39998,40008,39995,39989,40005,40022,40020,40018,40039,38851,38845,38857,40379,39631,39638,39637,39768,39758,39255,39260,39714,40695,40690,35180,38342,37686,24390,34068,32404,40803,22137,40725,22081,39662,35079,31296,39091,38308,39693,36852,24409,31339,39138,20642,
34193,20760,25458,21067,30543,32397,26310,30637,v18033,22217,40692,28635,25054,30663,28720,40629,34890,38370,38854,31844,32308,38822,40623,22220,39089,27311,32590,31984,20418,32363,40569,22190,39706,33903,31142,31858,39634,38587,32251,35069,30787,v18034,v18035,729,8211,8213,8229,8245,8453,8457,v18036,8725,8735,8739,8786,v18037,8895,v18038,v18039,v18040,v18041,v18042,9737,8853,12306,v18043,v18044,12963,v18045,v18046,13217,13252,13262,v18047,13269,65072,65506,65508,8481,12849,8208,12540,v18048,v18049,
12294,v18050,v18051,v18052,v18053,v18054,12350,v18055,19970,v18056,19983,19986,19991,v18057,20003,20006,20009,v18058,20017,20019,20021,20023,20028,v18059,20036,20038,20042,20049,20053,20055,v18060,v18061,v18062,v18063,20082,v18064,v18065,v18066,v18067,20103,20106,20112,v18068,20121,v18069,20131,20138,v18070,20148,v18071,v18072,20168,20172,v18073,20178,v18074,20192,20194,v18075,20201,v18076,20209,20212,v18077,20220,20222,20224,v18078,v18079,v18080,v18081,20257,20259,v18082,v18083,20273,20275,20277,
20279,20281,20283,v18084,v18085,v18086,20306,20308,20310,v18087,20326,20328,v18088,v18089,v18090,20341,v18091,20349,v18092,20357,20359,20362,20364,20366,20368,v18093,20373,v18094,20380,v18095,v18096,20388,20395,20397,v18097,v18098,v18099,v18100,v18101,v18102,20441,20443,20450,v18103,20455,v18104,20464,20466,v18105,20473,v18106,20479,v18107,v18108,20490,20494,20496,20499,v18109,20507,v18110,20512,v18111,20519,v18112,20539,20541,v18113,v18114,v18115,20557,v18116,v18117,20571,v18118,v18119,v18120,v18121,
v18122,v18123,v18124,v18125,v18126,20631,v18127,20644,20646,v18128,v18129,20662,v18130,v18131,v18132,v18133,v18134,v18135,20688,v18136,v18137,v18138,v18139,v18140,v18141,20724,v18142,20730,v18143,20737,20739,20741,20746,v18144,20753,20755,v18145,v18146,20768,v18147,v18148,v18149,v18150,v18151,20802,20807,20810,20812,v18152,20819,v18153,20827,v18154,v18155,v18156,20842,20847,20850,20858,v18157,v18158,v18159,v18160,v18161,v18162],v23753=[20888,20890,v18163,20897,20899,v18164,v18165,20916,v18166,v18167,
v18168,20933,20936,20938,20942,20944,v18169,20956,v18170,v18171,v18172,20972,20974,20978,20980,20983,20990,v18173,21001,v18174,v18175,v18176,21020,v18177,v18178,v18179,21034,21036,21039,v18180,v18181,21052,21054,v18182,v18183,v18184,v18185,21077,v18186,21085,v18187,v18188,21094,21096,v18189,v18190,21107,v18191,21118,21120,v18192,21131,v18193,21138,v18194,21148,v18195,v18196,v18197,21184,21186,v18198,21192,21194,v18199,21201,v18200,21207,21210,21212,v18201,21219,v18202,v18203,v18204,v18205,v18206,
21255,v18207,21262,v18208,21272,v18209,v18210,21282,v18211,v18212,v18213,21296,v18214,v18215,v18216,21314,21316,21318,v18217,21328,v18218,21339,21341,21349,21352,21354,v18219,21362,21366,21369,v18220,v18221,21379,v18222,21386,v18223,v18224,v18225,21406,21409,21412,21415,v18226,v18227,21427,21429,v18228,v18229,21440,v18230,v18231,v18232,21461,21466,v18233,21473,21479,21492,21498,v18234,21506,21509,21511,21515,21524,v18235,21532,21538,v18236,21546,21552,21555,v18237,21562,21565,21567,v18238,v18239,
21575,21577,v18240,21585,21594,v18241,21603,21605,21607,v18242,21620,v18243,v18244,21633,21635,21637,v18245,21645,21649,21651,v18246,21660,v18247,21669,21678,21680,21682,v18248,v18249,21694,21699,21701,v18250,21718,21720,21723,21728,v18251,v18252,v18253,v18254,21755,21758,21760,v18255,21765,21768,v18256,v18257,v18258,v18259,21793,v18260,v18261,21803,21805,21810,v18262,v18263,21821,21824,21826,21829,v18264,v18265,v18266,21844,v18267,21853,v18268,v18269,v18270,21867,v18271,v18272,21885,21887,v18273,
v18274,21904,v18275,v18276,v18277,21918,v18278,v18279,21931,21933,v18280,21940,21942,21944,21946,21948,v18281,21960,v18282,v18283,21973,v18284,21979,21982,21984,21986,21991,v18285,v18286,22004,v18287,22015,v18288,22023,v18289,v18290,22037,v18291,22045,v18292,v18293,22056,v18294,22067,22071,22074,v18295,22080,v18296,v18297,v18298,v18299,v18300,22113,22115,22119,v18301,22128,22131,22133,22135,22138,v18302,v18303,v18304,22157,v18305,22164,v18306,v18307,v18308,22183,v18309,v18310,22197,v18311,v18312,
v18313,v18314,22219,v18315,v18316,v18317,v18318,22236,22243,v18319,22252,v18320,v18321,v18322,v18323,v18324,22277,22284,v18325,v18326,22295,v18327,v18328,v18329,v18330,22315,v18331,v18332,v18333,22335,22337,v18334,v18335,22347,v18336,v18337,v18338,22373,22375,22380,22382,v18339,v18340,v18341,v18342,v18343,v18344,v18345,v18346,22437,22440,22442,22444,v18347,22451,v18348,v18349,v18350,v18351,v18352,22483,v18353,v18354,22494,v18355,v18356,22510,v18357,v18358,v18359,v18360,22529,v18361,v18362,22540,v18363,
v18364,v18365,v18366,22559,v18367,v18368,v18369,v18370,v18371,v18372,22606,22608,22611,v18373,v18374,v18375,22627,v18376,v18377,v18378,v18379,22655,22658,22660,v18380,v18381,v18382,22683,22685,v18383,v18384,v18385,v18386,22717,v18387,v18388,22726,v18389,22738,22740,v18390,v18391,22753,22755,v18392,22762,22765,v18393,v18394,v18395,v18396,v18397,22787,v18398,v18399,v18400,v18401,22798,v18402,v18403,22811,v18404,v18405,22819,22822,22824,22828,22832,v18406,v18407,22843,22845,v18408,22851,v18409,22858,
v18410,22864,v18411,22873,v18412,22881,v18413,v18414,22891,22893,v18415,22901,22903,v18416,v18417,22917,22921,v18418,v18419,v18420,22936,v18421,v18422,v18423,v18424,v18425,v18426,22970],v23755=[v18427,v18428,v18429,v18430,v18431,23001,23003,v18432,23012,v18433,v18434,v18435,23034,v18436,23040,23042,v18437,v18438,23058,v18439,v18440,v18441,v18442,23076,v18443,v18444,23091,23093,v18445,v18446,v18447,v18448,v18449,v18450,v18451,v18452,v18453,v18454,v18455,v18456,v18457,v18458,v18459,v18460,v18461,v18462,
23220,v18463,v18464,v18465,v18466,v18467,v18468,23251,23253,v18469,v18470,23266,v18471,v18472,23274,v18473,v18474,v18475,v18476,v18477,23306,v18478,23320,v18479,v18480,v18481,23345,23347,v18482,v18483,v18484,v18485,23378,23382,23390,v18486,v18487,v18488,23410,23412,v18489,23417,v18490,23422,23426,23430,23434,v18491,v18492,23444,23446,23455,v18493,v18494,v18495,23479,v18496,v18497,23491,v18498,v18499,23505,v18500,23520,23523,23530,23533,23535,v18501,23543,v18502,23552,v18503,23557,23564,23568,v18504,
23575,23577,23579,v18505,23587,23590,v18506,v18507,v18508,v18509,v18510,v18511,v18512,v18513,v18514,v18515,23647,23655,v18516,23661,23664,v18517,v18518,23680,v18519,v18520,v18521,v18522,23701,v18523,v18524,23722,v18525,23730,23732,23734,v18526,23742,23744,v18527,v18528,v18529,v18530,v18531,v18532,23783,23785,v18533,v18534,v18535,23797,v18536,23804,v18537,v18538,v18539,v18540,23829,v18541,v18542,v18543,23845,23848,v18544,v18545,v18546,v18547,v18548,v18549,v18550,v18551,23900,v18552,23914,v18553,v18554,
v18555,23939,v18556,v18557,23960,v18558,v18559,v18560,v18561,23993,23995,v18562,v18563,24012,v18564,24019,v18565,24028,v18566,v18567,24042,v18568,v18569,v18570,v18571,24068,24071,v18572,v18573,v18574,24087,v18575,v18576,24108,v18577,24114,v18578,v18579,v18580,24129,v18581,v18582,24150,v18583,v18584,24160,v18585,v18586,24181,24183,v18587,24197,v18588,v18589,24210,24216,24219,24221,v18590,v18591,24236,v18592,24244,v18593,v18594,v18595,v18596,v18597,v18598,v18599,24297,24299,v18600,24309,v18601,v18602,
v18603,24329,v18604,24336,24338,24340,24342,v18605,v18606,v18607,24360,v18608,24366,24368,24370,24372,v18609,24379,v18610,v18611,24391,v18612,24397,24399,24401,24404,v18613,v18614,24419,24421,v18615,24427,v18616,24434,v18617,24440,24442,v18618,24451,24454,v18619,v18620,24470,v18621,24477,24479,v18622,v18623,v18624,24502,24504,v18625,v18626,v18627,v18628,24526,v18629,v18630,v18631,v18632,v18633,v18634,24556,v18635,v18636,v18637,v18638,24572,v18639,v18640,v18641,24595,v18642,24602,v18643,v18644,v18645,
v18646,v18647,v18648,24640,v18649,24652,v18650,24657,v18651,v18652,v18653,v18654,v18655,24686,v18656,v18657,24695,24702,v18658,v18659,v18660,v18661,24723,24725,v18662,24732,24734,v18663,v18664,24743,v18665,24750,24752,24755,24759,v18666,v18667,v18668,v18669,v18670,v18671,24793,24795,24798,v18672,24810,24821,v18673,v18674,v18675,24839,v18676,v18677,v18678,v18679,v18680,24869,v18681,v18682,v18683,v18684,v18685,24905,24909,v18686,v18687,v18688,24921,v18689,24926,v18690,v18691,24937,v18692,24943,v18693,
24948,v18694,v18695,v18696,24975,24979,v18697,v18698,v18699,v18700,25002,25005,v18701,v18702,v18703,v18704,v18705,v18706,25043,v18707,v18708,v18709,25063,v18710,v18711,25081,25083,25085,v18712,25097,25107,25113,v18713,25120,25123,25126,v18714,25131,25133,25135,25137,25141,v18715,v18716,25154,v18717,25162,v18718,v18719,v18720,v18721,v18722,25192,v18723,v18724,v18725,v18726,25213,v18727,v18728,v18729,25236,25241,v18730,25251,v18731,v18732,v18733,v18734,v18735,25274,25278],v23757=[v18736,25283,25291,
25295,25297,25301,v18737,v18738,25316,v18739,25328,25330,25333,v18740,25344,v18741,v18742,v18743,v18744,v18745,25372,v18746,25385,v18747,v18748,v18749,v18750,v18751,25412,v18752,25418,v18753,v18754,25440,v18755,25450,25452,v18756,v18757,v18758,v18759,25473,v18760,25483,25485,25489,v18761,25495,v18762,25505,25508,25510,25515,25519,v18763,v18764,25529,25531,25533,25535,v18765,25541,v18766,v18767,25553,v18768,v18769,v18770,25567,25570,v18771,v18772,v18773,25587,25589,25591,v18774,25598,v18775,v18776,
25614,v18777,v18778,v18779,25629,25631,v18780,v18781,25643,v18782,25653,v18783,v18784,25662,25664,v18785,25673,v18786,25683,v18787,v18788,25693,v18789,25704,v18790,25710,v18791,v18792,25719,v18793,25731,25734,v18794,25748,v18795,v18796,v18797,v18798,25770,25775,25777,25780,25782,25785,25789,25795,25798,v18799,25804,25807,25809,25811,v18800,25817,v18801,25823,25825,25827,25829,v18802,v18803,25843,v18804,v18805,25853,25855,v18806,25861,v18807,v18808,v18809,25875,25877,25879,25882,25884,v18810,v18811,
25901,v18812,25911,25914,v18813,v18814,v18815,v18816,v18817,25936,v18818,25944,25946,25948,v18819,v18820,v18821,v18822,25969,25971,25974,v18823,v18824,v18825,v18826,26002,26004,26006,26008,26010,v18827,26016,v18828,26022,26024,26026,26030,v18829,26040,v18830,v18831,26050,v18832,26061,v18833,v18834,v18835,26081,v18836,v18837,v18838,v18839,v18840,26113,v18841,v18842,26123,26125,v18843,v18844,v18845,26142,v18846,26150,v18847,26158,26160,v18848,v18849,26173,v18850,v18851,v18852,v18853,v18854,v18855,26206,
26208,v18856,26213,26215,v18857,v18858,26229,v18859,v18860,v18861,26243,v18862,v18863,v18864,v18865,v18866,v18867,v18868,v18869,v18870,v18871,v18872,v18873,v18874,26309,26312,v18875,v18876,26330,v18877,v18878,v18879,v18880,v18881,26353,v18882,v18883,26365,v18884,v18885,26380,v18886,v18887,26390,v18888,26396,26398,v18889,26409,26414,26416,v18890,v18891,v18892,v18893,26433,v18894,26439,v18895,26445,26450,v18896,v18897,26461,v18898,v18899,v18900,26478,26484,26486,v18901,26493,26496,v18902,v18903,26504,
26506,v18904,v18905,26518,26521,26523,v18906,26532,26534,26537,26540,26542,v18907,26548,v18908,26562,v18909,v18910,26587,26591,26593,v18911,v18912,v18913,v18914,26610,v18915,26622,v18916,26630,26637,26640,26642,v18917,v18918,v18919,v18920,v18921,v18922,v18923,26687,26695,26699,26701,26703,26706,v18924,26730,v18925,26741,v18926,26754,26756,v18927,v18928,v18929,v18930,26782,v18931,v18932,v18933,26798,v18934,26804,v18935,26817,v18936,26826,26828,v18937,v18938,26841,v18939,v18940,v18941,v18942,26863,
v18943,v18944,26875,v18945,v18946,v18947,26892,26897,v18948,v18949,v18950,v18951,v18952,v18953,v18954,26942,v18955,v18956,v18957,v18958,v18959,v18960,26975,v18961,v18962,26983,v18963,26988,v18964,v18965,26998,v18966,v18967,27009,27011,27013,v18968,v18969,v18970,v18971,v18972,27049,27052,v18973,v18974,v18975,v18976,v18977,27072,v18978,27087,v18979,v18980,v18981,v18982,v18983,v18984,v18985,27134,27136,v18986,v18987,v18988,v18989,v18990,27168,27170,v18991,27177,v18992,27184,v18993,v18994,v18995,v18996,
v18997,v18998,v18999,v19000,27226,v19001,27232,v19002,v19003,v19004,v19005,v19006,v19007,v19008,v19009,27279,v19010,v19011,v19012,v19013,27297,v19014,27306,v19015,v19016,v19017,v19018,v19019,v19020,v19021,27356,v19022,27369,27371,v19023,v19024,v19025],v23759=[v19026,v19027,v19028,v19029,v19030,v19031,27423,v19032,v19033,v19034,27448,v19035,v19036,v19037,27464,v19038,v19039,v19040,v19041,27488,v19042,v19043,v19044,27514,v19045,27525,27528,27532,v19046,v19047,27543,27545,v19048,v19049,v19050,v19051,
v19052,v19053,27574,v19054,v19055,27584,v19056,v19057,27596,27598,v19058,27608,27610,v19059,v19060,v19061,v19062,27636,v19063,v19064,27646,v19065,v19066,27662,27666,27671,v19067,27680,27685,27693,27697,27699,v19068,v19069,v19070,v19071,27720,v19072,v19073,27734,v19074,v19075,v19076,v19077,27761,27763,27765,v19078,v19079,v19080,27780,27783,v19081,v19082,v19083,v19084,27802,v19085,27808,27810,27816,27820,v19086,v19087,27834,v19088,v19089,27851,v19090,v19091,v19092,v19093,27871,27876,v19094,27881,v19095,
27890,27892,27897,v19096,v19097,v19098,v19099,27917,v19100,v19101,27928,v19102,v19103,27942,v19104,v19105,v19106,27956,v19107,27962,v19108,27970,27972,27977,27980,27984,v19109,27995,27997,27999,v19110,v19111,v19112,v19113,v19114,v19115,v19116,v19117,v19118,28038,v19119,28045,v19120,28050,v19121,28060,28066,28069,v19122,v19123,v19124,v19125,v19126,v19127,v19128,v19129,v19130,28119,v19131,28127,v19132,28133,v19133,28141,v19134,28146,28148,28152,v19135,v19136,28171,28175,v19137,28181,v19138,v19139,v19140,
28194,v19141,28202,28206,v19142,28211,v19143,28217,v19144,v19145,v19146,v19147,28245,28247,v19148,v19149,v19150,v19151,v19152,v19153,28292,v19154,v19155,v19156,28311,v19157,28318,v19158,v19159,28326,v19160,v19161,28336,28339,28341,v19162,28348,v19163,28355,28358,v19164,28365,28368,28370,28374,v19165,v19166,28387,28391,v19167,v19168,v19169,28403,v19170,v19171,28416,v19172,v19173,v19174,v19175,v19176,v19177,28449,v19178,28462,28464,v19179,28471,v19180,28480,v19181,v19182,28492,v19183,v19184,v19185,
v19186,28509,v19187,28515,28517,v19188,28529,28531,v19189,28537,28539,v19190,v19191,28549,v19192,v19193,v19194,v19195,v19196,v19197,28584,v19198,v19199,28594,v19200,v19201,v19202,v19203,v19204,v19205,v19206,v19207,v19208,v19209,v19210,v19211,v19212,28667,28669,v19213,v19214,28682,v19215,28688,v19216,v19217,28697,28700,28702,v19218,v19219,v19220,28721,v19221,v19222,v19223,v19224,v19225,v19226,28752,v19227,v19228,v19229,v19230,v19231,v19232,28782,v19233,28791,v19234,28797,v19235,v19236,v19237,v19238,
28819,v19239,v19240,v19241,28848,28850,v19242,28858,v19243,v19244,28873,v19245,v19246,28890,v19247,v19248,28901,28906,28910,v19249,v19250,28920,v19251,v19252,v19253,v19254,28948,28951,v19255,v19256,v19257,v19258,v19259,v19260,29003,29005,v19261,v19262,29021,v19263,29027,29029,v19264,29037,v19265,v19266,29049,v19267,v19268,v19269,v19270,v19271,29075,v19272,v19273,v19274,v19275,v19276,29106,29108,v19277,v19278,v19279,29122,v19280,v19281,v19282,29139,v19283,v19284,v19285,v19286,v19287,v19288,v19289,
v19290,29181,v19291,v19292,v19293,v19294,29212,v19295,29225,29227,v19296,v19297,29244,v19298,v19299,v19300,v19301,29271,29274,29276,29278,29280,v19302,29288,v19303,v19304,v19305,v19306,v19307,v19308,v19309,29324,29326,v19310,v19311,v19312,v19313,v19314,v19315,29358,v19316,29365,v19317,v19318,v19319,29391,29393,v19320,29400,v19321,29407,v19322,v19323,v19324,v19325,29442,v19326,v19327,v19328,29460,v19329,v19330,v19331,v19332,29485,v19333,v19334,29493,29498,v19335,29504,v19336,v19337,v19338,29521,v19339,
v19340,v19341,29545,29550,29553,v19342,29558,29561],v23761=[29565,29567,v19343,v19344,29576,29578,v19345,v19346,v19347,v19348,v19349,v19350,v19351,29610,v19352,29617,v19353,v19354,v19355,29633,v19356,v19357,29646,v19358,v19359,29663,v19360,29670,29672,v19361,v19362,v19363,v19364,29700,v19365,v19366,v19367,v19368,v19369,29735,29737,29739,29741,29743,v19370,v19371,v19372,29760,v19373,v19374,29782,29784,29789,v19375,v19376,v19377,v19378,v19379,v19380,29823,29826,v19381,29832,29834,v19382,29839,v19383,
29853,v19384,v19385,v19386,v19387,v19388,v19389,v19390,v19391,29907,v19392,29915,29917,29919,29921,29925,v19393,v19394,29941,v19395,v19396,v19397,29966,29968,29970,v19398,29979,v19399,v19400,29988,v19401,29994,29998,30004,30006,30009,v19402,30015,v19403,v19404,v19405,30029,v19406,v19407,v19408,v19409,v19410,v19411,30067,30069,30071,v19412,v19413,v19414,v19415,v19416,30096,30099,30101,30104,v19417,30110,30114,v19418,30125,v19419,v19420,v19421,30150,v19422,v19423,30163,30167,30170,v19424,v19425,30181,
30185,v19426,v19427,v19428,v19429,v19430,30212,v19431,v19432,v19433,30230,30234,v19434,30243,30248,30252,v19435,v19436,v19437,v19438,30269,30273,v19439,30280,v19440,v19441,30293,30295,v19442,30301,v19443,30310,30312,30314,v19444,v19445,30327,v19446,v19447,30339,30341,v19448,v19449,v19450,30354,v19451,v19452,v19453,v19454,v19455,30387,v19456,30393,v19457,v19458,v19459,30407,30409,v19460,30419,30421,v19461,v19462,30432,30434,30438,v19463,30448,30451,v19464,v19465,30461,v19466,v19467,v19468,30474,30476,
v19469,v19470,30497,v19471,30503,v19472,30510,v19473,30521,30523,v19474,30530,v19475,v19476,v19477,v19478,v19479,30564,30567,v19480,v19481,v19482,v19483,v19484,v19485,v19486,v19487,30625,v19488,30630,30632,30635,v19489,v19490,30644,v19491,30654,v19492,v19493,v19494,v19495,v19496,30692,30694,30696,30698,v19497,v19498,30711,v19499,v19500,v19501,v19502,30739,30741,30745,30747,30750,v19503,30756,30760,v19504,v19505,v19506,v19507,30781,30783,v19508,30788,30790,v19509,30797,30799,30801,v19510,v19511,v19512,
v19513,30825,v19514,v19515,v19516,30856,v19517,v19518,30866,v19519,30873,v19520,30880,30882,30884,30886,30888,v19521,v19522,v19523,30907,30909,v19524,v19525,v19526,v19527,v19528,v19529,v19530,v19531,v19532,v19533,v19534,30963,v19535,v19536,v19537,v19538,v19539,v19540,v19541,v19542,v19543,v19544,31013,v19545,v19546,v19547,v19548,31037,31039,v19549,31047,v19550,v19551,v19552,31073,v19553,31078,v19554,31086,v19555,31097,v19556,v19557,v19558,v19559,v19560,v19561,v19562,v19563,31151,31154,v19564,v19565,
31164,31167,31170,v19566,v19567,31178,31180,v19568,v19569,v19570,v19571,v19572,31205,31208,31210,31212,31214,v19573,v19574,31228,v19575,31233,v19576,v19577,31244,v19578,v19579,v19580,v19581,31263,v19582,v19583,v19584,31282,v19585,31288,31290,31294,v19586,v19587,v19588,v19589,v19590,v19591,31338,v19592,v19593,31349,v19594,31362,31365,31367,v19595,v19596,v19597,v19598,31390,v19599,31399,31403,v19600,v19601,v19602,v19603,v19604,31430,31433,v19605,v19606,v19607,v19608,31460,v19609,v19610,31470,v19611,
v19612,v19613,31486,v19614,31493,31495,31497,v19615,31504,v19616,v19617,31514,v19618,31519,v19619,31527,31529,31533,v19620,31538,v19621,31545,31547,31549,v19622,31560,31562,v19623,31571,31573,31575,31577,31580,v19624,31585,v19625,v19626,v19627,v19628,31606,31608,31610,v19629,31615,v19630,v19631,31628,v19632,v19633,31638,v19634],v23763=[v19635,v19636,v19637,v19638,v19639,v19640,v19641,31685,31688,31690,v19642,31698,v19643,v19644,v19645,v19646,v19647,v19648,v19649,31730,v19650,v19651,31741,31743,v19652,
v19653,31758,v19654,v19655,31776,31778,v19656,v19657,v19658,v19659,31810,v19660,v19661,v19662,v19663,v19664,31851,31853,v19665,v19666,v19667,v19668,v19669,31894,v19670,v19671,31907,v19672,v19673,v19674,v19675,v19676,v19677,v19678,31942,31945,31947,v19679,31960,v19680,v19681,v19682,31985,31987,31989,31991,31994,v19683,31999,32001,32003,32012,v19684,v19685,32022,32024,v19686,v19687,v19688,v19689,v19690,32059,v19691,32065,32067,32069,v19692,32079,v19693,v19694,v19695,32103,v19696,v19697,v19698,32120,
v19699,32130,v19700,32135,v19701,v19702,v19703,32157,v19704,v19705,v19706,32175,v19707,32188,v19708,v19709,v19710,v19711,32211,v19712,v19713,32223,32226,v19714,32231,v19715,v19716,32240,32243,32245,v19717,32250,v19718,v19719,v19720,32284,v19721,v19722,v19723,32300,v19724,32307,32312,32314,32316,v19725,v19726,v19727,32339,v19728,v19729,v19730,v19731,32364,v19732,v19733,v19734,v19735,v19736,32393,32395,32398,v19737,32405,32407,v19738,v19739,32430,32436,v19740,32470,32484,32492,32505,32522,32528,32542,
32567,32569,v19741,32579,v19742,32589,32591,v19743,32598,32601,v19744,32608,v19745,v19746,32623,32627,v19747,32632,v19748,v19749,v19750,32647,32649,32651,32653,v19751,v19752,v19753,32672,v19754,32678,32680,v19755,32689,v19756,v19757,32702,32704,v19758,v19759,32715,32717,v19760,32723,v19761,v19762,v19763,v19764,v19765,32751,32754,v19766,32762,v19767,32770,v19768,v19769,32785,32787,v19770,v19771,32801,v19772,32811,32813,v19773,32818,32820,v19774,32828,32830,v19775,v19776,v19777,v19778,32851,32853,32855,
32857,v19779,v19780,v19781,32884,32888,v19782,v19783,32904,32906,v19784,v19785,32919,32921,32926,32931,v19786,32940,32944,32947,v19787,v19788,32955,32965,v19789,v19790,32984,v19791,v19792,32998,33006,33013,33015,33017,33019,v19793,v19794,v19795,v19796,33045,33047,33049,v19797,v19798,v19799,33072,v19800,33079,v19801,v19802,33095,33097,33101,33103,33106,v19803,v19804,v19805,33128,33130,33132,33135,v19806,v19807,33153,v19808,33161,v19809,33168,v19810,33177,v19811,v19812,v19813,33191,v19814,v19815,33212,
v19816,v19817,33227,33230,v19818,33241,v19819,v19820,v19821,33257,33259,v19822,v19823,33277,33279,33283,33291,v19824,33297,33299,v19825,33309,33312,v19826,33321,33326,33330,33338,v19827,v19828,v19829,33352,33354,v19830,v19831,v19832,v19833,33381,33383,v19834,v19835,v19836,v19837,v19838,v19839,33411,v19840,33417,33420,33424,v19841,v19842,33438,33440,v19843,33447,33458,v19844,33466,33468,v19845,v19846,v19847,33481,33488,33494,v19848,33501,33506,v19849,v19850,33520,v19851,v19852,33528,33530,v19853,v19854,
33549,33552,v19855,33558,v19856,v19857,v19858,33582,33584,33586,33591,33595,v19859,v19860,v19861,33608,v19862,33619,v19863,33629,33634,v19864,v19865,v19866,v19867,v19868,v19869,v19870,33687,v19871,33693,33695,33697,v19872,v19873,33717,33723,v19874,v19875,33734,v19876,33739,v19877,v19878,33749,33751,v19879,33758,v19880,v19881,v19882,v19883,v19884,v19885,33794,33797,v19886,33808,v19887,v19888,v19889,v19890,v19891,v19892,v19893,v19894,v19895,v19896,v19897,v19898,33880,v19899,33890,33893,v19900,33898,
33902,33904,33906,33908,33913,v19901,v19902,33930,33933,v19903,v19904,33944],v23765=[v19905,v19906,v19907,v19908,33971,v19909,33979,33982,v19910,v19911,33996,v19912,34002,v19913,v19914,34014,v19915,34020,v19916,34029,v19917,34046,v19918,v19919,34066,v19920,v19921,v19922,34080,34082,v19923,v19924,v19925,v19926,34114,v19927,34119,v19928,v19929,34132,34135,v19930,v19931,34147,v19932,v19933,v19934,34163,v19935,34168,v19936,v19937,34182,34185,34187,v19938,34192,v19939,v19940,v19941,v19942,34213,34215,
v19943,v19944,34232,v19945,v19946,v19947,v19948,34260,v19949,v19950,v19951,v19952,34293,v19953,v19954,v19955,v19956,v19957,v19958,v19959,v19960,v19961,v19962,34344,v19963,v19964,34361,34363,v19965,v19966,v19967,v19968,34395,34397,v19969,v19970,v19971,34413,v19972,v19973,v19974,v19975,34452,v19976,v19977,v19978,34475,v19979,v19980,v19981,v19982,v19983,34501,34504,v19984,v19985,v19986,34522,v19987,v19988,v19989,v19990,34543,v19991,v19992,34559,34561,v19993,v19994,v19995,34580,34582,34585,34587,34589,
v19996,34596,v19997,v19998,v19999,v20000,v20001,v20002,v20003,v20004,v20005,34637,v20006,34644,34646,34648,v20007,v20008,v20009,34671,v20010,34677,34679,v20011,v20012,v20013,v20014,34700,v20015,v20016,v20017,v20018,v20019,v20020,34734,v20021,34740,v20022,34748,v20023,v20024,34757,34759,34761,v20025,v20026,v20027,v20028,v20029,34788,v20030,34795,34797,v20031,v20032,v20033,34810,v20034,v20035,34820,v20036,v20037,34834,34836,v20038,v20039,34848,v20040,v20041,v20042,34874,v20043,v20044,v20045,34891,v20046,
v20047,34904,34906,34908,v20048,v20049,34922,34925,34927,34929,v20050,34936,v20051,34944,34947,v20052,v20053,34956,v20054,v20055,v20056,v20057,34979,v20058,34988,v20059,v20060,v20061,v20062,v20063,v20064,v20065,v20066,35027,v20067,v20068,35038,v20069,v20070,v20071,35058,v20072,v20073,v20074,v20075,v20076,v20077,35089,v20078,v20079,v20080,v20081,v20082,35121,35125,35127,v20083,v20084,v20085,v20086,v20087,v20088,v20089,35173,v20090,35179,v20091,v20092,v20093,v20094,v20095,35200,35202,v20096,v20097,
v20098,v20099,v20100,35223,v20101,v20102,v20103,35243,v20104,v20105,v20106,v20107,v20108,35262,35267,35277,v20109,v20110,35291,35293,v20111,35300,v20112,v20113,v20114,35317,35319,v20115,v20116,35337,35339,35341,35343,v20117,35348,35351,v20118,35356,35358,v20119,35364,v20120,v20121,v20122,v20123,35381,v20124,v20125,v20126,v20127,35399,v20128,35407,35409,35411,v20129,v20130,v20131,v20132,v20133,v20134,35434,35439,35444,v20135,v20136,v20137,v20138,35464,v20139,v20140,35476,v20141,35481,v20142,35487,
35490,35495,v20143,v20144,35505,v20145,v20146,v20147,v20148,v20149,35523,v20150,35528,35530,35532,35534,35536,v20151,v20152,35549,v20153,35555,35557,v20154,35564,v20155,35570,v20156,35577,35579,35581,35583,35587,35590,v20157,v20158,35599,v20159,35605,35608,35612,v20160,v20161,35623,v20162,v20163,v20164,v20165,v20166,v20167,v20168,35671,35675,v20169,v20170,v20171,v20172,v20173,v20174,v20175,v20176,v20177,v20178,35732,v20179,35741,35743,35756,35761,35771,35783,35792,35818,35849,35870,v20180,v20181,
v20182,v20183,v20184,v20185,v20186,v20187,v20188,v20189,v20190,v20191,v20192,35979,v20193,v20194,v20195,35999,v20196,v20197,36017,36021,36025,36030,36038,36041,v20198,36052,v20199,36059,36061,36063,36069,v20200,v20201,v20202,v20203,v20204,36105,36108,36110,v20205,v20206,36128,v20207,36183,36191,36197,v20208,36204,v20209,v20210,v20211,v20212,v20213,v20214,v20215,v20216,v20217,v20218],v23767=[v20219,v20220,v20221,36281,36283,36285,v20222,36293,v20223,36301,36304,v20224,v20225,36316,v20226,v20227,36329,
v20228,v20229,36340,36342,36348,v20230,v20231,36363,v20232,v20233,v20234,v20235,v20236,36395,36397,36400,v20237,v20238,v20239,v20240,36419,v20241,v20242,v20243,v20244,v20245,v20246,v20247,v20248,36462,36465,36467,36469,v20249,36475,v20250,36480,v20251,36486,36488,36492,36494,v20252,36507,36509,v20253,v20254,v20255,v20256,v20257,v20258,v20259,v20260,v20261,36563,v20262,v20263,v20264,v20265,v20266,v20267,36605,v20268,36612,36614,36616,v20269,36627,v20270,v20271,v20272,v20273,v20274,v20275,v20276,v20277,
v20278,36675,v20279,v20280,v20281,v20282,36704,36707,36709,36714,36736,36748,36754,36765,v20283,v20284,36775,36778,36780,v20285,v20286,v20287,v20288,v20289,36803,36806,v20290,36815,36818,v20291,36826,v20292,36835,36839,36844,36847,v20293,v20294,v20295,v20296,v20297,36876,36878,36883,36888,36892,v20298,v20299,v20300,v20301,36919,v20302,36925,v20303,36931,v20304,v20305,36940,36950,v20306,36957,36959,36961,36964,v20307,v20308,v20309,36979,36982,36985,36987,36990,v20310,37001,v20311,37010,37012,37014,
37016,37018,37020,v20312,v20313,v20314,37035,37037,37042,37047,v20315,v20316,v20317,37062,v20318,v20319,37074,v20320,v20321,37086,37088,v20322,v20323,37100,37102,v20324,v20325,v20326,v20327,37123,37125,v20328,v20329,37139,37141,v20330,v20331,v20332,v20333,v20334,37166,37171,37173,v20335,v20336,v20337,37191,37201,v20338,v20339,v20340,v20341,v20342,37227,37229,37235,v20343,v20344,37254,37256,37258,v20345,v20346,v20347,v20348,v20349,v20350,v20351,v20352,37314,37316,v20353,37320,37328,37334,v20354,v20355,
v20356,37352,v20357,37366,37368,v20358,v20359,v20360,v20361,37391,v20362,v20363,v20364,37412,v20365,37423,v20366,v20367,v20368,v20369,v20370,v20371,v20372,v20373,37462,v20374,v20375,v20376,v20377,v20378,v20379,v20380,37497,v20381,v20382,37508,v20383,v20384,37522,v20385,37527,37529,37531,v20386,v20387,37540,37543,37549,v20388,v20389,37560,37562,v20390,37570,37572,37574,v20391,v20392,v20393,v20394,37598,v20395,37607,37609,v20396,v20397,37623,v20398,v20399,v20400,v20401,37649,v20402,v20403,v20404,37665,
v20405,37671,v20406,v20407,v20408,v20409,37687,v20410,37695,37698,v20411,v20412,37708,v20413,v20414,v20415,v20416,v20417,37739,v20418,v20419,v20420,v20421,v20422,37763,v20423,v20424,v20425,v20426,37783,v20427,v20428,37800,37803,37805,37807,v20429,37812,v20430,v20431,v20432,v20433,37833,37835,v20434,v20435,v20436,37856,37859,v20437,v20438,37878,37880,v20439,v20440,v20441,37905,v20442,v20443,v20444,v20445,v20446,v20447,37940,v20448,37945,v20449,v20450,v20451,37963,v20452,37971,v20453,v20454,37988,v20455,
37996,v20456,38001,v20457,38008,v20458,v20459,38033,38038,38040,38087,38095,v20460,38106,38118,38139,38172,38176,38183,38195,38205,38211,38216,38219,38229,38234,38240,38254,v20461,v20462,38273,v20463,v20464,38282,38285,38288,38290,v20465,v20466,38306,v20467,38314,v20468,v20469,v20470,38330,v20471,v20472,38343,38345,v20473,v20474,v20475,38365,v20476,v20477,v20478,38380,38399,38407,38419,38424,38427,38430,38432,v20479,v20480,v20481,v20482,38462,38465,38467,38474,v20483,v20484,v20485,v20486,38492,38494,
38496,v20487,38507,v20488,38513,v20489,v20490,38535,38537,38540,v20491,38550,38554,v20492,38569,v20493,38578,38581,38583,38586,38591],v23769=[v20494,38600,v20495,v20496,v20497,v20498,38618,v20499,38625,v20500,v20501,v20502,v20503,38648,38650,v20504,38655,v20505,38661,v20506,v20507,v20508,v20509,38685,v20510,v20511,v20512,v20513,38705,v20514,v20515,v20516,38723,v20517,v20518,v20519,v20520,v20521,v20522,38751,v20523,v20524,v20525,38773,v20526,v20527,v20528,38796,38798,38800,38803,v20529,v20530,v20531,
v20532,v20533,38828,38830,v20534,38835,v20535,v20536,v20537,v20538,38858,v20539,v20540,v20541,38877,v20542,38888,v20543,38900,v20544,38912,38916,38921,38923,38925,v20545,v20546,v20547,v20548,38949,v20549,v20550,v20551,v20552,38972,v20553,v20554,v20555,v20556,39002,v20557,v20558,v20559,39014,v20560,v20561,39026,39051,39054,39058,39061,39065,39075,v20562,39088,39090,v20563,v20564,v20565,39109,39111,v20566,v20567,39124,v20568,v20569,39137,v20570,39148,39150,v20571,39155,v20572,v20573,39172,v20574,39179,
v20575,v20576,v20577,v20578,v20579,v20580,v20581,v20582,v20583,v20584,39229,v20585,39236,v20586,v20587,39251,39254,v20588,39261,v20589,39268,39270,39283,v20590,39291,39294,v20591,39305,39308,39310,v20592,v20593,v20594,v20595,39346,v20596,v20597,39379,v20598,39386,39388,39390,39392,v20599,v20600,v20601,39424,v20602,v20603,v20604,v20605,v20606,39468,39471,v20607,v20608,39487,v20609,v20610,39502,v20611,39510,v20612,v20613,v20614,39523,v20615,39531,39538,39555,39561,v20616,v20617,39577,39590,v20618,v20619,
39609,39611,v20620,v20621,v20622,v20623,39632,39639,v20624,39648,v20625,v20626,39660,v20627,39674,v20628,v20629,39687,v20630,39694,v20631,v20632,v20633,v20634,39716,39718,39720,v20635,39728,v20636,v20637,39750,v20638,39760,v20639,v20640,39769,v20641,v20642,v20643,v20644,39810,v20645,39823,v20646,v20647,v20648,39852,v20649,v20650,39880,v20651,39893,v20652,39900,v20653,39907,v20654,39913,v20655,v20656,v20657,39934,v20658,v20659,v20660,39953,v20661,v20662,39972,v20663,v20664,v20665,39988,39990,39992,
39994,v20666,v20667,v20668,v20669,40019,40021,v20670,40030,v20671,v20672,v20673,40057,40059,v20674,40064,v20675,v20676,40076,40079,40083,v20677,40093,40106,40108,40111,40121,v20678,v20679,v20680,v20681,v20682,v20683,v20684,v20685,v20686,40181,v20687,40200,v20688,v20689,40220,40222,v20690,v20691,40231,v20692,v20693,v20694,v20695,v20696,v20697,v20698,v20699,40299,v20700,v20701,v20702,40328,v20703,v20704,40345,v20705,v20706,v20707,v20708,v20709,v20710,40385,40387,v20711,v20712,40408,v20713,v20714,v20715,
v20716,v20717,v20718,v20719,40476,40484,40487,40494,40496,40500,v20720,40512,40525,40528,v20721,40534,40537,40541,v20722,40549,v20723,40562,40564,v20724,40571,v20725,v20726,v20727,v20728,v20729,v20730,40606,v20731,v20732,v20733,v20734,v20735,v20736,40636,v20737,v20738,v20739,v20740,40656,v20741,v20742,v20743,40673,v20744,40678,v20745,v20746,40691,v20747,40696,40698,v20748,40714,40716,40719,v20749,40724,40726,40728,v20750,40737,v20751,v20752,v20753,40760,40762,40764,v20754,v20755,v20756,40787,v20757,
v20758,v20759,40802,v20760,v20761,40811,v20762,v20763,v20764,v20765,v20766,v20767,v20768,v20769,v20770,63788,v20771,64017,v20772,64024,v20773,v20774,v20775,11905,v20776,v20777,v20778,11908,13427,13383,11912,11915,59422,13726,13850,13838,11916,11927,14702,14616,59430,14799,14815,14963,14800,v20779,15182,15470,15584,11943,v20780,59442,11946,16470,16735,11950,17207,11955,v20781,v20782,17329,17324,11963],v23770=[17373,17622,18017,17996,v20783,18211,18217,18300,18317,11978,18759,18810,18813,v20784,v20785,
18847,18843,18871,18870,v20786,v20787,19619,v20788,19575,19618,v20789,19886,59492,v20790,8364,165,0,0,12351,v20791,12436,v20792,12535,12537,12536,12538,0,v20793,v20794,v20795,v20796,11904,v20797,v20798,v20799,v20800,v20801,v20802,v20803,v20804,v20805,v20806,v20807,v20808,v20809,v20810,v20811,v20812,v20813,v20814,v20815,v20816,v20817,v20818,v20819,v20820,v20821,v20822,v20823,v20824,v20825,v20826,v20827,v20828,v20829,v20830,v20831,v20832,v20833,v20834,v20835,v20836,v20837,v20838,v20839,18820,v20840,
v20841,v20842,v20843,v20844,v20845,v20846,v20847],v23768=v23769.concat(v23770),v23766=v23767.concat(v23768),v23764=v23765.concat(v23766),v23762=v23763.concat(v23764),v23760=v23761.concat(v23762),v23758=v23759.concat(v23760),v23756=v23757.concat(v23758),v23754=v23755.concat(v23756),v23752=v23753.concat(v23754),v23750=v23751.concat(v23752),v23748=v23749.concat(v23750),v23746=v23747.concat(v23748),v23744=v23745.concat(v23746),v23742=v23743.concat(v23744),v23740=v23741.concat(v23742),v23738=v23739.concat(v23740),
v23736=v23737.concat(v23738),v23734=v23735.concat(v23736),v23732=v23733.concat(v23734),v23730=v23731.concat(v23732),v23728=v23729.concat(v23730),v23726=v23727.concat(v23728),v23724=v23725.concat(v23726),v23722=v23723.concat(v23724),v23720=v23721.concat(v23722),v23718=v23719.concat(v23720),CIDToUnicodeMaps={"Adobe-Japan1":v5853,"Adobe-Korea1":v5854,"Adobe-CNS1":v5855,"Adobe-GB1":v23717.concat(v23718)},ColorSpace=ColorSpaceClosure(),AlternateCS=AlternateCSClosure(),PatternCS=PatternCSClosure(),IndexedCS=
IndexedCSClosure(),DeviceGrayCS=DeviceGrayCSClosure(),DeviceRgbCS=DeviceRgbCSClosure(),DeviceCmykCS=DeviceCmykCSClosure(),LabCS=LabCSClosure(),ARCFourCipher=ARCFourCipherClosure(),calculateMD5=calculateMD5Closure(),NullCipher=NullCipherClosure(),AES128Cipher=AES128CipherClosure(),CipherTransform=CipherTransformClosure(),CipherTransformFactory=CipherTransformFactoryClosure(),PartialEvaluator=PartialEvaluatorClosure(),EvalState=EvalStateClosure(),kCmapGlyphOffset=57344,kSizeOfGlyphArea=6400,kSymbolicFontGlyphOffset=
61440,kPDFGlyphSpaceUnits=1E3,kHintingEnabled=!1,FontFlags={FixedPitch:1,Serif:2,Symbolic:4,Script:8,Nonsymbolic:32,Italic:64,AllCap:65536,SmallCap:131072,ForceBold:262144},Encodings={ExpertEncoding:"                                space exclamsmall Hungarumlautsmall  dollaroldstyle dollarsuperior ampersandsmall Acutesmall parenleftsuperior parenrightsuperior twodotenleader onedotenleader comma hyphen period fraction zerooldstyle oneoldstyle twooldstyle threeoldstyle fouroldstyle fiveoldstyle sixoldstyle sevenoldstyle eightoldstyle nineoldstyle colon semicolon commasuperior threequartersemdash periodsuperior questionsmall  asuperior bsuperior centsuperior dsuperior esuperior   isuperior   lsuperior msuperior nsuperior osuperior   rsuperior ssuperior tsuperior  ff fi fl ffi ffl parenleftinferior  parenrightinferior Circumflexsmall hyphensuperior Gravesmall Asmall Bsmall Csmall Dsmall Esmall Fsmall Gsmall Hsmall Ismall Jsmall Ksmall Lsmall Msmall Nsmall Osmall Psmall Qsmall Rsmall Ssmall Tsmall Usmall Vsmall Wsmall Xsmall Ysmall Zsmall colonmonetary onefitted rupiah Tildesmall                                   exclamdownsmall centoldstyle Lslashsmall   Scaronsmall Zcaronsmall Dieresissmall Brevesmall Caronsmall  Dotaccentsmall   Macronsmall   figuredash hypheninferior   Ogoneksmall Ringsmall Cedillasmall    onequarter onehalf threequarters questiondownsmall oneeighth threeeighths fiveeighths seveneighths onethird twothirds   zerosuperior onesuperior twosuperior threesuperior foursuperior fivesuperior sixsuperior sevensuperior eightsuperior ninesuperior zeroinferior oneinferior twoinferior threeinferior fourinferior fiveinferior sixinferior seveninferior eightinferior nineinferior centinferior dollarinferior periodinferior commainferior Agravesmall Aacutesmall Acircumflexsmall Atildesmall Adieresissmall Aringsmall AEsmall Ccedillasmall Egravesmall Eacutesmall Ecircumflexsmall Edieresissmall Igravesmall Iacutesmall Icircumflexsmall Idieresissmall Ethsmall Ntildesmall Ogravesmall Oacutesmall Ocircumflexsmall Otildesmall Odieresissmall OEsmall Oslashsmall Ugravesmall Uacutesmall Ucircumflexsmall Udieresissmall Yacutesmall Thornsmall Ydieresissmall".split(" "),
MacExpertEncoding:"                                space exclamsmall Hungarumlautsmall centoldstyle dollaroldstyle dollarsuperior ampersandsmall Acutesmall parenleftsuperior parenrightsuperior twodotenleader onedotenleader comma hyphen period fraction zerooldstyle oneoldstyle twooldstyle threeoldstyle fouroldstyle fiveoldstyle sixoldstyle sevenoldstyle eightoldstyle nineoldstyle colon semicolon  threequartersemdash  questionsmall     Ethsmall   onequarter onehalf threequarters oneeighth threeeighths fiveeighths seveneighths onethird twothirds       ff fi fl ffi ffl parenleftinferior  parenrightinferior Circumflexsmall hypheninferior Gravesmall Asmall Bsmall Csmall Dsmall Esmall Fsmall Gsmall Hsmall Ismall Jsmall Ksmall Lsmall Msmall Nsmall Osmall Psmall Qsmall Rsmall Ssmall Tsmall Usmall Vsmall Wsmall Xsmall Ysmall Zsmall colonmonetary onefitted rupiah Tildesmall   asuperior centsuperior     Aacutesmall Agravesmall Acircumflexsmall Adieresissmall Atildesmall Aringsmall Ccedillasmall Eacutesmall Egravesmall Ecircumflexsmall Edieresissmall Iacutesmall Igravesmall Icircumflexsmall Idieresissmall Ntildesmall Oacutesmall Ogravesmall Ocircumflexsmall Odieresissmall Otildesmall Uacutesmall Ugravesmall Ucircumflexsmall Udieresissmall  eightsuperior fourinferior threeinferior sixinferior eightinferior seveninferior Scaronsmall  centinferior twoinferior  Dieresissmall  Caronsmall osuperior fiveinferior  commainferior periodinferior Yacutesmall  dollarinferior  Thornsmall  nineinferior zeroinferior Zcaronsmall AEsmall Oslashsmall questiondownsmall oneinferior Lslashsmall       Cedillasmall      OEsmall figuredash hyphensuperior     exclamdownsmall  Ydieresissmall  onesuperior twosuperior threesuperior foursuperior fivesuperior sixsuperior sevensuperior ninesuperior zerosuperior  esuperior rsuperior tsuperior   isuperior ssuperior dsuperior      lsuperior Ogoneksmall Brevesmall Macronsmall bsuperior nsuperior msuperior commasuperior periodsuperior Dotaccentsmall Ringsmall".split(" "),
MacRomanEncoding:"                                space exclam quotedbl numbersign dollar percent ampersand quotesingle parenleft parenright asterisk plus comma hyphen period slash zero one two three four five six seven eight nine colon semicolon less equal greater question at A B C D E F G H I J K L M N O P Q R S T U V W X Y Z bracketleft backslash bracketright asciicircum underscore grave a b c d e f g h i j k l m n o p q r s t u v w x y z braceleft bar braceright asciitilde  Adieresis Aring Ccedilla Eacute Ntilde Odieresis Udieresis aacute agrave acircumflex adieresis atilde aring ccedilla eacute egrave ecircumflex edieresis iacute igrave icircumflex idieresis ntilde oacute ograve ocircumflex odieresis otilde uacute ugrave ucircumflex udieresis dagger degree cent sterling section bullet paragraph germandbls registered copyright trademark acute dieresis notequal AE Oslash infinity plusminus lessequal greaterequal yen mu partialdiff summation product pi integral ordfeminine ordmasculine Omega ae oslash questiondown exclamdown logicalnot radical florin approxequal Delta guillemotleft guillemotright ellipsis  Agrave Atilde Otilde OE oe endash emdash quotedblleft quotedblright quoteleft quoteright divide lozenge ydieresis Ydieresis fraction currency guilsinglleft guilsinglright fi fl daggerdbl periodcentered quotesinglbase quotedblbase perthousand Acircumflex Ecircumflex Aacute Edieresis Egrave Iacute Icircumflex Idieresis Igrave Oacute Ocircumflex apple Ograve Uacute Ucircumflex Ugrave dotlessi circumflex tilde macron breve dotaccent ring cedilla hungarumlaut ogonek caron".split(" "),
StandardEncoding:"                                space exclam quotedbl numbersign dollar percent ampersand quoteright parenleft parenright asterisk plus comma hyphen period slash zero one two three four five six seven eight nine colon semicolon less equal greater question at A B C D E F G H I J K L M N O P Q R S T U V W X Y Z bracketleft backslash bracketright asciicircum underscore quoteleft a b c d e f g h i j k l m n o p q r s t u v w x y z braceleft bar braceright asciitilde                                   exclamdown cent sterling fraction yen florin section currency quotesingle quotedblleft guillemotleft guilsinglleft guilsinglright fi fl  endash dagger daggerdbl periodcentered  paragraph bullet quotesinglbase quotedblbase quotedblright guillemotright ellipsis perthousand  questiondown  grave acute circumflex tilde macron breve dotaccent dieresis  ring cedilla  hungarumlaut ogonek caron emdash                 AE  ordfeminine     Lslash Oslash OE ordmasculine      ae    dotlessi   lslash oslash oe germandbls".split(" "),
WinAnsiEncoding:"                                space exclam quotedbl numbersign dollar percent ampersand quotesingle parenleft parenright asterisk plus comma hyphen period slash zero one two three four five six seven eight nine colon semicolon less equal greater question at A B C D E F G H I J K L M N O P Q R S T U V W X Y Z bracketleft backslash bracketright asciicircum underscore grave a b c d e f g h i j k l m n o p q r s t u v w x y z braceleft bar braceright asciitilde bullet Euro bullet quotesinglbase florin quotedblbase ellipsis dagger daggerdbl circumflex perthousand Scaron guilsinglleft OE bullet Zcaron bullet bullet quoteleft quoteright quotedblleft quotedblright bullet endash emdash tilde trademark scaron guilsinglright oe bullet zcaron Ydieresis  exclamdown cent sterling currency yen brokenbar section dieresis copyright ordfeminine guillemotleft logicalnot hyphen registered macron degree plusminus twosuperior threesuperior acute mu paragraph periodcentered cedilla onesuperior ordmasculine guillemotright onequarter onehalf threequarters questiondown Agrave Aacute Acircumflex Atilde Adieresis Aring AE Ccedilla Egrave Eacute Ecircumflex Edieresis Igrave Iacute Icircumflex Idieresis Eth Ntilde Ograve Oacute Ocircumflex Otilde Odieresis multiply Oslash Ugrave Uacute Ucircumflex Udieresis Yacute Thorn germandbls agrave aacute acircumflex atilde adieresis aring ae ccedilla egrave eacute ecircumflex edieresis igrave iacute icircumflex idieresis eth ntilde ograve oacute ocircumflex otilde odieresis divide oslash ugrave uacute ucircumflex udieresis yacute thorn ydieresis".split(" "),
symbolsEncoding:"                                space exclam universal numbersign existential percent ampersand suchthat parenleft parenright asteriskmath plus comma minus period slash zero one two three four five six seven eight nine colon semicolon less equal greater question congruent Alpha Beta Chi Delta Epsilon Phi Gamma Eta Iota theta1 Kappa Lambda Mu Nu Omicron Pi Theta Rho Sigma Tau Upsilon sigma1 Omega Xi Psi Zeta bracketleft therefore bracketright perpendicular underscore radicalex alpha beta chi delta epsilon phi gamma eta iota phi1 kappa lambda mu nu omicron pi theta rho sigma tau upsilon omega1 omega xi psi zeta braceleft bar braceright similar                                  Euro Upsilon1 minute lessequal fraction infinity florin club diamond heart spade arrowboth arrowleft arrowup arrowright arrowdown degree plusminus second greaterequal multiply proportional partialdiff bullet divide notequal equivalence approxequal ellipsis arrowvertex arrowhorizex carriagereturn aleph Ifraktur Rfraktur weierstrass circlemultiply circleplus emptyset intersection union propersuperset reflexsuperset notsubset propersubset reflexsubset element notelement angle gradient registerserif copyrightserif trademarkserif product radical dotmath logicalnot logicaland logicalor arrowdblboth arrowdblleft arrowdblup arrowdblright arrowdbldown lozenge angleleft registersans copyrightsans trademarksans summation parenlefttp parenleftex parenleftbt bracketlefttp bracketleftex bracketleftbt bracelefttp braceleftmid braceleftbt braceex  angleright integral integraltp integralex integralbt parenrighttp parenrightex parenrightbt bracketrighttp bracketrightex bracketrightbt bracerighttp bracerightmid bracerightbt".split(" "),
zapfDingbatsEncoding:"                                space a1 a2 a202 a3 a4 a5 a119 a118 a117 a11 a12 a13 a14 a15 a16 a105 a17 a18 a19 a20 a21 a22 a23 a24 a25 a26 a27 a28 a6 a7 a8 a9 a10 a29 a30 a31 a32 a33 a34 a35 a36 a37 a38 a39 a40 a41 a42 a43 a44 a45 a46 a47 a48 a49 a50 a51 a52 a53 a54 a55 a56 a57 a58 a59 a60 a61 a62 a63 a64 a65 a66 a67 a68 a69 a70 a71 a72 a73 a74 a203 a75 a204 a76 a77 a78 a79 a81 a82 a83 a84 a97 a98 a99 a100                                   a101 a102 a103 a104 a106 a107 a108 a112 a111 a110 a109 a120 a121 a122 a123 a124 a125 a126 a127 a128 a129 a130 a131 a132 a133 a134 a135 a136 a137 a138 a139 a140 a141 a142 a143 a144 a145 a146 a147 a148 a149 a150 a151 a152 a153 a154 a155 a156 a157 a158 a159 a160 a161 a163 a164 a196 a165 a192 a166 a167 a168 a169 a170 a171 a172 a173 a162 a174 a175 a176 a177 a178 a179 a193 a180 a199 a181 a200 a182  a201 a183 a184 a197 a185 a194 a198 a186 a195 a187 a188 a189 a190 a191".split(" ")},
stdFontMap={ArialNarrow:"Helvetica","ArialNarrow-Bold":"Helvetica-Bold","ArialNarrow-BoldItalic":"Helvetica-BoldOblique","ArialNarrow-Italic":"Helvetica-Oblique",ArialBlack:"Helvetica","ArialBlack-Bold":"Helvetica-Bold","ArialBlack-BoldItalic":"Helvetica-BoldOblique","ArialBlack-Italic":"Helvetica-Oblique",Arial:"Helvetica","Arial-Bold":"Helvetica-Bold","Arial-BoldItalic":"Helvetica-BoldOblique","Arial-Italic":"Helvetica-Oblique","Arial-BoldItalicMT":"Helvetica-BoldOblique","Arial-BoldMT":"Helvetica-Bold",
"Arial-ItalicMT":"Helvetica-Oblique",ArialMT:"Helvetica","Courier-Bold":"Courier-Bold","Courier-BoldItalic":"Courier-BoldOblique","Courier-Italic":"Courier-Oblique",CourierNew:"Courier","CourierNew-Bold":"Courier-Bold","CourierNew-BoldItalic":"Courier-BoldOblique","CourierNew-Italic":"Courier-Oblique","CourierNewPS-BoldItalicMT":"Courier-BoldOblique","CourierNewPS-BoldMT":"Courier-Bold","CourierNewPS-ItalicMT":"Courier-Oblique",CourierNewPSMT:"Courier","Helvetica-Bold":"Helvetica-Bold","Helvetica-BoldItalic":"Helvetica-BoldOblique",
"Helvetica-Italic":"Helvetica-Oblique","Symbol-Bold":"Symbol","Symbol-BoldItalic":"Symbol","Symbol-Italic":"Symbol",TimesNewRoman:"Times-Roman","TimesNewRoman-Bold":"Times-Bold","TimesNewRoman-BoldItalic":"Times-BoldItalic","TimesNewRoman-Italic":"Times-Italic",TimesNewRomanPS:"Times-Roman","TimesNewRomanPS-Bold":"Times-Bold","TimesNewRomanPS-BoldItalic":"Times-BoldItalic","TimesNewRomanPS-BoldItalicMT":"Times-BoldItalic","TimesNewRomanPS-BoldMT":"Times-Bold","TimesNewRomanPS-Italic":"Times-Italic",
"TimesNewRomanPS-ItalicMT":"Times-Italic",TimesNewRomanPSMT:"Times-Roman","TimesNewRomanPSMT-Bold":"Times-Bold","TimesNewRomanPSMT-BoldItalic":"Times-BoldItalic","TimesNewRomanPSMT-Italic":"Times-Italic"},nonStdFontMap={ComicSansMS:"Comic Sans MS","ComicSansMS-Bold":"Comic Sans MS-Bold","ComicSansMS-BoldItalic":"Comic Sans MS-BoldItalic","ComicSansMS-Italic":"Comic Sans MS-Italic",LucidaConsole:"Courier","LucidaConsole-Bold":"Courier-Bold","LucidaConsole-BoldItalic":"Courier-BoldOblique","LucidaConsole-Italic":"Courier-Oblique"},
serifFonts={"Adobe Jenson":!0,"Adobe Text":!0,Albertus:!0,Aldus:!0,Alexandria:!0,Algerian:!0,"American Typewriter":!0,Antiqua:!0,Apex:!0,Arno:!0,Aster:!0,Aurora:!0,Baskerville:!0,Bell:!0,Bembo:!0,"Bembo Schoolbook":!0,Benguiat:!0,"Berkeley Old Style":!0,"Bernhard Modern":!0,"Berthold City":!0,Bodoni:!0,"Bauer Bodoni":!0,"Book Antiqua":!0,Bookman:!0,"Bordeaux Roman":!0,"Californian FB":!0,Calisto:!0,Calvert:!0,Capitals:!0,Cambria:!0,Cartier:!0,Caslon:!0,Catull:!0,Centaur:!0,"Century Old Style":!0,
"Century Schoolbook":!0,Chaparral:!0,"Charis SIL":!0,Cheltenham:!0,"Cholla Slab":!0,Clarendon:!0,Clearface:!0,Cochin:!0,Colonna:!0,"Computer Modern":!0,"Concrete Roman":!0,Constantia:!0,"Cooper Black":!0,Corona:!0,Ecotype:!0,Egyptienne:!0,Elephant:!0,Excelsior:!0,Fairfield:!0,"FF Scala":!0,Folkard:!0,Footlight:!0,FreeSerif:!0,"Friz Quadrata":!0,Garamond:!0,Gentium:!0,Georgia:!0,Gloucester:!0,"Goudy Old Style":!0,"Goudy Schoolbook":!0,"Goudy Pro Font":!0,Granjon:!0,"Guardian Egyptian":!0,Heather:!0,
Hercules:!0,"High Tower Text":!0,Hiroshige:!0,"Hoefler Text":!0,"Humana Serif":!0,Imprint:!0,"Ionic No. 5":!0,Janson:!0,Joanna:!0,Korinna:!0,Lexicon:!0,"Liberation Serif":!0,"Linux Libertine":!0,Literaturnaya:!0,Lucida:!0,"Lucida Bright":!0,Melior:!0,Memphis:!0,Miller:!0,Minion:!0,Modern:!0,"Mona Lisa":!0,"Mrs Eaves":!0,"MS Serif":!0,"Museo Slab":!0,"New York":!0,"Nimbus Roman":!0,"NPS Rawlinson Roadway":!0,Palatino:!0,Perpetua:!0,Plantin:!0,"Plantin Schoolbook":!0,Playbill:!0,"Poor Richard":!0,"Rawlinson Roadway":!0,
Renault:!0,Requiem:!0,Rockwell:!0,Roman:!0,"Rotis Serif":!0,Sabon:!0,Scala:!0,Seagull:!0,Sistina:!0,Souvenir:!0,STIX:!0,"Stone Informal":!0,"Stone Serif":!0,Sylfaen:!0,Times:!0,Trajan:!0,"Trinit\u00e9":!0,"Trump Mediaeval":!0,Utopia:!0,"Vale Type":!0,"Bitstream Vera":!0,"Vera Serif":!0,Versailles:!0,Wanted:!0,Weiss:!0,"Wide Latin":!0,Windsor:!0,XITS:!0},symbolsFonts={Dingbats:!0,Symbol:!0,ZapfDingbats:!0},FontLoader={listeningForFontLoad:!1,bind:fontLoaderBind,prepareFontLoadEvent:fontLoaderPrepareFontLoadEvent},
UnicodeRanges=[{begin:0,end:127},{begin:128,end:255},{begin:256,end:383},{begin:384,end:591},{begin:592,end:687},{begin:688,end:767},{begin:768,end:879},{begin:880,end:1023},{begin:11392,end:11519},{begin:1024,end:1279},{begin:1328,end:1423},{begin:1424,end:1535},{begin:42240,end:42559},{begin:1536,end:1791},{begin:1984,end:2047},{begin:2304,end:2431},{begin:2432,end:2559},{begin:2560,end:2687},{begin:2688,end:2815},{begin:2816,end:2943},{begin:2944,end:3071},{begin:3072,end:3199},{begin:3200,end:3327},
{begin:3328,end:3455},{begin:3584,end:3711},{begin:3712,end:3839},{begin:4256,end:4351},{begin:6912,end:7039},{begin:4352,end:4607},{begin:7680,end:7935},{begin:7936,end:8191},{begin:8192,end:8303},{begin:8304,end:8351},{begin:8352,end:8399},{begin:8400,end:8447},{begin:8448,end:8527},{begin:8528,end:8591},{begin:8592,end:8703},{begin:8704,end:8959},{begin:8960,end:9215},{begin:9216,end:9279},{begin:9280,end:9311},{begin:9312,end:9471},{begin:9472,end:9599},{begin:9600,end:9631},{begin:9632,end:9727},
{begin:9728,end:9983},{begin:9984,end:10175},{begin:12288,end:12351},{begin:12352,end:12447},{begin:12448,end:12543},{begin:12544,end:12591},{begin:12592,end:12687},{begin:43072,end:43135},{begin:12800,end:13055},{begin:13056,end:13311},{begin:44032,end:55215},{begin:55296,end:57343},{begin:67840,end:67871},{begin:19968,end:40959},{begin:57344,end:63743},{begin:12736,end:12783},{begin:64256,end:64335},{begin:64336,end:65023},{begin:65056,end:65071},{begin:65040,end:65055},{begin:65104,end:65135},
{begin:65136,end:65279},{begin:65280,end:65519},{begin:65520,end:65535},{begin:3840,end:4095},{begin:1792,end:1871},{begin:1920,end:1983},{begin:3456,end:3583},{begin:4096,end:4255},{begin:4608,end:4991},{begin:5024,end:5119},{begin:5120,end:5759},{begin:5760,end:5791},{begin:5792,end:5887},{begin:6016,end:6143},{begin:6144,end:6319},{begin:10240,end:10495},{begin:40960,end:42127},{begin:5888,end:5919},{begin:66304,end:66351},{begin:66352,end:66383},{begin:66560,end:66639},{begin:118784,end:119039},
{begin:119808,end:120831},{begin:1044480,end:1048573},{begin:65024,end:65039},{begin:917504,end:917631},{begin:6400,end:6479},{begin:6480,end:6527},{begin:6528,end:6623},{begin:6656,end:6687},{begin:11264,end:11359},{begin:11568,end:11647},{begin:19904,end:19967},{begin:43008,end:43055},{begin:65536,end:65663},{begin:65856,end:65935},{begin:66432,end:66463},{begin:66464,end:66527},{begin:66640,end:66687},{begin:66688,end:66735},{begin:67584,end:67647},{begin:68096,end:68191},{begin:119552,end:119647},
{begin:73728,end:74751},{begin:119648,end:119679},{begin:7040,end:7103},{begin:7168,end:7247},{begin:7248,end:7295},{begin:43136,end:43231},{begin:43264,end:43311},{begin:43312,end:43359},{begin:43520,end:43615},{begin:65936,end:65999},{begin:66E3,end:66047},{begin:66208,end:66271},{begin:127024,end:127135}],MacStandardGlyphOrdering=".notdef .null nonmarkingreturn space exclam quotedbl numbersign dollar percent ampersand quotesingle parenleft parenright asterisk plus comma hyphen period slash zero one two three four five six seven eight nine colon semicolon less equal greater question at A B C D E F G H I J K L M N O P Q R S T U V W X Y Z bracketleft backslash bracketright asciicircum underscore grave a b c d e f g h i j k l m n o p q r s t u v w x y z braceleft bar braceright asciitilde Adieresis Aring Ccedilla Eacute Ntilde Odieresis Udieresis aacute agrave acircumflex adieresis atilde aring ccedilla eacute egrave ecircumflex edieresis iacute igrave icircumflex idieresis ntilde oacute ograve ocircumflex odieresis otilde uacute ugrave ucircumflex udieresis dagger degree cent sterling section bullet paragraph germandbls registered copyright trademark acute dieresis notequal AE Oslash infinity plusminus lessequal greaterequal yen mu partialdiff summation product pi integral ordfeminine ordmasculine Omega ae oslash questiondown exclamdown logicalnot radical florin approxequal Delta guillemotleft guillemotright ellipsis nonbreakingspace Agrave Atilde Otilde OE oe endash emdash quotedblleft quotedblright quoteleft quoteright divide lozenge ydieresis Ydieresis fraction currency guilsinglleft guilsinglright fi fl daggerdbl periodcentered quotesinglbase quotedblbase perthousand Acircumflex Ecircumflex Aacute Edieresis Egrave Iacute Icircumflex Idieresis Igrave Oacute Ocircumflex apple Ograve Uacute Ucircumflex Ugrave dotlessi circumflex tilde macron breve dotaccent ring cedilla hungarumlaut ogonek caron Lslash lslash Scaron scaron Zcaron zcaron brokenbar Eth eth Yacute yacute Thorn thorn minus multiply onesuperior twosuperior threesuperior onehalf onequarter threequarters franc Gbreve gbreve Idotaccent Scedilla scedilla Cacute cacute Ccaron ccaron dcroat".split(" "),
Font=FontClosure(),CFFStandardStrings=".notdef;space;exclam;quotedbl;numbersign;dollar;percent;ampersand;quoteright;parenleft;parenright;asterisk;plus;comma;hyphen;period;slash;zero;one;two;three;four;five;six;seven;eight;nine;colon;semicolon;less;equal;greater;question;at;A;B;C;D;E;F;G;H;I;J;K;L;M;N;O;P;Q;R;S;T;U;V;W;X;Y;Z;bracketleft;backslash;bracketright;asciicircum;underscore;quoteleft;a;b;c;d;e;f;g;h;i;j;k;l;m;n;o;p;q;r;s;t;u;v;w;x;y;z;braceleft;bar;braceright;asciitilde;exclamdown;cent;sterling;fraction;yen;florin;section;currency;quotesingle;quotedblleft;guillemotleft;guilsinglleft;guilsinglright;fi;fl;endash;dagger;daggerdbl;periodcentered;paragraph;bullet;quotesinglbase;quotedblbase;quotedblright;guillemotright;ellipsis;perthousand;questiondown;grave;acute;circumflex;tilde;macron;breve;dotaccent;dieresis;ring;cedilla;hungarumlaut;ogonek;caron;emdash;AE;ordfeminine;Lslash;Oslash;OE;ordmasculine;ae;dotlessi;lslash;oslash;oe;germandbls;onesuperior;logicalnot;mu;trademark;Eth;onehalf;plusminus;Thorn;onequarter;divide;brokenbar;degree;thorn;threequarters;twosuperior;registered;minus;eth;multiply;threesuperior;copyright;Aacute;Acircumflex;Adieresis;Agrave;Aring;Atilde;Ccedilla;Eacute;Ecircumflex;Edieresis;Egrave;Iacute;Icircumflex;Idieresis;Igrave;Ntilde;Oacute;Ocircumflex;Odieresis;Ograve;Otilde;Scaron;Uacute;Ucircumflex;Udieresis;Ugrave;Yacute;Ydieresis;Zcaron;aacute;acircumflex;adieresis;agrave;aring;atilde;ccedilla;eacute;ecircumflex;edieresis;egrave;iacute;icircumflex;idieresis;igrave;ntilde;oacute;ocircumflex;odieresis;ograve;otilde;scaron;uacute;ucircumflex;udieresis;ugrave;yacute;ydieresis;zcaron;exclamsmall;Hungarumlautsmall;dollaroldstyle;dollarsuperior;ampersandsmall;Acutesmall;parenleftsuperior;parenrightsuperior;266 ff;onedotenleader;zerooldstyle;oneoldstyle;twooldstyle;threeoldstyle;fouroldstyle;fiveoldstyle;sixoldstyle;sevenoldstyle;eightoldstyle;nineoldstyle;commasuperior;threequartersemdash;periodsuperior;questionsmall;asuperior;bsuperior;centsuperior;dsuperior;esuperior;isuperior;lsuperior;msuperior;nsuperior;osuperior;rsuperior;ssuperior;tsuperior;ff;ffi;ffl;parenleftinferior;parenrightinferior;Circumflexsmall;hyphensuperior;Gravesmall;Asmall;Bsmall;Csmall;Dsmall;Esmall;Fsmall;Gsmall;Hsmall;Ismall;Jsmall;Ksmall;Lsmall;Msmall;Nsmall;Osmall;Psmall;Qsmall;Rsmall;Ssmall;Tsmall;Usmall;Vsmall;Wsmall;Xsmall;Ysmall;Zsmall;colonmonetary;onefitted;rupiah;Tildesmall;exclamdownsmall;centoldstyle;Lslashsmall;Scaronsmall;Zcaronsmall;Dieresissmall;Brevesmall;Caronsmall;Dotaccentsmall;Macronsmall;figuredash;hypheninferior;Ogoneksmall;Ringsmall;Cedillasmall;questiondownsmall;oneeighth;threeeighths;fiveeighths;seveneighths;onethird;twothirds;zerosuperior;foursuperior;fivesuperior;sixsuperior;sevensuperior;eightsuperior;ninesuperior;zeroinferior;oneinferior;twoinferior;threeinferior;fourinferior;fiveinferior;sixinferior;seveninferior;eightinferior;nineinferior;centinferior;dollarinferior;periodinferior;commainferior;Agravesmall;Aacutesmall;Acircumflexsmall;Atildesmall;Adieresissmall;Aringsmall;AEsmall;Ccedillasmall;Egravesmall;Eacutesmall;Ecircumflexsmall;Edieresissmall;Igravesmall;Iacutesmall;Icircumflexsmall;Idieresissmall;Ethsmall;Ntildesmall;Ogravesmall;Oacutesmall;Ocircumflexsmall;Otildesmall;Odieresissmall;OEsmall;Oslashsmall;Ugravesmall;Uacutesmall;Ucircumflexsmall;Udieresissmall;Yacutesmall;Thornsmall;Ydieresissmall;001.000;001.001;001.002;001.003;Black;Bold;Book;Light;Medium;Regular;Roman;Semibold".split(";"),
type1Parser=new Type1Parser;Type1Font.prototype={createCFFIndexHeader:Type1Font_createCFFIndexHeader,encodeNumber:Type1Font_encodeNumber,getOrderedCharStrings:Type1Font_getOrderedCharStrings,getType2Charstrings:Type1Font_getType2Charstrings,getType2Subrs:Type1Font_getType2Subrs,commandsMap:{hstem:1,vstem:3,vmoveto:4,rlineto:5,hlineto:6,vlineto:7,rrcurveto:8,callsubr:10,"return":11,sub:[12,11],div:[12,12],exch:[12,28],flex:[12,35],drop:[12,18],endchar:14,rmoveto:21,hmoveto:22,vhcurveto:30,hvcurveto:31},
flattenCharstring:Type1Font_flattenCharstring,wrap:Type1Font_wrap};var CFFFont=CFFFontClosure(),CFFParser=CFFParserClosure(),CFF=CFFClosure(),CFFHeader=CFFHeaderClosure(),CFFStrings=CFFStringsClosure(),CFFIndex=CFFIndexClosure(),CFFDict=CFFDictClosure(),CFFTopDict=CFFTopDictClosure(),CFFPrivateDict=CFFPrivateDictClosure(),CFFCharsetPredefinedTypes={ISO_ADOBE:0,EXPERT:1,EXPERT_SUBSET:2},CFFCharset=CFFCharsetClosure(),CFFEncoding=CFFEncodingClosure(),CFFFDSelect=CFFFDSelectClosure(),CFFOffsetTracker=
CFFOffsetTrackerClosure(),CFFCompiler=CFFCompilerClosure(),GlyphsUnicode={A:65,AE:198,AEacute:508,AEmacron:482,AEsmall:63462,Aacute:193,Aacutesmall:63457,Abreve:258,Abreveacute:7854,Abrevecyrillic:1232,Abrevedotbelow:7862,Abrevegrave:7856,Abrevehookabove:7858,Abrevetilde:7860,Acaron:461,Acircle:9398,Acircumflex:194,Acircumflexacute:7844,Acircumflexdotbelow:7852,Acircumflexgrave:7846,Acircumflexhookabove:7848,Acircumflexsmall:63458,Acircumflextilde:7850,Acute:63177,Acutesmall:63412,Acyrillic:1040,
Adblgrave:512,Adieresis:196,Adieresiscyrillic:1234,Adieresismacron:478,Adieresissmall:63460,Adotbelow:7840,Adotmacron:480,Agrave:192,Agravesmall:63456,Ahookabove:7842,Aiecyrillic:1236,Ainvertedbreve:514,Alpha:913,Alphatonos:902,Amacron:256,Amonospace:65313,Aogonek:260,Aring:197,Aringacute:506,Aringbelow:7680,Aringsmall:63461,Asmall:63329,Atilde:195,Atildesmall:63459,Aybarmenian:1329,B:66,Bcircle:9399,Bdotaccent:7682,Bdotbelow:7684,Becyrillic:1041,Benarmenian:1330,Beta:914,Bhook:385,Blinebelow:7686,
Bmonospace:65314,Brevesmall:63220,Bsmall:63330,Btopbar:386,C:67,Caarmenian:1342,Cacute:262,Caron:63178,Caronsmall:63221,Ccaron:268,Ccedilla:199,Ccedillaacute:7688,Ccedillasmall:63463,Ccircle:9400,Ccircumflex:264,Cdot:266,Cdotaccent:266,Cedillasmall:63416,Chaarmenian:1353,Cheabkhasiancyrillic:1212,Checyrillic:1063,Chedescenderabkhasiancyrillic:1214,Chedescendercyrillic:1206,Chedieresiscyrillic:1268,Cheharmenian:1347,Chekhakassiancyrillic:1227,Cheverticalstrokecyrillic:1208,Chi:935,Chook:391,Circumflexsmall:63222,
Cmonospace:65315,Coarmenian:1361,Csmall:63331,D:68,DZ:497,DZcaron:452,Daarmenian:1332,Dafrican:393,Dcaron:270,Dcedilla:7696,Dcircle:9401,Dcircumflexbelow:7698,Dcroat:272,Ddotaccent:7690,Ddotbelow:7692,Decyrillic:1044,Deicoptic:1006,Delta:8710,Deltagreek:916,Dhook:394,Dieresis:63179,DieresisAcute:63180,DieresisGrave:63181,Dieresissmall:63400,Digammagreek:988,Djecyrillic:1026,Dlinebelow:7694,Dmonospace:65316,Dotaccentsmall:63223,Dslash:272,Dsmall:63332,Dtopbar:395,Dz:498,Dzcaron:453,Dzeabkhasiancyrillic:1248,
Dzecyrillic:1029,Dzhecyrillic:1039,E:69,Eacute:201,Eacutesmall:63465,Ebreve:276,Ecaron:282,Ecedillabreve:7708,Echarmenian:1333,Ecircle:9402,Ecircumflex:202,Ecircumflexacute:7870,Ecircumflexbelow:7704,Ecircumflexdotbelow:7878,Ecircumflexgrave:7872,Ecircumflexhookabove:7874,Ecircumflexsmall:63466,Ecircumflextilde:7876,Ecyrillic:1028,Edblgrave:516,Edieresis:203,Edieresissmall:63467,Edot:278,Edotaccent:278,Edotbelow:7864,Efcyrillic:1060,Egrave:200,Egravesmall:63464,Eharmenian:1335,Ehookabove:7866,Eightroman:8551,
Einvertedbreve:518,Eiotifiedcyrillic:1124,Elcyrillic:1051,Elevenroman:8554,Emacron:274,Emacronacute:7702,Emacrongrave:7700,Emcyrillic:1052,Emonospace:65317,Encyrillic:1053,Endescendercyrillic:1186,Eng:330,Enghecyrillic:1188,Enhookcyrillic:1223,Eogonek:280,Eopen:400,Epsilon:917,Epsilontonos:904,Ercyrillic:1056,Ereversed:398,Ereversedcyrillic:1069,Escyrillic:1057,Esdescendercyrillic:1194,Esh:425,Esmall:63333,Eta:919,Etarmenian:1336,Etatonos:905,Eth:208,Ethsmall:63472,Etilde:7868,Etildebelow:7706,Euro:8364,
Ezh:439,Ezhcaron:494,Ezhreversed:440,F:70,Fcircle:9403,Fdotaccent:7710,Feharmenian:1366,Feicoptic:996,Fhook:401,Fitacyrillic:1138,Fiveroman:8548,Fmonospace:65318,Fourroman:8547,Fsmall:63334,G:71,GBsquare:13191,Gacute:500,Gamma:915,Gammaafrican:404,Gangiacoptic:1002,Gbreve:286,Gcaron:486,Gcedilla:290,Gcircle:9404,Gcircumflex:284,Gcommaaccent:290,Gdot:288,Gdotaccent:288,Gecyrillic:1043,Ghadarmenian:1346,Ghemiddlehookcyrillic:1172,Ghestrokecyrillic:1170,Gheupturncyrillic:1168,Ghook:403,Gimarmenian:1331,
Gjecyrillic:1027,Gmacron:7712,Gmonospace:65319,Grave:63182,Gravesmall:63328,Gsmall:63335,Gsmallhook:667,Gstroke:484,H:72,H18533:9679,H18543:9642,H18551:9643,H22073:9633,HPsquare:13259,Haabkhasiancyrillic:1192,Hadescendercyrillic:1202,Hardsigncyrillic:1066,Hbar:294,Hbrevebelow:7722,Hcedilla:7720,Hcircle:9405,Hcircumflex:292,Hdieresis:7718,Hdotaccent:7714,Hdotbelow:7716,Hmonospace:65320,Hoarmenian:1344,Horicoptic:1E3,Hsmall:63336,Hungarumlaut:63183,Hungarumlautsmall:63224,Hzsquare:13200,I:73,IAcyrillic:1071,
IJ:306,IUcyrillic:1070,Iacute:205,Iacutesmall:63469,Ibreve:300,Icaron:463,Icircle:9406,Icircumflex:206,Icircumflexsmall:63470,Icyrillic:1030,Idblgrave:520,Idieresis:207,Idieresisacute:7726,Idieresiscyrillic:1252,Idieresissmall:63471,Idot:304,Idotaccent:304,Idotbelow:7882,Iebrevecyrillic:1238,Iecyrillic:1045,Ifraktur:8465,Igrave:204,Igravesmall:63468,Ihookabove:7880,Iicyrillic:1048,Iinvertedbreve:522,Iishortcyrillic:1049,Imacron:298,Imacroncyrillic:1250,Imonospace:65321,Iniarmenian:1339,Iocyrillic:1025,
Iogonek:302,Iota:921,Iotaafrican:406,Iotadieresis:938,Iotatonos:906,Ismall:63337,Istroke:407,Itilde:296,Itildebelow:7724,Izhitsacyrillic:1140,Izhitsadblgravecyrillic:1142,J:74,Jaarmenian:1345,Jcircle:9407,Jcircumflex:308,Jecyrillic:1032,Jheharmenian:1355,Jmonospace:65322,Jsmall:63338,K:75,KBsquare:13189,KKsquare:13261,Kabashkircyrillic:1184,Kacute:7728,Kacyrillic:1050,Kadescendercyrillic:1178,Kahookcyrillic:1219,Kappa:922,Kastrokecyrillic:1182,Kaverticalstrokecyrillic:1180,Kcaron:488,Kcedilla:310,
Kcircle:9408,Kcommaaccent:310,Kdotbelow:7730,Keharmenian:1364,Kenarmenian:1343,Khacyrillic:1061,Kheicoptic:998,Khook:408,Kjecyrillic:1036,Klinebelow:7732,Kmonospace:65323,Koppacyrillic:1152,Koppagreek:990,Ksicyrillic:1134,Ksmall:63339,L:76,LJ:455,LL:63167,Lacute:313,Lambda:923,Lcaron:317,Lcedilla:315,Lcircle:9409,Lcircumflexbelow:7740,Lcommaaccent:315,Ldot:319,Ldotaccent:319,Ldotbelow:7734,Ldotbelowmacron:7736,Liwnarmenian:1340,Lj:456,Ljecyrillic:1033,Llinebelow:7738,Lmonospace:65324,Lslash:321,Lslashsmall:63225,
Lsmall:63340,M:77,MBsquare:13190,Macron:63184,Macronsmall:63407,Macute:7742,Mcircle:9410,Mdotaccent:7744,Mdotbelow:7746,Menarmenian:1348,Mmonospace:65325,Msmall:63341,Mturned:412,Mu:924,N:78,NJ:458,Nacute:323,Ncaron:327,Ncedilla:325,Ncircle:9411,Ncircumflexbelow:7754,Ncommaaccent:325,Ndotaccent:7748,Ndotbelow:7750,Nhookleft:413,Nineroman:8552,Nj:459,Njecyrillic:1034,Nlinebelow:7752,Nmonospace:65326,Nowarmenian:1350,Nsmall:63342,Ntilde:209,Ntildesmall:63473,Nu:925,O:79,OE:338,OEsmall:63226,Oacute:211,
Oacutesmall:63475,Obarredcyrillic:1256,Obarreddieresiscyrillic:1258,Obreve:334,Ocaron:465,Ocenteredtilde:415,Ocircle:9412,Ocircumflex:212,Ocircumflexacute:7888,Ocircumflexdotbelow:7896,Ocircumflexgrave:7890,Ocircumflexhookabove:7892,Ocircumflexsmall:63476,Ocircumflextilde:7894,Ocyrillic:1054,Odblacute:336,Odblgrave:524,Odieresis:214,Odieresiscyrillic:1254,Odieresissmall:63478,Odotbelow:7884,Ogoneksmall:63227,Ograve:210,Ogravesmall:63474,Oharmenian:1365,Ohm:8486,Ohookabove:7886,Ohorn:416,Ohornacute:7898,
Ohorndotbelow:7906,Ohorngrave:7900,Ohornhookabove:7902,Ohorntilde:7904,Ohungarumlaut:336,Oi:418,Oinvertedbreve:526,Omacron:332,Omacronacute:7762,Omacrongrave:7760,Omega:8486,Omegacyrillic:1120,Omegagreek:937,Omegaroundcyrillic:1146,Omegatitlocyrillic:1148,Omegatonos:911,Omicron:927,Omicrontonos:908,Omonospace:65327,Oneroman:8544,Oogonek:490,Oogonekmacron:492,Oopen:390,Oslash:216,Oslashacute:510,Oslashsmall:63480,Osmall:63343,Ostrokeacute:510,Otcyrillic:1150,Otilde:213,Otildeacute:7756,Otildedieresis:7758,
Otildesmall:63477,P:80,Pacute:7764,Pcircle:9413,Pdotaccent:7766,Pecyrillic:1055,Peharmenian:1354,Pemiddlehookcyrillic:1190,Phi:934,Phook:420,Pi:928,Piwrarmenian:1363,Pmonospace:65328,Psi:936,Psicyrillic:1136,Psmall:63344,Q:81,Qcircle:9414,Qmonospace:65329,Qsmall:63345,R:82,Raarmenian:1356,Racute:340,Rcaron:344,Rcedilla:342,Rcircle:9415,Rcommaaccent:342,Rdblgrave:528,Rdotaccent:7768,Rdotbelow:7770,Rdotbelowmacron:7772,Reharmenian:1360,Rfraktur:8476,Rho:929,Ringsmall:63228,Rinvertedbreve:530,Rlinebelow:7774,
Rmonospace:65330,Rsmall:63346,Rsmallinverted:641,Rsmallinvertedsuperior:694,S:83,SF010000:9484,SF020000:9492,SF030000:9488,SF040000:9496,SF050000:9532,SF060000:9516,SF070000:9524,SF080000:9500,SF090000:9508,SF100000:9472,SF110000:9474,SF190000:9569,SF200000:9570,SF210000:9558,SF220000:9557,SF230000:9571,SF240000:9553,SF250000:9559,SF260000:9565,SF270000:9564,SF280000:9563,SF360000:9566,SF370000:9567,SF380000:9562,SF390000:9556,SF400000:9577,SF410000:9574,SF420000:9568,SF430000:9552,SF440000:9580,
SF450000:9575,SF460000:9576,SF470000:9572,SF480000:9573,SF490000:9561,SF500000:9560,SF510000:9554,SF520000:9555,SF530000:9579,SF540000:9578,Sacute:346,Sacutedotaccent:7780,Sampigreek:992,Scaron:352,Scarondotaccent:7782,Scaronsmall:63229,Scedilla:350,Schwa:399,Schwacyrillic:1240,Schwadieresiscyrillic:1242,Scircle:9416,Scircumflex:348,Scommaaccent:536,Sdotaccent:7776,Sdotbelow:7778,Sdotbelowdotaccent:7784,Seharmenian:1357,Sevenroman:8550,Shaarmenian:1351,Shacyrillic:1064,Shchacyrillic:1065,Sheicoptic:994,
Shhacyrillic:1210,Shimacoptic:1004,Sigma:931,Sixroman:8549,Smonospace:65331,Softsigncyrillic:1068,Ssmall:63347,Stigmagreek:986,T:84,Tau:932,Tbar:358,Tcaron:356,Tcedilla:354,Tcircle:9417,Tcircumflexbelow:7792,Tcommaaccent:354,Tdotaccent:7786,Tdotbelow:7788,Tecyrillic:1058,Tedescendercyrillic:1196,Tenroman:8553,Tetsecyrillic:1204,Theta:920,Thook:428,Thorn:222,Thornsmall:63486,Threeroman:8546,Tildesmall:63230,Tiwnarmenian:1359,Tlinebelow:7790,Tmonospace:65332,Toarmenian:1337,Tonefive:444,Tonesix:388,
Tonetwo:423,Tretroflexhook:430,Tsecyrillic:1062,Tshecyrillic:1035,Tsmall:63348,Twelveroman:8555,Tworoman:8545,U:85,Uacute:218,Uacutesmall:63482,Ubreve:364,Ucaron:467,Ucircle:9418,Ucircumflex:219,Ucircumflexbelow:7798,Ucircumflexsmall:63483,Ucyrillic:1059,Udblacute:368,Udblgrave:532,Udieresis:220,Udieresisacute:471,Udieresisbelow:7794,Udieresiscaron:473,Udieresiscyrillic:1264,Udieresisgrave:475,Udieresismacron:469,Udieresissmall:63484,Udotbelow:7908,Ugrave:217,Ugravesmall:63481,Uhookabove:7910,Uhorn:431,
Uhornacute:7912,Uhorndotbelow:7920,Uhorngrave:7914,Uhornhookabove:7916,Uhorntilde:7918,Uhungarumlaut:368,Uhungarumlautcyrillic:1266,Uinvertedbreve:534,Ukcyrillic:1144,Umacron:362,Umacroncyrillic:1262,Umacrondieresis:7802,Umonospace:65333,Uogonek:370,Upsilon:933,Upsilon1:978,Upsilonacutehooksymbolgreek:979,Upsilonafrican:433,Upsilondieresis:939,Upsilondieresishooksymbolgreek:980,Upsilonhooksymbol:978,Upsilontonos:910,Uring:366,Ushortcyrillic:1038,Usmall:63349,Ustraightcyrillic:1198,Ustraightstrokecyrillic:1200,
Utilde:360,Utildeacute:7800,Utildebelow:7796,V:86,Vcircle:9419,Vdotbelow:7806,Vecyrillic:1042,Vewarmenian:1358,Vhook:434,Vmonospace:65334,Voarmenian:1352,Vsmall:63350,Vtilde:7804,W:87,Wacute:7810,Wcircle:9420,Wcircumflex:372,Wdieresis:7812,Wdotaccent:7814,Wdotbelow:7816,Wgrave:7808,Wmonospace:65335,Wsmall:63351,X:88,Xcircle:9421,Xdieresis:7820,Xdotaccent:7818,Xeharmenian:1341,Xi:926,Xmonospace:65336,Xsmall:63352,Y:89,Yacute:221,Yacutesmall:63485,Yatcyrillic:1122,Ycircle:9422,Ycircumflex:374,Ydieresis:376,
Ydieresissmall:63487,Ydotaccent:7822,Ydotbelow:7924,Yericyrillic:1067,Yerudieresiscyrillic:1272,Ygrave:7922,Yhook:435,Yhookabove:7926,Yiarmenian:1349,Yicyrillic:1031,Yiwnarmenian:1362,Ymonospace:65337,Ysmall:63353,Ytilde:7928,Yusbigcyrillic:1130,Yusbigiotifiedcyrillic:1132,Yuslittlecyrillic:1126,Yuslittleiotifiedcyrillic:1128,Z:90,Zaarmenian:1334,Zacute:377,Zcaron:381,Zcaronsmall:63231,Zcircle:9423,Zcircumflex:7824,Zdot:379,Zdotaccent:379,Zdotbelow:7826,Zecyrillic:1047,Zedescendercyrillic:1176,Zedieresiscyrillic:1246,
Zeta:918,Zhearmenian:1338,Zhebrevecyrillic:1217,Zhecyrillic:1046,Zhedescendercyrillic:1174,Zhedieresiscyrillic:1244,Zlinebelow:7828,Zmonospace:65338,Zsmall:63354,Zstroke:437,a:97,aabengali:2438,aacute:225,aadeva:2310,aagujarati:2694,aagurmukhi:2566,aamatragurmukhi:2622,aarusquare:13059,aavowelsignbengali:2494,aavowelsigndeva:2366,aavowelsigngujarati:2750,abbreviationmarkarmenian:1375,abbreviationsigndeva:2416,abengali:2437,abopomofo:12570,abreve:259,abreveacute:7855,abrevecyrillic:1233,abrevedotbelow:7863,
abrevegrave:7857,abrevehookabove:7859,abrevetilde:7861,acaron:462,acircle:9424,acircumflex:226,acircumflexacute:7845,acircumflexdotbelow:7853,acircumflexgrave:7847,acircumflexhookabove:7849,acircumflextilde:7851,acute:180,acutebelowcmb:791,acutecmb:769,acutecomb:769,acutedeva:2388,acutelowmod:719,acutetonecmb:833,acyrillic:1072,adblgrave:513,addakgurmukhi:2673,adeva:2309,adieresis:228,adieresiscyrillic:1235,adieresismacron:479,adotbelow:7841,adotmacron:481,ae:230,aeacute:509,aekorean:12624,aemacron:483,
afii00208:8213,afii08941:8356,afii10017:1040,afii10018:1041,afii10019:1042,afii10020:1043,afii10021:1044,afii10022:1045,afii10023:1025,afii10024:1046,afii10025:1047,afii10026:1048,afii10027:1049,afii10028:1050,afii10029:1051,afii10030:1052,afii10031:1053,afii10032:1054,afii10033:1055,afii10034:1056,afii10035:1057,afii10036:1058,afii10037:1059,afii10038:1060,afii10039:1061,afii10040:1062,afii10041:1063,afii10042:1064,afii10043:1065,afii10044:1066,afii10045:1067,afii10046:1068,afii10047:1069,afii10048:1070,
afii10049:1071,afii10050:1168,afii10051:1026,afii10052:1027,afii10053:1028,afii10054:1029,afii10055:1030,afii10056:1031,afii10057:1032,afii10058:1033,afii10059:1034,afii10060:1035,afii10061:1036,afii10062:1038,afii10063:63172,afii10064:63173,afii10065:1072,afii10066:1073,afii10067:1074,afii10068:1075,afii10069:1076,afii10070:1077,afii10071:1105,afii10072:1078,afii10073:1079,afii10074:1080,afii10075:1081,afii10076:1082,afii10077:1083,afii10078:1084,afii10079:1085,afii10080:1086,afii10081:1087,afii10082:1088,
afii10083:1089,afii10084:1090,afii10085:1091,afii10086:1092,afii10087:1093,afii10088:1094,afii10089:1095,afii10090:1096,afii10091:1097,afii10092:1098,afii10093:1099,afii10094:1100,afii10095:1101,afii10096:1102,afii10097:1103,afii10098:1169,afii10099:1106,afii10100:1107,afii10101:1108,afii10102:1109,afii10103:1110,afii10104:1111,afii10105:1112,afii10106:1113,afii10107:1114,afii10108:1115,afii10109:1116,afii10110:1118,afii10145:1039,afii10146:1122,afii10147:1138,afii10148:1140,afii10192:63174,afii10193:1119,
afii10194:1123,afii10195:1139,afii10196:1141,afii10831:63175,afii10832:63176,afii10846:1241,afii299:8206,afii300:8207,afii301:8205,afii57381:1642,afii57388:1548,afii57392:1632,afii57393:1633,afii57394:1634,afii57395:1635,afii57396:1636,afii57397:1637,afii57398:1638,afii57399:1639,afii57400:1640,afii57401:1641,afii57403:1563,afii57407:1567,afii57409:1569,afii57410:1570,afii57411:1571,afii57412:1572,afii57413:1573,afii57414:1574,afii57415:1575,afii57416:1576,afii57417:1577,afii57418:1578,afii57419:1579,
afii57420:1580,afii57421:1581,afii57422:1582,afii57423:1583,afii57424:1584,afii57425:1585,afii57426:1586,afii57427:1587,afii57428:1588,afii57429:1589,afii57430:1590,afii57431:1591,afii57432:1592,afii57433:1593,afii57434:1594,afii57440:1600,afii57441:1601,afii57442:1602,afii57443:1603,afii57444:1604,afii57445:1605,afii57446:1606,afii57448:1608,afii57449:1609,afii57450:1610,afii57451:1611,afii57452:1612,afii57453:1613,afii57454:1614,afii57455:1615,afii57456:1616,afii57457:1617,afii57458:1618,afii57470:1607,
afii57505:1700,afii57506:1662,afii57507:1670,afii57508:1688,afii57509:1711,afii57511:1657,afii57512:1672,afii57513:1681,afii57514:1722,afii57519:1746,afii57534:1749,afii57636:8362,afii57645:1470,afii57658:1475,afii57664:1488,afii57665:1489,afii57666:1490,afii57667:1491,afii57668:1492,afii57669:1493,afii57670:1494,afii57671:1495,afii57672:1496,afii57673:1497,afii57674:1498,afii57675:1499,afii57676:1500,afii57677:1501,afii57678:1502,afii57679:1503,afii57680:1504,afii57681:1505,afii57682:1506,afii57683:1507,
afii57684:1508,afii57685:1509,afii57686:1510,afii57687:1511,afii57688:1512,afii57689:1513,afii57690:1514,afii57694:64298,afii57695:64299,afii57700:64331,afii57705:64287,afii57716:1520,afii57717:1521,afii57718:1522,afii57723:64309,afii57793:1460,afii57794:1461,afii57795:1462,afii57796:1467,afii57797:1464,afii57798:1463,afii57799:1456,afii57800:1458,afii57801:1457,afii57802:1459,afii57803:1474,afii57804:1473,afii57806:1465,afii57807:1468,afii57839:1469,afii57841:1471,afii57842:1472,afii57929:700,afii61248:8453,
afii61289:8467,afii61352:8470,afii61573:8236,afii61574:8237,afii61575:8238,afii61664:8204,afii63167:1645,afii64937:701,agrave:224,agujarati:2693,agurmukhi:2565,ahiragana:12354,ahookabove:7843,aibengali:2448,aibopomofo:12574,aideva:2320,aiecyrillic:1237,aigujarati:2704,aigurmukhi:2576,aimatragurmukhi:2632,ainarabic:1593,ainfinalarabic:65226,aininitialarabic:65227,ainmedialarabic:65228,ainvertedbreve:515,aivowelsignbengali:2504,aivowelsigndeva:2376,aivowelsigngujarati:2760,akatakana:12450,akatakanahalfwidth:65393,
akorean:12623,alef:1488,alefarabic:1575,alefdageshhebrew:64304,aleffinalarabic:65166,alefhamzaabovearabic:1571,alefhamzaabovefinalarabic:65156,alefhamzabelowarabic:1573,alefhamzabelowfinalarabic:65160,alefhebrew:1488,aleflamedhebrew:64335,alefmaddaabovearabic:1570,alefmaddaabovefinalarabic:65154,alefmaksuraarabic:1609,alefmaksurafinalarabic:65264,alefmaksurainitialarabic:65267,alefmaksuramedialarabic:65268,alefpatahhebrew:64302,alefqamatshebrew:64303,aleph:8501,allequal:8780,alpha:945,alphatonos:940,
amacron:257,amonospace:65345,ampersand:38,ampersandmonospace:65286,ampersandsmall:63270,amsquare:13250,anbopomofo:12578,angbopomofo:12580,angbracketleft:12296,angbracketright:12297,angkhankhuthai:3674,angle:8736,anglebracketleft:12296,anglebracketleftvertical:65087,anglebracketright:12297,anglebracketrightvertical:65088,angleleft:9001,angleright:9002,angstrom:8491,anoteleia:903,anudattadeva:2386,anusvarabengali:2434,anusvaradeva:2306,anusvaragujarati:2690,aogonek:261,apaatosquare:13056,aparen:9372,
apostrophearmenian:1370,apostrophemod:700,apple:63743,approaches:8784,approxequal:8776,approxequalorimage:8786,approximatelyequal:8773,araeaekorean:12686,araeakorean:12685,arc:8978,arighthalfring:7834,aring:229,aringacute:507,aringbelow:7681,arrowboth:8596,arrowdashdown:8675,arrowdashleft:8672,arrowdashright:8674,arrowdashup:8673,arrowdblboth:8660,arrowdbldown:8659,arrowdblleft:8656,arrowdblright:8658,arrowdblup:8657,arrowdown:8595,arrowdownleft:8601,arrowdownright:8600,arrowdownwhite:8681,arrowheaddownmod:709,
arrowheadleftmod:706,arrowheadrightmod:707,arrowheadupmod:708,arrowhorizex:63719,arrowleft:8592,arrowleftdbl:8656,arrowleftdblstroke:8653,arrowleftoverright:8646,arrowleftwhite:8678,arrowright:8594,arrowrightdblstroke:8655,arrowrightheavy:10142,arrowrightoverleft:8644,arrowrightwhite:8680,arrowtableft:8676,arrowtabright:8677,arrowup:8593,arrowupdn:8597,arrowupdnbse:8616,arrowupdownbase:8616,arrowupleft:8598,arrowupleftofdown:8645,arrowupright:8599,arrowupwhite:8679,arrowvertex:63718,asciicircum:94,
asciicircummonospace:65342,asciitilde:126,asciitildemonospace:65374,ascript:593,ascriptturned:594,asmallhiragana:12353,asmallkatakana:12449,asmallkatakanahalfwidth:65383,asterisk:42,asteriskaltonearabic:1645,asteriskarabic:1645,asteriskmath:8727,asteriskmonospace:65290,asterisksmall:65121,asterism:8258,asuperior:63209,asymptoticallyequal:8771,at:64,atilde:227,atmonospace:65312,atsmall:65131,aturned:592,aubengali:2452,aubopomofo:12576,audeva:2324,augujarati:2708,augurmukhi:2580,aulengthmarkbengali:2519,
aumatragurmukhi:2636,auvowelsignbengali:2508,auvowelsigndeva:2380,auvowelsigngujarati:2764,avagrahadeva:2365,aybarmenian:1377,ayin:1506,ayinaltonehebrew:64288,ayinhebrew:1506,b:98,babengali:2476,backslash:92,backslashmonospace:65340,badeva:2348,bagujarati:2732,bagurmukhi:2604,bahiragana:12400,bahtthai:3647,bakatakana:12496,bar:124,barmonospace:65372,bbopomofo:12549,bcircle:9425,bdotaccent:7683,bdotbelow:7685,beamedsixteenthnotes:9836,because:8757,becyrillic:1073,beharabic:1576,behfinalarabic:65168,
behinitialarabic:65169,behiragana:12409,behmedialarabic:65170,behmeeminitialarabic:64671,behmeemisolatedarabic:64520,behnoonfinalarabic:64621,bekatakana:12505,benarmenian:1378,bet:1489,beta:946,betasymbolgreek:976,betdagesh:64305,betdageshhebrew:64305,bethebrew:1489,betrafehebrew:64332,bhabengali:2477,bhadeva:2349,bhagujarati:2733,bhagurmukhi:2605,bhook:595,bihiragana:12403,bikatakana:12499,bilabialclick:664,bindigurmukhi:2562,birusquare:13105,blackcircle:9679,blackdiamond:9670,blackdownpointingtriangle:9660,
blackleftpointingpointer:9668,blackleftpointingtriangle:9664,blacklenticularbracketleft:12304,blacklenticularbracketleftvertical:65083,blacklenticularbracketright:12305,blacklenticularbracketrightvertical:65084,blacklowerlefttriangle:9699,blacklowerrighttriangle:9698,blackrectangle:9644,blackrightpointingpointer:9658,blackrightpointingtriangle:9654,blacksmallsquare:9642,blacksmilingface:9787,blacksquare:9632,blackstar:9733,blackupperlefttriangle:9700,blackupperrighttriangle:9701,blackuppointingsmalltriangle:9652,
blackuppointingtriangle:9650,blank:9251,blinebelow:7687,block:9608,bmonospace:65346,bobaimaithai:3610,bohiragana:12412,bokatakana:12508,bparen:9373,bqsquare:13251,braceex:63732,braceleft:123,braceleftbt:63731,braceleftmid:63730,braceleftmonospace:65371,braceleftsmall:65115,bracelefttp:63729,braceleftvertical:65079,braceright:125,bracerightbt:63742,bracerightmid:63741,bracerightmonospace:65373,bracerightsmall:65116,bracerighttp:63740,bracerightvertical:65080,bracketleft:91,bracketleftbt:63728,bracketleftex:63727,
bracketleftmonospace:65339,bracketlefttp:63726,bracketright:93,bracketrightbt:63739,bracketrightex:63738,bracketrightmonospace:65341,bracketrighttp:63737,breve:728,brevebelowcmb:814,brevecmb:774,breveinvertedbelowcmb:815,breveinvertedcmb:785,breveinverteddoublecmb:865,bridgebelowcmb:810,bridgeinvertedbelowcmb:826,brokenbar:166,bstroke:384,bsuperior:63210,btopbar:387,buhiragana:12406,bukatakana:12502,bullet:8226,bulletinverse:9688,bulletoperator:8729,bullseye:9678,c:99,caarmenian:1390,cabengali:2458,
cacute:263,cadeva:2330,cagujarati:2714,cagurmukhi:2586,calsquare:13192,candrabindubengali:2433,candrabinducmb:784,candrabindudeva:2305,candrabindugujarati:2689,capslock:8682,careof:8453,caron:711,caronbelowcmb:812,caroncmb:780,carriagereturn:8629,cbopomofo:12568,ccaron:269,ccedilla:231,ccedillaacute:7689,ccircle:9426,ccircumflex:265,ccurl:597,cdot:267,cdotaccent:267,cdsquare:13253,cedilla:184,cedillacmb:807,cent:162,centigrade:8451,centinferior:63199,centmonospace:65504,centoldstyle:63394,centsuperior:63200,
chaarmenian:1401,chabengali:2459,chadeva:2331,chagujarati:2715,chagurmukhi:2587,chbopomofo:12564,cheabkhasiancyrillic:1213,checkmark:10003,checyrillic:1095,chedescenderabkhasiancyrillic:1215,chedescendercyrillic:1207,chedieresiscyrillic:1269,cheharmenian:1395,chekhakassiancyrillic:1228,cheverticalstrokecyrillic:1209,chi:967,chieuchacirclekorean:12919,chieuchaparenkorean:12823,chieuchcirclekorean:12905,chieuchkorean:12618,chieuchparenkorean:12809,chochangthai:3594,chochanthai:3592,chochingthai:3593,
chochoethai:3596,chook:392,cieucacirclekorean:12918,cieucaparenkorean:12822,cieuccirclekorean:12904,cieuckorean:12616,cieucparenkorean:12808,cieucuparenkorean:12828,circle:9675,circlecopyrt:169,circlemultiply:8855,circleot:8857,circleplus:8853,circlepostalmark:12342,circlewithlefthalfblack:9680,circlewithrighthalfblack:9681,circumflex:710,circumflexbelowcmb:813,circumflexcmb:770,clear:8999,clickalveolar:450,clickdental:448,clicklateral:449,clickretroflex:451,club:9827,clubsuitblack:9827,clubsuitwhite:9831,
cmcubedsquare:13220,cmonospace:65347,cmsquaredsquare:13216,coarmenian:1409,colon:58,colonmonetary:8353,colonmonospace:65306,colonsign:8353,colonsmall:65109,colontriangularhalfmod:721,colontriangularmod:720,comma:44,commaabovecmb:787,commaaboverightcmb:789,commaaccent:63171,commaarabic:1548,commaarmenian:1373,commainferior:63201,commamonospace:65292,commareversedabovecmb:788,commareversedmod:701,commasmall:65104,commasuperior:63202,commaturnedabovecmb:786,commaturnedmod:699,compass:9788,congruent:8773,
contourintegral:8750,control:8963,controlACK:6,controlBEL:7,controlBS:8,controlCAN:24,controlCR:13,controlDC1:17,controlDC2:18,controlDC3:19,controlDC4:20,controlDEL:127,controlDLE:16,controlEM:25,controlENQ:5,controlEOT:4,controlESC:27,controlETB:23,controlETX:3,controlFF:12,controlFS:28,controlGS:29,controlHT:9,controlLF:10,controlNAK:21,controlRS:30,controlSI:15,controlSO:14,controlSOT:2,controlSTX:1,controlSUB:26,controlSYN:22,controlUS:31,controlVT:11,copyright:169,copyrightsans:63721,copyrightserif:63193,
cornerbracketleft:12300,cornerbracketlefthalfwidth:65378,cornerbracketleftvertical:65089,cornerbracketright:12301,cornerbracketrighthalfwidth:65379,cornerbracketrightvertical:65090,corporationsquare:13183,cosquare:13255,coverkgsquare:13254,cparen:9374,cruzeiro:8354,cstretched:663,curlyand:8911,curlyor:8910,currency:164,cyrBreve:63185,cyrFlex:63186,cyrbreve:63188,cyrflex:63189,d:100,daarmenian:1380,dabengali:2470,dadarabic:1590,dadeva:2342,dadfinalarabic:65214,dadinitialarabic:65215,dadmedialarabic:65216,
dagesh:1468,dageshhebrew:1468,dagger:8224,daggerdbl:8225,dagujarati:2726,dagurmukhi:2598,dahiragana:12384,dakatakana:12480,dalarabic:1583,dalet:1491,daletdagesh:64307,daletdageshhebrew:64307,dalethebrew:1491,dalfinalarabic:65194,dammaarabic:1615,dammalowarabic:1615,dammatanaltonearabic:1612,dammatanarabic:1612,danda:2404,dargahebrew:1447,dargalefthebrew:1447,dasiapneumatacyrilliccmb:1157,dblGrave:63187,dblanglebracketleft:12298,dblanglebracketleftvertical:65085,dblanglebracketright:12299,dblanglebracketrightvertical:65086,
dblarchinvertedbelowcmb:811,dblarrowleft:8660,dblarrowright:8658,dbldanda:2405,dblgrave:63190,dblgravecmb:783,dblintegral:8748,dbllowline:8215,dbllowlinecmb:819,dbloverlinecmb:831,dblprimemod:698,dblverticalbar:8214,dblverticallineabovecmb:782,dbopomofo:12553,dbsquare:13256,dcaron:271,dcedilla:7697,dcircle:9427,dcircumflexbelow:7699,dcroat:273,ddabengali:2465,ddadeva:2337,ddagujarati:2721,ddagurmukhi:2593,ddalarabic:1672,ddalfinalarabic:64393,dddhadeva:2396,ddhabengali:2466,ddhadeva:2338,ddhagujarati:2722,
ddhagurmukhi:2594,ddotaccent:7691,ddotbelow:7693,decimalseparatorarabic:1643,decimalseparatorpersian:1643,decyrillic:1076,degree:176,dehihebrew:1453,dehiragana:12391,deicoptic:1007,dekatakana:12487,deleteleft:9003,deleteright:8998,delta:948,deltaturned:397,denominatorminusonenumeratorbengali:2552,dezh:676,dhabengali:2471,dhadeva:2343,dhagujarati:2727,dhagurmukhi:2599,dhook:599,dialytikatonos:901,dialytikatonoscmb:836,diamond:9830,diamondsuitwhite:9826,dieresis:168,dieresisacute:63191,dieresisbelowcmb:804,
dieresiscmb:776,dieresisgrave:63192,dieresistonos:901,dihiragana:12386,dikatakana:12482,dittomark:12291,divide:247,divides:8739,divisionslash:8725,djecyrillic:1106,dkshade:9619,dlinebelow:7695,dlsquare:13207,dmacron:273,dmonospace:65348,dnblock:9604,dochadathai:3598,dodekthai:3604,dohiragana:12393,dokatakana:12489,dollar:36,dollarinferior:63203,dollarmonospace:65284,dollaroldstyle:63268,dollarsmall:65129,dollarsuperior:63204,dong:8363,dorusquare:13094,dotaccent:729,dotaccentcmb:775,dotbelowcmb:803,
dotbelowcomb:803,dotkatakana:12539,dotlessi:305,dotlessj:63166,dotlessjstrokehook:644,dotmath:8901,dottedcircle:9676,doubleyodpatah:64287,doubleyodpatahhebrew:64287,downtackbelowcmb:798,downtackmod:725,dparen:9375,dsuperior:63211,dtail:598,dtopbar:396,duhiragana:12389,dukatakana:12485,dz:499,dzaltone:675,dzcaron:454,dzcurl:677,dzeabkhasiancyrillic:1249,dzecyrillic:1109,dzhecyrillic:1119,e:101,eacute:233,earth:9793,ebengali:2447,ebopomofo:12572,ebreve:277,ecandradeva:2317,ecandragujarati:2701,ecandravowelsigndeva:2373,
ecandravowelsigngujarati:2757,ecaron:283,ecedillabreve:7709,echarmenian:1381,echyiwnarmenian:1415,ecircle:9428,ecircumflex:234,ecircumflexacute:7871,ecircumflexbelow:7705,ecircumflexdotbelow:7879,ecircumflexgrave:7873,ecircumflexhookabove:7875,ecircumflextilde:7877,ecyrillic:1108,edblgrave:517,edeva:2319,edieresis:235,edot:279,edotaccent:279,edotbelow:7865,eegurmukhi:2575,eematragurmukhi:2631,efcyrillic:1092,egrave:232,egujarati:2703,eharmenian:1383,ehbopomofo:12573,ehiragana:12360,ehookabove:7867,
eibopomofo:12575,eight:56,eightarabic:1640,eightbengali:2542,eightcircle:9319,eightcircleinversesansserif:10129,eightdeva:2414,eighteencircle:9329,eighteenparen:9349,eighteenperiod:9369,eightgujarati:2798,eightgurmukhi:2670,eighthackarabic:1640,eighthangzhou:12328,eighthnotebeamed:9835,eightideographicparen:12839,eightinferior:8328,eightmonospace:65304,eightoldstyle:63288,eightparen:9339,eightperiod:9359,eightpersian:1784,eightroman:8567,eightsuperior:8312,eightthai:3672,einvertedbreve:519,eiotifiedcyrillic:1125,
ekatakana:12456,ekatakanahalfwidth:65396,ekonkargurmukhi:2676,ekorean:12628,elcyrillic:1083,element:8712,elevencircle:9322,elevenparen:9342,elevenperiod:9362,elevenroman:8570,ellipsis:8230,ellipsisvertical:8942,emacron:275,emacronacute:7703,emacrongrave:7701,emcyrillic:1084,emdash:8212,emdashvertical:65073,emonospace:65349,emphasismarkarmenian:1371,emptyset:8709,enbopomofo:12579,encyrillic:1085,endash:8211,endashvertical:65074,endescendercyrillic:1187,eng:331,engbopomofo:12581,enghecyrillic:1189,
enhookcyrillic:1224,enspace:8194,eogonek:281,eokorean:12627,eopen:603,eopenclosed:666,eopenreversed:604,eopenreversedclosed:606,eopenreversedhook:605,eparen:9376,epsilon:949,epsilontonos:941,equal:61,equalmonospace:65309,equalsmall:65126,equalsuperior:8316,equivalence:8801,erbopomofo:12582,ercyrillic:1088,ereversed:600,ereversedcyrillic:1101,escyrillic:1089,esdescendercyrillic:1195,esh:643,eshcurl:646,eshortdeva:2318,eshortvowelsigndeva:2374,eshreversedloop:426,eshsquatreversed:645,esmallhiragana:12359,
esmallkatakana:12455,esmallkatakanahalfwidth:65386,estimated:8494,esuperior:63212,eta:951,etarmenian:1384,etatonos:942,eth:240,etilde:7869,etildebelow:7707,etnahtafoukhhebrew:1425,etnahtafoukhlefthebrew:1425,etnahtahebrew:1425,etnahtalefthebrew:1425,eturned:477,eukorean:12641,euro:8364,evowelsignbengali:2503,evowelsigndeva:2375,evowelsigngujarati:2759,exclam:33,exclamarmenian:1372,exclamdbl:8252,exclamdown:161,exclamdownsmall:63393,exclammonospace:65281,exclamsmall:63265,existential:8707,ezh:658,
ezhcaron:495,ezhcurl:659,ezhreversed:441,ezhtail:442,f:102,fadeva:2398,fagurmukhi:2654,fahrenheit:8457,fathaarabic:1614,fathalowarabic:1614,fathatanarabic:1611,fbopomofo:12552,fcircle:9429,fdotaccent:7711,feharabic:1601,feharmenian:1414,fehfinalarabic:65234,fehinitialarabic:65235,fehmedialarabic:65236,feicoptic:997,female:9792,ff:64256,ffi:64259,ffl:64260,fi:64257,fifteencircle:9326,fifteenparen:9346,fifteenperiod:9366,figuredash:8210,filledbox:9632,filledrect:9644,finalkaf:1498,finalkafdagesh:64314,
finalkafdageshhebrew:64314,finalkafhebrew:1498,finalmem:1501,finalmemhebrew:1501,finalnun:1503,finalnunhebrew:1503,finalpe:1507,finalpehebrew:1507,finaltsadi:1509,finaltsadihebrew:1509,firsttonechinese:713,fisheye:9673,fitacyrillic:1139,five:53,fivearabic:1637,fivebengali:2539,fivecircle:9316,fivecircleinversesansserif:10126,fivedeva:2411,fiveeighths:8541,fivegujarati:2795,fivegurmukhi:2667,fivehackarabic:1637,fivehangzhou:12325,fiveideographicparen:12836,fiveinferior:8325,fivemonospace:65301,fiveoldstyle:63285,
fiveparen:9336,fiveperiod:9356,fivepersian:1781,fiveroman:8564,fivesuperior:8309,fivethai:3669,fl:64258,florin:402,fmonospace:65350,fmsquare:13209,fofanthai:3615,fofathai:3613,fongmanthai:3663,forall:8704,four:52,fourarabic:1636,fourbengali:2538,fourcircle:9315,fourcircleinversesansserif:10125,fourdeva:2410,fourgujarati:2794,fourgurmukhi:2666,fourhackarabic:1636,fourhangzhou:12324,fourideographicparen:12835,fourinferior:8324,fourmonospace:65300,fournumeratorbengali:2551,fouroldstyle:63284,fourparen:9335,
fourperiod:9355,fourpersian:1780,fourroman:8563,foursuperior:8308,fourteencircle:9325,fourteenparen:9345,fourteenperiod:9365,fourthai:3668,fourthtonechinese:715,fparen:9377,fraction:8260,franc:8355,g:103,gabengali:2455,gacute:501,gadeva:2327,gafarabic:1711,gaffinalarabic:64403,gafinitialarabic:64404,gafmedialarabic:64405,gagujarati:2711,gagurmukhi:2583,gahiragana:12364,gakatakana:12460,gamma:947,gammalatinsmall:611,gammasuperior:736,gangiacoptic:1003,gbopomofo:12557,gbreve:287,gcaron:487,gcedilla:291,
gcircle:9430,gcircumflex:285,gcommaaccent:291,gdot:289,gdotaccent:289,gecyrillic:1075,gehiragana:12370,gekatakana:12466,geometricallyequal:8785,gereshaccenthebrew:1436,gereshhebrew:1523,gereshmuqdamhebrew:1437,germandbls:223,gershayimaccenthebrew:1438,gershayimhebrew:1524,getamark:12307,ghabengali:2456,ghadarmenian:1394,ghadeva:2328,ghagujarati:2712,ghagurmukhi:2584,ghainarabic:1594,ghainfinalarabic:65230,ghaininitialarabic:65231,ghainmedialarabic:65232,ghemiddlehookcyrillic:1173,ghestrokecyrillic:1171,
gheupturncyrillic:1169,ghhadeva:2394,ghhagurmukhi:2650,ghook:608,ghzsquare:13203,gihiragana:12366,gikatakana:12462,gimarmenian:1379,gimel:1490,gimeldagesh:64306,gimeldageshhebrew:64306,gimelhebrew:1490,gjecyrillic:1107,glottalinvertedstroke:446,glottalstop:660,glottalstopinverted:662,glottalstopmod:704,glottalstopreversed:661,glottalstopreversedmod:705,glottalstopreversedsuperior:740,glottalstopstroke:673,glottalstopstrokereversed:674,gmacron:7713,gmonospace:65351,gohiragana:12372,gokatakana:12468,
gparen:9378,gpasquare:13228,gradient:8711,grave:96,gravebelowcmb:790,gravecmb:768,gravecomb:768,gravedeva:2387,gravelowmod:718,gravemonospace:65344,gravetonecmb:832,greater:62,greaterequal:8805,greaterequalorless:8923,greatermonospace:65310,greaterorequivalent:8819,greaterorless:8823,greateroverequal:8807,greatersmall:65125,gscript:609,gstroke:485,guhiragana:12368,guillemotleft:171,guillemotright:187,guilsinglleft:8249,guilsinglright:8250,gukatakana:12464,guramusquare:13080,gysquare:13257,h:104,haabkhasiancyrillic:1193,
haaltonearabic:1729,habengali:2489,hadescendercyrillic:1203,hadeva:2361,hagujarati:2745,hagurmukhi:2617,haharabic:1581,hahfinalarabic:65186,hahinitialarabic:65187,hahiragana:12399,hahmedialarabic:65188,haitusquare:13098,hakatakana:12495,hakatakanahalfwidth:65418,halantgurmukhi:2637,hamzaarabic:1569,hamzalowarabic:1569,hangulfiller:12644,hardsigncyrillic:1098,harpoonleftbarbup:8636,harpoonrightbarbup:8640,hasquare:13258,hatafpatah:1458,hatafpatah16:1458,hatafpatah23:1458,hatafpatah2f:1458,hatafpatahhebrew:1458,
hatafpatahnarrowhebrew:1458,hatafpatahquarterhebrew:1458,hatafpatahwidehebrew:1458,hatafqamats:1459,hatafqamats1b:1459,hatafqamats28:1459,hatafqamats34:1459,hatafqamatshebrew:1459,hatafqamatsnarrowhebrew:1459,hatafqamatsquarterhebrew:1459,hatafqamatswidehebrew:1459,hatafsegol:1457,hatafsegol17:1457,hatafsegol24:1457,hatafsegol30:1457,hatafsegolhebrew:1457,hatafsegolnarrowhebrew:1457,hatafsegolquarterhebrew:1457,hatafsegolwidehebrew:1457,hbar:295,hbopomofo:12559,hbrevebelow:7723,hcedilla:7721,hcircle:9431,
hcircumflex:293,hdieresis:7719,hdotaccent:7715,hdotbelow:7717,he:1492,heart:9829,heartsuitblack:9829,heartsuitwhite:9825,hedagesh:64308,hedageshhebrew:64308,hehaltonearabic:1729,heharabic:1607,hehebrew:1492,hehfinalaltonearabic:64423,hehfinalalttwoarabic:65258,hehfinalarabic:65258,hehhamzaabovefinalarabic:64421,hehhamzaaboveisolatedarabic:64420,hehinitialaltonearabic:64424,hehinitialarabic:65259,hehiragana:12408,hehmedialaltonearabic:64425,hehmedialarabic:65260,heiseierasquare:13179,hekatakana:12504,
hekatakanahalfwidth:65421,hekutaarusquare:13110,henghook:615,herutusquare:13113,het:1495,hethebrew:1495,hhook:614,hhooksuperior:689,hieuhacirclekorean:12923,hieuhaparenkorean:12827,hieuhcirclekorean:12909,hieuhkorean:12622,hieuhparenkorean:12813,hihiragana:12402,hikatakana:12498,hikatakanahalfwidth:65419,hiriq:1460,hiriq14:1460,hiriq21:1460,hiriq2d:1460,hiriqhebrew:1460,hiriqnarrowhebrew:1460,hiriqquarterhebrew:1460,hiriqwidehebrew:1460,hlinebelow:7830,hmonospace:65352,hoarmenian:1392,hohipthai:3627,
hohiragana:12411,hokatakana:12507,hokatakanahalfwidth:65422,holam:1465,holam19:1465,holam26:1465,holam32:1465,holamhebrew:1465,holamnarrowhebrew:1465,holamquarterhebrew:1465,holamwidehebrew:1465,honokhukthai:3630,hookabovecomb:777,hookcmb:777,hookpalatalizedbelowcmb:801,hookretroflexbelowcmb:802,hoonsquare:13122,horicoptic:1001,horizontalbar:8213,horncmb:795,hotsprings:9832,house:8962,hparen:9379,hsuperior:688,hturned:613,huhiragana:12405,huiitosquare:13107,hukatakana:12501,hukatakanahalfwidth:65420,
hungarumlaut:733,hungarumlautcmb:779,hv:405,hyphen:45,hypheninferior:63205,hyphenmonospace:65293,hyphensmall:65123,hyphensuperior:63206,hyphentwo:8208,i:105,iacute:237,iacyrillic:1103,ibengali:2439,ibopomofo:12583,ibreve:301,icaron:464,icircle:9432,icircumflex:238,icyrillic:1110,idblgrave:521,ideographearthcircle:12943,ideographfirecircle:12939,ideographicallianceparen:12863,ideographiccallparen:12858,ideographiccentrecircle:12965,ideographicclose:12294,ideographiccomma:12289,ideographiccommaleft:65380,
ideographiccongratulationparen:12855,ideographiccorrectcircle:12963,ideographicearthparen:12847,ideographicenterpriseparen:12861,ideographicexcellentcircle:12957,ideographicfestivalparen:12864,ideographicfinancialcircle:12950,ideographicfinancialparen:12854,ideographicfireparen:12843,ideographichaveparen:12850,ideographichighcircle:12964,ideographiciterationmark:12293,ideographiclaborcircle:12952,ideographiclaborparen:12856,ideographicleftcircle:12967,ideographiclowcircle:12966,ideographicmedicinecircle:12969,
ideographicmetalparen:12846,ideographicmoonparen:12842,ideographicnameparen:12852,ideographicperiod:12290,ideographicprintcircle:12958,ideographicreachparen:12867,ideographicrepresentparen:12857,ideographicresourceparen:12862,ideographicrightcircle:12968,ideographicsecretcircle:12953,ideographicselfparen:12866,ideographicsocietyparen:12851,ideographicspace:12288,ideographicspecialparen:12853,ideographicstockparen:12849,ideographicstudyparen:12859,ideographicsunparen:12848,ideographicsuperviseparen:12860,
ideographicwaterparen:12844,ideographicwoodparen:12845,ideographiczero:12295,ideographmetalcircle:12942,ideographmooncircle:12938,ideographnamecircle:12948,ideographsuncircle:12944,ideographwatercircle:12940,ideographwoodcircle:12941,ideva:2311,idieresis:239,idieresisacute:7727,idieresiscyrillic:1253,idotbelow:7883,iebrevecyrillic:1239,iecyrillic:1077,ieungacirclekorean:12917,ieungaparenkorean:12821,ieungcirclekorean:12903,ieungkorean:12615,ieungparenkorean:12807,igrave:236,igujarati:2695,igurmukhi:2567,
ihiragana:12356,ihookabove:7881,iibengali:2440,iicyrillic:1080,iideva:2312,iigujarati:2696,iigurmukhi:2568,iimatragurmukhi:2624,iinvertedbreve:523,iishortcyrillic:1081,iivowelsignbengali:2496,iivowelsigndeva:2368,iivowelsigngujarati:2752,ij:307,ikatakana:12452,ikatakanahalfwidth:65394,ikorean:12643,ilde:732,iluyhebrew:1452,imacron:299,imacroncyrillic:1251,imageorapproximatelyequal:8787,imatragurmukhi:2623,imonospace:65353,increment:8710,infinity:8734,iniarmenian:1387,integral:8747,integralbottom:8993,
integralbt:8993,integralex:63733,integraltop:8992,integraltp:8992,intersection:8745,intisquare:13061,invbullet:9688,invcircle:9689,invsmileface:9787,iocyrillic:1105,iogonek:303,iota:953,iotadieresis:970,iotadieresistonos:912,iotalatin:617,iotatonos:943,iparen:9380,irigurmukhi:2674,ismallhiragana:12355,ismallkatakana:12451,ismallkatakanahalfwidth:65384,issharbengali:2554,istroke:616,isuperior:63213,iterationhiragana:12445,iterationkatakana:12541,itilde:297,itildebelow:7725,iubopomofo:12585,iucyrillic:1102,
ivowelsignbengali:2495,ivowelsigndeva:2367,ivowelsigngujarati:2751,izhitsacyrillic:1141,izhitsadblgravecyrillic:1143,j:106,jaarmenian:1393,jabengali:2460,jadeva:2332,jagujarati:2716,jagurmukhi:2588,jbopomofo:12560,jcaron:496,jcircle:9433,jcircumflex:309,jcrossedtail:669,jdotlessstroke:607,jecyrillic:1112,jeemarabic:1580,jeemfinalarabic:65182,jeeminitialarabic:65183,jeemmedialarabic:65184,jeharabic:1688,jehfinalarabic:64395,jhabengali:2461,jhadeva:2333,jhagujarati:2717,jhagurmukhi:2589,jheharmenian:1403,
jis:12292,jmonospace:65354,jparen:9381,jsuperior:690,k:107,kabashkircyrillic:1185,kabengali:2453,kacute:7729,kacyrillic:1082,kadescendercyrillic:1179,kadeva:2325,kaf:1499,kafarabic:1603,kafdagesh:64315,kafdageshhebrew:64315,kaffinalarabic:65242,kafhebrew:1499,kafinitialarabic:65243,kafmedialarabic:65244,kafrafehebrew:64333,kagujarati:2709,kagurmukhi:2581,kahiragana:12363,kahookcyrillic:1220,kakatakana:12459,kakatakanahalfwidth:65398,kappa:954,kappasymbolgreek:1008,kapyeounmieumkorean:12657,kapyeounphieuphkorean:12676,
kapyeounpieupkorean:12664,kapyeounssangpieupkorean:12665,karoriisquare:13069,kashidaautoarabic:1600,kashidaautonosidebearingarabic:1600,kasmallkatakana:12533,kasquare:13188,kasraarabic:1616,kasratanarabic:1613,kastrokecyrillic:1183,katahiraprolongmarkhalfwidth:65392,kaverticalstrokecyrillic:1181,kbopomofo:12558,kcalsquare:13193,kcaron:489,kcedilla:311,kcircle:9434,kcommaaccent:311,kdotbelow:7731,keharmenian:1412,kehiragana:12369,kekatakana:12465,kekatakanahalfwidth:65401,kenarmenian:1391,kesmallkatakana:12534,
kgreenlandic:312,khabengali:2454,khacyrillic:1093,khadeva:2326,khagujarati:2710,khagurmukhi:2582,khaharabic:1582,khahfinalarabic:65190,khahinitialarabic:65191,khahmedialarabic:65192,kheicoptic:999,khhadeva:2393,khhagurmukhi:2649,khieukhacirclekorean:12920,khieukhaparenkorean:12824,khieukhcirclekorean:12906,khieukhkorean:12619,khieukhparenkorean:12810,khokhaithai:3586,khokhonthai:3589,khokhuatthai:3587,khokhwaithai:3588,khomutthai:3675,khook:409,khorakhangthai:3590,khzsquare:13201,kihiragana:12365,
kikatakana:12461,kikatakanahalfwidth:65399,kiroguramusquare:13077,kiromeetorusquare:13078,kirosquare:13076,kiyeokacirclekorean:12910,kiyeokaparenkorean:12814,kiyeokcirclekorean:12896,kiyeokkorean:12593,kiyeokparenkorean:12800,kiyeoksioskorean:12595,kjecyrillic:1116,klinebelow:7733,klsquare:13208,kmcubedsquare:13222,kmonospace:65355,kmsquaredsquare:13218,kohiragana:12371,kohmsquare:13248,kokaithai:3585,kokatakana:12467,kokatakanahalfwidth:65402,kooposquare:13086,koppacyrillic:1153,koreanstandardsymbol:12927,
koroniscmb:835,kparen:9382,kpasquare:13226,ksicyrillic:1135,ktsquare:13263,kturned:670,kuhiragana:12367,kukatakana:12463,kukatakanahalfwidth:65400,kvsquare:13240,kwsquare:13246,l:108,labengali:2482,lacute:314,ladeva:2354,lagujarati:2738,lagurmukhi:2610,lakkhangyaothai:3653,lamaleffinalarabic:65276,lamalefhamzaabovefinalarabic:65272,lamalefhamzaaboveisolatedarabic:65271,lamalefhamzabelowfinalarabic:65274,lamalefhamzabelowisolatedarabic:65273,lamalefisolatedarabic:65275,lamalefmaddaabovefinalarabic:65270,
lamalefmaddaaboveisolatedarabic:65269,lamarabic:1604,lambda:955,lambdastroke:411,lamed:1500,lameddagesh:64316,lameddageshhebrew:64316,lamedhebrew:1500,lamfinalarabic:65246,lamhahinitialarabic:64714,laminitialarabic:65247,lamjeeminitialarabic:64713,lamkhahinitialarabic:64715,lamlamhehisolatedarabic:65010,lammedialarabic:65248,lammeemhahinitialarabic:64904,lammeeminitialarabic:64716,largecircle:9711,lbar:410,lbelt:620,lbopomofo:12556,lcaron:318,lcedilla:316,lcircle:9435,lcircumflexbelow:7741,lcommaaccent:316,
ldot:320,ldotaccent:320,ldotbelow:7735,ldotbelowmacron:7737,leftangleabovecmb:794,lefttackbelowcmb:792,less:60,lessequal:8804,lessequalorgreater:8922,lessmonospace:65308,lessorequivalent:8818,lessorgreater:8822,lessoverequal:8806,lesssmall:65124,lezh:622,lfblock:9612,lhookretroflex:621,lira:8356,liwnarmenian:1388,lj:457,ljecyrillic:1113,ll:63168,lladeva:2355,llagujarati:2739,llinebelow:7739,llladeva:2356,llvocalicbengali:2529,llvocalicdeva:2401,llvocalicvowelsignbengali:2531,llvocalicvowelsigndeva:2403,
lmiddletilde:619,lmonospace:65356,lmsquare:13264,lochulathai:3628,logicaland:8743,logicalnot:172,logicalnotreversed:8976,logicalor:8744,lolingthai:3621,longs:383,lowlinecenterline:65102,lowlinecmb:818,lowlinedashed:65101,lozenge:9674,lparen:9383,lslash:322,lsquare:8467,lsuperior:63214,ltshade:9617,luthai:3622,lvocalicbengali:2444,lvocalicdeva:2316,lvocalicvowelsignbengali:2530,lvocalicvowelsigndeva:2402,lxsquare:13267,m:109,mabengali:2478,macron:175,macronbelowcmb:817,macroncmb:772,macronlowmod:717,
macronmonospace:65507,macute:7743,madeva:2350,magujarati:2734,magurmukhi:2606,mahapakhhebrew:1444,mahapakhlefthebrew:1444,mahiragana:12414,maichattawalowleftthai:63637,maichattawalowrightthai:63636,maichattawathai:3659,maichattawaupperleftthai:63635,maieklowleftthai:63628,maieklowrightthai:63627,maiekthai:3656,maiekupperleftthai:63626,maihanakatleftthai:63620,maihanakatthai:3633,maitaikhuleftthai:63625,maitaikhuthai:3655,maitholowleftthai:63631,maitholowrightthai:63630,maithothai:3657,maithoupperleftthai:63629,
maitrilowleftthai:63634,maitrilowrightthai:63633,maitrithai:3658,maitriupperleftthai:63632,maiyamokthai:3654,makatakana:12510,makatakanahalfwidth:65423,male:9794,mansyonsquare:13127,maqafhebrew:1470,mars:9794,masoracirclehebrew:1455,masquare:13187,mbopomofo:12551,mbsquare:13268,mcircle:9436,mcubedsquare:13221,mdotaccent:7745,mdotbelow:7747,meemarabic:1605,meemfinalarabic:65250,meeminitialarabic:65251,meemmedialarabic:65252,meemmeeminitialarabic:64721,meemmeemisolatedarabic:64584,meetorusquare:13133,
mehiragana:12417,meizierasquare:13182,mekatakana:12513,mekatakanahalfwidth:65426,mem:1502,memdagesh:64318,memdageshhebrew:64318,memhebrew:1502,menarmenian:1396,merkhahebrew:1445,merkhakefulahebrew:1446,merkhakefulalefthebrew:1446,merkhalefthebrew:1445,mhook:625,mhzsquare:13202,middledotkatakanahalfwidth:65381,middot:183,mieumacirclekorean:12914,mieumaparenkorean:12818,mieumcirclekorean:12900,mieumkorean:12609,mieumpansioskorean:12656,mieumparenkorean:12804,mieumpieupkorean:12654,mieumsioskorean:12655,
mihiragana:12415,mikatakana:12511,mikatakanahalfwidth:65424,minus:8722,minusbelowcmb:800,minuscircle:8854,minusmod:727,minusplus:8723,minute:8242,miribaarusquare:13130,mirisquare:13129,mlonglegturned:624,mlsquare:13206,mmcubedsquare:13219,mmonospace:65357,mmsquaredsquare:13215,mohiragana:12418,mohmsquare:13249,mokatakana:12514,mokatakanahalfwidth:65427,molsquare:13270,momathai:3617,moverssquare:13223,moverssquaredsquare:13224,mparen:9384,mpasquare:13227,mssquare:13235,msuperior:63215,mturned:623,
mu:181,mu1:181,muasquare:13186,muchgreater:8811,muchless:8810,mufsquare:13196,mugreek:956,mugsquare:13197,muhiragana:12416,mukatakana:12512,mukatakanahalfwidth:65425,mulsquare:13205,multiply:215,mumsquare:13211,munahhebrew:1443,munahlefthebrew:1443,musicalnote:9834,musicalnotedbl:9835,musicflatsign:9837,musicsharpsign:9839,mussquare:13234,muvsquare:13238,muwsquare:13244,mvmegasquare:13241,mvsquare:13239,mwmegasquare:13247,mwsquare:13245,n:110,nabengali:2472,nabla:8711,nacute:324,nadeva:2344,nagujarati:2728,
nagurmukhi:2600,nahiragana:12394,nakatakana:12490,nakatakanahalfwidth:65413,napostrophe:329,nasquare:13185,nbopomofo:12555,nbspace:160,ncaron:328,ncedilla:326,ncircle:9437,ncircumflexbelow:7755,ncommaaccent:326,ndotaccent:7749,ndotbelow:7751,nehiragana:12397,nekatakana:12493,nekatakanahalfwidth:65416,newsheqelsign:8362,nfsquare:13195,ngabengali:2457,ngadeva:2329,ngagujarati:2713,ngagurmukhi:2585,ngonguthai:3591,nhiragana:12435,nhookleft:626,nhookretroflex:627,nieunacirclekorean:12911,nieunaparenkorean:12815,
nieuncieuckorean:12597,nieuncirclekorean:12897,nieunhieuhkorean:12598,nieunkorean:12596,nieunpansioskorean:12648,nieunparenkorean:12801,nieunsioskorean:12647,nieuntikeutkorean:12646,nihiragana:12395,nikatakana:12491,nikatakanahalfwidth:65414,nikhahitleftthai:63641,nikhahitthai:3661,nine:57,ninearabic:1641,ninebengali:2543,ninecircle:9320,ninecircleinversesansserif:10130,ninedeva:2415,ninegujarati:2799,ninegurmukhi:2671,ninehackarabic:1641,ninehangzhou:12329,nineideographicparen:12840,nineinferior:8329,
ninemonospace:65305,nineoldstyle:63289,nineparen:9340,nineperiod:9360,ninepersian:1785,nineroman:8568,ninesuperior:8313,nineteencircle:9330,nineteenparen:9350,nineteenperiod:9370,ninethai:3673,nj:460,njecyrillic:1114,nkatakana:12531,nkatakanahalfwidth:65437,nlegrightlong:414,nlinebelow:7753,nmonospace:65358,nmsquare:13210,nnabengali:2467,nnadeva:2339,nnagujarati:2723,nnagurmukhi:2595,nnnadeva:2345,nohiragana:12398,nokatakana:12494,nokatakanahalfwidth:65417,nonbreakingspace:160,nonenthai:3603,nonuthai:3609,
noonarabic:1606,noonfinalarabic:65254,noonghunnaarabic:1722,noonghunnafinalarabic:64415,nooninitialarabic:65255,noonjeeminitialarabic:64722,noonjeemisolatedarabic:64587,noonmedialarabic:65256,noonmeeminitialarabic:64725,noonmeemisolatedarabic:64590,noonnoonfinalarabic:64653,notcontains:8716,notelement:8713,notelementof:8713,notequal:8800,notgreater:8815,notgreaternorequal:8817,notgreaternorless:8825,notidentical:8802,notless:8814,notlessnorequal:8816,notparallel:8742,notprecedes:8832,notsubset:8836,
notsucceeds:8833,notsuperset:8837,nowarmenian:1398,nparen:9385,nssquare:13233,nsuperior:8319,ntilde:241,nu:957,nuhiragana:12396,nukatakana:12492,nukatakanahalfwidth:65415,nuktabengali:2492,nuktadeva:2364,nuktagujarati:2748,nuktagurmukhi:2620,numbersign:35,numbersignmonospace:65283,numbersignsmall:65119,numeralsigngreek:884,numeralsignlowergreek:885,numero:8470,nun:1504,nundagesh:64320,nundageshhebrew:64320,nunhebrew:1504,nvsquare:13237,nwsquare:13243,nyabengali:2462,nyadeva:2334,nyagujarati:2718,
nyagurmukhi:2590,o:111,oacute:243,oangthai:3629,obarred:629,obarredcyrillic:1257,obarreddieresiscyrillic:1259,obengali:2451,obopomofo:12571,obreve:335,ocandradeva:2321,ocandragujarati:2705,ocandravowelsigndeva:2377,ocandravowelsigngujarati:2761,ocaron:466,ocircle:9438,ocircumflex:244,ocircumflexacute:7889,ocircumflexdotbelow:7897,ocircumflexgrave:7891,ocircumflexhookabove:7893,ocircumflextilde:7895,ocyrillic:1086,odblacute:337,odblgrave:525,odeva:2323,odieresis:246,odieresiscyrillic:1255,odotbelow:7885,
oe:339,oekorean:12634,ogonek:731,ogonekcmb:808,ograve:242,ogujarati:2707,oharmenian:1413,ohiragana:12362,ohookabove:7887,ohorn:417,ohornacute:7899,ohorndotbelow:7907,ohorngrave:7901,ohornhookabove:7903,ohorntilde:7905,ohungarumlaut:337,oi:419,oinvertedbreve:527,okatakana:12458,okatakanahalfwidth:65397,okorean:12631,olehebrew:1451,omacron:333,omacronacute:7763,omacrongrave:7761,omdeva:2384,omega:969,omega1:982,omegacyrillic:1121,omegalatinclosed:631,omegaroundcyrillic:1147,omegatitlocyrillic:1149,
omegatonos:974,omgujarati:2768,omicron:959,omicrontonos:972,omonospace:65359,one:49,onearabic:1633,onebengali:2535,onecircle:9312,onecircleinversesansserif:10122,onedeva:2407,onedotenleader:8228,oneeighth:8539,onefitted:63196,onegujarati:2791,onegurmukhi:2663,onehackarabic:1633,onehalf:189,onehangzhou:12321,oneideographicparen:12832,oneinferior:8321,onemonospace:65297,onenumeratorbengali:2548,oneoldstyle:63281,oneparen:9332,oneperiod:9352,onepersian:1777,onequarter:188,oneroman:8560,onesuperior:185,
onethai:3665,onethird:8531,oogonek:491,oogonekmacron:493,oogurmukhi:2579,oomatragurmukhi:2635,oopen:596,oparen:9386,openbullet:9702,option:8997,ordfeminine:170,ordmasculine:186,orthogonal:8735,oshortdeva:2322,oshortvowelsigndeva:2378,oslash:248,oslashacute:511,osmallhiragana:12361,osmallkatakana:12457,osmallkatakanahalfwidth:65387,ostrokeacute:511,osuperior:63216,otcyrillic:1151,otilde:245,otildeacute:7757,otildedieresis:7759,oubopomofo:12577,overline:8254,overlinecenterline:65098,overlinecmb:773,
overlinedashed:65097,overlinedblwavy:65100,overlinewavy:65099,overscore:175,ovowelsignbengali:2507,ovowelsigndeva:2379,ovowelsigngujarati:2763,p:112,paampssquare:13184,paasentosquare:13099,pabengali:2474,pacute:7765,padeva:2346,pagedown:8671,pageup:8670,pagujarati:2730,pagurmukhi:2602,pahiragana:12401,paiyannoithai:3631,pakatakana:12497,palatalizationcyrilliccmb:1156,palochkacyrillic:1216,pansioskorean:12671,paragraph:182,parallel:8741,parenleft:40,parenleftaltonearabic:64830,parenleftbt:63725,parenleftex:63724,
parenleftinferior:8333,parenleftmonospace:65288,parenleftsmall:65113,parenleftsuperior:8317,parenlefttp:63723,parenleftvertical:65077,parenright:41,parenrightaltonearabic:64831,parenrightbt:63736,parenrightex:63735,parenrightinferior:8334,parenrightmonospace:65289,parenrightsmall:65114,parenrightsuperior:8318,parenrighttp:63734,parenrightvertical:65078,partialdiff:8706,paseqhebrew:1472,pashtahebrew:1433,pasquare:13225,patah:1463,patah11:1463,patah1d:1463,patah2a:1463,patahhebrew:1463,patahnarrowhebrew:1463,
patahquarterhebrew:1463,patahwidehebrew:1463,pazerhebrew:1441,pbopomofo:12550,pcircle:9439,pdotaccent:7767,pe:1508,pecyrillic:1087,pedagesh:64324,pedageshhebrew:64324,peezisquare:13115,pefinaldageshhebrew:64323,peharabic:1662,peharmenian:1402,pehebrew:1508,pehfinalarabic:64343,pehinitialarabic:64344,pehiragana:12410,pehmedialarabic:64345,pekatakana:12506,pemiddlehookcyrillic:1191,perafehebrew:64334,percent:37,percentarabic:1642,percentmonospace:65285,percentsmall:65130,period:46,periodarmenian:1417,
periodcentered:183,periodhalfwidth:65377,periodinferior:63207,periodmonospace:65294,periodsmall:65106,periodsuperior:63208,perispomenigreekcmb:834,perpendicular:8869,perthousand:8240,peseta:8359,pfsquare:13194,phabengali:2475,phadeva:2347,phagujarati:2731,phagurmukhi:2603,phi:966,phi1:981,phieuphacirclekorean:12922,phieuphaparenkorean:12826,phieuphcirclekorean:12908,phieuphkorean:12621,phieuphparenkorean:12812,philatin:632,phinthuthai:3642,phisymbolgreek:981,phook:421,phophanthai:3614,phophungthai:3612,
phosamphaothai:3616,pi:960,pieupacirclekorean:12915,pieupaparenkorean:12819,pieupcieuckorean:12662,pieupcirclekorean:12901,pieupkiyeokkorean:12658,pieupkorean:12610,pieupparenkorean:12805,pieupsioskiyeokkorean:12660,pieupsioskorean:12612,pieupsiostikeutkorean:12661,pieupthieuthkorean:12663,pieuptikeutkorean:12659,pihiragana:12404,pikatakana:12500,pisymbolgreek:982,piwrarmenian:1411,plus:43,plusbelowcmb:799,pluscircle:8853,plusminus:177,plusmod:726,plusmonospace:65291,plussmall:65122,plussuperior:8314,
pmonospace:65360,pmsquare:13272,pohiragana:12413,pointingindexdownwhite:9759,pointingindexleftwhite:9756,pointingindexrightwhite:9758,pointingindexupwhite:9757,pokatakana:12509,poplathai:3611,postalmark:12306,postalmarkface:12320,pparen:9387,precedes:8826,prescription:8478,primemod:697,primereversed:8245,product:8719,projective:8965,prolongedkana:12540,propellor:8984,propersubset:8834,propersuperset:8835,proportion:8759,proportional:8733,psi:968,psicyrillic:1137,psilipneumatacyrilliccmb:1158,pssquare:13232,
puhiragana:12407,pukatakana:12503,pvsquare:13236,pwsquare:13242,q:113,qadeva:2392,qadmahebrew:1448,qafarabic:1602,qaffinalarabic:65238,qafinitialarabic:65239,qafmedialarabic:65240,qamats:1464,qamats10:1464,qamats1a:1464,qamats1c:1464,qamats27:1464,qamats29:1464,qamats33:1464,qamatsde:1464,qamatshebrew:1464,qamatsnarrowhebrew:1464,qamatsqatanhebrew:1464,qamatsqatannarrowhebrew:1464,qamatsqatanquarterhebrew:1464,qamatsqatanwidehebrew:1464,qamatsquarterhebrew:1464,qamatswidehebrew:1464,qarneyparahebrew:1439,
qbopomofo:12561,qcircle:9440,qhook:672,qmonospace:65361,qof:1511,qofdagesh:64327,qofdageshhebrew:64327,qofhebrew:1511,qparen:9388,quarternote:9833,qubuts:1467,qubuts18:1467,qubuts25:1467,qubuts31:1467,qubutshebrew:1467,qubutsnarrowhebrew:1467,qubutsquarterhebrew:1467,qubutswidehebrew:1467,question:63,questionarabic:1567,questionarmenian:1374,questiondown:191,questiondownsmall:63423,questiongreek:894,questionmonospace:65311,questionsmall:63295,quotedbl:34,quotedblbase:8222,quotedblleft:8220,quotedblmonospace:65282,
quotedblprime:12318,quotedblprimereversed:12317,quotedblright:8221,quoteleft:8216,quoteleftreversed:8219,quotereversed:8219,quoteright:8217,quoterightn:329,quotesinglbase:8218,quotesingle:39,quotesinglemonospace:65287,r:114,raarmenian:1404,rabengali:2480,racute:341,radeva:2352,radical:8730,radicalex:63717,radoverssquare:13230,radoverssquaredsquare:13231,radsquare:13229,rafe:1471,rafehebrew:1471,ragujarati:2736,ragurmukhi:2608,rahiragana:12425,rakatakana:12521,rakatakanahalfwidth:65431,ralowerdiagonalbengali:2545,
ramiddlediagonalbengali:2544,ramshorn:612,ratio:8758,rbopomofo:12566,rcaron:345,rcedilla:343,rcircle:9441,rcommaaccent:343,rdblgrave:529,rdotaccent:7769,rdotbelow:7771,rdotbelowmacron:7773,referencemark:8251,reflexsubset:8838,reflexsuperset:8839,registered:174,registersans:63720,registerserif:63194,reharabic:1585,reharmenian:1408,rehfinalarabic:65198,rehiragana:12428,rekatakana:12524,rekatakanahalfwidth:65434,resh:1512,reshdageshhebrew:64328,reshhebrew:1512,reversedtilde:8765,reviahebrew:1431,reviamugrashhebrew:1431,
revlogicalnot:8976,rfishhook:638,rfishhookreversed:639,rhabengali:2525,rhadeva:2397,rho:961,rhook:637,rhookturned:635,rhookturnedsuperior:693,rhosymbolgreek:1009,rhotichookmod:734,rieulacirclekorean:12913,rieulaparenkorean:12817,rieulcirclekorean:12899,rieulhieuhkorean:12608,rieulkiyeokkorean:12602,rieulkiyeoksioskorean:12649,rieulkorean:12601,rieulmieumkorean:12603,rieulpansioskorean:12652,rieulparenkorean:12803,rieulphieuphkorean:12607,rieulpieupkorean:12604,rieulpieupsioskorean:12651,rieulsioskorean:12605,
rieulthieuthkorean:12606,rieultikeutkorean:12650,rieulyeorinhieuhkorean:12653,rightangle:8735,righttackbelowcmb:793,righttriangle:8895,rihiragana:12426,rikatakana:12522,rikatakanahalfwidth:65432,ring:730,ringbelowcmb:805,ringcmb:778,ringhalfleft:703,ringhalfleftarmenian:1369,ringhalfleftbelowcmb:796,ringhalfleftcentered:723,ringhalfright:702,ringhalfrightbelowcmb:825,ringhalfrightcentered:722,rinvertedbreve:531,rittorusquare:13137,rlinebelow:7775,rlongleg:636,rlonglegturned:634,rmonospace:65362,rohiragana:12429,
rokatakana:12525,rokatakanahalfwidth:65435,roruathai:3619,rparen:9389,rrabengali:2524,rradeva:2353,rragurmukhi:2652,rreharabic:1681,rrehfinalarabic:64397,rrvocalicbengali:2528,rrvocalicdeva:2400,rrvocalicgujarati:2784,rrvocalicvowelsignbengali:2500,rrvocalicvowelsigndeva:2372,rrvocalicvowelsigngujarati:2756,rsuperior:63217,rtblock:9616,rturned:633,rturnedsuperior:692,ruhiragana:12427,rukatakana:12523,rukatakanahalfwidth:65433,rupeemarkbengali:2546,rupeesignbengali:2547,rupiah:63197,ruthai:3620,rvocalicbengali:2443,
rvocalicdeva:2315,rvocalicgujarati:2699,rvocalicvowelsignbengali:2499,rvocalicvowelsigndeva:2371,rvocalicvowelsigngujarati:2755,s:115,sabengali:2488,sacute:347,sacutedotaccent:7781,sadarabic:1589,sadeva:2360,sadfinalarabic:65210,sadinitialarabic:65211,sadmedialarabic:65212,sagujarati:2744,sagurmukhi:2616,sahiragana:12373,sakatakana:12469,sakatakanahalfwidth:65403,sallallahoualayhewasallamarabic:65018,samekh:1505,samekhdagesh:64321,samekhdageshhebrew:64321,samekhhebrew:1505,saraaathai:3634,saraaethai:3649,
saraaimaimalaithai:3652,saraaimaimuanthai:3651,saraamthai:3635,saraathai:3632,saraethai:3648,saraiileftthai:63622,saraiithai:3637,saraileftthai:63621,saraithai:3636,saraothai:3650,saraueeleftthai:63624,saraueethai:3639,saraueleftthai:63623,sarauethai:3638,sarauthai:3640,sarauuthai:3641,sbopomofo:12569,scaron:353,scarondotaccent:7783,scedilla:351,schwa:601,schwacyrillic:1241,schwadieresiscyrillic:1243,schwahook:602,scircle:9442,scircumflex:349,scommaaccent:537,sdotaccent:7777,sdotbelow:7779,sdotbelowdotaccent:7785,
seagullbelowcmb:828,second:8243,secondtonechinese:714,section:167,seenarabic:1587,seenfinalarabic:65202,seeninitialarabic:65203,seenmedialarabic:65204,segol:1462,segol13:1462,segol1f:1462,segol2c:1462,segolhebrew:1462,segolnarrowhebrew:1462,segolquarterhebrew:1462,segoltahebrew:1426,segolwidehebrew:1462,seharmenian:1405,sehiragana:12379,sekatakana:12475,sekatakanahalfwidth:65406,semicolon:59,semicolonarabic:1563,semicolonmonospace:65307,semicolonsmall:65108,semivoicedmarkkana:12444,semivoicedmarkkanahalfwidth:65439,
sentisquare:13090,sentosquare:13091,seven:55,sevenarabic:1639,sevenbengali:2541,sevencircle:9318,sevencircleinversesansserif:10128,sevendeva:2413,seveneighths:8542,sevengujarati:2797,sevengurmukhi:2669,sevenhackarabic:1639,sevenhangzhou:12327,sevenideographicparen:12838,seveninferior:8327,sevenmonospace:65303,sevenoldstyle:63287,sevenparen:9338,sevenperiod:9358,sevenpersian:1783,sevenroman:8566,sevensuperior:8311,seventeencircle:9328,seventeenparen:9348,seventeenperiod:9368,seventhai:3671,sfthyphen:173,
shaarmenian:1399,shabengali:2486,shacyrillic:1096,shaddaarabic:1617,shaddadammaarabic:64609,shaddadammatanarabic:64606,shaddafathaarabic:64608,shaddakasraarabic:64610,shaddakasratanarabic:64607,shade:9618,shadedark:9619,shadelight:9617,shademedium:9618,shadeva:2358,shagujarati:2742,shagurmukhi:2614,shalshelethebrew:1427,shbopomofo:12565,shchacyrillic:1097,sheenarabic:1588,sheenfinalarabic:65206,sheeninitialarabic:65207,sheenmedialarabic:65208,sheicoptic:995,sheqel:8362,sheqelhebrew:8362,sheva:1456,
sheva115:1456,sheva15:1456,sheva22:1456,sheva2e:1456,shevahebrew:1456,shevanarrowhebrew:1456,shevaquarterhebrew:1456,shevawidehebrew:1456,shhacyrillic:1211,shimacoptic:1005,shin:1513,shindagesh:64329,shindageshhebrew:64329,shindageshshindot:64300,shindageshshindothebrew:64300,shindageshsindot:64301,shindageshsindothebrew:64301,shindothebrew:1473,shinhebrew:1513,shinshindot:64298,shinshindothebrew:64298,shinsindot:64299,shinsindothebrew:64299,shook:642,sigma:963,sigma1:962,sigmafinal:962,sigmalunatesymbolgreek:1010,
sihiragana:12375,sikatakana:12471,sikatakanahalfwidth:65404,siluqhebrew:1469,siluqlefthebrew:1469,similar:8764,sindothebrew:1474,siosacirclekorean:12916,siosaparenkorean:12820,sioscieuckorean:12670,sioscirclekorean:12902,sioskiyeokkorean:12666,sioskorean:12613,siosnieunkorean:12667,siosparenkorean:12806,siospieupkorean:12669,siostikeutkorean:12668,six:54,sixarabic:1638,sixbengali:2540,sixcircle:9317,sixcircleinversesansserif:10127,sixdeva:2412,sixgujarati:2796,sixgurmukhi:2668,sixhackarabic:1638,
sixhangzhou:12326,sixideographicparen:12837,sixinferior:8326,sixmonospace:65302,sixoldstyle:63286,sixparen:9337,sixperiod:9357,sixpersian:1782,sixroman:8565,sixsuperior:8310,sixteencircle:9327,sixteencurrencydenominatorbengali:2553,sixteenparen:9347,sixteenperiod:9367,sixthai:3670,slash:47,slashmonospace:65295,slong:383,slongdotaccent:7835,smileface:9786,smonospace:65363,sofpasuqhebrew:1475,softhyphen:173,softsigncyrillic:1100,sohiragana:12381,sokatakana:12477,sokatakanahalfwidth:65407,soliduslongoverlaycmb:824,
solidusshortoverlaycmb:823,sorusithai:3625,sosalathai:3624,sosothai:3595,sosuathai:3626,space:32,spacehackarabic:32,spade:9824,spadesuitblack:9824,spadesuitwhite:9828,sparen:9390,squarebelowcmb:827,squarecc:13252,squarecm:13213,squarediagonalcrosshatchfill:9641,squarehorizontalfill:9636,squarekg:13199,squarekm:13214,squarekmcapital:13262,squareln:13265,squarelog:13266,squaremg:13198,squaremil:13269,squaremm:13212,squaremsquared:13217,squareorthogonalcrosshatchfill:9638,squareupperlefttolowerrightfill:9639,
squareupperrighttolowerleftfill:9640,squareverticalfill:9637,squarewhitewithsmallblack:9635,srsquare:13275,ssabengali:2487,ssadeva:2359,ssagujarati:2743,ssangcieuckorean:12617,ssanghieuhkorean:12677,ssangieungkorean:12672,ssangkiyeokkorean:12594,ssangnieunkorean:12645,ssangpieupkorean:12611,ssangsioskorean:12614,ssangtikeutkorean:12600,ssuperior:63218,sterling:163,sterlingmonospace:65505,strokelongoverlaycmb:822,strokeshortoverlaycmb:821,subset:8834,subsetnotequal:8842,subsetorequal:8838,succeeds:8827,
suchthat:8715,suhiragana:12377,sukatakana:12473,sukatakanahalfwidth:65405,sukunarabic:1618,summation:8721,sun:9788,superset:8835,supersetnotequal:8843,supersetorequal:8839,svsquare:13276,syouwaerasquare:13180,t:116,tabengali:2468,tackdown:8868,tackleft:8867,tadeva:2340,tagujarati:2724,tagurmukhi:2596,taharabic:1591,tahfinalarabic:65218,tahinitialarabic:65219,tahiragana:12383,tahmedialarabic:65220,taisyouerasquare:13181,takatakana:12479,takatakanahalfwidth:65408,tatweelarabic:1600,tau:964,tav:1514,
tavdages:64330,tavdagesh:64330,tavdageshhebrew:64330,tavhebrew:1514,tbar:359,tbopomofo:12554,tcaron:357,tccurl:680,tcedilla:355,tcheharabic:1670,tchehfinalarabic:64379,tchehinitialarabic:64380,tchehmedialarabic:64381,tcircle:9443,tcircumflexbelow:7793,tcommaaccent:355,tdieresis:7831,tdotaccent:7787,tdotbelow:7789,tecyrillic:1090,tedescendercyrillic:1197,teharabic:1578,tehfinalarabic:65174,tehhahinitialarabic:64674,tehhahisolatedarabic:64524,tehinitialarabic:65175,tehiragana:12390,tehjeeminitialarabic:64673,
tehjeemisolatedarabic:64523,tehmarbutaarabic:1577,tehmarbutafinalarabic:65172,tehmedialarabic:65176,tehmeeminitialarabic:64676,tehmeemisolatedarabic:64526,tehnoonfinalarabic:64627,tekatakana:12486,tekatakanahalfwidth:65411,telephone:8481,telephoneblack:9742,telishagedolahebrew:1440,telishaqetanahebrew:1449,tencircle:9321,tenideographicparen:12841,tenparen:9341,tenperiod:9361,tenroman:8569,tesh:679,tet:1496,tetdagesh:64312,tetdageshhebrew:64312,tethebrew:1496,tetsecyrillic:1205,tevirhebrew:1435,tevirlefthebrew:1435,
thabengali:2469,thadeva:2341,thagujarati:2725,thagurmukhi:2597,thalarabic:1584,thalfinalarabic:65196,thanthakhatlowleftthai:63640,thanthakhatlowrightthai:63639,thanthakhatthai:3660,thanthakhatupperleftthai:63638,theharabic:1579,thehfinalarabic:65178,thehinitialarabic:65179,thehmedialarabic:65180,thereexists:8707,therefore:8756,theta:952,theta1:977,thetasymbolgreek:977,thieuthacirclekorean:12921,thieuthaparenkorean:12825,thieuthcirclekorean:12907,thieuthkorean:12620,thieuthparenkorean:12811,thirteencircle:9324,
thirteenparen:9344,thirteenperiod:9364,thonangmonthothai:3601,thook:429,thophuthaothai:3602,thorn:254,thothahanthai:3607,thothanthai:3600,thothongthai:3608,thothungthai:3606,thousandcyrillic:1154,thousandsseparatorarabic:1644,thousandsseparatorpersian:1644,three:51,threearabic:1635,threebengali:2537,threecircle:9314,threecircleinversesansserif:10124,threedeva:2409,threeeighths:8540,threegujarati:2793,threegurmukhi:2665,threehackarabic:1635,threehangzhou:12323,threeideographicparen:12834,threeinferior:8323,
threemonospace:65299,threenumeratorbengali:2550,threeoldstyle:63283,threeparen:9334,threeperiod:9354,threepersian:1779,threequarters:190,threequartersemdash:63198,threeroman:8562,threesuperior:179,threethai:3667,thzsquare:13204,tihiragana:12385,tikatakana:12481,tikatakanahalfwidth:65409,tikeutacirclekorean:12912,tikeutaparenkorean:12816,tikeutcirclekorean:12898,tikeutkorean:12599,tikeutparenkorean:12802,tilde:732,tildebelowcmb:816,tildecmb:771,tildecomb:771,tildedoublecmb:864,tildeoperator:8764,tildeoverlaycmb:820,
tildeverticalcmb:830,timescircle:8855,tipehahebrew:1430,tipehalefthebrew:1430,tippigurmukhi:2672,titlocyrilliccmb:1155,tiwnarmenian:1407,tlinebelow:7791,tmonospace:65364,toarmenian:1385,tohiragana:12392,tokatakana:12488,tokatakanahalfwidth:65412,tonebarextrahighmod:741,tonebarextralowmod:745,tonebarhighmod:742,tonebarlowmod:744,tonebarmidmod:743,tonefive:445,tonesix:389,tonetwo:424,tonos:900,tonsquare:13095,topatakthai:3599,tortoiseshellbracketleft:12308,tortoiseshellbracketleftsmall:65117,tortoiseshellbracketleftvertical:65081,
tortoiseshellbracketright:12309,tortoiseshellbracketrightsmall:65118,tortoiseshellbracketrightvertical:65082,totaothai:3605,tpalatalhook:427,tparen:9391,trademark:8482,trademarksans:63722,trademarkserif:63195,tretroflexhook:648,triagdn:9660,triaglf:9668,triagrt:9658,triagup:9650,ts:678,tsadi:1510,tsadidagesh:64326,tsadidageshhebrew:64326,tsadihebrew:1510,tsecyrillic:1094,tsere:1461,tsere12:1461,tsere1e:1461,tsere2b:1461,tserehebrew:1461,tserenarrowhebrew:1461,tserequarterhebrew:1461,tserewidehebrew:1461,
tshecyrillic:1115,tsuperior:63219,ttabengali:2463,ttadeva:2335,ttagujarati:2719,ttagurmukhi:2591,tteharabic:1657,ttehfinalarabic:64359,ttehinitialarabic:64360,ttehmedialarabic:64361,tthabengali:2464,tthadeva:2336,tthagujarati:2720,tthagurmukhi:2592,tturned:647,tuhiragana:12388,tukatakana:12484,tukatakanahalfwidth:65410,tusmallhiragana:12387,tusmallkatakana:12483,tusmallkatakanahalfwidth:65391,twelvecircle:9323,twelveparen:9343,twelveperiod:9363,twelveroman:8571,twentycircle:9331,twentyhangzhou:21316,
twentyparen:9351,twentyperiod:9371,two:50,twoarabic:1634,twobengali:2536,twocircle:9313,twocircleinversesansserif:10123,twodeva:2408,twodotenleader:8229,twodotleader:8229,twodotleadervertical:65072,twogujarati:2792,twogurmukhi:2664,twohackarabic:1634,twohangzhou:12322,twoideographicparen:12833,twoinferior:8322,twomonospace:65298,twonumeratorbengali:2549,twooldstyle:63282,twoparen:9333,twoperiod:9353,twopersian:1778,tworoman:8561,twostroke:443,twosuperior:178,twothai:3666,twothirds:8532,u:117,uacute:250,
ubar:649,ubengali:2441,ubopomofo:12584,ubreve:365,ucaron:468,ucircle:9444,ucircumflex:251,ucircumflexbelow:7799,ucyrillic:1091,udattadeva:2385,udblacute:369,udblgrave:533,udeva:2313,udieresis:252,udieresisacute:472,udieresisbelow:7795,udieresiscaron:474,udieresiscyrillic:1265,udieresisgrave:476,udieresismacron:470,udotbelow:7909,ugrave:249,ugujarati:2697,ugurmukhi:2569,uhiragana:12358,uhookabove:7911,uhorn:432,uhornacute:7913,uhorndotbelow:7921,uhorngrave:7915,uhornhookabove:7917,uhorntilde:7919,
uhungarumlaut:369,uhungarumlautcyrillic:1267,uinvertedbreve:535,ukatakana:12454,ukatakanahalfwidth:65395,ukcyrillic:1145,ukorean:12636,umacron:363,umacroncyrillic:1263,umacrondieresis:7803,umatragurmukhi:2625,umonospace:65365,underscore:95,underscoredbl:8215,underscoremonospace:65343,underscorevertical:65075,underscorewavy:65103,union:8746,universal:8704,uogonek:371,uparen:9392,upblock:9600,upperdothebrew:1476,upsilon:965,upsilondieresis:971,upsilondieresistonos:944,upsilonlatin:650,upsilontonos:973,
uptackbelowcmb:797,uptackmod:724,uragurmukhi:2675,uring:367,ushortcyrillic:1118,usmallhiragana:12357,usmallkatakana:12453,usmallkatakanahalfwidth:65385,ustraightcyrillic:1199,ustraightstrokecyrillic:1201,utilde:361,utildeacute:7801,utildebelow:7797,uubengali:2442,uudeva:2314,uugujarati:2698,uugurmukhi:2570,uumatragurmukhi:2626,uuvowelsignbengali:2498,uuvowelsigndeva:2370,uuvowelsigngujarati:2754,uvowelsignbengali:2497,uvowelsigndeva:2369,uvowelsigngujarati:2753,v:118,vadeva:2357,vagujarati:2741,vagurmukhi:2613,
vakatakana:12535,vav:1493,vavdagesh:64309,vavdagesh65:64309,vavdageshhebrew:64309,vavhebrew:1493,vavholam:64331,vavholamhebrew:64331,vavvavhebrew:1520,vavyodhebrew:1521,vcircle:9445,vdotbelow:7807,vecyrillic:1074,veharabic:1700,vehfinalarabic:64363,vehinitialarabic:64364,vehmedialarabic:64365,vekatakana:12537,venus:9792,verticalbar:124,verticallineabovecmb:781,verticallinebelowcmb:809,verticallinelowmod:716,verticallinemod:712,vewarmenian:1406,vhook:651,vikatakana:12536,viramabengali:2509,viramadeva:2381,
viramagujarati:2765,visargabengali:2435,visargadeva:2307,visargagujarati:2691,vmonospace:65366,voarmenian:1400,voicediterationhiragana:12446,voicediterationkatakana:12542,voicedmarkkana:12443,voicedmarkkanahalfwidth:65438,vokatakana:12538,vparen:9393,vtilde:7805,vturned:652,vuhiragana:12436,vukatakana:12532,w:119,wacute:7811,waekorean:12633,wahiragana:12431,wakatakana:12527,wakatakanahalfwidth:65436,wakorean:12632,wasmallhiragana:12430,wasmallkatakana:12526,wattosquare:13143,wavedash:12316,wavyunderscorevertical:65076,
wawarabic:1608,wawfinalarabic:65262,wawhamzaabovearabic:1572,wawhamzaabovefinalarabic:65158,wbsquare:13277,wcircle:9446,wcircumflex:373,wdieresis:7813,wdotaccent:7815,wdotbelow:7817,wehiragana:12433,weierstrass:8472,wekatakana:12529,wekorean:12638,weokorean:12637,wgrave:7809,whitebullet:9702,whitecircle:9675,whitecircleinverse:9689,whitecornerbracketleft:12302,whitecornerbracketleftvertical:65091,whitecornerbracketright:12303,whitecornerbracketrightvertical:65092,whitediamond:9671,whitediamondcontainingblacksmalldiamond:9672,
whitedownpointingsmalltriangle:9663,whitedownpointingtriangle:9661,whiteleftpointingsmalltriangle:9667,whiteleftpointingtriangle:9665,whitelenticularbracketleft:12310,whitelenticularbracketright:12311,whiterightpointingsmalltriangle:9657,whiterightpointingtriangle:9655,whitesmallsquare:9643,whitesmilingface:9786,whitesquare:9633,whitestar:9734,whitetelephone:9743,whitetortoiseshellbracketleft:12312,whitetortoiseshellbracketright:12313,whiteuppointingsmalltriangle:9653,whiteuppointingtriangle:9651,
wihiragana:12432,wikatakana:12528,wikorean:12639,wmonospace:65367,wohiragana:12434,wokatakana:12530,wokatakanahalfwidth:65382,won:8361,wonmonospace:65510,wowaenthai:3623,wparen:9394,wring:7832,wsuperior:695,wturned:653,wynn:447,x:120,xabovecmb:829,xbopomofo:12562,xcircle:9447,xdieresis:7821,xdotaccent:7819,xeharmenian:1389,xi:958,xmonospace:65368,xparen:9395,xsuperior:739,y:121,yaadosquare:13134,yabengali:2479,yacute:253,yadeva:2351,yaekorean:12626,yagujarati:2735,yagurmukhi:2607,yahiragana:12420,
yakatakana:12516,yakatakanahalfwidth:65428,yakorean:12625,yamakkanthai:3662,yasmallhiragana:12419,yasmallkatakana:12515,yasmallkatakanahalfwidth:65388,yatcyrillic:1123,ycircle:9448,ycircumflex:375,ydieresis:255,ydotaccent:7823,ydotbelow:7925,yeharabic:1610,yehbarreearabic:1746,yehbarreefinalarabic:64431,yehfinalarabic:65266,yehhamzaabovearabic:1574,yehhamzaabovefinalarabic:65162,yehhamzaaboveinitialarabic:65163,yehhamzaabovemedialarabic:65164,yehinitialarabic:65267,yehmedialarabic:65268,yehmeeminitialarabic:64733,
yehmeemisolatedarabic:64600,yehnoonfinalarabic:64660,yehthreedotsbelowarabic:1745,yekorean:12630,yen:165,yenmonospace:65509,yeokorean:12629,yeorinhieuhkorean:12678,yerahbenyomohebrew:1450,yerahbenyomolefthebrew:1450,yericyrillic:1099,yerudieresiscyrillic:1273,yesieungkorean:12673,yesieungpansioskorean:12675,yesieungsioskorean:12674,yetivhebrew:1434,ygrave:7923,yhook:436,yhookabove:7927,yiarmenian:1397,yicyrillic:1111,yikorean:12642,yinyang:9775,yiwnarmenian:1410,ymonospace:65369,yod:1497,yoddagesh:64313,
yoddageshhebrew:64313,yodhebrew:1497,yodyodhebrew:1522,yodyodpatahhebrew:64287,yohiragana:12424,yoikorean:12681,yokatakana:12520,yokatakanahalfwidth:65430,yokorean:12635,yosmallhiragana:12423,yosmallkatakana:12519,yosmallkatakanahalfwidth:65390,yotgreek:1011,yoyaekorean:12680,yoyakorean:12679,yoyakthai:3618,yoyingthai:3597,yparen:9396,ypogegrammeni:890,ypogegrammenigreekcmb:837,yr:422,yring:7833,ysuperior:696,ytilde:7929,yturned:654,yuhiragana:12422,yuikorean:12684,yukatakana:12518,yukatakanahalfwidth:65429,
yukorean:12640,yusbigcyrillic:1131,yusbigiotifiedcyrillic:1133,yuslittlecyrillic:1127,yuslittleiotifiedcyrillic:1129,yusmallhiragana:12421,yusmallkatakana:12517,yusmallkatakanahalfwidth:65389,yuyekorean:12683,yuyeokorean:12682,yyabengali:2527,yyadeva:2399,z:122,zaarmenian:1382,zacute:378,zadeva:2395,zagurmukhi:2651,zaharabic:1592,zahfinalarabic:65222,zahinitialarabic:65223,zahiragana:12374,zahmedialarabic:65224,zainarabic:1586,zainfinalarabic:65200,zakatakana:12470,zaqefgadolhebrew:1429,zaqefqatanhebrew:1428,
zarqahebrew:1432,zayin:1494,zayindagesh:64310,zayindageshhebrew:64310,zayinhebrew:1494,zbopomofo:12567,zcaron:382,zcircle:9449,zcircumflex:7825,zcurl:657,zdot:380,zdotaccent:380,zdotbelow:7827,zecyrillic:1079,zedescendercyrillic:1177,zedieresiscyrillic:1247,zehiragana:12380,zekatakana:12476,zero:48,zeroarabic:1632,zerobengali:2534,zerodeva:2406,zerogujarati:2790,zerogurmukhi:2662,zerohackarabic:1632,zeroinferior:8320,zeromonospace:65296,zerooldstyle:63280,zeropersian:1776,zerosuperior:8304,zerothai:3664,
zerowidthjoiner:65279,zerowidthnonjoiner:8204,zerowidthspace:8203,zeta:950,zhbopomofo:12563,zhearmenian:1386,zhebrevecyrillic:1218,zhecyrillic:1078,zhedescendercyrillic:1175,zhedieresiscyrillic:1245,zihiragana:12376,zikatakana:12472,zinorhebrew:1454,zlinebelow:7829,zmonospace:65370,zohiragana:12382,zokatakana:12478,zparen:9397,zretroflexhook:656,zstroke:438,zuhiragana:12378,zukatakana:12474,".notdef":0},PDFImage=PDFImageClosure(),Metrics={Courier:600,"Courier-Bold":600,"Courier-BoldOblique":600,"Courier-Oblique":600,
Helvetica:{space:278,exclam:278,quotedbl:355,numbersign:556,dollar:556,percent:889,ampersand:667,quoteright:222,parenleft:333,parenright:333,asterisk:389,plus:584,comma:278,hyphen:333,period:278,slash:278,zero:556,one:556,two:556,three:556,four:556,five:556,six:556,seven:556,eight:556,nine:556,colon:278,semicolon:278,less:584,equal:584,greater:584,question:556,at:1015,A:667,B:667,C:722,D:722,E:667,F:611,G:778,H:722,I:278,J:500,K:667,L:556,M:833,N:722,O:778,P:667,Q:778,R:722,S:667,T:611,U:722,V:667,
W:944,X:667,Y:667,Z:611,bracketleft:278,backslash:278,bracketright:278,asciicircum:469,underscore:556,quoteleft:222,a:556,b:556,c:500,d:556,e:556,f:278,g:556,h:556,i:222,j:222,k:500,l:222,m:833,n:556,o:556,p:556,q:556,r:333,s:500,t:278,u:556,v:500,w:722,x:500,y:500,z:500,braceleft:334,bar:260,braceright:334,asciitilde:584,exclamdown:333,cent:556,sterling:556,fraction:167,yen:556,florin:556,section:556,currency:556,quotesingle:191,quotedblleft:333,guillemotleft:556,guilsinglleft:333,guilsinglright:333,
fi:500,fl:500,endash:556,dagger:556,daggerdbl:556,periodcentered:278,paragraph:537,bullet:350,quotesinglbase:222,quotedblbase:333,quotedblright:333,guillemotright:556,ellipsis:1E3,perthousand:1E3,questiondown:611,grave:333,acute:333,circumflex:333,tilde:333,macron:333,breve:333,dotaccent:333,dieresis:333,ring:333,cedilla:333,hungarumlaut:333,ogonek:333,caron:333,emdash:1E3,AE:1E3,ordfeminine:370,Lslash:556,Oslash:778,OE:1E3,ordmasculine:365,ae:889,dotlessi:278,lslash:222,oslash:611,oe:944,germandbls:611,
Idieresis:278,eacute:556,abreve:556,uhungarumlaut:556,ecaron:556,Ydieresis:667,divide:584,Yacute:667,Acircumflex:667,aacute:556,Ucircumflex:722,yacute:500,scommaaccent:500,ecircumflex:556,Uring:722,Udieresis:722,aogonek:556,Uacute:722,uogonek:556,Edieresis:667,Dcroat:722,commaaccent:250,copyright:737,Emacron:667,ccaron:500,aring:556,Ncommaaccent:722,lacute:222,agrave:556,Tcommaaccent:611,Cacute:722,atilde:556,Edotaccent:667,scaron:500,scedilla:500,iacute:278,lozenge:471,Rcaron:722,Gcommaaccent:778,
ucircumflex:556,acircumflex:556,Amacron:667,rcaron:333,ccedilla:500,Zdotaccent:611,Thorn:667,Omacron:778,Racute:722,Sacute:667,dcaron:643,Umacron:722,uring:556,threesuperior:333,Ograve:778,Agrave:667,Abreve:667,multiply:584,uacute:556,Tcaron:611,partialdiff:476,ydieresis:500,Nacute:722,icircumflex:278,Ecircumflex:667,adieresis:556,edieresis:556,cacute:500,nacute:556,umacron:556,Ncaron:722,Iacute:278,plusminus:584,brokenbar:260,registered:737,Gbreve:778,Idotaccent:278,summation:600,Egrave:667,racute:333,
omacron:556,Zacute:611,Zcaron:611,greaterequal:549,Eth:722,Ccedilla:722,lcommaaccent:222,tcaron:317,eogonek:556,Uogonek:722,Aacute:667,Adieresis:667,egrave:556,zacute:500,iogonek:222,Oacute:778,oacute:556,amacron:556,sacute:500,idieresis:278,Ocircumflex:778,Ugrave:722,Delta:612,thorn:556,twosuperior:333,Odieresis:778,mu:556,igrave:278,ohungarumlaut:556,Eogonek:667,dcroat:556,threequarters:834,Scedilla:667,lcaron:299,Kcommaaccent:667,Lacute:556,trademark:1E3,edotaccent:556,Igrave:278,Imacron:278,Lcaron:556,
onehalf:834,lessequal:549,ocircumflex:556,ntilde:556,Uhungarumlaut:722,Eacute:667,emacron:556,gbreve:556,onequarter:834,Scaron:667,Scommaaccent:667,Ohungarumlaut:778,degree:400,ograve:556,Ccaron:722,ugrave:556,radical:453,Dcaron:722,rcommaaccent:333,Ntilde:722,otilde:556,Rcommaaccent:722,Lcommaaccent:556,Atilde:667,Aogonek:667,Aring:667,Otilde:778,zdotaccent:500,Ecaron:667,Iogonek:278,kcommaaccent:500,minus:584,Icircumflex:278,ncaron:556,tcommaaccent:278,logicalnot:584,odieresis:556,udieresis:556,
notequal:549,gcommaaccent:556,eth:556,zcaron:500,ncommaaccent:556,onesuperior:333,imacron:278,Euro:556},"Helvetica-Bold":{space:278,exclam:333,quotedbl:474,numbersign:556,dollar:556,percent:889,ampersand:722,quoteright:278,parenleft:333,parenright:333,asterisk:389,plus:584,comma:278,hyphen:333,period:278,slash:278,zero:556,one:556,two:556,three:556,four:556,five:556,six:556,seven:556,eight:556,nine:556,colon:333,semicolon:333,less:584,equal:584,greater:584,question:611,at:975,A:722,B:722,C:722,D:722,
E:667,F:611,G:778,H:722,I:278,J:556,K:722,L:611,M:833,N:722,O:778,P:667,Q:778,R:722,S:667,T:611,U:722,V:667,W:944,X:667,Y:667,Z:611,bracketleft:333,backslash:278,bracketright:333,asciicircum:584,underscore:556,quoteleft:278,a:556,b:611,c:556,d:611,e:556,f:333,g:611,h:611,i:278,j:278,k:556,l:278,m:889,n:611,o:611,p:611,q:611,r:389,s:556,t:333,u:611,v:556,w:778,x:556,y:556,z:500,braceleft:389,bar:280,braceright:389,asciitilde:584,exclamdown:333,cent:556,sterling:556,fraction:167,yen:556,florin:556,
section:556,currency:556,quotesingle:238,quotedblleft:500,guillemotleft:556,guilsinglleft:333,guilsinglright:333,fi:611,fl:611,endash:556,dagger:556,daggerdbl:556,periodcentered:278,paragraph:556,bullet:350,quotesinglbase:278,quotedblbase:500,quotedblright:500,guillemotright:556,ellipsis:1E3,perthousand:1E3,questiondown:611,grave:333,acute:333,circumflex:333,tilde:333,macron:333,breve:333,dotaccent:333,dieresis:333,ring:333,cedilla:333,hungarumlaut:333,ogonek:333,caron:333,emdash:1E3,AE:1E3,ordfeminine:370,
Lslash:611,Oslash:778,OE:1E3,ordmasculine:365,ae:889,dotlessi:278,lslash:278,oslash:611,oe:944,germandbls:611,Idieresis:278,eacute:556,abreve:556,uhungarumlaut:611,ecaron:556,Ydieresis:667,divide:584,Yacute:667,Acircumflex:722,aacute:556,Ucircumflex:722,yacute:556,scommaaccent:556,ecircumflex:556,Uring:722,Udieresis:722,aogonek:556,Uacute:722,uogonek:611,Edieresis:667,Dcroat:722,commaaccent:250,copyright:737,Emacron:667,ccaron:556,aring:556,Ncommaaccent:722,lacute:278,agrave:556,Tcommaaccent:611,
Cacute:722,atilde:556,Edotaccent:667,scaron:556,scedilla:556,iacute:278,lozenge:494,Rcaron:722,Gcommaaccent:778,ucircumflex:611,acircumflex:556,Amacron:722,rcaron:389,ccedilla:556,Zdotaccent:611,Thorn:667,Omacron:778,Racute:722,Sacute:667,dcaron:743,Umacron:722,uring:611,threesuperior:333,Ograve:778,Agrave:722,Abreve:722,multiply:584,uacute:611,Tcaron:611,partialdiff:494,ydieresis:556,Nacute:722,icircumflex:278,Ecircumflex:667,adieresis:556,edieresis:556,cacute:556,nacute:611,umacron:611,Ncaron:722,
Iacute:278,plusminus:584,brokenbar:280,registered:737,Gbreve:778,Idotaccent:278,summation:600,Egrave:667,racute:389,omacron:611,Zacute:611,Zcaron:611,greaterequal:549,Eth:722,Ccedilla:722,lcommaaccent:278,tcaron:389,eogonek:556,Uogonek:722,Aacute:722,Adieresis:722,egrave:556,zacute:500,iogonek:278,Oacute:778,oacute:611,amacron:556,sacute:556,idieresis:278,Ocircumflex:778,Ugrave:722,Delta:612,thorn:611,twosuperior:333,Odieresis:778,mu:611,igrave:278,ohungarumlaut:611,Eogonek:667,dcroat:611,threequarters:834,
Scedilla:667,lcaron:400,Kcommaaccent:722,Lacute:611,trademark:1E3,edotaccent:556,Igrave:278,Imacron:278,Lcaron:611,onehalf:834,lessequal:549,ocircumflex:611,ntilde:611,Uhungarumlaut:722,Eacute:667,emacron:556,gbreve:611,onequarter:834,Scaron:667,Scommaaccent:667,Ohungarumlaut:778,degree:400,ograve:611,Ccaron:722,ugrave:611,radical:549,Dcaron:722,rcommaaccent:389,Ntilde:722,otilde:611,Rcommaaccent:722,Lcommaaccent:611,Atilde:722,Aogonek:722,Aring:722,Otilde:778,zdotaccent:500,Ecaron:667,Iogonek:278,
kcommaaccent:556,minus:584,Icircumflex:278,ncaron:611,tcommaaccent:333,logicalnot:584,odieresis:611,udieresis:611,notequal:549,gcommaaccent:611,eth:611,zcaron:500,ncommaaccent:611,onesuperior:333,imacron:278,Euro:556},"Helvetica-BoldOblique":{space:278,exclam:333,quotedbl:474,numbersign:556,dollar:556,percent:889,ampersand:722,quoteright:278,parenleft:333,parenright:333,asterisk:389,plus:584,comma:278,hyphen:333,period:278,slash:278,zero:556,one:556,two:556,three:556,four:556,five:556,six:556,seven:556,
eight:556,nine:556,colon:333,semicolon:333,less:584,equal:584,greater:584,question:611,at:975,A:722,B:722,C:722,D:722,E:667,F:611,G:778,H:722,I:278,J:556,K:722,L:611,M:833,N:722,O:778,P:667,Q:778,R:722,S:667,T:611,U:722,V:667,W:944,X:667,Y:667,Z:611,bracketleft:333,backslash:278,bracketright:333,asciicircum:584,underscore:556,quoteleft:278,a:556,b:611,c:556,d:611,e:556,f:333,g:611,h:611,i:278,j:278,k:556,l:278,m:889,n:611,o:611,p:611,q:611,r:389,s:556,t:333,u:611,v:556,w:778,x:556,y:556,z:500,braceleft:389,
bar:280,braceright:389,asciitilde:584,exclamdown:333,cent:556,sterling:556,fraction:167,yen:556,florin:556,section:556,currency:556,quotesingle:238,quotedblleft:500,guillemotleft:556,guilsinglleft:333,guilsinglright:333,fi:611,fl:611,endash:556,dagger:556,daggerdbl:556,periodcentered:278,paragraph:556,bullet:350,quotesinglbase:278,quotedblbase:500,quotedblright:500,guillemotright:556,ellipsis:1E3,perthousand:1E3,questiondown:611,grave:333,acute:333,circumflex:333,tilde:333,macron:333,breve:333,dotaccent:333,
dieresis:333,ring:333,cedilla:333,hungarumlaut:333,ogonek:333,caron:333,emdash:1E3,AE:1E3,ordfeminine:370,Lslash:611,Oslash:778,OE:1E3,ordmasculine:365,ae:889,dotlessi:278,lslash:278,oslash:611,oe:944,germandbls:611,Idieresis:278,eacute:556,abreve:556,uhungarumlaut:611,ecaron:556,Ydieresis:667,divide:584,Yacute:667,Acircumflex:722,aacute:556,Ucircumflex:722,yacute:556,scommaaccent:556,ecircumflex:556,Uring:722,Udieresis:722,aogonek:556,Uacute:722,uogonek:611,Edieresis:667,Dcroat:722,commaaccent:250,
copyright:737,Emacron:667,ccaron:556,aring:556,Ncommaaccent:722,lacute:278,agrave:556,Tcommaaccent:611,Cacute:722,atilde:556,Edotaccent:667,scaron:556,scedilla:556,iacute:278,lozenge:494,Rcaron:722,Gcommaaccent:778,ucircumflex:611,acircumflex:556,Amacron:722,rcaron:389,ccedilla:556,Zdotaccent:611,Thorn:667,Omacron:778,Racute:722,Sacute:667,dcaron:743,Umacron:722,uring:611,threesuperior:333,Ograve:778,Agrave:722,Abreve:722,multiply:584,uacute:611,Tcaron:611,partialdiff:494,ydieresis:556,Nacute:722,
icircumflex:278,Ecircumflex:667,adieresis:556,edieresis:556,cacute:556,nacute:611,umacron:611,Ncaron:722,Iacute:278,plusminus:584,brokenbar:280,registered:737,Gbreve:778,Idotaccent:278,summation:600,Egrave:667,racute:389,omacron:611,Zacute:611,Zcaron:611,greaterequal:549,Eth:722,Ccedilla:722,lcommaaccent:278,tcaron:389,eogonek:556,Uogonek:722,Aacute:722,Adieresis:722,egrave:556,zacute:500,iogonek:278,Oacute:778,oacute:611,amacron:556,sacute:556,idieresis:278,Ocircumflex:778,Ugrave:722,Delta:612,thorn:611,
twosuperior:333,Odieresis:778,mu:611,igrave:278,ohungarumlaut:611,Eogonek:667,dcroat:611,threequarters:834,Scedilla:667,lcaron:400,Kcommaaccent:722,Lacute:611,trademark:1E3,edotaccent:556,Igrave:278,Imacron:278,Lcaron:611,onehalf:834,lessequal:549,ocircumflex:611,ntilde:611,Uhungarumlaut:722,Eacute:667,emacron:556,gbreve:611,onequarter:834,Scaron:667,Scommaaccent:667,Ohungarumlaut:778,degree:400,ograve:611,Ccaron:722,ugrave:611,radical:549,Dcaron:722,rcommaaccent:389,Ntilde:722,otilde:611,Rcommaaccent:722,
Lcommaaccent:611,Atilde:722,Aogonek:722,Aring:722,Otilde:778,zdotaccent:500,Ecaron:667,Iogonek:278,kcommaaccent:556,minus:584,Icircumflex:278,ncaron:611,tcommaaccent:333,logicalnot:584,odieresis:611,udieresis:611,notequal:549,gcommaaccent:611,eth:611,zcaron:500,ncommaaccent:611,onesuperior:333,imacron:278,Euro:556},"Helvetica-Oblique":{space:278,exclam:278,quotedbl:355,numbersign:556,dollar:556,percent:889,ampersand:667,quoteright:222,parenleft:333,parenright:333,asterisk:389,plus:584,comma:278,hyphen:333,
period:278,slash:278,zero:556,one:556,two:556,three:556,four:556,five:556,six:556,seven:556,eight:556,nine:556,colon:278,semicolon:278,less:584,equal:584,greater:584,question:556,at:1015,A:667,B:667,C:722,D:722,E:667,F:611,G:778,H:722,I:278,J:500,K:667,L:556,M:833,N:722,O:778,P:667,Q:778,R:722,S:667,T:611,U:722,V:667,W:944,X:667,Y:667,Z:611,bracketleft:278,backslash:278,bracketright:278,asciicircum:469,underscore:556,quoteleft:222,a:556,b:556,c:500,d:556,e:556,f:278,g:556,h:556,i:222,j:222,k:500,
l:222,m:833,n:556,o:556,p:556,q:556,r:333,s:500,t:278,u:556,v:500,w:722,x:500,y:500,z:500,braceleft:334,bar:260,braceright:334,asciitilde:584,exclamdown:333,cent:556,sterling:556,fraction:167,yen:556,florin:556,section:556,currency:556,quotesingle:191,quotedblleft:333,guillemotleft:556,guilsinglleft:333,guilsinglright:333,fi:500,fl:500,endash:556,dagger:556,daggerdbl:556,periodcentered:278,paragraph:537,bullet:350,quotesinglbase:222,quotedblbase:333,quotedblright:333,guillemotright:556,ellipsis:1E3,
perthousand:1E3,questiondown:611,grave:333,acute:333,circumflex:333,tilde:333,macron:333,breve:333,dotaccent:333,dieresis:333,ring:333,cedilla:333,hungarumlaut:333,ogonek:333,caron:333,emdash:1E3,AE:1E3,ordfeminine:370,Lslash:556,Oslash:778,OE:1E3,ordmasculine:365,ae:889,dotlessi:278,lslash:222,oslash:611,oe:944,germandbls:611,Idieresis:278,eacute:556,abreve:556,uhungarumlaut:556,ecaron:556,Ydieresis:667,divide:584,Yacute:667,Acircumflex:667,aacute:556,Ucircumflex:722,yacute:500,scommaaccent:500,
ecircumflex:556,Uring:722,Udieresis:722,aogonek:556,Uacute:722,uogonek:556,Edieresis:667,Dcroat:722,commaaccent:250,copyright:737,Emacron:667,ccaron:500,aring:556,Ncommaaccent:722,lacute:222,agrave:556,Tcommaaccent:611,Cacute:722,atilde:556,Edotaccent:667,scaron:500,scedilla:500,iacute:278,lozenge:471,Rcaron:722,Gcommaaccent:778,ucircumflex:556,acircumflex:556,Amacron:667,rcaron:333,ccedilla:500,Zdotaccent:611,Thorn:667,Omacron:778,Racute:722,Sacute:667,dcaron:643,Umacron:722,uring:556,threesuperior:333,
Ograve:778,Agrave:667,Abreve:667,multiply:584,uacute:556,Tcaron:611,partialdiff:476,ydieresis:500,Nacute:722,icircumflex:278,Ecircumflex:667,adieresis:556,edieresis:556,cacute:500,nacute:556,umacron:556,Ncaron:722,Iacute:278,plusminus:584,brokenbar:260,registered:737,Gbreve:778,Idotaccent:278,summation:600,Egrave:667,racute:333,omacron:556,Zacute:611,Zcaron:611,greaterequal:549,Eth:722,Ccedilla:722,lcommaaccent:222,tcaron:317,eogonek:556,Uogonek:722,Aacute:667,Adieresis:667,egrave:556,zacute:500,
iogonek:222,Oacute:778,oacute:556,amacron:556,sacute:500,idieresis:278,Ocircumflex:778,Ugrave:722,Delta:612,thorn:556,twosuperior:333,Odieresis:778,mu:556,igrave:278,ohungarumlaut:556,Eogonek:667,dcroat:556,threequarters:834,Scedilla:667,lcaron:299,Kcommaaccent:667,Lacute:556,trademark:1E3,edotaccent:556,Igrave:278,Imacron:278,Lcaron:556,onehalf:834,lessequal:549,ocircumflex:556,ntilde:556,Uhungarumlaut:722,Eacute:667,emacron:556,gbreve:556,onequarter:834,Scaron:667,Scommaaccent:667,Ohungarumlaut:778,
degree:400,ograve:556,Ccaron:722,ugrave:556,radical:453,Dcaron:722,rcommaaccent:333,Ntilde:722,otilde:556,Rcommaaccent:722,Lcommaaccent:556,Atilde:667,Aogonek:667,Aring:667,Otilde:778,zdotaccent:500,Ecaron:667,Iogonek:278,kcommaaccent:500,minus:584,Icircumflex:278,ncaron:556,tcommaaccent:278,logicalnot:584,odieresis:556,udieresis:556,notequal:549,gcommaaccent:556,eth:556,zcaron:500,ncommaaccent:556,onesuperior:333,imacron:278,Euro:556},Symbol:{space:250,exclam:333,universal:713,numbersign:500,existential:549,
percent:833,ampersand:778,suchthat:439,parenleft:333,parenright:333,asteriskmath:500,plus:549,comma:250,minus:549,period:250,slash:278,zero:500,one:500,two:500,three:500,four:500,five:500,six:500,seven:500,eight:500,nine:500,colon:278,semicolon:278,less:549,equal:549,greater:549,question:444,congruent:549,Alpha:722,Beta:667,Chi:722,Delta:612,Epsilon:611,Phi:763,Gamma:603,Eta:722,Iota:333,theta1:631,Kappa:722,Lambda:686,Mu:889,Nu:722,Omicron:722,Pi:768,Theta:741,Rho:556,Sigma:592,Tau:611,Upsilon:690,
sigma1:439,Omega:768,Xi:645,Psi:795,Zeta:611,bracketleft:333,therefore:863,bracketright:333,perpendicular:658,underscore:500,radicalex:500,alpha:631,beta:549,chi:549,delta:494,epsilon:439,phi:521,gamma:411,eta:603,iota:329,phi1:603,kappa:549,lambda:549,mu:576,nu:521,omicron:549,pi:549,theta:521,rho:549,sigma:603,tau:439,upsilon:576,omega1:713,omega:686,xi:493,psi:686,zeta:494,braceleft:480,bar:200,braceright:480,similar:549,Euro:750,Upsilon1:620,minute:247,lessequal:549,fraction:167,infinity:713,
florin:500,club:753,diamond:753,heart:753,spade:753,arrowboth:1042,arrowleft:987,arrowup:603,arrowright:987,arrowdown:603,degree:400,plusminus:549,second:411,greaterequal:549,multiply:549,proportional:713,partialdiff:494,bullet:460,divide:549,notequal:549,equivalence:549,approxequal:549,ellipsis:1E3,arrowvertex:603,arrowhorizex:1E3,carriagereturn:658,aleph:823,Ifraktur:686,Rfraktur:795,weierstrass:987,circlemultiply:768,circleplus:768,emptyset:823,intersection:768,union:768,propersuperset:713,reflexsuperset:713,
notsubset:713,propersubset:713,reflexsubset:713,element:713,notelement:713,angle:768,gradient:713,registerserif:790,copyrightserif:790,trademarkserif:890,product:823,radical:549,dotmath:250,logicalnot:713,logicaland:603,logicalor:603,arrowdblboth:1042,arrowdblleft:987,arrowdblup:603,arrowdblright:987,arrowdbldown:603,lozenge:494,angleleft:329,registersans:790,copyrightsans:790,trademarksans:786,summation:713,parenlefttp:384,parenleftex:384,parenleftbt:384,bracketlefttp:384,bracketleftex:384,bracketleftbt:384,
bracelefttp:494,braceleftmid:494,braceleftbt:494,braceex:494,angleright:329,integral:274,integraltp:686,integralex:686,integralbt:686,parenrighttp:384,parenrightex:384,parenrightbt:384,bracketrighttp:384,bracketrightex:384,bracketrightbt:384,bracerighttp:494,bracerightmid:494,bracerightbt:494,apple:790},"Times-Roman":{space:250,exclam:333,quotedbl:408,numbersign:500,dollar:500,percent:833,ampersand:778,quoteright:333,parenleft:333,parenright:333,asterisk:500,plus:564,comma:250,hyphen:333,period:250,
slash:278,zero:500,one:500,two:500,three:500,four:500,five:500,six:500,seven:500,eight:500,nine:500,colon:278,semicolon:278,less:564,equal:564,greater:564,question:444,at:921,A:722,B:667,C:667,D:722,E:611,F:556,G:722,H:722,I:333,J:389,K:722,L:611,M:889,N:722,O:722,P:556,Q:722,R:667,S:556,T:611,U:722,V:722,W:944,X:722,Y:722,Z:611,bracketleft:333,backslash:278,bracketright:333,asciicircum:469,underscore:500,quoteleft:333,a:444,b:500,c:444,d:500,e:444,f:333,g:500,h:500,i:278,j:278,k:500,l:278,m:778,
n:500,o:500,p:500,q:500,r:333,s:389,t:278,u:500,v:500,w:722,x:500,y:500,z:444,braceleft:480,bar:200,braceright:480,asciitilde:541,exclamdown:333,cent:500,sterling:500,fraction:167,yen:500,florin:500,section:500,currency:500,quotesingle:180,quotedblleft:444,guillemotleft:500,guilsinglleft:333,guilsinglright:333,fi:556,fl:556,endash:500,dagger:500,daggerdbl:500,periodcentered:250,paragraph:453,bullet:350,quotesinglbase:333,quotedblbase:444,quotedblright:444,guillemotright:500,ellipsis:1E3,perthousand:1E3,
questiondown:444,grave:333,acute:333,circumflex:333,tilde:333,macron:333,breve:333,dotaccent:333,dieresis:333,ring:333,cedilla:333,hungarumlaut:333,ogonek:333,caron:333,emdash:1E3,AE:889,ordfeminine:276,Lslash:611,Oslash:722,OE:889,ordmasculine:310,ae:667,dotlessi:278,lslash:278,oslash:500,oe:722,germandbls:500,Idieresis:333,eacute:444,abreve:444,uhungarumlaut:500,ecaron:444,Ydieresis:722,divide:564,Yacute:722,Acircumflex:722,aacute:444,Ucircumflex:722,yacute:500,scommaaccent:389,ecircumflex:444,
Uring:722,Udieresis:722,aogonek:444,Uacute:722,uogonek:500,Edieresis:611,Dcroat:722,commaaccent:250,copyright:760,Emacron:611,ccaron:444,aring:444,Ncommaaccent:722,lacute:278,agrave:444,Tcommaaccent:611,Cacute:667,atilde:444,Edotaccent:611,scaron:389,scedilla:389,iacute:278,lozenge:471,Rcaron:667,Gcommaaccent:722,ucircumflex:500,acircumflex:444,Amacron:722,rcaron:333,ccedilla:444,Zdotaccent:611,Thorn:556,Omacron:722,Racute:667,Sacute:556,dcaron:588,Umacron:722,uring:500,threesuperior:300,Ograve:722,
Agrave:722,Abreve:722,multiply:564,uacute:500,Tcaron:611,partialdiff:476,ydieresis:500,Nacute:722,icircumflex:278,Ecircumflex:611,adieresis:444,edieresis:444,cacute:444,nacute:500,umacron:500,Ncaron:722,Iacute:333,plusminus:564,brokenbar:200,registered:760,Gbreve:722,Idotaccent:333,summation:600,Egrave:611,racute:333,omacron:500,Zacute:611,Zcaron:611,greaterequal:549,Eth:722,Ccedilla:667,lcommaaccent:278,tcaron:326,eogonek:444,Uogonek:722,Aacute:722,Adieresis:722,egrave:444,zacute:444,iogonek:278,
Oacute:722,oacute:500,amacron:444,sacute:389,idieresis:278,Ocircumflex:722,Ugrave:722,Delta:612,thorn:500,twosuperior:300,Odieresis:722,mu:500,igrave:278,ohungarumlaut:500,Eogonek:611,dcroat:500,threequarters:750,Scedilla:556,lcaron:344,Kcommaaccent:722,Lacute:611,trademark:980,edotaccent:444,Igrave:333,Imacron:333,Lcaron:611,onehalf:750,lessequal:549,ocircumflex:500,ntilde:500,Uhungarumlaut:722,Eacute:611,emacron:444,gbreve:500,onequarter:750,Scaron:556,Scommaaccent:556,Ohungarumlaut:722,degree:400,
ograve:500,Ccaron:667,ugrave:500,radical:453,Dcaron:722,rcommaaccent:333,Ntilde:722,otilde:500,Rcommaaccent:667,Lcommaaccent:611,Atilde:722,Aogonek:722,Aring:722,Otilde:722,zdotaccent:444,Ecaron:611,Iogonek:333,kcommaaccent:500,minus:564,Icircumflex:333,ncaron:500,tcommaaccent:278,logicalnot:564,odieresis:500,udieresis:500,notequal:549,gcommaaccent:500,eth:500,zcaron:444,ncommaaccent:500,onesuperior:300,imacron:278,Euro:500},"Times-Bold":{space:250,exclam:333,quotedbl:555,numbersign:500,dollar:500,
percent:1E3,ampersand:833,quoteright:333,parenleft:333,parenright:333,asterisk:500,plus:570,comma:250,hyphen:333,period:250,slash:278,zero:500,one:500,two:500,three:500,four:500,five:500,six:500,seven:500,eight:500,nine:500,colon:333,semicolon:333,less:570,equal:570,greater:570,question:500,at:930,A:722,B:667,C:722,D:722,E:667,F:611,G:778,H:778,I:389,J:500,K:778,L:667,M:944,N:722,O:778,P:611,Q:778,R:722,S:556,T:667,U:722,V:722,W:1E3,X:722,Y:722,Z:667,bracketleft:333,backslash:278,bracketright:333,
asciicircum:581,underscore:500,quoteleft:333,a:500,b:556,c:444,d:556,e:444,f:333,g:500,h:556,i:278,j:333,k:556,l:278,m:833,n:556,o:500,p:556,q:556,r:444,s:389,t:333,u:556,v:500,w:722,x:500,y:500,z:444,braceleft:394,bar:220,braceright:394,asciitilde:520,exclamdown:333,cent:500,sterling:500,fraction:167,yen:500,florin:500,section:500,currency:500,quotesingle:278,quotedblleft:500,guillemotleft:500,guilsinglleft:333,guilsinglright:333,fi:556,fl:556,endash:500,dagger:500,daggerdbl:500,periodcentered:250,
paragraph:540,bullet:350,quotesinglbase:333,quotedblbase:500,quotedblright:500,guillemotright:500,ellipsis:1E3,perthousand:1E3,questiondown:500,grave:333,acute:333,circumflex:333,tilde:333,macron:333,breve:333,dotaccent:333,dieresis:333,ring:333,cedilla:333,hungarumlaut:333,ogonek:333,caron:333,emdash:1E3,AE:1E3,ordfeminine:300,Lslash:667,Oslash:778,OE:1E3,ordmasculine:330,ae:722,dotlessi:278,lslash:278,oslash:500,oe:722,germandbls:556,Idieresis:389,eacute:444,abreve:500,uhungarumlaut:556,ecaron:444,
Ydieresis:722,divide:570,Yacute:722,Acircumflex:722,aacute:500,Ucircumflex:722,yacute:500,scommaaccent:389,ecircumflex:444,Uring:722,Udieresis:722,aogonek:500,Uacute:722,uogonek:556,Edieresis:667,Dcroat:722,commaaccent:250,copyright:747,Emacron:667,ccaron:444,aring:500,Ncommaaccent:722,lacute:278,agrave:500,Tcommaaccent:667,Cacute:722,atilde:500,Edotaccent:667,scaron:389,scedilla:389,iacute:278,lozenge:494,Rcaron:722,Gcommaaccent:778,ucircumflex:556,acircumflex:500,Amacron:722,rcaron:444,ccedilla:444,
Zdotaccent:667,Thorn:611,Omacron:778,Racute:722,Sacute:556,dcaron:672,Umacron:722,uring:556,threesuperior:300,Ograve:778,Agrave:722,Abreve:722,multiply:570,uacute:556,Tcaron:667,partialdiff:494,ydieresis:500,Nacute:722,icircumflex:278,Ecircumflex:667,adieresis:500,edieresis:444,cacute:444,nacute:556,umacron:556,Ncaron:722,Iacute:389,plusminus:570,brokenbar:220,registered:747,Gbreve:778,Idotaccent:389,summation:600,Egrave:667,racute:444,omacron:500,Zacute:667,Zcaron:667,greaterequal:549,Eth:722,Ccedilla:722,
lcommaaccent:278,tcaron:416,eogonek:444,Uogonek:722,Aacute:722,Adieresis:722,egrave:444,zacute:444,iogonek:278,Oacute:778,oacute:500,amacron:500,sacute:389,idieresis:278,Ocircumflex:778,Ugrave:722,Delta:612,thorn:556,twosuperior:300,Odieresis:778,mu:556,igrave:278,ohungarumlaut:500,Eogonek:667,dcroat:556,threequarters:750,Scedilla:556,lcaron:394,Kcommaaccent:778,Lacute:667,trademark:1E3,edotaccent:444,Igrave:389,Imacron:389,Lcaron:667,onehalf:750,lessequal:549,ocircumflex:500,ntilde:556,Uhungarumlaut:722,
Eacute:667,emacron:444,gbreve:500,onequarter:750,Scaron:556,Scommaaccent:556,Ohungarumlaut:778,degree:400,ograve:500,Ccaron:722,ugrave:556,radical:549,Dcaron:722,rcommaaccent:444,Ntilde:722,otilde:500,Rcommaaccent:722,Lcommaaccent:667,Atilde:722,Aogonek:722,Aring:722,Otilde:778,zdotaccent:444,Ecaron:667,Iogonek:389,kcommaaccent:556,minus:570,Icircumflex:389,ncaron:556,tcommaaccent:333,logicalnot:570,odieresis:500,udieresis:556,notequal:549,gcommaaccent:500,eth:500,zcaron:444,ncommaaccent:556,onesuperior:300,
imacron:278,Euro:500},"Times-BoldItalic":{space:250,exclam:389,quotedbl:555,numbersign:500,dollar:500,percent:833,ampersand:778,quoteright:333,parenleft:333,parenright:333,asterisk:500,plus:570,comma:250,hyphen:333,period:250,slash:278,zero:500,one:500,two:500,three:500,four:500,five:500,six:500,seven:500,eight:500,nine:500,colon:333,semicolon:333,less:570,equal:570,greater:570,question:500,at:832,A:667,B:667,C:667,D:722,E:667,F:667,G:722,H:778,I:389,J:500,K:667,L:611,M:889,N:722,O:722,P:611,Q:722,
R:667,S:556,T:611,U:722,V:667,W:889,X:667,Y:611,Z:611,bracketleft:333,backslash:278,bracketright:333,asciicircum:570,underscore:500,quoteleft:333,a:500,b:500,c:444,d:500,e:444,f:333,g:500,h:556,i:278,j:278,k:500,l:278,m:778,n:556,o:500,p:500,q:500,r:389,s:389,t:278,u:556,v:444,w:667,x:500,y:444,z:389,braceleft:348,bar:220,braceright:348,asciitilde:570,exclamdown:389,cent:500,sterling:500,fraction:167,yen:500,florin:500,section:500,currency:500,quotesingle:278,quotedblleft:500,guillemotleft:500,guilsinglleft:333,
guilsinglright:333,fi:556,fl:556,endash:500,dagger:500,daggerdbl:500,periodcentered:250,paragraph:500,bullet:350,quotesinglbase:333,quotedblbase:500,quotedblright:500,guillemotright:500,ellipsis:1E3,perthousand:1E3,questiondown:500,grave:333,acute:333,circumflex:333,tilde:333,macron:333,breve:333,dotaccent:333,dieresis:333,ring:333,cedilla:333,hungarumlaut:333,ogonek:333,caron:333,emdash:1E3,AE:944,ordfeminine:266,Lslash:611,Oslash:722,OE:944,ordmasculine:300,ae:722,dotlessi:278,lslash:278,oslash:500,
oe:722,germandbls:500,Idieresis:389,eacute:444,abreve:500,uhungarumlaut:556,ecaron:444,Ydieresis:611,divide:570,Yacute:611,Acircumflex:667,aacute:500,Ucircumflex:722,yacute:444,scommaaccent:389,ecircumflex:444,Uring:722,Udieresis:722,aogonek:500,Uacute:722,uogonek:556,Edieresis:667,Dcroat:722,commaaccent:250,copyright:747,Emacron:667,ccaron:444,aring:500,Ncommaaccent:722,lacute:278,agrave:500,Tcommaaccent:611,Cacute:667,atilde:500,Edotaccent:667,scaron:389,scedilla:389,iacute:278,lozenge:494,Rcaron:667,
Gcommaaccent:722,ucircumflex:556,acircumflex:500,Amacron:667,rcaron:389,ccedilla:444,Zdotaccent:611,Thorn:611,Omacron:722,Racute:667,Sacute:556,dcaron:608,Umacron:722,uring:556,threesuperior:300,Ograve:722,Agrave:667,Abreve:667,multiply:570,uacute:556,Tcaron:611,partialdiff:494,ydieresis:444,Nacute:722,icircumflex:278,Ecircumflex:667,adieresis:500,edieresis:444,cacute:444,nacute:556,umacron:556,Ncaron:722,Iacute:389,plusminus:570,brokenbar:220,registered:747,Gbreve:722,Idotaccent:389,summation:600,
Egrave:667,racute:389,omacron:500,Zacute:611,Zcaron:611,greaterequal:549,Eth:722,Ccedilla:667,lcommaaccent:278,tcaron:366,eogonek:444,Uogonek:722,Aacute:667,Adieresis:667,egrave:444,zacute:389,iogonek:278,Oacute:722,oacute:500,amacron:500,sacute:389,idieresis:278,Ocircumflex:722,Ugrave:722,Delta:612,thorn:500,twosuperior:300,Odieresis:722,mu:576,igrave:278,ohungarumlaut:500,Eogonek:667,dcroat:500,threequarters:750,Scedilla:556,lcaron:382,Kcommaaccent:667,Lacute:611,trademark:1E3,edotaccent:444,Igrave:389,
Imacron:389,Lcaron:611,onehalf:750,lessequal:549,ocircumflex:500,ntilde:556,Uhungarumlaut:722,Eacute:667,emacron:444,gbreve:500,onequarter:750,Scaron:556,Scommaaccent:556,Ohungarumlaut:722,degree:400,ograve:500,Ccaron:667,ugrave:556,radical:549,Dcaron:722,rcommaaccent:389,Ntilde:722,otilde:500,Rcommaaccent:667,Lcommaaccent:611,Atilde:667,Aogonek:667,Aring:667,Otilde:722,zdotaccent:389,Ecaron:667,Iogonek:389,kcommaaccent:500,minus:606,Icircumflex:389,ncaron:556,tcommaaccent:278,logicalnot:606,odieresis:500,
udieresis:556,notequal:549,gcommaaccent:500,eth:500,zcaron:389,ncommaaccent:556,onesuperior:300,imacron:278,Euro:500},"Times-Italic":{space:250,exclam:333,quotedbl:420,numbersign:500,dollar:500,percent:833,ampersand:778,quoteright:333,parenleft:333,parenright:333,asterisk:500,plus:675,comma:250,hyphen:333,period:250,slash:278,zero:500,one:500,two:500,three:500,four:500,five:500,six:500,seven:500,eight:500,nine:500,colon:333,semicolon:333,less:675,equal:675,greater:675,question:500,at:920,A:611,B:611,
C:667,D:722,E:611,F:611,G:722,H:722,I:333,J:444,K:667,L:556,M:833,N:667,O:722,P:611,Q:722,R:611,S:500,T:556,U:722,V:611,W:833,X:611,Y:556,Z:556,bracketleft:389,backslash:278,bracketright:389,asciicircum:422,underscore:500,quoteleft:333,a:500,b:500,c:444,d:500,e:444,f:278,g:500,h:500,i:278,j:278,k:444,l:278,m:722,n:500,o:500,p:500,q:500,r:389,s:389,t:278,u:500,v:444,w:667,x:444,y:444,z:389,braceleft:400,bar:275,braceright:400,asciitilde:541,exclamdown:389,cent:500,sterling:500,fraction:167,yen:500,
florin:500,section:500,currency:500,quotesingle:214,quotedblleft:556,guillemotleft:500,guilsinglleft:333,guilsinglright:333,fi:500,fl:500,endash:500,dagger:500,daggerdbl:500,periodcentered:250,paragraph:523,bullet:350,quotesinglbase:333,quotedblbase:556,quotedblright:556,guillemotright:500,ellipsis:889,perthousand:1E3,questiondown:500,grave:333,acute:333,circumflex:333,tilde:333,macron:333,breve:333,dotaccent:333,dieresis:333,ring:333,cedilla:333,hungarumlaut:333,ogonek:333,caron:333,emdash:889,AE:889,
ordfeminine:276,Lslash:556,Oslash:722,OE:944,ordmasculine:310,ae:667,dotlessi:278,lslash:278,oslash:500,oe:667,germandbls:500,Idieresis:333,eacute:444,abreve:500,uhungarumlaut:500,ecaron:444,Ydieresis:556,divide:675,Yacute:556,Acircumflex:611,aacute:500,Ucircumflex:722,yacute:444,scommaaccent:389,ecircumflex:444,Uring:722,Udieresis:722,aogonek:500,Uacute:722,uogonek:500,Edieresis:611,Dcroat:722,commaaccent:250,copyright:760,Emacron:611,ccaron:444,aring:500,Ncommaaccent:667,lacute:278,agrave:500,Tcommaaccent:556,
Cacute:667,atilde:500,Edotaccent:611,scaron:389,scedilla:389,iacute:278,lozenge:471,Rcaron:611,Gcommaaccent:722,ucircumflex:500,acircumflex:500,Amacron:611,rcaron:389,ccedilla:444,Zdotaccent:556,Thorn:611,Omacron:722,Racute:611,Sacute:500,dcaron:544,Umacron:722,uring:500,threesuperior:300,Ograve:722,Agrave:611,Abreve:611,multiply:675,uacute:500,Tcaron:556,partialdiff:476,ydieresis:444,Nacute:667,icircumflex:278,Ecircumflex:611,adieresis:500,edieresis:444,cacute:444,nacute:500,umacron:500,Ncaron:667,
Iacute:333,plusminus:675,brokenbar:275,registered:760,Gbreve:722,Idotaccent:333,summation:600,Egrave:611,racute:389,omacron:500,Zacute:556,Zcaron:556,greaterequal:549,Eth:722,Ccedilla:667,lcommaaccent:278,tcaron:300,eogonek:444,Uogonek:722,Aacute:611,Adieresis:611,egrave:444,zacute:389,iogonek:278,Oacute:722,oacute:500,amacron:500,sacute:389,idieresis:278,Ocircumflex:722,Ugrave:722,Delta:612,thorn:500,twosuperior:300,Odieresis:722,mu:500,igrave:278,ohungarumlaut:500,Eogonek:611,dcroat:500,threequarters:750,
Scedilla:500,lcaron:300,Kcommaaccent:667,Lacute:556,trademark:980,edotaccent:444,Igrave:333,Imacron:333,Lcaron:611,onehalf:750,lessequal:549,ocircumflex:500,ntilde:500,Uhungarumlaut:722,Eacute:611,emacron:444,gbreve:500,onequarter:750,Scaron:500,Scommaaccent:500,Ohungarumlaut:722,degree:400,ograve:500,Ccaron:667,ugrave:500,radical:453,Dcaron:722,rcommaaccent:389,Ntilde:667,otilde:500,Rcommaaccent:611,Lcommaaccent:556,Atilde:611,Aogonek:611,Aring:611,Otilde:722,zdotaccent:389,Ecaron:611,Iogonek:333,
kcommaaccent:444,minus:675,Icircumflex:333,ncaron:500,tcommaaccent:278,logicalnot:675,odieresis:500,udieresis:500,notequal:549,gcommaaccent:500,eth:500,zcaron:389,ncommaaccent:500,onesuperior:300,imacron:278,Euro:500},ZapfDingbats:{space:278,a1:974,a2:961,a202:974,a3:980,a4:719,a5:789,a119:790,a118:791,a117:690,a11:960,a12:939,a13:549,a14:855,a15:911,a16:933,a105:911,a17:945,a18:974,a19:755,a20:846,a21:762,a22:761,a23:571,a24:677,a25:763,a26:760,a27:759,a28:754,a6:494,a7:552,a8:537,a9:577,a10:692,
a29:786,a30:788,a31:788,a32:790,a33:793,a34:794,a35:816,a36:823,a37:789,a38:841,a39:823,a40:833,a41:816,a42:831,a43:923,a44:744,a45:723,a46:749,a47:790,a48:792,a49:695,a50:776,a51:768,a52:792,a53:759,a54:707,a55:708,a56:682,a57:701,a58:826,a59:815,a60:789,a61:789,a62:707,a63:687,a64:696,a65:689,a66:786,a67:787,a68:713,a69:791,a70:785,a71:791,a72:873,a73:761,a74:762,a203:762,a75:759,a204:759,a76:892,a77:892,a78:788,a79:784,a81:438,a82:138,a83:277,a84:415,a97:392,a98:392,a99:668,a100:668,a89:390,a90:390,
a93:317,a94:317,a91:276,a92:276,a205:509,a85:509,a206:410,a86:410,a87:234,a88:234,a95:334,a96:334,a101:732,a102:544,a103:544,a104:910,a106:667,a107:760,a108:760,a112:776,a111:595,a110:694,a109:626,a120:788,a121:788,a122:788,a123:788,a124:788,a125:788,a126:788,a127:788,a128:788,a129:788,a130:788,a131:788,a132:788,a133:788,a134:788,a135:788,a136:788,a137:788,a138:788,a139:788,a140:788,a141:788,a142:788,a143:788,a144:788,a145:788,a146:788,a147:788,a148:788,a149:788,a150:788,a151:788,a152:788,a153:788,
a154:788,a155:788,a156:788,a157:788,a158:788,a159:788,a160:894,a161:838,a163:1016,a164:458,a196:748,a165:924,a192:748,a166:918,a167:927,a168:928,a169:928,a170:834,a171:873,a172:828,a173:924,a162:924,a174:917,a175:930,a176:931,a177:463,a178:883,a179:836,a193:836,a180:867,a199:867,a181:696,a200:696,a182:874,a201:874,a183:760,a184:946,a197:771,a185:865,a194:771,a198:888,a186:967,a195:888,a187:831,a188:873,a189:927,a190:970,a191:918}},EOF={},Parser=ParserClosure(),Lexer=LexerClosure(),Linearization=LinearizationClosure(),
JSCompiler_object_inline_AXIAL_293=2,JSCompiler_object_inline_RADIAL_294=3,Pattern=PatternClosure(),Shadings={},v5998=Shadings,v23553=RadialAxialClosure();v5998.RadialAxial=v23553;var v5999=Shadings,v23554=DummyClosure();v5999.Dummy=v23554;var TilingPattern=TilingPatternClosure(),Stream=StreamClosure();StringStreamClosure();var DecodeStream=DecodeStreamClosure();FakeStreamClosure();var StreamsSequenceStream=StreamsSequenceStreamClosure(),FlateStream=FlateStreamClosure(),PredictorStream=PredictorStreamClosure(),
JpegStream=JpegStreamClosure(),JpxStream=JpxStreamClosure(),DecryptStream=DecryptStreamClosure(),Ascii85Stream=Ascii85StreamClosure(),AsciiHexStream=AsciiHexStreamClosure(),RunLengthStream=RunLengthStreamClosure(),CCITTFaxStream=CCITTFaxStreamClosure(),LZWStream=LZWStreamClosure();MessageHandler.prototype={on:messageHandlerOn,send:messageHandlerSend};var WorkerMessageHandler={setup:wphSetup},consoleTimer={},workerConsole={log:log,error:error$$0,time:time$$0,timeEnd:timeEnd};if("undefined"===typeof PdfJS_window.window){globalScope.console=
workerConsole;var handler$$0=new MessageHandler("worker_processor",this);JAM.call(WorkerMessageHandler.setup,WorkerMessageHandler,[handler$$0])}var JpegImage=jpegImage$$0(),JpxImage=JpxImageClosure(),v6001=PDFJS,v23555=bidiClosure();v6001.bidi=v23555;var v6002=PDFJS,v23556=MetadataClosure();v6002.Metadata=v23556}function v77(name,listener){PdfJS_window.setTimeout(listener)}function v76(){return new PdfJS_window.Event}
function v75(element){if("script"===element)return Array(JAM.new(this.createElement,[element]))}function v74(name){if("canvas"===name)return new PdfJS_window.Canvas}function v73(element_type){var v6011=element_type="canvas"===element_type?new PdfJS_window.Canvas:JAM.new(PdfJS_window.Element,[element_type]),v23557=JAM.new(PdfJS_window.Element,["dummy_parent"]);v6011.parentNode=v23557;return element_type}
function v72(){function v71(){return new PdfJS_window.Context}this.getContext=v71;this.height=this.width=100;this.style={visibility:"visibile"}}
function v70(){function v69(x,y,w,h){var v6013=this.__log__;JAM.call(v6013.push,v6013,["createRect",x,y,w,h,"\n"])}function v68(m){var v6014=this.__log__;JAM.call(v6014.push,v6014,["clear",m,"\n"])}function v67(r,g,b,a){var v6015=this.__log__;JAM.call(v6015.push,v6015,["clearColor",r,g,b,a,"\n"])}function v66(param){var v6016=this.__log__;JAM.call(v6016.push,v6016,["depthFunc",param,"\n"])}function v65(){var v6017=this.__log__;JAM.call(v6017.push,v6017,["disable","\n"])}function v64(){var v6018=this.__log__;
JAM.call(v6018.push,v6018,["enable","\n"])}function v63(name){var v6019=this.__log__;JAM.call(v6019.push,v6019,["getParameter",name,"\n"]);return null}function v62(image,x,y){image=this.__log__;JAM.call(image.push,image,["drawImage","<elem>",x,y,"\n"])}function v61(data,x,y){data=this.__log__;JAM.call(data.push,data,["putImageData","{...}",x,y,"\n"])}function v60(x,y,w,h){var v6022=this.__log__;JAM.call(v6022.push,v6022,["getImageData",x,y,w,h,"\n"]);return{data:[]}}function v59(s,x,y,w){w=this.__log__;
JAM.call(w.push,w,["strokeText",s,x,y,"\n"])}function v58(s,x,y,w){w=this.__log__;JAM.call(w.push,w,["fillText",s,x,y,"\n"])}function v57(x,y,w,h){var v6025=this.__log__;JAM.call(v6025.push,v6025,["fillRect",x,y,w,h,"\n"])}function v56(x,y){var v6026=this.__log__;JAM.call(v6026.push,v6026,["lineTo",x,y,"\n"])}function v55(x,y){var v6027=this.__log__;JAM.call(v6027.push,v6027,["moveTo",x,y,"\n"])}function v54(){var v6028=this.__log__;JAM.call(v6028.push,v6028,["closePath","\n"])}function v53(){var v6029=
this.__log__;JAM.call(v6029.push,v6029,["beginPath","\n"])}function v52(){var v6030=this.__log__;JAM.call(v6030.push,v6030,["stroke","\n"])}function v51(){var v6031=this.__log__;JAM.call(v6031.push,v6031,["fill","\n"])}function v50(){var v6032=this.__log__;JAM.call(v6032.push,v6032,["clip","\n"])}function v49(x,y,w,h){var v6033=this.__log__;JAM.call(v6033.push,v6033,["rect",x,y,w,h,"\n"])}function v48(x,y){var v6034=this.__log__;JAM.call(v6034.push,v6034,["scale",x,y,"\n"])}function v47(x,y){var v6035=
this.__log__;JAM.call(v6035.push,v6035,["translate",x,y,"\n"])}function v46(a,b,c,d,e,f){var v6036=this.__log__;JAM.call(v6036.push,v6036,["transform",a,b,c,d,e,f,"\n"])}function v45(){var v6037=this.__log__;JAM.call(v6037.push,v6037,["restore","\n"])}function v44(){var v6038=this.__log__;JAM.call(v6038.push,v6038,["save","\n"])}this.__log__=[];this.save=v44;this.restore=v45;this.transform=v46;this.translate=v47;this.scale=v48;this.rect=v49;this.clip=v50;this.fill=v51;this.stroke=v52;this.beginPath=
v53;this.closePath=v54;this.moveTo=v55;this.lineTo=v56;this.fillRect=v57;this.fillText=v58;this.strokeText=v59;this.getImageData=v60;this.putImageData=v61;this.drawImage=v62;this.getParameter=v63;this.enable=v64;this.disable=v65;this.depthFunc=v66;this.clearColor=v67;this.clear=v68;this.clearRect=v69}
function v43(type){function v42(){}function v41(){}function v40(){}function v39(name){function v38(){}if("head"===name)return[{appendChild:v38}]}function v37(event){var v6041=this.__listeners__;JAM.call(JAM.get(v6041,event.name,JAM.policy.p1),v6041,[event])}function v36(name){delete this.__listeners__[name]}function v35(name,listener){JAM.set(this.__listeners__,name,listener)}function v34(){}this.__listeners__={};this.element_type=type;this.insertBefore=v34;this.addEventListener=v35;this.removeEventListener=
v36;this.dispatchEvent=v37;this.getElementsByTagName=v39;this.appendChild=v40;this.setAttribute=v41;this.sheet={cssRules:[],insertRule:v42}}function v33(){function v32(name){this.name=name}this.initEvent=v32}function v31(s){}
function v30(){function v29(){var v6045=PdfJS_window.__resources__,v6046=this.url;introspect(JAM.policy.p1)this.response=v6045[v6046];this.readyState=4;this.status=0;this.onreadystatechange()}function v28(){}function v27(type,url,some_bool){this.url=url}this.open=v27;this.overrideMimeType=v28;this.send=v29}
function v26(data){for(var result="",i=0,v6057=i<data.length;v6057;){var v6057=PdfJS_window.__from64__,v20857=i,i=i+1,v6057=v6057.indexOf(data.charAt(v20857)),v20857=PdfJS_window.__from64__,v20858=i,i=i+1,v20857=v20857.indexOf(data.charAt(v20858)),v20858=PdfJS_window.__from64__,v20859=i,i=i+1,v20858=v20858.indexOf(data.charAt(v20859)),v20859=PdfJS_window.__from64__,v20860=i,i=i+1,v20859=v20859.indexOf(data.charAt(v20860)),result=result+String.fromCharCode(v6057<<2|v20857>>4);64!=v20858&&(result+=
String.fromCharCode((v20857&15)<<4|v20858>>2),64!=v20859&&(result+=String.fromCharCode((v20858&3)<<6|v20859)));v6057=i<data.length}return result}
function v25(data){var result="";if(0<data.length)for(var i=0,v6063=i<data.length;v6063;){var v6063=i,i=i+1,b1=data.charCodeAt(v6063)&255,v6063=i,i=i+1,v6063=v6063<data.length?i-1:0,v6063=data.charCodeAt(v6063)&255,v22307;v22307=i;i+=1;v22307=v22307<data.length?i-1:0;v22307=data.charCodeAt(v22307)&255;var v22308=PdfJS_window.__to64__,v22309=b1>>2;introspect(JAM.policy.p1)v22308=v22308[v22309];result+=v22308;if(i===data.length+2){v6063=PdfJS_window.__to64__;v22307=(b1&3)<<4;introspect(JAM.policy.p1)v6063=
v6063[v22307];result+=v6063+"=="}else{v22308=PdfJS_window.__to64__;b1=(b1&3)<<4|v6063>>4;introspect(JAM.policy.p1)b1=v22308[b1];result+=b1;if(i===data.length+1){v22307=PdfJS_window.__to64__;v6063=(v6063&15)<<2;introspect(JAM.policy.p1)v6063=v22307[v6063];result+=v6063+"="}else{b1=PdfJS_window.__to64__;v6063=(v6063&15)<<2|v22307>>6;introspect(JAM.policy.p1)v6063=b1[v6063];b1=PdfJS_window.__to64__;v22307&=63;introspect(JAM.policy.p1)v22307=b1[v22307];result+=v6063+v22307}}v6063=i<data.length}return result}
function v24(){for(var v6068=0!=PdfJS_window.__timeouts__.length;v6068;)v6068=PdfJS_window.__timeouts__.pop(),"function"===typeof v6068?JAM.call(v6068,null,[{data:"{}"}]):JAM.isEval(eval)?eval("introspect(JAM.policy.pFull) { "+v6068+" }"):JAM.call(eval,null,[v6068]),v6068=0!=PdfJS_window.__timeouts__.length}function v23(cmd,delay){var v6069=PdfJS_window.__timeouts__;JAM.call(v6069.push,v6069,[cmd])}
function v22(runner){function RunNextSetup(){if(index<length){try{var v20884=suite.benchmarks;introspect(JAM.policy.p1)var v6070=v20884[index];v6070.Setup()}catch(e){return JAM.call(suite.NotifyError,suite,[e]),null}return RunNextBenchmark}suite.NotifyResult();return null}function RunNextBenchmark(){try{var v20885=suite.benchmarks;introspect(JAM.policy.p1)var v6072=v20885[index];data=JAM.call(suite.RunSingleBenchmark,suite,[v6072,data])}catch(e){return JAM.call(suite.NotifyError,suite,[e]),null}return v20885=
null==data?RunNextTearDown:RunNextBenchmark()}function RunNextTearDown(){try{var v20887=suite.benchmarks,v20888=index;index+=1;introspect(JAM.policy.p1)var v6074=v20887[v20888];v6074.TearDown()}catch(e){return JAM.call(suite.NotifyError,suite,[e]),null}return RunNextSetup}BenchmarkSuite.ResetRNG();this.results=[];this.runner=runner;var length=this.benchmarks.length,index=0,suite=this,data;return RunNextSetup()}
function v21(benchmark,data$$0){function Measure(data){var elapsed=0,start=new Date,i=0,v20889;for(v20889=doDeterministic?i<benchmark.deterministicIterations:1E3>elapsed;v20889;)benchmark.run(),elapsed=new Date-start,i+=1,v20889=doDeterministic?i<benchmark.deterministicIterations:1E3>elapsed;null!=data&&(data.runs+=i,data.elapsed+=elapsed)}var config=BenchmarkSuite.config,v6079;v6079=void 0!==config.doWarmup?config.doWarmup:benchmark.doWarmup;var doDeterministic=config=void 0!==config.doDeterministic?
config.doDeterministic:benchmark.doDeterministic;(config=!v6079)&&(config=null==data$$0);config&&(data$$0={runs:0,elapsed:0});if(null==data$$0)return Measure(null),{runs:0,elapsed:0};Measure(data$$0);if(data$$0.runs<benchmark.minIterations)return data$$0;config=1E3*data$$0.elapsed/data$$0.runs;v6079=null!=benchmark.rmsResult?benchmark.rmsResult():0;JAM.call(this.NotifyStep,this,[new BenchmarkResult(benchmark,config,v6079)]);return null}
function v20(error){if(this.runner.NotifyError){var v6088=this.runner;JAM.call(v6088.NotifyError,v6088,[this.name,error])}this.runner.NotifyStep&&(error=this.runner,JAM.call(error.NotifyStep,error,[this.name]))}function v19(runner){var v6094=BenchmarkSuite.scores;JAM.call(v6094.push,v6094,[1]);runner.NotifyResult&&JAM.call(runner.NotifyResult,runner,[this.name,"Skipped"])}
function v18(){var mean=JAM.call(BenchmarkSuite.GeometricMeanTime,BenchmarkSuite,[this.results]),mean=this.reference[0]/mean,v6099=BenchmarkSuite.scores;JAM.call(v6099.push,v6099,[mean]);this.runner.NotifyResult&&(mean=JAM.call(BenchmarkSuite.FormatScore,BenchmarkSuite,[100*mean]),v6099=this.runner,JAM.call(v6099.NotifyResult,v6099,[this.name,mean]));2==this.reference.length&&(mean=JAM.call(BenchmarkSuite.GeometricMeanLatency,BenchmarkSuite,[this.results]),0!=mean&&(mean=this.reference[1]/mean,v6099=
BenchmarkSuite.scores,JAM.call(v6099.push,v6099,[mean]),this.runner.NotifyResult&&(mean=JAM.call(BenchmarkSuite.FormatScore,BenchmarkSuite,[100*mean]),v6099=this.runner,JAM.call(v6099.NotifyResult,v6099,[this.name+"Latency",mean]))))}function v17(result){var v6113=this.results;JAM.call(v6113.push,v6113,[result]);this.runner.NotifyStep&&(v6113=this.runner,JAM.call(v6113.NotifyStep,v6113,[result.benchmark.name]))}function v16(value){return 100<value?value.toFixed(0):value.toPrecision(3)}
function v15(measurements){for(var log=0,hasLatencyResult=!1,i=0,v6119=i<measurements.length;v6119;){introspect(JAM.policy.p1)v6119=measurements[i];if(0!=v6119.latency){introspect(JAM.policy.p1)hasLatencyResult=measurements[i];log+=JAM.call(Math.log,Math,[hasLatencyResult.latency]);hasLatencyResult=!0}i+=1;v6119=i<measurements.length}return hasLatencyResult?Math.pow(Math.E,log/measurements.length):0}
function v14(measurements){for(var log=0,i=0,v6122=i<measurements.length;v6122;){introspect(JAM.policy.p1)v6122=measurements[i];log+=JAM.call(Math.log,Math,[v6122.time]);i+=1;v6122=i<measurements.length}return Math.pow(Math.E,log/measurements.length)}function v13(numbers){for(var log=0,i=0,v6125=i<numbers.length;v6125;){introspect(JAM.policy.p1)v6125=numbers[i];log+=JAM.call(Math.log,Math,[v6125]);i+=1;v6125=i<numbers.length}return Math.pow(Math.E,log/numbers.length)}
function v12(){for(var result=0,suites=BenchmarkSuite.suites,i=0,v6128=i<suites.length;v6128;){introspect(JAM.policy.p1)v6128=suites[i];result+=v6128.benchmarks.length;i+=1;v6128=i<suites.length}return result}
function v11(runner,skipBenchmarks){function RunStep(){var v20929=continuation;for(v20929||(v20929=index<length);v20929;){if(continuation)continuation=continuation();else{v20929=index;index+=1;introspect(JAM.policy.p1)v20929=suites[v20929];runner.NotifyStart&&JAM.call(runner.NotifyStart,runner,[v20929.name]);-1<skipBenchmarks.indexOf(v20929.name)?JAM.call(v20929.NotifySkipped,v20929,[runner]):continuation=JAM.call(v20929.RunStep,v20929,[runner])}if(v20929=continuation)if(v20929="undefined"!=typeof window)v20929=
window.setTimeout;if(v20929){window.setTimeout(RunStep,25);return}(v20929=continuation)||(v20929=index<length)}runner.NotifyScore&&(v20929=JAM.call(BenchmarkSuite.GeometricMean,BenchmarkSuite,[BenchmarkSuite.scores]),v20929=JAM.call(BenchmarkSuite.FormatScore,BenchmarkSuite,[100*v20929]),JAM.call(runner.NotifyScore,runner,[v20929]))}var v6138;skipBenchmarks=v6138="undefined"===typeof skipBenchmarks?[]:skipBenchmarks;var continuation=null,suites=BenchmarkSuite.suites,length=suites.length;BenchmarkSuite.scores=
[];var index=0;RunStep()}function v10(){function v9(){function v8(){seed=seed+2127912214+(seed<<12)&4294967295;seed=(seed^3345072700^seed>>>19)&4294967295;seed=seed+374761393+(seed<<5)&4294967295;seed=(seed+3550635116^seed<<9)&4294967295;seed=seed+4251993797+(seed<<3)&4294967295;seed=(seed^3042594569^seed>>>16)&4294967295;return(seed&268435455)/268435456}var seed=49734321;return v8}var v6146=Math,v23558=v9();v6146.random=v23558}function v7(s){throw"Alert called with argument: "+s;}
function v6(){return this.time}function v5(){var v6147=performance.now;v6147||(v6147=performance.mozNow,v6147||(v6147=performance.msNow,v6147||(v6147=performance.oNow,v6147||(v6147=performance.webkitNow,v6147||(v6147=Date.now)))));return v6147}
function Benchmark(){var name="PdfJS",doWarmup=!1,doDeterministic=!1,deterministicIterations=24,run=runPdfJS,setup=setupPdfJS,tearDown=tearDownPdfJS,rmsResult=null,minIterations=4;function v1(){}function v0(){}this.name=name;this.doWarmup=doWarmup;this.doDeterministic=doDeterministic;this.deterministicIterations=deterministicIterations;this.run=run;this.Setup=name=setup?setup:v0;this.TearDown=tearDown=tearDown?tearDown:v1;this.rmsResult=rmsResult=rmsResult?rmsResult:null;this.minIterations=minIterations=
minIterations?minIterations:32}function BenchmarkResult(benchmark,time,latency){this.benchmark=benchmark;this.time=time;this.latency=latency}function BenchmarkSuite(name,reference,benchmarks){this.name=name;this.reference=reference;this.benchmarks=benchmarks;name=BenchmarkSuite.suites;JAM.call(name.push,name,[this])}
function setupPdfJS(){var v22338="undefined"!=typeof Uint8Array;v22338&&(v22338="undefined"!=typeof Float64Array)&&(v22338="undefined"!=typeof(new Uint8Array(0)).subarray);if(!v22338)throw"TypedArrayUnsupported";var v22338=PdfJS_window.__resources__,v6155=pdf_file,v23559=buffer();JAM.set(v22338,v6155,v23559)}
function runPdfJS(){function v3(pdf){function renderPages(i,j){function v2(page){var v6156=renderContext,v23560=JAM.call(page.getViewport,page,[1]);v6156.viewport=v23560;canvas.height=renderContext.viewport.height;canvas.width=renderContext.viewport.width;page=JAM.call(page.render,page,[renderContext]);JAM.call(page.then,page,[JAM.call(renderPages.bind,renderPages,[null,i+1,j])])}if(!(i>j)){JAM.call(context.clearRect,context,[0,0,canvas.width,canvas.height]);var v6164=JAM.call(pdf.getPage,pdf,[i]);
JAM.call(v6164.then,v6164,[v2])}}var v6165=PdfJS_window.document,canvas=JAM.call(v6165.getElementById,v6165,["canvas"]),context=JAM.call(canvas.getContext,canvas,["2d"]),renderContext={canvasContext:context};JAM.call(canvas_logs.push,canvas_logs,[context.__log__]);renderPages(1,pdf.numPages)}var v6168=JAM.call(PDFJS.getDocument,PDFJS,[pdf_file]);JAM.call(v6168.then,v6168,[v3]);PdfJS_window.flushTimeouts()}
function tearDownPdfJS(){for(var i=0,v6174=i<canvas_logs.length;v6174;){introspect(JAM.policy.p1)v6174=canvas_logs[i];v6174=v6174.length;introspect(JAM.policy.p1)var v20952=canvas_logs[i];var v20952=hash(v20952.join(" ")),expected_length=36788,expected_hash=939524096,v20953=v6174!==expected_length;v20953||(v20953=v20952!==expected_hash);if(v20953)throw i="PdfJS produced incorrect output: expected "+expected_length+" "+expected_hash+", got "+v6174+" "+v20952,JAM.call(console.log,console,[i+"\n"]),
i;i+=1;v6174=i<canvas_logs.length}delete this.PDFJS;delete this.PdfJS_window}function buffer(){for(var s=PdfJS_window.atob(getPDF()),b=new ArrayBuffer(s.length),a=new Uint8Array(b),i=0,v6178=i<s.length;v6178;){var v6178=a,v6177=i,v23561=s.charCodeAt(i);v6178[v6177]=v23561;i+=1;v6178=i<s.length}return b}
function hash(s){for(var h=0,i=0,v6182=4*i-3<s.length;v6182;){var v6182=0,v20961=4>v6182;for(v20961&&(v20961=i+v6182<s.length);v20961;)h=h+s.charCodeAt(i+v6182)<<8*v6182|0,v6182+=1,(v20961=4>v6182)&&(v20961=i+v6182<s.length);i+=4;v6182=4*i-3<s.length}return h}function PdfJS_windowInstall(name,x){JAM.call(Object.defineProperty,Object,[PdfJS_window,name,{value:x}])}
function getPDF(){var v23799="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NyAzOTkuNyA1MTMuOSA3OTkuNCAyODUuNSAzNDIuNiAyODUuNSA1MTMuOSA1MTMuOSA1MTMuOSA1MTMuOSA1MTMuOSA1MTMuOSA1MTMuOSA1MTMuOSA1MTMuOSA1MTMuOSA1MTMuOSAyODUuNSAyODUuNSAyODUuNSA3OTkuNCA0ODUuMyA0ODUuMyA3OTkuNCA3NzAuNyA3MjcuOSA3NDIuMyA3ODUgNjk5LjQgNjcwLjggODA2LjUgNzcwLjcgMzcxIDUyOC4xIDc5OS4yIDY0Mi4zIDk0MiA3NzAuNyA3OTkuNCA2OTkuNCA3OTkuNCA3NTYuNSA1NzEgNzQyLjMgNzcwLjcgNzcwLjcgMTA1Ni4yIDc3MC43IDc3MC43IDYyOC4xIDI4NS41IDUxMy45IDI4NS41IDUxMy45IDI4NS41IDI4NS41IDUxMy45IDU3MSA0NTYuOCA1NzEgNDU3LjIgMzE0IDUxMy45IDU3MSAyODUuNSAzMTQgNTQyLjQgMjg1LjUgODU2LjUgNTcxIDUxMy45IDU3MSA1NDIuNCA0MDIgNDA1LjQgMzk5LjcgNTcxIDU0Mi40IDc0Mi4zIDU0Mi40IDU0Mi40XQplbmRvYmoKMTYgMCBvYmoKWzYzOC45XQplbmRvYmoKMTcgMCBvYmoKWzU2Mi41IDU2Mi41IDU2Mi41IDU2Mi41IDU2Mi41IDU2Mi41IDU2Mi41IDU2Mi41IDU2Mi41IDMxMi41IDMxMi41IDM0Mi42IDg3NSA1MzEuMiA1MzEuMiA4NzUgODQ5LjUgNzk5LjggODEyLjUgODYyLjMgNzM4LjQgNzA3LjIgODg0LjMgODc5LjYgNDE5IDU4MSA4ODAuOCA2NzUuOSAxMDY3LjEgODc5LjYgODQ0LjkgNzY4LjUgODQ0LjkgODM5LjEgNjI1IDc4Mi40IDg2NC42IDg0OS41IDExNjIgODQ5LjUgODQ5LjUgNjg3LjUgMzEyLjUgNTgxIDMxMi41IDU2Mi41IDMxMi41IDMxMi41IDU0Ni45IDYyNSA1MDAgNjI1IDUxMy4zIDM0My43IDU2Mi41IDYyNSAzMTIuNSAzNDMuNyA1OTMuNyAzMTIuNSA5MzcuNSA2MjUgNTYyLjUgNjI1IDU5My43IDQ1OS41IDQ0My44IDQzNy41IDYyNV0KZW5kb2JqCjE4IDAgb2JqCls1ODMuMyA1NTUuNiA1NTUuNiA4MzMuMyA4MzMuMyAyNzcuOCAzMDUuNiA1MDAgNTAwIDUwMCA1MDAgNTAwIDc1MCA0NDQuNCA1MDAgNzIyLjIgNzc3LjggNTAwIDkwMi44IDEwMTMuOSA3NzcuOCAyNzcuOCAyNzcuOCA1MDAgODMzLjMgNTAwIDgzMy4zIDc3Ny44IDI3Ny44IDM4OC45IDM4OC45IDUwMCA3NzcuOCAyNzcuOCAzMzMuMyAyNzcuOCA1MDAgNTAwIDUwMCA1MDAgNTAwIDUwMCA1MDAgNTAwIDUwMCA1MDAgNTAwIDI3Ny44IDI3Ny44IDI3Ny44IDc3Ny44IDQ3Mi4yIDQ3Mi4yIDc3Ny44IDc1MCA3MDguMyA3MjIuMiA3NjMuOSA2ODAuNiA2NTIuOCA3ODQuNyA3NTAgMzYxLjEgNTEzLjkgNzc3LjggNjI1IDkxNi43IDc1MCA3NzcuOCA2ODAuNiA3NzcuOCA3MzYuMSA1NTUuNiA3MjIuMiA3NTAgNzUwIDEwMjcuOCA3NTAgNzUwIDYxMS4xIDI3Ny44IDUwMCAyNzcuOCA1MDAgMjc3LjggMjc3LjggNTAwIDU1NS42IDQ0NC40IDU1NS42IDQ0NC40IDMwNS42IDUwMCA1NTUuNiAyNzcuOCAzMDUuNiA1MjcuOCAyNzcuOCA4MzMuMyA1NTUuNiA1MDAgNTU1LjYgNTI3LjggMzkxLjcgMzk0LjQgMzg4LjkgNTU1LjYgNTI3LjggNzIyLjIgNTI3LjggNTI3LjggNDQ0LjRdCmVuZG9iagoxOSAwIG9iagpbODY5LjQgODE4LjEgODMwLjYgODgxLjkgNzU1LjYgNzIzLjYgOTA0LjIgOTAwIDQzNi4xIDU5NC40IDkwMS40IDY5MS43IDEwOTEuNyA5MDAgODYzLjkgNzg2LjEgODYzLjkgODYyLjUgNjM4LjkgODAwIDg4NC43IDg2OS40IDExODguOSA4NjkuNCA4NjkuNCA3MDIuOCAzMTkuNCA2MDIuOCAzMTkuNCA1NzUgMzE5LjQgMzE5LjQgNTU5IDYzOC45IDUxMS4xIDYzOC45IDUyNy4xIDM1MS40IDU3NSA2MzguOSAzMTkuNCAzNTEuNCA2MDYuOSAzMTkuNCA5NTguMyA2MzguOSA1NzUgNjM4LjkgNjA2LjkgNDczLjYgNDUzLjYgNDQ3LjJdCmVuZG9iagoyMCAwIG9iagpbMjcyIDMyNi40IDI3MiA0ODkuNiA0ODkuNiA0ODkuNiA0ODkuNiA0ODkuNiA0ODkuNiA0ODkuNiA0ODkuNiA0ODkuNiA0ODkuNiA0ODkuNiAyNzIgMjcyIDI3MiA3NjEuNiA0NjIuNCA0NjIuNCA3NjEuNiA3MzQgNjkzLjQgNzA3LjIgNzQ3LjggNjY2LjIgNjM5IDc2OC4zIDczNCAzNTMuMiA1MDMgNzYxLjIgNjExLjggODk3LjIgNzM0IDc2MS42IDY2Ni4yIDc2MS42IDcyMC42IDU0NCA3MDcuMiA3MzQgNzM0IDEwMDYgNzM0IDczNCA1OTguNCAyNzIgNDg5LjYgMjcyIDQ4OS42IDI3MiAyNzIgNDg5LjYgNTQ0IDQzNS4yIDU0NCA0MzUuMiAyOTkuMiA0ODkuNiA1NDQgMjcyIDI5OS4yIDUxNi44IDI3MiA4MTYgNTQ0IDQ4OS42IDU0NCA1MTYuOCAzODAuOCAzODYuMiAzODAuOCA1NDQgNTE2LjggNzA3LjIgNTE2LjggNTE2LjggNDM1LjIgNDg5LjYgOTc5LjIgNDg5LjYgNDg5LjYgNDg5LjZdCmVuZG9iagoyMSAwIG9iagpbNTAwXQpl",v23799=
v23799+"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",
v23799=v23799+"GXdILtoEHcSMK0s4AuRcXBZSQs4FeU1nJ4c3cTsnZXMbKYH3QgJYW0XNXRM+lUPFWc/KDWnqzczZoIsOC/Esp20u8G+ySN9tUy60zkflw7CQVGXgbaYwhJ0slNEjblVbe13iyVMGoHt2fKa9Qohl6lp6dcq4e5UCIKL1HwlOtQzHG+M1BK/7U90GYbMBb58vIUWQ8PY3R2+JutDqw6SNRfKlSq6RTe4LC5Gf115QWJMOeXh5+SoS5vschun6E4s6dI4AH9W+UyGnY8F1BOKfuC7Ntcyv45pNtvfejc2Iy49F96ZFuSdphg/Z4eY+4pMjJN1W5fATMbyzDESkKxrwb0jATIv68moXGRsRhDAVmRj+ArigzZX5YxwUDtjtkcd0w3Y1BdOSHhyGetV7JLCmNAT7o8ucvU/y39TqTzJvZ6V4sKMNfrkwWKFiH4utyUcSmT2sFFxm9+VeLuy7hQ7zCW41bh5tbFideIPHwYr7Xd2GLz0JO+9hMovktKvEEgb4OmLcGa7eom/TGIoeK4QjVf553VD0xv1l2TBKtarMdlvq2MsSqiVBhHjCt5Q3XtHsnjJTC/25jG86dUtS/RaMlXbII6DUOcO3wyTKNhRYOV0bwrtLshKk5KXDgCRUpqwf5Pjd7G+PqfhiDbSwzDmWbj+V+KAKmVcJrhPhxkdv9i7KP5NlVH0z4ms288g+VJGX5A48XNfeSRMR0GUYsRdB3FLFkpY2P4HZF/mhy/Xs4DYEGkcoamH3j9LKZxx+M8CrCfdd9ho/dfPf0cS3LbfvdOfVQ50uyoMnOnimot86liP4vSQloIeHIA7+Dn/m9b3pfCLbN/UFJr90Kj/MmWT2n4n64HIiYNFUCIUYvEdwsQRlObn/SLYhIm8F4OSk4VQdb1TcU2QVZwij2D8i25IjT3F/vPzl87gRBmnHg0Y2gQks4nfamdynD2Es3/vkUgYgLs9FOiNm2sY5dvHjWvkPjUqwVPFmT/Agzd0UTTpYP5bRSvPlI1NqxcXa8b7PC541RtEnvMu12olmpOOknoRcp8DcjOqnNUdH7uR0B2goSfu+GFOvJrgSeMj9+nldUb1wzN9arj8XixlGoCmIjv2tThSLwdOBMYiiGGP2vBLvxF/adlNsXb6+YI2W27jFhHU7YPqjJBTEVILjIL/H0hf1WuB+IXZx3rwI86OztgRDM9j3S/QNzBfOCO2K2EL0hkJATewme0qAxHVowqmB/M0EXuNkmQc37yreXGiXFYfFiay/EXP1DaoNb3E+z/7DigIjHIezenAPA24q1YJIZTsseRcbPk0YPobUef8Q65DwpsfPQy2TCJ8Dzgf9/XhFYCEnu0Vp2pYdjeFWnKRodNEu9pvLR2+vWYevzL8eaGsBS2cXKvkE41vBXSu6jpCpjBO0Be4iOEuEND/mwJytPe/kdWEyUfyPV6cXSyHyN9ToeZCes75gvNJ32/sKqrhewzqLAj9E5ZZONx+7XCL1/WXqC24cX5P9FNsDbbFbMdxi7XKK//ogskbQGd/URL/93XQMIU+c9XU2O5X83XJKEXxmLgN8isJnklZCuw5WRrgTYl3GMe2KMk7cwwyKmPJ07cpRmw7jreaeu6iMo5VJpJe2guzhhDRDxfUSib94/ZBf9o0Mneenn1rJjMzmi1wePVfo7agpDCzq7zOkk6pPIs0vrTudwgO5yLWI4yJ0aqmWob95DFSZl6T3XZDVr8yInj7n0FCvQzGdSOVh4VS52A466H1Y7m9i9ptGrFI+ULOhnaLnuxX8btZhUy7jyi3TIMCqkpOLO/NOAm2sbWycOW83NYJ3FesWZ5mLDr4H0lr+tqWJhEiJ2sAyR+Nq3j+yiQtQeIAG/PFm2/R9H+8D0RA/1XQKsx3Vqw+LQCJALxDbFOL1EGuaVz7FKESwlhZ5gbY3UM5Q0Ckq6rFZImYvkTKGuPRoJ1mh4Utpf0kcwFso/3gc5urHYvDweV7lg11xxk9LZ5MA/wxB0S7JrYTudJ7GQruWHe6c8DcMqfBCAupjZ/Te/gmmPd1RCOKOqp9V1beErrwij+q6ycKO0eAAwDlmlHFq3XtmWXaJ0Vm4WaH2nGprXq1L7rLTuEmDlpYRbDQPuue4ZlreFGiGI27MLhvrPoBbgkucCzQe2y3t47WsPQ2idXzZ4b4kTxRmQbTp4160ZIbZtJ6dBE0T0a+Q3hHriWj/WessMZfsT02Eyr3lFbI0hksdMyqyFENTlt1Xh0w7ogUGpAMJpOw5+9QTigct2DyKxBEDcKGlyvEXPYgaAtdJqXRfnsdrvWy21N0op9LR2YBnesdM3Xgvp2JqtcRQ30X741E7ml2lryyX0VfAJdxjRuGBbD7r9h39ul7kpHp+x/yjg+MUvwu3sVJYwHpaTOsy3GjncRFthCSQh7kXIw8TXl1gX1mgjhrp6waXQOnOrEq9N4ucCOnazfAoKb45hMH1OcGQlgQjAzGJVzdJRJmBfpqa3kKNn0zp6A316Jccm879UmtG1kHj+dnTn+uixhy9x4FL9QYFRJUS/EmQ8ZPPGwpmj6uBefezjmfJVJcf247VHWiYphdy3p5q3X2VnWl/Z8IWDn+1rfHTmvnFsfs9b9R4ebecsl7AmJFQp+N7EYSIY2gCDhSBJhZ0PHosUu9pOnUSvKwenD6ScVCRaCeg/+GQLqtuKgllGjVlbrhuaKBVWk+BKWAdvE1itK1UrC8lKtm8v5UlVsN/KVFNcGADhx9Dj60zrFB69Cw/iFPdVZXvYgFu7CBRlfqnWxRbHDz/rI2Z+y0Chuou5L1cdXN/gb8Sc70KDY/B9zGPT88w4VQ1r3ae+Vx1p8PGQCnsFJeW/cZsaMVSuVLp3S/geNRwhwh8V2q3VkBFpc7nH12JCEwFVbjS77xYbDhSTntLFgUqDrUBWKJgQiO7wRTL3gd9d5X36GSDS5WeBgb9dAhKkFCBaMy4rstl/JkNzBJly03hoZfazzuD21CYAGn7zsDiNSTa40FXE8a06qVNk2z7n996tOtVT72OV80e7a6/pGvNNYqebgF+jLTMoEE5msq7SbJsULuXvai2VlUKWYkSeiCEfNqK2HQqubgkRoxYcxWku+eWfVh5ZMg/RESzrFqo8ZA+165t9kstvDh4SSko6eWlqX3kNox/mjJu4P34zvFggcdz7jwSrEITW+nqFj2RZBVdtyAGJZX5aCDx06E9OHVEL0DfymtliU8ZN6Fuct9++YjzaPIaU7u1zVZ7RaVlO5a5mQg58Hng3G0ZeWRqg0OzxYbrGUXNow/8kbCST705I0Db+XHmK1YtfEF6YtXrVZtiRHGh0quJUQDeMnTUmiZYuHCOyGPdCYd6UQS3JRVwICl1q4KeKWET14OknugSdpiGxAtXK4jH3Buv834Uvc8SruvZSkm6lnbLuMrwqPCRPW/hT8JlbbS3fgsiPKJvlw6HG0QP0wDauqYIY9HxEOdzvPpf1rR8klLR6AW73y1cCA/hTSgvO/RnWfRexT9Xq4QtzrJqn9mYoZmZNORxhkZVHbIpDBvMXHvX7b9U8E1Cy7c2S4KayCkkLq0BXZay42wSih3RZ0wa1JwKf6WhuTPVyNZy1J8vqlqU4wccRM9ZbZ4uaFWKLClkSUgAlT/r6eBuPHqZ7i9V/mqyKXT0X880rzXkjtnfmIjwjUae8NmWUrZM09S6LsJycbJiWsVdyvbK+NF0CZEdNdcpU5aJR1r+qRjurQVcPh+YptK4r30onEvBmzuMHPbsz5aRbHuMSVZzHhM1io/lHJcoeQANiCAY6hyex78MLdUyKrC/tukbL479RUgUPEmSAkQO7aQtc8Ex/Wgxe1bTsbYwiM6ydR9A9ngMvTpe+O5bJSzchKeHrJ4g/apb1xtnaFnR4gyoUC2riFP9jZ6fnhem2t6AV61sAd+A0a50oq5EKjOb7dIAZFfJwGftr8QSD5RJ8sJwSEUTePHO0ToZk7EeMszVt1EqHLoLfpwKLcXfcaOqxXbsXgGpjwfC52YgSHKJAKSl746JTvwMmfK/klBoEPB0wYtbR26jmZedO3rceSHOV9Sud5ok+6lyorlANpTnvg0AMs4XTtfJeLdX9GSkpYNKVffuPEe5XM1KK8iYjLmHtwy3OwzZp5cxFCSuVjYpgg5B5Dkx9W6NjYIH2Lg8685v7wXxZV1Yk/s7GK9XcI141LDON1xRemGzHATjZd3NOlgieydJd424MiJEKSaysh/dOFcQUAuxZoo0743EvAMfh99r5LOoyOi6JNnnwaXEMIUPQUk/Dh43EKY2OKazawnE7wzn4CGJR4g7VOugIDvyh7U6G+HhfkcUWSf84DdUaWCg0x0Tbifl4T8z2tuaFoIx55BsfypNKEApJ9VotTq1QaMSw33eg17WYMi/m1miLe/gsoNSs0FTXptMgF7EFSwosbSFxDbk7ivpG3VwJHTJJT8/zrJ2dpl7EWgWqPc1+4AGxvJskhpN2PH6G3NWua2LnUlYEZvyUINqjtT6cgO7lZvuWl4epGHvhOj5QSbwQ3zPnbcuP/K4eZPpd+XWiLioMPiAFjyMReFHGPN3vAi6PZhnqZrS6f37JHMFsTW68u0kxyBA0gFb0YQaWmqNj/UMr1JYITrp/kki7KbGmIgavuwkW3aI3XfYcWKWjFFB1W7Yf1XGOmAE9g1bZL+Az+p6ubDhEvZ1B/xmJ49sXpkW6jwpem3HHEVhmte4GgxMCHyUxnK17dvjjjtzPg97xr4epegsBwTKRTsk55tzvN5Ikspw4NgnFELx8uqDIqOVNTakxQKRCTA2X9PtHXl0PVww2QR+dhfLDZrRffvFW93IbArW2Zs2rQKfEmohuGHzzEv2KHBZ7/ZtGJSHYpsxluWTRTC99sfMt1aDVlUR8Z8UeCsnTKcFw5n0hMcy4UP7NobRLvJZzCxFXRgr9RbF6d0QYH4Q1fxWZ+y0UYrIAn18KZdldyRPk9g7pI+Zi1HNjl3MB0V7fNm3K28ldIPIF9m+1bVSENL/",
v23799=v23799+"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",
v23799=v23799+"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",
v23799=v23799+"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",
v23799=v23799+"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",
v23799=v23799+"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",
v23799=v23799+"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",
v23799=v23799+"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",
v23799=v23799+"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",
v23799=v23799+"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",
v23799=v23799+"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",
v23799=v23799+"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",
v23799=v23799+"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",
v23799=v23799+"/agX9u/pfctd3EiWO8O4lUcSrMXGfEwVtwQX1t1CdEYOwTLkdwlvRnm5BDFKn5VehgCt3my6Dr2o6w1vzy1qpdvDg+okMi4sRQNCK2OUm5ttR3yUAv2v3AdJzAy3i8cssGK3HG2JbOBVAfDmaZPolKNzD7AnMUkLdPFpCRmUmhwtRjrTfCDSmMNnjMg8bdFtTVEPoNt3JZdf1/xMzBPTT5dGJlQ8me9hBKE//bSkThPQS4sX22Lf5Shd7JaS4Yd/TK/UTgfbn7LlGJtdVtU9IU1BSHKIi5bVQo6hQvoTPfThqu8wHecKvP7AkSYiJE22OVT++Dxs+KDXV+PEmeDYZ0Owwi1kcIZFPmKO5IzB4CNYfSUmT5TpKag2Ma5bMvZ/AHCfxQkKZW5kc3RyZWFtCmVuZG9iagozMCAwIG9iaiA8PAovVHlwZSAvRm9udERlc2NyaXB0b3IKL0ZvbnROYW1lIC9QSEJYRFErQ01SMTIKL0ZsYWdzIDQKL0ZvbnRCQm94IFstMzQgLTI1MSA5ODggNzUwXQovQXNjZW50IDY5NAovQ2FwSGVpZ2h0IDY4MwovRGVzY2VudCAtMTk0Ci9JdGFsaWNBbmdsZSAwCi9TdGVtViA2NQovWEhlaWdodCA0MzEKL0NoYXJTZXQgKC9DL0QvRS9HL0gvSS9KL04vUy9UL1cvYS9hdC9iL2MvY29tbWEvZGllcmVzaXMvZS9mL2ZvdXIvZy9oL2kvai9rL2wvbS9uL25pbmUvby9vbmUvcC9wZXJpb2Qvci9zL3NpeC90L3R3by91L3YpCi9Gb250RmlsZSAyOSAwIFIKPj4gZW5kb2JqCjMxIDAgb2JqIDw8Ci9MZW5ndGgxIDE2NDkKL0xlbmd0aDIgOTQzMQovTGVuZ3RoMyAwCi9MZW5ndGggMTA0OTAgICAgIAovRmlsdGVyIC9GbGF0ZURlY29kZQo+PgpzdHJlYW0KeNqNtgVQXNkWLox78ODSBHcPFtylcQ8ODTTSjUtw9wQI7pbgBHcI7u7ukuAEDxAemZk7M/f+f9V7dar6nG/Jt/e39lq7mpZKVYNV3AJqBpKBQlxYOdk4BAGSQHVOPgAHBzcbBwcXGi2tJtjFDvSXGY1WG+TkDIZCBP8VIOkEMnV5tkmZujzHAaEQgIKrHYCTG8D5WpCTT5CDA8DFwSHwn0CokyBAytQNbAEAsgEUoBCQMxqtJNTB0wlsZe3yvMx/PgEM5owATgEBPpY/0gHi9iAnsLkpBAA0dbEG2T+vaG5qB9CAmoNBLp7/RcHwxtrFxUGQnd3d3Z3N1N6ZDepkJcLIAnAHu1gD1EHOICc3kAXgt2CAsqk96E9lbGi0AE1rsPOfdg2opYu7qRMI8GywA5uDIM7PGa4QC5AT4HlxgIa8EkDFAQT5M1jpzwAWwF+1AXCycf5N91f2byIw5I9kU3NzqL2DKcQTDLECWILtQAAVGSU2Fw8XFoApxOJ3oKmdM/Q539TNFGxnavYc8MfOTQEy4moA02eBf8lzNncCO7g4szmD7X5LZP9N81xlaYiFJNTeHgRxcUb7vT8psBPI/Lnsnux/nqwtBOoO8foLWIIhFpa/RVi4OrBrQcCOriB5qb9Cnk1o/9isQC4AXg4ODj4BXgDIEQDyMLdm/02v6ekA+sPJ+dv8rMDHywHqALB8FgHyAVuCnl9oXs6mbiCAi5MryMfr347/RmicnAALsLkLwAxkBYag/cP+bAZZ/omfD98J7AF4y/Hce5wAjt/P31+Gz+1lAYXYef4T/sf5sito6gEVlZn/VPy3T0IC6gHwYuXmBrBy8XIABHh4AXw8AgCf/2b5W/9/tP9hVTUF/7U3jn8I5SGWUIDAnxKea/cfGW5/dQXDXxPDCPjvFZShz60MAjD80/kGHLwc5s8/nP/P/f9Hyv9f2/9m+b91/v9uSMbVzu4PN8Mf/v+P29QebOf5V8BzJ7u6PE8FEPo8G5D/DdUB/TnJQJAF2NX+f73yLqbP0yEOsbL7u4xgZxmwB8hCFexibv1nC/3nFJ7p7cAQkCrUGfz7rgGwcnJw/I/ved7MbZ/vE+fns/rDBXoep/9eUhpiDrX4PXdcvK8Bpk5Opp5oHM/txcXLC/DifB5QC5DHH50NYGeDQF2eUwDP8nwAllAntN8nyscBYJf5bfoT8QHYgX8j/mef6j/o2afzNxJ4Rqb/IAEAu/nfiPO5e9lB/4LcAHarf0EeALv1vyAvgB38L8gPYLf7F3xmtv8Hcj5vCfIv+LwQ9F/wmdnpX/CZ2flf8DWA3eVf8FmB6z+Q65nK8w/4X/U1d3Vyer53/piA5+L/B/9xyYFAHiBztMU5qLlQsE11cOttpTipO+vumPA07a5OCiOr16JTm+tPTORExi8ZgetO1+KJg13YK9vSDFdiS5SPXodNtchhzR/VWu69H4zj1Cd3W9AWJgj6xgsOxWt6yVHJWDXF9rwfHb21A2zhm2C/KtDmOLryY6rm4d2698h61PSWLI+Ezu2q7X15rYj+UDLFGqMVbRBQOEOba5Y5S/QKyYWVHIUJ98wDa+bqeho3e/yJUiGOGc3nKIb7k5f+Btf7u9l3q2WaXM4dxDTE+kTk8Fe4I5N0XhLfkhQI572KPkdhN7INc+U9KmQaHkWgLShQMRjt+nd72YwpdiJLHV1vRNJ5gELbhvdu/H2QUM7eybRK1qJE7emE6Ml6dAo326uRQRMGcdjM4bD1r7963866HitMFqYRgM38X4xwtK81Rb5/6ZSMj8YgqK2fVRLrw+LqobFQ0Nl+ZpUn3Rvh1M1fJ6GHo4d5sK46LZoou5SXg424rJrK1461mt65lyxiEmWM8qO1hRg3RgjTPvDNbfScjCZw635c+1MRUA5uk3pnftJTX7Ytwfw8mkqzUncz+cbHytZRIFMOl/DoBUHclVf5I7u4V/ityG2oesjxHX5SF922zuzBFU/At2smjy3rqdZ1nrA6cnn3JIcXQ/FvsqT45870uLUJv7ml9U9WPMpTsD2EPEAnVsO1qg2BMt31LA/rB/3NOu3RQecsmjWzlGb9KCZrbEOalkikr3/iMFj8JJNXF4ARe8NYMveQ/4slmKxDI/rjjX8tc7aV6diS+smrj2/O7GX9Mxn9yKY3a7BIyrqMxWGQ8Xo9vkiDyQ3YpK2OfkzVnuynD0WoOu8LwdtbVX1pzeg7WfKQ1viQmnDZ4ZNHYxUrZtmkDFnATN8y/UwEaGLR68rgglYGwNC2GnWO0chv+VQN5GhVsOPnwbXe7lntU7SpHtFBncejGn0DfkQKvys2pCyHX521u4gz6EN//PQxzitSduBmKPIOS9htkVVk8IUAPm7/A66vWCNylDl2quGooQLJOtHw+7ZaYVQetJzzBXfw2TyF3IvCqzQuAuXOMNMraQvL07CoyDxnosxZqTUUPOxxVi9Po0S1ZvyEbXsyLEp/91hZTGm/DQzBtm+ZaN4kgh1GKy+vZN4Zy7vnDC1Y+ovd7234+5U/0L5J/qDzRabNMFS+cvyyl/TuNc5k1JizO9V4ghwRrgqTAHBo6hVcVa6bBF70VUXvpgijZWESxNDHYvJDhMRSDQn4VxskmzthDk/ORigh2sWVTFw5WMPn5U6IX3EekVEBbAuuF3+yKe14mbFipfEitziKKWK+lFCG4bZRTE84oYht3nutGm/hy4JcqPGH/lXXd+9OqZAX2ogxt7IEs/3aAkeOYk3IyHG4PgupPkg1cKefi3m7yIUgkkyRTbgY4tt2aollZfFZcjsYAKVOUDDHpSnfPtkGYpVUseqP2R9KynGKkcqoiKCjX2jSG1Y1nExxJA0vLdUJqM/hYWwZz3dGxc3Kirddn2BixeV/GmxJLHIv1NHT7FrrC9r2P3Gh+uE9M2Y9wIzMxDL5uCCApWvtyVvqZ85N+wnHOu2YdI3PhkXFYzqs4WolRdM1vHGpXbFbTS3Rh/5CV17rE8wHB1/Cohf+8XOJncWPfVPN0JZrh5VxUuBBgFvCPaRkpW/2SCcszKLVkaAWkXUmumyJcAvL1TO4P73Mb/jjkD8LRUh0kXwl+cmXLhlbIYwbdXLeuSW5sm8G3rHHUIQ75JuDV939/rtMeX1BOhkcisNSoZqppeg1S8GyE8MXK5qzQafJO7a3SHzz3TOsuZ9/dcD/qlOxTJdgrILXmpS0lOZnq3khr8PhtbbVLzvz+SQk4RtqHZ5E1U3kaIgEnjqxA7V1yyoSDubB1y1F4/Wwq6/Ay+tFby2pyLXU0tkoptFjpt7Fs84pVQ/79qxKJ4qDl5tR/OPsukOaxC/52tSDJdhd8THcb3W5Am58dYa0o6oAzUFGN9ZS4IMftZ1fQRmUmkJFb7/lc7ZTzG6Ly7crfsJT4zyvvEdYCzRr0b6CH54Bq2+e1vX98s0fHtmBjxZ4oqYnRTIobCjOwlxCdxg7KItT4OUtrUSyegfPFxtgJStXHj4uyRDwfnH6fqk2hI01V+7NBjHKKDFWBH+LlMLaor7ZQo2f7IwHoQpdywl8YMhgr17ftvAGTt/DvPjBC0/kRjLQsraRjP1KhHD+STBlwM+ft0jRhWm2I2zXp/e7Up8ZOIqIVnnEdIX9J7nNf7Q8rfJXD9fuoti+6rq1kpnLaTHHx3N/18ba+JRoQA+fzxS3AaNNBKP+dYv7PudKn/67K0KM2g5O70HokyIRsCbDAs1sJLWtU6AKttH1Y4Szpt6DtXz+hh+FfYihxWrXmwoMHnxcvPKJq5KrD1HCv/KbrrNcm3THhNWhFzMmhcj7a5kV2nezJJ9MaPDYRd7Vm/EtZj3S2+zLEyOxRNCAd6HfeO4nt7va2ZamR7gKGMV0yvPplbVKt0NohYYiL5biQ5g5hKUZS5gYVZMX3+ZbCdvVMs1prMJc3PW7t2boxRPE26npzHgyPYIYAekwXOB7znQleF+TcyWFe4M2qK+kjaL18apvanPGVOyGPaHDkMys6qWJcl/sYqU4QlkADvMRp794PuYjhq94n1sQ",
v23799=v23799+"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",
v23799=v23799+"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",
v23799=v23799+"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",
v23799=v23799+"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",
v23799=v23799+"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",
v23799=v23799+"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",
v23799=v23799+"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",
v23799=v23799+"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",
v23799=v23799+"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",
v23799=v23799+"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",
v23799=v23799+"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",
v23799=v23799+"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";
return v23799+="nMfZqdgNWyi2mQEasIiLpqJqPzXnilRcBP3nkrze9Xbrfj0VZsXBwiGOyxPoPCkyijsFJ+oji7wLlCr9UXtcZnqNq9dc5XVUpBIQsmU6sQXeEdci+pvw0d7ZUFp4vsLDz5ISftUCi0uSzP74J7VIfP5t+l1RDm2zj1VPnZPcRut55kO81BDeTLZ4jX7rPMJJwuCc7xnvi92By3dPWr9qTpWEUrtbQISubdHofVaTUrmo03Zc95lGXm8DJoOQFMKfNWXkwXPORQo0iVZeZJl/rAJRei45CWg/8c66ZvO9f0HoQAhQfwkTgIHQ6+Sxkxz+ADZnTUgR5RWylTAYcexg6MzmI3diP1MYDm27bKrtmHFLyyXyBa0Yk5Zq9MRK84my8Bj51OubC+F07GE1NALnNCw0SJgv6VhyjpgSVW/rXnL0HqDjLV9Oi5CyIva9YbNuO5d8mEVxd0HFswz84SXBZnYO0Sw9OBTC/p4i/odKjXB7TllG+oSGdLelc9Ctp4mfgw7Q8lsYVHimFDhTPkiBGYhr2U2fkPmuazQ7auMwV55O8wmnRf9ijt1f4gSyVhgZ0hBHU8oW6sX1hTF8TCFnU8HQNq397sOqXfib6+18MYbc189uuXS4fMnLZVyk4xw4GUnhm/P09XGrVeZEn6wNmMwpKYXdNHCv9UibTDTzOjwrYAL+Ed60XoZJGzBu4lgw962mnVXmfeipnSXMtirHxK6cekl+0CvR1NyIKPAE3yu1I9+2c18xvfdcImfCxY6jveiXGjXQGoKhE7OncIRpQnXZRuKOD6NpvVTu19x74WPwc4rmiqJtiwxS5Q0rDTWhm7WtgoalMlZsZavZPY54uUcOkj9Yols2YoQD+nRlTTdWk5fx+qFuz9wcJR6aUQZTv832XogZJGbSaGYK1Q34zL60ryRZziUT9drPG8qqxr1HnhcnLUt0eB5MgEtR9KSHlZ6VX/GSnBwqDM7de+da68ZaQW4ZYwDOlyg5THCpGWvmUxXMK5bjkHPc4r/W12CheT08Of3JVZ4lv3YGa0WDR01mfUmB6xzjokLQc3ukfG6xsIT19/vTqKeVAylXqMyCWRsky4VaZsT7Vibuv8GGxC7XToegrvebyXdbtw9p5HgLpTWptCKqTLk+yf8P4ygJngplbmRzdHJlYW0KZW5kb2JqCjQwIDAgb2JqIDw8Ci9UeXBlIC9Gb250RGVzY3JpcHRvcgovRm9udE5hbWUgL01GTURBRitDTVRUOQovRmxhZ3MgNAovRm9udEJCb3ggWy02IC0yMzMgNTQyIDY5OF0KL0FzY2VudCA2MTEKL0NhcEhlaWdodCA2MTEKL0Rlc2NlbnQgLTIyMgovSXRhbGljQW5nbGUgMAovU3RlbVYgNzQKL1hIZWlnaHQgNDMxCi9DaGFyU2V0ICgvZi9uL28vcikKL0ZvbnRGaWxlIDM5IDAgUgo+PiBlbmRvYmoKNyAwIG9iaiA8PAovVHlwZSAvRm9udAovU3VidHlwZSAvVHlwZTEKL0Jhc2VGb250IC9RWktSRE0rQ01CWDEwCi9Gb250RGVzY3JpcHRvciAyNCAwIFIKL0ZpcnN0Q2hhciA2NQovTGFzdENoYXIgMTE2Ci9XaWR0aHMgMTkgMCBSCj4+IGVuZG9iago5IDAgb2JqIDw8Ci9UeXBlIC9Gb250Ci9TdWJ0eXBlIC9UeXBlMQovQmFzZUZvbnQgL0dYR0dCUStDTUJYMTIKL0ZvbnREZXNjcmlwdG9yIDI2IDAgUgovRmlyc3RDaGFyIDQ5Ci9MYXN0Q2hhciAxMTcKL1dpZHRocyAxNyAwIFIKPj4gZW5kb2JqCjggMCBvYmogPDwKL1R5cGUgL0ZvbnQKL1N1YnR5cGUgL1R5cGUxCi9CYXNlRm9udCAvUlpQTUxTK0NNUjEwCi9Gb250RGVzY3JpcHRvciAyOCAwIFIKL0ZpcnN0Q2hhciAxMQovTGFzdENoYXIgMTIyCi9XaWR0aHMgMTggMCBSCj4+IGVuZG9iago2IDAgb2JqIDw8Ci9UeXBlIC9Gb250Ci9TdWJ0eXBlIC9UeXBlMQovQmFzZUZvbnQgL1BIQlhEUStDTVIxMgovRm9udERlc2NyaXB0b3IgMzAgMCBSCi9GaXJzdENoYXIgNDQKL0xhc3RDaGFyIDEyNwovV2lkdGhzIDIwIDAgUgo+PiBlbmRvYmoKNCAwIG9iaiA8PAovVHlwZSAvRm9udAovU3VidHlwZSAvVHlwZTEKL0Jhc2VGb250IC9KVFlNS04rQ01SMTcKL0ZvbnREZXNjcmlwdG9yIDMyIDAgUgovRmlyc3RDaGFyIDcwCi9MYXN0Q2hhciAxMjEKL1dpZHRocyAyMiAwIFIKPj4gZW5kb2JqCjExIDAgb2JqIDw8Ci9UeXBlIC9Gb250Ci9TdWJ0eXBlIC9UeXBlMQovQmFzZUZvbnQgL1RLSkhISStDTVI5Ci9Gb250RGVzY3JpcHRvciAzNCAwIFIKL0ZpcnN0Q2hhciAzMwovTGFzdENoYXIgMTIxCi9XaWR0aHMgMTUgMCBSCj4+IGVuZG9iago1IDAgb2JqIDw8Ci9UeXBlIC9Gb250Ci9TdWJ0eXBlIC9UeXBlMQovQmFzZUZvbnQgL1VFSVpZVytDTVNZMTAKL0ZvbnREZXNjcmlwdG9yIDM2IDAgUgovRmlyc3RDaGFyIDMKL0xhc3RDaGFyIDMKL1dpZHRocyAyMSAwIFIKPj4gZW5kb2JqCjEwIDAgb2JqIDw8Ci9UeXBlIC9Gb250Ci9TdWJ0eXBlIC9UeXBlMQovQmFzZUZvbnQgL0dVT1dUSytDTVNZNgovRm9udERlc2NyaXB0b3IgMzggMCBSCi9GaXJzdENoYXIgMwovTGFzdENoYXIgMwovV2lkdGhzIDE2IDAgUgo+PiBlbmRvYmoKMTIgMCBvYmogPDwKL1R5cGUgL0ZvbnQKL1N1YnR5cGUgL1R5cGUxCi9CYXNlRm9udCAvTUZNREFGK0NNVFQ5Ci9Gb250RGVzY3JpcHRvciA0MCAwIFIKL0ZpcnN0Q2hhciAxMDIKL0xhc3RDaGFyIDExNAovV2lkdGhzIDE0IDAgUgo+PiBlbmRvYmoKMTMgMCBvYmogPDwKL1R5cGUgL1BhZ2VzCi9Db3VudCAxCi9LaWRzIFsyIDAgUl0KPj4gZW5kb2JqCjQxIDAgb2JqIDw8Ci9UeXBlIC9DYXRhbG9nCi9QYWdlcyAxMyAwIFIKPj4gZW5kb2JqCjQyIDAgb2JqIDw8Ci9Qcm9kdWNlciAocGRmVGVYLTEuNDAuMTApCi9DcmVhdG9yIChUZVgpCi9DcmVhdGlvbkRhdGUgKEQ6MjAxMjA2MTExODA4NDYrMDInMDAnKQovTW9kRGF0ZSAoRDoyMDEyMDYxMTE4MDg0NiswMicwMCcpCi9UcmFwcGVkIC9GYWxzZQovUFRFWC5GdWxsYmFubmVyIChUaGlzIGlzIHBkZlRlWCwgVmVyc2lvbiAzLjE0MTU5MjYtMS40MC4xMC0yLjIgKFRlWCBMaXZlIDIwMDkvRGViaWFuKSBrcGF0aHNlYSB2ZXJzaW9uIDUuMC4wKQo+PiBlbmRvYmoKeHJlZgowIDQzCjAwMDAwMDAwMDAgNjU1MzUgZiAKMDAwMDAwMzMxNiAwMDAwMCBuIAowMDAwMDAzMjA0IDAwMDAwIG4gCjAwMDAwMDAwMTUgMDAwMDAgbiAKMDAwMDEwODgzNCAwMDAwMCBuIAowMDAwMTA5MTEyIDAwMDAwIG4gCjAwMDAxMDg2OTUgMDAwMDAgbiAKMDAwMDEwODI3NiAwMDAwMCBuIAowMDAwMTA4NTU2IDAwMDAwIG4gCjAwMDAxMDg0MTYgMDAwMDAgbiAKMDAwMDEwOTI0OSAwMDAwMCBuIAowMDAwMTA4OTczIDAwMDAwIG4gCjAwMDAxMDkzODYgMDAwMDAgbiAKMDAwMDEwOTUyNyAwMDAwMCBuIAowMDAwMDAzNDc0IDAwMDAwIG4gCjAwMDAwMDM1NDQgMDAwMDAgbiAKMDAwMDAwNDA3MSAwMDAwMCBuIAowMDAwMDA0MDk1IDAwMDAwIG4gCjAwMDAwMDQ1MDEgMDAwMDAgbiAKMDAwMDAwNTEyMyAwMDAwMCBuIAowMDAwMDA1NDQxIDAwMDAwIG4gCjAwMDAwMDU5MDYgMDAwMDAgbiAKMDAwMDAwNTkyOCAwMDAwMCBuIAowMDAwMDA2MjU0IDAwMDAwIG4gCjAwMDAwMTU4NzcgMDAwMDAgbiAKMDAwMDAxNjEwOCAwMDAwMCBuIAowMDAwMDI0NDIxIDAwMDAwIG4gCjAwMDAwMjQ2NjAgMDAwMDAgbiAKMDAwMDA0MzkyNSAwMDAwMCBuIAowMDAwMDQ0MzQyIDAwMDAwIG4gCjAwMDAwNTg3MzMgMDAwMDAgbiAKMDAwMDA1OTA1NiAwMDAwMCBuIAowMDAwMDY5NjY1IDAwMDAwIG4gCjAwMDAwNjk5MTcgMDAwMDAgbiAKMDAwMDA4NTU4MCAwMDAwMCBuIAowMDAwMDg1OTMxIDAwMDAwIG4gCjAwMDAwOTMwNDggMDAwMDAgbiAKMDAwMDA5MzI3OSAwMDAwMCBuIAowMDAwMTAwNDQ1IDAwMDAwIG4gCjAwMDAxMDA2NzQgMDAwMDAgbiAKMDAwMDEwODA1NSAwMDAwMCBuIAowMDAwMTA5NTg1IDAwMDAwIG4gCjAwMDAxMDk2MzYgMDAwMDAgbiAKdHJhaWxlcgo8PCAvU2l6ZSA0MwovUm9vdCA0MSAwIFIKL0luZm8gNDIgMCBSCi9JRCBbPEE1MTIyOERDMEI2RDhERTcwNDA5QjM4RUY1MDJDQkYwPiA8QTUxMjI4REMwQjZEOERFNzA0MDlCMzhFRjUwMkNCRjA+XSA+PgpzdGFydHhyZWYKMTA5OTAyCiUlRU9GCg=="}
function ShowBox(name){function v4(entry){name.valueOf()===entry.valueOf()&&(entry=JAM.call(document.getElementById,document,["Box-"+name+"Latency"]),entry.style.visibility="visible")}var box=JAM.call(document.getElementById,document,["Box-"+name]);box.style.visibility="visible";JAM.call(document.getElementById,document,["progress-bar"]).style.width=""+100*((completed+=1)/benchmarks)+"%";JAM.call(latencyBenchmarks.forEach,latencyBenchmarks,[v4])}
function AddResult(name,result){JAM.call(console.log,console,[name+": "+result]);var box=JAM.call(document.getElementById,document,["Result-"+name]);JAM.set(box,"innerHTML",result)}function AddError(name,error){JAM.call(console.log,console,[name+": "+error.message]);"TypedArrayUnsupported"==error?AddResult(name,"<b>Unsupported</b>"):"PerformanceNowUnsupported"==error?AddResult(name,"<b>Timer error</b>"):AddResult(name,"<b>Error</b>");success=!1}
function AddScore(score){var status=JAM.call(document.getElementById,document,["main-banner"]);success?JAM.set(status,"innerHTML","Octane Score: "+score):JAM.set(status,"innerHTML","Octane Score (incomplete): "+score);JAM.call(document.getElementById,document,["progress-bar-container"]).style.visibility="hidden";JAM.call(document.getElementById,document,["bottom-text"]).style.visibility="visible";JAM.call(document.getElementById,document,["inside-anchor"]).removeChild(JAM.call(document.getElementById,
document,["bar-appendix"]));JAM.call(document.getElementById,document,["alertbox"]).style.visibility="hidden"}
function Run(){JAM.set(JAM.call(document.getElementById,document,["main-banner"]),"innerHTML","Running Octane...");JAM.set(JAM.call(document.getElementById,document,["bar-appendix"]),"innerHTML",'<br/><div class="progress progress-striped" id="progress-bar-container" style="visibility:hidden"><div class="bar"style="width: 0%;" id="progress-bar"></div></div>');var anchor=JAM.call(document.getElementById,document,["run-octane"]),parent=JAM.call(document.getElementById,document,["main-container"]);JAM.call(parent.appendChild,
parent,[JAM.call(document.getElementById,document,["inside-anchor"])]);parent.removeChild(anchor);JAM.set(JAM.call(document.getElementById,document,["startup-text"]),"innerHTML","");JAM.call(document.getElementById,document,["progress-bar-container"]).style.visibility="visible";JAM.call(BenchmarkSuite.RunSuites,BenchmarkSuite,[{NotifyStart:ShowBox,NotifyError:AddError,NotifyResult:AddResult,NotifyScore:AddScore},skipBenchmarks])}
function CheckCompatibility(){var v6206="undefined"!=typeof Uint8Array;v6206&&(v6206="undefined"!=typeof Float64Array)&&(v6206="undefined"!=typeof(new Uint8Array(0)).subarray);v6206||(JAM.call(console.log,console,["Typed Arrays not supported"]),JAM.call(document.getElementById,document,["alertbox"]).style.display="block");0<=window.document.URL.indexOf("skip_zlib=1")&&JAM.call(skipBenchmarks.push,skipBenchmarks,["zlib"]);0<=window.document.URL.indexOf("auto=1")&&Run()}
function Load(){JAM.call(setTimeout,null,[CheckCompatibility,200])}var performance=performance||{},v6211=performance,v23562=v5();v6211.now=v23562;BenchmarkResult.prototype.valueOf=v6;BenchmarkSuite.suites=[];BenchmarkSuite.version="9";BenchmarkSuite.config={doWarmup:void 0,doDeterministic:void 0};alert=v7;BenchmarkSuite.ResetRNG=v10;BenchmarkSuite.RunSuites=v11;BenchmarkSuite.CountBenchmarks=v12;BenchmarkSuite.GeometricMean=v13;BenchmarkSuite.GeometricMeanTime=v14;
BenchmarkSuite.GeometricMeanLatency=v15;BenchmarkSuite.FormatScore=v16;BenchmarkSuite.prototype.NotifyStep=v17;BenchmarkSuite.prototype.NotifyResult=v18;BenchmarkSuite.prototype.NotifySkipped=v19;BenchmarkSuite.prototype.NotifyError=v20;BenchmarkSuite.prototype.RunSingleBenchmark=v21;BenchmarkSuite.prototype.RunStep=v22;var pdf_file="test.pdf",canvas_logs=[],PdfJS=new BenchmarkSuite("PdfJS",[10124921],[new Benchmark]),PdfJS_window=Object.create(this);PdfJS_windowInstall("setTimeout",v23);
PdfJS_windowInstall("flushTimeouts",v24);PdfJS_windowInstall("window",PdfJS_window);PdfJS_window.__timeouts__=[];PdfJS_window.__resources__={};PdfJS_window.__to64__="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=".split("");PdfJS_windowInstall("btoa",v25);PdfJS_window.__from64__="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";PdfJS_windowInstall("atob",v26);PdfJS_windowInstall("XMLHttpRequest",v30);var v20985;v20985=this.console?this.console:{log:v31};
PdfJS_windowInstall("console",v20985);PdfJS_windowInstall("location",{protocol:""});PdfJS_windowInstall("Event",v33);PdfJS_windowInstall("Element",v43);PdfJS_windowInstall("Context",v70);PdfJS_windowInstall("Canvas",v72);PdfJS_windowInstall("document",{body:JAM.new(PdfJS_window.Element,["body"]),documentElement:JAM.new(PdfJS_window.Element,["document"]),createElement:v73,getElementById:v74,getElementsByTagName:v75,createEvent:v76});PdfJS_window.window.addEventListener=v77;
PdfJS_windowInstall("Worker",void 0);var PDFJS={},v20988;v20988="undefined"===typeof PdfJS_window.window?this:PdfJS_window.window;pdfjsWrapper.call(v20988);var completed=0,benchmarks=BenchmarkSuite.CountBenchmarks(),success=!0,latencyBenchmarks=["Splay","Mandreel"],v6226,skipBenchmarks=v6226="undefined"===typeof skipBenchmarks?[]:skipBenchmarks;

JAM.stopProfile('load');
