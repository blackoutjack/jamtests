
JAM.startProfile('load');
function v2226() {
  function v2225(a$$944, b$$831, c$$678) {
    function v2224(d$$505, e$$426) {
      var v2227;
      var v8949 = d$$505 === b$$831;
      if (v8949) {
        v2227 = e$$426;
      } else {
        v2227 = d$$505;
      }
      e$$426 = v2227;
      var v2228;
      if (a$$944) {
        introspect(JAM.policy.p3) {
          v2228 = a$$944(b$$831, e$$426, c$$678);
        }
      } else {
        introspect(JAM.policy.p3) {
          v2228 = b$$831.trigger("error", b$$831, e$$426, c$$678);
        }
      }
      v2228;
      return;
    }
    return v2224;
  }
  function v2223(a$$942, b$$830, c$$677) {
    function v2222(a$$943) {
      introspect(JAM.policy.p3) {
        a$$943.setRequestHeader("X-HTTP-Method-Override", d$$504);
      }
      return;
    }
    var d$$504 = H$$5[a$$942];
    var v8950 = !c$$677;
    if (v8950) {
      c$$677 = {};
    }
    var e$$425 = {type:d$$504, dataType:"json"};
    var v2229 = c$$677.url;
    var v8952 = !v2229;
    if (v8952) {
      var v8951 = e$$425;
      var v14874 = n$$110(b$$830, "url");
      var v20837 = !v14874;
      if (v20837) {
        v14874 = t$$33();
      }
      v8951.url = v14874;
    }
    var v20838 = c$$677.data;
    var v14875 = !v20838;
    if (v14875) {
      v14875 = b$$830;
    }
    var v8953 = v14875;
    if (v8953) {
      var v14876 = "create" == a$$942;
      var v20839 = !v14876;
      if (v20839) {
        v14876 = "update" == a$$942;
      }
      v8953 = v14876;
    }
    var v2230 = v8953;
    if (v2230) {
      e$$425.contentType = "application/json";
      var v8954 = e$$425;
      introspect(JAM.policy.p3) {
        var v14877 = b$$830.toJSON()
      }
      introspect(JAM.policy.p3) {
        var v30911 = JSON.stringify(v14877)
      }
      v8954.data = v30911;
    }
    var v2231 = g$$232.emulateJSON;
    if (v2231) {
      e$$425.contentType = "application/x-www-form-urlencoded";
      var v14878;
      var v20841 = e$$425.data;
      if (v20841) {
        var v20840 = e$$425.data;
        v14878 = {model:v20840};
      } else {
        v14878 = {};
      }
      e$$425.data = v14878;
    }
    var v8955 = g$$232.emulateHTTP;
    if (v8955) {
      var v14879 = "PUT" === d$$504;
      var v20842 = !v14879;
      if (v20842) {
        v14879 = "DELETE" === d$$504;
      }
      v8955 = v14879;
    }
    var v2232 = v8955;
    if (v2232) {
      var v14880 = g$$232.emulateJSON;
      if (v14880) {
        var v20843 = e$$425.data;
        v20843._method = d$$504;
      }
      e$$425.type = "POST";
      e$$425.beforeSend = v2222;
    }
    var v14881 = e$$425.type;
    var v8956 = "GET" !== v14881;
    if (v8956) {
      var v14882 = g$$232.emulateJSON;
      v8956 = !v14882;
    }
    var v2233 = v8956;
    if (v2233) {
      e$$425.processData = !1;
    }
    introspect(JAM.policy.p3) {
      var v2234 = f$$232.extend(e$$425, c$$677)
    }
    introspect(JAM.policy.p3) {
      return i$$241.ajax(v2234);
    }
  }
  function v2221(a$$941, b$$829) {
    var c$$676 = G$$5(this, a$$941, b$$829);
    c$$676.extend = this.extend;
    return c$$676;
  }
  function v2220() {
    var v2242 = this.el;
    if (v2242) {
      var v2235 = this.el;
      var v2236 = !1;
      introspect(JAM.policy.p3) {
        this.setElement(v2235, v2236);
      }
    } else {
      var v2237 = n$$110(this, "attributes");
      var v8957 = !v2237;
      if (v8957) {
        v2237 = {};
      }
      var a$$940 = v2237;
      var v2238 = this.id;
      if (v2238) {
        a$$940.id = this.id;
      }
      var v2239 = this.className;
      if (v2239) {
        a$$940["class"] = this.className;
      }
      var v8958 = this.tagName;
      introspect(JAM.policy.p3) {
        var v2240 = this.make(v8958, a$$940)
      }
      var v2241 = !1;
      introspect(JAM.policy.p3) {
        this.setElement(v2240, v2241);
      }
    }
    return;
  }
  function v2219(a$$939) {
    var v2243 = this.options;
    if (v2243) {
      var v8959 = this.options;
      introspect(JAM.policy.p3) {
        a$$939 = f$$232.extend({}, v8959, a$$939);
      }
    }
    var b$$828 = 0;
    var c$$675 = w$$21.length;
    var v2245 = b$$828 < c$$675;
    for (;v2245;) {
      var d$$503 = w$$21[b$$828];
      var v2244 = a$$939[d$$503];
      if (v2244) {
        introspect(JAM.policy.p2) {
          this[d$$503] = a$$939[d$$503];
        }
      }
      b$$828++;
      v2245 = b$$828 < c$$675;
    }
    this.options = a$$939;
    return;
  }
  function v2218() {
    var v2246 = this.$el;
    var v8960 = this.cid;
    var v2247 = ".delegateEvents" + v8960;
    introspect(JAM.policy.p3) {
      v2246.unbind(v2247);
    }
    return;
  }
  function v2217(a$$938) {
    var v8961 = a$$938;
    var v14883 = !v8961;
    if (v14883) {
      v8961 = a$$938 = n$$110(this, "events");
    }
    var v2253 = v8961;
    if (v2253) {
      introspect(JAM.policy.p3) {
        this.undelegateEvents();
      }
      var b$$827;
      for (b$$827 in a$$938) {
        var c$$674 = a$$938[b$$827];
        introspect(JAM.policy.p3) {
          var v2248 = f$$232.isFunction(c$$674)
        }
        var v8963 = !v2248;
        if (v8963) {
          var v8962 = a$$938[b$$827];
          c$$674 = this[v8962];
        }
        var v2250 = !c$$674;
        if (v2250) {
          var v14884 = a$$938[b$$827];
          var v8964 = 'Method "' + v14884;
          var v2249 = v8964 + '" does not exist';
          throw Error(v2249);
        }
        introspect(JAM.policy.p3) {
          var d$$502 = b$$827.match(F$$6)
        }
        var e$$424 = d$$502[1];
        d$$502 = d$$502[2];
        introspect(JAM.policy.p3) {
          c$$674 = f$$232.bind(c$$674, this);
        }
        var v8965 = this.cid;
        var v2251 = ".delegateEvents" + v8965;
        e$$424 = e$$424 + v2251;
        var v2252;
        var v8968 = "" === d$$502;
        if (v8968) {
          var v8966 = this.$el;
          introspect(JAM.policy.p3) {
            v2252 = v8966.bind(e$$424, c$$674);
          }
        } else {
          var v8967 = this.$el;
          introspect(JAM.policy.p3) {
            v2252 = v8967.delegate(d$$502, e$$424, c$$674);
          }
        }
        v2252;
      }
    }
    return;
  }
  function v2216(a$$937, b$$826) {
    var v2254 = this.$el;
    if (v2254) {
      introspect(JAM.policy.p3) {
        this.undelegateEvents();
      }
    }
    var v2255;
    var v8969 = a$$937 instanceof i$$241;
    if (v8969) {
      v2255 = a$$937;
    } else {
      introspect(JAM.policy.p3) {
        v2255 = i$$241(a$$937);
      }
    }
    this.$el = v2255;
    var v2256 = this.$el;
    this.el = v2256[0];
    var v8970 = !1;
    var v2257 = v8970 !== b$$826;
    if (v2257) {
      introspect(JAM.policy.p3) {
        this.delegateEvents();
      }
    }
    return this;
  }
  function v2215(a$$936, b$$825, c$$673) {
    introspect(JAM.policy.p3) {
      a$$936 = document.createElement(a$$936);
    }
    if (b$$825) {
      introspect(JAM.policy.p3) {
        var v8971 = i$$241(a$$936)
      }
      introspect(JAM.policy.p3) {
        v8971.attr(b$$825);
      }
    }
    if (c$$673) {
      introspect(JAM.policy.p3) {
        var v8972 = i$$241(a$$936)
      }
      introspect(JAM.policy.p3) {
        v8972.html(c$$673);
      }
    }
    return a$$936;
  }
  function v2214() {
    var v2258 = this.$el;
    introspect(JAM.policy.p3) {
      v2258.remove();
    }
    return this;
  }
  function v2213() {
    return this;
  }
  function v2212() {
    return;
  }
  function v2211(a$$935) {
    var v2259 = this.$el;
    introspect(JAM.policy.p3) {
      return v2259.find(a$$935);
    }
  }
  function v2210(a$$934) {
    introspect(JAM.policy.p3) {
      var v30912 = f$$232.uniqueId("view")
    }
    this.cid = v30912;
    var v2260 = a$$934 || {};
    introspect(JAM.policy.p3) {
      this._configure(v2260);
    }
    introspect(JAM.policy.p3) {
      this._ensureElement();
    }
    var v2261 = this.initialize;
    introspect(JAM.policy.p3) {
      v2261.apply(this, arguments);
    }
    introspect(JAM.policy.p3) {
      this.delegateEvents();
    }
    return;
  }
  function v2209(a$$933, b$$824, c$$672) {
    var v2262;
    if (c$$672) {
      introspect(JAM.policy.p3) {
        var v24024 = a$$933.toString()
      }
      introspect(JAM.policy.p3) {
        var v20844 = v24024.replace(/(javascript:|#).*$/, "")
      }
      var v14885 = v20844 + "#";
      var v8973 = v14885 + b$$824;
      introspect(JAM.policy.p3) {
        v2262 = a$$933.replace(v8973);
      }
    } else {
      v2262 = a$$933.hash = b$$824;
    }
    v2262;
    return;
  }
  function v2208(a$$932, b$$823) {
    var v8974 = m$$64.started;
    var v2263 = !v8974;
    if (v2263) {
      return !1;
    }
    var v8975 = !b$$823;
    var v14887 = !v8975;
    if (v14887) {
      var v14886 = !0;
      v8975 = v14886 === b$$823;
    }
    var v2264 = v8975;
    if (v2264) {
      b$$823 = {trigger:b$$823};
    }
    var v2265 = a$$932 || "";
    introspect(JAM.policy.p3) {
      var c$$671 = v2265.replace(s$$36, "")
    }
    var v8976 = this.fragment;
    var v2266 = v8976 != c$$671;
    if (v2266) {
      var v14888;
      var v20846 = this._hasPushState;
      if (v20846) {
        var v29319 = this.options;
        var v28681 = v29319.root;
        introspect(JAM.policy.p3) {
          var v27722 = c$$671.indexOf(v28681)
        }
        var v26198 = 0 != v27722;
        if (v26198) {
          var v28682 = this.options;
          var v27723 = v28682.root;
          c$$671 = v27723 + c$$671;
        }
        this.fragment = c$$671;
        var v24025 = window.history;
        var v26199;
        var v27724 = b$$823.replace;
        if (v27724) {
          v26199 = "replaceState";
        } else {
          v26199 = "pushState";
        }
        var v24026 = v26199;
        var v24027 = document.title;
        introspect(JAM.policy.p3) {
          v14888 = v24025[v24026]({}, v24027, c$$671);
        }
      } else {
        var v20845;
        var v24030 = this._wantsHashChange;
        if (v24030) {
          this.fragment = c$$671;
          var v27725 = window.location;
          var v27726 = b$$823.replace;
          introspect(JAM.policy.p3) {
            this._updateHash(v27725, c$$671, v27726);
          }
          var v27727 = this.iframe;
          if (v27727) {
            var v29723 = this.iframe;
            introspect(JAM.policy.p3) {
              var v29320 = this.getHash(v29723)
            }
            introspect(JAM.policy.p3) {
              var v28683 = this.getFragment(v29320)
            }
            v27727 = c$$671 != v28683;
          }
          var v26200 = v27727;
          if (v26200) {
            var v28684 = b$$823.replace;
            var v29322 = !v28684;
            if (v29322) {
              var v29988 = this.iframe;
              var v29724 = v29988.document;
              introspect(JAM.policy.p3) {
                var v29321 = v29724.open()
              }
              introspect(JAM.policy.p3) {
                v29321.close();
              }
            }
            var v29323 = this.iframe;
            var v28685 = v29323.location;
            var v28686 = b$$823.replace;
            introspect(JAM.policy.p3) {
              v26200 = this._updateHash(v28685, c$$671, v28686);
            }
          }
          v20845 = v26200;
        } else {
          var v24028 = window.location;
          var v27728 = this.options;
          var v26201 = v27728.root;
          var v24029 = v26201 + a$$932;
          introspect(JAM.policy.p3) {
            v20845 = v24028.assign(v24029);
          }
        }
        v14888 = v20845;
      }
      v14888;
      var v14889 = b$$823.trigger;
      if (v14889) {
        introspect(JAM.policy.p3) {
          this.loadUrl(a$$932);
        }
      }
    }
    return;
  }
  function v2207(a$$930) {
    function v2206(a$$931) {
      var v8977 = a$$931.route;
      introspect(JAM.policy.p3) {
        var v2267 = v8977.test(b$$822)
      }
      if (v2267) {
        introspect(JAM.policy.p3) {
          a$$931.callback(b$$822);
        }
        return !0;
      }
      return;
    }
    introspect(JAM.policy.p3) {
      var v30913 = this.getFragment(a$$930)
    }
    var b$$822 = this.fragment = v30913;
    var v2268 = this.handlers;
    introspect(JAM.policy.p3) {
      return f$$232.any(v2268, v2206);
    }
  }
  function v2205() {
    introspect(JAM.policy.p3) {
      var a$$929 = this.getFragment()
    }
    var v14890 = this.fragment;
    var v8978 = a$$929 == v14890;
    if (v8978) {
      v8978 = this.iframe;
    }
    var v2269 = v8978;
    if (v2269) {
      var v14891 = this.iframe;
      introspect(JAM.policy.p3) {
        var v8979 = this.getHash(v14891)
      }
      introspect(JAM.policy.p3) {
        a$$929 = this.getFragment(v8979);
      }
    }
    var v8980 = this.fragment;
    var v2270 = a$$929 == v8980;
    if (v2270) {
      return !1;
    }
    var v2271 = this.iframe;
    if (v2271) {
      introspect(JAM.policy.p3) {
        this.navigate(a$$929);
      }
    }
    introspect(JAM.policy.p3) {
      var v2272 = this.loadUrl()
    }
    var v8982 = !v2272;
    if (v8982) {
      introspect(JAM.policy.p3) {
        var v8981 = this.getHash()
      }
      introspect(JAM.policy.p3) {
        this.loadUrl(v8981);
      }
    }
    return;
  }
  function v2204(a$$928, b$$821) {
    var v2273 = this.handlers;
    var v2274 = {route:a$$928, callback:b$$821};
    introspect(JAM.policy.p3) {
      v2273.unshift(v2274);
    }
    return;
  }
  function v2203() {
    introspect(JAM.policy.p3) {
      var v8983 = i$$241(window)
    }
    var v8984 = this.checkUrl;
    introspect(JAM.policy.p3) {
      var v2275 = v8983.unbind("popstate", v8984)
    }
    var v2276 = this.checkUrl;
    introspect(JAM.policy.p3) {
      v2275.unbind("hashchange", v2276);
    }
    var v2277 = this._checkUrlInterval;
    clearInterval(v2277);
    m$$64.started = !1;
    return;
  }
  function v2202(a$$927) {
    var v2278 = m$$64.started;
    if (v2278) {
      throw Error("Backbone.history has already been started");
    }
    m$$64.started = !0;
    var v2279 = {root:"/"};
    var v2280 = this.options;
    introspect(JAM.policy.p3) {
      var v30914 = f$$232.extend({}, v2279, v2280, a$$927)
    }
    this.options = v30914;
    var v2281 = !1;
    var v8985 = this.options;
    var v2282 = v8985.hashChange;
    this._wantsHashChange = v2281 !== v2282;
    var v14892 = this.options;
    var v8986 = v14892.pushState;
    var v2283 = !v8986;
    this._wantsPushState = !v2283;
    var v24031 = this.options;
    var v20847 = v24031.pushState;
    var v14893 = !v20847;
    var v20849 = !v14893;
    if (v20849) {
      var v20848 = window.history;
      v14893 = !v20848;
    }
    var v8987 = v14893;
    var v14895 = !v8987;
    if (v14895) {
      var v20850 = window.history;
      var v14894 = v20850.pushState;
      v8987 = !v14894;
    }
    var v2284 = v8987;
    this._hasPushState = !v2284;
    introspect(JAM.policy.p3) {
      a$$927 = this.getFragment();
    }
    var b$$820 = document.documentMode;
    var v20851 = navigator.userAgent;
    introspect(JAM.policy.p3) {
      var v14896 = v20851.toLowerCase()
    }
    introspect(JAM.policy.p3) {
      var v8988 = E$$6.exec(v14896)
    }
    if (v8988) {
      var v14897 = !b$$820;
      var v20852 = !v14897;
      if (v20852) {
        v14897 = 7 >= b$$820;
      }
      v8988 = v14897;
    }
    var v2285 = b$$820 = v8988;
    if (v2285) {
      introspect(JAM.policy.p3) {
        var v24032 = i$$241('<iframe src="javascript:0" tabindex="-1" />')
      }
      introspect(JAM.policy.p3) {
        var v20853 = v24032.hide()
      }
      introspect(JAM.policy.p3) {
        var v14898 = v20853.appendTo("body")
      }
      var v8989 = v14898[0];
      this.iframe = v8989.contentWindow;
      introspect(JAM.policy.p3) {
        this.navigate(a$$927);
      }
    }
    var v2286;
    var v8993 = this._hasPushState;
    if (v8993) {
      introspect(JAM.policy.p3) {
        var v8990 = i$$241(window)
      }
      var v8991 = this.checkUrl;
      introspect(JAM.policy.p3) {
        v2286 = v8990.bind("popstate", v8991);
      }
    } else {
      var v8992;
      var v24033 = this._wantsHashChange;
      if (v24033) {
        v24033 = "onhashchange" in window;
      }
      var v20854 = v24033;
      if (v20854) {
        v20854 = !b$$820;
      }
      var v14902 = v20854;
      if (v14902) {
        introspect(JAM.policy.p3) {
          var v14899 = i$$241(window)
        }
        var v14900 = this.checkUrl;
        introspect(JAM.policy.p3) {
          v8992 = v14899.bind("hashchange", v14900);
        }
      } else {
        var v14901 = this._wantsHashChange;
        if (v14901) {
          var v20855 = this.checkUrl;
          var v20856 = this.interval;
          var v30915 = setInterval(v20855, v20856);
          v14901 = this._checkUrlInterval = v30915;
        }
        v8992 = v14901;
      }
      v2286 = v8992;
    }
    v2286;
    this.fragment = a$$927;
    a$$927 = window.location;
    var v2287 = a$$927.pathname;
    var v8994 = this.options;
    var v2288 = v8994.root;
    b$$820 = v2287 == v2288;
    var v20857 = this._wantsHashChange;
    if (v20857) {
      v20857 = this._wantsPushState;
    }
    var v14903 = v20857;
    if (v14903) {
      var v20858 = this._hasPushState;
      v14903 = !v20858;
    }
    var v8995 = v14903;
    if (v8995) {
      v8995 = !b$$820;
    }
    var v2289 = v8995;
    if (v2289) {
      var v14904 = !0;
      introspect(JAM.policy.p3) {
        var v30916 = this.getFragment(null, v14904)
      }
      this.fragment = v30916;
      var v14905 = window.location;
      var v26202 = this.options;
      var v24034 = v26202.root;
      var v20859 = v24034 + "#";
      var v20860 = this.fragment;
      var v14906 = v20859 + v20860;
      introspect(JAM.policy.p3) {
        v14905.replace(v14906);
      }
      return !0;
    }
    var v20861 = this._wantsPushState;
    if (v20861) {
      v20861 = this._hasPushState;
    }
    var v14907 = v20861;
    if (v14907) {
      v14907 = b$$820;
    }
    var v8996 = v14907;
    if (v8996) {
      v8996 = a$$927.hash;
    }
    var v2290 = v8996;
    if (v2290) {
      introspect(JAM.policy.p3) {
        var v14908 = this.getHash()
      }
      introspect(JAM.policy.p3) {
        var v30917 = v14908.replace(s$$36, "")
      }
      this.fragment = v30917;
      var v14909 = window.history;
      var v14910 = document.title;
      var v27729 = a$$927.protocol;
      var v26203 = v27729 + "//";
      var v26204 = a$$927.host;
      var v24035 = v26203 + v26204;
      var v26205 = this.options;
      var v24036 = v26205.root;
      var v20862 = v24035 + v24036;
      var v20863 = this.fragment;
      var v14911 = v20862 + v20863;
      introspect(JAM.policy.p3) {
        v14909.replaceState({}, v14910, v14911);
      }
    }
    var v14912 = this.options;
    var v8997 = v14912.silent;
    var v2291 = !v8997;
    if (v2291) {
      introspect(JAM.policy.p3) {
        return this.loadUrl();
      }
    }
    return;
  }
  function v2201(a$$926, b$$819) {
    var v2295 = null == a$$926;
    if (v2295) {
      var v8998 = this._hasPushState;
      var v14913 = !v8998;
      if (v14913) {
        v8998 = b$$819;
      }
      var v2294 = v8998;
      if (v2294) {
        var v2292 = window.location;
        a$$926 = v2292.pathname;
        var v2293 = window.location;
        var c$$670 = v2293.search;
        if (c$$670) {
          a$$926 = a$$926 + c$$670;
        }
      } else {
        introspect(JAM.policy.p3) {
          a$$926 = this.getHash();
        }
      }
    }
    var v14914 = this.options;
    var v8999 = v14914.root;
    introspect(JAM.policy.p3) {
      var v2296 = a$$926.indexOf(v8999)
    }
    var v9001 = !v2296;
    if (v9001) {
      var v20864 = this.options;
      var v14915 = v20864.root;
      var v9000 = v14915.length;
      introspect(JAM.policy.p3) {
        a$$926 = a$$926.substr(v9000);
      }
    }
    introspect(JAM.policy.p3) {
      return a$$926.replace(s$$36, "");
    }
  }
  function v2200(a$$925) {
    var v2297;
    var v24037;
    if (a$$925) {
      v24037 = a$$925.location;
    } else {
      v24037 = window.location;
    }
    var v20865 = v24037;
    var v14916 = v20865.href;
    introspect(JAM.policy.p3) {
      var v9002 = a$$925 = v14916.match(/#(.*)$/)
    }
    if (v9002) {
      v2297 = a$$925[1];
    } else {
      v2297 = "";
    }
    return v2297;
  }
  function v2199() {
    this.handlers = [];
    introspect(JAM.policy.p3) {
      f$$232.bindAll(this, "checkUrl");
    }
    return;
  }
  function v2198(a$$924, b$$818) {
    introspect(JAM.policy.p3) {
      var v2298 = a$$924.exec(b$$818)
    }
    introspect(JAM.policy.p3) {
      return v2298.slice(1);
    }
  }
  function v2197(a$$923) {
    introspect(JAM.policy.p3) {
      var v9003 = a$$923.replace(D$$6, "\\$&")
    }
    introspect(JAM.policy.p3) {
      var v2299 = v9003.replace(B$$7, "([^/]+)")
    }
    introspect(JAM.policy.p3) {
      a$$923 = v2299.replace(C$$6, "(.*?)");
    }
    var v9004 = "^" + a$$923;
    var v2300 = v9004 + "$";
    return RegExp(v2300);
  }
  function v2196() {
    var v2307 = this.routes;
    if (v2307) {
      var a$$922 = [];
      var b$$817;
      var v2302 = this.routes;
      for (b$$817 in v2302) {
        var v14917 = this.routes;
        var v9005 = v14917[b$$817];
        var v2301 = [b$$817, v9005];
        introspect(JAM.policy.p3) {
          a$$922.unshift(v2301);
        }
      }
      b$$817 = 0;
      var c$$669 = a$$922.length;
      var v2306 = b$$817 < c$$669;
      for (;v2306;) {
        var v9006 = a$$922[b$$817];
        var v2303 = v9006[0];
        var v9007 = a$$922[b$$817];
        var v2304 = v9007[1];
        var v14918 = a$$922[b$$817];
        var v9008 = v14918[1];
        var v2305 = this[v9008];
        introspect(JAM.policy.p3) {
          this.route(v2303, v2304, v2305);
        }
        b$$817++;
        v2306 = b$$817 < c$$669;
      }
    }
    return;
  }
  function v2195(a$$921, b$$816) {
    var v2308 = g$$232.history;
    introspect(JAM.policy.p3) {
      v2308.navigate(a$$921, b$$816);
    }
    return;
  }
  function v2194(a$$920, b$$815, c$$668) {
    function v2193(d$$501) {
      introspect(JAM.policy.p3) {
        d$$501 = this._extractParameters(a$$920, d$$501);
      }
      if (c$$668) {
        introspect(JAM.policy.p3) {
          c$$668.apply(this, d$$501);
        }
      }
      var v2309 = this.trigger;
      var v14919 = "route:" + b$$815;
      var v9009 = [v14919];
      introspect(JAM.policy.p3) {
        var v2310 = v9009.concat(d$$501)
      }
      introspect(JAM.policy.p3) {
        v2309.apply(this, v2310);
      }
      var v2311 = g$$232.history;
      introspect(JAM.policy.p3) {
        v2311.trigger("route", this, b$$815, d$$501);
      }
      return;
    }
    var v2312 = g$$232.history;
    var v9011 = !v2312;
    if (v9011) {
      var v9010 = g$$232;
      var v30918 = new m$$64;
      v9010.history = v30918;
    }
    introspect(JAM.policy.p3) {
      var v2313 = f$$232.isRegExp(a$$920)
    }
    var v9012 = !v2313;
    if (v9012) {
      introspect(JAM.policy.p3) {
        a$$920 = this._routeToRegExp(a$$920);
      }
    }
    var v9013 = !c$$668;
    if (v9013) {
      c$$668 = this[b$$815];
    }
    var v2314 = g$$232.history;
    introspect(JAM.policy.p3) {
      var v2315 = f$$232.bind(v2193, this)
    }
    introspect(JAM.policy.p3) {
      v2314.route(a$$920, v2315);
    }
    return this;
  }
  function v2192() {
    return;
  }
  function v2191(a$$919) {
    var v9014 = !a$$919;
    if (v9014) {
      a$$919 = {};
    }
    var v2316 = a$$919.routes;
    if (v2316) {
      this.routes = a$$919.routes;
    }
    introspect(JAM.policy.p3) {
      this._bindRoutes();
    }
    var v2317 = this.initialize;
    introspect(JAM.policy.p3) {
      v2317.apply(this, arguments);
    }
    return;
  }
  function v2190(a$$918) {
    function v2189() {
      var v2318 = f$$232[a$$918];
      var v14920 = this.models;
      var v9015 = [v14920];
      introspect(JAM.policy.p3) {
        var v9016 = f$$232.toArray(arguments)
      }
      introspect(JAM.policy.p3) {
        var v2319 = v9015.concat(v9016)
      }
      introspect(JAM.policy.p3) {
        return v2318.apply(f$$232, v2319);
      }
    }
    var v2320 = r$$32.prototype;
    introspect(JAM.policy.p2) {
      v2320[a$$918] = v2189;
    }
    return;
  }
  function v2188(a$$917, b$$814, c$$667, d$$500) {
    var v14921 = "add" == a$$917;
    var v20866 = !v14921;
    if (v20866) {
      v14921 = "remove" == a$$917;
    }
    var v9017 = v14921;
    if (v9017) {
      v9017 = c$$667 != this;
    }
    var v2321 = v9017;
    var v9018 = !v2321;
    if (v9018) {
      var v20867 = "destroy" == a$$917;
      if (v20867) {
        introspect(JAM.policy.p3) {
          this.remove(b$$814, d$$500);
        }
      }
      var v24038 = b$$814;
      if (v24038) {
        var v27730 = b$$814.idAttribute;
        var v26206 = "change:" + v27730;
        v24038 = a$$917 === v26206;
      }
      var v20868 = v24038;
      if (v20868) {
        var v26207 = this._byId;
        var v27731 = b$$814.idAttribute;
        introspect(JAM.policy.p3) {
          var v26208 = b$$814.previous(v27731)
        }
        delete v26207[v26208];
        var v26209 = this._byId;
        var v26210 = b$$814.id;
        introspect(JAM.policy.p2) {
          v26209[v26210] = b$$814;
        }
      }
      var v14922 = this.trigger;
      introspect(JAM.policy.p3) {
        v14922.apply(this, arguments);
      }
    }
    return;
  }
  function v2187(a$$916) {
    var v9019 = a$$916.collection;
    var v2322 = this == v9019;
    if (v2322) {
      delete a$$916.collection;
    }
    var v2323 = this._onModelEvent;
    introspect(JAM.policy.p3) {
      a$$916.off("all", v2323, this);
    }
    return;
  }
  function v2186(a$$915, b$$813) {
    var v9020 = !b$$813;
    if (v9020) {
      b$$813 = {};
    }
    var v2324;
    var v9022 = a$$915 instanceof o$$42;
    if (v9022) {
      var v9021 = a$$915.collection;
      var v14923 = !v9021;
      if (v14923) {
        v9021 = a$$915.collection = this;
      }
      v2324 = v9021;
    } else {
      b$$813.collection = this;
      var v20869 = this.model;
      a$$915 = new v20869(a$$915, b$$813);
      var v20870 = a$$915.attributes;
      introspect(JAM.policy.p3) {
        var v14924 = a$$915._validate(v20870, b$$813)
      }
      var v20871 = !v14924;
      if (v20871) {
        v14924 = a$$915 = !1;
      }
      v2324 = v14924;
    }
    v2324;
    return a$$915;
  }
  function v2185() {
    this.length = 0;
    this.models = [];
    this._byId = {};
    this._byCid = {};
    return;
  }
  function v2184() {
    var v9023 = this.models;
    introspect(JAM.policy.p3) {
      var v2325 = f$$232(v9023)
    }
    introspect(JAM.policy.p3) {
      return v2325.chain();
    }
  }
  function v2183(a$$914) {
    return a$$914;
  }
  function v2182(a$$913, b$$812) {
    function v2181(e$$423, f$$237) {
      var v2326 = b$$812.wait;
      if (v2326) {
        introspect(JAM.policy.p3) {
          c$$666.add(e$$423, b$$812);
        }
      }
      var v2327;
      if (d$$499) {
        introspect(JAM.policy.p3) {
          v2327 = d$$499(e$$423, f$$237);
        }
      } else {
        introspect(JAM.policy.p3) {
          v2327 = e$$423.trigger("sync", a$$913, f$$237, b$$812);
        }
      }
      v2327;
      return;
    }
    var c$$666 = this;
    var v2328;
    if (b$$812) {
      introspect(JAM.policy.p3) {
        v2328 = f$$232.clone(b$$812);
      }
    } else {
      v2328 = {};
    }
    b$$812 = v2328;
    introspect(JAM.policy.p3) {
      a$$913 = this._prepareModel(a$$913, b$$812);
    }
    var v2329 = !a$$913;
    if (v2329) {
      return !1;
    }
    var v2330 = b$$812.wait;
    var v9024 = !v2330;
    if (v9024) {
      introspect(JAM.policy.p3) {
        c$$666.add(a$$913, b$$812);
      }
    }
    var d$$499 = b$$812.success;
    b$$812.success = v2181;
    introspect(JAM.policy.p3) {
      a$$913.save(null, b$$812);
    }
    return a$$913;
  }
  function v2180(a$$912) {
    function v2179(d$$498, e$$422, f$$236) {
      var v9025;
      var v14925 = a$$912.add;
      if (v14925) {
        v9025 = "add";
      } else {
        v9025 = "reset";
      }
      var v2331 = v9025;
      introspect(JAM.policy.p3) {
        var v2332 = b$$811.parse(d$$498, f$$236)
      }
      introspect(JAM.policy.p3) {
        b$$811[v2331](v2332, a$$912);
      }
      if (c$$665) {
        introspect(JAM.policy.p3) {
          c$$665(b$$811, d$$498);
        }
      }
      return;
    }
    var v2333;
    if (a$$912) {
      introspect(JAM.policy.p3) {
        v2333 = f$$232.clone(a$$912);
      }
    } else {
      v2333 = {};
    }
    a$$912 = v2333;
    var v9026 = void 0;
    var v9027 = a$$912.parse;
    var v2334 = v9026 === v9027;
    if (v2334) {
      a$$912.parse = !0;
    }
    var b$$811 = this;
    var c$$665 = a$$912.success;
    a$$912.success = v2179;
    var v2335 = a$$912;
    var v9028 = a$$912.error;
    introspect(JAM.policy.p3) {
      var v30919 = g$$232.wrapError(v9028, b$$811, a$$912)
    }
    v2335.error = v30919;
    var v9029 = this.sync;
    var v14926 = !v9029;
    if (v14926) {
      v9029 = g$$232.sync;
    }
    var v2336 = v9029;
    introspect(JAM.policy.p3) {
      return v2336.call(this, "read", this, a$$912);
    }
  }
  function v2178(a$$911, b$$810) {
    var v9030 = !a$$911;
    if (v9030) {
      a$$911 = [];
    }
    var v9031 = !b$$810;
    if (v9031) {
      b$$810 = {};
    }
    var c$$664 = 0;
    var v2337 = this.models;
    var d$$497 = v2337.length;
    var v2339 = c$$664 < d$$497;
    for (;v2339;) {
      var v9032 = this.models;
      var v2338 = v9032[c$$664];
      introspect(JAM.policy.p3) {
        this._removeReference(v2338);
      }
      c$$664++;
      v2339 = c$$664 < d$$497;
    }
    introspect(JAM.policy.p3) {
      this._reset();
    }
    var v14927 = !0;
    var v9033 = {silent:v14927};
    introspect(JAM.policy.p3) {
      var v2340 = f$$232.extend(v9033, b$$810)
    }
    introspect(JAM.policy.p3) {
      this.add(a$$911, v2340);
    }
    var v2341 = b$$810.silent;
    var v9034 = !v2341;
    if (v9034) {
      introspect(JAM.policy.p3) {
        this.trigger("reset", this, b$$810);
      }
    }
    return this;
  }
  function v2177(a$$910) {
    function v2176(b$$809) {
      introspect(JAM.policy.p3) {
        return b$$809.get(a$$910);
      }
    }
    var v2342 = this.models;
    introspect(JAM.policy.p3) {
      return f$$232.map(v2342, v2176);
    }
  }
  function v2175(a$$909) {
    var v9035 = !a$$909;
    if (v9035) {
      a$$909 = {};
    }
    var v9036 = this.comparator;
    var v2343 = !v9036;
    if (v2343) {
      throw Error("Cannot sort a set without a comparator");
    }
    var v2344 = this.comparator;
    introspect(JAM.policy.p3) {
      var b$$808 = f$$232.bind(v2344, this)
    }
    var v2345;
    var v20872 = this.comparator;
    var v14928 = v20872.length;
    var v9038 = 1 == v14928;
    if (v9038) {
      introspect(JAM.policy.p3) {
        var v30920 = this.sortBy(b$$808)
      }
      v2345 = this.models = v30920;
    } else {
      var v9037 = this.models;
      introspect(JAM.policy.p3) {
        v2345 = v9037.sort(b$$808);
      }
    }
    v2345;
    var v2346 = a$$909.silent;
    var v9039 = !v2346;
    if (v9039) {
      introspect(JAM.policy.p3) {
        this.trigger("reset", this, a$$909);
      }
    }
    return this;
  }
  function v2174(a$$908) {
    function v2173(b$$807) {
      var c$$663;
      for (c$$663 in a$$908) {
        var v9040 = a$$908[c$$663];
        introspect(JAM.policy.p3) {
          var v9041 = b$$807.get(c$$663)
        }
        var v2347 = v9040 !== v9041;
        if (v2347) {
          return !1;
        }
      }
      return !0;
    }
    var v2348;
    introspect(JAM.policy.p3) {
      var v9042 = f$$232.isEmpty(a$$908)
    }
    if (v9042) {
      v2348 = [];
    } else {
      introspect(JAM.policy.p3) {
        v2348 = this.filter(v2173);
      }
    }
    return v2348;
  }
  function v2172(a$$907) {
    var v2349 = this.models;
    return v2349[a$$907];
  }
  function v2171(a$$906) {
    var v2350 = a$$906;
    if (v2350) {
      var v9043 = this._byCid;
      var v14929 = a$$906.cid;
      var v20873 = !v14929;
      if (v20873) {
        v14929 = a$$906;
      }
      var v9044 = v14929;
      v2350 = v9043[v9044];
    }
    return v2350;
  }
  function v2170(a$$905) {
    var v2351;
    var v9047 = null == a$$905;
    if (v9047) {
      v2351 = void 0;
    } else {
      var v9045 = this._byId;
      var v14930;
      var v24039 = a$$905.id;
      var v20874 = null != v24039;
      if (v20874) {
        v14930 = a$$905.id;
      } else {
        v14930 = a$$905;
      }
      var v9046 = v14930;
      v2351 = v9045[v9046];
    }
    return v2351;
  }
  function v2169(a$$904) {
    introspect(JAM.policy.p3) {
      var b$$806 = this.at(0)
    }
    introspect(JAM.policy.p3) {
      this.remove(b$$806, a$$904);
    }
    return b$$806;
  }
  function v2168(a$$903, b$$805) {
    introspect(JAM.policy.p3) {
      a$$903 = this._prepareModel(a$$903, b$$805);
    }
    var v9048 = {at:0};
    introspect(JAM.policy.p3) {
      var v2352 = f$$232.extend(v9048, b$$805)
    }
    introspect(JAM.policy.p3) {
      this.add(a$$903, v2352);
    }
    return a$$903;
  }
  function v2167(a$$902) {
    var v9049 = this.length;
    var v2353 = v9049 - 1;
    introspect(JAM.policy.p3) {
      var b$$804 = this.at(v2353)
    }
    introspect(JAM.policy.p3) {
      this.remove(b$$804, a$$902);
    }
    return b$$804;
  }
  function v2166(a$$901, b$$803) {
    introspect(JAM.policy.p3) {
      a$$901 = this._prepareModel(a$$901, b$$803);
    }
    introspect(JAM.policy.p3) {
      this.add(a$$901, b$$803);
    }
    return a$$901;
  }
  function v2165(a$$900, b$$802) {
    var c$$662;
    var d$$496;
    var e$$421;
    var g$$238;
    var v9050 = !b$$802;
    if (v9050) {
      b$$802 = {};
    }
    var v2354;
    introspect(JAM.policy.p3) {
      var v9051 = f$$232.isArray(a$$900)
    }
    if (v9051) {
      introspect(JAM.policy.p3) {
        v2354 = a$$900.slice();
      }
    } else {
      v2354 = [a$$900];
    }
    a$$900 = v2354;
    c$$662 = 0;
    d$$496 = a$$900.length;
    var v2356 = c$$662 < d$$496;
    for (;v2356;) {
      var v14931 = a$$900[c$$662];
      introspect(JAM.policy.p3) {
        var v9052 = this.getByCid(v14931)
      }
      var v14933 = !v9052;
      if (v14933) {
        var v14932 = a$$900[c$$662];
        introspect(JAM.policy.p3) {
          v9052 = this.get(v14932);
        }
      }
      var v2355 = g$$238 = v9052;
      if (v2355) {
        var v27732 = this._byId;
        var v27733 = g$$238.id;
        delete v27732[v27733];
        var v27734 = this._byCid;
        var v27735 = g$$238.cid;
        delete v27734[v27735];
        introspect(JAM.policy.p3) {
          e$$421 = this.indexOf(g$$238);
        }
        var v24040 = this.models;
        introspect(JAM.policy.p3) {
          v24040.splice(e$$421, 1);
        }
        this.length--;
        var v14934 = b$$802.silent;
        var v20875 = !v14934;
        if (v20875) {
          b$$802.index = e$$421;
          introspect(JAM.policy.p3) {
            g$$238.trigger("remove", g$$238, this, b$$802);
          }
        }
        introspect(JAM.policy.p3) {
          this._removeReference(g$$238);
        }
      }
      c$$662++;
      v2356 = c$$662 < d$$496;
    }
    return this;
  }
  function v2164(a$$899, b$$801) {
    var c$$661;
    var d$$495;
    var e$$420;
    var g$$237;
    var i$$243;
    var j$$130 = {};
    var k$$94 = {};
    var l$$98 = [];
    var v9053 = !b$$801;
    if (v9053) {
      b$$801 = {};
    }
    var v2357;
    introspect(JAM.policy.p3) {
      var v9054 = f$$232.isArray(a$$899)
    }
    if (v9054) {
      introspect(JAM.policy.p3) {
        v2357 = a$$899.slice();
      }
    } else {
      v2357 = [a$$899];
    }
    a$$899 = v2357;
    c$$661 = 0;
    d$$495 = a$$899.length;
    var v2360 = c$$661 < d$$495;
    for (;v2360;) {
      var v14935 = a$$899[c$$661];
      introspect(JAM.policy.p3) {
        var v30921 = this._prepareModel(v14935, b$$801)
      }
      introspect(JAM.policy.p2) {
        var v9055 = e$$420 = a$$899[c$$661] = v30921
      }
      var v2358 = !v9055;
      if (v2358) {
        throw Error("Can't add an invalid model to a collection");
      }
      g$$237 = e$$420.cid;
      i$$243 = e$$420.id;
      var v2359;
      var v20876 = j$$130[g$$237];
      var v24042 = !v20876;
      if (v24042) {
        var v24041 = this._byCid;
        v20876 = v24041[g$$237];
      }
      var v14936 = v20876;
      var v20878 = !v14936;
      if (v20878) {
        var v20877 = null != i$$243;
        if (v20877) {
          var v24043 = k$$94[i$$243];
          var v26212 = !v24043;
          if (v26212) {
            var v26211 = this._byId;
            v24043 = v26211[i$$243];
          }
          v20877 = v24043;
        }
        v14936 = v20877;
      }
      var v9056 = v14936;
      if (v9056) {
        introspect(JAM.policy.p3) {
          v2359 = l$$98.push(c$$661);
        }
      } else {
        introspect(JAM.policy.p2) {
          v2359 = j$$130[g$$237] = k$$94[i$$243] = e$$420;
        }
      }
      v2359;
      c$$661++;
      v2360 = c$$661 < d$$495;
    }
    c$$661 = l$$98.length;
    var v2362 = c$$661;
    c$$661 = c$$661 - 1;
    for (;v2362;) {
      var v2361 = l$$98[c$$661];
      introspect(JAM.policy.p3) {
        a$$899.splice(v2361, 1);
      }
      v2362 = c$$661;
      c$$661 = c$$661 - 1;
    }
    c$$661 = 0;
    d$$495 = a$$899.length;
    var v2363 = c$$661 < d$$495;
    for (;v2363;) {
      var v14937 = e$$420 = a$$899[c$$661];
      var v14938 = this._onModelEvent;
      introspect(JAM.policy.p3) {
        v14937.on("all", v14938, this);
      }
      var v14939 = this._byCid;
      var v14940 = e$$420.cid;
      introspect(JAM.policy.p2) {
        v14939[v14940] = e$$420;
      }
      var v14941 = e$$420.id;
      var v9057 = null != v14941;
      if (v9057) {
        var v14942 = this._byId;
        var v14943 = e$$420.id;
        introspect(JAM.policy.p2) {
          v14942[v14943] = e$$420;
        }
      }
      c$$661++;
      v2363 = c$$661 < d$$495;
    }
    var v9058 = this.length;
    this.length = v9058 + d$$495;
    var v2364 = this.models;
    var v20879;
    var v26213 = b$$801.at;
    var v24045 = null != v26213;
    if (v24045) {
      v20879 = b$$801.at;
    } else {
      var v24044 = this.models;
      v20879 = v24044.length;
    }
    var v14944 = v20879;
    var v9059 = [v14944, 0];
    introspect(JAM.policy.p3) {
      var v2365 = v9059.concat(a$$899)
    }
    introspect(JAM.policy.p3) {
      A$$7.apply(v2364, v2365);
    }
    var v2366 = this.comparator;
    if (v2366) {
      var v14945 = !0;
      var v9060 = {silent:v14945};
      introspect(JAM.policy.p3) {
        this.sort(v9060);
      }
    }
    var v2367 = b$$801.silent;
    if (v2367) {
      return this;
    }
    c$$661 = 0;
    var v2368 = this.models;
    d$$495 = v2368.length;
    var v2370 = c$$661 < d$$495;
    for (;v2370;) {
      var v20880 = this.models;
      var v14946 = e$$420 = v20880[c$$661];
      var v9061 = v14946.cid;
      var v2369 = j$$130[v9061];
      if (v2369) {
        b$$801.index = c$$661;
        introspect(JAM.policy.p3) {
          e$$420.trigger("add", e$$420, this, b$$801);
        }
      }
      c$$661++;
      v2370 = c$$661 < d$$495;
    }
    return this;
  }
  function v2163(a$$898) {
    function v2162(b$$800) {
      introspect(JAM.policy.p3) {
        return b$$800.toJSON(a$$898);
      }
    }
    introspect(JAM.policy.p3) {
      return this.map(v2162);
    }
  }
  function v2161() {
    return;
  }
  function v2160(a$$897, b$$799) {
    var v9062 = !b$$799;
    if (v9062) {
      b$$799 = {};
    }
    var v2371 = b$$799.model;
    if (v2371) {
      this.model = b$$799.model;
    }
    var v2372 = b$$799.comparator;
    if (v2372) {
      this.comparator = b$$799.comparator;
    }
    introspect(JAM.policy.p3) {
      this._reset();
    }
    var v2373 = this.initialize;
    introspect(JAM.policy.p3) {
      v2373.apply(this, arguments);
    }
    if (a$$897) {
      var v14947 = !0;
      var v14948 = b$$799.parse;
      var v9063 = {silent:v14947, parse:v14948};
      introspect(JAM.policy.p3) {
        this.reset(a$$897, v9063);
      }
    }
    return;
  }
  function v2159(a$$896, b$$798) {
    var v9064 = b$$798.silent;
    var v14950 = !v9064;
    if (v14950) {
      var v14949 = this.validate;
      v9064 = !v14949;
    }
    var v2374 = v9064;
    if (v2374) {
      return !0;
    }
    var v2375 = this.attributes;
    introspect(JAM.policy.p3) {
      a$$896 = f$$232.extend({}, v2375, a$$896);
    }
    introspect(JAM.policy.p3) {
      var c$$660 = this.validate(a$$896, b$$798)
    }
    var v2376 = !c$$660;
    if (v2376) {
      return !0;
    }
    var v2377;
    var v14951 = b$$798;
    if (v14951) {
      v14951 = b$$798.error;
    }
    var v9065 = v14951;
    if (v9065) {
      introspect(JAM.policy.p3) {
        v2377 = b$$798.error(this, c$$660, b$$798);
      }
    } else {
      introspect(JAM.policy.p3) {
        v2377 = this.trigger("error", this, c$$660, b$$798);
      }
    }
    v2377;
    return !1;
  }
  function v2158() {
    var v9066 = this.attributes;
    introspect(JAM.policy.p3) {
      var v2378 = this.validate(v9066)
    }
    return !v2378;
  }
  function v2157() {
    var v2379 = this._previousAttributes;
    introspect(JAM.policy.p3) {
      return f$$232.clone(v2379);
    }
  }
  function v2156(a$$895) {
    var v2380;
    var v20881 = arguments.length;
    var v14952 = !v20881;
    var v20883 = !v14952;
    if (v20883) {
      var v20882 = this._previousAttributes;
      v14952 = !v20882;
    }
    var v9068 = v14952;
    if (v9068) {
      v2380 = null;
    } else {
      var v9067 = this._previousAttributes;
      v2380 = v9067[a$$895];
    }
    return v2380;
  }
  function v2155(a$$894) {
    var v2382 = !a$$894;
    if (v2382) {
      var v2381;
      introspect(JAM.policy.p3) {
        var v9070 = this.hasChanged()
      }
      if (v9070) {
        var v9069 = this.changed;
        introspect(JAM.policy.p3) {
          v2381 = f$$232.clone(v9069);
        }
      } else {
        v2381 = !1;
      }
      return v2381;
    }
    var b$$797;
    var c$$659 = !1;
    var d$$494 = this._previousAttributes;
    var e$$419;
    for (e$$419 in a$$894) {
      var v14953 = d$$494[e$$419];
      var v14954 = b$$797 = a$$894[e$$419];
      introspect(JAM.policy.p3) {
        var v9071 = f$$232.isEqual(v14953, v14954)
      }
      var v2384 = !v9071;
      if (v2384) {
        var v9072 = c$$659;
        var v14955 = !v9072;
        if (v14955) {
          v9072 = c$$659 = {};
        }
        var v2383 = v9072;
        introspect(JAM.policy.p2) {
          v2383[e$$419] = b$$797;
        }
      }
    }
    return c$$659;
  }
  function v2154(a$$893) {
    var v2385;
    var v14956 = arguments.length;
    var v9075 = !v14956;
    if (v9075) {
      var v14957 = this.changed;
      introspect(JAM.policy.p3) {
        var v9073 = f$$232.isEmpty(v14957)
      }
      v2385 = !v9073;
    } else {
      var v9074 = this.changed;
      introspect(JAM.policy.p3) {
        v2385 = f$$232.has(v9074, a$$893);
      }
    }
    return v2385;
  }
  function v2153(a$$892) {
    var v9076 = !a$$892;
    if (v9076) {
      a$$892 = {};
    }
    var b$$796 = this._changing;
    this._changing = !0;
    var c$$658;
    var v2387 = this._silent;
    for (c$$658 in v2387) {
      var v2386 = this._pending;
      introspect(JAM.policy.p2) {
        v2386[c$$658] = !0;
      }
    }
    var v2388 = a$$892.changes;
    var v2389 = this._silent;
    introspect(JAM.policy.p3) {
      var d$$493 = f$$232.extend({}, v2388, v2389)
    }
    this._silent = {};
    for (c$$658 in d$$493) {
      var v2390 = "change:" + c$$658;
      introspect(JAM.policy.p3) {
        var v2391 = this.get(c$$658)
      }
      introspect(JAM.policy.p3) {
        this.trigger(v2390, this, v2391, a$$892);
      }
    }
    if (b$$796) {
      return this;
    }
    var v14958 = this._pending;
    introspect(JAM.policy.p3) {
      var v9077 = f$$232.isEmpty(v14958)
    }
    var v2395 = !v9077;
    for (;v2395;) {
      this._pending = {};
      introspect(JAM.policy.p3) {
        this.trigger("change", this, a$$892);
      }
      var v2393 = this.changed;
      for (c$$658 in v2393) {
        var v20884 = this._pending;
        var v14959 = v20884[c$$658];
        var v9078 = !v14959;
        if (v9078) {
          var v20885 = this._silent;
          var v14960 = v20885[c$$658];
          v9078 = !v14960;
        }
        var v2392 = v9078;
        if (v2392) {
          var v9079 = this.changed;
          delete v9079[c$$658];
        }
      }
      var v2394 = this.attributes;
      introspect(JAM.policy.p3) {
        var v30922 = f$$232.clone(v2394)
      }
      this._previousAttributes = v30922;
      var v14961 = this._pending;
      introspect(JAM.policy.p3) {
        var v9080 = f$$232.isEmpty(v14961)
      }
      v2395 = !v9080;
    }
    this._changing = !1;
    return this;
  }
  function v2152() {
    var v2396 = this.id;
    return null == v2396;
  }
  function v2151() {
    var v2397 = this.constructor;
    var v2398 = this.attributes;
    return new v2397(v2398);
  }
  function v2150(a$$891) {
    return a$$891;
  }
  function v2149() {
    var v9081 = n$$110(this, "urlRoot");
    var v14963 = !v9081;
    if (v14963) {
      var v14962 = this.collection;
      v9081 = n$$110(v14962, "url");
    }
    var v2399 = v9081;
    var v9082 = !v2399;
    if (v9082) {
      v2399 = t$$33();
    }
    var a$$890 = v2399;
    var v2400;
    introspect(JAM.policy.p3) {
      var v9085 = this.isNew()
    }
    if (v9085) {
      v2400 = a$$890;
    } else {
      var v20886;
      var v28687 = a$$890.length;
      var v27736 = v28687 - 1;
      introspect(JAM.policy.p3) {
        var v26214 = a$$890.charAt(v27736)
      }
      var v24046 = "/" == v26214;
      if (v24046) {
        v20886 = "";
      } else {
        v20886 = "/";
      }
      var v14964 = v20886;
      var v9083 = a$$890 + v14964;
      var v14965 = this.id;
      var v9084 = encodeURIComponent(v14965);
      v2400 = v9083 + v9084;
    }
    return v2400;
  }
  function v2148(a$$889) {
    function v2147(e$$418) {
      var v2401 = a$$889.wait;
      if (v2401) {
        d$$492();
      }
      var v2402;
      if (c$$657) {
        introspect(JAM.policy.p3) {
          v2402 = c$$657(b$$795, e$$418);
        }
      } else {
        introspect(JAM.policy.p3) {
          v2402 = b$$795.trigger("sync", b$$795, e$$418, a$$889);
        }
      }
      v2402;
      return;
    }
    function d$$492() {
      var v2403 = b$$795.collection;
      introspect(JAM.policy.p3) {
        b$$795.trigger("destroy", b$$795, v2403, a$$889);
      }
      return;
    }
    var v2404;
    if (a$$889) {
      introspect(JAM.policy.p3) {
        v2404 = f$$232.clone(a$$889);
      }
    } else {
      v2404 = {};
    }
    a$$889 = v2404;
    var b$$795 = this;
    var c$$657 = a$$889.success;
    introspect(JAM.policy.p3) {
      var v2405 = this.isNew()
    }
    if (v2405) {
      d$$492();
      return !1;
    }
    a$$889.success = v2147;
    var v2406 = a$$889;
    var v9086 = a$$889.error;
    introspect(JAM.policy.p3) {
      var v30923 = g$$232.wrapError(v9086, b$$795, a$$889)
    }
    v2406.error = v30923;
    var v9087 = this.sync;
    var v14966 = !v9087;
    if (v14966) {
      v9087 = g$$232.sync;
    }
    var v2407 = v9087;
    introspect(JAM.policy.p3) {
      var e$$417 = v2407.call(this, "delete", this, a$$889)
    }
    var v2408 = a$$889.wait;
    var v9088 = !v2408;
    if (v9088) {
      d$$492();
    }
    return e$$417;
  }
  function v2146(a$$887, b$$793, c$$656) {
    function v2145(a$$888, b$$794, e$$416) {
      introspect(JAM.policy.p3) {
        b$$794 = h$$194.parse(a$$888, e$$416);
      }
      var v2410 = c$$656.wait;
      if (v2410) {
        delete c$$656.wait;
        var v2409 = d$$491 || {};
        introspect(JAM.policy.p3) {
          b$$794 = f$$232.extend(v2409, b$$794);
        }
      }
      introspect(JAM.policy.p3) {
        var v9089 = h$$194.set(b$$794, c$$656)
      }
      var v2411 = !v9089;
      if (v2411) {
        return false;
      }
      var v2412;
      if (i$$242) {
        introspect(JAM.policy.p3) {
          v2412 = i$$242(h$$194, a$$888);
        }
      } else {
        introspect(JAM.policy.p3) {
          v2412 = h$$194.trigger("sync", h$$194, a$$888, c$$656);
        }
      }
      v2412;
      return;
    }
    var d$$491;
    var e$$415;
    var v2413;
    introspect(JAM.policy.p3) {
      var v14967 = f$$232.isObject(a$$887)
    }
    var v20887 = !v14967;
    if (v20887) {
      v14967 = null == a$$887;
    }
    var v9090 = v14967;
    if (v9090) {
      d$$491 = a$$887;
      v2413 = c$$656 = b$$793;
    } else {
      d$$491 = {};
      introspect(JAM.policy.p2) {
        v2413 = d$$491[a$$887] = b$$793;
      }
    }
    v2413;
    var v2414;
    if (c$$656) {
      introspect(JAM.policy.p3) {
        v2414 = f$$232.clone(c$$656);
      }
    } else {
      v2414 = {};
    }
    c$$656 = v2414;
    var v2417 = c$$656.wait;
    if (v2417) {
      introspect(JAM.policy.p3) {
        var v9091 = this._validate(d$$491, c$$656)
      }
      var v2415 = !v9091;
      if (v2415) {
        return !1;
      }
      var v2416 = this.attributes;
      introspect(JAM.policy.p3) {
        e$$415 = f$$232.clone(v2416);
      }
    }
    var v9092 = !0;
    var v2418 = {silent:v9092};
    introspect(JAM.policy.p3) {
      a$$887 = f$$232.extend({}, c$$656, v2418);
    }
    var v9093 = d$$491;
    if (v9093) {
      var v24047;
      var v26215 = c$$656.wait;
      if (v26215) {
        v24047 = a$$887;
      } else {
        v24047 = c$$656;
      }
      var v20888 = v24047;
      introspect(JAM.policy.p3) {
        var v14968 = this.set(d$$491, v20888)
      }
      v9093 = !v14968;
    }
    var v2419 = v9093;
    if (v2419) {
      return !1;
    }
    var h$$194 = this;
    var i$$242 = c$$656.success;
    c$$656.success = v2145;
    var v2420 = c$$656;
    var v9094 = c$$656.error;
    introspect(JAM.policy.p3) {
      var v30924 = g$$232.wrapError(v9094, h$$194, c$$656)
    }
    v2420.error = v30924;
    var v2421;
    introspect(JAM.policy.p3) {
      var v9095 = this.isNew()
    }
    if (v9095) {
      v2421 = "create";
    } else {
      v2421 = "update";
    }
    b$$793 = v2421;
    var v9096 = this.sync;
    var v14969 = !v9096;
    if (v14969) {
      v9096 = g$$232.sync;
    }
    var v2422 = v9096;
    introspect(JAM.policy.p3) {
      b$$793 = v2422.call(this, b$$793, this, c$$656);
    }
    var v2423 = c$$656.wait;
    if (v2423) {
      introspect(JAM.policy.p3) {
        this.set(e$$415, a$$887);
      }
    }
    return b$$793;
  }
  function v2144(a$$886) {
    function v2143(d$$490, e$$414, f$$235) {
      introspect(JAM.policy.p3) {
        var v14970 = b$$792.parse(d$$490, f$$235)
      }
      introspect(JAM.policy.p3) {
        var v9097 = b$$792.set(v14970, a$$886)
      }
      var v2424 = !v9097;
      if (v2424) {
        return !1;
      }
      if (c$$655) {
        introspect(JAM.policy.p3) {
          c$$655(b$$792, d$$490);
        }
      }
      return;
    }
    var v2425;
    if (a$$886) {
      introspect(JAM.policy.p3) {
        v2425 = f$$232.clone(a$$886);
      }
    } else {
      v2425 = {};
    }
    a$$886 = v2425;
    var b$$792 = this;
    var c$$655 = a$$886.success;
    a$$886.success = v2143;
    var v2426 = a$$886;
    var v9098 = a$$886.error;
    introspect(JAM.policy.p3) {
      var v30925 = g$$232.wrapError(v9098, b$$792, a$$886)
    }
    v2426.error = v30925;
    var v9099 = this.sync;
    var v14971 = !v9099;
    if (v14971) {
      v9099 = g$$232.sync;
    }
    var v2427 = v9099;
    introspect(JAM.policy.p3) {
      return v2427.call(this, "read", this, a$$886);
    }
  }
  function v2142(a$$885) {
    var v9100 = a$$885;
    var v14972 = !v9100;
    if (v14972) {
      v9100 = a$$885 = {};
    }
    var v2428 = v9100;
    v2428.unset = !0;
    var v9101 = this.attributes;
    introspect(JAM.policy.p3) {
      var v2429 = f$$232.clone(v9101)
    }
    introspect(JAM.policy.p3) {
      return this.set(v2429, a$$885);
    }
  }
  function v2141(a$$884, b$$791) {
    var v9102 = b$$791;
    var v14973 = !v9102;
    if (v14973) {
      v9102 = b$$791 = {};
    }
    var v2430 = v9102;
    v2430.unset = !0;
    introspect(JAM.policy.p3) {
      return this.set(a$$884, null, b$$791);
    }
  }
  function v2140(a$$883, b$$790, c$$654) {
    var d$$489;
    var e$$413;
    var v2431;
    introspect(JAM.policy.p3) {
      var v14974 = f$$232.isObject(a$$883)
    }
    var v20889 = !v14974;
    if (v20889) {
      v14974 = null == a$$883;
    }
    var v9103 = v14974;
    if (v9103) {
      d$$489 = a$$883;
      v2431 = c$$654 = b$$790;
    } else {
      d$$489 = {};
      introspect(JAM.policy.p2) {
        v2431 = d$$489[a$$883] = b$$790;
      }
    }
    v2431;
    var v9104 = !c$$654;
    if (v9104) {
      c$$654 = {};
    }
    var v2432 = !d$$489;
    if (v2432) {
      return this;
    }
    var v2433 = d$$489 instanceof o$$42;
    if (v2433) {
      d$$489 = d$$489.attributes;
    }
    var v2434 = c$$654.unset;
    if (v2434) {
      for (e$$413 in d$$489) {
        introspect(JAM.policy.p2) {
          d$$489[e$$413] = void 0;
        }
      }
    }
    introspect(JAM.policy.p3) {
      var v9105 = this._validate(d$$489, c$$654)
    }
    var v2435 = !v9105;
    if (v2435) {
      return !1;
    }
    var v9106 = this.idAttribute;
    var v2436 = v9106 in d$$489;
    if (v2436) {
      var v9107 = this.idAttribute;
      this.id = d$$489[v9107];
    }
    b$$790 = c$$654.changes = {};
    var h$$193 = this.attributes;
    var g$$236 = this._escapedAttributes;
    var v2437 = this._previousAttributes;
    var v9108 = !v2437;
    if (v9108) {
      v2437 = {};
    }
    var j$$129 = v2437;
    for (e$$413 in d$$489) {
      a$$883 = d$$489[e$$413];
      var v20890 = h$$193[e$$413];
      introspect(JAM.policy.p3) {
        var v14975 = f$$232.isEqual(v20890, a$$883)
      }
      var v9109 = !v14975;
      var v14977 = !v9109;
      if (v14977) {
        var v14976 = c$$654.unset;
        if (v14976) {
          introspect(JAM.policy.p3) {
            v14976 = f$$232.has(h$$193, e$$413);
          }
        }
        v9109 = v14976;
      }
      var v2438 = v9109;
      if (v2438) {
        delete g$$236[e$$413];
        var v14978;
        var v20891 = c$$654.silent;
        if (v20891) {
          v14978 = this._silent;
        } else {
          v14978 = b$$790;
        }
        var v9110 = v14978;
        introspect(JAM.policy.p2) {
          v9110[e$$413] = !0;
        }
      }
      var v2439;
      var v9111 = c$$654.unset;
      if (v9111) {
        v2439 = delete h$$193[e$$413];
      } else {
        introspect(JAM.policy.p2) {
          v2439 = h$$193[e$$413] = a$$883;
        }
      }
      v2439;
      var v2440;
      var v24048 = j$$129[e$$413];
      introspect(JAM.policy.p3) {
        var v20892 = f$$232.isEqual(v24048, a$$883)
      }
      var v14979 = !v20892;
      var v20895 = !v14979;
      if (v20895) {
        introspect(JAM.policy.p3) {
          var v20893 = f$$232.has(h$$193, e$$413)
        }
        introspect(JAM.policy.p3) {
          var v20894 = f$$232.has(j$$129, e$$413)
        }
        v14979 = v20893 != v20894;
      }
      var v9112 = v14979;
      if (v9112) {
        var v14980 = this.changed;
        introspect(JAM.policy.p2) {
          v14980[e$$413] = a$$883;
        }
        var v14981 = c$$654.silent;
        var v20897 = !v14981;
        if (v20897) {
          var v20896 = this._pending;
          introspect(JAM.policy.p2) {
            v14981 = v20896[e$$413] = !0;
          }
        }
        v2440 = v14981;
      } else {
        var v14982 = this.changed;
        delete v14982[e$$413];
        var v14983 = this._pending;
        v2440 = delete v14983[e$$413];
      }
      v2440;
    }
    var v2441 = c$$654.silent;
    var v9113 = !v2441;
    if (v9113) {
      introspect(JAM.policy.p3) {
        this.change(c$$654);
      }
    }
    return this;
  }
  function v2139(a$$882) {
    introspect(JAM.policy.p3) {
      var v2442 = this.get(a$$882)
    }
    return null != v2442;
  }
  function v2138(a$$881) {
    var b$$789;
    var v9114 = this._escapedAttributes;
    var v2443 = b$$789 = v9114[a$$881];
    if (v2443) {
      return b$$789;
    }
    introspect(JAM.policy.p3) {
      b$$789 = this.get(a$$881);
    }
    var v2444 = this._escapedAttributes;
    var v14984;
    var v20898 = null == b$$789;
    if (v20898) {
      v14984 = "";
    } else {
      v14984 = "" + b$$789;
    }
    var v9115 = v14984;
    introspect(JAM.policy.p3) {
      var v30926 = f$$232.escape(v9115)
    }
    introspect(JAM.policy.p2) {
      return v2444[a$$881] = v30926;
    }
  }
  function v2137(a$$880) {
    var v2445 = this.attributes;
    return v2445[a$$880];
  }
  function v2136() {
    var v2446 = this.attributes;
    introspect(JAM.policy.p3) {
      return f$$232.clone(v2446);
    }
  }
  function v2135() {
    return;
  }
  function v2134(a$$879, b$$788) {
    var c$$653;
    var v9116 = !a$$879;
    if (v9116) {
      a$$879 = {};
    }
    var v9117 = b$$788;
    if (v9117) {
      v9117 = b$$788.parse;
    }
    var v2447 = v9117;
    if (v2447) {
      introspect(JAM.policy.p3) {
        a$$879 = this.parse(a$$879);
      }
    }
    var v2448 = c$$653 = n$$110(this, "defaults");
    if (v2448) {
      introspect(JAM.policy.p3) {
        a$$879 = f$$232.extend({}, c$$653, a$$879);
      }
    }
    var v9118 = b$$788;
    if (v9118) {
      v9118 = b$$788.collection;
    }
    var v2449 = v9118;
    if (v2449) {
      this.collection = b$$788.collection;
    }
    this.attributes = {};
    this._escapedAttributes = {};
    introspect(JAM.policy.p3) {
      var v30927 = f$$232.uniqueId("c")
    }
    this.cid = v30927;
    this.changed = {};
    this._silent = {};
    this._pending = {};
    var v9119 = !0;
    var v2450 = {silent:v9119};
    introspect(JAM.policy.p3) {
      this.set(a$$879, v2450);
    }
    this.changed = {};
    this._silent = {};
    this._pending = {};
    var v2451 = this.attributes;
    introspect(JAM.policy.p3) {
      var v30928 = f$$232.clone(v2451)
    }
    this._previousAttributes = v30928;
    var v2452 = this.initialize;
    introspect(JAM.policy.p3) {
      v2452.apply(this, arguments);
    }
    return;
  }
  function v2133(a$$878) {
    var b$$787;
    var c$$652;
    var d$$488;
    var e$$412;
    var f$$234;
    var g$$235;
    var v9120 = d$$488 = this._callbacks;
    var v2453 = !v9120;
    if (v2453) {
      return this;
    }
    f$$234 = d$$488.all;
    introspect(JAM.policy.p3) {
      a$$878 = a$$878.split(p$$61);
    }
    introspect(JAM.policy.p3) {
      g$$235 = z$$11.call(arguments, 1);
    }
    introspect(JAM.policy.p3) {
      var v2463 = b$$787 = a$$878.shift()
    }
    for (;v2463;) {
      var v2457 = c$$652 = d$$488[b$$787];
      if (v2457) {
        e$$412 = c$$652.tail;
        var v9121 = c$$652 = c$$652.next;
        var v2456 = v9121 !== e$$412;
        for (;v2456;) {
          var v2454 = c$$652.callback;
          var v9122 = c$$652.context;
          var v14985 = !v9122;
          if (v14985) {
            v9122 = this;
          }
          var v2455 = v9122;
          introspect(JAM.policy.p3) {
            v2454.apply(v2455, g$$235);
          }
          var v9123 = c$$652 = c$$652.next;
          v2456 = v9123 !== e$$412;
        }
      }
      var v2462 = c$$652 = f$$234;
      if (v2462) {
        e$$412 = c$$652.tail;
        var v2458 = [b$$787];
        introspect(JAM.policy.p3) {
          b$$787 = v2458.concat(g$$235);
        }
        var v9124 = c$$652 = c$$652.next;
        var v2461 = v9124 !== e$$412;
        for (;v2461;) {
          var v2459 = c$$652.callback;
          var v9125 = c$$652.context;
          var v14986 = !v9125;
          if (v14986) {
            v9125 = this;
          }
          var v2460 = v9125;
          introspect(JAM.policy.p3) {
            v2459.apply(v2460, b$$787);
          }
          var v9126 = c$$652 = c$$652.next;
          v2461 = v9126 !== e$$412;
        }
      }
      introspect(JAM.policy.p3) {
        v2463 = b$$787 = a$$878.shift();
      }
    }
    return this;
  }
  function v2132(a$$877, b$$786, c$$651) {
    var d$$487;
    var e$$411;
    var h$$192;
    var g$$234;
    var j$$128;
    var q$$28;
    var v2470 = e$$411 = this._callbacks;
    if (v2470) {
      var v14987 = !a$$877;
      if (v14987) {
        v14987 = !b$$786;
      }
      var v9127 = v14987;
      if (v9127) {
        v9127 = !c$$651;
      }
      var v2464 = v9127;
      if (v2464) {
        delete this._callbacks;
        return this;
      }
      var v2465;
      if (a$$877) {
        introspect(JAM.policy.p3) {
          v2465 = a$$877.split(p$$61);
        }
      } else {
        introspect(JAM.policy.p3) {
          v2465 = f$$232.keys(e$$411);
        }
      }
      a$$877 = v2465;
      introspect(JAM.policy.p3) {
        var v2469 = d$$487 = a$$877.shift()
      }
      for (;v2469;) {
        h$$192 = e$$411[d$$487];
        delete e$$411[d$$487];
        var v14988 = h$$192;
        if (v14988) {
          v14988 = b$$786 || c$$651;
        }
        var v2468 = v14988;
        if (v2468) {
          g$$234 = h$$192.tail;
          var v9128 = h$$192 = h$$192.next;
          var v2467 = v9128 !== g$$234;
          for (;v2467;) {
            j$$128 = h$$192.callback;
            q$$28 = h$$192.context;
            var v20899 = b$$786;
            if (v20899) {
              v20899 = j$$128 !== b$$786;
            }
            var v14989 = v20899;
            var v20901 = !v14989;
            if (v20901) {
              var v20900 = c$$651;
              if (v20900) {
                v20900 = q$$28 !== c$$651;
              }
              v14989 = v20900;
            }
            var v2466 = v14989;
            if (v2466) {
              introspect(JAM.policy.p3) {
                this.on(d$$487, j$$128, q$$28);
              }
            }
            var v9129 = h$$192 = h$$192.next;
            v2467 = v9129 !== g$$234;
          }
        }
        introspect(JAM.policy.p3) {
          v2469 = d$$487 = a$$877.shift();
        }
      }
      return this;
    }
    return;
  }
  function v2131(a$$876, b$$785, c$$650) {
    var d$$486;
    var e$$410;
    var f$$233;
    var g$$233;
    var j$$127;
    var v2471 = !b$$785;
    if (v2471) {
      return this;
    }
    introspect(JAM.policy.p3) {
      a$$876 = a$$876.split(p$$61);
    }
    var v2472 = this._callbacks;
    var v9130 = !v2472;
    if (v9130) {
      v2472 = this._callbacks = {};
    }
    d$$486 = v2472;
    introspect(JAM.policy.p3) {
      var v2473 = e$$410 = a$$876.shift()
    }
    for (;v2473;) {
      var v24049;
      var v26216 = j$$127 = d$$486[e$$410];
      if (v26216) {
        v24049 = j$$127.tail;
      } else {
        v24049 = {};
      }
      f$$233 = v24049;
      f$$233.next = g$$233 = {};
      f$$233.context = c$$650;
      f$$233.callback = b$$785;
      var v14990;
      if (j$$127) {
        v14990 = j$$127.next;
      } else {
        v14990 = f$$233;
      }
      var v9131 = v14990;
      introspect(JAM.policy.p2) {
        d$$486[e$$410] = {tail:g$$233, next:v9131};
      }
      introspect(JAM.policy.p3) {
        v2473 = e$$410 = a$$876.shift();
      }
    }
    return this;
  }
  function v2130() {
    l$$97.Backbone = y$$57;
    return this;
  }
  function v2129(a$$875) {
    i$$241 = a$$875;
    return;
  }
  function t$$33() {
    throw Error('A "url" property or function must be specified');
  }
  function n$$110(a$$946, b$$833) {
    var v2474;
    var v14991 = !a$$946;
    var v20903 = !v14991;
    if (v20903) {
      var v20902 = a$$946[b$$833];
      v14991 = !v20902;
    }
    var v9133 = v14991;
    if (v9133) {
      v2474 = null;
    } else {
      var v9132;
      var v20904 = a$$946[b$$833];
      introspect(JAM.policy.p3) {
        var v14992 = f$$232.isFunction(v20904)
      }
      if (v14992) {
        introspect(JAM.policy.p3) {
          v9132 = a$$946[b$$833]();
        }
      } else {
        v9132 = a$$946[b$$833];
      }
      v2474 = v9132;
    }
    return v2474;
  }
  function G$$5(a$$945, b$$832, c$$679) {
    function v2128() {
      introspect(JAM.policy.p3) {
        a$$945.apply(this, arguments);
      }
      return;
    }
    var d$$506;
    var v2475;
    var v14993 = b$$832;
    if (v14993) {
      introspect(JAM.policy.p3) {
        v14993 = b$$832.hasOwnProperty("constructor");
      }
    }
    var v9134 = v14993;
    if (v9134) {
      v2475 = b$$832.constructor;
    } else {
      v2475 = v2128;
    }
    d$$506 = v2475;
    introspect(JAM.policy.p3) {
      f$$232.extend(d$$506, a$$945);
    }
    x$$77.prototype = a$$945.prototype;
    var v2476 = d$$506;
    var v30929 = new x$$77;
    v2476.prototype = v30929;
    if (b$$832) {
      var v9135 = d$$506.prototype;
      introspect(JAM.policy.p3) {
        f$$232.extend(v9135, b$$832);
      }
    }
    if (c$$679) {
      introspect(JAM.policy.p3) {
        f$$232.extend(d$$506, c$$679);
      }
    }
    var v2477 = d$$506.prototype;
    v2477.constructor = d$$506;
    d$$506.__super__ = a$$945.prototype;
    return d$$506;
  }
  function x$$77() {
    return;
  }
  var l$$97 = this;
  var y$$57 = l$$97.Backbone;
  var v2478 = Array.prototype;
  var z$$11 = v2478.slice;
  var v2479 = Array.prototype;
  var A$$7 = v2479.splice;
  var g$$232;
  var v2480;
  var v14994 = typeof exports;
  var v9136 = "undefined" !== v14994;
  if (v9136) {
    v2480 = exports;
  } else {
    v2480 = l$$97.Backbone = {};
  }
  g$$232 = v2480;
  g$$232.VERSION = "0.9.2";
  var f$$232 = l$$97._;
  var v9137 = !f$$232;
  if (v9137) {
    var v14995 = typeof require;
    v9137 = "undefined" !== v14995;
  }
  var v2481 = v9137;
  if (v2481) {
    introspect(JAM.policy.p3) {
      f$$232 = require("underscore");
    }
  }
  var v9138 = l$$97.jQuery;
  var v14996 = !v9138;
  if (v14996) {
    v9138 = l$$97.Zepto;
  }
  var v2482 = v9138;
  var v9139 = !v2482;
  if (v9139) {
    v2482 = l$$97.ender;
  }
  var i$$241 = v2482;
  g$$232.setDomLibrary = v2129;
  g$$232.noConflict = v2130;
  g$$232.emulateHTTP = !1;
  g$$232.emulateJSON = !1;
  var p$$61 = /\s+/;
  var k$$93 = g$$232.Events = {on:v2131, off:v2132, trigger:v2133};
  k$$93.bind = k$$93.on;
  k$$93.unbind = k$$93.off;
  var o$$42 = g$$232.Model = v2134;
  var v2483 = o$$42.prototype;
  var v2484 = {changed:null, _silent:null, _pending:null, idAttribute:"id", initialize:v2135, toJSON:v2136, get:v2137, escape:v2138, has:v2139, set:v2140, unset:v2141, clear:v2142, fetch:v2144, save:v2146, destroy:v2148, url:v2149, parse:v2150, clone:v2151, isNew:v2152, change:v2153, hasChanged:v2154, changedAttributes:v2155, previous:v2156, previousAttributes:v2157, isValid:v2158, _validate:v2159};
  introspect(JAM.policy.p3) {
    f$$232.extend(v2483, k$$93, v2484);
  }
  var r$$32 = g$$232.Collection = v2160;
  var v2485 = r$$32.prototype;
  var v2486 = {model:o$$42, initialize:v2161, toJSON:v2163, add:v2164, remove:v2165, push:v2166, pop:v2167, unshift:v2168, shift:v2169, get:v2170, getByCid:v2171, at:v2172, where:v2174, sort:v2175, pluck:v2177, reset:v2178, fetch:v2180, create:v2182, parse:v2183, chain:v2184, _reset:v2185, _prepareModel:v2186, _removeReference:v2187, _onModelEvent:v2188};
  introspect(JAM.policy.p3) {
    f$$232.extend(v2485, k$$93, v2486);
  }
  introspect(JAM.policy.p3) {
    var v2487 = "forEach,each,map,reduce,reduceRight,find,detect,filter,select,reject,every,all,some,any,include,contains,invoke,max,min,sortBy,sortedIndex,toArray,size,first,initial,rest,last,without,indexOf,shuffle,lastIndexOf,isEmpty,groupBy".split(",")
  }
  introspect(JAM.policy.p3) {
    f$$232.each(v2487, v2190);
  }
  var u$$20 = g$$232.Router = v2191;
  var B$$7 = /:\w+/g;
  var C$$6 = /\*\w+/g;
  var D$$6 = /[-[\]{}()+?.,\\^$|#\s]/g;
  var v2488 = u$$20.prototype;
  var v2489 = {initialize:v2192, route:v2194, navigate:v2195, _bindRoutes:v2196, _routeToRegExp:v2197, _extractParameters:v2198};
  introspect(JAM.policy.p3) {
    f$$232.extend(v2488, k$$93, v2489);
  }
  var m$$64 = g$$232.History = v2199;
  var s$$36 = /^[#\/]/;
  var E$$6 = /msie [\w.]+/;
  m$$64.started = !1;
  var v2490 = m$$64.prototype;
  var v2491 = {interval:50, getHash:v2200, getFragment:v2201, start:v2202, stop:v2203, route:v2204, checkUrl:v2205, loadUrl:v2207, navigate:v2208, _updateHash:v2209};
  introspect(JAM.policy.p3) {
    f$$232.extend(v2490, k$$93, v2491);
  }
  var v$$15 = g$$232.View = v2210;
  var F$$6 = /^(\S+)\s*(.*)$/;
  introspect(JAM.policy.p3) {
    var w$$21 = "model,collection,el,id,attributes,className,tagName".split(",")
  }
  var v2492 = v$$15.prototype;
  var v2493 = {tagName:"div", $:v2211, initialize:v2212, render:v2213, remove:v2214, make:v2215, setElement:v2216, delegateEvents:v2217, undelegateEvents:v2218, _configure:v2219, _ensureElement:v2220};
  introspect(JAM.policy.p3) {
    f$$232.extend(v2492, k$$93, v2493);
  }
  o$$42.extend = r$$32.extend = u$$20.extend = v$$15.extend = v2221;
  var H$$5 = {create:"POST", update:"PUT", "delete":"DELETE", read:"GET"};
  g$$232.sync = v2223;
  g$$232.wrapError = v2225;
  return;
}
function v2127() {
  function v2126() {
    return this._wrapped;
  }
  function v2125() {
    this._chain = true;
    return this;
  }
  function v2124(a$$874) {
    function v2123() {
      var v9140 = this._wrapped;
      introspect(JAM.policy.p3) {
        var v2494 = b$$784.apply(v9140, arguments)
      }
      var v2495 = this._chain;
      return x$$76(v2494, v2495);
    }
    var b$$784 = k$$92[a$$874];
    var v2496 = m$$63.prototype;
    introspect(JAM.policy.p2) {
      v2496[a$$874] = v2123;
    }
    return;
  }
  function v2122(a$$873) {
    function v2121() {
      var d$$485 = this._wrapped;
      introspect(JAM.policy.p3) {
        b$$783.apply(d$$485, arguments);
      }
      var e$$409 = d$$485.length;
      var v14997 = a$$873 == "shift";
      var v20905 = !v14997;
      if (v20905) {
        v14997 = a$$873 == "splice";
      }
      var v9141 = v14997;
      if (v9141) {
        v9141 = e$$409 === 0;
      }
      var v2497 = v9141;
      if (v2497) {
        delete d$$485[0];
      }
      var v2498 = this._chain;
      return x$$76(d$$485, v2498);
    }
    var b$$783 = k$$92[a$$873];
    var v2499 = m$$63.prototype;
    introspect(JAM.policy.p2) {
      v2499[a$$873] = v2121;
    }
    return;
  }
  function v2120(a$$868) {
    var v2500 = b$$743(a$$868);
    introspect(JAM.policy.p3) {
      return v2500.chain();
    }
  }
  function v2119(a$$862) {
    function v2118(a$$867) {
      introspect(JAM.policy.p3) {
        return e$$408.call(this, a$$867, b$$743);
      }
    }
    function v2117(a$$866, b$$782) {
      var v9142 = w$$20(b$$782);
      var v2501 = "';\n" + v9142;
      return v2501 + "\n;__p+='";
    }
    function v2116(a$$865, b$$781) {
      var v9143 = w$$20(b$$781);
      var v2502 = "'+\n(" + v9143;
      return v2502 + ")+\n'";
    }
    function v2115(a$$864, b$$780) {
      var v9144 = w$$20(b$$780);
      var v2503 = "'+\n_.escape(" + v9144;
      return v2503 + ")+\n'";
    }
    function v2114(a$$863) {
      var v2504 = n$$109[a$$863];
      return "\\" + v2504;
    }
    var c$$647;
    var d$$484;
    var v2505 = d$$484 || {};
    var v2506 = b$$743.templateSettings;
    introspect(JAM.policy.p3) {
      d$$484 = b$$743.defaults(v2505, v2506);
    }
    introspect(JAM.policy.p3) {
      var v24050 = a$$862.replace(O$$3, v2114)
    }
    var v26217 = d$$484.escape;
    var v27737 = !v26217;
    if (v27737) {
      v26217 = u$$19;
    }
    var v24051 = v26217;
    introspect(JAM.policy.p3) {
      var v20906 = v24050.replace(v24051, v2115)
    }
    var v24052 = d$$484.interpolate;
    var v26218 = !v24052;
    if (v26218) {
      v24052 = u$$19;
    }
    var v20907 = v24052;
    introspect(JAM.policy.p3) {
      var v14998 = v20906.replace(v20907, v2116)
    }
    var v20908 = d$$484.evaluate;
    var v24053 = !v20908;
    if (v24053) {
      v20908 = u$$19;
    }
    var v14999 = v20908;
    introspect(JAM.policy.p3) {
      var v9145 = v14998.replace(v14999, v2117)
    }
    var v2507 = "__p+='" + v9145;
    a$$862 = v2507 + "';\n";
    var v2508 = d$$484.variable;
    var v9147 = !v2508;
    if (v9147) {
      var v9146 = "with(obj||{}){\n" + a$$862;
      a$$862 = v9146 + "}\n";
    }
    var v2509 = "var __p='';var print=function(){__p+=Array.prototype.join.call(arguments, '')};\n" + a$$862;
    a$$862 = v2509 + "return __p;\n";
    var v9148 = d$$484.variable;
    var v15000 = !v9148;
    if (v15000) {
      v9148 = "obj";
    }
    var v2510 = v9148;
    var e$$408 = new Function(v2510, "_", a$$862);
    if (c$$647) {
      introspect(JAM.policy.p3) {
        return e$$408(c$$647, b$$743);
      }
    }
    c$$647 = v2118;
    var v24054 = d$$484.variable;
    var v26219 = !v24054;
    if (v26219) {
      v24054 = "obj";
    }
    var v20909 = v24054;
    var v15001 = "function(" + v20909;
    var v9149 = v15001 + "){\n";
    var v2511 = v9149 + a$$862;
    c$$647.source = v2511 + "}";
    return c$$647;
  }
  function v2113(a$$859) {
    var b$$778 = N$$3;
    N$$3 = N$$3 + 1;
    var v2512;
    if (a$$859) {
      v2512 = a$$859 + b$$778;
    } else {
      v2512 = b$$778;
    }
    return v2512;
  }
  function v2112(a$$858) {
    function v2111(c$$646) {
      introspect(JAM.policy.p2) {
        var v2513 = b$$743[c$$646] = a$$858[c$$646]
      }
      M$$3(c$$646, v2513);
      return;
    }
    introspect(JAM.policy.p3) {
      var v2514 = b$$743.functions(a$$858)
    }
    introspect(JAM.policy.p3) {
      j$$125(v2514, v2111);
    }
    return;
  }
  function v2110(a$$857, c$$645) {
    var v2515 = a$$857 == null;
    if (v2515) {
      return null;
    }
    var d$$483 = a$$857[c$$645];
    var v2516;
    introspect(JAM.policy.p3) {
      var v9150 = b$$743.isFunction(d$$483)
    }
    if (v9150) {
      introspect(JAM.policy.p3) {
        v2516 = d$$483.call(a$$857);
      }
    } else {
      v2516 = d$$483;
    }
    return v2516;
  }
  function v2109(a$$856) {
    var v26220 = "" + a$$856;
    introspect(JAM.policy.p3) {
      var v24055 = v26220.replace(/&/g, "&amp;")
    }
    introspect(JAM.policy.p3) {
      var v20910 = v24055.replace(/</g, "&lt;")
    }
    introspect(JAM.policy.p3) {
      var v15002 = v20910.replace(/>/g, "&gt;")
    }
    introspect(JAM.policy.p3) {
      var v9151 = v15002.replace(/"/g, "&quot;")
    }
    introspect(JAM.policy.p3) {
      var v2517 = v9151.replace(/'/g, "&#x27;")
    }
    introspect(JAM.policy.p3) {
      return v2517.replace(/\//g, "&#x2F;");
    }
  }
  function v2108(a$$855, b$$777, d$$482) {
    var e$$407 = 0;
    var v2518 = e$$407 < a$$855;
    for (;v2518;) {
      introspect(JAM.policy.p3) {
        b$$777.call(d$$482, e$$407);
      }
      e$$407++;
      v2518 = e$$407 < a$$855;
    }
    return;
  }
  function v2107(a$$854) {
    return a$$854;
  }
  function v2106() {
    s$$35._ = I$$4;
    return this;
  }
  function v2105(a$$853, b$$776) {
    introspect(JAM.policy.p3) {
      return K$$3.call(a$$853, b$$776);
    }
  }
  function v2104(a$$852) {
    var v2519 = void 0;
    return a$$852 === v2519;
  }
  function v2103(a$$851) {
    return a$$851 === null;
  }
  function v2102(a$$850) {
    introspect(JAM.policy.p3) {
      var v2520 = l$$96.call(a$$850)
    }
    return v2520 == "[object RegExp]";
  }
  function v2101(a$$849) {
    introspect(JAM.policy.p3) {
      var v2521 = l$$96.call(a$$849)
    }
    return v2521 == "[object Date]";
  }
  function v2100(a$$848) {
    var v9152 = a$$848 === true;
    var v15003 = !v9152;
    if (v15003) {
      v9152 = a$$848 === false;
    }
    var v2522 = v9152;
    var v9154 = !v2522;
    if (v9154) {
      introspect(JAM.policy.p3) {
        var v9153 = l$$96.call(a$$848)
      }
      v2522 = v9153 == "[object Boolean]";
    }
    return v2522;
  }
  function v2099(a$$847) {
    return a$$847 !== a$$847;
  }
  function v2098(a$$846) {
    introspect(JAM.policy.p3) {
      var v2523 = b$$743.isNumber(a$$846)
    }
    if (v2523) {
      v2523 = isFinite(a$$846);
    }
    return v2523;
  }
  function v2097(a$$845) {
    introspect(JAM.policy.p3) {
      var v2524 = l$$96.call(a$$845)
    }
    return v2524 == "[object Number]";
  }
  function v2096(a$$844) {
    introspect(JAM.policy.p3) {
      var v2525 = l$$96.call(a$$844)
    }
    return v2525 == "[object String]";
  }
  function v2095(a$$843) {
    introspect(JAM.policy.p3) {
      var v2526 = l$$96.call(a$$843)
    }
    return v2526 == "[object Function]";
  }
  function v2094(a$$842) {
    var v9155 = !a$$842;
    var v15005 = !v9155;
    if (v15005) {
      introspect(JAM.policy.p3) {
        var v15004 = b$$743.has(a$$842, "callee")
      }
      v9155 = !v15004;
    }
    var v2527 = v9155;
    return !v2527;
  }
  function v2093(a$$841) {
    introspect(JAM.policy.p3) {
      var v2528 = l$$96.call(a$$841)
    }
    return v2528 == "[object Arguments]";
  }
  function v2092(a$$840) {
    var v2529 = Object(a$$840);
    return a$$840 === v2529;
  }
  function v2091(a$$839) {
    introspect(JAM.policy.p3) {
      var v2530 = l$$96.call(a$$839)
    }
    return v2530 == "[object Array]";
  }
  function v2090(a$$838) {
    var v15006 = a$$838;
    if (v15006) {
      var v20911 = a$$838.nodeType;
      v15006 = v20911 == 1;
    }
    var v9156 = v15006;
    var v2531 = !v9156;
    return !v2531;
  }
  function v2089(a$$837) {
    var v2532 = a$$837 == null;
    if (v2532) {
      return true;
    }
    introspect(JAM.policy.p3) {
      var v9157 = b$$743.isArray(a$$837)
    }
    var v15007 = !v9157;
    if (v15007) {
      introspect(JAM.policy.p3) {
        v9157 = b$$743.isString(a$$837);
      }
    }
    var v2534 = v9157;
    if (v2534) {
      var v2533 = a$$837.length;
      return v2533 === 0;
    }
    var c$$644;
    for (c$$644 in a$$837) {
      introspect(JAM.policy.p3) {
        var v2535 = b$$743.has(a$$837, c$$644)
      }
      if (v2535) {
        return false;
      }
    }
    return true;
  }
  function v2088(a$$836, b$$775) {
    return r$$31(a$$836, b$$775, []);
  }
  function v2087(a$$835, b$$774) {
    introspect(JAM.policy.p3) {
      b$$774(a$$835);
    }
    return a$$835;
  }
  function v2086(a$$834) {
    var v2536;
    introspect(JAM.policy.p3) {
      var v15008 = b$$743.isObject(a$$834)
    }
    var v9159 = !v15008;
    if (v9159) {
      v2536 = a$$834;
    } else {
      var v9158;
      introspect(JAM.policy.p3) {
        var v15009 = b$$743.isArray(a$$834)
      }
      if (v15009) {
        introspect(JAM.policy.p3) {
          v9158 = a$$834.slice();
        }
      } else {
        introspect(JAM.policy.p3) {
          v9158 = b$$743.extend({}, a$$834);
        }
      }
      v2536 = v9158;
    }
    return v2536;
  }
  function v2085(a$$833) {
    function v2084(b$$773) {
      var d$$481;
      for (d$$481 in b$$773) {
        var v9160 = a$$833[d$$481];
        var v2537 = v9160 == null;
        if (v2537) {
          introspect(JAM.policy.p2) {
            a$$833[d$$481] = b$$773[d$$481];
          }
        }
      }
      return;
    }
    introspect(JAM.policy.p3) {
      var v2538 = i$$238.call(arguments, 1)
    }
    introspect(JAM.policy.p3) {
      j$$125(v2538, v2084);
    }
    return a$$833;
  }
  function v2083(a$$832) {
    function v2082(b$$772) {
      var v2539 = b$$772 in a$$832;
      if (v2539) {
        introspect(JAM.policy.p2) {
          c$$643[b$$772] = a$$832[b$$772];
        }
      }
      return;
    }
    var c$$643 = {};
    introspect(JAM.policy.p3) {
      var v9161 = i$$238.call(arguments, 1)
    }
    introspect(JAM.policy.p3) {
      var v2540 = b$$743.flatten(v9161)
    }
    introspect(JAM.policy.p3) {
      j$$125(v2540, v2082);
    }
    return c$$643;
  }
  function v2081(a$$831) {
    function v2080(b$$771) {
      var d$$480;
      for (d$$480 in b$$771) {
        introspect(JAM.policy.p2) {
          a$$831[d$$480] = b$$771[d$$480];
        }
      }
      return;
    }
    introspect(JAM.policy.p3) {
      var v2541 = i$$238.call(arguments, 1)
    }
    introspect(JAM.policy.p3) {
      j$$125(v2541, v2080);
    }
    return a$$831;
  }
  function v2079(a$$830) {
    var c$$642 = [];
    var d$$479;
    for (d$$479 in a$$830) {
      var v9162 = a$$830[d$$479];
      introspect(JAM.policy.p3) {
        var v2542 = b$$743.isFunction(v9162)
      }
      if (v2542) {
        introspect(JAM.policy.p3) {
          c$$642.push(d$$479);
        }
      }
    }
    introspect(JAM.policy.p3) {
      return c$$642.sort();
    }
  }
  function v2078(a$$829) {
    var v2543 = b$$743.identity;
    introspect(JAM.policy.p3) {
      return b$$743.map(a$$829, v2543);
    }
  }
  function v2077(a$$828) {
    var v9163 = Object(a$$828);
    var v2544 = a$$828 !== v9163;
    if (v2544) {
      throw new TypeError("Invalid object");
    }
    var c$$641 = [];
    var d$$478;
    for (d$$478 in a$$828) {
      introspect(JAM.policy.p3) {
        var v2545 = b$$743.has(a$$828, d$$478)
      }
      if (v2545) {
        var v9164 = c$$641.length;
        c$$641[v9164] = d$$478;
      }
    }
    return c$$641;
  }
  function v2076(a$$827, b$$770) {
    function v2075() {
      var v9165 = a$$827 = a$$827 - 1;
      var v2546 = v9165 < 1;
      if (v2546) {
        introspect(JAM.policy.p3) {
          return b$$770.apply(this, arguments);
        }
      }
      return;
    }
    var v2547;
    var v9166 = a$$827 <= 0;
    if (v9166) {
      introspect(JAM.policy.p3) {
        v2547 = b$$770();
      }
    } else {
      v2547 = v2075;
    }
    return v2547;
  }
  function v2074() {
    function v2073() {
      var b$$769 = arguments;
      var v2548 = a$$826.length;
      var d$$477 = v2548 - 1;
      var v2550 = d$$477 >= 0;
      for (;v2550;) {
        var v9167 = a$$826[d$$477];
        introspect(JAM.policy.p3) {
          var v2549 = v9167.apply(this, b$$769)
        }
        b$$769 = [v2549];
        d$$477--;
        v2550 = d$$477 >= 0;
      }
      return b$$769[0];
    }
    var a$$826 = arguments;
    return v2073;
  }
  function v2072(a$$825, b$$768) {
    function v2071() {
      var v2551 = [a$$825];
      introspect(JAM.policy.p3) {
        var v2552 = i$$238.call(arguments, 0)
      }
      introspect(JAM.policy.p3) {
        var d$$476 = v2551.concat(v2552)
      }
      introspect(JAM.policy.p3) {
        return b$$768.apply(this, d$$476);
      }
    }
    return v2071;
  }
  function v2070(a$$824) {
    function v2069() {
      if (b$$767) {
        return d$$475;
      }
      b$$767 = true;
      introspect(JAM.policy.p3) {
        return d$$475 = a$$824.apply(this, arguments);
      }
    }
    var b$$767 = false;
    var d$$475;
    return v2069;
  }
  function v2068(a$$823, b$$766) {
    function v2067() {
      function v2066() {
        e$$406 = null;
        var v9168 = !d$$474;
        if (v9168) {
          introspect(JAM.policy.p3) {
            a$$823.apply(f$$231, g$$231);
          }
        }
        return;
      }
      var f$$231 = this;
      var g$$231 = arguments;
      var v9169 = d$$474;
      if (v9169) {
        v9169 = !e$$406;
      }
      var v2553 = v9169;
      if (v2553) {
        introspect(JAM.policy.p3) {
          a$$823.apply(f$$231, g$$231);
        }
      }
      clearTimeout(e$$406);
      e$$406 = setTimeout(v2066, b$$766);
      return;
    }
    var d$$474;
    var e$$406;
    return v2067;
  }
  function v2065(a$$822, c$$640) {
    function v2064() {
      function v2063() {
        f$$230 = null;
        if (h$$191) {
          introspect(JAM.policy.p3) {
            a$$822.apply(d$$473, e$$405);
          }
        }
        introspect(JAM.policy.p3) {
          j$$126();
        }
        return;
      }
      d$$473 = this;
      e$$405 = arguments;
      var v9170 = !f$$230;
      if (v9170) {
        f$$230 = setTimeout(v2063, c$$640);
      }
      var v2554;
      if (g$$230) {
        v2554 = h$$191 = true;
      } else {
        introspect(JAM.policy.p3) {
          v2554 = i$$240 = a$$822.apply(d$$473, e$$405);
        }
      }
      v2554;
      introspect(JAM.policy.p3) {
        j$$126();
      }
      g$$230 = true;
      return i$$240;
    }
    function v2062() {
      h$$191 = g$$230 = false;
      return;
    }
    var d$$473;
    var e$$405;
    var f$$230;
    var g$$230;
    var h$$191;
    var i$$240;
    introspect(JAM.policy.p3) {
      var j$$126 = b$$743.debounce(v2062, c$$640)
    }
    return v2064;
  }
  function v2061(a$$821) {
    var v2555 = b$$743.delay;
    var v9171 = [a$$821, 1];
    introspect(JAM.policy.p3) {
      var v9172 = i$$238.call(arguments, 1)
    }
    introspect(JAM.policy.p3) {
      var v2556 = v9171.concat(v9172)
    }
    introspect(JAM.policy.p3) {
      return v2555.apply(b$$743, v2556);
    }
  }
  function v2060(a$$820, b$$765) {
    function v2059() {
      introspect(JAM.policy.p3) {
        return a$$820.apply(null, d$$472);
      }
    }
    introspect(JAM.policy.p3) {
      var d$$472 = i$$238.call(arguments, 2)
    }
    return setTimeout(v2059, b$$765);
  }
  function v2058(a$$819, c$$639) {
    function v2057() {
      introspect(JAM.policy.p3) {
        var e$$404 = c$$639.apply(this, arguments)
      }
      var v2557;
      introspect(JAM.policy.p3) {
        var v9174 = b$$743.has(d$$471, e$$404)
      }
      if (v9174) {
        v2557 = d$$471[e$$404];
      } else {
        var v9173 = d$$471;
        introspect(JAM.policy.p3) {
          var v30930 = a$$819.apply(this, arguments)
        }
        introspect(JAM.policy.p2) {
          v2557 = v9173[e$$404] = v30930;
        }
      }
      return v2557;
    }
    var d$$471 = {};
    var v9175 = !c$$639;
    if (v9175) {
      c$$639 = b$$743.identity;
    }
    return v2057;
  }
  function v2056(a$$818) {
    function v2055(c$$638) {
      var v2558 = a$$818;
      var v9176 = a$$818[c$$638];
      introspect(JAM.policy.p3) {
        var v30931 = b$$743.bind(v9176, a$$818)
      }
      introspect(JAM.policy.p2) {
        v2558[c$$638] = v30931;
      }
      return;
    }
    introspect(JAM.policy.p3) {
      var c$$637 = i$$238.call(arguments, 1)
    }
    var v9177 = c$$637.length;
    var v2559 = v9177 == 0;
    if (v2559) {
      introspect(JAM.policy.p3) {
        c$$637 = b$$743.functions(a$$818);
      }
    }
    introspect(JAM.policy.p3) {
      j$$125(c$$637, v2055);
    }
    return;
  }
  function v2054(a$$817, c$$636) {
    function v2053() {
      var v9178 = this instanceof d$$470;
      var v2561 = !v9178;
      if (v2561) {
        introspect(JAM.policy.p3) {
          var v9179 = i$$238.call(arguments)
        }
        introspect(JAM.policy.p3) {
          var v2560 = e$$403.concat(v9179)
        }
        introspect(JAM.policy.p3) {
          return a$$817.apply(c$$636, v2560);
        }
      }
      H$$4.prototype = a$$817.prototype;
      var b$$764 = new H$$4;
      introspect(JAM.policy.p3) {
        var v9180 = i$$238.call(arguments)
      }
      introspect(JAM.policy.p3) {
        var v2562 = e$$403.concat(v9180)
      }
      introspect(JAM.policy.p3) {
        var g$$229 = a$$817.apply(b$$764, v2562)
      }
      var v2563;
      var v15010 = Object(g$$229);
      var v9181 = v15010 === g$$229;
      if (v9181) {
        v2563 = g$$229;
      } else {
        v2563 = b$$764;
      }
      return v2563;
    }
    var d$$470;
    var e$$403;
    var v15011 = a$$817.bind;
    var v9182 = v15011 === t$$32;
    if (v9182) {
      v9182 = t$$32;
    }
    var v2565 = v9182;
    if (v2565) {
      introspect(JAM.policy.p3) {
        var v2564 = i$$238.call(arguments, 1)
      }
      introspect(JAM.policy.p3) {
        return t$$32.apply(a$$817, v2564);
      }
    }
    introspect(JAM.policy.p3) {
      var v9183 = b$$743.isFunction(a$$817)
    }
    var v2566 = !v9183;
    if (v2566) {
      throw new TypeError;
    }
    introspect(JAM.policy.p3) {
      e$$403 = i$$238.call(arguments, 2);
    }
    return d$$470 = v2053;
  }
  function v2052(a$$816, b$$763, d$$469) {
    var v9184 = arguments.length;
    var v2567 = v9184 <= 1;
    if (v2567) {
      b$$763 = a$$816 || 0;
      a$$816 = 0;
    }
    var v2568 = arguments[2];
    var v9185 = !v2568;
    if (v9185) {
      v2568 = 1;
    }
    d$$469 = v2568;
    var v15012 = b$$763 - a$$816;
    var v9186 = v15012 / d$$469;
    introspect(JAM.policy.p3) {
      var v2569 = Math.ceil(v9186)
    }
    introspect(JAM.policy.p3) {
      var e$$402 = Math.max(v2569, 0)
    }
    var f$$229 = 0;
    var g$$228 = Array(e$$402);
    var v2571 = f$$229 < e$$402;
    for (;v2571;) {
      var v2570 = f$$229;
      f$$229 = f$$229 + 1;
      g$$228[v2570] = a$$816;
      a$$816 = a$$816 + d$$469;
      v2571 = f$$229 < e$$402;
    }
    return g$$228;
  }
  function v2051(a$$815, b$$762) {
    var v2572 = a$$815 == null;
    if (v2572) {
      return -1;
    }
    var v9187 = F$$5;
    if (v9187) {
      var v15013 = a$$815.lastIndexOf;
      v9187 = v15013 === F$$5;
    }
    var v2573 = v9187;
    if (v2573) {
      introspect(JAM.policy.p3) {
        return a$$815.lastIndexOf(b$$762);
      }
    }
    var d$$468 = a$$815.length;
    var v2575 = d$$468;
    d$$468 = d$$468 - 1;
    for (;v2575;) {
      var v9188 = d$$468 in a$$815;
      if (v9188) {
        var v15014 = a$$815[d$$468];
        v9188 = v15014 === b$$762;
      }
      var v2574 = v9188;
      if (v2574) {
        return d$$468;
      }
      v2575 = d$$468;
      d$$468 = d$$468 - 1;
    }
    return -1;
  }
  function v2050(a$$814, c$$635, d$$467) {
    var v2576 = a$$814 == null;
    if (v2576) {
      return -1;
    }
    var e$$401;
    if (d$$467) {
      introspect(JAM.policy.p3) {
        d$$467 = b$$743.sortedIndex(a$$814, c$$635);
      }
      var v2577;
      var v15015 = a$$814[d$$467];
      var v9189 = v15015 === c$$635;
      if (v9189) {
        v2577 = d$$467;
      } else {
        v2577 = -1;
      }
      return v2577;
    }
    var v9190 = q$$27;
    if (v9190) {
      var v15016 = a$$814.indexOf;
      v9190 = v15016 === q$$27;
    }
    var v2578 = v9190;
    if (v2578) {
      introspect(JAM.policy.p3) {
        return a$$814.indexOf(c$$635);
      }
    }
    d$$467 = 0;
    e$$401 = a$$814.length;
    var v2580 = d$$467 < e$$401;
    for (;v2580;) {
      var v9191 = d$$467 in a$$814;
      if (v9191) {
        var v15017 = a$$814[d$$467];
        v9191 = v15017 === c$$635;
      }
      var v2579 = v9191;
      if (v2579) {
        return d$$467;
      }
      d$$467++;
      v2580 = d$$467 < e$$401;
    }
    return -1;
  }
  function v2049() {
    introspect(JAM.policy.p3) {
      var a$$813 = i$$238.call(arguments)
    }
    introspect(JAM.policy.p3) {
      var v2581 = b$$743.pluck(a$$813, "length")
    }
    introspect(JAM.policy.p3) {
      var c$$634 = b$$743.max(v2581)
    }
    var d$$466 = Array(c$$634);
    var e$$400 = 0;
    var v2583 = e$$400 < c$$634;
    for (;v2583;) {
      var v2582 = "" + e$$400;
      introspect(JAM.policy.p3) {
        var v30932 = b$$743.pluck(a$$813, v2582)
      }
      d$$466[e$$400] = v30932;
      e$$400++;
      v2583 = e$$400 < c$$634;
    }
    return d$$466;
  }
  function v2048(a$$811) {
    function v2047(a$$812) {
      introspect(JAM.policy.p3) {
        var v2584 = b$$743.include(c$$633, a$$812)
      }
      return !v2584;
    }
    introspect(JAM.policy.p3) {
      var v2585 = i$$238.call(arguments, 1)
    }
    introspect(JAM.policy.p3) {
      var c$$633 = b$$743.flatten(v2585, true)
    }
    introspect(JAM.policy.p3) {
      return b$$743.filter(a$$811, v2047);
    }
  }
  function v2046(a$$809) {
    function v2045(a$$810) {
      function v2044(c$$632) {
        introspect(JAM.policy.p3) {
          var v2586 = b$$743.indexOf(c$$632, a$$810)
        }
        return v2586 >= 0;
      }
      introspect(JAM.policy.p3) {
        return b$$743.every(c$$631, v2044);
      }
    }
    introspect(JAM.policy.p3) {
      var c$$631 = i$$238.call(arguments, 1)
    }
    introspect(JAM.policy.p3) {
      var v2587 = b$$743.uniq(a$$809)
    }
    introspect(JAM.policy.p3) {
      return b$$743.filter(v2587, v2045);
    }
  }
  function v2043() {
    introspect(JAM.policy.p3) {
      var v2588 = b$$743.flatten(arguments, true)
    }
    introspect(JAM.policy.p3) {
      return b$$743.uniq(v2588);
    }
  }
  function v2042(a$$808, c$$630, d$$464) {
    function v2041(d$$465, g$$227, h$$190) {
      var v9192;
      if (c$$630) {
        introspect(JAM.policy.p3) {
          var v20912 = b$$743.last(d$$465)
        }
        var v15018 = v20912 !== g$$227;
        var v20914 = !v15018;
        if (v20914) {
          var v20913 = d$$465.length;
          v15018 = !v20913;
        }
        v9192 = v15018;
      } else {
        introspect(JAM.policy.p3) {
          var v15019 = b$$743.include(d$$465, g$$227)
        }
        v9192 = !v15019;
      }
      var v2590 = v9192;
      if (v2590) {
        introspect(JAM.policy.p3) {
          d$$465.push(g$$227);
        }
        var v2589 = a$$808[h$$190];
        introspect(JAM.policy.p3) {
          e$$399.push(v2589);
        }
      }
      return d$$465;
    }
    var v2591;
    if (d$$464) {
      introspect(JAM.policy.p3) {
        v2591 = b$$743.map(a$$808, d$$464);
      }
    } else {
      v2591 = a$$808;
    }
    d$$464 = v2591;
    var e$$399 = [];
    var v9193 = a$$808.length;
    var v2592 = v9193 < 3;
    if (v2592) {
      c$$630 = true;
    }
    introspect(JAM.policy.p3) {
      b$$743.reduce(d$$464, v2041, []);
    }
    return e$$399;
  }
  function v2040(a$$807) {
    introspect(JAM.policy.p3) {
      var v2593 = i$$238.call(arguments, 1)
    }
    introspect(JAM.policy.p3) {
      return b$$743.difference(a$$807, v2593);
    }
  }
  function v2039(a$$805, c$$629) {
    function v2038(a$$806, e$$398) {
      introspect(JAM.policy.p3) {
        var v2595 = b$$743.isArray(e$$398)
      }
      if (v2595) {
        var v9194;
        if (c$$629) {
          v9194 = e$$398;
        } else {
          introspect(JAM.policy.p3) {
            v9194 = b$$743.flatten(e$$398);
          }
        }
        var v2594 = v9194;
        introspect(JAM.policy.p3) {
          return a$$806.concat(v2594);
        }
      }
      var v2596 = a$$806.length;
      introspect(JAM.policy.p2) {
        a$$806[v2596] = e$$398;
      }
      return a$$806;
    }
    introspect(JAM.policy.p3) {
      return b$$743.reduce(a$$805, v2038, []);
    }
  }
  function v2037(a$$803) {
    function v2036(a$$804) {
      var v2597 = !a$$804;
      return !v2597;
    }
    introspect(JAM.policy.p3) {
      return b$$743.filter(a$$803, v2036);
    }
  }
  function v2035(a$$802, b$$761, d$$463) {
    var v9195;
    var v20915 = b$$761 == null;
    var v24056 = !v20915;
    if (v24056) {
      v20915 = d$$463;
    }
    var v15020 = v20915;
    if (v15020) {
      v9195 = 1;
    } else {
      v9195 = b$$761;
    }
    var v2598 = v9195;
    introspect(JAM.policy.p3) {
      return i$$238.call(a$$802, v2598);
    }
  }
  function v2034(a$$801, b$$760, d$$462) {
    var v2599;
    var v15021 = b$$760 != null;
    if (v15021) {
      v15021 = !d$$462;
    }
    var v9198 = v15021;
    if (v9198) {
      var v20916 = a$$801.length;
      var v15022 = v20916 - b$$760;
      introspect(JAM.policy.p3) {
        var v9196 = Math.max(v15022, 0)
      }
      introspect(JAM.policy.p3) {
        v2599 = i$$238.call(a$$801, v9196);
      }
    } else {
      var v15023 = a$$801.length;
      var v9197 = v15023 - 1;
      v2599 = a$$801[v9197];
    }
    return v2599;
  }
  function v2033(a$$800, b$$759, d$$461) {
    var v9199 = a$$800.length;
    var v15024;
    var v24057 = b$$759 == null;
    var v26221 = !v24057;
    if (v26221) {
      v24057 = d$$461;
    }
    var v20917 = v24057;
    if (v20917) {
      v15024 = 1;
    } else {
      v15024 = b$$759;
    }
    var v9200 = v15024;
    var v2600 = v9199 - v9200;
    introspect(JAM.policy.p3) {
      return i$$238.call(a$$800, 0, v2600);
    }
  }
  function v2032(a$$799, b$$758, d$$460) {
    var v2601;
    var v15025 = b$$758 != null;
    if (v15025) {
      v15025 = !d$$460;
    }
    var v9201 = v15025;
    if (v9201) {
      introspect(JAM.policy.p3) {
        v2601 = i$$238.call(a$$799, 0, b$$758);
      }
    } else {
      v2601 = a$$799[0];
    }
    return v2601;
  }
  function v2031(a$$798) {
    var v2602;
    introspect(JAM.policy.p3) {
      var v9203 = b$$743.isArray(a$$798)
    }
    if (v9203) {
      v2602 = a$$798.length;
    } else {
      introspect(JAM.policy.p3) {
        var v9202 = b$$743.keys(a$$798)
      }
      v2602 = v9202.length;
    }
    return v2602;
  }
  function v2030(a$$797) {
    var v2603;
    var v9205 = !a$$797;
    if (v9205) {
      v2603 = [];
    } else {
      var v9204;
      introspect(JAM.policy.p3) {
        var v20918 = b$$743.isArray(a$$797)
      }
      var v24058 = !v20918;
      if (v24058) {
        introspect(JAM.policy.p3) {
          v20918 = b$$743.isArguments(a$$797);
        }
      }
      var v15027 = v20918;
      if (v15027) {
        introspect(JAM.policy.p3) {
          v9204 = i$$238.call(a$$797);
        }
      } else {
        var v15026;
        var v24059 = a$$797.toArray;
        if (v24059) {
          var v26222 = a$$797.toArray;
          introspect(JAM.policy.p3) {
            v24059 = b$$743.isFunction(v26222);
          }
        }
        var v20919 = v24059;
        if (v20919) {
          introspect(JAM.policy.p3) {
            v15026 = a$$797.toArray();
          }
        } else {
          introspect(JAM.policy.p3) {
            v15026 = b$$743.values(a$$797);
          }
        }
        v9204 = v15026;
      }
      v2603 = v9204;
    }
    return v2603;
  }
  function v2029(a$$796, c$$628) {
    var d$$459;
    var v9206 = !d$$459;
    if (v9206) {
      d$$459 = b$$743.identity;
    }
    var e$$397 = 0;
    var f$$228 = a$$796.length;
    var v2606 = e$$397 < f$$228;
    for (;v2606;) {
      var v2604 = e$$397 + f$$228;
      var g$$226 = v2604 >> 1;
      var v2605;
      var v20920 = a$$796[g$$226];
      introspect(JAM.policy.p3) {
        var v15028 = d$$459(v20920)
      }
      introspect(JAM.policy.p3) {
        var v15029 = d$$459(c$$628)
      }
      var v9207 = v15028 < v15029;
      if (v9207) {
        v2605 = e$$397 = g$$226 + 1;
      } else {
        v2605 = f$$228 = g$$226;
      }
      v2605;
      v2606 = e$$397 < f$$228;
    }
    return e$$397;
  }
  function v2028(a$$793, c$$626) {
    function v2027(a$$795, b$$757) {
      introspect(JAM.policy.p3) {
        var c$$627 = e$$396(a$$795, b$$757)
      }
      var v9208 = d$$458[c$$627];
      var v15030 = !v9208;
      if (v15030) {
        introspect(JAM.policy.p2) {
          v9208 = d$$458[c$$627] = [];
        }
      }
      var v2607 = v9208;
      introspect(JAM.policy.p3) {
        v2607.push(a$$795);
      }
      return;
    }
    function v2026(a$$794) {
      return a$$794[c$$626];
    }
    var d$$458 = {};
    var v2608;
    introspect(JAM.policy.p3) {
      var v9209 = b$$743.isFunction(c$$626)
    }
    if (v9209) {
      v2608 = c$$626;
    } else {
      v2608 = v2026;
    }
    var e$$396 = v2608;
    introspect(JAM.policy.p3) {
      j$$125(a$$793, v2027);
    }
    return d$$458;
  }
  function v2025(a$$789) {
    function v2024(a$$792, b$$756) {
      var c$$625 = a$$792.criteria;
      var d$$457 = b$$756.criteria;
      var v2609;
      var v15031 = void 0;
      var v9211 = c$$625 === v15031;
      if (v9211) {
        v2609 = 1;
      } else {
        var v9210;
        var v20921 = void 0;
        var v15033 = d$$457 === v20921;
        if (v15033) {
          v9210 = -1;
        } else {
          var v15032;
          var v20923 = c$$625 < d$$457;
          if (v20923) {
            v15032 = -1;
          } else {
            var v20922;
            var v24060 = c$$625 > d$$457;
            if (v24060) {
              v20922 = 1;
            } else {
              v20922 = 0;
            }
            v15032 = v20922;
          }
          v9210 = v15032;
        }
        v2609 = v9210;
      }
      return v2609;
    }
    function v2023(a$$791, b$$755, c$$624) {
      introspect(JAM.policy.p3) {
        var v2610 = e$$395.call(d$$456, a$$791, b$$755, c$$624)
      }
      return {value:a$$791, criteria:v2610};
    }
    function v2022(a$$790) {
      return a$$790[c$$623];
    }
    var c$$623;
    var d$$456;
    var v2611;
    introspect(JAM.policy.p3) {
      var v9212 = b$$743.isFunction(c$$623)
    }
    if (v9212) {
      v2611 = c$$623;
    } else {
      v2611 = v2022;
    }
    var e$$395 = v2611;
    introspect(JAM.policy.p3) {
      var v9213 = b$$743.map(a$$789, v2023)
    }
    introspect(JAM.policy.p3) {
      var v2612 = v9213.sort(v2024)
    }
    introspect(JAM.policy.p3) {
      return b$$743.pluck(v2612, "value");
    }
  }
  function v2021(a$$787) {
    function v2020(a$$788, f$$227) {
      introspect(JAM.policy.p3) {
        var v9214 = Math.random()
      }
      var v9215 = f$$227 + 1;
      var v2613 = v9214 * v9215;
      introspect(JAM.policy.p3) {
        d$$455 = Math.floor(v2613);
      }
      introspect(JAM.policy.p2) {
        b$$754[f$$227] = b$$754[d$$455];
      }
      b$$754[d$$455] = a$$788;
      return;
    }
    var b$$754 = [];
    var d$$455;
    introspect(JAM.policy.p3) {
      j$$125(a$$787, v2020);
    }
    return b$$754;
  }
  function v2019(a$$785, c$$622, d$$454) {
    function v2018(a$$786, b$$753, h$$189) {
      var v2614;
      if (c$$622) {
        introspect(JAM.policy.p3) {
          v2614 = c$$622.call(d$$454, a$$786, b$$753, h$$189);
        }
      } else {
        v2614 = a$$786;
      }
      b$$753 = v2614;
      var v9216 = e$$394.computed;
      var v2615 = b$$753 < v9216;
      if (v2615) {
        e$$394 = {value:a$$786, computed:b$$753};
      }
      return;
    }
    var v15034 = !c$$622;
    if (v15034) {
      introspect(JAM.policy.p3) {
        v15034 = b$$743.isArray(a$$785);
      }
    }
    var v9217 = v15034;
    if (v9217) {
      var v15035 = a$$785[0];
      var v20924 = a$$785[0];
      var v15036 = +v20924;
      v9217 = v15035 === v15036;
    }
    var v2617 = v9217;
    if (v2617) {
      var v2616 = Math.min;
      introspect(JAM.policy.p3) {
        return v2616.apply(Math, a$$785);
      }
    }
    var v9218 = !c$$622;
    if (v9218) {
      introspect(JAM.policy.p3) {
        v9218 = b$$743.isEmpty(a$$785);
      }
    }
    var v2618 = v9218;
    if (v2618) {
      return Infinity;
    }
    var e$$394 = {computed:Infinity};
    introspect(JAM.policy.p3) {
      j$$125(a$$785, v2018);
    }
    return e$$394.value;
  }
  function v2017(a$$783, c$$621, d$$453) {
    function v2016(a$$784, b$$752, h$$188) {
      var v2619;
      if (c$$621) {
        introspect(JAM.policy.p3) {
          v2619 = c$$621.call(d$$453, a$$784, b$$752, h$$188);
        }
      } else {
        v2619 = a$$784;
      }
      b$$752 = v2619;
      var v9219 = e$$393.computed;
      var v2620 = b$$752 >= v9219;
      if (v2620) {
        e$$393 = {value:a$$784, computed:b$$752};
      }
      return;
    }
    var v15037 = !c$$621;
    if (v15037) {
      introspect(JAM.policy.p3) {
        v15037 = b$$743.isArray(a$$783);
      }
    }
    var v9220 = v15037;
    if (v9220) {
      var v15038 = a$$783[0];
      var v20925 = a$$783[0];
      var v15039 = +v20925;
      v9220 = v15038 === v15039;
    }
    var v2622 = v9220;
    if (v2622) {
      var v2621 = Math.max;
      introspect(JAM.policy.p3) {
        return v2621.apply(Math, a$$783);
      }
    }
    var v9221 = !c$$621;
    if (v9221) {
      introspect(JAM.policy.p3) {
        v9221 = b$$743.isEmpty(a$$783);
      }
    }
    var v2623 = v9221;
    if (v2623) {
      return -Infinity;
    }
    var v2624 = -Infinity;
    var e$$393 = {computed:v2624};
    introspect(JAM.policy.p3) {
      j$$125(a$$783, v2016);
    }
    return e$$393.value;
  }
  function v2015(a$$781, c$$620) {
    function v2014(a$$782) {
      return a$$782[c$$620];
    }
    introspect(JAM.policy.p3) {
      return b$$743.map(a$$781, v2014);
    }
  }
  function v2013(a$$779, c$$619) {
    function v2012(a$$780) {
      var v9222;
      introspect(JAM.policy.p3) {
        var v15040 = b$$743.isFunction(c$$619)
      }
      if (v15040) {
        v9222 = c$$619 || a$$780;
      } else {
        v9222 = a$$780[c$$619];
      }
      var v2625 = v9222;
      introspect(JAM.policy.p3) {
        return v2625.apply(a$$780, d$$452);
      }
    }
    introspect(JAM.policy.p3) {
      var d$$452 = i$$238.call(arguments, 2)
    }
    introspect(JAM.policy.p3) {
      return b$$743.map(a$$779, v2012);
    }
  }
  function v2011(a$$777, c$$618) {
    function v2010(a$$778) {
      return a$$778 === c$$618;
    }
    var b$$751 = false;
    var v2626 = a$$777 == null;
    if (v2626) {
      return b$$751;
    }
    var v9223 = q$$27;
    if (v9223) {
      var v15041 = a$$777.indexOf;
      v9223 = v15041 === q$$27;
    }
    var v2628 = v9223;
    if (v2628) {
      introspect(JAM.policy.p3) {
        var v2627 = a$$777.indexOf(c$$618)
      }
      return v2627 != -1;
    }
    introspect(JAM.policy.p3) {
      return b$$751 = G$$4(a$$777, v2010);
    }
  }
  function v2009(a$$775, c$$617, d$$451) {
    function v2008(a$$776, b$$750, h$$187) {
      var v9224 = e$$392;
      var v15042 = !v9224;
      if (v15042) {
        introspect(JAM.policy.p3) {
          v9224 = e$$392 = c$$617.call(d$$451, a$$776, b$$750, h$$187);
        }
      }
      var v2629 = v9224;
      if (v2629) {
        return o$$41;
      }
      return;
    }
    var v9225 = !c$$617;
    if (v9225) {
      c$$617 = b$$743.identity;
    }
    var e$$392 = false;
    var v2630 = a$$775 == null;
    if (v2630) {
      return e$$392;
    }
    var v9226 = E$$5;
    if (v9226) {
      var v15043 = a$$775.some;
      v9226 = v15043 === E$$5;
    }
    var v2631 = v9226;
    if (v2631) {
      introspect(JAM.policy.p3) {
        return a$$775.some(c$$617, d$$451);
      }
    }
    introspect(JAM.policy.p3) {
      j$$125(a$$775, v2008);
    }
    var v2632 = !e$$392;
    return !v2632;
  }
  function v2007(a$$773, c$$616, b$$749) {
    function v2006(a$$774, g$$225, h$$186) {
      var v15044 = e$$391;
      if (v15044) {
        introspect(JAM.policy.p3) {
          v15044 = c$$616.call(b$$749, a$$774, g$$225, h$$186);
        }
      }
      var v9227 = e$$391 = v15044;
      var v2633 = !v9227;
      if (v2633) {
        return o$$41;
      }
      return;
    }
    var e$$391 = true;
    var v2634 = a$$773 == null;
    if (v2634) {
      return e$$391;
    }
    var v9228 = D$$5;
    if (v9228) {
      var v15045 = a$$773.every;
      v9228 = v15045 === D$$5;
    }
    var v2635 = v9228;
    if (v2635) {
      introspect(JAM.policy.p3) {
        return a$$773.every(c$$616, b$$749);
      }
    }
    introspect(JAM.policy.p3) {
      j$$125(a$$773, v2006);
    }
    var v2636 = !e$$391;
    return !v2636;
  }
  function v2005(a$$771, c$$615, b$$748) {
    function v2004(a$$772, g$$224, h$$185) {
      introspect(JAM.policy.p3) {
        var v2637 = c$$615.call(b$$748, a$$772, g$$224, h$$185)
      }
      var v9230 = !v2637;
      if (v9230) {
        var v9229 = e$$390.length;
        e$$390[v9229] = a$$772;
      }
      return;
    }
    var e$$390 = [];
    var v2638 = a$$771 == null;
    if (v2638) {
      return e$$390;
    }
    introspect(JAM.policy.p3) {
      j$$125(a$$771, v2004);
    }
    return e$$390;
  }
  function v2003(a$$769, c$$614, b$$747) {
    function v2002(a$$770, g$$223, h$$184) {
      introspect(JAM.policy.p3) {
        var v2639 = c$$614.call(b$$747, a$$770, g$$223, h$$184)
      }
      if (v2639) {
        var v9231 = e$$389.length;
        e$$389[v9231] = a$$770;
      }
      return;
    }
    var e$$389 = [];
    var v2640 = a$$769 == null;
    if (v2640) {
      return e$$389;
    }
    var v9232 = C$$5;
    if (v9232) {
      var v15046 = a$$769.filter;
      v9232 = v15046 === C$$5;
    }
    var v2641 = v9232;
    if (v2641) {
      introspect(JAM.policy.p3) {
        return a$$769.filter(c$$614, b$$747);
      }
    }
    introspect(JAM.policy.p3) {
      j$$125(a$$769, v2002);
    }
    return e$$389;
  }
  function v2001(a$$767, c$$613, b$$746) {
    function v2000(a$$768, g$$222, h$$183) {
      introspect(JAM.policy.p3) {
        var v2642 = c$$613.call(b$$746, a$$768, g$$222, h$$183)
      }
      if (v2642) {
        e$$388 = a$$768;
        return true;
      }
      return;
    }
    var e$$388;
    introspect(JAM.policy.p3) {
      G$$4(a$$767, v2000);
    }
    return e$$388;
  }
  function v1999(a$$766, c$$612, d$$450, e$$387) {
    var v2643 = arguments.length;
    var f$$226 = v2643 > 2;
    var v2644 = a$$766 == null;
    if (v2644) {
      a$$766 = [];
    }
    var v9233 = B$$6;
    if (v9233) {
      var v15047 = a$$766.reduceRight;
      v9233 = v15047 === B$$6;
    }
    var v2646 = v9233;
    if (v2646) {
      if (e$$387) {
        introspect(JAM.policy.p3) {
          c$$612 = b$$743.bind(c$$612, e$$387);
        }
      }
      var v2645;
      if (f$$226) {
        introspect(JAM.policy.p3) {
          v2645 = a$$766.reduceRight(c$$612, d$$450);
        }
      } else {
        introspect(JAM.policy.p3) {
          v2645 = a$$766.reduceRight(c$$612);
        }
      }
      return v2645;
    }
    introspect(JAM.policy.p3) {
      var v2647 = b$$743.toArray(a$$766)
    }
    introspect(JAM.policy.p3) {
      var g$$221 = v2647.reverse()
    }
    var v9234 = e$$387;
    if (v9234) {
      v9234 = !f$$226;
    }
    var v2648 = v9234;
    if (v2648) {
      introspect(JAM.policy.p3) {
        c$$612 = b$$743.bind(c$$612, e$$387);
      }
    }
    var v2649;
    if (f$$226) {
      introspect(JAM.policy.p3) {
        v2649 = b$$743.reduce(g$$221, c$$612, d$$450, e$$387);
      }
    } else {
      introspect(JAM.policy.p3) {
        v2649 = b$$743.reduce(g$$221, c$$612);
      }
    }
    return v2649;
  }
  function v1998(a$$764, c$$611, d$$449, e$$386) {
    function v1997(a$$765, b$$745, i$$239) {
      if (f$$225) {
        introspect(JAM.policy.p3) {
          d$$449 = c$$611.call(e$$386, d$$449, a$$765, b$$745, i$$239);
        }
      } else {
        d$$449 = a$$765;
        f$$225 = true;
      }
      return;
    }
    var v2650 = arguments.length;
    var f$$225 = v2650 > 2;
    var v2651 = a$$764 == null;
    if (v2651) {
      a$$764 = [];
    }
    var v9235 = A$$6;
    if (v9235) {
      var v15048 = a$$764.reduce;
      v9235 = v15048 === A$$6;
    }
    var v2653 = v9235;
    if (v2653) {
      if (e$$386) {
        introspect(JAM.policy.p3) {
          c$$611 = b$$743.bind(c$$611, e$$386);
        }
      }
      var v2652;
      if (f$$225) {
        introspect(JAM.policy.p3) {
          v2652 = a$$764.reduce(c$$611, d$$449);
        }
      } else {
        introspect(JAM.policy.p3) {
          v2652 = a$$764.reduce(c$$611);
        }
      }
      return v2652;
    }
    introspect(JAM.policy.p3) {
      j$$125(a$$764, v1997);
    }
    var v2654 = !f$$225;
    if (v2654) {
      throw new TypeError("Reduce of empty array with no initial value");
    }
    return d$$449;
  }
  function v1996(a$$762, c$$610, b$$744) {
    function v1995(a$$763, g$$220, h$$182) {
      var v2655 = e$$385;
      var v2656 = e$$385.length;
      introspect(JAM.policy.p3) {
        var v30933 = c$$610.call(b$$744, a$$763, g$$220, h$$182)
      }
      v2655[v2656] = v30933;
      return;
    }
    var e$$385 = [];
    var v2657 = a$$762 == null;
    if (v2657) {
      return e$$385;
    }
    var v9236 = z$$10;
    if (v9236) {
      var v15049 = a$$762.map;
      v9236 = v15049 === z$$10;
    }
    var v2658 = v9236;
    if (v2658) {
      introspect(JAM.policy.p3) {
        return a$$762.map(c$$610, b$$744);
      }
    }
    introspect(JAM.policy.p3) {
      j$$125(a$$762, v1995);
    }
    var v9237 = a$$762.length;
    var v15050 = a$$762.length;
    var v9238 = +v15050;
    var v2659 = v9237 === v9238;
    if (v2659) {
      e$$385.length = a$$762.length;
    }
    return e$$385;
  }
  function v1994(a$$761, c$$609, d$$448) {
    var v2665 = a$$761 != null;
    if (v2665) {
      var v9239 = y$$56;
      if (v9239) {
        var v15051 = a$$761.forEach;
        v9239 = v15051 === y$$56;
      }
      var v2664 = v9239;
      if (v2664) {
        introspect(JAM.policy.p3) {
          a$$761.forEach(c$$609, d$$448);
        }
      } else {
        var v9240 = a$$761.length;
        var v15052 = a$$761.length;
        var v9241 = +v15052;
        var v2663 = v9240 === v9241;
        if (v2663) {
          var e$$384 = 0;
          var f$$224 = a$$761.length;
          var v2661 = e$$384 < f$$224;
          for (;v2661;) {
            var v9242 = e$$384 in a$$761;
            if (v9242) {
              var v20926 = a$$761[e$$384];
              introspect(JAM.policy.p3) {
                var v15053 = c$$609.call(d$$448, v20926, e$$384, a$$761)
              }
              v9242 = v15053 === o$$41;
            }
            var v2660 = v9242;
            if (v2660) {
              break;
            }
            e$$384++;
            v2661 = e$$384 < f$$224;
          }
        } else {
          for (e$$384 in a$$761) {
            introspect(JAM.policy.p3) {
              var v9243 = b$$743.has(a$$761, e$$384)
            }
            if (v9243) {
              var v20927 = a$$761[e$$384];
              introspect(JAM.policy.p3) {
                var v15054 = c$$609.call(d$$448, v20927, e$$384, a$$761)
              }
              v9243 = v15054 === o$$41;
            }
            var v2662 = v9243;
            if (v2662) {
              break;
            }
          }
        }
      }
    }
    return;
  }
  function M$$3(a$$871, c$$649) {
    function v1992() {
      introspect(JAM.policy.p3) {
        var a$$872 = i$$238.call(arguments)
      }
      var v2666 = this._wrapped;
      introspect(JAM.policy.p3) {
        J$$4.call(a$$872, v2666);
      }
      introspect(JAM.policy.p3) {
        var v2667 = c$$649.apply(b$$743, a$$872)
      }
      var v2668 = this._chain;
      return x$$76(v2667, v2668);
    }
    var v2669 = m$$63.prototype;
    introspect(JAM.policy.p2) {
      v2669[a$$871] = v1992;
    }
    return;
  }
  function x$$76(a$$870, c$$648) {
    var v2670;
    if (c$$648) {
      var v9244 = b$$743(a$$870);
      introspect(JAM.policy.p3) {
        v2670 = v9244.chain();
      }
    } else {
      v2670 = a$$870;
    }
    return v2670;
  }
  function m$$63(a$$869) {
    this._wrapped = a$$869;
    return;
  }
  function w$$20(a$$860) {
    function v1993(a$$861, b$$779) {
      return n$$109[b$$779];
    }
    introspect(JAM.policy.p3) {
      return a$$860.replace(P$$3, v1993);
    }
  }
  function H$$4() {
    return;
  }
  function b$$743(a$$760) {
    return new m$$63(a$$760);
  }
  function r$$31(a$$759, c$$608, d$$447) {
    var v2672 = a$$759 === c$$608;
    if (v2672) {
      var v2671 = 0 !== a$$759;
      var v9247 = !v2671;
      if (v9247) {
        var v9245 = 1 / a$$759;
        var v9246 = 1 / c$$608;
        v2671 = v9245 == v9246;
      }
      return v2671;
    }
    var v9248 = null == a$$759;
    var v15055 = !v9248;
    if (v15055) {
      v9248 = null == c$$608;
    }
    var v2673 = v9248;
    if (v2673) {
      return a$$759 === c$$608;
    }
    var v2674 = a$$759._chain;
    if (v2674) {
      a$$759 = a$$759._wrapped;
    }
    var v2675 = c$$608._chain;
    if (v2675) {
      c$$608 = c$$608._wrapped;
    }
    var v9249 = a$$759.isEqual;
    if (v9249) {
      var v15056 = a$$759.isEqual;
      introspect(JAM.policy.p3) {
        v9249 = b$$743.isFunction(v15056);
      }
    }
    var v2676 = v9249;
    if (v2676) {
      introspect(JAM.policy.p3) {
        return a$$759.isEqual(c$$608);
      }
    }
    var v9250 = c$$608.isEqual;
    if (v9250) {
      var v15057 = c$$608.isEqual;
      introspect(JAM.policy.p3) {
        v9250 = b$$743.isFunction(v15057);
      }
    }
    var v2677 = v9250;
    if (v2677) {
      introspect(JAM.policy.p3) {
        return c$$608.isEqual(a$$759);
      }
    }
    introspect(JAM.policy.p3) {
      var e$$383 = l$$96.call(a$$759)
    }
    introspect(JAM.policy.p3) {
      var v9251 = l$$96.call(c$$608)
    }
    var v2678 = e$$383 != v9251;
    if (v2678) {
      return !1;
    }
    switch(e$$383) {
      case "[object String]":
        var v2679 = "" + c$$608;
        return a$$759 == v2679;
      case "[object Number]":
        var v2680;
        var v15058 = +a$$759;
        var v9254 = a$$759 != v15058;
        if (v9254) {
          var v9252 = +c$$608;
          v2680 = c$$608 != v9252;
        } else {
          var v9253;
          var v15062 = 0 == a$$759;
          if (v15062) {
            var v15059 = 1 / a$$759;
            var v15060 = 1 / c$$608;
            v9253 = v15059 == v15060;
          } else {
            var v15061 = +c$$608;
            v9253 = a$$759 == v15061;
          }
          v2680 = v9253;
        }
        return v2680;
      case "[object Date]":
      ;
      case "[object Boolean]":
        var v2681 = +a$$759;
        var v2682 = +c$$608;
        return v2681 == v2682;
      case "[object RegExp]":
        var v20928 = a$$759.source;
        var v20929 = c$$608.source;
        var v15063 = v20928 == v20929;
        if (v15063) {
          var v20930 = a$$759.global;
          var v20931 = c$$608.global;
          v15063 = v20930 == v20931;
        }
        var v9255 = v15063;
        if (v9255) {
          var v15064 = a$$759.multiline;
          var v15065 = c$$608.multiline;
          v9255 = v15064 == v15065;
        }
        var v2683 = v9255;
        if (v2683) {
          var v9256 = a$$759.ignoreCase;
          var v9257 = c$$608.ignoreCase;
          v2683 = v9256 == v9257;
        }
        return v2683;
    }
    var v15066 = typeof a$$759;
    var v9258 = "object" != v15066;
    var v15068 = !v9258;
    if (v15068) {
      var v15067 = typeof c$$608;
      v9258 = "object" != v15067;
    }
    var v2684 = v9258;
    if (v2684) {
      return !1;
    }
    var f$$223 = d$$447.length;
    var v2686 = f$$223;
    f$$223 = f$$223 - 1;
    for (;v2686;) {
      var v9259 = d$$447[f$$223];
      var v2685 = v9259 == a$$759;
      if (v2685) {
        return !0;
      }
      v2686 = f$$223;
      f$$223 = f$$223 - 1;
    }
    introspect(JAM.policy.p3) {
      d$$447.push(a$$759);
    }
    f$$223 = 0;
    var g$$219 = !0;
    var v2692 = "[object Array]" == e$$383;
    if (v2692) {
      f$$223 = a$$759.length;
      var v15069 = c$$608.length;
      var v2688 = g$$219 = f$$223 == v15069;
      if (v2688) {
        var v9260 = f$$223;
        f$$223 = f$$223 - 1;
        if (v9260) {
          var v20932 = f$$223 in a$$759;
          var v20933 = f$$223 in c$$608;
          var v15070 = v20932 == v20933;
          if (v15070) {
            var v20934 = a$$759[f$$223];
            var v20935 = c$$608[f$$223];
            v15070 = r$$31(v20934, v20935, d$$447);
          }
          v9260 = g$$219 = v15070;
        }
        var v2687 = v9260;
        for (;v2687;) {
          var v9261 = f$$223;
          f$$223 = f$$223 - 1;
          if (v9261) {
            var v20936 = f$$223 in a$$759;
            var v20937 = f$$223 in c$$608;
            var v15071 = v20936 == v20937;
            if (v15071) {
              var v20938 = a$$759[f$$223];
              var v20939 = c$$608[f$$223];
              v15071 = r$$31(v20938, v20939, d$$447);
            }
            v9261 = g$$219 = v15071;
          }
          v2687 = v9261;
        }
      }
    } else {
      var v15072 = "constructor" in a$$759;
      var v15073 = "constructor" in c$$608;
      var v9262 = v15072 != v15073;
      var v15076 = !v9262;
      if (v15076) {
        var v15074 = a$$759.constructor;
        var v15075 = c$$608.constructor;
        v9262 = v15074 != v15075;
      }
      var v2689 = v9262;
      if (v2689) {
        return !1;
      }
      var h$$181;
      for (h$$181 in a$$759) {
        introspect(JAM.policy.p3) {
          var v9263 = b$$743.has(a$$759, h$$181)
        }
        if (v9263) {
          f$$223++;
          introspect(JAM.policy.p3) {
            var v24061 = b$$743.has(c$$608, h$$181)
          }
          if (v24061) {
            var v26223 = a$$759[h$$181];
            var v26224 = c$$608[h$$181];
            v24061 = r$$31(v26223, v26224, d$$447);
          }
          var v20940 = g$$219 = v24061;
          v9263 = !v20940;
        }
        var v2690 = v9263;
        if (v2690) {
          break;
        }
      }
      if (g$$219) {
        for (h$$181 in c$$608) {
          introspect(JAM.policy.p3) {
            var v9264 = b$$743.has(c$$608, h$$181)
          }
          if (v9264) {
            var v15077 = f$$223;
            f$$223 = f$$223 - 1;
            v9264 = !v15077;
          }
          var v2691 = v9264;
          if (v2691) {
            break;
          }
        }
        g$$219 = !f$$223;
      }
    }
    introspect(JAM.policy.p3) {
      d$$447.pop();
    }
    return g$$219;
  }
  var s$$35 = this;
  var I$$4 = s$$35._;
  var o$$41 = {};
  var k$$92 = Array.prototype;
  var p$$60 = Object.prototype;
  var i$$238 = k$$92.slice;
  var J$$4 = k$$92.unshift;
  var l$$96 = p$$60.toString;
  var K$$3 = p$$60.hasOwnProperty;
  var y$$56 = k$$92.forEach;
  var z$$10 = k$$92.map;
  var A$$6 = k$$92.reduce;
  var B$$6 = k$$92.reduceRight;
  var C$$5 = k$$92.filter;
  var D$$5 = k$$92.every;
  var E$$5 = k$$92.some;
  var q$$27 = k$$92.indexOf;
  var F$$5 = k$$92.lastIndexOf;
  p$$60 = Array.isArray;
  var L$$3 = Object.keys;
  var v2693 = Function.prototype;
  var t$$32 = v2693.bind;
  var v2694;
  var v15078 = typeof exports;
  var v9265 = "undefined" !== v15078;
  if (v9265) {
    var v24062 = typeof module;
    var v20941 = "undefined" !== v24062;
    if (v20941) {
      v20941 = module.exports;
    }
    var v15079 = v20941;
    if (v15079) {
      exports = module.exports = b$$743;
    }
    v2694 = exports._ = b$$743;
  } else {
    v2694 = s$$35._ = b$$743;
  }
  v2694;
  b$$743.VERSION = "1.3.3";
  var j$$125 = b$$743.each = b$$743.forEach = v1994;
  b$$743.map = b$$743.collect = v1996;
  b$$743.reduce = b$$743.foldl = b$$743.inject = v1998;
  b$$743.reduceRight = b$$743.foldr = v1999;
  b$$743.find = b$$743.detect = v2001;
  b$$743.filter = b$$743.select = v2003;
  b$$743.reject = v2005;
  b$$743.every = b$$743.all = v2007;
  var G$$4 = b$$743.some = b$$743.any = v2009;
  b$$743.include = b$$743.contains = v2011;
  b$$743.invoke = v2013;
  b$$743.pluck = v2015;
  b$$743.max = v2017;
  b$$743.min = v2019;
  b$$743.shuffle = v2021;
  b$$743.sortBy = v2025;
  b$$743.groupBy = v2028;
  b$$743.sortedIndex = v2029;
  b$$743.toArray = v2030;
  b$$743.size = v2031;
  b$$743.first = b$$743.head = b$$743.take = v2032;
  b$$743.initial = v2033;
  b$$743.last = v2034;
  b$$743.rest = b$$743.tail = v2035;
  b$$743.compact = v2037;
  b$$743.flatten = v2039;
  b$$743.without = v2040;
  b$$743.uniq = b$$743.unique = v2042;
  b$$743.union = v2043;
  b$$743.intersection = b$$743.intersect = v2046;
  b$$743.difference = v2048;
  b$$743.zip = v2049;
  b$$743.indexOf = v2050;
  b$$743.lastIndexOf = v2051;
  b$$743.range = v2052;
  b$$743.bind = v2054;
  b$$743.bindAll = v2056;
  b$$743.memoize = v2058;
  b$$743.delay = v2060;
  b$$743.defer = v2061;
  b$$743.throttle = v2065;
  b$$743.debounce = v2068;
  b$$743.once = v2070;
  b$$743.wrap = v2072;
  b$$743.compose = v2074;
  b$$743.after = v2076;
  b$$743.keys = L$$3 || v2077;
  b$$743.values = v2078;
  b$$743.functions = b$$743.methods = v2079;
  b$$743.extend = v2081;
  b$$743.pick = v2083;
  b$$743.defaults = v2085;
  b$$743.clone = v2086;
  b$$743.tap = v2087;
  b$$743.isEqual = v2088;
  b$$743.isEmpty = v2089;
  b$$743.isElement = v2090;
  b$$743.isArray = p$$60 || v2091;
  b$$743.isObject = v2092;
  b$$743.isArguments = v2093;
  introspect(JAM.policy.p3) {
    var v2695 = b$$743.isArguments(arguments)
  }
  var v9266 = !v2695;
  if (v9266) {
    b$$743.isArguments = v2094;
  }
  b$$743.isFunction = v2095;
  b$$743.isString = v2096;
  b$$743.isNumber = v2097;
  b$$743.isFinite = v2098;
  b$$743.isNaN = v2099;
  b$$743.isBoolean = v2100;
  b$$743.isDate = v2101;
  b$$743.isRegExp = v2102;
  b$$743.isNull = v2103;
  b$$743.isUndefined = v2104;
  b$$743.has = v2105;
  b$$743.noConflict = v2106;
  b$$743.identity = v2107;
  b$$743.times = v2108;
  b$$743.escape = v2109;
  b$$743.result = v2110;
  b$$743.mixin = v2112;
  var N$$3 = 0;
  b$$743.uniqueId = v2113;
  b$$743.templateSettings = {evaluate:/<%([\s\S]+?)%>/g, interpolate:/<%=([\s\S]+?)%>/g, escape:/<%-([\s\S]+?)%>/g};
  var u$$19 = /.^/;
  var n$$109 = {"\\":"\\", "'":"'", r:"\r", n:"\n", t:"\t", u2028:"\u2028", u2029:"\u2029"};
  var v$$14;
  for (v$$14 in n$$109) {
    var v2696 = n$$109[v$$14];
    introspect(JAM.policy.p2) {
      n$$109[v2696] = v$$14;
    }
  }
  var O$$3 = /\\|'|\r|\n|\t|\u2028|\u2029/g;
  var P$$3 = /\\(\\|'|r|n|t|u2028|u2029)/g;
  b$$743.template = v2119;
  b$$743.chain = v2120;
  b$$743.prototype = m$$63.prototype;
  introspect(JAM.policy.p3) {
    b$$743.mixin(b$$743);
  }
  introspect(JAM.policy.p3) {
    var v2697 = "pop,push,reverse,shift,sort,splice,unshift".split(",")
  }
  introspect(JAM.policy.p3) {
    j$$125(v2697, v2122);
  }
  var v2698 = ["concat", "join", "slice"];
  introspect(JAM.policy.p3) {
    j$$125(v2698, v2124);
  }
  var v2699 = m$$63.prototype;
  v2699.chain = v2125;
  var v2700 = m$$63.prototype;
  v2700.value = v2126;
  return;
}
function v1991() {
  function v1990(a$$758) {
    var b$$742 = null;
    try {
      var v9267;
      var v15080 = document.all;
      if (v15080) {
        v9267 = new ActiveXObject("Microsoft.XMLDOM");
      } else {
        v9267 = new DOMParser;
      }
      b$$742 = v9267;
      b$$742.async = !1;
    } catch (f$$222) {
      throw Error("XML Parser could not be instantiated");
    }
    var k$$91;
    try {
      var v2701;
      var v9269 = document.all;
      if (v9269) {
        var v9268;
        introspect(JAM.policy.p3) {
          var v15081 = b$$742.loadXML(a$$758)
        }
        if (v15081) {
          v9268 = b$$742;
        } else {
          v9268 = !1;
        }
        v2701 = v9268;
      } else {
        introspect(JAM.policy.p3) {
          v2701 = b$$742.parseFromString(a$$758, "text/xml");
        }
      }
      k$$91 = v2701;
    } catch (l$$95) {
      throw Error("Error parsing XML string");
    }
    return k$$91;
  }
  function v1989(c$$589) {
    function v1988(a$$757, b$$741) {
      var c$$607;
      var e$$382;
      var f$$221;
      var m$$61 = "";
      var v2702 = !b$$741;
      if (v2702) {
        return;
      }
      var v15082 = b$$741.attributes;
      var v9270 = v15082.length;
      var v2703 = v9270 > 0;
      if (v2703) {
        introspect(JAM.policy.p3) {
          l$$92(a$$757, b$$741);
        }
      }
      a$$757.Text = "";
      introspect(JAM.policy.p3) {
        var v2715 = b$$741.hasChildNodes()
      }
      if (v2715) {
        var v9271 = b$$741.childNodes;
        var v2704 = v9271.length;
        var o$$40 = v2704 - 1;
        var q$$26 = 0;
        var v9272 = q$$26;
        q$$26 = q$$26 + 1;
        var v2714 = v9272 < o$$40;
        do {
          var v15083 = b$$741.childNodes;
          e$$382 = v15083[q$$26];
          var v2713 = e$$382.nodeType;
          switch(v2713) {
            case 1:
              a$$757._children = [];
              var v2705;
              var v9273 = e$$382.localName;
              if (v9273) {
                v2705 = e$$382.localName;
              } else {
                v2705 = e$$382.baseName;
              }
              c$$607 = v2705;
              var v2706 = String(c$$607);
              introspect(JAM.policy.p3) {
                c$$607 = v2706.replace(/-/g, "_");
              }
              var v2707 = m$$61 != c$$607;
              if (v2707) {
                var v9274 = a$$757._children;
                introspect(JAM.policy.p3) {
                  v9274.push(c$$607);
                }
              }
              var v2708 = a$$757[c$$607];
              var v9275 = !v2708;
              if (v9275) {
                introspect(JAM.policy.p2) {
                  a$$757[c$$607] = [];
                }
              }
              f$$221 = {};
              var v2709 = a$$757[c$$607];
              introspect(JAM.policy.p3) {
                v2709.push(f$$221);
              }
              var v15084 = e$$382.attributes;
              var v9276 = v15084.length;
              var v2710 = v9276 > 0;
              if (v2710) {
                introspect(JAM.policy.p3) {
                  l$$92(f$$221, e$$382);
                }
              }
              var v9277 = a$$757[c$$607];
              var v2711 = v9277.contains;
              var v9279 = !v2711;
              if (v9279) {
                var v9278 = a$$757[c$$607];
                introspect(JAM.policy.p3) {
                  p$$59(v9278);
                }
              }
              m$$61 = c$$607;
              introspect(JAM.policy.p3) {
                var v2712 = e$$382.hasChildNodes()
              }
              if (v2712) {
                introspect(JAM.policy.p3) {
                  g$$212(f$$221, e$$382);
                }
              }
              break;
            case 3:
              var v9280 = a$$757.Text;
              var v15085 = e$$382.nodeValue;
              introspect(JAM.policy.p3) {
                var v9281 = k$$87(v15085)
              }
              a$$757.Text = v9280 + v9281;
              break;
            case 4:
              var v9282 = a$$757.Text;
              var v15086;
              var v20944 = e$$382.text;
              if (v20944) {
                var v20942 = e$$382.text;
                introspect(JAM.policy.p3) {
                  v15086 = k$$87(v20942);
                }
              } else {
                var v20943 = e$$382.nodeValue;
                introspect(JAM.policy.p3) {
                  v15086 = k$$87(v20943);
                }
              }
              var v9283 = v15086;
              a$$757.Text = v9282 + v9283;
          }
          var v9284 = q$$26;
          q$$26 = q$$26 + 1;
          v2714 = v9284 < o$$40;
        } while (v2714);
      }
      return;
    }
    function v1987(b$$731) {
      function v1986(b$$739, d$$445) {
        function v1985(a$$756, f$$220) {
          var g$$218 = 0;
          var k$$90;
          var l$$94;
          introspect(JAM.policy.p3) {
            k$$90 = c$$605(a$$756, b$$739);
          }
          introspect(JAM.policy.p3) {
            l$$94 = c$$605(f$$220, b$$739);
          }
          var v2716;
          var v9286 = k$$90 < l$$94;
          if (v9286) {
            v2716 = g$$218 = -1;
          } else {
            var v9285 = l$$94 < k$$90;
            if (v9285) {
              v9285 = g$$218 = 1;
            }
            v2716 = v9285;
          }
          v2716;
          if (d$$445) {
            var v9287;
            introspect(JAM.policy.p3) {
              var v20945 = d$$445.toUpperCase()
            }
            var v15087 = v20945 == "DESC";
            if (v15087) {
              v9287 = 0 - g$$218;
            } else {
              v9287 = g$$218;
            }
            g$$218 = v9287;
          }
          return g$$218;
        }
        function v1984(b$$740, d$$446) {
          var v9288 = b$$740[d$$446];
          var v2717 = v9288[0];
          var c$$606 = v2717.Text;
          var v2718;
          var v9289 = a$$740(c$$606);
          if (v9289) {
            v2718 = parseFloat(c$$606);
          } else {
            v2718 = c$$606;
          }
          return c$$606 = v2718;
        }
        var v2719 = this.length;
        if (v2719) {
          var c$$605 = v1984;
          introspect(JAM.policy.p3) {
            this.sort(v1985);
          }
        }
        return;
      }
      function v1983(b$$737) {
        function v1982(a$$755, c$$604) {
          var f$$219 = 0;
          var g$$217;
          var k$$89;
          introspect(JAM.policy.p3) {
            g$$217 = d$$444(a$$755);
          }
          introspect(JAM.policy.p3) {
            k$$89 = d$$444(c$$604);
          }
          var v2720;
          var v9291 = g$$217 < k$$89;
          if (v9291) {
            v2720 = f$$219 = -1;
          } else {
            var v9290 = k$$89 < g$$217;
            if (v9290) {
              v9290 = f$$219 = 1;
            }
            v2720 = v9290;
          }
          v2720;
          if (b$$737) {
            var v9292;
            introspect(JAM.policy.p3) {
              var v20946 = b$$737.toUpperCase()
            }
            var v15088 = v20946 == "DESC";
            if (v15088) {
              v9292 = 0 - f$$219;
            } else {
              v9292 = f$$219;
            }
            f$$219 = v9292;
          }
          return f$$219;
        }
        function v1981(b$$738) {
          b$$738 = b$$738.Text;
          var v2721;
          var v9293 = a$$740(b$$738);
          if (v9293) {
            v2721 = parseFloat(b$$738);
          } else {
            v2721 = b$$738;
          }
          return b$$738 = v2721;
        }
        var v2722 = this.length;
        if (v2722) {
          var d$$444 = v1981;
          introspect(JAM.policy.p3) {
            this.sort(v1982);
          }
        }
        return;
      }
      function v1980(b$$735, d$$442) {
        function v1979(a$$754, f$$218) {
          var g$$216 = 0;
          var k$$88;
          var l$$93;
          introspect(JAM.policy.p3) {
            k$$88 = c$$602(a$$754, b$$735);
          }
          introspect(JAM.policy.p3) {
            l$$93 = c$$602(f$$218, b$$735);
          }
          var v2723;
          var v9295 = k$$88 < l$$93;
          if (v9295) {
            v2723 = g$$216 = -1;
          } else {
            var v9294 = l$$93 < k$$88;
            if (v9294) {
              v9294 = g$$216 = 1;
            }
            v2723 = v9294;
          }
          v2723;
          if (d$$442) {
            var v9296;
            introspect(JAM.policy.p3) {
              var v20947 = d$$442.toUpperCase()
            }
            var v15089 = v20947 == "DESC";
            if (v15089) {
              v9296 = 0 - g$$216;
            } else {
              v9296 = g$$216;
            }
            g$$216 = v9296;
          }
          return g$$216;
        }
        function v1978(b$$736, d$$443) {
          var c$$603 = b$$736[d$$443];
          var v2724;
          var v9297 = a$$740(c$$603);
          if (v9297) {
            v2724 = parseFloat(c$$603);
          } else {
            v2724 = c$$603;
          }
          return c$$603 = v2724;
        }
        var v2725 = this.length;
        if (v2725) {
          var c$$602 = v1978;
          introspect(JAM.policy.p3) {
            this.sort(v1979);
          }
        }
        return;
      }
      function v1977(a$$753, b$$734) {
        var d$$441 = -1;
        var v9298 = this.length;
        var v2729 = v9298 > 0;
        if (v2729) {
          var v2726 = this.length;
          var c$$601 = v2726 - 1;
          try {
            var v2728 = c$$601;
            c$$601 = c$$601 - 1;
            do {
              var v15090 = this[c$$601];
              var v9299 = v15090[a$$753];
              var v2727 = v9299 == b$$734;
              if (v2727) {
                d$$441 = c$$601;
              }
              v2728 = c$$601;
              c$$601 = c$$601 - 1;
            } while (v2728);
          } catch (f$$217) {
            return -1;
          }
          return d$$441;
        }
        return;
      }
      function v1976(a$$752, b$$733) {
        var v9300 = this.length;
        var v2733 = v9300 > 0;
        if (v2733) {
          var v2730 = this.length;
          var d$$440 = v2730 - 1;
          try {
            var v2732 = d$$440;
            d$$440 = d$$440 - 1;
            do {
              var v15091 = this[d$$440];
              var v9301 = v15091[a$$752];
              var v2731 = v9301 == b$$733;
              if (v2731) {
                return !0;
              }
              v2732 = d$$440;
              d$$440 = d$$440 - 1;
            } while (v2732);
          } catch (c$$600) {
          }
          return !1;
        }
        return;
      }
      function v1975(a$$751, b$$732) {
        var v9302 = this.length;
        var v2737 = v9302 > 0;
        if (v2737) {
          var d$$439;
          var v2734 = this.length;
          var c$$599 = v2734 - 1;
          try {
            var v2736 = c$$599;
            c$$599 = c$$599 - 1;
            do {
              d$$439 = this[c$$599];
              var v15092 = d$$439[a$$751];
              var v2735 = v15092 == b$$732;
              if (v2735) {
                return d$$439;
              }
              v2736 = c$$599;
              c$$599 = c$$599 - 1;
            } while (v2736);
          } catch (f$$216) {
          }
          return !1;
        }
        return;
      }
      b$$731.getNodeByAttribute = v1975;
      b$$731.contains = v1976;
      b$$731.indexOf = v1977;
      b$$731.SortByAttribute = v1980;
      b$$731.SortByValue = v1983;
      b$$731.SortByNode = v1986;
      return;
    }
    function v1974() {
      function v1973() {
        function v1972(b$$729, c$$598) {
          function v1971(a$$750, d$$438) {
            var f$$215;
            var g$$215;
            introspect(JAM.policy.p3) {
              f$$215 = e$$381(a$$750, b$$729);
            }
            introspect(JAM.policy.p3) {
              g$$215 = e$$381(d$$438, b$$729);
            }
            var v2738;
            var v9304 = f$$215 < g$$215;
            if (v9304) {
              v2738 = -1;
            } else {
              var v9303;
              var v15093 = g$$215 < f$$215;
              if (v15093) {
                v9303 = 1;
              } else {
                v9303 = 0;
              }
              v2738 = v9303;
            }
            f$$215 = v2738;
            if (c$$598) {
              var v9305;
              introspect(JAM.policy.p3) {
                var v20948 = c$$598.toUpperCase()
              }
              var v15094 = v20948 === "DESC";
              if (v15094) {
                v9305 = 0 - f$$215;
              } else {
                v9305 = f$$215;
              }
              f$$215 = v9305;
            }
            return f$$215;
          }
          function v1970(a$$749, b$$730) {
            var v9306 = a$$749[b$$730];
            var v2739 = v9306[0];
            var d$$437 = v2739.Text;
            var v2740;
            var v15095 = bam.validation;
            introspect(JAM.policy.p3) {
              var v9307 = v15095.isNumeric(d$$437)
            }
            if (v9307) {
              v2740 = parseFloat(d$$437);
            } else {
              v2740 = d$$437;
            }
            return d$$437 = v2740;
          }
          var v9308 = a$$744;
          if (v9308) {
            var v15096 = a$$744.length;
            v9308 = v15096 > 0;
          }
          var v2741 = v9308;
          if (v2741) {
            var e$$381 = v1970;
            introspect(JAM.policy.p3) {
              a$$744.sort(v1971);
            }
          }
          return;
        }
        function v1969(b$$728) {
          function v1968(a$$748, d$$436) {
            var f$$214;
            var g$$214;
            introspect(JAM.policy.p3) {
              f$$214 = c$$597(a$$748);
            }
            introspect(JAM.policy.p3) {
              g$$214 = c$$597(d$$436);
            }
            var v2742;
            var v9310 = f$$214 < g$$214;
            if (v9310) {
              v2742 = -1;
            } else {
              var v9309;
              var v15097 = g$$214 < f$$214;
              if (v15097) {
                v9309 = 1;
              } else {
                v9309 = 0;
              }
              v2742 = v9309;
            }
            f$$214 = v2742;
            if (b$$728) {
              var v9311;
              introspect(JAM.policy.p3) {
                var v20949 = b$$728.toUpperCase()
              }
              var v15098 = v20949 === "DESC";
              if (v15098) {
                v9311 = 0 - f$$214;
              } else {
                v9311 = f$$214;
              }
              f$$214 = v9311;
            }
            return f$$214;
          }
          function v1967(a$$747) {
            a$$747 = a$$747.Text;
            var v2743;
            var v15099 = bam.validation;
            introspect(JAM.policy.p3) {
              var v9312 = v15099.isNumeric(a$$747)
            }
            if (v9312) {
              v2743 = parseFloat(a$$747);
            } else {
              v2743 = a$$747;
            }
            return a$$747 = v2743;
          }
          var v9313 = a$$744;
          if (v9313) {
            var v15100 = a$$744.length;
            v9313 = v15100 > 0;
          }
          var v2744 = v9313;
          if (v2744) {
            var c$$597 = v1967;
            introspect(JAM.policy.p3) {
              a$$744.sort(v1968);
            }
          }
          return;
        }
        function v1966(b$$726, c$$596) {
          function v1965(a$$746, d$$435) {
            var f$$213;
            var g$$213;
            introspect(JAM.policy.p3) {
              f$$213 = e$$380(a$$746, b$$726);
            }
            introspect(JAM.policy.p3) {
              g$$213 = e$$380(d$$435, b$$726);
            }
            var v2745;
            var v9315 = f$$213 < g$$213;
            if (v9315) {
              v2745 = -1;
            } else {
              var v9314;
              var v15101 = g$$213 < f$$213;
              if (v15101) {
                v9314 = 1;
              } else {
                v9314 = 0;
              }
              v2745 = v9314;
            }
            f$$213 = v2745;
            if (c$$596) {
              var v9316;
              introspect(JAM.policy.p3) {
                var v20950 = c$$596.toUpperCase()
              }
              var v15102 = v20950 === "DESC";
              if (v15102) {
                v9316 = 0 - f$$213;
              } else {
                v9316 = f$$213;
              }
              f$$213 = v9316;
            }
            return f$$213;
          }
          function v1964(a$$745, b$$727) {
            var d$$434 = a$$745[b$$727];
            var v2746;
            var v15103 = bam.validation;
            introspect(JAM.policy.p3) {
              var v9317 = v15103.isNumeric(d$$434)
            }
            if (v9317) {
              v2746 = parseFloat(d$$434);
            } else {
              v2746 = d$$434;
            }
            return d$$434 = v2746;
          }
          var v9318 = a$$744;
          if (v9318) {
            var v15104 = a$$744.length;
            v9318 = v15104 > 0;
          }
          var v2747 = v9318;
          if (v2747) {
            var e$$380 = v1964;
            introspect(JAM.policy.p3) {
              a$$744.sort(v1965);
            }
          }
          return;
        }
        function v1963(b$$725, c$$595) {
          var e$$379 = -1;
          var v9319 = a$$744;
          if (v9319) {
            var v15105 = a$$744.length;
            v9319 = v15105 > 0;
          }
          var v2751 = v9319;
          if (v2751) {
            var v2748 = a$$744.length;
            var h$$180 = v2748 - 1;
            try {
              var v2750 = h$$180;
              h$$180 = h$$180 - 1;
              do {
                var v15106 = a$$744[h$$180];
                var v9320 = v15106[b$$725];
                var v2749 = v9320 === c$$595;
                if (v2749) {
                  e$$379 = h$$180;
                }
                v2750 = h$$180;
                h$$180 = h$$180 - 1;
              } while (v2750);
            } catch (f$$212) {
              return -1;
            }
            return e$$379;
          }
          return;
        }
        function v1962(b$$724, c$$594) {
          var v9321 = a$$744;
          if (v9321) {
            var v15107 = a$$744.length;
            v9321 = v15107 > 0;
          }
          var v2755 = v9321;
          if (v2755) {
            var v2752 = a$$744.length;
            var e$$378 = v2752 - 1;
            try {
              var v2754 = e$$378;
              e$$378 = e$$378 - 1;
              do {
                var v15108 = a$$744[e$$378];
                var v9322 = v15108[b$$724];
                var v2753 = v9322 === c$$594;
                if (v2753) {
                  return !0;
                }
                v2754 = e$$378;
                e$$378 = e$$378 - 1;
              } while (v2754);
            } catch (h$$179) {
            }
            return !1;
          }
          return;
        }
        function v1961(b$$723) {
          var v9323 = a$$744;
          if (v9323) {
            var v15109 = a$$744.length;
            v9323 = v15109 > 0;
          }
          var v2758 = v9323;
          if (v2758) {
            var c$$593 = [];
            var e$$377;
            var v2756 = a$$744.length;
            var h$$178 = v2756 - 1;
            try {
              var v2757 = h$$178;
              h$$178 = h$$178 - 1;
              do {
                e$$377 = a$$744[h$$178];
                var v15110 = e$$377.Text;
                if (v15110) {
                  var v20951 = e$$377.Text;
                  v15110 = v20951 === b$$723;
                }
                var v9324 = v15110;
                if (v9324) {
                  introspect(JAM.policy.p3) {
                    c$$593.push(e$$377);
                  }
                }
                v2757 = h$$178;
                h$$178 = h$$178 - 1;
              } while (v2757);
              return c$$593;
            } catch (f$$211) {
            }
            return null;
          }
          return;
        }
        function v1960(b$$722, c$$592) {
          var v9325 = a$$744;
          if (v9325) {
            var v15111 = a$$744.length;
            v9325 = v15111 > 0;
          }
          var v2762 = v9325;
          if (v2762) {
            var e$$376;
            var v2759 = a$$744.length;
            var h$$177 = v2759 - 1;
            try {
              var v2761 = h$$177;
              h$$177 = h$$177 - 1;
              do {
                e$$376 = a$$744[h$$177];
                var v15112 = e$$376[b$$722];
                var v2760 = v15112 === c$$592;
                if (v2760) {
                  return e$$376;
                }
                v2761 = h$$177;
                h$$177 = h$$177 - 1;
              } while (v2761);
            } catch (f$$210) {
            }
            return null;
          }
          return;
        }
        function v1959(b$$721, c$$591) {
          var v9326 = a$$744;
          if (v9326) {
            var v15113 = a$$744.length;
            v9326 = v15113 > 0;
          }
          var v2765 = v9326;
          if (v2765) {
            var e$$375 = [];
            var h$$176;
            var v2763 = a$$744.length;
            var f$$209 = v2763 - 1;
            try {
              var v2764 = f$$209;
              f$$209 = f$$209 - 1;
              do {
                h$$176 = a$$744[f$$209];
                var v15114 = h$$176[b$$721];
                var v9327 = v15114 === c$$591;
                if (v9327) {
                  introspect(JAM.policy.p3) {
                    e$$375.push(h$$176);
                  }
                }
                v2764 = f$$209;
                f$$209 = f$$209 - 1;
              } while (v2764);
              introspect(JAM.policy.p3) {
                e$$375.reverse();
              }
              return e$$375;
            } catch (o$$39) {
            }
            return null;
          }
          return;
        }
        var a$$744 = [];
        a$$744.getNodesByAttribute = v1959;
        a$$744.getNodeByAttribute = v1960;
        a$$744.getNodesByValue = v1961;
        a$$744.contains = v1962;
        a$$744.indexOf = v1963;
        a$$744.SortByAttribute = v1966;
        a$$744.SortByValue = v1969;
        a$$744.SortByNode = v1972;
        return a$$744;
      }
      return {activate:v1973};
    }
    function v1958(a$$743, b$$720) {
      var v15115 = b$$720.attributes;
      var v9328 = v15115.length;
      var v2768 = v9328 > 0;
      if (v2768) {
        var v9329 = b$$720.attributes;
        var v2766 = v9329.length;
        var c$$590 = v2766 - 1;
        var e$$374;
        a$$743._attributes = [];
        var v2767 = c$$590;
        c$$590 = c$$590 - 1;
        do {
          var v27738 = b$$720.attributes;
          var v26225 = v27738[c$$590];
          var v24063 = v26225.name;
          var v20952 = String(v24063);
          introspect(JAM.policy.p3) {
            var v15116 = v20952.replace(/-/g, "_")
          }
          e$$374 = String(v15116);
          var v15117 = a$$743._attributes;
          introspect(JAM.policy.p3) {
            v15117.push(e$$374);
          }
          var v20953 = b$$720.attributes;
          var v15118 = v20953[c$$590];
          var v9330 = v15118.value;
          introspect(JAM.policy.p3) {
            var v30934 = k$$87(v9330)
          }
          introspect(JAM.policy.p2) {
            a$$743[e$$374] = v30934;
          }
          v2767 = c$$590;
          c$$590 = c$$590 - 1;
        } while (v2767);
      }
      return;
    }
    function v1957(a$$742) {
      introspect(JAM.policy.p3) {
        return a$$742.replace(/^\s+|\s+$/gm, "");
      }
    }
    try {
      var v2769 = !c$$589;
      if (v2769) {
        return null;
      }
      var b$$719 = {typeOf:"JSXBObject"};
      var v2770;
      var v15119 = c$$589.nodeType;
      var v9331 = v15119 == 9;
      if (v9331) {
        v2770 = c$$589.documentElement;
      } else {
        v2770 = c$$589;
      }
      var f$$208 = v2770;
      var v2771 = f$$208.nodeName;
      var v9332 = !v2771;
      if (v9332) {
        v2771 = "";
      }
      b$$719.RootName = v2771;
      var v15120 = c$$589.nodeType;
      var v9333 = v15120 == 3;
      var v15122 = !v9333;
      if (v15122) {
        var v15121 = c$$589.nodeType;
        v9333 = v15121 == 4;
      }
      var v2772 = v9333;
      if (v2772) {
        return c$$589.nodeValue;
      }
      var k$$87 = v1957;
      var l$$92 = v1958;
      v1974();
      var p$$59 = v1987;
      var g$$212 = v1988;
      introspect(JAM.policy.p3) {
        g$$212(b$$719, f$$208);
      }
      f$$208 = c$$589 = null;
      return b$$719;
    } catch (m$$62) {
      return null;
    }
    return;
  }
  function a$$740(a$$741) {
    var b$$718 = "";
    var v9334 = a$$741;
    if (v9334) {
      var v15123 = typeof a$$741;
      v9334 = v15123 === "string";
    }
    var v2773 = v9334;
    if (v2773) {
      b$$718 = a$$741;
    }
    introspect(JAM.policy.p3) {
      return /^((-)?([0-9]*)((\.{0,1})([0-9]+))?$)/.test(b$$718);
    }
  }
  return {xmlToJSON:v1989, textToXML:v1990};
}
function v1956() {
  function v1955(a$$739, b$$717, c$$588) {
    function v1954() {
      introspect(JAM.policy.p3) {
        return b$$717.getRoot();
      }
    }
    function v1953() {
      return [h$$171, n$$106];
    }
    this.getCanvasSize = v1953;
    this.getRoot = v1954;
    introspect(JAM.policy.p3) {
      var v2799 = b$$717.getValidate()
    }
    if (v2799) {
      var v20954 = a$$739.canvasSize;
      var v15124 = v20954[1];
      var v9335 = v15124 / 3;
      introspect(JAM.policy.p3) {
        var v9336 = b$$717.getValidate()
      }
      var v2774 = {type:"text", x:0, y:v9335, text:v9336};
      introspect(JAM.policy.p3) {
        a$$739.draw(v2774);
      }
    } else {
      i$$235 = a$$739;
      introspect(JAM.policy.p3) {
        a$$739 = b$$717.getRoot();
      }
      introspect(JAM.policy.p3) {
        var f$$207 = b$$717.getNewickLen()
      }
      var v2775 = i$$235.canvasSize;
      h$$171 = v2775[0];
      var v2776 = i$$235.canvasSize;
      n$$106 = v2776[1];
      E$$4 = h$$171 / 2;
      r$$29 = n$$106 / 2;
      var v2777 = Math.min;
      var v2778 = [h$$171, n$$106];
      introspect(JAM.policy.p3) {
        o$$36 = v2777.apply(null, v2778);
      }
      var v2779;
      var v15125 = e$$368.bufferRadius;
      var v9339 = v15125 > 1;
      if (v9339) {
        v2779 = e$$368.bufferRadius;
      } else {
        var v9337 = Smits.Common;
        var v15126 = e$$368.bufferRadius;
        var v9338 = o$$36 * v15126;
        introspect(JAM.policy.p3) {
          v2779 = v9337.roundFloat(v9338, 4);
        }
      }
      c$$588 = v2779;
      C$$4 = e$$368.bufferAngle;
      z$$9 = e$$368.innerCircleRadius;
      D$$4 = e$$368.initStartAngle;
      var v15127 = o$$36 - c$$588;
      var v9340 = v15127 - z$$9;
      var v2780 = v9340 / 2;
      introspect(JAM.policy.p3) {
        v$$13 = Math.round(v2780);
      }
      var v2781 = v$$13 - z$$9;
      q$$24 = v2781 / f$$207;
      var v2782 = Smits.Common;
      var v9341 = 360 - C$$4;
      introspect(JAM.policy.p3) {
        var v9342 = a$$739.getCountAllChildren()
      }
      var v2783 = v9341 / v9342;
      introspect(JAM.policy.p3) {
        u$$18 = v2782.roundFloat(v2783, 4);
      }
      p$$57(a$$739, z$$9);
      var v2784 = v$$13 + x$$75;
      var v2785 = e$$368.bufferOuterLabels;
      w$$19 = v2784 + v2785;
      var v24064 = Smits.PhyloCanvas;
      var v20955 = v24064.Render;
      var v15128 = v20955.Parameters;
      var v9343 = v15128.integratedBinaryCharts;
      var v2790 = v9343.length;
      if (v2790) {
        var v15129 = Smits.PhyloCanvas;
        var v9344 = v15129.Render;
        var v2786 = v9344.Parameters;
        c$$588 = v2786.integratedBinaryCharts;
        var g$$211;
        for (g$$211 in c$$588) {
          var v20956;
          var v26226 = c$$588[g$$211];
          var v24067 = v26226.thickness;
          if (v24067) {
            var v24065 = c$$588[g$$211];
            v20956 = v24065.thickness;
          } else {
            var v27739 = Smits.PhyloCanvas;
            var v26227 = v27739.Render;
            var v24066 = v26227.Parameters;
            v20956 = v24066.binaryChartThickness;
          }
          var v15130 = v20956;
          var v9345 = w$$19 - v15130;
          var v15131;
          var v24068 = c$$588[g$$211];
          var v20959 = v24068.bufferInner;
          if (v20959) {
            var v20957 = c$$588[g$$211];
            v15131 = v20957.bufferInner;
          } else {
            var v26228 = Smits.PhyloCanvas;
            var v24069 = v26228.Render;
            var v20958 = v24069.Parameters;
            v15131 = v20958.binaryChartBufferInner;
          }
          var v9346 = v15131;
          var v2787 = v9345 - v9346;
          var v9347 = c$$588[g$$211];
          var v2788 = v9347.chart;
          var v2789 = c$$588[g$$211];
          w$$19 = d$$423(v2787, v2788, v2789);
        }
      }
      w$$19 = m$$58();
      var v24070 = Smits.PhyloCanvas;
      var v20960 = v24070.Render;
      var v15132 = v20960.Parameters;
      var v9348 = v15132.binaryCharts;
      var v2794 = v9348.length;
      if (v2794) {
        var v24071 = Smits.PhyloCanvas;
        var v20961 = v24071.Render;
        var v15133 = v20961.Parameters;
        c$$588 = v15133.binaryCharts;
        var v2793 = c$$588;
        for (g$$211 in v2793) {
          var v9349 = c$$588[g$$211];
          var v2791 = v9349.chart;
          var v2792 = c$$588[g$$211];
          w$$19 = d$$423(w$$19, v2791, v2792);
        }
      }
      var v24072 = Smits.PhyloCanvas;
      var v20962 = v24072.Render;
      var v15134 = v20962.Parameters;
      var v9350 = v15134.barCharts;
      var v2798 = v9350.length;
      if (v2798) {
        var v24073 = Smits.PhyloCanvas;
        var v20963 = v24073.Render;
        var v15135 = v20963.Parameters;
        c$$588 = v15135.barCharts;
        var v2797 = c$$588;
        for (g$$211 in v2797) {
          var v9351 = c$$588[g$$211];
          var v2795 = v9351.chart;
          var v2796 = c$$588[g$$211];
          w$$19 = j$$120(w$$19, v2795, v2796);
        }
      }
    }
    return;
  }
  function a$$731(a$$732, d$$424) {
    d$$424 = d$$424 + D$$4;
    var v9352 = Smits.Common;
    var v15136 = E$$4;
    var v24074 = d$$424 * F$$4;
    introspect(JAM.policy.p3) {
      var v20964 = Math.sin(v24074)
    }
    var v15137 = a$$732 * v20964;
    var v9353 = v15136 + v15137;
    introspect(JAM.policy.p3) {
      var v2800 = v9352.roundFloat(v9353, 4)
    }
    var v9354 = Smits.Common;
    var v15138 = r$$29;
    var v24075 = d$$424 * F$$4;
    introspect(JAM.policy.p3) {
      var v20965 = Math.cos(v24075)
    }
    var v15139 = a$$732 * v20965;
    var v9355 = v15138 + v15139;
    introspect(JAM.policy.p3) {
      var v2801 = v9354.roundFloat(v9355, 4)
    }
    return [v2800, v2801];
  }
  function c$$583(a$$733) {
    var v9356 = 90 - a$$733;
    var v2802 = v9356 - D$$4;
    a$$733 = k$$85(v2802);
    var v9357 = a$$733 > 90;
    if (v9357) {
      v9357 = a$$733 < 270;
    }
    var v2803 = v9357;
    if (v2803) {
      a$$733 = a$$733 + 180;
      var d$$425 = "end";
    } else {
      d$$425 = "start";
    }
    return [a$$733, d$$425];
  }
  function b$$710(d$$426, b$$711, c$$584, e$$369) {
    var i$$236 = a$$731(d$$426, b$$711);
    var h$$172 = a$$731(d$$426, c$$584);
    var j$$121 = [];
    var f$$204 = 0;
    var v2804;
    var v24076 = c$$584 - b$$711;
    var v20966 = k$$85(v24076);
    introspect(JAM.policy.p3) {
      var v15140 = Math.abs(v20966)
    }
    var v9358 = v15140 > 180;
    if (v9358) {
      v2804 = 1;
    } else {
      v2804 = -1;
    }
    b$$711 = v2804;
    var v9359 = e$$369;
    if (v9359) {
      v9359 = e$$369.invertSecant;
    }
    var v2805 = v9359;
    if (v2805) {
      b$$711 = b$$711 * -1;
      f$$204 = 1;
    }
    var v9360 = !e$$369;
    var v15142 = !v9360;
    if (v15142) {
      var v15141 = e$$369.noMove;
      v9360 = !v15141;
    }
    var v2806 = v9360;
    if (v2806) {
      introspect(JAM.policy.p3) {
        j$$121.push("M");
      }
    }
    var v2807 = i$$236[0];
    var v2808 = i$$236[1];
    var v9361;
    var v15143 = b$$711 < 1;
    if (v15143) {
      v9361 = 0;
    } else {
      v9361 = 1;
    }
    var v2809 = v9361;
    var v2810 = h$$172[0];
    var v2811 = h$$172[1];
    introspect(JAM.policy.p3) {
      j$$121.push(v2807, v2808, "A", d$$426, d$$426, 0, v2809, f$$204, v2810, v2811);
    }
    return j$$121;
  }
  function f$$203(d$$427, b$$712, c$$585) {
    var e$$370;
    var i$$237 = [];
    b$$712 = a$$731(b$$712, d$$427);
    d$$427 = a$$731(c$$585, d$$427);
    var v9362 = !e$$370;
    var v15145 = !v9362;
    if (v15145) {
      var v15144 = e$$370.noMove;
      v9362 = !v15144;
    }
    var v2812 = v9362;
    if (v2812) {
      introspect(JAM.policy.p3) {
        i$$237.push("M");
      }
    }
    var v2813 = b$$712[0];
    var v2814 = b$$712[1];
    var v2815 = d$$427[0];
    var v2816 = d$$427[1];
    introspect(JAM.policy.p3) {
      i$$237.push(v2813, v2814, "L", v2815, v2816);
    }
    return i$$237;
  }
  function k$$85(a$$734) {
    var v9363 = a$$734 > 360;
    var v15146 = !v9363;
    if (v15146) {
      v9363 = a$$734 < 0;
    }
    var v2818 = v9363;
    for (;v2818;) {
      var v2817;
      var v9365 = a$$734 > 360;
      if (v9365) {
        v2817 = a$$734 = a$$734 - 360;
      } else {
        var v9364 = a$$734 < 0;
        if (v9364) {
          v9364 = a$$734 = a$$734 + 360;
        }
        v2817 = v9364;
      }
      v2817;
      var v9366 = a$$734 > 360;
      var v15147 = !v9366;
      if (v15147) {
        v9366 = a$$734 < 0;
      }
      v2818 = v9366;
    }
    return a$$734;
  }
  function l$$90(a$$735, d$$428, c$$586, e$$371) {
    var v9367 = !d$$428;
    if (v9367) {
      var v15148 = a$$735.length;
      v9367 = v15148 > 1;
    }
    var v2819 = v9367;
    if (v2819) {
      e$$371 = a$$735[3];
      c$$586 = a$$735[2];
      d$$428 = a$$735[1];
      a$$735 = a$$735[0];
    }
    var v9368 = {noMove:1, invertSecant:0};
    var v2820 = b$$710(a$$735, c$$586, e$$371, v9368);
    var v9369 = {noMove:1, invertSecant:1};
    var v2821 = b$$710(d$$428, e$$371, c$$586, v9369);
    return g$$209("M", v2820, "L", v2821, "Z");
  }
  function p$$57(d$$429, h$$173) {
    var v2822 = d$$429.len;
    if (v2822) {
      var v9370;
      if (B$$5) {
        v9370 = A$$5 = C$$4 || 1;
      } else {
        var v24077 = d$$429.children;
        var v20967 = v24077.length;
        var v15149 = v20967 == 0;
        if (v15149) {
          var v20968 = Smits.Common;
          var v20969 = A$$5 + u$$18;
          introspect(JAM.policy.p3) {
            v15149 = A$$5 = v20968.roundFloat(v20969, 4);
          }
        }
        v9370 = v15149;
      }
      v9370;
    }
    var v15150 = d$$429.children;
    var v9371 = v15150.length;
    var v2844 = v9371 > 0;
    if (v2844) {
      var j$$122 = [];
      var o$$37;
      var n$$107;
      var k$$86;
      o$$37 = h$$173;
      var v15151 = Smits.Common;
      var v20970 = d$$429.len;
      var v15152 = q$$24 * v20970;
      introspect(JAM.policy.p3) {
        var v9372 = v15151.roundFloat(v15152, 4)
      }
      n$$107 = h$$173 = h$$173 + v9372;
      var v9373 = d$$429.children;
      if (v9373) {
        var v15153 = d$$429.children;
        v9373 = v15153.length;
      }
      var v2826 = v9373;
      if (v2826) {
        var l$$91 = 0;
        var v15154 = d$$429.children;
        var v9374 = v15154.length;
        var v2825 = l$$91 < v9374;
        for (;v2825;) {
          var v9375 = d$$429.children;
          var v2823 = v9375[l$$91];
          var m$$59 = p$$57(v2823, h$$173);
          var v2824 = m$$59 > 0;
          if (v2824) {
            introspect(JAM.policy.p3) {
              j$$122.push(m$$59);
            }
          }
          l$$91++;
          var v15155 = d$$429.children;
          var v9376 = v15155.length;
          v2825 = l$$91 < v9376;
        }
      }
      var v2827 = Smits.Common;
      var v9377 = Math.min;
      introspect(JAM.policy.p3) {
        var v2828 = v9377.apply(null, j$$122)
      }
      introspect(JAM.policy.p3) {
        l$$91 = v2827.roundFloat(v2828, 4);
      }
      var v2829 = Smits.Common;
      var v9378 = Math.max;
      introspect(JAM.policy.p3) {
        var v2830 = v9378.apply(null, j$$122)
      }
      introspect(JAM.policy.p3) {
        j$$122 = v2829.roundFloat(v2830, 4);
      }
      var v9379 = d$$429.level;
      var v2831 = v9379 != 0;
      if (v2831) {
        var v24078 = Smits.PhyloCanvas;
        var v20971 = v24078.Render;
        var v15156 = v20971.Path;
        var v24079 = h$$173 + .01;
        var v20972 = a$$731(v24079, l$$91);
        var v26229 = !0;
        var v24080 = {noMove:v26229};
        var v20973 = b$$710(h$$173, l$$91, j$$122, v24080);
        var v24081 = h$$173 + .01;
        var v20974 = a$$731(v24081, j$$122);
        var v15157 = g$$209("M", v20972, "L", v20973, "L", v20974);
        var v9380 = new v15156(v15157);
        introspect(JAM.policy.p3) {
          i$$235.draw(v9380);
        }
      }
      var v2832 = d$$429.len;
      if (v2832) {
        var v15158 = Smits.Common;
        var v24082 = j$$122 - l$$91;
        var v20975 = v24082 / 2;
        var v15159 = l$$91 + v20975;
        introspect(JAM.policy.p3) {
          k$$86 = v15158.roundFloat(v15159, 4);
        }
        var v26230 = Smits.PhyloCanvas;
        var v24083 = v26230.Render;
        var v20976 = v24083.Path;
        var v20977 = f$$203(k$$86, o$$37, n$$107);
        var v15160 = new v20976(v20977);
        introspect(JAM.policy.p3) {
          i$$235.draw(v15160);
        }
      }
    } else {
      d$$429.y = A$$5;
      introspect(JAM.policy.p3) {
        s$$34.push(d$$429);
      }
      o$$37 = h$$173;
      var v27740 = Smits.Common;
      var v29324 = d$$429.len;
      var v28688 = q$$24 * v29324;
      var v27741 = h$$173 + v28688;
      introspect(JAM.policy.p3) {
        n$$107 = v27740.roundFloat(v27741);
      }
      k$$86 = A$$5;
      var v28689 = Smits.PhyloCanvas;
      var v27742 = v28689.Render;
      var v26231 = v27742.Path;
      var v26232 = f$$203(k$$86, o$$37, n$$107);
      var v24084 = new v26231(v26232);
      introspect(JAM.policy.p3) {
        i$$235.draw(v24084);
      }
      var v27743 = Smits.PhyloCanvas;
      var v26233 = v27743.Render;
      var v24085 = v26233.Path;
      var v24086 = f$$203(k$$86, n$$107, v$$13);
      var v29325 = Smits.PhyloCanvas;
      var v28690 = v29325.Render;
      var v27744 = v28690.Style;
      var v26234 = v27744.connectedDash;
      var v24087 = {attr:v26234};
      var v20978 = new v24085(v24086, v24087);
      introspect(JAM.policy.p3) {
        i$$235.draw(v20978);
      }
      var v2843 = d$$429.name;
      if (v2843) {
        var v9381 = e$$368.bufferInnerLabels;
        var v2833 = v$$13 + v9381;
        o$$37 = a$$731(v2833, k$$86);
        l$$91 = c$$583(k$$86);
        j$$122 = l$$91[0];
        l$$91 = l$$91[1];
        m$$59 = {};
        var v2834 = d$$429.style;
        if (v2834) {
          var v9382 = Smits.Common;
          var v24088 = Smits.PhyloCanvas;
          var v20979 = v24088.Render;
          var v15161 = v20979.Style;
          var v15162 = d$$429.style;
          introspect(JAM.policy.p3) {
            var v9383 = v15161.getStyle(v15162, "text")
          }
          introspect(JAM.policy.p3) {
            v9382.apply(m$$59, v9383);
          }
        }
        m$$59["text-anchor"] = l$$91;
        var v2835 = d$$429.uri;
        if (v2835) {
          m$$59.href = d$$429.uri;
        }
        var v2836 = d$$429.description;
        if (v2836) {
          m$$59.title = d$$429.description;
        }
        var v20980 = Smits.PhyloCanvas;
        var v15163 = v20980.Render;
        var v9384 = v15163.Text;
        var v9385 = o$$37[0];
        var v9386 = o$$37[1];
        var v9387 = d$$429.name;
        var v20981 = o$$37[0];
        var v20982 = o$$37[1];
        var v15164 = [j$$122, v20981, v20982];
        var v9388 = {attr:m$$59, rotate:v15164};
        var v2837 = new v9384(v9385, v9386, v9387, v9388);
        introspect(JAM.policy.p3) {
          j$$122 = i$$235.draw(v2837);
        }
        var v2838 = d$$429.bgStyle;
        if (v2838) {
          var v15165 = d$$429.bgStyle;
          var v9389 = [v15165, k$$86];
          introspect(JAM.policy.p3) {
            t$$30.push(v9389);
          }
        }
        o$$37 = a$$731(n$$107, k$$86);
        var v20983 = Smits.PhyloCanvas;
        var v15166 = v20983.Render;
        var v9390 = v15166.Parameters;
        var v2839 = v9390.mouseRollOver;
        if (v2839) {
          var v9391 = Smits.Common;
          var v9392 = j$$122[0];
          var v24089 = Smits.PhyloCanvas;
          var v20984 = v24089.Render;
          var v15167 = v20984.Parameters;
          var v9393 = v15167.mouseRollOver;
          var v15168 = o$$37[0];
          var v15169 = o$$37[1];
          var v15170 = j$$122[0];
          var v9394 = {svg:i$$235, node:d$$429, x:v15168, y:v15169, textEl:v15170};
          introspect(JAM.policy.p3) {
            v9391.addRaphEventHandler(v9392, "mouseover", v9393, v9394);
          }
        }
        var v20985 = Smits.PhyloCanvas;
        var v15171 = v20985.Render;
        var v9395 = v15171.Parameters;
        var v2840 = v9395.mouseRollOut;
        if (v2840) {
          var v9396 = Smits.Common;
          var v9397 = j$$122[0];
          var v24090 = Smits.PhyloCanvas;
          var v20986 = v24090.Render;
          var v15172 = v20986.Parameters;
          var v9398 = v15172.mouseRollOut;
          var v15173 = o$$37[0];
          var v15174 = o$$37[1];
          var v15175 = j$$122[0];
          var v9399 = {svg:i$$235, node:d$$429, x:v15173, y:v15174, textEl:v15175};
          introspect(JAM.policy.p3) {
            v9396.addRaphEventHandler(v9397, "mouseout", v9398, v9399);
          }
        }
        var v20987 = Smits.PhyloCanvas;
        var v15176 = v20987.Render;
        var v9400 = v15176.Parameters;
        var v2841 = v9400.onClickAction;
        if (v2841) {
          var v9401 = Smits.Common;
          var v9402 = j$$122[0];
          var v24091 = Smits.PhyloCanvas;
          var v20988 = v24091.Render;
          var v15177 = v20988.Parameters;
          var v9403 = v15177.onClickAction;
          var v15178 = o$$37[0];
          var v15179 = o$$37[1];
          var v15180 = j$$122[0];
          var v9404 = {svg:i$$235, node:d$$429, x:v15178, y:v15179, textEl:v15180};
          introspect(JAM.policy.p3) {
            v9401.addRaphEventHandler(v9402, "click", v9403, v9404);
          }
        }
        var v2842 = j$$122[1];
        introspect(JAM.policy.p3) {
          x$$75 = Math.max(v2842, x$$75);
        }
      }
    }
    if (B$$5) {
      B$$5 = !1;
    }
    return k$$86;
  }
  function g$$209(a$$736) {
    var d$$430 = a$$736;
    var b$$713 = 1;
    var v9405 = arguments.length;
    var v2846 = b$$713 < v9405;
    for (;v2846;) {
      var v2845 = arguments[b$$713];
      introspect(JAM.policy.p3) {
        d$$430 = d$$430.concat(v2845);
      }
      b$$713++;
      var v9406 = arguments.length;
      v2846 = b$$713 < v9406;
    }
    return d$$430;
  }
  function m$$58() {
    var a$$737 = [];
    var v9407 = t$$30.length;
    var v2856 = v9407 > 0;
    if (v2856) {
      var v20989 = Smits.PhyloCanvas;
      var v15181 = v20989.Render;
      var v9408 = v15181.Style;
      var v2853 = v9408.jsphylosvgGradientList;
      if (v2853) {
        var d$$431 = 0;
        var v26235 = Smits.PhyloCanvas;
        var v24092 = v26235.Render;
        var v20990 = v24092.Style;
        var v15182 = v20990.jsphylosvgGradientList;
        var v9409 = v15182.length;
        var v2852 = d$$431 < v9409;
        for (;v2852;) {
          var v20991 = Smits.PhyloCanvas;
          var v15183 = v20991.Render;
          var v9410 = v15183.Style;
          var v2847 = v9410.jsphylosvgGradientList;
          var b$$714 = v2847[d$$431];
          var v2848 = Smits.Common;
          var v20992 = Smits.PhyloCanvas;
          var v15184 = v20992.Render;
          var v9411 = v15184.Style;
          var v2849 = v9411[b$$714];
          var v15185 = v$$13 + x$$75;
          var v15186 = e$$368.bufferOuterLabels;
          var v9412 = v15185 + v15186;
          var v2850 = [E$$4, r$$29, v9412];
          introspect(JAM.policy.p3) {
            b$$714 = v2848.createGradientEl(b$$714, v2849, v2850);
          }
          var v9413 = i$$235.svg;
          var v2851 = v9413.defs;
          introspect(JAM.policy.p3) {
            v2851.appendChild(b$$714);
          }
          d$$431++;
          var v26236 = Smits.PhyloCanvas;
          var v24093 = v26236.Render;
          var v20993 = v24093.Style;
          var v15187 = v20993.jsphylosvgGradientList;
          var v9414 = v15187.length;
          v2852 = d$$431 < v9414;
        }
      }
      d$$431 = 0;
      var v9415 = t$$30.length;
      var v2855 = d$$431 < v9415;
      for (;v2855;) {
        var v2854;
        var v24094 = t$$30.length;
        var v20994 = v24094 - 1;
        var v15188 = d$$431 != v20994;
        if (v15188) {
          var v24095 = t$$30[d$$431];
          var v20995 = v24095[0];
          var v26237 = d$$431 + 1;
          var v24096 = t$$30[v26237];
          var v20996 = v24096[0];
          v15188 = v20995 == v20996;
        }
        var v9417 = v15188;
        if (v9417) {
          var v15189 = d$$431 + 1;
          var v9416 = t$$30[v15189];
          var v15190;
          var v24097 = t$$30[d$$431];
          var v20999 = v24097[2];
          if (v20999) {
            var v20997 = t$$30[d$$431];
            v15190 = v20997[2];
          } else {
            var v20998 = t$$30[d$$431];
            v15190 = v20998[1];
          }
          v2854 = v9416[2] = v15190;
        } else {
          var v28691 = v$$13 + x$$75;
          var v28692 = e$$368.bufferOuterLabels;
          var v27745 = v28691 + v28692;
          var v28693;
          var v29725 = t$$30[d$$431];
          var v29330 = v29725[2];
          if (v29330) {
            var v29726 = t$$30[d$$431];
            var v29326 = v29726[2];
            var v29327 = u$$18 / 2;
            v28693 = v29326 - v29327;
          } else {
            var v29727 = t$$30[d$$431];
            var v29328 = v29727[1];
            var v29329 = u$$18 / 2;
            v28693 = v29328 - v29329;
          }
          var v27746 = v28693;
          var v29331 = t$$30[d$$431];
          var v28694 = v29331[1];
          var v28695 = u$$18 / 2;
          var v27747 = v28694 + v28695;
          a$$737 = l$$90(v$$13, v27745, v27746, v27747);
          var v29332 = Smits.PhyloCanvas;
          var v28696 = v29332.Render;
          var v27748 = v28696.Style;
          var v28697 = t$$30[d$$431];
          var v27749 = v28697[0];
          introspect(JAM.policy.p3) {
            b$$714 = v27748.getStyle(v27749, "textSecantBg");
          }
          var v29333 = Smits.PhyloCanvas;
          var v28698 = v29333.Render;
          var v27750 = v28698.Path;
          var v29334;
          var v29728 = b$$714.type;
          if (v29728) {
            v29334 = {};
          } else {
            v29334 = b$$714;
          }
          var v28699 = v29334;
          var v27751 = {attr:v28699};
          var v26238 = new v27750(a$$737, v27751);
          introspect(JAM.policy.p3) {
            a$$737 = i$$235.draw(v26238);
          }
          var v26239 = b$$714.type;
          if (v26239) {
            var v27752 = b$$714.type;
            v26239 = v27752 == "radialGradient";
          }
          var v24098 = v26239;
          if (v24098) {
            var v27753 = a$$737[0];
            var v26240 = v27753.node;
            var v28700 = b$$714.name;
            var v27754 = "url(#" + v28700;
            var v26241 = v27754 + ")";
            introspect(JAM.policy.p3) {
              v26240.setAttribute("fill", v26241);
            }
          }
          var v24099 = b$$714.type;
          if (v24099) {
            var v26242 = b$$714.type;
            v24099 = v26242 == "radialGradient";
          }
          var v21000 = v24099;
          if (v21000) {
            var v26243 = a$$737[0];
            var v24100 = v26243.node;
            introspect(JAM.policy.p3) {
              v24100.setAttribute("stroke", "none");
            }
          }
          var v15191 = a$$737[0];
          introspect(JAM.policy.p3) {
            v2854 = v15191.toBack();
          }
        }
        v2854;
        d$$431++;
        var v9418 = t$$30.length;
        v2855 = d$$431 < v9418;
      }
    }
    var v9419 = v$$13 + x$$75;
    var v9420 = e$$368.bufferOuterLabels;
    var v2857 = v9419 + v9420;
    var v9421 = C$$4 || 1;
    var v9422 = u$$18 / 2;
    var v2858 = v9421 - v9422;
    var v9423 = u$$18 / 2;
    var v2859 = 360 - v9423;
    a$$737 = l$$90(v$$13, v2857, v2858, v2859);
    var v21001 = Smits.PhyloCanvas;
    var v15192 = v21001.Render;
    var v9424 = v15192.Path;
    var v26244 = Smits.PhyloCanvas;
    var v24101 = v26244.Render;
    var v21002 = v24101.Style;
    var v15193 = v21002.textSecantBg;
    var v9425 = {attr:v15193};
    var v2860 = new v9424(a$$737, v9425);
    introspect(JAM.policy.p3) {
      a$$737 = i$$235.draw(v2860);
    }
    var v2861 = a$$737[0];
    introspect(JAM.policy.p3) {
      v2861.toBack();
    }
    var v2862 = v$$13 + x$$75;
    var v2863 = e$$368.bufferOuterLabels;
    return v2862 + v2863;
  }
  function d$$423(d$$432, b$$715, e$$372) {
    var v2864;
    var v15194 = e$$372;
    if (v15194) {
      v15194 = e$$372.bufferInner;
    }
    var v9428 = v15194;
    if (v9428) {
      var v9426 = e$$372.bufferInner;
      v2864 = parseFloat(v9426);
    } else {
      var v21003 = Smits.PhyloCanvas;
      var v15195 = v21003.Render;
      var v9427 = v15195.Parameters;
      v2864 = v9427.binaryChartBufferInner;
    }
    var j$$123 = v2864;
    var v9429;
    var v21004 = e$$372;
    if (v21004) {
      v21004 = e$$372.bufferSiblings;
    }
    var v15197 = v21004;
    if (v15197) {
      var v15196 = e$$372.bufferSiblings;
      v9429 = v15196 * u$$18;
    } else {
      v9429 = 0;
    }
    var v2865 = v9429;
    var v9430;
    var v27755 = Smits.PhyloCanvas;
    var v26245 = v27755.Render;
    var v24102 = v26245.Parameters;
    var v21005 = v24102.binaryChartBufferSiblings;
    var v15200 = v21005 < 1;
    if (v15200) {
      var v26246 = Smits.PhyloCanvas;
      var v24103 = v26246.Render;
      var v21006 = v24103.Parameters;
      var v15198 = v21006.binaryChartBufferSiblings;
      v9430 = u$$18 * v15198;
    } else {
      var v24104 = Smits.PhyloCanvas;
      var v21007 = v24104.Render;
      var v15199 = v21007.Parameters;
      v9430 = v15199.binaryChartBufferSiblings;
    }
    var v2866 = v9430;
    var h$$174 = v2865 | v2866;
    var v2867;
    var v15201 = e$$372;
    if (v15201) {
      v15201 = e$$372.thickness;
    }
    var v9433 = v15201;
    if (v9433) {
      var v9431 = e$$372.thickness;
      v2867 = parseFloat(v9431);
    } else {
      var v21008 = Smits.PhyloCanvas;
      var v15202 = v21008.Render;
      var v9432 = v15202.Parameters;
      v2867 = v9432.binaryChartThickness;
    }
    var f$$205 = v2867;
    var v9434;
    var v21009 = e$$372;
    if (v21009) {
      v21009 = e$$372.disjointed;
    }
    var v15203 = v21009;
    if (v15203) {
      v9434 = e$$372.disjointed;
    } else {
      v9434 = 0;
    }
    var v2868 = v9434;
    var v21010 = Smits.PhyloCanvas;
    var v15204 = v21010.Render;
    var v9435 = v15204.Parameters;
    var v2869 = v9435.binaryChartDisjointed;
    var o$$38 = v2868 | v2869;
    var v2870;
    var v15205 = e$$372;
    if (v15205) {
      v15205 = e$$372.isInternal;
    }
    var v9436 = v15205;
    if (v9436) {
      v2870 = e$$372.isInternal;
    } else {
      v2870 = !1;
    }
    e$$372 = v2870;
    var n$$108 = !0;
    var g$$210;
    var m$$60 = 0;
    var v9437 = s$$34.length;
    var v2890 = m$$60 < v9437;
    for (;v2890;) {
      var q$$25 = s$$34[m$$60];
      var v26247 = m$$60 + 1;
      var v24105 = s$$34[v26247];
      var v21011 = !v24105;
      var v24108 = !v21011;
      if (v24108) {
        var v26248 = q$$25.chart;
        var v24106 = v26248[b$$715];
        var v28701 = m$$60 + 1;
        var v27756 = s$$34[v28701];
        var v26249 = v27756.chart;
        var v24107 = v26249[b$$715];
        v21011 = v24106 !== v24107;
      }
      var v15206 = v21011;
      var v21012 = !v15206;
      if (v21012) {
        v15206 = o$$38;
      }
      var v9438 = v15206;
      if (v9438) {
        var v21013 = q$$25.chart;
        var v15207 = v21013[b$$715];
        v9438 = v15207 != "none";
      }
      var v2889 = v9438;
      if (v2889) {
        var v15208 = Smits.PhyloCanvas;
        var v9439 = v15208.Render;
        var v2871 = v9439.Style;
        var v9440 = q$$25.chart;
        var v2872 = v9440[b$$715];
        introspect(JAM.policy.p3) {
          var p$$58 = v2871.getStyle(v2872, "textSecantBg")
        }
        var v2873;
        if (e$$372) {
          var v15209 = v$$13 - j$$123;
          var v9441 = v15209 - f$$205;
          var v9442 = v$$13 - j$$123;
          var v24109;
          if (g$$210) {
            v24109 = g$$210;
          } else {
            v24109 = q$$25.y;
          }
          var v21014 = v24109;
          var v21015 = u$$18 / 2;
          var v15210 = v21014 - v21015;
          var v21016;
          var v26250 = n$$108;
          if (v26250) {
            v26250 = !o$$38;
          }
          var v24110 = v26250;
          if (v24110) {
            v21016 = 0;
          } else {
            v21016 = h$$174 / 2;
          }
          var v15211 = v21016;
          var v9443 = v15210 + v15211;
          var v21017 = q$$25.y;
          var v21018 = u$$18 / 2;
          var v15212 = v21017 + v21018;
          var v21019;
          var v28702 = s$$34.length;
          var v27757 = v28702 - 1;
          var v26251 = m$$60 == v27757;
          if (v26251) {
            v26251 = !o$$38;
          }
          var v24111 = v26251;
          if (v24111) {
            v21019 = 0;
          } else {
            v21019 = h$$174 / 2;
          }
          var v15213 = v21019;
          var v9444 = v15212 - v15213;
          v2873 = [v9441, v9442, v9443, v9444];
        } else {
          var v9445 = d$$432 + j$$123;
          var v15214 = d$$432 + j$$123;
          var v9446 = v15214 + f$$205;
          var v24112;
          if (g$$210) {
            v24112 = g$$210;
          } else {
            v24112 = q$$25.y;
          }
          var v21020 = v24112;
          var v21021 = u$$18 / 2;
          var v15215 = v21020 - v21021;
          var v21022;
          var v26252 = n$$108;
          if (v26252) {
            v26252 = !o$$38;
          }
          var v24113 = v26252;
          if (v24113) {
            v21022 = 0;
          } else {
            v21022 = h$$174 / 2;
          }
          var v15216 = v21022;
          var v9447 = v15215 + v15216;
          var v21023 = q$$25.y;
          var v21024 = u$$18 / 2;
          var v15217 = v21023 + v21024;
          var v21025;
          var v28703 = s$$34.length;
          var v27758 = v28703 - 1;
          var v26253 = m$$60 == v27758;
          if (v26253) {
            v26253 = !o$$38;
          }
          var v24114 = v26253;
          if (v24114) {
            v21025 = 0;
          } else {
            v21025 = h$$174 / 2;
          }
          var v15218 = v21025;
          var v9448 = v15217 - v15218;
          v2873 = [v9445, v9446, v9447, v9448];
        }
        g$$210 = v2873;
        var v2884 = p$$58.label;
        if (v2884) {
          var v15219 = Smits.PhyloCanvas;
          var v9449 = v15219.Render;
          var v2874 = v9449.Style;
          var v2875 = p$$58.labelStyle;
          introspect(JAM.policy.p3) {
            n$$108 = v2874.getStyle(v2875, "text");
          }
          var v15220 = g$$210[0];
          var v15221 = g$$210[1];
          var v9450 = v15220 + v15221;
          var v2876 = v9450 / 2;
          var v15222 = g$$210[2];
          var v15223 = g$$210[3];
          var v9451 = v15222 + v15223;
          var v2877 = v9451 / 2;
          q$$25 = a$$731(v2876, v2877);
          var v15224 = g$$210[2];
          var v15225 = g$$210[3];
          var v9452 = v15224 + v15225;
          var v2878 = v9452 / 2;
          var r$$30 = c$$583(v2878);
          var v9453 = r$$30[0];
          var v15226;
          var v21027 = n$$108.rotate;
          if (v21027) {
            var v21026 = n$$108.rotate;
            v15226 = parseFloat(v21026);
          } else {
            v15226 = 0;
          }
          var v9454 = v15226;
          var v2879 = v9453 + v9454;
          r$$30 = k$$85(v2879);
          var v24115 = g$$210[2];
          var v24116 = g$$210[3];
          var v21028 = v24115 + v24116;
          var v15227 = v21028 / 2;
          var v9455 = 90 - v15227;
          var v2880 = v9455 - D$$4;
          var t$$31 = k$$85(v2880);
          var v9456 = t$$31 > 90;
          if (v9456) {
            v9456 = t$$31 < 270;
          }
          var v2881 = v9456;
          if (v2881) {
            r$$30 = r$$30 + 180;
          }
          var v2882 = n$$108["text-anchor"];
          var v9457 = !v2882;
          if (v9457) {
            n$$108["text-anchor"] = "middle";
          }
          var v26254 = Smits.PhyloCanvas;
          var v24117 = v26254.Render;
          var v21029 = v24117.Text;
          var v21030 = q$$25[0];
          var v21031 = q$$25[1];
          var v21032 = p$$58.label;
          var v21033 = {attr:n$$108, rotate:r$$30};
          var v15228 = new v21029(v21030, v21031, v21032, v21033);
          introspect(JAM.policy.p3) {
            var v9458 = i$$235.draw(v15228)
          }
          var v2883 = v9458[0];
          introspect(JAM.policy.p3) {
            v2883.toBack();
          }
        }
        var v2885 = p$$58.borderStyle;
        if (v2885) {
          var v24118 = Smits.PhyloCanvas;
          var v21034 = v24118.Render;
          var v15229 = v21034.Style;
          var v15230 = p$$58.borderStyle;
          introspect(JAM.policy.p3) {
            n$$108 = v15229.getStyle(v15230, "textSecantBg");
          }
          var v28704 = Smits.PhyloCanvas;
          var v27759 = v28704.Render;
          var v26255 = v27759.Path;
          var v29335;
          var v29729 = n$$108.fullsize;
          if (v29729) {
            v29335 = g$$210[1];
          } else {
            v29335 = g$$210[0];
          }
          var v28705 = v29335;
          var v28706 = g$$210[2];
          var v28707 = g$$210[3];
          var v27760 = [v$$13, v28705, v28706, v28707];
          var v26256 = l$$90(v27760);
          var v26257 = {attr:n$$108};
          var v24119 = new v26255(v26256, v26257);
          introspect(JAM.policy.p3) {
            var v21035 = i$$235.draw(v24119)
          }
          var v15231 = v21035[0];
          introspect(JAM.policy.p3) {
            v15231.toBack();
          }
        }
        var v26258 = Smits.PhyloCanvas;
        var v24120 = v26258.Render;
        var v21036 = v24120.Path;
        var v21037 = l$$90(g$$210);
        var v21038 = {attr:p$$58};
        var v15232 = new v21036(v21037, v21038);
        introspect(JAM.policy.p3) {
          var v9459 = i$$235.draw(v15232)
        }
        var v2886 = v9459[0];
        introspect(JAM.policy.p3) {
          v2886.toBack();
        }
        g$$210 = 0;
      } else {
        var v2887 = !g$$210;
        if (v2887) {
          g$$210 = q$$25.y;
        }
        var v15233 = q$$25.chart;
        var v9460 = v15233[b$$715];
        var v2888 = v9460 == "none";
        if (v2888) {
          g$$210 = 0;
        }
      }
      n$$108 = !1;
      m$$60++;
      var v9461 = s$$34.length;
      v2890 = m$$60 < v9461;
    }
    var v2891;
    if (e$$372) {
      v2891 = d$$432;
    } else {
      var v9462 = d$$432 + j$$123;
      v2891 = v9462 + f$$205;
    }
    return v2891;
  }
  function j$$120(d$$433, a$$738, b$$716) {
    var c$$587 = [];
    var v2892;
    var v15234 = b$$716;
    if (v15234) {
      v15234 = b$$716.bufferInner;
    }
    var v9465 = v15234;
    if (v9465) {
      var v9463 = b$$716.bufferInner;
      v2892 = parseFloat(v9463);
    } else {
      var v21039 = Smits.PhyloCanvas;
      var v15235 = v21039.Render;
      var v9464 = v15235.Parameters;
      v2892 = v9464.barChartBufferInner;
    }
    var e$$373 = v2892;
    var v2893;
    var v15236 = b$$716;
    if (v15236) {
      v15236 = b$$716.height;
    }
    var v9468 = v15236;
    if (v9468) {
      var v9466 = b$$716.height;
      v2893 = parseFloat(v9466);
    } else {
      var v9467;
      var v26259 = Smits.PhyloCanvas;
      var v24121 = v26259.Render;
      var v21040 = v24121.Parameters;
      var v15238 = v21040.barChartHeight;
      if (v15238) {
        var v24122 = Smits.PhyloCanvas;
        var v21041 = v24122.Render;
        var v15237 = v21041.Parameters;
        v9467 = v15237.barChartHeight;
      } else {
        v9467 = 0;
      }
      v2893 = v9467;
    }
    var j$$124 = v2893;
    var v2894;
    var v15239 = b$$716;
    if (v15239) {
      v15239 = b$$716.width;
    }
    var v9471 = v15239;
    if (v9471) {
      var v9469;
      var v24123 = b$$716.width;
      var v21042 = parseFloat(v24123);
      var v15243 = v21042 < 1;
      if (v15243) {
        var v15240 = u$$18;
        var v21043 = b$$716.width;
        var v15241 = parseFloat(v21043);
        v9469 = v15240 * v15241;
      } else {
        var v15242 = b$$716.width;
        v9469 = parseFloat(v15242);
      }
      v2894 = v9469;
    } else {
      var v15244;
      var v28708 = Smits.PhyloCanvas;
      var v27761 = v28708.Render;
      var v26260 = v27761.Parameters;
      var v24124 = v26260.barChartWidth;
      var v21046 = v24124 < 1;
      if (v21046) {
        var v27762 = Smits.PhyloCanvas;
        var v26261 = v27762.Render;
        var v24125 = v26261.Parameters;
        var v21044 = v24125.barChartWidth;
        v15244 = u$$18 * v21044;
      } else {
        var v26262 = Smits.PhyloCanvas;
        var v24126 = v26262.Render;
        var v21045 = v24126.Parameters;
        v15244 = v21045.barChartWidth;
      }
      var v9470 = v15244;
      v2894 = 0 | v9470;
    }
    b$$716 = v2894;
    var h$$175 = 0;
    var f$$206 = 0;
    var v9472 = s$$34.length;
    var v2896 = f$$206 < v9472;
    for (;v2896;) {
      var v15245 = s$$34[f$$206];
      var v9473 = v15245.chart;
      var v2895 = v9473[a$$738];
      introspect(JAM.policy.p3) {
        c$$587.push(v2895);
      }
      f$$206++;
      var v9474 = s$$34.length;
      v2896 = f$$206 < v9474;
    }
    var v2897 = Math.max;
    introspect(JAM.policy.p3) {
      c$$587 = v2897.apply(null, c$$587);
    }
    var v2898 = Smits.Common;
    var v2899 = j$$124 / c$$587;
    introspect(JAM.policy.p3) {
      h$$175 = v2898.roundFloat(v2899, 4);
    }
    f$$206 = 0;
    var v9475 = s$$34.length;
    var v2900 = f$$206 < v9475;
    for (;v2900;) {
      c$$587 = s$$34[f$$206];
      var v21047 = c$$587.chart;
      var v15246 = v21047[a$$738];
      var v9476 = v15246 > 0;
      if (v9476) {
        var v26263 = Smits.PhyloCanvas;
        var v24127 = v26263.Render;
        var v21048 = v24127.Path;
        var v24128 = d$$433 + e$$373;
        var v26264 = d$$433 + e$$373;
        var v28709 = c$$587.chart;
        var v27763 = v28709[a$$738];
        var v26265 = h$$175 * v27763;
        var v24129 = v26264 + v26265;
        var v26266 = c$$587.y;
        var v26267 = b$$716 / 2;
        var v24130 = v26266 - v26267;
        var v26268 = c$$587.y;
        var v26269 = b$$716 / 2;
        var v24131 = v26268 + v26269;
        var v21049 = l$$90(v24128, v24129, v24130, v24131);
        var v28710 = Smits.PhyloCanvas;
        var v27764 = v28710.Render;
        var v26270 = v27764.Style;
        var v27765 = c$$587.chart;
        var v26271 = v27765[a$$738];
        introspect(JAM.policy.p3) {
          var v24132 = v26270.getStyle(v26271, "barChart")
        }
        var v21050 = {attr:v24132};
        var v15247 = new v21048(v21049, v21050);
        introspect(JAM.policy.p3) {
          i$$235.draw(v15247);
        }
      }
      f$$206++;
      var v9477 = s$$34.length;
      v2900 = f$$206 < v9477;
    }
    var v2901 = d$$433 + e$$373;
    return v2901 + j$$124;
  }
  var i$$235;
  var v15248 = Smits.PhyloCanvas;
  var v9478 = v15248.Render;
  var v2902 = v9478.Parameters;
  var e$$368 = v2902.Circular;
  var h$$171;
  var n$$106;
  var o$$36;
  var q$$24;
  var u$$18;
  var z$$9;
  var B$$5 = !0;
  var A$$5 = 0;
  var E$$4;
  var r$$29;
  var v$$13;
  var s$$34 = [];
  var t$$30 = [];
  var C$$4;
  var w$$19;
  var x$$75 = 0;
  var D$$4;
  var v2903 = Math.PI;
  var F$$4 = v2903 / 180;
  return v1955;
}
function v1952() {
  function v1951(q$$23, m$$57) {
    function v1950() {
      introspect(JAM.policy.p3) {
        return m$$57.getRoot();
      }
    }
    function v1949() {
      return [b$$706, f$$200];
    }
    this.getCanvasSize = v1949;
    this.getRoot = v1950;
    introspect(JAM.policy.p3) {
      var v2904 = m$$57.getValidate()
    }
    if (v2904) {
      introspect(JAM.policy.p3) {
        var v9479 = m$$57.getValidate()
      }
      introspect(JAM.policy.p3) {
        a$$730.draw(0, 0, v9479);
      }
    }
    a$$730 = q$$23;
    introspect(JAM.policy.p3) {
      var r$$28 = m$$57.getRoot()
    }
    introspect(JAM.policy.p3) {
      var v$$12 = m$$57.getNewickLen()
    }
    var v2905 = a$$730.canvasSize;
    b$$706 = v2905[0];
    var v2906 = a$$730.canvasSize;
    f$$200 = v2906[1];
    h$$167 = c$$580.bufferX;
    n$$104 = c$$580.paddingX;
    o$$34 = c$$580.paddingY;
    g$$207 = c$$580.minHeightBetweenLeaves;
    d$$420 = o$$34;
    var v15249 = b$$706 - h$$167;
    var v15250 = n$$104 * 2;
    var v9480 = v15249 - v15250;
    var v2907 = v9480 / v$$12;
    introspect(JAM.policy.p3) {
      k$$84 = Math.round(v2907);
    }
    var v15251 = o$$34 * 2;
    var v9481 = f$$200 - v15251;
    var v15252;
    var v21052 = c$$580.showScaleBar;
    if (v21052) {
      introspect(JAM.policy.p3) {
        v15252 = r$$28.getCountAllChildren();
      }
    } else {
      introspect(JAM.policy.p3) {
        var v21051 = r$$28.getCountAllChildren()
      }
      v15252 = v21051 - 1;
    }
    var v9482 = v15252;
    var v2908 = v9481 / v9482;
    introspect(JAM.policy.p3) {
      l$$89 = Math.round(v2908);
    }
    var v2909 = l$$89 < g$$207;
    if (v2909) {
      l$$89 = g$$207;
    }
    var v9483 = b$$706 - h$$167;
    var v9484 = n$$104 * 2;
    var v2910 = v9483 - v9484;
    introspect(JAM.policy.p3) {
      p$$56 = Math.round(v2910);
    }
    var v26272 = Smits.PhyloCanvas;
    var v24133 = v26272.Render;
    var v21053 = v24133.Parameters;
    var v15253 = v21053.binaryCharts;
    var v9485 = v15253.length;
    var v15255 = !v9485;
    if (v15255) {
      var v26273 = Smits.PhyloCanvas;
      var v24134 = v26273.Render;
      var v21054 = v24134.Parameters;
      var v15254 = v21054.barCharts;
      v9485 = v15254.length;
    }
    var v2911 = v9485;
    if (v2911) {
      c$$580.alignRight = !0;
    }
    u$$17(r$$28, n$$104);
    var v2912 = c$$580.showScaleBar;
    if (v2912) {
      y = d$$420 + l$$89;
      var v24135 = c$$580.showScaleBar;
      e$$364 = v24135 * k$$84;
      var v27766 = Smits.PhyloCanvas;
      var v26274 = v27766.Render;
      var v24136 = v26274.Line;
      var v21055 = new v24136(0, e$$364, y, y);
      introspect(JAM.policy.p3) {
        a$$730.draw(v21055);
      }
      var v26275 = Smits.PhyloCanvas;
      var v24137 = v26275.Render;
      var v21056 = v24137.Text;
      var v24138 = 0 + e$$364;
      var v21057 = v24138 / 2;
      var v21058 = y - 8;
      var v21059 = c$$580.showScaleBar;
      var v15256 = new v21056(v21057, v21058, v21059);
      introspect(JAM.policy.p3) {
        a$$730.draw(v15256);
      }
    }
    var v2913 = p$$56 + j$$117;
    var v2914 = c$$580.bufferInnerLabels;
    i$$231 = v2913 + v2914;
    var v24139 = Smits.PhyloCanvas;
    var v21060 = v24139.Render;
    var v15257 = v21060.Parameters;
    var v9486 = v15257.binaryCharts;
    var v2918 = v9486.length;
    if (v2918) {
      var v15258 = Smits.PhyloCanvas;
      var v9487 = v15258.Render;
      var v2915 = v9487.Parameters;
      r$$28 = v2915.binaryCharts;
      var s$$33;
      for (s$$33 in r$$28) {
        var v9488 = r$$28[s$$33];
        var v2916 = v9488.chart;
        var v2917 = r$$28[s$$33];
        i$$231 = z$$8(i$$231, v2916, v2917);
      }
    }
    var v24140 = Smits.PhyloCanvas;
    var v21061 = v24140.Render;
    var v15259 = v21061.Parameters;
    var v9489 = v15259.barCharts;
    var v2922 = v9489.length;
    if (v2922) {
      var v24141 = Smits.PhyloCanvas;
      var v21062 = v24141.Render;
      var v15260 = v21062.Parameters;
      r$$28 = v15260.barCharts;
      var v2921 = r$$28;
      for (s$$33 in v2921) {
        var v9490 = r$$28[s$$33];
        var v2919 = v9490.chart;
        var v2920 = r$$28[s$$33];
        B$$4(i$$231, v2919, v2920);
      }
    }
    return;
  }
  function B$$4(d$$422, c$$582, b$$709) {
    var e$$367 = [];
    var v2923;
    var v15261 = b$$709;
    if (v15261) {
      v15261 = b$$709.bufferInner;
    }
    var v9492 = v15261;
    if (v9492) {
      v2923 = b$$709.bufferInner;
    } else {
      var v24142 = Smits.PhyloCanvas;
      var v21063 = v24142.Render;
      var v15262 = v21063.Parameters;
      var v9491 = v15262.barChartBufferInner;
      v2923 = 0 | v9491;
    }
    var i$$234 = v2923;
    var v2924;
    var v15263 = b$$709;
    if (v15263) {
      v15263 = b$$709.height;
    }
    var v9494 = v15263;
    if (v9494) {
      v2924 = b$$709.height;
    } else {
      var v24143 = Smits.PhyloCanvas;
      var v21064 = v24143.Render;
      var v15264 = v21064.Parameters;
      var v9493 = v15264.barChartHeight;
      v2924 = 0 | v9493;
    }
    var h$$170 = v2924;
    var v2925;
    var v15265 = b$$709;
    if (v15265) {
      v15265 = b$$709.width;
    }
    var v9497 = v15265;
    if (v9497) {
      var v9495;
      var v21065 = b$$709.width;
      var v15267 = v21065 < 1;
      if (v15267) {
        var v15266 = b$$709.width;
        v9495 = l$$89 * v15266;
      } else {
        v9495 = b$$709.width;
      }
      v2925 = v9495;
    } else {
      var v15268;
      var v28711 = Smits.PhyloCanvas;
      var v27767 = v28711.Render;
      var v26276 = v27767.Parameters;
      var v24144 = v26276.barChartWidth;
      var v21068 = v24144 < 1;
      if (v21068) {
        var v27768 = Smits.PhyloCanvas;
        var v26277 = v27768.Render;
        var v24145 = v26277.Parameters;
        var v21066 = v24145.barChartWidth;
        v15268 = l$$89 * v21066;
      } else {
        var v26278 = Smits.PhyloCanvas;
        var v24146 = v26278.Render;
        var v21067 = v24146.Parameters;
        v15268 = v21067.barChartWidth;
      }
      var v9496 = v15268;
      v2925 = 0 | v9496;
    }
    b$$709 = v2925;
    var j$$119 = 0;
    var f$$202 = 0;
    var v9498 = q$$22.length;
    var v2927 = f$$202 < v9498;
    for (;v2927;) {
      var v15269 = q$$22[f$$202];
      var v9499 = v15269.chart;
      var v2926 = v9499[c$$582];
      introspect(JAM.policy.p3) {
        e$$367.push(v2926);
      }
      f$$202++;
      var v9500 = q$$22.length;
      v2927 = f$$202 < v9500;
    }
    var v2928 = Math.max;
    introspect(JAM.policy.p3) {
      e$$367 = v2928.apply(null, e$$367);
    }
    var v2929 = Smits.Common;
    var v2930 = h$$170 / e$$367;
    introspect(JAM.policy.p3) {
      j$$119 = v2929.roundFloat(v2930, 4);
    }
    f$$202 = 0;
    var v9501 = q$$22.length;
    var v2931 = f$$202 < v9501;
    for (;v2931;) {
      e$$367 = q$$22[f$$202];
      var v24147 = Smits.PhyloCanvas;
      var v21069 = v24147.Render;
      var v15270 = v21069.Path;
      var v21070 = d$$422 + i$$234;
      var v24148 = e$$367.y;
      var v24149 = b$$709 / 2;
      var v21071 = v24148 - v24149;
      var v24150 = d$$422 + i$$234;
      var v27769 = e$$367.chart;
      var v26279 = v27769[c$$582];
      var v24151 = j$$119 * v26279;
      var v21072 = v24150 + v24151;
      var v24152 = e$$367.y;
      var v24153 = b$$709 / 2;
      var v21073 = v24152 - v24153;
      var v24154 = d$$422 + i$$234;
      var v27770 = e$$367.chart;
      var v26280 = v27770[c$$582];
      var v24155 = j$$119 * v26280;
      var v21074 = v24154 + v24155;
      var v24156 = e$$367.y;
      var v24157 = b$$709 / 2;
      var v21075 = v24156 + v24157;
      var v21076 = d$$422 + i$$234;
      var v24158 = e$$367.y;
      var v24159 = b$$709 / 2;
      var v21077 = v24158 + v24159;
      var v15271 = ["M", v21070, v21071, "L", v21072, v21073, "L", v21074, v21075, "L", v21076, v21077, "Z"];
      var v27771 = Smits.PhyloCanvas;
      var v26281 = v27771.Render;
      var v24160 = v26281.Style;
      var v26282 = e$$367.chart;
      var v24161 = v26282[c$$582];
      introspect(JAM.policy.p3) {
        var v21078 = v24160.getStyle(v24161, "barChart")
      }
      var v15272 = {attr:v21078};
      var v9502 = new v15270(v15271, v15272);
      introspect(JAM.policy.p3) {
        a$$730.draw(v9502);
      }
      f$$202++;
      var v9503 = q$$22.length;
      v2931 = f$$202 < v9503;
    }
    return;
  }
  function z$$8(d$$421, c$$581, b$$708) {
    var v9504;
    var v21079 = b$$708;
    if (v21079) {
      v21079 = b$$708.bufferInner;
    }
    var v15273 = v21079;
    if (v15273) {
      v9504 = b$$708.bufferInner;
    } else {
      v9504 = 0;
    }
    var v2932 = v9504;
    var v21080 = Smits.PhyloCanvas;
    var v15274 = v21080.Render;
    var v9505 = v15274.Parameters;
    var v2933 = v9505.binaryChartBufferInner;
    var e$$366 = v2932 | v2933;
    var v9506;
    var v21081 = b$$708;
    if (v21081) {
      v21081 = b$$708.bufferSiblings;
    }
    var v15276 = v21081;
    if (v15276) {
      var v15275 = b$$708.bufferSiblings;
      v9506 = v15275 * l$$89;
    } else {
      v9506 = 0;
    }
    var v2934 = v9506;
    var v9507;
    var v27772 = Smits.PhyloCanvas;
    var v26283 = v27772.Render;
    var v24162 = v26283.Parameters;
    var v21082 = v24162.binaryChartBufferSiblings;
    var v15279 = v21082 < 1;
    if (v15279) {
      var v26284 = Smits.PhyloCanvas;
      var v24163 = v26284.Render;
      var v21083 = v24163.Parameters;
      var v15277 = v21083.binaryChartBufferSiblings;
      v9507 = l$$89 * v15277;
    } else {
      var v24164 = Smits.PhyloCanvas;
      var v21084 = v24164.Render;
      var v15278 = v21084.Parameters;
      v9507 = v15278.binaryChartBufferSiblings;
    }
    var v2935 = v9507;
    var i$$233 = v2934 | v2935;
    var v9508;
    var v21085 = b$$708;
    if (v21085) {
      v21085 = b$$708.thickness;
    }
    var v15280 = v21085;
    if (v15280) {
      v9508 = b$$708.thickness;
    } else {
      v9508 = 0;
    }
    var v2936 = v9508;
    var v21086 = Smits.PhyloCanvas;
    var v15281 = v21086.Render;
    var v9509 = v15281.Parameters;
    var v2937 = v9509.binaryChartThickness;
    b$$708 = v2936 | v2937;
    var h$$169 = 0;
    var v9510 = q$$22.length;
    var v2939 = h$$169 < v9510;
    for (;v2939;) {
      var j$$118 = q$$22[h$$169];
      var v21087 = Smits.PhyloCanvas;
      var v15282 = v21087.Render;
      var v9511 = v15282.Path;
      var v15283 = d$$421 + e$$366;
      var v24165 = j$$118.y;
      var v24166 = l$$89 / 2;
      var v21088 = v24165 - v24166;
      var v21089 = i$$233 / 2;
      var v15284 = v21088 + v21089;
      var v21090 = d$$421 + e$$366;
      var v15285 = v21090 + b$$708;
      var v24167 = j$$118.y;
      var v24168 = l$$89 / 2;
      var v21091 = v24167 - v24168;
      var v21092 = i$$233 / 2;
      var v15286 = v21091 + v21092;
      var v21093 = d$$421 + e$$366;
      var v15287 = v21093 + b$$708;
      var v24169 = j$$118.y;
      var v24170 = l$$89 / 2;
      var v21094 = v24169 + v24170;
      var v21095 = i$$233 / 2;
      var v15288 = v21094 - v21095;
      var v15289 = d$$421 + e$$366;
      var v24171 = j$$118.y;
      var v24172 = l$$89 / 2;
      var v21096 = v24171 + v24172;
      var v21097 = i$$233 / 2;
      var v15290 = v21096 - v21097;
      var v9512 = ["M", v15283, v15284, "L", v15285, v15286, "L", v15287, v15288, "L", v15289, v15290, "Z"];
      var v26285 = Smits.PhyloCanvas;
      var v24173 = v26285.Render;
      var v21098 = v24173.Style;
      var v24174 = j$$118.chart;
      var v21099 = v24174[c$$581];
      introspect(JAM.policy.p3) {
        var v15291 = v21098.getStyle(v21099, "textSecantBg")
      }
      var v9513 = {attr:v15291};
      var v2938 = new v9511(v9512, v9513);
      introspect(JAM.policy.p3) {
        a$$730.draw(v2938);
      }
      h$$169++;
      var v9514 = q$$22.length;
      v2939 = h$$169 < v9514;
    }
    var v2940 = d$$421 + e$$366;
    return v2940 + b$$708;
  }
  function u$$17(b$$707, e$$365) {
    var v15292 = b$$707.len;
    if (v15292) {
      var v21100 = !1;
      v15292 = m$$56 == v21100;
    }
    var v9515 = v15292;
    if (v9515) {
      var v21101 = b$$707.children;
      var v15293 = v21101.length;
      v9515 = v15293 == 0;
    }
    var v2941 = v9515;
    if (v2941) {
      var v9516 = Smits.Common;
      var v9517 = d$$420 + l$$89;
      introspect(JAM.policy.p3) {
        d$$420 = v9516.roundFloat(v9517, 4);
      }
    }
    var v15294 = b$$707.children;
    var v9518 = v15294.length;
    var v2969 = v9518 > 0;
    if (v2969) {
      var i$$232 = [];
      var h$$168;
      var f$$201;
      var o$$35;
      var n$$105;
      var v2942 = b$$707.len;
      if (v2942) {
        h$$168 = e$$365;
        var v24175 = Smits.Common;
        var v27773 = b$$707.len;
        var v26286 = k$$84 * v27773;
        var v24176 = e$$365 + v26286;
        introspect(JAM.policy.p3) {
          f$$201 = e$$365 = v24175.roundFloat(v24176, 4);
        }
        var v21102 = d$$420;
        introspect(JAM.policy.p3) {
          var v24177 = b$$707.getMidbranchPosition(m$$56)
        }
        var v21103 = v24177 * l$$89;
        n$$105 = o$$35 = v21102 + v21103;
        var v26287 = Smits.PhyloCanvas;
        var v24178 = v26287.Render;
        var v21104 = v24178.Line;
        var v15295 = new v21104(h$$168, f$$201, o$$35, n$$105);
        introspect(JAM.policy.p3) {
          a$$730.draw(v15295);
        }
      }
      var v2948 = b$$707.name;
      if (v2948) {
        h$$168 = {};
        var v15296 = Smits.PhyloCanvas;
        var v9519 = v15296.Render;
        var v2943 = v9519.Style;
        introspect(JAM.policy.p3) {
          h$$168 = v2943.getStyle("bootstrap", "text");
        }
        var v2944 = b$$707.uri;
        if (v2944) {
          h$$168.href = b$$707.uri;
        }
        var v2945 = b$$707.description;
        if (v2945) {
          h$$168.title = b$$707.description;
        }
        var v2946;
        var v15297 = b$$707.level;
        var v9522 = v15297 == 0;
        if (v9522) {
          var v9520 = d$$420;
          introspect(JAM.policy.p3) {
            var v15298 = b$$707.getMidbranchPosition(m$$56)
          }
          var v9521 = v15298 * l$$89;
          v2946 = v9520 + v9521;
        } else {
          v2946 = n$$105;
        }
        var g$$208 = v2946;
        var v21105 = Smits.PhyloCanvas;
        var v15299 = v21105.Render;
        var v9523 = v15299.Text;
        var v15300 = f$$201 || e$$365;
        var v9524 = v15300 + 5;
        var v9525 = b$$707.name;
        var v9526 = {attr:h$$168};
        var v2947 = new v9523(v9524, g$$208, v9525, v9526);
        introspect(JAM.policy.p3) {
          a$$730.draw(v2947);
        }
      }
      var v9527 = b$$707.children;
      if (v9527) {
        var v15301 = b$$707.children;
        v9527 = v15301.length;
      }
      var v2951 = v9527;
      if (v2951) {
        h$$168 = 0;
        var v15302 = b$$707.children;
        var v9528 = v15302.length;
        var v2950 = h$$168 < v9528;
        for (;v2950;) {
          var v15303 = b$$707.children;
          var v9529 = v15303[h$$168];
          var v2949 = u$$17(v9529, e$$365);
          introspect(JAM.policy.p3) {
            i$$232.push(v2949);
          }
          h$$168++;
          var v15304 = b$$707.children;
          var v9530 = v15304.length;
          v2950 = h$$168 < v9530;
        }
      }
      f$$201 = [];
      h$$168 = 0;
      var v9531 = i$$232.length;
      var v2952 = h$$168 < v9531;
      for (;v2952;) {
        var v15305 = i$$232[h$$168];
        var v9532 = v15305[0];
        if (v9532) {
          var v21106 = i$$232[h$$168];
          var v15306 = v21106[0];
          introspect(JAM.policy.p3) {
            f$$201.push(v15306);
          }
        }
        var v15307 = i$$232[h$$168];
        var v9533 = v15307[1];
        if (v9533) {
          var v21107 = i$$232[h$$168];
          var v15308 = v21107[1];
          introspect(JAM.policy.p3) {
            f$$201.push(v15308);
          }
        }
        h$$168++;
        var v9534 = i$$232.length;
        v2952 = h$$168 < v9534;
      }
      var v2953 = Math.min;
      introspect(JAM.policy.p3) {
        i$$232 = v2953.apply(null, f$$201);
      }
      var v2954 = Math.max;
      introspect(JAM.policy.p3) {
        f$$201 = v2954.apply(null, f$$201);
      }
      var v21108 = Smits.PhyloCanvas;
      var v15309 = v21108.Render;
      var v9535 = v15309.Path;
      var v15310 = e$$365 + 1E-4;
      var v15311 = e$$365 + 1E-4;
      var v9536 = ["M", v15310, i$$232, "L", e$$365, i$$232, "L", e$$365, f$$201, "L", v15311, f$$201];
      var v26288 = Smits.PhyloCanvas;
      var v24179 = v26288.Render;
      var v21109 = v24179.Style;
      var v15312 = v21109.line;
      var v9537 = {attr:v15312};
      var v2955 = new v9535(v9536, v9537);
      introspect(JAM.policy.p3) {
        a$$730.draw(v2955);
      }
    } else {
      h$$168 = e$$365;
      var v2956 = Smits.Common;
      var v15313 = b$$707.len;
      var v9538 = k$$84 * v15313;
      var v2957 = e$$365 + v9538;
      introspect(JAM.policy.p3) {
        f$$201 = v2956.roundFloat(v2957, 2);
      }
      n$$105 = o$$35 = d$$420;
      b$$707.y = d$$420;
      introspect(JAM.policy.p3) {
        q$$22.push(b$$707);
      }
      var v21110 = Smits.PhyloCanvas;
      var v15314 = v21110.Render;
      var v9539 = v15314.Line;
      var v2958 = new v9539(h$$168, f$$201, o$$35, n$$105);
      introspect(JAM.policy.p3) {
        a$$730.draw(v2958);
      }
      var v2959 = c$$580.alignRight;
      if (v2959) {
        var v24180 = Smits.PhyloCanvas;
        var v21111 = v24180.Render;
        var v15315 = v21111.Path;
        var v24181 = c$$580.alignPadding;
        var v21112 = v24181 + p$$56;
        var v15316 = ["M", f$$201, o$$35, "L", v21112, n$$105];
        var v27774 = Smits.PhyloCanvas;
        var v26289 = v27774.Render;
        var v24182 = v26289.Style;
        var v21113 = v24182.connectedDash;
        var v15317 = {attr:v21113};
        var v9540 = new v15315(v15316, v15317);
        introspect(JAM.policy.p3) {
          a$$730.draw(v9540);
        }
      }
      var v2968 = b$$707.name;
      if (v2968) {
        h$$168 = {};
        var v2960 = b$$707.style;
        if (v2960) {
          var v21114 = Smits.PhyloCanvas;
          var v15318 = v21114.Render;
          var v9541 = v15318.Style;
          var v9542 = b$$707.style;
          introspect(JAM.policy.p3) {
            h$$168 = v9541.getStyle(v9542, "text");
          }
        }
        h$$168["text-anchor"] = "start";
        var v2961 = b$$707.uri;
        if (v2961) {
          h$$168.href = b$$707.uri;
        }
        var v2962 = b$$707.description;
        if (v2962) {
          h$$168.title = b$$707.description;
        }
        var v21115 = Smits.PhyloCanvas;
        var v15319 = v21115.Render;
        var v9543 = v15319.Text;
        var v15320;
        var v21119 = c$$580.alignRight;
        if (v21119) {
          var v24183 = c$$580.bufferInnerLabels;
          var v21116 = p$$56 + v24183;
          var v21117 = c$$580.alignPadding;
          v15320 = v21116 + v21117;
        } else {
          var v21118 = c$$580.bufferInnerLabels;
          v15320 = f$$201 + v21118;
        }
        var v9544 = v15320;
        var v9545 = b$$707.name;
        var v9546 = {attr:h$$168};
        var v2963 = new v9543(v9544, n$$105, v9545, v9546);
        introspect(JAM.policy.p3) {
          i$$232 = a$$730.draw(v2963);
        }
        var v2964 = i$$232[1];
        introspect(JAM.policy.p3) {
          j$$117 = Math.max(v2964, j$$117);
        }
        var v21120 = Smits.PhyloCanvas;
        var v15321 = v21120.Render;
        var v9547 = v15321.Parameters;
        var v2965 = v9547.mouseRollOver;
        if (v2965) {
          var v9548 = Smits.Common;
          var v9549 = i$$232[0];
          var v24184 = Smits.PhyloCanvas;
          var v21121 = v24184.Render;
          var v15322 = v21121.Parameters;
          var v9550 = v15322.mouseRollOver;
          var v15323 = i$$232[0];
          var v9551 = {svg:a$$730, node:b$$707, x:f$$201, y:n$$105, textEl:v15323};
          introspect(JAM.policy.p3) {
            v9548.addRaphEventHandler(v9549, "mouseover", v9550, v9551);
          }
        }
        var v21122 = Smits.PhyloCanvas;
        var v15324 = v21122.Render;
        var v9552 = v15324.Parameters;
        var v2966 = v9552.mouseRollOut;
        if (v2966) {
          var v9553 = Smits.Common;
          var v9554 = i$$232[0];
          var v24185 = Smits.PhyloCanvas;
          var v21123 = v24185.Render;
          var v15325 = v21123.Parameters;
          var v9555 = v15325.mouseRollOut;
          var v15326 = i$$232[0];
          var v9556 = {svg:a$$730, node:b$$707, x:f$$201, y:n$$105, textEl:v15326};
          introspect(JAM.policy.p3) {
            v9553.addRaphEventHandler(v9554, "mouseout", v9555, v9556);
          }
        }
        var v21124 = Smits.PhyloCanvas;
        var v15327 = v21124.Render;
        var v9557 = v15327.Parameters;
        var v2967 = v9557.onClickAction;
        if (v2967) {
          var v9558 = Smits.Common;
          var v9559 = i$$232[0];
          var v24186 = Smits.PhyloCanvas;
          var v21125 = v24186.Render;
          var v15328 = v21125.Parameters;
          var v9560 = v15328.onClickAction;
          var v15329 = i$$232[0];
          var v9561 = {svg:a$$730, node:b$$707, x:f$$201, y:n$$105, textEl:v15329};
          introspect(JAM.policy.p3) {
            v9558.addRaphEventHandler(v9559, "click", v9560, v9561);
          }
        }
      }
      if (m$$56) {
        m$$56 = !1;
      }
    }
    return [o$$35, n$$105];
  }
  var a$$730;
  var v15330 = Smits.PhyloCanvas;
  var v9562 = v15330.Render;
  var v2970 = v9562.Parameters;
  var c$$580 = v2970.Rectangular;
  var b$$706;
  var f$$200;
  var k$$84;
  var l$$89;
  var p$$56;
  var g$$207;
  var m$$56 = !0;
  var d$$420 = 0;
  var j$$117 = 0;
  var i$$231;
  var e$$364;
  var h$$167;
  var n$$104;
  var o$$34;
  var q$$22 = [];
  return v1951;
}
function v1948(a$$729) {
  var c$$579;
  var b$$705;
  var v2971;
  var v15331 = a$$729.type;
  var v9566 = v15331 == "line";
  if (v9566) {
    var v15332 = this.svg;
    var v21126 = a$$729.x1;
    var v21127 = a$$729.y1;
    var v21128 = a$$729.x2;
    var v21129 = a$$729.y2;
    var v15333 = ["M", v21126, v21127, "L", v21128, v21129];
    introspect(JAM.policy.p3) {
      var v9563 = v15332.path(v15333)
    }
    var v24187 = Smits.PhyloCanvas;
    var v21130 = v24187.Render;
    var v15334 = v21130.Style;
    var v9564 = v15334.line;
    introspect(JAM.policy.p3) {
      v2971 = c$$579 = v9563.attr(v9564);
    }
  } else {
    var v9565;
    var v21131 = a$$729.type;
    var v15338 = v21131 == "path";
    if (v15338) {
      var v21132 = this.svg;
      var v21133 = a$$729.path;
      introspect(JAM.policy.p3) {
        var v15335 = v21132.path(v21133)
      }
      var v15336 = a$$729.attr;
      introspect(JAM.policy.p3) {
        v9565 = c$$579 = v15335.attr(v15336);
      }
    } else {
      var v15337;
      var v24188 = a$$729.type;
      var v21137 = v24188 == "circle";
      if (v21137) {
        var v24189 = this.svg;
        var v24190 = a$$729.x;
        var v24191 = a$$729.y;
        var v24192 = a$$729.radius;
        introspect(JAM.policy.p3) {
          var v21134 = v24189.circle(v24190, v24191, v24192)
        }
        var v21135 = {stroke:"red"};
        introspect(JAM.policy.p3) {
          v15337 = c$$579 = v21134.attr(v21135);
        }
      } else {
        var v24193 = a$$729.type;
        var v21136 = v24193 == "text";
        if (v21136) {
          var v29730 = this.svg;
          var v29731 = a$$729.x;
          var v29732 = a$$729.y;
          var v29733 = a$$729.text;
          introspect(JAM.policy.p3) {
            var v29336 = v29730.text(v29731, v29732, v29733)
          }
          var v30222 = Smits.PhyloCanvas;
          var v29989 = v30222.Render;
          var v29734 = v29989.Style;
          var v29337 = v29734.text;
          introspect(JAM.policy.p3) {
            c$$579 = v29336.attr(v29337);
          }
          var v29338 = a$$729.attr;
          if (v29338) {
            var v29735 = a$$729.attr;
            introspect(JAM.policy.p3) {
              c$$579.attr(v29735);
            }
          }
          var v28712 = a$$729.rotate;
          if (v28712) {
            var v29339 = a$$729.rotate;
            introspect(JAM.policy.p3) {
              c$$579.rotate(v29339);
            }
          }
          introspect(JAM.policy.p3) {
            a$$729 = c$$579.getBBox();
          }
          var v28713 = a$$729.height;
          var v28714 = a$$729.height;
          var v27775 = v28713 * v28714;
          var v28715 = a$$729.width;
          var v28716 = a$$729.width;
          var v27776 = v28715 * v28716;
          var v26290 = v27775 + v27776;
          introspect(JAM.policy.p3) {
            v21136 = b$$705 = Math.sqrt(v26290);
          }
        }
        v15337 = v21136;
      }
      v9565 = v15337;
    }
    v2971 = v9565;
  }
  v2971;
  return [c$$579, b$$705];
}
function v1947() {
  var v2972 = this.phylogramObject;
  introspect(JAM.policy.p3) {
    var a$$728 = v2972.getDrawInstructs()
  }
  var v9567 = this.phylogramObject;
  introspect(JAM.policy.p3) {
    var v2973 = v9567.getDrawInstructs()
  }
  introspect(JAM.policy.p3) {
    console.log("render", v2973);
  }
  var c$$578 = 0;
  var v9568 = a$$728.length;
  var v2987 = c$$578 < v9568;
  for (;v2987;) {
    var v15339 = a$$728[c$$578];
    var v9569 = v15339.type;
    var v2986 = v9569 == "line";
    if (v2986) {
      var v9570 = this.svg;
      var v21138 = a$$728[c$$578];
      var v15340 = v21138.x1;
      var v21139 = a$$728[c$$578];
      var v15341 = v21139.y1;
      var v21140 = a$$728[c$$578];
      var v15342 = v21140.x2;
      var v21141 = a$$728[c$$578];
      var v15343 = v21141.y2;
      var v9571 = ["M", v15340, v15341, "L", v15342, v15343];
      introspect(JAM.policy.p3) {
        var v2974 = v9570.path(v9571)
      }
      var v21142 = Smits.PhyloCanvas;
      var v15344 = v21142.Render;
      var v9572 = v15344.Style;
      var v2975 = v9572.line;
      introspect(JAM.policy.p3) {
        v2974.attr(v2975);
      }
    } else {
      var v15345 = a$$728[c$$578];
      var v9573 = v15345.type;
      var v2985 = v9573 == "path";
      if (v2985) {
        var v9574 = this.svg;
        var v15346 = a$$728[c$$578];
        var v9575 = v15346.path;
        introspect(JAM.policy.p3) {
          var v2976 = v9574.path(v9575)
        }
        var v9576 = a$$728[c$$578];
        var v2977 = v9576.attr;
        introspect(JAM.policy.p3) {
          v2976.attr(v2977);
        }
      } else {
        var v15347 = a$$728[c$$578];
        var v9577 = v15347.type;
        var v2984 = v9577 == "circle";
        if (v2984) {
          var v9578 = this.svg;
          var v15348 = a$$728[c$$578];
          var v9579 = v15348.x;
          var v15349 = a$$728[c$$578];
          var v9580 = v15349.y;
          var v15350 = a$$728[c$$578];
          var v9581 = v15350.radius;
          introspect(JAM.policy.p3) {
            var v2978 = v9578.circle(v9579, v9580, v9581)
          }
          var v2979 = {stroke:"red"};
          introspect(JAM.policy.p3) {
            v2978.attr(v2979);
          }
        } else {
          var v9582 = this.svg;
          var v15351 = a$$728[c$$578];
          var v9583 = v15351.x;
          var v15352 = a$$728[c$$578];
          var v9584 = v15352.y;
          var v15353 = a$$728[c$$578];
          var v9585 = v15353.text;
          introspect(JAM.policy.p3) {
            var v2980 = v9582.text(v9583, v9584, v9585)
          }
          var v21143 = Smits.PhyloCanvas;
          var v15354 = v21143.Render;
          var v9586 = v15354.Style;
          var v2981 = v9586.text;
          introspect(JAM.policy.p3) {
            var b$$704 = v2980.attr(v2981)
          }
          var v9587 = a$$728[c$$578];
          var v2982 = v9587.attr;
          if (v2982) {
            var v15355 = a$$728[c$$578];
            var v9588 = v15355.attr;
            introspect(JAM.policy.p3) {
              b$$704.attr(v9588);
            }
          }
          var v9589 = a$$728[c$$578];
          var v2983 = v9589.rotate;
          if (v2983) {
            var v15356 = a$$728[c$$578];
            var v9590 = v15356.rotate;
            introspect(JAM.policy.p3) {
              b$$704.rotate(v9590);
            }
          }
          introspect(JAM.policy.p3) {
            b$$704.getBBox();
          }
        }
      }
    }
    c$$578++;
    var v9591 = a$$728.length;
    v2987 = c$$578 < v9591;
  }
  return;
}
function v1946() {
  function v1945(a$$727, c$$577, b$$703) {
    this.canvasSize = [c$$577, b$$703];
    var v9592 = this.canvasSize;
    var v2988 = v9592[0];
    var v9593 = this.canvasSize;
    var v2989 = v9593[1];
    introspect(JAM.policy.p3) {
      var v30935 = Raphael(a$$727, v2988, v2989)
    }
    this.svg = v30935;
    return;
  }
  return v1945;
}
function v1944() {
  function v1943(a$$726, c$$576, b$$702, f$$199) {
    this.type = "circle";
    this.x = a$$726;
    this.y = c$$576;
    this.radius = b$$702;
    var v9594 = f$$199;
    if (v9594) {
      var v21144 = Smits.Common;
      introspect(JAM.policy.p3) {
        v21144.apply(this, f$$199);
      }
      v9594 = f$$199.attr;
    }
    var v2990 = v9594;
    if (v2990) {
      this.attr = f$$199.attr;
    }
    return;
  }
  return v1943;
}
function v1942() {
  function v1941(a$$725, c$$575) {
    this.type = "path";
    var v15357 = Smits.PhyloCanvas;
    var v9595 = v15357.Render;
    var v2991 = v9595.Style;
    this.attr = v2991.path;
    this.path = a$$725;
    var v9596 = c$$575;
    if (v9596) {
      var v21145 = Smits.Common;
      introspect(JAM.policy.p3) {
        v21145.apply(this, c$$575);
      }
      v9596 = c$$575.attr;
    }
    var v2992 = v9596;
    if (v2992) {
      this.attr = c$$575.attr;
    }
    return;
  }
  return v1941;
}
function v1940() {
  function v1939(a$$724, c$$574, b$$701, f$$198) {
    this.type = "text";
    var v15358 = Smits.PhyloCanvas;
    var v9597 = v15358.Render;
    var v2993 = v9597.Style;
    this.attr = v2993.text;
    this.x = a$$724;
    this.y = c$$574;
    this.text = b$$701;
    var v9598 = f$$198;
    if (v9598) {
      var v21146 = Smits.Common;
      introspect(JAM.policy.p3) {
        v21146.apply(this, f$$198);
      }
      v9598 = f$$198.attr;
    }
    var v2994 = v9598;
    if (v2994) {
      this.attr = f$$198.attr;
    }
    return;
  }
  return v1939;
}
function v1938() {
  function v1937(a$$723, c$$573, b$$700, f$$197, k$$83) {
    this.type = "line";
    var v15359 = Smits.PhyloCanvas;
    var v9599 = v15359.Render;
    var v2995 = v9599.Style;
    this.attr = v2995.line;
    this.x1 = a$$723;
    this.x2 = c$$573;
    this.y1 = b$$700;
    this.y2 = f$$197;
    var v9600 = k$$83;
    if (v9600) {
      var v21147 = Smits.Common;
      introspect(JAM.policy.p3) {
        v21147.apply(this, k$$83);
      }
      v9600 = k$$83.attr;
    }
    var v2996 = v9600;
    if (v2996) {
      this.attr = k$$83.attr;
    }
    return;
  }
  return v1937;
}
function v1936(a$$722, c$$572, b$$699) {
  var v2997 = this.jsOverride;
  var v9602 = !v2997;
  if (v9602) {
    var v9601;
    if (b$$699) {
      var v15360;
      var v21150 = b$$699 == "circular";
      if (v21150) {
        var v21148 = this.Circular;
        var v30936 = parseFloat(c$$572);
        introspect(JAM.policy.p2) {
          v15360 = v21148[a$$722] = v30936;
        }
      } else {
        var v21149 = b$$699 == "rectangular";
        if (v21149) {
          var v24194 = this.Rectangular;
          var v30937 = parseFloat(c$$572);
          introspect(JAM.policy.p2) {
            v21149 = v24194[a$$722] = v30937;
          }
        }
        v15360 = v21149;
      }
      v9601 = v15360;
    } else {
      var v30938 = parseFloat(c$$572);
      introspect(JAM.policy.p2) {
        v9601 = this[a$$722] = v30938;
      }
    }
    v9601;
  }
  return;
}
function v1935(a$$721) {
  var v9603 = a$$721.node;
  var v2998 = v9603.edgeCircleHighlight;
  introspect(JAM.policy.p3) {
    v2998.hide();
  }
  var v2999 = a$$721.textEl;
  var v3000 = {fill:"#000"};
  introspect(JAM.policy.p3) {
    v2999.attr(v3000);
  }
  return;
}
function v1934(a$$720) {
  var v9604 = a$$720.node;
  var v3005 = v9604.edgeCircleHighlight;
  if (v3005) {
    var v9605 = a$$720.node;
    var v3001 = v9605.edgeCircleHighlight;
    introspect(JAM.policy.p3) {
      v3001.show();
    }
  } else {
    var v3002 = a$$720.svg;
    var v21151 = Smits.PhyloCanvas;
    var v15361 = v21151.Render;
    var v9606 = v15361.Circle;
    var v9607 = a$$720.x;
    var v9608 = a$$720.y;
    var v26291 = Smits.PhyloCanvas;
    var v24195 = v26291.Render;
    var v21152 = v24195.Style;
    var v15362 = v21152.highlightedEdgeCircle;
    var v9609 = {attr:v15362};
    var v3003 = new v9606(v9607, v9608, 5, v9609);
    introspect(JAM.policy.p3) {
      var c$$571 = v3002.draw(v3003)
    }
    var v3004 = a$$720.node;
    v3004.edgeCircleHighlight = c$$571[0];
  }
  var v3006 = a$$720.textEl;
  var v3007 = {fill:"red"};
  introspect(JAM.policy.p3) {
    v3006.attr(v3007);
  }
  return;
}
function v1933(a$$719, c$$570) {
  var v3008;
  var v9610 = this[a$$719];
  if (v9610) {
    v3008 = this[a$$719];
  } else {
    v3008 = this[c$$570];
  }
  return v3008;
}
function v1932() {
  function v1931(d$$419) {
    function v1930() {
      return f$$196;
    }
    function v1929() {
      return c$$567;
    }
    function v1928() {
      return a$$716;
    }
    function v1927() {
      return b$$695;
    }
    this.getRoot = v1927;
    this.getLevels = v1928;
    this.getNewickLen = v1929;
    this.getValidate = v1930;
    var v3009 = d$$419.nexmlJson;
    var j$$116 = v3009.nexml;
    var i$$230 = j$$116.render;
    var v9611 = i$$230;
    if (v9611) {
      v9611 = i$$230.styles;
    }
    var v3014 = v9611;
    if (v3014) {
      var e$$363 = i$$230.styles;
      var h$$166;
      for (h$$166 in e$$363) {
        var v9612 = h$$166 != "_children";
        if (v9612) {
          v9612 = h$$166 != "Text";
        }
        var v3013 = v9612;
        if (v3013) {
          var v24196 = e$$363[h$$166];
          var v21153 = v24196["@attributes"];
          var v15363 = v21153.type;
          if (v15363) {
            var v26292 = e$$363[h$$166];
            var v24197 = v26292["@attributes"];
            var v21154 = v24197.type;
            v15363 = v21154 == "radialGradient";
          }
          var v9613 = v15363;
          if (v9613) {
            v9613 = Raphael.svg;
          }
          var v3012 = v9613;
          if (v3012) {
            var v24198 = e$$363[h$$166];
            v24198.name = h$$166;
            var v24199 = e$$363[h$$166];
            var v27777 = e$$363[h$$166];
            var v26293 = v27777["@attributes"];
            v24199.type = v26293.type;
            var v26294 = Smits.PhyloCanvas;
            var v24200 = v26294.Render;
            var v21155 = v24200.Style;
            introspect(JAM.policy.p2) {
              v21155[h$$166] = e$$363[h$$166];
            }
            var v26295 = Smits.PhyloCanvas;
            var v24201 = v26295.Render;
            var v21156 = v24201.Style;
            var v15364 = v21156.jsphylosvgGradientList;
            var v21158 = !v15364;
            if (v21158) {
              var v26296 = Smits.PhyloCanvas;
              var v24202 = v26296.Render;
              var v21157 = v24202.Style;
              v21157.jsphylosvgGradientList = [];
            }
            var v24203 = Smits.PhyloCanvas;
            var v21159 = v24203.Render;
            var v15365 = v21159.Style;
            var v9614 = v15365.jsphylosvgGradientList;
            introspect(JAM.policy.p3) {
              v9614.push(h$$166);
            }
          } else {
            var n$$103;
            var v26297 = Smits.PhyloCanvas;
            var v24204 = v26297.Render;
            var v21160 = v24204.Style;
            var v15366 = v21160[h$$166];
            var v21162 = !v15366;
            if (v21162) {
              var v26298 = Smits.PhyloCanvas;
              var v24205 = v26298.Render;
              var v21161 = v24205.Style;
              introspect(JAM.policy.p2) {
                v21161[h$$166] = {};
              }
            }
            var v15367 = e$$363[h$$166];
            var v3011 = v15367["@attributes"];
            for (n$$103 in v3011) {
              var v15368 = n$$103 != "_attributes";
              if (v15368) {
                v15368 = n$$103 != "_children";
              }
              var v9615 = v15368;
              if (v9615) {
                v9615 = n$$103 != "type";
              }
              var v3010 = v9615;
              if (v3010) {
                var v24206 = Smits.PhyloCanvas;
                var v21163 = v24206.Render;
                var v15369 = v21163.Style;
                var v9616 = v15369[h$$166];
                introspect(JAM.policy.p3) {
                  var v9617 = n$$103.replace("_", "-")
                }
                var v21164 = e$$363[h$$166];
                var v15370 = v21164["@attributes"];
                introspect(JAM.policy.p2) {
                  v9616[v9617] = v15370[n$$103];
                }
              }
            }
          }
        }
      }
    }
    var v9618 = i$$230;
    if (v9618) {
      v9618 = i$$230.parameters;
    }
    var v3015 = v9618;
    if (v3015) {
      var v9619 = i$$230.parameters;
      m$$55(v9619);
    }
    var v9620 = i$$230;
    if (v9620) {
      v9620 = i$$230.charts;
    }
    var v3017 = v9620;
    if (v3017) {
      i$$230 = i$$230.charts;
      var v3016 = i$$230;
      for (h$$166 in v3016) {
        var v15371 = i$$230[h$$166];
        var v9621 = v15371["@attributes"];
        v9621.chart = h$$166;
        var v9622;
        var v26299 = i$$230[h$$166];
        var v24207 = v26299["@attributes"];
        var v21165 = v24207.type;
        var v15375 = v21165 == "binary";
        if (v15375) {
          var v26300 = Smits.PhyloCanvas;
          var v24208 = v26300.Render;
          var v21166 = v24208.Parameters;
          var v15372 = v21166.binaryCharts;
          var v21167 = i$$230[h$$166];
          var v15373 = v21167["@attributes"];
          introspect(JAM.policy.p3) {
            v9622 = v15372.push(v15373);
          }
        } else {
          var v15374;
          var v27778 = i$$230[h$$166];
          var v26301 = v27778["@attributes"];
          var v24209 = v26301.type;
          var v21171 = v24209 == "integratedBinary";
          if (v21171) {
            var v27779 = Smits.PhyloCanvas;
            var v26302 = v27779.Render;
            var v24210 = v26302.Parameters;
            var v21168 = v24210.integratedBinaryCharts;
            var v24211 = i$$230[h$$166];
            var v21169 = v24211["@attributes"];
            introspect(JAM.policy.p3) {
              v15374 = v21168.push(v21169);
            }
          } else {
            var v27780 = i$$230[h$$166];
            var v26303 = v27780["@attributes"];
            var v24212 = v26303.type;
            var v21170 = v24212 == "bar";
            if (v21170) {
              var v28717 = Smits.PhyloCanvas;
              var v27781 = v28717.Render;
              var v26304 = v27781.Parameters;
              var v24213 = v26304.barCharts;
              var v26305 = i$$230[h$$166];
              var v24214 = v26305["@attributes"];
              introspect(JAM.policy.p3) {
                v21170 = v24213.push(v24214);
              }
            }
            v15374 = v21170;
          }
          v9622 = v15374;
        }
        v9622;
      }
    }
    var v15376 = d$$419.tree;
    if (v15376) {
      var v21172 = j$$116.trees;
      v15376 = v21172[0];
    }
    var v9623 = v15376;
    if (v9623) {
      var v24215 = j$$116.trees;
      var v21173 = v24215[0];
      var v15377 = v21173.tree;
      var v21174 = d$$419.tree;
      var v15378 = v21174 - 1;
      v9623 = v15377[v15378];
    }
    var v3024 = v9623;
    if (v3024) {
      var v24216 = j$$116.trees;
      var v21175 = v24216[0];
      var v15379 = v21175.tree;
      var v21176 = d$$419.tree;
      var v15380 = v21176 - 1;
      var v9624 = v15379[v15380];
      k$$82 = v9624.edge;
      var v24217 = j$$116.trees;
      var v21177 = v24217[0];
      var v15381 = v21177.tree;
      var v21178 = d$$419.tree;
      var v15382 = v21178 - 1;
      var v9625 = v15381[v15382];
      l$$88 = v9625.node;
    } else {
      h$$166 = 0;
      var v24218 = j$$116.trees;
      var v21179 = v24218.tree;
      var v15383 = v21179.edge;
      var v9626 = v15383.length;
      var v3019 = h$$166 < v9626;
      for (;v3019;) {
        var v24219 = j$$116.trees;
        var v21180 = v24219.tree;
        var v15384 = v21180.edge;
        var v9627 = v15384[h$$166];
        var v3018 = v9627["@attributes"];
        introspect(JAM.policy.p3) {
          k$$82.push(v3018);
        }
        h$$166++;
        var v24220 = j$$116.trees;
        var v21181 = v24220.tree;
        var v15385 = v21181.edge;
        var v9628 = v15385.length;
        v3019 = h$$166 < v9628;
      }
      h$$166 = 0;
      var v24221 = j$$116.trees;
      var v21182 = v24221.tree;
      var v15386 = v21182.node;
      var v9629 = v15386.length;
      var v3023 = h$$166 < v9629;
      for (;v3023;) {
        var v21183 = j$$116.trees;
        var v15387 = v21183.tree;
        var v9630 = v15387.node;
        var v3020 = v9630[h$$166];
        d$$419 = v3020["@attributes"];
        var v3022 = d$$419.label;
        if (v3022) {
          var v21184 = j$$116.trees;
          var v15388 = v21184.tree;
          var v9631 = v15388.node;
          var v3021 = v9631[h$$166];
          d$$419.chart = v3021.chart;
        }
        introspect(JAM.policy.p3) {
          l$$88.push(d$$419);
        }
        h$$166++;
        var v24222 = j$$116.trees;
        var v21185 = v24222.tree;
        var v15389 = v21185.node;
        var v9632 = v15389.length;
        v3023 = h$$166 < v9632;
      }
    }
    h$$166 = 0;
    var v9633 = l$$88.length;
    var v3026 = h$$166 < v9633;
    for (;v3026;) {
      var v15390 = l$$88[h$$166];
      var v9634 = v15390.root;
      if (v9634) {
        var v21186 = l$$88[h$$166];
        var v15391 = v21186.root;
        v9634 = v15391 == "true";
      }
      var v3025 = v9634;
      if (v3025) {
        b$$695 = l$$88[h$$166];
      }
      h$$166++;
      var v9635 = l$$88.length;
      v3026 = h$$166 < v9635;
    }
    var v3027;
    if (b$$695) {
      b$$695 = p$$55(b$$695);
      v3027 = b$$695 = g$$206(b$$695);
    } else {
      v3027 = f$$196 = "Error. Currently, only rooted NeXML trees are supported.";
    }
    v3027;
    return;
  }
  function m$$55(a$$718, c$$569) {
    var b$$698;
    for (b$$698 in a$$718) {
      var v9636 = b$$698 != "_children";
      if (v9636) {
        v9636 = b$$698 != "Text";
      }
      var v3028 = v9636;
      if (v3028) {
        var v9637;
        var v21187 = b$$698 == "rectangular";
        var v24223 = !v21187;
        if (v24223) {
          v21187 = b$$698 == "circular";
        }
        var v15393 = v21187;
        if (v15393) {
          var v15392 = a$$718[b$$698];
          v9637 = m$$55(v15392, b$$698);
        } else {
          var v27782 = Smits.PhyloCanvas;
          var v26306 = v27782.Render;
          var v24224 = v26306.Parameters;
          var v21188 = v24224[b$$698];
          var v24226 = !v21188;
          if (v24226) {
            var v27783 = Smits.PhyloCanvas;
            var v26307 = v27783.Render;
            var v24225 = v26307.Parameters;
            introspect(JAM.policy.p2) {
              v24225[b$$698] = {};
            }
          }
          var v26308 = Smits.PhyloCanvas;
          var v24227 = v26308.Render;
          var v21189 = v24227.Parameters;
          var v21190 = a$$718[b$$698];
          introspect(JAM.policy.p3) {
            v9637 = v21189.set(b$$698, v21190, c$$569);
          }
        }
        v9637;
      }
    }
    return;
  }
  function g$$206(d$$418) {
    var v9638 = d$$418.children;
    if (v9638) {
      var v15394 = d$$418.children;
      v9638 = v15394.length;
    }
    var v3035 = v9638;
    if (v3035) {
      var b$$697 = 0;
      var v15395 = d$$418.children;
      var v9639 = v15395.length;
      var v3034 = b$$697 < v9639;
      for (;v3034;) {
        var v3029 = d$$418.children;
        var i$$229 = v3029[b$$697];
        var v21191 = i$$229.len;
        var v21192 = d$$418.newickLen;
        var v15396 = v21191 + v21192;
        var v9640 = v15396 * 1E4;
        introspect(JAM.policy.p3) {
          var v3030 = Math.round(v9640)
        }
        i$$229.newickLen = v3030 / 1E4;
        var v9641 = i$$229.level;
        var v3031 = v9641 > a$$716;
        if (v3031) {
          a$$716 = i$$229.level;
        }
        var v9642 = i$$229.newickLen;
        var v3032 = v9642 > c$$567;
        if (v3032) {
          c$$567 = i$$229.newickLen;
        }
        var v15397 = i$$229.children;
        var v9643 = v15397.length;
        var v3033 = v9643 > 0;
        if (v3033) {
          g$$206(i$$229, d$$418);
        }
        b$$697++;
        var v15398 = d$$418.children;
        var v9644 = v15398.length;
        v3034 = b$$697 < v9644;
      }
    }
    return d$$418;
  }
  function p$$55(a$$717, c$$568, i$$228) {
    var v9645 = Smits.PhyloCanvas;
    var v3036 = v9645.Node;
    var e$$362 = new v3036;
    if (i$$228) {
      var v3037 = i$$228.level;
      e$$362.level = v3037 + 1;
    }
    i$$228 = 0;
    var v9646 = k$$82.length;
    var v3041 = i$$228 < v9646;
    for (;v3041;) {
      var v15399 = k$$82[i$$228];
      var v9647 = v15399.source;
      var v9648 = a$$717.id;
      var v3040 = v9647 == v9648;
      if (v3040) {
        var b$$696 = 0;
        var v9649 = l$$88.length;
        var v3039 = b$$696 < v9649;
        for (;v3039;) {
          var v15400 = k$$82[i$$228];
          var v9650 = v15400.target;
          var v15401 = l$$88[b$$696];
          var v9651 = v15401.id;
          var v3038 = v9650 == v9651;
          if (v3038) {
            var v9652 = e$$362.children;
            var v15402 = l$$88[b$$696];
            var v21193 = k$$82[i$$228];
            var v15403 = v21193.length;
            var v9653 = p$$55(v15402, v15403, e$$362);
            introspect(JAM.policy.p3) {
              v9652.push(v9653);
            }
          }
          b$$696++;
          var v9654 = l$$88.length;
          v3039 = b$$696 < v9654;
        }
      }
      i$$228++;
      var v9655 = k$$82.length;
      v3041 = i$$228 < v9655;
    }
    var v9656 = c$$568;
    if (v9656) {
      var v21194 = Smits.Common;
      introspect(JAM.policy.p3) {
        var v30939 = v21194.roundFloat(c$$568, 4)
      }
      e$$362.len = v30939;
      var v21195 = e$$362.len;
      v9656 = v21195 == 0;
    }
    var v3042 = v9656;
    if (v3042) {
      e$$362.len = 1E-4;
    }
    var v3046 = a$$717.label;
    if (v3046) {
      e$$362.type = "label";
      e$$362.name = a$$717.label;
      var v3043 = a$$717.accession;
      if (v3043) {
        e$$362.accession = a$$717.accession;
      }
      var v3044 = a$$717.style;
      if (v3044) {
        e$$362.style = a$$717.style;
      }
      var v3045 = a$$717.bgStyle;
      if (v3045) {
        e$$362.bgStyle = a$$717.bgStyle;
      }
    }
    var v3047 = a$$717.chart;
    if (v3047) {
      e$$362.chart = a$$717.chart;
    }
    var v9657 = e$$362;
    if (v9657) {
      var v15404 = e$$362.level;
      v9657 = v15404 > 1;
    }
    var v3048 = v9657;
    if (v3048) {
      var v9658 = e$$362.len;
      var v15405 = !v9658;
      if (v15405) {
        f$$196 = "Error. Please include Branch Lengths - we only draw rooted phylogenetic trees.";
      }
    }
    return e$$362;
  }
  var a$$716 = 0;
  var c$$567 = 0;
  var b$$695;
  var f$$196;
  var k$$82 = [];
  var l$$88 = [];
  return v1931;
}
function v1926() {
  function v1925(m$$54, d$$417) {
    function v1924() {
      return f$$195;
    }
    function v1923() {
      return c$$565;
    }
    function v1922() {
      return a$$714;
    }
    function v1921() {
      return b$$693;
    }
    this.getRoot = v1921;
    this.getLevels = v1922;
    this.getNewickLen = v1923;
    this.getValidate = v1924;
    var v3049;
    var v21196 = d$$417.tree;
    if (v21196) {
      var v24228 = m$$54.trees;
      v21196 = v24228[0];
    }
    var v15406 = v21196;
    if (v15406) {
      var v26309 = m$$54.trees;
      var v24229 = v26309[0];
      var v21197 = v24229.tree;
      var v24230 = d$$417.tree;
      var v21198 = v24230 - 1;
      v15406 = v21197[v21198];
    }
    var v9659 = v15406;
    if (v9659) {
      var v26310 = m$$54.trees;
      var v24231 = v26310[0];
      var v21199 = v24231.tree;
      var v24232 = d$$417.tree;
      var v21200 = v24232 - 1;
      var v15407 = v21199[v21200];
      k$$81 = v15407.edge;
      var v26311 = m$$54.trees;
      var v24233 = v26311[0];
      var v21201 = v24233.tree;
      var v24234 = d$$417.tree;
      var v21202 = v24234 - 1;
      var v15408 = v21201[v21202];
      v3049 = l$$87 = v15408.node;
    } else {
      var v26312 = m$$54.trees;
      var v24235 = v26312[0];
      var v21203 = v24235.tree;
      var v15409 = v21203[0];
      k$$81 = v15409.edge;
      var v26313 = m$$54.trees;
      var v24236 = v26313[0];
      var v21204 = v24236.tree;
      var v15410 = v21204[0];
      v3049 = l$$87 = v15410.node;
    }
    v3049;
    var j$$115 = 0;
    var v9660 = l$$87.length;
    var v3054 = j$$115 < v9660;
    for (;v3054;) {
      var i$$227 = 0;
      var v15411 = l$$87[j$$115];
      var v9661 = v15411.root;
      if (v9661) {
        var v21205 = l$$87[j$$115];
        var v15412 = v21205.root;
        v9661 = v15412 == "true";
      }
      var v3050 = v9661;
      if (v3050) {
        b$$693 = l$$87[j$$115];
        break;
      }
      var e$$361 = 0;
      var v9662 = k$$81.length;
      var v3052 = e$$361 < v9662;
      for (;v3052;) {
        var v15413 = k$$81[e$$361];
        var v9663 = v15413.target;
        var v15414 = l$$87[j$$115];
        var v9664 = v15414.id;
        var v3051 = v9663 == v9664;
        if (v3051) {
          i$$227++;
        }
        e$$361++;
        var v9665 = k$$81.length;
        v3052 = e$$361 < v9665;
      }
      var v3053 = i$$227 == 0;
      if (v3053) {
        b$$693 = l$$87[j$$115];
        break;
      }
      j$$115++;
      var v9666 = l$$87.length;
      v3054 = j$$115 < v9666;
    }
    var v3055;
    if (b$$693) {
      b$$693 = p$$54(b$$693);
      v3055 = b$$693 = g$$205(b$$693);
    } else {
      v3055 = f$$195 = "Error. Currently, only rooted NeXML trees are supported.";
    }
    v3055;
    return;
  }
  function g$$205(b$$694) {
    var v9667 = b$$694.children;
    if (v9667) {
      var v15415 = b$$694.children;
      v9667 = v15415.length;
    }
    var v3062 = v9667;
    if (v3062) {
      var d$$416 = 0;
      var v15416 = b$$694.children;
      var v9668 = v15416.length;
      var v3061 = d$$416 < v9668;
      for (;v3061;) {
        var v3056 = b$$694.children;
        var j$$114 = v3056[d$$416];
        var v21206 = j$$114.len;
        var v21207 = b$$694.newickLen;
        var v15417 = v21206 + v21207;
        var v9669 = v15417 * 1E4;
        introspect(JAM.policy.p3) {
          var v3057 = Math.round(v9669)
        }
        j$$114.newickLen = v3057 / 1E4;
        var v9670 = j$$114.level;
        var v3058 = v9670 > a$$714;
        if (v3058) {
          a$$714 = j$$114.level;
        }
        var v9671 = j$$114.newickLen;
        var v3059 = v9671 > c$$565;
        if (v3059) {
          c$$565 = j$$114.newickLen;
        }
        var v15418 = j$$114.children;
        var v9672 = v15418.length;
        var v3060 = v9672 > 0;
        if (v3060) {
          g$$205(j$$114, b$$694);
        }
        d$$416++;
        var v15419 = b$$694.children;
        var v9673 = v15419.length;
        v3061 = d$$416 < v9673;
      }
    }
    return b$$694;
  }
  function p$$54(a$$715, d$$415, c$$566) {
    var v9674 = Smits.PhyloCanvas;
    var v3063 = v9674.Node;
    var i$$226 = new v3063;
    if (c$$566) {
      var v3064 = c$$566.level;
      i$$226.level = v3064 + 1;
    }
    c$$566 = 0;
    var v9675 = k$$81.length;
    var v3068 = c$$566 < v9675;
    for (;v3068;) {
      var v15420 = k$$81[c$$566];
      var v9676 = v15420.source;
      var v9677 = a$$715.id;
      var v3067 = v9676 == v9677;
      if (v3067) {
        var e$$360 = 0;
        var v9678 = l$$87.length;
        var v3066 = e$$360 < v9678;
        for (;v3066;) {
          var v15421 = k$$81[c$$566];
          var v9679 = v15421.target;
          var v15422 = l$$87[e$$360];
          var v9680 = v15422.id;
          var v3065 = v9679 == v9680;
          if (v3065) {
            var v9681 = i$$226.children;
            var v15423 = l$$87[e$$360];
            var v21208 = k$$81[c$$566];
            var v15424 = v21208.length;
            var v9682 = p$$54(v15423, v15424, i$$226);
            introspect(JAM.policy.p3) {
              v9681.push(v9682);
            }
          }
          e$$360++;
          var v9683 = l$$87.length;
          v3066 = e$$360 < v9683;
        }
      }
      c$$566++;
      var v9684 = k$$81.length;
      v3068 = c$$566 < v9684;
    }
    var v15425 = i$$226;
    if (v15425) {
      var v21209 = i$$226.level;
      v15425 = v21209 > 0;
    }
    var v9685 = v15425;
    if (v9685) {
      var v15426 = i$$226.len;
      v9685 = !v15426;
    }
    var v3069 = v9685;
    if (v3069) {
      i$$226.len = 1;
    }
    var v9686 = d$$415;
    if (v9686) {
      var v21210 = Smits.Common;
      introspect(JAM.policy.p3) {
        var v30940 = v21210.roundFloat(d$$415, 4)
      }
      i$$226.len = v30940;
      var v21211 = i$$226.len;
      v9686 = v21211 == 0;
    }
    var v3070 = v9686;
    if (v3070) {
      i$$226.len = 1E-4;
    }
    var v9687 = a$$715.label;
    if (v9687) {
      i$$226.type = "label";
      i$$226.name = a$$715.label;
      v9687 = a$$715.style;
    }
    var v3071 = v9687;
    if (v3071) {
      i$$226.style = a$$715.style;
    }
    return i$$226;
  }
  var a$$714 = 0;
  var c$$565 = 0;
  var b$$693;
  var f$$195;
  var k$$81;
  var l$$87;
  return v1925;
}
function v1920() {
  function v1919(g$$204) {
    function v1918() {
      return f$$193;
    }
    function v1917() {
      return c$$562;
    }
    function v1916() {
      return a$$711;
    }
    function v1915() {
      return b$$691;
    }
    this.getRoot = v1915;
    this.getLevels = v1916;
    this.getNewickLen = v1917;
    this.getValidate = v1918;
    var v15427 = g$$204.phylogeny;
    if (v15427) {
      var v21212 = g$$204.phylogeny;
      v15427 = v21212[0];
    }
    var v9688 = v15427;
    if (v9688) {
      var v21213 = g$$204.phylogeny;
      var v15428 = v21213[0];
      v9688 = v15428.clade;
    }
    var v3072 = v9688;
    if (v3072) {
      var v24237 = g$$204.phylogeny;
      var v21214 = v24237[0];
      var v15429 = v21214.clade;
      var v9689 = v15429[0];
      b$$691 = k$$80(v9689);
    }
    var v21215 = g$$204.phylogeny;
    if (v21215) {
      var v24238 = g$$204.phylogeny;
      v21215 = v24238[0];
    }
    var v15430 = v21215;
    if (v15430) {
      var v24239 = g$$204.phylogeny;
      var v21216 = v24239[0];
      v15430 = v21216.render;
    }
    var v9690 = v15430;
    if (v9690) {
      var v24240 = g$$204.phylogeny;
      var v21217 = v24240[0];
      var v15431 = v21217.render;
      v9690 = v15431[0];
    }
    var v3087 = v9690;
    if (v3087) {
      var v24241 = g$$204.phylogeny;
      var v21218 = v24241[0];
      var v15432 = v21218.render;
      var v9691 = g$$204 = v15432[0];
      if (v9691) {
        v9691 = g$$204.styles;
      }
      var v3078 = v9691;
      if (v3078) {
        var v3073 = g$$204.styles;
        var m$$53 = v3073[0];
        var d$$414;
        for (d$$414 in m$$53) {
          var v9692 = d$$414 != "_children";
          if (v9692) {
            v9692 = d$$414 != "Text";
          }
          var v3077 = v9692;
          if (v3077) {
            var v24242 = m$$53[d$$414];
            var v21219 = v24242[0];
            var v15433 = v21219.type;
            if (v15433) {
              var v26314 = m$$53[d$$414];
              var v24243 = v26314[0];
              var v21220 = v24243.type;
              v15433 = v21220 == "radialGradient";
            }
            var v9693 = v15433;
            if (v9693) {
              v9693 = Raphael.svg;
            }
            var v3076 = v9693;
            if (v3076) {
              var v24244 = m$$53[d$$414];
              var v21221 = v24244[0];
              v21221.name = d$$414;
              var v26315 = Smits.PhyloCanvas;
              var v24245 = v26315.Render;
              var v21222 = v24245.Style;
              var v24246 = m$$53[d$$414];
              introspect(JAM.policy.p2) {
                v21222[d$$414] = v24246[0];
              }
              var v26316 = Smits.PhyloCanvas;
              var v24247 = v26316.Render;
              var v21223 = v24247.Style;
              var v15434 = v21223.jsphylosvgGradientList;
              var v21225 = !v15434;
              if (v21225) {
                var v26317 = Smits.PhyloCanvas;
                var v24248 = v26317.Render;
                var v21224 = v24248.Style;
                v21224.jsphylosvgGradientList = [];
              }
              var v24249 = Smits.PhyloCanvas;
              var v21226 = v24249.Render;
              var v15435 = v21226.Style;
              var v9694 = v15435.jsphylosvgGradientList;
              introspect(JAM.policy.p3) {
                v9694.push(d$$414);
              }
            } else {
              var j$$113;
              var v26318 = Smits.PhyloCanvas;
              var v24250 = v26318.Render;
              var v21227 = v24250.Style;
              var v15436 = v21227[d$$414];
              var v21229 = !v15436;
              if (v21229) {
                var v26319 = Smits.PhyloCanvas;
                var v24251 = v26319.Render;
                var v21228 = v24251.Style;
                introspect(JAM.policy.p2) {
                  v21228[d$$414] = {};
                }
              }
              var v15437 = m$$53[d$$414];
              var v3075 = v15437[0];
              for (j$$113 in v3075) {
                var v15438 = j$$113 != "_attributes";
                if (v15438) {
                  v15438 = j$$113 != "_children";
                }
                var v9695 = v15438;
                if (v9695) {
                  v9695 = j$$113 != "type";
                }
                var v3074 = v9695;
                if (v3074) {
                  var v24252 = Smits.PhyloCanvas;
                  var v21230 = v24252.Render;
                  var v15439 = v21230.Style;
                  var v9696 = v15439[d$$414];
                  introspect(JAM.policy.p3) {
                    var v9697 = j$$113.replace("_", "-")
                  }
                  var v21231 = m$$53[d$$414];
                  var v15440 = v21231[0];
                  introspect(JAM.policy.p2) {
                    v9696[v9697] = v15440[j$$113];
                  }
                }
              }
            }
          }
        }
      }
      var v9698 = g$$204;
      if (v9698) {
        v9698 = g$$204.parameters;
      }
      var v3079 = v9698;
      if (v3079) {
        var v15441 = g$$204.parameters;
        var v9699 = v15441[0];
        p$$53(v9699);
      }
      var v9700 = g$$204;
      if (v9700) {
        v9700 = g$$204.charts;
      }
      var v3086 = v9700;
      if (v3086) {
        var v15442 = g$$204.charts;
        g$$204 = v15442[0];
        var v3085 = g$$204;
        for (d$$414 in v3085) {
          var v9701 = d$$414 != "_children";
          if (v9701) {
            v9701 = d$$414 != "Text";
          }
          var v3084 = v9701;
          if (v3084) {
            var v3083 = g$$204[d$$414];
            for (j$$113 in v3083) {
              var v21232 = g$$204[d$$414];
              var v15443 = v21232[j$$113];
              var v9702 = v15443.type;
              var v3082 = v9702 == "binary";
              if (v3082) {
                var v15444 = g$$204[d$$414];
                var v9703 = v15444[j$$113];
                v9703.chart = d$$414;
                var v24253 = Smits.PhyloCanvas;
                var v21233 = v24253.Render;
                var v15445 = v21233.Parameters;
                var v9704 = v15445.binaryCharts;
                var v15446 = g$$204[d$$414];
                var v9705 = v15446[j$$113];
                introspect(JAM.policy.p3) {
                  v9704.push(v9705);
                }
              } else {
                var v21234 = g$$204[d$$414];
                var v15447 = v21234[j$$113];
                var v9706 = v15447.type;
                var v3081 = v9706 == "integratedBinary";
                if (v3081) {
                  var v15448 = g$$204[d$$414];
                  var v9707 = v15448[j$$113];
                  v9707.chart = d$$414;
                  var v24254 = Smits.PhyloCanvas;
                  var v21235 = v24254.Render;
                  var v15449 = v21235.Parameters;
                  var v9708 = v15449.integratedBinaryCharts;
                  var v15450 = g$$204[d$$414];
                  var v9709 = v15450[j$$113];
                  introspect(JAM.policy.p3) {
                    v9708.push(v9709);
                  }
                } else {
                  var v21236 = g$$204[d$$414];
                  var v15451 = v21236[j$$113];
                  var v9710 = v15451.type;
                  var v3080 = v9710 == "bar";
                  if (v3080) {
                    var v15452 = g$$204[d$$414];
                    var v9711 = v15452[j$$113];
                    v9711.chart = d$$414;
                    var v24255 = Smits.PhyloCanvas;
                    var v21237 = v24255.Render;
                    var v15453 = v21237.Parameters;
                    var v9712 = v15453.barCharts;
                    var v15454 = g$$204[d$$414];
                    var v9713 = v15454[j$$113];
                    introspect(JAM.policy.p3) {
                      v9712.push(v9713);
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    b$$691 = l$$86(b$$691);
    return;
  }
  function p$$53(a$$713, c$$564) {
    var d$$413;
    for (d$$413 in a$$713) {
      var v9714 = d$$413 != "_children";
      if (v9714) {
        v9714 = d$$413 != "Text";
      }
      var v3088 = v9714;
      if (v3088) {
        var v9715;
        var v21238 = d$$413 == "rectangular";
        var v24256 = !v21238;
        if (v24256) {
          v21238 = d$$413 == "circular";
        }
        var v15456 = v21238;
        if (v15456) {
          var v21239 = a$$713[d$$413];
          var v15455 = v21239[0];
          v9715 = p$$53(v15455, d$$413);
        } else {
          var v27784 = Smits.PhyloCanvas;
          var v26320 = v27784.Render;
          var v24257 = v26320.Parameters;
          var v21240 = v24257[d$$413];
          var v24259 = !v21240;
          if (v24259) {
            var v27785 = Smits.PhyloCanvas;
            var v26321 = v27785.Render;
            var v24258 = v26321.Parameters;
            introspect(JAM.policy.p2) {
              v24258[d$$413] = {};
            }
          }
          var v26322 = Smits.PhyloCanvas;
          var v24260 = v26322.Render;
          var v21241 = v24260.Parameters;
          var v26323 = a$$713[d$$413];
          var v24261 = v26323[0];
          var v21242 = v24261.Text;
          introspect(JAM.policy.p3) {
            v9715 = v21241.set(d$$413, v21242, c$$564);
          }
        }
        v9715;
      }
    }
    return;
  }
  function l$$86(b$$692) {
    var v9716 = b$$692.children;
    if (v9716) {
      var v15457 = b$$692.children;
      v9716 = v15457.length;
    }
    var v3095 = v9716;
    if (v3095) {
      var f$$194 = 0;
      var v15458 = b$$692.children;
      var v9717 = v15458.length;
      var v3094 = f$$194 < v9717;
      for (;v3094;) {
        var v3089 = b$$692.children;
        var d$$412 = v3089[f$$194];
        var v21243 = d$$412.len;
        var v21244 = b$$692.newickLen;
        var v15459 = v21243 + v21244;
        var v9718 = v15459 * 1E4;
        introspect(JAM.policy.p3) {
          var v3090 = Math.round(v9718)
        }
        d$$412.newickLen = v3090 / 1E4;
        var v9719 = d$$412.level;
        var v3091 = v9719 > a$$711;
        if (v3091) {
          a$$711 = d$$412.level;
        }
        var v9720 = d$$412.newickLen;
        var v3092 = v9720 > c$$562;
        if (v3092) {
          c$$562 = d$$412.newickLen;
        }
        var v15460 = d$$412.children;
        var v9721 = v15460.length;
        var v3093 = v9721 > 0;
        if (v3093) {
          l$$86(d$$412, b$$692);
        }
        f$$194++;
        var v15461 = b$$692.children;
        var v9722 = v15461.length;
        v3094 = f$$194 < v9722;
      }
    }
    return b$$692;
  }
  function k$$80(a$$712, c$$563) {
    var v9723 = Smits.PhyloCanvas;
    var v3096 = v9723.Node;
    var d$$411 = new v3096;
    if (c$$563) {
      var v3097 = c$$563.level;
      d$$411.level = v3097 + 1;
    }
    var v9724 = a$$712.clade;
    if (v9724) {
      var v15462 = a$$712.clade;
      v9724 = v15462.length;
    }
    var v3101 = v9724;
    if (v3101) {
      var j$$112 = 0;
      var v15463 = a$$712.clade;
      var v9725 = v15463.length;
      var v3100 = j$$112 < v9725;
      for (;v3100;) {
        var v3098 = d$$411.children;
        var v15464 = a$$712.clade;
        var v9726 = v15464[j$$112];
        var v3099 = k$$80(v9726, d$$411);
        introspect(JAM.policy.p3) {
          v3098.push(v3099);
        }
        j$$112++;
        var v15465 = a$$712.clade;
        var v9727 = v15465.length;
        v3100 = j$$112 < v9727;
      }
    }
    var v3107 = a$$712.branch_length;
    if (v3107) {
      var v15466 = a$$712.branch_length;
      var v9728 = typeof v15466;
      var v3103 = v9728 === "object";
      if (v3103) {
        var v9729 = a$$712.branch_length;
        var v3102 = v9729[0];
        a$$712.branch_length = v3102.Text;
      }
      var v3104 = Smits.Common;
      var v3105 = a$$712.branch_length;
      introspect(JAM.policy.p3) {
        var v30941 = v3104.roundFloat(v3105, 4)
      }
      d$$411.len = v30941;
      var v9730 = d$$411.len;
      var v3106 = v9730 == 0;
      if (v3106) {
        d$$411.len = 1E-4;
      }
    }
    var v3115 = a$$712.name;
    if (v3115) {
      d$$411.type = "label";
      var v9731 = a$$712.name;
      var v3108 = v9731[0];
      d$$411.name = v3108.Text;
      var v15467 = a$$712.name;
      var v9732 = v15467[0];
      if (v9732) {
        var v21245 = a$$712.name;
        var v15468 = v21245[0];
        v9732 = v15468.style;
      }
      var v3110 = v9732;
      if (v3110) {
        var v9733 = a$$712.name;
        var v3109 = v9733[0];
        d$$411.style = v3109.style;
      }
      var v15469 = a$$712.name;
      var v9734 = v15469[0];
      if (v9734) {
        var v21246 = a$$712.name;
        var v15470 = v21246[0];
        v9734 = v15470.bgStyle;
      }
      var v3112 = v9734;
      if (v3112) {
        var v9735 = a$$712.name;
        var v3111 = v9735[0];
        d$$411.bgStyle = v3111.bgStyle;
      }
    } else {
      var v3114 = a$$712.confidence;
      if (v3114) {
        var v9736 = a$$712.confidence;
        var v3113 = v9736[0];
        d$$411.name = v3113.Text;
      }
    }
    var v24262 = a$$712.sequence;
    if (v24262) {
      var v26324 = a$$712.sequence;
      v24262 = v26324[0];
    }
    var v21247 = v24262;
    if (v21247) {
      var v26325 = a$$712.sequence;
      var v24263 = v26325[0];
      v21247 = v24263.name;
    }
    var v15471 = v21247;
    if (v15471) {
      var v26326 = a$$712.sequence;
      var v24264 = v26326[0];
      var v21248 = v24264.name;
      v15471 = v21248[0];
    }
    var v9737 = v15471;
    if (v9737) {
      var v26327 = a$$712.sequence;
      var v24265 = v26327[0];
      var v21249 = v24265.name;
      var v15472 = v21249[0];
      v9737 = v15472.Text;
    }
    var v3117 = v9737;
    if (v3117) {
      var v21250 = a$$712.sequence;
      var v15473 = v21250[0];
      var v9738 = v15473.name;
      var v3116 = v9738[0];
      d$$411.sequenceName = v3116.Text;
    }
    var v9739 = a$$712.taxonomy;
    if (v9739) {
      var v15474 = a$$712.taxonomy;
      v9739 = v15474[0];
    }
    var v3122 = v9739;
    if (v3122) {
      var v24266 = a$$712.taxonomy;
      var v21251 = v24266[0];
      var v15475 = v21251.scientific_name;
      if (v15475) {
        var v26328 = a$$712.taxonomy;
        var v24267 = v26328[0];
        var v21252 = v24267.scientific_name;
        v15475 = v21252[0];
      }
      var v9740 = v15475;
      if (v9740) {
        var v26329 = a$$712.taxonomy;
        var v24268 = v26329[0];
        var v21253 = v24268.scientific_name;
        var v15476 = v21253[0];
        v9740 = v15476.Text;
      }
      var v3119 = v9740;
      if (v3119) {
        var v21254 = a$$712.taxonomy;
        var v15477 = v21254[0];
        var v9741 = v15477.scientific_name;
        var v3118 = v9741[0];
        d$$411.taxonomyScientificName = v3118.Text;
      }
      var v24269 = a$$712.taxonomy;
      var v21255 = v24269[0];
      var v15478 = v21255.common_name;
      if (v15478) {
        var v26330 = a$$712.taxonomy;
        var v24270 = v26330[0];
        var v21256 = v24270.common_name;
        v15478 = v21256[0];
      }
      var v9742 = v15478;
      if (v9742) {
        var v26331 = a$$712.taxonomy;
        var v24271 = v26331[0];
        var v21257 = v24271.common_name;
        var v15479 = v21257[0];
        v9742 = v15479.Text;
      }
      var v3121 = v9742;
      if (v3121) {
        var v21258 = a$$712.taxonomy;
        var v15480 = v21258[0];
        var v9743 = v15480.common_name;
        var v3120 = v9743[0];
        d$$411.taxonomyCommonName = v3120.Text;
      }
    }
    var v24272 = a$$712.sequence;
    if (v24272) {
      var v26332 = a$$712.sequence;
      v24272 = v26332[0];
    }
    var v21259 = v24272;
    if (v21259) {
      var v26333 = a$$712.sequence;
      var v24273 = v26333[0];
      v21259 = v24273.accession;
    }
    var v15481 = v21259;
    if (v15481) {
      var v26334 = a$$712.sequence;
      var v24274 = v26334[0];
      var v21260 = v24274.accession;
      v15481 = v21260[0];
    }
    var v9744 = v15481;
    if (v9744) {
      var v26335 = a$$712.sequence;
      var v24275 = v26335[0];
      var v21261 = v24275.accession;
      var v15482 = v21261[0];
      v9744 = v15482.Text;
    }
    var v3124 = v9744;
    if (v3124) {
      var v21262 = a$$712.sequence;
      var v15483 = v21262[0];
      var v9745 = v15483.accession;
      var v3123 = v9745[0];
      d$$411.sequenceAccession = v3123.Text;
    }
    var v3127 = a$$712.point;
    if (v3127) {
      var v24276 = a$$712.point;
      var v21263 = v24276[0];
      var v15484 = v21263.lat;
      var v9746 = v15484[0];
      var v3125 = v9746.Text;
      var v24277 = a$$712.point;
      var v21264 = v24277[0];
      var v15485 = v21264["long"];
      var v9747 = v15485[0];
      var v3126 = v9747.Text;
      d$$411.LatLong = [v3125, v3126];
    }
    var v9748 = d$$411.name;
    var v3133 = !v9748;
    if (v3133) {
      var v3131 = d$$411.sequenceName;
      if (v3131) {
        d$$411.name = d$$411.sequenceName;
      } else {
        var v3130 = d$$411.taxonomyScientificName;
        if (v3130) {
          d$$411.name = d$$411.taxonomyScientificName;
        } else {
          var v3129 = d$$411.taxonomyCommonName;
          if (v3129) {
            d$$411.name = d$$411.taxonomyCommonName;
          } else {
            var v3128 = d$$411.sequenceAccession;
            if (v3128) {
              d$$411.name = d$$411.sequenceAccession;
            }
          }
        }
      }
      var v3132 = d$$411.name;
      if (v3132) {
        d$$411.type = "label";
      }
    }
    var v3142 = a$$712.annotation;
    if (v3142) {
      var v24278 = a$$712.annotation;
      var v21265 = v24278[0];
      if (v21265) {
        var v26336 = a$$712.annotation;
        var v24279 = v26336[0];
        v21265 = v24279.desc;
      }
      var v15486 = v21265;
      if (v15486) {
        var v26337 = a$$712.annotation;
        var v24280 = v26337[0];
        var v21266 = v24280.desc;
        v15486 = v21266[0];
      }
      var v9749 = v15486;
      if (v9749) {
        var v26338 = a$$712.annotation;
        var v24281 = v26338[0];
        var v21267 = v24281.desc;
        var v15487 = v21267[0];
        v9749 = v15487.Text;
      }
      var v3135 = v9749;
      if (v3135) {
        var v21268 = a$$712.annotation;
        var v15488 = v21268[0];
        var v9750 = v15488.desc;
        var v3134 = v9750[0];
        d$$411.description = v3134.Text;
      }
      var v24282 = a$$712.annotation;
      var v21269 = v24282[0];
      if (v21269) {
        var v26339 = a$$712.annotation;
        var v24283 = v26339[0];
        v21269 = v24283.uri;
      }
      var v15489 = v21269;
      if (v15489) {
        var v26340 = a$$712.annotation;
        var v24284 = v26340[0];
        var v21270 = v24284.uri;
        v15489 = v21270[0];
      }
      var v9751 = v15489;
      if (v9751) {
        var v26341 = a$$712.annotation;
        var v24285 = v26341[0];
        var v21271 = v24285.uri;
        var v15490 = v21271[0];
        v9751 = v15490.Text;
      }
      var v3137 = v9751;
      if (v3137) {
        var v21272 = a$$712.annotation;
        var v15491 = v21272[0];
        var v9752 = v15491.uri;
        var v3136 = v9752[0];
        d$$411.uri = v3136.Text;
      }
      var v15492 = a$$712.annotation;
      var v9753 = v15492[0];
      if (v9753) {
        var v21273 = a$$712.annotation;
        var v15493 = v21273[0];
        v9753 = v15493.img;
      }
      var v3141 = v9753;
      if (v3141) {
        var v15494 = a$$712.annotation;
        var v9754 = v15494[0];
        var v3140 = v9754.img;
        for (j$$112 in v3140) {
          var v9755 = Smits.Common;
          introspect(JAM.policy.p3) {
            var v3139 = v9755.isInteger(j$$112)
          }
          if (v3139) {
            var v3138 = d$$411.img;
            var v24286 = a$$712.annotation;
            var v21274 = v24286[0];
            var v15495 = v21274.img;
            var v9756 = v15495[j$$112];
            introspect(JAM.policy.p2) {
              v3138[j$$112] = v9756.Text;
            }
          }
        }
      }
    }
    var v9757 = a$$712.chart;
    if (v9757) {
      var v15496 = a$$712.chart;
      v9757 = v15496[0];
    }
    var v3146 = v9757;
    if (v3146) {
      var v9758 = a$$712.chart;
      var v3145 = v9758[0];
      for (j$$112 in v3145) {
        var v9759 = j$$112 != "Text";
        if (v9759) {
          v9759 = j$$112 != "_children";
        }
        var v3144 = v9759;
        if (v3144) {
          var v3143 = d$$411.chart;
          var v24287 = a$$712.chart;
          var v21275 = v24287[0];
          var v15497 = v21275[j$$112];
          var v9760 = v15497[0];
          introspect(JAM.policy.p2) {
            v3143[j$$112] = v9760.Text;
          }
        }
      }
    }
    var v9761 = d$$411;
    if (v9761) {
      var v15498 = d$$411.level;
      v9761 = v15498 > 1;
    }
    var v3147 = v9761;
    if (v3147) {
      var v9762 = d$$411.len;
      var v15499 = !v9762;
      if (v15499) {
        f$$193 = "Error. Please include Branch Lengths - we only draw rooted phylogenetic trees.";
      }
    }
    return d$$411;
  }
  var a$$711 = 0;
  var c$$562 = 0;
  var b$$691;
  var f$$193;
  return v1919;
}
function v1914() {
  function v1913(c$$561) {
    function v1912() {
      return;
    }
    function v1911() {
      return k$$79;
    }
    function v1910() {
      return f$$192;
    }
    function v1909() {
      return l$$85;
    }
    this.getRoot = v1909;
    this.getLevels = v1910;
    this.getNewickLen = v1911;
    this.getValidate = v1912;
    k$$79 = f$$192 = 0;
    a$$706 = c$$561;
    b$$689 = 0;
    d$$409();
    l$$85 = g$$202();
    l$$85 = j$$110(l$$85);
    return;
  }
  function j$$110(d$$410) {
    var v9763 = d$$410.children;
    if (v9763) {
      var v15500 = d$$410.children;
      v9763 = v15500.length;
    }
    var v3156 = v9763;
    if (v3156) {
      var c$$560 = 0;
      var v15501 = d$$410.children;
      var v9764 = v15501.length;
      var v3155 = c$$560 < v9764;
      for (;v3155;) {
        var v3148 = d$$410.children;
        var a$$710 = v3148[c$$560];
        var v9765 = a$$710.len;
        var v3149 = v9765 === 0;
        if (v3149) {
          a$$710.len = 1;
        }
        var v3150 = Smits.Common;
        var v9766 = a$$710.len;
        var v9767 = d$$410.newickLen;
        var v3151 = v9766 + v9767;
        introspect(JAM.policy.p3) {
          var v30942 = v3150.roundFloat(v3151, 4)
        }
        a$$710.newickLen = v30942;
        var v9768 = a$$710.level;
        var v3152 = v9768 > f$$192;
        if (v3152) {
          f$$192 = a$$710.level;
        }
        var v9769 = a$$710.newickLen;
        var v3153 = v9769 > k$$79;
        if (v3153) {
          k$$79 = a$$710.newickLen;
        }
        var v15502 = a$$710.children;
        var v9770 = v15502.length;
        var v3154 = v9770 > 0;
        if (v3154) {
          j$$110(a$$710, d$$410);
        }
        c$$560++;
        var v15503 = d$$410.children;
        var v9771 = v15503.length;
        v3155 = c$$560 < v9771;
      }
    }
    return d$$410;
  }
  function d$$409() {
    introspect(JAM.policy.p3) {
      c$$559 = a$$706.charAt(b$$689);
    }
    b$$689 = b$$689 + 1;
    return;
  }
  function m$$52() {
    var a$$709 = "";
    var v21276 = c$$559 !== ":";
    if (v21276) {
      v21276 = c$$559 !== ")";
    }
    var v15504 = v21276;
    if (v15504) {
      v15504 = c$$559 !== ",";
    }
    var v9772 = v15504;
    if (v9772) {
      v9772 = c$$559 !== ";";
    }
    var v3157 = v9772;
    for (;v3157;) {
      a$$709 = a$$709 + c$$559;
      d$$409();
      var v21277 = c$$559 !== ":";
      if (v21277) {
        v21277 = c$$559 !== ")";
      }
      var v15505 = v21277;
      if (v15505) {
        v15505 = c$$559 !== ",";
      }
      var v9773 = v15505;
      if (v9773) {
        v9773 = c$$559 !== ";";
      }
      v3157 = v9773;
    }
    return a$$709;
  }
  function g$$202(a$$708) {
    var v9774 = Smits.PhyloCanvas;
    var v3158 = v9774.Node;
    var e$$359 = new v3158;
    if (a$$708) {
      var v3159 = a$$708.level;
      e$$359.level = v3159 + 1;
    }
    var v3160 = c$$559 !== ")";
    for (;v3160;) {
      d$$409();
      var v9775;
      var v15510 = c$$559 === "(";
      if (v15510) {
        var v15506 = e$$359.children;
        var v15507 = g$$202(e$$359);
        introspect(JAM.policy.p3) {
          v9775 = v15506.push(v15507);
        }
      } else {
        var v15508 = e$$359.children;
        var v15509 = p$$52(e$$359);
        introspect(JAM.policy.p3) {
          v9775 = v15508.push(v15509);
        }
      }
      v9775;
      v3160 = c$$559 !== ")";
    }
    d$$409();
    var v21278 = c$$559 !== ":";
    if (v21278) {
      v21278 = c$$559 !== ")";
    }
    var v15511 = v21278;
    if (v15511) {
      v15511 = c$$559 !== ",";
    }
    var v9776 = v15511;
    if (v9776) {
      v9776 = c$$559 !== ";";
    }
    var v3161 = v9776;
    if (v3161) {
      e$$359.type = "label";
      var v30943 = m$$52();
      e$$359.name = v30943;
    }
    var v3165 = c$$559 === ":";
    if (v3165) {
      d$$409();
      var v3162 = Smits.Common;
      var v3163 = m$$52();
      introspect(JAM.policy.p3) {
        var v30944 = v3162.roundFloat(v3163, 4)
      }
      e$$359.len = v30944;
      var v9777 = e$$359.len;
      var v3164 = v9777 == 0;
      if (v3164) {
        e$$359.len = 1E-4;
      }
      e$$359.type = "stem";
    }
    return e$$359;
  }
  function p$$52(a$$707) {
    var v9778 = Smits.PhyloCanvas;
    var v3166 = v9778.Node;
    var e$$358 = new v3166;
    var v9779 = c$$559 !== ")";
    if (v9779) {
      v9779 = c$$559 !== ",";
    }
    var v3171 = v9779;
    for (;v3171;) {
      var v3170 = c$$559 === ":";
      if (v3170) {
        d$$409();
        var v21279 = Smits.Common;
        var v21280 = m$$52();
        introspect(JAM.policy.p3) {
          var v30945 = v21279.roundFloat(v21280, 4)
        }
        e$$358.len = v30945;
        var v15512 = e$$358.len;
        var v3167 = v15512 == 0;
        if (v3167) {
          e$$358.len = 1E-4;
        }
      } else {
        var v9780 = c$$559 === "'";
        var v15513 = !v9780;
        if (v15513) {
          v9780 = c$$559 === '"';
        }
        var v3169 = v9780;
        if (v3169) {
          e$$358.type = "label";
          var g$$203 = e$$358;
          var j$$111 = c$$559;
          var b$$690 = "";
          var v3168 = c$$559 !== j$$111;
          for (;v3168;) {
            b$$690 = b$$690 + c$$559;
            d$$409();
            v3168 = c$$559 !== j$$111;
          }
          g$$203.name = b$$690;
        } else {
          e$$358.type = "label";
          var v30946 = m$$52();
          e$$358.name = v30946;
        }
      }
      var v9781 = c$$559 !== ")";
      if (v9781) {
        v9781 = c$$559 !== ",";
      }
      v3171 = v9781;
    }
    var v3172 = a$$707.level;
    e$$358.level = v3172 + 1;
    return e$$358;
  }
  var a$$706;
  var c$$559;
  var b$$689;
  var f$$192 = 0;
  var k$$79 = 0;
  var l$$85;
  return v1913;
}
function v1908(a$$705) {
  var v9782 = this._midBranchPosition;
  var v9783 = !1;
  var v3173 = v9782 !== v9783;
  if (v3173) {
    return this._midBranchPosition;
  }
  var c$$558 = [0, 0];
  var b$$688 = 0;
  var v15514 = this.children;
  var v9784 = v15514.length;
  var v3176 = b$$688 < v9784;
  for (;v3176;) {
    var v3174 = this.children;
    var f$$191 = v3174[b$$688];
    var v3175;
    var v15515 = f$$191.children;
    if (v15515) {
      var v24288 = f$$191.children;
      var v21281 = v24288.length;
      v15515 = v21281 > 0;
    }
    var v9787 = v15515;
    if (v9787) {
      var v9785;
      var v21282 = b$$688 == 0;
      if (v21282) {
        v21282 = a$$705;
      }
      var v15517 = v21282;
      if (v15517) {
        var v21283 = !0;
        introspect(JAM.policy.p3) {
          var v30947 = f$$191.getMidbranchPosition(v21283)
        }
        c$$558[0] = v30947;
        var v24289 = c$$558[1];
        introspect(JAM.policy.p3) {
          var v26342 = f$$191.getCountAllChildren()
        }
        var v24290 = v26342 - 1;
        v9785 = c$$558[1] = v24289 + v24290;
      } else {
        var v15516;
        var v21284 = b$$688 == 0;
        if (v21284) {
          introspect(JAM.policy.p3) {
            var v30948 = f$$191.getMidbranchPosition()
          }
          c$$558[0] = v30948;
          var v26343 = c$$558[1];
          introspect(JAM.policy.p3) {
            var v26344 = f$$191.getCountAllChildren()
          }
          v15516 = c$$558[1] = v26343 + v26344;
        } else {
          var v24291 = c$$558[1];
          var v26345;
          var v29736 = this.children;
          var v29340 = v29736.length;
          var v28718 = v29340 - 1;
          var v27786 = b$$688 == v28718;
          if (v27786) {
            introspect(JAM.policy.p3) {
              v26345 = f$$191.getMidbranchPosition();
            }
          } else {
            introspect(JAM.policy.p3) {
              v26345 = f$$191.getCountAllChildren();
            }
          }
          var v24292 = v26345;
          v15516 = c$$558[1] = v24291 + v24292;
        }
        v9785 = v15516;
      }
      v3175 = v9785;
    } else {
      var v9786;
      var v21285 = b$$688 == 0;
      if (v21285) {
        v21285 = a$$705;
      }
      var v15518 = v21285;
      if (v15518) {
        v9786 = c$$558[0] = 0;
      } else {
        var v21286 = b$$688 == 0;
        if (v21286) {
          c$$558[0] = 1;
        }
        var v24293 = c$$558[1];
        v9786 = c$$558[1] = v24293 + 1;
      }
      v3175 = v9786;
    }
    v3175;
    b$$688++;
    var v15519 = this.children;
    var v9788 = v15519.length;
    v3176 = b$$688 < v9788;
  }
  var v3177;
  var v15520 = c$$558[1];
  var v15521 = c$$558[0];
  var v9790 = v15520 >= v15521;
  if (v9790) {
    var v15522 = c$$558[1];
    var v15523 = c$$558[0];
    var v9789 = v15522 + v15523;
    v3177 = v9789 / 2;
  } else {
    v3177 = c$$558[0];
  }
  return this._midBranchPosition = v3177;
}
function v1907() {
  var v9791 = this._countImmediateChildren;
  var v9792 = !1;
  var v3178 = v9791 !== v9792;
  if (v3178) {
    return this._countImmediateChildren;
  }
  var a$$704 = 0;
  var c$$557;
  var v3179 = this.children;
  for (c$$557 in v3179) {
    var v21287 = this.children;
    var v15524 = v21287[c$$557];
    var v9793 = v15524.length;
    a$$704 = a$$704 + v9793;
  }
  return this._countImmediateChildren = a$$704;
}
function v1906() {
  var v9794 = this._countAllChildren;
  var v9795 = !1;
  var v3180 = v9794 !== v9795;
  if (v3180) {
    return this._countAllChildren;
  }
  var a$$703 = 0;
  var c$$556;
  var v3184 = this.children;
  for (c$$556 in v3184) {
    var v9796 = Smits.Common;
    introspect(JAM.policy.p3) {
      var v3183 = v9796.isInteger(c$$556)
    }
    if (v3183) {
      var v3181 = this.children;
      var b$$687 = v3181[c$$556];
      var v3182;
      var v15525 = b$$687.children;
      if (v15525) {
        var v24294 = b$$687.children;
        var v21288 = v24294.length;
        v15525 = v21288 > 0;
      }
      var v9797 = v15525;
      if (v9797) {
        introspect(JAM.policy.p3) {
          var v15526 = b$$687.getCountAllChildren()
        }
        v3182 = a$$703 = a$$703 + v15526;
      } else {
        v3182 = a$$703;
        a$$703 = a$$703 + 1;
      }
      v3182;
    }
  }
  return this._countAllChildren = a$$703;
}
function v1905() {
  function v1904(a$$702, c$$555) {
    var v3185 = Smits.Common;
    var v15527 = v3185.nodeIdIncrement;
    this.id = v3185.nodeIdIncrement = v15527 + 1;
    this.newickLen = this.len = this.level = 0;
    this.type = this.name = "";
    this.chart = {};
    this.img = [];
    if (a$$702) {
      var v9798 = Smits.Common;
      introspect(JAM.policy.p3) {
        v9798.apply(this, a$$702);
      }
    }
    this._midBranchPosition = this._countImmediateChildren = this._countAllChildren = !1;
    this.children = [];
    if (c$$555) {
      var v9799 = c$$555.children;
      introspect(JAM.policy.p3) {
        v9799.push(this);
      }
    }
    return;
  }
  return v1904;
}
function v1903() {
  function v1902(k$$78, l$$84, p$$51, g$$201, m$$51) {
    function v1901() {
      var v3186;
      var v15528 = Raphael.svg;
      if (v15528) {
        var v21289 = Smits.Common;
        introspect(JAM.policy.p3) {
          v15528 = v21289.isXMLSerializerAvailable();
        }
      }
      var v9802 = v15528;
      if (v9802) {
        var v9800 = new XMLSerializer;
        var v15529 = b$$686.svg;
        var v9801 = v15529.canvas;
        introspect(JAM.policy.p3) {
          v3186 = v9800.serializeToString(v9801);
        }
      } else {
        v3186 = !1;
      }
      return v3186;
    }
    function v1900() {
      return a$$701;
    }
    function v1899() {
      return b$$686;
    }
    function v1898(d$$408) {
      var v3187 = b$$686.svg;
      introspect(JAM.policy.p3) {
        v3187.scale(d$$408);
      }
      return;
    }
    function v1897() {
      return;
    }
    function v1896() {
      return;
    }
    this.getNewickObject = v1896;
    this.clear = v1897;
    this.scale = v1898;
    this.getSvg = v1899;
    this.getPhylogram = v1900;
    this.getSvgSource = v1901;
    var v9803 = typeof k$$78;
    var v3193 = v9803 === "object";
    if (v3193) {
      var v3191 = k$$78.xml;
      if (v3191) {
        var v3188;
        var v9805 = k$$78.fileSource;
        if (v9805) {
          v3188 = k$$78.xml;
        } else {
          var v9804 = k$$78.xml;
          introspect(JAM.policy.p3) {
            v3188 = XMLObjectifier.textToXML(v9804);
          }
        }
        var d$$407 = v3188;
        introspect(JAM.policy.p3) {
          d$$407 = XMLObjectifier.xmlToJSON(d$$407);
        }
        var v9806 = Smits.PhyloCanvas;
        var v3189 = v9806.PhyloxmlParse;
        f$$190 = new v3189(d$$407);
      } else {
        var v3190;
        var v9808 = k$$78.phyloxml;
        if (v9808) {
          var v21290;
          var v24296 = k$$78.fileSource;
          if (v24296) {
            v21290 = k$$78.phyloxml;
          } else {
            var v24295 = k$$78.phyloxml;
            introspect(JAM.policy.p3) {
              v21290 = XMLObjectifier.textToXML(v24295);
            }
          }
          d$$407 = v21290;
          introspect(JAM.policy.p3) {
            d$$407 = XMLObjectifier.xmlToJSON(d$$407);
          }
          var v21291 = Smits.PhyloCanvas;
          var v15530 = v21291.PhyloxmlParse;
          v3190 = f$$190 = new v15530(d$$407);
        } else {
          var v9807;
          var v15532 = k$$78.nexml;
          if (v15532) {
            var v24297;
            var v26347 = k$$78.fileSource;
            if (v26347) {
              v24297 = k$$78.nexml;
            } else {
              var v26346 = k$$78.nexml;
              introspect(JAM.policy.p3) {
                v24297 = XMLObjectifier.textToXML(v26346);
              }
            }
            d$$407 = v24297;
            introspect(JAM.policy.p3) {
              d$$407 = XMLObjectifier.xmlToJSON(d$$407);
            }
            var v24298 = Smits.PhyloCanvas;
            var v21292 = v24298.NexmlParse;
            v9807 = f$$190 = new v21292(d$$407, k$$78);
          } else {
            var v15531;
            var v21296 = k$$78.json;
            if (v21296) {
              var v24299 = Smits.PhyloCanvas;
              var v21293 = v24299.PhyloxmlParse;
              var v21294 = k$$78.json;
              v15531 = f$$190 = new v21293(v21294);
            } else {
              var v21295;
              var v24303 = k$$78.newick;
              if (v24303) {
                var v26348 = Smits.PhyloCanvas;
                var v24300 = v26348.NewickParse;
                var v24301 = k$$78.newick;
                v21295 = f$$190 = new v24300(v24301);
              } else {
                var v24302;
                var v26350 = k$$78.nexmlJson;
                if (v26350) {
                  var v27787 = Smits.PhyloCanvas;
                  var v26349 = v27787.NexmlJsonParse;
                  v24302 = f$$190 = new v26349(k$$78);
                } else {
                  v24302 = alert("Please set the format of input data");
                }
                v21295 = v24302;
              }
              v15531 = v21295;
            }
            v9807 = v15531;
          }
          v3190 = v9807;
        }
        v3190;
      }
    } else {
      var v9809 = Smits.PhyloCanvas;
      var v3192 = v9809.NewickParse;
      f$$190 = new v3192(k$$78);
    }
    c$$554 = l$$84;
    var v15533 = Smits.PhyloCanvas;
    var v9810 = v15533.Render;
    var v3194 = v9810.SVG;
    b$$686 = new v3194(c$$554, p$$51, g$$201);
    var v3195;
    var v9813 = m$$51 == "circular";
    if (v9813) {
      var v21297 = Smits.PhyloCanvas;
      var v15534 = v21297.Render;
      var v9811 = v15534.CircularPhylogram;
      v3195 = new v9811(b$$686, f$$190);
    } else {
      var v21298 = Smits.PhyloCanvas;
      var v15535 = v21298.Render;
      var v9812 = v15535.Phylogram;
      v3195 = new v9812(b$$686, f$$190);
    }
    a$$701 = v3195;
    return;
  }
  var a$$701;
  var c$$554;
  var b$$686;
  var f$$190;
  return v1902;
}
function v1895(a$$700, c$$553) {
  var v3196 = document.styleSheets;
  var b$$685 = v3196[0];
  var v3197;
  var v9815 = b$$685.addRule;
  if (v9815) {
    introspect(JAM.policy.p3) {
      v3197 = b$$685.addRule(a$$700, c$$553);
    }
  } else {
    var v9814 = b$$685.insertRule;
    if (v9814) {
      var v24304 = a$$700 + " { ";
      var v21299 = v24304 + c$$553;
      var v15536 = v21299 + " }";
      var v21300 = b$$685.cssRules;
      var v15537 = v21300.length;
      introspect(JAM.policy.p3) {
        v9814 = b$$685.insertRule(v15536, v15537);
      }
    }
    v3197 = v9814;
  }
  v3197;
  return;
}
function v1894(a$$699, c$$552, b$$684) {
  var v9816 = c$$552.type;
  var v3198 = v9816 != "radialGradient";
  if (v3198) {
    return !1;
  }
  var v3199 = Smits.Common;
  var v9817 = b$$684[0];
  var v9818 = b$$684[1];
  var v9819 = b$$684[2];
  var v9820 = b$$684[0];
  var v9821 = b$$684[1];
  var v3200 = {id:a$$699, gradientUnits:"userSpaceOnUse", cx:v9817, cy:v9818, r:v9819, fx:v9820, fy:v9821};
  introspect(JAM.policy.p3) {
    a$$699 = v3199.createSvgEl("radialGradient", v3200);
  }
  var v3203 = c$$552.stop;
  if (v3203) {
    c$$552 = c$$552.stop;
    b$$684 = 0;
    var v9822 = c$$552.length;
    var v3202 = b$$684 < v9822;
    for (;v3202;) {
      var f$$189 = c$$552[b$$684];
      var v3201;
      var v9824 = f$$189["@attributes"];
      if (v9824) {
        var v15538 = Smits.Common;
        var v15539 = f$$189["@attributes"];
        introspect(JAM.policy.p3) {
          var v9823 = v15538.createSvgEl("stop", v15539)
        }
        introspect(JAM.policy.p3) {
          v3201 = a$$699.appendChild(v9823);
        }
      } else {
        var v24305 = f$$189._attributes;
        if (v24305) {
          delete f$$189._attributes;
        }
        var v24306 = f$$189._children;
        if (v24306) {
          delete f$$189._children;
        }
        var v21301 = f$$189.__proto__;
        if (v21301) {
          delete f$$189.__proto__;
        }
        var v21302 = Smits.Common;
        introspect(JAM.policy.p3) {
          var v15540 = v21302.createSvgEl("stop", f$$189)
        }
        introspect(JAM.policy.p3) {
          v3201 = a$$699.appendChild(v15540);
        }
      }
      v3201;
      b$$684++;
      var v9825 = c$$552.length;
      v3202 = b$$684 < v9825;
    }
  }
  return a$$699;
}
function v1893(a$$698, c$$551) {
  introspect(JAM.policy.p3) {
    a$$698 = document.createElementNS("http://www.w3.org/2000/svg", a$$698);
  }
  if (c$$551) {
    var b$$683;
    for (b$$683 in c$$551) {
      introspect(JAM.policy.p3) {
        var v3204 = c$$551.hasOwnProperty(b$$683)
      }
      if (v3204) {
        var v15541 = c$$551[b$$683];
        var v9826 = String(v15541);
        introspect(JAM.policy.p3) {
          a$$698.setAttribute(b$$683, v9826);
        }
      }
    }
  }
  return a$$698;
}
function v1892() {
  var v3205;
  var v15542 = typeof XMLSerializer;
  var v9827 = v15542 == "function";
  if (v9827) {
    v3205 = !0;
  } else {
    v3205 = !1;
  }
  return v3205;
}
function v1891(a$$697) {
  var v9828 = parseInt(a$$697);
  var v3206 = isNaN(v9828);
  return !v3206;
}
function v1890(a$$695, c$$549, b$$682, f$$188) {
  function v1889(c$$550, a$$696) {
    function v1888(g$$200) {
      a$$696.e = g$$200;
      introspect(JAM.policy.p3) {
        c$$550(a$$696);
      }
      return;
    }
    return v1888;
  }
  try {
    var v3207 = v1889(b$$682, f$$188);
    introspect(JAM.policy.p3) {
      a$$695[c$$549](v3207);
    }
  } catch (k$$77) {
  }
  return;
}
function v1887(a$$694, c$$548) {
  var v9829 = a$$694;
  if (v9829) {
    var v15543 = typeof c$$548;
    v9829 = v15543 == "object";
  }
  var v3208 = v9829;
  if (v3208) {
    var b$$681;
    for (b$$681 in c$$548) {
      introspect(JAM.policy.p2) {
        a$$694[b$$681] = c$$548[b$$681];
      }
    }
  }
  return a$$694;
}
function v1886(a$$693, c$$547) {
  var b$$680 = 0;
  var f$$187 = 1;
  var v3209 = b$$680 < c$$547;
  for (;v3209;) {
    f$$187 = f$$187 * 10;
    b$$680++;
    v3209 = b$$680 < c$$547;
  }
  var v9830 = a$$693 * f$$187;
  introspect(JAM.policy.p3) {
    var v3210 = Math.round(v9830)
  }
  return v3210 / f$$187;
}
function v1885(e$$347, t$$15, i$$210) {
  function v1884() {
    introspect(JAM.policy.p3) {
      return e$$347(N$$2);
    }
  }
  function v1883() {
    if (g$$199) {
      introspect(JAM.policy.p3) {
        g$$199.stop();
      }
      var v29341 = e$$347.colorbox;
      introspect(JAM.policy.p3) {
        v29341.close();
      }
      introspect(JAM.policy.p3) {
        var v28719 = g$$199.stop()
      }
      introspect(JAM.policy.p3) {
        v28719.remove();
      }
      introspect(JAM.policy.p3) {
        w$$18.remove();
      }
      q$$21 = !1;
      g$$199 = null;
      var v26351 = "." + et$$1;
      introspect(JAM.policy.p3) {
        var v24307 = e$$347(v26351)
      }
      introspect(JAM.policy.p3) {
        var v21303 = v24307.removeData(Y$$2)
      }
      introspect(JAM.policy.p3) {
        v21303.removeClass(et$$1);
      }
      introspect(JAM.policy.p3) {
        var v15544 = e$$347(t$$15)
      }
      var v15545 = "click." + Z$$2;
      introspect(JAM.policy.p3) {
        v15544.unbind(v15545);
      }
    }
    return;
  }
  function v1882() {
    function v1881() {
      function v1880() {
        q$$21 = !1;
        var v9831 = B$$3.onClosed;
        c$$545(rt$$3, v9831);
        return;
      }
      introspect(JAM.policy.p3) {
        var v24308 = g$$199.add(w$$18)
      }
      var v24309 = {opacity:1, cursor:"auto"};
      introspect(JAM.policy.p3) {
        var v21304 = v24308.css(v24309)
      }
      introspect(JAM.policy.p3) {
        v21304.hide();
      }
      c$$545(ht);
      introspect(JAM.policy.p3) {
        var v15546 = H$$3.empty()
      }
      introspect(JAM.policy.p3) {
        v15546.remove();
      }
      setTimeout(v1880, 1);
      return;
    }
    var v9832 = U$$2;
    if (v9832) {
      v9832 = !q$$21;
    }
    var v3211 = v9832;
    if (v3211) {
      q$$21 = !0;
      U$$2 = !1;
      var v26352 = B$$3.onCleanup;
      c$$545(nt, v26352);
      var v24310 = "." + Z$$2;
      introspect(JAM.policy.p3) {
        E$$3.unbind(v24310);
      }
      var v24311 = B$$3.fadeOut;
      var v26353 = !v24311;
      if (v26353) {
        v24311 = 0;
      }
      var v21305 = v24311;
      introspect(JAM.policy.p3) {
        w$$18.fadeTo(v21305, 0);
      }
      introspect(JAM.policy.p3) {
        var v15547 = g$$199.stop()
      }
      var v21306 = B$$3.fadeOut;
      var v24312 = !v21306;
      if (v24312) {
        v21306 = 0;
      }
      var v15548 = v21306;
      introspect(JAM.policy.p3) {
        v15547.fadeTo(v15548, 0, v1881);
      }
    }
    return;
  }
  function v1879() {
    var v15549 = !$$$4;
    if (v15549) {
      v15549 = k$$76[1];
    }
    var v9833 = v15549;
    if (v9833) {
      var v15550 = B$$3.loop;
      var v21307 = !v15550;
      if (v21307) {
        v15550 = z$$7;
      }
      v9833 = v15550;
    }
    var v3212 = v9833;
    if (v3212) {
      z$$7 = r$$22(-1);
      var v15551 = k$$76[z$$7];
      u$$13(v15551);
    }
    return;
  }
  function v1878() {
    var v15552 = !$$$4;
    if (v15552) {
      v15552 = k$$76[1];
    }
    var v9834 = v15552;
    if (v9834) {
      var v15553 = B$$3.loop;
      var v21309 = !v15553;
      if (v21309) {
        var v21308 = z$$7 + 1;
        v15553 = k$$76[v21308];
      }
      v9834 = v15553;
    }
    var v3213 = v9834;
    if (v3213) {
      z$$7 = r$$22(1);
      var v15554 = k$$76[z$$7];
      u$$13(v15554);
    }
    return;
  }
  function v1877(i$$223) {
    function v1876() {
      introspect(JAM.policy.p3) {
        Q$$2.position(0, a$$691);
      }
      return;
    }
    function v1875() {
      function v1874() {
        n$$101.src = "//about:blank";
        return;
      }
      function v1873() {
        var i$$225;
        var o$$33;
        var n$$102 = k$$76[this];
        introspect(JAM.policy.p3) {
          var r$$27 = e$$347.data(n$$102, Y$$2)
        }
        var v9835;
        var v21310 = r$$27;
        if (v21310) {
          v21310 = r$$27.href;
        }
        var v15556 = v21310;
        if (v15556) {
          i$$225 = r$$27.href;
          introspect(JAM.policy.p3) {
            var v21311 = e$$347.isFunction(i$$225)
          }
          if (v21311) {
            introspect(JAM.policy.p3) {
              v21311 = i$$225 = i$$225.call(n$$102);
            }
          }
          v9835 = v21311;
        } else {
          introspect(JAM.policy.p3) {
            var v15555 = e$$347(n$$102)
          }
          introspect(JAM.policy.p3) {
            v9835 = i$$225 = v15555.attr("href");
          }
        }
        v9835;
        var v15557 = i$$225;
        if (v15557) {
          var v21312 = r$$27.photo;
          var v24314 = !v21312;
          if (v24314) {
            var v24313 = r$$27.photoRegex;
            introspect(JAM.policy.p3) {
              v21312 = v24313.test(i$$225);
            }
          }
          v15557 = v21312;
        }
        var v9836 = v15557;
        if (v9836) {
          i$$225 = s$$30(r$$27, i$$225);
          introspect(JAM.policy.p3) {
            o$$33 = t$$15.createElement("img");
          }
          o$$33.src = i$$225;
        }
        return;
      }
      function v1872() {
        clearTimeout(G$$3);
        introspect(JAM.policy.p3) {
          F$$3.hide();
        }
        var v9837 = B$$3.onComplete;
        c$$545(ot, v9837);
        return;
      }
      function i$$224() {
        var v15558 = e$$347.support;
        var v9838 = v15558.opacity;
        var v9839 = !1;
        var v3214 = v9838 === v9839;
        if (v3214) {
          var v15559 = g$$199[0];
          var v9840 = v15559.style;
          introspect(JAM.policy.p3) {
            v9840.removeAttribute("filter");
          }
        }
        return;
      }
      var n$$101;
      var h$$165;
      var a$$692 = k$$76.length;
      var u$$16 = "frameBorder";
      var f$$186 = "allowTransparency";
      if (U$$2) {
        h$$165 = v1872;
        var v28720 = B$$3.title;
        introspect(JAM.policy.p3) {
          var v27788 = L$$2.html(v28720)
        }
        introspect(JAM.policy.p3) {
          var v26354 = v27788.add(H$$3)
        }
        introspect(JAM.policy.p3) {
          v26354.show();
        }
        var v24315;
        var v26355 = a$$692 > 1;
        if (v26355) {
          var v30223 = B$$3.current;
          var v29990 = typeof v30223;
          var v29737 = "string" == v29990;
          if (v29737) {
            var v30538 = B$$3.current;
            var v30539 = z$$7 + 1;
            introspect(JAM.policy.p3) {
              var v30393 = v30538.replace("{current}", v30539)
            }
            introspect(JAM.policy.p3) {
              var v30224 = v30393.replace("{total}", a$$692)
            }
            introspect(JAM.policy.p3) {
              var v29991 = S$$2.html(v30224)
            }
            introspect(JAM.policy.p3) {
              v29991.show();
            }
          }
          var v30225;
          var v30540 = B$$3.loop;
          var v30637 = !v30540;
          if (v30637) {
            var v30636 = a$$692 - 1;
            v30540 = v30636 > z$$7;
          }
          var v30394 = v30540;
          if (v30394) {
            v30225 = "show";
          } else {
            v30225 = "hide";
          }
          var v29992 = v30225;
          introspect(JAM.policy.p3) {
            var v29738 = R$$2[v29992]()
          }
          var v29739 = B$$3.next;
          introspect(JAM.policy.p3) {
            v29738.html(v29739);
          }
          var v29993;
          var v30395 = B$$3.loop;
          var v30541 = !v30395;
          if (v30541) {
            v30395 = z$$7;
          }
          var v30226 = v30395;
          if (v30226) {
            v29993 = "show";
          } else {
            v29993 = "hide";
          }
          var v29740 = v29993;
          introspect(JAM.policy.p3) {
            var v29342 = I$$3[v29740]()
          }
          var v29343 = B$$3.previous;
          introspect(JAM.policy.p3) {
            v29342.html(v29343);
          }
          introspect(JAM.policy.p3) {
            ct$$1();
          }
          var v27789 = B$$3.preloading;
          if (v27789) {
            var v29344 = r$$22(-1);
            var v29345 = r$$22(1);
            var v28721 = [v29344, v29345];
            introspect(JAM.policy.p3) {
              v27789 = e$$347.each(v28721, v1873);
            }
          }
          v24315 = v27789;
        } else {
          introspect(JAM.policy.p3) {
            v24315 = P$$2.hide();
          }
        }
        v24315;
        var v21313;
        var v24316 = B$$3.iframe;
        if (v24316) {
          var v29994 = o$$26("iframe");
          n$$101 = v29994[0];
          var v29995 = u$$16 in n$$101;
          if (v29995) {
            introspect(JAM.policy.p2) {
              n$$101[u$$16] = 0;
            }
          }
          var v29741 = f$$186 in n$$101;
          if (v29741) {
            introspect(JAM.policy.p2) {
              n$$101[f$$186] = "true";
            }
          }
          var v29346 = B$$3.scrolling;
          var v29742 = !v29346;
          if (v29742) {
            n$$101.scrolling = "no";
          }
          introspect(JAM.policy.p3) {
            var v29743 = e$$347(n$$101)
          }
          var v29996 = B$$3.href;
          var v30227 = new Date;
          introspect(JAM.policy.p3) {
            var v29997 = v30227.getTime()
          }
          var v29998 = Z$$2 + "Iframe";
          var v29999 = !0;
          var v30000 = !0;
          var v30001 = !0;
          var v29744 = {src:v29996, name:v29997, "class":v29998, allowFullScreen:v29999, webkitAllowFullScreen:v30000, mozallowfullscreen:v30001};
          introspect(JAM.policy.p3) {
            var v29347 = v29743.attr(v29744)
          }
          introspect(JAM.policy.p3) {
            var v28722 = v29347.one("load", h$$165)
          }
          introspect(JAM.policy.p3) {
            v28722.appendTo(H$$3);
          }
          introspect(JAM.policy.p3) {
            lt.one(ht, v1874);
          }
          var v26356 = B$$3.fastIframe;
          if (v26356) {
            introspect(JAM.policy.p3) {
              var v27790 = e$$347(n$$101)
            }
            introspect(JAM.policy.p3) {
              v26356 = v27790.trigger("load");
            }
          }
          v21313 = v26356;
        } else {
          introspect(JAM.policy.p3) {
            v21313 = h$$165();
          }
        }
        v21313;
        var v15560;
        var v24317 = B$$3.transition;
        var v21314 = "fade" === v24317;
        if (v21314) {
          introspect(JAM.policy.p3) {
            v15560 = g$$199.fadeTo(d$$406, 1, i$$224);
          }
        } else {
          v15560 = i$$224();
        }
        v15560;
      }
      return;
    }
    if (U$$2) {
      var a$$691;
      var v3215;
      var v15561 = B$$3.transition;
      var v9841 = "none" === v15561;
      if (v9841) {
        v3215 = 0;
      } else {
        v3215 = B$$3.speed;
      }
      var d$$406 = v3215;
      introspect(JAM.policy.p3) {
        var v27791 = H$$3.empty()
      }
      introspect(JAM.policy.p3) {
        v27791.remove();
      }
      var v27792 = o$$26(st$$2, "LoadedContent");
      introspect(JAM.policy.p3) {
        H$$3 = v27792.append(i$$223);
      }
      introspect(JAM.policy.p3) {
        var v29348 = H$$3.hide()
      }
      introspect(JAM.policy.p3) {
        var v29349 = W$$2.show()
      }
      introspect(JAM.policy.p3) {
        var v28723 = v29348.appendTo(v29349)
      }
      var v30228 = B$$3;
      var v30396 = B$$3.w;
      var v30542 = !v30396;
      if (v30542) {
        introspect(JAM.policy.p3) {
          v30396 = H$$3.width();
        }
      }
      v30228.w = v30396;
      var v30229;
      var v30543 = B$$3.mw;
      if (v30543) {
        var v30638 = B$$3.mw;
        var v30639 = B$$3.w;
        v30543 = v30638 < v30639;
      }
      var v30397 = v30543;
      if (v30397) {
        v30229 = B$$3.mw;
      } else {
        v30229 = B$$3.w;
      }
      B$$3.w = v30229;
      var v29350 = B$$3.w;
      var v29745;
      var v30002 = B$$3.scrolling;
      if (v30002) {
        v29745 = "auto";
      } else {
        v29745 = "hidden";
      }
      var v29351 = v29745;
      var v28724 = {width:v29350, overflow:v29351};
      introspect(JAM.policy.p3) {
        var v27793 = v28723.css(v28724)
      }
      var v30003 = B$$3;
      var v30230 = B$$3.h;
      var v30398 = !v30230;
      if (v30398) {
        introspect(JAM.policy.p3) {
          v30230 = H$$3.height();
        }
      }
      v30003.h = v30230;
      var v30004;
      var v30399 = B$$3.mh;
      if (v30399) {
        var v30544 = B$$3.mh;
        var v30545 = B$$3.h;
        v30399 = v30544 < v30545;
      }
      var v30231 = v30399;
      if (v30231) {
        v30004 = B$$3.mh;
      } else {
        v30004 = B$$3.h;
      }
      B$$3.h = v30004;
      var v28725 = B$$3.h;
      var v27794 = {height:v28725};
      introspect(JAM.policy.p3) {
        var v26357 = v27793.css(v27794)
      }
      introspect(JAM.policy.p3) {
        v26357.prependTo(y$$55);
      }
      introspect(JAM.policy.p3) {
        W$$2.hide();
      }
      introspect(JAM.policy.p3) {
        var v21315 = e$$347(j$$109)
      }
      var v21316 = {"float":"none"};
      introspect(JAM.policy.p3) {
        v21315.css(v21316);
      }
      a$$691 = v1875;
      var v9842;
      var v21317 = B$$3.transition;
      var v15562 = "fade" === v21317;
      if (v15562) {
        introspect(JAM.policy.p3) {
          v9842 = g$$199.fadeTo(d$$406, 0, v1876);
        }
      } else {
        introspect(JAM.policy.p3) {
          v9842 = Q$$2.position(d$$406, a$$691);
        }
      }
      v9842;
    }
    return;
  }
  function v1871(e$$357) {
    var t$$29;
    if (U$$2) {
      e$$357 = e$$357 || {};
      var v30005 = e$$357.width;
      if (v30005) {
        var v30232 = B$$3;
        var v30640 = e$$357.width;
        var v30546 = h$$162(v30640, "x");
        var v30400 = v30546 - A$$4;
        v30232.w = v30400 - _$$3;
      }
      var v29746 = e$$357.innerWidth;
      if (v29746) {
        var v30006 = B$$3;
        var v30233 = e$$357.innerWidth;
        var v30949 = h$$162(v30233, "x");
        v30006.w = v30949;
      }
      var v29747 = B$$3.w;
      var v29352 = {width:v29747};
      introspect(JAM.policy.p3) {
        H$$3.css(v29352);
      }
      var v28726 = e$$357.height;
      if (v28726) {
        var v29353 = B$$3;
        var v30234 = e$$357.height;
        var v30007 = h$$162(v30234, "y");
        var v29748 = v30007 - D$$3;
        v29353.h = v29748 - O$$2;
      }
      var v27795 = e$$357.innerHeight;
      if (v27795) {
        var v28727 = B$$3;
        var v29354 = e$$357.innerHeight;
        var v30950 = h$$162(v29354, "y");
        v28727.h = v30950;
      }
      var v27796 = e$$357.innerHeight;
      var v28728 = !v27796;
      if (v28728) {
        v27796 = e$$357.height;
      }
      var v26358 = v27796;
      var v27797 = !v26358;
      if (v27797) {
        introspect(JAM.policy.p3) {
          t$$29 = H$$3.scrollTop();
        }
        var v29355 = {height:"auto"};
        introspect(JAM.policy.p3) {
          H$$3.css(v29355);
        }
        var v28729 = B$$3;
        introspect(JAM.policy.p3) {
          var v30951 = H$$3.height()
        }
        v28729.h = v30951;
      }
      var v26359 = B$$3.h;
      var v24318 = {height:v26359};
      introspect(JAM.policy.p3) {
        H$$3.css(v24318);
      }
      if (t$$29) {
        introspect(JAM.policy.p3) {
          H$$3.scrollTop(t$$29);
        }
      }
      var v21318;
      var v26360 = B$$3.transition;
      var v24319 = "none" === v26360;
      if (v24319) {
        v21318 = 0;
      } else {
        v21318 = B$$3.speed;
      }
      var v15563 = v21318;
      introspect(JAM.policy.p3) {
        Q$$2.position(v15563);
      }
    }
    return;
  }
  function v1870(t$$28, i$$222) {
    function v1869() {
      function v1868() {
        var v3216 = "resize." + Z$$2;
        var v3217 = Q$$2.position;
        introspect(JAM.policy.p3) {
          E$$3.bind(v3216, v3217);
        }
        return;
      }
      o$$32();
      $$$4 = !1;
      var v26361 = v$$11[0];
      var v24320 = v26361.style;
      var v28730 = B$$3.w;
      var v27798 = v28730 + A$$4;
      var v26362 = v27798 + _$$3;
      v24320.width = v26362 + "px";
      var v24321 = v$$11[0];
      var v21319 = v24321.style;
      var v27799 = B$$3.h;
      var v26363 = v27799 + D$$3;
      var v24322 = v26363 + O$$2;
      v21319.height = v24322 + "px";
      var v15564 = B$$3.reposition;
      if (v15564) {
        setTimeout(v1868, 1);
      }
      if (i$$222) {
        introspect(JAM.policy.p3) {
          i$$222();
        }
      }
      return;
    }
    function v1867(e$$356) {
      var v3218;
      var v15565 = r$$26[e$$356];
      var v15566 = dt[e$$356];
      var v9843 = v15565 !== v15566;
      if (v9843) {
        u$$15 = t$$28;
        v3218 = void 0;
      } else {
        v3218 = void 0;
      }
      return v3218;
    }
    function o$$32() {
      var v15567 = x$$74[0];
      var v9844 = v15567.style;
      var v21320 = C$$3[0];
      var v15568 = v21320.style;
      var v24323 = y$$55[0];
      var v21321 = v24323.style;
      var v29356 = g$$199[0];
      var v28731 = v29356.style;
      var v27800 = v28731.width;
      var v26364 = parseInt(v27800, 10);
      var v24324 = v26364 - _$$3;
      v9844.width = v15568.width = v21321.width = v24324 + "px";
      var v15569 = y$$55[0];
      var v9845 = v15569.style;
      var v21322 = b$$679[0];
      var v15570 = v21322.style;
      var v24325 = T$$4[0];
      var v21323 = v24325.style;
      var v29357 = g$$199[0];
      var v28732 = v29357.style;
      var v27801 = v28732.height;
      var v26365 = parseInt(v27801, 10);
      var v24326 = v26365 - O$$2;
      v9845.height = v15570.height = v21323.height = v24326 + "px";
      return;
    }
    var r$$26;
    var l$$83;
    var s$$32;
    var a$$690 = 0;
    var d$$405 = 0;
    introspect(JAM.policy.p3) {
      var c$$546 = g$$199.offset()
    }
    var v30235 = "resize." + Z$$2;
    introspect(JAM.policy.p3) {
      E$$3.unbind(v30235);
    }
    var v30236 = {top:-9E4, left:-9E4};
    introspect(JAM.policy.p3) {
      g$$199.css(v30236);
    }
    introspect(JAM.policy.p3) {
      l$$83 = E$$3.scrollTop();
    }
    introspect(JAM.policy.p3) {
      s$$32 = E$$3.scrollLeft();
    }
    var v29358;
    var v29749 = B$$3.fixed;
    if (v29749) {
      var v30401 = c$$546.top;
      c$$546.top = v30401 - l$$83;
      var v30402 = c$$546.left;
      c$$546.left = v30402 - s$$32;
      var v30008 = {position:"fixed"};
      introspect(JAM.policy.p3) {
        v29358 = g$$199.css(v30008);
      }
    } else {
      a$$690 = l$$83;
      d$$405 = s$$32;
      var v30009 = {position:"absolute"};
      introspect(JAM.policy.p3) {
        v29358 = g$$199.css(v30009);
      }
    }
    v29358;
    var v29359 = d$$405;
    var v29750;
    var v30237 = B$$3.right;
    var v30238 = !1;
    var v30012 = v30237 !== v30238;
    if (v30012) {
      introspect(JAM.policy.p3) {
        var v30641 = E$$3.width()
      }
      var v30642 = B$$3.w;
      var v30547 = v30641 - v30642;
      var v30403 = v30547 - A$$4;
      var v30239 = v30403 - _$$3;
      var v30404 = B$$3.right;
      var v30240 = h$$162(v30404, "x");
      var v30010 = v30239 - v30240;
      introspect(JAM.policy.p3) {
        v29750 = Math.max(v30010, 0);
      }
    } else {
      var v30011;
      var v30405 = B$$3.left;
      var v30406 = !1;
      var v30243 = v30405 !== v30406;
      if (v30243) {
        var v30241 = B$$3.left;
        v30011 = h$$162(v30241, "x");
      } else {
        introspect(JAM.policy.p3) {
          var v30747 = E$$3.width()
        }
        var v30748 = B$$3.w;
        var v30700 = v30747 - v30748;
        var v30643 = v30700 - A$$4;
        var v30548 = v30643 - _$$3;
        introspect(JAM.policy.p3) {
          var v30407 = Math.max(v30548, 0)
        }
        var v30242 = v30407 / 2;
        introspect(JAM.policy.p3) {
          v30011 = Math.round(v30242);
        }
      }
      v29750 = v30011;
    }
    var v29360 = v29750;
    d$$405 = v29359 + v29360;
    var v28733 = a$$690;
    var v29361;
    var v30013 = B$$3.bottom;
    var v30014 = !1;
    var v29753 = v30013 !== v30014;
    if (v29753) {
      var v30549 = n$$96();
      var v30550 = B$$3.h;
      var v30408 = v30549 - v30550;
      var v30244 = v30408 - D$$3;
      var v30015 = v30244 - O$$2;
      var v30245 = B$$3.bottom;
      var v30016 = h$$162(v30245, "y");
      var v29751 = v30015 - v30016;
      introspect(JAM.policy.p3) {
        v29361 = Math.max(v29751, 0);
      }
    } else {
      var v29752;
      var v30246 = B$$3.top;
      var v30247 = !1;
      var v30019 = v30246 !== v30247;
      if (v30019) {
        var v30017 = B$$3.top;
        v29752 = h$$162(v30017, "y");
      } else {
        var v30701 = n$$96();
        var v30702 = B$$3.h;
        var v30644 = v30701 - v30702;
        var v30551 = v30644 - D$$3;
        var v30409 = v30551 - O$$2;
        introspect(JAM.policy.p3) {
          var v30248 = Math.max(v30409, 0)
        }
        var v30018 = v30248 / 2;
        introspect(JAM.policy.p3) {
          v29752 = Math.round(v30018);
        }
      }
      v29361 = v29752;
    }
    var v28734 = v29361;
    a$$690 = v28733 + v28734;
    var v27802 = c$$546.top;
    var v27803 = c$$546.left;
    var v26366 = {top:v27802, left:v27803, visibility:"visible"};
    introspect(JAM.policy.p3) {
      g$$199.css(v26366);
    }
    var v26367 = v$$11[0];
    var v24327 = v26367.style;
    var v27804 = v$$11[0];
    var v26368 = v27804.style;
    v24327.width = v26368.height = "9999px";
    var v26369 = B$$3.w;
    var v24328 = v26369 + A$$4;
    var v21324 = v24328 + _$$3;
    var v26370 = B$$3.h;
    var v24329 = v26370 + D$$3;
    var v21325 = v24329 + O$$2;
    r$$26 = {width:v21324, height:v21325, top:a$$690, left:d$$405};
    var v3219 = t$$28;
    if (v3219) {
      var u$$15 = 0;
      introspect(JAM.policy.p3) {
        e$$347.each(r$$26, v1867);
      }
      t$$28 = u$$15;
    }
    dt = r$$26;
    var v21326 = !t$$28;
    if (v21326) {
      introspect(JAM.policy.p3) {
        g$$199.css(r$$26);
      }
    }
    introspect(JAM.policy.p3) {
      var v9846 = g$$199.dequeue()
    }
    var v15571 = t$$28 || 0;
    var v9847 = {duration:v15571, complete:v1869, step:o$$32};
    introspect(JAM.policy.p3) {
      v9846.animate(r$$26, v9847);
    }
    return;
  }
  function v1866(t$$27, i$$221) {
    function v1865() {
      introspect(JAM.policy.p3) {
        var v15572 = e$$347.data(this, Y$$2)
      }
      var v21327 = !v15572;
      if (v21327) {
        v15572 = X$$2;
      }
      var v9848 = v15572;
      introspect(JAM.policy.p3) {
        var v3220 = e$$347.extend({}, v9848, t$$27)
      }
      introspect(JAM.policy.p3) {
        e$$347.data(this, Y$$2, v3220);
      }
      return;
    }
    var o$$31 = this;
    t$$27 = t$$27 || {};
    f$$184();
    var v3223 = p$$50();
    if (v3223) {
      introspect(JAM.policy.p3) {
        var v3222 = e$$347.isFunction(o$$31)
      }
      if (v3222) {
        introspect(JAM.policy.p3) {
          o$$31 = e$$347("<a/>");
        }
        t$$27.open = !0;
      } else {
        var v9849 = o$$31[0];
        var v3221 = !v9849;
        if (v3221) {
          return o$$31;
        }
      }
      if (i$$221) {
        t$$27.onComplete = i$$221;
      }
      introspect(JAM.policy.p3) {
        var v15573 = o$$31.each(v1865)
      }
      introspect(JAM.policy.p3) {
        v15573.addClass(et$$1);
      }
      var v24330 = t$$27.open;
      introspect(JAM.policy.p3) {
        var v21328 = e$$347.isFunction(v24330)
      }
      if (v21328) {
        var v24331 = t$$27.open;
        introspect(JAM.policy.p3) {
          v21328 = v24331.call(o$$31);
        }
      }
      var v15574 = v21328;
      var v21329 = !v15574;
      if (v21329) {
        v15574 = t$$27.open;
      }
      var v9850 = v15574;
      if (v9850) {
        var v15575 = o$$31[0];
        u$$13(v15575);
      }
    }
    return o$$31;
  }
  function v1864() {
    function v1863() {
      var v3224;
      if (r$$25) {
        var v9851 = B$$3.slideshow;
        var v15576 = !v9851;
        if (v15576) {
          introspect(JAM.policy.p3) {
            lt.unbind(nt, n$$99);
          }
          v9851 = n$$99();
        }
        v3224 = v9851;
      } else {
        var v15577 = B$$3.slideshow;
        if (v15577) {
          v15577 = k$$76[1];
        }
        var v9852 = v15577;
        if (v9852) {
          r$$25 = !0;
          introspect(JAM.policy.p3) {
            lt.one(nt, n$$99);
          }
          var v24332;
          var v26371 = B$$3.slideshowAuto;
          if (v26371) {
            v24332 = i$$220();
          } else {
            v24332 = o$$30();
          }
          v24332;
          introspect(JAM.policy.p3) {
            v9852 = M$$2.show();
          }
        }
        v3224 = v9852;
      }
      v3224;
      return;
    }
    function e$$355() {
      clearTimeout(h$$163);
      return;
    }
    function t$$26() {
      var v9853 = B$$3.loop;
      var v15579 = !v9853;
      if (v15579) {
        var v15578 = z$$7 + 1;
        v9853 = k$$76[v15578];
      }
      var v3225 = v9853;
      if (v3225) {
        e$$355();
        var v15580 = Q$$2.next;
        var v15581 = B$$3.slideshowSpeed;
        h$$163 = setTimeout(v15580, v15581);
      }
      return;
    }
    function i$$220() {
      var v24333 = B$$3.slideshowStop;
      introspect(JAM.policy.p3) {
        var v21330 = M$$2.html(v24333)
      }
      introspect(JAM.policy.p3) {
        var v15582 = v21330.unbind(s$$31)
      }
      introspect(JAM.policy.p3) {
        v15582.one(s$$31, o$$30);
      }
      introspect(JAM.policy.p3) {
        var v15583 = lt.bind(ot, t$$26)
      }
      introspect(JAM.policy.p3) {
        v15583.bind(it, e$$355);
      }
      var v15584 = l$$82 + "off";
      introspect(JAM.policy.p3) {
        var v9854 = g$$199.removeClass(v15584)
      }
      var v9855 = l$$82 + "on";
      introspect(JAM.policy.p3) {
        v9854.addClass(v9855);
      }
      return;
    }
    function o$$30() {
      function v1862() {
        introspect(JAM.policy.p3) {
          Q$$2.next();
        }
        i$$220();
        return;
      }
      e$$355();
      introspect(JAM.policy.p3) {
        var v21331 = lt.unbind(ot, t$$26)
      }
      introspect(JAM.policy.p3) {
        v21331.unbind(it, e$$355);
      }
      var v24334 = B$$3.slideshowStart;
      introspect(JAM.policy.p3) {
        var v21332 = M$$2.html(v24334)
      }
      introspect(JAM.policy.p3) {
        var v15585 = v21332.unbind(s$$31)
      }
      introspect(JAM.policy.p3) {
        v15585.one(s$$31, v1862);
      }
      var v15586 = l$$82 + "on";
      introspect(JAM.policy.p3) {
        var v9856 = g$$199.removeClass(v15586)
      }
      var v9857 = l$$82 + "off";
      introspect(JAM.policy.p3) {
        v9856.addClass(v9857);
      }
      return;
    }
    function n$$99() {
      r$$25 = !1;
      introspect(JAM.policy.p3) {
        M$$2.hide();
      }
      e$$355();
      introspect(JAM.policy.p3) {
        var v15587 = lt.unbind(ot, t$$26)
      }
      introspect(JAM.policy.p3) {
        v15587.unbind(it, e$$355);
      }
      var v21333 = l$$82 + "off ";
      var v15588 = v21333 + l$$82;
      var v9858 = v15588 + "on";
      introspect(JAM.policy.p3) {
        g$$199.removeClass(v9858);
      }
      return;
    }
    var r$$25;
    var h$$163;
    var l$$82 = Z$$2 + "Slideshow_";
    var s$$31 = "click." + Z$$2;
    return v1863;
  }
  function o$$26(i$$211, o$$27, n$$97) {
    introspect(JAM.policy.p3) {
      var r$$23 = t$$15.createElement(i$$211)
    }
    if (o$$27) {
      r$$23.id = Z$$2 + o$$27;
    }
    if (n$$97) {
      var v21334 = r$$23.style;
      v21334.cssText = n$$97;
    }
    introspect(JAM.policy.p3) {
      return e$$347(r$$23);
    }
  }
  function n$$96() {
    var v3226;
    var v9860 = i$$210.innerHeight;
    if (v9860) {
      v3226 = i$$210.innerHeight;
    } else {
      introspect(JAM.policy.p3) {
        var v9859 = e$$347(i$$210)
      }
      introspect(JAM.policy.p3) {
        v3226 = v9859.height();
      }
    }
    return v3226;
  }
  function r$$22(e$$348) {
    var t$$16 = k$$76.length;
    var v3227 = z$$7 + e$$348;
    var i$$212 = v3227 % t$$16;
    var v3228;
    var v9861 = 0 > i$$212;
    if (v9861) {
      v3228 = t$$16 + i$$212;
    } else {
      v3228 = i$$212;
    }
    return v3228;
  }
  function h$$162(e$$349, t$$17) {
    var v15589;
    introspect(JAM.policy.p3) {
      var v21336 = /%/.test(e$$349)
    }
    if (v21336) {
      var v24335;
      var v26372 = "x" === t$$17;
      if (v26372) {
        introspect(JAM.policy.p3) {
          v24335 = E$$3.width();
        }
      } else {
        v24335 = n$$96();
      }
      var v21335 = v24335;
      v15589 = v21335 / 100;
    } else {
      v15589 = 1;
    }
    var v9862 = v15589;
    var v9863 = parseInt(e$$349, 10);
    var v3229 = v9862 * v9863;
    introspect(JAM.policy.p3) {
      return Math.round(v3229);
    }
  }
  function s$$30(e$$351, t$$19) {
    var v3230;
    var v15590 = e$$351.retinaUrl;
    if (v15590) {
      var v21337 = i$$210.devicePixelRatio;
      v15590 = v21337 > 1;
    }
    var v9866 = v15590;
    if (v9866) {
      var v9864 = e$$351.photoRegex;
      var v9865 = e$$351.retinaSuffix;
      introspect(JAM.policy.p3) {
        v3230 = t$$19.replace(v9864, v9865);
      }
    } else {
      v3230 = t$$19;
    }
    return v3230;
  }
  function a$$688(e$$352) {
    var v15591 = g$$199[0];
    var v9867 = "contains" in v15591;
    if (v9867) {
      var v21338 = g$$199[0];
      var v21339 = e$$352.target;
      introspect(JAM.policy.p3) {
        var v15592 = v21338.contains(v21339)
      }
      v9867 = !v15592;
    }
    var v3231 = v9867;
    if (v3231) {
      introspect(JAM.policy.p3) {
        e$$352.stopPropagation();
      }
      introspect(JAM.policy.p3) {
        g$$199.focus();
      }
    }
    return;
  }
  function d$$404() {
    var t$$20;
    introspect(JAM.policy.p3) {
      var i$$213 = e$$347.data(N$$2, Y$$2)
    }
    var v3232;
    var v9868 = null == i$$213;
    if (v9868) {
      introspect(JAM.policy.p3) {
        B$$3 = e$$347.extend({}, X$$2);
      }
      var v21340 = console;
      if (v21340) {
        v21340 = console.log;
      }
      var v15593 = v21340;
      if (v15593) {
        introspect(JAM.policy.p3) {
          v15593 = console.log("Error: cboxElement missing settings object");
        }
      }
      v3232 = v15593;
    } else {
      introspect(JAM.policy.p3) {
        v3232 = B$$3 = e$$347.extend({}, i$$213);
      }
    }
    v3232;
    for (t$$20 in B$$3) {
      var v15594 = B$$3[t$$20];
      introspect(JAM.policy.p3) {
        var v9869 = e$$347.isFunction(v15594)
      }
      if (v9869) {
        introspect(JAM.policy.p3) {
          var v15595 = t$$20.slice(0, 2)
        }
        v9869 = "on" !== v15595;
      }
      var v3233 = v9869;
      if (v3233) {
        var v9870 = B$$3;
        var v15596 = B$$3[t$$20];
        introspect(JAM.policy.p3) {
          var v30952 = v15596.call(N$$2)
        }
        introspect(JAM.policy.p2) {
          v9870[t$$20] = v30952;
        }
      }
    }
    var v21341 = B$$3;
    var v27805 = B$$3.rel;
    var v28735 = !v27805;
    if (v28735) {
      v27805 = N$$2.rel;
    }
    var v26373 = v27805;
    var v27807 = !v26373;
    if (v27807) {
      introspect(JAM.policy.p3) {
        var v27806 = e$$347(N$$2)
      }
      introspect(JAM.policy.p3) {
        v26373 = v27806.data("rel");
      }
    }
    var v24336 = v26373;
    var v26374 = !v24336;
    if (v26374) {
      v24336 = "nofollow";
    }
    v21341.rel = v24336;
    var v21342 = B$$3;
    var v24337 = B$$3.href;
    var v26376 = !v24337;
    if (v26376) {
      introspect(JAM.policy.p3) {
        var v26375 = e$$347(N$$2)
      }
      introspect(JAM.policy.p3) {
        v24337 = v26375.attr("href");
      }
    }
    v21342.href = v24337;
    var v15597 = B$$3.title;
    var v21343 = !v15597;
    if (v21343) {
      v15597 = N$$2.title;
    }
    B$$3.title = v15597;
    var v21344 = B$$3.href;
    var v15598 = typeof v21344;
    var v9871 = "string" == v15598;
    if (v9871) {
      var v15599 = B$$3;
      var v21345 = B$$3.href;
      introspect(JAM.policy.p3) {
        var v30953 = e$$347.trim(v21345)
      }
      v15599.href = v30953;
    }
    return;
  }
  function c$$545(i$$214, o$$28) {
    introspect(JAM.policy.p3) {
      var v15600 = e$$347(t$$15)
    }
    introspect(JAM.policy.p3) {
      v15600.trigger(i$$214);
    }
    introspect(JAM.policy.p3) {
      lt.triggerHandler(i$$214);
    }
    introspect(JAM.policy.p3) {
      var v9872 = e$$347.isFunction(o$$28)
    }
    if (v9872) {
      introspect(JAM.policy.p3) {
        o$$28.call(N$$2);
      }
    }
    return;
  }
  function u$$13(i$$215) {
    function v1846() {
      introspect(JAM.policy.p3) {
        var v3234 = e$$347(N$$2)
      }
      introspect(JAM.policy.p3) {
        v3234.focus();
      }
      return;
    }
    function v1845() {
      var v3235 = !0;
      introspect(JAM.policy.p3) {
        t$$15.removeEventListener("focus", a$$688, v3235);
      }
      return;
    }
    function v1844() {
      var t$$21;
      introspect(JAM.policy.p3) {
        var i$$216 = e$$347.data(this, Y$$2)
      }
      if (i$$216) {
        introspect(JAM.policy.p3) {
          var v24338 = e$$347(this)
        }
        introspect(JAM.policy.p3) {
          var v21346 = v24338.data("rel")
        }
        var v24339 = !v21346;
        if (v24339) {
          v21346 = i$$216.rel;
        }
        var v15601 = v21346;
        var v21347 = !v15601;
        if (v21347) {
          v15601 = this.rel;
        }
        t$$21 = v15601;
      }
      var v9873 = B$$3.rel;
      return t$$21 === v9873;
    }
    var v9874 = !q$$21;
    if (v9874) {
      N$$2 = i$$215;
      d$$404();
      introspect(JAM.policy.p3) {
        k$$76 = e$$347(N$$2);
      }
      z$$7 = 0;
      var v30020 = B$$3.rel;
      var v29754 = "nofollow" !== v30020;
      if (v29754) {
        var v30552 = "." + et$$1;
        introspect(JAM.policy.p3) {
          var v30410 = e$$347(v30552)
        }
        introspect(JAM.policy.p3) {
          k$$76 = v30410.filter(v1844);
        }
        introspect(JAM.policy.p3) {
          z$$7 = k$$76.index(N$$2);
        }
        var v30249 = -1 === z$$7;
        if (v30249) {
          introspect(JAM.policy.p3) {
            k$$76 = k$$76.add(N$$2);
          }
          var v30553 = k$$76.length;
          z$$7 = v30553 - 1;
        }
      }
      var v30250 = B$$3.opacity;
      var v30021 = parseFloat(v30250);
      var v30251;
      var v30411 = B$$3.overlayClose;
      if (v30411) {
        v30251 = "pointer";
      } else {
        v30251 = "auto";
      }
      var v30022 = v30251;
      var v29755 = {opacity:v30021, cursor:v30022, visibility:"visible"};
      introspect(JAM.policy.p3) {
        var v29362 = w$$18.css(v29755)
      }
      introspect(JAM.policy.p3) {
        v29362.show();
      }
      if (J$$3) {
        introspect(JAM.policy.p3) {
          var v29363 = g$$199.add(w$$18)
        }
        introspect(JAM.policy.p3) {
          v29363.removeClass(J$$3);
        }
      }
      var v27808 = B$$3.className;
      if (v27808) {
        introspect(JAM.policy.p3) {
          var v28736 = g$$199.add(w$$18)
        }
        var v28737 = B$$3.className;
        introspect(JAM.policy.p3) {
          v28736.addClass(v28737);
        }
      }
      J$$3 = B$$3.className;
      var v24340;
      var v26378 = B$$3.closeButton;
      if (v26378) {
        var v27809 = B$$3.close;
        introspect(JAM.policy.p3) {
          var v26377 = K$$2.html(v27809)
        }
        introspect(JAM.policy.p3) {
          v24340 = v26377.appendTo(y$$55);
        }
      } else {
        introspect(JAM.policy.p3) {
          v24340 = K$$2.appendTo("<div/>");
        }
      }
      v24340;
      var v24341 = !U$$2;
      if (v24341) {
        U$$2 = $$$4 = !0;
        var v30842 = {visibility:"hidden", display:"block"};
        introspect(JAM.policy.p3) {
          g$$199.css(v30842);
        }
        H$$3 = o$$26(st$$2, "LoadedContent", "width:0; height:0; overflow:hidden");
        var v30826 = {width:"", height:""};
        introspect(JAM.policy.p3) {
          var v30802 = y$$55.css(v30826)
        }
        introspect(JAM.policy.p3) {
          v30802.append(H$$3);
        }
        introspect(JAM.policy.p3) {
          var v30827 = x$$74.height()
        }
        introspect(JAM.policy.p3) {
          var v30828 = C$$3.height()
        }
        var v30803 = v30827 + v30828;
        var v30829 = !0;
        introspect(JAM.policy.p3) {
          var v30804 = y$$55.outerHeight(v30829)
        }
        var v30777 = v30803 + v30804;
        introspect(JAM.policy.p3) {
          var v30778 = y$$55.height()
        }
        O$$2 = v30777 - v30778;
        introspect(JAM.policy.p3) {
          var v30805 = b$$679.width()
        }
        introspect(JAM.policy.p3) {
          var v30806 = T$$4.width()
        }
        var v30779 = v30805 + v30806;
        var v30807 = !0;
        introspect(JAM.policy.p3) {
          var v30780 = y$$55.outerWidth(v30807)
        }
        var v30749 = v30779 + v30780;
        introspect(JAM.policy.p3) {
          var v30750 = y$$55.width()
        }
        _$$3 = v30749 - v30750;
        var v30703 = !0;
        introspect(JAM.policy.p3) {
          D$$3 = H$$3.outerHeight(v30703);
        }
        var v30645 = !0;
        introspect(JAM.policy.p3) {
          A$$4 = H$$3.outerWidth(v30645);
        }
        var v30554 = B$$3;
        var v30646 = B$$3.initialWidth;
        var v30954 = h$$162(v30646, "x");
        v30554.w = v30954;
        var v30412 = B$$3;
        var v30555 = B$$3.initialHeight;
        var v30955 = h$$162(v30555, "y");
        v30412.h = v30955;
        var v30413 = B$$3.h;
        var v30252 = {width:"", height:v30413};
        introspect(JAM.policy.p3) {
          H$$3.css(v30252);
        }
        introspect(JAM.policy.p3) {
          Q$$2.position();
        }
        var v29756 = B$$3.onOpen;
        c$$545(tt$$1, v29756);
        introspect(JAM.policy.p3) {
          var v29364 = P$$2.add(L$$2)
        }
        introspect(JAM.policy.p3) {
          v29364.hide();
        }
        introspect(JAM.policy.p3) {
          g$$199.focus();
        }
        var v28738 = B$$3.trapFocus;
        if (v28738) {
          v28738 = t$$15.addEventListener;
        }
        var v27810 = v28738;
        if (v27810) {
          var v29365 = !0;
          introspect(JAM.policy.p3) {
            t$$15.addEventListener("focus", a$$688, v29365);
          }
          introspect(JAM.policy.p3) {
            lt.one(rt$$3, v1845);
          }
        }
        var v26379 = B$$3.returnFocus;
        if (v26379) {
          introspect(JAM.policy.p3) {
            lt.one(rt$$3, v1846);
          }
        }
      }
      m$$50();
    }
    return;
  }
  function f$$184() {
    var v9875 = !g$$199;
    if (v9875) {
      v9875 = t$$15.body;
    }
    var v3236 = v9875;
    if (v3236) {
      V$$2 = !1;
      introspect(JAM.policy.p3) {
        E$$3 = e$$347(i$$210);
      }
      var v30414 = o$$26(st$$2);
      var v30647;
      var v30781 = e$$347.support;
      var v30751 = v30781.opacity;
      var v30752 = !1;
      var v30704 = v30751 === v30752;
      if (v30704) {
        v30647 = Z$$2 + "IE";
      } else {
        v30647 = "";
      }
      var v30556 = v30647;
      var v30415 = {id:Y$$2, "class":v30556, role:"dialog", tabindex:"-1"};
      introspect(JAM.policy.p3) {
        var v30253 = v30414.attr(v30415)
      }
      introspect(JAM.policy.p3) {
        g$$199 = v30253.hide();
      }
      var v30023 = o$$26(st$$2, "Overlay");
      introspect(JAM.policy.p3) {
        w$$18 = v30023.hide();
      }
      var v30254 = o$$26(st$$2, "LoadingOverlay");
      var v30024 = v30254[0];
      var v30255 = o$$26(st$$2, "LoadingGraphic");
      var v30025 = v30255[0];
      var v29757 = [v30024, v30025];
      introspect(JAM.policy.p3) {
        F$$3 = e$$347(v29757);
      }
      v$$11 = o$$26(st$$2, "Wrapper");
      var v28739 = o$$26(st$$2, "Content");
      var v28740 = L$$2 = o$$26(st$$2, "Title");
      var v28741 = S$$2 = o$$26(st$$2, "Current");
      introspect(JAM.policy.p3) {
        var v29366 = e$$347('<button type="button"/>')
      }
      var v29758 = Z$$2 + "Previous";
      var v29367 = {id:v29758};
      introspect(JAM.policy.p3) {
        var v28742 = I$$3 = v29366.attr(v29367)
      }
      introspect(JAM.policy.p3) {
        var v29368 = e$$347('<button type="button"/>')
      }
      var v29759 = Z$$2 + "Next";
      var v29369 = {id:v29759};
      introspect(JAM.policy.p3) {
        var v28743 = R$$2 = v29368.attr(v29369)
      }
      var v28744 = M$$2 = o$$26("button", "Slideshow");
      introspect(JAM.policy.p3) {
        y$$55 = v28739.append(v28740, v28741, v28742, v28743, v28744, F$$3);
      }
      introspect(JAM.policy.p3) {
        var v27811 = e$$347('<button type="button"/>')
      }
      var v28745 = Z$$2 + "Close";
      var v27812 = {id:v28745};
      introspect(JAM.policy.p3) {
        K$$2 = v27811.attr(v27812);
      }
      var v29370 = o$$26(st$$2);
      var v29371 = o$$26(st$$2, "TopLeft");
      var v29372 = x$$74 = o$$26(st$$2, "TopCenter");
      var v29373 = o$$26(st$$2, "TopRight");
      introspect(JAM.policy.p3) {
        var v28746 = v29370.append(v29371, v29372, v29373)
      }
      var v29760 = !1;
      var v29374 = o$$26(st$$2, v29760, "clear:left");
      var v29375 = b$$679 = o$$26(st$$2, "MiddleLeft");
      var v29376 = T$$4 = o$$26(st$$2, "MiddleRight");
      introspect(JAM.policy.p3) {
        var v28747 = v29374.append(v29375, y$$55, v29376)
      }
      var v29761 = !1;
      var v29377 = o$$26(st$$2, v29761, "clear:left");
      var v29378 = o$$26(st$$2, "BottomLeft");
      var v29379 = C$$3 = o$$26(st$$2, "BottomCenter");
      var v29380 = o$$26(st$$2, "BottomRight");
      introspect(JAM.policy.p3) {
        var v28748 = v29377.append(v29378, v29379, v29380)
      }
      introspect(JAM.policy.p3) {
        var v27813 = v$$11.append(v28746, v28747, v28748)
      }
      introspect(JAM.policy.p3) {
        var v26380 = v27813.find("div div")
      }
      var v26381 = {"float":"left"};
      introspect(JAM.policy.p3) {
        v26380.css(v26381);
      }
      var v24342 = !1;
      W$$2 = o$$26(st$$2, v24342, "position:absolute; width:9999px; visibility:hidden; display:none; max-width:none;");
      introspect(JAM.policy.p3) {
        var v24343 = R$$2.add(I$$3)
      }
      introspect(JAM.policy.p3) {
        var v21348 = v24343.add(S$$2)
      }
      introspect(JAM.policy.p3) {
        P$$2 = v21348.add(M$$2);
      }
      var v21349 = t$$15.body;
      introspect(JAM.policy.p3) {
        var v15602 = e$$347(v21349)
      }
      introspect(JAM.policy.p3) {
        var v15603 = g$$199.append(v$$11, W$$2)
      }
      introspect(JAM.policy.p3) {
        v15602.append(w$$18, v15603);
      }
    }
    return;
  }
  function p$$50() {
    function v1851(e$$354) {
      var t$$22 = e$$354.keyCode;
      var v21350 = U$$2;
      if (v21350) {
        v21350 = B$$3.escKey;
      }
      var v15604 = v21350;
      if (v15604) {
        v15604 = 27 === t$$22;
      }
      var v9876 = v15604;
      if (v9876) {
        introspect(JAM.policy.p3) {
          e$$354.preventDefault();
        }
        introspect(JAM.policy.p3) {
          Q$$2.close();
        }
      }
      var v24344 = U$$2;
      if (v24344) {
        v24344 = B$$3.arrowKey;
      }
      var v21351 = v24344;
      if (v21351) {
        v21351 = k$$76[1];
      }
      var v15605 = v21351;
      if (v15605) {
        var v21352 = e$$354.altKey;
        v15605 = !v21352;
      }
      var v9877 = v15605;
      if (v9877) {
        var v15606;
        var v21354 = 37 === t$$22;
        if (v21354) {
          introspect(JAM.policy.p3) {
            e$$354.preventDefault();
          }
          introspect(JAM.policy.p3) {
            v15606 = I$$3.click();
          }
        } else {
          var v21353 = 39 === t$$22;
          if (v21353) {
            introspect(JAM.policy.p3) {
              e$$354.preventDefault();
            }
            introspect(JAM.policy.p3) {
              v21353 = R$$2.click();
            }
          }
          v15606 = v21353;
        }
        v15606;
      }
      return;
    }
    function v1850() {
      var v3237 = B$$3.overlayClose;
      if (v3237) {
        introspect(JAM.policy.p3) {
          Q$$2.close();
        }
      }
      return;
    }
    function v1849() {
      introspect(JAM.policy.p3) {
        Q$$2.close();
      }
      return;
    }
    function v1848() {
      introspect(JAM.policy.p3) {
        Q$$2.prev();
      }
      return;
    }
    function v1847() {
      introspect(JAM.policy.p3) {
        Q$$2.next();
      }
      return;
    }
    function i$$217(e$$353) {
      var v26382 = e$$353.which;
      var v24345 = v26382 > 1;
      var v26383 = !v24345;
      if (v26383) {
        v24345 = e$$353.shiftKey;
      }
      var v21355 = v24345;
      var v24346 = !v21355;
      if (v24346) {
        v21355 = e$$353.altKey;
      }
      var v15607 = v21355;
      var v21356 = !v15607;
      if (v21356) {
        v15607 = e$$353.metaKey;
      }
      var v9878 = v15607;
      var v15608 = !v9878;
      if (v15608) {
        v9878 = e$$353.ctrlKey;
      }
      var v3238 = v9878;
      var v9879 = !v3238;
      if (v9879) {
        introspect(JAM.policy.p3) {
          e$$353.preventDefault();
        }
        u$$13(this);
      }
      return;
    }
    var v3239;
    if (g$$199) {
      var v21357 = !V$$2;
      if (v21357) {
        V$$2 = !0;
        introspect(JAM.policy.p3) {
          R$$2.click(v1847);
        }
        introspect(JAM.policy.p3) {
          I$$3.click(v1848);
        }
        introspect(JAM.policy.p3) {
          K$$2.click(v1849);
        }
        introspect(JAM.policy.p3) {
          w$$18.click(v1850);
        }
        introspect(JAM.policy.p3) {
          var v26384 = e$$347(t$$15)
        }
        var v26385 = "keydown." + Z$$2;
        introspect(JAM.policy.p3) {
          v26384.bind(v26385, v1851);
        }
        var v24347;
        var v28749 = e$$347.fn;
        var v27814 = v28749.on;
        introspect(JAM.policy.p3) {
          var v26391 = e$$347.isFunction(v27814)
        }
        if (v26391) {
          introspect(JAM.policy.p3) {
            var v26386 = e$$347(t$$15)
          }
          var v26387 = "click." + Z$$2;
          var v26388 = "." + et$$1;
          introspect(JAM.policy.p3) {
            v24347 = v26386.on(v26387, v26388, i$$217);
          }
        } else {
          var v27815 = "." + et$$1;
          introspect(JAM.policy.p3) {
            var v26389 = e$$347(v27815)
          }
          var v26390 = "click." + Z$$2;
          introspect(JAM.policy.p3) {
            v24347 = v26389.live(v26390, i$$217);
          }
        }
        v24347;
      }
      v3239 = !0;
    } else {
      v3239 = !1;
    }
    return v3239;
  }
  function m$$50() {
    function v1861(t$$25, i$$219) {
      var v3240 = f$$185 === at;
      if (v3240) {
        var v15609;
        var v21361 = "error" === i$$219;
        if (v21361) {
          var v21358 = o$$26(st$$2, "Error");
          var v21359 = B$$3.xhrError;
          introspect(JAM.policy.p3) {
            v15609 = v21358.html(v21359);
          }
        } else {
          introspect(JAM.policy.p3) {
            var v21360 = e$$347(this)
          }
          introspect(JAM.policy.p3) {
            v15609 = v21360.contents();
          }
        }
        var v9880 = v15609;
        introspect(JAM.policy.p3) {
          u$$14(v9880);
        }
      }
      return;
    }
    function v1860() {
      j$$109.src = n$$98;
      return;
    }
    function v1859() {
      function v1858() {
        introspect(JAM.policy.p3) {
          u$$14(j$$109);
        }
        return;
      }
      function v1857() {
        introspect(JAM.policy.p3) {
          Q$$2.next();
        }
        return;
      }
      function v1856() {
        var v15610 = j$$109.height;
        var v21362 = j$$109.height;
        var v15611 = v21362 * t$$23;
        j$$109.height = v15610 - v15611;
        var v15612 = j$$109.width;
        var v21363 = j$$109.width;
        var v15613 = v21363 * t$$23;
        j$$109.width = v15612 - v15613;
        return;
      }
      function v1855(t$$24, i$$218) {
        introspect(JAM.policy.p3) {
          var v9881 = e$$347(N$$2)
        }
        introspect(JAM.policy.p3) {
          var v3241 = v9881.attr(i$$218)
        }
        var v9884 = !v3241;
        if (v9884) {
          introspect(JAM.policy.p3) {
            var v9882 = e$$347(N$$2)
          }
          var v9883 = "data-" + i$$218;
          introspect(JAM.policy.p3) {
            v3241 = v9882.attr(v9883);
          }
        }
        var o$$29 = v3241;
        if (o$$29) {
          introspect(JAM.policy.p3) {
            j$$109.setAttribute(i$$218, o$$29);
          }
        }
        return;
      }
      var t$$23;
      var v3242 = f$$185 === at;
      if (v3242) {
        var v29381 = ["alt", "longdesc", "aria-describedby"];
        introspect(JAM.policy.p3) {
          e$$347.each(v29381, v1855);
        }
        var v29762 = B$$3.retinaImage;
        if (v29762) {
          var v30026 = i$$210.devicePixelRatio;
          v29762 = v30026 > 1;
        }
        var v29382 = v29762;
        if (v29382) {
          var v30027 = j$$109.height;
          var v30028 = i$$210.devicePixelRatio;
          j$$109.height = v30027 / v30028;
          var v30029 = j$$109.width;
          var v30030 = i$$210.devicePixelRatio;
          j$$109.width = v30029 / v30030;
        }
        var v28750 = B$$3.scalePhotos;
        if (v28750) {
          r$$24 = v1856;
          var v30256 = B$$3.mw;
          if (v30256) {
            var v30416 = j$$109.width;
            var v30417 = B$$3.mw;
            v30256 = v30416 > v30417;
          }
          var v30031 = v30256;
          if (v30031) {
            var v30557 = j$$109.width;
            var v30558 = B$$3.mw;
            var v30418 = v30557 - v30558;
            var v30419 = j$$109.width;
            t$$23 = v30418 / v30419;
            introspect(JAM.policy.p3) {
              r$$24();
            }
          }
          var v30032 = B$$3.mh;
          if (v30032) {
            var v30257 = j$$109.height;
            var v30258 = B$$3.mh;
            v30032 = v30257 > v30258;
          }
          var v29763 = v30032;
          if (v29763) {
            var v30420 = j$$109.height;
            var v30421 = B$$3.mh;
            var v30259 = v30420 - v30421;
            var v30260 = j$$109.height;
            t$$23 = v30259 / v30260;
            introspect(JAM.policy.p3) {
              r$$24();
            }
          }
        }
        var v27816 = B$$3.h;
        if (v27816) {
          var v28751 = j$$109.style;
          var v30261 = B$$3.mh;
          var v30262 = j$$109.height;
          var v30033 = v30261 - v30262;
          introspect(JAM.policy.p3) {
            var v29764 = Math.max(v30033, 0)
          }
          var v29383 = v29764 / 2;
          v28751.marginTop = v29383 + "px";
        }
        var v27817 = k$$76[1];
        if (v27817) {
          var v28752 = B$$3.loop;
          var v29385 = !v28752;
          if (v29385) {
            var v29384 = z$$7 + 1;
            v28752 = k$$76[v29384];
          }
          v27817 = v28752;
        }
        var v26392 = v27817;
        if (v26392) {
          var v28753 = j$$109.style;
          v28753.cursor = "pointer";
          j$$109.onclick = v1857;
        }
        var v24348 = j$$109.style;
        var v26393 = j$$109.width;
        v24348.width = v26393 + "px";
        var v21364 = j$$109.style;
        var v24349 = j$$109.height;
        v21364.height = v24349 + "px";
        setTimeout(v1858, 1);
      }
      return;
    }
    function v1854() {
      B$$3.title = !1;
      var v15614 = o$$26(st$$2, "Error");
      var v15615 = B$$3.imgError;
      introspect(JAM.policy.p3) {
        var v9885 = v15614.html(v15615)
      }
      introspect(JAM.policy.p3) {
        u$$14(v9885);
      }
      return;
    }
    function v1853() {
      introspect(JAM.policy.p3) {
        var v3243 = H$$3.children()
      }
      introspect(JAM.policy.p3) {
        a$$689.replaceWith(v3243);
      }
      return;
    }
    function v1852() {
      introspect(JAM.policy.p3) {
        F$$3.show();
      }
      return;
    }
    var n$$98;
    var r$$24;
    var a$$689;
    var u$$14 = Q$$2.prep;
    var f$$185 = at = at + 1;
    $$$4 = !0;
    j$$109 = !1;
    N$$2 = k$$76[z$$7];
    d$$404();
    c$$545(ht);
    var v30034 = B$$3.onLoad;
    c$$545(it, v30034);
    var v29765 = B$$3;
    var v30035;
    var v30265 = B$$3.height;
    if (v30265) {
      var v30559 = B$$3.height;
      var v30422 = h$$162(v30559, "y");
      var v30263 = v30422 - D$$3;
      v30035 = v30263 - O$$2;
    } else {
      var v30264 = B$$3.innerHeight;
      if (v30264) {
        var v30423 = B$$3.innerHeight;
        v30264 = h$$162(v30423, "y");
      }
      v30035 = v30264;
    }
    v29765.h = v30035;
    var v29386 = B$$3;
    var v29766;
    var v30038 = B$$3.width;
    if (v30038) {
      var v30424 = B$$3.width;
      var v30266 = h$$162(v30424, "x");
      var v30036 = v30266 - A$$4;
      v29766 = v30036 - _$$3;
    } else {
      var v30037 = B$$3.innerWidth;
      if (v30037) {
        var v30267 = B$$3.innerWidth;
        v30037 = h$$162(v30267, "x");
      }
      v29766 = v30037;
    }
    v29386.w = v29766;
    B$$3.mw = B$$3.w;
    B$$3.mh = B$$3.h;
    var v26394 = B$$3.maxWidth;
    if (v26394) {
      var v28754 = B$$3;
      var v30039 = B$$3.maxWidth;
      var v29767 = h$$162(v30039, "x");
      var v29387 = v29767 - A$$4;
      v28754.mw = v29387 - _$$3;
      var v28755;
      var v29768 = B$$3.w;
      if (v29768) {
        var v30040 = B$$3.w;
        var v30041 = B$$3.mw;
        v29768 = v30040 < v30041;
      }
      var v29388 = v29768;
      if (v29388) {
        v28755 = B$$3.w;
      } else {
        v28755 = B$$3.mw;
      }
      B$$3.mw = v28755;
    }
    var v24350 = B$$3.maxHeight;
    if (v24350) {
      var v27818 = B$$3;
      var v29769 = B$$3.maxHeight;
      var v29389 = h$$162(v29769, "y");
      var v28756 = v29389 - D$$3;
      v27818.mh = v28756 - O$$2;
      var v27819;
      var v29390 = B$$3.h;
      if (v29390) {
        var v29770 = B$$3.h;
        var v29771 = B$$3.mh;
        v29390 = v29770 < v29771;
      }
      var v28757 = v29390;
      if (v28757) {
        v27819 = B$$3.h;
      } else {
        v27819 = B$$3.mh;
      }
      B$$3.mh = v27819;
    }
    n$$98 = B$$3.href;
    G$$3 = setTimeout(v1852, 100);
    var v9886;
    var v15617 = B$$3.inline;
    if (v15617) {
      var v26395 = o$$26(st$$2);
      introspect(JAM.policy.p3) {
        var v24351 = v26395.hide()
      }
      introspect(JAM.policy.p3) {
        var v26396 = e$$347(n$$98)
      }
      var v24352 = v26396[0];
      introspect(JAM.policy.p3) {
        a$$689 = v24351.insertBefore(v24352);
      }
      introspect(JAM.policy.p3) {
        lt.one(ht, v1853);
      }
      introspect(JAM.policy.p3) {
        var v21365 = e$$347(n$$98)
      }
      introspect(JAM.policy.p3) {
        v9886 = u$$14(v21365);
      }
    } else {
      var v15616;
      var v21367 = B$$3.iframe;
      if (v21367) {
        introspect(JAM.policy.p3) {
          v15616 = u$$14(" ");
        }
      } else {
        var v21366;
        var v24355 = B$$3.html;
        if (v24355) {
          var v24353 = B$$3.html;
          introspect(JAM.policy.p3) {
            v21366 = u$$14(v24353);
          }
        } else {
          var v24354;
          var v27820 = B$$3.photo;
          var v28759 = !v27820;
          if (v28759) {
            var v28758 = B$$3.photoRegex;
            introspect(JAM.policy.p3) {
              v27820 = v28758.test(n$$98);
            }
          }
          var v26398 = v27820;
          if (v26398) {
            n$$98 = s$$30(B$$3, n$$98);
            introspect(JAM.policy.p3) {
              j$$109 = t$$15.createElement("img");
            }
            introspect(JAM.policy.p3) {
              var v29772 = e$$347(j$$109)
            }
            var v29773 = Z$$2 + "Photo";
            introspect(JAM.policy.p3) {
              var v29391 = v29772.addClass(v29773)
            }
            introspect(JAM.policy.p3) {
              var v28760 = v29391.bind("error", v1854)
            }
            introspect(JAM.policy.p3) {
              v28760.one("load", v1859);
            }
            v24354 = setTimeout(v1860, 1);
          } else {
            var v26397 = n$$98;
            if (v26397) {
              var v27821 = B$$3.data;
              introspect(JAM.policy.p3) {
                v26397 = W$$2.load(n$$98, v27821, v1861);
              }
            }
            v24354 = v26397;
          }
          v21366 = v24354;
        }
        v15616 = v21366;
      }
      v9886 = v15616;
    }
    v9886;
    return;
  }
  var w$$18;
  var g$$199;
  var v$$11;
  var y$$55;
  var x$$74;
  var b$$679;
  var T$$4;
  var C$$3;
  var k$$76;
  var E$$3;
  var H$$3;
  var W$$2;
  var F$$3;
  var L$$2;
  var S$$2;
  var M$$2;
  var R$$2;
  var I$$3;
  var K$$2;
  var P$$2;
  var B$$3;
  var O$$2;
  var _$$3;
  var D$$3;
  var A$$4;
  var N$$2;
  var z$$7;
  var j$$109;
  var U$$2;
  var $$$4;
  var q$$21;
  var G$$3;
  var Q$$2;
  var J$$3;
  var V$$2;
  var v3244 = !1;
  var v3245 = !1;
  var v3246 = !1;
  var v3247 = !1;
  var v3248 = !1;
  var v3249 = !1;
  var v3250 = !1;
  var v3251 = !1;
  var v3252 = !1;
  var v3253 = !1;
  var v3254 = !0;
  var v3255 = !0;
  var v3256 = !1;
  var v3257 = !1;
  var v3258 = !1;
  var v3259 = !0;
  var v3260 = !1;
  var v3261 = !0;
  var v3262 = !0;
  var v3263 = !0;
  var v3264 = !1;
  var v3265 = !1;
  var v3266 = !1;
  var v3267 = !1;
  var v3268 = !1;
  var v3269 = void 0;
  var v3270 = !0;
  var v3271 = !0;
  var v3272 = !1;
  var v3273 = !0;
  var v3274 = !0;
  var v3275 = !1;
  var v3276 = !0;
  var v3277 = !1;
  var v3278 = !1;
  var v3279 = !0;
  var v3280 = !0;
  var v3281 = !1;
  var v3282 = !1;
  var v3283 = !1;
  var v3284 = !1;
  var v3285 = !1;
  var X$$2 = {html:v3244, photo:v3245, iframe:v3246, inline:v3247, transition:"elastic", speed:300, fadeOut:300, width:v3248, initialWidth:"600", innerWidth:v3249, maxWidth:v3250, height:v3251, initialHeight:"450", innerHeight:v3252, maxHeight:v3253, scalePhotos:v3254, scrolling:v3255, href:v3256, title:v3257, rel:v3258, opacity:.9, preloading:v3259, className:v3260, overlayClose:v3261, escKey:v3262, arrowKey:v3263, top:v3264, bottom:v3265, left:v3266, right:v3267, fixed:v3268, data:v3269, closeButton:v3270, 
  fastIframe:v3271, open:v3272, reposition:v3273, loop:v3274, slideshow:v3275, slideshowAuto:v3276, slideshowSpeed:2500, slideshowStart:"start slideshow", slideshowStop:"stop slideshow", photoRegex:/\.(gif|png|jp(e|g|eg)|bmp|ico|webp)((#|\?).*)?$/i, retinaImage:v3277, retinaUrl:v3278, retinaSuffix:"@2x.$1", current:"image {current} of {total}", previous:"previous", next:"next", close:"close", xhrError:"This content failed to load.", imgError:"This image failed to load.", returnFocus:v3279, trapFocus:v3280, 
  onOpen:v3281, onLoad:v3282, onComplete:v3283, onCleanup:v3284, onClosed:v3285};
  var Y$$2 = "colorbox";
  var Z$$2 = "cbox";
  var et$$1 = Z$$2 + "Element";
  var tt$$1 = Z$$2 + "_open";
  var it = Z$$2 + "_load";
  var ot = Z$$2 + "_complete";
  var nt = Z$$2 + "_cleanup";
  var rt$$3 = Z$$2 + "_closed";
  var ht = Z$$2 + "_purge";
  introspect(JAM.policy.p3) {
    var lt = e$$347("<a/>")
  }
  var st$$2 = "div";
  var at = 0;
  var dt = {};
  var ct$$1 = v1864();
  var v3286 = e$$347.colorbox;
  var v9887 = !v3286;
  if (v9887) {
    introspect(JAM.policy.p3) {
      e$$347(f$$184);
    }
    var v30268 = e$$347.fn;
    introspect(JAM.policy.p2) {
      Q$$2 = v30268[Y$$2] = e$$347[Y$$2] = v1866;
    }
    Q$$2.position = v1870;
    Q$$2.resize = v1871;
    Q$$2.prep = v1877;
    Q$$2.next = v1878;
    Q$$2.prev = v1879;
    Q$$2.close = v1882;
    Q$$2.remove = v1883;
    Q$$2.element = v1884;
    Q$$2.settings = X$$2;
  }
  return;
}
function v1843(a$$663, b$$652) {
  function v1842(a$$684, b$$677) {
    function v1841(a$$687) {
      var v3287 = a$$687.clientX;
      if (v3287) {
        introspect(JAM.policy.p3) {
          c$$544.rotate(null);
        }
      }
      return;
    }
    function v1840(a$$686) {
      introspect(JAM.policy.p3) {
        e$$346();
      }
      return;
    }
    function v1839(b$$678) {
      function v1838() {
        var a$$685 = d$$403.selected;
        var v9888;
        var v21368 = a$$685 = a$$685 + 1;
        var v24356 = c$$544.anchors;
        var v21369 = v24356.length;
        var v15618 = v21368 < v21369;
        if (v15618) {
          v9888 = a$$685;
        } else {
          v9888 = 0;
        }
        var v3288 = v9888;
        introspect(JAM.policy.p3) {
          c$$544.select(v3288);
        }
        return;
      }
      var v15619 = c$$544.rotation;
      clearTimeout(v15619);
      var v15620 = c$$544;
      var v30956 = setTimeout(v1838, a$$684);
      v15620.rotation = v30956;
      if (b$$678) {
        introspect(JAM.policy.p3) {
          b$$678.stopPropagation();
        }
      }
      return;
    }
    var c$$544 = this;
    var d$$403 = this.options;
    var v3289 = c$$544._rotate;
    var v9889 = !v3289;
    if (v9889) {
      v3289 = c$$544._rotate = v1839;
    }
    var e$$346 = v3289;
    var v3290 = c$$544._unrotate;
    var v9891 = !v3290;
    if (v9891) {
      var v9890;
      if (b$$677) {
        v9890 = v1840;
      } else {
        v9890 = v1841;
      }
      v3290 = c$$544._unrotate = v9890;
    }
    var f$$183 = v3290;
    var v9892;
    if (a$$684) {
      var v24357 = this.element;
      introspect(JAM.policy.p3) {
        v24357.bind("tabsshow", e$$346);
      }
      var v24358 = this.anchors;
      var v26399 = d$$403.event;
      var v24359 = v26399 + ".tabs";
      introspect(JAM.policy.p3) {
        v24358.bind(v24359, f$$183);
      }
      introspect(JAM.policy.p3) {
        v9892 = e$$346();
      }
    } else {
      var v27822 = c$$544.rotation;
      clearTimeout(v27822);
      var v27823 = this.element;
      introspect(JAM.policy.p3) {
        v27823.unbind("tabsshow", e$$346);
      }
      var v26400 = this.anchors;
      var v27824 = d$$403.event;
      var v26401 = v27824 + ".tabs";
      introspect(JAM.policy.p3) {
        v26400.unbind(v26401, f$$183);
      }
      delete this._rotate;
      v9892 = delete this._unrotate;
    }
    v9892;
    return this;
  }
  function v1837() {
    var v3291 = this.anchors;
    return v3291.length;
  }
  function v1836(a$$683, b$$676) {
    var v21370 = this.anchors;
    introspect(JAM.policy.p3) {
      var v15621 = v21370.eq(a$$683)
    }
    introspect(JAM.policy.p3) {
      var v9893 = v15621.removeData("cache.tabs")
    }
    introspect(JAM.policy.p3) {
      v9893.data("load.tabs", b$$676);
    }
    return this;
  }
  function v1835() {
    var v26402 = this.element;
    introspect(JAM.policy.p3) {
      v26402.queue([]);
    }
    var v26403 = this.panels;
    var v26404 = !1;
    var v26405 = !0;
    introspect(JAM.policy.p3) {
      v26403.stop(v26404, v26405);
    }
    var v24360 = this.element;
    var v27825 = this.element;
    introspect(JAM.policy.p3) {
      var v26406 = v27825.queue("tabs")
    }
    introspect(JAM.policy.p3) {
      var v24361 = v26406.splice(-2, 2)
    }
    introspect(JAM.policy.p3) {
      v24360.queue("tabs", v24361);
    }
    var v21371 = this.xhr;
    if (v21371) {
      var v26407 = this.xhr;
      introspect(JAM.policy.p3) {
        v26407.abort();
      }
      delete this.xhr;
    }
    introspect(JAM.policy.p3) {
      this._cleanup();
    }
    return this;
  }
  function v1834(b$$675) {
    function v1833(a$$682, f$$182, g$$197) {
      introspect(JAM.policy.p3) {
        c$$543._cleanup();
      }
      var v21372 = c$$543.anchors;
      var v15622 = v21372[b$$675];
      var v21373 = c$$543.panels;
      var v15623 = v21373[b$$675];
      introspect(JAM.policy.p3) {
        var v9894 = c$$543._ui(v15622, v15623)
      }
      introspect(JAM.policy.p3) {
        c$$543._trigger("load", null, v9894);
      }
      try {
        var v3292 = d$$402.ajaxOptions;
        introspect(JAM.policy.p3) {
          v3292.error(a$$682, f$$182, b$$675, e$$345);
        }
      } catch (g$$198) {
      }
      return;
    }
    function v1832(f$$181, g$$196) {
      var v24362 = c$$543.element;
      var v26408 = e$$345.hash;
      introspect(JAM.policy.p3) {
        var v24363 = c$$543._sanitizeSelector(v26408)
      }
      introspect(JAM.policy.p3) {
        var v21374 = v24362.find(v24363)
      }
      introspect(JAM.policy.p3) {
        v21374.html(f$$181);
      }
      introspect(JAM.policy.p3) {
        c$$543._cleanup();
      }
      var v15624 = d$$402.cache;
      if (v15624) {
        var v21375 = !0;
        introspect(JAM.policy.p3) {
          a$$663.data(e$$345, "cache.tabs", v21375);
        }
      }
      var v21376 = c$$543.anchors;
      var v15625 = v21376[b$$675];
      var v21377 = c$$543.panels;
      var v15626 = v21377[b$$675];
      introspect(JAM.policy.p3) {
        var v9895 = c$$543._ui(v15625, v15626)
      }
      introspect(JAM.policy.p3) {
        c$$543._trigger("load", null, v9895);
      }
      try {
        var v3293 = d$$402.ajaxOptions;
        introspect(JAM.policy.p3) {
          v3293.success(f$$181, g$$196);
        }
      } catch (h$$161) {
      }
      return;
    }
    introspect(JAM.policy.p3) {
      b$$675 = this._getIndex(b$$675);
    }
    var c$$543 = this;
    var d$$402 = this.options;
    var v9896 = this.anchors;
    introspect(JAM.policy.p3) {
      var v3294 = v9896.eq(b$$675)
    }
    var e$$345 = v3294[0];
    introspect(JAM.policy.p3) {
      var f$$180 = a$$663.data(e$$345, "load.tabs")
    }
    introspect(JAM.policy.p3) {
      this.abort();
    }
    var v9897 = !f$$180;
    var v15628 = !v9897;
    if (v15628) {
      var v26409 = this.element;
      introspect(JAM.policy.p3) {
        var v24364 = v26409.queue("tabs")
      }
      var v21378 = v24364.length;
      var v15627 = v21378 !== 0;
      if (v15627) {
        introspect(JAM.policy.p3) {
          v15627 = a$$663.data(e$$345, "cache.tabs");
        }
      }
      v9897 = v15627;
    }
    var v3296 = v9897;
    if (v3296) {
      var v3295 = this.element;
      introspect(JAM.policy.p3) {
        v3295.dequeue("tabs");
      }
      return;
    }
    var v9898 = this.lis;
    introspect(JAM.policy.p3) {
      var v3297 = v9898.eq(b$$675)
    }
    introspect(JAM.policy.p3) {
      v3297.addClass("ui-state-processing");
    }
    var v3300 = d$$402.spinner;
    if (v3300) {
      introspect(JAM.policy.p3) {
        var g$$195 = a$$663("span", e$$345)
      }
      introspect(JAM.policy.p3) {
        var v9899 = g$$195.html()
      }
      introspect(JAM.policy.p3) {
        var v3298 = g$$195.data("label.tabs", v9899)
      }
      var v3299 = d$$402.spinner;
      introspect(JAM.policy.p3) {
        v3298.html(v3299);
      }
    }
    var v21379 = d$$402.ajaxOptions;
    var v21380 = {url:f$$180, success:v1832, error:v1833};
    introspect(JAM.policy.p3) {
      var v15629 = a$$663.extend({}, v21379, v21380)
    }
    introspect(JAM.policy.p3) {
      var v30957 = a$$663.ajax(v15629)
    }
    this.xhr = v30957;
    var v15630 = c$$543.element;
    introspect(JAM.policy.p3) {
      v15630.dequeue("tabs");
    }
    return this;
  }
  function v1831(a$$681) {
    introspect(JAM.policy.p3) {
      a$$681 = this._getIndex(a$$681);
    }
    var v3303 = a$$681 == -1;
    if (v3303) {
      var v15631 = this.options;
      var v9900 = v15631.collapsible;
      if (v9900) {
        var v21381 = this.options;
        var v15632 = v21381.selected;
        v9900 = v15632 != -1;
      }
      var v3302 = v9900;
      if (v3302) {
        var v3301 = this.options;
        a$$681 = v3301.selected;
      } else {
        return this;
      }
    }
    var v15633 = this.anchors;
    introspect(JAM.policy.p3) {
      var v9901 = v15633.eq(a$$681)
    }
    var v21382 = this.options;
    var v15634 = v21382.event;
    var v9902 = v15634 + ".tabs";
    introspect(JAM.policy.p3) {
      v9901.trigger(v9902);
    }
    return this;
  }
  function v1830(a$$680) {
    introspect(JAM.policy.p3) {
      a$$680 = this._getIndex(a$$680);
    }
    var b$$674 = this;
    var c$$542 = this.options;
    var v15635 = c$$542.selected;
    var v9903 = a$$680 != v15635;
    if (v9903) {
      var v27826 = this.lis;
      introspect(JAM.policy.p3) {
        var v26410 = v27826.eq(a$$680)
      }
      introspect(JAM.policy.p3) {
        v26410.addClass("ui-state-disabled");
      }
      var v26411 = c$$542.disabled;
      introspect(JAM.policy.p3) {
        v26411.push(a$$680);
      }
      var v24365 = c$$542.disabled;
      introspect(JAM.policy.p3) {
        v24365.sort();
      }
      var v26412 = this.anchors;
      var v24366 = v26412[a$$680];
      var v26413 = this.panels;
      var v24367 = v26413[a$$680];
      introspect(JAM.policy.p3) {
        var v21383 = this._ui(v24366, v24367)
      }
      introspect(JAM.policy.p3) {
        this._trigger("disable", null, v21383);
      }
    }
    return this;
  }
  function v1829(b$$673) {
    function v1828(a$$679, c$$541) {
      return a$$679 != b$$673;
    }
    introspect(JAM.policy.p3) {
      b$$673 = this._getIndex(b$$673);
    }
    var c$$540 = this.options;
    var v15636 = c$$540.disabled;
    introspect(JAM.policy.p3) {
      var v9904 = a$$663.inArray(b$$673, v15636)
    }
    var v3304 = v9904 == -1;
    if (v3304) {
      return;
    }
    var v24368 = this.lis;
    introspect(JAM.policy.p3) {
      var v21384 = v24368.eq(b$$673)
    }
    introspect(JAM.policy.p3) {
      v21384.removeClass("ui-state-disabled");
    }
    var v21385 = c$$540;
    var v24369 = c$$540.disabled;
    introspect(JAM.policy.p3) {
      var v30958 = a$$663.grep(v24369, v1828)
    }
    v21385.disabled = v30958;
    var v24370 = this.anchors;
    var v21386 = v24370[b$$673];
    var v24371 = this.panels;
    var v21387 = v24371[b$$673];
    introspect(JAM.policy.p3) {
      var v15637 = this._ui(v21386, v21387)
    }
    introspect(JAM.policy.p3) {
      this._trigger("enable", null, v15637);
    }
    return this;
  }
  function v1827(b$$672) {
    function v1826(a$$678, c$$539) {
      var v3305;
      var v9905 = a$$678 >= b$$672;
      if (v9905) {
        v3305 = a$$678 = a$$678 - 1;
      } else {
        v3305 = a$$678;
      }
      return v3305;
    }
    function v1825(a$$677, c$$538) {
      return a$$677 != b$$672;
    }
    introspect(JAM.policy.p3) {
      b$$672 = this._getIndex(b$$672);
    }
    var c$$537 = this.options;
    var v9906 = this.lis;
    introspect(JAM.policy.p3) {
      var v3306 = v9906.eq(b$$672)
    }
    introspect(JAM.policy.p3) {
      var d$$401 = v3306.remove()
    }
    var v9907 = this.panels;
    introspect(JAM.policy.p3) {
      var v3307 = v9907.eq(b$$672)
    }
    introspect(JAM.policy.p3) {
      var e$$344 = v3307.remove()
    }
    introspect(JAM.policy.p3) {
      var v26414 = d$$401.hasClass("ui-tabs-selected")
    }
    if (v26414) {
      var v28761 = this.anchors;
      var v27827 = v28761.length;
      v26414 = v27827 > 1;
    }
    var v24372 = v26414;
    if (v24372) {
      var v28762;
      var v29774 = b$$672 + 1;
      var v30042 = this.anchors;
      var v29775 = v30042.length;
      var v29392 = v29774 < v29775;
      if (v29392) {
        v28762 = 1;
      } else {
        v28762 = -1;
      }
      var v27828 = v28762;
      var v26415 = b$$672 + v27828;
      introspect(JAM.policy.p3) {
        this.select(v26415);
      }
    }
    var v24373 = c$$537;
    var v27829 = c$$537.disabled;
    introspect(JAM.policy.p3) {
      var v26416 = a$$663.grep(v27829, v1825)
    }
    introspect(JAM.policy.p3) {
      var v30959 = a$$663.map(v26416, v1826)
    }
    v24373.disabled = v30959;
    introspect(JAM.policy.p3) {
      this._tabify();
    }
    introspect(JAM.policy.p3) {
      var v24374 = d$$401.find("a")
    }
    var v21388 = v24374[0];
    var v21389 = e$$344[0];
    introspect(JAM.policy.p3) {
      var v15638 = this._ui(v21388, v21389)
    }
    introspect(JAM.policy.p3) {
      this._trigger("remove", null, v15638);
    }
    return this;
  }
  function v1824(c$$536, d$$400, e$$343) {
    function v1823() {
      var v15639 = f$$179.anchors;
      var v9908 = v15639[0];
      var v15640 = f$$179.panels;
      var v9909 = v15640[0];
      introspect(JAM.policy.p3) {
        var v3308 = f$$179._ui(v9908, v9909)
      }
      introspect(JAM.policy.p3) {
        f$$179._trigger("show", null, v3308);
      }
      return;
    }
    function v1822(a$$676, b$$671) {
      var v3309;
      var v9910 = a$$676 >= e$$343;
      if (v9910) {
        v3309 = a$$676 = a$$676 + 1;
      } else {
        v3309 = a$$676;
      }
      return v3309;
    }
    var v3310 = e$$343 === b$$652;
    if (v3310) {
      var v9911 = this.anchors;
      e$$343 = v9911.length;
    }
    var f$$179 = this;
    var g$$194 = this.options;
    var v15641 = g$$194.tabTemplate;
    introspect(JAM.policy.p3) {
      var v9912 = v15641.replace(/#\{href\}/g, c$$536)
    }
    introspect(JAM.policy.p3) {
      var v3311 = v9912.replace(/#\{label\}/g, d$$400)
    }
    introspect(JAM.policy.p3) {
      var h$$160 = a$$663(v3311)
    }
    var v3312;
    introspect(JAM.policy.p3) {
      var v9914 = c$$536.indexOf("#")
    }
    if (v9914) {
      introspect(JAM.policy.p3) {
        var v15642 = a$$663("a", h$$160)
      }
      var v9913 = v15642[0];
      introspect(JAM.policy.p3) {
        v3312 = this._tabId(v9913);
      }
    } else {
      introspect(JAM.policy.p3) {
        v3312 = c$$536.replace("#", "");
      }
    }
    var i$$209 = v3312;
    introspect(JAM.policy.p3) {
      var v3313 = h$$160.addClass("ui-state-default ui-corner-top")
    }
    var v3314 = !0;
    introspect(JAM.policy.p3) {
      v3313.data("destroy.tabs", v3314);
    }
    var v3315 = f$$179.element;
    var v3316 = "#" + i$$209;
    introspect(JAM.policy.p3) {
      var j$$108 = v3315.find(v3316)
    }
    var v28763 = j$$108.length;
    var v29395 = !v28763;
    if (v29395) {
      var v30043 = g$$194.panelTemplate;
      introspect(JAM.policy.p3) {
        var v29776 = a$$663(v30043)
      }
      introspect(JAM.policy.p3) {
        var v29393 = v29776.attr("id", i$$209)
      }
      var v29394 = !0;
      introspect(JAM.policy.p3) {
        j$$108 = v29393.data("destroy.tabs", v29394);
      }
    }
    introspect(JAM.policy.p3) {
      j$$108.addClass("ui-tabs-panel ui-widget-content ui-corner-bottom ui-tabs-hide");
    }
    var v27830;
    var v29777 = this.lis;
    var v29396 = v29777.length;
    var v28764 = e$$343 >= v29396;
    if (v28764) {
      var v29397 = this.list;
      introspect(JAM.policy.p3) {
        h$$160.appendTo(v29397);
      }
      var v30044 = this.list;
      var v29778 = v30044[0];
      var v29398 = v29778.parentNode;
      introspect(JAM.policy.p3) {
        v27830 = j$$108.appendTo(v29398);
      }
    } else {
      var v29779 = this.lis;
      var v29399 = v29779[e$$343];
      introspect(JAM.policy.p3) {
        h$$160.insertBefore(v29399);
      }
      var v29780 = this.panels;
      var v29400 = v29780[e$$343];
      introspect(JAM.policy.p3) {
        v27830 = j$$108.insertBefore(v29400);
      }
    }
    v27830;
    var v26417 = g$$194;
    var v27831 = g$$194.disabled;
    introspect(JAM.policy.p3) {
      var v30960 = a$$663.map(v27831, v1822)
    }
    v26417.disabled = v30960;
    introspect(JAM.policy.p3) {
      this._tabify();
    }
    var v26418 = this.anchors;
    var v24375 = v26418.length;
    var v21390 = v24375 == 1;
    if (v21390) {
      g$$194.selected = 0;
      introspect(JAM.policy.p3) {
        h$$160.addClass("ui-tabs-selected ui-state-active");
      }
      introspect(JAM.policy.p3) {
        j$$108.removeClass("ui-tabs-hide");
      }
      var v27832 = this.element;
      introspect(JAM.policy.p3) {
        v27832.queue("tabs", v1823);
      }
      introspect(JAM.policy.p3) {
        this.load(0);
      }
    }
    var v24376 = this.anchors;
    var v21391 = v24376[e$$343];
    var v24377 = this.panels;
    var v21392 = v24377[e$$343];
    introspect(JAM.policy.p3) {
      var v15643 = this._ui(v21391, v21392)
    }
    introspect(JAM.policy.p3) {
      this._trigger("add", null, v15643);
    }
    return this;
  }
  function v1821() {
    function v1820() {
      var v3317;
      introspect(JAM.policy.p3) {
        var v9918 = a$$663.data(this, "destroy.tabs")
      }
      if (v9918) {
        introspect(JAM.policy.p3) {
          var v9915 = a$$663(this)
        }
        introspect(JAM.policy.p3) {
          v3317 = v9915.remove();
        }
      } else {
        introspect(JAM.policy.p3) {
          var v9916 = a$$663(this)
        }
        var v15644 = ["ui-state-default", "ui-corner-top", "ui-tabs-selected", "ui-state-active", "ui-state-hover", "ui-state-focus", "ui-state-disabled", "ui-tabs-panel", "ui-widget-content", "ui-corner-bottom", "ui-tabs-hide"];
        introspect(JAM.policy.p3) {
          var v9917 = v15644.join(" ")
        }
        introspect(JAM.policy.p3) {
          v3317 = v9916.removeClass(v9917);
        }
      }
      v3317;
      return;
    }
    function v1819() {
      function v1818(a$$675, b$$670) {
        var v3318 = b$$670 + ".tabs";
        introspect(JAM.policy.p3) {
          c$$535.removeData(v3318);
        }
        return;
      }
      introspect(JAM.policy.p3) {
        var b$$669 = a$$663.data(this, "href.tabs")
      }
      if (b$$669) {
        this.href = b$$669;
      }
      introspect(JAM.policy.p3) {
        var v3319 = a$$663(this)
      }
      introspect(JAM.policy.p3) {
        var c$$535 = v3319.unbind(".tabs")
      }
      var v3320 = ["href", "load", "cache"];
      introspect(JAM.policy.p3) {
        a$$663.each(v3320, v1818);
      }
      return;
    }
    var b$$668 = this.options;
    introspect(JAM.policy.p3) {
      this.abort();
    }
    var v29401 = this.element;
    introspect(JAM.policy.p3) {
      var v28765 = v29401.unbind(".tabs")
    }
    introspect(JAM.policy.p3) {
      var v27833 = v28765.removeClass("ui-tabs ui-widget ui-widget-content ui-corner-all ui-tabs-collapsible")
    }
    introspect(JAM.policy.p3) {
      v27833.removeData("tabs");
    }
    var v26419 = this.list;
    introspect(JAM.policy.p3) {
      v26419.removeClass("ui-tabs-nav ui-helper-reset ui-helper-clearfix ui-widget-header ui-corner-all");
    }
    var v24378 = this.anchors;
    introspect(JAM.policy.p3) {
      v24378.each(v1819);
    }
    var v26420 = this.lis;
    introspect(JAM.policy.p3) {
      var v24379 = v26420.unbind(".tabs")
    }
    var v24380 = this.panels;
    introspect(JAM.policy.p3) {
      var v21393 = v24379.add(v24380)
    }
    introspect(JAM.policy.p3) {
      v21393.each(v1820);
    }
    var v15645 = b$$668.cookie;
    if (v15645) {
      var v21394 = b$$668.cookie;
      introspect(JAM.policy.p3) {
        this._cookie(null, v21394);
      }
    }
    return this;
  }
  function v1817(a$$674) {
    var v15646 = typeof a$$674;
    var v9919 = v15646 == "string";
    if (v9919) {
      var v15647 = this.anchors;
      var v21395 = this.anchors;
      var v24381 = "[href$='" + a$$674;
      var v21396 = v24381 + "']";
      introspect(JAM.policy.p3) {
        var v15648 = v21395.filter(v21396)
      }
      introspect(JAM.policy.p3) {
        a$$674 = v15647.index(v15648);
      }
    }
    return a$$674;
  }
  function v1816(c$$528) {
    function v1815() {
      return !1;
    }
    function v1814() {
      function v1813() {
        introspect(JAM.policy.p3) {
          n$$95(b$$667, g$$193);
        }
        return;
      }
      function v1812() {
        introspect(JAM.policy.p3) {
          o$$25(b$$667, f$$178);
        }
        return;
      }
      function v1811() {
        introspect(JAM.policy.p3) {
          n$$95(b$$667, g$$193);
        }
        return;
      }
      function v1810() {
        introspect(JAM.policy.p3) {
          o$$25(b$$667, f$$178);
        }
        return;
      }
      var b$$667 = this;
      introspect(JAM.policy.p3) {
        var v3321 = a$$663(b$$667)
      }
      introspect(JAM.policy.p3) {
        var c$$534 = v3321.closest("li")
      }
      var v3322 = d$$399.panels;
      introspect(JAM.policy.p3) {
        var f$$178 = v3322.filter(":not(.ui-tabs-hide)")
      }
      var v3323 = d$$399.element;
      var v9920 = b$$667.hash;
      introspect(JAM.policy.p3) {
        var v3324 = d$$399._sanitizeSelector(v9920)
      }
      introspect(JAM.policy.p3) {
        var g$$193 = v3323.find(v3324)
      }
      introspect(JAM.policy.p3) {
        var v26421 = c$$534.hasClass("ui-tabs-selected")
      }
      if (v26421) {
        var v27834 = e$$342.collapsible;
        v26421 = !v27834;
      }
      var v24382 = v26421;
      var v26422 = !v24382;
      if (v26422) {
        introspect(JAM.policy.p3) {
          v24382 = c$$534.hasClass("ui-state-disabled");
        }
      }
      var v21397 = v24382;
      var v24383 = !v21397;
      if (v24383) {
        introspect(JAM.policy.p3) {
          v21397 = c$$534.hasClass("ui-state-processing");
        }
      }
      var v15649 = v21397;
      var v21399 = !v15649;
      if (v21399) {
        var v24384 = d$$399.panels;
        introspect(JAM.policy.p3) {
          var v21398 = v24384.filter(":animated")
        }
        v15649 = v21398.length;
      }
      var v9921 = v15649;
      var v15652 = !v9921;
      if (v15652) {
        var v24385 = g$$193[0];
        introspect(JAM.policy.p3) {
          var v21400 = d$$399._ui(this, v24385)
        }
        introspect(JAM.policy.p3) {
          var v15650 = d$$399._trigger("select", null, v21400)
        }
        var v15651 = !1;
        v9921 = v15650 === v15651;
      }
      var v3325 = v9921;
      if (v3325) {
        introspect(JAM.policy.p3) {
          this.blur();
        }
        return !1;
      }
      var v9922 = e$$342;
      var v15653 = d$$399.anchors;
      introspect(JAM.policy.p3) {
        var v30961 = v15653.index(this)
      }
      v9922.selected = v30961;
      introspect(JAM.policy.p3) {
        d$$399.abort();
      }
      var v3328 = e$$342.collapsible;
      if (v3328) {
        introspect(JAM.policy.p3) {
          var v3326 = c$$534.hasClass("ui-tabs-selected")
        }
        if (v3326) {
          e$$342.selected = -1;
          var v24386 = e$$342.cookie;
          if (v24386) {
            var v26423 = e$$342.selected;
            var v26424 = e$$342.cookie;
            introspect(JAM.policy.p3) {
              d$$399._cookie(v26423, v26424);
            }
          }
          var v24387 = d$$399.element;
          introspect(JAM.policy.p3) {
            var v21401 = v24387.queue("tabs", v1810)
          }
          introspect(JAM.policy.p3) {
            v21401.dequeue("tabs");
          }
          introspect(JAM.policy.p3) {
            this.blur();
          }
          return !1;
        }
        var v9923 = f$$178.length;
        var v3327 = !v9923;
        if (v3327) {
          var v24388 = e$$342.cookie;
          if (v24388) {
            var v26425 = e$$342.selected;
            var v26426 = e$$342.cookie;
            introspect(JAM.policy.p3) {
              d$$399._cookie(v26425, v26426);
            }
          }
          var v24389 = d$$399.element;
          introspect(JAM.policy.p3) {
            v24389.queue("tabs", v1811);
          }
          var v24390 = d$$399.anchors;
          introspect(JAM.policy.p3) {
            var v21402 = v24390.index(this)
          }
          introspect(JAM.policy.p3) {
            d$$399.load(v21402);
          }
          introspect(JAM.policy.p3) {
            this.blur();
          }
          return !1;
        }
      }
      var v3329 = e$$342.cookie;
      if (v3329) {
        var v9924 = e$$342.selected;
        var v9925 = e$$342.cookie;
        introspect(JAM.policy.p3) {
          d$$399._cookie(v9924, v9925);
        }
      }
      var v3330 = g$$193.length;
      if (v3330) {
        var v15654 = f$$178.length;
        if (v15654) {
          var v21403 = d$$399.element;
          introspect(JAM.policy.p3) {
            v21403.queue("tabs", v1812);
          }
        }
        var v15655 = d$$399.element;
        introspect(JAM.policy.p3) {
          v15655.queue("tabs", v1813);
        }
        var v15656 = d$$399.anchors;
        introspect(JAM.policy.p3) {
          var v9926 = v15656.index(this)
        }
        introspect(JAM.policy.p3) {
          d$$399.load(v9926);
        }
      } else {
        throw "jQuery UI Tabs: Mismatching fragment identifier.";
      }
      var v9927 = a$$663.browser;
      var v3331 = v9927.msie;
      if (v3331) {
        introspect(JAM.policy.p3) {
          this.blur();
        }
      }
      return;
    }
    function v1809(a$$673, b$$666, c$$533) {
      var v15657 = d$$399.lis;
      introspect(JAM.policy.p3) {
        v15657.removeClass("ui-tabs-selected ui-state-active");
      }
      introspect(JAM.policy.p3) {
        b$$666.addClass("ui-tabs-hide");
      }
      var v9928 = d$$399.element;
      introspect(JAM.policy.p3) {
        v9928.dequeue("tabs");
      }
      return;
    }
    function v1808(a$$672, b$$665) {
      function v1807() {
        var v21404 = d$$399.lis;
        introspect(JAM.policy.p3) {
          v21404.removeClass("ui-tabs-selected ui-state-active");
        }
        introspect(JAM.policy.p3) {
          b$$665.addClass("ui-tabs-hide");
        }
        m$$49(b$$665, k$$74);
        var v9929 = d$$399.element;
        introspect(JAM.policy.p3) {
          v9929.dequeue("tabs");
        }
        return;
      }
      var v9930 = k$$74.duration;
      var v15658 = !v9930;
      if (v15658) {
        v9930 = "normal";
      }
      var v3332 = v9930;
      introspect(JAM.policy.p3) {
        b$$665.animate(k$$74, v3332, v1807);
      }
      return;
    }
    function v1806(b$$664, c$$532) {
      introspect(JAM.policy.p3) {
        var v21405 = a$$663(b$$664)
      }
      introspect(JAM.policy.p3) {
        var v15659 = v21405.closest("li")
      }
      introspect(JAM.policy.p3) {
        v15659.addClass("ui-tabs-selected ui-state-active");
      }
      introspect(JAM.policy.p3) {
        c$$532.removeClass("ui-tabs-hide");
      }
      var v15660 = c$$532[0];
      introspect(JAM.policy.p3) {
        var v9931 = d$$399._ui(b$$664, v15660)
      }
      introspect(JAM.policy.p3) {
        d$$399._trigger("show", null, v9931);
      }
      return;
    }
    function v1805(b$$663, c$$531) {
      function v1804() {
        m$$49(c$$531, l$$80);
        var v15661 = c$$531[0];
        introspect(JAM.policy.p3) {
          var v9932 = d$$399._ui(b$$663, v15661)
        }
        introspect(JAM.policy.p3) {
          d$$399._trigger("show", null, v9932);
        }
        return;
      }
      introspect(JAM.policy.p3) {
        var v15662 = a$$663(b$$663)
      }
      introspect(JAM.policy.p3) {
        var v9933 = v15662.closest("li")
      }
      introspect(JAM.policy.p3) {
        v9933.addClass("ui-tabs-selected ui-state-active");
      }
      introspect(JAM.policy.p3) {
        var v15663 = c$$531.hide()
      }
      introspect(JAM.policy.p3) {
        var v9934 = v15663.removeClass("ui-tabs-hide")
      }
      var v15664 = l$$80.duration;
      var v21406 = !v15664;
      if (v21406) {
        v15664 = "normal";
      }
      var v9935 = v15664;
      introspect(JAM.policy.p3) {
        v9934.animate(l$$80, v9935, v1804);
      }
      return;
    }
    function v1803() {
      introspect(JAM.policy.p3) {
        var v3333 = a$$663(this)
      }
      introspect(JAM.policy.p3) {
        var b$$inline_78 = v3333.closest("li")
      }
      var v3334 = "ui-state-" + "focus";
      introspect(JAM.policy.p3) {
        b$$inline_78.removeClass(v3334);
      }
      return;
    }
    function v1802() {
      introspect(JAM.policy.p3) {
        var v9936 = a$$663(this)
      }
      introspect(JAM.policy.p3) {
        var v3335 = v9936.closest("li")
      }
      introspect(JAM.policy.p3) {
        i$$207("focus", v3335);
      }
      return;
    }
    function v1801() {
      introspect(JAM.policy.p3) {
        var b$$inline_75 = a$$663(this)
      }
      var v3336 = "ui-state-" + "hover";
      introspect(JAM.policy.p3) {
        b$$inline_75.removeClass(v3336);
      }
      return;
    }
    function v1800() {
      introspect(JAM.policy.p3) {
        var v3337 = a$$663(this)
      }
      introspect(JAM.policy.p3) {
        i$$207("hover", v3337);
      }
      return;
    }
    function v1799(a$$670, b$$661) {
      introspect(JAM.policy.p3) {
        var v3338 = b$$661.is(":not(.ui-state-disabled)")
      }
      if (v3338) {
        var v9937 = "ui-state-" + a$$670;
        introspect(JAM.policy.p3) {
          b$$661.addClass(v9937);
        }
      }
      return;
    }
    function v1798() {
      var v15665 = d$$399.lis;
      var v15666 = d$$399.anchors;
      introspect(JAM.policy.p3) {
        var v9938 = v15665.add(v15666)
      }
      introspect(JAM.policy.p3) {
        v9938.unbind(".tabs");
      }
      d$$399.lis = d$$399.anchors = d$$399.panels = null;
      return;
    }
    function v1797() {
      var v15667 = d$$399.anchors;
      var v15668 = e$$342.selected;
      var v9939 = v15667[v15668];
      var v21407 = d$$399.element;
      var v27835 = d$$399.anchors;
      var v27836 = e$$342.selected;
      var v26427 = v27835[v27836];
      var v24391 = v26427.hash;
      introspect(JAM.policy.p3) {
        var v21408 = d$$399._sanitizeSelector(v24391)
      }
      introspect(JAM.policy.p3) {
        var v15669 = v21407.find(v21408)
      }
      var v9940 = v15669[0];
      introspect(JAM.policy.p3) {
        var v3339 = d$$399._ui(v9939, v9940)
      }
      introspect(JAM.policy.p3) {
        d$$399._trigger("show", null, v3339);
      }
      return;
    }
    function v1796(a$$669, b$$660) {
      var v3340 = d$$399.lis;
      introspect(JAM.policy.p3) {
        return v3340.index(a$$669);
      }
    }
    function v1795(a$$668, b$$659) {
      var v9941 = b$$659.hash;
      var v9942 = location.hash;
      var v3341 = v9941 == v9942;
      if (v3341) {
        e$$342.selected = a$$668;
        return !1;
      }
      return;
    }
    function v1794(b$$658, c$$530) {
      introspect(JAM.policy.p3) {
        var v3342 = a$$663(c$$530)
      }
      introspect(JAM.policy.p3) {
        var g$$192 = v3342.attr("href")
      }
      introspect(JAM.policy.p3) {
        var v3343 = g$$192.split("#")
      }
      var h$$159 = v3343[0];
      var i$$208;
      var v9943 = h$$159;
      if (v9943) {
        introspect(JAM.policy.p3) {
          var v26428 = location.toString()
        }
        introspect(JAM.policy.p3) {
          var v24392 = v26428.split("#")
        }
        var v21409 = v24392[0];
        var v15670 = h$$159 === v21409;
        var v21411 = !v15670;
        if (v21411) {
          introspect(JAM.policy.p3) {
            var v24393 = a$$663("base")
          }
          var v21410 = i$$208 = v24393[0];
          if (v21410) {
            var v24394 = i$$208.href;
            v21410 = h$$159 === v24394;
          }
          v15670 = v21410;
        }
        v9943 = v15670;
      }
      var v3344 = v9943;
      if (v3344) {
        g$$192 = c$$530.hash;
        c$$530.href = g$$192;
      }
      introspect(JAM.policy.p3) {
        var v3350 = f$$177.test(g$$192)
      }
      if (v3350) {
        var v3345 = d$$399;
        var v9944 = d$$399.panels;
        var v15671 = d$$399.element;
        introspect(JAM.policy.p3) {
          var v15672 = d$$399._sanitizeSelector(g$$192)
        }
        introspect(JAM.policy.p3) {
          var v9945 = v15671.find(v15672)
        }
        introspect(JAM.policy.p3) {
          var v30962 = v9944.add(v9945)
        }
        v3345.panels = v30962;
      } else {
        var v9946 = g$$192;
        if (v9946) {
          v9946 = g$$192 !== "#";
        }
        var v3349 = v9946;
        if (v3349) {
          introspect(JAM.policy.p3) {
            a$$663.data(c$$530, "href.tabs", g$$192);
          }
          introspect(JAM.policy.p3) {
            var v9947 = g$$192.replace(/#.*$/, "")
          }
          introspect(JAM.policy.p3) {
            a$$663.data(c$$530, "load.tabs", v9947);
          }
          introspect(JAM.policy.p3) {
            var j$$107 = d$$399._tabId(c$$530)
          }
          c$$530.href = "#" + j$$107;
          var v3346 = d$$399.element;
          var v3347 = "#" + j$$107;
          introspect(JAM.policy.p3) {
            var k$$75 = v3346.find(v3347)
          }
          var v9948 = k$$75.length;
          var v15673 = !v9948;
          if (v15673) {
            var v27837 = e$$342.panelTemplate;
            introspect(JAM.policy.p3) {
              var v26429 = a$$663(v27837)
            }
            introspect(JAM.policy.p3) {
              var v24395 = v26429.attr("id", j$$107)
            }
            introspect(JAM.policy.p3) {
              var v21412 = v24395.addClass("ui-tabs-panel ui-widget-content ui-corner-bottom")
            }
            var v26430 = d$$399.panels;
            var v26431 = b$$658 - 1;
            var v24396 = v26430[v26431];
            var v26432 = !v24396;
            if (v26432) {
              v24396 = d$$399.list;
            }
            var v21413 = v24396;
            introspect(JAM.policy.p3) {
              k$$75 = v21412.insertAfter(v21413);
            }
            var v21414 = !0;
            introspect(JAM.policy.p3) {
              k$$75.data("destroy.tabs", v21414);
            }
          }
          var v9949 = d$$399;
          var v15674 = d$$399.panels;
          introspect(JAM.policy.p3) {
            var v30963 = v15674.add(k$$75)
          }
          v9949.panels = v30963;
        } else {
          var v3348 = e$$342.disabled;
          introspect(JAM.policy.p3) {
            v3348.push(b$$658);
          }
        }
      }
      return;
    }
    function v1793() {
      introspect(JAM.policy.p3) {
        var v3351 = a$$663("a", this)
      }
      return v3351[0];
    }
    function m$$49(b$$657, c$$529) {
      introspect(JAM.policy.p3) {
        b$$657.css("display", "");
      }
      var v24397 = a$$663.support;
      var v21415 = v24397.opacity;
      var v15675 = !v21415;
      if (v15675) {
        v15675 = c$$529.opacity;
      }
      var v9950 = v15675;
      if (v9950) {
        var v21416 = b$$657[0];
        var v15676 = v21416.style;
        introspect(JAM.policy.p3) {
          v15676.removeAttribute("filter");
        }
      }
      return;
    }
    var d$$399 = this;
    var e$$342 = this.options;
    var f$$177 = /^#.+/;
    var v29402 = this.element;
    introspect(JAM.policy.p3) {
      var v28766 = v29402.find("ol,ul")
    }
    introspect(JAM.policy.p3) {
      var v30964 = v28766.eq(0)
    }
    this.list = v30964;
    var v28767 = this.list;
    introspect(JAM.policy.p3) {
      var v30965 = a$$663(" > li:has(a[href])", v28767)
    }
    this.lis = v30965;
    var v27838 = this.lis;
    introspect(JAM.policy.p3) {
      var v30966 = v27838.map(v1793)
    }
    this.anchors = v30966;
    introspect(JAM.policy.p3) {
      var v30967 = a$$663([])
    }
    this.panels = v30967;
    var v24398 = this.anchors;
    introspect(JAM.policy.p3) {
      v24398.each(v1794);
    }
    var v21417;
    if (c$$528) {
      var v30705 = this.element;
      introspect(JAM.policy.p3) {
        v30705.addClass("ui-tabs ui-widget ui-widget-content ui-corner-all");
      }
      var v30706 = this.list;
      introspect(JAM.policy.p3) {
        v30706.addClass("ui-tabs-nav ui-helper-reset ui-helper-clearfix ui-widget-header ui-corner-all");
      }
      var v30648 = this.lis;
      introspect(JAM.policy.p3) {
        v30648.addClass("ui-state-default ui-corner-top");
      }
      var v30560 = this.panels;
      introspect(JAM.policy.p3) {
        v30560.addClass("ui-tabs-panel ui-widget-content ui-corner-bottom");
      }
      var v30425;
      var v30649 = e$$342.selected;
      var v30562 = v30649 === b$$652;
      if (v30562) {
        var v30753 = location.hash;
        if (v30753) {
          var v30782 = this.anchors;
          introspect(JAM.policy.p3) {
            v30782.each(v1795);
          }
        }
        var v30830 = e$$342.selected;
        var v30808 = typeof v30830;
        var v30783 = v30808 != "number";
        if (v30783) {
          v30783 = e$$342.cookie;
        }
        var v30754 = v30783;
        if (v30754) {
          var v30784 = e$$342;
          introspect(JAM.policy.p3) {
            var v30809 = d$$399._cookie()
          }
          var v30968 = parseInt(v30809, 10);
          v30784.selected = v30968;
        }
        var v30810 = e$$342.selected;
        var v30785 = typeof v30810;
        var v30755 = v30785 != "number";
        if (v30755) {
          var v30811 = this.lis;
          introspect(JAM.policy.p3) {
            var v30786 = v30811.filter(".ui-tabs-selected")
          }
          v30755 = v30786.length;
        }
        var v30707 = v30755;
        if (v30707) {
          var v30756 = e$$342;
          var v30787 = this.lis;
          var v30812 = this.lis;
          introspect(JAM.policy.p3) {
            var v30788 = v30812.filter(".ui-tabs-selected")
          }
          introspect(JAM.policy.p3) {
            var v30969 = v30787.index(v30788)
          }
          v30756.selected = v30969;
        }
        var v30650 = e$$342.selected;
        var v30709 = !v30650;
        if (v30709) {
          var v30708;
          var v30789 = this.lis;
          var v30757 = v30789.length;
          if (v30757) {
            v30708 = 0;
          } else {
            v30708 = -1;
          }
          v30650 = v30708;
        }
        v30425 = e$$342.selected = v30650;
      } else {
        var v30651 = e$$342.selected;
        var v30561 = v30651 === null;
        if (v30561) {
          v30561 = e$$342.selected = -1;
        }
        v30425 = v30561;
      }
      v30425;
      var v30269;
      var v30710 = e$$342.selected;
      var v30652 = v30710 >= 0;
      if (v30652) {
        var v30711 = this.anchors;
        var v30712 = e$$342.selected;
        v30652 = v30711[v30712];
      }
      var v30563 = v30652;
      var v30654 = !v30563;
      if (v30654) {
        var v30653 = e$$342.selected;
        v30563 = v30653 < 0;
      }
      var v30426 = v30563;
      if (v30426) {
        v30269 = e$$342.selected;
      } else {
        v30269 = 0;
      }
      e$$342.selected = v30269;
      var v30045 = e$$342;
      var v30564 = e$$342.disabled;
      var v30713 = this.lis;
      introspect(JAM.policy.p3) {
        var v30655 = v30713.filter(".ui-state-disabled")
      }
      introspect(JAM.policy.p3) {
        var v30565 = a$$663.map(v30655, v1796)
      }
      introspect(JAM.policy.p3) {
        var v30427 = v30564.concat(v30565)
      }
      introspect(JAM.policy.p3) {
        var v30270 = a$$663.unique(v30427)
      }
      introspect(JAM.policy.p3) {
        var v30970 = v30270.sort()
      }
      v30045.disabled = v30970;
      var v30271 = e$$342.selected;
      var v30272 = e$$342.disabled;
      introspect(JAM.policy.p3) {
        var v30046 = a$$663.inArray(v30271, v30272)
      }
      var v29781 = v30046 != -1;
      if (v29781) {
        var v30047 = e$$342.disabled;
        var v30273 = e$$342.selected;
        var v30274 = e$$342.disabled;
        introspect(JAM.policy.p3) {
          var v30048 = a$$663.inArray(v30273, v30274)
        }
        introspect(JAM.policy.p3) {
          v30047.splice(v30048, 1);
        }
      }
      var v29403 = this.panels;
      introspect(JAM.policy.p3) {
        v29403.addClass("ui-tabs-hide");
      }
      var v28768 = this.lis;
      introspect(JAM.policy.p3) {
        v28768.removeClass("ui-tabs-selected ui-state-active");
      }
      var v29404 = e$$342.selected;
      var v28769 = v29404 >= 0;
      if (v28769) {
        var v29405 = this.anchors;
        v28769 = v29405.length;
      }
      var v27839 = v28769;
      if (v27839) {
        var v30275 = d$$399.element;
        var v30656 = d$$399.anchors;
        var v30657 = e$$342.selected;
        var v30566 = v30656[v30657];
        var v30428 = v30566.hash;
        introspect(JAM.policy.p3) {
          var v30276 = d$$399._sanitizeSelector(v30428)
        }
        introspect(JAM.policy.p3) {
          var v30049 = v30275.find(v30276)
        }
        introspect(JAM.policy.p3) {
          v30049.removeClass("ui-tabs-hide");
        }
        var v30277 = this.lis;
        var v30278 = e$$342.selected;
        introspect(JAM.policy.p3) {
          var v30050 = v30277.eq(v30278)
        }
        introspect(JAM.policy.p3) {
          v30050.addClass("ui-tabs-selected ui-state-active");
        }
        var v29782 = d$$399.element;
        introspect(JAM.policy.p3) {
          v29782.queue("tabs", v1797);
        }
        var v29406 = e$$342.selected;
        introspect(JAM.policy.p3) {
          this.load(v29406);
        }
      }
      introspect(JAM.policy.p3) {
        var v26433 = a$$663(window)
      }
      introspect(JAM.policy.p3) {
        v21417 = v26433.bind("unload", v1798);
      }
    } else {
      var v24399 = e$$342;
      var v26434 = this.lis;
      var v27840 = this.lis;
      introspect(JAM.policy.p3) {
        var v26435 = v27840.filter(".ui-tabs-selected")
      }
      introspect(JAM.policy.p3) {
        var v30971 = v26434.index(v26435)
      }
      v21417 = v24399.selected = v30971;
    }
    v21417;
    var v15677 = this.element;
    var v21418;
    var v24400 = e$$342.collapsible;
    if (v24400) {
      v21418 = "addClass";
    } else {
      v21418 = "removeClass";
    }
    var v15678 = v21418;
    introspect(JAM.policy.p3) {
      v15677[v15678]("ui-tabs-collapsible");
    }
    var v9951 = e$$342.cookie;
    if (v9951) {
      var v15679 = e$$342.selected;
      var v15680 = e$$342.cookie;
      introspect(JAM.policy.p3) {
        this._cookie(v15679, v15680);
      }
    }
    var g$$191 = 0;
    var h$$158;
    var v9952 = this.lis;
    var v3354 = h$$158 = v9952[g$$191];
    for (;v3354;) {
      introspect(JAM.policy.p3) {
        var v3352 = a$$663(h$$158)
      }
      var v9953;
      var v26436 = e$$342.disabled;
      introspect(JAM.policy.p3) {
        var v24401 = a$$663.inArray(g$$191, v26436)
      }
      var v21419 = v24401 != -1;
      if (v21419) {
        introspect(JAM.policy.p3) {
          var v26437 = a$$663(h$$158)
        }
        introspect(JAM.policy.p3) {
          var v24402 = v26437.hasClass("ui-tabs-selected")
        }
        v21419 = !v24402;
      }
      var v15681 = v21419;
      if (v15681) {
        v9953 = "addClass";
      } else {
        v9953 = "removeClass";
      }
      var v3353 = v9953;
      introspect(JAM.policy.p3) {
        v3352[v3353]("ui-state-disabled");
      }
      g$$191++;
      var v9954 = this.lis;
      v3354 = h$$158 = v9954[g$$191];
    }
    var v15682 = e$$342.cache;
    var v15683 = !1;
    var v9955 = v15682 === v15683;
    if (v9955) {
      var v15684 = this.anchors;
      introspect(JAM.policy.p3) {
        v15684.removeData("cache.tabs");
      }
    }
    var v15685 = this.lis;
    var v15686 = this.anchors;
    introspect(JAM.policy.p3) {
      var v9956 = v15685.add(v15686)
    }
    introspect(JAM.policy.p3) {
      v9956.unbind(".tabs");
    }
    var v9957 = e$$342.event;
    var v3355 = v9957 !== "mouseover";
    if (v3355) {
      var i$$207 = v1799;
      var v21420 = this.lis;
      introspect(JAM.policy.p3) {
        v21420.bind("mouseover.tabs", v1800);
      }
      var v21421 = this.lis;
      introspect(JAM.policy.p3) {
        v21421.bind("mouseout.tabs", v1801);
      }
      var v15687 = this.anchors;
      introspect(JAM.policy.p3) {
        v15687.bind("focus.tabs", v1802);
      }
      var v9958 = this.anchors;
      introspect(JAM.policy.p3) {
        v9958.bind("blur.tabs", v1803);
      }
    }
    var k$$74;
    var l$$80;
    var v3356 = e$$342.fx;
    if (v3356) {
      var v9959;
      var v21422 = e$$342.fx;
      introspect(JAM.policy.p3) {
        var v15688 = a$$663.isArray(v21422)
      }
      if (v15688) {
        var v21423 = e$$342.fx;
        k$$74 = v21423[0];
        var v21424 = e$$342.fx;
        v9959 = l$$80 = v21424[1];
      } else {
        v9959 = k$$74 = l$$80 = e$$342.fx;
      }
      v9959;
    }
    var v3357;
    if (l$$80) {
      v3357 = v1805;
    } else {
      v3357 = v1806;
    }
    var n$$95 = v3357;
    var v3358;
    if (k$$74) {
      v3358 = v1808;
    } else {
      v3358 = v1809;
    }
    var o$$25 = v3358;
    var v9960 = this.anchors;
    var v15689 = e$$342.event;
    var v9961 = v15689 + ".tabs";
    introspect(JAM.policy.p3) {
      v9960.bind(v9961, v1814);
    }
    var v9962 = this.anchors;
    introspect(JAM.policy.p3) {
      v9962.bind("click.tabs", v1815);
    }
    return;
  }
  function v1792() {
    function v1791() {
      introspect(JAM.policy.p3) {
        var b$$656 = a$$663(this)
      }
      introspect(JAM.policy.p3) {
        var v9963 = b$$656.data("label.tabs")
      }
      introspect(JAM.policy.p3) {
        var v3359 = b$$656.html(v9963)
      }
      introspect(JAM.policy.p3) {
        v3359.removeData("label.tabs");
      }
      return;
    }
    var v21425 = this.lis;
    introspect(JAM.policy.p3) {
      var v15690 = v21425.filter(".ui-state-processing")
    }
    introspect(JAM.policy.p3) {
      var v9964 = v15690.removeClass("ui-state-processing")
    }
    introspect(JAM.policy.p3) {
      var v3360 = v9964.find("span:data(label.tabs)")
    }
    introspect(JAM.policy.p3) {
      v3360.each(v1791);
    }
    return;
  }
  function v1790(a$$667, b$$655) {
    var v9965 = this.anchors;
    introspect(JAM.policy.p3) {
      var v3361 = v9965.index(a$$667)
    }
    return {tab:a$$667, panel:b$$655, index:v3361};
  }
  function v1789() {
    var v3362 = this.cookie;
    var v9967 = !v3362;
    if (v9967) {
      var v21426 = this.options;
      var v15691 = v21426.cookie;
      var v9966 = v15691.name;
      var v15693 = !v9966;
      if (v15693) {
        var v15692 = d$$398 = d$$398 + 1;
        v9966 = "ui-tabs-" + v15692;
      }
      introspect(JAM.policy.p2) {
        v3362 = this.cookie = v9966;
      }
    }
    var b$$654 = v3362;
    var v3363 = a$$663.cookie;
    var v9968 = [b$$654];
    introspect(JAM.policy.p3) {
      var v9969 = a$$663.makeArray(arguments)
    }
    introspect(JAM.policy.p3) {
      var v3364 = v9968.concat(v9969)
    }
    introspect(JAM.policy.p3) {
      return v3363.apply(null, v3364);
    }
  }
  function v1788(a$$666) {
    introspect(JAM.policy.p3) {
      return a$$666.replace(/:/g, "\\:");
    }
  }
  function v1787(a$$665) {
    var v9970 = a$$665.title;
    if (v9970) {
      var v21427 = a$$665.title;
      introspect(JAM.policy.p3) {
        var v15694 = v21427.replace(/\s/g, "_")
      }
      introspect(JAM.policy.p3) {
        v9970 = v15694.replace(/[^\w\u00c0-\uFFFF-]/g, "");
      }
    }
    var v3365 = v9970;
    var v9973 = !v3365;
    if (v9973) {
      var v15695 = this.options;
      var v9971 = v15695.idPrefix;
      var v9972 = c$$527 = c$$527 + 1;
      v3365 = v9971 + v9972;
    }
    return v3365;
  }
  function v1786(a$$664, b$$653) {
    var v3367 = a$$664 == "selected";
    if (v3367) {
      var v15696 = this.options;
      var v9974 = v15696.collapsible;
      if (v9974) {
        var v21428 = this.options;
        var v15697 = v21428.selected;
        v9974 = b$$653 == v15697;
      }
      var v3366 = v9974;
      if (v3366) {
        return;
      }
      introspect(JAM.policy.p3) {
        this.select(b$$653);
      }
    } else {
      var v9975 = this.options;
      introspect(JAM.policy.p2) {
        v9975[a$$664] = b$$653;
      }
      introspect(JAM.policy.p3) {
        this._tabify();
      }
    }
    return;
  }
  function v1785() {
    var v3368 = !0;
    introspect(JAM.policy.p3) {
      this._tabify(v3368);
    }
    return;
  }
  var c$$527 = 0;
  var d$$398 = 0;
  var v24403 = !1;
  var v24404 = !1;
  var v21429 = {add:null, ajaxOptions:null, cache:v24403, cookie:null, collapsible:v24404, disable:null, disabled:[], enable:null, event:"click", fx:null, idPrefix:"ui-tabs-", load:null, panelTemplate:"<div></div>", remove:null, select:null, show:null, spinner:"<em>Loading&#8230;</em>", tabTemplate:"<li><a href='#{href}'><span>#{label}</span></a></li>"};
  var v15698 = {options:v21429, _create:v1785, _setOption:v1786, _tabId:v1787, _sanitizeSelector:v1788, _cookie:v1789, _ui:v1790, _cleanup:v1792, _tabify:v1816, _getIndex:v1817, destroy:v1821, add:v1824, remove:v1827, enable:v1829, disable:v1830, select:v1831, load:v1834, abort:v1835, url:v1836, length:v1837};
  introspect(JAM.policy.p3) {
    a$$663.widget("ui.tabs", v15698);
  }
  var v21430 = a$$663.ui;
  var v15699 = v21430.tabs;
  var v15700 = {version:"1.8.24"};
  introspect(JAM.policy.p3) {
    a$$663.extend(v15699, v15700);
  }
  var v21431 = a$$663.ui;
  var v15701 = v21431.tabs;
  var v9976 = v15701.prototype;
  var v9977 = {rotation:null, rotate:v1842};
  introspect(JAM.policy.p3) {
    a$$663.extend(v9976, v9977);
  }
  return;
}
function v1784(a$$649, b$$635) {
  function v1783() {
    function v1782(b$$651, i$$206) {
      introspect(JAM.policy.p3) {
        var v27841 = d$$397.values(b$$651)
      }
      var v28770 = d$$397.options;
      var v27842 = v28770.min;
      var v26438 = v27841 - v27842;
      var v28771 = d$$397.options;
      var v27843 = v28771.max;
      var v28772 = d$$397.options;
      var v27844 = v28772.min;
      var v26439 = v27843 - v27844;
      var v24405 = v26438 / v26439;
      f$$175 = v24405 * 100;
      var v26440;
      var v28773 = d$$397.orientation;
      var v27845 = v28773 === "horizontal";
      if (v27845) {
        v26440 = "left";
      } else {
        v26440 = "bottom";
      }
      var v24406 = v26440;
      introspect(JAM.policy.p2) {
        g$$190[v24406] = f$$175 + "%";
      }
      introspect(JAM.policy.p3) {
        var v24407 = a$$649(this)
      }
      introspect(JAM.policy.p3) {
        var v21432 = v24407.stop(1, 1)
      }
      var v24408;
      if (e$$340) {
        v24408 = "animate";
      } else {
        v24408 = "css";
      }
      var v21433 = v24408;
      var v21434 = c$$526.animate;
      introspect(JAM.policy.p3) {
        v21432[v21433](g$$190, v21434);
      }
      var v24409 = d$$397.options;
      var v21435 = v24409.range;
      var v21436 = !0;
      var v15702 = v21435 === v21436;
      if (v15702) {
        var v21437;
        var v26441 = d$$397.orientation;
        var v24410 = v26441 === "horizontal";
        if (v24410) {
          var v26442 = b$$651 === 0;
          if (v26442) {
            var v28774 = d$$397.range;
            introspect(JAM.policy.p3) {
              var v27846 = v28774.stop(1, 1)
            }
            var v28775;
            if (e$$340) {
              v28775 = "animate";
            } else {
              v28775 = "css";
            }
            var v27847 = v28775;
            var v28776 = f$$175 + "%";
            var v27848 = {left:v28776};
            var v27849 = c$$526.animate;
            introspect(JAM.policy.p3) {
              v27846[v27847](v27848, v27849);
            }
          }
          var v26443 = b$$651 === 1;
          if (v26443) {
            var v27850 = d$$397.range;
            var v28777;
            if (e$$340) {
              v28777 = "animate";
            } else {
              v28777 = "css";
            }
            var v27851 = v28777;
            var v29407 = f$$175 - h$$157;
            var v28778 = v29407 + "%";
            var v27852 = {width:v28778};
            var v28779 = !1;
            var v28780 = c$$526.animate;
            var v27853 = {queue:v28779, duration:v28780};
            introspect(JAM.policy.p3) {
              v26443 = v27850[v27851](v27852, v27853);
            }
          }
          v21437 = v26443;
        } else {
          var v26444 = b$$651 === 0;
          if (v26444) {
            var v28781 = d$$397.range;
            introspect(JAM.policy.p3) {
              var v27854 = v28781.stop(1, 1)
            }
            var v28782;
            if (e$$340) {
              v28782 = "animate";
            } else {
              v28782 = "css";
            }
            var v27855 = v28782;
            var v28783 = f$$175 + "%";
            var v27856 = {bottom:v28783};
            var v27857 = c$$526.animate;
            introspect(JAM.policy.p3) {
              v27854[v27855](v27856, v27857);
            }
          }
          var v26445 = b$$651 === 1;
          if (v26445) {
            var v27858 = d$$397.range;
            var v28784;
            if (e$$340) {
              v28784 = "animate";
            } else {
              v28784 = "css";
            }
            var v27859 = v28784;
            var v29408 = f$$175 - h$$157;
            var v28785 = v29408 + "%";
            var v27860 = {height:v28785};
            var v28786 = !1;
            var v28787 = c$$526.animate;
            var v27861 = {queue:v28786, duration:v28787};
            introspect(JAM.policy.p3) {
              v26445 = v27858[v27859](v27860, v27861);
            }
          }
          v21437 = v26445;
        }
        v21437;
      }
      h$$157 = f$$175;
      return;
    }
    var v3369 = this.options;
    var b$$650 = v3369.range;
    var c$$526 = this.options;
    var d$$397 = this;
    var v3370;
    var v9978 = this._animateOff;
    if (v9978) {
      v3370 = !1;
    } else {
      v3370 = c$$526.animate;
    }
    var e$$340 = v3370;
    var f$$175;
    var g$$190 = {};
    var h$$157;
    var i$$205;
    var j$$105;
    var k$$73;
    var v3371;
    var v21438 = this.options;
    var v15703 = v21438.values;
    if (v15703) {
      var v24411 = this.options;
      var v21439 = v24411.values;
      v15703 = v21439.length;
    }
    var v9980 = v15703;
    if (v9980) {
      var v9979 = this.handles;
      introspect(JAM.policy.p3) {
        v3371 = v9979.each(v1782);
      }
    } else {
      introspect(JAM.policy.p3) {
        i$$205 = this.value();
      }
      var v30051 = this.options;
      j$$105 = v30051.min;
      var v29783 = this.options;
      k$$73 = v29783.max;
      var v29409;
      var v29785 = k$$73 !== j$$105;
      if (v29785) {
        var v30052 = i$$205 - j$$105;
        var v30053 = k$$73 - j$$105;
        var v29784 = v30052 / v30053;
        v29409 = v29784 * 100;
      } else {
        v29409 = 0;
      }
      f$$175 = v29409;
      var v29410;
      var v30054 = d$$397.orientation;
      var v29786 = v30054 === "horizontal";
      if (v29786) {
        v29410 = "left";
      } else {
        v29410 = "bottom";
      }
      var v28788 = v29410;
      introspect(JAM.policy.p2) {
        g$$190[v28788] = f$$175 + "%";
      }
      var v28789 = this.handle;
      introspect(JAM.policy.p3) {
        var v27862 = v28789.stop(1, 1)
      }
      var v28790;
      if (e$$340) {
        v28790 = "animate";
      } else {
        v28790 = "css";
      }
      var v27863 = v28790;
      var v27864 = c$$526.animate;
      introspect(JAM.policy.p3) {
        v27862[v27863](g$$190, v27864);
      }
      var v27865 = b$$650 === "min";
      if (v27865) {
        var v28791 = this.orientation;
        v27865 = v28791 === "horizontal";
      }
      var v26446 = v27865;
      if (v26446) {
        var v28792 = this.range;
        introspect(JAM.policy.p3) {
          var v27866 = v28792.stop(1, 1)
        }
        var v28793;
        if (e$$340) {
          v28793 = "animate";
        } else {
          v28793 = "css";
        }
        var v27867 = v28793;
        var v28794 = f$$175 + "%";
        var v27868 = {width:v28794};
        var v27869 = c$$526.animate;
        introspect(JAM.policy.p3) {
          v27866[v27867](v27868, v27869);
        }
      }
      var v26447 = b$$650 === "max";
      if (v26447) {
        var v27870 = this.orientation;
        v26447 = v27870 === "horizontal";
      }
      var v24412 = v26447;
      if (v24412) {
        var v26448 = this.range;
        var v27871;
        if (e$$340) {
          v27871 = "animate";
        } else {
          v27871 = "css";
        }
        var v26449 = v27871;
        var v28795 = 100 - f$$175;
        var v27872 = v28795 + "%";
        var v26450 = {width:v27872};
        var v27873 = !1;
        var v27874 = c$$526.animate;
        var v26451 = {queue:v27873, duration:v27874};
        introspect(JAM.policy.p3) {
          v26448[v26449](v26450, v26451);
        }
      }
      var v24413 = b$$650 === "min";
      if (v24413) {
        var v26452 = this.orientation;
        v24413 = v26452 === "vertical";
      }
      var v21440 = v24413;
      if (v21440) {
        var v26453 = this.range;
        introspect(JAM.policy.p3) {
          var v24414 = v26453.stop(1, 1)
        }
        var v26454;
        if (e$$340) {
          v26454 = "animate";
        } else {
          v26454 = "css";
        }
        var v24415 = v26454;
        var v26455 = f$$175 + "%";
        var v24416 = {height:v26455};
        var v24417 = c$$526.animate;
        introspect(JAM.policy.p3) {
          v24414[v24415](v24416, v24417);
        }
      }
      var v21441 = b$$650 === "max";
      if (v21441) {
        var v24418 = this.orientation;
        v21441 = v24418 === "vertical";
      }
      var v15704 = v21441;
      if (v15704) {
        var v21442 = this.range;
        var v24419;
        if (e$$340) {
          v24419 = "animate";
        } else {
          v24419 = "css";
        }
        var v21443 = v24419;
        var v26456 = 100 - f$$175;
        var v24420 = v26456 + "%";
        var v21444 = {height:v24420};
        var v24421 = !1;
        var v24422 = c$$526.animate;
        var v21445 = {queue:v24421, duration:v24422};
        introspect(JAM.policy.p3) {
          v15704 = v21442[v21443](v21444, v21445);
        }
      }
      v3371 = v15704;
    }
    v3371;
    return;
  }
  function v1781() {
    var v3372 = this.options;
    return v3372.max;
  }
  function v1780() {
    var v3373 = this.options;
    return v3373.min;
  }
  function v1779(a$$662) {
    var v15705 = this.options;
    var v9981 = v15705.min;
    var v3375 = a$$662 <= v9981;
    if (v3375) {
      var v3374 = this.options;
      return v3374.min;
    }
    var v15706 = this.options;
    var v9982 = v15706.max;
    var v3377 = a$$662 >= v9982;
    if (v3377) {
      var v3376 = this.options;
      return v3376.max;
    }
    var v3378;
    var v21446 = this.options;
    var v15707 = v21446.step;
    var v9984 = v15707 > 0;
    if (v9984) {
      var v9983 = this.options;
      v3378 = v9983.step;
    } else {
      v3378 = 1;
    }
    var b$$649 = v3378;
    var v15708 = this.options;
    var v9985 = v15708.min;
    var v3379 = a$$662 - v9985;
    var c$$525 = v3379 % b$$649;
    var d$$396 = a$$662 - c$$525;
    introspect(JAM.policy.p3) {
      var v21447 = Math.abs(c$$525)
    }
    var v15709 = v21447 * 2;
    var v9986 = v15709 >= b$$649;
    if (v9986) {
      var v24423;
      var v26457 = c$$525 > 0;
      if (v26457) {
        v24423 = b$$649;
      } else {
        v24423 = -b$$649;
      }
      var v21448 = v24423;
      d$$396 = d$$396 + v21448;
    }
    introspect(JAM.policy.p3) {
      var v9987 = d$$396.toFixed(5)
    }
    return parseFloat(v9987);
  }
  function v1778(a$$661) {
    var b$$648;
    var c$$524;
    var d$$395;
    var v3380 = arguments.length;
    if (v3380) {
      var v21449 = this.options;
      var v15710 = v21449.values;
      b$$648 = v15710[a$$661];
      introspect(JAM.policy.p3) {
        b$$648 = this._trimAlignValue(b$$648);
      }
      return b$$648;
    }
    var v9988 = this.options;
    var v3381 = v9988.values;
    introspect(JAM.policy.p3) {
      c$$524 = v3381.slice();
    }
    d$$395 = 0;
    var v9989 = c$$524.length;
    var v3383 = d$$395 < v9989;
    for (;v3383;) {
      var v3382 = c$$524[d$$395];
      introspect(JAM.policy.p3) {
        var v30972 = this._trimAlignValue(v3382)
      }
      introspect(JAM.policy.p2) {
        c$$524[d$$395] = v30972;
      }
      d$$395 = d$$395 + 1;
      var v9990 = c$$524.length;
      v3383 = d$$395 < v9990;
    }
    return c$$524;
  }
  function v1777() {
    var v3384 = this.options;
    var a$$660 = v3384.value;
    introspect(JAM.policy.p3) {
      a$$660 = this._trimAlignValue(a$$660);
    }
    return a$$660;
  }
  function v1776(b$$647, c$$523) {
    var d$$394;
    var e$$339 = 0;
    var v21450 = this.options;
    var v15711 = v21450.values;
    introspect(JAM.policy.p3) {
      var v9991 = a$$649.isArray(v15711)
    }
    if (v9991) {
      var v21451 = this.options;
      var v15712 = v21451.values;
      e$$339 = v15712.length;
    }
    var v21452 = a$$649.Widget;
    var v15713 = v21452.prototype;
    var v9992 = v15713._setOption;
    introspect(JAM.policy.p3) {
      v9992.apply(this, arguments);
    }
    switch(b$$647) {
      case "disabled":
        var v3385;
        if (c$$523) {
          var v26458 = this.handles;
          introspect(JAM.policy.p3) {
            var v24424 = v26458.filter(".ui-state-focus")
          }
          introspect(JAM.policy.p3) {
            v24424.blur();
          }
          var v24425 = this.handles;
          introspect(JAM.policy.p3) {
            v24425.removeClass("ui-state-hover");
          }
          var v21453 = this.handles;
          var v21454 = !0;
          introspect(JAM.policy.p3) {
            v21453.propAttr("disabled", v21454);
          }
          var v15714 = this.element;
          introspect(JAM.policy.p3) {
            v3385 = v15714.addClass("ui-disabled");
          }
        } else {
          var v15715 = this.handles;
          var v15716 = !1;
          introspect(JAM.policy.p3) {
            v15715.propAttr("disabled", v15716);
          }
          var v15717 = this.element;
          introspect(JAM.policy.p3) {
            v3385 = v15717.removeClass("ui-disabled");
          }
        }
        v3385;
        break;
      case "orientation":
        introspect(JAM.policy.p3) {
          this._detectOrientation();
        }
        var v21455 = this.element;
        introspect(JAM.policy.p3) {
          var v15718 = v21455.removeClass("ui-slider-horizontal ui-slider-vertical")
        }
        var v21456 = this.orientation;
        var v15719 = "ui-slider-" + v21456;
        introspect(JAM.policy.p3) {
          v15718.addClass(v15719);
        }
        introspect(JAM.policy.p3) {
          this._refreshValue();
        }
        break;
      case "value":
        this._animateOff = !0;
        introspect(JAM.policy.p3) {
          this._refreshValue();
        }
        introspect(JAM.policy.p3) {
          this._change(null, 0);
        }
        this._animateOff = !1;
        break;
      case "values":
        this._animateOff = !0;
        introspect(JAM.policy.p3) {
          this._refreshValue();
        }
        d$$394 = 0;
        var v3386 = d$$394 < e$$339;
        for (;v3386;) {
          introspect(JAM.policy.p3) {
            this._change(null, d$$394);
          }
          d$$394 = d$$394 + 1;
          v3386 = d$$394 < e$$339;
        }
        this._animateOff = !1;
    }
    return;
  }
  function v1775(b$$646, c$$522) {
    var d$$393;
    var e$$338;
    var f$$174;
    var v9993 = arguments.length;
    var v3387 = v9993 > 1;
    if (v3387) {
      var v21457 = this.options;
      var v15720 = v21457.values;
      introspect(JAM.policy.p3) {
        var v30973 = this._trimAlignValue(c$$522)
      }
      introspect(JAM.policy.p2) {
        v15720[b$$646] = v30973;
      }
      introspect(JAM.policy.p3) {
        this._refreshValue();
      }
      introspect(JAM.policy.p3) {
        this._change(null, b$$646);
      }
      return;
    }
    var v9994 = arguments.length;
    var v3388 = !v9994;
    if (v3388) {
      introspect(JAM.policy.p3) {
        return this._values();
      }
    }
    var v15721 = arguments[0];
    introspect(JAM.policy.p3) {
      var v9995 = a$$649.isArray(v15721)
    }
    var v3390 = !v9995;
    if (v3390) {
      var v3389;
      var v21458 = this.options;
      var v15722 = v21458.values;
      if (v15722) {
        var v24426 = this.options;
        var v21459 = v24426.values;
        v15722 = v21459.length;
      }
      var v9996 = v15722;
      if (v9996) {
        introspect(JAM.policy.p3) {
          v3389 = this._values(b$$646);
        }
      } else {
        introspect(JAM.policy.p3) {
          v3389 = this.value();
        }
      }
      return v3389;
    }
    var v9997 = this.options;
    d$$393 = v9997.values;
    e$$338 = arguments[0];
    f$$174 = 0;
    var v9998 = d$$393.length;
    var v3391 = f$$174 < v9998;
    for (;v3391;) {
      var v9999 = e$$338[f$$174];
      introspect(JAM.policy.p3) {
        var v30974 = this._trimAlignValue(v9999)
      }
      introspect(JAM.policy.p2) {
        d$$393[f$$174] = v30974;
      }
      introspect(JAM.policy.p3) {
        this._change(null, f$$174);
      }
      f$$174 = f$$174 + 1;
      var v10000 = d$$393.length;
      v3391 = f$$174 < v10000;
    }
    introspect(JAM.policy.p3) {
      this._refreshValue();
    }
    return;
  }
  function v1774(a$$659) {
    var v3392 = arguments.length;
    if (v3392) {
      var v15723 = this.options;
      introspect(JAM.policy.p3) {
        var v30975 = this._trimAlignValue(a$$659)
      }
      v15723.value = v30975;
      introspect(JAM.policy.p3) {
        this._refreshValue();
      }
      introspect(JAM.policy.p3) {
        this._change(null, 0);
      }
      return;
    }
    introspect(JAM.policy.p3) {
      return this._value();
    }
  }
  function v1773(a$$658, b$$645) {
    var v15724 = this._keySliding;
    var v10001 = !v15724;
    if (v10001) {
      var v15725 = this._mouseSliding;
      v10001 = !v15725;
    }
    var v3395 = v10001;
    if (v3395) {
      var v10002 = this.handles;
      var v3393 = v10002[b$$645];
      introspect(JAM.policy.p3) {
        var v3394 = this.value()
      }
      var c$$521 = {handle:v3393, value:v3394};
      var v21460 = this.options;
      var v15726 = v21460.values;
      if (v15726) {
        var v24427 = this.options;
        var v21461 = v24427.values;
        v15726 = v21461.length;
      }
      var v10003 = v15726;
      if (v10003) {
        introspect(JAM.policy.p3) {
          var v30976 = this.values(b$$645)
        }
        c$$521.value = v30976;
        introspect(JAM.policy.p3) {
          var v30977 = this.values()
        }
        c$$521.values = v30977;
      }
      introspect(JAM.policy.p3) {
        this._trigger("change", a$$658, c$$521);
      }
    }
    return;
  }
  function v1772(a$$657, b$$644) {
    var v10004 = this.handles;
    var v3396 = v10004[b$$644];
    introspect(JAM.policy.p3) {
      var v3397 = this.value()
    }
    var c$$520 = {handle:v3396, value:v3397};
    var v21462 = this.options;
    var v15727 = v21462.values;
    if (v15727) {
      var v24428 = this.options;
      var v21463 = v24428.values;
      v15727 = v21463.length;
    }
    var v10005 = v15727;
    if (v10005) {
      introspect(JAM.policy.p3) {
        var v30978 = this.values(b$$644)
      }
      c$$520.value = v30978;
      introspect(JAM.policy.p3) {
        var v30979 = this.values()
      }
      c$$520.values = v30979;
    }
    introspect(JAM.policy.p3) {
      this._trigger("stop", a$$657, c$$520);
    }
    return;
  }
  function v1771(a$$656, b$$643, c$$519) {
    var d$$392;
    var e$$337;
    var f$$173;
    var v3398;
    var v21464 = this.options;
    var v15728 = v21464.values;
    if (v15728) {
      var v24429 = this.options;
      var v21465 = v24429.values;
      v15728 = v21465.length;
    }
    var v10007 = v15728;
    if (v10007) {
      var v24430;
      if (b$$643) {
        v24430 = 0;
      } else {
        v24430 = 1;
      }
      var v21466 = v24430;
      introspect(JAM.policy.p3) {
        d$$392 = this.values(v21466);
      }
      var v29411 = this.options;
      var v28796 = v29411.values;
      var v27875 = v28796.length;
      var v26459 = v27875 === 2;
      if (v26459) {
        var v28797 = this.options;
        var v27876 = v28797.range;
        var v27877 = !0;
        v26459 = v27876 === v27877;
      }
      var v24431 = v26459;
      if (v24431) {
        var v27878 = b$$643 === 0;
        if (v27878) {
          v27878 = c$$519 > d$$392;
        }
        var v26460 = v27878;
        var v27880 = !v26460;
        if (v27880) {
          var v27879 = b$$643 === 1;
          if (v27879) {
            v27879 = c$$519 < d$$392;
          }
          v26460 = v27879;
        }
        v24431 = v26460;
      }
      var v21467 = v24431;
      if (v21467) {
        c$$519 = d$$392;
      }
      introspect(JAM.policy.p3) {
        var v21468 = this.values(b$$643)
      }
      var v15729 = c$$519 !== v21468;
      if (v15729) {
        introspect(JAM.policy.p3) {
          e$$337 = this.values();
        }
        introspect(JAM.policy.p2) {
          e$$337[b$$643] = c$$519;
        }
        var v29412 = this.handles;
        var v28798 = v29412[b$$643];
        var v27881 = {handle:v28798, value:c$$519, values:e$$337};
        introspect(JAM.policy.p3) {
          f$$173 = this._trigger("slide", a$$656, v27881);
        }
        var v27882;
        if (b$$643) {
          v27882 = 0;
        } else {
          v27882 = 1;
        }
        var v26461 = v27882;
        introspect(JAM.policy.p3) {
          d$$392 = this.values(v26461);
        }
        var v26462 = !1;
        var v24432 = f$$173 !== v26462;
        if (v24432) {
          var v26463 = !0;
          introspect(JAM.policy.p3) {
            v24432 = this.values(b$$643, c$$519, v26463);
          }
        }
        v15729 = v24432;
      }
      v3398 = v15729;
    } else {
      introspect(JAM.policy.p3) {
        var v15730 = this.value()
      }
      var v10006 = c$$519 !== v15730;
      if (v10006) {
        var v26464 = this.handles;
        var v24433 = v26464[b$$643];
        var v21469 = {handle:v24433, value:c$$519};
        introspect(JAM.policy.p3) {
          f$$173 = this._trigger("slide", a$$656, v21469);
        }
        var v24434 = !1;
        var v21470 = f$$173 !== v24434;
        if (v21470) {
          introspect(JAM.policy.p3) {
            v21470 = this.value(c$$519);
          }
        }
        v10006 = v21470;
      }
      v3398 = v10006;
    }
    v3398;
    return;
  }
  function v1770(a$$655, b$$642) {
    var v10008 = this.handles;
    var v3399 = v10008[b$$642];
    introspect(JAM.policy.p3) {
      var v3400 = this.value()
    }
    var c$$518 = {handle:v3399, value:v3400};
    var v21471 = this.options;
    var v15731 = v21471.values;
    if (v15731) {
      var v24435 = this.options;
      var v21472 = v24435.values;
      v15731 = v21472.length;
    }
    var v10009 = v15731;
    if (v10009) {
      introspect(JAM.policy.p3) {
        var v30980 = this.values(b$$642)
      }
      c$$518.value = v30980;
      introspect(JAM.policy.p3) {
        var v30981 = this.values()
      }
      c$$518.values = v30981;
    }
    introspect(JAM.policy.p3) {
      return this._trigger("start", a$$655, c$$518);
    }
  }
  function v1769(a$$654) {
    var b$$641;
    var c$$517;
    var d$$391;
    var e$$336;
    var f$$172;
    var v28799;
    var v29787 = this.orientation;
    var v29413 = v29787 === "horizontal";
    if (v29413) {
      var v29788 = this.elementSize;
      b$$641 = v29788.width;
      var v30055 = a$$654.x;
      var v30279 = this.elementOffset;
      var v30056 = v30279.left;
      var v29789 = v30055 - v30056;
      var v30057;
      var v30281 = this._clickOffset;
      if (v30281) {
        var v30280 = this._clickOffset;
        v30057 = v30280.left;
      } else {
        v30057 = 0;
      }
      var v29790 = v30057;
      v28799 = c$$517 = v29789 - v29790;
    } else {
      var v29791 = this.elementSize;
      b$$641 = v29791.height;
      var v30058 = a$$654.y;
      var v30282 = this.elementOffset;
      var v30059 = v30282.top;
      var v29792 = v30058 - v30059;
      var v30060;
      var v30284 = this._clickOffset;
      if (v30284) {
        var v30283 = this._clickOffset;
        v30060 = v30283.top;
      } else {
        v30060 = 0;
      }
      var v29793 = v30060;
      v28799 = c$$517 = v29792 - v29793;
    }
    v28799;
    d$$391 = c$$517 / b$$641;
    var v27883 = d$$391 > 1;
    if (v27883) {
      d$$391 = 1;
    }
    var v26465 = d$$391 < 0;
    if (v26465) {
      d$$391 = 0;
    }
    var v26466 = this.orientation;
    var v24436 = v26466 === "vertical";
    if (v24436) {
      d$$391 = 1 - d$$391;
    }
    var v24437 = this.options;
    var v21473 = v24437.max;
    var v24438 = this.options;
    var v21474 = v24438.min;
    e$$336 = v21473 - v21474;
    var v21475 = this.options;
    var v15732 = v21475.min;
    var v15733 = d$$391 * e$$336;
    f$$172 = v15732 + v15733;
    introspect(JAM.policy.p3) {
      return this._trimAlignValue(f$$172);
    }
  }
  function v1768() {
    var v3401;
    var v21476 = this.options;
    var v15734 = v21476.orientation;
    var v10010 = v15734 === "vertical";
    if (v10010) {
      v3401 = "vertical";
    } else {
      v3401 = "horizontal";
    }
    this.orientation = v3401;
    return;
  }
  function v1767(a$$653) {
    var v28800 = this.handles;
    introspect(JAM.policy.p3) {
      v28800.removeClass("ui-state-active");
    }
    this._mouseSliding = !1;
    var v27884 = this._handleIndex;
    introspect(JAM.policy.p3) {
      this._stop(a$$653, v27884);
    }
    var v26467 = this._handleIndex;
    introspect(JAM.policy.p3) {
      this._change(a$$653, v26467);
    }
    this._handleIndex = null;
    this._clickOffset = null;
    this._animateOff = !1;
    return !1;
  }
  function v1766(a$$652) {
    var v3402 = a$$652.pageX;
    var v3403 = a$$652.pageY;
    var b$$640 = {x:v3402, y:v3403};
    introspect(JAM.policy.p3) {
      var c$$516 = this._normValueFromMouse(b$$640)
    }
    var v10011 = this._handleIndex;
    introspect(JAM.policy.p3) {
      this._slide(a$$652, v10011, c$$516);
    }
    return !1;
  }
  function v1765(a$$651) {
    return !0;
  }
  function v1764(b$$638) {
    function v1763(b$$639) {
      var v10012 = e$$335;
      introspect(JAM.policy.p3) {
        var v10013 = h$$156.values(b$$639)
      }
      var v3404 = v10012 - v10013;
      introspect(JAM.policy.p3) {
        var c$$515 = Math.abs(v3404)
      }
      var v3405 = f$$171 > c$$515;
      if (v3405) {
        f$$171 = c$$515;
        introspect(JAM.policy.p3) {
          g$$189 = a$$649(this);
        }
        i$$204 = b$$639;
      }
      return;
    }
    var c$$514 = this.options;
    var d$$390;
    var e$$335;
    var f$$171;
    var g$$189;
    var h$$156;
    var i$$204;
    var j$$104;
    var k$$72;
    var l$$79;
    var v3406;
    var v10014 = c$$514.disabled;
    if (v10014) {
      v3406 = !1;
    } else {
      var v30285 = this.element;
      introspect(JAM.policy.p3) {
        var v30061 = v30285.outerWidth()
      }
      var v30286 = this.element;
      introspect(JAM.policy.p3) {
        var v30062 = v30286.outerHeight()
      }
      this.elementSize = {width:v30061, height:v30062};
      var v30063 = this.element;
      introspect(JAM.policy.p3) {
        var v30982 = v30063.offset()
      }
      this.elementOffset = v30982;
      var v29794 = b$$638.pageX;
      var v29795 = b$$638.pageY;
      d$$390 = {x:v29794, y:v29795};
      introspect(JAM.policy.p3) {
        e$$335 = this._normValueFromMouse(d$$390);
      }
      var v29796 = this.options;
      var v29414 = v29796.max;
      var v29797 = this.options;
      var v29415 = v29797.min;
      var v28801 = v29414 - v29415;
      f$$171 = v28801 + 1;
      h$$156 = this;
      var v26468 = this.handles;
      introspect(JAM.policy.p3) {
        v26468.each(v1763);
      }
      var v27885 = c$$514.range;
      var v27886 = !0;
      var v26469 = v27885 === v27886;
      if (v26469) {
        introspect(JAM.policy.p3) {
          var v27887 = this.values(1)
        }
        var v27888 = c$$514.min;
        v26469 = v27887 === v27888;
      }
      var v24439 = v26469;
      if (v24439) {
        i$$204 = i$$204 + 1;
        var v28802 = this.handles;
        var v27889 = v28802[i$$204];
        introspect(JAM.policy.p3) {
          g$$189 = a$$649(v27889);
        }
      }
      introspect(JAM.policy.p3) {
        j$$104 = this._start(b$$638, i$$204);
      }
      var v15735;
      var v24440 = !1;
      var v21477 = j$$104 === v24440;
      if (v21477) {
        v15735 = !1;
      } else {
        this._mouseSliding = !0;
        h$$156._handleIndex = i$$204;
        introspect(JAM.policy.p3) {
          var v30064 = g$$189.addClass("ui-state-active")
        }
        introspect(JAM.policy.p3) {
          v30064.focus();
        }
        introspect(JAM.policy.p3) {
          k$$72 = g$$189.offset();
        }
        var v30429 = b$$638.target;
        introspect(JAM.policy.p3) {
          var v30287 = a$$649(v30429)
        }
        introspect(JAM.policy.p3) {
          var v30065 = v30287.parents()
        }
        introspect(JAM.policy.p3) {
          var v29798 = v30065.andSelf()
        }
        introspect(JAM.policy.p3) {
          var v29416 = v29798.is(".ui-slider-handle")
        }
        l$$79 = !v29416;
        var v28803;
        if (l$$79) {
          v28803 = {left:0, top:0};
        } else {
          var v30066 = b$$638.pageX;
          var v30067 = k$$72.left;
          var v29799 = v30066 - v30067;
          introspect(JAM.policy.p3) {
            var v30068 = g$$189.width()
          }
          var v29800 = v30068 / 2;
          var v29417 = v29799 - v29800;
          var v30567 = b$$638.pageY;
          var v30568 = k$$72.top;
          var v30430 = v30567 - v30568;
          introspect(JAM.policy.p3) {
            var v30569 = g$$189.height()
          }
          var v30431 = v30569 / 2;
          var v30288 = v30430 - v30431;
          introspect(JAM.policy.p3) {
            var v30570 = g$$189.css("borderTopWidth")
          }
          var v30432 = parseInt(v30570, 10);
          var v30571 = !v30432;
          if (v30571) {
            v30432 = 0;
          }
          var v30289 = v30432;
          var v30069 = v30288 - v30289;
          introspect(JAM.policy.p3) {
            var v30433 = g$$189.css("borderBottomWidth")
          }
          var v30290 = parseInt(v30433, 10);
          var v30434 = !v30290;
          if (v30434) {
            v30290 = 0;
          }
          var v30070 = v30290;
          var v29801 = v30069 - v30070;
          introspect(JAM.policy.p3) {
            var v30291 = g$$189.css("marginTop")
          }
          var v30071 = parseInt(v30291, 10);
          var v30292 = !v30071;
          if (v30292) {
            v30071 = 0;
          }
          var v29802 = v30071;
          var v29418 = v29801 + v29802;
          v28803 = {left:v29417, top:v29418};
        }
        this._clickOffset = v28803;
        var v28804 = this.handles;
        introspect(JAM.policy.p3) {
          var v27890 = v28804.hasClass("ui-state-hover")
        }
        var v28805 = !v27890;
        if (v28805) {
          introspect(JAM.policy.p3) {
            this._slide(b$$638, i$$204, e$$335);
          }
        }
        this._animateOff = !0;
        v15735 = !0;
      }
      v3406 = v15735;
    }
    return v3406;
  }
  function v1762() {
    var v24441 = this.handles;
    introspect(JAM.policy.p3) {
      v24441.remove();
    }
    var v24442 = this.range;
    introspect(JAM.policy.p3) {
      v24442.remove();
    }
    var v26470 = this.element;
    introspect(JAM.policy.p3) {
      var v24443 = v26470.removeClass("ui-slider ui-slider-horizontal ui-slider-vertical ui-slider-disabled ui-widget ui-widget-content ui-corner-all")
    }
    introspect(JAM.policy.p3) {
      var v21478 = v24443.removeData("slider")
    }
    introspect(JAM.policy.p3) {
      v21478.unbind(".slider");
    }
    introspect(JAM.policy.p3) {
      this._mouseDestroy();
    }
    return this;
  }
  function v1761() {
    function v1760(c$$513) {
      introspect(JAM.policy.p3) {
        var v3407 = a$$649(this)
      }
      introspect(JAM.policy.p3) {
        var d$$389 = v3407.data("index.ui-slider-handle")
      }
      var v3408 = b$$636._keySliding;
      if (v3408) {
        b$$636._keySliding = !1;
        introspect(JAM.policy.p3) {
          b$$636._stop(c$$513, d$$389);
        }
        introspect(JAM.policy.p3) {
          b$$636._change(c$$513, d$$389);
        }
        introspect(JAM.policy.p3) {
          var v15736 = a$$649(this)
        }
        introspect(JAM.policy.p3) {
          v15736.removeClass("ui-state-active");
        }
      }
      return;
    }
    function v1759(d$$388) {
      introspect(JAM.policy.p3) {
        var v3409 = a$$649(this)
      }
      introspect(JAM.policy.p3) {
        var e$$334 = v3409.data("index.ui-slider-handle")
      }
      var f$$170;
      var g$$188;
      var h$$155;
      var i$$203;
      var v10015 = b$$636.options;
      var v3410 = v10015.disabled;
      if (v3410) {
        return;
      }
      var v3413 = d$$388.keyCode;
      switch(v3413) {
        case a$$649.ui.keyCode.HOME:
        ;
        case a$$649.ui.keyCode.END:
        ;
        case a$$649.ui.keyCode.PAGE_UP:
        ;
        case a$$649.ui.keyCode.PAGE_DOWN:
        ;
        case a$$649.ui.keyCode.UP:
        ;
        case a$$649.ui.keyCode.RIGHT:
        ;
        case a$$649.ui.keyCode.DOWN:
        ;
        case a$$649.ui.keyCode.LEFT:
          introspect(JAM.policy.p3) {
            d$$388.preventDefault();
          }
          var v10016 = b$$636._keySliding;
          var v3412 = !v10016;
          if (v3412) {
            b$$636._keySliding = !0;
            introspect(JAM.policy.p3) {
              var v15737 = a$$649(this)
            }
            introspect(JAM.policy.p3) {
              v15737.addClass("ui-state-active");
            }
            introspect(JAM.policy.p3) {
              f$$170 = b$$636._start(d$$388, e$$334);
            }
            var v10017 = !1;
            var v3411 = f$$170 === v10017;
            if (v3411) {
              return;
            }
          }
        ;
      }
      var v10018 = b$$636.options;
      i$$203 = v10018.step;
      var v10019;
      var v24444 = b$$636.options;
      var v21479 = v24444.values;
      if (v21479) {
        var v26471 = b$$636.options;
        var v24445 = v26471.values;
        v21479 = v24445.length;
      }
      var v15738 = v21479;
      if (v15738) {
        introspect(JAM.policy.p3) {
          v10019 = g$$188 = h$$155 = b$$636.values(e$$334);
        }
      } else {
        introspect(JAM.policy.p3) {
          v10019 = g$$188 = h$$155 = b$$636.value();
        }
      }
      v10019;
      var v3422 = d$$388.keyCode;
      switch(v3422) {
        case a$$649.ui.keyCode.HOME:
          var v3414 = b$$636.options;
          h$$155 = v3414.min;
          break;
        case a$$649.ui.keyCode.END:
          var v3415 = b$$636.options;
          h$$155 = v3415.max;
          break;
        case a$$649.ui.keyCode.PAGE_UP:
          var v24446 = b$$636.options;
          var v21480 = v24446.max;
          var v24447 = b$$636.options;
          var v21481 = v24447.min;
          var v15739 = v21480 - v21481;
          var v10020 = v15739 / c$$512;
          var v3416 = g$$188 + v10020;
          introspect(JAM.policy.p3) {
            h$$155 = b$$636._trimAlignValue(v3416);
          }
          break;
        case a$$649.ui.keyCode.PAGE_DOWN:
          var v24448 = b$$636.options;
          var v21482 = v24448.max;
          var v24449 = b$$636.options;
          var v21483 = v24449.min;
          var v15740 = v21482 - v21483;
          var v10021 = v15740 / c$$512;
          var v3417 = g$$188 - v10021;
          introspect(JAM.policy.p3) {
            h$$155 = b$$636._trimAlignValue(v3417);
          }
          break;
        case a$$649.ui.keyCode.UP:
        ;
        case a$$649.ui.keyCode.RIGHT:
          var v15741 = b$$636.options;
          var v10022 = v15741.max;
          var v3418 = g$$188 === v10022;
          if (v3418) {
            return;
          }
          var v3419 = g$$188 + i$$203;
          introspect(JAM.policy.p3) {
            h$$155 = b$$636._trimAlignValue(v3419);
          }
          break;
        case a$$649.ui.keyCode.DOWN:
        ;
        case a$$649.ui.keyCode.LEFT:
          var v15742 = b$$636.options;
          var v10023 = v15742.min;
          var v3420 = g$$188 === v10023;
          if (v3420) {
            return;
          }
          var v3421 = g$$188 - i$$203;
          introspect(JAM.policy.p3) {
            h$$155 = b$$636._trimAlignValue(v3421);
          }
        ;
      }
      introspect(JAM.policy.p3) {
        b$$636._slide(d$$388, e$$334, h$$155);
      }
      return;
    }
    function v1758(b$$637) {
      introspect(JAM.policy.p3) {
        var v3423 = a$$649(this)
      }
      introspect(JAM.policy.p3) {
        v3423.data("index.ui-slider-handle", b$$637);
      }
      return;
    }
    function v1757() {
      introspect(JAM.policy.p3) {
        var v3424 = a$$649(this)
      }
      introspect(JAM.policy.p3) {
        v3424.removeClass("ui-state-focus");
      }
      return;
    }
    function v1756() {
      var v3425;
      var v10025 = d$$387.disabled;
      if (v10025) {
        introspect(JAM.policy.p3) {
          var v10024 = a$$649(this)
        }
        introspect(JAM.policy.p3) {
          v3425 = v10024.blur();
        }
      } else {
        introspect(JAM.policy.p3) {
          var v15743 = a$$649(".ui-slider .ui-state-focus")
        }
        introspect(JAM.policy.p3) {
          v15743.removeClass("ui-state-focus");
        }
        introspect(JAM.policy.p3) {
          var v15744 = a$$649(this)
        }
        introspect(JAM.policy.p3) {
          v3425 = v15744.addClass("ui-state-focus");
        }
      }
      v3425;
      return;
    }
    function v1755() {
      introspect(JAM.policy.p3) {
        var v3426 = a$$649(this)
      }
      introspect(JAM.policy.p3) {
        v3426.removeClass("ui-state-hover");
      }
      return;
    }
    function v1754() {
      var v3427 = d$$387.disabled;
      var v10027 = !v3427;
      if (v10027) {
        introspect(JAM.policy.p3) {
          var v10026 = a$$649(this)
        }
        introspect(JAM.policy.p3) {
          v10026.addClass("ui-state-hover");
        }
      }
      return;
    }
    function v1753(a$$650) {
      introspect(JAM.policy.p3) {
        a$$650.preventDefault();
      }
      return;
    }
    var b$$636 = this;
    var d$$387 = this.options;
    var v10028 = this.element;
    introspect(JAM.policy.p3) {
      var v3428 = v10028.find(".ui-slider-handle")
    }
    introspect(JAM.policy.p3) {
      var e$$333 = v3428.addClass("ui-state-default ui-corner-all")
    }
    var f$$169 = "<a class='ui-slider-handle ui-state-default ui-corner-all' href='#'></a>";
    var v10029 = d$$387.values;
    if (v10029) {
      var v15745 = d$$387.values;
      v10029 = v15745.length;
    }
    var v3429 = v10029;
    var v10030 = !v3429;
    if (v10030) {
      v3429 = 1;
    }
    var g$$187 = v3429;
    var h$$154 = [];
    this._keySliding = !1;
    this._mouseSliding = !1;
    this._animateOff = !0;
    this._handleIndex = null;
    introspect(JAM.policy.p3) {
      this._detectOrientation();
    }
    introspect(JAM.policy.p3) {
      this._mouseInit();
    }
    var v21484 = this.element;
    var v29419 = this.orientation;
    var v28806 = "ui-slider ui-slider-" + v29419;
    var v27891 = v28806 + " ui-widget";
    var v26472 = v27891 + " ui-widget-content";
    var v24450 = v26472 + " ui-corner-all";
    var v26473;
    var v27892 = d$$387.disabled;
    if (v27892) {
      v26473 = " ui-slider-disabled ui-disabled";
    } else {
      v26473 = "";
    }
    var v24451 = v26473;
    var v21485 = v24450 + v24451;
    introspect(JAM.policy.p3) {
      v21484.addClass(v21485);
    }
    introspect(JAM.policy.p3) {
      var v30983 = a$$649([])
    }
    this.range = v30983;
    var v10031 = d$$387.range;
    if (v10031) {
      var v24452 = d$$387.range;
      var v24453 = !0;
      var v21486 = v24452 === v24453;
      if (v21486) {
        var v26474 = d$$387.values;
        var v27895 = !v26474;
        if (v27895) {
          var v28807 = this.options;
          var v27893 = v28807.min;
          var v28808 = this.options;
          var v27894 = v28808.min;
          d$$387.values = [v27893, v27894];
        }
        var v28809 = d$$387.values;
        var v27896 = v28809.length;
        if (v27896) {
          var v29420 = d$$387.values;
          var v28810 = v29420.length;
          v27896 = v28810 !== 2;
        }
        var v26475 = v27896;
        if (v26475) {
          var v28811 = d$$387.values;
          var v27897 = v28811[0];
          var v28812 = d$$387.values;
          var v27898 = v28812[0];
          d$$387.values = [v27897, v27898];
        }
      }
      introspect(JAM.policy.p3) {
        var v24454 = a$$649("<div></div>")
      }
      var v24455 = this.element;
      introspect(JAM.policy.p3) {
        var v21487 = v24454.appendTo(v24455)
      }
      var v26476;
      var v29421 = d$$387.range;
      var v28813 = v29421 === "min";
      var v29423 = !v28813;
      if (v29423) {
        var v29422 = d$$387.range;
        v28813 = v29422 === "max";
      }
      var v27900 = v28813;
      if (v27900) {
        var v27899 = d$$387.range;
        v26476 = " ui-slider-range-" + v27899;
      } else {
        v26476 = "";
      }
      var v24456 = v26476;
      var v21488 = "ui-slider-range ui-widget-header" + v24456;
      introspect(JAM.policy.p3) {
        var v30984 = v21487.addClass(v21488)
      }
      this.range = v30984;
    }
    var i$$202 = e$$333.length;
    var v3430 = i$$202 < g$$187;
    for (;v3430;) {
      introspect(JAM.policy.p3) {
        h$$154.push(f$$169);
      }
      i$$202 = i$$202 + 1;
      v3430 = i$$202 < g$$187;
    }
    introspect(JAM.policy.p3) {
      var v29424 = h$$154.join("")
    }
    introspect(JAM.policy.p3) {
      var v28814 = a$$649(v29424)
    }
    var v28815 = b$$636.element;
    introspect(JAM.policy.p3) {
      var v27901 = v28814.appendTo(v28815)
    }
    introspect(JAM.policy.p3) {
      var v30985 = e$$333.add(v27901)
    }
    this.handles = v30985;
    var v27902 = this.handles;
    introspect(JAM.policy.p3) {
      var v30986 = v27902.eq(0)
    }
    this.handle = v30986;
    var v30072 = this.handles;
    var v30073 = this.range;
    introspect(JAM.policy.p3) {
      var v29803 = v30072.add(v30073)
    }
    introspect(JAM.policy.p3) {
      var v29425 = v29803.filter("a")
    }
    introspect(JAM.policy.p3) {
      var v28816 = v29425.click(v1753)
    }
    introspect(JAM.policy.p3) {
      var v27903 = v28816.hover(v1754, v1755)
    }
    introspect(JAM.policy.p3) {
      var v26477 = v27903.focus(v1756)
    }
    introspect(JAM.policy.p3) {
      v26477.blur(v1757);
    }
    var v24457 = this.handles;
    introspect(JAM.policy.p3) {
      v24457.each(v1758);
    }
    var v24458 = this.handles;
    introspect(JAM.policy.p3) {
      var v21489 = v24458.keydown(v1759)
    }
    introspect(JAM.policy.p3) {
      v21489.keyup(v1760);
    }
    introspect(JAM.policy.p3) {
      this._refreshValue();
    }
    this._animateOff = !1;
    return;
  }
  var c$$512 = 5;
  var v15746 = a$$649.ui;
  var v10032 = v15746.mouse;
  var v21490 = !1;
  var v21491 = !1;
  var v15747 = {animate:v21490, distance:0, max:100, min:0, orientation:"horizontal", range:v21491, step:1, value:0, values:null};
  var v10033 = {widgetEventPrefix:"slide", options:v15747, _create:v1761, destroy:v1762, _mouseCapture:v1764, _mouseStart:v1765, _mouseDrag:v1766, _mouseStop:v1767, _detectOrientation:v1768, _normValueFromMouse:v1769, _start:v1770, _slide:v1771, _stop:v1772, _change:v1773, value:v1774, values:v1775, _setOption:v1776, _value:v1777, _values:v1778, _trimAlignValue:v1779, _valueMin:v1780, _valueMax:v1781, _refreshValue:v1783};
  introspect(JAM.policy.p3) {
    a$$649.widget("ui.slider", v10032, v10033);
  }
  var v15748 = a$$649.ui;
  var v10034 = v15748.slider;
  var v10035 = {version:"1.8.24"};
  introspect(JAM.policy.p3) {
    a$$649.extend(v10034, v10035);
  }
  return;
}
function v1752(a$$645, b$$632) {
  function v1751() {
    introspect(JAM.policy.p3) {
      var a$$648 = this.value()
    }
    introspect(JAM.policy.p3) {
      var b$$634 = this._percentage()
    }
    var v21492 = this.oldValue;
    var v15749 = v21492 !== a$$648;
    if (v15749) {
      this.oldValue = a$$648;
      introspect(JAM.policy.p3) {
        this._trigger("change");
      }
    }
    var v24459 = this.valueDiv;
    var v26478 = this.min;
    var v24460 = a$$648 > v26478;
    introspect(JAM.policy.p3) {
      var v21493 = v24459.toggle(v24460)
    }
    var v26479 = this.options;
    var v24461 = v26479.max;
    var v21494 = a$$648 === v24461;
    introspect(JAM.policy.p3) {
      var v15750 = v21493.toggleClass("ui-corner-right", v21494)
    }
    introspect(JAM.policy.p3) {
      var v21495 = b$$634.toFixed(0)
    }
    var v15751 = v21495 + "%";
    introspect(JAM.policy.p3) {
      v15750.width(v15751);
    }
    var v10036 = this.element;
    introspect(JAM.policy.p3) {
      v10036.attr("aria-valuenow", a$$648);
    }
    return;
  }
  function v1750() {
    introspect(JAM.policy.p3) {
      var v10037 = this._value()
    }
    var v3431 = 100 * v10037;
    var v10038 = this.options;
    var v3432 = v10038.max;
    return v3431 / v3432;
  }
  function v1749() {
    var v3433 = this.options;
    var a$$647 = v3433.value;
    var v15752 = typeof a$$647;
    var v10039 = v15752 != "number";
    if (v10039) {
      a$$647 = 0;
    }
    var v15753 = this.options;
    var v10040 = v15753.max;
    var v15754 = this.min;
    introspect(JAM.policy.p3) {
      var v10041 = Math.max(v15754, a$$647)
    }
    introspect(JAM.policy.p3) {
      return Math.min(v10040, v10041);
    }
  }
  function v1748(b$$633, c$$511) {
    var v10042 = b$$633 === "value";
    if (v10042) {
      var v24462 = this.options;
      v24462.value = c$$511;
      introspect(JAM.policy.p3) {
        this._refreshValue();
      }
      introspect(JAM.policy.p3) {
        var v24463 = this._value()
      }
      var v26480 = this.options;
      var v24464 = v26480.max;
      var v21496 = v24463 === v24464;
      if (v21496) {
        introspect(JAM.policy.p3) {
          this._trigger("complete");
        }
      }
    }
    var v21497 = a$$645.Widget;
    var v15755 = v21497.prototype;
    var v10043 = v15755._setOption;
    introspect(JAM.policy.p3) {
      v10043.apply(this, arguments);
    }
    return;
  }
  function v1747(a$$646) {
    var v3434;
    var v10044 = a$$646 === b$$632;
    if (v10044) {
      introspect(JAM.policy.p3) {
        v3434 = this._value();
      }
    } else {
      introspect(JAM.policy.p3) {
        this._setOption("value", a$$646);
      }
      v3434 = this;
    }
    return v3434;
  }
  function v1746() {
    var v27904 = this.element;
    introspect(JAM.policy.p3) {
      var v26481 = v27904.removeClass("ui-progressbar ui-widget ui-widget-content ui-corner-all")
    }
    introspect(JAM.policy.p3) {
      var v24465 = v26481.removeAttr("role")
    }
    introspect(JAM.policy.p3) {
      var v21498 = v24465.removeAttr("aria-valuemin")
    }
    introspect(JAM.policy.p3) {
      var v15756 = v21498.removeAttr("aria-valuemax")
    }
    introspect(JAM.policy.p3) {
      v15756.removeAttr("aria-valuenow");
    }
    var v15757 = this.valueDiv;
    introspect(JAM.policy.p3) {
      v15757.remove();
    }
    var v21499 = a$$645.Widget;
    var v15758 = v21499.prototype;
    var v10045 = v15758.destroy;
    introspect(JAM.policy.p3) {
      v10045.apply(this, arguments);
    }
    return;
  }
  function v1745() {
    var v24466 = this.element;
    introspect(JAM.policy.p3) {
      var v21500 = v24466.addClass("ui-progressbar ui-widget ui-widget-content ui-corner-all")
    }
    var v24467 = this.min;
    var v26482 = this.options;
    var v24468 = v26482.max;
    introspect(JAM.policy.p3) {
      var v24469 = this._value()
    }
    var v21501 = {role:"progressbar", "aria-valuemin":v24467, "aria-valuemax":v24468, "aria-valuenow":v24469};
    introspect(JAM.policy.p3) {
      v21500.attr(v21501);
    }
    introspect(JAM.policy.p3) {
      var v21502 = a$$645("<div class='ui-progressbar-value ui-widget-header ui-corner-left'></div>")
    }
    var v21503 = this.element;
    introspect(JAM.policy.p3) {
      var v30987 = v21502.appendTo(v21503)
    }
    this.valueDiv = v30987;
    introspect(JAM.policy.p3) {
      var v30988 = this._value()
    }
    this.oldValue = v30988;
    introspect(JAM.policy.p3) {
      this._refreshValue();
    }
    return;
  }
  var v15759 = {value:0, max:100};
  var v10046 = {options:v15759, min:0, _create:v1745, destroy:v1746, value:v1747, _setOption:v1748, _value:v1749, _percentage:v1750, _refreshValue:v1751};
  introspect(JAM.policy.p3) {
    a$$645.widget("ui.progressbar", v10046);
  }
  var v15760 = a$$645.ui;
  var v10047 = v15760.progressbar;
  var v10048 = {version:"1.8.24"};
  introspect(JAM.policy.p3) {
    a$$645.extend(v10047, v10048);
  }
  return;
}
function v1744(a$$642, b$$622) {
  function v1743() {
    function v1742(a$$644, b$$631) {
      return b$$631;
    }
    introspect(JAM.policy.p3) {
      var v3435 = document.getElementsByTagName("body")
    }
    var b$$630 = v3435[0];
    introspect(JAM.policy.p3) {
      var c$$510 = document.createElement("div")
    }
    var d$$386;
    var e$$332;
    var g$$186;
    var h$$153;
    var i$$201;
    var v21504;
    if (b$$630) {
      v21504 = "div";
    } else {
      v21504 = "body";
    }
    var v15761 = v21504;
    introspect(JAM.policy.p3) {
      d$$386 = document.createElement(v15761);
    }
    g$$186 = {visibility:"hidden", width:0, height:0, border:0, margin:0, background:"none"};
    if (b$$630) {
      var v15762 = {position:"absolute", left:"-1000px", top:"-1000px"};
      introspect(JAM.policy.p3) {
        a$$642.extend(g$$186, v15762);
      }
    }
    var j$$103;
    for (j$$103 in g$$186) {
      var v3436 = d$$386.style;
      introspect(JAM.policy.p2) {
        v3436[j$$103] = g$$186[j$$103];
      }
    }
    introspect(JAM.policy.p3) {
      d$$386.appendChild(c$$510);
    }
    var v29426 = b$$630;
    var v29804 = !v29426;
    if (v29804) {
      v29426 = document.documentElement;
    }
    e$$332 = v29426;
    var v28817 = e$$332.firstChild;
    introspect(JAM.policy.p3) {
      e$$332.insertBefore(d$$386, v28817);
    }
    var v27905 = c$$510.style;
    v27905.cssText = "position: absolute; left: 10.7432222px; top: 10.432325px; height: 30px; width: 201px;";
    introspect(JAM.policy.p3) {
      var v27906 = a$$642(c$$510)
    }
    introspect(JAM.policy.p3) {
      var v26483 = v27906.offset(v1742)
    }
    introspect(JAM.policy.p3) {
      h$$153 = v26483.offset();
    }
    d$$386.innerHTML = "";
    introspect(JAM.policy.p3) {
      e$$332.removeChild(d$$386);
    }
    var v21505 = h$$153.top;
    var v21506 = h$$153.left;
    var v15763 = v21505 + v21506;
    var v21507;
    if (b$$630) {
      v21507 = 2E3;
    } else {
      v21507 = 0;
    }
    var v15764 = v21507;
    i$$201 = v15763 + v15764;
    var v10049 = i$$201 > 21;
    if (v10049) {
      v10049 = i$$201 < 22;
    }
    f$$165.fractions = v10049;
    return;
  }
  function v1741(b$$629) {
    function v1740() {
      var v3437 = a$$642.offset;
      introspect(JAM.policy.p3) {
        v3437.setOffset(this, b$$629);
      }
      return;
    }
    function v1739(c$$509) {
      introspect(JAM.policy.p3) {
        var v3438 = a$$642(this)
      }
      introspect(JAM.policy.p3) {
        var v15765 = a$$642(this)
      }
      introspect(JAM.policy.p3) {
        var v10050 = v15765.offset()
      }
      introspect(JAM.policy.p3) {
        var v3439 = b$$629.call(this, c$$509, v10050)
      }
      introspect(JAM.policy.p3) {
        v3438.offset(v3439);
      }
      return;
    }
    var c$$508 = this[0];
    var v3440;
    var v15766 = !c$$508;
    var v21509 = !v15766;
    if (v21509) {
      var v21508 = c$$508.ownerDocument;
      v15766 = !v21508;
    }
    var v10052 = v15766;
    if (v10052) {
      v3440 = null;
    } else {
      var v10051;
      if (b$$629) {
        var v15767;
        introspect(JAM.policy.p3) {
          var v21510 = a$$642.isFunction(b$$629)
        }
        if (v21510) {
          introspect(JAM.policy.p3) {
            v15767 = this.each(v1739);
          }
        } else {
          introspect(JAM.policy.p3) {
            v15767 = this.each(v1740);
          }
        }
        v10051 = v15767;
      } else {
        introspect(JAM.policy.p3) {
          v10051 = h$$147.call(this);
        }
      }
      v3440 = v10051;
    }
    return v3440;
  }
  function v1738(b$$628, c$$507) {
    introspect(JAM.policy.p3) {
      var v10053 = a$$642.curCSS(b$$628, "position")
    }
    introspect(JAM.policy.p3) {
      var v3441 = /static/.test(v10053)
    }
    if (v3441) {
      var v10054 = b$$628.style;
      v10054.position = "relative";
    }
    introspect(JAM.policy.p3) {
      var d$$385 = a$$642(b$$628)
    }
    introspect(JAM.policy.p3) {
      var e$$331 = d$$385.offset()
    }
    var v15768 = !0;
    introspect(JAM.policy.p3) {
      var v10055 = a$$642.curCSS(b$$628, "top", v15768)
    }
    var v3442 = parseInt(v10055, 10);
    var v10056 = !v3442;
    if (v10056) {
      v3442 = 0;
    }
    var f$$168 = v3442;
    var v15769 = !0;
    introspect(JAM.policy.p3) {
      var v10057 = a$$642.curCSS(b$$628, "left", v15769)
    }
    var v3443 = parseInt(v10057, 10);
    var v10058 = !v3443;
    if (v10058) {
      v3443 = 0;
    }
    var g$$185 = v3443;
    var v15770 = c$$507.top;
    var v15771 = e$$331.top;
    var v10059 = v15770 - v15771;
    var v3444 = v10059 + f$$168;
    var v15772 = c$$507.left;
    var v15773 = e$$331.left;
    var v10060 = v15772 - v15773;
    var v3445 = v10060 + g$$185;
    var h$$152 = {top:v3444, left:v3445};
    var v3446;
    var v10062 = "using" in c$$507;
    if (v10062) {
      var v10061 = c$$507.using;
      introspect(JAM.policy.p3) {
        v3446 = v10061.call(b$$628, h$$152);
      }
    } else {
      introspect(JAM.policy.p3) {
        v3446 = d$$385.css(h$$152);
      }
    }
    v3446;
    return;
  }
  function v1737(b$$627, c$$506) {
    var v15774 = c$$506.at;
    var v10063 = v15774[1];
    var v3447 = v10063 === e$$327;
    if (v3447) {
      return;
    }
    introspect(JAM.policy.p3) {
      var d$$384 = a$$642(window)
    }
    var v21511 = c$$506.collisionPosition;
    var v15775 = v21511.top;
    var v15776 = c$$506.collisionHeight;
    var v10064 = v15775 + v15776;
    introspect(JAM.policy.p3) {
      var v10065 = d$$384.height()
    }
    var v3448 = v10064 - v10065;
    introspect(JAM.policy.p3) {
      var v3449 = d$$384.scrollTop()
    }
    var f$$167 = v3448 - v3449;
    var v3450;
    var v21512 = c$$506.my;
    var v15777 = v21512[1];
    var v10068 = v15777 === "top";
    if (v10068) {
      var v10066 = c$$506.elemHeight;
      v3450 = -v10066;
    } else {
      var v10067;
      var v24470 = c$$506.my;
      var v21513 = v24470[1];
      var v15778 = v21513 === "bottom";
      if (v15778) {
        v10067 = c$$506.elemHeight;
      } else {
        v10067 = 0;
      }
      v3450 = v10067;
    }
    var g$$184 = v3450;
    var v3451;
    var v21514 = c$$506.at;
    var v15779 = v21514[1];
    var v10070 = v15779 === "top";
    if (v10070) {
      v3451 = c$$506.targetHeight;
    } else {
      var v10069 = c$$506.targetHeight;
      v3451 = -v10069;
    }
    var h$$151 = v3451;
    var v10071 = c$$506.offset;
    var v3452 = v10071[1];
    var i$$200 = -2 * v3452;
    var v10072 = b$$627.top;
    var v15780;
    var v26484 = c$$506.collisionPosition;
    var v24471 = v26484.top;
    var v21517 = v24471 < 0;
    if (v21517) {
      var v21515 = g$$184 + h$$151;
      v15780 = v21515 + i$$200;
    } else {
      var v21516;
      var v24473 = f$$167 > 0;
      if (v24473) {
        var v24472 = g$$184 + h$$151;
        v21516 = v24472 + i$$200;
      } else {
        v21516 = 0;
      }
      v15780 = v21516;
    }
    var v10073 = v15780;
    b$$627.top = v10072 + v10073;
    return;
  }
  function v1736(b$$626, c$$505) {
    var v15781 = c$$505.at;
    var v10074 = v15781[0];
    var v3453 = v10074 === e$$327;
    if (v3453) {
      return;
    }
    introspect(JAM.policy.p3) {
      var d$$383 = a$$642(window)
    }
    var v21518 = c$$505.collisionPosition;
    var v15782 = v21518.left;
    var v15783 = c$$505.collisionWidth;
    var v10075 = v15782 + v15783;
    introspect(JAM.policy.p3) {
      var v10076 = d$$383.width()
    }
    var v3454 = v10075 - v10076;
    introspect(JAM.policy.p3) {
      var v3455 = d$$383.scrollLeft()
    }
    var f$$166 = v3454 - v3455;
    var v3456;
    var v21519 = c$$505.my;
    var v15784 = v21519[0];
    var v10079 = v15784 === "left";
    if (v10079) {
      var v10077 = c$$505.elemWidth;
      v3456 = -v10077;
    } else {
      var v10078;
      var v24474 = c$$505.my;
      var v21520 = v24474[0];
      var v15785 = v21520 === "right";
      if (v15785) {
        v10078 = c$$505.elemWidth;
      } else {
        v10078 = 0;
      }
      v3456 = v10078;
    }
    var g$$183 = v3456;
    var v3457;
    var v21521 = c$$505.at;
    var v15786 = v21521[0];
    var v10081 = v15786 === "left";
    if (v10081) {
      v3457 = c$$505.targetWidth;
    } else {
      var v10080 = c$$505.targetWidth;
      v3457 = -v10080;
    }
    var h$$150 = v3457;
    var v10082 = c$$505.offset;
    var v3458 = v10082[0];
    var i$$199 = -2 * v3458;
    var v10083 = b$$626.left;
    var v15787;
    var v26485 = c$$505.collisionPosition;
    var v24475 = v26485.left;
    var v21524 = v24475 < 0;
    if (v21524) {
      var v21522 = g$$183 + h$$150;
      v15787 = v21522 + i$$199;
    } else {
      var v21523;
      var v24477 = f$$166 > 0;
      if (v24477) {
        var v24476 = g$$183 + h$$150;
        v21523 = v24476 + i$$199;
      } else {
        v21523 = 0;
      }
      v15787 = v21523;
    }
    var v10084 = v15787;
    b$$626.left = v10083 + v10084;
    return;
  }
  function v1735(b$$625, c$$504) {
    introspect(JAM.policy.p3) {
      var d$$382 = a$$642(window)
    }
    var v21525 = c$$504.collisionPosition;
    var v15788 = v21525.top;
    var v15789 = c$$504.collisionHeight;
    var v10085 = v15788 + v15789;
    introspect(JAM.policy.p3) {
      var v10086 = d$$382.height()
    }
    var v3459 = v10085 - v10086;
    introspect(JAM.policy.p3) {
      var v3460 = d$$382.scrollTop()
    }
    var e$$330 = v3459 - v3460;
    var v3461;
    var v10090 = e$$330 > 0;
    if (v10090) {
      var v10087 = b$$625.top;
      v3461 = v10087 - e$$330;
    } else {
      var v15790 = b$$625.top;
      var v21526 = c$$504.collisionPosition;
      var v15791 = v21526.top;
      var v10088 = v15790 - v15791;
      var v10089 = b$$625.top;
      introspect(JAM.policy.p3) {
        v3461 = Math.max(v10088, v10089);
      }
    }
    b$$625.top = v3461;
    return;
  }
  function v1734(b$$624, c$$503) {
    introspect(JAM.policy.p3) {
      var d$$381 = a$$642(window)
    }
    var v21527 = c$$503.collisionPosition;
    var v15792 = v21527.left;
    var v15793 = c$$503.collisionWidth;
    var v10091 = v15792 + v15793;
    introspect(JAM.policy.p3) {
      var v10092 = d$$381.width()
    }
    var v3462 = v10091 - v10092;
    introspect(JAM.policy.p3) {
      var v3463 = d$$381.scrollLeft()
    }
    var e$$329 = v3462 - v3463;
    var v3464;
    var v10096 = e$$329 > 0;
    if (v10096) {
      var v10093 = b$$624.left;
      v3464 = v10093 - e$$329;
    } else {
      var v15794 = b$$624.left;
      var v21528 = c$$503.collisionPosition;
      var v15795 = v21528.left;
      var v10094 = v15794 - v15795;
      var v10095 = b$$624.left;
      introspect(JAM.policy.p3) {
        v3464 = Math.max(v10094, v10095);
      }
    }
    b$$624.left = v3464;
    return;
  }
  function v1733(b$$623) {
    function v1732() {
      function v1731(c$$502, e$$328) {
        var v15796 = a$$642.ui;
        var v10097 = v15796.position;
        var v10098 = j$$102[c$$502];
        var v3465 = v10097[v10098];
        if (v3465) {
          var v21529 = a$$642.ui;
          var v15797 = v21529.position;
          var v15798 = j$$102[c$$502];
          var v10099 = v15797[v15798];
          var v15799 = b$$623.my;
          var v15800 = b$$623.at;
          var v10100 = {targetWidth:l$$78, targetHeight:m$$48, elemWidth:d$$380, elemHeight:g$$182, collisionPosition:r$$21, collisionWidth:o$$24, collisionHeight:p$$49, offset:k$$71, my:v15799, at:v15800};
          introspect(JAM.policy.p3) {
            v10099[e$$328](q$$20, v10100);
          }
        }
        return;
      }
      introspect(JAM.policy.p3) {
        var c$$501 = a$$642(this)
      }
      introspect(JAM.policy.p3) {
        var d$$380 = c$$501.outerWidth()
      }
      introspect(JAM.policy.p3) {
        var g$$182 = c$$501.outerHeight()
      }
      var v15801 = !0;
      introspect(JAM.policy.p3) {
        var v10101 = a$$642.curCSS(this, "marginLeft", v15801)
      }
      var v3466 = parseInt(v10101);
      var v10102 = !v3466;
      if (v10102) {
        v3466 = 0;
      }
      var h$$149 = v3466;
      var v15802 = !0;
      introspect(JAM.policy.p3) {
        var v10103 = a$$642.curCSS(this, "marginTop", v15802)
      }
      var v3467 = parseInt(v10103);
      var v10104 = !v3467;
      if (v10104) {
        v3467 = 0;
      }
      var i$$198 = v3467;
      var v3468 = d$$380 + h$$149;
      var v21530 = !0;
      introspect(JAM.policy.p3) {
        var v15803 = a$$642.curCSS(this, "marginRight", v21530)
      }
      var v10105 = parseInt(v15803);
      var v15804 = !v10105;
      if (v15804) {
        v10105 = 0;
      }
      var v3469 = v10105;
      var o$$24 = v3468 + v3469;
      var v3470 = g$$182 + i$$198;
      var v21531 = !0;
      introspect(JAM.policy.p3) {
        var v15805 = a$$642.curCSS(this, "marginBottom", v21531)
      }
      var v10106 = parseInt(v15805);
      var v15806 = !v10106;
      if (v15806) {
        v10106 = 0;
      }
      var v3471 = v10106;
      var p$$49 = v3470 + v3471;
      introspect(JAM.policy.p3) {
        var q$$20 = a$$642.extend({}, n$$94)
      }
      var r$$21;
      var v27907;
      var v29805 = b$$623.my;
      var v29427 = v29805[0];
      var v28819 = v29427 === "right";
      if (v28819) {
        var v29428 = q$$20.left;
        v27907 = q$$20.left = v29428 - d$$380;
      } else {
        var v29806 = b$$623.my;
        var v29429 = v29806[0];
        var v28818 = v29429 === e$$327;
        if (v28818) {
          var v29807 = q$$20.left;
          var v29808 = d$$380 / 2;
          v28818 = q$$20.left = v29807 - v29808;
        }
        v27907 = v28818;
      }
      v27907;
      var v27908;
      var v29809 = b$$623.my;
      var v29430 = v29809[1];
      var v28821 = v29430 === "bottom";
      if (v28821) {
        var v29431 = q$$20.top;
        v27908 = q$$20.top = v29431 - g$$182;
      } else {
        var v29810 = b$$623.my;
        var v29432 = v29810[1];
        var v28820 = v29432 === e$$327;
        if (v28820) {
          var v29811 = q$$20.top;
          var v29812 = g$$182 / 2;
          v28820 = q$$20.top = v29811 - v29812;
        }
        v27908 = v28820;
      }
      v27908;
      var v26486 = f$$165.fractions;
      var v27909 = !v26486;
      if (v27909) {
        var v28822 = q$$20;
        var v29433 = q$$20.left;
        introspect(JAM.policy.p3) {
          var v30989 = Math.round(v29433)
        }
        v28822.left = v30989;
        var v28823 = q$$20;
        var v29434 = q$$20.top;
        introspect(JAM.policy.p3) {
          var v30990 = Math.round(v29434)
        }
        v28823.top = v30990;
      }
      var v26487 = q$$20.left;
      var v24478 = v26487 - h$$149;
      var v26488 = q$$20.top;
      var v24479 = v26488 - i$$198;
      r$$21 = {left:v24478, top:v24479};
      var v21532 = ["left", "top"];
      introspect(JAM.policy.p3) {
        a$$642.each(v21532, v1731);
      }
      var v21533 = a$$642.fn;
      var v15807 = v21533.bgiframe;
      if (v15807) {
        introspect(JAM.policy.p3) {
          c$$501.bgiframe();
        }
      }
      var v21534 = b$$623.using;
      var v15808 = {using:v21534};
      introspect(JAM.policy.p3) {
        var v10107 = a$$642.extend(q$$20, v15808)
      }
      introspect(JAM.policy.p3) {
        c$$501.offset(v10107);
      }
      return;
    }
    function v1730() {
      var v10108 = b$$623[this];
      var v15809 = !v10108;
      if (v15809) {
        v10108 = "";
      }
      var v3472 = v10108;
      introspect(JAM.policy.p3) {
        var a$$643 = v3472.split(" ")
      }
      var v24480 = a$$643.length;
      var v21535 = v24480 === 1;
      if (v21535) {
        var v24481;
        var v27910 = a$$643[0];
        introspect(JAM.policy.p3) {
          var v26491 = c$$500.test(v27910)
        }
        if (v26491) {
          var v26489 = [e$$327];
          introspect(JAM.policy.p3) {
            v24481 = a$$643.concat(v26489);
          }
        } else {
          var v26490;
          var v28824 = a$$643[0];
          introspect(JAM.policy.p3) {
            var v27912 = d$$379.test(v28824)
          }
          if (v27912) {
            var v27911 = [e$$327];
            introspect(JAM.policy.p3) {
              v26490 = v27911.concat(a$$643);
            }
          } else {
            v26490 = [e$$327, e$$327];
          }
          v24481 = v26490;
        }
        a$$643 = v24481;
      }
      var v21536;
      var v26492 = a$$643[0];
      introspect(JAM.policy.p3) {
        var v24482 = c$$500.test(v26492)
      }
      if (v24482) {
        v21536 = a$$643[0];
      } else {
        v21536 = e$$327;
      }
      a$$643[0] = v21536;
      var v15810;
      var v24483 = a$$643[1];
      introspect(JAM.policy.p3) {
        var v21537 = d$$379.test(v24483)
      }
      if (v21537) {
        v15810 = a$$643[1];
      } else {
        v15810 = e$$327;
      }
      a$$643[1] = v15810;
      introspect(JAM.policy.p2) {
        b$$623[this] = a$$643;
      }
      return;
    }
    var v10109 = !b$$623;
    var v15812 = !v10109;
    if (v15812) {
      var v15811 = b$$623.of;
      v10109 = !v15811;
    }
    var v3473 = v10109;
    if (v3473) {
      introspect(JAM.policy.p3) {
        return g$$181.apply(this, arguments);
      }
    }
    introspect(JAM.policy.p3) {
      b$$623 = a$$642.extend({}, b$$623);
    }
    var v3474 = b$$623.of;
    introspect(JAM.policy.p3) {
      var h$$148 = a$$642(v3474)
    }
    var i$$197 = h$$148[0];
    var v10110 = b$$623.collision;
    var v15813 = !v10110;
    if (v15813) {
      v10110 = "flip";
    }
    var v3475 = v10110;
    introspect(JAM.policy.p3) {
      var j$$102 = v3475.split(" ")
    }
    var v3476;
    var v10112 = b$$623.offset;
    if (v10112) {
      var v10111 = b$$623.offset;
      introspect(JAM.policy.p3) {
        v3476 = v10111.split(" ");
      }
    } else {
      v3476 = [0, 0];
    }
    var k$$71 = v3476;
    var l$$78;
    var m$$48;
    var n$$94;
    var v30074;
    var v30435 = i$$197.nodeType;
    var v30294 = v30435 === 9;
    if (v30294) {
      introspect(JAM.policy.p3) {
        l$$78 = h$$148.width();
      }
      introspect(JAM.policy.p3) {
        m$$48 = h$$148.height();
      }
      v30074 = n$$94 = {top:0, left:0};
    } else {
      var v30293;
      var v30437 = i$$197.setTimeout;
      if (v30437) {
        introspect(JAM.policy.p3) {
          l$$78 = h$$148.width();
        }
        introspect(JAM.policy.p3) {
          m$$48 = h$$148.height();
        }
        introspect(JAM.policy.p3) {
          var v30572 = h$$148.scrollTop()
        }
        introspect(JAM.policy.p3) {
          var v30573 = h$$148.scrollLeft()
        }
        v30293 = n$$94 = {top:v30572, left:v30573};
      } else {
        var v30436;
        var v30574 = i$$197.preventDefault;
        if (v30574) {
          b$$623.at = "left top";
          l$$78 = m$$48 = 0;
          var v30714 = b$$623.of;
          var v30658 = v30714.pageY;
          var v30715 = b$$623.of;
          var v30659 = v30715.pageX;
          v30436 = n$$94 = {top:v30658, left:v30659};
        } else {
          introspect(JAM.policy.p3) {
            l$$78 = h$$148.outerWidth();
          }
          introspect(JAM.policy.p3) {
            m$$48 = h$$148.outerHeight();
          }
          introspect(JAM.policy.p3) {
            v30436 = n$$94 = h$$148.offset();
          }
        }
        v30293 = v30436;
      }
      v30074 = v30293;
    }
    v30074;
    var v30075 = ["my", "at"];
    introspect(JAM.policy.p3) {
      a$$642.each(v30075, v1730);
    }
    var v30076 = j$$102.length;
    var v29813 = v30076 === 1;
    if (v29813) {
      j$$102[1] = j$$102[0];
    }
    var v29435 = k$$71;
    var v30077 = k$$71[0];
    var v29814 = parseInt(v30077, 10);
    var v30078 = !v29814;
    if (v30078) {
      v29814 = 0;
    }
    v29435[0] = v29814;
    var v29436 = k$$71.length;
    var v28825 = v29436 === 1;
    if (v28825) {
      k$$71[1] = k$$71[0];
    }
    var v27913 = k$$71;
    var v29437 = k$$71[1];
    var v28826 = parseInt(v29437, 10);
    var v29438 = !v28826;
    if (v29438) {
      v28826 = 0;
    }
    v27913[1] = v28826;
    var v26493;
    var v29439 = b$$623.at;
    var v28827 = v29439[0];
    var v27915 = v28827 === "right";
    if (v27915) {
      var v28828 = n$$94.left;
      v26493 = n$$94.left = v28828 + l$$78;
    } else {
      var v29440 = b$$623.at;
      var v28829 = v29440[0];
      var v27914 = v28829 === e$$327;
      if (v27914) {
        var v29441 = n$$94.left;
        var v29442 = l$$78 / 2;
        v27914 = n$$94.left = v29441 + v29442;
      }
      v26493 = v27914;
    }
    v26493;
    var v24484;
    var v28830 = b$$623.at;
    var v27916 = v28830[1];
    var v26495 = v27916 === "bottom";
    if (v26495) {
      var v27917 = n$$94.top;
      v24484 = n$$94.top = v27917 + m$$48;
    } else {
      var v28831 = b$$623.at;
      var v27918 = v28831[1];
      var v26494 = v27918 === e$$327;
      if (v26494) {
        var v28832 = n$$94.top;
        var v28833 = m$$48 / 2;
        v26494 = n$$94.top = v28832 + v28833;
      }
      v24484 = v26494;
    }
    v24484;
    var v24485 = n$$94.left;
    var v24486 = k$$71[0];
    n$$94.left = v24485 + v24486;
    var v21538 = n$$94.top;
    var v21539 = k$$71[1];
    n$$94.top = v21538 + v21539;
    introspect(JAM.policy.p3) {
      return this.each(v1732);
    }
  }
  var v3477 = a$$642.ui;
  var v10113 = !v3477;
  if (v10113) {
    v3477 = {};
  }
  a$$642.ui = v3477;
  var c$$500 = /left|center|right/;
  var d$$379 = /top|center|bottom/;
  var e$$327 = "center";
  var f$$165 = {};
  var v3478 = a$$642.fn;
  var g$$181 = v3478.position;
  var v3479 = a$$642.fn;
  var h$$147 = v3479.offset;
  var v24487 = a$$642.fn;
  v24487.position = v1733;
  var v24488 = a$$642.ui;
  var v26496 = {left:v1734, top:v1735};
  var v26497 = {left:v1736, top:v1737};
  v24488.position = {fit:v26496, flip:v26497};
  var v24489 = a$$642.offset;
  var v21540 = v24489.setOffset;
  var v24490 = !v21540;
  if (v24490) {
    var v26498 = a$$642.offset;
    v26498.setOffset = v1738;
    var v26499 = a$$642.fn;
    v26499.offset = v1741;
  }
  var v15814 = a$$642.curCSS;
  var v21541 = !v15814;
  if (v21541) {
    a$$642.curCSS = a$$642.css;
  }
  v1743();
  return;
}
function v1729(a$$628, b$$594) {
  function v1728() {
    var v15815 = a$$628.ui;
    var v10114 = v15815.dialog;
    var v3480 = v10114.overlay;
    var v3481 = this.$el;
    introspect(JAM.policy.p3) {
      v3480.destroy(v3481);
    }
    return;
  }
  function v1727() {
    function v1726() {
      introspect(JAM.policy.p3) {
        b$$621 = b$$621.add(this);
      }
      return;
    }
    introspect(JAM.policy.p3) {
      var b$$621 = a$$628([])
    }
    var v24491 = a$$628.ui;
    var v21542 = v24491.dialog;
    var v15816 = v21542.overlay;
    var v10115 = v15816.instances;
    introspect(JAM.policy.p3) {
      a$$628.each(v10115, v1726);
    }
    var v15817 = {width:0, height:0};
    introspect(JAM.policy.p3) {
      var v10116 = b$$621.css(v15817)
    }
    var v26500 = a$$628.ui;
    var v24492 = v26500.dialog;
    var v21543 = v24492.overlay;
    introspect(JAM.policy.p3) {
      var v15818 = v21543.width()
    }
    var v26501 = a$$628.ui;
    var v24493 = v26501.dialog;
    var v21544 = v24493.overlay;
    introspect(JAM.policy.p3) {
      var v15819 = v21544.height()
    }
    var v10117 = {width:v15818, height:v15819};
    introspect(JAM.policy.p3) {
      v10116.css(v10117);
    }
    return;
  }
  function v1725() {
    var b$$620;
    var c$$499;
    var v3482;
    var v15820 = a$$628.browser;
    var v10119 = v15820.msie;
    if (v10119) {
      var v24494 = document.documentElement;
      var v21545 = v24494.scrollWidth;
      var v24495 = document.body;
      var v21546 = v24495.scrollWidth;
      introspect(JAM.policy.p3) {
        b$$620 = Math.max(v21545, v21546);
      }
      var v24496 = document.documentElement;
      var v21547 = v24496.offsetWidth;
      var v24497 = document.body;
      var v21548 = v24497.offsetWidth;
      introspect(JAM.policy.p3) {
        c$$499 = Math.max(v21547, v21548);
      }
      var v15821;
      var v21550 = b$$620 < c$$499;
      if (v21550) {
        introspect(JAM.policy.p3) {
          var v24498 = a$$628(window)
        }
        introspect(JAM.policy.p3) {
          var v21549 = v24498.width()
        }
        v15821 = v21549 + "px";
      } else {
        v15821 = b$$620 + "px";
      }
      v3482 = v15821;
    } else {
      introspect(JAM.policy.p3) {
        var v15822 = a$$628(document)
      }
      introspect(JAM.policy.p3) {
        var v10118 = v15822.width()
      }
      v3482 = v10118 + "px";
    }
    return v3482;
  }
  function v1724() {
    var b$$619;
    var c$$498;
    var v3483;
    var v21551 = a$$628.browser;
    var v15823 = v21551.msie;
    if (v15823) {
      var v24499 = a$$628.browser;
      var v21552 = v24499.version;
      v15823 = v21552 < 7;
    }
    var v10121 = v15823;
    if (v10121) {
      var v24500 = document.documentElement;
      var v21553 = v24500.scrollHeight;
      var v24501 = document.body;
      var v21554 = v24501.scrollHeight;
      introspect(JAM.policy.p3) {
        b$$619 = Math.max(v21553, v21554);
      }
      var v24502 = document.documentElement;
      var v21555 = v24502.offsetHeight;
      var v24503 = document.body;
      var v21556 = v24503.offsetHeight;
      introspect(JAM.policy.p3) {
        c$$498 = Math.max(v21555, v21556);
      }
      var v15824;
      var v21558 = b$$619 < c$$498;
      if (v21558) {
        introspect(JAM.policy.p3) {
          var v24504 = a$$628(window)
        }
        introspect(JAM.policy.p3) {
          var v21557 = v24504.height()
        }
        v15824 = v21557 + "px";
      } else {
        v15824 = b$$619 + "px";
      }
      v3483 = v15824;
    } else {
      introspect(JAM.policy.p3) {
        var v15825 = a$$628(document)
      }
      introspect(JAM.policy.p3) {
        var v10120 = v15825.height()
      }
      v3483 = v10120 + "px";
    }
    return v3483;
  }
  function v1723(b$$618) {
    function v1722() {
      introspect(JAM.policy.p3) {
        var v3484 = this.css("z-index")
      }
      introspect(JAM.policy.p3) {
        d$$378 = Math.max(d$$378, v3484);
      }
      return;
    }
    var v3485 = this.instances;
    introspect(JAM.policy.p3) {
      var c$$497 = a$$628.inArray(b$$618, v3485)
    }
    var v15826 = c$$497 != -1;
    if (v15826) {
      var v21559 = this.oldInstances;
      var v26502 = this.instances;
      introspect(JAM.policy.p3) {
        var v24505 = v26502.splice(c$$497, 1)
      }
      var v21560 = v24505[0];
      introspect(JAM.policy.p3) {
        v21559.push(v21560);
      }
    }
    var v24506 = this.instances;
    var v21561 = v24506.length;
    var v15827 = v21561 === 0;
    if (v15827) {
      var v24507 = [document, window];
      introspect(JAM.policy.p3) {
        var v21562 = a$$628(v24507)
      }
      introspect(JAM.policy.p3) {
        v21562.unbind(".dialog-overlay");
      }
    }
    introspect(JAM.policy.p3) {
      b$$618.remove();
    }
    var d$$378 = 0;
    var v10122 = this.instances;
    introspect(JAM.policy.p3) {
      a$$628.each(v10122, v1722);
    }
    this.maxZ = d$$378;
    return;
  }
  function v1721(b$$616) {
    function v1720(c$$496) {
      var v24508 = b$$616.options;
      var v21563 = v24508.closeOnEscape;
      if (v21563) {
        introspect(JAM.policy.p3) {
          var v24509 = c$$496.isDefaultPrevented()
        }
        v21563 = !v24509;
      }
      var v15828 = v21563;
      if (v15828) {
        v15828 = c$$496.keyCode;
      }
      var v10123 = v15828;
      if (v10123) {
        var v15829 = c$$496.keyCode;
        var v24510 = a$$628.ui;
        var v21564 = v24510.keyCode;
        var v15830 = v21564.ESCAPE;
        v10123 = v15829 === v15830;
      }
      var v3486 = v10123;
      if (v3486) {
        introspect(JAM.policy.p3) {
          b$$616.close(c$$496);
        }
        introspect(JAM.policy.p3) {
          c$$496.preventDefault();
        }
      }
      return;
    }
    function v1719() {
      function v1718(b$$617) {
        var v21565 = b$$617.target;
        introspect(JAM.policy.p3) {
          var v15831 = a$$628(v21565)
        }
        introspect(JAM.policy.p3) {
          var v10124 = v15831.zIndex()
        }
        var v24511 = a$$628.ui;
        var v21566 = v24511.dialog;
        var v15832 = v21566.overlay;
        var v10125 = v15832.maxZ;
        var v3487 = v10124 < v10125;
        if (v3487) {
          return !1;
        }
        return;
      }
      var v24512 = a$$628.ui;
      var v21567 = v24512.dialog;
      var v15833 = v21567.overlay;
      var v10126 = v15833.instances;
      var v3488 = v10126.length;
      if (v3488) {
        introspect(JAM.policy.p3) {
          var v10127 = a$$628(document)
        }
        var v24513 = a$$628.ui;
        var v21568 = v24513.dialog;
        var v15834 = v21568.overlay;
        var v10128 = v15834.events;
        introspect(JAM.policy.p3) {
          v10127.bind(v10128, v1718);
        }
      }
      return;
    }
    var v15835 = this.instances;
    var v10129 = v15835.length;
    var v3489 = v10129 === 0;
    if (v3489) {
      setTimeout(v1719, 1);
      introspect(JAM.policy.p3) {
        var v21569 = a$$628(document)
      }
      introspect(JAM.policy.p3) {
        v21569.bind("keydown.dialog-overlay", v1720);
      }
      introspect(JAM.policy.p3) {
        var v15836 = a$$628(window)
      }
      var v26503 = a$$628.ui;
      var v24514 = v26503.dialog;
      var v21570 = v24514.overlay;
      var v15837 = v21570.resize;
      introspect(JAM.policy.p3) {
        v15836.bind("resize.dialog-overlay", v15837);
      }
    }
    var v21571 = this.oldInstances;
    introspect(JAM.policy.p3) {
      var v15838 = v21571.pop()
    }
    var v21573 = !v15838;
    if (v21573) {
      introspect(JAM.policy.p3) {
        var v21572 = a$$628("<div></div>")
      }
      introspect(JAM.policy.p3) {
        v15838 = v21572.addClass("ui-widget-overlay");
      }
    }
    var v10130 = v15838;
    var v10131 = document.body;
    introspect(JAM.policy.p3) {
      var v3490 = v10130.appendTo(v10131)
    }
    introspect(JAM.policy.p3) {
      var v10132 = this.width()
    }
    introspect(JAM.policy.p3) {
      var v10133 = this.height()
    }
    var v3491 = {width:v10132, height:v10133};
    introspect(JAM.policy.p3) {
      var c$$495 = v3490.css(v3491)
    }
    var v21574 = a$$628.fn;
    var v15839 = v21574.bgiframe;
    if (v15839) {
      introspect(JAM.policy.p3) {
        c$$495.bgiframe();
      }
    }
    var v15840 = this.instances;
    introspect(JAM.policy.p3) {
      v15840.push(c$$495);
    }
    return c$$495;
  }
  function v1717(a$$641) {
    return a$$641 + ".dialog-overlay";
  }
  function v1716(b$$615) {
    var v15841 = a$$628.ui;
    var v10134 = v15841.dialog;
    var v3492 = v10134.overlay;
    introspect(JAM.policy.p3) {
      var v30991 = v3492.create(b$$615)
    }
    this.$el = v30991;
    return;
  }
  function v1715(a$$640) {
    introspect(JAM.policy.p3) {
      var b$$614 = a$$640.attr("id")
    }
    var v15842 = !b$$614;
    if (v15842) {
      var v24515 = this.uuid;
      this.uuid = v24515 + 1;
      b$$614 = this.uuid;
    }
    return "ui-dialog-title-" + b$$614;
  }
  function v1714() {
    var b$$613 = this.options;
    var c$$494;
    var d$$377;
    var v3493 = this.uiDialog;
    introspect(JAM.policy.p3) {
      var e$$326 = v3493.is(":visible")
    }
    var v24516 = this.element;
    introspect(JAM.policy.p3) {
      var v21575 = v24516.show()
    }
    var v21576 = {width:"auto", minHeight:0, height:0};
    introspect(JAM.policy.p3) {
      v21575.css(v21576);
    }
    var v24517 = b$$613.minWidth;
    var v24518 = b$$613.width;
    var v21577 = v24517 > v24518;
    if (v21577) {
      b$$613.width = b$$613.minWidth;
    }
    var v21578 = this.uiDialog;
    var v24519 = b$$613.width;
    var v21579 = {height:"auto", width:v24519};
    introspect(JAM.policy.p3) {
      var v15843 = v21578.css(v21579)
    }
    introspect(JAM.policy.p3) {
      c$$494 = v15843.height();
    }
    var v15844 = b$$613.minHeight;
    var v10135 = v15844 - c$$494;
    introspect(JAM.policy.p3) {
      d$$377 = Math.max(0, v10135);
    }
    var v10136 = b$$613.height;
    var v3501 = v10136 === "auto";
    if (v3501) {
      var v10137 = a$$628.support;
      var v3498 = v10137.minHeight;
      if (v3498) {
        var v3494 = this.element;
        var v3495 = {minHeight:d$$377, height:"auto"};
        introspect(JAM.policy.p3) {
          v3494.css(v3495);
        }
      } else {
        var v3496 = this.uiDialog;
        introspect(JAM.policy.p3) {
          v3496.show();
        }
        var v10138 = this.element;
        introspect(JAM.policy.p3) {
          var v3497 = v10138.css("height", "auto")
        }
        introspect(JAM.policy.p3) {
          var f$$164 = v3497.height()
        }
        var v15846 = !e$$326;
        if (v15846) {
          var v15845 = this.uiDialog;
          introspect(JAM.policy.p3) {
            v15845.hide();
          }
        }
        var v10139 = this.element;
        introspect(JAM.policy.p3) {
          var v10140 = Math.max(f$$164, d$$377)
        }
        introspect(JAM.policy.p3) {
          v10139.height(v10140);
        }
      }
    } else {
      var v3499 = this.element;
      var v15847 = b$$613.height;
      var v10141 = v15847 - c$$494;
      introspect(JAM.policy.p3) {
        var v3500 = Math.max(v10141, 0)
      }
      introspect(JAM.policy.p3) {
        v3499.height(v3500);
      }
    }
    var v10142 = this.uiDialog;
    introspect(JAM.policy.p3) {
      var v3502 = v10142.is(":data(resizable)")
    }
    if (v3502) {
      var v10143 = this.uiDialog;
      introspect(JAM.policy.p3) {
        var v10144 = this._minHeight()
      }
      introspect(JAM.policy.p3) {
        v10143.resizable("option", "minHeight", v10144);
      }
    }
    return;
  }
  function v1713(b$$612, d$$376) {
    var e$$325 = this;
    var f$$163 = e$$325.uiDialog;
    switch(b$$612) {
      case "beforeclose":
        b$$612 = "beforeClose";
        break;
      case "buttons":
        introspect(JAM.policy.p3) {
          e$$325._createButtons(d$$376);
        }
        break;
      case "closeText":
        var v3503 = e$$325.uiDialogTitlebarCloseText;
        var v3504 = "" + d$$376;
        introspect(JAM.policy.p3) {
          v3503.text(v3504);
        }
        break;
      case "dialogClass":
        var v15848 = e$$325.options;
        var v10145 = v15848.dialogClass;
        introspect(JAM.policy.p3) {
          var v3505 = f$$163.removeClass(v10145)
        }
        var v3506 = c$$479 + d$$376;
        introspect(JAM.policy.p3) {
          v3505.addClass(v3506);
        }
        break;
      case "disabled":
        var v3507;
        if (d$$376) {
          introspect(JAM.policy.p3) {
            v3507 = f$$163.addClass("ui-dialog-disabled");
          }
        } else {
          introspect(JAM.policy.p3) {
            v3507 = f$$163.removeClass("ui-dialog-disabled");
          }
        }
        v3507;
        break;
      case "draggable":
        introspect(JAM.policy.p3) {
          var g$$180 = f$$163.is(":data(draggable)")
        }
        var v15849 = g$$180;
        if (v15849) {
          v15849 = !d$$376;
        }
        var v10146 = v15849;
        if (v10146) {
          introspect(JAM.policy.p3) {
            f$$163.draggable("destroy");
          }
        }
        var v15850 = !g$$180;
        if (v15850) {
          v15850 = d$$376;
        }
        var v10147 = v15850;
        if (v10147) {
          introspect(JAM.policy.p3) {
            e$$325._makeDraggable();
          }
        }
        break;
      case "position":
        introspect(JAM.policy.p3) {
          e$$325._position(d$$376);
        }
        break;
      case "resizable":
        introspect(JAM.policy.p3) {
          var h$$146 = f$$163.is(":data(resizable)")
        }
        var v21580 = h$$146;
        if (v21580) {
          v21580 = !d$$376;
        }
        var v15851 = v21580;
        if (v15851) {
          introspect(JAM.policy.p3) {
            f$$163.resizable("destroy");
          }
        }
        var v21581 = h$$146;
        if (v21581) {
          var v24520 = typeof d$$376;
          v21581 = v24520 == "string";
        }
        var v15852 = v21581;
        if (v15852) {
          introspect(JAM.policy.p3) {
            f$$163.resizable("option", "handles", d$$376);
          }
        }
        var v15853 = !h$$146;
        if (v15853) {
          var v21582 = !1;
          v15853 = d$$376 !== v21582;
        }
        var v10148 = v15853;
        if (v10148) {
          introspect(JAM.policy.p3) {
            e$$325._makeResizable(d$$376);
          }
        }
        break;
      case "title":
        var v10149 = e$$325.uiDialogTitlebar;
        introspect(JAM.policy.p3) {
          var v3508 = a$$628(".ui-dialog-title", v10149)
        }
        var v10150 = d$$376 || "&#160;";
        var v3509 = "" + v10150;
        introspect(JAM.policy.p3) {
          v3508.html(v3509);
        }
      ;
    }
    var v15854 = a$$628.Widget;
    var v10151 = v15854.prototype;
    var v3510 = v10151._setOption;
    introspect(JAM.policy.p3) {
      v3510.apply(e$$325, arguments);
    }
    return;
  }
  function v1712(b$$610) {
    function v1711(a$$639, b$$611) {
      introspect(JAM.policy.p3) {
        c$$493._setOption(a$$639, b$$611);
      }
      var v15855 = a$$639 in d$$364;
      if (v15855) {
        g$$179 = !0;
      }
      var v10152 = a$$639 in e$$315;
      if (v10152) {
        introspect(JAM.policy.p2) {
          f$$162[a$$639] = b$$611;
        }
      }
      return;
    }
    var c$$493 = this;
    var f$$162 = {};
    var g$$179 = !1;
    introspect(JAM.policy.p3) {
      a$$628.each(b$$610, v1711);
    }
    if (g$$179) {
      introspect(JAM.policy.p3) {
        this._size();
      }
    }
    var v15856 = this.uiDialog;
    introspect(JAM.policy.p3) {
      var v10153 = v15856.is(":data(resizable)")
    }
    if (v10153) {
      var v15857 = this.uiDialog;
      introspect(JAM.policy.p3) {
        v15857.resizable("option", f$$162);
      }
    }
    return;
  }
  function v1710(b$$608) {
    function v1709(a$$638, b$$609) {
      var v15858 = c$$492[a$$638];
      var v10154 = +v15858;
      var v10155 = c$$492[a$$638];
      var v3511 = v10154 === v10155;
      if (v3511) {
        introspect(JAM.policy.p2) {
          d$$375[a$$638] = c$$492[a$$638];
        }
        introspect(JAM.policy.p2) {
          c$$492[a$$638] = b$$609;
        }
      }
      return;
    }
    var c$$492 = [];
    var d$$375 = [0, 0];
    var e$$324;
    if (b$$608) {
      var v15859 = typeof b$$608;
      var v10156 = v15859 == "string";
      var v15861 = !v10156;
      if (v15861) {
        var v21583 = typeof b$$608;
        var v15860 = v21583 == "object";
        if (v15860) {
          v15860 = "0" in b$$608;
        }
        v10156 = v15860;
      }
      var v3512 = v10156;
      if (v3512) {
        var v21584;
        var v24523 = b$$608.split;
        if (v24523) {
          introspect(JAM.policy.p3) {
            v21584 = b$$608.split(" ");
          }
        } else {
          var v24521 = b$$608[0];
          var v24522 = b$$608[1];
          v21584 = [v24521, v24522];
        }
        c$$492 = v21584;
        var v24524 = c$$492.length;
        var v21585 = v24524 === 1;
        if (v21585) {
          c$$492[1] = c$$492[0];
        }
        var v15862 = ["left", "top"];
        introspect(JAM.policy.p3) {
          a$$628.each(v15862, v1709);
        }
        introspect(JAM.policy.p3) {
          var v10157 = c$$492.join(" ")
        }
        introspect(JAM.policy.p3) {
          var v10158 = c$$492.join(" ")
        }
        introspect(JAM.policy.p3) {
          var v10159 = d$$375.join(" ")
        }
        b$$608 = {my:v10157, at:v10158, offset:v10159};
      }
      var v24525 = a$$628.ui;
      var v21586 = v24525.dialog;
      var v15863 = v21586.prototype;
      var v10160 = v15863.options;
      var v3513 = v10160.position;
      introspect(JAM.policy.p3) {
        b$$608 = a$$628.extend({}, v3513, b$$608);
      }
    } else {
      var v21587 = a$$628.ui;
      var v15864 = v21587.dialog;
      var v10161 = v15864.prototype;
      var v3514 = v10161.options;
      b$$608 = v3514.position;
    }
    var v21588 = this.uiDialog;
    introspect(JAM.policy.p3) {
      e$$324 = v21588.is(":visible");
    }
    var v24527 = !e$$324;
    if (v24527) {
      var v24526 = this.uiDialog;
      introspect(JAM.policy.p3) {
        v24526.show();
      }
    }
    var v21589 = this.uiDialog;
    var v21590 = {top:0, left:0};
    introspect(JAM.policy.p3) {
      var v15865 = v21589.css(v21590)
    }
    var v21591 = {of:window};
    introspect(JAM.policy.p3) {
      var v15866 = a$$628.extend(v21591, b$$608)
    }
    introspect(JAM.policy.p3) {
      v15865.position(v15866);
    }
    var v15868 = !e$$324;
    if (v15868) {
      var v15867 = this.uiDialog;
      introspect(JAM.policy.p3) {
        v15867.hide();
      }
    }
    return;
  }
  function v1708() {
    var a$$637 = this.options;
    var v3515;
    var v15869 = a$$637.height;
    var v10164 = v15869 === "auto";
    if (v10164) {
      v3515 = a$$637.minHeight;
    } else {
      var v10162 = a$$637.minHeight;
      var v10163 = a$$637.height;
      introspect(JAM.policy.p3) {
        v3515 = Math.min(v10162, v10163);
      }
    }
    return v3515;
  }
  function v1707(c$$489) {
    function v1706(b$$607, c$$491) {
      introspect(JAM.policy.p3) {
        var v24528 = a$$628(this)
      }
      introspect(JAM.policy.p3) {
        v24528.removeClass("ui-dialog-resizing");
      }
      var v24529 = e$$323;
      introspect(JAM.policy.p3) {
        var v26504 = a$$628(this)
      }
      introspect(JAM.policy.p3) {
        var v30992 = v26504.height()
      }
      v24529.height = v30992;
      var v21592 = e$$323;
      introspect(JAM.policy.p3) {
        var v24530 = a$$628(this)
      }
      introspect(JAM.policy.p3) {
        var v30993 = v24530.width()
      }
      v21592.width = v30993;
      var v15870 = h$$145(c$$491);
      introspect(JAM.policy.p3) {
        d$$374._trigger("resizeStop", b$$607, v15870);
      }
      var v21593 = a$$628.ui;
      var v15871 = v21593.dialog;
      var v10165 = v15871.overlay;
      introspect(JAM.policy.p3) {
        v10165.resize();
      }
      return;
    }
    function v1705(a$$636, b$$606) {
      var v3516 = h$$145(b$$606);
      introspect(JAM.policy.p3) {
        d$$374._trigger("resize", a$$636, v3516);
      }
      return;
    }
    function v1704(b$$605, c$$490) {
      introspect(JAM.policy.p3) {
        var v10166 = a$$628(this)
      }
      introspect(JAM.policy.p3) {
        v10166.addClass("ui-dialog-resizing");
      }
      var v10167 = h$$145(c$$490);
      introspect(JAM.policy.p3) {
        d$$374._trigger("resizeStart", b$$605, v10167);
      }
      return;
    }
    function h$$145(a$$635) {
      var v3517 = a$$635.originalPosition;
      var v3518 = a$$635.originalSize;
      var v3519 = a$$635.position;
      var v3520 = a$$635.size;
      return {originalPosition:v3517, originalSize:v3518, position:v3519, size:v3520};
    }
    var v3521;
    var v10169 = c$$489 === b$$594;
    if (v10169) {
      var v10168 = this.options;
      v3521 = v10168.resizable;
    } else {
      v3521 = c$$489;
    }
    c$$489 = v3521;
    var d$$374 = this;
    var e$$323 = d$$374.options;
    var v3522 = d$$374.uiDialog;
    introspect(JAM.policy.p3) {
      var f$$161 = v3522.css("position")
    }
    var v3523;
    var v15872 = typeof c$$489;
    var v10170 = v15872 == "string";
    if (v10170) {
      v3523 = c$$489;
    } else {
      v3523 = "n,e,s,w,se,sw,ne,nw";
    }
    var g$$178 = v3523;
    var v21594 = d$$374.uiDialog;
    var v24531 = d$$374.element;
    var v24532 = e$$323.maxWidth;
    var v24533 = e$$323.maxHeight;
    var v24534 = e$$323.minWidth;
    introspect(JAM.policy.p3) {
      var v24535 = d$$374._minHeight()
    }
    var v21595 = {cancel:".ui-dialog-content", containment:"document", alsoResize:v24531, maxWidth:v24532, maxHeight:v24533, minWidth:v24534, minHeight:v24535, handles:g$$178, start:v1704, resize:v1705, stop:v1706};
    introspect(JAM.policy.p3) {
      var v15873 = v21594.resizable(v21595)
    }
    introspect(JAM.policy.p3) {
      var v10171 = v15873.css("position", f$$161)
    }
    introspect(JAM.policy.p3) {
      var v3524 = v10171.find(".ui-resizable-se")
    }
    introspect(JAM.policy.p3) {
      v3524.addClass("ui-icon ui-icon-grip-diagonal-se");
    }
    return;
  }
  function v1703() {
    function v1702(g$$177, h$$144) {
      var v21596 = c$$487;
      var v27919 = h$$144.position;
      var v26505 = v27919.left;
      introspect(JAM.policy.p3) {
        var v26506 = d$$372.scrollLeft()
      }
      var v24536 = v26505 - v26506;
      var v27920 = h$$144.position;
      var v26507 = v27920.top;
      introspect(JAM.policy.p3) {
        var v26508 = d$$372.scrollTop()
      }
      var v24537 = v26507 - v26508;
      v21596.position = [v24536, v24537];
      introspect(JAM.policy.p3) {
        var v24538 = a$$628(this)
      }
      introspect(JAM.policy.p3) {
        var v21597 = v24538.removeClass("ui-dialog-dragging")
      }
      introspect(JAM.policy.p3) {
        v21597.height(e$$322);
      }
      var v15874 = f$$160(h$$144);
      introspect(JAM.policy.p3) {
        b$$604._trigger("dragStop", g$$177, v15874);
      }
      var v21598 = a$$628.ui;
      var v15875 = v21598.dialog;
      var v10172 = v15875.overlay;
      introspect(JAM.policy.p3) {
        v10172.resize();
      }
      return;
    }
    function v1701(a$$634, c$$488) {
      var v3525 = f$$160(c$$488);
      introspect(JAM.policy.p3) {
        b$$604._trigger("drag", a$$634, v3525);
      }
      return;
    }
    function v1700(d$$373, g$$176) {
      var v15876;
      var v24539 = c$$487.height;
      var v21600 = v24539 === "auto";
      if (v21600) {
        v15876 = "auto";
      } else {
        introspect(JAM.policy.p3) {
          var v21599 = a$$628(this)
        }
        introspect(JAM.policy.p3) {
          v15876 = v21599.height();
        }
      }
      e$$322 = v15876;
      introspect(JAM.policy.p3) {
        var v21601 = a$$628(this)
      }
      introspect(JAM.policy.p3) {
        var v24540 = a$$628(this)
      }
      introspect(JAM.policy.p3) {
        var v21602 = v24540.height()
      }
      introspect(JAM.policy.p3) {
        var v15877 = v21601.height(v21602)
      }
      introspect(JAM.policy.p3) {
        v15877.addClass("ui-dialog-dragging");
      }
      var v10173 = f$$160(g$$176);
      introspect(JAM.policy.p3) {
        b$$604._trigger("dragStart", d$$373, v10173);
      }
      return;
    }
    function f$$160(a$$633) {
      var v3526 = a$$633.position;
      var v3527 = a$$633.offset;
      return {position:v3526, offset:v3527};
    }
    var b$$604 = this;
    var c$$487 = b$$604.options;
    introspect(JAM.policy.p3) {
      var d$$372 = a$$628(document)
    }
    var e$$322;
    var v3528 = b$$604.uiDialog;
    var v3529 = {cancel:".ui-dialog-content, .ui-dialog-titlebar-close", handle:".ui-dialog-titlebar", containment:"document", start:v1700, drag:v1701, stop:v1702};
    introspect(JAM.policy.p3) {
      v3528.draggable(v3529);
    }
    return;
  }
  function v1699(b$$601) {
    function v1698(b$$602, d$$371) {
      function v1697(a$$632, b$$603) {
        var v3530 = a$$632 === "click";
        if (v3530) {
          return;
        }
        var v3531;
        var v10174 = a$$632 in e$$321;
        if (v10174) {
          introspect(JAM.policy.p3) {
            v3531 = e$$321[a$$632](b$$603);
          }
        } else {
          introspect(JAM.policy.p3) {
            v3531 = e$$321.attr(a$$632, b$$603);
          }
        }
        v3531;
        return;
      }
      function v1696() {
        var v3532 = d$$371.click;
        var v10175 = c$$486.element;
        var v3533 = v10175[0];
        introspect(JAM.policy.p3) {
          v3532.apply(v3533, arguments);
        }
        return;
      }
      var v3534;
      introspect(JAM.policy.p3) {
        var v10176 = a$$628.isFunction(d$$371)
      }
      if (v10176) {
        v3534 = {click:d$$371, text:b$$602};
      } else {
        v3534 = d$$371;
      }
      d$$371 = v3534;
      introspect(JAM.policy.p3) {
        var v10177 = a$$628('<button type="button"></button>')
      }
      introspect(JAM.policy.p3) {
        var v3535 = v10177.click(v1696)
      }
      introspect(JAM.policy.p3) {
        var e$$321 = v3535.appendTo(f$$159)
      }
      introspect(JAM.policy.p3) {
        a$$628.each(d$$371, v1697);
      }
      var v15878 = a$$628.fn;
      var v10178 = v15878.button;
      if (v10178) {
        introspect(JAM.policy.p3) {
          e$$321.button();
        }
      }
      return;
    }
    function v1695() {
      var v3536 = d$$370 = !0;
      return !v3536;
    }
    var c$$486 = this;
    var d$$370 = !1;
    introspect(JAM.policy.p3) {
      var v3537 = a$$628("<div></div>")
    }
    introspect(JAM.policy.p3) {
      var e$$320 = v3537.addClass("ui-dialog-buttonpane ui-widget-content ui-helper-clearfix")
    }
    introspect(JAM.policy.p3) {
      var v10179 = a$$628("<div></div>")
    }
    introspect(JAM.policy.p3) {
      var v3538 = v10179.addClass("ui-dialog-buttonset")
    }
    introspect(JAM.policy.p3) {
      var f$$159 = v3538.appendTo(e$$320)
    }
    var v21603 = c$$486.uiDialog;
    introspect(JAM.policy.p3) {
      var v15879 = v21603.find(".ui-dialog-buttonpane")
    }
    introspect(JAM.policy.p3) {
      v15879.remove();
    }
    var v24541 = typeof b$$601;
    var v21604 = v24541 == "object";
    if (v21604) {
      v21604 = b$$601 !== null;
    }
    var v15880 = v21604;
    if (v15880) {
      introspect(JAM.policy.p3) {
        a$$628.each(b$$601, v1695);
      }
    }
    if (d$$370) {
      introspect(JAM.policy.p3) {
        a$$628.each(b$$601, v1698);
      }
      var v21605 = c$$486.uiDialog;
      introspect(JAM.policy.p3) {
        e$$320.appendTo(v21605);
      }
    }
    return;
  }
  function v1694() {
    function v1693(b$$600) {
      var v10180 = b$$600.keyCode;
      var v21606 = a$$628.ui;
      var v15881 = v21606.keyCode;
      var v10181 = v15881.TAB;
      var v3539 = v10180 !== v10181;
      if (v3539) {
        return;
      }
      introspect(JAM.policy.p3) {
        var c$$485 = a$$628(":tabbable", this)
      }
      introspect(JAM.policy.p3) {
        var d$$369 = c$$485.filter(":first")
      }
      introspect(JAM.policy.p3) {
        var e$$319 = c$$485.filter(":last")
      }
      var v15882 = b$$600.target;
      var v15883 = e$$319[0];
      var v10182 = v15882 === v15883;
      if (v10182) {
        var v15884 = b$$600.shiftKey;
        v10182 = !v15884;
      }
      var v3540 = v10182;
      if (v3540) {
        introspect(JAM.policy.p3) {
          d$$369.focus(1);
        }
        return !1;
      }
      var v15885 = b$$600.target;
      var v15886 = d$$369[0];
      var v10183 = v15885 === v15886;
      if (v10183) {
        v10183 = b$$600.shiftKey;
      }
      var v3541 = v10183;
      if (v3541) {
        introspect(JAM.policy.p3) {
          e$$319.focus(1);
        }
        return !1;
      }
      return;
    }
    var v3542 = this._isOpen;
    if (v3542) {
      return;
    }
    var b$$599 = this;
    var c$$484 = b$$599.options;
    var d$$368 = b$$599.uiDialog;
    var v29815 = b$$599;
    var v30079;
    var v30296 = c$$484.modal;
    if (v30296) {
      var v30575 = a$$628.ui;
      var v30438 = v30575.dialog;
      var v30295 = v30438.overlay;
      v30079 = new v30295(b$$599);
    } else {
      v30079 = null;
    }
    v29815.overlay = v30079;
    introspect(JAM.policy.p3) {
      b$$599._size();
    }
    var v29443 = c$$484.position;
    introspect(JAM.policy.p3) {
      b$$599._position(v29443);
    }
    var v28834 = c$$484.show;
    introspect(JAM.policy.p3) {
      d$$368.show(v28834);
    }
    var v27921 = !0;
    introspect(JAM.policy.p3) {
      b$$599.moveToTop(v27921);
    }
    var v26509 = c$$484.modal;
    if (v26509) {
      introspect(JAM.policy.p3) {
        d$$368.bind("keydown.ui-dialog", v1693);
      }
    }
    var v29816 = b$$599.element;
    introspect(JAM.policy.p3) {
      var v29444 = v29816.find(":tabbable")
    }
    introspect(JAM.policy.p3) {
      var v28835 = v29444.get()
    }
    introspect(JAM.policy.p3) {
      var v29817 = d$$368.find(".ui-dialog-buttonpane :tabbable")
    }
    introspect(JAM.policy.p3) {
      var v29445 = v29817.get()
    }
    introspect(JAM.policy.p3) {
      var v29446 = d$$368.get()
    }
    introspect(JAM.policy.p3) {
      var v28836 = v29445.concat(v29446)
    }
    introspect(JAM.policy.p3) {
      var v27922 = v28835.concat(v28836)
    }
    introspect(JAM.policy.p3) {
      var v26510 = a$$628(v27922)
    }
    introspect(JAM.policy.p3) {
      var v24542 = v26510.eq(0)
    }
    introspect(JAM.policy.p3) {
      v24542.focus();
    }
    b$$599._isOpen = !0;
    introspect(JAM.policy.p3) {
      b$$599._trigger("open");
    }
    return b$$599;
  }
  function v1692(b$$598, c$$483) {
    var d$$367 = this;
    var e$$318 = d$$367.options;
    var f$$158;
    var v3543;
    var v21607 = e$$318.modal;
    if (v21607) {
      v21607 = !b$$598;
    }
    var v15887 = v21607;
    var v21609 = !v15887;
    if (v21609) {
      var v24543 = e$$318.stack;
      var v21608 = !v24543;
      if (v21608) {
        var v24544 = e$$318.modal;
        v21608 = !v24544;
      }
      v15887 = v21608;
    }
    var v10184 = v15887;
    if (v10184) {
      introspect(JAM.policy.p3) {
        v3543 = d$$367._trigger("focus", c$$483);
      }
    } else {
      var v29818 = e$$318.zIndex;
      var v30297 = a$$628.ui;
      var v30080 = v30297.dialog;
      var v29819 = v30080.maxZ;
      var v29447 = v29818 > v29819;
      if (v29447) {
        var v30081 = a$$628.ui;
        var v29820 = v30081.dialog;
        v29820.maxZ = e$$318.zIndex;
      }
      var v29448 = d$$367.overlay;
      if (v29448) {
        var v30298 = a$$628.ui;
        var v30082 = v30298.dialog;
        var v30439 = v30082.maxZ;
        v30082.maxZ = v30439 + 1;
        var v30299 = d$$367.overlay;
        var v30083 = v30299.$el;
        var v30576 = a$$628.ui;
        var v30440 = v30576.dialog;
        var v30300 = v30440.overlay;
        var v30577 = a$$628.ui;
        var v30441 = v30577.dialog;
        var v30084 = v30300.maxZ = v30441.maxZ;
        introspect(JAM.policy.p3) {
          v30083.css("z-index", v30084);
        }
      }
      var v29449 = d$$367.element;
      introspect(JAM.policy.p3) {
        var v28837 = v29449.scrollTop()
      }
      var v29450 = d$$367.element;
      introspect(JAM.policy.p3) {
        var v28838 = v29450.scrollLeft()
      }
      f$$158 = {scrollTop:v28837, scrollLeft:v28838};
      var v28839 = a$$628.ui;
      var v27923 = v28839.dialog;
      var v29451 = v27923.maxZ;
      v27923.maxZ = v29451 + 1;
      var v26511 = d$$367.uiDialog;
      var v28840 = a$$628.ui;
      var v27924 = v28840.dialog;
      var v26512 = v27924.maxZ;
      introspect(JAM.policy.p3) {
        v26511.css("z-index", v26512);
      }
      var v24545 = d$$367.element;
      introspect(JAM.policy.p3) {
        v24545.attr(f$$158);
      }
      introspect(JAM.policy.p3) {
        d$$367._trigger("focus", c$$483);
      }
      v3543 = d$$367;
    }
    return v3543;
  }
  function v1691() {
    return this._isOpen;
  }
  function v1690(b$$597) {
    function v1689() {
      var v15888 = c$$482.uiDialog;
      var v10185 = v15888[0];
      var v3544 = this !== v10185;
      if (v3544) {
        introspect(JAM.policy.p3) {
          var v15889 = a$$628(this)
        }
        introspect(JAM.policy.p3) {
          e$$317 = v15889.css("z-index");
        }
        var v15890 = isNaN(e$$317);
        var v21610 = !v15890;
        if (v21610) {
          introspect(JAM.policy.p3) {
            d$$366 = Math.max(d$$366, e$$317);
          }
        }
      }
      return;
    }
    function v1688() {
      introspect(JAM.policy.p3) {
        c$$482._trigger("close", b$$597);
      }
      return;
    }
    var c$$482 = this;
    var d$$366;
    var e$$317;
    var v10186 = !1;
    introspect(JAM.policy.p3) {
      var v10187 = c$$482._trigger("beforeClose", b$$597)
    }
    var v3545 = v10186 === v10187;
    if (v3545) {
      return;
    }
    var v27925 = c$$482.overlay;
    if (v27925) {
      var v28841 = c$$482.overlay;
      introspect(JAM.policy.p3) {
        v28841.destroy();
      }
    }
    var v27926 = c$$482.uiDialog;
    introspect(JAM.policy.p3) {
      v27926.unbind("keypress.ui-dialog");
    }
    c$$482._isOpen = !1;
    var v24546;
    var v27927 = c$$482.options;
    var v26515 = v27927.hide;
    if (v26515) {
      var v26513 = c$$482.uiDialog;
      var v27928 = c$$482.options;
      var v26514 = v27928.hide;
      introspect(JAM.policy.p3) {
        v24546 = v26513.hide(v26514, v1688);
      }
    } else {
      var v27929 = c$$482.uiDialog;
      introspect(JAM.policy.p3) {
        v27929.hide();
      }
      introspect(JAM.policy.p3) {
        v24546 = c$$482._trigger("close", b$$597);
      }
    }
    v24546;
    var v26516 = a$$628.ui;
    var v24547 = v26516.dialog;
    var v21611 = v24547.overlay;
    introspect(JAM.policy.p3) {
      v21611.resize();
    }
    var v21612 = c$$482.options;
    var v15891 = v21612.modal;
    if (v15891) {
      d$$366 = 0;
      introspect(JAM.policy.p3) {
        var v26517 = a$$628(".ui-dialog")
      }
      introspect(JAM.policy.p3) {
        v26517.each(v1689);
      }
      var v26518 = a$$628.ui;
      var v24548 = v26518.dialog;
      v24548.maxZ = d$$366;
    }
    return c$$482;
  }
  function v1687() {
    return this.uiDialog;
  }
  function v1686() {
    var a$$631 = this;
    var v26519 = a$$631.overlay;
    if (v26519) {
      var v27930 = a$$631.overlay;
      introspect(JAM.policy.p3) {
        v27930.destroy();
      }
    }
    var v26520 = a$$631.uiDialog;
    introspect(JAM.policy.p3) {
      v26520.hide();
    }
    var v29452 = a$$631.element;
    introspect(JAM.policy.p3) {
      var v28842 = v29452.unbind(".dialog")
    }
    introspect(JAM.policy.p3) {
      var v27931 = v28842.removeData("dialog")
    }
    introspect(JAM.policy.p3) {
      var v26521 = v27931.removeClass("ui-dialog-content ui-widget-content")
    }
    introspect(JAM.policy.p3) {
      var v24549 = v26521.hide()
    }
    introspect(JAM.policy.p3) {
      v24549.appendTo("body");
    }
    var v21613 = a$$631.uiDialog;
    introspect(JAM.policy.p3) {
      v21613.remove();
    }
    var v15892 = a$$631.originalTitle;
    if (v15892) {
      var v21614 = a$$631.element;
      var v21615 = a$$631.originalTitle;
      introspect(JAM.policy.p3) {
        v21614.attr("title", v21615);
      }
    }
    return a$$631;
  }
  function v1685() {
    var v10188 = this.options;
    var v3546 = v10188.autoOpen;
    if (v3546) {
      introspect(JAM.policy.p3) {
        this.open();
      }
    }
    return;
  }
  function v1684() {
    function v1683(a$$630) {
      introspect(JAM.policy.p3) {
        b$$596.close(a$$630);
      }
      return !1;
    }
    function v1682() {
      introspect(JAM.policy.p3) {
        j$$101.removeClass("ui-state-focus");
      }
      return;
    }
    function v1681() {
      introspect(JAM.policy.p3) {
        j$$101.addClass("ui-state-focus");
      }
      return;
    }
    function v1680() {
      introspect(JAM.policy.p3) {
        j$$101.removeClass("ui-state-hover");
      }
      return;
    }
    function v1679() {
      introspect(JAM.policy.p3) {
        j$$101.addClass("ui-state-hover");
      }
      return;
    }
    function v1678(a$$629) {
      var v3547 = !1;
      introspect(JAM.policy.p3) {
        b$$596.moveToTop(v3547, a$$629);
      }
      return;
    }
    function v1677(c$$481) {
      var v21616 = d$$365.closeOnEscape;
      if (v21616) {
        introspect(JAM.policy.p3) {
          var v24550 = c$$481.isDefaultPrevented()
        }
        v21616 = !v24550;
      }
      var v15893 = v21616;
      if (v15893) {
        v15893 = c$$481.keyCode;
      }
      var v10189 = v15893;
      if (v10189) {
        var v15894 = c$$481.keyCode;
        var v24551 = a$$628.ui;
        var v21617 = v24551.keyCode;
        var v15895 = v21617.ESCAPE;
        v10189 = v15894 === v15895;
      }
      var v3548 = v10189;
      if (v3548) {
        introspect(JAM.policy.p3) {
          b$$596.close(c$$481);
        }
        introspect(JAM.policy.p3) {
          c$$481.preventDefault();
        }
      }
      return;
    }
    var v15896 = this.element;
    introspect(JAM.policy.p3) {
      var v30994 = v15896.attr("title")
    }
    this.originalTitle = v30994;
    var v24552 = this.originalTitle;
    var v21618 = typeof v24552;
    var v15897 = v21618 != "string";
    if (v15897) {
      this.originalTitle = "";
    }
    var v10190 = this.options;
    var v21619 = this.options;
    var v15898 = v21619.title;
    var v21620 = !v15898;
    if (v21620) {
      v15898 = this.originalTitle;
    }
    v10190.title = v15898;
    var b$$596 = this;
    var d$$365 = b$$596.options;
    var v3549 = d$$365.title;
    var v10191 = !v3549;
    if (v10191) {
      v3549 = "&#160;";
    }
    var e$$316 = v3549;
    var v10192 = a$$628.ui;
    var v3550 = v10192.dialog;
    var v3551 = b$$596.element;
    introspect(JAM.policy.p3) {
      var f$$157 = v3550.getTitleId(v3551)
    }
    var v29821 = b$$596;
    introspect(JAM.policy.p3) {
      var v30995 = a$$628("<div></div>")
    }
    var v29453 = v29821.uiDialog = v30995;
    var v29454 = document.body;
    introspect(JAM.policy.p3) {
      var v28843 = v29453.appendTo(v29454)
    }
    introspect(JAM.policy.p3) {
      var v27932 = v28843.hide()
    }
    var v28844 = d$$365.dialogClass;
    var v27933 = c$$479 + v28844;
    introspect(JAM.policy.p3) {
      var v26522 = v27932.addClass(v27933)
    }
    var v27934 = d$$365.zIndex;
    var v26523 = {zIndex:v27934};
    introspect(JAM.policy.p3) {
      var v24553 = v26522.css(v26523)
    }
    introspect(JAM.policy.p3) {
      var v21621 = v24553.attr("tabIndex", -1)
    }
    introspect(JAM.policy.p3) {
      var v15899 = v21621.css("outline", 0)
    }
    introspect(JAM.policy.p3) {
      var v10193 = v15899.keydown(v1677)
    }
    var v10194 = {role:"dialog", "aria-labelledby":f$$157};
    introspect(JAM.policy.p3) {
      var v3552 = v10193.attr(v10194)
    }
    introspect(JAM.policy.p3) {
      var g$$175 = v3552.mousedown(v1678)
    }
    var v21622 = b$$596.element;
    introspect(JAM.policy.p3) {
      var v15900 = v21622.show()
    }
    introspect(JAM.policy.p3) {
      var v10195 = v15900.removeAttr("title")
    }
    introspect(JAM.policy.p3) {
      var v3553 = v10195.addClass("ui-dialog-content ui-widget-content")
    }
    introspect(JAM.policy.p3) {
      var h$$143 = v3553.appendTo(g$$175)
    }
    var v15901 = b$$596;
    introspect(JAM.policy.p3) {
      var v30996 = a$$628("<div></div>")
    }
    var v10196 = v15901.uiDialogTitlebar = v30996;
    introspect(JAM.policy.p3) {
      var v3554 = v10196.addClass("ui-dialog-titlebar ui-widget-header ui-corner-all ui-helper-clearfix")
    }
    introspect(JAM.policy.p3) {
      var i$$196 = v3554.prependTo(g$$175)
    }
    introspect(JAM.policy.p3) {
      var v27935 = a$$628('<a href="#"></a>')
    }
    introspect(JAM.policy.p3) {
      var v26524 = v27935.addClass("ui-dialog-titlebar-close ui-corner-all")
    }
    introspect(JAM.policy.p3) {
      var v24554 = v26524.attr("role", "button")
    }
    introspect(JAM.policy.p3) {
      var v21623 = v24554.hover(v1679, v1680)
    }
    introspect(JAM.policy.p3) {
      var v15902 = v21623.focus(v1681)
    }
    introspect(JAM.policy.p3) {
      var v10197 = v15902.blur(v1682)
    }
    introspect(JAM.policy.p3) {
      var v3555 = v10197.click(v1683)
    }
    introspect(JAM.policy.p3) {
      var j$$101 = v3555.appendTo(i$$196)
    }
    var v21624 = b$$596;
    introspect(JAM.policy.p3) {
      var v30997 = a$$628("<span></span>")
    }
    var v15903 = v21624.uiDialogTitlebarCloseText = v30997;
    introspect(JAM.policy.p3) {
      var v10198 = v15903.addClass("ui-icon ui-icon-closethick")
    }
    var v10199 = d$$365.closeText;
    introspect(JAM.policy.p3) {
      var v3556 = v10198.text(v10199)
    }
    introspect(JAM.policy.p3) {
      var k$$70 = v3556.appendTo(j$$101)
    }
    introspect(JAM.policy.p3) {
      var v21625 = a$$628("<span></span>")
    }
    introspect(JAM.policy.p3) {
      var v15904 = v21625.addClass("ui-dialog-title")
    }
    introspect(JAM.policy.p3) {
      var v10200 = v15904.attr("id", f$$157)
    }
    introspect(JAM.policy.p3) {
      var v3557 = v10200.html(e$$316)
    }
    introspect(JAM.policy.p3) {
      var l$$77 = v3557.prependTo(i$$196)
    }
    var v29455 = d$$365.beforeclose;
    introspect(JAM.policy.p3) {
      var v28845 = a$$628.isFunction(v29455)
    }
    if (v28845) {
      var v29822 = d$$365.beforeClose;
      introspect(JAM.policy.p3) {
        var v29456 = a$$628.isFunction(v29822)
      }
      v28845 = !v29456;
    }
    var v27936 = v28845;
    if (v27936) {
      d$$365.beforeClose = d$$365.beforeclose;
    }
    introspect(JAM.policy.p3) {
      var v28846 = i$$196.find("*")
    }
    introspect(JAM.policy.p3) {
      var v27937 = v28846.add(i$$196)
    }
    introspect(JAM.policy.p3) {
      v27937.disableSelection();
    }
    var v27938 = d$$365.draggable;
    if (v27938) {
      var v28847 = a$$628.fn;
      v27938 = v28847.draggable;
    }
    var v26525 = v27938;
    if (v26525) {
      introspect(JAM.policy.p3) {
        b$$596._makeDraggable();
      }
    }
    var v26526 = d$$365.resizable;
    if (v26526) {
      var v27939 = a$$628.fn;
      v26526 = v27939.resizable;
    }
    var v24555 = v26526;
    if (v24555) {
      introspect(JAM.policy.p3) {
        b$$596._makeResizable();
      }
    }
    var v21626 = d$$365.buttons;
    introspect(JAM.policy.p3) {
      b$$596._createButtons(v21626);
    }
    b$$596._isOpen = !1;
    var v15905 = a$$628.fn;
    var v10201 = v15905.bgiframe;
    if (v10201) {
      introspect(JAM.policy.p3) {
        g$$175.bgiframe();
      }
    }
    return;
  }
  function v1676(b$$595) {
    introspect(JAM.policy.p3) {
      var v15906 = a$$628(this)
    }
    introspect(JAM.policy.p3) {
      var v10202 = v15906.css(b$$595)
    }
    introspect(JAM.policy.p3) {
      var v3558 = v10202.offset()
    }
    var c$$480 = v3558.top;
    var v3559 = c$$480 < 0;
    if (v3559) {
      introspect(JAM.policy.p3) {
        var v10203 = a$$628(this)
      }
      var v15907 = b$$595.top;
      var v10204 = v15907 - c$$480;
      introspect(JAM.policy.p3) {
        v10203.css("top", v10204);
      }
    }
    return;
  }
  var c$$479 = "ui-dialog ui-widget ui-widget-content ui-corner-all ";
  var v3560 = !0;
  var v3561 = !0;
  var v3562 = !0;
  var v3563 = !0;
  var v3564 = !0;
  var v3565 = !0;
  var v3566 = !0;
  var d$$364 = {buttons:v3560, height:v3561, maxHeight:v3562, maxWidth:v3563, minHeight:v3564, minWidth:v3565, width:v3566};
  var v3567 = !0;
  var v3568 = !0;
  var v3569 = !0;
  var v3570 = !0;
  var e$$315 = {maxHeight:v3567, maxWidth:v3568, minHeight:v3569, minWidth:v3570};
  var v26527 = !0;
  var v26528 = !0;
  var v26529 = !0;
  var v26530 = !1;
  var v26531 = !1;
  var v26532 = !1;
  var v26533 = {my:"center", at:"center", collision:"fit", using:v1676};
  var v26534 = !0;
  var v26535 = !0;
  var v24556 = {autoOpen:v26527, buttons:{}, closeOnEscape:v26528, closeText:"close", dialogClass:"", draggable:v26529, hide:null, height:"auto", maxHeight:v26530, maxWidth:v26531, minHeight:150, minWidth:150, modal:v26532, position:v26533, resizable:v26534, show:null, stack:v26535, title:"", width:300, zIndex:1E3};
  var v21627 = {options:v24556, _create:v1684, _init:v1685, destroy:v1686, widget:v1687, close:v1690, isOpen:v1691, moveToTop:v1692, open:v1694, _createButtons:v1699, _makeDraggable:v1703, _makeResizable:v1707, _minHeight:v1708, _position:v1710, _setOptions:v1712, _setOption:v1713, _size:v1714};
  introspect(JAM.policy.p3) {
    a$$628.widget("ui.dialog", v21627);
  }
  var v24557 = a$$628.ui;
  var v21628 = v24557.dialog;
  var v21629 = {version:"1.8.24", uuid:0, maxZ:0, getTitleId:v1715, overlay:v1716};
  introspect(JAM.policy.p3) {
    a$$628.extend(v21628, v21629);
  }
  var v24558 = a$$628.ui;
  var v21630 = v24558.dialog;
  var v15908 = v21630.overlay;
  introspect(JAM.policy.p3) {
    var v26536 = "focus,mousedown,mouseup,keydown,keypress,click".split(",")
  }
  introspect(JAM.policy.p3) {
    var v24559 = a$$628.map(v26536, v1717)
  }
  introspect(JAM.policy.p3) {
    var v21631 = v24559.join(" ")
  }
  var v15909 = {instances:[], oldInstances:[], maxZ:0, events:v21631, create:v1721, destroy:v1723, height:v1724, width:v1725, resize:v1727};
  introspect(JAM.policy.p3) {
    a$$628.extend(v15908, v15909);
  }
  var v24560 = a$$628.ui;
  var v21632 = v24560.dialog;
  var v15910 = v21632.overlay;
  var v10205 = v15910.prototype;
  var v10206 = {destroy:v1728};
  introspect(JAM.policy.p3) {
    a$$628.extend(v10205, v10206);
  }
  return;
}
function v1675($$$3, undefined$$1) {
  function v1674(a$$627) {
    function v1673() {
      var v3571;
      var v15911 = typeof a$$627;
      var v10211 = v15911 == "string";
      if (v10211) {
        var v15912 = $$$3.datepicker;
        var v21633 = "_" + a$$627;
        var v15913 = v21633 + "Datepicker";
        var v10207 = v15912[v15913];
        var v10208 = $$$3.datepicker;
        var v15914 = [this];
        introspect(JAM.policy.p3) {
          var v10209 = v15914.concat(b$$593)
        }
        introspect(JAM.policy.p3) {
          v3571 = v10207.apply(v10208, v10209);
        }
      } else {
        var v10210 = $$$3.datepicker;
        introspect(JAM.policy.p3) {
          v3571 = v10210._attachDatepicker(this, a$$627);
        }
      }
      v3571;
      return;
    }
    var v10212 = this.length;
    var v3572 = !v10212;
    if (v3572) {
      return this;
    }
    var v10213 = $$$3.datepicker;
    var v3573 = v10213.initialized;
    var v10214 = !v3573;
    if (v10214) {
      introspect(JAM.policy.p3) {
        var v24561 = $$$3(document)
      }
      var v26537 = $$$3.datepicker;
      var v24562 = v26537._checkExternalClick;
      introspect(JAM.policy.p3) {
        var v21634 = v24561.mousedown(v24562)
      }
      introspect(JAM.policy.p3) {
        var v15915 = v21634.find("body")
      }
      var v21635 = $$$3.datepicker;
      var v15916 = v21635.dpDiv;
      introspect(JAM.policy.p3) {
        v15915.append(v15916);
      }
      var v15917 = $$$3.datepicker;
      v15917.initialized = !0;
    }
    var v10215 = Array.prototype;
    var v3574 = v10215.slice;
    introspect(JAM.policy.p3) {
      var b$$593 = v3574.call(arguments, 1)
    }
    var v3575;
    var v21636 = typeof a$$627;
    var v15918 = v21636 != "string";
    var v21638 = !v15918;
    if (v21638) {
      var v24563 = a$$627 != "isDisabled";
      if (v24563) {
        v24563 = a$$627 != "getDate";
      }
      var v21637 = v24563;
      if (v21637) {
        v21637 = a$$627 != "widget";
      }
      v15918 = v21637;
    }
    var v10220 = v15918;
    if (v10220) {
      var v10216;
      var v24564 = a$$627 == "option";
      if (v24564) {
        var v26538 = arguments.length;
        v24564 = v26538 == 2;
      }
      var v21639 = v24564;
      if (v21639) {
        var v26539 = arguments[1];
        var v24565 = typeof v26539;
        v21639 = v24565 == "string";
      }
      var v15922 = v21639;
      if (v15922) {
        var v21640 = $$$3.datepicker;
        var v24566 = "_" + a$$627;
        var v21641 = v24566 + "Datepicker";
        var v15919 = v21640[v21641];
        var v15920 = $$$3.datepicker;
        var v24567 = this[0];
        var v21642 = [v24567];
        introspect(JAM.policy.p3) {
          var v15921 = v21642.concat(b$$593)
        }
        introspect(JAM.policy.p3) {
          v10216 = v15919.apply(v15920, v15921);
        }
      } else {
        introspect(JAM.policy.p3) {
          v10216 = this.each(v1673);
        }
      }
      v3575 = v10216;
    } else {
      var v15923 = $$$3.datepicker;
      var v21643 = "_" + a$$627;
      var v15924 = v21643 + "Datepicker";
      var v10217 = v15923[v15924];
      var v10218 = $$$3.datepicker;
      var v21644 = this[0];
      var v15925 = [v21644];
      introspect(JAM.policy.p3) {
        var v10219 = v15925.concat(b$$593)
      }
      introspect(JAM.policy.p3) {
        v3575 = v10217.apply(v10218, v10219);
      }
    }
    return v3575;
  }
  function v1672(a$$626, b$$592, c$$478, d$$363) {
    var v10221 = !b$$592;
    if (v10221) {
      a$$626.currentDay = a$$626.selectedDay;
      a$$626.currentMonth = a$$626.selectedMonth;
      a$$626.currentYear = a$$626.selectedYear;
    }
    var v3576;
    if (b$$592) {
      var v10222;
      var v21645 = typeof b$$592;
      var v15927 = v21645 == "object";
      if (v15927) {
        v10222 = b$$592;
      } else {
        var v15926 = new Date(d$$363, c$$478, b$$592);
        introspect(JAM.policy.p3) {
          v10222 = this._daylightSavingAdjust(v15926);
        }
      }
      v3576 = v10222;
    } else {
      var v15928 = a$$626.currentYear;
      var v15929 = a$$626.currentMonth;
      var v15930 = a$$626.currentDay;
      var v10223 = new Date(v15928, v15929, v15930);
      introspect(JAM.policy.p3) {
        v3576 = this._daylightSavingAdjust(v10223);
      }
    }
    var e$$314 = v3576;
    introspect(JAM.policy.p3) {
      var v3577 = this._get(a$$626, "dateFormat")
    }
    introspect(JAM.policy.p3) {
      var v3578 = this._getFormatConfig(a$$626)
    }
    introspect(JAM.policy.p3) {
      return this.formatDate(v3577, e$$314, v3578);
    }
  }
  function v1671(a$$625) {
    introspect(JAM.policy.p3) {
      var b$$591 = this._get(a$$625, "shortYearCutoff")
    }
    var v10224;
    var v21646 = typeof b$$591;
    var v15933 = v21646 != "string";
    if (v15933) {
      v10224 = b$$591;
    } else {
      var v24568 = new Date;
      introspect(JAM.policy.p3) {
        var v21647 = v24568.getFullYear()
      }
      var v15931 = v21647 % 100;
      var v15932 = parseInt(b$$591, 10);
      v10224 = v15931 + v15932;
    }
    b$$591 = v10224;
    introspect(JAM.policy.p3) {
      var v10225 = this._get(a$$625, "dayNamesShort")
    }
    introspect(JAM.policy.p3) {
      var v10226 = this._get(a$$625, "dayNames")
    }
    introspect(JAM.policy.p3) {
      var v10227 = this._get(a$$625, "monthNamesShort")
    }
    introspect(JAM.policy.p3) {
      var v10228 = this._get(a$$625, "monthNames")
    }
    return {shortYearCutoff:b$$591, dayNamesShort:v10225, dayNames:v10226, monthNamesShort:v10227, monthNames:v10228};
  }
  function v1670(a$$624, b$$590) {
    introspect(JAM.policy.p3) {
      var c$$477 = this._getMinMaxDate(a$$624, "min")
    }
    introspect(JAM.policy.p3) {
      var d$$362 = this._getMinMaxDate(a$$624, "max")
    }
    var v10229 = !c$$477;
    var v15936 = !v10229;
    if (v15936) {
      introspect(JAM.policy.p3) {
        var v15934 = b$$590.getTime()
      }
      introspect(JAM.policy.p3) {
        var v15935 = c$$477.getTime()
      }
      v10229 = v15934 >= v15935;
    }
    var v3579 = v10229;
    if (v3579) {
      var v10230 = !d$$362;
      var v15939 = !v10230;
      if (v15939) {
        introspect(JAM.policy.p3) {
          var v15937 = b$$590.getTime()
        }
        introspect(JAM.policy.p3) {
          var v15938 = d$$362.getTime()
        }
        v10230 = v15937 <= v15938;
      }
      v3579 = v10230;
    }
    return v3579;
  }
  function v1669(a$$623, b$$589, c$$476, d$$361) {
    introspect(JAM.policy.p3) {
      var e$$313 = this._getNumberOfMonths(a$$623)
    }
    var v21648;
    var v24571 = b$$589 < 0;
    if (v24571) {
      v21648 = b$$589;
    } else {
      var v24569 = e$$313[0];
      var v24570 = e$$313[1];
      v21648 = v24569 * v24570;
    }
    var v15940 = v21648;
    var v10231 = d$$361 + v15940;
    var v3580 = new Date(c$$476, v10231, 1);
    introspect(JAM.policy.p3) {
      var f$$156 = this._daylightSavingAdjust(v3580)
    }
    var v10232 = b$$589 < 0;
    if (v10232) {
      introspect(JAM.policy.p3) {
        var v21649 = f$$156.getFullYear()
      }
      introspect(JAM.policy.p3) {
        var v21650 = f$$156.getMonth()
      }
      introspect(JAM.policy.p3) {
        var v15941 = this._getDaysInMonth(v21649, v21650)
      }
      introspect(JAM.policy.p3) {
        f$$156.setDate(v15941);
      }
    }
    introspect(JAM.policy.p3) {
      return this._isInRange(a$$623, f$$156);
    }
  }
  function v1668(a$$622, b$$588) {
    var v3581 = new Date(a$$622, b$$588, 1);
    introspect(JAM.policy.p3) {
      return v3581.getDay();
    }
  }
  function v1667(a$$621, b$$587) {
    var v15942 = new Date(a$$621, b$$587, 32);
    introspect(JAM.policy.p3) {
      var v10233 = this._daylightSavingAdjust(v15942)
    }
    introspect(JAM.policy.p3) {
      var v3582 = v10233.getDate()
    }
    return 32 - v3582;
  }
  function v1666(a$$620, b$$586) {
    var v10234 = b$$586 + "Date";
    introspect(JAM.policy.p3) {
      var v3583 = this._get(a$$620, v10234)
    }
    introspect(JAM.policy.p3) {
      return this._determineDate(a$$620, v3583, null);
    }
  }
  function v1665(a$$619) {
    introspect(JAM.policy.p3) {
      var b$$585 = this._get(a$$619, "numberOfMonths")
    }
    var v3584;
    var v10236 = b$$585 == null;
    if (v10236) {
      v3584 = [1, 1];
    } else {
      var v10235;
      var v21651 = typeof b$$585;
      var v15943 = v21651 == "number";
      if (v15943) {
        v10235 = [1, b$$585];
      } else {
        v10235 = b$$585;
      }
      v3584 = v10235;
    }
    return v3584;
  }
  function v1664(a$$618) {
    introspect(JAM.policy.p3) {
      var b$$584 = this._get(a$$618, "onChangeMonthYear")
    }
    if (b$$584) {
      var v15944;
      var v21653 = a$$618.input;
      if (v21653) {
        var v21652 = a$$618.input;
        v15944 = v21652[0];
      } else {
        v15944 = null;
      }
      var v10237 = v15944;
      var v15945 = a$$618.selectedYear;
      var v21654 = a$$618.selectedMonth;
      var v15946 = v21654 + 1;
      var v10238 = [v15945, v15946, a$$618];
      introspect(JAM.policy.p3) {
        b$$584.apply(v10237, v10238);
      }
    }
    return;
  }
  function v1663(a$$617, b$$583) {
    introspect(JAM.policy.p3) {
      var c$$475 = this._getMinMaxDate(a$$617, "min")
    }
    introspect(JAM.policy.p3) {
      var d$$360 = this._getMinMaxDate(a$$617, "max")
    }
    var v3585;
    var v15947 = c$$475;
    if (v15947) {
      v15947 = b$$583 < c$$475;
    }
    var v10239 = v15947;
    if (v10239) {
      v3585 = c$$475;
    } else {
      v3585 = b$$583;
    }
    var e$$312 = v3585;
    var v10240;
    var v21655 = d$$360;
    if (v21655) {
      v21655 = e$$312 > d$$360;
    }
    var v15948 = v21655;
    if (v15948) {
      v10240 = d$$360;
    } else {
      v10240 = e$$312;
    }
    e$$312 = v10240;
    return e$$312;
  }
  function v1662(a$$616, b$$582, c$$474) {
    var v3586 = a$$616.drawYear;
    var v10241;
    var v15949 = c$$474 == "Y";
    if (v15949) {
      v10241 = b$$582;
    } else {
      v10241 = 0;
    }
    var v3587 = v10241;
    var d$$359 = v3586 + v3587;
    var v3588 = a$$616.drawMonth;
    var v10242;
    var v15950 = c$$474 == "M";
    if (v15950) {
      v10242 = b$$582;
    } else {
      v10242 = 0;
    }
    var v3589 = v10242;
    var e$$311 = v3588 + v3589;
    var v10243 = a$$616.selectedDay;
    introspect(JAM.policy.p3) {
      var v10244 = this._getDaysInMonth(d$$359, e$$311)
    }
    introspect(JAM.policy.p3) {
      var v3590 = Math.min(v10243, v10244)
    }
    var v10245;
    var v15951 = c$$474 == "D";
    if (v15951) {
      v10245 = b$$582;
    } else {
      v10245 = 0;
    }
    var v3591 = v10245;
    var f$$155 = v3590 + v3591;
    var v10246 = new Date(d$$359, e$$311, f$$155);
    introspect(JAM.policy.p3) {
      var v3592 = this._daylightSavingAdjust(v10246)
    }
    introspect(JAM.policy.p3) {
      var g$$174 = this._restrictMinMax(a$$616, v3592)
    }
    introspect(JAM.policy.p3) {
      var v30998 = g$$174.getDate()
    }
    a$$616.selectedDay = v30998;
    introspect(JAM.policy.p3) {
      var v30999 = g$$174.getMonth()
    }
    a$$616.drawMonth = a$$616.selectedMonth = v30999;
    introspect(JAM.policy.p3) {
      var v31000 = g$$174.getFullYear()
    }
    a$$616.drawYear = a$$616.selectedYear = v31000;
    var v15952 = c$$474 == "M";
    var v21656 = !v15952;
    if (v21656) {
      v15952 = c$$474 == "Y";
    }
    var v10247 = v15952;
    if (v10247) {
      introspect(JAM.policy.p3) {
        this._notifyChange(a$$616);
      }
    }
    return;
  }
  function v1661(a$$614, b$$580, c$$473, d$$358, e$$310, f$$154, g$$173, h$$142) {
    function v1660(a$$615) {
      var v3593;
      introspect(JAM.policy.p3) {
        var v10251 = a$$615.match(/c[+-].*/)
      }
      if (v10251) {
        var v10248 = c$$473;
        introspect(JAM.policy.p3) {
          var v15953 = a$$615.substring(1)
        }
        var v10249 = parseInt(v15953, 10);
        v3593 = v10248 + v10249;
      } else {
        var v10250;
        introspect(JAM.policy.p3) {
          var v15956 = a$$615.match(/[+-].*/)
        }
        if (v15956) {
          var v15954 = r$$20;
          var v15955 = parseInt(a$$615, 10);
          v10250 = v15954 + v15955;
        } else {
          v10250 = parseInt(a$$615, 10);
        }
        v3593 = v10250;
      }
      var b$$581 = v3593;
      var v3594;
      var v10252 = isNaN(b$$581);
      if (v10252) {
        v3594 = r$$20;
      } else {
        v3594 = b$$581;
      }
      return v3594;
    }
    introspect(JAM.policy.p3) {
      var i$$195 = this._get(a$$614, "changeMonth")
    }
    introspect(JAM.policy.p3) {
      var j$$100 = this._get(a$$614, "changeYear")
    }
    introspect(JAM.policy.p3) {
      var k$$69 = this._get(a$$614, "showMonthAfterYear")
    }
    var l$$76 = '<div class="ui-datepicker-title">';
    var m$$47 = "";
    var v10253 = f$$154;
    var v15957 = !v10253;
    if (v15957) {
      v10253 = !i$$195;
    }
    var v3599 = v10253;
    if (v3599) {
      var v21657 = g$$173[b$$580];
      var v15958 = '<span class="ui-datepicker-month">' + v21657;
      var v10254 = v15958 + "</span>";
      m$$47 = m$$47 + v10254;
    } else {
      var v3595 = d$$358;
      if (v3595) {
        introspect(JAM.policy.p3) {
          var v10255 = d$$358.getFullYear()
        }
        v3595 = v10255 == c$$473;
      }
      var n$$93 = v3595;
      var v3596 = e$$310;
      if (v3596) {
        introspect(JAM.policy.p3) {
          var v10256 = e$$310.getFullYear()
        }
        v3596 = v10256 == c$$473;
      }
      var o$$23 = v3596;
      m$$47 = m$$47 + '<select class="ui-datepicker-month" data-handler="selectMonth" data-event="change">';
      var p$$48 = 0;
      var v3598 = p$$48 < 12;
      for (;v3598;) {
        var v15959 = !n$$93;
        var v21660 = !v15959;
        if (v21660) {
          var v21658 = p$$48;
          introspect(JAM.policy.p3) {
            var v21659 = d$$358.getMonth()
          }
          v15959 = v21658 >= v21659;
        }
        var v10257 = v15959;
        if (v10257) {
          var v15960 = !o$$23;
          var v21663 = !v15960;
          if (v21663) {
            var v21661 = p$$48;
            introspect(JAM.policy.p3) {
              var v21662 = e$$310.getMonth()
            }
            v15960 = v21661 <= v21662;
          }
          v10257 = v15960;
        }
        var v3597 = v10257;
        if (v3597) {
          var v28848 = '<option value="' + p$$48;
          var v27940 = v28848 + '"';
          var v28849;
          var v29457 = p$$48 == b$$580;
          if (v29457) {
            v28849 = ' selected="selected"';
          } else {
            v28849 = "";
          }
          var v27941 = v28849;
          var v26540 = v27940 + v27941;
          var v24572 = v26540 + ">";
          var v24573 = h$$142[p$$48];
          var v21664 = v24572 + v24573;
          var v15961 = v21664 + "</option>";
          m$$47 = m$$47 + v15961;
        }
        p$$48++;
        v3598 = p$$48 < 12;
      }
      m$$47 = m$$47 + "</select>";
    }
    var v10258 = !k$$69;
    if (v10258) {
      var v24574;
      var v28850 = f$$154;
      var v29458 = !v28850;
      if (v29458) {
        v28850 = !i$$195;
      }
      var v27942 = v28850;
      var v28851 = !v27942;
      if (v28851) {
        v27942 = !j$$100;
      }
      var v26541 = v27942;
      if (v26541) {
        v24574 = "&#xa0;";
      } else {
        v24574 = "";
      }
      var v21665 = v24574;
      var v15962 = m$$47 + v21665;
      l$$76 = l$$76 + v15962;
    }
    var v10259 = a$$614.yearshtml;
    var v3606 = !v10259;
    if (v3606) {
      a$$614.yearshtml = "";
      var v10260 = f$$154;
      var v15963 = !v10260;
      if (v15963) {
        v10260 = !j$$100;
      }
      var v3605 = v10260;
      if (v3605) {
        var v15964 = '<span class="ui-datepicker-year">' + c$$473;
        var v10261 = v15964 + "</span>";
        l$$76 = l$$76 + v10261;
      } else {
        introspect(JAM.policy.p3) {
          var v3600 = this._get(a$$614, "yearRange")
        }
        introspect(JAM.policy.p3) {
          var q$$19 = v3600.split(":")
        }
        var v3601 = new Date;
        introspect(JAM.policy.p3) {
          var r$$20 = v3601.getFullYear()
        }
        var s$$29 = v1660;
        var v3602 = q$$19[0];
        introspect(JAM.policy.p3) {
          var t$$14 = s$$29(v3602)
        }
        var v15965 = q$$19[1];
        var v21666 = !v15965;
        if (v21666) {
          v15965 = "";
        }
        var v10262 = v15965;
        introspect(JAM.policy.p3) {
          var v3603 = s$$29(v10262)
        }
        introspect(JAM.policy.p3) {
          var u$$12 = Math.max(t$$14, v3603)
        }
        var v15966;
        if (d$$358) {
          introspect(JAM.policy.p3) {
            var v21667 = d$$358.getFullYear()
          }
          introspect(JAM.policy.p3) {
            v15966 = Math.max(t$$14, v21667);
          }
        } else {
          v15966 = t$$14;
        }
        t$$14 = v15966;
        var v15967;
        if (e$$310) {
          introspect(JAM.policy.p3) {
            var v21668 = e$$310.getFullYear()
          }
          introspect(JAM.policy.p3) {
            v15967 = Math.min(u$$12, v21668);
          }
        } else {
          v15967 = u$$12;
        }
        u$$12 = v15967;
        var v15968 = a$$614.yearshtml;
        a$$614.yearshtml = v15968 + '<select class="ui-datepicker-year" data-handler="selectYear" data-event="change">';
        var v3604 = t$$14 <= u$$12;
        for (;v3604;) {
          var v10263 = a$$614.yearshtml;
          var v27943 = '<option value="' + t$$14;
          var v26542 = v27943 + '"';
          var v27944;
          var v28852 = t$$14 == c$$473;
          if (v28852) {
            v27944 = ' selected="selected"';
          } else {
            v27944 = "";
          }
          var v26543 = v27944;
          var v24575 = v26542 + v26543;
          var v21669 = v24575 + ">";
          var v15969 = v21669 + t$$14;
          var v10264 = v15969 + "</option>";
          a$$614.yearshtml = v10263 + v10264;
          t$$14++;
          v3604 = t$$14 <= u$$12;
        }
        var v21670 = a$$614.yearshtml;
        a$$614.yearshtml = v21670 + "</select>";
        var v21671 = a$$614.yearshtml;
        l$$76 = l$$76 + v21671;
        a$$614.yearshtml = null;
      }
    }
    var v24576 = l$$76;
    introspect(JAM.policy.p3) {
      var v24577 = this._get(a$$614, "yearSuffix")
    }
    l$$76 = v24576 + v24577;
    if (k$$69) {
      var v28853;
      var v30085 = f$$154;
      var v30301 = !v30085;
      if (v30301) {
        v30085 = !i$$195;
      }
      var v29823 = v30085;
      var v30086 = !v29823;
      if (v30086) {
        v29823 = !j$$100;
      }
      var v29459 = v29823;
      if (v29459) {
        v28853 = "&#xa0;";
      } else {
        v28853 = "";
      }
      var v27945 = v28853;
      var v26544 = v27945 + m$$47;
      l$$76 = l$$76 + v26544;
    }
    l$$76 = l$$76 + "</div>";
    return l$$76;
  }
  function v1659(a$$613) {
    var b$$579 = new Date;
    introspect(JAM.policy.p3) {
      var v10265 = b$$579.getFullYear()
    }
    introspect(JAM.policy.p3) {
      var v10266 = b$$579.getMonth()
    }
    introspect(JAM.policy.p3) {
      var v10267 = b$$579.getDate()
    }
    var v3607 = new Date(v10265, v10266, v10267);
    introspect(JAM.policy.p3) {
      b$$579 = this._daylightSavingAdjust(v3607);
    }
    introspect(JAM.policy.p3) {
      var c$$472 = this._get(a$$613, "isRTL")
    }
    introspect(JAM.policy.p3) {
      var d$$357 = this._get(a$$613, "showButtonPanel")
    }
    introspect(JAM.policy.p3) {
      var e$$309 = this._get(a$$613, "hideIfNoPrevNext")
    }
    introspect(JAM.policy.p3) {
      var f$$153 = this._get(a$$613, "navigationAsDateFormat")
    }
    introspect(JAM.policy.p3) {
      var g$$172 = this._getNumberOfMonths(a$$613)
    }
    introspect(JAM.policy.p3) {
      var h$$141 = this._get(a$$613, "showCurrentAtPos")
    }
    introspect(JAM.policy.p3) {
      var i$$194 = this._get(a$$613, "stepMonths")
    }
    var v10268 = g$$172[0];
    var v3608 = v10268 != 1;
    var v10270 = !v3608;
    if (v10270) {
      var v10269 = g$$172[1];
      v3608 = v10269 != 1;
    }
    var j$$99 = v3608;
    var v10271;
    var v15973 = a$$613.currentDay;
    if (v15973) {
      var v15970 = a$$613.currentYear;
      var v15971 = a$$613.currentMonth;
      var v15972 = a$$613.currentDay;
      v10271 = new Date(v15970, v15971, v15972);
    } else {
      v10271 = new Date(9999, 9, 9);
    }
    var v3609 = v10271;
    introspect(JAM.policy.p3) {
      var k$$68 = this._daylightSavingAdjust(v3609)
    }
    introspect(JAM.policy.p3) {
      var l$$75 = this._getMinMaxDate(a$$613, "min")
    }
    introspect(JAM.policy.p3) {
      var m$$46 = this._getMinMaxDate(a$$613, "max")
    }
    var v3610 = a$$613.drawMonth;
    var n$$92 = v3610 - h$$141;
    var o$$22 = a$$613.drawYear;
    var v3611 = n$$92 < 0;
    if (v3611) {
      n$$92 = n$$92 + 12;
      o$$22--;
    }
    if (m$$46) {
      introspect(JAM.policy.p3) {
        var v10272 = m$$46.getFullYear()
      }
      introspect(JAM.policy.p3) {
        var v21672 = m$$46.getMonth()
      }
      var v24578 = g$$172[0];
      var v24579 = g$$172[1];
      var v21673 = v24578 * v24579;
      var v15974 = v21672 - v21673;
      var v10273 = v15974 + 1;
      introspect(JAM.policy.p3) {
        var v10274 = m$$46.getDate()
      }
      var v3612 = new Date(v10272, v10273, v10274);
      introspect(JAM.policy.p3) {
        var p$$47 = this._daylightSavingAdjust(v3612)
      }
      var v3613;
      var v15975 = l$$75;
      if (v15975) {
        v15975 = p$$47 < l$$75;
      }
      var v10275 = v15975;
      if (v10275) {
        v3613 = l$$75;
      } else {
        v3613 = p$$47;
      }
      p$$47 = v3613;
      var v15976 = new Date(o$$22, n$$92, 1);
      introspect(JAM.policy.p3) {
        var v10276 = this._daylightSavingAdjust(v15976)
      }
      var v3614 = v10276 > p$$47;
      for (;v3614;) {
        n$$92--;
        var v10277 = n$$92 < 0;
        if (v10277) {
          n$$92 = 11;
          o$$22--;
        }
        var v15977 = new Date(o$$22, n$$92, 1);
        introspect(JAM.policy.p3) {
          var v10278 = this._daylightSavingAdjust(v15977)
        }
        v3614 = v10278 > p$$47;
      }
    }
    a$$613.drawMonth = n$$92;
    a$$613.drawYear = o$$22;
    introspect(JAM.policy.p3) {
      var q$$18 = this._get(a$$613, "prevText")
    }
    var v3615;
    if (f$$153) {
      var v21674 = n$$92 - i$$194;
      var v15978 = new Date(o$$22, v21674, 1);
      introspect(JAM.policy.p3) {
        var v10279 = this._daylightSavingAdjust(v15978)
      }
      introspect(JAM.policy.p3) {
        var v10280 = this._getFormatConfig(a$$613)
      }
      introspect(JAM.policy.p3) {
        v3615 = this.formatDate(q$$18, v10279, v10280);
      }
    } else {
      v3615 = q$$18;
    }
    q$$18 = v3615;
    var v3616;
    introspect(JAM.policy.p3) {
      var v10283 = this._canAdjustMonth(a$$613, -1, o$$22, n$$92)
    }
    if (v10283) {
      var v26545 = '<a class="ui-datepicker-prev ui-corner-all" data-handler="prev" data-event="click" title="' + q$$18;
      var v24580 = v26545 + '"><span class="ui-icon ui-icon-circle-triangle-';
      var v26546;
      if (c$$472) {
        v26546 = "e";
      } else {
        v26546 = "w";
      }
      var v24581 = v26546;
      var v21675 = v24580 + v24581;
      var v15979 = v21675 + '">';
      var v10281 = v15979 + q$$18;
      v3616 = v10281 + "</span></a>";
    } else {
      var v10282;
      if (e$$309) {
        v10282 = "";
      } else {
        var v27946 = '<a class="ui-datepicker-prev ui-corner-all ui-state-disabled" title="' + q$$18;
        var v26547 = v27946 + '"><span class="ui-icon ui-icon-circle-triangle-';
        var v27947;
        if (c$$472) {
          v27947 = "e";
        } else {
          v27947 = "w";
        }
        var v26548 = v27947;
        var v24582 = v26547 + v26548;
        var v21676 = v24582 + '">';
        var v15980 = v21676 + q$$18;
        v10282 = v15980 + "</span></a>";
      }
      v3616 = v10282;
    }
    var r$$19 = v3616;
    introspect(JAM.policy.p3) {
      var s$$28 = this._get(a$$613, "nextText")
    }
    var v3617;
    if (f$$153) {
      var v21677 = n$$92 + i$$194;
      var v15981 = new Date(o$$22, v21677, 1);
      introspect(JAM.policy.p3) {
        var v10284 = this._daylightSavingAdjust(v15981)
      }
      introspect(JAM.policy.p3) {
        var v10285 = this._getFormatConfig(a$$613)
      }
      introspect(JAM.policy.p3) {
        v3617 = this.formatDate(s$$28, v10284, v10285);
      }
    } else {
      v3617 = s$$28;
    }
    s$$28 = v3617;
    var v3618;
    introspect(JAM.policy.p3) {
      var v10288 = this._canAdjustMonth(a$$613, 1, o$$22, n$$92)
    }
    if (v10288) {
      var v26549 = '<a class="ui-datepicker-next ui-corner-all" data-handler="next" data-event="click" title="' + s$$28;
      var v24583 = v26549 + '"><span class="ui-icon ui-icon-circle-triangle-';
      var v26550;
      if (c$$472) {
        v26550 = "w";
      } else {
        v26550 = "e";
      }
      var v24584 = v26550;
      var v21678 = v24583 + v24584;
      var v15982 = v21678 + '">';
      var v10286 = v15982 + s$$28;
      v3618 = v10286 + "</span></a>";
    } else {
      var v10287;
      if (e$$309) {
        v10287 = "";
      } else {
        var v27948 = '<a class="ui-datepicker-next ui-corner-all ui-state-disabled" title="' + s$$28;
        var v26551 = v27948 + '"><span class="ui-icon ui-icon-circle-triangle-';
        var v27949;
        if (c$$472) {
          v27949 = "w";
        } else {
          v27949 = "e";
        }
        var v26552 = v27949;
        var v24585 = v26551 + v26552;
        var v21679 = v24585 + '">';
        var v15983 = v21679 + s$$28;
        v10287 = v15983 + "</span></a>";
      }
      v3618 = v10287;
    }
    var t$$13 = v3618;
    introspect(JAM.policy.p3) {
      var u$$11 = this._get(a$$613, "currentText")
    }
    var v3619;
    introspect(JAM.policy.p3) {
      var v15984 = this._get(a$$613, "gotoCurrent")
    }
    if (v15984) {
      v15984 = a$$613.currentDay;
    }
    var v10289 = v15984;
    if (v10289) {
      v3619 = k$$68;
    } else {
      v3619 = b$$579;
    }
    var v$$10 = v3619;
    var v3620;
    if (f$$153) {
      introspect(JAM.policy.p3) {
        var v10290 = this._getFormatConfig(a$$613)
      }
      introspect(JAM.policy.p3) {
        v3620 = this.formatDate(u$$11, v$$10, v10290);
      }
    } else {
      v3620 = u$$11;
    }
    u$$11 = v3620;
    var v3621;
    var v10292 = a$$613.inline;
    if (v10292) {
      v3621 = "";
    } else {
      introspect(JAM.policy.p3) {
        var v15985 = this._get(a$$613, "closeText")
      }
      var v10291 = '<button type="button" class="ui-datepicker-close ui-state-default ui-priority-primary ui-corner-all" data-handler="hide" data-event="click">' + v15985;
      v3621 = v10291 + "</button>";
    }
    var w$$17 = v3621;
    var v3622;
    if (d$$357) {
      var v26553;
      if (c$$472) {
        v26553 = w$$17;
      } else {
        v26553 = "";
      }
      var v24586 = v26553;
      var v21680 = '<div class="ui-datepicker-buttonpane ui-widget-content">' + v24586;
      var v24587;
      introspect(JAM.policy.p3) {
        var v26555 = this._isInRange(a$$613, v$$10)
      }
      if (v26555) {
        var v26554 = '<button type="button" class="ui-datepicker-current ui-state-default ui-priority-secondary ui-corner-all" data-handler="today" data-event="click">' + u$$11;
        v24587 = v26554 + "</button>";
      } else {
        v24587 = "";
      }
      var v21681 = v24587;
      var v15986 = v21680 + v21681;
      var v21682;
      if (c$$472) {
        v21682 = "";
      } else {
        v21682 = w$$17;
      }
      var v15987 = v21682;
      var v10293 = v15986 + v15987;
      v3622 = v10293 + "</div>";
    } else {
      v3622 = "";
    }
    var x$$73 = v3622;
    introspect(JAM.policy.p3) {
      var v3623 = this._get(a$$613, "firstDay")
    }
    var y$$54 = parseInt(v3623, 10);
    var v3624;
    var v10294 = isNaN(y$$54);
    if (v10294) {
      v3624 = 0;
    } else {
      v3624 = y$$54;
    }
    y$$54 = v3624;
    introspect(JAM.policy.p3) {
      var z$$6 = this._get(a$$613, "showWeek")
    }
    introspect(JAM.policy.p3) {
      var A$$3 = this._get(a$$613, "dayNames")
    }
    introspect(JAM.policy.p3) {
      var B$$2 = this._get(a$$613, "dayNamesShort")
    }
    introspect(JAM.policy.p3) {
      var C$$2 = this._get(a$$613, "dayNamesMin")
    }
    introspect(JAM.policy.p3) {
      var D$$2 = this._get(a$$613, "monthNames")
    }
    introspect(JAM.policy.p3) {
      var E$$2 = this._get(a$$613, "monthNamesShort")
    }
    introspect(JAM.policy.p3) {
      var F$$2 = this._get(a$$613, "beforeShowDay")
    }
    introspect(JAM.policy.p3) {
      var G$$2 = this._get(a$$613, "showOtherMonths")
    }
    introspect(JAM.policy.p3) {
      var H$$2 = this._get(a$$613, "selectOtherMonths")
    }
    introspect(JAM.policy.p3) {
      var v3625 = this._get(a$$613, "calculateWeek")
    }
    var v10295 = !v3625;
    if (v10295) {
      v3625 = this.iso8601Week;
    }
    var I$$2 = v3625;
    introspect(JAM.policy.p3) {
      var J$$2 = this._getDefaultDate(a$$613)
    }
    var K$$1 = "";
    var L$$1 = 0;
    var v10296 = g$$172[0];
    var v3643 = L$$1 < v10296;
    for (;v3643;) {
      var M$$1 = "";
      this.maxRows = 4;
      var N$$1 = 0;
      var v10297 = g$$172[1];
      var v3642 = N$$1 < v10297;
      for (;v3642;) {
        var v10298 = a$$613.selectedDay;
        var v3626 = new Date(o$$22, n$$92, v10298);
        introspect(JAM.policy.p3) {
          var O$$1 = this._daylightSavingAdjust(v3626)
        }
        var P$$1 = " ui-corner-all";
        var Q$$1 = "";
        if (j$$99) {
          Q$$1 = Q$$1 + '<div class="ui-datepicker-group';
          var v10299 = g$$172[1];
          var v3627 = v10299 > 1;
          if (v3627) {
            switch(N$$1) {
              case 0:
                Q$$1 = Q$$1 + " ui-datepicker-group-first";
                var v15988;
                if (c$$472) {
                  v15988 = "right";
                } else {
                  v15988 = "left";
                }
                var v10300 = v15988;
                P$$1 = " ui-corner-" + v10300;
                break;
              case g$$172[1] - 1:
                Q$$1 = Q$$1 + " ui-datepicker-group-last";
                var v15989;
                if (c$$472) {
                  v15989 = "left";
                } else {
                  v15989 = "right";
                }
                var v10301 = v15989;
                P$$1 = " ui-corner-" + v10301;
                break;
              default:
                Q$$1 = Q$$1 + " ui-datepicker-group-middle";
                P$$1 = "";
            }
          }
          Q$$1 = Q$$1 + '">';
        }
        var v28854 = '<div class="ui-datepicker-header ui-widget-header ui-helper-clearfix' + P$$1;
        var v27950 = v28854 + '">';
        var v28855;
        introspect(JAM.policy.p3) {
          var v29824 = /all|left/.test(P$$1)
        }
        if (v29824) {
          v29824 = L$$1 == 0;
        }
        var v29461 = v29824;
        if (v29461) {
          var v29460;
          if (c$$472) {
            v29460 = t$$13;
          } else {
            v29460 = r$$19;
          }
          v28855 = v29460;
        } else {
          v28855 = "";
        }
        var v27951 = v28855;
        var v26556 = v27950 + v27951;
        var v27952;
        introspect(JAM.policy.p3) {
          var v29462 = /all|right/.test(P$$1)
        }
        if (v29462) {
          v29462 = L$$1 == 0;
        }
        var v28857 = v29462;
        if (v28857) {
          var v28856;
          if (c$$472) {
            v28856 = r$$19;
          } else {
            v28856 = t$$13;
          }
          v27952 = v28856;
        } else {
          v27952 = "";
        }
        var v26557 = v27952;
        var v24588 = v26556 + v26557;
        var v27953 = L$$1 > 0;
        var v28858 = !v27953;
        if (v28858) {
          v27953 = N$$1 > 0;
        }
        var v26558 = v27953;
        introspect(JAM.policy.p3) {
          var v24589 = this._generateMonthYearHeader(a$$613, n$$92, o$$22, l$$75, m$$46, v26558, D$$2, E$$2)
        }
        var v21683 = v24588 + v24589;
        var v15990 = v21683 + '</div><table class="ui-datepicker-calendar"><thead>';
        var v10302 = v15990 + "<tr>";
        Q$$1 = Q$$1 + v10302;
        var v3628;
        if (z$$6) {
          introspect(JAM.policy.p3) {
            var v15991 = this._get(a$$613, "weekHeader")
          }
          var v10303 = '<th class="ui-datepicker-week-col">' + v15991;
          v3628 = v10303 + "</th>";
        } else {
          v3628 = "";
        }
        var R$$1 = v3628;
        var S$$1 = 0;
        var v3630 = S$$1 < 7;
        for (;v3630;) {
          var v3629 = S$$1 + y$$54;
          var T$$3 = v3629 % 7;
          var v29825;
          var v30578 = S$$1 + y$$54;
          var v30442 = v30578 + 6;
          var v30302 = v30442 % 7;
          var v30087 = v30302 >= 5;
          if (v30087) {
            v29825 = ' class="ui-datepicker-week-end"';
          } else {
            v29825 = "";
          }
          var v29463 = v29825;
          var v28859 = "<th" + v29463;
          var v27954 = v28859 + ">";
          var v26559 = v27954 + '<span title="';
          var v26560 = A$$3[T$$3];
          var v24590 = v26559 + v26560;
          var v21684 = v24590 + '">';
          var v21685 = C$$2[T$$3];
          var v15992 = v21684 + v21685;
          var v10304 = v15992 + "</span></th>";
          R$$1 = R$$1 + v10304;
          S$$1++;
          v3630 = S$$1 < 7;
        }
        var v10305 = R$$1 + "</tr></thead><tbody>";
        Q$$1 = Q$$1 + v10305;
        introspect(JAM.policy.p3) {
          var U$$1 = this._getDaysInMonth(o$$22, n$$92)
        }
        var v15993 = a$$613.selectedYear;
        var v10306 = o$$22 == v15993;
        if (v10306) {
          var v15994 = a$$613.selectedMonth;
          v10306 = n$$92 == v15994;
        }
        var v3631 = v10306;
        if (v3631) {
          var v10307 = a$$613.selectedDay;
          introspect(JAM.policy.p3) {
            var v31001 = Math.min(v10307, U$$1)
          }
          a$$613.selectedDay = v31001;
        }
        introspect(JAM.policy.p3) {
          var v15995 = this._getFirstDayOfMonth(o$$22, n$$92)
        }
        var v10308 = v15995 - y$$54;
        var v3632 = v10308 + 7;
        var V$$1 = v3632 % 7;
        var v10309 = V$$1 + U$$1;
        var v3633 = v10309 / 7;
        introspect(JAM.policy.p3) {
          var W$$1 = Math.ceil(v3633)
        }
        var v3634;
        if (j$$99) {
          var v10310;
          var v21686 = this.maxRows;
          var v15996 = v21686 > W$$1;
          if (v15996) {
            v10310 = this.maxRows;
          } else {
            v10310 = W$$1;
          }
          v3634 = v10310;
        } else {
          v3634 = W$$1;
        }
        var X$$1 = v3634;
        this.maxRows = X$$1;
        var v10311 = 1 - V$$1;
        var v3635 = new Date(o$$22, n$$92, v10311);
        introspect(JAM.policy.p3) {
          var Y$$1 = this._daylightSavingAdjust(v3635)
        }
        var Z$$1 = 0;
        var v3641 = Z$$1 < X$$1;
        for (;v3641;) {
          Q$$1 = Q$$1 + "<tr>";
          var v3636;
          if (z$$6) {
            introspect(JAM.policy.p3) {
              var v21687 = this._get(a$$613, "calculateWeek")
            }
            introspect(JAM.policy.p3) {
              var v15997 = v21687(Y$$1)
            }
            var v10312 = '<td class="ui-datepicker-week-col">' + v15997;
            v3636 = v10312 + "</td>";
          } else {
            v3636 = "";
          }
          var _$$2 = v3636;
          S$$1 = 0;
          var v3640 = S$$1 < 7;
          for (;v3640;) {
            var v3637;
            if (F$$2) {
              var v15998;
              var v21689 = a$$613.input;
              if (v21689) {
                var v21688 = a$$613.input;
                v15998 = v21688[0];
              } else {
                v15998 = null;
              }
              var v10313 = v15998;
              var v10314 = [Y$$1];
              introspect(JAM.policy.p3) {
                v3637 = F$$2.apply(v10313, v10314);
              }
            } else {
              var v10315 = !0;
              v3637 = [v10315, ""];
            }
            var ba$$1 = v3637;
            introspect(JAM.policy.p3) {
              var v3638 = Y$$1.getMonth()
            }
            var bb$$1 = v3638 != n$$92;
            var v21690 = bb$$1;
            if (v21690) {
              v21690 = !H$$2;
            }
            var v15999 = v21690;
            var v21692 = !v15999;
            if (v21692) {
              var v21691 = ba$$1[0];
              v15999 = !v21691;
            }
            var v10316 = v15999;
            var v16001 = !v10316;
            if (v16001) {
              var v16000 = l$$75;
              if (v16000) {
                v16000 = Y$$1 < l$$75;
              }
              v10316 = v16000;
            }
            var v3639 = v10316;
            var v10318 = !v3639;
            if (v10318) {
              var v10317 = m$$46;
              if (v10317) {
                v10317 = Y$$1 > m$$46;
              }
              v3639 = v10317;
            }
            var bc$$1 = v3639;
            var v30716;
            var v30831 = S$$1 + y$$54;
            var v30813 = v30831 + 6;
            var v30790 = v30813 % 7;
            var v30758 = v30790 >= 5;
            if (v30758) {
              v30716 = " ui-datepicker-week-end";
            } else {
              v30716 = "";
            }
            var v30660 = v30716;
            var v30579 = '<td class="' + v30660;
            var v30661;
            if (bb$$1) {
              v30661 = " ui-datepicker-other-month";
            } else {
              v30661 = "";
            }
            var v30580 = v30661;
            var v30443 = v30579 + v30580;
            var v30581;
            introspect(JAM.policy.p3) {
              var v30814 = Y$$1.getTime()
            }
            introspect(JAM.policy.p3) {
              var v30815 = O$$1.getTime()
            }
            var v30791 = v30814 == v30815;
            if (v30791) {
              var v30816 = a$$613.selectedMonth;
              v30791 = n$$92 == v30816;
            }
            var v30759 = v30791;
            if (v30759) {
              v30759 = a$$613._keyEvent;
            }
            var v30717 = v30759;
            var v30761 = !v30717;
            if (v30761) {
              introspect(JAM.policy.p3) {
                var v30792 = J$$2.getTime()
              }
              introspect(JAM.policy.p3) {
                var v30793 = Y$$1.getTime()
              }
              var v30760 = v30792 == v30793;
              if (v30760) {
                introspect(JAM.policy.p3) {
                  var v30794 = J$$2.getTime()
                }
                introspect(JAM.policy.p3) {
                  var v30795 = O$$1.getTime()
                }
                v30760 = v30794 == v30795;
              }
              v30717 = v30760;
            }
            var v30663 = v30717;
            if (v30663) {
              var v30662 = this._dayOverClass;
              v30581 = " " + v30662;
            } else {
              v30581 = "";
            }
            var v30444 = v30581;
            var v30303 = v30443 + v30444;
            var v30445;
            if (bc$$1) {
              var v30664 = this._unselectableClass;
              var v30582 = " " + v30664;
              v30445 = v30582 + " ui-state-disabled";
            } else {
              v30445 = "";
            }
            var v30304 = v30445;
            var v30088 = v30303 + v30304;
            var v30305;
            var v30583 = bb$$1;
            if (v30583) {
              v30583 = !G$$2;
            }
            var v30448 = v30583;
            if (v30448) {
              v30305 = "";
            } else {
              var v30665 = ba$$1[1];
              var v30584 = " " + v30665;
              var v30666;
              introspect(JAM.policy.p3) {
                var v30762 = Y$$1.getTime()
              }
              introspect(JAM.policy.p3) {
                var v30763 = k$$68.getTime()
              }
              var v30719 = v30762 == v30763;
              if (v30719) {
                var v30718 = this._currentClass;
                v30666 = " " + v30718;
              } else {
                v30666 = "";
              }
              var v30585 = v30666;
              var v30446 = v30584 + v30585;
              var v30586;
              introspect(JAM.policy.p3) {
                var v30720 = Y$$1.getTime()
              }
              introspect(JAM.policy.p3) {
                var v30721 = b$$579.getTime()
              }
              var v30667 = v30720 == v30721;
              if (v30667) {
                v30586 = " ui-datepicker-today";
              } else {
                v30586 = "";
              }
              var v30447 = v30586;
              v30305 = v30446 + v30447;
            }
            var v30089 = v30305;
            var v29826 = v30088 + v30089;
            var v29464 = v29826 + '"';
            var v29827;
            var v30449 = !bb$$1;
            var v30587 = !v30449;
            if (v30587) {
              v30449 = G$$2;
            }
            var v30306 = v30449;
            if (v30306) {
              v30306 = ba$$1[2];
            }
            var v30091 = v30306;
            if (v30091) {
              var v30307 = ba$$1[2];
              var v30090 = ' title="' + v30307;
              v29827 = v30090 + '"';
            } else {
              v29827 = "";
            }
            var v29465 = v29827;
            var v28860 = v29464 + v29465;
            var v29466;
            if (bc$$1) {
              v29466 = "";
            } else {
              introspect(JAM.policy.p3) {
                var v30450 = Y$$1.getMonth()
              }
              var v30308 = ' data-handler="selectDay" data-event="click" data-month="' + v30450;
              var v30092 = v30308 + '" data-year="';
              introspect(JAM.policy.p3) {
                var v30093 = Y$$1.getFullYear()
              }
              var v29828 = v30092 + v30093;
              v29466 = v29828 + '"';
            }
            var v28861 = v29466;
            var v27955 = v28860 + v28861;
            var v26561 = v27955 + ">";
            var v27956;
            var v29467 = bb$$1;
            if (v29467) {
              v29467 = !G$$2;
            }
            var v28863 = v29467;
            if (v28863) {
              v27956 = "&#xa0;";
            } else {
              var v28862;
              if (bc$$1) {
                introspect(JAM.policy.p3) {
                  var v29829 = Y$$1.getDate()
                }
                var v29468 = '<span class="ui-state-default">' + v29829;
                v28862 = v29468 + "</span>";
              } else {
                var v30668;
                introspect(JAM.policy.p3) {
                  var v30764 = Y$$1.getTime()
                }
                introspect(JAM.policy.p3) {
                  var v30765 = b$$579.getTime()
                }
                var v30722 = v30764 == v30765;
                if (v30722) {
                  v30668 = " ui-state-highlight";
                } else {
                  v30668 = "";
                }
                var v30588 = v30668;
                var v30451 = '<a class="ui-state-default' + v30588;
                var v30589;
                introspect(JAM.policy.p3) {
                  var v30723 = Y$$1.getTime()
                }
                introspect(JAM.policy.p3) {
                  var v30724 = k$$68.getTime()
                }
                var v30669 = v30723 == v30724;
                if (v30669) {
                  v30589 = " ui-state-active";
                } else {
                  v30589 = "";
                }
                var v30452 = v30589;
                var v30309 = v30451 + v30452;
                var v30453;
                if (bb$$1) {
                  v30453 = " ui-priority-secondary";
                } else {
                  v30453 = "";
                }
                var v30310 = v30453;
                var v30094 = v30309 + v30310;
                var v29830 = v30094 + '" href="#">';
                introspect(JAM.policy.p3) {
                  var v29831 = Y$$1.getDate()
                }
                var v29469 = v29830 + v29831;
                v28862 = v29469 + "</a>";
              }
              v27956 = v28862;
            }
            var v26562 = v27956;
            var v24591 = v26561 + v26562;
            var v21693 = v24591 + "</td>";
            _$$2 = _$$2 + v21693;
            introspect(JAM.policy.p3) {
              var v21694 = Y$$1.getDate()
            }
            var v16002 = v21694 + 1;
            introspect(JAM.policy.p3) {
              Y$$1.setDate(v16002);
            }
            introspect(JAM.policy.p3) {
              Y$$1 = this._daylightSavingAdjust(Y$$1);
            }
            S$$1++;
            v3640 = S$$1 < 7;
          }
          var v10319 = _$$2 + "</tr>";
          Q$$1 = Q$$1 + v10319;
          Z$$1++;
          v3641 = Z$$1 < X$$1;
        }
        n$$92++;
        var v21695 = n$$92 > 11;
        if (v21695) {
          n$$92 = 0;
          o$$22++;
        }
        var v26563;
        if (j$$99) {
          var v28864;
          var v30095 = g$$172[0];
          var v29832 = v30095 > 0;
          if (v29832) {
            var v30311 = g$$172[1];
            var v30096 = v30311 - 1;
            v29832 = N$$1 == v30096;
          }
          var v29470 = v29832;
          if (v29470) {
            v28864 = '<div class="ui-datepicker-row-break"></div>';
          } else {
            v28864 = "";
          }
          var v27957 = v28864;
          v26563 = "</div>" + v27957;
        } else {
          v26563 = "";
        }
        var v24592 = v26563;
        var v21696 = "</tbody></table>" + v24592;
        Q$$1 = Q$$1 + v21696;
        M$$1 = M$$1 + Q$$1;
        N$$1++;
        var v10320 = g$$172[1];
        v3642 = N$$1 < v10320;
      }
      K$$1 = K$$1 + M$$1;
      L$$1++;
      var v10321 = g$$172[0];
      v3643 = L$$1 < v10321;
    }
    var v26564;
    var v29833 = $$$3.browser;
    var v29471 = v29833.msie;
    if (v29471) {
      var v30312 = $$$3.browser;
      var v30097 = v30312.version;
      var v29834 = parseInt(v30097, 10);
      v29471 = v29834 < 7;
    }
    var v28865 = v29471;
    if (v28865) {
      var v29472 = a$$613.inline;
      v28865 = !v29472;
    }
    var v27958 = v28865;
    if (v27958) {
      v26564 = '<iframe src="javascript:false;" class="ui-datepicker-cover" frameborder="0"></iframe>';
    } else {
      v26564 = "";
    }
    var v24593 = v26564;
    var v21697 = x$$73 + v24593;
    K$$1 = K$$1 + v21697;
    a$$613._keyEvent = !1;
    return K$$1;
  }
  function v1658(a$$611) {
    function v1657() {
      function v1656() {
        var v21698 = "DP_jQuery_" + dpuuid;
        var v16003 = window[v21698];
        var v10322 = v16003.datepicker;
        introspect(JAM.policy.p3) {
          v10322._selectMonthYear(c$$471, this, "Y");
        }
        return !1;
      }
      function v1655() {
        var v21699 = "DP_jQuery_" + dpuuid;
        var v16004 = window[v21699];
        var v10323 = v16004.datepicker;
        introspect(JAM.policy.p3) {
          v10323._selectMonthYear(c$$471, this, "M");
        }
        return !1;
      }
      function v1654() {
        var v21700 = "DP_jQuery_" + dpuuid;
        var v16005 = window[v21700];
        var v10324 = v16005.datepicker;
        introspect(JAM.policy.p3) {
          var v16006 = this.getAttribute("data-month")
        }
        var v10325 = +v16006;
        introspect(JAM.policy.p3) {
          var v16007 = this.getAttribute("data-year")
        }
        var v10326 = +v16007;
        introspect(JAM.policy.p3) {
          v10324._selectDay(c$$471, v10325, v10326, this);
        }
        return !1;
      }
      function v1653() {
        var v16008 = "DP_jQuery_" + dpuuid;
        var v10327 = window[v16008];
        var v3644 = v10327.datepicker;
        introspect(JAM.policy.p3) {
          v3644._gotoToday(c$$471);
        }
        return;
      }
      function v1652() {
        var v16009 = "DP_jQuery_" + dpuuid;
        var v10328 = window[v16009];
        var v3645 = v10328.datepicker;
        introspect(JAM.policy.p3) {
          v3645._hideDatepicker();
        }
        return;
      }
      function v1651() {
        var v16010 = "DP_jQuery_" + dpuuid;
        var v10329 = window[v16010];
        var v3646 = v10329.datepicker;
        var v3647 = +b$$578;
        introspect(JAM.policy.p3) {
          v3646._adjustDate(c$$471, v3647, "M");
        }
        return;
      }
      function v1650() {
        var v16011 = "DP_jQuery_" + dpuuid;
        var v10330 = window[v16011];
        var v3648 = v10330.datepicker;
        var v3649 = -b$$578;
        introspect(JAM.policy.p3) {
          v3648._adjustDate(c$$471, v3649, "M");
        }
        return;
      }
      var a$$612 = {prev:v1650, next:v1651, hide:v1652, today:v1653, selectDay:v1654, selectMonth:v1655, selectYear:v1656};
      introspect(JAM.policy.p3) {
        var v3650 = $$$3(this)
      }
      introspect(JAM.policy.p3) {
        var v3651 = this.getAttribute("data-event")
      }
      var v10331 = a$$612;
      introspect(JAM.policy.p3) {
        var v10332 = this.getAttribute("data-handler")
      }
      var v3652 = v10331[v10332];
      introspect(JAM.policy.p3) {
        v3650.bind(v3651, v3652);
      }
      return;
    }
    introspect(JAM.policy.p3) {
      var b$$578 = this._get(a$$611, "stepMonths")
    }
    var v10333 = a$$611.id;
    introspect(JAM.policy.p3) {
      var v3653 = v10333.replace(/\\\\/g, "\\")
    }
    var c$$471 = "#" + v3653;
    var v10334 = a$$611.dpDiv;
    introspect(JAM.policy.p3) {
      var v3654 = v10334.find("[data-handler]")
    }
    introspect(JAM.policy.p3) {
      v3654.map(v1657);
    }
    return;
  }
  function v1649(a$$610) {
    var v3655;
    var v21701 = a$$610.currentYear;
    var v16012 = !v21701;
    var v21703 = !v16012;
    if (v21703) {
      var v21702 = a$$610.input;
      if (v21702) {
        var v26565 = a$$610.input;
        introspect(JAM.policy.p3) {
          var v24594 = v26565.val()
        }
        v21702 = v24594 == "";
      }
      v16012 = v21702;
    }
    var v10336 = v16012;
    if (v10336) {
      v3655 = null;
    } else {
      var v16013 = a$$610.currentYear;
      var v16014 = a$$610.currentMonth;
      var v16015 = a$$610.currentDay;
      var v10335 = new Date(v16013, v16014, v16015);
      introspect(JAM.policy.p3) {
        v3655 = this._daylightSavingAdjust(v10335);
      }
    }
    var b$$577 = v3655;
    return b$$577;
  }
  function v1648(a$$609, b$$576, c$$470) {
    var d$$356 = !b$$576;
    var e$$308 = a$$609.selectedMonth;
    var f$$152 = a$$609.selectedYear;
    var v10337 = new Date;
    introspect(JAM.policy.p3) {
      var v3656 = this._determineDate(a$$609, b$$576, v10337)
    }
    introspect(JAM.policy.p3) {
      var g$$171 = this._restrictMinMax(a$$609, v3656)
    }
    introspect(JAM.policy.p3) {
      var v31002 = g$$171.getDate()
    }
    a$$609.selectedDay = a$$609.currentDay = v31002;
    introspect(JAM.policy.p3) {
      var v31003 = g$$171.getMonth()
    }
    a$$609.drawMonth = a$$609.selectedMonth = a$$609.currentMonth = v31003;
    introspect(JAM.policy.p3) {
      var v31004 = g$$171.getFullYear()
    }
    a$$609.drawYear = a$$609.selectedYear = a$$609.currentYear = v31004;
    var v27959 = a$$609.selectedMonth;
    var v26566 = e$$308 != v27959;
    var v27961 = !v26566;
    if (v27961) {
      var v27960 = a$$609.selectedYear;
      v26566 = f$$152 != v27960;
    }
    var v24595 = v26566;
    if (v24595) {
      v24595 = !c$$470;
    }
    var v21704 = v24595;
    if (v21704) {
      introspect(JAM.policy.p3) {
        this._notifyChange(a$$609);
      }
    }
    introspect(JAM.policy.p3) {
      this._adjustInstDate(a$$609);
    }
    var v10338 = a$$609.input;
    if (v10338) {
      var v16016 = a$$609.input;
      var v21705;
      if (d$$356) {
        v21705 = "";
      } else {
        introspect(JAM.policy.p3) {
          v21705 = this._formatDate(a$$609);
        }
      }
      var v16017 = v21705;
      introspect(JAM.policy.p3) {
        v16016.val(v16017);
      }
    }
    return;
  }
  function v1647(a$$608) {
    var v3657;
    if (a$$608) {
      var v21706;
      introspect(JAM.policy.p3) {
        var v26567 = a$$608.getHours()
      }
      var v24597 = v26567 > 12;
      if (v24597) {
        introspect(JAM.policy.p3) {
          var v24596 = a$$608.getHours()
        }
        v21706 = v24596 + 2;
      } else {
        v21706 = 0;
      }
      var v16018 = v21706;
      introspect(JAM.policy.p3) {
        a$$608.setHours(v16018);
      }
      v3657 = a$$608;
    } else {
      v3657 = null;
    }
    return v3657;
  }
  function v1646(a$$606, b$$573, c$$468) {
    function e$$306(b$$575) {
      try {
        var v3658 = $$$3.datepicker;
        var v10339 = $$$3.datepicker;
        introspect(JAM.policy.p3) {
          var v3659 = v10339._get(a$$606, "dateFormat")
        }
        var v10340 = $$$3.datepicker;
        introspect(JAM.policy.p3) {
          var v3660 = v10340._getFormatConfig(a$$606)
        }
        introspect(JAM.policy.p3) {
          return v3658.parseDate(v3659, b$$575, v3660);
        }
      } catch (c$$469) {
      }
      var v10341;
      introspect(JAM.policy.p3) {
        var v21707 = b$$575.toLowerCase()
      }
      introspect(JAM.policy.p3) {
        var v16020 = v21707.match(/^c/)
      }
      if (v16020) {
        var v16019 = $$$3.datepicker;
        introspect(JAM.policy.p3) {
          v10341 = v16019._getDate(a$$606);
        }
      } else {
        v10341 = null;
      }
      var v3661 = v10341;
      var v10342 = !v3661;
      if (v10342) {
        v3661 = new Date;
      }
      var d$$355 = v3661;
      introspect(JAM.policy.p3) {
        var e$$307 = d$$355.getFullYear()
      }
      introspect(JAM.policy.p3) {
        var f$$151 = d$$355.getMonth()
      }
      introspect(JAM.policy.p3) {
        var g$$170 = d$$355.getDate()
      }
      var h$$140 = /([+-]?[0-9]+)\s*(d|D|w|W|m|M|y|Y)?/g;
      introspect(JAM.policy.p3) {
        var i$$193 = h$$140.exec(b$$575)
      }
      for (;i$$193;) {
        var v10343 = i$$193[2];
        var v16021 = !v10343;
        if (v16021) {
          v10343 = "d";
        }
        var v3662 = v10343;
        switch(v3662) {
          case "d":
          ;
          case "D":
            var v16022 = i$$193[1];
            var v10344 = parseInt(v16022, 10);
            g$$170 = g$$170 + v10344;
            break;
          case "w":
          ;
          case "W":
            var v21708 = i$$193[1];
            var v16023 = parseInt(v21708, 10);
            var v10345 = v16023 * 7;
            g$$170 = g$$170 + v10345;
            break;
          case "m":
          ;
          case "M":
            var v21709 = i$$193[1];
            var v16024 = parseInt(v21709, 10);
            f$$151 = f$$151 + v16024;
            var v16025 = $$$3.datepicker;
            introspect(JAM.policy.p3) {
              var v10346 = v16025._getDaysInMonth(e$$307, f$$151)
            }
            introspect(JAM.policy.p3) {
              g$$170 = Math.min(g$$170, v10346);
            }
            break;
          case "y":
          ;
          case "Y":
            var v21710 = i$$193[1];
            var v16026 = parseInt(v21710, 10);
            e$$307 = e$$307 + v16026;
            var v16027 = $$$3.datepicker;
            introspect(JAM.policy.p3) {
              var v10347 = v16027._getDaysInMonth(e$$307, f$$151)
            }
            introspect(JAM.policy.p3) {
              g$$170 = Math.min(g$$170, v10347);
            }
          ;
        }
        introspect(JAM.policy.p3) {
          i$$193 = h$$140.exec(b$$575);
        }
      }
      return new Date(e$$307, f$$151, g$$170);
    }
    function d$$354(a$$607) {
      var b$$574 = new Date;
      introspect(JAM.policy.p3) {
        var v16028 = b$$574.getDate()
      }
      var v10348 = v16028 + a$$607;
      introspect(JAM.policy.p3) {
        b$$574.setDate(v10348);
      }
      return b$$574;
    }
    var v3663;
    var v16029 = b$$573 == null;
    var v21711 = !v16029;
    if (v21711) {
      v16029 = b$$573 === "";
    }
    var v10350 = v16029;
    if (v10350) {
      v3663 = c$$468;
    } else {
      var v10349;
      var v21712 = typeof b$$573;
      var v16031 = v21712 == "string";
      if (v16031) {
        v10349 = e$$306(b$$573);
      } else {
        var v16030;
        var v24598 = typeof b$$573;
        var v21715 = v24598 == "number";
        if (v21715) {
          var v21713;
          var v24599 = isNaN(b$$573);
          if (v24599) {
            v21713 = c$$468;
          } else {
            v21713 = d$$354(b$$573);
          }
          v16030 = v21713;
        } else {
          introspect(JAM.policy.p3) {
            var v21714 = b$$573.getTime()
          }
          v16030 = new Date(v21714);
        }
        v10349 = v16030;
      }
      v3663 = v10349;
    }
    var f$$150 = v3663;
    var v16032;
    var v24600 = f$$150;
    if (v24600) {
      introspect(JAM.policy.p3) {
        var v26568 = f$$150.toString()
      }
      v24600 = v26568 == "Invalid Date";
    }
    var v21716 = v24600;
    if (v21716) {
      v16032 = c$$468;
    } else {
      v16032 = f$$150;
    }
    f$$150 = v16032;
    if (f$$150) {
      introspect(JAM.policy.p3) {
        f$$150.setHours(0);
      }
      introspect(JAM.policy.p3) {
        f$$150.setMinutes(0);
      }
      introspect(JAM.policy.p3) {
        f$$150.setSeconds(0);
      }
      introspect(JAM.policy.p3) {
        f$$150.setMilliseconds(0);
      }
    }
    introspect(JAM.policy.p3) {
      return this._daylightSavingAdjust(f$$150);
    }
  }
  function v1645(a$$605) {
    introspect(JAM.policy.p3) {
      var v10351 = this._get(a$$605, "defaultDate")
    }
    var v10352 = new Date;
    introspect(JAM.policy.p3) {
      var v3664 = this._determineDate(a$$605, v10351, v10352)
    }
    introspect(JAM.policy.p3) {
      return this._restrictMinMax(a$$605, v3664);
    }
  }
  function v1644(a$$604, b$$572) {
    var v16033 = a$$604.input;
    introspect(JAM.policy.p3) {
      var v10353 = v16033.val()
    }
    var v10354 = a$$604.lastVal;
    var v3665 = v10353 == v10354;
    if (v3665) {
      return;
    }
    introspect(JAM.policy.p3) {
      var c$$467 = this._get(a$$604, "dateFormat")
    }
    var v3666;
    var v10356 = a$$604.input;
    if (v10356) {
      var v10355 = a$$604.input;
      introspect(JAM.policy.p3) {
        v3666 = v10355.val();
      }
    } else {
      v3666 = null;
    }
    var d$$353 = a$$604.lastVal = v3666;
    var e$$305;
    var f$$149;
    introspect(JAM.policy.p3) {
      e$$305 = f$$149 = this._getDefaultDate(a$$604);
    }
    introspect(JAM.policy.p3) {
      var g$$169 = this._getFormatConfig(a$$604)
    }
    try {
      introspect(JAM.policy.p3) {
        var v3667 = this.parseDate(c$$467, d$$353, g$$169)
      }
      var v10357 = !v3667;
      if (v10357) {
        v3667 = f$$149;
      }
      e$$305 = v3667;
    } catch (h$$139) {
      introspect(JAM.policy.p3) {
        this.log(h$$139);
      }
      var v10358;
      if (b$$572) {
        v10358 = "";
      } else {
        v10358 = d$$353;
      }
      d$$353 = v10358;
    }
    introspect(JAM.policy.p3) {
      var v31005 = e$$305.getDate()
    }
    a$$604.selectedDay = v31005;
    introspect(JAM.policy.p3) {
      var v31006 = e$$305.getMonth()
    }
    a$$604.drawMonth = a$$604.selectedMonth = v31006;
    introspect(JAM.policy.p3) {
      var v31007 = e$$305.getFullYear()
    }
    a$$604.drawYear = a$$604.selectedYear = v31007;
    var v24601;
    if (d$$353) {
      introspect(JAM.policy.p3) {
        v24601 = e$$305.getDate();
      }
    } else {
      v24601 = 0;
    }
    a$$604.currentDay = v24601;
    var v21717;
    if (d$$353) {
      introspect(JAM.policy.p3) {
        v21717 = e$$305.getMonth();
      }
    } else {
      v21717 = 0;
    }
    a$$604.currentMonth = v21717;
    var v16034;
    if (d$$353) {
      introspect(JAM.policy.p3) {
        v16034 = e$$305.getFullYear();
      }
    } else {
      v16034 = 0;
    }
    a$$604.currentYear = v16034;
    introspect(JAM.policy.p3) {
      this._adjustInstDate(a$$604);
    }
    return;
  }
  function v1643(a$$603, b$$571) {
    var v3668;
    var v21718 = a$$603.settings;
    var v16035 = v21718[b$$571];
    var v10361 = v16035 !== undefined$$1;
    if (v10361) {
      var v10359 = a$$603.settings;
      v3668 = v10359[b$$571];
    } else {
      var v10360 = this._defaults;
      v3668 = v10360[b$$571];
    }
    return v3668;
  }
  function v1642(a$$602) {
    function d$$352() {
      var b$$570 = "'";
      var v10362 = e$$304 + 1;
      var v10363 = a$$602.length;
      var v3669 = v10362 < v10363;
      if (v3669) {
        var v16036 = e$$304 + 1;
        introspect(JAM.policy.p3) {
          var v10364 = a$$602.charAt(v16036)
        }
        v3669 = v10364 == b$$570;
      }
      var c$$466 = v3669;
      if (c$$466) {
        e$$304++;
      }
      return c$$466;
    }
    var b$$569 = "";
    var c$$465 = !1;
    var e$$304 = 0;
    var v10365 = a$$602.length;
    var v3673 = e$$304 < v10365;
    for (;v3673;) {
      if (c$$465) {
        var v3670;
        introspect(JAM.policy.p3) {
          var v21719 = a$$602.charAt(e$$304)
        }
        var v16037 = v21719 == "'";
        if (v16037) {
          var v21720 = d$$352();
          v16037 = !v21720;
        }
        var v10366 = v16037;
        if (v10366) {
          v3670 = c$$465 = !1;
        } else {
          var v16038 = b$$569;
          introspect(JAM.policy.p3) {
            var v16039 = a$$602.charAt(e$$304)
          }
          v3670 = b$$569 = v16038 + v16039;
        }
        v3670;
      } else {
        introspect(JAM.policy.p3) {
          var v3672 = a$$602.charAt(e$$304)
        }
        switch(v3672) {
          case "d":
          ;
          case "m":
          ;
          case "y":
          ;
          case "@":
            b$$569 = b$$569 + "0123456789";
            break;
          case "D":
          ;
          case "M":
            return null;
          case "'":
            var v3671;
            var v10367 = d$$352();
            if (v10367) {
              v3671 = b$$569 = b$$569 + "'";
            } else {
              v3671 = c$$465 = !0;
            }
            v3671;
            break;
          default:
            var v10368 = b$$569;
            introspect(JAM.policy.p3) {
              var v10369 = a$$602.charAt(e$$304)
            }
            b$$569 = v10368 + v10369;
        }
      }
      e$$304++;
      var v10370 = a$$602.length;
      v3673 = e$$304 < v10370;
    }
    return b$$569;
  }
  function v1641(a$$599, b$$565, c$$461) {
    function j$$98(a$$601, b$$568, c$$464, d$$351) {
      var v3674;
      var v10371 = h$$138(a$$601);
      if (v10371) {
        v3674 = d$$351[b$$568];
      } else {
        v3674 = c$$464[b$$568];
      }
      return v3674;
    }
    function i$$192(a$$600, b$$567, c$$463) {
      var d$$350 = "" + b$$567;
      var v3676 = h$$138(a$$600);
      if (v3676) {
        var v10372 = d$$350.length;
        var v3675 = v10372 < c$$463;
        for (;v3675;) {
          d$$350 = "0" + d$$350;
          var v10373 = d$$350.length;
          v3675 = v10373 < c$$463;
        }
      }
      return d$$350;
    }
    function h$$138(b$$566) {
      var v10374 = m$$45 + 1;
      var v10375 = a$$599.length;
      var v3677 = v10374 < v10375;
      if (v3677) {
        var v16040 = m$$45 + 1;
        introspect(JAM.policy.p3) {
          var v10376 = a$$599.charAt(v16040)
        }
        v3677 = v10376 == b$$566;
      }
      var c$$462 = v3677;
      if (c$$462) {
        m$$45++;
      }
      return c$$462;
    }
    var v3678 = !b$$565;
    if (v3678) {
      return "";
    }
    var v10377;
    if (c$$461) {
      v10377 = c$$461.dayNamesShort;
    } else {
      v10377 = null;
    }
    var v3679 = v10377;
    var v10379 = !v3679;
    if (v10379) {
      var v10378 = this._defaults;
      v3679 = v10378.dayNamesShort;
    }
    var d$$349 = v3679;
    var v10380;
    if (c$$461) {
      v10380 = c$$461.dayNames;
    } else {
      v10380 = null;
    }
    var v3680 = v10380;
    var v10382 = !v3680;
    if (v10382) {
      var v10381 = this._defaults;
      v3680 = v10381.dayNames;
    }
    var e$$303 = v3680;
    var v10383;
    if (c$$461) {
      v10383 = c$$461.monthNamesShort;
    } else {
      v10383 = null;
    }
    var v3681 = v10383;
    var v10385 = !v3681;
    if (v10385) {
      var v10384 = this._defaults;
      v3681 = v10384.monthNamesShort;
    }
    var f$$148 = v3681;
    var v10386;
    if (c$$461) {
      v10386 = c$$461.monthNames;
    } else {
      v10386 = null;
    }
    var v3682 = v10386;
    var v10388 = !v3682;
    if (v10388) {
      var v10387 = this._defaults;
      v3682 = v10387.monthNames;
    }
    var g$$168 = v3682;
    var k$$67 = "";
    var l$$74 = !1;
    if (b$$565) {
      var m$$45 = 0;
      var v10389 = a$$599.length;
      var v3686 = m$$45 < v10389;
      for (;v3686;) {
        if (l$$74) {
          var v3683;
          introspect(JAM.policy.p3) {
            var v21721 = a$$599.charAt(m$$45)
          }
          var v16041 = v21721 == "'";
          if (v16041) {
            var v21722 = h$$138("'");
            v16041 = !v21722;
          }
          var v10390 = v16041;
          if (v10390) {
            v3683 = l$$74 = !1;
          } else {
            var v16042 = k$$67;
            introspect(JAM.policy.p3) {
              var v16043 = a$$599.charAt(m$$45)
            }
            v3683 = k$$67 = v16042 + v16043;
          }
          v3683;
        } else {
          introspect(JAM.policy.p3) {
            var v3685 = a$$599.charAt(m$$45)
          }
          switch(v3685) {
            case "d":
              var v10391 = k$$67;
              introspect(JAM.policy.p3) {
                var v16044 = b$$565.getDate()
              }
              var v10392 = i$$192("d", v16044, 2);
              k$$67 = v10391 + v10392;
              break;
            case "D":
              var v10393 = k$$67;
              introspect(JAM.policy.p3) {
                var v16045 = b$$565.getDay()
              }
              var v10394 = j$$98("D", v16045, d$$349, e$$303);
              k$$67 = v10393 + v10394;
              break;
            case "o":
              var v10395 = k$$67;
              introspect(JAM.policy.p3) {
                var v28866 = b$$565.getFullYear()
              }
              introspect(JAM.policy.p3) {
                var v28867 = b$$565.getMonth()
              }
              introspect(JAM.policy.p3) {
                var v28868 = b$$565.getDate()
              }
              var v27962 = new Date(v28866, v28867, v28868);
              introspect(JAM.policy.p3) {
                var v26569 = v27962.getTime()
              }
              introspect(JAM.policy.p3) {
                var v28869 = b$$565.getFullYear()
              }
              var v27963 = new Date(v28869, 0, 0);
              introspect(JAM.policy.p3) {
                var v26570 = v27963.getTime()
              }
              var v24602 = v26569 - v26570;
              var v21723 = v24602 / 864E5;
              introspect(JAM.policy.p3) {
                var v16046 = Math.round(v21723)
              }
              var v10396 = i$$192("o", v16046, 3);
              k$$67 = v10395 + v10396;
              break;
            case "m":
              var v10397 = k$$67;
              introspect(JAM.policy.p3) {
                var v21724 = b$$565.getMonth()
              }
              var v16047 = v21724 + 1;
              var v10398 = i$$192("m", v16047, 2);
              k$$67 = v10397 + v10398;
              break;
            case "M":
              var v10399 = k$$67;
              introspect(JAM.policy.p3) {
                var v16048 = b$$565.getMonth()
              }
              var v10400 = j$$98("M", v16048, f$$148, g$$168);
              k$$67 = v10399 + v10400;
              break;
            case "y":
              var v10401 = k$$67;
              var v16049;
              var v21727 = h$$138("y");
              if (v21727) {
                introspect(JAM.policy.p3) {
                  v16049 = b$$565.getFullYear();
                }
              } else {
                var v24603;
                introspect(JAM.policy.p3) {
                  var v28870 = b$$565.getYear()
                }
                var v27964 = v28870 % 100;
                var v26571 = v27964 < 10;
                if (v26571) {
                  v24603 = "0";
                } else {
                  v24603 = "";
                }
                var v21725 = v24603;
                introspect(JAM.policy.p3) {
                  var v24604 = b$$565.getYear()
                }
                var v21726 = v24604 % 100;
                v16049 = v21725 + v21726;
              }
              var v10402 = v16049;
              k$$67 = v10401 + v10402;
              break;
            case "@":
              var v10403 = k$$67;
              introspect(JAM.policy.p3) {
                var v10404 = b$$565.getTime()
              }
              k$$67 = v10403 + v10404;
              break;
            case "!":
              var v10405 = k$$67;
              introspect(JAM.policy.p3) {
                var v21728 = b$$565.getTime()
              }
              var v16050 = v21728 * 1E4;
              var v16051 = this._ticksTo1970;
              var v10406 = v16050 + v16051;
              k$$67 = v10405 + v10406;
              break;
            case "'":
              var v3684;
              var v10407 = h$$138("'");
              if (v10407) {
                v3684 = k$$67 = k$$67 + "'";
              } else {
                v3684 = l$$74 = !0;
              }
              v3684;
              break;
            default:
              var v10408 = k$$67;
              introspect(JAM.policy.p3) {
                var v10409 = a$$599.charAt(m$$45)
              }
              k$$67 = v10408 + v10409;
          }
        }
        m$$45++;
        var v10410 = a$$599.length;
        v3686 = m$$45 < v10410;
      }
    }
    return k$$67;
  }
  function v1640(a$$593, b$$561, c$$456) {
    function q$$17() {
      introspect(JAM.policy.p3) {
        var v10411 = b$$561.charAt(r$$18)
      }
      introspect(JAM.policy.p3) {
        var v10412 = a$$593.charAt(s$$27)
      }
      var v3687 = v10411 != v10412;
      if (v3687) {
        throw "Unexpected literal at position " + r$$18;
      }
      r$$18++;
      return;
    }
    function p$$46(a$$595, c$$459, d$$347) {
      function v1639(a$$598, c$$460) {
        var d$$348 = c$$460[1];
        var v21729 = d$$348.length;
        introspect(JAM.policy.p3) {
          var v16052 = b$$561.substr(r$$18, v21729)
        }
        introspect(JAM.policy.p3) {
          var v10413 = v16052.toLowerCase()
        }
        introspect(JAM.policy.p3) {
          var v10414 = d$$348.toLowerCase()
        }
        var v3688 = v10413 == v10414;
        if (v3688) {
          f$$147 = c$$460[0];
          var v21730 = d$$348.length;
          r$$18 = r$$18 + v21730;
          return !1;
        }
        return;
      }
      function v1638(a$$597, b$$564) {
        var v16053 = a$$597[1];
        var v10415 = v16053.length;
        var v16054 = b$$564[1];
        var v10416 = v16054.length;
        var v3689 = v10415 - v10416;
        return -v3689;
      }
      function v1637(a$$596, b$$563) {
        var v3690 = [b$$563, a$$596];
        return [v3690];
      }
      var v16055;
      var v21731 = n$$91(a$$595);
      if (v21731) {
        v16055 = d$$347;
      } else {
        v16055 = c$$459;
      }
      var v10417 = v16055;
      introspect(JAM.policy.p3) {
        var v3691 = $$$3.map(v10417, v1637)
      }
      introspect(JAM.policy.p3) {
        var e$$302 = v3691.sort(v1638)
      }
      var f$$147 = -1;
      introspect(JAM.policy.p3) {
        $$$3.each(e$$302, v1639);
      }
      var v3692 = f$$147 != -1;
      if (v3692) {
        return f$$147 + 1;
      }
      throw "Unknown name at position " + r$$18;
    }
    function o$$21(a$$594) {
      var c$$458 = n$$91(a$$594);
      var v3693;
      var v10419 = a$$594 == "@";
      if (v10419) {
        v3693 = 14;
      } else {
        var v10418;
        var v16057 = a$$594 == "!";
        if (v16057) {
          v10418 = 20;
        } else {
          var v16056;
          var v24605 = a$$594 == "y";
          if (v24605) {
            v24605 = c$$458;
          }
          var v21733 = v24605;
          if (v21733) {
            v16056 = 4;
          } else {
            var v21732;
            var v24606 = a$$594 == "o";
            if (v24606) {
              v21732 = 3;
            } else {
              v21732 = 2;
            }
            v16056 = v21732;
          }
          v10418 = v16056;
        }
        v3693 = v10418;
      }
      var d$$346 = v3693;
      var v10420 = "^\\d{1," + d$$346;
      var v3694 = v10420 + "}";
      var e$$301 = new RegExp(v3694);
      introspect(JAM.policy.p3) {
        var v3695 = b$$561.substring(r$$18)
      }
      introspect(JAM.policy.p3) {
        var f$$146 = v3695.match(e$$301)
      }
      var v3696 = !f$$146;
      if (v3696) {
        throw "Missing number at position " + r$$18;
      }
      var v21734 = f$$146[0];
      var v16058 = v21734.length;
      r$$18 = r$$18 + v16058;
      var v10421 = f$$146[0];
      return parseInt(v10421, 10);
    }
    function n$$91(b$$562) {
      var v10422 = s$$27 + 1;
      var v10423 = a$$593.length;
      var v3697 = v10422 < v10423;
      if (v3697) {
        var v16059 = s$$27 + 1;
        introspect(JAM.policy.p3) {
          var v10424 = a$$593.charAt(v16059)
        }
        v3697 = v10424 == b$$562;
      }
      var c$$457 = v3697;
      if (c$$457) {
        s$$27++;
      }
      return c$$457;
    }
    var v10425 = a$$593 == null;
    var v16060 = !v10425;
    if (v16060) {
      v10425 = b$$561 == null;
    }
    var v3698 = v10425;
    if (v3698) {
      throw "Invalid arguments";
    }
    var v3699;
    var v16061 = typeof b$$561;
    var v10426 = v16061 == "object";
    if (v10426) {
      introspect(JAM.policy.p3) {
        v3699 = b$$561.toString();
      }
    } else {
      v3699 = b$$561 + "";
    }
    b$$561 = v3699;
    var v3700 = b$$561 == "";
    if (v3700) {
      return null;
    }
    var v10427;
    if (c$$456) {
      v10427 = c$$456.shortYearCutoff;
    } else {
      v10427 = null;
    }
    var v3701 = v10427;
    var v10429 = !v3701;
    if (v10429) {
      var v10428 = this._defaults;
      v3701 = v10428.shortYearCutoff;
    }
    var d$$345 = v3701;
    var v3702;
    var v16062 = typeof d$$345;
    var v10432 = v16062 != "string";
    if (v10432) {
      v3702 = d$$345;
    } else {
      var v21735 = new Date;
      introspect(JAM.policy.p3) {
        var v16063 = v21735.getFullYear()
      }
      var v10430 = v16063 % 100;
      var v10431 = parseInt(d$$345, 10);
      v3702 = v10430 + v10431;
    }
    d$$345 = v3702;
    var v10433;
    if (c$$456) {
      v10433 = c$$456.dayNamesShort;
    } else {
      v10433 = null;
    }
    var v3703 = v10433;
    var v10435 = !v3703;
    if (v10435) {
      var v10434 = this._defaults;
      v3703 = v10434.dayNamesShort;
    }
    var e$$300 = v3703;
    var v10436;
    if (c$$456) {
      v10436 = c$$456.dayNames;
    } else {
      v10436 = null;
    }
    var v3704 = v10436;
    var v10438 = !v3704;
    if (v10438) {
      var v10437 = this._defaults;
      v3704 = v10437.dayNames;
    }
    var f$$145 = v3704;
    var v10439;
    if (c$$456) {
      v10439 = c$$456.monthNamesShort;
    } else {
      v10439 = null;
    }
    var v3705 = v10439;
    var v10441 = !v3705;
    if (v10441) {
      var v10440 = this._defaults;
      v3705 = v10440.monthNamesShort;
    }
    var g$$167 = v3705;
    var v10442;
    if (c$$456) {
      v10442 = c$$456.monthNames;
    } else {
      v10442 = null;
    }
    var v3706 = v10442;
    var v10444 = !v3706;
    if (v10444) {
      var v10443 = this._defaults;
      v3706 = v10443.monthNames;
    }
    var h$$137 = v3706;
    var i$$191 = -1;
    var j$$97 = -1;
    var k$$66 = -1;
    var l$$73 = -1;
    var m$$44 = !1;
    var r$$18 = 0;
    var s$$27 = 0;
    var v10445 = a$$593.length;
    var v3712 = s$$27 < v10445;
    for (;v3712;) {
      if (m$$44) {
        var v3707;
        introspect(JAM.policy.p3) {
          var v21736 = a$$593.charAt(s$$27)
        }
        var v16064 = v21736 == "'";
        if (v16064) {
          var v21737 = n$$91("'");
          v16064 = !v21737;
        }
        var v10446 = v16064;
        if (v10446) {
          v3707 = m$$44 = !1;
        } else {
          v3707 = q$$17();
        }
        v3707;
      } else {
        introspect(JAM.policy.p3) {
          var v3711 = a$$593.charAt(s$$27)
        }
        switch(v3711) {
          case "d":
            k$$66 = o$$21("d");
            break;
          case "D":
            p$$46("D", e$$300, f$$145);
            break;
          case "o":
            l$$73 = o$$21("o");
            break;
          case "m":
            j$$97 = o$$21("m");
            break;
          case "M":
            j$$97 = p$$46("M", g$$167, h$$137);
            break;
          case "y":
            i$$191 = o$$21("y");
            break;
          case "@":
            var v3708 = o$$21("@");
            var t$$12 = new Date(v3708);
            introspect(JAM.policy.p3) {
              i$$191 = t$$12.getFullYear();
            }
            introspect(JAM.policy.p3) {
              var v16065 = t$$12.getMonth()
            }
            j$$97 = v16065 + 1;
            introspect(JAM.policy.p3) {
              k$$66 = t$$12.getDate();
            }
            break;
          case "!":
            var v16066 = o$$21("!");
            var v16067 = this._ticksTo1970;
            var v10447 = v16066 - v16067;
            var v3709 = v10447 / 1E4;
            t$$12 = new Date(v3709);
            introspect(JAM.policy.p3) {
              i$$191 = t$$12.getFullYear();
            }
            introspect(JAM.policy.p3) {
              var v16068 = t$$12.getMonth()
            }
            j$$97 = v16068 + 1;
            introspect(JAM.policy.p3) {
              k$$66 = t$$12.getDate();
            }
            break;
          case "'":
            var v3710;
            var v10448 = n$$91("'");
            if (v10448) {
              v3710 = q$$17();
            } else {
              v3710 = m$$44 = !0;
            }
            v3710;
            break;
          default:
            q$$17();
        }
      }
      s$$27++;
      var v10449 = a$$593.length;
      v3712 = s$$27 < v10449;
    }
    var v10450 = b$$561.length;
    var v3714 = r$$18 < v10450;
    if (v3714) {
      introspect(JAM.policy.p3) {
        var v3713 = b$$561.substring(r$$18)
      }
      throw "Extra/unparsed characters found in date: " + v3713;
    }
    var v3715;
    var v10453 = i$$191 == -1;
    if (v10453) {
      var v10451 = new Date;
      introspect(JAM.policy.p3) {
        v3715 = i$$191 = v10451.getFullYear();
      }
    } else {
      var v10452 = i$$191 < 100;
      if (v10452) {
        var v21738 = i$$191;
        var v27965 = new Date;
        introspect(JAM.policy.p3) {
          var v26572 = v27965.getFullYear()
        }
        var v28871 = new Date;
        introspect(JAM.policy.p3) {
          var v27966 = v28871.getFullYear()
        }
        var v26573 = v27966 % 100;
        var v24607 = v26572 - v26573;
        var v26574;
        var v27967 = i$$191 <= d$$345;
        if (v27967) {
          v26574 = 0;
        } else {
          v26574 = -100;
        }
        var v24608 = v26574;
        var v21739 = v24607 + v24608;
        v10452 = i$$191 = v21738 + v21739;
      }
      v3715 = v10452;
    }
    v3715;
    var v3719 = l$$73 > -1;
    if (v3719) {
      j$$97 = 1;
      k$$66 = l$$73;
      var v3718 = !0;
      do {
        var v3716 = j$$97 - 1;
        introspect(JAM.policy.p3) {
          var u$$10 = this._getDaysInMonth(i$$191, v3716)
        }
        var v3717 = k$$66 <= u$$10;
        if (v3717) {
          break;
        }
        j$$97++;
        k$$66 = k$$66 - u$$10;
        v3718 = !0;
      } while (v3718);
    }
    var v10454 = j$$97 - 1;
    var v3720 = new Date(i$$191, v10454, k$$66);
    introspect(JAM.policy.p3) {
      t$$12 = this._daylightSavingAdjust(v3720);
    }
    introspect(JAM.policy.p3) {
      var v21740 = t$$12.getFullYear()
    }
    var v16069 = v21740 != i$$191;
    var v21742 = !v16069;
    if (v21742) {
      introspect(JAM.policy.p3) {
        var v24609 = t$$12.getMonth()
      }
      var v21741 = v24609 + 1;
      v16069 = v21741 != j$$97;
    }
    var v10455 = v16069;
    var v16071 = !v10455;
    if (v16071) {
      introspect(JAM.policy.p3) {
        var v16070 = t$$12.getDate()
      }
      v10455 = v16070 != k$$66;
    }
    var v3721 = v10455;
    if (v3721) {
      throw "Invalid date";
    }
    return t$$12;
  }
  function v1636(a$$592) {
    introspect(JAM.policy.p3) {
      var v3722 = a$$592.getTime()
    }
    var b$$560 = new Date(v3722);
    introspect(JAM.policy.p3) {
      var v16072 = b$$560.getDate()
    }
    var v10456 = v16072 + 4;
    introspect(JAM.policy.p3) {
      var v16073 = b$$560.getDay()
    }
    var v21743 = !v16073;
    if (v21743) {
      v16073 = 7;
    }
    var v10457 = v16073;
    var v3723 = v10456 - v10457;
    introspect(JAM.policy.p3) {
      b$$560.setDate(v3723);
    }
    introspect(JAM.policy.p3) {
      var c$$455 = b$$560.getTime()
    }
    introspect(JAM.policy.p3) {
      b$$560.setMonth(0);
    }
    introspect(JAM.policy.p3) {
      b$$560.setDate(1);
    }
    var v26575 = c$$455 - b$$560;
    var v24610 = v26575 / 864E5;
    introspect(JAM.policy.p3) {
      var v21744 = Math.round(v24610)
    }
    var v16074 = v21744 / 7;
    introspect(JAM.policy.p3) {
      var v10458 = Math.floor(v16074)
    }
    return v10458 + 1;
  }
  function v1635(a$$591) {
    introspect(JAM.policy.p3) {
      var b$$559 = a$$591.getDay()
    }
    var v10459 = b$$559 > 0;
    if (v10459) {
      v10459 = b$$559 < 6;
    }
    var v3724 = v10459;
    return [v3724, ""];
  }
  function v1634(a$$590) {
    function v1633() {
      introspect(JAM.policy.p3) {
        var v3725 = $$$3(this)
      }
      introspect(JAM.policy.p3) {
        v3725.val(e$$299);
      }
      return;
    }
    introspect(JAM.policy.p3) {
      var b$$558 = this._get(a$$590, "altField")
    }
    if (b$$558) {
      introspect(JAM.policy.p3) {
        var v3726 = this._get(a$$590, "altFormat")
      }
      var v10460 = !v3726;
      if (v10460) {
        introspect(JAM.policy.p3) {
          v3726 = this._get(a$$590, "dateFormat");
        }
      }
      var c$$454 = v3726;
      introspect(JAM.policy.p3) {
        var d$$344 = this._getDate(a$$590)
      }
      introspect(JAM.policy.p3) {
        var v3727 = this._getFormatConfig(a$$590)
      }
      introspect(JAM.policy.p3) {
        var e$$299 = this.formatDate(c$$454, d$$344, v3727)
      }
      introspect(JAM.policy.p3) {
        var v3728 = $$$3(b$$558)
      }
      introspect(JAM.policy.p3) {
        v3728.each(v1633);
      }
    }
    return;
  }
  function v1632(a$$589, b$$557) {
    introspect(JAM.policy.p3) {
      var c$$453 = $$$3(a$$589)
    }
    var v3729 = c$$453[0];
    introspect(JAM.policy.p3) {
      var d$$343 = this._getInst(v3729)
    }
    var v16075;
    var v21745 = b$$557 != null;
    if (v21745) {
      v16075 = b$$557;
    } else {
      introspect(JAM.policy.p3) {
        v16075 = this._formatDate(d$$343);
      }
    }
    b$$557 = v16075;
    var v16076 = d$$343.input;
    if (v16076) {
      var v21746 = d$$343.input;
      introspect(JAM.policy.p3) {
        v21746.val(b$$557);
      }
    }
    introspect(JAM.policy.p3) {
      this._updateAlternate(d$$343);
    }
    introspect(JAM.policy.p3) {
      var e$$298 = this._get(d$$343, "onSelect")
    }
    var v10461;
    if (e$$298) {
      var v21747;
      var v24612 = d$$343.input;
      if (v24612) {
        var v24611 = d$$343.input;
        v21747 = v24611[0];
      } else {
        v21747 = null;
      }
      var v16077 = v21747;
      var v16078 = [b$$557, d$$343];
      introspect(JAM.policy.p3) {
        v10461 = e$$298.apply(v16077, v16078);
      }
    } else {
      var v16079 = d$$343.input;
      if (v16079) {
        var v21748 = d$$343.input;
        introspect(JAM.policy.p3) {
          v16079 = v21748.trigger("change");
        }
      }
      v10461 = v16079;
    }
    v10461;
    var v10462;
    var v16080 = d$$343.inline;
    if (v16080) {
      introspect(JAM.policy.p3) {
        v10462 = this._updateDatepicker(d$$343);
      }
    } else {
      introspect(JAM.policy.p3) {
        this._hideDatepicker();
      }
      var v26576 = d$$343.input;
      this._lastInput = v26576[0];
      var v28872 = d$$343.input;
      var v27968 = v28872[0];
      var v26577 = typeof v27968;
      var v24613 = v26577 != "object";
      if (v24613) {
        var v26578 = d$$343.input;
        introspect(JAM.policy.p3) {
          v26578.focus();
        }
      }
      v10462 = this._lastInput = null;
    }
    v10462;
    return;
  }
  function v1631(a$$588) {
    introspect(JAM.policy.p3) {
      var b$$556 = $$$3(a$$588)
    }
    var v3730 = b$$556[0];
    introspect(JAM.policy.p3) {
      var c$$452 = this._getInst(v3730)
    }
    introspect(JAM.policy.p3) {
      this._selectDate(b$$556, "");
    }
    return;
  }
  function v1630(a$$587, b$$555, c$$451, d$$342) {
    introspect(JAM.policy.p3) {
      var e$$297 = $$$3(a$$587)
    }
    introspect(JAM.policy.p3) {
      var v16081 = $$$3(d$$342)
    }
    var v16082 = this._unselectableClass;
    introspect(JAM.policy.p3) {
      var v10463 = v16081.hasClass(v16082)
    }
    var v16084 = !v10463;
    if (v16084) {
      var v16083 = e$$297[0];
      introspect(JAM.policy.p3) {
        v10463 = this._isDisabledDatepicker(v16083);
      }
    }
    var v3731 = v10463;
    if (v3731) {
      return;
    }
    var v3732 = e$$297[0];
    introspect(JAM.policy.p3) {
      var f$$144 = this._getInst(v3732)
    }
    introspect(JAM.policy.p3) {
      var v21749 = $$$3("a", d$$342)
    }
    introspect(JAM.policy.p3) {
      var v31008 = v21749.html()
    }
    f$$144.selectedDay = f$$144.currentDay = v31008;
    f$$144.selectedMonth = f$$144.currentMonth = b$$555;
    f$$144.selectedYear = f$$144.currentYear = c$$451;
    var v16085 = f$$144.currentDay;
    var v16086 = f$$144.currentMonth;
    var v16087 = f$$144.currentYear;
    introspect(JAM.policy.p3) {
      var v10464 = this._formatDate(f$$144, v16085, v16086, v16087)
    }
    introspect(JAM.policy.p3) {
      this._selectDate(a$$587, v10464);
    }
    return;
  }
  function v1629(a$$586, b$$554, c$$450) {
    introspect(JAM.policy.p3) {
      var d$$341 = $$$3(a$$586)
    }
    var v3733 = d$$341[0];
    introspect(JAM.policy.p3) {
      var e$$296 = this._getInst(v3733)
    }
    var v24614;
    var v26579 = c$$450 == "M";
    if (v26579) {
      v24614 = "Month";
    } else {
      v24614 = "Year";
    }
    var v21750 = v24614;
    var v16088 = "selected" + v21750;
    var v26580;
    var v27969 = c$$450 == "M";
    if (v27969) {
      v26580 = "Month";
    } else {
      v26580 = "Year";
    }
    var v24615 = v26580;
    var v21751 = "draw" + v24615;
    var v27970 = b$$554.options;
    var v27971 = b$$554.selectedIndex;
    var v26581 = v27970[v27971];
    var v24616 = v26581.value;
    var v31009 = parseInt(v24616, 10);
    introspect(JAM.policy.p2) {
      e$$296[v16088] = e$$296[v21751] = v31009;
    }
    introspect(JAM.policy.p3) {
      this._notifyChange(e$$296);
    }
    introspect(JAM.policy.p3) {
      this._adjustDate(d$$341);
    }
    return;
  }
  function v1628(a$$585) {
    introspect(JAM.policy.p3) {
      var b$$553 = $$$3(a$$585)
    }
    var v3734 = b$$553[0];
    introspect(JAM.policy.p3) {
      var c$$449 = this._getInst(v3734)
    }
    introspect(JAM.policy.p3) {
      var v10465 = this._get(c$$449, "gotoCurrent")
    }
    if (v10465) {
      v10465 = c$$449.currentDay;
    }
    var v3735 = v10465;
    if (v3735) {
      c$$449.selectedDay = c$$449.currentDay;
      c$$449.drawMonth = c$$449.selectedMonth = c$$449.currentMonth;
      c$$449.drawYear = c$$449.selectedYear = c$$449.currentYear;
    } else {
      var d$$340 = new Date;
      introspect(JAM.policy.p3) {
        var v31010 = d$$340.getDate()
      }
      c$$449.selectedDay = v31010;
      introspect(JAM.policy.p3) {
        var v31011 = d$$340.getMonth()
      }
      c$$449.drawMonth = c$$449.selectedMonth = v31011;
      introspect(JAM.policy.p3) {
        var v31012 = d$$340.getFullYear()
      }
      c$$449.drawYear = c$$449.selectedYear = v31012;
    }
    introspect(JAM.policy.p3) {
      this._notifyChange(c$$449);
    }
    introspect(JAM.policy.p3) {
      this._adjustDate(b$$553);
    }
    return;
  }
  function v1627(a$$584, b$$552, c$$448) {
    introspect(JAM.policy.p3) {
      var d$$339 = $$$3(a$$584)
    }
    var v3736 = d$$339[0];
    introspect(JAM.policy.p3) {
      var e$$295 = this._getInst(v3736)
    }
    var v10466 = d$$339[0];
    introspect(JAM.policy.p3) {
      var v3737 = this._isDisabledDatepicker(v10466)
    }
    if (v3737) {
      return;
    }
    var v21752;
    var v24617 = c$$448 == "M";
    if (v24617) {
      introspect(JAM.policy.p3) {
        v21752 = this._get(e$$295, "showCurrentAtPos");
      }
    } else {
      v21752 = 0;
    }
    var v16089 = v21752;
    var v10467 = b$$552 + v16089;
    introspect(JAM.policy.p3) {
      this._adjustInstDate(e$$295, v10467, c$$448);
    }
    introspect(JAM.policy.p3) {
      this._updateDatepicker(e$$295);
    }
    return;
  }
  function v1626(a$$583) {
    var v16090 = $$$3.datepicker;
    var v10468 = v16090._curInst;
    var v3738 = !v10468;
    if (v3738) {
      return;
    }
    var v3739 = a$$583.target;
    introspect(JAM.policy.p3) {
      var b$$551 = $$$3(v3739)
    }
    var v3740 = $$$3.datepicker;
    var v3741 = b$$551[0];
    introspect(JAM.policy.p3) {
      var c$$447 = v3740._getInst(v3741)
    }
    var v29473 = b$$551[0];
    var v28873 = v29473.id;
    var v29474 = $$$3.datepicker;
    var v28874 = v29474._mainDivId;
    var v27972 = v28873 != v28874;
    if (v27972) {
      var v30313 = $$$3.datepicker;
      var v30098 = v30313._mainDivId;
      var v29835 = "#" + v30098;
      introspect(JAM.policy.p3) {
        var v29475 = b$$551.parents(v29835)
      }
      var v28875 = v29475.length;
      v27972 = v28875 == 0;
    }
    var v26582 = v27972;
    if (v26582) {
      var v29476 = $$$3.datepicker;
      var v28876 = v29476.markerClassName;
      introspect(JAM.policy.p3) {
        var v27973 = b$$551.hasClass(v28876)
      }
      v26582 = !v27973;
    }
    var v24618 = v26582;
    if (v24618) {
      var v29836 = $$$3.datepicker;
      var v29477 = v29836._triggerClass;
      var v28877 = "." + v29477;
      introspect(JAM.policy.p3) {
        var v27974 = b$$551.closest(v28877)
      }
      var v26583 = v27974.length;
      v24618 = !v26583;
    }
    var v21753 = v24618;
    if (v21753) {
      var v24619 = $$$3.datepicker;
      v21753 = v24619._datepickerShowing;
    }
    var v16091 = v21753;
    if (v16091) {
      var v26584 = $$$3.datepicker;
      var v24620 = v26584._inDialog;
      var v21754 = !v24620;
      var v24622 = !v21754;
      if (v24622) {
        var v24621 = $$$3.blockUI;
        v21754 = !v24621;
      }
      v16091 = v21754;
    }
    var v10469 = v16091;
    var v16093 = !v10469;
    if (v16093) {
      var v24623 = $$$3.datepicker;
      var v21755 = v24623.markerClassName;
      introspect(JAM.policy.p3) {
        var v16092 = b$$551.hasClass(v21755)
      }
      if (v16092) {
        var v24624 = $$$3.datepicker;
        var v21756 = v24624._curInst;
        v16092 = v21756 != c$$447;
      }
      v10469 = v16092;
    }
    var v3742 = v10469;
    if (v3742) {
      var v10470 = $$$3.datepicker;
      introspect(JAM.policy.p3) {
        v10470._hideDatepicker();
      }
    }
    return;
  }
  function v1625(a$$582) {
    var v10471 = a$$582.dpDiv;
    var v10472 = this._dialogClass;
    introspect(JAM.policy.p3) {
      var v3743 = v10471.removeClass(v10472)
    }
    introspect(JAM.policy.p3) {
      v3743.unbind(".ui-datepicker-calendar");
    }
    return;
  }
  function v1624(a$$581) {
    function v1623() {
      var v3744 = $$$3.datepicker;
      introspect(JAM.policy.p3) {
        v3744._tidyDialog(b$$550);
      }
      return;
    }
    var b$$550 = this._curInst;
    var v10473 = !b$$550;
    var v16095 = !v10473;
    if (v16095) {
      var v16094 = a$$581;
      if (v16094) {
        var v21757 = b$$550;
        introspect(JAM.policy.p3) {
          var v21758 = $$$3.data(a$$581, PROP_NAME)
        }
        v16094 = v21757 != v21758;
      }
      v10473 = v16094;
    }
    var v3745 = v10473;
    if (v3745) {
      return;
    }
    var v3746 = this._datepickerShowing;
    if (v3746) {
      introspect(JAM.policy.p3) {
        var c$$446 = this._get(b$$550, "showAnim")
      }
      introspect(JAM.policy.p3) {
        var d$$338 = this._get(b$$550, "duration")
      }
      var e$$294 = v1623;
      var v16096;
      var v24625 = $$$3.effects;
      if (v24625) {
        var v26585 = $$$3.effects;
        v24625 = v26585[c$$446];
      }
      var v21764 = v24625;
      if (v21764) {
        var v21759 = b$$550.dpDiv;
        var v24626 = $$$3.datepicker;
        introspect(JAM.policy.p3) {
          var v21760 = v24626._get(b$$550, "showOptions")
        }
        introspect(JAM.policy.p3) {
          v16096 = v21759.hide(c$$446, v21760, d$$338, e$$294);
        }
      } else {
        var v21761 = b$$550.dpDiv;
        var v24627;
        var v26587 = c$$446 == "slideDown";
        if (v26587) {
          v24627 = "slideUp";
        } else {
          var v26586;
          var v27975 = c$$446 == "fadeIn";
          if (v27975) {
            v26586 = "fadeOut";
          } else {
            v26586 = "hide";
          }
          v24627 = v26586;
        }
        var v21762 = v24627;
        var v24628;
        if (c$$446) {
          v24628 = d$$338;
        } else {
          v24628 = null;
        }
        var v21763 = v24628;
        introspect(JAM.policy.p3) {
          v16096 = v21761[v21762](v21763, e$$294);
        }
      }
      v16096;
      var v21765 = !c$$446;
      if (v21765) {
        introspect(JAM.policy.p3) {
          e$$294();
        }
      }
      this._datepickerShowing = !1;
      introspect(JAM.policy.p3) {
        var f$$143 = this._get(b$$550, "onClose")
      }
      if (f$$143) {
        var v26588;
        var v27977 = b$$550.input;
        if (v27977) {
          var v27976 = b$$550.input;
          v26588 = v27976[0];
        } else {
          v26588 = null;
        }
        var v24629 = v26588;
        var v27978;
        var v28879 = b$$550.input;
        if (v28879) {
          var v28878 = b$$550.input;
          introspect(JAM.policy.p3) {
            v27978 = v28878.val();
          }
        } else {
          v27978 = "";
        }
        var v26589 = v27978;
        var v24630 = [v26589, b$$550];
        introspect(JAM.policy.p3) {
          f$$143.apply(v24629, v24630);
        }
      }
      this._lastInput = null;
      var v16097 = this._inDialog;
      if (v16097) {
        var v24631 = this._dialogInput;
        var v24632 = {position:"absolute", left:"0", top:"-100px"};
        introspect(JAM.policy.p3) {
          v24631.css(v24632);
        }
        var v24633 = $$$3.blockUI;
        if (v24633) {
          introspect(JAM.policy.p3) {
            $$$3.unblockUI();
          }
          introspect(JAM.policy.p3) {
            var v27979 = $$$3("body")
          }
          var v27980 = this.dpDiv;
          introspect(JAM.policy.p3) {
            v27979.append(v27980);
          }
        }
      }
      this._inDialog = !1;
    }
    return;
  }
  function v1622(a$$580) {
    introspect(JAM.policy.p3) {
      var b$$549 = this._getInst(a$$580)
    }
    introspect(JAM.policy.p3) {
      var c$$445 = this._get(b$$549, "isRTL")
    }
    var v10474 = a$$580;
    if (v10474) {
      var v24634 = a$$580.type;
      var v21766 = v24634 == "hidden";
      var v24636 = !v21766;
      if (v24636) {
        var v24635 = a$$580.nodeType;
        v21766 = v24635 != 1;
      }
      var v16098 = v21766;
      var v21768 = !v16098;
      if (v21768) {
        var v24637 = $$$3.expr;
        var v21767 = v24637.filters;
        introspect(JAM.policy.p3) {
          v16098 = v21767.hidden(a$$580);
        }
      }
      v10474 = v16098;
    }
    var v3748 = v10474;
    for (;v3748;) {
      var v10475;
      if (c$$445) {
        v10475 = "previousSibling";
      } else {
        v10475 = "nextSibling";
      }
      var v3747 = v10475;
      a$$580 = a$$580[v3747];
      var v10476 = a$$580;
      if (v10476) {
        var v24638 = a$$580.type;
        var v21769 = v24638 == "hidden";
        var v24640 = !v21769;
        if (v24640) {
          var v24639 = a$$580.nodeType;
          v21769 = v24639 != 1;
        }
        var v16099 = v21769;
        var v21771 = !v16099;
        if (v21771) {
          var v24641 = $$$3.expr;
          var v21770 = v24641.filters;
          introspect(JAM.policy.p3) {
            v16099 = v21770.hidden(a$$580);
          }
        }
        v10476 = v16099;
      }
      v3748 = v10476;
    }
    introspect(JAM.policy.p3) {
      var v3749 = $$$3(a$$580)
    }
    introspect(JAM.policy.p3) {
      var d$$337 = v3749.offset()
    }
    var v3750 = d$$337.left;
    var v3751 = d$$337.top;
    return [v3750, v3751];
  }
  function v1621(a$$579, b$$548, c$$444) {
    var v3752 = a$$579.dpDiv;
    introspect(JAM.policy.p3) {
      var d$$336 = v3752.outerWidth()
    }
    var v3753 = a$$579.dpDiv;
    introspect(JAM.policy.p3) {
      var e$$293 = v3753.outerHeight()
    }
    var v3754;
    var v10478 = a$$579.input;
    if (v10478) {
      var v10477 = a$$579.input;
      introspect(JAM.policy.p3) {
        v3754 = v10477.outerWidth();
      }
    } else {
      v3754 = 0;
    }
    var f$$142 = v3754;
    var v3755;
    var v10480 = a$$579.input;
    if (v10480) {
      var v10479 = a$$579.input;
      introspect(JAM.policy.p3) {
        v3755 = v10479.outerHeight();
      }
    } else {
      v3755 = 0;
    }
    var g$$166 = v3755;
    var v10481 = document.documentElement;
    var v3756 = v10481.clientWidth;
    var v10482;
    if (c$$444) {
      v10482 = 0;
    } else {
      introspect(JAM.policy.p3) {
        var v16100 = $$$3(document)
      }
      introspect(JAM.policy.p3) {
        v10482 = v16100.scrollLeft();
      }
    }
    var v3757 = v10482;
    var h$$136 = v3756 + v3757;
    var v10483 = document.documentElement;
    var v3758 = v10483.clientHeight;
    var v10484;
    if (c$$444) {
      v10484 = 0;
    } else {
      introspect(JAM.policy.p3) {
        var v16101 = $$$3(document)
      }
      introspect(JAM.policy.p3) {
        v10484 = v16101.scrollTop();
      }
    }
    var v3759 = v10484;
    var i$$190 = v3758 + v3759;
    var v27981 = b$$548.left;
    var v28880;
    introspect(JAM.policy.p3) {
      var v29478 = this._get(a$$579, "isRTL")
    }
    if (v29478) {
      v28880 = d$$336 - f$$142;
    } else {
      v28880 = 0;
    }
    var v27982 = v28880;
    b$$548.left = v27981 - v27982;
    var v27983 = b$$548.left;
    var v28881;
    var v29837 = c$$444;
    if (v29837) {
      var v30099 = b$$548.left;
      var v30454 = a$$579.input;
      introspect(JAM.policy.p3) {
        var v30314 = v30454.offset()
      }
      var v30100 = v30314.left;
      v29837 = v30099 == v30100;
    }
    var v29480 = v29837;
    if (v29480) {
      introspect(JAM.policy.p3) {
        var v29479 = $$$3(document)
      }
      introspect(JAM.policy.p3) {
        v28881 = v29479.scrollLeft();
      }
    } else {
      v28881 = 0;
    }
    var v27984 = v28881;
    b$$548.left = v27983 - v27984;
    var v26590 = b$$548.top;
    var v27985;
    var v29481 = c$$444;
    if (v29481) {
      var v29838 = b$$548.top;
      var v30455 = a$$579.input;
      introspect(JAM.policy.p3) {
        var v30315 = v30455.offset()
      }
      var v30101 = v30315.top;
      var v29839 = v30101 + g$$166;
      v29481 = v29838 == v29839;
    }
    var v28883 = v29481;
    if (v28883) {
      introspect(JAM.policy.p3) {
        var v28882 = $$$3(document)
      }
      introspect(JAM.policy.p3) {
        v27985 = v28882.scrollTop();
      }
    } else {
      v27985 = 0;
    }
    var v26591 = v27985;
    b$$548.top = v26590 - v26591;
    var v24642 = b$$548.left;
    var v26592 = b$$548.left;
    var v27986;
    var v30102 = b$$548.left;
    var v29840 = v30102 + d$$336;
    var v29482 = v29840 > h$$136;
    if (v29482) {
      v29482 = h$$136 > d$$336;
    }
    var v28885 = v29482;
    if (v28885) {
      var v29841 = b$$548.left;
      var v29483 = v29841 + d$$336;
      var v28884 = v29483 - h$$136;
      introspect(JAM.policy.p3) {
        v27986 = Math.abs(v28884);
      }
    } else {
      v27986 = 0;
    }
    var v26593 = v27986;
    introspect(JAM.policy.p3) {
      var v24643 = Math.min(v26592, v26593)
    }
    b$$548.left = v24642 - v24643;
    var v21772 = b$$548.top;
    var v24644 = b$$548.top;
    var v26594;
    var v29842 = b$$548.top;
    var v29484 = v29842 + e$$293;
    var v28886 = v29484 > i$$190;
    if (v28886) {
      v28886 = i$$190 > e$$293;
    }
    var v27988 = v28886;
    if (v27988) {
      var v27987 = e$$293 + g$$166;
      introspect(JAM.policy.p3) {
        v26594 = Math.abs(v27987);
      }
    } else {
      v26594 = 0;
    }
    var v24645 = v26594;
    introspect(JAM.policy.p3) {
      var v21773 = Math.min(v24644, v24645)
    }
    b$$548.top = v21772 - v21773;
    return b$$548;
  }
  function v1620(a$$577) {
    function b$$547(a$$578) {
      var v10485 = {thin:1, medium:2, thick:3};
      var v3760 = v10485[a$$578];
      var v10486 = !v3760;
      if (v10486) {
        v3760 = a$$578;
      }
      return v3760;
    }
    introspect(JAM.policy.p3) {
      var v16102 = a$$577.css("border-left-width")
    }
    var v10487 = b$$547(v16102);
    var v3761 = parseFloat(v10487);
    introspect(JAM.policy.p3) {
      var v16103 = a$$577.css("border-top-width")
    }
    var v10488 = b$$547(v16103);
    var v3762 = parseFloat(v10488);
    return [v3761, v3762];
  }
  function v1619(a$$576) {
    function v1618() {
      var v21774 = a$$576.yearshtml;
      var v16104 = h$$135 === v21774;
      if (v16104) {
        v16104 = a$$576.yearshtml;
      }
      var v10489 = v16104;
      if (v10489) {
        var v21775 = a$$576.dpDiv;
        introspect(JAM.policy.p3) {
          var v16105 = v21775.find("select.ui-datepicker-year:first")
        }
        var v16106 = a$$576.yearshtml;
        introspect(JAM.policy.p3) {
          v16105.replaceWith(v16106);
        }
      }
      h$$135 = a$$576.yearshtml = null;
      return;
    }
    var b$$546 = this;
    b$$546.maxRows = 4;
    var v3763 = $$$3.datepicker;
    var v3764 = a$$576.dpDiv;
    introspect(JAM.policy.p3) {
      var c$$443 = v3763._getBorders(v3764)
    }
    instActive = a$$576;
    var v21776 = a$$576.dpDiv;
    introspect(JAM.policy.p3) {
      var v16107 = v21776.empty()
    }
    introspect(JAM.policy.p3) {
      var v16108 = this._generateHTML(a$$576)
    }
    introspect(JAM.policy.p3) {
      v16107.append(v16108);
    }
    introspect(JAM.policy.p3) {
      this._attachHandlers(a$$576);
    }
    var v3765 = a$$576.dpDiv;
    introspect(JAM.policy.p3) {
      var d$$335 = v3765.find("iframe.ui-datepicker-cover")
    }
    var v16109 = d$$335.length;
    var v10490 = !v16109;
    var v16111 = !v10490;
    if (v16111) {
      var v24646 = c$$443[0];
      var v21777 = -v24646;
      var v24647 = c$$443[1];
      var v21778 = -v24647;
      var v24648 = a$$576.dpDiv;
      introspect(JAM.policy.p3) {
        var v21779 = v24648.outerWidth()
      }
      var v24649 = a$$576.dpDiv;
      introspect(JAM.policy.p3) {
        var v21780 = v24649.outerHeight()
      }
      var v16110 = {left:v21777, top:v21778, width:v21779, height:v21780};
      introspect(JAM.policy.p3) {
        d$$335.css(v16110);
      }
    }
    var v16112 = a$$576.dpDiv;
    var v24650 = this._dayOverClass;
    var v21781 = "." + v24650;
    var v16113 = v21781 + " a";
    introspect(JAM.policy.p3) {
      var v10491 = v16112.find(v16113)
    }
    introspect(JAM.policy.p3) {
      v10491.mouseover();
    }
    introspect(JAM.policy.p3) {
      var e$$292 = this._getNumberOfMonths(a$$576)
    }
    var f$$141 = e$$292[1];
    var g$$165 = 17;
    var v26595 = a$$576.dpDiv;
    introspect(JAM.policy.p3) {
      var v24651 = v26595.removeClass("ui-datepicker-multi-2 ui-datepicker-multi-3 ui-datepicker-multi-4")
    }
    introspect(JAM.policy.p3) {
      v24651.width("");
    }
    var v24652 = f$$141 > 1;
    if (v24652) {
      var v27989 = a$$576.dpDiv;
      var v27990 = "ui-datepicker-multi-" + f$$141;
      introspect(JAM.policy.p3) {
        var v26596 = v27989.addClass(v27990)
      }
      var v27991 = g$$165 * f$$141;
      var v26597 = v27991 + "em";
      introspect(JAM.policy.p3) {
        v26596.css("width", v26597);
      }
    }
    var v21782 = a$$576.dpDiv;
    var v26598;
    var v29485 = e$$292[0];
    var v28887 = v29485 != 1;
    var v29487 = !v28887;
    if (v29487) {
      var v29486 = e$$292[1];
      v28887 = v29486 != 1;
    }
    var v27992 = v28887;
    if (v27992) {
      v26598 = "add";
    } else {
      v26598 = "remove";
    }
    var v24653 = v26598;
    var v21783 = v24653 + "Class";
    introspect(JAM.policy.p3) {
      v21782[v21783]("ui-datepicker-multi");
    }
    var v16114 = a$$576.dpDiv;
    var v24654;
    introspect(JAM.policy.p3) {
      var v26599 = this._get(a$$576, "isRTL")
    }
    if (v26599) {
      v24654 = "add";
    } else {
      v24654 = "remove";
    }
    var v21784 = v24654;
    var v16115 = v21784 + "Class";
    introspect(JAM.policy.p3) {
      v16114[v16115]("ui-datepicker-rtl");
    }
    var v29488 = $$$3.datepicker;
    var v28888 = v29488._curInst;
    var v27993 = a$$576 == v28888;
    if (v27993) {
      var v28889 = $$$3.datepicker;
      v27993 = v28889._datepickerShowing;
    }
    var v26600 = v27993;
    if (v26600) {
      v26600 = a$$576.input;
    }
    var v24655 = v26600;
    if (v24655) {
      var v26601 = a$$576.input;
      introspect(JAM.policy.p3) {
        v24655 = v26601.is(":visible");
      }
    }
    var v21785 = v24655;
    if (v21785) {
      var v26602 = a$$576.input;
      introspect(JAM.policy.p3) {
        var v24656 = v26602.is(":disabled")
      }
      v21785 = !v24656;
    }
    var v16116 = v21785;
    if (v16116) {
      var v24657 = a$$576.input;
      var v21786 = v24657[0];
      var v21787 = document.activeElement;
      v16116 = v21786 != v21787;
    }
    var v10492 = v16116;
    if (v10492) {
      var v16117 = a$$576.input;
      introspect(JAM.policy.p3) {
        v16117.focus();
      }
    }
    var v3766 = a$$576.yearshtml;
    if (v3766) {
      var h$$135 = a$$576.yearshtml;
      setTimeout(v1618, 0);
    }
    return;
  }
  function v1617(a$$574) {
    function v1616() {
      var v3767 = b$$545.dpDiv;
      introspect(JAM.policy.p3) {
        var a$$575 = v3767.find("iframe.ui-datepicker-cover")
      }
      var v16118 = a$$575.length;
      var v10493 = !v16118;
      var v3771 = !v10493;
      if (v3771) {
        var v3768 = $$$3.datepicker;
        var v3769 = b$$545.dpDiv;
        introspect(JAM.policy.p3) {
          var c$$442 = v3768._getBorders(v3769)
        }
        var v16119 = c$$442[0];
        var v10494 = -v16119;
        var v16120 = c$$442[1];
        var v10495 = -v16120;
        var v16121 = b$$545.dpDiv;
        introspect(JAM.policy.p3) {
          var v10496 = v16121.outerWidth()
        }
        var v16122 = b$$545.dpDiv;
        introspect(JAM.policy.p3) {
          var v10497 = v16122.outerHeight()
        }
        var v3770 = {left:v10494, top:v10495, width:v10496, height:v10497};
        introspect(JAM.policy.p3) {
          a$$575.css(v3770);
        }
      }
      return;
    }
    function v1615() {
      var v16123 = e$$291;
      introspect(JAM.policy.p3) {
        var v24658 = $$$3(this)
      }
      introspect(JAM.policy.p3) {
        var v21788 = v24658.css("position")
      }
      var v16124 = v21788 == "fixed";
      e$$291 = v16123 | v16124;
      return !e$$291;
    }
    var v10498 = a$$574.target;
    var v16125 = !v10498;
    if (v16125) {
      v10498 = a$$574;
    }
    a$$574 = v10498;
    var v21789 = a$$574.nodeName;
    introspect(JAM.policy.p3) {
      var v16126 = v21789.toLowerCase()
    }
    var v10499 = v16126 != "input";
    if (v10499) {
      var v21790 = a$$574.parentNode;
      introspect(JAM.policy.p3) {
        var v16127 = $$$3("input", v21790)
      }
      a$$574 = v16127[0];
    }
    var v16128 = $$$3.datepicker;
    introspect(JAM.policy.p3) {
      var v10500 = v16128._isDisabledDatepicker(a$$574)
    }
    var v16130 = !v10500;
    if (v16130) {
      var v21791 = $$$3.datepicker;
      var v16129 = v21791._lastInput;
      v10500 = v16129 == a$$574;
    }
    var v3772 = v10500;
    if (v3772) {
      return;
    }
    var v3773 = $$$3.datepicker;
    introspect(JAM.policy.p3) {
      var b$$545 = v3773._getInst(a$$574)
    }
    var v16131 = $$$3.datepicker;
    var v10501 = v16131._curInst;
    if (v10501) {
      var v21792 = $$$3.datepicker;
      var v16132 = v21792._curInst;
      v10501 = v16132 != b$$545;
    }
    var v3774 = v10501;
    if (v3774) {
      var v24659 = $$$3.datepicker;
      var v21793 = v24659._curInst;
      var v16133 = v21793.dpDiv;
      var v16134 = !0;
      var v16135 = !0;
      introspect(JAM.policy.p3) {
        v16133.stop(v16134, v16135);
      }
      var v21794 = b$$545;
      if (v21794) {
        var v24660 = $$$3.datepicker;
        v21794 = v24660._datepickerShowing;
      }
      var v16136 = v21794;
      if (v16136) {
        var v21795 = $$$3.datepicker;
        var v27994 = $$$3.datepicker;
        var v26603 = v27994._curInst;
        var v24661 = v26603.input;
        var v21796 = v24661[0];
        introspect(JAM.policy.p3) {
          v21795._hideDatepicker(v21796);
        }
      }
    }
    var v3775 = $$$3.datepicker;
    introspect(JAM.policy.p3) {
      var c$$441 = v3775._get(b$$545, "beforeShow")
    }
    var v3776;
    if (c$$441) {
      var v10502 = [a$$574, b$$545];
      introspect(JAM.policy.p3) {
        v3776 = c$$441.apply(a$$574, v10502);
      }
    } else {
      v3776 = {};
    }
    var d$$334 = v3776;
    var v10503 = !1;
    var v3777 = d$$334 === v10503;
    if (v3777) {
      return;
    }
    var v26604 = b$$545.settings;
    extendRemove(v26604, d$$334);
    b$$545.lastVal = null;
    var v24662 = $$$3.datepicker;
    v24662._lastInput = a$$574;
    var v21797 = $$$3.datepicker;
    introspect(JAM.policy.p3) {
      v21797._setDateFromField(b$$545);
    }
    var v21798 = $$$3.datepicker;
    var v16137 = v21798._inDialog;
    if (v16137) {
      a$$574.value = "";
    }
    var v16138 = $$$3.datepicker;
    var v10504 = v16138._pos;
    var v16139 = !v10504;
    if (v16139) {
      var v21799 = $$$3.datepicker;
      var v24663 = $$$3.datepicker;
      introspect(JAM.policy.p3) {
        var v31013 = v24663._findPos(a$$574)
      }
      v21799._pos = v31013;
      var v24664 = $$$3.datepicker;
      var v21800 = v24664._pos;
      var v26605 = v21800[1];
      var v26606 = a$$574.offsetHeight;
      v21800[1] = v26605 + v26606;
    }
    var e$$291 = !1;
    introspect(JAM.policy.p3) {
      var v16140 = $$$3(a$$574)
    }
    introspect(JAM.policy.p3) {
      var v10505 = v16140.parents()
    }
    introspect(JAM.policy.p3) {
      v10505.each(v1615);
    }
    var v16141 = e$$291;
    if (v16141) {
      var v21801 = $$$3.browser;
      v16141 = v21801.opera;
    }
    var v10506 = v16141;
    if (v10506) {
      var v24665 = $$$3.datepicker;
      var v21802 = v24665._pos;
      var v26607 = v21802[0];
      var v27995 = document.documentElement;
      var v26608 = v27995.scrollLeft;
      v21802[0] = v26607 - v26608;
      var v24666 = $$$3.datepicker;
      var v21803 = v24666._pos;
      var v26609 = v21803[1];
      var v27996 = document.documentElement;
      var v26610 = v27996.scrollTop;
      v21803[1] = v26609 - v26610;
    }
    var v16142 = $$$3.datepicker;
    var v10507 = v16142._pos;
    var v3778 = v10507[0];
    var v16143 = $$$3.datepicker;
    var v10508 = v16143._pos;
    var v3779 = v10508[1];
    var f$$140 = {left:v3778, top:v3779};
    var v26611 = $$$3.datepicker;
    v26611._pos = null;
    var v26612 = b$$545.dpDiv;
    introspect(JAM.policy.p3) {
      v26612.empty();
    }
    var v24667 = b$$545.dpDiv;
    var v24668 = {position:"absolute", display:"block", top:"-1000px"};
    introspect(JAM.policy.p3) {
      v24667.css(v24668);
    }
    var v21804 = $$$3.datepicker;
    introspect(JAM.policy.p3) {
      v21804._updateDatepicker(b$$545);
    }
    var v16144 = $$$3.datepicker;
    introspect(JAM.policy.p3) {
      f$$140 = v16144._checkOffset(b$$545, f$$140, e$$291);
    }
    var v10509 = b$$545.dpDiv;
    var v21805;
    var v27997 = $$$3.datepicker;
    var v26613 = v27997._inDialog;
    if (v26613) {
      v26613 = $$$3.blockUI;
    }
    var v24670 = v26613;
    if (v24670) {
      v21805 = "static";
    } else {
      var v24669;
      if (e$$291) {
        v24669 = "fixed";
      } else {
        v24669 = "absolute";
      }
      v21805 = v24669;
    }
    var v16145 = v21805;
    var v21806 = f$$140.left;
    var v16146 = v21806 + "px";
    var v21807 = f$$140.top;
    var v16147 = v21807 + "px";
    var v10510 = {position:v16145, display:"none", left:v16146, top:v16147};
    introspect(JAM.policy.p3) {
      v10509.css(v10510);
    }
    var v10511 = b$$545.inline;
    var v3782 = !v10511;
    if (v3782) {
      var v3780 = $$$3.datepicker;
      introspect(JAM.policy.p3) {
        var g$$164 = v3780._get(b$$545, "showAnim")
      }
      var v3781 = $$$3.datepicker;
      introspect(JAM.policy.p3) {
        var h$$134 = v3781._get(b$$545, "duration")
      }
      var i$$189 = v1616;
      var v26614 = b$$545.dpDiv;
      introspect(JAM.policy.p3) {
        var v28890 = $$$3(a$$574)
      }
      introspect(JAM.policy.p3) {
        var v27998 = v28890.zIndex()
      }
      var v26615 = v27998 + 1;
      introspect(JAM.policy.p3) {
        v26614.zIndex(v26615);
      }
      var v26616 = $$$3.datepicker;
      v26616._datepickerShowing = !0;
      var v24671;
      var v27999 = $$$3.effects;
      if (v27999) {
        var v28891 = $$$3.effects;
        v27999 = v28891[g$$164];
      }
      var v26622 = v27999;
      if (v26622) {
        var v26617 = b$$545.dpDiv;
        var v28000 = $$$3.datepicker;
        introspect(JAM.policy.p3) {
          var v26618 = v28000._get(b$$545, "showOptions")
        }
        introspect(JAM.policy.p3) {
          v24671 = v26617.show(g$$164, v26618, h$$134, i$$189);
        }
      } else {
        var v26619 = b$$545.dpDiv;
        var v26620 = g$$164 || "show";
        var v28001;
        if (g$$164) {
          v28001 = h$$134;
        } else {
          v28001 = null;
        }
        var v26621 = v28001;
        introspect(JAM.policy.p3) {
          v24671 = v26619[v26620](v26621, i$$189);
        }
      }
      v24671;
      var v24672 = !g$$164;
      var v26623 = !v24672;
      if (v26623) {
        v24672 = !h$$134;
      }
      var v21808 = v24672;
      if (v21808) {
        introspect(JAM.policy.p3) {
          i$$189();
        }
      }
      var v24673 = b$$545.input;
      introspect(JAM.policy.p3) {
        var v21809 = v24673.is(":visible")
      }
      if (v21809) {
        var v26624 = b$$545.input;
        introspect(JAM.policy.p3) {
          var v24674 = v26624.is(":disabled")
        }
        v21809 = !v24674;
      }
      var v16148 = v21809;
      if (v16148) {
        var v21810 = b$$545.input;
        introspect(JAM.policy.p3) {
          v21810.focus();
        }
      }
      var v10512 = $$$3.datepicker;
      v10512._curInst = b$$545;
    }
    return;
  }
  function v1614(a$$573) {
    var v3783 = $$$3.datepicker;
    var v3784 = a$$573.target;
    introspect(JAM.policy.p3) {
      var b$$544 = v3783._getInst(v3784)
    }
    var v16149 = b$$544.input;
    introspect(JAM.policy.p3) {
      var v10513 = v16149.val()
    }
    var v10514 = b$$544.lastVal;
    var v3790 = v10513 != v10514;
    if (v3790) {
      try {
        var v3785 = $$$3.datepicker;
        var v10515 = $$$3.datepicker;
        introspect(JAM.policy.p3) {
          var v3786 = v10515._get(b$$544, "dateFormat")
        }
        var v10516;
        var v16151 = b$$544.input;
        if (v16151) {
          var v16150 = b$$544.input;
          introspect(JAM.policy.p3) {
            v10516 = v16150.val();
          }
        } else {
          v10516 = null;
        }
        var v3787 = v10516;
        var v10517 = $$$3.datepicker;
        introspect(JAM.policy.p3) {
          var v3788 = v10517._getFormatConfig(b$$544)
        }
        introspect(JAM.policy.p3) {
          var c$$440 = v3785.parseDate(v3786, v3787, v3788)
        }
        if (c$$440) {
          var v21811 = $$$3.datepicker;
          introspect(JAM.policy.p3) {
            v21811._setDateFromField(b$$544);
          }
          var v21812 = $$$3.datepicker;
          introspect(JAM.policy.p3) {
            v21812._updateAlternate(b$$544);
          }
          var v16152 = $$$3.datepicker;
          introspect(JAM.policy.p3) {
            v16152._updateDatepicker(b$$544);
          }
        }
      } catch (d$$333) {
        var v3789 = $$$3.datepicker;
        introspect(JAM.policy.p3) {
          v3789.log(d$$333);
        }
      }
    }
    return !0;
  }
  function v1613(a$$572) {
    var v3791 = $$$3.datepicker;
    var v3792 = a$$572.target;
    introspect(JAM.policy.p3) {
      var b$$543 = v3791._getInst(v3792)
    }
    var v10518 = $$$3.datepicker;
    introspect(JAM.policy.p3) {
      var v3797 = v10518._get(b$$543, "constrainInput")
    }
    if (v3797) {
      var v3793 = $$$3.datepicker;
      var v10519 = $$$3.datepicker;
      introspect(JAM.policy.p3) {
        var v3794 = v10519._get(b$$543, "dateFormat")
      }
      introspect(JAM.policy.p3) {
        var c$$439 = v3793._possibleChars(v3794)
      }
      var v10520;
      var v21813 = a$$572.charCode;
      var v16153 = v21813 == undefined$$1;
      if (v16153) {
        v10520 = a$$572.keyCode;
      } else {
        v10520 = a$$572.charCode;
      }
      var v3795 = v10520;
      introspect(JAM.policy.p3) {
        var d$$332 = String.fromCharCode(v3795)
      }
      var v21814 = a$$572.ctrlKey;
      var v24675 = !v21814;
      if (v24675) {
        v21814 = a$$572.metaKey;
      }
      var v16154 = v21814;
      var v21815 = !v16154;
      if (v21815) {
        v16154 = d$$332 < " ";
      }
      var v10521 = v16154;
      var v16155 = !v10521;
      if (v16155) {
        v10521 = !c$$439;
      }
      var v3796 = v10521;
      var v10523 = !v3796;
      if (v10523) {
        introspect(JAM.policy.p3) {
          var v10522 = c$$439.indexOf(d$$332)
        }
        v3796 = v10522 > -1;
      }
      return v3796;
    }
    return;
  }
  function v1612(a$$571) {
    var v3798 = $$$3.datepicker;
    var v3799 = a$$571.target;
    introspect(JAM.policy.p3) {
      var b$$542 = v3798._getInst(v3799)
    }
    var c$$438 = !0;
    var v3800 = b$$542.dpDiv;
    introspect(JAM.policy.p3) {
      var d$$331 = v3800.is(".ui-datepicker-rtl")
    }
    b$$542._keyEvent = !0;
    var v10524 = $$$3.datepicker;
    var v3818 = v10524._datepickerShowing;
    if (v3818) {
      var v3816 = a$$571.keyCode;
      switch(v3816) {
        case 9:
          var v10525 = $$$3.datepicker;
          introspect(JAM.policy.p3) {
            v10525._hideDatepicker();
          }
          c$$438 = !1;
          break;
        case 13:
          var v26625 = $$$3.datepicker;
          var v24676 = v26625._dayOverClass;
          var v21816 = "td." + v24676;
          var v16156 = v21816 + ":not(.";
          var v21817 = $$$3.datepicker;
          var v16157 = v21817._currentClass;
          var v10526 = v16156 + v16157;
          var v3801 = v10526 + ")";
          var v3802 = b$$542.dpDiv;
          introspect(JAM.policy.p3) {
            var e$$290 = $$$3(v3801, v3802)
          }
          var v3803 = e$$290[0];
          if (v3803) {
            var v10527 = $$$3.datepicker;
            var v10528 = a$$571.target;
            var v10529 = b$$542.selectedMonth;
            var v10530 = b$$542.selectedYear;
            var v10531 = e$$290[0];
            introspect(JAM.policy.p3) {
              v10527._selectDay(v10528, v10529, v10530, v10531);
            }
          }
          var v3804 = $$$3.datepicker;
          introspect(JAM.policy.p3) {
            var f$$139 = v3804._get(b$$542, "onSelect")
          }
          if (f$$139) {
            var v3805 = $$$3.datepicker;
            introspect(JAM.policy.p3) {
              var g$$163 = v3805._formatDate(b$$542)
            }
            var v10532;
            var v16159 = b$$542.input;
            if (v16159) {
              var v16158 = b$$542.input;
              v10532 = v16158[0];
            } else {
              v10532 = null;
            }
            var v3806 = v10532;
            var v3807 = [g$$163, b$$542];
            introspect(JAM.policy.p3) {
              f$$139.apply(v3806, v3807);
            }
          } else {
            var v3808 = $$$3.datepicker;
            introspect(JAM.policy.p3) {
              v3808._hideDatepicker();
            }
          }
          return !1;
        case 27:
          var v3809 = $$$3.datepicker;
          introspect(JAM.policy.p3) {
            v3809._hideDatepicker();
          }
          break;
        case 33:
          var v3810 = $$$3.datepicker;
          var v3811 = a$$571.target;
          var v10533;
          var v16162 = a$$571.ctrlKey;
          if (v16162) {
            var v21818 = $$$3.datepicker;
            introspect(JAM.policy.p3) {
              var v16160 = v21818._get(b$$542, "stepBigMonths")
            }
            v10533 = -v16160;
          } else {
            var v21819 = $$$3.datepicker;
            introspect(JAM.policy.p3) {
              var v16161 = v21819._get(b$$542, "stepMonths")
            }
            v10533 = -v16161;
          }
          var v3812 = v10533;
          introspect(JAM.policy.p3) {
            v3810._adjustDate(v3811, v3812, "M");
          }
          break;
        case 34:
          var v3813 = $$$3.datepicker;
          var v3814 = a$$571.target;
          var v10534;
          var v16165 = a$$571.ctrlKey;
          if (v16165) {
            var v21820 = $$$3.datepicker;
            introspect(JAM.policy.p3) {
              var v16163 = v21820._get(b$$542, "stepBigMonths")
            }
            v10534 = +v16163;
          } else {
            var v21821 = $$$3.datepicker;
            introspect(JAM.policy.p3) {
              var v16164 = v21821._get(b$$542, "stepMonths")
            }
            v10534 = +v16164;
          }
          var v3815 = v10534;
          introspect(JAM.policy.p3) {
            v3813._adjustDate(v3814, v3815, "M");
          }
          break;
        case 35:
          var v16166 = a$$571.ctrlKey;
          var v21822 = !v16166;
          if (v21822) {
            v16166 = a$$571.metaKey;
          }
          var v10535 = v16166;
          if (v10535) {
            var v16167 = $$$3.datepicker;
            var v16168 = a$$571.target;
            introspect(JAM.policy.p3) {
              v16167._clearDate(v16168);
            }
          }
          var v10536 = a$$571.ctrlKey;
          var v16169 = !v10536;
          if (v16169) {
            v10536 = a$$571.metaKey;
          }
          c$$438 = v10536;
          break;
        case 36:
          var v16170 = a$$571.ctrlKey;
          var v21823 = !v16170;
          if (v21823) {
            v16170 = a$$571.metaKey;
          }
          var v10537 = v16170;
          if (v10537) {
            var v16171 = $$$3.datepicker;
            var v16172 = a$$571.target;
            introspect(JAM.policy.p3) {
              v16171._gotoToday(v16172);
            }
          }
          var v10538 = a$$571.ctrlKey;
          var v16173 = !v10538;
          if (v16173) {
            v10538 = a$$571.metaKey;
          }
          c$$438 = v10538;
          break;
        case 37:
          var v21824 = a$$571.ctrlKey;
          var v24677 = !v21824;
          if (v24677) {
            v21824 = a$$571.metaKey;
          }
          var v16174 = v21824;
          if (v16174) {
            var v21825 = $$$3.datepicker;
            var v21826 = a$$571.target;
            var v24678;
            if (d$$331) {
              v24678 = 1;
            } else {
              v24678 = -1;
            }
            var v21827 = v24678;
            introspect(JAM.policy.p3) {
              v21825._adjustDate(v21826, v21827, "D");
            }
          }
          var v16175 = a$$571.ctrlKey;
          var v21828 = !v16175;
          if (v21828) {
            v16175 = a$$571.metaKey;
          }
          c$$438 = v16175;
          var v16176 = a$$571.originalEvent;
          var v10539 = v16176.altKey;
          if (v10539) {
            var v16177 = $$$3.datepicker;
            var v16178 = a$$571.target;
            var v21829;
            var v24681 = a$$571.ctrlKey;
            if (v24681) {
              var v26626 = $$$3.datepicker;
              introspect(JAM.policy.p3) {
                var v24679 = v26626._get(b$$542, "stepBigMonths")
              }
              v21829 = -v24679;
            } else {
              var v26627 = $$$3.datepicker;
              introspect(JAM.policy.p3) {
                var v24680 = v26627._get(b$$542, "stepMonths")
              }
              v21829 = -v24680;
            }
            var v16179 = v21829;
            introspect(JAM.policy.p3) {
              v16177._adjustDate(v16178, v16179, "M");
            }
          }
          break;
        case 38:
          var v16180 = a$$571.ctrlKey;
          var v21830 = !v16180;
          if (v21830) {
            v16180 = a$$571.metaKey;
          }
          var v10540 = v16180;
          if (v10540) {
            var v16181 = $$$3.datepicker;
            var v16182 = a$$571.target;
            introspect(JAM.policy.p3) {
              v16181._adjustDate(v16182, -7, "D");
            }
          }
          var v10541 = a$$571.ctrlKey;
          var v16183 = !v10541;
          if (v16183) {
            v10541 = a$$571.metaKey;
          }
          c$$438 = v10541;
          break;
        case 39:
          var v21831 = a$$571.ctrlKey;
          var v24682 = !v21831;
          if (v24682) {
            v21831 = a$$571.metaKey;
          }
          var v16184 = v21831;
          if (v16184) {
            var v21832 = $$$3.datepicker;
            var v21833 = a$$571.target;
            var v24683;
            if (d$$331) {
              v24683 = -1;
            } else {
              v24683 = 1;
            }
            var v21834 = v24683;
            introspect(JAM.policy.p3) {
              v21832._adjustDate(v21833, v21834, "D");
            }
          }
          var v16185 = a$$571.ctrlKey;
          var v21835 = !v16185;
          if (v21835) {
            v16185 = a$$571.metaKey;
          }
          c$$438 = v16185;
          var v16186 = a$$571.originalEvent;
          var v10542 = v16186.altKey;
          if (v10542) {
            var v16187 = $$$3.datepicker;
            var v16188 = a$$571.target;
            var v21836;
            var v24686 = a$$571.ctrlKey;
            if (v24686) {
              var v26628 = $$$3.datepicker;
              introspect(JAM.policy.p3) {
                var v24684 = v26628._get(b$$542, "stepBigMonths")
              }
              v21836 = +v24684;
            } else {
              var v26629 = $$$3.datepicker;
              introspect(JAM.policy.p3) {
                var v24685 = v26629._get(b$$542, "stepMonths")
              }
              v21836 = +v24685;
            }
            var v16189 = v21836;
            introspect(JAM.policy.p3) {
              v16187._adjustDate(v16188, v16189, "M");
            }
          }
          break;
        case 40:
          var v16190 = a$$571.ctrlKey;
          var v21837 = !v16190;
          if (v21837) {
            v16190 = a$$571.metaKey;
          }
          var v10543 = v16190;
          if (v10543) {
            var v16191 = $$$3.datepicker;
            var v16192 = a$$571.target;
            introspect(JAM.policy.p3) {
              v16191._adjustDate(v16192, 7, "D");
            }
          }
          var v10544 = a$$571.ctrlKey;
          var v16193 = !v10544;
          if (v16193) {
            v10544 = a$$571.metaKey;
          }
          c$$438 = v10544;
          break;
        default:
          c$$438 = !1;
      }
    } else {
      var v3817;
      var v21838 = a$$571.keyCode;
      var v16194 = v21838 == 36;
      if (v16194) {
        v16194 = a$$571.ctrlKey;
      }
      var v10546 = v16194;
      if (v10546) {
        var v10545 = $$$3.datepicker;
        introspect(JAM.policy.p3) {
          v3817 = v10545._showDatepicker(this);
        }
      } else {
        v3817 = c$$438 = !1;
      }
      v3817;
    }
    if (c$$438) {
      introspect(JAM.policy.p3) {
        a$$571.preventDefault();
      }
      introspect(JAM.policy.p3) {
        a$$571.stopPropagation();
      }
    }
    return;
  }
  function v1611(a$$570, b$$541) {
    introspect(JAM.policy.p3) {
      var c$$437 = this._getInst(a$$570)
    }
    var v16195 = c$$437;
    if (v16195) {
      var v21839 = c$$437.inline;
      v16195 = !v21839;
    }
    var v10547 = v16195;
    if (v10547) {
      introspect(JAM.policy.p3) {
        this._setDateFromField(c$$437, b$$541);
      }
    }
    var v10548;
    if (c$$437) {
      introspect(JAM.policy.p3) {
        v10548 = this._getDate(c$$437);
      }
    } else {
      v10548 = null;
    }
    return v10548;
  }
  function v1610(a$$569, b$$540) {
    introspect(JAM.policy.p3) {
      var c$$436 = this._getInst(a$$569)
    }
    if (c$$436) {
      introspect(JAM.policy.p3) {
        this._setDate(c$$436, b$$540);
      }
      introspect(JAM.policy.p3) {
        this._updateDatepicker(c$$436);
      }
      introspect(JAM.policy.p3) {
        this._updateAlternate(c$$436);
      }
    }
    return;
  }
  function v1609(a$$568) {
    introspect(JAM.policy.p3) {
      var b$$539 = this._getInst(a$$568)
    }
    if (b$$539) {
      introspect(JAM.policy.p3) {
        this._updateDatepicker(b$$539);
      }
    }
    return;
  }
  function v1608(a$$567, b$$538, c$$435) {
    introspect(JAM.policy.p3) {
      this._optionDatepicker(a$$567, b$$538, c$$435);
    }
    return;
  }
  function v1607(a$$566, b$$537, c$$434) {
    introspect(JAM.policy.p3) {
      var d$$330 = this._getInst(a$$566)
    }
    var v16196 = arguments.length;
    var v10549 = v16196 == 2;
    if (v10549) {
      var v16197 = typeof b$$537;
      v10549 = v16197 == "string";
    }
    var v3820 = v10549;
    if (v3820) {
      var v3819;
      var v10552 = b$$537 == "defaults";
      if (v10552) {
        var v16198 = $$$3.datepicker;
        var v10550 = v16198._defaults;
        introspect(JAM.policy.p3) {
          v3819 = $$$3.extend({}, v10550);
        }
      } else {
        var v10551;
        if (d$$330) {
          var v16199;
          var v21841 = b$$537 == "all";
          if (v21841) {
            var v21840 = d$$330.settings;
            introspect(JAM.policy.p3) {
              v16199 = $$$3.extend({}, v21840);
            }
          } else {
            introspect(JAM.policy.p3) {
              v16199 = this._get(d$$330, b$$537);
            }
          }
          v10551 = v16199;
        } else {
          v10551 = null;
        }
        v3819 = v10551;
      }
      return v3819;
    }
    var e$$289 = b$$537 || {};
    var v10553 = typeof b$$537;
    var v3821 = v10553 == "string";
    if (v3821) {
      e$$289 = {};
      introspect(JAM.policy.p2) {
        e$$289[b$$537] = c$$434;
      }
    }
    if (d$$330) {
      var v10554 = this._curInst;
      var v3822 = v10554 == d$$330;
      if (v3822) {
        introspect(JAM.policy.p3) {
          this._hideDatepicker();
        }
      }
      var v3823 = !0;
      introspect(JAM.policy.p3) {
        var f$$138 = this._getDateDatepicker(a$$566, v3823)
      }
      introspect(JAM.policy.p3) {
        var g$$162 = this._getMinMaxDate(d$$330, "min")
      }
      introspect(JAM.policy.p3) {
        var h$$133 = this._getMinMaxDate(d$$330, "max")
      }
      var v28892 = d$$330.settings;
      extendRemove(v28892, e$$289);
      var v29843 = g$$162 !== null;
      if (v29843) {
        var v30103 = e$$289.dateFormat;
        v29843 = v30103 !== undefined$$1;
      }
      var v29489 = v29843;
      if (v29489) {
        var v29844 = e$$289.minDate;
        v29489 = v29844 === undefined$$1;
      }
      var v28893 = v29489;
      if (v28893) {
        var v29490 = d$$330.settings;
        introspect(JAM.policy.p3) {
          var v31014 = this._formatDate(d$$330, g$$162)
        }
        v29490.minDate = v31014;
      }
      var v29491 = h$$133 !== null;
      if (v29491) {
        var v29845 = e$$289.dateFormat;
        v29491 = v29845 !== undefined$$1;
      }
      var v28894 = v29491;
      if (v28894) {
        var v29492 = e$$289.maxDate;
        v28894 = v29492 === undefined$$1;
      }
      var v28002 = v28894;
      if (v28002) {
        var v28895 = d$$330.settings;
        introspect(JAM.policy.p3) {
          var v31015 = this._formatDate(d$$330, h$$133)
        }
        v28895.maxDate = v31015;
      }
      introspect(JAM.policy.p3) {
        var v26630 = $$$3(a$$566)
      }
      introspect(JAM.policy.p3) {
        this._attachments(v26630, d$$330);
      }
      introspect(JAM.policy.p3) {
        this._autoSize(d$$330);
      }
      introspect(JAM.policy.p3) {
        this._setDate(d$$330, f$$138);
      }
      introspect(JAM.policy.p3) {
        this._updateAlternate(d$$330);
      }
      introspect(JAM.policy.p3) {
        this._updateDatepicker(d$$330);
      }
    }
    return;
  }
  function v1606(a$$565) {
    try {
      introspect(JAM.policy.p3) {
        return $$$3.data(a$$565, PROP_NAME);
      }
    } catch (b$$536) {
      throw "Missing instance data for this datepicker";
    }
    return;
  }
  function v1605(a$$564) {
    var v3824 = !a$$564;
    if (v3824) {
      return !1;
    }
    var b$$535 = 0;
    var v16200 = this._disabledInputs;
    var v10555 = v16200.length;
    var v3826 = b$$535 < v10555;
    for (;v3826;) {
      var v16201 = this._disabledInputs;
      var v10556 = v16201[b$$535];
      var v3825 = v10556 == a$$564;
      if (v3825) {
        return !0;
      }
      b$$535++;
      var v16202 = this._disabledInputs;
      var v10557 = v16202.length;
      v3826 = b$$535 < v10557;
    }
    return !1;
  }
  function v1604(a$$563) {
    function v1603(b$$534) {
      var v3827;
      var v10558 = b$$534 == a$$563;
      if (v10558) {
        v3827 = null;
      } else {
        v3827 = b$$534;
      }
      return v3827;
    }
    function v1602() {
      this.disabled = !0;
      return;
    }
    introspect(JAM.policy.p3) {
      var b$$533 = $$$3(a$$563)
    }
    introspect(JAM.policy.p3) {
      var c$$433 = $$$3.data(a$$563, PROP_NAME)
    }
    var v16203 = this.markerClassName;
    introspect(JAM.policy.p3) {
      var v10559 = b$$533.hasClass(v16203)
    }
    var v3828 = !v10559;
    if (v3828) {
      return;
    }
    var v3829 = a$$563.nodeName;
    introspect(JAM.policy.p3) {
      var d$$329 = v3829.toLowerCase()
    }
    var v3832 = d$$329 == "input";
    if (v3832) {
      a$$563.disabled = !0;
      var v26631 = c$$433.trigger;
      introspect(JAM.policy.p3) {
        var v24687 = v26631.filter("button")
      }
      introspect(JAM.policy.p3) {
        var v21842 = v24687.each(v1602)
      }
      introspect(JAM.policy.p3) {
        var v16204 = v21842.end()
      }
      introspect(JAM.policy.p3) {
        var v10560 = v16204.filter("img")
      }
      var v10561 = {opacity:"0.5", cursor:"default"};
      introspect(JAM.policy.p3) {
        v10560.css(v10561);
      }
    } else {
      var v10562 = d$$329 == "div";
      var v16205 = !v10562;
      if (v16205) {
        v10562 = d$$329 == "span";
      }
      var v3831 = v10562;
      if (v3831) {
        var v10563 = this._inlineClass;
        var v3830 = "." + v10563;
        introspect(JAM.policy.p3) {
          var e$$288 = b$$533.children(v3830)
        }
        introspect(JAM.policy.p3) {
          var v10564 = e$$288.children()
        }
        introspect(JAM.policy.p3) {
          v10564.addClass("ui-state-disabled");
        }
        introspect(JAM.policy.p3) {
          var v10565 = e$$288.find("select.ui-datepicker-month, select.ui-datepicker-year")
        }
        introspect(JAM.policy.p3) {
          v10565.attr("disabled", "disabled");
        }
      }
    }
    var v10566 = this._disabledInputs;
    introspect(JAM.policy.p3) {
      var v31016 = $$$3.map(v10566, v1603)
    }
    this._disabledInputs = v31016;
    var v10567 = this._disabledInputs;
    var v16206 = this._disabledInputs;
    var v10568 = v16206.length;
    introspect(JAM.policy.p2) {
      v10567[v10568] = a$$563;
    }
    return;
  }
  function v1601(a$$562) {
    function v1600(b$$532) {
      var v3833;
      var v10569 = b$$532 == a$$562;
      if (v10569) {
        v3833 = null;
      } else {
        v3833 = b$$532;
      }
      return v3833;
    }
    function v1599() {
      this.disabled = !1;
      return;
    }
    introspect(JAM.policy.p3) {
      var b$$531 = $$$3(a$$562)
    }
    introspect(JAM.policy.p3) {
      var c$$432 = $$$3.data(a$$562, PROP_NAME)
    }
    var v16207 = this.markerClassName;
    introspect(JAM.policy.p3) {
      var v10570 = b$$531.hasClass(v16207)
    }
    var v3834 = !v10570;
    if (v3834) {
      return;
    }
    var v3835 = a$$562.nodeName;
    introspect(JAM.policy.p3) {
      var d$$328 = v3835.toLowerCase()
    }
    var v3838 = d$$328 == "input";
    if (v3838) {
      a$$562.disabled = !1;
      var v26632 = c$$432.trigger;
      introspect(JAM.policy.p3) {
        var v24688 = v26632.filter("button")
      }
      introspect(JAM.policy.p3) {
        var v21843 = v24688.each(v1599)
      }
      introspect(JAM.policy.p3) {
        var v16208 = v21843.end()
      }
      introspect(JAM.policy.p3) {
        var v10571 = v16208.filter("img")
      }
      var v10572 = {opacity:"1.0", cursor:""};
      introspect(JAM.policy.p3) {
        v10571.css(v10572);
      }
    } else {
      var v10573 = d$$328 == "div";
      var v16209 = !v10573;
      if (v16209) {
        v10573 = d$$328 == "span";
      }
      var v3837 = v10573;
      if (v3837) {
        var v10574 = this._inlineClass;
        var v3836 = "." + v10574;
        introspect(JAM.policy.p3) {
          var e$$287 = b$$531.children(v3836)
        }
        introspect(JAM.policy.p3) {
          var v10575 = e$$287.children()
        }
        introspect(JAM.policy.p3) {
          v10575.removeClass("ui-state-disabled");
        }
        introspect(JAM.policy.p3) {
          var v10576 = e$$287.find("select.ui-datepicker-month, select.ui-datepicker-year")
        }
        introspect(JAM.policy.p3) {
          v10576.removeAttr("disabled");
        }
      }
    }
    var v3839 = this._disabledInputs;
    introspect(JAM.policy.p3) {
      var v31017 = $$$3.map(v3839, v1600)
    }
    this._disabledInputs = v31017;
    return;
  }
  function v1598(a$$561) {
    introspect(JAM.policy.p3) {
      var b$$530 = $$$3(a$$561)
    }
    introspect(JAM.policy.p3) {
      var c$$431 = $$$3.data(a$$561, PROP_NAME)
    }
    var v16210 = this.markerClassName;
    introspect(JAM.policy.p3) {
      var v10577 = b$$530.hasClass(v16210)
    }
    var v3840 = !v10577;
    if (v3840) {
      return;
    }
    var v3841 = a$$561.nodeName;
    introspect(JAM.policy.p3) {
      var d$$327 = v3841.toLowerCase()
    }
    introspect(JAM.policy.p3) {
      $$$3.removeData(a$$561, PROP_NAME);
    }
    var v10578;
    var v16212 = d$$327 == "input";
    if (v16212) {
      var v24689 = c$$431.append;
      introspect(JAM.policy.p3) {
        v24689.remove();
      }
      var v24690 = c$$431.trigger;
      introspect(JAM.policy.p3) {
        v24690.remove();
      }
      var v28896 = this.markerClassName;
      introspect(JAM.policy.p3) {
        var v28003 = b$$530.removeClass(v28896)
      }
      var v28004 = this._showDatepicker;
      introspect(JAM.policy.p3) {
        var v26633 = v28003.unbind("focus", v28004)
      }
      var v26634 = this._doKeyDown;
      introspect(JAM.policy.p3) {
        var v24691 = v26633.unbind("keydown", v26634)
      }
      var v24692 = this._doKeyPress;
      introspect(JAM.policy.p3) {
        var v21844 = v24691.unbind("keypress", v24692)
      }
      var v21845 = this._doKeyUp;
      introspect(JAM.policy.p3) {
        v10578 = v21844.unbind("keyup", v21845);
      }
    } else {
      var v21846 = d$$327 == "div";
      var v24693 = !v21846;
      if (v24693) {
        v21846 = d$$327 == "span";
      }
      var v16211 = v21846;
      if (v16211) {
        var v24694 = this.markerClassName;
        introspect(JAM.policy.p3) {
          var v21847 = b$$530.removeClass(v24694)
        }
        introspect(JAM.policy.p3) {
          v16211 = v21847.empty();
        }
      }
      v10578 = v16211;
    }
    v10578;
    return;
  }
  function v1597(a$$560, b$$529, c$$430, d$$326, e$$286) {
    var f$$137 = this._dialogInst;
    var v3843 = !f$$137;
    if (v3843) {
      var v10579 = this.uuid;
      this.uuid = v10579 + 1;
      var v3842 = this.uuid;
      var g$$161 = "dp" + v3842;
      var v28005 = '<input type="text" id="' + g$$161;
      var v26635 = v28005 + '" style="position: absolute; top: -100px; width: 0px;"/>';
      introspect(JAM.policy.p3) {
        var v31018 = $$$3(v26635)
      }
      this._dialogInput = v31018;
      var v26636 = this._dialogInput;
      var v26637 = this._doKeyDown;
      introspect(JAM.policy.p3) {
        v26636.keydown(v26637);
      }
      introspect(JAM.policy.p3) {
        var v24695 = $$$3("body")
      }
      var v24696 = this._dialogInput;
      introspect(JAM.policy.p3) {
        v24695.append(v24696);
      }
      var v21848 = this._dialogInput;
      var v21849 = !1;
      introspect(JAM.policy.p3) {
        var v31019 = this._newInst(v21848, v21849)
      }
      f$$137 = this._dialogInst = v31019;
      f$$137.settings = {};
      var v16213 = this._dialogInput;
      var v10580 = v16213[0];
      introspect(JAM.policy.p3) {
        $$$3.data(v10580, PROP_NAME, f$$137);
      }
    }
    var v21850 = f$$137.settings;
    var v21851 = d$$326 || {};
    extendRemove(v21850, v21851);
    var v21852;
    var v26638 = b$$529;
    if (v26638) {
      var v28006 = b$$529.constructor;
      v26638 = v28006 == Date;
    }
    var v24697 = v26638;
    if (v24697) {
      introspect(JAM.policy.p3) {
        v21852 = this._formatDate(f$$137, b$$529);
      }
    } else {
      v21852 = b$$529;
    }
    b$$529 = v21852;
    var v16214 = this._dialogInput;
    introspect(JAM.policy.p3) {
      v16214.val(b$$529);
    }
    var v10581;
    if (e$$286) {
      var v16215;
      var v21855 = e$$286.length;
      if (v21855) {
        v16215 = e$$286;
      } else {
        var v21853 = e$$286.pageX;
        var v21854 = e$$286.pageY;
        v16215 = [v21853, v21854];
      }
      v10581 = v16215;
    } else {
      v10581 = null;
    }
    this._pos = v10581;
    var v10582 = this._pos;
    var v3850 = !v10582;
    if (v3850) {
      var v3844 = document.documentElement;
      var h$$132 = v3844.clientWidth;
      var v3845 = document.documentElement;
      var i$$188 = v3845.clientHeight;
      var v10583 = document.documentElement;
      var v3846 = v10583.scrollLeft;
      var v10585 = !v3846;
      if (v10585) {
        var v10584 = document.body;
        v3846 = v10584.scrollLeft;
      }
      var j$$96 = v3846;
      var v10586 = document.documentElement;
      var v3847 = v10586.scrollTop;
      var v10588 = !v3847;
      if (v10588) {
        var v10587 = document.body;
        v3847 = v10587.scrollTop;
      }
      var k$$65 = v3847;
      var v16216 = h$$132 / 2;
      var v10589 = v16216 - 100;
      var v3848 = v10589 + j$$96;
      var v16217 = i$$188 / 2;
      var v10590 = v16217 - 150;
      var v3849 = v10590 + k$$65;
      this._pos = [v3848, v3849];
    }
    var v29493 = this._dialogInput;
    var v30316 = this._pos;
    var v30104 = v30316[0];
    var v29846 = v30104 + 20;
    var v29494 = v29846 + "px";
    introspect(JAM.policy.p3) {
      var v28897 = v29493.css("left", v29494)
    }
    var v29847 = this._pos;
    var v29495 = v29847[1];
    var v28898 = v29495 + "px";
    introspect(JAM.policy.p3) {
      v28897.css("top", v28898);
    }
    var v28899 = f$$137.settings;
    v28899.onSelect = c$$430;
    this._inDialog = !0;
    var v26639 = this.dpDiv;
    var v26640 = this._dialogClass;
    introspect(JAM.policy.p3) {
      v26639.addClass(v26640);
    }
    var v26641 = this._dialogInput;
    var v24698 = v26641[0];
    introspect(JAM.policy.p3) {
      this._showDatepicker(v24698);
    }
    var v21856 = $$$3.blockUI;
    if (v21856) {
      var v24699 = this.dpDiv;
      introspect(JAM.policy.p3) {
        $$$3.blockUI(v24699);
      }
    }
    var v21857 = this._dialogInput;
    var v16218 = v21857[0];
    introspect(JAM.policy.p3) {
      $$$3.data(v16218, PROP_NAME, f$$137);
    }
    return this;
  }
  function v1596(a$$557, b$$528) {
    function v1595(a$$559, c$$429) {
      introspect(JAM.policy.p3) {
        return this._get(b$$528, c$$429);
      }
    }
    function v1594(a$$558, c$$428, d$$325) {
      var v3851 = b$$528.settings;
      introspect(JAM.policy.p2) {
        v3851[c$$428] = d$$325;
      }
      return;
    }
    introspect(JAM.policy.p3) {
      var c$$427 = $$$3(a$$557)
    }
    var v10591 = this.markerClassName;
    introspect(JAM.policy.p3) {
      var v3852 = c$$427.hasClass(v10591)
    }
    if (v3852) {
      return;
    }
    var v29848 = this.markerClassName;
    introspect(JAM.policy.p3) {
      var v29496 = c$$427.addClass(v29848)
    }
    var v29497 = b$$528.dpDiv;
    introspect(JAM.policy.p3) {
      var v28900 = v29496.append(v29497)
    }
    introspect(JAM.policy.p3) {
      var v28007 = v28900.bind("setData.datepicker", v1594)
    }
    introspect(JAM.policy.p3) {
      v28007.bind("getData.datepicker", v1595);
    }
    introspect(JAM.policy.p3) {
      $$$3.data(a$$557, PROP_NAME, b$$528);
    }
    introspect(JAM.policy.p3) {
      var v26642 = this._getDefaultDate(b$$528)
    }
    var v26643 = !0;
    introspect(JAM.policy.p3) {
      this._setDate(b$$528, v26642, v26643);
    }
    introspect(JAM.policy.p3) {
      this._updateDatepicker(b$$528);
    }
    introspect(JAM.policy.p3) {
      this._updateAlternate(b$$528);
    }
    var v21858 = b$$528.settings;
    var v16219 = v21858.disabled;
    if (v16219) {
      introspect(JAM.policy.p3) {
        this._disableDatepicker(a$$557);
      }
    }
    var v10592 = b$$528.dpDiv;
    introspect(JAM.policy.p3) {
      v10592.css("display", "block");
    }
    return;
  }
  function v1593(a$$555) {
    function v1592(a$$556) {
      var b$$527 = 0;
      var c$$426 = 0;
      var d$$324 = 0;
      var v10593 = a$$556.length;
      var v3854 = d$$324 < v10593;
      for (;v3854;) {
        var v16220 = a$$556[d$$324];
        var v10594 = v16220.length;
        var v3853 = v10594 > b$$527;
        if (v3853) {
          var v16221 = a$$556[d$$324];
          b$$527 = v16221.length;
          c$$426 = d$$324;
        }
        d$$324++;
        var v10595 = a$$556.length;
        v3854 = d$$324 < v10595;
      }
      return c$$426;
    }
    introspect(JAM.policy.p3) {
      var v10596 = this._get(a$$555, "autoSize")
    }
    if (v10596) {
      var v16222 = a$$555.inline;
      v10596 = !v16222;
    }
    var v3858 = v10596;
    if (v3858) {
      var b$$526 = new Date(2009, 11, 20);
      introspect(JAM.policy.p3) {
        var c$$425 = this._get(a$$555, "dateFormat")
      }
      introspect(JAM.policy.p3) {
        var v3855 = c$$425.match(/[DM]/)
      }
      if (v3855) {
        var d$$323 = v1592;
        var v24700;
        introspect(JAM.policy.p3) {
          var v26644 = c$$425.match(/MM/)
        }
        if (v26644) {
          v24700 = "monthNames";
        } else {
          v24700 = "monthNamesShort";
        }
        var v21859 = v24700;
        introspect(JAM.policy.p3) {
          var v16223 = this._get(a$$555, v21859)
        }
        introspect(JAM.policy.p3) {
          var v10597 = d$$323(v16223)
        }
        introspect(JAM.policy.p3) {
          b$$526.setMonth(v10597);
        }
        var v28008;
        introspect(JAM.policy.p3) {
          var v28901 = c$$425.match(/DD/)
        }
        if (v28901) {
          v28008 = "dayNames";
        } else {
          v28008 = "dayNamesShort";
        }
        var v26645 = v28008;
        introspect(JAM.policy.p3) {
          var v24701 = this._get(a$$555, v26645)
        }
        introspect(JAM.policy.p3) {
          var v21860 = d$$323(v24701)
        }
        var v16224 = v21860 + 20;
        introspect(JAM.policy.p3) {
          var v16225 = b$$526.getDay()
        }
        var v10598 = v16224 - v16225;
        introspect(JAM.policy.p3) {
          b$$526.setDate(v10598);
        }
      }
      var v3856 = a$$555.input;
      introspect(JAM.policy.p3) {
        var v10599 = this._formatDate(a$$555, b$$526)
      }
      var v3857 = v10599.length;
      introspect(JAM.policy.p3) {
        v3856.attr("size", v3857);
      }
    }
    return;
  }
  function v1591(a$$554, b$$525) {
    function v1590() {
      var v10600;
      var v24702 = $$$3.datepicker;
      var v21861 = v24702._datepickerShowing;
      if (v21861) {
        var v26646 = $$$3.datepicker;
        var v24703 = v26646._lastInput;
        var v24704 = a$$554[0];
        v21861 = v24703 == v24704;
      }
      var v16228 = v21861;
      if (v16228) {
        var v16226 = $$$3.datepicker;
        introspect(JAM.policy.p3) {
          v10600 = v16226._hideDatepicker();
        }
      } else {
        var v16227;
        var v26647 = $$$3.datepicker;
        var v24705 = v26647._datepickerShowing;
        if (v24705) {
          var v28009 = $$$3.datepicker;
          var v26648 = v28009._lastInput;
          var v26649 = a$$554[0];
          v24705 = v26648 != v26649;
        }
        var v21864 = v24705;
        if (v21864) {
          var v24706 = $$$3.datepicker;
          introspect(JAM.policy.p3) {
            v24706._hideDatepicker();
          }
          var v24707 = $$$3.datepicker;
          var v24708 = a$$554[0];
          introspect(JAM.policy.p3) {
            v16227 = v24707._showDatepicker(v24708);
          }
        } else {
          var v21862 = $$$3.datepicker;
          var v21863 = a$$554[0];
          introspect(JAM.policy.p3) {
            v16227 = v21862._showDatepicker(v21863);
          }
        }
        v10600 = v16227;
      }
      v10600;
      return !1;
    }
    introspect(JAM.policy.p3) {
      var c$$424 = this._get(b$$525, "appendText")
    }
    introspect(JAM.policy.p3) {
      var d$$322 = this._get(b$$525, "isRTL")
    }
    var v21865 = b$$525.append;
    if (v21865) {
      var v24709 = b$$525.append;
      introspect(JAM.policy.p3) {
        v24709.remove();
      }
    }
    if (c$$424) {
      var v26650 = b$$525;
      var v30105 = this._appendClass;
      var v29849 = '<span class="' + v30105;
      var v29498 = v29849 + '">';
      var v28902 = v29498 + c$$424;
      var v28010 = v28902 + "</span>";
      introspect(JAM.policy.p3) {
        var v31020 = $$$3(v28010)
      }
      v26650.append = v31020;
      var v28011;
      if (d$$322) {
        v28011 = "before";
      } else {
        v28011 = "after";
      }
      var v26651 = v28011;
      var v26652 = b$$525.append;
      introspect(JAM.policy.p3) {
        a$$554[v26651](v26652);
      }
    }
    var v16229 = this._showDatepicker;
    introspect(JAM.policy.p3) {
      a$$554.unbind("focus", v16229);
    }
    var v10601 = b$$525.trigger;
    if (v10601) {
      var v16230 = b$$525.trigger;
      introspect(JAM.policy.p3) {
        v16230.remove();
      }
    }
    introspect(JAM.policy.p3) {
      var e$$285 = this._get(b$$525, "showOn")
    }
    var v10602 = e$$285 == "focus";
    var v16231 = !v10602;
    if (v16231) {
      v10602 = e$$285 == "both";
    }
    var v3859 = v10602;
    if (v3859) {
      var v10603 = this._showDatepicker;
      introspect(JAM.policy.p3) {
        a$$554.focus(v10603);
      }
    }
    var v10604 = e$$285 == "button";
    var v16232 = !v10604;
    if (v16232) {
      v10604 = e$$285 == "both";
    }
    var v3860 = v10604;
    if (v3860) {
      introspect(JAM.policy.p3) {
        var f$$136 = this._get(b$$525, "buttonText")
      }
      introspect(JAM.policy.p3) {
        var g$$160 = this._get(b$$525, "buttonImage")
      }
      var v16233 = b$$525;
      var v24710;
      introspect(JAM.policy.p3) {
        var v26657 = this._get(b$$525, "buttonImageOnly")
      }
      if (v26657) {
        introspect(JAM.policy.p3) {
          var v28012 = $$$3("<img/>")
        }
        var v28013 = this._triggerClass;
        introspect(JAM.policy.p3) {
          var v26653 = v28012.addClass(v28013)
        }
        var v26654 = {src:g$$160, alt:f$$136, title:f$$136};
        introspect(JAM.policy.p3) {
          v24710 = v26653.attr(v26654);
        }
      } else {
        introspect(JAM.policy.p3) {
          var v28014 = $$$3('<button type="button"></button>')
        }
        var v28015 = this._triggerClass;
        introspect(JAM.policy.p3) {
          var v26655 = v28014.addClass(v28015)
        }
        var v28016;
        var v28905 = g$$160 == "";
        if (v28905) {
          v28016 = f$$136;
        } else {
          introspect(JAM.policy.p3) {
            var v28903 = $$$3("<img/>")
          }
          var v28904 = {src:g$$160, alt:f$$136, title:f$$136};
          introspect(JAM.policy.p3) {
            v28016 = v28903.attr(v28904);
          }
        }
        var v26656 = v28016;
        introspect(JAM.policy.p3) {
          v24710 = v26655.html(v26656);
        }
      }
      var v21866 = v24710;
      introspect(JAM.policy.p3) {
        var v31021 = $$$3(v21866)
      }
      v16233.trigger = v31021;
      var v21867;
      if (d$$322) {
        v21867 = "before";
      } else {
        v21867 = "after";
      }
      var v16234 = v21867;
      var v16235 = b$$525.trigger;
      introspect(JAM.policy.p3) {
        a$$554[v16234](v16235);
      }
      var v10605 = b$$525.trigger;
      introspect(JAM.policy.p3) {
        v10605.click(v1590);
      }
    }
    return;
  }
  function v1589(a$$551, b$$524) {
    function v1588(a$$553, c$$423) {
      introspect(JAM.policy.p3) {
        return this._get(b$$524, c$$423);
      }
    }
    function v1587(a$$552, c$$422, d$$321) {
      var v3861 = b$$524.settings;
      introspect(JAM.policy.p2) {
        v3861[c$$422] = d$$321;
      }
      return;
    }
    introspect(JAM.policy.p3) {
      var c$$421 = $$$3(a$$551)
    }
    var v10606 = b$$524;
    introspect(JAM.policy.p3) {
      var v31022 = $$$3([])
    }
    v10606.append = v31022;
    var v10607 = b$$524;
    introspect(JAM.policy.p3) {
      var v31023 = $$$3([])
    }
    v10607.trigger = v31023;
    var v10608 = this.markerClassName;
    introspect(JAM.policy.p3) {
      var v3862 = c$$421.hasClass(v10608)
    }
    if (v3862) {
      return;
    }
    introspect(JAM.policy.p3) {
      this._attachments(c$$421, b$$524);
    }
    var v29850 = this.markerClassName;
    introspect(JAM.policy.p3) {
      var v29499 = c$$421.addClass(v29850)
    }
    var v29500 = this._doKeyDown;
    introspect(JAM.policy.p3) {
      var v28906 = v29499.keydown(v29500)
    }
    var v28907 = this._doKeyPress;
    introspect(JAM.policy.p3) {
      var v28017 = v28906.keypress(v28907)
    }
    var v28018 = this._doKeyUp;
    introspect(JAM.policy.p3) {
      var v26658 = v28017.keyup(v28018)
    }
    introspect(JAM.policy.p3) {
      var v24711 = v26658.bind("setData.datepicker", v1587)
    }
    introspect(JAM.policy.p3) {
      v24711.bind("getData.datepicker", v1588);
    }
    introspect(JAM.policy.p3) {
      this._autoSize(b$$524);
    }
    introspect(JAM.policy.p3) {
      $$$3.data(a$$551, PROP_NAME, b$$524);
    }
    var v16236 = b$$524.settings;
    var v10609 = v16236.disabled;
    if (v10609) {
      introspect(JAM.policy.p3) {
        this._disableDatepicker(a$$551);
      }
    }
    return;
  }
  function v1586(a$$550, b$$523) {
    var v10610 = a$$550[0];
    var v3863 = v10610.id;
    introspect(JAM.policy.p3) {
      var c$$420 = v3863.replace(/([^A-Za-z0-9_-])/g, "\\\\$1")
    }
    var v10611;
    if (b$$523) {
      var v26659 = this._inlineClass;
      var v24712 = '<div class="' + v26659;
      var v21868 = v24712 + ' ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all"></div>';
      introspect(JAM.policy.p3) {
        var v16237 = $$$3(v21868)
      }
      v10611 = bindHover(v16237);
    } else {
      v10611 = this.dpDiv;
    }
    var v3864 = v10611;
    return {id:c$$420, input:a$$550, selectedDay:0, selectedMonth:0, selectedYear:0, drawMonth:0, drawYear:0, inline:b$$523, dpDiv:v3864};
  }
  function v1585(target$$27, settings) {
    var inlineSettings = null;
    var attrName;
    var v3866 = this._defaults;
    for (attrName in v3866) {
      var v3865 = "date:" + attrName;
      introspect(JAM.policy.p3) {
        var attrValue = target$$27.getAttribute(v3865)
      }
      if (attrValue) {
        inlineSettings = inlineSettings || {};
        try {
          var v31024 = eval(attrValue);
          introspect(JAM.policy.p2) {
            inlineSettings[attrName] = v31024;
          }
        } catch (err) {
          introspect(JAM.policy.p2) {
            inlineSettings[attrName] = attrValue;
          }
        }
      }
    }
    var v3867 = target$$27.nodeName;
    introspect(JAM.policy.p3) {
      var nodeName = v3867.toLowerCase()
    }
    var v3868 = nodeName == "div";
    var v10612 = !v3868;
    if (v10612) {
      v3868 = nodeName == "span";
    }
    var inline = v3868;
    var v3869 = target$$27.id;
    var v10613 = !v3869;
    if (v10613) {
      var v21869 = this.uuid;
      this.uuid = v21869 + 1;
      var v16238 = this.uuid;
      target$$27.id = "dp" + v16238;
    }
    introspect(JAM.policy.p3) {
      var v3870 = $$$3(target$$27)
    }
    introspect(JAM.policy.p3) {
      var inst = this._newInst(v3870, inline)
    }
    var v10614 = settings || {};
    var v10615 = inlineSettings || {};
    introspect(JAM.policy.p3) {
      var v31025 = $$$3.extend({}, v10614, v10615)
    }
    inst.settings = v31025;
    var v10616;
    var v16240 = nodeName == "input";
    if (v16240) {
      introspect(JAM.policy.p3) {
        v10616 = this._connectDatepicker(target$$27, inst);
      }
    } else {
      var v16239 = inline;
      if (v16239) {
        introspect(JAM.policy.p3) {
          v16239 = this._inlineDatepicker(target$$27, inst);
        }
      }
      v10616 = v16239;
    }
    v10616;
    return;
  }
  function v1584(a$$549) {
    var v10617 = this._defaults;
    var v10618 = a$$549 || {};
    extendRemove(v10617, v10618);
    return this;
  }
  function v1583() {
    return this.dpDiv;
  }
  function v1582() {
    var v3871 = this.debug;
    if (v3871) {
      var v10619 = console.log;
      introspect(JAM.policy.p3) {
        v10619.apply("", arguments);
      }
    }
    return;
  }
  function Datepicker() {
    this.debug = !1;
    this._curInst = null;
    this._keyEvent = !1;
    this._disabledInputs = [];
    this._datepickerShowing = !1;
    this._inDialog = !1;
    this._mainDivId = "ui-datepicker-div";
    this._inlineClass = "ui-datepicker-inline";
    this._appendClass = "ui-datepicker-append";
    this._triggerClass = "ui-datepicker-trigger";
    this._dialogClass = "ui-datepicker-dialog";
    this._disableClass = "ui-datepicker-disabled";
    this._unselectableClass = "ui-datepicker-unselectable";
    this._currentClass = "ui-datepicker-current-day";
    this._dayOverClass = "ui-datepicker-days-cell-over";
    this.regional = [];
    var v24713 = this.regional;
    var v26660 = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"];
    var v26661 = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
    var v26662 = ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"];
    var v26663 = ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"];
    var v26664 = ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"];
    var v26665 = !1;
    var v26666 = !1;
    v24713[""] = {closeText:"Done", prevText:"Prev", nextText:"Next", currentText:"Today", monthNames:v26660, monthNamesShort:v26661, dayNames:v26662, dayNamesShort:v26663, dayNamesMin:v26664, weekHeader:"Wk", dateFormat:"mm/dd/yy", firstDay:0, isRTL:v26665, showMonthAfterYear:v26666, yearSuffix:""};
    var v21870 = !1;
    var v21871 = !1;
    var v21872 = !1;
    var v21873 = !1;
    var v21874 = !1;
    var v21875 = !1;
    var v21876 = !1;
    var v21877 = !1;
    var v21878 = !1;
    var v21879 = this.iso8601Week;
    var v21880 = !0;
    var v21881 = !1;
    var v21882 = !1;
    var v21883 = !1;
    this._defaults = {showOn:"focus", showAnim:"fadeIn", showOptions:{}, defaultDate:null, appendText:"", buttonText:"...", buttonImage:"", buttonImageOnly:v21870, hideIfNoPrevNext:v21871, navigationAsDateFormat:v21872, gotoCurrent:v21873, changeMonth:v21874, changeYear:v21875, yearRange:"c-10:c+10", showOtherMonths:v21876, selectOtherMonths:v21877, showWeek:v21878, calculateWeek:v21879, shortYearCutoff:"+10", minDate:null, maxDate:null, duration:"fast", beforeShowDay:null, beforeShow:null, onSelect:null, 
    onChangeMonthYear:null, onClose:null, numberOfMonths:1, showCurrentAtPos:0, stepMonths:1, stepBigMonths:12, altField:"", altFormat:"", constrainInput:v21880, showButtonPanel:v21881, autoSize:v21882, disabled:v21883};
    var v16241 = this._defaults;
    var v21884 = this.regional;
    var v16242 = v21884[""];
    introspect(JAM.policy.p3) {
      $$$3.extend(v16241, v16242);
    }
    var v24714 = this._mainDivId;
    var v21885 = '<div id="' + v24714;
    var v16243 = v21885 + '" class="ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all"></div>';
    introspect(JAM.policy.p3) {
      var v10620 = $$$3(v16243)
    }
    var v31026 = bindHover(v10620);
    this.dpDiv = v31026;
    return;
  }
  function bindHover(a$$545) {
    function v1581(c$$418) {
      var v10621 = c$$418.target;
      introspect(JAM.policy.p3) {
        var v3872 = $$$3(v10621)
      }
      introspect(JAM.policy.p3) {
        var d$$320 = v3872.closest(b$$521)
      }
      var v16244 = $$$3.datepicker;
      var v21886;
      var v24717 = instActive.inline;
      if (v24717) {
        introspect(JAM.policy.p3) {
          var v24715 = a$$545.parent()
        }
        v21886 = v24715[0];
      } else {
        var v24716 = instActive.input;
        v21886 = v24716[0];
      }
      var v16245 = v21886;
      introspect(JAM.policy.p3) {
        var v10622 = v16244._isDisabledDatepicker(v16245)
      }
      var v16247 = !v10622;
      if (v16247) {
        var v16246 = d$$320.length;
        v10622 = !v16246;
      }
      var v3873 = v10622;
      if (v3873) {
        return;
      }
      introspect(JAM.policy.p3) {
        var v24718 = d$$320.parents(".ui-datepicker-calendar")
      }
      introspect(JAM.policy.p3) {
        var v21887 = v24718.find("a")
      }
      introspect(JAM.policy.p3) {
        v21887.removeClass("ui-state-hover");
      }
      introspect(JAM.policy.p3) {
        d$$320.addClass("ui-state-hover");
      }
      introspect(JAM.policy.p3) {
        var v16248 = d$$320.hasClass("ui-datepicker-prev")
      }
      if (v16248) {
        introspect(JAM.policy.p3) {
          d$$320.addClass("ui-datepicker-prev-hover");
        }
      }
      introspect(JAM.policy.p3) {
        var v10623 = d$$320.hasClass("ui-datepicker-next")
      }
      if (v10623) {
        introspect(JAM.policy.p3) {
          d$$320.addClass("ui-datepicker-next-hover");
        }
      }
      return;
    }
    function v1580(a$$546) {
      var v10624 = a$$546.target;
      introspect(JAM.policy.p3) {
        var v3874 = $$$3(v10624)
      }
      introspect(JAM.policy.p3) {
        var c$$417 = v3874.closest(b$$521)
      }
      var v10625 = c$$417.length;
      var v3875 = !v10625;
      if (v3875) {
        return;
      }
      introspect(JAM.policy.p3) {
        c$$417.removeClass("ui-state-hover ui-datepicker-prev-hover ui-datepicker-next-hover");
      }
      return;
    }
    var b$$521 = "button, .ui-datepicker-prev, .ui-datepicker-next, .ui-datepicker-calendar td a";
    introspect(JAM.policy.p3) {
      var v3876 = a$$545.bind("mouseout", v1580)
    }
    introspect(JAM.policy.p3) {
      return v3876.bind("mouseover", v1581);
    }
  }
  function extendRemove(a$$547, b$$522) {
    introspect(JAM.policy.p3) {
      $$$3.extend(a$$547, b$$522);
    }
    var c$$419;
    for (c$$419 in b$$522) {
      var v16249 = b$$522[c$$419];
      var v10626 = v16249 == null;
      var v16251 = !v10626;
      if (v16251) {
        var v16250 = b$$522[c$$419];
        v10626 = v16250 == undefined$$1;
      }
      var v3877 = v10626;
      if (v3877) {
        introspect(JAM.policy.p2) {
          a$$547[c$$419] = b$$522[c$$419];
        }
      }
    }
    return;
  }
  var v3878 = $$$3.ui;
  var v10627 = {version:"1.8.24"};
  var v3879 = {datepicker:v10627};
  introspect(JAM.policy.p3) {
    $$$3.extend(v3878, v3879);
  }
  var PROP_NAME = "datepicker";
  var v3880 = new Date;
  introspect(JAM.policy.p3) {
    var dpuuid = v3880.getTime()
  }
  var instActive;
  var v28019 = Datepicker.prototype;
  introspect(JAM.policy.p3) {
    var v30670 = Math.floor(492.5)
  }
  var v30590 = 718685 + v30670;
  introspect(JAM.policy.p3) {
    var v30591 = Math.floor(19.7)
  }
  var v30456 = v30590 - v30591;
  introspect(JAM.policy.p3) {
    var v30457 = Math.floor(4.925)
  }
  var v30317 = v30456 + v30457;
  var v30106 = v30317 * 24;
  var v29851 = v30106 * 60;
  var v29501 = v29851 * 60;
  var v28908 = v29501 * 1E7;
  var v28020 = {markerClassName:"hasDatepicker", maxRows:4, log:v1582, _widgetDatepicker:v1583, setDefaults:v1584, _attachDatepicker:v1585, _newInst:v1586, _connectDatepicker:v1589, _attachments:v1591, _autoSize:v1593, _inlineDatepicker:v1596, _dialogDatepicker:v1597, _destroyDatepicker:v1598, _enableDatepicker:v1601, _disableDatepicker:v1604, _isDisabledDatepicker:v1605, _getInst:v1606, _optionDatepicker:v1607, _changeDatepicker:v1608, _refreshDatepicker:v1609, _setDateDatepicker:v1610, _getDateDatepicker:v1611, 
  _doKeyDown:v1612, _doKeyPress:v1613, _doKeyUp:v1614, _showDatepicker:v1617, _updateDatepicker:v1619, _getBorders:v1620, _checkOffset:v1621, _findPos:v1622, _hideDatepicker:v1624, _tidyDialog:v1625, _checkExternalClick:v1626, _adjustDate:v1627, _gotoToday:v1628, _selectMonthYear:v1629, _selectDay:v1630, _clearDate:v1631, _selectDate:v1632, _updateAlternate:v1634, noWeekends:v1635, iso8601Week:v1636, parseDate:v1640, ATOM:"yy-mm-dd", COOKIE:"D, dd M yy", ISO_8601:"yy-mm-dd", RFC_822:"D, d M y", RFC_850:"DD, dd-M-y", 
  RFC_1036:"D, d M y", RFC_1123:"D, d M yy", RFC_2822:"D, d M yy", RSS:"D, d M y", TICKS:"!", TIMESTAMP:"@", W3C:"yy-mm-dd", _ticksTo1970:v28908, formatDate:v1641, _possibleChars:v1642, _get:v1643, _setDateFromField:v1644, _getDefaultDate:v1645, _determineDate:v1646, _daylightSavingAdjust:v1647, _setDate:v1648, _getDate:v1649, _attachHandlers:v1658, _generateHTML:v1659, _generateMonthYearHeader:v1661, _adjustInstDate:v1662, _restrictMinMax:v1663, _notifyChange:v1664, _getNumberOfMonths:v1665, _getMinMaxDate:v1666, 
  _getDaysInMonth:v1667, _getFirstDayOfMonth:v1668, _canAdjustMonth:v1669, _isInRange:v1670, _getFormatConfig:v1671, _formatDate:v1672};
  introspect(JAM.policy.p3) {
    $$$3.extend(v28019, v28020);
  }
  var v28021 = $$$3.fn;
  v28021.datepicker = v1674;
  var v26667 = $$$3;
  var v31027 = new Datepicker;
  v26667.datepicker = v31027;
  var v24719 = $$$3.datepicker;
  v24719.initialized = !1;
  var v21888 = $$$3.datepicker;
  var v24720 = new Date;
  introspect(JAM.policy.p3) {
    var v31028 = v24720.getTime()
  }
  v21888.uuid = v31028;
  var v16252 = $$$3.datepicker;
  v16252.version = "1.8.24";
  var v10628 = "DP_jQuery_" + dpuuid;
  introspect(JAM.policy.p2) {
    window[v10628] = $$$3;
  }
  return;
}
function v1579(a$$540, b$$509) {
  function v1578() {
    function v1577() {
      introspect(JAM.policy.p3) {
        var v10629 = a$$540(this)
      }
      introspect(JAM.policy.p3) {
        var v3881 = v10629.button("widget")
      }
      return v3881[0];
    }
    var v16253 = this.element;
    introspect(JAM.policy.p3) {
      v16253.removeClass("ui-buttonset");
    }
    var v26668 = this.buttons;
    introspect(JAM.policy.p3) {
      var v24721 = v26668.map(v1577)
    }
    introspect(JAM.policy.p3) {
      var v21889 = v24721.removeClass("ui-corner-left ui-corner-right")
    }
    introspect(JAM.policy.p3) {
      var v16254 = v21889.end()
    }
    introspect(JAM.policy.p3) {
      v16254.button("destroy");
    }
    var v21890 = a$$540.Widget;
    var v16255 = v21890.prototype;
    var v10630 = v16255.destroy;
    introspect(JAM.policy.p3) {
      v10630.call(this);
    }
    return;
  }
  function v1576() {
    function v1575() {
      introspect(JAM.policy.p3) {
        var v10631 = a$$540(this)
      }
      introspect(JAM.policy.p3) {
        var v3882 = v10631.button("widget")
      }
      return v3882[0];
    }
    var v10632 = this.element;
    introspect(JAM.policy.p3) {
      var v3883 = v10632.css("direction")
    }
    var b$$520 = v3883 === "rtl";
    var v30725 = this.element;
    var v30766 = this.options;
    var v30726 = v30766.items;
    introspect(JAM.policy.p3) {
      var v30671 = v30725.find(v30726)
    }
    introspect(JAM.policy.p3) {
      var v30592 = v30671.filter(":ui-button")
    }
    introspect(JAM.policy.p3) {
      var v30458 = v30592.button("refresh")
    }
    introspect(JAM.policy.p3) {
      var v30318 = v30458.end()
    }
    introspect(JAM.policy.p3) {
      var v30107 = v30318.not(":ui-button")
    }
    introspect(JAM.policy.p3) {
      var v29852 = v30107.button()
    }
    introspect(JAM.policy.p3) {
      var v29502 = v29852.end()
    }
    introspect(JAM.policy.p3) {
      var v28909 = v29502.map(v1575)
    }
    introspect(JAM.policy.p3) {
      var v28022 = v28909.removeClass("ui-corner-all ui-corner-left ui-corner-right")
    }
    introspect(JAM.policy.p3) {
      var v26669 = v28022.filter(":first")
    }
    var v28023;
    if (b$$520) {
      v28023 = "ui-corner-right";
    } else {
      v28023 = "ui-corner-left";
    }
    var v26670 = v28023;
    introspect(JAM.policy.p3) {
      var v24722 = v26669.addClass(v26670)
    }
    introspect(JAM.policy.p3) {
      var v21891 = v24722.end()
    }
    introspect(JAM.policy.p3) {
      var v16256 = v21891.filter(":last")
    }
    var v21892;
    if (b$$520) {
      v21892 = "ui-corner-left";
    } else {
      v21892 = "ui-corner-right";
    }
    var v16257 = v21892;
    introspect(JAM.policy.p3) {
      var v10633 = v16256.addClass(v16257)
    }
    introspect(JAM.policy.p3) {
      var v3884 = v10633.end()
    }
    introspect(JAM.policy.p3) {
      var v31029 = v3884.end()
    }
    this.buttons = v31029;
    return;
  }
  function v1574(b$$519, c$$416) {
    var v10634 = b$$519 === "disabled";
    if (v10634) {
      var v16258 = this.buttons;
      introspect(JAM.policy.p3) {
        v16258.button("option", b$$519, c$$416);
      }
    }
    var v21893 = a$$540.Widget;
    var v16259 = v21893.prototype;
    var v10635 = v16259._setOption;
    introspect(JAM.policy.p3) {
      v10635.apply(this, arguments);
    }
    return;
  }
  function v1573() {
    introspect(JAM.policy.p3) {
      this.refresh();
    }
    return;
  }
  function v1572() {
    var v3885 = this.element;
    introspect(JAM.policy.p3) {
      v3885.addClass("ui-buttonset");
    }
    return;
  }
  function v1571() {
    var v10636 = this.type;
    var v3887 = v10636 === "input";
    if (v3887) {
      var v10637 = this.options;
      var v3886 = v10637.label;
      if (v3886) {
        var v10638 = this.element;
        var v16260 = this.options;
        var v10639 = v16260.label;
        introspect(JAM.policy.p3) {
          v10638.val(v10639);
        }
      }
      return;
    }
    var v3888 = this.buttonElement;
    introspect(JAM.policy.p3) {
      var b$$518 = v3888.removeClass(i$$186)
    }
    var v28024 = this.element;
    var v26671 = v28024[0];
    var v24723 = v26671.ownerDocument;
    introspect(JAM.policy.p3) {
      var v21894 = a$$540("<span></span>", v24723)
    }
    introspect(JAM.policy.p3) {
      var v16261 = v21894.addClass("ui-button-text")
    }
    var v21895 = this.options;
    var v16262 = v21895.label;
    introspect(JAM.policy.p3) {
      var v10640 = v16261.html(v16262)
    }
    introspect(JAM.policy.p3) {
      var v10641 = b$$518.empty()
    }
    introspect(JAM.policy.p3) {
      var v3889 = v10640.appendTo(v10641)
    }
    introspect(JAM.policy.p3) {
      var c$$415 = v3889.text()
    }
    var v3890 = this.options;
    var d$$319 = v3890.icons;
    var v3891 = d$$319.primary;
    if (v3891) {
      v3891 = d$$319.secondary;
    }
    var e$$284 = v3891;
    var f$$135 = [];
    var v10642;
    var v21896 = d$$319.primary;
    var v24724 = !v21896;
    if (v24724) {
      v21896 = d$$319.secondary;
    }
    var v16263 = v21896;
    if (v16263) {
      var v28025 = this.options;
      var v26672 = v28025.text;
      if (v26672) {
        var v29503;
        if (e$$284) {
          v29503 = "s";
        } else {
          var v29853;
          var v30108 = d$$319.primary;
          if (v30108) {
            v29853 = "-primary";
          } else {
            v29853 = "-secondary";
          }
          v29503 = v29853;
        }
        var v28910 = v29503;
        var v28026 = "ui-button-text-icon" + v28910;
        introspect(JAM.policy.p3) {
          f$$135.push(v28026);
        }
      }
      var v26673 = d$$319.primary;
      if (v26673) {
        var v29504 = d$$319.primary;
        var v28911 = "<span class='ui-button-icon-primary ui-icon " + v29504;
        var v28027 = v28911 + "'></span>";
        introspect(JAM.policy.p3) {
          b$$518.prepend(v28027);
        }
      }
      var v24725 = d$$319.secondary;
      if (v24725) {
        var v28912 = d$$319.secondary;
        var v28028 = "<span class='ui-button-icon-secondary ui-icon " + v28912;
        var v26674 = v28028 + "'></span>";
        introspect(JAM.policy.p3) {
          b$$518.append(v26674);
        }
      }
      var v24726 = this.options;
      var v21897 = v24726.text;
      var v24727 = !v21897;
      if (v24727) {
        var v28029;
        if (e$$284) {
          v28029 = "ui-button-icons-only";
        } else {
          v28029 = "ui-button-icon-only";
        }
        var v26675 = v28029;
        introspect(JAM.policy.p3) {
          f$$135.push(v26675);
        }
        var v26676 = this.hasTitle;
        var v28030 = !v26676;
        if (v28030) {
          introspect(JAM.policy.p3) {
            v26676 = b$$518.attr("title", c$$415);
          }
        }
        v21897 = v26676;
      }
      v10642 = v21897;
    } else {
      introspect(JAM.policy.p3) {
        v10642 = f$$135.push("ui-button-text-only");
      }
    }
    v10642;
    introspect(JAM.policy.p3) {
      var v10643 = f$$135.join(" ")
    }
    introspect(JAM.policy.p3) {
      b$$518.addClass(v10643);
    }
    return;
  }
  function v1570() {
    function v1569() {
      var v3892;
      introspect(JAM.policy.p3) {
        var v16264 = a$$540(this)
      }
      introspect(JAM.policy.p3) {
        var v10646 = v16264.is(":checked")
      }
      if (v10646) {
        introspect(JAM.policy.p3) {
          var v21898 = a$$540(this)
        }
        introspect(JAM.policy.p3) {
          var v16265 = v21898.button("widget")
        }
        introspect(JAM.policy.p3) {
          var v10644 = v16265.addClass("ui-state-active")
        }
        introspect(JAM.policy.p3) {
          v3892 = v10644.attr("aria-pressed", "true");
        }
      } else {
        introspect(JAM.policy.p3) {
          var v21899 = a$$540(this)
        }
        introspect(JAM.policy.p3) {
          var v16266 = v21899.button("widget")
        }
        introspect(JAM.policy.p3) {
          var v10645 = v16266.removeClass("ui-state-active")
        }
        introspect(JAM.policy.p3) {
          v3892 = v10645.attr("aria-pressed", "false");
        }
      }
      v3892;
      return;
    }
    var v3893 = this.element;
    introspect(JAM.policy.p3) {
      var b$$517 = v3893.is(":disabled")
    }
    var v21900 = this.options;
    var v16267 = v21900.disabled;
    var v10647 = b$$517 !== v16267;
    if (v10647) {
      introspect(JAM.policy.p3) {
        this._setOption("disabled", b$$517);
      }
    }
    var v10648;
    var v21901 = this.type;
    var v16270 = v21901 === "radio";
    if (v16270) {
      var v24728 = this.element;
      var v21902 = v24728[0];
      var v16268 = k$$64(v21902);
      introspect(JAM.policy.p3) {
        v10648 = v16268.each(v1569);
      }
    } else {
      var v21903 = this.type;
      var v16269 = v21903 === "checkbox";
      if (v16269) {
        var v21904;
        var v26677 = this.element;
        introspect(JAM.policy.p3) {
          var v24731 = v26677.is(":checked")
        }
        if (v24731) {
          var v26678 = this.buttonElement;
          introspect(JAM.policy.p3) {
            var v24729 = v26678.addClass("ui-state-active")
          }
          introspect(JAM.policy.p3) {
            v21904 = v24729.attr("aria-pressed", "true");
          }
        } else {
          var v26679 = this.buttonElement;
          introspect(JAM.policy.p3) {
            var v24730 = v26679.removeClass("ui-state-active")
          }
          introspect(JAM.policy.p3) {
            v21904 = v24730.attr("aria-pressed", "false");
          }
        }
        v16269 = v21904;
      }
      v10648 = v16269;
    }
    v10648;
    return;
  }
  function v1568(b$$516, c$$414) {
    var v16271 = a$$540.Widget;
    var v10649 = v16271.prototype;
    var v3894 = v10649._setOption;
    introspect(JAM.policy.p3) {
      v3894.apply(this, arguments);
    }
    var v3896 = b$$516 === "disabled";
    if (v3896) {
      var v3895;
      if (c$$414) {
        var v10650 = this.element;
        var v10651 = !0;
        introspect(JAM.policy.p3) {
          v3895 = v10650.propAttr("disabled", v10651);
        }
      } else {
        var v10652 = this.element;
        var v10653 = !1;
        introspect(JAM.policy.p3) {
          v3895 = v10652.propAttr("disabled", v10653);
        }
      }
      v3895;
      return;
    }
    introspect(JAM.policy.p3) {
      this._resetButton();
    }
    return;
  }
  function v1567() {
    var v21905 = this.element;
    introspect(JAM.policy.p3) {
      v21905.removeClass("ui-helper-hidden-accessible");
    }
    var v28031 = this.buttonElement;
    var v29854 = g$$159 + " ";
    var v29505 = v29854 + h$$130;
    var v28913 = v29505 + " ";
    var v28032 = v28913 + i$$186;
    introspect(JAM.policy.p3) {
      var v26680 = v28031.removeClass(v28032)
    }
    introspect(JAM.policy.p3) {
      var v24732 = v26680.removeAttr("role")
    }
    introspect(JAM.policy.p3) {
      var v21906 = v24732.removeAttr("aria-pressed")
    }
    var v26681 = this.buttonElement;
    introspect(JAM.policy.p3) {
      var v24733 = v26681.find(".ui-button-text")
    }
    introspect(JAM.policy.p3) {
      var v21907 = v24733.html()
    }
    introspect(JAM.policy.p3) {
      v21906.html(v21907);
    }
    var v16272 = this.hasTitle;
    var v21909 = !v16272;
    if (v21909) {
      var v21908 = this.buttonElement;
      introspect(JAM.policy.p3) {
        v21908.removeAttr("title");
      }
    }
    var v21910 = a$$540.Widget;
    var v16273 = v21910.prototype;
    var v10654 = v16273.destroy;
    introspect(JAM.policy.p3) {
      v10654.call(this);
    }
    return;
  }
  function v1566() {
    return this.buttonElement;
  }
  function v1565() {
    var v3897;
    var v16274 = this.element;
    introspect(JAM.policy.p3) {
      var v10656 = v16274.is(":checkbox")
    }
    if (v10656) {
      v3897 = this.type = "checkbox";
    } else {
      var v10655;
      var v21911 = this.element;
      introspect(JAM.policy.p3) {
        var v16276 = v21911.is(":radio")
      }
      if (v16276) {
        v10655 = this.type = "radio";
      } else {
        var v16275;
        var v24734 = this.element;
        introspect(JAM.policy.p3) {
          var v21912 = v24734.is("input")
        }
        if (v21912) {
          v16275 = this.type = "input";
        } else {
          v16275 = this.type = "button";
        }
        v10655 = v16275;
      }
      v3897 = v10655;
    }
    v3897;
    var v16277 = this.type;
    var v10657 = v16277 === "checkbox";
    var v16279 = !v10657;
    if (v16279) {
      var v16278 = this.type;
      v10657 = v16278 === "radio";
    }
    var v3901 = v10657;
    if (v3901) {
      var v10658 = this.element;
      introspect(JAM.policy.p3) {
        var v3898 = v10658.parents()
      }
      introspect(JAM.policy.p3) {
        var a$$544 = v3898.filter(":last")
      }
      var v16280 = this.element;
      introspect(JAM.policy.p3) {
        var v10659 = v16280.attr("id")
      }
      var v3899 = "label[for='" + v10659;
      var b$$515 = v3899 + "']";
      introspect(JAM.policy.p3) {
        var v31030 = a$$544.find(b$$515)
      }
      this.buttonElement = v31030;
      var v21913 = this.buttonElement;
      var v16281 = v21913.length;
      var v21914 = !v16281;
      if (v21914) {
        var v26682;
        var v28034 = a$$544.length;
        if (v28034) {
          introspect(JAM.policy.p3) {
            v26682 = a$$544.siblings();
          }
        } else {
          var v28033 = this.element;
          introspect(JAM.policy.p3) {
            v26682 = v28033.siblings();
          }
        }
        a$$544 = v26682;
        introspect(JAM.policy.p3) {
          var v31031 = a$$544.filter(b$$515)
        }
        this.buttonElement = v31031;
        var v26683 = this.buttonElement;
        var v24735 = v26683.length;
        var v26684 = !v24735;
        if (v26684) {
          introspect(JAM.policy.p3) {
            var v31032 = a$$544.find(b$$515)
          }
          this.buttonElement = v31032;
        }
      }
      var v10660 = this.element;
      introspect(JAM.policy.p3) {
        v10660.addClass("ui-helper-hidden-accessible");
      }
      var v3900 = this.element;
      introspect(JAM.policy.p3) {
        var c$$413 = v3900.is(":checked")
      }
      if (c$$413) {
        var v16282 = this.buttonElement;
        introspect(JAM.policy.p3) {
          v16282.addClass("ui-state-active");
        }
      }
      var v10661 = this.buttonElement;
      introspect(JAM.policy.p3) {
        v10661.attr("aria-pressed", c$$413);
      }
    } else {
      this.buttonElement = this.element;
    }
    return;
  }
  function v1564() {
    function v1563(b$$514) {
      var v10662 = b$$514.keyCode;
      var v21915 = a$$540.ui;
      var v16283 = v21915.keyCode;
      var v10663 = v16283.SPACE;
      var v3902 = v10662 === v10663;
      if (v3902) {
        introspect(JAM.policy.p3) {
          var v10664 = a$$540(this)
        }
        introspect(JAM.policy.p3) {
          v10664.click();
        }
      }
      return;
    }
    function v1562() {
      introspect(JAM.policy.p3) {
        var v3903 = a$$540(this)
      }
      introspect(JAM.policy.p3) {
        v3903.removeClass("ui-state-active");
      }
      return;
    }
    function v1561(b$$513) {
      var v3904 = h$$131.disabled;
      if (v3904) {
        return !1;
      }
      var v16284 = b$$513.keyCode;
      var v24736 = a$$540.ui;
      var v21916 = v24736.keyCode;
      var v16285 = v21916.SPACE;
      var v10665 = v16284 == v16285;
      var v16288 = !v10665;
      if (v16288) {
        var v16286 = b$$513.keyCode;
        var v24737 = a$$540.ui;
        var v21917 = v24737.keyCode;
        var v16287 = v21917.ENTER;
        v10665 = v16286 == v16287;
      }
      var v3905 = v10665;
      if (v3905) {
        introspect(JAM.policy.p3) {
          var v10666 = a$$540(this)
        }
        introspect(JAM.policy.p3) {
          v10666.addClass("ui-state-active");
        }
      }
      return;
    }
    function v1560() {
      var v3906 = h$$131.disabled;
      if (v3906) {
        return !1;
      }
      introspect(JAM.policy.p3) {
        var v3907 = a$$540(this)
      }
      introspect(JAM.policy.p3) {
        v3907.removeClass("ui-state-active");
      }
      return;
    }
    function v1559() {
      function v1558() {
        c$$410 = null;
        return;
      }
      var v3908 = h$$131.disabled;
      if (v3908) {
        return !1;
      }
      introspect(JAM.policy.p3) {
        var v16289 = a$$540(this)
      }
      introspect(JAM.policy.p3) {
        v16289.addClass("ui-state-active");
      }
      c$$410 = this;
      introspect(JAM.policy.p3) {
        var v10667 = a$$540(document)
      }
      introspect(JAM.policy.p3) {
        v10667.one("mouseup", v1558);
      }
      return;
    }
    function v1557() {
      function v1556() {
        introspect(JAM.policy.p3) {
          var v10668 = a$$540(this)
        }
        introspect(JAM.policy.p3) {
          var v3909 = v10668.button("widget")
        }
        return v3909[0];
      }
      var v10669 = h$$131.disabled;
      var v16290 = !v10669;
      if (v16290) {
        v10669 = f$$134;
      }
      var v3910 = v10669;
      if (v3910) {
        return !1;
      }
      introspect(JAM.policy.p3) {
        var v10670 = a$$540(this)
      }
      introspect(JAM.policy.p3) {
        v10670.addClass("ui-state-active");
      }
      var v10671 = b$$512.buttonElement;
      introspect(JAM.policy.p3) {
        v10671.attr("aria-pressed", "true");
      }
      var v3911 = b$$512.element;
      var c$$412 = v3911[0];
      var v21918 = k$$64(c$$412);
      introspect(JAM.policy.p3) {
        var v16291 = v21918.not(c$$412)
      }
      introspect(JAM.policy.p3) {
        var v10672 = v16291.map(v1556)
      }
      introspect(JAM.policy.p3) {
        var v3912 = v10672.removeClass("ui-state-active")
      }
      introspect(JAM.policy.p3) {
        v3912.attr("aria-pressed", "false");
      }
      return;
    }
    function v1555() {
      var v10673 = h$$131.disabled;
      var v16292 = !v10673;
      if (v16292) {
        v10673 = f$$134;
      }
      var v3913 = v10673;
      if (v3913) {
        return !1;
      }
      introspect(JAM.policy.p3) {
        var v10674 = a$$540(this)
      }
      introspect(JAM.policy.p3) {
        v10674.toggleClass("ui-state-active");
      }
      var v10675 = b$$512.buttonElement;
      var v21919 = b$$512.element;
      var v16293 = v21919[0];
      var v10676 = v16293.checked;
      introspect(JAM.policy.p3) {
        v10675.attr("aria-pressed", v10676);
      }
      return;
    }
    function v1554(a$$543) {
      var v3914 = h$$131.disabled;
      if (v3914) {
        return;
      }
      var v16294 = a$$543.pageX;
      var v10677 = d$$317 !== v16294;
      var v16296 = !v10677;
      if (v16296) {
        var v16295 = a$$543.pageY;
        v10677 = e$$282 !== v16295;
      }
      var v3915 = v10677;
      if (v3915) {
        f$$134 = !0;
      }
      return;
    }
    function v1553(a$$542) {
      var v3916 = h$$131.disabled;
      if (v3916) {
        return;
      }
      f$$134 = !1;
      d$$317 = a$$542.pageX;
      e$$282 = a$$542.pageY;
      return;
    }
    function v1552() {
      if (f$$134) {
        return;
      }
      introspect(JAM.policy.p3) {
        b$$512.refresh();
      }
      return;
    }
    function v1551() {
      var v3917 = b$$512.buttonElement;
      introspect(JAM.policy.p3) {
        v3917.removeClass(m$$43);
      }
      return;
    }
    function v1550() {
      var v3918 = b$$512.buttonElement;
      introspect(JAM.policy.p3) {
        v3918.addClass(m$$43);
      }
      return;
    }
    function v1549(a$$541) {
      var v3919 = h$$131.disabled;
      if (v3919) {
        introspect(JAM.policy.p3) {
          a$$541.preventDefault();
        }
        introspect(JAM.policy.p3) {
          a$$541.stopImmediatePropagation();
        }
      }
      return;
    }
    function v1548() {
      var v3920 = h$$131.disabled;
      if (v3920) {
        return;
      }
      introspect(JAM.policy.p3) {
        var v3921 = a$$540(this)
      }
      introspect(JAM.policy.p3) {
        v3921.removeClass(l$$72);
      }
      return;
    }
    function v1547() {
      var v3922 = h$$131.disabled;
      if (v3922) {
        return;
      }
      introspect(JAM.policy.p3) {
        var v10678 = a$$540(this)
      }
      introspect(JAM.policy.p3) {
        v10678.addClass("ui-state-hover");
      }
      var v10679 = this === c$$410;
      if (v10679) {
        introspect(JAM.policy.p3) {
          var v16297 = a$$540(this)
        }
        introspect(JAM.policy.p3) {
          v16297.addClass("ui-state-active");
        }
      }
      return;
    }
    var v26685 = this.element;
    introspect(JAM.policy.p3) {
      var v24738 = v26685.closest("form")
    }
    introspect(JAM.policy.p3) {
      var v21920 = v24738.unbind("reset.button")
    }
    introspect(JAM.policy.p3) {
      v21920.bind("reset.button", j$$95);
    }
    var v21921;
    var v28914 = this.options;
    var v28035 = v28914.disabled;
    var v26686 = typeof v28035;
    var v24742 = v26686 != "boolean";
    if (v24742) {
      var v24739 = this.options;
      var v28915 = this.element;
      introspect(JAM.policy.p3) {
        var v28036 = v28915.propAttr("disabled")
      }
      var v26687 = !v28036;
      v21921 = v24739.disabled = !v26687;
    } else {
      var v24740 = this.element;
      var v26688 = this.options;
      var v24741 = v26688.disabled;
      introspect(JAM.policy.p3) {
        v21921 = v24740.propAttr("disabled", v24741);
      }
    }
    v21921;
    introspect(JAM.policy.p3) {
      this._determineButtonType();
    }
    var v21922 = this.buttonElement;
    introspect(JAM.policy.p3) {
      var v16298 = v21922.attr("title")
    }
    var v10680 = !v16298;
    this.hasTitle = !v10680;
    var b$$512 = this;
    var h$$131 = this.options;
    var v10681 = this.type;
    var v3923 = v10681 === "checkbox";
    var v10683 = !v3923;
    if (v10683) {
      var v10682 = this.type;
      v3923 = v10682 === "radio";
    }
    var i$$187 = v3923;
    var v10684;
    if (i$$187) {
      v10684 = "";
    } else {
      v10684 = " ui-state-active";
    }
    var v3924 = v10684;
    var l$$72 = "ui-state-hover" + v3924;
    var m$$43 = "ui-state-focus";
    var v28916 = h$$131.label;
    var v28037 = v28916 === null;
    if (v28037) {
      var v28917 = h$$131;
      var v29506 = this.buttonElement;
      introspect(JAM.policy.p3) {
        var v31033 = v29506.html()
      }
      v28917.label = v31033;
    }
    var v30109 = this.buttonElement;
    introspect(JAM.policy.p3) {
      var v29855 = v30109.addClass(g$$159)
    }
    introspect(JAM.policy.p3) {
      var v29507 = v29855.attr("role", "button")
    }
    introspect(JAM.policy.p3) {
      var v28918 = v29507.bind("mouseenter.button", v1547)
    }
    introspect(JAM.policy.p3) {
      var v28038 = v28918.bind("mouseleave.button", v1548)
    }
    introspect(JAM.policy.p3) {
      v28038.bind("click.button", v1549);
    }
    var v28039 = this.element;
    introspect(JAM.policy.p3) {
      var v26689 = v28039.bind("focus.button", v1550)
    }
    introspect(JAM.policy.p3) {
      v26689.bind("blur.button", v1551);
    }
    if (i$$187) {
      var v28040 = this.element;
      introspect(JAM.policy.p3) {
        v28040.bind("change.button", v1552);
      }
      var v28919 = this.buttonElement;
      introspect(JAM.policy.p3) {
        var v28041 = v28919.bind("mousedown.button", v1553)
      }
      introspect(JAM.policy.p3) {
        v28041.bind("mouseup.button", v1554);
      }
    }
    var v21923;
    var v26690 = this.type;
    var v24745 = v26690 === "checkbox";
    if (v24745) {
      var v24743 = this.buttonElement;
      introspect(JAM.policy.p3) {
        v21923 = v24743.bind("click.button", v1555);
      }
    } else {
      var v24744;
      var v28042 = this.type;
      var v26692 = v28042 === "radio";
      if (v26692) {
        var v26691 = this.buttonElement;
        introspect(JAM.policy.p3) {
          v24744 = v26691.bind("click.button", v1557);
        }
      } else {
        var v29856 = this.buttonElement;
        introspect(JAM.policy.p3) {
          var v29508 = v29856.bind("mousedown.button", v1559)
        }
        introspect(JAM.policy.p3) {
          var v28920 = v29508.bind("mouseup.button", v1560)
        }
        introspect(JAM.policy.p3) {
          var v28043 = v28920.bind("keydown.button", v1561)
        }
        introspect(JAM.policy.p3) {
          v28043.bind("keyup.button", v1562);
        }
        var v28921 = this.buttonElement;
        introspect(JAM.policy.p3) {
          var v28044 = v28921.is("a")
        }
        if (v28044) {
          var v28922 = this.buttonElement;
          introspect(JAM.policy.p3) {
            v28044 = v28922.keyup(v1563);
          }
        }
        v24744 = v28044;
      }
      v21923 = v24744;
    }
    v21923;
    var v16299 = h$$131.disabled;
    introspect(JAM.policy.p3) {
      this._setOption("disabled", v16299);
    }
    introspect(JAM.policy.p3) {
      this._resetButton();
    }
    return;
  }
  function k$$64(b$$511) {
    function v1545() {
      var v3925 = this.form;
      return !v3925;
    }
    var c$$411 = b$$511.name;
    var d$$318 = b$$511.form;
    introspect(JAM.policy.p3) {
      var e$$283 = a$$540([])
    }
    if (c$$411) {
      var v16300;
      if (d$$318) {
        introspect(JAM.policy.p3) {
          var v21924 = a$$540(d$$318)
        }
        var v24746 = "[name='" + c$$411;
        var v21925 = v24746 + "']";
        introspect(JAM.policy.p3) {
          v16300 = e$$283 = v21924.find(v21925);
        }
      } else {
        var v26693 = "[name='" + c$$411;
        var v24747 = v26693 + "']";
        var v24748 = b$$511.ownerDocument;
        introspect(JAM.policy.p3) {
          var v21926 = a$$540(v24747, v24748)
        }
        introspect(JAM.policy.p3) {
          v16300 = e$$283 = v21926.filter(v1545);
        }
      }
      v16300;
    }
    return e$$283;
  }
  function j$$95() {
    function v1546() {
      introspect(JAM.policy.p3) {
        b$$510.button("refresh");
      }
      return;
    }
    introspect(JAM.policy.p3) {
      var v3926 = a$$540(this)
    }
    introspect(JAM.policy.p3) {
      var b$$510 = v3926.find(":ui-button")
    }
    setTimeout(v1546, 1);
    return;
  }
  var c$$410;
  var d$$317;
  var e$$282;
  var f$$134;
  var g$$159 = "ui-button ui-widget ui-state-default ui-corner-all";
  var h$$130 = "ui-state-hover ui-state-active ";
  var i$$186 = "ui-button-icons-only ui-button-icon-only ui-button-text-icons ui-button-text-icon-primary ui-button-text-icon-secondary ui-button-text-only";
  var v21927 = !0;
  var v21928 = {primary:null, secondary:null};
  var v16301 = {disabled:null, text:v21927, label:null, icons:v21928};
  var v10685 = {options:v16301, _create:v1564, _determineButtonType:v1565, widget:v1566, destroy:v1567, _setOption:v1568, refresh:v1570, _resetButton:v1571};
  introspect(JAM.policy.p3) {
    a$$540.widget("ui.button", v10685);
  }
  var v16302 = {items:":button, :submit, :reset, :checkbox, :radio, a, :data(button)"};
  var v10686 = {options:v16302, _create:v1572, _init:v1573, _setOption:v1574, refresh:v1576, destroy:v1578};
  introspect(JAM.policy.p3) {
    a$$540.widget("ui.buttonset", v10686);
  }
  return;
}
function v1544(a$$534) {
  function v1543(a$$539) {
    var v10687 = this.active;
    var v3927 = {item:v10687};
    introspect(JAM.policy.p3) {
      this._trigger("selected", a$$539, v3927);
    }
    return;
  }
  function v1542() {
    var v10688 = this.element;
    introspect(JAM.policy.p3) {
      var v3928 = v10688.height()
    }
    var v10689 = this.element;
    var v16303;
    var v24749 = a$$534.fn;
    var v21929 = v24749.prop;
    if (v21929) {
      v16303 = "prop";
    } else {
      v16303 = "attr";
    }
    var v10690 = v16303;
    introspect(JAM.policy.p3) {
      var v3929 = v10689[v10690]("scrollHeight")
    }
    return v3928 < v3929;
  }
  function v1541(b$$507) {
    function v1540() {
      introspect(JAM.policy.p3) {
        var v24750 = a$$534(this)
      }
      introspect(JAM.policy.p3) {
        var v21930 = v24750.offset()
      }
      var v16304 = v21930.top;
      var v10691 = v16304 - c$$409;
      var v3930 = v10691 + d$$316;
      introspect(JAM.policy.p3) {
        var v10692 = a$$534(this)
      }
      introspect(JAM.policy.p3) {
        var v3931 = v10692.height()
      }
      var b$$508 = v3930 - v3931;
      var v3932 = b$$508 < 10;
      if (v3932) {
        v3932 = b$$508 > -10;
      }
      return v3932;
    }
    introspect(JAM.policy.p3) {
      var v3939 = this.hasScroll()
    }
    if (v3939) {
      var v16305 = this.active;
      var v10693 = !v16305;
      var v16306 = !v10693;
      if (v16306) {
        introspect(JAM.policy.p3) {
          v10693 = this.first();
        }
      }
      var v3934 = v10693;
      if (v3934) {
        var v10694 = this.element;
        introspect(JAM.policy.p3) {
          var v3933 = v10694.children(".ui-menu-item:last")
        }
        introspect(JAM.policy.p3) {
          this.activate(b$$507, v3933);
        }
        return;
      }
      var v10695 = this.active;
      introspect(JAM.policy.p3) {
        var v3935 = v10695.offset()
      }
      var c$$409 = v3935.top;
      var v3936 = this.element;
      introspect(JAM.policy.p3) {
        var d$$316 = v3936.height()
      }
      var v10696 = this.element;
      introspect(JAM.policy.p3) {
        var v3937 = v10696.children(".ui-menu-item")
      }
      introspect(JAM.policy.p3) {
        var e$$281 = v3937.filter(v1540)
      }
      var v10697 = e$$281.length;
      var v16308 = !v10697;
      if (v16308) {
        var v16307 = this.element;
        introspect(JAM.policy.p3) {
          e$$281 = v16307.children(".ui-menu-item:first");
        }
      }
      introspect(JAM.policy.p3) {
        this.activate(b$$507, e$$281);
      }
    } else {
      var v16309 = this.element;
      introspect(JAM.policy.p3) {
        var v10698 = v16309.children(".ui-menu-item")
      }
      var v16310;
      var v26694 = this.active;
      var v24751 = !v26694;
      var v26695 = !v24751;
      if (v26695) {
        introspect(JAM.policy.p3) {
          v24751 = this.first();
        }
      }
      var v21931 = v24751;
      if (v21931) {
        v16310 = ":last";
      } else {
        v16310 = ":first";
      }
      var v10699 = v16310;
      introspect(JAM.policy.p3) {
        var v3938 = v10698.filter(v10699)
      }
      introspect(JAM.policy.p3) {
        this.activate(b$$507, v3938);
      }
    }
    return;
  }
  function v1539(b$$505) {
    function v1538() {
      introspect(JAM.policy.p3) {
        var v24752 = a$$534(this)
      }
      introspect(JAM.policy.p3) {
        var v21932 = v24752.offset()
      }
      var v16311 = v21932.top;
      var v10700 = v16311 - c$$408;
      var v3940 = v10700 - d$$315;
      introspect(JAM.policy.p3) {
        var v10701 = a$$534(this)
      }
      introspect(JAM.policy.p3) {
        var v3941 = v10701.height()
      }
      var b$$506 = v3940 + v3941;
      var v3942 = b$$506 < 10;
      if (v3942) {
        v3942 = b$$506 > -10;
      }
      return v3942;
    }
    introspect(JAM.policy.p3) {
      var v3949 = this.hasScroll()
    }
    if (v3949) {
      var v16312 = this.active;
      var v10702 = !v16312;
      var v16313 = !v10702;
      if (v16313) {
        introspect(JAM.policy.p3) {
          v10702 = this.last();
        }
      }
      var v3944 = v10702;
      if (v3944) {
        var v10703 = this.element;
        introspect(JAM.policy.p3) {
          var v3943 = v10703.children(".ui-menu-item:first")
        }
        introspect(JAM.policy.p3) {
          this.activate(b$$505, v3943);
        }
        return;
      }
      var v10704 = this.active;
      introspect(JAM.policy.p3) {
        var v3945 = v10704.offset()
      }
      var c$$408 = v3945.top;
      var v3946 = this.element;
      introspect(JAM.policy.p3) {
        var d$$315 = v3946.height()
      }
      var v10705 = this.element;
      introspect(JAM.policy.p3) {
        var v3947 = v10705.children(".ui-menu-item")
      }
      introspect(JAM.policy.p3) {
        var e$$280 = v3947.filter(v1538)
      }
      var v10706 = e$$280.length;
      var v16315 = !v10706;
      if (v16315) {
        var v16314 = this.element;
        introspect(JAM.policy.p3) {
          e$$280 = v16314.children(".ui-menu-item:last");
        }
      }
      introspect(JAM.policy.p3) {
        this.activate(b$$505, e$$280);
      }
    } else {
      var v16316 = this.element;
      introspect(JAM.policy.p3) {
        var v10707 = v16316.children(".ui-menu-item")
      }
      var v16317;
      var v26696 = this.active;
      var v24753 = !v26696;
      var v26697 = !v24753;
      if (v26697) {
        introspect(JAM.policy.p3) {
          v24753 = this.last();
        }
      }
      var v21933 = v24753;
      if (v21933) {
        v16317 = ":first";
      } else {
        v16317 = ":last";
      }
      var v10708 = v16317;
      introspect(JAM.policy.p3) {
        var v3948 = v10707.filter(v10708)
      }
      introspect(JAM.policy.p3) {
        this.activate(b$$505, v3948);
      }
    }
    return;
  }
  function v1537(a$$538, b$$504, c$$407) {
    var v10709 = this.active;
    var v3951 = !v10709;
    if (v3951) {
      var v10710 = this.element;
      introspect(JAM.policy.p3) {
        var v3950 = v10710.children(b$$504)
      }
      introspect(JAM.policy.p3) {
        this.activate(c$$407, v3950);
      }
      return;
    }
    var v10711 = this.active;
    var v10712 = a$$538 + "All";
    introspect(JAM.policy.p3) {
      var v3952 = v10711[v10712](".ui-menu-item")
    }
    introspect(JAM.policy.p3) {
      var d$$314 = v3952.eq(0)
    }
    var v3953;
    var v10714 = d$$314.length;
    if (v10714) {
      introspect(JAM.policy.p3) {
        v3953 = this.activate(c$$407, d$$314);
      }
    } else {
      var v16318 = this.element;
      introspect(JAM.policy.p3) {
        var v10713 = v16318.children(b$$504)
      }
      introspect(JAM.policy.p3) {
        v3953 = this.activate(c$$407, v10713);
      }
    }
    v3953;
    return;
  }
  function v1536() {
    var v3954 = this.active;
    if (v3954) {
      var v21934 = this.active;
      introspect(JAM.policy.p3) {
        var v16319 = v21934.nextAll(".ui-menu-item")
      }
      var v10715 = v16319.length;
      v3954 = !v10715;
    }
    return v3954;
  }
  function v1535() {
    var v3955 = this.active;
    if (v3955) {
      var v21935 = this.active;
      introspect(JAM.policy.p3) {
        var v16320 = v21935.prevAll(".ui-menu-item")
      }
      var v10716 = v16320.length;
      v3955 = !v10716;
    }
    return v3955;
  }
  function v1534(a$$537) {
    introspect(JAM.policy.p3) {
      this.move("prev", ".ui-menu-item:last", a$$537);
    }
    return;
  }
  function v1533(a$$536) {
    introspect(JAM.policy.p3) {
      this.move("next", ".ui-menu-item:first", a$$536);
    }
    return;
  }
  function v1532() {
    var v10717 = this.active;
    var v3956 = !v10717;
    if (v3956) {
      return;
    }
    var v24754 = this.active;
    introspect(JAM.policy.p3) {
      var v21936 = v24754.children("a")
    }
    introspect(JAM.policy.p3) {
      var v16321 = v21936.removeClass("ui-state-hover")
    }
    introspect(JAM.policy.p3) {
      v16321.removeAttr("id");
    }
    introspect(JAM.policy.p3) {
      this._trigger("blur");
    }
    this.active = null;
    return;
  }
  function v1531(a$$535, b$$503) {
    introspect(JAM.policy.p3) {
      this.deactivate();
    }
    introspect(JAM.policy.p3) {
      var v3962 = this.hasScroll()
    }
    if (v3962) {
      introspect(JAM.policy.p3) {
        var v10718 = b$$503.offset()
      }
      var v3957 = v10718.top;
      var v16322 = this.element;
      introspect(JAM.policy.p3) {
        var v10719 = v16322.offset()
      }
      var v3958 = v10719.top;
      var c$$406 = v3957 - v3958;
      var v3959 = this.element;
      introspect(JAM.policy.p3) {
        var d$$313 = v3959.scrollTop()
      }
      var v3960 = this.element;
      introspect(JAM.policy.p3) {
        var e$$279 = v3960.height()
      }
      var v3961;
      var v10723 = c$$406 < 0;
      if (v10723) {
        var v10720 = this.element;
        var v10721 = d$$313 + c$$406;
        introspect(JAM.policy.p3) {
          v3961 = v10720.scrollTop(v10721);
        }
      } else {
        var v10722 = c$$406 >= e$$279;
        if (v10722) {
          var v16323 = this.element;
          var v24755 = d$$313 + c$$406;
          var v21937 = v24755 - e$$279;
          introspect(JAM.policy.p3) {
            var v21938 = b$$503.height()
          }
          var v16324 = v21937 + v21938;
          introspect(JAM.policy.p3) {
            v10722 = v16323.scrollTop(v16324);
          }
        }
        v3961 = v10722;
      }
      v3961;
    }
    introspect(JAM.policy.p3) {
      var v24756 = b$$503.eq(0)
    }
    introspect(JAM.policy.p3) {
      var v21939 = v24756.children("a")
    }
    introspect(JAM.policy.p3) {
      var v16325 = v21939.addClass("ui-state-hover")
    }
    introspect(JAM.policy.p3) {
      var v10724 = v16325.attr("id", "ui-active-menuitem")
    }
    introspect(JAM.policy.p3) {
      var v31034 = v10724.end()
    }
    this.active = v31034;
    var v10725 = {item:b$$503};
    introspect(JAM.policy.p3) {
      this._trigger("focus", a$$535, v10725);
    }
    return;
  }
  function v1530() {
    function v1529() {
      introspect(JAM.policy.p3) {
        b$$502.deactivate();
      }
      return;
    }
    function v1528(c$$405) {
      introspect(JAM.policy.p3) {
        var v10726 = a$$534(this)
      }
      introspect(JAM.policy.p3) {
        var v3963 = v10726.parent()
      }
      introspect(JAM.policy.p3) {
        b$$502.activate(c$$405, v3963);
      }
      return;
    }
    var b$$502 = this;
    var v16326 = this.element;
    introspect(JAM.policy.p3) {
      var v10727 = v16326.children("li:not(.ui-menu-item):has(a)")
    }
    introspect(JAM.policy.p3) {
      var v3964 = v10727.addClass("ui-menu-item")
    }
    introspect(JAM.policy.p3) {
      var c$$404 = v3964.attr("role", "menuitem")
    }
    introspect(JAM.policy.p3) {
      var v21940 = c$$404.children("a")
    }
    introspect(JAM.policy.p3) {
      var v16327 = v21940.addClass("ui-corner-all")
    }
    introspect(JAM.policy.p3) {
      var v10728 = v16327.attr("tabindex", -1)
    }
    introspect(JAM.policy.p3) {
      var v3965 = v10728.mouseenter(v1528)
    }
    introspect(JAM.policy.p3) {
      v3965.mouseleave(v1529);
    }
    return;
  }
  function v1527() {
    function v1526(c$$403) {
      var v24757 = c$$403.target;
      introspect(JAM.policy.p3) {
        var v21941 = a$$534(v24757)
      }
      introspect(JAM.policy.p3) {
        var v16328 = v21941.closest(".ui-menu-item a")
      }
      var v10729 = v16328.length;
      var v3966 = !v10729;
      if (v3966) {
        return;
      }
      introspect(JAM.policy.p3) {
        c$$403.preventDefault();
      }
      introspect(JAM.policy.p3) {
        b$$501.select(c$$403);
      }
      return;
    }
    var b$$501 = this;
    var v21942 = this.element;
    introspect(JAM.policy.p3) {
      var v16329 = v21942.addClass("ui-menu ui-widget ui-widget-content ui-corner-all")
    }
    var v16330 = {role:"listbox", "aria-activedescendant":"ui-active-menuitem"};
    introspect(JAM.policy.p3) {
      var v10730 = v16329.attr(v16330)
    }
    introspect(JAM.policy.p3) {
      v10730.click(v1526);
    }
    introspect(JAM.policy.p3) {
      this.refresh();
    }
    return;
  }
  var v3967 = {_create:v1527, refresh:v1530, activate:v1531, deactivate:v1532, next:v1533, previous:v1534, first:v1535, last:v1536, move:v1537, nextPage:v1539, previousPage:v1541, hasScroll:v1542, select:v1543};
  introspect(JAM.policy.p3) {
    a$$534.widget("ui.menu", v3967);
  }
  return;
}
function v1525(a$$515, b$$485) {
  function v1524(b$$500, c$$402) {
    function v1523(a$$533) {
      var v16331 = a$$533.label;
      var v21943 = !v16331;
      if (v21943) {
        v16331 = a$$533.value;
      }
      var v10731 = v16331;
      var v16332 = !v10731;
      if (v16332) {
        v10731 = a$$533;
      }
      var v3968 = v10731;
      introspect(JAM.policy.p3) {
        return d$$312.test(v3968);
      }
    }
    var v16333 = a$$515.ui;
    var v10732 = v16333.autocomplete;
    introspect(JAM.policy.p3) {
      var v3969 = v10732.escapeRegex(c$$402)
    }
    var d$$312 = new RegExp(v3969, "i");
    introspect(JAM.policy.p3) {
      return a$$515.grep(b$$500, v1523);
    }
  }
  function v1522(a$$532) {
    introspect(JAM.policy.p3) {
      return a$$532.replace(/[-[\]{}()*+?.,\\^$|#\s]/g, "\\$&");
    }
  }
  function v1521(a$$531, b$$499) {
    var v16334 = this.isMultiLine;
    var v10733 = !v16334;
    var v16336 = !v10733;
    if (v16336) {
      var v21944 = this.menu;
      var v16335 = v21944.element;
      introspect(JAM.policy.p3) {
        v10733 = v16335.is(":visible");
      }
    }
    var v3970 = v10733;
    if (v3970) {
      introspect(JAM.policy.p3) {
        this._move(a$$531, b$$499);
      }
      introspect(JAM.policy.p3) {
        b$$499.preventDefault();
      }
    }
    return;
  }
  function v1520() {
    var v3971 = this.menu;
    return v3971.element;
  }
  function v1519(a$$530, b$$498) {
    var v21945 = this.menu;
    var v16337 = v21945.element;
    introspect(JAM.policy.p3) {
      var v10734 = v16337.is(":visible")
    }
    var v3972 = !v10734;
    if (v3972) {
      introspect(JAM.policy.p3) {
        this.search(null, b$$498);
      }
      return;
    }
    var v21946 = this.menu;
    introspect(JAM.policy.p3) {
      var v16338 = v21946.first()
    }
    if (v16338) {
      introspect(JAM.policy.p3) {
        v16338 = /^previous/.test(a$$530);
      }
    }
    var v10735 = v16338;
    var v16340 = !v10735;
    if (v16340) {
      var v21947 = this.menu;
      introspect(JAM.policy.p3) {
        var v16339 = v21947.last()
      }
      if (v16339) {
        introspect(JAM.policy.p3) {
          v16339 = /^next/.test(a$$530);
        }
      }
      v10735 = v16339;
    }
    var v3973 = v10735;
    if (v3973) {
      var v10736 = this.element;
      var v10737 = this.term;
      introspect(JAM.policy.p3) {
        v10736.val(v10737);
      }
      var v10738 = this.menu;
      introspect(JAM.policy.p3) {
        v10738.deactivate();
      }
      return;
    }
    var v3974 = this.menu;
    introspect(JAM.policy.p3) {
      v3974[a$$530](b$$498);
    }
    return;
  }
  function v1518(b$$497, c$$401) {
    introspect(JAM.policy.p3) {
      var v16341 = a$$515("<li></li>")
    }
    introspect(JAM.policy.p3) {
      var v10739 = v16341.data("item.autocomplete", c$$401)
    }
    introspect(JAM.policy.p3) {
      var v16342 = a$$515("<a></a>")
    }
    var v16343 = c$$401.label;
    introspect(JAM.policy.p3) {
      var v10740 = v16342.text(v16343)
    }
    introspect(JAM.policy.p3) {
      var v3975 = v10739.append(v10740)
    }
    introspect(JAM.policy.p3) {
      return v3975.appendTo(b$$497);
    }
  }
  function v1517(b$$496, c$$399) {
    function v1516(a$$529, c$$400) {
      introspect(JAM.policy.p3) {
        d$$311._renderItem(b$$496, c$$400);
      }
      return;
    }
    var d$$311 = this;
    introspect(JAM.policy.p3) {
      a$$515.each(c$$399, v1516);
    }
    return;
  }
  function v1515() {
    var v3976 = this.menu;
    var a$$528 = v3976.element;
    introspect(JAM.policy.p3) {
      var v21948 = a$$528.width("")
    }
    introspect(JAM.policy.p3) {
      var v16344 = v21948.outerWidth()
    }
    var v10741 = v16344 + 1;
    var v16345 = this.element;
    introspect(JAM.policy.p3) {
      var v10742 = v16345.outerWidth()
    }
    introspect(JAM.policy.p3) {
      var v3977 = Math.max(v10741, v10742)
    }
    introspect(JAM.policy.p3) {
      a$$528.outerWidth(v3977);
    }
    return;
  }
  function v1514(b$$495) {
    var v16346 = this.menu;
    var v10743 = v16346.element;
    introspect(JAM.policy.p3) {
      var v3978 = v10743.empty()
    }
    var v16347 = this.element;
    introspect(JAM.policy.p3) {
      var v10744 = v16347.zIndex()
    }
    var v3979 = v10744 + 1;
    introspect(JAM.policy.p3) {
      var c$$398 = v3978.zIndex(v3979)
    }
    introspect(JAM.policy.p3) {
      this._renderMenu(c$$398, b$$495);
    }
    var v28045 = this.menu;
    introspect(JAM.policy.p3) {
      v28045.deactivate();
    }
    var v26698 = this.menu;
    introspect(JAM.policy.p3) {
      v26698.refresh();
    }
    introspect(JAM.policy.p3) {
      c$$398.show();
    }
    introspect(JAM.policy.p3) {
      this._resizeMenu();
    }
    var v24758 = this.element;
    var v21949 = {of:v24758};
    var v24759 = this.options;
    var v21950 = v24759.position;
    introspect(JAM.policy.p3) {
      var v16348 = a$$515.extend(v21949, v21950)
    }
    introspect(JAM.policy.p3) {
      c$$398.position(v16348);
    }
    var v16349 = this.options;
    var v10745 = v16349.autoFocus;
    if (v10745) {
      var v16350 = this.menu;
      var v21951 = a$$515.Event;
      var v16351 = new v21951("mouseover");
      introspect(JAM.policy.p3) {
        v16350.next(v16351);
      }
    }
    return;
  }
  function v1513(b$$493) {
    function v1512(b$$494) {
      var v3980;
      var v16352 = typeof b$$494;
      var v10747 = v16352 == "string";
      if (v10747) {
        v3980 = {label:b$$494, value:b$$494};
      } else {
        var v21952 = b$$494.label;
        var v24760 = !v21952;
        if (v24760) {
          v21952 = b$$494.value;
        }
        var v16353 = v21952;
        var v21953 = b$$494.value;
        var v24761 = !v21953;
        if (v24761) {
          v21953 = b$$494.label;
        }
        var v16354 = v21953;
        var v10746 = {label:v16353, value:v16354};
        introspect(JAM.policy.p3) {
          v3980 = a$$515.extend(v10746, b$$494);
        }
      }
      return v3980;
    }
    var v3981;
    var v21954 = b$$493.length;
    if (v21954) {
      var v24762 = b$$493[0];
      v21954 = v24762.label;
    }
    var v16355 = v21954;
    if (v16355) {
      var v21955 = b$$493[0];
      v16355 = v21955.value;
    }
    var v10748 = v16355;
    if (v10748) {
      v3981 = b$$493;
    } else {
      introspect(JAM.policy.p3) {
        v3981 = a$$515.map(b$$493, v1512);
      }
    }
    return v3981;
  }
  function v1511(a$$527) {
    var v10749 = this.previous;
    var v16356 = this.element;
    introspect(JAM.policy.p3) {
      var v10750 = v16356.val()
    }
    var v3982 = v10749 !== v10750;
    if (v3982) {
      var v16357 = this.selectedItem;
      var v10751 = {item:v16357};
      introspect(JAM.policy.p3) {
        this._trigger("change", a$$527, v10751);
      }
    }
    return;
  }
  function v1510(a$$526) {
    var v10752 = this.closing;
    clearTimeout(v10752);
    var v21956 = this.menu;
    var v16358 = v21956.element;
    introspect(JAM.policy.p3) {
      var v10753 = v16358.is(":visible")
    }
    if (v10753) {
      var v26699 = this.menu;
      var v24763 = v26699.element;
      introspect(JAM.policy.p3) {
        v24763.hide();
      }
      var v24764 = this.menu;
      introspect(JAM.policy.p3) {
        v24764.deactivate();
      }
      introspect(JAM.policy.p3) {
        this._trigger("close", a$$526);
      }
    }
    return;
  }
  function v1509(a$$525) {
    var v3983;
    var v26700 = this.options;
    var v24765 = v26700.disabled;
    var v21957 = !v24765;
    if (v21957) {
      v21957 = a$$525;
    }
    var v16359 = v21957;
    if (v16359) {
      v16359 = a$$525.length;
    }
    var v10754 = v16359;
    if (v10754) {
      introspect(JAM.policy.p3) {
        a$$525 = this._normalize(a$$525);
      }
      introspect(JAM.policy.p3) {
        this._suggest(a$$525);
      }
      introspect(JAM.policy.p3) {
        v3983 = this._trigger("open");
      }
    } else {
      introspect(JAM.policy.p3) {
        v3983 = this.close();
      }
    }
    v3983;
    return;
  }
  function v1508() {
    function v1507(d$$310) {
      var v16360 = b$$492 === c$$388;
      if (v16360) {
        introspect(JAM.policy.p3) {
          a$$524.__response(d$$310);
        }
      }
      a$$524.pending--;
      var v10755 = a$$524.pending;
      var v16362 = !v10755;
      if (v16362) {
        var v16361 = a$$524.element;
        introspect(JAM.policy.p3) {
          v16361.removeClass("ui-autocomplete-loading");
        }
      }
      return;
    }
    var a$$524 = this;
    var b$$492 = c$$388 = c$$388 + 1;
    return v1507;
  }
  function v1506(a$$523) {
    this.pending++;
    var v16363 = this.element;
    introspect(JAM.policy.p3) {
      v16363.addClass("ui-autocomplete-loading");
    }
    var v10756 = {term:a$$523};
    introspect(JAM.policy.p3) {
      var v10757 = this._response()
    }
    introspect(JAM.policy.p3) {
      this.source(v10756, v10757);
    }
    return;
  }
  function v1505(a$$522, b$$491) {
    var v10758;
    var v16365 = a$$522 != null;
    if (v16365) {
      v10758 = a$$522;
    } else {
      var v16364 = this.element;
      introspect(JAM.policy.p3) {
        v10758 = v16364.val();
      }
    }
    a$$522 = v10758;
    var v10759 = this.element;
    introspect(JAM.policy.p3) {
      var v31035 = v10759.val()
    }
    this.term = v31035;
    var v10760 = a$$522.length;
    var v16366 = this.options;
    var v10761 = v16366.minLength;
    var v3984 = v10760 < v10761;
    if (v3984) {
      introspect(JAM.policy.p3) {
        return this.close(b$$491);
      }
    }
    var v3985 = this.closing;
    clearTimeout(v3985);
    introspect(JAM.policy.p3) {
      var v10762 = this._trigger("search", b$$491)
    }
    var v10763 = !1;
    var v3986 = v10762 === v10763;
    if (v3986) {
      return;
    }
    introspect(JAM.policy.p3) {
      return this._search(a$$522);
    }
  }
  function v1504() {
    function v1503(c$$397, e$$278) {
      function v1502() {
        introspect(JAM.policy.p3) {
          e$$278([]);
        }
        return;
      }
      function v1501(a$$521, b$$490) {
        introspect(JAM.policy.p3) {
          e$$278(a$$521);
        }
        return;
      }
      var v10764 = b$$488.xhr;
      if (v10764) {
        var v16367 = b$$488.xhr;
        introspect(JAM.policy.p3) {
          v16367.abort();
        }
      }
      var v10765 = b$$488;
      var v16368 = {url:d$$308, data:c$$397, dataType:"json", success:v1501, error:v1502};
      introspect(JAM.policy.p3) {
        var v31036 = a$$515.ajax(v16368)
      }
      v10765.xhr = v31036;
      return;
    }
    function v1500(b$$489, d$$309) {
      var v16369 = a$$515.ui;
      var v10766 = v16369.autocomplete;
      var v10767 = b$$489.term;
      introspect(JAM.policy.p3) {
        var v3987 = v10766.filter(c$$396, v10767)
      }
      introspect(JAM.policy.p3) {
        d$$309(v3987);
      }
      return;
    }
    var b$$488 = this;
    var c$$396;
    var d$$308;
    var v3988;
    var v21958 = this.options;
    var v16370 = v21958.source;
    introspect(JAM.policy.p3) {
      var v10769 = a$$515.isArray(v16370)
    }
    if (v10769) {
      var v16371 = this.options;
      c$$396 = v16371.source;
      v3988 = this.source = v1500;
    } else {
      var v10768;
      var v26701 = this.options;
      var v24766 = v26701.source;
      var v21959 = typeof v24766;
      var v16373 = v21959 == "string";
      if (v16373) {
        var v21960 = this.options;
        d$$308 = v21960.source;
        v10768 = this.source = v1503;
      } else {
        var v16372 = this.options;
        v10768 = this.source = v16372.source;
      }
      v3988 = v10768;
    }
    v3988;
    return;
  }
  function v1499(b$$487, c$$395) {
    var v26702 = a$$515.Widget;
    var v24767 = v26702.prototype;
    var v21961 = v24767._setOption;
    introspect(JAM.policy.p3) {
      v21961.apply(this, arguments);
    }
    var v21962 = b$$487 === "source";
    if (v21962) {
      introspect(JAM.policy.p3) {
        this._initSource();
      }
    }
    var v16374 = b$$487 === "appendTo";
    if (v16374) {
      var v24768 = this.menu;
      var v21963 = v24768.element;
      var v26703 = c$$395 || "body";
      var v28923 = this.element;
      var v28046 = v28923[0];
      var v26704 = v28046.ownerDocument;
      introspect(JAM.policy.p3) {
        var v24769 = a$$515(v26703, v26704)
      }
      var v21964 = v24769[0];
      introspect(JAM.policy.p3) {
        v21963.appendTo(v21964);
      }
    }
    var v21965 = b$$487 === "disabled";
    if (v21965) {
      v21965 = c$$395;
    }
    var v16375 = v21965;
    if (v16375) {
      v16375 = this.xhr;
    }
    var v10770 = v16375;
    if (v10770) {
      var v16376 = this.xhr;
      introspect(JAM.policy.p3) {
        v16376.abort();
      }
    }
    return;
  }
  function v1498() {
    var v28924 = this.element;
    introspect(JAM.policy.p3) {
      var v28047 = v28924.removeClass("ui-autocomplete-input")
    }
    introspect(JAM.policy.p3) {
      var v26705 = v28047.removeAttr("autocomplete")
    }
    introspect(JAM.policy.p3) {
      var v24770 = v26705.removeAttr("role")
    }
    introspect(JAM.policy.p3) {
      var v21966 = v24770.removeAttr("aria-autocomplete")
    }
    introspect(JAM.policy.p3) {
      v21966.removeAttr("aria-haspopup");
    }
    var v24771 = this.menu;
    var v21967 = v24771.element;
    introspect(JAM.policy.p3) {
      v21967.remove();
    }
    introspect(JAM.policy.p3) {
      var v16377 = a$$515(window)
    }
    var v16378 = this.beforeunloadHandler;
    introspect(JAM.policy.p3) {
      v16377.unbind("beforeunload", v16378);
    }
    var v21968 = a$$515.Widget;
    var v16379 = v21968.prototype;
    var v10771 = v16379.destroy;
    introspect(JAM.policy.p3) {
      v10771.call(this);
    }
    return;
  }
  function v1497() {
    function v1496() {
      var v3989 = b$$486.element;
      introspect(JAM.policy.p3) {
        v3989.removeAttr("autocomplete");
      }
      return;
    }
    function v1495(a$$520, c$$394) {
      var v21969 = b$$486.menu;
      var v16380 = v21969.element;
      introspect(JAM.policy.p3) {
        var v10772 = v16380.is(":visible")
      }
      if (v10772) {
        var v21970 = b$$486.element;
        introspect(JAM.policy.p3) {
          var v16381 = v21970.val()
        }
        var v16382 = b$$486.term;
        v10772 = v16381 !== v16382;
      }
      var v3990 = v10772;
      if (v3990) {
        var v10773 = b$$486.element;
        var v10774 = b$$486.term;
        introspect(JAM.policy.p3) {
          v10773.val(v10774);
        }
      }
      return;
    }
    function v1494(a$$519, d$$307) {
      function v1493() {
        b$$486.previous = f$$133;
        b$$486.selectedItem = e$$277;
        return;
      }
      var v3991 = d$$307.item;
      introspect(JAM.policy.p3) {
        var e$$277 = v3991.data("item.autocomplete")
      }
      var f$$133 = b$$486.previous;
      var v28048 = b$$486.element;
      var v26706 = v28048[0];
      var v26707 = c$$389.activeElement;
      var v24772 = v26706 !== v26707;
      if (v24772) {
        var v28925 = b$$486.element;
        introspect(JAM.policy.p3) {
          v28925.focus();
        }
        b$$486.previous = f$$133;
        setTimeout(v1493, 1);
      }
      var v26708 = !1;
      var v28049 = {item:e$$277};
      introspect(JAM.policy.p3) {
        var v26709 = b$$486._trigger("select", a$$519, v28049)
      }
      var v24773 = v26708 !== v26709;
      if (v24773) {
        var v26710 = b$$486.element;
        var v26711 = e$$277.value;
        introspect(JAM.policy.p3) {
          v26710.val(v26711);
        }
      }
      var v21971 = b$$486;
      var v24774 = b$$486.element;
      introspect(JAM.policy.p3) {
        var v31037 = v24774.val()
      }
      v21971.term = v31037;
      introspect(JAM.policy.p3) {
        b$$486.close(a$$519);
      }
      b$$486.selectedItem = e$$277;
      return;
    }
    function v1492(a$$518, c$$393) {
      var v3992 = c$$393.item;
      introspect(JAM.policy.p3) {
        var d$$306 = v3992.data("item.autocomplete")
      }
      var v16383 = !1;
      var v21972 = {item:d$$306};
      introspect(JAM.policy.p3) {
        var v16384 = b$$486._trigger("focus", a$$518, v21972)
      }
      var v10775 = v16383 !== v16384;
      if (v10775) {
        var v21973 = a$$518.originalEvent;
        var v16385 = v21973.type;
        introspect(JAM.policy.p3) {
          v10775 = /^key/.test(v16385);
        }
      }
      var v3993 = v10775;
      if (v3993) {
        var v10776 = b$$486.element;
        var v10777 = d$$306.value;
        introspect(JAM.policy.p3) {
          v10776.val(v10777);
        }
      }
      return;
    }
    function v1491(c$$391) {
      function v1490() {
        var v3994 = b$$486.closing;
        clearTimeout(v3994);
        return;
      }
      function v1489() {
        function v1488(c$$392) {
          var v21974 = c$$392.target;
          var v24775 = b$$486.element;
          var v21975 = v24775[0];
          var v16386 = v21974 !== v21975;
          if (v16386) {
            var v21976 = c$$392.target;
            v16386 = v21976 !== d$$305;
          }
          var v10778 = v16386;
          if (v10778) {
            var v21977 = a$$515.ui;
            var v21978 = c$$392.target;
            introspect(JAM.policy.p3) {
              var v16387 = v21977.contains(d$$305, v21978)
            }
            v10778 = !v16387;
          }
          var v3995 = v10778;
          if (v3995) {
            introspect(JAM.policy.p3) {
              b$$486.close();
            }
          }
          return;
        }
        introspect(JAM.policy.p3) {
          var v3996 = a$$515(document)
        }
        introspect(JAM.policy.p3) {
          v3996.one("mousedown", v1488);
        }
        return;
      }
      var v10779 = b$$486.menu;
      var v3997 = v10779.element;
      var d$$305 = v3997[0];
      var v24776 = c$$391.target;
      introspect(JAM.policy.p3) {
        var v21979 = a$$515(v24776)
      }
      introspect(JAM.policy.p3) {
        var v16388 = v21979.closest(".ui-menu-item")
      }
      var v10780 = v16388.length;
      var v16389 = !v10780;
      if (v16389) {
        setTimeout(v1489, 1);
      }
      setTimeout(v1490, 13);
      return;
    }
    function v1487(a$$517) {
      function v1486() {
        introspect(JAM.policy.p3) {
          b$$486.close(a$$517);
        }
        introspect(JAM.policy.p3) {
          b$$486._change(a$$517);
        }
        return;
      }
      var v10781 = b$$486.options;
      var v3998 = v10781.disabled;
      if (v3998) {
        return;
      }
      var v10782 = b$$486.searching;
      clearTimeout(v10782);
      var v10783 = b$$486;
      var v31038 = setTimeout(v1486, 150);
      v10783.closing = v31038;
      return;
    }
    function v1485() {
      var v10784 = b$$486.options;
      var v3999 = v10784.disabled;
      if (v3999) {
        return;
      }
      b$$486.selectedItem = null;
      var v10785 = b$$486;
      var v16390 = b$$486.element;
      introspect(JAM.policy.p3) {
        var v31039 = v16390.val()
      }
      v10785.previous = v31039;
      return;
    }
    function v1484(a$$516) {
      if (d$$304) {
        d$$304 = !1;
        introspect(JAM.policy.p3) {
          a$$516.preventDefault();
        }
      }
      return;
    }
    function v1483(c$$390) {
      function v1482() {
        var v10786 = b$$486.term;
        var v16391 = b$$486.element;
        introspect(JAM.policy.p3) {
          var v10787 = v16391.val()
        }
        var v4000 = v10786 != v10787;
        if (v4000) {
          b$$486.selectedItem = null;
          introspect(JAM.policy.p3) {
            b$$486.search(null, c$$390);
          }
        }
        return;
      }
      var v16392 = b$$486.options;
      var v10788 = v16392.disabled;
      var v16394 = !v10788;
      if (v16394) {
        var v16393 = b$$486.element;
        introspect(JAM.policy.p3) {
          v10788 = v16393.propAttr("readOnly");
        }
      }
      var v4001 = v10788;
      if (v4001) {
        return;
      }
      d$$304 = !1;
      var v4002 = a$$515.ui;
      var e$$276 = v4002.keyCode;
      var v4006 = c$$390.keyCode;
      switch(v4006) {
        case e$$276.PAGE_UP:
          introspect(JAM.policy.p3) {
            b$$486._move("previousPage", c$$390);
          }
          break;
        case e$$276.PAGE_DOWN:
          introspect(JAM.policy.p3) {
            b$$486._move("nextPage", c$$390);
          }
          break;
        case e$$276.UP:
          introspect(JAM.policy.p3) {
            b$$486._keyEvent("previous", c$$390);
          }
          break;
        case e$$276.DOWN:
          introspect(JAM.policy.p3) {
            b$$486._keyEvent("next", c$$390);
          }
          break;
        case e$$276.ENTER:
        ;
        case e$$276.NUMPAD_ENTER:
          var v10789 = b$$486.menu;
          var v4003 = v10789.active;
          if (v4003) {
            d$$304 = !0;
            introspect(JAM.policy.p3) {
              c$$390.preventDefault();
            }
          }
        ;
        case e$$276.TAB:
          var v16395 = b$$486.menu;
          var v10790 = v16395.active;
          var v4004 = !v10790;
          if (v4004) {
            return;
          }
          var v4005 = b$$486.menu;
          introspect(JAM.policy.p3) {
            v4005.select(c$$390);
          }
          break;
        case e$$276.ESCAPE:
          var v10791 = b$$486.element;
          var v10792 = b$$486.term;
          introspect(JAM.policy.p3) {
            v10791.val(v10792);
          }
          introspect(JAM.policy.p3) {
            b$$486.close(c$$390);
          }
          break;
        default:
          var v10793 = b$$486.searching;
          clearTimeout(v10793);
          var v10794 = b$$486;
          var v21980 = b$$486.options;
          var v16396 = v21980.delay;
          var v31040 = setTimeout(v1482, v16396);
          v10794.searching = v31040;
      }
      return;
    }
    var b$$486 = this;
    var v10795 = this.element;
    var v4007 = v10795[0];
    var c$$389 = v4007.ownerDocument;
    var d$$304;
    var v28050 = this.element;
    introspect(JAM.policy.p3) {
      var v31041 = v28050.is("textarea")
    }
    this.isMultiLine = v31041;
    var v30459 = this.element;
    introspect(JAM.policy.p3) {
      var v30319 = v30459.addClass("ui-autocomplete-input")
    }
    introspect(JAM.policy.p3) {
      var v30110 = v30319.attr("autocomplete", "off")
    }
    var v30111 = {role:"textbox", "aria-autocomplete":"list", "aria-haspopup":"true"};
    introspect(JAM.policy.p3) {
      var v29857 = v30110.attr(v30111)
    }
    introspect(JAM.policy.p3) {
      var v29509 = v29857.bind("keydown.autocomplete", v1483)
    }
    introspect(JAM.policy.p3) {
      var v28926 = v29509.bind("keypress.autocomplete", v1484)
    }
    introspect(JAM.policy.p3) {
      var v28051 = v28926.bind("focus.autocomplete", v1485)
    }
    introspect(JAM.policy.p3) {
      v28051.bind("blur.autocomplete", v1487);
    }
    introspect(JAM.policy.p3) {
      this._initSource();
    }
    introspect(JAM.policy.p3) {
      var v30320 = a$$515("<ul></ul>")
    }
    introspect(JAM.policy.p3) {
      var v30112 = v30320.addClass("ui-autocomplete")
    }
    var v30672 = this.options;
    var v30593 = v30672.appendTo;
    var v30673 = !v30593;
    if (v30673) {
      v30593 = "body";
    }
    var v30460 = v30593;
    introspect(JAM.policy.p3) {
      var v30321 = a$$515(v30460, c$$389)
    }
    var v30113 = v30321[0];
    introspect(JAM.policy.p3) {
      var v29858 = v30112.appendTo(v30113)
    }
    introspect(JAM.policy.p3) {
      var v29510 = v29858.mousedown(v1491)
    }
    var v29511 = {focus:v1492, selected:v1494, blur:v1495};
    introspect(JAM.policy.p3) {
      var v28927 = v29510.menu(v29511)
    }
    var v29859 = this.element;
    introspect(JAM.policy.p3) {
      var v29512 = v29859.zIndex()
    }
    var v28928 = v29512 + 1;
    introspect(JAM.policy.p3) {
      var v28052 = v28927.zIndex(v28928)
    }
    var v28053 = {top:0, left:0};
    introspect(JAM.policy.p3) {
      var v26712 = v28052.css(v28053)
    }
    introspect(JAM.policy.p3) {
      var v24777 = v26712.hide()
    }
    introspect(JAM.policy.p3) {
      var v31042 = v24777.data("menu")
    }
    this.menu = v31042;
    var v24778 = a$$515.fn;
    var v21981 = v24778.bgiframe;
    if (v21981) {
      var v26713 = this.menu;
      var v24779 = v26713.element;
      introspect(JAM.policy.p3) {
        v24779.bgiframe();
      }
    }
    b$$486.beforeunloadHandler = v1496;
    introspect(JAM.policy.p3) {
      var v10796 = a$$515(window)
    }
    var v10797 = b$$486.beforeunloadHandler;
    introspect(JAM.policy.p3) {
      v10796.bind("beforeunload", v10797);
    }
    return;
  }
  var c$$388 = 0;
  var v21982 = !1;
  var v21983 = {my:"left top", at:"left bottom", collision:"none"};
  var v16397 = {appendTo:"body", autoFocus:v21982, delay:300, minLength:1, position:v21983, source:null};
  var v10798 = {options:v16397, pending:0, _create:v1497, destroy:v1498, _setOption:v1499, _initSource:v1504, search:v1505, _search:v1506, _response:v1508, __response:v1509, close:v1510, _change:v1511, _normalize:v1513, _suggest:v1514, _resizeMenu:v1515, _renderMenu:v1517, _renderItem:v1518, _move:v1519, widget:v1520, _keyEvent:v1521};
  introspect(JAM.policy.p3) {
    a$$515.widget("ui.autocomplete", v10798);
  }
  var v16398 = a$$515.ui;
  var v10799 = v16398.autocomplete;
  var v10800 = {escapeRegex:v1522, filter:v1524};
  introspect(JAM.policy.p3) {
    a$$515.extend(v10799, v10800);
  }
  return;
}
function v1481(a$$507, b$$473) {
  function v1480(a$$514) {
    var v16399;
    var v21984 = a$$514.down;
    if (v21984) {
      v16399 = "easeOutBounce";
    } else {
      v16399 = "swing";
    }
    var v10801 = v16399;
    var v16400;
    var v21985 = a$$514.down;
    if (v21985) {
      v16400 = 1E3;
    } else {
      v16400 = 200;
    }
    var v10802 = v16400;
    var v4008 = {easing:v10801, duration:v10802};
    introspect(JAM.policy.p3) {
      this.slide(a$$514, v4008);
    }
    return;
  }
  function v1479(b$$484, c$$385) {
    function v1478() {
      var v16401 = b$$484.autoHeight;
      var v21987 = !v16401;
      if (v21987) {
        var v21986 = b$$484.toShow;
        introspect(JAM.policy.p3) {
          v21986.css("height", "");
        }
      }
      var v16402 = b$$484.toShow;
      var v16403 = {width:i$$185, overflow:d$$302};
      introspect(JAM.policy.p3) {
        v16402.css(v16403);
      }
      introspect(JAM.policy.p3) {
        b$$484.complete();
      }
      return;
    }
    function v1477(a$$513, c$$387) {
      var v16404 = c$$387.prop;
      var v10803 = v16404 == "height";
      if (v10803) {
        var v16405;
        var v26714 = c$$387.end;
        var v26715 = c$$387.start;
        var v24780 = v26714 - v26715;
        var v21990 = v24780 === 0;
        if (v21990) {
          v16405 = 0;
        } else {
          var v24781 = c$$387.now;
          var v24782 = c$$387.start;
          var v21988 = v24781 - v24782;
          var v24783 = c$$387.end;
          var v24784 = c$$387.start;
          var v21989 = v24783 - v24784;
          v16405 = v21988 / v21989;
        }
        e$$274 = v16405;
      }
      var v21991 = b$$484.toShow;
      var v16406 = v21991[0];
      var v10804 = v16406.style;
      var v10805 = c$$387.prop;
      var v26716 = c$$387.prop;
      var v24785 = f$$132[v26716];
      var v21992 = v24785.value;
      var v16407 = e$$274 * v21992;
      var v24786 = c$$387.prop;
      var v21993 = f$$132[v24786];
      var v16408 = v21993.unit;
      introspect(JAM.policy.p2) {
        v10804[v10805] = v16407 + v16408;
      }
      return;
    }
    function v1476(c$$386, d$$303) {
      introspect(JAM.policy.p2) {
        g$$158[d$$303] = "hide";
      }
      var v21994 = b$$484.toShow;
      var v16409 = v21994[0];
      introspect(JAM.policy.p3) {
        var v10806 = a$$507.css(v16409, d$$303)
      }
      var v4009 = "" + v10806;
      introspect(JAM.policy.p3) {
        var e$$275 = v4009.match(/^([\d+-.]+)(.*)$/)
      }
      var v4010 = e$$275[1];
      var v10807 = e$$275[2];
      var v16410 = !v10807;
      if (v16410) {
        v10807 = "px";
      }
      var v4011 = v10807;
      introspect(JAM.policy.p2) {
        f$$132[d$$303] = {value:v4010, unit:v4011};
      }
      return;
    }
    var v4012 = {easing:"swing", duration:300};
    introspect(JAM.policy.p3) {
      b$$484 = a$$507.extend(v4012, b$$484, c$$385);
    }
    var v16411 = b$$484.toHide;
    introspect(JAM.policy.p3) {
      var v10808 = v16411.size()
    }
    var v4015 = !v10808;
    if (v4015) {
      var v4013 = b$$484.toShow;
      var v4014 = {height:"show", paddingTop:"show", paddingBottom:"show"};
      introspect(JAM.policy.p3) {
        v4013.animate(v4014, b$$484);
      }
      return;
    }
    var v16412 = b$$484.toShow;
    introspect(JAM.policy.p3) {
      var v10809 = v16412.size()
    }
    var v4018 = !v10809;
    if (v4018) {
      var v4016 = b$$484.toHide;
      var v4017 = {height:"hide", paddingTop:"hide", paddingBottom:"hide"};
      introspect(JAM.policy.p3) {
        v4016.animate(v4017, b$$484);
      }
      return;
    }
    var v4019 = b$$484.toShow;
    introspect(JAM.policy.p3) {
      var d$$302 = v4019.css("overflow")
    }
    var e$$274 = 0;
    var f$$132 = {};
    var g$$158 = {};
    var h$$129 = ["height", "paddingTop", "paddingBottom"];
    var i$$185;
    var j$$94 = b$$484.toShow;
    var v26717 = j$$94[0];
    var v24787 = v26717.style;
    i$$185 = v24787.width;
    introspect(JAM.policy.p3) {
      var v29860 = j$$94.parent()
    }
    introspect(JAM.policy.p3) {
      var v29513 = v29860.width()
    }
    introspect(JAM.policy.p3) {
      var v29861 = j$$94.css("paddingLeft")
    }
    var v29514 = parseFloat(v29861);
    var v28929 = v29513 - v29514;
    introspect(JAM.policy.p3) {
      var v29515 = j$$94.css("paddingRight")
    }
    var v28930 = parseFloat(v29515);
    var v28054 = v28929 - v28930;
    introspect(JAM.policy.p3) {
      var v29516 = j$$94.css("borderLeftWidth")
    }
    var v28931 = parseFloat(v29516);
    var v29517 = !v28931;
    if (v29517) {
      v28931 = 0;
    }
    var v28055 = v28931;
    var v26718 = v28054 - v28055;
    introspect(JAM.policy.p3) {
      var v28932 = j$$94.css("borderRightWidth")
    }
    var v28056 = parseFloat(v28932);
    var v28933 = !v28056;
    if (v28933) {
      v28056 = 0;
    }
    var v26719 = v28056;
    var v24788 = v26718 - v26719;
    introspect(JAM.policy.p3) {
      j$$94.width(v24788);
    }
    introspect(JAM.policy.p3) {
      a$$507.each(h$$129, v1476);
    }
    var v21995 = b$$484.toShow;
    var v21996 = {height:0, overflow:"hidden"};
    introspect(JAM.policy.p3) {
      var v16413 = v21995.css(v21996)
    }
    introspect(JAM.policy.p3) {
      v16413.show();
    }
    var v26720 = b$$484.toHide;
    introspect(JAM.policy.p3) {
      var v24789 = v26720.filter(":hidden")
    }
    var v24790 = b$$484.complete;
    introspect(JAM.policy.p3) {
      var v21997 = v24789.each(v24790)
    }
    introspect(JAM.policy.p3) {
      var v16414 = v21997.end()
    }
    introspect(JAM.policy.p3) {
      var v10810 = v16414.filter(":visible")
    }
    var v16415 = b$$484.duration;
    var v16416 = b$$484.easing;
    var v10811 = {step:v1477, duration:v16415, easing:v16416, complete:v1478};
    introspect(JAM.policy.p3) {
      v10810.animate(g$$158, v10811);
    }
    return;
  }
  function v1475(a$$512) {
    var v4020;
    if (a$$512) {
      v4020 = 0;
    } else {
      var v16417 = this.running;
      v4020 = this.running = v16417 - 1;
    }
    this.running = v4020;
    var v4021 = this.running;
    if (v4021) {
      return;
    }
    var v24791 = this.options;
    var v21998 = v24791.clearStyle;
    if (v21998) {
      var v26721 = this.toShow;
      var v26722 = this.toHide;
      introspect(JAM.policy.p3) {
        var v24792 = v26721.add(v26722)
      }
      var v24793 = {height:"", overflow:""};
      introspect(JAM.policy.p3) {
        v24792.css(v24793);
      }
    }
    var v21999 = this.toHide;
    introspect(JAM.policy.p3) {
      v21999.removeClass("ui-accordion-content-active");
    }
    var v22000 = this.toHide;
    var v16418 = v22000.length;
    if (v16418) {
      var v26723 = this.toHide;
      introspect(JAM.policy.p3) {
        var v24794 = v26723.parent()
      }
      var v22001 = v24794[0];
      var v28057 = this.toHide;
      introspect(JAM.policy.p3) {
        var v26724 = v28057.parent()
      }
      var v24795 = v26724[0];
      v22001.className = v24795.className;
    }
    var v10812 = this.data;
    introspect(JAM.policy.p3) {
      this._trigger("change", null, v10812);
    }
    return;
  }
  function v1474(b$$483, c$$384, d$$301, e$$273, f$$131) {
    function v1473(a$$511) {
      var v10813 = l$$71 || 700;
      var v4022 = {easing:m$$42, duration:v10813};
      introspect(JAM.policy.p3) {
        this.slide(a$$511, v4022);
      }
      return;
    }
    function i$$184() {
      var v4023 = !g$$157;
      if (v4023) {
        return;
      }
      var v4024 = g$$157._completed;
      introspect(JAM.policy.p3) {
        return v4024.apply(g$$157, arguments);
      }
    }
    var g$$157 = this;
    var h$$128 = g$$157.options;
    g$$157.toShow = b$$483;
    g$$157.toHide = c$$384;
    g$$157.data = d$$301;
    var v10814 = g$$157.data;
    introspect(JAM.policy.p3) {
      g$$157._trigger("changestart", null, v10814);
    }
    var v10815 = g$$157;
    var v16419;
    introspect(JAM.policy.p3) {
      var v24796 = c$$384.size()
    }
    var v22002 = v24796 === 0;
    if (v22002) {
      introspect(JAM.policy.p3) {
        v16419 = b$$483.size();
      }
    } else {
      introspect(JAM.policy.p3) {
        v16419 = c$$384.size();
      }
    }
    v10815.running = v16419;
    var v4026 = h$$128.animated;
    if (v4026) {
      var j$$93 = {};
      var v24797;
      var v28058 = h$$128.collapsible;
      if (v28058) {
        v28058 = e$$273;
      }
      var v26728 = v28058;
      if (v26728) {
        introspect(JAM.policy.p3) {
          var v26725 = a$$507([])
        }
        var v28059 = h$$128.autoHeight;
        var v28934 = !v28059;
        if (v28934) {
          v28059 = h$$128.fillSpace;
        }
        var v26726 = v28059;
        v24797 = j$$93 = {toShow:v26725, toHide:c$$384, complete:i$$184, down:f$$131, autoHeight:v26726};
      } else {
        var v28060 = h$$128.autoHeight;
        var v28935 = !v28060;
        if (v28935) {
          v28060 = h$$128.fillSpace;
        }
        var v26727 = v28060;
        v24797 = j$$93 = {toShow:b$$483, toHide:c$$384, complete:i$$184, down:f$$131, autoHeight:v26727};
      }
      v24797;
      var v24798 = h$$128.proxied;
      var v26729 = !v24798;
      if (v26729) {
        h$$128.proxied = h$$128.animated;
      }
      var v22003 = h$$128.proxiedDuration;
      var v24799 = !v22003;
      if (v24799) {
        h$$128.proxiedDuration = h$$128.duration;
      }
      var v16420 = h$$128;
      var v22004;
      var v26730 = h$$128.proxied;
      introspect(JAM.policy.p3) {
        var v24800 = a$$507.isFunction(v26730)
      }
      if (v24800) {
        introspect(JAM.policy.p3) {
          v22004 = h$$128.proxied(j$$93);
        }
      } else {
        v22004 = h$$128.proxied;
      }
      v16420.animated = v22004;
      var v10816 = h$$128;
      var v16421;
      var v24801 = h$$128.proxiedDuration;
      introspect(JAM.policy.p3) {
        var v22005 = a$$507.isFunction(v24801)
      }
      if (v22005) {
        introspect(JAM.policy.p3) {
          v16421 = h$$128.proxiedDuration(j$$93);
        }
      } else {
        v16421 = h$$128.proxiedDuration;
      }
      v10816.duration = v16421;
      var v10817 = a$$507.ui;
      var v4025 = v10817.accordion;
      var k$$63 = v4025.animations;
      var l$$71 = h$$128.duration;
      var m$$42 = h$$128.animated;
      var v24802 = m$$42;
      if (v24802) {
        var v26731 = k$$63[m$$42];
        v24802 = !v26731;
      }
      var v22006 = v24802;
      if (v22006) {
        var v26732 = a$$507.easing;
        var v24803 = v26732[m$$42];
        v22006 = !v24803;
      }
      var v16422 = v22006;
      if (v16422) {
        m$$42 = "slide";
      }
      var v16423 = k$$63[m$$42];
      var v22007 = !v16423;
      if (v22007) {
        introspect(JAM.policy.p2) {
          k$$63[m$$42] = v1473;
        }
      }
      introspect(JAM.policy.p3) {
        k$$63[m$$42](j$$93);
      }
    } else {
      var v10818;
      var v22008 = h$$128.collapsible;
      if (v22008) {
        v22008 = e$$273;
      }
      var v16424 = v22008;
      if (v16424) {
        introspect(JAM.policy.p3) {
          v10818 = b$$483.toggle();
        }
      } else {
        introspect(JAM.policy.p3) {
          c$$384.hide();
        }
        introspect(JAM.policy.p3) {
          v10818 = b$$483.show();
        }
      }
      v10818;
      var v10819 = !0;
      i$$184(v10819);
    }
    introspect(JAM.policy.p3) {
      var v16425 = c$$384.prev()
    }
    var v16426 = {"aria-expanded":"false", "aria-selected":"false", tabIndex:-1};
    introspect(JAM.policy.p3) {
      var v10820 = v16425.attr(v16426)
    }
    introspect(JAM.policy.p3) {
      v10820.blur();
    }
    introspect(JAM.policy.p3) {
      var v16427 = b$$483.prev()
    }
    var v16428 = {"aria-expanded":"true", "aria-selected":"true", tabIndex:0};
    introspect(JAM.policy.p3) {
      var v10821 = v16427.attr(v16428)
    }
    introspect(JAM.policy.p3) {
      v10821.focus();
    }
    return;
  }
  function v1472(b$$482, c$$383) {
    var d$$300 = this.options;
    var v4027 = d$$300.disabled;
    if (v4027) {
      return;
    }
    var v10822 = b$$482.target;
    var v4033 = !v10822;
    if (v4033) {
      var v10823 = d$$300.collapsible;
      var v4028 = !v10823;
      if (v4028) {
        return;
      }
      var v26733 = this.active;
      introspect(JAM.policy.p3) {
        var v24804 = v26733.removeClass("ui-state-active ui-corner-top")
      }
      introspect(JAM.policy.p3) {
        var v22009 = v24804.addClass("ui-state-default ui-corner-all")
      }
      introspect(JAM.policy.p3) {
        var v16429 = v22009.children(".ui-icon")
      }
      var v22010 = d$$300.icons;
      var v16430 = v22010.headerSelected;
      introspect(JAM.policy.p3) {
        var v10824 = v16429.removeClass(v16430)
      }
      var v16431 = d$$300.icons;
      var v10825 = v16431.header;
      introspect(JAM.policy.p3) {
        v10824.addClass(v10825);
      }
      var v16432 = this.active;
      introspect(JAM.policy.p3) {
        var v10826 = v16432.next()
      }
      introspect(JAM.policy.p3) {
        v10826.addClass("ui-accordion-content-active");
      }
      var v4029 = this.active;
      introspect(JAM.policy.p3) {
        var e$$272 = v4029.next()
      }
      introspect(JAM.policy.p3) {
        var v4030 = a$$507([])
      }
      var v4031 = d$$300.active;
      introspect(JAM.policy.p3) {
        var v4032 = a$$507([])
      }
      var f$$130 = {options:d$$300, newHeader:v4030, oldHeader:v4031, newContent:v4032, oldContent:e$$272};
      introspect(JAM.policy.p3) {
        var v31043 = a$$507([])
      }
      var g$$156 = this.active = v31043;
      introspect(JAM.policy.p3) {
        this._toggle(g$$156, e$$272, f$$130);
      }
      return;
    }
    var v10827 = b$$482.currentTarget;
    var v16433 = !v10827;
    if (v16433) {
      v10827 = c$$383;
    }
    var v4034 = v10827;
    introspect(JAM.policy.p3) {
      var h$$127 = a$$507(v4034)
    }
    var v4035 = h$$127[0];
    var v10828 = this.active;
    var v4036 = v10828[0];
    var i$$183 = v4035 === v4036;
    var v4037;
    var v16434 = d$$300.collapsible;
    if (v16434) {
      v16434 = i$$183;
    }
    var v10830 = v16434;
    if (v10830) {
      v4037 = !1;
    } else {
      var v10829 = this.headers;
      introspect(JAM.policy.p3) {
        v4037 = v10829.index(h$$127);
      }
    }
    d$$300.active = v4037;
    var v10831 = this.running;
    var v16436 = !v10831;
    if (v16436) {
      var v22011 = d$$300.collapsible;
      var v16435 = !v22011;
      if (v16435) {
        v16435 = i$$183;
      }
      v10831 = v16435;
    }
    var v4038 = v10831;
    if (v4038) {
      return;
    }
    var j$$92 = this.active;
    introspect(JAM.policy.p3) {
      g$$156 = h$$127.next();
    }
    var v4039 = this.active;
    introspect(JAM.policy.p3) {
      e$$272 = v4039.next();
    }
    var v10832;
    var v22012 = i$$183;
    if (v22012) {
      v22012 = d$$300.collapsible;
    }
    var v16437 = v22012;
    if (v16437) {
      introspect(JAM.policy.p3) {
        v10832 = a$$507([]);
      }
    } else {
      v10832 = h$$127;
    }
    var v4040 = v10832;
    var v4041 = this.active;
    var v10833;
    var v22013 = i$$183;
    if (v22013) {
      v22013 = d$$300.collapsible;
    }
    var v16438 = v22013;
    if (v16438) {
      introspect(JAM.policy.p3) {
        v10833 = a$$507([]);
      }
    } else {
      v10833 = g$$156;
    }
    var v4042 = v10833;
    f$$130 = {options:d$$300, newHeader:v4040, oldHeader:v4041, newContent:v4042, oldContent:e$$272};
    var v10834 = this.headers;
    var v16439 = this.active;
    var v10835 = v16439[0];
    introspect(JAM.policy.p3) {
      var v4043 = v10834.index(v10835)
    }
    var v10836 = this.headers;
    var v10837 = h$$127[0];
    introspect(JAM.policy.p3) {
      var v4044 = v10836.index(v10837)
    }
    var k$$62 = v4043 > v4044;
    var v22014;
    if (i$$183) {
      introspect(JAM.policy.p3) {
        v22014 = a$$507([]);
      }
    } else {
      v22014 = h$$127;
    }
    this.active = v22014;
    introspect(JAM.policy.p3) {
      this._toggle(g$$156, e$$272, f$$130, i$$183, k$$62);
    }
    introspect(JAM.policy.p3) {
      var v26734 = j$$92.removeClass("ui-state-active ui-corner-top")
    }
    introspect(JAM.policy.p3) {
      var v24805 = v26734.addClass("ui-state-default ui-corner-all")
    }
    introspect(JAM.policy.p3) {
      var v22015 = v24805.children(".ui-icon")
    }
    var v24806 = d$$300.icons;
    var v22016 = v24806.headerSelected;
    introspect(JAM.policy.p3) {
      var v16440 = v22015.removeClass(v22016)
    }
    var v22017 = d$$300.icons;
    var v16441 = v22017.header;
    introspect(JAM.policy.p3) {
      v16440.addClass(v16441);
    }
    var v16442 = !i$$183;
    if (v16442) {
      introspect(JAM.policy.p3) {
        var v28061 = h$$127.removeClass("ui-state-default ui-corner-all")
      }
      introspect(JAM.policy.p3) {
        var v26735 = v28061.addClass("ui-state-active ui-corner-top")
      }
      introspect(JAM.policy.p3) {
        var v24807 = v26735.children(".ui-icon")
      }
      var v26736 = d$$300.icons;
      var v24808 = v26736.header;
      introspect(JAM.policy.p3) {
        var v22018 = v24807.removeClass(v24808)
      }
      var v24809 = d$$300.icons;
      var v22019 = v24809.headerSelected;
      introspect(JAM.policy.p3) {
        v22018.addClass(v22019);
      }
      introspect(JAM.policy.p3) {
        var v22020 = h$$127.next()
      }
      introspect(JAM.policy.p3) {
        v22020.addClass("ui-accordion-content-active");
      }
    }
    return;
  }
  function v1471(b$$481) {
    var v4045;
    if (b$$481) {
      var v10838;
      var v22021 = typeof b$$481;
      var v16447 = v22021 == "number";
      if (v16447) {
        var v16443 = this.headers;
        var v22022 = ":eq(" + b$$481;
        var v16444 = v22022 + ")";
        introspect(JAM.policy.p3) {
          v10838 = v16443.filter(v16444);
        }
      } else {
        var v16445 = this.headers;
        var v22023 = this.headers;
        introspect(JAM.policy.p3) {
          var v16446 = v22023.not(b$$481)
        }
        introspect(JAM.policy.p3) {
          v10838 = v16445.not(v16446);
        }
      }
      v4045 = v10838;
    } else {
      var v10839;
      var v22024 = !1;
      var v16449 = b$$481 === v22024;
      if (v16449) {
        introspect(JAM.policy.p3) {
          v10839 = a$$507([]);
        }
      } else {
        var v16448 = this.headers;
        introspect(JAM.policy.p3) {
          v10839 = v16448.filter(":eq(0)");
        }
      }
      v4045 = v10839;
    }
    return v4045;
  }
  function v1470(a$$510) {
    var v4046 = this.options;
    v4046.active = a$$510;
    introspect(JAM.policy.p3) {
      var v4047 = this._findActive(a$$510)
    }
    var b$$480 = v4047[0];
    var v10840 = {target:b$$480};
    introspect(JAM.policy.p3) {
      this._clickHandler(v10840, b$$480);
    }
    return this;
  }
  function v1469() {
    function v1468() {
      introspect(JAM.policy.p3) {
        var v16450 = a$$507(this)
      }
      introspect(JAM.policy.p3) {
        var v10841 = v16450.height("")
      }
      introspect(JAM.policy.p3) {
        var v4048 = v10841.height()
      }
      introspect(JAM.policy.p3) {
        c$$382 = Math.max(c$$382, v4048);
      }
      return;
    }
    function v1467() {
      introspect(JAM.policy.p3) {
        var v4049 = a$$507(this)
      }
      var v22025 = c$$382;
      introspect(JAM.policy.p3) {
        var v24810 = a$$507(this)
      }
      introspect(JAM.policy.p3) {
        var v22026 = v24810.innerHeight()
      }
      var v16451 = v22025 - v22026;
      introspect(JAM.policy.p3) {
        var v22027 = a$$507(this)
      }
      introspect(JAM.policy.p3) {
        var v16452 = v22027.height()
      }
      var v10842 = v16451 + v16452;
      introspect(JAM.policy.p3) {
        var v4050 = Math.max(0, v10842)
      }
      introspect(JAM.policy.p3) {
        v4049.height(v4050);
      }
      return;
    }
    function v1466() {
      var v10843 = c$$382;
      introspect(JAM.policy.p3) {
        var v16453 = a$$507(this)
      }
      var v16454 = !0;
      introspect(JAM.policy.p3) {
        var v10844 = v16453.outerHeight(v16454)
      }
      c$$382 = v10843 - v10844;
      return;
    }
    var b$$479 = this.options;
    var c$$382;
    var v4055 = b$$479.fillSpace;
    if (v4055) {
      var v10845 = a$$507.browser;
      var v4053 = v10845.msie;
      if (v4053) {
        var v10846 = this.element;
        introspect(JAM.policy.p3) {
          var v4051 = v10846.parent()
        }
        introspect(JAM.policy.p3) {
          var d$$299 = v4051.css("overflow")
        }
        var v10847 = this.element;
        introspect(JAM.policy.p3) {
          var v4052 = v10847.parent()
        }
        introspect(JAM.policy.p3) {
          v4052.css("overflow", "hidden");
        }
      }
      var v24811 = this.element;
      introspect(JAM.policy.p3) {
        var v22028 = v24811.parent()
      }
      introspect(JAM.policy.p3) {
        c$$382 = v22028.height();
      }
      var v24812 = a$$507.browser;
      var v22029 = v24812.msie;
      if (v22029) {
        var v26737 = this.element;
        introspect(JAM.policy.p3) {
          var v24813 = v26737.parent()
        }
        introspect(JAM.policy.p3) {
          v24813.css("overflow", d$$299);
        }
      }
      var v16455 = this.headers;
      introspect(JAM.policy.p3) {
        v16455.each(v1466);
      }
      var v22030 = this.headers;
      introspect(JAM.policy.p3) {
        var v16456 = v22030.next()
      }
      introspect(JAM.policy.p3) {
        var v10848 = v16456.each(v1467)
      }
      introspect(JAM.policy.p3) {
        v10848.css("overflow", "auto");
      }
    } else {
      var v4054 = b$$479.autoHeight;
      if (v4054) {
        c$$382 = 0;
        var v24814 = this.headers;
        introspect(JAM.policy.p3) {
          var v22031 = v24814.next()
        }
        introspect(JAM.policy.p3) {
          var v16457 = v22031.each(v1468)
        }
        introspect(JAM.policy.p3) {
          v16457.height(c$$382);
        }
      }
    }
    return this;
  }
  function v1465(b$$478) {
    var v22032 = this.options;
    var v16458 = v22032.disabled;
    var v22033 = !v16458;
    if (v22033) {
      v16458 = b$$478.altKey;
    }
    var v10849 = v16458;
    var v16459 = !v10849;
    if (v16459) {
      v10849 = b$$478.ctrlKey;
    }
    var v4056 = v10849;
    if (v4056) {
      return;
    }
    var v4057 = a$$507.ui;
    var c$$381 = v4057.keyCode;
    var v4058 = this.headers;
    var d$$298 = v4058.length;
    var v4059 = this.headers;
    var v4060 = b$$478.target;
    introspect(JAM.policy.p3) {
      var e$$271 = v4059.index(v4060)
    }
    var f$$129 = !1;
    var v4065 = b$$478.keyCode;
    switch(v4065) {
      case c$$381.RIGHT:
      ;
      case c$$381.DOWN:
        var v4061 = this.headers;
        var v10850 = e$$271 + 1;
        var v4062 = v10850 % d$$298;
        f$$129 = v4061[v4062];
        break;
      case c$$381.LEFT:
      ;
      case c$$381.UP:
        var v4063 = this.headers;
        var v16460 = e$$271 - 1;
        var v10851 = v16460 + d$$298;
        var v4064 = v10851 % d$$298;
        f$$129 = v4063[v4064];
        break;
      case c$$381.SPACE:
      ;
      case c$$381.ENTER:
        var v16461 = b$$478.target;
        var v10852 = {target:v16461};
        var v10853 = b$$478.target;
        introspect(JAM.policy.p3) {
          this._clickHandler(v10852, v10853);
        }
        introspect(JAM.policy.p3) {
          b$$478.preventDefault();
        }
      ;
    }
    var v4066;
    if (f$$129) {
      var v26738 = b$$478.target;
      introspect(JAM.policy.p3) {
        var v24815 = a$$507(v26738)
      }
      introspect(JAM.policy.p3) {
        v24815.attr("tabIndex", -1);
      }
      introspect(JAM.policy.p3) {
        var v24816 = a$$507(f$$129)
      }
      introspect(JAM.policy.p3) {
        v24816.attr("tabIndex", 0);
      }
      introspect(JAM.policy.p3) {
        f$$129.focus();
      }
      v4066 = !1;
    } else {
      v4066 = !0;
    }
    return v4066;
  }
  function v1464(b$$477, c$$380) {
    var v26739 = a$$507.Widget;
    var v24817 = v26739.prototype;
    var v22034 = v24817._setOption;
    introspect(JAM.policy.p3) {
      v22034.apply(this, arguments);
    }
    var v22035 = b$$477 == "active";
    if (v22035) {
      introspect(JAM.policy.p3) {
        this.activate(c$$380);
      }
    }
    var v16462 = b$$477 == "icons";
    if (v16462) {
      introspect(JAM.policy.p3) {
        this._destroyIcons();
      }
      if (c$$380) {
        introspect(JAM.policy.p3) {
          this._createIcons();
        }
      }
    }
    var v10854 = b$$477 == "disabled";
    if (v10854) {
      var v22036 = this.headers;
      var v24818 = this.headers;
      introspect(JAM.policy.p3) {
        var v22037 = v24818.next()
      }
      introspect(JAM.policy.p3) {
        var v16463 = v22036.add(v22037)
      }
      var v22038;
      if (c$$380) {
        v22038 = "addClass";
      } else {
        v22038 = "removeClass";
      }
      var v16464 = v22038;
      introspect(JAM.policy.p3) {
        v16463[v16464]("ui-accordion-disabled ui-state-disabled");
      }
    }
    return;
  }
  function v1463() {
    var b$$476 = this.options;
    var v24819 = this.element;
    introspect(JAM.policy.p3) {
      var v22039 = v24819.removeClass("ui-accordion ui-widget ui-helper-reset")
    }
    introspect(JAM.policy.p3) {
      v22039.removeAttr("role");
    }
    var v29518 = this.headers;
    introspect(JAM.policy.p3) {
      var v28936 = v29518.unbind(".accordion")
    }
    introspect(JAM.policy.p3) {
      var v28062 = v28936.removeClass("ui-accordion-header ui-accordion-disabled ui-helper-reset ui-state-default ui-corner-all ui-state-active ui-state-disabled ui-corner-top")
    }
    introspect(JAM.policy.p3) {
      var v26740 = v28062.removeAttr("role")
    }
    introspect(JAM.policy.p3) {
      var v24820 = v26740.removeAttr("aria-expanded")
    }
    introspect(JAM.policy.p3) {
      var v22040 = v24820.removeAttr("aria-selected")
    }
    introspect(JAM.policy.p3) {
      v22040.removeAttr("tabIndex");
    }
    var v22041 = this.headers;
    introspect(JAM.policy.p3) {
      var v16465 = v22041.find("a")
    }
    introspect(JAM.policy.p3) {
      v16465.removeAttr("tabIndex");
    }
    introspect(JAM.policy.p3) {
      this._destroyIcons();
    }
    var v22042 = this.headers;
    introspect(JAM.policy.p3) {
      var v16466 = v22042.next()
    }
    introspect(JAM.policy.p3) {
      var v10855 = v16466.css("display", "")
    }
    introspect(JAM.policy.p3) {
      var v4067 = v10855.removeAttr("role")
    }
    introspect(JAM.policy.p3) {
      var c$$379 = v4067.removeClass("ui-helper-reset ui-widget-content ui-corner-bottom ui-accordion-content ui-accordion-content-active ui-accordion-disabled ui-state-disabled")
    }
    var v16467 = b$$476.autoHeight;
    var v22043 = !v16467;
    if (v22043) {
      v16467 = b$$476.fillHeight;
    }
    var v10856 = v16467;
    if (v10856) {
      introspect(JAM.policy.p3) {
        c$$379.css("height", "");
      }
    }
    var v22044 = a$$507.Widget;
    var v16468 = v22044.prototype;
    var v10857 = v16468.destroy;
    introspect(JAM.policy.p3) {
      return v10857.call(this);
    }
  }
  function v1462() {
    var v16469 = this.headers;
    introspect(JAM.policy.p3) {
      var v10858 = v16469.children(".ui-icon")
    }
    introspect(JAM.policy.p3) {
      v10858.remove();
    }
    var v10859 = this.element;
    introspect(JAM.policy.p3) {
      v10859.removeClass("ui-accordion-icons");
    }
    return;
  }
  function v1461() {
    var b$$475 = this.options;
    var v4068 = b$$475.icons;
    if (v4068) {
      introspect(JAM.policy.p3) {
        var v24821 = a$$507("<span></span>")
      }
      var v28063 = b$$475.icons;
      var v26741 = v28063.header;
      var v24822 = "ui-icon " + v26741;
      introspect(JAM.policy.p3) {
        var v22045 = v24821.addClass(v24822)
      }
      var v22046 = this.headers;
      introspect(JAM.policy.p3) {
        v22045.prependTo(v22046);
      }
      var v26742 = this.active;
      introspect(JAM.policy.p3) {
        var v24823 = v26742.children(".ui-icon")
      }
      var v26743 = b$$475.icons;
      var v24824 = v26743.header;
      introspect(JAM.policy.p3) {
        var v22047 = v24823.toggleClass(v24824)
      }
      var v24825 = b$$475.icons;
      var v22048 = v24825.headerSelected;
      introspect(JAM.policy.p3) {
        v22047.toggleClass(v22048);
      }
      var v16470 = this.element;
      introspect(JAM.policy.p3) {
        v16470.addClass("ui-accordion-icons");
      }
    }
    return;
  }
  function v1460() {
    function v1459(a$$509) {
      var v10860 = b$$474._clickHandler;
      introspect(JAM.policy.p3) {
        v10860.call(b$$474, a$$509, this);
      }
      introspect(JAM.policy.p3) {
        a$$509.preventDefault();
      }
      return;
    }
    function v1458(a$$508) {
      introspect(JAM.policy.p3) {
        return b$$474._keydown(a$$508);
      }
    }
    function v1457() {
      var v4069 = c$$378.disabled;
      if (v4069) {
        return;
      }
      introspect(JAM.policy.p3) {
        var v4070 = a$$507(this)
      }
      introspect(JAM.policy.p3) {
        v4070.removeClass("ui-state-focus");
      }
      return;
    }
    function v1456() {
      var v4071 = c$$378.disabled;
      if (v4071) {
        return;
      }
      introspect(JAM.policy.p3) {
        var v4072 = a$$507(this)
      }
      introspect(JAM.policy.p3) {
        v4072.addClass("ui-state-focus");
      }
      return;
    }
    function v1455() {
      var v4073 = c$$378.disabled;
      if (v4073) {
        return;
      }
      introspect(JAM.policy.p3) {
        var v4074 = a$$507(this)
      }
      introspect(JAM.policy.p3) {
        v4074.removeClass("ui-state-hover");
      }
      return;
    }
    function v1454() {
      var v4075 = c$$378.disabled;
      if (v4075) {
        return;
      }
      introspect(JAM.policy.p3) {
        var v4076 = a$$507(this)
      }
      introspect(JAM.policy.p3) {
        v4076.addClass("ui-state-hover");
      }
      return;
    }
    var b$$474 = this;
    var c$$378 = b$$474.options;
    b$$474.running = 0;
    var v26744 = b$$474.element;
    introspect(JAM.policy.p3) {
      var v24826 = v26744.addClass("ui-accordion ui-widget ui-helper-reset")
    }
    introspect(JAM.policy.p3) {
      var v22049 = v24826.children("li")
    }
    introspect(JAM.policy.p3) {
      v22049.addClass("ui-accordion-li-fix");
    }
    var v16471 = b$$474;
    var v29519 = b$$474.element;
    var v29520 = c$$378.header;
    introspect(JAM.policy.p3) {
      var v28937 = v29519.find(v29520)
    }
    introspect(JAM.policy.p3) {
      var v28064 = v28937.addClass("ui-accordion-header ui-helper-reset ui-state-default ui-corner-all")
    }
    introspect(JAM.policy.p3) {
      var v26745 = v28064.bind("mouseenter.accordion", v1454)
    }
    introspect(JAM.policy.p3) {
      var v24827 = v26745.bind("mouseleave.accordion", v1455)
    }
    introspect(JAM.policy.p3) {
      var v22050 = v24827.bind("focus.accordion", v1456)
    }
    introspect(JAM.policy.p3) {
      var v31044 = v22050.bind("blur.accordion", v1457)
    }
    v16471.headers = v31044;
    var v16472 = b$$474.headers;
    introspect(JAM.policy.p3) {
      var v10861 = v16472.next()
    }
    introspect(JAM.policy.p3) {
      v10861.addClass("ui-accordion-content ui-helper-reset ui-widget-content ui-corner-bottom");
    }
    var v4080 = c$$378.navigation;
    if (v4080) {
      var v16473 = b$$474.element;
      introspect(JAM.policy.p3) {
        var v10862 = v16473.find("a")
      }
      var v10863 = c$$378.navigationFilter;
      introspect(JAM.policy.p3) {
        var v4077 = v10862.filter(v10863)
      }
      introspect(JAM.policy.p3) {
        var d$$297 = v4077.eq(0)
      }
      var v4079 = d$$297.length;
      if (v4079) {
        introspect(JAM.policy.p3) {
          var e$$270 = d$$297.closest(".ui-accordion-header")
        }
        var v4078;
        var v10865 = e$$270.length;
        if (v10865) {
          v4078 = b$$474.active = e$$270;
        } else {
          var v10864 = b$$474;
          introspect(JAM.policy.p3) {
            var v16474 = d$$297.closest(".ui-accordion-content")
          }
          introspect(JAM.policy.p3) {
            var v31045 = v16474.prev()
          }
          v4078 = v10864.active = v31045;
        }
        v4078;
      }
    }
    var v29862 = b$$474;
    var v30674 = b$$474.active;
    var v30727 = !v30674;
    if (v30727) {
      v30674 = c$$378.active;
    }
    var v30594 = v30674;
    introspect(JAM.policy.p3) {
      var v30461 = b$$474._findActive(v30594)
    }
    introspect(JAM.policy.p3) {
      var v30322 = v30461.addClass("ui-state-default ui-state-active")
    }
    introspect(JAM.policy.p3) {
      var v30114 = v30322.toggleClass("ui-corner-all")
    }
    introspect(JAM.policy.p3) {
      var v31046 = v30114.toggleClass("ui-corner-top")
    }
    v29862.active = v31046;
    var v30115 = b$$474.active;
    introspect(JAM.policy.p3) {
      var v29863 = v30115.next()
    }
    introspect(JAM.policy.p3) {
      v29863.addClass("ui-accordion-content-active");
    }
    introspect(JAM.policy.p3) {
      b$$474._createIcons();
    }
    introspect(JAM.policy.p3) {
      b$$474.resize();
    }
    var v28065 = b$$474.element;
    introspect(JAM.policy.p3) {
      v28065.attr("role", "tablist");
    }
    var v29521 = b$$474.headers;
    introspect(JAM.policy.p3) {
      var v28938 = v29521.attr("role", "tab")
    }
    introspect(JAM.policy.p3) {
      var v28066 = v28938.bind("keydown.accordion", v1458)
    }
    introspect(JAM.policy.p3) {
      var v26746 = v28066.next()
    }
    introspect(JAM.policy.p3) {
      v26746.attr("role", "tabpanel");
    }
    var v28939 = b$$474.headers;
    var v29522 = b$$474.active;
    var v29864 = !v29522;
    if (v29864) {
      v29522 = "";
    }
    var v28940 = v29522;
    introspect(JAM.policy.p3) {
      var v28067 = v28939.not(v28940)
    }
    var v28068 = {"aria-expanded":"false", "aria-selected":"false", tabIndex:-1};
    introspect(JAM.policy.p3) {
      var v26747 = v28067.attr(v28068)
    }
    introspect(JAM.policy.p3) {
      var v24828 = v26747.next()
    }
    introspect(JAM.policy.p3) {
      v24828.hide();
    }
    var v22051;
    var v26748 = b$$474.active;
    var v24832 = v26748.length;
    if (v24832) {
      var v24829 = b$$474.active;
      var v24830 = {"aria-expanded":"true", "aria-selected":"true", tabIndex:0};
      introspect(JAM.policy.p3) {
        v22051 = v24829.attr(v24830);
      }
    } else {
      var v26749 = b$$474.headers;
      introspect(JAM.policy.p3) {
        var v24831 = v26749.eq(0)
      }
      introspect(JAM.policy.p3) {
        v22051 = v24831.attr("tabIndex", 0);
      }
    }
    v22051;
    var v22052 = a$$507.browser;
    var v16475 = v22052.safari;
    var v22054 = !v16475;
    if (v22054) {
      var v24833 = b$$474.headers;
      introspect(JAM.policy.p3) {
        var v22053 = v24833.find("a")
      }
      introspect(JAM.policy.p3) {
        v22053.attr("tabIndex", -1);
      }
    }
    var v10866 = c$$378.event;
    if (v10866) {
      var v16476 = b$$474.headers;
      var v26750 = c$$378.event;
      introspect(JAM.policy.p3) {
        var v24834 = v26750.split(" ")
      }
      introspect(JAM.policy.p3) {
        var v22055 = v24834.join(".accordion ")
      }
      var v16477 = v22055 + ".accordion";
      introspect(JAM.policy.p3) {
        v16476.bind(v16477, v1459);
      }
    }
    return;
  }
  function v1453() {
    var v10867 = this.href;
    introspect(JAM.policy.p3) {
      var v4081 = v10867.toLowerCase()
    }
    var v10868 = location.href;
    introspect(JAM.policy.p3) {
      var v4082 = v10868.toLowerCase()
    }
    return v4081 === v4082;
  }
  var v22056 = !0;
  var v22057 = !1;
  var v22058 = !1;
  var v22059 = !1;
  var v22060 = {header:"ui-icon-triangle-1-e", headerSelected:"ui-icon-triangle-1-s"};
  var v22061 = !1;
  var v16478 = {active:0, animated:"slide", autoHeight:v22056, clearStyle:v22057, collapsible:v22058, event:"click", fillSpace:v22059, header:"> li > :first-child,> :not(li):even", icons:v22060, navigation:v22061, navigationFilter:v1453};
  var v10869 = {options:v16478, _create:v1460, _createIcons:v1461, _destroyIcons:v1462, destroy:v1463, _setOption:v1464, _keydown:v1465, resize:v1469, activate:v1470, _findActive:v1471, _clickHandler:v1472, _toggle:v1474, _completed:v1475};
  introspect(JAM.policy.p3) {
    a$$507.widget("ui.accordion", v10869);
  }
  var v16479 = a$$507.ui;
  var v10870 = v16479.accordion;
  var v16480 = {slide:v1479, bounceslide:v1480};
  var v10871 = {version:"1.8.24", animations:v16480};
  introspect(JAM.policy.p3) {
    a$$507.extend(v10870, v10871);
  }
  return;
}
function v1452(a$$506, b$$471) {
  function v1451(b$$472) {
    function v1450() {
      function v1449() {
        introspect(JAM.policy.p3) {
          h$$126.remove();
        }
        var v16481 = b$$472.callback;
        if (v16481) {
          var v22062 = b$$472.callback;
          var v22063 = c$$377[0];
          introspect(JAM.policy.p3) {
            v22062.apply(v22063, arguments);
          }
        }
        introspect(JAM.policy.p3) {
          c$$377.dequeue();
        }
        return;
      }
      introspect(JAM.policy.p3) {
        var c$$377 = a$$506(this)
      }
      var v10872 = b$$472.options;
      var v4083 = v10872.to;
      introspect(JAM.policy.p3) {
        var d$$296 = a$$506(v4083)
      }
      introspect(JAM.policy.p3) {
        var e$$269 = d$$296.offset()
      }
      var v4084 = e$$269.top;
      var v4085 = e$$269.left;
      introspect(JAM.policy.p3) {
        var v4086 = d$$296.innerHeight()
      }
      introspect(JAM.policy.p3) {
        var v4087 = d$$296.innerWidth()
      }
      var f$$128 = {top:v4084, left:v4085, height:v4086, width:v4087};
      introspect(JAM.policy.p3) {
        var g$$155 = c$$377.offset()
      }
      introspect(JAM.policy.p3) {
        var v22064 = a$$506('<div class="ui-effects-transfer"></div>')
      }
      var v22065 = document.body;
      introspect(JAM.policy.p3) {
        var v16482 = v22064.appendTo(v22065)
      }
      var v22066 = b$$472.options;
      var v16483 = v22066.className;
      introspect(JAM.policy.p3) {
        var v10873 = v16482.addClass(v16483)
      }
      var v16484 = g$$155.top;
      var v16485 = g$$155.left;
      introspect(JAM.policy.p3) {
        var v16486 = c$$377.innerHeight()
      }
      introspect(JAM.policy.p3) {
        var v16487 = c$$377.innerWidth()
      }
      var v10874 = {top:v16484, left:v16485, height:v16486, width:v16487, position:"absolute"};
      introspect(JAM.policy.p3) {
        var v4088 = v10873.css(v10874)
      }
      var v4089 = b$$472.duration;
      var v10875 = b$$472.options;
      var v4090 = v10875.easing;
      introspect(JAM.policy.p3) {
        var h$$126 = v4088.animate(f$$128, v4089, v4090, v1449)
      }
      return;
    }
    introspect(JAM.policy.p3) {
      return this.queue(v1450);
    }
  }
  var v4091 = a$$506.effects;
  v4091.transfer = v1451;
  return;
}
function v1448(a$$505, b$$469) {
  function v1447(b$$470) {
    function v1446() {
      function v1445() {
        var v24835 = e$$268 == "hide";
        if (v24835) {
          introspect(JAM.policy.p3) {
            c$$376.hide();
          }
        }
        var v24836 = a$$505.effects;
        introspect(JAM.policy.p3) {
          v24836.restore(c$$376, d$$295);
        }
        var v22067 = a$$505.effects;
        introspect(JAM.policy.p3) {
          v22067.removeWrapper(c$$376);
        }
        var v16488 = b$$470.callback;
        if (v16488) {
          var v22068 = b$$470.callback;
          introspect(JAM.policy.p3) {
            v22068.apply(this, arguments);
          }
        }
        introspect(JAM.policy.p3) {
          c$$376.dequeue();
        }
        return;
      }
      introspect(JAM.policy.p3) {
        var c$$376 = a$$505(this)
      }
      var d$$295 = ["position", "top", "bottom", "left", "right"];
      var v4092 = a$$505.effects;
      var v16489 = b$$470.options;
      var v10876 = v16489.mode;
      var v16490 = !v10876;
      if (v16490) {
        v10876 = "show";
      }
      var v4093 = v10876;
      introspect(JAM.policy.p3) {
        var e$$268 = v4092.setMode(c$$376, v4093)
      }
      var v10877 = b$$470.options;
      var v4094 = v10877.direction;
      var v10878 = !v4094;
      if (v10878) {
        v4094 = "left";
      }
      var f$$127 = v4094;
      var v16491 = a$$505.effects;
      introspect(JAM.policy.p3) {
        v16491.save(c$$376, d$$295);
      }
      introspect(JAM.policy.p3) {
        c$$376.show();
      }
      var v16492 = a$$505.effects;
      introspect(JAM.policy.p3) {
        var v10879 = v16492.createWrapper(c$$376)
      }
      var v10880 = {overflow:"hidden"};
      introspect(JAM.policy.p3) {
        v10879.css(v10880);
      }
      var v4095;
      var v16493 = f$$127 == "up";
      var v22069 = !v16493;
      if (v22069) {
        v16493 = f$$127 == "down";
      }
      var v10881 = v16493;
      if (v10881) {
        v4095 = "top";
      } else {
        v4095 = "left";
      }
      var g$$154 = v4095;
      var v4096;
      var v16494 = f$$127 == "up";
      var v22070 = !v16494;
      if (v22070) {
        v16494 = f$$127 == "left";
      }
      var v10882 = v16494;
      if (v10882) {
        v4096 = "pos";
      } else {
        v4096 = "neg";
      }
      var h$$125 = v4096;
      var v10883 = b$$470.options;
      var v4097 = v10883.distance;
      var v10885 = !v4097;
      if (v10885) {
        var v10884;
        var v16497 = g$$154 == "top";
        if (v16497) {
          var v16495 = !0;
          introspect(JAM.policy.p3) {
            v10884 = c$$376.outerHeight(v16495);
          }
        } else {
          var v16496 = !0;
          introspect(JAM.policy.p3) {
            v10884 = c$$376.outerWidth(v16496);
          }
        }
        v4097 = v10884;
      }
      var i$$182 = v4097;
      var v4098 = e$$268 == "show";
      if (v4098) {
        var v16498;
        var v22072 = h$$125 == "pos";
        if (v22072) {
          var v22071;
          var v24837 = isNaN(i$$182);
          if (v24837) {
            v22071 = "-" + i$$182;
          } else {
            v22071 = -i$$182;
          }
          v16498 = v22071;
        } else {
          v16498 = i$$182;
        }
        var v10886 = v16498;
        introspect(JAM.policy.p3) {
          c$$376.css(g$$154, v10886);
        }
      }
      var j$$91 = {};
      var v16499;
      var v22075 = e$$268 == "show";
      if (v22075) {
        var v22073;
        var v24838 = h$$125 == "pos";
        if (v24838) {
          v22073 = "+=";
        } else {
          v22073 = "-=";
        }
        v16499 = v22073;
      } else {
        var v22074;
        var v24839 = h$$125 == "pos";
        if (v24839) {
          v22074 = "-=";
        } else {
          v22074 = "+=";
        }
        v16499 = v22074;
      }
      var v10887 = v16499;
      introspect(JAM.policy.p2) {
        j$$91[g$$154] = v10887 + i$$182;
      }
      var v16500 = !1;
      var v16501 = b$$470.duration;
      var v22076 = b$$470.options;
      var v16502 = v22076.easing;
      var v10888 = {queue:v16500, duration:v16501, easing:v16502, complete:v1445};
      introspect(JAM.policy.p3) {
        c$$376.animate(j$$91, v10888);
      }
      return;
    }
    introspect(JAM.policy.p3) {
      return this.queue(v1446);
    }
  }
  var v4099 = a$$505.effects;
  v4099.slide = v1447;
  return;
}
function v1444(a$$504, b$$467) {
  function v1443(b$$468) {
    function v1442() {
      function v1441() {
        introspect(JAM.policy.p3) {
          c$$375.dequeue();
        }
        return;
      }
      function v1440() {
        var v16503 = a$$504.effects;
        introspect(JAM.policy.p3) {
          v16503.restore(c$$375, d$$294);
        }
        var v16504 = a$$504.effects;
        introspect(JAM.policy.p3) {
          v16504.removeWrapper(c$$375);
        }
        var v10889 = b$$468.callback;
        if (v10889) {
          var v16505 = b$$468.callback;
          introspect(JAM.policy.p3) {
            v16505.apply(this, arguments);
          }
        }
        return;
      }
      introspect(JAM.policy.p3) {
        var c$$375 = a$$504(this)
      }
      var d$$294 = ["position", "top", "bottom", "left", "right"];
      var v4100 = a$$504.effects;
      var v16506 = b$$468.options;
      var v10890 = v16506.mode;
      var v16507 = !v10890;
      if (v16507) {
        v10890 = "effect";
      }
      var v4101 = v10890;
      introspect(JAM.policy.p3) {
        var e$$267 = v4100.setMode(c$$375, v4101)
      }
      var v10891 = b$$468.options;
      var v4102 = v10891.direction;
      var v10892 = !v4102;
      if (v10892) {
        v4102 = "left";
      }
      var f$$126 = v4102;
      var v10893 = b$$468.options;
      var v4103 = v10893.distance;
      var v10894 = !v4103;
      if (v10894) {
        v4103 = 20;
      }
      var g$$153 = v4103;
      var v10895 = b$$468.options;
      var v4104 = v10895.times;
      var v10896 = !v4104;
      if (v10896) {
        v4104 = 3;
      }
      var h$$124 = v4104;
      var v10897 = b$$468.duration;
      var v16509 = !v10897;
      if (v16509) {
        var v16508 = b$$468.options;
        v10897 = v16508.duration;
      }
      var v4105 = v10897;
      var v10898 = !v4105;
      if (v10898) {
        v4105 = 140;
      }
      var i$$181 = v4105;
      var v16510 = a$$504.effects;
      introspect(JAM.policy.p3) {
        v16510.save(c$$375, d$$294);
      }
      introspect(JAM.policy.p3) {
        c$$375.show();
      }
      var v10899 = a$$504.effects;
      introspect(JAM.policy.p3) {
        v10899.createWrapper(c$$375);
      }
      var v4106;
      var v16511 = f$$126 == "up";
      var v22077 = !v16511;
      if (v22077) {
        v16511 = f$$126 == "down";
      }
      var v10900 = v16511;
      if (v10900) {
        v4106 = "top";
      } else {
        v4106 = "left";
      }
      var j$$90 = v4106;
      var v4107;
      var v16512 = f$$126 == "up";
      var v22078 = !v16512;
      if (v22078) {
        v16512 = f$$126 == "left";
      }
      var v10901 = v16512;
      if (v10901) {
        v4107 = "pos";
      } else {
        v4107 = "neg";
      }
      var k$$61 = v4107;
      var l$$70 = {};
      var m$$41 = {};
      var n$$90 = {};
      var v24840;
      var v26751 = k$$61 == "pos";
      if (v26751) {
        v24840 = "-=";
      } else {
        v24840 = "+=";
      }
      var v22079 = v24840;
      introspect(JAM.policy.p2) {
        l$$70[j$$90] = v22079 + g$$153;
      }
      var v24841;
      var v26752 = k$$61 == "pos";
      if (v26752) {
        v24841 = "+=";
      } else {
        v24841 = "-=";
      }
      var v22080 = v24841;
      var v22081 = g$$153 * 2;
      introspect(JAM.policy.p2) {
        m$$41[j$$90] = v22080 + v22081;
      }
      var v22082;
      var v24842 = k$$61 == "pos";
      if (v24842) {
        v22082 = "-=";
      } else {
        v22082 = "+=";
      }
      var v16513 = v22082;
      var v16514 = g$$153 * 2;
      introspect(JAM.policy.p2) {
        n$$90[j$$90] = v16513 + v16514;
      }
      var v16515 = b$$468.options;
      var v10902 = v16515.easing;
      introspect(JAM.policy.p3) {
        c$$375.animate(l$$70, i$$181, v10902);
      }
      var p$$45 = 1;
      var v4110 = p$$45 < h$$124;
      for (;v4110;) {
        var v16516 = b$$468.options;
        var v10903 = v16516.easing;
        introspect(JAM.policy.p3) {
          var v4108 = c$$375.animate(m$$41, i$$181, v10903)
        }
        var v10904 = b$$468.options;
        var v4109 = v10904.easing;
        introspect(JAM.policy.p3) {
          v4108.animate(n$$90, i$$181, v4109);
        }
        p$$45++;
        v4110 = p$$45 < h$$124;
      }
      var v24843 = b$$468.options;
      var v22083 = v24843.easing;
      introspect(JAM.policy.p3) {
        var v16517 = c$$375.animate(m$$41, i$$181, v22083)
      }
      var v16518 = i$$181 / 2;
      var v22084 = b$$468.options;
      var v16519 = v22084.easing;
      introspect(JAM.policy.p3) {
        v16517.animate(l$$70, v16518, v16519, v1440);
      }
      introspect(JAM.policy.p3) {
        c$$375.queue("fx", v1441);
      }
      introspect(JAM.policy.p3) {
        c$$375.dequeue();
      }
      return;
    }
    introspect(JAM.policy.p3) {
      return this.queue(v1442);
    }
  }
  var v4111 = a$$504.effects;
  v4111.shake = v1443;
  return;
}
function v1439(a$$503, b$$463) {
  function v1438(b$$466) {
    function v1437() {
      function v1436() {
        var v28941 = c$$373.to;
        var v28069 = v28941.opacity;
        var v26753 = v28069 === 0;
        if (v26753) {
          var v28942 = c$$373.from;
          var v28070 = v28942.opacity;
          introspect(JAM.policy.p3) {
            c$$373.css("opacity", v28070);
          }
        }
        var v26754 = j$$89 == "hide";
        if (v26754) {
          introspect(JAM.policy.p3) {
            c$$373.hide();
          }
        }
        var v24844 = a$$503.effects;
        var v26755;
        if (k$$60) {
          v26755 = d$$292;
        } else {
          v26755 = e$$266;
        }
        var v24845 = v26755;
        introspect(JAM.policy.p3) {
          v24844.restore(c$$373, v24845);
        }
        var v22085 = a$$503.effects;
        introspect(JAM.policy.p3) {
          v22085.removeWrapper(c$$373);
        }
        var v16520 = b$$466.callback;
        if (v16520) {
          var v22086 = b$$466.callback;
          introspect(JAM.policy.p3) {
            v22086.apply(this, arguments);
          }
        }
        introspect(JAM.policy.p3) {
          c$$373.dequeue();
        }
        return;
      }
      function v1435() {
        function v1434() {
          if (k$$60) {
            var v10905 = a$$503.effects;
            introspect(JAM.policy.p3) {
              v10905.restore(c$$374, f$$125);
            }
          }
          return;
        }
        introspect(JAM.policy.p3) {
          var c$$374 = a$$503(this)
        }
        if (k$$60) {
          var v10906 = a$$503.effects;
          introspect(JAM.policy.p3) {
            v10906.save(c$$374, f$$125);
          }
        }
        introspect(JAM.policy.p3) {
          var JSCompiler_object_inline_height_96 = c$$374.height()
        }
        introspect(JAM.policy.p3) {
          var JSCompiler_object_inline_width_97 = c$$374.width()
        }
        var v26756 = JSCompiler_object_inline_height_96 * JSCompiler_object_inline_y_100;
        var v26757 = JSCompiler_object_inline_width_97 * JSCompiler_object_inline_x_101;
        c$$374.from = {height:v26756, width:v26757};
        var v26758 = JSCompiler_object_inline_height_96 * JSCompiler_object_inline_y_102;
        var v26759 = JSCompiler_object_inline_width_97 * JSCompiler_object_inline_x_103;
        c$$374.to = {height:v26758, width:v26759};
        var v24846 = JSCompiler_object_inline_y_100 != JSCompiler_object_inline_y_102;
        if (v24846) {
          var v28071 = c$$374;
          var v28943 = a$$503.effects;
          var v28944 = c$$374.from;
          introspect(JAM.policy.p3) {
            var v31047 = v28943.setTransition(c$$374, h$$123, JSCompiler_object_inline_y_100, v28944)
          }
          v28071.from = v31047;
          var v28072 = c$$374;
          var v28945 = a$$503.effects;
          var v28946 = c$$374.to;
          introspect(JAM.policy.p3) {
            var v31048 = v28945.setTransition(c$$374, h$$123, JSCompiler_object_inline_y_102, v28946)
          }
          v28072.to = v31048;
        }
        var v22087 = JSCompiler_object_inline_x_101 != JSCompiler_object_inline_x_103;
        if (v22087) {
          var v26760 = c$$374;
          var v28073 = a$$503.effects;
          var v28074 = c$$374.from;
          introspect(JAM.policy.p3) {
            var v31049 = v28073.setTransition(c$$374, i$$180, JSCompiler_object_inline_x_101, v28074)
          }
          v26760.from = v31049;
          var v26761 = c$$374;
          var v28075 = a$$503.effects;
          var v28076 = c$$374.to;
          introspect(JAM.policy.p3) {
            var v31050 = v28075.setTransition(c$$374, i$$180, JSCompiler_object_inline_x_103, v28076)
          }
          v26761.to = v31050;
        }
        var v16521 = c$$374.from;
        introspect(JAM.policy.p3) {
          c$$374.css(v16521);
        }
        var v10907 = c$$374.to;
        var v10908 = b$$466.duration;
        var v16522 = b$$466.options;
        var v10909 = v16522.easing;
        introspect(JAM.policy.p3) {
          c$$374.animate(v10907, v10908, v10909, v1434);
        }
        return;
      }
      introspect(JAM.policy.p3) {
        var c$$373 = a$$503(this)
      }
      var d$$292 = ["position", "top", "bottom", "left", "right", "width", "height", "overflow", "opacity"];
      var e$$266 = ["position", "top", "bottom", "left", "right", "overflow", "opacity"];
      var f$$125 = ["width", "height", "overflow"];
      var g$$152 = ["fontSize"];
      var h$$123 = ["borderTopWidth", "borderBottomWidth", "paddingTop", "paddingBottom"];
      var i$$180 = ["borderLeftWidth", "borderRightWidth", "paddingLeft", "paddingRight"];
      var v4112 = a$$503.effects;
      var v16523 = b$$466.options;
      var v10910 = v16523.mode;
      var v16524 = !v10910;
      if (v16524) {
        v10910 = "effect";
      }
      var v4113 = v10910;
      introspect(JAM.policy.p3) {
        var j$$89 = v4112.setMode(c$$373, v4113)
      }
      var v10911 = b$$466.options;
      var v4114 = v10911.restore;
      var v10912 = !v4114;
      if (v10912) {
        v4114 = !1;
      }
      var k$$60 = v4114;
      var v10913 = b$$466.options;
      var v4115 = v10913.scale;
      var v10914 = !v4115;
      if (v10914) {
        v4115 = "both";
      }
      var l$$69 = v4115;
      var v4116 = b$$466.options;
      var m$$40 = v4116.origin;
      introspect(JAM.policy.p3) {
        var v4117 = c$$373.height()
      }
      introspect(JAM.policy.p3) {
        var v4118 = c$$373.width()
      }
      var n$$89 = {height:v4117, width:v4118};
      var v16525 = b$$466.options;
      var v10915 = v16525.from;
      var v16526 = !v10915;
      if (v16526) {
        v10915 = n$$89;
      }
      c$$373.from = v10915;
      var v16527 = b$$466.options;
      var v10916 = v16527.to;
      var v16528 = !v10916;
      if (v16528) {
        v10916 = n$$89;
      }
      c$$373.to = v10916;
      if (m$$40) {
        var v4119 = a$$503.effects;
        introspect(JAM.policy.p3) {
          var p$$44 = v4119.getBaseline(m$$40, n$$89)
        }
        var v22088 = c$$373.from;
        var v26762 = n$$89.height;
        var v28077 = c$$373.from;
        var v26763 = v28077.height;
        var v24847 = v26762 - v26763;
        var v24848 = p$$44.y;
        v22088.top = v24847 * v24848;
        var v22089 = c$$373.from;
        var v26764 = n$$89.width;
        var v28078 = c$$373.from;
        var v26765 = v28078.width;
        var v24849 = v26764 - v26765;
        var v24850 = p$$44.x;
        v22089.left = v24849 * v24850;
        var v16529 = c$$373.to;
        var v24851 = n$$89.height;
        var v26766 = c$$373.to;
        var v24852 = v26766.height;
        var v22090 = v24851 - v24852;
        var v22091 = p$$44.y;
        v16529.top = v22090 * v22091;
        var v10917 = c$$373.to;
        var v22092 = n$$89.width;
        var v24853 = c$$373.to;
        var v22093 = v24853.width;
        var v16530 = v22092 - v22093;
        var v16531 = p$$44.x;
        v10917.left = v16530 * v16531;
      }
      var v10918 = c$$373.from;
      var v4120 = v10918.height;
      var v4121 = n$$89.height;
      var JSCompiler_object_inline_y_100 = v4120 / v4121;
      var v10919 = c$$373.from;
      var v4122 = v10919.width;
      var v4123 = n$$89.width;
      var JSCompiler_object_inline_x_101 = v4122 / v4123;
      var v10920 = c$$373.to;
      var v4124 = v10920.height;
      var v4125 = n$$89.height;
      var JSCompiler_object_inline_y_102 = v4124 / v4125;
      var v10921 = c$$373.to;
      var v4126 = v10921.width;
      var v4127 = n$$89.width;
      var JSCompiler_object_inline_x_103 = v4126 / v4127;
      var v10922 = l$$69 == "box";
      var v16532 = !v10922;
      if (v16532) {
        v10922 = l$$69 == "both";
      }
      var v4128 = v10922;
      if (v4128) {
        var v10923 = JSCompiler_object_inline_y_100 != JSCompiler_object_inline_y_102;
        if (v10923) {
          introspect(JAM.policy.p3) {
            d$$292 = d$$292.concat(h$$123);
          }
          var v24854 = c$$373;
          var v26767 = a$$503.effects;
          var v26768 = c$$373.from;
          introspect(JAM.policy.p3) {
            var v31051 = v26767.setTransition(c$$373, h$$123, JSCompiler_object_inline_y_100, v26768)
          }
          v24854.from = v31051;
          var v22094 = c$$373;
          var v24855 = a$$503.effects;
          var v24856 = c$$373.to;
          introspect(JAM.policy.p3) {
            var v31052 = v24855.setTransition(c$$373, h$$123, JSCompiler_object_inline_y_102, v24856)
          }
          v22094.to = v31052;
        }
        var v10924 = JSCompiler_object_inline_x_101 != JSCompiler_object_inline_x_103;
        if (v10924) {
          introspect(JAM.policy.p3) {
            d$$292 = d$$292.concat(i$$180);
          }
          var v24857 = c$$373;
          var v26769 = a$$503.effects;
          var v26770 = c$$373.from;
          introspect(JAM.policy.p3) {
            var v31053 = v26769.setTransition(c$$373, i$$180, JSCompiler_object_inline_x_101, v26770)
          }
          v24857.from = v31053;
          var v22095 = c$$373;
          var v24858 = a$$503.effects;
          var v24859 = c$$373.to;
          introspect(JAM.policy.p3) {
            var v31054 = v24858.setTransition(c$$373, i$$180, JSCompiler_object_inline_x_103, v24859)
          }
          v22095.to = v31054;
        }
      }
      var v28079 = l$$69 == "content";
      var v28947 = !v28079;
      if (v28947) {
        v28079 = l$$69 == "both";
      }
      var v26771 = v28079;
      if (v26771) {
        v26771 = JSCompiler_object_inline_y_100 != JSCompiler_object_inline_y_102;
      }
      var v24860 = v26771;
      if (v24860) {
        introspect(JAM.policy.p3) {
          d$$292 = d$$292.concat(g$$152);
        }
        var v28948 = c$$373;
        var v29523 = a$$503.effects;
        var v29524 = c$$373.from;
        introspect(JAM.policy.p3) {
          var v31055 = v29523.setTransition(c$$373, g$$152, JSCompiler_object_inline_y_100, v29524)
        }
        v28948.from = v31055;
        var v28080 = c$$373;
        var v28949 = a$$503.effects;
        var v28950 = c$$373.to;
        introspect(JAM.policy.p3) {
          var v31056 = v28949.setTransition(c$$373, g$$152, JSCompiler_object_inline_y_102, v28950)
        }
        v28080.to = v31056;
      }
      var v24861 = a$$503.effects;
      var v26772;
      if (k$$60) {
        v26772 = d$$292;
      } else {
        v26772 = e$$266;
      }
      var v24862 = v26772;
      introspect(JAM.policy.p3) {
        v24861.save(c$$373, v24862);
      }
      introspect(JAM.policy.p3) {
        c$$373.show();
      }
      var v16533 = a$$503.effects;
      introspect(JAM.policy.p3) {
        v16533.createWrapper(c$$373);
      }
      introspect(JAM.policy.p3) {
        var v10925 = c$$373.css("overflow", "hidden")
      }
      var v10926 = c$$373.from;
      introspect(JAM.policy.p3) {
        v10925.css(v10926);
      }
      var v10927 = l$$69 == "content";
      var v16534 = !v10927;
      if (v16534) {
        v10927 = l$$69 == "both";
      }
      var v4129 = v10927;
      if (v4129) {
        var v24863 = ["marginTop", "marginBottom"];
        introspect(JAM.policy.p3) {
          var v22096 = h$$123.concat(v24863)
        }
        introspect(JAM.policy.p3) {
          h$$123 = v22096.concat(g$$152);
        }
        var v22097 = ["marginLeft", "marginRight"];
        introspect(JAM.policy.p3) {
          i$$180 = i$$180.concat(v22097);
        }
        introspect(JAM.policy.p3) {
          var v16535 = d$$292.concat(h$$123)
        }
        introspect(JAM.policy.p3) {
          f$$125 = v16535.concat(i$$180);
        }
        introspect(JAM.policy.p3) {
          var v10928 = c$$373.find("*[width]")
        }
        introspect(JAM.policy.p3) {
          v10928.each(v1435);
        }
      }
      var v4130 = c$$373.to;
      var v10929 = !1;
      var v10930 = b$$466.duration;
      var v16536 = b$$466.options;
      var v10931 = v16536.easing;
      var v4131 = {queue:v10929, duration:v10930, easing:v10931, complete:v1436};
      introspect(JAM.policy.p3) {
        c$$373.animate(v4130, v4131);
      }
      return;
    }
    introspect(JAM.policy.p3) {
      return this.queue(v1437);
    }
  }
  function v1433(b$$465) {
    function v1432() {
      introspect(JAM.policy.p3) {
        var c$$372 = a$$503(this)
      }
      var v4132 = !0;
      var v4133 = b$$465.options;
      introspect(JAM.policy.p3) {
        var d$$291 = a$$503.extend(v4132, {}, v4133)
      }
      var v4134 = a$$503.effects;
      var v16537 = b$$465.options;
      var v10932 = v16537.mode;
      var v16538 = !v10932;
      if (v16538) {
        v10932 = "effect";
      }
      var v4135 = v10932;
      introspect(JAM.policy.p3) {
        var e$$265 = v4134.setMode(c$$372, v4135)
      }
      var v16539 = b$$465.options;
      var v10933 = v16539.percent;
      var v4136 = parseInt(v10933, 10);
      var v10935 = !v4136;
      if (v10935) {
        var v10934;
        var v26773 = b$$465.options;
        var v24864 = v26773.percent;
        var v22098 = parseInt(v24864, 10);
        var v16541 = v22098 == 0;
        if (v16541) {
          v10934 = 0;
        } else {
          var v16540;
          var v22099 = e$$265 == "hide";
          if (v22099) {
            v16540 = 0;
          } else {
            v16540 = 100;
          }
          v10934 = v16540;
        }
        v4136 = v10934;
      }
      var f$$124 = v4136;
      var v10936 = b$$465.options;
      var v4137 = v10936.direction;
      var v10937 = !v4137;
      if (v10937) {
        v4137 = "both";
      }
      var g$$151 = v4137;
      var v4138 = b$$465.options;
      var h$$122 = v4138.origin;
      var v4139 = e$$265 != "effect";
      if (v4139) {
        var v16542 = h$$122;
        var v22100 = !v16542;
        if (v22100) {
          v16542 = ["middle", "center"];
        }
        d$$291.origin = v16542;
        d$$291.restore = !0;
      }
      introspect(JAM.policy.p3) {
        var v4140 = c$$372.height()
      }
      introspect(JAM.policy.p3) {
        var v4141 = c$$372.width()
      }
      var i$$179 = {height:v4140, width:v4141};
      var v10938 = b$$465.options;
      var v4142 = v10938.from;
      var v10940 = !v4142;
      if (v10940) {
        var v10939;
        var v16543 = e$$265 == "show";
        if (v16543) {
          v10939 = {height:0, width:0};
        } else {
          v10939 = i$$179;
        }
        v4142 = v10939;
      }
      c$$372.from = v4142;
      var v4143;
      var v10941 = g$$151 != "horizontal";
      if (v10941) {
        v4143 = f$$124 / 100;
      } else {
        v4143 = 1;
      }
      var JSCompiler_object_inline_y_94 = v4143;
      var v4144;
      var v10942 = g$$151 != "vertical";
      if (v10942) {
        v4144 = f$$124 / 100;
      } else {
        v4144 = 1;
      }
      var JSCompiler_object_inline_x_95 = v4144;
      var v28951 = i$$179.height;
      var v28081 = v28951 * JSCompiler_object_inline_y_94;
      var v28952 = i$$179.width;
      var v28082 = v28952 * JSCompiler_object_inline_x_95;
      c$$372.to = {height:v28081, width:v28082};
      var v28953 = b$$465.options;
      var v28083 = v28953.fade;
      if (v28083) {
        var v29525 = e$$265 == "show";
        if (v29525) {
          var v30116 = c$$372.from;
          v30116.opacity = 0;
          var v30117 = c$$372.to;
          v30117.opacity = 1;
        }
        var v29526 = e$$265 == "hide";
        if (v29526) {
          var v30118 = c$$372.from;
          v30118.opacity = 1;
          var v30119 = c$$372.to;
          v30119.opacity = 0;
        }
      }
      d$$291.from = c$$372.from;
      d$$291.to = c$$372.to;
      d$$291.mode = e$$265;
      var v16544 = b$$465.duration;
      var v16545 = b$$465.callback;
      introspect(JAM.policy.p3) {
        c$$372.effect("size", d$$291, v16544, v16545);
      }
      introspect(JAM.policy.p3) {
        c$$372.dequeue();
      }
      return;
    }
    introspect(JAM.policy.p3) {
      return this.queue(v1432);
    }
  }
  function v1431(b$$464) {
    function v1430() {
      introspect(JAM.policy.p3) {
        var c$$371 = a$$503(this)
      }
      var v4145 = a$$503.effects;
      var v16546 = b$$464.options;
      var v10943 = v16546.mode;
      var v16547 = !v10943;
      if (v16547) {
        v10943 = "hide";
      }
      var v4146 = v10943;
      introspect(JAM.policy.p3) {
        var d$$290 = v4145.setMode(c$$371, v4146)
      }
      var v16548 = b$$464.options;
      var v10944 = v16548.percent;
      var v4147 = parseInt(v10944, 10);
      var v10945 = !v4147;
      if (v10945) {
        v4147 = 150;
      }
      var e$$264 = v4147;
      var f$$123 = e$$264 / 100;
      introspect(JAM.policy.p3) {
        var v4148 = c$$371.height()
      }
      introspect(JAM.policy.p3) {
        var v4149 = c$$371.width()
      }
      var g$$150 = {height:v4148, width:v4149};
      var v16549 = b$$464.options;
      var v22101 = !0;
      var v24865;
      var v26774 = d$$290 == "hide";
      if (v26774) {
        v24865 = e$$264;
      } else {
        v24865 = 100;
      }
      var v22102 = v24865;
      var v24866;
      var v26777 = d$$290 == "hide";
      if (v26777) {
        v24866 = g$$150;
      } else {
        var v28084 = g$$150.height;
        var v26775 = v28084 * f$$123;
        var v28085 = g$$150.width;
        var v26776 = v28085 * f$$123;
        v24866 = {height:v26775, width:v26776};
      }
      var v22103 = v24866;
      var v16550 = {fade:v22101, mode:d$$290, percent:v22102, from:v22103};
      introspect(JAM.policy.p3) {
        a$$503.extend(v16549, v16550);
      }
      var v16551 = b$$464.options;
      var v16552 = b$$464.duration;
      var v16553 = b$$464.callback;
      introspect(JAM.policy.p3) {
        c$$371.effect("scale", v16551, v16552, v16553);
      }
      introspect(JAM.policy.p3) {
        c$$371.dequeue();
      }
      return;
    }
    introspect(JAM.policy.p3) {
      return this.queue(v1430);
    }
  }
  var v16554 = a$$503.effects;
  v16554.puff = v1431;
  var v16555 = a$$503.effects;
  v16555.scale = v1433;
  var v10946 = a$$503.effects;
  v10946.size = v1438;
  return;
}
function v1429(a$$502, b$$461) {
  function v1428(b$$462) {
    function v1427() {
      function v1426() {
        introspect(JAM.policy.p3) {
          c$$370.dequeue();
        }
        return;
      }
      function v1425() {
        var v10947 = h$$121 == 0;
        if (v10947) {
          introspect(JAM.policy.p3) {
            c$$370.hide();
          }
        }
        var v10948 = b$$462.callback;
        if (v10948) {
          var v16556 = b$$462.callback;
          introspect(JAM.policy.p3) {
            v16556.apply(this, arguments);
          }
        }
        return;
      }
      introspect(JAM.policy.p3) {
        var c$$370 = a$$502(this)
      }
      var v4150 = a$$502.effects;
      var v16557 = b$$462.options;
      var v10949 = v16557.mode;
      var v16558 = !v10949;
      if (v16558) {
        v10949 = "show";
      }
      var v4151 = v10949;
      introspect(JAM.policy.p3) {
        var d$$289 = v4150.setMode(c$$370, v4151)
      }
      var v22104 = b$$462.options;
      var v16559 = v22104.times;
      var v22105 = !v16559;
      if (v22105) {
        v16559 = 5;
      }
      var v10950 = v16559;
      var v4152 = v10950 * 2;
      var e$$263 = v4152 - 1;
      var v4153;
      var v10953 = b$$462.duration;
      if (v10953) {
        var v10951 = b$$462.duration;
        v4153 = v10951 / 2;
      } else {
        var v22106 = a$$502.fx;
        var v16560 = v22106.speeds;
        var v10952 = v16560._default;
        v4153 = v10952 / 2;
      }
      var f$$122 = v4153;
      introspect(JAM.policy.p3) {
        var g$$149 = c$$370.is(":visible")
      }
      var h$$121 = 0;
      var v16561 = !g$$149;
      if (v16561) {
        introspect(JAM.policy.p3) {
          var v22107 = c$$370.css("opacity", 0)
        }
        introspect(JAM.policy.p3) {
          v22107.show();
        }
        h$$121 = 1;
      }
      var v22108 = d$$289 == "hide";
      if (v22108) {
        v22108 = g$$149;
      }
      var v16562 = v22108;
      var v22110 = !v16562;
      if (v22110) {
        var v22109 = d$$289 == "show";
        if (v22109) {
          v22109 = !g$$149;
        }
        v16562 = v22109;
      }
      var v10954 = v16562;
      if (v10954) {
        e$$263--;
      }
      var i$$178 = 0;
      var v4154 = i$$178 < e$$263;
      for (;v4154;) {
        var v10955 = {opacity:h$$121};
        var v16563 = b$$462.options;
        var v10956 = v16563.easing;
        introspect(JAM.policy.p3) {
          c$$370.animate(v10955, f$$122, v10956);
        }
        var v10957 = h$$121 + 1;
        h$$121 = v10957 % 2;
        i$$178++;
        v4154 = i$$178 < e$$263;
      }
      var v10958 = {opacity:h$$121};
      var v16564 = b$$462.options;
      var v10959 = v16564.easing;
      introspect(JAM.policy.p3) {
        c$$370.animate(v10958, f$$122, v10959, v1425);
      }
      introspect(JAM.policy.p3) {
        var v10960 = c$$370.queue("fx", v1426)
      }
      introspect(JAM.policy.p3) {
        v10960.dequeue();
      }
      return;
    }
    introspect(JAM.policy.p3) {
      return this.queue(v1427);
    }
  }
  var v4155 = a$$502.effects;
  v4155.pulsate = v1428;
  return;
}
function v1424(a$$501, b$$459) {
  function v1423(b$$460) {
    function v1422() {
      function v1421() {
        var v24867 = e$$262 == "hide";
        if (v24867) {
          introspect(JAM.policy.p3) {
            c$$369.hide();
          }
        }
        var v24868 = a$$501.effects;
        introspect(JAM.policy.p3) {
          v24868.restore(c$$369, d$$288);
        }
        var v24869 = e$$262 == "show";
        if (v24869) {
          var v28086 = a$$501.support;
          var v26778 = v28086.opacity;
          v24869 = !v26778;
        }
        var v22111 = v24869;
        if (v22111) {
          var v24870 = this.style;
          introspect(JAM.policy.p3) {
            v24870.removeAttribute("filter");
          }
        }
        var v16565 = b$$460.callback;
        if (v16565) {
          var v22112 = b$$460.callback;
          introspect(JAM.policy.p3) {
            v22112.apply(this, arguments);
          }
        }
        introspect(JAM.policy.p3) {
          c$$369.dequeue();
        }
        return;
      }
      introspect(JAM.policy.p3) {
        var c$$369 = a$$501(this)
      }
      var d$$288 = ["backgroundImage", "backgroundColor", "opacity"];
      var v4156 = a$$501.effects;
      var v16566 = b$$460.options;
      var v10961 = v16566.mode;
      var v16567 = !v10961;
      if (v16567) {
        v10961 = "show";
      }
      var v4157 = v10961;
      introspect(JAM.policy.p3) {
        var e$$262 = v4156.setMode(c$$369, v4157)
      }
      introspect(JAM.policy.p3) {
        var v4158 = c$$369.css("backgroundColor")
      }
      var f$$121 = {backgroundColor:v4158};
      var v16568 = e$$262 == "hide";
      if (v16568) {
        f$$121.opacity = 0;
      }
      var v16569 = a$$501.effects;
      introspect(JAM.policy.p3) {
        v16569.save(c$$369, d$$288);
      }
      introspect(JAM.policy.p3) {
        var v16570 = c$$369.show()
      }
      var v26779 = b$$460.options;
      var v24871 = v26779.color;
      var v26780 = !v24871;
      if (v26780) {
        v24871 = "#ffff99";
      }
      var v22113 = v24871;
      var v16571 = {backgroundImage:"none", backgroundColor:v22113};
      introspect(JAM.policy.p3) {
        var v10962 = v16570.css(v16571)
      }
      var v16572 = !1;
      var v16573 = b$$460.duration;
      var v22114 = b$$460.options;
      var v16574 = v22114.easing;
      var v10963 = {queue:v16572, duration:v16573, easing:v16574, complete:v1421};
      introspect(JAM.policy.p3) {
        v10962.animate(f$$121, v10963);
      }
      return;
    }
    introspect(JAM.policy.p3) {
      return this.queue(v1422);
    }
  }
  var v4159 = a$$501.effects;
  v4159.highlight = v1423;
  return;
}
function v1420(a$$500, b$$457) {
  function v1419(b$$458) {
    function v1418() {
      function v1417() {
        var v24872 = e$$261 == "hide";
        if (v24872) {
          introspect(JAM.policy.p3) {
            c$$368.hide();
          }
        }
        var v24873 = a$$500.effects;
        introspect(JAM.policy.p3) {
          v24873.restore(c$$368, d$$287);
        }
        var v22115 = a$$500.effects;
        introspect(JAM.policy.p3) {
          v22115.removeWrapper(c$$368);
        }
        var v16575 = b$$458.callback;
        if (v16575) {
          var v22116 = b$$458.callback;
          var v22117 = c$$368[0];
          introspect(JAM.policy.p3) {
            v22116.apply(v22117, arguments);
          }
        }
        introspect(JAM.policy.p3) {
          c$$368.dequeue();
        }
        return;
      }
      introspect(JAM.policy.p3) {
        var c$$368 = a$$500(this)
      }
      var d$$287 = ["position", "top", "bottom", "left", "right"];
      var v4160 = a$$500.effects;
      var v16576 = b$$458.options;
      var v10964 = v16576.mode;
      var v16577 = !v10964;
      if (v16577) {
        v10964 = "hide";
      }
      var v4161 = v10964;
      introspect(JAM.policy.p3) {
        var e$$261 = v4160.setMode(c$$368, v4161)
      }
      var v10965 = b$$458.options;
      var v4162 = v10965.size;
      var v10966 = !v4162;
      if (v10966) {
        v4162 = 15;
      }
      var f$$120 = v4162;
      var v16578 = b$$458.options;
      var v10967 = v16578.horizFirst;
      var v4163 = !v10967;
      var g$$148 = !v4163;
      var v4164;
      var v10970 = b$$458.duration;
      if (v10970) {
        var v10968 = b$$458.duration;
        v4164 = v10968 / 2;
      } else {
        var v22118 = a$$500.fx;
        var v16579 = v22118.speeds;
        var v10969 = v16579._default;
        v4164 = v10969 / 2;
      }
      var h$$120 = v4164;
      var v10971 = a$$500.effects;
      introspect(JAM.policy.p3) {
        v10971.save(c$$368, d$$287);
      }
      introspect(JAM.policy.p3) {
        c$$368.show();
      }
      var v10972 = a$$500.effects;
      introspect(JAM.policy.p3) {
        var v4165 = v10972.createWrapper(c$$368)
      }
      var v4166 = {overflow:"hidden"};
      introspect(JAM.policy.p3) {
        var i$$177 = v4165.css(v4166)
      }
      var v4167 = e$$261 == "show";
      var j$$87 = v4167 != g$$148;
      var v4168;
      if (j$$87) {
        v4168 = ["width", "height"];
      } else {
        v4168 = ["height", "width"];
      }
      var k$$59 = v4168;
      var v4169;
      if (j$$87) {
        introspect(JAM.policy.p3) {
          var v10973 = i$$177.width()
        }
        introspect(JAM.policy.p3) {
          var v10974 = i$$177.height()
        }
        v4169 = [v10973, v10974];
      } else {
        introspect(JAM.policy.p3) {
          var v10975 = i$$177.height()
        }
        introspect(JAM.policy.p3) {
          var v10976 = i$$177.width()
        }
        v4169 = [v10975, v10976];
      }
      var l$$68 = v4169;
      introspect(JAM.policy.p3) {
        var m$$39 = /([0-9]+)%/.exec(f$$120)
      }
      if (m$$39) {
        var v24874 = m$$39[1];
        var v22119 = parseInt(v24874, 10);
        var v16580 = v22119 / 100;
        var v24875;
        var v26781 = e$$261 == "hide";
        if (v26781) {
          v24875 = 0;
        } else {
          v24875 = 1;
        }
        var v22120 = v24875;
        var v16581 = l$$68[v22120];
        f$$120 = v16580 * v16581;
      }
      var v10977 = e$$261 == "show";
      if (v10977) {
        var v22121;
        if (g$$148) {
          v22121 = {height:0, width:f$$120};
        } else {
          v22121 = {height:f$$120, width:0};
        }
        var v16582 = v22121;
        introspect(JAM.policy.p3) {
          i$$177.css(v16582);
        }
      }
      var n$$88 = {};
      var p$$43 = {};
      var v16583 = k$$59[0];
      var v22122;
      var v24876 = e$$261 == "show";
      if (v24876) {
        v22122 = l$$68[0];
      } else {
        v22122 = f$$120;
      }
      introspect(JAM.policy.p2) {
        n$$88[v16583] = v22122;
      }
      var v16584 = k$$59[1];
      var v22123;
      var v24877 = e$$261 == "show";
      if (v24877) {
        v22123 = l$$68[1];
      } else {
        v22123 = 0;
      }
      introspect(JAM.policy.p2) {
        p$$43[v16584] = v22123;
      }
      var v22124 = b$$458.options;
      var v16585 = v22124.easing;
      introspect(JAM.policy.p3) {
        var v10978 = i$$177.animate(n$$88, h$$120, v16585)
      }
      var v16586 = b$$458.options;
      var v10979 = v16586.easing;
      introspect(JAM.policy.p3) {
        v10978.animate(p$$43, h$$120, v10979, v1417);
      }
      return;
    }
    introspect(JAM.policy.p3) {
      return this.queue(v1418);
    }
  }
  var v4170 = a$$500.effects;
  v4170.fold = v1419;
  return;
}
function v1416(a$$499, b$$455) {
  function v1415(b$$456) {
    function v1414() {
      function v1413() {
        var v10980 = b$$456.callback;
        if (v10980) {
          var v16587 = b$$456.callback;
          introspect(JAM.policy.p3) {
            v16587.apply(this, arguments);
          }
        }
        introspect(JAM.policy.p3) {
          c$$367.dequeue();
        }
        return;
      }
      introspect(JAM.policy.p3) {
        var c$$367 = a$$499(this)
      }
      var v4171 = a$$499.effects;
      var v16588 = b$$456.options;
      var v10981 = v16588.mode;
      var v16589 = !v10981;
      if (v16589) {
        v10981 = "hide";
      }
      var v4172 = v10981;
      introspect(JAM.policy.p3) {
        var d$$286 = v4171.setMode(c$$367, v4172)
      }
      var v4173 = {opacity:d$$286};
      var v10982 = !1;
      var v10983 = b$$456.duration;
      var v16590 = b$$456.options;
      var v10984 = v16590.easing;
      var v4174 = {queue:v10982, duration:v10983, easing:v10984, complete:v1413};
      introspect(JAM.policy.p3) {
        c$$367.animate(v4173, v4174);
      }
      return;
    }
    introspect(JAM.policy.p3) {
      return this.queue(v1414);
    }
  }
  var v4175 = a$$499.effects;
  v4175.fade = v1415;
  return;
}
function v1412(a$$498, b$$453) {
  function v1411(b$$454) {
    function v1410() {
      function v1409() {
        var v22125;
        var v28087 = b$$454.options;
        var v26782 = v28087.mode;
        var v24880 = v26782 == "show";
        if (v24880) {
          var v24878 = {visibility:"visible"};
          introspect(JAM.policy.p3) {
            v22125 = e$$260.css(v24878);
          }
        } else {
          var v26783 = {visibility:"visible"};
          introspect(JAM.policy.p3) {
            var v24879 = e$$260.css(v26783)
          }
          introspect(JAM.policy.p3) {
            v22125 = v24879.hide();
          }
        }
        v22125;
        var v22126 = b$$454.callback;
        if (v22126) {
          var v24881 = b$$454.callback;
          var v24882 = e$$260[0];
          introspect(JAM.policy.p3) {
            v24881.apply(v24882);
          }
        }
        introspect(JAM.policy.p3) {
          e$$260.dequeue();
        }
        introspect(JAM.policy.p3) {
          var v10985 = a$$498("div.ui-effects-explode")
        }
        introspect(JAM.policy.p3) {
          v10985.remove();
        }
        return;
      }
      var v4176;
      var v16591 = b$$454.options;
      var v10987 = v16591.pieces;
      if (v10987) {
        var v22127 = b$$454.options;
        var v16592 = v22127.pieces;
        introspect(JAM.policy.p3) {
          var v10986 = Math.sqrt(v16592)
        }
        introspect(JAM.policy.p3) {
          v4176 = Math.round(v10986);
        }
      } else {
        v4176 = 3;
      }
      var c$$366 = v4176;
      var v4177;
      var v16593 = b$$454.options;
      var v10989 = v16593.pieces;
      if (v10989) {
        var v22128 = b$$454.options;
        var v16594 = v22128.pieces;
        introspect(JAM.policy.p3) {
          var v10988 = Math.sqrt(v16594)
        }
        introspect(JAM.policy.p3) {
          v4177 = Math.round(v10988);
        }
      } else {
        v4177 = 3;
      }
      var d$$285 = v4177;
      var v4178 = b$$454.options;
      var v10990;
      var v24883 = b$$454.options;
      var v22129 = v24883.mode;
      var v16597 = v22129 == "toggle";
      if (v16597) {
        var v16595;
        introspect(JAM.policy.p3) {
          var v24884 = a$$498(this)
        }
        introspect(JAM.policy.p3) {
          var v22130 = v24884.is(":visible")
        }
        if (v22130) {
          v16595 = "hide";
        } else {
          v16595 = "show";
        }
        v10990 = v16595;
      } else {
        var v16596 = b$$454.options;
        v10990 = v16596.mode;
      }
      v4178.mode = v10990;
      introspect(JAM.policy.p3) {
        var v10991 = a$$498(this)
      }
      introspect(JAM.policy.p3) {
        var v4179 = v10991.show()
      }
      introspect(JAM.policy.p3) {
        var e$$260 = v4179.css("visibility", "hidden")
      }
      introspect(JAM.policy.p3) {
        var f$$119 = e$$260.offset()
      }
      var v10992 = f$$119;
      var v22131 = v10992.top;
      introspect(JAM.policy.p3) {
        var v26784 = e$$260.css("marginTop")
      }
      var v24885 = parseInt(v26784, 10);
      var v26785 = !v24885;
      if (v26785) {
        v24885 = 0;
      }
      var v22132 = v24885;
      v10992.top = v22131 - v22132;
      var v10993 = f$$119;
      var v22133 = v10993.left;
      introspect(JAM.policy.p3) {
        var v26786 = e$$260.css("marginLeft")
      }
      var v24886 = parseInt(v26786, 10);
      var v26787 = !v24886;
      if (v26787) {
        v24886 = 0;
      }
      var v22134 = v24886;
      v10993.left = v22133 - v22134;
      var v4180 = !0;
      introspect(JAM.policy.p3) {
        var g$$147 = e$$260.outerWidth(v4180)
      }
      var v4181 = !0;
      introspect(JAM.policy.p3) {
        var h$$119 = e$$260.outerHeight(v4181)
      }
      var i$$176 = 0;
      var v4186 = i$$176 < c$$366;
      for (;v4186;) {
        var j$$86 = 0;
        var v4185 = j$$86 < d$$285;
        for (;v4185;) {
          introspect(JAM.policy.p3) {
            var v28088 = e$$260.clone()
          }
          introspect(JAM.policy.p3) {
            var v26788 = v28088.appendTo("body")
          }
          introspect(JAM.policy.p3) {
            var v24887 = v26788.wrap("<div></div>")
          }
          var v28089 = -j$$86;
          var v28090 = g$$147 / d$$285;
          var v26789 = v28089 * v28090;
          var v28091 = -i$$176;
          var v28092 = h$$119 / c$$366;
          var v26790 = v28091 * v28092;
          var v24888 = {position:"absolute", visibility:"visible", left:v26789, top:v26790};
          introspect(JAM.policy.p3) {
            var v22135 = v24887.css(v24888)
          }
          introspect(JAM.policy.p3) {
            var v16598 = v22135.parent()
          }
          introspect(JAM.policy.p3) {
            var v10994 = v16598.addClass("ui-effects-explode")
          }
          var v16599 = g$$147 / d$$285;
          var v16600 = h$$119 / c$$366;
          var v24889 = f$$119.left;
          var v26791 = g$$147 / d$$285;
          var v24890 = j$$86 * v26791;
          var v22136 = v24889 + v24890;
          var v24891;
          var v28954 = b$$454.options;
          var v28093 = v28954.mode;
          var v26794 = v28093 == "show";
          if (v26794) {
            var v28094 = j$$86;
            var v28955 = d$$285 / 2;
            introspect(JAM.policy.p3) {
              var v28095 = Math.floor(v28955)
            }
            var v26792 = v28094 - v28095;
            var v26793 = g$$147 / d$$285;
            v24891 = v26792 * v26793;
          } else {
            v24891 = 0;
          }
          var v22137 = v24891;
          var v16601 = v22136 + v22137;
          var v24892 = f$$119.top;
          var v26795 = h$$119 / c$$366;
          var v24893 = i$$176 * v26795;
          var v22138 = v24892 + v24893;
          var v24894;
          var v28956 = b$$454.options;
          var v28096 = v28956.mode;
          var v26798 = v28096 == "show";
          if (v26798) {
            var v28097 = i$$176;
            var v28957 = c$$366 / 2;
            introspect(JAM.policy.p3) {
              var v28098 = Math.floor(v28957)
            }
            var v26796 = v28097 - v28098;
            var v26797 = h$$119 / c$$366;
            v24894 = v26796 * v26797;
          } else {
            v24894 = 0;
          }
          var v22139 = v24894;
          var v16602 = v22138 + v22139;
          var v22140;
          var v28099 = b$$454.options;
          var v26799 = v28099.mode;
          var v24895 = v26799 == "show";
          if (v24895) {
            v22140 = 0;
          } else {
            v22140 = 1;
          }
          var v16603 = v22140;
          var v10995 = {position:"absolute", overflow:"hidden", width:v16599, height:v16600, left:v16601, top:v16602, opacity:v16603};
          introspect(JAM.policy.p3) {
            var v4182 = v10994.css(v10995)
          }
          var v22141 = f$$119.left;
          var v24896 = g$$147 / d$$285;
          var v22142 = j$$86 * v24896;
          var v16604 = v22141 + v22142;
          var v22143;
          var v28100 = b$$454.options;
          var v26800 = v28100.mode;
          var v24899 = v26800 == "show";
          if (v24899) {
            v22143 = 0;
          } else {
            var v26801 = j$$86;
            var v28101 = d$$285 / 2;
            introspect(JAM.policy.p3) {
              var v26802 = Math.floor(v28101)
            }
            var v24897 = v26801 - v26802;
            var v24898 = g$$147 / d$$285;
            v22143 = v24897 * v24898;
          }
          var v16605 = v22143;
          var v10996 = v16604 + v16605;
          var v22144 = f$$119.top;
          var v24900 = h$$119 / c$$366;
          var v22145 = i$$176 * v24900;
          var v16606 = v22144 + v22145;
          var v22146;
          var v28102 = b$$454.options;
          var v26803 = v28102.mode;
          var v24903 = v26803 == "show";
          if (v24903) {
            v22146 = 0;
          } else {
            var v26804 = i$$176;
            var v28103 = c$$366 / 2;
            introspect(JAM.policy.p3) {
              var v26805 = Math.floor(v28103)
            }
            var v24901 = v26804 - v26805;
            var v24902 = h$$119 / c$$366;
            v22146 = v24901 * v24902;
          }
          var v16607 = v22146;
          var v10997 = v16606 + v16607;
          var v16608;
          var v26806 = b$$454.options;
          var v24904 = v26806.mode;
          var v22147 = v24904 == "show";
          if (v22147) {
            v16608 = 1;
          } else {
            v16608 = 0;
          }
          var v10998 = v16608;
          var v4183 = {left:v10996, top:v10997, opacity:v10998};
          var v10999 = b$$454.duration;
          var v16609 = !v10999;
          if (v16609) {
            v10999 = 500;
          }
          var v4184 = v10999;
          introspect(JAM.policy.p3) {
            v4182.animate(v4183, v4184);
          }
          j$$86++;
          v4185 = j$$86 < d$$285;
        }
        i$$176++;
        v4186 = i$$176 < c$$366;
      }
      var v11000 = b$$454.duration;
      var v16610 = !v11000;
      if (v16610) {
        v11000 = 500;
      }
      var v4187 = v11000;
      setTimeout(v1409, v4187);
      return;
    }
    introspect(JAM.policy.p3) {
      return this.queue(v1410);
    }
  }
  var v4188 = a$$498.effects;
  v4188.explode = v1411;
  return;
}
function v1408(a$$497, b$$451) {
  function v1407(b$$452) {
    function v1406() {
      function v1405() {
        var v24905 = e$$259 == "hide";
        if (v24905) {
          introspect(JAM.policy.p3) {
            c$$365.hide();
          }
        }
        var v24906 = a$$497.effects;
        introspect(JAM.policy.p3) {
          v24906.restore(c$$365, d$$284);
        }
        var v22148 = a$$497.effects;
        introspect(JAM.policy.p3) {
          v22148.removeWrapper(c$$365);
        }
        var v16611 = b$$452.callback;
        if (v16611) {
          var v22149 = b$$452.callback;
          introspect(JAM.policy.p3) {
            v22149.apply(this, arguments);
          }
        }
        introspect(JAM.policy.p3) {
          c$$365.dequeue();
        }
        return;
      }
      introspect(JAM.policy.p3) {
        var c$$365 = a$$497(this)
      }
      var d$$284 = ["position", "top", "bottom", "left", "right", "opacity"];
      var v4189 = a$$497.effects;
      var v16612 = b$$452.options;
      var v11001 = v16612.mode;
      var v16613 = !v11001;
      if (v16613) {
        v11001 = "hide";
      }
      var v4190 = v11001;
      introspect(JAM.policy.p3) {
        var e$$259 = v4189.setMode(c$$365, v4190)
      }
      var v11002 = b$$452.options;
      var v4191 = v11002.direction;
      var v11003 = !v4191;
      if (v11003) {
        v4191 = "left";
      }
      var f$$118 = v4191;
      var v16614 = a$$497.effects;
      introspect(JAM.policy.p3) {
        v16614.save(c$$365, d$$284);
      }
      introspect(JAM.policy.p3) {
        c$$365.show();
      }
      var v11004 = a$$497.effects;
      introspect(JAM.policy.p3) {
        v11004.createWrapper(c$$365);
      }
      var v4192;
      var v16615 = f$$118 == "up";
      var v22150 = !v16615;
      if (v22150) {
        v16615 = f$$118 == "down";
      }
      var v11005 = v16615;
      if (v11005) {
        v4192 = "top";
      } else {
        v4192 = "left";
      }
      var g$$146 = v4192;
      var v4193;
      var v16616 = f$$118 == "up";
      var v22151 = !v16616;
      if (v22151) {
        v16616 = f$$118 == "left";
      }
      var v11006 = v16616;
      if (v11006) {
        v4193 = "pos";
      } else {
        v4193 = "neg";
      }
      var h$$118 = v4193;
      var v11007 = b$$452.options;
      var v4194 = v11007.distance;
      var v11009 = !v4194;
      if (v11009) {
        var v11008;
        var v16619 = g$$146 == "top";
        if (v16619) {
          var v22152 = !0;
          introspect(JAM.policy.p3) {
            var v16617 = c$$365.outerHeight(v22152)
          }
          v11008 = v16617 / 2;
        } else {
          var v22153 = !0;
          introspect(JAM.policy.p3) {
            var v16618 = c$$365.outerWidth(v22153)
          }
          v11008 = v16618 / 2;
        }
        v4194 = v11008;
      }
      var i$$175 = v4194;
      var v4195 = e$$259 == "show";
      if (v4195) {
        introspect(JAM.policy.p3) {
          var v11010 = c$$365.css("opacity", 0)
        }
        var v16620;
        var v22154 = h$$118 == "pos";
        if (v22154) {
          v16620 = -i$$175;
        } else {
          v16620 = i$$175;
        }
        var v11011 = v16620;
        introspect(JAM.policy.p3) {
          v11010.css(g$$146, v11011);
        }
      }
      var v11012;
      var v16621 = e$$259 == "show";
      if (v16621) {
        v11012 = 1;
      } else {
        v11012 = 0;
      }
      var v4196 = v11012;
      var j$$85 = {opacity:v4196};
      var v16622;
      var v22157 = e$$259 == "show";
      if (v22157) {
        var v22155;
        var v24907 = h$$118 == "pos";
        if (v24907) {
          v22155 = "+=";
        } else {
          v22155 = "-=";
        }
        v16622 = v22155;
      } else {
        var v22156;
        var v24908 = h$$118 == "pos";
        if (v24908) {
          v22156 = "-=";
        } else {
          v22156 = "+=";
        }
        v16622 = v22156;
      }
      var v11013 = v16622;
      introspect(JAM.policy.p2) {
        j$$85[g$$146] = v11013 + i$$175;
      }
      var v16623 = !1;
      var v16624 = b$$452.duration;
      var v22158 = b$$452.options;
      var v16625 = v22158.easing;
      var v11014 = {queue:v16623, duration:v16624, easing:v16625, complete:v1405};
      introspect(JAM.policy.p3) {
        c$$365.animate(j$$85, v11014);
      }
      return;
    }
    introspect(JAM.policy.p3) {
      return this.queue(v1406);
    }
  }
  var v4197 = a$$497.effects;
  v4197.drop = v1407;
  return;
}
function v1404(a$$496, b$$449) {
  function v1403(b$$450) {
    function v1402() {
      function v1401() {
        var v24909 = e$$258 == "hide";
        if (v24909) {
          introspect(JAM.policy.p3) {
            c$$364.hide();
          }
        }
        var v24910 = a$$496.effects;
        introspect(JAM.policy.p3) {
          v24910.restore(c$$364, d$$283);
        }
        var v22159 = a$$496.effects;
        introspect(JAM.policy.p3) {
          v22159.removeWrapper(c$$364);
        }
        var v16626 = b$$450.callback;
        if (v16626) {
          var v22160 = b$$450.callback;
          var v22161 = c$$364[0];
          introspect(JAM.policy.p3) {
            v22160.apply(v22161, arguments);
          }
        }
        introspect(JAM.policy.p3) {
          c$$364.dequeue();
        }
        return;
      }
      introspect(JAM.policy.p3) {
        var c$$364 = a$$496(this)
      }
      var d$$283 = ["position", "top", "bottom", "left", "right", "height", "width"];
      var v4198 = a$$496.effects;
      var v16627 = b$$450.options;
      var v11015 = v16627.mode;
      var v16628 = !v11015;
      if (v16628) {
        v11015 = "hide";
      }
      var v4199 = v11015;
      introspect(JAM.policy.p3) {
        var e$$258 = v4198.setMode(c$$364, v4199)
      }
      var v11016 = b$$450.options;
      var v4200 = v11016.direction;
      var v11017 = !v4200;
      if (v11017) {
        v4200 = "vertical";
      }
      var f$$117 = v4200;
      var v11018 = a$$496.effects;
      introspect(JAM.policy.p3) {
        v11018.save(c$$364, d$$283);
      }
      introspect(JAM.policy.p3) {
        c$$364.show();
      }
      var v11019 = a$$496.effects;
      introspect(JAM.policy.p3) {
        var v4201 = v11019.createWrapper(c$$364)
      }
      var v4202 = {overflow:"hidden"};
      introspect(JAM.policy.p3) {
        var g$$145 = v4201.css(v4202)
      }
      var v4203;
      var v22162 = c$$364[0];
      var v16629 = v22162.tagName;
      var v11020 = v16629 == "IMG";
      if (v11020) {
        v4203 = g$$145;
      } else {
        v4203 = c$$364;
      }
      var h$$117 = v4203;
      var v4204;
      var v11021 = f$$117 == "vertical";
      if (v11021) {
        v4204 = "height";
      } else {
        v4204 = "width";
      }
      var JSCompiler_object_inline_size_92 = v4204;
      var v4205;
      var v11022 = f$$117 == "vertical";
      if (v11022) {
        v4205 = "top";
      } else {
        v4205 = "left";
      }
      var JSCompiler_object_inline_position_93 = v4205;
      var v4206;
      var v11023 = f$$117 == "vertical";
      if (v11023) {
        introspect(JAM.policy.p3) {
          v4206 = h$$117.height();
        }
      } else {
        introspect(JAM.policy.p3) {
          v4206 = h$$117.width();
        }
      }
      var j$$84 = v4206;
      var v4207 = e$$258 == "show";
      if (v4207) {
        introspect(JAM.policy.p3) {
          h$$117.css(JSCompiler_object_inline_size_92, 0);
        }
        var v16630 = j$$84 / 2;
        introspect(JAM.policy.p3) {
          h$$117.css(JSCompiler_object_inline_position_93, v16630);
        }
      }
      var k$$58 = {};
      var v16631;
      var v22163 = e$$258 == "show";
      if (v22163) {
        v16631 = j$$84;
      } else {
        v16631 = 0;
      }
      introspect(JAM.policy.p2) {
        k$$58[JSCompiler_object_inline_size_92] = v16631;
      }
      var v16632;
      var v22164 = e$$258 == "show";
      if (v22164) {
        v16632 = 0;
      } else {
        v16632 = j$$84 / 2;
      }
      introspect(JAM.policy.p2) {
        k$$58[JSCompiler_object_inline_position_93] = v16632;
      }
      var v16633 = !1;
      var v16634 = b$$450.duration;
      var v22165 = b$$450.options;
      var v16635 = v22165.easing;
      var v11024 = {queue:v16633, duration:v16634, easing:v16635, complete:v1401};
      introspect(JAM.policy.p3) {
        h$$117.animate(k$$58, v11024);
      }
      return;
    }
    introspect(JAM.policy.p3) {
      return this.queue(v1402);
    }
  }
  var v4208 = a$$496.effects;
  v4208.clip = v1403;
  return;
}
function v1400(a$$495, b$$447) {
  function v1399(b$$448) {
    function v1398() {
      function v1397() {
        introspect(JAM.policy.p3) {
          c$$363.dequeue();
        }
        return;
      }
      function v1396() {
        var v16636 = a$$495.effects;
        introspect(JAM.policy.p3) {
          v16636.restore(c$$363, d$$282);
        }
        var v16637 = a$$495.effects;
        introspect(JAM.policy.p3) {
          v16637.removeWrapper(c$$363);
        }
        var v11025 = b$$448.callback;
        if (v11025) {
          var v16638 = b$$448.callback;
          introspect(JAM.policy.p3) {
            v16638.apply(this, arguments);
          }
        }
        return;
      }
      function v1395() {
        introspect(JAM.policy.p3) {
          c$$363.hide();
        }
        var v22166 = a$$495.effects;
        introspect(JAM.policy.p3) {
          v22166.restore(c$$363, d$$282);
        }
        var v16639 = a$$495.effects;
        introspect(JAM.policy.p3) {
          v16639.removeWrapper(c$$363);
        }
        var v11026 = b$$448.callback;
        if (v11026) {
          var v16640 = b$$448.callback;
          introspect(JAM.policy.p3) {
            v16640.apply(this, arguments);
          }
        }
        return;
      }
      introspect(JAM.policy.p3) {
        var c$$363 = a$$495(this)
      }
      var d$$282 = ["position", "top", "bottom", "left", "right"];
      var v4209 = a$$495.effects;
      var v16641 = b$$448.options;
      var v11027 = v16641.mode;
      var v16642 = !v11027;
      if (v16642) {
        v11027 = "effect";
      }
      var v4210 = v11027;
      introspect(JAM.policy.p3) {
        var e$$257 = v4209.setMode(c$$363, v4210)
      }
      var v11028 = b$$448.options;
      var v4211 = v11028.direction;
      var v11029 = !v4211;
      if (v11029) {
        v4211 = "up";
      }
      var f$$116 = v4211;
      var v11030 = b$$448.options;
      var v4212 = v11030.distance;
      var v11031 = !v4212;
      if (v11031) {
        v4212 = 20;
      }
      var g$$144 = v4212;
      var v11032 = b$$448.options;
      var v4213 = v11032.times;
      var v11033 = !v4213;
      if (v11033) {
        v4213 = 5;
      }
      var h$$116 = v4213;
      var v4214 = b$$448.duration;
      var v11034 = !v4214;
      if (v11034) {
        v4214 = 250;
      }
      var i$$173 = v4214;
      introspect(JAM.policy.p3) {
        var v22167 = /show|hide/.test(e$$257)
      }
      if (v22167) {
        introspect(JAM.policy.p3) {
          d$$282.push("opacity");
        }
      }
      var v22168 = a$$495.effects;
      introspect(JAM.policy.p3) {
        v22168.save(c$$363, d$$282);
      }
      introspect(JAM.policy.p3) {
        c$$363.show();
      }
      var v11035 = a$$495.effects;
      introspect(JAM.policy.p3) {
        v11035.createWrapper(c$$363);
      }
      var v4215;
      var v16643 = f$$116 == "up";
      var v22169 = !v16643;
      if (v22169) {
        v16643 = f$$116 == "down";
      }
      var v11036 = v16643;
      if (v11036) {
        v4215 = "top";
      } else {
        v4215 = "left";
      }
      var j$$83 = v4215;
      var v4216;
      var v16644 = f$$116 == "up";
      var v22170 = !v16644;
      if (v22170) {
        v16644 = f$$116 == "left";
      }
      var v11037 = v16644;
      if (v11037) {
        v4216 = "pos";
      } else {
        v4216 = "neg";
      }
      var k$$57 = v4216;
      var v11038 = b$$448.options;
      var v4217 = v11038.distance;
      var v11040 = !v4217;
      if (v11040) {
        var v11039;
        var v16647 = j$$83 == "top";
        if (v16647) {
          var v22171 = !0;
          introspect(JAM.policy.p3) {
            var v16645 = c$$363.outerHeight(v22171)
          }
          v11039 = v16645 / 3;
        } else {
          var v22172 = !0;
          introspect(JAM.policy.p3) {
            var v16646 = c$$363.outerWidth(v22172)
          }
          v11039 = v16646 / 3;
        }
        v4217 = v11039;
      }
      g$$144 = v4217;
      var v16648 = e$$257 == "show";
      if (v16648) {
        introspect(JAM.policy.p3) {
          var v22173 = c$$363.css("opacity", 0)
        }
        var v24911;
        var v26807 = k$$57 == "pos";
        if (v26807) {
          v24911 = -g$$144;
        } else {
          v24911 = g$$144;
        }
        var v22174 = v24911;
        introspect(JAM.policy.p3) {
          v22173.css(j$$83, v22174);
        }
      }
      var v16649 = e$$257 == "hide";
      if (v16649) {
        var v22175 = h$$116 * 2;
        g$$144 = g$$144 / v22175;
      }
      var v11041 = e$$257 != "hide";
      if (v11041) {
        h$$116--;
      }
      var v4218 = e$$257 == "show";
      if (v4218) {
        var l$$67 = {opacity:1};
        var v24912;
        var v26808 = k$$57 == "pos";
        if (v26808) {
          v24912 = "+=";
        } else {
          v24912 = "-=";
        }
        var v22176 = v24912;
        introspect(JAM.policy.p2) {
          l$$67[j$$83] = v22176 + g$$144;
        }
        var v22177 = i$$173 / 2;
        var v24913 = b$$448.options;
        var v22178 = v24913.easing;
        introspect(JAM.policy.p3) {
          c$$363.animate(l$$67, v22177, v22178);
        }
        g$$144 = g$$144 / 2;
        h$$116--;
      }
      var m$$38 = 0;
      var v4219 = m$$38 < h$$116;
      for (;v4219;) {
        var n$$87 = {};
        var p$$42 = {};
        var v24914;
        var v26809 = k$$57 == "pos";
        if (v26809) {
          v24914 = "-=";
        } else {
          v24914 = "+=";
        }
        var v22179 = v24914;
        introspect(JAM.policy.p2) {
          n$$87[j$$83] = v22179 + g$$144;
        }
        var v24915;
        var v26810 = k$$57 == "pos";
        if (v26810) {
          v24915 = "+=";
        } else {
          v24915 = "-=";
        }
        var v22180 = v24915;
        introspect(JAM.policy.p2) {
          p$$42[j$$83] = v22180 + g$$144;
        }
        var v22181 = i$$173 / 2;
        var v24916 = b$$448.options;
        var v22182 = v24916.easing;
        introspect(JAM.policy.p3) {
          var v16650 = c$$363.animate(n$$87, v22181, v22182)
        }
        var v16651 = i$$173 / 2;
        var v22183 = b$$448.options;
        var v16652 = v22183.easing;
        introspect(JAM.policy.p3) {
          v16650.animate(p$$42, v16651, v16652);
        }
        var v11042;
        var v16653 = e$$257 == "hide";
        if (v16653) {
          v11042 = g$$144 * 2;
        } else {
          v11042 = g$$144 / 2;
        }
        g$$144 = v11042;
        m$$38++;
        v4219 = m$$38 < h$$116;
      }
      var v4220 = e$$257 == "hide";
      if (v4220) {
        l$$67 = {opacity:0};
        var v16654;
        var v22184 = k$$57 == "pos";
        if (v22184) {
          v16654 = "-=";
        } else {
          v16654 = "+=";
        }
        var v11043 = v16654;
        introspect(JAM.policy.p2) {
          l$$67[j$$83] = v11043 + g$$144;
        }
        var v11044 = i$$173 / 2;
        var v16655 = b$$448.options;
        var v11045 = v16655.easing;
        introspect(JAM.policy.p3) {
          c$$363.animate(l$$67, v11044, v11045, v1395);
        }
      } else {
        n$$87 = {};
        p$$42 = {};
        var v22185;
        var v24917 = k$$57 == "pos";
        if (v24917) {
          v22185 = "-=";
        } else {
          v22185 = "+=";
        }
        var v16656 = v22185;
        introspect(JAM.policy.p2) {
          n$$87[j$$83] = v16656 + g$$144;
        }
        var v22186;
        var v24918 = k$$57 == "pos";
        if (v24918) {
          v22186 = "+=";
        } else {
          v22186 = "-=";
        }
        var v16657 = v22186;
        introspect(JAM.policy.p2) {
          p$$42[j$$83] = v16657 + g$$144;
        }
        var v16658 = i$$173 / 2;
        var v22187 = b$$448.options;
        var v16659 = v22187.easing;
        introspect(JAM.policy.p3) {
          var v11046 = c$$363.animate(n$$87, v16658, v16659)
        }
        var v11047 = i$$173 / 2;
        var v16660 = b$$448.options;
        var v11048 = v16660.easing;
        introspect(JAM.policy.p3) {
          v11046.animate(p$$42, v11047, v11048, v1396);
        }
      }
      introspect(JAM.policy.p3) {
        c$$363.queue("fx", v1397);
      }
      introspect(JAM.policy.p3) {
        c$$363.dequeue();
      }
      return;
    }
    introspect(JAM.policy.p3) {
      return this.queue(v1398);
    }
  }
  var v4221 = a$$495.effects;
  v4221.bounce = v1399;
  return;
}
function v1394(a$$494, b$$445) {
  function v1393(b$$446) {
    function v1392() {
      function v1391() {
        var v24919 = e$$256 == "hide";
        if (v24919) {
          introspect(JAM.policy.p3) {
            c$$362.hide();
          }
        }
        var v24920 = a$$494.effects;
        introspect(JAM.policy.p3) {
          v24920.restore(c$$362, d$$281);
        }
        var v22188 = a$$494.effects;
        introspect(JAM.policy.p3) {
          v22188.removeWrapper(c$$362);
        }
        var v16661 = b$$446.callback;
        if (v16661) {
          var v22189 = b$$446.callback;
          var v22190 = c$$362[0];
          introspect(JAM.policy.p3) {
            v22189.apply(v22190, arguments);
          }
        }
        introspect(JAM.policy.p3) {
          c$$362.dequeue();
        }
        return;
      }
      introspect(JAM.policy.p3) {
        var c$$362 = a$$494(this)
      }
      var d$$281 = ["position", "top", "bottom", "left", "right"];
      var v4222 = a$$494.effects;
      var v16662 = b$$446.options;
      var v11049 = v16662.mode;
      var v16663 = !v11049;
      if (v16663) {
        v11049 = "hide";
      }
      var v4223 = v11049;
      introspect(JAM.policy.p3) {
        var e$$256 = v4222.setMode(c$$362, v4223)
      }
      var v11050 = b$$446.options;
      var v4224 = v11050.direction;
      var v11051 = !v4224;
      if (v11051) {
        v4224 = "vertical";
      }
      var f$$115 = v4224;
      var v11052 = a$$494.effects;
      introspect(JAM.policy.p3) {
        v11052.save(c$$362, d$$281);
      }
      introspect(JAM.policy.p3) {
        c$$362.show();
      }
      var v11053 = a$$494.effects;
      introspect(JAM.policy.p3) {
        var v4225 = v11053.createWrapper(c$$362)
      }
      var v4226 = {overflow:"hidden"};
      introspect(JAM.policy.p3) {
        var g$$143 = v4225.css(v4226)
      }
      var v4227;
      var v11054 = f$$115 == "vertical";
      if (v11054) {
        v4227 = "height";
      } else {
        v4227 = "width";
      }
      var h$$115 = v4227;
      var v4228;
      var v11055 = f$$115 == "vertical";
      if (v11055) {
        introspect(JAM.policy.p3) {
          v4228 = g$$143.height();
        }
      } else {
        introspect(JAM.policy.p3) {
          v4228 = g$$143.width();
        }
      }
      var i$$172 = v4228;
      var v4229 = e$$256 == "show";
      if (v4229) {
        introspect(JAM.policy.p3) {
          g$$143.css(h$$115, 0);
        }
      }
      var j$$82 = {};
      var v11056;
      var v16664 = e$$256 == "show";
      if (v16664) {
        v11056 = i$$172;
      } else {
        v11056 = 0;
      }
      introspect(JAM.policy.p2) {
        j$$82[h$$115] = v11056;
      }
      var v11057 = b$$446.duration;
      var v16665 = b$$446.options;
      var v11058 = v16665.easing;
      introspect(JAM.policy.p3) {
        g$$143.animate(j$$82, v11057, v11058, v1391);
      }
      return;
    }
    introspect(JAM.policy.p3) {
      return this.queue(v1392);
    }
  }
  var v4230 = a$$494.effects;
  v4230.blind = v1393;
  return;
}
function v1390(a$$470, b$$414) {
  function v1389(b$$444, c$$361) {
    function v1388(a$$493) {
      var v4231;
      var v11061 = a$$493 < .5;
      if (v11061) {
        var v16666 = a$$493 * 2;
        introspect(JAM.policy.p3) {
          var v11059 = c$$361(v16666)
        }
        v4231 = v11059 / 2;
      } else {
        var v24921 = a$$493 * -2;
        var v22191 = v24921 + 2;
        introspect(JAM.policy.p3) {
          var v16667 = c$$361(v22191)
        }
        var v11060 = v16667 / -2;
        v4231 = v11060 + 1;
      }
      return v4231;
    }
    function v1387(a$$492) {
      var v11062 = 1 - a$$492;
      introspect(JAM.policy.p3) {
        var v4232 = c$$361(v11062)
      }
      return 1 - v4232;
    }
    var v16668 = a$$470.easing;
    var v16669 = "easeIn" + b$$444;
    introspect(JAM.policy.p2) {
      v16668[v16669] = c$$361;
    }
    var v16670 = a$$470.easing;
    var v16671 = "easeOut" + b$$444;
    introspect(JAM.policy.p2) {
      v16670[v16671] = v1387;
    }
    var v11063 = a$$470.easing;
    var v11064 = "easeInOut" + b$$444;
    introspect(JAM.policy.p2) {
      v11063[v11064] = v1388;
    }
    return;
  }
  function v1386(a$$491) {
    var b$$443;
    var c$$360 = 4;
    var v24922 = c$$360 = c$$360 - 1;
    introspect(JAM.policy.p3) {
      var v22192 = b$$443 = Math.pow(2, v24922)
    }
    var v16672 = v22192 - 1;
    var v11065 = v16672 / 11;
    var v4233 = a$$491 < v11065;
    for (;v4233;) {
      var v24923 = c$$360 = c$$360 - 1;
      introspect(JAM.policy.p3) {
        var v22193 = b$$443 = Math.pow(2, v24923)
      }
      var v16673 = v22193 - 1;
      var v11066 = v16673 / 11;
      v4233 = a$$491 < v11066;
    }
    var v16674 = 3 - c$$360;
    introspect(JAM.policy.p3) {
      var v11067 = Math.pow(4, v16674)
    }
    var v4234 = 1 / v11067;
    var v26811 = b$$443 * 3;
    var v24924 = v26811 - 2;
    var v22194 = v24924 / 22;
    var v16675 = v22194 - a$$491;
    introspect(JAM.policy.p3) {
      var v11068 = Math.pow(v16675, 2)
    }
    var v4235 = 7.5625 * v11068;
    return v4234 - v4235;
  }
  function v1385(a$$490) {
    var v4236 = a$$490 * a$$490;
    var v11069 = 3 * a$$490;
    var v4237 = v11069 - 2;
    return v4236 * v4237;
  }
  function v1384(a$$489) {
    var v4238;
    var v16676 = a$$489 === 0;
    var v22195 = !v16676;
    if (v22195) {
      v16676 = a$$489 === 1;
    }
    var v11072 = v16676;
    if (v11072) {
      v4238 = a$$489;
    } else {
      var v24925 = a$$489 - 1;
      var v22196 = 8 * v24925;
      introspect(JAM.policy.p3) {
        var v16677 = Math.pow(2, v22196)
      }
      var v11070 = -v16677;
      var v28104 = a$$489 - 1;
      var v26812 = v28104 * 80;
      var v24926 = v26812 - 7.5;
      var v24927 = Math.PI;
      var v22197 = v24926 * v24927;
      var v16678 = v22197 / 15;
      introspect(JAM.policy.p3) {
        var v11071 = Math.sin(v16678)
      }
      v4238 = v11070 * v11071;
    }
    return v4238;
  }
  function v1383(a$$488) {
    var v16679 = a$$488 * a$$488;
    var v11073 = 1 - v16679;
    introspect(JAM.policy.p3) {
      var v4239 = Math.sqrt(v11073)
    }
    return 1 - v4239;
  }
  function v1382(a$$487) {
    var v22198 = Math.PI;
    var v16680 = a$$487 * v22198;
    var v11074 = v16680 / 2;
    introspect(JAM.policy.p3) {
      var v4240 = Math.cos(v11074)
    }
    return 1 - v4240;
  }
  function v1381(a$$486, b$$441) {
    function v1380(b$$442) {
      var v4241 = a$$486 + 2;
      introspect(JAM.policy.p3) {
        return Math.pow(b$$442, v4241);
      }
    }
    introspect(JAM.policy.p2) {
      m$$36[b$$441] = v1380;
    }
    return;
  }
  function v1379(b$$439) {
    function v1378(a$$485, b$$440) {
      introspect(JAM.policy.p3) {
        var v11075 = c$$359.indexOf(b$$440)
      }
      var v4242 = v11075 > 0;
      if (v4242) {
        var v11076 = parseFloat(c$$359);
        d$$280 = [v11076, b$$440];
      }
      return;
    }
    introspect(JAM.policy.p3) {
      var c$$359 = this.css(b$$439)
    }
    var d$$280 = [];
    var v11077 = ["em", "px", "%", "pt"];
    introspect(JAM.policy.p3) {
      a$$470.each(v11077, v1378);
    }
    return d$$280;
  }
  function v1377(b$$438) {
    var v16681 = l$$65(b$$438);
    var v22200 = !v16681;
    if (v22200) {
      var v22199 = typeof b$$438;
      v16681 = v22199 == "boolean";
    }
    var v11078 = v16681;
    var v16682 = !v11078;
    if (v16682) {
      introspect(JAM.policy.p3) {
        v11078 = a$$470.isFunction(b$$438);
      }
    }
    var v4244 = v11078;
    if (v4244) {
      var v4243 = this.__toggle;
      introspect(JAM.policy.p3) {
        return v4243.apply(this, arguments);
      }
    }
    introspect(JAM.policy.p3) {
      var c$$358 = k$$55.apply(this, arguments)
    }
    var v11079 = c$$358[1];
    v11079.mode = "toggle";
    var v11080 = this.effect;
    introspect(JAM.policy.p3) {
      return v11080.apply(this, c$$358);
    }
  }
  function v1376(a$$484) {
    var v4246 = l$$65(a$$484);
    if (v4246) {
      var v4245 = this._hide;
      introspect(JAM.policy.p3) {
        return v4245.apply(this, arguments);
      }
    }
    introspect(JAM.policy.p3) {
      var b$$437 = k$$55.apply(this, arguments)
    }
    var v11081 = b$$437[1];
    v11081.mode = "hide";
    var v11082 = this.effect;
    introspect(JAM.policy.p3) {
      return v11082.apply(this, b$$437);
    }
  }
  function v1375(a$$483) {
    var v4248 = l$$65(a$$483);
    if (v4248) {
      var v4247 = this._show;
      introspect(JAM.policy.p3) {
        return v4247.apply(this, arguments);
      }
    }
    introspect(JAM.policy.p3) {
      var b$$436 = k$$55.apply(this, arguments)
    }
    var v11083 = b$$436[1];
    v11083.mode = "show";
    var v11084 = this.effect;
    introspect(JAM.policy.p3) {
      return v11084.apply(this, b$$436);
    }
  }
  function v1374(b$$435, c$$357, d$$279, e$$255) {
    function v1373() {
      var v4249 = g$$142.callback;
      if (v4249) {
        var v11085 = g$$142.callback;
        introspect(JAM.policy.p3) {
          v11085.call(this);
        }
      }
      return;
    }
    introspect(JAM.policy.p3) {
      var f$$114 = k$$55.apply(this, arguments)
    }
    var v4250 = f$$114[1];
    var v4251 = f$$114[2];
    var v4252 = f$$114[3];
    var g$$142 = {options:v4250, duration:v4251, callback:v4252};
    var v4253 = g$$142.options;
    var h$$114 = v4253.mode;
    var v4254 = a$$470.effects;
    var i$$171 = v4254[b$$435];
    var v4255;
    var v22201 = a$$470.fx;
    var v16683 = v22201.off;
    var v22202 = !v16683;
    if (v22202) {
      v16683 = !i$$171;
    }
    var v11087 = v16683;
    if (v11087) {
      var v11086;
      if (h$$114) {
        var v16684 = g$$142.duration;
        var v16685 = g$$142.callback;
        introspect(JAM.policy.p3) {
          v11086 = this[h$$114](v16684, v16685);
        }
      } else {
        introspect(JAM.policy.p3) {
          v11086 = this.each(v1373);
        }
      }
      v4255 = v11086;
    } else {
      introspect(JAM.policy.p3) {
        v4255 = i$$171.call(this, g$$142);
      }
    }
    return v4255;
  }
  function v1372(b$$434, c$$355, d$$278, e$$254) {
    function v1371(a$$482, c$$356) {
      introspect(JAM.policy.p3) {
        var f$$113 = b$$434.cssUnit(c$$356)
      }
      var v11088 = f$$113[0];
      var v4256 = v11088 > 0;
      if (v4256) {
        var v16686 = f$$113[0];
        var v11089 = v16686 * d$$278;
        var v11090 = f$$113[1];
        introspect(JAM.policy.p2) {
          e$$254[c$$356] = v11089 + v11090;
        }
      }
      return;
    }
    e$$254 = e$$254 || {};
    introspect(JAM.policy.p3) {
      a$$470.each(c$$355, v1371);
    }
    return e$$254;
  }
  function v1370(b$$433) {
    var c$$354;
    var d$$277 = document.activeElement;
    var v4257;
    introspect(JAM.policy.p3) {
      var v16687 = b$$433.parent()
    }
    introspect(JAM.policy.p3) {
      var v11091 = v16687.is(".ui-effects-wrapper")
    }
    if (v11091) {
      introspect(JAM.policy.p3) {
        var v22203 = b$$433.parent()
      }
      introspect(JAM.policy.p3) {
        c$$354 = v22203.replaceWith(b$$433);
      }
      var v26813 = b$$433[0];
      var v24928 = v26813 === d$$277;
      var v26815 = !v24928;
      if (v26815) {
        var v26814 = b$$433[0];
        introspect(JAM.policy.p3) {
          v24928 = a$$470.contains(v26814, d$$277);
        }
      }
      var v22204 = v24928;
      if (v22204) {
        introspect(JAM.policy.p3) {
          var v24929 = a$$470(d$$277)
        }
        introspect(JAM.policy.p3) {
          v24929.focus();
        }
      }
      v4257 = c$$354;
    } else {
      v4257 = b$$433;
    }
    return v4257;
  }
  function v1369(b$$432) {
    function v1368(a$$481, d$$276) {
      var v11092 = c$$353;
      introspect(JAM.policy.p3) {
        var v31057 = b$$432.css(d$$276)
      }
      introspect(JAM.policy.p2) {
        v11092[d$$276] = v31057;
      }
      var v22205 = c$$353[d$$276];
      var v16688 = parseInt(v22205, 10);
      var v11093 = isNaN(v16688);
      if (v11093) {
        introspect(JAM.policy.p2) {
          c$$353[d$$276] = "auto";
        }
      }
      return;
    }
    introspect(JAM.policy.p3) {
      var v11094 = b$$432.parent()
    }
    introspect(JAM.policy.p3) {
      var v4258 = v11094.is(".ui-effects-wrapper")
    }
    if (v4258) {
      introspect(JAM.policy.p3) {
        return b$$432.parent();
      }
    }
    var v11095 = !0;
    introspect(JAM.policy.p3) {
      var v4259 = b$$432.outerWidth(v11095)
    }
    var v11096 = !0;
    introspect(JAM.policy.p3) {
      var v4260 = b$$432.outerHeight(v11096)
    }
    introspect(JAM.policy.p3) {
      var v4261 = b$$432.css("float")
    }
    var c$$353 = {width:v4259, height:v4260, "float":v4261};
    introspect(JAM.policy.p3) {
      var v11097 = a$$470("<div></div>")
    }
    introspect(JAM.policy.p3) {
      var v4262 = v11097.addClass("ui-effects-wrapper")
    }
    var v4263 = {fontSize:"100%", background:"transparent", border:"none", margin:0, padding:0};
    introspect(JAM.policy.p3) {
      var d$$275 = v4262.css(v4263)
    }
    var e$$253 = document.activeElement;
    try {
    } catch (f$$112) {
      e$$253 = document.body;
    }
    introspect(JAM.policy.p3) {
      b$$432.wrap(d$$275);
    }
    var v28105 = b$$432[0];
    var v26816 = v28105 === e$$253;
    var v28107 = !v26816;
    if (v28107) {
      var v28106 = b$$432[0];
      introspect(JAM.policy.p3) {
        v26816 = a$$470.contains(v28106, e$$253);
      }
    }
    var v24930 = v26816;
    if (v24930) {
      introspect(JAM.policy.p3) {
        var v26817 = a$$470(e$$253)
      }
      introspect(JAM.policy.p3) {
        v26817.focus();
      }
    }
    introspect(JAM.policy.p3) {
      d$$275 = b$$432.parent();
    }
    var v16689;
    introspect(JAM.policy.p3) {
      var v24931 = b$$432.css("position")
    }
    var v22206 = v24931 == "static";
    if (v22206) {
      var v24932 = {position:"relative"};
      introspect(JAM.policy.p3) {
        d$$275.css(v24932);
      }
      var v24933 = {position:"relative"};
      introspect(JAM.policy.p3) {
        v16689 = b$$432.css(v24933);
      }
    } else {
      introspect(JAM.policy.p3) {
        var v28108 = b$$432.css("position")
      }
      introspect(JAM.policy.p3) {
        var v28109 = b$$432.css("z-index")
      }
      var v26818 = {position:v28108, zIndex:v28109};
      introspect(JAM.policy.p3) {
        a$$470.extend(c$$353, v26818);
      }
      var v26819 = ["top", "left", "bottom", "right"];
      introspect(JAM.policy.p3) {
        a$$470.each(v26819, v1368);
      }
      var v24934 = {position:"relative", top:0, left:0, right:"auto", bottom:"auto"};
      introspect(JAM.policy.p3) {
        v16689 = b$$432.css(v24934);
      }
    }
    v16689;
    introspect(JAM.policy.p3) {
      var v11098 = d$$275.css(c$$353)
    }
    introspect(JAM.policy.p3) {
      return v11098.show();
    }
  }
  function v1367(a$$480, b$$431) {
    var c$$352;
    var d$$274;
    var v4266 = a$$480[0];
    switch(v4266) {
      case "top":
        c$$352 = 0;
        break;
      case "middle":
        c$$352 = .5;
        break;
      case "bottom":
        c$$352 = 1;
        break;
      default:
        var v4264 = a$$480[0];
        var v4265 = b$$431.height;
        c$$352 = v4264 / v4265;
    }
    var v4269 = a$$480[1];
    switch(v4269) {
      case "left":
        d$$274 = 0;
        break;
      case "center":
        d$$274 = .5;
        break;
      case "right":
        d$$274 = 1;
        break;
      default:
        var v4267 = a$$480[1];
        var v4268 = b$$431.width;
        d$$274 = v4267 / v4268;
    }
    return {x:d$$274, y:c$$352};
  }
  function v1366(a$$479, b$$430) {
    var v11099 = b$$430 == "toggle";
    if (v11099) {
      var v16690;
      introspect(JAM.policy.p3) {
        var v22207 = a$$479.is(":hidden")
      }
      if (v22207) {
        v16690 = "show";
      } else {
        v16690 = "hide";
      }
      b$$430 = v16690;
    }
    return b$$430;
  }
  function v1365(a$$478, b$$429) {
    var c$$351 = 0;
    var v11100 = b$$429.length;
    var v4271 = c$$351 < v11100;
    for (;v4271;) {
      var v11101 = b$$429[c$$351];
      var v4270 = v11101 !== null;
      if (v4270) {
        var v11102 = b$$429[c$$351];
        var v22208 = b$$429[c$$351];
        var v16691 = "ec.storage." + v22208;
        introspect(JAM.policy.p3) {
          var v11103 = a$$478.data(v16691)
        }
        introspect(JAM.policy.p3) {
          a$$478.css(v11102, v11103);
        }
      }
      c$$351++;
      var v11104 = b$$429.length;
      v4271 = c$$351 < v11104;
    }
    return;
  }
  function v1364(a$$477, b$$428) {
    var c$$350 = 0;
    var v11105 = b$$428.length;
    var v4273 = c$$350 < v11105;
    for (;v4273;) {
      var v11106 = b$$428[c$$350];
      var v4272 = v11106 !== null;
      if (v4272) {
        var v16692 = b$$428[c$$350];
        var v11107 = "ec.storage." + v16692;
        var v22209 = a$$477[0];
        var v16693 = v22209.style;
        var v16694 = b$$428[c$$350];
        var v11108 = v16693[v16694];
        introspect(JAM.policy.p3) {
          a$$477.data(v11107, v11108);
        }
      }
      c$$350++;
      var v11109 = b$$428.length;
      v4273 = c$$350 < v11109;
    }
    return;
  }
  function v1363(b$$427, c$$349, d$$273, e$$252, f$$111) {
    var v11110 = a$$470.effects;
    var v4274 = v11110.animateClass;
    var v11111 = {add:c$$349, remove:b$$427};
    var v4275 = [v11111, d$$273, e$$252, f$$111];
    introspect(JAM.policy.p3) {
      return v4274.apply(this, v4275);
    }
  }
  function v1362(c$$348, d$$272, e$$251, f$$110, g$$141) {
    var v4276;
    var v22210 = typeof d$$272;
    var v16695 = v22210 == "boolean";
    var v22211 = !v16695;
    if (v22211) {
      v16695 = d$$272 === b$$414;
    }
    var v11115 = v16695;
    if (v11115) {
      var v11112;
      if (e$$251) {
        var v22212 = a$$470.effects;
        var v16696 = v22212.animateClass;
        var v24935;
        if (d$$272) {
          v24935 = {add:c$$348};
        } else {
          v24935 = {remove:c$$348};
        }
        var v22213 = v24935;
        var v16697 = [v22213, e$$251, f$$110, g$$141];
        introspect(JAM.policy.p3) {
          v11112 = v16696.apply(this, v16697);
        }
      } else {
        introspect(JAM.policy.p3) {
          v11112 = this._toggleClass(c$$348, d$$272);
        }
      }
      v4276 = v11112;
    } else {
      var v16698 = a$$470.effects;
      var v11113 = v16698.animateClass;
      var v16699 = {toggle:c$$348};
      var v11114 = [v16699, d$$272, e$$251, f$$110];
      introspect(JAM.policy.p3) {
        v4276 = v11113.apply(this, v11114);
      }
    }
    return v4276;
  }
  function v1361(b$$426, c$$347, d$$271, e$$250) {
    var v4277;
    if (c$$347) {
      var v16700 = a$$470.effects;
      var v11116 = v16700.animateClass;
      var v16701 = {remove:b$$426};
      var v11117 = [v16701, c$$347, d$$271, e$$250];
      introspect(JAM.policy.p3) {
        v4277 = v11116.apply(this, v11117);
      }
    } else {
      introspect(JAM.policy.p3) {
        v4277 = this._removeClass(b$$426);
      }
    }
    return v4277;
  }
  function v1360(b$$425, c$$346, d$$270, e$$249) {
    var v4278;
    if (c$$346) {
      var v16702 = a$$470.effects;
      var v11118 = v16702.animateClass;
      var v16703 = {add:b$$425};
      var v11119 = [v16703, c$$346, d$$270, e$$249];
      introspect(JAM.policy.p3) {
        v4278 = v11118.apply(this, v11119);
      }
    } else {
      introspect(JAM.policy.p3) {
        v4278 = this._addClass(b$$425);
      }
    }
    return v4278;
  }
  function v1359(b$$424, c$$343, d$$269, e$$248) {
    function v1358() {
      function v1357() {
        function v1356(a$$476, c$$345) {
          var v4279 = b$$424[c$$345];
          if (v4279) {
            var v11120 = c$$345 + "Class";
            var v11121 = b$$424[c$$345];
            introspect(JAM.policy.p3) {
              g$$140[v11120](v11121);
            }
          }
          return;
        }
        introspect(JAM.policy.p3) {
          a$$470.each(f$$109, v1356);
        }
        var v22214;
        introspect(JAM.policy.p3) {
          var v28110 = g$$140.attr("style")
        }
        var v26820 = typeof v28110;
        var v24936 = v26820 == "object";
        if (v24936) {
          introspect(JAM.policy.p3) {
            var v26821 = g$$140.attr("style")
          }
          v26821.cssText = "";
          introspect(JAM.policy.p3) {
            var v26822 = g$$140.attr("style")
          }
          v22214 = v26822.cssText = k$$56;
        } else {
          introspect(JAM.policy.p3) {
            v22214 = g$$140.attr("style", k$$56);
          }
        }
        v22214;
        if (e$$248) {
          introspect(JAM.policy.p3) {
            e$$248.apply(this, arguments);
          }
        }
        introspect(JAM.policy.p3) {
          a$$470.dequeue(this);
        }
        return;
      }
      function v1355(a$$475, c$$344) {
        var v4280 = b$$424[c$$344];
        if (v4280) {
          var v11122 = c$$344 + "Class";
          var v11123 = b$$424[c$$344];
          introspect(JAM.policy.p3) {
            g$$140[v11122](v11123);
          }
        }
        return;
      }
      introspect(JAM.policy.p3) {
        var g$$140 = a$$470(this)
      }
      introspect(JAM.policy.p3) {
        var v4281 = g$$140.attr("style")
      }
      var v11124 = !v4281;
      if (v11124) {
        v4281 = " ";
      }
      var k$$56 = v4281;
      introspect(JAM.policy.p3) {
        var v4282 = h$$113.call(this)
      }
      var l$$66 = i$$170(v4282);
      var m$$37;
      introspect(JAM.policy.p3) {
        var v4283 = g$$140.attr("class")
      }
      var v11125 = !v4283;
      if (v11125) {
        v4283 = "";
      }
      var n$$86 = v4283;
      introspect(JAM.policy.p3) {
        a$$470.each(f$$109, v1355);
      }
      introspect(JAM.policy.p3) {
        var v22215 = h$$113.call(this)
      }
      m$$37 = i$$170(v22215);
      introspect(JAM.policy.p3) {
        g$$140.attr("class", n$$86);
      }
      var v11126 = j$$81(l$$66, m$$37);
      var v16704 = !1;
      var v11127 = {queue:v16704, duration:c$$343, easing:d$$269, complete:v1357};
      introspect(JAM.policy.p3) {
        g$$140.animate(v11126, v11127);
      }
      return;
    }
    introspect(JAM.policy.p3) {
      var v11128 = a$$470.isFunction(d$$269)
    }
    if (v11128) {
      e$$248 = d$$269;
      d$$269 = null;
    }
    introspect(JAM.policy.p3) {
      return this.queue(v1358);
    }
  }
  function v1354(b$$423, e$$247) {
    function v1353(a$$474) {
      var JSCompiler_temp$$11;
      var v4287 = JSCompiler_temp$$11 = a$$474.colorInit;
      if (v4287) {
      } else {
        var JSCompiler_inline_result$$12;
        var b$$inline_70 = a$$474.elem;
        var d$$inline_71 = e$$247;
        var e$$inline_72;
        var v4286 = b$$inline_70 = b$$inline_70.parentNode;
        do {
          var v11129 = a$$470.curCSS;
          var v16705 = !v11129;
          if (v16705) {
            v11129 = a$$470.css;
          }
          var v4284 = v11129;
          introspect(JAM.policy.p3) {
            e$$inline_72 = v4284(b$$inline_70, d$$inline_71);
          }
          var v16706 = e$$inline_72 != "";
          if (v16706) {
            v16706 = e$$inline_72 != "transparent";
          }
          var v11130 = v16706;
          var v16707 = !v11130;
          if (v16707) {
            introspect(JAM.policy.p3) {
              v11130 = a$$470.nodeName(b$$inline_70, "body");
            }
          }
          var v4285 = v11130;
          if (v4285) {
            break;
          }
          d$$inline_71 = "backgroundColor";
          v4286 = b$$inline_70 = b$$inline_70.parentNode;
        } while (v4286);
        JSCompiler_inline_result$$12 = c$$337(e$$inline_72);
        a$$474.start = JSCompiler_inline_result$$12;
        var v16708 = a$$474.end;
        var v31058 = c$$337(v16708);
        a$$474.end = v31058;
        JSCompiler_temp$$11 = a$$474.colorInit = !0;
      }
      JSCompiler_temp$$11;
      var v16709 = a$$474.elem;
      var v11131 = v16709.style;
      var v11132 = e$$247;
      var v30462 = a$$474.pos;
      var v30675 = a$$474.end;
      var v30595 = v30675[0];
      var v30676 = a$$474.start;
      var v30596 = v30676[0];
      var v30463 = v30595 - v30596;
      var v30323 = v30462 * v30463;
      var v30464 = a$$474.start;
      var v30324 = v30464[0];
      var v30120 = v30323 + v30324;
      var v29865 = parseInt(v30120, 10);
      introspect(JAM.policy.p3) {
        var v29527 = Math.min(v29865, 255)
      }
      introspect(JAM.policy.p3) {
        var v28958 = Math.max(v29527, 0)
      }
      var v28111 = "rgb(" + v28958;
      var v26823 = v28111 + ",";
      var v30121 = a$$474.pos;
      var v30465 = a$$474.end;
      var v30325 = v30465[1];
      var v30466 = a$$474.start;
      var v30326 = v30466[1];
      var v30122 = v30325 - v30326;
      var v29866 = v30121 * v30122;
      var v30123 = a$$474.start;
      var v29867 = v30123[1];
      var v29528 = v29866 + v29867;
      var v28959 = parseInt(v29528, 10);
      introspect(JAM.policy.p3) {
        var v28112 = Math.min(v28959, 255)
      }
      introspect(JAM.policy.p3) {
        var v26824 = Math.max(v28112, 0)
      }
      var v24937 = v26823 + v26824;
      var v22216 = v24937 + ",";
      var v29529 = a$$474.pos;
      var v30124 = a$$474.end;
      var v29868 = v30124[2];
      var v30125 = a$$474.start;
      var v29869 = v30125[2];
      var v29530 = v29868 - v29869;
      var v28960 = v29529 * v29530;
      var v29531 = a$$474.start;
      var v28961 = v29531[2];
      var v28113 = v28960 + v28961;
      var v26825 = parseInt(v28113, 10);
      introspect(JAM.policy.p3) {
        var v24938 = Math.min(v26825, 255)
      }
      introspect(JAM.policy.p3) {
        var v22217 = Math.max(v24938, 0)
      }
      var v16710 = v22216 + v22217;
      introspect(JAM.policy.p2) {
        v11131[v11132] = v16710 + ")";
      }
      return;
    }
    var v11133 = a$$470.fx;
    var v4288 = v11133.step;
    introspect(JAM.policy.p2) {
      v4288[e$$247] = v1353;
    }
    return;
  }
  function c$$337(b$$415) {
    var c$$338;
    var v4289;
    var v22218 = b$$415;
    if (v22218) {
      var v24939 = b$$415.constructor;
      v22218 = v24939 == Array;
    }
    var v16711 = v22218;
    if (v16711) {
      var v22219 = b$$415.length;
      v16711 = v22219 == 3;
    }
    var v11135 = v16711;
    if (v11135) {
      v4289 = b$$415;
    } else {
      var v11134;
      introspect(JAM.policy.p3) {
        var v16716 = c$$338 = /rgb\(\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*\)/.exec(b$$415)
      }
      if (v16716) {
        var v22220 = c$$338[1];
        var v16712 = parseInt(v22220, 10);
        var v22221 = c$$338[2];
        var v16713 = parseInt(v22221, 10);
        var v22222 = c$$338[3];
        var v16714 = parseInt(v22222, 10);
        v11134 = [v16712, v16713, v16714];
      } else {
        var v16715;
        introspect(JAM.policy.p3) {
          var v22227 = c$$338 = /rgb\(\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*\)/.exec(b$$415)
        }
        if (v22227) {
          var v26826 = c$$338[1];
          var v24940 = parseFloat(v26826);
          var v22223 = v24940 * 2.55;
          var v26827 = c$$338[2];
          var v24941 = parseFloat(v26827);
          var v22224 = v24941 * 2.55;
          var v26828 = c$$338[3];
          var v24942 = parseFloat(v26828);
          var v22225 = v24942 * 2.55;
          v16715 = [v22223, v22224, v22225];
        } else {
          var v22226;
          introspect(JAM.policy.p3) {
            var v24947 = c$$338 = /#([a-fA-F0-9]{2})([a-fA-F0-9]{2})([a-fA-F0-9]{2})/.exec(b$$415)
          }
          if (v24947) {
            var v26829 = c$$338[1];
            var v24943 = parseInt(v26829, 16);
            var v26830 = c$$338[2];
            var v24944 = parseInt(v26830, 16);
            var v26831 = c$$338[3];
            var v24945 = parseInt(v26831, 16);
            v22226 = [v24943, v24944, v24945];
          } else {
            var v24946;
            introspect(JAM.policy.p3) {
              var v26836 = c$$338 = /#([a-fA-F0-9])([a-fA-F0-9])([a-fA-F0-9])/.exec(b$$415)
            }
            if (v26836) {
              var v28962 = c$$338[1];
              var v28963 = c$$338[1];
              var v28114 = v28962 + v28963;
              var v26832 = parseInt(v28114, 16);
              var v28964 = c$$338[2];
              var v28965 = c$$338[2];
              var v28115 = v28964 + v28965;
              var v26833 = parseInt(v28115, 16);
              var v28966 = c$$338[3];
              var v28967 = c$$338[3];
              var v28116 = v28966 + v28967;
              var v26834 = parseInt(v28116, 16);
              v24946 = [v26832, v26833, v26834];
            } else {
              var v26835;
              introspect(JAM.policy.p3) {
                var v28119 = c$$338 = /rgba\(0, 0, 0, 0\)/.exec(b$$415)
              }
              if (v28119) {
                v26835 = e$$243.transparent;
              } else {
                var v28117 = e$$243;
                introspect(JAM.policy.p3) {
                  var v28968 = a$$470.trim(b$$415)
                }
                introspect(JAM.policy.p3) {
                  var v28118 = v28968.toLowerCase()
                }
                v26835 = v28117[v28118];
              }
              v24946 = v26835;
            }
            v22226 = v24946;
          }
          v16715 = v22226;
        }
        v11134 = v16715;
      }
      v4289 = v11134;
    }
    return v4289;
  }
  function h$$113() {
    function v1352(a$$472, b$$418) {
      introspect(JAM.policy.p3) {
        return b$$418.toUpperCase();
      }
    }
    var v4290;
    var v11137 = document.defaultView;
    if (v11137) {
      var v11136 = document.defaultView;
      introspect(JAM.policy.p3) {
        v4290 = v11136.getComputedStyle(this, null);
      }
    } else {
      v4290 = this.currentStyle;
    }
    var a$$471 = v4290;
    var b$$417 = {};
    var c$$339;
    var d$$265;
    var v22228 = a$$471;
    if (v22228) {
      v22228 = a$$471.length;
    }
    var v16717 = v22228;
    if (v16717) {
      v16717 = a$$471[0];
    }
    var v11138 = v16717;
    if (v11138) {
      var v16718 = a$$471[0];
      v11138 = a$$471[v16718];
    }
    var v4293 = v11138;
    if (v4293) {
      var e$$245 = a$$471.length;
      var v4291 = e$$245;
      e$$245 = e$$245 - 1;
      for (;v4291;) {
        c$$339 = a$$471[e$$245];
        var v22229 = a$$471[c$$339];
        var v16719 = typeof v22229;
        var v11139 = v16719 == "string";
        if (v11139) {
          introspect(JAM.policy.p3) {
            d$$265 = c$$339.replace(/\-(\w)/g, v1352);
          }
          introspect(JAM.policy.p2) {
            b$$417[d$$265] = a$$471[c$$339];
          }
        }
        v4291 = e$$245;
        e$$245 = e$$245 - 1;
      }
    } else {
      for (c$$339 in a$$471) {
        var v16720 = a$$471[c$$339];
        var v11140 = typeof v16720;
        var v4292 = v11140 == "string";
        if (v4292) {
          introspect(JAM.policy.p2) {
            b$$417[c$$339] = a$$471[c$$339];
          }
        }
      }
    }
    return b$$417;
  }
  function i$$170(b$$419) {
    var c$$340;
    var d$$266;
    for (c$$340 in b$$419) {
      d$$266 = b$$419[c$$340];
      var v26837 = d$$266 == null;
      var v28120 = !v26837;
      if (v28120) {
        introspect(JAM.policy.p3) {
          v26837 = a$$470.isFunction(d$$266);
        }
      }
      var v24948 = v26837;
      var v26838 = !v24948;
      if (v26838) {
        v24948 = c$$340 in g$$139;
      }
      var v22230 = v24948;
      var v24949 = !v22230;
      if (v24949) {
        introspect(JAM.policy.p3) {
          v22230 = /scrollbar/.test(c$$340);
        }
      }
      var v16721 = v22230;
      var v22232 = !v16721;
      if (v22232) {
        introspect(JAM.policy.p3) {
          var v24950 = /color/i.test(c$$340)
        }
        var v22231 = !v24950;
        if (v22231) {
          var v24951 = parseFloat(d$$266);
          v22231 = isNaN(v24951);
        }
        v16721 = v22231;
      }
      var v11141 = v16721;
      if (v11141) {
        delete b$$419[c$$340];
      }
    }
    return b$$419;
  }
  function j$$81(a$$473, b$$420) {
    var c$$341 = {_:0};
    var d$$267;
    for (d$$267 in b$$420) {
      var v11142 = a$$473[d$$267];
      var v11143 = b$$420[d$$267];
      var v4294 = v11142 != v11143;
      if (v4294) {
        introspect(JAM.policy.p2) {
          c$$341[d$$267] = b$$420[d$$267];
        }
      }
    }
    return c$$341;
  }
  function k$$55(b$$421, c$$342, d$$268, e$$246) {
    var v16722 = typeof b$$421;
    var v11144 = v16722 == "object";
    if (v11144) {
      e$$246 = c$$342;
      d$$268 = null;
      c$$342 = b$$421;
      b$$421 = c$$342.effect;
    }
    introspect(JAM.policy.p3) {
      var v11145 = a$$470.isFunction(c$$342)
    }
    if (v11145) {
      e$$246 = c$$342;
      d$$268 = null;
      c$$342 = {};
    }
    var v16723 = typeof c$$342;
    var v11146 = v16723 == "number";
    var v16725 = !v11146;
    if (v16725) {
      var v22233 = a$$470.fx;
      var v16724 = v22233.speeds;
      v11146 = v16724[c$$342];
    }
    var v4295 = v11146;
    if (v4295) {
      e$$246 = d$$268;
      d$$268 = c$$342;
      c$$342 = {};
    }
    introspect(JAM.policy.p3) {
      var v26839 = a$$470.isFunction(d$$268)
    }
    if (v26839) {
      e$$246 = d$$268;
      d$$268 = null;
    }
    c$$342 = c$$342 || {};
    var v24952 = d$$268;
    var v26840 = !v24952;
    if (v26840) {
      v24952 = c$$342.duration;
    }
    d$$268 = v24952;
    var v22234;
    var v26841 = a$$470.fx;
    var v24954 = v26841.off;
    if (v24954) {
      v22234 = 0;
    } else {
      var v24953;
      var v28121 = typeof d$$268;
      var v26843 = v28121 == "number";
      if (v26843) {
        v24953 = d$$268;
      } else {
        var v26842;
        var v29532 = a$$470.fx;
        var v28969 = v29532.speeds;
        var v28124 = d$$268 in v28969;
        if (v28124) {
          var v28970 = a$$470.fx;
          var v28122 = v28970.speeds;
          v26842 = v28122[d$$268];
        } else {
          var v28971 = a$$470.fx;
          var v28123 = v28971.speeds;
          v26842 = v28123._default;
        }
        v24953 = v26842;
      }
      v22234 = v24953;
    }
    d$$268 = v22234;
    var v16726 = e$$246;
    var v22235 = !v16726;
    if (v22235) {
      v16726 = c$$342.complete;
    }
    e$$246 = v16726;
    return [b$$421, c$$342, d$$268, e$$246];
  }
  function l$$65(b$$422) {
    var v4296;
    var v22236 = !b$$422;
    var v24956 = !v22236;
    if (v24956) {
      var v24955 = typeof b$$422;
      v22236 = v24955 == "number";
    }
    var v16727 = v22236;
    var v22238 = !v16727;
    if (v22238) {
      var v24957 = a$$470.fx;
      var v22237 = v24957.speeds;
      v16727 = v22237[b$$422];
    }
    var v11148 = v16727;
    if (v11148) {
      v4296 = !0;
    } else {
      var v11147;
      var v24958 = typeof b$$422;
      var v22239 = v24958 == "string";
      if (v22239) {
        var v26844 = a$$470.effects;
        var v24959 = v26844[b$$422];
        v22239 = !v24959;
      }
      var v16728 = v22239;
      if (v16728) {
        v11147 = !0;
      } else {
        v11147 = !1;
      }
      v4296 = v11147;
    }
    return v4296;
  }
  a$$470.effects = {};
  var v11149 = ["backgroundColor", "borderBottomColor", "borderLeftColor", "borderRightColor", "borderTopColor", "borderColor", "color", "outlineColor"];
  introspect(JAM.policy.p3) {
    a$$470.each(v11149, v1354);
  }
  var v4297 = [0, 255, 255];
  var v4298 = [240, 255, 255];
  var v4299 = [245, 245, 220];
  var v4300 = [0, 0, 0];
  var v4301 = [0, 0, 255];
  var v4302 = [165, 42, 42];
  var v4303 = [0, 255, 255];
  var v4304 = [0, 0, 139];
  var v4305 = [0, 139, 139];
  var v4306 = [169, 169, 169];
  var v4307 = [0, 100, 0];
  var v4308 = [189, 183, 107];
  var v4309 = [139, 0, 139];
  var v4310 = [85, 107, 47];
  var v4311 = [255, 140, 0];
  var v4312 = [153, 50, 204];
  var v4313 = [139, 0, 0];
  var v4314 = [233, 150, 122];
  var v4315 = [148, 0, 211];
  var v4316 = [255, 0, 255];
  var v4317 = [255, 215, 0];
  var v4318 = [0, 128, 0];
  var v4319 = [75, 0, 130];
  var v4320 = [240, 230, 140];
  var v4321 = [173, 216, 230];
  var v4322 = [224, 255, 255];
  var v4323 = [144, 238, 144];
  var v4324 = [211, 211, 211];
  var v4325 = [255, 182, 193];
  var v4326 = [255, 255, 224];
  var v4327 = [0, 255, 0];
  var v4328 = [255, 0, 255];
  var v4329 = [128, 0, 0];
  var v4330 = [0, 0, 128];
  var v4331 = [128, 128, 0];
  var v4332 = [255, 165, 0];
  var v4333 = [255, 192, 203];
  var v4334 = [128, 0, 128];
  var v4335 = [128, 0, 128];
  var v4336 = [255, 0, 0];
  var v4337 = [192, 192, 192];
  var v4338 = [255, 255, 255];
  var v4339 = [255, 255, 0];
  var v4340 = [255, 255, 255];
  var e$$243 = {aqua:v4297, azure:v4298, beige:v4299, black:v4300, blue:v4301, brown:v4302, cyan:v4303, darkblue:v4304, darkcyan:v4305, darkgrey:v4306, darkgreen:v4307, darkkhaki:v4308, darkmagenta:v4309, darkolivegreen:v4310, darkorange:v4311, darkorchid:v4312, darkred:v4313, darksalmon:v4314, darkviolet:v4315, fuchsia:v4316, gold:v4317, green:v4318, indigo:v4319, khaki:v4320, lightblue:v4321, lightcyan:v4322, lightgreen:v4323, lightgrey:v4324, lightpink:v4325, lightyellow:v4326, lime:v4327, magenta:v4328, 
  maroon:v4329, navy:v4330, olive:v4331, orange:v4332, pink:v4333, purple:v4334, violet:v4335, red:v4336, silver:v4337, white:v4338, yellow:v4339, transparent:v4340};
  var f$$109 = ["add", "remove", "toggle"];
  var g$$139 = {border:1, borderBottom:1, borderColor:1, borderLeft:1, borderRight:1, borderTop:1, borderWidth:1, margin:1, padding:1};
  var v22240 = a$$470.effects;
  v22240.animateClass = v1359;
  var v22241 = a$$470.fn;
  var v26845 = a$$470.fn;
  var v24960 = v26845.addClass;
  var v26846 = a$$470.fn;
  var v24961 = v26846.removeClass;
  var v26847 = a$$470.fn;
  var v24962 = v26847.toggleClass;
  var v22242 = {_addClass:v24960, addClass:v1360, _removeClass:v24961, removeClass:v1361, _toggleClass:v24962, toggleClass:v1362, switchClass:v1363};
  introspect(JAM.policy.p3) {
    v22241.extend(v22242);
  }
  var v16729 = a$$470.effects;
  var v16730 = {version:"1.8.24", save:v1364, restore:v1365, setMode:v1366, getBaseline:v1367, createWrapper:v1369, removeWrapper:v1370, setTransition:v1372};
  introspect(JAM.policy.p3) {
    a$$470.extend(v16729, v16730);
  }
  var v11150 = a$$470.fn;
  var v22243 = a$$470.fn;
  var v16731 = v22243.show;
  var v22244 = a$$470.fn;
  var v16732 = v22244.hide;
  var v22245 = a$$470.fn;
  var v16733 = v22245.toggle;
  var v11151 = {effect:v1374, _show:v16731, show:v1375, _hide:v16732, hide:v1376, __toggle:v16733, toggle:v1377, cssUnit:v1379};
  introspect(JAM.policy.p3) {
    v11150.extend(v11151);
  }
  var m$$36 = {};
  var v16734 = ["Quad", "Cubic", "Quart", "Quint", "Expo"];
  introspect(JAM.policy.p3) {
    a$$470.each(v16734, v1381);
  }
  var v16735 = {Sine:v1382, Circ:v1383, Elastic:v1384, Back:v1385, Bounce:v1386};
  introspect(JAM.policy.p3) {
    a$$470.extend(m$$36, v16735);
  }
  introspect(JAM.policy.p3) {
    a$$470.each(m$$36, v1389);
  }
  return;
}
function v1351(a$$452, b$$380) {
  function v1350(b$$413) {
    var c$$336 = b$$413 || this;
    var v4341 = c$$336.helper;
    var v11152 = c$$336.placeholder;
    var v16736 = !v11152;
    if (v16736) {
      introspect(JAM.policy.p3) {
        v11152 = a$$452([]);
      }
    }
    var v4342 = v11152;
    var v4343 = c$$336.position;
    var v4344 = c$$336.originalPosition;
    var v4345 = c$$336.positionAbs;
    var v4346 = c$$336.currentItem;
    var v11153;
    if (b$$413) {
      v11153 = b$$413.element;
    } else {
      v11153 = null;
    }
    var v4347 = v11153;
    return {helper:v4341, placeholder:v4342, position:v4343, originalPosition:v4344, offset:v4345, item:v4346, sender:v4347};
  }
  function v1349() {
    var v24963 = a$$452.Widget;
    var v22246 = v24963.prototype;
    var v16737 = v22246._trigger;
    introspect(JAM.policy.p3) {
      var v11154 = v16737.apply(this, arguments)
    }
    var v11155 = !1;
    var v4348 = v11154 === v11155;
    if (v4348) {
      introspect(JAM.policy.p3) {
        this.cancel();
      }
    }
    return;
  }
  function v1348(b$$408, c$$335) {
    function v1347(a$$469) {
      function v1346(b$$412) {
        introspect(JAM.policy.p3) {
          var v4349 = this._uiHash(this)
        }
        introspect(JAM.policy.p3) {
          a$$469._trigger("out", b$$412, v4349);
        }
        return;
      }
      return v1346;
    }
    function v1345(a$$468) {
      function v1344(b$$411) {
        introspect(JAM.policy.p3) {
          var v4350 = this._uiHash(this)
        }
        introspect(JAM.policy.p3) {
          a$$468._trigger("deactivate", b$$411, v4350);
        }
        return;
      }
      return v1344;
    }
    function v1343(a$$467) {
      function v1342(b$$410) {
        introspect(JAM.policy.p3) {
          var v4351 = this._uiHash(this)
        }
        introspect(JAM.policy.p3) {
          a$$467._trigger("update", b$$410, v4351);
        }
        return;
      }
      return v1342;
    }
    function v1341(a$$466) {
      function v1340(b$$409) {
        introspect(JAM.policy.p3) {
          var v4352 = this._uiHash(this)
        }
        introspect(JAM.policy.p3) {
          a$$466._trigger("receive", b$$409, v4352);
        }
        return;
      }
      return v1340;
    }
    function v1339(a$$465) {
      introspect(JAM.policy.p3) {
        var v4353 = this._uiHash()
      }
      introspect(JAM.policy.p3) {
        this._trigger("remove", a$$465, v4353);
      }
      return;
    }
    function v1338(a$$464) {
      introspect(JAM.policy.p3) {
        var v4354 = this._uiHash()
      }
      introspect(JAM.policy.p3) {
        this._trigger("update", a$$464, v4354);
      }
      return;
    }
    function v1337(a$$463) {
      var v11156 = this.fromOutside;
      introspect(JAM.policy.p3) {
        var v4355 = this._uiHash(v11156)
      }
      introspect(JAM.policy.p3) {
        this._trigger("receive", a$$463, v4355);
      }
      return;
    }
    this.reverting = !1;
    var d$$262 = [];
    var e$$242 = this;
    var v22247 = this._noFinalSort;
    var v16738 = !v22247;
    if (v16738) {
      var v24964 = this.currentItem;
      introspect(JAM.policy.p3) {
        var v22248 = v24964.parent()
      }
      v16738 = v22248.length;
    }
    var v11157 = v16738;
    if (v11157) {
      var v16739 = this.placeholder;
      var v16740 = this.currentItem;
      introspect(JAM.policy.p3) {
        v16739.before(v16740);
      }
    }
    this._noFinalSort = null;
    var v16741 = this.helper;
    var v11158 = v16741[0];
    var v16742 = this.currentItem;
    var v11159 = v16742[0];
    var v4361 = v11158 == v11159;
    if (v4361) {
      var f$$108;
      var v4358 = this._storedCSS;
      for (f$$108 in v4358) {
        var v22249 = this._storedCSS;
        var v16743 = v22249[f$$108];
        var v11160 = v16743 == "auto";
        var v16745 = !v11160;
        if (v16745) {
          var v22250 = this._storedCSS;
          var v16744 = v22250[f$$108];
          v11160 = v16744 == "static";
        }
        var v4357 = v11160;
        if (v4357) {
          var v4356 = this._storedCSS;
          introspect(JAM.policy.p2) {
            v4356[f$$108] = "";
          }
        }
      }
      var v11161 = this.currentItem;
      var v11162 = this._storedCSS;
      introspect(JAM.policy.p3) {
        var v4359 = v11161.css(v11162)
      }
      introspect(JAM.policy.p3) {
        v4359.removeClass("ui-sortable-helper");
      }
    } else {
      var v4360 = this.currentItem;
      introspect(JAM.policy.p3) {
        v4360.show();
      }
    }
    var v22251 = this.fromOutside;
    if (v22251) {
      v22251 = !c$$335;
    }
    var v16746 = v22251;
    if (v16746) {
      introspect(JAM.policy.p3) {
        d$$262.push(v1337);
      }
    }
    var v26848 = this.fromOutside;
    var v28127 = !v26848;
    if (v28127) {
      var v28972 = this.domPosition;
      var v28125 = v28972.prev;
      var v29870 = this.currentItem;
      introspect(JAM.policy.p3) {
        var v29533 = v29870.prev()
      }
      introspect(JAM.policy.p3) {
        var v28973 = v29533.not(".ui-sortable-helper")
      }
      var v28126 = v28973[0];
      v26848 = v28125 != v28126;
    }
    var v24965 = v26848;
    var v26851 = !v24965;
    if (v26851) {
      var v28128 = this.domPosition;
      var v26849 = v28128.parent;
      var v28974 = this.currentItem;
      introspect(JAM.policy.p3) {
        var v28129 = v28974.parent()
      }
      var v26850 = v28129[0];
      v24965 = v26849 != v26850;
    }
    var v22252 = v24965;
    if (v22252) {
      v22252 = !c$$335;
    }
    var v16747 = v22252;
    if (v16747) {
      introspect(JAM.policy.p3) {
        d$$262.push(v1338);
      }
    }
    var v16748 = this.currentContainer;
    var v11163 = this !== v16748;
    if (v11163) {
      var v22253 = !c$$335;
      if (v22253) {
        introspect(JAM.policy.p3) {
          d$$262.push(v1339);
        }
        var v28130 = this.currentContainer;
        introspect(JAM.policy.p3) {
          var v26852 = v1341.call(this, v28130)
        }
        introspect(JAM.policy.p3) {
          d$$262.push(v26852);
        }
        var v26853 = this.currentContainer;
        introspect(JAM.policy.p3) {
          var v24966 = v1343.call(this, v26853)
        }
        introspect(JAM.policy.p3) {
          d$$262.push(v24966);
        }
      }
    }
    var v11164 = this.containers;
    var v4362 = v11164.length;
    f$$108 = v4362 - 1;
    var v4363 = f$$108 >= 0;
    for (;v4363;) {
      var v16750 = !c$$335;
      if (v16750) {
        var v24967 = this.containers;
        var v22254 = v24967[f$$108];
        introspect(JAM.policy.p3) {
          var v16749 = v1345.call(this, v22254)
        }
        introspect(JAM.policy.p3) {
          d$$262.push(v16749);
        }
      }
      var v24968 = this.containers;
      var v22255 = v24968[f$$108];
      var v16751 = v22255.containerCache;
      var v11165 = v16751.over;
      if (v11165) {
        var v26854 = this.containers;
        var v24969 = v26854[f$$108];
        introspect(JAM.policy.p3) {
          var v22256 = v1347.call(this, v24969)
        }
        introspect(JAM.policy.p3) {
          d$$262.push(v22256);
        }
        var v26855 = this.containers;
        var v24970 = v26855[f$$108];
        var v22257 = v24970.containerCache;
        v22257.over = 0;
      }
      f$$108--;
      v4363 = f$$108 >= 0;
    }
    var v22258 = this._storedCursor;
    if (v22258) {
      introspect(JAM.policy.p3) {
        var v24971 = a$$452("body")
      }
      var v24972 = this._storedCursor;
      introspect(JAM.policy.p3) {
        v24971.css("cursor", v24972);
      }
    }
    var v22259 = this._storedOpacity;
    if (v22259) {
      var v24973 = this.helper;
      var v24974 = this._storedOpacity;
      introspect(JAM.policy.p3) {
        v24973.css("opacity", v24974);
      }
    }
    var v16752 = this._storedZIndex;
    if (v16752) {
      var v22260 = this.helper;
      var v24975;
      var v28131 = this._storedZIndex;
      var v26856 = v28131 == "auto";
      if (v26856) {
        v24975 = "";
      } else {
        v24975 = this._storedZIndex;
      }
      var v22261 = v24975;
      introspect(JAM.policy.p3) {
        v22260.css("zIndex", v22261);
      }
    }
    this.dragging = !1;
    var v4369 = this.cancelHelperRemoval;
    if (v4369) {
      var v4368 = !c$$335;
      if (v4368) {
        introspect(JAM.policy.p3) {
          var v4364 = this._uiHash()
        }
        introspect(JAM.policy.p3) {
          this._trigger("beforeStop", b$$408, v4364);
        }
        f$$108 = 0;
        var v11166 = d$$262.length;
        var v4366 = f$$108 < v11166;
        for (;v4366;) {
          var v4365 = d$$262[f$$108];
          introspect(JAM.policy.p3) {
            v4365.call(this, b$$408);
          }
          f$$108++;
          var v11167 = d$$262.length;
          v4366 = f$$108 < v11167;
        }
        introspect(JAM.policy.p3) {
          var v4367 = this._uiHash()
        }
        introspect(JAM.policy.p3) {
          this._trigger("stop", b$$408, v4367);
        }
      }
      this.fromOutside = !1;
      return !1;
    }
    var v24977 = !c$$335;
    if (v24977) {
      introspect(JAM.policy.p3) {
        var v24976 = this._uiHash()
      }
      introspect(JAM.policy.p3) {
        this._trigger("beforeStop", b$$408, v24976);
      }
    }
    var v26857 = this.placeholder;
    var v24978 = v26857[0];
    var v22262 = v24978.parentNode;
    var v24979 = this.placeholder;
    var v22263 = v24979[0];
    introspect(JAM.policy.p3) {
      v22262.removeChild(v22263);
    }
    var v24980 = this.helper;
    var v22264 = v24980[0];
    var v24981 = this.currentItem;
    var v22265 = v24981[0];
    var v16753 = v22264 != v22265;
    if (v16753) {
      var v22266 = this.helper;
      introspect(JAM.policy.p3) {
        v22266.remove();
      }
    }
    this.helper = null;
    var v4373 = !c$$335;
    if (v4373) {
      f$$108 = 0;
      var v11168 = d$$262.length;
      var v4371 = f$$108 < v11168;
      for (;v4371;) {
        var v4370 = d$$262[f$$108];
        introspect(JAM.policy.p3) {
          v4370.call(this, b$$408);
        }
        f$$108++;
        var v11169 = d$$262.length;
        v4371 = f$$108 < v11169;
      }
      introspect(JAM.policy.p3) {
        var v4372 = this._uiHash()
      }
      introspect(JAM.policy.p3) {
        this._trigger("stop", b$$408, v4372);
      }
    }
    this.fromOutside = !1;
    return !0;
  }
  function v1336(a$$462, b$$407, c$$334, d$$261) {
    function v1335() {
      var v11170 = e$$241.counter;
      var v4374 = f$$107 == v11170;
      if (v4374) {
        var v11171 = !d$$261;
        introspect(JAM.policy.p3) {
          e$$241.refreshPositions(v11171);
        }
      }
      return;
    }
    var v11172;
    if (c$$334) {
      var v16754 = c$$334[0];
      var v22267 = this.placeholder;
      var v16755 = v22267[0];
      introspect(JAM.policy.p3) {
        v11172 = v16754.appendChild(v16755);
      }
    } else {
      var v24982 = b$$407.item;
      var v22268 = v24982[0];
      var v16756 = v22268.parentNode;
      var v22269 = this.placeholder;
      var v16757 = v22269[0];
      var v22270;
      var v26858 = this.direction;
      var v24985 = v26858 == "down";
      if (v24985) {
        var v24983 = b$$407.item;
        v22270 = v24983[0];
      } else {
        var v26859 = b$$407.item;
        var v24984 = v26859[0];
        v22270 = v24984.nextSibling;
      }
      var v16758 = v22270;
      introspect(JAM.policy.p3) {
        v11172 = v16756.insertBefore(v16757, v16758);
      }
    }
    v11172;
    var v11173;
    var v16759 = this.counter;
    if (v16759) {
      var v22271 = this.counter;
      v11173 = this.counter = v22271 + 1;
    } else {
      v11173 = 1;
    }
    this.counter = v11173;
    var e$$241 = this;
    var f$$107 = this.counter;
    introspect(JAM.policy.p3) {
      window.setTimeout(v1335, 0);
    }
    return;
  }
  function v1334(b$$406) {
    var c$$333 = this.options;
    var v4375;
    var v22272 = this.cssPosition;
    var v16760 = v22272 == "absolute";
    if (v16760) {
      var v26860 = this.scrollParent;
      var v24986 = v26860[0];
      var v22273 = v24986 == document;
      var v24988 = !v22273;
      if (v24988) {
        var v26861 = a$$452.ui;
        var v28132 = this.scrollParent;
        var v26862 = v28132[0];
        var v28133 = this.offsetParent;
        var v26863 = v28133[0];
        introspect(JAM.policy.p3) {
          var v24987 = v26861.contains(v26862, v26863)
        }
        v22273 = !v24987;
      }
      v16760 = v22273;
    }
    var v11174 = v16760;
    if (v11174) {
      v4375 = this.offsetParent;
    } else {
      v4375 = this.scrollParent;
    }
    var d$$260 = v4375;
    var v11175 = d$$260[0];
    var v4376 = v11175.tagName;
    introspect(JAM.policy.p3) {
      var e$$240 = /(html|body)/i.test(v4376)
    }
    var v16761 = this.cssPosition;
    var v11176 = v16761 == "relative";
    if (v11176) {
      var v24989 = this.scrollParent;
      var v22274 = v24989[0];
      var v16762 = v22274 == document;
      var v22277 = !v16762;
      if (v22277) {
        var v24990 = this.scrollParent;
        var v22275 = v24990[0];
        var v24991 = this.offsetParent;
        var v22276 = v24991[0];
        v16762 = v22275 == v22276;
      }
      v11176 = v16762;
    }
    var v4377 = v11176;
    if (v4377) {
      var v11177 = this.offset;
      introspect(JAM.policy.p3) {
        var v31059 = this._getRelativeOffset()
      }
      v11177.relative = v31059;
    }
    var f$$106 = b$$406.pageX;
    var g$$138 = b$$406.pageY;
    var v4386 = this.originalPosition;
    if (v4386) {
      var v4378 = this.containment;
      if (v4378) {
        var v28134 = b$$406.pageX;
        var v29534 = this.offset;
        var v28975 = v29534.click;
        var v28135 = v28975.left;
        var v26864 = v28134 - v28135;
        var v28136 = this.containment;
        var v26865 = v28136[0];
        var v24992 = v26864 < v26865;
        if (v24992) {
          var v28137 = this.containment;
          var v26866 = v28137[0];
          var v28976 = this.offset;
          var v28138 = v28976.click;
          var v26867 = v28138.left;
          f$$106 = v26866 + v26867;
        }
        var v28139 = b$$406.pageY;
        var v29535 = this.offset;
        var v28977 = v29535.click;
        var v28140 = v28977.top;
        var v26868 = v28139 - v28140;
        var v28141 = this.containment;
        var v26869 = v28141[1];
        var v24993 = v26868 < v26869;
        if (v24993) {
          var v28142 = this.containment;
          var v26870 = v28142[1];
          var v28978 = this.offset;
          var v28143 = v28978.click;
          var v26871 = v28143.top;
          g$$138 = v26870 + v26871;
        }
        var v26872 = b$$406.pageX;
        var v28979 = this.offset;
        var v28144 = v28979.click;
        var v26873 = v28144.left;
        var v24994 = v26872 - v26873;
        var v26874 = this.containment;
        var v24995 = v26874[2];
        var v22278 = v24994 > v24995;
        if (v22278) {
          var v26875 = this.containment;
          var v24996 = v26875[2];
          var v28145 = this.offset;
          var v26876 = v28145.click;
          var v24997 = v26876.left;
          f$$106 = v24996 + v24997;
        }
        var v24998 = b$$406.pageY;
        var v28146 = this.offset;
        var v26877 = v28146.click;
        var v24999 = v26877.top;
        var v22279 = v24998 - v24999;
        var v25000 = this.containment;
        var v22280 = v25000[3];
        var v16763 = v22279 > v22280;
        if (v16763) {
          var v25001 = this.containment;
          var v22281 = v25001[3];
          var v26878 = this.offset;
          var v25002 = v26878.click;
          var v22282 = v25002.top;
          g$$138 = v22281 + v22282;
        }
      }
      var v4385 = c$$333.grid;
      if (v4385) {
        var v4379 = this.originalPageY;
        var v25003 = this.originalPageY;
        var v22283 = g$$138 - v25003;
        var v25004 = c$$333.grid;
        var v22284 = v25004[1];
        var v16764 = v22283 / v22284;
        introspect(JAM.policy.p3) {
          var v11178 = Math.round(v16764)
        }
        var v16765 = c$$333.grid;
        var v11179 = v16765[1];
        var v4380 = v11178 * v11179;
        var h$$112 = v4379 + v4380;
        var v4381;
        var v11181 = this.containment;
        if (v11181) {
          var v11180;
          var v28980 = this.offset;
          var v28147 = v28980.click;
          var v26879 = v28147.top;
          var v25005 = h$$112 - v26879;
          var v26880 = this.containment;
          var v25006 = v26880[1];
          var v22285 = v25005 < v25006;
          var v25009 = !v22285;
          if (v25009) {
            var v28981 = this.offset;
            var v28148 = v28981.click;
            var v26881 = v28148.top;
            var v25007 = h$$112 - v26881;
            var v26882 = this.containment;
            var v25008 = v26882[3];
            v22285 = v25007 > v25008;
          }
          var v16767 = v22285;
          if (v16767) {
            var v16766;
            var v28982 = this.offset;
            var v28149 = v28982.click;
            var v26883 = v28149.top;
            var v25010 = h$$112 - v26883;
            var v26884 = this.containment;
            var v25011 = v26884[1];
            var v22288 = v25010 < v25011;
            if (v22288) {
              var v25012 = c$$333.grid;
              var v22286 = v25012[1];
              v16766 = h$$112 + v22286;
            } else {
              var v25013 = c$$333.grid;
              var v22287 = v25013[1];
              v16766 = h$$112 - v22287;
            }
            v11180 = v16766;
          } else {
            v11180 = h$$112;
          }
          v4381 = v11180;
        } else {
          v4381 = h$$112;
        }
        g$$138 = v4381;
        var v4382 = this.originalPageX;
        var v25014 = this.originalPageX;
        var v22289 = f$$106 - v25014;
        var v25015 = c$$333.grid;
        var v22290 = v25015[0];
        var v16768 = v22289 / v22290;
        introspect(JAM.policy.p3) {
          var v11182 = Math.round(v16768)
        }
        var v16769 = c$$333.grid;
        var v11183 = v16769[0];
        var v4383 = v11182 * v11183;
        var i$$169 = v4382 + v4383;
        var v4384;
        var v11185 = this.containment;
        if (v11185) {
          var v11184;
          var v28983 = this.offset;
          var v28150 = v28983.click;
          var v26885 = v28150.left;
          var v25016 = i$$169 - v26885;
          var v26886 = this.containment;
          var v25017 = v26886[0];
          var v22291 = v25016 < v25017;
          var v25020 = !v22291;
          if (v25020) {
            var v28984 = this.offset;
            var v28151 = v28984.click;
            var v26887 = v28151.left;
            var v25018 = i$$169 - v26887;
            var v26888 = this.containment;
            var v25019 = v26888[2];
            v22291 = v25018 > v25019;
          }
          var v16771 = v22291;
          if (v16771) {
            var v16770;
            var v28985 = this.offset;
            var v28152 = v28985.click;
            var v26889 = v28152.left;
            var v25021 = i$$169 - v26889;
            var v26890 = this.containment;
            var v25022 = v26890[0];
            var v22294 = v25021 < v25022;
            if (v22294) {
              var v25023 = c$$333.grid;
              var v22292 = v25023[0];
              v16770 = i$$169 + v22292;
            } else {
              var v25024 = c$$333.grid;
              var v22293 = v25024[0];
              v16770 = i$$169 - v22293;
            }
            v11184 = v16770;
          } else {
            v11184 = i$$169;
          }
          v4384 = v11184;
        } else {
          v4384 = i$$169;
        }
        f$$106 = v4384;
      }
    }
    var v28153 = this.offset;
    var v26891 = v28153.click;
    var v25025 = v26891.top;
    var v22295 = g$$138 - v25025;
    var v26892 = this.offset;
    var v25026 = v26892.relative;
    var v22296 = v25026.top;
    var v16772 = v22295 - v22296;
    var v25027 = this.offset;
    var v22297 = v25027.parent;
    var v16773 = v22297.top;
    var v11186 = v16772 - v16773;
    var v16774;
    var v26893 = a$$452.browser;
    var v25028 = v26893.safari;
    if (v25028) {
      var v26894 = this.cssPosition;
      v25028 = v26894 == "fixed";
    }
    var v22299 = v25028;
    if (v22299) {
      v16774 = 0;
    } else {
      var v22298;
      var v26895 = this.cssPosition;
      var v25031 = v26895 == "fixed";
      if (v25031) {
        var v26896 = this.scrollParent;
        introspect(JAM.policy.p3) {
          var v25029 = v26896.scrollTop()
        }
        v22298 = -v25029;
      } else {
        var v25030;
        if (e$$240) {
          v25030 = 0;
        } else {
          introspect(JAM.policy.p3) {
            v25030 = d$$260.scrollTop();
          }
        }
        v22298 = v25030;
      }
      v16774 = v22298;
    }
    var v11187 = v16774;
    var v4387 = v11186 + v11187;
    var v28154 = this.offset;
    var v26897 = v28154.click;
    var v25032 = v26897.left;
    var v22300 = f$$106 - v25032;
    var v26898 = this.offset;
    var v25033 = v26898.relative;
    var v22301 = v25033.left;
    var v16775 = v22300 - v22301;
    var v25034 = this.offset;
    var v22302 = v25034.parent;
    var v16776 = v22302.left;
    var v11188 = v16775 - v16776;
    var v16777;
    var v26899 = a$$452.browser;
    var v25035 = v26899.safari;
    if (v25035) {
      var v26900 = this.cssPosition;
      v25035 = v26900 == "fixed";
    }
    var v22304 = v25035;
    if (v22304) {
      v16777 = 0;
    } else {
      var v22303;
      var v26901 = this.cssPosition;
      var v25038 = v26901 == "fixed";
      if (v25038) {
        var v26902 = this.scrollParent;
        introspect(JAM.policy.p3) {
          var v25036 = v26902.scrollLeft()
        }
        v22303 = -v25036;
      } else {
        var v25037;
        if (e$$240) {
          v25037 = 0;
        } else {
          introspect(JAM.policy.p3) {
            v25037 = d$$260.scrollLeft();
          }
        }
        v22303 = v25037;
      }
      v16777 = v22303;
    }
    var v11189 = v16777;
    var v4388 = v11188 + v11189;
    return {top:v4387, left:v4388};
  }
  function v1333(b$$405, c$$332) {
    var v11190 = !c$$332;
    if (v11190) {
      c$$332 = this.position;
    }
    var v4389;
    var v11191 = b$$405 == "absolute";
    if (v11191) {
      v4389 = 1;
    } else {
      v4389 = -1;
    }
    var d$$259 = v4389;
    var e$$239 = this.options;
    var v4390;
    var v22305 = this.cssPosition;
    var v16778 = v22305 == "absolute";
    if (v16778) {
      var v26903 = this.scrollParent;
      var v25039 = v26903[0];
      var v22306 = v25039 == document;
      var v25041 = !v22306;
      if (v25041) {
        var v26904 = a$$452.ui;
        var v28155 = this.scrollParent;
        var v26905 = v28155[0];
        var v28156 = this.offsetParent;
        var v26906 = v28156[0];
        introspect(JAM.policy.p3) {
          var v25040 = v26904.contains(v26905, v26906)
        }
        v22306 = !v25040;
      }
      v16778 = v22306;
    }
    var v11192 = v16778;
    if (v11192) {
      v4390 = this.offsetParent;
    } else {
      v4390 = this.scrollParent;
    }
    var f$$105 = v4390;
    var v11193 = f$$105[0];
    var v4391 = v11193.tagName;
    introspect(JAM.policy.p3) {
      var g$$137 = /(html|body)/i.test(v4391)
    }
    var v22307 = c$$332.top;
    var v28157 = this.offset;
    var v26907 = v28157.relative;
    var v25042 = v26907.top;
    var v22308 = v25042 * d$$259;
    var v16779 = v22307 + v22308;
    var v26908 = this.offset;
    var v25043 = v26908.parent;
    var v22309 = v25043.top;
    var v16780 = v22309 * d$$259;
    var v11194 = v16779 + v16780;
    var v16781;
    var v26909 = a$$452.browser;
    var v25044 = v26909.safari;
    if (v25044) {
      var v26910 = this.cssPosition;
      v25044 = v26910 == "fixed";
    }
    var v22311 = v25044;
    if (v22311) {
      v16781 = 0;
    } else {
      var v25045;
      var v28158 = this.cssPosition;
      var v26913 = v28158 == "fixed";
      if (v26913) {
        var v28159 = this.scrollParent;
        introspect(JAM.policy.p3) {
          var v26911 = v28159.scrollTop()
        }
        v25045 = -v26911;
      } else {
        var v26912;
        if (g$$137) {
          v26912 = 0;
        } else {
          introspect(JAM.policy.p3) {
            v26912 = f$$105.scrollTop();
          }
        }
        v25045 = v26912;
      }
      var v22310 = v25045;
      v16781 = v22310 * d$$259;
    }
    var v11195 = v16781;
    var v4392 = v11194 - v11195;
    var v22312 = c$$332.left;
    var v28160 = this.offset;
    var v26914 = v28160.relative;
    var v25046 = v26914.left;
    var v22313 = v25046 * d$$259;
    var v16782 = v22312 + v22313;
    var v26915 = this.offset;
    var v25047 = v26915.parent;
    var v22314 = v25047.left;
    var v16783 = v22314 * d$$259;
    var v11196 = v16782 + v16783;
    var v16784;
    var v26916 = a$$452.browser;
    var v25048 = v26916.safari;
    if (v25048) {
      var v26917 = this.cssPosition;
      v25048 = v26917 == "fixed";
    }
    var v22316 = v25048;
    if (v22316) {
      v16784 = 0;
    } else {
      var v25049;
      var v28161 = this.cssPosition;
      var v26920 = v28161 == "fixed";
      if (v26920) {
        var v28162 = this.scrollParent;
        introspect(JAM.policy.p3) {
          var v26918 = v28162.scrollLeft()
        }
        v25049 = -v26918;
      } else {
        var v26919;
        if (g$$137) {
          v26919 = 0;
        } else {
          introspect(JAM.policy.p3) {
            v26919 = f$$105.scrollLeft();
          }
        }
        v25049 = v26919;
      }
      var v22315 = v25049;
      v16784 = v22315 * d$$259;
    }
    var v11197 = v16784;
    var v4393 = v11196 - v11197;
    return {top:v4392, left:v4393};
  }
  function v1332() {
    var b$$404 = this.options;
    var v11198 = b$$404.containment;
    var v4394 = v11198 == "parent";
    if (v4394) {
      var v16785 = this.helper;
      var v11199 = v16785[0];
      b$$404.containment = v11199.parentNode;
    }
    var v16786 = b$$404.containment;
    var v11200 = v16786 == "document";
    var v16788 = !v11200;
    if (v16788) {
      var v16787 = b$$404.containment;
      v11200 = v16787 == "window";
    }
    var v4399 = v11200;
    if (v4399) {
      var v25050 = this.offset;
      var v22317 = v25050.relative;
      var v16789 = v22317.left;
      var v11201 = 0 - v16789;
      var v22318 = this.offset;
      var v16790 = v22318.parent;
      var v11202 = v16790.left;
      var v4395 = v11201 - v11202;
      var v25051 = this.offset;
      var v22319 = v25051.relative;
      var v16791 = v22319.top;
      var v11203 = 0 - v16791;
      var v22320 = this.offset;
      var v16792 = v22320.parent;
      var v11204 = v16792.top;
      var v4396 = v11203 - v11204;
      var v26921;
      var v28986 = b$$404.containment;
      var v28163 = v28986 == "document";
      if (v28163) {
        v26921 = document;
      } else {
        v26921 = window;
      }
      var v25052 = v26921;
      introspect(JAM.policy.p3) {
        var v22321 = a$$452(v25052)
      }
      introspect(JAM.policy.p3) {
        var v16793 = v22321.width()
      }
      var v22322 = this.helperProportions;
      var v16794 = v22322.width;
      var v11205 = v16793 - v16794;
      var v16795 = this.margins;
      var v11206 = v16795.left;
      var v4397 = v11205 - v11206;
      var v28164;
      var v29536 = b$$404.containment;
      var v28987 = v29536 == "document";
      if (v28987) {
        v28164 = document;
      } else {
        v28164 = window;
      }
      var v26922 = v28164;
      introspect(JAM.policy.p3) {
        var v25053 = a$$452(v26922)
      }
      introspect(JAM.policy.p3) {
        var v22323 = v25053.height()
      }
      var v25055 = !v22323;
      if (v25055) {
        var v26923 = document.body;
        var v25054 = v26923.parentNode;
        v22323 = v25054.scrollHeight;
      }
      var v16796 = v22323;
      var v22324 = this.helperProportions;
      var v16797 = v22324.height;
      var v11207 = v16796 - v16797;
      var v16798 = this.margins;
      var v11208 = v16798.top;
      var v4398 = v11207 - v11208;
      this.containment = [v4395, v4396, v4397, v4398];
    }
    var v16799 = b$$404.containment;
    introspect(JAM.policy.p3) {
      var v11209 = /^(document|window|parent)$/.test(v16799)
    }
    var v4407 = !v11209;
    if (v4407) {
      var v11210 = b$$404.containment;
      introspect(JAM.policy.p3) {
        var v4400 = a$$452(v11210)
      }
      var c$$331 = v4400[0];
      var v11211 = b$$404.containment;
      introspect(JAM.policy.p3) {
        var v4401 = a$$452(v11211)
      }
      introspect(JAM.policy.p3) {
        var d$$258 = v4401.offset()
      }
      introspect(JAM.policy.p3) {
        var v11212 = a$$452(c$$331)
      }
      introspect(JAM.policy.p3) {
        var v4402 = v11212.css("overflow")
      }
      var e$$238 = v4402 != "hidden";
      var v22325 = d$$258.left;
      introspect(JAM.policy.p3) {
        var v28165 = a$$452(c$$331)
      }
      introspect(JAM.policy.p3) {
        var v26924 = v28165.css("borderLeftWidth")
      }
      var v25056 = parseInt(v26924, 10);
      var v26925 = !v25056;
      if (v26925) {
        v25056 = 0;
      }
      var v22326 = v25056;
      var v16800 = v22325 + v22326;
      introspect(JAM.policy.p3) {
        var v26926 = a$$452(c$$331)
      }
      introspect(JAM.policy.p3) {
        var v25057 = v26926.css("paddingLeft")
      }
      var v22327 = parseInt(v25057, 10);
      var v25058 = !v22327;
      if (v25058) {
        v22327 = 0;
      }
      var v16801 = v22327;
      var v11213 = v16800 + v16801;
      var v16802 = this.margins;
      var v11214 = v16802.left;
      var v4403 = v11213 - v11214;
      var v22328 = d$$258.top;
      introspect(JAM.policy.p3) {
        var v28166 = a$$452(c$$331)
      }
      introspect(JAM.policy.p3) {
        var v26927 = v28166.css("borderTopWidth")
      }
      var v25059 = parseInt(v26927, 10);
      var v26928 = !v25059;
      if (v26928) {
        v25059 = 0;
      }
      var v22329 = v25059;
      var v16803 = v22328 + v22329;
      introspect(JAM.policy.p3) {
        var v26929 = a$$452(c$$331)
      }
      introspect(JAM.policy.p3) {
        var v25060 = v26929.css("paddingTop")
      }
      var v22330 = parseInt(v25060, 10);
      var v25061 = !v22330;
      if (v25061) {
        v22330 = 0;
      }
      var v16804 = v22330;
      var v11215 = v16803 + v16804;
      var v16805 = this.margins;
      var v11216 = v16805.top;
      var v4404 = v11215 - v11216;
      var v26930 = d$$258.left;
      var v28167;
      if (e$$238) {
        var v28988 = c$$331.scrollWidth;
        var v28989 = c$$331.offsetWidth;
        introspect(JAM.policy.p3) {
          v28167 = Math.max(v28988, v28989);
        }
      } else {
        v28167 = c$$331.offsetWidth;
      }
      var v26931 = v28167;
      var v25062 = v26930 + v26931;
      introspect(JAM.policy.p3) {
        var v28990 = a$$452(c$$331)
      }
      introspect(JAM.policy.p3) {
        var v28168 = v28990.css("borderLeftWidth")
      }
      var v26932 = parseInt(v28168, 10);
      var v28169 = !v26932;
      if (v28169) {
        v26932 = 0;
      }
      var v25063 = v26932;
      var v22331 = v25062 - v25063;
      introspect(JAM.policy.p3) {
        var v28170 = a$$452(c$$331)
      }
      introspect(JAM.policy.p3) {
        var v26933 = v28170.css("paddingRight")
      }
      var v25064 = parseInt(v26933, 10);
      var v26934 = !v25064;
      if (v26934) {
        v25064 = 0;
      }
      var v22332 = v25064;
      var v16806 = v22331 - v22332;
      var v22333 = this.helperProportions;
      var v16807 = v22333.width;
      var v11217 = v16806 - v16807;
      var v16808 = this.margins;
      var v11218 = v16808.left;
      var v4405 = v11217 - v11218;
      var v26935 = d$$258.top;
      var v28171;
      if (e$$238) {
        var v28991 = c$$331.scrollHeight;
        var v28992 = c$$331.offsetHeight;
        introspect(JAM.policy.p3) {
          v28171 = Math.max(v28991, v28992);
        }
      } else {
        v28171 = c$$331.offsetHeight;
      }
      var v26936 = v28171;
      var v25065 = v26935 + v26936;
      introspect(JAM.policy.p3) {
        var v28993 = a$$452(c$$331)
      }
      introspect(JAM.policy.p3) {
        var v28172 = v28993.css("borderTopWidth")
      }
      var v26937 = parseInt(v28172, 10);
      var v28173 = !v26937;
      if (v28173) {
        v26937 = 0;
      }
      var v25066 = v26937;
      var v22334 = v25065 - v25066;
      introspect(JAM.policy.p3) {
        var v28174 = a$$452(c$$331)
      }
      introspect(JAM.policy.p3) {
        var v26938 = v28174.css("paddingBottom")
      }
      var v25067 = parseInt(v26938, 10);
      var v26939 = !v25067;
      if (v26939) {
        v25067 = 0;
      }
      var v22335 = v25067;
      var v16809 = v22334 - v22335;
      var v22336 = this.helperProportions;
      var v16810 = v22336.height;
      var v11219 = v16809 - v16810;
      var v16811 = this.margins;
      var v11220 = v16811.top;
      var v4406 = v11219 - v11220;
      this.containment = [v4403, v4404, v4405, v4406];
    }
    return;
  }
  function v1331() {
    var v11221 = this.helper;
    introspect(JAM.policy.p3) {
      var v4408 = v11221.outerWidth()
    }
    var v11222 = this.helper;
    introspect(JAM.policy.p3) {
      var v4409 = v11222.outerHeight()
    }
    this.helperProportions = {width:v4408, height:v4409};
    return;
  }
  function v1330() {
    var v22337 = this.currentItem;
    introspect(JAM.policy.p3) {
      var v16812 = v22337.css("marginLeft")
    }
    var v11223 = parseInt(v16812, 10);
    var v16813 = !v11223;
    if (v16813) {
      v11223 = 0;
    }
    var v4410 = v11223;
    var v22338 = this.currentItem;
    introspect(JAM.policy.p3) {
      var v16814 = v22338.css("marginTop")
    }
    var v11224 = parseInt(v16814, 10);
    var v16815 = !v11224;
    if (v16815) {
      v11224 = 0;
    }
    var v4411 = v11224;
    this.margins = {left:v4410, top:v4411};
    return;
  }
  function v1329() {
    var v11225 = this.cssPosition;
    var v4415 = v11225 == "relative";
    if (v4415) {
      var v4412 = this.currentItem;
      introspect(JAM.policy.p3) {
        var a$$461 = v4412.position()
      }
      var v16816 = a$$461.top;
      var v26940 = this.helper;
      introspect(JAM.policy.p3) {
        var v25068 = v26940.css("top")
      }
      var v22339 = parseInt(v25068, 10);
      var v25069 = !v22339;
      if (v25069) {
        v22339 = 0;
      }
      var v16817 = v22339;
      var v11226 = v16816 - v16817;
      var v16818 = this.scrollParent;
      introspect(JAM.policy.p3) {
        var v11227 = v16818.scrollTop()
      }
      var v4413 = v11226 + v11227;
      var v16819 = a$$461.left;
      var v26941 = this.helper;
      introspect(JAM.policy.p3) {
        var v25070 = v26941.css("left")
      }
      var v22340 = parseInt(v25070, 10);
      var v25071 = !v22340;
      if (v25071) {
        v22340 = 0;
      }
      var v16820 = v22340;
      var v11228 = v16819 - v16820;
      var v16821 = this.scrollParent;
      introspect(JAM.policy.p3) {
        var v11229 = v16821.scrollLeft()
      }
      var v4414 = v11228 + v11229;
      return {top:v4413, left:v4414};
    }
    return {top:0, left:0};
  }
  function v1328() {
    var v4416 = this.helper;
    introspect(JAM.policy.p3) {
      var v31060 = v4416.offsetParent()
    }
    this.offsetParent = v31060;
    var v4417 = this.offsetParent;
    introspect(JAM.policy.p3) {
      var b$$403 = v4417.offset()
    }
    var v22341 = this.cssPosition;
    var v16822 = v22341 == "absolute";
    if (v16822) {
      var v25072 = this.scrollParent;
      var v22342 = v25072[0];
      v16822 = v22342 != document;
    }
    var v11230 = v16822;
    if (v11230) {
      var v16823 = a$$452.ui;
      var v22343 = this.scrollParent;
      var v16824 = v22343[0];
      var v22344 = this.offsetParent;
      var v16825 = v22344[0];
      introspect(JAM.policy.p3) {
        v11230 = v16823.contains(v16824, v16825);
      }
    }
    var v4418 = v11230;
    if (v4418) {
      var v22345 = b$$403.left;
      var v25073 = this.scrollParent;
      introspect(JAM.policy.p3) {
        var v22346 = v25073.scrollLeft()
      }
      b$$403.left = v22345 + v22346;
      var v22347 = b$$403.top;
      var v25074 = this.scrollParent;
      introspect(JAM.policy.p3) {
        var v22348 = v25074.scrollTop()
      }
      b$$403.top = v22347 + v22348;
    }
    var v22349 = this.offsetParent;
    var v16826 = v22349[0];
    var v16827 = document.body;
    var v11231 = v16826 == v16827;
    var v16829 = !v11231;
    if (v16829) {
      var v26942 = this.offsetParent;
      var v25075 = v26942[0];
      var v22350 = v25075.tagName;
      if (v22350) {
        var v28994 = this.offsetParent;
        var v28175 = v28994[0];
        var v26943 = v28175.tagName;
        introspect(JAM.policy.p3) {
          var v25076 = v26943.toLowerCase()
        }
        v22350 = v25076 == "html";
      }
      var v16828 = v22350;
      if (v16828) {
        var v22351 = a$$452.browser;
        v16828 = v22351.msie;
      }
      v11231 = v16828;
    }
    var v4419 = v11231;
    if (v4419) {
      b$$403 = {top:0, left:0};
    }
    var v11232 = b$$403.top;
    var v25077 = this.offsetParent;
    introspect(JAM.policy.p3) {
      var v22352 = v25077.css("borderTopWidth")
    }
    var v16830 = parseInt(v22352, 10);
    var v22353 = !v16830;
    if (v22353) {
      v16830 = 0;
    }
    var v11233 = v16830;
    var v4420 = v11232 + v11233;
    var v11234 = b$$403.left;
    var v25078 = this.offsetParent;
    introspect(JAM.policy.p3) {
      var v22354 = v25078.css("borderLeftWidth")
    }
    var v16831 = parseInt(v22354, 10);
    var v22355 = !v16831;
    if (v22355) {
      v16831 = 0;
    }
    var v11235 = v16831;
    var v4421 = v11234 + v11235;
    return {top:v4420, left:v4421};
  }
  function v1327(b$$402) {
    var v28176 = typeof b$$402;
    var v26944 = v28176 == "string";
    if (v26944) {
      introspect(JAM.policy.p3) {
        b$$402 = b$$402.split(" ");
      }
    }
    introspect(JAM.policy.p3) {
      var v26945 = a$$452.isArray(b$$402)
    }
    if (v26945) {
      var v28995 = b$$402[0];
      var v28177 = +v28995;
      var v29537 = b$$402[1];
      var v28996 = +v29537;
      var v29538 = !v28996;
      if (v29538) {
        v28996 = 0;
      }
      var v28178 = v28996;
      b$$402 = {left:v28177, top:v28178};
    }
    var v25079 = "left" in b$$402;
    if (v25079) {
      var v28179 = this.offset;
      var v26946 = v28179.click;
      var v28180 = b$$402.left;
      var v28997 = this.margins;
      var v28181 = v28997.left;
      v26946.left = v28180 + v28181;
    }
    var v22356 = "right" in b$$402;
    if (v22356) {
      var v26947 = this.offset;
      var v25080 = v26947.click;
      var v28998 = this.helperProportions;
      var v28182 = v28998.width;
      var v28183 = b$$402.right;
      var v26948 = v28182 - v28183;
      var v28184 = this.margins;
      var v26949 = v28184.left;
      v25080.left = v26948 + v26949;
    }
    var v16832 = "top" in b$$402;
    if (v16832) {
      var v25081 = this.offset;
      var v22357 = v25081.click;
      var v25082 = b$$402.top;
      var v26950 = this.margins;
      var v25083 = v26950.top;
      v22357.top = v25082 + v25083;
    }
    var v11236 = "bottom" in b$$402;
    if (v11236) {
      var v22358 = this.offset;
      var v16833 = v22358.click;
      var v26951 = this.helperProportions;
      var v25084 = v26951.height;
      var v25085 = b$$402.bottom;
      var v22359 = v25084 - v25085;
      var v25086 = this.margins;
      var v22360 = v25086.top;
      v16833.top = v22359 + v22360;
    }
    return;
  }
  function v1326(b$$401) {
    var c$$330 = this.options;
    var v4422;
    var v16834 = c$$330.helper;
    introspect(JAM.policy.p3) {
      var v11239 = a$$452.isFunction(v16834)
    }
    if (v11239) {
      var v16835 = c$$330.helper;
      var v22361 = this.element;
      var v16836 = v22361[0];
      var v22362 = this.currentItem;
      var v16837 = [b$$401, v22362];
      introspect(JAM.policy.p3) {
        var v11237 = v16835.apply(v16836, v16837)
      }
      introspect(JAM.policy.p3) {
        v4422 = a$$452(v11237);
      }
    } else {
      var v11238;
      var v22363 = c$$330.helper;
      var v16839 = v22363 == "clone";
      if (v16839) {
        var v16838 = this.currentItem;
        introspect(JAM.policy.p3) {
          v11238 = v16838.clone();
        }
      } else {
        v11238 = this.currentItem;
      }
      v4422 = v11238;
    }
    var d$$257 = v4422;
    introspect(JAM.policy.p3) {
      var v26952 = d$$257.parents("body")
    }
    var v25087 = v26952.length;
    var v26955 = !v25087;
    if (v26955) {
      var v29539;
      var v30126 = c$$330.appendTo;
      var v29872 = v30126 != "parent";
      if (v29872) {
        v29539 = c$$330.appendTo;
      } else {
        var v30127 = this.currentItem;
        var v29871 = v30127[0];
        v29539 = v29871.parentNode;
      }
      var v28999 = v29539;
      introspect(JAM.policy.p3) {
        var v28185 = a$$452(v28999)
      }
      var v26953 = v28185[0];
      var v26954 = d$$257[0];
      introspect(JAM.policy.p3) {
        v26953.appendChild(v26954);
      }
    }
    var v26956 = d$$257[0];
    var v28186 = this.currentItem;
    var v26957 = v28186[0];
    var v25088 = v26956 == v26957;
    if (v25088) {
      var v29540 = this.currentItem;
      var v29000 = v29540[0];
      var v28187 = v29000.style;
      var v26958 = v28187.width;
      var v29541 = this.currentItem;
      var v29001 = v29541[0];
      var v28188 = v29001.style;
      var v26959 = v28188.height;
      var v28189 = this.currentItem;
      introspect(JAM.policy.p3) {
        var v26960 = v28189.css("position")
      }
      var v28190 = this.currentItem;
      introspect(JAM.policy.p3) {
        var v26961 = v28190.css("top")
      }
      var v28191 = this.currentItem;
      introspect(JAM.policy.p3) {
        var v26962 = v28191.css("left")
      }
      this._storedCSS = {width:v26958, height:v26959, position:v26960, top:v26961, left:v26962};
    }
    var v29002 = d$$257[0];
    var v28192 = v29002.style;
    var v26963 = v28192.width;
    var v25089 = v26963 == "";
    var v26964 = !v25089;
    if (v26964) {
      v25089 = c$$330.forceHelperSize;
    }
    var v22364 = v25089;
    if (v22364) {
      var v26965 = this.currentItem;
      introspect(JAM.policy.p3) {
        var v25090 = v26965.width()
      }
      introspect(JAM.policy.p3) {
        d$$257.width(v25090);
      }
    }
    var v28193 = d$$257[0];
    var v26966 = v28193.style;
    var v25091 = v26966.height;
    var v22365 = v25091 == "";
    var v25092 = !v22365;
    if (v25092) {
      v22365 = c$$330.forceHelperSize;
    }
    var v16840 = v22365;
    if (v16840) {
      var v25093 = this.currentItem;
      introspect(JAM.policy.p3) {
        var v22366 = v25093.height()
      }
      introspect(JAM.policy.p3) {
        d$$257.height(v22366);
      }
    }
    return d$$257;
  }
  function v1325(b$$400) {
    var c$$329 = null;
    var d$$256 = null;
    var v11240 = this.containers;
    var v4423 = v11240.length;
    var e$$237 = v4423 - 1;
    var v4428 = e$$237 >= 0;
    for (;v4428;) {
      var v11241 = a$$452.ui;
      var v16841 = this.currentItem;
      var v11242 = v16841[0];
      var v25094 = this.containers;
      var v22367 = v25094[e$$237];
      var v16842 = v22367.element;
      var v11243 = v16842[0];
      introspect(JAM.policy.p3) {
        var v4424 = v11241.contains(v11242, v11243)
      }
      if (v4424) {
        e$$237--;
        v4428 = e$$237 >= 0;
        continue;
      }
      var v22368 = this.containers;
      var v16843 = v22368[e$$237];
      var v11244 = v16843.containerCache;
      introspect(JAM.policy.p3) {
        var v4427 = this._intersectsWith(v11244)
      }
      if (v4427) {
        var v11245 = c$$329;
        if (v11245) {
          var v16844 = a$$452.ui;
          var v26967 = this.containers;
          var v25095 = v26967[e$$237];
          var v22369 = v25095.element;
          var v16845 = v22369[0];
          var v22370 = c$$329.element;
          var v16846 = v22370[0];
          introspect(JAM.policy.p3) {
            v11245 = v16844.contains(v16845, v16846);
          }
        }
        var v4425 = v11245;
        if (v4425) {
          e$$237--;
          v4428 = e$$237 >= 0;
          continue;
        }
        var v11246 = this.containers;
        c$$329 = v11246[e$$237];
        d$$256 = e$$237;
      } else {
        var v22371 = this.containers;
        var v16847 = v22371[e$$237];
        var v11247 = v16847.containerCache;
        var v4426 = v11247.over;
        if (v4426) {
          var v22372 = this.containers;
          var v16848 = v22372[e$$237];
          introspect(JAM.policy.p3) {
            var v16849 = this._uiHash(this)
          }
          introspect(JAM.policy.p3) {
            v16848._trigger("out", b$$400, v16849);
          }
          var v25096 = this.containers;
          var v22373 = v25096[e$$237];
          var v16850 = v22373.containerCache;
          v16850.over = 0;
        }
      }
      e$$237--;
      v4428 = e$$237 >= 0;
    }
    var v4429 = !c$$329;
    if (v4429) {
      return;
    }
    var v16851 = this.containers;
    var v11248 = v16851.length;
    var v4439 = v11248 === 1;
    if (v4439) {
      var v16852 = this.containers;
      var v11249 = v16852[d$$256];
      introspect(JAM.policy.p3) {
        var v11250 = this._uiHash(this)
      }
      introspect(JAM.policy.p3) {
        v11249._trigger("over", b$$400, v11250);
      }
      var v22374 = this.containers;
      var v16853 = v22374[d$$256];
      var v11251 = v16853.containerCache;
      v11251.over = 1;
    } else {
      var v11252 = this.currentContainer;
      var v16854 = this.containers;
      var v11253 = v16854[d$$256];
      var v4438 = v11252 != v11253;
      if (v4438) {
        var f$$104 = 1E4;
        var g$$136 = null;
        var v4430 = this.positionAbs;
        var v11254;
        var v25097 = this.containers;
        var v22375 = v25097[d$$256];
        var v16855 = v22375.floating;
        if (v16855) {
          v11254 = "left";
        } else {
          v11254 = "top";
        }
        var v4431 = v11254;
        var h$$111 = v4430[v4431];
        var v11255 = this.items;
        var v4432 = v11255.length;
        var i$$168 = v4432 - 1;
        var v4436 = i$$168 >= 0;
        for (;v4436;) {
          var v16856 = a$$452.ui;
          var v26968 = this.containers;
          var v25098 = v26968[d$$256];
          var v22376 = v25098.element;
          var v16857 = v22376[0];
          var v26969 = this.items;
          var v25099 = v26969[i$$168];
          var v22377 = v25099.item;
          var v16858 = v22377[0];
          introspect(JAM.policy.p3) {
            var v11256 = v16856.contains(v16857, v16858)
          }
          var v4433 = !v11256;
          if (v4433) {
            i$$168--;
            v4436 = i$$168 >= 0;
            continue;
          }
          var v4434;
          var v22378 = this.containers;
          var v16859 = v22378[d$$256];
          var v11259 = v16859.floating;
          if (v11259) {
            var v25100 = this.items;
            var v22379 = v25100[i$$168];
            var v16860 = v22379.item;
            introspect(JAM.policy.p3) {
              var v11257 = v16860.offset()
            }
            v4434 = v11257.left;
          } else {
            var v25101 = this.items;
            var v22380 = v25101[i$$168];
            var v16861 = v22380.item;
            introspect(JAM.policy.p3) {
              var v11258 = v16861.offset()
            }
            v4434 = v11258.top;
          }
          var j$$80 = v4434;
          var v16862 = j$$80 - h$$111;
          introspect(JAM.policy.p3) {
            var v11260 = Math.abs(v16862)
          }
          var v4435 = v11260 < f$$104;
          if (v4435) {
            var v22381 = j$$80 - h$$111;
            introspect(JAM.policy.p3) {
              f$$104 = Math.abs(v22381);
            }
            var v22382 = this.items;
            g$$136 = v22382[i$$168];
            var v16863;
            var v25102 = j$$80 - h$$111;
            var v22383 = v25102 > 0;
            if (v22383) {
              v16863 = "down";
            } else {
              v16863 = "up";
            }
            this.direction = v16863;
          }
          i$$168--;
          v4436 = i$$168 >= 0;
        }
        var v11261 = !g$$136;
        if (v11261) {
          var v22384 = this.options;
          var v16864 = v22384.dropOnEmpty;
          v11261 = !v16864;
        }
        var v4437 = v11261;
        if (v4437) {
          return;
        }
        var v28194 = this.containers;
        this.currentContainer = v28194[d$$256];
        var v28195;
        if (g$$136) {
          var v29003 = !0;
          introspect(JAM.policy.p3) {
            v28195 = this._rearrange(b$$400, g$$136, null, v29003);
          }
        } else {
          var v29873 = this.containers;
          var v29542 = v29873[d$$256];
          var v29004 = v29542.element;
          var v29005 = !0;
          introspect(JAM.policy.p3) {
            v28195 = this._rearrange(b$$400, null, v29004, v29005);
          }
        }
        v28195;
        introspect(JAM.policy.p3) {
          var v26970 = this._uiHash()
        }
        introspect(JAM.policy.p3) {
          this._trigger("change", b$$400, v26970);
        }
        var v26971 = this.containers;
        var v25103 = v26971[d$$256];
        introspect(JAM.policy.p3) {
          var v25104 = this._uiHash(this)
        }
        introspect(JAM.policy.p3) {
          v25103._trigger("change", b$$400, v25104);
        }
        var v25105 = this.options;
        var v22385 = v25105.placeholder;
        var v22386 = this.currentContainer;
        var v22387 = this.placeholder;
        introspect(JAM.policy.p3) {
          v22385.update(v22386, v22387);
        }
        var v22388 = this.containers;
        var v16865 = v22388[d$$256];
        introspect(JAM.policy.p3) {
          var v16866 = this._uiHash(this)
        }
        introspect(JAM.policy.p3) {
          v16865._trigger("over", b$$400, v16866);
        }
        var v22389 = this.containers;
        var v16867 = v22389[d$$256];
        var v11262 = v16867.containerCache;
        v11262.over = 1;
      }
    }
    return;
  }
  function v1324(b$$397) {
    function v1323(a$$460, b$$399) {
      var v11263 = e$$236;
      if (v11263) {
        var v16868 = d$$255.forcePlaceholderSize;
        v11263 = !v16868;
      }
      var v4440 = v11263;
      if (v4440) {
        return;
      }
      introspect(JAM.policy.p3) {
        var v11264 = b$$399.height()
      }
      var v16870 = !v11264;
      if (v16870) {
        var v26972 = c$$328.currentItem;
        introspect(JAM.policy.p3) {
          var v25106 = v26972.innerHeight()
        }
        var v29006 = c$$328.currentItem;
        introspect(JAM.policy.p3) {
          var v28196 = v29006.css("paddingTop")
        }
        var v29007 = !v28196;
        if (v29007) {
          v28196 = 0;
        }
        var v26973 = v28196;
        var v25107 = parseInt(v26973, 10);
        var v22390 = v25106 - v25107;
        var v28197 = c$$328.currentItem;
        introspect(JAM.policy.p3) {
          var v26974 = v28197.css("paddingBottom")
        }
        var v28198 = !v26974;
        if (v28198) {
          v26974 = 0;
        }
        var v25108 = v26974;
        var v22391 = parseInt(v25108, 10);
        var v16869 = v22390 - v22391;
        introspect(JAM.policy.p3) {
          b$$399.height(v16869);
        }
      }
      introspect(JAM.policy.p3) {
        var v11265 = b$$399.width()
      }
      var v16872 = !v11265;
      if (v16872) {
        var v26975 = c$$328.currentItem;
        introspect(JAM.policy.p3) {
          var v25109 = v26975.innerWidth()
        }
        var v29008 = c$$328.currentItem;
        introspect(JAM.policy.p3) {
          var v28199 = v29008.css("paddingLeft")
        }
        var v29009 = !v28199;
        if (v29009) {
          v28199 = 0;
        }
        var v26976 = v28199;
        var v25110 = parseInt(v26976, 10);
        var v22392 = v25109 - v25110;
        var v28200 = c$$328.currentItem;
        introspect(JAM.policy.p3) {
          var v26977 = v28200.css("paddingRight")
        }
        var v28201 = !v26977;
        if (v28201) {
          v26977 = 0;
        }
        var v25111 = v26977;
        var v22393 = parseInt(v25111, 10);
        var v16871 = v22392 - v22393;
        introspect(JAM.policy.p3) {
          b$$399.width(v16871);
        }
      }
      return;
    }
    function v1322() {
      var v28202 = c$$328.currentItem;
      var v26978 = v28202[0];
      var v25112 = v26978.nodeName;
      introspect(JAM.policy.p3) {
        var v22394 = document.createElement(v25112)
      }
      introspect(JAM.policy.p3) {
        var v16873 = a$$452(v22394)
      }
      var v22395 = e$$236;
      var v25114 = !v22395;
      if (v25114) {
        var v28203 = c$$328.currentItem;
        var v26979 = v28203[0];
        var v25113 = v26979.className;
        v22395 = v25113 + " ui-sortable-placeholder";
      }
      var v16874 = v22395;
      introspect(JAM.policy.p3) {
        var v11266 = v16873.addClass(v16874)
      }
      introspect(JAM.policy.p3) {
        var v4441 = v11266.removeClass("ui-sortable-helper")
      }
      var b$$398 = v4441[0];
      var v16876 = !e$$236;
      if (v16876) {
        var v16875 = b$$398.style;
        v16875.visibility = "hidden";
      }
      return b$$398;
    }
    var c$$328 = b$$397 || this;
    var d$$255 = c$$328.options;
    var v16877 = d$$255.placeholder;
    var v11267 = !v16877;
    var v16879 = !v11267;
    if (v16879) {
      var v22396 = d$$255.placeholder;
      var v16878 = v22396.constructor;
      v11267 = v16878 == String;
    }
    var v4442 = v11267;
    if (v4442) {
      var e$$236 = d$$255.placeholder;
      d$$255.placeholder = {element:v1322, update:v1323};
    }
    var v16880 = c$$328;
    var v26980 = d$$255.placeholder;
    var v25115 = v26980.element;
    var v25116 = c$$328.element;
    var v25117 = c$$328.currentItem;
    introspect(JAM.policy.p3) {
      var v22397 = v25115.call(v25116, v25117)
    }
    introspect(JAM.policy.p3) {
      var v31061 = a$$452(v22397)
    }
    v16880.placeholder = v31061;
    var v16881 = c$$328.currentItem;
    var v16882 = c$$328.placeholder;
    introspect(JAM.policy.p3) {
      v16881.after(v16882);
    }
    var v11268 = d$$255.placeholder;
    var v11269 = c$$328.placeholder;
    introspect(JAM.policy.p3) {
      v11268.update(c$$328, v11269);
    }
    return;
  }
  function v1321(b$$396) {
    var v11270 = this.offsetParent;
    if (v11270) {
      v11270 = this.helper;
    }
    var v4443 = v11270;
    if (v4443) {
      var v11271 = this.offset;
      introspect(JAM.policy.p3) {
        var v31062 = this._getParentOffset()
      }
      v11271.parent = v31062;
    }
    var v11272 = this.items;
    var v4444 = v11272.length;
    var c$$327 = v4444 - 1;
    var v4448 = c$$327 >= 0;
    for (;v4448;) {
      var v4445 = this.items;
      var d$$254 = v4445[c$$327];
      var v22398 = d$$254.instance;
      var v22399 = this.currentContainer;
      var v16883 = v22398 != v22399;
      if (v16883) {
        v16883 = this.currentContainer;
      }
      var v11273 = v16883;
      if (v11273) {
        var v22400 = d$$254.item;
        var v16884 = v22400[0];
        var v22401 = this.currentItem;
        var v16885 = v22401[0];
        v11273 = v16884 != v16885;
      }
      var v4446 = v11273;
      if (v4446) {
        c$$327--;
        v4448 = c$$327 >= 0;
        continue;
      }
      var v4447;
      var v16886 = this.options;
      var v11276 = v16886.toleranceElement;
      if (v11276) {
        var v16887 = this.options;
        var v11274 = v16887.toleranceElement;
        var v11275 = d$$254.item;
        introspect(JAM.policy.p3) {
          v4447 = a$$452(v11274, v11275);
        }
      } else {
        v4447 = d$$254.item;
      }
      var e$$235 = v4447;
      var v11277 = !b$$396;
      if (v11277) {
        introspect(JAM.policy.p3) {
          var v31063 = e$$235.outerWidth()
        }
        d$$254.width = v31063;
        introspect(JAM.policy.p3) {
          var v31064 = e$$235.outerHeight()
        }
        d$$254.height = v31064;
      }
      introspect(JAM.policy.p3) {
        var f$$103 = e$$235.offset()
      }
      d$$254.left = f$$103.left;
      d$$254.top = f$$103.top;
      c$$327--;
      v4448 = c$$327 >= 0;
    }
    var v16888 = this.options;
    var v11278 = v16888.custom;
    if (v11278) {
      var v22402 = this.options;
      var v16889 = v22402.custom;
      v11278 = v16889.refreshContainers;
    }
    var v4453 = v11278;
    if (v4453) {
      var v16890 = this.options;
      var v11279 = v16890.custom;
      var v4449 = v11279.refreshContainers;
      introspect(JAM.policy.p3) {
        v4449.call(this);
      }
    } else {
      var v11280 = this.containers;
      var v4450 = v11280.length;
      c$$327 = v4450 - 1;
      var v4452 = c$$327 >= 0;
      for (;v4452;) {
        var v16891 = this.containers;
        var v11281 = v16891[c$$327];
        var v4451 = v11281.element;
        introspect(JAM.policy.p3) {
          f$$103 = v4451.offset();
        }
        var v26981 = this.containers;
        var v25118 = v26981[c$$327];
        var v22403 = v25118.containerCache;
        v22403.left = f$$103.left;
        var v26982 = this.containers;
        var v25119 = v26982[c$$327];
        var v22404 = v25119.containerCache;
        v22404.top = f$$103.top;
        var v25120 = this.containers;
        var v22405 = v25120[c$$327];
        var v16892 = v22405.containerCache;
        var v26983 = this.containers;
        var v25121 = v26983[c$$327];
        var v22406 = v25121.element;
        introspect(JAM.policy.p3) {
          var v31065 = v22406.outerWidth()
        }
        v16892.width = v31065;
        var v22407 = this.containers;
        var v16893 = v22407[c$$327];
        var v11282 = v16893.containerCache;
        var v25122 = this.containers;
        var v22408 = v25122[c$$327];
        var v16894 = v22408.element;
        introspect(JAM.policy.p3) {
          var v31066 = v16894.outerHeight()
        }
        v11282.height = v31066;
        c$$327--;
        v4452 = c$$327 >= 0;
      }
    }
    return this;
  }
  function v1320(b$$395) {
    this.items = [];
    this.containers = [this];
    var c$$326 = this.items;
    var d$$253 = this;
    var v16895;
    var v26984 = this.options;
    var v25123 = v26984.items;
    introspect(JAM.policy.p3) {
      var v22414 = a$$452.isFunction(v25123)
    }
    if (v22414) {
      var v25124 = this.options;
      var v22409 = v25124.items;
      var v25125 = this.element;
      var v22410 = v25125[0];
      var v25126 = this.currentItem;
      var v22411 = {item:v25126};
      introspect(JAM.policy.p3) {
        v16895 = v22409.call(v22410, b$$395, v22411);
      }
    } else {
      var v25127 = this.options;
      var v22412 = v25127.items;
      var v22413 = this.element;
      introspect(JAM.policy.p3) {
        v16895 = a$$452(v22412, v22413);
      }
    }
    var v11283 = v16895;
    var v4454 = [v11283, this];
    var e$$234 = [v4454];
    introspect(JAM.policy.p3) {
      var f$$102 = this._connectWith()
    }
    var v11284 = f$$102;
    if (v11284) {
      v11284 = this.ready;
    }
    var v4463 = v11284;
    if (v4463) {
      var v4455 = f$$102.length;
      var g$$135 = v4455 - 1;
      var v4462 = g$$135 >= 0;
      for (;v4462;) {
        var v4456 = f$$102[g$$135];
        introspect(JAM.policy.p3) {
          var h$$110 = a$$452(v4456)
        }
        var v4457 = h$$110.length;
        var i$$167 = v4457 - 1;
        var v4461 = i$$167 >= 0;
        for (;v4461;) {
          var v4458 = h$$110[i$$167];
          var v4459 = this.widgetName;
          introspect(JAM.policy.p3) {
            var j$$79 = a$$452.data(v4458, v4459)
          }
          var v16896 = j$$79;
          if (v16896) {
            v16896 = j$$79 != this;
          }
          var v11285 = v16896;
          if (v11285) {
            var v22415 = j$$79.options;
            var v16897 = v22415.disabled;
            v11285 = !v16897;
          }
          var v4460 = v11285;
          if (v4460) {
            var v25128;
            var v29010 = j$$79.options;
            var v28204 = v29010.items;
            introspect(JAM.policy.p3) {
              var v26990 = a$$452.isFunction(v28204)
            }
            if (v26990) {
              var v28205 = j$$79.options;
              var v26985 = v28205.items;
              var v28206 = j$$79.element;
              var v26986 = v28206[0];
              var v28207 = this.currentItem;
              var v26987 = {item:v28207};
              introspect(JAM.policy.p3) {
                v25128 = v26985.call(v26986, b$$395, v26987);
              }
            } else {
              var v28208 = j$$79.options;
              var v26988 = v28208.items;
              var v26989 = j$$79.element;
              introspect(JAM.policy.p3) {
                v25128 = a$$452(v26988, v26989);
              }
            }
            var v22416 = v25128;
            var v16898 = [v22416, j$$79];
            introspect(JAM.policy.p3) {
              e$$234.push(v16898);
            }
            var v16899 = this.containers;
            introspect(JAM.policy.p3) {
              v16899.push(j$$79);
            }
          }
          i$$167--;
          v4461 = i$$167 >= 0;
        }
        g$$135--;
        v4462 = g$$135 >= 0;
      }
    }
    var v4464 = e$$234.length;
    g$$135 = v4464 - 1;
    var v4469 = g$$135 >= 0;
    for (;v4469;) {
      var v4465 = e$$234[g$$135];
      var k$$54 = v4465[1];
      var v4466 = e$$234[g$$135];
      var l$$64 = v4466[0];
      i$$167 = 0;
      var m$$35 = l$$64.length;
      var v4468 = i$$167 < m$$35;
      for (;v4468;) {
        var v4467 = l$$64[i$$167];
        introspect(JAM.policy.p3) {
          var n$$85 = a$$452(v4467)
        }
        var v16900 = this.widgetName;
        var v11286 = v16900 + "-item";
        introspect(JAM.policy.p3) {
          n$$85.data(v11286, k$$54);
        }
        var v11287 = {item:n$$85, instance:k$$54, width:0, height:0, left:0, top:0};
        introspect(JAM.policy.p3) {
          c$$326.push(v11287);
        }
        i$$167++;
        v4468 = i$$167 < m$$35;
      }
      g$$135--;
      v4469 = g$$135 >= 0;
    }
    return;
  }
  function v1319() {
    var v4470 = this.currentItem;
    var v16901 = this.widgetName;
    var v11288 = ":data(" + v16901;
    var v4471 = v11288 + "-item)";
    introspect(JAM.policy.p3) {
      var a$$459 = v4470.find(v4471)
    }
    var b$$394 = 0;
    var v16902 = this.items;
    var v11289 = v16902.length;
    var v4474 = b$$394 < v11289;
    for (;v4474;) {
      var c$$325 = 0;
      var v11290 = a$$459.length;
      var v4473 = c$$325 < v11290;
      for (;v4473;) {
        var v11291 = a$$459[c$$325];
        var v25129 = this.items;
        var v22417 = v25129[b$$394];
        var v16903 = v22417.item;
        var v11292 = v16903[0];
        var v4472 = v11291 == v11292;
        if (v4472) {
          var v11293 = this.items;
          introspect(JAM.policy.p3) {
            v11293.splice(b$$394, 1);
          }
        }
        c$$325++;
        var v11294 = a$$459.length;
        v4473 = c$$325 < v11294;
      }
      b$$394++;
      var v16904 = this.items;
      var v11295 = v16904.length;
      v4474 = b$$394 < v11295;
    }
    return;
  }
  function v1318(b$$393) {
    function v1317() {
      introspect(JAM.policy.p3) {
        d$$252.push(this);
      }
      return;
    }
    var c$$324 = this;
    var d$$252 = [];
    var e$$233 = [];
    introspect(JAM.policy.p3) {
      var f$$101 = this._connectWith()
    }
    var v4483 = f$$101 && b$$393;
    if (v4483) {
      var v4475 = f$$101.length;
      var g$$134 = v4475 - 1;
      var v4482 = g$$134 >= 0;
      for (;v4482;) {
        var v4476 = f$$101[g$$134];
        introspect(JAM.policy.p3) {
          var h$$109 = a$$452(v4476)
        }
        var v4477 = h$$109.length;
        var i$$166 = v4477 - 1;
        var v4481 = i$$166 >= 0;
        for (;v4481;) {
          var v4478 = h$$109[i$$166];
          var v4479 = this.widgetName;
          introspect(JAM.policy.p3) {
            var j$$78 = a$$452.data(v4478, v4479)
          }
          var v16905 = j$$78;
          if (v16905) {
            v16905 = j$$78 != this;
          }
          var v11296 = v16905;
          if (v11296) {
            var v22418 = j$$78.options;
            var v16906 = v22418.disabled;
            v11296 = !v16906;
          }
          var v4480 = v11296;
          if (v4480) {
            var v22419;
            var v28209 = j$$78.options;
            var v26991 = v28209.items;
            introspect(JAM.policy.p3) {
              var v25133 = a$$452.isFunction(v26991)
            }
            if (v25133) {
              var v26992 = j$$78.options;
              var v25130 = v26992.items;
              var v25131 = j$$78.element;
              introspect(JAM.policy.p3) {
                v22419 = v25130.call(v25131);
              }
            } else {
              var v29011 = j$$78.options;
              var v28210 = v29011.items;
              var v28211 = j$$78.element;
              introspect(JAM.policy.p3) {
                var v26993 = a$$452(v28210, v28211)
              }
              introspect(JAM.policy.p3) {
                var v25132 = v26993.not(".ui-sortable-helper")
              }
              introspect(JAM.policy.p3) {
                v22419 = v25132.not(".ui-sortable-placeholder");
              }
            }
            var v16907 = v22419;
            var v11297 = [v16907, j$$78];
            introspect(JAM.policy.p3) {
              e$$233.push(v11297);
            }
          }
          i$$166--;
          v4481 = i$$166 >= 0;
        }
        g$$134--;
        v4482 = g$$134 >= 0;
      }
    }
    var v16908;
    var v26994 = this.options;
    var v25134 = v26994.items;
    introspect(JAM.policy.p3) {
      var v22424 = a$$452.isFunction(v25134)
    }
    if (v22424) {
      var v25135 = this.options;
      var v22420 = v25135.items;
      var v22421 = this.element;
      var v25136 = this.options;
      var v25137 = this.currentItem;
      var v22422 = {options:v25136, item:v25137};
      introspect(JAM.policy.p3) {
        v16908 = v22420.call(v22421, null, v22422);
      }
    } else {
      var v28212 = this.options;
      var v26995 = v28212.items;
      var v26996 = this.element;
      introspect(JAM.policy.p3) {
        var v25138 = a$$452(v26995, v26996)
      }
      introspect(JAM.policy.p3) {
        var v22423 = v25138.not(".ui-sortable-helper")
      }
      introspect(JAM.policy.p3) {
        v16908 = v22423.not(".ui-sortable-placeholder");
      }
    }
    var v11298 = v16908;
    var v4484 = [v11298, this];
    introspect(JAM.policy.p3) {
      e$$233.push(v4484);
    }
    var v4485 = e$$233.length;
    g$$134 = v4485 - 1;
    var v4487 = g$$134 >= 0;
    for (;v4487;) {
      var v11299 = e$$233[g$$134];
      var v4486 = v11299[0];
      introspect(JAM.policy.p3) {
        v4486.each(v1317);
      }
      g$$134--;
      v4487 = g$$134 >= 0;
    }
    introspect(JAM.policy.p3) {
      return a$$452(d$$252);
    }
  }
  function v1316() {
    var a$$458 = this.options;
    var v4488;
    var v22425 = a$$458.connectWith;
    var v16909 = v22425.constructor;
    var v11301 = v16909 == String;
    if (v11301) {
      var v11300 = a$$458.connectWith;
      v4488 = [v11300];
    } else {
      v4488 = a$$458.connectWith;
    }
    return v4488;
  }
  function v1315(a$$457) {
    introspect(JAM.policy.p3) {
      this._refreshItems(a$$457);
    }
    introspect(JAM.policy.p3) {
      this.refreshPositions();
    }
    return this;
  }
  function v1314() {
    var v11302 = this.positionAbs;
    var v4489 = v11302.left;
    var v11303 = this.lastPositionAbs;
    var v4490 = v11303.left;
    var a$$456 = v4489 - v4490;
    var v4491 = a$$456 != 0;
    if (v4491) {
      var v11304;
      var v16910 = a$$456 > 0;
      if (v16910) {
        v11304 = "right";
      } else {
        v11304 = "left";
      }
      v4491 = v11304;
    }
    return v4491;
  }
  function v1313() {
    var v11305 = this.positionAbs;
    var v4492 = v11305.top;
    var v11306 = this.lastPositionAbs;
    var v4493 = v11306.top;
    var a$$455 = v4492 - v4493;
    var v4494 = a$$455 != 0;
    if (v4494) {
      var v11307;
      var v16911 = a$$455 > 0;
      if (v16911) {
        v11307 = "down";
      } else {
        v11307 = "up";
      }
      v4494 = v11307;
    }
    return v4494;
  }
  function v1312(b$$392) {
    var v4495 = a$$452.ui;
    var v16912 = this.positionAbs;
    var v11308 = v16912.top;
    var v22426 = this.offset;
    var v16913 = v22426.click;
    var v11309 = v16913.top;
    var v4496 = v11308 + v11309;
    var v11310 = b$$392.top;
    var v16914 = b$$392.height;
    var v11311 = v16914 / 2;
    var v4497 = v11310 + v11311;
    var v4498 = b$$392.height;
    introspect(JAM.policy.p3) {
      var c$$323 = v4495.isOverAxis(v4496, v4497, v4498)
    }
    var v4499 = a$$452.ui;
    var v16915 = this.positionAbs;
    var v11312 = v16915.left;
    var v22427 = this.offset;
    var v16916 = v22427.click;
    var v11313 = v16916.left;
    var v4500 = v11312 + v11313;
    var v11314 = b$$392.left;
    var v16917 = b$$392.width;
    var v11315 = v16917 / 2;
    var v4501 = v11314 + v11315;
    var v4502 = b$$392.width;
    introspect(JAM.policy.p3) {
      var d$$251 = v4499.isOverAxis(v4500, v4501, v4502)
    }
    introspect(JAM.policy.p3) {
      var e$$232 = this._getDragVerticalDirection()
    }
    introspect(JAM.policy.p3) {
      var f$$100 = this._getDragHorizontalDirection()
    }
    var v4503;
    var v16918 = this.floating;
    if (v16918) {
      v16918 = f$$100;
    }
    var v11318 = v16918;
    if (v11318) {
      var v16919 = f$$100 == "right";
      if (v16919) {
        v16919 = d$$251;
      }
      var v11316 = v16919;
      var v16921 = !v11316;
      if (v16921) {
        var v16920 = f$$100 == "left";
        if (v16920) {
          v16920 = !d$$251;
        }
        v11316 = v16920;
      }
      v4503 = v11316;
    } else {
      var v11317 = e$$232;
      if (v11317) {
        var v22428 = e$$232 == "down";
        if (v22428) {
          v22428 = c$$323;
        }
        var v16922 = v22428;
        var v22430 = !v16922;
        if (v22430) {
          var v22429 = e$$232 == "up";
          if (v22429) {
            v22429 = !c$$323;
          }
          v16922 = v22429;
        }
        v11317 = v16922;
      }
      v4503 = v11317;
    }
    return v4503;
  }
  function v1311(b$$391) {
    var v16923 = this.options;
    var v11319 = v16923.axis;
    var v4504 = v11319 === "x";
    var v11324 = !v4504;
    if (v11324) {
      var v11320 = a$$452.ui;
      var v22431 = this.positionAbs;
      var v16924 = v22431.top;
      var v25139 = this.offset;
      var v22432 = v25139.click;
      var v16925 = v22432.top;
      var v11321 = v16924 + v16925;
      var v11322 = b$$391.top;
      var v11323 = b$$391.height;
      introspect(JAM.policy.p3) {
        v4504 = v11320.isOverAxis(v11321, v11322, v11323);
      }
    }
    var c$$322 = v4504;
    var v16926 = this.options;
    var v11325 = v16926.axis;
    var v4505 = v11325 === "y";
    var v11330 = !v4505;
    if (v11330) {
      var v11326 = a$$452.ui;
      var v22433 = this.positionAbs;
      var v16927 = v22433.left;
      var v25140 = this.offset;
      var v22434 = v25140.click;
      var v16928 = v22434.left;
      var v11327 = v16927 + v16928;
      var v11328 = b$$391.left;
      var v11329 = b$$391.width;
      introspect(JAM.policy.p3) {
        v4505 = v11326.isOverAxis(v11327, v11328, v11329);
      }
    }
    var d$$250 = v4505;
    var e$$231 = c$$322 && d$$250;
    introspect(JAM.policy.p3) {
      var f$$99 = this._getDragVerticalDirection()
    }
    introspect(JAM.policy.p3) {
      var g$$133 = this._getDragHorizontalDirection()
    }
    var v4506;
    if (e$$231) {
      var v11331;
      var v16931 = this.floating;
      if (v16931) {
        var v16929;
        var v26997 = g$$133;
        if (v26997) {
          v26997 = g$$133 == "right";
        }
        var v25141 = v26997;
        var v26998 = !v25141;
        if (v26998) {
          v25141 = f$$99 == "down";
        }
        var v22435 = v25141;
        if (v22435) {
          v16929 = 2;
        } else {
          v16929 = 1;
        }
        v11331 = v16929;
      } else {
        var v16930 = f$$99;
        if (v16930) {
          var v22436;
          var v25142 = f$$99 == "down";
          if (v25142) {
            v22436 = 2;
          } else {
            v22436 = 1;
          }
          v16930 = v22436;
        }
        v11331 = v16930;
      }
      v4506 = v11331;
    } else {
      v4506 = !1;
    }
    return v4506;
  }
  function v1310(a$$454) {
    var v4507 = this.positionAbs;
    var b$$390 = v4507.left;
    var v11332 = this.helperProportions;
    var v4508 = v11332.width;
    var c$$321 = b$$390 + v4508;
    var v4509 = this.positionAbs;
    var d$$249 = v4509.top;
    var v11333 = this.helperProportions;
    var v4510 = v11333.height;
    var e$$230 = d$$249 + v4510;
    var f$$98 = a$$454.left;
    var v4511 = a$$454.width;
    var g$$132 = f$$98 + v4511;
    var h$$108 = a$$454.top;
    var v4512 = a$$454.height;
    var i$$165 = h$$108 + v4512;
    var v11334 = this.offset;
    var v4513 = v11334.click;
    var j$$77 = v4513.top;
    var v11335 = this.offset;
    var v4514 = v11335.click;
    var k$$53 = v4514.left;
    var v22437 = d$$249 + j$$77;
    var v16932 = v22437 > h$$108;
    if (v16932) {
      var v22438 = d$$249 + j$$77;
      v16932 = v22438 < i$$165;
    }
    var v11336 = v16932;
    if (v11336) {
      var v16933 = b$$390 + k$$53;
      v11336 = v16933 > f$$98;
    }
    var v4515 = v11336;
    if (v4515) {
      var v11337 = b$$390 + k$$53;
      v4515 = v11337 < g$$132;
    }
    var l$$63 = v4515;
    var v4516;
    var v26999 = this.options;
    var v25143 = v26999.tolerance;
    var v22439 = v25143 == "pointer";
    var v25145 = !v22439;
    if (v25145) {
      var v25144 = this.options;
      v22439 = v25144.forcePointerForContainers;
    }
    var v16934 = v22439;
    var v22441 = !v16934;
    if (v22441) {
      var v27000 = this.options;
      var v25146 = v27000.tolerance;
      var v22440 = v25146 != "pointer";
      if (v22440) {
        var v27001 = this.helperProportions;
        var v28213;
        var v29012 = this.floating;
        if (v29012) {
          v28213 = "width";
        } else {
          v28213 = "height";
        }
        var v27002 = v28213;
        var v25147 = v27001[v27002];
        var v28214;
        var v29013 = this.floating;
        if (v29013) {
          v28214 = "width";
        } else {
          v28214 = "height";
        }
        var v27003 = v28214;
        var v25148 = a$$454[v27003];
        v22440 = v25147 > v25148;
      }
      v16934 = v22440;
    }
    var v11339 = v16934;
    if (v11339) {
      v4516 = l$$63;
    } else {
      var v29014 = this.helperProportions;
      var v28215 = v29014.width;
      var v27004 = v28215 / 2;
      var v25149 = b$$390 + v27004;
      var v22442 = f$$98 < v25149;
      if (v22442) {
        var v29015 = this.helperProportions;
        var v28216 = v29015.width;
        var v27005 = v28216 / 2;
        var v25150 = c$$321 - v27005;
        v22442 = v25150 < g$$132;
      }
      var v16935 = v22442;
      if (v16935) {
        var v28217 = this.helperProportions;
        var v27006 = v28217.height;
        var v25151 = v27006 / 2;
        var v22443 = d$$249 + v25151;
        v16935 = h$$108 < v22443;
      }
      var v11338 = v16935;
      if (v11338) {
        var v27007 = this.helperProportions;
        var v25152 = v27007.height;
        var v22444 = v25152 / 2;
        var v16936 = e$$230 - v22444;
        v11338 = v16936 < i$$165;
      }
      v4516 = v11338;
    }
    return v4516;
  }
  function v1309(b$$389) {
    function v1308() {
      var v25153 = b$$389.item;
      var v27008 = !v25153;
      if (v27008) {
        v25153 = this;
      }
      var v22445 = v25153;
      introspect(JAM.policy.p3) {
        var v16937 = a$$452(v22445)
      }
      var v22446 = b$$389.attribute;
      var v25154 = !v22446;
      if (v25154) {
        v22446 = "id";
      }
      var v16938 = v22446;
      introspect(JAM.policy.p3) {
        var v11340 = v16937.attr(v16938)
      }
      var v16939 = !v11340;
      if (v16939) {
        v11340 = "";
      }
      var v4517 = v11340;
      introspect(JAM.policy.p3) {
        d$$248.push(v4517);
      }
      return;
    }
    var v11341 = b$$389;
    if (v11341) {
      v11341 = b$$389.connected;
    }
    var v4518 = v11341;
    introspect(JAM.policy.p3) {
      var c$$320 = this._getItemsAsjQuery(v4518)
    }
    var d$$248 = [];
    b$$389 = b$$389 || {};
    introspect(JAM.policy.p3) {
      c$$320.each(v1308);
    }
    return d$$248;
  }
  function v1307(b$$388) {
    function v1306() {
      var v25155 = b$$388.item;
      var v27009 = !v25155;
      if (v27009) {
        v25155 = this;
      }
      var v22447 = v25155;
      introspect(JAM.policy.p3) {
        var v16940 = a$$452(v22447)
      }
      var v22448 = b$$388.attribute;
      var v25156 = !v22448;
      if (v25156) {
        v22448 = "id";
      }
      var v16941 = v22448;
      introspect(JAM.policy.p3) {
        var v11342 = v16940.attr(v16941)
      }
      var v16942 = !v11342;
      if (v16942) {
        v11342 = "";
      }
      var v4519 = v11342;
      var v11343 = b$$388.expression;
      var v16943 = !v11343;
      if (v16943) {
        v11343 = /(.+)[-=_](.+)/;
      }
      var v4520 = v11343;
      introspect(JAM.policy.p3) {
        var c$$319 = v4519.match(v4520)
      }
      if (c$$319) {
        var v25157 = b$$388.key;
        var v27011 = !v25157;
        if (v27011) {
          var v27010 = c$$319[1];
          v25157 = v27010 + "[]";
        }
        var v22449 = v25157;
        var v16944 = v22449 + "=";
        var v22450;
        var v27012 = b$$388.key;
        if (v27012) {
          v27012 = b$$388.expression;
        }
        var v25158 = v27012;
        if (v25158) {
          v22450 = c$$319[1];
        } else {
          v22450 = c$$319[2];
        }
        var v16945 = v22450;
        var v11344 = v16944 + v16945;
        introspect(JAM.policy.p3) {
          d$$247.push(v11344);
        }
      }
      return;
    }
    var v11345 = b$$388;
    if (v11345) {
      v11345 = b$$388.connected;
    }
    var v4521 = v11345;
    introspect(JAM.policy.p3) {
      var c$$318 = this._getItemsAsjQuery(v4521)
    }
    var d$$247 = [];
    b$$388 = b$$388 || {};
    introspect(JAM.policy.p3) {
      var v22451 = a$$452(c$$318)
    }
    introspect(JAM.policy.p3) {
      v22451.each(v1306);
    }
    var v25159 = d$$247.length;
    var v22452 = !v25159;
    if (v22452) {
      v22452 = b$$388.key;
    }
    var v16946 = v22452;
    if (v16946) {
      var v25160 = b$$388.key;
      var v22453 = v25160 + "=";
      introspect(JAM.policy.p3) {
        d$$247.push(v22453);
      }
    }
    introspect(JAM.policy.p3) {
      return d$$247.join("&");
    }
  }
  function v1305() {
    var b$$387 = this;
    var v4524 = this.dragging;
    if (v4524) {
      var v11346 = {target:null};
      introspect(JAM.policy.p3) {
        this._mouseUp(v11346);
      }
      var v11347;
      var v25161 = this.options;
      var v22454 = v25161.helper;
      var v16949 = v22454 == "original";
      if (v16949) {
        var v22455 = this.currentItem;
        var v22456 = this._storedCSS;
        introspect(JAM.policy.p3) {
          var v16947 = v22455.css(v22456)
        }
        introspect(JAM.policy.p3) {
          v11347 = v16947.removeClass("ui-sortable-helper");
        }
      } else {
        var v16948 = this.currentItem;
        introspect(JAM.policy.p3) {
          v11347 = v16948.show();
        }
      }
      v11347;
      var v11348 = this.containers;
      var v4522 = v11348.length;
      var c$$317 = v4522 - 1;
      var v4523 = c$$317 >= 0;
      for (;v4523;) {
        var v16950 = this.containers;
        var v11349 = v16950[c$$317];
        introspect(JAM.policy.p3) {
          var v11350 = b$$387._uiHash(this)
        }
        introspect(JAM.policy.p3) {
          v11349._trigger("deactivate", null, v11350);
        }
        var v25162 = this.containers;
        var v22457 = v25162[c$$317];
        var v16951 = v22457.containerCache;
        var v11351 = v16951.over;
        if (v11351) {
          var v25163 = this.containers;
          var v22458 = v25163[c$$317];
          introspect(JAM.policy.p3) {
            var v22459 = b$$387._uiHash(this)
          }
          introspect(JAM.policy.p3) {
            v22458._trigger("out", null, v22459);
          }
          var v27013 = this.containers;
          var v25164 = v27013[c$$317];
          var v22460 = v25164.containerCache;
          v22460.over = 0;
        }
        c$$317--;
        v4523 = c$$317 >= 0;
      }
    }
    var v11352 = this.placeholder;
    if (v11352) {
      var v29016 = this.placeholder;
      var v28218 = v29016[0];
      var v27014 = v28218.parentNode;
      if (v27014) {
        var v29543 = this.placeholder;
        var v29017 = v29543[0];
        var v28219 = v29017.parentNode;
        var v29018 = this.placeholder;
        var v28220 = v29018[0];
        introspect(JAM.policy.p3) {
          v28219.removeChild(v28220);
        }
      }
      var v29874 = this.options;
      var v29544 = v29874.helper;
      var v29019 = v29544 != "original";
      if (v29019) {
        v29019 = this.helper;
      }
      var v28221 = v29019;
      if (v28221) {
        var v29545 = this.helper;
        var v29020 = v29545[0];
        v28221 = v29020.parentNode;
      }
      var v27015 = v28221;
      if (v27015) {
        var v28222 = this.helper;
        introspect(JAM.policy.p3) {
          v28222.remove();
        }
      }
      var v27016 = !1;
      var v27017 = !1;
      var v25165 = {helper:null, dragging:v27016, reverting:v27017, _noFinalSort:null};
      introspect(JAM.policy.p3) {
        a$$452.extend(this, v25165);
      }
      var v22461;
      var v27018 = this.domPosition;
      var v25170 = v27018.prev;
      if (v25170) {
        var v28223 = this.domPosition;
        var v27019 = v28223.prev;
        introspect(JAM.policy.p3) {
          var v25166 = a$$452(v27019)
        }
        var v25167 = this.currentItem;
        introspect(JAM.policy.p3) {
          v22461 = v25166.after(v25167);
        }
      } else {
        var v28224 = this.domPosition;
        var v27020 = v28224.parent;
        introspect(JAM.policy.p3) {
          var v25168 = a$$452(v27020)
        }
        var v25169 = this.currentItem;
        introspect(JAM.policy.p3) {
          v22461 = v25168.prepend(v25169);
        }
      }
      v22461;
    }
    return this;
  }
  function v1304(b$$386, c$$316) {
    function v1303() {
      introspect(JAM.policy.p3) {
        d$$246._clear(b$$386);
      }
      return;
    }
    var v4525 = !b$$386;
    if (v4525) {
      return;
    }
    var v16952 = a$$452.ui;
    var v11353 = v16952.ddmanager;
    if (v11353) {
      var v22462 = this.options;
      var v16953 = v22462.dropBehaviour;
      v11353 = !v16953;
    }
    var v4526 = v11353;
    if (v4526) {
      var v16954 = a$$452.ui;
      var v11354 = v16954.ddmanager;
      introspect(JAM.policy.p3) {
        v11354.drop(this, b$$386);
      }
    }
    var v11355 = this.options;
    var v4528 = v11355.revert;
    if (v4528) {
      var d$$246 = this;
      var v4527 = d$$246.placeholder;
      introspect(JAM.policy.p3) {
        var e$$229 = v4527.offset()
      }
      d$$246.reverting = !0;
      var v16955 = this.helper;
      introspect(JAM.policy.p3) {
        var v11356 = a$$452(v16955)
      }
      var v27021 = e$$229.left;
      var v29021 = this.offset;
      var v28225 = v29021.parent;
      var v27022 = v28225.left;
      var v25171 = v27021 - v27022;
      var v27023 = d$$246.margins;
      var v25172 = v27023.left;
      var v22463 = v25171 - v25172;
      var v25173;
      var v29022 = this.offsetParent;
      var v28226 = v29022[0];
      var v28227 = document.body;
      var v27025 = v28226 == v28227;
      if (v27025) {
        v25173 = 0;
      } else {
        var v28228 = this.offsetParent;
        var v27024 = v28228[0];
        v25173 = v27024.scrollLeft;
      }
      var v22464 = v25173;
      var v16956 = v22463 + v22464;
      var v27026 = e$$229.top;
      var v29023 = this.offset;
      var v28229 = v29023.parent;
      var v27027 = v28229.top;
      var v25174 = v27026 - v27027;
      var v27028 = d$$246.margins;
      var v25175 = v27028.top;
      var v22465 = v25174 - v25175;
      var v25176;
      var v29024 = this.offsetParent;
      var v28230 = v29024[0];
      var v28231 = document.body;
      var v27030 = v28230 == v28231;
      if (v27030) {
        v25176 = 0;
      } else {
        var v28232 = this.offsetParent;
        var v27029 = v28232[0];
        v25176 = v27029.scrollTop;
      }
      var v22466 = v25176;
      var v16957 = v22465 + v22466;
      var v11357 = {left:v16956, top:v16957};
      var v25177 = this.options;
      var v22467 = v25177.revert;
      var v16958 = parseInt(v22467, 10);
      var v22468 = !v16958;
      if (v22468) {
        v16958 = 500;
      }
      var v11358 = v16958;
      introspect(JAM.policy.p3) {
        v11356.animate(v11357, v11358, v1303);
      }
    } else {
      introspect(JAM.policy.p3) {
        this._clear(b$$386, c$$316);
      }
    }
    return !1;
  }
  function v1302(b$$385) {
    introspect(JAM.policy.p3) {
      var v31067 = this._generatePosition(b$$385)
    }
    this.position = v31067;
    introspect(JAM.policy.p3) {
      var v31068 = this._convertPositionTo("absolute")
    }
    this.positionAbs = v31068;
    var v11359 = this.lastPositionAbs;
    var v16959 = !v11359;
    if (v16959) {
      this.lastPositionAbs = this.positionAbs;
    }
    var v11360 = this.options;
    var v4529 = v11360.scroll;
    if (v4529) {
      var c$$315 = this.options;
      var d$$245 = !1;
      var v11361;
      var v27031 = this.scrollParent;
      var v25178 = v27031[0];
      var v22469 = v25178 != document;
      if (v22469) {
        var v28233 = this.scrollParent;
        var v27032 = v28233[0];
        var v25179 = v27032.tagName;
        v22469 = v25179 != "HTML";
      }
      var v16960 = v22469;
      if (v16960) {
        var v22470;
        var v29546 = this.overflowOffset;
        var v29025 = v29546.top;
        var v29875 = this.scrollParent;
        var v29547 = v29875[0];
        var v29026 = v29547.offsetHeight;
        var v28234 = v29025 + v29026;
        var v28235 = b$$385.pageY;
        var v27033 = v28234 - v28235;
        var v27034 = c$$315.scrollSensitivity;
        var v25182 = v27033 < v27034;
        if (v25182) {
          var v27035 = this.scrollParent;
          var v25180 = v27035[0];
          var v29027 = this.scrollParent;
          var v28236 = v29027[0];
          var v27036 = v28236.scrollTop;
          var v27037 = c$$315.scrollSpeed;
          v22470 = v25180.scrollTop = d$$245 = v27036 + v27037;
        } else {
          var v28237 = b$$385.pageY;
          var v29028 = this.overflowOffset;
          var v28238 = v29028.top;
          var v27038 = v28237 - v28238;
          var v27039 = c$$315.scrollSensitivity;
          var v25181 = v27038 < v27039;
          if (v25181) {
            var v28239 = this.scrollParent;
            var v27040 = v28239[0];
            var v29548 = this.scrollParent;
            var v29029 = v29548[0];
            var v28240 = v29029.scrollTop;
            var v28241 = c$$315.scrollSpeed;
            v25181 = v27040.scrollTop = d$$245 = v28240 - v28241;
          }
          v22470 = v25181;
        }
        v22470;
        var v22471;
        var v29549 = this.overflowOffset;
        var v29030 = v29549.left;
        var v29876 = this.scrollParent;
        var v29550 = v29876[0];
        var v29031 = v29550.offsetWidth;
        var v28242 = v29030 + v29031;
        var v28243 = b$$385.pageX;
        var v27041 = v28242 - v28243;
        var v27042 = c$$315.scrollSensitivity;
        var v25185 = v27041 < v27042;
        if (v25185) {
          var v27043 = this.scrollParent;
          var v25183 = v27043[0];
          var v29032 = this.scrollParent;
          var v28244 = v29032[0];
          var v27044 = v28244.scrollLeft;
          var v27045 = c$$315.scrollSpeed;
          v22471 = v25183.scrollLeft = d$$245 = v27044 + v27045;
        } else {
          var v28245 = b$$385.pageX;
          var v29033 = this.overflowOffset;
          var v28246 = v29033.left;
          var v27046 = v28245 - v28246;
          var v27047 = c$$315.scrollSensitivity;
          var v25184 = v27046 < v27047;
          if (v25184) {
            var v28247 = this.scrollParent;
            var v27048 = v28247[0];
            var v29551 = this.scrollParent;
            var v29034 = v29551[0];
            var v28248 = v29034.scrollLeft;
            var v28249 = c$$315.scrollSpeed;
            v25184 = v27048.scrollLeft = d$$245 = v28248 - v28249;
          }
          v22471 = v25184;
        }
        v11361 = v22471;
      } else {
        var v22472;
        var v28250 = b$$385.pageY;
        introspect(JAM.policy.p3) {
          var v29035 = a$$452(document)
        }
        introspect(JAM.policy.p3) {
          var v28251 = v29035.scrollTop()
        }
        var v27049 = v28250 - v28251;
        var v27050 = c$$315.scrollSensitivity;
        var v25189 = v27049 < v27050;
        if (v25189) {
          introspect(JAM.policy.p3) {
            var v25186 = a$$452(document)
          }
          introspect(JAM.policy.p3) {
            var v28252 = a$$452(document)
          }
          introspect(JAM.policy.p3) {
            var v27051 = v28252.scrollTop()
          }
          var v27052 = c$$315.scrollSpeed;
          var v25187 = v27051 - v27052;
          introspect(JAM.policy.p3) {
            v22472 = d$$245 = v25186.scrollTop(v25187);
          }
        } else {
          introspect(JAM.policy.p3) {
            var v29036 = a$$452(window)
          }
          introspect(JAM.policy.p3) {
            var v28253 = v29036.height()
          }
          var v29037 = b$$385.pageY;
          introspect(JAM.policy.p3) {
            var v29552 = a$$452(document)
          }
          introspect(JAM.policy.p3) {
            var v29038 = v29552.scrollTop()
          }
          var v28254 = v29037 - v29038;
          var v27053 = v28253 - v28254;
          var v27054 = c$$315.scrollSensitivity;
          var v25188 = v27053 < v27054;
          if (v25188) {
            introspect(JAM.policy.p3) {
              var v27055 = a$$452(document)
            }
            introspect(JAM.policy.p3) {
              var v29039 = a$$452(document)
            }
            introspect(JAM.policy.p3) {
              var v28255 = v29039.scrollTop()
            }
            var v28256 = c$$315.scrollSpeed;
            var v27056 = v28255 + v28256;
            introspect(JAM.policy.p3) {
              v25188 = d$$245 = v27055.scrollTop(v27056);
            }
          }
          v22472 = v25188;
        }
        v22472;
        var v22473;
        var v28257 = b$$385.pageX;
        introspect(JAM.policy.p3) {
          var v29040 = a$$452(document)
        }
        introspect(JAM.policy.p3) {
          var v28258 = v29040.scrollLeft()
        }
        var v27057 = v28257 - v28258;
        var v27058 = c$$315.scrollSensitivity;
        var v25193 = v27057 < v27058;
        if (v25193) {
          introspect(JAM.policy.p3) {
            var v25190 = a$$452(document)
          }
          introspect(JAM.policy.p3) {
            var v28259 = a$$452(document)
          }
          introspect(JAM.policy.p3) {
            var v27059 = v28259.scrollLeft()
          }
          var v27060 = c$$315.scrollSpeed;
          var v25191 = v27059 - v27060;
          introspect(JAM.policy.p3) {
            v22473 = d$$245 = v25190.scrollLeft(v25191);
          }
        } else {
          introspect(JAM.policy.p3) {
            var v29041 = a$$452(window)
          }
          introspect(JAM.policy.p3) {
            var v28260 = v29041.width()
          }
          var v29042 = b$$385.pageX;
          introspect(JAM.policy.p3) {
            var v29553 = a$$452(document)
          }
          introspect(JAM.policy.p3) {
            var v29043 = v29553.scrollLeft()
          }
          var v28261 = v29042 - v29043;
          var v27061 = v28260 - v28261;
          var v27062 = c$$315.scrollSensitivity;
          var v25192 = v27061 < v27062;
          if (v25192) {
            introspect(JAM.policy.p3) {
              var v27063 = a$$452(document)
            }
            introspect(JAM.policy.p3) {
              var v29044 = a$$452(document)
            }
            introspect(JAM.policy.p3) {
              var v28262 = v29044.scrollLeft()
            }
            var v28263 = c$$315.scrollSpeed;
            var v27064 = v28262 + v28263;
            introspect(JAM.policy.p3) {
              v25192 = d$$245 = v27063.scrollLeft(v27064);
            }
          }
          v22473 = v25192;
        }
        v11361 = v22473;
      }
      v11361;
      var v25194 = !1;
      var v22474 = d$$245 !== v25194;
      if (v22474) {
        var v25195 = a$$452.ui;
        v22474 = v25195.ddmanager;
      }
      var v16961 = v22474;
      if (v16961) {
        var v22475 = c$$315.dropBehaviour;
        v16961 = !v22475;
      }
      var v11362 = v16961;
      if (v11362) {
        var v22476 = a$$452.ui;
        var v16962 = v22476.ddmanager;
        introspect(JAM.policy.p3) {
          v16962.prepareOffsets(this, b$$385);
        }
      }
    }
    introspect(JAM.policy.p3) {
      var v31069 = this._convertPositionTo("absolute")
    }
    this.positionAbs = v31069;
    var v22477 = this.options;
    var v16963 = v22477.axis;
    var v11363 = !v16963;
    var v16965 = !v11363;
    if (v16965) {
      var v22478 = this.options;
      var v16964 = v22478.axis;
      v11363 = v16964 != "y";
    }
    var v4531 = v11363;
    if (v4531) {
      var v16966 = this.helper;
      var v11364 = v16966[0];
      var v4530 = v11364.style;
      var v16967 = this.position;
      var v11365 = v16967.left;
      v4530.left = v11365 + "px";
    }
    var v22479 = this.options;
    var v16968 = v22479.axis;
    var v11366 = !v16968;
    var v16970 = !v11366;
    if (v16970) {
      var v22480 = this.options;
      var v16969 = v22480.axis;
      v11366 = v16969 != "x";
    }
    var v4533 = v11366;
    if (v4533) {
      var v16971 = this.helper;
      var v11367 = v16971[0];
      var v4532 = v11367.style;
      var v16972 = this.position;
      var v11368 = v16972.top;
      v4532.top = v11368 + "px";
    }
    var v11369 = this.items;
    var v4534 = v11369.length;
    var e$$228 = v4534 - 1;
    var v4543 = e$$228 >= 0;
    for (;v4543;) {
      var v4535 = this.items;
      var f$$97 = v4535[e$$228];
      var v4536 = f$$97.item;
      var g$$131 = v4536[0];
      introspect(JAM.policy.p3) {
        var h$$107 = this._intersectsWithPointer(f$$97)
      }
      var v4537 = !h$$107;
      if (v4537) {
        e$$228--;
        v4543 = e$$228 >= 0;
        continue;
      }
      var v11370 = f$$97.instance;
      var v11371 = this.currentContainer;
      var v4538 = v11370 !== v11371;
      if (v4538) {
        e$$228--;
        v4543 = e$$228 >= 0;
        continue;
      }
      var v27065 = this.currentItem;
      var v25196 = v27065[0];
      var v22481 = g$$131 != v25196;
      if (v22481) {
        var v28264 = this.placeholder;
        var v29045;
        var v29554 = h$$107 == 1;
        if (v29554) {
          v29045 = "next";
        } else {
          v29045 = "prev";
        }
        var v28265 = v29045;
        introspect(JAM.policy.p3) {
          var v27066 = v28264[v28265]()
        }
        var v25197 = v27066[0];
        v22481 = v25197 != g$$131;
      }
      var v16973 = v22481;
      if (v16973) {
        var v25198 = a$$452.ui;
        var v27067 = this.placeholder;
        var v25199 = v27067[0];
        introspect(JAM.policy.p3) {
          var v22482 = v25198.contains(v25199, g$$131)
        }
        v16973 = !v22482;
      }
      var v11372 = v16973;
      if (v11372) {
        var v16974;
        var v27068 = this.options;
        var v25200 = v27068.type;
        var v22484 = v25200 == "semi-dynamic";
        if (v22484) {
          var v25201 = a$$452.ui;
          var v27069 = this.element;
          var v25202 = v27069[0];
          introspect(JAM.policy.p3) {
            var v22483 = v25201.contains(v25202, g$$131)
          }
          v16974 = !v22483;
        } else {
          v16974 = !0;
        }
        v11372 = v16974;
      }
      var v4542 = v11372;
      if (v4542) {
        var v4539;
        var v11373 = h$$107 == 1;
        if (v11373) {
          v4539 = "down";
        } else {
          v4539 = "up";
        }
        this.direction = v4539;
        var v22485 = this.options;
        var v16975 = v22485.tolerance;
        var v11374 = v16975 == "pointer";
        var v16976 = !v11374;
        if (v16976) {
          introspect(JAM.policy.p3) {
            v11374 = this._intersectsWithSides(f$$97);
          }
        }
        var v4540 = v11374;
        if (v4540) {
          introspect(JAM.policy.p3) {
            this._rearrange(b$$385, f$$97);
          }
        } else {
          break;
        }
        introspect(JAM.policy.p3) {
          var v4541 = this._uiHash()
        }
        introspect(JAM.policy.p3) {
          this._trigger("change", b$$385, v4541);
        }
        break;
      }
      e$$228--;
      v4543 = e$$228 >= 0;
    }
    introspect(JAM.policy.p3) {
      this._contactContainers(b$$385);
    }
    var v27070 = a$$452.ui;
    var v25203 = v27070.ddmanager;
    if (v25203) {
      var v28266 = a$$452.ui;
      var v27071 = v28266.ddmanager;
      introspect(JAM.policy.p3) {
        v27071.drag(this, b$$385);
      }
    }
    introspect(JAM.policy.p3) {
      var v22486 = this._uiHash()
    }
    introspect(JAM.policy.p3) {
      this._trigger("sort", b$$385, v22486);
    }
    this.lastPositionAbs = this.positionAbs;
    return !1;
  }
  function v1301(b$$384, c$$314, d$$244) {
    var e$$227 = this.options;
    var f$$96 = this;
    this.currentContainer = this;
    introspect(JAM.policy.p3) {
      this.refreshPositions();
    }
    introspect(JAM.policy.p3) {
      var v31070 = this._createHelper(b$$384)
    }
    this.helper = v31070;
    introspect(JAM.policy.p3) {
      this._cacheHelperProportions();
    }
    introspect(JAM.policy.p3) {
      this._cacheMargins();
    }
    var v30843 = this.helper;
    introspect(JAM.policy.p3) {
      var v31071 = v30843.scrollParent()
    }
    this.scrollParent = v31071;
    var v30832 = this.currentItem;
    introspect(JAM.policy.p3) {
      var v31072 = v30832.offset()
    }
    this.offset = v31072;
    var v30844 = this.offset;
    var v30833 = v30844.top;
    var v30845 = this.margins;
    var v30834 = v30845.top;
    var v30817 = v30833 - v30834;
    var v30846 = this.offset;
    var v30835 = v30846.left;
    var v30847 = this.margins;
    var v30836 = v30847.left;
    var v30818 = v30835 - v30836;
    this.offset = {top:v30817, left:v30818};
    var v30796 = this.offset;
    var v30848 = b$$384.pageX;
    var v30855 = this.offset;
    var v30849 = v30855.left;
    var v30837 = v30848 - v30849;
    var v30850 = b$$384.pageY;
    var v30856 = this.offset;
    var v30851 = v30856.top;
    var v30838 = v30850 - v30851;
    var v30819 = {left:v30837, top:v30838};
    introspect(JAM.policy.p3) {
      var v30820 = this._getParentOffset()
    }
    introspect(JAM.policy.p3) {
      var v30821 = this._getRelativeOffset()
    }
    var v30797 = {click:v30819, parent:v30820, relative:v30821};
    introspect(JAM.policy.p3) {
      a$$452.extend(v30796, v30797);
    }
    var v30767 = this.helper;
    introspect(JAM.policy.p3) {
      v30767.css("position", "absolute");
    }
    var v30728 = this.helper;
    introspect(JAM.policy.p3) {
      var v31073 = v30728.css("position")
    }
    this.cssPosition = v31073;
    introspect(JAM.policy.p3) {
      var v31074 = this._generatePosition(b$$384)
    }
    this.originalPosition = v31074;
    this.originalPageX = b$$384.pageX;
    this.originalPageY = b$$384.pageY;
    var v30327 = e$$227.cursorAt;
    if (v30327) {
      var v30467 = e$$227.cursorAt;
      introspect(JAM.policy.p3) {
        this._adjustOffsetFromHelper(v30467);
      }
    }
    var v30468 = this.currentItem;
    introspect(JAM.policy.p3) {
      var v30328 = v30468.prev()
    }
    var v30128 = v30328[0];
    var v30469 = this.currentItem;
    introspect(JAM.policy.p3) {
      var v30329 = v30469.parent()
    }
    var v30129 = v30329[0];
    this.domPosition = {prev:v30128, parent:v30129};
    var v30330 = this.helper;
    var v30130 = v30330[0];
    var v30331 = this.currentItem;
    var v30131 = v30331[0];
    var v29877 = v30130 != v30131;
    if (v29877) {
      var v30132 = this.currentItem;
      introspect(JAM.policy.p3) {
        v30132.hide();
      }
    }
    introspect(JAM.policy.p3) {
      this._createPlaceholder();
    }
    var v29046 = e$$227.containment;
    if (v29046) {
      introspect(JAM.policy.p3) {
        this._setContainment();
      }
    }
    var v28267 = e$$227.cursor;
    if (v28267) {
      introspect(JAM.policy.p3) {
        var v29878 = a$$452("body")
      }
      introspect(JAM.policy.p3) {
        var v29555 = v29878.css("cursor")
      }
      if (v29555) {
        introspect(JAM.policy.p3) {
          var v29879 = a$$452("body")
        }
        introspect(JAM.policy.p3) {
          var v31075 = v29879.css("cursor")
        }
        this._storedCursor = v31075;
      }
      introspect(JAM.policy.p3) {
        var v29556 = a$$452("body")
      }
      var v29557 = e$$227.cursor;
      introspect(JAM.policy.p3) {
        v29556.css("cursor", v29557);
      }
    }
    var v27072 = e$$227.opacity;
    if (v27072) {
      var v29558 = this.helper;
      introspect(JAM.policy.p3) {
        var v29047 = v29558.css("opacity")
      }
      if (v29047) {
        var v29559 = this.helper;
        introspect(JAM.policy.p3) {
          var v31076 = v29559.css("opacity")
        }
        this._storedOpacity = v31076;
      }
      var v29048 = this.helper;
      var v29049 = e$$227.opacity;
      introspect(JAM.policy.p3) {
        v29048.css("opacity", v29049);
      }
    }
    var v25204 = e$$227.zIndex;
    if (v25204) {
      var v29050 = this.helper;
      introspect(JAM.policy.p3) {
        var v28268 = v29050.css("zIndex")
      }
      if (v28268) {
        var v29051 = this.helper;
        introspect(JAM.policy.p3) {
          var v31077 = v29051.css("zIndex")
        }
        this._storedZIndex = v31077;
      }
      var v28269 = this.helper;
      var v28270 = e$$227.zIndex;
      introspect(JAM.policy.p3) {
        v28269.css("zIndex", v28270);
      }
    }
    var v28271 = this.scrollParent;
    var v27073 = v28271[0];
    var v25205 = v27073 != document;
    if (v25205) {
      var v29052 = this.scrollParent;
      var v28272 = v29052[0];
      var v27074 = v28272.tagName;
      v25205 = v27074 != "HTML";
    }
    var v22487 = v25205;
    if (v22487) {
      var v25206 = this.scrollParent;
      introspect(JAM.policy.p3) {
        var v31078 = v25206.offset()
      }
      this.overflowOffset = v31078;
    }
    introspect(JAM.policy.p3) {
      var v16977 = this._uiHash()
    }
    introspect(JAM.policy.p3) {
      this._trigger("start", b$$384, v16977);
    }
    var v11375 = this._preserveHelperProportions;
    var v16978 = !v11375;
    if (v16978) {
      introspect(JAM.policy.p3) {
        this._cacheHelperProportions();
      }
    }
    var v4548 = !d$$244;
    if (v4548) {
      var v11376 = this.containers;
      var v4544 = v11376.length;
      var g$$130 = v4544 - 1;
      var v4547 = g$$130 >= 0;
      for (;v4547;) {
        var v11377 = this.containers;
        var v4545 = v11377[g$$130];
        introspect(JAM.policy.p3) {
          var v4546 = f$$96._uiHash(this)
        }
        introspect(JAM.policy.p3) {
          v4545._trigger("activate", b$$384, v4546);
        }
        g$$130--;
        v4547 = g$$130 >= 0;
      }
    }
    var v28273 = a$$452.ui;
    var v27075 = v28273.ddmanager;
    if (v27075) {
      var v29053 = a$$452.ui;
      var v28274 = v29053.ddmanager;
      v28274.current = this;
    }
    var v29054 = a$$452.ui;
    var v28275 = v29054.ddmanager;
    if (v28275) {
      var v29055 = e$$227.dropBehaviour;
      v28275 = !v29055;
    }
    var v27076 = v28275;
    if (v27076) {
      var v29056 = a$$452.ui;
      var v28276 = v29056.ddmanager;
      introspect(JAM.policy.p3) {
        v28276.prepareOffsets(this, b$$384);
      }
    }
    this.dragging = !0;
    var v22488 = this.helper;
    introspect(JAM.policy.p3) {
      v22488.addClass("ui-sortable-helper");
    }
    introspect(JAM.policy.p3) {
      this._mouseDrag(b$$384);
    }
    return !0;
  }
  function v1300(b$$383, c$$313) {
    function v1299() {
      var v11378 = b$$383.target;
      var v4549 = this == v11378;
      if (v4549) {
        h$$106 = !0;
      }
      return;
    }
    function v1298() {
      var v22489 = d$$243.widgetName;
      var v16979 = v22489 + "-item";
      introspect(JAM.policy.p3) {
        var v11379 = a$$452.data(this, v16979)
      }
      var v4550 = v11379 == f$$95;
      if (v4550) {
        introspect(JAM.policy.p3) {
          e$$226 = a$$452(this);
        }
        return !1;
      }
      return;
    }
    var d$$243 = this;
    var v4551 = this.reverting;
    if (v4551) {
      return !1;
    }
    var v16980 = this.options;
    var v11380 = v16980.disabled;
    var v16982 = !v11380;
    if (v16982) {
      var v22490 = this.options;
      var v16981 = v22490.type;
      v11380 = v16981 == "static";
    }
    var v4552 = v11380;
    if (v4552) {
      return !1;
    }
    introspect(JAM.policy.p3) {
      this._refreshItems(b$$383);
    }
    var e$$226 = null;
    var f$$95 = this;
    var v16983 = b$$383.target;
    introspect(JAM.policy.p3) {
      var v11381 = a$$452(v16983)
    }
    introspect(JAM.policy.p3) {
      var v4553 = v11381.parents()
    }
    introspect(JAM.policy.p3) {
      var g$$129 = v4553.each(v1298)
    }
    var v16984 = b$$383.target;
    var v22491 = d$$243.widgetName;
    var v16985 = v22491 + "-item";
    introspect(JAM.policy.p3) {
      var v11382 = a$$452.data(v16984, v16985)
    }
    var v4554 = v11382 == f$$95;
    if (v4554) {
      var v11383 = b$$383.target;
      introspect(JAM.policy.p3) {
        e$$226 = a$$452(v11383);
      }
    }
    var v4555 = !e$$226;
    if (v4555) {
      return !1;
    }
    var v16986 = this.options;
    var v11384 = v16986.handle;
    if (v11384) {
      v11384 = !c$$313;
    }
    var v4558 = v11384;
    if (v4558) {
      var h$$106 = !1;
      var v25207 = this.options;
      var v22492 = v25207.handle;
      introspect(JAM.policy.p3) {
        var v16987 = a$$452(v22492, e$$226)
      }
      introspect(JAM.policy.p3) {
        var v11385 = v16987.find("*")
      }
      introspect(JAM.policy.p3) {
        var v4556 = v11385.andSelf()
      }
      introspect(JAM.policy.p3) {
        v4556.each(v1299);
      }
      var v4557 = !h$$106;
      if (v4557) {
        return !1;
      }
    }
    this.currentItem = e$$226;
    introspect(JAM.policy.p3) {
      this._removeCurrentsFromItems();
    }
    return !0;
  }
  function v1297(b$$382, c$$312) {
    var v4559;
    var v11387 = b$$382 === "disabled";
    if (v11387) {
      var v16988 = this.options;
      introspect(JAM.policy.p2) {
        v16988[b$$382] = c$$312;
      }
      introspect(JAM.policy.p3) {
        var v16989 = this.widget()
      }
      var v22493;
      if (c$$312) {
        v22493 = "addClass";
      } else {
        v22493 = "removeClass";
      }
      var v16990 = v22493;
      introspect(JAM.policy.p3) {
        v4559 = v16989[v16990]("ui-sortable-disabled");
      }
    } else {
      var v22494 = a$$452.Widget;
      var v16991 = v22494.prototype;
      var v11386 = v16991._setOption;
      introspect(JAM.policy.p3) {
        v4559 = v11386.apply(this, arguments);
      }
    }
    v4559;
    return;
  }
  function v1296() {
    var v25208 = a$$452.Widget;
    var v22495 = v25208.prototype;
    var v16992 = v22495.destroy;
    introspect(JAM.policy.p3) {
      v16992.call(this);
    }
    var v16993 = this.element;
    introspect(JAM.policy.p3) {
      v16993.removeClass("ui-sortable ui-sortable-disabled");
    }
    introspect(JAM.policy.p3) {
      this._mouseDestroy();
    }
    var v11388 = this.items;
    var v4560 = v11388.length;
    var b$$381 = v4560 - 1;
    var v4563 = b$$381 >= 0;
    for (;v4563;) {
      var v16994 = this.items;
      var v11389 = v16994[b$$381];
      var v4561 = v11389.item;
      var v11390 = this.widgetName;
      var v4562 = v11390 + "-item";
      introspect(JAM.policy.p3) {
        v4561.removeData(v4562);
      }
      b$$381--;
      v4563 = b$$381 >= 0;
    }
    return this;
  }
  function v1295() {
    var a$$453 = this.options;
    this.containerCache = {};
    var v28277 = this.element;
    introspect(JAM.policy.p3) {
      v28277.addClass("ui-sortable");
    }
    introspect(JAM.policy.p3) {
      this.refresh();
    }
    var v25209;
    var v28278 = this.items;
    var v27078 = v28278.length;
    if (v27078) {
      var v29057 = a$$453.axis;
      var v28279 = v29057 === "x";
      var v29059 = !v28279;
      if (v29059) {
        var v30133 = this.items;
        var v29880 = v30133[0];
        var v29560 = v29880.item;
        introspect(JAM.policy.p3) {
          var v29058 = v29560.css("float")
        }
        introspect(JAM.policy.p3) {
          v28279 = /left|right/.test(v29058);
        }
      }
      var v27077 = v28279;
      var v28281 = !v27077;
      if (v28281) {
        var v29881 = this.items;
        var v29561 = v29881[0];
        var v29060 = v29561.item;
        introspect(JAM.policy.p3) {
          var v28280 = v29060.css("display")
        }
        introspect(JAM.policy.p3) {
          v27077 = /inline|table-cell/.test(v28280);
        }
      }
      v25209 = v27077;
    } else {
      v25209 = !1;
    }
    this.floating = v25209;
    var v22496 = this.element;
    introspect(JAM.policy.p3) {
      var v31079 = v22496.offset()
    }
    this.offset = v31079;
    introspect(JAM.policy.p3) {
      this._mouseInit();
    }
    this.ready = !0;
    return;
  }
  var v16995 = a$$452.ui;
  var v11391 = v16995.mouse;
  var v16996 = !1;
  var v22497 = !1;
  var v22498 = !1;
  var v22499 = !1;
  var v22500 = !1;
  var v22501 = !0;
  var v22502 = !1;
  var v22503 = !1;
  var v22504 = !1;
  var v22505 = !1;
  var v22506 = !1;
  var v22507 = !1;
  var v22508 = !1;
  var v22509 = !0;
  var v16997 = {appendTo:"parent", axis:v22497, connectWith:v22498, containment:v22499, cursor:"auto", cursorAt:v22500, dropOnEmpty:v22501, forcePlaceholderSize:v22502, forceHelperSize:v22503, grid:v22504, handle:v22505, helper:"original", items:"> *", opacity:v22506, placeholder:v22507, revert:v22508, scroll:v22509, scrollSensitivity:20, scrollSpeed:20, scope:"default", tolerance:"intersect", zIndex:1E3};
  var v11392 = {widgetEventPrefix:"sort", ready:v16996, options:v16997, _create:v1295, destroy:v1296, _setOption:v1297, _mouseCapture:v1300, _mouseStart:v1301, _mouseDrag:v1302, _mouseStop:v1304, cancel:v1305, serialize:v1307, toArray:v1309, _intersectsWith:v1310, _intersectsWithPointer:v1311, _intersectsWithSides:v1312, _getDragVerticalDirection:v1313, _getDragHorizontalDirection:v1314, refresh:v1315, _connectWith:v1316, _getItemsAsjQuery:v1318, _removeCurrentsFromItems:v1319, _refreshItems:v1320, 
  refreshPositions:v1321, _createPlaceholder:v1324, _contactContainers:v1325, _createHelper:v1326, _adjustOffsetFromHelper:v1327, _getParentOffset:v1328, _getRelativeOffset:v1329, _cacheMargins:v1330, _cacheHelperProportions:v1331, _setContainment:v1332, _convertPositionTo:v1333, _generatePosition:v1334, _rearrange:v1336, _clear:v1348, _trigger:v1349, _uiHash:v1350};
  introspect(JAM.policy.p3) {
    a$$452.widget("ui.sortable", v11391, v11392);
  }
  var v16998 = a$$452.ui;
  var v11393 = v16998.sortable;
  var v11394 = {version:"1.8.24"};
  introspect(JAM.policy.p3) {
    a$$452.extend(v11393, v11394);
  }
  return;
}
function v1294(a$$451, b$$374) {
  function v1293(b$$379) {
    function v1292() {
      introspect(JAM.policy.p3) {
        var d$$242 = a$$451.data(this, "selectable-item")
      }
      var v27079 = d$$242.$element;
      introspect(JAM.policy.p3) {
        var v25210 = v27079.removeClass("ui-selecting")
      }
      introspect(JAM.policy.p3) {
        v25210.addClass("ui-selected");
      }
      d$$242.selecting = !1;
      d$$242.selected = !0;
      d$$242.startselected = !0;
      var v16999 = d$$242.element;
      var v11395 = {selected:v16999};
      introspect(JAM.policy.p3) {
        c$$311._trigger("selected", b$$379, v11395);
      }
      return;
    }
    function v1291() {
      introspect(JAM.policy.p3) {
        var d$$241 = a$$451.data(this, "selectable-item")
      }
      var v22510 = d$$241.$element;
      introspect(JAM.policy.p3) {
        v22510.removeClass("ui-unselecting");
      }
      d$$241.unselecting = !1;
      d$$241.startselected = !1;
      var v17000 = d$$241.element;
      var v11396 = {unselected:v17000};
      introspect(JAM.policy.p3) {
        c$$311._trigger("unselected", b$$379, v11396);
      }
      return;
    }
    var c$$311 = this;
    this.dragged = !1;
    var d$$240 = this.options;
    var v28282 = this.element;
    var v27080 = v28282[0];
    introspect(JAM.policy.p3) {
      var v25211 = a$$451(".ui-unselecting", v27080)
    }
    introspect(JAM.policy.p3) {
      v25211.each(v1291);
    }
    var v28283 = this.element;
    var v27081 = v28283[0];
    introspect(JAM.policy.p3) {
      var v25212 = a$$451(".ui-selecting", v27081)
    }
    introspect(JAM.policy.p3) {
      v25212.each(v1292);
    }
    introspect(JAM.policy.p3) {
      this._trigger("stop", b$$379);
    }
    var v17001 = this.helper;
    introspect(JAM.policy.p3) {
      v17001.remove();
    }
    return !1;
  }
  function v1290(b$$378) {
    function v1289() {
      introspect(JAM.policy.p3) {
        var i$$164 = a$$451.data(this, "selectable-item")
      }
      var v11397 = !i$$164;
      var v17004 = !v11397;
      if (v17004) {
        var v17002 = i$$164.element;
        var v22511 = c$$310.element;
        var v17003 = v22511[0];
        v11397 = v17002 == v17003;
      }
      var v4564 = v11397;
      if (v4564) {
        return;
      }
      var j$$76 = !1;
      var v11398;
      var v22512 = d$$239.tolerance;
      var v17007 = v22512 == "touch";
      if (v17007) {
        var v28284 = i$$164.left;
        var v27082 = v28284 > g$$128;
        var v28286 = !v27082;
        if (v28286) {
          var v28285 = i$$164.right;
          v27082 = v28285 < e$$225;
        }
        var v25213 = v27082;
        var v27084 = !v25213;
        if (v27084) {
          var v27083 = i$$164.top;
          v25213 = v27083 > h$$105;
        }
        var v22513 = v25213;
        var v25215 = !v22513;
        if (v25215) {
          var v25214 = i$$164.bottom;
          v22513 = v25214 < f$$94;
        }
        var v17005 = v22513;
        v11398 = j$$76 = !v17005;
      } else {
        var v22514 = d$$239.tolerance;
        var v17006 = v22514 == "fit";
        if (v17006) {
          var v28287 = i$$164.left;
          var v27085 = v28287 > e$$225;
          if (v27085) {
            var v28288 = i$$164.right;
            v27085 = v28288 < g$$128;
          }
          var v25216 = v27085;
          if (v25216) {
            var v27086 = i$$164.top;
            v25216 = v27086 > f$$94;
          }
          var v22515 = v25216;
          if (v22515) {
            var v25217 = i$$164.bottom;
            v22515 = v25217 < h$$105;
          }
          v17006 = j$$76 = v22515;
        }
        v11398 = v17006;
      }
      v11398;
      var v11399;
      if (j$$76) {
        var v25218 = i$$164.selected;
        if (v25218) {
          var v28289 = i$$164.$element;
          introspect(JAM.policy.p3) {
            v28289.removeClass("ui-selected");
          }
          i$$164.selected = !1;
        }
        var v25219 = i$$164.unselecting;
        if (v25219) {
          var v28290 = i$$164.$element;
          introspect(JAM.policy.p3) {
            v28290.removeClass("ui-unselecting");
          }
          i$$164.unselecting = !1;
        }
        var v22516 = i$$164.selecting;
        var v25220 = !v22516;
        if (v25220) {
          var v28291 = i$$164.$element;
          introspect(JAM.policy.p3) {
            v28291.addClass("ui-selecting");
          }
          i$$164.selecting = !0;
          var v28292 = i$$164.element;
          var v27087 = {selecting:v28292};
          introspect(JAM.policy.p3) {
            v22516 = c$$310._trigger("selecting", b$$378, v27087);
          }
        }
        v11399 = v22516;
      } else {
        var v22517 = i$$164.selecting;
        if (v22517) {
          var v25221;
          var v29061 = b$$378.metaKey;
          var v29562 = !v29061;
          if (v29562) {
            v29061 = b$$378.ctrlKey;
          }
          var v28293 = v29061;
          if (v28293) {
            v28293 = i$$164.startselected;
          }
          var v27088 = v28293;
          if (v27088) {
            var v29563 = i$$164.$element;
            introspect(JAM.policy.p3) {
              v29563.removeClass("ui-selecting");
            }
            i$$164.selecting = !1;
            var v29062 = i$$164.$element;
            introspect(JAM.policy.p3) {
              v29062.addClass("ui-selected");
            }
            v25221 = i$$164.selected = !0;
          } else {
            var v29564 = i$$164.$element;
            introspect(JAM.policy.p3) {
              v29564.removeClass("ui-selecting");
            }
            i$$164.selecting = !1;
            var v29063 = i$$164.startselected;
            if (v29063) {
              var v29882 = i$$164.$element;
              introspect(JAM.policy.p3) {
                v29882.addClass("ui-unselecting");
              }
              i$$164.unselecting = !0;
            }
            var v29064 = i$$164.element;
            var v28294 = {unselecting:v29064};
            introspect(JAM.policy.p3) {
              v25221 = c$$310._trigger("unselecting", b$$378, v28294);
            }
          }
          v25221;
        }
        var v28295 = i$$164.selected;
        if (v28295) {
          var v29065 = b$$378.metaKey;
          v28295 = !v29065;
        }
        var v27089 = v28295;
        if (v27089) {
          var v28296 = b$$378.ctrlKey;
          v27089 = !v28296;
        }
        var v25222 = v27089;
        if (v25222) {
          var v27090 = i$$164.startselected;
          v25222 = !v27090;
        }
        var v22518 = v25222;
        if (v22518) {
          var v29565 = i$$164.$element;
          introspect(JAM.policy.p3) {
            v29565.removeClass("ui-selected");
          }
          i$$164.selected = !1;
          var v29066 = i$$164.$element;
          introspect(JAM.policy.p3) {
            v29066.addClass("ui-unselecting");
          }
          i$$164.unselecting = !0;
          var v28297 = i$$164.element;
          var v27091 = {unselecting:v28297};
          introspect(JAM.policy.p3) {
            v22518 = c$$310._trigger("unselecting", b$$378, v27091);
          }
        }
        v11399 = v22518;
      }
      v11399;
      return;
    }
    var c$$310 = this;
    this.dragged = !0;
    var v11400 = this.options;
    var v4565 = v11400.disabled;
    if (v4565) {
      return;
    }
    var d$$239 = this.options;
    var v4566 = this.opos;
    var e$$225 = v4566[0];
    var v4567 = this.opos;
    var f$$94 = v4567[1];
    var g$$128 = b$$378.pageX;
    var h$$105 = b$$378.pageY;
    var v4568 = e$$225 > g$$128;
    if (v4568) {
      var i$$163 = g$$128;
      g$$128 = e$$225;
      e$$225 = i$$163;
    }
    var v4569 = f$$94 > h$$105;
    if (v4569) {
      i$$163 = h$$105;
      h$$105 = f$$94;
      f$$94 = i$$163;
    }
    var v17008 = this.helper;
    var v22519 = g$$128 - e$$225;
    var v22520 = h$$105 - f$$94;
    var v17009 = {left:e$$225, top:f$$94, width:v22519, height:v22520};
    introspect(JAM.policy.p3) {
      v17008.css(v17009);
    }
    var v17010 = this.selectees;
    introspect(JAM.policy.p3) {
      v17010.each(v1289);
    }
    return !1;
  }
  function v1288(b$$377) {
    function v1287() {
      introspect(JAM.policy.p3) {
        var d$$238 = a$$451.data(this, "selectable-item")
      }
      if (d$$238) {
        var v17011 = b$$377.metaKey;
        var v11401 = !v17011;
        if (v11401) {
          var v17012 = b$$377.ctrlKey;
          v11401 = !v17012;
        }
        var v4570 = v11401;
        var v11403 = !v4570;
        if (v11403) {
          var v17013 = d$$238.$element;
          introspect(JAM.policy.p3) {
            var v11402 = v17013.hasClass("ui-selected")
          }
          v4570 = !v11402;
        }
        var e$$224 = v4570;
        var v28298 = d$$238.$element;
        var v29067;
        if (e$$224) {
          v29067 = "ui-unselecting";
        } else {
          v29067 = "ui-selected";
        }
        var v28299 = v29067;
        introspect(JAM.policy.p3) {
          var v27092 = v28298.removeClass(v28299)
        }
        var v28300;
        if (e$$224) {
          v28300 = "ui-selecting";
        } else {
          v28300 = "ui-unselecting";
        }
        var v27093 = v28300;
        introspect(JAM.policy.p3) {
          v27092.addClass(v27093);
        }
        d$$238.unselecting = !e$$224;
        d$$238.selecting = e$$224;
        d$$238.selected = e$$224;
        var v17014;
        if (e$$224) {
          var v25223 = d$$238.element;
          var v22521 = {selecting:v25223};
          introspect(JAM.policy.p3) {
            v17014 = c$$309._trigger("selecting", b$$377, v22521);
          }
        } else {
          var v25224 = d$$238.element;
          var v22522 = {unselecting:v25224};
          introspect(JAM.policy.p3) {
            v17014 = c$$309._trigger("unselecting", b$$377, v22522);
          }
        }
        v17014;
        return !1;
      }
      return;
    }
    function v1286() {
      introspect(JAM.policy.p3) {
        var d$$237 = a$$451.data(this, "selectable-item")
      }
      d$$237.startselected = !0;
      var v22523 = b$$377.metaKey;
      var v17015 = !v22523;
      if (v17015) {
        var v22524 = b$$377.ctrlKey;
        v17015 = !v22524;
      }
      var v11404 = v17015;
      if (v11404) {
        var v28301 = d$$237.$element;
        introspect(JAM.policy.p3) {
          v28301.removeClass("ui-selected");
        }
        d$$237.selected = !1;
        var v27094 = d$$237.$element;
        introspect(JAM.policy.p3) {
          v27094.addClass("ui-unselecting");
        }
        d$$237.unselecting = !0;
        var v25225 = d$$237.element;
        var v22525 = {unselecting:v25225};
        introspect(JAM.policy.p3) {
          c$$309._trigger("unselecting", b$$377, v22525);
        }
      }
      return;
    }
    var c$$309 = this;
    var v4571 = b$$377.pageX;
    var v4572 = b$$377.pageY;
    this.opos = [v4571, v4572];
    var v11405 = this.options;
    var v4573 = v11405.disabled;
    if (v4573) {
      return;
    }
    var d$$236 = this.options;
    var v28302 = d$$236.filter;
    var v29068 = this.element;
    var v28303 = v29068[0];
    introspect(JAM.policy.p3) {
      var v31080 = a$$451(v28302, v28303)
    }
    this.selectees = v31080;
    introspect(JAM.policy.p3) {
      this._trigger("start", b$$377);
    }
    var v28304 = d$$236.appendTo;
    introspect(JAM.policy.p3) {
      var v27095 = a$$451(v28304)
    }
    var v27096 = this.helper;
    introspect(JAM.policy.p3) {
      v27095.append(v27096);
    }
    var v25226 = this.helper;
    var v27097 = b$$377.clientX;
    var v27098 = b$$377.clientY;
    var v25227 = {left:v27097, top:v27098, width:0, height:0};
    introspect(JAM.policy.p3) {
      v25226.css(v25227);
    }
    var v22526 = d$$236.autoRefresh;
    if (v22526) {
      introspect(JAM.policy.p3) {
        this.refresh();
      }
    }
    var v22527 = this.selectees;
    introspect(JAM.policy.p3) {
      var v17016 = v22527.filter(".ui-selected")
    }
    introspect(JAM.policy.p3) {
      v17016.each(v1286);
    }
    var v25228 = b$$377.target;
    introspect(JAM.policy.p3) {
      var v22528 = a$$451(v25228)
    }
    introspect(JAM.policy.p3) {
      var v17017 = v22528.parents()
    }
    introspect(JAM.policy.p3) {
      var v11406 = v17017.andSelf()
    }
    introspect(JAM.policy.p3) {
      v11406.each(v1287);
    }
    return;
  }
  function v1285() {
    var v25229 = this.selectees;
    introspect(JAM.policy.p3) {
      var v22529 = v25229.removeClass("ui-selectee")
    }
    introspect(JAM.policy.p3) {
      v22529.removeData("selectable-item");
    }
    var v27099 = this.element;
    introspect(JAM.policy.p3) {
      var v25230 = v27099.removeClass("ui-selectable ui-selectable-disabled")
    }
    introspect(JAM.policy.p3) {
      var v22530 = v25230.removeData("selectable")
    }
    introspect(JAM.policy.p3) {
      v22530.unbind(".selectable");
    }
    introspect(JAM.policy.p3) {
      this._mouseDestroy();
    }
    return this;
  }
  function v1284() {
    function v1283() {
      function v1282() {
        introspect(JAM.policy.p3) {
          var b$$376 = a$$451(this)
        }
        introspect(JAM.policy.p3) {
          var c$$308 = b$$376.offset()
        }
        var v11407 = c$$308.left;
        var v11408 = c$$308.top;
        var v17018 = c$$308.left;
        introspect(JAM.policy.p3) {
          var v17019 = b$$376.outerWidth()
        }
        var v11409 = v17018 + v17019;
        var v17020 = c$$308.top;
        introspect(JAM.policy.p3) {
          var v17021 = b$$376.outerHeight()
        }
        var v11410 = v17020 + v17021;
        var v11411 = !1;
        introspect(JAM.policy.p3) {
          var v11412 = b$$376.hasClass("ui-selected")
        }
        introspect(JAM.policy.p3) {
          var v11413 = b$$376.hasClass("ui-selecting")
        }
        introspect(JAM.policy.p3) {
          var v11414 = b$$376.hasClass("ui-unselecting")
        }
        var v4574 = {element:this, $element:b$$376, left:v11407, top:v11408, right:v11409, bottom:v11410, startselected:v11411, selected:v11412, selecting:v11413, unselecting:v11414};
        introspect(JAM.policy.p3) {
          a$$451.data(this, "selectable-item", v4574);
        }
        return;
      }
      var v22531 = b$$375.options;
      var v17022 = v22531.filter;
      var v22532 = b$$375.element;
      var v17023 = v22532[0];
      introspect(JAM.policy.p3) {
        c$$307 = a$$451(v17022, v17023);
      }
      introspect(JAM.policy.p3) {
        c$$307.addClass("ui-selectee");
      }
      introspect(JAM.policy.p3) {
        c$$307.each(v1282);
      }
      return;
    }
    var b$$375 = this;
    var v11415 = this.element;
    introspect(JAM.policy.p3) {
      v11415.addClass("ui-selectable");
    }
    this.dragged = !1;
    var c$$307;
    this.refresh = v1283;
    introspect(JAM.policy.p3) {
      this.refresh();
    }
    introspect(JAM.policy.p3) {
      var v31081 = c$$307.addClass("ui-selectee")
    }
    this.selectees = v31081;
    introspect(JAM.policy.p3) {
      this._mouseInit();
    }
    introspect(JAM.policy.p3) {
      var v31082 = a$$451("<div class='ui-selectable-helper'></div>")
    }
    this.helper = v31082;
    return;
  }
  var v17024 = a$$451.ui;
  var v11416 = v17024.mouse;
  var v22533 = !0;
  var v17025 = {appendTo:"body", autoRefresh:v22533, distance:0, filter:"*", tolerance:"touch"};
  var v11417 = {options:v17025, _create:v1284, destroy:v1285, _mouseStart:v1288, _mouseDrag:v1290, _mouseStop:v1293};
  introspect(JAM.policy.p3) {
    a$$451.widget("ui.selectable", v11416, v11417);
  }
  var v17026 = a$$451.ui;
  var v11418 = v17026.selectable;
  var v11419 = {version:"1.8.24"};
  introspect(JAM.policy.p3) {
    a$$451.extend(v11418, v11419);
  }
  return;
}
function v1281(a$$434, b$$331) {
  function v1280(b$$373, c$$306) {
    introspect(JAM.policy.p3) {
      var v4575 = a$$434(this)
    }
    introspect(JAM.policy.p3) {
      var d$$235 = v4575.data("resizable")
    }
    var e$$223 = d$$235.options;
    var f$$93 = d$$235.size;
    var g$$127 = d$$235.originalSize;
    var h$$104 = d$$235.originalPosition;
    var i$$162 = d$$235.axis;
    var v4576 = e$$223._aspectRatio;
    var v11420 = !v4576;
    if (v11420) {
      v4576 = b$$373.shiftKey;
    }
    var j$$75 = v4576;
    var v4577;
    var v22534 = e$$223.grid;
    var v17027 = typeof v22534;
    var v11423 = v17027 == "number";
    if (v11423) {
      var v11421 = e$$223.grid;
      var v11422 = e$$223.grid;
      v4577 = [v11421, v11422];
    } else {
      v4577 = e$$223.grid;
    }
    e$$223.grid = v4577;
    var v22535 = f$$93.width;
    var v22536 = g$$127.width;
    var v17028 = v22535 - v22536;
    var v25231 = e$$223.grid;
    var v22537 = v25231[0];
    var v25232 = !v22537;
    if (v25232) {
      v22537 = 1;
    }
    var v17029 = v22537;
    var v11424 = v17028 / v17029;
    introspect(JAM.policy.p3) {
      var v4578 = Math.round(v11424)
    }
    var v17030 = e$$223.grid;
    var v11425 = v17030[0];
    var v17031 = !v11425;
    if (v17031) {
      v11425 = 1;
    }
    var v4579 = v11425;
    var k$$52 = v4578 * v4579;
    var v22538 = f$$93.height;
    var v22539 = g$$127.height;
    var v17032 = v22538 - v22539;
    var v25233 = e$$223.grid;
    var v22540 = v25233[1];
    var v25234 = !v22540;
    if (v25234) {
      v22540 = 1;
    }
    var v17033 = v22540;
    var v11426 = v17032 / v17033;
    introspect(JAM.policy.p3) {
      var v4580 = Math.round(v11426)
    }
    var v17034 = e$$223.grid;
    var v11427 = v17034[1];
    var v17035 = !v11427;
    if (v17035) {
      v11427 = 1;
    }
    var v4581 = v11427;
    var l$$62 = v4580 * v4581;
    var v4582;
    introspect(JAM.policy.p3) {
      var v11429 = /^(se|s|e)$/.test(i$$162)
    }
    if (v11429) {
      var v17036 = d$$235.size;
      var v22541 = g$$127.width;
      v17036.width = v22541 + k$$52;
      var v17037 = d$$235.size;
      var v22542 = g$$127.height;
      v4582 = v17037.height = v22542 + l$$62;
    } else {
      var v11428;
      introspect(JAM.policy.p3) {
        var v17039 = /^(ne)$/.test(i$$162)
      }
      if (v17039) {
        var v25235 = d$$235.size;
        var v27100 = g$$127.width;
        v25235.width = v27100 + k$$52;
        var v25236 = d$$235.size;
        var v27101 = g$$127.height;
        v25236.height = v27101 + l$$62;
        var v22543 = d$$235.position;
        var v25237 = h$$104.top;
        v11428 = v22543.top = v25237 - l$$62;
      } else {
        var v17038;
        introspect(JAM.policy.p3) {
          var v22544 = /^(sw)$/.test(i$$162)
        }
        if (v22544) {
          var v27102 = d$$235.size;
          var v28305 = g$$127.width;
          v27102.width = v28305 + k$$52;
          var v27103 = d$$235.size;
          var v28306 = g$$127.height;
          v27103.height = v28306 + l$$62;
          var v25238 = d$$235.position;
          var v27104 = h$$104.left;
          v17038 = v25238.left = v27104 - k$$52;
        } else {
          var v28307 = d$$235.size;
          var v29069 = g$$127.width;
          v28307.width = v29069 + k$$52;
          var v28308 = d$$235.size;
          var v29070 = g$$127.height;
          v28308.height = v29070 + l$$62;
          var v27105 = d$$235.position;
          var v28309 = h$$104.top;
          v27105.top = v28309 - l$$62;
          var v25239 = d$$235.position;
          var v27106 = h$$104.left;
          v17038 = v25239.left = v27106 - k$$52;
        }
        v11428 = v17038;
      }
      v4582 = v11428;
    }
    v4582;
    return;
  }
  function v1279(b$$372, c$$305) {
    introspect(JAM.policy.p3) {
      var v4583 = a$$434(this)
    }
    introspect(JAM.policy.p3) {
      var d$$234 = v4583.data("resizable")
    }
    var e$$222 = d$$234.options;
    var v11430 = d$$234.ghost;
    if (v11430) {
      v11430 = d$$234.helper;
    }
    var v4584 = v11430;
    if (v4584) {
      var v17040 = d$$234.helper;
      introspect(JAM.policy.p3) {
        var v11431 = v17040.get(0)
      }
      var v17041 = d$$234.ghost;
      introspect(JAM.policy.p3) {
        var v11432 = v17041.get(0)
      }
      introspect(JAM.policy.p3) {
        v11431.removeChild(v11432);
      }
    }
    return;
  }
  function v1278(b$$371, c$$304) {
    introspect(JAM.policy.p3) {
      var v4585 = a$$434(this)
    }
    introspect(JAM.policy.p3) {
      var d$$233 = v4585.data("resizable")
    }
    var e$$221 = d$$233.options;
    var v4586 = d$$233.ghost;
    if (v4586) {
      var v11433 = d$$233.ghost;
      var v22545 = d$$233.size;
      var v17042 = v22545.height;
      var v22546 = d$$233.size;
      var v17043 = v22546.width;
      var v11434 = {position:"relative", height:v17042, width:v17043};
      introspect(JAM.policy.p3) {
        v11433.css(v11434);
      }
    }
    return;
  }
  function v1277(b$$370, c$$303) {
    introspect(JAM.policy.p3) {
      var v4587 = a$$434(this)
    }
    introspect(JAM.policy.p3) {
      var d$$232 = v4587.data("resizable")
    }
    var e$$220 = d$$232.options;
    var f$$92 = d$$232.size;
    var v17044 = d$$232.originalElement;
    introspect(JAM.policy.p3) {
      var v31083 = v17044.clone()
    }
    d$$232.ghost = v31083;
    var v25240 = d$$232.ghost;
    var v27107 = f$$92.height;
    var v27108 = f$$92.width;
    var v25241 = {opacity:.25, display:"block", position:"relative", height:v27107, width:v27108, margin:0, left:0, top:0};
    introspect(JAM.policy.p3) {
      var v22547 = v25240.css(v25241)
    }
    introspect(JAM.policy.p3) {
      var v17045 = v22547.addClass("ui-resizable-ghost")
    }
    var v22548;
    var v28310 = e$$220.ghost;
    var v27109 = typeof v28310;
    var v25242 = v27109 == "string";
    if (v25242) {
      v22548 = e$$220.ghost;
    } else {
      v22548 = "";
    }
    var v17046 = v22548;
    introspect(JAM.policy.p3) {
      v17045.addClass(v17046);
    }
    var v11435 = d$$232.ghost;
    var v11436 = d$$232.helper;
    introspect(JAM.policy.p3) {
      v11435.appendTo(v11436);
    }
    return;
  }
  function v1276(b$$369, c$$302) {
    introspect(JAM.policy.p3) {
      var v4588 = a$$434(this)
    }
    introspect(JAM.policy.p3) {
      var d$$231 = v4588.data("resizable")
    }
    var e$$219 = d$$231.options;
    var f$$91 = d$$231.position;
    var g$$126 = d$$231.containerOffset;
    var h$$103 = d$$231.containerPosition;
    var i$$161 = d$$231.containerElement;
    var v4589 = d$$231.helper;
    introspect(JAM.policy.p3) {
      var j$$74 = a$$434(v4589)
    }
    introspect(JAM.policy.p3) {
      var k$$51 = j$$74.offset()
    }
    introspect(JAM.policy.p3) {
      var v4590 = j$$74.outerWidth()
    }
    var v11437 = d$$231.sizeDiff;
    var v4591 = v11437.width;
    var l$$61 = v4590 - v4591;
    introspect(JAM.policy.p3) {
      var v4592 = j$$74.outerHeight()
    }
    var v11438 = d$$231.sizeDiff;
    var v4593 = v11438.height;
    var m$$34 = v4592 - v4593;
    var v22549 = d$$231._helper;
    if (v22549) {
      var v25243 = e$$219.animate;
      v22549 = !v25243;
    }
    var v17047 = v22549;
    if (v17047) {
      introspect(JAM.policy.p3) {
        var v22550 = i$$161.css("position")
      }
      introspect(JAM.policy.p3) {
        v17047 = /relative/.test(v22550);
      }
    }
    var v11439 = v17047;
    if (v11439) {
      introspect(JAM.policy.p3) {
        var v17048 = a$$434(this)
      }
      var v27110 = k$$51.left;
      var v27111 = h$$103.left;
      var v25244 = v27110 - v27111;
      var v25245 = g$$126.left;
      var v22551 = v25244 - v25245;
      var v17049 = {left:v22551, width:l$$61, height:m$$34};
      introspect(JAM.policy.p3) {
        v17048.css(v17049);
      }
    }
    var v22552 = d$$231._helper;
    if (v22552) {
      var v25246 = e$$219.animate;
      v22552 = !v25246;
    }
    var v17050 = v22552;
    if (v17050) {
      introspect(JAM.policy.p3) {
        var v22553 = i$$161.css("position")
      }
      introspect(JAM.policy.p3) {
        v17050 = /static/.test(v22553);
      }
    }
    var v11440 = v17050;
    if (v11440) {
      introspect(JAM.policy.p3) {
        var v17051 = a$$434(this)
      }
      var v27112 = k$$51.left;
      var v27113 = h$$103.left;
      var v25247 = v27112 - v27113;
      var v25248 = g$$126.left;
      var v22554 = v25247 - v25248;
      var v17052 = {left:v22554, width:l$$61, height:m$$34};
      introspect(JAM.policy.p3) {
        v17051.css(v17052);
      }
    }
    return;
  }
  function v1275(b$$368, c$$301) {
    introspect(JAM.policy.p3) {
      var v4594 = a$$434(this)
    }
    introspect(JAM.policy.p3) {
      var d$$230 = v4594.data("resizable")
    }
    var e$$218 = d$$230.options;
    var f$$90 = d$$230.containerSize;
    var g$$125 = d$$230.containerOffset;
    var h$$102 = d$$230.size;
    var i$$160 = d$$230.position;
    var v4595 = d$$230._aspectRatio;
    var v11441 = !v4595;
    if (v11441) {
      v4595 = b$$368.shiftKey;
    }
    var j$$73 = v4595;
    var k$$50 = {top:0, left:0};
    var l$$60 = d$$230.containerElement;
    var v28311 = l$$60[0];
    var v27114 = v28311 != document;
    if (v27114) {
      introspect(JAM.policy.p3) {
        var v28312 = l$$60.css("position")
      }
      introspect(JAM.policy.p3) {
        v27114 = /static/.test(v28312);
      }
    }
    var v25249 = v27114;
    if (v25249) {
      k$$50 = g$$125;
    }
    var v27115 = i$$160.left;
    var v28313;
    var v29071 = d$$230._helper;
    if (v29071) {
      v28313 = g$$125.left;
    } else {
      v28313 = 0;
    }
    var v27116 = v28313;
    var v25250 = v27115 < v27116;
    if (v25250) {
      var v29072 = d$$230.size;
      var v29883 = d$$230.size;
      var v29566 = v29883.width;
      var v29884;
      var v30138 = d$$230._helper;
      if (v30138) {
        var v30332 = d$$230.position;
        var v30134 = v30332.left;
        var v30135 = g$$125.left;
        v29884 = v30134 - v30135;
      } else {
        var v30333 = d$$230.position;
        var v30136 = v30333.left;
        var v30137 = k$$50.left;
        v29884 = v30136 - v30137;
      }
      var v29567 = v29884;
      v29072.width = v29566 + v29567;
      if (j$$73) {
        var v29568 = d$$230.size;
        var v30139 = d$$230.size;
        var v29885 = v30139.width;
        var v29886 = d$$230.aspectRatio;
        v29568.height = v29885 / v29886;
      }
      var v28314 = d$$230.position;
      var v29073;
      var v29569 = e$$218.helper;
      if (v29569) {
        v29073 = g$$125.left;
      } else {
        v29073 = 0;
      }
      v28314.left = v29073;
    }
    var v25251 = i$$160.top;
    var v27117;
    var v28315 = d$$230._helper;
    if (v28315) {
      v27117 = g$$125.top;
    } else {
      v27117 = 0;
    }
    var v25252 = v27117;
    var v22555 = v25251 < v25252;
    if (v22555) {
      var v28316 = d$$230.size;
      var v29570 = d$$230.size;
      var v29074 = v29570.height;
      var v29571;
      var v29890 = d$$230._helper;
      if (v29890) {
        var v30140 = d$$230.position;
        var v29887 = v30140.top;
        var v29888 = g$$125.top;
        v29571 = v29887 - v29888;
      } else {
        var v29889 = d$$230.position;
        v29571 = v29889.top;
      }
      var v29075 = v29571;
      v28316.height = v29074 + v29075;
      if (j$$73) {
        var v29076 = d$$230.size;
        var v29891 = d$$230.size;
        var v29572 = v29891.height;
        var v29573 = d$$230.aspectRatio;
        v29076.width = v29572 * v29573;
      }
      var v27118 = d$$230.position;
      var v28317;
      var v29077 = d$$230._helper;
      if (v29077) {
        v28317 = g$$125.top;
      } else {
        v28317 = 0;
      }
      v27118.top = v28317;
    }
    var v17053 = d$$230.offset;
    var v25253 = d$$230.parentData;
    var v22556 = v25253.left;
    var v25254 = d$$230.position;
    var v22557 = v25254.left;
    v17053.left = v22556 + v22557;
    var v11442 = d$$230.offset;
    var v22558 = d$$230.parentData;
    var v17054 = v22558.top;
    var v22559 = d$$230.position;
    var v17055 = v22559.top;
    v11442.top = v17054 + v17055;
    var v17056;
    var v22564 = d$$230._helper;
    if (v22564) {
      var v25255 = d$$230.offset;
      var v22560 = v25255.left;
      var v22561 = k$$50.left;
      v17056 = v22560 - v22561;
    } else {
      var v25256 = d$$230.offset;
      var v22562 = v25256.left;
      var v22563 = k$$50.left;
      v17056 = v22562 - v22563;
    }
    var v11443 = v17056;
    var v17057 = d$$230.sizeDiff;
    var v11444 = v17057.width;
    var v4596 = v11443 + v11444;
    introspect(JAM.policy.p3) {
      var m$$33 = Math.abs(v4596)
    }
    var v17058;
    var v22569 = d$$230._helper;
    if (v22569) {
      var v25257 = d$$230.offset;
      var v22565 = v25257.top;
      var v22566 = k$$50.top;
      v17058 = v22565 - v22566;
    } else {
      var v25258 = d$$230.offset;
      var v22567 = v25258.top;
      var v22568 = g$$125.top;
      v17058 = v22567 - v22568;
    }
    var v11445 = v17058;
    var v17059 = d$$230.sizeDiff;
    var v11446 = v17059.height;
    var v4597 = v11445 + v11446;
    introspect(JAM.policy.p3) {
      var n$$84 = Math.abs(v4597)
    }
    var v11447 = d$$230.containerElement;
    introspect(JAM.policy.p3) {
      var v4598 = v11447.get(0)
    }
    var v17060 = d$$230.element;
    introspect(JAM.policy.p3) {
      var v11448 = v17060.parent()
    }
    introspect(JAM.policy.p3) {
      var v4599 = v11448.get(0)
    }
    var o$$20 = v4598 == v4599;
    var v11449 = d$$230.containerElement;
    introspect(JAM.policy.p3) {
      var v4600 = v11449.css("position")
    }
    introspect(JAM.policy.p3) {
      var p$$41 = /relative|absolute/.test(v4600)
    }
    var v17061 = o$$20 && p$$41;
    if (v17061) {
      var v27119 = d$$230.parentData;
      var v25259 = v27119.left;
      m$$33 = m$$33 - v25259;
    }
    var v27120 = d$$230.size;
    var v25260 = v27120.width;
    var v22570 = m$$33 + v25260;
    var v25261 = d$$230.parentData;
    var v22571 = v25261.width;
    var v17062 = v22570 >= v22571;
    if (v17062) {
      var v25262 = d$$230.size;
      var v28318 = d$$230.parentData;
      var v27121 = v28318.width;
      v25262.width = v27121 - m$$33;
      if (j$$73) {
        var v27122 = d$$230.size;
        var v29078 = d$$230.size;
        var v28319 = v29078.width;
        var v28320 = d$$230.aspectRatio;
        v27122.height = v28319 / v28320;
      }
    }
    var v25263 = d$$230.size;
    var v22572 = v25263.height;
    var v17063 = n$$84 + v22572;
    var v22573 = d$$230.parentData;
    var v17064 = v22573.height;
    var v11450 = v17063 >= v17064;
    if (v11450) {
      var v22574 = d$$230.size;
      var v27123 = d$$230.parentData;
      var v25264 = v27123.height;
      v22574.height = v25264 - n$$84;
      if (j$$73) {
        var v25265 = d$$230.size;
        var v28321 = d$$230.size;
        var v27124 = v28321.height;
        var v27125 = d$$230.aspectRatio;
        v25265.width = v27124 * v27125;
      }
    }
    return;
  }
  function v1274(b$$366, d$$229) {
    function v1273(a$$448, b$$367) {
      var v4601 = k$$49;
      var v17065 = "padding" + b$$367;
      introspect(JAM.policy.p3) {
        var v11451 = j$$72.css(v17065)
      }
      var v31084 = c$$273(v11451);
      introspect(JAM.policy.p2) {
        v4601[a$$448] = v31084;
      }
      return;
    }
    introspect(JAM.policy.p3) {
      var v4602 = a$$434(this)
    }
    introspect(JAM.policy.p3) {
      var e$$217 = v4602.data("resizable")
    }
    var f$$89 = e$$217.options;
    var g$$124 = e$$217.element;
    var h$$101 = f$$89.containment;
    var v4603;
    var v11453 = h$$101 instanceof a$$434;
    if (v11453) {
      introspect(JAM.policy.p3) {
        v4603 = h$$101.get(0);
      }
    } else {
      var v11452;
      introspect(JAM.policy.p3) {
        var v17067 = /parent/.test(h$$101)
      }
      if (v17067) {
        introspect(JAM.policy.p3) {
          var v17066 = g$$124.parent()
        }
        introspect(JAM.policy.p3) {
          v11452 = v17066.get(0);
        }
      } else {
        v11452 = h$$101;
      }
      v4603 = v11452;
    }
    var i$$159 = v4603;
    var v4604 = !i$$159;
    if (v4604) {
      return;
    }
    var v4605 = e$$217;
    introspect(JAM.policy.p3) {
      var v31085 = a$$434(i$$159)
    }
    v4605.containerElement = v31085;
    introspect(JAM.policy.p3) {
      var v11454 = /document/.test(h$$101)
    }
    var v17068 = !v11454;
    if (v17068) {
      v11454 = h$$101 == document;
    }
    var v4612 = v11454;
    if (v4612) {
      e$$217.containerOffset = {left:0, top:0};
      e$$217.containerPosition = {left:0, top:0};
      var v11455 = e$$217;
      introspect(JAM.policy.p3) {
        var v17069 = a$$434(document)
      }
      introspect(JAM.policy.p3) {
        var v22575 = a$$434(document)
      }
      introspect(JAM.policy.p3) {
        var v17070 = v22575.width()
      }
      introspect(JAM.policy.p3) {
        var v25266 = a$$434(document)
      }
      introspect(JAM.policy.p3) {
        var v22576 = v25266.height()
      }
      var v25268 = !v22576;
      if (v25268) {
        var v27126 = document.body;
        var v25267 = v27126.parentNode;
        v22576 = v25267.scrollHeight;
      }
      var v17071 = v22576;
      v11455.parentData = {element:v17069, left:0, top:0, width:v17070, height:v17071};
    } else {
      introspect(JAM.policy.p3) {
        var j$$72 = a$$434(i$$159)
      }
      var k$$49 = [];
      var v25269 = ["Top", "Right", "Left", "Bottom"];
      introspect(JAM.policy.p3) {
        var v22577 = a$$434(v25269)
      }
      introspect(JAM.policy.p3) {
        v22577.each(v1273);
      }
      var v22578 = e$$217;
      introspect(JAM.policy.p3) {
        var v31086 = j$$72.offset()
      }
      v22578.containerOffset = v31086;
      var v17072 = e$$217;
      introspect(JAM.policy.p3) {
        var v31087 = j$$72.position()
      }
      v17072.containerPosition = v31087;
      var v11456 = e$$217;
      introspect(JAM.policy.p3) {
        var v22579 = j$$72.innerHeight()
      }
      var v22580 = k$$49[3];
      var v17073 = v22579 - v22580;
      introspect(JAM.policy.p3) {
        var v22581 = j$$72.innerWidth()
      }
      var v22582 = k$$49[1];
      var v17074 = v22581 - v22582;
      v11456.containerSize = {height:v17073, width:v17074};
      var l$$59 = e$$217.containerOffset;
      var v4606 = e$$217.containerSize;
      var m$$32 = v4606.height;
      var v4607 = e$$217.containerSize;
      var n$$83 = v4607.width;
      var v4608;
      var v17075 = a$$434.ui;
      introspect(JAM.policy.p3) {
        var v11457 = v17075.hasScroll(i$$159, "left")
      }
      if (v11457) {
        v4608 = i$$159.scrollWidth;
      } else {
        v4608 = n$$83;
      }
      var o$$19 = v4608;
      var v4609;
      var v17076 = a$$434.ui;
      introspect(JAM.policy.p3) {
        var v11458 = v17076.hasScroll(i$$159)
      }
      if (v11458) {
        v4609 = i$$159.scrollHeight;
      } else {
        v4609 = m$$32;
      }
      var p$$40 = v4609;
      var v4610 = l$$59.left;
      var v4611 = l$$59.top;
      e$$217.parentData = {element:i$$159, left:v4610, top:v4611, width:o$$19, height:p$$40};
    }
    return;
  }
  function v1272(b$$365, c$$299) {
    function v1271() {
      var v17077 = d$$228.element;
      introspect(JAM.policy.p3) {
        var v11459 = v17077.css("width")
      }
      var v4613 = parseInt(v11459, 10);
      var v17078 = d$$228.element;
      introspect(JAM.policy.p3) {
        var v11460 = v17078.css("height")
      }
      var v4614 = parseInt(v11460, 10);
      var v17079 = d$$228.element;
      introspect(JAM.policy.p3) {
        var v11461 = v17079.css("top")
      }
      var v4615 = parseInt(v11461, 10);
      var v17080 = d$$228.element;
      introspect(JAM.policy.p3) {
        var v11462 = v17080.css("left")
      }
      var v4616 = parseInt(v11462, 10);
      var c$$300 = {width:v4613, height:v4614, top:v4615, left:v4616};
      var v22583 = f$$88;
      if (v22583) {
        v22583 = f$$88.length;
      }
      var v17081 = v22583;
      if (v17081) {
        var v25270 = f$$88[0];
        introspect(JAM.policy.p3) {
          var v22584 = a$$434(v25270)
        }
        var v25271 = c$$300.width;
        var v25272 = c$$300.height;
        var v22585 = {width:v25271, height:v25272};
        introspect(JAM.policy.p3) {
          v22584.css(v22585);
        }
      }
      introspect(JAM.policy.p3) {
        d$$228._updateCache(c$$300);
      }
      introspect(JAM.policy.p3) {
        d$$228._propagate("resize", b$$365);
      }
      return;
    }
    introspect(JAM.policy.p3) {
      var v4617 = a$$434(this)
    }
    introspect(JAM.policy.p3) {
      var d$$228 = v4617.data("resizable")
    }
    var e$$216 = d$$228.options;
    var f$$88 = d$$228._proportionallyResizeElements;
    var v4618 = f$$88.length;
    if (v4618) {
      var v17082 = f$$88[0];
      var v11463 = v17082.nodeName;
      introspect(JAM.policy.p3) {
        v4618 = /textarea/i.test(v11463);
      }
    }
    var g$$123 = v4618;
    var v4619;
    var v17083 = g$$123;
    if (v17083) {
      var v22586 = a$$434.ui;
      var v22587 = f$$88[0];
      introspect(JAM.policy.p3) {
        v17083 = v22586.hasScroll(v22587, "left");
      }
    }
    var v11465 = v17083;
    if (v11465) {
      v4619 = 0;
    } else {
      var v11464 = d$$228.sizeDiff;
      v4619 = v11464.height;
    }
    var h$$100 = v4619;
    var v4620;
    if (g$$123) {
      v4620 = 0;
    } else {
      var v11466 = d$$228.sizeDiff;
      v4620 = v11466.width;
    }
    var i$$158 = v4620;
    var v17084 = d$$228.size;
    var v11467 = v17084.width;
    var v4621 = v11467 - i$$158;
    var v17085 = d$$228.size;
    var v11468 = v17085.height;
    var v4622 = v11468 - h$$100;
    var j$$71 = {width:v4621, height:v4622};
    var v22588 = d$$228.element;
    introspect(JAM.policy.p3) {
      var v17086 = v22588.css("left")
    }
    var v11469 = parseInt(v17086, 10);
    var v22589 = d$$228.position;
    var v17087 = v22589.left;
    var v22590 = d$$228.originalPosition;
    var v17088 = v22590.left;
    var v11470 = v17087 - v17088;
    var v4623 = v11469 + v11470;
    var v11471 = !v4623;
    if (v11471) {
      v4623 = null;
    }
    var k$$48 = v4623;
    var v22591 = d$$228.element;
    introspect(JAM.policy.p3) {
      var v17089 = v22591.css("top")
    }
    var v11472 = parseInt(v17089, 10);
    var v22592 = d$$228.position;
    var v17090 = v22592.top;
    var v22593 = d$$228.originalPosition;
    var v17091 = v22593.top;
    var v11473 = v17090 - v17091;
    var v4624 = v11472 + v11473;
    var v11474 = !v4624;
    if (v11474) {
      v4624 = null;
    }
    var l$$58 = v4624;
    var v4625 = d$$228.element;
    var v17092;
    var v22594 = l$$58 && k$$48;
    if (v22594) {
      v17092 = {top:l$$58, left:k$$48};
    } else {
      v17092 = {};
    }
    var v11475 = v17092;
    introspect(JAM.policy.p3) {
      var v4626 = a$$434.extend(j$$71, v11475)
    }
    var v11476 = e$$216.animateDuration;
    var v11477 = e$$216.animateEasing;
    var v4627 = {duration:v11476, easing:v11477, step:v1271};
    introspect(JAM.policy.p3) {
      v4625.animate(v4626, v4627);
    }
    return;
  }
  function v1270(b$$364, c$$298) {
    introspect(JAM.policy.p3) {
      var v4628 = a$$434(this)
    }
    introspect(JAM.policy.p3) {
      v4628.removeData("resizable-alsoresize");
    }
    return;
  }
  function v1269(b$$359, c$$296) {
    function v1268(a$$447, b$$363) {
      i$$157(a$$447, b$$363);
      return;
    }
    function i$$157(b$$360, d$$227) {
      function v1267() {
        function v1266(a$$446, b$$362) {
          var v11478 = e$$215[b$$362];
          var v17093 = !v11478;
          if (v17093) {
            v11478 = 0;
          }
          var v4629 = v11478;
          var v11479 = h$$99[b$$362];
          var v17094 = !v11479;
          if (v17094) {
            v11479 = 0;
          }
          var v4630 = v11479;
          var c$$297 = v4629 + v4630;
          var v11480 = c$$297;
          if (v11480) {
            v11480 = c$$297 >= 0;
          }
          var v4631 = v11480;
          if (v4631) {
            introspect(JAM.policy.p2) {
              f$$87[b$$362] = c$$297 || null;
            }
          }
          return;
        }
        introspect(JAM.policy.p3) {
          var b$$361 = a$$434(this)
        }
        introspect(JAM.policy.p3) {
          var v4632 = a$$434(this)
        }
        introspect(JAM.policy.p3) {
          var e$$215 = v4632.data("resizable-alsoresize")
        }
        var f$$87 = {};
        var v4633;
        var v17095 = d$$227;
        if (v17095) {
          v17095 = d$$227.length;
        }
        var v11482 = v17095;
        if (v11482) {
          v4633 = d$$227;
        } else {
          var v11481;
          var v27127 = c$$296.originalElement;
          var v25273 = v27127[0];
          introspect(JAM.policy.p3) {
            var v22595 = b$$361.parents(v25273)
          }
          var v17096 = v22595.length;
          if (v17096) {
            v11481 = ["width", "height"];
          } else {
            v11481 = ["width", "height", "top", "left"];
          }
          v4633 = v11481;
        }
        var g$$122 = v4633;
        introspect(JAM.policy.p3) {
          a$$434.each(g$$122, v1266);
        }
        introspect(JAM.policy.p3) {
          b$$361.css(f$$87);
        }
        return;
      }
      introspect(JAM.policy.p3) {
        var v4634 = a$$434(b$$360)
      }
      introspect(JAM.policy.p3) {
        v4634.each(v1267);
      }
      return;
    }
    introspect(JAM.policy.p3) {
      var v4635 = a$$434(this)
    }
    introspect(JAM.policy.p3) {
      var d$$226 = v4635.data("resizable")
    }
    var e$$214 = d$$226.options;
    var f$$86 = d$$226.originalSize;
    var g$$121 = d$$226.originalPosition;
    var v22596 = d$$226.size;
    var v17097 = v22596.height;
    var v17098 = f$$86.height;
    var v11483 = v17097 - v17098;
    var v17099 = !v11483;
    if (v17099) {
      v11483 = 0;
    }
    var v4636 = v11483;
    var v22597 = d$$226.size;
    var v17100 = v22597.width;
    var v17101 = f$$86.width;
    var v11484 = v17100 - v17101;
    var v17102 = !v11484;
    if (v17102) {
      v11484 = 0;
    }
    var v4637 = v11484;
    var v22598 = d$$226.position;
    var v17103 = v22598.top;
    var v17104 = g$$121.top;
    var v11485 = v17103 - v17104;
    var v17105 = !v11485;
    if (v17105) {
      v11485 = 0;
    }
    var v4638 = v11485;
    var v22599 = d$$226.position;
    var v17106 = v22599.left;
    var v17107 = g$$121.left;
    var v11486 = v17106 - v17107;
    var v17108 = !v11486;
    if (v17108) {
      v11486 = 0;
    }
    var v4639 = v11486;
    var h$$99 = {height:v4636, width:v4637, top:v4638, left:v4639};
    var v4640;
    var v25274 = e$$214.alsoResize;
    var v22600 = typeof v25274;
    var v17109 = v22600 == "object";
    if (v17109) {
      var v25275 = e$$214.alsoResize;
      var v22601 = v25275.nodeType;
      v17109 = !v22601;
    }
    var v11489 = v17109;
    if (v11489) {
      var v11487 = e$$214.alsoResize;
      introspect(JAM.policy.p3) {
        v4640 = a$$434.each(v11487, v1268);
      }
    } else {
      var v11488 = e$$214.alsoResize;
      v4640 = i$$157(v11488);
    }
    v4640;
    return;
  }
  function v1265(b$$356, c$$295) {
    function v1264(a$$445) {
      f$$85(a$$445);
      return;
    }
    function f$$85(b$$357) {
      function v1263() {
        introspect(JAM.policy.p3) {
          var b$$358 = a$$434(this)
        }
        introspect(JAM.policy.p3) {
          var v17110 = b$$358.width()
        }
        var v11490 = parseInt(v17110, 10);
        introspect(JAM.policy.p3) {
          var v17111 = b$$358.height()
        }
        var v11491 = parseInt(v17111, 10);
        introspect(JAM.policy.p3) {
          var v17112 = b$$358.css("left")
        }
        var v11492 = parseInt(v17112, 10);
        introspect(JAM.policy.p3) {
          var v17113 = b$$358.css("top")
        }
        var v11493 = parseInt(v17113, 10);
        var v4641 = {width:v11490, height:v11491, left:v11492, top:v11493};
        introspect(JAM.policy.p3) {
          b$$358.data("resizable-alsoresize", v4641);
        }
        return;
      }
      introspect(JAM.policy.p3) {
        var v4642 = a$$434(b$$357)
      }
      introspect(JAM.policy.p3) {
        v4642.each(v1263);
      }
      return;
    }
    introspect(JAM.policy.p3) {
      var v4643 = a$$434(this)
    }
    introspect(JAM.policy.p3) {
      var d$$225 = v4643.data("resizable")
    }
    var e$$213 = d$$225.options;
    var v4644;
    var v25276 = e$$213.alsoResize;
    var v22602 = typeof v25276;
    var v17114 = v22602 == "object";
    if (v17114) {
      var v25277 = e$$213.alsoResize;
      var v22603 = v25277.parentNode;
      v17114 = !v22603;
    }
    var v11496 = v17114;
    if (v11496) {
      var v11494;
      var v22604 = e$$213.alsoResize;
      var v17116 = v22604.length;
      if (v17116) {
        var v22605 = e$$213.alsoResize;
        e$$213.alsoResize = v22605[0];
        var v22606 = e$$213.alsoResize;
        v11494 = f$$85(v22606);
      } else {
        var v17115 = e$$213.alsoResize;
        introspect(JAM.policy.p3) {
          v11494 = a$$434.each(v17115, v1264);
        }
      }
      v4644 = v11494;
    } else {
      var v11495 = e$$213.alsoResize;
      v4644 = f$$85(v11495);
    }
    v4644;
    return;
  }
  function v1262() {
    var v4645 = this.originalElement;
    var v4646 = this.element;
    var v4647 = this.helper;
    var v4648 = this.position;
    var v4649 = this.size;
    var v4650 = this.originalSize;
    var v4651 = this.originalPosition;
    return {originalElement:v4645, element:v4646, helper:v4647, position:v4648, size:v4649, originalSize:v4650, originalPosition:v4651};
  }
  function v1261(b$$355, c$$294) {
    var v17117 = a$$434.ui;
    var v11497 = v17117.plugin;
    introspect(JAM.policy.p3) {
      var v17118 = this.ui()
    }
    var v11498 = [c$$294, v17118];
    introspect(JAM.policy.p3) {
      v11497.call(this, b$$355, v11498);
    }
    var v11499 = b$$355 != "resize";
    if (v11499) {
      introspect(JAM.policy.p3) {
        var v17119 = this.ui()
      }
      introspect(JAM.policy.p3) {
        this._trigger(b$$355, c$$294, v17119);
      }
    }
    return;
  }
  function v1260(b$$354, c$$293, d$$224) {
    var v17120 = this._change;
    var v11500 = v17120.n;
    introspect(JAM.policy.p3) {
      var v4652 = v11500.apply(this, arguments)
    }
    var v17121 = this._change;
    var v11501 = v17121.w;
    var v11502 = [b$$354, c$$293, d$$224];
    introspect(JAM.policy.p3) {
      var v4653 = v11501.apply(this, v11502)
    }
    introspect(JAM.policy.p3) {
      return a$$434.extend(v4652, v4653);
    }
  }
  function v1259(b$$353, c$$292, d$$223) {
    var v17122 = this._change;
    var v11503 = v17122.n;
    introspect(JAM.policy.p3) {
      var v4654 = v11503.apply(this, arguments)
    }
    var v17123 = this._change;
    var v11504 = v17123.e;
    var v11505 = [b$$353, c$$292, d$$223];
    introspect(JAM.policy.p3) {
      var v4655 = v11504.apply(this, v11505)
    }
    introspect(JAM.policy.p3) {
      return a$$434.extend(v4654, v4655);
    }
  }
  function v1258(b$$352, c$$291, d$$222) {
    var v17124 = this._change;
    var v11506 = v17124.s;
    introspect(JAM.policy.p3) {
      var v4656 = v11506.apply(this, arguments)
    }
    var v17125 = this._change;
    var v11507 = v17125.w;
    var v11508 = [b$$352, c$$291, d$$222];
    introspect(JAM.policy.p3) {
      var v4657 = v11507.apply(this, v11508)
    }
    introspect(JAM.policy.p3) {
      return a$$434.extend(v4656, v4657);
    }
  }
  function v1257(b$$351, c$$290, d$$221) {
    var v17126 = this._change;
    var v11509 = v17126.s;
    introspect(JAM.policy.p3) {
      var v4658 = v11509.apply(this, arguments)
    }
    var v17127 = this._change;
    var v11510 = v17127.e;
    var v11511 = [b$$351, c$$290, d$$221];
    introspect(JAM.policy.p3) {
      var v4659 = v11510.apply(this, v11511)
    }
    introspect(JAM.policy.p3) {
      return a$$434.extend(v4658, v4659);
    }
  }
  function v1256(a$$444, b$$350, c$$289) {
    var v17128 = this.originalSize;
    var v11512 = v17128.height;
    var v4660 = v11512 + c$$289;
    return {height:v4660};
  }
  function v1255(a$$443, b$$349, c$$288) {
    var d$$220 = this.options;
    var e$$212 = this.originalSize;
    var f$$84 = this.originalPosition;
    var v11513 = f$$84.top;
    var v4661 = v11513 + c$$288;
    var v11514 = e$$212.height;
    var v4662 = v11514 - c$$288;
    return {top:v4661, height:v4662};
  }
  function v1254(a$$442, b$$348, c$$287) {
    var d$$219 = this.options;
    var e$$211 = this.originalSize;
    var f$$83 = this.originalPosition;
    var v11515 = f$$83.left;
    var v4663 = v11515 + b$$348;
    var v11516 = e$$211.width;
    var v4664 = v11516 - b$$348;
    return {left:v4663, width:v4664};
  }
  function v1253(a$$441, b$$347, c$$286) {
    var v17129 = this.originalSize;
    var v11517 = v17129.width;
    var v4665 = v11517 + b$$347;
    return {width:v4665};
  }
  function v1252() {
    var b$$346 = this.element;
    var c$$285 = this.options;
    introspect(JAM.policy.p3) {
      var v31088 = b$$346.offset()
    }
    this.elementOffset = v31088;
    var v4670 = this._helper;
    if (v4670) {
      var v4666 = this.helper;
      var v11518 = !v4666;
      if (v11518) {
        introspect(JAM.policy.p3) {
          v4666 = a$$434('<div style="overflow:hidden;"></div>');
        }
      }
      this.helper = v4666;
      var v11519 = a$$434.browser;
      var v4667 = v11519.msie;
      if (v4667) {
        var v17130 = a$$434.browser;
        var v11520 = v17130.version;
        v4667 = v11520 < 7;
      }
      var d$$218 = v4667;
      var v4668;
      if (d$$218) {
        v4668 = 1;
      } else {
        v4668 = 0;
      }
      var e$$210 = v4668;
      var v4669;
      if (d$$218) {
        v4669 = 2;
      } else {
        v4669 = -1;
      }
      var f$$82 = v4669;
      var v17131 = this.helper;
      var v17132 = this._helper;
      introspect(JAM.policy.p3) {
        var v11521 = v17131.addClass(v17132)
      }
      var v25278 = this.element;
      introspect(JAM.policy.p3) {
        var v22607 = v25278.outerWidth()
      }
      var v17133 = v22607 + f$$82;
      var v25279 = this.element;
      introspect(JAM.policy.p3) {
        var v22608 = v25279.outerHeight()
      }
      var v17134 = v22608 + f$$82;
      var v27128 = this.elementOffset;
      var v25280 = v27128.left;
      var v22609 = v25280 - e$$210;
      var v17135 = v22609 + "px";
      var v27129 = this.elementOffset;
      var v25281 = v27129.top;
      var v22610 = v25281 - e$$210;
      var v17136 = v22610 + "px";
      var v25282 = c$$285.zIndex;
      var v17137 = c$$285.zIndex = v25282 + 1;
      var v11522 = {width:v17133, height:v17134, position:"absolute", left:v17135, top:v17136, zIndex:v17137};
      introspect(JAM.policy.p3) {
        v11521.css(v11522);
      }
      var v17138 = this.helper;
      introspect(JAM.policy.p3) {
        var v11523 = v17138.appendTo("body")
      }
      introspect(JAM.policy.p3) {
        v11523.disableSelection();
      }
    } else {
      this.helper = this.element;
    }
    return;
  }
  function v1251() {
    function v1250(a$$440, b$$345) {
      var v4671 = parseInt(a$$440, 10);
      var v11524 = !v4671;
      if (v11524) {
        v4671 = 0;
      }
      var c$$284 = v4671;
      var v11525 = g$$120[b$$345];
      var v4672 = parseInt(v11525, 10);
      var v11526 = !v4672;
      if (v11526) {
        v4672 = 0;
      }
      var d$$217 = v4672;
      return c$$284 + d$$217;
    }
    var b$$344 = this.options;
    var v17139 = this._proportionallyResizeElements;
    var v11527 = v17139.length;
    var v4673 = !v11527;
    if (v4673) {
      return;
    }
    var v4674 = this.helper;
    var v11528 = !v4674;
    if (v11528) {
      v4674 = this.element;
    }
    var c$$283 = v4674;
    var d$$216 = 0;
    var v17140 = this._proportionallyResizeElements;
    var v11529 = v17140.length;
    var v4687 = d$$216 < v11529;
    for (;v4687;) {
      var v4675 = this._proportionallyResizeElements;
      var e$$209 = v4675[d$$216];
      var v11530 = this.borderDif;
      var v4684 = !v11530;
      if (v4684) {
        introspect(JAM.policy.p3) {
          var v4676 = e$$209.css("borderTopWidth")
        }
        introspect(JAM.policy.p3) {
          var v4677 = e$$209.css("borderRightWidth")
        }
        introspect(JAM.policy.p3) {
          var v4678 = e$$209.css("borderBottomWidth")
        }
        introspect(JAM.policy.p3) {
          var v4679 = e$$209.css("borderLeftWidth")
        }
        var f$$81 = [v4676, v4677, v4678, v4679];
        introspect(JAM.policy.p3) {
          var v4680 = e$$209.css("paddingTop")
        }
        introspect(JAM.policy.p3) {
          var v4681 = e$$209.css("paddingRight")
        }
        introspect(JAM.policy.p3) {
          var v4682 = e$$209.css("paddingBottom")
        }
        introspect(JAM.policy.p3) {
          var v4683 = e$$209.css("paddingLeft")
        }
        var g$$120 = [v4680, v4681, v4682, v4683];
        introspect(JAM.policy.p3) {
          var v31089 = a$$434.map(f$$81, v1250)
        }
        this.borderDif = v31089;
      }
      var v22611 = a$$434.browser;
      var v17141 = v22611.msie;
      var v11531 = !v17141;
      var v17143 = !v11531;
      if (v17143) {
        introspect(JAM.policy.p3) {
          var v25283 = a$$434(c$$283)
        }
        introspect(JAM.policy.p3) {
          var v22612 = v25283.is(":hidden")
        }
        var v17142 = !v22612;
        if (v17142) {
          introspect(JAM.policy.p3) {
            var v27130 = a$$434(c$$283)
          }
          introspect(JAM.policy.p3) {
            var v25284 = v27130.parents(":hidden")
          }
          var v22613 = v25284.length;
          v17142 = !v22613;
        }
        v11531 = v17142;
      }
      var v4686 = v11531;
      if (v4686) {
        introspect(JAM.policy.p3) {
          var v25285 = c$$283.height()
        }
        var v27131 = this.borderDif;
        var v25286 = v27131[0];
        var v22614 = v25285 - v25286;
        var v25287 = this.borderDif;
        var v22615 = v25287[2];
        var v17144 = v22614 - v22615;
        var v22616 = !v17144;
        if (v22616) {
          v17144 = 0;
        }
        var v11532 = v17144;
        introspect(JAM.policy.p3) {
          var v25288 = c$$283.width()
        }
        var v27132 = this.borderDif;
        var v25289 = v27132[1];
        var v22617 = v25288 - v25289;
        var v25290 = this.borderDif;
        var v22618 = v25290[3];
        var v17145 = v22617 - v22618;
        var v22619 = !v17145;
        if (v22619) {
          v17145 = 0;
        }
        var v11533 = v17145;
        var v4685 = {height:v11532, width:v11533};
        introspect(JAM.policy.p3) {
          e$$209.css(v4685);
        }
      } else {
      }
      d$$216++;
      var v17146 = this._proportionallyResizeElements;
      var v11534 = v17146.length;
      v4687 = d$$216 < v11534;
    }
    return;
  }
  function v1249(a$$439, b$$343) {
    var c$$282 = this.helper;
    var e$$208 = this._vBoundaries;
    var v4688 = this._aspectRatio;
    var v11535 = !v4688;
    if (v11535) {
      v4688 = b$$343.shiftKey;
    }
    var f$$80 = v4688;
    var g$$119 = this.axis;
    var v17147 = a$$439.width;
    var v11536 = d$$209(v17147);
    if (v11536) {
      v11536 = e$$208.maxWidth;
    }
    var v4689 = v11536;
    if (v4689) {
      var v11537 = e$$208.maxWidth;
      var v11538 = a$$439.width;
      v4689 = v11537 < v11538;
    }
    var h$$98 = v4689;
    var v17148 = a$$439.height;
    var v11539 = d$$209(v17148);
    if (v11539) {
      v11539 = e$$208.maxHeight;
    }
    var v4690 = v11539;
    if (v4690) {
      var v11540 = e$$208.maxHeight;
      var v11541 = a$$439.height;
      v4690 = v11540 < v11541;
    }
    var i$$156 = v4690;
    var v17149 = a$$439.width;
    var v11542 = d$$209(v17149);
    if (v11542) {
      v11542 = e$$208.minWidth;
    }
    var v4691 = v11542;
    if (v4691) {
      var v11543 = e$$208.minWidth;
      var v11544 = a$$439.width;
      v4691 = v11543 > v11544;
    }
    var j$$70 = v4691;
    var v17150 = a$$439.height;
    var v11545 = d$$209(v17150);
    if (v11545) {
      v11545 = e$$208.minHeight;
    }
    var v4692 = v11545;
    if (v4692) {
      var v11546 = e$$208.minHeight;
      var v11547 = a$$439.height;
      v4692 = v11546 > v11547;
    }
    var k$$47 = v4692;
    if (j$$70) {
      a$$439.width = e$$208.minWidth;
    }
    if (k$$47) {
      a$$439.height = e$$208.minHeight;
    }
    if (h$$98) {
      a$$439.width = e$$208.maxWidth;
    }
    if (i$$156) {
      a$$439.height = e$$208.maxHeight;
    }
    var v11548 = this.originalPosition;
    var v4693 = v11548.left;
    var v11549 = this.originalSize;
    var v4694 = v11549.width;
    var l$$57 = v4693 + v4694;
    var v11550 = this.position;
    var v4695 = v11550.top;
    var v11551 = this.size;
    var v4696 = v11551.height;
    var m$$31 = v4695 + v4696;
    introspect(JAM.policy.p3) {
      var n$$82 = /sw|nw|w/.test(g$$119)
    }
    introspect(JAM.policy.p3) {
      var o$$18 = /nw|ne|n/.test(g$$119)
    }
    var v22620 = j$$70 && n$$82;
    if (v22620) {
      var v25291 = e$$208.minWidth;
      a$$439.left = l$$57 - v25291;
    }
    var v22621 = h$$98 && n$$82;
    if (v22621) {
      var v25292 = e$$208.maxWidth;
      a$$439.left = l$$57 - v25292;
    }
    var v17151 = k$$47 && o$$18;
    if (v17151) {
      var v22622 = e$$208.minHeight;
      a$$439.top = m$$31 - v22622;
    }
    var v11552 = i$$156 && o$$18;
    if (v11552) {
      var v17152 = e$$208.maxHeight;
      a$$439.top = m$$31 - v17152;
    }
    var v11553 = a$$439.width;
    var v4697 = !v11553;
    if (v4697) {
      var v11554 = a$$439.height;
      v4697 = !v11554;
    }
    var p$$39 = v4697;
    var v11555;
    var v25293 = p$$39;
    if (v25293) {
      var v27133 = a$$439.left;
      v25293 = !v27133;
    }
    var v22623 = v25293;
    if (v22623) {
      v22623 = a$$439.top;
    }
    var v17154 = v22623;
    if (v17154) {
      v11555 = a$$439.top = null;
    } else {
      var v25294 = p$$39;
      if (v25294) {
        var v27134 = a$$439.top;
        v25294 = !v27134;
      }
      var v22624 = v25294;
      if (v22624) {
        v22624 = a$$439.left;
      }
      var v17153 = v22624;
      if (v17153) {
        v17153 = a$$439.left = null;
      }
      v11555 = v17153;
    }
    v11555;
    return a$$439;
  }
  function v1248(a$$438, b$$342) {
    var c$$281 = this.options;
    var e$$207 = this.position;
    var f$$79 = this.size;
    var g$$118 = this.axis;
    var v22625;
    var v27135 = a$$438.height;
    var v25298 = d$$209(v27135);
    if (v25298) {
      var v25295 = a$$438.height;
      var v25296 = this.aspectRatio;
      v22625 = a$$438.width = v25295 * v25296;
    } else {
      var v27136 = a$$438.width;
      var v25297 = d$$209(v27136);
      if (v25297) {
        var v27137 = a$$438.width;
        var v27138 = this.aspectRatio;
        v25297 = a$$438.height = v27137 / v27138;
      }
      v22625 = v25297;
    }
    v22625;
    var v22626 = g$$118 == "sw";
    if (v22626) {
      var v27139 = e$$207.left;
      var v28322 = f$$79.width;
      var v28323 = a$$438.width;
      var v27140 = v28322 - v28323;
      a$$438.left = v27139 + v27140;
      a$$438.top = null;
    }
    var v17155 = g$$118 == "nw";
    if (v17155) {
      var v25299 = e$$207.top;
      var v27141 = f$$79.height;
      var v27142 = a$$438.height;
      var v25300 = v27141 - v27142;
      a$$438.top = v25299 + v25300;
      var v25301 = e$$207.left;
      var v27143 = f$$79.width;
      var v27144 = a$$438.width;
      var v25302 = v27143 - v27144;
      a$$438.left = v25301 + v25302;
    }
    return a$$438;
  }
  function v1247(a$$437) {
    var b$$341 = this.options;
    var v25303 = this.helper;
    introspect(JAM.policy.p3) {
      var v31090 = v25303.offset()
    }
    this.offset = v31090;
    var v27145 = a$$437.left;
    var v25304 = d$$209(v27145);
    if (v25304) {
      var v27146 = this.position;
      v27146.left = a$$437.left;
    }
    var v25305 = a$$437.top;
    var v22627 = d$$209(v25305);
    if (v22627) {
      var v25306 = this.position;
      v25306.top = a$$437.top;
    }
    var v22628 = a$$437.height;
    var v17156 = d$$209(v22628);
    if (v17156) {
      var v22629 = this.size;
      v22629.height = a$$437.height;
    }
    var v17157 = a$$437.width;
    var v11556 = d$$209(v17157);
    if (v11556) {
      var v17158 = this.size;
      v17158.width = a$$437.width;
    }
    return;
  }
  function v1246(a$$436) {
    var b$$340 = this.options;
    var c$$280;
    var e$$206;
    var f$$78;
    var g$$117;
    var h$$97;
    var v11557;
    var v22630 = b$$340.minWidth;
    var v17159 = d$$209(v22630);
    if (v17159) {
      v11557 = b$$340.minWidth;
    } else {
      v11557 = 0;
    }
    var v4698 = v11557;
    var v11558;
    var v22631 = b$$340.maxWidth;
    var v17160 = d$$209(v22631);
    if (v17160) {
      v11558 = b$$340.maxWidth;
    } else {
      v11558 = Infinity;
    }
    var v4699 = v11558;
    var v11559;
    var v22632 = b$$340.minHeight;
    var v17161 = d$$209(v22632);
    if (v17161) {
      v11559 = b$$340.minHeight;
    } else {
      v11559 = 0;
    }
    var v4700 = v11559;
    var v11560;
    var v22633 = b$$340.maxHeight;
    var v17162 = d$$209(v22633);
    if (v17162) {
      v11560 = b$$340.maxHeight;
    } else {
      v11560 = Infinity;
    }
    var v4701 = v11560;
    h$$97 = {minWidth:v4698, maxWidth:v4699, minHeight:v4700, maxHeight:v4701};
    var v11561 = this._aspectRatio;
    var v17163 = !v11561;
    if (v17163) {
      v11561 = a$$436;
    }
    var v4702 = v11561;
    if (v4702) {
      var v29079 = h$$97.minHeight;
      var v29080 = this.aspectRatio;
      c$$280 = v29079 * v29080;
      var v29081 = h$$97.minWidth;
      var v29082 = this.aspectRatio;
      f$$78 = v29081 / v29082;
      var v28324 = h$$97.maxHeight;
      var v28325 = this.aspectRatio;
      e$$206 = v28324 * v28325;
      var v27147 = h$$97.maxWidth;
      var v27148 = this.aspectRatio;
      g$$117 = v27147 / v27148;
      var v27149 = h$$97.minWidth;
      var v25307 = c$$280 > v27149;
      if (v25307) {
        h$$97.minWidth = c$$280;
      }
      var v25308 = h$$97.minHeight;
      var v22634 = f$$78 > v25308;
      if (v22634) {
        h$$97.minHeight = f$$78;
      }
      var v22635 = h$$97.maxWidth;
      var v17164 = e$$206 < v22635;
      if (v17164) {
        h$$97.maxWidth = e$$206;
      }
      var v17165 = h$$97.maxHeight;
      var v11562 = g$$117 < v17165;
      if (v11562) {
        h$$97.maxHeight = g$$117;
      }
    }
    this._vBoundaries = h$$97;
    return;
  }
  function v1245(b$$339) {
    this.resizing = !1;
    var c$$279 = this.options;
    var d$$215 = this;
    var v4710 = this._helper;
    if (v4710) {
      var e$$205 = this._proportionallyResizeElements;
      var v4703 = e$$205.length;
      if (v4703) {
        var v17166 = e$$205[0];
        var v11563 = v17166.nodeName;
        introspect(JAM.policy.p3) {
          v4703 = /textarea/i.test(v11563);
        }
      }
      var f$$77 = v4703;
      var v4704;
      var v17167 = f$$77;
      if (v17167) {
        var v22636 = a$$434.ui;
        var v22637 = e$$205[0];
        introspect(JAM.policy.p3) {
          v17167 = v22636.hasScroll(v22637, "left");
        }
      }
      var v11565 = v17167;
      if (v11565) {
        v4704 = 0;
      } else {
        var v11564 = d$$215.sizeDiff;
        v4704 = v11564.height;
      }
      var g$$116 = v4704;
      var v4705;
      if (f$$77) {
        v4705 = 0;
      } else {
        var v11566 = d$$215.sizeDiff;
        v4705 = v11566.width;
      }
      var h$$96 = v4705;
      var v17168 = d$$215.helper;
      introspect(JAM.policy.p3) {
        var v11567 = v17168.width()
      }
      var v4706 = v11567 - h$$96;
      var v17169 = d$$215.helper;
      introspect(JAM.policy.p3) {
        var v11568 = v17169.height()
      }
      var v4707 = v11568 - g$$116;
      var i$$155 = {width:v4706, height:v4707};
      var v22638 = d$$215.element;
      introspect(JAM.policy.p3) {
        var v17170 = v22638.css("left")
      }
      var v11569 = parseInt(v17170, 10);
      var v22639 = d$$215.position;
      var v17171 = v22639.left;
      var v22640 = d$$215.originalPosition;
      var v17172 = v22640.left;
      var v11570 = v17171 - v17172;
      var v4708 = v11569 + v11570;
      var v11571 = !v4708;
      if (v11571) {
        v4708 = null;
      }
      var j$$69 = v4708;
      var v22641 = d$$215.element;
      introspect(JAM.policy.p3) {
        var v17173 = v22641.css("top")
      }
      var v11572 = parseInt(v17173, 10);
      var v22642 = d$$215.position;
      var v17174 = v22642.top;
      var v22643 = d$$215.originalPosition;
      var v17175 = v22643.top;
      var v11573 = v17174 - v17175;
      var v4709 = v11572 + v11573;
      var v11574 = !v4709;
      if (v11574) {
        v4709 = null;
      }
      var k$$46 = v4709;
      var v22644 = c$$279.animate;
      var v25311 = !v22644;
      if (v25311) {
        var v25309 = this.element;
        var v27150 = {top:k$$46, left:j$$69};
        introspect(JAM.policy.p3) {
          var v25310 = a$$434.extend(i$$155, v27150)
        }
        introspect(JAM.policy.p3) {
          v25309.css(v25310);
        }
      }
      var v22645 = d$$215.helper;
      var v25312 = d$$215.size;
      var v22646 = v25312.height;
      introspect(JAM.policy.p3) {
        v22645.height(v22646);
      }
      var v17176 = d$$215.helper;
      var v22647 = d$$215.size;
      var v17177 = v22647.width;
      introspect(JAM.policy.p3) {
        v17176.width(v17177);
      }
      var v17178 = this._helper;
      if (v17178) {
        var v22648 = c$$279.animate;
        v17178 = !v22648;
      }
      var v11575 = v17178;
      if (v11575) {
        introspect(JAM.policy.p3) {
          this._proportionallyResize();
        }
      }
    }
    introspect(JAM.policy.p3) {
      var v25313 = a$$434("body")
    }
    introspect(JAM.policy.p3) {
      v25313.css("cursor", "auto");
    }
    var v25314 = this.element;
    introspect(JAM.policy.p3) {
      v25314.removeClass("ui-resizable-resizing");
    }
    introspect(JAM.policy.p3) {
      this._propagate("stop", b$$339);
    }
    var v17179 = this._helper;
    if (v17179) {
      var v22649 = this.helper;
      introspect(JAM.policy.p3) {
        v22649.remove();
      }
    }
    return !1;
  }
  function v1244(b$$338) {
    var c$$278 = this.helper;
    var d$$214 = this.options;
    var f$$76 = this;
    var g$$115 = this.originalMousePosition;
    var h$$95 = this.axis;
    var v11576 = b$$338.pageX;
    var v11577 = g$$115.left;
    var v4711 = v11576 - v11577;
    var v11578 = !v4711;
    if (v11578) {
      v4711 = 0;
    }
    var i$$154 = v4711;
    var v11579 = b$$338.pageY;
    var v11580 = g$$115.top;
    var v4712 = v11579 - v11580;
    var v11581 = !v4712;
    if (v11581) {
      v4712 = 0;
    }
    var j$$68 = v4712;
    var v4713 = this._change;
    var k$$45 = v4713[h$$95];
    var v4714 = !k$$45;
    if (v4714) {
      return !1;
    }
    var v4715 = [b$$338, i$$154, j$$68];
    introspect(JAM.policy.p3) {
      var l$$56 = k$$45.apply(this, v4715)
    }
    var v11582 = a$$434.browser;
    var v4716 = v11582.msie;
    if (v4716) {
      var v17180 = a$$434.browser;
      var v11583 = v17180.version;
      v4716 = v11583 < 7;
    }
    var m$$30 = v4716;
    var n$$81 = this.sizeDiff;
    var v4717 = b$$338.shiftKey;
    introspect(JAM.policy.p3) {
      this._updateVirtualBoundaries(v4717);
    }
    var v11584 = this._aspectRatio;
    var v17181 = !v11584;
    if (v17181) {
      v11584 = b$$338.shiftKey;
    }
    var v4718 = v11584;
    if (v4718) {
      introspect(JAM.policy.p3) {
        l$$56 = this._updateRatio(l$$56, b$$338);
      }
    }
    introspect(JAM.policy.p3) {
      l$$56 = this._respectSize(l$$56, b$$338);
    }
    introspect(JAM.policy.p3) {
      this._propagate("resize", b$$338);
    }
    var v29574 = this.position;
    var v29083 = v29574.top;
    var v28326 = v29083 + "px";
    var v29575 = this.position;
    var v29084 = v29575.left;
    var v28327 = v29084 + "px";
    var v29576 = this.size;
    var v29085 = v29576.width;
    var v28328 = v29085 + "px";
    var v29577 = this.size;
    var v29086 = v29577.height;
    var v28329 = v29086 + "px";
    var v27151 = {top:v28326, left:v28327, width:v28328, height:v28329};
    introspect(JAM.policy.p3) {
      c$$278.css(v27151);
    }
    var v28330 = this._helper;
    var v27152 = !v28330;
    if (v27152) {
      var v28331 = this._proportionallyResizeElements;
      v27152 = v28331.length;
    }
    var v25315 = v27152;
    if (v25315) {
      introspect(JAM.policy.p3) {
        this._proportionallyResize();
      }
    }
    introspect(JAM.policy.p3) {
      this._updateCache(l$$56);
    }
    introspect(JAM.policy.p3) {
      var v17182 = this.ui()
    }
    introspect(JAM.policy.p3) {
      this._trigger("resize", b$$338, v17182);
    }
    return !1;
  }
  function v1243(b$$337) {
    var d$$213 = this.options;
    var v4719 = this.element;
    introspect(JAM.policy.p3) {
      var e$$203 = v4719.position()
    }
    var f$$75 = this.element;
    this.resizing = !0;
    introspect(JAM.policy.p3) {
      var v25316 = a$$434(document)
    }
    introspect(JAM.policy.p3) {
      var v22650 = v25316.scrollTop()
    }
    introspect(JAM.policy.p3) {
      var v25317 = a$$434(document)
    }
    introspect(JAM.policy.p3) {
      var v22651 = v25317.scrollLeft()
    }
    this.documentScroll = {top:v22650, left:v22651};
    introspect(JAM.policy.p3) {
      var v22652 = f$$75.is(".ui-draggable")
    }
    var v25319 = !v22652;
    if (v25319) {
      introspect(JAM.policy.p3) {
        var v25318 = f$$75.css("position")
      }
      introspect(JAM.policy.p3) {
        v22652 = /absolute/.test(v25318);
      }
    }
    var v17183 = v22652;
    if (v17183) {
      var v25320 = e$$203.top;
      var v25321 = e$$203.left;
      var v22653 = {position:"absolute", top:v25320, left:v25321};
      introspect(JAM.policy.p3) {
        f$$75.css(v22653);
      }
    }
    introspect(JAM.policy.p3) {
      this._renderProxy();
    }
    var v11585 = this.helper;
    introspect(JAM.policy.p3) {
      var v4720 = v11585.css("left")
    }
    var g$$114 = c$$273(v4720);
    var v11586 = this.helper;
    introspect(JAM.policy.p3) {
      var v4721 = v11586.css("top")
    }
    var h$$94 = c$$273(v4721);
    var v29578 = d$$213.containment;
    if (v29578) {
      var v30677 = d$$213.containment;
      introspect(JAM.policy.p3) {
        var v30597 = a$$434(v30677)
      }
      introspect(JAM.policy.p3) {
        var v30470 = v30597.scrollLeft()
      }
      var v30598 = !v30470;
      if (v30598) {
        v30470 = 0;
      }
      var v30334 = v30470;
      g$$114 = g$$114 + v30334;
      var v30678 = d$$213.containment;
      introspect(JAM.policy.p3) {
        var v30599 = a$$434(v30678)
      }
      introspect(JAM.policy.p3) {
        var v30471 = v30599.scrollTop()
      }
      var v30600 = !v30471;
      if (v30600) {
        v30471 = 0;
      }
      var v30335 = v30471;
      h$$94 = h$$94 + v30335;
    }
    var v29579 = this.helper;
    introspect(JAM.policy.p3) {
      var v31091 = v29579.offset()
    }
    this.offset = v31091;
    this.position = {left:g$$114, top:h$$94};
    var v28332;
    var v29091 = this._helper;
    if (v29091) {
      introspect(JAM.policy.p3) {
        var v29087 = f$$75.outerWidth()
      }
      introspect(JAM.policy.p3) {
        var v29088 = f$$75.outerHeight()
      }
      v28332 = {width:v29087, height:v29088};
    } else {
      introspect(JAM.policy.p3) {
        var v29089 = f$$75.width()
      }
      introspect(JAM.policy.p3) {
        var v29090 = f$$75.height()
      }
      v28332 = {width:v29089, height:v29090};
    }
    this.size = v28332;
    var v27153;
    var v28337 = this._helper;
    if (v28337) {
      introspect(JAM.policy.p3) {
        var v28333 = f$$75.outerWidth()
      }
      introspect(JAM.policy.p3) {
        var v28334 = f$$75.outerHeight()
      }
      v27153 = {width:v28333, height:v28334};
    } else {
      introspect(JAM.policy.p3) {
        var v28335 = f$$75.width()
      }
      introspect(JAM.policy.p3) {
        var v28336 = f$$75.height()
      }
      v27153 = {width:v28335, height:v28336};
    }
    this.originalSize = v27153;
    this.originalPosition = {left:g$$114, top:h$$94};
    introspect(JAM.policy.p3) {
      var v25322 = f$$75.outerWidth()
    }
    introspect(JAM.policy.p3) {
      var v25323 = f$$75.width()
    }
    var v22654 = v25322 - v25323;
    introspect(JAM.policy.p3) {
      var v25324 = f$$75.outerHeight()
    }
    introspect(JAM.policy.p3) {
      var v25325 = f$$75.height()
    }
    var v22655 = v25324 - v25325;
    this.sizeDiff = {width:v22654, height:v22655};
    var v17184 = b$$337.pageX;
    var v17185 = b$$337.pageY;
    this.originalMousePosition = {left:v17184, top:v17185};
    var v11587;
    var v25326 = d$$213.aspectRatio;
    var v22656 = typeof v25326;
    var v17187 = v22656 == "number";
    if (v17187) {
      v11587 = d$$213.aspectRatio;
    } else {
      var v25327 = this.originalSize;
      var v22657 = v25327.width;
      var v25328 = this.originalSize;
      var v22658 = v25328.height;
      var v17186 = v22657 / v22658;
      var v22659 = !v17186;
      if (v22659) {
        v17186 = 1;
      }
      v11587 = v17186;
    }
    this.aspectRatio = v11587;
    var v17188 = this.axis;
    var v11588 = ".ui-resizable-" + v17188;
    introspect(JAM.policy.p3) {
      var v4722 = a$$434(v11588)
    }
    introspect(JAM.policy.p3) {
      var i$$153 = v4722.css("cursor")
    }
    introspect(JAM.policy.p3) {
      var v22660 = a$$434("body")
    }
    var v25329;
    var v27155 = i$$153 == "auto";
    if (v27155) {
      var v27154 = this.axis;
      v25329 = v27154 + "-resize";
    } else {
      v25329 = i$$153;
    }
    var v22661 = v25329;
    introspect(JAM.policy.p3) {
      v22660.css("cursor", v22661);
    }
    introspect(JAM.policy.p3) {
      f$$75.addClass("ui-resizable-resizing");
    }
    introspect(JAM.policy.p3) {
      this._propagate("start", b$$337);
    }
    return !0;
  }
  function v1242(b$$336) {
    var c$$277 = !1;
    var d$$212;
    var v4724 = this.handles;
    for (d$$212 in v4724) {
      var v25330 = this.handles;
      var v22662 = v25330[d$$212];
      introspect(JAM.policy.p3) {
        var v17189 = a$$434(v22662)
      }
      var v11589 = v17189[0];
      var v11590 = b$$336.target;
      var v4723 = v11589 == v11590;
      if (v4723) {
        c$$277 = !0;
      }
    }
    var v17190 = this.options;
    var v11591 = v17190.disabled;
    var v4725 = !v11591;
    if (v4725) {
      v4725 = c$$277;
    }
    return v4725;
  }
  function v1241() {
    function b$$334(b$$335) {
      introspect(JAM.policy.p3) {
        var v25331 = a$$434(b$$335)
      }
      introspect(JAM.policy.p3) {
        var v22663 = v25331.removeClass("ui-resizable ui-resizable-disabled ui-resizable-resizing")
      }
      introspect(JAM.policy.p3) {
        var v17191 = v22663.removeData("resizable")
      }
      introspect(JAM.policy.p3) {
        var v11592 = v17191.unbind(".resizable")
      }
      introspect(JAM.policy.p3) {
        var v4726 = v11592.find(".ui-resizable-handle")
      }
      introspect(JAM.policy.p3) {
        v4726.remove();
      }
      return;
    }
    introspect(JAM.policy.p3) {
      this._mouseDestroy();
    }
    var v4729 = this.elementIsWrapper;
    if (v4729) {
      var v4727 = this.element;
      b$$334(v4727);
      var c$$276 = this.element;
      var v17192 = this.originalElement;
      introspect(JAM.policy.p3) {
        var v22664 = c$$276.css("position")
      }
      introspect(JAM.policy.p3) {
        var v22665 = c$$276.outerWidth()
      }
      introspect(JAM.policy.p3) {
        var v22666 = c$$276.outerHeight()
      }
      introspect(JAM.policy.p3) {
        var v22667 = c$$276.css("top")
      }
      introspect(JAM.policy.p3) {
        var v22668 = c$$276.css("left")
      }
      var v17193 = {position:v22664, width:v22665, height:v22666, top:v22667, left:v22668};
      introspect(JAM.policy.p3) {
        var v11593 = v17192.css(v17193)
      }
      introspect(JAM.policy.p3) {
        var v4728 = c$$276.after(v11593)
      }
      introspect(JAM.policy.p3) {
        v4728.remove();
      }
    }
    var v17194 = this.originalElement;
    var v17195 = this.originalResizeStyle;
    introspect(JAM.policy.p3) {
      v17194.css("resize", v17195);
    }
    var v17196 = this.originalElement;
    b$$334(v17196);
    return this;
  }
  function v1240() {
    function v1239() {
      var v4730 = c$$274.disabled;
      if (v4730) {
        return;
      }
      var v4731 = b$$332.resizing;
      var v11594 = !v4731;
      if (v11594) {
        introspect(JAM.policy.p3) {
          var v17197 = a$$434(this)
        }
        introspect(JAM.policy.p3) {
          v17197.addClass("ui-resizable-autohide");
        }
        var v17198 = b$$332._handles;
        introspect(JAM.policy.p3) {
          v17198.hide();
        }
      }
      return;
    }
    function v1238() {
      var v4732 = c$$274.disabled;
      if (v4732) {
        return;
      }
      introspect(JAM.policy.p3) {
        var v11595 = a$$434(this)
      }
      introspect(JAM.policy.p3) {
        v11595.removeClass("ui-resizable-autohide");
      }
      var v11596 = b$$332._handles;
      introspect(JAM.policy.p3) {
        v11596.show();
      }
      return;
    }
    function v1237() {
      var v11597 = b$$332.resizing;
      var v4736 = !v11597;
      if (v4736) {
        var v4734 = this.className;
        if (v4734) {
          var v4733 = this.className;
          introspect(JAM.policy.p3) {
            var a$$435 = v4733.match(/ui-resizable-(se|sw|ne|nw|n|e|s|w)/i)
          }
        }
        var v4735;
        var v17199 = a$$435;
        if (v17199) {
          v17199 = a$$435[1];
        }
        var v11598 = v17199;
        if (v11598) {
          v4735 = a$$435[1];
        } else {
          v4735 = "se";
        }
        b$$332.axis = v4735;
      }
      return;
    }
    function v1236(b$$333) {
      var v4737 = b$$333;
      var v11599 = !v4737;
      if (v11599) {
        v4737 = this.element;
      }
      b$$333 = v4737;
      var c$$275;
      var v4745 = this.handles;
      for (c$$275 in v4745) {
        var v22669 = this.handles;
        var v17200 = v22669[c$$275];
        var v11600 = v17200.constructor;
        var v4738 = v11600 == String;
        if (v4738) {
          var v11601 = this.handles;
          var v25332 = this.handles;
          var v22670 = v25332[c$$275];
          var v22671 = this.element;
          introspect(JAM.policy.p3) {
            var v17201 = a$$434(v22670, v22671)
          }
          introspect(JAM.policy.p3) {
            var v31092 = v17201.show()
          }
          introspect(JAM.policy.p2) {
            v11601[c$$275] = v31092;
          }
        }
        var v11602 = this.elementIsWrapper;
        if (v11602) {
          var v25333 = this.originalElement;
          var v22672 = v25333[0];
          var v17202 = v22672.nodeName;
          introspect(JAM.policy.p3) {
            v11602 = v17202.match(/textarea|input|select|button/i);
          }
        }
        var v4743 = v11602;
        if (v4743) {
          var v11603 = this.handles;
          var v4739 = v11603[c$$275];
          var v4740 = this.element;
          introspect(JAM.policy.p3) {
            var d$$211 = a$$434(v4739, v4740)
          }
          var e$$202 = 0;
          var v4741;
          introspect(JAM.policy.p3) {
            var v11604 = /sw|ne|nw|se|n|s/.test(c$$275)
          }
          if (v11604) {
            introspect(JAM.policy.p3) {
              v4741 = d$$211.outerHeight();
            }
          } else {
            introspect(JAM.policy.p3) {
              v4741 = d$$211.outerWidth();
            }
          }
          e$$202 = v4741;
          var v17203;
          introspect(JAM.policy.p3) {
            var v22674 = /ne|nw|n/.test(c$$275)
          }
          if (v22674) {
            v17203 = "Top";
          } else {
            var v22673;
            introspect(JAM.policy.p3) {
              var v25335 = /se|sw|s/.test(c$$275)
            }
            if (v25335) {
              v22673 = "Bottom";
            } else {
              var v25334;
              introspect(JAM.policy.p3) {
                var v27156 = /^e$/.test(c$$275)
              }
              if (v27156) {
                v25334 = "Right";
              } else {
                v25334 = "Left";
              }
              v22673 = v25334;
            }
            v17203 = v22673;
          }
          var v11605 = v17203;
          var v4742 = ["padding", v11605];
          introspect(JAM.policy.p3) {
            var f$$74 = v4742.join("")
          }
          introspect(JAM.policy.p3) {
            b$$333.css(f$$74, e$$202);
          }
          introspect(JAM.policy.p3) {
            this._proportionallyResize();
          }
        }
        var v25336 = this.handles;
        var v22675 = v25336[c$$275];
        introspect(JAM.policy.p3) {
          var v17204 = a$$434(v22675)
        }
        var v11606 = v17204.length;
        var v4744 = !v11606;
        if (v4744) {
        }
      }
      return;
    }
    var b$$332 = this;
    var c$$274 = this.options;
    var v22676 = this.element;
    introspect(JAM.policy.p3) {
      v22676.addClass("ui-resizable");
    }
    var v28338 = c$$274.aspectRatio;
    var v27157 = !v28338;
    var v25337 = !v27157;
    var v25338 = c$$274.aspectRatio;
    var v25339 = this.element;
    var v27158;
    var v29580 = c$$274.helper;
    var v29892 = !v29580;
    if (v29892) {
      v29580 = c$$274.ghost;
    }
    var v29092 = v29580;
    var v29581 = !v29092;
    if (v29581) {
      v29092 = c$$274.animate;
    }
    var v28340 = v29092;
    if (v28340) {
      var v28339 = c$$274.helper;
      var v29093 = !v28339;
      if (v29093) {
        v28339 = "ui-resizable-helper";
      }
      v27158 = v28339;
    } else {
      v27158 = null;
    }
    var v25340 = v27158;
    var v22677 = {_aspectRatio:v25337, aspectRatio:v25338, originalElement:v25339, _proportionallyResizeElements:[], _helper:v25340};
    introspect(JAM.policy.p3) {
      a$$434.extend(this, v22677);
    }
    var v27159 = this.element;
    var v25341 = v27159[0];
    var v22678 = v25341.nodeName;
    introspect(JAM.policy.p3) {
      var v17205 = v22678.match(/canvas|textarea|input|select|button|img/i)
    }
    if (v17205) {
      var v30472 = this.element;
      introspect(JAM.policy.p3) {
        var v30601 = a$$434('<div class="ui-wrapper" style="overflow: hidden;"></div>')
      }
      var v30729 = this.element;
      introspect(JAM.policy.p3) {
        var v30679 = v30729.css("position")
      }
      var v30730 = this.element;
      introspect(JAM.policy.p3) {
        var v30680 = v30730.outerWidth()
      }
      var v30731 = this.element;
      introspect(JAM.policy.p3) {
        var v30681 = v30731.outerHeight()
      }
      var v30732 = this.element;
      introspect(JAM.policy.p3) {
        var v30682 = v30732.css("top")
      }
      var v30733 = this.element;
      introspect(JAM.policy.p3) {
        var v30683 = v30733.css("left")
      }
      var v30602 = {position:v30679, width:v30680, height:v30681, top:v30682, left:v30683};
      introspect(JAM.policy.p3) {
        var v30473 = v30601.css(v30602)
      }
      introspect(JAM.policy.p3) {
        v30472.wrap(v30473);
      }
      var v30603 = this.element;
      introspect(JAM.policy.p3) {
        var v30474 = v30603.parent()
      }
      var v30604 = this.element;
      introspect(JAM.policy.p3) {
        var v30475 = v30604.data("resizable")
      }
      introspect(JAM.policy.p3) {
        var v31093 = v30474.data("resizable", v30475)
      }
      this.element = v31093;
      this.elementIsWrapper = !0;
      var v30141 = this.element;
      var v30476 = this.originalElement;
      introspect(JAM.policy.p3) {
        var v30336 = v30476.css("marginLeft")
      }
      var v30477 = this.originalElement;
      introspect(JAM.policy.p3) {
        var v30337 = v30477.css("marginTop")
      }
      var v30478 = this.originalElement;
      introspect(JAM.policy.p3) {
        var v30338 = v30478.css("marginRight")
      }
      var v30479 = this.originalElement;
      introspect(JAM.policy.p3) {
        var v30339 = v30479.css("marginBottom")
      }
      var v30142 = {marginLeft:v30336, marginTop:v30337, marginRight:v30338, marginBottom:v30339};
      introspect(JAM.policy.p3) {
        v30141.css(v30142);
      }
      var v29893 = this.originalElement;
      var v29894 = {marginLeft:0, marginTop:0, marginRight:0, marginBottom:0};
      introspect(JAM.policy.p3) {
        v29893.css(v29894);
      }
      var v29582 = this.originalElement;
      introspect(JAM.policy.p3) {
        var v31094 = v29582.css("resize")
      }
      this.originalResizeStyle = v31094;
      var v29094 = this.originalElement;
      introspect(JAM.policy.p3) {
        v29094.css("resize", "none");
      }
      var v28341 = this._proportionallyResizeElements;
      var v29095 = this.originalElement;
      var v29096 = {position:"static", zoom:1, display:"block"};
      introspect(JAM.policy.p3) {
        var v28342 = v29095.css(v29096)
      }
      introspect(JAM.policy.p3) {
        v28341.push(v28342);
      }
      var v27160 = this.originalElement;
      var v29097 = this.originalElement;
      introspect(JAM.policy.p3) {
        var v28343 = v29097.css("margin")
      }
      var v27161 = {margin:v28343};
      introspect(JAM.policy.p3) {
        v27160.css(v27161);
      }
      introspect(JAM.policy.p3) {
        this._proportionallyResize();
      }
    }
    var v11607 = c$$274.handles;
    var v17207 = !v11607;
    if (v17207) {
      var v17206;
      var v27162 = this.element;
      introspect(JAM.policy.p3) {
        var v25342 = a$$434(".ui-resizable-handle", v27162)
      }
      var v22679 = v25342.length;
      if (v22679) {
        v17206 = {n:".ui-resizable-n", e:".ui-resizable-e", s:".ui-resizable-s", w:".ui-resizable-w", se:".ui-resizable-se", sw:".ui-resizable-sw", ne:".ui-resizable-ne", nw:".ui-resizable-nw"};
      } else {
        v17206 = "e,s,se";
      }
      v11607 = v17206;
    }
    this.handles = v11607;
    var v17208 = this.handles;
    var v11608 = v17208.constructor;
    var v4751 = v11608 == String;
    if (v4751) {
      var v11609 = this.handles;
      var v4746 = v11609 == "all";
      if (v4746) {
        this.handles = "n,e,s,w,se,sw,ne,nw";
      }
      var v4747 = this.handles;
      introspect(JAM.policy.p3) {
        var d$$210 = v4747.split(",")
      }
      this.handles = {};
      var e$$201 = 0;
      var v11610 = d$$210.length;
      var v4750 = e$$201 < v11610;
      for (;v4750;) {
        var v4748 = d$$210[e$$201];
        introspect(JAM.policy.p3) {
          var f$$73 = a$$434.trim(v4748)
        }
        var g$$113 = "ui-resizable-" + f$$73;
        var v11611 = '<div class="ui-resizable-handle ' + g$$113;
        var v4749 = v11611 + '"></div>';
        introspect(JAM.policy.p3) {
          var h$$93 = a$$434(v4749)
        }
        var v25343 = c$$274.zIndex;
        var v22680 = {zIndex:v25343};
        introspect(JAM.policy.p3) {
          h$$93.css(v22680);
        }
        var v22681 = "se" == f$$73;
        if (v22681) {
          introspect(JAM.policy.p3) {
            h$$93.addClass("ui-icon ui-icon-gripsmall-diagonal-se");
          }
        }
        var v17209 = this.handles;
        introspect(JAM.policy.p2) {
          v17209[f$$73] = ".ui-resizable-" + f$$73;
        }
        var v11612 = this.element;
        introspect(JAM.policy.p3) {
          v11612.append(h$$93);
        }
        e$$201++;
        var v11613 = d$$210.length;
        v4750 = e$$201 < v11613;
      }
    }
    this._renderAxis = v1236;
    var v27163 = this.element;
    introspect(JAM.policy.p3) {
      this._renderAxis(v27163);
    }
    var v27164 = this.element;
    introspect(JAM.policy.p3) {
      var v25344 = a$$434(".ui-resizable-handle", v27164)
    }
    introspect(JAM.policy.p3) {
      var v31095 = v25344.disableSelection()
    }
    this._handles = v31095;
    var v22682 = this._handles;
    introspect(JAM.policy.p3) {
      v22682.mouseover(v1237);
    }
    var v17210 = c$$274.autoHide;
    if (v17210) {
      var v25345 = this._handles;
      introspect(JAM.policy.p3) {
        v25345.hide();
      }
      var v28344 = this.element;
      introspect(JAM.policy.p3) {
        var v27165 = a$$434(v28344)
      }
      introspect(JAM.policy.p3) {
        var v25346 = v27165.addClass("ui-resizable-autohide")
      }
      introspect(JAM.policy.p3) {
        v25346.hover(v1238, v1239);
      }
    }
    introspect(JAM.policy.p3) {
      this._mouseInit();
    }
    return;
  }
  function d$$209(a$$450) {
    var v11614 = parseInt(a$$450, 10);
    var v4752 = isNaN(v11614);
    return !v4752;
  }
  function c$$273(a$$449) {
    var v4753 = parseInt(a$$449, 10);
    var v11615 = !v4753;
    if (v11615) {
      v4753 = 0;
    }
    return v4753;
  }
  var v29098 = a$$434.ui;
  var v28345 = v29098.mouse;
  var v29583 = !1;
  var v29584 = !1;
  var v29585 = !1;
  var v29586 = !1;
  var v29587 = !1;
  var v29588 = !1;
  var v29589 = !1;
  var v29590 = !1;
  var v29099 = {alsoResize:v29583, animate:v29584, animateDuration:"slow", animateEasing:"swing", aspectRatio:v29585, autoHide:v29586, containment:v29587, ghost:v29588, grid:v29589, handles:"e,s,se", helper:v29590, maxHeight:null, maxWidth:null, minHeight:10, minWidth:10, zIndex:1E3};
  var v29100 = {e:v1253, w:v1254, n:v1255, s:v1256, se:v1257, sw:v1258, ne:v1259, nw:v1260};
  var v28346 = {widgetEventPrefix:"resize", options:v29099, _create:v1240, destroy:v1241, _mouseCapture:v1242, _mouseStart:v1243, _mouseDrag:v1244, _mouseStop:v1245, _updateVirtualBoundaries:v1246, _updateCache:v1247, _updateRatio:v1248, _respectSize:v1249, _proportionallyResize:v1251, _renderProxy:v1252, _change:v29100, _propagate:v1261, plugins:{}, ui:v1262};
  introspect(JAM.policy.p3) {
    a$$434.widget("ui.resizable", v28345, v28346);
  }
  var v29101 = a$$434.ui;
  var v28347 = v29101.resizable;
  var v28348 = {version:"1.8.24"};
  introspect(JAM.policy.p3) {
    a$$434.extend(v28347, v28348);
  }
  var v28349 = a$$434.ui;
  var v27166 = v28349.plugin;
  var v27167 = {start:v1265, resize:v1269, stop:v1270};
  introspect(JAM.policy.p3) {
    v27166.add("resizable", "alsoResize", v27167);
  }
  var v27168 = a$$434.ui;
  var v25347 = v27168.plugin;
  var v25348 = {stop:v1272};
  introspect(JAM.policy.p3) {
    v25347.add("resizable", "animate", v25348);
  }
  var v25349 = a$$434.ui;
  var v22683 = v25349.plugin;
  var v22684 = {start:v1274, resize:v1275, stop:v1276};
  introspect(JAM.policy.p3) {
    v22683.add("resizable", "containment", v22684);
  }
  var v22685 = a$$434.ui;
  var v17211 = v22685.plugin;
  var v17212 = {start:v1277, resize:v1278, stop:v1279};
  introspect(JAM.policy.p3) {
    v17211.add("resizable", "ghost", v17212);
  }
  var v17213 = a$$434.ui;
  var v11616 = v17213.plugin;
  var v11617 = {resize:v1280};
  introspect(JAM.policy.p3) {
    v11616.add("resizable", "grid", v11617);
  }
  return;
}
function v1235(a$$430, b$$315) {
  function v1234(b$$330, c$$272) {
    var v17214 = b$$330.element;
    introspect(JAM.policy.p3) {
      var v11618 = v17214.parents(":not(body,html)")
    }
    introspect(JAM.policy.p3) {
      v11618.unbind("scroll.droppable");
    }
    var v17215 = b$$330.options;
    var v11619 = v17215.refreshPositions;
    var v17217 = !v11619;
    if (v17217) {
      var v22686 = a$$430.ui;
      var v17216 = v22686.ddmanager;
      introspect(JAM.policy.p3) {
        v17216.prepareOffsets(b$$330, c$$272);
      }
    }
    return;
  }
  function v1233(b$$329, c$$271) {
    function v1232() {
      function v1231() {
        introspect(JAM.policy.p3) {
          var v17218 = a$$430.data(this, "droppable")
        }
        var v11620 = v17218.options;
        var v4754 = v11620.scope;
        return v4754 === g$$112;
      }
      var v22687 = this.options;
      var v17219 = v22687.disabled;
      var v22688 = !v17219;
      if (v22688) {
        v17219 = this.greedyChild;
      }
      var v11621 = v17219;
      var v17221 = !v11621;
      if (v17221) {
        var v17220 = this.visible;
        v11621 = !v17220;
      }
      var v4755 = v11621;
      if (v4755) {
        return;
      }
      var v4756 = a$$430.ui;
      var v11622 = this.options;
      var v4757 = v11622.tolerance;
      introspect(JAM.policy.p3) {
        var d$$208 = v4756.intersect(b$$329, this, v4757)
      }
      var v4758;
      var v17222 = !d$$208;
      if (v17222) {
        var v22689 = this.isover;
        v17222 = v22689 == 1;
      }
      var v11624 = v17222;
      if (v11624) {
        v4758 = "isout";
      } else {
        var v11623;
        var v22690 = d$$208;
        if (v22690) {
          var v25350 = this.isover;
          v22690 = v25350 == 0;
        }
        var v17223 = v22690;
        if (v17223) {
          v11623 = "isover";
        } else {
          v11623 = null;
        }
        v4758 = v11623;
      }
      var e$$200 = v4758;
      var v4759 = !e$$200;
      if (v4759) {
        return;
      }
      var f$$72;
      var v11625 = this.options;
      var v4763 = v11625.greedy;
      if (v4763) {
        var v4760 = this.options;
        var g$$112 = v4760.scope;
        var v11626 = this.element;
        introspect(JAM.policy.p3) {
          var v4761 = v11626.parents(":data(droppable)")
        }
        introspect(JAM.policy.p3) {
          var h$$92 = v4761.filter(v1231)
        }
        var v4762 = h$$92.length;
        if (v4762) {
          var v17224 = h$$92[0];
          introspect(JAM.policy.p3) {
            f$$72 = a$$430.data(v17224, "droppable");
          }
          var v17225;
          var v22691 = e$$200 == "isover";
          if (v22691) {
            v17225 = 1;
          } else {
            v17225 = 0;
          }
          f$$72.greedyChild = v17225;
        }
      }
      var v27169 = f$$72;
      if (v27169) {
        v27169 = e$$200 == "isover";
      }
      var v25351 = v27169;
      if (v25351) {
        f$$72.isover = 0;
        f$$72.isout = 1;
        var v28350 = f$$72._out;
        introspect(JAM.policy.p3) {
          v28350.call(f$$72, c$$271);
        }
      }
      introspect(JAM.policy.p2) {
        this[e$$200] = 1;
      }
      var v25352;
      var v27170 = e$$200 == "isout";
      if (v27170) {
        v25352 = "isover";
      } else {
        v25352 = "isout";
      }
      var v22692 = v25352;
      introspect(JAM.policy.p2) {
        this[v22692] = 0;
      }
      var v25353;
      var v27171 = e$$200 == "isover";
      if (v27171) {
        v25353 = "_over";
      } else {
        v25353 = "_out";
      }
      var v22693 = v25353;
      var v17226 = this[v22693];
      introspect(JAM.policy.p3) {
        v17226.call(this, c$$271);
      }
      var v17227 = f$$72;
      if (v17227) {
        v17227 = e$$200 == "isout";
      }
      var v11627 = v17227;
      if (v11627) {
        f$$72.isout = 0;
        f$$72.isover = 1;
        var v22694 = f$$72._over;
        introspect(JAM.policy.p3) {
          v22694.call(f$$72, c$$271);
        }
      }
      return;
    }
    var v17228 = b$$329.options;
    var v11628 = v17228.refreshPositions;
    if (v11628) {
      var v22695 = a$$430.ui;
      var v17229 = v22695.ddmanager;
      introspect(JAM.policy.p3) {
        v17229.prepareOffsets(b$$329, c$$271);
      }
    }
    var v27172 = a$$430.ui;
    var v25354 = v27172.ddmanager;
    var v22696 = v25354.droppables;
    var v25355 = b$$329.options;
    var v22697 = v25355.scope;
    var v17230 = v22696[v22697];
    var v22698 = !v17230;
    if (v22698) {
      v17230 = [];
    }
    var v11629 = v17230;
    introspect(JAM.policy.p3) {
      a$$430.each(v11629, v1232);
    }
    return;
  }
  function v1230(b$$328, c$$270) {
    function v1229() {
      var v11630 = b$$328.options;
      var v4764 = v11630.refreshPositions;
      var v11632 = !v4764;
      if (v11632) {
        var v17231 = a$$430.ui;
        var v11631 = v17231.ddmanager;
        introspect(JAM.policy.p3) {
          v11631.prepareOffsets(b$$328, c$$270);
        }
      }
      return;
    }
    var v11633 = b$$328.element;
    introspect(JAM.policy.p3) {
      var v4765 = v11633.parents(":not(body,html)")
    }
    introspect(JAM.policy.p3) {
      v4765.bind("scroll.droppable", v1229);
    }
    return;
  }
  function v1228(b$$327, c$$269) {
    function v1227() {
      var v11634 = this.options;
      var v4766 = !v11634;
      if (v4766) {
        return;
      }
      var v27173 = this.options;
      var v25356 = v27173.disabled;
      var v22699 = !v25356;
      if (v22699) {
        v22699 = this.visible;
      }
      var v17232 = v22699;
      if (v17232) {
        var v22700 = a$$430.ui;
        var v25357 = this.options;
        var v22701 = v25357.tolerance;
        introspect(JAM.policy.p3) {
          v17232 = v22700.intersect(b$$327, this, v22701);
        }
      }
      var v11635 = v17232;
      if (v11635) {
        var v22702 = this._drop;
        introspect(JAM.policy.p3) {
          var v17233 = v22702.call(this, c$$269)
        }
        var v22703 = !v17233;
        if (v22703) {
          v17233 = d$$207;
        }
        d$$207 = v17233;
      }
      var v27174 = this.options;
      var v25358 = v27174.disabled;
      var v22704 = !v25358;
      if (v22704) {
        v22704 = this.visible;
      }
      var v17234 = v22704;
      if (v17234) {
        var v22705 = this.accept;
        var v25359 = this.element;
        var v22706 = v25359[0];
        var v25360 = b$$327.currentItem;
        var v27175 = !v25360;
        if (v27175) {
          v25360 = b$$327.element;
        }
        var v22707 = v25360;
        introspect(JAM.policy.p3) {
          v17234 = v22705.call(v22706, v22707);
        }
      }
      var v11636 = v17234;
      if (v11636) {
        this.isout = 1;
        this.isover = 0;
        var v22708 = this._deactivate;
        introspect(JAM.policy.p3) {
          v22708.call(this, c$$269);
        }
      }
      return;
    }
    var d$$207 = !1;
    var v27176 = a$$430.ui;
    var v25361 = v27176.ddmanager;
    var v22709 = v25361.droppables;
    var v25362 = b$$327.options;
    var v22710 = v25362.scope;
    var v17235 = v22709[v22710];
    var v22711 = !v17235;
    if (v22711) {
      v17235 = [];
    }
    var v11637 = v17235;
    introspect(JAM.policy.p3) {
      a$$430.each(v11637, v1227);
    }
    return d$$207;
  }
  function v1226(b$$326, c$$268) {
    var v22712 = a$$430.ui;
    var v17236 = v22712.ddmanager;
    var v11638 = v17236.droppables;
    var v17237 = b$$326.options;
    var v11639 = v17237.scope;
    var v4767 = v11638[v11639];
    var v11640 = !v4767;
    if (v11640) {
      v4767 = [];
    }
    var d$$206 = v4767;
    var v4768;
    if (c$$268) {
      v4768 = c$$268.type;
    } else {
      v4768 = null;
    }
    var e$$199 = v4768;
    var v17238 = b$$326.currentItem;
    var v22713 = !v17238;
    if (v22713) {
      v17238 = b$$326.element;
    }
    var v11641 = v17238;
    introspect(JAM.policy.p3) {
      var v4769 = v11641.find(":data(droppable)")
    }
    introspect(JAM.policy.p3) {
      var f$$71 = v4769.andSelf()
    }
    var h$$91 = 0;
    var v11642 = d$$206.length;
    var v4776 = h$$91 < v11642;
    g: for (;v4776;) {
      var v22714 = d$$206[h$$91];
      var v17239 = v22714.options;
      var v11643 = v17239.disabled;
      var v17241 = !v11643;
      if (v17241) {
        var v17240 = b$$326;
        if (v17240) {
          var v27177 = d$$206[h$$91];
          var v25363 = v27177.accept;
          var v28351 = d$$206[h$$91];
          var v27178 = v28351.element;
          var v25364 = v27178[0];
          var v27179 = b$$326.currentItem;
          var v28352 = !v27179;
          if (v28352) {
            v27179 = b$$326.element;
          }
          var v25365 = v27179;
          introspect(JAM.policy.p3) {
            var v22715 = v25363.call(v25364, v25365)
          }
          v17240 = !v22715;
        }
        v11643 = v17240;
      }
      var v4770 = v11643;
      if (v4770) {
        h$$91++;
        var v11644 = d$$206.length;
        v4776 = h$$91 < v11644;
        continue;
      }
      var i$$152 = 0;
      var v11645 = f$$71.length;
      var v4773 = i$$152 < v11645;
      for (;v4773;) {
        var v11646 = f$$71[i$$152];
        var v22716 = d$$206[h$$91];
        var v17242 = v22716.element;
        var v11647 = v17242[0];
        var v4772 = v11646 == v11647;
        if (v4772) {
          var v11648 = d$$206[h$$91];
          var v4771 = v11648.proportions;
          v4771.height = 0;
          i$$152++;
          var v11649 = f$$71.length;
          v4773 = i$$152 < v11649;
          h$$91++;
          var v11650 = d$$206.length;
          v4776 = h$$91 < v11650;
          continue g;
        }
        i$$152++;
        var v11651 = f$$71.length;
        v4773 = i$$152 < v11651;
      }
      var v4774 = d$$206[h$$91];
      var v22717 = d$$206[h$$91];
      var v17243 = v22717.element;
      introspect(JAM.policy.p3) {
        var v11652 = v17243.css("display")
      }
      v4774.visible = v11652 != "none";
      var v17244 = d$$206[h$$91];
      var v11653 = v17244.visible;
      var v4775 = !v11653;
      if (v4775) {
        h$$91++;
        var v11654 = d$$206.length;
        v4776 = h$$91 < v11654;
        continue;
      }
      var v17245 = e$$199 == "mousedown";
      if (v17245) {
        var v25366 = d$$206[h$$91];
        var v22718 = v25366._activate;
        var v22719 = d$$206[h$$91];
        introspect(JAM.policy.p3) {
          v22718.call(v22719, c$$268);
        }
      }
      var v17246 = d$$206[h$$91];
      var v25367 = d$$206[h$$91];
      var v22720 = v25367.element;
      introspect(JAM.policy.p3) {
        var v31096 = v22720.offset()
      }
      v17246.offset = v31096;
      var v11655 = d$$206[h$$91];
      var v27180 = d$$206[h$$91];
      var v25368 = v27180.element;
      var v22721 = v25368[0];
      var v17247 = v22721.offsetWidth;
      var v27181 = d$$206[h$$91];
      var v25369 = v27181.element;
      var v22722 = v25369[0];
      var v17248 = v22722.offsetHeight;
      v11655.proportions = {width:v17247, height:v17248};
      h$$91++;
      var v11656 = d$$206.length;
      v4776 = h$$91 < v11656;
    }
    return;
  }
  function v1225(b$$325, c$$267, d$$205) {
    var v11657 = c$$267.offset;
    var v4777 = !v11657;
    if (v4777) {
      return !1;
    }
    var v11658 = b$$325.positionAbs;
    var v17250 = !v11658;
    if (v17250) {
      var v17249 = b$$325.position;
      v11658 = v17249.absolute;
    }
    var v4778 = v11658;
    var e$$198 = v4778.left;
    var v11659 = b$$325.helperProportions;
    var v4779 = v11659.width;
    var f$$70 = e$$198 + v4779;
    var v11660 = b$$325.positionAbs;
    var v17252 = !v11660;
    if (v17252) {
      var v17251 = b$$325.position;
      v11660 = v17251.absolute;
    }
    var v4780 = v11660;
    var g$$111 = v4780.top;
    var v11661 = b$$325.helperProportions;
    var v4781 = v11661.height;
    var h$$90 = g$$111 + v4781;
    var v4782 = c$$267.offset;
    var i$$151 = v4782.left;
    var v11662 = c$$267.proportions;
    var v4783 = v11662.width;
    var j$$67 = i$$151 + v4783;
    var v4784 = c$$267.offset;
    var k$$44 = v4784.top;
    var v11663 = c$$267.proportions;
    var v4785 = v11663.height;
    var l$$55 = k$$44 + v4785;
    switch(d$$205) {
      case "fit":
        var v17253 = i$$151 <= e$$198;
        if (v17253) {
          v17253 = f$$70 <= j$$67;
        }
        var v11664 = v17253;
        if (v11664) {
          v11664 = k$$44 <= g$$111;
        }
        var v4786 = v11664;
        if (v4786) {
          v4786 = h$$90 <= l$$55;
        }
        return v4786;
      case "intersect":
        var v28353 = b$$325.helperProportions;
        var v27182 = v28353.width;
        var v25370 = v27182 / 2;
        var v22723 = e$$198 + v25370;
        var v17254 = i$$151 < v22723;
        if (v17254) {
          var v28354 = b$$325.helperProportions;
          var v27183 = v28354.width;
          var v25371 = v27183 / 2;
          var v22724 = f$$70 - v25371;
          v17254 = v22724 < j$$67;
        }
        var v11665 = v17254;
        if (v11665) {
          var v27184 = b$$325.helperProportions;
          var v25372 = v27184.height;
          var v22725 = v25372 / 2;
          var v17255 = g$$111 + v22725;
          v11665 = k$$44 < v17255;
        }
        var v4787 = v11665;
        if (v4787) {
          var v25373 = b$$325.helperProportions;
          var v22726 = v25373.height;
          var v17256 = v22726 / 2;
          var v11666 = h$$90 - v17256;
          v4787 = v11666 < l$$55;
        }
        return v4787;
      case "pointer":
        var v17257 = b$$325.positionAbs;
        var v22728 = !v17257;
        if (v22728) {
          var v22727 = b$$325.position;
          v17257 = v22727.absolute;
        }
        var v11667 = v17257;
        var v4788 = v11667.left;
        var v17258 = b$$325.clickOffset;
        var v22730 = !v17258;
        if (v22730) {
          var v22729 = b$$325.offset;
          v17258 = v22729.click;
        }
        var v11668 = v17258;
        var v4789 = v11668.left;
        var m$$29 = v4788 + v4789;
        var v17259 = b$$325.positionAbs;
        var v22732 = !v17259;
        if (v22732) {
          var v22731 = b$$325.position;
          v17259 = v22731.absolute;
        }
        var v11669 = v17259;
        var v4790 = v11669.top;
        var v17260 = b$$325.clickOffset;
        var v22734 = !v17260;
        if (v22734) {
          var v22733 = b$$325.offset;
          v17260 = v22733.click;
        }
        var v11670 = v17260;
        var v4791 = v11670.top;
        var n$$80 = v4790 + v4791;
        var v4792 = a$$430.ui;
        var v11671 = c$$267.proportions;
        var v4793 = v11671.height;
        var v11672 = c$$267.proportions;
        var v4794 = v11672.width;
        introspect(JAM.policy.p3) {
          var o$$17 = v4792.isOver(n$$80, m$$29, k$$44, i$$151, v4793, v4794)
        }
        return o$$17;
      case "touch":
        var v22735 = g$$111 >= k$$44;
        if (v22735) {
          v22735 = g$$111 <= l$$55;
        }
        var v17261 = v22735;
        var v22737 = !v17261;
        if (v22737) {
          var v22736 = h$$90 >= k$$44;
          if (v22736) {
            v22736 = h$$90 <= l$$55;
          }
          v17261 = v22736;
        }
        var v11673 = v17261;
        var v17263 = !v11673;
        if (v17263) {
          var v17262 = g$$111 < k$$44;
          if (v17262) {
            v17262 = h$$90 > l$$55;
          }
          v11673 = v17262;
        }
        var v4795 = v11673;
        if (v4795) {
          var v22738 = e$$198 >= i$$151;
          if (v22738) {
            v22738 = e$$198 <= j$$67;
          }
          var v17264 = v22738;
          var v22740 = !v17264;
          if (v22740) {
            var v22739 = f$$70 >= i$$151;
            if (v22739) {
              v22739 = f$$70 <= j$$67;
            }
            v17264 = v22739;
          }
          var v11674 = v17264;
          var v17266 = !v11674;
          if (v17266) {
            var v17265 = e$$198 < i$$151;
            if (v17265) {
              v17265 = f$$70 > j$$67;
            }
            v11674 = v17265;
          }
          v4795 = v11674;
        }
        return v4795;
      default:
        return !1;
    }
    return;
  }
  function v1224(a$$433) {
    var v11675 = a$$433.currentItem;
    var v17267 = !v11675;
    if (v17267) {
      v11675 = a$$433.element;
    }
    var v4796 = v11675;
    var v4797 = a$$433.helper;
    var v4798 = a$$433.position;
    var v4799 = a$$433.positionAbs;
    return {draggable:v4796, helper:v4797, position:v4798, offset:v4799};
  }
  function v1223(b$$323, c$$266) {
    function v1222() {
      introspect(JAM.policy.p3) {
        var b$$324 = a$$430.data(this, "droppable")
      }
      var v27185 = b$$324.options;
      var v25374 = v27185.greedy;
      if (v25374) {
        var v28355 = b$$324.options;
        var v27186 = v28355.disabled;
        v25374 = !v27186;
      }
      var v22741 = v25374;
      if (v22741) {
        var v27187 = b$$324.options;
        var v25375 = v27187.scope;
        var v27188 = d$$204.options;
        var v25376 = v27188.scope;
        v22741 = v25375 == v25376;
      }
      var v17268 = v22741;
      if (v17268) {
        var v22742 = b$$324.accept;
        var v25377 = b$$324.element;
        var v22743 = v25377[0];
        var v25378 = d$$204.currentItem;
        var v27189 = !v25378;
        if (v27189) {
          v25378 = d$$204.element;
        }
        var v22744 = v25378;
        introspect(JAM.policy.p3) {
          v17268 = v22742.call(v22743, v22744);
        }
      }
      var v11676 = v17268;
      if (v11676) {
        var v17269 = a$$430.ui;
        var v27190 = b$$324.element;
        introspect(JAM.policy.p3) {
          var v25379 = v27190.offset()
        }
        var v22745 = {offset:v25379};
        introspect(JAM.policy.p3) {
          var v17270 = a$$430.extend(b$$324, v22745)
        }
        var v22746 = b$$324.options;
        var v17271 = v22746.tolerance;
        introspect(JAM.policy.p3) {
          v11676 = v17269.intersect(d$$204, v17270, v17271);
        }
      }
      var v4800 = v11676;
      if (v4800) {
        e$$197 = !0;
        return !1;
      }
      return;
    }
    var v4801 = c$$266;
    var v11678 = !v4801;
    if (v11678) {
      var v17272 = a$$430.ui;
      var v11677 = v17272.ddmanager;
      v4801 = v11677.current;
    }
    var d$$204 = v4801;
    var v11679 = !d$$204;
    var v17275 = !v11679;
    if (v17275) {
      var v25380 = d$$204.currentItem;
      var v27191 = !v25380;
      if (v27191) {
        v25380 = d$$204.element;
      }
      var v22747 = v25380;
      var v17273 = v22747[0];
      var v22748 = this.element;
      var v17274 = v22748[0];
      v11679 = v17273 == v17274;
    }
    var v4802 = v11679;
    if (v4802) {
      return !1;
    }
    var e$$197 = !1;
    var v22749 = this.element;
    introspect(JAM.policy.p3) {
      var v17276 = v22749.find(":data(droppable)")
    }
    introspect(JAM.policy.p3) {
      var v11680 = v17276.not(".ui-draggable-dragging")
    }
    introspect(JAM.policy.p3) {
      v11680.each(v1222);
    }
    var v11681;
    if (e$$197) {
      v11681 = !1;
    } else {
      var v17277;
      var v25381 = this.accept;
      var v27192 = this.element;
      var v25382 = v27192[0];
      var v27193 = d$$204.currentItem;
      var v28356 = !v27193;
      if (v28356) {
        v27193 = d$$204.element;
      }
      var v25383 = v27193;
      introspect(JAM.policy.p3) {
        var v22750 = v25381.call(v25382, v25383)
      }
      if (v22750) {
        var v29102 = this.options;
        var v28357 = v29102.activeClass;
        if (v28357) {
          var v29103 = this.element;
          var v29591 = this.options;
          var v29104 = v29591.activeClass;
          introspect(JAM.policy.p3) {
            v29103.removeClass(v29104);
          }
        }
        var v29105 = this.options;
        var v28358 = v29105.hoverClass;
        if (v28358) {
          var v29106 = this.element;
          var v29592 = this.options;
          var v29107 = v29592.hoverClass;
          introspect(JAM.policy.p3) {
            v29106.removeClass(v29107);
          }
        }
        introspect(JAM.policy.p3) {
          var v27194 = this.ui(d$$204)
        }
        introspect(JAM.policy.p3) {
          this._trigger("drop", b$$323, v27194);
        }
        v17277 = this.element;
      } else {
        v17277 = !1;
      }
      v11681 = v17277;
    }
    return v11681;
  }
  function v1221(b$$322) {
    var v11682 = a$$430.ui;
    var v4803 = v11682.ddmanager;
    var c$$265 = v4803.current;
    var v11683 = !c$$265;
    var v17280 = !v11683;
    if (v17280) {
      var v25384 = c$$265.currentItem;
      var v27195 = !v25384;
      if (v27195) {
        v25384 = c$$265.element;
      }
      var v22751 = v25384;
      var v17278 = v22751[0];
      var v22752 = this.element;
      var v17279 = v22752[0];
      v11683 = v17278 == v17279;
    }
    var v4804 = v11683;
    if (v4804) {
      return;
    }
    var v11684 = this.accept;
    var v17281 = this.element;
    var v11685 = v17281[0];
    var v17282 = c$$265.currentItem;
    var v22753 = !v17282;
    if (v22753) {
      v17282 = c$$265.element;
    }
    var v11686 = v17282;
    introspect(JAM.policy.p3) {
      var v4805 = v11684.call(v11685, v11686)
    }
    if (v4805) {
      var v22754 = this.options;
      var v17283 = v22754.hoverClass;
      if (v17283) {
        var v22755 = this.element;
        var v25385 = this.options;
        var v22756 = v25385.hoverClass;
        introspect(JAM.policy.p3) {
          v22755.removeClass(v22756);
        }
      }
      introspect(JAM.policy.p3) {
        var v17284 = this.ui(c$$265)
      }
      introspect(JAM.policy.p3) {
        this._trigger("out", b$$322, v17284);
      }
    }
    return;
  }
  function v1220(b$$321) {
    var v11687 = a$$430.ui;
    var v4806 = v11687.ddmanager;
    var c$$264 = v4806.current;
    var v11688 = !c$$264;
    var v17287 = !v11688;
    if (v17287) {
      var v25386 = c$$264.currentItem;
      var v27196 = !v25386;
      if (v27196) {
        v25386 = c$$264.element;
      }
      var v22757 = v25386;
      var v17285 = v22757[0];
      var v22758 = this.element;
      var v17286 = v22758[0];
      v11688 = v17285 == v17286;
    }
    var v4807 = v11688;
    if (v4807) {
      return;
    }
    var v11689 = this.accept;
    var v17288 = this.element;
    var v11690 = v17288[0];
    var v17289 = c$$264.currentItem;
    var v22759 = !v17289;
    if (v22759) {
      v17289 = c$$264.element;
    }
    var v11691 = v17289;
    introspect(JAM.policy.p3) {
      var v4808 = v11689.call(v11690, v11691)
    }
    if (v4808) {
      var v22760 = this.options;
      var v17290 = v22760.hoverClass;
      if (v17290) {
        var v22761 = this.element;
        var v25387 = this.options;
        var v22762 = v25387.hoverClass;
        introspect(JAM.policy.p3) {
          v22761.addClass(v22762);
        }
      }
      introspect(JAM.policy.p3) {
        var v17291 = this.ui(c$$264)
      }
      introspect(JAM.policy.p3) {
        this._trigger("over", b$$321, v17291);
      }
    }
    return;
  }
  function v1219(b$$320) {
    var v11692 = a$$430.ui;
    var v4809 = v11692.ddmanager;
    var c$$263 = v4809.current;
    var v17292 = this.options;
    var v11693 = v17292.activeClass;
    if (v11693) {
      var v17293 = this.element;
      var v22763 = this.options;
      var v17294 = v22763.activeClass;
      introspect(JAM.policy.p3) {
        v17293.removeClass(v17294);
      }
    }
    if (c$$263) {
      introspect(JAM.policy.p3) {
        var v17295 = this.ui(c$$263)
      }
      introspect(JAM.policy.p3) {
        this._trigger("deactivate", b$$320, v17295);
      }
    }
    return;
  }
  function v1218(b$$319) {
    var v11694 = a$$430.ui;
    var v4810 = v11694.ddmanager;
    var c$$262 = v4810.current;
    var v17296 = this.options;
    var v11695 = v17296.activeClass;
    if (v11695) {
      var v17297 = this.element;
      var v22764 = this.options;
      var v17298 = v22764.activeClass;
      introspect(JAM.policy.p3) {
        v17297.addClass(v17298);
      }
    }
    if (c$$262) {
      introspect(JAM.policy.p3) {
        var v17299 = this.ui(c$$262)
      }
      introspect(JAM.policy.p3) {
        this._trigger("activate", b$$319, v17299);
      }
    }
    return;
  }
  function v1217(b$$318, c$$261) {
    function v1216(a$$432) {
      introspect(JAM.policy.p3) {
        return a$$432.is(c$$261);
      }
    }
    var v11696 = b$$318 == "accept";
    if (v11696) {
      var v17300;
      introspect(JAM.policy.p3) {
        var v22765 = a$$430.isFunction(c$$261)
      }
      if (v22765) {
        v17300 = c$$261;
      } else {
        v17300 = v1216;
      }
      this.accept = v17300;
    }
    var v22766 = a$$430.Widget;
    var v17301 = v22766.prototype;
    var v11697 = v17301._setOption;
    introspect(JAM.policy.p3) {
      v11697.apply(this, arguments);
    }
    return;
  }
  function v1215() {
    var v17302 = a$$430.ui;
    var v11698 = v17302.ddmanager;
    var v4811 = v11698.droppables;
    var v11699 = this.options;
    var v4812 = v11699.scope;
    var b$$317 = v4811[v4812];
    var c$$260 = 0;
    var v11700 = b$$317.length;
    var v4814 = c$$260 < v11700;
    for (;v4814;) {
      var v11701 = b$$317[c$$260];
      var v4813 = v11701 == this;
      if (v4813) {
        introspect(JAM.policy.p3) {
          b$$317.splice(c$$260, 1);
        }
      }
      c$$260++;
      var v11702 = b$$317.length;
      v4814 = c$$260 < v11702;
    }
    var v22767 = this.element;
    introspect(JAM.policy.p3) {
      var v17303 = v22767.removeClass("ui-droppable ui-droppable-disabled")
    }
    introspect(JAM.policy.p3) {
      var v11703 = v17303.removeData("droppable")
    }
    introspect(JAM.policy.p3) {
      v11703.unbind(".droppable");
    }
    return this;
  }
  function v1214() {
    function v1213(a$$431) {
      introspect(JAM.policy.p3) {
        return a$$431.is(c$$259);
      }
    }
    var b$$316 = this.options;
    var c$$259 = b$$316.accept;
    this.isover = 0;
    this.isout = 1;
    var v27197;
    introspect(JAM.policy.p3) {
      var v28359 = a$$430.isFunction(c$$259)
    }
    if (v28359) {
      v27197 = c$$259;
    } else {
      v27197 = v1213;
    }
    this.accept = v27197;
    var v28360 = this.element;
    var v27198 = v28360[0];
    var v25388 = v27198.offsetWidth;
    var v28361 = this.element;
    var v27199 = v28361[0];
    var v25389 = v27199.offsetHeight;
    this.proportions = {width:v25388, height:v25389};
    var v27200 = a$$430.ui;
    var v25390 = v27200.ddmanager;
    var v22768 = v25390.droppables;
    var v22769 = b$$316.scope;
    var v29108 = a$$430.ui;
    var v28362 = v29108.ddmanager;
    var v27201 = v28362.droppables;
    var v27202 = b$$316.scope;
    var v25391 = v27201[v27202];
    var v27203 = !v25391;
    if (v27203) {
      v25391 = [];
    }
    introspect(JAM.policy.p2) {
      v22768[v22769] = v25391;
    }
    var v27204 = a$$430.ui;
    var v25392 = v27204.ddmanager;
    var v22770 = v25392.droppables;
    var v22771 = b$$316.scope;
    var v17304 = v22770[v22771];
    introspect(JAM.policy.p3) {
      v17304.push(this);
    }
    var v11704 = b$$316.addClasses;
    if (v11704) {
      var v17305 = this.element;
      introspect(JAM.policy.p3) {
        v17305.addClass("ui-droppable");
      }
    }
    return;
  }
  var v27205 = !1;
  var v27206 = !0;
  var v27207 = !1;
  var v27208 = !1;
  var v25393 = {accept:"*", activeClass:v27205, addClasses:v27206, greedy:v27207, hoverClass:v27208, scope:"default", tolerance:"intersect"};
  var v22772 = {widgetEventPrefix:"drop", options:v25393, _create:v1214, destroy:v1215, _setOption:v1217, _activate:v1218, _deactivate:v1219, _over:v1220, _out:v1221, _drop:v1223, ui:v1224};
  introspect(JAM.policy.p3) {
    a$$430.widget("ui.droppable", v22772);
  }
  var v25394 = a$$430.ui;
  var v22773 = v25394.droppable;
  var v22774 = {version:"1.8.24"};
  introspect(JAM.policy.p3) {
    a$$430.extend(v22773, v22774);
  }
  var v17306 = a$$430.ui;
  v17306.intersect = v1225;
  var v11705 = a$$430.ui;
  var v17307 = {"default":[]};
  v11705.ddmanager = {current:null, droppables:v17307, prepareOffsets:v1226, drop:v1228, dragStart:v1230, drag:v1233, dragStop:v1234};
  return;
}
function v1212(a$$426, b$$284) {
  function v1211(b$$314, c$$258) {
    introspect(JAM.policy.p3) {
      var v11706 = a$$426(this)
    }
    introspect(JAM.policy.p3) {
      var v4815 = v11706.data("draggable")
    }
    var d$$203 = v4815.options;
    var v4816 = d$$203._zIndex;
    if (v4816) {
      var v17308 = c$$258.helper;
      introspect(JAM.policy.p3) {
        var v11707 = a$$426(v17308)
      }
      var v11708 = d$$203._zIndex;
      introspect(JAM.policy.p3) {
        v11707.css("zIndex", v11708);
      }
    }
    return;
  }
  function v1210(b$$313, c$$257) {
    var v4817 = c$$257.helper;
    introspect(JAM.policy.p3) {
      var d$$202 = a$$426(v4817)
    }
    introspect(JAM.policy.p3) {
      var v11709 = a$$426(this)
    }
    introspect(JAM.policy.p3) {
      var v4818 = v11709.data("draggable")
    }
    var e$$196 = v4818.options;
    introspect(JAM.policy.p3) {
      var v11710 = d$$202.css("zIndex")
    }
    if (v11710) {
      introspect(JAM.policy.p3) {
        var v31097 = d$$202.css("zIndex")
      }
      e$$196._zIndex = v31097;
    }
    var v11711 = e$$196.zIndex;
    introspect(JAM.policy.p3) {
      d$$202.css("zIndex", v11711);
    }
    return;
  }
  function v1209(b$$311, c$$255) {
    function v1208(a$$429) {
      var v4819 = this.style;
      v4819.zIndex = f$$69 + a$$429;
      return;
    }
    function v1207(b$$312, c$$256) {
      introspect(JAM.policy.p3) {
        var v22775 = a$$426(b$$312)
      }
      introspect(JAM.policy.p3) {
        var v17309 = v22775.css("zIndex")
      }
      var v11712 = parseInt(v17309, 10);
      var v17310 = !v11712;
      if (v17310) {
        v11712 = 0;
      }
      var v4820 = v11712;
      introspect(JAM.policy.p3) {
        var v22776 = a$$426(c$$256)
      }
      introspect(JAM.policy.p3) {
        var v17311 = v22776.css("zIndex")
      }
      var v11713 = parseInt(v17311, 10);
      var v17312 = !v11713;
      if (v17312) {
        v11713 = 0;
      }
      var v4821 = v11713;
      return v4820 - v4821;
    }
    introspect(JAM.policy.p3) {
      var v11714 = a$$426(this)
    }
    introspect(JAM.policy.p3) {
      var v4822 = v11714.data("draggable")
    }
    var d$$201 = v4822.options;
    var v17313 = d$$201.stack;
    introspect(JAM.policy.p3) {
      var v11715 = a$$426(v17313)
    }
    introspect(JAM.policy.p3) {
      var v4823 = a$$426.makeArray(v11715)
    }
    introspect(JAM.policy.p3) {
      var e$$195 = v4823.sort(v1207)
    }
    var v11716 = e$$195.length;
    var v4824 = !v11716;
    if (v4824) {
      return;
    }
    var v22777 = e$$195[0];
    var v17314 = v22777.style;
    var v11717 = v17314.zIndex;
    var v4825 = parseInt(v11717);
    var v11718 = !v4825;
    if (v11718) {
      v4825 = 0;
    }
    var f$$69 = v4825;
    introspect(JAM.policy.p3) {
      var v11719 = a$$426(e$$195)
    }
    introspect(JAM.policy.p3) {
      v11719.each(v1208);
    }
    var v17315 = this[0];
    var v11720 = v17315.style;
    var v17316 = e$$195.length;
    v11720.zIndex = f$$69 + v17316;
    return;
  }
  function v1206(b$$310, c$$254) {
    introspect(JAM.policy.p3) {
      var v4826 = a$$426(this)
    }
    introspect(JAM.policy.p3) {
      var d$$200 = v4826.data("draggable")
    }
    var e$$194 = d$$200.options;
    var f$$68 = e$$194.snapTolerance;
    var v4827 = c$$254.offset;
    var g$$110 = v4827.left;
    var v11721 = d$$200.helperProportions;
    var v4828 = v11721.width;
    var h$$89 = g$$110 + v4828;
    var v4829 = c$$254.offset;
    var i$$150 = v4829.top;
    var v11722 = d$$200.helperProportions;
    var v4830 = v11722.height;
    var j$$66 = i$$150 + v4830;
    var v11723 = d$$200.snapElements;
    var v4831 = v11723.length;
    var k$$43 = v4831 - 1;
    var v4848 = k$$43 >= 0;
    for (;v4848;) {
      var v11724 = d$$200.snapElements;
      var v4832 = v11724[k$$43];
      var l$$54 = v4832.left;
      var v17317 = d$$200.snapElements;
      var v11725 = v17317[k$$43];
      var v4833 = v11725.width;
      var m$$28 = l$$54 + v4833;
      var v11726 = d$$200.snapElements;
      var v4834 = v11726[k$$43];
      var n$$79 = v4834.top;
      var v17318 = d$$200.snapElements;
      var v11727 = v17318[k$$43];
      var v4835 = v11727.height;
      var o$$16 = n$$79 + v4835;
      var v29593 = l$$54 - f$$68;
      var v29109 = v29593 < g$$110;
      if (v29109) {
        var v29594 = m$$28 + f$$68;
        v29109 = g$$110 < v29594;
      }
      var v28363 = v29109;
      if (v28363) {
        var v29110 = n$$79 - f$$68;
        v28363 = v29110 < i$$150;
      }
      var v27209 = v28363;
      if (v27209) {
        var v28364 = o$$16 + f$$68;
        v27209 = i$$150 < v28364;
      }
      var v25395 = v27209;
      var v27211 = !v25395;
      if (v27211) {
        var v29595 = l$$54 - f$$68;
        var v29111 = v29595 < g$$110;
        if (v29111) {
          var v29596 = m$$28 + f$$68;
          v29111 = g$$110 < v29596;
        }
        var v28365 = v29111;
        if (v28365) {
          var v29112 = n$$79 - f$$68;
          v28365 = v29112 < j$$66;
        }
        var v27210 = v28365;
        if (v27210) {
          var v28366 = o$$16 + f$$68;
          v27210 = j$$66 < v28366;
        }
        v25395 = v27210;
      }
      var v22778 = v25395;
      var v25397 = !v22778;
      if (v25397) {
        var v29113 = l$$54 - f$$68;
        var v28367 = v29113 < h$$89;
        if (v28367) {
          var v29114 = m$$28 + f$$68;
          v28367 = h$$89 < v29114;
        }
        var v27212 = v28367;
        if (v27212) {
          var v28368 = n$$79 - f$$68;
          v27212 = v28368 < i$$150;
        }
        var v25396 = v27212;
        if (v25396) {
          var v27213 = o$$16 + f$$68;
          v25396 = i$$150 < v27213;
        }
        v22778 = v25396;
      }
      var v17319 = v22778;
      var v22780 = !v17319;
      if (v22780) {
        var v28369 = l$$54 - f$$68;
        var v27214 = v28369 < h$$89;
        if (v27214) {
          var v28370 = m$$28 + f$$68;
          v27214 = h$$89 < v28370;
        }
        var v25398 = v27214;
        if (v25398) {
          var v27215 = n$$79 - f$$68;
          v25398 = v27215 < j$$66;
        }
        var v22779 = v25398;
        if (v22779) {
          var v25399 = o$$16 + f$$68;
          v22779 = j$$66 < v25399;
        }
        v17319 = v22779;
      }
      var v11728 = v17319;
      var v4836 = !v11728;
      if (v4836) {
        var v25400 = d$$200.snapElements;
        var v22781 = v25400[k$$43];
        var v17320 = v22781.snapping;
        if (v17320) {
          var v25401 = d$$200.options;
          var v22782 = v25401.snap;
          v17320 = v22782.release;
        }
        var v11729 = v17320;
        if (v11729) {
          var v25402 = d$$200.options;
          var v22783 = v25402.snap;
          var v17321 = v22783.release;
          var v17322 = d$$200.element;
          introspect(JAM.policy.p3) {
            var v22784 = d$$200._uiHash()
          }
          var v28371 = d$$200.snapElements;
          var v27216 = v28371[k$$43];
          var v25403 = v27216.item;
          var v22785 = {snapItem:v25403};
          introspect(JAM.policy.p3) {
            var v17323 = a$$426.extend(v22784, v22785)
          }
          introspect(JAM.policy.p3) {
            v17321.call(v17322, b$$310, v17323);
          }
        }
        var v17324 = d$$200.snapElements;
        var v11730 = v17324[k$$43];
        v11730.snapping = !1;
        k$$43--;
        v4848 = k$$43 >= 0;
        continue;
      }
      var v11731 = e$$194.snapMode;
      var v4841 = v11731 != "inner";
      if (v4841) {
        var v11732 = n$$79 - j$$66;
        introspect(JAM.policy.p3) {
          var v4837 = Math.abs(v11732)
        }
        var p$$38 = v4837 <= f$$68;
        var v11733 = o$$16 - i$$150;
        introspect(JAM.policy.p3) {
          var v4838 = Math.abs(v11733)
        }
        var q$$15 = v4838 <= f$$68;
        var v11734 = l$$54 - h$$89;
        introspect(JAM.policy.p3) {
          var v4839 = Math.abs(v11734)
        }
        var r$$17 = v4839 <= f$$68;
        var v11735 = m$$28 - g$$110;
        introspect(JAM.policy.p3) {
          var v4840 = Math.abs(v11735)
        }
        var s$$26 = v4840 <= f$$68;
        if (p$$38) {
          var v25404 = c$$254.position;
          var v30143 = d$$200.helperProportions;
          var v29895 = v30143.height;
          var v29597 = n$$79 - v29895;
          var v29115 = {top:v29597, left:0};
          introspect(JAM.policy.p3) {
            var v28372 = d$$200._convertPositionTo("relative", v29115)
          }
          var v27217 = v28372.top;
          var v28373 = d$$200.margins;
          var v27218 = v28373.top;
          v25404.top = v27217 - v27218;
        }
        if (q$$15) {
          var v25405 = c$$254.position;
          var v29116 = {top:o$$16, left:0};
          introspect(JAM.policy.p3) {
            var v28374 = d$$200._convertPositionTo("relative", v29116)
          }
          var v27219 = v28374.top;
          var v28375 = d$$200.margins;
          var v27220 = v28375.top;
          v25405.top = v27219 - v27220;
        }
        if (r$$17) {
          var v22786 = c$$254.position;
          var v29896 = d$$200.helperProportions;
          var v29598 = v29896.width;
          var v29117 = l$$54 - v29598;
          var v28376 = {top:0, left:v29117};
          introspect(JAM.policy.p3) {
            var v27221 = d$$200._convertPositionTo("relative", v28376)
          }
          var v25406 = v27221.left;
          var v27222 = d$$200.margins;
          var v25407 = v27222.left;
          v22786.left = v25406 - v25407;
        }
        if (s$$26) {
          var v17325 = c$$254.position;
          var v27223 = {top:0, left:m$$28};
          introspect(JAM.policy.p3) {
            var v25408 = d$$200._convertPositionTo("relative", v27223)
          }
          var v22787 = v25408.left;
          var v25409 = d$$200.margins;
          var v22788 = v25409.left;
          v17325.left = v22787 - v22788;
        }
      }
      var v11736 = p$$38 || q$$15;
      var v17326 = !v11736;
      if (v17326) {
        v11736 = r$$17;
      }
      var v4842 = v11736;
      var v11737 = !v4842;
      if (v11737) {
        v4842 = s$$26;
      }
      var t$$11 = v4842;
      var v11738 = e$$194.snapMode;
      var v4847 = v11738 != "outer";
      if (v4847) {
        var v11739 = n$$79 - i$$150;
        introspect(JAM.policy.p3) {
          var v4843 = Math.abs(v11739)
        }
        p$$38 = v4843 <= f$$68;
        var v11740 = o$$16 - j$$66;
        introspect(JAM.policy.p3) {
          var v4844 = Math.abs(v11740)
        }
        q$$15 = v4844 <= f$$68;
        var v11741 = l$$54 - g$$110;
        introspect(JAM.policy.p3) {
          var v4845 = Math.abs(v11741)
        }
        r$$17 = v4845 <= f$$68;
        var v11742 = m$$28 - h$$89;
        introspect(JAM.policy.p3) {
          var v4846 = Math.abs(v11742)
        }
        s$$26 = v4846 <= f$$68;
        if (p$$38) {
          var v25410 = c$$254.position;
          var v29118 = {top:n$$79, left:0};
          introspect(JAM.policy.p3) {
            var v28377 = d$$200._convertPositionTo("relative", v29118)
          }
          var v27224 = v28377.top;
          var v28378 = d$$200.margins;
          var v27225 = v28378.top;
          v25410.top = v27224 - v27225;
        }
        if (q$$15) {
          var v25411 = c$$254.position;
          var v30144 = d$$200.helperProportions;
          var v29897 = v30144.height;
          var v29599 = o$$16 - v29897;
          var v29119 = {top:v29599, left:0};
          introspect(JAM.policy.p3) {
            var v28379 = d$$200._convertPositionTo("relative", v29119)
          }
          var v27226 = v28379.top;
          var v28380 = d$$200.margins;
          var v27227 = v28380.top;
          v25411.top = v27226 - v27227;
        }
        if (r$$17) {
          var v22789 = c$$254.position;
          var v28381 = {top:0, left:l$$54};
          introspect(JAM.policy.p3) {
            var v27228 = d$$200._convertPositionTo("relative", v28381)
          }
          var v25412 = v27228.left;
          var v27229 = d$$200.margins;
          var v25413 = v27229.left;
          v22789.left = v25412 - v25413;
        }
        if (s$$26) {
          var v17327 = c$$254.position;
          var v29600 = d$$200.helperProportions;
          var v29120 = v29600.width;
          var v28382 = m$$28 - v29120;
          var v27230 = {top:0, left:v28382};
          introspect(JAM.policy.p3) {
            var v25414 = d$$200._convertPositionTo("relative", v27230)
          }
          var v22790 = v25414.left;
          var v25415 = d$$200.margins;
          var v22791 = v25415.left;
          v17327.left = v22790 - v22791;
        }
      }
      var v28383 = d$$200.snapElements;
      var v27231 = v28383[k$$43];
      var v25416 = v27231.snapping;
      var v22792 = !v25416;
      if (v22792) {
        var v28384 = p$$38 || q$$15;
        var v29121 = !v28384;
        if (v29121) {
          v28384 = r$$17;
        }
        var v27232 = v28384;
        var v28385 = !v27232;
        if (v28385) {
          v27232 = s$$26;
        }
        var v25417 = v27232;
        var v27233 = !v25417;
        if (v27233) {
          v25417 = t$$11;
        }
        v22792 = v25417;
      }
      var v17328 = v22792;
      if (v17328) {
        var v25418 = d$$200.options;
        var v22793 = v25418.snap;
        v17328 = v22793.snap;
      }
      var v11743 = v17328;
      if (v11743) {
        var v25419 = d$$200.options;
        var v22794 = v25419.snap;
        var v17329 = v22794.snap;
        var v17330 = d$$200.element;
        introspect(JAM.policy.p3) {
          var v22795 = d$$200._uiHash()
        }
        var v28386 = d$$200.snapElements;
        var v27234 = v28386[k$$43];
        var v25420 = v27234.item;
        var v22796 = {snapItem:v25420};
        introspect(JAM.policy.p3) {
          var v17331 = a$$426.extend(v22795, v22796)
        }
        introspect(JAM.policy.p3) {
          v17329.call(v17330, b$$310, v17331);
        }
      }
      var v17332 = d$$200.snapElements;
      var v11744 = v17332[k$$43];
      var v25421 = p$$38 || q$$15;
      var v27235 = !v25421;
      if (v27235) {
        v25421 = r$$17;
      }
      var v22797 = v25421;
      var v25422 = !v22797;
      if (v25422) {
        v22797 = s$$26;
      }
      var v17333 = v22797;
      var v22798 = !v17333;
      if (v22798) {
        v17333 = t$$11;
      }
      v11744.snapping = v17333;
      k$$43--;
      v4848 = k$$43 >= 0;
    }
    return;
  }
  function v1205(b$$308, c$$252) {
    function v1204() {
      introspect(JAM.policy.p3) {
        var b$$309 = a$$426(this)
      }
      introspect(JAM.policy.p3) {
        var c$$253 = b$$309.offset()
      }
      var v17334 = d$$199.element;
      var v11745 = v17334[0];
      var v4849 = this != v11745;
      if (v4849) {
        var v11746 = d$$199.snapElements;
        introspect(JAM.policy.p3) {
          var v17335 = b$$309.outerWidth()
        }
        introspect(JAM.policy.p3) {
          var v17336 = b$$309.outerHeight()
        }
        var v17337 = c$$253.top;
        var v17338 = c$$253.left;
        var v11747 = {item:this, width:v17335, height:v17336, top:v17337, left:v17338};
        introspect(JAM.policy.p3) {
          v11746.push(v11747);
        }
      }
      return;
    }
    introspect(JAM.policy.p3) {
      var v4850 = a$$426(this)
    }
    introspect(JAM.policy.p3) {
      var d$$199 = v4850.data("draggable")
    }
    var e$$193 = d$$199.options;
    d$$199.snapElements = [];
    var v22799;
    var v28387 = e$$193.snap;
    var v27236 = v28387.constructor;
    var v25424 = v27236 != String;
    if (v25424) {
      var v27237 = e$$193.snap;
      var v25423 = v27237.items;
      var v27238 = !v25423;
      if (v27238) {
        v25423 = ":data(draggable)";
      }
      v22799 = v25423;
    } else {
      v22799 = e$$193.snap;
    }
    var v17339 = v22799;
    introspect(JAM.policy.p3) {
      var v11748 = a$$426(v17339)
    }
    introspect(JAM.policy.p3) {
      v11748.each(v1204);
    }
    return;
  }
  function v1203(b$$307, c$$251) {
    introspect(JAM.policy.p3) {
      var v4851 = a$$426(this)
    }
    introspect(JAM.policy.p3) {
      var d$$198 = v4851.data("draggable")
    }
    var e$$192 = d$$198.options;
    var f$$67 = !1;
    var v22800 = d$$198.scrollParent;
    var v17340 = v22800[0];
    var v11749 = v17340 != document;
    if (v11749) {
      var v25425 = d$$198.scrollParent;
      var v22801 = v25425[0];
      var v17341 = v22801.tagName;
      v11749 = v17341 != "HTML";
    }
    var v4860 = v11749;
    if (v4860) {
      var v17342 = e$$192.axis;
      var v11750 = !v17342;
      var v17344 = !v11750;
      if (v17344) {
        var v17343 = e$$192.axis;
        v11750 = v17343 != "x";
      }
      var v4853 = v11750;
      if (v4853) {
        var v4852;
        var v27239 = d$$198.overflowOffset;
        var v25426 = v27239.top;
        var v28388 = d$$198.scrollParent;
        var v27240 = v28388[0];
        var v25427 = v27240.offsetHeight;
        var v22802 = v25426 + v25427;
        var v22803 = b$$307.pageY;
        var v17345 = v22802 - v22803;
        var v17346 = e$$192.scrollSensitivity;
        var v11753 = v17345 < v17346;
        if (v11753) {
          var v17347 = d$$198.scrollParent;
          var v11751 = v17347[0];
          var v25428 = d$$198.scrollParent;
          var v22804 = v25428[0];
          var v17348 = v22804.scrollTop;
          var v17349 = e$$192.scrollSpeed;
          v4852 = v11751.scrollTop = f$$67 = v17348 + v17349;
        } else {
          var v22805 = b$$307.pageY;
          var v25429 = d$$198.overflowOffset;
          var v22806 = v25429.top;
          var v17350 = v22805 - v22806;
          var v17351 = e$$192.scrollSensitivity;
          var v11752 = v17350 < v17351;
          if (v11752) {
            var v22807 = d$$198.scrollParent;
            var v17352 = v22807[0];
            var v27241 = d$$198.scrollParent;
            var v25430 = v27241[0];
            var v22808 = v25430.scrollTop;
            var v22809 = e$$192.scrollSpeed;
            v11752 = v17352.scrollTop = f$$67 = v22808 - v22809;
          }
          v4852 = v11752;
        }
        v4852;
      }
      var v17353 = e$$192.axis;
      var v11754 = !v17353;
      var v17355 = !v11754;
      if (v17355) {
        var v17354 = e$$192.axis;
        v11754 = v17354 != "y";
      }
      var v4855 = v11754;
      if (v4855) {
        var v4854;
        var v27242 = d$$198.overflowOffset;
        var v25431 = v27242.left;
        var v28389 = d$$198.scrollParent;
        var v27243 = v28389[0];
        var v25432 = v27243.offsetWidth;
        var v22810 = v25431 + v25432;
        var v22811 = b$$307.pageX;
        var v17356 = v22810 - v22811;
        var v17357 = e$$192.scrollSensitivity;
        var v11757 = v17356 < v17357;
        if (v11757) {
          var v17358 = d$$198.scrollParent;
          var v11755 = v17358[0];
          var v25433 = d$$198.scrollParent;
          var v22812 = v25433[0];
          var v17359 = v22812.scrollLeft;
          var v17360 = e$$192.scrollSpeed;
          v4854 = v11755.scrollLeft = f$$67 = v17359 + v17360;
        } else {
          var v22813 = b$$307.pageX;
          var v25434 = d$$198.overflowOffset;
          var v22814 = v25434.left;
          var v17361 = v22813 - v22814;
          var v17362 = e$$192.scrollSensitivity;
          var v11756 = v17361 < v17362;
          if (v11756) {
            var v22815 = d$$198.scrollParent;
            var v17363 = v22815[0];
            var v27244 = d$$198.scrollParent;
            var v25435 = v27244[0];
            var v22816 = v25435.scrollLeft;
            var v22817 = e$$192.scrollSpeed;
            v11756 = v17363.scrollLeft = f$$67 = v22816 - v22817;
          }
          v4854 = v11756;
        }
        v4854;
      }
    } else {
      var v17364 = e$$192.axis;
      var v11758 = !v17364;
      var v17366 = !v11758;
      if (v17366) {
        var v17365 = e$$192.axis;
        v11758 = v17365 != "x";
      }
      var v4857 = v11758;
      if (v4857) {
        var v4856;
        var v22818 = b$$307.pageY;
        introspect(JAM.policy.p3) {
          var v25436 = a$$426(document)
        }
        introspect(JAM.policy.p3) {
          var v22819 = v25436.scrollTop()
        }
        var v17367 = v22818 - v22819;
        var v17368 = e$$192.scrollSensitivity;
        var v11762 = v17367 < v17368;
        if (v11762) {
          introspect(JAM.policy.p3) {
            var v11759 = a$$426(document)
          }
          introspect(JAM.policy.p3) {
            var v22820 = a$$426(document)
          }
          introspect(JAM.policy.p3) {
            var v17369 = v22820.scrollTop()
          }
          var v17370 = e$$192.scrollSpeed;
          var v11760 = v17369 - v17370;
          introspect(JAM.policy.p3) {
            v4856 = f$$67 = v11759.scrollTop(v11760);
          }
        } else {
          introspect(JAM.policy.p3) {
            var v25437 = a$$426(window)
          }
          introspect(JAM.policy.p3) {
            var v22821 = v25437.height()
          }
          var v25438 = b$$307.pageY;
          introspect(JAM.policy.p3) {
            var v27245 = a$$426(document)
          }
          introspect(JAM.policy.p3) {
            var v25439 = v27245.scrollTop()
          }
          var v22822 = v25438 - v25439;
          var v17371 = v22821 - v22822;
          var v17372 = e$$192.scrollSensitivity;
          var v11761 = v17371 < v17372;
          if (v11761) {
            introspect(JAM.policy.p3) {
              var v17373 = a$$426(document)
            }
            introspect(JAM.policy.p3) {
              var v25440 = a$$426(document)
            }
            introspect(JAM.policy.p3) {
              var v22823 = v25440.scrollTop()
            }
            var v22824 = e$$192.scrollSpeed;
            var v17374 = v22823 + v22824;
            introspect(JAM.policy.p3) {
              v11761 = f$$67 = v17373.scrollTop(v17374);
            }
          }
          v4856 = v11761;
        }
        v4856;
      }
      var v17375 = e$$192.axis;
      var v11763 = !v17375;
      var v17377 = !v11763;
      if (v17377) {
        var v17376 = e$$192.axis;
        v11763 = v17376 != "y";
      }
      var v4859 = v11763;
      if (v4859) {
        var v4858;
        var v22825 = b$$307.pageX;
        introspect(JAM.policy.p3) {
          var v25441 = a$$426(document)
        }
        introspect(JAM.policy.p3) {
          var v22826 = v25441.scrollLeft()
        }
        var v17378 = v22825 - v22826;
        var v17379 = e$$192.scrollSensitivity;
        var v11767 = v17378 < v17379;
        if (v11767) {
          introspect(JAM.policy.p3) {
            var v11764 = a$$426(document)
          }
          introspect(JAM.policy.p3) {
            var v22827 = a$$426(document)
          }
          introspect(JAM.policy.p3) {
            var v17380 = v22827.scrollLeft()
          }
          var v17381 = e$$192.scrollSpeed;
          var v11765 = v17380 - v17381;
          introspect(JAM.policy.p3) {
            v4858 = f$$67 = v11764.scrollLeft(v11765);
          }
        } else {
          introspect(JAM.policy.p3) {
            var v25442 = a$$426(window)
          }
          introspect(JAM.policy.p3) {
            var v22828 = v25442.width()
          }
          var v25443 = b$$307.pageX;
          introspect(JAM.policy.p3) {
            var v27246 = a$$426(document)
          }
          introspect(JAM.policy.p3) {
            var v25444 = v27246.scrollLeft()
          }
          var v22829 = v25443 - v25444;
          var v17382 = v22828 - v22829;
          var v17383 = e$$192.scrollSensitivity;
          var v11766 = v17382 < v17383;
          if (v11766) {
            introspect(JAM.policy.p3) {
              var v17384 = a$$426(document)
            }
            introspect(JAM.policy.p3) {
              var v25445 = a$$426(document)
            }
            introspect(JAM.policy.p3) {
              var v22830 = v25445.scrollLeft()
            }
            var v22831 = e$$192.scrollSpeed;
            var v17385 = v22830 + v22831;
            introspect(JAM.policy.p3) {
              v11766 = f$$67 = v17384.scrollLeft(v17385);
            }
          }
          v4858 = v11766;
        }
        v4858;
      }
    }
    var v22832 = !1;
    var v17386 = f$$67 !== v22832;
    if (v17386) {
      var v22833 = a$$426.ui;
      v17386 = v22833.ddmanager;
    }
    var v11768 = v17386;
    if (v11768) {
      var v17387 = e$$192.dropBehaviour;
      v11768 = !v17387;
    }
    var v4861 = v11768;
    if (v4861) {
      var v17388 = a$$426.ui;
      var v11769 = v17388.ddmanager;
      introspect(JAM.policy.p3) {
        v11769.prepareOffsets(d$$198, b$$307);
      }
    }
    return;
  }
  function v1202(b$$306, c$$250) {
    introspect(JAM.policy.p3) {
      var v4862 = a$$426(this)
    }
    introspect(JAM.policy.p3) {
      var d$$197 = v4862.data("draggable")
    }
    var v22834 = d$$197.scrollParent;
    var v17389 = v22834[0];
    var v11770 = v17389 != document;
    if (v11770) {
      var v25446 = d$$197.scrollParent;
      var v22835 = v25446[0];
      var v17390 = v22835.tagName;
      v11770 = v17390 != "HTML";
    }
    var v4863 = v11770;
    if (v4863) {
      var v11771 = d$$197.scrollParent;
      introspect(JAM.policy.p3) {
        var v31098 = v11771.offset()
      }
      d$$197.overflowOffset = v31098;
    }
    return;
  }
  function v1201(b$$305, c$$249) {
    introspect(JAM.policy.p3) {
      var v11772 = a$$426(this)
    }
    introspect(JAM.policy.p3) {
      var v4864 = v11772.data("draggable")
    }
    var d$$196 = v4864.options;
    var v4865 = d$$196._opacity;
    if (v4865) {
      var v17391 = c$$249.helper;
      introspect(JAM.policy.p3) {
        var v11773 = a$$426(v17391)
      }
      var v11774 = d$$196._opacity;
      introspect(JAM.policy.p3) {
        v11773.css("opacity", v11774);
      }
    }
    return;
  }
  function v1200(b$$304, c$$248) {
    var v4866 = c$$248.helper;
    introspect(JAM.policy.p3) {
      var d$$195 = a$$426(v4866)
    }
    introspect(JAM.policy.p3) {
      var v11775 = a$$426(this)
    }
    introspect(JAM.policy.p3) {
      var v4867 = v11775.data("draggable")
    }
    var e$$191 = v4867.options;
    introspect(JAM.policy.p3) {
      var v11776 = d$$195.css("opacity")
    }
    if (v11776) {
      introspect(JAM.policy.p3) {
        var v31099 = d$$195.css("opacity")
      }
      e$$191._opacity = v31099;
    }
    var v11777 = e$$191.opacity;
    introspect(JAM.policy.p3) {
      d$$195.css("opacity", v11777);
    }
    return;
  }
  function v1199(b$$303, c$$247) {
    introspect(JAM.policy.p3) {
      var v11778 = a$$426(this)
    }
    introspect(JAM.policy.p3) {
      var v4868 = v11778.data("draggable")
    }
    var d$$194 = v4868.options;
    var v4869 = d$$194._cursor;
    if (v4869) {
      introspect(JAM.policy.p3) {
        var v11779 = a$$426("body")
      }
      var v11780 = d$$194._cursor;
      introspect(JAM.policy.p3) {
        v11779.css("cursor", v11780);
      }
    }
    return;
  }
  function v1198(b$$302, c$$246) {
    introspect(JAM.policy.p3) {
      var d$$193 = a$$426("body")
    }
    introspect(JAM.policy.p3) {
      var v11781 = a$$426(this)
    }
    introspect(JAM.policy.p3) {
      var v4870 = v11781.data("draggable")
    }
    var e$$190 = v4870.options;
    introspect(JAM.policy.p3) {
      var v11782 = d$$193.css("cursor")
    }
    if (v11782) {
      introspect(JAM.policy.p3) {
        var v31100 = d$$193.css("cursor")
      }
      e$$190._cursor = v31100;
    }
    var v11783 = e$$190.cursor;
    introspect(JAM.policy.p3) {
      d$$193.css("cursor", v11783);
    }
    return;
  }
  function v1197(b$$300, c$$244) {
    function v1196(f$$66) {
      function v1195() {
        var v4871 = c$$244.helper;
        return v4871[0];
      }
      var v22836 = this.instance;
      v22836.positionAbs = d$$191.positionAbs;
      var v22837 = this.instance;
      v22837.helperProportions = d$$191.helperProportions;
      var v22838 = this.instance;
      var v17392 = v22838.offset;
      var v22839 = d$$191.offset;
      v17392.click = v22839.click;
      var v11784;
      var v22840 = this.instance;
      var v25447 = this.instance;
      var v22841 = v25447.containerCache;
      introspect(JAM.policy.p3) {
        var v17394 = v22840._intersectsWith(v22841)
      }
      if (v17394) {
        var v25448 = this.instance;
        var v22842 = v25448.isOver;
        var v25449 = !v22842;
        if (v25449) {
          var v30822 = this.instance;
          v30822.isOver = 1;
          var v30823 = this.instance;
          introspect(JAM.policy.p3) {
            var v30860 = a$$426(e$$188)
          }
          introspect(JAM.policy.p3) {
            var v30857 = v30860.clone()
          }
          introspect(JAM.policy.p3) {
            var v30852 = v30857.removeAttr("id")
          }
          var v30858 = this.instance;
          var v30853 = v30858.element;
          introspect(JAM.policy.p3) {
            var v30839 = v30852.appendTo(v30853)
          }
          var v30840 = !0;
          introspect(JAM.policy.p3) {
            var v31101 = v30839.data("sortable-item", v30840)
          }
          v30823.currentItem = v31101;
          var v30824 = this.instance;
          var v30798 = v30824.options;
          var v30841 = this.instance;
          var v30825 = v30841.options;
          v30798._helper = v30825.helper;
          var v30799 = this.instance;
          var v30768 = v30799.options;
          v30768.helper = v1195;
          var v30769 = this.instance;
          var v30734 = v30769.currentItem;
          b$$300.target = v30734[0];
          var v30684 = this.instance;
          var v30685 = !0;
          introspect(JAM.policy.p3) {
            v30684._mouseCapture(b$$300, v30685);
          }
          var v30605 = this.instance;
          var v30606 = !0;
          var v30607 = !0;
          introspect(JAM.policy.p3) {
            v30605._mouseStart(b$$300, v30606, v30607);
          }
          var v30686 = this.instance;
          var v30608 = v30686.offset;
          var v30480 = v30608.click;
          var v30687 = d$$191.offset;
          var v30609 = v30687.click;
          v30480.top = v30609.top;
          var v30610 = this.instance;
          var v30481 = v30610.offset;
          var v30340 = v30481.click;
          var v30611 = d$$191.offset;
          var v30482 = v30611.click;
          v30340.left = v30482.left;
          var v30483 = this.instance;
          var v30341 = v30483.offset;
          var v30145 = v30341.parent;
          var v30484 = v30145.left;
          var v30735 = d$$191.offset;
          var v30688 = v30735.parent;
          var v30612 = v30688.left;
          var v30770 = this.instance;
          var v30736 = v30770.offset;
          var v30689 = v30736.parent;
          var v30613 = v30689.left;
          var v30485 = v30612 - v30613;
          v30145.left = v30484 - v30485;
          var v30342 = this.instance;
          var v30146 = v30342.offset;
          var v29898 = v30146.parent;
          var v30343 = v29898.top;
          var v30690 = d$$191.offset;
          var v30614 = v30690.parent;
          var v30486 = v30614.top;
          var v30737 = this.instance;
          var v30691 = v30737.offset;
          var v30615 = v30691.parent;
          var v30487 = v30615.top;
          var v30344 = v30486 - v30487;
          v29898.top = v30343 - v30344;
          introspect(JAM.policy.p3) {
            d$$191._trigger("toSortable", b$$300);
          }
          var v29122 = this.instance;
          d$$191.dropped = v29122.element;
          d$$191.currentItem = d$$191.element;
          var v27247 = this.instance;
          v27247.fromOutside = d$$191;
        }
        var v25450 = this.instance;
        var v22843 = v25450.currentItem;
        if (v22843) {
          var v25451 = this.instance;
          introspect(JAM.policy.p3) {
            v22843 = v25451._mouseDrag(b$$300);
          }
        }
        v11784 = v22843;
      } else {
        var v22844 = this.instance;
        var v17393 = v22844.isOver;
        if (v17393) {
          var v30488 = this.instance;
          v30488.isOver = 0;
          var v30489 = this.instance;
          v30489.cancelHelperRemoval = !0;
          var v30490 = this.instance;
          var v30345 = v30490.options;
          v30345.revert = !1;
          var v30147 = this.instance;
          var v30346 = this.instance;
          var v30347 = this.instance;
          introspect(JAM.policy.p3) {
            var v30148 = v30346._uiHash(v30347)
          }
          introspect(JAM.policy.p3) {
            v30147._trigger("out", b$$300, v30148);
          }
          var v29899 = this.instance;
          var v29900 = !0;
          introspect(JAM.policy.p3) {
            v29899._mouseStop(b$$300, v29900);
          }
          var v29901 = this.instance;
          var v29601 = v29901.options;
          var v30149 = this.instance;
          var v29902 = v30149.options;
          v29601.helper = v29902._helper;
          var v29602 = this.instance;
          var v29123 = v29602.currentItem;
          introspect(JAM.policy.p3) {
            v29123.remove();
          }
          var v29124 = this.instance;
          var v28390 = v29124.placeholder;
          if (v28390) {
            var v29603 = this.instance;
            var v29125 = v29603.placeholder;
            introspect(JAM.policy.p3) {
              v29125.remove();
            }
          }
          introspect(JAM.policy.p3) {
            d$$191._trigger("fromSortable", b$$300);
          }
          v17393 = d$$191.dropped = !1;
        }
        v11784 = v17393;
      }
      v11784;
      return;
    }
    introspect(JAM.policy.p3) {
      var v4872 = a$$426(this)
    }
    introspect(JAM.policy.p3) {
      var d$$191 = v4872.data("draggable")
    }
    var e$$188 = this;
    var v4873 = d$$191.sortables;
    introspect(JAM.policy.p3) {
      a$$426.each(v4873, v1196);
    }
    return;
  }
  function v1194(b$$299, c$$243) {
    function v1193() {
      var v4874;
      var v17395 = this.instance;
      var v11785 = v17395.isOver;
      if (v11785) {
        var v29126 = this.instance;
        v29126.isOver = 0;
        d$$190.cancelHelperRemoval = !0;
        var v28391 = this.instance;
        v28391.cancelHelperRemoval = !1;
        var v27248 = this.shouldRevert;
        if (v27248) {
          var v29127 = this.instance;
          var v28392 = v29127.options;
          v28392.revert = !0;
        }
        var v25452 = this.instance;
        introspect(JAM.policy.p3) {
          v25452._mouseStop(b$$299);
        }
        var v25453 = this.instance;
        var v22845 = v25453.options;
        var v27249 = this.instance;
        var v25454 = v27249.options;
        v22845.helper = v25454._helper;
        var v25455 = d$$190.options;
        var v22846 = v25455.helper;
        var v17396 = v22846 == "original";
        if (v17396) {
          var v25456 = this.instance;
          var v22847 = v25456.currentItem;
          var v22848 = {top:"auto", left:"auto"};
          introspect(JAM.policy.p3) {
            v17396 = v22847.css(v22848);
          }
        }
        v4874 = v17396;
      } else {
        var v17397 = this.instance;
        v17397.cancelHelperRemoval = !1;
        var v17398 = this.instance;
        introspect(JAM.policy.p3) {
          v4874 = v17398._trigger("deactivate", b$$299, e$$187);
        }
      }
      v4874;
      return;
    }
    introspect(JAM.policy.p3) {
      var v4875 = a$$426(this)
    }
    introspect(JAM.policy.p3) {
      var d$$190 = v4875.data("draggable")
    }
    var v11786 = d$$190.element;
    var v4876 = {item:v11786};
    introspect(JAM.policy.p3) {
      var e$$187 = a$$426.extend({}, c$$243, v4876)
    }
    var v4877 = d$$190.sortables;
    introspect(JAM.policy.p3) {
      a$$426.each(v4877, v1193);
    }
    return;
  }
  function v1192(b$$298, c$$241) {
    function v1191() {
      introspect(JAM.policy.p3) {
        var c$$242 = a$$426.data(this, "sortable")
      }
      var v11787 = c$$242;
      if (v11787) {
        var v22849 = c$$242.options;
        var v17399 = v22849.disabled;
        v11787 = !v17399;
      }
      var v4878 = v11787;
      if (v4878) {
        var v22850 = d$$189.sortables;
        var v27250 = c$$242.options;
        var v25457 = v27250.revert;
        var v22851 = {instance:c$$242, shouldRevert:v25457};
        introspect(JAM.policy.p3) {
          v22850.push(v22851);
        }
        introspect(JAM.policy.p3) {
          c$$242.refreshPositions();
        }
        introspect(JAM.policy.p3) {
          c$$242._trigger("activate", b$$298, f$$63);
        }
      }
      return;
    }
    introspect(JAM.policy.p3) {
      var v4879 = a$$426(this)
    }
    introspect(JAM.policy.p3) {
      var d$$189 = v4879.data("draggable")
    }
    var e$$186 = d$$189.options;
    var v11788 = d$$189.element;
    var v4880 = {item:v11788};
    introspect(JAM.policy.p3) {
      var f$$63 = a$$426.extend({}, c$$241, v4880)
    }
    d$$189.sortables = [];
    var v17400 = e$$186.connectToSortable;
    introspect(JAM.policy.p3) {
      var v11789 = a$$426(v17400)
    }
    introspect(JAM.policy.p3) {
      v11789.each(v1191);
    }
    return;
  }
  function v1190(a$$428) {
    var v4881 = this.helper;
    var v4882 = this.position;
    var v4883 = this.originalPosition;
    var v4884 = this.positionAbs;
    return {helper:v4881, position:v4882, originalPosition:v4883, offset:v4884};
  }
  function v1189(b$$297, c$$240, d$$188) {
    var v22852 = d$$188;
    var v25458 = !v22852;
    if (v25458) {
      introspect(JAM.policy.p3) {
        v22852 = this._uiHash();
      }
    }
    d$$188 = v22852;
    var v25459 = a$$426.ui;
    var v22853 = v25459.plugin;
    var v22854 = [c$$240, d$$188];
    introspect(JAM.policy.p3) {
      v22853.call(this, b$$297, v22854);
    }
    var v17401 = b$$297 == "drag";
    if (v17401) {
      introspect(JAM.policy.p3) {
        var v31102 = this._convertPositionTo("absolute")
      }
      this.positionAbs = v31102;
    }
    var v22855 = a$$426.Widget;
    var v17402 = v22855.prototype;
    var v11790 = v17402._trigger;
    introspect(JAM.policy.p3) {
      return v11790.call(this, b$$297, c$$240, d$$188);
    }
  }
  function v1188() {
    var v22856 = this.helper;
    introspect(JAM.policy.p3) {
      v22856.removeClass("ui-draggable-dragging");
    }
    var v28393 = this.helper;
    var v27251 = v28393[0];
    var v28394 = this.element;
    var v27252 = v28394[0];
    var v25460 = v27251 != v27252;
    if (v25460) {
      var v27253 = this.cancelHelperRemoval;
      v25460 = !v27253;
    }
    var v22857 = v25460;
    if (v22857) {
      var v25461 = this.helper;
      introspect(JAM.policy.p3) {
        v25461.remove();
      }
    }
    this.helper = null;
    this.cancelHelperRemoval = !1;
    return;
  }
  function v1187(b$$296) {
    var c$$239 = this.options;
    var v4885;
    var v22858 = this.cssPosition;
    var v17403 = v22858 == "absolute";
    if (v17403) {
      var v27254 = this.scrollParent;
      var v25462 = v27254[0];
      var v22859 = v25462 == document;
      var v25464 = !v22859;
      if (v25464) {
        var v27255 = a$$426.ui;
        var v28395 = this.scrollParent;
        var v27256 = v28395[0];
        var v28396 = this.offsetParent;
        var v27257 = v28396[0];
        introspect(JAM.policy.p3) {
          var v25463 = v27255.contains(v27256, v27257)
        }
        v22859 = !v25463;
      }
      v17403 = v22859;
    }
    var v11791 = v17403;
    if (v11791) {
      v4885 = this.offsetParent;
    } else {
      v4885 = this.scrollParent;
    }
    var d$$187 = v4885;
    var v11792 = d$$187[0];
    var v4886 = v11792.tagName;
    introspect(JAM.policy.p3) {
      var e$$185 = /(html|body)/i.test(v4886)
    }
    var f$$62 = b$$296.pageX;
    var g$$108 = b$$296.pageY;
    var v4899 = this.originalPosition;
    if (v4899) {
      var h$$87;
      var v4893 = this.containment;
      if (v4893) {
        var v4892 = this.relative_container;
        if (v4892) {
          var v4887 = this.relative_container;
          introspect(JAM.policy.p3) {
            var i$$148 = v4887.offset()
          }
          var v17404 = this.containment;
          var v11793 = v17404[0];
          var v11794 = i$$148.left;
          var v4888 = v11793 + v11794;
          var v17405 = this.containment;
          var v11795 = v17405[1];
          var v11796 = i$$148.top;
          var v4889 = v11795 + v11796;
          var v17406 = this.containment;
          var v11797 = v17406[2];
          var v11798 = i$$148.left;
          var v4890 = v11797 + v11798;
          var v17407 = this.containment;
          var v11799 = v17407[3];
          var v11800 = i$$148.top;
          var v4891 = v11799 + v11800;
          h$$87 = [v4888, v4889, v4890, v4891];
        } else {
          h$$87 = this.containment;
        }
        var v27258 = b$$296.pageX;
        var v29128 = this.offset;
        var v28397 = v29128.click;
        var v27259 = v28397.left;
        var v25465 = v27258 - v27259;
        var v25466 = h$$87[0];
        var v22860 = v25465 < v25466;
        if (v22860) {
          var v25467 = h$$87[0];
          var v28398 = this.offset;
          var v27260 = v28398.click;
          var v25468 = v27260.left;
          f$$62 = v25467 + v25468;
        }
        var v27261 = b$$296.pageY;
        var v29129 = this.offset;
        var v28399 = v29129.click;
        var v27262 = v28399.top;
        var v25469 = v27261 - v27262;
        var v25470 = h$$87[1];
        var v22861 = v25469 < v25470;
        if (v22861) {
          var v25471 = h$$87[1];
          var v28400 = this.offset;
          var v27263 = v28400.click;
          var v25472 = v27263.top;
          g$$108 = v25471 + v25472;
        }
        var v25473 = b$$296.pageX;
        var v28401 = this.offset;
        var v27264 = v28401.click;
        var v25474 = v27264.left;
        var v22862 = v25473 - v25474;
        var v22863 = h$$87[2];
        var v17408 = v22862 > v22863;
        if (v17408) {
          var v22864 = h$$87[2];
          var v27265 = this.offset;
          var v25475 = v27265.click;
          var v22865 = v25475.left;
          f$$62 = v22864 + v22865;
        }
        var v22866 = b$$296.pageY;
        var v27266 = this.offset;
        var v25476 = v27266.click;
        var v22867 = v25476.top;
        var v17409 = v22866 - v22867;
        var v17410 = h$$87[3];
        var v11801 = v17409 > v17410;
        if (v11801) {
          var v17411 = h$$87[3];
          var v25477 = this.offset;
          var v22868 = v25477.click;
          var v17412 = v22868.top;
          g$$108 = v17411 + v17412;
        }
      }
      var v4898 = c$$239.grid;
      if (v4898) {
        var v4894;
        var v17413 = c$$239.grid;
        var v11804 = v17413[1];
        if (v11804) {
          var v11802 = this.originalPageY;
          var v27267 = this.originalPageY;
          var v25478 = g$$108 - v27267;
          var v27268 = c$$239.grid;
          var v25479 = v27268[1];
          var v22869 = v25478 / v25479;
          introspect(JAM.policy.p3) {
            var v17414 = Math.round(v22869)
          }
          var v22870 = c$$239.grid;
          var v17415 = v22870[1];
          var v11803 = v17414 * v17415;
          v4894 = v11802 + v11803;
        } else {
          v4894 = this.originalPageY;
        }
        var j$$64 = v4894;
        var v4895;
        if (h$$87) {
          var v11805;
          var v29130 = this.offset;
          var v28402 = v29130.click;
          var v27269 = v28402.top;
          var v25480 = j$$64 - v27269;
          var v25481 = h$$87[1];
          var v22871 = v25480 < v25481;
          var v25484 = !v22871;
          if (v25484) {
            var v29131 = this.offset;
            var v28403 = v29131.click;
            var v27270 = v28403.top;
            var v25482 = j$$64 - v27270;
            var v25483 = h$$87[3];
            v22871 = v25482 > v25483;
          }
          var v17417 = v22871;
          if (v17417) {
            var v17416;
            var v29132 = this.offset;
            var v28404 = v29132.click;
            var v27271 = v28404.top;
            var v25485 = j$$64 - v27271;
            var v25486 = h$$87[1];
            var v22874 = v25485 < v25486;
            if (v22874) {
              var v25487 = c$$239.grid;
              var v22872 = v25487[1];
              v17416 = j$$64 + v22872;
            } else {
              var v25488 = c$$239.grid;
              var v22873 = v25488[1];
              v17416 = j$$64 - v22873;
            }
            v11805 = v17416;
          } else {
            v11805 = j$$64;
          }
          v4895 = v11805;
        } else {
          v4895 = j$$64;
        }
        g$$108 = v4895;
        var v4896;
        var v17418 = c$$239.grid;
        var v11808 = v17418[0];
        if (v11808) {
          var v11806 = this.originalPageX;
          var v27272 = this.originalPageX;
          var v25489 = f$$62 - v27272;
          var v27273 = c$$239.grid;
          var v25490 = v27273[0];
          var v22875 = v25489 / v25490;
          introspect(JAM.policy.p3) {
            var v17419 = Math.round(v22875)
          }
          var v22876 = c$$239.grid;
          var v17420 = v22876[0];
          var v11807 = v17419 * v17420;
          v4896 = v11806 + v11807;
        } else {
          v4896 = this.originalPageX;
        }
        var k$$42 = v4896;
        var v4897;
        if (h$$87) {
          var v11809;
          var v29133 = this.offset;
          var v28405 = v29133.click;
          var v27274 = v28405.left;
          var v25491 = k$$42 - v27274;
          var v25492 = h$$87[0];
          var v22877 = v25491 < v25492;
          var v25495 = !v22877;
          if (v25495) {
            var v29134 = this.offset;
            var v28406 = v29134.click;
            var v27275 = v28406.left;
            var v25493 = k$$42 - v27275;
            var v25494 = h$$87[2];
            v22877 = v25493 > v25494;
          }
          var v17422 = v22877;
          if (v17422) {
            var v17421;
            var v29135 = this.offset;
            var v28407 = v29135.click;
            var v27276 = v28407.left;
            var v25496 = k$$42 - v27276;
            var v25497 = h$$87[0];
            var v22880 = v25496 < v25497;
            if (v22880) {
              var v25498 = c$$239.grid;
              var v22878 = v25498[0];
              v17421 = k$$42 + v22878;
            } else {
              var v25499 = c$$239.grid;
              var v22879 = v25499[0];
              v17421 = k$$42 - v22879;
            }
            v11809 = v17421;
          } else {
            v11809 = k$$42;
          }
          v4897 = v11809;
        } else {
          v4897 = k$$42;
        }
        f$$62 = v4897;
      }
    }
    var v28408 = this.offset;
    var v27277 = v28408.click;
    var v25500 = v27277.top;
    var v22881 = g$$108 - v25500;
    var v27278 = this.offset;
    var v25501 = v27278.relative;
    var v22882 = v25501.top;
    var v17423 = v22881 - v22882;
    var v25502 = this.offset;
    var v22883 = v25502.parent;
    var v17424 = v22883.top;
    var v11810 = v17423 - v17424;
    var v17425;
    var v28409 = a$$426.browser;
    var v27279 = v28409.safari;
    if (v27279) {
      var v29136 = a$$426.browser;
      var v28410 = v29136.version;
      v27279 = v28410 < 526;
    }
    var v25503 = v27279;
    if (v25503) {
      var v27280 = this.cssPosition;
      v25503 = v27280 == "fixed";
    }
    var v22885 = v25503;
    if (v22885) {
      v17425 = 0;
    } else {
      var v22884;
      var v27281 = this.cssPosition;
      var v25506 = v27281 == "fixed";
      if (v25506) {
        var v27282 = this.scrollParent;
        introspect(JAM.policy.p3) {
          var v25504 = v27282.scrollTop()
        }
        v22884 = -v25504;
      } else {
        var v25505;
        if (e$$185) {
          v25505 = 0;
        } else {
          introspect(JAM.policy.p3) {
            v25505 = d$$187.scrollTop();
          }
        }
        v22884 = v25505;
      }
      v17425 = v22884;
    }
    var v11811 = v17425;
    var v4900 = v11810 + v11811;
    var v28411 = this.offset;
    var v27283 = v28411.click;
    var v25507 = v27283.left;
    var v22886 = f$$62 - v25507;
    var v27284 = this.offset;
    var v25508 = v27284.relative;
    var v22887 = v25508.left;
    var v17426 = v22886 - v22887;
    var v25509 = this.offset;
    var v22888 = v25509.parent;
    var v17427 = v22888.left;
    var v11812 = v17426 - v17427;
    var v17428;
    var v28412 = a$$426.browser;
    var v27285 = v28412.safari;
    if (v27285) {
      var v29137 = a$$426.browser;
      var v28413 = v29137.version;
      v27285 = v28413 < 526;
    }
    var v25510 = v27285;
    if (v25510) {
      var v27286 = this.cssPosition;
      v25510 = v27286 == "fixed";
    }
    var v22890 = v25510;
    if (v22890) {
      v17428 = 0;
    } else {
      var v22889;
      var v27287 = this.cssPosition;
      var v25513 = v27287 == "fixed";
      if (v25513) {
        var v27288 = this.scrollParent;
        introspect(JAM.policy.p3) {
          var v25511 = v27288.scrollLeft()
        }
        v22889 = -v25511;
      } else {
        var v25512;
        if (e$$185) {
          v25512 = 0;
        } else {
          introspect(JAM.policy.p3) {
            v25512 = d$$187.scrollLeft();
          }
        }
        v22889 = v25512;
      }
      v17428 = v22889;
    }
    var v11813 = v17428;
    var v4901 = v11812 + v11813;
    return {top:v4900, left:v4901};
  }
  function v1186(b$$295, c$$238) {
    var v11814 = !c$$238;
    if (v11814) {
      c$$238 = this.position;
    }
    var v4902;
    var v11815 = b$$295 == "absolute";
    if (v11815) {
      v4902 = 1;
    } else {
      v4902 = -1;
    }
    var d$$186 = v4902;
    var e$$184 = this.options;
    var v4903;
    var v22891 = this.cssPosition;
    var v17429 = v22891 == "absolute";
    if (v17429) {
      var v27289 = this.scrollParent;
      var v25514 = v27289[0];
      var v22892 = v25514 == document;
      var v25516 = !v22892;
      if (v25516) {
        var v27290 = a$$426.ui;
        var v28414 = this.scrollParent;
        var v27291 = v28414[0];
        var v28415 = this.offsetParent;
        var v27292 = v28415[0];
        introspect(JAM.policy.p3) {
          var v25515 = v27290.contains(v27291, v27292)
        }
        v22892 = !v25515;
      }
      v17429 = v22892;
    }
    var v11816 = v17429;
    if (v11816) {
      v4903 = this.offsetParent;
    } else {
      v4903 = this.scrollParent;
    }
    var f$$61 = v4903;
    var v11817 = f$$61[0];
    var v4904 = v11817.tagName;
    introspect(JAM.policy.p3) {
      var g$$107 = /(html|body)/i.test(v4904)
    }
    var v22893 = c$$238.top;
    var v28416 = this.offset;
    var v27293 = v28416.relative;
    var v25517 = v27293.top;
    var v22894 = v25517 * d$$186;
    var v17430 = v22893 + v22894;
    var v27294 = this.offset;
    var v25518 = v27294.parent;
    var v22895 = v25518.top;
    var v17431 = v22895 * d$$186;
    var v11818 = v17430 + v17431;
    var v17432;
    var v28417 = a$$426.browser;
    var v27295 = v28417.safari;
    if (v27295) {
      var v29138 = a$$426.browser;
      var v28418 = v29138.version;
      v27295 = v28418 < 526;
    }
    var v25519 = v27295;
    if (v25519) {
      var v27296 = this.cssPosition;
      v25519 = v27296 == "fixed";
    }
    var v22897 = v25519;
    if (v22897) {
      v17432 = 0;
    } else {
      var v25520;
      var v28419 = this.cssPosition;
      var v27299 = v28419 == "fixed";
      if (v27299) {
        var v28420 = this.scrollParent;
        introspect(JAM.policy.p3) {
          var v27297 = v28420.scrollTop()
        }
        v25520 = -v27297;
      } else {
        var v27298;
        if (g$$107) {
          v27298 = 0;
        } else {
          introspect(JAM.policy.p3) {
            v27298 = f$$61.scrollTop();
          }
        }
        v25520 = v27298;
      }
      var v22896 = v25520;
      v17432 = v22896 * d$$186;
    }
    var v11819 = v17432;
    var v4905 = v11818 - v11819;
    var v22898 = c$$238.left;
    var v28421 = this.offset;
    var v27300 = v28421.relative;
    var v25521 = v27300.left;
    var v22899 = v25521 * d$$186;
    var v17433 = v22898 + v22899;
    var v27301 = this.offset;
    var v25522 = v27301.parent;
    var v22900 = v25522.left;
    var v17434 = v22900 * d$$186;
    var v11820 = v17433 + v17434;
    var v17435;
    var v28422 = a$$426.browser;
    var v27302 = v28422.safari;
    if (v27302) {
      var v29139 = a$$426.browser;
      var v28423 = v29139.version;
      v27302 = v28423 < 526;
    }
    var v25523 = v27302;
    if (v25523) {
      var v27303 = this.cssPosition;
      v25523 = v27303 == "fixed";
    }
    var v22902 = v25523;
    if (v22902) {
      v17435 = 0;
    } else {
      var v25524;
      var v28424 = this.cssPosition;
      var v27306 = v28424 == "fixed";
      if (v27306) {
        var v28425 = this.scrollParent;
        introspect(JAM.policy.p3) {
          var v27304 = v28425.scrollLeft()
        }
        v25524 = -v27304;
      } else {
        var v27305;
        if (g$$107) {
          v27305 = 0;
        } else {
          introspect(JAM.policy.p3) {
            v27305 = f$$61.scrollLeft();
          }
        }
        v25524 = v27305;
      }
      var v22901 = v25524;
      v17435 = v22901 * d$$186;
    }
    var v11821 = v17435;
    var v4906 = v11820 - v11821;
    return {top:v4905, left:v4906};
  }
  function v1185() {
    var b$$294 = this.options;
    var v11822 = b$$294.containment;
    var v4907 = v11822 == "parent";
    if (v4907) {
      var v17436 = this.helper;
      var v11823 = v17436[0];
      b$$294.containment = v11823.parentNode;
    }
    var v17437 = b$$294.containment;
    var v11824 = v17437 == "document";
    var v17439 = !v11824;
    if (v17439) {
      var v17438 = b$$294.containment;
      v11824 = v17438 == "window";
    }
    var v4912 = v11824;
    if (v4912) {
      var v11825;
      var v22903 = b$$294.containment;
      var v17442 = v22903 == "document";
      if (v17442) {
        v11825 = 0;
      } else {
        introspect(JAM.policy.p3) {
          var v25525 = a$$426(window)
        }
        introspect(JAM.policy.p3) {
          var v22904 = v25525.scrollLeft()
        }
        var v27307 = this.offset;
        var v25526 = v27307.relative;
        var v22905 = v25526.left;
        var v17440 = v22904 - v22905;
        var v25527 = this.offset;
        var v22906 = v25527.parent;
        var v17441 = v22906.left;
        v11825 = v17440 - v17441;
      }
      var v4908 = v11825;
      var v11826;
      var v22907 = b$$294.containment;
      var v17445 = v22907 == "document";
      if (v17445) {
        v11826 = 0;
      } else {
        introspect(JAM.policy.p3) {
          var v25528 = a$$426(window)
        }
        introspect(JAM.policy.p3) {
          var v22908 = v25528.scrollTop()
        }
        var v27308 = this.offset;
        var v25529 = v27308.relative;
        var v22909 = v25529.top;
        var v17443 = v22908 - v22909;
        var v25530 = this.offset;
        var v22910 = v25530.parent;
        var v17444 = v22910.top;
        v11826 = v17443 - v17444;
      }
      var v4909 = v11826;
      var v25531;
      var v28426 = b$$294.containment;
      var v27310 = v28426 == "document";
      if (v27310) {
        v25531 = 0;
      } else {
        introspect(JAM.policy.p3) {
          var v27309 = a$$426(window)
        }
        introspect(JAM.policy.p3) {
          v25531 = v27309.scrollLeft();
        }
      }
      var v22911 = v25531;
      var v28427;
      var v29604 = b$$294.containment;
      var v29140 = v29604 == "document";
      if (v29140) {
        v28427 = document;
      } else {
        v28427 = window;
      }
      var v27311 = v28427;
      introspect(JAM.policy.p3) {
        var v25532 = a$$426(v27311)
      }
      introspect(JAM.policy.p3) {
        var v22912 = v25532.width()
      }
      var v17446 = v22911 + v22912;
      var v22913 = this.helperProportions;
      var v17447 = v22913.width;
      var v11827 = v17446 - v17447;
      var v17448 = this.margins;
      var v11828 = v17448.left;
      var v4910 = v11827 - v11828;
      var v25533;
      var v28428 = b$$294.containment;
      var v27313 = v28428 == "document";
      if (v27313) {
        v25533 = 0;
      } else {
        introspect(JAM.policy.p3) {
          var v27312 = a$$426(window)
        }
        introspect(JAM.policy.p3) {
          v25533 = v27312.scrollTop();
        }
      }
      var v22914 = v25533;
      var v29141;
      var v29903 = b$$294.containment;
      var v29605 = v29903 == "document";
      if (v29605) {
        v29141 = document;
      } else {
        v29141 = window;
      }
      var v28429 = v29141;
      introspect(JAM.policy.p3) {
        var v27314 = a$$426(v28429)
      }
      introspect(JAM.policy.p3) {
        var v25534 = v27314.height()
      }
      var v27316 = !v25534;
      if (v27316) {
        var v28430 = document.body;
        var v27315 = v28430.parentNode;
        v25534 = v27315.scrollHeight;
      }
      var v22915 = v25534;
      var v17449 = v22914 + v22915;
      var v22916 = this.helperProportions;
      var v17450 = v22916.height;
      var v11829 = v17449 - v17450;
      var v17451 = this.margins;
      var v11830 = v17451.top;
      var v4911 = v11829 - v11830;
      this.containment = [v4908, v4909, v4910, v4911];
    }
    var v22917 = b$$294.containment;
    introspect(JAM.policy.p3) {
      var v17452 = /^(document|window|parent)$/.test(v22917)
    }
    var v11831 = !v17452;
    if (v11831) {
      var v22918 = b$$294.containment;
      var v17453 = v22918.constructor;
      v11831 = v17453 != Array;
    }
    var v4917 = v11831;
    if (v4917) {
      var v4913 = b$$294.containment;
      introspect(JAM.policy.p3) {
        var c$$237 = a$$426(v4913)
      }
      var d$$185 = c$$237[0];
      var v4914 = !d$$185;
      if (v4914) {
        return;
      }
      introspect(JAM.policy.p3) {
        var e$$183 = c$$237.offset()
      }
      introspect(JAM.policy.p3) {
        var v11832 = a$$426(d$$185)
      }
      introspect(JAM.policy.p3) {
        var v4915 = v11832.css("overflow")
      }
      var f$$60 = v4915 != "hidden";
      introspect(JAM.policy.p3) {
        var v27317 = a$$426(d$$185)
      }
      introspect(JAM.policy.p3) {
        var v25535 = v27317.css("borderLeftWidth")
      }
      var v22919 = parseInt(v25535, 10);
      var v25536 = !v22919;
      if (v25536) {
        v22919 = 0;
      }
      var v17454 = v22919;
      introspect(JAM.policy.p3) {
        var v27318 = a$$426(d$$185)
      }
      introspect(JAM.policy.p3) {
        var v25537 = v27318.css("paddingLeft")
      }
      var v22920 = parseInt(v25537, 10);
      var v25538 = !v22920;
      if (v25538) {
        v22920 = 0;
      }
      var v17455 = v22920;
      var v11833 = v17454 + v17455;
      introspect(JAM.policy.p3) {
        var v27319 = a$$426(d$$185)
      }
      introspect(JAM.policy.p3) {
        var v25539 = v27319.css("borderTopWidth")
      }
      var v22921 = parseInt(v25539, 10);
      var v25540 = !v22921;
      if (v25540) {
        v22921 = 0;
      }
      var v17456 = v22921;
      introspect(JAM.policy.p3) {
        var v27320 = a$$426(d$$185)
      }
      introspect(JAM.policy.p3) {
        var v25541 = v27320.css("paddingTop")
      }
      var v22922 = parseInt(v25541, 10);
      var v25542 = !v22922;
      if (v25542) {
        v22922 = 0;
      }
      var v17457 = v22922;
      var v11834 = v17456 + v17457;
      var v29142;
      if (f$$60) {
        var v29606 = d$$185.scrollWidth;
        var v29607 = d$$185.offsetWidth;
        introspect(JAM.policy.p3) {
          v29142 = Math.max(v29606, v29607);
        }
      } else {
        v29142 = d$$185.offsetWidth;
      }
      var v28431 = v29142;
      introspect(JAM.policy.p3) {
        var v29904 = a$$426(d$$185)
      }
      introspect(JAM.policy.p3) {
        var v29608 = v29904.css("borderLeftWidth")
      }
      var v29143 = parseInt(v29608, 10);
      var v29609 = !v29143;
      if (v29609) {
        v29143 = 0;
      }
      var v28432 = v29143;
      var v27321 = v28431 - v28432;
      introspect(JAM.policy.p3) {
        var v29610 = a$$426(d$$185)
      }
      introspect(JAM.policy.p3) {
        var v29144 = v29610.css("paddingRight")
      }
      var v28433 = parseInt(v29144, 10);
      var v29145 = !v28433;
      if (v29145) {
        v28433 = 0;
      }
      var v27322 = v28433;
      var v25543 = v27321 - v27322;
      var v27323 = this.helperProportions;
      var v25544 = v27323.width;
      var v22923 = v25543 - v25544;
      var v25545 = this.margins;
      var v22924 = v25545.left;
      var v17458 = v22923 - v22924;
      var v22925 = this.margins;
      var v17459 = v22925.right;
      var v11835 = v17458 - v17459;
      var v29146;
      if (f$$60) {
        var v29611 = d$$185.scrollHeight;
        var v29612 = d$$185.offsetHeight;
        introspect(JAM.policy.p3) {
          v29146 = Math.max(v29611, v29612);
        }
      } else {
        v29146 = d$$185.offsetHeight;
      }
      var v28434 = v29146;
      introspect(JAM.policy.p3) {
        var v29905 = a$$426(d$$185)
      }
      introspect(JAM.policy.p3) {
        var v29613 = v29905.css("borderTopWidth")
      }
      var v29147 = parseInt(v29613, 10);
      var v29614 = !v29147;
      if (v29614) {
        v29147 = 0;
      }
      var v28435 = v29147;
      var v27324 = v28434 - v28435;
      introspect(JAM.policy.p3) {
        var v29615 = a$$426(d$$185)
      }
      introspect(JAM.policy.p3) {
        var v29148 = v29615.css("paddingBottom")
      }
      var v28436 = parseInt(v29148, 10);
      var v29149 = !v28436;
      if (v29149) {
        v28436 = 0;
      }
      var v27325 = v28436;
      var v25546 = v27324 - v27325;
      var v27326 = this.helperProportions;
      var v25547 = v27326.height;
      var v22926 = v25546 - v25547;
      var v25548 = this.margins;
      var v22927 = v25548.top;
      var v17460 = v22926 - v22927;
      var v22928 = this.margins;
      var v17461 = v22928.bottom;
      var v11836 = v17460 - v17461;
      this.containment = [v11833, v11834, v11835, v11836];
      this.relative_container = c$$237;
    } else {
      var v17462 = b$$294.containment;
      var v11837 = v17462.constructor;
      var v4916 = v11837 == Array;
      if (v4916) {
        this.containment = b$$294.containment;
      }
    }
    return;
  }
  function v1184() {
    var v11838 = this.helper;
    introspect(JAM.policy.p3) {
      var v4918 = v11838.outerWidth()
    }
    var v11839 = this.helper;
    introspect(JAM.policy.p3) {
      var v4919 = v11839.outerHeight()
    }
    this.helperProportions = {width:v4918, height:v4919};
    return;
  }
  function v1183() {
    var v22929 = this.element;
    introspect(JAM.policy.p3) {
      var v17463 = v22929.css("marginLeft")
    }
    var v11840 = parseInt(v17463, 10);
    var v17464 = !v11840;
    if (v17464) {
      v11840 = 0;
    }
    var v4920 = v11840;
    var v22930 = this.element;
    introspect(JAM.policy.p3) {
      var v17465 = v22930.css("marginTop")
    }
    var v11841 = parseInt(v17465, 10);
    var v17466 = !v11841;
    if (v17466) {
      v11841 = 0;
    }
    var v4921 = v11841;
    var v22931 = this.element;
    introspect(JAM.policy.p3) {
      var v17467 = v22931.css("marginRight")
    }
    var v11842 = parseInt(v17467, 10);
    var v17468 = !v11842;
    if (v17468) {
      v11842 = 0;
    }
    var v4922 = v11842;
    var v22932 = this.element;
    introspect(JAM.policy.p3) {
      var v17469 = v22932.css("marginBottom")
    }
    var v11843 = parseInt(v17469, 10);
    var v17470 = !v11843;
    if (v17470) {
      v11843 = 0;
    }
    var v4923 = v11843;
    this.margins = {left:v4920, top:v4921, right:v4922, bottom:v4923};
    return;
  }
  function v1182() {
    var v11844 = this.cssPosition;
    var v4927 = v11844 == "relative";
    if (v4927) {
      var v4924 = this.element;
      introspect(JAM.policy.p3) {
        var a$$427 = v4924.position()
      }
      var v17471 = a$$427.top;
      var v27327 = this.helper;
      introspect(JAM.policy.p3) {
        var v25549 = v27327.css("top")
      }
      var v22933 = parseInt(v25549, 10);
      var v25550 = !v22933;
      if (v25550) {
        v22933 = 0;
      }
      var v17472 = v22933;
      var v11845 = v17471 - v17472;
      var v17473 = this.scrollParent;
      introspect(JAM.policy.p3) {
        var v11846 = v17473.scrollTop()
      }
      var v4925 = v11845 + v11846;
      var v17474 = a$$427.left;
      var v27328 = this.helper;
      introspect(JAM.policy.p3) {
        var v25551 = v27328.css("left")
      }
      var v22934 = parseInt(v25551, 10);
      var v25552 = !v22934;
      if (v25552) {
        v22934 = 0;
      }
      var v17475 = v22934;
      var v11847 = v17474 - v17475;
      var v17476 = this.scrollParent;
      introspect(JAM.policy.p3) {
        var v11848 = v17476.scrollLeft()
      }
      var v4926 = v11847 + v11848;
      return {top:v4925, left:v4926};
    }
    return {top:0, left:0};
  }
  function v1181() {
    var v4928 = this.helper;
    introspect(JAM.policy.p3) {
      var v31103 = v4928.offsetParent()
    }
    this.offsetParent = v31103;
    var v4929 = this.offsetParent;
    introspect(JAM.policy.p3) {
      var b$$293 = v4929.offset()
    }
    var v22935 = this.cssPosition;
    var v17477 = v22935 == "absolute";
    if (v17477) {
      var v25553 = this.scrollParent;
      var v22936 = v25553[0];
      v17477 = v22936 != document;
    }
    var v11849 = v17477;
    if (v11849) {
      var v17478 = a$$426.ui;
      var v22937 = this.scrollParent;
      var v17479 = v22937[0];
      var v22938 = this.offsetParent;
      var v17480 = v22938[0];
      introspect(JAM.policy.p3) {
        v11849 = v17478.contains(v17479, v17480);
      }
    }
    var v4930 = v11849;
    if (v4930) {
      var v22939 = b$$293.left;
      var v25554 = this.scrollParent;
      introspect(JAM.policy.p3) {
        var v22940 = v25554.scrollLeft()
      }
      b$$293.left = v22939 + v22940;
      var v22941 = b$$293.top;
      var v25555 = this.scrollParent;
      introspect(JAM.policy.p3) {
        var v22942 = v25555.scrollTop()
      }
      b$$293.top = v22941 + v22942;
    }
    var v22943 = this.offsetParent;
    var v17481 = v22943[0];
    var v17482 = document.body;
    var v11850 = v17481 == v17482;
    var v17484 = !v11850;
    if (v17484) {
      var v27329 = this.offsetParent;
      var v25556 = v27329[0];
      var v22944 = v25556.tagName;
      if (v22944) {
        var v29150 = this.offsetParent;
        var v28437 = v29150[0];
        var v27330 = v28437.tagName;
        introspect(JAM.policy.p3) {
          var v25557 = v27330.toLowerCase()
        }
        v22944 = v25557 == "html";
      }
      var v17483 = v22944;
      if (v17483) {
        var v22945 = a$$426.browser;
        v17483 = v22945.msie;
      }
      v11850 = v17483;
    }
    var v4931 = v11850;
    if (v4931) {
      b$$293 = {top:0, left:0};
    }
    var v11851 = b$$293.top;
    var v25558 = this.offsetParent;
    introspect(JAM.policy.p3) {
      var v22946 = v25558.css("borderTopWidth")
    }
    var v17485 = parseInt(v22946, 10);
    var v22947 = !v17485;
    if (v22947) {
      v17485 = 0;
    }
    var v11852 = v17485;
    var v4932 = v11851 + v11852;
    var v11853 = b$$293.left;
    var v25559 = this.offsetParent;
    introspect(JAM.policy.p3) {
      var v22948 = v25559.css("borderLeftWidth")
    }
    var v17486 = parseInt(v22948, 10);
    var v22949 = !v17486;
    if (v22949) {
      v17486 = 0;
    }
    var v11854 = v17486;
    var v4933 = v11853 + v11854;
    return {top:v4932, left:v4933};
  }
  function v1180(b$$292) {
    var v28438 = typeof b$$292;
    var v27331 = v28438 == "string";
    if (v27331) {
      introspect(JAM.policy.p3) {
        b$$292 = b$$292.split(" ");
      }
    }
    introspect(JAM.policy.p3) {
      var v27332 = a$$426.isArray(b$$292)
    }
    if (v27332) {
      var v29151 = b$$292[0];
      var v28439 = +v29151;
      var v29616 = b$$292[1];
      var v29152 = +v29616;
      var v29617 = !v29152;
      if (v29617) {
        v29152 = 0;
      }
      var v28440 = v29152;
      b$$292 = {left:v28439, top:v28440};
    }
    var v25560 = "left" in b$$292;
    if (v25560) {
      var v28441 = this.offset;
      var v27333 = v28441.click;
      var v28442 = b$$292.left;
      var v29153 = this.margins;
      var v28443 = v29153.left;
      v27333.left = v28442 + v28443;
    }
    var v22950 = "right" in b$$292;
    if (v22950) {
      var v27334 = this.offset;
      var v25561 = v27334.click;
      var v29154 = this.helperProportions;
      var v28444 = v29154.width;
      var v28445 = b$$292.right;
      var v27335 = v28444 - v28445;
      var v28446 = this.margins;
      var v27336 = v28446.left;
      v25561.left = v27335 + v27336;
    }
    var v17487 = "top" in b$$292;
    if (v17487) {
      var v25562 = this.offset;
      var v22951 = v25562.click;
      var v25563 = b$$292.top;
      var v27337 = this.margins;
      var v25564 = v27337.top;
      v22951.top = v25563 + v25564;
    }
    var v11855 = "bottom" in b$$292;
    if (v11855) {
      var v22952 = this.offset;
      var v17488 = v22952.click;
      var v27338 = this.helperProportions;
      var v25565 = v27338.height;
      var v25566 = b$$292.bottom;
      var v22953 = v25565 - v25566;
      var v25567 = this.margins;
      var v22954 = v25567.top;
      v17488.top = v22953 + v22954;
    }
    return;
  }
  function v1179(b$$291) {
    var c$$236 = this.options;
    var v4934;
    var v17489 = c$$236.helper;
    introspect(JAM.policy.p3) {
      var v11858 = a$$426.isFunction(v17489)
    }
    if (v11858) {
      var v17490 = c$$236.helper;
      var v22955 = this.element;
      var v17491 = v22955[0];
      var v17492 = [b$$291];
      introspect(JAM.policy.p3) {
        var v11856 = v17490.apply(v17491, v17492)
      }
      introspect(JAM.policy.p3) {
        v4934 = a$$426(v11856);
      }
    } else {
      var v11857;
      var v22956 = c$$236.helper;
      var v17494 = v22956 == "clone";
      if (v17494) {
        var v22957 = this.element;
        introspect(JAM.policy.p3) {
          var v17493 = v22957.clone()
        }
        introspect(JAM.policy.p3) {
          v11857 = v17493.removeAttr("id");
        }
      } else {
        v11857 = this.element;
      }
      v4934 = v11857;
    }
    var d$$184 = v4934;
    introspect(JAM.policy.p3) {
      var v22958 = d$$184.parents("body")
    }
    var v17495 = v22958.length;
    var v22960 = !v17495;
    if (v22960) {
      var v25568;
      var v28447 = c$$236.appendTo;
      var v27340 = v28447 == "parent";
      if (v27340) {
        var v28448 = this.element;
        var v27339 = v28448[0];
        v25568 = v27339.parentNode;
      } else {
        v25568 = c$$236.appendTo;
      }
      var v22959 = v25568;
      introspect(JAM.policy.p3) {
        d$$184.appendTo(v22959);
      }
    }
    var v25569 = d$$184[0];
    var v27341 = this.element;
    var v25570 = v27341[0];
    var v22961 = v25569 != v25570;
    if (v22961) {
      introspect(JAM.policy.p3) {
        var v27342 = d$$184.css("position")
      }
      introspect(JAM.policy.p3) {
        var v25571 = /(fixed|absolute)/.test(v27342)
      }
      v22961 = !v25571;
    }
    var v17496 = v22961;
    if (v17496) {
      introspect(JAM.policy.p3) {
        d$$184.css("position", "absolute");
      }
    }
    return d$$184;
  }
  function v1178(b$$290) {
    function v1177() {
      var v11859 = b$$290.target;
      var v4935 = this == v11859;
      if (v4935) {
        c$$235 = !0;
      }
      return;
    }
    var v4936;
    var v25572 = this.options;
    var v22962 = v25572.handle;
    var v17497 = !v22962;
    var v22964 = !v17497;
    if (v22964) {
      var v28449 = this.options;
      var v27343 = v28449.handle;
      var v27344 = this.element;
      introspect(JAM.policy.p3) {
        var v25573 = a$$426(v27343, v27344)
      }
      var v22963 = v25573.length;
      v17497 = !v22963;
    }
    var v11860 = v17497;
    if (v11860) {
      v4936 = !0;
    } else {
      v4936 = !1;
    }
    var c$$235 = v4936;
    var v27345 = this.options;
    var v25574 = v27345.handle;
    var v25575 = this.element;
    introspect(JAM.policy.p3) {
      var v22965 = a$$426(v25574, v25575)
    }
    introspect(JAM.policy.p3) {
      var v17498 = v22965.find("*")
    }
    introspect(JAM.policy.p3) {
      var v11861 = v17498.andSelf()
    }
    introspect(JAM.policy.p3) {
      v11861.each(v1177);
    }
    return c$$235;
  }
  function v1176() {
    var v11862;
    var v22966 = this.helper;
    introspect(JAM.policy.p3) {
      var v17499 = v22966.is(".ui-draggable-dragging")
    }
    if (v17499) {
      introspect(JAM.policy.p3) {
        v11862 = this._mouseUp({});
      }
    } else {
      introspect(JAM.policy.p3) {
        v11862 = this._clear();
      }
    }
    v11862;
    return this;
  }
  function v1175(b$$289) {
    function v1174() {
      var v4937 = this.parentNode;
      introspect(JAM.policy.p3) {
        v4937.removeChild(this);
      }
      return;
    }
    introspect(JAM.policy.p3) {
      var v17500 = a$$426("div.ui-draggable-iframeFix")
    }
    introspect(JAM.policy.p3) {
      v17500.each(v1174);
    }
    var v22967 = a$$426.ui;
    var v17501 = v22967.ddmanager;
    if (v17501) {
      var v25576 = a$$426.ui;
      var v22968 = v25576.ddmanager;
      introspect(JAM.policy.p3) {
        v22968.dragStop(this, b$$289);
      }
    }
    var v25577 = a$$426.ui;
    var v22969 = v25577.mouse;
    var v17502 = v22969.prototype;
    var v11863 = v17502._mouseUp;
    introspect(JAM.policy.p3) {
      return v11863.call(this, b$$289);
    }
  }
  function v1173(b$$288) {
    function v1172() {
      introspect(JAM.policy.p3) {
        var v11864 = f$$59._trigger("stop", b$$288)
      }
      var v11865 = !1;
      var v4938 = v11864 !== v11865;
      if (v4938) {
        introspect(JAM.policy.p3) {
          f$$59._clear();
        }
      }
      return;
    }
    var c$$234 = !1;
    var v22970 = a$$426.ui;
    var v17503 = v22970.ddmanager;
    if (v17503) {
      var v25578 = this.options;
      var v22971 = v25578.dropBehaviour;
      v17503 = !v22971;
    }
    var v11866 = v17503;
    if (v11866) {
      var v22972 = a$$426.ui;
      var v17504 = v22972.ddmanager;
      introspect(JAM.policy.p3) {
        c$$234 = v17504.drop(this, b$$288);
      }
    }
    var v11867 = this.dropped;
    if (v11867) {
      c$$234 = this.dropped;
      this.dropped = !1;
    }
    var v4939 = this.element;
    var d$$183 = v4939[0];
    var e$$182 = !1;
    var v11868 = d$$183;
    if (v11868) {
      v11868 = d$$183 = d$$183.parentNode;
    }
    var v4941 = v11868;
    for (;v4941;) {
      var v4940 = d$$183 == document;
      if (v4940) {
        e$$182 = !0;
      }
      var v11869 = d$$183;
      if (v11869) {
        v11869 = d$$183 = d$$183.parentNode;
      }
      v4941 = v11869;
    }
    var v11870 = !e$$182;
    if (v11870) {
      var v22973 = this.options;
      var v17505 = v22973.helper;
      v11870 = v17505 === "original";
    }
    var v4942 = v11870;
    if (v4942) {
      return !1;
    }
    var v28450 = this.options;
    var v27346 = v28450.revert;
    var v25579 = v27346 == "invalid";
    if (v25579) {
      v25579 = !c$$234;
    }
    var v22974 = v25579;
    var v25581 = !v22974;
    if (v25581) {
      var v28451 = this.options;
      var v27347 = v28451.revert;
      var v25580 = v27347 == "valid";
      if (v25580) {
        v25580 = c$$234;
      }
      v22974 = v25580;
    }
    var v17506 = v22974;
    var v22977 = !v17506;
    if (v22977) {
      var v25582 = this.options;
      var v22975 = v25582.revert;
      var v22976 = !0;
      v17506 = v22975 === v22976;
    }
    var v11871 = v17506;
    var v17508 = !v11871;
    if (v17508) {
      var v25583 = this.options;
      var v22978 = v25583.revert;
      introspect(JAM.policy.p3) {
        var v17507 = a$$426.isFunction(v22978)
      }
      if (v17507) {
        var v25584 = this.options;
        var v22979 = v25584.revert;
        var v22980 = this.element;
        introspect(JAM.policy.p3) {
          v17507 = v22979.call(v22980, c$$234);
        }
      }
      v11871 = v17507;
    }
    var v4947 = v11871;
    if (v4947) {
      var f$$59 = this;
      var v11872 = this.helper;
      introspect(JAM.policy.p3) {
        var v4943 = a$$426(v11872)
      }
      var v4944 = this.originalPosition;
      var v17509 = this.options;
      var v11873 = v17509.revertDuration;
      var v4945 = parseInt(v11873, 10);
      introspect(JAM.policy.p3) {
        v4943.animate(v4944, v4945, v1172);
      }
    } else {
      introspect(JAM.policy.p3) {
        var v11874 = this._trigger("stop", b$$288)
      }
      var v11875 = !1;
      var v4946 = v11874 !== v11875;
      if (v4946) {
        introspect(JAM.policy.p3) {
          this._clear();
        }
      }
    }
    return !1;
  }
  function v1171(b$$287, c$$233) {
    introspect(JAM.policy.p3) {
      var v31104 = this._generatePosition(b$$287)
    }
    this.position = v31104;
    introspect(JAM.policy.p3) {
      var v31105 = this._convertPositionTo("absolute")
    }
    this.positionAbs = v31105;
    var v4949 = !c$$233;
    if (v4949) {
      introspect(JAM.policy.p3) {
        var d$$182 = this._uiHash()
      }
      introspect(JAM.policy.p3) {
        var v11876 = this._trigger("drag", b$$287, d$$182)
      }
      var v11877 = !1;
      var v4948 = v11876 === v11877;
      if (v4948) {
        introspect(JAM.policy.p3) {
          this._mouseUp({});
        }
        return !1;
      }
      this.position = d$$182.position;
    }
    var v22981 = this.options;
    var v17510 = v22981.axis;
    var v11878 = !v17510;
    var v17512 = !v11878;
    if (v17512) {
      var v22982 = this.options;
      var v17511 = v22982.axis;
      v11878 = v17511 != "y";
    }
    var v4951 = v11878;
    if (v4951) {
      var v17513 = this.helper;
      var v11879 = v17513[0];
      var v4950 = v11879.style;
      var v17514 = this.position;
      var v11880 = v17514.left;
      v4950.left = v11880 + "px";
    }
    var v22983 = this.options;
    var v17515 = v22983.axis;
    var v11881 = !v17515;
    var v17517 = !v11881;
    if (v17517) {
      var v22984 = this.options;
      var v17516 = v22984.axis;
      v11881 = v17516 != "x";
    }
    var v4953 = v11881;
    if (v4953) {
      var v17518 = this.helper;
      var v11882 = v17518[0];
      var v4952 = v11882.style;
      var v17519 = this.position;
      var v11883 = v17519.top;
      v4952.top = v11883 + "px";
    }
    var v17520 = a$$426.ui;
    var v11884 = v17520.ddmanager;
    if (v11884) {
      var v22985 = a$$426.ui;
      var v17521 = v22985.ddmanager;
      introspect(JAM.policy.p3) {
        v17521.drag(this, b$$287);
      }
    }
    return !1;
  }
  function v1170(b$$286) {
    var c$$232 = this.options;
    introspect(JAM.policy.p3) {
      var v31106 = this._createHelper(b$$286)
    }
    this.helper = v31106;
    var v30738 = this.helper;
    introspect(JAM.policy.p3) {
      v30738.addClass("ui-draggable-dragging");
    }
    introspect(JAM.policy.p3) {
      this._cacheHelperProportions();
    }
    var v30692 = a$$426.ui;
    var v30616 = v30692.ddmanager;
    if (v30616) {
      var v30739 = a$$426.ui;
      var v30693 = v30739.ddmanager;
      v30693.current = this;
    }
    introspect(JAM.policy.p3) {
      this._cacheMargins();
    }
    var v30348 = this.helper;
    introspect(JAM.policy.p3) {
      var v31107 = v30348.css("position")
    }
    this.cssPosition = v31107;
    var v30150 = this.helper;
    introspect(JAM.policy.p3) {
      var v31108 = v30150.scrollParent()
    }
    this.scrollParent = v31108;
    var v29906 = this.element;
    introspect(JAM.policy.p3) {
      var v31109 = v29906.offset()
    }
    this.offset = this.positionAbs = v31109;
    var v30151 = this.offset;
    var v29907 = v30151.top;
    var v30152 = this.margins;
    var v29908 = v30152.top;
    var v29618 = v29907 - v29908;
    var v30153 = this.offset;
    var v29909 = v30153.left;
    var v30154 = this.margins;
    var v29910 = v30154.left;
    var v29619 = v29909 - v29910;
    this.offset = {top:v29618, left:v29619};
    var v29155 = this.offset;
    var v30155 = b$$286.pageX;
    var v30349 = this.offset;
    var v30156 = v30349.left;
    var v29911 = v30155 - v30156;
    var v30157 = b$$286.pageY;
    var v30350 = this.offset;
    var v30158 = v30350.top;
    var v29912 = v30157 - v30158;
    var v29620 = {left:v29911, top:v29912};
    introspect(JAM.policy.p3) {
      var v29621 = this._getParentOffset()
    }
    introspect(JAM.policy.p3) {
      var v29622 = this._getRelativeOffset()
    }
    var v29156 = {click:v29620, parent:v29621, relative:v29622};
    introspect(JAM.policy.p3) {
      a$$426.extend(v29155, v29156);
    }
    introspect(JAM.policy.p3) {
      var v31110 = this._generatePosition(b$$286)
    }
    this.originalPosition = this.position = v31110;
    this.originalPageX = b$$286.pageX;
    this.originalPageY = b$$286.pageY;
    var v22986 = c$$232.cursorAt;
    if (v22986) {
      var v25585 = c$$232.cursorAt;
      introspect(JAM.policy.p3) {
        this._adjustOffsetFromHelper(v25585);
      }
    }
    var v17522 = c$$232.containment;
    if (v17522) {
      introspect(JAM.policy.p3) {
        this._setContainment();
      }
    }
    var v11885;
    introspect(JAM.policy.p3) {
      var v22987 = this._trigger("start", b$$286)
    }
    var v22988 = !1;
    var v17523 = v22987 === v22988;
    if (v17523) {
      introspect(JAM.policy.p3) {
        this._clear();
      }
      v11885 = !1;
    } else {
      introspect(JAM.policy.p3) {
        this._cacheHelperProportions();
      }
      var v29623 = a$$426.ui;
      var v29157 = v29623.ddmanager;
      if (v29157) {
        var v29624 = c$$232.dropBehaviour;
        v29157 = !v29624;
      }
      var v28452 = v29157;
      if (v28452) {
        var v29625 = a$$426.ui;
        var v29158 = v29625.ddmanager;
        introspect(JAM.policy.p3) {
          v29158.prepareOffsets(this, b$$286);
        }
      }
      var v27348 = !0;
      introspect(JAM.policy.p3) {
        this._mouseDrag(b$$286, v27348);
      }
      var v27349 = a$$426.ui;
      var v25586 = v27349.ddmanager;
      if (v25586) {
        var v28453 = a$$426.ui;
        var v27350 = v28453.ddmanager;
        introspect(JAM.policy.p3) {
          v27350.dragStart(this, b$$286);
        }
      }
      v11885 = !0;
    }
    return v11885;
  }
  function v1169(b$$285) {
    function v1168() {
      introspect(JAM.policy.p3) {
        var v17524 = a$$426('<div class="ui-draggable-iframeFix" style="background: #fff;"></div>')
      }
      var v25587 = this.offsetWidth;
      var v22989 = v25587 + "px";
      var v25588 = this.offsetHeight;
      var v22990 = v25588 + "px";
      var v17525 = {width:v22989, height:v22990, position:"absolute", opacity:"0.001", zIndex:1E3};
      introspect(JAM.policy.p3) {
        var v11886 = v17524.css(v17525)
      }
      introspect(JAM.policy.p3) {
        var v17526 = a$$426(this)
      }
      introspect(JAM.policy.p3) {
        var v11887 = v17526.offset()
      }
      introspect(JAM.policy.p3) {
        var v4954 = v11886.css(v11887)
      }
      introspect(JAM.policy.p3) {
        v4954.appendTo("body");
      }
      return;
    }
    var c$$231 = this.options;
    var v4955;
    var v22991 = this.helper;
    var v25589 = !v22991;
    if (v25589) {
      v22991 = c$$231.disabled;
    }
    var v17527 = v22991;
    var v22993 = !v17527;
    if (v22993) {
      var v25590 = b$$285.target;
      introspect(JAM.policy.p3) {
        var v22992 = a$$426(v25590)
      }
      introspect(JAM.policy.p3) {
        v17527 = v22992.is(".ui-resizable-handle");
      }
    }
    var v11888 = v17527;
    if (v11888) {
      v4955 = !1;
    } else {
      introspect(JAM.policy.p3) {
        var v31111 = this._getHandle(b$$285)
      }
      this.handle = v31111;
      var v17528;
      var v22994 = this.handle;
      if (v22994) {
        var v25591 = c$$231.iframeFix;
        if (v25591) {
          var v29159;
          var v29913 = c$$231.iframeFix;
          var v29914 = !0;
          var v29626 = v29913 === v29914;
          if (v29626) {
            v29159 = "iframe";
          } else {
            v29159 = c$$231.iframeFix;
          }
          var v28454 = v29159;
          introspect(JAM.policy.p3) {
            var v27351 = a$$426(v28454)
          }
          introspect(JAM.policy.p3) {
            v27351.each(v1168);
          }
        }
        v17528 = !0;
      } else {
        v17528 = !1;
      }
      v4955 = v17528;
    }
    return v4955;
  }
  function v1167() {
    var v17529 = this.element;
    introspect(JAM.policy.p3) {
      var v11889 = v17529.data("draggable")
    }
    var v4956 = !v11889;
    if (v4956) {
      return;
    }
    var v25592 = this.element;
    introspect(JAM.policy.p3) {
      var v22995 = v25592.removeData("draggable")
    }
    introspect(JAM.policy.p3) {
      var v17530 = v22995.unbind(".draggable")
    }
    introspect(JAM.policy.p3) {
      v17530.removeClass("ui-draggable ui-draggable-dragging ui-draggable-disabled");
    }
    introspect(JAM.policy.p3) {
      this._mouseDestroy();
    }
    return this;
  }
  function v1166() {
    var v28455 = this.options;
    var v27352 = v28455.helper;
    var v25593 = v27352 == "original";
    if (v25593) {
      var v29160 = this.element;
      introspect(JAM.policy.p3) {
        var v28456 = v29160.css("position")
      }
      introspect(JAM.policy.p3) {
        var v27353 = /^(?:r|a|f)/.test(v28456)
      }
      v25593 = !v27353;
    }
    var v22996 = v25593;
    if (v22996) {
      var v28457 = this.element;
      var v27354 = v28457[0];
      var v25594 = v27354.style;
      v25594.position = "relative";
    }
    var v25595 = this.options;
    var v22997 = v25595.addClasses;
    if (v22997) {
      var v25596 = this.element;
      introspect(JAM.policy.p3) {
        v25596.addClass("ui-draggable");
      }
    }
    var v22998 = this.options;
    var v17531 = v22998.disabled;
    if (v17531) {
      var v22999 = this.element;
      introspect(JAM.policy.p3) {
        v22999.addClass("ui-draggable-disabled");
      }
    }
    introspect(JAM.policy.p3) {
      this._mouseInit();
    }
    return;
  }
  var v29915 = a$$426.ui;
  var v29627 = v29915.mouse;
  var v30159 = !0;
  var v30160 = !1;
  var v30161 = !1;
  var v30162 = !1;
  var v30163 = !1;
  var v30164 = !1;
  var v30165 = !1;
  var v30166 = !1;
  var v30167 = !1;
  var v30168 = !1;
  var v30169 = !1;
  var v30170 = !0;
  var v30171 = !1;
  var v30172 = !1;
  var v30173 = !1;
  var v29916 = {addClasses:v30159, appendTo:"parent", axis:v30160, connectToSortable:v30161, containment:v30162, cursor:"auto", cursorAt:v30163, grid:v30164, handle:v30165, helper:"original", iframeFix:v30166, opacity:v30167, refreshPositions:v30168, revert:v30169, revertDuration:500, scope:"default", scroll:v30170, scrollSensitivity:20, scrollSpeed:20, snap:v30171, snapMode:"both", snapTolerance:20, stack:v30172, zIndex:v30173};
  var v29628 = {widgetEventPrefix:"drag", options:v29916, _create:v1166, destroy:v1167, _mouseCapture:v1169, _mouseStart:v1170, _mouseDrag:v1171, _mouseStop:v1173, _mouseUp:v1175, cancel:v1176, _getHandle:v1178, _createHelper:v1179, _adjustOffsetFromHelper:v1180, _getParentOffset:v1181, _getRelativeOffset:v1182, _cacheMargins:v1183, _cacheHelperProportions:v1184, _setContainment:v1185, _convertPositionTo:v1186, _generatePosition:v1187, _clear:v1188, _trigger:v1189, plugins:{}, _uiHash:v1190};
  introspect(JAM.policy.p3) {
    a$$426.widget("ui.draggable", v29627, v29628);
  }
  var v29917 = a$$426.ui;
  var v29629 = v29917.draggable;
  var v29630 = {version:"1.8.24"};
  introspect(JAM.policy.p3) {
    a$$426.extend(v29629, v29630);
  }
  var v29631 = a$$426.ui;
  var v29161 = v29631.plugin;
  var v29162 = {start:v1192, stop:v1194, drag:v1197};
  introspect(JAM.policy.p3) {
    v29161.add("draggable", "connectToSortable", v29162);
  }
  var v29163 = a$$426.ui;
  var v28458 = v29163.plugin;
  var v28459 = {start:v1198, stop:v1199};
  introspect(JAM.policy.p3) {
    v28458.add("draggable", "cursor", v28459);
  }
  var v28460 = a$$426.ui;
  var v27355 = v28460.plugin;
  var v27356 = {start:v1200, stop:v1201};
  introspect(JAM.policy.p3) {
    v27355.add("draggable", "opacity", v27356);
  }
  var v27357 = a$$426.ui;
  var v25597 = v27357.plugin;
  var v25598 = {start:v1202, drag:v1203};
  introspect(JAM.policy.p3) {
    v25597.add("draggable", "scroll", v25598);
  }
  var v25599 = a$$426.ui;
  var v23000 = v25599.plugin;
  var v23001 = {start:v1205, drag:v1206};
  introspect(JAM.policy.p3) {
    v23000.add("draggable", "snap", v23001);
  }
  var v23002 = a$$426.ui;
  var v17532 = v23002.plugin;
  var v17533 = {start:v1209};
  introspect(JAM.policy.p3) {
    v17532.add("draggable", "stack", v17533);
  }
  var v17534 = a$$426.ui;
  var v11890 = v17534.plugin;
  var v11891 = {start:v1210, stop:v1211};
  introspect(JAM.policy.p3) {
    v11890.add("draggable", "zIndex", v11891);
  }
  return;
}
function v1165(a$$415, b$$279) {
  function v1164(a$$425) {
    return !0;
  }
  function v1163(a$$424) {
    return;
  }
  function v1162(a$$423) {
    return;
  }
  function v1161(a$$422) {
    return;
  }
  function v1160(a$$421) {
    return this.mouseDelayMet;
  }
  function v1159(a$$420) {
    var v25600 = this._mouseDownEvent;
    var v23003 = v25600.pageX;
    var v23004 = a$$420.pageX;
    var v17535 = v23003 - v23004;
    introspect(JAM.policy.p3) {
      var v11892 = Math.abs(v17535)
    }
    var v25601 = this._mouseDownEvent;
    var v23005 = v25601.pageY;
    var v23006 = a$$420.pageY;
    var v17536 = v23005 - v23006;
    introspect(JAM.policy.p3) {
      var v11893 = Math.abs(v17536)
    }
    introspect(JAM.policy.p3) {
      var v4957 = Math.max(v11892, v11893)
    }
    var v11894 = this.options;
    var v4958 = v11894.distance;
    return v4957 >= v4958;
  }
  function v1158(b$$283) {
    introspect(JAM.policy.p3) {
      var v23007 = a$$415(document)
    }
    var v25602 = this.widgetName;
    var v23008 = "mousemove." + v25602;
    var v23009 = this._mouseMoveDelegate;
    introspect(JAM.policy.p3) {
      var v17537 = v23007.unbind(v23008, v23009)
    }
    var v23010 = this.widgetName;
    var v17538 = "mouseup." + v23010;
    var v17539 = this._mouseUpDelegate;
    introspect(JAM.policy.p3) {
      v17537.unbind(v17538, v17539);
    }
    var v17540 = this._mouseStarted;
    if (v17540) {
      this._mouseStarted = !1;
      var v28461 = b$$283.target;
      var v29164 = this._mouseDownEvent;
      var v28462 = v29164.target;
      var v27358 = v28461 == v28462;
      if (v27358) {
        var v28463 = b$$283.target;
        var v29165 = this.widgetName;
        var v28464 = v29165 + ".preventClickEvent";
        var v28465 = !0;
        introspect(JAM.policy.p3) {
          a$$415.data(v28463, v28464, v28465);
        }
      }
      introspect(JAM.policy.p3) {
        this._mouseStop(b$$283);
      }
    }
    return !1;
  }
  function v1157(b$$282) {
    var v4959;
    var v27359 = a$$415.browser;
    var v25603 = v27359.msie;
    var v23011 = !v25603;
    var v25605 = !v23011;
    if (v25605) {
      var v25604 = document.documentMode;
      v23011 = v25604 >= 9;
    }
    var v17541 = v23011;
    var v23013 = !v17541;
    if (v23013) {
      var v25606 = b$$282.button;
      var v23012 = !v25606;
      v17541 = !v23012;
    }
    var v11896 = v17541;
    if (v11896) {
      var v11895;
      var v17542 = this._mouseStarted;
      if (v17542) {
        introspect(JAM.policy.p3) {
          this._mouseDrag(b$$282);
        }
        introspect(JAM.policy.p3) {
          v11895 = b$$282.preventDefault();
        }
      } else {
        introspect(JAM.policy.p3) {
          var v25607 = this._mouseDistanceMet(b$$282)
        }
        if (v25607) {
          v25607 = this.mouseDelayMet;
        }
        var v23014 = v25607;
        if (v23014) {
          var v28466 = this._mouseDownEvent;
          introspect(JAM.policy.p3) {
            var v27360 = this._mouseStart(v28466, b$$282)
          }
          var v27361 = !1;
          this._mouseStarted = v27360 !== v27361;
          var v27362;
          var v28467 = this._mouseStarted;
          if (v28467) {
            introspect(JAM.policy.p3) {
              v27362 = this._mouseDrag(b$$282);
            }
          } else {
            introspect(JAM.policy.p3) {
              v27362 = this._mouseUp(b$$282);
            }
          }
          v27362;
        }
        var v23015 = this._mouseStarted;
        v11895 = !v23015;
      }
      v4959 = v11895;
    } else {
      introspect(JAM.policy.p3) {
        v4959 = this._mouseUp(b$$282);
      }
    }
    return v4959;
  }
  function v1156(b$$281) {
    function v1155(a$$419) {
      introspect(JAM.policy.p3) {
        return d$$181._mouseUp(a$$419);
      }
    }
    function v1154(a$$418) {
      introspect(JAM.policy.p3) {
        return d$$181._mouseMove(a$$418);
      }
    }
    function v1153() {
      d$$181.mouseDelayMet = !0;
      return;
    }
    if (c$$229) {
      return;
    }
    var v11897 = this._mouseStarted;
    if (v11897) {
      introspect(JAM.policy.p3) {
        this._mouseUp(b$$281);
      }
    }
    this._mouseDownEvent = b$$281;
    var d$$181 = this;
    var v4960 = b$$281.which;
    var e$$181 = v4960 == 1;
    var v4961;
    var v27363 = this.options;
    var v25608 = v27363.cancel;
    var v23016 = typeof v25608;
    var v17543 = v23016 == "string";
    if (v17543) {
      var v23017 = b$$281.target;
      v17543 = v23017.nodeName;
    }
    var v11899 = v17543;
    if (v11899) {
      var v23018 = b$$281.target;
      introspect(JAM.policy.p3) {
        var v17544 = a$$415(v23018)
      }
      var v23019 = this.options;
      var v17545 = v23019.cancel;
      introspect(JAM.policy.p3) {
        var v11898 = v17544.closest(v17545)
      }
      v4961 = v11898.length;
    } else {
      v4961 = !1;
    }
    var f$$58 = v4961;
    var v17546 = !e$$181;
    var v23020 = !v17546;
    if (v23020) {
      v17546 = f$$58;
    }
    var v11900 = v17546;
    var v17548 = !v11900;
    if (v17548) {
      introspect(JAM.policy.p3) {
        var v17547 = this._mouseCapture(b$$281)
      }
      v11900 = !v17547;
    }
    var v4962 = v11900;
    if (v4962) {
      return !0;
    }
    var v17549 = this.options;
    var v11901 = v17549.delay;
    this.mouseDelayMet = !v11901;
    var v11902 = this.mouseDelayMet;
    var v17551 = !v11902;
    if (v17551) {
      var v23021 = this.options;
      var v17550 = v23021.delay;
      var v31112 = setTimeout(v1153, v17550);
      this._mouseDelayTimer = v31112;
    }
    introspect(JAM.policy.p3) {
      var v11903 = this._mouseDistanceMet(b$$281)
    }
    if (v11903) {
      v11903 = this.mouseDelayMet;
    }
    var v4966 = v11903;
    if (v4966) {
      introspect(JAM.policy.p3) {
        var v4963 = this._mouseStart(b$$281)
      }
      var v4964 = !1;
      this._mouseStarted = v4963 !== v4964;
      var v11904 = this._mouseStarted;
      var v4965 = !v11904;
      if (v4965) {
        introspect(JAM.policy.p3) {
          b$$281.preventDefault();
        }
        return !0;
      }
    }
    var v29166 = !0;
    var v29632 = b$$281.target;
    var v29918 = this.widgetName;
    var v29633 = v29918 + ".preventClickEvent";
    introspect(JAM.policy.p3) {
      var v29167 = a$$415.data(v29632, v29633)
    }
    var v28468 = v29166 === v29167;
    if (v28468) {
      var v29168 = b$$281.target;
      var v29634 = this.widgetName;
      var v29169 = v29634 + ".preventClickEvent";
      introspect(JAM.policy.p3) {
        a$$415.removeData(v29168, v29169);
      }
    }
    this._mouseMoveDelegate = v1154;
    this._mouseUpDelegate = v1155;
    introspect(JAM.policy.p3) {
      var v27364 = a$$415(document)
    }
    var v28469 = this.widgetName;
    var v27365 = "mousemove." + v28469;
    var v27366 = this._mouseMoveDelegate;
    introspect(JAM.policy.p3) {
      var v25609 = v27364.bind(v27365, v27366)
    }
    var v27367 = this.widgetName;
    var v25610 = "mouseup." + v27367;
    var v25611 = this._mouseUpDelegate;
    introspect(JAM.policy.p3) {
      v25609.bind(v25610, v25611);
    }
    introspect(JAM.policy.p3) {
      b$$281.preventDefault();
    }
    c$$229 = !0;
    return !0;
  }
  function v1152() {
    var v11905 = this.element;
    var v17552 = this.widgetName;
    var v11906 = "." + v17552;
    introspect(JAM.policy.p3) {
      v11905.unbind(v11906);
    }
    var v11907 = this._mouseMoveDelegate;
    if (v11907) {
      introspect(JAM.policy.p3) {
        var v23022 = a$$415(document)
      }
      var v25612 = this.widgetName;
      var v23023 = "mousemove." + v25612;
      var v23024 = this._mouseMoveDelegate;
      introspect(JAM.policy.p3) {
        var v17553 = v23022.unbind(v23023, v23024)
      }
      var v23025 = this.widgetName;
      var v17554 = "mouseup." + v23025;
      var v17555 = this._mouseUpDelegate;
      introspect(JAM.policy.p3) {
        v17553.unbind(v17554, v17555);
      }
    }
    return;
  }
  function v1151() {
    function v1150(c$$230) {
      var v11908 = !0;
      var v17556 = c$$230.target;
      var v23026 = b$$280.widgetName;
      var v17557 = v23026 + ".preventClickEvent";
      introspect(JAM.policy.p3) {
        var v11909 = a$$415.data(v17556, v17557)
      }
      var v4967 = v11908 === v11909;
      if (v4967) {
        var v17558 = c$$230.target;
        var v23027 = b$$280.widgetName;
        var v17559 = v23027 + ".preventClickEvent";
        introspect(JAM.policy.p3) {
          a$$415.removeData(v17558, v17559);
        }
        introspect(JAM.policy.p3) {
          c$$230.stopImmediatePropagation();
        }
        return !1;
      }
      return;
    }
    function v1149(a$$417) {
      introspect(JAM.policy.p3) {
        return b$$280._mouseDown(a$$417);
      }
    }
    var b$$280 = this;
    var v17560 = this.element;
    var v23028 = this.widgetName;
    var v17561 = "mousedown." + v23028;
    introspect(JAM.policy.p3) {
      var v11910 = v17560.bind(v17561, v1149)
    }
    var v17562 = this.widgetName;
    var v11911 = "click." + v17562;
    introspect(JAM.policy.p3) {
      v11910.bind(v11911, v1150);
    }
    this.started = !1;
    return;
  }
  function v1148(a$$416) {
    c$$229 = !1;
    return;
  }
  var c$$229 = !1;
  introspect(JAM.policy.p3) {
    var v11912 = a$$415(document)
  }
  introspect(JAM.policy.p3) {
    v11912.mouseup(v1148);
  }
  var v17563 = {cancel:":input,option", distance:1, delay:0};
  var v11913 = {options:v17563, _mouseInit:v1151, _mouseDestroy:v1152, _mouseDown:v1156, _mouseMove:v1157, _mouseUp:v1158, _mouseDistanceMet:v1159, _mouseDelayMet:v1160, _mouseStart:v1161, _mouseDrag:v1162, _mouseStop:v1163, _mouseCapture:v1164};
  introspect(JAM.policy.p3) {
    a$$415.widget("ui.mouse", v11913);
  }
  return;
}
function v1147(a$$410, b$$266) {
  function v1146(b$$278, c$$228, d$$180) {
    var e$$180;
    var f$$57;
    var v4968 = this.options;
    var g$$106 = v4968[b$$278];
    d$$180 = d$$180 || {};
    introspect(JAM.policy.p3) {
      c$$228 = a$$410.Event(c$$228);
    }
    var v25613;
    var v28470 = this.widgetEventPrefix;
    var v27369 = b$$278 === v28470;
    if (v27369) {
      v25613 = b$$278;
    } else {
      var v27368 = this.widgetEventPrefix;
      v25613 = v27368 + b$$278;
    }
    var v23029 = v25613;
    introspect(JAM.policy.p3) {
      var v31113 = v23029.toLowerCase()
    }
    c$$228.type = v31113;
    var v17564 = this.element;
    c$$228.target = v17564[0];
    f$$57 = c$$228.originalEvent;
    if (f$$57) {
      for (e$$180 in f$$57) {
        var v4969 = e$$180 in c$$228;
        var v11914 = !v4969;
        if (v11914) {
          introspect(JAM.policy.p2) {
            c$$228[e$$180] = f$$57[e$$180];
          }
        }
      }
    }
    var v11915 = this.element;
    introspect(JAM.policy.p3) {
      v11915.trigger(c$$228, d$$180);
    }
    introspect(JAM.policy.p3) {
      var v23030 = a$$410.isFunction(g$$106)
    }
    if (v23030) {
      var v28471 = this.element;
      var v27370 = v28471[0];
      introspect(JAM.policy.p3) {
        var v25614 = g$$106.call(v27370, c$$228, d$$180)
      }
      var v25615 = !1;
      v23030 = v25614 === v25615;
    }
    var v17565 = v23030;
    var v23031 = !v17565;
    if (v23031) {
      introspect(JAM.policy.p3) {
        v17565 = c$$228.isDefaultPrevented();
      }
    }
    var v11916 = v17565;
    return !v11916;
  }
  function v1145() {
    var v4970 = !0;
    introspect(JAM.policy.p3) {
      return this._setOption("disabled", v4970);
    }
  }
  function v1144() {
    var v4971 = !1;
    introspect(JAM.policy.p3) {
      return this._setOption("disabled", v4971);
    }
  }
  function v1143(a$$414, b$$277) {
    var v17566 = this.options;
    introspect(JAM.policy.p2) {
      v17566[a$$414] = b$$277;
    }
    var v17567 = a$$414 === "disabled";
    if (v17567) {
      introspect(JAM.policy.p3) {
        var v25616 = this.widget()
      }
      var v27371;
      if (b$$277) {
        v27371 = "addClass";
      } else {
        v27371 = "removeClass";
      }
      var v25617 = v27371;
      var v29170 = this.widgetBaseClass;
      var v28472 = v29170 + "-disabled";
      var v27372 = v28472 + " ";
      var v25618 = v27372 + "ui-state-disabled";
      introspect(JAM.policy.p3) {
        var v23032 = v25616[v25617](v25618)
      }
      introspect(JAM.policy.p3) {
        v23032.attr("aria-disabled", b$$277);
      }
    }
    return this;
  }
  function v1142(b$$275) {
    function v1141(a$$413, b$$276) {
      introspect(JAM.policy.p3) {
        c$$227._setOption(a$$413, b$$276);
      }
      return;
    }
    var c$$227 = this;
    introspect(JAM.policy.p3) {
      a$$410.each(b$$275, v1141);
    }
    return this;
  }
  function v1140(c$$226, d$$179) {
    var e$$179 = c$$226;
    var v11917 = arguments.length;
    var v4973 = v11917 === 0;
    if (v4973) {
      var v4972 = this.options;
      introspect(JAM.policy.p3) {
        return a$$410.extend({}, v4972);
      }
    }
    var v11918 = typeof c$$226;
    var v4976 = v11918 == "string";
    if (v4976) {
      var v4975 = d$$179 === b$$266;
      if (v4975) {
        var v4974 = this.options;
        return v4974[c$$226];
      }
      e$$179 = {};
      introspect(JAM.policy.p2) {
        e$$179[c$$226] = d$$179;
      }
    }
    introspect(JAM.policy.p3) {
      this._setOptions(e$$179);
    }
    return this;
  }
  function v1139() {
    return this.element;
  }
  function v1138() {
    var v17568 = this.element;
    var v23033 = this.widgetName;
    var v17569 = "." + v23033;
    introspect(JAM.policy.p3) {
      var v11919 = v17568.unbind(v17569)
    }
    var v11920 = this.widgetName;
    introspect(JAM.policy.p3) {
      v11919.removeData(v11920);
    }
    introspect(JAM.policy.p3) {
      var v23034 = this.widget()
    }
    var v25619 = this.widgetName;
    var v23035 = "." + v25619;
    introspect(JAM.policy.p3) {
      var v17570 = v23034.unbind(v23035)
    }
    introspect(JAM.policy.p3) {
      var v11921 = v17570.removeAttr("aria-disabled")
    }
    var v23036 = this.widgetBaseClass;
    var v17571 = v23036 + "-disabled ";
    var v11922 = v17571 + "ui-state-disabled";
    introspect(JAM.policy.p3) {
      v11921.removeClass(v11922);
    }
    return;
  }
  function v1137() {
    return;
  }
  function v1136() {
    return;
  }
  function v1135() {
    var v4977 = a$$410.metadata;
    if (v4977) {
      var v17572 = a$$410.metadata;
      var v23037 = this.element;
      var v17573 = v23037[0];
      introspect(JAM.policy.p3) {
        var v11923 = v17572.get(v17573)
      }
      var v11924 = this.widgetName;
      v4977 = v11923[v11924];
    }
    return v4977;
  }
  function v1134(b$$274, c$$225) {
    function v1133() {
      introspect(JAM.policy.p3) {
        d$$178.destroy();
      }
      return;
    }
    var v17574 = this.widgetName;
    introspect(JAM.policy.p3) {
      a$$410.data(c$$225, v17574, this);
    }
    introspect(JAM.policy.p3) {
      var v31114 = a$$410(c$$225)
    }
    this.element = v31114;
    var v11925 = !0;
    var v11926 = this.options;
    introspect(JAM.policy.p3) {
      var v11927 = this._getCreateOptions()
    }
    introspect(JAM.policy.p3) {
      var v31115 = a$$410.extend(v11925, {}, v11926, v11927, b$$274)
    }
    this.options = v31115;
    var d$$178 = this;
    var v23038 = this.element;
    var v25620 = this.widgetName;
    var v23039 = "remove." + v25620;
    introspect(JAM.policy.p3) {
      v23038.bind(v23039, v1133);
    }
    introspect(JAM.policy.p3) {
      this._create();
    }
    introspect(JAM.policy.p3) {
      this._trigger("create");
    }
    introspect(JAM.policy.p3) {
      this._init();
    }
    return;
  }
  function v1132(a$$412, b$$273) {
    var v4978 = arguments.length;
    if (v4978) {
      introspect(JAM.policy.p3) {
        this._createWidget(a$$412, b$$273);
      }
    }
    return;
  }
  function v1131(c$$224, d$$176) {
    function v1130(e$$178) {
      function v1129() {
        introspect(JAM.policy.p3) {
          var b$$272 = a$$410.data(this, c$$224)
        }
        var v4979;
        if (b$$272) {
          var v17575 = e$$178 || {};
          introspect(JAM.policy.p3) {
            var v11928 = b$$272.option(v17575)
          }
          introspect(JAM.policy.p3) {
            v4979 = v11928._init();
          }
        } else {
          var v11929 = new d$$176(e$$178, this);
          introspect(JAM.policy.p3) {
            v4979 = a$$410.data(this, c$$224, v11929);
          }
        }
        v4979;
        return;
      }
      function v1128() {
        introspect(JAM.policy.p3) {
          var d$$177 = a$$410.data(this, c$$224)
        }
        var v4980;
        var v17576 = d$$177;
        if (v17576) {
          var v23040 = d$$177[e$$178];
          introspect(JAM.policy.p3) {
            v17576 = a$$410.isFunction(v23040);
          }
        }
        var v11931 = v17576;
        if (v11931) {
          var v11930 = d$$177[e$$178];
          introspect(JAM.policy.p3) {
            v4980 = v11930.apply(d$$177, g$$105);
          }
        } else {
          v4980 = d$$177;
        }
        var f$$56 = v4980;
        var v11932 = f$$56 !== d$$177;
        if (v11932) {
          v11932 = f$$56 !== b$$266;
        }
        var v4981 = v11932;
        if (v4981) {
          h$$86 = f$$56;
          return !1;
        }
        return;
      }
      var v4982 = typeof e$$178;
      var f$$55 = v4982 == "string";
      var v11933 = Array.prototype;
      var v4983 = v11933.slice;
      introspect(JAM.policy.p3) {
        var g$$105 = v4983.call(arguments, 1)
      }
      var h$$86 = this;
      var v11934;
      var v23041 = !f$$55;
      if (v23041) {
        v23041 = g$$105.length;
      }
      var v17579 = v23041;
      if (v17579) {
        var v17577 = a$$410.extend;
        var v25621 = !0;
        var v23042 = [v25621, e$$178];
        introspect(JAM.policy.p3) {
          var v17578 = v23042.concat(g$$105)
        }
        introspect(JAM.policy.p3) {
          v11934 = v17577.apply(null, v17578);
        }
      } else {
        v11934 = e$$178;
      }
      e$$178 = v11934;
      var v11935;
      var v23043 = f$$55;
      if (v23043) {
        introspect(JAM.policy.p3) {
          var v25622 = e$$178.charAt(0)
        }
        v23043 = v25622 === "_";
      }
      var v17580 = v23043;
      if (v17580) {
        v11935 = h$$86;
      } else {
        var v23044;
        if (f$$55) {
          introspect(JAM.policy.p3) {
            v23044 = this.each(v1128);
          }
        } else {
          introspect(JAM.policy.p3) {
            v23044 = this.each(v1129);
          }
        }
        v23044;
        v11935 = h$$86;
      }
      return v11935;
    }
    var v4984 = a$$410.fn;
    introspect(JAM.policy.p2) {
      v4984[c$$224] = v1130;
    }
    return;
  }
  function v1127(b$$270, c$$222, d$$175) {
    function v1126(a$$411, b$$271) {
      var v4985 = arguments.length;
      if (v4985) {
        introspect(JAM.policy.p3) {
          this._createWidget(a$$411, b$$271);
        }
      }
      return;
    }
    function v1125(c$$223) {
      introspect(JAM.policy.p3) {
        var v11936 = a$$410.data(c$$223, b$$270)
      }
      var v4986 = !v11936;
      return !v4986;
    }
    introspect(JAM.policy.p3) {
      var v4987 = b$$270.split(".")
    }
    var e$$177 = v4987[0];
    var f$$54;
    introspect(JAM.policy.p3) {
      var v27373 = b$$270.split(".")
    }
    b$$270 = v27373[1];
    var v27374 = e$$177 + "-";
    f$$54 = v27374 + b$$270;
    var v27375 = !d$$175;
    if (v27375) {
      d$$175 = c$$222;
      c$$222 = a$$410.Widget;
    }
    var v25623 = a$$410.expr;
    var v23045 = v25623[":"];
    introspect(JAM.policy.p2) {
      v23045[f$$54] = v1125;
    }
    var v17581 = a$$410[e$$177];
    var v23046 = !v17581;
    if (v23046) {
      v17581 = {};
    }
    introspect(JAM.policy.p2) {
      a$$410[e$$177] = v17581;
    }
    var v11937 = a$$410[e$$177];
    introspect(JAM.policy.p2) {
      v11937[b$$270] = v1126;
    }
    var g$$104 = new c$$222;
    var v17582 = g$$104;
    var v23047 = !0;
    var v23048 = g$$104.options;
    introspect(JAM.policy.p3) {
      var v31116 = a$$410.extend(v23047, {}, v23048)
    }
    v17582.options = v31116;
    var v23049 = a$$410[e$$177];
    var v17583 = v23049[b$$270];
    var v23050 = !0;
    var v29635 = a$$410[e$$177];
    var v29171 = v29635[b$$270];
    var v28473 = v29171.prototype;
    var v27376 = v28473.widgetEventPrefix;
    var v28474 = !v27376;
    if (v28474) {
      v27376 = b$$270;
    }
    var v25624 = v27376;
    var v23051 = {namespace:e$$177, widgetName:b$$270, widgetEventPrefix:v25624, widgetBaseClass:f$$54};
    introspect(JAM.policy.p3) {
      var v31117 = a$$410.extend(v23050, g$$104, v23051, d$$175)
    }
    v17583.prototype = v31117;
    var v11938 = a$$410.widget;
    var v17584 = a$$410[e$$177];
    var v11939 = v17584[b$$270];
    introspect(JAM.policy.p3) {
      v11938.bridge(b$$270, v11939);
    }
    return;
  }
  function v1124(b$$268, c$$221) {
    function v1123() {
      function v1122() {
        try {
          introspect(JAM.policy.p3) {
            var v4988 = a$$410(this)
          }
          introspect(JAM.policy.p3) {
            v4988.triggerHandler("remove");
          }
        } catch (b$$269) {
        }
        return;
      }
      var v17586 = !c$$221;
      if (v17586) {
        var v23052 = !b$$268;
        var v25626 = !v23052;
        if (v25626) {
          var v27377 = [this];
          introspect(JAM.policy.p3) {
            var v25625 = a$$410.filter(b$$268, v27377)
          }
          v23052 = v25625.length;
        }
        var v17585 = v23052;
        if (v17585) {
          introspect(JAM.policy.p3) {
            var v25627 = a$$410("*", this)
          }
          var v25628 = [this];
          introspect(JAM.policy.p3) {
            var v23053 = v25627.add(v25628)
          }
          introspect(JAM.policy.p3) {
            v23053.each(v1122);
          }
        }
      }
      introspect(JAM.policy.p3) {
        var v11940 = a$$410(this)
      }
      introspect(JAM.policy.p3) {
        return d$$173.call(v11940, b$$268, c$$221);
      }
    }
    introspect(JAM.policy.p3) {
      return this.each(v1123);
    }
  }
  function v1121(b$$267) {
    var d$$174 = 0;
    var e$$176;
    var v11941 = e$$176 = b$$267[d$$174];
    var v4990 = v11941 != null;
    for (;v4990;) {
      try {
        introspect(JAM.policy.p3) {
          var v4989 = a$$410(e$$176)
        }
        introspect(JAM.policy.p3) {
          v4989.triggerHandler("remove");
        }
      } catch (f$$53) {
      }
      d$$174++;
      var v11942 = e$$176 = b$$267[d$$174];
      v4990 = v11942 != null;
    }
    introspect(JAM.policy.p3) {
      c$$220(b$$267);
    }
    return;
  }
  var v4993 = a$$410.cleanData;
  if (v4993) {
    var c$$220 = a$$410.cleanData;
    a$$410.cleanData = v1121;
  } else {
    var v4991 = a$$410.fn;
    var d$$173 = v4991.remove;
    var v4992 = a$$410.fn;
    v4992.remove = v1124;
  }
  a$$410.widget = v1127;
  var v23054 = a$$410.widget;
  v23054.bridge = v1131;
  a$$410.Widget = v1132;
  var v11943 = a$$410.Widget;
  var v23055 = !1;
  var v17587 = {disabled:v23055};
  v11943.prototype = {widgetName:"widget", widgetEventPrefix:"", options:v17587, _createWidget:v1134, _getCreateOptions:v1135, _create:v1136, _init:v1137, destroy:v1138, widget:v1139, option:v1140, _setOptions:v1142, _setOption:v1143, enable:v1144, disable:v1145, _trigger:v1146};
  return;
}
function v1120(a$$405, b$$248) {
  function v1119(b$$265, c$$219, d$$172, e$$175, f$$52, g$$103) {
    var v11944 = a$$405.ui;
    introspect(JAM.policy.p3) {
      var v4994 = v11944.isOverAxis(b$$265, d$$172, f$$52)
    }
    if (v4994) {
      var v11945 = a$$405.ui;
      introspect(JAM.policy.p3) {
        v4994 = v11945.isOverAxis(c$$219, e$$175, g$$103);
      }
    }
    return v4994;
  }
  function v1118(a$$409, b$$264, c$$218) {
    var v4995 = a$$409 > b$$264;
    if (v4995) {
      var v11946 = b$$264 + c$$218;
      v4995 = a$$409 < v11946;
    }
    return v4995;
  }
  function v1117(b$$263, c$$217) {
    introspect(JAM.policy.p3) {
      var v17588 = a$$405(b$$263)
    }
    introspect(JAM.policy.p3) {
      var v11947 = v17588.css("overflow")
    }
    var v4996 = v11947 === "hidden";
    if (v4996) {
      return !1;
    }
    var v4997;
    var v17589 = c$$217;
    if (v17589) {
      v17589 = c$$217 === "left";
    }
    var v11948 = v17589;
    if (v11948) {
      v4997 = "scrollLeft";
    } else {
      v4997 = "scrollTop";
    }
    var d$$171 = v4997;
    var e$$174 = !1;
    var v4998;
    var v17590 = b$$263[d$$171];
    var v11949 = v17590 > 0;
    if (v11949) {
      v4998 = !0;
    } else {
      introspect(JAM.policy.p2) {
        b$$263[d$$171] = 1;
      }
      var v25629 = b$$263[d$$171];
      e$$174 = v25629 > 0;
      introspect(JAM.policy.p2) {
        b$$263[d$$171] = 0;
      }
      v4998 = e$$174;
    }
    return v4998;
  }
  function v1116(a$$408, b$$262) {
    var v4999;
    var v11952 = document.compareDocumentPosition;
    if (v11952) {
      introspect(JAM.policy.p3) {
        var v11950 = a$$408.compareDocumentPosition(b$$262)
      }
      v4999 = v11950 & 16;
    } else {
      var v11951 = a$$408 !== b$$262;
      if (v11951) {
        introspect(JAM.policy.p3) {
          v11951 = a$$408.contains(b$$262);
        }
      }
      v4999 = v11951;
    }
    return v4999;
  }
  function v1115(a$$407, b$$261, c$$216) {
    var v5000 = a$$407.plugins;
    var d$$170 = v5000[b$$261];
    var v11953 = !d$$170;
    var v17592 = !v11953;
    if (v17592) {
      var v25630 = a$$407.element;
      var v23056 = v25630[0];
      var v17591 = v23056.parentNode;
      v11953 = !v17591;
    }
    var v5001 = v11953;
    if (v5001) {
      return;
    }
    var e$$173 = 0;
    var v11954 = d$$170.length;
    var v5003 = e$$173 < v11954;
    for (;v5003;) {
      var v11955 = a$$407.options;
      var v17593 = d$$170[e$$173];
      var v11956 = v17593[0];
      var v5002 = v11955[v11956];
      if (v5002) {
        var v17594 = d$$170[e$$173];
        var v11957 = v17594[1];
        var v11958 = a$$407.element;
        introspect(JAM.policy.p3) {
          v11957.apply(v11958, c$$216);
        }
      }
      e$$173++;
      var v11959 = d$$170.length;
      v5003 = e$$173 < v11959;
    }
    return;
  }
  function v1114(b$$260, c$$215, d$$169) {
    var v11960 = a$$405.ui;
    var v5004 = v11960[b$$260];
    var e$$172 = v5004.prototype;
    var f$$51;
    for (f$$51 in d$$169) {
      var v11961 = e$$172.plugins;
      var v23057 = e$$172.plugins;
      var v17595 = v23057[f$$51];
      var v23058 = !v17595;
      if (v23058) {
        v17595 = [];
      }
      introspect(JAM.policy.p2) {
        v11961[f$$51] = v17595;
      }
      var v17596 = e$$172.plugins;
      var v11962 = v17596[f$$51];
      var v17597 = d$$169[f$$51];
      var v11963 = [c$$215, v17597];
      introspect(JAM.policy.p3) {
        v11962.push(v11963);
      }
    }
    return;
  }
  function v1113() {
    var b$$259 = document.body;
    introspect(JAM.policy.p3) {
      var v5005 = c$$214 = document.createElement("div")
    }
    introspect(JAM.policy.p3) {
      var c$$214 = b$$259.appendChild(v5005)
    }
    c$$214.offsetHeight;
    var v25631 = c$$214.style;
    var v25632 = {minHeight:"100px", height:"auto", padding:0, borderWidth:0};
    introspect(JAM.policy.p3) {
      a$$405.extend(v25631, v25632);
    }
    var v23059 = a$$405.support;
    var v25633 = c$$214.offsetHeight;
    v23059.minHeight = v25633 === 100;
    var v17598 = a$$405.support;
    v17598.selectstart = "onselectstart" in c$$214;
    introspect(JAM.policy.p3) {
      var v17599 = b$$259.removeChild(c$$214)
    }
    var v11964 = v17599.style;
    v11964.display = "none";
    return;
  }
  function v1112(b$$258) {
    introspect(JAM.policy.p3) {
      var d$$168 = a$$405.attr(b$$258, "tabindex")
    }
    var e$$171 = isNaN(d$$168);
    var v11965 = e$$171;
    var v17600 = !v11965;
    if (v17600) {
      v11965 = d$$168 >= 0;
    }
    var v5006 = v11965;
    if (v5006) {
      var v11966 = !e$$171;
      v5006 = c$$204(b$$258, v11966);
    }
    return v5006;
  }
  function v1111(b$$257) {
    introspect(JAM.policy.p3) {
      var v17601 = a$$405.attr(b$$257, "tabindex")
    }
    var v11967 = isNaN(v17601);
    var v5007 = !v11967;
    return c$$204(b$$257, v5007);
  }
  function v1110(b$$256, c$$213, d$$167) {
    var v17602 = d$$167[3];
    introspect(JAM.policy.p3) {
      var v11968 = a$$405.data(b$$256, v17602)
    }
    var v5008 = !v11968;
    return !v5008;
  }
  function v1109(b$$255) {
    function v1108(c$$212) {
      introspect(JAM.policy.p3) {
        var v11969 = a$$405.data(c$$212, b$$255)
      }
      var v5009 = !v11969;
      return !v5009;
    }
    return v1108;
  }
  function v1107(c$$208, d$$165) {
    function v1106(b$$254, c$$211) {
      function v1105() {
        introspect(JAM.policy.p3) {
          var v5010 = a$$405(this)
        }
        var v17603 = !0;
        var v11970 = h$$85(this, b$$254, v17603, c$$211);
        var v5011 = v11970 + "px";
        introspect(JAM.policy.p3) {
          v5010.css(f$$49, v5011);
        }
        return;
      }
      var v5012;
      var v17604 = typeof b$$254;
      var v11972 = v17604 != "number";
      if (v11972) {
        var v17605 = "outer" + d$$165;
        var v11971 = g$$102[v17605];
        introspect(JAM.policy.p3) {
          v5012 = v11971.call(this, b$$254);
        }
      } else {
        introspect(JAM.policy.p3) {
          v5012 = this.each(v1105);
        }
      }
      return v5012;
    }
    function v1104(c$$210) {
      function v1103() {
        introspect(JAM.policy.p3) {
          var v5013 = a$$405(this)
        }
        var v11973 = h$$85(this, c$$210);
        var v5014 = v11973 + "px";
        introspect(JAM.policy.p3) {
          v5013.css(f$$49, v5014);
        }
        return;
      }
      var v5015;
      var v11975 = c$$210 === b$$248;
      if (v11975) {
        var v17606 = "inner" + d$$165;
        var v11974 = g$$102[v17606];
        introspect(JAM.policy.p3) {
          v5015 = v11974.call(this);
        }
      } else {
        introspect(JAM.policy.p3) {
          v5015 = this.each(v1103);
        }
      }
      return v5015;
    }
    function h$$85(b$$253, c$$209, d$$166, f$$50) {
      function v1102() {
        var v23060 = c$$209;
        var v28475 = "padding" + this;
        var v28476 = !0;
        introspect(JAM.policy.p3) {
          var v27378 = a$$405.curCSS(b$$253, v28475, v28476)
        }
        var v25634 = parseFloat(v27378);
        var v27379 = !v25634;
        if (v27379) {
          v25634 = 0;
        }
        var v23061 = v25634;
        c$$209 = v23060 - v23061;
        if (d$$166) {
          var v25635 = c$$209;
          var v29636 = "border" + this;
          var v29172 = v29636 + "Width";
          var v29173 = !0;
          introspect(JAM.policy.p3) {
            var v28477 = a$$405.curCSS(b$$253, v29172, v29173)
          }
          var v27380 = parseFloat(v28477);
          var v28478 = !v27380;
          if (v28478) {
            v27380 = 0;
          }
          var v25636 = v27380;
          c$$209 = v25635 - v25636;
        }
        if (f$$50) {
          var v23062 = c$$209;
          var v28479 = "margin" + this;
          var v28480 = !0;
          introspect(JAM.policy.p3) {
            var v27381 = a$$405.curCSS(b$$253, v28479, v28480)
          }
          var v25637 = parseFloat(v27381);
          var v27382 = !v25637;
          if (v27382) {
            v25637 = 0;
          }
          var v23063 = v25637;
          c$$209 = v23062 - v23063;
        }
        return;
      }
      introspect(JAM.policy.p3) {
        a$$405.each(e$$170, v1102);
      }
      return c$$209;
    }
    var v5016;
    var v11976 = d$$165 === "Width";
    if (v11976) {
      v5016 = ["Left", "Right"];
    } else {
      v5016 = ["Top", "Bottom"];
    }
    var e$$170 = v5016;
    introspect(JAM.policy.p3) {
      var f$$49 = d$$165.toLowerCase()
    }
    var v11977 = a$$405.fn;
    var v5017 = v11977.innerWidth;
    var v11978 = a$$405.fn;
    var v5018 = v11978.innerHeight;
    var v11979 = a$$405.fn;
    var v5019 = v11979.outerWidth;
    var v11980 = a$$405.fn;
    var v5020 = v11980.outerHeight;
    var g$$102 = {innerWidth:v5017, innerHeight:v5018, outerWidth:v5019, outerHeight:v5020};
    var v11981 = a$$405.fn;
    var v11982 = "inner" + d$$165;
    introspect(JAM.policy.p2) {
      v11981[v11982] = v1104;
    }
    var v11983 = a$$405.fn;
    var v11984 = "outer" + d$$165;
    introspect(JAM.policy.p2) {
      v11983[v11984] = v1106;
    }
    return;
  }
  function v1101() {
    introspect(JAM.policy.p3) {
      return this.unbind(".ui-disableSelection");
    }
  }
  function v1100() {
    function v1099(a$$406) {
      introspect(JAM.policy.p3) {
        a$$406.preventDefault();
      }
      return;
    }
    var v17607;
    var v25638 = a$$405.support;
    var v23064 = v25638.selectstart;
    if (v23064) {
      v17607 = "selectstart";
    } else {
      v17607 = "mousedown";
    }
    var v11985 = v17607;
    var v5021 = v11985 + ".ui-disableSelection";
    introspect(JAM.policy.p3) {
      return this.bind(v5021, v1099);
    }
  }
  function v1098(c$$207) {
    var v5022 = c$$207 !== b$$248;
    if (v5022) {
      introspect(JAM.policy.p3) {
        return this.css("zIndex", c$$207);
      }
    }
    var v5028 = this.length;
    if (v5028) {
      var v5023 = this[0];
      introspect(JAM.policy.p3) {
        var d$$164 = a$$405(v5023)
      }
      var e$$169;
      var f$$48;
      var v11986 = d$$164.length;
      if (v11986) {
        var v17608 = d$$164[0];
        v11986 = v17608 !== document;
      }
      var v5027 = v11986;
      for (;v5027;) {
        introspect(JAM.policy.p3) {
          e$$169 = d$$164.css("position");
        }
        var v17609 = e$$169 === "absolute";
        var v23065 = !v17609;
        if (v23065) {
          v17609 = e$$169 === "relative";
        }
        var v11987 = v17609;
        var v17610 = !v11987;
        if (v17610) {
          v11987 = e$$169 === "fixed";
        }
        var v5026 = v11987;
        if (v5026) {
          introspect(JAM.policy.p3) {
            var v5024 = d$$164.css("zIndex")
          }
          f$$48 = parseInt(v5024, 10);
          var v17611 = isNaN(f$$48);
          var v11988 = !v17611;
          if (v11988) {
            v11988 = f$$48 !== 0;
          }
          var v5025 = v11988;
          if (v5025) {
            return f$$48;
          }
        }
        introspect(JAM.policy.p3) {
          d$$164 = d$$164.parent();
        }
        var v11989 = d$$164.length;
        if (v11989) {
          var v17612 = d$$164[0];
          v11989 = v17612 !== document;
        }
        v5027 = v11989;
      }
    }
    return 0;
  }
  function v1097() {
    function v1096() {
      introspect(JAM.policy.p3) {
        var v17613 = a$$405.curCSS(this, "overflow", 1)
      }
      introspect(JAM.policy.p3) {
        var v17614 = a$$405.curCSS(this, "overflow-y", 1)
      }
      var v11990 = v17613 + v17614;
      introspect(JAM.policy.p3) {
        var v11991 = a$$405.curCSS(this, "overflow-x", 1)
      }
      var v5029 = v11990 + v11991;
      introspect(JAM.policy.p3) {
        return /(auto|scroll)/.test(v5029);
      }
    }
    function v1095() {
      introspect(JAM.policy.p3) {
        var v11992 = a$$405.curCSS(this, "position", 1)
      }
      introspect(JAM.policy.p3) {
        var v5030 = /(relative|absolute|fixed)/.test(v11992)
      }
      if (v5030) {
        introspect(JAM.policy.p3) {
          var v23066 = a$$405.curCSS(this, "overflow", 1)
        }
        introspect(JAM.policy.p3) {
          var v23067 = a$$405.curCSS(this, "overflow-y", 1)
        }
        var v17615 = v23066 + v23067;
        introspect(JAM.policy.p3) {
          var v17616 = a$$405.curCSS(this, "overflow-x", 1)
        }
        var v11993 = v17615 + v17616;
        introspect(JAM.policy.p3) {
          v5030 = /(auto|scroll)/.test(v11993);
        }
      }
      return v5030;
    }
    var b$$252;
    var v11994;
    var v27383 = a$$405.browser;
    var v25639 = v27383.msie;
    if (v25639) {
      introspect(JAM.policy.p3) {
        var v27384 = this.css("position")
      }
      introspect(JAM.policy.p3) {
        v25639 = /(static|relative)/.test(v27384);
      }
    }
    var v23068 = v25639;
    var v25641 = !v23068;
    if (v25641) {
      introspect(JAM.policy.p3) {
        var v25640 = this.css("position")
      }
      introspect(JAM.policy.p3) {
        v23068 = /absolute/.test(v25640);
      }
    }
    var v17619 = v23068;
    if (v17619) {
      introspect(JAM.policy.p3) {
        var v23069 = this.parents()
      }
      introspect(JAM.policy.p3) {
        var v17617 = v23069.filter(v1095)
      }
      introspect(JAM.policy.p3) {
        v11994 = b$$252 = v17617.eq(0);
      }
    } else {
      introspect(JAM.policy.p3) {
        var v23070 = this.parents()
      }
      introspect(JAM.policy.p3) {
        var v17618 = v23070.filter(v1096)
      }
      introspect(JAM.policy.p3) {
        v11994 = b$$252 = v17618.eq(0);
      }
    }
    v11994;
    var v11995;
    introspect(JAM.policy.p3) {
      var v25642 = this.css("position")
    }
    introspect(JAM.policy.p3) {
      var v23071 = /fixed/.test(v25642)
    }
    var v25644 = !v23071;
    if (v25644) {
      var v25643 = b$$252.length;
      v23071 = !v25643;
    }
    var v17620 = v23071;
    if (v17620) {
      introspect(JAM.policy.p3) {
        v11995 = a$$405(document);
      }
    } else {
      v11995 = b$$252;
    }
    return v11995;
  }
  function v1094(b$$251, c$$206) {
    function v1093() {
      function v1092() {
        introspect(JAM.policy.p3) {
          var v11996 = a$$405(d$$163)
        }
        introspect(JAM.policy.p3) {
          v11996.focus();
        }
        if (c$$206) {
          introspect(JAM.policy.p3) {
            c$$206.call(d$$163);
          }
        }
        return;
      }
      var d$$163 = this;
      setTimeout(v1092, b$$251);
      return;
    }
    var v5031;
    var v17621 = typeof b$$251;
    var v11998 = v17621 == "number";
    if (v11998) {
      introspect(JAM.policy.p3) {
        v5031 = this.each(v1093);
      }
    } else {
      var v11997 = this._focus;
      introspect(JAM.policy.p3) {
        v5031 = v11997.apply(this, arguments);
      }
    }
    return v5031;
  }
  function c$$204(b$$249, c$$205) {
    var v5032 = b$$249.nodeName;
    introspect(JAM.policy.p3) {
      var e$$168 = v5032.toLowerCase()
    }
    var v5034 = "area" === e$$168;
    if (v5034) {
      var f$$47 = b$$249.parentNode;
      var g$$101 = f$$47.name;
      var h$$84;
      var v5033;
      var v25645 = b$$249.href;
      var v23072 = !v25645;
      var v25646 = !v23072;
      if (v25646) {
        v23072 = !g$$101;
      }
      var v17622 = v23072;
      var v23074 = !v17622;
      if (v23074) {
        var v25647 = f$$47.nodeName;
        introspect(JAM.policy.p3) {
          var v23073 = v25647.toLowerCase()
        }
        v17622 = v23073 !== "map";
      }
      var v11999 = v17622;
      if (v11999) {
        v5033 = !1;
      } else {
        var v25648 = "img[usemap=#" + g$$101;
        var v23075 = v25648 + "]";
        introspect(JAM.policy.p3) {
          var v17623 = a$$405(v23075)
        }
        h$$84 = v17623[0];
        var v23076 = !h$$84;
        var v17624 = !v23076;
        if (v17624) {
          v17624 = d$$162(h$$84);
        }
        v5033 = v17624;
      }
      return v5033;
    }
    var v12000;
    introspect(JAM.policy.p3) {
      var v17627 = /input|select|textarea|button|object/.test(e$$168)
    }
    if (v17627) {
      var v17625 = b$$249.disabled;
      v12000 = !v17625;
    } else {
      var v17626;
      var v23078 = "a" == e$$168;
      if (v23078) {
        var v23077 = b$$249.href;
        var v25649 = !v23077;
        if (v25649) {
          v23077 = c$$205;
        }
        v17626 = v23077;
      } else {
        v17626 = c$$205;
      }
      v12000 = v17626;
    }
    var v5035 = v12000;
    if (v5035) {
      v5035 = d$$162(b$$249);
    }
    return v5035;
  }
  function d$$162(b$$250) {
    function v1091() {
      introspect(JAM.policy.p3) {
        var v12001 = a$$405.curCSS(this, "visibility")
      }
      var v5036 = v12001 === "hidden";
      var v12003 = !v5036;
      if (v12003) {
        var v17628 = a$$405.expr;
        var v12002 = v17628.filters;
        introspect(JAM.policy.p3) {
          v5036 = v12002.hidden(this);
        }
      }
      return v5036;
    }
    introspect(JAM.policy.p3) {
      var v25650 = a$$405(b$$250)
    }
    introspect(JAM.policy.p3) {
      var v23079 = v25650.parents()
    }
    introspect(JAM.policy.p3) {
      var v17629 = v23079.andSelf()
    }
    introspect(JAM.policy.p3) {
      var v12004 = v17629.filter(v1091)
    }
    var v5037 = v12004.length;
    return !v5037;
  }
  var v5038 = a$$405.ui;
  var v12005 = !v5038;
  if (v12005) {
    v5038 = {};
  }
  a$$405.ui = v5038;
  var v12006 = a$$405.ui;
  var v5039 = v12006.version;
  if (v5039) {
    return;
  }
  var v28481 = a$$405.ui;
  var v29174 = {ALT:18, BACKSPACE:8, CAPS_LOCK:20, COMMA:188, COMMAND:91, COMMAND_LEFT:91, COMMAND_RIGHT:93, CONTROL:17, DELETE:46, DOWN:40, END:35, ENTER:13, ESCAPE:27, HOME:36, INSERT:45, LEFT:37, MENU:93, NUMPAD_ADD:107, NUMPAD_DECIMAL:110, NUMPAD_DIVIDE:111, NUMPAD_ENTER:108, NUMPAD_MULTIPLY:106, NUMPAD_SUBTRACT:109, PAGE_DOWN:34, PAGE_UP:33, PERIOD:190, RIGHT:39, SHIFT:16, SPACE:32, TAB:9, UP:38, WINDOWS:91};
  var v28482 = {version:"1.8.24", keyCode:v29174};
  introspect(JAM.policy.p3) {
    a$$405.extend(v28481, v28482);
  }
  var v28483 = a$$405.fn;
  var v29919 = a$$405.fn;
  var v29637 = v29919.prop;
  var v29921 = !v29637;
  if (v29921) {
    var v29920 = a$$405.fn;
    v29637 = v29920.attr;
  }
  var v29175 = v29637;
  var v29638 = a$$405.fn;
  var v29176 = v29638.focus;
  var v28484 = {propAttr:v29175, _focus:v29176, focus:v1094, scrollParent:v1097, zIndex:v1098, disableSelection:v1100, enableSelection:v1101};
  introspect(JAM.policy.p3) {
    v28483.extend(v28484);
  }
  introspect(JAM.policy.p3) {
    var v29177 = a$$405("<a>")
  }
  introspect(JAM.policy.p3) {
    var v28485 = v29177.outerWidth(1)
  }
  var v27385 = v28485.jquery;
  var v28487 = !v27385;
  if (v28487) {
    var v28486 = ["Width", "Height"];
    introspect(JAM.policy.p3) {
      a$$405.each(v28486, v1107);
    }
  }
  var v27386 = a$$405.expr;
  var v25651 = v27386[":"];
  var v28488;
  var v29639 = a$$405.expr;
  var v29179 = v29639.createPseudo;
  if (v29179) {
    var v29178 = a$$405.expr;
    introspect(JAM.policy.p3) {
      v28488 = v29178.createPseudo(v1109);
    }
  } else {
    v28488 = v1110;
  }
  var v27387 = v28488;
  var v25652 = {data:v27387, focusable:v1111, tabbable:v1112};
  introspect(JAM.policy.p3) {
    a$$405.extend(v25651, v25652);
  }
  introspect(JAM.policy.p3) {
    a$$405(v1113);
  }
  var v17630 = a$$405.curCSS;
  var v23080 = !v17630;
  if (v23080) {
    a$$405.curCSS = a$$405.css;
  }
  var v12007 = a$$405.ui;
  var v17631 = {add:v1114, call:v1115};
  var v12008 = {plugin:v17631, contains:v1116, hasScroll:v1117, isOverAxis:v1118, isOver:v1119};
  introspect(JAM.policy.p3) {
    a$$405.extend(v12007, v12008);
  }
  return;
}
function v1090(a$$13, b$$9) {
  function v1089() {
    return f$$4;
  }
  function v1088(a$$400, c$$202) {
    function v1087(a$$403) {
      function v1086(a$$404, c$$203, h$$83) {
        var i$$147;
        var j$$63;
        var k$$41;
        var l$$53;
        introspect(JAM.policy.p3) {
          var v5041 = f$$4.isWindow(a$$404)
        }
        if (v5041) {
          i$$147 = a$$404.document;
          var v12009 = i$$147.documentElement;
          j$$63 = v12009[d$$161];
          var v23081 = f$$4.support;
          var v17632 = v23081.boxModel;
          if (v17632) {
            v17632 = j$$63;
          }
          var v12010 = v17632;
          var v17634 = !v12010;
          if (v17634) {
            var v17633 = i$$147.body;
            if (v17633) {
              var v23082 = i$$147.body;
              v17633 = v23082[d$$161];
            }
            v12010 = v17633;
          }
          var v5040 = v12010;
          var v12011 = !v5040;
          if (v12011) {
            v5040 = j$$63;
          }
          return v5040;
        }
        var v12012 = a$$404.nodeType;
        var v5047 = v12012 === 9;
        if (v5047) {
          i$$147 = a$$404.documentElement;
          var v12013 = i$$147[d$$161];
          var v12014 = i$$147[e$$167];
          var v5042 = v12013 >= v12014;
          if (v5042) {
            return i$$147[d$$161];
          }
          var v12015 = a$$404.body;
          var v5043 = v12015[e$$167];
          var v5044 = i$$147[e$$167];
          var v12016 = a$$404.body;
          var v5045 = v12016[g$$100];
          var v5046 = i$$147[g$$100];
          introspect(JAM.policy.p3) {
            return Math.max(v5043, v5044, v5045, v5046);
          }
        }
        var v5049 = h$$83 === b$$9;
        if (v5049) {
          introspect(JAM.policy.p3) {
            k$$41 = f$$4.css(a$$404, c$$203);
          }
          l$$53 = parseFloat(k$$41);
          var v5048;
          introspect(JAM.policy.p3) {
            var v12017 = f$$4.isNumeric(l$$53)
          }
          if (v12017) {
            v5048 = l$$53;
          } else {
            v5048 = k$$41;
          }
          return v5048;
        }
        introspect(JAM.policy.p3) {
          var v5050 = f$$4(a$$404)
        }
        introspect(JAM.policy.p3) {
          v5050.css(c$$203, h$$83);
        }
        return;
      }
      var v5051 = arguments.length;
      introspect(JAM.policy.p3) {
        return f$$4.access(this, v1086, c$$202, a$$403, v5051, null);
      }
    }
    function v1085(a$$402) {
      var b$$247 = this[0];
      var v5052;
      if (b$$247) {
        var v12018;
        var v17636 = b$$247.style;
        if (v17636) {
          var v25653;
          if (a$$402) {
            v25653 = "margin";
          } else {
            v25653 = "border";
          }
          var v23083 = v25653;
          introspect(JAM.policy.p3) {
            var v17635 = f$$4.css(b$$247, c$$202, v23083)
          }
          v12018 = parseFloat(v17635);
        } else {
          introspect(JAM.policy.p3) {
            v12018 = this[c$$202]();
          }
        }
        v5052 = v12018;
      } else {
        v5052 = null;
      }
      return v5052;
    }
    function v1084() {
      var a$$401 = this[0];
      var v5053;
      if (a$$401) {
        var v12019;
        var v17638 = a$$401.style;
        if (v17638) {
          introspect(JAM.policy.p3) {
            var v17637 = f$$4.css(a$$401, c$$202, "padding")
          }
          v12019 = parseFloat(v17637);
        } else {
          introspect(JAM.policy.p3) {
            v12019 = this[c$$202]();
          }
        }
        v5053 = v12019;
      } else {
        v5053 = null;
      }
      return v5053;
    }
    var d$$161 = "client" + a$$400;
    var e$$167 = "scroll" + a$$400;
    var g$$100 = "offset" + a$$400;
    var v17639 = f$$4.fn;
    var v17640 = "inner" + a$$400;
    introspect(JAM.policy.p2) {
      v17639[v17640] = v1084;
    }
    var v17641 = f$$4.fn;
    var v17642 = "outer" + a$$400;
    introspect(JAM.policy.p2) {
      v17641[v17642] = v1085;
    }
    var v12020 = f$$4.fn;
    introspect(JAM.policy.p2) {
      v12020[c$$202] = v1087;
    }
    return;
  }
  function v1083(a$$398, c$$201) {
    function v1082(e$$165) {
      function v1081(a$$399, e$$166, g$$99) {
        var h$$82 = cy(a$$399);
        var v5055 = g$$99 === b$$9;
        if (v5055) {
          var v5054;
          if (h$$82) {
            var v12021;
            var v17644 = c$$201 in h$$82;
            if (v17644) {
              v12021 = h$$82[c$$201];
            } else {
              var v25654 = f$$4.support;
              var v23084 = v25654.boxModel;
              if (v23084) {
                var v27388 = h$$82.document;
                var v25655 = v27388.documentElement;
                v23084 = v25655[e$$166];
              }
              var v17643 = v23084;
              var v23086 = !v17643;
              if (v23086) {
                var v25656 = h$$82.document;
                var v23085 = v25656.body;
                v17643 = v23085[e$$166];
              }
              v12021 = v17643;
            }
            v5054 = v12021;
          } else {
            v5054 = a$$399[e$$166];
          }
          return v5054;
        }
        var v5056;
        if (h$$82) {
          var v17645;
          if (d$$160) {
            introspect(JAM.policy.p3) {
              var v23087 = f$$4(h$$82)
            }
            introspect(JAM.policy.p3) {
              v17645 = v23087.scrollLeft();
            }
          } else {
            v17645 = g$$99;
          }
          var v12022 = v17645;
          var v17646;
          if (d$$160) {
            v17646 = g$$99;
          } else {
            introspect(JAM.policy.p3) {
              var v23088 = f$$4(h$$82)
            }
            introspect(JAM.policy.p3) {
              v17646 = v23088.scrollTop();
            }
          }
          var v12023 = v17646;
          introspect(JAM.policy.p3) {
            v5056 = h$$82.scrollTo(v12022, v12023);
          }
        } else {
          introspect(JAM.policy.p2) {
            v5056 = a$$399[e$$166] = g$$99;
          }
        }
        v5056;
        return;
      }
      var v5057 = arguments.length;
      introspect(JAM.policy.p3) {
        return f$$4.access(this, v1081, a$$398, e$$165, v5057, null);
      }
    }
    introspect(JAM.policy.p3) {
      var d$$160 = /Y/.test(c$$201)
    }
    var v5058 = f$$4.fn;
    introspect(JAM.policy.p2) {
      v5058[a$$398] = v1082;
    }
    return;
  }
  function v1080() {
    function v1079() {
      var v5059 = this.offsetParent;
      var v12024 = !v5059;
      if (v12024) {
        v5059 = c$$5.body;
      }
      var a$$397 = v5059;
      var v17647 = a$$397;
      if (v17647) {
        var v25657 = a$$397.nodeName;
        introspect(JAM.policy.p3) {
          var v23089 = cx.test(v25657)
        }
        v17647 = !v23089;
      }
      var v12025 = v17647;
      if (v12025) {
        introspect(JAM.policy.p3) {
          var v17648 = f$$4.css(a$$397, "position")
        }
        v12025 = v17648 === "static";
      }
      var v5060 = v12025;
      for (;v5060;) {
        a$$397 = a$$397.offsetParent;
        var v17649 = a$$397;
        if (v17649) {
          var v25658 = a$$397.nodeName;
          introspect(JAM.policy.p3) {
            var v23090 = cx.test(v25658)
          }
          v17649 = !v23090;
        }
        var v12026 = v17649;
        if (v12026) {
          introspect(JAM.policy.p3) {
            var v17650 = f$$4.css(a$$397, "position")
          }
          v12026 = v17650 === "static";
        }
        v5060 = v12026;
      }
      return a$$397;
    }
    introspect(JAM.policy.p3) {
      return this.map(v1079);
    }
  }
  function v1078() {
    var v12027 = this[0];
    var v5061 = !v12027;
    if (v5061) {
      return null;
    }
    var a$$396 = this[0];
    introspect(JAM.policy.p3) {
      var b$$246 = this.offsetParent()
    }
    introspect(JAM.policy.p3) {
      var c$$200 = this.offset()
    }
    var v5062;
    var v23091 = b$$246[0];
    var v17651 = v23091.nodeName;
    introspect(JAM.policy.p3) {
      var v12028 = cx.test(v17651)
    }
    if (v12028) {
      v5062 = {top:0, left:0};
    } else {
      introspect(JAM.policy.p3) {
        v5062 = b$$246.offset();
      }
    }
    var d$$159 = v5062;
    var v25659 = c$$200.top;
    introspect(JAM.policy.p3) {
      var v28489 = f$$4.css(a$$396, "marginTop")
    }
    var v27389 = parseFloat(v28489);
    var v28490 = !v27389;
    if (v28490) {
      v27389 = 0;
    }
    var v25660 = v27389;
    c$$200.top = v25659 - v25660;
    var v25661 = c$$200.left;
    introspect(JAM.policy.p3) {
      var v28491 = f$$4.css(a$$396, "marginLeft")
    }
    var v27390 = parseFloat(v28491);
    var v28492 = !v27390;
    if (v28492) {
      v27390 = 0;
    }
    var v25662 = v27390;
    c$$200.left = v25661 - v25662;
    var v23092 = d$$159.top;
    var v28493 = b$$246[0];
    introspect(JAM.policy.p3) {
      var v27391 = f$$4.css(v28493, "borderTopWidth")
    }
    var v25663 = parseFloat(v27391);
    var v27392 = !v25663;
    if (v27392) {
      v25663 = 0;
    }
    var v23093 = v25663;
    d$$159.top = v23092 + v23093;
    var v17652 = d$$159.left;
    var v27393 = b$$246[0];
    introspect(JAM.policy.p3) {
      var v25664 = f$$4.css(v27393, "borderLeftWidth")
    }
    var v23094 = parseFloat(v25664);
    var v25665 = !v23094;
    if (v25665) {
      v23094 = 0;
    }
    var v17653 = v23094;
    d$$159.left = v17652 + v17653;
    var v12029 = c$$200.top;
    var v12030 = d$$159.top;
    var v5063 = v12029 - v12030;
    var v12031 = c$$200.left;
    var v12032 = d$$159.left;
    var v5064 = v12031 - v12032;
    return {top:v5063, left:v5064};
  }
  function v1077(a$$395, b$$245, c$$199) {
    introspect(JAM.policy.p3) {
      var d$$158 = f$$4.css(a$$395, "position")
    }
    var v5065 = d$$158 === "static";
    if (v5065) {
      var v12033 = a$$395.style;
      v12033.position = "relative";
    }
    introspect(JAM.policy.p3) {
      var e$$164 = f$$4(a$$395)
    }
    introspect(JAM.policy.p3) {
      var g$$98 = e$$164.offset()
    }
    introspect(JAM.policy.p3) {
      var h$$81 = f$$4.css(a$$395, "top")
    }
    introspect(JAM.policy.p3) {
      var i$$146 = f$$4.css(a$$395, "left")
    }
    var v12034 = d$$158 === "absolute";
    var v17654 = !v12034;
    if (v17654) {
      v12034 = d$$158 === "fixed";
    }
    var v5066 = v12034;
    if (v5066) {
      var v17655 = [h$$81, i$$146];
      introspect(JAM.policy.p3) {
        var v12035 = f$$4.inArray("auto", v17655)
      }
      v5066 = v12035 > -1;
    }
    var j$$62 = v5066;
    var k$$40 = {};
    var l$$52 = {};
    var m$$27;
    var n$$78;
    var v25666;
    if (j$$62) {
      introspect(JAM.policy.p3) {
        l$$52 = e$$164.position();
      }
      m$$27 = l$$52.top;
      v25666 = n$$78 = l$$52.left;
    } else {
      var v28494 = parseFloat(h$$81);
      var v29180 = !v28494;
      if (v29180) {
        v28494 = 0;
      }
      m$$27 = v28494;
      var v28495 = parseFloat(i$$146);
      var v29181 = !v28495;
      if (v29181) {
        v28495 = 0;
      }
      v25666 = n$$78 = v28495;
    }
    v25666;
    introspect(JAM.policy.p3) {
      var v25667 = f$$4.isFunction(b$$245)
    }
    if (v25667) {
      introspect(JAM.policy.p3) {
        b$$245 = b$$245.call(a$$395, c$$199, g$$98);
      }
    }
    var v25668 = b$$245.top;
    var v23095 = v25668 != null;
    if (v23095) {
      var v27394 = b$$245.top;
      var v27395 = g$$98.top;
      var v25669 = v27394 - v27395;
      k$$40.top = v25669 + m$$27;
    }
    var v23096 = b$$245.left;
    var v17656 = v23096 != null;
    if (v17656) {
      var v25670 = b$$245.left;
      var v25671 = g$$98.left;
      var v23097 = v25670 - v25671;
      k$$40.left = v23097 + n$$78;
    }
    var v12036;
    var v17658 = "using" in b$$245;
    if (v17658) {
      var v17657 = b$$245.using;
      introspect(JAM.policy.p3) {
        v12036 = v17657.call(a$$395, k$$40);
      }
    } else {
      introspect(JAM.policy.p3) {
        v12036 = e$$164.css(k$$40);
      }
    }
    v12036;
    return;
  }
  function v1076(a$$394) {
    var b$$244 = a$$394.offsetTop;
    var c$$198 = a$$394.offsetLeft;
    var v12037 = f$$4.support;
    var v5067 = v12037.doesNotIncludeMarginInBodyOffset;
    if (v5067) {
      introspect(JAM.policy.p3) {
        var v27396 = f$$4.css(a$$394, "marginTop")
      }
      var v25672 = parseFloat(v27396);
      var v27397 = !v25672;
      if (v27397) {
        v25672 = 0;
      }
      var v23098 = v25672;
      b$$244 = b$$244 + v23098;
      introspect(JAM.policy.p3) {
        var v27398 = f$$4.css(a$$394, "marginLeft")
      }
      var v25673 = parseFloat(v27398);
      var v27399 = !v25673;
      if (v27399) {
        v25673 = 0;
      }
      var v23099 = v25673;
      c$$198 = c$$198 + v23099;
    }
    return {top:b$$244, left:c$$198};
  }
  function v1075(a$$393) {
    function v1074(b$$243) {
      var v5068 = f$$4.offset;
      introspect(JAM.policy.p3) {
        v5068.setOffset(this, a$$393, b$$243);
      }
      return;
    }
    var v5070 = arguments.length;
    if (v5070) {
      var v5069;
      var v12038 = a$$393 === b$$9;
      if (v12038) {
        v5069 = this;
      } else {
        introspect(JAM.policy.p3) {
          v5069 = this.each(v1074);
        }
      }
      return v5069;
    }
    var c$$197 = this[0];
    var v5071 = c$$197;
    if (v5071) {
      v5071 = c$$197.ownerDocument;
    }
    var d$$157 = v5071;
    var v5072 = !d$$157;
    if (v5072) {
      return null;
    }
    var v12039 = d$$157.body;
    var v5074 = c$$197 === v12039;
    if (v5074) {
      var v5073 = f$$4.offset;
      introspect(JAM.policy.p3) {
        return v5073.bodyOffset(c$$197);
      }
    }
    var v5075 = d$$157.documentElement;
    introspect(JAM.policy.p3) {
      return cv(c$$197, d$$157, v5075);
    }
  }
  function v1073(a$$392, b$$242, c$$196) {
    var d$$156;
    var e$$163 = a$$392.offsetParent;
    var g$$97 = a$$392;
    var h$$80 = b$$242.body;
    var i$$145 = b$$242.defaultView;
    var v5076;
    if (i$$145) {
      introspect(JAM.policy.p3) {
        v5076 = i$$145.getComputedStyle(a$$392, null);
      }
    } else {
      v5076 = a$$392.currentStyle;
    }
    var j$$61 = v5076;
    var k$$39 = a$$392.offsetTop;
    var l$$51 = a$$392.offsetLeft;
    var v17659 = a$$392 = a$$392.parentNode;
    if (v17659) {
      v17659 = a$$392 !== h$$80;
    }
    var v12040 = v17659;
    if (v12040) {
      v12040 = a$$392 !== c$$196;
    }
    var v5078 = v12040;
    for (;v5078;) {
      var v17660 = f$$4.support;
      var v12041 = v17660.fixedPosition;
      if (v12041) {
        var v17661 = j$$61.position;
        v12041 = v17661 === "fixed";
      }
      var v5077 = v12041;
      if (v5077) {
        break;
      }
      var v27400;
      if (i$$145) {
        introspect(JAM.policy.p3) {
          v27400 = i$$145.getComputedStyle(a$$392, null);
        }
      } else {
        v27400 = a$$392.currentStyle;
      }
      d$$156 = v27400;
      var v28496 = a$$392.scrollTop;
      k$$39 = k$$39 - v28496;
      var v27401 = a$$392.scrollLeft;
      l$$51 = l$$51 - v27401;
      var v23100 = a$$392 === e$$163;
      if (v23100) {
        var v29922 = a$$392.offsetTop;
        k$$39 = k$$39 + v29922;
        var v29923 = a$$392.offsetLeft;
        l$$51 = l$$51 + v29923;
        var v29924 = f$$4.support;
        var v29640 = v29924.doesNotAddBorder;
        if (v29640) {
          var v30351 = f$$4.support;
          var v30174 = v30351.doesAddBorderForTableAndCells;
          var v29925 = !v30174;
          var v30176 = !v29925;
          if (v30176) {
            var v30352 = a$$392.nodeName;
            introspect(JAM.policy.p3) {
              var v30175 = cw.test(v30352)
            }
            v29925 = !v30175;
          }
          v29640 = v29925;
        }
        var v29182 = v29640;
        if (v29182) {
          var v30491 = d$$156.borderTopWidth;
          var v30353 = parseFloat(v30491);
          var v30492 = !v30353;
          if (v30492) {
            v30353 = 0;
          }
          var v30177 = v30353;
          k$$39 = k$$39 + v30177;
          var v30493 = d$$156.borderLeftWidth;
          var v30354 = parseFloat(v30493);
          var v30494 = !v30354;
          if (v30494) {
            v30354 = 0;
          }
          var v30178 = v30354;
          l$$51 = l$$51 + v30178;
        }
        g$$97 = e$$163;
        e$$163 = a$$392.offsetParent;
      }
      var v25674 = f$$4.support;
      var v23101 = v25674.subtractsBorderForOverflowNotVisible;
      if (v23101) {
        var v25675 = d$$156.overflow;
        v23101 = v25675 !== "visible";
      }
      var v17662 = v23101;
      if (v17662) {
        var v29183 = d$$156.borderTopWidth;
        var v28497 = parseFloat(v29183);
        var v29184 = !v28497;
        if (v29184) {
          v28497 = 0;
        }
        var v27402 = v28497;
        k$$39 = k$$39 + v27402;
        var v29185 = d$$156.borderLeftWidth;
        var v28498 = parseFloat(v29185);
        var v29186 = !v28498;
        if (v29186) {
          v28498 = 0;
        }
        var v27403 = v28498;
        l$$51 = l$$51 + v27403;
      }
      j$$61 = d$$156;
      var v17663 = a$$392 = a$$392.parentNode;
      if (v17663) {
        v17663 = a$$392 !== h$$80;
      }
      var v12042 = v17663;
      if (v12042) {
        v12042 = a$$392 !== c$$196;
      }
      v5078 = v12042;
    }
    var v17664 = j$$61.position;
    var v12043 = v17664 === "relative";
    var v17666 = !v12043;
    if (v17666) {
      var v17665 = j$$61.position;
      v12043 = v17665 === "static";
    }
    var v5079 = v12043;
    if (v5079) {
      var v17667 = h$$80.offsetTop;
      k$$39 = k$$39 + v17667;
      var v17668 = h$$80.offsetLeft;
      l$$51 = l$$51 + v17668;
    }
    var v17669 = f$$4.support;
    var v12044 = v17669.fixedPosition;
    if (v12044) {
      var v17670 = j$$61.position;
      v12044 = v17670 === "fixed";
    }
    var v5080 = v12044;
    if (v5080) {
      var v25676 = c$$196.scrollTop;
      var v25677 = h$$80.scrollTop;
      introspect(JAM.policy.p3) {
        var v23102 = Math.max(v25676, v25677)
      }
      k$$39 = k$$39 + v23102;
      var v25678 = c$$196.scrollLeft;
      var v25679 = h$$80.scrollLeft;
      introspect(JAM.policy.p3) {
        var v23103 = Math.max(v25678, v25679)
      }
      l$$51 = l$$51 + v23103;
    }
    return {top:k$$39, left:l$$51};
  }
  function v1072(a$$391, b$$241, c$$195, d$$155) {
    try {
      introspect(JAM.policy.p3) {
        d$$155 = a$$391.getBoundingClientRect();
      }
    } catch (e$$162) {
    }
    var v12045 = !d$$155;
    var v17672 = !v12045;
    if (v17672) {
      introspect(JAM.policy.p3) {
        var v17671 = f$$4.contains(c$$195, a$$391)
      }
      v12045 = !v17671;
    }
    var v5082 = v12045;
    if (v5082) {
      var v5081;
      if (d$$155) {
        var v12046 = d$$155.top;
        var v12047 = d$$155.left;
        v5081 = {top:v12046, left:v12047};
      } else {
        v5081 = {top:0, left:0};
      }
      return v5081;
    }
    var g$$96 = b$$241.body;
    var h$$79 = cy(b$$241);
    var v12048 = c$$195.clientTop;
    var v17673 = !v12048;
    if (v17673) {
      v12048 = g$$96.clientTop;
    }
    var v5083 = v12048;
    var v12049 = !v5083;
    if (v12049) {
      v5083 = 0;
    }
    var i$$144 = v5083;
    var v12050 = c$$195.clientLeft;
    var v17674 = !v12050;
    if (v17674) {
      v12050 = g$$96.clientLeft;
    }
    var v5084 = v12050;
    var v12051 = !v5084;
    if (v12051) {
      v5084 = 0;
    }
    var j$$60 = v5084;
    var v12052 = h$$79.pageYOffset;
    var v17676 = !v12052;
    if (v17676) {
      var v23104 = f$$4.support;
      var v17675 = v23104.boxModel;
      if (v17675) {
        v17675 = c$$195.scrollTop;
      }
      v12052 = v17675;
    }
    var v5085 = v12052;
    var v12053 = !v5085;
    if (v12053) {
      v5085 = g$$96.scrollTop;
    }
    var k$$38 = v5085;
    var v12054 = h$$79.pageXOffset;
    var v17678 = !v12054;
    if (v17678) {
      var v23105 = f$$4.support;
      var v17677 = v23105.boxModel;
      if (v17677) {
        v17677 = c$$195.scrollLeft;
      }
      v12054 = v17677;
    }
    var v5086 = v12054;
    var v12055 = !v5086;
    if (v12055) {
      v5086 = g$$96.scrollLeft;
    }
    var l$$50 = v5086;
    var v12056 = d$$155.top;
    var v5087 = v12056 + k$$38;
    var m$$26 = v5087 - i$$144;
    var v12057 = d$$155.left;
    var v5088 = v12057 + l$$50;
    var n$$77 = v5088 - j$$60;
    return {top:m$$26, left:n$$77};
  }
  function v1071(a$$390) {
    function v1070(b$$240) {
      var v5089 = b$$240.elem;
      return a$$390 === v5089;
    }
    var v12058 = f$$4.timers;
    introspect(JAM.policy.p3) {
      var v5090 = f$$4.grep(v12058, v1070)
    }
    return v5090.length;
  }
  function v1069(a$$388, b$$239) {
    function v1068(a$$389) {
      var v5091 = a$$389.elem;
      var v17679 = a$$389.now;
      introspect(JAM.policy.p3) {
        var v12059 = Math.max(0, v17679)
      }
      var v12060 = a$$389.unit;
      var v5092 = v12059 + v12060;
      introspect(JAM.policy.p3) {
        f$$4.style(v5091, b$$239, v5092);
      }
      return;
    }
    introspect(JAM.policy.p3) {
      var v5093 = b$$239.indexOf("margin")
    }
    if (v5093) {
      var v17680 = f$$4.fx;
      var v12061 = v17680.step;
      introspect(JAM.policy.p2) {
        v12061[b$$239] = v1068;
      }
    }
    return;
  }
  function v1067(a$$387) {
    var v5094;
    var v23106 = a$$387.elem;
    var v17681 = v23106.style;
    if (v17681) {
      var v27404 = a$$387.elem;
      var v25680 = v27404.style;
      var v25681 = a$$387.prop;
      var v23107 = v25680[v25681];
      v17681 = v23107 != null;
    }
    var v12066 = v17681;
    if (v12066) {
      var v17682 = a$$387.elem;
      var v12062 = v17682.style;
      var v12063 = a$$387.prop;
      var v17683 = a$$387.now;
      var v17684 = a$$387.unit;
      introspect(JAM.policy.p2) {
        v5094 = v12062[v12063] = v17683 + v17684;
      }
    } else {
      var v12064 = a$$387.elem;
      var v12065 = a$$387.prop;
      introspect(JAM.policy.p2) {
        v5094 = v12064[v12065] = a$$387.now;
      }
    }
    v5094;
    return;
  }
  function v1066(a$$386) {
    var v5095 = a$$386.elem;
    var v5096 = a$$386.now;
    introspect(JAM.policy.p3) {
      f$$4.style(v5095, "opacity", v5096);
    }
    return;
  }
  function v1065() {
    clearInterval(co);
    co = null;
    return;
  }
  function v1064() {
    var a$$385;
    var b$$238 = f$$4.timers;
    var c$$194 = 0;
    var v12067 = b$$238.length;
    var v5097 = c$$194 < v12067;
    for (;v5097;) {
      a$$385 = b$$238[c$$194];
      introspect(JAM.policy.p3) {
        var v23108 = a$$385()
      }
      var v17685 = !v23108;
      if (v17685) {
        var v23109 = b$$238[c$$194];
        v17685 = v23109 === a$$385;
      }
      var v12068 = v17685;
      if (v12068) {
        var v17686 = c$$194;
        c$$194 = c$$194 - 1;
        introspect(JAM.policy.p3) {
          b$$238.splice(v17686, 1);
        }
      }
      c$$194++;
      var v12069 = b$$238.length;
      v5097 = c$$194 < v12069;
    }
    var v5098 = b$$238.length;
    var v12071 = !v5098;
    if (v12071) {
      var v12070 = f$$4.fx;
      introspect(JAM.policy.p3) {
        v12070.stop();
      }
    }
    return;
  }
  function v1063(a$$383) {
    function v1062(a$$384, b$$237) {
      var v5099 = h$$78.style;
      var v5100 = "overflow" + b$$237;
      var v12072 = i$$143.overflow;
      introspect(JAM.policy.p2) {
        v5099[v5100] = v12072[a$$384];
      }
      return;
    }
    var b$$236;
    var c$$193;
    var d$$154;
    var v5101 = cq;
    var v12073 = !v5101;
    if (v12073) {
      v5101 = cr();
    }
    var e$$161 = v5101;
    var g$$95 = !0;
    var h$$78 = this.elem;
    var i$$143 = this.options;
    var v12074 = a$$383;
    var v17688 = !v12074;
    if (v17688) {
      var v23110 = i$$143.duration;
      var v23111 = this.startTime;
      var v17687 = v23110 + v23111;
      v12074 = e$$161 >= v17687;
    }
    var v5106 = v12074;
    if (v5106) {
      this.now = this.end;
      this.pos = this.state = 1;
      introspect(JAM.policy.p3) {
        this.update();
      }
      var v12075 = i$$143.animatedProperties;
      var v12076 = this.prop;
      introspect(JAM.policy.p2) {
        v12075[v12076] = !0;
      }
      var v5103 = i$$143.animatedProperties;
      for (b$$236 in v5103) {
        var v17689 = i$$143.animatedProperties;
        var v12077 = v17689[b$$236];
        var v12078 = !0;
        var v5102 = v12077 !== v12078;
        if (v5102) {
          g$$95 = !1;
        }
      }
      if (g$$95) {
        var v23112 = i$$143.overflow;
        var v17690 = v23112 != null;
        if (v17690) {
          var v25682 = f$$4.support;
          var v23113 = v25682.shrinkWrapBlocks;
          v17690 = !v23113;
        }
        var v12079 = v17690;
        if (v12079) {
          var v17691 = ["", "X", "Y"];
          introspect(JAM.policy.p3) {
            f$$4.each(v17691, v1062);
          }
        }
        var v12080 = i$$143.hide;
        if (v12080) {
          introspect(JAM.policy.p3) {
            var v17692 = f$$4(h$$78)
          }
          introspect(JAM.policy.p3) {
            v17692.hide();
          }
        }
        var v12081 = i$$143.hide;
        var v17693 = !v12081;
        if (v17693) {
          v12081 = i$$143.show;
        }
        var v5105 = v12081;
        if (v5105) {
          var v5104 = i$$143.animatedProperties;
          for (b$$236 in v5104) {
            var v23114 = i$$143.orig;
            var v17694 = v23114[b$$236];
            introspect(JAM.policy.p3) {
              f$$4.style(h$$78, b$$236, v17694);
            }
            var v17695 = "fxshow" + b$$236;
            var v17696 = !0;
            introspect(JAM.policy.p3) {
              f$$4.removeData(h$$78, v17695, v17696);
            }
            var v12082 = "toggle" + b$$236;
            var v12083 = !0;
            introspect(JAM.policy.p3) {
              f$$4.removeData(h$$78, v12082, v12083);
            }
          }
        }
        d$$154 = i$$143.complete;
        if (d$$154) {
          i$$143.complete = !1;
          introspect(JAM.policy.p3) {
            d$$154.call(h$$78);
          }
        }
      }
      return !1;
    }
    var v12084;
    var v23115 = i$$143.duration;
    var v17697 = v23115 == Infinity;
    if (v17697) {
      v12084 = this.now = e$$161;
    } else {
      var v27405 = this.startTime;
      c$$193 = e$$161 - v27405;
      var v27406 = i$$143.duration;
      this.state = c$$193 / v27406;
      var v25683 = f$$4.easing;
      var v27407 = i$$143.animatedProperties;
      var v27408 = this.prop;
      var v25684 = v27407[v27408];
      var v25685 = this.state;
      var v25686 = i$$143.duration;
      introspect(JAM.policy.p3) {
        var v31118 = v25683[v25684](v25685, c$$193, 0, 1, v25686)
      }
      this.pos = v31118;
      var v23116 = this.start;
      var v27409 = this.end;
      var v27410 = this.start;
      var v25687 = v27409 - v27410;
      var v25688 = this.pos;
      var v23117 = v25687 * v25688;
      v12084 = this.now = v23116 + v23117;
    }
    v12084;
    introspect(JAM.policy.p3) {
      this.update();
    }
    return !0;
  }
  function v1061() {
    var v23118 = this.options;
    var v17698 = v23118.orig;
    var v17699 = this.prop;
    var v25689 = this.elem;
    var v27411 = this.prop;
    var v25690 = "fxshow" + v27411;
    introspect(JAM.policy.p3) {
      var v23119 = f$$4._data(v25689, v25690)
    }
    var v25693 = !v23119;
    if (v25693) {
      var v25691 = this.elem;
      var v25692 = this.prop;
      introspect(JAM.policy.p3) {
        v23119 = f$$4.style(v25691, v25692);
      }
    }
    introspect(JAM.policy.p2) {
      v17698[v17699] = v23119;
    }
    var v17700 = this.options;
    v17700.hide = !0;
    introspect(JAM.policy.p3) {
      var v12085 = this.cur()
    }
    introspect(JAM.policy.p3) {
      this.custom(v12085, 0);
    }
    return;
  }
  function v1060() {
    var v5107 = this.elem;
    var v12086 = this.prop;
    var v5108 = "fxshow" + v12086;
    introspect(JAM.policy.p3) {
      var a$$382 = f$$4._data(v5107, v5108)
    }
    var v25694 = this.options;
    var v23120 = v25694.orig;
    var v23121 = this.prop;
    var v25695 = a$$382;
    var v27414 = !v25695;
    if (v27414) {
      var v27412 = this.elem;
      var v27413 = this.prop;
      introspect(JAM.policy.p3) {
        v25695 = f$$4.style(v27412, v27413);
      }
    }
    introspect(JAM.policy.p2) {
      v23120[v23121] = v25695;
    }
    var v23122 = this.options;
    v23122.show = !0;
    var v17701;
    var v23126 = a$$382 !== b$$9;
    if (v23126) {
      introspect(JAM.policy.p3) {
        var v23123 = this.cur()
      }
      introspect(JAM.policy.p3) {
        v17701 = this.custom(v23123, a$$382);
      }
    } else {
      var v25696;
      var v29187 = this.prop;
      var v28499 = v29187 === "width";
      var v29189 = !v28499;
      if (v29189) {
        var v29188 = this.prop;
        v28499 = v29188 === "height";
      }
      var v27415 = v28499;
      if (v27415) {
        v25696 = 1;
      } else {
        v25696 = 0;
      }
      var v23124 = v25696;
      introspect(JAM.policy.p3) {
        var v23125 = this.cur()
      }
      introspect(JAM.policy.p3) {
        v17701 = this.custom(v23124, v23125);
      }
    }
    v17701;
    var v17702 = this.elem;
    introspect(JAM.policy.p3) {
      var v12087 = f$$4(v17702)
    }
    introspect(JAM.policy.p3) {
      v12087.show();
    }
    return;
  }
  function v1059(a$$380, c$$192, d$$153) {
    function v1058() {
      var v17703 = e$$160.elem;
      var v23127 = e$$160.prop;
      var v17704 = "fxshow" + v23127;
      introspect(JAM.policy.p3) {
        var v12088 = f$$4._data(v17703, v17704)
      }
      var v5109 = v12088 === b$$9;
      if (v5109) {
        var v12089;
        var v23128 = e$$160.options;
        var v17709 = v23128.hide;
        if (v17709) {
          var v17705 = e$$160.elem;
          var v23129 = e$$160.prop;
          var v17706 = "fxshow" + v23129;
          var v17707 = e$$160.start;
          introspect(JAM.policy.p3) {
            v12089 = f$$4._data(v17705, v17706, v17707);
          }
        } else {
          var v23130 = e$$160.options;
          var v17708 = v23130.show;
          if (v17708) {
            var v23131 = e$$160.elem;
            var v25697 = e$$160.prop;
            var v23132 = "fxshow" + v25697;
            var v23133 = e$$160.end;
            introspect(JAM.policy.p3) {
              v17708 = f$$4._data(v23131, v23132, v23133);
            }
          }
          v12089 = v17708;
        }
        v12089;
      }
      return;
    }
    function h$$77(a$$381) {
      introspect(JAM.policy.p3) {
        return e$$160.step(a$$381);
      }
    }
    var e$$160 = this;
    var g$$94 = f$$4.fx;
    var v29641 = cq;
    var v29926 = !v29641;
    if (v29926) {
      v29641 = cr();
    }
    this.startTime = v29641;
    this.end = c$$192;
    this.now = this.start = a$$380;
    this.pos = this.state = 0;
    var v28500 = d$$153;
    var v29190 = !v28500;
    if (v29190) {
      v28500 = this.unit;
    }
    var v27416 = v28500;
    var v28502 = !v27416;
    if (v28502) {
      var v28501;
      var v29642 = f$$4.cssNumber;
      var v29643 = this.prop;
      var v29191 = v29642[v29643];
      if (v29191) {
        v28501 = "";
      } else {
        v28501 = "px";
      }
      v27416 = v28501;
    }
    this.unit = v27416;
    var v25698 = this.options;
    h$$77.queue = v25698.queue;
    h$$77.elem = this.elem;
    h$$77.saveState = v1058;
    var v23134 = h$$77();
    if (v23134) {
      var v25699 = f$$4.timers;
      introspect(JAM.policy.p3) {
        v23134 = v25699.push(h$$77);
      }
    }
    var v17710 = v23134;
    if (v17710) {
      v17710 = !co;
    }
    var v12090 = v17710;
    if (v12090) {
      var v17711 = g$$94.tick;
      var v17712 = g$$94.interval;
      co = setInterval(v17711, v17712);
    }
    return;
  }
  function v1057() {
    var v23135 = this.elem;
    var v23136 = this.prop;
    var v17713 = v23135[v23136];
    var v12091 = v17713 != null;
    if (v12091) {
      var v25700 = this.elem;
      var v23137 = v25700.style;
      var v17714 = !v23137;
      var v23139 = !v17714;
      if (v23139) {
        var v27417 = this.elem;
        var v25701 = v27417.style;
        var v25702 = this.prop;
        var v23138 = v25701[v25702];
        v17714 = v23138 == null;
      }
      v12091 = v17714;
    }
    var v5112 = v12091;
    if (v5112) {
      var v5110 = this.elem;
      var v5111 = this.prop;
      return v5110[v5111];
    }
    var a$$379;
    var v5113 = this.elem;
    var v5114 = this.prop;
    introspect(JAM.policy.p3) {
      var b$$235 = f$$4.css(v5113, v5114)
    }
    var v5115;
    var v17715 = a$$379 = parseFloat(b$$235);
    var v12093 = isNaN(v17715);
    if (v12093) {
      var v12092;
      var v23140 = !b$$235;
      var v25703 = !v23140;
      if (v25703) {
        v23140 = b$$235 === "auto";
      }
      var v17716 = v23140;
      if (v17716) {
        v12092 = 0;
      } else {
        v12092 = b$$235;
      }
      v5115 = v12092;
    } else {
      v5115 = a$$379;
    }
    return v5115;
  }
  function v1056() {
    var v17717 = this.options;
    var v12094 = v17717.step;
    if (v12094) {
      var v23141 = this.options;
      var v17718 = v23141.step;
      var v17719 = this.elem;
      var v17720 = this.now;
      introspect(JAM.policy.p3) {
        v17718.call(v17719, v17720, this);
      }
    }
    var v25704 = f$$4.fx;
    var v23142 = v25704.step;
    var v23143 = this.prop;
    var v17721 = v23142[v23143];
    var v23145 = !v17721;
    if (v23145) {
      var v25705 = f$$4.fx;
      var v23144 = v25705.step;
      v17721 = v23144._default;
    }
    var v12095 = v17721;
    introspect(JAM.policy.p3) {
      v12095(this);
    }
    return;
  }
  function v1055(a$$378, b$$234, c$$191) {
    this.options = b$$234;
    this.elem = a$$378;
    this.prop = c$$191;
    var v12096 = b$$234.orig;
    var v17722 = !v12096;
    if (v17722) {
      v12096 = {};
    }
    b$$234.orig = v12096;
    return;
  }
  function v1054(a$$377) {
    var v25706 = Math.PI;
    var v23146 = a$$377 * v25706;
    introspect(JAM.policy.p3) {
      var v17723 = Math.cos(v23146)
    }
    var v12097 = -v17723;
    var v5116 = v12097 / 2;
    return v5116 + .5;
  }
  function v1053(a$$376) {
    return a$$376;
  }
  function v1052(a$$374, b$$233, c$$190) {
    function v1051(a$$375) {
      var v17724 = d$$152.old;
      introspect(JAM.policy.p3) {
        var v12098 = f$$4.isFunction(v17724)
      }
      if (v12098) {
        var v17725 = d$$152.old;
        introspect(JAM.policy.p3) {
          v17725.call(this);
        }
      }
      var v12099;
      var v17728 = d$$152.queue;
      if (v17728) {
        var v17726 = d$$152.queue;
        introspect(JAM.policy.p3) {
          v12099 = f$$4.dequeue(this, v17726);
        }
      } else {
        var v23147 = !1;
        var v17727 = a$$375 !== v23147;
        if (v17727) {
          introspect(JAM.policy.p3) {
            v17727 = f$$4._unmark(this);
          }
        }
        v12099 = v17727;
      }
      v12099;
      return;
    }
    var v5117;
    var v17729 = a$$374;
    if (v17729) {
      var v23148 = typeof a$$374;
      v17729 = v23148 == "object";
    }
    var v12102 = v17729;
    if (v12102) {
      introspect(JAM.policy.p3) {
        v5117 = f$$4.extend({}, a$$374);
      }
    } else {
      var v23149 = c$$190;
      var v25708 = !v23149;
      if (v25708) {
        var v25707 = !c$$190;
        if (v25707) {
          v25707 = b$$233;
        }
        v23149 = v25707;
      }
      var v17730 = v23149;
      var v23151 = !v17730;
      if (v23151) {
        introspect(JAM.policy.p3) {
          var v23150 = f$$4.isFunction(a$$374)
        }
        if (v23150) {
          v23150 = a$$374;
        }
        v17730 = v23150;
      }
      var v12100 = v17730;
      var v17731 = c$$190 && b$$233;
      var v23153 = !v17731;
      if (v23153) {
        var v25709 = b$$233;
        if (v25709) {
          introspect(JAM.policy.p3) {
            var v27418 = f$$4.isFunction(b$$233)
          }
          v25709 = !v27418;
        }
        var v23152 = v25709;
        if (v23152) {
          v23152 = b$$233;
        }
        v17731 = v23152;
      }
      var v12101 = v17731;
      v5117 = {complete:v12100, duration:a$$374, easing:v12101};
    }
    var d$$152 = v5117;
    var v5118;
    var v17732 = f$$4.fx;
    var v12104 = v17732.off;
    if (v12104) {
      v5118 = 0;
    } else {
      var v12103;
      var v25710 = d$$152.duration;
      var v23154 = typeof v25710;
      var v17734 = v23154 == "number";
      if (v17734) {
        v12103 = d$$152.duration;
      } else {
        var v17733;
        var v25711 = d$$152.duration;
        var v27419 = f$$4.fx;
        var v25712 = v27419.speeds;
        var v23158 = v25711 in v25712;
        if (v23158) {
          var v25713 = f$$4.fx;
          var v23155 = v25713.speeds;
          var v23156 = d$$152.duration;
          v17733 = v23155[v23156];
        } else {
          var v25714 = f$$4.fx;
          var v23157 = v25714.speeds;
          v17733 = v23157._default;
        }
        v12103 = v17733;
      }
      v5118 = v12103;
    }
    d$$152.duration = v5118;
    var v17735 = d$$152.queue;
    var v12105 = v17735 == null;
    var v17738 = !v12105;
    if (v17738) {
      var v17736 = d$$152.queue;
      var v17737 = !0;
      v12105 = v17736 === v17737;
    }
    var v5119 = v12105;
    if (v5119) {
      d$$152.queue = "fx";
    }
    d$$152.old = d$$152.complete;
    d$$152.complete = v1051;
    return d$$152;
  }
  function v1050(a$$372, b$$232) {
    function v1049(a$$373, c$$189, d$$151) {
      introspect(JAM.policy.p3) {
        return this.animate(b$$232, a$$373, c$$189, d$$151);
      }
    }
    var v5120 = f$$4.fn;
    introspect(JAM.policy.p2) {
      v5120[a$$372] = v1049;
    }
    return;
  }
  function v1048(a$$370, c$$186, d$$150) {
    function v1047() {
      var b$$230;
      var c$$187 = !1;
      var e$$158 = f$$4.timers;
      introspect(JAM.policy.p3) {
        var g$$93 = f$$4._data(this)
      }
      var v12107 = !d$$150;
      if (v12107) {
        var v12106 = !0;
        introspect(JAM.policy.p3) {
          f$$4._unmark(v12106, this);
        }
      }
      var v5123 = a$$370 == null;
      if (v5123) {
        for (b$$230 in g$$93) {
          var v17739 = g$$93[b$$230];
          if (v17739) {
            var v23159 = g$$93[b$$230];
            v17739 = v23159.stop;
          }
          var v12108 = v17739;
          if (v12108) {
            introspect(JAM.policy.p3) {
              var v17740 = b$$230.indexOf(".run")
            }
            var v23160 = b$$230.length;
            var v17741 = v23160 - 4;
            v12108 = v17740 === v17741;
          }
          var v5121 = v12108;
          if (v5121) {
            var e$$inline_63 = g$$93[b$$230];
            var v12109 = !0;
            introspect(JAM.policy.p3) {
              f$$4.removeData(this, b$$230, v12109);
            }
            introspect(JAM.policy.p3) {
              e$$inline_63.stop(d$$150);
            }
          }
        }
      } else {
        var v17742 = b$$230 = a$$370 + ".run";
        var v12110 = g$$93[v17742];
        if (v12110) {
          var v17743 = g$$93[b$$230];
          v12110 = v17743.stop;
        }
        var v5122 = v12110;
        if (v5122) {
          var e$$inline_68 = g$$93[b$$230];
          var v12111 = !0;
          introspect(JAM.policy.p3) {
            f$$4.removeData(this, b$$230, v12111);
          }
          introspect(JAM.policy.p3) {
            e$$inline_68.stop(d$$150);
          }
        }
      }
      b$$230 = e$$158.length;
      var v5125 = b$$230;
      b$$230 = b$$230 - 1;
      for (;v5125;) {
        var v23161 = e$$158[b$$230];
        var v17744 = v23161.elem;
        var v12112 = v17744 === this;
        if (v12112) {
          var v17745 = a$$370 == null;
          var v23163 = !v17745;
          if (v23163) {
            var v25715 = e$$158[b$$230];
            var v23162 = v25715.queue;
            v17745 = v23162 === a$$370;
          }
          v12112 = v17745;
        }
        var v5124 = v12112;
        if (v5124) {
          var v23164;
          if (d$$150) {
            var v25716 = !0;
            introspect(JAM.policy.p3) {
              v23164 = e$$158[b$$230](v25716);
            }
          } else {
            var v25717 = e$$158[b$$230];
            introspect(JAM.policy.p3) {
              v23164 = v25717.saveState();
            }
          }
          v23164;
          c$$187 = !0;
          introspect(JAM.policy.p3) {
            e$$158.splice(b$$230, 1);
          }
        }
        v5125 = b$$230;
        b$$230 = b$$230 - 1;
      }
      var v12113 = !d$$150;
      var v17746 = !v12113;
      if (v17746) {
        v12113 = !c$$187;
      }
      var v5126 = v12113;
      if (v5126) {
        introspect(JAM.policy.p3) {
          f$$4.dequeue(this, a$$370);
        }
      }
      return;
    }
    var v17747 = typeof a$$370;
    var v12114 = v17747 != "string";
    if (v12114) {
      d$$150 = c$$186;
      c$$186 = a$$370;
      a$$370 = b$$9;
    }
    var v17748 = c$$186;
    if (v17748) {
      var v23165 = !1;
      v17748 = a$$370 !== v23165;
    }
    var v12115 = v17748;
    if (v12115) {
      var v17749 = a$$370 || "fx";
      introspect(JAM.policy.p3) {
        this.queue(v17749, []);
      }
    }
    introspect(JAM.policy.p3) {
      return this.each(v1047);
    }
  }
  function v1046(a$$369, b$$228, c$$184, d$$148) {
    function g$$91() {
      var v12116 = e$$157.queue;
      var v12117 = !1;
      var v5127 = v12116 === v12117;
      if (v5127) {
        introspect(JAM.policy.p3) {
          f$$4._mark(this);
        }
      }
      introspect(JAM.policy.p3) {
        var b$$229 = f$$4.extend({}, e$$157)
      }
      var v5128 = this.nodeType;
      var c$$185 = v5128 === 1;
      var v5129 = c$$185;
      if (v5129) {
        introspect(JAM.policy.p3) {
          var v12118 = f$$4(this)
        }
        introspect(JAM.policy.p3) {
          v5129 = v12118.is(":hidden");
        }
      }
      var d$$149 = v5129;
      var g$$92;
      var h$$75;
      var i$$142;
      var j$$59;
      var k$$37;
      var l$$49;
      var m$$25;
      var n$$76;
      var o$$15;
      var p$$37;
      var q$$14;
      b$$229.animatedProperties = {};
      for (i$$142 in a$$369) {
        introspect(JAM.policy.p3) {
          g$$92 = f$$4.camelCase(i$$142);
        }
        var v12119 = i$$142 !== g$$92;
        if (v12119) {
          introspect(JAM.policy.p2) {
            a$$369[g$$92] = a$$369[i$$142];
          }
          delete a$$369[i$$142];
        }
        var v17750 = f$$4.cssHooks;
        var v12120 = k$$37 = v17750[g$$92];
        if (v12120) {
          v12120 = "expand" in k$$37;
        }
        var v5131 = v12120;
        if (v5131) {
          var v12121 = a$$369[g$$92];
          introspect(JAM.policy.p3) {
            l$$49 = k$$37.expand(v12121);
          }
          delete a$$369[g$$92];
          for (i$$142 in l$$49) {
            var v5130 = i$$142 in a$$369;
            var v12122 = !v5130;
            if (v12122) {
              introspect(JAM.policy.p2) {
                a$$369[i$$142] = l$$49[i$$142];
              }
            }
          }
        }
      }
      for (g$$92 in a$$369) {
        h$$75 = a$$369[g$$92];
        var v12123;
        introspect(JAM.policy.p3) {
          var v17752 = f$$4.isArray(h$$75)
        }
        if (v17752) {
          var v23166 = b$$229.animatedProperties;
          introspect(JAM.policy.p2) {
            v23166[g$$92] = h$$75[1];
          }
          introspect(JAM.policy.p2) {
            v12123 = h$$75 = a$$369[g$$92] = h$$75[0];
          }
        } else {
          var v17751 = b$$229.animatedProperties;
          var v27420 = b$$229.specialEasing;
          if (v27420) {
            var v28503 = b$$229.specialEasing;
            v27420 = v28503[g$$92];
          }
          var v25718 = v27420;
          var v27421 = !v25718;
          if (v27421) {
            v25718 = b$$229.easing;
          }
          var v23167 = v25718;
          var v25719 = !v23167;
          if (v25719) {
            v23167 = "swing";
          }
          introspect(JAM.policy.p2) {
            v12123 = v17751[g$$92] = v23167;
          }
        }
        v12123;
        var v17753 = h$$75 === "hide";
        if (v17753) {
          v17753 = d$$149;
        }
        var v12124 = v17753;
        var v17755 = !v12124;
        if (v17755) {
          var v17754 = h$$75 === "show";
          if (v17754) {
            v17754 = !d$$149;
          }
          v12124 = v17754;
        }
        var v5133 = v12124;
        if (v5133) {
          var v5132 = b$$229.complete;
          introspect(JAM.policy.p3) {
            return v5132.call(this);
          }
        }
        var v12125 = c$$185;
        if (v12125) {
          var v17756 = g$$92 === "height";
          var v23168 = !v17756;
          if (v23168) {
            v17756 = g$$92 === "width";
          }
          v12125 = v17756;
        }
        var v5134 = v12125;
        if (v5134) {
          var v23169 = this.style;
          var v17757 = v23169.overflow;
          var v23170 = this.style;
          var v17758 = v23170.overflowX;
          var v23171 = this.style;
          var v17759 = v23171.overflowY;
          b$$229.overflow = [v17757, v17758, v17759];
          introspect(JAM.policy.p3) {
            var v25720 = f$$4.css(this, "display")
          }
          var v23172 = v25720 === "inline";
          if (v23172) {
            introspect(JAM.policy.p3) {
              var v25721 = f$$4.css(this, "float")
            }
            v23172 = v25721 === "none";
          }
          var v17760 = v23172;
          if (v17760) {
            var v23173;
            var v29192 = f$$4.support;
            var v28504 = v29192.inlineBlockNeedsLayout;
            var v27422 = !v28504;
            var v28506 = !v27422;
            if (v28506) {
              var v29193 = this.nodeName;
              var v28505 = cu(v29193);
              v27422 = v28505 === "inline";
            }
            var v25724 = v27422;
            if (v25724) {
              var v25722 = this.style;
              v23173 = v25722.display = "inline-block";
            } else {
              var v25723 = this.style;
              v23173 = v25723.zoom = 1;
            }
            v23173;
          }
        }
      }
      var v12126 = b$$229.overflow;
      var v5135 = v12126 != null;
      if (v5135) {
        var v12127 = this.style;
        v12127.overflow = "hidden";
      }
      for (i$$142 in a$$369) {
        var v17761 = f$$4.fx;
        j$$59 = new v17761(this, b$$229, i$$142);
        h$$75 = a$$369[i$$142];
        var v12128;
        introspect(JAM.policy.p3) {
          var v17762 = cm.test(h$$75)
        }
        if (v17762) {
          var v25725 = "toggle" + i$$142;
          introspect(JAM.policy.p3) {
            var v23174 = f$$4._data(this, v25725)
          }
          var v25727 = !v23174;
          if (v25727) {
            var v25726;
            var v27424 = h$$75 === "toggle";
            if (v27424) {
              var v27423;
              if (d$$149) {
                v27423 = "show";
              } else {
                v27423 = "hide";
              }
              v25726 = v27423;
            } else {
              v25726 = 0;
            }
            v23174 = v25726;
          }
          q$$14 = v23174;
          var v23175;
          if (q$$14) {
            var v27425 = "toggle" + i$$142;
            var v28507;
            var v29194 = q$$14 === "show";
            if (v29194) {
              v28507 = "hide";
            } else {
              v28507 = "show";
            }
            var v27426 = v28507;
            introspect(JAM.policy.p3) {
              f$$4._data(this, v27425, v27426);
            }
            introspect(JAM.policy.p3) {
              v23175 = j$$59[q$$14]();
            }
          } else {
            introspect(JAM.policy.p3) {
              v23175 = j$$59[h$$75]();
            }
          }
          v12128 = v23175;
        } else {
          introspect(JAM.policy.p3) {
            m$$25 = cn.exec(h$$75);
          }
          introspect(JAM.policy.p3) {
            n$$76 = j$$59.cur();
          }
          var v23176;
          if (m$$25) {
            var v29644 = m$$25[2];
            o$$15 = parseFloat(v29644);
            var v29645 = m$$25[3];
            var v29928 = !v29645;
            if (v29928) {
              var v29927;
              var v30355 = f$$4.cssNumber;
              var v30179 = v30355[i$$142];
              if (v30179) {
                v29927 = "";
              } else {
                v29927 = "px";
              }
              v29645 = v29927;
            }
            p$$37 = v29645;
            var v29195 = p$$37 !== "px";
            if (v29195) {
              var v30356 = o$$15 || 1;
              var v30180 = v30356 + p$$37;
              introspect(JAM.policy.p3) {
                f$$4.style(this, i$$142, v30180);
              }
              var v30357 = o$$15 || 1;
              introspect(JAM.policy.p3) {
                var v30358 = j$$59.cur()
              }
              var v30181 = v30357 / v30358;
              n$$76 = v30181 * n$$76;
              var v29929 = n$$76 + p$$37;
              introspect(JAM.policy.p3) {
                f$$4.style(this, i$$142, v29929);
              }
            }
            var v28508 = m$$25[1];
            if (v28508) {
              var v29930;
              var v30359 = m$$25[1];
              var v30182 = v30359 === "-=";
              if (v30182) {
                v29930 = -1;
              } else {
                v29930 = 1;
              }
              var v29646 = v29930;
              var v29196 = v29646 * o$$15;
              o$$15 = v29196 + n$$76;
            }
            introspect(JAM.policy.p3) {
              v23176 = j$$59.custom(n$$76, o$$15, p$$37);
            }
          } else {
            introspect(JAM.policy.p3) {
              v23176 = j$$59.custom(n$$76, h$$75, "");
            }
          }
          v12128 = v23176;
        }
        v12128;
      }
      return !0;
    }
    introspect(JAM.policy.p3) {
      var e$$157 = f$$4.speed(b$$228, c$$184, d$$148)
    }
    introspect(JAM.policy.p3) {
      var v5138 = f$$4.isEmptyObject(a$$369)
    }
    if (v5138) {
      var v5136 = e$$157.complete;
      var v12129 = !1;
      var v5137 = [v12129];
      introspect(JAM.policy.p3) {
        return this.each(v5136, v5137);
      }
    }
    introspect(JAM.policy.p3) {
      a$$369 = f$$4.extend({}, a$$369);
    }
    var v5139;
    var v17763 = e$$157.queue;
    var v17764 = !1;
    var v12131 = v17763 === v17764;
    if (v12131) {
      introspect(JAM.policy.p3) {
        v5139 = this.each(g$$91);
      }
    } else {
      var v12130 = e$$157.queue;
      introspect(JAM.policy.p3) {
        v5139 = this.queue(v12130, g$$91);
      }
    }
    return v5139;
  }
  function v1045(a$$368, b$$227, c$$183, d$$147) {
    introspect(JAM.policy.p3) {
      var v23177 = this.filter(":hidden")
    }
    introspect(JAM.policy.p3) {
      var v17765 = v23177.css("opacity", 0)
    }
    introspect(JAM.policy.p3) {
      var v12132 = v17765.show()
    }
    introspect(JAM.policy.p3) {
      var v5140 = v12132.end()
    }
    var v5141 = {opacity:b$$227};
    introspect(JAM.policy.p3) {
      return v5140.animate(v5141, a$$368, c$$183, d$$147);
    }
  }
  function v1044(a$$367, b$$225, c$$182) {
    function v1043() {
      var v5142;
      if (d$$146) {
        v5142 = a$$367;
      } else {
        introspect(JAM.policy.p3) {
          var v12133 = f$$4(this)
        }
        introspect(JAM.policy.p3) {
          v5142 = v12133.is(":hidden");
        }
      }
      var b$$226 = v5142;
      introspect(JAM.policy.p3) {
        var v5143 = f$$4(this)
      }
      var v12134;
      if (b$$226) {
        v12134 = "show";
      } else {
        v12134 = "hide";
      }
      var v5144 = v12134;
      introspect(JAM.policy.p3) {
        v5143[v5144]();
      }
      return;
    }
    var v5145 = typeof a$$367;
    var d$$146 = v5145 == "boolean";
    var v5146;
    introspect(JAM.policy.p3) {
      var v17766 = f$$4.isFunction(a$$367)
    }
    if (v17766) {
      introspect(JAM.policy.p3) {
        v17766 = f$$4.isFunction(b$$225);
      }
    }
    var v12137 = v17766;
    if (v12137) {
      var v12135 = this._toggle;
      introspect(JAM.policy.p3) {
        v5146 = v12135.apply(this, arguments);
      }
    } else {
      var v12136;
      var v23178 = a$$367 == null;
      var v25728 = !v23178;
      if (v25728) {
        v23178 = d$$146;
      }
      var v17768 = v23178;
      if (v17768) {
        introspect(JAM.policy.p3) {
          v12136 = this.each(v1043);
        }
      } else {
        var v17767 = ct("toggle", 3);
        introspect(JAM.policy.p3) {
          v12136 = this.animate(v17767, a$$367, b$$225, c$$182);
        }
      }
      v5146 = v12136;
    }
    v5146;
    return this;
  }
  function v1042(a$$366, b$$224, c$$181) {
    var v12138 = a$$366;
    var v17769 = !v12138;
    if (v17769) {
      v12138 = a$$366 === 0;
    }
    var v5148 = v12138;
    if (v5148) {
      var v5147 = ct("hide", 3);
      introspect(JAM.policy.p3) {
        return this.animate(v5147, a$$366, b$$224, c$$181);
      }
    }
    var d$$145;
    var e$$156;
    var g$$90 = 0;
    var h$$74 = this.length;
    var v5149 = g$$90 < h$$74;
    for (;v5149;) {
      d$$145 = this[g$$90];
      var v12139 = d$$145.style;
      if (v12139) {
        introspect(JAM.policy.p3) {
          e$$156 = f$$4.css(d$$145, "display");
        }
        var v25729 = e$$156 !== "none";
        if (v25729) {
          introspect(JAM.policy.p3) {
            var v27427 = f$$4._data(d$$145, "olddisplay")
          }
          v25729 = !v27427;
        }
        var v23179 = v25729;
        if (v23179) {
          introspect(JAM.policy.p3) {
            f$$4._data(d$$145, "olddisplay", e$$156);
          }
        }
      }
      g$$90++;
      v5149 = g$$90 < h$$74;
    }
    g$$90 = 0;
    var v5151 = g$$90 < h$$74;
    for (;v5151;) {
      var v12140 = this[g$$90];
      var v5150 = v12140.style;
      if (v5150) {
        var v17770 = this[g$$90];
        var v12141 = v17770.style;
        v12141.display = "none";
      }
      g$$90++;
      v5151 = g$$90 < h$$74;
    }
    return this;
  }
  function v1041(a$$365, b$$223, c$$180) {
    var d$$144;
    var e$$155;
    var v12142 = a$$365;
    var v17771 = !v12142;
    if (v17771) {
      v12142 = a$$365 === 0;
    }
    var v5153 = v12142;
    if (v5153) {
      var v5152 = ct("show", 3);
      introspect(JAM.policy.p3) {
        return this.animate(v5152, a$$365, b$$223, c$$180);
      }
    }
    var g$$89 = 0;
    var h$$73 = this.length;
    var v5154 = g$$89 < h$$73;
    for (;v5154;) {
      d$$144 = this[g$$89];
      var v12143 = d$$144.style;
      if (v12143) {
        var v25730 = d$$144.style;
        e$$155 = v25730.display;
        introspect(JAM.policy.p3) {
          var v28509 = f$$4._data(d$$144, "olddisplay")
        }
        var v27428 = !v28509;
        if (v27428) {
          v27428 = e$$155 === "none";
        }
        var v25731 = v27428;
        if (v25731) {
          var v27429 = d$$144.style;
          e$$155 = v27429.display = "";
        }
        var v27430 = e$$155 === "";
        if (v27430) {
          introspect(JAM.policy.p3) {
            var v28510 = f$$4.css(d$$144, "display")
          }
          v27430 = v28510 === "none";
        }
        var v25732 = v27430;
        var v27432 = !v25732;
        if (v27432) {
          var v29197 = d$$144.ownerDocument;
          var v28511 = v29197.documentElement;
          introspect(JAM.policy.p3) {
            var v27431 = f$$4.contains(v28511, d$$144)
          }
          v25732 = !v27431;
        }
        var v23180 = v25732;
        if (v23180) {
          var v27433 = d$$144.nodeName;
          var v25733 = cu(v27433);
          introspect(JAM.policy.p3) {
            f$$4._data(d$$144, "olddisplay", v25733);
          }
        }
      }
      g$$89++;
      v5154 = g$$89 < h$$73;
    }
    g$$89 = 0;
    var v5159 = g$$89 < h$$73;
    for (;v5159;) {
      d$$144 = this[g$$89];
      var v5158 = d$$144.style;
      if (v5158) {
        var v5155 = d$$144.style;
        e$$155 = v5155.display;
        var v12144 = e$$155 === "";
        var v17772 = !v12144;
        if (v17772) {
          v12144 = e$$155 === "none";
        }
        var v5157 = v12144;
        if (v5157) {
          var v5156 = d$$144.style;
          introspect(JAM.policy.p3) {
            var v12145 = f$$4._data(d$$144, "olddisplay")
          }
          var v17773 = !v12145;
          if (v17773) {
            v12145 = "";
          }
          v5156.display = v12145;
        }
      }
      g$$89++;
      v5159 = g$$89 < h$$73;
    }
    return this;
  }
  function v1040(c$$179) {
    function v1039() {
      if (d$$143) {
        introspect(JAM.policy.p3) {
          d$$143(0, 1);
        }
      }
      return;
    }
    function v1038(e$$153, g$$88) {
      function v1037(a$$363, e$$154) {
        var j$$58;
        var k$$36;
        var l$$48;
        var m$$24;
        var n$$75;
        try {
          var v12146 = d$$143;
          if (v12146) {
            var v17774 = e$$154;
            var v23182 = !v17774;
            if (v23182) {
              var v23181 = h$$72.readyState;
              v17774 = v23181 === 4;
            }
            v12146 = v17774;
          }
          var v5162 = v12146;
          if (v5162) {
            d$$143 = b$$9;
            if (i$$141) {
              h$$72.onreadystatechange = f$$4.noop;
              if (ce) {
                delete cg[i$$141];
              }
            }
            if (e$$154) {
              var v12147 = h$$72.readyState;
              var v5160 = v12147 !== 4;
              if (v5160) {
                introspect(JAM.policy.p3) {
                  h$$72.abort();
                }
              }
            } else {
              j$$58 = h$$72.status;
              introspect(JAM.policy.p3) {
                l$$48 = h$$72.getAllResponseHeaders();
              }
              m$$24 = {};
              n$$75 = h$$72.responseXML;
              var v17775 = n$$75;
              if (v17775) {
                v17775 = n$$75.documentElement;
              }
              var v12148 = v17775;
              if (v12148) {
                m$$24.xml = n$$75;
              }
              try {
                m$$24.text = h$$72.responseText;
              } catch (a$$364) {
              }
              try {
                k$$36 = h$$72.statusText;
              } catch (o$$14) {
                k$$36 = "";
              }
              var v5161;
              var v23183 = !j$$58;
              if (v23183) {
                v23183 = c$$179.isLocal;
              }
              var v17776 = v23183;
              if (v17776) {
                var v23184 = c$$179.crossDomain;
                v17776 = !v23184;
              }
              var v12151 = v17776;
              if (v12151) {
                var v12149;
                var v17777 = m$$24.text;
                if (v17777) {
                  v12149 = 200;
                } else {
                  v12149 = 404;
                }
                v5161 = j$$58 = v12149;
              } else {
                var v12150 = j$$58 === 1223;
                if (v12150) {
                  v12150 = j$$58 = 204;
                }
                v5161 = v12150;
              }
              v5161;
            }
          }
        } catch (p$$36) {
          var v12152 = !e$$154;
          if (v12152) {
            introspect(JAM.policy.p3) {
              g$$88(-1, p$$36);
            }
          }
        }
        if (m$$24) {
          introspect(JAM.policy.p3) {
            g$$88(j$$58, k$$36, m$$24, l$$48);
          }
        }
        return;
      }
      introspect(JAM.policy.p3) {
        var h$$72 = c$$179.xhr()
      }
      var i$$141;
      var j$$57;
      var v5163;
      var v12161 = c$$179.username;
      if (v12161) {
        var v12153 = c$$179.type;
        var v12154 = c$$179.url;
        var v12155 = c$$179.async;
        var v12156 = c$$179.username;
        var v12157 = c$$179.password;
        introspect(JAM.policy.p3) {
          v5163 = h$$72.open(v12153, v12154, v12155, v12156, v12157);
        }
      } else {
        var v12158 = c$$179.type;
        var v12159 = c$$179.url;
        var v12160 = c$$179.async;
        introspect(JAM.policy.p3) {
          v5163 = h$$72.open(v12158, v12159, v12160);
        }
      }
      v5163;
      var v5166 = c$$179.xhrFields;
      if (v5166) {
        var v5165 = c$$179.xhrFields;
        for (j$$57 in v5165) {
          var v5164 = c$$179.xhrFields;
          introspect(JAM.policy.p2) {
            h$$72[j$$57] = v5164[j$$57];
          }
        }
      }
      var v17778 = c$$179.mimeType;
      if (v17778) {
        v17778 = h$$72.overrideMimeType;
      }
      var v12162 = v17778;
      if (v12162) {
        var v17779 = c$$179.mimeType;
        introspect(JAM.policy.p3) {
          h$$72.overrideMimeType(v17779);
        }
      }
      var v23185 = c$$179.crossDomain;
      var v17780 = !v23185;
      if (v17780) {
        var v23186 = e$$153["X-Requested-With"];
        v17780 = !v23186;
      }
      var v12163 = v17780;
      if (v12163) {
        e$$153["X-Requested-With"] = "XMLHttpRequest";
      }
      try {
        for (j$$57 in e$$153) {
          var v5167 = e$$153[j$$57];
          introspect(JAM.policy.p3) {
            h$$72.setRequestHeader(j$$57, v5167);
          }
        }
      } catch (k$$35) {
      }
      var v25734 = c$$179.hasContent;
      if (v25734) {
        v25734 = c$$179.data;
      }
      var v23187 = v25734;
      var v25735 = !v23187;
      if (v25735) {
        v23187 = null;
      }
      var v17781 = v23187;
      introspect(JAM.policy.p3) {
        h$$72.send(v17781);
      }
      d$$143 = v1037;
      var v12164;
      var v25736 = c$$179.async;
      var v23188 = !v25736;
      var v25738 = !v23188;
      if (v25738) {
        var v25737 = h$$72.readyState;
        v23188 = v25737 === 4;
      }
      var v17782 = v23188;
      if (v17782) {
        introspect(JAM.policy.p3) {
          v12164 = d$$143();
        }
      } else {
        i$$141 = cf = cf + 1;
        if (ce) {
          var v29198 = !cg;
          if (v29198) {
            cg = {};
            introspect(JAM.policy.p3) {
              var v29647 = f$$4(a$$13)
            }
            introspect(JAM.policy.p3) {
              v29647.unload(ce);
            }
          }
          introspect(JAM.policy.p2) {
            cg[i$$141] = d$$143;
          }
        }
        v12164 = h$$72.onreadystatechange = d$$143;
      }
      v12164;
      return;
    }
    var v17783 = c$$179.crossDomain;
    var v12165 = !v17783;
    var v17785 = !v12165;
    if (v17785) {
      var v17784 = f$$4.support;
      v12165 = v17784.cors;
    }
    var v5168 = v12165;
    if (v5168) {
      var d$$143;
      return {send:v1038, abort:v1039};
    }
    return;
  }
  function v1036(a$$362) {
    var v5169 = f$$4.support;
    var v17786 = !a$$362;
    var v12166 = !v17786;
    var v23189 = !a$$362;
    var v17787 = !v23189;
    if (v17787) {
      v17787 = "withCredentials" in a$$362;
    }
    var v12167 = v17787;
    var v5170 = {ajax:v12166, cors:v12167};
    introspect(JAM.policy.p3) {
      f$$4.extend(v5169, v5170);
    }
    return;
  }
  function v1035() {
    var JSCompiler_temp$$0;
    var v17788 = this.isLocal;
    var v12168 = !v17788;
    if (v12168) {
      v12168 = ch$$14();
    }
    var v5172 = JSCompiler_temp$$0 = v12168;
    if (v5172) {
    } else {
      JSCompiler_inline_label_ci_59: {
        try {
          var v5171 = a$$13.ActiveXObject;
          JSCompiler_temp$$0 = new v5171("Microsoft.XMLHTTP");
          break JSCompiler_inline_label_ci_59;
        } catch (b$$inline_58) {
        }
        JSCompiler_temp$$0 = void 0;
      }
    }
    return JSCompiler_temp$$0;
  }
  function v1034() {
    var a$$361;
    for (a$$361 in cg) {
      introspect(JAM.policy.p3) {
        cg[a$$361](0, 1);
      }
    }
    return;
  }
  function v1033(a$$359) {
    function v1032() {
      if (d$$142) {
        introspect(JAM.policy.p3) {
          d$$142.onload(0, 1);
        }
      }
      return;
    }
    function v1031(f$$46, g$$87) {
      function v1030(a$$360, c$$178) {
        var v17789 = c$$178;
        var v23191 = !v17789;
        if (v23191) {
          var v23190 = d$$142.readyState;
          v17789 = !v23190;
        }
        var v12169 = v17789;
        var v17791 = !v12169;
        if (v17791) {
          var v17790 = d$$142.readyState;
          introspect(JAM.policy.p3) {
            v12169 = /loaded|complete/.test(v17790);
          }
        }
        var v5173 = v12169;
        if (v5173) {
          d$$142.onload = d$$142.onreadystatechange = null;
          var v25739 = e$$152;
          if (v25739) {
            v25739 = d$$142.parentNode;
          }
          var v23192 = v25739;
          if (v23192) {
            introspect(JAM.policy.p3) {
              e$$152.removeChild(d$$142);
            }
          }
          d$$142 = b$$9;
          var v17792 = !c$$178;
          if (v17792) {
            introspect(JAM.policy.p3) {
              g$$87(200, "success");
            }
          }
        }
        return;
      }
      introspect(JAM.policy.p3) {
        d$$142 = c$$5.createElement("script");
      }
      d$$142.async = "async";
      var v25740 = a$$359.scriptCharset;
      if (v25740) {
        d$$142.charset = a$$359.scriptCharset;
      }
      d$$142.src = a$$359.url;
      d$$142.onload = d$$142.onreadystatechange = v1030;
      var v12170 = e$$152.firstChild;
      introspect(JAM.policy.p3) {
        e$$152.insertBefore(d$$142, v12170);
      }
      return;
    }
    var v5175 = a$$359.crossDomain;
    if (v5175) {
      var d$$142;
      var v12171 = c$$5.head;
      var v17794 = !v12171;
      if (v17794) {
        introspect(JAM.policy.p3) {
          var v17793 = c$$5.getElementsByTagName("head")
        }
        v12171 = v17793[0];
      }
      var v5174 = v12171;
      var v12172 = !v5174;
      if (v12172) {
        v5174 = c$$5.documentElement;
      }
      var e$$152 = v5174;
      return {send:v1031, abort:v1032};
    }
    return;
  }
  function v1029(a$$358) {
    var v17795 = a$$358.cache;
    var v12173 = v17795 === b$$9;
    if (v12173) {
      a$$358.cache = !1;
    }
    var v12174 = a$$358.crossDomain;
    if (v12174) {
      a$$358.type = "GET";
      a$$358.global = !1;
    }
    return;
  }
  function v1028(a$$357) {
    introspect(JAM.policy.p3) {
      f$$4.globalEval(a$$357);
    }
    return a$$357;
  }
  function v1027(b$$222, c$$177, d$$141) {
    function v1026() {
      var v12176 = !g$$86;
      if (v12176) {
        var v12175 = h$$71 + " was not called";
        introspect(JAM.policy.p3) {
          f$$4.error(v12175);
        }
      }
      return g$$86[0];
    }
    function v1025() {
      introspect(JAM.policy.p2) {
        a$$13[h$$71] = i$$140;
      }
      var v17796 = g$$86;
      if (v17796) {
        introspect(JAM.policy.p3) {
          v17796 = f$$4.isFunction(i$$140);
        }
      }
      var v12177 = v17796;
      if (v12177) {
        var v17797 = g$$86[0];
        introspect(JAM.policy.p3) {
          a$$13[h$$71](v17797);
        }
      }
      return;
    }
    function v1024(a$$356) {
      g$$86 = [a$$356];
      return;
    }
    var v17798 = b$$222.data;
    var v12178 = typeof v17798;
    var v5176 = v12178 == "string";
    if (v5176) {
      var v12179 = b$$222.contentType;
      introspect(JAM.policy.p3) {
        v5176 = /^application\/x\-www\-form\-urlencoded/.test(v12179);
      }
    }
    var e$$151 = v5176;
    var v23193 = b$$222.dataTypes;
    var v17799 = v23193[0];
    var v12180 = v17799 === "jsonp";
    var v17801 = !v12180;
    if (v17801) {
      var v23194 = b$$222.jsonp;
      var v23195 = !1;
      var v17800 = v23194 !== v23195;
      if (v17800) {
        var v25741 = b$$222.url;
        introspect(JAM.policy.p3) {
          var v23196 = cd.test(v25741)
        }
        var v25743 = !v23196;
        if (v25743) {
          var v25742 = e$$151;
          if (v25742) {
            var v27434 = b$$222.data;
            introspect(JAM.policy.p3) {
              v25742 = cd.test(v27434);
            }
          }
          v23196 = v25742;
        }
        v17800 = v23196;
      }
      v12180 = v17800;
    }
    var v5179 = v12180;
    if (v5179) {
      var g$$86;
      var v5177 = b$$222;
      var v12181;
      var v23197 = b$$222.jsonpCallback;
      introspect(JAM.policy.p3) {
        var v17802 = f$$4.isFunction(v23197)
      }
      if (v17802) {
        introspect(JAM.policy.p3) {
          v12181 = b$$222.jsonpCallback();
        }
      } else {
        v12181 = b$$222.jsonpCallback;
      }
      var h$$71 = v5177.jsonpCallback = v12181;
      var i$$140 = a$$13[h$$71];
      var j$$56 = b$$222.url;
      var k$$34 = b$$222.data;
      var v5178 = "$1" + h$$71;
      var l$$47 = v5178 + "$2";
      var v29199 = b$$222.jsonp;
      var v29200 = !1;
      var v28512 = v29199 !== v29200;
      if (v28512) {
        introspect(JAM.policy.p3) {
          j$$56 = j$$56.replace(cd, l$$47);
        }
        var v29931 = b$$222.url;
        var v29648 = v29931 === j$$56;
        if (v29648) {
          if (e$$151) {
            introspect(JAM.policy.p3) {
              k$$34 = k$$34.replace(cd, l$$47);
            }
          }
          var v30360 = b$$222.data;
          var v30183 = v30360 === k$$34;
          if (v30183) {
            var v30495 = j$$56;
            var v30771;
            introspect(JAM.policy.p3) {
              var v30800 = /\?/.test(j$$56)
            }
            if (v30800) {
              v30771 = "&";
            } else {
              v30771 = "?";
            }
            var v30740 = v30771;
            var v30741 = b$$222.jsonp;
            var v30694 = v30740 + v30741;
            var v30617 = v30694 + "=";
            var v30496 = v30617 + h$$71;
            j$$56 = v30495 + v30496;
          }
        }
      }
      b$$222.url = j$$56;
      b$$222.data = k$$34;
      introspect(JAM.policy.p2) {
        a$$13[h$$71] = v1024;
      }
      introspect(JAM.policy.p3) {
        d$$141.always(v1025);
      }
      var v17803 = b$$222.converters;
      v17803["script json"] = v1026;
      var v12182 = b$$222.dataTypes;
      v12182[0] = "json";
      return "script";
    }
    return;
  }
  function v1023() {
    var v12183 = f$$4.expando;
    var v5180 = v12183 + "_";
    var v5181 = cc;
    cc = cc + 1;
    return v5180 + v5181;
  }
  function v1022(a$$354, c$$176) {
    function v1021() {
      var v5182 = this.name;
      var v5183 = this.value;
      e$$150(v5182, v5183);
      return;
    }
    function e$$150(a$$355, b$$221) {
      var v12184;
      introspect(JAM.policy.p3) {
        var v17804 = f$$4.isFunction(b$$221)
      }
      if (v17804) {
        introspect(JAM.policy.p3) {
          v12184 = b$$221();
        }
      } else {
        v12184 = b$$221;
      }
      b$$221 = v12184;
      var v12185 = d$$140;
      var v12186 = d$$140.length;
      var v23198 = encodeURIComponent(a$$355);
      var v17805 = v23198 + "=";
      var v17806 = encodeURIComponent(b$$221);
      v12185[v12186] = v17805 + v17806;
      return;
    }
    var d$$140 = [];
    var v5184 = c$$176 === b$$9;
    if (v5184) {
      var v12187 = f$$4.ajaxSettings;
      c$$176 = v12187.traditional;
    }
    introspect(JAM.policy.p3) {
      var v12188 = f$$4.isArray(a$$354)
    }
    var v17808 = !v12188;
    if (v17808) {
      var v17807 = a$$354.jquery;
      if (v17807) {
        introspect(JAM.policy.p3) {
          var v23199 = f$$4.isPlainObject(a$$354)
        }
        v17807 = !v23199;
      }
      v12188 = v17807;
    }
    var v5186 = v12188;
    if (v5186) {
      introspect(JAM.policy.p3) {
        f$$4.each(a$$354, v1021);
      }
    } else {
      var g$$85;
      for (g$$85 in a$$354) {
        var v5185 = a$$354[g$$85];
        b_(g$$85, v5185, c$$176, e$$150);
      }
    }
    introspect(JAM.policy.p3) {
      var v5187 = d$$140.join("&")
    }
    introspect(JAM.policy.p3) {
      return v5187.replace(bC, "+");
    }
  }
  function v1020(a$$347, c$$172) {
    function v1019() {
      introspect(JAM.policy.p3) {
        v$$9.abort("timeout");
      }
      return;
    }
    function v1018(a$$353) {
      if (a$$353) {
        var b$$220;
        var v5190 = s$$25 < 2;
        if (v5190) {
          for (b$$220 in a$$353) {
            var v5188 = j$$55[b$$220];
            var v5189 = a$$353[b$$220];
            introspect(JAM.policy.p2) {
              j$$55[b$$220] = [v5188, v5189];
            }
          }
        } else {
          var v12189 = v$$9.status;
          b$$220 = a$$353[v12189];
          introspect(JAM.policy.p3) {
            v$$9.then(b$$220, b$$220);
          }
        }
      }
      return this;
    }
    function v1017(a$$352) {
      a$$352 = a$$352 || "abort";
      if (p$$35) {
        introspect(JAM.policy.p3) {
          p$$35.abort(a$$352);
        }
      }
      w$$15(0, a$$352);
      return this;
    }
    function v1016(a$$351) {
      var v12190 = !s$$25;
      if (v12190) {
        d$$139.mimeType = a$$351;
      }
      return this;
    }
    function v1015(a$$350) {
      var c$$175;
      var v5196 = s$$25 === 2;
      if (v5196) {
        var v5193 = !o$$12;
        if (v5193) {
          o$$12 = {};
          introspect(JAM.policy.p3) {
            var v5192 = c$$175 = bG.exec(n$$74)
          }
          for (;v5192;) {
            var v12191 = c$$175[1];
            introspect(JAM.policy.p3) {
              var v5191 = v12191.toLowerCase()
            }
            introspect(JAM.policy.p2) {
              o$$12[v5191] = c$$175[2];
            }
            introspect(JAM.policy.p3) {
              v5192 = c$$175 = bG.exec(n$$74);
            }
          }
        }
        var v5194 = o$$12;
        introspect(JAM.policy.p3) {
          var v5195 = a$$350.toLowerCase()
        }
        c$$175 = v5194[v5195];
      }
      var v5197;
      var v12192 = c$$175 === b$$9;
      if (v12192) {
        v5197 = null;
      } else {
        v5197 = c$$175;
      }
      return v5197;
    }
    function v1014() {
      var v5198;
      var v12193 = s$$25 === 2;
      if (v12193) {
        v5198 = n$$74;
      } else {
        v5198 = null;
      }
      return v5198;
    }
    function v1013(a$$349, b$$219) {
      var v5199 = !s$$25;
      if (v5199) {
        introspect(JAM.policy.p3) {
          var c$$174 = a$$349.toLowerCase()
        }
        var v12194 = m$$22[c$$174];
        var v17809 = !v12194;
        if (v17809) {
          v12194 = a$$349;
        }
        introspect(JAM.policy.p2) {
          a$$349 = m$$22[c$$174] = v12194;
        }
        introspect(JAM.policy.p2) {
          l$$45[a$$349] = b$$219;
        }
      }
      return this;
    }
    function w$$15(a$$348, c$$173, l$$46, m$$23) {
      var v5224 = s$$25 !== 2;
      if (v5224) {
        s$$25 = 2;
        if (q$$13) {
          clearTimeout(q$$13);
        }
        p$$35 = b$$9;
        n$$74 = m$$23 || "";
        var v12195;
        var v17810 = a$$348 > 0;
        if (v17810) {
          v12195 = 4;
        } else {
          v12195 = 0;
        }
        v$$9.readyState = v12195;
        var o$$13;
        var r$$16;
        var u$$9;
        var w$$16 = c$$173;
        var JSCompiler_temp$$2;
        if (l$$46) {
          JSCompiler_inline_label_ca_42: {
            var a$$inline_32 = d$$139;
            var c$$inline_33 = v$$9;
            var d$$inline_34 = l$$46;
            var e$$inline_35 = a$$inline_32.contents;
            var f$$inline_36 = a$$inline_32.dataTypes;
            var g$$inline_37 = a$$inline_32.responseFields;
            var h$$inline_38;
            var i$$inline_39;
            var j$$inline_40;
            var k$$inline_41;
            for (i$$inline_39 in g$$inline_37) {
              var v5200 = i$$inline_39 in d$$inline_34;
              if (v5200) {
                var v12196 = g$$inline_37[i$$inline_39];
                introspect(JAM.policy.p2) {
                  c$$inline_33[v12196] = d$$inline_34[i$$inline_39];
                }
              }
            }
            var v12197 = f$$inline_36[0];
            var v5201 = v12197 === "*";
            for (;v5201;) {
              introspect(JAM.policy.p3) {
                f$$inline_36.shift();
              }
              var v12198 = h$$inline_38 === b$$9;
              if (v12198) {
                var v17811 = a$$inline_32.mimeType;
                var v23200 = !v17811;
                if (v23200) {
                  introspect(JAM.policy.p3) {
                    v17811 = c$$inline_33.getResponseHeader("content-type");
                  }
                }
                h$$inline_38 = v17811;
              }
              var v12199 = f$$inline_36[0];
              v5201 = v12199 === "*";
            }
            if (h$$inline_38) {
              for (i$$inline_39 in e$$inline_35) {
                var v12200 = e$$inline_35[i$$inline_39];
                if (v12200) {
                  var v17812 = e$$inline_35[i$$inline_39];
                  introspect(JAM.policy.p3) {
                    v12200 = v17812.test(h$$inline_38);
                  }
                }
                var v5202 = v12200;
                if (v5202) {
                  introspect(JAM.policy.p3) {
                    f$$inline_36.unshift(i$$inline_39);
                  }
                  break;
                }
              }
            }
            var v12201 = f$$inline_36[0];
            var v5204 = v12201 in d$$inline_34;
            if (v5204) {
              j$$inline_40 = f$$inline_36[0];
            } else {
              for (i$$inline_39 in d$$inline_34) {
                var v17813 = f$$inline_36[0];
                var v12202 = !v17813;
                var v17816 = !v12202;
                if (v17816) {
                  var v17814 = a$$inline_32.converters;
                  var v23201 = i$$inline_39 + " ";
                  var v23202 = f$$inline_36[0];
                  var v17815 = v23201 + v23202;
                  v12202 = v17814[v17815];
                }
                var v5203 = v12202;
                if (v5203) {
                  j$$inline_40 = i$$inline_39;
                  break;
                }
                var v12203 = !k$$inline_41;
                if (v12203) {
                  k$$inline_41 = i$$inline_39;
                }
              }
              j$$inline_40 = j$$inline_40 || k$$inline_41;
            }
            if (j$$inline_40) {
              var v12204 = f$$inline_36[0];
              var v5205 = j$$inline_40 !== v12204;
              if (v5205) {
                introspect(JAM.policy.p3) {
                  f$$inline_36.unshift(j$$inline_40);
                }
              }
              JSCompiler_temp$$2 = d$$inline_34[j$$inline_40];
              break JSCompiler_inline_label_ca_42;
            }
            JSCompiler_temp$$2 = void 0;
          }
        } else {
          JSCompiler_temp$$2 = b$$9;
        }
        var x$$72 = JSCompiler_temp$$2;
        var y$$53;
        var z$$4;
        var v17817 = a$$348 >= 200;
        if (v17817) {
          v17817 = a$$348 < 300;
        }
        var v12205 = v17817;
        var v17818 = !v12205;
        if (v17818) {
          v12205 = a$$348 === 304;
        }
        var v5223 = v12205;
        if (v5223) {
          var v5210 = d$$139.ifModified;
          if (v5210) {
            introspect(JAM.policy.p3) {
              var v5207 = y$$53 = v$$9.getResponseHeader("Last-Modified")
            }
            if (v5207) {
              var v5206 = f$$4.lastModified;
              introspect(JAM.policy.p2) {
                v5206[k$$33] = y$$53;
              }
            }
            introspect(JAM.policy.p3) {
              var v5209 = z$$4 = v$$9.getResponseHeader("Etag")
            }
            if (v5209) {
              var v5208 = f$$4.etag;
              introspect(JAM.policy.p2) {
                v5208[k$$33] = z$$4;
              }
            }
          }
          var v5221 = a$$348 === 304;
          if (v5221) {
            w$$16 = "notmodified";
            o$$13 = !0;
          } else {
            try {
              var JSCompiler_inline_result$$1;
              var a$$inline_43 = d$$139;
              var c$$inline_44 = x$$72;
              var v5211 = a$$inline_43.dataFilter;
              if (v5211) {
                var v12206 = a$$inline_43.dataType;
                introspect(JAM.policy.p3) {
                  c$$inline_44 = a$$inline_43.dataFilter(c$$inline_44, v12206);
                }
              }
              var d$$inline_45 = a$$inline_43.dataTypes;
              var e$$inline_46 = {};
              var g$$inline_47;
              var h$$inline_48;
              var i$$inline_49 = d$$inline_45.length;
              var j$$inline_50;
              var k$$inline_51 = d$$inline_45[0];
              var l$$inline_52;
              var m$$inline_53;
              var n$$inline_54;
              var o$$inline_55;
              var p$$inline_56;
              g$$inline_47 = 1;
              var v5220 = g$$inline_47 < i$$inline_49;
              for (;v5220;) {
                var v5214 = g$$inline_47 === 1;
                if (v5214) {
                  var v5213 = a$$inline_43.converters;
                  for (h$$inline_48 in v5213) {
                    var v12207 = typeof h$$inline_48;
                    var v5212 = v12207 == "string";
                    if (v5212) {
                      introspect(JAM.policy.p3) {
                        var v12208 = h$$inline_48.toLowerCase()
                      }
                      var v17819 = a$$inline_43.converters;
                      introspect(JAM.policy.p2) {
                        e$$inline_46[v12208] = v17819[h$$inline_48];
                      }
                    }
                  }
                }
                l$$inline_52 = k$$inline_51;
                k$$inline_51 = d$$inline_45[g$$inline_47];
                var v5219 = k$$inline_51 === "*";
                if (v5219) {
                  k$$inline_51 = l$$inline_52;
                } else {
                  var v12209 = l$$inline_52 !== "*";
                  if (v12209) {
                    v12209 = l$$inline_52 !== k$$inline_51;
                  }
                  var v5218 = v12209;
                  if (v5218) {
                    var v12210 = l$$inline_52 + " ";
                    m$$inline_53 = v12210 + k$$inline_51;
                    var v12211 = e$$inline_46[m$$inline_53];
                    var v17821 = !v12211;
                    if (v17821) {
                      var v17820 = "* " + k$$inline_51;
                      v12211 = e$$inline_46[v17820];
                    }
                    n$$inline_54 = v12211;
                    var v5217 = !n$$inline_54;
                    if (v5217) {
                      p$$inline_56 = b$$9;
                      for (o$$inline_55 in e$$inline_46) {
                        introspect(JAM.policy.p3) {
                          j$$inline_50 = o$$inline_55.split(" ");
                        }
                        var v17822 = j$$inline_50[0];
                        var v12212 = v17822 === l$$inline_52;
                        var v17824 = !v12212;
                        if (v17824) {
                          var v17823 = j$$inline_50[0];
                          v12212 = v17823 === "*";
                        }
                        var v5216 = v12212;
                        if (v5216) {
                          var v17825 = j$$inline_50[1];
                          var v12213 = v17825 + " ";
                          var v5215 = v12213 + k$$inline_51;
                          p$$inline_56 = e$$inline_46[v5215];
                          if (p$$inline_56) {
                            o$$inline_55 = e$$inline_46[o$$inline_55];
                            var v12214;
                            var v23203 = !0;
                            var v17827 = o$$inline_55 === v23203;
                            if (v17827) {
                              v12214 = n$$inline_54 = p$$inline_56;
                            } else {
                              var v23204 = !0;
                              var v17826 = p$$inline_56 === v23204;
                              if (v17826) {
                                v17826 = n$$inline_54 = o$$inline_55;
                              }
                              v12214 = v17826;
                            }
                            v12214;
                            break;
                          }
                        }
                      }
                    }
                    var v17828 = !n$$inline_54;
                    if (v17828) {
                      v17828 = !p$$inline_56;
                    }
                    var v12215 = v17828;
                    if (v12215) {
                      introspect(JAM.policy.p3) {
                        var v23205 = m$$inline_53.replace(" ", " to ")
                      }
                      var v17829 = "No conversion from " + v23205;
                      introspect(JAM.policy.p3) {
                        f$$4.error(v17829);
                      }
                    }
                    var v17830 = !0;
                    var v12216 = n$$inline_54 !== v17830;
                    if (v12216) {
                      var v17831;
                      if (n$$inline_54) {
                        introspect(JAM.policy.p3) {
                          v17831 = n$$inline_54(c$$inline_44);
                        }
                      } else {
                        introspect(JAM.policy.p3) {
                          var v23206 = o$$inline_55(c$$inline_44)
                        }
                        introspect(JAM.policy.p3) {
                          v17831 = p$$inline_56(v23206);
                        }
                      }
                      c$$inline_44 = v17831;
                    }
                  }
                }
                g$$inline_47++;
                v5220 = g$$inline_47 < i$$inline_49;
              }
              JSCompiler_inline_result$$1 = c$$inline_44;
              r$$16 = JSCompiler_inline_result$$1;
              w$$16 = "success";
              o$$13 = !0;
            } catch (A$$2) {
              w$$16 = "parsererror";
              u$$9 = A$$2;
            }
          }
        } else {
          u$$9 = w$$16;
          var v12217 = !w$$16;
          var v17832 = !v12217;
          if (v17832) {
            v12217 = a$$348;
          }
          var v5222 = v12217;
          if (v5222) {
            w$$16 = "error";
            var v12218 = a$$348 < 0;
            if (v12218) {
              a$$348 = 0;
            }
          }
        }
        v$$9.status = a$$348;
        var v29201 = c$$173 || w$$16;
        v$$9.statusText = "" + v29201;
        var v28513;
        if (o$$13) {
          var v29202 = [r$$16, w$$16, v$$9];
          introspect(JAM.policy.p3) {
            v28513 = h$$70.resolveWith(e$$149, v29202);
          }
        } else {
          var v29203 = [v$$9, w$$16, u$$9];
          introspect(JAM.policy.p3) {
            v28513 = h$$70.rejectWith(e$$149, v29203);
          }
        }
        v28513;
        introspect(JAM.policy.p3) {
          v$$9.statusCode(j$$55);
        }
        j$$55 = b$$9;
        if (t$$10) {
          var v28514;
          if (o$$13) {
            v28514 = "Success";
          } else {
            v28514 = "Error";
          }
          var v27435 = v28514;
          var v25744 = "ajax" + v27435;
          var v28515;
          if (o$$13) {
            v28515 = r$$16;
          } else {
            v28515 = u$$9;
          }
          var v27436 = v28515;
          var v25745 = [v$$9, d$$139, v27436];
          introspect(JAM.policy.p3) {
            g$$84.trigger(v25744, v25745);
          }
        }
        var v17833 = [v$$9, w$$16];
        introspect(JAM.policy.p3) {
          i$$139.fireWith(e$$149, v17833);
        }
        if (t$$10) {
          var v23207 = [v$$9, d$$139];
          introspect(JAM.policy.p3) {
            g$$84.trigger("ajaxComplete", v23207);
          }
          var v27437 = f$$4.active;
          var v23208 = f$$4.active = v27437 - 1;
          var v25747 = !v23208;
          if (v25747) {
            var v25746 = f$$4.event;
            introspect(JAM.policy.p3) {
              v25746.trigger("ajaxStop");
            }
          }
        }
      }
      return;
    }
    var v17834 = typeof a$$347;
    var v12219 = v17834 == "object";
    if (v12219) {
      c$$172 = a$$347;
      a$$347 = b$$9;
    }
    c$$172 = c$$172 || {};
    introspect(JAM.policy.p3) {
      var d$$139 = f$$4.ajaxSetup({}, c$$172)
    }
    var v5225 = d$$139.context;
    var v12220 = !v5225;
    if (v12220) {
      v5225 = d$$139;
    }
    var e$$149 = v5225;
    var v5226;
    var v17835 = e$$149 !== d$$139;
    if (v17835) {
      var v23209 = e$$149.nodeType;
      var v25748 = !v23209;
      if (v25748) {
        v23209 = e$$149 instanceof f$$4;
      }
      v17835 = v23209;
    }
    var v12221 = v17835;
    if (v12221) {
      introspect(JAM.policy.p3) {
        v5226 = f$$4(e$$149);
      }
    } else {
      v5226 = f$$4.event;
    }
    var g$$84 = v5226;
    introspect(JAM.policy.p3) {
      var h$$70 = f$$4.Deferred()
    }
    introspect(JAM.policy.p3) {
      var i$$139 = f$$4.Callbacks("once memory")
    }
    var v5227 = d$$139.statusCode;
    var v12222 = !v5227;
    if (v12222) {
      v5227 = {};
    }
    var j$$55 = v5227;
    var k$$33;
    var l$$45 = {};
    var m$$22 = {};
    var n$$74;
    var o$$12;
    var p$$35;
    var q$$13;
    var r$$15;
    var s$$25 = 0;
    var t$$10;
    var u$$8;
    var v$$9 = {readyState:0, setRequestHeader:v1013, getAllResponseHeaders:v1014, getResponseHeader:v1015, overrideMimeType:v1016, abort:v1017};
    introspect(JAM.policy.p3) {
      h$$70.promise(v$$9);
    }
    v$$9.success = v$$9.done;
    v$$9.error = v$$9.fail;
    v$$9.complete = i$$139.add;
    v$$9.statusCode = v1018;
    var v27438 = d$$139;
    var v29932 = a$$347;
    var v30184 = !v29932;
    if (v30184) {
      v29932 = d$$139.url;
    }
    var v29649 = v29932;
    var v29204 = v29649 + "";
    introspect(JAM.policy.p3) {
      var v28516 = v29204.replace(bF, "")
    }
    var v29205 = bV[1];
    var v28517 = v29205 + "//";
    introspect(JAM.policy.p3) {
      var v31119 = v28516.replace(bK, v28517)
    }
    v27438.url = v31119;
    var v25749 = d$$139;
    var v29650 = d$$139.dataType;
    var v29933 = !v29650;
    if (v29933) {
      v29650 = "*";
    }
    var v29206 = v29650;
    introspect(JAM.policy.p3) {
      var v28518 = f$$4.trim(v29206)
    }
    introspect(JAM.policy.p3) {
      var v27439 = v28518.toLowerCase()
    }
    introspect(JAM.policy.p3) {
      var v31120 = v27439.split(bO)
    }
    v25749.dataTypes = v31120;
    var v25750 = d$$139.crossDomain;
    var v23210 = v25750 == null;
    if (v23210) {
      var v28519 = d$$139.url;
      introspect(JAM.policy.p3) {
        var v27440 = v28519.toLowerCase()
      }
      introspect(JAM.policy.p3) {
        r$$15 = bQ.exec(v27440);
      }
      var v28520 = !r$$15;
      var v29208 = !v28520;
      if (v29208) {
        var v29934 = r$$15[1];
        var v29935 = bV[1];
        var v29651 = v29934 == v29935;
        if (v29651) {
          var v29936 = r$$15[2];
          var v29937 = bV[2];
          v29651 = v29936 == v29937;
        }
        var v29207 = v29651;
        if (v29207) {
          var v29938 = r$$15[3];
          var v30186 = !v29938;
          if (v30186) {
            var v30185;
            var v30497 = r$$15[1];
            var v30361 = v30497 === "http:";
            if (v30361) {
              v30185 = 80;
            } else {
              v30185 = 443;
            }
            v29938 = v30185;
          }
          var v29652 = v29938;
          var v29939 = bV[3];
          var v30188 = !v29939;
          if (v30188) {
            var v30187;
            var v30498 = bV[1];
            var v30362 = v30498 === "http:";
            if (v30362) {
              v30187 = 80;
            } else {
              v30187 = 443;
            }
            v29939 = v30187;
          }
          var v29653 = v29939;
          v29207 = v29652 == v29653;
        }
        v28520 = v29207;
      }
      var v27441 = v28520;
      d$$139.crossDomain = !v27441;
    }
    var v25751 = d$$139.data;
    if (v25751) {
      v25751 = d$$139.processData;
    }
    var v23211 = v25751;
    if (v23211) {
      var v27442 = d$$139.data;
      var v25752 = typeof v27442;
      v23211 = v25752 != "string";
    }
    var v17836 = v23211;
    if (v17836) {
      var v23212 = d$$139;
      var v25753 = d$$139.data;
      var v25754 = d$$139.traditional;
      introspect(JAM.policy.p3) {
        var v31121 = f$$4.param(v25753, v25754)
      }
      v23212.data = v31121;
    }
    bZ(bS, d$$139, c$$172, v$$9);
    var v5228 = s$$25 === 2;
    if (v5228) {
      return !1;
    }
    t$$10 = d$$139.global;
    var v23213 = d$$139;
    var v25755 = d$$139.type;
    introspect(JAM.policy.p3) {
      var v31122 = v25755.toUpperCase()
    }
    v23213.type = v31122;
    var v17837 = d$$139;
    var v25756 = d$$139.type;
    introspect(JAM.policy.p3) {
      var v23214 = bJ.test(v25756)
    }
    v17837.hasContent = !v23214;
    var v17838 = t$$10;
    if (v17838) {
      var v23215 = f$$4.active;
      var v27443 = f$$4.active;
      f$$4.active = v27443 + 1;
      v17838 = v23215 === 0;
    }
    var v12223 = v17838;
    if (v12223) {
      var v17839 = f$$4.event;
      introspect(JAM.policy.p3) {
        v17839.trigger("ajaxStart");
      }
    }
    var v12224 = d$$139.hasContent;
    var v5233 = !v12224;
    if (v5233) {
      var v12225 = d$$139.data;
      if (v12225) {
        var v23216 = d$$139;
        var v27444 = v23216.url;
        var v29209;
        var v29940 = d$$139.url;
        introspect(JAM.policy.p3) {
          var v29654 = bL.test(v29940)
        }
        if (v29654) {
          v29209 = "&";
        } else {
          v29209 = "?";
        }
        var v28521 = v29209;
        var v28522 = d$$139.data;
        var v27445 = v28521 + v28522;
        v23216.url = v27444 + v27445;
        delete d$$139.data;
      }
      k$$33 = d$$139.url;
      var v12226 = d$$139.cache;
      var v12227 = !1;
      var v5232 = v12226 === v12227;
      if (v5232) {
        introspect(JAM.policy.p3) {
          var x$$71 = f$$4.now()
        }
        var v5229 = d$$139.url;
        var v5230 = "$1_=" + x$$71;
        introspect(JAM.policy.p3) {
          var y$$52 = v5229.replace(bP, v5230)
        }
        var v5231 = d$$139;
        var v12228 = y$$52;
        var v17840;
        var v25757 = d$$139.url;
        var v23218 = y$$52 === v25757;
        if (v23218) {
          var v27446;
          var v29210 = d$$139.url;
          introspect(JAM.policy.p3) {
            var v28523 = bL.test(v29210)
          }
          if (v28523) {
            v27446 = "&";
          } else {
            v27446 = "?";
          }
          var v25758 = v27446;
          var v23217 = v25758 + "_=";
          v17840 = v23217 + x$$71;
        } else {
          v17840 = "";
        }
        var v12229 = v17840;
        v5231.url = v12228 + v12229;
      }
    }
    var v27447 = d$$139.data;
    if (v27447) {
      v27447 = d$$139.hasContent;
    }
    var v25759 = v27447;
    if (v25759) {
      var v27448 = d$$139.contentType;
      var v27449 = !1;
      v25759 = v27448 !== v27449;
    }
    var v23219 = v25759;
    var v25760 = !v23219;
    if (v25760) {
      v23219 = c$$172.contentType;
    }
    var v17841 = v23219;
    if (v17841) {
      var v23220 = d$$139.contentType;
      introspect(JAM.policy.p3) {
        v$$9.setRequestHeader("Content-Type", v23220);
      }
    }
    var v17842 = d$$139.ifModified;
    if (v17842) {
      var v27450 = k$$33;
      var v28524 = !v27450;
      if (v28524) {
        v27450 = d$$139.url;
      }
      k$$33 = v27450;
      var v28525 = f$$4.lastModified;
      var v27451 = v28525[k$$33];
      if (v27451) {
        var v29211 = f$$4.lastModified;
        var v28526 = v29211[k$$33];
        introspect(JAM.policy.p3) {
          v$$9.setRequestHeader("If-Modified-Since", v28526);
        }
      }
      var v27452 = f$$4.etag;
      var v25761 = v27452[k$$33];
      if (v25761) {
        var v28527 = f$$4.etag;
        var v27453 = v28527[k$$33];
        introspect(JAM.policy.p3) {
          v$$9.setRequestHeader("If-None-Match", v27453);
        }
      }
    }
    var v17843;
    var v27454 = d$$139.dataTypes;
    var v25762 = v27454[0];
    if (v25762) {
      var v27455 = d$$139.accepts;
      var v28528 = d$$139.dataTypes;
      var v27456 = v28528[0];
      v25762 = v27455[v27456];
    }
    var v23224 = v25762;
    if (v23224) {
      var v25763 = d$$139.accepts;
      var v27457 = d$$139.dataTypes;
      var v25764 = v27457[0];
      var v23221 = v25763[v25764];
      var v25765;
      var v29212 = d$$139.dataTypes;
      var v28529 = v29212[0];
      var v27459 = v28529 !== "*";
      if (v27459) {
        var v27458 = ", " + bW;
        v25765 = v27458 + "; q=0.01";
      } else {
        v25765 = "";
      }
      var v23222 = v25765;
      v17843 = v23221 + v23222;
    } else {
      var v23223 = d$$139.accepts;
      v17843 = v23223["*"];
    }
    var v12230 = v17843;
    introspect(JAM.policy.p3) {
      v$$9.setRequestHeader("Accept", v12230);
    }
    var v5235 = d$$139.headers;
    for (u$$8 in v5235) {
      var v12231 = d$$139.headers;
      var v5234 = v12231[u$$8];
      introspect(JAM.policy.p3) {
        v$$9.setRequestHeader(u$$8, v5234);
      }
    }
    var v12232 = d$$139.beforeSend;
    if (v12232) {
      var v25766 = d$$139.beforeSend;
      introspect(JAM.policy.p3) {
        var v23225 = v25766.call(e$$149, v$$9, d$$139)
      }
      var v23226 = !1;
      var v17844 = v23225 === v23226;
      var v23227 = !v17844;
      if (v23227) {
        v17844 = s$$25 === 2;
      }
      v12232 = v17844;
    }
    var v5236 = v12232;
    if (v5236) {
      introspect(JAM.policy.p3) {
        v$$9.abort();
      }
      return !1;
    }
    var v5238 = {success:1, error:1, complete:1};
    for (u$$8 in v5238) {
      var v5237 = d$$139[u$$8];
      introspect(JAM.policy.p3) {
        v$$9[u$$8](v5237);
      }
    }
    p$$35 = bZ(bT, d$$139, c$$172, v$$9);
    var v5240 = !p$$35;
    if (v5240) {
      w$$15(-1, "No Transport");
    } else {
      v$$9.readyState = 1;
      if (t$$10) {
        var v23228 = [v$$9, d$$139];
        introspect(JAM.policy.p3) {
          g$$84.trigger("ajaxSend", v23228);
        }
      }
      var v17845 = d$$139.async;
      if (v17845) {
        var v23229 = d$$139.timeout;
        v17845 = v23229 > 0;
      }
      var v12233 = v17845;
      if (v12233) {
        var v17846 = d$$139.timeout;
        q$$13 = setTimeout(v1019, v17846);
      }
      try {
        s$$25 = 1;
        introspect(JAM.policy.p3) {
          p$$35.send(l$$45, w$$15);
        }
      } catch (z$$5) {
        var v5239 = s$$25 < 2;
        if (v5239) {
          w$$15(-1, z$$5);
        } else {
          throw z$$5;
        }
      }
    }
    return v$$9;
  }
  function v1012(a$$346, b$$218) {
    var v12234;
    if (b$$218) {
      var v17847 = f$$4.ajaxSettings;
      v12234 = b$(a$$346, v17847);
    } else {
      b$$218 = a$$346;
      v12234 = a$$346 = f$$4.ajaxSettings;
    }
    v12234;
    b$(a$$346, b$$218);
    return a$$346;
  }
  function v1011(a$$345, b$$217, c$$171) {
    introspect(JAM.policy.p3) {
      return f$$4.get(a$$345, b$$217, c$$171, "json");
    }
  }
  function v1010(a$$344, c$$170) {
    introspect(JAM.policy.p3) {
      return f$$4.get(a$$344, b$$9, c$$170, "script");
    }
  }
  function v1009(a$$342, c$$169) {
    function v1008(a$$343, d$$138, e$$148, g$$83) {
      introspect(JAM.policy.p3) {
        var v5241 = f$$4.isFunction(d$$138)
      }
      if (v5241) {
        g$$83 = g$$83 || e$$148;
        e$$148 = d$$138;
        d$$138 = b$$9;
      }
      var v5242 = {type:c$$169, url:a$$343, data:d$$138, success:e$$148, dataType:g$$83};
      introspect(JAM.policy.p3) {
        return f$$4.ajax(v5242);
      }
    }
    introspect(JAM.policy.p2) {
      f$$4[c$$169] = v1008;
    }
    return;
  }
  function v1007(a$$340, b$$216) {
    function v1006(a$$341) {
      introspect(JAM.policy.p3) {
        return this.on(b$$216, a$$341);
      }
    }
    var v5243 = f$$4.fn;
    introspect(JAM.policy.p2) {
      v5243[b$$216] = v1006;
    }
    return;
  }
  function v1005() {
    function v1004(a$$338, b$$215) {
      function v1003(a$$339, c$$168) {
        var v5244 = b$$215.name;
        introspect(JAM.policy.p3) {
          var v5245 = a$$339.replace(bE, "\r\n")
        }
        return {name:v5244, value:v5245};
      }
      introspect(JAM.policy.p3) {
        var v5246 = f$$4(this)
      }
      introspect(JAM.policy.p3) {
        var c$$167 = v5246.val()
      }
      var v5247;
      var v12236 = c$$167 == null;
      if (v12236) {
        v5247 = null;
      } else {
        var v12235;
        introspect(JAM.policy.p3) {
          var v17850 = f$$4.isArray(c$$167)
        }
        if (v17850) {
          introspect(JAM.policy.p3) {
            v12235 = f$$4.map(c$$167, v1003);
          }
        } else {
          var v17848 = b$$215.name;
          introspect(JAM.policy.p3) {
            var v17849 = c$$167.replace(bE, "\r\n")
          }
          v12235 = {name:v17848, value:v17849};
        }
        v5247 = v12235;
      }
      return v5247;
    }
    function v1002() {
      var v12237 = this.name;
      if (v12237) {
        var v17851 = this.disabled;
        v12237 = !v17851;
      }
      var v5248 = v12237;
      if (v5248) {
        var v17852 = this.checked;
        var v23231 = !v17852;
        if (v23231) {
          var v23230 = this.nodeName;
          introspect(JAM.policy.p3) {
            v17852 = bN.test(v23230);
          }
        }
        var v12238 = v17852;
        var v17854 = !v12238;
        if (v17854) {
          var v17853 = this.type;
          introspect(JAM.policy.p3) {
            v12238 = bH.test(v17853);
          }
        }
        v5248 = v12238;
      }
      return v5248;
    }
    function v1001() {
      var v5249;
      var v12240 = this.elements;
      if (v12240) {
        var v12239 = this.elements;
        introspect(JAM.policy.p3) {
          v5249 = f$$4.makeArray(v12239);
        }
      } else {
        v5249 = this;
      }
      return v5249;
    }
    introspect(JAM.policy.p3) {
      var v17855 = this.map(v1001)
    }
    introspect(JAM.policy.p3) {
      var v12241 = v17855.filter(v1002)
    }
    introspect(JAM.policy.p3) {
      var v5250 = v12241.map(v1004)
    }
    introspect(JAM.policy.p3) {
      return v5250.get();
    }
  }
  function v1000() {
    introspect(JAM.policy.p3) {
      var v5251 = this.serializeArray()
    }
    introspect(JAM.policy.p3) {
      return f$$4.param(v5251);
    }
  }
  function v999(a$$335, c$$165, d$$137) {
    function v998(a$$336, b$$214, c$$166) {
      function v997(a$$337) {
        c$$166 = a$$337;
        return;
      }
      c$$166 = a$$336.responseText;
      introspect(JAM.policy.p3) {
        var v17856 = a$$336.isResolved()
      }
      if (v17856) {
        introspect(JAM.policy.p3) {
          a$$336.done(v997);
        }
        var v27460;
        if (g$$82) {
          introspect(JAM.policy.p3) {
            var v29213 = f$$4("<div>")
          }
          introspect(JAM.policy.p3) {
            var v29214 = c$$166.replace(bM, "")
          }
          introspect(JAM.policy.p3) {
            var v28530 = v29213.append(v29214)
          }
          introspect(JAM.policy.p3) {
            v27460 = v28530.find(g$$82);
          }
        } else {
          v27460 = c$$166;
        }
        var v25767 = v27460;
        introspect(JAM.policy.p3) {
          i$$138.html(v25767);
        }
      }
      if (d$$137) {
        var v17857 = [c$$166, b$$214, a$$336];
        introspect(JAM.policy.p3) {
          i$$138.each(d$$137, v17857);
        }
      }
      return;
    }
    var v17858 = typeof a$$335;
    var v12242 = v17858 != "string";
    if (v12242) {
      v12242 = bR;
    }
    var v5252 = v12242;
    if (v5252) {
      introspect(JAM.policy.p3) {
        return bR.apply(this, arguments);
      }
    }
    var v12243 = this.length;
    var v5253 = !v12243;
    if (v5253) {
      return this;
    }
    introspect(JAM.policy.p3) {
      var e$$147 = a$$335.indexOf(" ")
    }
    var v5255 = e$$147 >= 0;
    if (v5255) {
      var v5254 = a$$335.length;
      introspect(JAM.policy.p3) {
        var g$$82 = a$$335.slice(e$$147, v5254)
      }
      introspect(JAM.policy.p3) {
        a$$335 = a$$335.slice(0, e$$147);
      }
    }
    var h$$69 = "GET";
    if (c$$165) {
      var v12244;
      introspect(JAM.policy.p3) {
        var v17860 = f$$4.isFunction(c$$165)
      }
      if (v17860) {
        d$$137 = c$$165;
        v12244 = c$$165 = b$$9;
      } else {
        var v23232 = typeof c$$165;
        var v17859 = v23232 == "object";
        if (v17859) {
          var v27461 = f$$4.ajaxSettings;
          var v25768 = v27461.traditional;
          introspect(JAM.policy.p3) {
            c$$165 = f$$4.param(c$$165, v25768);
          }
          v17859 = h$$69 = "POST";
        }
        v12244 = v17859;
      }
      v12244;
    }
    var i$$138 = this;
    var v5256 = {url:a$$335, type:h$$69, dataType:"html", data:c$$165, complete:v998};
    introspect(JAM.policy.p3) {
      f$$4.ajax(v5256);
    }
    return this;
  }
  function v996(a$$334, b$$213) {
    function v995(c$$164) {
      var d$$136;
      var v5257;
      var v17861 = typeof c$$164;
      var v12245 = v17861 == "string";
      if (v12245) {
        introspect(JAM.policy.p3) {
          v5257 = c$$164.split(" ");
        }
      } else {
        v5257 = [c$$164];
      }
      var e$$146 = v5257;
      var f$$45 = {};
      d$$136 = 0;
      var v5259 = d$$136 < 4;
      for (;v5259;) {
        var v17862 = bx[d$$136];
        var v12246 = a$$334 + v17862;
        var v5258 = v12246 + b$$213;
        var v17863 = e$$146[d$$136];
        var v23234 = !v17863;
        if (v23234) {
          var v23233 = d$$136 - 2;
          v17863 = e$$146[v23233];
        }
        var v12247 = v17863;
        var v17864 = !v12247;
        if (v17864) {
          v12247 = e$$146[0];
        }
        introspect(JAM.policy.p2) {
          f$$45[v5258] = v12247;
        }
        d$$136++;
        v5259 = d$$136 < 4;
      }
      return f$$45;
    }
    var v5260 = f$$4.cssHooks;
    var v5261 = a$$334 + b$$213;
    introspect(JAM.policy.p2) {
      v5260[v5261] = {expand:v995};
    }
    return;
  }
  function v994(a$$333) {
    var v17865 = f$$4.expr;
    var v12248 = v17865.filters;
    introspect(JAM.policy.p3) {
      var v5262 = v12248.hidden(a$$333)
    }
    return !v5262;
  }
  function v993(a$$332) {
    var b$$212 = a$$332.offsetWidth;
    var c$$163 = a$$332.offsetHeight;
    var v12249 = b$$212 === 0;
    if (v12249) {
      v12249 = c$$163 === 0;
    }
    var v5263 = v12249;
    var v12251 = !v5263;
    if (v12251) {
      var v23235 = f$$4.support;
      var v17866 = v23235.reliableHiddenOffsets;
      var v12250 = !v17866;
      if (v12250) {
        var v25769 = a$$332.style;
        if (v25769) {
          var v27462 = a$$332.style;
          v25769 = v27462.display;
        }
        var v23236 = v25769;
        var v25770 = !v23236;
        if (v25770) {
          introspect(JAM.policy.p3) {
            v23236 = f$$4.css(a$$332, "display");
          }
        }
        var v17867 = v23236;
        v12250 = v17867 === "none";
      }
      v5263 = v12250;
    }
    return v5263;
  }
  function v992() {
    function v991(a$$331, b$$211) {
      function v990() {
        var v5264;
        if (b$$211) {
          introspect(JAM.policy.p3) {
            v5264 = by(a$$331, "margin-right");
          }
        } else {
          var v12252 = a$$331.style;
          v5264 = v12252.marginRight;
        }
        return v5264;
      }
      var v5265 = {display:"inline-block"};
      introspect(JAM.policy.p3) {
        return f$$4.swap(a$$331, v5265, v990);
      }
    }
    var v12253 = f$$4.support;
    var v5266 = v12253.reliableMarginRight;
    var v12255 = !v5266;
    if (v12255) {
      var v12254 = f$$4.cssHooks;
      v12254.marginRight = {get:v991};
    }
    return;
  }
  function v989(a$$330, b$$210) {
    var c$$162 = a$$330.style;
    var d$$135 = a$$330.currentStyle;
    var v5267;
    introspect(JAM.policy.p3) {
      var v12257 = f$$4.isNumeric(b$$210)
    }
    if (v12257) {
      var v17868 = b$$210 * 100;
      var v12256 = "alpha(opacity=" + v17868;
      v5267 = v12256 + ")";
    } else {
      v5267 = "";
    }
    var e$$145 = v5267;
    var v17869 = d$$135;
    if (v17869) {
      v17869 = d$$135.filter;
    }
    var v12258 = v17869;
    var v17870 = !v12258;
    if (v17870) {
      v12258 = c$$162.filter;
    }
    var v5268 = v12258;
    var v12259 = !v5268;
    if (v12259) {
      v5268 = "";
    }
    var g$$81 = v5268;
    c$$162.zoom = 1;
    var v12260 = b$$210 >= 1;
    if (v12260) {
      introspect(JAM.policy.p3) {
        var v23237 = g$$81.replace(bp, "")
      }
      introspect(JAM.policy.p3) {
        var v17871 = f$$4.trim(v23237)
      }
      v12260 = v17871 === "";
    }
    var v5270 = v12260;
    if (v5270) {
      introspect(JAM.policy.p3) {
        c$$162.removeAttribute("filter");
      }
      var v12261 = d$$135;
      if (v12261) {
        var v17872 = d$$135.filter;
        v12261 = !v17872;
      }
      var v5269 = v12261;
      if (v5269) {
        return;
      }
    }
    var v5271;
    introspect(JAM.policy.p3) {
      var v12263 = bp.test(g$$81)
    }
    if (v12263) {
      introspect(JAM.policy.p3) {
        v5271 = g$$81.replace(bp, e$$145);
      }
    } else {
      var v12262 = g$$81 + " ";
      v5271 = v12262 + e$$145;
    }
    c$$162.filter = v5271;
    return;
  }
  function v988(a$$329, b$$209) {
    var v5272;
    var v25771;
    var v28531 = b$$209;
    if (v28531) {
      v28531 = a$$329.currentStyle;
    }
    var v27465 = v28531;
    if (v27465) {
      var v27463 = a$$329.currentStyle;
      v25771 = v27463.filter;
    } else {
      var v27464 = a$$329.style;
      v25771 = v27464.filter;
    }
    var v23238 = v25771;
    var v25772 = !v23238;
    if (v25772) {
      v23238 = "";
    }
    var v17873 = v23238;
    introspect(JAM.policy.p3) {
      var v12266 = bq.test(v17873)
    }
    if (v12266) {
      var v23239 = RegExp.$1;
      var v17874 = parseFloat(v23239);
      var v12264 = v17874 / 100;
      v5272 = v12264 + "";
    } else {
      var v12265;
      if (b$$209) {
        v12265 = "1";
      } else {
        v12265 = "";
      }
      v5272 = v12265;
    }
    return v5272;
  }
  function v987(a$$326, b$$207) {
    function v986(a$$328, b$$208) {
      var v5273;
      introspect(JAM.policy.p3) {
        var v12267 = bs.test(b$$208)
      }
      if (v12267) {
        v5273 = b$$208 + "px";
      } else {
        v5273 = b$$208;
      }
      return v5273;
    }
    function v985(a$$327, c$$161, d$$134) {
      function v984() {
        return bB(a$$327, b$$207, d$$134);
      }
      if (c$$161) {
        var v5274;
        var v17875 = a$$327.offsetWidth;
        var v12268 = v17875 !== 0;
        if (v12268) {
          v5274 = bB(a$$327, b$$207, d$$134);
        } else {
          introspect(JAM.policy.p3) {
            v5274 = f$$4.swap(a$$327, bw, v984);
          }
        }
        return v5274;
      }
      return;
    }
    var v5275 = f$$4.cssHooks;
    introspect(JAM.policy.p2) {
      v5275[b$$207] = {get:v985, set:v986};
    }
    return;
  }
  function v983(a$$325, b$$206) {
    var c$$160;
    var d$$133;
    var e$$144;
    var v5276 = a$$325.currentStyle;
    if (v5276) {
      var v12269 = a$$325.currentStyle;
      v5276 = v12269[b$$206];
    }
    var f$$44 = v5276;
    var g$$80 = a$$325.style;
    var v23240 = f$$44 == null;
    if (v23240) {
      v23240 = g$$80;
    }
    var v17876 = v23240;
    if (v17876) {
      v17876 = e$$144 = g$$80[b$$206];
    }
    var v12270 = v17876;
    if (v12270) {
      f$$44 = e$$144;
    }
    introspect(JAM.policy.p3) {
      var v12271 = bt.test(f$$44)
    }
    if (v12271) {
      c$$160 = g$$80.left;
      var v29655 = a$$325.runtimeStyle;
      if (v29655) {
        var v29941 = a$$325.runtimeStyle;
        v29655 = v29941.left;
      }
      d$$133 = v29655;
      if (d$$133) {
        var v29656 = a$$325.runtimeStyle;
        var v29942 = a$$325.currentStyle;
        v29656.left = v29942.left;
      }
      var v28532;
      var v29215 = b$$206 === "fontSize";
      if (v29215) {
        v28532 = "1em";
      } else {
        v28532 = f$$44;
      }
      g$$80.left = v28532;
      var v27466 = g$$80.pixelLeft;
      f$$44 = v27466 + "px";
      g$$80.left = c$$160;
      if (d$$133) {
        var v25773 = a$$325.runtimeStyle;
        v25773.left = d$$133;
      }
    }
    var v5277;
    var v12272 = f$$44 === "";
    if (v12272) {
      v5277 = "auto";
    } else {
      v5277 = f$$44;
    }
    return v5277;
  }
  function v982(a$$324, b$$205) {
    var c$$159;
    var d$$132;
    var e$$143;
    var g$$79;
    var h$$68 = a$$324.style;
    introspect(JAM.policy.p3) {
      var v17877 = b$$205.replace(br, "-$1")
    }
    introspect(JAM.policy.p3) {
      b$$205 = v17877.toLowerCase();
    }
    var v25774 = a$$324.ownerDocument;
    var v23241 = d$$132 = v25774.defaultView;
    if (v23241) {
      introspect(JAM.policy.p3) {
        v23241 = e$$143 = d$$132.getComputedStyle(a$$324, null);
      }
    }
    var v17878 = v23241;
    if (v17878) {
      introspect(JAM.policy.p3) {
        c$$159 = e$$143.getPropertyValue(b$$205);
      }
      var v27467 = c$$159 === "";
      if (v27467) {
        var v29657 = a$$324.ownerDocument;
        var v29216 = v29657.documentElement;
        introspect(JAM.policy.p3) {
          var v28533 = f$$4.contains(v29216, a$$324)
        }
        v27467 = !v28533;
      }
      var v25775 = v27467;
      if (v25775) {
        introspect(JAM.policy.p3) {
          c$$159 = f$$4.style(a$$324, b$$205);
        }
      }
    }
    var v28534 = f$$4.support;
    var v27468 = v28534.pixelMargin;
    var v25776 = !v27468;
    if (v25776) {
      v25776 = e$$143;
    }
    var v23242 = v25776;
    if (v23242) {
      introspect(JAM.policy.p3) {
        v23242 = bv.test(b$$205);
      }
    }
    var v17879 = v23242;
    if (v17879) {
      introspect(JAM.policy.p3) {
        v17879 = bt.test(c$$159);
      }
    }
    var v12273 = v17879;
    if (v12273) {
      g$$79 = h$$68.width;
      h$$68.width = c$$159;
      c$$159 = e$$143.width;
      h$$68.width = g$$79;
    }
    return c$$159;
  }
  function v981(a$$323, b$$204, c$$158) {
    var d$$131 = {};
    var e$$142;
    var f$$43;
    for (f$$43 in b$$204) {
      var v12274 = a$$323.style;
      introspect(JAM.policy.p2) {
        d$$131[f$$43] = v12274[f$$43];
      }
      var v12275 = a$$323.style;
      introspect(JAM.policy.p2) {
        v12275[f$$43] = b$$204[f$$43];
      }
    }
    introspect(JAM.policy.p3) {
      e$$142 = c$$158.call(a$$323);
    }
    for (f$$43 in b$$204) {
      var v5278 = a$$323.style;
      introspect(JAM.policy.p2) {
        v5278[f$$43] = d$$131[f$$43];
      }
    }
    return e$$142;
  }
  function v980(a$$322, c$$157, d$$130) {
    var e$$141;
    var g$$78;
    introspect(JAM.policy.p3) {
      c$$157 = f$$4.camelCase(c$$157);
    }
    var v23243 = f$$4.cssHooks;
    g$$78 = v23243[c$$157];
    var v23244 = f$$4.cssProps;
    var v17880 = v23244[c$$157];
    var v23245 = !v17880;
    if (v23245) {
      v17880 = c$$157;
    }
    c$$157 = v17880;
    var v12276 = c$$157 === "cssFloat";
    if (v12276) {
      c$$157 = "float";
    }
    var v17881 = g$$78;
    if (v17881) {
      v17881 = "get" in g$$78;
    }
    var v12277 = v17881;
    if (v12277) {
      var v23246 = !0;
      introspect(JAM.policy.p3) {
        var v17882 = e$$141 = g$$78.get(a$$322, v23246, d$$130)
      }
      v12277 = v17882 !== b$$9;
    }
    var v5279 = v12277;
    if (v5279) {
      return e$$141;
    }
    if (by) {
      introspect(JAM.policy.p3) {
        return by(a$$322, c$$157);
      }
    }
    return;
  }
  function v979(a$$321, c$$156, d$$129, e$$140) {
    var v25777 = !a$$321;
    var v23247 = !v25777;
    if (v23247) {
      var v25778 = a$$321.nodeType;
      v23247 = v25778 !== 3;
    }
    var v17883 = v23247;
    if (v17883) {
      var v23248 = a$$321.nodeType;
      v17883 = v23248 !== 8;
    }
    var v12278 = v17883;
    if (v12278) {
      var v23249 = a$$321.style;
      var v17884 = !v23249;
      v12278 = !v17884;
    }
    var v5287 = v12278;
    if (v5287) {
      var g$$77;
      var h$$67;
      introspect(JAM.policy.p3) {
        var i$$137 = f$$4.camelCase(c$$156)
      }
      var j$$54 = a$$321.style;
      var v5280 = f$$4.cssHooks;
      var k$$32 = v5280[i$$137];
      var v12279 = f$$4.cssProps;
      var v5281 = v12279[i$$137];
      var v12280 = !v5281;
      if (v12280) {
        v5281 = i$$137;
      }
      c$$156 = v5281;
      var v5283 = d$$129 === b$$9;
      if (v5283) {
        var v17885 = k$$32;
        if (v17885) {
          v17885 = "get" in k$$32;
        }
        var v12281 = v17885;
        if (v12281) {
          var v23250 = !1;
          introspect(JAM.policy.p3) {
            var v17886 = g$$77 = k$$32.get(a$$321, v23250, e$$140)
          }
          v12281 = v17886 !== b$$9;
        }
        var v5282 = v12281;
        if (v5282) {
          return g$$77;
        }
        return j$$54[c$$156];
      }
      h$$67 = typeof d$$129;
      var v17887 = h$$67 === "string";
      if (v17887) {
        introspect(JAM.policy.p3) {
          v17887 = g$$77 = bu.exec(d$$129);
        }
      }
      var v12282 = v17887;
      if (v12282) {
        var v28535 = g$$77[1];
        var v27469 = v28535 + 1;
        var v25779 = +v27469;
        var v27470 = g$$77[2];
        var v25780 = +v27470;
        var v23251 = v25779 * v25780;
        introspect(JAM.policy.p3) {
          var v25781 = f$$4.css(a$$321, c$$156)
        }
        var v23252 = parseFloat(v25781);
        d$$129 = v23251 + v23252;
        h$$67 = "number";
      }
      var v12283 = d$$129 == null;
      var v17889 = !v12283;
      if (v17889) {
        var v17888 = h$$67 === "number";
        if (v17888) {
          v17888 = isNaN(d$$129);
        }
        v12283 = v17888;
      }
      var v5284 = v12283;
      if (v5284) {
        return;
      }
      var v12284 = h$$67 === "number";
      if (v12284) {
        var v23253 = f$$4.cssNumber;
        var v17890 = v23253[i$$137];
        v12284 = !v17890;
      }
      var v5285 = v12284;
      if (v5285) {
        d$$129 = d$$129 + "px";
      }
      var v17891 = !k$$32;
      var v23255 = !v17891;
      if (v23255) {
        var v23254 = "set" in k$$32;
        v17891 = !v23254;
      }
      var v12285 = v17891;
      var v17893 = !v12285;
      if (v17893) {
        introspect(JAM.policy.p3) {
          var v17892 = d$$129 = k$$32.set(a$$321, d$$129)
        }
        v12285 = v17892 !== b$$9;
      }
      var v5286 = v12285;
      if (v5286) {
        try {
          introspect(JAM.policy.p2) {
            j$$54[c$$156] = d$$129;
          }
        } catch (l$$44) {
        }
      }
    }
    return;
  }
  function v978(a$$320, b$$203) {
    if (b$$203) {
      introspect(JAM.policy.p3) {
        var c$$155 = by(a$$320, "opacity")
      }
      var v5288;
      var v12286 = c$$155 === "";
      if (v12286) {
        v5288 = "1";
      } else {
        v5288 = c$$155;
      }
      return v5288;
    }
    var v5289 = a$$320.style;
    return v5289.opacity;
  }
  function v977(a$$318, c$$153) {
    function v976(a$$319, c$$154, d$$128) {
      var v5290;
      var v12287 = d$$128 !== b$$9;
      if (v12287) {
        introspect(JAM.policy.p3) {
          v5290 = f$$4.style(a$$319, c$$154, d$$128);
        }
      } else {
        introspect(JAM.policy.p3) {
          v5290 = f$$4.css(a$$319, c$$154);
        }
      }
      return v5290;
    }
    var v12288 = arguments.length;
    var v5291 = v12288 > 1;
    introspect(JAM.policy.p3) {
      return f$$4.access(this, v976, a$$318, c$$153, v5291);
    }
  }
  function v975(a$$317) {
    var b$$202;
    var c$$152;
    var d$$127 = f$$4.cache;
    var v5292 = f$$4.event;
    var e$$139 = v5292.special;
    var v5293 = f$$4.support;
    var g$$76 = v5293.deleteExpando;
    var h$$66 = 0;
    var i$$136;
    var v12289 = i$$136 = a$$317[h$$66];
    var v5300 = v12289 != null;
    for (;v5300;) {
      var v12290 = i$$136.nodeName;
      if (v12290) {
        var v17894 = f$$4.noData;
        var v23256 = i$$136.nodeName;
        introspect(JAM.policy.p3) {
          var v17895 = v23256.toLowerCase()
        }
        v12290 = v17894[v17895];
      }
      var v5294 = v12290;
      if (v5294) {
        h$$66++;
        var v12291 = i$$136 = a$$317[h$$66];
        v5300 = v12291 != null;
        continue;
      }
      var v5295 = f$$4.expando;
      c$$152 = i$$136[v5295];
      if (c$$152) {
        b$$202 = d$$127[c$$152];
        var v12292 = b$$202;
        if (v12292) {
          v12292 = b$$202.events;
        }
        var v5299 = v12292;
        if (v5299) {
          var j$$53;
          var v5297 = b$$202.events;
          for (j$$53 in v5297) {
            var v5296;
            var v12295 = e$$139[j$$53];
            if (v12295) {
              var v12293 = f$$4.event;
              introspect(JAM.policy.p3) {
                v5296 = v12293.remove(i$$136, j$$53);
              }
            } else {
              var v12294 = b$$202.handle;
              introspect(JAM.policy.p3) {
                v5296 = f$$4.removeEvent(i$$136, j$$53, v12294);
              }
            }
            v5296;
          }
          var v5298 = b$$202.handle;
          if (v5298) {
            var v12296 = b$$202.handle;
            v12296.elem = null;
          }
        }
        var v12297;
        if (g$$76) {
          var v17896 = f$$4.expando;
          v12297 = delete i$$136[v17896];
        } else {
          var v17897 = i$$136.removeAttribute;
          if (v17897) {
            var v23257 = f$$4.expando;
            introspect(JAM.policy.p3) {
              v17897 = i$$136.removeAttribute(v23257);
            }
          }
          v12297 = v17897;
        }
        v12297;
        delete d$$127[c$$152];
      }
      h$$66++;
      var v12298 = i$$136 = a$$317[h$$66];
      v5300 = v12298 != null;
    }
    return;
  }
  function v974(a$$315, b$$201, d$$126, e$$138) {
    function v973(a$$316) {
      var v12299 = a$$316.type;
      var v5301 = !v12299;
      var v12301 = !v5301;
      if (v12301) {
        var v12300 = a$$316.type;
        introspect(JAM.policy.p3) {
          v5301 = be.test(v12300);
        }
      }
      return v5301;
    }
    var g$$75;
    var h$$65;
    var i$$135;
    var j$$52 = [];
    b$$201 = b$$201 || c$$5;
    var v23258 = b$$201.createElement;
    var v17898 = typeof v23258;
    var v12302 = v17898 == "undefined";
    if (v12302) {
      var v23259 = b$$201.ownerDocument;
      var v25783 = !v23259;
      if (v25783) {
        var v25782 = b$$201[0];
        if (v25782) {
          var v27471 = b$$201[0];
          v25782 = v27471.ownerDocument;
        }
        v23259 = v25782;
      }
      var v17899 = v23259;
      var v23260 = !v17899;
      if (v23260) {
        v17899 = c$$5;
      }
      b$$201 = v17899;
    }
    var k$$31 = 0;
    var l$$43;
    var v12303 = l$$43 = a$$315[k$$31];
    var v5319 = v12303 != null;
    for (;v5319;) {
      var v12304 = typeof l$$43;
      var v5302 = v12304 == "number";
      if (v5302) {
        l$$43 = l$$43 + "";
      }
      var v5303 = !l$$43;
      if (v5303) {
        k$$31++;
        var v12305 = l$$43 = a$$315[k$$31];
        v5319 = v12305 != null;
        continue;
      }
      var v12306 = typeof l$$43;
      var v5313 = v12306 == "string";
      if (v5313) {
        introspect(JAM.policy.p3) {
          var v12307 = _$$1.test(l$$43)
        }
        var v5312 = !v12307;
        if (v5312) {
          introspect(JAM.policy.p3) {
            l$$43 = b$$201.createTextNode(l$$43);
          }
        } else {
          introspect(JAM.policy.p3) {
            l$$43 = l$$43.replace(Y, "<$1></$2>");
          }
          introspect(JAM.policy.p3) {
            var v17900 = Z.exec(l$$43)
          }
          var v23261 = !v17900;
          if (v23261) {
            v17900 = ["", ""];
          }
          var v12308 = v17900;
          var v5304 = v12308[1];
          introspect(JAM.policy.p3) {
            var m$$21 = v5304.toLowerCase()
          }
          var v5305 = bg[m$$21];
          var v12309 = !v5305;
          if (v12309) {
            v5305 = bg._default;
          }
          var n$$73 = v5305;
          var o$$11 = n$$73[0];
          introspect(JAM.policy.p3) {
            var p$$34 = b$$201.createElement("div")
          }
          var q$$12 = bh.childNodes;
          var r$$14;
          var v12310;
          var v17902 = b$$201 === c$$5;
          if (v17902) {
            introspect(JAM.policy.p3) {
              v12310 = bh.appendChild(p$$34);
            }
          } else {
            var v17901 = U(b$$201);
            introspect(JAM.policy.p3) {
              v12310 = v17901.appendChild(p$$34);
            }
          }
          v12310;
          var v17903 = n$$73[1];
          var v12311 = v17903 + l$$43;
          var v12312 = n$$73[2];
          p$$34.innerHTML = v12311 + v12312;
          var v5306 = o$$11;
          o$$11 = o$$11 - 1;
          for (;v5306;) {
            p$$34 = p$$34.lastChild;
            v5306 = o$$11;
            o$$11 = o$$11 - 1;
          }
          var v17904 = f$$4.support;
          var v12313 = v17904.tbody;
          var v5311 = !v12313;
          if (v5311) {
            introspect(JAM.policy.p3) {
              var s$$24 = $$$2.test(l$$43)
            }
            var v5307;
            var v17905 = m$$21 === "table";
            if (v17905) {
              v17905 = !s$$24;
            }
            var v12316 = v17905;
            if (v12316) {
              var v12314 = p$$34.firstChild;
              if (v12314) {
                var v17906 = p$$34.firstChild;
                v12314 = v17906.childNodes;
              }
              v5307 = v12314;
            } else {
              var v12315;
              var v25784 = n$$73[1];
              var v23262 = v25784 === "<table>";
              if (v23262) {
                v23262 = !s$$24;
              }
              var v17907 = v23262;
              if (v17907) {
                v12315 = p$$34.childNodes;
              } else {
                v12315 = [];
              }
              v5307 = v12315;
            }
            var t$$9 = v5307;
            var v5308 = t$$9.length;
            i$$135 = v5308 - 1;
            var v5310 = i$$135 >= 0;
            for (;v5310;) {
              var v17908 = t$$9[i$$135];
              introspect(JAM.policy.p3) {
                var v12317 = f$$4.nodeName(v17908, "tbody")
              }
              if (v12317) {
                var v25785 = t$$9[i$$135];
                var v23263 = v25785.childNodes;
                var v17909 = v23263.length;
                v12317 = !v17909;
              }
              var v5309 = v12317;
              if (v5309) {
                var v17910 = t$$9[i$$135];
                var v12318 = v17910.parentNode;
                var v12319 = t$$9[i$$135];
                introspect(JAM.policy.p3) {
                  v12318.removeChild(v12319);
                }
              }
              --i$$135;
              v5310 = i$$135 >= 0;
            }
          }
          var v27472 = f$$4.support;
          var v25786 = v27472.leadingWhitespace;
          var v23264 = !v25786;
          if (v23264) {
            introspect(JAM.policy.p3) {
              v23264 = X.test(l$$43);
            }
          }
          var v17911 = v23264;
          if (v17911) {
            introspect(JAM.policy.p3) {
              var v27473 = X.exec(l$$43)
            }
            var v25787 = v27473[0];
            introspect(JAM.policy.p3) {
              var v23265 = b$$201.createTextNode(v25787)
            }
            var v23266 = p$$34.firstChild;
            introspect(JAM.policy.p3) {
              p$$34.insertBefore(v23265, v23266);
            }
          }
          l$$43 = p$$34.childNodes;
          if (p$$34) {
            var v23267 = p$$34.parentNode;
            introspect(JAM.policy.p3) {
              v23267.removeChild(p$$34);
            }
            var v25788 = q$$12.length;
            var v23268 = v25788 > 0;
            if (v23268) {
              var v28536 = q$$12.length;
              var v27474 = v28536 - 1;
              r$$14 = q$$12[v27474];
              var v28537 = r$$14;
              if (v28537) {
                v28537 = r$$14.parentNode;
              }
              var v27475 = v28537;
              if (v27475) {
                var v28538 = r$$14.parentNode;
                introspect(JAM.policy.p3) {
                  v28538.removeChild(r$$14);
                }
              }
            }
          }
        }
      }
      var u$$7;
      var v17912 = f$$4.support;
      var v12320 = v17912.appendChecked;
      var v5317 = !v12320;
      if (v5317) {
        var v12321 = l$$43[0];
        if (v12321) {
          var v23269 = u$$7 = l$$43.length;
          var v17913 = typeof v23269;
          v12321 = v17913 == "number";
        }
        var v5316 = v12321;
        if (v5316) {
          i$$135 = 0;
          var v5315 = i$$135 < u$$7;
          for (;v5315;) {
            var v5314 = l$$43[i$$135];
            bn(v5314);
            i$$135++;
            v5315 = i$$135 < u$$7;
          }
        } else {
          bn(l$$43);
        }
      }
      var v5318;
      var v12322 = l$$43.nodeType;
      if (v12322) {
        introspect(JAM.policy.p3) {
          v5318 = j$$52.push(l$$43);
        }
      } else {
        introspect(JAM.policy.p3) {
          v5318 = j$$52 = f$$4.merge(j$$52, l$$43);
        }
      }
      v5318;
      k$$31++;
      var v12323 = l$$43 = a$$315[k$$31];
      v5319 = v12323 != null;
    }
    if (d$$126) {
      g$$75 = v973;
      k$$31 = 0;
      var v5326 = j$$52[k$$31];
      for (;v5326;) {
        h$$65 = j$$52[k$$31];
        var v17914 = e$$138;
        if (v17914) {
          introspect(JAM.policy.p3) {
            v17914 = f$$4.nodeName(h$$65, "script");
          }
        }
        var v12324 = v17914;
        if (v12324) {
          var v23270 = h$$65.type;
          var v17915 = !v23270;
          var v23272 = !v17915;
          if (v23272) {
            var v23271 = h$$65.type;
            introspect(JAM.policy.p3) {
              v17915 = be.test(v23271);
            }
          }
          v12324 = v17915;
        }
        var v5325 = v12324;
        if (v5325) {
          var v12325;
          var v17917 = h$$65.parentNode;
          if (v17917) {
            var v17916 = h$$65.parentNode;
            introspect(JAM.policy.p3) {
              v12325 = v17916.removeChild(h$$65);
            }
          } else {
            v12325 = h$$65;
          }
          var v5320 = v12325;
          introspect(JAM.policy.p3) {
            e$$138.push(v5320);
          }
        } else {
          var v12326 = h$$65.nodeType;
          var v5324 = v12326 === 1;
          if (v5324) {
            introspect(JAM.policy.p3) {
              var v5321 = h$$65.getElementsByTagName("script")
            }
            introspect(JAM.policy.p3) {
              var v$$8 = f$$4.grep(v5321, g$$75)
            }
            var v5322 = j$$52.splice;
            var v17918 = k$$31 + 1;
            var v12327 = [v17918, 0];
            introspect(JAM.policy.p3) {
              var v5323 = v12327.concat(v$$8)
            }
            introspect(JAM.policy.p3) {
              v5322.apply(j$$52, v5323);
            }
          }
          introspect(JAM.policy.p3) {
            d$$126.appendChild(h$$65);
          }
        }
        k$$31++;
        v5326 = j$$52[k$$31];
      }
    }
    return j$$52;
  }
  function v972(a$$314, b$$200, c$$151) {
    var d$$125;
    var e$$137;
    var g$$74;
    var JSCompiler_temp$$3;
    var v23273 = f$$4.support;
    var v17919 = v23273.html5Clone;
    var v23274 = !v17919;
    if (v23274) {
      introspect(JAM.policy.p3) {
        v17919 = f$$4.isXMLDoc(a$$314);
      }
    }
    var v12328 = v17919;
    var v17921 = !v12328;
    if (v17921) {
      var v27476 = a$$314.nodeName;
      var v25789 = "<" + v27476;
      var v23275 = v25789 + ">";
      introspect(JAM.policy.p3) {
        var v17920 = bc.test(v23275)
      }
      v12328 = !v17920;
    }
    var v5328 = v12328;
    if (v5328) {
      var v5327 = !0;
      introspect(JAM.policy.p3) {
        JSCompiler_temp$$3 = a$$314.cloneNode(v5327);
      }
    } else {
      var a$$inline_29 = a$$314;
      introspect(JAM.policy.p3) {
        var b$$inline_30 = c$$5.createElement("div")
      }
      introspect(JAM.policy.p3) {
        bh.appendChild(b$$inline_30);
      }
      b$$inline_30.innerHTML = a$$inline_29.outerHTML;
      JSCompiler_temp$$3 = b$$inline_30.firstChild;
    }
    var h$$64 = JSCompiler_temp$$3;
    var v27477 = f$$4.support;
    var v25790 = v27477.noCloneEvent;
    var v23276 = !v25790;
    var v25792 = !v23276;
    if (v25792) {
      var v27478 = f$$4.support;
      var v25791 = v27478.noCloneChecked;
      v23276 = !v25791;
    }
    var v17922 = v23276;
    if (v17922) {
      var v25793 = a$$314.nodeType;
      var v23277 = v25793 === 1;
      var v25795 = !v23277;
      if (v25795) {
        var v25794 = a$$314.nodeType;
        v23277 = v25794 === 11;
      }
      v17922 = v23277;
    }
    var v12329 = v17922;
    if (v12329) {
      introspect(JAM.policy.p3) {
        var v17923 = f$$4.isXMLDoc(a$$314)
      }
      v12329 = !v17923;
    }
    var v5331 = v12329;
    if (v5331) {
      bk(a$$314, h$$64);
      d$$125 = bl(a$$314);
      e$$137 = bl(h$$64);
      g$$74 = 0;
      var v5330 = d$$125[g$$74];
      for (;v5330;) {
        var v5329 = e$$137[g$$74];
        if (v5329) {
          var v12330 = d$$125[g$$74];
          var v12331 = e$$137[g$$74];
          bk(v12330, v12331);
        }
        ++g$$74;
        v5330 = d$$125[g$$74];
      }
    }
    if (b$$200) {
      bj(a$$314, h$$64);
      if (c$$151) {
        d$$125 = bl(a$$314);
        e$$137 = bl(h$$64);
        g$$74 = 0;
        var v5334 = d$$125[g$$74];
        for (;v5334;) {
          var v5332 = d$$125[g$$74];
          var v5333 = e$$137[g$$74];
          bj(v5332, v5333);
          ++g$$74;
          v5334 = d$$125[g$$74];
        }
      }
    }
    d$$125 = e$$137 = null;
    return h$$64;
  }
  function v971(a$$313, b$$199) {
    function v970(c$$150) {
      var d$$124 = [];
      introspect(JAM.policy.p3) {
        var e$$136 = f$$4(c$$150)
      }
      var v12332 = this.length;
      var v5335 = v12332 === 1;
      if (v5335) {
        var v12333 = this[0];
        v5335 = v12333.parentNode;
      }
      var g$$73 = v5335;
      var v23278 = g$$73;
      if (v23278) {
        var v25796 = g$$73.nodeType;
        v23278 = v25796 === 11;
      }
      var v17924 = v23278;
      if (v17924) {
        var v25797 = g$$73.childNodes;
        var v23279 = v25797.length;
        v17924 = v23279 === 1;
      }
      var v12334 = v17924;
      if (v12334) {
        var v17925 = e$$136.length;
        v12334 = v17925 === 1;
      }
      var v5337 = v12334;
      if (v5337) {
        var v5336 = this[0];
        introspect(JAM.policy.p3) {
          e$$136[b$$199](v5336);
        }
        return this;
      }
      var h$$63 = 0;
      var i$$134 = e$$136.length;
      var v5339 = h$$63 < i$$134;
      for (;v5339;) {
        var v12335;
        var v17927 = h$$63 > 0;
        if (v17927) {
          var v17926 = !0;
          introspect(JAM.policy.p3) {
            v12335 = this.clone(v17926);
          }
        } else {
          v12335 = this;
        }
        var v5338 = v12335;
        introspect(JAM.policy.p3) {
          var j$$51 = v5338.get()
        }
        var v17928 = e$$136[h$$63];
        introspect(JAM.policy.p3) {
          var v12336 = f$$4(v17928)
        }
        introspect(JAM.policy.p3) {
          v12336[b$$199](j$$51);
        }
        introspect(JAM.policy.p3) {
          d$$124 = d$$124.concat(j$$51);
        }
        h$$63++;
        v5339 = h$$63 < i$$134;
      }
      var v5340 = e$$136.selector;
      introspect(JAM.policy.p3) {
        return this.pushStack(d$$124, a$$313, v5340);
      }
    }
    var v5341 = f$$4.fn;
    introspect(JAM.policy.p2) {
      v5341[a$$313] = v970;
    }
    return;
  }
  function v969(a$$312, b$$198, d$$123) {
    var e$$135;
    var g$$72;
    var h$$62;
    var i$$133;
    var j$$50 = a$$312[0];
    var v27479 = b$$198;
    if (v27479) {
      v27479 = b$$198[0];
    }
    var v25798 = v27479;
    if (v25798) {
      var v28539 = b$$198[0];
      var v27480 = v28539.ownerDocument;
      var v28540 = !v27480;
      if (v28540) {
        v27480 = b$$198[0];
      }
      i$$133 = v27480;
    }
    var v25799 = i$$133.createDocumentFragment;
    var v27481 = !v25799;
    if (v27481) {
      i$$133 = c$$5;
    }
    var v30363 = a$$312.length;
    var v30189 = v30363 === 1;
    if (v30189) {
      var v30364 = typeof j$$50;
      v30189 = v30364 == "string";
    }
    var v29943 = v30189;
    if (v29943) {
      var v30190 = j$$50.length;
      v29943 = v30190 < 512;
    }
    var v29658 = v29943;
    if (v29658) {
      v29658 = i$$133 === c$$5;
    }
    var v29217 = v29658;
    if (v29217) {
      introspect(JAM.policy.p3) {
        var v29659 = j$$50.charAt(0)
      }
      v29217 = v29659 === "<";
    }
    var v28541 = v29217;
    if (v28541) {
      introspect(JAM.policy.p3) {
        var v29218 = bb.test(j$$50)
      }
      v28541 = !v29218;
    }
    var v27482 = v28541;
    if (v27482) {
      var v29219 = f$$4.support;
      var v28542 = v29219.checkClone;
      var v29221 = !v28542;
      if (v29221) {
        introspect(JAM.policy.p3) {
          var v29220 = bd.test(j$$50)
        }
        v28542 = !v29220;
      }
      v27482 = v28542;
    }
    var v25800 = v27482;
    if (v25800) {
      var v28543 = f$$4.support;
      var v27483 = v28543.html5Clone;
      var v28545 = !v27483;
      if (v28545) {
        introspect(JAM.policy.p3) {
          var v28544 = bc.test(j$$50)
        }
        v27483 = !v28544;
      }
      v25800 = v27483;
    }
    var v23280 = v25800;
    if (v23280) {
      g$$72 = !0;
      var v28546 = f$$4.fragments;
      h$$62 = v28546[j$$50];
      var v28547 = h$$62;
      if (v28547) {
        v28547 = h$$62 !== 1;
      }
      var v27484 = v28547;
      if (v27484) {
        e$$135 = h$$62;
      }
    }
    var v23281 = !e$$135;
    if (v23281) {
      introspect(JAM.policy.p3) {
        e$$135 = i$$133.createDocumentFragment();
      }
      introspect(JAM.policy.p3) {
        f$$4.clean(a$$312, i$$133, e$$135, d$$123);
      }
    }
    if (g$$72) {
      var v17929 = f$$4.fragments;
      var v23282;
      if (h$$62) {
        v23282 = e$$135;
      } else {
        v23282 = 1;
      }
      introspect(JAM.policy.p2) {
        v17929[j$$50] = v23282;
      }
    }
    return {fragment:e$$135, cacheable:g$$72};
  }
  function v968(a$$310, c$$149, d$$122) {
    function v967(a$$311, b$$197) {
      var v12337;
      var v17932 = b$$197.src;
      if (v17932) {
        var v23283 = !1;
        var v23284 = b$$197.src;
        var v23285 = !1;
        var v17930 = {type:"GET", global:v23283, url:v23284, async:v23285, dataType:"script"};
        introspect(JAM.policy.p3) {
          v12337 = f$$4.ajax(v17930);
        }
      } else {
        var v28548 = b$$197.text;
        var v29222 = !v28548;
        if (v29222) {
          v28548 = b$$197.textContent;
        }
        var v27485 = v28548;
        var v28549 = !v27485;
        if (v28549) {
          v27485 = b$$197.innerHTML;
        }
        var v25801 = v27485;
        var v27486 = !v25801;
        if (v27486) {
          v25801 = "";
        }
        var v23286 = v25801;
        introspect(JAM.policy.p3) {
          var v17931 = v23286.replace(bf, "/*$0*/")
        }
        introspect(JAM.policy.p3) {
          v12337 = f$$4.globalEval(v17931);
        }
      }
      v12337;
      var v12338 = b$$197.parentNode;
      if (v12338) {
        var v17933 = b$$197.parentNode;
        introspect(JAM.policy.p3) {
          v17933.removeChild(b$$197);
        }
      }
      return;
    }
    function v966(e$$134) {
      introspect(JAM.policy.p3) {
        var g$$71 = f$$4(this)
      }
      var v12339 = a$$310;
      var v23287;
      if (c$$149) {
        introspect(JAM.policy.p3) {
          v23287 = g$$71.html();
        }
      } else {
        v23287 = b$$9;
      }
      var v17934 = v23287;
      introspect(JAM.policy.p3) {
        var v31123 = j$$49.call(this, e$$134, v17934)
      }
      v12339[0] = v31123;
      introspect(JAM.policy.p3) {
        g$$71.domManip(a$$310, c$$149, d$$122);
      }
      return;
    }
    function v965() {
      introspect(JAM.policy.p3) {
        var v5342 = f$$4(this)
      }
      var v5343 = !0;
      introspect(JAM.policy.p3) {
        v5342.domManip(a$$310, c$$149, d$$122, v5343);
      }
      return;
    }
    var e$$133;
    var g$$70;
    var h$$61;
    var i$$132;
    var j$$49 = a$$310[0];
    var k$$30 = [];
    var v27487 = f$$4.support;
    var v25802 = v27487.checkClone;
    var v23288 = !v25802;
    if (v23288) {
      var v25803 = arguments.length;
      v23288 = v25803 === 3;
    }
    var v17935 = v23288;
    if (v17935) {
      var v23289 = typeof j$$49;
      v17935 = v23289 == "string";
    }
    var v12340 = v17935;
    if (v12340) {
      introspect(JAM.policy.p3) {
        v12340 = bd.test(j$$49);
      }
    }
    var v5344 = v12340;
    if (v5344) {
      introspect(JAM.policy.p3) {
        return this.each(v965);
      }
    }
    introspect(JAM.policy.p3) {
      var v5345 = f$$4.isFunction(j$$49)
    }
    if (v5345) {
      introspect(JAM.policy.p3) {
        return this.each(v966);
      }
    }
    var v5351 = this[0];
    if (v5351) {
      var v23290 = j$$49;
      if (v23290) {
        v23290 = j$$49.parentNode;
      }
      i$$132 = v23290;
      var v23291;
      var v29660 = f$$4.support;
      var v29223 = v29660.parentNode;
      if (v29223) {
        v29223 = i$$132;
      }
      var v28550 = v29223;
      if (v28550) {
        var v29224 = i$$132.nodeType;
        v28550 = v29224 === 11;
      }
      var v27488 = v28550;
      if (v27488) {
        var v29225 = i$$132.childNodes;
        var v28551 = v29225.length;
        var v28552 = this.length;
        v27488 = v28551 === v28552;
      }
      var v25804 = v27488;
      if (v25804) {
        v23291 = e$$133 = {fragment:i$$132};
      } else {
        introspect(JAM.policy.p3) {
          v23291 = e$$133 = f$$4.buildFragment(a$$310, this, k$$30);
        }
      }
      v23291;
      h$$61 = e$$133.fragment;
      var v12341;
      var v25805 = h$$61.childNodes;
      var v23292 = v25805.length;
      var v17936 = v23292 === 1;
      if (v17936) {
        v12341 = g$$70 = h$$61 = h$$61.firstChild;
      } else {
        v12341 = g$$70 = h$$61.firstChild;
      }
      v12341;
      if (g$$70) {
        var v5346 = c$$149;
        if (v5346) {
          introspect(JAM.policy.p3) {
            v5346 = f$$4.nodeName(g$$70, "tr");
          }
        }
        c$$149 = v5346;
        var l$$42 = 0;
        var m$$20 = this.length;
        var n$$72 = m$$20 - 1;
        var v5349 = l$$42 < m$$20;
        for (;v5349;) {
          var v12342;
          if (c$$149) {
            var v17937 = this[l$$42];
            v12342 = bi(v17937, g$$70);
          } else {
            v12342 = this[l$$42];
          }
          var v5347 = v12342;
          var v12343;
          var v23293 = e$$133.cacheable;
          var v25807 = !v23293;
          if (v25807) {
            var v25806 = m$$20 > 1;
            if (v25806) {
              v25806 = l$$42 < n$$72;
            }
            v23293 = v25806;
          }
          var v17940 = v23293;
          if (v17940) {
            var v17938 = !0;
            var v17939 = !0;
            introspect(JAM.policy.p3) {
              v12343 = f$$4.clone(h$$61, v17938, v17939);
            }
          } else {
            v12343 = h$$61;
          }
          var v5348 = v12343;
          introspect(JAM.policy.p3) {
            d$$122.call(v5347, v5348);
          }
          l$$42++;
          v5349 = l$$42 < m$$20;
        }
      }
      var v5350 = k$$30.length;
      if (v5350) {
        introspect(JAM.policy.p3) {
          f$$4.each(k$$30, v967);
        }
      }
    }
    return this;
  }
  function v964(a$$309) {
    var v5352 = !0;
    introspect(JAM.policy.p3) {
      return this.remove(a$$309, v5352);
    }
  }
  function v963(a$$308) {
    function v962() {
      var b$$196 = this.nextSibling;
      var c$$148 = this.parentNode;
      introspect(JAM.policy.p3) {
        var v12344 = f$$4(this)
      }
      introspect(JAM.policy.p3) {
        v12344.remove();
      }
      var v12345;
      if (b$$196) {
        introspect(JAM.policy.p3) {
          var v17941 = f$$4(b$$196)
        }
        introspect(JAM.policy.p3) {
          v12345 = v17941.before(a$$308);
        }
      } else {
        introspect(JAM.policy.p3) {
          var v17942 = f$$4(c$$148)
        }
        introspect(JAM.policy.p3) {
          v12345 = v17942.append(a$$308);
        }
      }
      v12345;
      return;
    }
    function v961(b$$195) {
      introspect(JAM.policy.p3) {
        var c$$147 = f$$4(this)
      }
      introspect(JAM.policy.p3) {
        var d$$121 = c$$147.html()
      }
      introspect(JAM.policy.p3) {
        var v5353 = a$$308.call(this, b$$195, d$$121)
      }
      introspect(JAM.policy.p3) {
        c$$147.replaceWith(v5353);
      }
      return;
    }
    var v12346 = this[0];
    if (v12346) {
      var v17943 = this[0];
      v12346 = v17943.parentNode;
    }
    var v5356 = v12346;
    if (v5356) {
      introspect(JAM.policy.p3) {
        var v5354 = f$$4.isFunction(a$$308)
      }
      if (v5354) {
        introspect(JAM.policy.p3) {
          return this.each(v961);
        }
      }
      var v12347 = typeof a$$308;
      var v5355 = v12347 != "string";
      if (v5355) {
        introspect(JAM.policy.p3) {
          var v12348 = f$$4(a$$308)
        }
        introspect(JAM.policy.p3) {
          a$$308 = v12348.detach();
        }
      }
      introspect(JAM.policy.p3) {
        return this.each(v962);
      }
    }
    var v5357;
    var v12350 = this.length;
    if (v12350) {
      var v23294;
      introspect(JAM.policy.p3) {
        var v25808 = f$$4.isFunction(a$$308)
      }
      if (v25808) {
        introspect(JAM.policy.p3) {
          v23294 = a$$308();
        }
      } else {
        v23294 = a$$308;
      }
      var v17944 = v23294;
      introspect(JAM.policy.p3) {
        var v12349 = f$$4(v17944)
      }
      introspect(JAM.policy.p3) {
        v5357 = this.pushStack(v12349, "replaceWith", a$$308);
      }
    } else {
      v5357 = this;
    }
    return v5357;
  }
  function v960(a$$306) {
    function v959(a$$307) {
      var v5358 = this[0];
      var v12351 = !v5358;
      if (v12351) {
        v5358 = {};
      }
      var c$$146 = v5358;
      var d$$120 = 0;
      var e$$132 = this.length;
      var v5360 = a$$307 === b$$9;
      if (v5360) {
        var v5359;
        var v17945 = c$$146.nodeType;
        var v12353 = v17945 === 1;
        if (v12353) {
          var v12352 = c$$146.innerHTML;
          introspect(JAM.policy.p3) {
            v5359 = v12352.replace(W, "");
          }
        } else {
          v5359 = null;
        }
        return v5359;
      }
      var v25809 = typeof a$$307;
      var v23295 = v25809 == "string";
      if (v23295) {
        introspect(JAM.policy.p3) {
          var v25810 = ba.test(a$$307)
        }
        v23295 = !v25810;
      }
      var v17946 = v23295;
      if (v17946) {
        var v25811 = f$$4.support;
        var v23296 = v25811.leadingWhitespace;
        var v25813 = !v23296;
        if (v25813) {
          introspect(JAM.policy.p3) {
            var v25812 = X.test(a$$307)
          }
          v23296 = !v25812;
        }
        v17946 = v23296;
      }
      var v12354 = v17946;
      if (v12354) {
        var v23297 = bg;
        introspect(JAM.policy.p3) {
          var v28553 = Z.exec(a$$307)
        }
        var v29226 = !v28553;
        if (v29226) {
          v28553 = ["", ""];
        }
        var v27489 = v28553;
        var v25814 = v27489[1];
        introspect(JAM.policy.p3) {
          var v23298 = v25814.toLowerCase()
        }
        var v17947 = v23297[v23298];
        v12354 = !v17947;
      }
      var v5362 = v12354;
      if (v5362) {
        introspect(JAM.policy.p3) {
          a$$307 = a$$307.replace(Y, "<$1></$2>");
        }
        try {
          var v5361 = d$$120 < e$$132;
          for (;v5361;) {
            var v12355 = this[d$$120];
            var v17948 = !v12355;
            if (v17948) {
              v12355 = {};
            }
            c$$146 = v12355;
            var v17949 = c$$146.nodeType;
            var v12356 = v17949 === 1;
            if (v12356) {
              introspect(JAM.policy.p3) {
                var v23299 = c$$146.getElementsByTagName("*")
              }
              introspect(JAM.policy.p3) {
                f$$4.cleanData(v23299);
              }
              c$$146.innerHTML = a$$307;
            }
            d$$120++;
            v5361 = d$$120 < e$$132;
          }
          c$$146 = 0;
        } catch (g$$69) {
        }
      }
      if (c$$146) {
        introspect(JAM.policy.p3) {
          var v12357 = this.empty()
        }
        introspect(JAM.policy.p3) {
          v12357.append(a$$307);
        }
      }
      return;
    }
    var v5363 = arguments.length;
    introspect(JAM.policy.p3) {
      return f$$4.access(this, v959, null, a$$306, v5363);
    }
  }
  function v958(a$$305, b$$194) {
    function v957() {
      introspect(JAM.policy.p3) {
        return f$$4.clone(this, a$$305, b$$194);
      }
    }
    var v12358;
    var v17950 = a$$305 == null;
    if (v17950) {
      v12358 = !1;
    } else {
      v12358 = a$$305;
    }
    a$$305 = v12358;
    var v12359;
    var v17951 = b$$194 == null;
    if (v17951) {
      v12359 = a$$305;
    } else {
      v12359 = b$$194;
    }
    b$$194 = v12359;
    introspect(JAM.policy.p3) {
      return this.map(v957);
    }
  }
  function v956() {
    var a$$304 = 0;
    var b$$193;
    var v12360 = b$$193 = this[a$$304];
    var v5367 = v12360 != null;
    for (;v5367;) {
      var v12361 = b$$193.nodeType;
      var v5364 = v12361 === 1;
      if (v5364) {
        introspect(JAM.policy.p3) {
          var v12362 = b$$193.getElementsByTagName("*")
        }
        introspect(JAM.policy.p3) {
          f$$4.cleanData(v12362);
        }
      }
      var v5366 = b$$193.firstChild;
      for (;v5366;) {
        var v5365 = b$$193.firstChild;
        introspect(JAM.policy.p3) {
          b$$193.removeChild(v5365);
        }
        v5366 = b$$193.firstChild;
      }
      a$$304++;
      var v12363 = b$$193 = this[a$$304];
      v5367 = v12363 != null;
    }
    return this;
  }
  function v955(a$$303, b$$192) {
    var c$$145 = 0;
    var d$$119;
    var v12364 = d$$119 = this[c$$145];
    var v5369 = v12364 != null;
    for (;v5369;) {
      var v12365 = !a$$303;
      var v17953 = !v12365;
      if (v17953) {
        var v23300 = [d$$119];
        introspect(JAM.policy.p3) {
          var v17952 = f$$4.filter(a$$303, v23300)
        }
        v12365 = v17952.length;
      }
      var v5368 = v12365;
      if (v5368) {
        var v17954 = !b$$192;
        if (v17954) {
          var v23301 = d$$119.nodeType;
          v17954 = v23301 === 1;
        }
        var v12366 = v17954;
        if (v12366) {
          introspect(JAM.policy.p3) {
            var v23302 = d$$119.getElementsByTagName("*")
          }
          introspect(JAM.policy.p3) {
            f$$4.cleanData(v23302);
          }
          var v23303 = [d$$119];
          introspect(JAM.policy.p3) {
            f$$4.cleanData(v23303);
          }
        }
        var v12367 = d$$119.parentNode;
        if (v12367) {
          var v17955 = d$$119.parentNode;
          introspect(JAM.policy.p3) {
            v17955.removeChild(d$$119);
          }
        }
      }
      c$$145++;
      var v12368 = d$$119 = this[c$$145];
      v5369 = v12368 != null;
    }
    return this;
  }
  function v954() {
    function v953(a$$302) {
      var v5370 = this.parentNode;
      var v5371 = this.nextSibling;
      introspect(JAM.policy.p3) {
        v5370.insertBefore(a$$302, v5371);
      }
      return;
    }
    var v12369 = this[0];
    if (v12369) {
      var v17956 = this[0];
      v12369 = v17956.parentNode;
    }
    var v5373 = v12369;
    if (v5373) {
      var v5372 = !1;
      introspect(JAM.policy.p3) {
        return this.domManip(arguments, v5372, v953);
      }
    }
    var v5376 = arguments.length;
    if (v5376) {
      introspect(JAM.policy.p3) {
        var a$$301 = this.pushStack(this, "after", arguments)
      }
      var v5374 = a$$301.push;
      introspect(JAM.policy.p3) {
        var v5375 = f$$4.clean(arguments)
      }
      introspect(JAM.policy.p3) {
        v5374.apply(a$$301, v5375);
      }
      return a$$301;
    }
    return;
  }
  function v952() {
    function v951(a$$300) {
      var v5377 = this.parentNode;
      introspect(JAM.policy.p3) {
        v5377.insertBefore(a$$300, this);
      }
      return;
    }
    var v12370 = this[0];
    if (v12370) {
      var v17957 = this[0];
      v12370 = v17957.parentNode;
    }
    var v5379 = v12370;
    if (v5379) {
      var v5378 = !1;
      introspect(JAM.policy.p3) {
        return this.domManip(arguments, v5378, v951);
      }
    }
    var v5382 = arguments.length;
    if (v5382) {
      introspect(JAM.policy.p3) {
        var a$$299 = f$$4.clean(arguments)
      }
      var v5380 = a$$299.push;
      introspect(JAM.policy.p3) {
        var v5381 = this.toArray()
      }
      introspect(JAM.policy.p3) {
        v5380.apply(a$$299, v5381);
      }
      introspect(JAM.policy.p3) {
        return this.pushStack(a$$299, "before", arguments);
      }
    }
    return;
  }
  function v950() {
    function v949(a$$298) {
      var v12371 = this.nodeType;
      var v5383 = v12371 === 1;
      if (v5383) {
        var v12372 = this.firstChild;
        introspect(JAM.policy.p3) {
          this.insertBefore(a$$298, v12372);
        }
      }
      return;
    }
    var v5384 = !0;
    introspect(JAM.policy.p3) {
      return this.domManip(arguments, v5384, v949);
    }
  }
  function v948() {
    function v947(a$$297) {
      var v12373 = this.nodeType;
      var v5385 = v12373 === 1;
      if (v5385) {
        introspect(JAM.policy.p3) {
          this.appendChild(a$$297);
        }
      }
      return;
    }
    var v5386 = !0;
    introspect(JAM.policy.p3) {
      return this.domManip(arguments, v5386, v947);
    }
  }
  function v946() {
    function v945() {
      introspect(JAM.policy.p3) {
        var v5387 = f$$4.nodeName(this, "body")
      }
      var v12376 = !v5387;
      if (v12376) {
        introspect(JAM.policy.p3) {
          var v12374 = f$$4(this)
        }
        var v12375 = this.childNodes;
        introspect(JAM.policy.p3) {
          v12374.replaceWith(v12375);
        }
      }
      return;
    }
    introspect(JAM.policy.p3) {
      var v12377 = this.parent()
    }
    introspect(JAM.policy.p3) {
      var v5388 = v12377.each(v945)
    }
    introspect(JAM.policy.p3) {
      return v5388.end();
    }
  }
  function v944(a$$296) {
    function v943(c$$144) {
      introspect(JAM.policy.p3) {
        var v5389 = f$$4(this)
      }
      var v12378;
      if (b$$191) {
        introspect(JAM.policy.p3) {
          v12378 = a$$296.call(this, c$$144);
        }
      } else {
        v12378 = a$$296;
      }
      var v5390 = v12378;
      introspect(JAM.policy.p3) {
        v5389.wrapAll(v5390);
      }
      return;
    }
    introspect(JAM.policy.p3) {
      var b$$191 = f$$4.isFunction(a$$296)
    }
    introspect(JAM.policy.p3) {
      return this.each(v943);
    }
  }
  function v942(a$$295) {
    function v941() {
      introspect(JAM.policy.p3) {
        var b$$190 = f$$4(this)
      }
      introspect(JAM.policy.p3) {
        var c$$143 = b$$190.contents()
      }
      var v5391;
      var v12379 = c$$143.length;
      if (v12379) {
        introspect(JAM.policy.p3) {
          v5391 = c$$143.wrapAll(a$$295);
        }
      } else {
        introspect(JAM.policy.p3) {
          v5391 = b$$190.append(a$$295);
        }
      }
      v5391;
      return;
    }
    function v940(b$$189) {
      introspect(JAM.policy.p3) {
        var v5392 = f$$4(this)
      }
      introspect(JAM.policy.p3) {
        var v5393 = a$$295.call(this, b$$189)
      }
      introspect(JAM.policy.p3) {
        v5392.wrapInner(v5393);
      }
      return;
    }
    introspect(JAM.policy.p3) {
      var v5394 = f$$4.isFunction(a$$295)
    }
    if (v5394) {
      introspect(JAM.policy.p3) {
        return this.each(v940);
      }
    }
    introspect(JAM.policy.p3) {
      return this.each(v941);
    }
  }
  function v939(a$$293) {
    function v938() {
      var a$$294 = this;
      var v12380 = a$$294.firstChild;
      if (v12380) {
        var v23304 = a$$294.firstChild;
        var v17958 = v23304.nodeType;
        v12380 = v17958 === 1;
      }
      var v5395 = v12380;
      for (;v5395;) {
        a$$294 = a$$294.firstChild;
        var v12381 = a$$294.firstChild;
        if (v12381) {
          var v23305 = a$$294.firstChild;
          var v17959 = v23305.nodeType;
          v12381 = v17959 === 1;
        }
        v5395 = v12381;
      }
      return a$$294;
    }
    function v937(b$$188) {
      introspect(JAM.policy.p3) {
        var v5396 = f$$4(this)
      }
      introspect(JAM.policy.p3) {
        var v5397 = a$$293.call(this, b$$188)
      }
      introspect(JAM.policy.p3) {
        v5396.wrapAll(v5397);
      }
      return;
    }
    introspect(JAM.policy.p3) {
      var v5398 = f$$4.isFunction(a$$293)
    }
    if (v5398) {
      introspect(JAM.policy.p3) {
        return this.each(v937);
      }
    }
    var v5401 = this[0];
    if (v5401) {
      var v23306 = this[0];
      var v17960 = v23306.ownerDocument;
      introspect(JAM.policy.p3) {
        var v12382 = f$$4(a$$293, v17960)
      }
      introspect(JAM.policy.p3) {
        var v5399 = v12382.eq(0)
      }
      var v5400 = !0;
      introspect(JAM.policy.p3) {
        var b$$187 = v5399.clone(v5400)
      }
      var v17961 = this[0];
      var v12383 = v17961.parentNode;
      if (v12383) {
        var v17962 = this[0];
        introspect(JAM.policy.p3) {
          b$$187.insertBefore(v17962);
        }
      }
      introspect(JAM.policy.p3) {
        var v12384 = b$$187.map(v938)
      }
      introspect(JAM.policy.p3) {
        v12384.append(this);
      }
    }
    return this;
  }
  function v936(a$$291) {
    function v935(a$$292) {
      var v5402;
      var v12387 = a$$292 === b$$9;
      if (v12387) {
        introspect(JAM.policy.p3) {
          v5402 = f$$4.text(this);
        }
      } else {
        introspect(JAM.policy.p3) {
          var v12385 = this.empty()
        }
        var v25815 = this[0];
        if (v25815) {
          var v27490 = this[0];
          v25815 = v27490.ownerDocument;
        }
        var v23307 = v25815;
        var v25816 = !v23307;
        if (v25816) {
          v23307 = c$$5;
        }
        var v17963 = v23307;
        introspect(JAM.policy.p3) {
          var v12386 = v17963.createTextNode(a$$292)
        }
        introspect(JAM.policy.p3) {
          v5402 = v12385.append(v12386);
        }
      }
      return v5402;
    }
    var v5403 = arguments.length;
    introspect(JAM.policy.p3) {
      return f$$4.access(this, v935, null, a$$291, v5403);
    }
  }
  function v934(a$$290, b$$186) {
    var c$$142 = [];
    for (;a$$290;) {
      var v17964 = a$$290.nodeType;
      var v12388 = v17964 === 1;
      if (v12388) {
        v12388 = a$$290 !== b$$186;
      }
      var v5404 = v12388;
      if (v5404) {
        introspect(JAM.policy.p3) {
          c$$142.push(a$$290);
        }
      }
      a$$290 = a$$290.nextSibling;
    }
    return c$$142;
  }
  function v933(a$$289, b$$185, c$$141, d$$118) {
    b$$185 = b$$185 || 1;
    var e$$131 = 0;
    for (;a$$289;) {
      var v17965 = a$$289.nodeType;
      var v12389 = v17965 === 1;
      if (v12389) {
        var v17966 = e$$131 = e$$131 + 1;
        v12389 = v17966 === b$$185;
      }
      var v5405 = v12389;
      if (v5405) {
        break;
      }
      a$$289 = a$$289[c$$141];
    }
    return a$$289;
  }
  function v932(a$$288, c$$140, d$$117) {
    var e$$130 = [];
    var g$$68 = a$$288[c$$140];
    var v17967 = g$$68;
    if (v17967) {
      var v23308 = g$$68.nodeType;
      v17967 = v23308 !== 9;
    }
    var v12390 = v17967;
    if (v12390) {
      var v23309 = d$$117 === b$$9;
      var v25818 = !v23309;
      if (v25818) {
        var v25817 = g$$68.nodeType;
        v23309 = v25817 !== 1;
      }
      var v17968 = v23309;
      var v23311 = !v17968;
      if (v23311) {
        introspect(JAM.policy.p3) {
          var v25819 = f$$4(g$$68)
        }
        introspect(JAM.policy.p3) {
          var v23310 = v25819.is(d$$117)
        }
        v17968 = !v23310;
      }
      v12390 = v17968;
    }
    var v5406 = v12390;
    for (;v5406;) {
      var v17969 = g$$68.nodeType;
      var v12391 = v17969 === 1;
      if (v12391) {
        introspect(JAM.policy.p3) {
          e$$130.push(g$$68);
        }
      }
      g$$68 = g$$68[c$$140];
      var v17970 = g$$68;
      if (v17970) {
        var v23312 = g$$68.nodeType;
        v17970 = v23312 !== 9;
      }
      var v12392 = v17970;
      if (v12392) {
        var v23313 = d$$117 === b$$9;
        var v25821 = !v23313;
        if (v25821) {
          var v25820 = g$$68.nodeType;
          v23313 = v25820 !== 1;
        }
        var v17971 = v23313;
        var v23315 = !v17971;
        if (v23315) {
          introspect(JAM.policy.p3) {
            var v25822 = f$$4(g$$68)
          }
          introspect(JAM.policy.p3) {
            var v23314 = v25822.is(d$$117)
          }
          v17971 = !v23314;
        }
        v12392 = v17971;
      }
      v5406 = v12392;
    }
    return e$$130;
  }
  function v931(a$$287, b$$184, c$$139) {
    if (c$$139) {
      var v12393 = ":not(" + a$$287;
      a$$287 = v12393 + ")";
    }
    var v5407;
    var v17972 = b$$184.length;
    var v12396 = v17972 === 1;
    if (v12396) {
      var v12394;
      var v23316 = f$$4.find;
      var v23317 = b$$184[0];
      introspect(JAM.policy.p3) {
        var v17974 = v23316.matchesSelector(v23317, a$$287)
      }
      if (v17974) {
        var v17973 = b$$184[0];
        v12394 = [v17973];
      } else {
        v12394 = [];
      }
      v5407 = v12394;
    } else {
      var v12395 = f$$4.find;
      introspect(JAM.policy.p3) {
        v5407 = v12395.matches(a$$287, b$$184);
      }
    }
    return v5407;
  }
  function v930(a$$286, b$$183) {
    function v929(c$$138, d$$116) {
      introspect(JAM.policy.p3) {
        var e$$129 = f$$4.map(this, b$$183, c$$138)
      }
      introspect(JAM.policy.p3) {
        var v23318 = L.test(a$$286)
      }
      var v25823 = !v23318;
      if (v25823) {
        d$$116 = c$$138;
      }
      var v25824 = d$$116;
      if (v25824) {
        var v27491 = typeof d$$116;
        v25824 = v27491 == "string";
      }
      var v23319 = v25824;
      if (v23319) {
        introspect(JAM.policy.p3) {
          e$$129 = f$$4.filter(d$$116, e$$129);
        }
      }
      var v17975;
      var v27492 = this.length;
      var v25825 = v27492 > 1;
      if (v25825) {
        var v27493 = R[a$$286];
        v25825 = !v27493;
      }
      var v23320 = v25825;
      if (v23320) {
        introspect(JAM.policy.p3) {
          v17975 = f$$4.unique(e$$129);
        }
      } else {
        v17975 = e$$129;
      }
      e$$129 = v17975;
      var v25826 = this.length;
      var v23321 = v25826 > 1;
      var v25827 = !v23321;
      if (v25827) {
        introspect(JAM.policy.p3) {
          v23321 = N.test(d$$116);
        }
      }
      var v17976 = v23321;
      if (v17976) {
        introspect(JAM.policy.p3) {
          v17976 = M.test(a$$286);
        }
      }
      var v12397 = v17976;
      if (v12397) {
        introspect(JAM.policy.p3) {
          e$$129 = e$$129.reverse();
        }
      }
      introspect(JAM.policy.p3) {
        var v12398 = P.call(arguments)
      }
      introspect(JAM.policy.p3) {
        var v5408 = v12398.join(",")
      }
      introspect(JAM.policy.p3) {
        return this.pushStack(e$$129, a$$286, v5408);
      }
    }
    var v5409 = f$$4.fn;
    introspect(JAM.policy.p2) {
      v5409[a$$286] = v929;
    }
    return;
  }
  function v928(a$$285) {
    var v5410;
    introspect(JAM.policy.p3) {
      var v12401 = f$$4.nodeName(a$$285, "iframe")
    }
    if (v12401) {
      var v12399 = a$$285.contentDocument;
      var v17978 = !v12399;
      if (v17978) {
        var v17977 = a$$285.contentWindow;
        v12399 = v17977.document;
      }
      v5410 = v12399;
    } else {
      var v12400 = a$$285.childNodes;
      introspect(JAM.policy.p3) {
        v5410 = f$$4.makeArray(v12400);
      }
    }
    return v5410;
  }
  function v927(a$$284) {
    var v5411 = a$$284.firstChild;
    introspect(JAM.policy.p3) {
      return f$$4.sibling(v5411);
    }
  }
  function v926(a$$283) {
    var v17979 = a$$283.parentNode;
    var v23322 = !v17979;
    if (v23322) {
      v17979 = {};
    }
    var v12402 = v17979;
    var v5412 = v12402.firstChild;
    introspect(JAM.policy.p3) {
      return f$$4.sibling(v5412, a$$283);
    }
  }
  function v925(a$$282, b$$182, c$$137) {
    introspect(JAM.policy.p3) {
      return f$$4.dir(a$$282, "previousSibling", c$$137);
    }
  }
  function v924(a$$281, b$$181, c$$136) {
    introspect(JAM.policy.p3) {
      return f$$4.dir(a$$281, "nextSibling", c$$136);
    }
  }
  function v923(a$$280) {
    introspect(JAM.policy.p3) {
      return f$$4.dir(a$$280, "previousSibling");
    }
  }
  function v922(a$$279) {
    introspect(JAM.policy.p3) {
      return f$$4.dir(a$$279, "nextSibling");
    }
  }
  function v921(a$$278) {
    introspect(JAM.policy.p3) {
      return f$$4.nth(a$$278, 2, "previousSibling");
    }
  }
  function v920(a$$277) {
    introspect(JAM.policy.p3) {
      return f$$4.nth(a$$277, 2, "nextSibling");
    }
  }
  function v919(a$$276, b$$180, c$$135) {
    introspect(JAM.policy.p3) {
      return f$$4.dir(a$$276, "parentNode", c$$135);
    }
  }
  function v918(a$$275) {
    introspect(JAM.policy.p3) {
      return f$$4.dir(a$$275, "parentNode");
    }
  }
  function v917(a$$274) {
    var b$$179 = a$$274.parentNode;
    var v5413;
    var v17980 = b$$179;
    if (v17980) {
      var v23323 = b$$179.nodeType;
      v17980 = v23323 !== 11;
    }
    var v12403 = v17980;
    if (v12403) {
      v5413 = b$$179;
    } else {
      v5413 = null;
    }
    return v5413;
  }
  function v916() {
    var v5414 = this.prevObject;
    introspect(JAM.policy.p3) {
      return this.add(v5414);
    }
  }
  function v915(a$$273, b$$178) {
    var v5415;
    var v17981 = typeof a$$273;
    var v12405 = v17981 == "string";
    if (v12405) {
      introspect(JAM.policy.p3) {
        v5415 = f$$4(a$$273, b$$178);
      }
    } else {
      var v17982;
      var v25828 = a$$273;
      if (v25828) {
        v25828 = a$$273.nodeType;
      }
      var v23324 = v25828;
      if (v23324) {
        v17982 = [a$$273];
      } else {
        v17982 = a$$273;
      }
      var v12404 = v17982;
      introspect(JAM.policy.p3) {
        v5415 = f$$4.makeArray(v12404);
      }
    }
    var c$$134 = v5415;
    introspect(JAM.policy.p3) {
      var v5416 = this.get()
    }
    introspect(JAM.policy.p3) {
      var d$$115 = f$$4.merge(v5416, c$$134)
    }
    var v12406;
    var v25829 = c$$134[0];
    var v23325 = S(v25829);
    var v25831 = !v23325;
    if (v25831) {
      var v25830 = d$$115[0];
      v23325 = S(v25830);
    }
    var v17983 = v23325;
    if (v17983) {
      v12406 = d$$115;
    } else {
      introspect(JAM.policy.p3) {
        v12406 = f$$4.unique(d$$115);
      }
    }
    var v5417 = v12406;
    introspect(JAM.policy.p3) {
      return this.pushStack(v5417);
    }
  }
  function v914(a$$272) {
    var v5419 = !a$$272;
    if (v5419) {
      var v5418;
      var v17984 = this[0];
      if (v17984) {
        var v23326 = this[0];
        v17984 = v23326.parentNode;
      }
      var v12408 = v17984;
      if (v12408) {
        introspect(JAM.policy.p3) {
          var v12407 = this.prevAll()
        }
        v5418 = v12407.length;
      } else {
        v5418 = -1;
      }
      return v5418;
    }
    var v12409 = typeof a$$272;
    var v5422 = v12409 == "string";
    if (v5422) {
      var v5420 = this[0];
      introspect(JAM.policy.p3) {
        var v5421 = f$$4(a$$272)
      }
      introspect(JAM.policy.p3) {
        return f$$4.inArray(v5420, v5421);
      }
    }
    var v12410;
    var v17985 = a$$272.jquery;
    if (v17985) {
      v12410 = a$$272[0];
    } else {
      v12410 = a$$272;
    }
    var v5423 = v12410;
    introspect(JAM.policy.p3) {
      return f$$4.inArray(v5423, this);
    }
  }
  function v913(a$$271, b$$177) {
    var c$$133 = [];
    var d$$114;
    var e$$128;
    var g$$67 = this[0];
    introspect(JAM.policy.p3) {
      var v5427 = f$$4.isArray(a$$271)
    }
    if (v5427) {
      var h$$60 = 1;
      var v17986 = g$$67;
      if (v17986) {
        v17986 = g$$67.ownerDocument;
      }
      var v12411 = v17986;
      if (v12411) {
        v12411 = g$$67 !== b$$177;
      }
      var v5426 = v12411;
      for (;v5426;) {
        d$$114 = 0;
        var v12412 = a$$271.length;
        var v5425 = d$$114 < v12412;
        for (;v5425;) {
          introspect(JAM.policy.p3) {
            var v12413 = f$$4(g$$67)
          }
          var v12414 = a$$271[d$$114];
          introspect(JAM.policy.p3) {
            var v5424 = v12413.is(v12414)
          }
          if (v5424) {
            var v17987 = a$$271[d$$114];
            var v12415 = {selector:v17987, elem:g$$67, level:h$$60};
            introspect(JAM.policy.p3) {
              c$$133.push(v12415);
            }
          }
          d$$114++;
          var v12416 = a$$271.length;
          v5425 = d$$114 < v12416;
        }
        g$$67 = g$$67.parentNode;
        h$$60++;
        var v17988 = g$$67;
        if (v17988) {
          v17988 = g$$67.ownerDocument;
        }
        var v12417 = v17988;
        if (v12417) {
          v12417 = g$$67 !== b$$177;
        }
        v5426 = v12417;
      }
      return c$$133;
    }
    var v5428;
    introspect(JAM.policy.p3) {
      var v17989 = Q.test(a$$271)
    }
    var v23328 = !v17989;
    if (v23328) {
      var v23327 = typeof a$$271;
      v17989 = v23327 != "string";
    }
    var v12419 = v17989;
    if (v12419) {
      var v17990 = b$$177;
      var v23329 = !v17990;
      if (v23329) {
        v17990 = this.context;
      }
      var v12418 = v17990;
      introspect(JAM.policy.p3) {
        v5428 = f$$4(a$$271, v12418);
      }
    } else {
      v5428 = 0;
    }
    var i$$131 = v5428;
    d$$114 = 0;
    e$$128 = this.length;
    var v5431 = d$$114 < e$$128;
    for (;v5431;) {
      g$$67 = this[d$$114];
      for (;g$$67;) {
        var v12420;
        if (i$$131) {
          introspect(JAM.policy.p3) {
            var v17991 = i$$131.index(g$$67)
          }
          v12420 = v17991 > -1;
        } else {
          var v17992 = f$$4.find;
          introspect(JAM.policy.p3) {
            v12420 = v17992.matchesSelector(g$$67, a$$271);
          }
        }
        var v5429 = v12420;
        if (v5429) {
          introspect(JAM.policy.p3) {
            c$$133.push(g$$67);
          }
          break;
        }
        g$$67 = g$$67.parentNode;
        var v23330 = !g$$67;
        var v25833 = !v23330;
        if (v25833) {
          var v25832 = g$$67.ownerDocument;
          v23330 = !v25832;
        }
        var v17993 = v23330;
        var v23331 = !v17993;
        if (v23331) {
          v17993 = g$$67 === b$$177;
        }
        var v12421 = v17993;
        var v17995 = !v12421;
        if (v17995) {
          var v17994 = g$$67.nodeType;
          v12421 = v17994 === 11;
        }
        var v5430 = v12421;
        if (v5430) {
          break;
        }
      }
      d$$114++;
      v5431 = d$$114 < e$$128;
    }
    var v5432;
    var v17996 = c$$133.length;
    var v12422 = v17996 > 1;
    if (v12422) {
      introspect(JAM.policy.p3) {
        v5432 = f$$4.unique(c$$133);
      }
    } else {
      v5432 = c$$133;
    }
    c$$133 = v5432;
    introspect(JAM.policy.p3) {
      return this.pushStack(c$$133, "closest", a$$271);
    }
  }
  function v912(a$$270) {
    var v12423 = !a$$270;
    var v5433 = !v12423;
    if (v5433) {
      var v12424;
      var v23332 = typeof a$$270;
      var v17999 = v23332 == "string";
      if (v17999) {
        var v17997;
        introspect(JAM.policy.p3) {
          var v23335 = Q.test(a$$270)
        }
        if (v23335) {
          var v27494 = this.context;
          introspect(JAM.policy.p3) {
            var v25834 = f$$4(a$$270, v27494)
          }
          var v25835 = this[0];
          introspect(JAM.policy.p3) {
            var v23333 = v25834.index(v25835)
          }
          v17997 = v23333 >= 0;
        } else {
          introspect(JAM.policy.p3) {
            var v25836 = f$$4.filter(a$$270, this)
          }
          var v23334 = v25836.length;
          v17997 = v23334 > 0;
        }
        v12424 = v17997;
      } else {
        introspect(JAM.policy.p3) {
          var v23336 = this.filter(a$$270)
        }
        var v17998 = v23336.length;
        v12424 = v17998 > 0;
      }
      v5433 = v12424;
    }
    return v5433;
  }
  function v911(a$$269) {
    var v12425 = !0;
    var v5434 = T$$2(this, a$$269, v12425);
    introspect(JAM.policy.p3) {
      return this.pushStack(v5434, "filter", a$$269);
    }
  }
  function v910(a$$268) {
    var v12426 = !1;
    var v5435 = T$$2(this, a$$268, v12426);
    introspect(JAM.policy.p3) {
      return this.pushStack(v5435, "not", a$$268);
    }
  }
  function v909(a$$266) {
    function v908() {
      var a$$267 = 0;
      var c$$132 = b$$176.length;
      var v5437 = a$$267 < c$$132;
      for (;v5437;) {
        var v12427 = b$$176[a$$267];
        introspect(JAM.policy.p3) {
          var v5436 = f$$4.contains(this, v12427)
        }
        if (v5436) {
          return !0;
        }
        a$$267++;
        v5437 = a$$267 < c$$132;
      }
      return;
    }
    introspect(JAM.policy.p3) {
      var b$$176 = f$$4(a$$266)
    }
    introspect(JAM.policy.p3) {
      return this.filter(v908);
    }
  }
  function v907(a$$265) {
    function v906() {
      c$$131 = 0;
      d$$113 = b$$175.length;
      var v5439 = c$$131 < d$$113;
      for (;v5439;) {
        var v12428 = b$$175[c$$131];
        introspect(JAM.policy.p3) {
          var v5438 = f$$4.contains(v12428, this)
        }
        if (v5438) {
          return !0;
        }
        c$$131++;
        v5439 = c$$131 < d$$113;
      }
      return;
    }
    var b$$175 = this;
    var c$$131;
    var d$$113;
    var v12429 = typeof a$$265;
    var v5441 = v12429 != "string";
    if (v5441) {
      introspect(JAM.policy.p3) {
        var v5440 = f$$4(a$$265)
      }
      introspect(JAM.policy.p3) {
        return v5440.filter(v906);
      }
    }
    introspect(JAM.policy.p3) {
      var e$$127 = this.pushStack("", "find", a$$265)
    }
    var g$$66;
    var h$$59;
    var i$$130;
    c$$131 = 0;
    d$$113 = this.length;
    var v5447 = c$$131 < d$$113;
    for (;v5447;) {
      g$$66 = e$$127.length;
      var v12430 = this[c$$131];
      introspect(JAM.policy.p3) {
        f$$4.find(a$$265, v12430, e$$127);
      }
      var v5446 = c$$131 > 0;
      if (v5446) {
        h$$59 = g$$66;
        var v12431 = e$$127.length;
        var v5445 = h$$59 < v12431;
        for (;v5445;) {
          i$$130 = 0;
          var v5444 = i$$130 < g$$66;
          for (;v5444;) {
            var v12432 = e$$127[i$$130];
            var v12433 = e$$127[h$$59];
            var v5443 = v12432 === v12433;
            if (v5443) {
              var v5442 = h$$59;
              h$$59 = h$$59 - 1;
              introspect(JAM.policy.p3) {
                e$$127.splice(v5442, 1);
              }
              break;
            }
            i$$130++;
            v5444 = i$$130 < g$$66;
          }
          h$$59++;
          var v12434 = e$$127.length;
          v5445 = h$$59 < v12434;
        }
      }
      c$$131++;
      v5447 = c$$131 < d$$113;
    }
    return e$$127;
  }
  function v905() {
    function v904(a$$263) {
      var v12435;
      if (a$$263) {
        var v18000 = a$$263.ownerDocument;
        var v23337 = !v18000;
        if (v23337) {
          v18000 = a$$263;
        }
        v12435 = v18000;
      } else {
        v12435 = 0;
      }
      var v5448 = v12435;
      var b$$173 = v5448.documentElement;
      var v5449;
      if (b$$173) {
        var v12436 = b$$173.nodeName;
        v5449 = v12436 !== "HTML";
      } else {
        v5449 = !1;
      }
      return v5449;
    }
    function v903() {
      return !1;
    }
    function v902(a$$262, b$$172) {
      introspect(JAM.policy.p3) {
        var v18001 = a$$262.compareDocumentPosition(b$$172)
      }
      var v12437 = v18001 & 16;
      var v5450 = !v12437;
      return !v5450;
    }
    function v901(a$$261, b$$171) {
      var v5451 = a$$261 !== b$$171;
      if (v5451) {
        var v12438;
        var v18002 = a$$261.contains;
        if (v18002) {
          introspect(JAM.policy.p3) {
            v12438 = a$$261.contains(b$$171);
          }
        } else {
          v12438 = !0;
        }
        v5451 = v12438;
      }
      return v5451;
    }
    function v900() {
      function v899(a$$260, b$$170, c$$129) {
        var v23338 = b$$170.getElementsByClassName;
        var v18003 = typeof v23338;
        var v12439 = v18003 != "undefined";
        if (v12439) {
          v12439 = !c$$129;
        }
        var v5453 = v12439;
        if (v5453) {
          var v5452 = a$$260[1];
          introspect(JAM.policy.p3) {
            return b$$170.getElementsByClassName(v5452);
          }
        }
        return;
      }
      introspect(JAM.policy.p3) {
        var a$$259 = c$$5.createElement("div")
      }
      a$$259.innerHTML = "<div class='test e'></div><div class='test'></div>";
      var v23339 = a$$259.getElementsByClassName;
      var v18004 = !v23339;
      var v12440 = !v18004;
      if (v12440) {
        introspect(JAM.policy.p3) {
          var v23340 = a$$259.getElementsByClassName("e")
        }
        var v18005 = v23340.length;
        v12440 = v18005 !== 0;
      }
      var v5456 = v12440;
      if (v5456) {
        var v5454 = a$$259.lastChild;
        v5454.className = "e";
        introspect(JAM.policy.p3) {
          var v18006 = a$$259.getElementsByClassName("e")
        }
        var v12441 = v18006.length;
        var v5455 = v12441 === 1;
        if (v5455) {
          return;
        }
        var v18007 = o$$10.order;
        introspect(JAM.policy.p3) {
          v18007.splice(1, 0, "CLASS");
        }
        var v18008 = o$$10.find;
        v18008.CLASS = v899;
        a$$259 = null;
      }
      return;
    }
    function v898() {
      function v897(a$$258, c$$128) {
        introspect(JAM.policy.p3) {
          c$$128 = c$$128.replace(/\=\s*([^'"\]]*)\s*\]/g, "='$1']");
        }
        introspect(JAM.policy.p3) {
          var v12442 = m$$19.isXML(a$$258)
        }
        var v5459 = !v12442;
        if (v5459) {
          try {
            var v12443 = e$$125;
            var v18010 = !v12443;
            if (v18010) {
              var v27495 = o$$10.match;
              var v25837 = v27495.PSEUDO;
              introspect(JAM.policy.p3) {
                var v23341 = v25837.test(c$$128)
              }
              var v18009 = !v23341;
              if (v18009) {
                introspect(JAM.policy.p3) {
                  var v23342 = /!=/.test(c$$128)
                }
                v18009 = !v23342;
              }
              v12443 = v18009;
            }
            var v5458 = v12443;
            if (v5458) {
              introspect(JAM.policy.p3) {
                var f$$41 = b$$169.call(a$$258, c$$128)
              }
              var v18011 = f$$41;
              var v23343 = !v18011;
              if (v23343) {
                v18011 = !d$$111;
              }
              var v12444 = v18011;
              var v18013 = !v12444;
              if (v18013) {
                var v18012 = a$$258.document;
                if (v18012) {
                  var v25838 = a$$258.document;
                  var v23344 = v25838.nodeType;
                  v18012 = v23344 !== 11;
                }
                v12444 = v18012;
              }
              var v5457 = v12444;
              if (v5457) {
                return f$$41;
              }
            }
          } catch (g$$64) {
          }
        }
        var v18014 = [a$$258];
        introspect(JAM.policy.p3) {
          var v12445 = m$$19(c$$128, null, null, v18014)
        }
        var v5460 = v12445.length;
        return v5460 > 0;
      }
      var a$$257 = c$$5.documentElement;
      var v18015 = a$$257.matchesSelector;
      var v23345 = !v18015;
      if (v23345) {
        v18015 = a$$257.mozMatchesSelector;
      }
      var v12446 = v18015;
      var v18016 = !v12446;
      if (v18016) {
        v12446 = a$$257.webkitMatchesSelector;
      }
      var v5461 = v12446;
      var v12447 = !v5461;
      if (v12447) {
        v5461 = a$$257.msMatchesSelector;
      }
      var b$$169 = v5461;
      if (b$$169) {
        introspect(JAM.policy.p3) {
          var v12448 = c$$5.createElement("div")
        }
        introspect(JAM.policy.p3) {
          var v5462 = b$$169.call(v12448, "div")
        }
        var d$$111 = !v5462;
        var e$$125 = !1;
        try {
          var v5463 = c$$5.documentElement;
          introspect(JAM.policy.p3) {
            b$$169.call(v5463, "[test!='']:sizzle");
          }
        } catch (f$$40) {
          e$$125 = !0;
        }
        m$$19.matchesSelector = v897;
      }
      return;
    }
    function v896() {
      function v895(b$$168, e$$124, f$$39, g$$63) {
        e$$124 = e$$124 || c$$5;
        var v12449 = !g$$63;
        if (v12449) {
          introspect(JAM.policy.p3) {
            var v18017 = m$$19.isXML(e$$124)
          }
          v12449 = !v18017;
        }
        var v5481 = v12449;
        if (v5481) {
          introspect(JAM.policy.p3) {
            var h$$57 = /^(\w+$)|^\.([\w\-]+$)|^#([\w\-]+$)/.exec(b$$168)
          }
          var v12450 = h$$57;
          if (v12450) {
            var v23346 = e$$124.nodeType;
            var v18018 = v23346 === 1;
            var v23348 = !v18018;
            if (v23348) {
              var v23347 = e$$124.nodeType;
              v18018 = v23347 === 9;
            }
            v12450 = v18018;
          }
          var v5468 = v12450;
          if (v5468) {
            var v5465 = h$$57[1];
            if (v5465) {
              introspect(JAM.policy.p3) {
                var v5464 = e$$124.getElementsByTagName(b$$168)
              }
              introspect(JAM.policy.p3) {
                return s$$22(v5464, f$$39);
              }
            }
            var v18019 = h$$57[2];
            if (v18019) {
              var v23349 = o$$10.find;
              v18019 = v23349.CLASS;
            }
            var v12451 = v18019;
            if (v12451) {
              v12451 = e$$124.getElementsByClassName;
            }
            var v5467 = v12451;
            if (v5467) {
              var v12452 = h$$57[2];
              introspect(JAM.policy.p3) {
                var v5466 = e$$124.getElementsByClassName(v12452)
              }
              introspect(JAM.policy.p3) {
                return s$$22(v5466, f$$39);
              }
            }
          }
          var v12453 = e$$124.nodeType;
          var v5480 = v12453 === 9;
          if (v5480) {
            var v12454 = b$$168 === "body";
            if (v12454) {
              v12454 = e$$124.body;
            }
            var v5470 = v12454;
            if (v5470) {
              var v12455 = e$$124.body;
              var v5469 = [v12455];
              introspect(JAM.policy.p3) {
                return s$$22(v5469, f$$39);
              }
            }
            var v12456 = h$$57;
            if (v12456) {
              v12456 = h$$57[3];
            }
            var v5475 = v12456;
            if (v5475) {
              var v5471 = h$$57[3];
              introspect(JAM.policy.p3) {
                var i$$128 = e$$124.getElementById(v5471)
              }
              var v12457 = !i$$128;
              var v18021 = !v12457;
              if (v18021) {
                var v18020 = i$$128.parentNode;
                v12457 = !v18020;
              }
              var v5472 = v12457;
              if (v5472) {
                introspect(JAM.policy.p3) {
                  return s$$22([], f$$39);
                }
              }
              var v12458 = i$$128.id;
              var v12459 = h$$57[3];
              var v5474 = v12458 === v12459;
              if (v5474) {
                var v5473 = [i$$128];
                introspect(JAM.policy.p3) {
                  return s$$22(v5473, f$$39);
                }
              }
            }
            try {
              introspect(JAM.policy.p3) {
                var v5476 = e$$124.querySelectorAll(b$$168)
              }
              introspect(JAM.policy.p3) {
                return s$$22(v5476, f$$39);
              }
            } catch (j$$48) {
            }
          } else {
            var v18022 = e$$124.nodeType;
            var v12460 = v18022 === 1;
            if (v12460) {
              var v23350 = e$$124.nodeName;
              introspect(JAM.policy.p3) {
                var v18023 = v23350.toLowerCase()
              }
              v12460 = v18023 !== "object";
            }
            var v5479 = v12460;
            if (v5479) {
              var k$$29 = e$$124;
              introspect(JAM.policy.p3) {
                var l$$41 = e$$124.getAttribute("id")
              }
              var n$$71 = l$$41 || d$$110;
              var p$$33 = e$$124.parentNode;
              introspect(JAM.policy.p3) {
                var q$$11 = /^\s*[+~]/.test(b$$168)
              }
              var v12461;
              if (l$$41) {
                introspect(JAM.policy.p3) {
                  v12461 = n$$71 = n$$71.replace(/'/g, "\\$&");
                }
              } else {
                introspect(JAM.policy.p3) {
                  v12461 = e$$124.setAttribute("id", n$$71);
                }
              }
              v12461;
              var v12462 = q$$11 && p$$33;
              if (v12462) {
                e$$124 = e$$124.parentNode;
              }
              try {
                var v12463 = !q$$11;
                var v18024 = !v12463;
                if (v18024) {
                  v12463 = p$$33;
                }
                var v5478 = v12463;
                if (v5478) {
                  var v23351 = "[id='" + n$$71;
                  var v18025 = v23351 + "'] ";
                  var v12464 = v18025 + b$$168;
                  introspect(JAM.policy.p3) {
                    var v5477 = e$$124.querySelectorAll(v12464)
                  }
                  introspect(JAM.policy.p3) {
                    return s$$22(v5477, f$$39);
                  }
                }
              } catch (r$$13) {
              } finally {
                var v12465 = !l$$41;
                if (v12465) {
                  introspect(JAM.policy.p3) {
                    k$$29.removeAttribute("id");
                  }
                }
              }
            }
          }
        }
        introspect(JAM.policy.p3) {
          return a$$256(b$$168, e$$124, f$$39, g$$63);
        }
      }
      var a$$256 = m$$19;
      introspect(JAM.policy.p3) {
        var b$$167 = c$$5.createElement("div")
      }
      var d$$110 = "__sizzle__";
      b$$167.innerHTML = "<p class='TEST'></p>";
      var v18026 = b$$167.querySelectorAll;
      var v12466 = !v18026;
      var v18028 = !v12466;
      if (v18028) {
        introspect(JAM.policy.p3) {
          var v23352 = b$$167.querySelectorAll(".TEST")
        }
        var v18027 = v23352.length;
        v12466 = v18027 !== 0;
      }
      var v5482 = v12466;
      if (v5482) {
        m$$19 = v895;
        var e$$123;
        for (e$$123 in a$$256) {
          introspect(JAM.policy.p2) {
            m$$19[e$$123] = a$$256[e$$123];
          }
        }
        b$$167 = null;
      }
      return;
    }
    function v894() {
      function v893(a$$255) {
        introspect(JAM.policy.p3) {
          return a$$255.getAttribute("href", 2);
        }
      }
      function v892(a$$254, b$$166) {
        var v5483 = a$$254[1];
        introspect(JAM.policy.p3) {
          var c$$127 = b$$166.getElementsByTagName(v5483)
        }
        var v12467 = a$$254[1];
        var v5486 = v12467 === "*";
        if (v5486) {
          var d$$109 = [];
          var e$$122 = 0;
          var v5485 = c$$127[e$$122];
          for (;v5485;) {
            var v18029 = c$$127[e$$122];
            var v12468 = v18029.nodeType;
            var v5484 = v12468 === 1;
            if (v5484) {
              var v12469 = c$$127[e$$122];
              introspect(JAM.policy.p3) {
                d$$109.push(v12469);
              }
            }
            e$$122++;
            v5485 = c$$127[e$$122];
          }
          c$$127 = d$$109;
        }
        return c$$127;
      }
      introspect(JAM.policy.p3) {
        var a$$253 = c$$5.createElement("div")
      }
      introspect(JAM.policy.p3) {
        var v25839 = c$$5.createComment("")
      }
      introspect(JAM.policy.p3) {
        a$$253.appendChild(v25839);
      }
      introspect(JAM.policy.p3) {
        var v28554 = a$$253.getElementsByTagName("*")
      }
      var v27496 = v28554.length;
      var v25840 = v27496 > 0;
      if (v25840) {
        var v27497 = o$$10.find;
        v27497.TAG = v892;
      }
      a$$253.innerHTML = "<a href='#'></a>";
      var v25841 = a$$253.firstChild;
      if (v25841) {
        var v29227 = a$$253.firstChild;
        var v28555 = v29227.getAttribute;
        var v27498 = typeof v28555;
        v25841 = v27498 != "undefined";
      }
      var v23353 = v25841;
      if (v23353) {
        var v27499 = a$$253.firstChild;
        introspect(JAM.policy.p3) {
          var v25842 = v27499.getAttribute("href")
        }
        v23353 = v25842 !== "#";
      }
      var v18030 = v23353;
      if (v18030) {
        var v23354 = o$$10.attrHandle;
        v23354.href = v893;
      }
      a$$253 = null;
      return;
    }
    function v891() {
      function v890(a$$252, b$$165) {
        var v18031 = a$$252.getAttributeNode;
        var v12470 = typeof v18031;
        var v5487 = v12470 != "undefined";
        if (v5487) {
          introspect(JAM.policy.p3) {
            v5487 = a$$252.getAttributeNode("id");
          }
        }
        var c$$126 = v5487;
        var v18032 = a$$252.nodeType;
        var v12471 = v18032 === 1;
        if (v12471) {
          v12471 = c$$126;
        }
        var v5488 = v12471;
        if (v5488) {
          var v12472 = c$$126.nodeValue;
          v5488 = v12472 === b$$165;
        }
        return v5488;
      }
      function v889(a$$251, c$$125, d$$108) {
        var v23355 = c$$125.getElementById;
        var v18033 = typeof v23355;
        var v12473 = v18033 != "undefined";
        if (v12473) {
          v12473 = !d$$108;
        }
        var v5491 = v12473;
        if (v5491) {
          var v5489 = a$$251[1];
          introspect(JAM.policy.p3) {
            var e$$121 = c$$125.getElementById(v5489)
          }
          var v5490;
          if (e$$121) {
            var v12474;
            var v25843 = e$$121.id;
            var v25844 = a$$251[1];
            var v23356 = v25843 === v25844;
            var v25846 = !v23356;
            if (v25846) {
              var v28556 = e$$121.getAttributeNode;
              var v27500 = typeof v28556;
              var v25845 = v27500 != "undefined";
              if (v25845) {
                introspect(JAM.policy.p3) {
                  var v28557 = e$$121.getAttributeNode("id")
                }
                var v27501 = v28557.nodeValue;
                var v27502 = a$$251[1];
                v25845 = v27501 === v27502;
              }
              v23356 = v25845;
            }
            var v18034 = v23356;
            if (v18034) {
              v12474 = [e$$121];
            } else {
              v12474 = b$$9;
            }
            v5490 = v12474;
          } else {
            v5490 = [];
          }
          return v5490;
        }
        return;
      }
      introspect(JAM.policy.p3) {
        var a$$250 = c$$5.createElement("div")
      }
      var v12475 = new Date;
      introspect(JAM.policy.p3) {
        var v5492 = v12475.getTime()
      }
      var d$$107 = "script" + v5492;
      var e$$120 = c$$5.documentElement;
      var v25847 = "<a name='" + d$$107;
      a$$250.innerHTML = v25847 + "'/>";
      var v25848 = e$$120.firstChild;
      introspect(JAM.policy.p3) {
        e$$120.insertBefore(a$$250, v25848);
      }
      introspect(JAM.policy.p3) {
        var v23357 = c$$5.getElementById(d$$107)
      }
      if (v23357) {
        var v27503 = o$$10.find;
        v27503.ID = v889;
        var v27504 = o$$10.filter;
        v27504.ID = v890;
      }
      introspect(JAM.policy.p3) {
        e$$120.removeChild(a$$250);
      }
      e$$120 = a$$250 = null;
      return;
    }
    function v888(a$$249, b$$164, c$$124) {
      var v5493 = a$$249 === b$$164;
      if (v5493) {
        return c$$124;
      }
      var d$$106 = a$$249.nextSibling;
      for (;d$$106;) {
        var v5494 = d$$106 === b$$164;
        if (v5494) {
          return -1;
        }
        d$$106 = d$$106.nextSibling;
      }
      return 1;
    }
    function v887(a$$248, b$$163) {
      var v5495 = a$$248 === b$$163;
      if (v5495) {
        h$$47 = !0;
        return 0;
      }
      var v12476 = a$$248.sourceIndex;
      if (v12476) {
        v12476 = b$$163.sourceIndex;
      }
      var v5498 = v12476;
      if (v5498) {
        var v5496 = a$$248.sourceIndex;
        var v5497 = b$$163.sourceIndex;
        return v5496 - v5497;
      }
      var c$$123;
      var d$$105;
      var e$$119 = [];
      var f$$38 = [];
      var g$$62 = a$$248.parentNode;
      var i$$127 = b$$163.parentNode;
      var j$$47 = g$$62;
      var v5499 = g$$62 === i$$127;
      if (v5499) {
        introspect(JAM.policy.p3) {
          return v$$6(a$$248, b$$163);
        }
      }
      var v5500 = !g$$62;
      if (v5500) {
        return -1;
      }
      var v5501 = !i$$127;
      if (v5501) {
        return 1;
      }
      for (;j$$47;) {
        introspect(JAM.policy.p3) {
          e$$119.unshift(j$$47);
        }
        j$$47 = j$$47.parentNode;
      }
      j$$47 = i$$127;
      for (;j$$47;) {
        introspect(JAM.policy.p3) {
          f$$38.unshift(j$$47);
        }
        j$$47 = j$$47.parentNode;
      }
      c$$123 = e$$119.length;
      d$$105 = f$$38.length;
      var k$$28 = 0;
      var v12477 = k$$28 < c$$123;
      if (v12477) {
        v12477 = k$$28 < d$$105;
      }
      var v5505 = v12477;
      for (;v5505;) {
        var v12478 = e$$119[k$$28];
        var v12479 = f$$38[k$$28];
        var v5504 = v12478 !== v12479;
        if (v5504) {
          var v5502 = e$$119[k$$28];
          var v5503 = f$$38[k$$28];
          introspect(JAM.policy.p3) {
            return v$$6(v5502, v5503);
          }
        }
        k$$28++;
        var v12480 = k$$28 < c$$123;
        if (v12480) {
          v12480 = k$$28 < d$$105;
        }
        v5505 = v12480;
      }
      var v5506;
      var v12483 = k$$28 === c$$123;
      if (v12483) {
        var v12481 = f$$38[k$$28];
        introspect(JAM.policy.p3) {
          v5506 = v$$6(a$$248, v12481, -1);
        }
      } else {
        var v12482 = e$$119[k$$28];
        introspect(JAM.policy.p3) {
          v5506 = v$$6(v12482, b$$163, 1);
        }
      }
      return v5506;
    }
    function v886(a$$247, b$$162) {
      var v5507 = a$$247 === b$$162;
      if (v5507) {
        h$$47 = !0;
        return 0;
      }
      var v18035 = a$$247.compareDocumentPosition;
      var v12484 = !v18035;
      var v18037 = !v12484;
      if (v18037) {
        var v18036 = b$$162.compareDocumentPosition;
        v12484 = !v18036;
      }
      var v5509 = v12484;
      if (v5509) {
        var v5508;
        var v12485 = a$$247.compareDocumentPosition;
        if (v12485) {
          v5508 = -1;
        } else {
          v5508 = 1;
        }
        return v5508;
      }
      var v5510;
      introspect(JAM.policy.p3) {
        var v18038 = a$$247.compareDocumentPosition(b$$162)
      }
      var v12486 = v18038 & 4;
      if (v12486) {
        v5510 = -1;
      } else {
        v5510 = 1;
      }
      return v5510;
    }
    function v885(a$$246, b$$161) {
      var c$$122 = 0;
      var d$$104 = b$$161 || [];
      introspect(JAM.policy.p3) {
        var v12487 = g$$47.call(a$$246)
      }
      var v5517 = v12487 === "[object Array]";
      if (v5517) {
        var v12488 = Array.prototype;
        var v5511 = v12488.push;
        introspect(JAM.policy.p3) {
          v5511.apply(d$$104, a$$246);
        }
      } else {
        var v18039 = a$$246.length;
        var v12489 = typeof v18039;
        var v5516 = v12489 == "number";
        if (v5516) {
          var e$$118 = a$$246.length;
          var v5513 = c$$122 < e$$118;
          for (;v5513;) {
            var v5512 = a$$246[c$$122];
            introspect(JAM.policy.p3) {
              d$$104.push(v5512);
            }
            c$$122++;
            v5513 = c$$122 < e$$118;
          }
        } else {
          var v5515 = a$$246[c$$122];
          for (;v5515;) {
            var v5514 = a$$246[c$$122];
            introspect(JAM.policy.p3) {
              d$$104.push(v5514);
            }
            c$$122++;
            v5515 = a$$246[c$$122];
          }
        }
      }
      return d$$104;
    }
    function v884(a$$243, b$$158, c$$121, d$$103) {
      var e$$117 = b$$158[2];
      var v5518 = o$$10.setFilters;
      var f$$37 = v5518[e$$117];
      if (f$$37) {
        introspect(JAM.policy.p3) {
          return f$$37(a$$243, c$$121, b$$158, d$$103);
        }
      }
      return;
    }
    function v883(a$$242, b$$157) {
      var c$$120 = b$$157[1];
      var v5519;
      var v12491 = m$$19.attr;
      if (v12491) {
        introspect(JAM.policy.p3) {
          v5519 = m$$19.attr(a$$242, c$$120);
        }
      } else {
        var v12490;
        var v23358 = o$$10.attrHandle;
        var v18042 = v23358[c$$120];
        if (v18042) {
          var v18040 = o$$10.attrHandle;
          introspect(JAM.policy.p3) {
            v12490 = v18040[c$$120](a$$242);
          }
        } else {
          var v18041;
          var v25849 = a$$242[c$$120];
          var v23359 = v25849 != null;
          if (v23359) {
            v18041 = a$$242[c$$120];
          } else {
            introspect(JAM.policy.p3) {
              v18041 = a$$242.getAttribute(c$$120);
            }
          }
          v12490 = v18041;
        }
        v5519 = v12490;
      }
      var d$$102 = v5519;
      var e$$116 = d$$102 + "";
      var f$$36 = b$$157[2];
      var g$$61 = b$$157[4];
      var v5520;
      var v12493 = d$$102 == null;
      if (v12493) {
        v5520 = f$$36 === "!=";
      } else {
        var v12492;
        var v23360 = !f$$36;
        if (v23360) {
          v23360 = m$$19.attr;
        }
        var v18044 = v23360;
        if (v18044) {
          v12492 = d$$102 != null;
        } else {
          var v18043;
          var v23362 = f$$36 === "=";
          if (v23362) {
            v18043 = e$$116 === g$$61;
          } else {
            var v23361;
            var v25852 = f$$36 === "*=";
            if (v25852) {
              introspect(JAM.policy.p3) {
                var v25850 = e$$116.indexOf(g$$61)
              }
              v23361 = v25850 >= 0;
            } else {
              var v25851;
              var v27507 = f$$36 === "~=";
              if (v27507) {
                var v29228 = " " + e$$116;
                var v28558 = v29228 + " ";
                introspect(JAM.policy.p3) {
                  var v27505 = v28558.indexOf(g$$61)
                }
                v25851 = v27505 >= 0;
              } else {
                var v27506;
                if (g$$61) {
                  var v28559;
                  var v29230 = f$$36 === "!=";
                  if (v29230) {
                    v28559 = e$$116 !== g$$61;
                  } else {
                    var v29229;
                    var v29663 = f$$36 === "^=";
                    if (v29663) {
                      introspect(JAM.policy.p3) {
                        var v29661 = e$$116.indexOf(g$$61)
                      }
                      v29229 = v29661 === 0;
                    } else {
                      var v29662;
                      var v29946 = f$$36 === "$=";
                      if (v29946) {
                        var v30365 = e$$116.length;
                        var v30366 = g$$61.length;
                        var v30191 = v30365 - v30366;
                        introspect(JAM.policy.p3) {
                          var v29944 = e$$116.substr(v30191)
                        }
                        v29662 = v29944 === g$$61;
                      } else {
                        var v29945;
                        var v30193 = f$$36 === "|=";
                        if (v30193) {
                          var v30192 = e$$116 === g$$61;
                          var v30369 = !v30192;
                          if (v30369) {
                            var v30618 = g$$61.length;
                            var v30499 = v30618 + 1;
                            introspect(JAM.policy.p3) {
                              var v30367 = e$$116.substr(0, v30499)
                            }
                            var v30368 = g$$61 + "-";
                            v30192 = v30367 === v30368;
                          }
                          v29945 = v30192;
                        } else {
                          v29945 = !1;
                        }
                        v29662 = v29945;
                      }
                      v29229 = v29662;
                    }
                    v28559 = v29229;
                  }
                  v27506 = v28559;
                } else {
                  var v28560 = e$$116;
                  if (v28560) {
                    var v29231 = !1;
                    v28560 = d$$102 !== v29231;
                  }
                  v27506 = v28560;
                }
                v25851 = v27506;
              }
              v23361 = v25851;
            }
            v18043 = v23361;
          }
          v12492 = v18043;
        }
        v5520 = v12492;
      }
      return v5520;
    }
    function v882(a$$241, b$$156) {
      var v25853 = a$$241.className;
      var v27508 = !v25853;
      if (v27508) {
        introspect(JAM.policy.p3) {
          v25853 = a$$241.getAttribute("class");
        }
      }
      var v23363 = v25853;
      var v18045 = " " + v23363;
      var v12494 = v18045 + " ";
      introspect(JAM.policy.p3) {
        var v5521 = v12494.indexOf(b$$156)
      }
      return v5521 > -1;
    }
    function v881(a$$240, b$$155) {
      var v12495 = b$$155 === "*";
      if (v12495) {
        var v18046 = a$$240.nodeType;
        v12495 = v18046 === 1;
      }
      var v5522 = v12495;
      var v12497 = !v5522;
      if (v12497) {
        var v23364 = a$$240.nodeName;
        var v18047 = !v23364;
        var v12496 = !v18047;
        if (v12496) {
          var v23365 = a$$240.nodeName;
          introspect(JAM.policy.p3) {
            var v18048 = v23365.toLowerCase()
          }
          v12496 = v18048 === b$$155;
        }
        v5522 = v12496;
      }
      return v5522;
    }
    function v880(a$$239, b$$154) {
      var v12498 = a$$239.nodeType;
      var v5523 = v12498 === 1;
      if (v5523) {
        introspect(JAM.policy.p3) {
          var v12499 = a$$239.getAttribute("id")
        }
        v5523 = v12499 === b$$154;
      }
      return v5523;
    }
    function v879(a$$238, b$$153) {
      var c$$119;
      var e$$115;
      var f$$35;
      var g$$60;
      var h$$56;
      var i$$126;
      var j$$46;
      var k$$27 = b$$153[1];
      var l$$40 = a$$238;
      switch(k$$27) {
        case "only":
        ;
        case "first":
          var v5525 = l$$40 = l$$40.previousSibling;
          for (;v5525;) {
            var v12500 = l$$40.nodeType;
            var v5524 = v12500 === 1;
            if (v5524) {
              return !1;
            }
            v5525 = l$$40 = l$$40.previousSibling;
          }
          var v5526 = k$$27 === "first";
          if (v5526) {
            return !0;
          }
          l$$40 = a$$238;
        case "last":
          var v5528 = l$$40 = l$$40.nextSibling;
          for (;v5528;) {
            var v12501 = l$$40.nodeType;
            var v5527 = v12501 === 1;
            if (v5527) {
              return !1;
            }
            v5528 = l$$40 = l$$40.nextSibling;
          }
          return !0;
        case "nth":
          c$$119 = b$$153[2];
          e$$115 = b$$153[3];
          var v12502 = c$$119 === 1;
          if (v12502) {
            v12502 = e$$115 === 0;
          }
          var v5529 = v12502;
          if (v5529) {
            return !0;
          }
          f$$35 = b$$153[0];
          g$$60 = a$$238.parentNode;
          var v12503 = g$$60;
          if (v12503) {
            var v23366 = g$$60[d$$86];
            var v18049 = v23366 !== f$$35;
            var v23368 = !v18049;
            if (v23368) {
              var v23367 = a$$238.nodeIndex;
              v18049 = !v23367;
            }
            v12503 = v18049;
          }
          var v5531 = v12503;
          if (v5531) {
            i$$126 = 0;
            l$$40 = g$$60.firstChild;
            for (;l$$40;) {
              var v12504 = l$$40.nodeType;
              var v5530 = v12504 === 1;
              if (v5530) {
                l$$40.nodeIndex = i$$126 = i$$126 + 1;
              }
              l$$40 = l$$40.nextSibling;
            }
            introspect(JAM.policy.p2) {
              g$$60[d$$86] = f$$35;
            }
          }
          var v5532 = a$$238.nodeIndex;
          j$$46 = v5532 - e$$115;
          var v5533;
          var v12506 = c$$119 === 0;
          if (v12506) {
            v5533 = j$$46 === 0;
          } else {
            var v18050 = j$$46 % c$$119;
            var v12505 = v18050 === 0;
            if (v12505) {
              var v18051 = j$$46 / c$$119;
              v12505 = v18051 >= 0;
            }
            v5533 = v12505;
          }
          return v5533;
      }
      return;
    }
    function v878(a$$237, b$$152, c$$118, d$$101) {
      var e$$114 = b$$152[1];
      var v5534 = o$$10.filters;
      var f$$34 = v5534[e$$114];
      if (f$$34) {
        introspect(JAM.policy.p3) {
          return f$$34(a$$237, c$$118, b$$152, d$$101);
        }
      }
      var v5536 = e$$114 === "contains";
      if (v5536) {
        var v25854 = a$$237.textContent;
        var v27509 = !v25854;
        if (v27509) {
          v25854 = a$$237.innerText;
        }
        var v23369 = v25854;
        var v25856 = !v23369;
        if (v25856) {
          var v25855 = [a$$237];
          introspect(JAM.policy.p3) {
            v23369 = n$$68(v25855);
          }
        }
        var v18052 = v23369;
        var v23370 = !v18052;
        if (v23370) {
          v18052 = "";
        }
        var v12507 = v18052;
        var v12508 = b$$152[3];
        introspect(JAM.policy.p3) {
          var v5535 = v12507.indexOf(v12508)
        }
        return v5535 >= 0;
      }
      var v5539 = e$$114 === "not";
      if (v5539) {
        var g$$59 = b$$152[3];
        var h$$55 = 0;
        var i$$125 = g$$59.length;
        var v5538 = h$$55 < i$$125;
        for (;v5538;) {
          var v12509 = g$$59[h$$55];
          var v5537 = v12509 === a$$237;
          if (v5537) {
            return !1;
          }
          h$$55++;
          v5538 = h$$55 < i$$125;
        }
        return !0;
      }
      introspect(JAM.policy.p3) {
        m$$19.error(e$$114);
      }
      return;
    }
    function v877(a$$236, b$$151, c$$117) {
      var v12510 = c$$117[3];
      var v5540 = v12510 - 0;
      return v5540 === b$$151;
    }
    function v876(a$$235, b$$150, c$$116) {
      var v12511 = c$$116[3];
      var v5541 = v12511 - 0;
      return v5541 === b$$150;
    }
    function v875(a$$234, b$$149, c$$115) {
      var v12512 = c$$115[3];
      var v5542 = v12512 - 0;
      return b$$149 > v5542;
    }
    function v874(a$$233, b$$148, c$$114) {
      var v12513 = c$$114[3];
      var v5543 = v12513 - 0;
      return b$$148 < v5543;
    }
    function v873(a$$232, b$$147) {
      var v5544 = b$$147 % 2;
      return v5544 === 1;
    }
    function v872(a$$231, b$$146) {
      var v5545 = b$$146 % 2;
      return v5545 === 0;
    }
    function v871(a$$230, b$$145, c$$113, d$$100) {
      var v12514 = d$$100.length;
      var v5546 = v12514 - 1;
      return b$$145 === v5546;
    }
    function v870(a$$229, b$$144) {
      return b$$144 === 0;
    }
    function v869(a$$228) {
      var v12515 = a$$228.ownerDocument;
      var v5547 = v12515.activeElement;
      return a$$228 === v5547;
    }
    function v868(a$$227) {
      var v5548 = a$$227.nodeName;
      introspect(JAM.policy.p3) {
        return /input|select|textarea|button/i.test(v5548);
      }
    }
    function v867(a$$226) {
      var v5549 = a$$226.nodeName;
      introspect(JAM.policy.p3) {
        var b$$143 = v5549.toLowerCase()
      }
      var v12516 = b$$143 === "input";
      if (v12516) {
        var v18053 = a$$226.type;
        v12516 = "button" === v18053;
      }
      var v5550 = v12516;
      var v12517 = !v5550;
      if (v12517) {
        v5550 = b$$143 === "button";
      }
      return v5550;
    }
    function v866(a$$225) {
      var v5551 = a$$225.nodeName;
      introspect(JAM.policy.p3) {
        var b$$142 = v5551.toLowerCase()
      }
      var v12518 = b$$142 === "input";
      var v18054 = !v12518;
      if (v18054) {
        v12518 = b$$142 === "button";
      }
      var v5552 = v12518;
      if (v5552) {
        var v12519 = a$$225.type;
        v5552 = "reset" === v12519;
      }
      return v5552;
    }
    function v865(a$$224) {
      var v18055 = a$$224.nodeName;
      introspect(JAM.policy.p3) {
        var v12520 = v18055.toLowerCase()
      }
      var v5553 = v12520 === "input";
      if (v5553) {
        var v12521 = a$$224.type;
        v5553 = "image" === v12521;
      }
      return v5553;
    }
    function v864(a$$223) {
      var v5554 = a$$223.nodeName;
      introspect(JAM.policy.p3) {
        var b$$141 = v5554.toLowerCase()
      }
      var v12522 = b$$141 === "input";
      var v18056 = !v12522;
      if (v18056) {
        v12522 = b$$141 === "button";
      }
      var v5555 = v12522;
      if (v5555) {
        var v12523 = a$$223.type;
        v5555 = "submit" === v12523;
      }
      return v5555;
    }
    function v863(a$$222) {
      var v18057 = a$$222.nodeName;
      introspect(JAM.policy.p3) {
        var v12524 = v18057.toLowerCase()
      }
      var v5556 = v12524 === "input";
      if (v5556) {
        var v12525 = a$$222.type;
        v5556 = "password" === v12525;
      }
      return v5556;
    }
    function v862(a$$221) {
      var v18058 = a$$221.nodeName;
      introspect(JAM.policy.p3) {
        var v12526 = v18058.toLowerCase()
      }
      var v5557 = v12526 === "input";
      if (v5557) {
        var v12527 = a$$221.type;
        v5557 = "file" === v12527;
      }
      return v5557;
    }
    function v861(a$$220) {
      var v18059 = a$$220.nodeName;
      introspect(JAM.policy.p3) {
        var v12528 = v18059.toLowerCase()
      }
      var v5558 = v12528 === "input";
      if (v5558) {
        var v12529 = a$$220.type;
        v5558 = "checkbox" === v12529;
      }
      return v5558;
    }
    function v860(a$$219) {
      var v18060 = a$$219.nodeName;
      introspect(JAM.policy.p3) {
        var v12530 = v18060.toLowerCase()
      }
      var v5559 = v12530 === "input";
      if (v5559) {
        var v12531 = a$$219.type;
        v5559 = "radio" === v12531;
      }
      return v5559;
    }
    function v859(a$$218) {
      introspect(JAM.policy.p3) {
        var b$$140 = a$$218.getAttribute("type")
      }
      var c$$112 = a$$218.type;
      var v23371 = a$$218.nodeName;
      introspect(JAM.policy.p3) {
        var v18061 = v23371.toLowerCase()
      }
      var v12532 = v18061 === "input";
      if (v12532) {
        v12532 = "text" === c$$112;
      }
      var v5560 = v12532;
      if (v5560) {
        var v12533 = b$$140 === c$$112;
        var v18062 = !v12533;
        if (v18062) {
          v12533 = b$$140 === null;
        }
        v5560 = v12533;
      }
      return v5560;
    }
    function v858(a$$217) {
      var v5561 = a$$217.nodeName;
      introspect(JAM.policy.p3) {
        return /h\d/i.test(v5561);
      }
    }
    function v857(a$$216, b$$139, c$$111) {
      var v23372 = c$$111[3];
      introspect(JAM.policy.p3) {
        var v18063 = m$$19(v23372, a$$216)
      }
      var v12534 = v18063.length;
      var v5562 = !v12534;
      return !v5562;
    }
    function v856(a$$215) {
      var v5563 = a$$215.firstChild;
      return !v5563;
    }
    function v855(a$$214) {
      var v12535 = a$$214.firstChild;
      var v5564 = !v12535;
      return !v5564;
    }
    function v854(a$$213) {
      var v5565 = a$$213.selected;
      var v5566 = !0;
      return v5565 === v5566;
    }
    function v853(a$$212) {
      var v5567 = a$$212.checked;
      var v5568 = !0;
      return v5567 === v5568;
    }
    function v852(a$$211) {
      var v5569 = a$$211.disabled;
      var v5570 = !0;
      return v5569 === v5570;
    }
    function v851(a$$210) {
      var v12536 = a$$210.disabled;
      var v12537 = !1;
      var v5571 = v12536 === v12537;
      if (v5571) {
        var v12538 = a$$210.type;
        v5571 = v12538 !== "hidden";
      }
      return v5571;
    }
    function v850(a$$209) {
      var v5572 = !0;
      introspect(JAM.policy.p3) {
        a$$209.unshift(v5572);
      }
      return a$$209;
    }
    function v849(b$$138, c$$110, d$$99, e$$113, f$$33) {
      var v12539 = b$$138[1];
      var v5578 = v12539 === "not";
      if (v5578) {
        var v27510 = b$$138[3];
        introspect(JAM.policy.p3) {
          var v25857 = a$$185.exec(v27510)
        }
        var v27511 = !v25857;
        if (v27511) {
          v25857 = "";
        }
        var v23373 = v25857;
        var v18064 = v23373.length;
        var v12540 = v18064 > 1;
        var v18066 = !v12540;
        if (v18066) {
          var v18065 = b$$138[3];
          introspect(JAM.policy.p3) {
            v12540 = /^\w/.test(v18065);
          }
        }
        var v5576 = v12540;
        if (v5576) {
          var v5573 = b$$138[3];
          introspect(JAM.policy.p3) {
            var v31124 = m$$19(v5573, null, null, c$$110)
          }
          b$$138[3] = v31124;
        } else {
          var v5574 = b$$138[3];
          var v12541 = !0;
          var v5575 = v12541 ^ f$$33;
          introspect(JAM.policy.p3) {
            var g$$58 = m$$19.filter(v5574, c$$110, d$$99, v5575)
          }
          var v12543 = !d$$99;
          if (v12543) {
            var v12542 = e$$113.push;
            introspect(JAM.policy.p3) {
              v12542.apply(e$$113, g$$58);
            }
          }
          return !1;
        }
      } else {
        var v23374 = o$$10.match;
        var v18067 = v23374.POS;
        var v18068 = b$$138[0];
        introspect(JAM.policy.p3) {
          var v12544 = v18067.test(v18068)
        }
        var v18071 = !v12544;
        if (v18071) {
          var v23375 = o$$10.match;
          var v18069 = v23375.CHILD;
          var v18070 = b$$138[0];
          introspect(JAM.policy.p3) {
            v12544 = v18069.test(v18070);
          }
        }
        var v5577 = v12544;
        if (v5577) {
          return !0;
        }
      }
      return b$$138;
    }
    function v848(a$$208, b$$137, c$$109, d$$98, e$$112, f$$32) {
      var v5579 = a$$208[1];
      introspect(JAM.policy.p3) {
        var v31125 = v5579.replace(j$$41, "")
      }
      var g$$57 = a$$208[1] = v31125;
      var v23376 = !f$$32;
      if (v23376) {
        var v25858 = o$$10.attrMap;
        v23376 = v25858[g$$57];
      }
      var v18072 = v23376;
      if (v18072) {
        var v23377 = o$$10.attrMap;
        a$$208[1] = v23377[g$$57];
      }
      var v25859 = a$$208[4];
      var v27512 = !v25859;
      if (v27512) {
        v25859 = a$$208[5];
      }
      var v23378 = v25859;
      var v25860 = !v23378;
      if (v25860) {
        v23378 = "";
      }
      var v18073 = v23378;
      introspect(JAM.policy.p3) {
        var v31126 = v18073.replace(j$$41, "")
      }
      a$$208[4] = v31126;
      var v18074 = a$$208[2];
      var v12545 = v18074 === "~=";
      if (v12545) {
        var v23379 = a$$208[4];
        var v18075 = " " + v23379;
        a$$208[4] = v18075 + " ";
      }
      return a$$208;
    }
    function v847(a$$207) {
      var v12546 = a$$207[1];
      var v5582 = v12546 === "nth";
      if (v5582) {
        var v12547 = a$$207[2];
        var v18077 = !v12547;
        if (v18077) {
          var v18076 = a$$207[0];
          introspect(JAM.policy.p3) {
            m$$19.error(v18076);
          }
        }
        var v12548 = a$$207[2];
        introspect(JAM.policy.p3) {
          var v31127 = v12548.replace(/^\+|\s*/g, "")
        }
        a$$207[2] = v31127;
        var v27513 = a$$207[2];
        var v25861 = v27513 === "even";
        if (v25861) {
          v25861 = "2n";
        }
        var v23380 = v25861;
        var v25863 = !v23380;
        if (v25863) {
          var v27514 = a$$207[2];
          var v25862 = v27514 === "odd";
          if (v25862) {
            v25862 = "2n+1";
          }
          v23380 = v25862;
        }
        var v18078 = v23380;
        var v23382 = !v18078;
        if (v23382) {
          var v27515 = a$$207[2];
          introspect(JAM.policy.p3) {
            var v25864 = /\D/.test(v27515)
          }
          var v23381 = !v25864;
          if (v23381) {
            var v25865 = a$$207[2];
            v23381 = "0n+" + v25865;
          }
          v18078 = v23381;
        }
        var v12549 = v18078;
        var v18079 = !v12549;
        if (v18079) {
          v12549 = a$$207[2];
        }
        var v5580 = v12549;
        introspect(JAM.policy.p3) {
          var b$$136 = /(-?)(\d*)(?:n([+\-]?\d*))?/.exec(v5580)
        }
        var v18080 = b$$136[1];
        var v23383 = b$$136[2];
        var v25866 = !v23383;
        if (v25866) {
          v23383 = 1;
        }
        var v18081 = v23383;
        var v12550 = v18080 + v18081;
        a$$207[2] = v12550 - 0;
        var v12551 = b$$136[3];
        a$$207[3] = v12551 - 0;
      } else {
        var v5581 = a$$207[2];
        if (v5581) {
          var v12552 = a$$207[0];
          introspect(JAM.policy.p3) {
            m$$19.error(v12552);
          }
        }
      }
      a$$207[0] = e$$101;
      e$$101 = e$$101 + 1;
      return a$$207;
    }
    function v846(a$$206, b$$135) {
      var v12553 = a$$206[1];
      introspect(JAM.policy.p3) {
        var v5583 = v12553.replace(j$$41, "")
      }
      introspect(JAM.policy.p3) {
        return v5583.toLowerCase();
      }
    }
    function v845(a$$205) {
      var v5584 = a$$205[1];
      introspect(JAM.policy.p3) {
        return v5584.replace(j$$41, "");
      }
    }
    function v844(a$$204, b$$134, c$$108, d$$97, e$$111, f$$31) {
      var v18082 = a$$204[1];
      introspect(JAM.policy.p3) {
        var v12554 = v18082.replace(j$$41, "")
      }
      var v5585 = " " + v12554;
      a$$204 = v5585 + " ";
      if (f$$31) {
        return a$$204;
      }
      var g$$56 = 0;
      var h$$54;
      var v12555 = h$$54 = b$$134[g$$56];
      var v5586 = v12555 != null;
      for (;v5586;) {
        if (h$$54) {
          var v12556;
          var v25867 = h$$54.className;
          if (v25867) {
            var v29947 = h$$54.className;
            var v29664 = " " + v29947;
            var v29232 = v29664 + " ";
            introspect(JAM.policy.p3) {
              var v28561 = v29232.replace(/[\t\n\r]/g, " ")
            }
            introspect(JAM.policy.p3) {
              var v27516 = v28561.indexOf(a$$204)
            }
            v25867 = v27516 >= 0;
          }
          var v23384 = v25867;
          var v18085 = e$$111 ^ v23384;
          if (v18085) {
            var v18083 = c$$108;
            var v23385 = !v18083;
            if (v23385) {
              introspect(JAM.policy.p3) {
                v18083 = d$$97.push(h$$54);
              }
            }
            v12556 = v18083;
          } else {
            var v18084 = c$$108;
            if (v18084) {
              v18084 = b$$134[g$$56] = !1;
            }
            v12556 = v18084;
          }
          v12556;
        }
        g$$56++;
        var v12557 = h$$54 = b$$134[g$$56];
        v5586 = v12557 != null;
      }
      return !1;
    }
    function v843(a$$203, b$$133) {
      var v18086 = b$$133.getElementsByTagName;
      var v12558 = typeof v18086;
      var v5588 = v12558 != "undefined";
      if (v5588) {
        var v5587 = a$$203[1];
        introspect(JAM.policy.p3) {
          return b$$133.getElementsByTagName(v5587);
        }
      }
      return;
    }
    function v842(a$$202, b$$132) {
      var v18087 = b$$132.getElementsByName;
      var v12559 = typeof v18087;
      var v5593 = v12559 != "undefined";
      if (v5593) {
        var c$$107 = [];
        var v5589 = a$$202[1];
        introspect(JAM.policy.p3) {
          var d$$96 = b$$132.getElementsByName(v5589)
        }
        var e$$110 = 0;
        var f$$30 = d$$96.length;
        var v5591 = e$$110 < f$$30;
        for (;v5591;) {
          var v18088 = d$$96[e$$110];
          introspect(JAM.policy.p3) {
            var v12560 = v18088.getAttribute("name")
          }
          var v12561 = a$$202[1];
          var v5590 = v12560 === v12561;
          if (v5590) {
            var v12562 = d$$96[e$$110];
            introspect(JAM.policy.p3) {
              c$$107.push(v12562);
            }
          }
          e$$110++;
          v5591 = e$$110 < f$$30;
        }
        var v5592;
        var v18089 = c$$107.length;
        var v12563 = v18089 === 0;
        if (v12563) {
          v5592 = null;
        } else {
          v5592 = c$$107;
        }
        return v5592;
      }
      return;
    }
    function v841(a$$201, b$$131, c$$106) {
      var v23386 = b$$131.getElementById;
      var v18090 = typeof v23386;
      var v12564 = v18090 != "undefined";
      if (v12564) {
        v12564 = !c$$106;
      }
      var v5596 = v12564;
      if (v5596) {
        var v5594 = a$$201[1];
        introspect(JAM.policy.p3) {
          var d$$95 = b$$131.getElementById(v5594)
        }
        var v5595;
        var v18091 = d$$95;
        if (v18091) {
          v18091 = d$$95.parentNode;
        }
        var v12565 = v18091;
        if (v12565) {
          v5595 = [d$$95];
        } else {
          v5595 = [];
        }
        return v5595;
      }
      return;
    }
    function v840(a$$200, b$$130, c$$105) {
      var d$$94;
      var f$$29 = e$$101;
      e$$101 = e$$101 + 1;
      var g$$55 = x$$69;
      var v23387 = typeof b$$130;
      var v18092 = v23387 == "string";
      if (v18092) {
        introspect(JAM.policy.p3) {
          var v23388 = l$$37.test(b$$130)
        }
        v18092 = !v23388;
      }
      var v12566 = v18092;
      if (v12566) {
        introspect(JAM.policy.p3) {
          b$$130 = b$$130.toLowerCase();
        }
        d$$94 = b$$130;
        g$$55 = w$$13;
      }
      introspect(JAM.policy.p3) {
        g$$55("previousSibling", b$$130, f$$29, a$$200, d$$94, c$$105);
      }
      return;
    }
    function v839(a$$199, b$$129, c$$104) {
      var d$$93;
      var f$$28 = e$$101;
      e$$101 = e$$101 + 1;
      var g$$54 = x$$69;
      var v23389 = typeof b$$129;
      var v18093 = v23389 == "string";
      if (v18093) {
        introspect(JAM.policy.p3) {
          var v23390 = l$$37.test(b$$129)
        }
        v18093 = !v23390;
      }
      var v12567 = v18093;
      if (v12567) {
        introspect(JAM.policy.p3) {
          b$$129 = b$$129.toLowerCase();
        }
        d$$93 = b$$129;
        g$$54 = w$$13;
      }
      introspect(JAM.policy.p3) {
        g$$54("parentNode", b$$129, f$$28, a$$199, d$$93, c$$104);
      }
      return;
    }
    function v838(a$$198, b$$128) {
      var c$$103;
      var v5597 = typeof b$$128;
      var d$$92 = v5597 == "string";
      var e$$109 = 0;
      var f$$27 = a$$198.length;
      var v12568 = d$$92;
      if (v12568) {
        introspect(JAM.policy.p3) {
          var v18094 = l$$37.test(b$$128)
        }
        v12568 = !v18094;
      }
      var v5601 = v12568;
      if (v5601) {
        introspect(JAM.policy.p3) {
          b$$128 = b$$128.toLowerCase();
        }
        var v5599 = e$$109 < f$$27;
        for (;v5599;) {
          c$$103 = a$$198[e$$109];
          if (c$$103) {
            var g$$53 = c$$103.parentNode;
            var v5598;
            var v23391 = g$$53.nodeName;
            introspect(JAM.policy.p3) {
              var v18095 = v23391.toLowerCase()
            }
            var v12569 = v18095 === b$$128;
            if (v12569) {
              v5598 = g$$53;
            } else {
              v5598 = !1;
            }
            a$$198[e$$109] = v5598;
          }
          e$$109++;
          v5599 = e$$109 < f$$27;
        }
      } else {
        var v5600 = e$$109 < f$$27;
        for (;v5600;) {
          c$$103 = a$$198[e$$109];
          if (c$$103) {
            var v18096;
            if (d$$92) {
              v18096 = c$$103.parentNode;
            } else {
              var v23392 = c$$103.parentNode;
              v18096 = v23392 === b$$128;
            }
            a$$198[e$$109] = v18096;
          }
          e$$109++;
          v5600 = e$$109 < f$$27;
        }
        if (d$$92) {
          var v12570 = !0;
          introspect(JAM.policy.p3) {
            m$$19.filter(b$$128, a$$198, v12570);
          }
        }
      }
      return;
    }
    function v837(a$$197, b$$127) {
      var v5602 = typeof b$$127;
      var c$$102 = v5602 == "string";
      var v5603 = c$$102;
      if (v5603) {
        introspect(JAM.policy.p3) {
          var v12571 = l$$37.test(b$$127)
        }
        v5603 = !v12571;
      }
      var d$$91 = v5603;
      var v5604 = c$$102;
      if (v5604) {
        v5604 = !d$$91;
      }
      var e$$108 = v5604;
      if (d$$91) {
        introspect(JAM.policy.p3) {
          b$$127 = b$$127.toLowerCase();
        }
      }
      var f$$26 = 0;
      var g$$52 = a$$197.length;
      var h$$53;
      var v5608 = f$$26 < g$$52;
      for (;v5608;) {
        var v5607 = h$$53 = a$$197[f$$26];
        if (v5607) {
          var v12572 = h$$53 = h$$53.previousSibling;
          if (v12572) {
            var v18097 = h$$53.nodeType;
            v12572 = v18097 !== 1;
          }
          var v5605 = v12572;
          for (;v5605;) {
            var v12573 = h$$53 = h$$53.previousSibling;
            if (v12573) {
              var v18098 = h$$53.nodeType;
              v12573 = v18098 !== 1;
            }
            v5605 = v12573;
          }
          var v5606;
          var v18099 = e$$108;
          var v23394 = !v18099;
          if (v23394) {
            var v23393 = h$$53;
            if (v23393) {
              var v27517 = h$$53.nodeName;
              introspect(JAM.policy.p3) {
                var v25868 = v27517.toLowerCase()
              }
              v23393 = v25868 === b$$127;
            }
            v18099 = v23393;
          }
          var v12575 = v18099;
          if (v12575) {
            var v12574 = h$$53;
            var v18100 = !v12574;
            if (v18100) {
              v12574 = !1;
            }
            v5606 = v12574;
          } else {
            v5606 = h$$53 === b$$127;
          }
          a$$197[f$$26] = v5606;
        }
        f$$26++;
        v5608 = f$$26 < g$$52;
      }
      if (e$$108) {
        var v12576 = !0;
        introspect(JAM.policy.p3) {
          m$$19.filter(b$$127, a$$197, v12576);
        }
      }
      return;
    }
    function v836(a$$196) {
      introspect(JAM.policy.p3) {
        return a$$196.getAttribute("type");
      }
    }
    function v835(a$$195) {
      introspect(JAM.policy.p3) {
        return a$$195.getAttribute("href");
      }
    }
    function v834(a$$194) {
      var b$$126;
      var c$$101;
      var d$$90 = a$$194.nodeType;
      var e$$107 = "";
      if (d$$90) {
        var v18101 = d$$90 === 1;
        var v23395 = !v18101;
        if (v23395) {
          v18101 = d$$90 === 9;
        }
        var v12577 = v18101;
        var v18102 = !v12577;
        if (v18102) {
          v12577 = d$$90 === 11;
        }
        var v5613 = v12577;
        if (v5613) {
          var v18103 = a$$194.textContent;
          var v12578 = typeof v18103;
          var v5609 = v12578 == "string";
          if (v5609) {
            return a$$194.textContent;
          }
          var v18104 = a$$194.innerText;
          var v12579 = typeof v18104;
          var v5611 = v12579 == "string";
          if (v5611) {
            var v5610 = a$$194.innerText;
            introspect(JAM.policy.p3) {
              return v5610.replace(k$$22, "");
            }
          }
          a$$194 = a$$194.firstChild;
          for (;a$$194;) {
            introspect(JAM.policy.p3) {
              var v12580 = n$$68(a$$194)
            }
            e$$107 = e$$107 + v12580;
            a$$194 = a$$194.nextSibling;
          }
        } else {
          var v12581 = d$$90 === 3;
          var v18105 = !v12581;
          if (v18105) {
            v12581 = d$$90 === 4;
          }
          var v5612 = v12581;
          if (v5612) {
            return a$$194.nodeValue;
          }
        }
      } else {
        b$$126 = 0;
        var v5615 = c$$101 = a$$194[b$$126];
        for (;v5615;) {
          var v12582 = c$$101.nodeType;
          var v5614 = v12582 !== 8;
          if (v5614) {
            introspect(JAM.policy.p3) {
              var v18106 = n$$68(c$$101)
            }
            e$$107 = e$$107 + v18106;
          }
          b$$126++;
          v5615 = c$$101 = a$$194[b$$126];
        }
      }
      return e$$107;
    }
    function v833(a$$193) {
      var v5616 = "Syntax error, unrecognized expression: " + a$$193;
      throw new Error(v5616);
    }
    function v832(a$$192, c$$100, d$$89, e$$106) {
      var f$$25;
      var g$$51;
      var h$$52;
      var i$$124;
      var j$$45;
      var k$$26;
      var l$$39;
      var n$$70;
      var p$$32;
      var q$$10 = a$$192;
      var r$$12 = [];
      var s$$23 = c$$100;
      var v12583 = c$$100;
      if (v12583) {
        v12583 = c$$100[0];
      }
      var v5617 = v12583;
      if (v5617) {
        var v12584 = c$$100[0];
        introspect(JAM.policy.p3) {
          v5617 = m$$19.isXML(v12584);
        }
      }
      var t$$7 = v5617;
      var v12585 = a$$192;
      if (v12585) {
        v12585 = c$$100.length;
      }
      var v5631 = v12585;
      for (;v5631;) {
        var v5628 = o$$10.filter;
        for (h$$52 in v5628) {
          var v25869 = o$$10.leftMatch;
          var v23396 = v25869[h$$52];
          introspect(JAM.policy.p3) {
            var v18107 = f$$25 = v23396.exec(a$$192)
          }
          var v12586 = v18107 != null;
          if (v12586) {
            v12586 = f$$25[2];
          }
          var v5627 = v12586;
          if (v5627) {
            var v23397 = o$$10.filter;
            k$$26 = v23397[h$$52];
            l$$39 = f$$25[1];
            g$$51 = !1;
            introspect(JAM.policy.p3) {
              f$$25.splice(1, 1);
            }
            var v23398 = l$$39.length;
            var v18108 = v23398 - 1;
            introspect(JAM.policy.p3) {
              var v12587 = l$$39.substr(v18108)
            }
            var v5618 = v12587 === "\\";
            if (v5618) {
              continue;
            }
            var v5619 = s$$23 === r$$12;
            if (v5619) {
              r$$12 = [];
            }
            var v12588 = o$$10.preFilter;
            var v5623 = v12588[h$$52];
            if (v5623) {
              var v5620 = o$$10.preFilter;
              introspect(JAM.policy.p3) {
                f$$25 = v5620[h$$52](f$$25, s$$23, d$$89, r$$12, e$$106, t$$7);
              }
              var v5622 = !f$$25;
              if (v5622) {
                g$$51 = i$$124 = !0;
              } else {
                var v12589 = !0;
                var v5621 = f$$25 === v12589;
                if (v5621) {
                  continue;
                }
              }
            }
            if (f$$25) {
              n$$70 = 0;
              var v12590 = j$$45 = s$$23[n$$70];
              var v5624 = v12590 != null;
              for (;v5624;) {
                if (j$$45) {
                  introspect(JAM.policy.p3) {
                    i$$124 = k$$26(j$$45, f$$25, n$$70, s$$23);
                  }
                  p$$32 = e$$106 ^ i$$124;
                  var v18109;
                  var v25870 = d$$89;
                  if (v25870) {
                    v25870 = i$$124 != null;
                  }
                  var v23401 = v25870;
                  if (v23401) {
                    var v23399;
                    if (p$$32) {
                      v23399 = g$$51 = !0;
                    } else {
                      introspect(JAM.policy.p2) {
                        v23399 = s$$23[n$$70] = !1;
                      }
                    }
                    v18109 = v23399;
                  } else {
                    var v23400 = p$$32;
                    if (v23400) {
                      introspect(JAM.policy.p3) {
                        r$$12.push(j$$45);
                      }
                      v23400 = g$$51 = !0;
                    }
                    v18109 = v23400;
                  }
                  v18109;
                }
                n$$70++;
                var v12591 = j$$45 = s$$23[n$$70];
                v5624 = v12591 != null;
              }
            }
            var v5626 = i$$124 !== b$$9;
            if (v5626) {
              var v18110 = !d$$89;
              if (v18110) {
                s$$23 = r$$12;
              }
              var v18111 = o$$10.match;
              var v12592 = v18111[h$$52];
              introspect(JAM.policy.p3) {
                a$$192 = a$$192.replace(v12592, "");
              }
              var v5625 = !g$$51;
              if (v5625) {
                return [];
              }
              break;
            }
          }
        }
        var v5630 = a$$192 === q$$10;
        if (v5630) {
          var v5629 = g$$51 == null;
          if (v5629) {
            introspect(JAM.policy.p3) {
              m$$19.error(a$$192);
            }
          } else {
            break;
          }
        }
        q$$10 = a$$192;
        var v12593 = a$$192;
        if (v12593) {
          v12593 = c$$100.length;
        }
        v5631 = v12593;
      }
      return s$$23;
    }
    function v831(a$$191, b$$125, c$$99) {
      var d$$88;
      var e$$105;
      var f$$24;
      var g$$50;
      var h$$51;
      var i$$123;
      var v5632 = !a$$191;
      if (v5632) {
        return [];
      }
      e$$105 = 0;
      var v12594 = o$$10.order;
      f$$24 = v12594.length;
      var v5638 = e$$105 < f$$24;
      for (;v5638;) {
        var v5633 = o$$10.order;
        h$$51 = v5633[e$$105];
        var v18112 = o$$10.leftMatch;
        var v12595 = v18112[h$$51];
        introspect(JAM.policy.p3) {
          var v5637 = g$$50 = v12595.exec(a$$191)
        }
        if (v5637) {
          i$$123 = g$$50[1];
          introspect(JAM.policy.p3) {
            g$$50.splice(1, 1);
          }
          var v23402 = i$$123.length;
          var v18113 = v23402 - 1;
          introspect(JAM.policy.p3) {
            var v12596 = i$$123.substr(v18113)
          }
          var v5636 = v12596 !== "\\";
          if (v5636) {
            var v18114 = g$$50[1];
            var v23403 = !v18114;
            if (v23403) {
              v18114 = "";
            }
            var v12597 = v18114;
            introspect(JAM.policy.p3) {
              var v31128 = v12597.replace(j$$41, "")
            }
            g$$50[1] = v31128;
            var v12598 = o$$10.find;
            introspect(JAM.policy.p3) {
              d$$88 = v12598[h$$51](g$$50, b$$125, c$$99);
            }
            var v5635 = d$$88 != null;
            if (v5635) {
              var v12599 = o$$10.match;
              var v5634 = v12599[h$$51];
              introspect(JAM.policy.p3) {
                a$$191 = a$$191.replace(v5634, "");
              }
              break;
            }
          }
        }
        e$$105++;
        v5638 = e$$105 < f$$24;
      }
      var v12601 = !d$$88;
      if (v12601) {
        var v12600;
        var v25871 = b$$125.getElementsByTagName;
        var v23404 = typeof v25871;
        var v18115 = v23404 != "undefined";
        if (v18115) {
          introspect(JAM.policy.p3) {
            v12600 = b$$125.getElementsByTagName("*");
          }
        } else {
          v12600 = [];
        }
        d$$88 = v12600;
      }
      return {set:d$$88, expr:a$$191};
    }
    function v830(a$$190, b$$124) {
      var v18116 = [a$$190];
      introspect(JAM.policy.p3) {
        var v12602 = m$$19(b$$124, null, null, v18116)
      }
      var v5639 = v12602.length;
      return v5639 > 0;
    }
    function v829(a$$189, b$$123) {
      introspect(JAM.policy.p3) {
        return m$$19(a$$189, null, null, b$$123);
      }
    }
    function v828(a$$188) {
      if (u$$5) {
        h$$47 = i$$119;
        introspect(JAM.policy.p3) {
          a$$188.sort(u$$5);
        }
        if (h$$47) {
          var b$$122 = 1;
          var v12603 = a$$188.length;
          var v5641 = b$$122 < v12603;
          for (;v5641;) {
            var v12604 = a$$188[b$$122];
            var v18117 = b$$122 - 1;
            var v12605 = a$$188[v18117];
            var v5640 = v12604 === v12605;
            if (v5640) {
              var v12606 = b$$122;
              b$$122 = b$$122 - 1;
              introspect(JAM.policy.p3) {
                a$$188.splice(v12606, 1);
              }
            }
            b$$122++;
            var v12607 = a$$188.length;
            v5641 = b$$122 < v12607;
          }
        }
      }
      return a$$188;
    }
    function v827() {
      i$$119 = !1;
      return 0;
    }
    function y$$51(a$$264, b$$174, c$$130) {
      var d$$112;
      var e$$126 = [];
      var f$$42 = "";
      var v5642;
      var v12608 = b$$174.nodeType;
      if (v12608) {
        v5642 = [b$$174];
      } else {
        v5642 = b$$174;
      }
      var g$$65 = v5642;
      var v18118 = o$$10.match;
      var v12609 = v18118.PSEUDO;
      introspect(JAM.policy.p3) {
        var v5643 = d$$112 = v12609.exec(a$$264)
      }
      for (;v5643;) {
        var v18119 = d$$112[0];
        f$$42 = f$$42 + v18119;
        var v18120 = o$$10.match;
        var v12610 = v18120.PSEUDO;
        introspect(JAM.policy.p3) {
          a$$264 = a$$264.replace(v12610, "");
        }
        var v18121 = o$$10.match;
        var v12611 = v18121.PSEUDO;
        introspect(JAM.policy.p3) {
          v5643 = d$$112 = v12611.exec(a$$264);
        }
      }
      var v5644;
      var v18122 = o$$10.relative;
      var v12612 = v18122[a$$264];
      if (v12612) {
        v5644 = a$$264 + "*";
      } else {
        v5644 = a$$264;
      }
      a$$264 = v5644;
      var h$$58 = 0;
      var i$$129 = g$$65.length;
      var v5646 = h$$58 < i$$129;
      for (;v5646;) {
        var v5645 = g$$65[h$$58];
        introspect(JAM.policy.p3) {
          m$$19(a$$264, v5645, e$$126, c$$130);
        }
        h$$58++;
        v5646 = h$$58 < i$$129;
      }
      introspect(JAM.policy.p3) {
        return m$$19.filter(f$$42, e$$126);
      }
    }
    function s$$22(a$$245, b$$160) {
      var v12613 = Array.prototype;
      var v5647 = v12613.slice;
      introspect(JAM.policy.p3) {
        a$$245 = v5647.call(a$$245, 0);
      }
      if (b$$160) {
        var v5648 = b$$160.push;
        introspect(JAM.policy.p3) {
          v5648.apply(b$$160, a$$245);
        }
        return b$$160;
      }
      return a$$245;
    }
    function q$$8(a$$244, b$$159) {
      var v12614 = b$$159 - 0;
      var v5649 = v12614 + 1;
      return "\\" + v5649;
    }
    function m$$19(b$$121, d$$87, e$$104, f$$23) {
      e$$104 = e$$104 || [];
      d$$87 = d$$87 || c$$5;
      var h$$50 = d$$87;
      var v18123 = d$$87.nodeType;
      var v12615 = v18123 !== 1;
      if (v12615) {
        var v18124 = d$$87.nodeType;
        v12615 = v18124 !== 9;
      }
      var v5650 = v12615;
      if (v5650) {
        return [];
      }
      var v12616 = !b$$121;
      var v18126 = !v12616;
      if (v18126) {
        var v18125 = typeof b$$121;
        v12616 = v18125 != "string";
      }
      var v5651 = v12616;
      if (v5651) {
        return e$$104;
      }
      var i$$122;
      var j$$44;
      var k$$25;
      var l$$38;
      var n$$69;
      var q$$9;
      var r$$11;
      var t$$6;
      var u$$6 = !0;
      introspect(JAM.policy.p3) {
        var v$$7 = m$$19.isXML(d$$87)
      }
      var w$$14 = [];
      var x$$70 = b$$121;
      do {
        introspect(JAM.policy.p3) {
          a$$185.exec("");
        }
        introspect(JAM.policy.p3) {
          i$$122 = a$$185.exec(x$$70);
        }
        if (i$$122) {
          x$$70 = i$$122[3];
          var v12617 = i$$122[1];
          introspect(JAM.policy.p3) {
            w$$14.push(v12617);
          }
          var v5652 = i$$122[2];
          if (v5652) {
            l$$38 = i$$122[3];
            break;
          }
        }
      } while (i$$122);
      var v18127 = w$$14.length;
      var v12618 = v18127 > 1;
      if (v12618) {
        introspect(JAM.policy.p3) {
          v12618 = p$$31.exec(b$$121);
        }
      }
      var v5659 = v12618;
      if (v5659) {
        var v18128 = w$$14.length;
        var v12619 = v18128 === 2;
        if (v12619) {
          var v18129 = o$$10.relative;
          var v18130 = w$$14[0];
          v12619 = v18129[v18130];
        }
        var v5656 = v12619;
        if (v5656) {
          var v12620 = w$$14[0];
          var v12621 = w$$14[1];
          var v5653 = v12620 + v12621;
          j$$44 = y$$51(v5653, d$$87, f$$23);
        } else {
          var v5654;
          var v18131 = o$$10.relative;
          var v18132 = w$$14[0];
          var v12623 = v18131[v18132];
          if (v12623) {
            v5654 = [d$$87];
          } else {
            introspect(JAM.policy.p3) {
              var v12622 = w$$14.shift()
            }
            introspect(JAM.policy.p3) {
              v5654 = m$$19(v12622, d$$87);
            }
          }
          j$$44 = v5654;
          var v5655 = w$$14.length;
          for (;v5655;) {
            introspect(JAM.policy.p3) {
              b$$121 = w$$14.shift();
            }
            var v23405 = o$$10.relative;
            var v18133 = v23405[b$$121];
            if (v18133) {
              introspect(JAM.policy.p3) {
                var v25872 = w$$14.shift()
              }
              b$$121 = b$$121 + v25872;
            }
            j$$44 = y$$51(b$$121, j$$44, f$$23);
            v5655 = w$$14.length;
          }
        }
      } else {
        var v27518 = !f$$23;
        if (v27518) {
          var v28562 = w$$14.length;
          v27518 = v28562 > 1;
        }
        var v25873 = v27518;
        if (v25873) {
          var v27519 = d$$87.nodeType;
          v25873 = v27519 === 9;
        }
        var v23406 = v25873;
        if (v23406) {
          v23406 = !v$$7;
        }
        var v18134 = v23406;
        if (v18134) {
          var v25874 = o$$10.match;
          var v23407 = v25874.ID;
          var v23408 = w$$14[0];
          introspect(JAM.policy.p3) {
            v18134 = v23407.test(v23408);
          }
        }
        var v12624 = v18134;
        if (v12624) {
          var v25875 = o$$10.match;
          var v23409 = v25875.ID;
          var v27520 = w$$14.length;
          var v25876 = v27520 - 1;
          var v23410 = w$$14[v25876];
          introspect(JAM.policy.p3) {
            var v18135 = v23409.test(v23410)
          }
          v12624 = !v18135;
        }
        var v5657 = v12624;
        if (v5657) {
          introspect(JAM.policy.p3) {
            var v18136 = w$$14.shift()
          }
          introspect(JAM.policy.p3) {
            n$$69 = m$$19.find(v18136, d$$87, v$$7);
          }
          var v18137;
          var v23413 = n$$69.expr;
          if (v23413) {
            var v25877 = n$$69.expr;
            var v25878 = n$$69.set;
            introspect(JAM.policy.p3) {
              var v23411 = m$$19.filter(v25877, v25878)
            }
            v18137 = v23411[0];
          } else {
            var v23412 = n$$69.set;
            v18137 = v23412[0];
          }
          d$$87 = v18137;
        }
        if (d$$87) {
          var v18138;
          if (f$$23) {
            introspect(JAM.policy.p3) {
              var v23414 = w$$14.pop()
            }
            introspect(JAM.policy.p3) {
              var v23415 = s$$22(f$$23)
            }
            v18138 = {expr:v23414, set:v23415};
          } else {
            introspect(JAM.policy.p3) {
              var v23416 = w$$14.pop()
            }
            var v25879;
            var v29665 = w$$14.length;
            var v29233 = v29665 === 1;
            if (v29233) {
              var v29948 = w$$14[0];
              var v29666 = v29948 === "~";
              var v29950 = !v29666;
              if (v29950) {
                var v29949 = w$$14[0];
                v29666 = v29949 === "+";
              }
              v29233 = v29666;
            }
            var v28563 = v29233;
            if (v28563) {
              v28563 = d$$87.parentNode;
            }
            var v27521 = v28563;
            if (v27521) {
              v25879 = d$$87.parentNode;
            } else {
              v25879 = d$$87;
            }
            var v23417 = v25879;
            introspect(JAM.policy.p3) {
              v18138 = m$$19.find(v23416, v23417, v$$7);
            }
          }
          n$$69 = v18138;
          var v18139;
          var v23420 = n$$69.expr;
          if (v23420) {
            var v23418 = n$$69.expr;
            var v23419 = n$$69.set;
            introspect(JAM.policy.p3) {
              v18139 = m$$19.filter(v23418, v23419);
            }
          } else {
            v18139 = n$$69.set;
          }
          j$$44 = v18139;
          var v12625;
          var v23421 = w$$14.length;
          var v18140 = v23421 > 0;
          if (v18140) {
            introspect(JAM.policy.p3) {
              v12625 = k$$25 = s$$22(j$$44);
            }
          } else {
            v12625 = u$$6 = !1;
          }
          v12625;
          var v5658 = w$$14.length;
          for (;v5658;) {
            introspect(JAM.policy.p3) {
              q$$9 = w$$14.pop();
            }
            r$$11 = q$$9;
            var v23422;
            var v27522 = o$$10.relative;
            var v25880 = v27522[q$$9];
            if (v25880) {
              introspect(JAM.policy.p3) {
                v23422 = r$$11 = w$$14.pop();
              }
            } else {
              v23422 = q$$9 = "";
            }
            v23422;
            var v18141 = r$$11 == null;
            if (v18141) {
              r$$11 = d$$87;
            }
            var v12626 = o$$10.relative;
            introspect(JAM.policy.p3) {
              v12626[q$$9](k$$25, r$$11, v$$7);
            }
            v5658 = w$$14.length;
          }
        } else {
          k$$25 = w$$14 = [];
        }
      }
      var v18142 = !k$$25;
      if (v18142) {
        k$$25 = j$$44;
      }
      var v18144 = !k$$25;
      if (v18144) {
        var v18143 = q$$9 || b$$121;
        introspect(JAM.policy.p3) {
          m$$19.error(v18143);
        }
      }
      introspect(JAM.policy.p3) {
        var v12627 = g$$47.call(k$$25)
      }
      var v5667 = v12627 === "[object Array]";
      if (v5667) {
        var v5666 = !u$$6;
        if (v5666) {
          var v5660 = e$$104.push;
          introspect(JAM.policy.p3) {
            v5660.apply(e$$104, k$$25);
          }
        } else {
          var v12628 = d$$87;
          if (v12628) {
            var v18145 = d$$87.nodeType;
            v12628 = v18145 === 1;
          }
          var v5665 = v12628;
          if (v5665) {
            t$$6 = 0;
            var v12629 = k$$25[t$$6];
            var v5662 = v12629 != null;
            for (;v5662;) {
              var v12630 = k$$25[t$$6];
              if (v12630) {
                var v23423 = k$$25[t$$6];
                var v23424 = !0;
                var v18146 = v23423 === v23424;
                var v23426 = !v18146;
                if (v23426) {
                  var v27523 = k$$25[t$$6];
                  var v25881 = v27523.nodeType;
                  var v23425 = v25881 === 1;
                  if (v23425) {
                    var v25882 = k$$25[t$$6];
                    introspect(JAM.policy.p3) {
                      v23425 = m$$19.contains(d$$87, v25882);
                    }
                  }
                  v18146 = v23425;
                }
                v12630 = v18146;
              }
              var v5661 = v12630;
              if (v5661) {
                var v12631 = j$$44[t$$6];
                introspect(JAM.policy.p3) {
                  e$$104.push(v12631);
                }
              }
              t$$6++;
              var v12632 = k$$25[t$$6];
              v5662 = v12632 != null;
            }
          } else {
            t$$6 = 0;
            var v12633 = k$$25[t$$6];
            var v5664 = v12633 != null;
            for (;v5664;) {
              var v12634 = k$$25[t$$6];
              if (v12634) {
                var v23427 = k$$25[t$$6];
                var v18147 = v23427.nodeType;
                v12634 = v18147 === 1;
              }
              var v5663 = v12634;
              if (v5663) {
                var v12635 = j$$44[t$$6];
                introspect(JAM.policy.p3) {
                  e$$104.push(v12635);
                }
              }
              t$$6++;
              var v12636 = k$$25[t$$6];
              v5664 = v12636 != null;
            }
          }
        }
      } else {
        introspect(JAM.policy.p3) {
          s$$22(k$$25, e$$104);
        }
      }
      if (l$$38) {
        introspect(JAM.policy.p3) {
          m$$19(l$$38, h$$50, e$$104, f$$23);
        }
        introspect(JAM.policy.p3) {
          m$$19.uniqueSort(e$$104);
        }
      }
      return e$$104;
    }
    function x$$69(a$$186, b$$119, c$$97, e$$102, f$$21, g$$48) {
      var h$$48 = 0;
      var i$$120 = e$$102.length;
      var v5674 = h$$48 < i$$120;
      for (;v5674;) {
        var j$$42 = e$$102[h$$48];
        if (j$$42) {
          var k$$23 = !1;
          j$$42 = j$$42[a$$186];
          for (;j$$42;) {
            var v12637 = j$$42[d$$86];
            var v5669 = v12637 === c$$97;
            if (v5669) {
              var v5668 = j$$42.sizset;
              k$$23 = e$$102[v5668];
              break;
            }
            var v12638 = j$$42.nodeType;
            var v5673 = v12638 === 1;
            if (v5673) {
              var v12639 = !g$$48;
              if (v12639) {
                introspect(JAM.policy.p2) {
                  j$$42[d$$86] = c$$97;
                }
                j$$42.sizset = h$$48;
              }
              var v12640 = typeof b$$119;
              var v5672 = v12640 != "string";
              if (v5672) {
                var v5670 = j$$42 === b$$119;
                if (v5670) {
                  k$$23 = !0;
                  break;
                }
              } else {
                var v23428 = [j$$42];
                introspect(JAM.policy.p3) {
                  var v18148 = m$$19.filter(b$$119, v23428)
                }
                var v12641 = v18148.length;
                var v5671 = v12641 > 0;
                if (v5671) {
                  k$$23 = j$$42;
                  break;
                }
              }
            }
            j$$42 = j$$42[a$$186];
          }
          e$$102[h$$48] = k$$23;
        }
        h$$48++;
        v5674 = h$$48 < i$$120;
      }
      return;
    }
    function w$$13(a$$187, b$$120, c$$98, e$$103, f$$22, g$$49) {
      var h$$49 = 0;
      var i$$121 = e$$103.length;
      var v5679 = h$$49 < i$$121;
      for (;v5679;) {
        var j$$43 = e$$103[h$$49];
        if (j$$43) {
          var k$$24 = !1;
          j$$43 = j$$43[a$$187];
          for (;j$$43;) {
            var v12642 = j$$43[d$$86];
            var v5676 = v12642 === c$$98;
            if (v5676) {
              var v5675 = j$$43.sizset;
              k$$24 = e$$103[v5675];
              break;
            }
            var v18149 = j$$43.nodeType;
            var v12643 = v18149 === 1;
            if (v12643) {
              v12643 = !g$$49;
            }
            var v5677 = v12643;
            if (v5677) {
              introspect(JAM.policy.p2) {
                j$$43[d$$86] = c$$98;
              }
              j$$43.sizset = h$$49;
            }
            var v18150 = j$$43.nodeName;
            introspect(JAM.policy.p3) {
              var v12644 = v18150.toLowerCase()
            }
            var v5678 = v12644 === b$$120;
            if (v5678) {
              k$$24 = j$$43;
              break;
            }
            j$$43 = j$$43[a$$187];
          }
          e$$103[h$$49] = k$$24;
        }
        h$$49++;
        v5679 = h$$49 < i$$121;
      }
      return;
    }
    var a$$185 = /((?:\((?:\([^()]+\)|[^()]+)+\)|\[(?:\[[^\[\]]*\]|['"][^'"]*['"]|[^\[\]'"]+)+\]|\\.|[^ >+~,(\[\\]+)+|[>+~])(\s*,\s*)?((?:.|\r|\n)*)/g;
    introspect(JAM.policy.p3) {
      var v18151 = Math.random()
    }
    var v12645 = v18151 + "";
    introspect(JAM.policy.p3) {
      var v5680 = v12645.replace(".", "")
    }
    var d$$86 = "sizcache" + v5680;
    var e$$101 = 0;
    var v5681 = Object.prototype;
    var g$$47 = v5681.toString;
    var h$$47 = !1;
    var i$$119 = !0;
    var j$$41 = /\\/g;
    var k$$22 = /\r\n/g;
    var l$$37 = /\W/;
    var v5682 = [0, 0];
    introspect(JAM.policy.p3) {
      v5682.sort(v827);
    }
    m$$19.uniqueSort = v828;
    m$$19.matches = v829;
    m$$19.matchesSelector = v830;
    m$$19.find = v831;
    m$$19.filter = v832;
    m$$19.error = v833;
    var n$$68 = m$$19.getText = v834;
    var v5683 = ["ID", "NAME", "TAG"];
    var v5684 = {ID:/#((?:[\w\u00c0-\uFFFF\-]|\\.)+)/, CLASS:/\.((?:[\w\u00c0-\uFFFF\-]|\\.)+)/, NAME:/\[name=['"]*((?:[\w\u00c0-\uFFFF\-]|\\.)+)['"]*\]/, ATTR:/\[\s*((?:[\w\u00c0-\uFFFF\-]|\\.)+)\s*(?:(\S?=)\s*(?:(['"])(.*?)\3|(#?(?:[\w\u00c0-\uFFFF\-]|\\.)*)|)|)\s*\]/, TAG:/^((?:[\w\u00c0-\uFFFF\*\-]|\\.)+)/, CHILD:/:(only|nth|last|first)-child(?:\(\s*(even|odd|(?:[+\-]?\d+|(?:[+\-]?\d*)?n\s*(?:[+\-]\s*\d+)?))\s*\))?/, POS:/:(nth|eq|gt|lt|first|last|even|odd)(?:\((\d*)\))?(?=[^\-]|$)/, PSEUDO:/:((?:[\w\u00c0-\uFFFF\-]|\\.)+)(?:\((['"]?)((?:\([^\)]+\)|[^\(\)]*)+)\2\))?/};
    var v5685 = {"class":"className", "for":"htmlFor"};
    var v5686 = {href:v835, type:v836};
    var v5687 = {"+":v837, ">":v838, "":v839, "~":v840};
    var v5688 = {ID:v841, NAME:v842, TAG:v843};
    var v5689 = {CLASS:v844, ID:v845, TAG:v846, CHILD:v847, ATTR:v848, PSEUDO:v849, POS:v850};
    var v5690 = {enabled:v851, disabled:v852, checked:v853, selected:v854, parent:v855, empty:v856, has:v857, header:v858, text:v859, radio:v860, checkbox:v861, file:v862, password:v863, submit:v864, image:v865, reset:v866, button:v867, input:v868, focus:v869};
    var v5691 = {first:v870, last:v871, even:v872, odd:v873, lt:v874, gt:v875, nth:v876, eq:v877};
    var v5692 = {PSEUDO:v878, CHILD:v879, ID:v880, TAG:v881, CLASS:v882, ATTR:v883, POS:v884};
    var o$$10 = m$$19.selectors = {order:v5683, match:v5684, leftMatch:{}, attrMap:v5685, attrHandle:v5686, relative:v5687, find:v5688, preFilter:v5689, filters:v5690, setFilters:v5691, filter:v5692};
    var v5693 = o$$10.match;
    var p$$31 = v5693.POS;
    var r$$10;
    var v5694 = o$$10.match;
    for (r$$10 in v5694) {
      var v12646 = o$$10.match;
      var v12647 = r$$10;
      var v27524 = o$$10.match;
      var v25883 = v27524[r$$10];
      var v23429 = v25883.source;
      var v23430 = /(?![^\[]*\])(?![^\(]*\))/.source;
      var v18152 = v23429 + v23430;
      var v31129 = new RegExp(v18152);
      introspect(JAM.policy.p2) {
        v12646[v12647] = v31129;
      }
      var v12648 = o$$10.leftMatch;
      var v12649 = r$$10;
      var v23431 = /(^(?:.|\r|\n)*?)/.source;
      var v28564 = o$$10.match;
      var v27525 = v28564[r$$10];
      var v25884 = v27525.source;
      introspect(JAM.policy.p3) {
        var v23432 = v25884.replace(/\\(\d+)/g, q$$8)
      }
      var v18153 = v23431 + v23432;
      var v31130 = new RegExp(v18153);
      introspect(JAM.policy.p2) {
        v12648[v12649] = v31130;
      }
    }
    var v5695 = o$$10.match;
    v5695.globalPOS = p$$31;
    try {
      var v23433 = Array.prototype;
      var v18154 = v23433.slice;
      var v23434 = c$$5.documentElement;
      var v18155 = v23434.childNodes;
      introspect(JAM.policy.p3) {
        var v12650 = v18154.call(v18155, 0)
      }
      var v5696 = v12650[0];
      v5696.nodeType;
    } catch (t$$8) {
      s$$22 = v885;
    }
    var u$$5;
    var v$$6;
    var v29234;
    var v29951 = c$$5.documentElement;
    var v29667 = v29951.compareDocumentPosition;
    if (v29667) {
      v29234 = u$$5 = v886;
    } else {
      u$$5 = v887;
      v29234 = v$$6 = v888;
    }
    v29234;
    v891();
    v894();
    var v27526 = c$$5.querySelectorAll;
    if (v27526) {
      v896();
    }
    v898();
    v900();
    var v18156;
    var v25885 = c$$5.documentElement;
    var v23436 = v25885.contains;
    if (v23436) {
      v18156 = m$$19.contains = v901;
    } else {
      var v23435;
      var v27527 = c$$5.documentElement;
      var v25886 = v27527.compareDocumentPosition;
      if (v25886) {
        v23435 = m$$19.contains = v902;
      } else {
        v23435 = m$$19.contains = v903;
      }
      v18156 = v23435;
    }
    v18156;
    m$$19.isXML = v904;
    m$$19.attr = f$$4.attr;
    var v29668 = m$$19.selectors;
    v29668.attrMap = {};
    f$$4.find = m$$19;
    f$$4.expr = m$$19.selectors;
    var v27528 = f$$4.expr;
    var v28565 = f$$4.expr;
    v27528[":"] = v28565.filters;
    f$$4.unique = m$$19.uniqueSort;
    f$$4.text = m$$19.getText;
    f$$4.isXMLDoc = m$$19.isXML;
    f$$4.contains = m$$19.contains;
    return;
  }
  function v826(a$$183, b$$118) {
    function v825(a$$184, c$$96) {
      var v5697 = c$$96 == null;
      if (v5697) {
        c$$96 = a$$184;
        a$$184 = null;
      }
      var v5698;
      var v18157 = arguments.length;
      var v12651 = v18157 > 0;
      if (v12651) {
        introspect(JAM.policy.p3) {
          v5698 = this.on(b$$118, null, a$$184, c$$96);
        }
      } else {
        introspect(JAM.policy.p3) {
          v5698 = this.trigger(b$$118);
        }
      }
      return v5698;
    }
    var v23437 = f$$4.fn;
    introspect(JAM.policy.p2) {
      v23437[b$$118] = v825;
    }
    var v23438 = f$$4.attrFn;
    if (v23438) {
      var v25887 = f$$4.attrFn;
      introspect(JAM.policy.p2) {
        v25887[b$$118] = !0;
      }
    }
    introspect(JAM.policy.p3) {
      var v18158 = C.test(b$$118)
    }
    if (v18158) {
      var v25888 = f$$4.event;
      var v23439 = v25888.fixHooks;
      var v25889 = f$$4.event;
      introspect(JAM.policy.p2) {
        v23439[b$$118] = v25889.keyHooks;
      }
    }
    introspect(JAM.policy.p3) {
      var v12652 = D.test(b$$118)
    }
    if (v12652) {
      var v23440 = f$$4.event;
      var v18159 = v23440.fixHooks;
      var v23441 = f$$4.event;
      introspect(JAM.policy.p2) {
        v18159[b$$118] = v23441.mouseHooks;
      }
    }
    return;
  }
  function v824(a$$182, b$$117) {
    introspect(JAM.policy.p3) {
      var v5699 = this.mouseenter(a$$182)
    }
    var v5700 = b$$117 || a$$182;
    introspect(JAM.policy.p3) {
      return v5699.mouseleave(v5700);
    }
  }
  function v823(a$$181) {
    function e$$99(c$$95) {
      var v23442 = a$$181.guid;
      var v18160 = "lastToggle" + v23442;
      introspect(JAM.policy.p3) {
        var v12653 = f$$4._data(this, v18160)
      }
      var v18161 = !v12653;
      if (v18161) {
        v12653 = 0;
      }
      var v5701 = v12653;
      var e$$100 = v5701 % d$$85;
      var v18162 = a$$181.guid;
      var v12654 = "lastToggle" + v18162;
      var v12655 = e$$100 + 1;
      introspect(JAM.policy.p3) {
        f$$4._data(this, v12654, v12655);
      }
      introspect(JAM.policy.p3) {
        c$$95.preventDefault();
      }
      var v12656 = b$$116[e$$100];
      introspect(JAM.policy.p3) {
        var v5702 = v12656.apply(this, arguments)
      }
      var v12657 = !v5702;
      if (v12657) {
        v5702 = !1;
      }
      return v5702;
    }
    var b$$116 = arguments;
    var v5703 = a$$181.guid;
    var v12658 = !v5703;
    if (v12658) {
      v5703 = f$$4.guid;
      var v18163 = f$$4.guid;
      f$$4.guid = v18163 + 1;
    }
    var c$$94 = v5703;
    var d$$85 = 0;
    e$$99.guid = c$$94;
    var v12659 = b$$116.length;
    var v5705 = d$$85 < v12659;
    for (;v5705;) {
      var v12660 = d$$85;
      d$$85 = d$$85 + 1;
      var v5704 = b$$116[v12660];
      v5704.guid = c$$94;
      var v12661 = b$$116.length;
      v5705 = d$$85 < v12661;
    }
    introspect(JAM.policy.p3) {
      return this.click(e$$99);
    }
  }
  function v822(a$$180, b$$115) {
    var v5709 = this[0];
    if (v5709) {
      var v5706 = f$$4.event;
      var v5707 = this[0];
      var v5708 = !0;
      introspect(JAM.policy.p3) {
        return v5706.trigger(a$$180, b$$115, v5707, v5708);
      }
    }
    return;
  }
  function v821(a$$179, b$$114) {
    function v820() {
      var v5710 = f$$4.event;
      introspect(JAM.policy.p3) {
        v5710.trigger(a$$179, b$$114, this);
      }
      return;
    }
    introspect(JAM.policy.p3) {
      return this.each(v820);
    }
  }
  function v819(a$$178, b$$113, c$$93) {
    var v5711;
    var v18164 = arguments.length;
    var v12662 = v18164 == 1;
    if (v12662) {
      introspect(JAM.policy.p3) {
        v5711 = this.off(a$$178, "**");
      }
    } else {
      introspect(JAM.policy.p3) {
        v5711 = this.off(b$$113, a$$178, c$$93);
      }
    }
    return v5711;
  }
  function v818(a$$177, b$$112, c$$92, d$$84) {
    introspect(JAM.policy.p3) {
      return this.on(b$$112, a$$177, c$$92, d$$84);
    }
  }
  function v817(a$$176, b$$111) {
    var v12663 = this.context;
    introspect(JAM.policy.p3) {
      var v5712 = f$$4(v12663)
    }
    var v12664 = this.selector;
    var v18165 = !v12664;
    if (v18165) {
      v12664 = "**";
    }
    var v5713 = v12664;
    introspect(JAM.policy.p3) {
      v5712.off(a$$176, v5713, b$$111);
    }
    return this;
  }
  function v816(a$$175, b$$110, c$$91) {
    var v12665 = this.context;
    introspect(JAM.policy.p3) {
      var v5714 = f$$4(v12665)
    }
    var v5715 = this.selector;
    introspect(JAM.policy.p3) {
      v5714.on(a$$175, v5715, b$$110, c$$91);
    }
    return this;
  }
  function v815(a$$174, b$$109) {
    introspect(JAM.policy.p3) {
      return this.off(a$$174, null, b$$109);
    }
  }
  function v814(a$$173, b$$108, c$$90) {
    introspect(JAM.policy.p3) {
      return this.on(a$$173, null, b$$108, c$$90);
    }
  }
  function v813(a$$172, c$$89, d$$83) {
    function v812() {
      var v5716 = f$$4.event;
      introspect(JAM.policy.p3) {
        v5716.remove(this, a$$172, d$$83, c$$89);
      }
      return;
    }
    var v18166 = a$$172;
    if (v18166) {
      v18166 = a$$172.preventDefault;
    }
    var v12666 = v18166;
    if (v12666) {
      v12666 = a$$172.handleObj;
    }
    var v5721 = v12666;
    if (v5721) {
      var e$$98 = a$$172.handleObj;
      var v12667 = a$$172.delegateTarget;
      introspect(JAM.policy.p3) {
        var v5717 = f$$4(v12667)
      }
      var v12668;
      var v18169 = e$$98.namespace;
      if (v18169) {
        var v23443 = e$$98.origType;
        var v18167 = v23443 + ".";
        var v18168 = e$$98.namespace;
        v12668 = v18167 + v18168;
      } else {
        v12668 = e$$98.origType;
      }
      var v5718 = v12668;
      var v5719 = e$$98.selector;
      var v5720 = e$$98.handler;
      introspect(JAM.policy.p3) {
        v5717.off(v5718, v5719, v5720);
      }
      return this;
    }
    var v12669 = typeof a$$172;
    var v5723 = v12669 == "object";
    if (v5723) {
      var g$$46;
      for (g$$46 in a$$172) {
        var v5722 = a$$172[g$$46];
        introspect(JAM.policy.p3) {
          this.off(g$$46, c$$89, v5722);
        }
      }
      return this;
    }
    var v18170 = !1;
    var v12670 = c$$89 === v18170;
    var v18172 = !v12670;
    if (v18172) {
      var v18171 = typeof c$$89;
      v12670 = v18171 == "function";
    }
    var v5724 = v12670;
    if (v5724) {
      d$$83 = c$$89;
      c$$89 = b$$9;
    }
    var v12671 = !1;
    var v5725 = d$$83 === v12671;
    if (v5725) {
      d$$83 = J;
    }
    introspect(JAM.policy.p3) {
      return this.each(v812);
    }
  }
  function v811(a$$171, b$$107, c$$88, d$$82) {
    introspect(JAM.policy.p3) {
      return this.on(a$$171, b$$107, c$$88, d$$82, 1);
    }
  }
  function v810(a$$169, c$$87, d$$81, e$$97, g$$45) {
    function v809() {
      var v5726 = f$$4.event;
      introspect(JAM.policy.p3) {
        v5726.add(this, a$$169, e$$97, d$$81, c$$87);
      }
      return;
    }
    function v808(a$$170) {
      introspect(JAM.policy.p3) {
        var v5727 = f$$4()
      }
      introspect(JAM.policy.p3) {
        v5727.off(a$$170);
      }
      introspect(JAM.policy.p3) {
        return h$$46.apply(this, arguments);
      }
    }
    var h$$46;
    var i$$118;
    var v12672 = typeof a$$169;
    var v5730 = v12672 == "object";
    if (v5730) {
      var v12673 = typeof c$$87;
      var v5728 = v12673 != "string";
      if (v5728) {
        d$$81 = d$$81 || c$$87;
        c$$87 = b$$9;
      }
      for (i$$118 in a$$169) {
        var v5729 = a$$169[i$$118];
        introspect(JAM.policy.p3) {
          this.on(i$$118, c$$87, d$$81, v5729, g$$45);
        }
      }
      return this;
    }
    var v5731;
    var v18173 = d$$81 == null;
    if (v18173) {
      v18173 = e$$97 == null;
    }
    var v12675 = v18173;
    if (v12675) {
      e$$97 = c$$87;
      v5731 = d$$81 = c$$87 = b$$9;
    } else {
      var v12674 = e$$97 == null;
      if (v12674) {
        var v18174;
        var v25890 = typeof c$$87;
        var v23444 = v25890 == "string";
        if (v23444) {
          e$$97 = d$$81;
          v18174 = d$$81 = b$$9;
        } else {
          e$$97 = d$$81;
          d$$81 = c$$87;
          v18174 = c$$87 = b$$9;
        }
        v12674 = v18174;
      }
      v5731 = v12674;
    }
    v5731;
    var v12676 = !1;
    var v5733 = e$$97 === v12676;
    if (v5733) {
      e$$97 = J;
    } else {
      var v5732 = !e$$97;
      if (v5732) {
        return this;
      }
    }
    var v5734 = g$$45 === 1;
    if (v5734) {
      h$$46 = e$$97;
      e$$97 = v808;
      var v18175 = h$$46.guid;
      var v23445 = !v18175;
      if (v23445) {
        v18175 = h$$46.guid = f$$4.guid;
        var v25891 = f$$4.guid;
        f$$4.guid = v25891 + 1;
      }
      e$$97.guid = v18175;
    }
    introspect(JAM.policy.p3) {
      return this.each(v809);
    }
  }
  function v807(a$$167, b$$106) {
    function v806() {
      var v12677 = d$$80 = d$$80 - 1;
      var v5735 = v12677 === 0;
      if (v5735) {
        var v12678 = !0;
        introspect(JAM.policy.p3) {
          c$$5.removeEventListener(a$$167, e$$96, v12678);
        }
      }
      return;
    }
    function v805() {
      var v12679 = d$$80;
      d$$80 = d$$80 + 1;
      var v5736 = v12679 === 0;
      if (v5736) {
        var v12680 = !0;
        introspect(JAM.policy.p3) {
          c$$5.addEventListener(a$$167, e$$96, v12680);
        }
      }
      return;
    }
    function e$$96(a$$168) {
      var v5737 = f$$4.event;
      var v5738 = a$$168.target;
      var v12681 = f$$4.event;
      introspect(JAM.policy.p3) {
        var v5739 = v12681.fix(a$$168)
      }
      var v5740 = !0;
      introspect(JAM.policy.p3) {
        v5737.simulate(b$$106, v5738, v5739, v5740);
      }
      return;
    }
    var d$$80 = 0;
    var v12682 = f$$4.event;
    var v5741 = v12682.special;
    introspect(JAM.policy.p2) {
      v5741[b$$106] = {setup:v805, teardown:v806};
    }
    return;
  }
  function v804() {
    var v5742 = f$$4.event;
    introspect(JAM.policy.p3) {
      v5742.remove(this, "._change");
    }
    var v5743 = this.nodeName;
    introspect(JAM.policy.p3) {
      return z$$2.test(v5743);
    }
  }
  function v803(a$$166) {
    var b$$105 = a$$166.target;
    var v23446 = this !== b$$105;
    var v25892 = !v23446;
    if (v25892) {
      v23446 = a$$166.isSimulated;
    }
    var v18176 = v23446;
    var v23447 = !v18176;
    if (v23447) {
      v18176 = a$$166.isTrigger;
    }
    var v12683 = v18176;
    var v18178 = !v12683;
    if (v18178) {
      var v23448 = b$$105.type;
      var v18177 = v23448 !== "radio";
      if (v18177) {
        var v23449 = b$$105.type;
        v18177 = v23449 !== "checkbox";
      }
      v12683 = v18177;
    }
    var v5745 = v12683;
    if (v5745) {
      var v12684 = a$$166.handleObj;
      var v5744 = v12684.handler;
      introspect(JAM.policy.p3) {
        return v5744.apply(this, arguments);
      }
    }
    return;
  }
  function v802() {
    function v801(a$$164) {
      function v800(a$$165) {
        var v18179 = this.parentNode;
        if (v18179) {
          var v23450 = a$$165.isSimulated;
          v18179 = !v23450;
        }
        var v12685 = v18179;
        if (v12685) {
          var v18180 = a$$165.isTrigger;
          v12685 = !v18180;
        }
        var v5746 = v12685;
        if (v5746) {
          var v12686 = f$$4.event;
          var v12687 = this.parentNode;
          var v12688 = !0;
          introspect(JAM.policy.p3) {
            v12686.simulate("change", v12687, a$$165, v12688);
          }
        }
        return;
      }
      var b$$104 = a$$164.target;
      var v18181 = b$$104.nodeName;
      introspect(JAM.policy.p3) {
        var v12689 = z$$2.test(v18181)
      }
      if (v12689) {
        var v18182 = b$$104._change_attached;
        v12689 = !v18182;
      }
      var v5747 = v12689;
      if (v5747) {
        var v18183 = f$$4.event;
        introspect(JAM.policy.p3) {
          v18183.add(b$$104, "change._change", v800);
        }
        b$$104._change_attached = !0;
      }
      return;
    }
    function v799(a$$163) {
      var v12690 = this._just_changed;
      if (v12690) {
        var v18184 = a$$163.isTrigger;
        v12690 = !v18184;
      }
      var v5748 = v12690;
      if (v5748) {
        this._just_changed = !1;
        var v18185 = f$$4.event;
        var v18186 = !0;
        introspect(JAM.policy.p3) {
          v18185.simulate("change", this, a$$163, v18186);
        }
      }
      return;
    }
    function v798(a$$162) {
      var v18187 = a$$162.originalEvent;
      var v12691 = v18187.propertyName;
      var v5749 = v12691 === "checked";
      if (v5749) {
        this._just_changed = !0;
      }
      return;
    }
    var v12692 = this.nodeName;
    introspect(JAM.policy.p3) {
      var v5751 = z$$2.test(v12692)
    }
    if (v5751) {
      var v18188 = this.type;
      var v12693 = v18188 === "checkbox";
      var v18190 = !v12693;
      if (v18190) {
        var v18189 = this.type;
        v12693 = v18189 === "radio";
      }
      var v5750 = v12693;
      if (v5750) {
        var v12694 = f$$4.event;
        introspect(JAM.policy.p3) {
          v12694.add(this, "propertychange._change", v798);
        }
        var v12695 = f$$4.event;
        introspect(JAM.policy.p3) {
          v12695.add(this, "click._change", v799);
        }
      }
      return !1;
    }
    var v5752 = f$$4.event;
    introspect(JAM.policy.p3) {
      v5752.add(this, "beforeactivate._change", v801);
    }
    return;
  }
  function v797() {
    introspect(JAM.policy.p3) {
      var v5753 = f$$4.nodeName(this, "form")
    }
    if (v5753) {
      return !1;
    }
    var v5754 = f$$4.event;
    introspect(JAM.policy.p3) {
      v5754.remove(this, "._submit");
    }
    return;
  }
  function v796(a$$161) {
    var v5755 = a$$161._submit_bubble;
    if (v5755) {
      delete a$$161._submit_bubble;
      var v23451 = this.parentNode;
      if (v23451) {
        var v25893 = a$$161.isTrigger;
        v23451 = !v25893;
      }
      var v18191 = v23451;
      if (v18191) {
        var v23452 = f$$4.event;
        var v23453 = this.parentNode;
        var v23454 = !0;
        introspect(JAM.policy.p3) {
          v23452.simulate("submit", v23453, a$$161, v23454);
        }
      }
    }
    return;
  }
  function v795() {
    function v794(a$$159) {
      function v793(a$$160) {
        a$$160._submit_bubble = !0;
        return;
      }
      var c$$86 = a$$159.target;
      var v5756;
      introspect(JAM.policy.p3) {
        var v18192 = f$$4.nodeName(c$$86, "input")
      }
      var v23455 = !v18192;
      if (v23455) {
        introspect(JAM.policy.p3) {
          v18192 = f$$4.nodeName(c$$86, "button");
        }
      }
      var v12696 = v18192;
      if (v12696) {
        v5756 = c$$86.form;
      } else {
        v5756 = b$$9;
      }
      var d$$79 = v5756;
      var v12697 = d$$79;
      if (v12697) {
        var v18193 = d$$79._submit_attached;
        v12697 = !v18193;
      }
      var v5757 = v12697;
      if (v5757) {
        var v18194 = f$$4.event;
        introspect(JAM.policy.p3) {
          v18194.add(d$$79, "submit._submit", v793);
        }
        d$$79._submit_attached = !0;
      }
      return;
    }
    introspect(JAM.policy.p3) {
      var v5758 = f$$4.nodeName(this, "form")
    }
    if (v5758) {
      return !1;
    }
    var v5759 = f$$4.event;
    introspect(JAM.policy.p3) {
      v5759.add(this, "click._submit keypress._submit", v794);
    }
    return;
  }
  function v792(a$$157, b$$103) {
    function v791(a$$158) {
      var c$$85 = this;
      var d$$78 = a$$158.relatedTarget;
      var e$$95 = a$$158.handleObj;
      var g$$44 = e$$95.selector;
      var h$$45;
      var v12698 = !d$$78;
      var v18196 = !v12698;
      if (v18196) {
        var v18195 = d$$78 !== c$$85;
        if (v18195) {
          introspect(JAM.policy.p3) {
            var v23456 = f$$4.contains(c$$85, d$$78)
          }
          v18195 = !v23456;
        }
        v12698 = v18195;
      }
      var v5760 = v12698;
      if (v5760) {
        a$$158.type = e$$95.origType;
        var v18197 = e$$95.handler;
        introspect(JAM.policy.p3) {
          h$$45 = v18197.apply(this, arguments);
        }
        a$$158.type = b$$103;
      }
      return h$$45;
    }
    var v12699 = f$$4.event;
    var v5761 = v12699.special;
    introspect(JAM.policy.p2) {
      v5761[a$$157] = {delegateType:b$$103, bindType:b$$103, handle:v791};
    }
    return;
  }
  function v790() {
    this.isImmediatePropagationStopped = K;
    introspect(JAM.policy.p3) {
      this.stopPropagation();
    }
    return;
  }
  function v789() {
    this.isPropagationStopped = K;
    var a$$156 = this.originalEvent;
    var v5762 = !a$$156;
    var v12700 = !v5762;
    if (v12700) {
      var v18198 = a$$156.stopPropagation;
      if (v18198) {
        introspect(JAM.policy.p3) {
          a$$156.stopPropagation();
        }
      }
      a$$156.cancelBubble = !0;
    }
    return;
  }
  function v788() {
    this.isDefaultPrevented = K;
    var a$$155 = this.originalEvent;
    var v5763 = !a$$155;
    var v12702 = !v5763;
    if (v12702) {
      var v12701;
      var v18199 = a$$155.preventDefault;
      if (v18199) {
        introspect(JAM.policy.p3) {
          v12701 = a$$155.preventDefault();
        }
      } else {
        v12701 = a$$155.returnValue = !1;
      }
      v12701;
    }
    return;
  }
  function v787(a$$154, b$$102) {
    var v18200 = f$$4.Event;
    var v12703 = this instanceof v18200;
    var v5765 = !v12703;
    if (v5765) {
      var v5764 = f$$4.Event;
      return new v5764(a$$154, b$$102);
    }
    var v23457;
    var v27529 = a$$154;
    if (v27529) {
      v27529 = a$$154.type;
    }
    var v25894 = v27529;
    if (v25894) {
      this.originalEvent = a$$154;
      this.type = a$$154.type;
      var v27530;
      var v29669 = a$$154.defaultPrevented;
      var v29954 = !v29669;
      if (v29954) {
        var v29952 = a$$154.returnValue;
        var v29953 = !1;
        v29669 = v29952 === v29953;
      }
      var v29235 = v29669;
      var v29671 = !v29235;
      if (v29671) {
        var v29670 = a$$154.getPreventDefault;
        if (v29670) {
          introspect(JAM.policy.p3) {
            v29670 = a$$154.getPreventDefault();
          }
        }
        v29235 = v29670;
      }
      var v28566 = v29235;
      if (v28566) {
        v27530 = K;
      } else {
        v27530 = J;
      }
      v23457 = this.isDefaultPrevented = v27530;
    } else {
      v23457 = this.type = a$$154;
    }
    v23457;
    if (b$$102) {
      introspect(JAM.policy.p3) {
        f$$4.extend(this, b$$102);
      }
    }
    var v23458 = a$$154;
    if (v23458) {
      v23458 = a$$154.timeStamp;
    }
    var v18201 = v23458;
    var v23459 = !v18201;
    if (v23459) {
      introspect(JAM.policy.p3) {
        v18201 = f$$4.now();
      }
    }
    this.timeStamp = v18201;
    var v12704 = f$$4.expando;
    introspect(JAM.policy.p2) {
      this[v12704] = !0;
    }
    return;
  }
  function v786(a$$153, b$$101, c$$84) {
    var v5766 = a$$153.detachEvent;
    if (v5766) {
      var v12705 = "on" + b$$101;
      introspect(JAM.policy.p3) {
        a$$153.detachEvent(v12705, c$$84);
      }
    }
    return;
  }
  function v785(a$$152, b$$100, c$$83) {
    var v5767 = a$$152.removeEventListener;
    if (v5767) {
      var v12706 = !1;
      introspect(JAM.policy.p3) {
        a$$152.removeEventListener(b$$100, c$$83, v12706);
      }
    }
    return;
  }
  function v784(a$$151, b$$99, c$$82, d$$77) {
    var v12707 = f$$4.Event;
    var v5768 = new v12707;
    var v12708 = !0;
    var v5769 = {type:a$$151, isSimulated:v12708, originalEvent:{}};
    introspect(JAM.policy.p3) {
      var e$$94 = f$$4.extend(v5768, c$$82, v5769)
    }
    var v12709;
    if (d$$77) {
      var v18202 = f$$4.event;
      introspect(JAM.policy.p3) {
        v12709 = v18202.trigger(e$$94, null, b$$99);
      }
    } else {
      var v23460 = f$$4.event;
      var v18203 = v23460.dispatch;
      introspect(JAM.policy.p3) {
        v12709 = v18203.call(b$$99, e$$94);
      }
    }
    v12709;
    introspect(JAM.policy.p3) {
      var v12710 = e$$94.isDefaultPrevented()
    }
    if (v12710) {
      introspect(JAM.policy.p3) {
        c$$82.preventDefault();
      }
    }
    return;
  }
  function v783(a$$150, b$$98) {
    var v12711 = this.onbeforeunload;
    var v5770 = v12711 === b$$98;
    if (v5770) {
      this.onbeforeunload = null;
    }
    return;
  }
  function v782(a$$149, b$$97, c$$81) {
    introspect(JAM.policy.p3) {
      var v5771 = f$$4.isWindow(this)
    }
    if (v5771) {
      this.onbeforeunload = c$$81;
    }
    return;
  }
  function v781(a$$148) {
    var v12712 = f$$4.expando;
    var v5772 = a$$148[v12712];
    if (v5772) {
      return a$$148;
    }
    var d$$76;
    var e$$93;
    var g$$43 = a$$148;
    var v18204 = f$$4.event;
    var v12713 = v18204.fixHooks;
    var v12714 = a$$148.type;
    var v5773 = v12713[v12714];
    var v12715 = !v5773;
    if (v12715) {
      v5773 = {};
    }
    var h$$44 = v5773;
    var v5774;
    var v12718 = h$$44.props;
    if (v12718) {
      var v12716 = this.props;
      var v12717 = h$$44.props;
      introspect(JAM.policy.p3) {
        v5774 = v12716.concat(v12717);
      }
    } else {
      v5774 = this.props;
    }
    var i$$117 = v5774;
    introspect(JAM.policy.p3) {
      a$$148 = f$$4.Event(g$$43);
    }
    d$$76 = i$$117.length;
    for (;d$$76;) {
      var v12719 = d$$76 = d$$76 - 1;
      e$$93 = i$$117[v12719];
      introspect(JAM.policy.p2) {
        a$$148[e$$93] = g$$43[e$$93];
      }
    }
    var v18205 = a$$148.target;
    var v23462 = !v18205;
    if (v23462) {
      var v23461 = g$$43.srcElement;
      var v25895 = !v23461;
      if (v25895) {
        v23461 = c$$5;
      }
      a$$148.target = v23461;
    }
    var v25896 = a$$148.target;
    var v23463 = v25896.nodeType;
    var v18206 = v23463 === 3;
    if (v18206) {
      var v23464 = a$$148.target;
      a$$148.target = v23464.parentNode;
    }
    var v18207 = a$$148.metaKey;
    var v12720 = v18207 === b$$9;
    if (v12720) {
      a$$148.metaKey = a$$148.ctrlKey;
    }
    var v5775;
    var v12721 = h$$44.filter;
    if (v12721) {
      introspect(JAM.policy.p3) {
        v5775 = h$$44.filter(a$$148, g$$43);
      }
    } else {
      v5775 = a$$148;
    }
    return v5775;
  }
  function v780(a$$147, d$$75) {
    var e$$92;
    var f$$20;
    var g$$42;
    var h$$43 = d$$75.button;
    var i$$116 = d$$75.fromElement;
    var v25897 = a$$147.pageX;
    var v23465 = v25897 == null;
    if (v23465) {
      var v25898 = d$$75.clientX;
      v23465 = v25898 != null;
    }
    var v18208 = v23465;
    if (v18208) {
      var v29672 = a$$147.target;
      var v29236 = v29672.ownerDocument;
      var v29673 = !v29236;
      if (v29673) {
        v29236 = c$$5;
      }
      e$$92 = v29236;
      f$$20 = e$$92.documentElement;
      g$$42 = e$$92.body;
      var v28567 = d$$75.clientX;
      var v29955 = f$$20;
      if (v29955) {
        v29955 = f$$20.scrollLeft;
      }
      var v29674 = v29955;
      var v29957 = !v29674;
      if (v29957) {
        var v29956 = g$$42;
        if (v29956) {
          v29956 = g$$42.scrollLeft;
        }
        v29674 = v29956;
      }
      var v29237 = v29674;
      var v29675 = !v29237;
      if (v29675) {
        v29237 = 0;
      }
      var v28568 = v29237;
      var v27531 = v28567 + v28568;
      var v29676 = f$$20;
      if (v29676) {
        v29676 = f$$20.clientLeft;
      }
      var v29238 = v29676;
      var v29678 = !v29238;
      if (v29678) {
        var v29677 = g$$42;
        if (v29677) {
          v29677 = g$$42.clientLeft;
        }
        v29238 = v29677;
      }
      var v28569 = v29238;
      var v29239 = !v28569;
      if (v29239) {
        v28569 = 0;
      }
      var v27532 = v28569;
      a$$147.pageX = v27531 - v27532;
      var v27533 = d$$75.clientY;
      var v29679 = f$$20;
      if (v29679) {
        v29679 = f$$20.scrollTop;
      }
      var v29240 = v29679;
      var v29681 = !v29240;
      if (v29681) {
        var v29680 = g$$42;
        if (v29680) {
          v29680 = g$$42.scrollTop;
        }
        v29240 = v29680;
      }
      var v28570 = v29240;
      var v29241 = !v28570;
      if (v29241) {
        v28570 = 0;
      }
      var v27534 = v28570;
      var v25899 = v27533 + v27534;
      var v29242 = f$$20;
      if (v29242) {
        v29242 = f$$20.clientTop;
      }
      var v28571 = v29242;
      var v29244 = !v28571;
      if (v29244) {
        var v29243 = g$$42;
        if (v29243) {
          v29243 = g$$42.clientTop;
        }
        v28571 = v29243;
      }
      var v27535 = v28571;
      var v28572 = !v27535;
      if (v28572) {
        v27535 = 0;
      }
      var v25900 = v27535;
      a$$147.pageY = v25899 - v25900;
    }
    var v25901 = a$$147.relatedTarget;
    var v23466 = !v25901;
    if (v23466) {
      v23466 = i$$116;
    }
    var v18209 = v23466;
    if (v18209) {
      var v23467;
      var v27536 = a$$147.target;
      var v25902 = i$$116 === v27536;
      if (v25902) {
        v23467 = d$$75.toElement;
      } else {
        v23467 = i$$116;
      }
      a$$147.relatedTarget = v23467;
    }
    var v23468 = a$$147.which;
    var v18210 = !v23468;
    if (v18210) {
      v18210 = h$$43 !== b$$9;
    }
    var v12722 = v18210;
    if (v12722) {
      var v18211;
      var v23470 = h$$43 & 1;
      if (v23470) {
        v18211 = 1;
      } else {
        var v23469;
        var v25904 = h$$43 & 2;
        if (v25904) {
          v23469 = 3;
        } else {
          var v25903;
          var v27537 = h$$43 & 4;
          if (v27537) {
            v25903 = 2;
          } else {
            v25903 = 0;
          }
          v23469 = v25903;
        }
        v18211 = v23469;
      }
      a$$147.which = v18211;
    }
    return a$$147;
  }
  function v779(a$$146, b$$96) {
    var v12723 = a$$146.which;
    var v5776 = v12723 == null;
    if (v5776) {
      var v12724;
      var v23471 = b$$96.charCode;
      var v18212 = v23471 != null;
      if (v18212) {
        v12724 = b$$96.charCode;
      } else {
        v12724 = b$$96.keyCode;
      }
      a$$146.which = v12724;
    }
    return a$$146;
  }
  function v778(c$$80) {
    var v5777 = f$$4.event;
    var v12725 = c$$80;
    var v18213 = !v12725;
    if (v18213) {
      v12725 = a$$13.event;
    }
    var v5778 = v12725;
    introspect(JAM.policy.p3) {
      c$$80 = v5777.fix(v5778);
    }
    introspect(JAM.policy.p3) {
      var v18214 = f$$4._data(this, "events")
    }
    var v23472 = !v18214;
    if (v23472) {
      v18214 = {};
    }
    var v12726 = v18214;
    var v12727 = c$$80.type;
    var v5779 = v12726[v12727];
    var v12728 = !v5779;
    if (v12728) {
      v5779 = [];
    }
    var d$$74 = v5779;
    var e$$91 = d$$74.delegateCount;
    var v5780 = [].slice;
    introspect(JAM.policy.p3) {
      var g$$41 = v5780.call(arguments, 0)
    }
    var v12729 = c$$80.exclusive;
    var v5781 = !v12729;
    if (v5781) {
      var v12730 = c$$80.namespace;
      v5781 = !v12730;
    }
    var h$$42 = v5781;
    var v18215 = f$$4.event;
    var v12731 = v18215.special;
    var v12732 = c$$80.type;
    var v5782 = v12731[v12732];
    var v12733 = !v5782;
    if (v12733) {
      v5782 = {};
    }
    var i$$115 = v5782;
    var j$$40 = [];
    var k$$21;
    var l$$36;
    var m$$18;
    var n$$67;
    var o$$9;
    var p$$30;
    var q$$7;
    var r$$9;
    var s$$21;
    var t$$5;
    var u$$4;
    g$$41[0] = c$$80;
    c$$80.delegateTarget = this;
    var v18216 = i$$115.preDispatch;
    var v12734 = !v18216;
    var v18219 = !v12734;
    if (v18219) {
      var v23473 = i$$115.preDispatch;
      introspect(JAM.policy.p3) {
        var v18217 = v23473.call(this, c$$80)
      }
      var v18218 = !1;
      v12734 = v18217 !== v18218;
    }
    var v5798 = v12734;
    if (v5798) {
      var v12735 = e$$91;
      if (v12735) {
        var v23474 = c$$80.button;
        var v18220 = !v23474;
        var v23476 = !v18220;
        if (v23476) {
          var v23475 = c$$80.type;
          v18220 = v23475 !== "click";
        }
        v12735 = v18220;
      }
      var v5791 = v12735;
      if (v5791) {
        introspect(JAM.policy.p3) {
          n$$67 = f$$4(this);
        }
        var v12736 = this.ownerDocument;
        var v18221 = !v12736;
        if (v18221) {
          v12736 = this;
        }
        n$$67.context = v12736;
        m$$18 = c$$80.target;
        var v5790 = m$$18 != this;
        for (;v5790;) {
          var v12737 = m$$18.disabled;
          var v12738 = !0;
          var v5789 = v12737 !== v12738;
          if (v5789) {
            p$$30 = {};
            r$$9 = [];
            n$$67[0] = m$$18;
            k$$21 = 0;
            var v5787 = k$$21 < e$$91;
            for (;v5787;) {
              s$$21 = d$$74[k$$21];
              var JSCompiler_temp_const$$4 = t$$5 = s$$21.selector;
              var JSCompiler_temp$$5;
              var v12739 = p$$30[t$$5];
              var v5786 = JSCompiler_temp$$5 = v12739 === b$$9;
              if (v5786) {
                var JSCompiler_temp_const$$7 = p$$30;
                var JSCompiler_temp_const$$6 = t$$5;
                var JSCompiler_temp$$8;
                var v5785 = s$$21.quick;
                if (v5785) {
                  var b$$inline_26 = s$$21.quick;
                  var v5783 = m$$18.attributes;
                  var v12740 = !v5783;
                  if (v12740) {
                    v5783 = {};
                  }
                  var c$$inline_27 = v5783;
                  var v23477 = b$$inline_26[1];
                  var v18222 = !v23477;
                  var v23480 = !v18222;
                  if (v23480) {
                    var v25905 = m$$18.nodeName;
                    introspect(JAM.policy.p3) {
                      var v23478 = v25905.toLowerCase()
                    }
                    var v23479 = b$$inline_26[1];
                    v18222 = v23478 === v23479;
                  }
                  var v12741 = v18222;
                  if (v12741) {
                    var v23481 = b$$inline_26[2];
                    var v18223 = !v23481;
                    var v23484 = !v18223;
                    if (v23484) {
                      var v27538 = c$$inline_27.id;
                      var v28573 = !v27538;
                      if (v28573) {
                        v27538 = {};
                      }
                      var v25906 = v27538;
                      var v23482 = v25906.value;
                      var v23483 = b$$inline_26[2];
                      v18223 = v23482 === v23483;
                    }
                    v12741 = v18223;
                  }
                  var v5784 = v12741;
                  if (v5784) {
                    var v18224 = b$$inline_26[3];
                    var v12742 = !v18224;
                    var v18227 = !v12742;
                    if (v18227) {
                      var v18225 = b$$inline_26[3];
                      var v25907 = c$$inline_27["class"];
                      var v27539 = !v25907;
                      if (v27539) {
                        v25907 = {};
                      }
                      var v23485 = v25907;
                      var v18226 = v23485.value;
                      introspect(JAM.policy.p3) {
                        v12742 = v18225.test(v18226);
                      }
                    }
                    v5784 = v12742;
                  }
                  JSCompiler_temp$$8 = v5784;
                } else {
                  introspect(JAM.policy.p3) {
                    JSCompiler_temp$$8 = n$$67.is(t$$5);
                  }
                }
                introspect(JAM.policy.p2) {
                  JSCompiler_temp$$5 = JSCompiler_temp_const$$7[JSCompiler_temp_const$$6] = JSCompiler_temp$$8;
                }
              }
              JSCompiler_temp_const$$4;
              JSCompiler_temp$$5;
              var v12743 = p$$30[t$$5];
              if (v12743) {
                introspect(JAM.policy.p3) {
                  r$$9.push(s$$21);
                }
              }
              k$$21++;
              v5787 = k$$21 < e$$91;
            }
            var v5788 = r$$9.length;
            if (v5788) {
              var v12744 = {elem:m$$18, matches:r$$9};
              introspect(JAM.policy.p3) {
                j$$40.push(v12744);
              }
            }
          }
          var v12745 = m$$18.parentNode;
          var v18228 = !v12745;
          if (v18228) {
            v12745 = this;
          }
          m$$18 = v12745;
          v5790 = m$$18 != this;
        }
      }
      var v12746 = d$$74.length;
      var v5792 = v12746 > e$$91;
      if (v5792) {
        introspect(JAM.policy.p3) {
          var v18229 = d$$74.slice(e$$91)
        }
        var v12747 = {elem:this, matches:v18229};
        introspect(JAM.policy.p3) {
          j$$40.push(v12747);
        }
      }
      k$$21 = 0;
      var v18230 = j$$40.length;
      var v12748 = k$$21 < v18230;
      if (v12748) {
        introspect(JAM.policy.p3) {
          var v18231 = c$$80.isPropagationStopped()
        }
        v12748 = !v18231;
      }
      var v5796 = v12748;
      for (;v5796;) {
        q$$7 = j$$40[k$$21];
        c$$80.currentTarget = q$$7.elem;
        l$$36 = 0;
        var v23486 = q$$7.matches;
        var v18232 = v23486.length;
        var v12749 = l$$36 < v18232;
        if (v12749) {
          introspect(JAM.policy.p3) {
            var v18233 = c$$80.isImmediatePropagationStopped()
          }
          v12749 = !v18233;
        }
        var v5795 = v12749;
        for (;v5795;) {
          var v5793 = q$$7.matches;
          s$$21 = v5793[l$$36];
          var v18234 = h$$42;
          var v23488 = !v18234;
          if (v23488) {
            var v25908 = c$$80.namespace;
            var v23487 = !v25908;
            if (v23487) {
              var v25909 = s$$21.namespace;
              v23487 = !v25909;
            }
            v18234 = v23487;
          }
          var v12750 = v18234;
          var v18236 = !v12750;
          if (v18236) {
            var v18235 = c$$80.namespace_re;
            if (v18235) {
              var v23489 = c$$80.namespace_re;
              var v23490 = s$$21.namespace;
              introspect(JAM.policy.p3) {
                v18235 = v23489.test(v23490);
              }
            }
            v12750 = v18235;
          }
          var v5794 = v12750;
          if (v5794) {
            c$$80.data = s$$21.data;
            c$$80.handleObj = s$$21;
            var v29245 = f$$4.event;
            var v28574 = v29245.special;
            var v28575 = s$$21.origType;
            var v27540 = v28574[v28575];
            var v28576 = !v27540;
            if (v28576) {
              v27540 = {};
            }
            var v25910 = v27540;
            var v23491 = v25910.handle;
            var v25911 = !v23491;
            if (v25911) {
              v23491 = s$$21.handler;
            }
            var v18237 = v23491;
            var v18238 = q$$7.elem;
            introspect(JAM.policy.p3) {
              o$$9 = v18237.apply(v18238, g$$41);
            }
            var v12751 = o$$9 !== b$$9;
            if (v12751) {
              c$$80.result = o$$9;
              var v25912 = !1;
              var v23492 = o$$9 === v25912;
              if (v23492) {
                introspect(JAM.policy.p3) {
                  c$$80.preventDefault();
                }
                introspect(JAM.policy.p3) {
                  c$$80.stopPropagation();
                }
              }
            }
          }
          l$$36++;
          var v23493 = q$$7.matches;
          var v18239 = v23493.length;
          var v12752 = l$$36 < v18239;
          if (v12752) {
            introspect(JAM.policy.p3) {
              var v18240 = c$$80.isImmediatePropagationStopped()
            }
            v12752 = !v18240;
          }
          v5795 = v12752;
        }
        k$$21++;
        var v18241 = j$$40.length;
        var v12753 = k$$21 < v18241;
        if (v12753) {
          introspect(JAM.policy.p3) {
            var v18242 = c$$80.isPropagationStopped()
          }
          v12753 = !v18242;
        }
        v5796 = v12753;
      }
      var v5797 = i$$115.postDispatch;
      if (v5797) {
        var v12754 = i$$115.postDispatch;
        introspect(JAM.policy.p3) {
          v12754.call(this, c$$80);
        }
      }
      return c$$80.result;
    }
    return;
  }
  function v777(c$$79, d$$73, e$$90, g$$40) {
    var v12755 = !e$$90;
    var v18244 = !v12755;
    if (v18244) {
      var v23494 = e$$90.nodeType;
      var v18243 = v23494 !== 3;
      if (v18243) {
        var v23495 = e$$90.nodeType;
        v18243 = v23495 !== 8;
      }
      v12755 = v18243;
    }
    var v5809 = v12755;
    if (v5809) {
      var v5799 = c$$79.type;
      var v12756 = !v5799;
      if (v12756) {
        v5799 = c$$79;
      }
      var h$$41 = v5799;
      var i$$114 = [];
      var j$$39;
      var k$$20;
      var l$$35;
      var m$$17;
      var n$$66;
      var o$$8;
      var p$$29;
      var q$$6;
      var r$$8;
      var s$$20;
      var v23496 = f$$4.event;
      var v18245 = v23496.triggered;
      var v12757 = h$$41 + v18245;
      introspect(JAM.policy.p3) {
        var v5800 = E.test(v12757)
      }
      if (v5800) {
        return;
      }
      introspect(JAM.policy.p3) {
        var v18246 = h$$41.indexOf("!")
      }
      var v12758 = v18246 >= 0;
      if (v12758) {
        introspect(JAM.policy.p3) {
          h$$41 = h$$41.slice(0, -1);
        }
        k$$20 = !0;
      }
      introspect(JAM.policy.p3) {
        var v18247 = h$$41.indexOf(".")
      }
      var v12759 = v18247 >= 0;
      if (v12759) {
        introspect(JAM.policy.p3) {
          i$$114 = h$$41.split(".");
        }
        introspect(JAM.policy.p3) {
          h$$41 = i$$114.shift();
        }
        introspect(JAM.policy.p3) {
          i$$114.sort();
        }
      }
      var v18248 = !e$$90;
      var v23498 = !v18248;
      if (v23498) {
        var v25913 = f$$4.event;
        var v23497 = v25913.customEvent;
        v18248 = v23497[h$$41];
      }
      var v12760 = v18248;
      if (v12760) {
        var v25914 = f$$4.event;
        var v23499 = v25914.global;
        var v18249 = v23499[h$$41];
        v12760 = !v18249;
      }
      var v5801 = v12760;
      if (v5801) {
        return;
      }
      var v28577;
      var v29682 = typeof c$$79;
      var v29248 = v29682 == "object";
      if (v29248) {
        var v29246;
        var v29958 = f$$4.expando;
        var v29684 = c$$79[v29958];
        if (v29684) {
          v29246 = c$$79;
        } else {
          var v29683 = f$$4.Event;
          v29246 = new v29683(h$$41, c$$79);
        }
        v28577 = v29246;
      } else {
        var v29247 = f$$4.Event;
        v28577 = new v29247(h$$41);
      }
      c$$79 = v28577;
      c$$79.type = h$$41;
      c$$79.isTrigger = !0;
      c$$79.exclusive = k$$20;
      introspect(JAM.policy.p3) {
        var v31131 = i$$114.join(".")
      }
      c$$79.namespace = v31131;
      var v18250;
      var v23501 = c$$79.namespace;
      if (v23501) {
        introspect(JAM.policy.p3) {
          var v27541 = i$$114.join("\\.(?:.*\\.)?")
        }
        var v25915 = "(^|\\.)" + v27541;
        var v23500 = v25915 + "(\\.|$)";
        v18250 = new RegExp(v23500);
      } else {
        v18250 = null;
      }
      c$$79.namespace_re = v18250;
      var v12761;
      introspect(JAM.policy.p3) {
        var v23502 = h$$41.indexOf(":")
      }
      var v18251 = v23502 < 0;
      if (v18251) {
        v12761 = "on" + h$$41;
      } else {
        v12761 = "";
      }
      o$$8 = v12761;
      var v5803 = !e$$90;
      if (v5803) {
        j$$39 = f$$4.cache;
        for (l$$35 in j$$39) {
          var v18252 = j$$39[l$$35];
          var v12762 = v18252.events;
          if (v12762) {
            var v23503 = j$$39[l$$35];
            var v18253 = v23503.events;
            v12762 = v18253[h$$41];
          }
          var v5802 = v12762;
          if (v5802) {
            var v12763 = f$$4.event;
            var v23504 = j$$39[l$$35];
            var v18254 = v23504.handle;
            var v12764 = v18254.elem;
            var v12765 = !0;
            introspect(JAM.policy.p3) {
              v12763.trigger(c$$79, d$$73, v12764, v12765);
            }
          }
        }
        return;
      }
      c$$79.result = b$$9;
      var v25916 = c$$79.target;
      var v27542 = !v25916;
      if (v27542) {
        c$$79.target = e$$90;
      }
      var v23505;
      var v25917 = d$$73 != null;
      if (v25917) {
        introspect(JAM.policy.p3) {
          v23505 = f$$4.makeArray(d$$73);
        }
      } else {
        v23505 = [];
      }
      d$$73 = v23505;
      introspect(JAM.policy.p3) {
        d$$73.unshift(c$$79);
      }
      var v23506 = f$$4.event;
      var v18255 = v23506.special;
      var v12766 = v18255[h$$41];
      var v18256 = !v12766;
      if (v18256) {
        v12766 = {};
      }
      p$$29 = v12766;
      var v12767 = p$$29.trigger;
      if (v12767) {
        var v23507 = p$$29.trigger;
        introspect(JAM.policy.p3) {
          var v18257 = v23507.apply(e$$90, d$$73)
        }
        var v18258 = !1;
        v12767 = v18257 === v18258;
      }
      var v5804 = v12767;
      if (v5804) {
        return;
      }
      var v18259 = p$$29.bindType;
      var v23508 = !v18259;
      if (v23508) {
        v18259 = h$$41;
      }
      var v12768 = v18259;
      var v5805 = [e$$90, v12768];
      r$$8 = [v5805];
      var v18260 = !g$$40;
      if (v18260) {
        var v23509 = p$$29.noBubble;
        v18260 = !v23509;
      }
      var v12769 = v18260;
      if (v12769) {
        introspect(JAM.policy.p3) {
          var v18261 = f$$4.isWindow(e$$90)
        }
        v12769 = !v18261;
      }
      var v5807 = v12769;
      if (v5807) {
        var v18262 = p$$29.delegateType;
        var v23510 = !v18262;
        if (v23510) {
          v18262 = h$$41;
        }
        s$$20 = v18262;
        var v18263;
        var v25918 = s$$20 + h$$41;
        introspect(JAM.policy.p3) {
          var v23511 = E.test(v25918)
        }
        if (v23511) {
          v18263 = e$$90;
        } else {
          v18263 = e$$90.parentNode;
        }
        m$$17 = v18263;
        n$$66 = null;
        for (;m$$17;) {
          var v12770 = [m$$17, s$$20];
          introspect(JAM.policy.p3) {
            r$$8.push(v12770);
          }
          n$$66 = m$$17;
          m$$17 = m$$17.parentNode;
        }
        var v12771 = n$$66;
        if (v12771) {
          var v18264 = e$$90.ownerDocument;
          v12771 = n$$66 === v18264;
        }
        var v5806 = v12771;
        if (v5806) {
          var v25919 = n$$66.defaultView;
          var v27543 = !v25919;
          if (v27543) {
            v25919 = n$$66.parentWindow;
          }
          var v23512 = v25919;
          var v25920 = !v23512;
          if (v25920) {
            v23512 = a$$13;
          }
          var v18265 = v23512;
          var v12772 = [v18265, s$$20];
          introspect(JAM.policy.p3) {
            r$$8.push(v12772);
          }
        }
      }
      l$$35 = 0;
      var v18266 = r$$8.length;
      var v12773 = l$$35 < v18266;
      if (v12773) {
        introspect(JAM.policy.p3) {
          var v18267 = c$$79.isPropagationStopped()
        }
        v12773 = !v18267;
      }
      var v5808 = v12773;
      for (;v5808;) {
        var v27544 = r$$8[l$$35];
        m$$17 = v27544[0];
        var v27545 = r$$8[l$$35];
        c$$79.type = v27545[1];
        introspect(JAM.policy.p3) {
          var v28578 = f$$4._data(m$$17, "events")
        }
        var v29249 = !v28578;
        if (v29249) {
          v28578 = {};
        }
        var v27546 = v28578;
        var v27547 = c$$79.type;
        var v25921 = v27546[v27547];
        if (v25921) {
          introspect(JAM.policy.p3) {
            v25921 = f$$4._data(m$$17, "handle");
          }
        }
        q$$6 = v25921;
        if (q$$6) {
          introspect(JAM.policy.p3) {
            q$$6.apply(m$$17, d$$73);
          }
        }
        var v18268 = o$$8;
        if (v18268) {
          v18268 = m$$17[o$$8];
        }
        q$$6 = v18268;
        var v23513 = q$$6;
        if (v23513) {
          introspect(JAM.policy.p3) {
            v23513 = f$$4.acceptData(m$$17);
          }
        }
        var v18269 = v23513;
        if (v18269) {
          introspect(JAM.policy.p3) {
            var v23514 = q$$6.apply(m$$17, d$$73)
          }
          var v23515 = !1;
          v18269 = v23514 === v23515;
        }
        var v12774 = v18269;
        if (v12774) {
          introspect(JAM.policy.p3) {
            c$$79.preventDefault();
          }
        }
        l$$35++;
        var v18270 = r$$8.length;
        var v12775 = l$$35 < v18270;
        if (v12775) {
          introspect(JAM.policy.p3) {
            var v18271 = c$$79.isPropagationStopped()
          }
          v12775 = !v18271;
        }
        v5808 = v12775;
      }
      c$$79.type = h$$41;
      var v29959 = !g$$40;
      if (v29959) {
        introspect(JAM.policy.p3) {
          var v30194 = c$$79.isDefaultPrevented()
        }
        v29959 = !v30194;
      }
      var v29685 = v29959;
      if (v29685) {
        var v30195 = p$$29._default;
        var v29960 = !v30195;
        var v30198 = !v29960;
        if (v30198) {
          var v30370 = p$$29._default;
          var v30371 = e$$90.ownerDocument;
          introspect(JAM.policy.p3) {
            var v30196 = v30370.apply(v30371, d$$73)
          }
          var v30197 = !1;
          v29960 = v30196 === v30197;
        }
        v29685 = v29960;
      }
      var v29250 = v29685;
      if (v29250) {
        var v29686 = h$$41 !== "click";
        var v29962 = !v29686;
        if (v29962) {
          introspect(JAM.policy.p3) {
            var v29961 = f$$4.nodeName(e$$90, "a")
          }
          v29686 = !v29961;
        }
        v29250 = v29686;
      }
      var v28579 = v29250;
      if (v28579) {
        introspect(JAM.policy.p3) {
          v28579 = f$$4.acceptData(e$$90);
        }
      }
      var v27548 = v28579;
      if (v27548) {
        v27548 = o$$8;
      }
      var v25922 = v27548;
      if (v25922) {
        v25922 = e$$90[h$$41];
      }
      var v23516 = v25922;
      if (v23516) {
        var v27549 = h$$41 !== "focus";
        if (v27549) {
          v27549 = h$$41 !== "blur";
        }
        var v25923 = v27549;
        var v27551 = !v25923;
        if (v27551) {
          var v28580 = c$$79.target;
          var v27550 = v28580.offsetWidth;
          v25923 = v27550 !== 0;
        }
        v23516 = v25923;
      }
      var v18272 = v23516;
      if (v18272) {
        introspect(JAM.policy.p3) {
          var v23517 = f$$4.isWindow(e$$90)
        }
        v18272 = !v23517;
      }
      var v12776 = v18272;
      if (v12776) {
        n$$66 = e$$90[o$$8];
        if (n$$66) {
          introspect(JAM.policy.p2) {
            e$$90[o$$8] = null;
          }
        }
        var v28581 = f$$4.event;
        v28581.triggered = h$$41;
        introspect(JAM.policy.p3) {
          e$$90[h$$41]();
        }
        var v25924 = f$$4.event;
        v25924.triggered = b$$9;
        if (n$$66) {
          introspect(JAM.policy.p2) {
            e$$90[o$$8] = n$$66;
          }
        }
      }
      return c$$79.result;
    }
    return;
  }
  function v776(a$$145, b$$95, c$$78, d$$72, e$$89) {
    introspect(JAM.policy.p3) {
      var v5810 = f$$4.hasData(a$$145)
    }
    if (v5810) {
      introspect(JAM.policy.p3) {
        v5810 = f$$4._data(a$$145);
      }
    }
    var g$$39 = v5810;
    var h$$40;
    var i$$113;
    var j$$38;
    var k$$19;
    var l$$34;
    var m$$16;
    var n$$65;
    var o$$7;
    var p$$28;
    var q$$5;
    var r$$7;
    var s$$19;
    var v18273 = !g$$39;
    var v12777 = !v18273;
    if (v12777) {
      var v23518 = o$$7 = g$$39.events;
      var v18274 = !v23518;
      v12777 = !v18274;
    }
    var v5820 = v12777;
    if (v5820) {
      var v18275 = b$$95 || "";
      var v12778 = I(v18275);
      introspect(JAM.policy.p3) {
        var v5811 = f$$4.trim(v12778)
      }
      introspect(JAM.policy.p3) {
        b$$95 = v5811.split(" ");
      }
      h$$40 = 0;
      var v12779 = b$$95.length;
      var v5818 = h$$40 < v12779;
      for (;v5818;) {
        var v23519 = b$$95[h$$40];
        introspect(JAM.policy.p3) {
          var v18276 = A.exec(v23519)
        }
        var v23520 = !v18276;
        if (v23520) {
          v18276 = [];
        }
        i$$113 = v18276;
        j$$38 = k$$19 = i$$113[1];
        l$$34 = i$$113[2];
        var v5815 = !j$$38;
        if (v5815) {
          for (j$$38 in o$$7) {
            var v5812 = f$$4.event;
            var v12780 = b$$95[h$$40];
            var v5813 = j$$38 + v12780;
            var v5814 = !0;
            introspect(JAM.policy.p3) {
              v5812.remove(a$$145, v5813, c$$78, d$$72, v5814);
            }
          }
          h$$40++;
          var v12781 = b$$95.length;
          v5818 = h$$40 < v12781;
          continue;
        }
        var v28582 = f$$4.event;
        var v27552 = v28582.special;
        var v25925 = v27552[j$$38];
        var v27553 = !v25925;
        if (v27553) {
          v25925 = {};
        }
        p$$28 = v25925;
        var v27554;
        if (d$$72) {
          v27554 = p$$28.delegateType;
        } else {
          v27554 = p$$28.bindType;
        }
        var v25926 = v27554;
        var v27555 = !v25926;
        if (v27555) {
          v25926 = j$$38;
        }
        j$$38 = v25926;
        var v23521 = o$$7[j$$38];
        var v25927 = !v23521;
        if (v25927) {
          v23521 = [];
        }
        r$$7 = v23521;
        m$$16 = r$$7.length;
        var v12782;
        if (l$$34) {
          introspect(JAM.policy.p3) {
            var v28583 = l$$34.split(".")
          }
          introspect(JAM.policy.p3) {
            var v27556 = v28583.sort()
          }
          introspect(JAM.policy.p3) {
            var v25928 = v27556.join("\\.(?:.*\\.)?")
          }
          var v23522 = "(^|\\.)" + v25928;
          var v18277 = v23522 + "(\\.|$)";
          v12782 = new RegExp(v18277);
        } else {
          v12782 = null;
        }
        l$$34 = v12782;
        n$$65 = 0;
        var v12783 = r$$7.length;
        var v5816 = n$$65 < v12783;
        for (;v5816;) {
          s$$19 = r$$7[n$$65];
          var v27557 = e$$89;
          var v28585 = !v27557;
          if (v28585) {
            var v28584 = s$$19.origType;
            v27557 = k$$19 === v28584;
          }
          var v25929 = v27557;
          if (v25929) {
            var v27558 = !c$$78;
            var v28588 = !v27558;
            if (v28588) {
              var v28586 = c$$78.guid;
              var v28587 = s$$19.guid;
              v27558 = v28586 === v28587;
            }
            v25929 = v27558;
          }
          var v23523 = v25929;
          if (v23523) {
            var v25930 = !l$$34;
            var v27560 = !v25930;
            if (v27560) {
              var v27559 = s$$19.namespace;
              introspect(JAM.policy.p3) {
                v25930 = l$$34.test(v27559);
              }
            }
            v23523 = v25930;
          }
          var v18278 = v23523;
          if (v18278) {
            var v25931 = !d$$72;
            var v27562 = !v25931;
            if (v27562) {
              var v27561 = s$$19.selector;
              v25931 = d$$72 === v27561;
            }
            var v23524 = v25931;
            var v25933 = !v23524;
            if (v25933) {
              var v25932 = d$$72 === "**";
              if (v25932) {
                v25932 = s$$19.selector;
              }
              v23524 = v25932;
            }
            v18278 = v23524;
          }
          var v12784 = v18278;
          if (v12784) {
            var v25934 = n$$65;
            n$$65 = n$$65 - 1;
            introspect(JAM.policy.p3) {
              r$$7.splice(v25934, 1);
            }
            var v25935 = s$$19.selector;
            if (v25935) {
              r$$7.delegateCount--;
            }
            var v23525 = p$$28.remove;
            if (v23525) {
              var v25936 = p$$28.remove;
              introspect(JAM.policy.p3) {
                v25936.call(a$$145, s$$19);
              }
            }
          }
          n$$65++;
          var v12785 = r$$7.length;
          v5816 = n$$65 < v12785;
        }
        var v18279 = r$$7.length;
        var v12786 = v18279 === 0;
        if (v12786) {
          var v18280 = r$$7.length;
          v12786 = m$$16 !== v18280;
        }
        var v5817 = v12786;
        if (v5817) {
          var v25937 = p$$28.teardown;
          var v23526 = !v25937;
          var v25940 = !v23526;
          if (v25940) {
            var v27563 = p$$28.teardown;
            introspect(JAM.policy.p3) {
              var v25938 = v27563.call(a$$145, l$$34)
            }
            var v25939 = !1;
            v23526 = v25938 === v25939;
          }
          var v18281 = v23526;
          if (v18281) {
            var v23527 = g$$39.handle;
            introspect(JAM.policy.p3) {
              f$$4.removeEvent(a$$145, j$$38, v23527);
            }
          }
          delete o$$7[j$$38];
        }
        h$$40++;
        var v12787 = b$$95.length;
        v5818 = h$$40 < v12787;
      }
      introspect(JAM.policy.p3) {
        var v5819 = f$$4.isEmptyObject(o$$7)
      }
      if (v5819) {
        q$$5 = g$$39.handle;
        if (q$$5) {
          q$$5.elem = null;
        }
        var v18282 = ["events", "handle"];
        var v18283 = !0;
        introspect(JAM.policy.p3) {
          f$$4.removeData(a$$145, v18282, v18283);
        }
      }
    }
    return;
  }
  function v775(a$$143, c$$77, d$$71, e$$88, g$$38) {
    function v774(a$$144) {
      var v5821;
      var v23528 = typeof f$$4;
      var v18284 = v23528 != "undefined";
      if (v18284) {
        var v23529 = !a$$144;
        var v25943 = !v23529;
        if (v25943) {
          var v27564 = f$$4.event;
          var v25941 = v27564.triggered;
          var v25942 = a$$144.type;
          v23529 = v25941 !== v25942;
        }
        v18284 = v23529;
      }
      var v12790 = v18284;
      if (v12790) {
        var v18285 = f$$4.event;
        var v12788 = v18285.dispatch;
        var v12789 = i$$112.elem;
        introspect(JAM.policy.p3) {
          v5821 = v12788.apply(v12789, arguments);
        }
      } else {
        v5821 = b$$9;
      }
      return v5821;
    }
    var h$$39;
    var i$$112;
    var j$$37;
    var k$$18;
    var l$$33;
    var m$$15;
    var n$$64;
    var o$$6;
    var p$$27;
    var q$$4;
    var r$$6;
    var s$$18;
    var v28589 = a$$143.nodeType;
    var v27565 = v28589 === 3;
    var v28591 = !v27565;
    if (v28591) {
      var v28590 = a$$143.nodeType;
      v27565 = v28590 === 8;
    }
    var v25944 = v27565;
    var v27566 = !v25944;
    if (v27566) {
      v25944 = !c$$77;
    }
    var v23530 = v25944;
    var v25945 = !v23530;
    if (v25945) {
      v23530 = !d$$71;
    }
    var v18286 = v23530;
    var v23532 = !v18286;
    if (v23532) {
      introspect(JAM.policy.p3) {
        var v23531 = h$$39 = f$$4._data(a$$143)
      }
      v18286 = !v23531;
    }
    var v12791 = v18286;
    var v5826 = !v12791;
    if (v5826) {
      var v28592 = d$$71.handler;
      if (v28592) {
        p$$27 = d$$71;
        d$$71 = p$$27.handler;
        g$$38 = p$$27.selector;
      }
      var v28593 = d$$71.guid;
      var v29251 = !v28593;
      if (v29251) {
        d$$71.guid = f$$4.guid;
        var v29687 = f$$4.guid;
        f$$4.guid = v29687 + 1;
      }
      j$$37 = h$$39.events;
      var v27567 = !j$$37;
      if (v27567) {
        h$$39.events = j$$37 = {};
      }
      i$$112 = h$$39.handle;
      var v23533 = !i$$112;
      if (v23533) {
        h$$39.handle = i$$112 = v774;
        i$$112.elem = a$$143;
      }
      var v18287 = I(c$$77);
      introspect(JAM.policy.p3) {
        var v12792 = f$$4.trim(v18287)
      }
      introspect(JAM.policy.p3) {
        c$$77 = v12792.split(" ");
      }
      k$$18 = 0;
      var v12793 = c$$77.length;
      var v5825 = k$$18 < v12793;
      for (;v5825;) {
        var v29688 = c$$77[k$$18];
        introspect(JAM.policy.p3) {
          var v29252 = A.exec(v29688)
        }
        var v29689 = !v29252;
        if (v29689) {
          v29252 = [];
        }
        l$$33 = v29252;
        m$$15 = l$$33[1];
        var v29690 = l$$33[2];
        var v29963 = !v29690;
        if (v29963) {
          v29690 = "";
        }
        var v29253 = v29690;
        introspect(JAM.policy.p3) {
          var v28594 = v29253.split(".")
        }
        introspect(JAM.policy.p3) {
          n$$64 = v28594.sort();
        }
        var v29254 = f$$4.event;
        var v28595 = v29254.special;
        var v27568 = v28595[m$$15];
        var v28596 = !v27568;
        if (v28596) {
          v27568 = {};
        }
        s$$18 = v27568;
        var v27569;
        if (g$$38) {
          v27569 = s$$18.delegateType;
        } else {
          v27569 = s$$18.bindType;
        }
        var v25946 = v27569;
        var v27570 = !v25946;
        if (v27570) {
          v25946 = m$$15;
        }
        m$$15 = v25946;
        var v27571 = f$$4.event;
        var v25947 = v27571.special;
        var v23534 = v25947[m$$15];
        var v25948 = !v23534;
        if (v25948) {
          v23534 = {};
        }
        s$$18 = v23534;
        var v23535 = l$$33[1];
        var v23536 = d$$71.guid;
        var v25949 = g$$38;
        if (v25949) {
          v25949 = G(g$$38);
        }
        var v23537 = v25949;
        introspect(JAM.policy.p3) {
          var v23538 = n$$64.join(".")
        }
        var v18288 = {type:m$$15, origType:v23535, data:e$$88, handler:d$$71, guid:v23536, selector:g$$38, quick:v23537, namespace:v23538};
        introspect(JAM.policy.p3) {
          o$$6 = f$$4.extend(v18288, p$$27);
        }
        r$$6 = j$$37[m$$15];
        var v5824 = !r$$6;
        if (v5824) {
          introspect(JAM.policy.p2) {
            r$$6 = j$$37[m$$15] = [];
          }
          r$$6.delegateCount = 0;
          var v18289 = s$$18.setup;
          var v12794 = !v18289;
          var v18292 = !v12794;
          if (v18292) {
            var v23539 = s$$18.setup;
            introspect(JAM.policy.p3) {
              var v18290 = v23539.call(a$$143, e$$88, n$$64, i$$112)
            }
            var v18291 = !1;
            v12794 = v18290 === v18291;
          }
          var v5823 = v12794;
          if (v5823) {
            var v5822;
            var v12797 = a$$143.addEventListener;
            if (v12797) {
              var v12795 = !1;
              introspect(JAM.policy.p3) {
                v5822 = a$$143.addEventListener(m$$15, i$$112, v12795);
              }
            } else {
              var v12796 = a$$143.attachEvent;
              if (v12796) {
                var v18293 = "on" + m$$15;
                introspect(JAM.policy.p3) {
                  v12796 = a$$143.attachEvent(v18293, i$$112);
                }
              }
              v5822 = v12796;
            }
            v5822;
          }
        }
        var v18294 = s$$18.add;
        if (v18294) {
          var v25950 = s$$18.add;
          introspect(JAM.policy.p3) {
            v25950.call(a$$143, o$$6);
          }
          var v27572 = o$$6.handler;
          var v25951 = v27572.guid;
          var v27574 = !v25951;
          if (v27574) {
            var v27573 = o$$6.handler;
            v27573.guid = d$$71.guid;
          }
        }
        var v18295;
        if (g$$38) {
          var v23540 = r$$6.delegateCount;
          var v27575 = r$$6.delegateCount;
          r$$6.delegateCount = v27575 + 1;
          introspect(JAM.policy.p3) {
            v18295 = r$$6.splice(v23540, 0, o$$6);
          }
        } else {
          introspect(JAM.policy.p3) {
            v18295 = r$$6.push(o$$6);
          }
        }
        v18295;
        var v18296 = f$$4.event;
        var v12798 = v18296.global;
        introspect(JAM.policy.p2) {
          v12798[m$$15] = !0;
        }
        k$$18++;
        var v12799 = c$$77.length;
        v5825 = k$$18 < v12799;
      }
      a$$143 = null;
    }
    return;
  }
  function v773() {
    function v772(a$$139, b$$92) {
      introspect(JAM.policy.p3) {
        var v5828 = f$$4.isArray(b$$92)
      }
      if (v5828) {
        introspect(JAM.policy.p3) {
          var v18297 = f$$4(a$$139)
        }
        introspect(JAM.policy.p3) {
          var v12800 = v18297.val()
        }
        introspect(JAM.policy.p3) {
          var v5827 = f$$4.inArray(v12800, b$$92)
        }
        return a$$139.checked = v5827 >= 0;
      }
      return;
    }
    var v5829 = f$$4.valHooks;
    var v18298 = f$$4.valHooks;
    var v12801 = v18298[this];
    var v12802 = {set:v772};
    introspect(JAM.policy.p3) {
      var v31132 = f$$4.extend(v12801, v12802)
    }
    introspect(JAM.policy.p2) {
      v5829[this] = v31132;
    }
    return;
  }
  function v771() {
    function v770(a$$138) {
      var v5830;
      introspect(JAM.policy.p3) {
        var v18299 = a$$138.getAttribute("value")
      }
      var v12803 = v18299 === null;
      if (v12803) {
        v5830 = "on";
      } else {
        v5830 = a$$138.value;
      }
      return v5830;
    }
    var v5831 = f$$4.valHooks;
    introspect(JAM.policy.p2) {
      v5831[this] = {get:v770};
    }
    return;
  }
  function v769(a$$137) {
    var b$$91 = a$$137.parentNode;
    return null;
  }
  function v768(a$$136, b$$90) {
    var v5832 = a$$136.style;
    return v5832.cssText = "" + b$$90;
  }
  function v767(a$$135) {
    var v18300 = a$$135.style;
    var v12804 = v18300.cssText;
    introspect(JAM.policy.p3) {
      var v5833 = v12804.toLowerCase()
    }
    var v12805 = !v5833;
    if (v12805) {
      v5833 = b$$9;
    }
    return v5833;
  }
  function v766(a$$133, c$$75) {
    function v765(a$$134) {
      introspect(JAM.policy.p3) {
        var d$$70 = a$$134.getAttribute(c$$75, 2)
      }
      var v5834;
      var v12806 = d$$70 === null;
      if (v12806) {
        v5834 = b$$9;
      } else {
        v5834 = d$$70;
      }
      return v5834;
    }
    var v5835 = f$$4.attrHooks;
    var v5836 = c$$75;
    var v18301 = f$$4.attrHooks;
    var v12807 = v18301[c$$75];
    var v12808 = {get:v765};
    introspect(JAM.policy.p3) {
      var v31133 = f$$4.extend(v12807, v12808)
    }
    introspect(JAM.policy.p2) {
      v5835[v5836] = v31133;
    }
    return;
  }
  function v764(a$$132, b$$89, c$$74) {
    var v12809 = b$$89 === "";
    if (v12809) {
      b$$89 = "false";
    }
    introspect(JAM.policy.p3) {
      w$$11.set(a$$132, b$$89, c$$74);
    }
    return;
  }
  function v763(a$$130, b$$88) {
    function v762(a$$131, c$$73) {
      var v5837 = c$$73 === "";
      if (v5837) {
        introspect(JAM.policy.p3) {
          a$$131.setAttribute(b$$88, "auto");
        }
        return c$$73;
      }
      return;
    }
    var v5838 = f$$4.attrHooks;
    var v5839 = b$$88;
    var v18302 = f$$4.attrHooks;
    var v12810 = v18302[b$$88];
    var v12811 = {set:v762};
    introspect(JAM.policy.p3) {
      var v31134 = f$$4.extend(v12810, v12811)
    }
    introspect(JAM.policy.p2) {
      v5838[v5839] = v31134;
    }
    return;
  }
  function v761(a$$129, b$$87, d$$69) {
    introspect(JAM.policy.p3) {
      var e$$87 = a$$129.getAttributeNode(d$$69)
    }
    var v12812 = !e$$87;
    if (v12812) {
      introspect(JAM.policy.p3) {
        e$$87 = c$$5.createAttribute(d$$69);
      }
      introspect(JAM.policy.p3) {
        a$$129.setAttributeNode(e$$87);
      }
    }
    return e$$87.nodeValue = b$$87 + "";
  }
  function v760(a$$128, c$$72) {
    var d$$68;
    introspect(JAM.policy.p3) {
      d$$68 = a$$128.getAttributeNode(c$$72);
    }
    var v5840;
    var v18303 = d$$68;
    if (v18303) {
      var v23541;
      var v25953 = y$$49[c$$72];
      if (v25953) {
        var v25952 = d$$68.nodeValue;
        v23541 = v25952 !== "";
      } else {
        v23541 = d$$68.specified;
      }
      v18303 = v23541;
    }
    var v12813 = v18303;
    if (v12813) {
      v5840 = d$$68.nodeValue;
    } else {
      v5840 = b$$9;
    }
    return v5840;
  }
  function v759(a$$127, b$$86, c$$71) {
    var d$$67;
    var v5841;
    var v18304 = !1;
    var v12814 = b$$86 === v18304;
    if (v12814) {
      introspect(JAM.policy.p3) {
        v5841 = f$$4.removeAttr(a$$127, c$$71);
      }
    } else {
      var v25954 = f$$4.propFix;
      var v23542 = v25954[c$$71];
      var v25955 = !v23542;
      if (v25955) {
        v23542 = c$$71;
      }
      d$$67 = v23542;
      var v23543 = d$$67 in a$$127;
      if (v23543) {
        introspect(JAM.policy.p2) {
          a$$127[d$$67] = !0;
        }
      }
      introspect(JAM.policy.p3) {
        var v18305 = c$$71.toLowerCase()
      }
      introspect(JAM.policy.p3) {
        v5841 = a$$127.setAttribute(c$$71, v18305);
      }
    }
    v5841;
    return c$$71;
  }
  function v758(a$$126, c$$70) {
    var d$$66;
    introspect(JAM.policy.p3) {
      var e$$86 = f$$4.prop(a$$126, c$$70)
    }
    var v5842;
    var v23544 = !0;
    var v18306 = e$$86 === v23544;
    var v23546 = !v18306;
    if (v23546) {
      var v27576 = typeof e$$86;
      var v25956 = v27576 != "boolean";
      if (v25956) {
        introspect(JAM.policy.p3) {
          v25956 = d$$66 = a$$126.getAttributeNode(c$$70);
        }
      }
      var v23545 = v25956;
      if (v23545) {
        var v25957 = d$$66.nodeValue;
        var v25958 = !1;
        v23545 = v25957 !== v25958;
      }
      v18306 = v23545;
    }
    var v12815 = v18306;
    if (v12815) {
      introspect(JAM.policy.p3) {
        v5842 = c$$70.toLowerCase();
      }
    } else {
      v5842 = b$$9;
    }
    return v5842;
  }
  function v757(a$$125) {
    introspect(JAM.policy.p3) {
      var c$$69 = a$$125.getAttributeNode("tabindex")
    }
    var v5843;
    var v18307 = c$$69;
    if (v18307) {
      v18307 = c$$69.specified;
    }
    var v12818 = v18307;
    if (v12818) {
      var v12816 = c$$69.value;
      v5843 = parseInt(v12816, 10);
    } else {
      var v12817;
      var v25959 = a$$125.nodeName;
      introspect(JAM.policy.p3) {
        var v23547 = s$$15.test(v25959)
      }
      var v25961 = !v23547;
      if (v25961) {
        var v27577 = a$$125.nodeName;
        introspect(JAM.policy.p3) {
          var v25960 = t$$2.test(v27577)
        }
        if (v25960) {
          v25960 = a$$125.href;
        }
        v23547 = v25960;
      }
      var v18308 = v23547;
      if (v18308) {
        v12817 = 0;
      } else {
        v12817 = b$$9;
      }
      v5843 = v12817;
    }
    return v5843;
  }
  function v756(a$$124, c$$68, d$$65) {
    var e$$85;
    var g$$37;
    var h$$38;
    var i$$111 = a$$124.nodeType;
    var v25962 = !a$$124;
    var v23548 = !v25962;
    if (v23548) {
      v23548 = i$$111 !== 3;
    }
    var v18309 = v23548;
    if (v18309) {
      v18309 = i$$111 !== 8;
    }
    var v12819 = v18309;
    if (v12819) {
      v12819 = i$$111 !== 2;
    }
    var v5845 = v12819;
    if (v5845) {
      var v12820 = i$$111 !== 1;
      var v18311 = !v12820;
      if (v18311) {
        introspect(JAM.policy.p3) {
          var v18310 = f$$4.isXMLDoc(a$$124)
        }
        v12820 = !v18310;
      }
      h$$38 = v12820;
      if (h$$38) {
        var v25963 = f$$4.propFix;
        var v23549 = v25963[c$$68];
        var v25964 = !v23549;
        if (v25964) {
          v23549 = c$$68;
        }
        c$$68 = v23549;
        var v23550 = f$$4.propHooks;
        g$$37 = v23550[c$$68];
      }
      var v5844;
      var v12823 = d$$65 !== b$$9;
      if (v12823) {
        var v12821;
        var v25965 = g$$37;
        if (v25965) {
          v25965 = "set" in g$$37;
        }
        var v23551 = v25965;
        if (v23551) {
          introspect(JAM.policy.p3) {
            var v25966 = e$$85 = g$$37.set(a$$124, d$$65, c$$68)
          }
          v23551 = v25966 !== b$$9;
        }
        var v18312 = v23551;
        if (v18312) {
          v12821 = e$$85;
        } else {
          introspect(JAM.policy.p2) {
            v12821 = a$$124[c$$68] = d$$65;
          }
        }
        v5844 = v12821;
      } else {
        var v12822;
        var v25967 = g$$37;
        if (v25967) {
          v25967 = "get" in g$$37;
        }
        var v23552 = v25967;
        if (v23552) {
          introspect(JAM.policy.p3) {
            var v25968 = e$$85 = g$$37.get(a$$124, c$$68)
          }
          v23552 = v25968 !== null;
        }
        var v18313 = v23552;
        if (v18313) {
          v12822 = e$$85;
        } else {
          v12822 = a$$124[c$$68];
        }
        v5844 = v12822;
      }
      return v5844;
    }
    return;
  }
  function v755(a$$123, b$$85, c$$67) {
    var v12824 = w$$11;
    if (v12824) {
      introspect(JAM.policy.p3) {
        v12824 = f$$4.nodeName(a$$123, "button");
      }
    }
    var v5846 = v12824;
    if (v5846) {
      introspect(JAM.policy.p3) {
        return w$$11.set(a$$123, b$$85, c$$67);
      }
    }
    a$$123.value = b$$85;
    return;
  }
  function v754(a$$122, b$$84) {
    var v12825 = w$$11;
    if (v12825) {
      introspect(JAM.policy.p3) {
        v12825 = f$$4.nodeName(a$$122, "button");
      }
    }
    var v5847 = v12825;
    if (v5847) {
      introspect(JAM.policy.p3) {
        return w$$11.get(a$$122, b$$84);
      }
    }
    var v5848;
    var v12826 = b$$84 in a$$122;
    if (v12826) {
      v5848 = a$$122.value;
    } else {
      v5848 = null;
    }
    return v5848;
  }
  function v753(a$$121, b$$83) {
    var v18314 = a$$121.nodeName;
    introspect(JAM.policy.p3) {
      var v12827 = r$$2.test(v18314)
    }
    if (v12827) {
      v12827 = a$$121.parentNode;
    }
    var v5850 = v12827;
    if (v5850) {
      introspect(JAM.policy.p3) {
        f$$4.error("type property can't be changed");
      }
    } else {
      var v25969 = f$$4.support;
      var v23553 = v25969.radioValue;
      var v18315 = !v23553;
      if (v18315) {
        v18315 = b$$83 === "radio";
      }
      var v12828 = v18315;
      if (v12828) {
        introspect(JAM.policy.p3) {
          v12828 = f$$4.nodeName(a$$121, "input");
        }
      }
      var v5849 = v12828;
      if (v5849) {
        var c$$66 = a$$121.value;
        introspect(JAM.policy.p3) {
          a$$121.setAttribute("type", b$$83);
        }
        if (c$$66) {
          a$$121.value = c$$66;
        }
        return b$$83;
      }
    }
    return;
  }
  function v752(a$$120, b$$82) {
    var c$$65;
    var d$$64;
    var e$$84;
    var g$$36;
    var h$$37;
    var i$$110 = 0;
    var v12829 = b$$82;
    if (v12829) {
      var v18316 = a$$120.nodeType;
      v12829 = v18316 === 1;
    }
    var v5852 = v12829;
    if (v5852) {
      introspect(JAM.policy.p3) {
        var v12830 = b$$82.toLowerCase()
      }
      introspect(JAM.policy.p3) {
        d$$64 = v12830.split(p$$22);
      }
      g$$36 = d$$64.length;
      var v5851 = i$$110 < g$$36;
      for (;v5851;) {
        e$$84 = d$$64[i$$110];
        if (e$$84) {
          var v29255 = f$$4.propFix;
          var v28597 = v29255[e$$84];
          var v29256 = !v28597;
          if (v29256) {
            v28597 = e$$84;
          }
          c$$65 = v28597;
          introspect(JAM.policy.p3) {
            h$$37 = u$$1.test(e$$84);
          }
          var v28598 = !h$$37;
          if (v28598) {
            introspect(JAM.policy.p3) {
              f$$4.attr(a$$120, e$$84, "");
            }
          }
          var v27578;
          if (v$$4) {
            v27578 = e$$84;
          } else {
            v27578 = c$$65;
          }
          var v25970 = v27578;
          introspect(JAM.policy.p3) {
            a$$120.removeAttribute(v25970);
          }
          var v25971 = h$$37;
          if (v25971) {
            v25971 = c$$65 in a$$120;
          }
          var v23554 = v25971;
          if (v23554) {
            introspect(JAM.policy.p2) {
              a$$120[c$$65] = !1;
            }
          }
        }
        i$$110++;
        v5851 = i$$110 < g$$36;
      }
    }
    return;
  }
  function v751(a$$119, c$$64, d$$63, e$$83) {
    var g$$35;
    var h$$36;
    var i$$109;
    var j$$36 = a$$119.nodeType;
    var v25972 = !a$$119;
    var v23555 = !v25972;
    if (v23555) {
      v23555 = j$$36 !== 3;
    }
    var v18317 = v23555;
    if (v18317) {
      v18317 = j$$36 !== 8;
    }
    var v12831 = v18317;
    if (v12831) {
      v12831 = j$$36 !== 2;
    }
    var v5862 = v12831;
    if (v5862) {
      var v12832 = e$$83;
      if (v12832) {
        var v18318 = f$$4.attrFn;
        v12832 = c$$64 in v18318;
      }
      var v5854 = v12832;
      if (v5854) {
        introspect(JAM.policy.p3) {
          var v5853 = f$$4(a$$119)
        }
        introspect(JAM.policy.p3) {
          return v5853[c$$64](d$$63);
        }
      }
      var v18319 = a$$119.getAttribute;
      var v12833 = typeof v18319;
      var v5855 = v12833 == "undefined";
      if (v5855) {
        introspect(JAM.policy.p3) {
          return f$$4.prop(a$$119, c$$64, d$$63);
        }
      }
      var v12834 = j$$36 !== 1;
      var v18321 = !v12834;
      if (v18321) {
        introspect(JAM.policy.p3) {
          var v18320 = f$$4.isXMLDoc(a$$119)
        }
        v12834 = !v18320;
      }
      i$$109 = v12834;
      if (i$$109) {
        introspect(JAM.policy.p3) {
          c$$64 = c$$64.toLowerCase();
        }
        var v25973 = f$$4.attrHooks;
        var v23556 = v25973[c$$64];
        var v25975 = !v23556;
        if (v25975) {
          var v25974;
          introspect(JAM.policy.p3) {
            var v27579 = u$$1.test(c$$64)
          }
          if (v27579) {
            v25974 = x$$67;
          } else {
            v25974 = w$$11;
          }
          v23556 = v25974;
        }
        h$$36 = v23556;
      }
      var v5859 = d$$63 !== b$$9;
      if (v5859) {
        var v5856 = d$$63 === null;
        if (v5856) {
          introspect(JAM.policy.p3) {
            f$$4.removeAttr(a$$119, c$$64);
          }
          return;
        }
        var v23557 = h$$36;
        if (v23557) {
          v23557 = "set" in h$$36;
        }
        var v18322 = v23557;
        if (v18322) {
          v18322 = i$$109;
        }
        var v12835 = v18322;
        if (v12835) {
          introspect(JAM.policy.p3) {
            var v18323 = g$$35 = h$$36.set(a$$119, d$$63, c$$64)
          }
          v12835 = v18323 !== b$$9;
        }
        var v5857 = v12835;
        if (v5857) {
          return g$$35;
        }
        var v5858 = "" + d$$63;
        introspect(JAM.policy.p3) {
          a$$119.setAttribute(c$$64, v5858);
        }
        return d$$63;
      }
      var v23558 = h$$36;
      if (v23558) {
        v23558 = "get" in h$$36;
      }
      var v18324 = v23558;
      if (v18324) {
        v18324 = i$$109;
      }
      var v12836 = v18324;
      if (v12836) {
        introspect(JAM.policy.p3) {
          var v18325 = g$$35 = h$$36.get(a$$119, c$$64)
        }
        v12836 = v18325 !== null;
      }
      var v5860 = v12836;
      if (v5860) {
        return g$$35;
      }
      introspect(JAM.policy.p3) {
        g$$35 = a$$119.getAttribute(c$$64);
      }
      var v5861;
      var v12837 = g$$35 === null;
      if (v12837) {
        v5861 = b$$9;
      } else {
        v5861 = g$$35;
      }
      return v5861;
    }
    return;
  }
  function v750(a$$118, b$$81) {
    function v749() {
      introspect(JAM.policy.p3) {
        var v18326 = f$$4(this)
      }
      introspect(JAM.policy.p3) {
        var v12838 = v18326.val()
      }
      introspect(JAM.policy.p3) {
        var v5863 = f$$4.inArray(v12838, c$$63)
      }
      this.selected = v5863 >= 0;
      return;
    }
    introspect(JAM.policy.p3) {
      var c$$63 = f$$4.makeArray(b$$81)
    }
    introspect(JAM.policy.p3) {
      var v18327 = f$$4(a$$118)
    }
    introspect(JAM.policy.p3) {
      var v12839 = v18327.find("option")
    }
    introspect(JAM.policy.p3) {
      v12839.each(v749);
    }
    var v12840 = c$$63.length;
    var v18328 = !v12840;
    if (v18328) {
      a$$118.selectedIndex = -1;
    }
    return c$$63;
  }
  function v748(a$$117) {
    var b$$80;
    var c$$62;
    var d$$62;
    var e$$82;
    var g$$34 = a$$117.selectedIndex;
    var h$$35 = [];
    var i$$108 = a$$117.options;
    var v5864 = a$$117.type;
    var j$$35 = v5864 === "select-one";
    var v5865 = g$$34 < 0;
    if (v5865) {
      return null;
    }
    var v12841;
    if (j$$35) {
      v12841 = g$$34;
    } else {
      v12841 = 0;
    }
    c$$62 = v12841;
    var v12842;
    if (j$$35) {
      v12842 = g$$34 + 1;
    } else {
      v12842 = i$$108.length;
    }
    d$$62 = v12842;
    var v5868 = c$$62 < d$$62;
    for (;v5868;) {
      e$$82 = i$$108[c$$62];
      var v18329 = e$$82.selected;
      if (v18329) {
        var v23559;
        var v27580 = f$$4.support;
        var v25978 = v27580.optDisabled;
        if (v25978) {
          var v25976 = e$$82.disabled;
          v23559 = !v25976;
        } else {
          introspect(JAM.policy.p3) {
            var v25977 = e$$82.getAttribute("disabled")
          }
          v23559 = v25977 === null;
        }
        v18329 = v23559;
      }
      var v12843 = v18329;
      if (v12843) {
        var v25979 = e$$82.parentNode;
        var v23560 = v25979.disabled;
        var v18330 = !v23560;
        var v23562 = !v18330;
        if (v23562) {
          var v25980 = e$$82.parentNode;
          introspect(JAM.policy.p3) {
            var v23561 = f$$4.nodeName(v25980, "optgroup")
          }
          v18330 = !v23561;
        }
        v12843 = v18330;
      }
      var v5867 = v12843;
      if (v5867) {
        introspect(JAM.policy.p3) {
          var v5866 = f$$4(e$$82)
        }
        introspect(JAM.policy.p3) {
          b$$80 = v5866.val();
        }
        if (j$$35) {
          return b$$80;
        }
        introspect(JAM.policy.p3) {
          h$$35.push(b$$80);
        }
      }
      c$$62++;
      v5868 = c$$62 < d$$62;
    }
    var v18331 = j$$35;
    if (v18331) {
      var v23563 = h$$35.length;
      v18331 = !v23563;
    }
    var v12844 = v18331;
    if (v12844) {
      v12844 = i$$108.length;
    }
    var v5870 = v12844;
    if (v5870) {
      var v12845 = i$$108[g$$34];
      introspect(JAM.policy.p3) {
        var v5869 = f$$4(v12845)
      }
      introspect(JAM.policy.p3) {
        return v5869.val();
      }
    }
    return h$$35;
  }
  function v747(a$$116) {
    var v5871 = a$$116.attributes;
    var b$$79 = v5871.value;
    var v5872;
    var v18332 = !b$$79;
    var v23564 = !v18332;
    if (v23564) {
      v18332 = b$$79.specified;
    }
    var v12846 = v18332;
    if (v12846) {
      v5872 = a$$116.value;
    } else {
      v5872 = a$$116.text;
    }
    return v5872;
  }
  function v746(a$$114) {
    function v745(d$$61) {
      function v744(a$$115) {
        var v5873;
        var v12847 = a$$115 == null;
        if (v12847) {
          v5873 = "";
        } else {
          v5873 = a$$115 + "";
        }
        return v5873;
      }
      introspect(JAM.policy.p3) {
        var g$$33 = f$$4(this)
      }
      var h$$34;
      var v12848 = this.nodeType;
      var v5875 = v12848 === 1;
      if (v5875) {
        var v18333;
        if (e$$81) {
          introspect(JAM.policy.p3) {
            var v23565 = g$$33.val()
          }
          introspect(JAM.policy.p3) {
            v18333 = h$$34 = a$$114.call(this, d$$61, v23565);
          }
        } else {
          v18333 = h$$34 = a$$114;
        }
        v18333;
        var v18334;
        var v23567 = h$$34 == null;
        if (v23567) {
          v18334 = h$$34 = "";
        } else {
          var v23566;
          var v27581 = typeof h$$34;
          var v25982 = v27581 == "number";
          if (v25982) {
            v23566 = h$$34 = h$$34 + "";
          } else {
            introspect(JAM.policy.p3) {
              var v25981 = f$$4.isArray(h$$34)
            }
            if (v25981) {
              introspect(JAM.policy.p3) {
                v25981 = h$$34 = f$$4.map(h$$34, v744);
              }
            }
            v23566 = v25981;
          }
          v18334 = v23566;
        }
        v18334;
        var v18335 = f$$4.valHooks;
        var v18336 = this.type;
        var v12849 = v18335[v18336];
        var v18339 = !v12849;
        if (v18339) {
          var v18337 = f$$4.valHooks;
          var v23568 = this.nodeName;
          introspect(JAM.policy.p3) {
            var v18338 = v23568.toLowerCase()
          }
          v12849 = v18337[v18338];
        }
        c$$61 = v12849;
        var v18340 = !c$$61;
        var v23570 = !v18340;
        if (v23570) {
          var v23569 = "set" in c$$61;
          v18340 = !v23569;
        }
        var v12850 = v18340;
        var v18342 = !v12850;
        if (v18342) {
          introspect(JAM.policy.p3) {
            var v18341 = c$$61.set(this, h$$34, "value")
          }
          v12850 = v18341 === b$$9;
        }
        var v5874 = v12850;
        if (v5874) {
          this.value = h$$34;
        }
      }
      return;
    }
    var c$$61;
    var d$$60;
    var e$$81;
    var g$$32 = this[0];
    var v18343 = arguments.length;
    var v12851 = !v18343;
    var v5876 = !v12851;
    if (v5876) {
      introspect(JAM.policy.p3) {
        e$$81 = f$$4.isFunction(a$$114);
      }
      introspect(JAM.policy.p3) {
        return this.each(v745);
      }
    }
    if (g$$32) {
      var v12852 = f$$4.valHooks;
      var v12853 = g$$32.type;
      var v5877 = v12852[v12853];
      var v12856 = !v5877;
      if (v12856) {
        var v12854 = f$$4.valHooks;
        var v18344 = g$$32.nodeName;
        introspect(JAM.policy.p3) {
          var v12855 = v18344.toLowerCase()
        }
        v5877 = v12854[v12855];
      }
      c$$61 = v5877;
      var v18345 = c$$61;
      if (v18345) {
        v18345 = "get" in c$$61;
      }
      var v12857 = v18345;
      if (v12857) {
        introspect(JAM.policy.p3) {
          var v18346 = d$$60 = c$$61.get(g$$32, "value")
        }
        v12857 = v18346 !== b$$9;
      }
      var v5878 = v12857;
      if (v5878) {
        return d$$60;
      }
      d$$60 = g$$32.value;
      var v5879;
      var v18347 = typeof d$$60;
      var v12859 = v18347 == "string";
      if (v12859) {
        introspect(JAM.policy.p3) {
          v5879 = d$$60.replace(q, "");
        }
      } else {
        var v12858;
        var v18348 = d$$60 == null;
        if (v18348) {
          v12858 = "";
        } else {
          v12858 = d$$60;
        }
        v5879 = v12858;
      }
      return v5879;
    }
    return;
  }
  function v743(a$$113) {
    var v5880 = " " + a$$113;
    var b$$78 = v5880 + " ";
    var c$$60 = 0;
    var d$$59 = this.length;
    var v5882 = c$$60 < d$$59;
    for (;v5882;) {
      var v23571 = this[c$$60];
      var v18349 = v23571.nodeType;
      var v12860 = v18349 === 1;
      if (v12860) {
        var v29257 = this[c$$60];
        var v28599 = v29257.className;
        var v27582 = " " + v28599;
        var v25983 = v27582 + " ";
        introspect(JAM.policy.p3) {
          var v23572 = v25983.replace(o, " ")
        }
        introspect(JAM.policy.p3) {
          var v18350 = v23572.indexOf(b$$78)
        }
        v12860 = v18350 > -1;
      }
      var v5881 = v12860;
      if (v5881) {
        return !0;
      }
      c$$60++;
      v5882 = c$$60 < d$$59;
    }
    return !1;
  }
  function v742(a$$112, b$$77) {
    function v741() {
      var v5885 = c$$58 === "string";
      if (v5885) {
        var e$$80;
        var g$$31 = 0;
        introspect(JAM.policy.p3) {
          var h$$33 = f$$4(this)
        }
        var i$$107 = b$$77;
        introspect(JAM.policy.p3) {
          var j$$34 = a$$112.split(p$$22)
        }
        var v12861 = g$$31;
        g$$31 = g$$31 + 1;
        var v5883 = e$$80 = j$$34[v12861];
        for (;v5883;) {
          var v12862;
          if (d$$58) {
            v12862 = i$$107;
          } else {
            introspect(JAM.policy.p3) {
              var v18351 = h$$33.hasClass(e$$80)
            }
            v12862 = !v18351;
          }
          i$$107 = v12862;
          var v18352;
          if (i$$107) {
            v18352 = "addClass";
          } else {
            v18352 = "removeClass";
          }
          var v12863 = v18352;
          introspect(JAM.policy.p3) {
            h$$33[v12863](e$$80);
          }
          var v12864 = g$$31;
          g$$31 = g$$31 + 1;
          v5883 = e$$80 = j$$34[v12864];
        }
      } else {
        var v12865 = c$$58 === "undefined";
        var v18353 = !v12865;
        if (v18353) {
          v12865 = c$$58 === "boolean";
        }
        var v5884 = v12865;
        if (v5884) {
          var v12866 = this.className;
          if (v12866) {
            var v18354 = this.className;
            introspect(JAM.policy.p3) {
              f$$4._data(this, "__className__", v18354);
            }
          }
          var v12867;
          var v23573 = this.className;
          var v25985 = !v23573;
          if (v25985) {
            var v25984 = !1;
            v23573 = a$$112 === v25984;
          }
          var v18356 = v23573;
          if (v18356) {
            v12867 = "";
          } else {
            introspect(JAM.policy.p3) {
              var v18355 = f$$4._data(this, "__className__")
            }
            var v23574 = !v18355;
            if (v23574) {
              v18355 = "";
            }
            v12867 = v18355;
          }
          this.className = v12867;
        }
      }
      return;
    }
    function v740(c$$59) {
      introspect(JAM.policy.p3) {
        var v5886 = f$$4(this)
      }
      var v12868 = this.className;
      introspect(JAM.policy.p3) {
        var v5887 = a$$112.call(this, c$$59, v12868, b$$77)
      }
      introspect(JAM.policy.p3) {
        v5886.toggleClass(v5887, b$$77);
      }
      return;
    }
    var c$$58 = typeof a$$112;
    var v5888 = typeof b$$77;
    var d$$58 = v5888 == "boolean";
    introspect(JAM.policy.p3) {
      var v5889 = f$$4.isFunction(a$$112)
    }
    if (v5889) {
      introspect(JAM.policy.p3) {
        return this.each(v740);
      }
    }
    introspect(JAM.policy.p3) {
      return this.each(v741);
    }
  }
  function v739(a$$111) {
    function v738(b$$76) {
      introspect(JAM.policy.p3) {
        var v5890 = f$$4(this)
      }
      var v12869 = this.className;
      introspect(JAM.policy.p3) {
        var v5891 = a$$111.call(this, b$$76, v12869)
      }
      introspect(JAM.policy.p3) {
        v5890.removeClass(v5891);
      }
      return;
    }
    var c$$57;
    var d$$57;
    var e$$79;
    var g$$30;
    var h$$32;
    var i$$106;
    var j$$33;
    introspect(JAM.policy.p3) {
      var v5892 = f$$4.isFunction(a$$111)
    }
    if (v5892) {
      introspect(JAM.policy.p3) {
        return this.each(v738);
      }
    }
    var v18357 = a$$111;
    if (v18357) {
      var v23575 = typeof a$$111;
      v18357 = v23575 == "string";
    }
    var v12870 = v18357;
    var v18358 = !v12870;
    if (v18358) {
      v12870 = a$$111 === b$$9;
    }
    var v5900 = v12870;
    if (v5900) {
      var v5893 = a$$111 || "";
      introspect(JAM.policy.p3) {
        c$$57 = v5893.split(p$$22);
      }
      d$$57 = 0;
      e$$79 = this.length;
      var v5899 = d$$57 < e$$79;
      for (;v5899;) {
        g$$30 = this[d$$57];
        var v18359 = g$$30.nodeType;
        var v12871 = v18359 === 1;
        if (v12871) {
          v12871 = g$$30.className;
        }
        var v5898 = v12871;
        if (v5898) {
          if (a$$111) {
            var v18360 = g$$30.className;
            var v12872 = " " + v18360;
            var v5894 = v12872 + " ";
            introspect(JAM.policy.p3) {
              h$$32 = v5894.replace(o, " ");
            }
            i$$106 = 0;
            j$$33 = c$$57.length;
            var v5896 = i$$106 < j$$33;
            for (;v5896;) {
              var v18361 = c$$57[i$$106];
              var v12873 = " " + v18361;
              var v5895 = v12873 + " ";
              introspect(JAM.policy.p3) {
                h$$32 = h$$32.replace(v5895, " ");
              }
              i$$106++;
              v5896 = i$$106 < j$$33;
            }
            var v5897 = g$$30;
            introspect(JAM.policy.p3) {
              var v31135 = f$$4.trim(h$$32)
            }
            v5897.className = v31135;
          } else {
            g$$30.className = "";
          }
        }
        d$$57++;
        v5899 = d$$57 < e$$79;
      }
    }
    return this;
  }
  function v737(a$$110) {
    function v736(b$$75) {
      introspect(JAM.policy.p3) {
        var v5901 = f$$4(this)
      }
      var v12874 = this.className;
      introspect(JAM.policy.p3) {
        var v5902 = a$$110.call(this, b$$75, v12874)
      }
      introspect(JAM.policy.p3) {
        v5901.addClass(v5902);
      }
      return;
    }
    var b$$74;
    var c$$56;
    var d$$56;
    var e$$78;
    var g$$29;
    var h$$31;
    var i$$105;
    introspect(JAM.policy.p3) {
      var v5903 = f$$4.isFunction(a$$110)
    }
    if (v5903) {
      introspect(JAM.policy.p3) {
        return this.each(v736);
      }
    }
    var v12875 = a$$110;
    if (v12875) {
      var v18362 = typeof a$$110;
      v12875 = v18362 == "string";
    }
    var v5911 = v12875;
    if (v5911) {
      introspect(JAM.policy.p3) {
        b$$74 = a$$110.split(p$$22);
      }
      c$$56 = 0;
      d$$56 = this.length;
      var v5910 = c$$56 < d$$56;
      for (;v5910;) {
        e$$78 = this[c$$56];
        var v12876 = e$$78.nodeType;
        var v5909 = v12876 === 1;
        if (v5909) {
          var v18363 = e$$78.className;
          var v12877 = !v18363;
          if (v12877) {
            var v18364 = b$$74.length;
            v12877 = v18364 === 1;
          }
          var v5908 = v12877;
          if (v5908) {
            e$$78.className = a$$110;
          } else {
            var v12878 = e$$78.className;
            var v5904 = " " + v12878;
            g$$29 = v5904 + " ";
            h$$31 = 0;
            i$$105 = b$$74.length;
            var v5906 = h$$31 < i$$105;
            for (;v5906;) {
              var v25986 = b$$74[h$$31];
              var v23576 = " " + v25986;
              var v18365 = v23576 + " ";
              introspect(JAM.policy.p3) {
                var v12879 = g$$29.indexOf(v18365)
              }
              var v5905 = ~v12879;
              var v12880 = !v5905;
              if (v12880) {
                var v23577 = b$$74[h$$31];
                var v18366 = v23577 + " ";
                g$$29 = g$$29 + v18366;
              }
              h$$31++;
              v5906 = h$$31 < i$$105;
            }
            var v5907 = e$$78;
            introspect(JAM.policy.p3) {
              var v31136 = f$$4.trim(g$$29)
            }
            v5907.className = v31136;
          }
        }
        c$$56++;
        v5910 = c$$56 < d$$56;
      }
    }
    return this;
  }
  function v735(a$$109) {
    function v734() {
      try {
        introspect(JAM.policy.p2) {
          this[a$$109] = b$$9;
        }
        delete this[a$$109];
      } catch (c$$55) {
      }
      return;
    }
    var v12881 = f$$4.propFix;
    var v5912 = v12881[a$$109];
    var v12882 = !v5912;
    if (v12882) {
      v5912 = a$$109;
    }
    a$$109 = v5912;
    introspect(JAM.policy.p3) {
      return this.each(v734);
    }
  }
  function v733(a$$108, b$$73) {
    var v5913 = f$$4.prop;
    var v12883 = arguments.length;
    var v5914 = v12883 > 1;
    introspect(JAM.policy.p3) {
      return f$$4.access(this, v5913, a$$108, b$$73, v5914);
    }
  }
  function v732(a$$107) {
    function v731() {
      introspect(JAM.policy.p3) {
        f$$4.removeAttr(this, a$$107);
      }
      return;
    }
    introspect(JAM.policy.p3) {
      return this.each(v731);
    }
  }
  function v730(a$$106, b$$72) {
    var v5915 = f$$4.attr;
    var v12884 = arguments.length;
    var v5916 = v12884 > 1;
    introspect(JAM.policy.p3) {
      return f$$4.access(this, v5915, a$$106, b$$72, v5916);
    }
  }
  function v729(a$$105, c$$54) {
    function m$$14() {
      var v5917 = h$$30 = h$$30 - 1;
      var v12886 = !v5917;
      if (v12886) {
        var v12885 = [e$$77];
        introspect(JAM.policy.p3) {
          d$$55.resolveWith(e$$77, v12885);
        }
      }
      return;
    }
    var v18367 = typeof a$$105;
    var v12887 = v18367 != "string";
    if (v12887) {
      c$$54 = a$$105;
      a$$105 = b$$9;
    }
    a$$105 = a$$105 || "fx";
    introspect(JAM.policy.p3) {
      var d$$55 = f$$4.Deferred()
    }
    var e$$77 = this;
    var g$$28 = e$$77.length;
    var h$$30 = 1;
    var i$$104 = a$$105 + "defer";
    var j$$32 = a$$105 + "queue";
    var k$$17 = a$$105 + "mark";
    var l$$32;
    var v5919 = g$$28;
    g$$28 = g$$28 - 1;
    for (;v5919;) {
      var v18368 = e$$77[g$$28];
      var v18369 = !0;
      introspect(JAM.policy.p3) {
        var v12888 = f$$4.data(v18368, i$$104, b$$9, v18369)
      }
      var v18371 = !v12888;
      if (v18371) {
        var v25987 = e$$77[g$$28];
        var v25988 = !0;
        introspect(JAM.policy.p3) {
          var v23578 = f$$4.data(v25987, j$$32, b$$9, v25988)
        }
        var v25991 = !v23578;
        if (v25991) {
          var v25989 = e$$77[g$$28];
          var v25990 = !0;
          introspect(JAM.policy.p3) {
            v23578 = f$$4.data(v25989, k$$17, b$$9, v25990);
          }
        }
        var v18370 = v23578;
        if (v18370) {
          var v23579 = e$$77[g$$28];
          introspect(JAM.policy.p3) {
            var v23580 = f$$4.Callbacks("once memory")
          }
          var v23581 = !0;
          introspect(JAM.policy.p3) {
            v18370 = f$$4.data(v23579, i$$104, v23580, v23581);
          }
        }
        v12888 = v18370;
      }
      var v5918 = l$$32 = v12888;
      if (v5918) {
        h$$30++;
        introspect(JAM.policy.p3) {
          l$$32.add(m$$14);
        }
      }
      v5919 = g$$28;
      g$$28 = g$$28 - 1;
    }
    m$$14();
    introspect(JAM.policy.p3) {
      return d$$55.promise(c$$54);
    }
  }
  function v728(a$$104) {
    var v5920 = a$$104 || "fx";
    introspect(JAM.policy.p3) {
      return this.queue(v5920, []);
    }
  }
  function v727(a$$103, b$$70) {
    function v726(b$$71, c$$53) {
      function v725() {
        clearTimeout(d$$54);
        return;
      }
      var d$$54 = setTimeout(b$$71, a$$103);
      c$$53.stop = v725;
      return;
    }
    var v12889;
    var v18373 = f$$4.fx;
    if (v18373) {
      var v25992 = f$$4.fx;
      var v23582 = v25992.speeds;
      var v18372 = v23582[a$$103];
      var v23583 = !v18372;
      if (v23583) {
        v18372 = a$$103;
      }
      v12889 = v18372;
    } else {
      v12889 = a$$103;
    }
    a$$103 = v12889;
    b$$70 = b$$70 || "fx";
    introspect(JAM.policy.p3) {
      return this.queue(b$$70, v726);
    }
  }
  function v724(a$$102) {
    function v723() {
      introspect(JAM.policy.p3) {
        f$$4.dequeue(this, a$$102);
      }
      return;
    }
    introspect(JAM.policy.p3) {
      return this.each(v723);
    }
  }
  function v722(a$$101, c$$52) {
    function v721() {
      introspect(JAM.policy.p3) {
        var b$$69 = f$$4.queue(this, a$$101, c$$52)
      }
      var v12890 = a$$101 === "fx";
      if (v12890) {
        var v18374 = b$$69[0];
        v12890 = v18374 !== "inprogress";
      }
      var v5921 = v12890;
      if (v5921) {
        introspect(JAM.policy.p3) {
          f$$4.dequeue(this, a$$101);
        }
      }
      return;
    }
    var d$$53 = 2;
    var v12891 = typeof a$$101;
    var v5922 = v12891 != "string";
    if (v5922) {
      c$$52 = a$$101;
      a$$101 = "fx";
      d$$53--;
    }
    var v12892 = arguments.length;
    var v5924 = v12892 < d$$53;
    if (v5924) {
      var v5923 = this[0];
      introspect(JAM.policy.p3) {
        return f$$4.queue(v5923, a$$101);
      }
    }
    var v5925;
    var v12893 = c$$52 === b$$9;
    if (v12893) {
      v5925 = this;
    } else {
      introspect(JAM.policy.p3) {
        v5925 = this.each(v721);
      }
    }
    return v5925;
  }
  function v720(a$$100, b$$68) {
    function v719() {
      introspect(JAM.policy.p3) {
        f$$4.dequeue(a$$100, b$$68);
      }
      return;
    }
    b$$68 = b$$68 || "fx";
    introspect(JAM.policy.p3) {
      var c$$51 = f$$4.queue(a$$100, b$$68)
    }
    introspect(JAM.policy.p3) {
      var d$$52 = c$$51.shift()
    }
    var e$$76 = {};
    var v18375 = d$$52 === "inprogress";
    if (v18375) {
      introspect(JAM.policy.p3) {
        d$$52 = c$$51.shift();
      }
    }
    if (d$$52) {
      var v27583 = b$$68 === "fx";
      if (v27583) {
        introspect(JAM.policy.p3) {
          c$$51.unshift("inprogress");
        }
      }
      var v27584 = b$$68 + ".run";
      introspect(JAM.policy.p3) {
        f$$4._data(a$$100, v27584, e$$76);
      }
      introspect(JAM.policy.p3) {
        d$$52.call(a$$100, v719, e$$76);
      }
    }
    var v12894 = c$$51.length;
    var v18376 = !v12894;
    if (v18376) {
      var v27585 = b$$68 + "queue ";
      var v25993 = v27585 + b$$68;
      var v23584 = v25993 + ".run";
      var v23585 = !0;
      introspect(JAM.policy.p3) {
        f$$4.removeData(a$$100, v23584, v23585);
      }
      n$$57(a$$100, b$$68, "queue");
    }
    return;
  }
  function v718(a$$99, b$$67, c$$50) {
    var d$$51;
    if (a$$99) {
      var v18377 = b$$67 || "fx";
      b$$67 = v18377 + "queue";
      introspect(JAM.policy.p3) {
        d$$51 = f$$4._data(a$$99, b$$67);
      }
      if (c$$50) {
        var v18378;
        var v25994 = !d$$51;
        var v27586 = !v25994;
        if (v27586) {
          introspect(JAM.policy.p3) {
            v25994 = f$$4.isArray(c$$50);
          }
        }
        var v23587 = v25994;
        if (v23587) {
          introspect(JAM.policy.p3) {
            var v23586 = f$$4.makeArray(c$$50)
          }
          introspect(JAM.policy.p3) {
            v18378 = d$$51 = f$$4._data(a$$99, b$$67, v23586);
          }
        } else {
          introspect(JAM.policy.p3) {
            v18378 = d$$51.push(c$$50);
          }
        }
        v18378;
      }
      return d$$51 || [];
    }
    return;
  }
  function v717(a$$98, b$$66, c$$49) {
    var v12895 = !0;
    var v5926 = a$$98 !== v12895;
    if (v5926) {
      c$$49 = b$$66;
      b$$66 = a$$98;
      a$$98 = !1;
    }
    if (b$$66) {
      c$$49 = c$$49 || "fx";
      var d$$50 = c$$49 + "mark";
      var v5927;
      if (a$$98) {
        v5927 = 0;
      } else {
        introspect(JAM.policy.p3) {
          var v18379 = f$$4._data(b$$66, d$$50)
        }
        var v23588 = !v18379;
        if (v23588) {
          v18379 = 1;
        }
        var v12896 = v18379;
        v5927 = v12896 - 1;
      }
      var e$$75 = v5927;
      var v5928;
      if (e$$75) {
        introspect(JAM.policy.p3) {
          v5928 = f$$4._data(b$$66, d$$50, e$$75);
        }
      } else {
        var v18380 = !0;
        introspect(JAM.policy.p3) {
          f$$4.removeData(b$$66, d$$50, v18380);
        }
        v5928 = n$$57(b$$66, c$$49, "mark");
      }
      v5928;
    }
    return;
  }
  function v716(a$$97, b$$65) {
    if (a$$97) {
      var v18381 = b$$65 || "fx";
      b$$65 = v18381 + "mark";
      introspect(JAM.policy.p3) {
        var v25995 = f$$4._data(a$$97, b$$65)
      }
      var v27587 = !v25995;
      if (v27587) {
        v25995 = 0;
      }
      var v23589 = v25995;
      var v18382 = v23589 + 1;
      introspect(JAM.policy.p3) {
        f$$4._data(a$$97, b$$65, v18382);
      }
    }
    return;
  }
  function v715(a$$96) {
    function v714() {
      introspect(JAM.policy.p3) {
        f$$4.removeData(this, a$$96);
      }
      return;
    }
    introspect(JAM.policy.p3) {
      return this.each(v714);
    }
  }
  function v713(a$$95, c$$47) {
    function v712(c$$48) {
      function v711() {
        introspect(JAM.policy.p3) {
          var b$$64 = f$$4(this)
        }
        var v18383 = "setData" + e$$74;
        introspect(JAM.policy.p3) {
          b$$64.triggerHandler(v18383, d$$49);
        }
        introspect(JAM.policy.p3) {
          f$$4.data(this, a$$95, c$$48);
        }
        var v12897 = "changeData" + e$$74;
        introspect(JAM.policy.p3) {
          b$$64.triggerHandler(v12897, d$$49);
        }
        return;
      }
      var v5930 = c$$48 === b$$9;
      if (v5930) {
        var v12898 = "getData" + e$$74;
        var v18384 = d$$49[0];
        var v12899 = [v18384];
        introspect(JAM.policy.p3) {
          m$$13 = this.triggerHandler(v12898, v12899);
        }
        var v18385 = m$$13 === b$$9;
        if (v18385) {
          v18385 = j$$31;
        }
        var v12900 = v18385;
        if (v12900) {
          introspect(JAM.policy.p3) {
            m$$13 = f$$4.data(j$$31, a$$95);
          }
          m$$13 = l$$21(j$$31, a$$95, m$$13);
        }
        var v5929;
        var v18386 = m$$13 === b$$9;
        if (v18386) {
          v18386 = d$$49[1];
        }
        var v12902 = v18386;
        if (v12902) {
          var v12901 = d$$49[0];
          introspect(JAM.policy.p3) {
            v5929 = this.data(v12901);
          }
        } else {
          v5929 = m$$13;
        }
        return v5929;
      }
      d$$49[1] = c$$48;
      introspect(JAM.policy.p3) {
        this.each(v711);
      }
      return;
    }
    function v710() {
      introspect(JAM.policy.p3) {
        f$$4.data(this, a$$95);
      }
      return;
    }
    var d$$49;
    var e$$74;
    var g$$27;
    var h$$29;
    var i$$103;
    var j$$31 = this[0];
    var k$$16 = 0;
    var m$$13 = null;
    var v5935 = a$$95 === b$$9;
    if (v5935) {
      var v5934 = this.length;
      if (v5934) {
        introspect(JAM.policy.p3) {
          m$$13 = f$$4.data(j$$31);
        }
        var v18387 = j$$31.nodeType;
        var v12903 = v18387 === 1;
        if (v12903) {
          introspect(JAM.policy.p3) {
            var v18388 = f$$4._data(j$$31, "parsedAttrs")
          }
          v12903 = !v18388;
        }
        var v5933 = v12903;
        if (v5933) {
          g$$27 = j$$31.attributes;
          i$$103 = g$$27.length;
          var v5931 = k$$16 < i$$103;
          for (;v5931;) {
            var v12904 = g$$27[k$$16];
            h$$29 = v12904.name;
            introspect(JAM.policy.p3) {
              var v18389 = h$$29.indexOf("data-")
            }
            var v12905 = v18389 === 0;
            if (v12905) {
              introspect(JAM.policy.p3) {
                var v23590 = h$$29.substring(5)
              }
              introspect(JAM.policy.p3) {
                h$$29 = f$$4.camelCase(v23590);
              }
              var v23591 = m$$13[h$$29];
              l$$21(j$$31, h$$29, v23591);
            }
            k$$16++;
            v5931 = k$$16 < i$$103;
          }
          var v5932 = !0;
          introspect(JAM.policy.p3) {
            f$$4._data(j$$31, "parsedAttrs", v5932);
          }
        }
      }
      return m$$13;
    }
    var v12906 = typeof a$$95;
    var v5936 = v12906 == "object";
    if (v5936) {
      introspect(JAM.policy.p3) {
        return this.each(v710);
      }
    }
    introspect(JAM.policy.p3) {
      d$$49 = a$$95.split(".", 2);
    }
    var v18390;
    var v23593 = d$$49[1];
    if (v23593) {
      var v23592 = d$$49[1];
      v18390 = "." + v23592;
    } else {
      v18390 = "";
    }
    d$$49[1] = v18390;
    var v12907 = d$$49[1];
    e$$74 = v12907 + "!";
    var v12908 = arguments.length;
    var v5937 = v12908 > 1;
    var v5938 = !1;
    introspect(JAM.policy.p3) {
      return f$$4.access(this, v712, null, c$$47, v5937, null, v5938);
    }
  }
  function v709(a$$94) {
    var v5942 = a$$94.nodeName;
    if (v5942) {
      var v5939 = f$$4.noData;
      var v12909 = a$$94.nodeName;
      introspect(JAM.policy.p3) {
        var v5940 = v12909.toLowerCase()
      }
      var b$$63 = v5939[v5940];
      if (b$$63) {
        var v12910 = !0;
        var v5941 = b$$63 !== v12910;
        if (v5941) {
          introspect(JAM.policy.p3) {
            var v12911 = a$$94.getAttribute("classid")
          }
          v5941 = v12911 === b$$63;
        }
        return v5941;
      }
    }
    return !0;
  }
  function v708(a$$93, b$$62, c$$46) {
    var v5943 = !0;
    introspect(JAM.policy.p3) {
      return f$$4.data(a$$93, b$$62, c$$46, v5943);
    }
  }
  function v707(a$$92, b$$61, c$$45) {
    introspect(JAM.policy.p3) {
      var v18391 = f$$4.acceptData(a$$92)
    }
    var v12912 = !v18391;
    var v5955 = !v12912;
    if (v5955) {
      var d$$48;
      var e$$73;
      var g$$26;
      var h$$28 = f$$4.expando;
      var i$$102 = a$$92.nodeType;
      var v5944;
      if (i$$102) {
        v5944 = f$$4.cache;
      } else {
        v5944 = a$$92;
      }
      var j$$30 = v5944;
      var v5945;
      if (i$$102) {
        v5945 = a$$92[h$$28];
      } else {
        v5945 = h$$28;
      }
      var k$$15 = v5945;
      var v12913 = j$$30[k$$15];
      var v5946 = !v12913;
      if (v5946) {
        return;
      }
      if (b$$61) {
        var v5947;
        if (c$$45) {
          v5947 = j$$30[k$$15];
        } else {
          var v12914 = j$$30[k$$15];
          v5947 = v12914.data;
        }
        d$$48 = v5947;
        if (d$$48) {
          introspect(JAM.policy.p3) {
            var v5948 = f$$4.isArray(b$$61)
          }
          var v12916 = !v5948;
          if (v12916) {
            var v12915;
            var v18392 = b$$61 in d$$48;
            if (v18392) {
              v12915 = b$$61 = [b$$61];
            } else {
              introspect(JAM.policy.p3) {
                b$$61 = f$$4.camelCase(b$$61);
              }
              var v23594;
              var v25996 = b$$61 in d$$48;
              if (v25996) {
                v23594 = b$$61 = [b$$61];
              } else {
                introspect(JAM.policy.p3) {
                  v23594 = b$$61 = b$$61.split(" ");
                }
              }
              v12915 = v23594;
            }
            v12915;
          }
          e$$73 = 0;
          g$$26 = b$$61.length;
          var v5950 = e$$73 < g$$26;
          for (;v5950;) {
            var v5949 = b$$61[e$$73];
            delete d$$48[v5949];
            e$$73++;
            v5950 = e$$73 < g$$26;
          }
          var v23595;
          if (c$$45) {
            v23595 = m$$4;
          } else {
            v23595 = f$$4.isEmptyObject;
          }
          var v18393 = v23595;
          introspect(JAM.policy.p3) {
            var v12917 = v18393(d$$48)
          }
          var v5951 = !v12917;
          if (v5951) {
            return;
          }
        }
      }
      var v5954 = !c$$45;
      if (v5954) {
        var v5952 = j$$30[k$$15];
        delete v5952.data;
        var v18394 = j$$30[k$$15];
        var v12918 = m$$4(v18394);
        var v5953 = !v12918;
        if (v5953) {
          return;
        }
      }
      var v12919;
      var v25997 = f$$4.support;
      var v23596 = v25997.deleteExpando;
      var v25999 = !v23596;
      if (v25999) {
        var v25998 = j$$30.setInterval;
        v23596 = !v25998;
      }
      var v18395 = v23596;
      if (v18395) {
        v12919 = delete j$$30[k$$15];
      } else {
        introspect(JAM.policy.p2) {
          v12919 = j$$30[k$$15] = null;
        }
      }
      v12919;
      if (i$$102) {
        var v18396;
        var v26000 = f$$4.support;
        var v23598 = v26000.deleteExpando;
        if (v23598) {
          v18396 = delete a$$92[h$$28];
        } else {
          var v23597;
          var v26001 = a$$92.removeAttribute;
          if (v26001) {
            introspect(JAM.policy.p3) {
              v23597 = a$$92.removeAttribute(h$$28);
            }
          } else {
            introspect(JAM.policy.p2) {
              v23597 = a$$92[h$$28] = null;
            }
          }
          v18396 = v23597;
        }
        v18396;
      }
    }
    return;
  }
  function v706(a$$91, c$$44, d$$47, e$$72) {
    introspect(JAM.policy.p3) {
      var v18397 = f$$4.acceptData(a$$91)
    }
    var v12920 = !v18397;
    var v5964 = !v12920;
    if (v5964) {
      var g$$25;
      var h$$27;
      var i$$101;
      var j$$29 = f$$4.expando;
      var v5956 = typeof c$$44;
      var k$$14 = v5956 == "string";
      var l$$31 = a$$91.nodeType;
      var v5957;
      if (l$$31) {
        v5957 = f$$4.cache;
      } else {
        v5957 = a$$91;
      }
      var m$$12 = v5957;
      var v5958;
      if (l$$31) {
        v5958 = a$$91[j$$29];
      } else {
        var v12921 = a$$91[j$$29];
        if (v12921) {
          v12921 = j$$29;
        }
        v5958 = v12921;
      }
      var n$$63 = v5958;
      var o$$5 = c$$44 === "events";
      var v26002 = !n$$63;
      var v27589 = !v26002;
      if (v27589) {
        var v27588 = m$$12[n$$63];
        v26002 = !v27588;
      }
      var v23599 = v26002;
      var v26004 = !v23599;
      if (v26004) {
        var v27590 = !o$$5;
        if (v27590) {
          v27590 = !e$$72;
        }
        var v26003 = v27590;
        if (v26003) {
          var v28600 = m$$12[n$$63];
          var v27591 = v28600.data;
          v26003 = !v27591;
        }
        v23599 = v26003;
      }
      var v18398 = v23599;
      if (v18398) {
        v18398 = k$$14;
      }
      var v12922 = v18398;
      if (v12922) {
        v12922 = d$$47 === b$$9;
      }
      var v5959 = v12922;
      if (v5959) {
        return;
      }
      var v18400 = !n$$63;
      if (v18400) {
        var v18399;
        if (l$$31) {
          var v26005 = f$$4.uuid;
          introspect(JAM.policy.p2) {
            v18399 = a$$91[j$$29] = n$$63 = f$$4.uuid = v26005 + 1;
          }
        } else {
          v18399 = n$$63 = j$$29;
        }
        v18399;
      }
      var v12923 = m$$12[n$$63];
      var v18401 = !v12923;
      if (v18401) {
        introspect(JAM.policy.p2) {
          m$$12[n$$63] = {};
        }
        var v26007 = !l$$31;
        if (v26007) {
          var v26006 = m$$12[n$$63];
          v26006.toJSON = f$$4.noop;
        }
      }
      var v18402 = typeof c$$44;
      var v12924 = v18402 == "object";
      var v18404 = !v12924;
      if (v18404) {
        var v18403 = typeof c$$44;
        v12924 = v18403 == "function";
      }
      var v5961 = v12924;
      if (v5961) {
        var v5960;
        if (e$$72) {
          var v12925 = m$$12[n$$63];
          introspect(JAM.policy.p3) {
            var v31137 = f$$4.extend(v12925, c$$44)
          }
          introspect(JAM.policy.p2) {
            v5960 = m$$12[n$$63] = v31137;
          }
        } else {
          var v12926 = m$$12[n$$63];
          var v23600 = m$$12[n$$63];
          var v18405 = v23600.data;
          introspect(JAM.policy.p3) {
            var v31138 = f$$4.extend(v18405, c$$44)
          }
          v5960 = v12926.data = v31138;
        }
        v5960;
      }
      g$$25 = h$$27 = m$$12[n$$63];
      var v23601 = !e$$72;
      if (v23601) {
        var v26008 = h$$27.data;
        var v27592 = !v26008;
        if (v27592) {
          h$$27.data = {};
        }
        h$$27 = h$$27.data;
      }
      var v12927 = d$$47 !== b$$9;
      if (v12927) {
        introspect(JAM.policy.p3) {
          var v18406 = f$$4.camelCase(c$$44)
        }
        introspect(JAM.policy.p2) {
          h$$27[v18406] = d$$47;
        }
      }
      var v12928 = o$$5;
      if (v12928) {
        var v18407 = h$$27[c$$44];
        v12928 = !v18407;
      }
      var v5962 = v12928;
      if (v5962) {
        return g$$25.events;
      }
      var v5963;
      if (k$$14) {
        i$$101 = h$$27[c$$44];
        var v18408 = i$$101 == null;
        if (v18408) {
          introspect(JAM.policy.p3) {
            var v23602 = f$$4.camelCase(c$$44)
          }
          v18408 = i$$101 = h$$27[v23602];
        }
        v5963 = v18408;
      } else {
        v5963 = i$$101 = h$$27;
      }
      v5963;
      return i$$101;
    }
    return;
  }
  function v705(a$$90) {
    var v5965;
    var v12932 = a$$90.nodeType;
    if (v12932) {
      var v12929 = f$$4.cache;
      var v18409 = f$$4.expando;
      var v12930 = a$$90[v18409];
      v5965 = v12929[v12930];
    } else {
      var v12931 = f$$4.expando;
      v5965 = a$$90[v12931];
    }
    a$$90 = v5965;
    var v12933 = !a$$90;
    var v5966 = !v12933;
    if (v5966) {
      var v12934 = m$$4(a$$90);
      v5966 = !v12934;
    }
    return v5966;
  }
  function v704() {
    function v703() {
      var d$$46;
      var e$$71;
      var g$$24;
      var h$$26;
      var i$$100;
      var j$$28;
      var l$$30;
      var m$$11;
      var n$$62;
      var q$$3;
      var r$$5;
      var s$$17;
      var t$$4;
      introspect(JAM.policy.p3) {
        var v5967 = c$$5.getElementsByTagName("body")
      }
      var u$$3 = v5967[0];
      var v5968 = !u$$3;
      var v12935 = !v5968;
      if (v12935) {
        m$$11 = 1;
        t$$4 = "padding:0;margin:0;border:";
        r$$5 = "position:absolute;top:0;left:0;width:1px;height:1px;";
        s$$17 = t$$4 + "0;visibility:hidden;";
        var v30905 = "style='" + r$$5;
        var v30903 = v30905 + t$$4;
        n$$62 = v30903 + "5px solid #000;";
        var v30910 = "<div " + n$$62;
        var v30909 = v30910 + "display:block;'><div style='";
        var v30908 = v30909 + t$$4;
        var v30907 = v30908 + "0;display:block;overflow:hidden;'></div></div>";
        var v30906 = v30907 + "<table ";
        var v30904 = v30906 + n$$62;
        var v30901 = v30904 + "' cellpadding='0' cellspacing='0'>";
        q$$3 = v30901 + "<tr><td></td></tr></table>";
        introspect(JAM.policy.p3) {
          d$$46 = c$$5.createElement("div");
        }
        var v30897 = d$$46.style;
        var v30902 = s$$17 + "width:0;height:0;position:static;top:0;margin-top:";
        var v30899 = v30902 + m$$11;
        v30897.cssText = v30899 + "px";
        var v30895 = u$$3.firstChild;
        introspect(JAM.policy.p3) {
          u$$3.insertBefore(d$$46, v30895);
        }
        introspect(JAM.policy.p3) {
          p$$26 = c$$5.createElement("div");
        }
        introspect(JAM.policy.p3) {
          d$$46.appendChild(p$$26);
        }
        var v30887 = "<table><tr><td style='" + t$$4;
        p$$26.innerHTML = v30887 + "0;display:none'></td><td>t</td></tr></table>";
        introspect(JAM.policy.p3) {
          k$$13 = p$$26.getElementsByTagName("td");
        }
        var v30882 = k$$13[0];
        var v30877 = v30882.offsetHeight;
        o$$4 = v30877 === 0;
        var v30878 = k$$13[0];
        var v30871 = v30878.style;
        v30871.display = "";
        var v30872 = k$$13[1];
        var v30866 = v30872.style;
        v30866.display = "none";
        var v30863 = o$$4;
        if (v30863) {
          var v30873 = k$$13[0];
          var v30867 = v30873.offsetHeight;
          v30863 = v30867 === 0;
        }
        b$$60.reliableHiddenOffsets = v30863;
        var v30861 = a$$13.getComputedStyle;
        if (v30861) {
          p$$26.innerHTML = "";
          introspect(JAM.policy.p3) {
            l$$30 = c$$5.createElement("div");
          }
          var v30888 = l$$30.style;
          v30888.width = "0";
          var v30883 = l$$30.style;
          v30883.marginRight = "0";
          var v30879 = p$$26.style;
          v30879.width = "2px";
          introspect(JAM.policy.p3) {
            p$$26.appendChild(l$$30);
          }
          var v30868 = b$$60;
          introspect(JAM.policy.p3) {
            var v30891 = a$$13.getComputedStyle(l$$30, null)
          }
          var v30893 = !v30891;
          if (v30893) {
            v30891 = {marginRight:0};
          }
          var v30889 = v30891;
          var v30884 = v30889.marginRight;
          var v30880 = parseInt(v30884, 10);
          var v30885 = !v30880;
          if (v30885) {
            v30880 = 0;
          }
          var v30874 = v30880;
          v30868.reliableMarginRight = v30874 === 0;
        }
        var v30869 = p$$26.style;
        var v30864 = v30869.zoom;
        var v30862 = typeof v30864;
        var v30859 = v30862 != "undefined";
        if (v30859) {
          p$$26.innerHTML = "";
          var v30898 = p$$26.style;
          var v30900 = p$$26.style;
          v30898.width = v30900.padding = "1px";
          var v30896 = p$$26.style;
          v30896.border = 0;
          var v30894 = p$$26.style;
          v30894.overflow = "hidden";
          var v30892 = p$$26.style;
          v30892.display = "inline";
          var v30890 = p$$26.style;
          v30890.zoom = 1;
          var v30886 = p$$26.offsetWidth;
          b$$60.inlineBlockNeedsLayout = v30886 === 3;
          var v30881 = p$$26.style;
          v30881.display = "block";
          var v30875 = p$$26.style;
          v30875.overflow = "visible";
          p$$26.innerHTML = "<div style='width:5px;'></div>";
          var v30865 = p$$26.offsetWidth;
          b$$60.shrinkWrapBlocks = v30865 !== 3;
        }
        var v30854 = p$$26.style;
        v30854.cssText = r$$5 + s$$17;
        p$$26.innerHTML = q$$3;
        e$$71 = p$$26.firstChild;
        g$$24 = e$$71.firstChild;
        var v30801 = e$$71.nextSibling;
        var v30772 = v30801.firstChild;
        i$$100 = v30772.firstChild;
        var v30773 = g$$24.offsetTop;
        var v30742 = v30773 !== 5;
        var v30774 = i$$100.offsetTop;
        var v30743 = v30774 === 5;
        j$$28 = {doesNotAddBorder:v30742, doesAddBorderForTableAndCells:v30743};
        var v30695 = g$$24.style;
        v30695.position = "fixed";
        var v30619 = g$$24.style;
        v30619.top = "20px";
        var v30620 = g$$24.offsetTop;
        var v30500 = v30620 === 20;
        var v30622 = !v30500;
        if (v30622) {
          var v30621 = g$$24.offsetTop;
          v30500 = v30621 === 15;
        }
        j$$28.fixedPosition = v30500;
        var v30372 = g$$24.style;
        var v30501 = g$$24.style;
        v30372.position = v30501.top = "";
        var v30199 = e$$71.style;
        v30199.overflow = "hidden";
        var v29964 = e$$71.style;
        v29964.position = "relative";
        var v29691 = g$$24.offsetTop;
        j$$28.subtractsBorderForOverflowNotVisible = v29691 === -5;
        var v29258 = u$$3.offsetTop;
        j$$28.doesNotIncludeMarginInBodyOffset = v29258 !== m$$11;
        var v28601 = a$$13.getComputedStyle;
        if (v28601) {
          var v29692 = p$$26.style;
          v29692.marginTop = "1%";
          var v29693 = b$$60;
          introspect(JAM.policy.p3) {
            var v30373 = a$$13.getComputedStyle(p$$26, null)
          }
          var v30502 = !v30373;
          if (v30502) {
            v30373 = {marginTop:0};
          }
          var v30200 = v30373;
          var v29965 = v30200.marginTop;
          v29693.pixelMargin = v29965 !== "1%";
        }
        var v29694 = d$$46.style;
        var v29259 = v29694.zoom;
        var v28602 = typeof v29259;
        var v27593 = v28602 != "undefined";
        if (v27593) {
          var v28603 = d$$46.style;
          v28603.zoom = 1;
        }
        introspect(JAM.policy.p3) {
          u$$3.removeChild(d$$46);
        }
        l$$30 = p$$26 = d$$46 = null;
        introspect(JAM.policy.p3) {
          f$$4.extend(b$$60, j$$28);
        }
      }
      return;
    }
    function v702() {
      b$$60.noCloneEvent = !1;
      return;
    }
    var b$$60;
    var d$$45;
    var e$$70;
    var g$$23;
    var h$$25;
    var i$$99;
    var j$$27;
    var k$$13;
    var l$$29;
    var m$$10;
    var n$$61;
    var o$$4;
    introspect(JAM.policy.p3) {
      var p$$26 = c$$5.createElement("div")
    }
    var q$$2 = c$$5.documentElement;
    introspect(JAM.policy.p3) {
      p$$26.setAttribute("className", "t");
    }
    p$$26.innerHTML = "   <link/><table></table><a href='/a' style='top:1px;float:left;opacity:.55;'>a</a><input type='checkbox'/>";
    introspect(JAM.policy.p3) {
      d$$45 = p$$26.getElementsByTagName("*");
    }
    introspect(JAM.policy.p3) {
      var v12936 = p$$26.getElementsByTagName("a")
    }
    e$$70 = v12936[0];
    var v18410 = !d$$45;
    var v23604 = !v18410;
    if (v23604) {
      var v23603 = d$$45.length;
      v18410 = !v23603;
    }
    var v12937 = v18410;
    var v18411 = !v12937;
    if (v18411) {
      v12937 = !e$$70;
    }
    var v5969 = v12937;
    if (v5969) {
      return {};
    }
    introspect(JAM.policy.p3) {
      g$$23 = c$$5.createElement("select");
    }
    introspect(JAM.policy.p3) {
      var v29695 = c$$5.createElement("option")
    }
    introspect(JAM.policy.p3) {
      h$$25 = g$$23.appendChild(v29695);
    }
    introspect(JAM.policy.p3) {
      var v29260 = p$$26.getElementsByTagName("input")
    }
    i$$99 = v29260[0];
    var v29696 = p$$26.firstChild;
    var v29261 = v29696.nodeType;
    var v28604 = v29261 === 3;
    introspect(JAM.policy.p3) {
      var v29697 = p$$26.getElementsByTagName("tbody")
    }
    var v29262 = v29697.length;
    var v28605 = !v29262;
    introspect(JAM.policy.p3) {
      var v29966 = p$$26.getElementsByTagName("link")
    }
    var v29698 = v29966.length;
    var v29263 = !v29698;
    var v28606 = !v29263;
    introspect(JAM.policy.p3) {
      var v29264 = e$$70.getAttribute("style")
    }
    introspect(JAM.policy.p3) {
      var v28607 = /top/.test(v29264)
    }
    introspect(JAM.policy.p3) {
      var v29265 = e$$70.getAttribute("href")
    }
    var v28608 = v29265 === "/a";
    var v29699 = e$$70.style;
    var v29266 = v29699.opacity;
    introspect(JAM.policy.p3) {
      var v28609 = /^0.55/.test(v29266)
    }
    var v29967 = e$$70.style;
    var v29700 = v29967.cssFloat;
    var v29267 = !v29700;
    var v28610 = !v29267;
    var v29268 = i$$99.value;
    var v28611 = v29268 === "on";
    var v28612 = h$$25.selected;
    var v29269 = p$$26.className;
    var v28613 = v29269 !== "t";
    introspect(JAM.policy.p3) {
      var v29968 = c$$5.createElement("form")
    }
    var v29701 = v29968.enctype;
    var v29270 = !v29701;
    var v28614 = !v29270;
    introspect(JAM.policy.p3) {
      var v29969 = c$$5.createElement("nav")
    }
    var v29970 = !0;
    introspect(JAM.policy.p3) {
      var v29702 = v29969.cloneNode(v29970)
    }
    var v29271 = v29702.outerHTML;
    var v28615 = v29271 !== "<:nav></:nav>";
    var v28616 = !0;
    var v28617 = !0;
    var v28618 = !1;
    var v28619 = !0;
    var v28620 = !0;
    var v28621 = !1;
    var v28622 = !1;
    var v28623 = !0;
    var v28624 = !0;
    b$$60 = {leadingWhitespace:v28604, tbody:v28605, htmlSerialize:v28606, style:v28607, hrefNormalized:v28608, opacity:v28609, cssFloat:v28610, checkOn:v28611, optSelected:v28612, getSetAttribute:v28613, enctype:v28614, html5Clone:v28615, submitBubbles:v28616, changeBubbles:v28617, focusinBubbles:v28618, deleteExpando:v28619, noCloneEvent:v28620, inlineBlockNeedsLayout:v28621, shrinkWrapBlocks:v28622, reliableMarginRight:v28623, pixelMargin:v28624};
    var v27594 = c$$5.compatMode;
    f$$4.boxModel = b$$60.boxModel = v27594 === "CSS1Compat";
    i$$99.checked = !0;
    var v23605 = b$$60;
    var v27595 = !0;
    introspect(JAM.policy.p3) {
      var v26009 = i$$99.cloneNode(v27595)
    }
    v23605.noCloneChecked = v26009.checked;
    g$$23.disabled = !0;
    var v12938 = h$$25.disabled;
    b$$60.optDisabled = !v12938;
    try {
      delete p$$26.test;
    } catch (r$$4) {
      b$$60.deleteExpando = !1;
    }
    var v30775 = p$$26.addEventListener;
    var v30744 = !v30775;
    if (v30744) {
      v30744 = p$$26.attachEvent;
    }
    var v30696 = v30744;
    if (v30696) {
      v30696 = p$$26.fireEvent;
    }
    var v30623 = v30696;
    if (v30623) {
      introspect(JAM.policy.p3) {
        p$$26.attachEvent("onclick", v702);
      }
      var v30776 = !0;
      introspect(JAM.policy.p3) {
        var v30745 = p$$26.cloneNode(v30776)
      }
      introspect(JAM.policy.p3) {
        v30745.fireEvent("onclick");
      }
    }
    introspect(JAM.policy.p3) {
      i$$99 = c$$5.createElement("input");
    }
    i$$99.value = "t";
    introspect(JAM.policy.p3) {
      i$$99.setAttribute("type", "radio");
    }
    var v30201 = i$$99.value;
    b$$60.radioValue = v30201 === "t";
    introspect(JAM.policy.p3) {
      i$$99.setAttribute("checked", "checked");
    }
    introspect(JAM.policy.p3) {
      i$$99.setAttribute("name", "t");
    }
    introspect(JAM.policy.p3) {
      p$$26.appendChild(i$$99);
    }
    introspect(JAM.policy.p3) {
      j$$27 = c$$5.createDocumentFragment();
    }
    var v27596 = p$$26.lastChild;
    introspect(JAM.policy.p3) {
      j$$27.appendChild(v27596);
    }
    var v26010 = b$$60;
    var v29703 = !0;
    introspect(JAM.policy.p3) {
      var v29272 = j$$27.cloneNode(v29703)
    }
    var v29273 = !0;
    introspect(JAM.policy.p3) {
      var v28625 = v29272.cloneNode(v29273)
    }
    var v27597 = v28625.lastChild;
    v26010.checkClone = v27597.checked;
    b$$60.appendChecked = i$$99.checked;
    introspect(JAM.policy.p3) {
      j$$27.removeChild(i$$99);
    }
    introspect(JAM.policy.p3) {
      j$$27.appendChild(p$$26);
    }
    var v5971 = p$$26.attachEvent;
    if (v5971) {
      var v5970 = {submit:1, change:1, focusin:1};
      for (n$$61 in v5970) {
        m$$10 = "on" + n$$61;
        o$$4 = m$$10 in p$$26;
        var v23606 = !o$$4;
        if (v23606) {
          introspect(JAM.policy.p3) {
            p$$26.setAttribute(m$$10, "return;");
          }
          var v27598 = p$$26[m$$10];
          var v26011 = typeof v27598;
          o$$4 = v26011 == "function";
        }
        var v12939 = n$$61 + "Bubbles";
        introspect(JAM.policy.p2) {
          b$$60[v12939] = o$$4;
        }
      }
    }
    introspect(JAM.policy.p3) {
      j$$27.removeChild(p$$26);
    }
    j$$27 = g$$23 = h$$25 = p$$26 = i$$99 = null;
    introspect(JAM.policy.p3) {
      f$$4(v703);
    }
    return b$$60;
  }
  function v701(a$$87) {
    function m$$9(a$$88) {
      function v699(b$$59) {
        var v12940 = e$$69;
        var v12941 = a$$88;
        var v18412;
        var v26012 = arguments.length;
        var v23607 = v26012 > 1;
        if (v23607) {
          introspect(JAM.policy.p3) {
            v18412 = i$$85.call(arguments, 0);
          }
        } else {
          v18412 = b$$59;
        }
        introspect(JAM.policy.p2) {
          v12940[v12941] = v18412;
        }
        introspect(JAM.policy.p3) {
          j$$26.notifyWith(k$$12, e$$69);
        }
        return;
      }
      return v699;
    }
    function l$$28(a$$89) {
      function v700(c$$43) {
        var v12942 = b$$58;
        var v12943 = a$$89;
        var v18413;
        var v26013 = arguments.length;
        var v23608 = v26013 > 1;
        if (v23608) {
          introspect(JAM.policy.p3) {
            v18413 = i$$85.call(arguments, 0);
          }
        } else {
          v18413 = c$$43;
        }
        introspect(JAM.policy.p2) {
          v12942[v12943] = v18413;
        }
        var v12944 = g$$22 = g$$22 - 1;
        var v18414 = !v12944;
        if (v18414) {
          introspect(JAM.policy.p3) {
            j$$26.resolveWith(j$$26, b$$58);
          }
        }
        return;
      }
      return v700;
    }
    introspect(JAM.policy.p3) {
      var b$$58 = i$$85.call(arguments, 0)
    }
    var c$$42 = 0;
    var d$$44 = b$$58.length;
    var e$$69 = Array(d$$44);
    var g$$22 = d$$44;
    var h$$24 = d$$44;
    var v5972;
    var v23609 = d$$44 <= 1;
    if (v23609) {
      v23609 = a$$87;
    }
    var v18415 = v23609;
    if (v18415) {
      var v23610 = a$$87.promise;
      introspect(JAM.policy.p3) {
        v18415 = f$$4.isFunction(v23610);
      }
    }
    var v12945 = v18415;
    if (v12945) {
      v5972 = a$$87;
    } else {
      introspect(JAM.policy.p3) {
        v5972 = f$$4.Deferred();
      }
    }
    var j$$26 = v5972;
    introspect(JAM.policy.p3) {
      var k$$12 = j$$26.promise()
    }
    var v5976 = d$$44 > 1;
    if (v5976) {
      var v5974 = c$$42 < d$$44;
      for (;v5974;) {
        var v5973;
        var v23611 = b$$58[c$$42];
        if (v23611) {
          var v26014 = b$$58[c$$42];
          v23611 = v26014.promise;
        }
        var v18416 = v23611;
        if (v18416) {
          var v26015 = b$$58[c$$42];
          var v23612 = v26015.promise;
          introspect(JAM.policy.p3) {
            v18416 = f$$4.isFunction(v23612);
          }
        }
        var v12950 = v18416;
        if (v12950) {
          var v18417 = b$$58[c$$42];
          introspect(JAM.policy.p3) {
            var v12946 = v18417.promise()
          }
          var v12947 = l$$28(c$$42);
          var v12948 = j$$26.reject;
          var v12949 = m$$9(c$$42);
          introspect(JAM.policy.p3) {
            v5973 = v12946.then(v12947, v12948, v12949);
          }
        } else {
          v5973 = g$$22 = g$$22 - 1;
        }
        v5973;
        c$$42++;
        v5974 = c$$42 < d$$44;
      }
      var v12951 = !g$$22;
      if (v12951) {
        introspect(JAM.policy.p3) {
          j$$26.resolveWith(j$$26, b$$58);
        }
      }
    } else {
      var v5975 = j$$26 !== a$$87;
      if (v5975) {
        var v18418;
        if (d$$44) {
          v18418 = [a$$87];
        } else {
          v18418 = [];
        }
        var v12952 = v18418;
        introspect(JAM.policy.p3) {
          j$$26.resolveWith(j$$26, v12952);
        }
      }
    }
    return k$$12;
  }
  function v698(a$$82) {
    function v697() {
      e$$67 = "rejected";
      return;
    }
    function v696() {
      e$$67 = "resolved";
      return;
    }
    function v695(a$$86) {
      var v5977 = a$$86 == null;
      if (v5977) {
        a$$86 = h$$23;
      } else {
        var b$$57;
        for (b$$57 in h$$23) {
          introspect(JAM.policy.p2) {
            a$$86[b$$57] = h$$23[b$$57];
          }
        }
      }
      return a$$86;
    }
    function v694(a$$84, b$$55, c$$40) {
      function v693(d$$43) {
        function v692(a$$85, b$$56) {
          function v691() {
            introspect(JAM.policy.p3) {
              g$$21 = c$$41.apply(this, arguments);
            }
            var v12953;
            var v23613 = g$$21;
            if (v23613) {
              var v26016 = g$$21.promise;
              introspect(JAM.policy.p3) {
                v23613 = f$$4.isFunction(v26016);
              }
            }
            var v18426 = v23613;
            if (v18426) {
              introspect(JAM.policy.p3) {
                var v18419 = g$$21.promise()
              }
              var v18420 = d$$43.resolve;
              var v18421 = d$$43.reject;
              var v18422 = d$$43.notify;
              introspect(JAM.policy.p3) {
                v12953 = v18419.then(v18420, v18421, v18422);
              }
            } else {
              var v18423 = e$$68 + "With";
              var v23614;
              var v26017 = this === i$$98;
              if (v26017) {
                v23614 = d$$43;
              } else {
                v23614 = this;
              }
              var v18424 = v23614;
              var v18425 = [g$$21];
              introspect(JAM.policy.p3) {
                v12953 = d$$43[v18423](v18424, v18425);
              }
            }
            v12953;
            return;
          }
          var c$$41 = b$$56[0];
          var e$$68 = b$$56[1];
          var g$$21;
          var v5978;
          introspect(JAM.policy.p3) {
            var v12955 = f$$4.isFunction(c$$41)
          }
          if (v12955) {
            introspect(JAM.policy.p3) {
              v5978 = i$$98[a$$85](v691);
            }
          } else {
            var v12954 = d$$43[e$$68];
            introspect(JAM.policy.p3) {
              v5978 = i$$98[a$$85](v12954);
            }
          }
          v5978;
          return;
        }
        var v12956 = [a$$84, "resolve"];
        var v12957 = [b$$55, "reject"];
        var v12958 = [c$$40, "notify"];
        var v5979 = {done:v12956, fail:v12957, progress:v12958};
        introspect(JAM.policy.p3) {
          f$$4.each(v5979, v692);
        }
        return;
      }
      introspect(JAM.policy.p3) {
        var v5980 = f$$4.Deferred(v693)
      }
      introspect(JAM.policy.p3) {
        return v5980.promise();
      }
    }
    function v690() {
      var v18427 = i$$98.done;
      introspect(JAM.policy.p3) {
        var v12959 = v18427.apply(i$$98, arguments)
      }
      var v5981 = v12959.fail;
      introspect(JAM.policy.p3) {
        v5981.apply(i$$98, arguments);
      }
      return this;
    }
    function v689(a$$83, b$$54, c$$39) {
      introspect(JAM.policy.p3) {
        var v12960 = i$$98.done(a$$83)
      }
      introspect(JAM.policy.p3) {
        var v5982 = v12960.fail(b$$54)
      }
      introspect(JAM.policy.p3) {
        v5982.progress(c$$39);
      }
      return this;
    }
    function v688() {
      return e$$67;
    }
    introspect(JAM.policy.p3) {
      var b$$53 = f$$4.Callbacks("once memory")
    }
    introspect(JAM.policy.p3) {
      var c$$38 = f$$4.Callbacks("once memory")
    }
    introspect(JAM.policy.p3) {
      var d$$42 = f$$4.Callbacks("memory")
    }
    var e$$67 = "pending";
    var g$$20 = {resolve:b$$53, reject:c$$38, notify:d$$42};
    var v5983 = b$$53.add;
    var v5984 = c$$38.add;
    var v5985 = d$$42.add;
    var v5986 = b$$53.fired;
    var v5987 = c$$38.fired;
    var h$$23 = {done:v5983, fail:v5984, progress:v5985, state:v688, isResolved:v5986, isRejected:v5987, then:v689, always:v690, pipe:v694, promise:v695};
    introspect(JAM.policy.p3) {
      var i$$98 = h$$23.promise({})
    }
    var j$$25;
    for (j$$25 in g$$20) {
      var v12961 = g$$20[j$$25];
      introspect(JAM.policy.p2) {
        i$$98[j$$25] = v12961.fire;
      }
      var v12962 = j$$25 + "With";
      var v18428 = g$$20[j$$25];
      introspect(JAM.policy.p2) {
        i$$98[v12962] = v18428.fireWith;
      }
    }
    var v18429 = c$$38.disable;
    var v18430 = d$$42.lock;
    introspect(JAM.policy.p3) {
      var v12963 = i$$98.done(v696, v18429, v18430)
    }
    var v12964 = b$$53.disable;
    var v12965 = d$$42.lock;
    introspect(JAM.policy.p3) {
      v12963.fail(v697, v12964, v12965);
    }
    if (a$$82) {
      introspect(JAM.policy.p3) {
        a$$82.call(i$$98, i$$98);
      }
    }
    return i$$98;
  }
  function v687(a$$79) {
    function v686() {
      var v5988 = !i$$96;
      return !v5988;
    }
    function v685() {
      introspect(JAM.policy.p3) {
        p$$25.fireWith(this, arguments);
      }
      return this;
    }
    function v684(b$$52, c$$37) {
      if (d$$38) {
        var v12966;
        if (j$$24) {
          var v18431 = a$$79.once;
          var v23616 = !v18431;
          if (v23616) {
            var v23615 = [b$$52, c$$37];
            introspect(JAM.policy.p3) {
              v18431 = d$$38.push(v23615);
            }
          }
          v12966 = v18431;
        } else {
          var v26018 = a$$79.once;
          var v23617 = !v26018;
          var v26019 = !v23617;
          if (v26019) {
            v23617 = !e$$64;
          }
          var v18432 = v23617;
          if (v18432) {
            v18432 = o$$3(b$$52, c$$37);
          }
          v12966 = v18432;
        }
        v12966;
      }
      return this;
    }
    function v683() {
      return !d$$38;
    }
    function v682() {
      d$$38 = b$$9;
      var v18433 = !e$$64;
      var v23619 = !v18433;
      if (v23619) {
        var v23618 = !0;
        v18433 = e$$64 === v23618;
      }
      var v12967 = v18433;
      if (v12967) {
        introspect(JAM.policy.p3) {
          p$$25.disable();
        }
      }
      return this;
    }
    function v681() {
      return !c$$36;
    }
    function v680() {
      c$$36 = d$$38 = e$$64 = b$$9;
      return this;
    }
    function v679() {
      c$$36 = [];
      return this;
    }
    function v678(a$$81) {
      if (c$$36) {
        var b$$51 = 0;
        var d$$41 = c$$36.length;
        var v5990 = b$$51 < d$$41;
        for (;v5990;) {
          var v12968 = c$$36[b$$51];
          var v5989 = a$$81 === v12968;
          if (v5989) {
            return !0;
          }
          b$$51++;
          v5990 = b$$51 < d$$41;
        }
      }
      return !1;
    }
    function v677() {
      if (c$$36) {
        var b$$50 = arguments;
        var d$$40 = 0;
        var e$$66 = b$$50.length;
        var v5994 = d$$40 < e$$66;
        for (;v5994;) {
          var f$$19 = 0;
          var v12969 = c$$36.length;
          var v5993 = f$$19 < v12969;
          for (;v5993;) {
            var v12970 = b$$50[d$$40];
            var v12971 = c$$36[f$$19];
            var v5992 = v12970 === v12971;
            if (v5992) {
              var v18434 = j$$24;
              if (v18434) {
                v18434 = f$$19 <= l$$27;
              }
              var v12972 = v18434;
              if (v12972) {
                l$$27--;
                var v23620 = f$$19 <= m$$8;
                if (v23620) {
                  m$$8--;
                }
              }
              var v12973 = f$$19;
              f$$19 = f$$19 - 1;
              introspect(JAM.policy.p3) {
                c$$36.splice(v12973, 1);
              }
              var v5991 = a$$79.unique;
              if (v5991) {
                break;
              }
            }
            f$$19++;
            var v12974 = c$$36.length;
            v5993 = f$$19 < v12974;
          }
          d$$40++;
          v5994 = d$$40 < e$$66;
        }
      }
      return this;
    }
    function v676() {
      if (c$$36) {
        var a$$80 = c$$36.length;
        n$$60(arguments);
        var v12975;
        if (j$$24) {
          v12975 = l$$27 = c$$36.length;
        } else {
          var v23621 = e$$64;
          if (v23621) {
            var v26020 = !0;
            v23621 = e$$64 !== v26020;
          }
          var v18435 = v23621;
          if (v18435) {
            k$$11 = a$$80;
            var v26021 = e$$64[0];
            var v26022 = e$$64[1];
            v18435 = o$$3(v26021, v26022);
          }
          v12975 = v18435;
        }
        v12975;
      }
      return this;
    }
    function o$$3(b$$49, f$$18) {
      f$$18 = f$$18 || [];
      var v29274 = a$$79.memory;
      var v28626 = !v29274;
      var v29275 = !v28626;
      if (v29275) {
        v28626 = [b$$49, f$$18];
      }
      e$$64 = v28626;
      i$$96 = !0;
      j$$24 = !0;
      m$$8 = k$$11 || 0;
      k$$11 = 0;
      l$$27 = c$$36.length;
      var v12976 = c$$36;
      if (v12976) {
        v12976 = m$$8 < l$$27;
      }
      var v5996 = v12976;
      for (;v5996;) {
        var v23622 = c$$36[m$$8];
        introspect(JAM.policy.p3) {
          var v18436 = v23622.apply(b$$49, f$$18)
        }
        var v18437 = !1;
        var v12977 = v18436 === v18437;
        if (v12977) {
          v12977 = a$$79.stopOnFalse;
        }
        var v5995 = v12977;
        if (v5995) {
          e$$64 = !0;
          break;
        }
        m$$8++;
        var v12978 = c$$36;
        if (v12978) {
          v12978 = m$$8 < l$$27;
        }
        v5996 = v12978;
      }
      j$$24 = !1;
      if (c$$36) {
        var v18438;
        var v23625 = a$$79.once;
        if (v23625) {
          var v23623;
          var v27599 = !0;
          var v26023 = e$$64 === v27599;
          if (v26023) {
            introspect(JAM.policy.p3) {
              v23623 = p$$25.disable();
            }
          } else {
            v23623 = c$$36 = [];
          }
          v18438 = v23623;
        } else {
          var v26024 = d$$38;
          if (v26024) {
            v26024 = d$$38.length;
          }
          var v23624 = v26024;
          if (v23624) {
            introspect(JAM.policy.p3) {
              e$$64 = d$$38.shift();
            }
            var v27600 = e$$64[0];
            var v27601 = e$$64[1];
            introspect(JAM.policy.p3) {
              v23624 = p$$25.fireWith(v27600, v27601);
            }
          }
          v18438 = v23624;
        }
        v18438;
      }
      return;
    }
    function n$$60(b$$48) {
      var d$$39;
      var e$$65;
      var g$$19;
      var h$$22;
      var i$$97;
      d$$39 = 0;
      e$$65 = b$$48.length;
      var v5997 = d$$39 < e$$65;
      for (;v5997;) {
        g$$19 = b$$48[d$$39];
        introspect(JAM.policy.p3) {
          h$$22 = f$$4.type(g$$19);
        }
        var v12979;
        var v18440 = h$$22 === "array";
        if (v18440) {
          v12979 = n$$60(g$$19);
        } else {
          var v23626 = h$$22 === "function";
          if (v23626) {
            var v27602 = a$$79.unique;
            var v26025 = !v27602;
            var v27604 = !v26025;
            if (v27604) {
              introspect(JAM.policy.p3) {
                var v27603 = p$$25.has(g$$19)
              }
              v26025 = !v27603;
            }
            v23626 = v26025;
          }
          var v18439 = v23626;
          if (v18439) {
            introspect(JAM.policy.p3) {
              v18439 = c$$36.push(g$$19);
            }
          }
          v12979 = v18439;
        }
        v12979;
        d$$39++;
        v5997 = d$$39 < e$$65;
      }
      return;
    }
    var v5998;
    if (a$$79) {
      var v12980 = g[a$$79];
      var v18441 = !v12980;
      if (v18441) {
        v12980 = h$$9(a$$79);
      }
      v5998 = v12980;
    } else {
      v5998 = {};
    }
    a$$79 = v5998;
    var c$$36 = [];
    var d$$38 = [];
    var e$$64;
    var i$$96;
    var j$$24;
    var k$$11;
    var l$$27;
    var m$$8;
    var p$$25 = {add:v676, remove:v677, has:v678, empty:v679, disable:v680, disabled:v681, lock:v682, locked:v683, fireWith:v684, fire:v685, fired:v686};
    return p$$25;
  }
  function v675() {
    function v674() {
      var v12981 = c$$5.readyState;
      var v5999 = v12981 === "complete";
      if (v5999) {
        introspect(JAM.policy.p3) {
          c$$5.detachEvent("onreadystatechange", B$$1);
        }
        introspect(JAM.policy.p3) {
          e$$61.ready();
        }
      }
      return;
    }
    function v673() {
      var v12982 = !1;
      introspect(JAM.policy.p3) {
        c$$5.removeEventListener("DOMContentLoaded", B$$1, v12982);
      }
      introspect(JAM.policy.p3) {
        e$$61.ready();
      }
      return;
    }
    function v672(a$$78, b$$47) {
      var v6000 = I$$1;
      var v12983 = "[object " + b$$47;
      var v6001 = v12983 + "]";
      introspect(JAM.policy.p3) {
        var v31139 = b$$47.toLowerCase()
      }
      introspect(JAM.policy.p2) {
        v6000[v6001] = v31139;
      }
      return;
    }
    function v671() {
      function v670(d$$37, f$$17) {
        var v18442 = f$$17;
        if (v18442) {
          v18442 = f$$17 instanceof e$$61;
        }
        var v12984 = v18442;
        if (v12984) {
          var v18443 = f$$17 instanceof a$$77;
          v12984 = !v18443;
        }
        var v6002 = v12984;
        if (v6002) {
          f$$17 = a$$77(f$$17);
        }
        var v12985 = e$$61.fn;
        var v6003 = v12985.init;
        introspect(JAM.policy.p3) {
          return v6003.call(this, d$$37, f$$17, b$$45);
        }
      }
      function a$$77(b$$46, c$$35) {
        var v12986 = a$$77.fn;
        var v6004 = v12986.init;
        return new v6004(b$$46, c$$35);
      }
      var v28627 = !0;
      introspect(JAM.policy.p3) {
        e$$61.extend(v28627, a$$77, this);
      }
      a$$77.superclass = this;
      var v27605 = a$$77;
      var v28628 = a$$77;
      introspect(JAM.policy.p3) {
        var v31140 = this()
      }
      v27605.fn = v28628.prototype = v31140;
      var v26026 = a$$77.fn;
      v26026.constructor = a$$77;
      a$$77.sub = this.sub;
      var v18444 = a$$77.fn;
      v18444.init = v670;
      var v18445 = a$$77.fn;
      var v12987 = v18445.init;
      v12987.prototype = a$$77.fn;
      var b$$45 = a$$77(c$$5);
      return a$$77;
    }
    function v669(a$$76) {
      introspect(JAM.policy.p3) {
        a$$76 = a$$76.toLowerCase();
      }
      introspect(JAM.policy.p3) {
        var v23627 = r$$3.exec(a$$76)
      }
      var v26027 = !v23627;
      if (v26027) {
        introspect(JAM.policy.p3) {
          v23627 = s$$16.exec(a$$76);
        }
      }
      var v18446 = v23627;
      var v23628 = !v18446;
      if (v23628) {
        introspect(JAM.policy.p3) {
          v18446 = t$$3.exec(a$$76);
        }
      }
      var v12988 = v18446;
      var v18448 = !v12988;
      if (v18448) {
        introspect(JAM.policy.p3) {
          var v23629 = a$$76.indexOf("compatible")
        }
        var v18447 = v23629 < 0;
        if (v18447) {
          introspect(JAM.policy.p3) {
            v18447 = u$$2.exec(a$$76);
          }
        }
        v12988 = v18447;
      }
      var v6005 = v12988;
      var v12989 = !v6005;
      if (v12989) {
        v6005 = [];
      }
      var b$$44 = v6005;
      var v12990 = b$$44[1];
      var v18449 = !v12990;
      if (v18449) {
        v12990 = "";
      }
      var v6006 = v12990;
      var v12991 = b$$44[2];
      var v18450 = !v12991;
      if (v18450) {
        v12991 = "0";
      }
      var v6007 = v12991;
      return {browser:v6006, version:v6007};
    }
    function v668() {
      var v6008 = new Date;
      introspect(JAM.policy.p3) {
        return v6008.getTime();
      }
    }
    function v667(a$$74, c$$33, d$$36, f$$16, g$$18, h$$21, i$$95) {
      function v666(a$$75, b$$43, c$$34) {
        var v6009 = e$$61(a$$75);
        introspect(JAM.policy.p3) {
          return j$$23.call(v6009, c$$34);
        }
      }
      var j$$23;
      var k$$10 = d$$36 == null;
      var l$$26 = 0;
      var m$$7 = a$$74.length;
      var v12992 = d$$36;
      if (v12992) {
        var v18451 = typeof d$$36;
        v12992 = v18451 == "object";
      }
      var v6015 = v12992;
      if (v6015) {
        for (l$$26 in d$$36) {
          var v6010 = d$$36[l$$26];
          introspect(JAM.policy.p3) {
            e$$61.access(a$$74, c$$33, l$$26, v6010, 1, h$$21, f$$16);
          }
        }
        g$$18 = 1;
      } else {
        var v6014 = f$$16 !== b$$9;
        if (v6014) {
          var v12993 = i$$95 === b$$9;
          if (v12993) {
            introspect(JAM.policy.p3) {
              v12993 = e$$61.isFunction(f$$16);
            }
          }
          j$$23 = v12993;
          if (k$$10) {
            var v18452;
            if (j$$23) {
              j$$23 = c$$33;
              v18452 = c$$33 = v666;
            } else {
              introspect(JAM.policy.p3) {
                c$$33.call(a$$74, f$$16);
              }
              v18452 = c$$33 = null;
            }
            v18452;
          }
          if (c$$33) {
            var v6013 = l$$26 < m$$7;
            for (;v6013;) {
              var v6011 = a$$74[l$$26];
              var v12994;
              if (j$$23) {
                var v18453 = a$$74[l$$26];
                var v23630 = a$$74[l$$26];
                introspect(JAM.policy.p3) {
                  var v18454 = c$$33(v23630, d$$36)
                }
                introspect(JAM.policy.p3) {
                  v12994 = f$$16.call(v18453, l$$26, v18454);
                }
              } else {
                v12994 = f$$16;
              }
              var v6012 = v12994;
              introspect(JAM.policy.p3) {
                c$$33(v6011, d$$36, v6012, i$$95);
              }
              l$$26++;
              v6013 = l$$26 < m$$7;
            }
          }
          g$$18 = 1;
        }
      }
      var v6016;
      if (g$$18) {
        v6016 = a$$74;
      } else {
        var v12995;
        if (k$$10) {
          introspect(JAM.policy.p3) {
            v12995 = c$$33.call(a$$74);
          }
        } else {
          var v18455;
          if (m$$7) {
            var v23631 = a$$74[0];
            introspect(JAM.policy.p3) {
              v18455 = c$$33(v23631, d$$36);
            }
          } else {
            v18455 = h$$21;
          }
          v12995 = v18455;
        }
        v6016 = v12995;
      }
      return v6016;
    }
    function v665(a$$73, c$$32) {
      function g$$17() {
        introspect(JAM.policy.p3) {
          var v12996 = F$$1.call(arguments)
        }
        introspect(JAM.policy.p3) {
          var v6017 = f$$15.concat(v12996)
        }
        introspect(JAM.policy.p3) {
          return a$$73.apply(c$$32, v6017);
        }
      }
      var v12997 = typeof c$$32;
      var v6018 = v12997 == "string";
      if (v6018) {
        var d$$35 = a$$73[c$$32];
        c$$32 = a$$73;
        a$$73 = d$$35;
      }
      introspect(JAM.policy.p3) {
        var v12998 = e$$61.isFunction(a$$73)
      }
      var v6019 = !v12998;
      if (v6019) {
        return b$$9;
      }
      introspect(JAM.policy.p3) {
        var f$$15 = F$$1.call(arguments, 2)
      }
      var v12999 = a$$73.guid;
      var v18456 = !v12999;
      if (v18456) {
        v12999 = g$$17.guid;
      }
      var v6020 = v12999;
      var v13000 = !v6020;
      if (v13000) {
        v6020 = e$$61.guid;
        var v18457 = e$$61.guid;
        e$$61.guid = v18457 + 1;
      }
      g$$17.guid = a$$73.guid = v6020;
      return g$$17;
    }
    function v664(a$$72, c$$31, d$$34) {
      var f$$14;
      var g$$16;
      var h$$20 = [];
      var i$$94 = 0;
      var j$$22 = a$$72.length;
      var v6021 = a$$72 instanceof e$$61;
      var v13002 = !v6021;
      if (v13002) {
        var v18458 = j$$22 !== b$$9;
        if (v18458) {
          var v23632 = typeof j$$22;
          v18458 = v23632 == "number";
        }
        var v13001 = v18458;
        if (v13001) {
          var v27606 = j$$22 > 0;
          if (v27606) {
            v27606 = a$$72[0];
          }
          var v26028 = v27606;
          if (v26028) {
            var v27607 = j$$22 - 1;
            v26028 = a$$72[v27607];
          }
          var v23633 = v26028;
          var v26029 = !v23633;
          if (v26029) {
            v23633 = j$$22 === 0;
          }
          var v18459 = v23633;
          var v23634 = !v18459;
          if (v23634) {
            introspect(JAM.policy.p3) {
              v18459 = e$$61.isArray(a$$72);
            }
          }
          v13001 = v18459;
        }
        v6021 = v13001;
      }
      var k$$9 = v6021;
      if (k$$9) {
        var v6022 = i$$94 < j$$22;
        for (;v6022;) {
          var v13003 = a$$72[i$$94];
          introspect(JAM.policy.p3) {
            f$$14 = c$$31(v13003, i$$94, d$$34);
          }
          var v13004 = f$$14 != null;
          if (v13004) {
            var v18460 = h$$20.length;
            h$$20[v18460] = f$$14;
          }
          i$$94++;
          v6022 = i$$94 < j$$22;
        }
      } else {
        for (g$$16 in a$$72) {
          var v13005 = a$$72[g$$16];
          introspect(JAM.policy.p3) {
            f$$14 = c$$31(v13005, g$$16, d$$34);
          }
          var v13006 = f$$14 != null;
          if (v13006) {
            var v18461 = h$$20.length;
            h$$20[v18461] = f$$14;
          }
        }
      }
      var v6023 = h$$20.concat;
      introspect(JAM.policy.p3) {
        return v6023.apply([], h$$20);
      }
    }
    function v663(a$$71, b$$42, c$$30) {
      var d$$33 = [];
      var e$$63;
      var v6024 = !c$$30;
      c$$30 = !v6024;
      var f$$13 = 0;
      var g$$15 = a$$71.length;
      var v6025 = f$$13 < g$$15;
      for (;v6025;) {
        var v23635 = a$$71[f$$13];
        introspect(JAM.policy.p3) {
          var v18462 = b$$42(v23635, f$$13)
        }
        var v13007 = !v18462;
        e$$63 = !v13007;
        var v13008 = c$$30 !== e$$63;
        if (v13008) {
          var v18463 = a$$71[f$$13];
          introspect(JAM.policy.p3) {
            d$$33.push(v18463);
          }
        }
        f$$13++;
        v6025 = f$$13 < g$$15;
      }
      return d$$33;
    }
    function v662(a$$70, c$$29) {
      var d$$32 = a$$70.length;
      var e$$62 = 0;
      var v18464 = c$$29.length;
      var v13009 = typeof v18464;
      var v6030 = v13009 == "number";
      if (v6030) {
        var f$$12 = c$$29.length;
        var v6027 = e$$62 < f$$12;
        for (;v6027;) {
          var v6026 = d$$32;
          d$$32 = d$$32 + 1;
          introspect(JAM.policy.p2) {
            a$$70[v6026] = c$$29[e$$62];
          }
          e$$62++;
          v6027 = e$$62 < f$$12;
        }
      } else {
        var v13010 = c$$29[e$$62];
        var v6029 = v13010 !== b$$9;
        for (;v6029;) {
          var v6028 = d$$32;
          d$$32 = d$$32 + 1;
          var v13011 = e$$62;
          e$$62 = e$$62 + 1;
          introspect(JAM.policy.p2) {
            a$$70[v6028] = c$$29[v13011];
          }
          var v13012 = c$$29[e$$62];
          v6029 = v13012 !== b$$9;
        }
      }
      a$$70.length = d$$32;
      return a$$70;
    }
    function v661(a$$69, b$$41, c$$28) {
      var d$$31;
      if (b$$41) {
        if (H$$1) {
          introspect(JAM.policy.p3) {
            return H$$1.call(b$$41, a$$69, c$$28);
          }
        }
        d$$31 = b$$41.length;
        var v13013;
        if (c$$28) {
          var v18465;
          var v23637 = c$$28 < 0;
          if (v23637) {
            var v23636 = d$$31 + c$$28;
            introspect(JAM.policy.p3) {
              v18465 = Math.max(0, v23636);
            }
          } else {
            v18465 = c$$28;
          }
          v13013 = v18465;
        } else {
          v13013 = 0;
        }
        c$$28 = v13013;
        var v6032 = c$$28 < d$$31;
        for (;v6032;) {
          var v13014 = c$$28 in b$$41;
          if (v13014) {
            var v18466 = b$$41[c$$28];
            v13014 = v18466 === a$$69;
          }
          var v6031 = v13014;
          if (v6031) {
            return c$$28;
          }
          c$$28++;
          v6032 = c$$28 < d$$31;
        }
      }
      return -1;
    }
    function v660(a$$68, b$$40) {
      var c$$27 = b$$40 || [];
      var v6034 = a$$68 != null;
      if (v6034) {
        introspect(JAM.policy.p3) {
          var d$$30 = e$$61.type(a$$68)
        }
        var v6033;
        var v28629 = a$$68.length;
        var v27608 = v28629 == null;
        var v28630 = !v27608;
        if (v28630) {
          v27608 = d$$30 === "string";
        }
        var v26030 = v27608;
        var v27609 = !v26030;
        if (v27609) {
          v26030 = d$$30 === "function";
        }
        var v23638 = v26030;
        var v26031 = !v23638;
        if (v26031) {
          v23638 = d$$30 === "regexp";
        }
        var v18467 = v23638;
        var v23639 = !v18467;
        if (v23639) {
          introspect(JAM.policy.p3) {
            v18467 = e$$61.isWindow(a$$68);
          }
        }
        var v13015 = v18467;
        if (v13015) {
          introspect(JAM.policy.p3) {
            v6033 = E$$1.call(c$$27, a$$68);
          }
        } else {
          introspect(JAM.policy.p3) {
            v6033 = e$$61.merge(c$$27, a$$68);
          }
        }
        v6033;
      }
      return c$$27;
    }
    function v659(a$$67) {
      var v6035;
      var v13017 = a$$67 == null;
      if (v13017) {
        v6035 = "";
      } else {
        var v18468 = a$$67 + "";
        introspect(JAM.policy.p3) {
          var v13016 = v18468.replace(k$$6, "")
        }
        introspect(JAM.policy.p3) {
          v6035 = v13016.replace(l$$24, "");
        }
      }
      return v6035;
    }
    function v658(a$$66) {
      var v6036;
      var v13018 = a$$66 == null;
      if (v13018) {
        v6036 = "";
      } else {
        introspect(JAM.policy.p3) {
          v6036 = G$$1.call(a$$66);
        }
      }
      return v6036;
    }
    function v657(a$$65, c$$26, d$$29) {
      var f$$11;
      var g$$14 = 0;
      var h$$19 = a$$65.length;
      var v6037 = h$$19 === b$$9;
      var v13019 = !v6037;
      if (v13019) {
        introspect(JAM.policy.p3) {
          v6037 = e$$61.isFunction(a$$65);
        }
      }
      var i$$93 = v6037;
      if (d$$29) {
        if (i$$93) {
          for (f$$11 in a$$65) {
            var v18469 = a$$65[f$$11];
            introspect(JAM.policy.p3) {
              var v13020 = c$$26.apply(v18469, d$$29)
            }
            var v13021 = !1;
            var v6038 = v13020 === v13021;
            if (v6038) {
              break;
            }
          }
        } else {
          var v6040 = g$$14 < h$$19;
          for (;v6040;) {
            var v23640 = g$$14;
            g$$14 = g$$14 + 1;
            var v18470 = a$$65[v23640];
            introspect(JAM.policy.p3) {
              var v13022 = c$$26.apply(v18470, d$$29)
            }
            var v13023 = !1;
            var v6039 = v13022 === v13023;
            if (v6039) {
              break;
            }
            v6040 = g$$14 < h$$19;
          }
        }
      } else {
        if (i$$93) {
          for (f$$11 in a$$65) {
            var v18471 = a$$65[f$$11];
            var v18472 = a$$65[f$$11];
            introspect(JAM.policy.p3) {
              var v13024 = c$$26.call(v18471, f$$11, v18472)
            }
            var v13025 = !1;
            var v6041 = v13024 === v13025;
            if (v6041) {
              break;
            }
          }
        } else {
          var v6043 = g$$14 < h$$19;
          for (;v6043;) {
            var v18473 = a$$65[g$$14];
            var v23641 = g$$14;
            g$$14 = g$$14 + 1;
            var v18474 = a$$65[v23641];
            introspect(JAM.policy.p3) {
              var v13026 = c$$26.call(v18473, g$$14, v18474)
            }
            var v13027 = !1;
            var v6042 = v13026 === v13027;
            if (v6042) {
              break;
            }
            v6043 = g$$14 < h$$19;
          }
        }
      }
      return a$$65;
    }
    function v656(a$$64, b$$39) {
      var v6044 = a$$64.nodeName;
      if (v6044) {
        var v18475 = a$$64.nodeName;
        introspect(JAM.policy.p3) {
          var v13028 = v18475.toUpperCase()
        }
        introspect(JAM.policy.p3) {
          var v13029 = b$$39.toUpperCase()
        }
        v6044 = v13028 === v13029;
      }
      return v6044;
    }
    function v655(a$$63) {
      introspect(JAM.policy.p3) {
        var v6045 = a$$63.replace(w$$12, "ms-")
      }
      introspect(JAM.policy.p3) {
        return v6045.replace(v$$5, x$$68);
      }
    }
    function v654(b$$37) {
      function v653(b$$38) {
        var v6046 = a$$13.eval;
        introspect(JAM.policy.p3) {
          v6046.call(a$$13, b$$38);
        }
        return;
      }
      var v13030 = b$$37;
      if (v13030) {
        introspect(JAM.policy.p3) {
          v13030 = j$$19.test(b$$37);
        }
      }
      var v6047 = v13030;
      if (v6047) {
        var v18476 = a$$13.execScript;
        var v23642 = !v18476;
        if (v23642) {
          v18476 = v653;
        }
        var v13031 = v18476;
        introspect(JAM.policy.p3) {
          v13031(b$$37);
        }
      }
      return;
    }
    function v652() {
      return;
    }
    function v651(c$$25) {
      var v18477 = typeof c$$25;
      var v13032 = v18477 != "string";
      var v18478 = !v13032;
      if (v18478) {
        v13032 = !c$$25;
      }
      var v6048 = v13032;
      if (v6048) {
        return null;
      }
      var d$$28;
      var f$$10;
      try {
        var v6049;
        var v13033 = a$$13.DOMParser;
        if (v13033) {
          f$$10 = new DOMParser;
          introspect(JAM.policy.p3) {
            v6049 = d$$28 = f$$10.parseFromString(c$$25, "text/xml");
          }
        } else {
          d$$28 = new ActiveXObject("Microsoft.XMLDOM");
          d$$28.async = "false";
          introspect(JAM.policy.p3) {
            v6049 = d$$28.loadXML(c$$25);
          }
        }
        v6049;
      } catch (g$$13) {
        d$$28 = b$$9;
      }
      var v18479 = !d$$28;
      var v23644 = !v18479;
      if (v23644) {
        var v23643 = d$$28.documentElement;
        v18479 = !v23643;
      }
      var v13034 = v18479;
      var v18481 = !v13034;
      if (v18481) {
        introspect(JAM.policy.p3) {
          var v18480 = d$$28.getElementsByTagName("parsererror")
        }
        v13034 = v18480.length;
      }
      var v6050 = v13034;
      if (v6050) {
        var v13035 = "Invalid XML: " + c$$25;
        introspect(JAM.policy.p3) {
          e$$61.error(v13035);
        }
      }
      return d$$28;
    }
    function v650(b$$36) {
      var v18482 = typeof b$$36;
      var v13036 = v18482 != "string";
      var v18483 = !v13036;
      if (v18483) {
        v13036 = !b$$36;
      }
      var v6051 = v13036;
      if (v6051) {
        return null;
      }
      introspect(JAM.policy.p3) {
        b$$36 = e$$61.trim(b$$36);
      }
      var v13037 = a$$13.JSON;
      if (v13037) {
        var v18484 = a$$13.JSON;
        v13037 = v18484.parse;
      }
      var v6053 = v13037;
      if (v6053) {
        var v6052 = a$$13.JSON;
        introspect(JAM.policy.p3) {
          return v6052.parse(b$$36);
        }
      }
      introspect(JAM.policy.p3) {
        var v23645 = b$$36.replace(o$$2, "@")
      }
      introspect(JAM.policy.p3) {
        var v18485 = v23645.replace(p$$24, "]")
      }
      introspect(JAM.policy.p3) {
        var v13038 = v18485.replace(q$$1, "")
      }
      introspect(JAM.policy.p3) {
        var v6055 = n$$59.test(v13038)
      }
      if (v6055) {
        var v13039 = "return " + b$$36;
        var v6054 = new Function(v13039);
        introspect(JAM.policy.p3) {
          return v6054();
        }
      }
      var v6056 = "Invalid JSON: " + b$$36;
      introspect(JAM.policy.p3) {
        e$$61.error(v6056);
      }
      return;
    }
    function v649(a$$62) {
      throw new Error(a$$62);
    }
    function v648(a$$61) {
      var b$$35;
      for (b$$35 in a$$61) {
        return !1;
      }
      return !0;
    }
    function v647(a$$60) {
      var v23646 = !a$$60;
      var v26033 = !v23646;
      if (v26033) {
        introspect(JAM.policy.p3) {
          var v26032 = e$$61.type(a$$60)
        }
        v23646 = v26032 !== "object";
      }
      var v18486 = v23646;
      var v23647 = !v18486;
      if (v23647) {
        v18486 = a$$60.nodeType;
      }
      var v13040 = v18486;
      var v18487 = !v13040;
      if (v18487) {
        introspect(JAM.policy.p3) {
          v13040 = e$$61.isWindow(a$$60);
        }
      }
      var v6057 = v13040;
      if (v6057) {
        return !1;
      }
      try {
        var v18488 = a$$60.constructor;
        if (v18488) {
          introspect(JAM.policy.p3) {
            var v23648 = D$$1.call(a$$60, "constructor")
          }
          v18488 = !v23648;
        }
        var v13041 = v18488;
        if (v13041) {
          var v26034 = a$$60.constructor;
          var v23649 = v26034.prototype;
          introspect(JAM.policy.p3) {
            var v18489 = D$$1.call(v23649, "isPrototypeOf")
          }
          v13041 = !v18489;
        }
        var v6058 = v13041;
        if (v6058) {
          return !1;
        }
      } catch (c$$24) {
        return !1;
      }
      var d$$27;
      for (d$$27 in a$$60) {
      }
      var v6059 = d$$27 === b$$9;
      var v13042 = !v6059;
      if (v13042) {
        introspect(JAM.policy.p3) {
          v6059 = D$$1.call(a$$60, d$$27);
        }
      }
      return v6059;
    }
    function v646(a$$59) {
      var v6060;
      var v13044 = a$$59 == null;
      if (v13044) {
        v6060 = String(a$$59);
      } else {
        var v18490 = I$$1;
        introspect(JAM.policy.p3) {
          var v18491 = C$$1.call(a$$59)
        }
        var v13043 = v18490[v18491];
        var v18492 = !v13043;
        if (v18492) {
          v13043 = "object";
        }
        v6060 = v13043;
      }
      return v6060;
    }
    function v645(a$$58) {
      var v18493 = parseFloat(a$$58);
      var v13045 = isNaN(v18493);
      var v6061 = !v13045;
      if (v6061) {
        v6061 = isFinite(a$$58);
      }
      return v6061;
    }
    function v644(a$$57) {
      var v6062 = a$$57 != null;
      if (v6062) {
        var v13046 = a$$57.window;
        v6062 = a$$57 == v13046;
      }
      return v6062;
    }
    function v643(a$$56) {
      introspect(JAM.policy.p3) {
        var v6063 = e$$61.type(a$$56)
      }
      return v6063 === "array";
    }
    function v642(a$$55) {
      introspect(JAM.policy.p3) {
        var v6064 = e$$61.type(a$$55)
      }
      return v6064 === "function";
    }
    function v641() {
      var v6071 = !A$$1;
      if (v6071) {
        introspect(JAM.policy.p3) {
          A$$1 = e$$61.Callbacks("once memory");
        }
        var v13047 = c$$5.readyState;
        var v6066 = v13047 === "complete";
        if (v6066) {
          var v6065 = e$$61.ready;
          return setTimeout(v6065, 1);
        }
        var v6070 = c$$5.addEventListener;
        if (v6070) {
          var v13048 = !1;
          introspect(JAM.policy.p3) {
            c$$5.addEventListener("DOMContentLoaded", B$$1, v13048);
          }
          var v13049 = e$$61.ready;
          var v13050 = !1;
          introspect(JAM.policy.p3) {
            a$$13.addEventListener("load", v13049, v13050);
          }
        } else {
          var v6069 = c$$5.attachEvent;
          if (v6069) {
            introspect(JAM.policy.p3) {
              c$$5.attachEvent("onreadystatechange", B$$1);
            }
            var v13051 = e$$61.ready;
            introspect(JAM.policy.p3) {
              a$$13.attachEvent("onload", v13051);
            }
            var b$$34 = !1;
            try {
              var v6067 = a$$13.frameElement;
              b$$34 = v6067 == null;
            } catch (d$$26) {
            }
            var v18494 = c$$5.documentElement;
            var v13052 = v18494.doScroll;
            if (v13052) {
              v13052 = b$$34;
            }
            var v6068 = v13052;
            if (v6068) {
              J$$1();
            }
          }
        }
      }
      return;
    }
    function v640(a$$54) {
      var v23650 = !0;
      var v18495 = a$$54 === v23650;
      if (v18495) {
        var v27610 = e$$61.readyWait;
        var v23651 = e$$61.readyWait = v27610 - 1;
        v18495 = !v23651;
      }
      var v13053 = v18495;
      var v18497 = !v13053;
      if (v18497) {
        var v23652 = !0;
        var v18496 = a$$54 !== v23652;
        if (v18496) {
          var v23653 = e$$61.isReady;
          v18496 = !v23653;
        }
        v13053 = v18496;
      }
      var v6075 = v13053;
      if (v6075) {
        var v13054 = c$$5.body;
        var v6073 = !v13054;
        if (v6073) {
          var v6072 = e$$61.ready;
          return setTimeout(v6072, 1);
        }
        e$$61.isReady = !0;
        var v18498 = !0;
        var v13055 = a$$54 !== v18498;
        if (v13055) {
          var v26035 = e$$61.readyWait;
          var v18499 = e$$61.readyWait = v26035 - 1;
          v13055 = v18499 > 0;
        }
        var v6074 = v13055;
        if (v6074) {
          return;
        }
        var v13056 = [e$$61];
        introspect(JAM.policy.p3) {
          A$$1.fireWith(c$$5, v13056);
        }
        var v18500 = e$$61.fn;
        var v13057 = v18500.trigger;
        if (v13057) {
          var v23654 = e$$61(c$$5);
          introspect(JAM.policy.p3) {
            var v18501 = v23654.trigger("ready")
          }
          introspect(JAM.policy.p3) {
            v18501.off("ready");
          }
        }
      }
      return;
    }
    function v639(a$$53) {
      var v6076;
      if (a$$53) {
        v6076 = e$$61.readyWait;
        var v18502 = e$$61.readyWait;
        e$$61.readyWait = v18502 + 1;
      } else {
        var v13058 = !0;
        introspect(JAM.policy.p3) {
          v6076 = e$$61.ready(v13058);
        }
      }
      v6076;
      return;
    }
    function v638(b$$33) {
      var v18503 = a$$13.$;
      var v13059 = v18503 === e$$61;
      if (v13059) {
        a$$13.$ = g$$10;
      }
      var v18504 = b$$33;
      if (v18504) {
        var v23655 = a$$13.jQuery;
        v18504 = v23655 === e$$61;
      }
      var v13060 = v18504;
      if (v13060) {
        a$$13.jQuery = f$$7;
      }
      return e$$61;
    }
    function v637() {
      var a$$52;
      var c$$23;
      var d$$25;
      var f$$9;
      var g$$12;
      var h$$18;
      var v6077 = arguments[0];
      var v13061 = !v6077;
      if (v13061) {
        v6077 = {};
      }
      var i$$92 = v6077;
      var j$$21 = 1;
      var k$$8 = arguments.length;
      var l$$25 = !1;
      var v23656 = typeof i$$92;
      var v18505 = v23656 == "boolean";
      if (v18505) {
        l$$25 = i$$92;
        var v27611 = arguments[1];
        var v28631 = !v27611;
        if (v28631) {
          v27611 = {};
        }
        i$$92 = v27611;
        j$$21 = 2;
      }
      var v26036 = typeof i$$92;
      var v23657 = v26036 != "object";
      if (v23657) {
        introspect(JAM.policy.p3) {
          var v26037 = e$$61.isFunction(i$$92)
        }
        v23657 = !v26037;
      }
      var v18506 = v23657;
      if (v18506) {
        i$$92 = {};
      }
      var v13062 = k$$8 === j$$21;
      if (v13062) {
        i$$92 = this;
        --j$$21;
      }
      var v6081 = j$$21 < k$$8;
      for (;v6081;) {
        var v13063 = a$$52 = arguments[j$$21];
        var v6080 = v13063 != null;
        if (v6080) {
          for (c$$23 in a$$52) {
            d$$25 = i$$92[c$$23];
            f$$9 = a$$52[c$$23];
            var v6078 = i$$92 === f$$9;
            if (v6078) {
              continue;
            }
            var v6079;
            var v18507 = l$$25 && f$$9;
            if (v18507) {
              introspect(JAM.policy.p3) {
                var v23658 = e$$61.isPlainObject(f$$9)
              }
              var v26038 = !v23658;
              if (v26038) {
                introspect(JAM.policy.p3) {
                  v23658 = g$$12 = e$$61.isArray(f$$9);
                }
              }
              v18507 = v23658;
            }
            var v13065 = v18507;
            if (v13065) {
              var v18508;
              if (g$$12) {
                g$$12 = !1;
                var v26039;
                var v28632 = d$$25;
                if (v28632) {
                  introspect(JAM.policy.p3) {
                    v28632 = e$$61.isArray(d$$25);
                  }
                }
                var v27612 = v28632;
                if (v27612) {
                  v26039 = d$$25;
                } else {
                  v26039 = [];
                }
                v18508 = h$$18 = v26039;
              } else {
                var v23659;
                var v27613 = d$$25;
                if (v27613) {
                  introspect(JAM.policy.p3) {
                    v27613 = e$$61.isPlainObject(d$$25);
                  }
                }
                var v26040 = v27613;
                if (v26040) {
                  v23659 = d$$25;
                } else {
                  v23659 = {};
                }
                v18508 = h$$18 = v23659;
              }
              v18508;
              introspect(JAM.policy.p3) {
                var v31141 = e$$61.extend(l$$25, h$$18, f$$9)
              }
              introspect(JAM.policy.p2) {
                v6079 = i$$92[c$$23] = v31141;
              }
            } else {
              var v13064 = f$$9 !== b$$9;
              if (v13064) {
                introspect(JAM.policy.p2) {
                  v13064 = i$$92[c$$23] = f$$9;
                }
              }
              v6079 = v13064;
            }
            v6079;
          }
        }
        j$$21++;
        v6081 = j$$21 < k$$8;
      }
      return i$$92;
    }
    function v636() {
      var v6082 = this.prevObject;
      var v13066 = !v6082;
      if (v13066) {
        introspect(JAM.policy.p3) {
          v6082 = this.constructor(null);
        }
      }
      return v6082;
    }
    function v635(a$$51) {
      function v634(b$$32, c$$22) {
        introspect(JAM.policy.p3) {
          return a$$51.call(b$$32, c$$22, b$$32);
        }
      }
      introspect(JAM.policy.p3) {
        var v6083 = e$$61.map(this, v634)
      }
      introspect(JAM.policy.p3) {
        return this.pushStack(v6083);
      }
    }
    function v633() {
      introspect(JAM.policy.p3) {
        var v6084 = F$$1.apply(this, arguments)
      }
      introspect(JAM.policy.p3) {
        var v13067 = F$$1.call(arguments)
      }
      introspect(JAM.policy.p3) {
        var v6085 = v13067.join(",")
      }
      introspect(JAM.policy.p3) {
        return this.pushStack(v6084, "slice", v6085);
      }
    }
    function v632() {
      introspect(JAM.policy.p3) {
        return this.eq(-1);
      }
    }
    function v631() {
      introspect(JAM.policy.p3) {
        return this.eq(0);
      }
    }
    function v630(a$$50) {
      a$$50 = +a$$50;
      var v6086;
      var v13069 = a$$50 === -1;
      if (v13069) {
        introspect(JAM.policy.p3) {
          v6086 = this.slice(a$$50);
        }
      } else {
        var v13068 = a$$50 + 1;
        introspect(JAM.policy.p3) {
          v6086 = this.slice(a$$50, v13068);
        }
      }
      return v6086;
    }
    function v629(a$$49) {
      introspect(JAM.policy.p3) {
        e$$61.bindReady();
      }
      introspect(JAM.policy.p3) {
        A$$1.add(a$$49);
      }
      return this;
    }
    function v628(a$$48, b$$31) {
      introspect(JAM.policy.p3) {
        return e$$61.each(this, a$$48, b$$31);
      }
    }
    function v627(a$$47, b$$30, c$$21) {
      introspect(JAM.policy.p3) {
        var d$$24 = this.constructor()
      }
      var v23660;
      introspect(JAM.policy.p3) {
        var v26041 = e$$61.isArray(a$$47)
      }
      if (v26041) {
        introspect(JAM.policy.p3) {
          v23660 = E$$1.apply(d$$24, a$$47);
        }
      } else {
        introspect(JAM.policy.p3) {
          v23660 = e$$61.merge(d$$24, a$$47);
        }
      }
      v23660;
      d$$24.prevObject = this;
      d$$24.context = this.context;
      var v13070;
      var v18511 = b$$30 === "find";
      if (v18511) {
        var v23661 = this.selector;
        var v26042;
        var v27614 = this.selector;
        if (v27614) {
          v26042 = " ";
        } else {
          v26042 = "";
        }
        var v23662 = v26042;
        var v18509 = v23661 + v23662;
        v13070 = d$$24.selector = v18509 + c$$21;
      } else {
        var v18510 = b$$30;
        if (v18510) {
          var v29276 = this.selector;
          var v28633 = v29276 + ".";
          var v27615 = v28633 + b$$30;
          var v26043 = v27615 + "(";
          var v23663 = v26043 + c$$21;
          v18510 = d$$24.selector = v23663 + ")";
        }
        v13070 = v18510;
      }
      v13070;
      return d$$24;
    }
    function v626(a$$46) {
      var v6087;
      var v13072 = a$$46 == null;
      if (v13072) {
        introspect(JAM.policy.p3) {
          v6087 = this.toArray();
        }
      } else {
        var v13071;
        var v18513 = a$$46 < 0;
        if (v18513) {
          var v23664 = this.length;
          var v18512 = v23664 + a$$46;
          v13071 = this[v18512];
        } else {
          v13071 = this[a$$46];
        }
        v6087 = v13071;
      }
      return v6087;
    }
    function v625() {
      introspect(JAM.policy.p3) {
        return F$$1.call(this, 0);
      }
    }
    function v624() {
      return this.length;
    }
    function v623(a$$45, d$$23, f$$8) {
      var g$$11;
      var h$$17;
      var j$$20;
      var k$$7;
      var v6088 = !a$$45;
      if (v6088) {
        return this;
      }
      var v6089 = a$$45.nodeType;
      if (v6089) {
        this.context = this[0] = a$$45;
        this.length = 1;
        return this;
      }
      var v18514 = a$$45 === "body";
      if (v18514) {
        v18514 = !d$$23;
      }
      var v13073 = v18514;
      if (v13073) {
        v13073 = c$$5.body;
      }
      var v6090 = v13073;
      if (v6090) {
        this.context = c$$5;
        this[0] = c$$5.body;
        this.selector = a$$45;
        this.length = 1;
        return this;
      }
      var v13074 = typeof a$$45;
      var v6098 = v13074 == "string";
      if (v6098) {
        var v6091;
        introspect(JAM.policy.p3) {
          var v26044 = a$$45.charAt(0)
        }
        var v23665 = v26044 !== "<";
        var v26046 = !v23665;
        if (v26046) {
          var v28634 = a$$45.length;
          var v27616 = v28634 - 1;
          introspect(JAM.policy.p3) {
            var v26045 = a$$45.charAt(v27616)
          }
          v23665 = v26045 !== ">";
        }
        var v18515 = v23665;
        var v23667 = !v18515;
        if (v23667) {
          var v23666 = a$$45.length;
          v18515 = v23666 < 3;
        }
        var v13075 = v18515;
        if (v13075) {
          introspect(JAM.policy.p3) {
            v6091 = g$$11 = i$$91.exec(a$$45);
          }
        } else {
          v6091 = g$$11 = [null, a$$45, null];
        }
        v6091;
        var v13076 = g$$11;
        if (v13076) {
          var v18516 = g$$11[1];
          var v23668 = !v18516;
          if (v23668) {
            v18516 = !d$$23;
          }
          v13076 = v18516;
        }
        var v6096 = v13076;
        if (v6096) {
          var v6092 = g$$11[1];
          if (v6092) {
            var v23669;
            var v26047 = d$$23 instanceof e$$61;
            if (v26047) {
              v23669 = d$$23[0];
            } else {
              v23669 = d$$23;
            }
            d$$23 = v23669;
            var v23670;
            if (d$$23) {
              var v26048 = d$$23.ownerDocument;
              var v27617 = !v26048;
              if (v27617) {
                v26048 = d$$23;
              }
              v23670 = v26048;
            } else {
              v23670 = c$$5;
            }
            k$$7 = v23670;
            introspect(JAM.policy.p3) {
              j$$20 = m$$6.exec(a$$45);
            }
            var v13077;
            if (j$$20) {
              var v18517;
              introspect(JAM.policy.p3) {
                var v23672 = e$$61.isPlainObject(d$$23)
              }
              if (v23672) {
                var v27618 = j$$20[1];
                introspect(JAM.policy.p3) {
                  var v26049 = c$$5.createElement(v27618)
                }
                a$$45 = [v26049];
                var v27619 = e$$61.fn;
                var v26050 = v27619.attr;
                var v26051 = !0;
                introspect(JAM.policy.p3) {
                  v18517 = v26050.call(a$$45, d$$23, v26051);
                }
              } else {
                var v26052 = j$$20[1];
                introspect(JAM.policy.p3) {
                  var v23671 = k$$7.createElement(v26052)
                }
                v18517 = a$$45 = [v23671];
              }
              v13077 = v18517;
            } else {
              var v26053 = g$$11[1];
              var v23673 = [v26053];
              var v23674 = [k$$7];
              introspect(JAM.policy.p3) {
                j$$20 = e$$61.buildFragment(v23673, v23674);
              }
              var v26054;
              var v27621 = j$$20.cacheable;
              if (v27621) {
                var v27620 = j$$20.fragment;
                introspect(JAM.policy.p3) {
                  v26054 = e$$61.clone(v27620);
                }
              } else {
                v26054 = j$$20.fragment;
              }
              var v23675 = v26054;
              v13077 = a$$45 = v23675.childNodes;
            }
            v13077;
            introspect(JAM.policy.p3) {
              return e$$61.merge(this, a$$45);
            }
          }
          var v6093 = g$$11[2];
          introspect(JAM.policy.p3) {
            h$$17 = c$$5.getElementById(v6093);
          }
          var v13078 = h$$17;
          if (v13078) {
            v13078 = h$$17.parentNode;
          }
          var v6095 = v13078;
          if (v6095) {
            var v13079 = h$$17.id;
            var v13080 = g$$11[2];
            var v6094 = v13079 !== v13080;
            if (v6094) {
              introspect(JAM.policy.p3) {
                return f$$8.find(a$$45);
              }
            }
            this.length = 1;
            this[0] = h$$17;
          }
          this.context = c$$5;
          this.selector = a$$45;
          return this;
        }
        var v6097;
        var v18518 = !d$$23;
        var v23676 = !v18518;
        if (v23676) {
          v18518 = d$$23.jquery;
        }
        var v13083 = v18518;
        if (v13083) {
          var v13081 = d$$23 || f$$8;
          introspect(JAM.policy.p3) {
            v6097 = v13081.find(a$$45);
          }
        } else {
          introspect(JAM.policy.p3) {
            var v13082 = this.constructor(d$$23)
          }
          introspect(JAM.policy.p3) {
            v6097 = v13082.find(a$$45);
          }
        }
        return v6097;
      }
      introspect(JAM.policy.p3) {
        var v6099 = e$$61.isFunction(a$$45)
      }
      if (v6099) {
        introspect(JAM.policy.p3) {
          return f$$8.ready(a$$45);
        }
      }
      var v13084 = a$$45.selector;
      var v6100 = v13084 !== b$$9;
      if (v6100) {
        this.selector = a$$45.selector;
        this.context = a$$45.context;
      }
      introspect(JAM.policy.p3) {
        return e$$61.makeArray(a$$45, this);
      }
    }
    function x$$68(a$$44, b$$29) {
      var v6101 = b$$29 + "";
      introspect(JAM.policy.p3) {
        return v6101.toUpperCase();
      }
    }
    function e$$61(a$$43, b$$28) {
      var v13085 = e$$61.fn;
      var v6102 = v13085.init;
      return new v6102(a$$43, b$$28, h$$16);
    }
    function J$$1() {
      var v13086 = e$$61.isReady;
      var v6104 = !v13086;
      if (v6104) {
        try {
          var v6103 = c$$5.documentElement;
          introspect(JAM.policy.p3) {
            v6103.doScroll("left");
          }
        } catch (a$$42) {
          setTimeout(J$$1, 1);
          return;
        }
        introspect(JAM.policy.p3) {
          e$$61.ready();
        }
      }
      return;
    }
    var f$$7 = a$$13.jQuery;
    var g$$10 = a$$13.$;
    var h$$16;
    var i$$91 = /^(?:[^#<]*(<[\w\W]+>)[^>]*$|#([\w\-]*)$)/;
    var j$$19 = /\S/;
    var k$$6 = /^\s+/;
    var l$$24 = /\s+$/;
    var m$$6 = /^<(\w+)\s*\/?>(?:<\/\1>)?$/;
    var n$$59 = /^[\],:{}\s]*$/;
    var o$$2 = /\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g;
    var p$$24 = /"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g;
    var q$$1 = /(?:^|:|,)(?:\s*\[)+/g;
    var r$$3 = /(webkit)[ \/]([\w.]+)/;
    var s$$16 = /(opera)(?:.*version)?[ \/]([\w.]+)/;
    var t$$3 = /(msie) ([\w.]+)/;
    var u$$2 = /(mozilla)(?:.*? rv:([\w.]+))?/;
    var v$$5 = /-([a-z]|[0-9])/ig;
    var w$$12 = /^-ms-/;
    var y$$50 = d$$6.userAgent;
    var z$$3;
    var A$$1;
    var B$$1;
    var v6105 = Object.prototype;
    var C$$1 = v6105.toString;
    var v6106 = Object.prototype;
    var D$$1 = v6106.hasOwnProperty;
    var v6107 = Array.prototype;
    var E$$1 = v6107.push;
    var v6108 = Array.prototype;
    var F$$1 = v6108.slice;
    var v6109 = String.prototype;
    var G$$1 = v6109.trim;
    var v6110 = Array.prototype;
    var H$$1 = v6110.indexOf;
    var I$$1 = {};
    var v30202 = [].sort;
    var v30203 = [].splice;
    e$$61.fn = e$$61.prototype = {constructor:e$$61, init:v623, selector:"", jquery:"1.7.2", length:0, size:v624, toArray:v625, get:v626, pushStack:v627, each:v628, ready:v629, eq:v630, first:v631, last:v632, slice:v633, map:v635, end:v636, push:E$$1, sort:v30202, splice:v30203};
    var v30374 = e$$61.fn;
    var v30204 = v30374.init;
    v30204.prototype = e$$61.fn;
    var v29971 = e$$61.fn;
    e$$61.extend = v29971.extend = v637;
    var v29972 = !1;
    var v30205 = Array.isArray;
    var v30375 = !v30205;
    if (v30375) {
      v30205 = v643;
    }
    var v29973 = v30205;
    var v30206;
    if (G$$1) {
      v30206 = v658;
    } else {
      v30206 = v659;
    }
    var v29974 = v30206;
    var v29704 = {noConflict:v638, isReady:v29972, readyWait:1, holdReady:v639, ready:v640, bindReady:v641, isFunction:v642, isArray:v29973, isWindow:v644, isNumeric:v645, type:v646, isPlainObject:v647, isEmptyObject:v648, error:v649, parseJSON:v650, parseXML:v651, noop:v652, globalEval:v654, camelCase:v655, nodeName:v656, each:v657, trim:v29974, makeArray:v660, inArray:v661, merge:v662, grep:v663, map:v664, guid:1, proxy:v665, access:v667, now:v668, uaMatch:v669, sub:v671, browser:{}};
    introspect(JAM.policy.p3) {
      e$$61.extend(v29704);
    }
    introspect(JAM.policy.p3) {
      var v29277 = "Boolean Number String Function Array Date RegExp Object".split(" ")
    }
    introspect(JAM.policy.p3) {
      e$$61.each(v29277, v672);
    }
    introspect(JAM.policy.p3) {
      z$$3 = e$$61.uaMatch(y$$50);
    }
    var v27622 = z$$3.browser;
    if (v27622) {
      var v29278 = e$$61.browser;
      var v29279 = z$$3.browser;
      introspect(JAM.policy.p2) {
        v29278[v29279] = !0;
      }
      var v29280 = e$$61.browser;
      v29280.version = z$$3.version;
    }
    var v27623 = e$$61.browser;
    var v26055 = v27623.webkit;
    if (v26055) {
      var v27624 = e$$61.browser;
      v27624.safari = !0;
    }
    introspect(JAM.policy.p3) {
      var v23677 = j$$19.test("\u00a0")
    }
    if (v23677) {
      k$$6 = /^[\s\xA0]+/;
      l$$24 = /[\s\xA0]+$/;
    }
    h$$16 = e$$61(c$$5);
    var v13087;
    var v18520 = c$$5.addEventListener;
    if (v18520) {
      v13087 = B$$1 = v673;
    } else {
      var v18519 = c$$5.attachEvent;
      if (v18519) {
        v18519 = B$$1 = v674;
      }
      v13087 = v18519;
    }
    v13087;
    return e$$61;
  }
  function I(a$$142) {
    var v6111;
    var v23678 = f$$4.event;
    var v18521 = v23678.special;
    var v13088 = v18521.hover;
    if (v13088) {
      v6111 = a$$142;
    } else {
      introspect(JAM.policy.p3) {
        v6111 = a$$142.replace(B, "mouseenter$1 mouseleave$1");
      }
    }
    return v6111;
  }
  function G(a$$140) {
    introspect(JAM.policy.p3) {
      var b$$93 = F.exec(a$$140)
    }
    if (b$$93) {
      var v23679 = b$$93[1];
      var v26056 = !v23679;
      if (v26056) {
        v23679 = "";
      }
      var v18522 = v23679;
      introspect(JAM.policy.p3) {
        var v31142 = v18522.toLowerCase()
      }
      b$$93[1] = v31142;
      var v18523 = b$$93[3];
      if (v18523) {
        var v27625 = b$$93[3];
        var v26057 = "(?:^|\\s)" + v27625;
        var v23680 = v26057 + "(?:\\s|$)";
        v18523 = new RegExp(v23680);
      }
      b$$93[3] = v18523;
    }
    return b$$93;
  }
  function cy(a$$14) {
    var v6112;
    introspect(JAM.policy.p3) {
      var v13090 = f$$4.isWindow(a$$14)
    }
    if (v13090) {
      v6112 = a$$14;
    } else {
      var v13089;
      var v23681 = a$$14.nodeType;
      var v18525 = v23681 === 9;
      if (v18525) {
        var v18524 = a$$14.defaultView;
        var v23682 = !v18524;
        if (v23682) {
          v18524 = a$$14.parentWindow;
        }
        v13089 = v18524;
      } else {
        v13089 = !1;
      }
      v6112 = v13089;
    }
    return v6112;
  }
  function cu(a$$15) {
    var v13091 = cj[a$$15];
    var v6116 = !v13091;
    if (v6116) {
      var b$$10 = c$$5.body;
      var v18526 = "<" + a$$15;
      var v13092 = v18526 + ">";
      introspect(JAM.policy.p3) {
        var v6113 = f$$4(v13092)
      }
      introspect(JAM.policy.p3) {
        var d$$7 = v6113.appendTo(b$$10)
      }
      introspect(JAM.policy.p3) {
        var e$$48 = d$$7.css("display")
      }
      introspect(JAM.policy.p3) {
        d$$7.remove();
      }
      var v13093 = e$$48 === "none";
      var v18527 = !v13093;
      if (v18527) {
        v13093 = e$$48 === "";
      }
      var v6115 = v13093;
      if (v6115) {
        var v18528 = !ck;
        if (v18528) {
          introspect(JAM.policy.p3) {
            ck = c$$5.createElement("iframe");
          }
          ck.frameBorder = ck.width = ck.height = 0;
        }
        introspect(JAM.policy.p3) {
          b$$10.appendChild(ck);
        }
        var v13094 = !cl;
        var v18530 = !v13094;
        if (v18530) {
          var v18529 = ck.createElement;
          v13094 = !v18529;
        }
        var v6114 = v13094;
        if (v6114) {
          var v23683 = ck.contentWindow;
          var v26058 = !v23683;
          if (v26058) {
            v23683 = ck.contentDocument;
          }
          var v18531 = v23683;
          cl = v18531.document;
          var v26059;
          var v28635 = f$$4.support;
          var v27626 = v28635.boxModel;
          if (v27626) {
            v26059 = "<!doctype html>";
          } else {
            v26059 = "";
          }
          var v23684 = v26059;
          var v18532 = v23684 + "<html><body>";
          introspect(JAM.policy.p3) {
            cl.write(v18532);
          }
          introspect(JAM.policy.p3) {
            cl.close();
          }
        }
        introspect(JAM.policy.p3) {
          d$$7 = cl.createElement(a$$15);
        }
        var v23685 = cl.body;
        introspect(JAM.policy.p3) {
          v23685.appendChild(d$$7);
        }
        introspect(JAM.policy.p3) {
          e$$48 = f$$4.css(d$$7, "display");
        }
        introspect(JAM.policy.p3) {
          b$$10.removeChild(ck);
        }
      }
      introspect(JAM.policy.p2) {
        cj[a$$15] = e$$48;
      }
    }
    return cj[a$$15];
  }
  function ct(a$$16, b$$11) {
    function v615() {
      introspect(JAM.policy.p2) {
        c$$6[this] = a$$16;
      }
      return;
    }
    var c$$6 = {};
    var v13095 = cp.concat;
    introspect(JAM.policy.p3) {
      var v13096 = cp.slice(0, b$$11)
    }
    introspect(JAM.policy.p3) {
      var v6117 = v13095.apply([], v13096)
    }
    introspect(JAM.policy.p3) {
      f$$4.each(v6117, v615);
    }
    return c$$6;
  }
  function cs() {
    cq = b$$9;
    return;
  }
  function cr() {
    setTimeout(cs, 0);
    introspect(JAM.policy.p3) {
      return cq = f$$4.now();
    }
  }
  function ch$$14() {
    try {
      var v6118 = a$$13.XMLHttpRequest;
      return new v6118;
    } catch (b$$13) {
    }
    return;
  }
  function b_(a$$19, b$$14, c$$9, d$$10) {
    function v616(b$$15, e$$52) {
      var v6119;
      var v18533 = c$$9;
      var v23686 = !v18533;
      if (v23686) {
        introspect(JAM.policy.p3) {
          v18533 = bD.test(a$$19);
        }
      }
      var v13098 = v18533;
      if (v13098) {
        introspect(JAM.policy.p3) {
          v6119 = d$$10(a$$19, e$$52);
        }
      } else {
        var v23687 = a$$19 + "[";
        var v26060;
        var v28636 = typeof e$$52;
        var v27627 = v28636 == "object";
        if (v27627) {
          v26060 = b$$15;
        } else {
          v26060 = "";
        }
        var v23688 = v26060;
        var v18534 = v23687 + v23688;
        var v13097 = v18534 + "]";
        v6119 = b_(v13097, e$$52, c$$9, d$$10);
      }
      v6119;
      return;
    }
    introspect(JAM.policy.p3) {
      var v6123 = f$$4.isArray(b$$14)
    }
    if (v6123) {
      introspect(JAM.policy.p3) {
        f$$4.each(b$$14, v616);
      }
    } else {
      var v13099 = !c$$9;
      if (v13099) {
        introspect(JAM.policy.p3) {
          var v18535 = f$$4.type(b$$14)
        }
        v13099 = v18535 === "object";
      }
      var v6122 = v13099;
      if (v6122) {
        var e$$51;
        for (e$$51 in b$$14) {
          var v18536 = a$$19 + "[";
          var v13100 = v18536 + e$$51;
          var v6120 = v13100 + "]";
          var v6121 = b$$14[e$$51];
          b_(v6120, v6121, c$$9, d$$10);
        }
      } else {
        introspect(JAM.policy.p3) {
          d$$10(a$$19, b$$14);
        }
      }
    }
    return;
  }
  function b$(a$$20, c$$10) {
    var d$$11;
    var e$$53;
    var v13101 = f$$4.ajaxSettings;
    var v6124 = v13101.flatOptions;
    var v13102 = !v6124;
    if (v13102) {
      v6124 = {};
    }
    var g$$3 = v6124;
    for (d$$11 in c$$10) {
      var v13103 = c$$10[d$$11];
      var v6125 = v13103 !== b$$9;
      if (v6125) {
        var v18537;
        var v23690 = g$$3[d$$11];
        if (v23690) {
          v18537 = a$$20;
        } else {
          var v23689 = e$$53;
          var v26061 = !v23689;
          if (v26061) {
            v23689 = e$$53 = {};
          }
          v18537 = v23689;
        }
        var v13104 = v18537;
        introspect(JAM.policy.p2) {
          v13104[d$$11] = c$$10[d$$11];
        }
      }
    }
    if (e$$53) {
      var v13105 = !0;
      introspect(JAM.policy.p3) {
        f$$4.extend(v13105, a$$20, e$$53);
      }
    }
    return;
  }
  function bZ(a$$21, c$$11, d$$12, e$$54, f$$6, g$$4) {
    var v18538 = f$$6;
    var v23692 = !v18538;
    if (v23692) {
      var v23691 = c$$11.dataTypes;
      v18538 = v23691[0];
    }
    f$$6 = v18538;
    g$$4 = g$$4 || {};
    introspect(JAM.policy.p2) {
      g$$4[f$$6] = !0;
    }
    var h$$12 = a$$21[f$$6];
    var i$$88 = 0;
    var v6126;
    if (h$$12) {
      v6126 = h$$12.length;
    } else {
      v6126 = 0;
    }
    var j$$17 = v6126;
    var k$$5 = a$$21 === bS;
    var l$$23;
    var v13106 = i$$88 < j$$17;
    if (v13106) {
      var v18539 = k$$5;
      var v23693 = !v18539;
      if (v23693) {
        v18539 = !l$$23;
      }
      v13106 = v18539;
    }
    var v6127 = v13106;
    for (;v6127;) {
      introspect(JAM.policy.p3) {
        l$$23 = h$$12[i$$88](c$$11, d$$12, e$$54);
      }
      var v18540 = typeof l$$23;
      var v13107 = v18540 == "string";
      if (v13107) {
        var v18541;
        var v26062 = !k$$5;
        var v27628 = !v26062;
        if (v27628) {
          v26062 = g$$4[l$$23];
        }
        var v23694 = v26062;
        if (v23694) {
          v18541 = l$$23 = b$$9;
        } else {
          var v26063 = c$$11.dataTypes;
          introspect(JAM.policy.p3) {
            v26063.unshift(l$$23);
          }
          v18541 = l$$23 = bZ(a$$21, c$$11, d$$12, e$$54, l$$23, g$$4);
        }
        v18541;
      }
      i$$88++;
      var v13108 = i$$88 < j$$17;
      if (v13108) {
        var v18542 = k$$5;
        var v23695 = !v18542;
        if (v23695) {
          v18542 = !l$$23;
        }
        v13108 = v18542;
      }
      v6127 = v13108;
    }
    var v18543 = k$$5;
    var v23696 = !v18543;
    if (v23696) {
      v18543 = !l$$23;
    }
    var v13109 = v18543;
    if (v13109) {
      var v18544 = g$$4["*"];
      v13109 = !v18544;
    }
    var v6128 = v13109;
    if (v6128) {
      l$$23 = bZ(a$$21, c$$11, d$$12, e$$54, "*", g$$4);
    }
    return l$$23;
  }
  function bY(a$$22) {
    function v617(b$$16, c$$12) {
      var v13110 = typeof b$$16;
      var v6129 = v13110 != "string";
      if (v6129) {
        c$$12 = b$$16;
        b$$16 = "*";
      }
      introspect(JAM.policy.p3) {
        var v6132 = f$$4.isFunction(c$$12)
      }
      if (v6132) {
        introspect(JAM.policy.p3) {
          var v6130 = b$$16.toLowerCase()
        }
        introspect(JAM.policy.p3) {
          var d$$13 = v6130.split(bO)
        }
        var e$$55 = 0;
        var g$$5 = d$$13.length;
        var h$$13;
        var i$$89;
        var j$$18;
        var v6131 = e$$55 < g$$5;
        for (;v6131;) {
          h$$13 = d$$13[e$$55];
          introspect(JAM.policy.p3) {
            j$$18 = /^\+/.test(h$$13);
          }
          if (j$$18) {
            introspect(JAM.policy.p3) {
              var v26064 = h$$13.substr(1)
            }
            var v27629 = !v26064;
            if (v27629) {
              v26064 = "*";
            }
            h$$13 = v26064;
          }
          var v18545 = a$$22[h$$13];
          var v23697 = !v18545;
          if (v23697) {
            v18545 = [];
          }
          introspect(JAM.policy.p2) {
            i$$89 = a$$22[h$$13] = v18545;
          }
          var v18546;
          if (j$$18) {
            v18546 = "unshift";
          } else {
            v18546 = "push";
          }
          var v13111 = v18546;
          introspect(JAM.policy.p3) {
            i$$89[v13111](c$$12);
          }
          e$$55++;
          v6131 = e$$55 < g$$5;
        }
      }
      return;
    }
    return v617;
  }
  function bB(a$$23, b$$17, c$$13) {
    var v6133;
    var v13112 = b$$17 === "width";
    if (v13112) {
      v6133 = a$$23.offsetWidth;
    } else {
      v6133 = a$$23.offsetHeight;
    }
    var d$$14 = v6133;
    var v6134;
    var v13113 = b$$17 === "width";
    if (v13113) {
      v6134 = 1;
    } else {
      v6134 = 0;
    }
    var e$$56 = v6134;
    var g$$6 = 4;
    var v6137 = d$$14 > 0;
    if (v6137) {
      var v6136 = c$$13 !== "border";
      if (v6136) {
        var v6135 = e$$56 < g$$6;
        for (;v6135;) {
          var v18547 = !c$$13;
          if (v18547) {
            var v29281 = bx[e$$56];
            var v28637 = "padding" + v29281;
            introspect(JAM.policy.p3) {
              var v27630 = f$$4.css(a$$23, v28637)
            }
            var v26065 = parseFloat(v27630);
            var v27631 = !v26065;
            if (v27631) {
              v26065 = 0;
            }
            var v23698 = v26065;
            d$$14 = d$$14 - v23698;
          }
          var v13114;
          var v18548 = c$$13 === "margin";
          if (v18548) {
            var v29282 = bx[e$$56];
            var v28638 = c$$13 + v29282;
            introspect(JAM.policy.p3) {
              var v27632 = f$$4.css(a$$23, v28638)
            }
            var v26066 = parseFloat(v27632);
            var v27633 = !v26066;
            if (v27633) {
              v26066 = 0;
            }
            var v23699 = v26066;
            v13114 = d$$14 = d$$14 + v23699;
          } else {
            var v29705 = bx[e$$56];
            var v29283 = "border" + v29705;
            var v28639 = v29283 + "Width";
            introspect(JAM.policy.p3) {
              var v27634 = f$$4.css(a$$23, v28639)
            }
            var v26067 = parseFloat(v27634);
            var v27635 = !v26067;
            if (v27635) {
              v26067 = 0;
            }
            var v23700 = v26067;
            v13114 = d$$14 = d$$14 - v23700;
          }
          v13114;
          e$$56 = e$$56 + 2;
          v6135 = e$$56 < g$$6;
        }
      }
      return d$$14 + "px";
    }
    introspect(JAM.policy.p3) {
      d$$14 = by(a$$23, b$$17);
    }
    var v13115 = d$$14 < 0;
    var v18549 = !v13115;
    if (v18549) {
      v13115 = d$$14 == null;
    }
    var v6139 = v13115;
    if (v6139) {
      var v6138 = a$$23.style;
      d$$14 = v6138[b$$17];
    }
    introspect(JAM.policy.p3) {
      var v6140 = bt.test(d$$14)
    }
    if (v6140) {
      return d$$14;
    }
    var v6141 = parseFloat(d$$14);
    var v13116 = !v6141;
    if (v13116) {
      v6141 = 0;
    }
    d$$14 = v6141;
    if (c$$13) {
      var v6142 = e$$56 < g$$6;
      for (;v6142;) {
        var v29284 = bx[e$$56];
        var v28640 = "padding" + v29284;
        introspect(JAM.policy.p3) {
          var v27636 = f$$4.css(a$$23, v28640)
        }
        var v26068 = parseFloat(v27636);
        var v27637 = !v26068;
        if (v27637) {
          v26068 = 0;
        }
        var v23701 = v26068;
        d$$14 = d$$14 + v23701;
        var v18550 = c$$13 !== "padding";
        if (v18550) {
          var v29975 = bx[e$$56];
          var v29706 = "border" + v29975;
          var v29285 = v29706 + "Width";
          introspect(JAM.policy.p3) {
            var v28641 = f$$4.css(a$$23, v29285)
          }
          var v27638 = parseFloat(v28641);
          var v28642 = !v27638;
          if (v28642) {
            v27638 = 0;
          }
          var v26069 = v27638;
          d$$14 = d$$14 + v26069;
        }
        var v13117 = c$$13 === "margin";
        if (v13117) {
          var v29286 = bx[e$$56];
          var v28643 = c$$13 + v29286;
          introspect(JAM.policy.p3) {
            var v27639 = f$$4.css(a$$23, v28643)
          }
          var v26070 = parseFloat(v27639);
          var v27640 = !v26070;
          if (v27640) {
            v26070 = 0;
          }
          var v23702 = v26070;
          d$$14 = d$$14 + v23702;
        }
        e$$56 = e$$56 + 2;
        v6142 = e$$56 < g$$6;
      }
    }
    return d$$14 + "px";
  }
  function bn(a$$25) {
    var v13118 = a$$25.nodeName;
    var v18551 = !v13118;
    if (v18551) {
      v13118 = "";
    }
    var v6143 = v13118;
    introspect(JAM.policy.p3) {
      var b$$19 = v6143.toLowerCase()
    }
    var v6144;
    var v13120 = b$$19 === "input";
    if (v13120) {
      v6144 = bm(a$$25);
    } else {
      var v18552 = b$$19 !== "script";
      if (v18552) {
        var v26071 = a$$25.getElementsByTagName;
        var v23703 = typeof v26071;
        v18552 = v23703 != "undefined";
      }
      var v13119 = v18552;
      if (v13119) {
        introspect(JAM.policy.p3) {
          var v18553 = a$$25.getElementsByTagName("input")
        }
        introspect(JAM.policy.p3) {
          v13119 = f$$4.grep(v18553, bm);
        }
      }
      v6144 = v13119;
    }
    v6144;
    return;
  }
  function bm(a$$26) {
    var v18554 = a$$26.type;
    var v13121 = v18554 === "checkbox";
    var v18556 = !v13121;
    if (v18556) {
      var v18555 = a$$26.type;
      v13121 = v18555 === "radio";
    }
    var v6145 = v13121;
    if (v6145) {
      a$$26.defaultChecked = a$$26.checked;
    }
    return;
  }
  function bl(a$$27) {
    var v6146;
    var v23704 = a$$27.getElementsByTagName;
    var v18557 = typeof v23704;
    var v13123 = v18557 != "undefined";
    if (v13123) {
      introspect(JAM.policy.p3) {
        v6146 = a$$27.getElementsByTagName("*");
      }
    } else {
      var v13122;
      var v26072 = a$$27.querySelectorAll;
      var v23705 = typeof v26072;
      var v18558 = v23705 != "undefined";
      if (v18558) {
        introspect(JAM.policy.p3) {
          v13122 = a$$27.querySelectorAll("*");
        }
      } else {
        v13122 = [];
      }
      v6146 = v13122;
    }
    return v6146;
  }
  function bk(a$$28, b$$20) {
    var c$$14;
    var v13124 = b$$20.nodeType;
    var v6147 = v13124 === 1;
    if (v6147) {
      var v29287 = b$$20.clearAttributes;
      if (v29287) {
        introspect(JAM.policy.p3) {
          b$$20.clearAttributes();
        }
      }
      var v29288 = b$$20.mergeAttributes;
      if (v29288) {
        introspect(JAM.policy.p3) {
          b$$20.mergeAttributes(a$$28);
        }
      }
      var v28644 = b$$20.nodeName;
      introspect(JAM.policy.p3) {
        c$$14 = v28644.toLowerCase();
      }
      var v27641;
      var v28646 = c$$14 === "object";
      if (v28646) {
        v27641 = b$$20.outerHTML = a$$28.outerHTML;
      } else {
        var v28645;
        var v29707 = c$$14 !== "input";
        var v29977 = !v29707;
        if (v29977) {
          var v30207 = a$$28.type;
          var v29976 = v30207 !== "checkbox";
          if (v29976) {
            var v30208 = a$$28.type;
            v29976 = v30208 !== "radio";
          }
          v29707 = v29976;
        }
        var v29290 = v29707;
        if (v29290) {
          var v29289;
          var v29709 = c$$14 === "option";
          if (v29709) {
            v29289 = b$$20.selected = a$$28.defaultSelected;
          } else {
            var v29708;
            var v30209 = c$$14 === "input";
            var v30376 = !v30209;
            if (v30376) {
              v30209 = c$$14 === "textarea";
            }
            var v29979 = v30209;
            if (v29979) {
              v29708 = b$$20.defaultValue = a$$28.defaultValue;
            } else {
              var v30210 = c$$14 === "script";
              if (v30210) {
                var v30377 = b$$20.text;
                var v30378 = a$$28.text;
                v30210 = v30377 !== v30378;
              }
              var v29978 = v30210;
              if (v29978) {
                v29978 = b$$20.text = a$$28.text;
              }
              v29708 = v29978;
            }
            v29289 = v29708;
          }
          v28645 = v29289;
        } else {
          var v29710 = a$$28.checked;
          if (v29710) {
            b$$20.defaultChecked = b$$20.checked = a$$28.checked;
          }
          var v29980 = b$$20.value;
          var v29981 = a$$28.value;
          var v29711 = v29980 !== v29981;
          if (v29711) {
            v29711 = b$$20.value = a$$28.value;
          }
          v28645 = v29711;
        }
        v27641 = v28645;
      }
      v27641;
      var v26073 = f$$4.expando;
      introspect(JAM.policy.p3) {
        b$$20.removeAttribute(v26073);
      }
      introspect(JAM.policy.p3) {
        b$$20.removeAttribute("_submit_attached");
      }
      introspect(JAM.policy.p3) {
        b$$20.removeAttribute("_change_attached");
      }
    }
    return;
  }
  function bj(a$$29, b$$21) {
    var v18559 = b$$21.nodeType;
    var v13125 = v18559 === 1;
    if (v13125) {
      introspect(JAM.policy.p3) {
        var v23706 = f$$4.hasData(a$$29)
      }
      var v18560 = !v23706;
      v13125 = !v18560;
    }
    var v6152 = v13125;
    if (v6152) {
      var c$$15;
      var d$$15;
      var e$$57;
      introspect(JAM.policy.p3) {
        var g$$7 = f$$4._data(a$$29)
      }
      introspect(JAM.policy.p3) {
        var h$$14 = f$$4._data(b$$21, g$$7)
      }
      var i$$90 = g$$7.events;
      if (i$$90) {
        delete h$$14.handle;
        h$$14.events = {};
        for (c$$15 in i$$90) {
          d$$15 = 0;
          var v13126 = i$$90[c$$15];
          e$$57 = v13126.length;
          var v6150 = d$$15 < e$$57;
          for (;v6150;) {
            var v6148 = f$$4.event;
            var v13127 = i$$90[c$$15];
            var v6149 = v13127[d$$15];
            introspect(JAM.policy.p3) {
              v6148.add(b$$21, c$$15, v6149);
            }
            d$$15++;
            v6150 = d$$15 < e$$57;
          }
        }
      }
      var v6151 = h$$14.data;
      if (v6151) {
        var v13128 = h$$14.data;
        introspect(JAM.policy.p3) {
          var v31143 = f$$4.extend({}, v13128)
        }
        h$$14.data = v31143;
      }
    }
    return;
  }
  function bi(a$$30, b$$22) {
    var v6153;
    introspect(JAM.policy.p3) {
      var v13130 = f$$4.nodeName(a$$30, "table")
    }
    if (v13130) {
      introspect(JAM.policy.p3) {
        var v18561 = a$$30.getElementsByTagName("tbody")
      }
      var v13129 = v18561[0];
      var v18563 = !v13129;
      if (v18563) {
        var v23707 = a$$30.ownerDocument;
        introspect(JAM.policy.p3) {
          var v18562 = v23707.createElement("tbody")
        }
        introspect(JAM.policy.p3) {
          v13129 = a$$30.appendChild(v18562);
        }
      }
      v6153 = v13129;
    } else {
      v6153 = a$$30;
    }
    return v6153;
  }
  function U(a$$31) {
    introspect(JAM.policy.p3) {
      var b$$23 = V.split("|")
    }
    introspect(JAM.policy.p3) {
      var c$$16 = a$$31.createDocumentFragment()
    }
    var v6156 = c$$16.createElement;
    if (v6156) {
      var v6155 = b$$23.length;
      for (;v6155;) {
        introspect(JAM.policy.p3) {
          var v6154 = b$$23.pop()
        }
        introspect(JAM.policy.p3) {
          c$$16.createElement(v6154);
        }
        v6155 = b$$23.length;
      }
    }
    return c$$16;
  }
  function T$$2(a$$32, b$$24, c$$17) {
    function v621(a$$36, d$$19) {
      introspect(JAM.policy.p3) {
        var v13131 = f$$4.inArray(a$$36, b$$24)
      }
      var v6157 = v13131 >= 0;
      return v6157 === c$$17;
    }
    function v620(a$$35) {
      var v6158 = a$$35.nodeType;
      return v6158 === 1;
    }
    function v619(a$$34, d$$18) {
      var v6159 = a$$34 === b$$24;
      return v6159 === c$$17;
    }
    function v618(a$$33, d$$17) {
      introspect(JAM.policy.p3) {
        var v13132 = b$$24.call(a$$33, d$$17, a$$33)
      }
      var v6160 = !v13132;
      var e$$58 = !v6160;
      return e$$58 === c$$17;
    }
    b$$24 = b$$24 || 0;
    introspect(JAM.policy.p3) {
      var v6161 = f$$4.isFunction(b$$24)
    }
    if (v6161) {
      introspect(JAM.policy.p3) {
        return f$$4.grep(a$$32, v618);
      }
    }
    var v6162 = b$$24.nodeType;
    if (v6162) {
      introspect(JAM.policy.p3) {
        return f$$4.grep(a$$32, v619);
      }
    }
    var v13133 = typeof b$$24;
    var v6165 = v13133 == "string";
    if (v6165) {
      introspect(JAM.policy.p3) {
        var d$$16 = f$$4.grep(a$$32, v620)
      }
      introspect(JAM.policy.p3) {
        var v6164 = O.test(b$$24)
      }
      if (v6164) {
        var v6163 = !c$$17;
        introspect(JAM.policy.p3) {
          return f$$4.filter(b$$24, d$$16, v6163);
        }
      }
      introspect(JAM.policy.p3) {
        b$$24 = f$$4.filter(b$$24, d$$16);
      }
    }
    introspect(JAM.policy.p3) {
      return f$$4.grep(a$$32, v621);
    }
  }
  function S(a$$37) {
    var v13134 = !a$$37;
    var v18565 = !v13134;
    if (v18565) {
      var v18564 = a$$37.parentNode;
      v13134 = !v18564;
    }
    var v6166 = v13134;
    var v13136 = !v6166;
    if (v13136) {
      var v18566 = a$$37.parentNode;
      var v13135 = v18566.nodeType;
      v6166 = v13135 === 11;
    }
    return v6166;
  }
  function K() {
    return !0;
  }
  function J() {
    return !1;
  }
  function n$$57(a$$38, b$$25, c$$18) {
    function v622() {
      introspect(JAM.policy.p3) {
        var v18567 = f$$4._data(a$$38, e$$59)
      }
      var v13137 = !v18567;
      if (v13137) {
        introspect(JAM.policy.p3) {
          var v18568 = f$$4._data(a$$38, g$$8)
        }
        v13137 = !v18568;
      }
      var v6167 = v13137;
      if (v6167) {
        var v18569 = !0;
        introspect(JAM.policy.p3) {
          f$$4.removeData(a$$38, d$$20, v18569);
        }
        introspect(JAM.policy.p3) {
          h$$15.fire();
        }
      }
      return;
    }
    var d$$20 = b$$25 + "defer";
    var e$$59 = b$$25 + "queue";
    var g$$8 = b$$25 + "mark";
    introspect(JAM.policy.p3) {
      var h$$15 = f$$4._data(a$$38, d$$20)
    }
    var v18570 = h$$15;
    if (v18570) {
      var v23708 = c$$18 === "queue";
      var v26075 = !v23708;
      if (v26075) {
        introspect(JAM.policy.p3) {
          var v26074 = f$$4._data(a$$38, e$$59)
        }
        v23708 = !v26074;
      }
      v18570 = v23708;
    }
    var v13138 = v18570;
    if (v13138) {
      var v18571 = c$$18 === "mark";
      var v23710 = !v18571;
      if (v23710) {
        introspect(JAM.policy.p3) {
          var v23709 = f$$4._data(a$$38, g$$8)
        }
        v18571 = !v23709;
      }
      v13138 = v18571;
    }
    var v6168 = v13138;
    if (v6168) {
      setTimeout(v622, 0);
    }
    return;
  }
  function m$$4(a$$39) {
    var b$$26;
    for (b$$26 in a$$39) {
      var v13139 = b$$26 === "data";
      if (v13139) {
        var v18572 = a$$39[b$$26];
        introspect(JAM.policy.p3) {
          v13139 = f$$4.isEmptyObject(v18572);
        }
      }
      var v6169 = v13139;
      if (v6169) {
        continue;
      }
      var v6170 = b$$26 !== "toJSON";
      if (v6170) {
        return !1;
      }
    }
    return !0;
  }
  function l$$21(a$$40, c$$19, d$$21) {
    var v13140 = d$$21 === b$$9;
    if (v13140) {
      var v18573 = a$$40.nodeType;
      v13140 = v18573 === 1;
    }
    var v6174 = v13140;
    if (v6174) {
      introspect(JAM.policy.p3) {
        var v13141 = c$$19.replace(k$$2, "-$1")
      }
      introspect(JAM.policy.p3) {
        var v6171 = v13141.toLowerCase()
      }
      var e$$60 = "data-" + v6171;
      introspect(JAM.policy.p3) {
        d$$21 = a$$40.getAttribute(e$$60);
      }
      var v13142 = typeof d$$21;
      var v6173 = v13142 == "string";
      if (v6173) {
        try {
          var v6172;
          var v13144 = d$$21 === "true";
          if (v13144) {
            v6172 = !0;
          } else {
            var v13143;
            var v18575 = d$$21 === "false";
            if (v18575) {
              v13143 = !1;
            } else {
              var v18574;
              var v23712 = d$$21 === "null";
              if (v23712) {
                v18574 = null;
              } else {
                var v23711;
                introspect(JAM.policy.p3) {
                  var v26077 = f$$4.isNumeric(d$$21)
                }
                if (v26077) {
                  v23711 = +d$$21;
                } else {
                  var v26076;
                  introspect(JAM.policy.p3) {
                    var v27642 = j$$14.test(d$$21)
                  }
                  if (v27642) {
                    introspect(JAM.policy.p3) {
                      v26076 = f$$4.parseJSON(d$$21);
                    }
                  } else {
                    v26076 = d$$21;
                  }
                  v23711 = v26076;
                }
                v18574 = v23711;
              }
              v13143 = v18574;
            }
            v6172 = v13143;
          }
          d$$21 = v6172;
        } catch (g$$9) {
        }
        introspect(JAM.policy.p3) {
          f$$4.data(a$$40, c$$19, d$$21);
        }
      } else {
        d$$21 = b$$9;
      }
    }
    return d$$21;
  }
  function h$$9(a$$41) {
    introspect(JAM.policy.p2) {
      var b$$27 = g[a$$41] = {}
    }
    var c$$20;
    var d$$22;
    introspect(JAM.policy.p3) {
      a$$41 = a$$41.split(/\s+/);
    }
    c$$20 = 0;
    d$$22 = a$$41.length;
    var v6176 = c$$20 < d$$22;
    for (;v6176;) {
      var v6175 = a$$41[c$$20];
      introspect(JAM.policy.p2) {
        b$$27[v6175] = !0;
      }
      c$$20++;
      v6176 = c$$20 < d$$22;
    }
    return b$$27;
  }
  var c$$5 = a$$13.document;
  var d$$6 = a$$13.navigator;
  var e$$47 = a$$13.location;
  var f$$4 = v675();
  var g = {};
  f$$4.Callbacks = v687;
  var i$$85 = [].slice;
  var v13145 = {Deferred:v698, when:v701};
  introspect(JAM.policy.p3) {
    f$$4.extend(v13145);
  }
  var v13146 = f$$4;
  var v31144 = v704();
  v13146.support = v31144;
  var j$$14 = /^(?:\{.*\}|\[.*\])$/;
  var k$$2 = /([A-Z])/g;
  var v29712 = f$$4.fn;
  var v29291 = v29712.jquery;
  introspect(JAM.policy.p3) {
    var v29292 = Math.random()
  }
  var v28647 = v29291 + v29292;
  introspect(JAM.policy.p3) {
    var v27643 = v28647.replace(/\D/g, "")
  }
  var v26078 = "jQuery" + v27643;
  var v27644 = !0;
  var v27645 = !0;
  var v26079 = {embed:v27644, object:"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000", applet:v27645};
  var v23713 = {cache:{}, uuid:0, expando:v26078, noData:v26079, hasData:v705, data:v706, removeData:v707, _data:v708, acceptData:v709};
  introspect(JAM.policy.p3) {
    f$$4.extend(v23713);
  }
  var v23714 = f$$4.fn;
  var v23715 = {data:v713, removeData:v715};
  introspect(JAM.policy.p3) {
    v23714.extend(v23715);
  }
  var v18576 = {_mark:v716, _unmark:v717, queue:v718, dequeue:v720};
  introspect(JAM.policy.p3) {
    f$$4.extend(v18576);
  }
  var v13147 = f$$4.fn;
  var v13148 = {queue:v722, dequeue:v724, delay:v727, clearQueue:v728, promise:v729};
  introspect(JAM.policy.p3) {
    v13147.extend(v13148);
  }
  var o = /[\n\t\r]/g;
  var p$$22 = /\s+/;
  var q = /\r/g;
  var r$$2 = /^(?:button|input)$/i;
  var s$$15 = /^(?:button|input|object|select|textarea)$/i;
  var t$$2 = /^a(?:rea)?$/i;
  var u$$1 = /^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$/i;
  var v6177 = f$$4.support;
  var v$$4 = v6177.getSetAttribute;
  var w$$11;
  var x$$67;
  var y$$49;
  var v30211 = f$$4.fn;
  var v30212 = {attr:v730, removeAttr:v732, prop:v733, removeProp:v735, addClass:v737, removeClass:v739, toggleClass:v742, hasClass:v743, val:v746};
  introspect(JAM.policy.p3) {
    v30211.extend(v30212);
  }
  var v30503 = {get:v747};
  var v30504 = {get:v748, set:v750};
  var v30379 = {option:v30503, select:v30504};
  var v30505 = !0;
  var v30506 = !0;
  var v30507 = !0;
  var v30508 = !0;
  var v30509 = !0;
  var v30510 = !0;
  var v30511 = !0;
  var v30512 = !0;
  var v30380 = {val:v30505, css:v30506, html:v30507, text:v30508, data:v30509, width:v30510, height:v30511, offset:v30512};
  var v30513 = {set:v753};
  var v30514 = {get:v754, set:v755};
  var v30381 = {type:v30513, value:v30514};
  var v30382 = {tabindex:"tabIndex", readonly:"readOnly", "for":"htmlFor", "class":"className", maxlength:"maxLength", cellspacing:"cellSpacing", cellpadding:"cellPadding", rowspan:"rowSpan", colspan:"colSpan", usemap:"useMap", frameborder:"frameBorder", contenteditable:"contentEditable"};
  var v30515 = {get:v757};
  var v30383 = {tabIndex:v30515};
  var v30213 = {valHooks:v30379, attrFn:v30380, attr:v751, removeAttr:v752, attrHooks:v30381, propFix:v30382, prop:v756, propHooks:v30383};
  introspect(JAM.policy.p3) {
    f$$4.extend(v30213);
  }
  var v29982 = f$$4.attrHooks;
  var v30214 = f$$4.propHooks;
  v29982.tabindex = v30214.tabIndex;
  x$$67 = {get:v758, set:v759};
  var v29713 = !v$$4;
  if (v29713) {
    var v30516 = !0;
    var v30517 = !0;
    var v30518 = !0;
    y$$49 = {name:v30516, id:v30517, coords:v30518};
    var v30519 = f$$4.valHooks;
    w$$11 = v30519.button = {get:v760, set:v761};
    var v30520 = f$$4.attrHooks;
    var v30384 = v30520.tabindex;
    v30384.set = w$$11.set;
    var v30215 = ["width", "height"];
    introspect(JAM.policy.p3) {
      f$$4.each(v30215, v763);
    }
    var v29983 = f$$4.attrHooks;
    var v30216 = w$$11.get;
    v29983.contenteditable = {get:v30216, set:v764};
  }
  var v29293 = f$$4.support;
  var v28648 = v29293.hrefNormalized;
  var v29295 = !v28648;
  if (v29295) {
    var v29294 = ["href", "src", "width", "height"];
    introspect(JAM.policy.p3) {
      f$$4.each(v29294, v766);
    }
  }
  var v28649 = f$$4.support;
  var v27646 = v28649.style;
  var v28651 = !v27646;
  if (v28651) {
    var v28650 = f$$4.attrHooks;
    v28650.style = {get:v767, set:v768};
  }
  var v27647 = f$$4.support;
  var v26080 = v27647.optSelected;
  var v27649 = !v26080;
  if (v27649) {
    var v27648 = f$$4.propHooks;
    var v29296 = f$$4.propHooks;
    var v28652 = v29296.selected;
    var v28653 = {get:v769};
    introspect(JAM.policy.p3) {
      var v31145 = f$$4.extend(v28652, v28653)
    }
    v27648.selected = v31145;
  }
  var v26081 = f$$4.support;
  var v23716 = v26081.enctype;
  var v26083 = !v23716;
  if (v26083) {
    var v26082 = f$$4.propFix;
    v26082.enctype = "encoding";
  }
  var v23717 = f$$4.support;
  var v18577 = v23717.checkOn;
  var v23719 = !v18577;
  if (v23719) {
    var v23718 = ["radio", "checkbox"];
    introspect(JAM.policy.p3) {
      f$$4.each(v23718, v771);
    }
  }
  var v13149 = ["radio", "checkbox"];
  introspect(JAM.policy.p3) {
    f$$4.each(v13149, v773);
  }
  var z$$2 = /^(?:textarea|input|select)$/i;
  var A = /^([^\.]*)?(?:\.(.+))?$/;
  var B = /(?:^|\s)hover(\.\S+)?\b/;
  var C = /^key/;
  var D = /^(?:mouse|contextmenu)|click/;
  var E = /^(?:focusinfocus|focusoutblur)$/;
  var F = /^(\w*)(?:#([\w\-]+))?(?:\.([\w\-]+))?$/;
  var v30385 = f$$4;
  var v30624 = !0;
  var v30625 = !0;
  var v30626 = !0;
  var v30521 = {getData:v30624, setData:v30625, changeData:v30626};
  introspect(JAM.policy.p3) {
    var v30522 = "attrChange attrName relatedNode srcElement altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" ")
  }
  introspect(JAM.policy.p3) {
    var v30627 = "char charCode key keyCode".split(" ")
  }
  var v30523 = {props:v30627, filter:v779};
  introspect(JAM.policy.p3) {
    var v30628 = "button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement".split(" ")
  }
  var v30524 = {props:v30628, filter:v780};
  var v30697 = f$$4.bindReady;
  var v30629 = {setup:v30697};
  var v30698 = !0;
  var v30630 = {noBubble:v30698};
  var v30631 = {delegateType:"focusin"};
  var v30632 = {delegateType:"focusout"};
  var v30633 = {setup:v782, teardown:v783};
  var v30525 = {ready:v30629, load:v30630, focus:v30631, blur:v30632, beforeunload:v30633};
  v30385.event = {add:v775, global:{}, remove:v776, customEvent:v30521, trigger:v777, dispatch:v778, props:v30522, fixHooks:{}, keyHooks:v30523, mouseHooks:v30524, fix:v781, special:v30525, simulate:v784};
  var v30386 = f$$4.event;
  var v30526 = f$$4.event;
  v30386.handle = v30526.dispatch;
  var v30217;
  var v30387 = c$$5.removeEventListener;
  if (v30387) {
    v30217 = v785;
  } else {
    v30217 = v786;
  }
  f$$4.removeEvent = v30217;
  f$$4.Event = v787;
  var v29714 = f$$4.Event;
  v29714.prototype = {preventDefault:v788, stopPropagation:v789, stopImmediatePropagation:v790, isDefaultPrevented:J, isPropagationStopped:J, isImmediatePropagationStopped:J};
  var v29297 = {mouseenter:"mouseover", mouseleave:"mouseout"};
  introspect(JAM.policy.p3) {
    f$$4.each(v29297, v792);
  }
  var v29298 = f$$4.support;
  var v28654 = v29298.submitBubbles;
  var v29300 = !v28654;
  if (v29300) {
    var v29715 = f$$4.event;
    var v29299 = v29715.special;
    v29299.submit = {setup:v795, postDispatch:v796, teardown:v797};
  }
  var v28655 = f$$4.support;
  var v27650 = v28655.changeBubbles;
  var v28657 = !v27650;
  if (v28657) {
    var v29301 = f$$4.event;
    var v28656 = v29301.special;
    v28656.change = {setup:v802, handle:v803, teardown:v804};
  }
  var v27651 = f$$4.support;
  var v26084 = v27651.focusinBubbles;
  var v27653 = !v26084;
  if (v27653) {
    var v27652 = {focus:"focusin", blur:"focusout"};
    introspect(JAM.policy.p3) {
      f$$4.each(v27652, v807);
    }
  }
  var v23720 = f$$4.fn;
  var v23721 = {on:v810, one:v811, off:v813, bind:v814, unbind:v815, live:v816, die:v817, delegate:v818, undelegate:v819, trigger:v821, triggerHandler:v822, toggle:v823, hover:v824};
  introspect(JAM.policy.p3) {
    v23720.extend(v23721);
  }
  introspect(JAM.policy.p3) {
    var v18578 = "blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu".split(" ")
  }
  introspect(JAM.policy.p3) {
    f$$4.each(v18578, v826);
  }
  v905();
  var L = /Until$/;
  var M = /^(?:parents|prevUntil|prevAll)/;
  var N = /,/;
  var O = /^.[^:#\[\.,]*$/;
  var v6178 = Array.prototype;
  var P = v6178.slice;
  var v13150 = f$$4.expr;
  var v6179 = v13150.match;
  var Q = v6179.globalPOS;
  var v6180 = !0;
  var v6181 = !0;
  var v6182 = !0;
  var v6183 = !0;
  var R = {children:v6180, contents:v6181, next:v6182, prev:v6183};
  var v18579 = f$$4.fn;
  var v18580 = {find:v907, has:v909, not:v910, filter:v911, is:v912, closest:v913, index:v914, add:v915, andSelf:v916};
  introspect(JAM.policy.p3) {
    v18579.extend(v18580);
  }
  var v18581 = {parent:v917, parents:v918, parentsUntil:v919, next:v920, prev:v921, nextAll:v922, prevAll:v923, nextUntil:v924, prevUntil:v925, siblings:v926, children:v927, contents:v928};
  introspect(JAM.policy.p3) {
    f$$4.each(v18581, v930);
  }
  var v13151 = {filter:v931, dir:v932, nth:v933, sibling:v934};
  introspect(JAM.policy.p3) {
    f$$4.extend(v13151);
  }
  var V = "abbr|article|aside|audio|bdi|canvas|data|datalist|details|figcaption|figure|footer|header|hgroup|mark|meter|nav|output|progress|section|summary|time|video";
  var W = / jQuery\d+="(?:\d+|null)"/g;
  var X = /^\s+/;
  var Y = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/ig;
  var Z = /<([\w:]+)/;
  var $$$2 = /<tbody/i;
  var _$$1 = /<|&#?\w+;/;
  var ba = /<(?:script|style)/i;
  var bb = /<(?:script|object|embed|option|style)/i;
  var v13152 = "<(?:" + V;
  var v6184 = v13152 + ")[\\s/>]";
  var bc = new RegExp(v6184, "i");
  var bd = /checked\s*(?:[^=]|=\s*.checked.)/i;
  var be = /\/(java|ecma)script/i;
  var bf = /^\s*<!(?:\[CDATA\[|\-\-)/;
  var v6185 = [1, "<select multiple='multiple'>", "</select>"];
  var v6186 = [1, "<fieldset>", "</fieldset>"];
  var v6187 = [1, "<table>", "</table>"];
  var v6188 = [2, "<table><tbody>", "</tbody></table>"];
  var v6189 = [3, "<table><tbody><tr>", "</tr></tbody></table>"];
  var v6190 = [2, "<table><tbody></tbody><colgroup>", "</colgroup></table>"];
  var v6191 = [1, "<map>", "</map>"];
  var v6192 = [0, "", ""];
  var bg = {option:v6185, legend:v6186, thead:v6187, tr:v6188, td:v6189, col:v6190, area:v6191, _default:v6192};
  var bh = U(c$$5);
  bg.optgroup = bg.option;
  bg.tbody = bg.tfoot = bg.colgroup = bg.caption = bg.thead;
  bg.th = bg.td;
  var v29302 = f$$4.support;
  var v28658 = v29302.htmlSerialize;
  var v29303 = !v28658;
  if (v29303) {
    bg._default = [1, "div<div>", "</div>"];
  }
  var v27654 = f$$4.fn;
  var v27655 = {text:v936, wrapAll:v939, wrapInner:v942, wrap:v944, unwrap:v946, append:v948, prepend:v950, before:v952, after:v954, remove:v955, empty:v956, clone:v958, html:v960, replaceWith:v963, detach:v964, domManip:v968};
  introspect(JAM.policy.p3) {
    v27654.extend(v27655);
  }
  f$$4.buildFragment = v969;
  f$$4.fragments = {};
  var v18582 = {appendTo:"append", prependTo:"prepend", insertBefore:"before", insertAfter:"after", replaceAll:"replaceWith"};
  introspect(JAM.policy.p3) {
    f$$4.each(v18582, v971);
  }
  var v13153 = {clone:v972, clean:v974, cleanData:v975};
  introspect(JAM.policy.p3) {
    f$$4.extend(v13153);
  }
  var bp = /alpha\([^)]*\)/i;
  var bq = /opacity=([^)]*)/;
  var br = /([A-Z]|^ms)/g;
  var bs = /^[\-+]?(?:\d*\.)?\d+$/i;
  var bt = /^-?(?:\d*\.)?\d+(?!px)[^\d\s]+$/i;
  var bu = /^([\-+])=([\-+.\de]+)/;
  var bv = /^margin/;
  var bw = {position:"absolute", visibility:"hidden", display:"block"};
  var bx = ["Top", "Right", "Bottom", "Left"];
  var by;
  var bz;
  var bA;
  var v30218 = f$$4.fn;
  v30218.css = v977;
  var v30527 = {get:v978};
  var v30388 = {opacity:v30527};
  var v30528 = !0;
  var v30529 = !0;
  var v30530 = !0;
  var v30531 = !0;
  var v30532 = !0;
  var v30533 = !0;
  var v30534 = !0;
  var v30535 = !0;
  var v30389 = {fillOpacity:v30528, fontWeight:v30529, lineHeight:v30530, opacity:v30531, orphans:v30532, widows:v30533, zIndex:v30534, zoom:v30535};
  var v30634;
  var v30746 = f$$4.support;
  var v30699 = v30746.cssFloat;
  if (v30699) {
    v30634 = "cssFloat";
  } else {
    v30634 = "styleFloat";
  }
  var v30536 = v30634;
  var v30390 = {"float":v30536};
  var v30219 = {cssHooks:v30388, cssNumber:v30389, cssProps:v30390, style:v979, css:v980, swap:v981};
  introspect(JAM.policy.p3) {
    f$$4.extend(v30219);
  }
  f$$4.curCSS = f$$4.css;
  var v29984 = c$$5.defaultView;
  if (v29984) {
    var v30220 = c$$5.defaultView;
    v29984 = v30220.getComputedStyle;
  }
  var v29716 = v29984;
  if (v29716) {
    bz = v982;
  }
  var v29717 = c$$5.documentElement;
  var v29304 = v29717.currentStyle;
  if (v29304) {
    bA = v983;
  }
  by = bz || bA;
  var v27656 = ["height", "width"];
  introspect(JAM.policy.p3) {
    f$$4.each(v27656, v987);
  }
  var v27657 = f$$4.support;
  var v26085 = v27657.opacity;
  var v27659 = !v26085;
  if (v27659) {
    var v27658 = f$$4.cssHooks;
    v27658.opacity = {get:v988, set:v989};
  }
  introspect(JAM.policy.p3) {
    f$$4(v992);
  }
  var v23722 = f$$4.expr;
  if (v23722) {
    var v26086 = f$$4.expr;
    v23722 = v26086.filters;
  }
  var v18583 = v23722;
  if (v18583) {
    var v27660 = f$$4.expr;
    var v26087 = v27660.filters;
    v26087.hidden = v993;
    var v27661 = f$$4.expr;
    var v26088 = v27661.filters;
    v26088.visible = v994;
  }
  var v13154 = {margin:"", padding:"", border:"Width"};
  introspect(JAM.policy.p3) {
    f$$4.each(v13154, v996);
  }
  var bC = /%20/g;
  var bD = /\[\]$/;
  var bE = /\r?\n/g;
  var bF = /#.*$/;
  var bG = /^(.*?):[ \t]*([^\r\n]*)\r?$/mg;
  var bH = /^(?:color|date|datetime|datetime-local|email|hidden|month|number|password|range|search|tel|text|time|url|week)$/i;
  var bI = /^(?:about|app|app\-storage|.+\-extension|file|res|widget):$/;
  var bJ = /^(?:GET|HEAD)$/;
  var bK = /^\/\//;
  var bL = /\?/;
  var bM = /<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi;
  var bN = /^(?:select|textarea)/i;
  var bO = /\s+/;
  var bP = /([?&])_=[^&]*/;
  var bQ = /^([\w\+\.\-]+:)(?:\/\/([^\/?#:]*)(?::(\d+))?)?/;
  var v6193 = f$$4.fn;
  var bR = v6193.load;
  var bS = {};
  var bT = {};
  var bU;
  var bV;
  var v6194 = ["*/"];
  var v6195 = ["*"];
  var bW = v6194 + v6195;
  try {
    bU = e$$47.href;
  } catch (bX) {
    introspect(JAM.policy.p3) {
      bU = c$$5.createElement("a");
    }
    bU.href = "";
    bU = bU.href;
  }
  introspect(JAM.policy.p3) {
    var v28659 = bU.toLowerCase()
  }
  introspect(JAM.policy.p3) {
    var v27662 = bQ.exec(v28659)
  }
  var v28660 = !v27662;
  if (v28660) {
    v27662 = [];
  }
  bV = v27662;
  var v27663 = f$$4.fn;
  var v27664 = {load:v999, serialize:v1000, serializeArray:v1005};
  introspect(JAM.policy.p3) {
    v27663.extend(v27664);
  }
  introspect(JAM.policy.p3) {
    var v26089 = "ajaxStart ajaxStop ajaxComplete ajaxError ajaxSuccess ajaxSend".split(" ")
  }
  introspect(JAM.policy.p3) {
    f$$4.each(v26089, v1007);
  }
  var v23723 = ["get", "post"];
  introspect(JAM.policy.p3) {
    f$$4.each(v23723, v1009);
  }
  var v27665 = bV[1];
  introspect(JAM.policy.p3) {
    var v26090 = bI.test(v27665)
  }
  var v26091 = !0;
  var v26092 = !0;
  var v26093 = !0;
  var v26094 = {xml:"application/xml, text/xml", html:"text/html", text:"text/plain", json:"application/json, text/javascript", "*":bW};
  var v26095 = {xml:/xml/, html:/html/, json:/json/};
  var v26096 = {xml:"responseXML", text:"responseText"};
  var v27666 = a$$13.String;
  var v27667 = !0;
  var v27668 = f$$4.parseJSON;
  var v27669 = f$$4.parseXML;
  var v26097 = {"* text":v27666, "text html":v27667, "text json":v27668, "text xml":v27669};
  var v27670 = !0;
  var v27671 = !0;
  var v26098 = {context:v27670, url:v27671};
  var v23724 = {url:bU, isLocal:v26090, global:v26091, type:"GET", contentType:"application/x-www-form-urlencoded; charset=UTF-8", processData:v26092, async:v26093, accepts:v26094, contents:v26095, responseFields:v26096, converters:v26097, flatOptions:v26098};
  var v23725 = bY(bS);
  var v23726 = bY(bT);
  var v18584 = {getScript:v1010, getJSON:v1011, ajaxSetup:v1012, ajaxSettings:v23724, ajaxPrefilter:v23725, ajaxTransport:v23726, ajax:v1020, param:v1022};
  introspect(JAM.policy.p3) {
    f$$4.extend(v18584);
  }
  var v13155 = {active:0, lastModified:{}, etag:{}};
  introspect(JAM.policy.p3) {
    f$$4.extend(v13155);
  }
  introspect(JAM.policy.p3) {
    var cc = f$$4.now()
  }
  var cd = /(\=)\?(&|$)|\?\?/i;
  var v26099 = {jsonp:"callback", jsonpCallback:v1023};
  introspect(JAM.policy.p3) {
    f$$4.ajaxSetup(v26099);
  }
  introspect(JAM.policy.p3) {
    f$$4.ajaxPrefilter("json jsonp", v1027);
  }
  var v26100 = {script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"};
  var v26101 = {script:/javascript|ecmascript/};
  var v26102 = {"text script":v1028};
  var v23727 = {accepts:v26100, contents:v26101, converters:v26102};
  introspect(JAM.policy.p3) {
    f$$4.ajaxSetup(v23727);
  }
  introspect(JAM.policy.p3) {
    f$$4.ajaxPrefilter("script", v1029);
  }
  introspect(JAM.policy.p3) {
    f$$4.ajaxTransport("script", v1033);
  }
  var v6196;
  var v13156 = a$$13.ActiveXObject;
  if (v13156) {
    v6196 = v1034;
  } else {
    v6196 = !1;
  }
  var ce = v6196;
  var cf = 0;
  var cg;
  var v18585 = f$$4.ajaxSettings;
  var v23728;
  var v26103 = a$$13.ActiveXObject;
  if (v26103) {
    v23728 = v1035;
  } else {
    v23728 = ch$$14;
  }
  v18585.xhr = v23728;
  var v23729 = f$$4.ajaxSettings;
  introspect(JAM.policy.p3) {
    var v18586 = v23729.xhr()
  }
  v1036(v18586);
  var v18587 = f$$4.support;
  var v13157 = v18587.ajax;
  if (v13157) {
    introspect(JAM.policy.p3) {
      f$$4.ajaxTransport(v1040);
    }
  }
  var cj = {};
  var ck;
  var cl;
  var cm = /^(?:toggle|show|hide)$/;
  var cn = /^([+\-]=)?([\d+.\-]+)([a-z%]*)$/i;
  var co;
  var v6197 = ["height", "marginTop", "marginBottom", "paddingTop", "paddingBottom"];
  var v6198 = ["width", "marginLeft", "marginRight", "paddingLeft", "paddingRight"];
  var v6199 = ["opacity"];
  var cp = [v6197, v6198, v6199];
  var cq;
  var v28661 = f$$4.fn;
  var v29718 = f$$4.fn;
  var v29305 = v29718.toggle;
  var v28662 = {show:v1041, hide:v1042, _toggle:v29305, toggle:v1044, fadeTo:v1045, animate:v1046, stop:v1048};
  introspect(JAM.policy.p3) {
    v28661.extend(v28662);
  }
  var v29306 = ct("show", 1);
  var v29307 = ct("hide", 1);
  var v29308 = ct("toggle", 1);
  var v29309 = {opacity:"show"};
  var v29310 = {opacity:"hide"};
  var v29311 = {opacity:"toggle"};
  var v28663 = {slideDown:v29306, slideUp:v29307, slideToggle:v29308, fadeIn:v29309, fadeOut:v29310, fadeToggle:v29311};
  introspect(JAM.policy.p3) {
    f$$4.each(v28663, v1050);
  }
  var v28664 = {linear:v1053, swing:v1054};
  var v27672 = {speed:v1052, easing:v28664, timers:[], fx:v1055};
  introspect(JAM.policy.p3) {
    f$$4.extend(v27672);
  }
  var v26104 = f$$4.fx;
  v26104.prototype = {update:v1056, cur:v1057, custom:v1059, show:v1060, hide:v1061, step:v1063};
  var v23730 = f$$4.fx;
  var v26105 = {slow:600, fast:200, _default:400};
  var v26106 = {opacity:v1066, _default:v1067};
  var v23731 = {tick:v1064, interval:13, stop:v1065, speeds:v26105, step:v26106};
  introspect(JAM.policy.p3) {
    f$$4.extend(v23730, v23731);
  }
  var v23732 = cp.concat;
  introspect(JAM.policy.p3) {
    var v18588 = v23732.apply([], cp)
  }
  introspect(JAM.policy.p3) {
    f$$4.each(v18588, v1069);
  }
  var v18589 = f$$4.expr;
  if (v18589) {
    var v23733 = f$$4.expr;
    v18589 = v23733.filters;
  }
  var v13158 = v18589;
  if (v13158) {
    var v23734 = f$$4.expr;
    var v18590 = v23734.filters;
    v18590.animated = v1071;
  }
  var cv;
  var cw = /^t(?:able|d|h)$/i;
  var cx = /^(?:body|html)$/i;
  var v29312;
  var v29985 = c$$5.documentElement;
  var v29719 = "getBoundingClientRect" in v29985;
  if (v29719) {
    v29312 = cv = v1072;
  } else {
    v29312 = cv = v1073;
  }
  v29312;
  var v29313 = f$$4.fn;
  v29313.offset = v1075;
  f$$4.offset = {bodyOffset:v1076, setOffset:v1077};
  var v27673 = f$$4.fn;
  var v27674 = {position:v1078, offsetParent:v1080};
  introspect(JAM.policy.p3) {
    v27673.extend(v27674);
  }
  var v26107 = {scrollLeft:"pageXOffset", scrollTop:"pageYOffset"};
  introspect(JAM.policy.p3) {
    f$$4.each(v26107, v1083);
  }
  var v23735 = {Height:"height", Width:"width"};
  introspect(JAM.policy.p3) {
    f$$4.each(v23735, v1088);
  }
  a$$13.jQuery = a$$13.$ = f$$4;
  var v26108 = typeof define;
  var v23736 = v26108 == "function";
  if (v23736) {
    v23736 = define.amd;
  }
  var v18591 = v23736;
  if (v18591) {
    var v23737 = define.amd;
    v18591 = v23737.jQuery;
  }
  var v13159 = v18591;
  if (v13159) {
    introspect(JAM.policy.p3) {
      define("jquery", [], v1089);
    }
  }
  return;
}
function v614() {
  function v613(x$$66, y$$48, x2$$1, y2$$1) {
    var dashArray = [4, 2];
    var v6200 = !dashArray;
    if (v6200) {
      dashArray = [10, 5];
    }
    var dashCount = dashArray.length;
    introspect(JAM.policy.p3) {
      this.moveTo(x$$66, y$$48);
    }
    var dx$$5 = x2$$1 - x$$66;
    var dy$$5 = y2$$1 - y$$48;
    var slope = dy$$5 / dx$$5;
    var v13160 = dx$$5 * dx$$5;
    var v13161 = dy$$5 * dy$$5;
    var v6201 = v13160 + v13161;
    introspect(JAM.policy.p3) {
      var distRemaining = Math.sqrt(v6201)
    }
    var dashIndex = 0;
    var draw = true;
    var v6206 = distRemaining >= .1;
    for (;v6206;) {
      dashIndex = dashIndex + 1;
      var v6202 = dashIndex % dashCount;
      var dashLength = dashArray[v6202];
      var v6203 = dashLength > distRemaining;
      if (v6203) {
        dashLength = distRemaining;
      }
      var v13162 = dashLength * dashLength;
      var v18592 = slope * slope;
      var v13163 = 1 + v18592;
      var v6204 = v13162 / v13163;
      introspect(JAM.policy.p3) {
        var xStep = Math.sqrt(v6204)
      }
      x$$66 = x$$66 + xStep;
      var v13164 = slope * xStep;
      y$$48 = y$$48 + v13164;
      var v13165;
      if (draw) {
        v13165 = "lineTo";
      } else {
        v13165 = "moveTo";
      }
      var v6205 = v13165;
      introspect(JAM.policy.p3) {
        this[v6205](x$$66, y$$48);
      }
      distRemaining = distRemaining - dashLength;
      draw = !draw;
      v6206 = distRemaining >= .1;
    }
    return;
  }
  function v612(npos$$11, pos$$55, dim$$24) {
    var v6207 = npos$$11.x;
    var v6208 = npos$$11.y;
    var a$$12 = new Complex(v6207, v6208);
    var v13166 = a$$12.x;
    var v6209 = v13166 + dim$$24;
    var v13167 = npos$$11.y;
    var v6210 = v13167 - dim$$24;
    var b$$8 = new Complex(v6209, v6210);
    var v6211 = b$$8.x;
    var v13168 = npos$$11.y;
    var v6212 = v13168 + dim$$24;
    var c$$4 = new Complex(v6211, v6212);
    var v6213 = pos$$55.x;
    var v6214 = pos$$55.y;
    pos$$55 = new Complex(v6213, v6214);
    var negOne = new Complex(-1, -1);
    var v13169 = c$$4.x;
    var v13170 = a$$12.x;
    var v6215 = v13169 - v13170;
    var v13171 = c$$4.y;
    var v13172 = a$$12.y;
    var v6216 = v13171 - v13172;
    var v0 = new Complex(v6215, v6216);
    var v13173 = b$$8.x;
    var v13174 = a$$12.x;
    var v6217 = v13173 - v13174;
    var v13175 = b$$8.y;
    var v13176 = a$$12.y;
    var v6218 = v13175 - v13176;
    var v1$$2 = new Complex(v6217, v6218);
    var v13177 = pos$$55.x;
    var v13178 = a$$12.x;
    var v6219 = v13177 - v13178;
    var v13179 = pos$$55.y;
    var v13180 = a$$12.y;
    var v6220 = v13179 - v13180;
    var v2$$2 = new Complex(v6219, v6220);
    var v13181 = v0.x;
    var v13182 = v0.x;
    var v6221 = v13181 * v13182;
    var v13183 = v0.y;
    var v13184 = v0.y;
    var v6222 = v13183 * v13184;
    var dot00 = v6221 + v6222;
    var v13185 = v0.x;
    var v13186 = v1$$2.x;
    var v6223 = v13185 * v13186;
    var v13187 = v0.y;
    var v13188 = v1$$2.y;
    var v6224 = v13187 * v13188;
    var dot01 = v6223 + v6224;
    var v13189 = v0.x;
    var v13190 = v2$$2.x;
    var v6225 = v13189 * v13190;
    var v13191 = v0.y;
    var v13192 = v2$$2.y;
    var v6226 = v13191 * v13192;
    var dot02 = v6225 + v6226;
    var v13193 = v1$$2.x;
    var v13194 = v1$$2.x;
    var v6227 = v13193 * v13194;
    var v13195 = v1$$2.y;
    var v13196 = v1$$2.y;
    var v6228 = v13195 * v13196;
    var dot11 = v6227 + v6228;
    var v13197 = v1$$2.x;
    var v13198 = v2$$2.x;
    var v6229 = v13197 * v13198;
    var v13199 = v1$$2.y;
    var v13200 = v2$$2.y;
    var v6230 = v13199 * v13200;
    var dot12 = v6229 + v6230;
    var v13201 = dot00 * dot11;
    var v13202 = dot01 * dot01;
    var v6231 = v13201 - v13202;
    var inv$$1 = 1 / v6231;
    var v13203 = dot11 * dot02;
    var v13204 = dot01 * dot12;
    var v6232 = v13203 - v13204;
    var u = v6232 * inv$$1;
    var v13205 = dot00 * dot12;
    var v13206 = dot01 * dot02;
    var v6233 = v13205 - v13206;
    var v$$3 = v6233 * inv$$1;
    var v13207 = u > 0;
    if (v13207) {
      v13207 = v$$3 > 0;
    }
    var v6234 = v13207;
    if (v6234) {
      var v13208 = u + v$$3;
      v6234 = v13208 < 1;
    }
    return v6234;
  }
  function v611(type$$58, pos$$54, dim$$23, canvas$$53) {
    introspect(JAM.policy.p3) {
      var ctx$$24 = canvas$$53.getCtx()
    }
    var c1x$$1 = pos$$54.x;
    var c1y$$1 = pos$$54.y;
    var c2x$$1 = c1x$$1 + dim$$23;
    var v6235 = pos$$54.y;
    var c2y$$1 = v6235 - dim$$23;
    var c3x$$1 = c2x$$1;
    var v6236 = pos$$54.y;
    var c3y$$1 = v6236 + dim$$23;
    introspect(JAM.policy.p3) {
      ctx$$24.beginPath();
    }
    introspect(JAM.policy.p3) {
      ctx$$24.moveTo(c1x$$1, c1y$$1);
    }
    introspect(JAM.policy.p3) {
      ctx$$24.lineTo(c2x$$1, c2y$$1);
    }
    introspect(JAM.policy.p3) {
      ctx$$24.lineTo(c3x$$1, c3y$$1);
    }
    introspect(JAM.policy.p3) {
      ctx$$24.closePath();
    }
    introspect(JAM.policy.p3) {
      ctx$$24[type$$58]();
    }
    return;
  }
  function v610(graph$$20, id$$36, startDepth$$1, flags$$14) {
    function v609(adj$$33) {
      var n$$56 = adj$$33.nodeTo;
      var v18593 = n$$56._flag;
      var v13209 = v18593 === false;
      if (v13209) {
        introspect(JAM.policy.p3) {
          v13209 = filter$$6(n$$56);
        }
      }
      var v6243 = v13209;
      if (v6243) {
        var v13210 = n$$56._depth;
        var v6242 = v13210 < 0;
        if (v6242) {
          var v13211 = node$$115._depth;
          var v6237 = v13211 + 1;
          n$$56._depth = v6237 + startDepth$$1;
          var v18594 = graph$$20.depth;
          var v18595 = n$$56._depth;
          var v13212 = v18594[v18595];
          var v6240 = !v13212;
          if (v6240) {
            var v6238 = graph$$20.depth;
            var v6239 = n$$56._depth;
            introspect(JAM.policy.p2) {
              v6238[v6239] = [];
            }
          }
          var v13213 = graph$$20.depth;
          var v13214 = n$$56._depth;
          var v6241 = v13213[v13214];
          introspect(JAM.policy.p3) {
            v6241.push(n$$56);
          }
        }
        introspect(JAM.policy.p3) {
          queue$$2.unshift(n$$56);
        }
      }
      return;
    }
    function v608(elem$$60) {
      elem$$60._flag = false;
      elem$$60._depth = -1;
      return;
    }
    startDepth$$1 = startDepth$$1 || 0;
    introspect(JAM.policy.p3) {
      var filter$$6 = this.filter(flags$$14)
    }
    introspect(JAM.policy.p3) {
      this.eachNode(graph$$20, v608, flags$$14);
    }
    introspect(JAM.policy.p3) {
      var root$$20 = graph$$20.getNode(id$$36)
    }
    root$$20._depth = startDepth$$1;
    var queue$$2 = [root$$20];
    graph$$20.depth = [];
    var that$$35 = this;
    var v13215 = queue$$2.length;
    var v6244 = v13215 !== 0;
    for (;v6244;) {
      introspect(JAM.policy.p3) {
        var node$$115 = queue$$2.pop()
      }
      node$$115._flag = true;
      introspect(JAM.policy.p3) {
        this.eachAdjacency(node$$115, v609, flags$$14);
      }
      var v13216 = queue$$2.length;
      v6244 = v13216 !== 0;
    }
    return;
  }
  function v607(e$$46, win$$34, scroll$$4) {
    var v18596 = this.config;
    var v13217 = v18596.zooming;
    var v6245 = !v13217;
    if (v6245) {
      return;
    }
    var v6246 = $$$1.event;
    var v13218 = $$$1.event;
    introspect(JAM.policy.p3) {
      var v6247 = v13218.get(e$$46, win$$34)
    }
    introspect(JAM.policy.p3) {
      v6246.stop(v6247);
    }
    var v6248 = this.viz;
    introspect(JAM.policy.p3) {
      v6248.zoom(scroll$$4);
    }
    return;
  }
  function v606(adj$$32, pos$$53) {
    introspect(JAM.policy.p3) {
      var orn$$17 = this.getOrientation(adj$$32)
    }
    var nodeFrom$$13 = adj$$32.nodeFrom;
    var nodeTo$$15 = adj$$32.nodeTo;
    var v6249 = nodeFrom$$13._depth;
    var v6250 = nodeTo$$15._depth;
    var rel$$7 = v6249 < v6250;
    var v13219 = this.viz;
    var v6251 = v13219.geom;
    var v13220;
    if (rel$$7) {
      v13220 = nodeFrom$$13;
    } else {
      v13220 = nodeTo$$15;
    }
    var v6252 = v13220;
    introspect(JAM.policy.p3) {
      var from$$16 = v6251.getEdge(v6252, "begin", orn$$17)
    }
    var v13221 = this.viz;
    var v6253 = v13221.geom;
    var v13222;
    if (rel$$7) {
      v13222 = nodeTo$$15;
    } else {
      v13222 = nodeFrom$$13;
    }
    var v6254 = v13222;
    introspect(JAM.policy.p3) {
      var to$$17 = v6253.getEdge(v6254, "end", orn$$17)
    }
    var v13223 = this.edgeHelper;
    var v6255 = v13223.line;
    var v13224 = this.edge;
    var v6256 = v13224.epsilon;
    introspect(JAM.policy.p3) {
      return v6255.contains(from$$16, to$$17, pos$$53, v6256);
    }
  }
  function v605(adj$$31, canvas$$52) {
    introspect(JAM.policy.p3) {
      var orn$$16 = this.getOrientation(adj$$31)
    }
    var nodeFrom$$12 = adj$$31.nodeFrom;
    var nodeTo$$14 = adj$$31.nodeTo;
    var v6257 = nodeFrom$$12._depth;
    var v6258 = nodeTo$$14._depth;
    var rel$$6 = v6257 < v6258;
    var v13225 = this.viz;
    var v6259 = v13225.geom;
    var v13226;
    if (rel$$6) {
      v13226 = nodeFrom$$12;
    } else {
      v13226 = nodeTo$$14;
    }
    var v6260 = v13226;
    introspect(JAM.policy.p3) {
      var from$$15 = v6259.getEdge(v6260, "begin", orn$$16)
    }
    var v13227 = this.viz;
    var v6261 = v13227.geom;
    var v13228;
    if (rel$$6) {
      v13228 = nodeTo$$14;
    } else {
      v13228 = nodeFrom$$12;
    }
    var v6262 = v13228;
    introspect(JAM.policy.p3) {
      var to$$16 = v6261.getEdge(v6262, "end", orn$$16)
    }
    var v6263 = from$$15.x;
    var v6264 = to$$16.y;
    var middle = {x:v6263, y:v6264};
    var v13229 = this.edgeHelper;
    var v6265 = v13229.line;
    introspect(JAM.policy.p3) {
      v6265.render(from$$15, middle, canvas$$52);
    }
    var v13230 = this.edgeHelper;
    var v6266 = v13230.line;
    introspect(JAM.policy.p3) {
      v6266.render(middle, to$$16, canvas$$52);
    }
    return;
  }
  function v604(adj$$30, canvas$$51) {
    introspect(JAM.policy.p3) {
      var orn$$15 = this.getOrientation(adj$$30)
    }
    var nodeFrom$$11 = adj$$30.nodeFrom;
    var nodeTo$$13 = adj$$30.nodeTo;
    var v6267 = nodeFrom$$11._depth;
    var v6268 = nodeTo$$13._depth;
    var rel$$5 = v6267 < v6268;
    var v13231 = this.viz;
    var v6269 = v13231.geom;
    var v13232;
    if (rel$$5) {
      v13232 = nodeFrom$$11;
    } else {
      v13232 = nodeTo$$13;
    }
    var v6270 = v13232;
    introspect(JAM.policy.p3) {
      var begin$$13 = v6269.getEdge(v6270, "begin", orn$$15)
    }
    var v13233 = this.viz;
    var v6271 = v13233.geom;
    var v13234;
    if (rel$$5) {
      v13234 = nodeTo$$13;
    } else {
      v13234 = nodeFrom$$11;
    }
    var v6272 = v13234;
    introspect(JAM.policy.p3) {
      var end$$3 = v6271.getEdge(v6272, "end", orn$$15)
    }
    introspect(JAM.policy.p3) {
      var dim$$22 = adj$$30.getData("dim")
    }
    introspect(JAM.policy.p3) {
      var ctx$$23 = canvas$$51.getCtx()
    }
    introspect(JAM.policy.p3) {
      ctx$$23.beginPath();
    }
    var v6273 = begin$$13.x;
    var v6274 = begin$$13.y;
    introspect(JAM.policy.p3) {
      ctx$$23.moveTo(v6273, v6274);
    }
    switch(orn$$15) {
      case "left":
        var v13235 = begin$$13.x;
        var v6275 = v13235 + dim$$22;
        var v6276 = begin$$13.y;
        var v13236 = end$$3.x;
        var v6277 = v13236 - dim$$22;
        var v6278 = end$$3.y;
        var v6279 = end$$3.x;
        var v6280 = end$$3.y;
        introspect(JAM.policy.p3) {
          ctx$$23.bezierCurveTo(v6275, v6276, v6277, v6278, v6279, v6280);
        }
        break;
      case "right":
        var v13237 = begin$$13.x;
        var v6281 = v13237 - dim$$22;
        var v6282 = begin$$13.y;
        var v13238 = end$$3.x;
        var v6283 = v13238 + dim$$22;
        var v6284 = end$$3.y;
        var v6285 = end$$3.x;
        var v6286 = end$$3.y;
        introspect(JAM.policy.p3) {
          ctx$$23.bezierCurveTo(v6281, v6282, v6283, v6284, v6285, v6286);
        }
        break;
      case "top":
        var v6287 = begin$$13.x;
        var v13239 = begin$$13.y;
        var v6288 = v13239 + dim$$22;
        var v6289 = end$$3.x;
        var v13240 = end$$3.y;
        var v6290 = v13240 - dim$$22;
        var v6291 = end$$3.x;
        var v6292 = end$$3.y;
        introspect(JAM.policy.p3) {
          ctx$$23.bezierCurveTo(v6287, v6288, v6289, v6290, v6291, v6292);
        }
        break;
      case "bottom":
        var v6293 = begin$$13.x;
        var v13241 = begin$$13.y;
        var v6294 = v13241 - dim$$22;
        var v6295 = end$$3.x;
        var v13242 = end$$3.y;
        var v6296 = v13242 + dim$$22;
        var v6297 = end$$3.x;
        var v6298 = end$$3.y;
        introspect(JAM.policy.p3) {
          ctx$$23.bezierCurveTo(v6293, v6294, v6295, v6296, v6297, v6298);
        }
      ;
    }
    introspect(JAM.policy.p3) {
      ctx$$23.stroke();
    }
    return;
  }
  function v603(adj$$29, canvas$$50) {
    introspect(JAM.policy.p3) {
      var orn$$14 = this.getOrientation(adj$$29)
    }
    var nodeFrom$$10 = adj$$29.nodeFrom;
    var nodeTo$$12 = adj$$29.nodeTo;
    var v6299 = nodeFrom$$10._depth;
    var v6300 = nodeTo$$12._depth;
    var rel$$4 = v6299 < v6300;
    var v13243 = this.viz;
    var v6301 = v13243.geom;
    var v13244;
    if (rel$$4) {
      v13244 = nodeFrom$$10;
    } else {
      v13244 = nodeTo$$12;
    }
    var v6302 = v13244;
    introspect(JAM.policy.p3) {
      var begin$$12 = v6301.getEdge(v6302, "begin", orn$$14)
    }
    var v13245 = this.viz;
    var v6303 = v13245.geom;
    var v13246;
    if (rel$$4) {
      v13246 = nodeTo$$12;
    } else {
      v13246 = nodeFrom$$10;
    }
    var v6304 = v13246;
    introspect(JAM.policy.p3) {
      var end$$2 = v6303.getEdge(v6304, "end", orn$$14)
    }
    introspect(JAM.policy.p3) {
      var dim$$21 = adj$$29.getData("dim")
    }
    introspect(JAM.policy.p3) {
      var ctx$$22 = canvas$$50.getCtx()
    }
    introspect(JAM.policy.p3) {
      ctx$$22.beginPath();
    }
    var v6305 = begin$$12.x;
    var v6306 = begin$$12.y;
    introspect(JAM.policy.p3) {
      ctx$$22.moveTo(v6305, v6306);
    }
    switch(orn$$14) {
      case "left":
        var v13247 = end$$2.x;
        var v6307 = v13247 - dim$$21;
        var v6308 = end$$2.y;
        var v6309 = end$$2.x;
        var v6310 = end$$2.y;
        introspect(JAM.policy.p3) {
          ctx$$22.quadraticCurveTo(v6307, v6308, v6309, v6310);
        }
        break;
      case "right":
        var v13248 = end$$2.x;
        var v6311 = v13248 + dim$$21;
        var v6312 = end$$2.y;
        var v6313 = end$$2.x;
        var v6314 = end$$2.y;
        introspect(JAM.policy.p3) {
          ctx$$22.quadraticCurveTo(v6311, v6312, v6313, v6314);
        }
        break;
      case "top":
        var v6315 = end$$2.x;
        var v13249 = end$$2.y;
        var v6316 = v13249 - dim$$21;
        var v6317 = end$$2.x;
        var v6318 = end$$2.y;
        introspect(JAM.policy.p3) {
          ctx$$22.quadraticCurveTo(v6315, v6316, v6317, v6318);
        }
        break;
      case "bottom":
        var v6319 = end$$2.x;
        var v13250 = end$$2.y;
        var v6320 = v13250 + dim$$21;
        var v6321 = end$$2.x;
        var v6322 = end$$2.y;
        introspect(JAM.policy.p3) {
          ctx$$22.quadraticCurveTo(v6319, v6320, v6321, v6322);
        }
      ;
    }
    introspect(JAM.policy.p3) {
      ctx$$22.stroke();
    }
    return;
  }
  function v602(adj$$28, canvas$$49) {
    introspect(JAM.policy.p3) {
      var orn$$13 = this.getOrientation(adj$$28)
    }
    var nodeFrom$$9 = adj$$28.nodeFrom;
    var nodeTo$$11 = adj$$28.nodeTo;
    var v6323 = nodeFrom$$9._depth;
    var v6324 = nodeTo$$11._depth;
    var rel$$3 = v6323 < v6324;
    var v13251 = this.viz;
    var v6325 = v13251.geom;
    var v13252;
    if (rel$$3) {
      v13252 = nodeFrom$$9;
    } else {
      v13252 = nodeTo$$11;
    }
    var v6326 = v13252;
    introspect(JAM.policy.p3) {
      var begin$$11 = v6325.getEdge(v6326, "begin", orn$$13)
    }
    var v13253 = this.viz;
    var v6327 = v13253.geom;
    var v13254;
    if (rel$$3) {
      v13254 = nodeTo$$11;
    } else {
      v13254 = nodeFrom$$9;
    }
    var v6328 = v13254;
    introspect(JAM.policy.p3) {
      var end$$1 = v6327.getEdge(v6328, "end", orn$$13)
    }
    introspect(JAM.policy.p3) {
      var dim$$20 = adj$$28.getData("dim")
    }
    introspect(JAM.policy.p3) {
      var ctx$$21 = canvas$$49.getCtx()
    }
    introspect(JAM.policy.p3) {
      ctx$$21.beginPath();
    }
    var v6329 = begin$$11.x;
    var v6330 = begin$$11.y;
    introspect(JAM.policy.p3) {
      ctx$$21.moveTo(v6329, v6330);
    }
    switch(orn$$13) {
      case "left":
        var v13255 = begin$$11.x;
        var v6331 = v13255 + dim$$20;
        var v6332 = begin$$11.y;
        var v6333 = end$$1.x;
        var v6334 = end$$1.y;
        introspect(JAM.policy.p3) {
          ctx$$21.quadraticCurveTo(v6331, v6332, v6333, v6334);
        }
        break;
      case "right":
        var v13256 = begin$$11.x;
        var v6335 = v13256 - dim$$20;
        var v6336 = begin$$11.y;
        var v6337 = end$$1.x;
        var v6338 = end$$1.y;
        introspect(JAM.policy.p3) {
          ctx$$21.quadraticCurveTo(v6335, v6336, v6337, v6338);
        }
        break;
      case "top":
        var v6339 = begin$$11.x;
        var v13257 = begin$$11.y;
        var v6340 = v13257 + dim$$20;
        var v6341 = end$$1.x;
        var v6342 = end$$1.y;
        introspect(JAM.policy.p3) {
          ctx$$21.quadraticCurveTo(v6339, v6340, v6341, v6342);
        }
        break;
      case "bottom":
        var v6343 = begin$$11.x;
        var v13258 = begin$$11.y;
        var v6344 = v13258 - dim$$20;
        var v6345 = end$$1.x;
        var v6346 = end$$1.y;
        introspect(JAM.policy.p3) {
          ctx$$21.quadraticCurveTo(v6343, v6344, v6345, v6346);
        }
      ;
    }
    introspect(JAM.policy.p3) {
      ctx$$21.stroke();
    }
    return;
  }
  function v601(adj$$27, pos$$52) {
    introspect(JAM.policy.p3) {
      var orn$$12 = this.getOrientation(adj$$27)
    }
    var nodeFrom$$8 = adj$$27.nodeFrom;
    var nodeTo$$10 = adj$$27.nodeTo;
    var v6347 = nodeFrom$$8._depth;
    var v6348 = nodeTo$$10._depth;
    var rel$$2 = v6347 < v6348;
    var v13259 = this.viz;
    var v6349 = v13259.geom;
    var v13260;
    if (rel$$2) {
      v13260 = nodeFrom$$8;
    } else {
      v13260 = nodeTo$$10;
    }
    var v6350 = v13260;
    introspect(JAM.policy.p3) {
      var from$$14 = v6349.getEdge(v6350, "begin", orn$$12)
    }
    var v13261 = this.viz;
    var v6351 = v13261.geom;
    var v13262;
    if (rel$$2) {
      v13262 = nodeTo$$10;
    } else {
      v13262 = nodeFrom$$8;
    }
    var v6352 = v13262;
    introspect(JAM.policy.p3) {
      var to$$15 = v6351.getEdge(v6352, "end", orn$$12)
    }
    var v13263 = this.edgeHelper;
    var v6353 = v13263.arrow;
    var v13264 = this.edge;
    var v6354 = v13264.epsilon;
    introspect(JAM.policy.p3) {
      return v6353.contains(from$$14, to$$15, pos$$52, v6354);
    }
  }
  function v600(adj$$26, canvas$$48) {
    introspect(JAM.policy.p3) {
      var orn$$11 = this.getOrientation(adj$$26)
    }
    var node$$114 = adj$$26.nodeFrom;
    var child$$1 = adj$$26.nodeTo;
    introspect(JAM.policy.p3) {
      var dim$$19 = adj$$26.getData("dim")
    }
    var v13265 = this.viz;
    var v6355 = v13265.geom;
    introspect(JAM.policy.p3) {
      var from$$13 = v6355.getEdge(node$$114, "begin", orn$$11)
    }
    var v13266 = this.viz;
    var v6356 = v13266.geom;
    introspect(JAM.policy.p3) {
      var to$$14 = v6356.getEdge(child$$1, "end", orn$$11)
    }
    var v6357 = adj$$26.data;
    var direction$$3 = v6357.$direction;
    var v13267 = direction$$3;
    if (v13267) {
      var v18597 = direction$$3.length;
      v13267 = v18597 > 1;
    }
    var v6358 = v13267;
    if (v6358) {
      var v13268 = direction$$3[0];
      var v13269 = node$$114.id;
      v6358 = v13268 !== v13269;
    }
    var inv = v6358;
    var v13270 = this.edgeHelper;
    var v6359 = v13270.arrow;
    introspect(JAM.policy.p3) {
      v6359.render(from$$13, to$$14, dim$$19, inv, canvas$$48);
    }
    return;
  }
  function v599(adj$$25, pos$$51) {
    introspect(JAM.policy.p3) {
      var orn$$10 = this.getOrientation(adj$$25)
    }
    var nodeFrom$$7 = adj$$25.nodeFrom;
    var nodeTo$$9 = adj$$25.nodeTo;
    var v6360 = nodeFrom$$7._depth;
    var v6361 = nodeTo$$9._depth;
    var rel$$1 = v6360 < v6361;
    var v13271 = this.viz;
    var v6362 = v13271.geom;
    var v13272;
    if (rel$$1) {
      v13272 = nodeFrom$$7;
    } else {
      v13272 = nodeTo$$9;
    }
    var v6363 = v13272;
    introspect(JAM.policy.p3) {
      var from$$12 = v6362.getEdge(v6363, "begin", orn$$10)
    }
    var v13273 = this.viz;
    var v6364 = v13273.geom;
    var v13274;
    if (rel$$1) {
      v13274 = nodeTo$$9;
    } else {
      v13274 = nodeFrom$$7;
    }
    var v6365 = v13274;
    introspect(JAM.policy.p3) {
      var to$$13 = v6364.getEdge(v6365, "end", orn$$10)
    }
    var v13275 = this.edgeHelper;
    var v6366 = v13275.line;
    var v13276 = this.edge;
    var v6367 = v13276.epsilon;
    introspect(JAM.policy.p3) {
      return v6366.contains(from$$12, to$$13, pos$$51, v6367);
    }
  }
  function v598(adj$$24, canvas$$47) {
    introspect(JAM.policy.p3) {
      var orn$$9 = this.getOrientation(adj$$24)
    }
    var nodeFrom$$6 = adj$$24.nodeFrom;
    var nodeTo$$8 = adj$$24.nodeTo;
    var v6368 = nodeFrom$$6._depth;
    var v6369 = nodeTo$$8._depth;
    var rel = v6368 < v6369;
    var v13277;
    if (rel) {
      v13277 = nodeFrom$$6;
    } else {
      v13277 = nodeTo$$8;
    }
    var v6370 = v13277;
    introspect(JAM.policy.p3) {
      var from$$11 = v6370.getPos()
    }
    var v13278;
    if (rel) {
      v13278 = nodeTo$$8;
    } else {
      v13278 = nodeFrom$$6;
    }
    var v6371 = v13278;
    introspect(JAM.policy.p3) {
      var to$$12 = v6371.getPos()
    }
    var JSCompiler_object_inline_x_90 = from$$11.x;
    var JSCompiler_object_inline_y_91 = from$$11.y;
    var v6372 = to$$12.y;
    var middle2 = {x:JSCompiler_object_inline_x_90, y:v6372};
    var v13279 = this.edgeHelper;
    var v6373 = v13279.line;
    introspect(JAM.policy.p3) {
      v6373.render(from$$11, middle2, canvas$$47);
    }
    var v13280 = this.edgeHelper;
    var v6374 = v13280.line;
    introspect(JAM.policy.p3) {
      v6374.render(middle2, to$$12, canvas$$47);
    }
    introspect(JAM.policy.p3) {
      var v18598 = nodeTo$$8.anySubnode()
    }
    var v13281 = !v18598;
    if (v13281) {
      var v18599 = this.config;
      v13281 = v18599.alignName;
    }
    var v6379 = v13281;
    if (v6379) {
      introspect(JAM.policy.p3) {
        var ctx$$20 = canvas$$47.getCtx()
      }
      introspect(JAM.policy.p3) {
        ctx$$20.save();
      }
      ctx$$20.lineWidth = 2;
      ctx$$20.lineCap = "butt";
      ctx$$20.fillStyle = ctx$$20.strokeStyle = "#ccb";
      introspect(JAM.policy.p3) {
        ctx$$20.beginPath();
      }
      var v6375 = to$$12.x;
      var v6376 = to$$12.y;
      var v18600 = this.viz;
      var v13282 = v18600.graph;
      var v6377 = v13282.maxXpos;
      var v6378 = to$$12.y;
      introspect(JAM.policy.p3) {
        ctx$$20.dashedLine(v6375, v6376, v6377, v6378);
      }
      introspect(JAM.policy.p3) {
        ctx$$20.closePath();
      }
      introspect(JAM.policy.p3) {
        ctx$$20.stroke();
      }
      introspect(JAM.policy.p3) {
        ctx$$20.restore();
      }
    }
    return;
  }
  function v597(node$$113, pos$$50) {
    var v13283 = node$$113.exist;
    var v6380 = !v13283;
    if (v6380) {
      return false;
    }
    introspect(JAM.policy.p3) {
      var width$$30 = node$$113.getData("width")
    }
    introspect(JAM.policy.p3) {
      var height$$28 = node$$113.getData("height")
    }
    introspect(JAM.policy.p3) {
      var dim$$18 = node$$113.getData("dim")
    }
    var v13284 = node$$113.pos;
    introspect(JAM.policy.p3) {
      var v6381 = v13284.getc(true)
    }
    introspect(JAM.policy.p3) {
      var npos$$10 = this.getAlignedPos(v6381, width$$30, height$$28)
    }
    var v13285 = this.nodeHelper;
    var v6382 = v13285.triangle;
    var v18601 = npos$$10.x;
    var v18602 = width$$30 / 2;
    var v13286 = v18601 + v18602;
    var v18603 = npos$$10.y;
    var v18604 = height$$28 / 2;
    var v13287 = v18603 + v18604;
    var v6383 = {x:v13286, y:v13287};
    introspect(JAM.policy.p3) {
      return v6382.contains(v6383, pos$$50, dim$$18);
    }
  }
  function v596(node$$112, canvas$$46) {
    introspect(JAM.policy.p3) {
      var width$$29 = node$$112.getData("width")
    }
    introspect(JAM.policy.p3) {
      var height$$27 = node$$112.getData("height")
    }
    introspect(JAM.policy.p3) {
      var dim$$17 = node$$112.getData("dim")
    }
    var v13288 = node$$112.pos;
    introspect(JAM.policy.p3) {
      var v6384 = v13288.getc(true)
    }
    introspect(JAM.policy.p3) {
      var pos$$49 = this.getAlignedPos(v6384, width$$29, height$$27)
    }
    var v13289 = this.nodeHelper;
    var v6385 = v13289.triangle;
    var v18605 = pos$$49.x;
    var v18606 = width$$29 / 2;
    var v13290 = v18605 + v18606;
    var v18607 = pos$$49.y;
    var v18608 = height$$27 / 2;
    var v13291 = v18607 + v18608;
    var v6386 = {x:v13290, y:v13291};
    introspect(JAM.policy.p3) {
      v6385.render("fill", v6386, dim$$17, canvas$$46);
    }
    return;
  }
  function v595(node$$111, pos$$48) {
    var v13292 = node$$111.exist;
    var v6387 = !v13292;
    if (v6387) {
      return false;
    }
    introspect(JAM.policy.p3) {
      var width$$28 = node$$111.getData("width")
    }
    introspect(JAM.policy.p3) {
      var height$$26 = node$$111.getData("height")
    }
    var v13293 = node$$111.pos;
    introspect(JAM.policy.p3) {
      var v6388 = v13293.getc(true)
    }
    introspect(JAM.policy.p3) {
      var npos$$9 = this.getAlignedPos(v6388, width$$28, height$$26)
    }
    var v13294 = this.nodeHelper;
    var v6389 = v13294.rectangle;
    var v18609 = npos$$9.x;
    var v18610 = width$$28 / 2;
    var v13295 = v18609 + v18610;
    var v18611 = npos$$9.y;
    var v18612 = height$$26 / 2;
    var v13296 = v18611 + v18612;
    var v6390 = {x:v13295, y:v13296};
    introspect(JAM.policy.p3) {
      v6389.contains(v6390, pos$$48, width$$28, height$$26);
    }
    return;
  }
  function v594(node$$110, canvas$$45) {
    introspect(JAM.policy.p3) {
      var width$$27 = node$$110.getData("width")
    }
    introspect(JAM.policy.p3) {
      var height$$25 = node$$110.getData("height")
    }
    var v13297 = node$$110.pos;
    introspect(JAM.policy.p3) {
      var v6391 = v13297.getc(true)
    }
    introspect(JAM.policy.p3) {
      var pos$$47 = this.getAlignedPos(v6391, width$$27, height$$25)
    }
    var v13298 = this.nodeHelper;
    var v6392 = v13298.rectangle;
    var v18613 = pos$$47.x;
    var v18614 = width$$27 / 2;
    var v13299 = v18613 + v18614;
    var v18615 = pos$$47.y;
    var v18616 = height$$25 / 2;
    var v13300 = v18615 + v18616;
    var v6393 = {x:v13299, y:v13300};
    introspect(JAM.policy.p3) {
      v6392.render("fill", v6393, width$$27, height$$25, canvas$$45);
    }
    return;
  }
  function v593(node$$109, pos$$46) {
    var v13301 = node$$109.exist;
    var v6394 = !v13301;
    if (v6394) {
      return false;
    }
    introspect(JAM.policy.p3) {
      var width$$26 = node$$109.getData("width")
    }
    introspect(JAM.policy.p3) {
      var height$$24 = node$$109.getData("height")
    }
    var v13302 = node$$109.pos;
    introspect(JAM.policy.p3) {
      var v6395 = v13302.getc(true)
    }
    introspect(JAM.policy.p3) {
      var npos$$8 = this.getAlignedPos(v6395, width$$26, height$$24)
    }
    var v13303 = this.nodeHelper;
    var v6396 = v13303.ellipse;
    var v18617 = npos$$8.x;
    var v18618 = width$$26 / 2;
    var v13304 = v18617 + v18618;
    var v18619 = npos$$8.y;
    var v18620 = height$$24 / 2;
    var v13305 = v18619 + v18620;
    var v6397 = {x:v13304, y:v13305};
    introspect(JAM.policy.p3) {
      v6396.contains(v6397, pos$$46, width$$26, height$$24);
    }
    return;
  }
  function v592(node$$108, canvas$$44) {
    introspect(JAM.policy.p3) {
      var width$$25 = node$$108.getData("width")
    }
    introspect(JAM.policy.p3) {
      var height$$23 = node$$108.getData("height")
    }
    var v13306 = node$$108.pos;
    introspect(JAM.policy.p3) {
      var v6398 = v13306.getc(true)
    }
    introspect(JAM.policy.p3) {
      var pos$$45 = this.getAlignedPos(v6398, width$$25, height$$23)
    }
    var v13307 = this.nodeHelper;
    var v6399 = v13307.ellipse;
    var v18621 = pos$$45.x;
    var v18622 = width$$25 / 2;
    var v13308 = v18621 + v18622;
    var v18623 = pos$$45.y;
    var v18624 = height$$23 / 2;
    var v13309 = v18623 + v18624;
    var v6400 = {x:v13308, y:v13309};
    introspect(JAM.policy.p3) {
      v6399.render("fill", v6400, width$$25, height$$23, canvas$$44);
    }
    return;
  }
  function v591(node$$107, pos$$44) {
    var v13310 = node$$107.exist;
    var v6401 = !v13310;
    if (v6401) {
      return false;
    }
    introspect(JAM.policy.p3) {
      var dim$$16 = node$$107.getData("dim")
    }
    var v13311 = node$$107.pos;
    introspect(JAM.policy.p3) {
      var v6402 = v13311.getc(true)
    }
    introspect(JAM.policy.p3) {
      var npos$$7 = this.getAlignedPos(v6402, dim$$16, dim$$16)
    }
    var dim2$$3 = dim$$16 / 2;
    var v13312 = this.nodeHelper;
    var v6403 = v13312.square;
    var v13313 = npos$$7.x;
    var v18625 = npos$$7.y;
    var v13314 = v18625 + dim2$$3;
    var v6404 = {x:v13313, y:v13314};
    introspect(JAM.policy.p3) {
      return v6403.contains(v6404, pos$$44, dim2$$3);
    }
  }
  function v590(node$$106, canvas$$43) {
    introspect(JAM.policy.p3) {
      var dim$$15 = node$$106.getData("dim")
    }
    var dim2$$2 = dim$$15 / 2;
    var v13315 = node$$106.pos;
    introspect(JAM.policy.p3) {
      var v6405 = v13315.getc(true)
    }
    introspect(JAM.policy.p3) {
      var pos$$43 = this.getAlignedPos(v6405, dim$$15, dim$$15)
    }
    var v13316 = this.nodeHelper;
    var v6406 = v13316.square;
    var v13317 = pos$$43.x;
    var v18626 = pos$$43.y;
    var v13318 = v18626 + dim2$$2;
    var v6407 = {x:v13317, y:v13318};
    introspect(JAM.policy.p3) {
      v6406.render("fill", v6407, dim2$$2, canvas$$43);
    }
    return;
  }
  function v589(node$$105, pos$$42) {
    var v13319 = node$$105.exist;
    var v6408 = !v13319;
    if (v6408) {
      return false;
    }
    introspect(JAM.policy.p3) {
      var dim$$14 = node$$105.getData("dim")
    }
    var v13320 = node$$105.pos;
    introspect(JAM.policy.p3) {
      var v6409 = v13320.getc(true)
    }
    introspect(JAM.policy.p3) {
      var npos$$6 = this.getAlignedPos(v6409, dim$$14, dim$$14)
    }
    var dim2$$1 = dim$$14 / 2;
    var v13321 = this.nodeHelper;
    var v6410 = v13321.circle;
    var v13322 = npos$$6.x;
    var v18627 = npos$$6.y;
    var v13323 = v18627 + dim2$$1;
    var v6411 = {x:v13322, y:v13323};
    var v6412 = dim2$$1 + 10;
    introspect(JAM.policy.p3) {
      return v6410.contains(v6411, pos$$42, v6412);
    }
  }
  function v588(node$$104, canvas$$42) {
    introspect(JAM.policy.p3) {
      var dim$$13 = node$$104.getData("dim")
    }
    var v13324 = node$$104.pos;
    introspect(JAM.policy.p3) {
      var v6413 = v13324.getc(true)
    }
    introspect(JAM.policy.p3) {
      var pos$$41 = this.getAlignedPos(v6413, dim$$13, dim$$13)
    }
    var dim2 = dim$$13 / 2;
    var v13325 = this.nodeHelper;
    var v6414 = v13325.circle;
    var v13326 = pos$$41.x;
    var v18628 = pos$$41.y;
    var v13327 = v18628 + dim2;
    var v6415 = {x:v13326, y:v13327};
    introspect(JAM.policy.p3) {
      v6414.render("fill", v6415, dim2, canvas$$42);
    }
    return;
  }
  function v587(viz$$30) {
    this.viz = viz$$30;
    return;
  }
  function v586(viz$$29) {
    this.viz = viz$$29;
    return;
  }
  function v585(tag$$4, node$$103, controller$$11) {
    var v13328 = node$$103.pos;
    introspect(JAM.policy.p3) {
      var v6416 = v13328.getc(true)
    }
    introspect(JAM.policy.p3) {
      var pos$$40 = v6416.clone()
    }
    var v6417 = this.viz;
    var config$$16 = v6417.config;
    var dim$$12 = config$$16.Node;
    var v6418 = this.viz;
    var canvas$$41 = v6418.canvas;
    introspect(JAM.policy.p3) {
      var w$$10 = node$$103.getData("width")
    }
    introspect(JAM.policy.p3) {
      var h$$8 = node$$103.getData("height")
    }
    introspect(JAM.policy.p3) {
      var radius$$6 = canvas$$41.getSize()
    }
    var labelPos;
    var orn$$8;
    var v6420 = config$$16.alignName;
    if (v6420) {
      var v13329 = this.viz;
      var v6419 = v13329.graph;
      pos$$40.x = v6419.maxXpos;
    }
    var ox$$5 = canvas$$41.translateOffsetX;
    var oy$$6 = canvas$$41.translateOffsetY;
    var sx$$6 = canvas$$41.scaleOffsetX;
    var sy$$6 = canvas$$41.scaleOffsetY;
    var v13330 = pos$$40.x;
    var v6421 = v13330 * sx$$6;
    var posx = v6421 + ox$$5;
    var v13331 = pos$$40.y;
    var v6422 = v13331 * sy$$6;
    var posy = v6422 + oy$$6;
    var v13332 = dim$$12.align;
    var v6427 = v13332 === "left";
    if (v6427) {
      var v13333 = posx + 10;
      introspect(JAM.policy.p3) {
        var v6423 = Math.round(v13333)
      }
      var v18629 = h$$8 / 2;
      var v13334 = posy - v18629;
      introspect(JAM.policy.p3) {
        var v6424 = Math.round(v13334)
      }
      labelPos = {x:v6423, y:v6424};
      var v18630 = controller$$11.alignName;
      var v13335 = !v18630;
      if (v13335) {
        var v23738 = node$$103.data;
        var v18631 = v23738.leaf;
        v13335 = !v18631;
      }
      var v6425 = v13335;
      if (v6425) {
        var v13336 = labelPos.x;
        var v13337 = controller$$11.collapsedXOffset;
        labelPos.x = v13336 + v13337;
      }
      var v6426 = tag$$4.style;
      v6426.textAlign = "left";
    } else {
      throw "align: not implemented";
    }
    var style$$6 = tag$$4.style;
    var v6428 = labelPos.x;
    style$$6.left = v6428 + "px";
    var v6429 = labelPos.y;
    style$$6.top = v6429 + "px";
    var v6430;
    introspect(JAM.policy.p3) {
      var v13338 = this.fitsInCanvas(labelPos, canvas$$41)
    }
    if (v13338) {
      v6430 = "inline";
    } else {
      v6430 = "none";
    }
    style$$6.display = v6430;
    introspect(JAM.policy.p3) {
      controller$$11.onPlaceLabel(tag$$4, node$$103);
    }
    return;
  }
  function v584(canvas$$40, node$$102, controller$$10) {
    introspect(JAM.policy.p3) {
      var ctx$$19 = canvas$$40.getCtx()
    }
    var v6431 = node$$102.pos;
    introspect(JAM.policy.p3) {
      var coord = v6431.getc(true)
    }
    introspect(JAM.policy.p3) {
      var width$$24 = node$$102.getData("width")
    }
    introspect(JAM.policy.p3) {
      var height$$22 = node$$102.getData("height")
    }
    var v13339 = this.viz;
    var v6432 = v13339.fx;
    introspect(JAM.policy.p3) {
      var pos$$39 = v6432.getAlignedPos(coord, width$$24, height$$22)
    }
    var v6433 = node$$102.name;
    var v13340 = pos$$39.x;
    var v13341 = width$$24 / 2;
    var v6434 = v13340 + v13341;
    var v13342 = pos$$39.y;
    var v13343 = height$$22 / 2;
    var v6435 = v13342 + v13343;
    introspect(JAM.policy.p3) {
      ctx$$19.fillText(v6433, v6434, v6435);
    }
    return;
  }
  function v583(adj$$23) {
    var config$$15 = this.config;
    var orn$$7 = config$$15.orientation;
    var v6437 = config$$15.multitree;
    if (v6437) {
      var nodeFrom$$5 = adj$$23.nodeFrom;
      var nodeTo$$7 = adj$$23.nodeTo;
      var v18632 = nodeFrom$$5.data;
      var v13344 = "$orn" in v18632;
      if (v13344) {
        var v18633 = nodeFrom$$5.data;
        v13344 = v18633.$orn;
      }
      var v6436 = v13344;
      var v13346 = !v6436;
      if (v13346) {
        var v18634 = nodeTo$$7.data;
        var v13345 = "$orn" in v18634;
        if (v13345) {
          var v18635 = nodeTo$$7.data;
          v13345 = v18635.$orn;
        }
        v6436 = v13345;
      }
      orn$$7 = v6436;
    }
    return orn$$7;
  }
  function v582(pos$$38, width$$23, height$$21) {
    var nconfig = this.node;
    var square;
    var orn$$6;
    var v13347 = nconfig.align;
    var v6454 = v13347 === "center";
    if (v6454) {
      var v13348 = pos$$38.x;
      var v13349 = width$$23 / 2;
      var v6438 = v13348 - v13349;
      var v13350 = pos$$38.y;
      var v13351 = height$$21 / 2;
      var v6439 = v13350 - v13351;
      square = {x:v6438, y:v6439};
    } else {
      var v13352 = nconfig.align;
      var v6453 = v13352 === "left";
      if (v6453) {
        var v6440 = this.config;
        orn$$6 = v6440.orientation;
        var v13353 = orn$$6 === "bottom";
        var v18636 = !v13353;
        if (v18636) {
          v13353 = orn$$6 === "top";
        }
        var v6445 = v13353;
        if (v6445) {
          var v13354 = pos$$38.x;
          var v13355 = width$$23 / 2;
          var v6441 = v13354 - v13355;
          var v6442 = pos$$38.y;
          square = {x:v6441, y:v6442};
        } else {
          var v6443 = pos$$38.x;
          var v13356 = pos$$38.y;
          var v13357 = height$$21 / 2;
          var v6444 = v13356 - v13357;
          square = {x:v6443, y:v6444};
        }
      } else {
        var v13358 = nconfig.align;
        var v6452 = v13358 === "right";
        if (v6452) {
          var v6446 = this.config;
          orn$$6 = v6446.orientation;
          var v13359 = orn$$6 === "bottom";
          var v18637 = !v13359;
          if (v18637) {
            v13359 = orn$$6 === "top";
          }
          var v6451 = v13359;
          if (v6451) {
            var v13360 = pos$$38.x;
            var v13361 = width$$23 / 2;
            var v6447 = v13360 - v13361;
            var v13362 = pos$$38.y;
            var v6448 = v13362 - height$$21;
            square = {x:v6447, y:v6448};
          } else {
            var v13363 = pos$$38.x;
            var v6449 = v13363 - width$$23;
            var v13364 = pos$$38.y;
            var v13365 = height$$21 / 2;
            var v6450 = v13364 - v13365;
            square = {x:v6449, y:v6450};
          }
        } else {
          throw "align: not implemented";
        }
      }
    }
    return square;
  }
  function v581(node$$101, opt$$26, scale$$1, animating$$6) {
    function v580(n$$55, ch$$13) {
      var v6455 = config$$14.multitree;
      if (v6455) {
        var v18638 = node$$101.data;
        var v13366 = "$orn" in v18638;
        v6455 = !v13366;
      }
      var root$$19 = v6455;
      var v6456 = root$$19;
      if (v6456) {
        introspect(JAM.policy.p3) {
          v6456 = node$$101.getData("orns");
        }
      }
      var orns$$3 = v6456;
      var v6457 = !root$$19;
      var v13368 = !v6457;
      if (v13368) {
        introspect(JAM.policy.p3) {
          var v18639 = node$$101.getData("orn")
        }
        introspect(JAM.policy.p3) {
          var v13367 = orns$$3.indexOf(v18639)
        }
        v6457 = v13367 > -1;
      }
      return v6457;
    }
    var viz$$28 = this.viz;
    var canvas$$39 = viz$$28.canvas;
    var config$$14 = viz$$28.config;
    introspect(JAM.policy.p3) {
      var v6458 = Math.max(.001, scale$$1)
    }
    introspect(JAM.policy.p3) {
      scale$$1 = Math.min(v6458, 1);
    }
    var v6462 = scale$$1 >= 0;
    if (v6462) {
      node$$101.drawn = false;
      introspect(JAM.policy.p3) {
        var ctx$$18 = canvas$$39.getCtx()
      }
      var v6459 = viz$$28.geom;
      introspect(JAM.policy.p3) {
        var diff$$4 = v6459.getScaledTreePosition(node$$101, scale$$1)
      }
      var v6460 = diff$$4.x;
      var v6461 = diff$$4.y;
      introspect(JAM.policy.p3) {
        ctx$$18.translate(v6460, v6461);
      }
      introspect(JAM.policy.p3) {
        ctx$$18.scale(scale$$1, scale$$1);
      }
    }
    var v23739 = !scale$$1;
    var v18640 = !v23739;
    var v13369 = {"withLabels":true, "hideLabels":v18640, "plotSubtree":v580};
    introspect(JAM.policy.p3) {
      var v6463 = $$$1.merge(opt$$26, v13369)
    }
    introspect(JAM.policy.p3) {
      this.plotTree(node$$101, v6463, animating$$6);
    }
    var v6464 = scale$$1 >= 0;
    if (v6464) {
      node$$101.drawn = true;
    }
    return;
  }
  function v579(node$$100, opt$$25, animating$$5) {
    function v578(elem$$59) {
      introspect(JAM.policy.p3) {
        var v18641 = opt$$25.plotSubtree(node$$100, elem$$59)
      }
      if (v18641) {
        v18641 = elem$$59.exist;
      }
      var v13370 = v18641;
      if (v13370) {
        v13370 = elem$$59.drawn;
      }
      var v6468 = v13370;
      if (v6468) {
        var v6465 = elem$$59.id;
        introspect(JAM.policy.p3) {
          var adj$$22 = node$$100.getAdjacency(v6465)
        }
        var v6466 = !animating$$5;
        if (v6466) {
          introspect(JAM.policy.p3) {
            opt$$25.onBeforePlotLine(adj$$22);
          }
        }
        introspect(JAM.policy.p3) {
          that$$34.plotLine(adj$$22, canvas$$38, animating$$5);
        }
        var v6467 = !animating$$5;
        if (v6467) {
          introspect(JAM.policy.p3) {
            opt$$25.onAfterPlotLine(adj$$22);
          }
        }
        introspect(JAM.policy.p3) {
          that$$34.plotTree(elem$$59, opt$$25, animating$$5);
        }
      }
      return;
    }
    var that$$34 = this;
    var viz$$27 = this.viz;
    var canvas$$38 = viz$$27.canvas;
    var config$$13 = this.config;
    introspect(JAM.policy.p3) {
      var ctx$$17 = canvas$$38.getCtx()
    }
    introspect(JAM.policy.p3) {
      var nodeAlpha$$2 = node$$100.getData("alpha")
    }
    var v18642 = viz$$27.clickedNode;
    var v13371 = v18642.id;
    var v13372 = node$$100.id;
    var v6469 = v13371 === v13372;
    if (v6469) {
      introspect(JAM.policy.p3) {
        ctx$$17.save();
      }
      ctx$$17.strokeStyle = "yellow";
    }
    introspect(JAM.policy.p3) {
      node$$100.eachSubnode(v578);
    }
    var v6476 = node$$100.drawn;
    if (v6476) {
      var v6470 = !animating$$5;
      if (v6470) {
        introspect(JAM.policy.p3) {
          opt$$25.onBeforePlotNode(node$$100);
        }
      }
      introspect(JAM.policy.p3) {
        this.plotNode(node$$100, canvas$$38, animating$$5);
      }
      var v6471 = !animating$$5;
      if (v6471) {
        introspect(JAM.policy.p3) {
          opt$$25.onAfterPlotNode(node$$100);
        }
      }
      var v23740 = opt$$25.hideLabels;
      var v18643 = !v23740;
      if (v18643) {
        v18643 = opt$$25.withLabels;
      }
      var v13373 = v18643;
      if (v13373) {
        v13373 = nodeAlpha$$2 >= .95;
      }
      var v6474 = v13373;
      if (v6474) {
        var v6472 = this.labels;
        introspect(JAM.policy.p3) {
          v6472.plotLabel(canvas$$38, node$$100, opt$$25);
        }
      } else {
        var v6473 = this.labels;
        introspect(JAM.policy.p3) {
          v6473.hideLabel(node$$100, false);
        }
      }
    } else {
      var v6475 = this.labels;
      introspect(JAM.policy.p3) {
        v6475.hideLabel(node$$100, true);
      }
    }
    var v18644 = viz$$27.clickedNode;
    var v13374 = v18644.id;
    var v13375 = node$$100.id;
    var v6477 = v13374 === v13375;
    if (v6477) {
      introspect(JAM.policy.p3) {
        ctx$$17.restore();
      }
    }
    return;
  }
  function v577(node$$99, action$$10, flags$$13) {
    function v576(node1, node2) {
      var v6478 = node1.data;
      var v18645 = node1.data;
      var v13376 = v18645.len;
      var v18646 = !v13376;
      if (v18646) {
        v13376 = 0;
      }
      v6478.len = v13376;
      var v6479 = node2.data;
      var v18647 = node2.data;
      var v13377 = v18647.len;
      var v18648 = !v13377;
      if (v18648) {
        v13377 = 0;
      }
      v6479.len = v13377;
      var v13378 = node1.data;
      var v6480 = v13378.len;
      var v13379 = node2.data;
      var v6481 = v13379.len;
      return v6480 - v6481;
    }
    var adj$$21 = node$$99.adjacencies;
    introspect(JAM.policy.p3) {
      var filter$$5 = this.filter(flags$$13)
    }
    var id$$35;
    var i$$84;
    var keys = new Array;
    var nodeList$$1 = new Array;
    for (id$$35 in adj$$21) {
      introspect(JAM.policy.p3) {
        keys.push(id$$35);
      }
      var v18649 = adj$$21[id$$35];
      var v13380 = v18649.nodeTo;
      var v6484 = node$$99 !== v13380;
      if (v6484) {
        var v13381 = adj$$21[id$$35];
        var v6482 = v13381.nodeTo;
        introspect(JAM.policy.p3) {
          nodeList$$1.push(v6482);
        }
      } else {
        var v13382 = adj$$21[id$$35];
        var v6483 = v13382.nodeFrom;
        introspect(JAM.policy.p3) {
          nodeList$$1.push(v6483);
        }
      }
    }
    var v6487 = isLateralise();
    if (v6487) {
      var cmp = v576;
      introspect(JAM.policy.p3) {
        nodeList$$1 = nodeList$$1.sort(cmp);
      }
      keys = new Array;
      i$$84 = 0;
      var v13383 = nodeList$$1.length;
      var v6486 = i$$84 < v13383;
      for (;v6486;) {
        var v13384 = nodeList$$1[i$$84];
        var v6485 = v13384.id;
        introspect(JAM.policy.p3) {
          keys.push(v6485);
        }
        i$$84 = i$$84 + 1;
        var v13385 = nodeList$$1.length;
        v6486 = i$$84 < v13385;
      }
    }
    var v13386 = node$$99.data;
    var v6488 = v13386.rotate;
    if (v6488) {
      introspect(JAM.policy.p3) {
        keys = keys.reverse();
      }
    }
    for (id$$35 in keys) {
      introspect(JAM.policy.p3) {
        var v6492 = keys.hasOwnProperty(id$$35)
      }
      if (v6492) {
        var v6489 = keys[id$$35];
        var a$$11 = adj$$21[v6489];
        introspect(JAM.policy.p3) {
          var v6491 = filter$$5(a$$11)
        }
        if (v6491) {
          var v13387 = a$$11.nodeFrom;
          var v6490 = v13387 !== node$$99;
          if (v6490) {
            var tmp$$2 = a$$11.nodeFrom;
            a$$11.nodeFrom = a$$11.nodeTo;
            a$$11.nodeTo = tmp$$2;
          }
          introspect(JAM.policy.p3) {
            action$$10(a$$11, id$$35);
          }
        }
      }
    }
    return;
  }
  function v575(node$$97, canvas$$37, level$$15) {
    function v574(level$$16, node$$98) {
      var v6493 = level$$16 === 0;
      var v13389 = !v6493;
      if (v13389) {
        introspect(JAM.policy.p3) {
          var v13388 = node$$98.anySubnode()
        }
        v6493 = !v13388;
      }
      return v6493;
    }
    introspect(JAM.policy.p3) {
      var csize = canvas$$37.getSize()
    }
    var v23741 = this.config;
    var v18650 = v23741.multitree;
    if (v18650) {
      var v23742 = node$$97.data;
      v18650 = "$orn" in v23742;
    }
    var v13390 = v18650;
    if (v13390) {
      var v18651 = node$$97.data;
      v13390 = v18651.$orn;
    }
    var v6494 = v13390;
    var v13392 = !v6494;
    if (v13392) {
      var v13391 = this.config;
      v6494 = v13391.orientation;
    }
    var s$$14 = v6494;
    var v6495 = csize.width;
    var v6496 = csize.height;
    introspect(JAM.policy.p3) {
      var size$$10 = this.dispatch(s$$14, v6495, v6496)
    }
    introspect(JAM.policy.p3) {
      var baseSize = this.getTreeBaseSize(node$$97, level$$15, v574)
    }
    return baseSize < size$$10;
  }
  function v573(node$$96, scale) {
    function $C$$2(a$$10, b$$7) {
      function v572() {
        var v13393 = node$$96.pos;
        var v13394 = new Complex(a$$10, b$$7);
        introspect(JAM.policy.p3) {
          var v6497 = v13393.add(v13394)
        }
        var v6498 = 1 - scale;
        introspect(JAM.policy.p3) {
          return v6497.$scale(v6498);
        }
      }
      return v572;
    }
    var dim$$11 = this.node;
    introspect(JAM.policy.p3) {
      var w$$9 = node$$96.getData("width")
    }
    introspect(JAM.policy.p3) {
      var h$$7 = node$$96.getData("height")
    }
    var v23743 = this.config;
    var v18652 = v23743.multitree;
    if (v18652) {
      var v23744 = node$$96.data;
      v18652 = "$orn" in v23744;
    }
    var v13395 = v18652;
    if (v13395) {
      var v18653 = node$$96.data;
      v13395 = v18653.$orn;
    }
    var v6499 = v13395;
    var v13397 = !v6499;
    if (v13397) {
      var v13396 = this.config;
      v6499 = v13396.orientation;
    }
    var s$$13 = v6499;
    var v13398 = dim$$11.align;
    var v6514 = v13398 === "left";
    if (v6514) {
      var v6500 = $C$$2(0, h$$7);
      var v6501 = $C$$2(0, 0);
      var v6502 = $C$$2(0, 0);
      var v6503 = $C$$2(w$$9, 0);
      introspect(JAM.policy.p3) {
        return this.dispatch(s$$13, v6500, v6501, v6502, v6503);
      }
    } else {
      var v13399 = dim$$11.align;
      var v6513 = v13399 === "center";
      if (v6513) {
        var v13400 = h$$7 / 2;
        var v6504 = $C$$2(0, v13400);
        var v18654 = -w$$9;
        var v13401 = v18654 / 2;
        var v6505 = $C$$2(v13401, 0);
        var v18655 = -h$$7;
        var v13402 = v18655 / 2;
        var v6506 = $C$$2(0, v13402);
        var v13403 = w$$9 / 2;
        var v6507 = $C$$2(v13403, 0);
        introspect(JAM.policy.p3) {
          return this.dispatch(s$$13, v6504, v6505, v6506, v6507);
        }
      } else {
        var v13404 = dim$$11.align;
        var v6512 = v13404 === "right";
        if (v6512) {
          var v6508 = $C$$2(0, 0);
          var v13405 = -w$$9;
          var v6509 = $C$$2(v13405, 0);
          var v13406 = -h$$7;
          var v6510 = $C$$2(0, v13406);
          var v6511 = $C$$2(0, 0);
          introspect(JAM.policy.p3) {
            return this.dispatch(s$$13, v6508, v6509, v6510, v6511);
          }
        } else {
          throw "align: not implemented";
        }
      }
    }
    return;
  }
  function v571(node$$95, type$$57, s$$12) {
    function $C$$1(a$$9, b$$6) {
      function v570() {
        var v6515 = node$$95.pos;
        var v6516 = new Complex(a$$9, b$$6);
        introspect(JAM.policy.p3) {
          return v6515.add(v6516);
        }
      }
      return v570;
    }
    var dim$$10 = this.node;
    introspect(JAM.policy.p3) {
      var w$$8 = node$$95.getData("width")
    }
    introspect(JAM.policy.p3) {
      var h$$6 = node$$95.getData("height")
    }
    var v6548 = type$$57 === "begin";
    if (v6548) {
      var v13407 = dim$$10.align;
      var v6531 = v13407 === "center";
      if (v6531) {
        var v13408 = h$$6 / 2;
        var v6517 = $C$$1(0, v13408);
        var v18656 = -w$$8;
        var v13409 = v18656 / 2;
        var v6518 = $C$$1(v13409, 0);
        var v18657 = -h$$6;
        var v13410 = v18657 / 2;
        var v6519 = $C$$1(0, v13410);
        var v13411 = w$$8 / 2;
        var v6520 = $C$$1(v13411, 0);
        introspect(JAM.policy.p3) {
          return this.dispatch(s$$12, v6517, v6518, v6519, v6520);
        }
      } else {
        var v13412 = dim$$10.align;
        var v6530 = v13412 === "left";
        if (v6530) {
          var v6521 = $C$$1(0, h$$6);
          var v6522 = $C$$1(0, 0);
          var v6523 = $C$$1(0, 0);
          var v6524 = $C$$1(w$$8, 0);
          introspect(JAM.policy.p3) {
            return this.dispatch(s$$12, v6521, v6522, v6523, v6524);
          }
        } else {
          var v13413 = dim$$10.align;
          var v6529 = v13413 === "right";
          if (v6529) {
            var v6525 = $C$$1(0, 0);
            var v13414 = -w$$8;
            var v6526 = $C$$1(v13414, 0);
            var v13415 = -h$$6;
            var v6527 = $C$$1(0, v13415);
            var v6528 = $C$$1(0, 0);
            introspect(JAM.policy.p3) {
              return this.dispatch(s$$12, v6525, v6526, v6527, v6528);
            }
          } else {
            throw "align: not implemented";
          }
        }
      }
    } else {
      var v6547 = type$$57 === "end";
      if (v6547) {
        var v13416 = dim$$10.align;
        var v6546 = v13416 === "center";
        if (v6546) {
          var v18658 = -h$$6;
          var v13417 = v18658 / 2;
          var v6532 = $C$$1(0, v13417);
          var v13418 = w$$8 / 2;
          var v6533 = $C$$1(v13418, 0);
          var v13419 = h$$6 / 2;
          var v6534 = $C$$1(0, v13419);
          var v18659 = -w$$8;
          var v13420 = v18659 / 2;
          var v6535 = $C$$1(v13420, 0);
          introspect(JAM.policy.p3) {
            return this.dispatch(s$$12, v6532, v6533, v6534, v6535);
          }
        } else {
          var v13421 = dim$$10.align;
          var v6545 = v13421 === "left";
          if (v6545) {
            var v6536 = $C$$1(0, 0);
            var v6537 = $C$$1(w$$8, 0);
            var v6538 = $C$$1(0, h$$6);
            var v6539 = $C$$1(0, 0);
            introspect(JAM.policy.p3) {
              return this.dispatch(s$$12, v6536, v6537, v6538, v6539);
            }
          } else {
            var v13422 = dim$$10.align;
            var v6544 = v13422 === "right";
            if (v6544) {
              var v13423 = -h$$6;
              var v6540 = $C$$1(0, v13423);
              var v6541 = $C$$1(0, 0);
              var v6542 = $C$$1(0, 0);
              var v13424 = -w$$8;
              var v6543 = $C$$1(v13424, 0);
              introspect(JAM.policy.p3) {
                return this.dispatch(s$$12, v6540, v6541, v6542, v6543);
              }
            } else {
              throw "align: not implemented";
            }
          }
        }
      }
    }
    return;
  }
  function v569(node$$94, level$$14, leaf) {
    function v568(elem$$58) {
      var v13425 = baseHeight;
      var v18660 = level$$14 - 1;
      introspect(JAM.policy.p3) {
        var v13426 = that$$33.getTreeBaseSize(elem$$58, v18660, leaf)
      }
      baseHeight = v13425 + v13426;
      return;
    }
    introspect(JAM.policy.p3) {
      var size$$9 = this.getSize(node$$94, true)
    }
    var baseHeight = 0;
    var that$$33 = this;
    introspect(JAM.policy.p3) {
      var v6549 = leaf(level$$14, node$$94)
    }
    if (v6549) {
      return size$$9;
    }
    var v6550 = level$$14 === 0;
    if (v6550) {
      return 0;
    }
    introspect(JAM.policy.p3) {
      node$$94.eachSubnode(v568);
    }
    var v13427;
    var v18661 = size$$9 > baseHeight;
    if (v18661) {
      v13427 = size$$9;
    } else {
      v13427 = baseHeight;
    }
    var v6551 = v13427;
    var v13428 = this.config;
    var v6552 = v13428.subtreeOffset;
    return v6551 + v6552;
  }
  function v567(n$$54, invert$$1) {
    var data$$27 = n$$54.data;
    var config$$12 = this.config;
    var siblingOffset$$1 = config$$12.siblingOffset;
    var v18662 = config$$12.multitree;
    if (v18662) {
      v18662 = "$orn" in data$$27;
    }
    var v13429 = v18662;
    if (v13429) {
      v13429 = data$$27.$orn;
    }
    var v6553 = v13429;
    var v13430 = !v6553;
    if (v13430) {
      v6553 = config$$12.orientation;
    }
    var s$$11 = v6553;
    introspect(JAM.policy.p3) {
      var v6554 = n$$54.getData("width")
    }
    var w$$7 = v6554 + siblingOffset$$1;
    introspect(JAM.policy.p3) {
      var v6555 = n$$54.getData("height")
    }
    var h$$5 = v6555 + siblingOffset$$1;
    var v6556 = !invert$$1;
    if (v6556) {
      introspect(JAM.policy.p3) {
        return this.dispatch(s$$11, h$$5, w$$7);
      }
    } else {
      introspect(JAM.policy.p3) {
        return this.dispatch(s$$11, w$$7, h$$5);
      }
    }
    return;
  }
  function v566() {
    function val$$6(a$$8) {
      var v6557;
      var v18663 = typeof a$$8;
      var v13431 = v18663 === "function";
      if (v13431) {
        introspect(JAM.policy.p3) {
          v6557 = a$$8();
        }
      } else {
        v6557 = a$$8;
      }
      return v6557;
    }
    var v13432 = Array.prototype;
    var v6558 = v13432.slice;
    introspect(JAM.policy.p3) {
      var args$$3 = v6558.call(arguments)
    }
    introspect(JAM.policy.p3) {
      var s$$10 = args$$3.shift()
    }
    var len$$6 = args$$3.length;
    var v6565 = len$$6 === 2;
    if (v6565) {
      var v6559;
      var v18664 = s$$10 === "top";
      var v23745 = !v18664;
      if (v23745) {
        v18664 = s$$10 === "bottom";
      }
      var v13435 = v18664;
      if (v13435) {
        var v13433 = args$$3[0];
        v6559 = val$$6(v13433);
      } else {
        var v13434 = args$$3[1];
        v6559 = val$$6(v13434);
      }
      return v6559;
    } else {
      var v6564 = len$$6 === 4;
      if (v6564) {
        switch(s$$10) {
          case "top":
            var v6560 = args$$3[0];
            return val$$6(v6560);
          case "right":
            var v6561 = args$$3[1];
            return val$$6(v6561);
          case "bottom":
            var v6562 = args$$3[2];
            return val$$6(v6562);
          case "left":
            var v6563 = args$$3[3];
            return val$$6(v6563);
        }
      }
    }
    return undefined;
  }
  function v565(orn$$5) {
    var v6566 = this.config;
    v6566.orientation = orn$$5;
    return;
  }
  function v564(nodes$$11) {
    function v563(n$$53) {
      function v562(sn$$1) {
        introspect(JAM.policy.p3) {
          ans$$17.push(sn$$1);
        }
        return;
      }
      introspect(JAM.policy.p3) {
        var par$$1 = n$$53.getParents()
      }
      var v13436 = par$$1.length;
      var v6570 = v13436 === 0;
      if (v6570) {
        var v6567 = n$$53.id;
        introspect(JAM.policy.p2) {
          siblings[v6567] = [n$$53];
        }
      } else {
        var ans$$17 = [];
        var v6568 = par$$1[0];
        introspect(JAM.policy.p3) {
          v6568.eachSubnode(v562);
        }
        var v6569 = n$$53.id;
        introspect(JAM.policy.p2) {
          siblings[v6569] = ans$$17;
        }
      }
      return;
    }
    var siblings = {};
    introspect(JAM.policy.p3) {
      $$$1.each(nodes$$11, v563);
    }
    return siblings;
  }
  function v561(delta$$23, controller$$9, animating$$4) {
    function v560(n$$52) {
      n$$52.drawn = true;
      return;
    }
    function v559(n$$51) {
      var v18665 = root$$18 && orns$$2;
      if (v18665) {
        var v27675 = n$$51.data;
        var v26109 = v27675.$orn;
        introspect(JAM.policy.p3) {
          var v23746 = orns$$2.indexOf(v26109)
        }
        v18665 = v23746 > 0;
      }
      var v13437 = v18665;
      if (v13437) {
        v13437 = n$$51.drawn;
      }
      var v6574 = v13437;
      if (v6574) {
        n$$51.drawn = false;
        var v13438 = node$$93.id;
        var v6571 = nds[v13438];
        introspect(JAM.policy.p3) {
          v6571.push(n$$51);
        }
      } else {
        var v18666 = !root$$18;
        var v23747 = !v18666;
        if (v23747) {
          v18666 = !orns$$2;
        }
        var v13439 = v18666;
        if (v13439) {
          v13439 = n$$51.drawn;
        }
        var v6573 = v13439;
        if (v6573) {
          n$$51.drawn = false;
          var v13440 = node$$93.id;
          var v6572 = nds[v13440];
          introspect(JAM.policy.p3) {
            v6572.push(n$$51);
          }
        }
      }
      return;
    }
    var viz$$26 = this.viz;
    var config$$11 = this.config;
    var canvas$$36 = viz$$26.canvas;
    introspect(JAM.policy.p3) {
      var ctx$$16 = canvas$$36.getCtx()
    }
    var nodes$$10 = this.nodes;
    var i$$83;
    var node$$93;
    var nds = {};
    i$$83 = 0;
    var v13441 = nodes$$10.length;
    var v6578 = i$$83 < v13441;
    for (;v6578;) {
      node$$93 = nodes$$10[i$$83];
      var v6575 = node$$93.id;
      introspect(JAM.policy.p2) {
        nds[v6575] = [];
      }
      var v6576 = config$$11.multitree;
      if (v6576) {
        var v18667 = node$$93.data;
        var v13442 = "$orn" in v18667;
        v6576 = !v13442;
      }
      var root$$18 = v6576;
      var v6577 = root$$18;
      if (v6577) {
        var v13443 = node$$93.data;
        v6577 = v13443.$orns;
      }
      var orns$$2 = v6577;
      introspect(JAM.policy.p3) {
        node$$93.eachSubgraph(v559);
      }
      node$$93.drawn = true;
      i$$83 = i$$83 + 1;
      var v13444 = nodes$$10.length;
      v6578 = i$$83 < v13444;
    }
    var v13445 = nodes$$10.length;
    var v6580 = v13445 > 0;
    if (v6580) {
      var v6579 = viz$$26.fx;
      introspect(JAM.policy.p3) {
        v6579.plot();
      }
    }
    for (i$$83 in nds) {
      var v6581 = nds[i$$83];
      introspect(JAM.policy.p3) {
        $$$1.each(v6581, v560);
      }
    }
    i$$83 = 0;
    var v13446 = nodes$$10.length;
    var v6583 = i$$83 < v13446;
    for (;v6583;) {
      node$$93 = nodes$$10[i$$83];
      introspect(JAM.policy.p3) {
        ctx$$16.save();
      }
      var v6582 = viz$$26.fx;
      introspect(JAM.policy.p3) {
        v6582.plotSubtree(node$$93, controller$$9, delta$$23, animating$$4);
      }
      introspect(JAM.policy.p3) {
        ctx$$16.restore();
      }
      i$$83 = i$$83 + 1;
      var v13447 = nodes$$10.length;
      v6583 = i$$83 < v13447;
    }
    return;
  }
  function v558(nodes$$9) {
    function v557(a$$7, b$$5) {
      var v13448 = a$$7._depth;
      var v13449 = b$$5._depth;
      var v6584 = v13448 <= v13449;
      var v13450 = a$$7._depth;
      var v13451 = b$$5._depth;
      var v6585 = v13450 >= v13451;
      return v6584 - v6585;
    }
    var ans$$16 = [];
    var config$$10 = this.config;
    var v6586 = this.viz;
    var root$$17 = v6586.root;
    var i$$82;
    var j$$13;
    var desc;
    introspect(JAM.policy.p3) {
      nodes$$9.sort(v557);
    }
    i$$82 = 0;
    var v13452 = nodes$$9.length;
    var v6593 = i$$82 < v13452;
    for (;v6593;) {
      var v13453 = nodes$$9[i$$82];
      introspect(JAM.policy.p3) {
        var v6592 = v13453.anySubnode("exist")
      }
      if (v6592) {
        j$$13 = i$$82 + 1;
        desc = false;
        var v13454 = !desc;
        if (v13454) {
          var v18668 = nodes$$9.length;
          v13454 = j$$13 < v18668;
        }
        var v6589 = v13454;
        for (;v6589;) {
          var v18669 = config$$10.multitree;
          var v13455 = !v18669;
          var v18671 = !v13455;
          if (v18671) {
            var v23748 = nodes$$9[j$$13];
            var v18670 = v23748.data;
            v13455 = "$orn" in v18670;
          }
          var v6588 = v13455;
          if (v6588) {
            var v6587 = desc;
            var v13458 = !v6587;
            if (v13458) {
              var v13456 = nodes$$9[i$$82];
              var v18672 = nodes$$9[j$$13];
              var v13457 = v18672.id;
              introspect(JAM.policy.p3) {
                v6587 = v13456.isDescendantOf(v13457);
              }
            }
            desc = v6587;
          }
          j$$13 = j$$13 + 1;
          var v13459 = !desc;
          if (v13459) {
            var v18673 = nodes$$9.length;
            v13459 = j$$13 < v18673;
          }
          v6589 = v13459;
        }
        var v6591 = !desc;
        if (v6591) {
          var v6590 = nodes$$9[i$$82];
          introspect(JAM.policy.p3) {
            ans$$16.push(v6590);
          }
        }
      }
      i$$82 = i$$82 + 1;
      var v13460 = nodes$$9.length;
      v6593 = i$$82 < v13460;
    }
    return ans$$16;
  }
  function v556(nodes$$8) {
    introspect(JAM.policy.p3) {
      var v31146 = this.getNodesWithChildren(nodes$$8)
    }
    this.nodes = v31146;
    return this.nodes;
  }
  function v555(nodes$$7) {
    function v554(n$$49) {
      function v553(n$$50) {
        var v6594 = n$$50.exist;
        if (v6594) {
          n$$50.drawn = true;
        }
        return;
      }
      function v552(ch$$12) {
        var v26110 = ch$$12.data;
        var v23749 = "$orn" in v26110;
        if (v23749) {
          var v28665 = ch$$12.data;
          var v27676 = v28665.$orn;
          introspect(JAM.policy.p3) {
            var v26111 = orns$$1.indexOf(v27676)
          }
          v23749 = v26111 < 0;
        }
        var v18674 = v23749;
        if (v18674) {
          v18674 = ch$$12.exist;
        }
        var v13461 = v18674;
        if (v13461) {
          var v18675 = ch$$12.drawn;
          v13461 = !v18675;
        }
        var v6595 = v13461;
        if (v6595) {
          var v23750 = ch$$12.data;
          var v18676 = v23750.$orn;
          var v13462 = v18676 + " ";
          orns$$1 = orns$$1 + v13462;
        }
        return;
      }
      var v13463 = config$$9.multitree;
      if (v13463) {
        var v23751 = n$$49.data;
        var v18677 = "$orn" in v23751;
        v13463 = !v18677;
      }
      var v6598 = v13463;
      if (v6598) {
        var v6596 = n$$49.data;
        delete v6596.$orns;
        var orns$$1 = " ";
        introspect(JAM.policy.p3) {
          n$$49.eachSubnode(v552);
        }
        var v6597 = n$$49.data;
        v6597.$orns = orns$$1;
      }
      var v6599 = config$$9.levelsToShow;
      introspect(JAM.policy.p3) {
        n$$49.eachLevel(0, v6599, v553);
      }
      return;
    }
    var config$$9 = this.config;
    introspect(JAM.policy.p3) {
      this.prepare(nodes$$7);
    }
    introspect(JAM.policy.p3) {
      $$$1.each(nodes$$7, v554);
    }
    return;
  }
  function v551(nodes$$6, controller$$8) {
    function v550() {
      introspect(JAM.policy.p3) {
        that$$32.plotStep(undefined, controller$$8, false);
      }
      introspect(JAM.policy.p3) {
        controller$$8.onComplete();
      }
      return;
    }
    function v549(delta$$22) {
      var v6600 = this.$animating;
      introspect(JAM.policy.p3) {
        that$$32.plotStep(delta$$22, controller$$8, v6600);
      }
      this.$animating = "expand";
      return;
    }
    var that$$32 = this;
    introspect(JAM.policy.p3) {
      this.show(nodes$$6);
    }
    var v13464 = this.animation;
    var v18678 = {$animating:false, compute:v549, complete:v550};
    introspect(JAM.policy.p3) {
      var v13465 = $$$1.merge(controller$$8, v18678)
    }
    introspect(JAM.policy.p3) {
      var v6601 = v13464.setOptions(v13465)
    }
    introspect(JAM.policy.p3) {
      v6601.start();
    }
    return;
  }
  function v548(nodes$$5, controller$$7) {
    function v547(n$$48) {
      var v6602 = n$$48.id;
      introspect(JAM.policy.p3) {
        ids$$1.push(v6602);
      }
      return;
    }
    function v546(elem$$57) {
      var v6604 = elem$$57.exist;
      if (v6604) {
        var v6603 = {"drawn":false, "exist":false};
        introspect(JAM.policy.p3) {
          $$$1.extend(elem$$57, v6603);
        }
      }
      return;
    }
    var viz$$25 = this.viz;
    var i$$81;
    i$$81 = 0;
    var v13466 = nodes$$5.length;
    var v6611 = i$$81 < v13466;
    for (;v6611;) {
      var v18679 = true;
      var v23752 = !v18679;
      if (v23752) {
        v18679 = !controller$$7;
      }
      var v13467 = v18679;
      var v18681 = !v13467;
      if (v18681) {
        var v18680 = controller$$7.request;
        v13467 = !v18680;
      }
      var v6610 = v13467;
      if (v6610) {
        var v6605 = nodes$$5[i$$81];
        introspect(JAM.policy.p3) {
          v6605.eachLevel(1, false, v546);
        }
      } else {
        var ids$$1 = [];
        var v6606 = nodes$$5[i$$81];
        introspect(JAM.policy.p3) {
          v6606.eachLevel(1, false, v547);
        }
        var v6607 = viz$$25.op;
        var v6608 = {"type":"nothing"};
        introspect(JAM.policy.p3) {
          v6607.removeNode(ids$$1, v6608);
        }
        var v6609 = viz$$25.labels;
        introspect(JAM.policy.p3) {
          v6609.clearLabels();
        }
      }
      i$$81 = i$$81 + 1;
      var v13468 = nodes$$5.length;
      v6611 = i$$81 < v13468;
    }
    introspect(JAM.policy.p3) {
      controller$$7.onComplete();
    }
    return;
  }
  function v545(nodes$$4, controller$$6) {
    function v544() {
      introspect(JAM.policy.p3) {
        that$$31.hide(nodes$$4, controller$$6);
      }
      return;
    }
    function v543(delta$$21) {
      var v6612 = delta$$21 === 1;
      if (v6612) {
        delta$$21 = .99;
      }
      var v6613 = 1 - delta$$21;
      var v6614 = this.$animating;
      introspect(JAM.policy.p3) {
        that$$31.plotStep(v6613, controller$$6, v6614);
      }
      this.$animating = "contract";
      return;
    }
    var viz$$24 = this.viz;
    var that$$31 = this;
    introspect(JAM.policy.p3) {
      nodes$$4 = this.prepare(nodes$$4);
    }
    var v13469 = this.animation;
    var v18682 = {$animating:false, compute:v543, complete:v544};
    introspect(JAM.policy.p3) {
      var v13470 = $$$1.merge(controller$$6, v18682)
    }
    introspect(JAM.policy.p3) {
      var v6615 = v13469.setOptions(v13470)
    }
    introspect(JAM.policy.p3) {
      v6615.start();
    }
    return;
  }
  function v542(nodes$$3, controller$$5) {
    function v541(nodeId, data$$26) {
      var v13471 = data$$26;
      if (v13471) {
        v13471 = data$$26.children;
      }
      var v6618 = v13471;
      if (v6618) {
        data$$26.id = nodeId;
        var v6616 = viz$$23.op;
        var v6617 = {type:"nothing"};
        introspect(JAM.policy.p3) {
          v6616.sum(data$$26, v6617);
        }
      }
      var v13472 = counter = counter + 1;
      var v6621 = v13472 === len$$5;
      if (v6621) {
        var v6619 = viz$$23.graph;
        var v6620 = viz$$23.root;
        introspect(JAM.policy.p3) {
          v6619.computeLevels(v6620, 0);
        }
        introspect(JAM.policy.p3) {
          controller$$5.onComplete();
        }
      }
      return;
    }
    var counter = 0;
    var len$$5 = nodes$$3.length;
    var nodeSelected = {};
    var i$$80;
    var viz$$23 = this.viz;
    var v6622 = len$$5 === 0;
    if (v6622) {
      introspect(JAM.policy.p3) {
        controller$$5.onComplete();
      }
    }
    i$$80 = 0;
    var v6627 = i$$80 < len$$5;
    for (;v6627;) {
      var v13473 = nodes$$3[i$$80];
      var v6623 = v13473.id;
      introspect(JAM.policy.p2) {
        nodeSelected[v6623] = nodes$$3[i$$80];
      }
      var v13474 = nodes$$3[i$$80];
      var v6624 = v13474.id;
      var v13475 = nodes$$3[i$$80];
      var v6625 = v13475._level;
      var v6626 = {onComplete:v541};
      introspect(JAM.policy.p3) {
        controller$$5.request(v6624, v6625, v6626);
      }
      i$$80 = i$$80 + 1;
      v6627 = i$$80 < len$$5;
    }
    return;
  }
  function v540(viz$$22) {
    this.viz = viz$$22;
    this.canvas = viz$$22.canvas;
    this.config = viz$$22.config;
    var v31147 = new Animation;
    this.animation = v31147;
    this.nodes = null;
    return;
  }
  function v539() {
    function v538(id$$34, options$$11) {
      var canvas$$35 = this.canvas;
      var that$$30 = this;
      var Geom$$3 = this.geom;
      var config$$8 = this.config;
      var v18683 = config$$8.offsetX;
      var v23753 = !v18683;
      if (v23753) {
        v18683 = 0;
      }
      var v13476 = v18683;
      var v18684 = config$$8.offsetY;
      var v23754 = !v18684;
      if (v23754) {
        v18684 = 0;
      }
      var v13477 = v18684;
      var v6628 = {enable:true, offsetX:v13476, offsetY:v13477};
      var v6629 = $$$1.empty;
      var v6630 = $$$1.empty;
      var v6631 = $$$1.empty;
      var v6632 = $$$1.empty;
      var innerController = {Move:v6628, setRightLevelToShowConfig:false, onBeforeRequest:v6629, onBeforeContract:v6630, onBeforeMove:v6631, onBeforeExpand:v6632};
      var v6633 = this.controller;
      introspect(JAM.policy.p3) {
        var complete$$1 = $$$1.merge(v6633, innerController, options$$11)
      }
      var v13478 = this.busy;
      var v6638 = !v13478;
      if (v6638) {
        this.busy = true;
        var v6634 = this.graph;
        introspect(JAM.policy.p3) {
          var node$$92 = v6634.getNode(id$$34)
        }
        var v6635 = this.clickedNode;
        introspect(JAM.policy.p3) {
          this.selectPath(node$$92, v6635);
        }
        this.clickedNode = node$$92;
        introspect(JAM.policy.p3) {
          complete$$1.onBeforeCompute(node$$92);
        }
        introspect(JAM.policy.p3) {
          complete$$1.onBeforeRequest(node$$92);
        }
        introspect(JAM.policy.p3) {
          complete$$1.onBeforeContract(node$$92);
        }
        var v6636 = complete$$1.setRightLevelToShowConfig;
        introspect(JAM.policy.p3) {
          Geom$$3.setRightLevelToShow(node$$92, canvas$$35, v6636);
        }
        introspect(JAM.policy.p3) {
          complete$$1.onBeforeMove(node$$92);
        }
        introspect(JAM.policy.p3) {
          var nodes$$2 = getNodesToShow.call(this, node$$92)
        }
        var v6637 = that$$30.group;
        introspect(JAM.policy.p3) {
          v6637.show(nodes$$2);
        }
        introspect(JAM.policy.p3) {
          that$$30.computePositions(node$$92, "");
        }
        introspect(JAM.policy.p3) {
          complete$$1.onAfterCompute(id$$34);
        }
        this.busy = false;
      }
      return;
    }
    function v537(id$$33, onComplete$$9) {
      function v536() {
        function v535(n$$47) {
          var v6639 = n$$47.pos;
          introspect(JAM.policy.p3) {
            var pos$$37 = v6639.getc(true)
          }
          var v6640 = n$$47.startPos;
          var v6641 = pos$$37.x;
          var v6642 = pos$$37.y;
          introspect(JAM.policy.p3) {
            v6640.setc(v6641, v6642);
          }
          var v6643 = n$$47.endPos;
          var v6644 = pos$$37.x;
          var v6645 = pos$$37.y;
          introspect(JAM.policy.p3) {
            v6643.setc(v6644, v6645);
          }
          n$$47.visited = false;
          return;
        }
        introspect(JAM.policy.p3) {
          var v13479 = getNodesToHide.call(that$$29)
        }
        introspect(JAM.policy.p3) {
          var v6646 = group$$1.prepare(v13479)
        }
        introspect(JAM.policy.p3) {
          group$$1.hide(v6646, complete);
        }
        introspect(JAM.policy.p3) {
          geom$$5.setRightLevelToShow(node$$91, canvas$$34);
        }
        introspect(JAM.policy.p3) {
          that$$29.compute("current");
        }
        var v6647 = that$$29.graph;
        introspect(JAM.policy.p3) {
          v6647.eachNode(v535);
        }
        var v6648 = complete.offsetX;
        var v6649 = complete.offsetY;
        var offset$$11 = {x:v6648, y:v6649};
        var v6650 = that$$29.geom;
        var v18685 = node$$91.endPos;
        introspect(JAM.policy.p3) {
          var v13480 = v18685.add(offset$$11)
        }
        introspect(JAM.policy.p3) {
          var v6651 = v13480.$scale(-1)
        }
        var v6652 = ["start", "current", "end"];
        introspect(JAM.policy.p3) {
          v6650.translate(v6651, v6652);
        }
        introspect(JAM.policy.p3) {
          var v6653 = getNodesToShow.call(that$$29)
        }
        introspect(JAM.policy.p3) {
          group$$1.show(v6653);
        }
        introspect(JAM.policy.p3) {
          that$$29.plot();
        }
        var v6654 = that$$29.clickedNode;
        introspect(JAM.policy.p3) {
          complete.onAfterCompute(v6654);
        }
        introspect(JAM.policy.p3) {
          complete.onComplete();
        }
        return;
      }
      var group$$1 = this.group;
      var geom$$5 = this.geom;
      var v6655 = this.graph;
      introspect(JAM.policy.p3) {
        var node$$91 = v6655.getNode(id$$33)
      }
      var canvas$$34 = this.canvas;
      var v6656 = this.graph;
      var v6657 = this.root;
      introspect(JAM.policy.p3) {
        var root$$16 = v6656.getNode(v6657)
      }
      var v6658 = this.controller;
      introspect(JAM.policy.p3) {
        var complete = $$$1.merge(v6658, onComplete$$9)
      }
      var that$$29 = this;
      introspect(JAM.policy.p3) {
        complete.onBeforeCompute(node$$91);
      }
      introspect(JAM.policy.p3) {
        this.selectPath(node$$91);
      }
      this.clickedNode = node$$91;
      var v6659 = {onComplete:v536};
      introspect(JAM.policy.p3) {
        this.requestNodes(node$$91, v6659);
      }
      return;
    }
    function v534(id$$32, removeRoot, method$$6, onComplete$$8) {
      function v533(n$$46) {
        var v6660 = n$$46.id;
        introspect(JAM.policy.p3) {
          subids.push(v6660);
        }
        return;
      }
      var v6661 = this.graph;
      introspect(JAM.policy.p3) {
        var node$$90 = v6661.getNode(id$$32)
      }
      var subids = [];
      var v13481 = !removeRoot;
      var v6662 = +v13481;
      introspect(JAM.policy.p3) {
        node$$90.eachLevel(v6662, false, v533);
      }
      var v6668 = method$$6 === "replot";
      if (v6668) {
        var v6663 = this.op;
        var v13482 = {type:"replot"};
        var v13483 = onComplete$$8 || {};
        introspect(JAM.policy.p3) {
          var v6664 = $$$1.extend(v13482, v13483)
        }
        introspect(JAM.policy.p3) {
          v6663.removeNode(subids, v6664);
        }
      } else {
        var v6667 = method$$6 === "animate";
        if (v6667) {
          var v6665 = this.op;
          var v13484 = {type:"fade:seq"};
          var v13485 = onComplete$$8 || {};
          introspect(JAM.policy.p3) {
            var v6666 = $$$1.extend(v13484, v13485)
          }
          introspect(JAM.policy.p3) {
            v6665.removeNode(subids, v6666);
          }
        }
      }
      return;
    }
    function v532(subtree$$2, method$$5, onComplete$$7) {
      var v6674 = method$$5 === "replot";
      if (v6674) {
        var v6669 = this.op;
        var v13486 = {type:"replot"};
        var v13487 = onComplete$$7 || {};
        introspect(JAM.policy.p3) {
          var v6670 = $$$1.extend(v13486, v13487)
        }
        introspect(JAM.policy.p3) {
          v6669.sum(subtree$$2, v6670);
        }
      } else {
        var v6673 = method$$5 === "animate";
        if (v6673) {
          var v6671 = this.op;
          var v13488 = {type:"fade:seq"};
          var v13489 = onComplete$$7 || {};
          introspect(JAM.policy.p3) {
            var v6672 = $$$1.extend(v13488, v13489)
          }
          introspect(JAM.policy.p3) {
            v6671.sum(subtree$$2, v6672);
          }
        }
      }
      return;
    }
    function v531(id$$31, method$$4, onComplete$$6) {
      function $setRoot() {
        function v530() {
          that$$28.busy = false;
          return;
        }
        this.root = id$$31;
        var v6675 = this.graph;
        introspect(JAM.policy.p3) {
          var node$$89 = v6675.getNode(id$$31)
        }
        this.clickedNode = clickedNode;
        var v6676 = this.graph;
        var v6677 = this.root;
        introspect(JAM.policy.p3) {
          v6676.computeLevels(v6677, 0, "ignore");
        }
        node$$89.collapsed = true;
        introspect(JAM.policy.p3) {
          this.nodesExpCol(node$$89);
        }
        introspect(JAM.policy.p3) {
          this.computePositions(node$$89, "end", true);
        }
        var v13490 = this.graph;
        introspect(JAM.policy.p3) {
          var v6678 = v13490.getNode(id$$31)
        }
        introspect(JAM.policy.p3) {
          this.computeLeaves(v6678, 0);
        }
        var v13491 = this.graph;
        introspect(JAM.policy.p3) {
          var v6679 = v13491.getNode(id$$31)
        }
        introspect(JAM.policy.p3) {
          this.fitchParsimony(v6679);
        }
        introspect(JAM.policy.p3) {
          this.colorCharacter();
        }
        var v6680 = this.fx;
        var v13492 = ["linear", "node-property:alpha"];
        var v6681 = {modes:v13492, onComplete:v530};
        introspect(JAM.policy.p3) {
          v6680.animate(v6681);
        }
        return;
      }
      var v6682 = this.busy;
      if (v6682) {
        return;
      }
      this.busy = true;
      var that$$28 = this;
      var canvas$$33 = this.canvas;
      var v6683 = this.graph;
      introspect(JAM.policy.p3) {
        var clickedNode = v6683.getNode(id$$31)
      }
      var v6685 = method$$4 === "animate";
      if (v6685) {
        introspect(JAM.policy.p3) {
          $setRoot.call(this);
        }
      } else {
        var v6684 = method$$4 === "replot";
        if (v6684) {
          introspect(JAM.policy.p3) {
            $setRoot.call(this);
          }
        }
      }
      var v18686 = this.graph;
      var v13493 = v18686.depth;
      var v6686 = v13493.length;
      this.zoomIndex = v6686 - 1;
      return;
    }
    function v529(node$$87) {
      function v528(n$$45) {
        n$$45.selected = false;
        return;
      }
      function path(node$$88) {
        function v527(n$$44) {
          n$$44.exist = true;
          n$$44.drawn = true;
          return;
        }
        var v13494 = node$$88 === null;
        var v18687 = !v13494;
        if (v18687) {
          v13494 = node$$88.selected;
        }
        var v6687 = v13494;
        if (v6687) {
          return;
        }
        node$$88.selected = true;
        var v18688 = that$$27.group;
        var v18689 = [node$$88];
        introspect(JAM.policy.p3) {
          var v13495 = v18688.getSiblings(v18689)
        }
        var v13496 = node$$88.id;
        var v6688 = v13495[v13496];
        introspect(JAM.policy.p3) {
          $$$1.each(v6688, v527);
        }
        introspect(JAM.policy.p3) {
          var parents = node$$88.getParents()
        }
        var v6689;
        var v18690 = parents.length;
        var v13497 = v18690 > 0;
        if (v13497) {
          v6689 = parents[0];
        } else {
          v6689 = null;
        }
        parents = v6689;
        path(parents);
        return;
      }
      var that$$27 = this;
      var i$$79;
      var ns$$1;
      var v6690 = this.graph;
      introspect(JAM.policy.p3) {
        v6690.eachNode(v528);
      }
      i$$79 = 0;
      var v18691 = node$$87.id;
      var v13498 = [v18691];
      introspect(JAM.policy.p3) {
        ns$$1 = v13498.concat(nodesInPath);
      }
      var v13499 = ns$$1.length;
      var v6692 = i$$79 < v13499;
      for (;v6692;) {
        var v13500 = this.graph;
        var v13501 = ns$$1[i$$79];
        introspect(JAM.policy.p3) {
          var v6691 = v13500.getNode(v13501)
        }
        path(v6691);
        i$$79 = i$$79 + 1;
        var v13502 = ns$$1.length;
        v6692 = i$$79 < v13502;
      }
      return;
    }
    function v526(node$$86, onComplete$$5) {
      introspect(JAM.policy.p3) {
        var nodeArray$$2 = getNodesToShow.call(this, node$$86)
      }
      var v6693 = this.group;
      var v13503 = this.controller;
      introspect(JAM.policy.p3) {
        var v6694 = $$$1.merge(v13503, onComplete$$5)
      }
      introspect(JAM.policy.p3) {
        v6693.expand(nodeArray$$2, v6694);
      }
      return;
    }
    function v525(node$$85, onComplete$$4) {
      introspect(JAM.policy.p3) {
        this.compute("end", false);
      }
      var move = onComplete$$4.Move;
      var JSCompiler_object_inline_x_88 = move.offsetX;
      var JSCompiler_object_inline_y_89 = move.offsetY;
      var v6695 = this.fx;
      var v13504 = this.controller;
      var v18692 = ["linear"];
      var v13505 = {modes:v18692};
      introspect(JAM.policy.p3) {
        var v6696 = $$$1.merge(v13504, v13505, onComplete$$4)
      }
      introspect(JAM.policy.p3) {
        v6695.animate(v6696);
      }
      return;
    }
    function v524(onComplete$$3, switched) {
      var v6697 = this.config;
      var orn$$4 = v6697.orientation;
      var Geom$$2 = this.geom;
      var Group = this.group;
      if (switched) {
        introspect(JAM.policy.p3) {
          Geom$$2.switchOrientation(switched);
        }
      }
      introspect(JAM.policy.p3) {
        var nodes$$1 = getNodesToHide.call(this)
      }
      if (switched) {
        introspect(JAM.policy.p3) {
          Geom$$2.switchOrientation(orn$$4);
        }
      }
      var v13506 = this.controller;
      introspect(JAM.policy.p3) {
        var v6698 = $$$1.merge(v13506, onComplete$$3)
      }
      introspect(JAM.policy.p3) {
        Group.contract(nodes$$1, v6698);
      }
      return;
    }
    function v523(node$$84, onComplete$$2) {
      function v522(n$$43) {
        var v13507 = n$$43.drawn;
        if (v13507) {
          introspect(JAM.policy.p3) {
            var v18693 = n$$43.anySubnode()
          }
          v13507 = !v18693;
        }
        var v6700 = v13507;
        if (v6700) {
          introspect(JAM.policy.p3) {
            leaves$$2.push(n$$43);
          }
          var v13508 = n$$43._depth;
          var v6699 = v13508 - d$$5;
          n$$43._level = lev - v6699;
        }
        return;
      }
      var v6701 = this.controller;
      introspect(JAM.policy.p3) {
        var handler$$3 = $$$1.merge(v6701, onComplete$$2)
      }
      var v6702 = this.config;
      var lev = v6702.levelsToShow;
      var v6704 = handler$$3.request;
      if (v6704) {
        var leaves$$2 = [];
        var d$$5 = node$$84._depth;
        introspect(JAM.policy.p3) {
          node$$84.eachLevel(0, lev, v522);
        }
        var v6703 = this.group;
        introspect(JAM.policy.p3) {
          v6703.requestNodes(leaves$$2, handler$$3);
        }
      } else {
        introspect(JAM.policy.p3) {
          handler$$3.onComplete();
        }
      }
      return;
    }
    function v521() {
      function v520(n$$42) {
        var v6705 = n$$42.exist;
        if (v6705) {
          n$$42.drawn = true;
        }
        return;
      }
      var v6706 = this.graph;
      var v6707 = this.root;
      introspect(JAM.policy.p3) {
        v6706.computeLevels(v6707, 0, "ignore");
      }
      var v6708 = this.geom;
      var v6709 = this.clickedNode;
      var v6710 = this.canvas;
      introspect(JAM.policy.p3) {
        v6708.setRightLevelToShow(v6709, v6710);
      }
      var v6711 = this.graph;
      introspect(JAM.policy.p3) {
        v6711.eachNode(v520);
      }
      introspect(JAM.policy.p3) {
        this.compute("end");
      }
      return;
    }
    function v519() {
      introspect(JAM.policy.p3) {
        this.reposition();
      }
      var v18694 = this.clickedNode;
      if (v18694) {
        var v23755 = this.clickedNode;
        v18694 = v23755.id;
      }
      var v13509 = v18694;
      var v18695 = !v13509;
      if (v18695) {
        v13509 = this.root;
      }
      var v6712 = v13509;
      introspect(JAM.policy.p3) {
        this.select(v6712);
      }
      return;
    }
    function v518(id$$30) {
      nodesInPath.length = 0;
      var v18696 = this.clickedNode;
      if (v18696) {
        var v23756 = this.clickedNode;
        v18696 = v23756.id;
      }
      var v13510 = v18696;
      var v18697 = !v13510;
      if (v18697) {
        v13510 = this.root;
      }
      var v6713 = v13510;
      introspect(JAM.policy.p3) {
        this.select(v6713);
      }
      return;
    }
    function v517(id$$29) {
      introspect(JAM.policy.p3) {
        nodesInPath.push(id$$29);
      }
      var v18698 = this.clickedNode;
      if (v18698) {
        var v23757 = this.clickedNode;
        v18698 = v23757.id;
      }
      var v13511 = v18698;
      var v18699 = !v13511;
      if (v18699) {
        v13511 = this.root;
      }
      var v6714 = v13511;
      introspect(JAM.policy.p3) {
        this.select(v6714);
      }
      return;
    }
    function v516(align$$2, method$$3, onComplete$$1) {
      var v6715 = this.config;
      v6715.align = align$$2;
      var v6719 = method$$3 === "animate";
      if (v6719) {
        var v13512 = this.clickedNode;
        var v6716 = v13512.id;
        introspect(JAM.policy.p3) {
          this.select(v6716, onComplete$$1);
        }
      } else {
        var v6718 = method$$3 === "replot";
        if (v6718) {
          var v13513 = this.clickedNode;
          var v6717 = v13513.id;
          introspect(JAM.policy.p3) {
            this.onClick(v6717, onComplete$$1);
          }
        }
      }
      return;
    }
    function v515(pos$$36, method$$2, onComplete) {
      function v514() {
        introspect(JAM.policy.p3) {
          Geom$$1.switchOrientation(pos$$36);
        }
        introspect(JAM.policy.p3) {
          that$$26.compute("end", false);
        }
        Plot.busy = false;
        var v6723 = method$$2 === "animate";
        if (v6723) {
          var v13514 = that$$26.clickedNode;
          var v6720 = v13514.id;
          introspect(JAM.policy.p3) {
            that$$26.onClick(v6720, onComplete);
          }
        } else {
          var v6722 = method$$2 === "replot";
          if (v6722) {
            var v13515 = that$$26.clickedNode;
            var v6721 = v13515.id;
            introspect(JAM.policy.p3) {
              that$$26.select(v6721, onComplete);
            }
          }
        }
        return;
      }
      var Geom$$1 = this.geom;
      var Plot = this.fx;
      var that$$26 = this;
      var v13516 = Plot.busy;
      var v6725 = !v13516;
      if (v6725) {
        Plot.busy = true;
        var v6724 = {onComplete:v514};
        introspect(JAM.policy.p3) {
          this.contract(v6724, pos$$36);
        }
      }
      return;
    }
    function v513(scroll$$3) {
      function v512(subn$$5) {
        var v6726;
        if (show$$2) {
          var v13517 = subn$$5.exist;
          v6726 = !v13517;
        } else {
          v6726 = subn$$5.exist;
        }
        var nodeVisible = v6726;
        if (nodeVisible) {
          subn$$5.exist = show$$2;
          subn$$5.drawn = show$$2;
        }
        return;
      }
      var v13518 = this.busy;
      var v6744 = !v13518;
      if (v6744) {
        this.busy = true;
        var v6727 = this.config;
        var v6728 = {name:""};
        introspect(JAM.policy.p3) {
          v6727.onBeforeCompute(v6728);
        }
        var viz$$21 = this;
        var graph$$19 = viz$$21.graph;
        var flag$$2 = true;
        var v6729 = viz$$21.graph;
        var v6730 = viz$$21.root;
        introspect(JAM.policy.p3) {
          var node$$83 = v6729.getNode(v6730)
        }
        var step$$2 = 2;
        var min$$6 = 1;
        var v13519 = graph$$19.depth;
        var v6731 = v13519.length;
        var max$$4 = v6731 - 1;
        var j$$12;
        var v18700 = viz$$21.zoomIndex;
        var v13520 = typeof v18700;
        var v6732 = v13520 === "undefined";
        if (v6732) {
          viz$$21.zoomIndex = 1;
        }
        var i$$78 = viz$$21.zoomIndex;
        var v6735 = i$$78 < 1;
        if (v6735) {
          i$$78 = 1;
        } else {
          var v23758 = graph$$19.depth;
          var v18701 = v23758.length;
          var v13521 = v18701 - 1;
          var v6734 = i$$78 > v13521;
          if (v6734) {
            var v13522 = graph$$19.depth;
            var v6733 = v13522.length;
            i$$78 = v6733 - 1;
          }
        }
        var v6736;
        var v13523 = scroll$$3 < 0;
        if (v13523) {
          v6736 = false;
        } else {
          v6736 = true;
        }
        var show$$2 = v6736;
        var v18702 = graph$$19.depth;
        var v13524 = v18702.length;
        var v6737 = v13524 / 10;
        introspect(JAM.policy.p3) {
          step$$2 = Math.round(v6737);
        }
        introspect(JAM.policy.p3) {
          step$$2 = Math.max(step$$2, 2);
        }
        var v6738 = graph$$19.depth;
        var maxDepth = v6738.length;
        var v6739 = graph$$19.depth;
        var nodelist = v6739[i$$78];
        var v6740 = nodelist.length;
        j$$12 = v6740 - 1;
        var v6741 = j$$12 >= 0;
        for (;v6741;) {
          var n$$41 = nodelist[j$$12];
          introspect(JAM.policy.p3) {
            n$$41.eachLevel(1, step$$2, v512);
          }
          j$$12 = j$$12 - 1;
          v6741 = j$$12 >= 0;
        }
        introspect(JAM.policy.p3) {
          viz$$21.computePositions(node$$83, "");
        }
        introspect(JAM.policy.p3) {
          viz$$21.plot();
        }
        var v6742 = viz$$21.config;
        var v6743 = "Depth " + i$$78;
        introspect(JAM.policy.p3) {
          v6742.onAfterCompute(v6743);
        }
        var v23759;
        if (show$$2) {
          v23759 = +1;
        } else {
          v23759 = -1;
        }
        var v18703 = v23759;
        var v13525 = v18703 * step$$2;
        i$$78 = i$$78 + v13525;
        viz$$21.zoomIndex = i$$78;
        this.busy = false;
      }
      return;
    }
    function v511() {
      var v6745 = this.canvas;
      introspect(JAM.policy.p3) {
        var size$$8 = v6745.getSize()
      }
      var key$$28;
      var i$$77;
      var overflow = false;
      var v13526 = this.clickedNode;
      var v6746 = v13526.id;
      var v13527 = !v6746;
      if (v13527) {
        v6746 = this.root;
      }
      var clicked = v6746;
      var height$$20 = 0;
      var v6747 = this.graph;
      introspect(JAM.policy.p3) {
        var root$$15 = v6747.getNode(clicked)
      }
      var v6748 = this.graph;
      var depth$$1 = v6748.depth;
      var v6749 = this.config;
      var v6750 = {name:""};
      introspect(JAM.policy.p3) {
        v6749.onBeforeCompute(v6750);
      }
      for (key$$28 in depth$$1) {
        introspect(JAM.policy.p3) {
          var v6757 = depth$$1.hasOwnProperty(key$$28)
        }
        if (v6757) {
          var v6756 = depth$$1[key$$28];
          if (v6756) {
            var nodes = depth$$1[key$$28];
            var tempHeight = 0;
            i$$77 = 0;
            var v13528 = nodes.length;
            var v6753 = i$$77 < v13528;
            for (;v6753;) {
              var node$$82 = nodes[i$$77];
              var v13529 = size$$8.height;
              var v6752 = height$$20 < v13529;
              if (v6752) {
                var v13530 = node$$82.data;
                var v6751 = v13530.leaf;
                if (v6751) {
                  introspect(JAM.policy.p3) {
                    var v18704 = node$$82.getData("height", "start")
                  }
                  var v13531 = v18704 + 8;
                  tempHeight = tempHeight + v13531;
                } else {
                  introspect(JAM.policy.p3) {
                    var v18705 = node$$82.getData("height", "start")
                  }
                  var v13532 = v18705 / 2;
                  tempHeight = tempHeight + v13532;
                }
                node$$82.drawn = true;
                node$$82.exist = true;
              }
              i$$77 = i$$77 + 1;
              var v13533 = nodes.length;
              v6753 = i$$77 < v13533;
            }
            var v18706 = tempHeight + height$$20;
            var v18707 = size$$8.height;
            var v13534 = v18706 < v18707;
            if (v13534) {
              v13534 = !overflow;
            }
            var v6755 = v13534;
            if (v6755) {
              height$$20 = height$$20 + tempHeight;
              var v31148 = parseInt(key$$28, 10);
              this.zoomIndex = v31148;
            } else {
              i$$77 = 0;
              var v13535 = nodes.length;
              var v6754 = i$$77 < v13535;
              for (;v6754;) {
                node$$82 = nodes[i$$77];
                node$$82.exist = false;
                node$$82.drawn = false;
                node$$82.collapsed = true;
                i$$77 = i$$77 + 1;
                var v13536 = nodes.length;
                v6754 = i$$77 < v13536;
              }
              overflow = true;
            }
          }
        }
      }
      var canvas$$32 = this.canvas;
      var ox$$4 = canvas$$32.translateOffsetX;
      var oy$$5 = canvas$$32.translateOffsetY;
      var v6758 = this.canvas;
      var v6759 = -1 * ox$$4;
      var v6760 = -1 * oy$$5;
      introspect(JAM.policy.p3) {
        v6758.translate(v6759, v6760);
      }
      var v13537 = this.graph;
      var v13538 = this.root;
      introspect(JAM.policy.p3) {
        var v6761 = v13537.getNode(v13538)
      }
      introspect(JAM.policy.p3) {
        this.computePositions(v6761, "");
      }
      introspect(JAM.policy.p3) {
        this.plot();
      }
      var v6762 = this.config;
      introspect(JAM.policy.p3) {
        v6762.onAfterCompute();
      }
      return;
    }
    function v510() {
      var v6763 = this.fx;
      var v6764 = this.controller;
      introspect(JAM.policy.p3) {
        v6763.plot(v6764);
      }
      return;
    }
    function v509(value$$42, rangeArray$$2) {
      var i$$76;
      var v18708 = typeof value$$42;
      var v13539 = v18708 === "undefined";
      var v18710 = !v13539;
      if (v18710) {
        var v18709 = typeof rangeArray$$2;
        v13539 = v18709 === "undefined";
      }
      var v6765 = v13539;
      if (v6765) {
        return;
      }
      i$$76 = 0;
      var v13540 = rangeArray$$2.length;
      var v6767 = i$$76 < v13540;
      for (;v6767;) {
        var v13541 = rangeArray$$2[i$$76];
        var v6766 = value$$42 <= v13541;
        if (v6766) {
          break;
        }
        i$$76 = i$$76 + 1;
        var v13542 = rangeArray$$2.length;
        v6767 = i$$76 < v13542;
      }
      var v6768;
      var v18711 = rangeArray$$2.length;
      var v13543 = i$$76 === v18711;
      if (v13543) {
        v6768 = i$$76 - 1;
      } else {
        v6768 = i$$76;
      }
      return v6768;
    }
    function v508() {
      var list$$1;
      var root$$14;
      var i$$75;
      var char$$20;
      var temp$$2 = {};
      var ds = {};
      var j$$11;
      var dschar;
      var sh$$2;
      var jj;
      var v6769 = this.config;
      var shapes$$1 = v6769.shapes;
      var dsAlt = {};
      var dscharAlt;
      var v6770 = this.config;
      var color$$6 = v6770.color;
      var shapePointer = 0;
      var rangeArray$$1;
      var label$$11;
      var v6771 = this.config;
      var quantColor$$1 = v6771.quantColor;
      var v6772 = this.config;
      var quantShape = v6772.quantShape;
      var heading;
      var content;
      var v6773 = this.graph;
      var v6774 = this.root;
      introspect(JAM.policy.p3) {
        root$$14 = v6773.getNode(v6774);
      }
      var v6775 = this.characterGroups;
      list$$1 = v6775.quali;
      var v6777 = !list$$1;
      if (v6777) {
        introspect(JAM.policy.p3) {
          this.findAllCharTypes(root$$14);
        }
        var v6776 = this.characterGroups;
        list$$1 = v6776.quali;
      }
      if (list$$1) {
        i$$75 = 0;
        var v13544 = list$$1.length;
        var v6780 = i$$75 < v13544;
        for (;v6780;) {
          char$$20 = list$$1[i$$75];
          introspect(JAM.policy.p3) {
            var v6778 = this.findDistinctCharacterStates(char$$20)
          }
          introspect(JAM.policy.p2) {
            temp$$2[char$$20] = v6778.array;
          }
          var v6779 = temp$$2[char$$20];
          if (v6779) {
            var v13545 = temp$$2[char$$20];
            introspect(JAM.policy.p3) {
              v13545.push("multiple");
            }
          }
          i$$75 = i$$75 + 1;
          var v13546 = list$$1.length;
          v6780 = i$$75 < v13546;
        }
      }
      for (i$$75 in temp$$2) {
        introspect(JAM.policy.p3) {
          var v6786 = temp$$2.hasOwnProperty(i$$75)
        }
        if (v6786) {
          char$$20 = temp$$2[i$$75];
          dschar = [];
          dscharAlt = {};
          j$$11 = 0;
          var v13547 = char$$20.length;
          var v6785 = j$$11 < v13547;
          for (;v6785;) {
            var v6781;
            var v18712 = color$$6.length;
            var v13549 = v18712 > j$$11;
            if (v13549) {
              v6781 = j$$11;
            } else {
              var v13548 = color$$6.length;
              v6781 = v13548 - 1;
            }
            jj = v6781;
            var v6782;
            var v18713 = shapes$$1.length;
            var v13551 = v18713 > shapePointer;
            if (v13551) {
              v6782 = shapePointer;
            } else {
              var v13550 = shapes$$1.length;
              v6782 = v13550 - 1;
            }
            sh$$2 = v6782;
            var v13552 = color$$6[jj];
            var v13553 = char$$20[j$$11];
            var v13554 = shapes$$1[sh$$2];
            var v6783 = {color:v13552, name:v13553, shape:v13554};
            introspect(JAM.policy.p3) {
              dschar.push(v6783);
            }
            var v6784 = char$$20[j$$11];
            var v13555 = color$$6[jj];
            var v13556 = shapes$$1[sh$$2];
            introspect(JAM.policy.p2) {
              dscharAlt[v6784] = {color:v13555, shape:v13556};
            }
            j$$11 = j$$11 + 1;
            var v13557 = char$$20.length;
            v6785 = j$$11 < v13557;
          }
          introspect(JAM.policy.p2) {
            ds[i$$75] = dschar;
          }
          introspect(JAM.policy.p2) {
            dsAlt[i$$75] = dscharAlt;
          }
          shapePointer++;
        }
      }
      i$$75 = 0;
      var v23760 = this.characterGroups;
      var v18714 = v23760.quant;
      var v13558 = v18714.length;
      var v6796 = i$$75 < v13558;
      for (;v6796;) {
        var v13559 = this.characterGroups;
        var v6787 = v13559.quant;
        char$$20 = v6787[i$$75];
        var v6788 = this.range;
        rangeArray$$1 = v6788[char$$20];
        dschar = [];
        dscharAlt = {};
        j$$11 = 0;
        var v13560 = rangeArray$$1.length;
        var v6795 = j$$11 < v13560;
        for (;v6795;) {
          var v6789;
          var v18715 = quantColor$$1.length;
          var v13562 = v18715 > j$$11;
          if (v13562) {
            v6789 = j$$11;
          } else {
            var v13561 = quantColor$$1.length;
            v6789 = v13561 - 1;
          }
          jj = v6789;
          var v6790;
          var v18716 = shapes$$1.length;
          var v13564 = v18716 > shapePointer;
          if (v13564) {
            v6790 = shapePointer;
          } else {
            var v13563 = shapes$$1.length;
            v6790 = v13563 - 1;
          }
          sh$$2 = v6790;
          var v18717;
          var v23763 = j$$11 === 0;
          if (v23763) {
            var v27677 = this.characterMinMax;
            var v26112 = v27677[char$$20];
            var v23761 = v26112.min;
            introspect(JAM.policy.p3) {
              v18717 = v23761.toFixed(2);
            }
          } else {
            var v23762 = j$$11 - 1;
            v18717 = rangeArray$$1[v23762];
          }
          var v13565 = v18717;
          var v6791 = v13565 + " - ";
          var v6792 = rangeArray$$1[j$$11];
          label$$11 = v6791 + v6792;
          var v13566 = quantColor$$1[j$$11];
          var v6793 = {color:v13566, name:label$$11, shape:quantShape};
          introspect(JAM.policy.p3) {
            dschar.push(v6793);
          }
          var v6794 = quantColor$$1[j$$11];
          introspect(JAM.policy.p2) {
            dscharAlt[label$$11] = {color:v6794, shape:quantShape};
          }
          j$$11 = j$$11 + 1;
          var v13567 = rangeArray$$1.length;
          v6795 = j$$11 < v13567;
        }
        introspect(JAM.policy.p2) {
          ds[char$$20] = dschar;
        }
        introspect(JAM.policy.p2) {
          dsAlt[char$$20] = dscharAlt;
        }
        shapePointer++;
        i$$75 = i$$75 + 1;
        var v23764 = this.characterGroups;
        var v18718 = v23764.quant;
        var v13568 = v18718.length;
        v6796 = i$$75 < v13568;
      }
      heading = "";
      content = "";
      var v6797 = this.config;
      list$$1 = v6797.selectedCharacters;
      i$$75 = 0;
      var v13569 = list$$1.length;
      var v6802 = i$$75 < v13569;
      for (;v6802;) {
        label$$11 = "";
        char$$20 = list$$1[i$$75];
        var v13570 = typeof char$$20;
        var v6801 = v13570 !== "undefined";
        if (v6801) {
          var v6798 = ds[char$$20];
          var v13571 = !v6798;
          if (v13571) {
            v6798 = [];
          }
          dschar = v6798;
          introspect(JAM.policy.p3) {
            var v13572 = char$$20.replace(/_/g, " ")
          }
          var v6799 = '<tr><th colspan="2">' + v13572;
          heading = v6799 + "</th></tr>";
          j$$11 = 0;
          var v13573 = dschar.length;
          var v6800 = j$$11 < v13573;
          for (;v6800;) {
            sh$$2 = dschar[j$$11];
            var v29314 = sh$$2.shape;
            var v28666 = '<tr><td><div class ="' + v29314;
            var v27678 = v28666 + '" style="background-color:';
            var v27679 = sh$$2.color;
            var v26113 = v27678 + v27679;
            var v23765 = v26113 + ';"></div></td><td>';
            var v23766 = sh$$2.name;
            var v18719 = v23765 + v23766;
            var v13574 = v18719 + "</td></tr>";
            label$$11 = label$$11 + v13574;
            j$$11 = j$$11 + 1;
            var v13575 = dschar.length;
            v6800 = j$$11 < v13575;
          }
          if (label$$11) {
            var v13576 = heading + label$$11;
            content = content + v13576;
          }
        }
        i$$75 = i$$75 + 1;
        var v13577 = list$$1.length;
        v6802 = i$$75 < v13577;
      }
      this.colorCoding = dsAlt;
      this.colorCodingQuali = ds;
      return content;
    }
    function v507(character$$2) {
      var i$$74;
      var result$$17 = [];
      var temp$$1 = {};
      var node$$81;
      var char$$19;
      var j$$10;
      var v13578 = this.graph;
      var v6809 = v13578.nodes;
      for (i$$74 in v6809) {
        var v18720 = this.graph;
        var v13579 = v18720.nodes;
        introspect(JAM.policy.p3) {
          var v6808 = v13579.hasOwnProperty(i$$74)
        }
        if (v6808) {
          var v13580 = this.graph;
          var v6803 = v13580.nodes;
          node$$81 = v6803[i$$74];
          var v13581 = node$$81.data;
          var v6804 = v13581.character;
          char$$19 = v6804[character$$2];
          var v18721 = node$$81.data;
          var v13582 = v18721.leaf;
          if (v13582) {
            v13582 = char$$19;
          }
          var v6807 = v13582;
          if (v6807) {
            j$$10 = 0;
            var v13583 = char$$19.length;
            var v6806 = j$$10 < v13583;
            for (;v6806;) {
              var v6805 = char$$19[j$$10];
              introspect(JAM.policy.p2) {
                temp$$1[v6805] = character$$2;
              }
              j$$10++;
              var v13584 = char$$19.length;
              v6806 = j$$10 < v13584;
            }
          }
        }
      }
      for (i$$74 in temp$$1) {
        introspect(JAM.policy.p3) {
          var v6810 = temp$$1.hasOwnProperty(i$$74)
        }
        if (v6810) {
          introspect(JAM.policy.p3) {
            result$$17.push(i$$74);
          }
        }
      }
      return {hash:temp$$1, array:result$$17};
    }
    function v506(colorOverwrite) {
      function v505(root$$13, characterColorCollection) {
        function v504(node$$80) {
          var v6811 = node$$80.data;
          var v18722 = node$$80.data;
          var v13585 = v18722.color;
          var v18723 = !v13585;
          if (v18723) {
            v13585 = {};
          }
          v6811.color = v13585;
          var v6815 = node$$80.adjacencies;
          for (adj in v6815) {
            var v13586 = node$$80.adjacencies;
            introspect(JAM.policy.p3) {
              var v6814 = v13586.hasOwnProperty(adj)
            }
            if (v6814) {
              var v6812 = node$$80.adjacencies;
              currentAdj$$1 = v6812[adj];
              var v6813 = currentAdj$$1.data;
              if (v6813) {
                var v13587 = currentAdj$$1.data;
                delete v13587.$color;
              }
            }
          }
          i$$73 = 0;
          var v23767 = that$$25.characterGroups;
          var v18724 = v23767.quali;
          var v13588 = v18724.length;
          var v6831 = i$$73 < v13588;
          for (;v6831;) {
            var v13589 = that$$25.characterGroups;
            var v6816 = v13589.quali;
            char$$18 = v6816[i$$73];
            var v13590 = node$$80.data;
            var v6817 = v13590.character;
            charArray = v6817[char$$18];
            var v18725 = charArray;
            if (v18725) {
              var v23768 = charArray.length;
              v18725 = v23768 === 1;
            }
            var v13591 = v18725;
            if (v13591) {
              v13591 = charArray[0];
            }
            var v6818 = v13591;
            var v13592 = !v6818;
            if (v13592) {
              v6818 = "";
            }
            key$$27 = v6818;
            if (key$$27) {
              introspect(JAM.policy.p3) {
                key$$27 = key$$27.replace(/ /g, "");
              }
              var v13593 = node$$80.data;
              var v6819 = v13593.color;
              var v13594 = characterColorCollection[char$$18];
              introspect(JAM.policy.p2) {
                v6819[char$$18] = v13594.color;
              }
              var v6829 = char$$18 === firstCharacter$$2;
              if (v6829) {
                var v6828 = node$$80.adjacencies;
                for (adj in v6828) {
                  var v13595 = node$$80.adjacencies;
                  introspect(JAM.policy.p3) {
                    var v6827 = v13595.hasOwnProperty(adj)
                  }
                  if (v6827) {
                    var v6820 = node$$80.adjacencies;
                    currentAdj$$1 = v6820[adj];
                    var v13596 = node$$80.adjacencies;
                    var v6821 = v13596[adj];
                    var nodeTo$$6 = v6821.nodeTo;
                    var v13597 = node$$80.adjacencies;
                    var v6822 = v13597[adj];
                    var nodeFrom$$4 = v6822.nodeFrom;
                    var v18726 = nodeTo$$6._depth;
                    var v18727 = node$$80._depth;
                    var v13598 = v18726 < v18727;
                    var v18730 = !v13598;
                    if (v18730) {
                      var v18728 = nodeFrom$$4._depth;
                      var v18729 = node$$80._depth;
                      v13598 = v18728 < v18729;
                    }
                    var v6826 = v13598;
                    if (v6826) {
                      var v13599 = charArray.length;
                      var v6825 = v13599 === 1;
                      if (v6825) {
                        var v6823 = currentAdj$$1.data;
                        var v18731 = characterColorCollection[firstCharacter$$2];
                        var v18732 = charArray[0];
                        var v13600 = v18731[v18732];
                        v6823.$color = v13600.color;
                        break;
                      } else {
                        var v6824 = currentAdj$$1.data;
                        delete v6824.$color;
                      }
                    }
                  }
                }
              }
            } else {
              var v13601 = node$$80.data;
              var v6830 = v13601.color;
              var v13602 = characterColorCollection[char$$18];
              introspect(JAM.policy.p2) {
                v6830[char$$18] = v13602["multiple"];
              }
            }
            i$$73 = i$$73 + 1;
            var v23769 = that$$25.characterGroups;
            var v18733 = v23769.quali;
            var v13603 = v18733.length;
            v6831 = i$$73 < v13603;
          }
          i$$73 = 0;
          var v23770 = that$$25.characterGroups;
          var v18734 = v23770.quant;
          var v13604 = v18734.length;
          var v6847 = i$$73 < v13604;
          for (;v6847;) {
            var v13605 = that$$25.characterGroups;
            var v6832 = v13605.quant;
            char$$18 = v6832[i$$73];
            var v13606 = node$$80.data;
            var v6833 = v13606.character;
            charArray = v6833[char$$18];
            var v18735 = charArray;
            if (v18735) {
              var v23771 = charArray.length;
              v18735 = v23771 === 1;
            }
            var v13607 = v18735;
            if (v13607) {
              v13607 = charArray[0];
            }
            var v6834 = v13607;
            var v13608 = !v6834;
            if (v13608) {
              v6834 = "";
            }
            key$$27 = v6834;
            if (key$$27) {
              var v6835 = that$$25.range;
              var rangeArray = v6835[char$$18];
              introspect(JAM.policy.p3) {
                var index$$43 = that$$25.findIndex(key$$27, rangeArray)
              }
              var v13609 = node$$80.data;
              var v6836 = v13609.color;
              introspect(JAM.policy.p2) {
                v6836[char$$18] = quantColor[index$$43];
              }
              var v6846 = char$$18 === firstCharacter$$2;
              if (v6846) {
                var v6845 = node$$80.adjacencies;
                for (adj in v6845) {
                  var v13610 = node$$80.adjacencies;
                  introspect(JAM.policy.p3) {
                    var v6844 = v13610.hasOwnProperty(adj)
                  }
                  if (v6844) {
                    var v6837 = node$$80.adjacencies;
                    var currentAdj$$1 = v6837[adj];
                    var v13611 = node$$80.adjacencies;
                    var v6838 = v13611[adj];
                    nodeTo$$6 = v6838.nodeTo;
                    var v13612 = node$$80.adjacencies;
                    var v6839 = v13612[adj];
                    nodeFrom$$4 = v6839.nodeFrom;
                    var v18736 = nodeTo$$6._depth;
                    var v18737 = node$$80._depth;
                    var v13613 = v18736 < v18737;
                    var v18740 = !v13613;
                    if (v18740) {
                      var v18738 = nodeFrom$$4._depth;
                      var v18739 = node$$80._depth;
                      v13613 = v18738 < v18739;
                    }
                    var v6843 = v13613;
                    if (v6843) {
                      var v13614 = charArray.length;
                      var v6842 = v13614 === 1;
                      if (v6842) {
                        var v6840 = currentAdj$$1.data;
                        v6840.$color = quantColor[index$$43];
                        break;
                      } else {
                        var v6841 = currentAdj$$1.data;
                        delete v6841.$color;
                      }
                    }
                  }
                }
              }
            }
            i$$73 = i$$73 + 1;
            var v23772 = that$$25.characterGroups;
            var v18741 = v23772.quant;
            var v13615 = v18741.length;
            v6847 = i$$73 < v13615;
          }
          return;
        }
        var v6848 = that$$25.config;
        var firstCharacter$$2 = v6848.firstCharacter;
        var key$$27;
        var charArray;
        var char$$18;
        var i$$73;
        var v6849 = that$$25.config;
        var quantColor = v6849.quantColor;
        var currentAdj;
        introspect(JAM.policy.p3) {
          root$$13.eachSubgraph(v504);
        }
        return;
      }
      var speciesHash$$1 = this.character;
      var speciesName$$1;
      var char$$17;
      var i$$72;
      var that$$25 = this;
      var box;
      var node$$79;
      var characterValue;
      var j$$9;
      var html$$5;
      introspect(JAM.policy.p3) {
        var v6867 = this.hasProperty(speciesHash$$1)
      }
      if (v6867) {
        var $colorCharacter = v505;
        var v6850 = this.graph;
        var v6851 = this.root;
        introspect(JAM.policy.p3) {
          var rootNode$$1 = v6850.getNode(v6851)
        }
        var string;
        var v6852 = this.config;
        var color$$5 = v6852.color;
        var distinct = {};
        var legendColorCollection = {};
        var pointer = 0;
        var legendRows = "";
        var multiple = false;
        var firstCharacter$$1;
        var firstSpecies;
        var characterKey = [];
        for (speciesName$$1 in speciesHash$$1) {
          introspect(JAM.policy.p3) {
            var v6855 = speciesHash$$1.hasOwnProperty(speciesName$$1)
          }
          if (v6855) {
            var v6854 = speciesHash$$1[speciesName$$1];
            for (char$$17 in v6854) {
              var v13616 = speciesHash$$1[speciesName$$1];
              introspect(JAM.policy.p3) {
                var v6853 = v13616.hasOwnProperty(char$$17)
              }
              if (v6853) {
                introspect(JAM.policy.p3) {
                  characterKey.push(char$$17);
                }
              }
            }
            break;
          }
        }
        distinct = legendColorCollection[firstCharacter$$1];
        var v18742 = this.config;
        var v13617 = v18742.initCharacter;
        var v6858 = !v13617;
        if (v6858) {
          var v13618 = this.config;
          var v6856 = v13618.firstCharacter;
          introspect(JAM.policy.p3) {
            this.setCharacter(v6856);
          }
          var v6857 = this.config;
          v6857.initCharacter = true;
        }
        introspect(JAM.policy.p3) {
          var v31149 = this.findAllCharTypes(rootNode$$1)
        }
        this.characterGroups = v31149;
        var v13619 = this.characterGroups;
        var v6859 = v13619.quali;
        introspect(JAM.policy.p3) {
          this.fitchParsimony(rootNode$$1, v6859);
        }
        var v13620 = this.characterGroups;
        var v6860 = v13620.quant;
        introspect(JAM.policy.p3) {
          this.quantParsimony(rootNode$$1, v6860);
        }
        var v13621 = this.characterGroups;
        var v6861 = v13621.quali;
        introspect(JAM.policy.p3) {
          this.checkQuali(v6861);
        }
        var v13622 = this.characterGroups;
        var v6862 = v13622.quant;
        introspect(JAM.policy.p3) {
          this.checkQuant(v6862);
        }
        var v13623 = this.characterGroups;
        var v6863 = v13623.quant;
        introspect(JAM.policy.p3) {
          var v31150 = this.findQuantMinMax(rootNode$$1, v6863)
        }
        this.characterMinMax = v31150;
        var v6864 = this.characterMinMax;
        introspect(JAM.policy.p3) {
          var v31151 = this.findQuantRange(v6864)
        }
        this.range = v31151;
        introspect(JAM.policy.p3) {
          html$$5 = this.createLegend();
        }
        var v13624 = this.graph;
        var v13625 = this.root;
        introspect(JAM.policy.p3) {
          var v6865 = v13624.getNode(v13625)
        }
        var v6866 = this.colorCoding;
        introspect(JAM.policy.p3) {
          $colorCharacter(v6865, v6866);
        }
        return html$$5;
      }
      return;
    }
    function v503(quantMinMax) {
      var result$$16 = {};
      var char$$16;
      var v6868 = this.config;
      var rangeCount = v6868.rangeCount;
      var stepsize;
      var i$$71;
      for (char$$16 in quantMinMax) {
        introspect(JAM.policy.p3) {
          var v6875 = quantMinMax.hasOwnProperty(char$$16)
        }
        if (v6875) {
          var v6869 = quantMinMax[char$$16];
          var min$$5 = v6869.min;
          var v6870 = quantMinMax[char$$16];
          var max$$3 = v6870.max;
          var v6871 = max$$3 - min$$5;
          stepsize = v6871 / rangeCount;
          introspect(JAM.policy.p2) {
            result$$16[char$$16] = [];
          }
          i$$71 = 1;
          var v6874 = i$$71 <= rangeCount;
          for (;v6874;) {
            var v6872 = result$$16[char$$16];
            var v18743 = i$$71 * stepsize;
            var v13626 = min$$5 + v18743;
            introspect(JAM.policy.p3) {
              var v6873 = v13626.toFixed(2)
            }
            introspect(JAM.policy.p3) {
              v6872.push(v6873);
            }
            i$$71 = i$$71 + 1;
            v6874 = i$$71 <= rangeCount;
          }
        }
      }
      return result$$16;
    }
    function v502(root$$12, quantCharacters) {
      function v501(node$$78) {
        var v13627 = node$$78.data;
        var v6880 = v13627.leaf;
        if (v6880) {
          var v18744 = node$$78.data;
          var v13628 = v18744.character;
          var v6876 = v13628[char$$15];
          if (v6876) {
            var v23773 = node$$78.data;
            var v18745 = v23773.character;
            var v13629 = v18745[char$$15];
            v6876 = v13629[0];
          }
          var charState = v6876;
          var v13630 = typeof charState;
          var v6879 = v13630 !== "undefined";
          if (v6879) {
            var v6877;
            var v13631 = min$$4 < charState;
            if (v13631) {
              v6877 = min$$4;
            } else {
              v6877 = charState;
            }
            min$$4 = v6877;
            var v6878;
            var v13632 = max$$2 > charState;
            if (v13632) {
              v6878 = max$$2;
            } else {
              v6878 = charState;
            }
            max$$2 = v6878;
          }
        }
        return;
      }
      var char$$15;
      var min$$4;
      var max$$2;
      var result$$15 = {};
      var i$$70;
      i$$70 = 0;
      var v13633 = quantCharacters.length;
      var v6886 = i$$70 < v13633;
      for (;v6886;) {
        char$$15 = quantCharacters[i$$70];
        var v6881 = result$$15[char$$15];
        var v13634 = !v6881;
        if (v13634) {
          v6881 = {};
        }
        introspect(JAM.policy.p2) {
          result$$15[char$$15] = v6881;
        }
        var v6882 = result$$15[char$$15];
        v6882.min = min$$4 = Number.MAX_VALUE;
        var v6883 = result$$15[char$$15];
        v6883.max = max$$2 = Number.MIN_VALUE;
        introspect(JAM.policy.p3) {
          root$$12.eachSubgraph(v501);
        }
        var v6884 = result$$15[char$$15];
        v6884.min = min$$4;
        var v6885 = result$$15[char$$15];
        v6885.max = max$$2;
        i$$70 = i$$70 + 1;
        var v13635 = quantCharacters.length;
        v6886 = i$$70 < v13635;
      }
      return result$$15;
    }
    function v500(root$$11) {
      function v499(node$$77) {
        var v13636 = node$$77.data;
        var v6892 = v13636.leaf;
        if (v6892) {
          i$$69 = 0;
          var v13637 = all.length;
          var v6891 = i$$69 < v13637;
          for (;v6891;) {
            key$$26 = all[i$$69];
            var v23774 = node$$77.data;
            var v18746 = v23774.character;
            var v13638 = v18746[key$$26];
            introspect(JAM.policy.p3) {
              var v6890 = that$$24.characterType(v13638, "quali")
            }
            if (v6890) {
              introspect(JAM.policy.p2) {
                quali[key$$26] = true;
              }
              var v13639 = that$$24.config;
              var v6887 = v13639.typeEnum;
              introspect(JAM.policy.p2) {
                charTypeMapping$$1[key$$26] = v6887.quali;
              }
            } else {
              var v23775 = node$$77.data;
              var v18747 = v23775.character;
              var v13640 = v18747[key$$26];
              introspect(JAM.policy.p3) {
                var v6889 = that$$24.characterType(v13640, "quant")
              }
              if (v6889) {
                introspect(JAM.policy.p2) {
                  quant[key$$26] = true;
                }
                var v13641 = that$$24.config;
                var v6888 = v13641.typeEnum;
                introspect(JAM.policy.p2) {
                  charTypeMapping$$1[key$$26] = v6888.quant;
                }
              }
            }
            i$$69 = i$$69 + 1;
            var v13642 = all.length;
            v6891 = i$$69 < v13642;
          }
        }
        return;
      }
      var type$$56 = {quant:[], quali:[]};
      var all = [];
      var quali = {};
      var quant = {};
      var key$$26;
      var that$$24 = this;
      var v6893 = this.config;
      var first$$4 = v6893.firstCharacter;
      var charTypeMapping$$1 = {};
      var i$$69;
      var v13643 = all;
      if (v13643) {
        var v18748 = all.length;
        v13643 = v18748 === 0;
      }
      var v6901 = v13643;
      if (v6901) {
        introspect(JAM.policy.p3) {
          all = this.listCharacters();
        }
        var v23776 = this.config;
        var v18749 = v23776.selectedCharacters;
        var v13644 = v18749.length;
        var v6900 = v13644 !== 0;
        if (v6900) {
          var v26114 = this.config;
          var v23777 = v26114.selectedCharacters;
          var v18750 = v23777[0];
          var v13645 = typeof v18750;
          var v6895 = v13645 === "undefined";
          if (v6895) {
            var v13646 = this.config;
            var v6894 = v13646.selectedCharacters;
            v6894[0] = all[0];
          }
          var v6896 = this.config;
          var v18751 = this.config;
          var v13647 = v18751.selectedCharacters;
          v6896.firstCharacter = v13647[0];
        } else {
          var v13648 = all.length;
          var v6899 = v13648 !== 0;
          if (v6899) {
            var v6897 = this.config;
            var v13649 = all[0];
            v6897.selectedCharacters = [v13649];
            var v6898 = this.config;
            v6898.firstCharacter = all[0];
          }
        }
      }
      var v13650 = all;
      if (v13650) {
        var v18752 = all.length;
        v13650 = v18752 !== 0;
      }
      var v6902 = v13650;
      if (v6902) {
        introspect(JAM.policy.p3) {
          root$$11.eachSubgraph(v499);
        }
      }
      for (key$$26 in quali) {
        introspect(JAM.policy.p3) {
          var v6904 = quali.hasOwnProperty(key$$26)
        }
        if (v6904) {
          var v6903 = type$$56.quali;
          introspect(JAM.policy.p3) {
            v6903.push(key$$26);
          }
        }
      }
      for (key$$26 in quant) {
        introspect(JAM.policy.p3) {
          var v6906 = quant.hasOwnProperty(key$$26)
        }
        if (v6906) {
          var v6905 = type$$56.quant;
          introspect(JAM.policy.p3) {
            v6905.push(key$$26);
          }
        }
      }
      this.characterList = all;
      this.charTypeMapping = charTypeMapping$$1;
      return type$$56;
    }
    function v498() {
      var aSpecies;
      var i$$68;
      var result$$14 = [];
      var v6908 = this.character;
      for (aSpecies in v6908) {
        var v13651 = this.character;
        var v6907 = v13651[aSpecies];
        for (i$$68 in v6907) {
          introspect(JAM.policy.p3) {
            result$$14.push(i$$68);
          }
        }
        return result$$14;
      }
      return;
    }
    function v497(root$$10, characters$$5) {
      function $quantParsimony(node$$76) {
        function v496(n$$40) {
          var result$$13 = $quantParsimony(n$$40);
          i = 0;
          var v13652 = characters$$5.length;
          var v6912 = i < v13652;
          for (;v6912;) {
            var v18753 = characters$$5[i];
            var v13653 = result$$13[v18753];
            if (v13653) {
              var v27680 = characters$$5[i];
              var v26115 = result$$13[v27680];
              var v23778 = v26115[0];
              var v18754 = typeof v23778;
              v13653 = v18754 !== "undefined";
            }
            var v6911 = v13653;
            if (v6911) {
              var v13654 = characters$$5[i];
              var v6909 = childrenValues$$2[v13654];
              var v18755 = characters$$5[i];
              var v13655 = result$$13[v18755];
              var v6910 = v13655[0];
              introspect(JAM.policy.p3) {
                v6909.push(v6910);
              }
            }
            i = i + 1;
            var v13656 = characters$$5.length;
            v6912 = i < v13656;
          }
          return;
        }
        var childrenValues$$2 = {};
        i = 0;
        var v13657 = characters$$5.length;
        var v6914 = i < v13657;
        for (;v6914;) {
          var v6913 = characters$$5[i];
          introspect(JAM.policy.p2) {
            childrenValues$$2[v6913] = [];
          }
          i = i + 1;
          var v13658 = characters$$5.length;
          v6914 = i < v13658;
        }
        introspect(JAM.policy.p3) {
          node$$76.eachSubnode(v496);
        }
        var v18756 = node$$76.data;
        var v13659 = v18756.leaf;
        var v6919 = !v13659;
        if (v6919) {
          i = 0;
          var v13660 = characters$$5.length;
          var v6918 = i < v13660;
          for (;v6918;) {
            var char$$14 = characters$$5[i];
            var v13661 = node$$76.data;
            var v6915 = v13661.character;
            var value$$41 = v6915[char$$14];
            var v6916 = childrenValues$$2[char$$14];
            introspect(JAM.policy.p3) {
              var mean$$1 = st.mean(v6916)
            }
            var v13662 = node$$76.data;
            var v6917 = v13662.character;
            introspect(JAM.policy.p2) {
              v6917[char$$14] = [mean$$1];
            }
            i = i + 1;
            var v13663 = characters$$5.length;
            v6918 = i < v13663;
          }
        }
        var v6920 = node$$76.data;
        return v6920.character;
      }
      var methods$$1 = this.calcMethods;
      $quantParsimony(root$$10);
      return;
    }
    function v495(characters$$4) {
      function $checkQuali(node$$75) {
        function v494(n$$39) {
          result$$12 = $checkQuali(n$$39);
          i$$67 = 0;
          var v13664 = characters$$4.length;
          var v6924 = i$$67 < v13664;
          for (;v6924;) {
            var v13665 = characters$$4[i$$67];
            var v6923 = result$$12[v13665];
            if (v6923) {
              var v13666 = characters$$4[i$$67];
              var v6921 = childrenValues$$1[v13666];
              var v13667 = characters$$4[i$$67];
              var v6922 = result$$12[v13667];
              introspect(JAM.policy.p3) {
                v6921.push(v6922);
              }
            }
            i$$67 = i$$67 + 1;
            var v13668 = characters$$4.length;
            v6924 = i$$67 < v13668;
          }
          return;
        }
        var childrenValues$$1 = {};
        var result$$12;
        var v6925 = node$$75.data;
        var v18757 = node$$75.data;
        var v13669 = v18757.characterConsistency;
        var v18758 = !v13669;
        if (v18758) {
          v13669 = {};
        }
        v6925.characterConsistency = v13669;
        i$$67 = 0;
        var v13670 = characters$$4.length;
        var v6927 = i$$67 < v13670;
        for (;v6927;) {
          var v6926 = characters$$4[i$$67];
          introspect(JAM.policy.p2) {
            childrenValues$$1[v6926] = [];
          }
          i$$67 = i$$67 + 1;
          var v13671 = characters$$4.length;
          v6927 = i$$67 < v13671;
        }
        introspect(JAM.policy.p3) {
          node$$75.eachSubnode(v494);
        }
        var v18759 = node$$75.data;
        var v13672 = v18759.leaf;
        var v6931 = !v13672;
        if (v6931) {
          i$$67 = 0;
          var v13673 = characters$$4.length;
          var v6930 = i$$67 < v13673;
          for (;v6930;) {
            var char$$13 = characters$$4[i$$67];
            var v6928 = childrenValues$$1[char$$13];
            result$$12 = compareFunction$$1(v6928);
            var v13674 = node$$75.data;
            var v6929 = v13674.characterConsistency;
            introspect(JAM.policy.p2) {
              v6929[char$$13] = result$$12;
            }
            i$$67 = i$$67 + 1;
            var v13675 = characters$$4.length;
            v6930 = i$$67 < v13675;
          }
        }
        var v6932 = node$$75.data;
        return v6932.character;
      }
      function compareFunction$$1(sample$$4) {
        var test1$$1 = sample$$4[0];
        var test2$$1;
        var j$$8 = 0;
        var v13676 = sample$$4.length;
        var v6934 = j$$8 < v13676;
        for (;v6934;) {
          test2$$1 = sample$$4[j$$8];
          introspect(JAM.policy.p3) {
            var result$$11 = that$$23.intersect(test1$$1, test2$$1)
          }
          var v18760 = result$$11.length;
          var v18761 = test1$$1.length;
          var v13677 = v18760 !== v18761;
          var v18764 = !v13677;
          if (v18764) {
            var v18762 = result$$11.length;
            var v18763 = test2$$1.length;
            v13677 = v18762 !== v18763;
          }
          var v6933 = v13677;
          if (v6933) {
            return false;
          }
          test1$$1 = result$$11;
          j$$8 = j$$8 + 1;
          var v13678 = sample$$4.length;
          v6934 = j$$8 < v13678;
        }
        return true;
      }
      var v6935 = this.graph;
      var v6936 = this.root;
      introspect(JAM.policy.p3) {
        var root$$9 = v6935.getNode(v6936)
      }
      var i$$67;
      var that$$23 = this;
      $checkQuali(root$$9);
      return;
    }
    function v493(characters$$3) {
      function $checkQuant(node$$74) {
        function v492(n$$38) {
          ans$$15 = $checkQuant(n$$38);
          result$$10 = ans$$15.character;
          i$$66 = 0;
          var v13679 = characters$$3.length;
          var v6946 = i$$66 < v13679;
          for (;v6946;) {
            var v18765 = characters$$3[i$$66];
            var v13680 = result$$10[v18765];
            if (v13680) {
              var v27681 = characters$$3[i$$66];
              var v26116 = result$$10[v27681];
              var v23779 = v26116[0];
              var v18766 = typeof v23779;
              v13680 = v18766 !== "undefined";
            }
            var v6945 = v13680;
            if (v6945) {
              var v13681 = characters$$3[i$$66];
              var v6937 = childrenValues[v13681];
              var v18767 = characters$$3[i$$66];
              var v13682 = result$$10[v18767];
              var v6938 = v13682[0];
              introspect(JAM.policy.p3) {
                v6937.push(v6938);
              }
              var v13683 = characters$$3[i$$66];
              var v6939 = sd$$3[v13683];
              var v18768 = ans$$15.stat;
              var v18769 = characters$$3[i$$66];
              var v13684 = v18768[v18769];
              var v6940 = v13684.sd;
              introspect(JAM.policy.p3) {
                v6939.push(v6940);
              }
              var v13685 = characters$$3[i$$66];
              var v6941 = ui$$3[v13685];
              var v18770 = ans$$15.stat;
              var v18771 = characters$$3[i$$66];
              var v13686 = v18770[v18771];
              var v6942 = v13686.u;
              introspect(JAM.policy.p3) {
                v6941.push(v6942);
              }
              var v13687 = characters$$3[i$$66];
              var v6943 = num$$8[v13687];
              var v18772 = ans$$15.stat;
              var v18773 = characters$$3[i$$66];
              var v13688 = v18772[v18773];
              var v6944 = v13688.n;
              introspect(JAM.policy.p3) {
                v6943.push(v6944);
              }
            }
            i$$66 = i$$66 + 1;
            var v13689 = characters$$3.length;
            v6946 = i$$66 < v13689;
          }
          return;
        }
        var childrenValues = {};
        var result$$10;
        var sd$$3 = {};
        var ui$$3 = {};
        var num$$8 = {};
        var ans$$15;
        var char$$12;
        var v6947 = node$$74.data;
        var v18774 = node$$74.data;
        var v13690 = v18774.characterConsistency;
        var v18775 = !v13690;
        if (v18775) {
          v13690 = {};
        }
        v6947.characterConsistency = v13690;
        var v6948 = node$$74.data;
        v6948.stat = {};
        i$$66 = 0;
        var v13691 = characters$$3.length;
        var v6952 = i$$66 < v13691;
        for (;v6952;) {
          char$$12 = characters$$3[i$$66];
          var v6949 = characters$$3[i$$66];
          introspect(JAM.policy.p2) {
            childrenValues[v6949] = [];
          }
          var v13692 = node$$74.data;
          var v6950 = v13692.stat;
          var v6951 = characters$$3[i$$66];
          introspect(JAM.policy.p2) {
            v6950[v6951] = {sd:undefined, u:undefined, n:undefined};
          }
          introspect(JAM.policy.p2) {
            sd$$3[char$$12] = [];
          }
          introspect(JAM.policy.p2) {
            ui$$3[char$$12] = [];
          }
          introspect(JAM.policy.p2) {
            num$$8[char$$12] = [];
          }
          i$$66 = i$$66 + 1;
          var v13693 = characters$$3.length;
          v6952 = i$$66 < v13693;
        }
        introspect(JAM.policy.p3) {
          node$$74.eachSubnode(v492);
        }
        var v18776 = node$$74.data;
        var v13694 = v18776.leaf;
        var v6972 = !v13694;
        if (v6972) {
          i$$66 = 0;
          var v13695 = characters$$3.length;
          var v6964 = i$$66 < v13695;
          for (;v6964;) {
            char$$12 = characters$$3[i$$66];
            var v18777 = childrenValues[char$$12];
            var v13696 = v18777.length;
            var v6962 = v13696 !== 0;
            if (v6962) {
              var v18778 = node$$74.data;
              var v13697 = v18778.stat;
              var v6953 = v13697[char$$12];
              var v13698 = num$$8[char$$12];
              var v13699 = ui$$3[char$$12];
              introspect(JAM.policy.p3) {
                var v31152 = that$$22.meanPop(v13698, v13699)
              }
              v6953.u = v31152;
              var v13700 = node$$74.data;
              var v6954 = v13700.character;
              var v26117 = node$$74.data;
              var v23780 = v26117.stat;
              var v18779 = v23780[char$$12];
              var v13701 = v18779.u;
              introspect(JAM.policy.p2) {
                v6954[char$$12] = [v13701];
              }
              var v18780 = node$$74.data;
              var v13702 = v18780.stat;
              var v6955 = v13702[char$$12];
              var v13703 = num$$8[char$$12];
              introspect(JAM.policy.p3) {
                var v31153 = that$$22.sum(v13703)
              }
              v6955.n = v31153;
              var v18781 = node$$74.data;
              var v13704 = v18781.stat;
              var v6956 = v13704[char$$12];
              var v13705 = num$$8[char$$12];
              var v13706 = sd$$3[char$$12];
              var v13707 = ui$$3[char$$12];
              var v26118 = node$$74.data;
              var v23781 = v26118.stat;
              var v23782 = characters$$3[i$$66];
              var v18782 = v23781[v23782];
              var v13708 = v18782.u;
              introspect(JAM.policy.p3) {
                var v31154 = that$$22.sdPop(v13705, v13706, v13707, v13708)
              }
              v6956.sd = v31154;
              var v23783 = node$$74.data;
              var v18783 = v23783.stat;
              var v13709 = v18783[char$$12];
              var v6957 = v13709.u;
              var v23784 = node$$74.data;
              var v18784 = v23784.stat;
              var v13710 = v18784[char$$12];
              var v6958 = v13710.sd;
              var v6959 = meanTree[char$$12];
              var v6960 = sdTree[char$$12];
              result$$10 = compareFunction(v6957, v6958, v6959, v6960);
            } else {
              var v13711 = node$$74.data;
              var v6961 = v13711.stat;
              introspect(JAM.policy.p2) {
                v6961[char$$12] = {sd:undefined, u:undefined, n:undefined};
              }
              result$$10 = true;
            }
            var v13712 = node$$74.data;
            var v6963 = v13712.characterConsistency;
            introspect(JAM.policy.p2) {
              v6963[char$$12] = result$$10;
            }
            i$$66 = i$$66 + 1;
            var v13713 = characters$$3.length;
            v6964 = i$$66 < v13713;
          }
        } else {
          i$$66 = 0;
          var v13714 = characters$$3.length;
          var v6971 = i$$66 < v13714;
          for (;v6971;) {
            var v6965 = node$$74.data;
            result$$10 = v6965.character;
            var v18785 = characters$$3[i$$66];
            var v13715 = result$$10[v18785];
            if (v13715) {
              var v27682 = characters$$3[i$$66];
              var v26119 = result$$10[v27682];
              var v23785 = v26119[0];
              var v18786 = typeof v23785;
              v13715 = v18786 !== "undefined";
            }
            var v6970 = v13715;
            if (v6970) {
              var v13716 = node$$74.data;
              var v6966 = v13716.stat;
              var v6967 = characters$$3[i$$66];
              var v23786 = characters$$3[i$$66];
              var v18787 = result$$10[v23786];
              var v13717 = v18787[0];
              introspect(JAM.policy.p2) {
                v6966[v6967] = {sd:0, u:v13717, n:1};
              }
            } else {
              var v13718 = node$$74.data;
              var v6968 = v13718.stat;
              var v6969 = characters$$3[i$$66];
              introspect(JAM.policy.p2) {
                v6968[v6969] = {sd:undefined, u:undefined, n:undefined};
              }
            }
            i$$66 = i$$66 + 1;
            var v13719 = characters$$3.length;
            v6971 = i$$66 < v13719;
          }
        }
        return node$$74.data;
      }
      function compareFunction(mean, sd$$2, mTree, sTree) {
        var v13720 = mean - mTree;
        introspect(JAM.policy.p3) {
          var v6973 = Math.abs(v13720)
        }
        var test1 = v6973 > sTree;
        var test2 = sd$$2 > sTree;
        var v6974 = test1 && test2;
        return !v6974;
      }
      var v6975 = this.config;
      var n$$37 = v6975.threshold;
      var v6976 = this.graph;
      var v6977 = this.root;
      introspect(JAM.policy.p3) {
        var root$$8 = v6976.getNode(v6977)
      }
      introspect(JAM.policy.p3) {
        var meanTree = this.meanAtTree(root$$8, characters$$3)
      }
      introspect(JAM.policy.p3) {
        var sdTree = this.sdAtTree(root$$8, characters$$3)
      }
      var i$$66;
      var that$$22 = this;
      var count$$4 = 0;
      $checkQuant(root$$8);
      return;
    }
    function v491(root$$7, characters$$2) {
      function v490(node$$73) {
        var v13721 = node$$73.data;
        var v6983 = v13721.leaf;
        if (v6983) {
          i = 0;
          var v13722 = characters$$2.length;
          var v6982 = i < v13722;
          for (;v6982;) {
            char$$11 = characters$$2[i];
            var v23787 = node$$73.data;
            var v18788 = v23787.character;
            var v13723 = v18788[char$$11];
            if (v13723) {
              var v28667 = node$$73.data;
              var v27683 = v28667.character;
              var v26120 = v27683[char$$11];
              var v23788 = v26120[0];
              var v18789 = typeof v23788;
              v13723 = v18789 !== "undefined";
            }
            var v6981 = v13723;
            if (v6981) {
              var v13724 = samples$$2[char$$11];
              var v6978 = v13724.value;
              var v23789 = node$$73.data;
              var v18790 = v23789.character;
              var v13725 = v18790[char$$11];
              var v6979 = v13725[0];
              introspect(JAM.policy.p3) {
                v6978.push(v6979);
              }
              var v13726 = samples$$2[char$$11];
              var v6980 = v13726.number;
              introspect(JAM.policy.p3) {
                v6980.push(1);
              }
            }
            i = i + 1;
            var v13727 = characters$$2.length;
            v6982 = i < v13727;
          }
        }
        return;
      }
      var samples$$2 = {};
      var char$$11;
      var result$$9 = {};
      i = 0;
      var v13728 = characters$$2.length;
      var v6985 = i < v13728;
      for (;v6985;) {
        var v6984 = characters$$2[i];
        introspect(JAM.policy.p2) {
          samples$$2[v6984] = {value:[], number:[]};
        }
        i = i + 1;
        var v13729 = characters$$2.length;
        v6985 = i < v13729;
      }
      introspect(JAM.policy.p3) {
        root$$7.eachSubgraph(v490);
      }
      i = 0;
      var v13730 = characters$$2.length;
      var v6988 = i < v13730;
      for (;v6988;) {
        char$$11 = characters$$2[i];
        var v6986 = result$$9;
        var v6987 = char$$11;
        var v18791 = samples$$2[char$$11];
        var v13731 = v18791.value;
        var v18792 = samples$$2[char$$11];
        var v13732 = v18792.number;
        introspect(JAM.policy.p3) {
          var v31155 = this.wtmean(v13731, v13732)
        }
        introspect(JAM.policy.p2) {
          v6986[v6987] = v31155;
        }
        i = i + 1;
        var v13733 = characters$$2.length;
        v6988 = i < v13733;
      }
      return result$$9;
    }
    function v489(root$$6, characters$$1) {
      function v488(node$$72) {
        var v13734 = node$$72.data;
        var v6993 = v13734.leaf;
        if (v6993) {
          i = 0;
          var v13735 = characters$$1.length;
          var v6992 = i < v13735;
          for (;v6992;) {
            char$$10 = characters$$1[i];
            var v23790 = node$$72.data;
            var v18793 = v23790.character;
            var v13736 = v18793[char$$10];
            if (v13736) {
              var v28668 = node$$72.data;
              var v27684 = v28668.character;
              var v26121 = v27684[char$$10];
              var v23791 = v26121[0];
              var v18794 = typeof v23791;
              v13736 = v18794 !== "undefined";
            }
            var v6991 = v13736;
            if (v6991) {
              var v6989 = samples$$1[char$$10];
              var v23792 = node$$72.data;
              var v18795 = v23792.character;
              var v13737 = v18795[char$$10];
              var v6990 = v13737[0];
              introspect(JAM.policy.p3) {
                v6989.push(v6990);
              }
            }
            i = i + 1;
            var v13738 = characters$$1.length;
            v6992 = i < v13738;
          }
        }
        return;
      }
      var samples$$1 = {};
      var char$$10;
      var result$$8 = {};
      i = 0;
      var v13739 = characters$$1.length;
      var v6995 = i < v13739;
      for (;v6995;) {
        var v6994 = characters$$1[i];
        introspect(JAM.policy.p2) {
          samples$$1[v6994] = [];
        }
        i = i + 1;
        var v13740 = characters$$1.length;
        v6995 = i < v13740;
      }
      introspect(JAM.policy.p3) {
        root$$6.eachSubgraph(v488);
      }
      i = 0;
      var v13741 = characters$$1.length;
      var v6998 = i < v13741;
      for (;v6998;) {
        char$$10 = characters$$1[i];
        var v6996 = result$$8;
        var v6997 = char$$10;
        var v13742 = samples$$1[char$$10];
        introspect(JAM.policy.p3) {
          var v31156 = this.variance(v13742)
        }
        introspect(JAM.policy.p2) {
          v6996[v6997] = v31156;
        }
        i = i + 1;
        var v13743 = characters$$1.length;
        v6998 = i < v13743;
      }
      return result$$8;
    }
    function v487(root$$5, characters) {
      function v486(node$$71) {
        var v13744 = node$$71.data;
        var v7003 = v13744.leaf;
        if (v7003) {
          i = 0;
          var v13745 = characters.length;
          var v7002 = i < v13745;
          for (;v7002;) {
            char$$9 = characters[i];
            var v23793 = node$$71.data;
            var v18796 = v23793.character;
            var v13746 = v18796[char$$9];
            if (v13746) {
              var v28669 = node$$71.data;
              var v27685 = v28669.character;
              var v26122 = v27685[char$$9];
              var v23794 = v26122[0];
              var v18797 = typeof v23794;
              v13746 = v18797 !== "undefined";
            }
            var v7001 = v13746;
            if (v7001) {
              var v6999 = samples[char$$9];
              var v23795 = node$$71.data;
              var v18798 = v23795.character;
              var v13747 = v18798[char$$9];
              var v7000 = v13747[0];
              introspect(JAM.policy.p3) {
                v6999.push(v7000);
              }
            }
            i = i + 1;
            var v13748 = characters.length;
            v7002 = i < v13748;
          }
        }
        return;
      }
      var samples = {};
      var char$$9;
      var result$$7 = {};
      i = 0;
      var v13749 = characters.length;
      var v7005 = i < v13749;
      for (;v7005;) {
        var v7004 = characters[i];
        introspect(JAM.policy.p2) {
          samples[v7004] = [];
        }
        i = i + 1;
        var v13750 = characters.length;
        v7005 = i < v13750;
      }
      introspect(JAM.policy.p3) {
        root$$5.eachSubgraph(v486);
      }
      i = 0;
      var v13751 = characters.length;
      var v7008 = i < v13751;
      for (;v7008;) {
        char$$9 = characters[i];
        var v7006 = result$$7;
        var v7007 = char$$9;
        var v13752 = samples[char$$9];
        introspect(JAM.policy.p3) {
          var v31157 = this.sd(v13752)
        }
        introspect(JAM.policy.p2) {
          v7006[v7007] = v31157;
        }
        i = i + 1;
        var v13753 = characters.length;
        v7008 = i < v13753;
      }
      return result$$7;
    }
    function v485(firstCharacter) {
      var v7009 = firstCharacter;
      var v13755 = !v7009;
      if (v13755) {
        var v13754 = this.config;
        v7009 = v13754.firstCharacter;
      }
      firstCharacter = v7009;
      var v7010 = !firstCharacter;
      if (v7010) {
        return;
      }
      var speciesHash = this.character;
      var speciesName;
      var char$$8;
      var i$$65;
      var v13756 = this.graph;
      var v7020 = v13756.nodes;
      for (i$$65 in v7020) {
        var v18799 = this.graph;
        var v13757 = v18799.nodes;
        introspect(JAM.policy.p3) {
          var v7019 = v13757.hasOwnProperty(i$$65)
        }
        if (v7019) {
          var v13758 = this.graph;
          var v7011 = v13758.nodes;
          var node$$70 = v7011[i$$65];
          var v7012 = node$$70.data;
          v7012.character = {};
          var v13759 = node$$70.data;
          var v7018 = v13759.leaf;
          if (v7018) {
            for (key in speciesHash) {
              introspect(JAM.policy.p3) {
                var v7017 = speciesHash.hasOwnProperty(key)
              }
              if (v7017) {
                var v7013 = speciesHash[key];
                var speciesCharacter = v7013[firstCharacter];
                var v13760 = node$$70.name;
                var v7016 = v13760 === key;
                if (v7016) {
                  var v7014 = node$$70.data;
                  v7014.colorCharacter = speciesCharacter;
                  var v7015 = node$$70.data;
                  v7015.character = speciesHash[key];
                  break;
                }
              }
            }
          }
        }
      }
      return;
    }
    function v484(node$$67, characterList) {
      function downPass(node$$68) {
        function v479(snode) {
          char$$7 = downPass(snode);
          i$$63 = 0;
          var v13761 = characterList.length;
          var v7024 = i$$63 < v13761;
          for (;v7024;) {
            key$$24 = characterList[i$$63];
            var v7021 = childrenChar[key$$24];
            var v13762 = !v7021;
            if (v13762) {
              v7021 = [];
            }
            introspect(JAM.policy.p2) {
              childrenChar[key$$24] = v7021;
            }
            var v7022 = childrenChar[key$$24];
            var v7023 = char$$7[key$$24];
            introspect(JAM.policy.p3) {
              v7022.push(v7023);
            }
            i$$63 = i$$63 + 1;
            var v13763 = characterList.length;
            v7024 = i$$63 < v13763;
          }
          return;
        }
        var childrenChar = {};
        var key$$24;
        var i$$63;
        var j$$7;
        introspect(JAM.policy.p3) {
          node$$68.eachSubnode(v479);
        }
        var v13764 = node$$68.data;
        var v7026 = v13764.leaf;
        if (v7026) {
          var v13765 = node$$68.data;
          var v7025 = v13765.character;
          var v13766 = !v7025;
          if (v13766) {
            v7025 = [];
          }
          return v7025;
        }
        var parentChar = {};
        j$$7 = 0;
        var v13767 = characterList.length;
        var v7034 = j$$7 < v13767;
        for (;v7034;) {
          key$$24 = characterList[j$$7];
          var v13768 = childrenChar[key$$24];
          var v7027 = v13768[0];
          var v13769 = !v7027;
          if (v13769) {
            v7027 = [];
          }
          var intersection = v7027;
          i$$63 = 0;
          var v18800 = childrenChar[key$$24];
          var v13770 = v18800.length;
          var v7029 = i$$63 < v13770;
          for (;v7029;) {
            var v13771 = childrenChar[key$$24];
            var v7028 = v13771[i$$63];
            var v13772 = !v7028;
            if (v13772) {
              v7028 = [];
            }
            char$$7 = v7028;
            introspect(JAM.policy.p3) {
              intersection = that$$21.intersect(intersection, char$$7);
            }
            i$$63 = i$$63 + 1;
            var v18801 = childrenChar[key$$24];
            var v13773 = v18801.length;
            v7029 = i$$63 < v13773;
          }
          var v13774 = intersection.length;
          var v7033 = v13774 > 0;
          if (v7033) {
            introspect(JAM.policy.p2) {
              parentChar[key$$24] = intersection;
            }
          } else {
            var v13775 = childrenChar[key$$24];
            var v7030 = v13775[0];
            var v13776 = !v7030;
            if (v13776) {
              v7030 = [];
            }
            char$$7 = v7030;
            i$$63 = 1;
            var v18802 = childrenChar[key$$24];
            var v13777 = v18802.length;
            var v7032 = i$$63 < v13777;
            for (;v7032;) {
              var v13778 = childrenChar[key$$24];
              var v7031 = v13778[i$$63];
              introspect(JAM.policy.p3) {
                char$$7 = that$$21.union(char$$7, v7031);
              }
              i$$63 = i$$63 + 1;
              var v18803 = childrenChar[key$$24];
              var v13779 = v18803.length;
              v7032 = i$$63 < v13779;
            }
            introspect(JAM.policy.p2) {
              parentChar[key$$24] = char$$7;
            }
          }
          j$$7 = j$$7 + 1;
          var v13780 = characterList.length;
          v7034 = j$$7 < v13780;
        }
        var v7035 = node$$68.data;
        var v18804 = that$$21.config;
        var v13781 = v18804.firstCharacter;
        v7035.colorCharacter = parentChar[v13781];
        var v7036 = node$$68.data;
        return v7036.character = parentChar;
      }
      function upPass(node$$69) {
        function v483(n$$36) {
          $upPass(n$$36);
          return;
        }
        function $upPass(n$$35) {
          function v482(sn) {
            $upPass(sn);
            return;
          }
          function v481(subn$$4) {
            var v18805 = subn$$4.data;
            var v13782 = v18805.character;
            var v7037 = v13782[key$$25];
            introspect(JAM.policy.p3) {
              cUnion = that$$21.union(cUnion, v7037);
            }
            return;
          }
          function v480(subn$$3) {
            var v7039 = !cIntersect;
            if (v7039) {
              var v13783 = subn$$3.data;
              var v7038 = v13783.character;
              cIntersect = v7038[key$$25];
              return;
            }
            var v18806 = subn$$3.data;
            var v13784 = v18806.character;
            var v7040 = v13784[key$$25];
            introspect(JAM.policy.p3) {
              cIntersect = that$$21.intersect(cIntersect, v7040);
            }
            return;
          }
          var v13785 = n$$35.data;
          var v7041 = v13785.leaf;
          if (v7041) {
            return;
          }
          var key$$25;
          var v7042 = n$$35.data;
          var morphData = v7042.character;
          introspect(JAM.policy.p3) {
            var v7043 = n$$35.getParents()
          }
          var p$$21 = v7043[0];
          var fp;
          var i$$64;
          for (key$$25 in morphData) {
            introspect(JAM.policy.p3) {
              var v7050 = morphData.hasOwnProperty(key$$25)
            }
            if (v7050) {
              var sp = morphData[key$$25];
              var v13786 = p$$21.data;
              var v7044 = v13786.character;
              var fa = v7044[key$$25];
              introspect(JAM.policy.p3) {
                fp = that$$21.intersect(sp, fa);
              }
              var v13787 = fp.length;
              var v13788 = fa.length;
              var v7048 = v13787 !== v13788;
              if (v7048) {
                var cIntersect;
                introspect(JAM.policy.p3) {
                  n$$35.eachSubnode(v480);
                }
                var v13789 = cIntersect;
                if (v13789) {
                  var v18807 = cIntersect.length;
                  v13789 = v18807 !== 0;
                }
                var v7047 = v13789;
                if (v7047) {
                  var cUnion = [];
                  var aIntersect;
                  introspect(JAM.policy.p3) {
                    n$$35.eachSubnode(v481);
                  }
                  introspect(JAM.policy.p3) {
                    aIntersect = that$$21.intersect(cUnion, fa);
                  }
                  var v18808 = n$$35.data;
                  var v13790 = v18808.character;
                  var v7045 = v13790[key$$25];
                  introspect(JAM.policy.p3) {
                    fp = that$$21.union(aIntersect, v7045);
                  }
                } else {
                  var v18809 = n$$35.data;
                  var v13791 = v18809.character;
                  var v7046 = v13791[key$$25];
                  introspect(JAM.policy.p3) {
                    fp = that$$21.union(v7046, fa);
                  }
                }
              }
              var v13792 = n$$35.data;
              var v7049 = v13792.character;
              introspect(JAM.policy.p2) {
                v7049[key$$25] = fp;
              }
            }
          }
          introspect(JAM.policy.p3) {
            n$$35.eachSubnode(v482);
          }
          var v7051 = n$$35.data;
          var v18810 = n$$35.data;
          var v13793 = v18810.character;
          var v18811 = that$$21.config;
          var v13794 = v18811.firstCharacter;
          v7051.colorCharacter = v13793[v13794];
          return;
        }
        introspect(JAM.policy.p3) {
          node$$69.eachSubnode(v483);
        }
        return;
      }
      var v13795 = characterList;
      if (v13795) {
        var v18812 = characterList.length;
        v13795 = v18812 != 0;
      }
      var v7052 = v13795;
      if (v7052) {
        var i$$62;
        var char$$7;
        var j$$6;
        var that$$21 = this;
        var result$$6;
        downPass(node$$67);
        upPass(node$$67);
      }
      return;
    }
    function v478(node$$66) {
      function v477(elem$$56) {
        elem$$56.exist = false;
        elem$$56.drawn = false;
        var v18813 = elem$$56.data;
        var v13796 = v18813.leaf;
        var v7055 = !v13796;
        if (v7055) {
          var v7053 = elem$$56.data;
          v7053.$type = "circle";
        } else {
          var v7054 = elem$$56.data;
          v7054.$type = "none";
        }
        elem$$56.collapsed = true;
        return;
      }
      function v476(elem$$55) {
        var v13797 = elem$$55.exist;
        var v7056 = !v13797;
        if (v7056) {
          elem$$55.exist = true;
          elem$$55.drawn = true;
        }
        var v18814 = elem$$55.data;
        var v13798 = v18814.leaf;
        var v7059 = !v13798;
        if (v7059) {
          var v7057 = elem$$55.data;
          v7057.$type = "circle";
        } else {
          var v7058 = elem$$55.data;
          v7058.$type = "none";
        }
        elem$$55.collapsed = false;
        var v13799 = elem$$55._depth;
        var v7061 = level$$13 < v13799;
        if (v7061) {
          var v7060 = elem$$55._depth;
          level$$13 = v7060 + 1;
        }
        return;
      }
      var level$$13 = 0;
      var v7068 = node$$66.collapsed;
      if (v7068) {
        introspect(JAM.policy.p3) {
          node$$66.eachSubgraph(v476);
        }
        var v18815 = node$$66.data;
        var v13800 = v18815.leaf;
        var v7064 = !v13800;
        if (v7064) {
          var v7062 = node$$66.data;
          v7062.$type = "circle";
        } else {
          var v7063 = node$$66.data;
          v7063.$type = "none";
        }
      } else {
        introspect(JAM.policy.p3) {
          node$$66.eachSubgraph(v477);
        }
        node$$66.exist = true;
        node$$66.drawn = true;
        level$$13 = false;
        var v18816 = node$$66.data;
        var v13801 = v18816.leaf;
        var v7067 = !v13801;
        if (v7067) {
          var v7065 = node$$66.data;
          v7065.$type = "triangle";
        } else {
          var v7066 = node$$66.data;
          v7066.$type = "none";
        }
      }
      return level$$13;
    }
    function v475(node$$65) {
      var v18817 = node$$65.data;
      var v13802 = v18817.$type;
      var v7069 = v13802 === "triangle";
      if (v7069) {
        node$$65.collapsed = true;
      } else {
        node$$65.collapsed = false;
      }
      return;
    }
    function v474(setA$$1, setB$$1) {
      setA$$1 = setA$$1 || [];
      setB$$1 = setB$$1 || [];
      var i$$61;
      var j$$5;
      var sets = [setA$$1, setB$$1];
      var char$$6;
      var union = {};
      i$$61 = 0;
      var v13803 = sets.length;
      var v7072 = i$$61 < v13803;
      for (;v7072;) {
        char$$6 = sets[i$$61];
        j$$5 = 0;
        var v13804 = char$$6.length;
        var v7071 = j$$5 < v13804;
        for (;v7071;) {
          var v7070 = char$$6[j$$5];
          introspect(JAM.policy.p2) {
            union[v7070] = char$$6[j$$5];
          }
          j$$5 = j$$5 + 1;
          var v13805 = char$$6.length;
          v7071 = j$$5 < v13805;
        }
        i$$61 = i$$61 + 1;
        var v13806 = sets.length;
        v7072 = i$$61 < v13806;
      }
      char$$6 = [];
      for (i$$61 in union) {
        introspect(JAM.policy.p3) {
          var v7074 = union.hasOwnProperty(i$$61)
        }
        if (v7074) {
          var v7073 = union[i$$61];
          introspect(JAM.policy.p3) {
            char$$6.push(v7073);
          }
        }
      }
      return char$$6;
    }
    function v473(setA, setB) {
      var v23796 = !setA;
      var v26123 = !v23796;
      if (v26123) {
        v23796 = !setB;
      }
      var v18818 = v23796;
      var v23798 = !v18818;
      if (v23798) {
        var v23797 = setA.length;
        v18818 = v23797 === 0;
      }
      var v13807 = v18818;
      var v18820 = !v13807;
      if (v18820) {
        var v18819 = setB.length;
        v13807 = v18819 === 0;
      }
      var v7075 = v13807;
      if (v7075) {
        return [];
      }
      var hashA = {};
      var i$$60;
      var result$$5 = [];
      i$$60 = 0;
      var v13808 = setA.length;
      var v7077 = i$$60 < v13808;
      for (;v7077;) {
        var v7076 = setA[i$$60];
        introspect(JAM.policy.p2) {
          hashA[v7076] = true;
        }
        i$$60 = i$$60 + 1;
        var v13809 = setA.length;
        v7077 = i$$60 < v13809;
      }
      i$$60 = 0;
      var v13810 = setB.length;
      var v7080 = i$$60 < v13810;
      for (;v7080;) {
        var v13811 = setB[i$$60];
        var v7079 = hashA[v13811];
        if (v7079) {
          var v7078 = setB[i$$60];
          introspect(JAM.policy.p3) {
            result$$5.push(v7078);
          }
        }
        i$$60 = i$$60 + 1;
        var v13812 = setB.length;
        v7080 = i$$60 < v13812;
      }
      return result$$5;
    }
    function v472(data$$25, testcase) {
      var v13813 = !data$$25;
      var v18822 = !v13813;
      if (v18822) {
        var v18821 = data$$25.length;
        v13813 = v18821 === 0;
      }
      var v7081 = v13813;
      if (v7081) {
        return;
      }
      switch(testcase) {
        case "quant":
          introspect(JAM.policy.p3) {
            return this.isQuant(data$$25);
          }
        ;
        case "quali":
          introspect(JAM.policy.p3) {
            return this.isQuali(data$$25);
          }
        ;
      }
      return;
    }
    function v471(data$$24) {
      var v18823 = data$$24[0];
      var v13814 = typeof v18823;
      var v7082 = v13814 === "string";
      if (v7082) {
        return true;
      } else {
        return false;
      }
      return;
    }
    function v470(data$$23) {
      var v18824 = data$$23[0];
      var v13815 = typeof v18824;
      var v7083 = v13815 === "number";
      if (v7083) {
        return true;
      } else {
        return false;
      }
      return;
    }
    function v469(ni, ui$$2) {
      var v18825 = !ni;
      var v23799 = !v18825;
      if (v23799) {
        v18825 = !ui$$2;
      }
      var v13816 = v18825;
      var v18828 = !v13816;
      if (v18828) {
        var v18826 = ni.length;
        var v18827 = ui$$2.length;
        v13816 = v18826 != v18827;
      }
      var v7084 = v13816;
      if (v7084) {
        return;
      }
      introspect(JAM.policy.p3) {
        var v13817 = this.multiply(ni, ui$$2)
      }
      introspect(JAM.policy.p3) {
        var v7085 = this.sum(v13817)
      }
      introspect(JAM.policy.p3) {
        var v7086 = this.sum(ni)
      }
      return v7085 / v7086;
    }
    function v468(num$$7, sd$$1, ui$$1, up$$1) {
      var v26124 = !num$$7;
      var v27686 = !v26124;
      if (v27686) {
        v26124 = !sd$$1;
      }
      var v23800 = v26124;
      var v26125 = !v23800;
      if (v26125) {
        v23800 = !ui$$1;
      }
      var v18829 = v23800;
      var v23803 = !v18829;
      if (v23803) {
        var v23801 = num$$7.length;
        var v23802 = sd$$1.length;
        v18829 = v23801 !== v23802;
      }
      var v13818 = v18829;
      var v18832 = !v13818;
      if (v18832) {
        var v18830 = sd$$1.length;
        var v18831 = ui$$1.length;
        v13818 = v18830 !== v18831;
      }
      var v7087 = v13818;
      if (v7087) {
        return;
      }
      introspect(JAM.policy.p3) {
        var v7088 = this.variancePop(num$$7, sd$$1, ui$$1, up$$1)
      }
      introspect(JAM.policy.p3) {
        return Math.sqrt(v7088);
      }
    }
    function v467(num$$6, sd, ui, up) {
      function v466(elem$$54) {
        return elem$$54 - 1;
      }
      var v26126 = !num$$6;
      var v27687 = !v26126;
      if (v27687) {
        v26126 = !sd;
      }
      var v23804 = v26126;
      var v26127 = !v23804;
      if (v26127) {
        v23804 = !ui;
      }
      var v18833 = v23804;
      var v23807 = !v18833;
      if (v23807) {
        var v23805 = num$$6.length;
        var v23806 = sd.length;
        v18833 = v23805 !== v23806;
      }
      var v13819 = v18833;
      var v18836 = !v13819;
      if (v18836) {
        var v18834 = sd.length;
        var v18835 = ui.length;
        v13819 = v18834 !== v18835;
      }
      var v7089 = v13819;
      if (v7089) {
        return;
      }
      var v13820 = num$$6.length;
      var v7090 = v13820 === 1;
      if (v7090) {
        return 0;
      }
      introspect(JAM.policy.p3) {
        var sumNum = this.sum(num$$6)
      }
      var sqUp = up * up;
      var lessNum;
      var sqSd;
      var sqUi;
      var v7091 = $jit.util;
      introspect(JAM.policy.p3) {
        lessNum = v7091.map(num$$6, v466);
      }
      introspect(JAM.policy.p3) {
        sqSd = this.square(sd);
      }
      introspect(JAM.policy.p3) {
        sqUi = this.square(ui);
      }
      introspect(JAM.policy.p3) {
        var v23808 = this.multiply(lessNum, sqSd)
      }
      introspect(JAM.policy.p3) {
        var v18837 = this.sum(v23808)
      }
      introspect(JAM.policy.p3) {
        var v23809 = this.multiply(num$$6, sqUi)
      }
      introspect(JAM.policy.p3) {
        var v18838 = this.sum(v23809)
      }
      var v13821 = v18837 + v18838;
      var v13822 = sumNum * sqUp;
      var v7092 = v13821 - v13822;
      var v7093 = sumNum - 1;
      return v7092 / v7093;
    }
    function v465(num1, num2) {
      var v18839 = !num1;
      var v23810 = !v18839;
      if (v23810) {
        v18839 = !num2;
      }
      var v13823 = v18839;
      var v18842 = !v13823;
      if (v18842) {
        var v18840 = num1.length;
        var v18841 = num2.length;
        v13823 = v18840 !== v18841;
      }
      var v7094 = v13823;
      if (v7094) {
        return;
      }
      var i$$59;
      var result$$4 = [];
      i$$59 = 0;
      var v13824 = num1.length;
      var v7096 = i$$59 < v13824;
      for (;v7096;) {
        var v13825 = num1[i$$59];
        var v13826 = num2[i$$59];
        var v7095 = v13825 * v13826;
        introspect(JAM.policy.p3) {
          result$$4.push(v7095);
        }
        i$$59 = i$$59 + 1;
        var v13827 = num1.length;
        v7096 = i$$59 < v13827;
      }
      return result$$4;
    }
    function v464(num$$5) {
      function v463(elem$$53) {
        return elem$$53 * elem$$53;
      }
      var v7097 = $jit.util;
      introspect(JAM.policy.p3) {
        return v7097.map(num$$5, v463);
      }
    }
    function v462(sample$$3) {
      var v13828 = !sample$$3;
      var v18844 = !v13828;
      if (v18844) {
        var v18843 = sample$$3.length;
        v13828 = v18843 === 0;
      }
      var v7098 = v13828;
      if (v7098) {
        return;
      }
      introspect(JAM.policy.p3) {
        var v7099 = this.variance(sample$$3)
      }
      introspect(JAM.policy.p3) {
        return Math.sqrt(v7099);
      }
    }
    function v461(sample$$2) {
      function v460(acc$$1, value$$40) {
        var diff$$3 = value$$40 - avg;
        var v7100 = diff$$3 * diff$$3;
        return acc$$1 + v7100;
      }
      var v13829 = !sample$$2;
      var v18846 = !v13829;
      if (v18846) {
        var v18845 = sample$$2.length;
        v13829 = v18845 === 0;
      }
      var v7101 = v13829;
      if (v7101) {
        return;
      }
      var avg;
      var num$$4;
      var total;
      introspect(JAM.policy.p3) {
        avg = this.mean(sample$$2);
      }
      num$$4 = sample$$2.length;
      introspect(JAM.policy.p3) {
        total = $$$1.reduce(sample$$2, v460, 0);
      }
      return total / num$$4;
    }
    function v459(sample$$1, number$$2) {
      var v26128 = !sample$$1;
      var v27689 = !v26128;
      if (v27689) {
        var v27688 = sample$$1.length;
        v26128 = v27688 === 0;
      }
      var v23811 = v26128;
      var v26129 = !v23811;
      if (v26129) {
        v23811 = !number$$2;
      }
      var v18847 = v23811;
      var v23813 = !v18847;
      if (v23813) {
        var v23812 = number$$2.length;
        v18847 = v23812 === 0;
      }
      var v13830 = v18847;
      var v18850 = !v13830;
      if (v18850) {
        var v18848 = number$$2.length;
        var v18849 = sample$$1.length;
        v13830 = v18848 !== v18849;
      }
      var v7102 = v13830;
      if (v7102) {
        return;
      }
      var i$$58;
      var sum$$1 = 0;
      var count$$3 = 0;
      i$$58 = 0;
      var v13831 = number$$2.length;
      var v7103 = i$$58 < v13831;
      for (;v7103;) {
        var v18851 = number$$2[i$$58];
        var v18852 = sample$$1[i$$58];
        var v13832 = v18851 * v18852;
        sum$$1 = sum$$1 + v13832;
        var v13833 = number$$2[i$$58];
        count$$3 = count$$3 + v13833;
        i$$58 = i$$58 + 1;
        var v13834 = number$$2.length;
        v7103 = i$$58 < v13834;
      }
      return sum$$1 / count$$3;
    }
    function v458(sample) {
      var v13835 = !sample;
      var v18854 = !v13835;
      if (v18854) {
        var v18853 = sample.length;
        v13835 = v18853 === 0;
      }
      var v7104 = v13835;
      if (v7104) {
        return;
      }
      introspect(JAM.policy.p3) {
        var v7105 = this.sum(sample)
      }
      var v7106 = sample.length;
      return v7105 / v7106;
    }
    function v457(array$$13) {
      function v456(acc, value$$39) {
        return acc + value$$39;
      }
      var v13836 = !array$$13;
      var v18856 = !v13836;
      if (v18856) {
        var v18855 = array$$13.length;
        v13836 = v18855 === 0;
      }
      var v7107 = v13836;
      if (v7107) {
        return;
      }
      introspect(JAM.policy.p3) {
        return $$$1.reduce(array$$13, v456, 0);
      }
    }
    function v455(obj$$30) {
      var v13837 = typeof obj$$30;
      var v7108 = v13837 === "undefined";
      if (v7108) {
        return false;
      }
      var i$$57;
      for (i$$57 in obj$$30) {
        introspect(JAM.policy.p3) {
          var v7109 = obj$$30.hasOwnProperty(i$$57)
        }
        if (v7109) {
          return true;
        }
      }
      return false;
    }
    function v454(controller$$4) {
      var $Phylo = $jit.Phylo;
      var v7110 = {type:"rectangle"};
      var config$$7 = {levelsToShow:2, levelDistance:30, constrained:true, Node:v7110, duration:700, offsetX:0, offsetY:0};
      var v7111 = Options("Canvas", "Fx", "Tree", "PhyloJive", "Node", "Edge", "Controller", "Tips", "NodeStyles", "Events", "Navigation", "Label");
      introspect(JAM.policy.p3) {
        var v31158 = $$$1.merge(v7111, config$$7, controller$$4)
      }
      this.controller = this.config = v31158;
      var canvasConfig = this.config;
      var v7117 = canvasConfig.useCanvas;
      if (v7117) {
        this.canvas = canvasConfig.useCanvas;
        var v7112 = this.config;
        var v18857 = this.canvas;
        var v13838 = v18857.id;
        v7112.labelContainer = v13838 + "-label";
      } else {
        var v7115 = canvasConfig.background;
        if (v7115) {
          var v7113 = {type:"Circles"};
          var v7114 = canvasConfig.background;
          introspect(JAM.policy.p3) {
            var v31159 = $$$1.merge(v7113, v7114)
          }
          canvasConfig.background = v31159;
        }
        var v31160 = new Canvas(this, canvasConfig);
        this.canvas = v31160;
        var v7116 = this.config;
        var v18858;
        var v27690 = canvasConfig.injectInto;
        var v26130 = typeof v27690;
        var v23815 = v26130 === "string";
        if (v23815) {
          v18858 = canvasConfig.injectInto;
        } else {
          var v23814 = canvasConfig.injectInto;
          v18858 = v23814.id;
        }
        var v13839 = v18858;
        v7116.labelContainer = v13839 + "-label";
      }
      this.graphOptions = {"klass":Complex};
      var v7118 = this.graphOptions;
      var v13840 = this.config;
      var v7119 = v13840.Node;
      var v13841 = this.config;
      var v7120 = v13841.Edge;
      var v31161 = new Graph(v7118, v7119, v7120);
      this.graph = v31161;
      var v13842 = $Phylo.Label;
      var v18859 = canvasConfig.Label;
      var v13843 = v18859.type;
      var v7121 = v13842[v13843];
      var v31162 = new v7121(this);
      this.labels = v31162;
      var v7122 = $Phylo.Plot;
      var v31163 = new v7122(this, $Phylo);
      this.fx = v31163;
      var v7123 = $Phylo.Op;
      var v31164 = new v7123(this);
      this.op = v31164;
      var v7124 = $Phylo.Group;
      var v31165 = new v7124(this);
      this.group = v31165;
      var v7125 = $Phylo.Geom;
      var v31166 = new v7125(this);
      this.geom = v31166;
      this.clickedNode = null;
      introspect(JAM.policy.p3) {
        this.initializeExtras();
      }
      return;
    }
    function getNodesToHide(node$$63) {
      function v451(n$$33) {
        var v13844 = n$$33.exist;
        if (v13844) {
          var v18860 = n$$33.selected;
          v13844 = !v18860;
        }
        var v7126 = v13844;
        if (v7126) {
          introspect(JAM.policy.p3) {
            nodeArray.push(n$$33);
          }
        }
        return;
      }
      function v450(n$$32) {
        var v13845 = n$$32.exist;
        if (v13845) {
          var v18861 = n$$32.selected;
          v13845 = !v18861;
        }
        var v7129 = v13845;
        if (v7129) {
          var v13846 = node$$63.id;
          introspect(JAM.policy.p3) {
            var v7128 = n$$32.isDescendantOf(v13846)
          }
          if (v7128) {
            var v13847 = n$$32._depth;
            var v7127 = v13847 <= level$$12;
            if (v7127) {
              introspect(JAM.policy.p3) {
                nodeArray.push(n$$32);
              }
            }
          } else {
            introspect(JAM.policy.p3) {
              nodeArray.push(n$$32);
            }
          }
        }
        return;
      }
      var v7130 = node$$63;
      var v13848 = !v7130;
      if (v13848) {
        v7130 = this.clickedNode;
      }
      node$$63 = v7130;
      var v18862 = this.config;
      var v13849 = v18862.constrained;
      var v7131 = !v13849;
      if (v7131) {
        return [];
      }
      var i$$56;
      var Geom = this.geom;
      var graph$$18 = this.graph;
      var canvas$$31 = this.canvas;
      var level$$12 = node$$63._depth;
      var nodeArray = [];
      introspect(JAM.policy.p3) {
        graph$$18.eachNode(v450);
      }
      introspect(JAM.policy.p3) {
        var leafLevel = Geom.getRightLevelToShow(node$$63, canvas$$31)
      }
      introspect(JAM.policy.p3) {
        node$$63.eachLevel(leafLevel, leafLevel, v451);
      }
      i$$56 = 0;
      var v13850 = nodesInPath.length;
      var v7135 = i$$56 < v13850;
      for (;v7135;) {
        var v7132 = this.graph;
        var v7133 = nodesInPath[i$$56];
        introspect(JAM.policy.p3) {
          var n$$31 = v7132.getNode(v7133)
        }
        var v18863 = node$$63.id;
        introspect(JAM.policy.p3) {
          var v13851 = n$$31.isDescendantOf(v18863)
        }
        var v7134 = !v13851;
        if (v7134) {
          introspect(JAM.policy.p3) {
            nodeArray.push(n$$31);
          }
        }
        i$$56 = i$$56 + 1;
        var v13852 = nodesInPath.length;
        v7135 = i$$56 < v13852;
      }
      return nodeArray;
    }
    function getNodesToShow(node$$64) {
      function v453(n$$34) {
        function v452(ch$$11) {
          var v7136 = ch$$11.exist;
          if (v7136) {
            var v13853 = ch$$11.drawn;
            v7136 = !v13853;
          }
          return v7136;
        }
        var v18864 = config$$6.multitree;
        if (v18864) {
          var v26131 = n$$34.data;
          var v23816 = "$orn" in v26131;
          v18864 = !v23816;
        }
        var v13854 = v18864;
        if (v13854) {
          introspect(JAM.policy.p3) {
            v13854 = n$$34.anySubnode(v452);
          }
        }
        var v7138 = v13854;
        if (v7138) {
          introspect(JAM.policy.p3) {
            nodeArray$$1.push(n$$34);
          }
        } else {
          var v13855 = n$$34.drawn;
          if (v13855) {
            introspect(JAM.policy.p3) {
              var v18865 = n$$34.anySubnode("drawn")
            }
            v13855 = !v18865;
          }
          var v7137 = v13855;
          if (v7137) {
            introspect(JAM.policy.p3) {
              nodeArray$$1.push(n$$34);
            }
          }
        }
        return;
      }
      var nodeArray$$1 = [];
      var config$$6 = this.config;
      var v7139 = node$$64;
      var v13856 = !v7139;
      if (v13856) {
        v7139 = this.clickedNode;
      }
      node$$64 = v7139;
      var v7140 = this.clickedNode;
      var v7141 = config$$6.levelsToShow;
      introspect(JAM.policy.p3) {
        v7140.eachLevel(0, v7141, v453);
      }
      return nodeArray$$1;
    }
    var nodesInPath = [];
    var v18866 = Layouts.PhyloJive;
    var v13857 = [Loader, Extras, v18866];
    var v7142 = {Implements:v13857, initialize:v454, hasProperty:v455, sum:v457, mean:v458, wtmean:v459, variance:v461, sd:v462, square:v464, multiply:v465, variancePop:v467, sdPop:v468, meanPop:v469, isQuant:v470, isQuali:v471, characterType:v472, intersect:v473, union:v474, setCollapsed:v475, nodesExpCol:v478, fitchParsimony:v484, setCharacter:v485, sdAtTree:v487, varianceAtTree:v489, meanAtTree:v491, checkQuant:v493, checkQuali:v495, quantParsimony:v497, listCharacters:v498, findAllCharTypes:v500, 
    findQuantMinMax:v502, findQuantRange:v503, colorCharacter:v506, findDistinctCharacterStates:v507, createLegend:v508, findIndex:v509, plot:v510, fitScreen:v511, zoom:v513, switchPosition:v515, switchAlignment:v516, addNodeInPath:v517, clearNodesInPath:v518, refresh:v519, reposition:v521, requestNodes:v523, contract:v524, move:v525, expand:v526, selectPath:v529, setRoot:v531, addSubtree:v532, removeSubtree:v534, select:v537, onClick:v538};
    return new Class(v7142);
  }
  function v449() {
    function v448(node$$61, leaves$$1) {
      function v447(node$$62) {
        var v13858 = leaves$$1;
        introspect(JAM.policy.p3) {
          var v13859 = that$$20.computeLeaves(node$$62, 0)
        }
        leaves$$1 = v13858 + v13859;
        return;
      }
      var that$$20 = this;
      introspect(JAM.policy.p3) {
        node$$61.eachSubnode(v447);
      }
      var v13860 = node$$61.data;
      var v7144 = v13860.leaf;
      if (v7144) {
        var v7143 = node$$61.data;
        return v7143.leaves = 1;
      }
      var v7145 = node$$61.data;
      return v7145.leaves = leaves$$1;
    }
    function v446(node$$60, prop$$34) {
      function v445(orn$$3) {
        var v7146 = that$$19.graph;
        var v7147 = that$$19.config;
        design(v7146, node$$60, prop$$34, v7147, orn$$3, prop$$34);
        var v7148 = ["x", "y"];
        var v18867 = orn$$3 == "left";
        var v23817 = !v18867;
        if (v23817) {
          v18867 = orn$$3 == "right";
        }
        var v13861 = v18867;
        var v7149 = +v13861;
        var i$$55 = v7148[v7149];
        var prev;
        var v7150 = !prev;
        if (v7150) {
          prev = node$$60;
        }
        return;
      }
      var config$$5 = this.config;
      var multitree$$2 = config$$5.multitree;
      var align$$1 = config$$5.align;
      var v7151 = align$$1 !== "center";
      if (v7151) {
        v7151 = config$$5.indent;
      }
      var indent = v7151;
      var orn$$2 = config$$5.orientation;
      var v7152;
      if (multitree$$2) {
        v7152 = ["top", "right", "bottom", "left"];
      } else {
        v7152 = [orn$$2];
      }
      var orns = v7152;
      var that$$19 = this;
      introspect(JAM.policy.p3) {
        $$$1.each(orns, v445);
      }
      return;
    }
    function v444(property, computeLevels) {
      var prop$$33 = property || "start";
      var v7153 = this.graph;
      var v7154 = this.root;
      introspect(JAM.policy.p3) {
        var node$$59 = v7153.getNode(v7154)
      }
      var v7155 = {"drawn":true, "exist":true, "selected":true};
      introspect(JAM.policy.p3) {
        $$$1.extend(node$$59, v7155);
      }
      var v7156 = this.graph;
      var v7157 = this.config;
      introspect(JAM.policy.p3) {
        NodeDim.compute(v7156, prop$$33, v7157);
      }
      var v18868 = !computeLevels;
      var v13862 = !v18868;
      var v18870 = !v13862;
      if (v18870) {
        var v18869 = "_depth" in node$$59;
        v13862 = !v18869;
      }
      var v7160 = v13862;
      if (v7160) {
        var v7158 = this.graph;
        var v7159 = this.root;
        introspect(JAM.policy.p3) {
          v7158.computeLevels(v7159, 0, "ignore");
        }
      }
      introspect(JAM.policy.p3) {
        this.computePositions(node$$59, prop$$33);
      }
      return;
    }
    function getBoundaries(graph$$16, config$$3, level$$11, orn, prop$$31) {
      function v440(n$$28) {
        var v18871 = n$$28._depth;
        var v13863 = v18871 == level$$11;
        if (v13863) {
          var v18872 = !multitree;
          var v23819 = !v18872;
          if (v23819) {
            var v26132 = n$$28.data;
            var v23818 = "$orn" in v26132;
            if (v23818) {
              var v27691 = n$$28.data;
              var v26133 = v27691.$orn;
              v23818 = v26133 == orn;
            }
            v18872 = v23818;
          }
          v13863 = v18872;
        }
        var v7163 = v13863;
        if (v7163) {
          introspect(JAM.policy.p3) {
            var dw = n$$28.getData("width", prop$$31)
          }
          introspect(JAM.policy.p3) {
            var dh = n$$28.getData("height", prop$$31)
          }
          var v7161;
          var v13864 = w$$6 < dw;
          if (v13864) {
            v7161 = dw;
          } else {
            v7161 = w$$6;
          }
          w$$6 = v7161;
          var v7162;
          var v13865 = h$$4 < dh;
          if (v13865) {
            v7162 = dh;
          } else {
            v7162 = h$$4;
          }
          h$$4 = v7162;
        }
        return;
      }
      var dim$$9 = config$$3.Node;
      var multitree = config$$3.multitree;
      var v7166 = dim$$9.overridable;
      if (v7166) {
        var w$$6 = -1;
        var h$$4 = -1;
        introspect(JAM.policy.p3) {
          graph$$16.eachNode(v440);
        }
        var v13866;
        var v18873 = w$$6 < 0;
        if (v18873) {
          v13866 = dim$$9.width;
        } else {
          v13866 = w$$6;
        }
        var v7164 = v13866;
        var v13867;
        var v18874 = h$$4 < 0;
        if (v18874) {
          v13867 = dim$$9.height;
        } else {
          v13867 = h$$4;
        }
        var v7165 = v13867;
        return {"width":v7164, "height":v7165};
      } else {
        return dim$$9;
      }
      return;
    }
    function design(graph$$17, node$$56, prop$$32, config$$4, orn$$1) {
      function v443(node$$58) {
        var v18875 = node$$58.data;
        var v13868 = v18875.len;
        var v7168 = v13868 < min$$2;
        if (v7168) {
          var v7167 = node$$58.data;
          min$$2 = v7167.len;
        }
        var v18876 = node$$58.data;
        var v13869 = v18876.len;
        var v7170 = v13869 > max$$1;
        if (v7170) {
          var v7169 = node$$58.data;
          max$$1 = v7169.len;
        }
        return;
      }
      function $design(node$$57, maxsize, y$$47, xpos) {
        function v442(n$$30) {
          var v18877 = n$$30.exist;
          var v13870 = !v18877;
          if (v13870) {
            var v18878 = n$$30.drawn;
            v13870 = !v18878;
          }
          var v7171 = v13870;
          if (v7171) {
            anyChildVisible = false;
          }
          return;
        }
        function v441(n$$29) {
          var v7174 = n$$29.exist;
          if (v7174) {
            subnodeVisible = true;
            y$$47 = $design(n$$29, null, y$$47, xpos);
            var v13871 = y$$47.ymid;
            var v7172 = ymin > v13871;
            if (v7172) {
              ymin = y$$47.ymid;
            }
            var v13872 = y$$47.ymid;
            var v7173 = ymax < v13872;
            if (v7173) {
              ymax = y$$47.ymid;
            }
          }
          return;
        }
        var ymin = Number.MAX_VALUE;
        var ymax = Number.MIN_VALUE;
        var subnodeVisible = false;
        var v7175 = config$$4.branchLength;
        if (v7175) {
          var v26134 = graph$$17.factor;
          var v27692 = node$$57.data;
          var v26135 = v27692.len;
          var v23820 = v26134 * v26135;
          var v23821 = config$$4.branchMultiplier;
          var v18879 = v23820 * v23821;
          var v13873 = 10 + v18879;
          xpos = xpos + v13873;
        } else {
          var v13874 = config$$4.levelDistance;
          xpos = xpos + v13874;
        }
        introspect(JAM.policy.p3) {
          node$$57.eachSubnode(v441);
        }
        var v13875 = graph$$17.maxXpos;
        var v7176 = v13875 < xpos;
        if (v7176) {
          graph$$17.maxXpos = xpos;
        }
        if (subnodeVisible) {
          var v7177 = y$$47;
          introspect(JAM.policy.p3) {
            var v13876 = node$$57.getPos(prop$$32)
          }
          var v18880 = ymax + ymin;
          v7177.ymid = v13876["y"] = v18880 / 2;
        } else {
          var v7178 = y$$47;
          var v13877 = y$$47;
          var v18881 = y$$47;
          introspect(JAM.policy.p3) {
            var v23822 = node$$57.getPos(prop$$32)
          }
          var v27693 = y$$47.ymax;
          introspect(JAM.policy.p3) {
            var v27694 = node$$57.getData(s$$9, prop$$32)
          }
          var v26136 = v27693 + v27694;
          v7178.ymid = v13877.ymin = v18881.ymax = v23822["y"] = v26136 + siblingOffset;
        }
        introspect(JAM.policy.p3) {
          var v7179 = node$$57.getPos(prop$$32)
        }
        v7179["x"] = xpos;
        var v18882 = node$$57.data;
        var v13878 = v18882.leaf;
        var v7185 = !v13878;
        if (v7185) {
          var anyChildVisible = true;
          introspect(JAM.policy.p3) {
            node$$57.eachLevel(1, 1, v442);
          }
          var v7184 = !anyChildVisible;
          if (v7184) {
            var v7180 = node$$57.data;
            v7180.display = "";
            var v7181 = node$$57.data;
            v7181.$type = "triangle";
          } else {
            var v7182 = node$$57.data;
            v7182.display = "none";
            var v7183 = node$$57.data;
            v7183.$type = "circle";
          }
        }
        return y$$47;
      }
      var multitree$$1 = config$$4.multitree;
      var auxp = ["x", "y"];
      var auxs = ["width", "height"];
      var v13879 = orn$$1 == "left";
      var v18883 = !v13879;
      if (v18883) {
        v13879 = orn$$1 == "right";
      }
      var v7186 = v13879;
      var ind = +v7186;
      var p$$20 = auxp[ind];
      var v7187 = 1 - ind;
      var notp = auxp[v7187];
      var cnode = config$$4.Node;
      var s$$9 = auxs[ind];
      var v7188 = 1 - ind;
      var nots = auxs[v7188];
      var siblingOffset = config$$4.siblingOffset;
      var subtreeOffset = config$$4.subtreeOffset;
      var align = config$$4.align;
      graph$$17.maxXpos = Number.MIN_VALUE;
      var v23823 = graph$$17.maxLen;
      var v18884 = !v23823;
      if (v18884) {
        var v23824 = graph$$17.minLen;
        v18884 = !v23824;
      }
      var v13880 = v18884;
      if (v13880) {
        var v18885 = graph$$17.factor;
        v13880 = !v18885;
      }
      var v7192 = v13880;
      if (v7192) {
        var max$$1 = Number.MIN_VALUE;
        var min$$2 = Number.MAX_VALUE;
        introspect(JAM.policy.p3) {
          graph$$17.eachNode(v443);
        }
        graph$$17.minLen = min$$2;
        graph$$17.maxLen = max$$1;
        var v7189 = config$$4.width;
        var v13881 = graph$$17.depth;
        var v7190 = v13881.length;
        var constant = v7189 / v7190;
        var v13882 = graph$$17.maxLen;
        var v13883 = graph$$17.minLen;
        var v7191 = v13882 - v13883;
        graph$$17.factor = constant / v7191;
      }
      var v7193 = {ymid:0, ymin:0, ymax:0};
      $design(node$$56, false, v7193, 0);
      var v13884 = graph$$17.maxXpos;
      var v26137 = node$$56.data;
      var v23825 = v26137.$dim;
      var v18886 = v23825 + 10;
      var v23826 = !v18886;
      if (v23826) {
        v18886 = 0;
      }
      var v13885 = v18886;
      graph$$17.maxXpos = v13884 + v13885;
      return;
    }
    var v7194 = Array.prototype;
    var slice = v7194.slice;
    var v7195 = {compute:v444, computePositions:v446, computeLeaves:v448};
    return new Class(v7195);
  }
  function v439(opt$$24) {
    var v13886 = this.label;
    var v7196 = v13886.style;
    var v7197 = {"visibility":"hidden", "position":"absolute", "width":"auto", "height":"auto"};
    introspect(JAM.policy.p3) {
      $$$1.extend(v7196, v7197);
    }
    var v7198 = this.label;
    v7198.className = "jit-autoadjust-label";
    return;
  }
  function v438(opt$$23) {
    var v13887 = this.label;
    var v7201 = !v13887;
    if (v7201) {
      introspect(JAM.policy.p3) {
        var v31167 = document.createElement("div")
      }
      this.label = v31167;
      var v7199 = document.body;
      var v7200 = this.label;
      introspect(JAM.policy.p3) {
        v7199.appendChild(v7200);
      }
    }
    introspect(JAM.policy.p3) {
      this.setLabelStyles(opt$$23);
    }
    return;
  }
  function v437(graph$$15, prop$$30, opt$$22) {
    function v436(n$$27) {
      introspect(JAM.policy.p3) {
        var autoWidth = n$$27.getData("autoWidth")
      }
      introspect(JAM.policy.p3) {
        var autoHeight = n$$27.getData("autoHeight")
      }
      var v7209 = autoWidth || autoHeight;
      if (v7209) {
        var v7202 = n$$27.data;
        delete v7202.$width;
        var v7203 = n$$27.data;
        delete v7203.$height;
        var v7204 = n$$27.data;
        delete v7204.$dim;
        introspect(JAM.policy.p3) {
          var width$$22 = n$$27.getData("width")
        }
        introspect(JAM.policy.p3) {
          var height$$19 = n$$27.getData("height")
        }
        var v7205;
        if (autoWidth) {
          v7205 = "auto";
        } else {
          v7205 = width$$22 + "px";
        }
        style$$5.width = v7205;
        var v7206;
        if (autoHeight) {
          v7206 = "auto";
        } else {
          v7206 = height$$19 + "px";
        }
        style$$5.height = v7206;
        label$$10.innerHTML = n$$27.name;
        var offsetWidth = label$$10.offsetWidth;
        var offsetHeight = label$$10.offsetHeight;
        introspect(JAM.policy.p3) {
          var type$$55 = n$$27.getData("type")
        }
        var v18887 = ["circle", "square", "triangle", "star"];
        introspect(JAM.policy.p3) {
          var v13888 = $$$1.indexOf(v18887, type$$55)
        }
        var v7208 = v13888 === -1;
        if (v7208) {
          introspect(JAM.policy.p3) {
            n$$27.setData("width", offsetWidth);
          }
          introspect(JAM.policy.p3) {
            n$$27.setData("height", offsetHeight);
          }
        } else {
          var v7207;
          var v13889 = offsetWidth > offsetHeight;
          if (v13889) {
            v7207 = offsetWidth;
          } else {
            v7207 = offsetHeight;
          }
          var dim$$8 = v7207;
          introspect(JAM.policy.p3) {
            n$$27.setData("width", dim$$8);
          }
          introspect(JAM.policy.p3) {
            n$$27.setData("height", dim$$8);
          }
          introspect(JAM.policy.p3) {
            n$$27.setData("dim", dim$$8);
          }
        }
      }
      return;
    }
    introspect(JAM.policy.p3) {
      this.initializeLabel(opt$$22);
    }
    var label$$10 = this.label;
    var style$$5 = label$$10.style;
    introspect(JAM.policy.p3) {
      graph$$15.eachNode(v436);
    }
    return;
  }
  function v435(type$$54) {
    function v434(node$$55) {
      function v433(adj$$20) {
        var nodeTo$$5 = adj$$20.nodeTo;
        var v23827 = nodeTo$$5.visited;
        var v18888 = !v23827;
        var v13890 = !v18888;
        var v7210 = v13890 === T$$1;
        if (v7210) {
          var ansAdj = {};
          ansAdj.nodeTo = nodeTo$$5.id;
          ansAdj.data = adj$$20.data;
          introspect(JAM.policy.p3) {
            adjs$$2.push(ansAdj);
          }
        }
        return;
      }
      var ansNode = {};
      ansNode.id = node$$55.id;
      ansNode.name = node$$55.name;
      ansNode.data = node$$55.data;
      var adjs$$2 = [];
      introspect(JAM.policy.p3) {
        node$$55.eachAdjacency(v433);
      }
      ansNode.adjacencies = adjs$$2;
      introspect(JAM.policy.p3) {
        ans$$13.push(ansNode);
      }
      node$$55.visited = !T$$1;
      return;
    }
    function recTree(node$$54) {
      function v432(n$$26) {
        var v7211 = recTree(n$$26);
        introspect(JAM.policy.p3) {
          ch$$10.push(v7211);
        }
        return;
      }
      var ans$$14 = {};
      ans$$14.id = node$$54.id;
      ans$$14.name = node$$54.name;
      ans$$14.data = node$$54.data;
      var ch$$10 = [];
      introspect(JAM.policy.p3) {
        node$$54.eachSubnode(v432);
      }
      ans$$14.children = ch$$10;
      return ans$$14;
    }
    type$$54 = type$$54 || "tree";
    var v7216 = type$$54 == "tree";
    if (v7216) {
      var ans$$13 = {};
      var v7212 = this.graph;
      var v7213 = this.root;
      introspect(JAM.policy.p3) {
        var rootNode = v7212.getNode(v7213)
      }
      ans$$13 = recTree(rootNode);
      return ans$$13;
    } else {
      ans$$13 = [];
      var v23828 = this.graph;
      var v23829 = this.root;
      introspect(JAM.policy.p3) {
        var v18889 = v23828.getNode(v23829)
      }
      var v13891 = v18889.visited;
      var v7214 = !v13891;
      var T$$1 = !v7214;
      var v7215 = this.graph;
      introspect(JAM.policy.p3) {
        v7215.eachNode(v434);
      }
      return ans$$13;
    }
    return;
  }
  function v431(json$$8, i$$53) {
    this.json = json$$8;
    var v13892 = this.labels;
    if (v13892) {
      var v18890 = this.labels;
      v13892 = v18890.clearLabels;
    }
    var v7218 = v13892;
    if (v7218) {
      var v7217 = this.labels;
      introspect(JAM.policy.p3) {
        v7217.clearLabels(true);
      }
    }
    introspect(JAM.policy.p3) {
      var v31168 = this.construct(json$$8)
    }
    this.graph = v31168;
    introspect(JAM.policy.p3) {
      var v13893 = $$$1.type(json$$8)
    }
    var v7220 = v13893 != "array";
    if (v7220) {
      this.root = json$$8.id;
    } else {
      var v18891;
      if (i$$53) {
        v18891 = i$$53;
      } else {
        v18891 = 0;
      }
      var v13894 = v18891;
      var v7219 = json$$8[v13894];
      this.root = v7219.id;
    }
    return;
  }
  function v430(json$$5) {
    function v429(ans$$12, json$$7) {
      function getNode(id$$28) {
        var i$$52 = 0;
        var l$$20 = json$$7.length;
        var v7222 = i$$52 < l$$20;
        for (;v7222;) {
          var v18892 = json$$7[i$$52];
          var v13895 = v18892.id;
          var v7221 = v13895 == id$$28;
          if (v7221) {
            return json$$7[i$$52];
          }
          i$$52++;
          v7222 = i$$52 < l$$20;
        }
        var newNode$$1 = {"id":id$$28, "name":id$$28};
        introspect(JAM.policy.p3) {
          return ans$$12.addNode(newNode$$1);
        }
      }
      var i$$51 = 0;
      var l$$19 = json$$7.length;
      var v7230 = i$$51 < l$$19;
      for (;v7230;) {
        var v7223 = json$$7[i$$51];
        introspect(JAM.policy.p3) {
          ans$$12.addNode(v7223);
        }
        var v7224 = json$$7[i$$51];
        var adj$$19 = v7224.adjacencies;
        if (adj$$19) {
          var j$$4 = 0;
          var lj = adj$$19.length;
          var v7229 = j$$4 < lj;
          for (;v7229;) {
            var node$$53 = adj$$19[j$$4];
            var data$$22 = {};
            var v18893 = adj$$19[j$$4];
            var v13896 = typeof v18893;
            var v7226 = v13896 != "string";
            if (v7226) {
              var v7225 = node$$53.data;
              introspect(JAM.policy.p3) {
                data$$22 = $$$1.merge(v7225, {});
              }
              node$$53 = node$$53.nodeTo;
            }
            var v7227 = json$$7[i$$51];
            var v7228 = getNode(node$$53);
            introspect(JAM.policy.p3) {
              ans$$12.addAdjacence(v7227, v7228, data$$22);
            }
            j$$4++;
            v7229 = j$$4 < lj;
          }
        }
        i$$51++;
        v7230 = i$$51 < l$$19;
      }
      return;
    }
    function v428(ans$$11, json$$6) {
      introspect(JAM.policy.p3) {
        ans$$11.addNode(json$$6);
      }
      var v7234 = json$$6.children;
      if (v7234) {
        var i$$50 = 0;
        var ch$$9 = json$$6.children;
        var v13897 = ch$$9.length;
        var v7233 = i$$50 < v13897;
        for (;v7233;) {
          var v7231 = ch$$9[i$$50];
          introspect(JAM.policy.p3) {
            ans$$11.addAdjacence(json$$6, v7231);
          }
          var v7232 = ch$$9[i$$50];
          introspect(JAM.policy.p3) {
            arguments.callee(ans$$11, v7232);
          }
          i$$50++;
          var v13898 = ch$$9.length;
          v7233 = i$$50 < v13898;
        }
      }
      return;
    }
    introspect(JAM.policy.p3) {
      var v7235 = $$$1.type(json$$5)
    }
    var isGraph = v7235 == "array";
    var v7236 = this.graphOptions;
    var v13899 = this.config;
    var v7237 = v13899.Node;
    var v13900 = this.config;
    var v7238 = v13900.Edge;
    var v13901 = this.config;
    var v7239 = v13901.Label;
    var ans$$10 = new Graph(v7236, v7237, v7238, v7239);
    var v7240 = !isGraph;
    if (v7240) {
      v428(ans$$10, json$$5);
    } else {
      v429(ans$$10, json$$5);
    }
    return ans$$10;
  }
  function v427(node$$52, canvas$$30) {
    var config$$2 = this.config;
    var level$$10 = config$$2.levelsToShow;
    var constrained = config$$2.constrained;
    var v7241 = !constrained;
    if (v7241) {
      return level$$10;
    }
    introspect(JAM.policy.p3) {
      var v18894 = this.treeFitsInCanvas(node$$52, canvas$$30, level$$10)
    }
    var v13902 = !v18894;
    if (v13902) {
      v13902 = level$$10 > 1;
    }
    var v7242 = v13902;
    for (;v7242;) {
      level$$10--;
      introspect(JAM.policy.p3) {
        var v18895 = this.treeFitsInCanvas(node$$52, canvas$$30, level$$10)
      }
      var v13903 = !v18895;
      if (v13903) {
        v13903 = level$$10 > 1;
      }
      v7242 = v13903;
    }
    return level$$10;
  }
  function v426(node$$51, canvas$$29, callback$$25) {
    function v425(n$$25) {
      var v7243 = n$$25._depth;
      var v7244 = node$$51._depth;
      var d$$4 = v7243 - v7244;
      var v7247 = d$$4 > level$$9;
      if (v7247) {
        introspect(JAM.policy.p3) {
          opt$$21.onHide(n$$25);
        }
        var v7245 = opt$$21.execHide;
        if (v7245) {
          n$$25.drawn = false;
          n$$25.exist = false;
          introspect(JAM.policy.p3) {
            fx$$1.hideLabel(n$$25, false);
          }
        }
      } else {
        introspect(JAM.policy.p3) {
          opt$$21.onShow(n$$25);
        }
        var v7246 = opt$$21.execShow;
        if (v7246) {
          n$$25.exist = true;
        }
      }
      return;
    }
    introspect(JAM.policy.p3) {
      var level$$9 = this.getRightLevelToShow(node$$51, canvas$$29)
    }
    var v7248 = this.viz;
    var fx$$1 = v7248.labels;
    var v13904 = $$$1.empty;
    var v13905 = $$$1.empty;
    var v7249 = {execShow:true, execHide:true, onHide:v13904, onShow:v13905};
    var v7250 = callback$$25 || {};
    introspect(JAM.policy.p3) {
      var opt$$21 = $$$1.merge(v7249, v7250)
    }
    var v13906 = this.config;
    var v7251 = v13906.levelsToShow;
    introspect(JAM.policy.p3) {
      node$$51.eachLevel(0, v7251, v425);
    }
    node$$51.drawn = true;
    return;
  }
  function v424(pos$$34, prop$$29) {
    function v423(elem$$52) {
      function v422(p$$19) {
        introspect(JAM.policy.p3) {
          var v7252 = elem$$52.getPos(p$$19)
        }
        introspect(JAM.policy.p3) {
          v7252.$add(pos$$34);
        }
        return;
      }
      introspect(JAM.policy.p3) {
        $$$1.each(prop$$29, v422);
      }
      return;
    }
    introspect(JAM.policy.p3) {
      prop$$29 = $$$1.splat(prop$$29);
    }
    var v13907 = this.viz;
    var v7253 = v13907.graph;
    introspect(JAM.policy.p3) {
      v7253.eachNode(v423);
    }
    return;
  }
  function v421(viz$$20) {
    this.viz = viz$$20;
    this.config = viz$$20.config;
    var v7254 = viz$$20.config;
    this.node = v7254.Node;
    var v7255 = viz$$20.config;
    this.edge = v7255.Edge;
    return;
  }
  function v420(canvas$$28, node$$50, controller$$3) {
    var id$$27 = node$$50.id;
    introspect(JAM.policy.p3) {
      var tag$$3 = this.getLabel(id$$27)
    }
    var v13908 = !tag$$3;
    if (v13908) {
      introspect(JAM.policy.p3) {
        var v18896 = tag$$3 = document.getElementById(id$$27)
      }
      v13908 = !v18896;
    }
    var v7258 = v13908;
    if (v7258) {
      var ns = "http://www.w3.org/2000/svg";
      introspect(JAM.policy.p3) {
        tag$$3 = document.createElementNS(ns, "svg:text");
      }
      introspect(JAM.policy.p3) {
        var tspan = document.createElementNS(ns, "svg:tspan")
      }
      introspect(JAM.policy.p3) {
        tag$$3.appendChild(tspan);
      }
      introspect(JAM.policy.p3) {
        var container$$2 = this.getLabelContainer()
      }
      introspect(JAM.policy.p3) {
        tag$$3.setAttribute("id", id$$27);
      }
      introspect(JAM.policy.p3) {
        tag$$3.setAttribute("class", "node");
      }
      introspect(JAM.policy.p3) {
        container$$2.appendChild(tag$$3);
      }
      introspect(JAM.policy.p3) {
        controller$$3.onCreateLabel(tag$$3, node$$50);
      }
      var v7256 = this.labels;
      var v7257 = node$$50.id;
      introspect(JAM.policy.p2) {
        v7256[v7257] = tag$$3;
      }
    }
    introspect(JAM.policy.p3) {
      this.placeLabel(tag$$3, node$$50, controller$$3);
    }
    return;
  }
  function v419(canvas$$27, node$$49, controller$$2) {
    var id$$26 = node$$49.id;
    introspect(JAM.policy.p3) {
      var tag$$2 = this.getLabel(id$$26)
    }
    var v13909 = !tag$$2;
    if (v13909) {
      introspect(JAM.policy.p3) {
        var v18897 = tag$$2 = document.getElementById(id$$26)
      }
      v13909 = !v18897;
    }
    var v7262 = v13909;
    if (v7262) {
      introspect(JAM.policy.p3) {
        tag$$2 = document.createElement("div");
      }
      introspect(JAM.policy.p3) {
        var container$$1 = this.getLabelContainer()
      }
      tag$$2.id = id$$26;
      tag$$2.className = "node";
      var v7259 = tag$$2.style;
      v7259.position = "absolute";
      introspect(JAM.policy.p3) {
        controller$$2.onCreateLabel(tag$$2, node$$49);
      }
      introspect(JAM.policy.p3) {
        container$$1.appendChild(tag$$2);
      }
      var v7260 = this.labels;
      var v7261 = node$$49.id;
      introspect(JAM.policy.p2) {
        v7260[v7261] = tag$$2;
      }
    }
    introspect(JAM.policy.p3) {
      this.placeLabel(tag$$2, node$$49, controller$$2);
    }
    return;
  }
  function v418(pos$$33, canvas$$26) {
    introspect(JAM.policy.p3) {
      var size$$7 = canvas$$26.getSize()
    }
    var v13910 = pos$$33.w;
    if (v13910) {
      v13910 = pos$$33.h;
    }
    var v7265 = v13910;
    if (v7265) {
      var v26138 = pos$$33.x;
      var v26139 = size$$7.width;
      var v23830 = v26138 >= v26139;
      var v26142 = !v23830;
      if (v26142) {
        var v26140 = pos$$33.x;
        var v27695 = pos$$33.w;
        var v26141 = -v27695;
        v23830 = v26140 < v26141;
      }
      var v18898 = v23830;
      var v23833 = !v18898;
      if (v23833) {
        var v23831 = pos$$33.y;
        var v23832 = size$$7.height;
        v18898 = v23831 >= v23832;
      }
      var v13911 = v18898;
      var v18901 = !v13911;
      if (v18901) {
        var v18899 = pos$$33.y;
        var v23834 = pos$$33.h;
        var v18900 = -v23834;
        v13911 = v18899 < v18900;
      }
      var v7263 = v13911;
      if (v7263) {
        return false;
      }
    } else {
      var v26143 = pos$$33.x;
      var v26144 = size$$7.width;
      var v23835 = v26143 >= v26144;
      var v26146 = !v23835;
      if (v26146) {
        var v26145 = pos$$33.x;
        v23835 = v26145 < 0;
      }
      var v18902 = v23835;
      var v23838 = !v18902;
      if (v23838) {
        var v23836 = pos$$33.y;
        var v23837 = size$$7.height;
        v18902 = v23836 >= v23837;
      }
      var v13912 = v18902;
      var v18904 = !v13912;
      if (v18904) {
        var v18903 = pos$$33.y;
        v13912 = v18903 < 0;
      }
      var v7264 = v13912;
      if (v7264) {
        return false;
      }
    }
    return true;
  }
  function v417(node$$48, show$$1) {
    function v416(n$$24) {
      var v7266 = n$$24.id;
      introspect(JAM.policy.p3) {
        lab = that$$18.getLabel(v7266);
      }
      if (lab) {
        var v7267 = lab.style;
        v7267.display = st$$1;
      }
      return;
    }
    introspect(JAM.policy.p3) {
      node$$48 = $$$1.splat(node$$48);
    }
    var v7268;
    if (show$$1) {
      v7268 = "";
    } else {
      v7268 = "none";
    }
    var st$$1 = v7268;
    var lab;
    var that$$18 = this;
    introspect(JAM.policy.p3) {
      $$$1.each(node$$48, v416);
    }
    return;
  }
  function v415(id$$25) {
    introspect(JAM.policy.p3) {
      var elem$$51 = this.getLabel(id$$25)
    }
    var v13913 = elem$$51;
    if (v13913) {
      v13913 = elem$$51.parentNode;
    }
    var v7270 = v13913;
    if (v7270) {
      var v7269 = elem$$51.parentNode;
      introspect(JAM.policy.p3) {
        v7269.removeChild(elem$$51);
      }
    }
    return;
  }
  function v414(force$$5) {
    var id$$24;
    var v7273 = this.labels;
    for (id$$24 in v7273) {
      var v13914 = force$$5;
      var v18906 = !v13914;
      if (v18906) {
        var v26147 = this.viz;
        var v23839 = v26147.graph;
        introspect(JAM.policy.p3) {
          var v18905 = v23839.hasNode(id$$24)
        }
        v13914 = !v18905;
      }
      var v7272 = v13914;
      if (v7272) {
        introspect(JAM.policy.p3) {
          this.disposeLabel(id$$24);
        }
        var v7271 = this.labels;
        delete v7271[id$$24];
      }
    }
    return;
  }
  function v413(hide) {
    introspect(JAM.policy.p3) {
      var container = this.getLabelContainer()
    }
    if (hide) {
      var v7274 = container.style;
      v7274.display = "none";
    } else {
      var v7275 = container.style;
      v7275.display = "";
    }
    this.labelsHidden = hide;
    return;
  }
  function v412(id$$23) {
    var v7276;
    var v23840 = this.labels;
    var v18907 = id$$23 in v23840;
    if (v18907) {
      var v26148 = this.labels;
      var v23841 = v26148[id$$23];
      v18907 = v23841 != null;
    }
    var v13917 = v18907;
    if (v13917) {
      var v13915 = this.labels;
      v7276 = v13915[id$$23];
    } else {
      var v13916 = this.labels;
      introspect(JAM.policy.p3) {
        var v31169 = document.getElementById(id$$23)
      }
      introspect(JAM.policy.p2) {
        v7276 = v13916[id$$23] = v31169;
      }
    }
    return v7276;
  }
  function v411() {
    var v7277;
    var v13919 = this.labelContainer;
    if (v13919) {
      v7277 = this.labelContainer;
    } else {
      var v23842 = this.viz;
      var v18908 = v23842.config;
      var v13918 = v18908.labelContainer;
      introspect(JAM.policy.p3) {
        var v31170 = document.getElementById(v13918)
      }
      v7277 = this.labelContainer = v31170;
    }
    return v7277;
  }
  function v410(node$$47, show) {
    function v409(n$$23) {
      n$$23._hideLabel = al;
      return;
    }
    introspect(JAM.policy.p3) {
      node$$47 = $$$1.splat(node$$47);
    }
    var v7278;
    if (show) {
      v7278 = false;
    } else {
      v7278 = true;
    }
    var al = v7278;
    introspect(JAM.policy.p3) {
      $$$1.each(node$$47, v409);
    }
    return;
  }
  function v408(canvas$$25, node$$46, controller$$1) {
    introspect(JAM.policy.p3) {
      var ctx$$15 = canvas$$25.getCtx()
    }
    var v7279 = node$$46.pos;
    introspect(JAM.policy.p3) {
      var pos$$32 = v7279.getc(true)
    }
    var v7280 = node$$46.name;
    var v7281 = pos$$32.x;
    var v13920 = pos$$32.y;
    introspect(JAM.policy.p3) {
      var v18909 = node$$46.getData("height")
    }
    var v13921 = v18909 / 2;
    var v7282 = v13920 + v13921;
    introspect(JAM.policy.p3) {
      ctx$$15.fillText(v7280, v7281, v7282);
    }
    return;
  }
  function v407(canvas$$24, node$$45, controller) {
    introspect(JAM.policy.p3) {
      var ctx$$14 = canvas$$24.getCtx()
    }
    var v7283 = node$$45.pos;
    introspect(JAM.policy.p3) {
      var pos$$31 = v7283.getc(true)
    }
    introspect(JAM.policy.p3) {
      var v23843 = node$$45.getLabelData("style")
    }
    var v18910 = v23843 + " ";
    introspect(JAM.policy.p3) {
      var v18911 = node$$45.getLabelData("size")
    }
    var v13922 = v18910 + v18911;
    var v7284 = v13922 + "px ";
    introspect(JAM.policy.p3) {
      var v7285 = node$$45.getLabelData("family")
    }
    ctx$$14.font = v7284 + v7285;
    introspect(JAM.policy.p3) {
      var v31171 = node$$45.getLabelData("textAlign")
    }
    ctx$$14.textAlign = v31171;
    introspect(JAM.policy.p3) {
      var v31172 = node$$45.getLabelData("color")
    }
    ctx$$14.fillStyle = ctx$$14.strokeStyle = v31172;
    introspect(JAM.policy.p3) {
      var v31173 = node$$45.getLabelData("textBaseline")
    }
    ctx$$14.textBaseline = v31173;
    introspect(JAM.policy.p3) {
      this.renderLabel(canvas$$24, node$$45, controller);
    }
    return;
  }
  function v406(viz$$19) {
    this.viz = viz$$19;
    return;
  }
  function v405(elem$$50, canvas$$23, opt$$20) {
    introspect(JAM.policy.p3) {
      var gl = canvas$$23.getCtx()
    }
    var viewMatrix = new Matrix4;
    var v13923 = canvas$$23.config;
    var v7286 = v13923.Scene;
    var lighting = v7286.Lighting;
    var v7287 = canvas$$23.canvases;
    var wcanvas = v7287[0];
    var program$$16 = wcanvas.program;
    var camera = wcanvas.camera;
    var v13924 = elem$$50.geometry;
    var v7289 = !v13924;
    if (v7289) {
      var v13925 = O3D;
      introspect(JAM.policy.p3) {
        var v13926 = elem$$50.getData("type")
      }
      var v7288 = v13925[v13926];
      var v31174 = new v7288;
      elem$$50.geometry = v31174;
    }
    var v7290 = elem$$50.geometry;
    introspect(JAM.policy.p3) {
      v7290.update(elem$$50);
    }
    var v13927 = elem$$50.webGLVertexBuffer;
    var v7339 = !v13927;
    if (v7339) {
      var vertices = [];
      var faces = [];
      var normals = [];
      var vertexIndex = 0;
      var geom$$4 = elem$$50.geometry;
      var i$$49 = 0;
      var vs = geom$$4.vertices;
      var fs = geom$$4.faces;
      var fsl = fs.length;
      var v7323 = i$$49 < fsl;
      for (;v7323;) {
        var face$$3 = fs[i$$49];
        var v7291 = face$$3.a;
        var v1$$1 = vs[v7291];
        var v7292 = face$$3.b;
        var v2$$1 = vs[v7292];
        var v7293 = face$$3.c;
        var v3 = vs[v7293];
        var v7294;
        var v13929 = face$$3.d;
        if (v13929) {
          var v13928 = face$$3.d;
          v7294 = vs[v13928];
        } else {
          v7294 = false;
        }
        var v4 = v7294;
        var n$$22 = face$$3.normal;
        var v7295 = v1$$1.x;
        var v7296 = v1$$1.y;
        var v7297 = v1$$1.z;
        introspect(JAM.policy.p3) {
          vertices.push(v7295, v7296, v7297);
        }
        var v7298 = v2$$1.x;
        var v7299 = v2$$1.y;
        var v7300 = v2$$1.z;
        introspect(JAM.policy.p3) {
          vertices.push(v7298, v7299, v7300);
        }
        var v7301 = v3.x;
        var v7302 = v3.y;
        var v7303 = v3.z;
        introspect(JAM.policy.p3) {
          vertices.push(v7301, v7302, v7303);
        }
        if (v4) {
          var v7304 = v4.x;
          var v7305 = v4.y;
          var v7306 = v4.z;
          introspect(JAM.policy.p3) {
            vertices.push(v7304, v7305, v7306);
          }
        }
        var v7307 = n$$22.x;
        var v7308 = n$$22.y;
        var v7309 = n$$22.z;
        introspect(JAM.policy.p3) {
          normals.push(v7307, v7308, v7309);
        }
        var v7310 = n$$22.x;
        var v7311 = n$$22.y;
        var v7312 = n$$22.z;
        introspect(JAM.policy.p3) {
          normals.push(v7310, v7311, v7312);
        }
        var v7313 = n$$22.x;
        var v7314 = n$$22.y;
        var v7315 = n$$22.z;
        introspect(JAM.policy.p3) {
          normals.push(v7313, v7314, v7315);
        }
        if (v4) {
          var v7316 = n$$22.x;
          var v7317 = n$$22.y;
          var v7318 = n$$22.z;
          introspect(JAM.policy.p3) {
            normals.push(v7316, v7317, v7318);
          }
        }
        var v7319 = vertexIndex + 1;
        var v7320 = vertexIndex + 2;
        introspect(JAM.policy.p3) {
          faces.push(vertexIndex, v7319, v7320);
        }
        if (v4) {
          var v7321 = vertexIndex + 2;
          var v7322 = vertexIndex + 3;
          introspect(JAM.policy.p3) {
            faces.push(vertexIndex, v7321, v7322);
          }
          vertexIndex = vertexIndex + 4;
        } else {
          vertexIndex = vertexIndex + 3;
        }
        i$$49++;
        v7323 = i$$49 < fsl;
      }
      introspect(JAM.policy.p3) {
        var v31175 = gl.createBuffer()
      }
      elem$$50.webGLVertexBuffer = v31175;
      var v7324 = gl.ARRAY_BUFFER;
      var v7325 = elem$$50.webGLVertexBuffer;
      introspect(JAM.policy.p3) {
        gl.bindBuffer(v7324, v7325);
      }
      var v7326 = gl.ARRAY_BUFFER;
      var v7327 = new Float32Array(vertices);
      var v7328 = gl.STATIC_DRAW;
      introspect(JAM.policy.p3) {
        gl.bufferData(v7326, v7327, v7328);
      }
      introspect(JAM.policy.p3) {
        var v31176 = gl.createBuffer()
      }
      elem$$50.webGLFaceBuffer = v31176;
      var v7329 = gl.ELEMENT_ARRAY_BUFFER;
      var v7330 = elem$$50.webGLFaceBuffer;
      introspect(JAM.policy.p3) {
        gl.bindBuffer(v7329, v7330);
      }
      var v7331 = gl.ELEMENT_ARRAY_BUFFER;
      var v7332 = new Uint16Array(faces);
      var v7333 = gl.STATIC_DRAW;
      introspect(JAM.policy.p3) {
        gl.bufferData(v7331, v7332, v7333);
      }
      elem$$50.webGLFaceCount = faces.length;
      introspect(JAM.policy.p3) {
        var v31177 = gl.createBuffer()
      }
      elem$$50.webGLNormalBuffer = v31177;
      var v7334 = gl.ARRAY_BUFFER;
      var v7335 = elem$$50.webGLNormalBuffer;
      introspect(JAM.policy.p3) {
        gl.bindBuffer(v7334, v7335);
      }
      var v7336 = gl.ARRAY_BUFFER;
      var v7337 = new Float32Array(normals);
      var v7338 = gl.STATIC_DRAW;
      introspect(JAM.policy.p3) {
        gl.bufferData(v7336, v7337, v7338);
      }
    }
    var v7340 = camera.matrix;
    var v13930 = elem$$50.geometry;
    var v7341 = v13930.matrix;
    introspect(JAM.policy.p3) {
      viewMatrix.multiply(v7340, v7341);
    }
    var v7342 = program$$16.viewMatrix;
    introspect(JAM.policy.p3) {
      var v7343 = viewMatrix.flatten()
    }
    introspect(JAM.policy.p3) {
      gl.uniformMatrix4fv(v7342, false, v7343);
    }
    var v7344 = program$$16.projectionMatrix;
    var v13931 = camera.projectionMatrix;
    introspect(JAM.policy.p3) {
      var v7345 = v13931.flatten()
    }
    introspect(JAM.policy.p3) {
      gl.uniformMatrix4fv(v7344, false, v7345);
    }
    introspect(JAM.policy.p3) {
      var normalMatrix = Matrix4.makeInvert(viewMatrix)
    }
    introspect(JAM.policy.p3) {
      normalMatrix.$transpose();
    }
    var v7346 = program$$16.normalMatrix;
    introspect(JAM.policy.p3) {
      var v7347 = normalMatrix.flatten()
    }
    introspect(JAM.policy.p3) {
      gl.uniformMatrix4fv(v7346, false, v7347);
    }
    introspect(JAM.policy.p3) {
      var v7348 = elem$$50.getData("color")
    }
    introspect(JAM.policy.p3) {
      var color$$4 = $$$1.hexToRgb(v7348)
    }
    introspect(JAM.policy.p3) {
      var v7349 = opt$$20.getAlpha()
    }
    introspect(JAM.policy.p3) {
      color$$4.push(v7349);
    }
    var v7350 = program$$16.color;
    var v13932 = color$$4[0];
    var v7351 = v13932 / 255;
    var v13933 = color$$4[1];
    var v7352 = v13933 / 255;
    var v13934 = color$$4[2];
    var v7353 = v13934 / 255;
    var v7354 = color$$4[3];
    introspect(JAM.policy.p3) {
      gl.uniform4f(v7350, v7351, v7352, v7353, v7354);
    }
    var v7355 = program$$16.enableLighting;
    var v7356 = lighting.enable;
    introspect(JAM.policy.p3) {
      gl.uniform1i(v7355, v7356);
    }
    var v7372 = lighting.enable;
    if (v7372) {
      var v7361 = lighting.ambient;
      if (v7361) {
        var acolor = lighting.ambient;
        var v7357 = program$$16.ambientColor;
        var v7358 = acolor[0];
        var v7359 = acolor[1];
        var v7360 = acolor[2];
        introspect(JAM.policy.p3) {
          gl.uniform3f(v7357, v7358, v7359, v7360);
        }
      }
      var v7371 = lighting.directional;
      if (v7371) {
        var dir = lighting.directional;
        color$$4 = dir.color;
        var pos$$30 = dir.direction;
        var v18912 = pos$$30.x;
        var v18913 = pos$$30.y;
        var v18914 = pos$$30.z;
        var v13935 = new Vector3(v18912, v18913, v18914);
        introspect(JAM.policy.p3) {
          var v7362 = v13935.normalize()
        }
        introspect(JAM.policy.p3) {
          var vd = v7362.$scale(-1)
        }
        var v7363 = program$$16.lightingDirection;
        var v7364 = vd.x;
        var v7365 = vd.y;
        var v7366 = vd.z;
        introspect(JAM.policy.p3) {
          gl.uniform3f(v7363, v7364, v7365, v7366);
        }
        var v7367 = program$$16.directionalColor;
        var v7368 = color$$4[0];
        var v7369 = color$$4[1];
        var v7370 = color$$4[2];
        introspect(JAM.policy.p3) {
          gl.uniform3f(v7367, v7368, v7369, v7370);
        }
      }
    }
    var v7373 = gl.ARRAY_BUFFER;
    var v7374 = elem$$50.webGLVertexBuffer;
    introspect(JAM.policy.p3) {
      gl.bindBuffer(v7373, v7374);
    }
    var v7375 = program$$16.position;
    var v7376 = gl.FLOAT;
    introspect(JAM.policy.p3) {
      gl.vertexAttribPointer(v7375, 3, v7376, false, 0, 0);
    }
    var v7377 = gl.ARRAY_BUFFER;
    var v7378 = elem$$50.webGLNormalBuffer;
    introspect(JAM.policy.p3) {
      gl.bindBuffer(v7377, v7378);
    }
    var v7379 = program$$16.normal;
    var v7380 = gl.FLOAT;
    introspect(JAM.policy.p3) {
      gl.vertexAttribPointer(v7379, 3, v7380, false, 0, 0);
    }
    var v7381 = gl.ELEMENT_ARRAY_BUFFER;
    var v7382 = elem$$50.webGLFaceBuffer;
    introspect(JAM.policy.p3) {
      gl.bindBuffer(v7381, v7382);
    }
    var v7383 = gl.TRIANGLES;
    var v7384 = elem$$50.webGLFaceCount;
    var v7385 = gl.UNSIGNED_SHORT;
    introspect(JAM.policy.p3) {
      gl.drawElements(v7383, v7384, v7385, 0);
    }
    return;
  }
  function v404(adj$$18, canvas$$22) {
    function v403() {
      var v13936 = adj$$18.nodeFrom;
      introspect(JAM.policy.p3) {
        var v7386 = v13936.getData("alpha")
      }
      var v13937 = adj$$18.nodeTo;
      introspect(JAM.policy.p3) {
        var v7387 = v13937.getData("alpha")
      }
      introspect(JAM.policy.p3) {
        var v7388 = adj$$18.getData("alpha")
      }
      introspect(JAM.policy.p3) {
        return Math.min(v7386, v7387, v7388);
      }
    }
    introspect(JAM.policy.p3) {
      var v13938 = adj$$18.getData("type")
    }
    var v7389 = v13938 == "none";
    if (v7389) {
      return;
    }
    var v7390 = {getAlpha:v403};
    introspect(JAM.policy.p3) {
      this.plotElement(adj$$18, canvas$$22, v7390);
    }
    return;
  }
  function v402(node$$44, canvas$$21) {
    function v401() {
      introspect(JAM.policy.p3) {
        return node$$44.getData("alpha");
      }
    }
    introspect(JAM.policy.p3) {
      var v13939 = node$$44.getData("type")
    }
    var v7391 = v13939 == "none";
    if (v7391) {
      return;
    }
    var v7392 = {getAlpha:v401};
    introspect(JAM.policy.p3) {
      this.plotElement(node$$44, canvas$$21, v7392);
    }
    return;
  }
  function v400(elem$$49, props$$15, delta$$20) {
    var v7393 = elem$$49.startPos;
    introspect(JAM.policy.p3) {
      var from$$10 = v7393.getc(true)
    }
    var v7394 = elem$$49.endPos;
    introspect(JAM.policy.p3) {
      var to$$11 = v7394.getc(true)
    }
    var v7395 = elem$$49.pos;
    var v13940 = from$$10.x;
    var v13941 = to$$11.x;
    introspect(JAM.policy.p3) {
      var v7396 = this.compute(v13940, v13941, delta$$20)
    }
    var v13942 = from$$10.y;
    var v13943 = to$$11.y;
    introspect(JAM.policy.p3) {
      var v7397 = this.compute(v13942, v13943, delta$$20)
    }
    var v13944 = from$$10.z;
    var v13945 = to$$11.z;
    introspect(JAM.policy.p3) {
      var v7398 = this.compute(v13944, v13945, delta$$20)
    }
    introspect(JAM.policy.p3) {
      v7395.setc(v7396, v7397, v7398);
    }
    return;
  }
  function v399(adj$$17, canvas$$20, animating$$3) {
    introspect(JAM.policy.p3) {
      var f$$3 = adj$$17.getData("type")
    }
    var v7399 = this.edge;
    var ctxObj$$1 = v7399.CanvasStyles;
    var v7404 = f$$3 != "none";
    if (v7404) {
      introspect(JAM.policy.p3) {
        var width$$21 = adj$$17.getData("lineWidth")
      }
      introspect(JAM.policy.p3) {
        var color$$3 = adj$$17.getData("color")
      }
      introspect(JAM.policy.p3) {
        var ctx$$13 = canvas$$20.getCtx()
      }
      var nodeFrom$$3 = adj$$17.nodeFrom;
      var nodeTo$$4 = adj$$17.nodeTo;
      introspect(JAM.policy.p3) {
        ctx$$13.save();
      }
      ctx$$13.lineWidth = width$$21;
      ctx$$13.fillStyle = ctx$$13.strokeStyle = color$$3;
      introspect(JAM.policy.p3) {
        var v7400 = nodeFrom$$3.getData("alpha")
      }
      introspect(JAM.policy.p3) {
        var v7401 = nodeTo$$4.getData("alpha")
      }
      introspect(JAM.policy.p3) {
        var v7402 = adj$$17.getData("alpha")
      }
      introspect(JAM.policy.p3) {
        var v31178 = Math.min(v7400, v7401, v7402)
      }
      ctx$$13.globalAlpha = v31178;
      var s$$8;
      for (s$$8 in ctxObj$$1) {
        introspect(JAM.policy.p3) {
          var v31179 = adj$$17.getCanvasStyle(s$$8)
        }
        introspect(JAM.policy.p2) {
          ctx$$13[s$$8] = v31179;
        }
      }
      var v18915 = this.edgeTypes;
      var v13946 = v18915[f$$3];
      var v7403 = v13946.render;
      introspect(JAM.policy.p3) {
        v7403.call(this, adj$$17, canvas$$20, animating$$3);
      }
      introspect(JAM.policy.p3) {
        ctx$$13.restore();
      }
    }
    return;
  }
  function v398(node$$43, canvas$$19, animating$$2) {
    introspect(JAM.policy.p3) {
      var f$$2 = node$$43.getData("type")
    }
    var v7405 = this.node;
    var ctxObj = v7405.CanvasStyles;
    var v7407 = f$$2 != "none";
    if (v7407) {
      introspect(JAM.policy.p3) {
        var width$$20 = node$$43.getData("lineWidth")
      }
      introspect(JAM.policy.p3) {
        var color$$2 = node$$43.getData("color")
      }
      introspect(JAM.policy.p3) {
        var alpha$$3 = node$$43.getData("alpha")
      }
      introspect(JAM.policy.p3) {
        var ctx$$12 = canvas$$19.getCtx()
      }
      introspect(JAM.policy.p3) {
        ctx$$12.save();
      }
      ctx$$12.lineWidth = width$$20;
      ctx$$12.fillStyle = ctx$$12.strokeStyle = color$$2;
      ctx$$12.globalAlpha = alpha$$3;
      var s$$7;
      for (s$$7 in ctxObj) {
        introspect(JAM.policy.p3) {
          var v31180 = node$$43.getCanvasStyle(s$$7)
        }
        introspect(JAM.policy.p2) {
          ctx$$12[s$$7] = v31180;
        }
      }
      var v18916 = this.nodeTypes;
      var v13947 = v18916[f$$2];
      var v7406 = v13947.render;
      introspect(JAM.policy.p3) {
        v7406.call(this, node$$43, canvas$$19, animating$$2);
      }
      introspect(JAM.policy.p3) {
        ctx$$12.restore();
      }
    }
    return;
  }
  function v397(node$$42, opt$$19, animating$$1) {
    function v396(elem$$48) {
      introspect(JAM.policy.p3) {
        var v18917 = opt$$19.plotSubtree(node$$42, elem$$48)
      }
      if (v18917) {
        v18917 = elem$$48.exist;
      }
      var v13948 = v18917;
      if (v13948) {
        v13948 = elem$$48.drawn;
      }
      var v7411 = v13948;
      if (v7411) {
        var v7408 = elem$$48.id;
        introspect(JAM.policy.p3) {
          var adj$$16 = node$$42.getAdjacency(v7408)
        }
        var v7409 = !animating$$1;
        if (v7409) {
          introspect(JAM.policy.p3) {
            opt$$19.onBeforePlotLine(adj$$16);
          }
        }
        introspect(JAM.policy.p3) {
          that$$17.plotLine(adj$$16, canvas$$18, animating$$1);
        }
        var v7410 = !animating$$1;
        if (v7410) {
          introspect(JAM.policy.p3) {
            opt$$19.onAfterPlotLine(adj$$16);
          }
        }
        introspect(JAM.policy.p3) {
          that$$17.plotTree(elem$$48, opt$$19, animating$$1);
        }
      }
      return;
    }
    var that$$17 = this;
    var viz$$18 = this.viz;
    var canvas$$18 = viz$$18.canvas;
    var config$$1 = this.config;
    introspect(JAM.policy.p3) {
      var ctx$$11 = canvas$$18.getCtx()
    }
    introspect(JAM.policy.p3) {
      var nodeAlpha$$1 = node$$42.getData("alpha")
    }
    introspect(JAM.policy.p3) {
      node$$42.eachSubnode(v396);
    }
    var v7418 = node$$42.drawn;
    if (v7418) {
      var v7412 = !animating$$1;
      if (v7412) {
        introspect(JAM.policy.p3) {
          opt$$19.onBeforePlotNode(node$$42);
        }
      }
      introspect(JAM.policy.p3) {
        this.plotNode(node$$42, canvas$$18, animating$$1);
      }
      var v7413 = !animating$$1;
      if (v7413) {
        introspect(JAM.policy.p3) {
          opt$$19.onAfterPlotNode(node$$42);
        }
      }
      var v23844 = opt$$19.hideLabels;
      var v18918 = !v23844;
      if (v18918) {
        v18918 = opt$$19.withLabels;
      }
      var v13949 = v18918;
      if (v13949) {
        v13949 = nodeAlpha$$1 >= .95;
      }
      var v7416 = v13949;
      if (v7416) {
        var v7414 = this.labels;
        introspect(JAM.policy.p3) {
          v7414.plotLabel(canvas$$18, node$$42, opt$$19);
        }
      } else {
        var v7415 = this.labels;
        introspect(JAM.policy.p3) {
          v7415.hideLabel(node$$42, false);
        }
      }
    } else {
      var v7417 = this.labels;
      introspect(JAM.policy.p3) {
        v7417.hideLabel(node$$42, true);
      }
    }
    return;
  }
  function v395(opt$$18, animating) {
    function v394(node$$41) {
      function v393(adj$$15) {
        var nodeTo$$3 = adj$$15.nodeTo;
        var v27696 = nodeTo$$3.visited;
        var v26149 = !v27696;
        var v23845 = !v26149;
        var v18919 = v23845 === T;
        if (v18919) {
          v18919 = node$$41.drawn;
        }
        var v13950 = v18919;
        if (v13950) {
          v13950 = nodeTo$$3.drawn;
        }
        var v7421 = v13950;
        if (v7421) {
          var v7419 = !animating;
          if (v7419) {
            introspect(JAM.policy.p3) {
              opt$$18.onBeforePlotLine(adj$$15);
            }
          }
          introspect(JAM.policy.p3) {
            that$$16.plotLine(adj$$15, canvas$$17, animating);
          }
          var v7420 = !animating;
          if (v7420) {
            introspect(JAM.policy.p3) {
              opt$$18.onAfterPlotLine(adj$$15);
            }
          }
        }
        return;
      }
      introspect(JAM.policy.p3) {
        var nodeAlpha = node$$41.getData("alpha")
      }
      introspect(JAM.policy.p3) {
        node$$41.eachAdjacency(v393);
      }
      var v7424 = node$$41.drawn;
      if (v7424) {
        var v7422 = !animating;
        if (v7422) {
          introspect(JAM.policy.p3) {
            opt$$18.onBeforePlotNode(node$$41);
          }
        }
        introspect(JAM.policy.p3) {
          that$$16.plotNode(node$$41, canvas$$17, animating);
        }
        var v7423 = !animating;
        if (v7423) {
          introspect(JAM.policy.p3) {
            opt$$18.onAfterPlotNode(node$$41);
          }
        }
      }
      var v18920 = that$$16.labelsHidden;
      var v13951 = !v18920;
      if (v13951) {
        v13951 = opt$$18.withLabels;
      }
      var v7428 = v13951;
      if (v7428) {
        var v13952 = node$$41.drawn;
        if (v13952) {
          v13952 = nodeAlpha >= .95;
        }
        var v7427 = v13952;
        if (v7427) {
          var v7425 = that$$16.labels;
          introspect(JAM.policy.p3) {
            v7425.plotLabel(canvas$$17, node$$41, opt$$18);
          }
        } else {
          var v7426 = that$$16.labels;
          introspect(JAM.policy.p3) {
            v7426.hideLabel(node$$41, false);
          }
        }
      }
      node$$41.visited = !T;
      return;
    }
    var viz$$17 = this.viz;
    var aGraph = viz$$17.graph;
    var canvas$$17 = viz$$17.canvas;
    var id$$22 = viz$$17.root;
    var that$$16 = this;
    introspect(JAM.policy.p3) {
      var ctx$$10 = canvas$$17.getCtx()
    }
    var min$$1 = Math.min;
    var v7429 = opt$$18;
    var v13954 = !v7429;
    if (v13954) {
      var v13953 = this.viz;
      v7429 = v13953.controller;
    }
    opt$$18 = v7429;
    var v7430 = opt$$18.clearCanvas;
    if (v7430) {
      introspect(JAM.policy.p3) {
        canvas$$17.clear();
      }
    }
    introspect(JAM.policy.p3) {
      var root$$4 = aGraph.getNode(id$$22)
    }
    var v7431 = !root$$4;
    if (v7431) {
      return;
    }
    var v13955 = root$$4.visited;
    var v7432 = !v13955;
    var T = !v7432;
    introspect(JAM.policy.p3) {
      aGraph.eachNode(v394);
    }
    return;
  }
  function v392(opt$$17) {
    function v391(id$$21) {
      introspect(JAM.policy.p3) {
        var n$$21 = graph$$14.getNode(id$$21)
      }
      if (n$$21) {
        var prop$$28;
        for (prop$$28 in props$$14) {
          var v7433 = props$$14[prop$$28];
          introspect(JAM.policy.p3) {
            n$$21.setData(prop$$28, v7433, "end");
          }
        }
      }
      return;
    }
    function v390(n$$20) {
      var prop$$27;
      for (prop$$27 in props$$14) {
        var v7434 = props$$14[prop$$27];
        introspect(JAM.policy.p3) {
          n$$20.setData(prop$$27, v7434, "end");
        }
      }
      return;
    }
    var viz$$16 = this.viz;
    var graph$$14 = viz$$16.graph;
    var animation$$1 = this.nodeFxAnimation;
    var v13956 = this.viz;
    var v7435 = v13956.config;
    var v13957 = {"id":false, "properties":{}};
    var v7436 = {"elements":v13957, "reposition":false};
    introspect(JAM.policy.p3) {
      var options$$10 = $$$1.merge(v7435, v7436)
    }
    var v7437 = opt$$17 || {};
    var v13958 = $$$1.empty;
    var v13959 = $$$1.empty;
    var v7438 = {onBeforeCompute:v13958, onAfterCompute:v13959};
    introspect(JAM.policy.p3) {
      opt$$17 = $$$1.merge(options$$10, v7437, v7438);
    }
    introspect(JAM.policy.p3) {
      animation$$1.stopTimer();
    }
    var v7439 = opt$$17.elements;
    var props$$14 = v7439.properties;
    var v18921 = opt$$17.elements;
    var v13960 = v18921.id;
    var v7441 = !v13960;
    if (v7441) {
      introspect(JAM.policy.p3) {
        graph$$14.eachNode(v390);
      }
    } else {
      var v13961 = opt$$17.elements;
      var v7440 = v13961.id;
      introspect(JAM.policy.p3) {
        var ids = $$$1.splat(v7440)
      }
      introspect(JAM.policy.p3) {
        $$$1.each(ids, v391);
      }
    }
    var propnames = [];
    var prop$$26;
    for (prop$$26 in props$$14) {
      introspect(JAM.policy.p3) {
        propnames.push(prop$$26);
      }
    }
    introspect(JAM.policy.p3) {
      var v13962 = propnames.join(":")
    }
    var v7442 = "node-property:" + v13962;
    var modes$$3 = [v7442];
    var v7443 = opt$$17.reposition;
    if (v7443) {
      introspect(JAM.policy.p3) {
        modes$$3.push("linear");
      }
      introspect(JAM.policy.p3) {
        viz$$16.compute("end");
      }
    }
    var v13963 = {modes:modes$$3, type:"nodefx"};
    introspect(JAM.policy.p3) {
      var v7444 = $$$1.merge(opt$$17, v13963)
    }
    introspect(JAM.policy.p3) {
      this.animate(v7444);
    }
    return;
  }
  function v389(opt$$16, versor) {
    function v388() {
      var v7446 = opt$$16.hideLabels;
      if (v7446) {
        var v7445 = that$$15.labels;
        introspect(JAM.policy.p3) {
          v7445.hideLabels(false);
        }
      }
      introspect(JAM.policy.p3) {
        that$$15.plot(opt$$16);
      }
      introspect(JAM.policy.p3) {
        opt$$16.onComplete();
      }
      return;
    }
    function v387(delta$$19) {
      function v386(node$$40) {
        var p$$18;
        for (p$$18 in m$$3) {
          var v7447 = m$$3[p$$18];
          introspect(JAM.policy.p3) {
            interp[p$$18](node$$40, v7447, delta$$19, versor);
          }
        }
        return;
      }
      introspect(JAM.policy.p3) {
        graph$$13.eachNode(v386);
      }
      var v7448 = this.$animating;
      introspect(JAM.policy.p3) {
        that$$15.plot(opt$$16, v7448, delta$$19);
      }
      this.$animating = true;
      return;
    }
    var v13964 = this.viz;
    var v7449 = v13964.config;
    var v7450 = opt$$16 || {};
    introspect(JAM.policy.p3) {
      opt$$16 = $$$1.merge(v7449, v7450);
    }
    var that$$15 = this;
    var viz$$15 = this.viz;
    var graph$$13 = viz$$15.graph;
    var interp = this.Interpolator;
    var v7451;
    var v18922 = opt$$16.type;
    var v13965 = v18922 === "nodefx";
    if (v13965) {
      v7451 = this.nodeFxAnimation;
    } else {
      v7451 = this.animation;
    }
    var animation = v7451;
    var v7452 = opt$$16.modes;
    introspect(JAM.policy.p3) {
      var m$$3 = this.prepare(v7452)
    }
    var v7454 = opt$$16.hideLabels;
    if (v7454) {
      var v7453 = this.labels;
      introspect(JAM.policy.p3) {
        v7453.hideLabels(true);
      }
    }
    var v18923 = {$animating:false, compute:v387, complete:v388};
    introspect(JAM.policy.p3) {
      var v13966 = $$$1.extend(opt$$16, v18923)
    }
    introspect(JAM.policy.p3) {
      var v7455 = animation.setOptions(v13966)
    }
    introspect(JAM.policy.p3) {
      v7455.start();
    }
    return;
  }
  function v385(modes$$2) {
    function v384(node$$39) {
      function v383(p$$17) {
        function v382(adj$$14) {
          var i$$48 = 0;
          var l$$18 = prop$$25.length;
          var v7459 = i$$48 < l$$18;
          for (;v7459;) {
            var v13967 = accessors[p$$17];
            var v7456 = v13967.setter;
            var v7457 = prop$$25[i$$48];
            var v18924 = accessors[p$$17];
            var v13968 = v18924.getter;
            var v13969 = prop$$25[i$$48];
            introspect(JAM.policy.p3) {
              var v7458 = adj$$14[v13968](v13969)
            }
            introspect(JAM.policy.p3) {
              adj$$14[v7456](v7457, v7458, "start");
            }
            i$$48++;
            v7459 = i$$48 < l$$18;
          }
          return;
        }
        var v7460 = p$$17 in m$$2;
        if (v7460) {
          var prop$$25 = m$$2[p$$17];
          introspect(JAM.policy.p3) {
            node$$39.eachAdjacency(v382);
          }
        }
        return;
      }
      function v381(p$$16) {
        var v7465 = p$$16 in m$$2;
        if (v7465) {
          var prop$$24 = m$$2[p$$16];
          var i$$47 = 0;
          var l$$17 = prop$$24.length;
          var v7464 = i$$47 < l$$17;
          for (;v7464;) {
            var v13970 = accessors[p$$16];
            var v7461 = v13970.setter;
            var v7462 = prop$$24[i$$47];
            var v18925 = accessors[p$$16];
            var v13971 = v18925.getter;
            var v13972 = prop$$24[i$$47];
            introspect(JAM.policy.p3) {
              var v7463 = node$$39[v13971](v13972)
            }
            introspect(JAM.policy.p3) {
              node$$39[v7461](v7462, v7463, "start");
            }
            i$$47++;
            v7464 = i$$47 < l$$17;
          }
        }
        return;
      }
      var v7466 = node$$39.startPos;
      var v7467 = node$$39.pos;
      introspect(JAM.policy.p3) {
        v7466.set(v7467);
      }
      var v7468 = ["node-property", "node-style"];
      introspect(JAM.policy.p3) {
        $$$1.each(v7468, v381);
      }
      var v7469 = ["edge-property", "edge-style"];
      introspect(JAM.policy.p3) {
        $$$1.each(v7469, v383);
      }
      return;
    }
    var v7470 = this.viz;
    var graph$$12 = v7470.graph;
    var v7471 = {"getter":"getData", "setter":"setData"};
    var v7472 = {"getter":"getData", "setter":"setData"};
    var v7473 = {"getter":"getCanvasStyle", "setter":"setCanvasStyle"};
    var v7474 = {"getter":"getCanvasStyle", "setter":"setCanvasStyle"};
    var accessors = {"node-property":v7471, "edge-property":v7472, "node-style":v7473, "edge-style":v7474};
    var m$$2 = {};
    introspect(JAM.policy.p3) {
      var v13973 = $$$1.type(modes$$2)
    }
    var v7482 = v13973 == "array";
    if (v7482) {
      var i$$46 = 0;
      var len$$4 = modes$$2.length;
      var v7477 = i$$46 < len$$4;
      for (;v7477;) {
        var v7475 = modes$$2[i$$46];
        introspect(JAM.policy.p3) {
          var elems = v7475.split(":")
        }
        introspect(JAM.policy.p3) {
          var v7476 = elems.shift()
        }
        introspect(JAM.policy.p2) {
          m$$2[v7476] = elems;
        }
        i$$46++;
        v7477 = i$$46 < len$$4;
      }
    } else {
      var p$$15;
      for (p$$15 in modes$$2) {
        var v7481 = p$$15 == "position";
        if (v7481) {
          var v7478 = modes$$2.position;
          introspect(JAM.policy.p2) {
            m$$2[v7478] = [];
          }
        } else {
          var v7479 = m$$2;
          var v7480 = p$$15;
          var v13974 = modes$$2[p$$15];
          introspect(JAM.policy.p3) {
            var v31181 = $$$1.splat(v13974)
          }
          introspect(JAM.policy.p2) {
            v7479[v7480] = v31181;
          }
        }
      }
    }
    introspect(JAM.policy.p3) {
      graph$$12.eachNode(v384);
    }
    return m$$2;
  }
  function v380(options$$9) {
    function v379() {
      introspect(JAM.policy.p3) {
        var v7483 = options$$9.condition()
      }
      if (v7483) {
        introspect(JAM.policy.p3) {
          options$$9.step();
        }
      } else {
        clearInterval(interval);
        introspect(JAM.policy.p3) {
          options$$9.onComplete();
        }
      }
      var v7484 = that$$14.viz;
      introspect(JAM.policy.p3) {
        v7484.refresh(true);
      }
      return;
    }
    var that$$14 = this;
    introspect(JAM.policy.p3) {
      var v13975 = $$$1.lambda(false)
    }
    var v13976 = $$$1.empty;
    var v13977 = $$$1.empty;
    var v7485 = {condition:v13975, step:v13976, onComplete:v13977, duration:200};
    var v7486 = options$$9 || {};
    introspect(JAM.policy.p3) {
      options$$9 = $$$1.merge(v7485, v7486);
    }
    var v7487 = options$$9.duration;
    var interval = setInterval(v379, v7487);
    return;
  }
  function v378(elem$$47, prop$$23, delta$$18, getter$$5, setter$$5) {
    function v377() {
      var v7488 = $jit.Complex;
      return new v7488(0, 0);
    }
    introspect(JAM.policy.p3) {
      var from$$9 = elem$$47[getter$$5](prop$$23, "start")
    }
    introspect(JAM.policy.p3) {
      var to$$10 = elem$$47[getter$$5](prop$$23, "end")
    }
    var cur$$2 = [];
    var v18926 = from$$9.offset;
    var v13978 = typeof v18926;
    var v7500 = v13978 == "undefined";
    if (v7500) {
      var v7499 = from$$9 === 0;
      if (v7499) {
        introspect(JAM.policy.p3) {
          from$$9 = $$$1.map(to$$10, v377);
        }
        from$$9.offset = 0;
      } else {
        var v13979 = from$$9.length;
        var v7490 = v13979 == 0;
        if (v7490) {
          var v13980 = $jit.Complex;
          var v7489 = new v13980(0, 0);
          introspect(JAM.policy.p3) {
            from$$9.push(v7489);
          }
        }
        var v13981 = from$$9.length;
        var v13982 = to$$10.length;
        var v7492 = v13981 < v13982;
        for (;v7492;) {
          var v7491 = from$$9[0];
          introspect(JAM.policy.p3) {
            from$$9.push(v7491);
          }
          var v13983 = from$$9.length;
          var v13984 = to$$10.length;
          v7492 = v13983 < v13984;
        }
        var v13985 = from$$9.length;
        var v13986 = to$$10.length;
        var v7494 = v13985 > v13986;
        for (;v7494;) {
          var v13987 = to$$10[0];
          var v18928 = !v13987;
          if (v18928) {
            var v18927 = $jit.Complex;
            v13987 = new v18927(0, 0);
          }
          var v7493 = v13987;
          introspect(JAM.policy.p3) {
            to$$10.push(v7493);
          }
          var v13988 = from$$9.length;
          var v13989 = to$$10.length;
          v7494 = v13988 > v13989;
        }
        var v13990 = from$$9.length;
        var v7495 = v13990 == 0;
        if (v7495) {
          return;
        }
        var l$$16 = from$$9.length;
        var minDist = 1E300;
        var offset$$9 = 0;
        var v7498 = offset$$9 < l$$16;
        for (;v7498;) {
          var d$$3 = 0;
          var i$$45 = 0;
          var v7496 = i$$45 < l$$16;
          for (;v7496;) {
            var v13991 = d$$3;
            var v26150 = offset$$9 + i$$45;
            var v23846 = v26150 % l$$16;
            var v18929 = from$$9[v23846];
            var v18930 = to$$10[i$$45];
            introspect(JAM.policy.p3) {
              var v13992 = Geometry.dist2(v18929, v18930)
            }
            d$$3 = v13991 + v13992;
            i$$45++;
            v7496 = i$$45 < l$$16;
          }
          var v7497 = d$$3 < minDist;
          if (v7497) {
            from$$9.offset = offset$$9;
            minDist = d$$3;
          }
          offset$$9++;
          v7498 = offset$$9 < l$$16;
        }
      }
    }
    i$$45 = 0;
    l$$16 = from$$9.length;
    var v7503 = i$$45 < l$$16;
    for (;v7503;) {
      var v18931 = from$$9.offset;
      var v13993 = i$$45 + v18931;
      var v7501 = v13993 % l$$16;
      var fromi$$1 = from$$9[v7501];
      var toi$$1 = to$$10[i$$45];
      var v13994 = $jit.Complex;
      var v18932 = fromi$$1.x;
      var v18933 = toi$$1.x;
      introspect(JAM.policy.p3) {
        var v13995 = this.compute(v18932, v18933, delta$$18)
      }
      var v18934 = fromi$$1.y;
      var v18935 = toi$$1.y;
      introspect(JAM.policy.p3) {
        var v13996 = this.compute(v18934, v18935, delta$$18)
      }
      var v7502 = new v13994(v13995, v13996);
      introspect(JAM.policy.p3) {
        cur$$2.push(v7502);
      }
      i$$45++;
      v7503 = i$$45 < l$$16;
    }
    introspect(JAM.policy.p3) {
      elem$$47[setter$$5](prop$$23, cur$$2);
    }
    return;
  }
  function v376(elem$$46, props$$13, delta$$17) {
    introspect(JAM.policy.p3) {
      this["edge"](elem$$46, props$$13, delta$$17, "canvas", "getCanvasStyle", "setCanvasStyle");
    }
    return;
  }
  function v375(elem$$45, props$$12, delta$$16) {
    introspect(JAM.policy.p3) {
      this["node"](elem$$45, props$$12, delta$$16, "canvas", "getCanvasStyle", "setCanvasStyle");
    }
    return;
  }
  function v374(elem$$44, props$$11, delta$$15) {
    introspect(JAM.policy.p3) {
      this["node"](elem$$44, props$$11, delta$$15, "label", "getLabelData", "setLabelData");
    }
    return;
  }
  function v373(elem$$43, props$$10, delta$$14) {
    introspect(JAM.policy.p3) {
      this["edge"](elem$$43, props$$10, delta$$14, "map", "getData", "setData");
    }
    return;
  }
  function v372(elem$$42, props$$9, delta$$13) {
    introspect(JAM.policy.p3) {
      this["node"](elem$$42, props$$9, delta$$13, "map", "getData", "setData");
    }
    return;
  }
  function v371(elem$$41, props$$8, delta$$12, mapKey, getter$$4, setter$$4) {
    var adjs$$1 = elem$$41.adjacencies;
    var id$$20;
    for (id$$20 in adjs$$1) {
      var v7504 = adjs$$1[id$$20];
      introspect(JAM.policy.p3) {
        this["node"](v7504, props$$8, delta$$12, mapKey, getter$$4, setter$$4);
      }
    }
    return;
  }
  function v370(elem$$40, props$$7, delta$$11, map, getter$$3, setter$$3) {
    map = this[map];
    if (props$$7) {
      var len$$3 = props$$7.length;
      var i$$44 = 0;
      var v7506 = i$$44 < len$$3;
      for (;v7506;) {
        var pi$$1 = props$$7[i$$44];
        var v7505 = map[pi$$1];
        introspect(JAM.policy.p3) {
          this[v7505](elem$$40, pi$$1, delta$$11, getter$$3, setter$$3);
        }
        i$$44++;
        v7506 = i$$44 < len$$3;
      }
    } else {
      for (pi$$1 in map) {
        var v7507 = map[pi$$1];
        introspect(JAM.policy.p3) {
          this[v7507](elem$$40, pi$$1, delta$$11, getter$$3, setter$$3);
        }
      }
    }
    return;
  }
  function v369(elem$$39, prop$$22, delta$$10, getter$$2, setter$$2) {
    introspect(JAM.policy.p3) {
      var from$$8 = elem$$39[getter$$2](prop$$22, "start")
    }
    introspect(JAM.policy.p3) {
      var to$$9 = elem$$39[getter$$2](prop$$22, "end")
    }
    var cur$$1 = [];
    var i$$43 = 0;
    var l$$15 = from$$8.length;
    var v7512 = i$$43 < l$$15;
    for (;v7512;) {
      var fromi = from$$8[i$$43];
      var toi = to$$9[i$$43];
      var v7511 = fromi.length;
      if (v7511) {
        var j$$3 = 0;
        var len$$2 = fromi.length;
        var curi = [];
        var v7509 = j$$3 < len$$2;
        for (;v7509;) {
          var v13997 = fromi[j$$3];
          var v13998 = toi[j$$3];
          introspect(JAM.policy.p3) {
            var v7508 = this.compute(v13997, v13998, delta$$10)
          }
          introspect(JAM.policy.p3) {
            curi.push(v7508);
          }
          j$$3++;
          v7509 = j$$3 < len$$2;
        }
        introspect(JAM.policy.p3) {
          cur$$1.push(curi);
        }
      } else {
        introspect(JAM.policy.p3) {
          var v7510 = this.compute(fromi, toi, delta$$10)
        }
        introspect(JAM.policy.p3) {
          cur$$1.push(v7510);
        }
      }
      i$$43++;
      v7512 = i$$43 < l$$15;
    }
    introspect(JAM.policy.p3) {
      elem$$39[setter$$2](prop$$22, cur$$1);
    }
    return;
  }
  function v368(elem$$38, prop$$21, delta$$9, getter$$1, setter$$1) {
    introspect(JAM.policy.p3) {
      var v7513 = elem$$38[getter$$1](prop$$21, "start")
    }
    introspect(JAM.policy.p3) {
      var from$$7 = $$$1.hexToRgb(v7513)
    }
    introspect(JAM.policy.p3) {
      var v7514 = elem$$38[getter$$1](prop$$21, "end")
    }
    introspect(JAM.policy.p3) {
      var to$$8 = $$$1.hexToRgb(v7514)
    }
    var comp = this.compute;
    var v23847 = from$$7[0];
    var v23848 = to$$8[0];
    introspect(JAM.policy.p3) {
      var v18936 = comp(v23847, v23848, delta$$9)
    }
    var v13999 = parseInt(v18936);
    var v23849 = from$$7[1];
    var v23850 = to$$8[1];
    introspect(JAM.policy.p3) {
      var v18937 = comp(v23849, v23850, delta$$9)
    }
    var v14000 = parseInt(v18937);
    var v23851 = from$$7[2];
    var v23852 = to$$8[2];
    introspect(JAM.policy.p3) {
      var v18938 = comp(v23851, v23852, delta$$9)
    }
    var v14001 = parseInt(v18938);
    var v7515 = [v13999, v14000, v14001];
    introspect(JAM.policy.p3) {
      var val$$5 = $$$1.rgbToHex(v7515)
    }
    introspect(JAM.policy.p3) {
      elem$$38[setter$$1](prop$$21, val$$5);
    }
    return;
  }
  function v367(elem$$37, prop$$20, delta$$8, getter, setter) {
    introspect(JAM.policy.p3) {
      var from$$6 = elem$$37[getter](prop$$20, "start")
    }
    introspect(JAM.policy.p3) {
      var to$$7 = elem$$37[getter](prop$$20, "end")
    }
    introspect(JAM.policy.p3) {
      var v7516 = this.compute(from$$6, to$$7, delta$$8)
    }
    introspect(JAM.policy.p3) {
      elem$$37[setter](prop$$20, v7516);
    }
    return;
  }
  function v366(elem$$36, props$$6, delta$$7) {
    var v7517 = elem$$36.startPos;
    introspect(JAM.policy.p3) {
      var from$$5 = v7517.getp(true)
    }
    var v7518 = elem$$36.endPos;
    introspect(JAM.policy.p3) {
      var to$$6 = v7518.getp()
    }
    introspect(JAM.policy.p3) {
      var ans$$9 = to$$6.interpolate(from$$5, delta$$7)
    }
    var v7519 = elem$$36.pos;
    var v7520 = ans$$9.theta;
    var v7521 = ans$$9.rho;
    introspect(JAM.policy.p3) {
      v7519.setp(v7520, v7521);
    }
    return;
  }
  function v365(elem$$35, props$$5, delta$$6) {
    var v7522 = elem$$35.startPos;
    introspect(JAM.policy.p3) {
      var from$$4 = v7522.getc(true)
    }
    var v7523 = elem$$35.endPos;
    introspect(JAM.policy.p3) {
      var to$$5 = v7523.getc(true)
    }
    var v7524 = elem$$35.pos;
    var v14002 = from$$4.x;
    var v14003 = to$$5.x;
    introspect(JAM.policy.p3) {
      var v7525 = this.compute(v14002, v14003, delta$$6)
    }
    var v14004 = from$$4.y;
    var v14005 = to$$5.y;
    introspect(JAM.policy.p3) {
      var v7526 = this.compute(v14004, v14005, delta$$6)
    }
    introspect(JAM.policy.p3) {
      v7524.setc(v7525, v7526);
    }
    return;
  }
  function v364(elem$$34, props$$4, delta$$5, vector) {
    var v7527 = -delta$$5;
    introspect(JAM.policy.p3) {
      var v$$2 = vector.scale(v7527)
    }
    introspect(JAM.policy.p3) {
      var v14006 = v$$2.norm()
    }
    var v7532 = v14006 < 1;
    if (v7532) {
      var x$$65 = v$$2.x;
      var y$$46 = v$$2.y;
      var v14007 = elem$$34.startPos;
      introspect(JAM.policy.p3) {
        var v7528 = v14007.getc()
      }
      introspect(JAM.policy.p3) {
        var ans$$8 = v7528.moebiusTransformation(v$$2)
      }
      var v7529 = elem$$34.pos;
      var v7530 = ans$$8.x;
      var v7531 = ans$$8.y;
      introspect(JAM.policy.p3) {
        v7529.setc(v7530, v7531);
      }
      v$$2.x = x$$65;
      v$$2.y = y$$46;
    }
    return;
  }
  function v363(from$$3, to$$4, delta$$4) {
    var v14008 = to$$4 - from$$3;
    var v7533 = v14008 * delta$$4;
    return from$$3 + v7533;
  }
  function v362(viz$$14, klass$$6) {
    this.viz = viz$$14;
    this.config = viz$$14.config;
    var v7534 = viz$$14.config;
    this.node = v7534.Node;
    var v7535 = viz$$14.config;
    this.edge = v7535.Edge;
    var v31182 = new Animation;
    this.animation = v31182;
    var v14009 = klass$$6.Plot;
    var v7536 = v14009.NodeTypes;
    var v31183 = new v7536;
    this.nodeTypes = v31183;
    var v14010 = klass$$6.Plot;
    var v7537 = v14010.EdgeTypes;
    var v31184 = new v7537;
    this.edgeTypes = v31184;
    this.labels = viz$$14.labels;
    return;
  }
  function v361(from$$2, to$$3, r$$1, canvas$$16) {
    function computeArcThroughTwoPoints(p1, p2) {
      var v14011 = p1.x;
      var v14012 = p2.y;
      var v7538 = v14011 * v14012;
      var v14013 = p1.y;
      var v14014 = p2.x;
      var v7539 = v14013 * v14014;
      var aDen = v7538 - v7539;
      var bDen = aDen;
      introspect(JAM.policy.p3) {
        var sq1 = p1.squaredNorm()
      }
      introspect(JAM.policy.p3) {
        var sq2 = p2.squaredNorm()
      }
      var v7540 = aDen == 0;
      if (v7540) {
        return {x:0, y:0, ratio:-1};
      }
      var v26151 = p1.y;
      var v23853 = v26151 * sq2;
      var v26152 = p2.y;
      var v23854 = v26152 * sq1;
      var v18939 = v23853 - v23854;
      var v18940 = p1.y;
      var v14015 = v18939 + v18940;
      var v14016 = p2.y;
      var v7541 = v14015 - v14016;
      var a$$6 = v7541 / aDen;
      var v26153 = p2.x;
      var v23855 = v26153 * sq1;
      var v26154 = p1.x;
      var v23856 = v26154 * sq2;
      var v18941 = v23855 - v23856;
      var v18942 = p2.x;
      var v14017 = v18941 + v18942;
      var v14018 = p1.x;
      var v7542 = v14017 - v14018;
      var b$$4 = v7542 / bDen;
      var v7543 = -a$$6;
      var x$$64 = v7543 / 2;
      var v7544 = -b$$4;
      var y$$45 = v7544 / 2;
      var v18943 = a$$6 * a$$6;
      var v18944 = b$$4 * b$$4;
      var v14019 = v18943 + v18944;
      var v7545 = v14019 / 4;
      var squaredRatio = v7545 - 1;
      var v7546 = squaredRatio < 0;
      if (v7546) {
        return {x:0, y:0, ratio:-1};
      }
      introspect(JAM.policy.p3) {
        var ratio = Math.sqrt(squaredRatio)
      }
      var v14020;
      var v18945 = ratio > 1E3;
      if (v18945) {
        v14020 = -1;
      } else {
        v14020 = ratio;
      }
      var v7547 = v14020;
      var out = {x:x$$64, y:y$$45, ratio:v7547, a:a$$6, b:b$$4};
      return out;
    }
    function sense(angleBegin$$1, angleEnd$$1) {
      var v7548;
      var v14023 = angleBegin$$1 < angleEnd$$1;
      if (v14023) {
        var v14021;
        var v26155 = Math.PI;
        var v23857 = angleBegin$$1 + v26155;
        var v18946 = v23857 > angleEnd$$1;
        if (v18946) {
          v14021 = false;
        } else {
          v14021 = true;
        }
        v7548 = v14021;
      } else {
        var v14022;
        var v26156 = Math.PI;
        var v23858 = angleEnd$$1 + v26156;
        var v18947 = v23858 > angleBegin$$1;
        if (v18947) {
          v14022 = true;
        } else {
          v14022 = false;
        }
        v7548 = v14022;
      }
      return v7548;
    }
    introspect(JAM.policy.p3) {
      var ctx$$9 = canvas$$16.getCtx()
    }
    var centerOfCircle = computeArcThroughTwoPoints(from$$2, to$$3);
    var v23859 = centerOfCircle.a;
    var v18948 = v23859 > 1E3;
    var v23861 = !v18948;
    if (v23861) {
      var v23860 = centerOfCircle.b;
      v18948 = v23860 > 1E3;
    }
    var v14024 = v18948;
    var v18950 = !v14024;
    if (v18950) {
      var v18949 = centerOfCircle.ratio;
      v14024 = v18949 < 0;
    }
    var v7560 = v14024;
    if (v7560) {
      introspect(JAM.policy.p3) {
        ctx$$9.beginPath();
      }
      var v14025 = from$$2.x;
      var v7549 = v14025 * r$$1;
      var v14026 = from$$2.y;
      var v7550 = v14026 * r$$1;
      introspect(JAM.policy.p3) {
        ctx$$9.moveTo(v7549, v7550);
      }
      var v14027 = to$$3.x;
      var v7551 = v14027 * r$$1;
      var v14028 = to$$3.y;
      var v7552 = v14028 * r$$1;
      introspect(JAM.policy.p3) {
        ctx$$9.lineTo(v7551, v7552);
      }
      introspect(JAM.policy.p3) {
        ctx$$9.stroke();
      }
    } else {
      var v14029 = to$$3.y;
      var v14030 = centerOfCircle.y;
      var v7553 = v14029 - v14030;
      var v14031 = to$$3.x;
      var v14032 = centerOfCircle.x;
      var v7554 = v14031 - v14032;
      introspect(JAM.policy.p3) {
        var angleBegin = Math.atan2(v7553, v7554)
      }
      var v14033 = from$$2.y;
      var v14034 = centerOfCircle.y;
      var v7555 = v14033 - v14034;
      var v14035 = from$$2.x;
      var v14036 = centerOfCircle.x;
      var v7556 = v14035 - v14036;
      introspect(JAM.policy.p3) {
        var angleEnd = Math.atan2(v7555, v7556)
      }
      introspect(JAM.policy.p3) {
        sense = sense(angleBegin, angleEnd);
      }
      introspect(JAM.policy.p3) {
        ctx$$9.beginPath();
      }
      var v14037 = centerOfCircle.x;
      var v7557 = v14037 * r$$1;
      var v14038 = centerOfCircle.y;
      var v7558 = v14038 * r$$1;
      var v14039 = centerOfCircle.ratio;
      var v7559 = v14039 * r$$1;
      introspect(JAM.policy.p3) {
        ctx$$9.arc(v7557, v7558, v7559, angleBegin, angleEnd, sense);
      }
      introspect(JAM.policy.p3) {
        ctx$$9.stroke();
      }
    }
    return;
  }
  function v360(posFrom$$1, posTo$$1, pos$$29, epsilon$$1) {
    var v7561 = EdgeHelper.line;
    introspect(JAM.policy.p3) {
      return v7561.contains(posFrom$$1, posTo$$1, pos$$29, epsilon$$1);
    }
  }
  function v359(from$$1, to$$2, dim$$7, swap, canvas$$15) {
    introspect(JAM.policy.p3) {
      var ctx$$8 = canvas$$15.getCtx()
    }
    if (swap) {
      var tmp$$1 = from$$1;
      from$$1 = to$$2;
      to$$2 = tmp$$1;
    }
    var v14040 = to$$2.x;
    var v14041 = from$$1.x;
    var v7562 = v14040 - v14041;
    var v14042 = to$$2.y;
    var v14043 = from$$1.y;
    var v7563 = v14042 - v14043;
    var vect = new Complex(v7562, v7563);
    introspect(JAM.policy.p3) {
      var v14044 = vect.norm()
    }
    var v7564 = dim$$7 / v14044;
    introspect(JAM.policy.p3) {
      vect.$scale(v7564);
    }
    var v14045 = to$$2.x;
    var v14046 = vect.x;
    var v7565 = v14045 - v14046;
    var v14047 = to$$2.y;
    var v14048 = vect.y;
    var v7566 = v14047 - v14048;
    var intermediatePoint = new Complex(v7565, v7566);
    var v18951 = vect.y;
    var v14049 = -v18951;
    var v7567 = v14049 / 2;
    var v14050 = vect.x;
    var v7568 = v14050 / 2;
    var normal = new Complex(v7567, v7568);
    introspect(JAM.policy.p3) {
      var v1 = intermediatePoint.add(normal)
    }
    introspect(JAM.policy.p3) {
      var v7569 = normal.$scale(-1)
    }
    introspect(JAM.policy.p3) {
      var v2 = intermediatePoint.$add(v7569)
    }
    introspect(JAM.policy.p3) {
      ctx$$8.beginPath();
    }
    var v7570 = from$$1.x;
    var v7571 = from$$1.y;
    introspect(JAM.policy.p3) {
      ctx$$8.moveTo(v7570, v7571);
    }
    var v7572 = to$$2.x;
    var v7573 = to$$2.y;
    introspect(JAM.policy.p3) {
      ctx$$8.lineTo(v7572, v7573);
    }
    introspect(JAM.policy.p3) {
      ctx$$8.stroke();
    }
    introspect(JAM.policy.p3) {
      ctx$$8.beginPath();
    }
    var v7574 = v1.x;
    var v7575 = v1.y;
    introspect(JAM.policy.p3) {
      ctx$$8.moveTo(v7574, v7575);
    }
    var v7576 = v2.x;
    var v7577 = v2.y;
    introspect(JAM.policy.p3) {
      ctx$$8.lineTo(v7576, v7577);
    }
    var v7578 = to$$2.x;
    var v7579 = to$$2.y;
    introspect(JAM.policy.p3) {
      ctx$$8.lineTo(v7578, v7579);
    }
    introspect(JAM.policy.p3) {
      ctx$$8.closePath();
    }
    introspect(JAM.policy.p3) {
      ctx$$8.fill();
    }
    return;
  }
  function v358(posFrom, posTo, pos$$28, epsilon) {
    var min = Math.min;
    var max = Math.max;
    var v7580 = posFrom.x;
    var v7581 = posTo.x;
    introspect(JAM.policy.p3) {
      var minPosX = min(v7580, v7581)
    }
    var v7582 = posFrom.x;
    var v7583 = posTo.x;
    introspect(JAM.policy.p3) {
      var maxPosX = max(v7582, v7583)
    }
    var v7584 = posFrom.y;
    var v7585 = posTo.y;
    introspect(JAM.policy.p3) {
      var minPosY = min(v7584, v7585)
    }
    var v7586 = posFrom.y;
    var v7587 = posTo.y;
    introspect(JAM.policy.p3) {
      var maxPosY = max(v7586, v7587)
    }
    var v26157 = pos$$28.x;
    var v23862 = v26157 >= minPosX;
    if (v23862) {
      var v26158 = pos$$28.x;
      v23862 = v26158 <= maxPosX;
    }
    var v18952 = v23862;
    if (v18952) {
      var v23863 = pos$$28.y;
      v18952 = v23863 >= minPosY;
    }
    var v14051 = v18952;
    if (v14051) {
      var v18953 = pos$$28.y;
      v14051 = v18953 <= maxPosY;
    }
    var v7592 = v14051;
    if (v7592) {
      var v23864 = posTo.x;
      var v23865 = posFrom.x;
      var v18954 = v23864 - v23865;
      introspect(JAM.policy.p3) {
        var v14052 = Math.abs(v18954)
      }
      var v7588 = v14052 <= epsilon;
      if (v7588) {
        return true;
      }
      var v23866 = posTo.y;
      var v23867 = posFrom.y;
      var v18955 = v23866 - v23867;
      var v23868 = posTo.x;
      var v23869 = posFrom.x;
      var v18956 = v23868 - v23869;
      var v14053 = v18955 / v18956;
      var v18957 = pos$$28.x;
      var v18958 = posFrom.x;
      var v14054 = v18957 - v18958;
      var v7589 = v14053 * v14054;
      var v7590 = posFrom.y;
      var dist = v7589 + v7590;
      var v18959 = pos$$28.y;
      var v14055 = dist - v18959;
      introspect(JAM.policy.p3) {
        var v7591 = Math.abs(v14055)
      }
      return v7591 <= epsilon;
    }
    return false;
  }
  function v357(from, to$$1, canvas$$14) {
    introspect(JAM.policy.p3) {
      var ctx$$7 = canvas$$14.getCtx()
    }
    introspect(JAM.policy.p3) {
      ctx$$7.beginPath();
    }
    var v7593 = from.x;
    var v7594 = from.y;
    introspect(JAM.policy.p3) {
      ctx$$7.moveTo(v7593, v7594);
    }
    var v7595 = to$$1.x;
    var v7596 = to$$1.y;
    introspect(JAM.policy.p3) {
      ctx$$7.lineTo(v7595, v7596);
    }
    introspect(JAM.policy.p3) {
      ctx$$7.stroke();
    }
    return;
  }
  function v356(npos$$5, pos$$27, dim$$6) {
    var v7597 = NodeHelper.circle;
    introspect(JAM.policy.p3) {
      return v7597.contains(npos$$5, pos$$27, dim$$6);
    }
  }
  function v355(type$$53, pos$$26, dim$$5, canvas$$13) {
    introspect(JAM.policy.p3) {
      var ctx$$6 = canvas$$13.getCtx()
    }
    var v7598 = Math.PI;
    var pi5 = v7598 / 5;
    introspect(JAM.policy.p3) {
      ctx$$6.save();
    }
    var v7599 = pos$$26.x;
    var v7600 = pos$$26.y;
    introspect(JAM.policy.p3) {
      ctx$$6.translate(v7599, v7600);
    }
    introspect(JAM.policy.p3) {
      ctx$$6.beginPath();
    }
    introspect(JAM.policy.p3) {
      ctx$$6.moveTo(dim$$5, 0);
    }
    var i$$42 = 0;
    var v7603 = i$$42 < 9;
    for (;v7603;) {
      introspect(JAM.policy.p3) {
        ctx$$6.rotate(pi5);
      }
      var v14056 = i$$42 % 2;
      var v7602 = v14056 == 0;
      if (v7602) {
        var v14057 = dim$$5 / .525731;
        var v7601 = v14057 * .200811;
        introspect(JAM.policy.p3) {
          ctx$$6.lineTo(v7601, 0);
        }
      } else {
        introspect(JAM.policy.p3) {
          ctx$$6.lineTo(dim$$5, 0);
        }
      }
      i$$42++;
      v7603 = i$$42 < 9;
    }
    introspect(JAM.policy.p3) {
      ctx$$6.closePath();
    }
    introspect(JAM.policy.p3) {
      ctx$$6[type$$53]();
    }
    introspect(JAM.policy.p3) {
      ctx$$6.restore();
    }
    return;
  }
  function v354(npos$$4, pos$$25, dim$$4) {
    var v7604 = NodeHelper.circle;
    introspect(JAM.policy.p3) {
      return v7604.contains(npos$$4, pos$$25, dim$$4);
    }
  }
  function v353(type$$52, pos$$24, dim$$3, canvas$$12) {
    introspect(JAM.policy.p3) {
      var ctx$$5 = canvas$$12.getCtx()
    }
    var c1x = pos$$24.x;
    var v7605 = pos$$24.y;
    var c1y = v7605 - dim$$3;
    var c2x = c1x - dim$$3;
    var v7606 = pos$$24.y;
    var c2y = v7606 + dim$$3;
    var c3x = c1x + dim$$3;
    var c3y = c2y;
    introspect(JAM.policy.p3) {
      ctx$$5.beginPath();
    }
    introspect(JAM.policy.p3) {
      ctx$$5.moveTo(c1x, c1y);
    }
    introspect(JAM.policy.p3) {
      ctx$$5.lineTo(c2x, c2y);
    }
    introspect(JAM.policy.p3) {
      ctx$$5.lineTo(c3x, c3y);
    }
    introspect(JAM.policy.p3) {
      ctx$$5.closePath();
    }
    introspect(JAM.policy.p3) {
      ctx$$5[type$$52]();
    }
    return;
  }
  function v352(npos$$3, pos$$23, width$$19, height$$18) {
    var v23870 = pos$$23.x;
    var v23871 = npos$$3.x;
    var v18960 = v23870 - v23871;
    introspect(JAM.policy.p3) {
      var v14058 = Math.abs(v18960)
    }
    var v14059 = width$$19 / 2;
    var v7607 = v14058 <= v14059;
    if (v7607) {
      var v23872 = pos$$23.y;
      var v23873 = npos$$3.y;
      var v18961 = v23872 - v23873;
      introspect(JAM.policy.p3) {
        var v14060 = Math.abs(v18961)
      }
      var v14061 = height$$18 / 2;
      v7607 = v14060 <= v14061;
    }
    return v7607;
  }
  function v351(type$$51, pos$$22, width$$18, height$$17, canvas$$11) {
    introspect(JAM.policy.p3) {
      var v7608 = canvas$$11.getCtx()
    }
    var v7609 = type$$51 + "Rect";
    var v14062 = pos$$22.x;
    var v14063 = width$$18 / 2;
    var v7610 = v14062 - v14063;
    var v14064 = pos$$22.y;
    var v14065 = height$$17 / 2;
    var v7611 = v14064 - v14065;
    introspect(JAM.policy.p3) {
      v7608[v7609](v7610, v7611, width$$18, height$$17);
    }
    return;
  }
  function v350(npos$$2, pos$$21, dim$$2) {
    var v23874 = pos$$21.x;
    var v23875 = npos$$2.x;
    var v18962 = v23874 - v23875;
    introspect(JAM.policy.p3) {
      var v14066 = Math.abs(v18962)
    }
    var v7612 = v14066 <= dim$$2;
    if (v7612) {
      var v23876 = pos$$21.y;
      var v23877 = npos$$2.y;
      var v18963 = v23876 - v23877;
      introspect(JAM.policy.p3) {
        var v14067 = Math.abs(v18963)
      }
      v7612 = v14067 <= dim$$2;
    }
    return v7612;
  }
  function v349(type$$50, pos$$20, dim$$1, canvas$$10) {
    introspect(JAM.policy.p3) {
      var v7613 = canvas$$10.getCtx()
    }
    var v7614 = type$$50 + "Rect";
    var v14068 = pos$$20.x;
    var v7615 = v14068 - dim$$1;
    var v14069 = pos$$20.y;
    var v7616 = v14069 - dim$$1;
    var v7617 = 2 * dim$$1;
    var v7618 = 2 * dim$$1;
    introspect(JAM.policy.p3) {
      v7613[v7614](v7615, v7616, v7617, v7618);
    }
    return;
  }
  function v348(npos$$1, pos$$19, width$$17, height$$16) {
    var radius$$5 = 0;
    var scalex$$1 = 1;
    var scaley$$1 = 1;
    var diffx$$1 = 0;
    var diffy$$1 = 0;
    var diff$$2 = 0;
    var v7619 = width$$17 > height$$16;
    if (v7619) {
      radius$$5 = width$$17 / 2;
      scaley$$1 = height$$16 / width$$17;
    } else {
      radius$$5 = height$$16 / 2;
      scalex$$1 = width$$17 / height$$16;
    }
    var v14070 = npos$$1.x;
    var v14071 = pos$$19.x;
    var v7620 = v14070 - v14071;
    var v7621 = 1 / scalex$$1;
    diffx$$1 = v7620 * v7621;
    var v14072 = npos$$1.y;
    var v14073 = pos$$19.y;
    var v7622 = v14072 - v14073;
    var v7623 = 1 / scaley$$1;
    diffy$$1 = v7622 * v7623;
    var v7624 = diffx$$1 * diffx$$1;
    var v7625 = diffy$$1 * diffy$$1;
    diff$$2 = v7624 + v7625;
    var v7626 = radius$$5 * radius$$5;
    return diff$$2 <= v7626;
  }
  function v347(type$$49, pos$$18, width$$16, height$$15, canvas$$9) {
    introspect(JAM.policy.p3) {
      var ctx$$4 = canvas$$9.getCtx()
    }
    var scalex = 1;
    var scaley = 1;
    var scaleposx = 1;
    var scaleposy = 1;
    var radius$$4 = 0;
    var v7627 = width$$16 > height$$15;
    if (v7627) {
      radius$$4 = width$$16 / 2;
      scaley = height$$15 / width$$16;
      scaleposy = width$$16 / height$$15;
    } else {
      radius$$4 = height$$15 / 2;
      scalex = width$$16 / height$$15;
      scaleposx = height$$15 / width$$16;
    }
    introspect(JAM.policy.p3) {
      ctx$$4.save();
    }
    introspect(JAM.policy.p3) {
      ctx$$4.scale(scalex, scaley);
    }
    introspect(JAM.policy.p3) {
      ctx$$4.beginPath();
    }
    var v14074 = pos$$18.x;
    var v7628 = v14074 * scaleposx;
    var v14075 = pos$$18.y;
    var v7629 = v14075 * scaleposy;
    var v14076 = Math.PI;
    var v7630 = v14076 * 2;
    introspect(JAM.policy.p3) {
      ctx$$4.arc(v7628, v7629, radius$$4, 0, v7630, true);
    }
    introspect(JAM.policy.p3) {
      ctx$$4.closePath();
    }
    introspect(JAM.policy.p3) {
      ctx$$4[type$$49]();
    }
    introspect(JAM.policy.p3) {
      ctx$$4.restore();
    }
    return;
  }
  function v346(npos, pos$$17, radius$$3) {
    var v7631 = npos.x;
    var v7632 = pos$$17.x;
    var diffx = v7631 - v7632;
    var v7633 = npos.y;
    var v7634 = pos$$17.y;
    var diffy = v7633 - v7634;
    var v7635 = diffx * diffx;
    var v7636 = diffy * diffy;
    var diff$$1 = v7635 + v7636;
    var v7637 = radius$$3 * radius$$3;
    return diff$$1 <= v7637;
  }
  function v345(type$$48, pos$$16, radius$$2, canvas$$8) {
    introspect(JAM.policy.p3) {
      var ctx$$3 = canvas$$8.getCtx()
    }
    introspect(JAM.policy.p3) {
      ctx$$3.beginPath();
    }
    var v7638 = pos$$16.x;
    var v7639 = pos$$16.y;
    var v14077 = Math.PI;
    var v7640 = v14077 * 2;
    introspect(JAM.policy.p3) {
      ctx$$3.arc(v7638, v7639, radius$$2, 0, v7640, true);
    }
    introspect(JAM.policy.p3) {
      ctx$$3.closePath();
    }
    introspect(JAM.policy.p3) {
      ctx$$3[type$$48]();
    }
    return;
  }
  function v344(graph$$11) {
    function v343(elem$$33) {
      function v342(adj$$13) {
        var v7641 = viz$$13.graph;
        var v14078 = adj$$13.nodeFrom;
        var v7642 = v14078.id;
        introspect(JAM.policy.p3) {
          var nodeFrom$$2 = v7641.getNode(v7642)
        }
        var v7643 = viz$$13.graph;
        var v14079 = adj$$13.nodeTo;
        var v7644 = v14079.id;
        introspect(JAM.policy.p3) {
          var nodeTo$$2 = v7643.getNode(v7644)
        }
        introspect(JAM.policy.p3) {
          var v14080 = nodeFrom$$2.adjacentTo(nodeTo$$2)
        }
        var v7648 = !v14080;
        if (v7648) {
          var v7645 = viz$$13.graph;
          var v7646 = adj$$13.data;
          introspect(JAM.policy.p3) {
            adj$$13 = v7645.addAdjacence(nodeFrom$$2, nodeTo$$2, v7646);
          }
          var v18964 = nodeFrom$$2.startAlpha;
          var v18965 = nodeFrom$$2.endAlpha;
          var v14081 = v18964 == v18965;
          if (v14081) {
            var v18966 = nodeTo$$2.startAlpha;
            var v18967 = nodeTo$$2.endAlpha;
            v14081 = v18966 == v18967;
          }
          var v7647 = v14081;
          if (v7647) {
            fadeEdges$$2 = true;
            introspect(JAM.policy.p3) {
              adj$$13.setData("alpha", 0);
            }
            introspect(JAM.policy.p3) {
              adj$$13.setData("alpha", 0, "start");
            }
            introspect(JAM.policy.p3) {
              adj$$13.setData("alpha", 1, "end");
            }
          }
        }
        return;
      }
      introspect(JAM.policy.p3) {
        elem$$33.eachAdjacency(v342);
      }
      return;
    }
    function v341(elem$$32) {
      var v18968 = viz$$13.graph;
      var v18969 = elem$$32.id;
      introspect(JAM.policy.p3) {
        var v14082 = v18968.hasNode(v18969)
      }
      var v7652 = !v14082;
      if (v7652) {
        var v7649 = viz$$13.graph;
        introspect(JAM.policy.p3) {
          v7649.addNode(elem$$32);
        }
        var v7650 = viz$$13.graph;
        var v7651 = elem$$32.id;
        introspect(JAM.policy.p3) {
          var n$$19 = v7650.getNode(v7651)
        }
        introspect(JAM.policy.p3) {
          n$$19.setData("alpha", 0);
        }
        introspect(JAM.policy.p3) {
          n$$19.setData("alpha", 0, "start");
        }
        introspect(JAM.policy.p3) {
          n$$19.setData("alpha", 1, "end");
        }
      }
      return;
    }
    var viz$$13 = this.viz;
    introspect(JAM.policy.p3) {
      graph$$11.eachNode(v341);
    }
    var fadeEdges$$2 = false;
    introspect(JAM.policy.p3) {
      graph$$11.eachNode(v343);
    }
    return fadeEdges$$2;
  }
  function v340(node$$38, opt$$15) {
    function subn$$2(n$$18) {
      function v339(ch$$8) {
        delete ch$$8.ignore;
        var v14083;
        var v23878 = opt$$15.type;
        var v18970 = v23878 == "animate";
        if (v18970) {
          v14083 = "end";
        } else {
          v14083 = "current";
        }
        var v7653 = v14083;
        introspect(JAM.policy.p3) {
          ch$$8.setData("alpha", 1, v7653);
        }
        subn$$2(ch$$8);
        return;
      }
      introspect(JAM.policy.p3) {
        n$$18.eachSubnode(v339);
      }
      return;
    }
    var v14084 = "collapsed" in node$$38;
    var v7654 = !v14084;
    if (v7654) {
      return;
    }
    var viz$$12 = this.viz;
    var v7655 = this.options;
    var v7656 = viz$$12.config;
    var v7657 = opt$$15 || {};
    var v14085 = ["node-property:alpha:span", "linear"];
    var v7658 = {"modes":v14085};
    introspect(JAM.policy.p3) {
      opt$$15 = $$$1.merge(v7655, v7656, v7657, v7658);
    }
    delete node$$38.collapsed;
    subn$$2(node$$38);
    var v14086 = opt$$15.type;
    var v7664 = v14086 == "animate";
    if (v7664) {
      introspect(JAM.policy.p3) {
        viz$$12.compute("end");
      }
      var v7661 = viz$$12.rotated;
      if (v7661) {
        var v7659 = viz$$12.rotated;
        var v7660 = {"property":"end"};
        introspect(JAM.policy.p3) {
          viz$$12.rotate(v7659, "none", v7660);
        }
      }
      var v7662 = viz$$12.fx;
      introspect(JAM.policy.p3) {
        v7662.animate(opt$$15);
      }
    } else {
      var v14087 = opt$$15.type;
      var v7663 = v14087 == "replot";
      if (v7663) {
        introspect(JAM.policy.p3) {
          viz$$12.refresh();
        }
      }
    }
    return;
  }
  function v338(node$$37, opt$$14) {
    function subn$$1(n$$17) {
      function v337(ch$$7) {
        introspect(JAM.policy.p3) {
          var v7665 = node$$37.getPos("end")
        }
        introspect(JAM.policy.p3) {
          ch$$7.setPos(v7665, "end");
        }
        subn$$1(ch$$7);
        return;
      }
      introspect(JAM.policy.p3) {
        n$$17.eachSubnode(v337);
      }
      return;
    }
    function subn(n$$16) {
      function v336(ch$$6) {
        ch$$6.ignore = true;
        var v14088;
        var v23879 = opt$$14.type;
        var v18971 = v23879 == "animate";
        if (v18971) {
          v14088 = "end";
        } else {
          v14088 = "current";
        }
        var v7666 = v14088;
        introspect(JAM.policy.p3) {
          ch$$6.setData("alpha", 0, v7666);
        }
        subn(ch$$6);
        return;
      }
      introspect(JAM.policy.p3) {
        n$$16.eachSubnode(v336);
      }
      return;
    }
    var viz$$11 = this.viz;
    var v14089 = node$$37.collapsed;
    var v18973 = !v14089;
    if (v18973) {
      introspect(JAM.policy.p3) {
        var v23880 = $$$1.lambda(true)
      }
      introspect(JAM.policy.p3) {
        var v18972 = node$$37.anySubnode(v23880)
      }
      v14089 = !v18972;
    }
    var v7667 = v14089;
    if (v7667) {
      return;
    }
    var v7668 = this.options;
    var v7669 = viz$$11.config;
    var v7670 = opt$$14 || {};
    var v14090 = ["node-property:alpha:span", "linear"];
    var v7671 = {"modes":v14090};
    introspect(JAM.policy.p3) {
      opt$$14 = $$$1.merge(v7668, v7669, v7670, v7671);
    }
    node$$37.collapsed = true;
    subn(node$$37);
    var v14091 = opt$$14.type;
    var v7677 = v14091 == "animate";
    if (v7677) {
      introspect(JAM.policy.p3) {
        viz$$11.compute("end");
      }
      var v7674 = viz$$11.rotated;
      if (v7674) {
        var v7672 = viz$$11.rotated;
        var v7673 = {"property":"end"};
        introspect(JAM.policy.p3) {
          viz$$11.rotate(v7672, "none", v7673);
        }
      }
      subn$$1(node$$37);
      var v7675 = viz$$11.fx;
      introspect(JAM.policy.p3) {
        v7675.animate(opt$$14);
      }
    } else {
      var v14092 = opt$$14.type;
      var v7676 = v14092 == "replot";
      if (v7676) {
        introspect(JAM.policy.p3) {
          viz$$11.refresh();
        }
      }
    }
    return;
  }
  function v335(json$$4, opt$$13, extraModes) {
    function v334() {
      function v333(elem$$31) {
        function v332(adj$$12) {
          var v7681 = adj$$12.ignore;
          if (v7681) {
            var v7678 = viz$$10.graph;
            var v14093 = adj$$12.nodeFrom;
            var v7679 = v14093.id;
            var v14094 = adj$$12.nodeTo;
            var v7680 = v14094.id;
            introspect(JAM.policy.p3) {
              v7678.removeAdjacence(v7679, v7680);
            }
          }
          return;
        }
        introspect(JAM.policy.p3) {
          elem$$31.eachAdjacency(v332);
        }
        return;
      }
      function v331(elem$$30) {
        var v7684 = elem$$30.ignore;
        if (v7684) {
          var v7682 = viz$$10.graph;
          var v7683 = elem$$30.id;
          introspect(JAM.policy.p3) {
            v7682.removeNode(v7683);
          }
        }
        return;
      }
      var v7685 = viz$$10.graph;
      introspect(JAM.policy.p3) {
        v7685.eachNode(v331);
      }
      var v7686 = viz$$10.graph;
      introspect(JAM.policy.p3) {
        v7686.eachNode(v333);
      }
      introspect(JAM.policy.p3) {
        options$$8.onComplete();
      }
      return;
    }
    function v330(elem$$29) {
      var v18974 = elem$$29.id;
      var v14095 = v18974 != root$$3;
      if (v14095) {
        var v23881 = elem$$29.pos;
        introspect(JAM.policy.p3) {
          var v18975 = v23881.getp()
        }
        var v18976 = Polar.KER;
        introspect(JAM.policy.p3) {
          v14095 = v18975.equals(v18976);
        }
      }
      var v7691 = v14095;
      if (v7691) {
        var v7687 = elem$$29.pos;
        var v7688 = elem$$29.endPos;
        introspect(JAM.policy.p3) {
          v7687.set(v7688);
        }
        var v7689 = elem$$29.startPos;
        var v7690 = elem$$29.endPos;
        introspect(JAM.policy.p3) {
          v7689.set(v7690);
        }
      }
      return;
    }
    function v329(elem$$28) {
      function v328(adj$$11) {
        var v18977 = adj$$11.nodeFrom;
        var v14096 = v18977.ignore;
        var v18979 = !v14096;
        if (v18979) {
          var v18978 = adj$$11.nodeTo;
          v14096 = v18978.ignore;
        }
        var v7692 = v14096;
        if (v7692) {
          return;
        }
        var v14097 = adj$$11.nodeFrom;
        var v7693 = v14097.id;
        introspect(JAM.policy.p3) {
          var nodeFrom$$1 = graph$$10.getNode(v7693)
        }
        var v14098 = adj$$11.nodeTo;
        var v7694 = v14098.id;
        introspect(JAM.policy.p3) {
          var nodeTo$$1 = graph$$10.getNode(v7694)
        }
        introspect(JAM.policy.p3) {
          var v14099 = nodeFrom$$1.adjacentTo(nodeTo$$1)
        }
        var v7698 = !v14099;
        if (v7698) {
          var v7695 = viz$$10.graph;
          var v7696 = nodeFrom$$1.id;
          var v7697 = nodeTo$$1.id;
          introspect(JAM.policy.p3) {
            adj$$11 = v7695.getAdjacence(v7696, v7697);
          }
          fadeEdges$$1 = true;
          introspect(JAM.policy.p3) {
            adj$$11.setData("alpha", 1);
          }
          introspect(JAM.policy.p3) {
            adj$$11.setData("alpha", 1, "start");
          }
          introspect(JAM.policy.p3) {
            adj$$11.setData("alpha", 0, "end");
          }
        }
        return;
      }
      var v7699 = elem$$28.ignore;
      if (v7699) {
        return;
      }
      introspect(JAM.policy.p3) {
        elem$$28.eachAdjacency(v328);
      }
      return;
    }
    function v327(elem$$27) {
      var v7700 = elem$$27.id;
      introspect(JAM.policy.p3) {
        var graphNode = graph$$10.getNode(v7700)
      }
      var v7704 = !graphNode;
      if (v7704) {
        introspect(JAM.policy.p3) {
          elem$$27.setData("alpha", 1);
        }
        introspect(JAM.policy.p3) {
          elem$$27.setData("alpha", 1, "start");
        }
        introspect(JAM.policy.p3) {
          elem$$27.setData("alpha", 0, "end");
        }
        elem$$27.ignore = true;
      } else {
        var graphNodeData = graphNode.data;
        var prop$$19;
        for (prop$$19 in graphNodeData) {
          var v14100 = nodeModes;
          if (v14100) {
            introspect(JAM.policy.p3) {
              var v18980 = $$$1.indexOf(nodeModes, prop$$19)
            }
            v14100 = v18980 > -1;
          }
          var v7703 = v14100;
          if (v7703) {
            var v7701 = elem$$27.endData;
            introspect(JAM.policy.p2) {
              v7701[prop$$19] = graphNodeData[prop$$19];
            }
          } else {
            var v7702 = elem$$27.data;
            introspect(JAM.policy.p2) {
              v7702[prop$$19] = graphNodeData[prop$$19];
            }
          }
        }
      }
      return;
    }
    function v326(n$$15) {
      return "$" + n$$15;
    }
    function v325(elem$$26) {
      function v324(adj$$10) {
        var v23882 = adj$$10.nodeFrom;
        var v18981 = v23882.id;
        var v23883 = adj$$10.nodeTo;
        var v18982 = v23883.id;
        introspect(JAM.policy.p3) {
          var v14101 = graph$$10.getAdjacence(v18981, v18982)
        }
        var v7708 = !v14101;
        if (v7708) {
          var v7705 = viz$$10.graph;
          var v14102 = adj$$10.nodeFrom;
          var v7706 = v14102.id;
          var v14103 = adj$$10.nodeTo;
          var v7707 = v14103.id;
          introspect(JAM.policy.p3) {
            v7705.removeAdjacence(v7706, v7707);
          }
        }
        return;
      }
      introspect(JAM.policy.p3) {
        elem$$26.eachAdjacency(v324);
      }
      var v18983 = elem$$26.id;
      introspect(JAM.policy.p3) {
        var v14104 = graph$$10.hasNode(v18983)
      }
      var v7711 = !v14104;
      if (v7711) {
        var v7709 = viz$$10.graph;
        var v7710 = elem$$26.id;
        introspect(JAM.policy.p3) {
          v7709.removeNode(v7710);
        }
      }
      return;
    }
    function v323(elem$$25) {
      function v322(adj$$9) {
        var v18984 = viz$$10.graph;
        var v23884 = adj$$9.nodeFrom;
        var v18985 = v23884.id;
        var v23885 = adj$$9.nodeTo;
        var v18986 = v23885.id;
        introspect(JAM.policy.p3) {
          var v14105 = v18984.getAdjacence(v18985, v18986)
        }
        var v7712 = !v14105;
        var adjExists = !v7712;
        var v7713 = viz$$10.graph;
        var v7714 = adj$$9.nodeFrom;
        var v7715 = adj$$9.nodeTo;
        var v7716 = adj$$9.data;
        introspect(JAM.policy.p3) {
          v7713.addAdjacence(v7714, v7715, v7716);
        }
        if (adjExists) {
          var v7717 = viz$$10.graph;
          var v14106 = adj$$9.nodeFrom;
          var v7718 = v14106.id;
          var v14107 = adj$$9.nodeTo;
          var v7719 = v14107.id;
          introspect(JAM.policy.p3) {
            var addedAdj = v7717.getAdjacence(v7718, v7719)
          }
          var prop$$18;
          var v14108 = adj$$9.data;
          var v18987 = !v14108;
          if (v18987) {
            v14108 = {};
          }
          var v7721 = v14108;
          for (prop$$18 in v7721) {
            var v7720 = addedAdj.data;
            var v14109 = adj$$9.data;
            introspect(JAM.policy.p2) {
              v7720[prop$$18] = v14109[prop$$18];
            }
          }
        }
        return;
      }
      var v7722 = viz$$10.graph;
      var v7723 = elem$$25.id;
      introspect(JAM.policy.p3) {
        var nodeExists = v7722.hasNode(v7723)
      }
      introspect(JAM.policy.p3) {
        elem$$25.eachAdjacency(v322);
      }
      if (nodeExists) {
        var v7724 = viz$$10.graph;
        var v7725 = elem$$25.id;
        introspect(JAM.policy.p3) {
          var addedNode = v7724.getNode(v7725)
        }
        var prop$$17;
        var v14110 = elem$$25.data;
        var v18988 = !v14110;
        if (v18988) {
          v14110 = {};
        }
        var v7727 = v14110;
        for (prop$$17 in v7727) {
          var v7726 = addedNode.data;
          var v14111 = elem$$25.data;
          introspect(JAM.policy.p2) {
            v7726[prop$$17] = v14111[prop$$17];
          }
        }
      }
      return;
    }
    extraModes = extraModes || {};
    var viz$$10 = this.viz;
    var v7728 = this.options;
    var v7729 = viz$$10.controller;
    introspect(JAM.policy.p3) {
      var options$$8 = $$$1.merge(v7728, v7729, opt$$13)
    }
    var root$$3 = viz$$10.root;
    var graph$$10;
    var v7730 = opt$$13.id;
    var v14112 = !v7730;
    if (v14112) {
      v7730 = viz$$10.root;
    }
    viz$$10.root = v7730;
    var v7746 = options$$8.type;
    switch(v7746) {
      case "nothing":
        introspect(JAM.policy.p3) {
          graph$$10 = viz$$10.construct(json$$4);
        }
        introspect(JAM.policy.p3) {
          graph$$10.eachNode(v323);
        }
        var v7731 = viz$$10.graph;
        introspect(JAM.policy.p3) {
          v7731.eachNode(v325);
        }
        break;
      case "replot":
        var v7732 = viz$$10.labels;
        introspect(JAM.policy.p3) {
          v7732.clearLabels(true);
        }
        var v7733 = {type:"nothing"};
        introspect(JAM.policy.p3) {
          this.morph(json$$4, v7733);
        }
        introspect(JAM.policy.p3) {
          viz$$10.refresh(true);
        }
        introspect(JAM.policy.p3) {
          viz$$10.refresh(true);
        }
        break;
      case "fade:seq":
      ;
      case "fade":
      ;
      case "fade:con":
        that = this;
        introspect(JAM.policy.p3) {
          graph$$10 = viz$$10.construct(json$$4);
        }
        var v7734 = "node-property" in extraModes;
        if (v7734) {
          var v18989 = extraModes["node-property"];
          introspect(JAM.policy.p3) {
            var v14113 = $$$1.splat(v18989)
          }
          introspect(JAM.policy.p3) {
            v7734 = $$$1.map(v14113, v326);
          }
        }
        var nodeModes = v7734;
        var v7735 = viz$$10.graph;
        introspect(JAM.policy.p3) {
          v7735.eachNode(v327);
        }
        var v7736 = viz$$10.graph;
        introspect(JAM.policy.p3) {
          v7736.eachNode(v329);
        }
        introspect(JAM.policy.p3) {
          var fadeEdges$$1 = this.preprocessSum(graph$$10)
        }
        var v7737;
        var v14114 = !fadeEdges$$1;
        if (v14114) {
          v7737 = ["node-property:alpha"];
        } else {
          v7737 = ["node-property:alpha", "edge-property:alpha"];
        }
        var modes$$1 = v7737;
        var v7738 = modes$$1;
        var v14115 = modes$$1[0];
        var v18990;
        var v23887 = "node-property" in extraModes;
        if (v23887) {
          var v27697 = extraModes["node-property"];
          introspect(JAM.policy.p3) {
            var v26159 = $$$1.splat(v27697)
          }
          introspect(JAM.policy.p3) {
            var v23886 = v26159.join(":")
          }
          v18990 = ":" + v23886;
        } else {
          v18990 = "";
        }
        var v14116 = v18990;
        v7738[0] = v14115 + v14116;
        var v7739 = modes$$1;
        var v18991 = modes$$1[1];
        var v23888 = !v18991;
        if (v23888) {
          v18991 = "edge-property:alpha";
        }
        var v14117 = v18991;
        var v18992;
        var v23890 = "edge-property" in extraModes;
        if (v23890) {
          var v27698 = extraModes["edge-property"];
          introspect(JAM.policy.p3) {
            var v26160 = $$$1.splat(v27698)
          }
          introspect(JAM.policy.p3) {
            var v23889 = v26160.join(":")
          }
          v18992 = ":" + v23889;
        } else {
          v18992 = "";
        }
        var v14118 = v18992;
        v7739[1] = v14117 + v14118;
        var v7741 = "label-property" in extraModes;
        if (v7741) {
          var v23891 = extraModes["label-property"];
          introspect(JAM.policy.p3) {
            var v18993 = $$$1.splat(v23891)
          }
          introspect(JAM.policy.p3) {
            var v14119 = v18993.join(":")
          }
          var v7740 = "label-property:" + v14119;
          introspect(JAM.policy.p3) {
            modes$$1.push(v7740);
          }
        }
        var v7742 = viz$$10.reposition;
        if (v7742) {
          introspect(JAM.policy.p3) {
            viz$$10.reposition();
          }
        } else {
          introspect(JAM.policy.p3) {
            viz$$10.compute("end");
          }
        }
        var v7743 = viz$$10.graph;
        introspect(JAM.policy.p3) {
          v7743.eachNode(v330);
        }
        var v7744 = viz$$10.fx;
        var v27699 = extraModes.position;
        var v28670 = !v27699;
        if (v28670) {
          v27699 = "polar";
        }
        var v26161 = v27699;
        var v23892 = [v26161];
        introspect(JAM.policy.p3) {
          var v18994 = v23892.concat(modes$$1)
        }
        var v14120 = {modes:v18994, onComplete:v334};
        introspect(JAM.policy.p3) {
          var v7745 = $$$1.merge(options$$8, v14120)
        }
        introspect(JAM.policy.p3) {
          v7744.animate(v7745);
        }
      ;
      default:
      ;
    }
    return;
  }
  function v321(json$$3, opt$$12) {
    function v320(elem$$24) {
      var v18995 = elem$$24.id;
      var v14121 = v18995 != root$$2;
      if (v14121) {
        var v18996 = elem$$24.pos;
        introspect(JAM.policy.p3) {
          v14121 = v18996.isZero();
        }
      }
      var v7751 = v14121;
      if (v7751) {
        var v7747 = elem$$24.pos;
        var v7748 = elem$$24.endPos;
        introspect(JAM.policy.p3) {
          v7747.set(v7748);
        }
        var v7749 = elem$$24.startPos;
        var v7750 = elem$$24.endPos;
        introspect(JAM.policy.p3) {
          v7749.set(v7750);
        }
      }
      return;
    }
    function v319() {
      function v318() {
        introspect(JAM.policy.p3) {
          options$$7.onComplete();
        }
        return;
      }
      var v7752 = viz$$9.fx;
      var v14122 = {modes:modes, onComplete:v318};
      introspect(JAM.policy.p3) {
        var v7753 = $$$1.merge(options$$7, v14122)
      }
      introspect(JAM.policy.p3) {
        v7752.animate(v7753);
      }
      return;
    }
    function v317(elem$$23) {
      function v316(adj$$8) {
        var v7754 = viz$$9.graph;
        var v7755 = adj$$8.nodeFrom;
        var v7756 = adj$$8.nodeTo;
        var v7757 = adj$$8.data;
        introspect(JAM.policy.p3) {
          v7754.addAdjacence(v7755, v7756, v7757);
        }
        return;
      }
      introspect(JAM.policy.p3) {
        elem$$23.eachAdjacency(v316);
      }
      return;
    }
    var viz$$9 = this.viz;
    var v7758 = this.options;
    var v7759 = viz$$9.controller;
    introspect(JAM.policy.p3) {
      var options$$7 = $$$1.merge(v7758, v7759, opt$$12)
    }
    var root$$2 = viz$$9.root;
    var graph$$9;
    var v7760 = opt$$12.id;
    var v14123 = !v7760;
    if (v14123) {
      v7760 = viz$$9.root;
    }
    viz$$9.root = v7760;
    var v7769 = options$$7.type;
    switch(v7769) {
      case "nothing":
        introspect(JAM.policy.p3) {
          graph$$9 = viz$$9.construct(json$$3);
        }
        introspect(JAM.policy.p3) {
          graph$$9.eachNode(v317);
        }
        break;
      case "replot":
        introspect(JAM.policy.p3) {
          viz$$9.refresh(true);
        }
        var v7761 = {type:"nothing"};
        introspect(JAM.policy.p3) {
          this.sum(json$$3, v7761);
        }
        introspect(JAM.policy.p3) {
          viz$$9.refresh(true);
        }
        break;
      case "fade:seq":
      ;
      case "fade":
      ;
      case "fade:con":
        that = this;
        introspect(JAM.policy.p3) {
          graph$$9 = viz$$9.construct(json$$3);
        }
        introspect(JAM.policy.p3) {
          var fadeEdges = this.preprocessSum(graph$$9)
        }
        var v7762;
        var v14124 = !fadeEdges;
        if (v14124) {
          v7762 = ["node-property:alpha"];
        } else {
          v7762 = ["node-property:alpha", "edge-property:alpha"];
        }
        var modes = v7762;
        introspect(JAM.policy.p3) {
          viz$$9.reposition();
        }
        var v14125 = options$$7.type;
        var v7768 = v14125 != "fade:con";
        if (v7768) {
          var v7763 = viz$$9.fx;
          var v18997 = ["linear"];
          var v14126 = {modes:v18997, onComplete:v319};
          introspect(JAM.policy.p3) {
            var v7764 = $$$1.merge(options$$7, v14126)
          }
          introspect(JAM.policy.p3) {
            v7763.animate(v7764);
          }
        } else {
          var v7765 = viz$$9.graph;
          introspect(JAM.policy.p3) {
            v7765.eachNode(v320);
          }
          var v7766 = viz$$9.fx;
          var v23893 = ["linear"];
          introspect(JAM.policy.p3) {
            var v18998 = v23893.concat(modes)
          }
          var v14127 = {modes:v18998};
          introspect(JAM.policy.p3) {
            var v7767 = $$$1.merge(options$$7, v14127)
          }
          introspect(JAM.policy.p3) {
            v7766.animate(v7767);
          }
        }
        break;
      default:
        introspect(JAM.policy.p3) {
          this.doError();
        }
      ;
    }
    return;
  }
  function v315(vertex, opt$$11) {
    function v314() {
      introspect(JAM.policy.p3) {
        options$$6.onComplete();
      }
      return;
    }
    function v313() {
      introspect(JAM.policy.p3) {
        var v7770 = v$$1.shift()
      }
      var v7771 = {type:"nothing"};
      introspect(JAM.policy.p3) {
        that$$13.removeEdge(v7770, v7771);
      }
      var v7772 = viz$$8.labels;
      introspect(JAM.policy.p3) {
        v7772.clearLabels();
      }
      return;
    }
    function v312() {
      var v7773 = v$$1.length;
      return v7773 != 0;
    }
    function v311() {
      var v7774 = {type:"nothing"};
      introspect(JAM.policy.p3) {
        that$$13.removeEdge(v$$1, v7774);
      }
      var v7775 = options$$6.onComplete;
      if (v7775) {
        introspect(JAM.policy.p3) {
          options$$6.onComplete();
        }
      }
      return;
    }
    function v310() {
      var v7776 = {type:"nothing"};
      introspect(JAM.policy.p3) {
        that$$13.removeEdge(v$$1, v7776);
      }
      introspect(JAM.policy.p3) {
        viz$$8.reposition();
      }
      var v7777 = viz$$8.fx;
      var v18999 = ["linear"];
      var v14128 = {modes:v18999};
      introspect(JAM.policy.p3) {
        var v7778 = $$$1.merge(options$$6, v14128)
      }
      introspect(JAM.policy.p3) {
        v7777.animate(v7778);
      }
      return;
    }
    var viz$$8 = this.viz;
    var v7779 = this.options;
    var v7780 = viz$$8.controller;
    introspect(JAM.policy.p3) {
      var options$$6 = $$$1.merge(v7779, v7780, opt$$11)
    }
    var v7781;
    var v23894 = vertex[0];
    introspect(JAM.policy.p3) {
      var v19000 = $$$1.type(v23894)
    }
    var v14129 = v19000 == "string";
    if (v14129) {
      v7781 = [vertex];
    } else {
      v7781 = vertex;
    }
    var v$$1 = v7781;
    var i$$41;
    var that$$13;
    var adj$$7;
    var v7801 = options$$6.type;
    switch(v7801) {
      case "nothing":
        i$$41 = 0;
        var v14130 = v$$1.length;
        var v7785 = i$$41 < v14130;
        for (;v7785;) {
          var v7782 = viz$$8.graph;
          var v14131 = v$$1[i$$41];
          var v7783 = v14131[0];
          var v14132 = v$$1[i$$41];
          var v7784 = v14132[1];
          introspect(JAM.policy.p3) {
            v7782.removeAdjacence(v7783, v7784);
          }
          i$$41++;
          var v14133 = v$$1.length;
          v7785 = i$$41 < v14133;
        }
        break;
      case "replot":
        var v7786 = {type:"nothing"};
        introspect(JAM.policy.p3) {
          this.removeEdge(v$$1, v7786);
        }
        introspect(JAM.policy.p3) {
          viz$$8.refresh(true);
        }
        break;
      case "fade:seq":
      ;
      case "fade":
        that$$13 = this;
        i$$41 = 0;
        var v14134 = v$$1.length;
        var v7790 = i$$41 < v14134;
        for (;v7790;) {
          var v7787 = viz$$8.graph;
          var v14135 = v$$1[i$$41];
          var v7788 = v14135[0];
          var v14136 = v$$1[i$$41];
          var v7789 = v14136[1];
          introspect(JAM.policy.p3) {
            adj$$7 = v7787.getAdjacence(v7788, v7789);
          }
          if (adj$$7) {
            introspect(JAM.policy.p3) {
              adj$$7.setData("alpha", 0, "end");
            }
          }
          i$$41++;
          var v14137 = v$$1.length;
          v7790 = i$$41 < v14137;
        }
        var v7791 = viz$$8.fx;
        var v19001 = ["edge-property:alpha"];
        var v14138 = {modes:v19001, onComplete:v310};
        introspect(JAM.policy.p3) {
          var v7792 = $$$1.merge(options$$6, v14138)
        }
        introspect(JAM.policy.p3) {
          v7791.animate(v7792);
        }
        break;
      case "fade:con":
        that$$13 = this;
        i$$41 = 0;
        var v14139 = v$$1.length;
        var v7796 = i$$41 < v14139;
        for (;v7796;) {
          var v7793 = viz$$8.graph;
          var v14140 = v$$1[i$$41];
          var v7794 = v14140[0];
          var v14141 = v$$1[i$$41];
          var v7795 = v14141[1];
          introspect(JAM.policy.p3) {
            adj$$7 = v7793.getAdjacence(v7794, v7795);
          }
          if (adj$$7) {
            introspect(JAM.policy.p3) {
              adj$$7.setData("alpha", 0, "end");
            }
            adj$$7.ignore = true;
          }
          i$$41++;
          var v14142 = v$$1.length;
          v7796 = i$$41 < v14142;
        }
        introspect(JAM.policy.p3) {
          viz$$8.reposition();
        }
        var v7797 = viz$$8.fx;
        var v19002 = ["edge-property:alpha", "linear"];
        var v14143 = {modes:v19002, onComplete:v311};
        introspect(JAM.policy.p3) {
          var v7798 = $$$1.merge(options$$6, v14143)
        }
        introspect(JAM.policy.p3) {
          v7797.animate(v7798);
        }
        break;
      case "iter":
        that$$13 = this;
        var v7799 = viz$$8.fx;
        var v23895 = options$$6.duration;
        var v23896 = v$$1.length;
        var v19003 = v23895 / v23896;
        introspect(JAM.policy.p3) {
          var v14144 = Math.ceil(v19003)
        }
        var v7800 = {condition:v312, step:v313, onComplete:v314, duration:v14144};
        introspect(JAM.policy.p3) {
          v7799.sequence(v7800);
        }
        break;
      default:
        introspect(JAM.policy.p3) {
          this.doError();
        }
      ;
    }
    return;
  }
  function v309(node$$36, opt$$10) {
    function v308() {
      var v7802 = options$$5.onComplete;
      if (v7802) {
        introspect(JAM.policy.p3) {
          options$$5.onComplete();
        }
      }
      return;
    }
    function v307() {
      introspect(JAM.policy.p3) {
        var v7803 = n$$14.shift()
      }
      var v7804 = {type:"nothing"};
      introspect(JAM.policy.p3) {
        that$$12.removeNode(v7803, v7804);
      }
      var v7805 = viz$$7.labels;
      introspect(JAM.policy.p3) {
        v7805.clearLabels();
      }
      return;
    }
    function v306() {
      var v7806 = n$$14.length;
      return v7806 != 0;
    }
    function v305() {
      var v7807 = {type:"nothing"};
      introspect(JAM.policy.p3) {
        that$$12.removeNode(n$$14, v7807);
      }
      var v7808 = options$$5.onComplete;
      if (v7808) {
        introspect(JAM.policy.p3) {
          options$$5.onComplete();
        }
      }
      return;
    }
    function v304() {
      var v7809 = {type:"nothing"};
      introspect(JAM.policy.p3) {
        that$$12.removeNode(n$$14, v7809);
      }
      var v7810 = viz$$7.labels;
      introspect(JAM.policy.p3) {
        v7810.clearLabels();
      }
      introspect(JAM.policy.p3) {
        viz$$7.reposition();
      }
      var v7811 = viz$$7.fx;
      var v19004 = ["linear"];
      var v14145 = {modes:v19004};
      introspect(JAM.policy.p3) {
        var v7812 = $$$1.merge(options$$5, v14145)
      }
      introspect(JAM.policy.p3) {
        v7811.animate(v7812);
      }
      return;
    }
    var viz$$7 = this.viz;
    var v7813 = this.options;
    var v7814 = viz$$7.controller;
    introspect(JAM.policy.p3) {
      var options$$5 = $$$1.merge(v7813, v7814, opt$$10)
    }
    introspect(JAM.policy.p3) {
      var n$$14 = $$$1.splat(node$$36)
    }
    var i$$40;
    var that$$12;
    var nodeObj;
    var v7833 = options$$5.type;
    switch(v7833) {
      case "nothing":
        i$$40 = 0;
        var v14146 = n$$14.length;
        var v7818 = i$$40 < v14146;
        for (;v7818;) {
          var v14147 = viz$$7.graph;
          var v14148 = n$$14[i$$40];
          introspect(JAM.policy.p3) {
            var v7815 = v14147.getNode(v14148)
          }
          introspect(JAM.policy.p3) {
            options$$5.onBeforeRemoveNode(v7815);
          }
          var v7816 = viz$$7.graph;
          var v7817 = n$$14[i$$40];
          introspect(JAM.policy.p3) {
            v7816.removeNode(v7817);
          }
          i$$40++;
          var v14149 = n$$14.length;
          v7818 = i$$40 < v14149;
        }
        break;
      case "replot":
        var v7819 = {type:"nothing"};
        introspect(JAM.policy.p3) {
          this.removeNode(n$$14, v7819);
        }
        var v7820 = viz$$7.labels;
        introspect(JAM.policy.p3) {
          v7820.clearLabels();
        }
        introspect(JAM.policy.p3) {
          viz$$7.refresh(true);
        }
        break;
      case "fade:seq":
      ;
      case "fade":
        that$$12 = this;
        i$$40 = 0;
        var v14150 = n$$14.length;
        var v7823 = i$$40 < v14150;
        for (;v7823;) {
          var v7821 = viz$$7.graph;
          var v7822 = n$$14[i$$40];
          introspect(JAM.policy.p3) {
            nodeObj = v7821.getNode(v7822);
          }
          introspect(JAM.policy.p3) {
            nodeObj.setData("alpha", 0, "end");
          }
          i$$40++;
          var v14151 = n$$14.length;
          v7823 = i$$40 < v14151;
        }
        var v7824 = viz$$7.fx;
        var v19005 = ["node-property:alpha"];
        var v14152 = {modes:v19005, onComplete:v304};
        introspect(JAM.policy.p3) {
          var v7825 = $$$1.merge(options$$5, v14152)
        }
        introspect(JAM.policy.p3) {
          v7824.animate(v7825);
        }
        break;
      case "fade:con":
        that$$12 = this;
        i$$40 = 0;
        var v14153 = n$$14.length;
        var v7828 = i$$40 < v14153;
        for (;v7828;) {
          var v7826 = viz$$7.graph;
          var v7827 = n$$14[i$$40];
          introspect(JAM.policy.p3) {
            nodeObj = v7826.getNode(v7827);
          }
          introspect(JAM.policy.p3) {
            nodeObj.setData("alpha", 0, "end");
          }
          nodeObj.ignore = true;
          i$$40++;
          var v14154 = n$$14.length;
          v7828 = i$$40 < v14154;
        }
        introspect(JAM.policy.p3) {
          viz$$7.reposition();
        }
        var v7829 = viz$$7.fx;
        var v19006 = ["node-property:alpha", "linear"];
        var v14155 = {modes:v19006, onComplete:v305};
        introspect(JAM.policy.p3) {
          var v7830 = $$$1.merge(options$$5, v14155)
        }
        introspect(JAM.policy.p3) {
          v7829.animate(v7830);
        }
        break;
      case "iter":
        that$$12 = this;
        var v7831 = viz$$7.fx;
        var v23897 = options$$5.duration;
        var v23898 = n$$14.length;
        var v19007 = v23897 / v23898;
        introspect(JAM.policy.p3) {
          var v14156 = Math.ceil(v19007)
        }
        var v7832 = {condition:v306, step:v307, onComplete:v308, duration:v14156};
        introspect(JAM.policy.p3) {
          v7831.sequence(v7832);
        }
        break;
      default:
        introspect(JAM.policy.p3) {
          this.doError();
        }
      ;
    }
    return;
  }
  function v303(viz$$6) {
    this.viz = viz$$6;
    return;
  }
  function v302(m$$1) {
    function v301() {
      var v14157 = Graph.Util;
      var v7834 = v14157[m$$1];
      var v7835 = Graph.Util;
      var v14158 = [this];
      var v23899 = Array.prototype;
      var v19008 = v23899.slice;
      introspect(JAM.policy.p3) {
        var v14159 = v19008.call(arguments)
      }
      introspect(JAM.policy.p3) {
        var v7836 = v14158.concat(v14159)
      }
      introspect(JAM.policy.p3) {
        return v7834.apply(v7835, v7836);
      }
    }
    var v14160 = Graph.Node;
    var v7837 = v14160.prototype;
    introspect(JAM.policy.p2) {
      v7837[m$$1] = v301;
    }
    return;
  }
  function v300(m) {
    function v299() {
      var v14161 = Graph.Util;
      var v7838 = v14161[m];
      var v7839 = Graph.Util;
      var v14162 = [this];
      var v23900 = Array.prototype;
      var v19009 = v23900.slice;
      introspect(JAM.policy.p3) {
        var v14163 = v19009.call(arguments)
      }
      introspect(JAM.policy.p3) {
        var v7840 = v14162.concat(v14163)
      }
      introspect(JAM.policy.p3) {
        return v7838.apply(v7839, v7840);
      }
    }
    var v7841 = Graph.prototype;
    introspect(JAM.policy.p2) {
      v7841[m] = v299;
    }
    return;
  }
  function v298(graph$$8, pos$$15, prop$$16, flags$$12) {
    function v297(elem$$22) {
      var v7842;
      var v19010 = node$$35 == null;
      var v23903 = !v19010;
      if (v23903) {
        introspect(JAM.policy.p3) {
          var v27700 = elem$$22.getPos(prop$$16)
        }
        introspect(JAM.policy.p3) {
          var v26162 = v27700.getc(true)
        }
        var v23901 = distance(v26162, pos$$15);
        introspect(JAM.policy.p3) {
          var v27701 = node$$35.getPos(prop$$16)
        }
        introspect(JAM.policy.p3) {
          var v26163 = v27701.getc(true)
        }
        var v23902 = distance(v26163, pos$$15);
        v19010 = v23901 < v23902;
      }
      var v14164 = v19010;
      if (v14164) {
        v7842 = elem$$22;
      } else {
        v7842 = node$$35;
      }
      node$$35 = v7842;
      return;
    }
    function distance(a$$5, b$$3) {
      var v7843 = a$$5.x;
      var v7844 = b$$3.x;
      var d1 = v7843 - v7844;
      var v7845 = a$$5.y;
      var v7846 = b$$3.y;
      var d2 = v7845 - v7846;
      var v7847 = d1 * d1;
      var v7848 = d2 * d2;
      return v7847 + v7848;
    }
    var node$$35 = null;
    prop$$16 = prop$$16 || "current";
    var v14165 = pos$$15;
    if (v14165) {
      introspect(JAM.policy.p3) {
        v14165 = pos$$15.getc(true);
      }
    }
    var v7849 = v14165;
    var v14166 = !v7849;
    if (v14166) {
      v7849 = Complex.KER;
    }
    pos$$15 = v7849;
    introspect(JAM.policy.p3) {
      this.eachNode(graph$$8, v297, flags$$12);
    }
    return node$$35;
  }
  function v296(graph$$7, prop$$15, flags$$11) {
    var v7850 = Polar.KER;
    introspect(JAM.policy.p3) {
      return this.getClosestNodeToPos(graph$$7, v7850, prop$$15, flags$$11);
    }
  }
  function v295(graph$$6) {
    function v294(elem$$21) {
      elem$$21._flag = false;
      return;
    }
    introspect(JAM.policy.p3) {
      this.eachNode(graph$$6, v294);
    }
    return;
  }
  function v293(node$$34, id$$19) {
    var v14167 = node$$34.id;
    var v7851 = v14167 == id$$19;
    if (v7851) {
      return true;
    }
    introspect(JAM.policy.p3) {
      var pars = this.getParents(node$$34)
    }
    var ans$$7 = false;
    var i$$39 = 0;
    var v14168 = !ans$$7;
    if (v14168) {
      var v19011 = pars.length;
      v14168 = i$$39 < v19011;
    }
    var v7853 = v14168;
    for (;v7853;) {
      var v7852 = ans$$7;
      var v14170 = !v7852;
      if (v14170) {
        var v14169 = pars[i$$39];
        introspect(JAM.policy.p3) {
          v7852 = this.isDescendantOf(v14169, id$$19);
        }
      }
      ans$$7 = v7852;
      i$$39++;
      var v14171 = !ans$$7;
      if (v14171) {
        var v19012 = pars.length;
        v14171 = i$$39 < v19012;
      }
      v7853 = v14171;
    }
    return ans$$7;
  }
  function v292(node$$33) {
    function v291(adj$$6) {
      var n$$13 = adj$$6.nodeTo;
      var v14172 = n$$13._depth;
      var v14173 = node$$33._depth;
      var v7854 = v14172 < v14173;
      if (v7854) {
        introspect(JAM.policy.p3) {
          ans$$6.push(n$$13);
        }
      }
      return;
    }
    var ans$$6 = [];
    introspect(JAM.policy.p3) {
      this.eachAdjacency(node$$33, v291);
    }
    return ans$$6;
  }
  function v290(node$$32, level$$8, flags$$10) {
    function v289(n$$12) {
      introspect(JAM.policy.p3) {
        ans$$5.push(n$$12);
      }
      return;
    }
    var ans$$5 = [];
    var that$$11 = this;
    level$$8 = level$$8 || 0;
    var levelStart;
    var levelEnd$$2;
    introspect(JAM.policy.p3) {
      var v14174 = $$$1.type(level$$8)
    }
    var v7857 = v14174 == "array";
    if (v7857) {
      levelStart = level$$8[0];
      levelEnd$$2 = level$$8[1];
    } else {
      levelStart = level$$8;
      var v7855 = Number.MAX_VALUE;
      var v7856 = node$$32._depth;
      levelEnd$$2 = v7855 - v7856;
    }
    introspect(JAM.policy.p3) {
      this.eachLevel(node$$32, levelStart, levelEnd$$2, v289, flags$$10);
    }
    return ans$$5;
  }
  function v288(node$$31, cond, flags$$9) {
    function v287(elem$$20) {
      introspect(JAM.policy.p3) {
        var v7858 = c$$3(elem$$20)
      }
      if (v7858) {
        flag$$1 = true;
      }
      return;
    }
    function v286(n$$11) {
      return n$$11[cond];
    }
    var flag$$1 = false;
    var v7859 = cond;
    var v14175 = !v7859;
    if (v14175) {
      introspect(JAM.policy.p3) {
        v7859 = $$$1.lambda(true);
      }
    }
    cond = v7859;
    var v7860;
    introspect(JAM.policy.p3) {
      var v19013 = $$$1.type(cond)
    }
    var v14176 = v19013 == "string";
    if (v14176) {
      v7860 = v286;
    } else {
      v7860 = cond;
    }
    var c$$3 = v7860;
    introspect(JAM.policy.p3) {
      this.eachSubnode(node$$31, v287, flags$$9);
    }
    return flag$$1;
  }
  function v285(node$$30, action$$9, flags$$8) {
    introspect(JAM.policy.p3) {
      this.eachLevel(node$$30, 1, 1, action$$9, flags$$8);
    }
    return;
  }
  function v284(node$$29, action$$8, flags$$7) {
    introspect(JAM.policy.p3) {
      this.eachLevel(node$$29, 0, false, action$$8, flags$$7);
    }
    return;
  }
  function v283(node$$27, levelBegin, levelEnd, action$$7, flags$$6) {
    function loopLevel(node$$28, levelBegin$$1, levelEnd$$1) {
      function v282(adj$$5) {
        var n$$10 = adj$$5.nodeTo;
        var v14177 = n$$10._depth;
        var v7861 = v14177 > d$$2;
        if (v7861) {
          loopLevel(n$$10, levelBegin$$1, levelEnd$$1);
        }
        return;
      }
      var v7862 = !shouldContinue;
      if (v7862) {
        return;
      }
      var d$$2 = node$$28._depth;
      var ret;
      var v19014 = d$$2 >= levelBegin$$1;
      if (v19014) {
        v19014 = d$$2 <= levelEnd$$1;
      }
      var v14178 = v19014;
      if (v14178) {
        introspect(JAM.policy.p3) {
          v14178 = filter$$4(node$$28);
        }
      }
      var v7863 = v14178;
      if (v7863) {
        introspect(JAM.policy.p3) {
          ret = action$$7(node$$28, d$$2);
        }
      }
      var v14179 = typeof ret;
      var v7864 = v14179 !== "undefined";
      if (v7864) {
        shouldContinue = ret;
      }
      var v14180 = shouldContinue;
      if (v14180) {
        v14180 = d$$2 < levelEnd$$1;
      }
      var v7865 = v14180;
      if (v7865) {
        introspect(JAM.policy.p3) {
          that$$10.eachAdjacency(node$$28, v282);
        }
      }
      return;
    }
    var d$$1 = node$$27._depth;
    introspect(JAM.policy.p3) {
      var filter$$4 = this.filter(flags$$6)
    }
    var that$$10 = this;
    var shouldContinue = true;
    var v7866;
    var v14182 = levelEnd === false;
    if (v14182) {
      var v14181 = Number.MAX_VALUE;
      v7866 = v14181 - d$$1;
    } else {
      v7866 = levelEnd;
    }
    levelEnd = v7866;
    var v7867 = levelBegin + d$$1;
    var v7868 = levelEnd + d$$1;
    loopLevel(node$$27, v7867, v7868);
    return;
  }
  function v281(graph$$5, id$$18, action$$6, flags$$5) {
    function v280(adj$$4) {
      var n$$9 = adj$$4.nodeTo;
      var v19015 = n$$9._flag;
      var v14183 = v19015 == false;
      if (v14183) {
        introspect(JAM.policy.p3) {
          v14183 = filter$$3(n$$9);
        }
      }
      var v7869 = v14183;
      if (v7869) {
        n$$9._flag = true;
        introspect(JAM.policy.p3) {
          queue$$1.unshift(n$$9);
        }
      }
      return;
    }
    introspect(JAM.policy.p3) {
      var filter$$3 = this.filter(flags$$5)
    }
    introspect(JAM.policy.p3) {
      this.clean(graph$$5);
    }
    introspect(JAM.policy.p3) {
      var v7870 = graph$$5.getNode(id$$18)
    }
    var queue$$1 = [v7870];
    var v14184 = queue$$1.length;
    var v7873 = v14184 != 0;
    for (;v7873;) {
      introspect(JAM.policy.p3) {
        var node$$26 = queue$$1.pop()
      }
      var v7871 = !node$$26;
      if (v7871) {
        return;
      }
      node$$26._flag = true;
      var v7872 = node$$26._depth;
      introspect(JAM.policy.p3) {
        action$$6(node$$26, v7872);
      }
      introspect(JAM.policy.p3) {
        this.eachAdjacency(node$$26, v280, flags$$5);
      }
      var v14185 = queue$$1.length;
      v7873 = v14185 != 0;
    }
    return;
  }
  function v279(graph$$4, id$$17, startDepth, flags$$4) {
    function v278(adj$$3) {
      var n$$8 = adj$$3.nodeTo;
      var v19016 = n$$8._flag;
      var v14186 = v19016 == false;
      if (v14186) {
        introspect(JAM.policy.p3) {
          v14186 = filter$$2(n$$8);
        }
      }
      var v7876 = v14186;
      if (v7876) {
        var v14187 = n$$8._depth;
        var v7875 = v14187 < 0;
        if (v7875) {
          var v14188 = node$$25._depth;
          var v7874 = v14188 + 1;
          n$$8._depth = v7874 + startDepth;
        }
        introspect(JAM.policy.p3) {
          queue.unshift(n$$8);
        }
      }
      return;
    }
    function v277(elem$$19) {
      elem$$19._flag = false;
      elem$$19._depth = -1;
      return;
    }
    startDepth = startDepth || 0;
    introspect(JAM.policy.p3) {
      var filter$$2 = this.filter(flags$$4)
    }
    introspect(JAM.policy.p3) {
      this.eachNode(graph$$4, v277, flags$$4);
    }
    introspect(JAM.policy.p3) {
      var root$$1 = graph$$4.getNode(id$$17)
    }
    root$$1._depth = startDepth;
    var queue = [root$$1];
    var v14189 = queue.length;
    var v7877 = v14189 != 0;
    for (;v7877;) {
      introspect(JAM.policy.p3) {
        var node$$25 = queue.pop()
      }
      node$$25._flag = true;
      introspect(JAM.policy.p3) {
        this.eachAdjacency(node$$25, v278, flags$$4);
      }
      var v14190 = queue.length;
      v7877 = v14190 != 0;
    }
    return;
  }
  function v276(node$$24, action$$5, flags$$3) {
    var adj$$2 = node$$24.adjacencies;
    introspect(JAM.policy.p3) {
      var filter$$1 = this.filter(flags$$3)
    }
    var id$$16;
    for (id$$16 in adj$$2) {
      var a$$4 = adj$$2[id$$16];
      introspect(JAM.policy.p3) {
        var v7879 = filter$$1(a$$4)
      }
      if (v7879) {
        var v14191 = a$$4.nodeFrom;
        var v7878 = v14191 != node$$24;
        if (v7878) {
          var tmp = a$$4.nodeFrom;
          a$$4.nodeFrom = a$$4.nodeTo;
          a$$4.nodeTo = tmp;
        }
        introspect(JAM.policy.p3) {
          action$$5(a$$4, id$$16);
        }
      }
    }
    return;
  }
  function v275(graph$$3, action$$4, flags$$2) {
    introspect(JAM.policy.p3) {
      this.eachNode(graph$$3, action$$4, flags$$2);
    }
    return;
  }
  function v274(graph$$2, action$$3, flags$$1) {
    introspect(JAM.policy.p3) {
      var filter = this.filter(flags$$1)
    }
    var i$$38;
    var v7882 = graph$$2.nodes;
    for (i$$38 in v7882) {
      var v19017 = graph$$2.nodes;
      var v14192 = v19017[i$$38];
      introspect(JAM.policy.p3) {
        var v7881 = filter(v14192)
      }
      if (v7881) {
        var v14193 = graph$$2.nodes;
        var v7880 = v14193[i$$38];
        introspect(JAM.policy.p3) {
          action$$3(v7880);
        }
      }
    }
    return;
  }
  function v273(graph$$1, id$$15) {
    var v7883 = graph$$1.nodes;
    return v7883[id$$15];
  }
  function v272(param$$3) {
    function v271(elem$$18) {
      var i$$37 = 0;
      var v14194 = props$$3.length;
      var v7885 = i$$37 < v14194;
      for (;v7885;) {
        var v14195 = props$$3[i$$37];
        var v7884 = elem$$18[v14195];
        if (v7884) {
          return false;
        }
        i$$37++;
        var v14196 = props$$3.length;
        v7885 = i$$37 < v14196;
      }
      return true;
    }
    function v270() {
      return true;
    }
    var v14197 = !param$$3;
    var v19019 = !v14197;
    if (v19019) {
      introspect(JAM.policy.p3) {
        var v23904 = $$$1.type(param$$3)
      }
      var v19018 = v23904 == "string";
      v14197 = !v19018;
    }
    var v7886 = v14197;
    if (v7886) {
      return v270;
    }
    introspect(JAM.policy.p3) {
      var props$$3 = param$$3.split(" ")
    }
    return v271;
  }
  function v269(nodeFrom, nodeTo, data$$21, Edge$$2, Label$$2) {
    this.nodeFrom = nodeFrom;
    this.nodeTo = nodeTo;
    this.data = data$$21 || {};
    this.startData = {};
    this.endData = {};
    this.Config = this.Edge = Edge$$2;
    this.Label = Label$$2;
    return;
  }
  function v268(value$$38, type$$47) {
    type$$47 = type$$47 || "current";
    var pos$$14;
    var v7889 = type$$47 == "current";
    if (v7889) {
      pos$$14 = this.pos;
    } else {
      var v7888 = type$$47 == "end";
      if (v7888) {
        pos$$14 = this.endPos;
      } else {
        var v7887 = type$$47 == "start";
        if (v7887) {
          pos$$14 = this.startPos;
        }
      }
    }
    introspect(JAM.policy.p3) {
      pos$$14.set(value$$38);
    }
    return;
  }
  function v267(type$$46) {
    type$$46 = type$$46 || "current";
    var v7892 = type$$46 == "current";
    if (v7892) {
      return this.pos;
    } else {
      var v7891 = type$$46 == "end";
      if (v7891) {
        return this.endPos;
      } else {
        var v7890 = type$$46 == "start";
        if (v7890) {
          return this.startPos;
        }
      }
    }
    return;
  }
  function v266(id$$14) {
    var v7893 = this.adjacencies;
    return v7893[id$$14];
  }
  function v265(node$$23) {
    var v7894 = node$$23.id;
    var v7895 = this.adjacencies;
    return v7894 in v7895;
  }
  function v264(opt$$9, klass$$5, Node$$2, Edge$$1, Label$$1) {
    var v7896 = {"begin":0, "end":0};
    var v7897 = new klass$$5;
    var v7898 = new klass$$5;
    var v7899 = new klass$$5;
    var innerOptions$$1 = {"id":"", "name":"", "data":{}, "startData":{}, "endData":{}, "adjacencies":{}, "selected":false, "drawn":false, "exist":false, "angleSpan":v7896, "pos":v7897, "startPos":v7898, "endPos":v7899};
    introspect(JAM.policy.p3) {
      var v7900 = $$$1.extend(innerOptions$$1, opt$$9)
    }
    introspect(JAM.policy.p3) {
      $$$1.extend(this, v7900);
    }
    this.Config = this.Node = Node$$2;
    this.Edge = Edge$$1;
    this.Label = Label$$1;
    return;
  }
  function v263() {
    function v262() {
      var v19020 = Array.prototype;
      var v14198 = v19020.slice;
      introspect(JAM.policy.p3) {
        var v7901 = v14198.call(arguments)
      }
      introspect(JAM.policy.p3) {
        removeDataInternal.call(this, "label", v7901);
      }
      return;
    }
    function v261(types$$2, obj$$29) {
      introspect(JAM.policy.p3) {
        types$$2 = $$$1.splat(types$$2);
      }
      var attr$$2;
      for (attr$$2 in obj$$29) {
        var i$$36 = 0;
        var v7902 = obj$$29[attr$$2];
        introspect(JAM.policy.p3) {
          var val$$4 = $$$1.splat(v7902)
        }
        var l$$14 = types$$2.length;
        var v7905 = i$$36 < l$$14;
        for (;v7905;) {
          var v7903 = val$$4[i$$36];
          var v7904 = types$$2[i$$36];
          introspect(JAM.policy.p3) {
            this.setLabelData(attr$$2, v7903, v7904);
          }
          i$$36++;
          v7905 = i$$36 < l$$14;
        }
      }
      return;
    }
    function v260(prop$$14, value$$37, type$$45) {
      introspect(JAM.policy.p3) {
        setDataInternal.call(this, "label", prop$$14, value$$37, type$$45);
      }
      return;
    }
    function v259(prop$$13, type$$44, force$$4) {
      var v7906 = this.Label;
      introspect(JAM.policy.p3) {
        return getDataInternal.call(this, "label", prop$$13, type$$44, force$$4, v7906);
      }
    }
    function v258() {
      var v19021 = Array.prototype;
      var v14199 = v19021.slice;
      introspect(JAM.policy.p3) {
        var v7907 = v14199.call(arguments)
      }
      introspect(JAM.policy.p3) {
        removeDataInternal.call(this, "canvas", v7907);
      }
      return;
    }
    function v257(types$$1, obj$$28) {
      introspect(JAM.policy.p3) {
        types$$1 = $$$1.splat(types$$1);
      }
      var attr$$1;
      for (attr$$1 in obj$$28) {
        var i$$35 = 0;
        var v7908 = obj$$28[attr$$1];
        introspect(JAM.policy.p3) {
          var val$$3 = $$$1.splat(v7908)
        }
        var l$$13 = types$$1.length;
        var v7911 = i$$35 < l$$13;
        for (;v7911;) {
          var v7909 = val$$3[i$$35];
          var v7910 = types$$1[i$$35];
          introspect(JAM.policy.p3) {
            this.setCanvasStyle(attr$$1, v7909, v7910);
          }
          i$$35++;
          v7911 = i$$35 < l$$13;
        }
      }
      return;
    }
    function v256(prop$$12, value$$36, type$$43) {
      introspect(JAM.policy.p3) {
        setDataInternal.call(this, "canvas", prop$$12, value$$36, type$$43);
      }
      return;
    }
    function v255(prop$$11, type$$42, force$$3) {
      var v14200 = this.Config;
      var v7912 = v14200.CanvasStyles;
      introspect(JAM.policy.p3) {
        return getDataInternal.call(this, "canvas", prop$$11, type$$42, force$$3, v7912);
      }
    }
    function v254() {
      var v19022 = Array.prototype;
      var v14201 = v19022.slice;
      introspect(JAM.policy.p3) {
        var v7913 = v14201.call(arguments)
      }
      introspect(JAM.policy.p3) {
        removeDataInternal.call(this, "", v7913);
      }
      return;
    }
    function v253(types, obj$$27) {
      introspect(JAM.policy.p3) {
        types = $$$1.splat(types);
      }
      var attr;
      for (attr in obj$$27) {
        var i$$34 = 0;
        var v7914 = obj$$27[attr];
        introspect(JAM.policy.p3) {
          var val$$2 = $$$1.splat(v7914)
        }
        var l$$12 = types.length;
        var v7917 = i$$34 < l$$12;
        for (;v7917;) {
          var v7915 = val$$2[i$$34];
          var v7916 = types[i$$34];
          introspect(JAM.policy.p3) {
            this.setData(attr, v7915, v7916);
          }
          i$$34++;
          v7917 = i$$34 < l$$12;
        }
      }
      return;
    }
    function v252(prop$$10, value$$35, type$$41) {
      introspect(JAM.policy.p3) {
        setDataInternal.call(this, "", prop$$10, value$$35, type$$41);
      }
      return;
    }
    function v251(prop$$9, type$$40, force$$2) {
      var v7918 = this.Config;
      introspect(JAM.policy.p3) {
        return getDataInternal.call(this, "", prop$$9, type$$40, force$$2, v7918);
      }
    }
    function removeDataInternal(prefix$$4, properties$$3) {
      function v250(prop$$8) {
        var pref = prefix$$4 + prop$$8;
        var v7919 = that$$9.data;
        delete v7919[pref];
        var v7920 = that$$9.endData;
        delete v7920[pref];
        var v7921 = that$$9.startData;
        delete v7921[pref];
        return;
      }
      var v14202;
      if (prefix$$4) {
        v14202 = prefix$$4 + "-";
      } else {
        v14202 = "";
      }
      var v7922 = v14202;
      prefix$$4 = "$" + v7922;
      var that$$9 = this;
      introspect(JAM.policy.p3) {
        $$$1.each(properties$$3, v250);
      }
      return;
    }
    function setDataInternal(prefix$$3, prop$$7, value$$34, type$$39) {
      type$$39 = type$$39 || "current";
      var v14203;
      if (prefix$$3) {
        v14203 = prefix$$3 + "-";
      } else {
        v14203 = "";
      }
      var v7923 = v14203;
      prefix$$3 = "$" + v7923;
      var data$$20;
      var v7926 = type$$39 == "current";
      if (v7926) {
        data$$20 = this.data;
      } else {
        var v7925 = type$$39 == "start";
        if (v7925) {
          data$$20 = this.startData;
        } else {
          var v7924 = type$$39 == "end";
          if (v7924) {
            data$$20 = this.endData;
          }
        }
      }
      var v7927 = prefix$$3 + prop$$7;
      introspect(JAM.policy.p2) {
        data$$20[v7927] = value$$34;
      }
      return;
    }
    function getDataInternal(prefix$$2, prop$$6, type$$38, force$$1, prefixConfig) {
      var data$$19;
      type$$38 = type$$38 || "current";
      var v14204;
      if (prefix$$2) {
        v14204 = prefix$$2 + "-";
      } else {
        v14204 = "";
      }
      var v7928 = v14204;
      prefix$$2 = "$" + v7928;
      var v7931 = type$$38 == "current";
      if (v7931) {
        data$$19 = this.data;
      } else {
        var v7930 = type$$38 == "start";
        if (v7930) {
          data$$19 = this.startData;
        } else {
          var v7929 = type$$38 == "end";
          if (v7929) {
            data$$19 = this.endData;
          }
        }
      }
      var dollar = prefix$$2 + prop$$6;
      if (force$$1) {
        return data$$19[dollar];
      }
      var v19023 = this.Config;
      var v14205 = v19023.overridable;
      var v7933 = !v14205;
      if (v7933) {
        var v7932 = prefixConfig[prop$$6];
        var v14206 = !v7932;
        if (v14206) {
          v7932 = 0;
        }
        return v7932;
      }
      var v7934;
      var v14208 = dollar in data$$19;
      if (v14208) {
        v7934 = data$$19[dollar];
      } else {
        var v14207;
        var v23905 = this.data;
        var v19026 = dollar in v23905;
        if (v19026) {
          var v19024 = this.data;
          v14207 = v19024[dollar];
        } else {
          var v19025 = prefixConfig[prop$$6];
          var v23906 = !v19025;
          if (v23906) {
            v19025 = 0;
          }
          v14207 = v19025;
        }
        v7934 = v14207;
      }
      return v7934;
    }
    Accessors = {getData:v251, setData:v252, setDataset:v253, removeData:v254, getCanvasStyle:v255, setCanvasStyle:v256, setCanvasStyles:v257, removeCanvasStyle:v258, getLabelData:v259, setLabelData:v260, setLabelDataset:v261, removeLabelData:v262};
    return;
  }
  function v249() {
    this.nodes = {};
    this.edges = {};
    return;
  }
  function v248(id$$13) {
    var v7935 = this.nodes;
    return id$$13 in v7935;
  }
  function v247(id1, id2$$1) {
    var v14209 = this.edges;
    var v7936 = v14209[id1];
    delete v7936[id2$$1];
    var v14210 = this.edges;
    var v7937 = v14210[id2$$1];
    delete v7937[id1];
    return;
  }
  function v246(id$$12) {
    introspect(JAM.policy.p3) {
      var v7942 = this.hasNode(id$$12)
    }
    if (v7942) {
      var v7938 = this.nodes;
      delete v7938[id$$12];
      var v7939 = this.edges;
      var adjs = v7939[id$$12];
      var to;
      for (to in adjs) {
        var v14211 = this.edges;
        var v7940 = v14211[to];
        delete v7940[id$$12];
      }
      var v7941 = this.edges;
      delete v7941[id$$12];
    }
    return;
  }
  function v245(obj$$26, obj2, data$$18) {
    var v19027 = obj$$26.id;
    introspect(JAM.policy.p3) {
      var v14212 = this.hasNode(v19027)
    }
    var v7943 = !v14212;
    if (v7943) {
      introspect(JAM.policy.p3) {
        this.addNode(obj$$26);
      }
    }
    var v19028 = obj2.id;
    introspect(JAM.policy.p3) {
      var v14213 = this.hasNode(v19028)
    }
    var v7944 = !v14213;
    if (v7944) {
      introspect(JAM.policy.p3) {
        this.addNode(obj2);
      }
    }
    var v7945 = this.nodes;
    var v7946 = obj$$26.id;
    obj$$26 = v7945[v7946];
    var v7947 = this.nodes;
    var v7948 = obj2.id;
    obj2 = v7947[v7948];
    introspect(JAM.policy.p3) {
      var v14214 = obj$$26.adjacentTo(obj2)
    }
    var v7955 = !v14214;
    if (v7955) {
      var v7949 = this.edges;
      var v7950 = obj$$26.id;
      var v19029 = this.edges;
      var v19030 = obj$$26.id;
      var v14215 = v19029[v19030];
      var v19031 = !v14215;
      if (v19031) {
        v14215 = {};
      }
      introspect(JAM.policy.p2) {
        var adjsObj = v7949[v7950] = v14215
      }
      var v7951 = this.edges;
      var v7952 = obj2.id;
      var v19032 = this.edges;
      var v19033 = obj2.id;
      var v14216 = v19032[v19033];
      var v19034 = !v14216;
      if (v19034) {
        v14216 = {};
      }
      introspect(JAM.policy.p2) {
        var adjsObj2 = v7951[v7952] = v14216
      }
      var v7953 = obj2.id;
      var v14217 = obj$$26.id;
      var v19035 = Graph.Adjacence;
      var v19036 = this.Edge;
      var v19037 = this.Label;
      var v31185 = new v19035(obj$$26, obj2, data$$18, v19036, v19037);
      introspect(JAM.policy.p2) {
        adjsObj[v7953] = adjsObj2[v14217] = v31185;
      }
      var v7954 = obj2.id;
      return adjsObj[v7954];
    }
    var v14218 = this.edges;
    var v14219 = obj$$26.id;
    var v7956 = v14218[v14219];
    var v7957 = obj2.id;
    return v7956[v7957];
  }
  function v244(obj$$25) {
    var v19038 = this.nodes;
    var v19039 = obj$$25.id;
    var v14220 = v19038[v19039];
    var v7962 = !v14220;
    if (v7962) {
      var v7958 = this.edges;
      var v7959 = obj$$25.id;
      introspect(JAM.policy.p2) {
        var edges = v7958[v7959] = {}
      }
      var v7960 = this.nodes;
      var v7961 = obj$$25.id;
      var v14221 = Graph.Node;
      var v23907 = obj$$25.id;
      var v23908 = obj$$25.name;
      var v27702 = obj$$25.data;
      var v28671 = !v27702;
      if (v28671) {
        v27702 = {};
      }
      var v26164 = v27702;
      introspect(JAM.policy.p3) {
        var v23909 = $$$1.merge(v26164, {})
      }
      var v19040 = {"id":v23907, "name":v23908, "data":v23909, "adjacencies":edges};
      var v23910 = this.opt;
      var v19041 = v23910.Node;
      introspect(JAM.policy.p3) {
        var v14222 = $$$1.extend(v19040, v19041)
      }
      var v19042 = this.opt;
      var v14223 = v19042.klass;
      var v14224 = this.Node;
      var v14225 = this.Edge;
      var v14226 = this.Label;
      var v31186 = new v14221(v14222, v14223, v14224, v14225, v14226);
      introspect(JAM.policy.p2) {
        v7960[v7961] = v31186;
      }
    }
    var v7963 = this.nodes;
    var v7964 = obj$$25.id;
    return v7963[v7964];
  }
  function v243(id$$11, id2) {
    var v14227 = this.edges;
    var v7966 = id$$11 in v14227;
    if (v7966) {
      var v14228 = this.edges;
      var v7965 = v14228[id$$11];
      return v7965[id2];
    }
    return false;
  }
  function v242(name$$36) {
    var id$$10;
    var v7969 = this.nodes;
    for (id$$10 in v7969) {
      var v7967 = this.nodes;
      var n$$7 = v7967[id$$10];
      var v14229 = n$$7.name;
      var v7968 = v14229 == name$$36;
      if (v7968) {
        return n$$7;
      }
    }
    return false;
  }
  function v241(id$$9) {
    introspect(JAM.policy.p3) {
      return this.getNode(id$$9);
    }
  }
  function v240(id$$8) {
    introspect(JAM.policy.p3) {
      var v7971 = this.hasNode(id$$8)
    }
    if (v7971) {
      var v7970 = this.nodes;
      return v7970[id$$8];
    }
    return false;
  }
  function v239(opt$$8, Node$$1, Edge, Label) {
    function v238(p$$14) {
      function v237() {
        function v236(n$$6) {
          var v7972 = n$$6[p$$14];
          introspect(JAM.policy.p3) {
            v7972.apply(n$$6, args$$2);
          }
          return;
        }
        var v14230 = Array.prototype;
        var v7973 = v14230.slice;
        introspect(JAM.policy.p3) {
          var args$$2 = v7973.call(arguments)
        }
        introspect(JAM.policy.p3) {
          that$$8.eachNode(v236);
        }
        return;
      }
      return v237;
    }
    var innerOptions = {"klass":Complex, "Node":{}};
    this.Node = Node$$1;
    this.Edge = Edge;
    this.Label = Label;
    var v7974 = opt$$8 || {};
    introspect(JAM.policy.p3) {
      var v31187 = $$$1.merge(innerOptions, v7974)
    }
    this.opt = v31187;
    this.nodes = {};
    this.edges = {};
    var that$$8 = this;
    this.nodeList = {};
    var p$$13;
    for (p$$13 in Accessors) {
      var v7975 = that$$8.nodeList;
      var v7976 = p$$13;
      var v31188 = v238(p$$13);
      introspect(JAM.policy.p2) {
        v7975[v7976] = v31188;
      }
    }
    return;
  }
  function v235() {
    var almostZero$$1 = 1E-4;
    var abs$$1 = Math.abs;
    var v19043 = this.x;
    introspect(JAM.policy.p3) {
      var v14231 = abs$$1(v19043)
    }
    var v7977 = v14231 < almostZero$$1;
    if (v7977) {
      var v19044 = this.y;
      introspect(JAM.policy.p3) {
        var v14232 = abs$$1(v19044)
      }
      v7977 = v14232 < almostZero$$1;
    }
    return v7977;
  }
  function v234(pos$$13) {
    var x$$63 = this.x;
    var y$$44 = this.y;
    introspect(JAM.policy.p3) {
      var sq = pos$$13.squaredNorm()
    }
    var v14233 = pos$$13.x;
    var v7978 = x$$63 * v14233;
    var v14234 = pos$$13.y;
    var v7979 = y$$44 * v14234;
    this.x = v7978 + v7979;
    var v14235 = pos$$13.x;
    var v7980 = y$$44 * v14235;
    var v14236 = pos$$13.y;
    var v7981 = x$$63 * v14236;
    this.y = v7980 - v7981;
    var v7982 = 1 / sq;
    introspect(JAM.policy.p3) {
      return this.$scale(v7982);
    }
  }
  function v233(factor$$2) {
    var v14237 = this.x;
    this.x = v14237 * factor$$2;
    var v14238 = this.y;
    this.y = v14238 * factor$$2;
    return this;
  }
  function v232() {
    var v7983 = this.y;
    this.y = -v7983;
    return this;
  }
  function v231(pos$$12) {
    var x$$62 = this.x;
    var y$$43 = this.y;
    var v14239 = pos$$12.x;
    var v7984 = x$$62 * v14239;
    var v14240 = pos$$12.y;
    var v7985 = y$$43 * v14240;
    this.x = v7984 - v7985;
    var v14241 = pos$$12.x;
    var v7986 = y$$43 * v14241;
    var v14242 = pos$$12.y;
    var v7987 = x$$62 * v14242;
    this.y = v7986 + v7987;
    return this;
  }
  function v230(pos$$11) {
    var v14243 = this.x;
    var v14244 = pos$$11.x;
    this.x = v14243 + v14244;
    var v14245 = this.y;
    var v14246 = pos$$11.y;
    this.y = v14245 + v14246;
    return this;
  }
  function v229(c$$2) {
    var v14247 = this.x;
    var v14248 = c$$2.x;
    var v7988 = v14247 == v14248;
    if (v7988) {
      var v14249 = this.y;
      var v14250 = c$$2.y;
      v7988 = v14249 == v14250;
    }
    return v7988;
  }
  function v228(factor$$1) {
    var v14251 = this.x;
    var v7989 = v14251 * factor$$1;
    var v14252 = this.y;
    var v7990 = v14252 * factor$$1;
    return new Complex(v7989, v7990);
  }
  function v227() {
    var v7991 = this.x;
    var v14253 = this.y;
    var v7992 = -v14253;
    return new Complex(v7991, v7992);
  }
  function v226(pos$$10) {
    var v19045 = this.x;
    var v19046 = pos$$10.x;
    var v14254 = v19045 * v19046;
    var v19047 = this.y;
    var v19048 = pos$$10.y;
    var v14255 = v19047 * v19048;
    var v7993 = v14254 - v14255;
    var v19049 = this.y;
    var v19050 = pos$$10.x;
    var v14256 = v19049 * v19050;
    var v19051 = this.x;
    var v19052 = pos$$10.y;
    var v14257 = v19051 * v19052;
    var v7994 = v14256 + v14257;
    return new Complex(v7993, v7994);
  }
  function v225(pos$$9) {
    var v14258 = this.x;
    var v14259 = pos$$9.x;
    var v7995 = v14258 + v14259;
    var v14260 = this.y;
    var v14261 = pos$$9.y;
    var v7996 = v14260 + v14261;
    return new Complex(v7995, v7996);
  }
  function v224() {
    var v14262 = this.x;
    var v14263 = this.x;
    var v7997 = v14262 * v14263;
    var v14264 = this.y;
    var v14265 = this.y;
    var v7998 = v14264 * v14265;
    return v7997 + v7998;
  }
  function v223() {
    introspect(JAM.policy.p3) {
      var v7999 = this.squaredNorm()
    }
    introspect(JAM.policy.p3) {
      return Math.sqrt(v7999);
    }
  }
  function v222(simple$$3) {
    introspect(JAM.policy.p3) {
      var rho$$4 = this.norm()
    }
    var v8000 = this.y;
    var v8001 = this.x;
    introspect(JAM.policy.p3) {
      var atan = Math.atan2(v8000, v8001)
    }
    var v8002 = atan < 0;
    if (v8002) {
      var v19053 = Math.PI;
      var v14266 = v19053 * 2;
      atan = atan + v14266;
    }
    if (simple$$3) {
      return {"theta":atan, "rho":rho$$4};
    }
    return new Polar(atan, rho$$4);
  }
  function v221() {
    var v8003 = this.x;
    var v8004 = this.y;
    return new Complex(v8003, v8004);
  }
  function v220(theta$$2, rho$$3) {
    introspect(JAM.policy.p3) {
      var v8005 = Math.cos(theta$$2)
    }
    this.x = v8005 * rho$$3;
    introspect(JAM.policy.p3) {
      var v8006 = Math.sin(theta$$2)
    }
    this.y = v8006 * rho$$3;
    return;
  }
  function v219(x$$61, y$$42) {
    this.x = x$$61;
    this.y = y$$42;
    return;
  }
  function v218(c$$1) {
    introspect(JAM.policy.p3) {
      c$$1 = c$$1.getc(true);
    }
    this.x = c$$1.x;
    this.y = c$$1.y;
    return;
  }
  function v217(simple$$2) {
    introspect(JAM.policy.p3) {
      return this.toPolar(simple$$2);
    }
  }
  function v216() {
    return this;
  }
  function v215(elem$$17, delta$$3) {
    function ch$$5(t$$1) {
      var v8007;
      var v14268 = t$$1 < 0;
      if (v14268) {
        var v14267 = t$$1 % pi2;
        v8007 = v14267 + pi2;
      } else {
        v8007 = t$$1 % pi2;
      }
      var a$$1 = v8007;
      return a$$1;
    }
    var pi = Math.PI;
    var pi2 = pi * 2;
    var tt = this.theta;
    var et = elem$$17.theta;
    var sum;
    var v8008 = tt - et;
    introspect(JAM.policy.p3) {
      var diff = Math.abs(v8008)
    }
    var v8017 = diff == pi;
    if (v8017) {
      var v8011 = tt > et;
      if (v8011) {
        var v23911 = tt - pi2;
        var v19054 = v23911 - et;
        var v14269 = v19054 * delta$$3;
        var v8009 = et + v14269;
        sum = ch$$5(v8009);
      } else {
        var v14270 = et - pi2;
        var v19055 = tt - et;
        var v14271 = v19055 * delta$$3;
        var v8010 = v14270 + v14271;
        sum = ch$$5(v8010);
      }
    } else {
      var v8016 = diff >= pi;
      if (v8016) {
        var v8014 = tt > et;
        if (v8014) {
          var v23912 = tt - pi2;
          var v19056 = v23912 - et;
          var v14272 = v19056 * delta$$3;
          var v8012 = et + v14272;
          sum = ch$$5(v8012);
        } else {
          var v14273 = et - pi2;
          var v23913 = et - pi2;
          var v19057 = tt - v23913;
          var v14274 = v19057 * delta$$3;
          var v8013 = v14273 + v14274;
          sum = ch$$5(v8013);
        }
      } else {
        var v19058 = tt - et;
        var v14275 = v19058 * delta$$3;
        var v8015 = et + v14275;
        sum = ch$$5(v8015);
      }
    }
    var v19059 = this.rho;
    var v19060 = elem$$17.rho;
    var v14276 = v19059 - v19060;
    var v8018 = v14276 * delta$$3;
    var v8019 = elem$$17.rho;
    var r = v8018 + v8019;
    return {"theta":sum, "rho":r};
  }
  function v214() {
    var almostZero = 1E-4;
    var abs = Math.abs;
    var v19061 = this.theta;
    introspect(JAM.policy.p3) {
      var v14277 = abs(v19061)
    }
    var v8020 = v14277 < almostZero;
    if (v8020) {
      var v19062 = this.rho;
      introspect(JAM.policy.p3) {
        var v14278 = abs(v19062)
      }
      v8020 = v14278 < almostZero;
    }
    return v8020;
  }
  function v213(number$$1) {
    var v14279 = this.rho;
    this.rho = v14279 * number$$1;
    return this;
  }
  function v212(polar$$2) {
    var v14280 = this.theta;
    var v14281 = polar$$2.theta;
    var v8021 = v14280 + v14281;
    var v14282 = Math.PI;
    var v8022 = v14282 * 2;
    this.theta = v8021 % v8022;
    var v14283 = this.rho;
    var v14284 = polar$$2.rho;
    this.rho = v14283 + v14284;
    return this;
  }
  function v211(polar$$1) {
    var v8023 = this.theta;
    var v8024 = polar$$1.theta;
    this.theta = v8023 + v8024;
    var v14285 = this.rho;
    var v14286 = polar$$1.rho;
    this.rho = v14285 + v14286;
    return this;
  }
  function v210(c) {
    var v14287 = this.theta;
    var v14288 = c.theta;
    var v8025 = v14287 == v14288;
    if (v8025) {
      var v14289 = this.rho;
      var v14290 = c.rho;
      v8025 = v14289 == v14290;
    }
    return v8025;
  }
  function v209(number) {
    var v8026 = this.theta;
    var v14291 = this.rho;
    var v8027 = v14291 * number;
    return new Polar(v8026, v8027);
  }
  function v208(polar) {
    var v14292 = this.theta;
    var v14293 = polar.theta;
    var v8028 = v14292 + v14293;
    var v14294 = this.rho;
    var v14295 = polar.rho;
    var v8029 = v14294 + v14295;
    return new Polar(v8028, v8029);
  }
  function v207(simple$$1) {
    var v14296 = this.theta;
    introspect(JAM.policy.p3) {
      var v8030 = Math.cos(v14296)
    }
    var v8031 = this.rho;
    var x$$59 = v8030 * v8031;
    var v14297 = this.theta;
    introspect(JAM.policy.p3) {
      var v8032 = Math.sin(v14297)
    }
    var v8033 = this.rho;
    var y$$40 = v8032 * v8033;
    if (simple$$1) {
      return {"x":x$$59, "y":y$$40};
    }
    return new Complex(x$$59, y$$40);
  }
  function v206() {
    var v8034 = this.theta;
    var v8035 = this.rho;
    return new Polar(v8034, v8035);
  }
  function v205(theta$$1, rho$$2) {
    this.theta = theta$$1;
    this.rho = rho$$2;
    return;
  }
  function v204(x$$58, y$$39) {
    var v14298 = x$$58 * x$$58;
    var v14299 = y$$39 * y$$39;
    var v8036 = v14298 + v14299;
    introspect(JAM.policy.p3) {
      var v31189 = Math.sqrt(v8036)
    }
    this.rho = v31189;
    introspect(JAM.policy.p3) {
      var v31190 = Math.atan2(y$$39, x$$58)
    }
    this.theta = v31190;
    var v14300 = this.theta;
    var v8037 = v14300 < 0;
    if (v8037) {
      var v14301 = this.theta;
      var v19063 = Math.PI;
      var v14302 = v19063 * 2;
      this.theta = v14301 + v14302;
    }
    return;
  }
  function v203(v) {
    introspect(JAM.policy.p3) {
      v = v.getp();
    }
    this.theta = v.theta;
    this.rho = v.rho;
    return;
  }
  function v202() {
    return this;
  }
  function v201(simple) {
    introspect(JAM.policy.p3) {
      return this.toComplex(simple);
    }
  }
  function v200() {
    function v199(base$$3) {
      var canvas$$7 = base$$3.canvas;
      introspect(JAM.policy.p3) {
        var ctx$$2 = base$$3.getCtx()
      }
      var conf = this.config;
      var styles$$1 = conf.CanvasStyles;
      var s$$6;
      for (s$$6 in styles$$1) {
        introspect(JAM.policy.p2) {
          ctx$$2[s$$6] = styles$$1[s$$6];
        }
      }
      var n$$5 = conf.numberOfCircles;
      var rho = conf.levelDistance;
      var i$$33 = 1;
      var v8040 = i$$33 <= n$$5;
      for (;v8040;) {
        introspect(JAM.policy.p3) {
          ctx$$2.beginPath();
        }
        var v8038 = rho * i$$33;
        var v14303 = Math.PI;
        var v8039 = 2 * v14303;
        introspect(JAM.policy.p3) {
          ctx$$2.arc(0, 0, v8038, 0, v8039, false);
        }
        introspect(JAM.policy.p3) {
          ctx$$2.stroke();
        }
        introspect(JAM.policy.p3) {
          ctx$$2.closePath();
        }
        i$$33++;
        v8040 = i$$33 <= n$$5;
      }
      return;
    }
    function v198(width$$15, height$$14, base$$2) {
      introspect(JAM.policy.p3) {
        this.plot(base$$2);
      }
      return;
    }
    function v197(viz$$5, options$$4) {
      this.viz = viz$$5;
      var v8041 = {idSuffix:"-bkcanvas", levelDistance:100, numberOfCircles:6, CanvasStyles:{}, offset:0};
      introspect(JAM.policy.p3) {
        var v31191 = $$$1.merge(v8041, options$$4)
      }
      this.config = v31191;
      return;
    }
    function v196() {
      introspect(JAM.policy.p3) {
        this.clear();
      }
      var v8042 = this.viz;
      introspect(JAM.policy.p3) {
        v8042.plot(this);
      }
      return;
    }
    function v195() {
      introspect(JAM.policy.p3) {
        var size$$6 = this.getSize()
      }
      var ox$$3 = this.translateOffsetX;
      var oy$$4 = this.translateOffsetY;
      var sx$$5 = this.scaleOffsetX;
      var sy$$5 = this.scaleOffsetY;
      var v14304 = 0 - ox$$3;
      var v8043 = v14304 * 1;
      var x$$57 = v8043 / sx$$5;
      var v14305 = 0 - oy$$4;
      var v8044 = v14305 * 1;
      var y$$38 = v8044 / sy$$5;
      introspect(JAM.policy.p3) {
        var v8045 = this.getCtx()
      }
      var v23914 = size$$6.width;
      var v19064 = v23914 * 1;
      var v14306 = v19064 / sx$$5;
      introspect(JAM.policy.p3) {
        var v14307 = Math.abs(x$$57)
      }
      var v8046 = v14306 + v14307;
      var v23915 = size$$6.height;
      var v19065 = v23915 * 1;
      var v14308 = v19065 / sy$$5;
      introspect(JAM.policy.p3) {
        var v14309 = Math.abs(y$$38)
      }
      var v8047 = v14308 + v14309;
      introspect(JAM.policy.p3) {
        v8045.clearRect(x$$57, y$$38, v8046, v8047);
      }
      return;
    }
    function v194(x$$56, y$$37, disablePlot$$4) {
      var v14310 = this.scaleOffsetX;
      this.scaleOffsetX = v14310 * x$$56;
      var v14311 = this.scaleOffsetY;
      this.scaleOffsetY = v14311 * y$$37;
      introspect(JAM.policy.p3) {
        var v8048 = this.getCtx()
      }
      introspect(JAM.policy.p3) {
        v8048.scale(x$$56, y$$37);
      }
      var v8049 = !disablePlot$$4;
      if (v8049) {
        introspect(JAM.policy.p3) {
          this.plot();
        }
      }
      return;
    }
    function v193(x$$55, y$$36, disablePlot$$3) {
      var sx$$4 = this.scaleOffsetX;
      var sy$$4 = this.scaleOffsetY;
      var v14312 = this.translateOffsetX;
      var v14313 = x$$55 * sx$$4;
      this.translateOffsetX = v14312 + v14313;
      var v14314 = this.translateOffsetY;
      var v14315 = y$$36 * sy$$4;
      this.translateOffsetY = v14314 + v14315;
      introspect(JAM.policy.p3) {
        var v8050 = this.getCtx()
      }
      introspect(JAM.policy.p3) {
        v8050.translate(x$$55, y$$36);
      }
      var v8051 = !disablePlot$$3;
      if (v8051) {
        introspect(JAM.policy.p3) {
          this.plot();
        }
      }
      return;
    }
    function v192(width$$14, height$$13) {
      introspect(JAM.policy.p3) {
        var size$$5 = this.getSize()
      }
      var canvas$$6 = this.canvas;
      var styles = canvas$$6.style;
      this.size = false;
      canvas$$6.width = width$$14;
      canvas$$6.height = height$$13;
      styles.width = width$$14 + "px";
      styles.height = height$$13 + "px";
      var v8052 = !supportsCanvas;
      if (v8052) {
        introspect(JAM.policy.p3) {
          this.translateToCenter(size$$5);
        }
      } else {
        introspect(JAM.policy.p3) {
          this.translateToCenter();
        }
      }
      this.translateOffsetX = this.translateOffsetY = 0;
      this.scaleOffsetX = this.scaleOffsetY = 1;
      introspect(JAM.policy.p3) {
        this.clear();
      }
      var v8053 = this.viz;
      introspect(JAM.policy.p3) {
        v8053.resize(width$$14, height$$13, this);
      }
      return;
    }
    function v191(ps) {
      introspect(JAM.policy.p3) {
        var size$$4 = this.getSize()
      }
      var v8054;
      if (ps) {
        var v19066 = size$$4.width;
        var v19067 = ps.width;
        var v14316 = v19066 - v19067;
        var v19068 = this.translateOffsetX;
        var v14317 = v19068 * 2;
        v8054 = v14316 - v14317;
      } else {
        v8054 = size$$4.width;
      }
      var width$$13 = v8054;
      var v8055;
      if (ps) {
        var v19069 = size$$4.height;
        var v19070 = ps.height;
        var v14318 = v19069 - v19070;
        var v19071 = this.translateOffsetY;
        var v14319 = v19071 * 2;
        v8055 = v14318 - v14319;
      } else {
        v8055 = size$$4.height;
      }
      height = v8055;
      introspect(JAM.policy.p3) {
        var ctx$$1 = this.getCtx()
      }
      if (ps) {
        var v19072 = this.scaleOffsetX;
        var v14320 = 1 / v19072;
        var v19073 = this.scaleOffsetY;
        var v14321 = 1 / v19073;
        introspect(JAM.policy.p3) {
          ctx$$1.scale(v14320, v14321);
        }
      }
      return;
    }
    function v190() {
      var v8056 = this.size;
      if (v8056) {
        return this.size;
      }
      var canvas$$5 = this.canvas;
      var v8057 = canvas$$5.width;
      var v8058 = canvas$$5.height;
      return this.size = {width:v8057, height:v8058};
    }
    function v189() {
      var v14322 = this.ctx;
      var v8060 = !v14322;
      if (v8060) {
        var v8059 = this.canvas;
        introspect(JAM.policy.p3) {
          var v31192 = v8059.getContext("2d")
        }
        return this.ctx = v31192;
      }
      return this.ctx;
    }
    function v188() {
      var opt$$7 = this.opt;
      var width$$12 = opt$$7.width;
      var height$$12 = opt$$7.height;
      var v19074 = opt$$7.injectInto;
      var v19075 = opt$$7.idSuffix;
      var v14323 = v19074 + v19075;
      var v19076 = width$$12 + "px";
      var v19077 = height$$12 + "px";
      var v14324 = {"position":"absolute", "top":0, "left":0, "width":v19076, "height":v19077};
      var v8061 = {"id":v14323, "width":width$$12, "height":height$$12, "style":v14324};
      var v31193 = $E$$1("canvas", v8061);
      this.canvas = v31193;
      return;
    }
    function v187(viz$$4) {
      this.viz = viz$$4;
      this.opt = viz$$4.config;
      this.size = false;
      introspect(JAM.policy.p3) {
        this.createCanvas();
      }
      introspect(JAM.policy.p3) {
        this.translateToCenter();
      }
      return;
    }
    function v186(type$$37, idLabel$$1, dim) {
      var NS = "http://www.w3.org/2000/svg";
      var v14325 = type$$37 == "HTML";
      var v19078 = !v14325;
      if (v19078) {
        v14325 = type$$37 == "Native";
      }
      var v8068 = v14325;
      if (v8068) {
        var v23916 = dim.width;
        var v19079 = v23916 + "px";
        var v14326 = {"overflow":"visible", "position":"absolute", "top":0, "left":0, "width":v19079, "height":0};
        var v8062 = {"id":idLabel$$1, "style":v14326};
        return $E$$1("div", v8062);
      } else {
        var v8067 = type$$37 == "SVG";
        if (v8067) {
          introspect(JAM.policy.p3) {
            var svgContainer = document.createElementNS(NS, "svg:svg")
          }
          var v8063 = dim.width;
          introspect(JAM.policy.p3) {
            svgContainer.setAttribute("width", v8063);
          }
          var v8064 = dim.height;
          introspect(JAM.policy.p3) {
            svgContainer.setAttribute("height", v8064);
          }
          var style$$4 = svgContainer.style;
          style$$4.position = "absolute";
          style$$4.left = style$$4.top = "0px";
          introspect(JAM.policy.p3) {
            var labelContainer$$1 = document.createElementNS(NS, "svg:g")
          }
          var v8065 = dim.width;
          introspect(JAM.policy.p3) {
            labelContainer$$1.setAttribute("width", v8065);
          }
          var v8066 = dim.height;
          introspect(JAM.policy.p3) {
            labelContainer$$1.setAttribute("height", v8066);
          }
          introspect(JAM.policy.p3) {
            labelContainer$$1.setAttribute("x", 0);
          }
          introspect(JAM.policy.p3) {
            labelContainer$$1.setAttribute("y", 0);
          }
          introspect(JAM.policy.p3) {
            labelContainer$$1.setAttribute("id", idLabel$$1);
          }
          introspect(JAM.policy.p3) {
            svgContainer.appendChild(labelContainer$$1);
          }
          return svgContainer;
        }
      }
      return;
    }
    function v185(type$$36, action$$2) {
      var v14327 = this.canvases;
      var v8069 = v14327[0];
      introspect(JAM.policy.p3) {
        var ctx = v8069.getCtx()
      }
      introspect(JAM.policy.p3) {
        ctx.beginPath();
      }
      introspect(JAM.policy.p3) {
        action$$2(ctx);
      }
      introspect(JAM.policy.p3) {
        ctx[type$$36]();
      }
      introspect(JAM.policy.p3) {
        ctx.closePath();
      }
      return;
    }
    function v184(i$$32) {
      var v14328 = this.canvases;
      var v14329 = i$$32 || 0;
      var v8070 = v14328[v14329];
      introspect(JAM.policy.p3) {
        v8070.clear();
      }
      return;
    }
    function v183(force) {
      var v14330 = force;
      var v19081 = !v14330;
      if (v19081) {
        var v19080 = this.pos;
        v14330 = !v19080;
      }
      var v8072 = v14330;
      if (v8072) {
        var v8071 = this.element;
        introspect(JAM.policy.p3) {
          var v31194 = $$$1.getPos(v8071)
        }
        return this.pos = v31194;
      }
      return this.pos;
    }
    function v182(x$$54, y$$35, disablePlot$$2) {
      introspect(JAM.policy.p3) {
        var cur = this.getZoom()
      }
      var v8073 = cur.x;
      var px$$1 = x$$54 / v8073;
      var v8074 = cur.y;
      var py$$1 = y$$35 / v8074;
      introspect(JAM.policy.p3) {
        this.scale(px$$1, py$$1, disablePlot$$2);
      }
      return;
    }
    function v181() {
      var v8075 = this.scaleOffsetX;
      var v8076 = this.scaleOffsetY;
      return new Complex(v8075, v8076);
    }
    function v180(x$$53, y$$34, disablePlot$$1) {
      var v8077 = this.scaleOffsetX;
      var px = v8077 * x$$53;
      var v8078 = this.scaleOffsetY;
      var py = v8078 * y$$34;
      var v14331 = this.translateOffsetX;
      var v14332 = x$$53 - 1;
      var v8079 = v14331 * v14332;
      var dx$$4 = v8079 / px;
      var v14333 = this.translateOffsetY;
      var v14334 = y$$34 - 1;
      var v8080 = v14333 * v14334;
      var dy$$4 = v8080 / py;
      this.scaleOffsetX = px;
      this.scaleOffsetY = py;
      var i$$31 = 0;
      var v8081 = this.canvases;
      var l$$11 = v8081.length;
      var v8083 = i$$31 < l$$11;
      for (;v8083;) {
        var v14335 = this.canvases;
        var v8082 = v14335[i$$31];
        introspect(JAM.policy.p3) {
          v8082.scale(x$$53, y$$34, true);
        }
        i$$31++;
        v8083 = i$$31 < l$$11;
      }
      introspect(JAM.policy.p3) {
        this.translate(dx$$4, dy$$4, false);
      }
      return;
    }
    function v179(x$$52, y$$33, disablePlot) {
      var v14336 = this.translateOffsetX;
      var v19082 = this.scaleOffsetX;
      var v14337 = x$$52 * v19082;
      this.translateOffsetX = v14336 + v14337;
      var v14338 = this.translateOffsetY;
      var v19083 = this.scaleOffsetY;
      var v14339 = y$$33 * v19083;
      this.translateOffsetY = v14338 + v14339;
      var i$$30 = 0;
      var v8084 = this.canvases;
      var l$$10 = v8084.length;
      var v8086 = i$$30 < l$$10;
      for (;v8086;) {
        var v14340 = this.canvases;
        var v8085 = v14340[i$$30];
        introspect(JAM.policy.p3) {
          v8085.translate(x$$52, y$$33, disablePlot);
        }
        i$$30++;
        v8086 = i$$30 < l$$10;
      }
      return;
    }
    function v178(width$$11, height$$11) {
      introspect(JAM.policy.p3) {
        this.getPos(true);
      }
      this.translateOffsetX = this.translateOffsetY = 0;
      this.scaleOffsetX = this.scaleOffsetY = 1;
      var i$$29 = 0;
      var v8087 = this.canvases;
      var l$$9 = v8087.length;
      var v8089 = i$$29 < l$$9;
      for (;v8089;) {
        var v14341 = this.canvases;
        var v8088 = v14341[i$$29];
        introspect(JAM.policy.p3) {
          v8088.resize(width$$11, height$$11);
        }
        i$$29++;
        v8089 = i$$29 < l$$9;
      }
      var v8090 = this.element;
      var style$$3 = v8090.style;
      style$$3.width = width$$11 + "px";
      style$$3.height = height$$11 + "px";
      var v8092 = this.labelContainer;
      if (v8092) {
        var v14342 = this.labelContainer;
        var v8091 = v14342.style;
        v8091.width = width$$11 + "px";
      }
      return;
    }
    function v177(i$$28) {
      var v14343 = this.canvases;
      var v14344 = i$$28 || 0;
      var v8093 = v14343[v14344];
      introspect(JAM.policy.p3) {
        return v8093.getSize();
      }
    }
    function v176() {
      return this.element;
    }
    function v175() {
      return this.opt;
    }
    function v174(i$$27) {
      var v14345 = this.canvases;
      var v14346 = i$$27 || 0;
      var v8094 = v14345[v14346];
      introspect(JAM.policy.p3) {
        return v8094.getCtx();
      }
    }
    function v173(viz$$3, opt$$6) {
      function v172() {
        function v171() {
          introspect(JAM.policy.p3) {
            that$$7.getPos(true);
          }
          return;
        }
        clearTimeout(timer);
        timer = setTimeout(v171, 500);
        return;
      }
      function v170() {
        introspect(JAM.policy.p3) {
          viz$$3.refresh();
        }
        return;
      }
      function v169(base$$1) {
        var v8095 = viz$$3.fx;
        introspect(JAM.policy.p3) {
          v8095.plot();
        }
        return;
      }
      this.viz = viz$$3;
      this.opt = this.config = opt$$6;
      var v8096;
      var v23917 = opt$$6.injectInto;
      introspect(JAM.policy.p3) {
        var v19084 = $$$1.type(v23917)
      }
      var v14348 = v19084 == "string";
      if (v14348) {
        v8096 = opt$$6.injectInto;
      } else {
        var v14347 = opt$$6.injectInto;
        v8096 = v14347.id;
      }
      var id$$7 = v8096;
      var type$$35 = opt$$6.type;
      var idLabel = id$$7 + "-label";
      var wrapper = $$$1(id$$7);
      var v8097 = opt$$6.width;
      var v14349 = !v8097;
      if (v14349) {
        v8097 = wrapper.offsetWidth;
      }
      var width$$10 = v8097;
      var v8098 = opt$$6.height;
      var v14350 = !v8098;
      if (v14350) {
        v8098 = wrapper.offsetHeight;
      }
      var height$$10 = v8098;
      this.id = id$$7;
      var canvasOptions = {injectInto:id$$7, width:width$$10, height:height$$10};
      var v14351 = id$$7 + "-canvaswidget";
      var v19085 = width$$10 + "px";
      var v19086 = height$$10 + "px";
      var v14352 = {"position":"relative", "width":v19085, "height":v19086};
      var v8099 = {"id":v14351, "style":v14352};
      var v31195 = $E$$1("div", v8099);
      this.element = v31195;
      var v14353 = opt$$6.Label;
      var v8100 = v14353.type;
      introspect(JAM.policy.p3) {
        var v31196 = this.createLabelContainer(v8100, idLabel, canvasOptions)
      }
      this.labelContainer = v31196;
      var v8101 = this.canvases;
      var v19087 = Canvas.Base;
      var v14354 = v19087[type$$35];
      var v23918 = {idSuffix:"-canvas"};
      introspect(JAM.policy.p3) {
        var v19088 = $$$1.extend(v23918, canvasOptions)
      }
      var v14355 = {config:v19088, plot:v169, resize:v170};
      var v8102 = new v14354(v14355);
      introspect(JAM.policy.p3) {
        v8101.push(v8102);
      }
      var back = opt$$6.background;
      if (back) {
        var v14356 = Canvas.Background;
        var v14357 = back.type;
        var v8103 = v14356[v14357];
        introspect(JAM.policy.p3) {
          var v8104 = $$$1.extend(back, canvasOptions)
        }
        var backCanvas = new v8103(viz$$3, v8104);
        var v8105 = this.canvases;
        var v19089 = Canvas.Base;
        var v14358 = v19089[type$$35];
        var v8106 = new v14358(backCanvas);
        introspect(JAM.policy.p3) {
          v8105.push(v8106);
        }
      }
      var v8107 = this.canvases;
      var len$$1 = v8107.length;
      var v8112 = len$$1;
      len$$1 = len$$1 - 1;
      for (;v8112;) {
        var v8108 = this.element;
        var v19090 = this.canvases;
        var v14359 = v19090[len$$1];
        var v8109 = v14359.canvas;
        introspect(JAM.policy.p3) {
          v8108.appendChild(v8109);
        }
        var v8111 = len$$1 > 0;
        if (v8111) {
          var v14360 = this.canvases;
          var v8110 = v14360[len$$1];
          introspect(JAM.policy.p3) {
            v8110.plot();
          }
        }
        v8112 = len$$1;
        len$$1 = len$$1 - 1;
      }
      var v8113 = this.element;
      var v8114 = this.labelContainer;
      introspect(JAM.policy.p3) {
        v8113.appendChild(v8114);
      }
      var v8115 = this.element;
      introspect(JAM.policy.p3) {
        wrapper.appendChild(v8115);
      }
      var timer = null;
      var that$$7 = this;
      introspect(JAM.policy.p3) {
        $$$1.addEvent(window, "scroll", v172);
      }
      return;
    }
    function $E$$1(tag$$1, props$$2) {
      introspect(JAM.policy.p3) {
        var elem$$16 = document.createElement(tag$$1)
      }
      var p$$12;
      for (p$$12 in props$$2) {
        var v19091 = props$$2[p$$12];
        var v14361 = typeof v19091;
        var v8118 = v14361 == "object";
        if (v8118) {
          var v8116 = elem$$16[p$$12];
          var v8117 = props$$2[p$$12];
          introspect(JAM.policy.p3) {
            $$$1.extend(v8116, v8117);
          }
        } else {
          introspect(JAM.policy.p2) {
            elem$$16[p$$12] = props$$2[p$$12];
          }
        }
      }
      var v19092 = tag$$1 == "canvas";
      if (v19092) {
        v19092 = !supportsCanvas;
      }
      var v14362 = v19092;
      if (v14362) {
        v14362 = G_vmlCanvasManager;
      }
      var v8120 = v14362;
      if (v8120) {
        var v14363 = document.body;
        introspect(JAM.policy.p3) {
          var v8119 = v14363.appendChild(elem$$16)
        }
        introspect(JAM.policy.p3) {
          elem$$16 = G_vmlCanvasManager.initElement(v8119);
        }
      }
      return elem$$16;
    }
    var canvasType = typeof HTMLCanvasElement;
    var v8121 = canvasType == "object";
    var v14364 = !v8121;
    if (v14364) {
      v8121 = canvasType == "function";
    }
    var supportsCanvas = v8121;
    var v8122 = $jit;
    var v14365 = {canvases:[], pos:false, element:false, labelContainer:false, translateOffsetX:0, translateOffsetY:0, scaleOffsetX:1, scaleOffsetY:1, initialize:v173, getCtx:v174, getConfig:v175, getElement:v176, getSize:v177, resize:v178, translate:v179, scale:v180, getZoom:v181, setZoom:v182, getPos:v183, clear:v184, path:v185, createLabelContainer:v186};
    v8122.Canvas = Canvas = new Class(v14365);
    Canvas.Base = {};
    var v8123 = Canvas.Base;
    var v14366 = {translateOffsetX:0, translateOffsetY:0, scaleOffsetX:1, scaleOffsetY:1, initialize:v187, createCanvas:v188, getCtx:v189, getSize:v190, translateToCenter:v191, resize:v192, translate:v193, scale:v194, clear:v195, plot:v196};
    var v31197 = new Class(v14366);
    v8123["2D"] = v31197;
    Canvas.Background = {};
    var v8124 = Canvas.Background;
    var v14367 = {initialize:v197, resize:v198, plot:v199};
    var v31198 = new Class(v14367);
    v8124.Circles = v31198;
    return;
  }
  function v168(e$$45, win$$33, eventInfo$$4, isRightClick$$3) {
    var v19093 = this.config;
    var v14368 = v19093.panning;
    var v8125 = !v14368;
    if (v8125) {
      return;
    }
    this.pressed = false;
    return;
  }
  function v167(e$$44, win$$32, eventInfo$$3) {
    var v19094 = this.config;
    var v14369 = v19094.panning;
    var v8126 = !v14369;
    if (v8126) {
      return;
    }
    var v14370 = this.pressed;
    var v8127 = !v14370;
    if (v8127) {
      return;
    }
    var v23919 = this.config;
    var v19095 = v23919.panning;
    var v14371 = v19095 == "avoid nodes";
    if (v14371) {
      var v19096;
      var v23920 = this.dom;
      if (v23920) {
        introspect(JAM.policy.p3) {
          v19096 = this.isLabel(e$$44, win$$32);
        }
      } else {
        introspect(JAM.policy.p3) {
          v19096 = eventInfo$$3.getNode();
        }
      }
      v14371 = v19096;
    }
    var v8128 = v14371;
    if (v8128) {
      return;
    }
    var thispos = this.pos;
    introspect(JAM.policy.p3) {
      var currentPos = eventInfo$$3.getPos()
    }
    var canvas$$4 = this.canvas;
    var ox$$2 = canvas$$4.translateOffsetX;
    var oy$$3 = canvas$$4.translateOffsetY;
    var sx$$3 = canvas$$4.scaleOffsetX;
    var sy$$3 = canvas$$4.scaleOffsetY;
    var v14372 = currentPos.x;
    currentPos.x = v14372 * sx$$3;
    var v14373 = currentPos.y;
    currentPos.y = v14373 * sy$$3;
    var v14374 = currentPos.x;
    currentPos.x = v14374 + ox$$2;
    var v14375 = currentPos.y;
    currentPos.y = v14375 + oy$$3;
    var v8129 = currentPos.x;
    var v8130 = thispos.x;
    var x$$51 = v8129 - v8130;
    var v8131 = currentPos.y;
    var v8132 = thispos.y;
    var y$$32 = v8131 - v8132;
    this.pos = currentPos;
    var v8133 = this.canvas;
    var v14376 = x$$51 * 1;
    var v8134 = v14376 / sx$$3;
    var v14377 = y$$32 * 1;
    var v8135 = v14377 / sy$$3;
    introspect(JAM.policy.p3) {
      v8133.translate(v8134, v8135);
    }
    return;
  }
  function v166(e$$43, win$$31, eventInfo$$2) {
    var v19097 = this.config;
    var v14378 = v19097.panning;
    var v8136 = !v14378;
    if (v8136) {
      return;
    }
    var v23921 = this.config;
    var v19098 = v23921.panning;
    var v14379 = v19098 == "avoid nodes";
    if (v14379) {
      var v19099;
      var v23922 = this.dom;
      if (v23922) {
        introspect(JAM.policy.p3) {
          v19099 = this.isLabel(e$$43, win$$31);
        }
      } else {
        introspect(JAM.policy.p3) {
          v19099 = eventInfo$$2.getNode();
        }
      }
      v14379 = v19099;
    }
    var v8137 = v14379;
    if (v8137) {
      return;
    }
    this.pressed = true;
    introspect(JAM.policy.p3) {
      var v31199 = eventInfo$$2.getPos()
    }
    this.pos = v31199;
    var canvas$$3 = this.canvas;
    var ox$$1 = canvas$$3.translateOffsetX;
    var oy$$2 = canvas$$3.translateOffsetY;
    var sx$$2 = canvas$$3.scaleOffsetX;
    var sy$$2 = canvas$$3.scaleOffsetY;
    var v8138 = this.pos;
    var v19100 = v8138.x;
    v8138.x = v19100 * sx$$2;
    var v8139 = this.pos;
    var v19101 = v8139.x;
    v8139.x = v19101 + ox$$1;
    var v8140 = this.pos;
    var v19102 = v8140.y;
    v8140.y = v19102 * sy$$2;
    var v8141 = this.pos;
    var v19103 = v8141.y;
    v8141.y = v19103 + oy$$2;
    return;
  }
  function v165(e$$42, win$$30, scroll$$2) {
    var v19104 = this.config;
    var v14380 = v19104.zooming;
    var v8142 = !v14380;
    if (v8142) {
      return;
    }
    var v8143 = $$$1.event;
    var v14381 = $$$1.event;
    introspect(JAM.policy.p3) {
      var v8144 = v14381.get(e$$42, win$$30)
    }
    introspect(JAM.policy.p3) {
      v8143.stop(v8144);
    }
    var v14382 = this.config;
    var v8145 = v14382.zooming;
    var val$$1 = v8145 / 1E3;
    var v8146 = scroll$$2 * val$$1;
    var ans$$4 = 1 + v8146;
    var v8147 = this.canvas;
    introspect(JAM.policy.p3) {
      v8147.scale(ans$$4, ans$$4);
    }
    return;
  }
  function v164() {
    this.pos = false;
    this.pressed = false;
    return;
  }
  function v163(e$$41, win$$29, event$$15) {
    function v162(n$$4) {
      var v14383 = n$$4.hovered;
      if (v14383) {
        var v19105 = n$$4.selected;
        v14383 = !v19105;
      }
      var v8149 = v14383;
      if (v8149) {
        var s$$5;
        for (s$$5 in nStyles$$3) {
          var v14384 = n$$4.styles;
          var v14385 = "$" + s$$5;
          var v8148 = v14384[v14385];
          introspect(JAM.policy.p3) {
            n$$4.setData(s$$5, v8148, "end");
          }
        }
        delete n$$4.hovered;
      }
      return;
    }
    var v8150 = this.down;
    if (v8150) {
      this.move = true;
    }
    var v14386 = this.dom;
    if (v14386) {
      introspect(JAM.policy.p3) {
        v14386 = this.isLabel(e$$41, win$$29);
      }
    }
    var v8151 = v14386;
    if (v8151) {
      return;
    }
    var nStyles$$3 = this.nodeStylesOnHover;
    var v8152 = !nStyles$$3;
    if (v8152) {
      return;
    }
    var v14387 = this.dom;
    var v8166 = !v14387;
    if (v8166) {
      var v8156 = this.hoveredNode;
      if (v8156) {
        var v8153 = this.types;
        var v14388 = this.hoveredNode;
        introspect(JAM.policy.p3) {
          var v8154 = v14388.getData("type")
        }
        var geom$$3 = v8153[v8154];
        var v14389 = geom$$3;
        if (v14389) {
          v14389 = geom$$3.contains;
        }
        var v8155 = v14389;
        if (v8155) {
          var v14390 = geom$$3.contains;
          var v14391 = this.fx;
          var v14392 = this.hoveredNode;
          introspect(JAM.policy.p3) {
            var v14393 = event$$15.getPos()
          }
          introspect(JAM.policy.p3) {
            v8155 = v14390.call(v14391, v14392, v14393);
          }
        }
        var contains$$3 = v8155;
        if (contains$$3) {
          return;
        }
      }
      introspect(JAM.policy.p3) {
        var node$$22 = event$$15.getNode()
      }
      var v19106 = this.hoveredNode;
      var v14394 = !v19106;
      if (v14394) {
        v14394 = !node$$22;
      }
      var v8157 = v14394;
      if (v8157) {
        return;
      }
      var v8158 = node$$22.hovered;
      if (v8158) {
        return;
      }
      var v14395 = node$$22;
      if (v14395) {
        var v19107 = node$$22.selected;
        v14395 = !v19107;
      }
      var v8165 = v14395;
      if (v8165) {
        var v14396 = this.fx;
        var v8159 = v14396.nodeFxAnimation;
        introspect(JAM.policy.p3) {
          v8159.stopTimer();
        }
        var v14397 = this.viz;
        var v8160 = v14397.graph;
        introspect(JAM.policy.p3) {
          v8160.eachNode(v162);
        }
        node$$22.hovered = true;
        this.hoveredNode = node$$22;
        introspect(JAM.policy.p3) {
          this.toggleStylesOnHover(node$$22, true);
        }
      } else {
        var v14398 = this.hoveredNode;
        if (v14398) {
          var v23923 = this.hoveredNode;
          var v19108 = v23923.selected;
          v14398 = !v19108;
        }
        var v8164 = v14398;
        if (v8164) {
          var v14399 = this.fx;
          var v8161 = v14399.nodeFxAnimation;
          introspect(JAM.policy.p3) {
            v8161.stopTimer();
          }
          var v8162 = this.hoveredNode;
          introspect(JAM.policy.p3) {
            this.toggleStylesOnHover(v8162, false);
          }
          var v8163 = this.hoveredNode;
          delete v8163.hovered;
          this.hoveredNode = false;
        }
      }
    }
    return;
  }
  function v161(node$$21) {
    function v160(n$$3) {
      var v8168 = n$$3.selected;
      if (v8168) {
        var s$$4;
        for (s$$4 in nStyles$$2) {
          var v14400 = n$$3.styles;
          var v14401 = "$" + s$$4;
          var v8167 = v14400[v14401];
          introspect(JAM.policy.p3) {
            n$$3.setData(s$$4, v8167, "end");
          }
        }
        delete n$$3.selected;
      }
      return;
    }
    var v8169 = !node$$21;
    if (v8169) {
      return;
    }
    var nStyles$$2 = this.nodeStylesOnClick;
    var v8170 = !nStyles$$2;
    if (v8170) {
      return;
    }
    var v8172 = node$$21.selected;
    if (v8172) {
      introspect(JAM.policy.p3) {
        this.toggleStylesOnClick(node$$21, false);
      }
      delete node$$21.selected;
    } else {
      var v14402 = this.viz;
      var v8171 = v14402.graph;
      introspect(JAM.policy.p3) {
        v8171.eachNode(v160);
      }
      introspect(JAM.policy.p3) {
        this.toggleStylesOnClick(node$$21, true);
      }
      node$$21.selected = true;
      delete node$$21.hovered;
      this.hoveredNode = false;
    }
    return;
  }
  function v159(type$$34, node$$20, set$$2) {
    var viz$$2 = this.viz;
    var nStyles$$1 = this.nStyles;
    if (set$$2) {
      var that$$6 = this;
      var v14403 = node$$20.styles;
      var v8174 = !v14403;
      if (v8174) {
        var v8173 = node$$20.data;
        introspect(JAM.policy.p3) {
          var v31200 = $$$1.merge(v8173, {})
        }
        node$$20.styles = v31200;
      }
      var s$$3;
      var v14404 = "nodeStylesOn" + type$$34;
      var v8177 = this[v14404];
      for (s$$3 in v8177) {
        var $s = "$" + s$$3;
        var v19109 = node$$20.styles;
        var v14405 = $s in v19109;
        var v8176 = !v14405;
        if (v8176) {
          var v8175 = node$$20.styles;
          introspect(JAM.policy.p3) {
            var v31201 = node$$20.getData(s$$3)
          }
          introspect(JAM.policy.p2) {
            v8175[$s] = v31201;
          }
        }
      }
      var v8178 = viz$$2.fx;
      var v23924 = node$$20.id;
      var v26165 = "nodeStylesOn" + type$$34;
      var v23925 = that$$6[v26165];
      var v19110 = {"id":v23924, "properties":v23925};
      var v23926 = Trans.Quart;
      var v19111 = v23926.easeOut;
      var v14406 = {"elements":v19110, transition:v19111, duration:300, fps:40};
      var v14407 = this.config;
      introspect(JAM.policy.p3) {
        var v8179 = $$$1.extend(v14406, v14407)
      }
      introspect(JAM.policy.p3) {
        v8178.nodeFx(v8179);
      }
    } else {
      introspect(JAM.policy.p3) {
        var restoredStyles$$1 = this.getRestoredStyles(node$$20, type$$34)
      }
      var v8180 = viz$$2.fx;
      var v23927 = node$$20.id;
      var v19112 = {"id":v23927, "properties":restoredStyles$$1};
      var v23928 = Trans.Quart;
      var v19113 = v23928.easeOut;
      var v14408 = {"elements":v19112, transition:v19113, duration:300, fps:40};
      var v14409 = this.config;
      introspect(JAM.policy.p3) {
        var v8181 = $$$1.extend(v14408, v14409)
      }
      introspect(JAM.policy.p3) {
        v8180.nodeFx(v8181);
      }
    }
    return;
  }
  function v158(node$$19, set$$1) {
    var v8182 = this.nodeStylesOnClick;
    if (v8182) {
      introspect(JAM.policy.p3) {
        this.toggleStylesOn("Click", node$$19, set$$1);
      }
    }
    return;
  }
  function v157(node$$18, set) {
    var v8183 = this.nodeStylesOnHover;
    if (v8183) {
      introspect(JAM.policy.p3) {
        this.toggleStylesOn("Hover", node$$18, set);
      }
    }
    return;
  }
  function v156(node$$17, type$$33) {
    var restoredStyles = {};
    var v8184 = "nodeStylesOn" + type$$33;
    var nStyles = this[v8184];
    var prop$$5;
    for (prop$$5 in nStyles) {
      var v8185 = node$$17.styles;
      var v8186 = "$" + prop$$5;
      introspect(JAM.policy.p2) {
        restoredStyles[prop$$5] = v8185[v8186];
      }
    }
    return restoredStyles;
  }
  function v155(e$$40, win$$28, event$$14, isRightClick$$2) {
    if (isRightClick$$2) {
      return;
    }
    var v14410 = this.move;
    var v8188 = !v14410;
    if (v8188) {
      introspect(JAM.policy.p3) {
        var v8187 = event$$14.getNode()
      }
      introspect(JAM.policy.p3) {
        this.onClick(v8187);
      }
    }
    this.down = this.move = false;
    return;
  }
  function v154(e$$39, win$$27, event$$13, isRightClick$$1) {
    if (isRightClick$$1) {
      return;
    }
    var label$$9;
    var v14411 = this.dom;
    if (v14411) {
      introspect(JAM.policy.p3) {
        v14411 = label$$9 = this.isLabel(e$$39, win$$27);
      }
    }
    var v8192 = v14411;
    if (v8192) {
      var v14412 = this.viz;
      var v8189 = v14412.graph;
      var v8190 = label$$9.id;
      introspect(JAM.policy.p3) {
        var v31202 = v8189.getNode(v8190)
      }
      this.down = v31202;
    } else {
      var v14413 = this.dom;
      var v8191 = !v14413;
      if (v8191) {
        introspect(JAM.policy.p3) {
          var v31203 = event$$13.getNode()
        }
        this.down = v31203;
      }
    }
    this.move = false;
    return;
  }
  function v153(e$$38, win$$26) {
    var label$$8;
    var v14414 = this.dom;
    if (v14414) {
      introspect(JAM.policy.p3) {
        v14414 = label$$8 = this.isLabel(e$$38, win$$26, true);
      }
    }
    var v8197 = v14414;
    if (v8197) {
      var v14415 = this.viz;
      var v8193 = v14415.graph;
      var v8194 = label$$8.id;
      introspect(JAM.policy.p3) {
        var node$$16 = v8193.getNode(v8194)
      }
      var v8195 = node$$16.selected;
      if (v8195) {
        return;
      }
      this.hoveredNode = node$$16;
      var v8196 = this.hoveredNode;
      introspect(JAM.policy.p3) {
        this.toggleStylesOnHover(v8196, true);
      }
    }
    return;
  }
  function v152(e$$37, win$$25) {
    this.down = this.move = false;
    var v14416 = this.hoveredNode;
    var v8198 = !v14416;
    if (v8198) {
      return;
    }
    var v14417 = this.dom;
    if (v14417) {
      introspect(JAM.policy.p3) {
        v14417 = this.isLabel(e$$37, win$$25, true);
      }
    }
    var v8200 = v14417;
    if (v8200) {
      var v8199 = this.hoveredNode;
      introspect(JAM.policy.p3) {
        this.toggleStylesOnHover(v8199, false);
      }
    }
    var rt$$2 = e$$37.relatedTarget;
    var v8201 = this.canvas;
    var canvasWidget$$2 = v8201.element;
    var v14418 = rt$$2;
    if (v14418) {
      v14418 = rt$$2.parentNode;
    }
    var v8203 = v14418;
    for (;v8203;) {
      var v14419 = rt$$2.parentNode;
      var v8202 = canvasWidget$$2 == v14419;
      if (v8202) {
        return;
      }
      rt$$2 = rt$$2.parentNode;
      var v14420 = rt$$2;
      if (v14420) {
        v14420 = rt$$2.parentNode;
      }
      v8203 = v14420;
    }
    var v8204 = this.hoveredNode;
    introspect(JAM.policy.p3) {
      this.toggleStylesOnHover(v8204, false);
    }
    this.hoveredNode = false;
    return;
  }
  function v151() {
    var v8205 = this.viz;
    this.fx = v8205.fx;
    var v14421 = this.viz;
    var v8206 = v14421.fx;
    this.types = v8206.nodeTypes;
    this.nStyles = this.config;
    var v8207 = this.nStyles;
    this.nodeStylesOnHover = v8207.stylesHover;
    var v8208 = this.nStyles;
    this.nodeStylesOnClick = v8208.stylesClick;
    this.hoveredNode = false;
    var v8209 = this.fx;
    var v31204 = new Animation;
    v8209.nodeFxAnimation = v31204;
    this.down = false;
    this.move = false;
    return;
  }
  function v150(triggerCallback) {
    var v14422 = this.tip;
    var v8210 = v14422.style;
    v8210.display = "none";
    if (triggerCallback) {
      var v14423 = this.config;
      introspect(JAM.policy.p3) {
        v14423.onHide();
      }
    }
    return;
  }
  function v149(pos$$8) {
    var tip$$1 = this.tip;
    var style$$2 = tip$$1.style;
    var cont = this.config;
    style$$2.display = "";
    var v23929 = document.compatMode;
    var v19114 = v23929 === "CSS1Compat";
    if (v19114) {
      v19114 = document.documentElement;
    }
    var v14424 = v19114;
    var v19115 = !v14424;
    if (v19115) {
      v14424 = document.body;
    }
    var v8211 = v14424;
    var v14425 = !v8211;
    if (v14425) {
      v8211 = document.documentElement;
    }
    var elem$$15 = v8211;
    var JSCompiler_object_inline_width_82 = elem$$15.clientWidth;
    var JSCompiler_object_inline_height_83 = elem$$15.clientHeight;
    var v19116 = window.pageXOffset;
    var v23931 = !v19116;
    if (v23931) {
      var v23930 = document.documentElement;
      if (v23930) {
        var v26166 = document.documentElement;
        v23930 = v26166.scrollLeft;
      }
      v19116 = v23930;
    }
    var v14426 = v19116;
    var v19118 = !v14426;
    if (v19118) {
      var v19117 = document.body;
      if (v19117) {
        var v23932 = document.body;
        v19117 = v23932.scrollLeft;
      }
      v14426 = v19117;
    }
    var v8212 = v14426;
    var v14427 = !v8212;
    if (v14427) {
      v8212 = 0;
    }
    var JSCompiler_object_inline_x_84 = v8212;
    var v19119 = window.pageYOffset;
    var v23934 = !v19119;
    if (v23934) {
      var v23933 = document.documentElement;
      if (v23933) {
        var v26167 = document.documentElement;
        v23933 = v26167.scrollTop;
      }
      v19119 = v23933;
    }
    var v14428 = v19119;
    var v19121 = !v14428;
    if (v19121) {
      var v19120 = document.body;
      if (v19120) {
        var v23935 = document.body;
        v19120 = v23935.scrollTop;
      }
      v14428 = v19120;
    }
    var v8213 = v14428;
    var v14429 = !v8213;
    if (v14429) {
      v8213 = 0;
    }
    var JSCompiler_object_inline_y_85 = v8213;
    var JSCompiler_object_inline_width_86 = tip$$1.offsetWidth;
    var JSCompiler_object_inline_height_87 = tip$$1.offsetHeight;
    var x$$50 = cont.offsetX;
    var y$$31 = cont.offsetY;
    var v14430;
    var v27703 = pos$$8.y;
    var v26168 = v27703 + JSCompiler_object_inline_height_87;
    var v23936 = v26168 + y$$31;
    var v23937 = JSCompiler_object_inline_height_83 + JSCompiler_object_inline_y_85;
    var v19124 = v23936 > v23937;
    if (v19124) {
      var v23938 = pos$$8.y;
      var v19122 = v23938 - JSCompiler_object_inline_height_87;
      v14430 = v19122 - y$$31;
    } else {
      var v19123 = pos$$8.y;
      v14430 = v19123 + y$$31;
    }
    var v8214 = v14430;
    style$$2.top = v8214 + "px";
    var v14431;
    var v27704 = pos$$8.x;
    var v26169 = v27704 + JSCompiler_object_inline_width_86;
    var v23939 = v26169 + x$$50;
    var v23940 = JSCompiler_object_inline_width_82 + JSCompiler_object_inline_x_84;
    var v19127 = v23939 > v23940;
    if (v19127) {
      var v23941 = pos$$8.x;
      var v19125 = v23941 - JSCompiler_object_inline_width_86;
      v14431 = v19125 - x$$50;
    } else {
      var v19126 = pos$$8.x;
      v14431 = v19126 + x$$50;
    }
    var v8215 = v14431;
    style$$2.left = v8215 + "px";
    return;
  }
  function v148(e$$36, win$$24, opt$$5) {
    var v14432 = this.dom;
    if (v14432) {
      introspect(JAM.policy.p3) {
        v14432 = this.isLabel(e$$36, win$$24);
      }
    }
    var v8217 = v14432;
    if (v8217) {
      var v14433 = $$$1.event;
      introspect(JAM.policy.p3) {
        var v8216 = v14433.getPos(e$$36, win$$24)
      }
      introspect(JAM.policy.p3) {
        this.setTooltipPosition(v8216);
      }
    }
    var v14434 = this.dom;
    var v8224 = !v14434;
    if (v8224) {
      introspect(JAM.policy.p3) {
        var node$$15 = opt$$5.getNode()
      }
      var v8218 = !node$$15;
      if (v8218) {
        introspect(JAM.policy.p3) {
          this.hide(true);
        }
        return;
      }
      var v23942 = this.config;
      var v19128 = v23942.force;
      var v23944 = !v19128;
      if (v23944) {
        var v23943 = this.node;
        v19128 = !v23943;
      }
      var v14435 = v19128;
      var v19131 = !v14435;
      if (v19131) {
        var v23945 = this.node;
        var v19129 = v23945.id;
        var v19130 = node$$15.id;
        v14435 = v19129 != v19130;
      }
      var v8222 = v14435;
      if (v8222) {
        this.node = node$$15;
        var v8219 = this.config;
        var v8220 = this.tip;
        introspect(JAM.policy.p3) {
          var v8221 = opt$$5.getContains()
        }
        introspect(JAM.policy.p3) {
          v8219.onShow(v8220, node$$15, v8221);
        }
      }
      var v14436 = $$$1.event;
      introspect(JAM.policy.p3) {
        var v8223 = v14436.getPos(e$$36, win$$24)
      }
      introspect(JAM.policy.p3) {
        this.setTooltipPosition(v8223);
      }
    }
    return;
  }
  function v147(e$$35, win$$23) {
    var label$$7;
    var v14437 = this.dom;
    if (v14437) {
      introspect(JAM.policy.p3) {
        v14437 = label$$7 = this.isLabel(e$$35, win$$23, false);
      }
    }
    var v8230 = v14437;
    if (v8230) {
      var v14438 = this.viz;
      var v8225 = v14438.graph;
      var v8226 = label$$7.id;
      introspect(JAM.policy.p3) {
        var v31205 = v8225.getNode(v8226)
      }
      this.node = v31205;
      var v8227 = this.config;
      var v8228 = this.tip;
      var v8229 = this.node;
      introspect(JAM.policy.p3) {
        v8227.onShow(v8228, v8229, label$$7);
      }
    }
    return;
  }
  function v146(e$$34, win$$22) {
    var v8231 = $$$1.event;
    introspect(JAM.policy.p3) {
      var evt$$16 = v8231.get(e$$34, win$$22)
    }
    var v14439 = this.dom;
    if (v14439) {
      introspect(JAM.policy.p3) {
        v14439 = this.isLabel(e$$34, win$$22, true);
      }
    }
    var v8232 = v14439;
    if (v8232) {
      introspect(JAM.policy.p3) {
        this.hide(true);
      }
      return;
    }
    var rt$$1 = e$$34.relatedTarget;
    var v8233 = this.canvas;
    var canvasWidget$$1 = v8233.element;
    var v14440 = rt$$1;
    if (v14440) {
      v14440 = rt$$1.parentNode;
    }
    var v8235 = v14440;
    for (;v8235;) {
      var v14441 = rt$$1.parentNode;
      var v8234 = canvasWidget$$1 == v14441;
      if (v8234) {
        return;
      }
      rt$$1 = rt$$1.parentNode;
      var v14442 = rt$$1;
      if (v14442) {
        v14442 = rt$$1.parentNode;
      }
      v8235 = v14442;
    }
    introspect(JAM.policy.p3) {
      this.hide(false);
    }
    return;
  }
  function v145() {
    var v8240 = document.body;
    if (v8240) {
      var v8236 = $$$1("_tooltip");
      var v14443 = !v8236;
      if (v14443) {
        introspect(JAM.policy.p3) {
          v8236 = document.createElement("div");
        }
      }
      var tip = v8236;
      tip.id = "_tooltip";
      tip.className = "tip";
      var v8237 = tip.style;
      var v8238 = {position:"absolute", display:"none", zIndex:13E3};
      introspect(JAM.policy.p3) {
        $$$1.extend(v8237, v8238);
      }
      var v8239 = document.body;
      introspect(JAM.policy.p3) {
        v8239.appendChild(tip);
      }
      this.tip = tip;
      this.node = false;
    }
    return;
  }
  function v144(e$$33, win$$21, event$$12) {
    var v8241 = $$$1.event;
    introspect(JAM.policy.p3) {
      var evt$$15 = v8241.get(e$$33, win$$21)
    }
    var v8247 = this.touched;
    if (v8247) {
      var v8246 = this.touchMoved;
      if (v8246) {
        var v8242 = this.config;
        var v8243 = this.touched;
        introspect(JAM.policy.p3) {
          v8242.onTouchEnd(v8243, event$$12, evt$$15);
        }
      } else {
        var v8244 = this.config;
        var v8245 = this.touched;
        introspect(JAM.policy.p3) {
          v8244.onTouchCancel(v8245, event$$12, evt$$15);
        }
      }
      this.touched = this.touchMoved = false;
    }
    return;
  }
  function v143(e$$32, win$$20, event$$11) {
    var v8248 = $$$1.event;
    introspect(JAM.policy.p3) {
      var evt$$14 = v8248.get(e$$32, win$$20)
    }
    var v8251 = this.touched;
    if (v8251) {
      this.touchMoved = true;
      var v8249 = this.config;
      var v8250 = this.touched;
      introspect(JAM.policy.p3) {
        v8249.onTouchMove(v8250, event$$11, evt$$14);
      }
    }
    return;
  }
  function v142(e$$31, win$$19, event$$10) {
    var v8252 = $$$1.event;
    introspect(JAM.policy.p3) {
      var evt$$13 = v8252.get(e$$31, win$$19)
    }
    var label$$6;
    var v14444 = this.dom;
    if (v14444) {
      introspect(JAM.policy.p3) {
        v14444 = label$$6 = this.isLabel(e$$31, win$$19);
      }
    }
    var v8256 = v14444;
    if (v8256) {
      var v14445 = this.viz;
      var v8253 = v14445.graph;
      var v8254 = label$$6.id;
      introspect(JAM.policy.p3) {
        var v31206 = v8253.getNode(v8254)
      }
      this.touched = v31206;
    } else {
      introspect(JAM.policy.p3) {
        var v8255 = event$$10.getNode()
      }
      var v14447 = !v8255;
      if (v14447) {
        var v19132 = this.config;
        var v14446 = v19132.enableForEdges;
        if (v14446) {
          introspect(JAM.policy.p3) {
            v14446 = event$$10.getEdge();
          }
        }
        v8255 = v14446;
      }
      this.touched = v8255;
    }
    var v8257 = this.touched;
    if (v8257) {
      var v14448 = this.config;
      var v14449 = this.touched;
      introspect(JAM.policy.p3) {
        v14448.onTouchStart(v14449, event$$10, evt$$13);
      }
    }
    return;
  }
  function v141(e$$30, win$$18, event$$9) {
    var v8258 = $$$1.event;
    introspect(JAM.policy.p3) {
      var evt$$12 = v8258.get(e$$30, win$$18)
    }
    var label$$5;
    var v8263 = this.dom;
    if (v8263) {
      introspect(JAM.policy.p3) {
        var v8261 = label$$5 = this.isLabel(e$$30, win$$18)
      }
      if (v8261) {
        var v14450 = this.viz;
        var v8259 = v14450.graph;
        var v8260 = label$$5.id;
        introspect(JAM.policy.p3) {
          var v31207 = v8259.getNode(v8260)
        }
        this.pressed = v31207;
      }
    } else {
      introspect(JAM.policy.p3) {
        var v8262 = event$$9.getNode()
      }
      var v14452 = !v8262;
      if (v14452) {
        var v19133 = this.config;
        var v14451 = v19133.enableForEdges;
        if (v14451) {
          introspect(JAM.policy.p3) {
            v14451 = event$$9.getEdge();
          }
        }
        v8262 = v14451;
      }
      this.pressed = v8262;
    }
    var v8264 = this.pressed;
    if (v8264) {
      var v14453 = this.config;
      var v14454 = this.pressed;
      introspect(JAM.policy.p3) {
        v14453.onDragStart(v14454, event$$9, evt$$12);
      }
    }
    return;
  }
  function v140(e$$29, win$$17, delta$$2) {
    var v8265 = this.config;
    var v14455 = $$$1.event;
    introspect(JAM.policy.p3) {
      var v8266 = v14455.get(e$$29, win$$17)
    }
    introspect(JAM.policy.p3) {
      v8265.onMouseWheel(delta$$2, v8266);
    }
    return;
  }
  function v139(e$$28, win$$16, event$$8) {
    var label$$4;
    var v8267 = $$$1.event;
    introspect(JAM.policy.p3) {
      var evt$$11 = v8267.get(e$$28, win$$16)
    }
    var v8270 = this.pressed;
    if (v8270) {
      this.moved = true;
      var v8268 = this.config;
      var v8269 = this.pressed;
      introspect(JAM.policy.p3) {
        v8268.onDragMove(v8269, event$$8, evt$$11);
      }
      return;
    }
    var v8282 = this.dom;
    if (v8282) {
      var v8271 = this.config;
      var v8272 = this.hovered;
      introspect(JAM.policy.p3) {
        v8271.onMouseMove(v8272, event$$8, evt$$11);
      }
    } else {
      var v8277 = this.hovered;
      if (v8277) {
        var hn = this.hovered;
        var v8273;
        var v14460 = hn.nodeFrom;
        if (v14460) {
          var v14456 = this.etypes;
          introspect(JAM.policy.p3) {
            var v14457 = hn.getData("type")
          }
          v8273 = v14456[v14457];
        } else {
          var v14458 = this.ntypes;
          introspect(JAM.policy.p3) {
            var v14459 = hn.getData("type")
          }
          v8273 = v14458[v14459];
        }
        var geom$$2 = v8273;
        var v14461 = geom$$2;
        if (v14461) {
          v14461 = geom$$2.contains;
        }
        var v8274 = v14461;
        if (v8274) {
          var v14462 = geom$$2.contains;
          var v14463 = this.fx;
          introspect(JAM.policy.p3) {
            var v14464 = event$$8.getPos()
          }
          introspect(JAM.policy.p3) {
            v8274 = v14462.call(v14463, hn, v14464);
          }
        }
        var contains$$2 = v8274;
        if (contains$$2) {
          var v8275 = this.config;
          introspect(JAM.policy.p3) {
            v8275.onMouseMove(hn, event$$8, evt$$11);
          }
          return;
        } else {
          var v8276 = this.config;
          introspect(JAM.policy.p3) {
            v8276.onMouseLeave(hn, event$$8, evt$$11);
          }
          this.hovered = false;
        }
      }
      introspect(JAM.policy.p3) {
        var v14465 = event$$8.getNode()
      }
      var v19135 = !v14465;
      if (v19135) {
        var v23946 = this.config;
        var v19134 = v23946.enableForEdges;
        if (v19134) {
          introspect(JAM.policy.p3) {
            v19134 = event$$8.getEdge();
          }
        }
        v14465 = v19134;
      }
      var v8281 = this.hovered = v14465;
      if (v8281) {
        var v8278 = this.config;
        var v8279 = this.hovered;
        introspect(JAM.policy.p3) {
          v8278.onMouseEnter(v8279, event$$8, evt$$11);
        }
      } else {
        var v8280 = this.config;
        introspect(JAM.policy.p3) {
          v8280.onMouseMove(false, event$$8, evt$$11);
        }
      }
    }
    return;
  }
  function v138(e$$27, win$$15, event$$7) {
    var v8283 = $$$1.event;
    introspect(JAM.policy.p3) {
      var evt$$10 = v8283.get(e$$27, win$$15)
    }
    var label$$3;
    var v14466 = this.dom;
    if (v14466) {
      introspect(JAM.policy.p3) {
        v14466 = label$$3 = this.isLabel(e$$27, win$$15, true);
      }
    }
    var v8288 = v14466;
    if (v8288) {
      var v14467 = this.viz;
      var v8284 = v14467.graph;
      var v8285 = label$$3.id;
      introspect(JAM.policy.p3) {
        var v31208 = v8284.getNode(v8285)
      }
      this.hovered = v31208;
      var v8286 = this.config;
      var v8287 = this.hovered;
      introspect(JAM.policy.p3) {
        v8286.onMouseEnter(v8287, event$$7, evt$$10);
      }
    }
    return;
  }
  function v137(e$$26, win$$14, event$$6) {
    var v8289 = $$$1.event;
    introspect(JAM.policy.p3) {
      var evt$$9 = v8289.get(e$$26, win$$14)
    }
    var label$$2;
    var v14468 = this.dom;
    if (v14468) {
      introspect(JAM.policy.p3) {
        v14468 = label$$2 = this.isLabel(e$$26, win$$14, true);
      }
    }
    var v8292 = v14468;
    if (v8292) {
      var v8290 = this.config;
      var v19136 = this.viz;
      var v14469 = v19136.graph;
      var v14470 = label$$2.id;
      introspect(JAM.policy.p3) {
        var v8291 = v14469.getNode(v14470)
      }
      introspect(JAM.policy.p3) {
        v8290.onMouseLeave(v8291, event$$6, evt$$9);
      }
      this.hovered = false;
      return;
    }
    var rt = evt$$9.relatedTarget;
    var v8293 = this.canvas;
    var canvasWidget = v8293.element;
    var v14471 = rt;
    if (v14471) {
      v14471 = rt.parentNode;
    }
    var v8295 = v14471;
    for (;v8295;) {
      var v14472 = rt.parentNode;
      var v8294 = canvasWidget == v14472;
      if (v8294) {
        return;
      }
      rt = rt.parentNode;
      var v14473 = rt;
      if (v14473) {
        v14473 = rt.parentNode;
      }
      v8295 = v14473;
    }
    var v8298 = this.hovered;
    if (v8298) {
      var v8296 = this.config;
      var v8297 = this.hovered;
      introspect(JAM.policy.p3) {
        v8296.onMouseLeave(v8297, event$$6, evt$$9);
      }
      this.hovered = false;
    }
    return;
  }
  function v136(e$$25, win$$13, event$$5, isRightClick) {
    var v8299 = $$$1.event;
    introspect(JAM.policy.p3) {
      var evt$$8 = v8299.get(e$$25, win$$13)
    }
    var v14474 = this.moved;
    var v8304 = !v14474;
    if (v8304) {
      if (isRightClick) {
        var v8300 = this.config;
        var v8301 = this.hovered;
        introspect(JAM.policy.p3) {
          v8300.onRightClick(v8301, event$$5, evt$$8);
        }
      } else {
        var v8302 = this.config;
        var v8303 = this.pressed;
        introspect(JAM.policy.p3) {
          v8302.onClick(v8303, event$$5, evt$$8);
        }
      }
    }
    var v8310 = this.pressed;
    if (v8310) {
      var v8309 = this.moved;
      if (v8309) {
        var v8305 = this.config;
        var v8306 = this.pressed;
        introspect(JAM.policy.p3) {
          v8305.onDragEnd(v8306, event$$5, evt$$8);
        }
      } else {
        var v8307 = this.config;
        var v8308 = this.pressed;
        introspect(JAM.policy.p3) {
          v8307.onDragCancel(v8308, event$$5, evt$$8);
        }
      }
      this.pressed = this.moved = false;
    }
    return;
  }
  function v135() {
    var v8311 = this.viz;
    this.fx = v8311.fx;
    var v14475 = this.viz;
    var v8312 = v14475.fx;
    this.ntypes = v8312.nodeTypes;
    var v14476 = this.viz;
    var v8313 = v14476.fx;
    this.etypes = v8313.edgeTypes;
    this.hovered = false;
    this.pressed = false;
    this.touched = false;
    this.touchMoved = false;
    this.moved = false;
    return;
  }
  function v134() {
    function v133(k$$1) {
      var v14477 = Extras.Classes;
      var v8314 = v14477[k$$1];
      var obj$$23 = new v8314(k$$1, that$$5);
      introspect(JAM.policy.p3) {
        var v8315 = obj$$23.isEnabled()
      }
      if (v8315) {
        introspect(JAM.policy.p3) {
          mem.register(obj$$23);
        }
      }
      introspect(JAM.policy.p3) {
        var v8317 = obj$$23.setAsProperty()
      }
      if (v8317) {
        introspect(JAM.policy.p3) {
          var v8316 = k$$1.toLowerCase()
        }
        introspect(JAM.policy.p2) {
          that$$5[v8316] = obj$$23;
        }
      }
      return;
    }
    var mem = new MouseEventsManager(this);
    var that$$5 = this;
    var v8318 = ["NodeStyles", "Tips", "Navigation", "Events"];
    introspect(JAM.policy.p3) {
      $$$1.each(v8318, v133);
    }
    return;
  }
  function v132(e$$23, win$$12) {
    function v131() {
      var v8319 = this.getNodeCalled;
      if (v8319) {
        return this.contains;
      }
      introspect(JAM.policy.p3) {
        this.getNode();
      }
      return this.contains;
    }
    function v130() {
      var v8320 = this.getEdgeCalled;
      if (v8320) {
        return this.edge;
      }
      this.getEdgeCalled = true;
      var hashset = {};
      var id$$6;
      var v8325 = graph.edges;
      for (id$$6 in v8325) {
        var v8321 = graph.edges;
        var edgeFrom = v8321[id$$6];
        introspect(JAM.policy.p2) {
          hashset[id$$6] = true;
        }
        var edgeId;
        for (edgeId in edgeFrom) {
          var v8322 = edgeId in hashset;
          if (v8322) {
            continue;
          }
          var e$$24 = edgeFrom[edgeId];
          var v8323 = e$$24;
          if (v8323) {
            var v14478 = etypes;
            introspect(JAM.policy.p3) {
              var v14479 = e$$24.getData("type")
            }
            v8323 = v14478[v14479];
          }
          var geom$$1 = v8323;
          var v14480 = geom$$1;
          if (v14480) {
            v14480 = geom$$1.contains;
          }
          var v8324 = v14480;
          if (v8324) {
            var v14481 = geom$$1.contains;
            introspect(JAM.policy.p3) {
              var v14482 = this.getPos()
            }
            introspect(JAM.policy.p3) {
              v8324 = v14481.call(fx, e$$24, v14482);
            }
          }
          var contains$$1 = v8324;
          if (contains$$1) {
            this.contains = contains$$1;
            return that$$4.edge = this.edge = e$$24;
          }
        }
      }
      return that$$4.edge = this.edge = false;
    }
    function v129() {
      var v8326 = this.getNodeCalled;
      if (v8326) {
        return this.node;
      }
      this.getNodeCalled = true;
      var id$$5;
      var v8330 = graph.nodes;
      for (id$$5 in v8330) {
        var v8327 = graph.nodes;
        var n$$2 = v8327[id$$5];
        var v8328 = n$$2;
        if (v8328) {
          var v14483 = ntypes;
          introspect(JAM.policy.p3) {
            var v14484 = n$$2.getData("type")
          }
          v8328 = v14483[v14484];
        }
        var geom = v8328;
        var v14485 = geom;
        if (v14485) {
          v14485 = geom.contains;
        }
        var v8329 = v14485;
        if (v8329) {
          var v14486 = geom.contains;
          introspect(JAM.policy.p3) {
            var v14487 = this.getPos()
          }
          introspect(JAM.policy.p3) {
            v8329 = v14486.call(fx, n$$2, v14487);
          }
        }
        var contains = v8329;
        if (contains) {
          this.contains = contains;
          return that$$4.node = this.node = n$$2;
        }
      }
      return that$$4.node = this.node = false;
    }
    function v128() {
      var v8331 = that$$4.viz;
      var canvas$$2 = v8331.canvas;
      introspect(JAM.policy.p3) {
        var s$$2 = canvas$$2.getSize()
      }
      introspect(JAM.policy.p3) {
        var p$$11 = canvas$$2.getPos()
      }
      var ox = canvas$$2.translateOffsetX;
      var oy$$1 = canvas$$2.translateOffsetY;
      var sx$$1 = canvas$$2.scaleOffsetX;
      var sy$$1 = canvas$$2.scaleOffsetY;
      var v8332 = $$$1.event;
      introspect(JAM.policy.p3) {
        var pos$$7 = v8332.getPos(e$$23, win$$12)
      }
      var v26170 = pos$$7.x;
      var v26171 = p$$11.x;
      var v23947 = v26170 - v26171;
      var v19137 = v23947 - ox;
      var v14488 = v19137 * 1;
      var v8333 = v14488 / sx$$1;
      var v26172 = pos$$7.y;
      var v26173 = p$$11.y;
      var v23948 = v26172 - v26173;
      var v19138 = v23948 - oy$$1;
      var v14489 = v19138 * 1;
      var v8334 = v14489 / sy$$1;
      this.pos = {x:v8333, y:v8334};
      return this.pos;
    }
    var that$$4 = this;
    var v8335 = this.viz;
    var graph = v8335.graph;
    var v8336 = this.viz;
    var fx = v8336.fx;
    var ntypes = fx.nodeTypes;
    var etypes = fx.edgeTypes;
    return {pos:false, node:false, edge:false, contains:false, getNodeCalled:false, getEdgeCalled:false, getPos:v128, getNode:v129, getEdge:v130, getContains:v131};
  }
  function v127() {
    var v14490 = Array.prototype;
    var v8337 = v14490.slice;
    introspect(JAM.policy.p3) {
      var args$$1 = v8337.call(arguments)
    }
    introspect(JAM.policy.p3) {
      var type$$32 = args$$1.shift()
    }
    var i$$26 = 0;
    var regs = this.registeredObjects;
    var l$$8 = regs.length;
    var v8340 = i$$26 < l$$8;
    for (;v8340;) {
      var v14491 = regs[i$$26];
      var v14492 = "on" + type$$32;
      var v8338 = v14491[v14492];
      var v8339 = regs[i$$26];
      introspect(JAM.policy.p3) {
        v8338.apply(v8339, args$$1);
      }
      i$$26++;
      v8340 = i$$26 < l$$8;
    }
    return;
  }
  function v126(obj$$22) {
    var v8341 = this.registeredObjects;
    introspect(JAM.policy.p3) {
      v8341.push(obj$$22);
    }
    return;
  }
  function v125() {
    function v124(e$$21, win$$10) {
      introspect(JAM.policy.p3) {
        var v8342 = that$$3.makeEventObject(e$$21, win$$10)
      }
      introspect(JAM.policy.p3) {
        that$$3.handleEvent("TouchEnd", e$$21, win$$10, v8342);
      }
      return;
    }
    function v123(e$$20, win$$9) {
      introspect(JAM.policy.p3) {
        var v8343 = that$$3.makeEventObject(e$$20, win$$9)
      }
      introspect(JAM.policy.p3) {
        that$$3.handleEvent("TouchMove", e$$20, win$$9, v8343);
      }
      return;
    }
    function v122(e$$19, win$$8) {
      introspect(JAM.policy.p3) {
        var v8344 = that$$3.makeEventObject(e$$19, win$$8)
      }
      introspect(JAM.policy.p3) {
        that$$3.handleEvent("TouchStart", e$$19, win$$8, v8344);
      }
      return;
    }
    function v121(e$$18, win$$7) {
      introspect(JAM.policy.p3) {
        var v8345 = that$$3.makeEventObject(e$$18, win$$7)
      }
      introspect(JAM.policy.p3) {
        that$$3.handleEvent("MouseOut", e$$18, win$$7, v8345);
      }
      return;
    }
    function v120(e$$17, win$$6) {
      introspect(JAM.policy.p3) {
        var v8346 = that$$3.makeEventObject(e$$17, win$$6)
      }
      introspect(JAM.policy.p3) {
        that$$3.handleEvent("MouseOver", e$$17, win$$6, v8346);
      }
      return;
    }
    function v119(e$$16, win$$5) {
      introspect(JAM.policy.p3) {
        var v8347 = that$$3.makeEventObject(e$$16, win$$5)
      }
      introspect(JAM.policy.p3) {
        that$$3.handleEvent("MouseMove", e$$16, win$$5, v8347);
      }
      return;
    }
    function v118(e$$15, win$$4) {
      var v8348 = $$$1.event;
      introspect(JAM.policy.p3) {
        var event$$3 = v8348.get(e$$15, win$$4)
      }
      introspect(JAM.policy.p3) {
        var v8349 = that$$3.makeEventObject(e$$15, win$$4)
      }
      var v14493 = $$$1.event;
      introspect(JAM.policy.p3) {
        var v8350 = v14493.isRightClick(event$$3)
      }
      introspect(JAM.policy.p3) {
        that$$3.handleEvent("MouseDown", e$$15, win$$4, v8349, v8350);
      }
      return;
    }
    function v117(e$$14, win$$3) {
      var v8351 = $$$1.event;
      introspect(JAM.policy.p3) {
        var event$$2 = v8351.get(e$$14, win$$3)
      }
      introspect(JAM.policy.p3) {
        var v8352 = that$$3.makeEventObject(e$$14, win$$3)
      }
      var v14494 = $$$1.event;
      introspect(JAM.policy.p3) {
        var v8353 = v14494.isRightClick(event$$2)
      }
      introspect(JAM.policy.p3) {
        that$$3.handleEvent("MouseUp", e$$14, win$$3, v8352, v8353);
      }
      return;
    }
    function handleMouseWheel(e$$22, win$$11) {
      var v8354 = $$$1.event;
      introspect(JAM.policy.p3) {
        var event$$4 = v8354.get(e$$22, win$$11)
      }
      var v8355 = $$$1.event;
      introspect(JAM.policy.p3) {
        var wheel = v8355.getWheel(event$$4)
      }
      introspect(JAM.policy.p3) {
        that$$3.handleEvent("MouseWheel", e$$22, win$$11, wheel);
      }
      return;
    }
    var v8356 = this.canvas;
    var htmlCanvas = v8356.element;
    var that$$3 = this;
    var v8357 = htmlCanvas;
    introspect(JAM.policy.p3) {
      var v31209 = $$$1.lambda(false)
    }
    v8357.oncontextmenu = v31209;
    var v8358 = {"mouseup":v117, "mousedown":v118, "mousemove":v119, "mouseover":v120, "mouseout":v121, "touchstart":v122, "touchmove":v123, "touchend":v124};
    introspect(JAM.policy.p3) {
      $$$1.addEvents(htmlCanvas, v8358);
    }
    var v19139 = document.getBoxObjectFor;
    var v14495 = !v19139;
    if (v14495) {
      var v19140 = window.mozInnerScreenX;
      v14495 = v19140 == null;
    }
    var v8359 = v14495;
    if (v8359) {
      introspect(JAM.policy.p3) {
        $$$1.addEvent(htmlCanvas, "mousewheel", handleMouseWheel);
      }
    } else {
      introspect(JAM.policy.p3) {
        htmlCanvas.addEventListener("DOMMouseScroll", handleMouseWheel, false);
      }
    }
    return;
  }
  function v116(viz$$1) {
    this.viz = viz$$1;
    this.canvas = viz$$1.canvas;
    this.node = false;
    this.edge = false;
    this.registeredObjects = [];
    introspect(JAM.policy.p3) {
      this.attachEvents();
    }
    return;
  }
  function v115(elem$$14, par) {
    var v14496 = elem$$14;
    if (v14496) {
      v14496 = elem$$14.parentNode;
    }
    var v8361 = v14496;
    for (;v8361;) {
      var v14497 = elem$$14.parentNode;
      var v8360 = v14497 == par;
      if (v8360) {
        return elem$$14;
      }
      elem$$14 = elem$$14.parentNode;
      var v14498 = elem$$14;
      if (v14498) {
        v14498 = elem$$14.parentNode;
      }
      v8361 = v14498;
    }
    return false;
  }
  function v114(e$$13, win$$2, group) {
    var v8362 = $$$1.event;
    introspect(JAM.policy.p3) {
      e$$13 = v8362.get(e$$13, win$$2);
    }
    var labelContainer = this.labelContainer;
    var v8363 = e$$13.target;
    var v14499 = !v8363;
    if (v14499) {
      v8363 = e$$13.srcElement;
    }
    var target$$26 = v8363;
    var related = e$$13.relatedTarget;
    if (group) {
      var v19141 = related;
      if (v19141) {
        var v28672 = this.viz;
        var v27705 = v28672.canvas;
        introspect(JAM.policy.p3) {
          var v26174 = v27705.getCtx()
        }
        var v23949 = v26174.canvas;
        v19141 = related == v23949;
      }
      var v14500 = v19141;
      if (v14500) {
        var v19142 = !target$$26;
        v14500 = !v19142;
      }
      var v8364 = v14500;
      if (v8364) {
        introspect(JAM.policy.p3) {
          v8364 = this.isDescendantOf(target$$26, labelContainer);
        }
      }
      return v8364;
    } else {
      introspect(JAM.policy.p3) {
        return this.isDescendantOf(target$$26, labelContainer);
      }
    }
    return;
  }
  function v113() {
    var v8365 = this.config;
    return v8365.enable;
  }
  function v112(className, viz) {
    this.viz = viz;
    this.canvas = viz.canvas;
    var v8366 = viz.config;
    this.config = v8366[className];
    var v8367 = viz.fx;
    this.nodeTypes = v8367.nodeTypes;
    var v8368 = this.config;
    var type$$31 = v8368.type;
    var v8369;
    var v14502 = type$$31 == "auto";
    if (v14502) {
      var v23950 = viz.config;
      var v19143 = v23950.Label;
      var v14501 = v19143.type;
      v8369 = v14501 != "Native";
    } else {
      v8369 = type$$31 != "Native";
    }
    this.dom = v8369;
    var v8370 = this.dom;
    if (v8370) {
      var v14503 = viz.labels;
      introspect(JAM.policy.p3) {
        v8370 = v14503.getLabelContainer();
      }
    }
    this.labelContainer = v8370;
    introspect(JAM.policy.p3) {
      var v8371 = this.isEnabled()
    }
    if (v8371) {
      introspect(JAM.policy.p3) {
        this.initializePost();
      }
    }
    return;
  }
  function v111() {
    var v14504 = this.timer;
    var v8372 = !v14504;
    if (v8372) {
      return true;
    }
    var v19144 = this.opt;
    var v14505 = v19144.link;
    var v8373 = v14505 == "cancel";
    if (v8373) {
      introspect(JAM.policy.p3) {
        this.stopTimer();
      }
      return true;
    }
    return false;
  }
  function v110() {
    var v14506 = this.timer;
    var v8374 = !v14506;
    if (v8374) {
      return false;
    }
    introspect(JAM.policy.p3) {
      var v8375 = $$$1.time()
    }
    var v8376 = this.time;
    this.time = v8375 - v8376;
    var v8377 = this.timer;
    var v31210 = clearInterval(v8377);
    this.timer = v31210;
    return true;
  }
  function v109() {
    introspect(JAM.policy.p3) {
      this.startTimer();
    }
    return this;
  }
  function v108() {
    introspect(JAM.policy.p3) {
      this.stopTimer();
    }
    return this;
  }
  function v107() {
    function v106() {
      introspect(JAM.policy.p3) {
        that$$2.step();
      }
      return;
    }
    var that$$2 = this;
    var v8378 = this.opt;
    var fps = v8378.fps;
    var v8379 = this.timer;
    if (v8379) {
      return false;
    }
    introspect(JAM.policy.p3) {
      var v8380 = $$$1.time()
    }
    var v8381 = this.time;
    this.time = v8380 - v8381;
    var v14507 = 1E3 / fps;
    introspect(JAM.policy.p3) {
      var v8382 = Math.round(v14507)
    }
    var v31211 = setInterval(v106, v8382);
    this.timer = v31211;
    return true;
  }
  function v105() {
    introspect(JAM.policy.p3) {
      var v14508 = this.check()
    }
    var v8383 = !v14508;
    if (v8383) {
      return this;
    }
    this.time = 0;
    introspect(JAM.policy.p3) {
      this.startTimer();
    }
    return this;
  }
  function v104() {
    introspect(JAM.policy.p3) {
      var time = $$$1.time()
    }
    var opt$$3 = this.opt;
    var v19145 = this.time;
    var v19146 = opt$$3.duration;
    var v14509 = v19145 + v19146;
    var v8386 = time < v14509;
    if (v8386) {
      var v19147 = this.time;
      var v14510 = time - v19147;
      var v14511 = opt$$3.duration;
      var v8384 = v14510 / v14511;
      introspect(JAM.policy.p3) {
        var delta$$1 = opt$$3.transition(v8384)
      }
      introspect(JAM.policy.p3) {
        opt$$3.compute(delta$$1);
      }
    } else {
      var v8385 = this.timer;
      var v31212 = clearInterval(v8385);
      this.timer = v31212;
      introspect(JAM.policy.p3) {
        opt$$3.compute(1);
      }
      introspect(JAM.policy.p3) {
        opt$$3.complete();
      }
    }
    return;
  }
  function v103(options$$3) {
    var v14512 = Trans.Quart;
    var v8387 = v14512.easeInOut;
    var v8388 = $$$1.empty;
    var v8389 = $$$1.empty;
    var opt$$2 = {duration:2500, fps:40, transition:v8387, compute:v8388, complete:v8389, link:"ignore"};
    var v8390 = options$$3 || {};
    introspect(JAM.policy.p3) {
      var v31213 = $$$1.merge(opt$$2, v8390)
    }
    this.opt = v31213;
    return this;
  }
  function v102(options$$2) {
    introspect(JAM.policy.p3) {
      this.setOptions(options$$2);
    }
    return;
  }
  function v101() {
    function v100(elem$$13, i$$24) {
      function v99(p$$10) {
        var v14513 = i$$24 + 2;
        var v8391 = [v14513];
        introspect(JAM.policy.p3) {
          return Math.pow(p$$10, v8391);
        }
      }
      var v31214 = makeTrans(v99);
      introspect(JAM.policy.p2) {
        Trans[elem$$13] = v31214;
      }
      return;
    }
    function v98(val, key$$23) {
      var v31215 = makeTrans(val);
      introspect(JAM.policy.p2) {
        Trans[key$$23] = v31215;
      }
      return;
    }
    function v97(p$$9, x$$49) {
      var v19148 = p$$9 = p$$9 - 1;
      var v14514 = 10 * v19148;
      introspect(JAM.policy.p3) {
        var v8392 = Math.pow(2, v14514)
      }
      var v26175 = 20 * p$$9;
      var v26176 = Math.PI;
      var v23951 = v26175 * v26176;
      var v26177 = x$$49[0];
      var v27706 = !v26177;
      if (v27706) {
        v26177 = 1;
      }
      var v23952 = v26177;
      var v19149 = v23951 * v23952;
      var v14515 = v19149 / 3;
      introspect(JAM.policy.p3) {
        var v8393 = Math.cos(v14515)
      }
      return v8392 * v8393;
    }
    function v96(p$$8) {
      var value$$33;
      var a = 0;
      var b = 1;
      for (;1;) {
        var v23953 = 4 * a;
        var v19150 = 7 - v23953;
        var v14516 = v19150 / 11;
        var v8396 = p$$8 >= v14516;
        if (v8396) {
          var v8394 = b * b;
          var v26178 = 6 * a;
          var v23954 = 11 - v26178;
          var v23955 = 11 * p$$8;
          var v19151 = v23954 - v23955;
          var v14517 = v19151 / 4;
          introspect(JAM.policy.p3) {
            var v8395 = Math.pow(v14517, 2)
          }
          value$$33 = v8394 - v8395;
          break;
        }
        a = a + b;
        b = b / 2;
      }
      return value$$33;
    }
    function v95(p$$7, x$$48) {
      var v8397 = x$$48[0];
      var v14518 = !v8397;
      if (v14518) {
        v8397 = 1.618;
      }
      x$$48 = v8397;
      introspect(JAM.policy.p3) {
        var v8398 = Math.pow(p$$7, 2)
      }
      var v19152 = x$$48 + 1;
      var v14519 = v19152 * p$$7;
      var v8399 = v14519 - x$$48;
      return v8398 * v8399;
    }
    function v94(p$$6) {
      var v23956 = 1 - p$$6;
      var v23957 = Math.PI;
      var v19153 = v23956 * v23957;
      var v14520 = v19153 / 2;
      introspect(JAM.policy.p3) {
        var v8400 = Math.sin(v14520)
      }
      return 1 - v8400;
    }
    function v93(p$$5) {
      introspect(JAM.policy.p3) {
        var v14521 = Math.acos(p$$5)
      }
      introspect(JAM.policy.p3) {
        var v8401 = Math.sin(v14521)
      }
      return 1 - v8401;
    }
    function v92(p$$4) {
      var v14522 = p$$4 - 1;
      var v8402 = 8 * v14522;
      introspect(JAM.policy.p3) {
        return Math.pow(2, v8402);
      }
    }
    function v91(p$$3, x$$47) {
      var v14523 = x$$47[0];
      var v19154 = !v14523;
      if (v19154) {
        v14523 = 6;
      }
      var v8403 = v14523;
      introspect(JAM.policy.p3) {
        return Math.pow(p$$3, v8403);
      }
    }
    function makeTrans(transition) {
      function v90(pos$$6) {
        var v8404;
        var v14526 = pos$$6 <= .5;
        if (v14526) {
          var v19155 = 2 * pos$$6;
          introspect(JAM.policy.p3) {
            var v14524 = transition(v19155, params)
          }
          v8404 = v14524 / 2;
        } else {
          var v26179 = 1 - pos$$6;
          var v23958 = 2 * v26179;
          introspect(JAM.policy.p3) {
            var v19156 = transition(v23958, params)
          }
          var v14525 = 2 - v19156;
          v8404 = v14525 / 2;
        }
        return v8404;
      }
      function v89(pos$$5) {
        var v14527 = 1 - pos$$5;
        introspect(JAM.policy.p3) {
          var v8405 = transition(v14527, params)
        }
        return 1 - v8405;
      }
      function v88(pos$$4) {
        introspect(JAM.policy.p3) {
          return transition(pos$$4, params);
        }
      }
      var params;
      introspect(JAM.policy.p3) {
        params = $$$1.splat(params);
      }
      var v8406 = {easeIn:v88, easeOut:v89, easeInOut:v90};
      introspect(JAM.policy.p3) {
        return $$$1.extend(transition, v8406);
      }
    }
    var transitions = {Pow:v91, Expo:v92, Circ:v93, Sine:v94, Back:v95, Bounce:v96, Elastic:v97};
    introspect(JAM.policy.p3) {
      $$$1.each(transitions, v98);
    }
    var v8407 = ["Quad", "Cubic", "Quart", "Quint"];
    introspect(JAM.policy.p3) {
      $$$1.each(v8407, v100);
    }
    return;
  }
  function v87(p$$2) {
    return p$$2;
  }
  function v86(tree$$5, action$$1) {
    var v8408 = Number.MAX_VALUE;
    introspect(JAM.policy.p3) {
      this.eachLevel(tree$$5, 0, v8408, action$$1);
    }
    return;
  }
  function v85(tree$$4, initLevel, toLevel, action) {
    var v8413 = initLevel <= toLevel;
    if (v8413) {
      introspect(JAM.policy.p3) {
        action(tree$$4, initLevel);
      }
      var v14528 = tree$$4.children;
      var v8409 = !v14528;
      if (v8409) {
        return;
      }
      var i$$23 = 0;
      var ch$$4 = tree$$4.children;
      var v14529 = ch$$4.length;
      var v8412 = i$$23 < v14529;
      for (;v8412;) {
        var v8410 = ch$$4[i$$23];
        var v8411 = initLevel + 1;
        introspect(JAM.policy.p3) {
          this.eachLevel(v8410, v8411, toLevel, action);
        }
        i$$23++;
        var v14530 = ch$$4.length;
        v8412 = i$$23 < v14530;
      }
    }
    return;
  }
  function v84(tree$$3, id$$4) {
    var v14531 = tree$$3.id;
    var v8414 = v14531 == id$$4;
    if (v8414) {
      return tree$$3;
    }
    var i$$22 = 0;
    var ch$$3 = tree$$3.children;
    var v14532 = ch$$3;
    if (v14532) {
      var v19157 = ch$$3.length;
      v14532 = i$$22 < v19157;
    }
    var v8417 = v14532;
    for (;v8417;) {
      var v8415 = ch$$3[i$$22];
      introspect(JAM.policy.p3) {
        var t = this.getSubtree(v8415, id$$4)
      }
      var v8416 = t != null;
      if (v8416) {
        return t;
      }
      i$$22++;
      var v14533 = ch$$3;
      if (v14533) {
        var v19158 = ch$$3.length;
        v14533 = i$$22 < v19158;
      }
      v8417 = v14533;
    }
    return null;
  }
  function v83(tree$$2, id$$3) {
    var v14534 = tree$$2.id;
    var v8418 = v14534 == id$$3;
    if (v8418) {
      return false;
    }
    var ch$$2 = tree$$2.children;
    var v14535 = ch$$2;
    if (v14535) {
      var v19159 = ch$$2.length;
      v14535 = v19159 > 0;
    }
    var v8422 = v14535;
    if (v8422) {
      var i$$21 = 0;
      var v14536 = ch$$2.length;
      var v8421 = i$$21 < v14536;
      for (;v8421;) {
        var v19160 = ch$$2[i$$21];
        var v14537 = v19160.id;
        var v8420 = v14537 == id$$3;
        if (v8420) {
          return tree$$2;
        } else {
          var v8419 = ch$$2[i$$21];
          introspect(JAM.policy.p3) {
            var ans$$2 = this.getParent(v8419, id$$3)
          }
          if (ans$$2) {
            return ans$$2;
          }
        }
        i$$21++;
        var v14538 = ch$$2.length;
        v8421 = i$$21 < v14538;
      }
    }
    return false;
  }
  function v82(tree$$1, maxLevel) {
    function v81(elem$$12, i$$20) {
      var v14539 = i$$20 == maxLevel;
      if (v14539) {
        v14539 = elem$$12.children;
      }
      var v8423 = v14539;
      if (v8423) {
        delete elem$$12.children;
        elem$$12.children = [];
      }
      return;
    }
    introspect(JAM.policy.p3) {
      this.each(tree$$1, v81);
    }
    return;
  }
  function v80() {
    function v79(properties$$2) {
      introspect(JAM.policy.p3) {
        Class.inherit(proto$$1, properties$$2);
      }
      return;
    }
    var proto$$1 = this.prototype;
    var v19161 = Array.prototype;
    var v14540 = v19161.slice;
    var v14541 = arguments || [];
    introspect(JAM.policy.p3) {
      var v8424 = v14540.call(v14541)
    }
    introspect(JAM.policy.p3) {
      $$$1.each(v8424, v79);
    }
    return;
  }
  function v78(object$$3, name$$35, method$$1) {
    function override$$1() {
      var previous$$2 = this.parent;
      var v8425;
      if (parent$$1) {
        v8425 = parent$$1[name$$35];
      } else {
        v8425 = object$$3[name$$35];
      }
      this.parent = v8425;
      introspect(JAM.policy.p3) {
        var value$$32 = method$$1.apply(this, arguments)
      }
      this.parent = previous$$2;
      return value$$32;
    }
    var parent$$1 = Class.prototyping;
    var v14542 = parent$$1;
    if (v14542) {
      var v19162 = object$$3[name$$35];
      var v19163 = parent$$1[name$$35];
      v14542 = v19162 != v19163;
    }
    var v8426 = v14542;
    if (v8426) {
      parent$$1 = null;
    }
    introspect(JAM.policy.p2) {
      object$$3[name$$35] = override$$1;
    }
    return;
  }
  function v77(object$$2, properties$$1) {
    var key$$22;
    for (key$$22 in properties$$1) {
      var override = properties$$1[key$$22];
      var previous$$1 = object$$2[key$$22];
      introspect(JAM.policy.p3) {
        var type$$30 = $$$1.type(override)
      }
      var v14543 = previous$$1;
      if (v14543) {
        v14543 = type$$30 == "function";
      }
      var v8429 = v14543;
      if (v8429) {
        var v8427 = override != previous$$1;
        if (v8427) {
          introspect(JAM.policy.p3) {
            Class.override(object$$2, key$$22, override);
          }
        }
      } else {
        var v8428 = type$$30 == "object";
        if (v8428) {
          introspect(JAM.policy.p3) {
            var v31216 = $$$1.merge(previous$$1, override)
          }
          introspect(JAM.policy.p2) {
            object$$2[key$$22] = v31216;
          }
        } else {
          introspect(JAM.policy.p2) {
            object$$2[key$$22] = override;
          }
        }
      }
    }
    return object$$2;
  }
  function v76(self$$1, klasses) {
    function v75(klass$$4) {
      Class.prototyping = klass$$4;
      var v8430;
      var v19164 = typeof klass$$4;
      var v14544 = v19164 == "function";
      if (v14544) {
        v8430 = new klass$$4;
      } else {
        v8430 = klass$$4;
      }
      var instance$$1 = v8430;
      var prop$$4;
      for (prop$$4 in instance$$1) {
        var v14545 = prop$$4 in self$$1;
        var v8431 = !v14545;
        if (v8431) {
          introspect(JAM.policy.p2) {
            self$$1[prop$$4] = instance$$1[prop$$4];
          }
        }
      }
      delete Class.prototyping;
      return;
    }
    introspect(JAM.policy.p3) {
      var v8432 = $$$1.splat(klasses)
    }
    introspect(JAM.policy.p3) {
      $$$1.each(v8432, v75);
    }
    return self$$1;
  }
  function v74(e$$12) {
    var v8433 = e$$12.stopPropagation;
    if (v8433) {
      introspect(JAM.policy.p3) {
        e$$12.stopPropagation();
      }
    }
    e$$12.cancelBubble = true;
    var v8434 = e$$12.preventDefault;
    if (v8434) {
      introspect(JAM.policy.p3) {
        e$$12.preventDefault();
      }
    } else {
      e$$12.returnValue = false;
    }
    return;
  }
  function v73(e$$11, win$$1) {
    win$$1 = win$$1 || window;
    var v8435 = e$$11;
    var v14546 = !v8435;
    if (v14546) {
      v8435 = win$$1.event;
    }
    e$$11 = v8435;
    var doc = win$$1.document;
    var v8436 = doc.documentElement;
    var v14547 = !v8436;
    if (v14547) {
      v8436 = doc.body;
    }
    doc = v8436;
    var v14548 = e$$11.touches;
    if (v14548) {
      var v19165 = e$$11.touches;
      v14548 = v19165.length;
    }
    var v8438 = v14548;
    if (v8438) {
      var v8437 = e$$11.touches;
      e$$11 = v8437[0];
    }
    var v14549 = e$$11.pageX;
    var v19168 = !v14549;
    if (v19168) {
      var v19166 = e$$11.clientX;
      var v19167 = doc.scrollLeft;
      v14549 = v19166 + v19167;
    }
    var v8439 = v14549;
    var v14550 = e$$11.pageY;
    var v19171 = !v14550;
    if (v19171) {
      var v19169 = e$$11.clientY;
      var v19170 = doc.scrollTop;
      v14550 = v19169 + v19170;
    }
    var v8440 = v14550;
    var page = {x:v8439, y:v8440};
    return page;
  }
  function v72(e$$10) {
    var v14551 = e$$10.which;
    var v8441 = v14551 == 3;
    var v14553 = !v8441;
    if (v14553) {
      var v14552 = e$$10.button;
      v8441 = v14552 == 2;
    }
    return v8441;
  }
  function v71(e$$9) {
    var v8442;
    var v14556 = e$$9.wheelDelta;
    if (v14556) {
      var v14554 = e$$9.wheelDelta;
      v8442 = v14554 / 120;
    } else {
      var v23959 = e$$9.detail;
      var v26180 = !v23959;
      if (v26180) {
        v23959 = 0;
      }
      var v19172 = v23959;
      var v14555 = -v19172;
      v8442 = v14555 / 3;
    }
    return v8442;
  }
  function v70(e$$8, win) {
    win = win || window;
    var v8443 = e$$8;
    var v14557 = !v8443;
    if (v14557) {
      v8443 = win.event;
    }
    return v8443;
  }
  function v69(elem$$9) {
    function getOffsets(elem$$10) {
      var position = {x:0, y:0};
      var v14558 = elem$$10;
      if (v14558) {
        var v23960 = elem$$10.tagName;
        introspect(JAM.policy.p3) {
          var v19173 = /^(?:body|html)$/i.test(v23960)
        }
        v14558 = !v19173;
      }
      var v8444 = v14558;
      for (;v8444;) {
        var v14559 = position.x;
        var v14560 = elem$$10.offsetLeft;
        position.x = v14559 + v14560;
        var v14561 = position.y;
        var v14562 = elem$$10.offsetTop;
        position.y = v14561 + v14562;
        elem$$10 = elem$$10.offsetParent;
        var v14563 = elem$$10;
        if (v14563) {
          var v23961 = elem$$10.tagName;
          introspect(JAM.policy.p3) {
            var v19174 = /^(?:body|html)$/i.test(v23961)
          }
          v14563 = !v19174;
        }
        v8444 = v14563;
      }
      return position;
    }
    function getScrolls(elem$$11) {
      var position$$1 = {x:0, y:0};
      var v14564 = elem$$11;
      if (v14564) {
        var v23962 = elem$$11.tagName;
        introspect(JAM.policy.p3) {
          var v19175 = /^(?:body|html)$/i.test(v23962)
        }
        v14564 = !v19175;
      }
      var v8445 = v14564;
      for (;v8445;) {
        var v14565 = position$$1.x;
        var v14566 = elem$$11.scrollLeft;
        position$$1.x = v14565 + v14566;
        var v14567 = position$$1.y;
        var v14568 = elem$$11.scrollTop;
        position$$1.y = v14567 + v14568;
        elem$$11 = elem$$11.parentNode;
        var v14569 = elem$$11;
        if (v14569) {
          var v23963 = elem$$11.tagName;
          introspect(JAM.policy.p3) {
            var v19176 = /^(?:body|html)$/i.test(v23963)
          }
          v14569 = !v19176;
        }
        v8445 = v14569;
      }
      return position$$1;
    }
    var offset$$8 = getOffsets(elem$$9);
    var scroll$$1 = getScrolls(elem$$9);
    var v14570 = offset$$8.x;
    var v14571 = scroll$$1.x;
    var v8446 = v14570 - v14571;
    var v14572 = offset$$8.y;
    var v14573 = scroll$$1.y;
    var v8447 = v14572 - v14573;
    return {x:v8446, y:v8447};
  }
  function v68(obj$$21, klass$$2) {
    var v8448 = obj$$21.className;
    var v19177 = "(^|\\s)" + klass$$2;
    var v14574 = v19177 + "(?:\\s|$)";
    var v8449 = new RegExp(v14574);
    introspect(JAM.policy.p3) {
      var v31217 = v8448.replace(v8449, "$1")
    }
    obj$$21.className = v31217;
    return;
  }
  function v67(obj$$20, klass$$1) {
    introspect(JAM.policy.p3) {
      var v14575 = $$$1.hasClass(obj$$20, klass$$1)
    }
    var v8451 = !v14575;
    if (v8451) {
      var v14576 = obj$$20.className;
      var v8450 = v14576 + " ";
      obj$$20.className = v8450 + klass$$1;
    }
    return;
  }
  function v66(obj$$19, klass) {
    var v23964 = obj$$19.className;
    var v19178 = " " + v23964;
    var v14577 = v19178 + " ";
    var v19179 = " " + klass;
    var v14578 = v19179 + " ";
    introspect(JAM.policy.p3) {
      var v8452 = v14577.indexOf(v14578)
    }
    return v8452 > -1;
  }
  function v65(obj$$18, typeObj) {
    var type$$29;
    for (type$$29 in typeObj) {
      var v8453 = typeObj[type$$29];
      introspect(JAM.policy.p3) {
        $$$1.addEvent(obj$$18, type$$29, v8453);
      }
    }
    return;
  }
  function v64(obj$$17, type$$28, fn$$1) {
    var v8455 = obj$$17.addEventListener;
    if (v8455) {
      introspect(JAM.policy.p3) {
        obj$$17.addEventListener(type$$28, fn$$1, false);
      }
    } else {
      var v8454 = "on" + type$$28;
      introspect(JAM.policy.p3) {
        obj$$17.attachEvent(v8454, fn$$1);
      }
    }
    return;
  }
  function v63(elem$$8) {
    var ch$$1 = elem$$8.childNodes;
    var i$$19 = 0;
    var l$$6 = ch$$1.length;
    var v8457 = i$$19 < l$$6;
    for (;v8457;) {
      var v8456 = ch$$1[i$$19];
      introspect(JAM.policy.p3) {
        $$$1.destroy(v8456);
      }
      i$$19++;
      v8457 = i$$19 < l$$6;
    }
    return;
  }
  function v62(elem$$7) {
    introspect(JAM.policy.p3) {
      $$$1.clean(elem$$7);
    }
    var v8459 = elem$$7.parentNode;
    if (v8459) {
      var v8458 = elem$$7.parentNode;
      introspect(JAM.policy.p3) {
        v8458.removeChild(elem$$7);
      }
    }
    var v8460 = elem$$7.clearAttributes;
    if (v8460) {
      introspect(JAM.policy.p3) {
        elem$$7.clearAttributes();
      }
    }
    return;
  }
  function v61(hex$$1) {
    var v14579 = hex$$1.length;
    var v8469 = v14579 != 7;
    if (v8469) {
      introspect(JAM.policy.p3) {
        hex$$1 = hex$$1.match(/^#?(\w{1,2})(\w{1,2})(\w{1,2})$/);
      }
      introspect(JAM.policy.p3) {
        hex$$1.shift();
      }
      var v14580 = hex$$1.length;
      var v8461 = v14580 != 3;
      if (v8461) {
        return null;
      }
      var rgb = [];
      var i$$18 = 0;
      var v8464 = i$$18 < 3;
      for (;v8464;) {
        var value$$31 = hex$$1[i$$18];
        var v14581 = value$$31.length;
        var v8462 = v14581 == 1;
        if (v8462) {
          value$$31 = value$$31 + value$$31;
        }
        var v8463 = parseInt(value$$31, 16);
        introspect(JAM.policy.p3) {
          rgb.push(v8463);
        }
        i$$18++;
        v8464 = i$$18 < 3;
      }
      return rgb;
    } else {
      introspect(JAM.policy.p3) {
        var v8465 = hex$$1.slice(1)
      }
      hex$$1 = parseInt(v8465, 16);
      var v8466 = hex$$1 >> 16;
      var v14582 = hex$$1 >> 8;
      var v8467 = v14582 & 255;
      var v8468 = hex$$1 & 255;
      return [v8466, v8467, v8468];
    }
    return;
  }
  function v60(srcArray) {
    var array$$12;
    var v14583 = srcArray.length;
    var v8470 = v14583 < 3;
    if (v8470) {
      return null;
    }
    var v23965 = srcArray.length;
    var v19180 = v23965 == 4;
    if (v19180) {
      var v23966 = srcArray[3];
      v19180 = v23966 == 0;
    }
    var v14584 = v19180;
    if (v14584) {
      v14584 = !array$$12;
    }
    var v8471 = v14584;
    if (v8471) {
      return "transparent";
    }
    var hex = [];
    var i$$17 = 0;
    var v8474 = i$$17 < 3;
    for (;v8474;) {
      var v14585 = srcArray[i$$17];
      var v8472 = v14585 - 0;
      introspect(JAM.policy.p3) {
        var bit = v8472.toString(16)
      }
      var v14586;
      var v23967 = bit.length;
      var v19181 = v23967 == 1;
      if (v19181) {
        v14586 = "0" + bit;
      } else {
        v14586 = bit;
      }
      var v8473 = v14586;
      introspect(JAM.policy.p3) {
        hex.push(v8473);
      }
      i$$17++;
      v8474 = i$$17 < 3;
    }
    var v8475;
    if (array$$12) {
      v8475 = hex;
    } else {
      introspect(JAM.policy.p3) {
        var v14587 = hex.join("")
      }
      v8475 = "#" + v14587;
    }
    return v8475;
  }
  function v59() {
    var v14588 = arguments.length;
    var v8476 = v14588 === 0;
    if (v8476) {
      return [];
    }
    var j$$2 = 0;
    var ans$$1 = [];
    var l$$5 = arguments.length;
    var v8477 = arguments[0];
    var ml = v8477.length;
    var v8480 = j$$2 < ml;
    for (;v8480;) {
      var i$$16 = 0;
      var row = [];
      var v8479 = i$$16 < l$$5;
      for (;v8479;) {
        var v14589 = arguments[i$$16];
        var v8478 = v14589[j$$2];
        introspect(JAM.policy.p3) {
          row.push(v8478);
        }
        i$$16++;
        v8479 = i$$16 < l$$5;
      }
      introspect(JAM.policy.p3) {
        ans$$1.push(row);
      }
      j$$2++;
      v8480 = j$$2 < ml;
    }
    return ans$$1;
  }
  function v58(object$$1) {
    var unlinked;
    introspect(JAM.policy.p3) {
      var v8484 = $$$1.type(object$$1)
    }
    switch(v8484) {
      case "object":
        unlinked = {};
        var p$$1;
        for (p$$1 in object$$1) {
          var v8481 = object$$1[p$$1];
          introspect(JAM.policy.p3) {
            var v31218 = $$$1.unlink(v8481)
          }
          introspect(JAM.policy.p2) {
            unlinked[p$$1] = v31218;
          }
        }
        break;
      case "array":
        unlinked = [];
        var i$$15 = 0;
        var l$$4 = object$$1.length;
        var v8483 = i$$15 < l$$4;
        for (;v8483;) {
          var v8482 = object$$1[i$$15];
          introspect(JAM.policy.p3) {
            var v31219 = $$$1.unlink(v8482)
          }
          unlinked[i$$15] = v31219;
          i$$15++;
          v8483 = i$$15 < l$$4;
        }
        break;
      default:
        return object$$1;
    }
    return unlinked;
  }
  function v57() {
    var mix = {};
    var i$$14 = 0;
    var l$$3 = arguments.length;
    var v8487 = i$$14 < l$$3;
    for (;v8487;) {
      var object = arguments[i$$14];
      introspect(JAM.policy.p3) {
        var v14590 = $$$1.type(object)
      }
      var v8485 = v14590 != "object";
      if (v8485) {
        i$$14++;
        v8487 = i$$14 < l$$3;
        continue;
      }
      var key$$20;
      for (key$$20 in object) {
        var op = object[key$$20];
        var mp = mix[key$$20];
        var v8486;
        var v23968 = mp;
        if (v23968) {
          introspect(JAM.policy.p3) {
            var v26181 = $$$1.type(op)
          }
          v23968 = v26181 == "object";
        }
        var v19182 = v23968;
        if (v19182) {
          introspect(JAM.policy.p3) {
            var v23969 = $$$1.type(mp)
          }
          v19182 = v23969 == "object";
        }
        var v14591 = v19182;
        if (v14591) {
          introspect(JAM.policy.p3) {
            v8486 = $$$1.merge(mp, op);
          }
        } else {
          introspect(JAM.policy.p3) {
            v8486 = $$$1.unlink(op);
          }
        }
        introspect(JAM.policy.p2) {
          mix[key$$20] = v8486;
        }
      }
      i$$14++;
      v8487 = i$$14 < l$$3;
    }
    return mix;
  }
  function v56(array$$11, f$$1, opt$$1) {
    var l$$2 = array$$11.length;
    var v8488 = l$$2 == 0;
    if (v8488) {
      return opt$$1;
    }
    var v8489;
    var v19183 = arguments.length;
    var v14593 = v19183 == 3;
    if (v14593) {
      v8489 = opt$$1;
    } else {
      var v14592 = l$$2 = l$$2 - 1;
      v8489 = array$$11[v14592];
    }
    var acum = v8489;
    var v8491 = l$$2;
    l$$2 = l$$2 - 1;
    for (;v8491;) {
      var v8490 = array$$11[l$$2];
      introspect(JAM.policy.p3) {
        acum = f$$1(acum, v8490);
      }
      v8491 = l$$2;
      l$$2 = l$$2 - 1;
    }
    return acum;
  }
  function v55(array$$10, f) {
    function v54(elem$$6, i$$13) {
      introspect(JAM.policy.p3) {
        var v8492 = f(elem$$6, i$$13)
      }
      introspect(JAM.policy.p3) {
        ans.push(v8492);
      }
      return;
    }
    var ans = [];
    introspect(JAM.policy.p3) {
      $$$1.each(array$$10, v54);
    }
    return ans;
  }
  function v53(array$$9, item) {
    var v8493 = Array.indexOf;
    if (v8493) {
      introspect(JAM.policy.p3) {
        return array$$9.indexOf(item);
      }
    }
    var i$$12 = 0;
    var l$$1 = array$$9.length;
    var v8495 = i$$12 < l$$1;
    for (;v8495;) {
      var v14594 = array$$9[i$$12];
      var v8494 = v14594 === item;
      if (v8494) {
        return i$$12;
      }
      i$$12++;
      v8495 = i$$12 < l$$1;
    }
    return -1;
  }
  function v52(iterable, fn) {
    introspect(JAM.policy.p3) {
      var type$$27 = $$$1.type(iterable)
    }
    var v8499 = type$$27 == "object";
    if (v8499) {
      var key$$19;
      for (key$$19 in iterable) {
        var v8496 = iterable[key$$19];
        introspect(JAM.policy.p3) {
          fn(v8496, key$$19);
        }
      }
    } else {
      var i$$11 = 0;
      var l = iterable.length;
      var v8498 = i$$11 < l;
      for (;v8498;) {
        var v8497 = iterable[i$$11];
        introspect(JAM.policy.p3) {
          fn(v8497, i$$11);
        }
        i$$11++;
        v8498 = i$$11 < l;
      }
    }
    return;
  }
  function v51(elem$$5) {
    var v26182 = $$$1.type;
    var v23970 = v26182.s;
    introspect(JAM.policy.p3) {
      var v19184 = v23970.call(elem$$5)
    }
    introspect(JAM.policy.p3) {
      var v14595 = v19184.match(/^\[object\s(.*)\]$/)
    }
    var v8500 = v14595[1];
    introspect(JAM.policy.p3) {
      var type$$26 = v8500.toLowerCase()
    }
    var v8501 = type$$26 != "object";
    if (v8501) {
      return type$$26;
    }
    var v14596 = elem$$5;
    if (v14596) {
      v14596 = elem$$5.$$family;
    }
    var v8502 = v14596;
    if (v8502) {
      return elem$$5.$$family;
    }
    var v8503;
    var v23971 = elem$$5;
    if (v23971) {
      v23971 = elem$$5.nodeName;
    }
    var v19185 = v23971;
    if (v19185) {
      var v23972 = elem$$5.nodeType;
      v19185 = v23972 == 1;
    }
    var v14597 = v19185;
    if (v14597) {
      v8503 = "element";
    } else {
      v8503 = type$$26;
    }
    return v8503;
  }
  function v50(obj$$16) {
    introspect(JAM.policy.p3) {
      var type$$25 = $$$1.type(obj$$16)
    }
    var v8504;
    if (type$$25) {
      var v14598;
      var v19186 = type$$25 != "array";
      if (v19186) {
        v14598 = [obj$$16];
      } else {
        v14598 = obj$$16;
      }
      v8504 = v14598;
    } else {
      v8504 = [];
    }
    return v8504;
  }
  function v49() {
    var v8505 = new Date;
    return +v8505;
  }
  function v48(value$$30) {
    function v47() {
      return value$$30;
    }
    var v8506;
    var v19187 = typeof value$$30;
    var v14599 = v19187 == "function";
    if (v14599) {
      v8506 = value$$30;
    } else {
      v8506 = v47;
    }
    return v8506;
  }
  function v46(original, extended) {
    var key$$18;
    var v8507 = extended || {};
    for (key$$18 in v8507) {
      introspect(JAM.policy.p2) {
        original[key$$18] = extended[key$$18];
      }
    }
    return original;
  }
  function v45() {
    return;
  }
  function v44(w$$5) {
    w$$5 = w$$5 || window;
    var k;
    for (k in $jit) {
      var v14600 = $jit[k];
      var v8508 = v14600.$extend;
      if (v8508) {
        introspect(JAM.policy.p2) {
          w$$5[k] = $jit[k];
        }
      }
    }
    return;
  }
  function $C(b$$2) {
    var a$$3 = 0;
    return new Complex(a$$3, b$$2);
  }
  function Complex(x$$60, y$$41) {
    this.x = x$$60 || 0;
    this.y = y$$41 || 0;
    return;
  }
  function $P() {
    var a$$2 = 0;
    var b$$1 = 0;
    return new Polar(a$$2, b$$1);
  }
  function Polar(theta, rho$$1) {
    this.theta = theta || 0;
    this.rho = rho$$1 || 0;
    return;
  }
  function Options() {
    var args = arguments;
    var i$$25 = 0;
    var l$$7 = args.length;
    var ans$$3 = {};
    var v8512 = i$$25 < l$$7;
    for (;v8512;) {
      var v8509 = args[i$$25];
      var opt$$4 = Options[v8509];
      var v8511 = opt$$4.$extend;
      if (v8511) {
        introspect(JAM.policy.p3) {
          $$$1.extend(ans$$3, opt$$4);
        }
      } else {
        var v8510 = args[i$$25];
        introspect(JAM.policy.p2) {
          ans$$3[v8510] = opt$$4;
        }
      }
      i$$25++;
      v8512 = i$$25 < l$$7;
    }
    return ans$$3;
  }
  function Class(properties) {
    function klass$$3() {
      var key$$21;
      for (key$$21 in this) {
        var v19188 = this[key$$21];
        var v14601 = typeof v19188;
        var v8514 = v14601 != "function";
        if (v8514) {
          var v8513 = this[key$$21];
          introspect(JAM.policy.p3) {
            var v31220 = $$$1.unlink(v8513)
          }
          introspect(JAM.policy.p2) {
            this[key$$21] = v31220;
          }
        }
      }
      this.constructor = klass$$3;
      var v8515 = Class.prototyping;
      if (v8515) {
        return this;
      }
      var v8516;
      var v14603 = this.initialize;
      if (v14603) {
        var v14602 = this.initialize;
        introspect(JAM.policy.p3) {
          v8516 = v14602.apply(this, arguments);
        }
      } else {
        v8516 = this;
      }
      var instance = v8516;
      this.$$family = "class";
      return instance;
    }
    properties = properties || {};
    var mutator;
    var v8520 = Class.Mutators;
    for (mutator in v8520) {
      var v14604 = properties[mutator];
      var v8517 = !v14604;
      if (v8517) {
        continue;
      }
      var v8518 = Class.Mutators;
      var v8519 = properties[mutator];
      introspect(JAM.policy.p3) {
        properties = v8518[mutator](properties, v8519);
      }
      delete properties[mutator];
    }
    introspect(JAM.policy.p3) {
      $$$1.extend(klass$$3, this);
    }
    klass$$3.constructor = Class;
    klass$$3.prototype = properties;
    return klass$$3;
  }
  function $$$1(d) {
    introspect(JAM.policy.p3) {
      return document.getElementById(d);
    }
  }
  this.$jit = v44;
  $jit.version = "2.0.1";
  $$$1.empty = v45;
  $$$1.extend = v46;
  $$$1.lambda = v48;
  var v8521 = Date.now;
  var v14605 = !v8521;
  if (v14605) {
    v8521 = v49;
  }
  $$$1.time = v8521;
  $$$1.splat = v50;
  $$$1.type = v51;
  var v8522 = $$$1.type;
  var v14606 = Object.prototype;
  v8522.s = v14606.toString;
  $$$1.each = v52;
  $$$1.indexOf = v53;
  $$$1.map = v55;
  $$$1.reduce = v56;
  $$$1.merge = v57;
  $$$1.unlink = v58;
  $$$1.zip = v59;
  $$$1.rgbToHex = v60;
  $$$1.hexToRgb = v61;
  $$$1.destroy = v62;
  $$$1.clean = v63;
  $$$1.addEvent = v64;
  $$$1.addEvents = v65;
  $$$1.hasClass = v66;
  $$$1.addClass = v67;
  $$$1.removeClass = v68;
  $$$1.getPos = v69;
  $$$1.event = {get:v70, getWheel:v71, isRightClick:v72, getPos:v73, stop:v74};
  $jit.util = $jit.id = $$$1;
  Class.Mutators = {Implements:v76};
  var v8523 = {inherit:v77, override:v78};
  introspect(JAM.policy.p3) {
    $$$1.extend(Class, v8523);
  }
  var v8524 = Class.prototype;
  v8524.implement = v80;
  $jit.Class = Class;
  $jit.json = {prune:v82, getParent:v83, getSubtree:v84, eachLevel:v85, each:v86};
  $jit.Trans = {$extend:true, linear:v87};
  var Trans = $jit.Trans;
  v101();
  var v8525 = {initialize:v102, setOptions:v103, step:v104, start:v105, startTimer:v107, pause:v108, resume:v109, stopTimer:v110, check:v111};
  var Animation = new Class(v8525);
  var v19189 = [1, 1, 1];
  var v23973 = {x:-100, y:-100, z:-100};
  var v23974 = [.5, .3, .1];
  var v19190 = {direction:v23973, color:v23974};
  var v14607 = {enable:false, ambient:v19189, directional:v19190};
  var v8526 = {Lighting:v14607};
  Options.Canvas = {$extend:true, injectInto:"id", type:"2D", width:false, height:false, useCanvas:false, withLabels:true, background:false, Scene:v8526};
  Options.Tree = {$extend:true, orientation:"left", subtreeOffset:8, siblingOffset:5, indent:10, multitree:false, align:"center"};
  var v8527 = $$$1.empty;
  var v8528 = $$$1.empty;
  var v8529 = ["box", "star", "square"];
  var v8530 = ["BlueViolet", "Brown", "CadetBlue", "Coral", "CornflowerBlue", "Crimson", "DarkCyan", "DarkGoldenrod", "DarkGreen", "DarkKhaki", "DarkOlive Green", "DarkOrange", "DarkRed", "DarkSalmon", "DarkSlateBlue", "DarkSlateGray", "DarkViolet", "DeepPink", "DimGray", "DodgerBlue"];
  var v8531 = {quant:0, quali:1};
  var v8532 = ["#00FFFF", "#00DDFF", "#00BBFF", "#0099FF", "#0088FF", "#0077FF", "#0055FF", "#0044FF", "#0022FF", "#0000FF"];
  Options.PhyloJive = {$extend:true, alignName:false, lateralise:false, collapsedXOffset:25, branchLength:true, levelDistance:40, branchMultiplier:1, initCharacter:false, firstCharacter:false, presentClade:v8527, onPresentClade:v8528, rangeCount:10, shapes:v8529, color:v8530, typeEnum:v8531, quantColor:v8532, quantShape:"quant", selectedCharacters:[]};
  Options.Node = {$extend:false, overridable:false, type:"circle", color:"#ccb", alpha:1, dim:3, height:20, width:90, autoHeight:false, autoWidth:false, lineWidth:1, transform:true, align:"center", angularWidth:1, span:1, CanvasStyles:{}};
  Options.Edge = {$extend:false, overridable:false, type:"line", color:"#ccb", lineWidth:1, dim:15, alpha:1, epsilon:7, CanvasStyles:{}};
  var v19191 = $jit.Trans;
  var v14608 = v19191.Quart;
  var v8533 = v14608.easeInOut;
  Options.Fx = {$extend:true, fps:40, duration:2500, transition:v8533, clearCanvas:true};
  Options.Label = {$extend:false, overridable:false, type:"HTML", style:" ", size:10, family:"sans-serif", textAlign:"center", textBaseline:"alphabetic", color:"#fff"};
  var v8534 = $$$1.empty;
  var v8535 = $$$1.empty;
  Options.Tips = {$extend:false, enable:false, type:"auto", offsetX:20, offsetY:20, force:false, onShow:v8534, onHide:v8535};
  Options.NodeStyles = {$extend:false, enable:false, type:"auto", stylesHover:false, stylesClick:false};
  var v8536 = $$$1.empty;
  var v8537 = $$$1.empty;
  var v8538 = $$$1.empty;
  var v8539 = $$$1.empty;
  var v8540 = $$$1.empty;
  var v8541 = $$$1.empty;
  var v8542 = $$$1.empty;
  var v8543 = $$$1.empty;
  var v8544 = $$$1.empty;
  var v8545 = $$$1.empty;
  var v8546 = $$$1.empty;
  var v8547 = $$$1.empty;
  var v8548 = $$$1.empty;
  Options.Events = {$extend:false, enable:false, enableForEdges:false, type:"auto", onClick:v8536, onRightClick:v8537, onMouseMove:v8538, onMouseEnter:v8539, onMouseLeave:v8540, onDragStart:v8541, onDragMove:v8542, onDragCancel:v8543, onDragEnd:v8544, onTouchStart:v8545, onTouchMove:v8546, onTouchEnd:v8547, onMouseWheel:v8548};
  Options.Navigation = {$extend:false, enable:false, type:"auto", panning:false, zooming:false};
  var v8549 = $$$1.empty;
  var v8550 = $$$1.empty;
  var v8551 = $$$1.empty;
  var v8552 = $$$1.empty;
  var v8553 = $$$1.empty;
  var v8554 = $$$1.empty;
  var v8555 = $$$1.empty;
  var v8556 = $$$1.empty;
  var v8557 = $$$1.empty;
  var v8558 = $$$1.empty;
  Options.Controller = {$extend:true, onBeforeCompute:v8549, onAfterCompute:v8550, onCreateLabel:v8551, onPlaceLabel:v8552, onComplete:v8553, onBeforePlotLine:v8554, onAfterPlotLine:v8555, onBeforePlotNode:v8556, onAfterPlotNode:v8557, onBeforeRemoveNode:v8558, request:false};
  var v8559 = $$$1.empty;
  introspect(JAM.policy.p3) {
    var v8560 = $$$1.lambda(false)
  }
  var ExtrasInitializer = {initialize:v112, initializePost:v8559, setAsProperty:v8560, isEnabled:v113, isLabel:v114, isDescendantOf:v115};
  var v8561 = $$$1.empty;
  var v8562 = $$$1.empty;
  var v8563 = $$$1.empty;
  var v8564 = $$$1.empty;
  var v8565 = $$$1.empty;
  var v8566 = $$$1.empty;
  var v8567 = $$$1.empty;
  var v8568 = $$$1.empty;
  var v8569 = $$$1.empty;
  var v8570 = $$$1.empty;
  var EventsInterface = {onMouseUp:v8561, onMouseDown:v8562, onMouseMove:v8563, onMouseOver:v8564, onMouseOut:v8565, onMouseWheel:v8566, onTouchStart:v8567, onTouchMove:v8568, onTouchEnd:v8569, onTouchCancel:v8570};
  var v8571 = {initialize:v116, attachEvents:v125, register:v126, handleEvent:v127, makeEventObject:v132};
  var MouseEventsManager = new Class(v8571);
  var Extras = {initializeExtras:v134};
  Extras.Classes = {};
  var v8572 = Extras.Classes;
  var v19192 = [ExtrasInitializer, EventsInterface];
  introspect(JAM.policy.p3) {
    var v19193 = $$$1.lambda(true)
  }
  var v14609 = {Implements:v19192, initializePost:v135, setAsProperty:v19193, onMouseUp:v136, onMouseOut:v137, onMouseOver:v138, onMouseMove:v139, onMouseWheel:v140, onMouseDown:v141, onTouchStart:v142, onTouchMove:v143, onTouchEnd:v144};
  var v31221 = new Class(v14609);
  v8572.Events = v31221;
  var v8573 = Extras.Classes;
  var v19194 = [ExtrasInitializer, EventsInterface];
  introspect(JAM.policy.p3) {
    var v19195 = $$$1.lambda(true)
  }
  var v14610 = {Implements:v19194, initializePost:v145, setAsProperty:v19195, onMouseOut:v146, onMouseOver:v147, onMouseMove:v148, setTooltipPosition:v149, hide:v150};
  var v31222 = new Class(v14610);
  v8573.Tips = v31222;
  var v8574 = Extras.Classes;
  var v19196 = [ExtrasInitializer, EventsInterface];
  var v14611 = {Implements:v19196, initializePost:v151, onMouseOut:v152, onMouseOver:v153, onMouseDown:v154, onMouseUp:v155, getRestoredStyles:v156, toggleStylesOnHover:v157, toggleStylesOnClick:v158, toggleStylesOn:v159, onClick:v161, onMouseMove:v163};
  var v31223 = new Class(v14611);
  v8574.NodeStyles = v31223;
  var v8575 = Extras.Classes;
  var v19197 = [ExtrasInitializer, EventsInterface];
  var v14612 = {Implements:v19197, initializePost:v164, onMouseWheel:v165, onMouseDown:v166, onMouseMove:v167, onMouseUp:v168};
  var v31224 = new Class(v14612);
  v8575.Navigation = v31224;
  var Canvas;
  v200();
  $jit.Polar = Polar;
  Polar.prototype = {getc:v201, getp:v202, set:v203, setc:v204, setp:v205, clone:v206, toComplex:v207, add:v208, scale:v209, equals:v210, $add:v211, $madd:v212, $scale:v213, isZero:v214, interpolate:v215};
  var v8576 = Polar;
  var v31225 = $P();
  v8576.KER = v31225;
  $jit.Complex = Complex;
  Complex.prototype = {getc:v216, getp:v217, set:v218, setc:v219, setp:v220, clone:v221, toPolar:v222, norm:v223, squaredNorm:v224, add:v225, prod:v226, conjugate:v227, scale:v228, equals:v229, $add:v230, $prod:v231, $conjugate:v232, $scale:v233, $div:v234, isZero:v235};
  var v8577 = Complex;
  var v31226 = $C(0);
  v8577.KER = v31226;
  var v8578 = Complex;
  var v31227 = $C(1);
  v8578.IM = v31227;
  var v8579 = $jit;
  var v14613 = {initialize:v239, getNode:v240, get:v241, getByName:v242, getAdjacence:v243, addNode:v244, addAdjacence:v245, removeNode:v246, removeAdjacence:v247, hasNode:v248, empty:v249};
  var v31228 = new Class(v14613);
  v8579.Graph = v31228;
  var Graph = $jit.Graph;
  var Accessors;
  v263();
  var v8580 = Graph;
  var v14614 = {initialize:v264, adjacentTo:v265, getAdjacency:v266, getPos:v267, setPos:v268};
  var v31229 = new Class(v14614);
  v8580.Node = v31229;
  var v8581 = Graph.Node;
  introspect(JAM.policy.p3) {
    v8581.implement(Accessors);
  }
  var v8582 = Graph;
  var v14615 = {initialize:v269};
  var v31230 = new Class(v14615);
  v8582.Adjacence = v31230;
  var v8583 = Graph.Adjacence;
  introspect(JAM.policy.p3) {
    v8583.implement(Accessors);
  }
  Graph.Util = {filter:v272, getNode:v273, eachNode:v274, each:v275, eachAdjacency:v276, computeLevels:v279, eachBFS:v281, eachLevel:v283, eachSubgraph:v284, eachSubnode:v285, anySubnode:v288, getSubnodes:v290, getParents:v292, isDescendantOf:v293, clean:v295, getClosestNodeToOrigin:v296, getClosestNodeToPos:v298};
  var v8584 = ["get", "getNode", "each", "eachNode", "computeLevels", "eachBFS", "clean", "getClosestNodeToPos", "getClosestNodeToOrigin"];
  introspect(JAM.policy.p3) {
    $$$1.each(v8584, v300);
  }
  var v8585 = ["eachAdjacency", "eachLevel", "eachSubgraph", "eachSubnode", "anySubnode", "getSubnodes", "getParents", "isDescendantOf"];
  introspect(JAM.policy.p3) {
    $$$1.each(v8585, v302);
  }
  var v8586 = {type:"nothing", duration:2E3, hideLabels:true, fps:30};
  Graph.Op = {options:v8586, initialize:v303, removeNode:v309, removeEdge:v315, sum:v321, morph:v335, contract:v338, expand:v340, preprocessSum:v344};
  var v14616 = $$$1.empty;
  introspect(JAM.policy.p3) {
    var v14617 = $$$1.lambda(false)
  }
  var v8587 = {"render":v14616, "contains":v14617};
  var v8588 = {"render":v345, "contains":v346};
  var v8589 = {"render":v347, "contains":v348};
  var v8590 = {"render":v349, "contains":v350};
  var v8591 = {"render":v351, "contains":v352};
  var v8592 = {"render":v353, "contains":v354};
  var v8593 = {"render":v355, "contains":v356};
  var NodeHelper = {"none":v8587, "circle":v8588, "ellipse":v8589, "square":v8590, "rectangle":v8591, "triangle":v8592, "star":v8593};
  var v8594 = {"render":v357, "contains":v358};
  var v8595 = {"render":v359, "contains":v360};
  introspect(JAM.policy.p3) {
    var v14618 = $$$1.lambda(false)
  }
  var v8596 = {"render":v361, "contains":v14618};
  var EdgeHelper = {"line":v8594, "arrow":v8595, "hyperline":v8596};
  var v14619 = {"border":"color", "color":"color", "width":"number", "height":"number", "dim":"number", "alpha":"number", "lineWidth":"number", "angularWidth":"number", "span":"number", "valueArray":"array-number", "dimArray":"array-number", "vertices":"polygon"};
  var v14620 = {"globalAlpha":"number", "fillStyle":"color", "strokeStyle":"color", "lineWidth":"number", "shadowBlur":"number", "shadowColor":"color", "shadowOffsetX":"number", "shadowOffsetY":"number", "miterLimit":"number"};
  var v14621 = {"size":"number", "color":"color"};
  var v8597 = {"map":v14619, "canvas":v14620, "label":v14621, "compute":v363, "moebius":v364, "linear":v365, "polar":v366, "number":v367, "color":v368, "array-number":v369, "node":v370, "edge":v371, "node-property":v372, "edge-property":v373, "label-property":v374, "node-style":v375, "edge-style":v376, "polygon":v378};
  Graph.Plot = {initialize:v362, nodeHelper:NodeHelper, edgeHelper:EdgeHelper, Interpolator:v8597, sequence:v380, prepare:v385, animate:v389, nodeFx:v392, plot:v395, plotTree:v397, plotNode:v398, plotLine:v399};
  var v8598 = Graph;
  var v14622 = Graph.Plot;
  var v19198 = {"linear":v400};
  var v14623 = {Interpolator:v19198, plotNode:v402, plotLine:v404, plotElement:v405};
  introspect(JAM.policy.p3) {
    var v31231 = $$$1.merge(v14622, v14623)
  }
  v8598.Plot3D = v31231;
  Graph.Label = {};
  var v8599 = Graph.Label;
  var v19199 = $$$1.empty;
  var v14624 = {initialize:v406, plotLabel:v407, renderLabel:v408, hideLabel:v410, hideLabels:v19199};
  var v31232 = new Class(v14624);
  v8599.Native = v31232;
  var v8600 = Graph.Label;
  var v14625 = {labelsHidden:false, labelContainer:false, labels:{}, getLabelContainer:v411, getLabel:v412, hideLabels:v413, clearLabels:v414, disposeLabel:v415, hideLabel:v417, fitsInCanvas:v418};
  var v31233 = new Class(v14625);
  v8600.DOM = v31233;
  var v8601 = Graph.Label;
  var v23975 = Graph.Label;
  var v19200 = v23975.DOM;
  var v14626 = {Implements:v19200, plotLabel:v419};
  var v31234 = new Class(v14626);
  v8601.HTML = v31234;
  var v8602 = Graph.Label;
  var v23976 = Graph.Label;
  var v19201 = v23976.DOM;
  var v14627 = {Implements:v19201, plotLabel:v420};
  var v31235 = new Class(v14627);
  v8602.SVG = v31235;
  var v8603 = Graph;
  var v14628 = {initialize:v421, translate:v424, setRightLevelToShow:v426, getRightLevelToShow:v427};
  var v31236 = new Class(v14628);
  v8603.Geom = v31236;
  var Loader = {construct:v430, loadJSON:v431, toJSON:v435};
  var Layouts = $jit.Layouts = {};
  var NodeDim = {label:null, compute:v437, initializeLabel:v438, setLabelStyles:v439};
  var v8604 = Layouts;
  var v31237 = v449();
  v8604.PhyloJive = v31237;
  var v8605 = $jit;
  var v31238 = v539();
  v8605.Phylo = v31238;
  var v8606 = $jit.Phylo;
  v8606.$extend = true;
  var v8607 = $jit.Phylo;
  var v19202 = Graph.Op;
  var v14629 = {Implements:v19202};
  var v31239 = new Class(v14629);
  v8607.Op = v31239;
  var v8608 = $jit.Phylo;
  var v14630 = {initialize:v540, requestNodes:v542, contract:v545, hide:v548, expand:v551, show:v555, prepare:v556, getNodesWithChildren:v558, plotStep:v561, getSiblings:v564};
  var v31240 = new Class(v14630);
  v8608.Group = v31240;
  var v8609 = $jit.Phylo;
  var v19203 = Graph.Geom;
  var v14631 = {Implements:v19203, switchOrientation:v565, dispatch:v566, getSize:v567, getTreeBaseSize:v569, getEdge:v571, getScaledTreePosition:v573, treeFitsInCanvas:v575};
  var v31241 = new Class(v14631);
  v8609.Geom = v31241;
  var v8610 = Graph.Util;
  v8610.eachAdjacency = v577;
  var v8611 = Graph.Plot;
  v8611.plotTree = v579;
  var v8612 = $jit.Phylo;
  var v19204 = Graph.Plot;
  var v14632 = {Implements:v19204, plotSubtree:v581, getAlignedPos:v582, getOrientation:v583};
  var v31242 = new Class(v14632);
  v8612.Plot = v31242;
  var v8613 = $jit.Phylo;
  v8613.Label = {};
  var v14633 = $jit.Phylo;
  var v8614 = v14633.Label;
  var v23977 = Graph.Label;
  var v19205 = v23977.Native;
  var v14634 = {Implements:v19205, renderLabel:v584};
  var v31243 = new Class(v14634);
  v8614.Native = v31243;
  var v14635 = $jit.Phylo;
  var v8615 = v14635.Label;
  var v23978 = Graph.Label;
  var v19206 = v23978.DOM;
  var v14636 = {Implements:v19206, placeLabel:v585};
  var v31244 = new Class(v14636);
  v8615.DOM = v31244;
  var v14637 = $jit.Phylo;
  var v8616 = v14637.Label;
  var v27707 = $jit.Phylo;
  var v26183 = v27707.Label;
  var v23979 = v26183.DOM;
  var v26184 = Graph.Label;
  var v23980 = v26184.SVG;
  var v19207 = [v23979, v23980];
  var v14638 = {Implements:v19207, initialize:v586};
  var v31245 = new Class(v14638);
  v8616.SVG = v31245;
  var v14639 = $jit.Phylo;
  var v8617 = v14639.Label;
  var v27708 = $jit.Phylo;
  var v26185 = v27708.Label;
  var v23981 = v26185.DOM;
  var v26186 = Graph.Label;
  var v23982 = v26186.HTML;
  var v19208 = [v23981, v23982];
  var v14640 = {Implements:v19208, initialize:v587};
  var v31246 = new Class(v14640);
  v8617.HTML = v31246;
  var v14641 = $jit.Phylo;
  var v8618 = v14641.Plot;
  var v23983 = $$$1.empty;
  introspect(JAM.policy.p3) {
    var v23984 = $$$1.lambda(false)
  }
  var v19209 = {"render":v23983, "contains":v23984};
  var v19210 = {"render":v588, "contains":v589};
  var v19211 = {"render":v590, "contains":v591};
  var v19212 = {"render":v592, "contains":v593};
  var v19213 = {"render":v594, "contains":v595};
  var v19214 = {"render":v596, "contains":v597};
  var v14642 = {"none":v19209, "circle":v19210, "square":v19211, "ellipse":v19212, "rectangle":v19213, "triangle":v19214};
  var v31247 = new Class(v14642);
  v8618.NodeTypes = v31247;
  var v14643 = $jit.Phylo;
  var v8619 = v14643.Plot;
  var v19215 = $$$1.empty;
  var v19216 = {"render":v598, "contains":v599};
  var v19217 = {"render":v600, "contains":v601};
  var v19218 = {"render":v602};
  var v19219 = {"render":v603};
  var v19220 = {"render":v604};
  var v19221 = {"render":v605, "contains":v606};
  var v14644 = {"none":v19215, "line":v19216, "arrow":v19217, "quadratic:begin":v19218, "quadratic:end":v19219, "bezier":v19220, "rectangular":v19221};
  var v31248 = new Class(v14644);
  v8619.EdgeTypes = v31248;
  var v14645 = Extras.Classes;
  var v8620 = v14645.Navigation;
  var v8621 = {onMouseWheel:v607};
  introspect(JAM.policy.p3) {
    v8620.implement(v8621);
  }
  var v8622 = Graph.Util;
  v8622.computeLevels = v610;
  NodeHelper.triangle = {render:v611, contains:v612};
  var v8623 = window.CanvasRenderingContext2D;
  if (v8623) {
    v8623 = CanvasRenderingContext2D.prototype;
  }
  var CP = v8623;
  var v14646 = CP;
  if (v14646) {
    v14646 = CP.lineTo;
  }
  var v8624 = v14646;
  if (v8624) {
    CP.dashedLine = v613;
  }
  return;
}
function v43() {
  function v42() {
    return;
  }
  function v41(newickTree) {
    var v14647 = typeof newickTree;
    var v8625 = v14647 === "undefined";
    if (v8625) {
      alert("tree is not defined.");
      return;
    }
    var json;
    var legendElem;
    introspect(JAM.policy.p3) {
      Smits.NewickParse(newickTree);
    }
    introspect(JAM.policy.p3) {
      var v8626 = Smits.getRoot()
    }
    introspect(JAM.policy.p3) {
      var v31249 = v8626.json()
    }
    this.tree = v31249;
    var v8627 = this.tree;
    introspect(JAM.policy.p3) {
      st.loadJSON(v8627);
    }
    introspect(JAM.policy.p3) {
      st.compute();
    }
    var v8628 = st.config;
    v8628.initCharacter = false;
    introspect(JAM.policy.p3) {
      legendElem = $jit.id("legend");
    }
    var v8634 = st.character;
    if (v8634) {
      introspect(JAM.policy.p3) {
        var v8629 = st.colorCharacter()
      }
      var v14648 = !v8629;
      if (v14648) {
        v8629 = "";
      }
      html = v8629;
      introspect(JAM.policy.p3) {
        var v8630 = jQuery("#legendBody")
      }
      introspect(JAM.policy.p3) {
        v8630.html(html);
      }
      var v8631 = legendElem.style;
      v8631.display = "inline";
      var v8632 = st.characterList;
      updateCharacter(v8632);
    } else {
      var v8633 = legendElem.style;
      v8633.display = "none";
    }
    var v8635 = st.root;
    introspect(JAM.policy.p3) {
      st.onClick(v8635);
    }
    introspect(JAM.policy.p3) {
      st.fitScreen();
    }
    return;
  }
  var tree;
  var character$$1;
  return {drawTree:v41, drawCharacter:v42};
}
function v40() {
  introspect(JAM.policy.p3) {
    var rightContainer = $jit.id("right-jitcontainer")
  }
  var v14649 = rightContainer.innerHTML;
  rightContainer.innerHTML = v14649 + '<div id="tabs"><ul><li><a href="#tabAction">Action</a></li><li><a href="#tabCharacter">Character</a></li><li><a href="#tabLegend">Legend</a></li><li><a href="#tabSearch">Search</a></li><li><a href="#tabInput">Input</a></li></ul>  <div id="tabCharacter"><h4>Select Character</h4><p><label>Select: </label><br/><label id="characterSelection">First Characters: <select id="firstCharacter" onChange="onSetCharacter ( )"> </select><br/>Second Chracter: <select id ="secondCharacter" onChange="onSetCharacter ( )"></select><br/>Third Chracter: <select id ="thirdCharacter" onChange="onSetCharacter ( )"></select></label></p></div><div id ="tabAction"><h4>Actions</h4><p><table><tr><td>Node Actions</td></tr><tr><td>Select</td><td><input id="selectClade" name="options" type="radio" checked /><tr><td>Expand / Collapse</td><td><div id="expandDiv"><input id = "expand" name="options" type="radio" /></div></td></tr><tr><td>Rotate</td><td><div id="rotateDiv"><input id = "rotate" name="options" type="radio" /></div></td></tr><tr><td>Set Root</td><td><input id = "setRoot" name="options" type = "radio" onclick = "onSetRoot ( this );"/></td></tr>\x3c!--<tr><td>Get Characters</td><td><input id = "character" name="options" type = "radio" onclick = "onGetCharacter ( this );"/></td></tr>--\x3e</table><br/><table><tr><td>Tree Actions</td></tr><tr><td>Align Names</td><td><div id="settings"><input id="alignName" type="checkbox"  onclick="onClickAlign ( this )"/></div></td></tr><tr><td>Ladderize</td><td><input id = "lateralise"  checked type = "checkbox" onclick = "onLateralise ( this );"/></td></tr><tr><td>Animate</td><td><input id="animate" type="checkbox" checked onClick = "onAnimate( this )"/></td></tr><tr><td>Branch Length</td><td><input id="branchLength" type="checkbox" checked onClick = "onBranchLength( this )"/></td></tr><tr><td>Length Multiplier</td><td><label><input id="branchMultiplier" name="multiply" type="radio" onClick = "onBranchMultiply( 0.1 )"/>x0.1</label> <label><input name="multiply" id="branchMultiplier" type="radio" onClick = "onBranchMultiply( 1 )"/>x1</label> <label><input id="branchMultiplier" name="multiply" type="radio" checked onClick = "onBranchMultiply( 5 )"/>x5</label></td></tr>\x3c!--<tr><td>Selected Nodes</td><td><div id="selected"></div></td></tr>--\x3e</table></p></div><div id="tabLegend"><h4>Legend</h4><p><table id ="legend"><tbody id = "legendBody"><tr><th>Legend:</th><td></td></tr></tbody></table></p></div><div id="tabSearch"><h4>Search</h4><p><table><tr><td>Search:</td><td><input id="searchString" type="text" size="15" /></td><tr><td></td><td><input class ="foswikiButton" type="submit" id="next" value="next"/><input type="submit" id="previous" class ="foswikiButton" value="previous"/></td></tr></table></p></div><div id="tabInput"><h4>Input Tree</h4><p><table><tr><td>Input Tree:</td><td><textarea id="newickTree" size="15"></textarea></td></tr><tr><td></td><td><input id="renderTree" type="submit" value="Render" onclick="onRender ( this )"/></td></tr></table></p></div></div>';
  introspect(JAM.policy.p3) {
    var v8636 = jQuery("#tabs")
  }
  introspect(JAM.policy.p3) {
    v8636.tabs();
  }
  return;
}
function v39(character) {
  var v8637 = !character;
  if (v8637) {
    return;
  }
  var options$$1 = "";
  var unselected = "";
  var i$$2;
  var name$$30;
  var v19222 = st.config;
  var v14650 = v19222.selectedCharacters;
  var v8638 = v14650[0];
  var v14651 = !v8638;
  if (v14651) {
    v8638 = false;
  }
  var selectedfirst = v8638;
  var v19223 = st.config;
  var v14652 = v19223.selectedCharacters;
  var v8639 = v14652[0];
  var v14653 = !v8639;
  if (v14653) {
    v8639 = false;
  }
  var first$$1 = v8639;
  var v19224 = st.config;
  var v14654 = v19224.selectedCharacters;
  var v8640 = v14654[1];
  var v14655 = !v8640;
  if (v14655) {
    v8640 = false;
  }
  var second = v8640;
  var v19225 = st.config;
  var v14656 = v19225.selectedCharacters;
  var v8641 = v14656[2];
  var v14657 = !v8641;
  if (v14657) {
    v8641 = false;
  }
  var third = v8641;
  var select1 = "";
  var select2 = "";
  var select3 = "";
  i$$2 = 0;
  var v14658 = character.length;
  var v8646 = i$$2 < v14658;
  for (;v8646;) {
    var opt1 = "";
    var opt2 = "";
    var opt3 = "";
    var v14659 = first$$1 !== false;
    if (v14659) {
      var v19226 = character[i$$2];
      v14659 = first$$1 === v19226;
    }
    var v8642 = v14659;
    if (v8642) {
      opt1 = 'selected="selected"';
    }
    var v14660 = second !== false;
    if (v14660) {
      var v19227 = character[i$$2];
      v14660 = second === v19227;
    }
    var v8643 = v14660;
    if (v8643) {
      opt2 = 'selected="selected"';
    }
    var v14661 = third !== false;
    if (v14661) {
      var v19228 = character[i$$2];
      v14661 = third === v19228;
    }
    var v8644 = v14661;
    if (v8644) {
      opt3 = 'selected="selected"';
    }
    var v8645 = character[i$$2];
    introspect(JAM.policy.p3) {
      name$$30 = v8645.replace(/_/g, " ");
    }
    var v28673 = "<option " + opt1;
    var v27709 = v28673 + ' value="';
    var v27710 = character[i$$2];
    var v26187 = v27709 + v27710;
    var v23985 = v26187 + '" >';
    var v19229 = v23985 + name$$30;
    var v14662 = v19229 + "</option>";
    select1 = select1 + v14662;
    var v28674 = "<option " + opt2;
    var v27711 = v28674 + ' value="';
    var v27712 = character[i$$2];
    var v26188 = v27711 + v27712;
    var v23986 = v26188 + '" >';
    var v19230 = v23986 + name$$30;
    var v14663 = v19230 + "</option>";
    select2 = select2 + v14663;
    var v28675 = "<option " + opt3;
    var v27713 = v28675 + ' value="';
    var v27714 = character[i$$2];
    var v26189 = v27713 + v27714;
    var v23987 = v26189 + '" >';
    var v19231 = v23987 + name$$30;
    var v14664 = v19231 + "</option>";
    select3 = select3 + v14664;
    i$$2 = i$$2 + 1;
    var v14665 = character.length;
    v8646 = i$$2 < v14665;
  }
  if (select2) {
    select2 = '<option value=""> Please select </option>' + select2;
  }
  if (select3) {
    select3 = '<option value=""> Please select </option>' + select3;
  }
  introspect(JAM.policy.p3) {
    var v8647 = jQuery("#firstCharacter")
  }
  introspect(JAM.policy.p3) {
    v8647.html(select1);
  }
  introspect(JAM.policy.p3) {
    var v8648 = jQuery("#secondCharacter")
  }
  introspect(JAM.policy.p3) {
    v8648.html(select2);
  }
  introspect(JAM.policy.p3) {
    var v8649 = jQuery("#thirdCharacter")
  }
  introspect(JAM.policy.p3) {
    v8649.html(select3);
  }
  return;
}
function v38(opt) {
  function v37() {
    toggleScreen(this);
    return;
  }
  function $E(props$$1) {
    var tag = "div";
    introspect(JAM.policy.p3) {
      var elem$$1 = document.createElement(tag)
    }
    var p;
    for (p in props$$1) {
      var v19232 = props$$1[p];
      var v14666 = typeof v19232;
      var v8653 = v14666 == "object";
      if (v8653) {
        var v8650 = $jit.util;
        var v8651 = elem$$1[p];
        var v8652 = props$$1[p];
        introspect(JAM.policy.p3) {
          v8650.extend(v8651, v8652);
        }
      } else {
        introspect(JAM.policy.p2) {
          elem$$1[p] = props$$1[p];
        }
      }
    }
    return elem$$1;
  }
  opt.codeBase = "";
  var popupHTML = '<div id="popup-close" style="position:relative; width:100%; background-color:lightblue"><a href="#" onclick="this.parentNode.parentNode.style.display=\'none\';" onmouseover="this.style.cursor=\'pointer\';" class="ui-dialog-titlebar-close ui-corner-all" role="button"><span class="ui-icon ui-icon-closethick">close</span></a></div><div id="popup-text"></div>';
  var v30635 = opt.codeBase;
  var v30537 = '<div style="position:relative"><div id="panup" style="position: absolute; left: 13px; top: 4px; width: 18px; height: 18px; cursor: pointer;"><img id="north" src="' + v30635;
  var v30391 = v30537 + 'resources/north-mini.png" /></div><div id="panleft" style="position: absolute; left: 4px; top: 22px; width: 18px; height: 18px; cursor: pointer;"><img id="west" src="';
  var v30392 = opt.codeBase;
  var v30221 = v30391 + v30392;
  var v29986 = v30221 + 'resources/west-mini.png" /></div><div id="panright" style="position: absolute; left: 22px; top: 22px; width: 18px; height: 18px; cursor: pointer;"><img id="east" src="';
  var v29987 = opt.codeBase;
  var v29720 = v29986 + v29987;
  var v29315 = v29720 + 'resources/east-mini.png" /></div><div id="pandown" style="position: absolute; left: 13px; top: 40px; width: 18px; height: 18px; cursor: pointer;"><img id="south" src="';
  var v29316 = opt.codeBase;
  var v28676 = v29315 + v29316;
  var v27715 = v28676 + 'resources/south-mini.png" /></div><div id="zoomout" style="position: absolute; left: 13px; top: 99px; width: 18px; height: 18px; cursor: pointer;"><img id="zoomOUT" src="';
  var v27716 = opt.codeBase;
  var v26190 = v27715 + v27716;
  var v23988 = v26190 + 'resources/zoom-minus-mini.png" /></div><div id="zoomworld" style="position: absolute; left: 13px; top: 81px; width: 18px; height: 18px; cursor: pointer;"><img id="world" style="position: relative; width: 18px; height: 18px;" src="';
  var v23989 = opt.codeBase;
  var v19233 = v23988 + v23989;
  var v14667 = v19233 + 'resources/zoom-world-mini.png"></div><div id="zoomin" style="position: absolute; left: 13px; top: 63px; width: 18px; height: 18px; cursor: pointer;"><img id="zoomIN" src="';
  var v14668 = opt.codeBase;
  var v8654 = v14667 + v14668;
  var navHTML = v8654 + 'resources/zoom-plus-mini.png" /></div><div style="position:absolute;left:-50px;top:123px;width:130px"> Status: <span id="log"></span></div></div>';
  var jitcontainer;
  var rightJitContainer;
  var centerJitContainer;
  var v8655;
  var v23990 = opt.injectInto;
  var v19234 = typeof v23990;
  var v14670 = v19234 == "string";
  if (v14670) {
    v8655 = opt.injectInto;
  } else {
    var v14669 = opt.injectInto;
    v8655 = v14669.id;
  }
  var id = v8655;
  var infovis;
  var parent;
  var popup;
  var navigation;
  var menu;
  var border$$2;
  var v14671 = opt.width;
  var v8656 = v14671 * 100;
  border$$2 = v8656 / 90;
  var v19235 = border$$2 + "px";
  var v27717 = opt.height;
  var v26191 = v27717 + 55;
  var v26192 = border$$2 / 20;
  var v23991 = v26191 + v26192;
  var v19236 = v23991 + "px";
  var v14672 = {"position":"relative", "width":v19235, "height":v19236};
  var v8657 = {"id":"jitcontainer", "className":"clearfix roundedCorner", "style":v14672};
  jitcontainer = $E(v8657);
  var v14673 = {display:"none"};
  var v8658 = {"id":"right-jitcontainer", "className":"phylojivepadding", "style":v14673};
  rightJitContainer = $E(v8658);
  var v8659 = {"id":"center-jitcontainer", "className":"phylojivepadding"};
  centerJitContainer = $E(v8659);
  var v14674 = "#" + id;
  introspect(JAM.policy.p3) {
    var v8660 = jQuery(v14674)
  }
  infovis = v8660[0];
  parent = infovis.parentNode;
  introspect(JAM.policy.p3) {
    parent.replaceChild(jitcontainer, infovis);
  }
  introspect(JAM.policy.p3) {
    centerJitContainer.appendChild(infovis);
  }
  introspect(JAM.policy.p3) {
    jitcontainer.appendChild(centerJitContainer);
  }
  introspect(JAM.policy.p3) {
    jitcontainer.appendChild(rightJitContainer);
  }
  var v14675 = {"color":"black", "display":"none", "border":"1px solid green", "background-color":"#B5D397", "position":"absolute", "left":"50px", "top":"90px", "overflow":"auto", "text-align":"left"};
  var v8661 = {"id":"popup", "className":"", "style":v14675};
  popup = $E(v8661);
  introspect(JAM.policy.p3) {
    var v8662 = jQuery(popup)
  }
  introspect(JAM.policy.p3) {
    v8662.html(popupHTML);
  }
  introspect(JAM.policy.p3) {
    centerJitContainer.appendChild(popup);
  }
  introspect(JAM.policy.p3) {
    var v8663 = jQuery(popup)
  }
  var v8664 = {maxHeight:450, maxWidth:350, minHeight:250, minWidth:170};
  introspect(JAM.policy.p3) {
    v8663.resizable(v8664);
  }
  introspect(JAM.policy.p3) {
    var v8665 = jQuery(popup)
  }
  var v19237 = opt.injectInto;
  var v14676 = "#" + v19237;
  var v8666 = {handle:"#popup-close", containment:v14676};
  introspect(JAM.policy.p3) {
    v8665.draggable(v8666);
  }
  var v26193 = opt.width;
  var v23992 = v26193 - 50;
  var v19238 = v23992 + "px";
  var v14677 = {"left":v19238};
  var v8667 = {"id":"navigationPanel", "style":v14677};
  navigation = $E(v8667);
  introspect(JAM.policy.p3) {
    var v8668 = jQuery(navigation)
  }
  introspect(JAM.policy.p3) {
    v8668.html(navHTML);
  }
  introspect(JAM.policy.p3) {
    jitcontainer.appendChild(navigation);
  }
  var v8669 = {"id":"jitmenubutton", "className":"menubutton"};
  menu = $E(v8669);
  introspect(JAM.policy.p3) {
    var v8670 = jQuery(menu)
  }
  introspect(JAM.policy.p3) {
    v8670.click(v37);
  }
  introspect(JAM.policy.p3) {
    jitcontainer.appendChild(menu);
  }
  return;
}
function v36(text$$7) {
  var v14678 = this.elem;
  var v8671 = !v14678;
  if (v8671) {
    introspect(JAM.policy.p3) {
      var v31250 = document.getElementById("log")
    }
    this.elem = v31250;
  }
  var v8672 = this.elem;
  v8672.innerHTML = text$$7;
  return;
}
function v35() {
  var ua = navigator.userAgent;
  introspect(JAM.policy.p3) {
    var v8673 = ua.match(/iPhone/i)
  }
  var v14679 = !v8673;
  if (v14679) {
    introspect(JAM.policy.p3) {
      v8673 = ua.match(/iPad/i);
    }
  }
  var iStuff = v8673;
  var typeOfCanvas = typeof HTMLCanvasElement;
  var v8674 = typeOfCanvas === "object";
  var v14680 = !v8674;
  if (v14680) {
    v8674 = typeOfCanvas === "function";
  }
  var nativeCanvasSupport = v8674;
  var v8675 = nativeCanvasSupport;
  if (v8675) {
    introspect(JAM.policy.p3) {
      var v26194 = document.createElement("canvas")
    }
    introspect(JAM.policy.p3) {
      var v23993 = v26194.getContext("2d")
    }
    var v19239 = v23993.fillText;
    var v14681 = typeof v19239;
    v8675 = v14681 === "function";
  }
  var textSupport = v8675;
  var v8676;
  var v19240 = !nativeCanvasSupport;
  var v23995 = !v19240;
  if (v23995) {
    var v23994 = textSupport;
    if (v23994) {
      v23994 = !iStuff;
    }
    v19240 = v23994;
  }
  var v14682 = v19240;
  if (v14682) {
    v8676 = "Native";
  } else {
    v8676 = "HTML";
  }
  labelType = v8676;
  nativeTextSupport = labelType === "Native";
  useGradients = nativeCanvasSupport;
  var v14683 = iStuff;
  var v19241 = !v14683;
  if (v19241) {
    v14683 = !nativeCanvasSupport;
  }
  var v8677 = v14683;
  animate = !v8677;
  return;
}
function smitsNode2JSON(node$$2) {
  var childJSON = [];
  var leaves = 0;
  var i$$3 = 0;
  var v19242 = node$$2.children;
  var v14684 = v19242.length;
  var v8679 = i$$3 < v14684;
  for (;v8679;) {
    var v14685 = node$$2.children;
    var v8678 = v14685[i$$3];
    var j = smitsNode2JSON(v8678);
    introspect(JAM.policy.p3) {
      childJSON.push(j);
    }
    var v19243 = j.data;
    var v14686 = v19243.leaf;
    leaves = leaves + v14686;
    var v19244 = j.data;
    var v14687 = v19244.leaves;
    leaves = leaves + v14687;
    i$$3++;
    var v19245 = node$$2.children;
    var v14688 = v19245.length;
    v8679 = i$$3 < v14688;
  }
  var that$$1 = node$$2;
  var sampleid = "";
  var v14689 = childJSON.length;
  var v8689 = v14689 !== 0;
  if (v8689) {
    var v8680 = node$$2.id;
    var v8681 = node$$2.name;
    var v14690 = node$$2.len;
    var v8682 = {"leaves":leaves, "leaf":0, "len":v14690, "$type":"circle", "$dim":5, "$color":"#fff"};
    return {"id":v8680, "name":v8681, "data":v8682, "children":childJSON};
  } else {
    var v8683 = node$$2.name;
    introspect(JAM.policy.p3) {
      var v31251 = v8683.replace(/_/g, " ")
    }
    node$$2.name = v31251;
    var v8684 = node$$2.name;
    introspect(JAM.policy.p3) {
      var sampleArray = v8684.split(" ")
    }
    var v14691 = sampleArray.length;
    var v8685 = v14691 > 1;
    if (v8685) {
      sampleid = sampleArray[1];
    }
    var name$$31 = sampleArray[0];
    var v8686 = node$$2.id;
    var v8687 = node$$2.name;
    var v14692 = node$$2.len;
    var v8688 = {"leaves":0, "leaf":1, "len":v14692, "$height":20, "$type":"none", "sampleid":sampleid, "name":name$$31};
    var nodeJSON = {"id":v8686, "name":v8687, "data":v8688, "children":childJSON};
    return nodeJSON;
  }
  return;
}
function phylogenyExplorer_init() {
  function v34(char$$5) {
    introspect(JAM.policy.p3) {
      var chars = char$$5.split("/")
    }
    var index$$42 = ["firstCharacter", "secondCharacter", "thirdCharacter"];
    var i$$10 = 0;
    var v14693 = chars.length;
    var v8694 = i$$10 < v14693;
    for (;v8694;) {
      var v8690 = chars[i$$10];
      var ch = unescape(v8690);
      var v19246 = index$$42[i$$10];
      var v14694 = "#" + v19246;
      introspect(JAM.policy.p3) {
        var v8691 = jQuery(v14694)
      }
      var select$$1 = v8691[0];
      var j$$1 = 0;
      var v19247 = select$$1.options;
      var v14695 = v19247.length;
      var v8693 = j$$1 < v14695;
      for (;v8693;) {
        var v23996 = select$$1.options;
        var v19248 = v23996[j$$1];
        var v14696 = v19248.value;
        var v8692 = v14696 === ch;
        if (v8692) {
          select$$1.selectedIndex = j$$1;
          break;
        }
        j$$1++;
        var v19249 = select$$1.options;
        var v14697 = v19249.length;
        v8693 = j$$1 < v14697;
      }
      i$$10++;
      var v14698 = chars.length;
      v8694 = i$$10 < v14698;
    }
    onSetCharacter();
    return;
  }
  function v33() {
    var v8695 = st.root;
    introspect(JAM.policy.p3) {
      st.onClick(v8695);
    }
    introspect(JAM.policy.p3) {
      st.fitScreen();
    }
    return;
  }
  function v32() {
    var first$$inline_13;
    var second$$inline_14;
    var third$$inline_15;
    var value$$inline_16 = [];
    introspect(JAM.policy.p3) {
      var v8696 = jQuery("#firstCharacter")
    }
    introspect(JAM.policy.p3) {
      first$$inline_13 = v8696.val();
    }
    introspect(JAM.policy.p3) {
      var v8697 = jQuery("#secondCharacter")
    }
    introspect(JAM.policy.p3) {
      second$$inline_14 = v8697.val();
    }
    introspect(JAM.policy.p3) {
      var v8698 = jQuery("#thirdCharacter")
    }
    introspect(JAM.policy.p3) {
      third$$inline_15 = v8698.val();
    }
    if (first$$inline_13) {
      introspect(JAM.policy.p3) {
        value$$inline_16.push(first$$inline_13);
      }
    }
    if (second$$inline_14) {
      introspect(JAM.policy.p3) {
        value$$inline_16.push(second$$inline_14);
      }
    }
    if (third$$inline_15) {
      introspect(JAM.policy.p3) {
        value$$inline_16.push(third$$inline_15);
      }
    }
    var v8699 = st.config;
    v8699.firstCharacter = first$$inline_13 || "";
    var v8700 = st.config;
    v8700.selectedCharacters = value$$inline_16;
    var v8701;
    var v19250 = typeof first$$inline_13;
    var v14699 = v19250 === "undefined";
    if (v14699) {
      v8701 = "";
    } else {
      v8701 = first$$inline_13;
    }
    first$$inline_13 = v8701;
    var v8702;
    var v19251 = typeof second$$inline_14;
    var v14700 = v19251 === "undefined";
    if (v14700) {
      v8702 = "";
    } else {
      v8702 = second$$inline_14;
    }
    second$$inline_14 = v8702;
    var v8703;
    var v19252 = typeof third$$inline_15;
    var v14701 = v19252 === "undefined";
    if (v14701) {
      v8703 = "";
    } else {
      v8703 = third$$inline_15;
    }
    third$$inline_15 = v8703;
    var v26195 = "character/" + first$$inline_13;
    var v23997 = v26195 + "/";
    var v19253 = v23997 + second$$inline_14;
    var v14702 = v19253 + "/";
    var v8704 = v14702 + third$$inline_15;
    introspect(JAM.policy.p3) {
      app.navigate(v8704);
    }
    introspect(JAM.policy.p3) {
      var legendElem$$inline_18 = $jit.id("legend")
    }
    var i$$inline_19;
    var node$$inline_20;
    var label$$inline_21;
    var v8709 = st.character;
    if (v8709) {
      introspect(JAM.policy.p3) {
        var v8705 = st.colorCharacter()
      }
      var v14703 = !v8705;
      if (v14703) {
        v8705 = "";
      }
      html$$1 = v8705;
      introspect(JAM.policy.p3) {
        var v8706 = jQuery("#legendBody")
      }
      introspect(JAM.policy.p3) {
        v8706.html(html$$1);
      }
      var v8707 = legendElem$$inline_18.style;
      v8707.display = "inline";
    } else {
      var v8708 = legendElem$$inline_18.style;
      v8708.display = "none";
    }
    var v14704 = st.graph;
    var v8713 = v14704.nodes;
    for (i$$inline_19 in v8713) {
      var v19254 = st.graph;
      var v14705 = v19254.nodes;
      introspect(JAM.policy.p3) {
        var v8712 = v14705.hasOwnProperty(i$$inline_19)
      }
      if (v8712) {
        var v14706 = st.graph;
        var v8710 = v14706.nodes;
        node$$inline_20 = v8710[i$$inline_19];
        var v19255 = node$$inline_20.id;
        var v14707 = "#" + v19255;
        introspect(JAM.policy.p3) {
          var v8711 = jQuery(v14707)
        }
        label$$inline_21 = v8711[0];
        if (label$$inline_21) {
          var v14708 = st.config;
          introspect(JAM.policy.p3) {
            v14708.onCreateLabel(label$$inline_21, node$$inline_20);
          }
        }
      }
    }
    var v8714 = st.root;
    introspect(JAM.policy.p3) {
      st.onClick(v8714);
    }
    introspect(JAM.policy.p3) {
      st.fitScreen();
    }
    return;
  }
  function v31(elem$$4) {
    introspect(JAM.policy.p3) {
      var v14709 = jQuery("#right-jitcontainer")
    }
    var v8715 = v14709[0];
    var style$$1 = v8715.style;
    var v8716;
    var v19256 = style$$1.display;
    var v14710 = v19256 === "none";
    if (v14710) {
      v8716 = "";
    } else {
      v8716 = "none";
    }
    style$$1.display = v8716;
    var v8719 = style$$1.display;
    if (v8719) {
      introspect(JAM.policy.p3) {
        var v8717 = jQuery(elem$$4)
      }
      introspect(JAM.policy.p3) {
        v8717.removeClass("on");
      }
    } else {
      introspect(JAM.policy.p3) {
        var v8718 = jQuery(elem$$4)
      }
      introspect(JAM.policy.p3) {
        v8718.addClass("on");
      }
    }
    return;
  }
  function v30(value$$29) {
    var v8720 = st.config;
    v8720.branchMultiplier = value$$29;
    var v14711 = st.graph;
    var v14712 = st.root;
    introspect(JAM.policy.p3) {
      var v8721 = v14711.getNode(v14712)
    }
    introspect(JAM.policy.p3) {
      st.computePositions(v8721, "");
    }
    introspect(JAM.policy.p3) {
      st.plot();
    }
    return;
  }
  function v29(checkbox) {
    var v8722 = st.config;
    v8722.branchLength = checkbox.checked;
    var v14713 = st.graph;
    var v14714 = st.root;
    introspect(JAM.policy.p3) {
      var v8723 = v14713.getNode(v14714)
    }
    introspect(JAM.policy.p3) {
      st.computePositions(v8723, "");
    }
    introspect(JAM.policy.p3) {
      st.plot();
    }
    return;
  }
  function v28(char$$4) {
    return;
  }
  function v27(render) {
    introspect(JAM.policy.p3) {
      var v8724 = $jit.id("newickTree")
    }
    var newickTree$$1 = v8724.value;
    if (newickTree$$1) {
      var v14715 = Smits.PhyloCanvas;
      var v8725 = v14715.NewickParse;
      var dataObject$$1 = new v8725(newickTree$$1);
      var rootObject;
      var json$$2 = "";
      var v14716 = typeof dataObject$$1;
      var v8726 = v14716 === "object";
      if (v8726) {
        introspect(JAM.policy.p3) {
          rootObject = dataObject$$1.getRoot();
        }
        json$$2 = smitsNode2JSON(rootObject);
        introspect(JAM.policy.p3) {
          st.loadJSON(json$$2);
        }
      }
      introspect(JAM.policy.p3) {
        st.compute();
      }
      var v8727 = st.config;
      v8727.initCharacter = false;
      introspect(JAM.policy.p3) {
        var legendElem$$3 = $jit.id("legend")
      }
      var v8733 = st.character;
      if (v8733) {
        introspect(JAM.policy.p3) {
          var v8728 = st.colorCharacter()
        }
        var v14717 = !v8728;
        if (v14717) {
          v8728 = "";
        }
        html$$1 = v8728;
        introspect(JAM.policy.p3) {
          var v8729 = jQuery("#legendBody")
        }
        introspect(JAM.policy.p3) {
          v8729.html(html$$1);
        }
        var v8730 = legendElem$$3.style;
        v8730.display = "inline";
        var v8731 = st.characterList;
        updateCharacter(v8731);
      } else {
        var v8732 = legendElem$$3.style;
        v8732.display = "none";
      }
      var v8734 = st.root;
      introspect(JAM.policy.p3) {
        st.onClick(v8734);
      }
      introspect(JAM.policy.p3) {
        st.fitScreen();
      }
    }
    return;
  }
  function v26(animate$$1) {
    var v8736 = !animateDuration;
    if (v8736) {
      var v8735 = st.config;
      animateDuration = v8735.duration;
    }
    var v8739 = animate$$1.checked;
    if (v8739) {
      var v8737 = st.config;
      v8737.duration = animateDuration;
    } else {
      var v8738 = st.config;
      v8738.duration = 0;
    }
    return;
  }
  function v25(lat) {
    var v8742 = lat.checked;
    if (v8742) {
      var v8740 = st.config;
      v8740.lateralise = true;
    } else {
      var v8741 = st.config;
      v8741.lateralise = false;
    }
    var v14718 = st.graph;
    var v14719 = st.root;
    introspect(JAM.policy.p3) {
      var v8743 = v14718.getNode(v14719)
    }
    introspect(JAM.policy.p3) {
      st.computePositions(v8743, "");
    }
    introspect(JAM.policy.p3) {
      st.plot();
    }
    return;
  }
  function v24(setRoot$$2) {
    var v14720 = setRoot$$2.value;
    var v8745 = v14720 === "checked";
    if (v8745) {
      var v8744 = st.clickedNode;
      var id$$2 = v8744.id;
      introspect(JAM.policy.p3) {
        st.setRoot(id$$2, "animate");
      }
    }
    return;
  }
  function v23(alignName$$1) {
    var v8750 = alignName$$1.checked;
    if (v8750) {
      var v8746 = st.config;
      v8746.alignName = true;
      introspect(JAM.policy.p3) {
        var v8747 = jQuery(".quant")
      }
      introspect(JAM.policy.p3) {
        v8747.addClass("quantAlign");
      }
    } else {
      var v8748 = st.config;
      v8748.alignName = false;
      introspect(JAM.policy.p3) {
        var v8749 = jQuery(".quant")
      }
      introspect(JAM.policy.p3) {
        v8749.removeClass("quantAlign");
      }
    }
    introspect(JAM.policy.p3) {
      st.plot();
    }
    return;
  }
  function v22() {
    search(-1);
    return;
  }
  function v21() {
    search(1);
    return;
  }
  function v20() {
    introspect(JAM.policy.p3) {
      st.fitScreen();
    }
    return;
  }
  function v19() {
    var v8751 = st.config;
    return v8751.lateralise;
  }
  function v18(dom, node$$13) {
    introspect(JAM.policy.p3) {
      var alignName = $jit.id("alignName")
    }
    var v8753 = node$$13.selected;
    if (v8753) {
      var v8752 = dom.style;
      v8752.display = "none";
    }
    var v19257 = node$$13.data;
    var v14721 = v19257.leaf;
    var v8755 = !v14721;
    if (v8755) {
      var v8754 = dom.style;
      v8754.display = "none";
    }
    var v8756 = dom.style;
    var v19258 = node$$13.data;
    var v14722 = v19258.display;
    var v19259 = !v14722;
    if (v19259) {
      v14722 = "block";
    }
    v8756.display = v14722;
    var v8759 = alignName.checked;
    if (v8759) {
      var v23998 = dom.id;
      var v19260 = "#" + v23998;
      var v14723 = v19260 + " .quant";
      introspect(JAM.policy.p3) {
        var v8757 = jQuery(v14723)
      }
      introspect(JAM.policy.p3) {
        v8757.addClass("quantAlign");
      }
    } else {
      var v23999 = dom.id;
      var v19261 = "#" + v23999;
      var v14724 = v19261 + " .quant";
      introspect(JAM.policy.p3) {
        var v8758 = jQuery(v14724)
      }
      introspect(JAM.policy.p3) {
        v8758.removeClass("quantAlign");
      }
    }
    return;
  }
  function v17(node$$12, eventInfo$$1, e$$7) {
    function v16(n$$1) {
      var v14725 = n$$1.data;
      var v8760 = v14725.leaf;
      if (v8760) {
        var v14726 = elem$$3.innerHTML;
        var v19262 = n$$1.name;
        var v14727 = v19262 + "<br/>";
        elem$$3.innerHTML = v14726 + v14727;
      }
      return;
    }
    if (node$$12) {
      introspect(JAM.policy.p3) {
        var elem$$3 = document.getElementById("selected")
      }
      var v8761 = node$$12.leaf;
      if (v8761) {
        elem$$3.innerHTML = node$$12.name;
      } else {
        elem$$3.innerHTML = "";
        introspect(JAM.policy.p3) {
          node$$12.subGraph(v16);
        }
      }
    }
    return;
  }
  function v15(adj$$1) {
    return;
  }
  function v14(node$$11) {
    var result$$3 = true;
    var char$$3;
    var v19263 = node$$11.data;
    var v14728 = v19263.leaf;
    var v8766 = !v14728;
    if (v8766) {
      var key$$17;
      var v14729 = st.config;
      var v8765 = v14729.selectedCharacters;
      for (key$$17 in v8765) {
        var v19264 = node$$11.data;
        var v14730 = v19264.characterConsistency;
        introspect(JAM.policy.p3) {
          var v8764 = v14730.hasOwnProperty(key$$17)
        }
        if (v8764) {
          var v14731 = st.config;
          var v8762 = v14731.selectedCharacters;
          char$$3 = v8762[key$$17];
          var v8763 = result$$3;
          if (v8763) {
            var v19265 = node$$11.data;
            var v14732 = v19265.characterConsistency;
            v8763 = v14732[char$$3];
          }
          result$$3 = v8763;
        }
      }
    }
    var v14733 = !result$$3;
    if (v14733) {
      var v24000 = node$$11.data;
      var v19266 = v24000.$type;
      v14733 = v19266 !== "triangle";
    }
    var v8768 = v14733;
    if (v8768) {
      var v8767 = node$$11.data;
      v8767.$type = "square";
    }
    var v19267 = node$$11.data;
    var v14734 = v19267.$type;
    var v8775 = v14734 === "circle";
    if (v8775) {
      var v14735 = node$$11.data;
      var v8771 = v14735.rotate;
      if (v8771) {
        var v8769 = node$$11.data;
        v8769.$color = "purple";
      } else {
        var v8770 = node$$11.data;
        v8770.$color = "red";
      }
    } else {
      var v19268 = node$$11.data;
      var v14736 = v19268.$type;
      var v8774 = v14736 === "square";
      if (v8774) {
        var v8772 = node$$11.data;
        v8772.$dim = 10;
        var v8773 = node$$11.data;
        v8773.$color = "red";
      }
    }
    var v19269 = node$$11.data;
    var v14737 = v19269.$type;
    var v8780 = v14737 === "triangle";
    if (v8780) {
      var v8776 = node$$11.data;
      v8776.$dim = 15;
      var v8777 = node$$11.data;
      v8777.$color = "#EE9AA2";
    } else {
      var v19270 = node$$11.data;
      var v14738 = v19270.$type;
      var v8779 = v14738 !== "square";
      if (v8779) {
        var v8778 = node$$11.data;
        delete v8778.$dim;
      }
    }
    var v14739 = st.root;
    var v14740 = node$$11.id;
    var v8782 = v14739 === v14740;
    if (v8782) {
      var v8781 = node$$11.data;
      v8781.$color = "lightblue";
    }
    return;
  }
  function v13(label$$1, node$$10) {
    function v12() {
      introspect(JAM.policy.p3) {
        var setRoot$$1 = $jit.id("setRoot")
      }
      var v14741 = setRoot$$1.checked;
      var v8784 = !v14741;
      if (v8784) {
        var v14742 = st.controller;
        var v8783 = v14742.Events;
        introspect(JAM.policy.p3) {
          v8783.onClick(node$$10);
        }
      }
      return;
    }
    var char$$2;
    var v8785 = st.config;
    var list = v8785.selectedCharacters;
    var charTypeMapping = st.charTypeMapping;
    var i$$9;
    var values$$4;
    var div$$2;
    var colorCoding = st.colorCoding;
    var firstColor;
    var index$$41;
    var temp;
    var shape;
    label$$1.id = node$$10.id;
    label$$1.innerHTML = node$$10.name;
    label$$1.onclick = v12;
    var style = label$$1.style;
    style.width = "auto";
    style.height = 17 + "px";
    style.cursor = "pointer";
    style.color = "#333";
    style.fontSize = "0.8em";
    style.textAlign = "left";
    style.paddingTop = "3px";
    style.display = "inline";
    var v8786 = node$$10.data;
    style.color = v8786.$color;
    var boxes = "";
    var v8787 = st.config;
    var first$$3 = v8787.firstCharacter;
    var shapes = ["box", "star", "triangle"];
    index$$41 = 0;
    boxes = "";
    i$$9 = 0;
    var v14743 = list.length;
    var v8803 = i$$9 < v14743;
    for (;v8803;) {
      char$$2 = list[i$$9];
      var v14744 = node$$10.data;
      var v8788 = v14744.character;
      values$$4 = v8788[char$$2];
      var v19271 = values$$4;
      if (v19271) {
        var v24001 = values$$4.length;
        v19271 = v24001 > 0;
      }
      var v14745 = v19271;
      if (v14745) {
        var v24002 = values$$4[0];
        var v19272 = typeof v24002;
        v14745 = v19272 !== "undefined";
      }
      var v8801 = v14745;
      if (v8801) {
        var v14746 = charTypeMapping[char$$2];
        var v24003 = st.config;
        var v19273 = v24003.typeEnum;
        var v14747 = v19273.quali;
        var v8800 = v14746 === v14747;
        if (v8800) {
          temp = colorCoding[char$$2];
          value = values$$4[0];
          var v14748 = values$$4.length;
          var v8789 = v14748 > 1;
          if (v8789) {
            value = "multiple";
          }
          var v29721 = temp[value];
          var v29317 = v29721.shape;
          var v28677 = '<div class="' + v29317;
          var v27718 = v28677 + '" style="float:left;background-color:';
          var v28678 = temp[value];
          var v27719 = v28678.color;
          var v26196 = v27718 + v27719;
          var v24004 = v26196 + ';" title="';
          var v19274 = v24004 + char$$2;
          var v14749 = v19274 + " : ";
          introspect(JAM.policy.p3) {
            var v14750 = values$$4.join(" , ")
          }
          var v8790 = v14749 + v14750;
          shape = v8790 + '"></div>';
          var v8792 = i$$9 === 0;
          if (v8792) {
            var v8791 = temp[value];
            firstColor = v8791.color;
          }
        } else {
          var v14751 = charTypeMapping[char$$2];
          var v24005 = st.config;
          var v19275 = v24005.typeEnum;
          var v14752 = v19275.quant;
          var v8799 = v14751 === v14752;
          if (v8799) {
            var v8793 = st.colorCodingQuali;
            temp = v8793[char$$2];
            value = values$$4[0];
            var v14753 = st.range;
            var v8794 = v14753[char$$2];
            introspect(JAM.policy.p3) {
              index$$41 = st.findIndex(value, v8794);
            }
            var v29722 = temp[index$$41];
            var v29318 = v29722.shape;
            var v28679 = '<div class="' + v29318;
            var v27720 = v28679 + '" style="float:left;background-color:';
            var v28680 = temp[index$$41];
            var v27721 = v28680.color;
            var v26197 = v27720 + v27721;
            var v24006 = v26197 + ';" title="';
            var v19276 = v24006 + char$$2;
            var v14754 = v19276 + " : ";
            var v19277 = temp[index$$41];
            var v14755 = v19277.name;
            var v8795 = v14754 + v14755;
            shape = v8795 + '"></div>';
            var v8798 = i$$9 === 0;
            if (v8798) {
              var v14756 = st.config;
              var v8796 = v14756.quantColor;
              var v24007 = st.config;
              var v19278 = v24007.quantColor;
              var v14757 = v19278.length;
              var v8797 = v14757 - 1;
              firstColor = v8796[v8797];
            }
          }
        }
      } else {
        shape = '<div class="empty" style="float:left;background-color:;" title="empty"></div>';
      }
      var v8802 = first$$3 !== char$$2;
      if (v8802) {
        boxes = boxes + shape;
      } else {
        boxes = shape + boxes;
      }
      i$$9 = i$$9 + 1;
      var v14758 = list.length;
      v8803 = i$$9 < v14758;
    }
    if (label$$1) {
      var v19279 = node$$10.data;
      var v14759 = v19279.leaf;
      var v8806 = !v14759;
      if (v8806) {
        var v24008 = boxes + '&nbsp;&nbsp;<div style="display:inline;color:';
        var v19280 = v24008 + firstColor;
        var v14760 = v19280 + '">';
        var v19281 = node$$10.data;
        var v14761 = v19281.leaves;
        var v8804 = v14760 + v14761;
        label$$1.innerHTML = v8804 + " Taxa</div>";
      } else {
        var v24009 = boxes + '&nbsp;&nbsp;<div style="display:inline;color:';
        var v19282 = v24009 + firstColor;
        var v14762 = v19282 + '">';
        var v14763 = node$$10.name;
        var v8805 = v14762 + v14763;
        label$$1.innerHTML = v8805 + "</div>";
      }
    }
    return;
  }
  function v11(msg) {
    if (msg) {
      introspect(JAM.policy.p3) {
        Log.write(msg);
      }
    } else {
      introspect(JAM.policy.p3) {
        Log.write("done");
      }
    }
    return;
  }
  function v10(node$$9) {
    var v14764 = node$$9.name;
    var v8807 = "loading " + v14764;
    introspect(JAM.policy.p3) {
      Log.write(v8807);
    }
    return;
  }
  function v9(div$$1, node$$8) {
    var url$$3 = "";
    var key$$16;
    var i$$8;
    var char$$1;
    var html$$4 = "";
    var name$$33 = "";
    var maptitle = "";
    var index$$40;
    var v19283 = node$$8.name;
    var v14765 = !v19283;
    var v8810 = !v14765;
    if (v8810) {
      var v19284 = node$$8.name;
      introspect(JAM.policy.p3) {
        var v14766 = v19284.replace(" ", "+")
      }
      var v8808 = '<img class="tipImage" src="http://biocache.ala.org.au/ws/density/map?q=' + v14766;
      url$$3 = v8808 + '"/>';
      maptitle = "<br/>ALA <strong>reported</strong> occurences";
      var v14767 = node$$8.name;
      var v8809 = "<i>" + v14767;
      name$$33 = v8809 + "</i>";
    } else {
      name$$33 = " unnamed clade ";
    }
    name$$33 = name$$33 + "<strong> click</strong> for ";
    var v14768 = node$$8.data;
    var v8812 = v14768.leaf;
    if (v8812) {
      name$$33 = name$$33 + "for linked data";
    } else {
      name$$33 = "Part of " + name$$33;
      var v14769 = node$$8.length;
      var v8811 = v14769 < 30;
      if (v8811) {
        name$$33 = name$$33 + "clade members";
      } else {
        name$$33 = name$$33 + "30 clade members";
      }
    }
    var v8813 = "<h3>" + name$$33;
    name$$33 = v8813 + "</h3>";
    var result$$2 = [];
    var v14770 = st.config;
    var v8819 = v14770.selectedCharacters;
    for (index$$40 in v8819) {
      var v14771 = st.config;
      var v8814 = v14771.selectedCharacters;
      key$$16 = v8814[index$$40];
      var v14772 = node$$8.data;
      var v8815 = v14772.character;
      char$$1 = v8815[key$$16];
      var v8816 = "<strong>" + key$$16;
      html$$4 = v8816 + "</strong>: ";
      var v24010 = typeof char$$1;
      var v19285 = v24010 === "undefined";
      var v24012 = !v19285;
      if (v24012) {
        var v24011 = char$$1.length;
        v19285 = v24011 === 0;
      }
      var v14773 = v19285;
      var v19287 = !v14773;
      if (v19287) {
        var v24013 = char$$1[0];
        var v19286 = typeof v24013;
        v14773 = v19286 === "undefined";
      }
      var v8818 = v14773;
      if (v8818) {
        html$$4 = html$$4 + "&mdash;";
      } else {
        var v19288 = char$$1[0];
        var v14774 = typeof v19288;
        var v8817 = v14774 !== "number";
        if (v8817) {
          introspect(JAM.policy.p3) {
            var v14775 = char$$1.join(",<br/>....")
          }
          html$$4 = html$$4 + v14775;
        } else {
          var v19289 = char$$1[0];
          introspect(JAM.policy.p3) {
            var v14776 = v19289.toFixed(4)
          }
          html$$4 = html$$4 + v14776;
        }
      }
      introspect(JAM.policy.p3) {
        result$$2.push(html$$4);
      }
    }
    introspect(JAM.policy.p3) {
      var v19290 = result$$2.join("<br/>")
    }
    var v14777 = name$$33 + v19290;
    var v8820 = v14777 + maptitle;
    div$$1.innerHTML = v8820 + url$$3;
    return;
  }
  function v8() {
    introspect(JAM.policy.p3) {
      var v8821 = $("a.thumbImage1")
    }
    var v8822 = {iframe:true, width:"80%", height:"80%"};
    introspect(JAM.policy.p3) {
      v8821.colorbox(v8822);
    }
    return;
  }
  function v7(clade) {
    var v8823 = st.config;
    var tmpl = v8823.tmpl;
    var nodeList = [];
    var node$$7;
    var html$$3;
    var split;
    var i$$7 = 0;
    var v19291 = clade.length;
    var v14778 = i$$7 < v19291;
    var v14779 = i$$7 < 30;
    var v8825 = v14778 & v14779;
    for (;v8825;) {
      node$$7 = {};
      var v8824 = clade[i$$7];
      node$$7.name = v8824.name;
      introspect(JAM.policy.p3) {
        nodeList.push(node$$7);
      }
      i$$7++;
      var v19292 = clade.length;
      var v14780 = i$$7 < v19292;
      var v14781 = i$$7 < 30;
      v8825 = v14780 & v14781;
    }
    if (tmpl) {
      introspect(JAM.policy.p3) {
        tmpl = _.template(tmpl);
      }
      var v8826 = {nodeList:nodeList};
      introspect(JAM.policy.p3) {
        html$$3 = tmpl(v8826);
      }
    } else {
    }
    return html$$3;
  }
  function v6(node$$6, eventInfo, e$$6) {
    function v5(elem$$2) {
      var v14782 = elem$$2.data;
      var v8828 = v14782.leaf;
      if (v8828) {
        if (leafs) {
          var v24014 = elem$$2.name;
          var v19293 = "<li>" + v24014;
          var v14783 = v19293 + "</li>";
          leafs = leafs + v14783;
        } else {
          var v14784 = elem$$2.name;
          var v8827 = "<li>" + v14784;
          leafs = v8827 + "</li>";
        }
        introspect(JAM.policy.p3) {
          selectedClade.push(elem$$2);
        }
      }
      return;
    }
    function v4$$1() {
      return;
    }
    var leafs;
    if (node$$6) {
      selectedClade = [];
      introspect(JAM.policy.p3) {
        var expand = $jit.id("expand")
      }
      var v8829 = st.labels;
      var v8830 = node$$6.id;
      introspect(JAM.policy.p3) {
        var pos$$3 = v8829.getLabel(v8830)
      }
      introspect(JAM.policy.p3) {
        var setRoot = $jit.id("setRoot")
      }
      introspect(JAM.policy.p3) {
        var rotate = $jit.id("rotate")
      }
      introspect(JAM.policy.p3) {
        var select = $jit.id("selectClade")
      }
      var v24015 = pos$$3.style;
      var v19294 = v24015.left;
      introspect(JAM.policy.p3) {
        var v14785 = v19294.replace(/px/, "")
      }
      var v8831 = parseInt(v14785, 10);
      var loc = v8831 + 100;
      var v24016 = pos$$3.style;
      var v19295 = v24016.top;
      introspect(JAM.policy.p3) {
        var v14786 = v19295.replace(/px/, "")
      }
      var v8832 = parseInt(v14786, 10);
      var locy = v8832 + 40;
      var v8833 = setRoot.checked;
      if (v8833) {
        var id$$1 = node$$6.id;
        introspect(JAM.policy.p3) {
          st.setRoot(id$$1, "animate");
        }
        st.root = id$$1;
      }
      var v8841 = rotate.checked;
      if (v8841) {
        var v14787 = st.graph;
        var v14788 = st.root;
        introspect(JAM.policy.p3) {
          var v8834 = v14787.getNode(v14788)
        }
        introspect(JAM.policy.p3) {
          st.computePositions(v8834, "start");
        }
        var v24017 = node$$6.data;
        var v19296 = v24017.rotate;
        var v14789 = typeof v19296;
        var v8836 = v14789 === "undefined";
        if (v8836) {
          var v8835 = node$$6.data;
          v8835.rotate = false;
        }
        var v8837 = node$$6.data;
        var v19297 = node$$6.data;
        var v14790 = v19297.rotate;
        v8837.rotate = !v14790;
        var v14791 = st.graph;
        var v14792 = st.root;
        introspect(JAM.policy.p3) {
          var v8838 = v14791.getNode(v14792)
        }
        introspect(JAM.policy.p3) {
          st.computePositions(v8838, "end");
        }
        var v8839 = st.fx;
        var v14793 = ["linear", "node-property:alpha"];
        var v8840 = {modes:v14793, onComplete:v4$$1};
        introspect(JAM.policy.p3) {
          v8839.animate(v8840);
        }
      }
      var v8843 = expand.checked;
      if (v8843) {
        introspect(JAM.policy.p3) {
          st.setCollapsed(node$$6);
        }
        introspect(JAM.policy.p3) {
          var level$$7 = st.nodesExpCol(node$$6)
        }
        if (level$$7) {
          st.zoomIndex = level$$7;
        }
        var v14794 = st.graph;
        var v14795 = st.root;
        introspect(JAM.policy.p3) {
          var v8842 = v14794.getNode(v14795)
        }
        introspect(JAM.policy.p3) {
          st.computePositions(v8842, "");
        }
        introspect(JAM.policy.p3) {
          st.plot();
        }
      }
      var v8849 = select.checked;
      if (v8849) {
        st.clickedNode = node$$6;
        introspect(JAM.policy.p3) {
          node$$6.eachSubgraph(v5);
        }
        var v8844 = popup$$1.style;
        v8844.display = "inline";
        var v8845 = popup$$1.style;
        v8845.top = locy + "px";
        var v8846 = popup$$1.style;
        v8846.left = loc + "px";
        var v8847 = popupText;
        var v14796 = st.config;
        introspect(JAM.policy.p3) {
          var v31252 = v14796.presentClade(selectedClade)
        }
        v8847.innerHTML = v31252;
        var v8848 = st.config;
        introspect(JAM.policy.p3) {
          v8848.onPresentClade();
        }
        introspect(JAM.policy.p3) {
          st.plot();
        }
      }
    }
    return;
  }
  function v3$$1() {
    var v19298 = st.canvas;
    var v14797 = v19298.element;
    var v8850 = v14797.style;
    v8850.cursor = "";
    var v8851 = st.tips;
    introspect(JAM.policy.p3) {
      v8851.hide(true);
    }
    return;
  }
  function v2$$1(node$$5, event$$1, e$$5) {
    var v19299 = st.canvas;
    var v14798 = v19299.element;
    var v8852 = v14798.style;
    v8852.cursor = "pointer";
    var v14799 = st.tips;
    var v8853 = v14799.config;
    var v14800 = st.tips;
    var v8854 = v14800.tip;
    introspect(JAM.policy.p3) {
      v8853.onShow(v8854, node$$5);
    }
    var v8855 = st.tips;
    var v19300 = $jit.util;
    var v14801 = v19300.event;
    introspect(JAM.policy.p3) {
      var v8856 = v14801.getPos(e$$5)
    }
    introspect(JAM.policy.p3) {
      v8855.setTooltipPosition(v8856);
    }
    return;
  }
  function v1$$1(div, node$$4) {
    var url$$2 = "";
    var key$$15;
    var i$$6;
    var char;
    var html$$2 = "";
    var name$$32 = "";
    var index$$39;
    var v14802 = node$$4.data;
    var v8859 = v14802.leaf;
    if (v8859) {
      var v14803 = node$$4.name;
      var v8857 = "<h3>" + v14803;
      name$$32 = v8857 + "</h3>";
      var v24018 = node$$4.name;
      introspect(JAM.policy.p3) {
        var v19301 = v24018.split(/\s+/)
      }
      introspect(JAM.policy.p3) {
        var v14804 = v19301.join("+")
      }
      var v8858 = '<img class="tipImage" src="http://biocache.ala.org.au/ws/density/map?q=' + v14804;
      url$$2 = v8858 + '"/>';
    }
    var result$$1 = [];
    var v14805 = st.config;
    var v8865 = v14805.selectedCharacters;
    for (index$$39 in v8865) {
      var v14806 = st.config;
      var v8860 = v14806.selectedCharacters;
      key$$15 = v8860[index$$39];
      var v14807 = node$$4.data;
      var v8861 = v14807.character;
      char = v8861[key$$15];
      var v8862 = "<strong>" + key$$15;
      html$$2 = v8862 + "</strong>: ";
      var v24019 = typeof char;
      var v19302 = v24019 === "undefined";
      var v24021 = !v19302;
      if (v24021) {
        var v24020 = char.length;
        v19302 = v24020 === 0;
      }
      var v14808 = v19302;
      var v19304 = !v14808;
      if (v19304) {
        var v24022 = char[0];
        var v19303 = typeof v24022;
        v14808 = v19303 === "undefined";
      }
      var v8864 = v14808;
      if (v8864) {
        html$$2 = html$$2 + "&mdash;";
      } else {
        var v19305 = char[0];
        var v14809 = typeof v19305;
        var v8863 = v14809 !== "number";
        if (v8863) {
          introspect(JAM.policy.p3) {
            var v14810 = char.join(",")
          }
          html$$2 = html$$2 + v14810;
        } else {
          var v19306 = char[0];
          introspect(JAM.policy.p3) {
            var v14811 = v19306.toFixed(4)
          }
          html$$2 = html$$2 + v14811;
        }
      }
      introspect(JAM.policy.p3) {
        result$$1.push(html$$2);
      }
    }
    introspect(JAM.policy.p3) {
      var v14812 = result$$1.join("<br/>")
    }
    var v8866 = name$$32 + v14812;
    div.innerHTML = v8866 + url$$2;
    return;
  }
  function search(step$$1) {
    function v0$$1(node$$14) {
      var name$$34 = node$$14.name;
      var pattern$$1 = new RegExp(searchString, "i");
      introspect(JAM.policy.p3) {
        var v8867 = name$$34.match(pattern$$1)
      }
      if (v8867) {
        introspect(JAM.policy.p3) {
          result.push(node$$14);
        }
      }
      return;
    }
    var searchString = searchBtn.value;
    var len;
    var v8868 = st.graph;
    var v8869 = st.root;
    introspect(JAM.policy.p3) {
      var root = v8868.getNode(v8869)
    }
    var v14813 = result.length;
    var v8873 = v14813 > 0;
    if (v8873) {
      len = result.length;
      pos = nextStep(pos, step$$1, len);
      var v8870 = st.labels;
      var v19307 = result;
      var v24023 = -1 * step$$1;
      var v19308 = nextStep(pos, v24023, len);
      var v14814 = v19307[v19308];
      var v8871 = v14814.id;
      introspect(JAM.policy.p3) {
        var prevElem = v8870.getLabel(v8871)
      }
      var v8872 = prevElem.style;
      v8872.backgroundColor = "";
    }
    var v14815 = searchString;
    if (v14815) {
      v14815 = prevSearch !== searchString;
    }
    var v8875 = v14815;
    if (v8875) {
      result = [];
      prevSearch = searchString;
      introspect(JAM.policy.p3) {
        root.eachSubgraph(v0$$1);
      }
      pos = nextStep(undefined, step$$1, len);
    } else {
      var v8874 = searchString === "";
      if (v8874) {
        result = [];
      }
    }
    var v14816 = result.length;
    var v8882 = v14816 > 0;
    if (v8882) {
      var shownNode = result[pos];
      var v14817 = shownNode.exist;
      var v8876 = !v14817;
      if (v8876) {
        root.collapsed = true;
        introspect(JAM.policy.p3) {
          st.nodesExpCol(root);
        }
        introspect(JAM.policy.p3) {
          st.computePositions(root, "");
        }
        introspect(JAM.policy.p3) {
          st.plot();
        }
      }
      var canvas$$1 = st.canvas;
      var oy = canvas$$1.translateOffsetY;
      var xTranslate = 0;
      var yTranslate = -oy;
      var v8877 = st.canvas;
      introspect(JAM.policy.p3) {
        v8877.translate(xTranslate, yTranslate);
      }
      var v8878 = st.labels;
      var v14818 = result[pos];
      var v8879 = v14818.id;
      introspect(JAM.policy.p3) {
        var element$$2 = v8878.getLabel(v8879)
      }
      var v8880 = element$$2.style;
      v8880.backgroundColor = "yellow";
      introspect(JAM.policy.p3) {
        var v8881 = jQuery(element$$2)
      }
      introspect(JAM.policy.p3) {
        v8881.click();
      }
    }
    return;
  }
  function clickHandler() {
    var JSCompiler_object_inline_x_80;
    var JSCompiler_object_inline_y_81;
    var v8884 = this.id;
    switch(v8884) {
      case "north":
        JSCompiler_object_inline_x_80 = 0;
        JSCompiler_object_inline_y_81 = 10;
        true;
        break;
      case "west":
        JSCompiler_object_inline_x_80 = -10;
        JSCompiler_object_inline_y_81 = 0;
        true;
        break;
      case "east":
        JSCompiler_object_inline_x_80 = 10;
        JSCompiler_object_inline_y_81 = 0;
        true;
        break;
      case "south":
        JSCompiler_object_inline_x_80 = 0;
        JSCompiler_object_inline_y_81 = -10;
        true;
    }
    var canvas = st.canvas;
    introspect(JAM.policy.p3) {
      canvas.translate(JSCompiler_object_inline_x_80, JSCompiler_object_inline_y_81);
    }
    return;
  }
  function zoomHandler() {
    var scroll;
    var v8885 = this.id;
    switch(v8885) {
      case "zoomIN":
        scroll = +1;
        break;
      case "zoomOUT":
        scroll = -1;
    }
    introspect(JAM.policy.p3) {
      st.zoom(scroll);
    }
    return;
  }
  function nextStep(pos$$2, step, length$$11) {
    var v14834 = typeof pos$$2;
    var v8887 = v14834 === "undefined";
    if (v8887) {
      var v8886;
      var v14835 = step > 0;
      if (v14835) {
        v8886 = 0;
      } else {
        v8886 = length$$11 - 1;
      }
      return v8886;
    }
    var v8888 = pos$$2 + step;
    var i$$4 = v8888 % length$$11;
    var v8889;
    var v14836 = i$$4 < 0;
    if (v14836) {
      v8889 = length$$11 + i$$4;
    } else {
      v8889 = i$$4;
    }
    return v8889;
  }
  function keyHandler(e$$4) {
    var ENTER = 13;
    var shift = e$$4.shiftKey;
    var v14837 = shift;
    if (v14837) {
      var v20830 = e$$4.keyCode;
      v14837 = v20830 === ENTER;
    }
    var v8893 = v14837;
    if (v8893) {
      search(-1);
      var v8890 = e$$4.preventDefault;
      if (v8890) {
        introspect(JAM.policy.p3) {
          e$$4.preventDefault();
        }
      }
      return false;
    } else {
      var v14838 = e$$4.keyCode;
      var v8892 = v14838 === ENTER;
      if (v8892) {
        search(1);
        var v8891 = e$$4.preventDefault;
        if (v8891) {
          introspect(JAM.policy.p3) {
            e$$4.preventDefault();
          }
        }
        return false;
      }
    }
    return;
  }
  var v19309 = [.6837124164];
  var v19310 = [17.1466667213];
  var v19311 = [16.0416993341];
  var v19312 = [1039.2849673203];
  var v19313 = [18998.3660130718];
  var v19314 = [85.9191176471];
  var v19315 = [.8894836614];
  var v19316 = [25.3393464394];
  var v19317 = [157.4640522876];
  var v19318 = [.4932352942];
  var v19319 = [.3231372576];
  var v19320 = [9.081829987];
  var v19321 = [28.0827450671];
  var v19322 = [11.3729411867];
  var v19323 = [.8600326849];
  var v19324 = [.8941764697];
  var v19325 = [.3734836587];
  var v19326 = [.4585424874];
  var v19327 = [10.5782352927];
  var v19328 = [15.4166012935];
  var v19329 = [20.968431512];
  var v19330 = [15.8052941168];
  var v19331 = [4.1385621225];
  var v19332 = [33.0339869281];
  var v19333 = [.0438125788];
  var v19334 = [255.5509803922];
  var v19335 = [5.322875817];
  var v19336 = [143.0516339869];
  var v19337 = [39.0823529412];
  var v19338 = [292.9124183007];
  var v19339 = [36.9261437908];
  var v19340 = [423.4202614379];
  var v19341 = [10.6616340562];
  var v19342 = [17.4772549498];
  var v19343 = [33.0607843137];
  var v19344 = [22.9215031792];
  var v19345 = [15.7764050234];
  var v19346 = [64.9002548406];
  var v19347 = [1.964869281];
  var v19348 = [4.9215686275];
  var v19349 = [4.1215686275];
  var v19350 = [5.8725490196];
  var v19351 = [4.7078431373];
  var v19352 = [19.0273797546];
  var v19353 = [64840.3594771241];
  var v19354 = [4.4690577426];
  var v19355 = [.9153594758];
  var v19356 = [107.6281045752];
  var v19357 = [23.24398698];
  var v19358 = [1.4140000156];
  var v19359 = [292.831372549];
  var v19360 = [5.5785338397];
  var v19361 = [8.4109477124];
  var v19362 = [44557.6633986928];
  var v19363 = [1E-7];
  var v19364 = [19];
  var v19365 = [21.5];
  var v19366 = [1111];
  var v19367 = [18E3];
  var v19368 = [100];
  var v19369 = [1];
  var v19370 = [25.5];
  var v19371 = [200];
  var v19372 = [0];
  var v19373 = [14];
  var v19374 = [30];
  var v19375 = [9];
  var v19376 = [0];
  var v19377 = [.5];
  var v19378 = [0];
  var v19379 = [0];
  var v19380 = [17];
  var v19381 = [18.5];
  var v19382 = [24.5];
  var v19383 = [24.5];
  var v19384 = [11];
  var v19385 = [57];
  var v19386 = [82];
  var v19387 = [0];
  var v19388 = [61];
  var v19389 = [99.5];
  var v19390 = [574.5];
  var v19391 = [72.5];
  var v19392 = [716];
  var v19393 = [15.5];
  var v19394 = [19];
  var v19395 = [18.5];
  var v19396 = [22];
  var v19397 = [19];
  var v19398 = [125];
  var v19399 = [0];
  var v19400 = [4];
  var v19401 = [8];
  var v19402 = [7];
  var v19403 = [4];
  var v19404 = [11];
  var v19405 = [63E3];
  var v19406 = [6];
  var v19407 = [1];
  var v19408 = [177];
  var v19409 = [18];
  var v19410 = [1];
  var v19411 = [295.5];
  var v19412 = [5.5];
  var v19413 = [0];
  var v14819 = {"modelled annual mean moisture index":v19309, "modelled annual mean rad":v19310, "modelled annual mean temp":v19311, "modelled annual precipitation":v19312, "modelled clpk 1 1000 g clay":v19313, "modelled erosional":v19314, "modelled highest period moisture index":v19315, "modelled highest period radiation":v19316, "modelled hydraulic conductivity ksat":v19317, "modelled isothermality":v19318, "modelled lowest period moisture index":v19319, "modelled lowest period radiation":v19320, 
  "modelled max temp warmest period":v19321, "modelled mean diurnal range":v19322, "modelled mean moisture index coldest quarter":v19323, "modelled mean moisture index highest quarter MI":v19324, "modelled mean moisture index lowest quater MI":v19325, "modelled mean moisture index warmest quarter":v19326, "modelled mean temp coldest quarter":v19327, "modelled mean temp driest quater":v19328, "modelled mean temp warmer quarter":v19329, "modelled mean temp wettest quarter":v19330, "modelled min temp coldest period":v19331, 
  "modelled moisture index seasonality":v19332, "modelled phos":v19333, "modelled precipitation coldets quarter":v19334, "modelled precipitation driest period":v19335, "modelled precipitation driest quarter":v19336, "modelled precipitation seasonality":v19337, "modelled precipitation warmest quarter":v19338, "modelled precipitation wettest period":v19339, "modelled precipitation wettest quarter":v19340, "modelled radiation coldest quarter":v19341, "modelled radiation driest quarter":v19342, "modelled radiation seasonality":v19343, 
  "modelled radiation warmest quarter":v19344, "modelled radiation wettest quarter":v19345, "modelled relief":v19346, "modelled ridgetopflat":v19347, "modelled rockalklty":v19348, "modelled rockgrainsz":v19349, "modelled rockhardness":v19350, "modelled rocknutrnt":v19351, "modelled roughness":v19352, "modelled sapk 1 1000 g sand":v19353, "modelled slope":v19354, "modelled soildepth":v19355, "modelled solpawhc":v19356, "modelled temperature annual range":v19357, "modelled temperature seasonality":v19358, 
  "modelled thpk 1 1000 g thickness":v19359, "modelled twi":v19360, "modelled valleybottom":v19361, "modelled whpk 1 1000 g water cap":v19362, "raw annual mean moisture index":v19363, "raw annual mean rad":v19364, "raw annual mean temp":v19365, "raw annual precipitation":v19366, "raw clpk 1 1000 g clay":v19367, "raw erosional":v19368, "raw highest period moisture index":v19369, "raw highest period radiation":v19370, "raw hydraulic conductivity ksat":v19371, "raw lowest period moisture index":v19372, 
  "raw lowest period radiation":v19373, "raw max temp warmest period":v19374, "raw mean diurnal range":v19375, "raw mean moisture index coldest quarter":v19376, "raw mean moisture index highest quarter MI":v19377, "raw mean moisture index lowest quater MI":v19378, "raw mean moisture index warmest quarter":v19379, "raw mean temp coldest quarter":v19380, "raw mean temp driest quater":v19381, "raw mean temp warmer quarter":v19382, "raw mean temp wettest quarter":v19383, "raw min temp coldest period":v19384, 
  "raw moisture index seasonality":v19385, "raw precipitation coldets quarter":v19386, "raw precipitation driest period":v19387, "raw precipitation driest quarter":v19388, "raw precipitation seasonality":v19389, "raw precipitation warmest quarter":v19390, "raw precipitation wettest period":v19391, "raw precipitation wettest quarter":v19392, "raw radiation coldest quarter":v19393, "raw radiation driest quarter":v19394, "raw radiation seasonality":v19395, "raw radiation warmest quarter":v19396, "raw radiation wettest quarter":v19397, 
  "raw relief":v19398, "raw ridgetopflat":v19399, "raw rockalklty":v19400, "raw rockgrainsz":v19401, "raw rockhardness":v19402, "raw rocknutrnt":v19403, "raw roughness":v19404, "raw sapk 1 1000 g sand":v19405, "raw slope":v19406, "raw soildepth":v19407, "raw solpawhc":v19408, "raw temperature annual range":v19409, "raw temperature seasonality":v19410, "raw thpk 1 1000 g thickness":v19411, "raw twi":v19412, "raw valleybottom":v19413};
  var v19414 = [.6050000191];
  var v19415 = [19.6500005722];
  var v19416 = [21.75];
  var v19417 = [1111];
  var v19418 = [18E3];
  var v19419 = [100];
  var v19420 = [1];
  var v19421 = [26.1500005722];
  var v19422 = [200];
  var v19423 = [.5150000155];
  var v19424 = [.1199999973];
  var v19425 = [14.3499999046];
  var v19426 = [30.1999998093];
  var v19427 = [9.6500000954];
  var v19428 = [.5400000066];
  var v19429 = [.9950000048];
  var v19430 = [.1750000007];
  var v19431 = [.7150000036];
  var v19432 = [17.4500007629];
  var v19433 = [18.8999996185];
  var v19434 = [25.1499996185];
  var v19435 = [24.8500003815];
  var v19436 = [11.5999999046];
  var v19437 = [57];
  var v19438 = [.0198370004];
  var v19439 = [82];
  var v19440 = [0];
  var v19441 = [61];
  var v19442 = [99.5];
  var v19443 = [574.5];
  var v19444 = [72.5];
  var v19445 = [716];
  var v19446 = [15.9499998093];
  var v19447 = [19.1999998093];
  var v19448 = [18.5];
  var v19449 = [22.3999996185];
  var v19450 = [19.6000003815];
  var v19451 = [125.4036026001];
  var v19452 = [0];
  var v19453 = [4];
  var v19454 = [8];
  var v19455 = [7];
  var v19456 = [4];
  var v19457 = [11.5456476212];
  var v19458 = [63E3];
  var v19459 = [6.512172699];
  var v19460 = [1.25];
  var v19461 = [177];
  var v19462 = [18.6500005722];
  var v19463 = [1.0499999523];
  var v19464 = [295.5];
  var v19465 = [5.6324121952];
  var v19466 = [0];
  var v19467 = [5E4];
  var v19468 = [0];
  var v19469 = [19];
  var v19470 = [21.75];
  var v19471 = [1107];
  var v19472 = [19E3];
  var v19473 = [100];
  var v19474 = [1];
  var v19475 = [25.25];
  var v19476 = [250];
  var v19477 = [0];
  var v19478 = [14];
  var v19479 = [30];
  var v19480 = [8.5];
  var v19481 = [0];
  var v19482 = [.25];
  var v19483 = [0];
  var v19484 = [0];
  var v19485 = [17.5];
  var v19486 = [18.75];
  var v19487 = [24.75];
  var v19488 = [24.75];
  var v19489 = [11.5];
  var v19490 = [61.5];
  var v19491 = [74.5];
  var v19492 = [0];
  var v19493 = [55];
  var v19494 = [103.75];
  var v19495 = [608.75];
  var v19496 = [75.75];
  var v19497 = [731.5];
  var v19498 = [15.25];
  var v19499 = [19];
  var v19500 = [18.25];
  var v19501 = [21.5];
  var v19502 = [19];
  var v19503 = [162];
  var v19504 = [0];
  var v19505 = [4];
  var v19506 = [8];
  var v19507 = [7];
  var v19508 = [4];
  var v19509 = [15.5];
  var v19510 = [61500];
  var v19511 = [7.5];
  var v19512 = [1];
  var v19513 = [183];
  var v19514 = [17.5];
  var v19515 = [1];
  var v19516 = [285.25];
  var v19517 = [4.75];
  var v19518 = [0];
  var v14820 = {"modelled annual mean moisture index":v19414, "modelled annual mean rad":v19415, "modelled annual mean temp":v19416, "modelled annual precipitation":v19417, "modelled clpk 1 1000 g clay":v19418, "modelled erosional":v19419, "modelled highest period moisture index":v19420, "modelled highest period radiation":v19421, "modelled hydraulic conductivity ksat":v19422, "modelled isothermality":v19423, "modelled lowest period moisture index":v19424, "modelled lowest period radiation":v19425, 
  "modelled max temp warmest period":v19426, "modelled mean diurnal range":v19427, "modelled mean moisture index coldest quarter":v19428, "modelled mean moisture index highest quarter MI":v19429, "modelled mean moisture index lowest quater MI":v19430, "modelled mean moisture index warmest quarter":v19431, "modelled mean temp coldest quarter":v19432, "modelled mean temp driest quater":v19433, "modelled mean temp warmer quarter":v19434, "modelled mean temp wettest quarter":v19435, "modelled min temp coldest period":v19436, 
  "modelled moisture index seasonality":v19437, "modelled phos":v19438, "modelled precipitation coldets quarter":v19439, "modelled precipitation driest period":v19440, "modelled precipitation driest quarter":v19441, "modelled precipitation seasonality":v19442, "modelled precipitation warmest quarter":v19443, "modelled precipitation wettest period":v19444, "modelled precipitation wettest quarter":v19445, "modelled radiation coldest quarter":v19446, "modelled radiation driest quarter":v19447, "modelled radiation seasonality":v19448, 
  "modelled radiation warmest quarter":v19449, "modelled radiation wettest quarter":v19450, "modelled relief":v19451, "modelled ridgetopflat":v19452, "modelled rockalklty":v19453, "modelled rockgrainsz":v19454, "modelled rockhardness":v19455, "modelled rocknutrnt":v19456, "modelled roughness":v19457, "modelled sapk 1 1000 g sand":v19458, "modelled slope":v19459, "modelled soildepth":v19460, "modelled solpawhc":v19461, "modelled temperature annual range":v19462, "modelled temperature seasonality":v19463, 
  "modelled thpk 1 1000 g thickness":v19464, "modelled twi":v19465, "modelled valleybottom":v19466, "modelled whpk 1 1000 g water cap":v19467, "raw annual mean moisture index":v19468, "raw annual mean rad":v19469, "raw annual mean temp":v19470, "raw annual precipitation":v19471, "raw clpk 1 1000 g clay":v19472, "raw erosional":v19473, "raw highest period moisture index":v19474, "raw highest period radiation":v19475, "raw hydraulic conductivity ksat":v19476, "raw lowest period moisture index":v19477, 
  "raw lowest period radiation":v19478, "raw max temp warmest period":v19479, "raw mean diurnal range":v19480, "raw mean moisture index coldest quarter":v19481, "raw mean moisture index highest quarter MI":v19482, "raw mean moisture index lowest quater MI":v19483, "raw mean moisture index warmest quarter":v19484, "raw mean temp coldest quarter":v19485, "raw mean temp driest quater":v19486, "raw mean temp warmer quarter":v19487, "raw mean temp wettest quarter":v19488, "raw min temp coldest period":v19489, 
  "raw moisture index seasonality":v19490, "raw precipitation coldets quarter":v19491, "raw precipitation driest period":v19492, "raw precipitation driest quarter":v19493, "raw precipitation seasonality":v19494, "raw precipitation warmest quarter":v19495, "raw precipitation wettest period":v19496, "raw precipitation wettest quarter":v19497, "raw radiation coldest quarter":v19498, "raw radiation driest quarter":v19499, "raw radiation seasonality":v19500, "raw radiation warmest quarter":v19501, "raw radiation wettest quarter":v19502, 
  "raw relief":v19503, "raw ridgetopflat":v19504, "raw rockalklty":v19505, "raw rockgrainsz":v19506, "raw rockhardness":v19507, "raw rocknutrnt":v19508, "raw roughness":v19509, "raw sapk 1 1000 g sand":v19510, "raw slope":v19511, "raw soildepth":v19512, "raw solpawhc":v19513, "raw temperature annual range":v19514, "raw temperature seasonality":v19515, "raw thpk 1 1000 g thickness":v19516, "raw twi":v19517, "raw valleybottom":v19518};
  var v19519 = [.9200000167];
  var v19520 = [16.8999996185];
  var v19521 = [19.3999996185];
  var v19522 = [1778];
  var v19523 = [14E3];
  var v19524 = [100];
  var v19525 = [1];
  var v19526 = [22.8999996185];
  var v19527 = [300];
  var v19528 = [.4900000095];
  var v19529 = [.7300000191];
  var v19530 = [10.8000001907];
  var v19531 = [27.7999992371];
  var v19532 = [9.5];
  var v19533 = [1];
  var v19534 = [1];
  var v19535 = [.75];
  var v19536 = [.9200000167];
  var v19537 = [14.6000003815];
  var v19538 = [16.1000003815];
  var v19539 = [23.5];
  var v19540 = [23.1000003815];
  var v19541 = [8.1999998093];
  var v19542 = [12];
  var v19543 = [.0327499993];
  var v19544 = [258];
  var v19545 = [11];
  var v19546 = [211];
  var v19547 = [46];
  var v19548 = [670];
  var v19549 = [66];
  var v19550 = [730];
  var v19551 = [12.8999996185];
  var v19552 = [16.2999992371];
  var v19553 = [24];
  var v19554 = [20.1000003815];
  var v19555 = [18.2999992371];
  var v19556 = [178.5762023926];
  var v19557 = [0];
  var v19558 = [5];
  var v19559 = [3];
  var v19560 = [4];
  var v19561 = [4];
  var v19562 = [72.862159729];
  var v19563 = [69E3];
  var v19564 = [10.0389699936];
  var v19565 = [1];
  var v19566 = [169];
  var v19567 = [19.5];
  var v19568 = [1.2000000477];
  var v19569 = [599];
  var v19570 = [2.5513501167];
  var v19571 = [0];
  var v19572 = [117E3];
  var v19573 = [0];
  var v19574 = [16];
  var v19575 = [19];
  var v19576 = [1778];
  var v19577 = [14E3];
  var v19578 = [100];
  var v19579 = [1];
  var v19580 = [22];
  var v19581 = [300];
  var v19582 = [0];
  var v19583 = [10];
  var v19584 = [27];
  var v19585 = [9];
  var v19586 = [1];
  var v19587 = [1];
  var v19588 = [0];
  var v19589 = [0];
  var v19590 = [14];
  var v19591 = [16];
  var v19592 = [23];
  var v19593 = [23];
  var v19594 = [8];
  var v19595 = [12];
  var v19596 = [258];
  var v19597 = [11];
  var v19598 = [211];
  var v19599 = [46];
  var v19600 = [670];
  var v19601 = [66];
  var v19602 = [730];
  var v19603 = [12];
  var v19604 = [16];
  var v19605 = [24];
  var v19606 = [20];
  var v19607 = [18];
  var v19608 = [178];
  var v19609 = [0];
  var v19610 = [5];
  var v19611 = [3];
  var v19612 = [4];
  var v19613 = [4];
  var v19614 = [72];
  var v19615 = [69E3];
  var v19616 = [10];
  var v19617 = [1];
  var v19618 = [169];
  var v19619 = [19];
  var v19620 = [1];
  var v19621 = [599];
  var v19622 = [2];
  var v19623 = [0];
  var v14821 = {"modelled annual mean moisture index":v19519, "modelled annual mean rad":v19520, "modelled annual mean temp":v19521, "modelled annual precipitation":v19522, "modelled clpk 1 1000 g clay":v19523, "modelled erosional":v19524, "modelled highest period moisture index":v19525, "modelled highest period radiation":v19526, "modelled hydraulic conductivity ksat":v19527, "modelled isothermality":v19528, "modelled lowest period moisture index":v19529, "modelled lowest period radiation":v19530, 
  "modelled max temp warmest period":v19531, "modelled mean diurnal range":v19532, "modelled mean moisture index coldest quarter":v19533, "modelled mean moisture index highest quarter MI":v19534, "modelled mean moisture index lowest quater MI":v19535, "modelled mean moisture index warmest quarter":v19536, "modelled mean temp coldest quarter":v19537, "modelled mean temp driest quater":v19538, "modelled mean temp warmer quarter":v19539, "modelled mean temp wettest quarter":v19540, "modelled min temp coldest period":v19541, 
  "modelled moisture index seasonality":v19542, "modelled phos":v19543, "modelled precipitation coldets quarter":v19544, "modelled precipitation driest period":v19545, "modelled precipitation driest quarter":v19546, "modelled precipitation seasonality":v19547, "modelled precipitation warmest quarter":v19548, "modelled precipitation wettest period":v19549, "modelled precipitation wettest quarter":v19550, "modelled radiation coldest quarter":v19551, "modelled radiation driest quarter":v19552, "modelled radiation seasonality":v19553, 
  "modelled radiation warmest quarter":v19554, "modelled radiation wettest quarter":v19555, "modelled relief":v19556, "modelled ridgetopflat":v19557, "modelled rockalklty":v19558, "modelled rockgrainsz":v19559, "modelled rockhardness":v19560, "modelled rocknutrnt":v19561, "modelled roughness":v19562, "modelled sapk 1 1000 g sand":v19563, "modelled slope":v19564, "modelled soildepth":v19565, "modelled solpawhc":v19566, "modelled temperature annual range":v19567, "modelled temperature seasonality":v19568, 
  "modelled thpk 1 1000 g thickness":v19569, "modelled twi":v19570, "modelled valleybottom":v19571, "modelled whpk 1 1000 g water cap":v19572, "raw annual mean moisture index":v19573, "raw annual mean rad":v19574, "raw annual mean temp":v19575, "raw annual precipitation":v19576, "raw clpk 1 1000 g clay":v19577, "raw erosional":v19578, "raw highest period moisture index":v19579, "raw highest period radiation":v19580, "raw hydraulic conductivity ksat":v19581, "raw lowest period moisture index":v19582, 
  "raw lowest period radiation":v19583, "raw max temp warmest period":v19584, "raw mean diurnal range":v19585, "raw mean moisture index coldest quarter":v19586, "raw mean moisture index highest quarter MI":v19587, "raw mean moisture index lowest quater MI":v19588, "raw mean moisture index warmest quarter":v19589, "raw mean temp coldest quarter":v19590, "raw mean temp driest quater":v19591, "raw mean temp warmer quarter":v19592, "raw mean temp wettest quarter":v19593, "raw min temp coldest period":v19594, 
  "raw moisture index seasonality":v19595, "raw precipitation coldets quarter":v19596, "raw precipitation driest period":v19597, "raw precipitation driest quarter":v19598, "raw precipitation seasonality":v19599, "raw precipitation warmest quarter":v19600, "raw precipitation wettest period":v19601, "raw precipitation wettest quarter":v19602, "raw radiation coldest quarter":v19603, "raw radiation driest quarter":v19604, "raw radiation seasonality":v19605, "raw radiation warmest quarter":v19606, "raw radiation wettest quarter":v19607, 
  "raw relief":v19608, "raw ridgetopflat":v19609, "raw rockalklty":v19610, "raw rockgrainsz":v19611, "raw rockhardness":v19612, "raw rocknutrnt":v19613, "raw roughness":v19614, "raw sapk 1 1000 g sand":v19615, "raw slope":v19616, "raw soildepth":v19617, "raw solpawhc":v19618, "raw temperature annual range":v19619, "raw temperature seasonality":v19620, "raw thpk 1 1000 g thickness":v19621, "raw twi":v19622, "raw valleybottom":v19623};
  var v19624 = [.8323181818];
  var v19625 = [17.9524242387];
  var v19626 = [19.2898482727];
  var v19627 = [1888.3636363636];
  var v19628 = [25214.7727272727];
  var v19629 = [92.8787878788];
  var v19630 = [.998939395];
  var v19631 = [24.5178788503];
  var v19632 = [205.6212121212];
  var v19633 = [.5086363656];
  var v19634 = [.4447727201];
  var v19635 = [12.1872727221];
  var v19636 = [28.0525757327];
  var v19637 = [9.485757533];
  var v19638 = [.8951666693];
  var v19639 = [.9978787867];
  var v19640 = [.5378636367];
  var v19641 = [.8636969721];
  var v19642 = [14.951212141];
  var v19643 = [16.7531818144];
  var v19644 = [22.9656060132];
  var v19645 = [22.5318182165];
  var v19646 = [9.4287879063];
  var v19647 = [25.9621212121];
  var v19648 = [.0453631317];
  var v19649 = [235.6090909091];
  var v19650 = [6.7242424242];
  var v19651 = [167.2409090909];
  var v19652 = [68.203030303];
  var v19653 = [790.2136363636];
  var v19654 = [88.2606060606];
  var v19655 = [970.5196969697];
  var v19656 = [14.1262121605];
  var v19657 = [17.7987878742];
  var v19658 = [21.6636363636];
  var v19659 = [20.8286361521];
  var v19660 = [18.6671213323];
  var v19661 = [151.1616860035];
  var v19662 = [0];
  var v19663 = [4.7151515152];
  var v19664 = [5.5742424242];
  var v19665 = [6.2560606061];
  var v19666 = [4.5742424242];
  var v19667 = [14.6029429806];
  var v19668 = [54667.803030303];
  var v19669 = [8.4508264353];
  var v19670 = [1.1122727402];
  var v19671 = [155.3090909091];
  var v19672 = [18.6489395503];
  var v19673 = [1.0938939283];
  var v19674 = [301.3257575758];
  var v19675 = [5.6370893103];
  var v19676 = [7.1212121212];
  var v19677 = [51557.1969696969];
  var v19678 = [0];
  var v19679 = [17.6111111111];
  var v19680 = [18.5];
  var v19681 = [1925.8333333333];
  var v19682 = [26833.3333333333];
  var v19683 = [94.4444444444];
  var v19684 = [.9444444444];
  var v19685 = [24.1111111111];
  var v19686 = [196.1111111111];
  var v19687 = [0];
  var v19688 = [11.8333333333];
  var v19689 = [27.4444444444];
  var v19690 = [9.2777777778];
  var v19691 = [.3888888889];
  var v19692 = [.9444444444];
  var v19693 = [0];
  var v19694 = [.0555555556];
  var v19695 = [14.1111111111];
  var v19696 = [15.8888888889];
  var v19697 = [22.1666666667];
  var v19698 = [21.7222222222];
  var v19699 = [8.5555555556];
  var v19700 = [24.3333333333];
  var v19701 = [238.8888888889];
  var v19702 = [6.5];
  var v19703 = [169.1666666667];
  var v19704 = [69.4444444444];
  var v19705 = [812.7222222222];
  var v19706 = [91.2777777778];
  var v19707 = [998.7222222222];
  var v19708 = [13.6666666667];
  var v19709 = [17.1666666667];
  var v19710 = [21.3333333333];
  var v19711 = [20.3333333333];
  var v19712 = [18.2777777778];
  var v19713 = [163.1111111111];
  var v19714 = [0];
  var v19715 = [4.3888888889];
  var v19716 = [5.5];
  var v19717 = [6.0555555556];
  var v19718 = [4.4444444444];
  var v19719 = [11.8888888889];
  var v19720 = [52583.3333333333];
  var v19721 = [8.5];
  var v19722 = [.8333333333];
  var v19723 = [156.6666666667];
  var v19724 = [18.6111111111];
  var v19725 = [.6111111111];
  var v19726 = [272.0555555556];
  var v19727 = [5.0555555556];
  var v19728 = [5.5555555556];
  var v14822 = {"modelled annual mean moisture index":v19624, "modelled annual mean rad":v19625, "modelled annual mean temp":v19626, "modelled annual precipitation":v19627, "modelled clpk 1 1000 g clay":v19628, "modelled erosional":v19629, "modelled highest period moisture index":v19630, "modelled highest period radiation":v19631, "modelled hydraulic conductivity ksat":v19632, "modelled isothermality":v19633, "modelled lowest period moisture index":v19634, "modelled lowest period radiation":v19635, 
  "modelled max temp warmest period":v19636, "modelled mean diurnal range":v19637, "modelled mean moisture index coldest quarter":v19638, "modelled mean moisture index highest quarter MI":v19639, "modelled mean moisture index lowest quater MI":v19640, "modelled mean moisture index warmest quarter":v19641, "modelled mean temp coldest quarter":v19642, "modelled mean temp driest quater":v19643, "modelled mean temp warmer quarter":v19644, "modelled mean temp wettest quarter":v19645, "modelled min temp coldest period":v19646, 
  "modelled moisture index seasonality":v19647, "modelled phos":v19648, "modelled precipitation coldets quarter":v19649, "modelled precipitation driest period":v19650, "modelled precipitation driest quarter":v19651, "modelled precipitation seasonality":v19652, "modelled precipitation warmest quarter":v19653, "modelled precipitation wettest period":v19654, "modelled precipitation wettest quarter":v19655, "modelled radiation coldest quarter":v19656, "modelled radiation driest quarter":v19657, "modelled radiation seasonality":v19658, 
  "modelled radiation warmest quarter":v19659, "modelled radiation wettest quarter":v19660, "modelled relief":v19661, "modelled ridgetopflat":v19662, "modelled rockalklty":v19663, "modelled rockgrainsz":v19664, "modelled rockhardness":v19665, "modelled rocknutrnt":v19666, "modelled roughness":v19667, "modelled sapk 1 1000 g sand":v19668, "modelled slope":v19669, "modelled soildepth":v19670, "modelled solpawhc":v19671, "modelled temperature annual range":v19672, "modelled temperature seasonality":v19673, 
  "modelled thpk 1 1000 g thickness":v19674, "modelled twi":v19675, "modelled valleybottom":v19676, "modelled whpk 1 1000 g water cap":v19677, "raw annual mean moisture index":v19678, "raw annual mean rad":v19679, "raw annual mean temp":v19680, "raw annual precipitation":v19681, "raw clpk 1 1000 g clay":v19682, "raw erosional":v19683, "raw highest period moisture index":v19684, "raw highest period radiation":v19685, "raw hydraulic conductivity ksat":v19686, "raw lowest period moisture index":v19687, 
  "raw lowest period radiation":v19688, "raw max temp warmest period":v19689, "raw mean diurnal range":v19690, "raw mean moisture index coldest quarter":v19691, "raw mean moisture index highest quarter MI":v19692, "raw mean moisture index lowest quater MI":v19693, "raw mean moisture index warmest quarter":v19694, "raw mean temp coldest quarter":v19695, "raw mean temp driest quater":v19696, "raw mean temp warmer quarter":v19697, "raw mean temp wettest quarter":v19698, "raw min temp coldest period":v19699, 
  "raw moisture index seasonality":v19700, "raw precipitation coldets quarter":v19701, "raw precipitation driest period":v19702, "raw precipitation driest quarter":v19703, "raw precipitation seasonality":v19704, "raw precipitation warmest quarter":v19705, "raw precipitation wettest period":v19706, "raw precipitation wettest quarter":v19707, "raw radiation coldest quarter":v19708, "raw radiation driest quarter":v19709, "raw radiation seasonality":v19710, "raw radiation warmest quarter":v19711, "raw radiation wettest quarter":v19712, 
  "raw relief":v19713, "raw ridgetopflat":v19714, "raw rockalklty":v19715, "raw rockgrainsz":v19716, "raw rockhardness":v19717, "raw rocknutrnt":v19718, "raw roughness":v19719, "raw sapk 1 1000 g sand":v19720, "raw slope":v19721, "raw soildepth":v19722, "raw solpawhc":v19723, "raw temperature annual range":v19724, "raw temperature seasonality":v19725, "raw thpk 1 1000 g thickness":v19726, "raw twi":v19727, "raw valleybottom":v19728};
  var v19729 = [.9350000024];
  var v19730 = [18.0500001907];
  var v19731 = [20.1999998093];
  var v19732 = [2948];
  var v19733 = [42E3];
  var v19734 = [100];
  var v19735 = [1];
  var v19736 = [25.0500001907];
  var v19737 = [300];
  var v19738 = [.5400000215];
  var v19739 = [.5549999774];
  var v19740 = [12.4000000954];
  var v19741 = [28.6499996185];
  var v19742 = [9.4500002861];
  var v19743 = [1];
  var v19744 = [1];
  var v19745 = [.7350000143];
  var v19746 = [.9200000167];
  var v19747 = [16.4500007629];
  var v19748 = [19.4000005722];
  var v19749 = [23.4000005722];
  var v19750 = [22.6499996185];
  var v19751 = [11.3000001907];
  var v19752 = [14];
  var v19753 = [.0769999996];
  var v19754 = [428.5];
  var v19755 = [12.5];
  var v19756 = [247];
  var v19757 = [68.5];
  var v19758 = [1054];
  var v19759 = [131];
  var v19760 = [1492];
  var v19761 = [14.75];
  var v19762 = [19.6499996185];
  var v19763 = [20];
  var v19764 = [20.75];
  var v19765 = [18.0500001907];
  var v19766 = [93.9310970306];
  var v19767 = [0];
  var v19768 = [6];
  var v19769 = [4];
  var v19770 = [7];
  var v19771 = [6];
  var v19772 = [4.0198574662];
  var v19773 = [44E3];
  var v19774 = [5.4142469168];
  var v19775 = [1.1000000238];
  var v19776 = [171];
  var v19777 = [17.4000005722];
  var v19778 = [.9499999881];
  var v19779 = [150];
  var v19780 = [5.4885058403];
  var v19781 = [0];
  var v19782 = [33E3];
  var v19783 = [0];
  var v19784 = [18];
  var v19785 = [20];
  var v19786 = [3017.6666666667];
  var v19787 = [42E3];
  var v19788 = [100];
  var v19789 = [1];
  var v19790 = [25];
  var v19791 = [300];
  var v19792 = [0];
  var v19793 = [12];
  var v19794 = [28];
  var v19795 = [9];
  var v19796 = [1];
  var v19797 = [1];
  var v19798 = [0];
  var v19799 = [0];
  var v19800 = [16];
  var v19801 = [19];
  var v19802 = [23];
  var v19803 = [22];
  var v19804 = [11];
  var v19805 = [13.6666666667];
  var v19806 = [437];
  var v19807 = [12.6666666667];
  var v19808 = [252.3333333333];
  var v19809 = [68.6666666667];
  var v19810 = [1077.3333333333];
  var v19811 = [134.3333333333];
  var v19812 = [1531];
  var v19813 = [14];
  var v19814 = [19];
  var v19815 = [20];
  var v19816 = [20];
  var v19817 = [18];
  var v19818 = [113];
  var v19819 = [0];
  var v19820 = [6];
  var v19821 = [4];
  var v19822 = [7];
  var v19823 = [6];
  var v19824 = [4.6666666667];
  var v19825 = [44E3];
  var v19826 = [6.3333333333];
  var v19827 = [1];
  var v19828 = [165.6666666667];
  var v19829 = [17];
  var v19830 = [0];
  var v19831 = [150];
  var v19832 = [5.3333333333];
  var v19833 = [0];
  var v14823 = {"modelled annual mean moisture index":v19729, "modelled annual mean rad":v19730, "modelled annual mean temp":v19731, "modelled annual precipitation":v19732, "modelled clpk 1 1000 g clay":v19733, "modelled erosional":v19734, "modelled highest period moisture index":v19735, "modelled highest period radiation":v19736, "modelled hydraulic conductivity ksat":v19737, "modelled isothermality":v19738, "modelled lowest period moisture index":v19739, "modelled lowest period radiation":v19740, 
  "modelled max temp warmest period":v19741, "modelled mean diurnal range":v19742, "modelled mean moisture index coldest quarter":v19743, "modelled mean moisture index highest quarter MI":v19744, "modelled mean moisture index lowest quater MI":v19745, "modelled mean moisture index warmest quarter":v19746, "modelled mean temp coldest quarter":v19747, "modelled mean temp driest quater":v19748, "modelled mean temp warmer quarter":v19749, "modelled mean temp wettest quarter":v19750, "modelled min temp coldest period":v19751, 
  "modelled moisture index seasonality":v19752, "modelled phos":v19753, "modelled precipitation coldets quarter":v19754, "modelled precipitation driest period":v19755, "modelled precipitation driest quarter":v19756, "modelled precipitation seasonality":v19757, "modelled precipitation warmest quarter":v19758, "modelled precipitation wettest period":v19759, "modelled precipitation wettest quarter":v19760, "modelled radiation coldest quarter":v19761, "modelled radiation driest quarter":v19762, "modelled radiation seasonality":v19763, 
  "modelled radiation warmest quarter":v19764, "modelled radiation wettest quarter":v19765, "modelled relief":v19766, "modelled ridgetopflat":v19767, "modelled rockalklty":v19768, "modelled rockgrainsz":v19769, "modelled rockhardness":v19770, "modelled rocknutrnt":v19771, "modelled roughness":v19772, "modelled sapk 1 1000 g sand":v19773, "modelled slope":v19774, "modelled soildepth":v19775, "modelled solpawhc":v19776, "modelled temperature annual range":v19777, "modelled temperature seasonality":v19778, 
  "modelled thpk 1 1000 g thickness":v19779, "modelled twi":v19780, "modelled valleybottom":v19781, "modelled whpk 1 1000 g water cap":v19782, "raw annual mean moisture index":v19783, "raw annual mean rad":v19784, "raw annual mean temp":v19785, "raw annual precipitation":v19786, "raw clpk 1 1000 g clay":v19787, "raw erosional":v19788, "raw highest period moisture index":v19789, "raw highest period radiation":v19790, "raw hydraulic conductivity ksat":v19791, "raw lowest period moisture index":v19792, 
  "raw lowest period radiation":v19793, "raw max temp warmest period":v19794, "raw mean diurnal range":v19795, "raw mean moisture index coldest quarter":v19796, "raw mean moisture index highest quarter MI":v19797, "raw mean moisture index lowest quater MI":v19798, "raw mean moisture index warmest quarter":v19799, "raw mean temp coldest quarter":v19800, "raw mean temp driest quater":v19801, "raw mean temp warmer quarter":v19802, "raw mean temp wettest quarter":v19803, "raw min temp coldest period":v19804, 
  "raw moisture index seasonality":v19805, "raw precipitation coldets quarter":v19806, "raw precipitation driest period":v19807, "raw precipitation driest quarter":v19808, "raw precipitation seasonality":v19809, "raw precipitation warmest quarter":v19810, "raw precipitation wettest period":v19811, "raw precipitation wettest quarter":v19812, "raw radiation coldest quarter":v19813, "raw radiation driest quarter":v19814, "raw radiation seasonality":v19815, "raw radiation warmest quarter":v19816, "raw radiation wettest quarter":v19817, 
  "raw relief":v19818, "raw ridgetopflat":v19819, "raw rockalklty":v19820, "raw rockgrainsz":v19821, "raw rockhardness":v19822, "raw rocknutrnt":v19823, "raw roughness":v19824, "raw sapk 1 1000 g sand":v19825, "raw slope":v19826, "raw soildepth":v19827, "raw solpawhc":v19828, "raw temperature annual range":v19829, "raw temperature seasonality":v19830, "raw thpk 1 1000 g thickness":v19831, "raw twi":v19832, "raw valleybottom":v19833};
  var v19834 = [.8325000107];
  var v19835 = [18.5249996185];
  var v19836 = [20.9250001907];
  var v19837 = [2179.25];
  var v19838 = [35250];
  var v19839 = [100];
  var v19840 = [1];
  var v19841 = [25.2750000954];
  var v19842 = [250];
  var v19843 = [.5450000167];
  var v19844 = [.3475000001];
  var v19845 = [13.3499999046];
  var v19846 = [29.2249999046];
  var v19847 = [9.5];
  var v19848 = [.8774999976];
  var v19849 = [1];
  var v19850 = [.4975000024];
  var v19851 = [.8824999928];
  var v19852 = [17.125];
  var v19853 = [19.0499997139];
  var v19854 = [24.0749998093];
  var v19855 = [23.5500001907];
  var v19856 = [11.75];
  var v19857 = [28.5];
  var v19858 = [.0491249994];
  var v19859 = [234.25];
  var v19860 = [5.5];
  var v19861 = [157.75];
  var v19862 = [79];
  var v19863 = [919.25];
  var v19864 = [108.75];
  var v19865 = [1209.25];
  var v19866 = [15.4999997616];
  var v19867 = [18.9500002861];
  var v19868 = [18.75];
  var v19869 = [21];
  var v19870 = [18.4499998093];
  var v19871 = [191.561460495];
  var v19872 = [0];
  var v19873 = [4.5];
  var v19874 = [4.5];
  var v19875 = [6.5];
  var v19876 = [5.5];
  var v19877 = [11.7312440872];
  var v19878 = [46500];
  var v19879 = [10.01773417];
  var v19880 = [1.2000000179];
  var v19881 = [164.5];
  var v19882 = [17.4500000477];
  var v19883 = [.9424999952];
  var v19884 = [195.25];
  var v19885 = [7.2423673272];
  var v19886 = [0];
  var v19887 = [35500];
  var v19888 = [0];
  var v19889 = [18];
  var v19890 = [20.5];
  var v19891 = [2179.25];
  var v19892 = [35250];
  var v19893 = [100];
  var v19894 = [1];
  var v19895 = [25];
  var v19896 = [250];
  var v19897 = [0];
  var v19898 = [13];
  var v19899 = [28.5];
  var v19900 = [9];
  var v19901 = [.75];
  var v19902 = [1];
  var v19903 = [0];
  var v19904 = [0];
  var v19905 = [16.75];
  var v19906 = [18.75];
  var v19907 = [23.75];
  var v19908 = [23];
  var v19909 = [11];
  var v19910 = [28.5];
  var v19911 = [234.25];
  var v19912 = [5.5];
  var v19913 = [157.75];
  var v19914 = [79];
  var v19915 = [919.25];
  var v19916 = [108.75];
  var v19917 = [1209.25];
  var v19918 = [15.25];
  var v19919 = [18.75];
  var v19920 = [18.75];
  var v19921 = [20.75];
  var v19922 = [18];
  var v19923 = [191];
  var v19924 = [0];
  var v19925 = [4.5];
  var v19926 = [4.5];
  var v19927 = [6.5];
  var v19928 = [5.5];
  var v19929 = [11.25];
  var v19930 = [46500];
  var v19931 = [9.5];
  var v19932 = [1];
  var v19933 = [164.5];
  var v19934 = [17];
  var v19935 = [.25];
  var v19936 = [195.25];
  var v19937 = [6.75];
  var v19938 = [0];
  var v14824 = {"modelled annual mean moisture index":v19834, "modelled annual mean rad":v19835, "modelled annual mean temp":v19836, "modelled annual precipitation":v19837, "modelled clpk 1 1000 g clay":v19838, "modelled erosional":v19839, "modelled highest period moisture index":v19840, "modelled highest period radiation":v19841, "modelled hydraulic conductivity ksat":v19842, "modelled isothermality":v19843, "modelled lowest period moisture index":v19844, "modelled lowest period radiation":v19845, 
  "modelled max temp warmest period":v19846, "modelled mean diurnal range":v19847, "modelled mean moisture index coldest quarter":v19848, "modelled mean moisture index highest quarter MI":v19849, "modelled mean moisture index lowest quater MI":v19850, "modelled mean moisture index warmest quarter":v19851, "modelled mean temp coldest quarter":v19852, "modelled mean temp driest quater":v19853, "modelled mean temp warmer quarter":v19854, "modelled mean temp wettest quarter":v19855, "modelled min temp coldest period":v19856, 
  "modelled moisture index seasonality":v19857, "modelled phos":v19858, "modelled precipitation coldets quarter":v19859, "modelled precipitation driest period":v19860, "modelled precipitation driest quarter":v19861, "modelled precipitation seasonality":v19862, "modelled precipitation warmest quarter":v19863, "modelled precipitation wettest period":v19864, "modelled precipitation wettest quarter":v19865, "modelled radiation coldest quarter":v19866, "modelled radiation driest quarter":v19867, "modelled radiation seasonality":v19868, 
  "modelled radiation warmest quarter":v19869, "modelled radiation wettest quarter":v19870, "modelled relief":v19871, "modelled ridgetopflat":v19872, "modelled rockalklty":v19873, "modelled rockgrainsz":v19874, "modelled rockhardness":v19875, "modelled rocknutrnt":v19876, "modelled roughness":v19877, "modelled sapk 1 1000 g sand":v19878, "modelled slope":v19879, "modelled soildepth":v19880, "modelled solpawhc":v19881, "modelled temperature annual range":v19882, "modelled temperature seasonality":v19883, 
  "modelled thpk 1 1000 g thickness":v19884, "modelled twi":v19885, "modelled valleybottom":v19886, "modelled whpk 1 1000 g water cap":v19887, "raw annual mean moisture index":v19888, "raw annual mean rad":v19889, "raw annual mean temp":v19890, "raw annual precipitation":v19891, "raw clpk 1 1000 g clay":v19892, "raw erosional":v19893, "raw highest period moisture index":v19894, "raw highest period radiation":v19895, "raw hydraulic conductivity ksat":v19896, "raw lowest period moisture index":v19897, 
  "raw lowest period radiation":v19898, "raw max temp warmest period":v19899, "raw mean diurnal range":v19900, "raw mean moisture index coldest quarter":v19901, "raw mean moisture index highest quarter MI":v19902, "raw mean moisture index lowest quater MI":v19903, "raw mean moisture index warmest quarter":v19904, "raw mean temp coldest quarter":v19905, "raw mean temp driest quater":v19906, "raw mean temp warmer quarter":v19907, "raw mean temp wettest quarter":v19908, "raw min temp coldest period":v19909, 
  "raw moisture index seasonality":v19910, "raw precipitation coldets quarter":v19911, "raw precipitation driest period":v19912, "raw precipitation driest quarter":v19913, "raw precipitation seasonality":v19914, "raw precipitation warmest quarter":v19915, "raw precipitation wettest period":v19916, "raw precipitation wettest quarter":v19917, "raw radiation coldest quarter":v19918, "raw radiation driest quarter":v19919, "raw radiation seasonality":v19920, "raw radiation warmest quarter":v19921, "raw radiation wettest quarter":v19922, 
  "raw relief":v19923, "raw ridgetopflat":v19924, "raw rockalklty":v19925, "raw rockgrainsz":v19926, "raw rockhardness":v19927, "raw rocknutrnt":v19928, "raw roughness":v19929, "raw sapk 1 1000 g sand":v19930, "raw slope":v19931, "raw soildepth":v19932, "raw solpawhc":v19933, "raw temperature annual range":v19934, "raw temperature seasonality":v19935, "raw thpk 1 1000 g thickness":v19936, "raw twi":v19937, "raw valleybottom":v19938};
  var v19939 = [.8511999941];
  var v19940 = [17.7549997139];
  var v19941 = [20.1320000076];
  var v19942 = [2004.6];
  var v19943 = [24337.5];
  var v19944 = [100];
  var v19945 = [1];
  var v19946 = [24.4609998512];
  var v19947 = [230];
  var v19948 = [.519799999];
  var v19949 = [.4349999921];
  var v19950 = [11.9399999428];
  var v19951 = [28.5809999847];
  var v19952 = [9.3529999971];
  var v19953 = [.9477999979];
  var v19954 = [1];
  var v19955 = [.5399000007];
  var v19956 = [.8883000004];
  var v19957 = [16.0029999352];
  var v19958 = [17.4470001602];
  var v19959 = [23.6520002556];
  var v19960 = [23.2579998207];
  var v19961 = [10.5970001769];
  var v19962 = [24.44];
  var v19963 = [.0236599989];
  var v19964 = [229.2];
  var v19965 = [8.44];
  var v19966 = [170.66];
  var v19967 = [66.77];
  var v19968 = [871.37];
  var v19969 = [92.64];
  var v19970 = [1050.83];
  var v19971 = [14.0290001678];
  var v19972 = [17.2499999809];
  var v19973 = [21.92];
  var v19974 = [20.4790001106];
  var v19975 = [18.3959999466];
  var v19976 = [180.825651741];
  var v19977 = [0];
  var v19978 = [4.92];
  var v19979 = [6.22];
  var v19980 = [6.34];
  var v19981 = [4.34];
  var v19982 = [41.1613443279];
  var v19983 = [52267.5];
  var v19984 = [10.5619576693];
  var v19985 = [1.3479999959];
  var v19986 = [183.33];
  var v19987 = [17.9670000267];
  var v19988 = [1.0439999992];
  var v19989 = [226.16];
  var v19990 = [5.7365186501];
  var v19991 = [1.0625];
  var v19992 = [35632.5];
  var v19993 = [0];
  var v19994 = [17];
  var v19995 = [18.8571428571];
  var v19996 = [1932.7142857143];
  var v19997 = [23678.5714285714];
  var v19998 = [100];
  var v19999 = [1];
  var v20000 = [24.1428571429];
  var v20001 = [242.8571428571];
  var v20002 = [0];
  var v20003 = [11];
  var v20004 = [27.4285714286];
  var v20005 = [9];
  var v20006 = [.4285714286];
  var v20007 = [1];
  var v20008 = [0];
  var v20009 = [0];
  var v20010 = [14.5714285714];
  var v20011 = [16];
  var v20012 = [22.5714285714];
  var v20013 = [22.1428571429];
  var v20014 = [9.2857142857];
  var v20015 = [23.5714285714];
  var v20016 = [226.2857142857];
  var v20017 = [8.4285714286];
  var v20018 = [171.4285714286];
  var v20019 = [64.8571428571];
  var v20020 = [833.5714285714];
  var v20021 = [89];
  var v20022 = [1003.5714285714];
  var v20023 = [13.1428571429];
  var v20024 = [16.4285714286];
  var v20025 = [22.8571428571];
  var v20026 = [20.2857142857];
  var v20027 = [17.8571428571];
  var v20028 = [182.5714285714];
  var v20029 = [0];
  var v20030 = [4];
  var v20031 = [4.8571428571];
  var v20032 = [5.1428571429];
  var v20033 = [3.7142857143];
  var v20034 = [29.7142857143];
  var v20035 = [54535.7142857143];
  var v20036 = [10.1428571429];
  var v20037 = [1];
  var v20038 = [188.7142857143];
  var v20039 = [18];
  var v20040 = [.4285714286];
  var v20041 = [253.4285714286];
  var v20042 = [4.8571428571];
  var v20043 = [0];
  var v14825 = {"modelled annual mean moisture index":v19939, "modelled annual mean rad":v19940, "modelled annual mean temp":v19941, "modelled annual precipitation":v19942, "modelled clpk 1 1000 g clay":v19943, "modelled erosional":v19944, "modelled highest period moisture index":v19945, "modelled highest period radiation":v19946, "modelled hydraulic conductivity ksat":v19947, "modelled isothermality":v19948, "modelled lowest period moisture index":v19949, "modelled lowest period radiation":v19950, 
  "modelled max temp warmest period":v19951, "modelled mean diurnal range":v19952, "modelled mean moisture index coldest quarter":v19953, "modelled mean moisture index highest quarter MI":v19954, "modelled mean moisture index lowest quater MI":v19955, "modelled mean moisture index warmest quarter":v19956, "modelled mean temp coldest quarter":v19957, "modelled mean temp driest quater":v19958, "modelled mean temp warmer quarter":v19959, "modelled mean temp wettest quarter":v19960, "modelled min temp coldest period":v19961, 
  "modelled moisture index seasonality":v19962, "modelled phos":v19963, "modelled precipitation coldets quarter":v19964, "modelled precipitation driest period":v19965, "modelled precipitation driest quarter":v19966, "modelled precipitation seasonality":v19967, "modelled precipitation warmest quarter":v19968, "modelled precipitation wettest period":v19969, "modelled precipitation wettest quarter":v19970, "modelled radiation coldest quarter":v19971, "modelled radiation driest quarter":v19972, "modelled radiation seasonality":v19973, 
  "modelled radiation warmest quarter":v19974, "modelled radiation wettest quarter":v19975, "modelled relief":v19976, "modelled ridgetopflat":v19977, "modelled rockalklty":v19978, "modelled rockgrainsz":v19979, "modelled rockhardness":v19980, "modelled rocknutrnt":v19981, "modelled roughness":v19982, "modelled sapk 1 1000 g sand":v19983, "modelled slope":v19984, "modelled soildepth":v19985, "modelled solpawhc":v19986, "modelled temperature annual range":v19987, "modelled temperature seasonality":v19988, 
  "modelled thpk 1 1000 g thickness":v19989, "modelled twi":v19990, "modelled valleybottom":v19991, "modelled whpk 1 1000 g water cap":v19992, "raw annual mean moisture index":v19993, "raw annual mean rad":v19994, "raw annual mean temp":v19995, "raw annual precipitation":v19996, "raw clpk 1 1000 g clay":v19997, "raw erosional":v19998, "raw highest period moisture index":v19999, "raw highest period radiation":v20000, "raw hydraulic conductivity ksat":v20001, "raw lowest period moisture index":v20002, 
  "raw lowest period radiation":v20003, "raw max temp warmest period":v20004, "raw mean diurnal range":v20005, "raw mean moisture index coldest quarter":v20006, "raw mean moisture index highest quarter MI":v20007, "raw mean moisture index lowest quater MI":v20008, "raw mean moisture index warmest quarter":v20009, "raw mean temp coldest quarter":v20010, "raw mean temp driest quater":v20011, "raw mean temp warmer quarter":v20012, "raw mean temp wettest quarter":v20013, "raw min temp coldest period":v20014, 
  "raw moisture index seasonality":v20015, "raw precipitation coldets quarter":v20016, "raw precipitation driest period":v20017, "raw precipitation driest quarter":v20018, "raw precipitation seasonality":v20019, "raw precipitation warmest quarter":v20020, "raw precipitation wettest period":v20021, "raw precipitation wettest quarter":v20022, "raw radiation coldest quarter":v20023, "raw radiation driest quarter":v20024, "raw radiation seasonality":v20025, "raw radiation warmest quarter":v20026, "raw radiation wettest quarter":v20027, 
  "raw relief":v20028, "raw ridgetopflat":v20029, "raw rockalklty":v20030, "raw rockgrainsz":v20031, "raw rockhardness":v20032, "raw rocknutrnt":v20033, "raw roughness":v20034, "raw sapk 1 1000 g sand":v20035, "raw slope":v20036, "raw soildepth":v20037, "raw solpawhc":v20038, "raw temperature annual range":v20039, "raw temperature seasonality":v20040, "raw thpk 1 1000 g thickness":v20041, "raw twi":v20042, "raw valleybottom":v20043};
  var v20044 = [.8419692351];
  var v20045 = [15.4089230904];
  var v20046 = [11.7830769011];
  var v20047 = [1282.2246153846];
  var v20048 = [21682.3076923077];
  var v20049 = [98.4807692308];
  var v20050 = [.9973846157];
  var v20051 = [24.0646153729];
  var v20052 = [180.3692307692];
  var v20053 = [.4703076909];
  var v20054 = [.48273846];
  var v20055 = [7.0495384554];
  var v20056 = [23.5836921927];
  var v20057 = [10.2701538335];
  var v20058 = [.9867076942];
  var v20059 = [.9953846163];
  var v20060 = [.5702769235];
  var v20061 = [.6286461528];
  var v20062 = [6.664307713];
  var v20063 = [12.2307692];
  var v20064 = [16.8929231204];
  var v20065 = [11.9966153483];
  var v20066 = [1.7335384761];
  var v20067 = [22.3753846154];
  var v20068 = [.0354398355];
  var v20069 = [316.5815384615];
  var v20070 = [13.1261538462];
  var v20071 = [212.48];
  var v20072 = [25.9846153846];
  var v20073 = [333.4307692308];
  var v20074 = [39.5076923077];
  var v20075 = [446.7507692308];
  var v20076 = [8.8353845684];
  var v20077 = [17.0212307989];
  var v20078 = [39.0307692308];
  var v20079 = [21.3784615619];
  var v20080 = [14.3270768371];
  var v20081 = [156.8749819389];
  var v20082 = [.2884615385];
  var v20083 = [4.6646153846];
  var v20084 = [4.6615384615];
  var v20085 = [5.8615384615];
  var v20086 = [4.5569230769];
  var v20087 = [9.5328148233];
  var v20088 = [58780.7692307692];
  var v20089 = [9.5631930516];
  var v20090 = [1.0756923059];
  var v20091 = [151.4553846154];
  var v20092 = [21.8473846553];
  var v20093 = [1.4144307659];
  var v20094 = [278.2092307692];
  var v20095 = [4.8256355231];
  var v20096 = [.4807692308];
  var v20097 = [45223.0769230769];
  var v20098 = [.0083333333];
  var v20099 = [15];
  var v20100 = [11.5];
  var v20101 = [1295.7833333333];
  var v20102 = [22614.5833333333];
  var v20103 = [98.5166666667];
  var v20104 = [.9583333333];
  var v20105 = [23.625];
  var v20106 = [181.4166666667];
  var v20107 = [0];
  var v20108 = [6.7916666667];
  var v20109 = [23.2833333333];
  var v20110 = [9.8083333333];
  var v20111 = [.6333333333];
  var v20112 = [.8583333333];
  var v20113 = [.0083333333];
  var v20114 = [.0083333333];
  var v20115 = [6.4];
  var v20116 = [11.8333333333];
  var v20117 = [16.6];
  var v20118 = [11.9];
  var v20119 = [1.75];
  var v20120 = [22.375];
  var v20121 = [312.6666666667];
  var v20122 = [13.0083333333];
  var v20123 = [212.0583333333];
  var v20124 = [26.6833333333];
  var v20125 = [347.1833333333];
  var v20126 = [40.8166666667];
  var v20127 = [460.0583333333];
  var v20128 = [8.4333333333];
  var v20129 = [16.5416666667];
  var v20130 = [38.6916666667];
  var v20131 = [20.8916666667];
  var v20132 = [13.8916666667];
  var v20133 = [157];
  var v20134 = [.1];
  var v20135 = [4.4083333333];
  var v20136 = [4.6083333333];
  var v20137 = [5.8];
  var v20138 = [4.35];
  var v20139 = [9.5166666667];
  var v20140 = [57129.1666666667];
  var v20141 = [9.1583333333];
  var v20142 = [.6083333333];
  var v20143 = [151.35];
  var v20144 = [21.4333333333];
  var v20145 = [.9416666667];
  var v20146 = [279.0416666667];
  var v20147 = [4.5416666667];
  var v20148 = [.6083333333];
  var v14826 = {"modelled annual mean moisture index":v20044, "modelled annual mean rad":v20045, "modelled annual mean temp":v20046, "modelled annual precipitation":v20047, "modelled clpk 1 1000 g clay":v20048, "modelled erosional":v20049, "modelled highest period moisture index":v20050, "modelled highest period radiation":v20051, "modelled hydraulic conductivity ksat":v20052, "modelled isothermality":v20053, "modelled lowest period moisture index":v20054, "modelled lowest period radiation":v20055, 
  "modelled max temp warmest period":v20056, "modelled mean diurnal range":v20057, "modelled mean moisture index coldest quarter":v20058, "modelled mean moisture index highest quarter MI":v20059, "modelled mean moisture index lowest quater MI":v20060, "modelled mean moisture index warmest quarter":v20061, "modelled mean temp coldest quarter":v20062, "modelled mean temp driest quater":v20063, "modelled mean temp warmer quarter":v20064, "modelled mean temp wettest quarter":v20065, "modelled min temp coldest period":v20066, 
  "modelled moisture index seasonality":v20067, "modelled phos":v20068, "modelled precipitation coldets quarter":v20069, "modelled precipitation driest period":v20070, "modelled precipitation driest quarter":v20071, "modelled precipitation seasonality":v20072, "modelled precipitation warmest quarter":v20073, "modelled precipitation wettest period":v20074, "modelled precipitation wettest quarter":v20075, "modelled radiation coldest quarter":v20076, "modelled radiation driest quarter":v20077, "modelled radiation seasonality":v20078, 
  "modelled radiation warmest quarter":v20079, "modelled radiation wettest quarter":v20080, "modelled relief":v20081, "modelled ridgetopflat":v20082, "modelled rockalklty":v20083, "modelled rockgrainsz":v20084, "modelled rockhardness":v20085, "modelled rocknutrnt":v20086, "modelled roughness":v20087, "modelled sapk 1 1000 g sand":v20088, "modelled slope":v20089, "modelled soildepth":v20090, "modelled solpawhc":v20091, "modelled temperature annual range":v20092, "modelled temperature seasonality":v20093, 
  "modelled thpk 1 1000 g thickness":v20094, "modelled twi":v20095, "modelled valleybottom":v20096, "modelled whpk 1 1000 g water cap":v20097, "raw annual mean moisture index":v20098, "raw annual mean rad":v20099, "raw annual mean temp":v20100, "raw annual precipitation":v20101, "raw clpk 1 1000 g clay":v20102, "raw erosional":v20103, "raw highest period moisture index":v20104, "raw highest period radiation":v20105, "raw hydraulic conductivity ksat":v20106, "raw lowest period moisture index":v20107, 
  "raw lowest period radiation":v20108, "raw max temp warmest period":v20109, "raw mean diurnal range":v20110, "raw mean moisture index coldest quarter":v20111, "raw mean moisture index highest quarter MI":v20112, "raw mean moisture index lowest quater MI":v20113, "raw mean moisture index warmest quarter":v20114, "raw mean temp coldest quarter":v20115, "raw mean temp driest quater":v20116, "raw mean temp warmer quarter":v20117, "raw mean temp wettest quarter":v20118, "raw min temp coldest period":v20119, 
  "raw moisture index seasonality":v20120, "raw precipitation coldets quarter":v20121, "raw precipitation driest period":v20122, "raw precipitation driest quarter":v20123, "raw precipitation seasonality":v20124, "raw precipitation warmest quarter":v20125, "raw precipitation wettest period":v20126, "raw precipitation wettest quarter":v20127, "raw radiation coldest quarter":v20128, "raw radiation driest quarter":v20129, "raw radiation seasonality":v20130, "raw radiation warmest quarter":v20131, "raw radiation wettest quarter":v20132, 
  "raw relief":v20133, "raw ridgetopflat":v20134, "raw rockalklty":v20135, "raw rockgrainsz":v20136, "raw rockhardness":v20137, "raw rocknutrnt":v20138, "raw roughness":v20139, "raw sapk 1 1000 g sand":v20140, "raw slope":v20141, "raw soildepth":v20142, "raw solpawhc":v20143, "raw temperature annual range":v20144, "raw temperature seasonality":v20145, "raw thpk 1 1000 g thickness":v20146, "raw twi":v20147, "raw valleybottom":v20148};
  var v20149 = [.9756666799];
  var v20150 = [12.0000000954];
  var v20151 = [8.4266665936];
  var v20152 = [1407.3333333333];
  var v20153 = [24058.3333333333];
  var v20154 = [99.1666666667];
  var v20155 = [1];
  var v20156 = [20.980000178];
  var v20157 = [166.6666666667];
  var v20158 = [.4939999938];
  var v20159 = [.8756666621];
  var v20160 = [3.9166666349];
  var v20161 = [18.3566667557];
  var v20162 = [8.6166667461];
  var v20163 = [1];
  var v20164 = [1];
  var v20165 = [.9139999986];
  var v20166 = [.9393333415];
  var v20167 = [4.6199999571];
  var v20168 = [12.2033334096];
  var v20169 = [12.313333416];
  var v20170 = [6.9966665745];
  var v20171 = [1.009999985];
  var v20172 = [4.4];
  var v20173 = [.0296393858];
  var v20174 = [405];
  var v20175 = [18.4333333333];
  var v20176 = [267.1666666667];
  var v20177 = [17.3666666667];
  var v20178 = [272.2];
  var v20179 = [36.7];
  var v20180 = [425.8333333333];
  var v20181 = [5.6500000318];
  var v20182 = [17.3266669591];
  var v20183 = [50.7666666667];
  var v20184 = [18.4133333206];
  var v20185 = [11.630000035];
  var v20186 = [187.601335907];
  var v20187 = [0];
  var v20188 = [5.8];
  var v20189 = [5.0333333333];
  var v20190 = [5.7666666667];
  var v20191 = [5.7666666667];
  var v20192 = [11.1428800742];
  var v20193 = [54641.6666666666];
  var v20194 = [12.2245521386];
  var v20195 = [1.0466666738];
  var v20196 = [160.1666666667];
  var v20197 = [17.3433331172];
  var v20198 = [1.0673333148];
  var v20199 = [322.6333333333];
  var v20200 = [5.1204978943];
  var v20201 = [.8333333333];
  var v20202 = [53558.3333333333];
  var v20203 = [.0909090909];
  var v20204 = [11.7272727273];
  var v20205 = [7.9090909091];
  var v20206 = [1400];
  var v20207 = [25386.3636363636];
  var v20208 = [99.3636363636];
  var v20209 = [1];
  var v20210 = [20.8181818182];
  var v20211 = [172.7272727273];
  var v20212 = [.0909090909];
  var v20213 = [3.8181818182];
  var v20214 = [18.0909090909];
  var v20215 = [8.2727272727];
  var v20216 = [1];
  var v20217 = [1];
  var v20218 = [.0909090909];
  var v20219 = [.0909090909];
  var v20220 = [4.2727272727];
  var v20221 = [11.9090909091];
  var v20222 = [11.9090909091];
  var v20223 = [6.2727272727];
  var v20224 = [.6363636364];
  var v20225 = [4.5454545455];
  var v20226 = [404.1818181818];
  var v20227 = [18];
  var v20228 = [264.1818181818];
  var v20229 = [17.6363636364];
  var v20230 = [269];
  var v20231 = [36.3636363636];
  var v20232 = [423.1818181818];
  var v20233 = [5.0909090909];
  var v20234 = [17.1818181818];
  var v20235 = [50.5454545455];
  var v20236 = [18.0909090909];
  var v20237 = [11];
  var v20238 = [214.8181818182];
  var v20239 = [0];
  var v20240 = [5.8181818182];
  var v20241 = [4.9090909091];
  var v20242 = [5.8181818182];
  var v20243 = [5.8181818182];
  var v20244 = [11.5454545455];
  var v20245 = [52431.8181818182];
  var v20246 = [13];
  var v20247 = [.7272727273];
  var v20248 = [167.5454545455];
  var v20249 = [16.9090909091];
  var v20250 = [.8181818182];
  var v20251 = [308.6363636364];
  var v20252 = [4.3636363636];
  var v20253 = [.5454545455];
  var v14827 = {"modelled annual mean moisture index":v20149, "modelled annual mean rad":v20150, "modelled annual mean temp":v20151, "modelled annual precipitation":v20152, "modelled clpk 1 1000 g clay":v20153, "modelled erosional":v20154, "modelled highest period moisture index":v20155, "modelled highest period radiation":v20156, "modelled hydraulic conductivity ksat":v20157, "modelled isothermality":v20158, "modelled lowest period moisture index":v20159, "modelled lowest period radiation":v20160, 
  "modelled max temp warmest period":v20161, "modelled mean diurnal range":v20162, "modelled mean moisture index coldest quarter":v20163, "modelled mean moisture index highest quarter MI":v20164, "modelled mean moisture index lowest quater MI":v20165, "modelled mean moisture index warmest quarter":v20166, "modelled mean temp coldest quarter":v20167, "modelled mean temp driest quater":v20168, "modelled mean temp warmer quarter":v20169, "modelled mean temp wettest quarter":v20170, "modelled min temp coldest period":v20171, 
  "modelled moisture index seasonality":v20172, "modelled phos":v20173, "modelled precipitation coldets quarter":v20174, "modelled precipitation driest period":v20175, "modelled precipitation driest quarter":v20176, "modelled precipitation seasonality":v20177, "modelled precipitation warmest quarter":v20178, "modelled precipitation wettest period":v20179, "modelled precipitation wettest quarter":v20180, "modelled radiation coldest quarter":v20181, "modelled radiation driest quarter":v20182, "modelled radiation seasonality":v20183, 
  "modelled radiation warmest quarter":v20184, "modelled radiation wettest quarter":v20185, "modelled relief":v20186, "modelled ridgetopflat":v20187, "modelled rockalklty":v20188, "modelled rockgrainsz":v20189, "modelled rockhardness":v20190, "modelled rocknutrnt":v20191, "modelled roughness":v20192, "modelled sapk 1 1000 g sand":v20193, "modelled slope":v20194, "modelled soildepth":v20195, "modelled solpawhc":v20196, "modelled temperature annual range":v20197, "modelled temperature seasonality":v20198, 
  "modelled thpk 1 1000 g thickness":v20199, "modelled twi":v20200, "modelled valleybottom":v20201, "modelled whpk 1 1000 g water cap":v20202, "raw annual mean moisture index":v20203, "raw annual mean rad":v20204, "raw annual mean temp":v20205, "raw annual precipitation":v20206, "raw clpk 1 1000 g clay":v20207, "raw erosional":v20208, "raw highest period moisture index":v20209, "raw highest period radiation":v20210, "raw hydraulic conductivity ksat":v20211, "raw lowest period moisture index":v20212, 
  "raw lowest period radiation":v20213, "raw max temp warmest period":v20214, "raw mean diurnal range":v20215, "raw mean moisture index coldest quarter":v20216, "raw mean moisture index highest quarter MI":v20217, "raw mean moisture index lowest quater MI":v20218, "raw mean moisture index warmest quarter":v20219, "raw mean temp coldest quarter":v20220, "raw mean temp driest quater":v20221, "raw mean temp warmer quarter":v20222, "raw mean temp wettest quarter":v20223, "raw min temp coldest period":v20224, 
  "raw moisture index seasonality":v20225, "raw precipitation coldets quarter":v20226, "raw precipitation driest period":v20227, "raw precipitation driest quarter":v20228, "raw precipitation seasonality":v20229, "raw precipitation warmest quarter":v20230, "raw precipitation wettest period":v20231, "raw precipitation wettest quarter":v20232, "raw radiation coldest quarter":v20233, "raw radiation driest quarter":v20234, "raw radiation seasonality":v20235, "raw radiation warmest quarter":v20236, "raw radiation wettest quarter":v20237, 
  "raw relief":v20238, "raw ridgetopflat":v20239, "raw rockalklty":v20240, "raw rockgrainsz":v20241, "raw rockhardness":v20242, "raw rocknutrnt":v20243, "raw roughness":v20244, "raw sapk 1 1000 g sand":v20245, "raw slope":v20246, "raw soildepth":v20247, "raw solpawhc":v20248, "raw temperature annual range":v20249, "raw temperature seasonality":v20250, "raw thpk 1 1000 g thickness":v20251, "raw twi":v20252, "raw valleybottom":v20253};
  var v20254 = [.2800000012];
  var v20255 = [22.1500005722];
  var v20256 = [26.4499998093];
  var v20257 = [732];
  var v20258 = [41500];
  var v20259 = [100];
  var v20260 = [.9199999869];
  var v20261 = [26.8000001907];
  var v20262 = [65];
  var v20263 = [.5400000215];
  var v20264 = [.0049999999];
  var v20265 = [17];
  var v20266 = [38.5];
  var v20267 = [14.9500002861];
  var v20268 = [.0299999993];
  var v20269 = [.8199999928];
  var v20270 = [.0099999998];
  var v20271 = [.2599999979];
  var v20272 = [21];
  var v20273 = [23.25];
  var v20274 = [30.5];
  var v20275 = [29.3500003815];
  var v20276 = [10.7999997139];
  var v20277 = [120];
  var v20278 = [.0149999997];
  var v20279 = [14];
  var v20280 = [0];
  var v20281 = [0];
  var v20282 = [126];
  var v20283 = [239.5];
  var v20284 = [52];
  var v20285 = [546];
  var v20286 = [18.8500003815];
  var v20287 = [21.9499998093];
  var v20288 = [13.5];
  var v20289 = [25.25];
  var v20290 = [22.4000005722];
  var v20291 = [98.6766052246];
  var v20292 = [0];
  var v20293 = [5.5];
  var v20294 = [4.5];
  var v20295 = [4.5];
  var v20296 = [5];
  var v20297 = [17.0805878639];
  var v20298 = [37E3];
  var v20299 = [5.9404842854];
  var v20300 = [1.0000000298];
  var v20301 = [117.5];
  var v20302 = [27.75];
  var v20303 = [1.2549999952];
  var v20304 = [150];
  var v20305 = [8.5943181515];
  var v20306 = [0];
  var v20307 = [20500];
  var v20308 = [0];
  var v20309 = [22];
  var v20310 = [26];
  var v20311 = [732];
  var v20312 = [41500];
  var v20313 = [100];
  var v20314 = [0];
  var v20315 = [26];
  var v20316 = [65];
  var v20317 = [0];
  var v20318 = [16.5];
  var v20319 = [38];
  var v20320 = [14.5];
  var v20321 = [0];
  var v20322 = [0];
  var v20323 = [0];
  var v20324 = [0];
  var v20325 = [20.5];
  var v20326 = [22.5];
  var v20327 = [30];
  var v20328 = [29];
  var v20329 = [10.5];
  var v20330 = [120];
  var v20331 = [14];
  var v20332 = [0];
  var v20333 = [0];
  var v20334 = [126];
  var v20335 = [239.5];
  var v20336 = [52];
  var v20337 = [546];
  var v20338 = [18.5];
  var v20339 = [21.5];
  var v20340 = [13.5];
  var v20341 = [25];
  var v20342 = [22];
  var v20343 = [98];
  var v20344 = [0];
  var v20345 = [5.5];
  var v20346 = [4.5];
  var v20347 = [4.5];
  var v20348 = [5];
  var v20349 = [16.5];
  var v20350 = [37E3];
  var v20351 = [5.5];
  var v20352 = [.5];
  var v20353 = [117.5];
  var v20354 = [27];
  var v20355 = [1];
  var v20356 = [150];
  var v20357 = [8];
  var v20358 = [0];
  var v14828 = {"modelled annual mean moisture index":v20254, "modelled annual mean rad":v20255, "modelled annual mean temp":v20256, "modelled annual precipitation":v20257, "modelled clpk 1 1000 g clay":v20258, "modelled erosional":v20259, "modelled highest period moisture index":v20260, "modelled highest period radiation":v20261, "modelled hydraulic conductivity ksat":v20262, "modelled isothermality":v20263, "modelled lowest period moisture index":v20264, "modelled lowest period radiation":v20265, 
  "modelled max temp warmest period":v20266, "modelled mean diurnal range":v20267, "modelled mean moisture index coldest quarter":v20268, "modelled mean moisture index highest quarter MI":v20269, "modelled mean moisture index lowest quater MI":v20270, "modelled mean moisture index warmest quarter":v20271, "modelled mean temp coldest quarter":v20272, "modelled mean temp driest quater":v20273, "modelled mean temp warmer quarter":v20274, "modelled mean temp wettest quarter":v20275, "modelled min temp coldest period":v20276, 
  "modelled moisture index seasonality":v20277, "modelled phos":v20278, "modelled precipitation coldets quarter":v20279, "modelled precipitation driest period":v20280, "modelled precipitation driest quarter":v20281, "modelled precipitation seasonality":v20282, "modelled precipitation warmest quarter":v20283, "modelled precipitation wettest period":v20284, "modelled precipitation wettest quarter":v20285, "modelled radiation coldest quarter":v20286, "modelled radiation driest quarter":v20287, "modelled radiation seasonality":v20288, 
  "modelled radiation warmest quarter":v20289, "modelled radiation wettest quarter":v20290, "modelled relief":v20291, "modelled ridgetopflat":v20292, "modelled rockalklty":v20293, "modelled rockgrainsz":v20294, "modelled rockhardness":v20295, "modelled rocknutrnt":v20296, "modelled roughness":v20297, "modelled sapk 1 1000 g sand":v20298, "modelled slope":v20299, "modelled soildepth":v20300, "modelled solpawhc":v20301, "modelled temperature annual range":v20302, "modelled temperature seasonality":v20303, 
  "modelled thpk 1 1000 g thickness":v20304, "modelled twi":v20305, "modelled valleybottom":v20306, "modelled whpk 1 1000 g water cap":v20307, "raw annual mean moisture index":v20308, "raw annual mean rad":v20309, "raw annual mean temp":v20310, "raw annual precipitation":v20311, "raw clpk 1 1000 g clay":v20312, "raw erosional":v20313, "raw highest period moisture index":v20314, "raw highest period radiation":v20315, "raw hydraulic conductivity ksat":v20316, "raw lowest period moisture index":v20317, 
  "raw lowest period radiation":v20318, "raw max temp warmest period":v20319, "raw mean diurnal range":v20320, "raw mean moisture index coldest quarter":v20321, "raw mean moisture index highest quarter MI":v20322, "raw mean moisture index lowest quater MI":v20323, "raw mean moisture index warmest quarter":v20324, "raw mean temp coldest quarter":v20325, "raw mean temp driest quater":v20326, "raw mean temp warmer quarter":v20327, "raw mean temp wettest quarter":v20328, "raw min temp coldest period":v20329, 
  "raw moisture index seasonality":v20330, "raw precipitation coldets quarter":v20331, "raw precipitation driest period":v20332, "raw precipitation driest quarter":v20333, "raw precipitation seasonality":v20334, "raw precipitation warmest quarter":v20335, "raw precipitation wettest period":v20336, "raw precipitation wettest quarter":v20337, "raw radiation coldest quarter":v20338, "raw radiation driest quarter":v20339, "raw radiation seasonality":v20340, "raw radiation warmest quarter":v20341, "raw radiation wettest quarter":v20342, 
  "raw relief":v20343, "raw ridgetopflat":v20344, "raw rockalklty":v20345, "raw rockgrainsz":v20346, "raw rockhardness":v20347, "raw rocknutrnt":v20348, "raw roughness":v20349, "raw sapk 1 1000 g sand":v20350, "raw slope":v20351, "raw soildepth":v20352, "raw solpawhc":v20353, "raw temperature annual range":v20354, "raw temperature seasonality":v20355, "raw thpk 1 1000 g thickness":v20356, "raw twi":v20357, "raw valleybottom":v20358};
  var v20359 = [.7365444446];
  var v20360 = [17.1275078493];
  var v20361 = [16.1311112493];
  var v20362 = [1255.8687301587];
  var v20363 = [21822.0634920634];
  var v20364 = [91.9027777778];
  var v20365 = [.9502539679];
  var v20366 = [24.715031606];
  var v20367 = [152.3];
  var v20368 = [.4938333283];
  var v20369 = [.3612952372];
  var v20370 = [9.6579523886];
  var v20371 = [27.2970475527];
  var v20372 = [10.9151110977];
  var v20373 = [.8659396845];
  var v20374 = [.9381000012];
  var v20375 = [.4386444416];
  var v20376 = [.5990571438];
  var v20377 = [11.0153809807];
  var v20378 = [14.1643810366];
  var v20379 = [21.0059206676];
  var v20380 = [18.1127459956];
  var v20381 = [5.1418412599];
  var v20382 = [31.663015873];
  var v20383 = [.0397253511];
  var v20384 = [243.0065079365];
  var v20385 = [7.4119047619];
  var v20386 = [158.4253968254];
  var v20387 = [45.0196825397];
  var v20388 = [418.6682539683];
  var v20389 = [49.3933333333];
  var v20390 = [535.4804761905];
  var v20391 = [11.5418730642];
  var v20392 = [16.7123016274];
  var v20393 = [30.5920634921];
  var v20394 = [21.9849682202];
  var v20395 = [17.2387459149];
  var v20396 = [97.2765801426];
  var v20397 = [.6339285714];
  var v20398 = [4.7514285714];
  var v20399 = [4.3793650794];
  var v20400 = [5.7];
  var v20401 = [4.7347619048];
  var v20402 = [13.9966933051];
  var v20403 = [61094.5238095238];
  var v20404 = [6.4187526792];
  var v20405 = [.9957460357];
  var v20406 = [125.65];
  var v20407 = [22.1440794706];
  var v20408 = [1.3577285743];
  var v20409 = [276.8314285714];
  var v20410 = [6.0713178382];
  var v20411 = [5.5426587302];
  var v20412 = [41211.3919047619];
  var v20413 = [0];
  var v20414 = [16.0625];
  var v20415 = [15.203125];
  var v20416 = [1208.296875];
  var v20417 = [20792.96875];
  var v20418 = [90.5625];
  var v20419 = [.703125];
  var v20420 = [23.421875];
  var v20421 = [141.09375];
  var v20422 = [0];
  var v20423 = [8.8125];
  var v20424 = [25.828125];
  var v20425 = [10.046875];
  var v20426 = [.40625];
  var v20427 = [.640625];
  var v20428 = [0];
  var v20429 = [.015625];
  var v20430 = [10.265625];
  var v20431 = [13.1875];
  var v20432 = [19.796875];
  var v20433 = [16.9375];
  var v20434 = [4.53125];
  var v20435 = [29.625];
  var v20436 = [232.109375];
  var v20437 = [7.28125];
  var v20438 = [157.328125];
  var v20439 = [42.140625];
  var v20440 = [401.015625];
  var v20441 = [45.546875];
  var v20442 = [506.40625];
  var v20443 = [10.625];
  var v20444 = [15.6875];
  var v20445 = [29.78125];
  var v20446 = [20.71875];
  var v20447 = [16.421875];
  var v20448 = [100.15625];
  var v20449 = [.484375];
  var v20450 = [4.109375];
  var v20451 = [3.84375];
  var v20452 = [5.1875];
  var v20453 = [4];
  var v20454 = [13.9375];
  var v20455 = [57734.375];
  var v20456 = [6.078125];
  var v20457 = [.5];
  var v20458 = [116.21875];
  var v20459 = [21.03125];
  var v20460 = [.90625];
  var v20461 = [267.40625];
  var v20462 = [5.46875];
  var v20463 = [4.953125];
  var v14829 = {"modelled annual mean moisture index":v20359, "modelled annual mean rad":v20360, "modelled annual mean temp":v20361, "modelled annual precipitation":v20362, "modelled clpk 1 1000 g clay":v20363, "modelled erosional":v20364, "modelled highest period moisture index":v20365, "modelled highest period radiation":v20366, "modelled hydraulic conductivity ksat":v20367, "modelled isothermality":v20368, "modelled lowest period moisture index":v20369, "modelled lowest period radiation":v20370, 
  "modelled max temp warmest period":v20371, "modelled mean diurnal range":v20372, "modelled mean moisture index coldest quarter":v20373, "modelled mean moisture index highest quarter MI":v20374, "modelled mean moisture index lowest quater MI":v20375, "modelled mean moisture index warmest quarter":v20376, "modelled mean temp coldest quarter":v20377, "modelled mean temp driest quater":v20378, "modelled mean temp warmer quarter":v20379, "modelled mean temp wettest quarter":v20380, "modelled min temp coldest period":v20381, 
  "modelled moisture index seasonality":v20382, "modelled phos":v20383, "modelled precipitation coldets quarter":v20384, "modelled precipitation driest period":v20385, "modelled precipitation driest quarter":v20386, "modelled precipitation seasonality":v20387, "modelled precipitation warmest quarter":v20388, "modelled precipitation wettest period":v20389, "modelled precipitation wettest quarter":v20390, "modelled radiation coldest quarter":v20391, "modelled radiation driest quarter":v20392, "modelled radiation seasonality":v20393, 
  "modelled radiation warmest quarter":v20394, "modelled radiation wettest quarter":v20395, "modelled relief":v20396, "modelled ridgetopflat":v20397, "modelled rockalklty":v20398, "modelled rockgrainsz":v20399, "modelled rockhardness":v20400, "modelled rocknutrnt":v20401, "modelled roughness":v20402, "modelled sapk 1 1000 g sand":v20403, "modelled slope":v20404, "modelled soildepth":v20405, "modelled solpawhc":v20406, "modelled temperature annual range":v20407, "modelled temperature seasonality":v20408, 
  "modelled thpk 1 1000 g thickness":v20409, "modelled twi":v20410, "modelled valleybottom":v20411, "modelled whpk 1 1000 g water cap":v20412, "raw annual mean moisture index":v20413, "raw annual mean rad":v20414, "raw annual mean temp":v20415, "raw annual precipitation":v20416, "raw clpk 1 1000 g clay":v20417, "raw erosional":v20418, "raw highest period moisture index":v20419, "raw highest period radiation":v20420, "raw hydraulic conductivity ksat":v20421, "raw lowest period moisture index":v20422, 
  "raw lowest period radiation":v20423, "raw max temp warmest period":v20424, "raw mean diurnal range":v20425, "raw mean moisture index coldest quarter":v20426, "raw mean moisture index highest quarter MI":v20427, "raw mean moisture index lowest quater MI":v20428, "raw mean moisture index warmest quarter":v20429, "raw mean temp coldest quarter":v20430, "raw mean temp driest quater":v20431, "raw mean temp warmer quarter":v20432, "raw mean temp wettest quarter":v20433, "raw min temp coldest period":v20434, 
  "raw moisture index seasonality":v20435, "raw precipitation coldets quarter":v20436, "raw precipitation driest period":v20437, "raw precipitation driest quarter":v20438, "raw precipitation seasonality":v20439, "raw precipitation warmest quarter":v20440, "raw precipitation wettest period":v20441, "raw precipitation wettest quarter":v20442, "raw radiation coldest quarter":v20443, "raw radiation driest quarter":v20444, "raw radiation seasonality":v20445, "raw radiation warmest quarter":v20446, "raw radiation wettest quarter":v20447, 
  "raw relief":v20448, "raw ridgetopflat":v20449, "raw rockalklty":v20450, "raw rockgrainsz":v20451, "raw rockhardness":v20452, "raw rocknutrnt":v20453, "raw roughness":v20454, "raw sapk 1 1000 g sand":v20455, "raw slope":v20456, "raw soildepth":v20457, "raw solpawhc":v20458, "raw temperature annual range":v20459, "raw temperature seasonality":v20460, "raw thpk 1 1000 g thickness":v20461, "raw twi":v20462, "raw valleybottom":v20463};
  var v20464 = [.7523631571];
  var v20465 = [15.7872632313];
  var v20466 = [14.148368388];
  var v20467 = [1072.0410526316];
  var v20468 = [20124.6052631579];
  var v20469 = [85.6052631579];
  var v20470 = [.9810842105];
  var v20471 = [24.9694211327];
  var v20472 = [130.0578947368];
  var v20473 = [.4845000008];
  var v20474 = [.323263157];
  var v20475 = [7.2001579207];
  var v20476 = [25.3658948326];
  var v20477 = [10.2003158394];
  var v20478 = [.9645894769];
  var v20479 = [.9754421075];
  var v20480 = [.4105263146];
  var v20481 = [.4492105245];
  var v20482 = [9.284631582];
  var v20483 = [15.7744210745];
  var v20484 = [18.8259999486];
  var v20485 = [13.4179999638];
  var v20486 = [4.3915789415];
  var v20487 = [34.51];
  var v20488 = [.0319927152];
  var v20489 = [293.6242105263];
  var v20490 = [7.7615789474];
  var v20491 = [158.1031578947];
  var v20492 = [32.4805263158];
  var v20493 = [240.0526315789];
  var v20494 = [34.3584210526];
  var v20495 = [384.7031578947];
  var v20496 = [9.1081578742];
  var v20497 = [19.6293685346];
  var v20498 = [39.0931578947];
  var v20499 = [22.166210543];
  var v20500 = [13.3475263033];
  var v20501 = [74.8392543699];
  var v20502 = [4.1447368421];
  var v20503 = [4.9478947368];
  var v20504 = [4.0494736842];
  var v20505 = [5.6621052632];
  var v20506 = [4.4805263158];
  var v20507 = [17.1395764974];
  var v20508 = [60505.3947368421];
  var v20509 = [4.8369444082];
  var v20510 = [.9438947287];
  var v20511 = [110.2721052632];
  var v20512 = [20.8948948519];
  var v20513 = [1.3039000004];
  var v20514 = [270.7410526316];
  var v20515 = [5.8377228775];
  var v20516 = [11.2171052632];
  var v20517 = [38992.5510526315];
  var v20518 = [0];
  var v20519 = [14.5428571429];
  var v20520 = [12.8285714286];
  var v20521 = [1000.6];
  var v20522 = [18821.4285714286];
  var v20523 = [77.6];
  var v20524 = [.7714285714];
  var v20525 = [23.1428571429];
  var v20526 = [122.2857142857];
  var v20527 = [0];
  var v20528 = [6.4571428571];
  var v20529 = [23.5142857143];
  var v20530 = [9.2];
  var v20531 = [.4285714286];
  var v20532 = [.7428571429];
  var v20533 = [0];
  var v20534 = [0];
  var v20535 = [8.3714285714];
  var v20536 = [14.3428571429];
  var v20537 = [17.3428571429];
  var v20538 = [12.3428571429];
  var v20539 = [3.6];
  var v20540 = [32.3428571429];
  var v20541 = [272.2571428571];
  var v20542 = [7.2285714286];
  var v20543 = [149.8];
  var v20544 = [30.2857142857];
  var v20545 = [235.7714285714];
  var v20546 = [32.0857142857];
  var v20547 = [363.1714285714];
  var v20548 = [8.2571428571];
  var v20549 = [18];
  var v20550 = [37];
  var v20551 = [20.4285714286];
  var v20552 = [12.1714285714];
  var v20553 = [73.2285714286];
  var v20554 = [4.2571428571];
  var v20555 = [4.2];
  var v20556 = [3.6571428571];
  var v20557 = [4.6];
  var v20558 = [3.8];
  var v20559 = [15.9714285714];
  var v20560 = [55707.1428571429];
  var v20561 = [4.4];
  var v20562 = [.3142857143];
  var v20563 = [99.3714285714];
  var v20564 = [19.4857142857];
  var v20565 = [.8857142857];
  var v20566 = [256.2285714286];
  var v20567 = [5.7428571429];
  var v20568 = [9.3714285714];
  var v14830 = {"modelled annual mean moisture index":v20464, "modelled annual mean rad":v20465, "modelled annual mean temp":v20466, "modelled annual precipitation":v20467, "modelled clpk 1 1000 g clay":v20468, "modelled erosional":v20469, "modelled highest period moisture index":v20470, "modelled highest period radiation":v20471, "modelled hydraulic conductivity ksat":v20472, "modelled isothermality":v20473, "modelled lowest period moisture index":v20474, "modelled lowest period radiation":v20475, 
  "modelled max temp warmest period":v20476, "modelled mean diurnal range":v20477, "modelled mean moisture index coldest quarter":v20478, "modelled mean moisture index highest quarter MI":v20479, "modelled mean moisture index lowest quater MI":v20480, "modelled mean moisture index warmest quarter":v20481, "modelled mean temp coldest quarter":v20482, "modelled mean temp driest quater":v20483, "modelled mean temp warmer quarter":v20484, "modelled mean temp wettest quarter":v20485, "modelled min temp coldest period":v20486, 
  "modelled moisture index seasonality":v20487, "modelled phos":v20488, "modelled precipitation coldets quarter":v20489, "modelled precipitation driest period":v20490, "modelled precipitation driest quarter":v20491, "modelled precipitation seasonality":v20492, "modelled precipitation warmest quarter":v20493, "modelled precipitation wettest period":v20494, "modelled precipitation wettest quarter":v20495, "modelled radiation coldest quarter":v20496, "modelled radiation driest quarter":v20497, "modelled radiation seasonality":v20498, 
  "modelled radiation warmest quarter":v20499, "modelled radiation wettest quarter":v20500, "modelled relief":v20501, "modelled ridgetopflat":v20502, "modelled rockalklty":v20503, "modelled rockgrainsz":v20504, "modelled rockhardness":v20505, "modelled rocknutrnt":v20506, "modelled roughness":v20507, "modelled sapk 1 1000 g sand":v20508, "modelled slope":v20509, "modelled soildepth":v20510, "modelled solpawhc":v20511, "modelled temperature annual range":v20512, "modelled temperature seasonality":v20513, 
  "modelled thpk 1 1000 g thickness":v20514, "modelled twi":v20515, "modelled valleybottom":v20516, "modelled whpk 1 1000 g water cap":v20517, "raw annual mean moisture index":v20518, "raw annual mean rad":v20519, "raw annual mean temp":v20520, "raw annual precipitation":v20521, "raw clpk 1 1000 g clay":v20522, "raw erosional":v20523, "raw highest period moisture index":v20524, "raw highest period radiation":v20525, "raw hydraulic conductivity ksat":v20526, "raw lowest period moisture index":v20527, 
  "raw lowest period radiation":v20528, "raw max temp warmest period":v20529, "raw mean diurnal range":v20530, "raw mean moisture index coldest quarter":v20531, "raw mean moisture index highest quarter MI":v20532, "raw mean moisture index lowest quater MI":v20533, "raw mean moisture index warmest quarter":v20534, "raw mean temp coldest quarter":v20535, "raw mean temp driest quater":v20536, "raw mean temp warmer quarter":v20537, "raw mean temp wettest quarter":v20538, "raw min temp coldest period":v20539, 
  "raw moisture index seasonality":v20540, "raw precipitation coldets quarter":v20541, "raw precipitation driest period":v20542, "raw precipitation driest quarter":v20543, "raw precipitation seasonality":v20544, "raw precipitation warmest quarter":v20545, "raw precipitation wettest period":v20546, "raw precipitation wettest quarter":v20547, "raw radiation coldest quarter":v20548, "raw radiation driest quarter":v20549, "raw radiation seasonality":v20550, "raw radiation warmest quarter":v20551, "raw radiation wettest quarter":v20552, 
  "raw relief":v20553, "raw ridgetopflat":v20554, "raw rockalklty":v20555, "raw rockgrainsz":v20556, "raw rockhardness":v20557, "raw rocknutrnt":v20558, "raw roughness":v20559, "raw sapk 1 1000 g sand":v20560, "raw slope":v20561, "raw soildepth":v20562, "raw solpawhc":v20563, "raw temperature annual range":v20564, "raw temperature seasonality":v20565, "raw thpk 1 1000 g thickness":v20566, "raw twi":v20567, "raw valleybottom":v20568};
  var v20569 = [.3124999981];
  var v20570 = [19.4000000954];
  var v20571 = [17.6749999523];
  var v20572 = [369.5];
  var v20573 = [16375];
  var v20574 = [57.8125];
  var v20575 = [.7574999928];
  var v20576 = [28.8750004768];
  var v20577 = [200];
  var v20578 = [.484999992];
  var v20579 = [.0299999993];
  var v20580 = [9.7249999046];
  var v20581 = [33.1500005722];
  var v20582 = [13.2000000477];
  var v20583 = [.7025000006];
  var v20584 = [.7099999934];
  var v20585 = [.044999999];
  var v20586 = [.0574999992];
  var v20587 = [11.5250000954];
  var v20588 = [21.6499996185];
  var v20589 = [24.25];
  var v20590 = [12.1749999523];
  var v20591 = [5.6000000238];
  var v20592 = [90.25];
  var v20593 = [.0180416674];
  var v20594 = [160.25];
  var v20595 = [0];
  var v20596 = [28.75];
  var v20597 = [59.75];
  var v20598 = [48.75];
  var v20599 = [15];
  var v20600 = [174.5];
  var v20601 = [12.2000000477];
  var v20602 = [27.0499997139];
  var v20603 = [34.75];
  var v20604 = [26.0750002861];
  var v20605 = [11.0250000954];
  var v20606 = [10.535130471];
  var v20607 = [0];
  var v20608 = [5];
  var v20609 = [5.5];
  var v20610 = [5.5];
  var v20611 = [3.75];
  var v20612 = [1.172922425];
  var v20613 = [68250];
  var v20614 = [.6775645409];
  var v20615 = [.875];
  var v20616 = [120];
  var v20617 = [27.5250000954];
  var v20618 = [1.7350000143];
  var v20619 = [277.75];
  var v20620 = [7.6787025928];
  var v20621 = [35.9375];
  var v20622 = [23578.75];
  var v20623 = [0];
  var v20624 = [18.6666666667];
  var v20625 = [16.5];
  var v20626 = [378];
  var v20627 = [14916.6666666667];
  var v20628 = [69.5];
  var v20629 = [0];
  var v20630 = [28.5];
  var v20631 = [233.3333333333];
  var v20632 = [0];
  var v20633 = [9.1666666667];
  var v20634 = [31.6666666667];
  var v20635 = [12.5];
  var v20636 = [0];
  var v20637 = [0];
  var v20638 = [0];
  var v20639 = [0];
  var v20640 = [10.8333333333];
  var v20641 = [21.1666666667];
  var v20642 = [23];
  var v20643 = [11.6666666667];
  var v20644 = [5];
  var v20645 = [89.1666666667];
  var v20646 = [161.6666666667];
  var v20647 = [0];
  var v20648 = [33.1666666667];
  var v20649 = [59];
  var v20650 = [47.8333333333];
  var v20651 = [15];
  var v20652 = [176.3333333333];
  var v20653 = [11.5];
  var v20654 = [26.5];
  var v20655 = [35.1666666667];
  var v20656 = [25.6666666667];
  var v20657 = [10.3333333333];
  var v20658 = [12.3333333333];
  var v20659 = [0];
  var v20660 = [4.1666666667];
  var v20661 = [5];
  var v20662 = [6];
  var v20663 = [3.8333333333];
  var v20664 = [1];
  var v20665 = [71500];
  var v20666 = [.3333333333];
  var v20667 = [.5];
  var v20668 = [122.6666666667];
  var v20669 = [26.3333333333];
  var v20670 = [1.1666666667];
  var v20671 = [315.8333333333];
  var v20672 = [6.6666666667];
  var v20673 = [29];
  var v14831 = {"modelled annual mean moisture index":v20569, "modelled annual mean rad":v20570, "modelled annual mean temp":v20571, "modelled annual precipitation":v20572, "modelled clpk 1 1000 g clay":v20573, "modelled erosional":v20574, "modelled highest period moisture index":v20575, "modelled highest period radiation":v20576, "modelled hydraulic conductivity ksat":v20577, "modelled isothermality":v20578, "modelled lowest period moisture index":v20579, "modelled lowest period radiation":v20580, 
  "modelled max temp warmest period":v20581, "modelled mean diurnal range":v20582, "modelled mean moisture index coldest quarter":v20583, "modelled mean moisture index highest quarter MI":v20584, "modelled mean moisture index lowest quater MI":v20585, "modelled mean moisture index warmest quarter":v20586, "modelled mean temp coldest quarter":v20587, "modelled mean temp driest quater":v20588, "modelled mean temp warmer quarter":v20589, "modelled mean temp wettest quarter":v20590, "modelled min temp coldest period":v20591, 
  "modelled moisture index seasonality":v20592, "modelled phos":v20593, "modelled precipitation coldets quarter":v20594, "modelled precipitation driest period":v20595, "modelled precipitation driest quarter":v20596, "modelled precipitation seasonality":v20597, "modelled precipitation warmest quarter":v20598, "modelled precipitation wettest period":v20599, "modelled precipitation wettest quarter":v20600, "modelled radiation coldest quarter":v20601, "modelled radiation driest quarter":v20602, "modelled radiation seasonality":v20603, 
  "modelled radiation warmest quarter":v20604, "modelled radiation wettest quarter":v20605, "modelled relief":v20606, "modelled ridgetopflat":v20607, "modelled rockalklty":v20608, "modelled rockgrainsz":v20609, "modelled rockhardness":v20610, "modelled rocknutrnt":v20611, "modelled roughness":v20612, "modelled sapk 1 1000 g sand":v20613, "modelled slope":v20614, "modelled soildepth":v20615, "modelled solpawhc":v20616, "modelled temperature annual range":v20617, "modelled temperature seasonality":v20618, 
  "modelled thpk 1 1000 g thickness":v20619, "modelled twi":v20620, "modelled valleybottom":v20621, "modelled whpk 1 1000 g water cap":v20622, "raw annual mean moisture index":v20623, "raw annual mean rad":v20624, "raw annual mean temp":v20625, "raw annual precipitation":v20626, "raw clpk 1 1000 g clay":v20627, "raw erosional":v20628, "raw highest period moisture index":v20629, "raw highest period radiation":v20630, "raw hydraulic conductivity ksat":v20631, "raw lowest period moisture index":v20632, 
  "raw lowest period radiation":v20633, "raw max temp warmest period":v20634, "raw mean diurnal range":v20635, "raw mean moisture index coldest quarter":v20636, "raw mean moisture index highest quarter MI":v20637, "raw mean moisture index lowest quater MI":v20638, "raw mean moisture index warmest quarter":v20639, "raw mean temp coldest quarter":v20640, "raw mean temp driest quater":v20641, "raw mean temp warmer quarter":v20642, "raw mean temp wettest quarter":v20643, "raw min temp coldest period":v20644, 
  "raw moisture index seasonality":v20645, "raw precipitation coldets quarter":v20646, "raw precipitation driest period":v20647, "raw precipitation driest quarter":v20648, "raw precipitation seasonality":v20649, "raw precipitation warmest quarter":v20650, "raw precipitation wettest period":v20651, "raw precipitation wettest quarter":v20652, "raw radiation coldest quarter":v20653, "raw radiation driest quarter":v20654, "raw radiation seasonality":v20655, "raw radiation warmest quarter":v20656, "raw radiation wettest quarter":v20657, 
  "raw relief":v20658, "raw ridgetopflat":v20659, "raw rockalklty":v20660, "raw rockgrainsz":v20661, "raw rockhardness":v20662, "raw rocknutrnt":v20663, "raw roughness":v20664, "raw sapk 1 1000 g sand":v20665, "raw slope":v20666, "raw soildepth":v20667, "raw solpawhc":v20668, "raw temperature annual range":v20669, "raw temperature seasonality":v20670, "raw thpk 1 1000 g thickness":v20671, "raw twi":v20672, "raw valleybottom":v20673};
  var v20674 = [0];
  var v20675 = [16];
  var v20676 = [13.8333333333];
  var v20677 = [683.8333333333];
  var v20678 = [9833.3333333333];
  var v20679 = [67.1666666667];
  var v20680 = [.6666666667];
  var v20681 = [26];
  var v20682 = [266.6666666667];
  var v20683 = [0];
  var v20684 = [6.1666666667];
  var v20685 = [25.1666666667];
  var v20686 = [10];
  var v20687 = [0];
  var v20688 = [.6666666667];
  var v20689 = [0];
  var v20690 = [0];
  var v20691 = [9.5];
  var v20692 = [18.1666666667];
  var v20693 = [18.5];
  var v20694 = [9.6666666667];
  var v20695 = [5];
  var v20696 = [61.3333333333];
  var v20697 = [267.8333333333];
  var v20698 = [0];
  var v20699 = [84.1666666667];
  var v20700 = [46];
  var v20701 = [85.6666666667];
  var v20702 = [24.5];
  var v20703 = [272.8333333333];
  var v20704 = [8.3333333333];
  var v20705 = [24];
  var v20706 = [43.6666666667];
  var v20707 = [23.6666666667];
  var v20708 = [7.8333333333];
  var v20709 = [29.6666666667];
  var v20710 = [0];
  var v20711 = [4.3333333333];
  var v20712 = [4.3333333333];
  var v20713 = [2.1666666667];
  var v20714 = [2.1666666667];
  var v20715 = [21.6666666667];
  var v20716 = [81666.6666666667];
  var v20717 = [1.5];
  var v20718 = [.6666666667];
  var v20719 = [124.8333333333];
  var v20720 = [20.1666666667];
  var v20721 = [1];
  var v20722 = [597.3333333333];
  var v20723 = [8.8333333333];
  var v20724 = [6.1666666667];
  var v14832 = {"modelled annual mean moisture index":[], "modelled annual mean rad":[], "modelled annual mean temp":[], "modelled annual precipitation":[], "modelled clpk 1 1000 g clay":[], "modelled erosional":[], "modelled highest period moisture index":[], "modelled highest period radiation":[], "modelled hydraulic conductivity ksat":[], "modelled isothermality":[], "modelled lowest period moisture index":[], "modelled lowest period radiation":[], "modelled max temp warmest period":[], "modelled mean diurnal range":[], 
  "modelled mean moisture index coldest quarter":[], "modelled mean moisture index highest quarter MI":[], "modelled mean moisture index lowest quater MI":[], "modelled mean moisture index warmest quarter":[], "modelled mean temp coldest quarter":[], "modelled mean temp driest quater":[], "modelled mean temp warmer quarter":[], "modelled mean temp wettest quarter":[], "modelled min temp coldest period":[], "modelled moisture index seasonality":[], "modelled phos":[], "modelled precipitation coldets quarter":[], 
  "modelled precipitation driest period":[], "modelled precipitation driest quarter":[], "modelled precipitation seasonality":[], "modelled precipitation warmest quarter":[], "modelled precipitation wettest period":[], "modelled precipitation wettest quarter":[], "modelled radiation coldest quarter":[], "modelled radiation driest quarter":[], "modelled radiation seasonality":[], "modelled radiation warmest quarter":[], "modelled radiation wettest quarter":[], "modelled relief":[], "modelled ridgetopflat":[], 
  "modelled rockalklty":[], "modelled rockgrainsz":[], "modelled rockhardness":[], "modelled rocknutrnt":[], "modelled roughness":[], "modelled sapk 1 1000 g sand":[], "modelled slope":[], "modelled soildepth":[], "modelled solpawhc":[], "modelled temperature annual range":[], "modelled temperature seasonality":[], "modelled thpk 1 1000 g thickness":[], "modelled twi":[], "modelled valleybottom":[], "modelled whpk 1 1000 g water cap":[], "raw annual mean moisture index":v20674, "raw annual mean rad":v20675, 
  "raw annual mean temp":v20676, "raw annual precipitation":v20677, "raw clpk 1 1000 g clay":v20678, "raw erosional":v20679, "raw highest period moisture index":v20680, "raw highest period radiation":v20681, "raw hydraulic conductivity ksat":v20682, "raw lowest period moisture index":v20683, "raw lowest period radiation":v20684, "raw max temp warmest period":v20685, "raw mean diurnal range":v20686, "raw mean moisture index coldest quarter":v20687, "raw mean moisture index highest quarter MI":v20688, 
  "raw mean moisture index lowest quater MI":v20689, "raw mean moisture index warmest quarter":v20690, "raw mean temp coldest quarter":v20691, "raw mean temp driest quater":v20692, "raw mean temp warmer quarter":v20693, "raw mean temp wettest quarter":v20694, "raw min temp coldest period":v20695, "raw moisture index seasonality":v20696, "raw precipitation coldets quarter":v20697, "raw precipitation driest period":v20698, "raw precipitation driest quarter":v20699, "raw precipitation seasonality":v20700, 
  "raw precipitation warmest quarter":v20701, "raw precipitation wettest period":v20702, "raw precipitation wettest quarter":v20703, "raw radiation coldest quarter":v20704, "raw radiation driest quarter":v20705, "raw radiation seasonality":v20706, "raw radiation warmest quarter":v20707, "raw radiation wettest quarter":v20708, "raw relief":v20709, "raw ridgetopflat":v20710, "raw rockalklty":v20711, "raw rockgrainsz":v20712, "raw rockhardness":v20713, "raw rocknutrnt":v20714, "raw roughness":v20715, 
  "raw sapk 1 1000 g sand":v20716, "raw slope":v20717, "raw soildepth":v20718, "raw solpawhc":v20719, "raw temperature annual range":v20720, "raw temperature seasonality":v20721, "raw thpk 1 1000 g thickness":v20722, "raw twi":v20723, "raw valleybottom":v20724};
  var v20725 = [.7600000054];
  var v20726 = [17.4749999046];
  var v20727 = [17.6499996185];
  var v20728 = [1174];
  var v20729 = [36312.5];
  var v20730 = [75];
  var v20731 = [.962500006];
  var v20732 = [24.5249996185];
  var v20733 = [200];
  var v20734 = [.5150000006];
  var v20735 = [.400000006];
  var v20736 = [10.2999997139];
  var v20737 = [28.25];
  var v20738 = [11.6499998569];
  var v20739 = [.9274999946];
  var v20740 = [.9399999976];
  var v20741 = [.4825000018];
  var v20742 = [.6875];
  var v20743 = [12.5];
  var v20744 = [13.875];
  var v20745 = [22.2500004768];
  var v20746 = [21.8999996185];
  var v20747 = [5.5750000477];
  var v20748 = [25.25];
  var v20749 = [.0735000009];
  var v20750 = [186.5];
  var v20751 = [5.75];
  var v20752 = [144.5];
  var v20753 = [45.5];
  var v20754 = [452];
  var v20755 = [45.75];
  var v20756 = [509.5];
  var v20757 = [12.1000001431];
  var v20758 = [15.5250000954];
  var v20759 = [27.5];
  var v20760 = [21.7000002861];
  var v20761 = [19.7750000954];
  var v20762 = [77.4553109407];
  var v20763 = [0];
  var v20764 = [4.75];
  var v20765 = [3];
  var v20766 = [4.5];
  var v20767 = [4.75];
  var v20768 = [16.6225522161];
  var v20769 = [43625];
  var v20770 = [4.8600849956];
  var v20771 = [1.1749999821];
  var v20772 = [159.5];
  var v20773 = [22.6749997139];
  var v20774 = [1.3325000107];
  var v20775 = [219];
  var v20776 = [10.4112542868];
  var v20777 = [28.125];
  var v20778 = [35500];
  var v20779 = [0];
  var v20780 = [17.4];
  var v20781 = [17.4];
  var v20782 = [1239.4];
  var v20783 = [37300];
  var v20784 = [90];
  var v20785 = [.6];
  var v20786 = [24.2];
  var v20787 = [220];
  var v20788 = [0];
  var v20789 = [10.6];
  var v20790 = [28];
  var v20791 = [11];
  var v20792 = [0];
  var v20793 = [.6];
  var v20794 = [0];
  var v20795 = [0];
  var v20796 = [12.8];
  var v20797 = [14.2];
  var v20798 = [22];
  var v20799 = [21.6];
  var v20800 = [5.8];
  var v20801 = [26.6];
  var v20802 = [177.4];
  var v20803 = [4.6];
  var v20804 = [135.6];
  var v20805 = [52.8];
  var v20806 = [497.4];
  var v20807 = [52.4];
  var v20808 = [579.6];
  var v20809 = [12.2];
  var v20810 = [15.8];
  var v20811 = [25.8];
  var v20812 = [21.2];
  var v20813 = [19.2];
  var v20814 = [81.6];
  var v20815 = [0];
  var v20816 = [4.6];
  var v20817 = [3];
  var v20818 = [4.8];
  var v20819 = [5];
  var v20820 = [15.4];
  var v20821 = [42950];
  var v20822 = [4.6];
  var v20823 = [.8];
  var v20824 = [160.8];
  var v20825 = [21.6];
  var v20826 = [1];
  var v20827 = [227.8];
  var v20828 = [10.4];
  var v20829 = [13.6];
  var v14833 = {"modelled annual mean moisture index":v20725, "modelled annual mean rad":v20726, "modelled annual mean temp":v20727, "modelled annual precipitation":v20728, "modelled clpk 1 1000 g clay":v20729, "modelled erosional":v20730, "modelled highest period moisture index":v20731, "modelled highest period radiation":v20732, "modelled hydraulic conductivity ksat":v20733, "modelled isothermality":v20734, "modelled lowest period moisture index":v20735, "modelled lowest period radiation":v20736, 
  "modelled max temp warmest period":v20737, "modelled mean diurnal range":v20738, "modelled mean moisture index coldest quarter":v20739, "modelled mean moisture index highest quarter MI":v20740, "modelled mean moisture index lowest quater MI":v20741, "modelled mean moisture index warmest quarter":v20742, "modelled mean temp coldest quarter":v20743, "modelled mean temp driest quater":v20744, "modelled mean temp warmer quarter":v20745, "modelled mean temp wettest quarter":v20746, "modelled min temp coldest period":v20747, 
  "modelled moisture index seasonality":v20748, "modelled phos":v20749, "modelled precipitation coldets quarter":v20750, "modelled precipitation driest period":v20751, "modelled precipitation driest quarter":v20752, "modelled precipitation seasonality":v20753, "modelled precipitation warmest quarter":v20754, "modelled precipitation wettest period":v20755, "modelled precipitation wettest quarter":v20756, "modelled radiation coldest quarter":v20757, "modelled radiation driest quarter":v20758, "modelled radiation seasonality":v20759, 
  "modelled radiation warmest quarter":v20760, "modelled radiation wettest quarter":v20761, "modelled relief":v20762, "modelled ridgetopflat":v20763, "modelled rockalklty":v20764, "modelled rockgrainsz":v20765, "modelled rockhardness":v20766, "modelled rocknutrnt":v20767, "modelled roughness":v20768, "modelled sapk 1 1000 g sand":v20769, "modelled slope":v20770, "modelled soildepth":v20771, "modelled solpawhc":v20772, "modelled temperature annual range":v20773, "modelled temperature seasonality":v20774, 
  "modelled thpk 1 1000 g thickness":v20775, "modelled twi":v20776, "modelled valleybottom":v20777, "modelled whpk 1 1000 g water cap":v20778, "raw annual mean moisture index":v20779, "raw annual mean rad":v20780, "raw annual mean temp":v20781, "raw annual precipitation":v20782, "raw clpk 1 1000 g clay":v20783, "raw erosional":v20784, "raw highest period moisture index":v20785, "raw highest period radiation":v20786, "raw hydraulic conductivity ksat":v20787, "raw lowest period moisture index":v20788, 
  "raw lowest period radiation":v20789, "raw max temp warmest period":v20790, "raw mean diurnal range":v20791, "raw mean moisture index coldest quarter":v20792, "raw mean moisture index highest quarter MI":v20793, "raw mean moisture index lowest quater MI":v20794, "raw mean moisture index warmest quarter":v20795, "raw mean temp coldest quarter":v20796, "raw mean temp driest quater":v20797, "raw mean temp warmer quarter":v20798, "raw mean temp wettest quarter":v20799, "raw min temp coldest period":v20800, 
  "raw moisture index seasonality":v20801, "raw precipitation coldets quarter":v20802, "raw precipitation driest period":v20803, "raw precipitation driest quarter":v20804, "raw precipitation seasonality":v20805, "raw precipitation warmest quarter":v20806, "raw precipitation wettest period":v20807, "raw precipitation wettest quarter":v20808, "raw radiation coldest quarter":v20809, "raw radiation driest quarter":v20810, "raw radiation seasonality":v20811, "raw radiation warmest quarter":v20812, "raw radiation wettest quarter":v20813, 
  "raw relief":v20814, "raw ridgetopflat":v20815, "raw rockalklty":v20816, "raw rockgrainsz":v20817, "raw rockhardness":v20818, "raw rocknutrnt":v20819, "raw roughness":v20820, "raw sapk 1 1000 g sand":v20821, "raw slope":v20822, "raw soildepth":v20823, "raw solpawhc":v20824, "raw temperature annual range":v20825, "raw temperature seasonality":v20826, "raw thpk 1 1000 g thickness":v20827, "raw twi":v20828, "raw valleybottom":v20829};
  var v8883 = {"Replace":v14819, "this":v14820, "with":v14821, "your":v14822, "own":v14823, "phylogeny":v14824, "in":v14825, "newick":v14826, "form":v14827, "tree":v14828, "take":v14829, "care":v14830, "to":v14831, "remove":v14832, "quotes_and_other_html_special_characters":v14833};
  var initial = {codeBase:"../..", width:550, height:800, alignName:true, lateralise:false, levelsToShow:10, branchMultiplier:1, tree:"((Replace:0.007667365048364433,(this:0.005369261896034483,(with:0.011621228506591308,your:2.100100506802205E-6):0.0027929350821030707):0.012281999999150084):0.0400709772514759,(((own:0.0012025949078822151,phylogeny:0.0024332420478173633):0.006421131153429474,(in:0.008984623535641459,(newick:0.0012074724370825796,form:0.004013224017395373):0.003744210327868966):0.00542385295016945):0.023689622298502563,(tree:0.036702751435909745,((take:0.002448206437464337,care:0.0024347868455663196):0.001504447318880206,(to:0.0023787045835393372,(remove:2.100100506802205E-6,quotes_and_other_html_special_characters:0.01728824049672087):0.010690121488212884):6.006911375427831E-4):0.005347250770554118):0.014788598652250115):0.0400709772514759);", 
  character:v8883};
  var v20831 = $jit.Trans;
  var v14839 = v20831.Quart;
  var v8894 = v14839.easeInOut;
  var v8895 = Number.MAX_VALUE;
  var v8896 = {enable:true, panning:"avoid nodes", zooming:50};
  var v8897 = {enable:true, onShow:v1$$1};
  var v8898 = {height:40, width:20, type:"circle", dim:5, color:"#aaa", overridable:true, align:"left"};
  var v14840 = {color:"#EEF2F7"};
  var v8899 = {background:v14840};
  var v8900 = {type:"line", color:"#000", overridable:true, lineWidth:2};
  var v8901 = {enable:true, type:"Native", onMouseEnter:v2$$1, onMouseLeave:v3$$1, onClick:v6};
  var v8902 = {enable:true, onShow:v9};
  var config = {injectInto:"infovis", width:800, height:600, offsetX:0, align:"left", alignName:false, lateralise:true, branchLength:true, branchMultiplier:1, duration:1E3, fps:10, transition:v8894, levelDistance:20, levelsToShow:v8895, constrained:false, firstCharacter:"Raceme_length_median", Navigation:v8896, Tips:v8897, Node:v8898, Canvas:v8899, Edge:v8900, Events:v8901, presentClade:v7, onPresentClade:v8, tmpl:"<ul><% _.each(nodeList , function( value ) { %> <li> <%= value.name %> </li> <% }); %> </ul>", 
  Tips:v8902, onBeforeCompute:v10, onAfterCompute:v11, onCreateLabel:v13, onBeforePlotNode:v14, onBeforePlotLine:v15, onClick:v17, onPlaceLabel:v18};
  var height$$9 = config.height;
  var v8903 = config.width;
  var v14841 = !v8903;
  if (v14841) {
    v8903 = 800;
  }
  var width$$9 = v8903;
  var v8904 = $jit.util;
  introspect(JAM.policy.p3) {
    v8904.extend(config, initial);
  }
  introspect(JAM.policy.p3) {
    Nav.load(config);
  }
  var html$$1;
  introspect(JAM.policy.p3) {
    var rightContainer$$1 = $jit.id("right-jitcontainer")
  }
  introspect(JAM.policy.p3) {
    var popup$$1 = $jit.id("popup")
  }
  introspect(JAM.policy.p3) {
    var popupText = $jit.id("popup-text")
  }
  settingsPage();
  var dataObject;
  var json$$1 = "";
  var v8907 = config.tree;
  if (v8907) {
    var v14842 = Smits.PhyloCanvas;
    var v8905 = v14842.NewickParse;
    var v8906 = config.tree;
    dataObject = new v8905(v8906);
  }
  var v14843 = typeof dataObject;
  var v8909 = v14843 === "object";
  if (v8909) {
    introspect(JAM.policy.p3) {
      var v8908 = dataObject.getRoot()
    }
    json$$1 = smitsNode2JSON(v8908);
  }
  var selectedClade;
  introspect(JAM.policy.p3) {
    var zoomIN = $jit.id("zoomIN")
  }
  introspect(JAM.policy.p3) {
    var zoomOUT = $jit.id("zoomOUT")
  }
  introspect(JAM.policy.p3) {
    var world = $jit.id("world")
  }
  var v8910 = $jit.Phylo;
  st = new v8910(config);
  isLateralise = v19;
  introspect(JAM.policy.p3) {
    st.loadJSON(json$$1);
  }
  introspect(JAM.policy.p3) {
    st.compute();
  }
  var v8911 = config.character;
  var v14844 = !v8911;
  if (v14844) {
    v8911 = {};
  }
  st.character = v8911;
  introspect(JAM.policy.p3) {
    var legendElem$$1 = $jit.id("legend")
  }
  var v8917 = st.character;
  if (v8917) {
    introspect(JAM.policy.p3) {
      var v8912 = st.colorCharacter()
    }
    var v14845 = !v8912;
    if (v14845) {
      v8912 = "";
    }
    html$$1 = v8912;
    introspect(JAM.policy.p3) {
      var v8913 = jQuery("#legendBody")
    }
    introspect(JAM.policy.p3) {
      v8913.html(html$$1);
    }
    var v8914 = legendElem$$1.style;
    v8914.display = "inline";
    var v8915 = st.characterList;
    updateCharacter(v8915);
  } else {
    var v8916 = legendElem$$1.style;
    v8916.display = "none";
  }
  introspect(JAM.policy.p3) {
    var north = $jit.id("north")
  }
  introspect(JAM.policy.p3) {
    var east = $jit.id("east")
  }
  introspect(JAM.policy.p3) {
    var west = $jit.id("west")
  }
  introspect(JAM.policy.p3) {
    var south = $jit.id("south")
  }
  north.onmousedown = south.onmousedown = east.onmousedown = west.onmousedown = clickHandler;
  zoomIN.onclick = zoomOUT.onclick = zoomHandler;
  world.onclick = v20;
  var result = [];
  var pos;
  var prevSearch;
  introspect(JAM.policy.p3) {
    var searchBtn = $jit.id("searchString")
  }
  var v8919 = searchBtn.addEventListener;
  if (v8919) {
    introspect(JAM.policy.p3) {
      searchBtn.addEventListener("keydown", keyHandler, false);
    }
  } else {
    var v8918 = searchBtn.attachEvent;
    if (v8918) {
      introspect(JAM.policy.p3) {
        searchBtn.attachEvent("onkeydown", keyHandler);
      }
    }
  }
  introspect(JAM.policy.p3) {
    var next = $jit.id("next")
  }
  introspect(JAM.policy.p3) {
    var previous = $jit.id("previous")
  }
  next.onclick = v21;
  previous.onclick = v22;
  onClickAlign = v23;
  onSetRoot = v24;
  onLateralise = v25;
  var animateDuration;
  onAnimate = v26;
  onRender = v27;
  onGetCharacter = v28;
  onBranchLength = v29;
  onBranchMultiply = v30;
  toggleScreen = v31;
  onSetCharacter = v32;
  var v8920 = Backbone.Router;
  var v14846 = {"":"start", "character/*char":"characterSelection"};
  var v8921 = {routes:v14846, start:v33, characterSelection:v34};
  introspect(JAM.policy.p3) {
    var AppRouter = v8920.extend(v8921)
  }
  var app = new AppRouter;
  var v8922 = Backbone.history;
  introspect(JAM.policy.p3) {
    v8922.start();
  }
  return;
}
function init() {
  phylogenyExplorer_init();
  return;
}
var labelType;
var useGradients;
var nativeTextSupport;
var animate;
v35();
var Log = {elem:false, write:v36};
var Nav = {elem:false, load:v38};
var settingsPage;
var updateCharacter;
var onSetCharacter;
var onClickAlign;
var onSetRoot;
var onLateralise;
var isLateralise;
var onAnimate;
var onRender;
var onBranchLength;
var onBranchMultiply;
var onGetCharacter;
var st;
var toggleScreen;
updateCharacter = v39;
settingsPage = v40;
var phylojive = v43();
v614();
v1090(window);
v1120(jQuery);
v1147(jQuery);
v1165(jQuery);
v1212(jQuery);
v1235(jQuery);
v1281(jQuery);
v1294(jQuery);
v1351(jQuery);
var v30870 = jQuery.effects;
var v30876 = !v30870;
if (v30876) {
  v1390(jQuery);
}
v1394(jQuery);
v1400(jQuery);
v1404(jQuery);
v1408(jQuery);
v1412(jQuery);
v1416(jQuery);
v1420(jQuery);
v1424(jQuery);
v1429(jQuery);
v1439(jQuery);
v1444(jQuery);
v1448(jQuery);
v1452(jQuery);
v1481(jQuery);
v1525(jQuery);
v1544(jQuery);
v1579(jQuery);
v1675(jQuery);
v1729(jQuery);
v1744(jQuery);
v1752(jQuery);
v1784(jQuery);
v1843(jQuery);
v1885(jQuery, document, window);
Smits = {};
Smits.Common = {nodeIdIncrement:0, activeNode:0, roundFloat:v1886, apply:v1887, addRaphEventHandler:v1890, isInteger:v1891, isXMLSerializerAvailable:v1892, createSvgEl:v1893, createGradientEl:v1894, setCssStyle:v1895};
var v8923 = Smits;
var v31253 = v1903();
v8923.PhyloCanvas = v31253;
var v8924 = Smits.PhyloCanvas;
v8924.prototype = {};
var v8925 = Smits.PhyloCanvas;
var v31254 = v1905();
v8925.Node = v31254;
var v14847 = Smits.PhyloCanvas;
var v8926 = v14847.Node;
v8926.prototype = {getCountAllChildren:v1906, getCountImmediateChildren:v1907, getMidbranchPosition:v1908};
var v8927 = Smits.PhyloCanvas;
var v31255 = v1914();
v8927.NewickParse = v31255;
var v14848 = Smits.PhyloCanvas;
var v8928 = v14848.NewickParse;
v8928.prototype = {};
var v8929 = Smits.PhyloCanvas;
var v31256 = v1920();
v8929.PhyloxmlParse = v31256;
var v14849 = Smits.PhyloCanvas;
var v8930 = v14849.PhyloxmlParse;
v8930.prototype = {};
var v8931 = Smits.PhyloCanvas;
var v31257 = v1926();
v8931.NexmlParse = v31257;
var v14850 = Smits.PhyloCanvas;
var v8932 = v14850.NexmlParse;
v8932.prototype = {};
var v8933 = Smits.PhyloCanvas;
var v31258 = v1932();
v8933.NexmlJsonParse = v31258;
var v14851 = Smits.PhyloCanvas;
var v8934 = v14851.NexmlParse;
v8934.prototype = {};
var v8935 = Smits.PhyloCanvas;
v8935.Render = {};
var v14852 = Smits.PhyloCanvas;
var v8936 = v14852.Render;
var v14853 = {stroke:"rgb(0,0,0)", "stroke-width":1};
var v14854 = {"font-family":"Verdana", "font-size":12, "text-anchor":"start"};
var v14855 = {stroke:"rgb(0,0,0)", "stroke-width":1};
var v14856 = {stroke:"rgb(200,200,200)", "stroke-dasharray":". "};
var v14857 = {fill:"#EEE", stroke:"#DDD"};
var v14858 = {fill:"red"};
var v14859 = {fill:"#003300", stroke:"#DDD"};
v8936.Style = {line:v14853, text:v14854, path:v14855, connectedDash:v14856, textSecantBg:v14857, highlightedEdgeCircle:v14858, barChart:v14859, getStyle:v1933};
var v14860 = Smits.PhyloCanvas;
var v8937 = v14860.Render;
var v20832 = !1;
var v20833 = !1;
var v14861 = {bufferX:200, paddingX:10, paddingY:20, bufferInnerLabels:10, bufferOuterLabels:5, minHeightBetweenLeaves:10, alignPadding:0, alignRight:v20832, showScaleBar:v20833};
var v14862 = {bufferRadius:.33, bufferAngle:20, initStartAngle:160, innerCircleRadius:0, minHeightBetweenLeaves:5, bufferInnerLabels:2, bufferOuterLabels:5};
var v14863 = !1;
v8937.Parameters = {jsOverride:0, Rectangular:v14861, Circular:v14862, binaryCharts:[], integratedBinaryCharts:[], barCharts:[], binaryChartBufferInner:5, binaryChartBufferSiblings:.01, binaryChartThickness:15, binaryChartDisjointed:v14863, barChartBufferInner:3, barChartHeight:50, barChartWidth:.5, mouseRollOver:v1934, mouseRollOut:v1935, set:v1936};
var v14864 = Smits.PhyloCanvas;
var v8938 = v14864.Render;
var v31259 = v1938();
v8938.Line = v31259;
var v14865 = Smits.PhyloCanvas;
var v8939 = v14865.Render;
var v31260 = v1940();
v8939.Text = v31260;
var v14866 = Smits.PhyloCanvas;
var v8940 = v14866.Render;
var v31261 = v1942();
v8940.Path = v31261;
var v14867 = Smits.PhyloCanvas;
var v8941 = v14867.Render;
var v31262 = v1944();
v8941.Circle = v31262;
var v14868 = Smits.PhyloCanvas;
var v8942 = v14868.Render;
var v31263 = v1946();
v8942.SVG = v31263;
var v20834 = Smits.PhyloCanvas;
var v14869 = v20834.Render;
var v8943 = v14869.SVG;
v8943.prototype = {render:v1947, draw:v1948};
var v14870 = Smits.PhyloCanvas;
var v8944 = v14870.Render;
var v31264 = v1952();
v8944.Phylogram = v31264;
var v20835 = Smits.PhyloCanvas;
var v14871 = v20835.Render;
var v8945 = v14871.Phylogram;
v8945.prototype = {};
var v14872 = Smits.PhyloCanvas;
var v8946 = v14872.Render;
var v31265 = v1956();
v8946.CircularPhylogram = v31265;
var v20836 = Smits.PhyloCanvas;
var v14873 = v20836.Render;
var v8947 = v14873.CircularPhylogram;
v8947.prototype = {};
var XMLObjectifier = v1991();
introspect(JAM.policy.p3) {
  v2127.call(this);
}
introspect(JAM.policy.p3) {
  v2226.call(this);
}
var v8948 = document.body;
v8948.onload = init

JAM.stopProfile('load');
