// phylojive.js
function v2226() {
  function v2225(a$$944, b$$831, c$$678) {
    function v2224(d$$505, e$$426) {
      var v2227;
      if (d$$505 === b$$831) {
        v2227 = e$$426;
      } else {
        v2227 = d$$505;
      }
      e$$426 = v2227;
      var v2228;
      if (a$$944) {
        v2228 = JAM.call(a$$944, null, [b$$831, e$$426, c$$678], JAM.policy.p3);
      } else {
        v2228 = JAM.call(b$$831.trigger, b$$831, ["error", b$$831, e$$426, c$$678], JAM.policy.p3);
      }
      v2228;
      return;
    }
    return v2224;
  }
  function v2223(a$$942, b$$830, c$$677) {
    function v2222(a$$943) {
      JAM.call(a$$943.setRequestHeader, a$$943, ["X-HTTP-Method-Override", d$$504], JAM.policy.p3);
      return;
    }
    var d$$504 = H$$5[a$$942];
    if (!c$$677) {
      c$$677 = {};
    }
    var e$$425 = {type:d$$504, dataType:"json"};
    var v2229 = c$$677.url;
    if (!v2229) {
      var v8973 = e$$425;
      var v14917 = JAM.call(n$$110, null, [b$$830, "url"], JAM.policy.p3);
      if (!v14917) {
        v14917 = JAM.call(t$$33, null, [], JAM.policy.p3);
      }
      v8973.url = v14917;
    }
    var v14918 = !c$$677.data;
    if (v14918) {
      v14918 = b$$830;
    }
    var v8975 = v14918;
    if (v8975) {
      var v14919 = "create" == a$$942;
      if (!v14919) {
        v14919 = "update" == a$$942;
      }
      v8975 = v14919;
    }
    if (v8975) {
      e$$425.contentType = "application/json";
      var v8976 = e$$425;
      var v31132 = JAM.call(JSON.stringify, JSON, [JAM.call(b$$830.toJSON, b$$830, [], JAM.policy.p3)], JAM.policy.p3);
      v8976.data = v31132;
    }
    var v2231 = g$$232.emulateJSON;
    if (v2231) {
      e$$425.contentType = "application/x-www-form-urlencoded";
      var v14921;
      if (e$$425.data) {
        v14921 = {model:e$$425.data};
      } else {
        v14921 = {};
      }
      e$$425.data = v14921;
    }
    var v8977 = g$$232.emulateHTTP;
    if (v8977) {
      var v14922 = "PUT" === d$$504;
      if (!v14922) {
        v14922 = "DELETE" === d$$504;
      }
      v8977 = v14922;
    }
    if (v8977) {
      var v14923 = g$$232.emulateJSON;
      if (v14923) {
        e$$425.data._method = d$$504;
      }
      e$$425.type = "POST";
      e$$425.beforeSend = v2222;
    }
    var v8978 = "GET" !== e$$425.type;
    if (v8978) {
      v8978 = !g$$232.emulateJSON;
    }
    var v2233 = v8978;
    if (v2233) {
      e$$425.processData = !1;
    }
    return JAM.call(i$$241.ajax, i$$241, [JAM.call(f$$232.extend, f$$232, [e$$425, c$$677], JAM.policy.p3)], JAM.policy.p3);
  }
  function v2221(a$$941, b$$829) {
    var c$$676 = JAM.call(G$$5, null, [this, a$$941, b$$829], JAM.policy.p3);
    c$$676.extend = this.extend;
    return c$$676;
  }
  function v2220() {
    if (this.el) {
      JAM.call(this.setElement, this, [this.el, !1], JAM.policy.p3);
    } else {
      var v2237 = JAM.call(n$$110, null, [this, "attributes"], JAM.policy.p3);
      if (!v2237) {
        v2237 = {};
      }
      var a$$940 = v2237;
      var v2238 = this.id;
      if (v2238) {
        a$$940.id = this.id;
      }
      var v2239 = this.className;
      if (v2239) {
        a$$940["class"] = this.className;
      }
      JAM.call(this.setElement, this, [JAM.call(this.make, this, [this.tagName, a$$940], JAM.policy.p3), !1], JAM.policy.p3);
    }
    return;
  }
  function v2219(a$$939) {
    var v2243 = this.options;
    if (v2243) {
      a$$939 = JAM.call(f$$232.extend, f$$232, [{}, this.options, a$$939], JAM.policy.p3);
    }
    var b$$828 = 0;
    var c$$675 = w$$21.length;
    var v2245 = b$$828 < c$$675;
    for (;v2245;) {
      var d$$503 = w$$21[b$$828];
      var v2244 = a$$939[d$$503];
      if (v2244) {
        JAM.set(this, d$$503, a$$939[d$$503], JAM.policy.p2);
      }
      b$$828 = b$$828 + 1;
      v2245 = b$$828 < c$$675;
    }
    this.options = a$$939;
    return;
  }
  function v2218() {
    var v2246 = this.$el;
    JAM.call(v2246.unbind, v2246, [".delegateEvents" + this.cid], JAM.policy.p3);
    return;
  }
  function v2217(a$$938) {
    var v8983 = a$$938;
    if (!v8983) {
      v8983 = a$$938 = JAM.call(n$$110, null, [this, "events"], JAM.policy.p3);
    }
    if (v8983) {
      JAM.call(this.undelegateEvents, this, [], JAM.policy.p3);
      var b$$827;
      for (b$$827 in a$$938) {
        var c$$674 = a$$938[b$$827];
        var v2248 = JAM.call(f$$232.isFunction, f$$232, [c$$674], JAM.policy.p3);
        if (!v2248) {
          c$$674 = this[a$$938[b$$827]];
        }
        if (!c$$674) {
          throw JAM.call(Error, null, ['Method "' + a$$938[b$$827] + '" does not exist'], JAM.policy.p3);
        }
        var d$$502 = JAM.call(b$$827.match, b$$827, [F$$6], JAM.policy.p3);
        var e$$424 = d$$502[1];
        d$$502 = d$$502[2];
        c$$674 = JAM.call(f$$232.bind, f$$232, [c$$674, this], JAM.policy.p3);
        e$$424 = e$$424 + (".delegateEvents" + this.cid);
        var v2252;
        if ("" === d$$502) {
          var v8988 = this.$el;
          v2252 = JAM.call(v8988.bind, v8988, [e$$424, c$$674], JAM.policy.p3);
        } else {
          var v8989 = this.$el;
          v2252 = JAM.call(v8989.delegate, v8989, [d$$502, e$$424, c$$674], JAM.policy.p3);
        }
        v2252;
      }
    }
    return;
  }
  function v2216(a$$937, b$$826) {
    var v2254 = this.$el;
    if (v2254) {
      JAM.call(this.undelegateEvents, this, [], JAM.policy.p3);
    }
    var v2255;
    if (a$$937 instanceof i$$241) {
      v2255 = a$$937;
    } else {
      v2255 = JAM.call(i$$241, null, [a$$937], JAM.policy.p3);
    }
    this.$el = v2255;
    this.el = this.$el[0];
    var v2257 = !1 !== b$$826;
    if (v2257) {
      JAM.call(this.delegateEvents, this, [], JAM.policy.p3);
    }
    return this;
  }
  function v2215(a$$936, b$$825, c$$673) {
    a$$936 = JAM.call(document.createElement, document, [a$$936], JAM.policy.p3);
    if (b$$825) {
      var v8993 = JAM.call(i$$241, null, [a$$936], JAM.policy.p3);
      JAM.call(v8993.attr, v8993, [b$$825], JAM.policy.p3);
    }
    if (c$$673) {
      var v8994 = JAM.call(i$$241, null, [a$$936], JAM.policy.p3);
      JAM.call(v8994.html, v8994, [c$$673], JAM.policy.p3);
    }
    return a$$936;
  }
  function v2214() {
    var v2258 = this.$el;
    JAM.call(v2258.remove, v2258, [], JAM.policy.p3);
    return this;
  }
  function v2213() {
    return this;
  }
  function v2212() {
    return;
  }
  function v2211(a$$935) {
    var v2259 = this.$el;
    return JAM.call(v2259.find, v2259, [a$$935], JAM.policy.p3);
  }
  function v2210(a$$934) {
    var v31133 = JAM.call(f$$232.uniqueId, f$$232, ["view"], JAM.policy.p3);
    this.cid = v31133;
    JAM.call(this._configure, this, [a$$934 || {}], JAM.policy.p3);
    JAM.call(this._ensureElement, this, [], JAM.policy.p3);
    var v2261 = this.initialize;
    JAM.call(v2261.apply, v2261, [this, arguments], JAM.policy.p3);
    JAM.call(this.delegateEvents, this, [], JAM.policy.p3);
    return;
  }
  function v2209(a$$933, b$$824, c$$672) {
    var v2262;
    if (c$$672) {
      var v24164 = JAM.call(a$$933.toString, a$$933, [], JAM.policy.p3);
      v2262 = JAM.call(a$$933.replace, a$$933, [JAM.call(v24164.replace, v24164, [/(javascript:|#).*$/, ""], JAM.policy.p3) + "#" + b$$824], JAM.policy.p3);
    } else {
      v2262 = a$$933.hash = b$$824;
    }
    v2262;
    return;
  }
  function v2208(a$$932, b$$823) {
    if (!m$$64.started) {
      return!1;
    }
    var v8997 = !b$$823;
    if (!v8997) {
      v8997 = !0 === b$$823;
    }
    if (v8997) {
      b$$823 = {trigger:b$$823};
    }
    var v2265 = a$$932 || "";
    var c$$671 = JAM.call(v2265.replace, v2265, [s$$36, ""], JAM.policy.p3);
    var v2266 = this.fragment != c$$671;
    if (v2266) {
      var v14931;
      if (this._hasPushState) {
        var v26366 = 0 != JAM.call(c$$671.indexOf, c$$671, [this.options.root], JAM.policy.p3);
        if (v26366) {
          c$$671 = this.options.root + c$$671;
        }
        this.fragment = c$$671;
        var v24165 = window.history;
        var v26367;
        if (b$$823.replace) {
          v26367 = "replaceState";
        } else {
          v26367 = "pushState";
        }
        v14931 = JAM.call(v24165[v26367], v24165, [{}, document.title, c$$671], JAM.policy.p3);
      } else {
        var v19432;
        if (this._wantsHashChange) {
          this.fragment = c$$671;
          JAM.call(this._updateHash, this, [window.location, c$$671, b$$823.replace], JAM.policy.p3);
          var v27913 = this.iframe;
          if (v27913) {
            v27913 = c$$671 != JAM.call(this.getFragment, this, [JAM.call(this.getHash, this, [this.iframe], JAM.policy.p3)], JAM.policy.p3);
          }
          var v26368 = v27913;
          if (v26368) {
            var v28884 = b$$823.replace;
            if (!v28884) {
              var v29933 = this.iframe.document;
              var v29530 = JAM.call(v29933.open, v29933, [], JAM.policy.p3);
              JAM.call(v29530.close, v29530, [], JAM.policy.p3);
            }
            v26368 = JAM.call(this._updateHash, this, [this.iframe.location, c$$671, b$$823.replace], JAM.policy.p3);
          }
          v19432 = v26368;
        } else {
          var v24168 = window.location;
          v19432 = JAM.call(v24168.assign, v24168, [this.options.root + a$$932], JAM.policy.p3);
        }
        v14931 = v19432;
      }
      v14931;
      var v14932 = b$$823.trigger;
      if (v14932) {
        JAM.call(this.loadUrl, this, [a$$932], JAM.policy.p3);
      }
    }
    return;
  }
  function v2207(a$$930) {
    function v2206(a$$931) {
      var v8999 = a$$931.route;
      if (JAM.call(v8999.test, v8999, [b$$822], JAM.policy.p3)) {
        JAM.call(a$$931.callback, a$$931, [b$$822], JAM.policy.p3);
        return!0;
      }
      return;
    }
    var v31134 = JAM.call(this.getFragment, this, [a$$930], JAM.policy.p3);
    var b$$822 = this.fragment = v31134;
    return JAM.call(f$$232.any, f$$232, [this.handlers, v2206], JAM.policy.p3);
  }
  function v2205() {
    var a$$929 = JAM.call(this.getFragment, this, [], JAM.policy.p3);
    var v9000 = a$$929 == this.fragment;
    if (v9000) {
      v9000 = this.iframe;
    }
    var v2269 = v9000;
    if (v2269) {
      a$$929 = JAM.call(this.getFragment, this, [JAM.call(this.getHash, this, [this.iframe], JAM.policy.p3)], JAM.policy.p3);
    }
    if (a$$929 == this.fragment) {
      return!1;
    }
    var v2271 = this.iframe;
    if (v2271) {
      JAM.call(this.navigate, this, [a$$929], JAM.policy.p3);
    }
    var v2272 = JAM.call(this.loadUrl, this, [], JAM.policy.p3);
    if (!v2272) {
      JAM.call(this.loadUrl, this, [JAM.call(this.getHash, this, [], JAM.policy.p3)], JAM.policy.p3);
    }
    return;
  }
  function v2204(a$$928, b$$821) {
    var v2273 = this.handlers;
    JAM.call(v2273.unshift, v2273, [{route:a$$928, callback:b$$821}], JAM.policy.p3);
    return;
  }
  function v2203() {
    var v9005 = JAM.call(i$$241, null, [window], JAM.policy.p3);
    var v2275 = JAM.call(v9005.unbind, v9005, ["popstate", this.checkUrl], JAM.policy.p3);
    JAM.call(v2275.unbind, v2275, ["hashchange", this.checkUrl], JAM.policy.p3);
    JAM.call(clearInterval, null, [this._checkUrlInterval], JAM.policy.p3);
    m$$64.started = !1;
    return;
  }
  function v2202(a$$927) {
    if (m$$64.started) {
      throw JAM.call(Error, null, ["Backbone.history has already been started"], JAM.policy.p3);
    }
    m$$64.started = !0;
    var v31135 = JAM.call(f$$232.extend, f$$232, [{}, {root:"/"}, this.options, a$$927], JAM.policy.p3);
    this.options = v31135;
    this._wantsHashChange = !1 !== this.options.hashChange;
    this._wantsPushState = !!this.options.pushState;
    var v14936 = !this.options.pushState;
    if (!v14936) {
      v14936 = !window.history;
    }
    var v9009 = v14936;
    if (!v9009) {
      v9009 = !window.history.pushState;
    }
    this._hasPushState = !v9009;
    a$$927 = JAM.call(this.getFragment, this, [], JAM.policy.p3);
    var b$$820 = document.documentMode;
    var v19438 = navigator.userAgent;
    var v9010 = JAM.call(E$$6.exec, E$$6, [JAM.call(v19438.toLowerCase, v19438, [], JAM.policy.p3)], JAM.policy.p3);
    if (v9010) {
      var v14940 = !b$$820;
      if (!v14940) {
        v14940 = 7 >= b$$820;
      }
      v9010 = v14940;
    }
    if (b$$820 = v9010) {
      var v24172 = JAM.call(i$$241, null, ['<iframe src="javascript:0" tabindex="-1" />'], JAM.policy.p3);
      var v19440 = JAM.call(v24172.hide, v24172, [], JAM.policy.p3);
      this.iframe = JAM.call(v19440.appendTo, v19440, ["body"], JAM.policy.p3)[0].contentWindow;
      JAM.call(this.navigate, this, [a$$927], JAM.policy.p3);
    }
    var v2286;
    if (this._hasPushState) {
      var v9012 = JAM.call(i$$241, null, [window], JAM.policy.p3);
      v2286 = JAM.call(v9012.bind, v9012, ["popstate", this.checkUrl], JAM.policy.p3);
    } else {
      var v9014;
      var v24173 = this._wantsHashChange;
      if (v24173) {
        v24173 = "onhashchange" in window;
      }
      var v19441 = v24173;
      if (v19441) {
        v19441 = !b$$820;
      }
      if (v19441) {
        var v14942 = JAM.call(i$$241, null, [window], JAM.policy.p3);
        v9014 = JAM.call(v14942.bind, v14942, ["hashchange", this.checkUrl], JAM.policy.p3);
      } else {
        var v14944 = this._wantsHashChange;
        if (v14944) {
          var v31136 = JAM.call(setInterval, null, [this.checkUrl, this.interval], JAM.policy.p3);
          v14944 = this._checkUrlInterval = v31136;
        }
        v9014 = v14944;
      }
      v2286 = v9014;
    }
    v2286;
    this.fragment = a$$927;
    a$$927 = window.location;
    b$$820 = a$$927.pathname == this.options.root;
    var v19444 = this._wantsHashChange;
    if (v19444) {
      v19444 = this._wantsPushState;
    }
    var v14946 = v19444;
    if (v14946) {
      v14946 = !this._hasPushState;
    }
    var v9017 = v14946;
    if (v9017) {
      v9017 = !b$$820;
    }
    if (v9017) {
      var v31137 = JAM.call(this.getFragment, this, [null, !0], JAM.policy.p3);
      this.fragment = v31137;
      var v14948 = window.location;
      JAM.call(v14948.replace, v14948, [this.options.root + "#" + this.fragment], JAM.policy.p3);
      return!0;
    }
    var v19448 = this._wantsPushState;
    if (v19448) {
      v19448 = this._hasPushState;
    }
    var v14950 = v19448;
    if (v14950) {
      v14950 = b$$820;
    }
    var v9018 = v14950;
    if (v9018) {
      v9018 = a$$927.hash;
    }
    var v2290 = v9018;
    if (v2290) {
      var v14951 = JAM.call(this.getHash, this, [], JAM.policy.p3);
      var v31138 = JAM.call(v14951.replace, v14951, [s$$36, ""], JAM.policy.p3);
      this.fragment = v31138;
      var v14952 = window.history;
      JAM.call(v14952.replaceState, v14952, [{}, document.title, a$$927.protocol + "//" + a$$927.host + this.options.root + this.fragment], JAM.policy.p3);
    }
    if (!this.options.silent) {
      return JAM.call(this.loadUrl, this, [], JAM.policy.p3);
    }
    return;
  }
  function v2201(a$$926, b$$819) {
    if (null == a$$926) {
      var v9020 = this._hasPushState;
      if (!v9020) {
        v9020 = b$$819;
      }
      if (v9020) {
        a$$926 = window.location.pathname;
        var c$$670 = window.location.search;
        if (c$$670) {
          a$$926 = a$$926 + c$$670;
        }
      } else {
        a$$926 = JAM.call(this.getHash, this, [], JAM.policy.p3);
      }
    }
    var v2296 = JAM.call(a$$926.indexOf, a$$926, [this.options.root], JAM.policy.p3);
    if (!v2296) {
      a$$926 = JAM.call(a$$926.substr, a$$926, [this.options.root.length], JAM.policy.p3);
    }
    return JAM.call(a$$926.replace, a$$926, [s$$36, ""], JAM.policy.p3);
  }
  function v2200(a$$925) {
    var v2297;
    var v24177;
    if (a$$925) {
      v24177 = a$$925.location;
    } else {
      v24177 = window.location;
    }
    var v14959 = v24177.href;
    if (a$$925 = JAM.call(v14959.match, v14959, [/#(.*)$/], JAM.policy.p3)) {
      v2297 = a$$925[1];
    } else {
      v2297 = "";
    }
    return v2297;
  }
  function v2199() {
    this.handlers = [];
    JAM.call(f$$232.bindAll, f$$232, [this, "checkUrl"], JAM.policy.p3);
    return;
  }
  function v2198(a$$924, b$$818) {
    var v2298 = JAM.call(a$$924.exec, a$$924, [b$$818], JAM.policy.p3);
    return JAM.call(v2298.slice, v2298, [1], JAM.policy.p3);
  }
  function v2197(a$$923) {
    var v9025 = JAM.call(a$$923.replace, a$$923, [D$$6, "\\$&"], JAM.policy.p3);
    var v2299 = JAM.call(v9025.replace, v9025, [B$$7, "([^/]+)"], JAM.policy.p3);
    a$$923 = JAM.call(v2299.replace, v2299, [C$$6, "(.*?)"], JAM.policy.p3);
    return JAM.call(RegExp, null, ["^" + a$$923 + "$"], JAM.policy.p3);
  }
  function v2196() {
    if (this.routes) {
      var a$$922 = [];
      var b$$817;
      for (b$$817 in this.routes) {
        JAM.call(a$$922.unshift, a$$922, [[b$$817, this.routes[b$$817]]], JAM.policy.p3);
      }
      b$$817 = 0;
      var c$$669 = a$$922.length;
      var v2306 = b$$817 < c$$669;
      for (;v2306;) {
        JAM.call(this.route, this, [a$$922[b$$817][0], a$$922[b$$817][1], this[a$$922[b$$817][1]]], JAM.policy.p3);
        b$$817 = b$$817 + 1;
        v2306 = b$$817 < c$$669;
      }
    }
    return;
  }
  function v2195(a$$921, b$$816) {
    var v2308 = g$$232.history;
    JAM.call(v2308.navigate, v2308, [a$$921, b$$816], JAM.policy.p3);
    return;
  }
  function v2194(a$$920, b$$815, c$$668) {
    function v2193(d$$501) {
      d$$501 = JAM.call(this._extractParameters, this, [a$$920, d$$501], JAM.policy.p3);
      if (c$$668) {
        JAM.call(c$$668.apply, c$$668, [this, d$$501], JAM.policy.p3);
      }
      var v2309 = this.trigger;
      var v9031 = ["route:" + b$$815];
      JAM.call(v2309.apply, v2309, [this, JAM.call(v9031.concat, v9031, [d$$501], JAM.policy.p3)], JAM.policy.p3);
      var v2311 = g$$232.history;
      JAM.call(v2311.trigger, v2311, ["route", this, b$$815, d$$501], JAM.policy.p3);
      return;
    }
    var v2312 = g$$232.history;
    if (!v2312) {
      var v9032 = g$$232;
      var v31139 = JAM.new(m$$64, [], JAM.policy.p3);
      v9032.history = v31139;
    }
    var v2313 = JAM.call(f$$232.isRegExp, f$$232, [a$$920], JAM.policy.p3);
    if (!v2313) {
      a$$920 = JAM.call(this._routeToRegExp, this, [a$$920], JAM.policy.p3);
    }
    if (!c$$668) {
      c$$668 = this[b$$815];
    }
    var v2314 = g$$232.history;
    JAM.call(v2314.route, v2314, [a$$920, JAM.call(f$$232.bind, f$$232, [v2193, this], JAM.policy.p3)], JAM.policy.p3);
    return this;
  }
  function v2192() {
    return;
  }
  function v2191(a$$919) {
    if (!a$$919) {
      a$$919 = {};
    }
    var v2316 = a$$919.routes;
    if (v2316) {
      this.routes = a$$919.routes;
    }
    JAM.call(this._bindRoutes, this, [], JAM.policy.p3);
    var v2317 = this.initialize;
    JAM.call(v2317.apply, v2317, [this, arguments], JAM.policy.p3);
    return;
  }
  function v2190(a$$918) {
    function v2189() {
      var v2318 = f$$232[a$$918];
      var v9037 = [this.models];
      return JAM.call(v2318.apply, v2318, [f$$232, JAM.call(v9037.concat, v9037, [JAM.call(f$$232.toArray, f$$232, [arguments], JAM.policy.p3)], JAM.policy.p3)], JAM.policy.p3);
    }
    JAM.set(r$$32.prototype, a$$918, v2189, JAM.policy.p2);
    return;
  }
  function v2188(a$$917, b$$814, c$$667, d$$500) {
    var v14964 = "add" == a$$917;
    if (!v14964) {
      v14964 = "remove" == a$$917;
    }
    var v9039 = v14964;
    if (v9039) {
      v9039 = c$$667 != this;
    }
    var v2321 = v9039;
    if (!v2321) {
      var v19454 = "destroy" == a$$917;
      if (v19454) {
        JAM.call(this.remove, this, [b$$814, d$$500], JAM.policy.p3);
      }
      var v24178 = b$$814;
      if (v24178) {
        v24178 = a$$917 === "change:" + b$$814.idAttribute;
      }
      var v19455 = v24178;
      if (v19455) {
        delete this._byId[JAM.call(b$$814.previous, b$$814, [b$$814.idAttribute], JAM.policy.p3)];
        JAM.set(this._byId, b$$814.id, b$$814, JAM.policy.p2);
      }
      var v14965 = this.trigger;
      JAM.call(v14965.apply, v14965, [this, arguments], JAM.policy.p3);
    }
    return;
  }
  function v2187(a$$916) {
    var v2322 = this == a$$916.collection;
    if (v2322) {
      delete a$$916.collection;
    }
    JAM.call(a$$916.off, a$$916, ["all", this._onModelEvent, this], JAM.policy.p3);
    return;
  }
  function v2186(a$$915, b$$813) {
    if (!b$$813) {
      b$$813 = {};
    }
    var v2324;
    if (a$$915 instanceof o$$42) {
      var v9043 = a$$915.collection;
      if (!v9043) {
        v9043 = a$$915.collection = this;
      }
      v2324 = v9043;
    } else {
      b$$813.collection = this;
      a$$915 = JAM.new(this.model, [a$$915, b$$813], JAM.policy.p3);
      var v14967 = JAM.call(a$$915._validate, a$$915, [a$$915.attributes, b$$813], JAM.policy.p3);
      if (!v14967) {
        v14967 = a$$915 = !1;
      }
      v2324 = v14967;
    }
    v2324;
    return a$$915;
  }
  function v2185() {
    this.length = 0;
    this.models = [];
    this._byId = {};
    this._byCid = {};
    return;
  }
  function v2184() {
    var v2325 = JAM.call(f$$232, null, [this.models], JAM.policy.p3);
    return JAM.call(v2325.chain, v2325, [], JAM.policy.p3);
  }
  function v2183(a$$914) {
    return a$$914;
  }
  function v2182(a$$913, b$$812) {
    function v2181(e$$423, f$$237) {
      var v2326 = b$$812.wait;
      if (v2326) {
        JAM.call(c$$666.add, c$$666, [e$$423, b$$812], JAM.policy.p3);
      }
      var v2327;
      if (d$$499) {
        v2327 = JAM.call(d$$499, null, [e$$423, f$$237], JAM.policy.p3);
      } else {
        v2327 = JAM.call(e$$423.trigger, e$$423, ["sync", a$$913, f$$237, b$$812], JAM.policy.p3);
      }
      v2327;
      return;
    }
    var c$$666 = this;
    var v2328;
    if (b$$812) {
      v2328 = JAM.call(f$$232.clone, f$$232, [b$$812], JAM.policy.p3);
    } else {
      v2328 = {};
    }
    b$$812 = v2328;
    a$$913 = JAM.call(this._prepareModel, this, [a$$913, b$$812], JAM.policy.p3);
    if (!a$$913) {
      return!1;
    }
    var v2330 = b$$812.wait;
    if (!v2330) {
      JAM.call(c$$666.add, c$$666, [a$$913, b$$812], JAM.policy.p3);
    }
    var d$$499 = b$$812.success;
    b$$812.success = v2181;
    JAM.call(a$$913.save, a$$913, [null, b$$812], JAM.policy.p3);
    return a$$913;
  }
  function v2180(a$$912) {
    function v2179(d$$498, e$$422, f$$236) {
      var v9047;
      if (a$$912.add) {
        v9047 = "add";
      } else {
        v9047 = "reset";
      }
      JAM.call(b$$811[v9047], b$$811, [JAM.call(b$$811.parse, b$$811, [d$$498, f$$236], JAM.policy.p3), a$$912], JAM.policy.p3);
      if (c$$665) {
        JAM.call(c$$665, null, [b$$811, d$$498], JAM.policy.p3);
      }
      return;
    }
    var v2333;
    if (a$$912) {
      v2333 = JAM.call(f$$232.clone, f$$232, [a$$912], JAM.policy.p3);
    } else {
      v2333 = {};
    }
    a$$912 = v2333;
    var v2334 = void 0 === a$$912.parse;
    if (v2334) {
      a$$912.parse = !0;
    }
    var b$$811 = this;
    var c$$665 = a$$912.success;
    a$$912.success = v2179;
    var v2335 = a$$912;
    var v31140 = JAM.call(g$$232.wrapError, g$$232, [a$$912.error, b$$811, a$$912], JAM.policy.p3);
    v2335.error = v31140;
    var v9051 = this.sync;
    if (!v9051) {
      v9051 = g$$232.sync;
    }
    var v2336 = v9051;
    return JAM.call(v2336.call, v2336, [this, "read", this, a$$912], JAM.policy.p3);
  }
  function v2178(a$$911, b$$810) {
    if (!a$$911) {
      a$$911 = [];
    }
    if (!b$$810) {
      b$$810 = {};
    }
    var c$$664 = 0;
    var d$$497 = this.models.length;
    var v2339 = c$$664 < d$$497;
    for (;v2339;) {
      JAM.call(this._removeReference, this, [this.models[c$$664]], JAM.policy.p3);
      c$$664 = c$$664 + 1;
      v2339 = c$$664 < d$$497;
    }
    JAM.call(this._reset, this, [], JAM.policy.p3);
    JAM.call(this.add, this, [a$$911, JAM.call(f$$232.extend, f$$232, [{silent:!0}, b$$810], JAM.policy.p3)], JAM.policy.p3);
    var v2341 = b$$810.silent;
    if (!v2341) {
      JAM.call(this.trigger, this, ["reset", this, b$$810], JAM.policy.p3);
    }
    return this;
  }
  function v2177(a$$910) {
    function v2176(b$$809) {
      return JAM.call(b$$809.get, b$$809, [a$$910], JAM.policy.p3);
    }
    return JAM.call(f$$232.map, f$$232, [this.models, v2176], JAM.policy.p3);
  }
  function v2175(a$$909) {
    if (!a$$909) {
      a$$909 = {};
    }
    if (!this.comparator) {
      throw JAM.call(Error, null, ["Cannot sort a set without a comparator"], JAM.policy.p3);
    }
    var b$$808 = JAM.call(f$$232.bind, f$$232, [this.comparator, this], JAM.policy.p3);
    var v2345;
    if (1 == this.comparator.length) {
      var v31141 = JAM.call(this.sortBy, this, [b$$808], JAM.policy.p3);
      v2345 = this.models = v31141;
    } else {
      var v9059 = this.models;
      v2345 = JAM.call(v9059.sort, v9059, [b$$808], JAM.policy.p3);
    }
    v2345;
    var v2346 = a$$909.silent;
    if (!v2346) {
      JAM.call(this.trigger, this, ["reset", this, a$$909], JAM.policy.p3);
    }
    return this;
  }
  function v2174(a$$908) {
    function v2173(b$$807) {
      var c$$663;
      for (c$$663 in a$$908) {
        if (a$$908[c$$663] !== JAM.call(b$$807.get, b$$807, [c$$663], JAM.policy.p3)) {
          return!1;
        }
      }
      return!0;
    }
    var v2348;
    if (JAM.call(f$$232.isEmpty, f$$232, [a$$908], JAM.policy.p3)) {
      v2348 = [];
    } else {
      v2348 = JAM.call(this.filter, this, [v2173], JAM.policy.p3);
    }
    return v2348;
  }
  function v2172(a$$907) {
    return this.models[a$$907];
  }
  function v2171(a$$906) {
    var v2350 = a$$906;
    if (v2350) {
      var v9065 = this._byCid;
      var v14972 = a$$906.cid;
      if (!v14972) {
        v14972 = a$$906;
      }
      v2350 = v9065[v14972];
    }
    return v2350;
  }
  function v2170(a$$905) {
    var v2351;
    if (null == a$$905) {
      v2351 = void 0;
    } else {
      var v9067 = this._byId;
      var v14973;
      if (null != a$$905.id) {
        v14973 = a$$905.id;
      } else {
        v14973 = a$$905;
      }
      v2351 = v9067[v14973];
    }
    return v2351;
  }
  function v2169(a$$904) {
    var b$$806 = JAM.call(this.at, this, [0], JAM.policy.p3);
    JAM.call(this.remove, this, [b$$806, a$$904], JAM.policy.p3);
    return b$$806;
  }
  function v2168(a$$903, b$$805) {
    a$$903 = JAM.call(this._prepareModel, this, [a$$903, b$$805], JAM.policy.p3);
    JAM.call(this.add, this, [a$$903, JAM.call(f$$232.extend, f$$232, [{at:0}, b$$805], JAM.policy.p3)], JAM.policy.p3);
    return a$$903;
  }
  function v2167(a$$902) {
    var b$$804 = JAM.call(this.at, this, [this.length - 1], JAM.policy.p3);
    JAM.call(this.remove, this, [b$$804, a$$902], JAM.policy.p3);
    return b$$804;
  }
  function v2166(a$$901, b$$803) {
    a$$901 = JAM.call(this._prepareModel, this, [a$$901, b$$803], JAM.policy.p3);
    JAM.call(this.add, this, [a$$901, b$$803], JAM.policy.p3);
    return a$$901;
  }
  function v2165(a$$900, b$$802) {
    var c$$662;
    var d$$496;
    var e$$421;
    var g$$238;
    if (!b$$802) {
      b$$802 = {};
    }
    var v2354;
    if (JAM.call(f$$232.isArray, f$$232, [a$$900], JAM.policy.p3)) {
      v2354 = JAM.call(a$$900.slice, a$$900, [], JAM.policy.p3);
    } else {
      v2354 = [a$$900];
    }
    a$$900 = v2354;
    c$$662 = 0;
    d$$496 = a$$900.length;
    var v2356 = c$$662 < d$$496;
    for (;v2356;) {
      var v9074 = JAM.call(this.getByCid, this, [a$$900[c$$662]], JAM.policy.p3);
      if (!v9074) {
        v9074 = JAM.call(this.get, this, [a$$900[c$$662]], JAM.policy.p3);
      }
      if (g$$238 = v9074) {
        delete this._byId[g$$238.id];
        delete this._byCid[g$$238.cid];
        e$$421 = JAM.call(this.indexOf, this, [g$$238], JAM.policy.p3);
        var v24180 = this.models;
        JAM.call(v24180.splice, v24180, [e$$421, 1], JAM.policy.p3);
        this.length = this.length - 1;
        var v14977 = b$$802.silent;
        if (!v14977) {
          b$$802.index = e$$421;
          JAM.call(g$$238.trigger, g$$238, ["remove", g$$238, this, b$$802], JAM.policy.p3);
        }
        JAM.call(this._removeReference, this, [g$$238], JAM.policy.p3);
      }
      c$$662 = c$$662 + 1;
      v2356 = c$$662 < d$$496;
    }
    return this;
  }
  function v2164(a$$899, b$$801) {
    var c$$661;
    var d$$495;
    var e$$420;
    var g$$237;
    var i$$243;
    var j$$130 = {};
    var k$$94 = {};
    var l$$98 = [];
    if (!b$$801) {
      b$$801 = {};
    }
    var v2357;
    if (JAM.call(f$$232.isArray, f$$232, [a$$899], JAM.policy.p3)) {
      v2357 = JAM.call(a$$899.slice, a$$899, [], JAM.policy.p3);
    } else {
      v2357 = [a$$899];
    }
    a$$899 = v2357;
    c$$661 = 0;
    d$$495 = a$$899.length;
    var v2360 = c$$661 < d$$495;
    for (;v2360;) {
      var v14978 = a$$899;
      var v14979 = c$$661;
      var v31142 = JAM.call(this._prepareModel, this, [a$$899[c$$661], b$$801], JAM.policy.p3);
      introspect(JAM.policy.p2) {
        var v9077 = e$$420 = v14978[v14979] = v31142
      }
      if (!v9077) {
        throw JAM.call(Error, null, ["Can't add an invalid model to a collection"], JAM.policy.p3);
      }
      g$$237 = e$$420.cid;
      i$$243 = e$$420.id;
      var v2359;
      var v19464 = j$$130[g$$237];
      if (!v19464) {
        v19464 = this._byCid[g$$237];
      }
      var v14980 = v19464;
      if (!v14980) {
        var v19465 = null != i$$243;
        if (v19465) {
          var v24184 = k$$94[i$$243];
          if (!v24184) {
            v24184 = this._byId[i$$243];
          }
          v19465 = v24184;
        }
        v14980 = v19465;
      }
      if (v14980) {
        v2359 = JAM.call(l$$98.push, l$$98, [c$$661], JAM.policy.p3);
      } else {
        v2359 = JAM.set(j$$130, g$$237, JAM.set(k$$94, i$$243, e$$420, JAM.policy.p2), JAM.policy.p2);
      }
      v2359;
      c$$661 = c$$661 + 1;
      v2360 = c$$661 < d$$495;
    }
    c$$661 = l$$98.length;
    var v2362 = c$$661;
    c$$661 = c$$661 - 1;
    for (;v2362;) {
      JAM.call(a$$899.splice, a$$899, [l$$98[c$$661], 1], JAM.policy.p3);
      v2362 = c$$661;
      c$$661 = c$$661 - 1;
    }
    c$$661 = 0;
    d$$495 = a$$899.length;
    var v2363 = c$$661 < d$$495;
    for (;v2363;) {
      var v14981 = e$$420 = a$$899[c$$661];
      JAM.call(v14981.on, v14981, ["all", this._onModelEvent, this], JAM.policy.p3);
      JAM.set(this._byCid, e$$420.cid, e$$420, JAM.policy.p2);
      var v9079 = null != e$$420.id;
      if (v9079) {
        JAM.set(this._byId, e$$420.id, e$$420, JAM.policy.p2);
      }
      c$$661 = c$$661 + 1;
      v2363 = c$$661 < d$$495;
    }
    this.length = this.length + d$$495;
    var v2364 = this.models;
    var v19467;
    if (null != b$$801.at) {
      v19467 = b$$801.at;
    } else {
      v19467 = this.models.length;
    }
    var v9081 = [v19467, 0];
    JAM.call(A$$7.apply, A$$7, [v2364, JAM.call(v9081.concat, v9081, [a$$899], JAM.policy.p3)], JAM.policy.p3);
    var v2366 = this.comparator;
    if (v2366) {
      JAM.call(this.sort, this, [{silent:!0}], JAM.policy.p3);
    }
    if (b$$801.silent) {
      return this;
    }
    c$$661 = 0;
    d$$495 = this.models.length;
    var v2370 = c$$661 < d$$495;
    for (;v2370;) {
      if (j$$130[(e$$420 = this.models[c$$661]).cid]) {
        b$$801.index = c$$661;
        JAM.call(e$$420.trigger, e$$420, ["add", e$$420, this, b$$801], JAM.policy.p3);
      }
      c$$661 = c$$661 + 1;
      v2370 = c$$661 < d$$495;
    }
    return this;
  }
  function v2163(a$$898) {
    function v2162(b$$800) {
      return JAM.call(b$$800.toJSON, b$$800, [a$$898], JAM.policy.p3);
    }
    return JAM.call(this.map, this, [v2162], JAM.policy.p3);
  }
  function v2161() {
    return;
  }
  function v2160(a$$897, b$$799) {
    if (!b$$799) {
      b$$799 = {};
    }
    var v2371 = b$$799.model;
    if (v2371) {
      this.model = b$$799.model;
    }
    var v2372 = b$$799.comparator;
    if (v2372) {
      this.comparator = b$$799.comparator;
    }
    JAM.call(this._reset, this, [], JAM.policy.p3);
    var v2373 = this.initialize;
    JAM.call(v2373.apply, v2373, [this, arguments], JAM.policy.p3);
    if (a$$897) {
      JAM.call(this.reset, this, [a$$897, {silent:!0, parse:b$$799.parse}], JAM.policy.p3);
    }
    return;
  }
  function v2159(a$$896, b$$798) {
    var v9086 = b$$798.silent;
    if (!v9086) {
      v9086 = !this.validate;
    }
    if (v9086) {
      return!0;
    }
    a$$896 = JAM.call(f$$232.extend, f$$232, [{}, this.attributes, a$$896], JAM.policy.p3);
    var c$$660 = JAM.call(this.validate, this, [a$$896, b$$798], JAM.policy.p3);
    if (!c$$660) {
      return!0;
    }
    var v2377;
    var v14995 = b$$798;
    if (v14995) {
      v14995 = b$$798.error;
    }
    if (v14995) {
      v2377 = JAM.call(b$$798.error, b$$798, [this, c$$660, b$$798], JAM.policy.p3);
    } else {
      v2377 = JAM.call(this.trigger, this, ["error", this, c$$660, b$$798], JAM.policy.p3);
    }
    v2377;
    return!1;
  }
  function v2158() {
    return!JAM.call(this.validate, this, [this.attributes], JAM.policy.p3);
  }
  function v2157() {
    return JAM.call(f$$232.clone, f$$232, [this._previousAttributes], JAM.policy.p3);
  }
  function v2156(a$$895) {
    var v2380;
    var v14996 = !arguments.length;
    if (!v14996) {
      v14996 = !this._previousAttributes;
    }
    if (v14996) {
      v2380 = null;
    } else {
      v2380 = this._previousAttributes[a$$895];
    }
    return v2380;
  }
  function v2155(a$$894) {
    if (!a$$894) {
      var v2381;
      if (JAM.call(this.hasChanged, this, [], JAM.policy.p3)) {
        v2381 = JAM.call(f$$232.clone, f$$232, [this.changed], JAM.policy.p3);
      } else {
        v2381 = !1;
      }
      return v2381;
    }
    var b$$797;
    var c$$659 = !1;
    var d$$494 = this._previousAttributes;
    var e$$419;
    for (e$$419 in a$$894) {
      if (!JAM.call(f$$232.isEqual, f$$232, [d$$494[e$$419], b$$797 = a$$894[e$$419]], JAM.policy.p3)) {
        var v9094 = c$$659;
        if (!v9094) {
          v9094 = c$$659 = {};
        }
        JAM.set(v9094, e$$419, b$$797, JAM.policy.p2);
      }
    }
    return c$$659;
  }
  function v2154(a$$893) {
    var v2385;
    if (!arguments.length) {
      v2385 = !JAM.call(f$$232.isEmpty, f$$232, [this.changed], JAM.policy.p3);
    } else {
      v2385 = JAM.call(f$$232.has, f$$232, [this.changed, a$$893], JAM.policy.p3);
    }
    return v2385;
  }
  function v2153(a$$892) {
    if (!a$$892) {
      a$$892 = {};
    }
    var b$$796 = this._changing;
    this._changing = !0;
    var c$$658;
    for (c$$658 in this._silent) {
      JAM.set(this._pending, c$$658, !0, JAM.policy.p2);
    }
    var d$$493 = JAM.call(f$$232.extend, f$$232, [{}, a$$892.changes, this._silent], JAM.policy.p3);
    this._silent = {};
    for (c$$658 in d$$493) {
      JAM.call(this.trigger, this, ["change:" + c$$658, this, JAM.call(this.get, this, [c$$658], JAM.policy.p3), a$$892], JAM.policy.p3);
    }
    if (b$$796) {
      return this;
    }
    var v2395 = !JAM.call(f$$232.isEmpty, f$$232, [this._pending], JAM.policy.p3);
    for (;v2395;) {
      this._pending = {};
      JAM.call(this.trigger, this, ["change", this, a$$892], JAM.policy.p3);
      for (c$$658 in this.changed) {
        var v9100 = !this._pending[c$$658];
        if (v9100) {
          v9100 = !this._silent[c$$658];
        }
        var v2392 = v9100;
        if (v2392) {
          delete this.changed[c$$658];
        }
      }
      var v31143 = JAM.call(f$$232.clone, f$$232, [this.attributes], JAM.policy.p3);
      this._previousAttributes = v31143;
      v2395 = !JAM.call(f$$232.isEmpty, f$$232, [this._pending], JAM.policy.p3);
    }
    this._changing = !1;
    return this;
  }
  function v2152() {
    return null == this.id;
  }
  function v2151() {
    return JAM.new(this.constructor, [this.attributes], JAM.policy.p3);
  }
  function v2150(a$$891) {
    return a$$891;
  }
  function v2149() {
    var v9103 = JAM.call(n$$110, null, [this, "urlRoot"], JAM.policy.p3);
    if (!v9103) {
      v9103 = JAM.call(n$$110, null, [this.collection, "url"], JAM.policy.p3);
    }
    var v2399 = v9103;
    if (!v2399) {
      v2399 = JAM.call(t$$33, null, [], JAM.policy.p3);
    }
    var a$$890 = v2399;
    var v2400;
    if (JAM.call(this.isNew, this, [], JAM.policy.p3)) {
      v2400 = a$$890;
    } else {
      var v15008 = a$$890;
      var v19474;
      if ("/" == JAM.call(a$$890.charAt, a$$890, [a$$890.length - 1], JAM.policy.p3)) {
        v19474 = "";
      } else {
        v19474 = "/";
      }
      v2400 = v15008 + v19474 + JAM.call(encodeURIComponent, null, [this.id], JAM.policy.p3);
    }
    return v2400;
  }
  function v2148(a$$889) {
    function v2147(e$$418) {
      var v2401 = a$$889.wait;
      if (v2401) {
        JAM.call(d$$492, null, [], JAM.policy.p3);
      }
      var v2402;
      if (c$$657) {
        v2402 = JAM.call(c$$657, null, [b$$795, e$$418], JAM.policy.p3);
      } else {
        v2402 = JAM.call(b$$795.trigger, b$$795, ["sync", b$$795, e$$418, a$$889], JAM.policy.p3);
      }
      v2402;
      return;
    }
    function d$$492() {
      JAM.call(b$$795.trigger, b$$795, ["destroy", b$$795, b$$795.collection, a$$889], JAM.policy.p3);
      return;
    }
    var v2404;
    if (a$$889) {
      v2404 = JAM.call(f$$232.clone, f$$232, [a$$889], JAM.policy.p3);
    } else {
      v2404 = {};
    }
    a$$889 = v2404;
    var b$$795 = this;
    var c$$657 = a$$889.success;
    if (JAM.call(this.isNew, this, [], JAM.policy.p3)) {
      JAM.call(d$$492, null, [], JAM.policy.p3);
      return!1;
    }
    a$$889.success = v2147;
    var v2406 = a$$889;
    var v31144 = JAM.call(g$$232.wrapError, g$$232, [a$$889.error, b$$795, a$$889], JAM.policy.p3);
    v2406.error = v31144;
    var v9109 = this.sync;
    if (!v9109) {
      v9109 = g$$232.sync;
    }
    var v2407 = v9109;
    var e$$417 = JAM.call(v2407.call, v2407, [this, "delete", this, a$$889], JAM.policy.p3);
    var v2408 = a$$889.wait;
    if (!v2408) {
      JAM.call(d$$492, null, [], JAM.policy.p3);
    }
    return e$$417;
  }
  function v2146(a$$887, b$$793, c$$656) {
    function v2145(a$$888, b$$794, e$$416) {
      b$$794 = JAM.call(h$$194.parse, h$$194, [a$$888, e$$416], JAM.policy.p3);
      if (c$$656.wait) {
        delete c$$656.wait;
        b$$794 = JAM.call(f$$232.extend, f$$232, [d$$491 || {}, b$$794], JAM.policy.p3);
      }
      if (!JAM.call(h$$194.set, h$$194, [b$$794, c$$656], JAM.policy.p3)) {
        return false;
      }
      var v2412;
      if (i$$242) {
        v2412 = JAM.call(i$$242, null, [h$$194, a$$888], JAM.policy.p3);
      } else {
        v2412 = JAM.call(h$$194.trigger, h$$194, ["sync", h$$194, a$$888, c$$656], JAM.policy.p3);
      }
      v2412;
      return;
    }
    var d$$491;
    var e$$415;
    var v2413;
    var v15012 = JAM.call(f$$232.isObject, f$$232, [a$$887], JAM.policy.p3);
    if (!v15012) {
      v15012 = null == a$$887;
    }
    if (v15012) {
      d$$491 = a$$887;
      v2413 = c$$656 = b$$793;
    } else {
      d$$491 = {};
      v2413 = JAM.set(d$$491, a$$887, b$$793, JAM.policy.p2);
    }
    v2413;
    var v2414;
    if (c$$656) {
      v2414 = JAM.call(f$$232.clone, f$$232, [c$$656], JAM.policy.p3);
    } else {
      v2414 = {};
    }
    c$$656 = v2414;
    if (c$$656.wait) {
      if (!JAM.call(this._validate, this, [d$$491, c$$656], JAM.policy.p3)) {
        return!1;
      }
      e$$415 = JAM.call(f$$232.clone, f$$232, [this.attributes], JAM.policy.p3);
    }
    a$$887 = JAM.call(f$$232.extend, f$$232, [{}, c$$656, {silent:!0}], JAM.policy.p3);
    var v9115 = d$$491;
    if (v9115) {
      var v24188;
      if (c$$656.wait) {
        v24188 = a$$887;
      } else {
        v24188 = c$$656;
      }
      v9115 = !JAM.call(this.set, this, [d$$491, v24188], JAM.policy.p3);
    }
    if (v9115) {
      return!1;
    }
    var h$$194 = this;
    var i$$242 = c$$656.success;
    c$$656.success = v2145;
    var v2420 = c$$656;
    var v31145 = JAM.call(g$$232.wrapError, g$$232, [c$$656.error, h$$194, c$$656], JAM.policy.p3);
    v2420.error = v31145;
    var v2421;
    if (JAM.call(this.isNew, this, [], JAM.policy.p3)) {
      v2421 = "create";
    } else {
      v2421 = "update";
    }
    b$$793 = v2421;
    var v9118 = this.sync;
    if (!v9118) {
      v9118 = g$$232.sync;
    }
    var v2422 = v9118;
    b$$793 = JAM.call(v2422.call, v2422, [this, b$$793, this, c$$656], JAM.policy.p3);
    var v2423 = c$$656.wait;
    if (v2423) {
      JAM.call(this.set, this, [e$$415, a$$887], JAM.policy.p3);
    }
    return b$$793;
  }
  function v2144(a$$886) {
    function v2143(d$$490, e$$414, f$$235) {
      if (!JAM.call(b$$792.set, b$$792, [JAM.call(b$$792.parse, b$$792, [d$$490, f$$235], JAM.policy.p3), a$$886], JAM.policy.p3)) {
        return!1;
      }
      if (c$$655) {
        JAM.call(c$$655, null, [b$$792, d$$490], JAM.policy.p3);
      }
      return;
    }
    var v2425;
    if (a$$886) {
      v2425 = JAM.call(f$$232.clone, f$$232, [a$$886], JAM.policy.p3);
    } else {
      v2425 = {};
    }
    a$$886 = v2425;
    var b$$792 = this;
    var c$$655 = a$$886.success;
    a$$886.success = v2143;
    var v2426 = a$$886;
    var v31146 = JAM.call(g$$232.wrapError, g$$232, [a$$886.error, b$$792, a$$886], JAM.policy.p3);
    v2426.error = v31146;
    var v9121 = this.sync;
    if (!v9121) {
      v9121 = g$$232.sync;
    }
    var v2427 = v9121;
    return JAM.call(v2427.call, v2427, [this, "read", this, a$$886], JAM.policy.p3);
  }
  function v2142(a$$885) {
    var v9122 = a$$885;
    if (!v9122) {
      v9122 = a$$885 = {};
    }
    v9122.unset = !0;
    return JAM.call(this.set, this, [JAM.call(f$$232.clone, f$$232, [this.attributes], JAM.policy.p3), a$$885], JAM.policy.p3);
  }
  function v2141(a$$884, b$$791) {
    var v9124 = b$$791;
    if (!v9124) {
      v9124 = b$$791 = {};
    }
    v9124.unset = !0;
    return JAM.call(this.set, this, [a$$884, null, b$$791], JAM.policy.p3);
  }
  function v2140(a$$883, b$$790, c$$654) {
    var d$$489;
    var e$$413;
    var v2431;
    var v15019 = JAM.call(f$$232.isObject, f$$232, [a$$883], JAM.policy.p3);
    if (!v15019) {
      v15019 = null == a$$883;
    }
    if (v15019) {
      d$$489 = a$$883;
      v2431 = c$$654 = b$$790;
    } else {
      d$$489 = {};
      v2431 = JAM.set(d$$489, a$$883, b$$790, JAM.policy.p2);
    }
    v2431;
    if (!c$$654) {
      c$$654 = {};
    }
    if (!d$$489) {
      return this;
    }
    var v2433 = d$$489 instanceof o$$42;
    if (v2433) {
      d$$489 = d$$489.attributes;
    }
    if (c$$654.unset) {
      for (e$$413 in d$$489) {
        JAM.set(d$$489, e$$413, void 0, JAM.policy.p2);
      }
    }
    if (!JAM.call(this._validate, this, [d$$489, c$$654], JAM.policy.p3)) {
      return!1;
    }
    var v2436 = this.idAttribute in d$$489;
    if (v2436) {
      this.id = d$$489[this.idAttribute];
    }
    b$$790 = c$$654.changes = {};
    var h$$193 = this.attributes;
    var g$$236 = this._escapedAttributes;
    var v2437 = this._previousAttributes;
    if (!v2437) {
      v2437 = {};
    }
    var j$$129 = v2437;
    for (e$$413 in d$$489) {
      a$$883 = d$$489[e$$413];
      var v9131 = !JAM.call(f$$232.isEqual, f$$232, [h$$193[e$$413], a$$883], JAM.policy.p3);
      if (!v9131) {
        var v15021 = c$$654.unset;
        if (v15021) {
          v15021 = JAM.call(f$$232.has, f$$232, [h$$193, e$$413], JAM.policy.p3);
        }
        v9131 = v15021;
      }
      if (v9131) {
        delete g$$236[e$$413];
        var v15023;
        if (c$$654.silent) {
          v15023 = this._silent;
        } else {
          v15023 = b$$790;
        }
        JAM.set(v15023, e$$413, !0, JAM.policy.p2);
      }
      var v2439;
      if (c$$654.unset) {
        v2439 = delete h$$193[e$$413];
      } else {
        v2439 = JAM.set(h$$193, e$$413, a$$883, JAM.policy.p2);
      }
      v2439;
      var v2440;
      var v15024 = !JAM.call(f$$232.isEqual, f$$232, [j$$129[e$$413], a$$883], JAM.policy.p3);
      if (!v15024) {
        v15024 = JAM.call(f$$232.has, f$$232, [h$$193, e$$413], JAM.policy.p3) != JAM.call(f$$232.has, f$$232, [j$$129, e$$413], JAM.policy.p3);
      }
      if (v15024) {
        JAM.set(this.changed, e$$413, a$$883, JAM.policy.p2);
        var v15026 = c$$654.silent;
        if (!v15026) {
          v15026 = JAM.set(this._pending, e$$413, !0, JAM.policy.p2);
        }
        v2440 = v15026;
      } else {
        delete this.changed[e$$413];
        v2440 = delete this._pending[e$$413];
      }
      v2440;
    }
    var v2441 = c$$654.silent;
    if (!v2441) {
      JAM.call(this.change, this, [c$$654], JAM.policy.p3);
    }
    return this;
  }
  function v2139(a$$882) {
    return null != JAM.call(this.get, this, [a$$882], JAM.policy.p3);
  }
  function v2138(a$$881) {
    var b$$789;
    if (b$$789 = this._escapedAttributes[a$$881]) {
      return b$$789;
    }
    b$$789 = JAM.call(this.get, this, [a$$881], JAM.policy.p3);
    var v2444 = this._escapedAttributes;
    var v2445 = a$$881;
    var v15029;
    if (null == b$$789) {
      v15029 = "";
    } else {
      v15029 = "" + b$$789;
    }
    var v31147 = JAM.call(f$$232.escape, f$$232, [v15029], JAM.policy.p3);
    return JAM.set(v2444, v2445, v31147, JAM.policy.p2);
  }
  function v2137(a$$880) {
    return this.attributes[a$$880];
  }
  function v2136() {
    return JAM.call(f$$232.clone, f$$232, [this.attributes], JAM.policy.p3);
  }
  function v2135() {
    return;
  }
  function v2134(a$$879, b$$788) {
    var c$$653;
    if (!a$$879) {
      a$$879 = {};
    }
    var v9139 = b$$788;
    if (v9139) {
      v9139 = b$$788.parse;
    }
    var v2448 = v9139;
    if (v2448) {
      a$$879 = JAM.call(this.parse, this, [a$$879], JAM.policy.p3);
    }
    if (c$$653 = JAM.call(n$$110, null, [this, "defaults"], JAM.policy.p3)) {
      a$$879 = JAM.call(f$$232.extend, f$$232, [{}, c$$653, a$$879], JAM.policy.p3);
    }
    var v9140 = b$$788;
    if (v9140) {
      v9140 = b$$788.collection;
    }
    var v2450 = v9140;
    if (v2450) {
      this.collection = b$$788.collection;
    }
    this.attributes = {};
    this._escapedAttributes = {};
    var v31148 = JAM.call(f$$232.uniqueId, f$$232, ["c"], JAM.policy.p3);
    this.cid = v31148;
    this.changed = {};
    this._silent = {};
    this._pending = {};
    JAM.call(this.set, this, [a$$879, {silent:!0}], JAM.policy.p3);
    this.changed = {};
    this._silent = {};
    this._pending = {};
    var v31149 = JAM.call(f$$232.clone, f$$232, [this.attributes], JAM.policy.p3);
    this._previousAttributes = v31149;
    var v2453 = this.initialize;
    JAM.call(v2453.apply, v2453, [this, arguments], JAM.policy.p3);
    return;
  }
  function v2133(a$$878) {
    var b$$787;
    var c$$652;
    var d$$488;
    var e$$412;
    var f$$234;
    var g$$235;
    if (!(d$$488 = this._callbacks)) {
      return this;
    }
    f$$234 = d$$488.all;
    a$$878 = JAM.call(a$$878.split, a$$878, [p$$61], JAM.policy.p3);
    g$$235 = JAM.call(z$$11.call, z$$11, [arguments, 1], JAM.policy.p3);
    var v2464 = b$$787 = JAM.call(a$$878.shift, a$$878, [], JAM.policy.p3);
    for (;v2464;) {
      if (c$$652 = d$$488[b$$787]) {
        e$$412 = c$$652.tail;
        var v2457 = (c$$652 = c$$652.next) !== e$$412;
        for (;v2457;) {
          var v2455 = c$$652.callback;
          var v9144 = c$$652.context;
          if (!v9144) {
            v9144 = this;
          }
          JAM.call(v2455.apply, v2455, [v9144, g$$235], JAM.policy.p3);
          v2457 = (c$$652 = c$$652.next) !== e$$412;
        }
      }
      if (c$$652 = f$$234) {
        e$$412 = c$$652.tail;
        var v2459 = [b$$787];
        b$$787 = JAM.call(v2459.concat, v2459, [g$$235], JAM.policy.p3);
        var v2462 = (c$$652 = c$$652.next) !== e$$412;
        for (;v2462;) {
          var v2460 = c$$652.callback;
          var v9147 = c$$652.context;
          if (!v9147) {
            v9147 = this;
          }
          JAM.call(v2460.apply, v2460, [v9147, b$$787], JAM.policy.p3);
          v2462 = (c$$652 = c$$652.next) !== e$$412;
        }
      }
      v2464 = b$$787 = JAM.call(a$$878.shift, a$$878, [], JAM.policy.p3);
    }
    return this;
  }
  function v2132(a$$877, b$$786, c$$651) {
    var d$$487;
    var e$$411;
    var h$$192;
    var g$$234;
    var j$$128;
    var q$$28;
    if (e$$411 = this._callbacks) {
      var v15032 = !a$$877;
      if (v15032) {
        v15032 = !b$$786;
      }
      var v9149 = v15032;
      if (v9149) {
        v9149 = !c$$651;
      }
      if (v9149) {
        delete this._callbacks;
        return this;
      }
      var v2466;
      if (a$$877) {
        v2466 = JAM.call(a$$877.split, a$$877, [p$$61], JAM.policy.p3);
      } else {
        v2466 = JAM.call(f$$232.keys, f$$232, [e$$411], JAM.policy.p3);
      }
      a$$877 = v2466;
      var v2470 = d$$487 = JAM.call(a$$877.shift, a$$877, [], JAM.policy.p3);
      for (;v2470;) {
        h$$192 = e$$411[d$$487];
        delete e$$411[d$$487];
        var v15033 = h$$192;
        if (v15033) {
          v15033 = b$$786 || c$$651;
        }
        if (v15033) {
          g$$234 = h$$192.tail;
          var v2468 = (h$$192 = h$$192.next) !== g$$234;
          for (;v2468;) {
            j$$128 = h$$192.callback;
            q$$28 = h$$192.context;
            var v19487 = b$$786;
            if (v19487) {
              v19487 = j$$128 !== b$$786;
            }
            var v15034 = v19487;
            if (!v15034) {
              var v19488 = c$$651;
              if (v19488) {
                v19488 = q$$28 !== c$$651;
              }
              v15034 = v19488;
            }
            if (v15034) {
              JAM.call(this.on, this, [d$$487, j$$128, q$$28], JAM.policy.p3);
            }
            v2468 = (h$$192 = h$$192.next) !== g$$234;
          }
        }
        v2470 = d$$487 = JAM.call(a$$877.shift, a$$877, [], JAM.policy.p3);
      }
      return this;
    }
    return;
  }
  function v2131(a$$876, b$$785, c$$650) {
    var d$$486;
    var e$$410;
    var f$$233;
    var g$$233;
    var j$$127;
    if (!b$$785) {
      return this;
    }
    a$$876 = JAM.call(a$$876.split, a$$876, [p$$61], JAM.policy.p3);
    var v2473 = this._callbacks;
    if (!v2473) {
      v2473 = this._callbacks = {};
    }
    d$$486 = v2473;
    var v2474 = e$$410 = JAM.call(a$$876.shift, a$$876, [], JAM.policy.p3);
    for (;v2474;) {
      var v24190;
      if (j$$127 = d$$486[e$$410]) {
        v24190 = j$$127.tail;
      } else {
        v24190 = {};
      }
      f$$233 = v24190;
      f$$233.next = g$$233 = {};
      f$$233.context = c$$650;
      f$$233.callback = b$$785;
      var v15035;
      if (j$$127) {
        v15035 = j$$127.next;
      } else {
        v15035 = f$$233;
      }
      JAM.set(d$$486, e$$410, {tail:g$$233, next:v15035}, JAM.policy.p2);
      v2474 = e$$410 = JAM.call(a$$876.shift, a$$876, [], JAM.policy.p3);
    }
    return this;
  }
  function v2130() {
    l$$97.Backbone = y$$57;
    return this;
  }
  function v2129(a$$875) {
    i$$241 = a$$875;
    return;
  }
  function t$$33() {
    throw JAM.call(Error, null, ['A "url" property or function must be specified'], JAM.policy.p3);
  }
  function n$$110(a$$946, b$$833) {
    var v2475;
    var v15036 = !a$$946;
    if (!v15036) {
      v15036 = !a$$946[b$$833];
    }
    if (v15036) {
      v2475 = null;
    } else {
      var v9154;
      if (JAM.call(f$$232.isFunction, f$$232, [a$$946[b$$833]], JAM.policy.p3)) {
        v9154 = JAM.call(a$$946[b$$833], a$$946, [], JAM.policy.p3);
      } else {
        v9154 = a$$946[b$$833];
      }
      v2475 = v9154;
    }
    return v2475;
  }
  function G$$5(a$$945, b$$832, c$$679) {
    function v2128() {
      JAM.call(a$$945.apply, a$$945, [this, arguments], JAM.policy.p3);
      return;
    }
    var d$$506;
    var v2476;
    var v15038 = b$$832;
    if (v15038) {
      v15038 = JAM.call(b$$832.hasOwnProperty, b$$832, ["constructor"], JAM.policy.p3);
    }
    if (v15038) {
      v2476 = b$$832.constructor;
    } else {
      v2476 = v2128;
    }
    d$$506 = v2476;
    JAM.call(f$$232.extend, f$$232, [d$$506, a$$945], JAM.policy.p3);
    x$$77.prototype = a$$945.prototype;
    var v2477 = d$$506;
    var v31150 = JAM.new(x$$77, [], JAM.policy.p3);
    v2477.prototype = v31150;
    if (b$$832) {
      JAM.call(f$$232.extend, f$$232, [d$$506.prototype, b$$832], JAM.policy.p3);
    }
    if (c$$679) {
      JAM.call(f$$232.extend, f$$232, [d$$506, c$$679], JAM.policy.p3);
    }
    d$$506.prototype.constructor = d$$506;
    d$$506.__super__ = a$$945.prototype;
    return d$$506;
  }
  function x$$77() {
    return;
  }
  var l$$97 = this;
  var y$$57 = l$$97.Backbone;
  var z$$11 = Array.prototype.slice;
  var A$$7 = Array.prototype.splice;
  var g$$232;
  var v2481;
  if ("undefined" !== typeof exports) {
    v2481 = exports;
  } else {
    v2481 = l$$97.Backbone = {};
  }
  g$$232 = v2481;
  g$$232.VERSION = "0.9.2";
  var f$$232 = l$$97._;
  var v9159 = !f$$232;
  if (v9159) {
    v9159 = "undefined" !== typeof require;
  }
  var v2482 = v9159;
  if (v2482) {
    f$$232 = JAM.call(require, null, ["underscore"], JAM.policy.p3);
  }
  var v9160 = l$$97.jQuery;
  if (!v9160) {
    v9160 = l$$97.Zepto;
  }
  var v2483 = v9160;
  if (!v2483) {
    v2483 = l$$97.ender;
  }
  var i$$241 = v2483;
  g$$232.setDomLibrary = v2129;
  g$$232.noConflict = v2130;
  g$$232.emulateHTTP = !1;
  g$$232.emulateJSON = !1;
  var p$$61 = /\s+/;
  var k$$93 = g$$232.Events = {on:v2131, off:v2132, trigger:v2133};
  k$$93.bind = k$$93.on;
  k$$93.unbind = k$$93.off;
  var o$$42 = g$$232.Model = v2134;
  JAM.call(f$$232.extend, f$$232, [o$$42.prototype, k$$93, {changed:null, _silent:null, _pending:null, idAttribute:"id", initialize:v2135, toJSON:v2136, get:v2137, escape:v2138, has:v2139, set:v2140, unset:v2141, clear:v2142, fetch:v2144, save:v2146, destroy:v2148, url:v2149, parse:v2150, clone:v2151, isNew:v2152, change:v2153, hasChanged:v2154, changedAttributes:v2155, previous:v2156, previousAttributes:v2157, isValid:v2158, _validate:v2159}], JAM.policy.p3);
  var r$$32 = g$$232.Collection = v2160;
  JAM.call(f$$232.extend, f$$232, [r$$32.prototype, k$$93, {model:o$$42, initialize:v2161, toJSON:v2163, add:v2164, remove:v2165, push:v2166, pop:v2167, unshift:v2168, shift:v2169, get:v2170, getByCid:v2171, at:v2172, where:v2174, sort:v2175, pluck:v2177, reset:v2178, fetch:v2180, create:v2182, parse:v2183, chain:v2184, _reset:v2185, _prepareModel:v2186, _removeReference:v2187, _onModelEvent:v2188}], JAM.policy.p3);
  JAM.call(f$$232.each, f$$232, [JAM.call("forEach,each,map,reduce,reduceRight,find,detect,filter,select,reject,every,all,some,any,include,contains,invoke,max,min,sortBy,sortedIndex,toArray,size,first,initial,rest,last,without,indexOf,shuffle,lastIndexOf,isEmpty,groupBy".split, "forEach,each,map,reduce,reduceRight,find,detect,filter,select,reject,every,all,some,any,include,contains,invoke,max,min,sortBy,sortedIndex,toArray,size,first,initial,rest,last,without,indexOf,shuffle,lastIndexOf,isEmpty,groupBy", 
  [","], JAM.policy.p3), v2190], JAM.policy.p3);
  var u$$20 = g$$232.Router = v2191;
  var B$$7 = /:\w+/g;
  var C$$6 = /\*\w+/g;
  var D$$6 = /[-[\]{}()+?.,\\^$|#\s]/g;
  JAM.call(f$$232.extend, f$$232, [u$$20.prototype, k$$93, {initialize:v2192, route:v2194, navigate:v2195, _bindRoutes:v2196, _routeToRegExp:v2197, _extractParameters:v2198}], JAM.policy.p3);
  var m$$64 = g$$232.History = v2199;
  var s$$36 = /^[#\/]/;
  var E$$6 = /msie [\w.]+/;
  m$$64.started = !1;
  JAM.call(f$$232.extend, f$$232, [m$$64.prototype, k$$93, {interval:50, getHash:v2200, getFragment:v2201, start:v2202, stop:v2203, route:v2204, checkUrl:v2205, loadUrl:v2207, navigate:v2208, _updateHash:v2209}], JAM.policy.p3);
  var v$$15 = g$$232.View = v2210;
  var F$$6 = /^(\S+)\s*(.*)$/;
  var w$$21 = JAM.call("model,collection,el,id,attributes,className,tagName".split, "model,collection,el,id,attributes,className,tagName", [","], JAM.policy.p3);
  JAM.call(f$$232.extend, f$$232, [v$$15.prototype, k$$93, {tagName:"div", $:v2211, initialize:v2212, render:v2213, remove:v2214, make:v2215, setElement:v2216, delegateEvents:v2217, undelegateEvents:v2218, _configure:v2219, _ensureElement:v2220}], JAM.policy.p3);
  o$$42.extend = r$$32.extend = u$$20.extend = v$$15.extend = v2221;
  var H$$5 = {create:"POST", update:"PUT", "delete":"DELETE", read:"GET"};
  g$$232.sync = v2223;
  g$$232.wrapError = v2225;
  return;
}
function v2127() {
  function v2126() {
    return this._wrapped;
  }
  function v2125() {
    this._chain = true;
    return this;
  }
  function v2124(a$$874) {
    function v2123() {
      return JAM.call(x$$76, null, [JAM.call(b$$784.apply, b$$784, [this._wrapped, arguments], JAM.policy.p3), this._chain], JAM.policy.p3);
    }
    var b$$784 = k$$92[a$$874];
    JAM.set(m$$63.prototype, a$$874, v2123, JAM.policy.p2);
    return;
  }
  function v2122(a$$873) {
    function v2121() {
      var d$$485 = this._wrapped;
      JAM.call(b$$783.apply, b$$783, [d$$485, arguments], JAM.policy.p3);
      var e$$409 = d$$485.length;
      var v15042 = a$$873 == "shift";
      if (!v15042) {
        v15042 = a$$873 == "splice";
      }
      var v9163 = v15042;
      if (v9163) {
        v9163 = e$$409 === 0;
      }
      var v2498 = v9163;
      if (v2498) {
        delete d$$485[0];
      }
      return JAM.call(x$$76, null, [d$$485, this._chain], JAM.policy.p3);
    }
    var b$$783 = k$$92[a$$873];
    JAM.set(m$$63.prototype, a$$873, v2121, JAM.policy.p2);
    return;
  }
  function v2120(a$$868) {
    var v2501 = JAM.call(b$$743, null, [a$$868], JAM.policy.p3);
    return JAM.call(v2501.chain, v2501, [], JAM.policy.p3);
  }
  function v2119(a$$862, c$$647, d$$484) {
    function v2118(a$$867) {
      return JAM.call(e$$408.call, e$$408, [this, a$$867, b$$743], JAM.policy.p3);
    }
    function v2117(a$$866, b$$782) {
      return "';\n" + JAM.call(w$$20, null, [b$$782], JAM.policy.p3) + "\n;__p+='";
    }
    function v2116(a$$865, b$$781) {
      return "'+\n(" + JAM.call(w$$20, null, [b$$781], JAM.policy.p3) + ")+\n'";
    }
    function v2115(a$$864, b$$780) {
      return "'+\n_.escape(" + JAM.call(w$$20, null, [b$$780], JAM.policy.p3) + ")+\n'";
    }
    function v2114(a$$863) {
      return "\\" + n$$109[a$$863];
    }
    d$$484 = JAM.call(b$$743.defaults, b$$743, [d$$484 || {}, b$$743.templateSettings], JAM.policy.p3);
    var v24191 = JAM.call(a$$862.replace, a$$862, [O$$3, v2114], JAM.policy.p3);
    var v26385 = d$$484.escape;
    if (!v26385) {
      v26385 = u$$19;
    }
    var v19494 = JAM.call(v24191.replace, v24191, [v26385, v2115], JAM.policy.p3);
    var v24193 = d$$484.interpolate;
    if (!v24193) {
      v24193 = u$$19;
    }
    var v15043 = JAM.call(v19494.replace, v19494, [v24193, v2116], JAM.policy.p3);
    var v19496 = d$$484.evaluate;
    if (!v19496) {
      v19496 = u$$19;
    }
    a$$862 = "__p+='" + JAM.call(v15043.replace, v15043, [v19496, v2117], JAM.policy.p3) + "';\n";
    var v2509 = d$$484.variable;
    if (!v2509) {
      a$$862 = "with(obj||{}){\n" + a$$862 + "}\n";
    }
    a$$862 = "var __p='';var print=function(){__p+=Array.prototype.join.call(arguments, '')};\n" + a$$862 + "return __p;\n";
    var v9170 = d$$484.variable;
    if (!v9170) {
      v9170 = "obj";
    }
    var e$$408 = JAM.new(Function, [v9170, "_", a$$862], JAM.policy.p3);
    if (c$$647) {
      return JAM.call(e$$408, null, [c$$647, b$$743], JAM.policy.p3);
    }
    c$$647 = v2118;
    var v24195 = d$$484.variable;
    if (!v24195) {
      v24195 = "obj";
    }
    c$$647.source = "function(" + v24195 + "){\n" + a$$862 + "}";
    return c$$647;
  }
  function v2113(a$$859) {
    var b$$778 = N$$3;
    N$$3 = N$$3 + 1;
    var v2513;
    if (a$$859) {
      v2513 = a$$859 + b$$778;
    } else {
      v2513 = b$$778;
    }
    return v2513;
  }
  function v2112(a$$858) {
    function v2111(c$$646) {
      JAM.call(M$$3, null, [c$$646, JAM.set(b$$743, c$$646, a$$858[c$$646], JAM.policy.p2)], JAM.policy.p3);
      return;
    }
    JAM.call(j$$125, null, [JAM.call(b$$743.functions, b$$743, [a$$858], JAM.policy.p3), v2111], JAM.policy.p3);
    return;
  }
  function v2110(a$$857, c$$645) {
    if (a$$857 == null) {
      return null;
    }
    var d$$483 = a$$857[c$$645];
    var v2517;
    if (JAM.call(b$$743.isFunction, b$$743, [d$$483], JAM.policy.p3)) {
      v2517 = JAM.call(d$$483.call, d$$483, [a$$857], JAM.policy.p3);
    } else {
      v2517 = d$$483;
    }
    return v2517;
  }
  function v2109(a$$856) {
    var v26388 = "" + a$$856;
    var v24196 = JAM.call(v26388.replace, v26388, [/&/g, "&amp;"], JAM.policy.p3);
    var v19498 = JAM.call(v24196.replace, v24196, [/</g, "&lt;"], JAM.policy.p3);
    var v15047 = JAM.call(v19498.replace, v19498, [/>/g, "&gt;"], JAM.policy.p3);
    var v9173 = JAM.call(v15047.replace, v15047, [/"/g, "&quot;"], JAM.policy.p3);
    var v2518 = JAM.call(v9173.replace, v9173, [/'/g, "&#x27;"], JAM.policy.p3);
    return JAM.call(v2518.replace, v2518, [/\//g, "&#x2F;"], JAM.policy.p3);
  }
  function v2108(a$$855, b$$777, d$$482) {
    var e$$407 = 0;
    var v2519 = e$$407 < a$$855;
    for (;v2519;) {
      JAM.call(b$$777.call, b$$777, [d$$482, e$$407], JAM.policy.p3);
      e$$407 = e$$407 + 1;
      v2519 = e$$407 < a$$855;
    }
    return;
  }
  function v2107(a$$854) {
    return a$$854;
  }
  function v2106() {
    s$$35._ = I$$4;
    return this;
  }
  function v2105(a$$853, b$$776) {
    return JAM.call(K$$3.call, K$$3, [a$$853, b$$776], JAM.policy.p3);
  }
  function v2104(a$$852) {
    return a$$852 === void 0;
  }
  function v2103(a$$851) {
    return a$$851 === null;
  }
  function v2102(a$$850) {
    return JAM.call(l$$96.call, l$$96, [a$$850], JAM.policy.p3) == "[object RegExp]";
  }
  function v2101(a$$849) {
    return JAM.call(l$$96.call, l$$96, [a$$849], JAM.policy.p3) == "[object Date]";
  }
  function v2100(a$$848) {
    var v9174 = a$$848 === true;
    if (!v9174) {
      v9174 = a$$848 === false;
    }
    var v2523 = v9174;
    if (!v2523) {
      v2523 = JAM.call(l$$96.call, l$$96, [a$$848], JAM.policy.p3) == "[object Boolean]";
    }
    return v2523;
  }
  function v2099(a$$847) {
    return a$$847 !== a$$847;
  }
  function v2098(a$$846) {
    var v2524 = JAM.call(b$$743.isNumber, b$$743, [a$$846], JAM.policy.p3);
    if (v2524) {
      v2524 = JAM.call(isFinite, null, [a$$846], JAM.policy.p3);
    }
    return v2524;
  }
  function v2097(a$$845) {
    return JAM.call(l$$96.call, l$$96, [a$$845], JAM.policy.p3) == "[object Number]";
  }
  function v2096(a$$844) {
    return JAM.call(l$$96.call, l$$96, [a$$844], JAM.policy.p3) == "[object String]";
  }
  function v2095(a$$843) {
    return JAM.call(l$$96.call, l$$96, [a$$843], JAM.policy.p3) == "[object Function]";
  }
  function v2094(a$$842) {
    var v9177 = !a$$842;
    if (!v9177) {
      v9177 = !JAM.call(b$$743.has, b$$743, [a$$842, "callee"], JAM.policy.p3);
    }
    return!v9177;
  }
  function v2093(a$$841) {
    return JAM.call(l$$96.call, l$$96, [a$$841], JAM.policy.p3) == "[object Arguments]";
  }
  function v2092(a$$840) {
    return a$$840 === JAM.call(Object, null, [a$$840], JAM.policy.p3);
  }
  function v2091(a$$839) {
    return JAM.call(l$$96.call, l$$96, [a$$839], JAM.policy.p3) == "[object Array]";
  }
  function v2090(a$$838) {
    var v15051 = a$$838;
    if (v15051) {
      v15051 = a$$838.nodeType == 1;
    }
    return!!v15051;
  }
  function v2089(a$$837) {
    if (a$$837 == null) {
      return true;
    }
    var v9179 = JAM.call(b$$743.isArray, b$$743, [a$$837], JAM.policy.p3);
    if (!v9179) {
      v9179 = JAM.call(b$$743.isString, b$$743, [a$$837], JAM.policy.p3);
    }
    if (v9179) {
      return a$$837.length === 0;
    }
    var c$$644;
    for (c$$644 in a$$837) {
      if (JAM.call(b$$743.has, b$$743, [a$$837, c$$644], JAM.policy.p3)) {
        return false;
      }
    }
    return true;
  }
  function v2088(a$$836, b$$775) {
    return JAM.call(r$$31, null, [a$$836, b$$775, []], JAM.policy.p3);
  }
  function v2087(a$$835, b$$774) {
    JAM.call(b$$774, null, [a$$835], JAM.policy.p3);
    return a$$835;
  }
  function v2086(a$$834) {
    var v2538;
    if (!JAM.call(b$$743.isObject, b$$743, [a$$834], JAM.policy.p3)) {
      v2538 = a$$834;
    } else {
      var v9180;
      if (JAM.call(b$$743.isArray, b$$743, [a$$834], JAM.policy.p3)) {
        v9180 = JAM.call(a$$834.slice, a$$834, [], JAM.policy.p3);
      } else {
        v9180 = JAM.call(b$$743.extend, b$$743, [{}, a$$834], JAM.policy.p3);
      }
      v2538 = v9180;
    }
    return v2538;
  }
  function v2085(a$$833) {
    function v2084(b$$773) {
      var d$$481;
      for (d$$481 in b$$773) {
        var v2539 = a$$833[d$$481] == null;
        if (v2539) {
          JAM.set(a$$833, d$$481, b$$773[d$$481], JAM.policy.p2);
        }
      }
      return;
    }
    JAM.call(j$$125, null, [JAM.call(i$$238.call, i$$238, [arguments, 1], JAM.policy.p3), v2084], JAM.policy.p3);
    return a$$833;
  }
  function v2083(a$$832) {
    function v2082(b$$772) {
      var v2541 = b$$772 in a$$832;
      if (v2541) {
        JAM.set(c$$643, b$$772, a$$832[b$$772], JAM.policy.p2);
      }
      return;
    }
    var c$$643 = {};
    JAM.call(j$$125, null, [JAM.call(b$$743.flatten, b$$743, [JAM.call(i$$238.call, i$$238, [arguments, 1], JAM.policy.p3)], JAM.policy.p3), v2082], JAM.policy.p3);
    return c$$643;
  }
  function v2081(a$$831) {
    function v2080(b$$771) {
      var d$$480;
      for (d$$480 in b$$771) {
        JAM.set(a$$831, d$$480, b$$771[d$$480], JAM.policy.p2);
      }
      return;
    }
    JAM.call(j$$125, null, [JAM.call(i$$238.call, i$$238, [arguments, 1], JAM.policy.p3), v2080], JAM.policy.p3);
    return a$$831;
  }
  function v2079(a$$830) {
    var c$$642 = [];
    var d$$479;
    for (d$$479 in a$$830) {
      var v2544 = JAM.call(b$$743.isFunction, b$$743, [a$$830[d$$479]], JAM.policy.p3);
      if (v2544) {
        JAM.call(c$$642.push, c$$642, [d$$479], JAM.policy.p3);
      }
    }
    return JAM.call(c$$642.sort, c$$642, [], JAM.policy.p3);
  }
  function v2078(a$$829) {
    return JAM.call(b$$743.map, b$$743, [a$$829, b$$743.identity], JAM.policy.p3);
  }
  function v2077(a$$828) {
    if (a$$828 !== JAM.call(Object, null, [a$$828], JAM.policy.p3)) {
      throw JAM.new(TypeError, ["Invalid object"], JAM.policy.p3);
    }
    var c$$641 = [];
    var d$$478;
    for (d$$478 in a$$828) {
      var v2547 = JAM.call(b$$743.has, b$$743, [a$$828, d$$478], JAM.policy.p3);
      if (v2547) {
        var v9187 = c$$641.length;
        introspect(JAM.policy.p2) {
          c$$641[v9187] = d$$478;
        }
      }
    }
    return c$$641;
  }
  function v2076(a$$827, b$$770) {
    function v2075() {
      if ((a$$827 = a$$827 - 1) < 1) {
        return JAM.call(b$$770.apply, b$$770, [this, arguments], JAM.policy.p3);
      }
      return;
    }
    var v2549;
    if (a$$827 <= 0) {
      v2549 = JAM.call(b$$770, null, [], JAM.policy.p3);
    } else {
      v2549 = v2075;
    }
    return v2549;
  }
  function v2074() {
    function v2073() {
      var b$$769 = arguments;
      var d$$477 = a$$826.length - 1;
      var v2552 = d$$477 >= 0;
      for (;v2552;) {
        var v9190 = a$$826[d$$477];
        b$$769 = [JAM.call(v9190.apply, v9190, [this, b$$769], JAM.policy.p3)];
        d$$477 = d$$477 - 1;
        v2552 = d$$477 >= 0;
      }
      return b$$769[0];
    }
    var a$$826 = arguments;
    return v2073;
  }
  function v2072(a$$825, b$$768) {
    function v2071() {
      var v2553 = [a$$825];
      var d$$476 = JAM.call(v2553.concat, v2553, [JAM.call(i$$238.call, i$$238, [arguments, 0], JAM.policy.p3)], JAM.policy.p3);
      return JAM.call(b$$768.apply, b$$768, [this, d$$476], JAM.policy.p3);
    }
    return v2071;
  }
  function v2070(a$$824) {
    function v2069() {
      if (b$$767) {
        return d$$475;
      }
      b$$767 = true;
      return d$$475 = JAM.call(a$$824.apply, a$$824, [this, arguments], JAM.policy.p3);
    }
    var b$$767 = false;
    var d$$475;
    return v2069;
  }
  function v2068(a$$823, b$$766, d$$474) {
    function v2067() {
      function v2066() {
        e$$406 = null;
        if (!d$$474) {
          JAM.call(a$$823.apply, a$$823, [f$$231, g$$231], JAM.policy.p3);
        }
        return;
      }
      var f$$231 = this;
      var g$$231 = arguments;
      var v9192 = d$$474;
      if (v9192) {
        v9192 = !e$$406;
      }
      var v2555 = v9192;
      if (v2555) {
        JAM.call(a$$823.apply, a$$823, [f$$231, g$$231], JAM.policy.p3);
      }
      JAM.call(clearTimeout, null, [e$$406], JAM.policy.p3);
      e$$406 = JAM.call(setTimeout, null, [v2066, b$$766], JAM.policy.p3);
      return;
    }
    var e$$406;
    return v2067;
  }
  function v2065(a$$822, c$$640) {
    function v2064() {
      function v2063() {
        f$$230 = null;
        if (h$$191) {
          JAM.call(a$$822.apply, a$$822, [d$$473, e$$405], JAM.policy.p3);
        }
        JAM.call(j$$126, null, [], JAM.policy.p3);
        return;
      }
      d$$473 = this;
      e$$405 = arguments;
      if (!f$$230) {
        f$$230 = JAM.call(setTimeout, null, [v2063, c$$640], JAM.policy.p3);
      }
      var v2556;
      if (g$$230) {
        v2556 = h$$191 = true;
      } else {
        v2556 = i$$240 = JAM.call(a$$822.apply, a$$822, [d$$473, e$$405], JAM.policy.p3);
      }
      v2556;
      JAM.call(j$$126, null, [], JAM.policy.p3);
      g$$230 = true;
      return i$$240;
    }
    function v2062() {
      h$$191 = g$$230 = false;
      return;
    }
    var d$$473;
    var e$$405;
    var f$$230;
    var g$$230;
    var h$$191;
    var i$$240;
    var j$$126 = JAM.call(b$$743.debounce, b$$743, [v2062, c$$640], JAM.policy.p3);
    return v2064;
  }
  function v2061(a$$821) {
    var v2557 = b$$743.delay;
    var v9194 = [a$$821, 1];
    return JAM.call(v2557.apply, v2557, [b$$743, JAM.call(v9194.concat, v9194, [JAM.call(i$$238.call, i$$238, [arguments, 1], JAM.policy.p3)], JAM.policy.p3)], JAM.policy.p3);
  }
  function v2060(a$$820, b$$765) {
    function v2059() {
      return JAM.call(a$$820.apply, a$$820, [null, d$$472], JAM.policy.p3);
    }
    var d$$472 = JAM.call(i$$238.call, i$$238, [arguments, 2], JAM.policy.p3);
    return JAM.call(setTimeout, null, [v2059, b$$765], JAM.policy.p3);
  }
  function v2058(a$$819, c$$639) {
    function v2057() {
      var e$$404 = JAM.call(c$$639.apply, c$$639, [this, arguments], JAM.policy.p3);
      var v2559;
      if (JAM.call(b$$743.has, b$$743, [d$$471, e$$404], JAM.policy.p3)) {
        v2559 = d$$471[e$$404];
      } else {
        var v9196 = d$$471;
        var v9197 = e$$404;
        var v31151 = JAM.call(a$$819.apply, a$$819, [this, arguments], JAM.policy.p3);
        v2559 = JAM.set(v9196, v9197, v31151, JAM.policy.p2);
      }
      return v2559;
    }
    var d$$471 = {};
    if (!c$$639) {
      c$$639 = b$$743.identity;
    }
    return v2057;
  }
  function v2056(a$$818) {
    function v2055(c$$638) {
      var v2560 = a$$818;
      var v2561 = c$$638;
      var v31152 = JAM.call(b$$743.bind, b$$743, [a$$818[c$$638], a$$818], JAM.policy.p3);
      JAM.set(v2560, v2561, v31152, JAM.policy.p2);
      return;
    }
    var c$$637 = JAM.call(i$$238.call, i$$238, [arguments, 1], JAM.policy.p3);
    var v2562 = c$$637.length == 0;
    if (v2562) {
      c$$637 = JAM.call(b$$743.functions, b$$743, [a$$818], JAM.policy.p3);
    }
    JAM.call(j$$125, null, [c$$637, v2055], JAM.policy.p3);
    return a$$818;
  }
  function v2054(a$$817, c$$636) {
    function v2053() {
      if (!(this instanceof d$$470)) {
        return JAM.call(a$$817.apply, a$$817, [c$$636, JAM.call(e$$403.concat, e$$403, [JAM.call(i$$238.call, i$$238, [arguments], JAM.policy.p3)], JAM.policy.p3)], JAM.policy.p3);
      }
      H$$4.prototype = a$$817.prototype;
      var b$$764 = JAM.new(H$$4, [], JAM.policy.p3);
      var g$$229 = JAM.call(a$$817.apply, a$$817, [b$$764, JAM.call(e$$403.concat, e$$403, [JAM.call(i$$238.call, i$$238, [arguments], JAM.policy.p3)], JAM.policy.p3)], JAM.policy.p3);
      var v2566;
      if (JAM.call(Object, null, [g$$229], JAM.policy.p3) === g$$229) {
        v2566 = g$$229;
      } else {
        v2566 = b$$764;
      }
      return v2566;
    }
    var d$$470;
    var e$$403;
    var v9206 = a$$817.bind === t$$32;
    if (v9206) {
      v9206 = t$$32;
    }
    if (v9206) {
      return JAM.call(t$$32.apply, t$$32, [a$$817, JAM.call(i$$238.call, i$$238, [arguments, 1], JAM.policy.p3)], JAM.policy.p3);
    }
    if (!JAM.call(b$$743.isFunction, b$$743, [a$$817], JAM.policy.p3)) {
      throw JAM.new(TypeError, [], JAM.policy.p3);
    }
    e$$403 = JAM.call(i$$238.call, i$$238, [arguments, 2], JAM.policy.p3);
    return d$$470 = v2053;
  }
  function v2052(a$$816, b$$763, d$$469) {
    if (arguments.length <= 1) {
      b$$763 = a$$816 || 0;
      a$$816 = 0;
    }
    var v2571 = arguments[2];
    if (!v2571) {
      v2571 = 1;
    }
    d$$469 = v2571;
    var e$$402 = JAM.call(Math.max, Math, [JAM.call(Math.ceil, Math, [(b$$763 - a$$816) / d$$469], JAM.policy.p3), 0], JAM.policy.p3);
    var f$$229 = 0;
    var g$$228 = JAM.call(Array, null, [e$$402], JAM.policy.p3);
    var v2574 = f$$229 < e$$402;
    for (;v2574;) {
      var v2573 = f$$229;
      f$$229 = f$$229 + 1;
      introspect(JAM.policy.p2) {
        g$$228[v2573] = a$$816;
      }
      a$$816 = a$$816 + d$$469;
      v2574 = f$$229 < e$$402;
    }
    return g$$228;
  }
  function v2051(a$$815, b$$762) {
    if (a$$815 == null) {
      return-1;
    }
    var v9211 = F$$5;
    if (v9211) {
      v9211 = a$$815.lastIndexOf === F$$5;
    }
    if (v9211) {
      return JAM.call(a$$815.lastIndexOf, a$$815, [b$$762], JAM.policy.p3);
    }
    var d$$468 = a$$815.length;
    var v2578 = d$$468;
    d$$468 = d$$468 - 1;
    for (;v2578;) {
      var v9212 = d$$468 in a$$815;
      if (v9212) {
        v9212 = a$$815[d$$468] === b$$762;
      }
      if (v9212) {
        return d$$468;
      }
      v2578 = d$$468;
      d$$468 = d$$468 - 1;
    }
    return-1;
  }
  function v2050(a$$814, c$$635, d$$467) {
    if (a$$814 == null) {
      return-1;
    }
    var e$$401;
    if (d$$467) {
      d$$467 = JAM.call(b$$743.sortedIndex, b$$743, [a$$814, c$$635], JAM.policy.p3);
      var v2580;
      if (a$$814[d$$467] === c$$635) {
        v2580 = d$$467;
      } else {
        v2580 = -1;
      }
      return v2580;
    }
    var v9214 = q$$27;
    if (v9214) {
      v9214 = a$$814.indexOf === q$$27;
    }
    if (v9214) {
      return JAM.call(a$$814.indexOf, a$$814, [c$$635], JAM.policy.p3);
    }
    d$$467 = 0;
    e$$401 = a$$814.length;
    var v2583 = d$$467 < e$$401;
    for (;v2583;) {
      var v9215 = d$$467 in a$$814;
      if (v9215) {
        v9215 = a$$814[d$$467] === c$$635;
      }
      if (v9215) {
        return d$$467;
      }
      d$$467 = d$$467 + 1;
      v2583 = d$$467 < e$$401;
    }
    return-1;
  }
  function v2049() {
    var a$$813 = JAM.call(i$$238.call, i$$238, [arguments], JAM.policy.p3);
    var c$$634 = JAM.call(b$$743.max, b$$743, [JAM.call(b$$743.pluck, b$$743, [a$$813, "length"], JAM.policy.p3)], JAM.policy.p3);
    var d$$466 = JAM.call(Array, null, [c$$634], JAM.policy.p3);
    var e$$400 = 0;
    var v2587 = e$$400 < c$$634;
    for (;v2587;) {
      var v2585 = d$$466;
      var v2586 = e$$400;
      var v31153 = JAM.call(b$$743.pluck, b$$743, [a$$813, "" + e$$400], JAM.policy.p3);
      introspect(JAM.policy.p2) {
        v2585[v2586] = v31153;
      }
      e$$400 = e$$400 + 1;
      v2587 = e$$400 < c$$634;
    }
    return d$$466;
  }
  function v2048(a$$811) {
    function v2047(a$$812) {
      return!JAM.call(b$$743.include, b$$743, [c$$633, a$$812], JAM.policy.p3);
    }
    var c$$633 = JAM.call(b$$743.flatten, b$$743, [JAM.call(i$$238.call, i$$238, [arguments, 1], JAM.policy.p3), true], JAM.policy.p3);
    return JAM.call(b$$743.filter, b$$743, [a$$811, v2047], JAM.policy.p3);
  }
  function v2046(a$$809) {
    function v2045(a$$810) {
      function v2044(c$$632) {
        return JAM.call(b$$743.indexOf, b$$743, [c$$632, a$$810], JAM.policy.p3) >= 0;
      }
      return JAM.call(b$$743.every, b$$743, [c$$631, v2044], JAM.policy.p3);
    }
    var c$$631 = JAM.call(i$$238.call, i$$238, [arguments, 1], JAM.policy.p3);
    return JAM.call(b$$743.filter, b$$743, [JAM.call(b$$743.uniq, b$$743, [a$$809], JAM.policy.p3), v2045], JAM.policy.p3);
  }
  function v2043() {
    return JAM.call(b$$743.uniq, b$$743, [JAM.call(b$$743.flatten, b$$743, [arguments, true], JAM.policy.p3)], JAM.policy.p3);
  }
  function v2042(a$$808, c$$630, d$$464) {
    function v2041(d$$465, g$$227, h$$190) {
      var v9217;
      if (c$$630) {
        var v15063 = JAM.call(b$$743.last, b$$743, [d$$465], JAM.policy.p3) !== g$$227;
        if (!v15063) {
          v15063 = !d$$465.length;
        }
        v9217 = v15063;
      } else {
        v9217 = !JAM.call(b$$743.include, b$$743, [d$$465, g$$227], JAM.policy.p3);
      }
      if (v9217) {
        JAM.call(d$$465.push, d$$465, [g$$227], JAM.policy.p3);
        JAM.call(e$$399.push, e$$399, [a$$808[h$$190]], JAM.policy.p3);
      }
      return d$$465;
    }
    var v2595;
    if (d$$464) {
      v2595 = JAM.call(b$$743.map, b$$743, [a$$808, d$$464], JAM.policy.p3);
    } else {
      v2595 = a$$808;
    }
    d$$464 = v2595;
    var e$$399 = [];
    var v2596 = a$$808.length < 3;
    if (v2596) {
      c$$630 = true;
    }
    JAM.call(b$$743.reduce, b$$743, [d$$464, v2041, []], JAM.policy.p3);
    return e$$399;
  }
  function v2040(a$$807) {
    return JAM.call(b$$743.difference, b$$743, [a$$807, JAM.call(i$$238.call, i$$238, [arguments, 1], JAM.policy.p3)], JAM.policy.p3);
  }
  function v2039(a$$805, c$$629) {
    function v2038(a$$806, e$$398) {
      if (JAM.call(b$$743.isArray, b$$743, [e$$398], JAM.policy.p3)) {
        var v9219;
        if (c$$629) {
          v9219 = e$$398;
        } else {
          v9219 = JAM.call(b$$743.flatten, b$$743, [e$$398], JAM.policy.p3);
        }
        return JAM.call(a$$806.concat, a$$806, [v9219], JAM.policy.p3);
      }
      JAM.set(a$$806, a$$806.length, e$$398, JAM.policy.p2);
      return a$$806;
    }
    return JAM.call(b$$743.reduce, b$$743, [a$$805, v2038, []], JAM.policy.p3);
  }
  function v2037(a$$803) {
    function v2036(a$$804) {
      return!!a$$804;
    }
    return JAM.call(b$$743.filter, b$$743, [a$$803, v2036], JAM.policy.p3);
  }
  function v2035(a$$802, b$$761, d$$463) {
    var v9220;
    var v19503 = b$$761 == null;
    if (!v19503) {
      v19503 = d$$463;
    }
    if (v19503) {
      v9220 = 1;
    } else {
      v9220 = b$$761;
    }
    return JAM.call(i$$238.call, i$$238, [a$$802, v9220], JAM.policy.p3);
  }
  function v2034(a$$801, b$$760, d$$462) {
    var v2603;
    var v15066 = b$$760 != null;
    if (v15066) {
      v15066 = !d$$462;
    }
    if (v15066) {
      v2603 = JAM.call(i$$238.call, i$$238, [a$$801, JAM.call(Math.max, Math, [a$$801.length - b$$760, 0], JAM.policy.p3)], JAM.policy.p3);
    } else {
      v2603 = a$$801[a$$801.length - 1];
    }
    return v2603;
  }
  function v2033(a$$800, b$$759, d$$461) {
    var v9224 = a$$800.length;
    var v15069;
    var v24198 = b$$759 == null;
    if (!v24198) {
      v24198 = d$$461;
    }
    if (v24198) {
      v15069 = 1;
    } else {
      v15069 = b$$759;
    }
    return JAM.call(i$$238.call, i$$238, [a$$800, 0, v9224 - v15069], JAM.policy.p3);
  }
  function v2032(a$$799, b$$758, d$$460) {
    var v2605;
    var v15070 = b$$758 != null;
    if (v15070) {
      v15070 = !d$$460;
    }
    if (v15070) {
      v2605 = JAM.call(i$$238.call, i$$238, [a$$799, 0, b$$758], JAM.policy.p3);
    } else {
      v2605 = a$$799[0];
    }
    return v2605;
  }
  function v2031(a$$798) {
    var v2606;
    if (JAM.call(b$$743.isArray, b$$743, [a$$798], JAM.policy.p3)) {
      v2606 = a$$798.length;
    } else {
      v2606 = JAM.call(b$$743.keys, b$$743, [a$$798], JAM.policy.p3).length;
    }
    return v2606;
  }
  function v2030(a$$797) {
    var v2607;
    if (!a$$797) {
      v2607 = [];
    } else {
      var v9229;
      var v19506 = JAM.call(b$$743.isArray, b$$743, [a$$797], JAM.policy.p3);
      if (!v19506) {
        v19506 = JAM.call(b$$743.isArguments, b$$743, [a$$797], JAM.policy.p3);
      }
      if (v19506) {
        v9229 = JAM.call(i$$238.call, i$$238, [a$$797], JAM.policy.p3);
      } else {
        var v15071;
        var v24200 = a$$797.toArray;
        if (v24200) {
          v24200 = JAM.call(b$$743.isFunction, b$$743, [a$$797.toArray], JAM.policy.p3);
        }
        if (v24200) {
          v15071 = JAM.call(a$$797.toArray, a$$797, [], JAM.policy.p3);
        } else {
          v15071 = JAM.call(b$$743.values, b$$743, [a$$797], JAM.policy.p3);
        }
        v9229 = v15071;
      }
      v2607 = v9229;
    }
    return v2607;
  }
  function v2029(a$$796, c$$628, d$$459) {
    if (!d$$459) {
      d$$459 = b$$743.identity;
    }
    var e$$397 = 0;
    var f$$228 = a$$796.length;
    var v2610 = e$$397 < f$$228;
    for (;v2610;) {
      var g$$226 = e$$397 + f$$228 >> 1;
      var v2609;
      if (JAM.call(d$$459, null, [a$$796[g$$226]], JAM.policy.p3) < JAM.call(d$$459, null, [c$$628], JAM.policy.p3)) {
        v2609 = e$$397 = g$$226 + 1;
      } else {
        v2609 = f$$228 = g$$226;
      }
      v2609;
      v2610 = e$$397 < f$$228;
    }
    return e$$397;
  }
  function v2028(a$$793, c$$626) {
    function v2027(a$$795, b$$757) {
      var c$$627 = JAM.call(e$$396, null, [a$$795, b$$757], JAM.policy.p3);
      var v9233 = d$$458[c$$627];
      if (!v9233) {
        v9233 = JAM.set(d$$458, c$$627, [], JAM.policy.p2);
      }
      var v2611 = v9233;
      JAM.call(v2611.push, v2611, [a$$795], JAM.policy.p3);
      return;
    }
    function v2026(a$$794) {
      return a$$794[c$$626];
    }
    var d$$458 = {};
    var v2612;
    if (JAM.call(b$$743.isFunction, b$$743, [c$$626], JAM.policy.p3)) {
      v2612 = c$$626;
    } else {
      v2612 = v2026;
    }
    var e$$396 = v2612;
    JAM.call(j$$125, null, [a$$793, v2027], JAM.policy.p3);
    return d$$458;
  }
  function v2025(a$$789, c$$623, d$$456) {
    function v2024(a$$792, b$$756) {
      var c$$625 = a$$792.criteria;
      var d$$457 = b$$756.criteria;
      var v2613;
      if (c$$625 === void 0) {
        v2613 = 1;
      } else {
        var v9235;
        if (d$$457 === void 0) {
          v9235 = -1;
        } else {
          var v15077;
          if (c$$625 < d$$457) {
            v15077 = -1;
          } else {
            var v19510;
            if (c$$625 > d$$457) {
              v19510 = 1;
            } else {
              v19510 = 0;
            }
            v15077 = v19510;
          }
          v9235 = v15077;
        }
        v2613 = v9235;
      }
      return v2613;
    }
    function v2023(a$$791, b$$755, c$$624) {
      return{value:a$$791, criteria:JAM.call(e$$395.call, e$$395, [d$$456, a$$791, b$$755, c$$624], JAM.policy.p3)};
    }
    function v2022(a$$790) {
      return a$$790[c$$623];
    }
    var v2615;
    if (JAM.call(b$$743.isFunction, b$$743, [c$$623], JAM.policy.p3)) {
      v2615 = c$$623;
    } else {
      v2615 = v2022;
    }
    var e$$395 = v2615;
    var v9238 = JAM.call(b$$743.map, b$$743, [a$$789, v2023], JAM.policy.p3);
    return JAM.call(b$$743.pluck, b$$743, [JAM.call(v9238.sort, v9238, [v2024], JAM.policy.p3), "value"], JAM.policy.p3);
  }
  function v2021(a$$787) {
    function v2020(a$$788, f$$227) {
      d$$455 = JAM.call(Math.floor, Math, [JAM.call(Math.random, Math, [], JAM.policy.p3) * (f$$227 + 1)], JAM.policy.p3);
      JAM.set(b$$754, f$$227, b$$754[d$$455], JAM.policy.p2);
      introspect(JAM.policy.p2) {
        b$$754[d$$455] = a$$788;
      }
      return;
    }
    var b$$754 = [];
    var d$$455;
    JAM.call(j$$125, null, [a$$787, v2020], JAM.policy.p3);
    return b$$754;
  }
  function v2019(a$$785, c$$622, d$$454) {
    function v2018(a$$786, b$$753, h$$189) {
      var v2618;
      if (c$$622) {
        v2618 = JAM.call(c$$622.call, c$$622, [d$$454, a$$786, b$$753, h$$189], JAM.policy.p3);
      } else {
        v2618 = a$$786;
      }
      b$$753 = v2618;
      var v2619 = b$$753 < e$$394.computed;
      if (v2619) {
        e$$394 = {value:a$$786, computed:b$$753};
      }
      return;
    }
    var v15079 = !c$$622;
    if (v15079) {
      v15079 = JAM.call(b$$743.isArray, b$$743, [a$$785], JAM.policy.p3);
    }
    var v9242 = v15079;
    if (v9242) {
      v9242 = a$$785[0] === +a$$785[0];
    }
    if (v9242) {
      var v2620 = Math.min;
      return JAM.call(v2620.apply, v2620, [Math, a$$785], JAM.policy.p3);
    }
    var v9243 = !c$$622;
    if (v9243) {
      v9243 = JAM.call(b$$743.isEmpty, b$$743, [a$$785], JAM.policy.p3);
    }
    if (v9243) {
      return Infinity;
    }
    var e$$394 = {computed:Infinity};
    JAM.call(j$$125, null, [a$$785, v2018], JAM.policy.p3);
    return e$$394.value;
  }
  function v2017(a$$783, c$$621, d$$453) {
    function v2016(a$$784, b$$752, h$$188) {
      var v2623;
      if (c$$621) {
        v2623 = JAM.call(c$$621.call, c$$621, [d$$453, a$$784, b$$752, h$$188], JAM.policy.p3);
      } else {
        v2623 = a$$784;
      }
      b$$752 = v2623;
      var v2624 = b$$752 >= e$$393.computed;
      if (v2624) {
        e$$393 = {value:a$$784, computed:b$$752};
      }
      return;
    }
    var v15082 = !c$$621;
    if (v15082) {
      v15082 = JAM.call(b$$743.isArray, b$$743, [a$$783], JAM.policy.p3);
    }
    var v9245 = v15082;
    if (v9245) {
      v9245 = a$$783[0] === +a$$783[0];
    }
    if (v9245) {
      var v2625 = Math.max;
      return JAM.call(v2625.apply, v2625, [Math, a$$783], JAM.policy.p3);
    }
    var v9246 = !c$$621;
    if (v9246) {
      v9246 = JAM.call(b$$743.isEmpty, b$$743, [a$$783], JAM.policy.p3);
    }
    if (v9246) {
      return-Infinity;
    }
    var e$$393 = {computed:-Infinity};
    JAM.call(j$$125, null, [a$$783, v2016], JAM.policy.p3);
    return e$$393.value;
  }
  function v2015(a$$781, c$$620) {
    function v2014(a$$782) {
      return a$$782[c$$620];
    }
    return JAM.call(b$$743.map, b$$743, [a$$781, v2014], JAM.policy.p3);
  }
  function v2013(a$$779, c$$619) {
    function v2012(a$$780) {
      var v9247;
      if (JAM.call(b$$743.isFunction, b$$743, [c$$619], JAM.policy.p3)) {
        v9247 = c$$619 || a$$780;
      } else {
        v9247 = a$$780[c$$619];
      }
      var v2629 = v9247;
      return JAM.call(v2629.apply, v2629, [a$$780, d$$452], JAM.policy.p3);
    }
    var d$$452 = JAM.call(i$$238.call, i$$238, [arguments, 2], JAM.policy.p3);
    return JAM.call(b$$743.map, b$$743, [a$$779, v2012], JAM.policy.p3);
  }
  function v2011(a$$777, c$$618) {
    function v2010(a$$778) {
      return a$$778 === c$$618;
    }
    var b$$751 = false;
    if (a$$777 == null) {
      return b$$751;
    }
    var v9248 = q$$27;
    if (v9248) {
      v9248 = a$$777.indexOf === q$$27;
    }
    if (v9248) {
      return JAM.call(a$$777.indexOf, a$$777, [c$$618], JAM.policy.p3) != -1;
    }
    return b$$751 = JAM.call(G$$4, null, [a$$777, v2010], JAM.policy.p3);
  }
  function v2009(a$$775, c$$617, d$$451) {
    function v2008(a$$776, b$$750, h$$187) {
      var v9249 = e$$392;
      if (!v9249) {
        v9249 = e$$392 = JAM.call(c$$617.call, c$$617, [d$$451, a$$776, b$$750, h$$187], JAM.policy.p3);
      }
      if (v9249) {
        return o$$41;
      }
      return;
    }
    if (!c$$617) {
      c$$617 = b$$743.identity;
    }
    var e$$392 = false;
    if (a$$775 == null) {
      return e$$392;
    }
    var v9251 = E$$5;
    if (v9251) {
      v9251 = a$$775.some === E$$5;
    }
    if (v9251) {
      return JAM.call(a$$775.some, a$$775, [c$$617, d$$451], JAM.policy.p3);
    }
    JAM.call(j$$125, null, [a$$775, v2008], JAM.policy.p3);
    return!!e$$392;
  }
  function v2007(a$$773, c$$616, b$$749) {
    function v2006(a$$774, g$$225, h$$186) {
      var v15089 = e$$391;
      if (v15089) {
        v15089 = JAM.call(c$$616.call, c$$616, [b$$749, a$$774, g$$225, h$$186], JAM.policy.p3);
      }
      if (!(e$$391 = v15089)) {
        return o$$41;
      }
      return;
    }
    var e$$391 = true;
    if (a$$773 == null) {
      return e$$391;
    }
    var v9253 = D$$5;
    if (v9253) {
      v9253 = a$$773.every === D$$5;
    }
    if (v9253) {
      return JAM.call(a$$773.every, a$$773, [c$$616, b$$749], JAM.policy.p3);
    }
    JAM.call(j$$125, null, [a$$773, v2006], JAM.policy.p3);
    return!!e$$391;
  }
  function v2005(a$$771, c$$615, b$$748) {
    function v2004(a$$772, g$$224, h$$185) {
      var v2641 = JAM.call(c$$615.call, c$$615, [b$$748, a$$772, g$$224, h$$185], JAM.policy.p3);
      if (!v2641) {
        var v9254 = e$$390.length;
        introspect(JAM.policy.p2) {
          e$$390[v9254] = a$$772;
        }
      }
      return;
    }
    var e$$390 = [];
    if (a$$771 == null) {
      return e$$390;
    }
    JAM.call(j$$125, null, [a$$771, v2004], JAM.policy.p3);
    return e$$390;
  }
  function v2003(a$$769, c$$614, b$$747) {
    function v2002(a$$770, g$$223, h$$184) {
      var v2643 = JAM.call(c$$614.call, c$$614, [b$$747, a$$770, g$$223, h$$184], JAM.policy.p3);
      if (v2643) {
        var v9256 = e$$389.length;
        introspect(JAM.policy.p2) {
          e$$389[v9256] = a$$770;
        }
      }
      return;
    }
    var e$$389 = [];
    if (a$$769 == null) {
      return e$$389;
    }
    var v9257 = C$$5;
    if (v9257) {
      v9257 = a$$769.filter === C$$5;
    }
    if (v9257) {
      return JAM.call(a$$769.filter, a$$769, [c$$614, b$$747], JAM.policy.p3);
    }
    JAM.call(j$$125, null, [a$$769, v2002], JAM.policy.p3);
    return e$$389;
  }
  function v2001(a$$767, c$$613, b$$746) {
    function v2000(a$$768, g$$222, h$$183) {
      if (JAM.call(c$$613.call, c$$613, [b$$746, a$$768, g$$222, h$$183], JAM.policy.p3)) {
        e$$388 = a$$768;
        return true;
      }
      return;
    }
    var e$$388;
    JAM.call(G$$4, null, [a$$767, v2000], JAM.policy.p3);
    return e$$388;
  }
  function v1999(a$$766, c$$612, d$$450, e$$387) {
    var f$$226 = arguments.length > 2;
    var v2648 = a$$766 == null;
    if (v2648) {
      a$$766 = [];
    }
    var v9258 = B$$6;
    if (v9258) {
      v9258 = a$$766.reduceRight === B$$6;
    }
    if (v9258) {
      if (e$$387) {
        c$$612 = JAM.call(b$$743.bind, b$$743, [c$$612, e$$387], JAM.policy.p3);
      }
      var v2649;
      if (f$$226) {
        v2649 = JAM.call(a$$766.reduceRight, a$$766, [c$$612, d$$450], JAM.policy.p3);
      } else {
        v2649 = JAM.call(a$$766.reduceRight, a$$766, [c$$612], JAM.policy.p3);
      }
      return v2649;
    }
    var v2651 = JAM.call(b$$743.toArray, b$$743, [a$$766], JAM.policy.p3);
    var g$$221 = JAM.call(v2651.reverse, v2651, [], JAM.policy.p3);
    var v9259 = e$$387;
    if (v9259) {
      v9259 = !f$$226;
    }
    var v2652 = v9259;
    if (v2652) {
      c$$612 = JAM.call(b$$743.bind, b$$743, [c$$612, e$$387], JAM.policy.p3);
    }
    var v2653;
    if (f$$226) {
      v2653 = JAM.call(b$$743.reduce, b$$743, [g$$221, c$$612, d$$450, e$$387], JAM.policy.p3);
    } else {
      v2653 = JAM.call(b$$743.reduce, b$$743, [g$$221, c$$612], JAM.policy.p3);
    }
    return v2653;
  }
  function v1998(a$$764, c$$611, d$$449, e$$386) {
    function v1997(a$$765, b$$745, i$$239) {
      if (f$$225) {
        d$$449 = JAM.call(c$$611.call, c$$611, [e$$386, d$$449, a$$765, b$$745, i$$239], JAM.policy.p3);
      } else {
        d$$449 = a$$765;
        f$$225 = true;
      }
      return;
    }
    var f$$225 = arguments.length > 2;
    var v2655 = a$$764 == null;
    if (v2655) {
      a$$764 = [];
    }
    var v9260 = A$$6;
    if (v9260) {
      v9260 = a$$764.reduce === A$$6;
    }
    if (v9260) {
      if (e$$386) {
        c$$611 = JAM.call(b$$743.bind, b$$743, [c$$611, e$$386], JAM.policy.p3);
      }
      var v2656;
      if (f$$225) {
        v2656 = JAM.call(a$$764.reduce, a$$764, [c$$611, d$$449], JAM.policy.p3);
      } else {
        v2656 = JAM.call(a$$764.reduce, a$$764, [c$$611], JAM.policy.p3);
      }
      return v2656;
    }
    JAM.call(j$$125, null, [a$$764, v1997], JAM.policy.p3);
    if (!f$$225) {
      throw JAM.new(TypeError, ["Reduce of empty array with no initial value"], JAM.policy.p3);
    }
    return d$$449;
  }
  function v1996(a$$762, c$$610, b$$744) {
    function v1995(a$$763, g$$220, h$$182) {
      var v2659 = e$$385;
      var v2660 = e$$385.length;
      var v31154 = JAM.call(c$$610.call, c$$610, [b$$744, a$$763, g$$220, h$$182], JAM.policy.p3);
      introspect(JAM.policy.p2) {
        v2659[v2660] = v31154;
      }
      return;
    }
    var e$$385 = [];
    if (a$$762 == null) {
      return e$$385;
    }
    var v9261 = z$$10;
    if (v9261) {
      v9261 = a$$762.map === z$$10;
    }
    if (v9261) {
      return JAM.call(a$$762.map, a$$762, [c$$610, b$$744], JAM.policy.p3);
    }
    JAM.call(j$$125, null, [a$$762, v1995], JAM.policy.p3);
    if (a$$762.length === +a$$762.length) {
      e$$385.length = a$$762.length;
    }
    return e$$385;
  }
  function v1994(a$$761, c$$609, d$$448) {
    if (a$$761 != null) {
      var v9264 = y$$56;
      if (v9264) {
        v9264 = a$$761.forEach === y$$56;
      }
      if (v9264) {
        JAM.call(a$$761.forEach, a$$761, [c$$609, d$$448], JAM.policy.p3);
      } else {
        if (a$$761.length === +a$$761.length) {
          var e$$384 = 0;
          var f$$224 = a$$761.length;
          var v2665 = e$$384 < f$$224;
          for (;v2665;) {
            var v9267 = e$$384 in a$$761;
            if (v9267) {
              v9267 = JAM.call(c$$609.call, c$$609, [d$$448, a$$761[e$$384], e$$384, a$$761], JAM.policy.p3) === o$$41;
            }
            if (v9267) {
              break;
            }
            e$$384 = e$$384 + 1;
            v2665 = e$$384 < f$$224;
          }
        } else {
          for (e$$384 in a$$761) {
            var v9268 = JAM.call(b$$743.has, b$$743, [a$$761, e$$384], JAM.policy.p3);
            if (v9268) {
              v9268 = JAM.call(c$$609.call, c$$609, [d$$448, a$$761[e$$384], e$$384, a$$761], JAM.policy.p3) === o$$41;
            }
            if (v9268) {
              break;
            }
          }
        }
      }
    }
    return;
  }
  function M$$3(a$$871, c$$649) {
    function v1992() {
      var a$$872 = JAM.call(i$$238.call, i$$238, [arguments], JAM.policy.p3);
      JAM.call(J$$4.call, J$$4, [a$$872, this._wrapped], JAM.policy.p3);
      return JAM.call(x$$76, null, [JAM.call(c$$649.apply, c$$649, [b$$743, a$$872], JAM.policy.p3), this._chain], JAM.policy.p3);
    }
    JAM.set(m$$63.prototype, a$$871, v1992, JAM.policy.p2);
    return;
  }
  function x$$76(a$$870, c$$648) {
    var v2674;
    if (c$$648) {
      var v9269 = JAM.call(b$$743, null, [a$$870], JAM.policy.p3);
      v2674 = JAM.call(v9269.chain, v9269, [], JAM.policy.p3);
    } else {
      v2674 = a$$870;
    }
    return v2674;
  }
  function m$$63(a$$869) {
    this._wrapped = a$$869;
    return;
  }
  function w$$20(a$$860) {
    function v1993(a$$861, b$$779) {
      return n$$109[b$$779];
    }
    return JAM.call(a$$860.replace, a$$860, [P$$3, v1993], JAM.policy.p3);
  }
  function H$$4() {
    return;
  }
  function b$$743(a$$760) {
    return JAM.new(m$$63, [a$$760], JAM.policy.p3);
  }
  function r$$31(a$$759, c$$608, d$$447) {
    if (a$$759 === c$$608) {
      var v2675 = 0 !== a$$759;
      if (!v2675) {
        v2675 = 1 / a$$759 == 1 / c$$608;
      }
      return v2675;
    }
    var v9273 = null == a$$759;
    if (!v9273) {
      v9273 = null == c$$608;
    }
    if (v9273) {
      return a$$759 === c$$608;
    }
    var v2678 = a$$759._chain;
    if (v2678) {
      a$$759 = a$$759._wrapped;
    }
    var v2679 = c$$608._chain;
    if (v2679) {
      c$$608 = c$$608._wrapped;
    }
    var v9274 = a$$759.isEqual;
    if (v9274) {
      v9274 = JAM.call(b$$743.isFunction, b$$743, [a$$759.isEqual], JAM.policy.p3);
    }
    if (v9274) {
      return JAM.call(a$$759.isEqual, a$$759, [c$$608], JAM.policy.p3);
    }
    var v9275 = c$$608.isEqual;
    if (v9275) {
      v9275 = JAM.call(b$$743.isFunction, b$$743, [c$$608.isEqual], JAM.policy.p3);
    }
    if (v9275) {
      return JAM.call(c$$608.isEqual, c$$608, [a$$759], JAM.policy.p3);
    }
    var e$$383 = JAM.call(l$$96.call, l$$96, [a$$759], JAM.policy.p3);
    if (e$$383 != JAM.call(l$$96.call, l$$96, [c$$608], JAM.policy.p3)) {
      return!1;
    }
    switch(e$$383) {
      case "[object String]":
        return a$$759 == "" + c$$608;
      case "[object Number]":
        var v2684;
        if (a$$759 != +a$$759) {
          v2684 = c$$608 != +c$$608;
        } else {
          var v9279;
          if (0 == a$$759) {
            v9279 = 1 / a$$759 == 1 / c$$608;
          } else {
            v9279 = a$$759 == +c$$608;
          }
          v2684 = v9279;
        }
        return v2684;
      case "[object Date]":
      ;
      case "[object Boolean]":
        return+a$$759 == +c$$608;
      case "[object RegExp]":
        var v15108 = a$$759.source == c$$608.source;
        if (v15108) {
          v15108 = a$$759.global == c$$608.global;
        }
        var v9281 = v15108;
        if (v9281) {
          v9281 = a$$759.multiline == c$$608.multiline;
        }
        var v2687 = v9281;
        if (v2687) {
          v2687 = a$$759.ignoreCase == c$$608.ignoreCase;
        }
        return v2687;
    }
    var v9284 = "object" != typeof a$$759;
    if (!v9284) {
      v9284 = "object" != typeof c$$608;
    }
    if (v9284) {
      return!1;
    }
    var f$$223 = d$$447.length;
    var v2690 = f$$223;
    f$$223 = f$$223 - 1;
    for (;v2690;) {
      if (d$$447[f$$223] == a$$759) {
        return!0;
      }
      v2690 = f$$223;
      f$$223 = f$$223 - 1;
    }
    JAM.call(d$$447.push, d$$447, [a$$759], JAM.policy.p3);
    f$$223 = 0;
    var g$$219 = !0;
    if ("[object Array]" == e$$383) {
      f$$223 = a$$759.length;
      if (g$$219 = f$$223 == c$$608.length) {
        var v9286 = f$$223;
        f$$223 = f$$223 - 1;
        if (v9286) {
          var v15115 = f$$223 in a$$759 == f$$223 in c$$608;
          if (v15115) {
            v15115 = JAM.call(r$$31, null, [a$$759[f$$223], c$$608[f$$223], d$$447], JAM.policy.p3);
          }
          v9286 = g$$219 = v15115;
        }
        var v2691 = v9286;
        for (;v2691;) {
          var v9287 = f$$223;
          f$$223 = f$$223 - 1;
          if (v9287) {
            var v15116 = f$$223 in a$$759 == f$$223 in c$$608;
            if (v15116) {
              v15116 = JAM.call(r$$31, null, [a$$759[f$$223], c$$608[f$$223], d$$447], JAM.policy.p3);
            }
            v9287 = g$$219 = v15116;
          }
          v2691 = v9287;
        }
      }
    } else {
      var v9288 = "constructor" in a$$759 != "constructor" in c$$608;
      if (!v9288) {
        v9288 = a$$759.constructor != c$$608.constructor;
      }
      if (v9288) {
        return!1;
      }
      var h$$181;
      for (h$$181 in a$$759) {
        var v9289 = JAM.call(b$$743.has, b$$743, [a$$759, h$$181], JAM.policy.p3);
        if (v9289) {
          f$$223 = f$$223 + 1;
          var v24202 = JAM.call(b$$743.has, b$$743, [c$$608, h$$181], JAM.policy.p3);
          if (v24202) {
            v24202 = JAM.call(r$$31, null, [a$$759[h$$181], c$$608[h$$181], d$$447], JAM.policy.p3);
          }
          v9289 = !(g$$219 = v24202);
        }
        if (v9289) {
          break;
        }
      }
      if (g$$219) {
        for (h$$181 in c$$608) {
          var v9290 = JAM.call(b$$743.has, b$$743, [c$$608, h$$181], JAM.policy.p3);
          if (v9290) {
            var v15122 = f$$223;
            f$$223 = f$$223 - 1;
            v9290 = !v15122;
          }
          if (v9290) {
            break;
          }
        }
        g$$219 = !f$$223;
      }
    }
    JAM.call(d$$447.pop, d$$447, [], JAM.policy.p3);
    return g$$219;
  }
  var s$$35 = this;
  var I$$4 = s$$35._;
  var o$$41 = {};
  var k$$92 = Array.prototype;
  var p$$60 = Object.prototype;
  var i$$238 = k$$92.slice;
  var J$$4 = k$$92.unshift;
  var l$$96 = p$$60.toString;
  var K$$3 = p$$60.hasOwnProperty;
  var y$$56 = k$$92.forEach;
  var z$$10 = k$$92.map;
  var A$$6 = k$$92.reduce;
  var B$$6 = k$$92.reduceRight;
  var C$$5 = k$$92.filter;
  var D$$5 = k$$92.every;
  var E$$5 = k$$92.some;
  var q$$27 = k$$92.indexOf;
  var F$$5 = k$$92.lastIndexOf;
  p$$60 = Array.isArray;
  var L$$3 = Object.keys;
  var t$$32 = Function.prototype.bind;
  var v2698;
  if ("undefined" !== typeof exports) {
    var v19529 = "undefined" !== typeof module;
    if (v19529) {
      v19529 = module.exports;
    }
    var v15124 = v19529;
    if (v15124) {
      exports = module.exports = b$$743;
    }
    v2698 = exports._ = b$$743;
  } else {
    v2698 = s$$35._ = b$$743;
  }
  v2698;
  b$$743.VERSION = "1.3.3";
  var j$$125 = b$$743.each = b$$743.forEach = v1994;
  b$$743.map = b$$743.collect = v1996;
  b$$743.reduce = b$$743.foldl = b$$743.inject = v1998;
  b$$743.reduceRight = b$$743.foldr = v1999;
  b$$743.find = b$$743.detect = v2001;
  b$$743.filter = b$$743.select = v2003;
  b$$743.reject = v2005;
  b$$743.every = b$$743.all = v2007;
  var G$$4 = b$$743.some = b$$743.any = v2009;
  b$$743.include = b$$743.contains = v2011;
  b$$743.invoke = v2013;
  b$$743.pluck = v2015;
  b$$743.max = v2017;
  b$$743.min = v2019;
  b$$743.shuffle = v2021;
  b$$743.sortBy = v2025;
  b$$743.groupBy = v2028;
  b$$743.sortedIndex = v2029;
  b$$743.toArray = v2030;
  b$$743.size = v2031;
  b$$743.first = b$$743.head = b$$743.take = v2032;
  b$$743.initial = v2033;
  b$$743.last = v2034;
  b$$743.rest = b$$743.tail = v2035;
  b$$743.compact = v2037;
  b$$743.flatten = v2039;
  b$$743.without = v2040;
  b$$743.uniq = b$$743.unique = v2042;
  b$$743.union = v2043;
  b$$743.intersection = b$$743.intersect = v2046;
  b$$743.difference = v2048;
  b$$743.zip = v2049;
  b$$743.indexOf = v2050;
  b$$743.lastIndexOf = v2051;
  b$$743.range = v2052;
  b$$743.bind = v2054;
  b$$743.bindAll = v2056;
  b$$743.memoize = v2058;
  b$$743.delay = v2060;
  b$$743.defer = v2061;
  b$$743.throttle = v2065;
  b$$743.debounce = v2068;
  b$$743.once = v2070;
  b$$743.wrap = v2072;
  b$$743.compose = v2074;
  b$$743.after = v2076;
  b$$743.keys = L$$3 || v2077;
  b$$743.values = v2078;
  b$$743.functions = b$$743.methods = v2079;
  b$$743.extend = v2081;
  b$$743.pick = v2083;
  b$$743.defaults = v2085;
  b$$743.clone = v2086;
  b$$743.tap = v2087;
  b$$743.isEqual = v2088;
  b$$743.isEmpty = v2089;
  b$$743.isElement = v2090;
  b$$743.isArray = p$$60 || v2091;
  b$$743.isObject = v2092;
  b$$743.isArguments = v2093;
  var v2699 = JAM.call(b$$743.isArguments, b$$743, [arguments], JAM.policy.p3);
  if (!v2699) {
    b$$743.isArguments = v2094;
  }
  b$$743.isFunction = v2095;
  b$$743.isString = v2096;
  b$$743.isNumber = v2097;
  b$$743.isFinite = v2098;
  b$$743.isNaN = v2099;
  b$$743.isBoolean = v2100;
  b$$743.isDate = v2101;
  b$$743.isRegExp = v2102;
  b$$743.isNull = v2103;
  b$$743.isUndefined = v2104;
  b$$743.has = v2105;
  b$$743.noConflict = v2106;
  b$$743.identity = v2107;
  b$$743.times = v2108;
  b$$743.escape = v2109;
  b$$743.result = v2110;
  b$$743.mixin = v2112;
  var N$$3 = 0;
  b$$743.uniqueId = v2113;
  b$$743.templateSettings = {evaluate:/<%([\s\S]+?)%>/g, interpolate:/<%=([\s\S]+?)%>/g, escape:/<%-([\s\S]+?)%>/g};
  var u$$19 = /.^/;
  var n$$109 = {"\\":"\\", "'":"'", r:"\r", n:"\n", t:"\t", u2028:"\u2028", u2029:"\u2029"};
  var v$$14;
  for (v$$14 in n$$109) {
    JAM.set(n$$109, n$$109[v$$14], v$$14, JAM.policy.p2);
  }
  var O$$3 = /\\|'|\r|\n|\t|\u2028|\u2029/g;
  var P$$3 = /\\(\\|'|r|n|t|u2028|u2029)/g;
  b$$743.template = v2119;
  b$$743.chain = v2120;
  b$$743.prototype = m$$63.prototype;
  JAM.call(b$$743.mixin, b$$743, [b$$743], JAM.policy.p3);
  JAM.call(j$$125, null, [JAM.call("pop,push,reverse,shift,sort,splice,unshift".split, "pop,push,reverse,shift,sort,splice,unshift", [","], JAM.policy.p3), v2122], JAM.policy.p3);
  JAM.call(j$$125, null, [["concat", "join", "slice"], v2124], JAM.policy.p3);
  m$$63.prototype.chain = v2125;
  m$$63.prototype.value = v2126;
  return;
}
function v1991() {
  function v1990(a$$758) {
    var b$$742 = null;
    try {
      var v9293;
      if (document.all) {
        v9293 = JAM.new(ActiveXObject, ["Microsoft.XMLDOM"], JAM.policy.p3);
      } else {
        v9293 = JAM.new(DOMParser, [], JAM.policy.p3);
      }
      b$$742 = v9293;
      b$$742.async = !1;
    } catch (f$$222) {
      throw JAM.call(Error, null, ["XML Parser could not be instantiated"], JAM.policy.p3);
    }
    var k$$91;
    try {
      var v2705;
      if (document.all) {
        var v9294;
        if (JAM.call(b$$742.loadXML, b$$742, [a$$758], JAM.policy.p3)) {
          v9294 = b$$742;
        } else {
          v9294 = !1;
        }
        v2705 = v9294;
      } else {
        v2705 = JAM.call(b$$742.parseFromString, b$$742, [a$$758, "text/xml"], JAM.policy.p3);
      }
      k$$91 = v2705;
    } catch (l$$95) {
      throw JAM.call(Error, null, ["Error parsing XML string"], JAM.policy.p3);
    }
    return k$$91;
  }
  function v1989(c$$589) {
    function v1988(a$$757, b$$741) {
      var c$$607;
      var e$$382;
      var f$$221;
      var m$$61 = "";
      if (!b$$741) {
        return null;
      }
      var v2707 = b$$741.attributes.length > 0;
      if (v2707) {
        JAM.call(l$$92, null, [a$$757, b$$741], JAM.policy.p3);
      }
      a$$757.Text = "";
      if (JAM.call(b$$741.hasChildNodes, b$$741, [], JAM.policy.p3)) {
        var o$$40 = b$$741.childNodes.length - 1;
        var q$$26 = 0;
        var v9298 = q$$26;
        q$$26 = q$$26 + 1;
        var v2720 = v9298 < o$$40;
        do {
          e$$382 = b$$741.childNodes[q$$26];
          switch(e$$382.nodeType) {
            case 1:
              a$$757._children = [];
              var v2709;
              if (e$$382.localName) {
                v2709 = e$$382.localName;
              } else {
                v2709 = e$$382.baseName;
              }
              c$$607 = v2709;
              var v2710 = JAM.call(String, null, [c$$607], JAM.policy.p3);
              c$$607 = JAM.call(v2710.replace, v2710, [/-/g, "_"], JAM.policy.p3);
              var v2711 = m$$61 != c$$607;
              if (v2711) {
                var v9300 = a$$757._children;
                JAM.call(v9300.push, v9300, [c$$607], JAM.policy.p3);
              }
              var v2712 = a$$757[c$$607];
              if (!v2712) {
                JAM.set(a$$757, c$$607, [], JAM.policy.p2);
              }
              f$$221 = {};
              var v2713 = a$$757[c$$607];
              JAM.call(v2713.push, v2713, [f$$221], JAM.policy.p3);
              var v2714 = e$$382.attributes.length > 0;
              if (v2714) {
                JAM.call(l$$92, null, [f$$221, e$$382], JAM.policy.p3);
              }
              var v2715 = a$$757[c$$607].contains;
              if (!v2715) {
                JAM.call(p$$59, null, [a$$757[c$$607]], JAM.policy.p3);
              }
              m$$61 = c$$607;
              var v2716 = JAM.call(e$$382.hasChildNodes, e$$382, [], JAM.policy.p3);
              if (v2716) {
                JAM.call(g$$212, null, [f$$221, e$$382], JAM.policy.p3);
              }
              break;
            case 3:
              var v2717 = a$$757;
              v2717.Text = v2717.Text + JAM.call(k$$87, null, [e$$382.nodeValue], JAM.policy.p3);
              break;
            case 4:
              var v2718 = a$$757;
              var v15132 = v2718.Text;
              var v19531;
              if (e$$382.text) {
                v19531 = JAM.call(k$$87, null, [e$$382.text], JAM.policy.p3);
              } else {
                v19531 = JAM.call(k$$87, null, [e$$382.nodeValue], JAM.policy.p3);
              }
              v2718.Text = v15132 + v19531;
          }
          var v9306 = q$$26;
          q$$26 = q$$26 + 1;
          v2720 = v9306 < o$$40;
        } while (v2720);
      }
      return;
    }
    function v1987(b$$731) {
      function v1986(b$$739, d$$445) {
        function v1985(a$$756, f$$220) {
          var g$$218 = 0;
          var k$$90;
          var l$$94;
          k$$90 = JAM.call(c$$605, null, [a$$756, b$$739], JAM.policy.p3);
          l$$94 = JAM.call(c$$605, null, [f$$220, b$$739], JAM.policy.p3);
          var v2722;
          if (k$$90 < l$$94) {
            v2722 = g$$218 = -1;
          } else {
            var v9307 = l$$94 < k$$90;
            if (v9307) {
              v9307 = g$$218 = 1;
            }
            v2722 = v9307;
          }
          v2722;
          if (d$$445) {
            var v9309;
            if (JAM.call(d$$445.toUpperCase, d$$445, [], JAM.policy.p3) == "DESC") {
              v9309 = 0 - g$$218;
            } else {
              v9309 = g$$218;
            }
            g$$218 = v9309;
          }
          return g$$218;
        }
        function v1984(b$$740, d$$446) {
          var c$$606 = b$$740[d$$446][0].Text;
          var v2724;
          if (JAM.call(a$$740, null, [c$$606], JAM.policy.p3)) {
            v2724 = JAM.call(parseFloat, null, [c$$606], JAM.policy.p3);
          } else {
            v2724 = c$$606;
          }
          return c$$606 = v2724;
        }
        if (this.length) {
          var c$$605 = v1984;
          JAM.call(this.sort, this, [v1985], JAM.policy.p3);
        }
        return;
      }
      function v1983(b$$737) {
        function v1982(a$$755, c$$604) {
          var f$$219 = 0;
          var g$$217;
          var k$$89;
          g$$217 = JAM.call(d$$444, null, [a$$755], JAM.policy.p3);
          k$$89 = JAM.call(d$$444, null, [c$$604], JAM.policy.p3);
          var v2726;
          if (g$$217 < k$$89) {
            v2726 = f$$219 = -1;
          } else {
            var v9312 = k$$89 < g$$217;
            if (v9312) {
              v9312 = f$$219 = 1;
            }
            v2726 = v9312;
          }
          v2726;
          if (b$$737) {
            var v9314;
            if (JAM.call(b$$737.toUpperCase, b$$737, [], JAM.policy.p3) == "DESC") {
              v9314 = 0 - f$$219;
            } else {
              v9314 = f$$219;
            }
            f$$219 = v9314;
          }
          return f$$219;
        }
        function v1981(b$$738) {
          b$$738 = b$$738.Text;
          var v2727;
          if (JAM.call(a$$740, null, [b$$738], JAM.policy.p3)) {
            v2727 = JAM.call(parseFloat, null, [b$$738], JAM.policy.p3);
          } else {
            v2727 = b$$738;
          }
          return b$$738 = v2727;
        }
        if (this.length) {
          var d$$444 = v1981;
          JAM.call(this.sort, this, [v1982], JAM.policy.p3);
        }
        return;
      }
      function v1980(b$$735, d$$442) {
        function v1979(a$$754, f$$218) {
          var g$$216 = 0;
          var k$$88;
          var l$$93;
          k$$88 = JAM.call(c$$602, null, [a$$754, b$$735], JAM.policy.p3);
          l$$93 = JAM.call(c$$602, null, [f$$218, b$$735], JAM.policy.p3);
          var v2729;
          if (k$$88 < l$$93) {
            v2729 = g$$216 = -1;
          } else {
            var v9316 = l$$93 < k$$88;
            if (v9316) {
              v9316 = g$$216 = 1;
            }
            v2729 = v9316;
          }
          v2729;
          if (d$$442) {
            var v9318;
            if (JAM.call(d$$442.toUpperCase, d$$442, [], JAM.policy.p3) == "DESC") {
              v9318 = 0 - g$$216;
            } else {
              v9318 = g$$216;
            }
            g$$216 = v9318;
          }
          return g$$216;
        }
        function v1978(b$$736, d$$443) {
          var c$$603 = b$$736[d$$443];
          var v2730;
          if (JAM.call(a$$740, null, [c$$603], JAM.policy.p3)) {
            v2730 = JAM.call(parseFloat, null, [c$$603], JAM.policy.p3);
          } else {
            v2730 = c$$603;
          }
          return c$$603 = v2730;
        }
        if (this.length) {
          var c$$602 = v1978;
          JAM.call(this.sort, this, [v1979], JAM.policy.p3);
        }
        return;
      }
      function v1977(a$$753, b$$734) {
        var d$$441 = -1;
        if (this.length > 0) {
          var c$$601 = this.length - 1;
          try {
            var v2734 = c$$601;
            c$$601 = c$$601 - 1;
            do {
              var v2733 = this[c$$601][a$$753] == b$$734;
              if (v2733) {
                d$$441 = c$$601;
              }
              v2734 = c$$601;
              c$$601 = c$$601 - 1;
            } while (v2734);
          } catch (f$$217) {
            return-1;
          }
          return d$$441;
        }
        return;
      }
      function v1976(a$$752, b$$733) {
        if (this.length > 0) {
          var d$$440 = this.length - 1;
          try {
            var v2738 = d$$440;
            d$$440 = d$$440 - 1;
            do {
              if (this[d$$440][a$$752] == b$$733) {
                return!0;
              }
              v2738 = d$$440;
              d$$440 = d$$440 - 1;
            } while (v2738);
          } catch (c$$600) {
          }
          return!1;
        }
        return;
      }
      function v1975(a$$751, b$$732) {
        if (this.length > 0) {
          var d$$439;
          var c$$599 = this.length - 1;
          try {
            var v2742 = c$$599;
            c$$599 = c$$599 - 1;
            do {
              d$$439 = this[c$$599];
              if (d$$439[a$$751] == b$$732) {
                return d$$439;
              }
              v2742 = c$$599;
              c$$599 = c$$599 - 1;
            } while (v2742);
          } catch (f$$216) {
          }
          return!1;
        }
        return;
      }
      b$$731.getNodeByAttribute = v1975;
      b$$731.contains = v1976;
      b$$731.indexOf = v1977;
      b$$731.SortByAttribute = v1980;
      b$$731.SortByValue = v1983;
      b$$731.SortByNode = v1986;
      return;
    }
    function v1974() {
      function v1973() {
        function v1972(b$$729, c$$598) {
          function v1971(a$$750, d$$438) {
            var f$$215;
            var g$$215;
            f$$215 = JAM.call(e$$381, null, [a$$750, b$$729], JAM.policy.p3);
            g$$215 = JAM.call(e$$381, null, [d$$438, b$$729], JAM.policy.p3);
            var v2744;
            if (f$$215 < g$$215) {
              v2744 = -1;
            } else {
              var v9325;
              if (g$$215 < f$$215) {
                v9325 = 1;
              } else {
                v9325 = 0;
              }
              v2744 = v9325;
            }
            f$$215 = v2744;
            if (c$$598) {
              var v9327;
              if (JAM.call(c$$598.toUpperCase, c$$598, [], JAM.policy.p3) === "DESC") {
                v9327 = 0 - f$$215;
              } else {
                v9327 = f$$215;
              }
              f$$215 = v9327;
            }
            return f$$215;
          }
          function v1970(a$$749, b$$730) {
            var d$$437 = a$$749[b$$730][0].Text;
            var v2746;
            var v15142 = bam.validation;
            if (JAM.call(v15142.isNumeric, v15142, [d$$437], JAM.policy.p3)) {
              v2746 = JAM.call(parseFloat, null, [d$$437], JAM.policy.p3);
            } else {
              v2746 = d$$437;
            }
            return d$$437 = v2746;
          }
          var v9330 = a$$744;
          if (v9330) {
            v9330 = a$$744.length > 0;
          }
          if (v9330) {
            var e$$381 = v1970;
            JAM.call(a$$744.sort, a$$744, [v1971], JAM.policy.p3);
          }
          return;
        }
        function v1969(b$$728) {
          function v1968(a$$748, d$$436) {
            var f$$214;
            var g$$214;
            f$$214 = JAM.call(c$$597, null, [a$$748], JAM.policy.p3);
            g$$214 = JAM.call(c$$597, null, [d$$436], JAM.policy.p3);
            var v2748;
            if (f$$214 < g$$214) {
              v2748 = -1;
            } else {
              var v9331;
              if (g$$214 < f$$214) {
                v9331 = 1;
              } else {
                v9331 = 0;
              }
              v2748 = v9331;
            }
            f$$214 = v2748;
            if (b$$728) {
              var v9333;
              if (JAM.call(b$$728.toUpperCase, b$$728, [], JAM.policy.p3) === "DESC") {
                v9333 = 0 - f$$214;
              } else {
                v9333 = f$$214;
              }
              f$$214 = v9333;
            }
            return f$$214;
          }
          function v1967(a$$747) {
            a$$747 = a$$747.Text;
            var v2749;
            var v15146 = bam.validation;
            if (JAM.call(v15146.isNumeric, v15146, [a$$747], JAM.policy.p3)) {
              v2749 = JAM.call(parseFloat, null, [a$$747], JAM.policy.p3);
            } else {
              v2749 = a$$747;
            }
            return a$$747 = v2749;
          }
          var v9335 = a$$744;
          if (v9335) {
            v9335 = a$$744.length > 0;
          }
          if (v9335) {
            var c$$597 = v1967;
            JAM.call(a$$744.sort, a$$744, [v1968], JAM.policy.p3);
          }
          return;
        }
        function v1966(b$$726, c$$596) {
          function v1965(a$$746, d$$435) {
            var f$$213;
            var g$$213;
            f$$213 = JAM.call(e$$380, null, [a$$746, b$$726], JAM.policy.p3);
            g$$213 = JAM.call(e$$380, null, [d$$435, b$$726], JAM.policy.p3);
            var v2751;
            if (f$$213 < g$$213) {
              v2751 = -1;
            } else {
              var v9336;
              if (g$$213 < f$$213) {
                v9336 = 1;
              } else {
                v9336 = 0;
              }
              v2751 = v9336;
            }
            f$$213 = v2751;
            if (c$$596) {
              var v9338;
              if (JAM.call(c$$596.toUpperCase, c$$596, [], JAM.policy.p3) === "DESC") {
                v9338 = 0 - f$$213;
              } else {
                v9338 = f$$213;
              }
              f$$213 = v9338;
            }
            return f$$213;
          }
          function v1964(a$$745, b$$727) {
            var d$$434 = a$$745[b$$727];
            var v2752;
            var v15150 = bam.validation;
            if (JAM.call(v15150.isNumeric, v15150, [d$$434], JAM.policy.p3)) {
              v2752 = JAM.call(parseFloat, null, [d$$434], JAM.policy.p3);
            } else {
              v2752 = d$$434;
            }
            return d$$434 = v2752;
          }
          var v9340 = a$$744;
          if (v9340) {
            v9340 = a$$744.length > 0;
          }
          if (v9340) {
            var e$$380 = v1964;
            JAM.call(a$$744.sort, a$$744, [v1965], JAM.policy.p3);
          }
          return;
        }
        function v1963(b$$725, c$$595) {
          var e$$379 = -1;
          var v9341 = a$$744;
          if (v9341) {
            v9341 = a$$744.length > 0;
          }
          if (v9341) {
            var h$$180 = a$$744.length - 1;
            try {
              var v2756 = h$$180;
              h$$180 = h$$180 - 1;
              do {
                var v2755 = a$$744[h$$180][b$$725] === c$$595;
                if (v2755) {
                  e$$379 = h$$180;
                }
                v2756 = h$$180;
                h$$180 = h$$180 - 1;
              } while (v2756);
            } catch (f$$212) {
              return-1;
            }
            return e$$379;
          }
          return;
        }
        function v1962(b$$724, c$$594) {
          var v9343 = a$$744;
          if (v9343) {
            v9343 = a$$744.length > 0;
          }
          if (v9343) {
            var e$$378 = a$$744.length - 1;
            try {
              var v2760 = e$$378;
              e$$378 = e$$378 - 1;
              do {
                if (a$$744[e$$378][b$$724] === c$$594) {
                  return!0;
                }
                v2760 = e$$378;
                e$$378 = e$$378 - 1;
              } while (v2760);
            } catch (h$$179) {
            }
            return!1;
          }
          return;
        }
        function v1961(b$$723) {
          var v9345 = a$$744;
          if (v9345) {
            v9345 = a$$744.length > 0;
          }
          if (v9345) {
            var c$$593 = [];
            var e$$377;
            var h$$178 = a$$744.length - 1;
            try {
              var v2763 = h$$178;
              h$$178 = h$$178 - 1;
              do {
                e$$377 = a$$744[h$$178];
                var v15157 = e$$377.Text;
                if (v15157) {
                  v15157 = e$$377.Text === b$$723;
                }
                var v9346 = v15157;
                if (v9346) {
                  JAM.call(c$$593.push, c$$593, [e$$377], JAM.policy.p3);
                }
                v2763 = h$$178;
                h$$178 = h$$178 - 1;
              } while (v2763);
              return c$$593;
            } catch (f$$211) {
            }
            return null;
          }
          return;
        }
        function v1960(b$$722, c$$592) {
          var v9347 = a$$744;
          if (v9347) {
            v9347 = a$$744.length > 0;
          }
          if (v9347) {
            var e$$376;
            var h$$177 = a$$744.length - 1;
            try {
              var v2767 = h$$177;
              h$$177 = h$$177 - 1;
              do {
                e$$376 = a$$744[h$$177];
                if (e$$376[b$$722] === c$$592) {
                  return e$$376;
                }
                v2767 = h$$177;
                h$$177 = h$$177 - 1;
              } while (v2767);
            } catch (f$$210) {
            }
            return null;
          }
          return;
        }
        function v1959(b$$721, c$$591) {
          var v9348 = a$$744;
          if (v9348) {
            v9348 = a$$744.length > 0;
          }
          if (v9348) {
            var e$$375 = [];
            var h$$176;
            var f$$209 = a$$744.length - 1;
            try {
              var v2770 = f$$209;
              f$$209 = f$$209 - 1;
              do {
                h$$176 = a$$744[f$$209];
                var v9349 = h$$176[b$$721] === c$$591;
                if (v9349) {
                  JAM.call(e$$375.push, e$$375, [h$$176], JAM.policy.p3);
                }
                v2770 = f$$209;
                f$$209 = f$$209 - 1;
              } while (v2770);
              JAM.call(e$$375.reverse, e$$375, [], JAM.policy.p3);
              return e$$375;
            } catch (o$$39) {
            }
            return null;
          }
          return;
        }
        var a$$744 = [];
        a$$744.getNodesByAttribute = v1959;
        a$$744.getNodeByAttribute = v1960;
        a$$744.getNodesByValue = v1961;
        a$$744.contains = v1962;
        a$$744.indexOf = v1963;
        a$$744.SortByAttribute = v1966;
        a$$744.SortByValue = v1969;
        a$$744.SortByNode = v1972;
        return a$$744;
      }
      return{activate:v1973};
    }
    function v1958(a$$743, b$$720) {
      if (b$$720.attributes.length > 0) {
        var c$$590 = b$$720.attributes.length - 1;
        var e$$374;
        a$$743._attributes = [];
        var v2773 = c$$590;
        c$$590 = c$$590 - 1;
        do {
          var v19539 = JAM.call(String, null, [b$$720.attributes[c$$590].name], JAM.policy.p3);
          e$$374 = JAM.call(String, null, [JAM.call(v19539.replace, v19539, [/-/g, "_"], JAM.policy.p3)], JAM.policy.p3);
          var v15164 = a$$743._attributes;
          JAM.call(v15164.push, v15164, [e$$374], JAM.policy.p3);
          var v9352 = a$$743;
          var v9353 = e$$374;
          var v31155 = JAM.call(k$$87, null, [b$$720.attributes[c$$590].value], JAM.policy.p3);
          JAM.set(v9352, v9353, v31155, JAM.policy.p2);
          v2773 = c$$590;
          c$$590 = c$$590 - 1;
        } while (v2773);
      }
      return;
    }
    function v1957(a$$742) {
      return JAM.call(a$$742.replace, a$$742, [/^\s+|\s+$/gm, ""], JAM.policy.p3);
    }
    try {
      if (!c$$589) {
        return null;
      }
      var b$$719 = {typeOf:"JSXBObject"};
      var v2776;
      if (c$$589.nodeType == 9) {
        v2776 = c$$589.documentElement;
      } else {
        v2776 = c$$589;
      }
      var f$$208 = v2776;
      var v2777 = f$$208.nodeName;
      if (!v2777) {
        v2777 = "";
      }
      b$$719.RootName = v2777;
      var v9356 = c$$589.nodeType == 3;
      if (!v9356) {
        v9356 = c$$589.nodeType == 4;
      }
      if (v9356) {
        return c$$589.nodeValue;
      }
      var k$$87 = v1957;
      var l$$92 = v1958;
      JAM.call(v1974, null, [], JAM.policy.p3);
      var p$$59 = v1987;
      var g$$212 = v1988;
      JAM.call(g$$212, null, [b$$719, f$$208], JAM.policy.p3);
      f$$208 = c$$589 = null;
      return b$$719;
    } catch (m$$62) {
      return null;
    }
    return;
  }
  function a$$740(a$$741) {
    var b$$718 = "";
    var v9357 = a$$741;
    if (v9357) {
      v9357 = typeof a$$741 === "string";
    }
    var v2779 = v9357;
    if (v2779) {
      b$$718 = a$$741;
    }
    return JAM.call(/^((-)?([0-9]*)((\.{0,1})([0-9]+))?$)/.test, /^((-)?([0-9]*)((\.{0,1})([0-9]+))?$)/, [b$$718], JAM.policy.p3);
  }
  return{xmlToJSON:v1989, textToXML:v1990};
}
function v1956() {
  function v1955(a$$739, b$$717, c$$588) {
    function v1954() {
      return JAM.call(b$$717.getRoot, b$$717, [], JAM.policy.p3);
    }
    function v1953() {
      return[h$$171, n$$106];
    }
    this.getCanvasSize = v1953;
    this.getRoot = v1954;
    if (JAM.call(b$$717.getValidate, b$$717, [], JAM.policy.p3)) {
      JAM.call(a$$739.draw, a$$739, [{type:"text", x:0, y:a$$739.canvasSize[1] / 3, text:JAM.call(b$$717.getValidate, b$$717, [], JAM.policy.p3)}], JAM.policy.p3);
    } else {
      i$$235 = a$$739;
      a$$739 = JAM.call(b$$717.getRoot, b$$717, [], JAM.policy.p3);
      var f$$207 = JAM.call(b$$717.getNewickLen, b$$717, [], JAM.policy.p3);
      h$$171 = i$$235.canvasSize[0];
      n$$106 = i$$235.canvasSize[1];
      E$$4 = h$$171 / 2;
      r$$29 = n$$106 / 2;
      var v2783 = Math.min;
      o$$36 = JAM.call(v2783.apply, v2783, [null, [h$$171, n$$106]], JAM.policy.p3);
      var v2785;
      if (e$$368.bufferRadius > 1) {
        v2785 = e$$368.bufferRadius;
      } else {
        var v9360 = Smits.Common;
        v2785 = JAM.call(v9360.roundFloat, v9360, [o$$36 * e$$368.bufferRadius, 4], JAM.policy.p3);
      }
      c$$588 = v2785;
      C$$4 = e$$368.bufferAngle;
      z$$9 = e$$368.innerCircleRadius;
      D$$4 = e$$368.initStartAngle;
      v$$13 = JAM.call(Math.round, Math, [(o$$36 - c$$588 - z$$9) / 2], JAM.policy.p3);
      q$$24 = (v$$13 - z$$9) / f$$207;
      var v2788 = Smits.Common;
      u$$18 = JAM.call(v2788.roundFloat, v2788, [(360 - C$$4) / JAM.call(a$$739.getCountAllChildren, a$$739, [], JAM.policy.p3), 4], JAM.policy.p3);
      JAM.call(p$$57, null, [a$$739, z$$9], JAM.policy.p3);
      w$$19 = v$$13 + x$$75 + e$$368.bufferOuterLabels;
      if (Smits.PhyloCanvas.Render.Parameters.integratedBinaryCharts.length) {
        c$$588 = Smits.PhyloCanvas.Render.Parameters.integratedBinaryCharts;
        var g$$211;
        for (g$$211 in c$$588) {
          var v19543;
          if (c$$588[g$$211].thickness) {
            v19543 = c$$588[g$$211].thickness;
          } else {
            v19543 = Smits.PhyloCanvas.Render.Parameters.binaryChartThickness;
          }
          var v9368 = w$$19 - v19543;
          var v15178;
          if (c$$588[g$$211].bufferInner) {
            v15178 = c$$588[g$$211].bufferInner;
          } else {
            v15178 = Smits.PhyloCanvas.Render.Parameters.binaryChartBufferInner;
          }
          w$$19 = JAM.call(d$$423, null, [v9368 - v15178, c$$588[g$$211].chart, c$$588[g$$211]], JAM.policy.p3);
        }
      }
      w$$19 = JAM.call(m$$58, null, [], JAM.policy.p3);
      if (Smits.PhyloCanvas.Render.Parameters.binaryCharts.length) {
        c$$588 = Smits.PhyloCanvas.Render.Parameters.binaryCharts;
        for (g$$211 in c$$588) {
          w$$19 = JAM.call(d$$423, null, [w$$19, c$$588[g$$211].chart, c$$588[g$$211]], JAM.policy.p3);
        }
      }
      if (Smits.PhyloCanvas.Render.Parameters.barCharts.length) {
        c$$588 = Smits.PhyloCanvas.Render.Parameters.barCharts;
        for (g$$211 in c$$588) {
          w$$19 = JAM.call(j$$120, null, [w$$19, c$$588[g$$211].chart, c$$588[g$$211]], JAM.policy.p3);
        }
      }
    }
    return;
  }
  function a$$731(a$$732, d$$424) {
    d$$424 = d$$424 + D$$4;
    var v9375 = Smits.Common;
    var v2806 = JAM.call(v9375.roundFloat, v9375, [E$$4 + a$$732 * JAM.call(Math.sin, Math, [d$$424 * F$$4], JAM.policy.p3), 4], JAM.policy.p3);
    var v9377 = Smits.Common;
    return[v2806, JAM.call(v9377.roundFloat, v9377, [r$$29 + a$$732 * JAM.call(Math.cos, Math, [d$$424 * F$$4], JAM.policy.p3), 4], JAM.policy.p3)];
  }
  function c$$583(a$$733) {
    a$$733 = JAM.call(k$$85, null, [90 - a$$733 - D$$4], JAM.policy.p3);
    var v9380 = a$$733 > 90;
    if (v9380) {
      v9380 = a$$733 < 270;
    }
    if (v9380) {
      a$$733 = a$$733 + 180;
      var d$$425 = "end";
    } else {
      d$$425 = "start";
    }
    return[a$$733, d$$425];
  }
  function b$$710(d$$426, b$$711, c$$584, e$$369) {
    var i$$236 = JAM.call(a$$731, null, [d$$426, b$$711], JAM.policy.p3);
    var h$$172 = JAM.call(a$$731, null, [d$$426, c$$584], JAM.policy.p3);
    var j$$121 = [];
    var f$$204 = 0;
    var v2810;
    if (JAM.call(Math.abs, Math, [JAM.call(k$$85, null, [c$$584 - b$$711], JAM.policy.p3)], JAM.policy.p3) > 180) {
      v2810 = 1;
    } else {
      v2810 = -1;
    }
    b$$711 = v2810;
    var v9382 = e$$369;
    if (v9382) {
      v9382 = e$$369.invertSecant;
    }
    var v2811 = v9382;
    if (v2811) {
      b$$711 = b$$711 * -1;
      f$$204 = 1;
    }
    var v9383 = !e$$369;
    if (!v9383) {
      v9383 = !e$$369.noMove;
    }
    var v2812 = v9383;
    if (v2812) {
      JAM.call(j$$121.push, j$$121, ["M"], JAM.policy.p3);
    }
    var v2813 = i$$236[0];
    var v2814 = i$$236[1];
    var v9384;
    if (b$$711 < 1) {
      v9384 = 0;
    } else {
      v9384 = 1;
    }
    JAM.call(j$$121.push, j$$121, [v2813, v2814, "A", d$$426, d$$426, 0, v9384, f$$204, h$$172[0], h$$172[1]], JAM.policy.p3);
    return j$$121;
  }
  function f$$203(d$$427, b$$712, c$$585, e$$370) {
    var i$$237 = [];
    b$$712 = JAM.call(a$$731, null, [b$$712, d$$427], JAM.policy.p3);
    d$$427 = JAM.call(a$$731, null, [c$$585, d$$427], JAM.policy.p3);
    var v9385 = !e$$370;
    if (!v9385) {
      v9385 = !e$$370.noMove;
    }
    var v2818 = v9385;
    if (v2818) {
      JAM.call(i$$237.push, i$$237, ["M"], JAM.policy.p3);
    }
    JAM.call(i$$237.push, i$$237, [b$$712[0], b$$712[1], "L", d$$427[0], d$$427[1]], JAM.policy.p3);
    return i$$237;
  }
  function k$$85(a$$734) {
    var v9386 = a$$734 > 360;
    if (!v9386) {
      v9386 = a$$734 < 0;
    }
    var v2824 = v9386;
    for (;v2824;) {
      var v2823;
      if (a$$734 > 360) {
        v2823 = a$$734 = a$$734 - 360;
      } else {
        var v9387 = a$$734 < 0;
        if (v9387) {
          v9387 = a$$734 = a$$734 + 360;
        }
        v2823 = v9387;
      }
      v2823;
      var v9389 = a$$734 > 360;
      if (!v9389) {
        v9389 = a$$734 < 0;
      }
      v2824 = v9389;
    }
    return a$$734;
  }
  function l$$90(a$$735, d$$428, c$$586, e$$371) {
    var v9390 = !d$$428;
    if (v9390) {
      v9390 = a$$735.length > 1;
    }
    var v2825 = v9390;
    if (v2825) {
      e$$371 = a$$735[3];
      c$$586 = a$$735[2];
      d$$428 = a$$735[1];
      a$$735 = a$$735[0];
    }
    return JAM.call(g$$209, null, ["M", JAM.call(b$$710, null, [a$$735, c$$586, e$$371, {noMove:1, invertSecant:0}], JAM.policy.p3), "L", JAM.call(b$$710, null, [d$$428, e$$371, c$$586, {noMove:1, invertSecant:1}], JAM.policy.p3), "Z"], JAM.policy.p3);
  }
  function p$$57(d$$429, h$$173) {
    var v2828 = d$$429.len;
    if (v2828) {
      var v9393;
      if (B$$5) {
        v9393 = A$$5 = C$$4 || 1;
      } else {
        var v15196 = d$$429.children.length == 0;
        if (v15196) {
          var v19557 = Smits.Common;
          v15196 = A$$5 = JAM.call(v19557.roundFloat, v19557, [A$$5 + u$$18, 4], JAM.policy.p3);
        }
        v9393 = v15196;
      }
      v9393;
    }
    if (d$$429.children.length > 0) {
      var j$$122 = [];
      var o$$37;
      var n$$107;
      var k$$86;
      o$$37 = h$$173;
      var v9395 = h$$173;
      var v15198 = Smits.Common;
      n$$107 = h$$173 = v9395 + JAM.call(v15198.roundFloat, v15198, [q$$24 * d$$429.len, 4], JAM.policy.p3);
      var v9397 = d$$429.children;
      if (v9397) {
        v9397 = d$$429.children.length;
      }
      if (v9397) {
        var l$$91 = 0;
        var v2831 = l$$91 < d$$429.children.length;
        for (;v2831;) {
          var m$$59 = JAM.call(p$$57, null, [d$$429.children[l$$91], h$$173], JAM.policy.p3);
          var v2830 = m$$59 > 0;
          if (v2830) {
            JAM.call(j$$122.push, j$$122, [m$$59], JAM.policy.p3);
          }
          l$$91 = l$$91 + 1;
          v2831 = l$$91 < d$$429.children.length;
        }
      }
      var v2833 = Smits.Common;
      var v9401 = Math.min;
      l$$91 = JAM.call(v2833.roundFloat, v2833, [JAM.call(v9401.apply, v9401, [null, j$$122], JAM.policy.p3), 4], JAM.policy.p3);
      var v2835 = Smits.Common;
      var v9402 = Math.max;
      j$$122 = JAM.call(v2835.roundFloat, v2835, [JAM.call(v9402.apply, v9402, [null, j$$122], JAM.policy.p3), 4], JAM.policy.p3);
      var v2837 = d$$429.level != 0;
      if (v2837) {
        JAM.call(i$$235.draw, i$$235, [JAM.new(Smits.PhyloCanvas.Render.Path, [JAM.call(g$$209, null, ["M", JAM.call(a$$731, null, [h$$173 + .01, l$$91], JAM.policy.p3), "L", JAM.call(b$$710, null, [h$$173, l$$91, j$$122, {noMove:!0}], JAM.policy.p3), "L", JAM.call(a$$731, null, [h$$173 + .01, j$$122], JAM.policy.p3)], JAM.policy.p3)], JAM.policy.p3)], JAM.policy.p3);
      }
      var v2838 = d$$429.len;
      if (v2838) {
        var v15205 = Smits.Common;
        k$$86 = JAM.call(v15205.roundFloat, v15205, [l$$91 + (j$$122 - l$$91) / 2, 4], JAM.policy.p3);
        JAM.call(i$$235.draw, i$$235, [JAM.new(Smits.PhyloCanvas.Render.Path, [JAM.call(f$$203, null, [k$$86, o$$37, n$$107], JAM.policy.p3)], JAM.policy.p3)], JAM.policy.p3);
      }
    } else {
      d$$429.y = A$$5;
      JAM.call(s$$34.push, s$$34, [d$$429], JAM.policy.p3);
      o$$37 = h$$173;
      var v27926 = Smits.Common;
      n$$107 = JAM.call(v27926.roundFloat, v27926, [h$$173 + q$$24 * d$$429.len], JAM.policy.p3);
      k$$86 = A$$5;
      JAM.call(i$$235.draw, i$$235, [JAM.new(Smits.PhyloCanvas.Render.Path, [JAM.call(f$$203, null, [k$$86, o$$37, n$$107], JAM.policy.p3)], JAM.policy.p3)], JAM.policy.p3);
      JAM.call(i$$235.draw, i$$235, [JAM.new(Smits.PhyloCanvas.Render.Path, [JAM.call(f$$203, null, [k$$86, n$$107, v$$13], JAM.policy.p3), {attr:Smits.PhyloCanvas.Render.Style.connectedDash}], JAM.policy.p3)], JAM.policy.p3);
      if (d$$429.name) {
        o$$37 = JAM.call(a$$731, null, [v$$13 + e$$368.bufferInnerLabels, k$$86], JAM.policy.p3);
        l$$91 = JAM.call(c$$583, null, [k$$86], JAM.policy.p3);
        j$$122 = l$$91[0];
        l$$91 = l$$91[1];
        m$$59 = {};
        var v2840 = d$$429.style;
        if (v2840) {
          var v9406 = Smits.Common;
          var v15208 = Smits.PhyloCanvas.Render.Style;
          JAM.call(v9406.apply, v9406, [m$$59, JAM.call(v15208.getStyle, v15208, [d$$429.style, "text"], JAM.policy.p3)], JAM.policy.p3);
        }
        m$$59["text-anchor"] = l$$91;
        if (d$$429.uri) {
          m$$59.href = d$$429.uri;
        }
        if (d$$429.description) {
          m$$59.title = d$$429.description;
        }
        j$$122 = JAM.call(i$$235.draw, i$$235, [JAM.new(Smits.PhyloCanvas.Render.Text, [o$$37[0], o$$37[1], d$$429.name, {attr:m$$59, rotate:[j$$122, o$$37[0], o$$37[1]]}], JAM.policy.p3)], JAM.policy.p3);
        var v2844 = d$$429.bgStyle;
        if (v2844) {
          JAM.call(t$$30.push, t$$30, [[d$$429.bgStyle, k$$86]], JAM.policy.p3);
        }
        o$$37 = JAM.call(a$$731, null, [n$$107, k$$86], JAM.policy.p3);
        var v2845 = Smits.PhyloCanvas.Render.Parameters.mouseRollOver;
        if (v2845) {
          var v9415 = Smits.Common;
          JAM.call(v9415.addRaphEventHandler, v9415, [j$$122[0], "mouseover", Smits.PhyloCanvas.Render.Parameters.mouseRollOver, {svg:i$$235, node:d$$429, x:o$$37[0], y:o$$37[1], textEl:j$$122[0]}], JAM.policy.p3);
        }
        var v2846 = Smits.PhyloCanvas.Render.Parameters.mouseRollOut;
        if (v2846) {
          var v9420 = Smits.Common;
          JAM.call(v9420.addRaphEventHandler, v9420, [j$$122[0], "mouseout", Smits.PhyloCanvas.Render.Parameters.mouseRollOut, {svg:i$$235, node:d$$429, x:o$$37[0], y:o$$37[1], textEl:j$$122[0]}], JAM.policy.p3);
        }
        var v2847 = Smits.PhyloCanvas.Render.Parameters.onClickAction;
        if (v2847) {
          var v9425 = Smits.Common;
          JAM.call(v9425.addRaphEventHandler, v9425, [j$$122[0], "click", Smits.PhyloCanvas.Render.Parameters.onClickAction, {svg:i$$235, node:d$$429, x:o$$37[0], y:o$$37[1], textEl:j$$122[0]}], JAM.policy.p3);
        }
        x$$75 = JAM.call(Math.max, Math, [j$$122[1], x$$75], JAM.policy.p3);
      }
    }
    if (B$$5) {
      B$$5 = !1;
    }
    return k$$86;
  }
  function g$$209(a$$736) {
    var d$$430 = a$$736;
    var b$$713 = 1;
    var v2852 = b$$713 < arguments.length;
    for (;v2852;) {
      d$$430 = JAM.call(d$$430.concat, d$$430, [arguments[b$$713]], JAM.policy.p3);
      b$$713 = b$$713 + 1;
      v2852 = b$$713 < arguments.length;
    }
    return d$$430;
  }
  function m$$58() {
    var a$$737 = [];
    if (t$$30.length > 0) {
      if (Smits.PhyloCanvas.Render.Style.jsphylosvgGradientList) {
        var d$$431 = 0;
        var v2858 = d$$431 < Smits.PhyloCanvas.Render.Style.jsphylosvgGradientList.length;
        for (;v2858;) {
          var b$$714 = Smits.PhyloCanvas.Render.Style.jsphylosvgGradientList[d$$431];
          var v2854 = Smits.Common;
          b$$714 = JAM.call(v2854.createGradientEl, v2854, [b$$714, Smits.PhyloCanvas.Render.Style[b$$714], [E$$4, r$$29, v$$13 + x$$75 + e$$368.bufferOuterLabels]], JAM.policy.p3);
          var v2857 = i$$235.svg.defs;
          JAM.call(v2857.appendChild, v2857, [b$$714], JAM.policy.p3);
          d$$431 = d$$431 + 1;
          v2858 = d$$431 < Smits.PhyloCanvas.Render.Style.jsphylosvgGradientList.length;
        }
      }
      d$$431 = 0;
      var v2861 = d$$431 < t$$30.length;
      for (;v2861;) {
        var v2860;
        var v15235 = d$$431 != t$$30.length - 1;
        if (v15235) {
          v15235 = t$$30[d$$431][0] == t$$30[d$$431 + 1][0];
        }
        if (v15235) {
          var v9440 = t$$30[d$$431 + 1];
          var v15237;
          if (t$$30[d$$431][2]) {
            v15237 = t$$30[d$$431][2];
          } else {
            v15237 = t$$30[d$$431][1];
          }
          introspect(JAM.policy.p2) {
            v2860 = v9440[2] = v15237;
          }
        } else {
          var v27931 = v$$13 + x$$75 + e$$368.bufferOuterLabels;
          var v28893;
          if (t$$30[d$$431][2]) {
            v28893 = t$$30[d$$431][2] - u$$18 / 2;
          } else {
            v28893 = t$$30[d$$431][1] - u$$18 / 2;
          }
          a$$737 = JAM.call(l$$90, null, [v$$13, v27931, v28893, t$$30[d$$431][1] + u$$18 / 2], JAM.policy.p3);
          var v27934 = Smits.PhyloCanvas.Render.Style;
          b$$714 = JAM.call(v27934.getStyle, v27934, [t$$30[d$$431][0], "textSecantBg"], JAM.policy.p3);
          var v27936 = Smits.PhyloCanvas.Render.Path;
          var v29543;
          if (b$$714.type) {
            v29543 = {};
          } else {
            v29543 = b$$714;
          }
          a$$737 = JAM.call(i$$235.draw, i$$235, [JAM.new(v27936, [a$$737, {attr:v29543}], JAM.policy.p3)], JAM.policy.p3);
          var v26407 = b$$714.type;
          if (v26407) {
            v26407 = b$$714.type == "radialGradient";
          }
          var v24243 = v26407;
          if (v24243) {
            var v26408 = a$$737[0].node;
            JAM.call(v26408.setAttribute, v26408, ["fill", "url(#" + b$$714.name + ")"], JAM.policy.p3);
          }
          var v24244 = b$$714.type;
          if (v24244) {
            v24244 = b$$714.type == "radialGradient";
          }
          var v19589 = v24244;
          if (v19589) {
            var v24245 = a$$737[0].node;
            JAM.call(v24245.setAttribute, v24245, ["stroke", "none"], JAM.policy.p3);
          }
          var v15238 = a$$737[0];
          v2860 = JAM.call(v15238.toBack, v15238, [], JAM.policy.p3);
        }
        v2860;
        d$$431 = d$$431 + 1;
        v2861 = d$$431 < t$$30.length;
      }
    }
    a$$737 = JAM.call(l$$90, null, [v$$13, v$$13 + x$$75 + e$$368.bufferOuterLabels, (C$$4 || 1) - u$$18 / 2, 360 - u$$18 / 2], JAM.policy.p3);
    a$$737 = JAM.call(i$$235.draw, i$$235, [JAM.new(Smits.PhyloCanvas.Render.Path, [a$$737, {attr:Smits.PhyloCanvas.Render.Style.textSecantBg}], JAM.policy.p3)], JAM.policy.p3);
    var v2867 = a$$737[0];
    JAM.call(v2867.toBack, v2867, [], JAM.policy.p3);
    return v$$13 + x$$75 + e$$368.bufferOuterLabels;
  }
  function d$$423(d$$432, b$$715, e$$372) {
    var v2870;
    var v15241 = e$$372;
    if (v15241) {
      v15241 = e$$372.bufferInner;
    }
    if (v15241) {
      v2870 = JAM.call(parseFloat, null, [e$$372.bufferInner], JAM.policy.p3);
    } else {
      v2870 = Smits.PhyloCanvas.Render.Parameters.binaryChartBufferInner;
    }
    var j$$123 = v2870;
    var v9453;
    var v19593 = e$$372;
    if (v19593) {
      v19593 = e$$372.bufferSiblings;
    }
    if (v19593) {
      v9453 = e$$372.bufferSiblings * u$$18;
    } else {
      v9453 = 0;
    }
    var v2871 = v9453;
    var v9454;
    if (Smits.PhyloCanvas.Render.Parameters.binaryChartBufferSiblings < 1) {
      v9454 = u$$18 * Smits.PhyloCanvas.Render.Parameters.binaryChartBufferSiblings;
    } else {
      v9454 = Smits.PhyloCanvas.Render.Parameters.binaryChartBufferSiblings;
    }
    var h$$174 = v2871 | v9454;
    var v2873;
    var v15248 = e$$372;
    if (v15248) {
      v15248 = e$$372.thickness;
    }
    if (v15248) {
      v2873 = JAM.call(parseFloat, null, [e$$372.thickness], JAM.policy.p3);
    } else {
      v2873 = Smits.PhyloCanvas.Render.Parameters.binaryChartThickness;
    }
    var f$$205 = v2873;
    var v9458;
    var v19598 = e$$372;
    if (v19598) {
      v19598 = e$$372.disjointed;
    }
    if (v19598) {
      v9458 = e$$372.disjointed;
    } else {
      v9458 = 0;
    }
    var o$$38 = v9458 | Smits.PhyloCanvas.Render.Parameters.binaryChartDisjointed;
    var v2876;
    var v15252 = e$$372;
    if (v15252) {
      v15252 = e$$372.isInternal;
    }
    if (v15252) {
      v2876 = e$$372.isInternal;
    } else {
      v2876 = !1;
    }
    e$$372 = v2876;
    var n$$108 = !0;
    var g$$210;
    var m$$60 = 0;
    var v2896 = m$$60 < s$$34.length;
    for (;v2896;) {
      var q$$25 = s$$34[m$$60];
      var v19600 = !s$$34[m$$60 + 1];
      if (!v19600) {
        v19600 = q$$25.chart[b$$715] !== s$$34[m$$60 + 1].chart[b$$715];
      }
      var v15253 = v19600;
      if (!v15253) {
        v15253 = o$$38;
      }
      var v9462 = v15253;
      if (v9462) {
        v9462 = q$$25.chart[b$$715] != "none";
      }
      if (v9462) {
        var v2877 = Smits.PhyloCanvas.Render.Style;
        var p$$58 = JAM.call(v2877.getStyle, v2877, [q$$25.chart[b$$715], "textSecantBg"], JAM.policy.p3);
        var v2879;
        if (e$$372) {
          var v9465 = v$$13 - j$$123 - f$$205;
          var v9466 = v$$13 - j$$123;
          var v24254;
          if (g$$210) {
            v24254 = g$$210;
          } else {
            v24254 = q$$25.y;
          }
          var v15257 = v24254 - u$$18 / 2;
          var v19605;
          var v26418 = n$$108;
          if (v26418) {
            v26418 = !o$$38;
          }
          if (v26418) {
            v19605 = 0;
          } else {
            v19605 = h$$174 / 2;
          }
          var v9467 = v15257 + v19605;
          var v15259 = q$$25.y + u$$18 / 2;
          var v19608;
          var v26419 = m$$60 == s$$34.length - 1;
          if (v26419) {
            v26419 = !o$$38;
          }
          if (v26419) {
            v19608 = 0;
          } else {
            v19608 = h$$174 / 2;
          }
          v2879 = [v9465, v9466, v9467, v15259 - v19608];
        } else {
          var v9469 = d$$432 + j$$123;
          var v9470 = d$$432 + j$$123 + f$$205;
          var v24257;
          if (g$$210) {
            v24257 = g$$210;
          } else {
            v24257 = q$$25.y;
          }
          var v15262 = v24257 - u$$18 / 2;
          var v19611;
          var v26420 = n$$108;
          if (v26420) {
            v26420 = !o$$38;
          }
          if (v26420) {
            v19611 = 0;
          } else {
            v19611 = h$$174 / 2;
          }
          var v9471 = v15262 + v19611;
          var v15264 = q$$25.y + u$$18 / 2;
          var v19614;
          var v26421 = m$$60 == s$$34.length - 1;
          if (v26421) {
            v26421 = !o$$38;
          }
          if (v26421) {
            v19614 = 0;
          } else {
            v19614 = h$$174 / 2;
          }
          v2879 = [v9469, v9470, v9471, v15264 - v19614];
        }
        g$$210 = v2879;
        if (p$$58.label) {
          var v2880 = Smits.PhyloCanvas.Render.Style;
          n$$108 = JAM.call(v2880.getStyle, v2880, [p$$58.labelStyle, "text"], JAM.policy.p3);
          q$$25 = JAM.call(a$$731, null, [(g$$210[0] + g$$210[1]) / 2, (g$$210[2] + g$$210[3]) / 2], JAM.policy.p3);
          var r$$30 = JAM.call(c$$583, null, [(g$$210[2] + g$$210[3]) / 2], JAM.policy.p3);
          var v9477 = r$$30[0];
          var v15273;
          if (n$$108.rotate) {
            v15273 = JAM.call(parseFloat, null, [n$$108.rotate], JAM.policy.p3);
          } else {
            v15273 = 0;
          }
          r$$30 = JAM.call(k$$85, null, [v9477 + v15273], JAM.policy.p3);
          var t$$31 = JAM.call(k$$85, null, [90 - (g$$210[2] + g$$210[3]) / 2 - D$$4], JAM.policy.p3);
          var v9480 = t$$31 > 90;
          if (v9480) {
            v9480 = t$$31 < 270;
          }
          var v2887 = v9480;
          if (v2887) {
            r$$30 = r$$30 + 180;
          }
          var v2888 = n$$108["text-anchor"];
          if (!v2888) {
            n$$108["text-anchor"] = "middle";
          }
          var v2889 = JAM.call(i$$235.draw, i$$235, [JAM.new(Smits.PhyloCanvas.Render.Text, [q$$25[0], q$$25[1], p$$58.label, {attr:n$$108, rotate:r$$30}], JAM.policy.p3)], JAM.policy.p3)[0];
          JAM.call(v2889.toBack, v2889, [], JAM.policy.p3);
        }
        var v2891 = p$$58.borderStyle;
        if (v2891) {
          var v15276 = Smits.PhyloCanvas.Render.Style;
          n$$108 = JAM.call(v15276.getStyle, v15276, [p$$58.borderStyle, "textSecantBg"], JAM.policy.p3);
          var v26423 = Smits.PhyloCanvas.Render.Path;
          var v29544;
          if (n$$108.fullsize) {
            v29544 = g$$210[1];
          } else {
            v29544 = g$$210[0];
          }
          var v15278 = JAM.call(i$$235.draw, i$$235, [JAM.new(v26423, [JAM.call(l$$90, null, [[v$$13, v29544, g$$210[2], g$$210[3]]], JAM.policy.p3), {attr:n$$108}], JAM.policy.p3)], JAM.policy.p3)[0];
          JAM.call(v15278.toBack, v15278, [], JAM.policy.p3);
        }
        var v2892 = JAM.call(i$$235.draw, i$$235, [JAM.new(Smits.PhyloCanvas.Render.Path, [JAM.call(l$$90, null, [g$$210], JAM.policy.p3), {attr:p$$58}], JAM.policy.p3)], JAM.policy.p3)[0];
        JAM.call(v2892.toBack, v2892, [], JAM.policy.p3);
        g$$210 = 0;
      } else {
        if (!g$$210) {
          g$$210 = q$$25.y;
        }
        var v2894 = q$$25.chart[b$$715] == "none";
        if (v2894) {
          g$$210 = 0;
        }
      }
      n$$108 = !1;
      m$$60 = m$$60 + 1;
      v2896 = m$$60 < s$$34.length;
    }
    var v2897;
    if (e$$372) {
      v2897 = d$$432;
    } else {
      v2897 = d$$432 + j$$123 + f$$205;
    }
    return v2897;
  }
  function j$$120(d$$433, a$$738, b$$716) {
    var c$$587 = [];
    var v2898;
    var v15281 = b$$716;
    if (v15281) {
      v15281 = b$$716.bufferInner;
    }
    if (v15281) {
      v2898 = JAM.call(parseFloat, null, [b$$716.bufferInner], JAM.policy.p3);
    } else {
      v2898 = Smits.PhyloCanvas.Render.Parameters.barChartBufferInner;
    }
    var e$$373 = v2898;
    var v2899;
    var v15283 = b$$716;
    if (v15283) {
      v15283 = b$$716.height;
    }
    if (v15283) {
      v2899 = JAM.call(parseFloat, null, [b$$716.height], JAM.policy.p3);
    } else {
      var v9491;
      if (Smits.PhyloCanvas.Render.Parameters.barChartHeight) {
        v9491 = Smits.PhyloCanvas.Render.Parameters.barChartHeight;
      } else {
        v9491 = 0;
      }
      v2899 = v9491;
    }
    var j$$124 = v2899;
    var v2900;
    var v15286 = b$$716;
    if (v15286) {
      v15286 = b$$716.width;
    }
    if (v15286) {
      var v9493;
      if (JAM.call(parseFloat, null, [b$$716.width], JAM.policy.p3) < 1) {
        v9493 = u$$18 * JAM.call(parseFloat, null, [b$$716.width], JAM.policy.p3);
      } else {
        v9493 = JAM.call(parseFloat, null, [b$$716.width], JAM.policy.p3);
      }
      v2900 = v9493;
    } else {
      var v15291;
      if (Smits.PhyloCanvas.Render.Parameters.barChartWidth < 1) {
        v15291 = u$$18 * Smits.PhyloCanvas.Render.Parameters.barChartWidth;
      } else {
        v15291 = Smits.PhyloCanvas.Render.Parameters.barChartWidth;
      }
      v2900 = 0 | v15291;
    }
    b$$716 = v2900;
    var h$$175 = 0;
    var f$$206 = 0;
    var v2902 = f$$206 < s$$34.length;
    for (;v2902;) {
      JAM.call(c$$587.push, c$$587, [s$$34[f$$206].chart[a$$738]], JAM.policy.p3);
      f$$206 = f$$206 + 1;
      v2902 = f$$206 < s$$34.length;
    }
    var v2903 = Math.max;
    c$$587 = JAM.call(v2903.apply, v2903, [null, c$$587], JAM.policy.p3);
    var v2904 = Smits.Common;
    h$$175 = JAM.call(v2904.roundFloat, v2904, [j$$124 / c$$587, 4], JAM.policy.p3);
    f$$206 = 0;
    var v2906 = f$$206 < s$$34.length;
    for (;v2906;) {
      c$$587 = s$$34[f$$206];
      var v9500 = c$$587.chart[a$$738] > 0;
      if (v9500) {
        var v19637 = Smits.PhyloCanvas.Render.Path;
        var v19638 = JAM.call(l$$90, null, [d$$433 + e$$373, d$$433 + e$$373 + h$$175 * c$$587.chart[a$$738], c$$587.y - b$$716 / 2, c$$587.y + b$$716 / 2], JAM.policy.p3);
        var v26438 = Smits.PhyloCanvas.Render.Style;
        JAM.call(i$$235.draw, i$$235, [JAM.new(v19637, [v19638, {attr:JAM.call(v26438.getStyle, v26438, [c$$587.chart[a$$738], "barChart"], JAM.policy.p3)}], JAM.policy.p3)], JAM.policy.p3);
      }
      f$$206 = f$$206 + 1;
      v2906 = f$$206 < s$$34.length;
    }
    return d$$433 + e$$373 + j$$124;
  }
  var i$$235;
  var e$$368 = Smits.PhyloCanvas.Render.Parameters.Circular;
  var h$$171;
  var n$$106;
  var o$$36;
  var q$$24;
  var u$$18;
  var z$$9;
  var B$$5 = !0;
  var A$$5 = 0;
  var E$$4;
  var r$$29;
  var v$$13;
  var s$$34 = [];
  var t$$30 = [];
  var C$$4;
  var w$$19;
  var x$$75 = 0;
  var D$$4;
  var F$$4 = Math.PI / 180;
  return v1955;
}
function v1952() {
  function v1951(q$$23, m$$57) {
    function v1950() {
      return JAM.call(m$$57.getRoot, m$$57, [], JAM.policy.p3);
    }
    function v1949() {
      return[b$$706, f$$200];
    }
    this.getCanvasSize = v1949;
    this.getRoot = v1950;
    var v2910 = JAM.call(m$$57.getValidate, m$$57, [], JAM.policy.p3);
    if (v2910) {
      JAM.call(a$$730.draw, a$$730, [0, 0, JAM.call(m$$57.getValidate, m$$57, [], JAM.policy.p3)], JAM.policy.p3);
    }
    a$$730 = q$$23;
    var r$$28 = JAM.call(m$$57.getRoot, m$$57, [], JAM.policy.p3);
    var v$$12 = JAM.call(m$$57.getNewickLen, m$$57, [], JAM.policy.p3);
    b$$706 = a$$730.canvasSize[0];
    f$$200 = a$$730.canvasSize[1];
    h$$167 = c$$580.bufferX;
    n$$104 = c$$580.paddingX;
    o$$34 = c$$580.paddingY;
    g$$207 = c$$580.minHeightBetweenLeaves;
    d$$420 = o$$34;
    k$$84 = JAM.call(Math.round, Math, [(b$$706 - h$$167 - n$$104 * 2) / v$$12], JAM.policy.p3);
    var v9505 = f$$200 - o$$34 * 2;
    var v15299;
    if (c$$580.showScaleBar) {
      v15299 = JAM.call(r$$28.getCountAllChildren, r$$28, [], JAM.policy.p3);
    } else {
      v15299 = JAM.call(r$$28.getCountAllChildren, r$$28, [], JAM.policy.p3) - 1;
    }
    l$$89 = JAM.call(Math.round, Math, [v9505 / v15299], JAM.policy.p3);
    var v2915 = l$$89 < g$$207;
    if (v2915) {
      l$$89 = g$$207;
    }
    p$$56 = JAM.call(Math.round, Math, [b$$706 - h$$167 - n$$104 * 2], JAM.policy.p3);
    var v9509 = Smits.PhyloCanvas.Render.Parameters.binaryCharts.length;
    if (!v9509) {
      v9509 = Smits.PhyloCanvas.Render.Parameters.barCharts.length;
    }
    if (v9509) {
      c$$580.alignRight = !0;
    }
    JAM.call(u$$17, null, [r$$28, n$$104], JAM.policy.p3);
    var v2918 = c$$580.showScaleBar;
    if (v2918) {
      y = d$$420 + l$$89;
      e$$364 = c$$580.showScaleBar * k$$84;
      JAM.call(a$$730.draw, a$$730, [JAM.new(Smits.PhyloCanvas.Render.Line, [0, e$$364, y, y], JAM.policy.p3)], JAM.policy.p3);
      JAM.call(a$$730.draw, a$$730, [JAM.new(Smits.PhyloCanvas.Render.Text, [(0 + e$$364) / 2, y - 8, c$$580.showScaleBar], JAM.policy.p3)], JAM.policy.p3);
    }
    i$$231 = p$$56 + j$$117 + c$$580.bufferInnerLabels;
    if (Smits.PhyloCanvas.Render.Parameters.binaryCharts.length) {
      r$$28 = Smits.PhyloCanvas.Render.Parameters.binaryCharts;
      var s$$33;
      for (s$$33 in r$$28) {
        i$$231 = JAM.call(z$$8, null, [i$$231, r$$28[s$$33].chart, r$$28[s$$33]], JAM.policy.p3);
      }
    }
    if (Smits.PhyloCanvas.Render.Parameters.barCharts.length) {
      r$$28 = Smits.PhyloCanvas.Render.Parameters.barCharts;
      for (s$$33 in r$$28) {
        JAM.call(B$$4, null, [i$$231, r$$28[s$$33].chart, r$$28[s$$33]], JAM.policy.p3);
      }
    }
    return;
  }
  function B$$4(d$$422, c$$582, b$$709) {
    var e$$367 = [];
    var v2929;
    var v15308 = b$$709;
    if (v15308) {
      v15308 = b$$709.bufferInner;
    }
    if (v15308) {
      v2929 = b$$709.bufferInner;
    } else {
      v2929 = 0 | Smits.PhyloCanvas.Render.Parameters.barChartBufferInner;
    }
    var i$$234 = v2929;
    var v2930;
    var v15310 = b$$709;
    if (v15310) {
      v15310 = b$$709.height;
    }
    if (v15310) {
      v2930 = b$$709.height;
    } else {
      v2930 = 0 | Smits.PhyloCanvas.Render.Parameters.barChartHeight;
    }
    var h$$170 = v2930;
    var v2931;
    var v15312 = b$$709;
    if (v15312) {
      v15312 = b$$709.width;
    }
    if (v15312) {
      var v9519;
      if (b$$709.width < 1) {
        v9519 = l$$89 * b$$709.width;
      } else {
        v9519 = b$$709.width;
      }
      v2931 = v9519;
    } else {
      var v15315;
      if (Smits.PhyloCanvas.Render.Parameters.barChartWidth < 1) {
        v15315 = l$$89 * Smits.PhyloCanvas.Render.Parameters.barChartWidth;
      } else {
        v15315 = Smits.PhyloCanvas.Render.Parameters.barChartWidth;
      }
      v2931 = 0 | v15315;
    }
    b$$709 = v2931;
    var j$$119 = 0;
    var f$$202 = 0;
    var v2933 = f$$202 < q$$22.length;
    for (;v2933;) {
      JAM.call(e$$367.push, e$$367, [q$$22[f$$202].chart[c$$582]], JAM.policy.p3);
      f$$202 = f$$202 + 1;
      v2933 = f$$202 < q$$22.length;
    }
    var v2934 = Math.max;
    e$$367 = JAM.call(v2934.apply, v2934, [null, e$$367], JAM.policy.p3);
    var v2935 = Smits.Common;
    j$$119 = JAM.call(v2935.roundFloat, v2935, [h$$170 / e$$367, 4], JAM.policy.p3);
    f$$202 = 0;
    var v2937 = f$$202 < q$$22.length;
    for (;v2937;) {
      e$$367 = q$$22[f$$202];
      var v15317 = Smits.PhyloCanvas.Render.Path;
      var v15318 = ["M", d$$422 + i$$234, e$$367.y - b$$709 / 2, "L", d$$422 + i$$234 + j$$119 * e$$367.chart[c$$582], e$$367.y - b$$709 / 2, "L", d$$422 + i$$234 + j$$119 * e$$367.chart[c$$582], e$$367.y + b$$709 / 2, "L", d$$422 + i$$234, e$$367.y + b$$709 / 2, "Z"];
      var v24305 = Smits.PhyloCanvas.Render.Style;
      JAM.call(a$$730.draw, a$$730, [JAM.new(v15317, [v15318, {attr:JAM.call(v24305.getStyle, v24305, [e$$367.chart[c$$582], "barChart"], JAM.policy.p3)}], JAM.policy.p3)], JAM.policy.p3);
      f$$202 = f$$202 + 1;
      v2937 = f$$202 < q$$22.length;
    }
    return d$$422 + i$$234 + h$$170;
  }
  function z$$8(d$$421, c$$581, b$$708) {
    var v9528;
    var v19668 = b$$708;
    if (v19668) {
      v19668 = b$$708.bufferInner;
    }
    if (v19668) {
      v9528 = b$$708.bufferInner;
    } else {
      v9528 = 0;
    }
    var e$$366 = v9528 | Smits.PhyloCanvas.Render.Parameters.binaryChartBufferInner;
    var v9530;
    var v19670 = b$$708;
    if (v19670) {
      v19670 = b$$708.bufferSiblings;
    }
    if (v19670) {
      v9530 = b$$708.bufferSiblings * l$$89;
    } else {
      v9530 = 0;
    }
    var v2941 = v9530;
    var v9531;
    if (Smits.PhyloCanvas.Render.Parameters.binaryChartBufferSiblings < 1) {
      v9531 = l$$89 * Smits.PhyloCanvas.Render.Parameters.binaryChartBufferSiblings;
    } else {
      v9531 = Smits.PhyloCanvas.Render.Parameters.binaryChartBufferSiblings;
    }
    var i$$233 = v2941 | v9531;
    var v9532;
    var v19674 = b$$708;
    if (v19674) {
      v19674 = b$$708.thickness;
    }
    if (v19674) {
      v9532 = b$$708.thickness;
    } else {
      v9532 = 0;
    }
    b$$708 = v9532 | Smits.PhyloCanvas.Render.Parameters.binaryChartThickness;
    var h$$169 = 0;
    var v2946 = h$$169 < q$$22.length;
    for (;v2946;) {
      var j$$118 = q$$22[h$$169];
      var v9535 = Smits.PhyloCanvas.Render.Path;
      var v9536 = ["M", d$$421 + e$$366, j$$118.y - l$$89 / 2 + i$$233 / 2, "L", d$$421 + e$$366 + b$$708, j$$118.y - l$$89 / 2 + i$$233 / 2, "L", d$$421 + e$$366 + b$$708, j$$118.y + l$$89 / 2 - i$$233 / 2, "L", d$$421 + e$$366, j$$118.y + l$$89 / 2 - i$$233 / 2, "Z"];
      var v19687 = Smits.PhyloCanvas.Render.Style;
      JAM.call(a$$730.draw, a$$730, [JAM.new(v9535, [v9536, {attr:JAM.call(v19687.getStyle, v19687, [j$$118.chart[c$$581], "textSecantBg"], JAM.policy.p3)}], JAM.policy.p3)], JAM.policy.p3);
      h$$169 = h$$169 + 1;
      v2946 = h$$169 < q$$22.length;
    }
    return d$$421 + e$$366 + b$$708;
  }
  function u$$17(b$$707, e$$365) {
    var v15339 = b$$707.len;
    if (v15339) {
      v15339 = m$$56 == !1;
    }
    var v9539 = v15339;
    if (v9539) {
      v9539 = b$$707.children.length == 0;
    }
    var v2948 = v9539;
    if (v2948) {
      var v9540 = Smits.Common;
      d$$420 = JAM.call(v9540.roundFloat, v9540, [d$$420 + l$$89, 4], JAM.policy.p3);
    }
    if (b$$707.children.length > 0) {
      var i$$232 = [];
      var h$$168;
      var f$$201;
      var o$$35;
      var n$$105;
      var v2949 = b$$707.len;
      if (v2949) {
        h$$168 = e$$365;
        var v24320 = Smits.Common;
        f$$201 = e$$365 = JAM.call(v24320.roundFloat, v24320, [e$$365 + k$$84 * b$$707.len, 4], JAM.policy.p3);
        n$$105 = o$$35 = d$$420 + JAM.call(b$$707.getMidbranchPosition, b$$707, [m$$56], JAM.policy.p3) * l$$89;
        JAM.call(a$$730.draw, a$$730, [JAM.new(Smits.PhyloCanvas.Render.Line, [h$$168, f$$201, o$$35, n$$105], JAM.policy.p3)], JAM.policy.p3);
      }
      if (b$$707.name) {
        h$$168 = {};
        var v2950 = Smits.PhyloCanvas.Render.Style;
        h$$168 = JAM.call(v2950.getStyle, v2950, ["bootstrap", "text"], JAM.policy.p3);
        if (b$$707.uri) {
          h$$168.href = b$$707.uri;
        }
        if (b$$707.description) {
          h$$168.title = b$$707.description;
        }
        var v2953;
        if (b$$707.level == 0) {
          v2953 = d$$420 + JAM.call(b$$707.getMidbranchPosition, b$$707, [m$$56], JAM.policy.p3) * l$$89;
        } else {
          v2953 = n$$105;
        }
        var g$$208 = v2953;
        JAM.call(a$$730.draw, a$$730, [JAM.new(Smits.PhyloCanvas.Render.Text, [(f$$201 || e$$365) + 5, g$$208, b$$707.name, {attr:h$$168}], JAM.policy.p3)], JAM.policy.p3);
      }
      var v9551 = b$$707.children;
      if (v9551) {
        v9551 = b$$707.children.length;
      }
      if (v9551) {
        h$$168 = 0;
        var v2957 = h$$168 < b$$707.children.length;
        for (;v2957;) {
          JAM.call(i$$232.push, i$$232, [JAM.call(u$$17, null, [b$$707.children[h$$168], e$$365], JAM.policy.p3)], JAM.policy.p3);
          h$$168 = h$$168 + 1;
          v2957 = h$$168 < b$$707.children.length;
        }
      }
      f$$201 = [];
      h$$168 = 0;
      var v2959 = h$$168 < i$$232.length;
      for (;v2959;) {
        var v9556 = i$$232[h$$168][0];
        if (v9556) {
          JAM.call(f$$201.push, f$$201, [i$$232[h$$168][0]], JAM.policy.p3);
        }
        var v9557 = i$$232[h$$168][1];
        if (v9557) {
          JAM.call(f$$201.push, f$$201, [i$$232[h$$168][1]], JAM.policy.p3);
        }
        h$$168 = h$$168 + 1;
        v2959 = h$$168 < i$$232.length;
      }
      var v2960 = Math.min;
      i$$232 = JAM.call(v2960.apply, v2960, [null, f$$201], JAM.policy.p3);
      var v2961 = Math.max;
      f$$201 = JAM.call(v2961.apply, v2961, [null, f$$201], JAM.policy.p3);
      JAM.call(a$$730.draw, a$$730, [JAM.new(Smits.PhyloCanvas.Render.Path, [["M", e$$365 + 1E-4, i$$232, "L", e$$365, i$$232, "L", e$$365, f$$201, "L", e$$365 + 1E-4, f$$201], {attr:Smits.PhyloCanvas.Render.Style.line}], JAM.policy.p3)], JAM.policy.p3);
    } else {
      h$$168 = e$$365;
      var v2963 = Smits.Common;
      f$$201 = JAM.call(v2963.roundFloat, v2963, [e$$365 + k$$84 * b$$707.len, 2], JAM.policy.p3);
      n$$105 = o$$35 = d$$420;
      b$$707.y = d$$420;
      JAM.call(q$$22.push, q$$22, [b$$707], JAM.policy.p3);
      JAM.call(a$$730.draw, a$$730, [JAM.new(Smits.PhyloCanvas.Render.Line, [h$$168, f$$201, o$$35, n$$105], JAM.policy.p3)], JAM.policy.p3);
      var v2966 = c$$580.alignRight;
      if (v2966) {
        JAM.call(a$$730.draw, a$$730, [JAM.new(Smits.PhyloCanvas.Render.Path, [["M", f$$201, o$$35, "L", c$$580.alignPadding + p$$56, n$$105], {attr:Smits.PhyloCanvas.Render.Style.connectedDash}], JAM.policy.p3)], JAM.policy.p3);
      }
      if (b$$707.name) {
        h$$168 = {};
        var v2967 = b$$707.style;
        if (v2967) {
          var v9565 = Smits.PhyloCanvas.Render.Style;
          h$$168 = JAM.call(v9565.getStyle, v9565, [b$$707.style, "text"], JAM.policy.p3);
        }
        h$$168["text-anchor"] = "start";
        if (b$$707.uri) {
          h$$168.href = b$$707.uri;
        }
        if (b$$707.description) {
          h$$168.title = b$$707.description;
        }
        var v9567 = Smits.PhyloCanvas.Render.Text;
        var v15367;
        if (c$$580.alignRight) {
          v15367 = p$$56 + c$$580.bufferInnerLabels + c$$580.alignPadding;
        } else {
          v15367 = f$$201 + c$$580.bufferInnerLabels;
        }
        i$$232 = JAM.call(a$$730.draw, a$$730, [JAM.new(v9567, [v15367, n$$105, b$$707.name, {attr:h$$168}], JAM.policy.p3)], JAM.policy.p3);
        j$$117 = JAM.call(Math.max, Math, [i$$232[1], j$$117], JAM.policy.p3);
        var v2972 = Smits.PhyloCanvas.Render.Parameters.mouseRollOver;
        if (v2972) {
          var v9572 = Smits.Common;
          JAM.call(v9572.addRaphEventHandler, v9572, [i$$232[0], "mouseover", Smits.PhyloCanvas.Render.Parameters.mouseRollOver, {svg:a$$730, node:b$$707, x:f$$201, y:n$$105, textEl:i$$232[0]}], JAM.policy.p3);
        }
        var v2973 = Smits.PhyloCanvas.Render.Parameters.mouseRollOut;
        if (v2973) {
          var v9577 = Smits.Common;
          JAM.call(v9577.addRaphEventHandler, v9577, [i$$232[0], "mouseout", Smits.PhyloCanvas.Render.Parameters.mouseRollOut, {svg:a$$730, node:b$$707, x:f$$201, y:n$$105, textEl:i$$232[0]}], JAM.policy.p3);
        }
        var v2974 = Smits.PhyloCanvas.Render.Parameters.onClickAction;
        if (v2974) {
          var v9582 = Smits.Common;
          JAM.call(v9582.addRaphEventHandler, v9582, [i$$232[0], "click", Smits.PhyloCanvas.Render.Parameters.onClickAction, {svg:a$$730, node:b$$707, x:f$$201, y:n$$105, textEl:i$$232[0]}], JAM.policy.p3);
        }
      }
      if (m$$56) {
        m$$56 = !1;
      }
    }
    return[o$$35, n$$105];
  }
  var a$$730;
  var c$$580 = Smits.PhyloCanvas.Render.Parameters.Rectangular;
  var b$$706;
  var f$$200;
  var k$$84;
  var l$$89;
  var p$$56;
  var g$$207;
  var m$$56 = !0;
  var d$$420 = 0;
  var j$$117 = 0;
  var i$$231;
  var e$$364;
  var h$$167;
  var n$$104;
  var o$$34;
  var q$$22 = [];
  return v1951;
}
function v1948(a$$729) {
  var c$$579;
  var b$$705;
  var v2978;
  if (a$$729.type == "line") {
    var v15379 = this.svg;
    var v9587 = JAM.call(v15379.path, v15379, [["M", a$$729.x1, a$$729.y1, "L", a$$729.x2, a$$729.y2]], JAM.policy.p3);
    v2978 = c$$579 = JAM.call(v9587.attr, v9587, [Smits.PhyloCanvas.Render.Style.line], JAM.policy.p3);
  } else {
    var v9589;
    if (a$$729.type == "path") {
      var v19721 = this.svg;
      var v15382 = JAM.call(v19721.path, v19721, [a$$729.path], JAM.policy.p3);
      v9589 = c$$579 = JAM.call(v15382.attr, v15382, [a$$729.attr], JAM.policy.p3);
    } else {
      var v15384;
      if (a$$729.type == "circle") {
        var v24334 = this.svg;
        var v19723 = JAM.call(v24334.circle, v24334, [a$$729.x, a$$729.y, a$$729.radius], JAM.policy.p3);
        v15384 = c$$579 = JAM.call(v19723.attr, v19723, [{stroke:"red"}], JAM.policy.p3);
      } else {
        var v19725 = a$$729.type == "text";
        if (v19725) {
          var v29939 = this.svg;
          var v29545 = JAM.call(v29939.text, v29939, [a$$729.x, a$$729.y, a$$729.text], JAM.policy.p3);
          c$$579 = JAM.call(v29545.attr, v29545, [Smits.PhyloCanvas.Render.Style.text], JAM.policy.p3);
          var v29547 = a$$729.attr;
          if (v29547) {
            JAM.call(c$$579.attr, c$$579, [a$$729.attr], JAM.policy.p3);
          }
          var v28912 = a$$729.rotate;
          if (v28912) {
            JAM.call(c$$579.rotate, c$$579, [a$$729.rotate], JAM.policy.p3);
          }
          a$$729 = JAM.call(c$$579.getBBox, c$$579, [], JAM.policy.p3);
          v19725 = b$$705 = JAM.call(Math.sqrt, Math, [a$$729.height * a$$729.height + a$$729.width * a$$729.width], JAM.policy.p3);
        }
        v15384 = v19725;
      }
      v9589 = v15384;
    }
    v2978 = v9589;
  }
  v2978;
  return[c$$579, b$$705];
}
function v1947() {
  var v2979 = this.phylogramObject;
  var a$$728 = JAM.call(v2979.getDrawInstructs, v2979, [], JAM.policy.p3);
  var v9591 = this.phylogramObject;
  JAM.call(console.log, console, ["render", JAM.call(v9591.getDrawInstructs, v9591, [], JAM.policy.p3)], JAM.policy.p3);
  var c$$578 = 0;
  var v2994 = c$$578 < a$$728.length;
  for (;v2994;) {
    if (a$$728[c$$578].type == "line") {
      var v9594 = this.svg;
      var v2981 = JAM.call(v9594.path, v9594, [["M", a$$728[c$$578].x1, a$$728[c$$578].y1, "L", a$$728[c$$578].x2, a$$728[c$$578].y2]], JAM.policy.p3);
      JAM.call(v2981.attr, v2981, [Smits.PhyloCanvas.Render.Style.line], JAM.policy.p3);
    } else {
      if (a$$728[c$$578].type == "path") {
        var v9598 = this.svg;
        var v2983 = JAM.call(v9598.path, v9598, [a$$728[c$$578].path], JAM.policy.p3);
        JAM.call(v2983.attr, v2983, [a$$728[c$$578].attr], JAM.policy.p3);
      } else {
        if (a$$728[c$$578].type == "circle") {
          var v9602 = this.svg;
          var v2985 = JAM.call(v9602.circle, v9602, [a$$728[c$$578].x, a$$728[c$$578].y, a$$728[c$$578].radius], JAM.policy.p3);
          JAM.call(v2985.attr, v2985, [{stroke:"red"}], JAM.policy.p3);
        } else {
          var v9606 = this.svg;
          var v2987 = JAM.call(v9606.text, v9606, [a$$728[c$$578].x, a$$728[c$$578].y, a$$728[c$$578].text], JAM.policy.p3);
          var b$$704 = JAM.call(v2987.attr, v2987, [Smits.PhyloCanvas.Render.Style.text], JAM.policy.p3);
          var v2989 = a$$728[c$$578].attr;
          if (v2989) {
            JAM.call(b$$704.attr, b$$704, [a$$728[c$$578].attr], JAM.policy.p3);
          }
          var v2990 = a$$728[c$$578].rotate;
          if (v2990) {
            JAM.call(b$$704.rotate, b$$704, [a$$728[c$$578].rotate], JAM.policy.p3);
          }
          JAM.call(b$$704.getBBox, b$$704, [], JAM.policy.p3);
        }
      }
    }
    c$$578 = c$$578 + 1;
    v2994 = c$$578 < a$$728.length;
  }
  return;
}
function v1946() {
  function v1945(a$$727, c$$577, b$$703) {
    this.canvasSize = [c$$577, b$$703];
    var v31156 = JAM.call(Raphael, null, [a$$727, this.canvasSize[0], this.canvasSize[1]], JAM.policy.p3);
    this.svg = v31156;
    return;
  }
  return v1945;
}
function v1944() {
  function v1943(a$$726, c$$576, b$$702, f$$199) {
    this.type = "circle";
    this.x = a$$726;
    this.y = c$$576;
    this.radius = b$$702;
    var v9618 = f$$199;
    if (v9618) {
      var v19733 = Smits.Common;
      JAM.call(v19733.apply, v19733, [this, f$$199], JAM.policy.p3);
      v9618 = f$$199.attr;
    }
    if (v9618) {
      this.attr = f$$199.attr;
    }
    return;
  }
  return v1943;
}
function v1942() {
  function v1941(a$$725, c$$575) {
    this.type = "path";
    this.attr = Smits.PhyloCanvas.Render.Style.path;
    this.path = a$$725;
    var v9620 = c$$575;
    if (v9620) {
      var v19734 = Smits.Common;
      JAM.call(v19734.apply, v19734, [this, c$$575], JAM.policy.p3);
      v9620 = c$$575.attr;
    }
    if (v9620) {
      this.attr = c$$575.attr;
    }
    return;
  }
  return v1941;
}
function v1940() {
  function v1939(a$$724, c$$574, b$$701, f$$198) {
    this.type = "text";
    this.attr = Smits.PhyloCanvas.Render.Style.text;
    this.x = a$$724;
    this.y = c$$574;
    this.text = b$$701;
    var v9622 = f$$198;
    if (v9622) {
      var v19735 = Smits.Common;
      JAM.call(v19735.apply, v19735, [this, f$$198], JAM.policy.p3);
      v9622 = f$$198.attr;
    }
    if (v9622) {
      this.attr = f$$198.attr;
    }
    return;
  }
  return v1939;
}
function v1938() {
  function v1937(a$$723, c$$573, b$$700, f$$197, k$$83) {
    this.type = "line";
    this.attr = Smits.PhyloCanvas.Render.Style.line;
    this.x1 = a$$723;
    this.x2 = c$$573;
    this.y1 = b$$700;
    this.y2 = f$$197;
    var v9624 = k$$83;
    if (v9624) {
      var v19736 = Smits.Common;
      JAM.call(v19736.apply, v19736, [this, k$$83], JAM.policy.p3);
      v9624 = k$$83.attr;
    }
    if (v9624) {
      this.attr = k$$83.attr;
    }
    return;
  }
  return v1937;
}
function v1936(a$$722, c$$572, b$$699) {
  var v3004 = this.jsOverride;
  if (!v3004) {
    var v9625;
    if (b$$699) {
      var v15407;
      if (b$$699 == "circular") {
        var v19737 = this.Circular;
        var v19738 = a$$722;
        var v31157 = JAM.call(parseFloat, null, [c$$572], JAM.policy.p3);
        v15407 = JAM.set(v19737, v19738, v31157, JAM.policy.p2);
      } else {
        var v19739 = b$$699 == "rectangular";
        if (v19739) {
          var v24339 = this.Rectangular;
          var v24340 = a$$722;
          var v31158 = JAM.call(parseFloat, null, [c$$572], JAM.policy.p3);
          v19739 = JAM.set(v24339, v24340, v31158, JAM.policy.p2);
        }
        v15407 = v19739;
      }
      v9625 = v15407;
    } else {
      var v31159 = JAM.call(parseFloat, null, [c$$572], JAM.policy.p3);
      v9625 = JAM.set(this, a$$722, v31159, JAM.policy.p2);
    }
    v9625;
  }
  return;
}
function v1935(a$$721) {
  var v3005 = a$$721.node.edgeCircleHighlight;
  JAM.call(v3005.hide, v3005, [], JAM.policy.p3);
  var v3006 = a$$721.textEl;
  JAM.call(v3006.attr, v3006, [{fill:"#000"}], JAM.policy.p3);
  return;
}
function v1934(a$$720) {
  if (a$$720.node.edgeCircleHighlight) {
    var v3008 = a$$720.node.edgeCircleHighlight;
    JAM.call(v3008.show, v3008, [], JAM.policy.p3);
  } else {
    var v3009 = a$$720.svg;
    var c$$571 = JAM.call(v3009.draw, v3009, [JAM.new(Smits.PhyloCanvas.Render.Circle, [a$$720.x, a$$720.y, 5, {attr:Smits.PhyloCanvas.Render.Style.highlightedEdgeCircle}], JAM.policy.p3)], JAM.policy.p3);
    a$$720.node.edgeCircleHighlight = c$$571[0];
  }
  var v3013 = a$$720.textEl;
  JAM.call(v3013.attr, v3013, [{fill:"red"}], JAM.policy.p3);
  return;
}
function v1933(a$$719, c$$570) {
  var v3015;
  if (this[a$$719]) {
    v3015 = this[a$$719];
  } else {
    v3015 = this[c$$570];
  }
  return v3015;
}
function v1932() {
  function v1931(d$$419) {
    function v1930() {
      return f$$196;
    }
    function v1929() {
      return c$$567;
    }
    function v1928() {
      return a$$716;
    }
    function v1927() {
      return b$$695;
    }
    this.getRoot = v1927;
    this.getLevels = v1928;
    this.getNewickLen = v1929;
    this.getValidate = v1930;
    var j$$116 = d$$419.nexmlJson.nexml;
    var i$$230 = j$$116.render;
    var v9635 = i$$230;
    if (v9635) {
      v9635 = i$$230.styles;
    }
    if (v9635) {
      var e$$363 = i$$230.styles;
      var h$$166;
      for (h$$166 in e$$363) {
        var v9636 = h$$166 != "_children";
        if (v9636) {
          v9636 = h$$166 != "Text";
        }
        if (v9636) {
          var v15410 = e$$363[h$$166]["@attributes"].type;
          if (v15410) {
            v15410 = e$$363[h$$166]["@attributes"].type == "radialGradient";
          }
          var v9637 = v15410;
          if (v9637) {
            v9637 = Raphael.svg;
          }
          if (v9637) {
            e$$363[h$$166].name = h$$166;
            e$$363[h$$166].type = e$$363[h$$166]["@attributes"].type;
            JAM.set(Smits.PhyloCanvas.Render.Style, h$$166, e$$363[h$$166], JAM.policy.p2);
            var v15411 = Smits.PhyloCanvas.Render.Style.jsphylosvgGradientList;
            if (!v15411) {
              Smits.PhyloCanvas.Render.Style.jsphylosvgGradientList = [];
            }
            var v9638 = Smits.PhyloCanvas.Render.Style.jsphylosvgGradientList;
            JAM.call(v9638.push, v9638, [h$$166], JAM.policy.p3);
          } else {
            var n$$103;
            var v15413 = Smits.PhyloCanvas.Render.Style[h$$166];
            if (!v15413) {
              JAM.set(Smits.PhyloCanvas.Render.Style, h$$166, {}, JAM.policy.p2);
            }
            for (n$$103 in e$$363[h$$166]["@attributes"]) {
              var v15415 = n$$103 != "_attributes";
              if (v15415) {
                v15415 = n$$103 != "_children";
              }
              var v9639 = v15415;
              if (v9639) {
                v9639 = n$$103 != "type";
              }
              var v3017 = v9639;
              if (v3017) {
                JAM.set(Smits.PhyloCanvas.Render.Style[h$$166], JAM.call(n$$103.replace, n$$103, ["_", "-"], JAM.policy.p3), e$$363[h$$166]["@attributes"][n$$103], JAM.policy.p2);
              }
            }
          }
        }
      }
    }
    var v9642 = i$$230;
    if (v9642) {
      v9642 = i$$230.parameters;
    }
    var v3022 = v9642;
    if (v3022) {
      JAM.call(m$$55, null, [i$$230.parameters], JAM.policy.p3);
    }
    var v9644 = i$$230;
    if (v9644) {
      v9644 = i$$230.charts;
    }
    if (v9644) {
      i$$230 = i$$230.charts;
      for (h$$166 in i$$230) {
        i$$230[h$$166]["@attributes"].chart = h$$166;
        var v9646;
        if (i$$230[h$$166]["@attributes"].type == "binary") {
          var v15419 = Smits.PhyloCanvas.Render.Parameters.binaryCharts;
          v9646 = JAM.call(v15419.push, v15419, [i$$230[h$$166]["@attributes"]], JAM.policy.p3);
        } else {
          var v15421;
          if (i$$230[h$$166]["@attributes"].type == "integratedBinary") {
            var v19758 = Smits.PhyloCanvas.Render.Parameters.integratedBinaryCharts;
            v15421 = JAM.call(v19758.push, v19758, [i$$230[h$$166]["@attributes"]], JAM.policy.p3);
          } else {
            var v19760 = i$$230[h$$166]["@attributes"].type == "bar";
            if (v19760) {
              var v24359 = Smits.PhyloCanvas.Render.Parameters.barCharts;
              v19760 = JAM.call(v24359.push, v24359, [i$$230[h$$166]["@attributes"]], JAM.policy.p3);
            }
            v15421 = v19760;
          }
          v9646 = v15421;
        }
        v9646;
      }
    }
    var v15423 = d$$419.tree;
    if (v15423) {
      v15423 = j$$116.trees[0];
    }
    var v9647 = v15423;
    if (v9647) {
      v9647 = j$$116.trees[0].tree[d$$419.tree - 1];
    }
    if (v9647) {
      k$$82 = j$$116.trees[0].tree[d$$419.tree - 1].edge;
      l$$88 = j$$116.trees[0].tree[d$$419.tree - 1].node;
    } else {
      h$$166 = 0;
      var v3026 = h$$166 < j$$116.trees.tree.edge.length;
      for (;v3026;) {
        JAM.call(k$$82.push, k$$82, [j$$116.trees.tree.edge[h$$166]["@attributes"]], JAM.policy.p3);
        h$$166 = h$$166 + 1;
        v3026 = h$$166 < j$$116.trees.tree.edge.length;
      }
      h$$166 = 0;
      var v3030 = h$$166 < j$$116.trees.tree.node.length;
      for (;v3030;) {
        d$$419 = j$$116.trees.tree.node[h$$166]["@attributes"];
        if (d$$419.label) {
          d$$419.chart = j$$116.trees.tree.node[h$$166].chart;
        }
        JAM.call(l$$88.push, l$$88, [d$$419], JAM.policy.p3);
        h$$166 = h$$166 + 1;
        v3030 = h$$166 < j$$116.trees.tree.node.length;
      }
    }
    h$$166 = 0;
    var v3033 = h$$166 < l$$88.length;
    for (;v3033;) {
      var v9658 = l$$88[h$$166].root;
      if (v9658) {
        v9658 = l$$88[h$$166].root == "true";
      }
      var v3032 = v9658;
      if (v3032) {
        b$$695 = l$$88[h$$166];
      }
      h$$166 = h$$166 + 1;
      v3033 = h$$166 < l$$88.length;
    }
    var v3034;
    if (b$$695) {
      b$$695 = JAM.call(p$$55, null, [b$$695], JAM.policy.p3);
      v3034 = b$$695 = JAM.call(g$$206, null, [b$$695], JAM.policy.p3);
    } else {
      v3034 = f$$196 = "Error. Currently, only rooted NeXML trees are supported.";
    }
    v3034;
    return;
  }
  function m$$55(a$$718, c$$569) {
    var b$$698;
    for (b$$698 in a$$718) {
      var v9660 = b$$698 != "_children";
      if (v9660) {
        v9660 = b$$698 != "Text";
      }
      var v3035 = v9660;
      if (v3035) {
        var v9661;
        var v19777 = b$$698 == "rectangular";
        if (!v19777) {
          v19777 = b$$698 == "circular";
        }
        if (v19777) {
          v9661 = JAM.call(m$$55, null, [a$$718[b$$698], b$$698], JAM.policy.p3);
        } else {
          var v19778 = Smits.PhyloCanvas.Render.Parameters[b$$698];
          if (!v19778) {
            JAM.set(Smits.PhyloCanvas.Render.Parameters, b$$698, {}, JAM.policy.p2);
          }
          var v19779 = Smits.PhyloCanvas.Render.Parameters;
          v9661 = JAM.call(v19779.set, v19779, [b$$698, a$$718[b$$698], c$$569], JAM.policy.p3);
        }
        v9661;
      }
    }
    return;
  }
  function g$$206(d$$418) {
    var v9662 = d$$418.children;
    if (v9662) {
      v9662 = d$$418.children.length;
    }
    if (v9662) {
      var b$$697 = 0;
      var v3041 = b$$697 < d$$418.children.length;
      for (;v3041;) {
        var i$$229 = d$$418.children[b$$697];
        i$$229.newickLen = JAM.call(Math.round, Math, [(i$$229.len + d$$418.newickLen) * 1E4], JAM.policy.p3) / 1E4;
        if (i$$229.level > a$$716) {
          a$$716 = i$$229.level;
        }
        if (i$$229.newickLen > c$$567) {
          c$$567 = i$$229.newickLen;
        }
        var v3040 = i$$229.children.length > 0;
        if (v3040) {
          JAM.call(g$$206, null, [i$$229, d$$418], JAM.policy.p3);
        }
        b$$697 = b$$697 + 1;
        v3041 = b$$697 < d$$418.children.length;
      }
    }
    return d$$418;
  }
  function p$$55(a$$717, c$$568, i$$228) {
    var e$$362 = JAM.new(Smits.PhyloCanvas.Node, [], JAM.policy.p3);
    if (i$$228) {
      e$$362.level = i$$228.level + 1;
    }
    i$$228 = 0;
    var v3048 = i$$228 < k$$82.length;
    for (;v3048;) {
      if (k$$82[i$$228].source == a$$717.id) {
        var b$$696 = 0;
        var v3046 = b$$696 < l$$88.length;
        for (;v3046;) {
          var v3045 = k$$82[i$$228].target == l$$88[b$$696].id;
          if (v3045) {
            var v9676 = e$$362.children;
            JAM.call(v9676.push, v9676, [JAM.call(p$$55, null, [l$$88[b$$696], k$$82[i$$228].length, e$$362], JAM.policy.p3)], JAM.policy.p3);
          }
          b$$696 = b$$696 + 1;
          v3046 = b$$696 < l$$88.length;
        }
      }
      i$$228 = i$$228 + 1;
      v3048 = i$$228 < k$$82.length;
    }
    var v9680 = c$$568;
    if (v9680) {
      var v19783 = e$$362;
      var v24376 = Smits.Common;
      var v31160 = JAM.call(v24376.roundFloat, v24376, [c$$568, 4], JAM.policy.p3);
      v19783.len = v31160;
      v9680 = e$$362.len == 0;
    }
    if (v9680) {
      e$$362.len = 1E-4;
    }
    if (a$$717.label) {
      e$$362.type = "label";
      e$$362.name = a$$717.label;
      if (a$$717.accession) {
        e$$362.accession = a$$717.accession;
      }
      if (a$$717.style) {
        e$$362.style = a$$717.style;
      }
      if (a$$717.bgStyle) {
        e$$362.bgStyle = a$$717.bgStyle;
      }
    }
    if (a$$717.chart) {
      e$$362.chart = a$$717.chart;
    }
    var v9681 = e$$362;
    if (v9681) {
      v9681 = e$$362.level > 1;
    }
    var v3055 = v9681;
    if (v3055) {
      var v9682 = e$$362.len;
      if (!v9682) {
        f$$196 = "Error. Please include Branch Lengths - we only draw rooted phylogenetic trees.";
      }
    }
    return e$$362;
  }
  var a$$716 = 0;
  var c$$567 = 0;
  var b$$695;
  var f$$196;
  var k$$82 = [];
  var l$$88 = [];
  return v1931;
}
function v1926() {
  function v1925(m$$54, d$$417) {
    function v1924() {
      return f$$195;
    }
    function v1923() {
      return c$$565;
    }
    function v1922() {
      return a$$714;
    }
    function v1921() {
      return b$$693;
    }
    this.getRoot = v1921;
    this.getLevels = v1922;
    this.getNewickLen = v1923;
    this.getValidate = v1924;
    var v3056;
    var v19785 = d$$417.tree;
    if (v19785) {
      v19785 = m$$54.trees[0];
    }
    var v15453 = v19785;
    if (v15453) {
      v15453 = m$$54.trees[0].tree[d$$417.tree - 1];
    }
    if (v15453) {
      k$$81 = m$$54.trees[0].tree[d$$417.tree - 1].edge;
      v3056 = l$$87 = m$$54.trees[0].tree[d$$417.tree - 1].node;
    } else {
      k$$81 = m$$54.trees[0].tree[0].edge;
      v3056 = l$$87 = m$$54.trees[0].tree[0].node;
    }
    v3056;
    var j$$115 = 0;
    var v3061 = j$$115 < l$$87.length;
    for (;v3061;) {
      var i$$227 = 0;
      var v9685 = l$$87[j$$115].root;
      if (v9685) {
        v9685 = l$$87[j$$115].root == "true";
      }
      if (v9685) {
        b$$693 = l$$87[j$$115];
        break;
      }
      var e$$361 = 0;
      var v3059 = e$$361 < k$$81.length;
      for (;v3059;) {
        var v3058 = k$$81[e$$361].target == l$$87[j$$115].id;
        if (v3058) {
          i$$227 = i$$227 + 1;
        }
        e$$361 = e$$361 + 1;
        v3059 = e$$361 < k$$81.length;
      }
      if (i$$227 == 0) {
        b$$693 = l$$87[j$$115];
        break;
      }
      j$$115 = j$$115 + 1;
      v3061 = j$$115 < l$$87.length;
    }
    var v3062;
    if (b$$693) {
      b$$693 = JAM.call(p$$54, null, [b$$693], JAM.policy.p3);
      v3062 = b$$693 = JAM.call(g$$205, null, [b$$693], JAM.policy.p3);
    } else {
      v3062 = f$$195 = "Error. Currently, only rooted NeXML trees are supported.";
    }
    v3062;
    return;
  }
  function g$$205(b$$694) {
    var v9691 = b$$694.children;
    if (v9691) {
      v9691 = b$$694.children.length;
    }
    if (v9691) {
      var d$$416 = 0;
      var v3068 = d$$416 < b$$694.children.length;
      for (;v3068;) {
        var j$$114 = b$$694.children[d$$416];
        j$$114.newickLen = JAM.call(Math.round, Math, [(j$$114.len + b$$694.newickLen) * 1E4], JAM.policy.p3) / 1E4;
        if (j$$114.level > a$$714) {
          a$$714 = j$$114.level;
        }
        if (j$$114.newickLen > c$$565) {
          c$$565 = j$$114.newickLen;
        }
        var v3067 = j$$114.children.length > 0;
        if (v3067) {
          JAM.call(g$$205, null, [j$$114, b$$694], JAM.policy.p3);
        }
        d$$416 = d$$416 + 1;
        v3068 = d$$416 < b$$694.children.length;
      }
    }
    return b$$694;
  }
  function p$$54(a$$715, d$$415, c$$566) {
    var i$$226 = JAM.new(Smits.PhyloCanvas.Node, [], JAM.policy.p3);
    if (c$$566) {
      i$$226.level = c$$566.level + 1;
    }
    c$$566 = 0;
    var v3075 = c$$566 < k$$81.length;
    for (;v3075;) {
      if (k$$81[c$$566].source == a$$715.id) {
        var e$$360 = 0;
        var v3073 = e$$360 < l$$87.length;
        for (;v3073;) {
          var v3072 = k$$81[c$$566].target == l$$87[e$$360].id;
          if (v3072) {
            var v9705 = i$$226.children;
            JAM.call(v9705.push, v9705, [JAM.call(p$$54, null, [l$$87[e$$360], k$$81[c$$566].length, i$$226], JAM.policy.p3)], JAM.policy.p3);
          }
          e$$360 = e$$360 + 1;
          v3073 = e$$360 < l$$87.length;
        }
      }
      c$$566 = c$$566 + 1;
      v3075 = c$$566 < k$$81.length;
    }
    var v15472 = i$$226;
    if (v15472) {
      v15472 = i$$226.level > 0;
    }
    var v9709 = v15472;
    if (v9709) {
      v9709 = !i$$226.len;
    }
    if (v9709) {
      i$$226.len = 1;
    }
    var v9710 = d$$415;
    if (v9710) {
      var v19798 = i$$226;
      var v24388 = Smits.Common;
      var v31161 = JAM.call(v24388.roundFloat, v24388, [d$$415, 4], JAM.policy.p3);
      v19798.len = v31161;
      v9710 = i$$226.len == 0;
    }
    if (v9710) {
      i$$226.len = 1E-4;
    }
    var v9711 = a$$715.label;
    if (v9711) {
      i$$226.type = "label";
      i$$226.name = a$$715.label;
      v9711 = a$$715.style;
    }
    if (v9711) {
      i$$226.style = a$$715.style;
    }
    return i$$226;
  }
  var a$$714 = 0;
  var c$$565 = 0;
  var b$$693;
  var f$$195;
  var k$$81;
  var l$$87;
  return v1925;
}
function v1920() {
  function v1919(g$$204) {
    function v1918() {
      return f$$193;
    }
    function v1917() {
      return c$$562;
    }
    function v1916() {
      return a$$711;
    }
    function v1915() {
      return b$$691;
    }
    this.getRoot = v1915;
    this.getLevels = v1916;
    this.getNewickLen = v1917;
    this.getValidate = v1918;
    var v15474 = g$$204.phylogeny;
    if (v15474) {
      v15474 = g$$204.phylogeny[0];
    }
    var v9712 = v15474;
    if (v9712) {
      v9712 = g$$204.phylogeny[0].clade;
    }
    var v3079 = v9712;
    if (v3079) {
      b$$691 = JAM.call(k$$80, null, [g$$204.phylogeny[0].clade[0]], JAM.policy.p3);
    }
    var v19803 = g$$204.phylogeny;
    if (v19803) {
      v19803 = g$$204.phylogeny[0];
    }
    var v15477 = v19803;
    if (v15477) {
      v15477 = g$$204.phylogeny[0].render;
    }
    var v9714 = v15477;
    if (v9714) {
      v9714 = g$$204.phylogeny[0].render[0];
    }
    if (v9714) {
      var v9715 = g$$204 = g$$204.phylogeny[0].render[0];
      if (v9715) {
        v9715 = g$$204.styles;
      }
      if (v9715) {
        var m$$53 = g$$204.styles[0];
        var d$$414;
        for (d$$414 in m$$53) {
          var v9716 = d$$414 != "_children";
          if (v9716) {
            v9716 = d$$414 != "Text";
          }
          if (v9716) {
            var v15480 = m$$53[d$$414][0].type;
            if (v15480) {
              v15480 = m$$53[d$$414][0].type == "radialGradient";
            }
            var v9717 = v15480;
            if (v9717) {
              v9717 = Raphael.svg;
            }
            if (v9717) {
              m$$53[d$$414][0].name = d$$414;
              JAM.set(Smits.PhyloCanvas.Render.Style, d$$414, m$$53[d$$414][0], JAM.policy.p2);
              var v15481 = Smits.PhyloCanvas.Render.Style.jsphylosvgGradientList;
              if (!v15481) {
                Smits.PhyloCanvas.Render.Style.jsphylosvgGradientList = [];
              }
              var v9718 = Smits.PhyloCanvas.Render.Style.jsphylosvgGradientList;
              JAM.call(v9718.push, v9718, [d$$414], JAM.policy.p3);
            } else {
              var j$$113;
              var v15483 = Smits.PhyloCanvas.Render.Style[d$$414];
              if (!v15483) {
                JAM.set(Smits.PhyloCanvas.Render.Style, d$$414, {}, JAM.policy.p2);
              }
              for (j$$113 in m$$53[d$$414][0]) {
                var v15485 = j$$113 != "_attributes";
                if (v15485) {
                  v15485 = j$$113 != "_children";
                }
                var v9719 = v15485;
                if (v9719) {
                  v9719 = j$$113 != "type";
                }
                var v3081 = v9719;
                if (v3081) {
                  JAM.set(Smits.PhyloCanvas.Render.Style[d$$414], JAM.call(j$$113.replace, j$$113, ["_", "-"], JAM.policy.p3), m$$53[d$$414][0][j$$113], JAM.policy.p2);
                }
              }
            }
          }
        }
      }
      var v9722 = g$$204;
      if (v9722) {
        v9722 = g$$204.parameters;
      }
      var v3086 = v9722;
      if (v3086) {
        JAM.call(p$$53, null, [g$$204.parameters[0]], JAM.policy.p3);
      }
      var v9724 = g$$204;
      if (v9724) {
        v9724 = g$$204.charts;
      }
      if (v9724) {
        g$$204 = g$$204.charts[0];
        for (d$$414 in g$$204) {
          var v9725 = d$$414 != "_children";
          if (v9725) {
            v9725 = d$$414 != "Text";
          }
          if (v9725) {
            for (j$$113 in g$$204[d$$414]) {
              if (g$$204[d$$414][j$$113].type == "binary") {
                g$$204[d$$414][j$$113].chart = d$$414;
                var v9728 = Smits.PhyloCanvas.Render.Parameters.binaryCharts;
                JAM.call(v9728.push, v9728, [g$$204[d$$414][j$$113]], JAM.policy.p3);
              } else {
                if (g$$204[d$$414][j$$113].type == "integratedBinary") {
                  g$$204[d$$414][j$$113].chart = d$$414;
                  var v9732 = Smits.PhyloCanvas.Render.Parameters.integratedBinaryCharts;
                  JAM.call(v9732.push, v9732, [g$$204[d$$414][j$$113]], JAM.policy.p3);
                } else {
                  if (g$$204[d$$414][j$$113].type == "bar") {
                    g$$204[d$$414][j$$113].chart = d$$414;
                    var v9736 = Smits.PhyloCanvas.Render.Parameters.barCharts;
                    JAM.call(v9736.push, v9736, [g$$204[d$$414][j$$113]], JAM.policy.p3);
                  }
                }
              }
            }
          }
        }
      }
    }
    b$$691 = JAM.call(l$$86, null, [b$$691], JAM.policy.p3);
    return;
  }
  function p$$53(a$$713, c$$564) {
    var d$$413;
    for (d$$413 in a$$713) {
      var v9738 = d$$413 != "_children";
      if (v9738) {
        v9738 = d$$413 != "Text";
      }
      var v3095 = v9738;
      if (v3095) {
        var v9739;
        var v19826 = d$$413 == "rectangular";
        if (!v19826) {
          v19826 = d$$413 == "circular";
        }
        if (v19826) {
          v9739 = JAM.call(p$$53, null, [a$$713[d$$413][0], d$$413], JAM.policy.p3);
        } else {
          var v19828 = Smits.PhyloCanvas.Render.Parameters[d$$413];
          if (!v19828) {
            JAM.set(Smits.PhyloCanvas.Render.Parameters, d$$413, {}, JAM.policy.p2);
          }
          var v19829 = Smits.PhyloCanvas.Render.Parameters;
          v9739 = JAM.call(v19829.set, v19829, [d$$413, a$$713[d$$413][0].Text, c$$564], JAM.policy.p3);
        }
        v9739;
      }
    }
    return;
  }
  function l$$86(b$$692) {
    var v9740 = b$$692.children;
    if (v9740) {
      v9740 = b$$692.children.length;
    }
    if (v9740) {
      var f$$194 = 0;
      var v3101 = f$$194 < b$$692.children.length;
      for (;v3101;) {
        var d$$412 = b$$692.children[f$$194];
        d$$412.newickLen = JAM.call(Math.round, Math, [(d$$412.len + b$$692.newickLen) * 1E4], JAM.policy.p3) / 1E4;
        if (d$$412.level > a$$711) {
          a$$711 = d$$412.level;
        }
        if (d$$412.newickLen > c$$562) {
          c$$562 = d$$412.newickLen;
        }
        var v3100 = d$$412.children.length > 0;
        if (v3100) {
          JAM.call(l$$86, null, [d$$412, b$$692], JAM.policy.p3);
        }
        f$$194 = f$$194 + 1;
        v3101 = f$$194 < b$$692.children.length;
      }
    }
    return b$$692;
  }
  function k$$80(a$$712, c$$563) {
    var d$$411 = JAM.new(Smits.PhyloCanvas.Node, [], JAM.policy.p3);
    if (c$$563) {
      d$$411.level = c$$563.level + 1;
    }
    var v9748 = a$$712.clade;
    if (v9748) {
      v9748 = a$$712.clade.length;
    }
    if (v9748) {
      var j$$112 = 0;
      var v3107 = j$$112 < a$$712.clade.length;
      for (;v3107;) {
        var v3105 = d$$411.children;
        JAM.call(v3105.push, v3105, [JAM.call(k$$80, null, [a$$712.clade[j$$112], d$$411], JAM.policy.p3)], JAM.policy.p3);
        j$$112 = j$$112 + 1;
        v3107 = j$$112 < a$$712.clade.length;
      }
    }
    if (a$$712.branch_length) {
      if (typeof a$$712.branch_length === "object") {
        a$$712.branch_length = a$$712.branch_length[0].Text;
      }
      var v3111 = d$$411;
      var v9754 = Smits.Common;
      var v31162 = JAM.call(v9754.roundFloat, v9754, [a$$712.branch_length, 4], JAM.policy.p3);
      v3111.len = v31162;
      if (d$$411.len == 0) {
        d$$411.len = 1E-4;
      }
    }
    if (a$$712.name) {
      d$$411.type = "label";
      d$$411.name = a$$712.name[0].Text;
      var v9758 = a$$712.name[0];
      if (v9758) {
        v9758 = a$$712.name[0].style;
      }
      if (v9758) {
        d$$411.style = a$$712.name[0].style;
      }
      var v9760 = a$$712.name[0];
      if (v9760) {
        v9760 = a$$712.name[0].bgStyle;
      }
      if (v9760) {
        d$$411.bgStyle = a$$712.name[0].bgStyle;
      }
    } else {
      if (a$$712.confidence) {
        d$$411.name = a$$712.confidence[0].Text;
      }
    }
    var v24416 = a$$712.sequence;
    if (v24416) {
      v24416 = a$$712.sequence[0];
    }
    var v19834 = v24416;
    if (v19834) {
      v19834 = a$$712.sequence[0].name;
    }
    var v15518 = v19834;
    if (v15518) {
      v15518 = a$$712.sequence[0].name[0];
    }
    var v9763 = v15518;
    if (v9763) {
      v9763 = a$$712.sequence[0].name[0].Text;
    }
    if (v9763) {
      d$$411.sequenceName = a$$712.sequence[0].name[0].Text;
    }
    var v9765 = a$$712.taxonomy;
    if (v9765) {
      v9765 = a$$712.taxonomy[0];
    }
    if (v9765) {
      var v15522 = a$$712.taxonomy[0].scientific_name;
      if (v15522) {
        v15522 = a$$712.taxonomy[0].scientific_name[0];
      }
      var v9766 = v15522;
      if (v9766) {
        v9766 = a$$712.taxonomy[0].scientific_name[0].Text;
      }
      if (v9766) {
        d$$411.taxonomyScientificName = a$$712.taxonomy[0].scientific_name[0].Text;
      }
      var v15525 = a$$712.taxonomy[0].common_name;
      if (v15525) {
        v15525 = a$$712.taxonomy[0].common_name[0];
      }
      var v9768 = v15525;
      if (v9768) {
        v9768 = a$$712.taxonomy[0].common_name[0].Text;
      }
      if (v9768) {
        d$$411.taxonomyCommonName = a$$712.taxonomy[0].common_name[0].Text;
      }
    }
    var v24426 = a$$712.sequence;
    if (v24426) {
      v24426 = a$$712.sequence[0];
    }
    var v19846 = v24426;
    if (v19846) {
      v19846 = a$$712.sequence[0].accession;
    }
    var v15528 = v19846;
    if (v15528) {
      v15528 = a$$712.sequence[0].accession[0];
    }
    var v9770 = v15528;
    if (v9770) {
      v9770 = a$$712.sequence[0].accession[0].Text;
    }
    if (v9770) {
      d$$411.sequenceAccession = a$$712.sequence[0].accession[0].Text;
    }
    if (a$$712.point) {
      d$$411.LatLong = [a$$712.point[0].lat[0].Text, a$$712.point[0]["long"][0].Text];
    }
    if (!d$$411.name) {
      if (d$$411.sequenceName) {
        d$$411.name = d$$411.sequenceName;
      } else {
        if (d$$411.taxonomyScientificName) {
          d$$411.name = d$$411.taxonomyScientificName;
        } else {
          if (d$$411.taxonomyCommonName) {
            d$$411.name = d$$411.taxonomyCommonName;
          } else {
            if (d$$411.sequenceAccession) {
              d$$411.name = d$$411.sequenceAccession;
            }
          }
        }
      }
      if (d$$411.name) {
        d$$411.type = "label";
      }
    }
    if (a$$712.annotation) {
      var v19852 = a$$712.annotation[0];
      if (v19852) {
        v19852 = a$$712.annotation[0].desc;
      }
      var v15533 = v19852;
      if (v15533) {
        v15533 = a$$712.annotation[0].desc[0];
      }
      var v9775 = v15533;
      if (v9775) {
        v9775 = a$$712.annotation[0].desc[0].Text;
      }
      if (v9775) {
        d$$411.description = a$$712.annotation[0].desc[0].Text;
      }
      var v19856 = a$$712.annotation[0];
      if (v19856) {
        v19856 = a$$712.annotation[0].uri;
      }
      var v15536 = v19856;
      if (v15536) {
        v15536 = a$$712.annotation[0].uri[0];
      }
      var v9777 = v15536;
      if (v9777) {
        v9777 = a$$712.annotation[0].uri[0].Text;
      }
      if (v9777) {
        d$$411.uri = a$$712.annotation[0].uri[0].Text;
      }
      var v9779 = a$$712.annotation[0];
      if (v9779) {
        v9779 = a$$712.annotation[0].img;
      }
      if (v9779) {
        for (j$$112 in a$$712.annotation[0].img) {
          var v9781 = Smits.Common;
          if (JAM.call(v9781.isInteger, v9781, [j$$112], JAM.policy.p3)) {
            JAM.set(d$$411.img, j$$112, a$$712.annotation[0].img[j$$112].Text, JAM.policy.p2);
          }
        }
      }
    }
    var v9783 = a$$712.chart;
    if (v9783) {
      v9783 = a$$712.chart[0];
    }
    if (v9783) {
      for (j$$112 in a$$712.chart[0]) {
        var v9785 = j$$112 != "Text";
        if (v9785) {
          v9785 = j$$112 != "_children";
        }
        if (v9785) {
          JAM.set(d$$411.chart, j$$112, a$$712.chart[0][j$$112][0].Text, JAM.policy.p2);
        }
      }
    }
    var v9787 = d$$411;
    if (v9787) {
      v9787 = d$$411.level > 1;
    }
    var v3153 = v9787;
    if (v3153) {
      var v9788 = d$$411.len;
      if (!v9788) {
        f$$193 = "Error. Please include Branch Lengths - we only draw rooted phylogenetic trees.";
      }
    }
    return d$$411;
  }
  var a$$711 = 0;
  var c$$562 = 0;
  var b$$691;
  var f$$193;
  return v1919;
}
function v1914() {
  function v1913(c$$561) {
    function v1912() {
      return;
    }
    function v1911() {
      return k$$79;
    }
    function v1910() {
      return f$$192;
    }
    function v1909() {
      return l$$85;
    }
    this.getRoot = v1909;
    this.getLevels = v1910;
    this.getNewickLen = v1911;
    this.getValidate = v1912;
    k$$79 = f$$192 = 0;
    a$$706 = c$$561;
    b$$689 = 0;
    JAM.call(d$$409, null, [], JAM.policy.p3);
    l$$85 = JAM.call(g$$202, null, [], JAM.policy.p3);
    l$$85 = JAM.call(j$$110, null, [l$$85], JAM.policy.p3);
    return;
  }
  function j$$110(d$$410) {
    var v9789 = d$$410.children;
    if (v9789) {
      v9789 = d$$410.children.length;
    }
    if (v9789) {
      var c$$560 = 0;
      var v3160 = c$$560 < d$$410.children.length;
      for (;v3160;) {
        var a$$710 = d$$410.children[c$$560];
        if (a$$710.len === 0) {
          a$$710.len = 1;
        }
        var v3156 = a$$710;
        var v9792 = Smits.Common;
        var v31163 = JAM.call(v9792.roundFloat, v9792, [a$$710.len + d$$410.newickLen, 4], JAM.policy.p3);
        v3156.newickLen = v31163;
        if (a$$710.level > f$$192) {
          f$$192 = a$$710.level;
        }
        if (a$$710.newickLen > k$$79) {
          k$$79 = a$$710.newickLen;
        }
        var v3159 = a$$710.children.length > 0;
        if (v3159) {
          JAM.call(j$$110, null, [a$$710, d$$410], JAM.policy.p3);
        }
        c$$560 = c$$560 + 1;
        v3160 = c$$560 < d$$410.children.length;
      }
    }
    return d$$410;
  }
  function d$$409() {
    c$$559 = JAM.call(a$$706.charAt, a$$706, [b$$689], JAM.policy.p3);
    b$$689 = b$$689 + 1;
    return c$$559;
  }
  function m$$52() {
    var a$$709 = "";
    var v19863 = c$$559 !== ":";
    if (v19863) {
      v19863 = c$$559 !== ")";
    }
    var v15553 = v19863;
    if (v15553) {
      v15553 = c$$559 !== ",";
    }
    var v9798 = v15553;
    if (v9798) {
      v9798 = c$$559 !== ";";
    }
    var v3162 = v9798;
    for (;v3162;) {
      a$$709 = a$$709 + c$$559;
      JAM.call(d$$409, null, [], JAM.policy.p3);
      var v19864 = c$$559 !== ":";
      if (v19864) {
        v19864 = c$$559 !== ")";
      }
      var v15554 = v19864;
      if (v15554) {
        v15554 = c$$559 !== ",";
      }
      var v9799 = v15554;
      if (v9799) {
        v9799 = c$$559 !== ";";
      }
      v3162 = v9799;
    }
    return a$$709;
  }
  function g$$202(a$$708) {
    var e$$359 = JAM.new(Smits.PhyloCanvas.Node, [], JAM.policy.p3);
    if (a$$708) {
      e$$359.level = a$$708.level + 1;
    }
    var v3165 = c$$559 !== ")";
    for (;v3165;) {
      JAM.call(d$$409, null, [], JAM.policy.p3);
      var v9801;
      if (c$$559 === "(") {
        var v15555 = e$$359.children;
        v9801 = JAM.call(v15555.push, v15555, [JAM.call(g$$202, null, [e$$359], JAM.policy.p3)], JAM.policy.p3);
      } else {
        var v15557 = e$$359.children;
        v9801 = JAM.call(v15557.push, v15557, [JAM.call(p$$52, null, [e$$359], JAM.policy.p3)], JAM.policy.p3);
      }
      v9801;
      v3165 = c$$559 !== ")";
    }
    JAM.call(d$$409, null, [], JAM.policy.p3);
    var v19865 = c$$559 !== ":";
    if (v19865) {
      v19865 = c$$559 !== ")";
    }
    var v15560 = v19865;
    if (v15560) {
      v15560 = c$$559 !== ",";
    }
    var v9802 = v15560;
    if (v9802) {
      v9802 = c$$559 !== ";";
    }
    if (v9802) {
      e$$359.type = "label";
      var v9803 = e$$359;
      var v31164 = JAM.call(m$$52, null, [], JAM.policy.p3);
      v9803.name = v31164;
    }
    if (c$$559 === ":") {
      JAM.call(d$$409, null, [], JAM.policy.p3);
      var v3167 = e$$359;
      var v9804 = Smits.Common;
      var v31165 = JAM.call(v9804.roundFloat, v9804, [JAM.call(m$$52, null, [], JAM.policy.p3), 4], JAM.policy.p3);
      v3167.len = v31165;
      if (e$$359.len == 0) {
        e$$359.len = 1E-4;
      }
      e$$359.type = "stem";
    }
    return e$$359;
  }
  function p$$52(a$$707) {
    var e$$358 = JAM.new(Smits.PhyloCanvas.Node, [], JAM.policy.p3);
    var v9808 = c$$559 !== ")";
    if (v9808) {
      v9808 = c$$559 !== ",";
    }
    var v3175 = v9808;
    for (;v3175;) {
      if (c$$559 === ":") {
        JAM.call(d$$409, null, [], JAM.policy.p3);
        var v19866 = e$$358;
        var v24442 = Smits.Common;
        var v31166 = JAM.call(v24442.roundFloat, v24442, [JAM.call(m$$52, null, [], JAM.policy.p3), 4], JAM.policy.p3);
        v19866.len = v31166;
        if (e$$358.len == 0) {
          e$$358.len = 1E-4;
        }
      } else {
        var v9809 = c$$559 === "'";
        if (!v9809) {
          v9809 = c$$559 === '"';
        }
        if (v9809) {
          e$$358.type = "label";
          var g$$203 = e$$358;
          var j$$111 = c$$559;
          var b$$690 = "";
          var v3172 = c$$559 !== j$$111;
          for (;v3172;) {
            b$$690 = b$$690 + c$$559;
            JAM.call(d$$409, null, [], JAM.policy.p3);
            v3172 = c$$559 !== j$$111;
          }
          g$$203.name = b$$690;
        } else {
          e$$358.type = "label";
          var v9810 = e$$358;
          var v31167 = JAM.call(m$$52, null, [], JAM.policy.p3);
          v9810.name = v31167;
        }
      }
      var v9811 = c$$559 !== ")";
      if (v9811) {
        v9811 = c$$559 !== ",";
      }
      v3175 = v9811;
    }
    e$$358.level = a$$707.level + 1;
    return e$$358;
  }
  var a$$706;
  var c$$559;
  var b$$689;
  var f$$192 = 0;
  var k$$79 = 0;
  var l$$85;
  return v1913;
}
function v1908(a$$705) {
  if (this._midBranchPosition !== !1) {
    return this._midBranchPosition;
  }
  var c$$558 = [0, 0];
  var b$$688 = 0;
  var v3180 = b$$688 < this.children.length;
  for (;v3180;) {
    var f$$191 = this.children[b$$688];
    var v3179;
    var v15564 = f$$191.children;
    if (v15564) {
      v15564 = f$$191.children.length > 0;
    }
    if (v15564) {
      var v9815;
      var v19868 = b$$688 == 0;
      if (v19868) {
        v19868 = a$$705;
      }
      if (v19868) {
        var v19869 = c$$558;
        var v31168 = JAM.call(f$$191.getMidbranchPosition, f$$191, [!0], JAM.policy.p3);
        introspect(JAM.policy.p2) {
          v19869[0] = v31168;
        }
        var v19870 = c$$558;
        var v26510 = v19870[1];
        var v26511 = JAM.call(f$$191.getCountAllChildren, f$$191, [], JAM.policy.p3) - 1;
        introspect(JAM.policy.p2) {
          v9815 = v19870[1] = v26510 + v26511;
        }
      } else {
        var v15565;
        if (b$$688 == 0) {
          var v24446 = c$$558;
          var v31169 = JAM.call(f$$191.getMidbranchPosition, f$$191, [], JAM.policy.p3);
          introspect(JAM.policy.p2) {
            v24446[0] = v31169;
          }
          var v24447 = c$$558;
          var v27973 = v24447[1];
          var v27974 = JAM.call(f$$191.getCountAllChildren, f$$191, [], JAM.policy.p3);
          introspect(JAM.policy.p2) {
            v15565 = v24447[1] = v27973 + v27974;
          }
        } else {
          var v19871 = c$$558;
          var v26512 = v19871[1];
          var v27975;
          if (b$$688 == this.children.length - 1) {
            v27975 = JAM.call(f$$191.getMidbranchPosition, f$$191, [], JAM.policy.p3);
          } else {
            v27975 = JAM.call(f$$191.getCountAllChildren, f$$191, [], JAM.policy.p3);
          }
          var v26513 = v27975;
          introspect(JAM.policy.p2) {
            v15565 = v19871[1] = v26512 + v26513;
          }
        }
        v9815 = v15565;
      }
      v3179 = v9815;
    } else {
      var v9816;
      var v19873 = b$$688 == 0;
      if (v19873) {
        v19873 = a$$705;
      }
      if (v19873) {
        introspect(JAM.policy.p2) {
          v9816 = c$$558[0] = 0;
        }
      } else {
        var v19874 = b$$688 == 0;
        if (v19874) {
          introspect(JAM.policy.p2) {
            c$$558[0] = 1;
          }
        }
        var v24448 = c$$558[1];
        introspect(JAM.policy.p2) {
          v9816 = c$$558[1] = v24448 + 1;
        }
      }
      v3179 = v9816;
    }
    v3179;
    b$$688 = b$$688 + 1;
    v3180 = b$$688 < this.children.length;
  }
  var v3181;
  if (c$$558[1] >= c$$558[0]) {
    v3181 = (c$$558[1] + c$$558[0]) / 2;
  } else {
    v3181 = c$$558[0];
  }
  return this._midBranchPosition = v3181;
}
function v1907() {
  if (this._countImmediateChildren !== !1) {
    return this._countImmediateChildren;
  }
  var a$$704 = 0;
  var c$$557;
  for (c$$557 in this.children) {
    a$$704 = a$$704 + this.children[c$$557].length;
  }
  return this._countImmediateChildren = a$$704;
}
function v1906() {
  if (this._countAllChildren !== !1) {
    return this._countAllChildren;
  }
  var a$$703 = 0;
  var c$$556;
  for (c$$556 in this.children) {
    var v9826 = Smits.Common;
    if (JAM.call(v9826.isInteger, v9826, [c$$556], JAM.policy.p3)) {
      var b$$687 = this.children[c$$556];
      var v3186;
      var v15574 = b$$687.children;
      if (v15574) {
        v15574 = b$$687.children.length > 0;
      }
      if (v15574) {
        v3186 = a$$703 = a$$703 + JAM.call(b$$687.getCountAllChildren, b$$687, [], JAM.policy.p3);
      } else {
        v3186 = a$$703;
        a$$703 = a$$703 + 1;
      }
      v3186;
    }
  }
  return this._countAllChildren = a$$703;
}
function v1905() {
  function v1904(a$$702, c$$555) {
    var v3189 = Smits.Common;
    this.id = v3189.nodeIdIncrement = v3189.nodeIdIncrement + 1;
    this.newickLen = this.len = this.level = 0;
    this.type = this.name = "";
    this.chart = {};
    this.img = [];
    if (a$$702) {
      var v9828 = Smits.Common;
      JAM.call(v9828.apply, v9828, [this, a$$702], JAM.policy.p3);
    }
    this._midBranchPosition = this._countImmediateChildren = this._countAllChildren = !1;
    this.children = [];
    if (c$$555) {
      var v9829 = c$$555.children;
      JAM.call(v9829.push, v9829, [this], JAM.policy.p3);
    }
    return;
  }
  return v1904;
}
function v1903() {
  function v1902(k$$78, l$$84, p$$51, g$$201, m$$51) {
    function v1901() {
      var v3190;
      var v15578 = Raphael.svg;
      if (v15578) {
        var v19877 = Smits.Common;
        v15578 = JAM.call(v19877.isXMLSerializerAvailable, v19877, [], JAM.policy.p3);
      }
      if (v15578) {
        var v9830 = JAM.new(XMLSerializer, [], JAM.policy.p3);
        v3190 = JAM.call(v9830.serializeToString, v9830, [b$$686.svg.canvas], JAM.policy.p3);
      } else {
        v3190 = !1;
      }
      return v3190;
    }
    function v1900() {
      return a$$701;
    }
    function v1899() {
      return b$$686;
    }
    function v1898(d$$408) {
      var v3191 = b$$686.svg;
      JAM.call(v3191.scale, v3191, [d$$408], JAM.policy.p3);
      return;
    }
    function v1897() {
      return;
    }
    function v1896() {
      return;
    }
    this.getNewickObject = v1896;
    this.clear = v1897;
    this.scale = v1898;
    this.getSvg = v1899;
    this.getPhylogram = v1900;
    this.getSvgSource = v1901;
    if (typeof k$$78 === "object") {
      if (k$$78.xml) {
        var v3192;
        if (k$$78.fileSource) {
          v3192 = k$$78.xml;
        } else {
          v3192 = JAM.call(XMLObjectifier.textToXML, XMLObjectifier, [k$$78.xml], JAM.policy.p3);
        }
        var d$$407 = v3192;
        d$$407 = JAM.call(XMLObjectifier.xmlToJSON, XMLObjectifier, [d$$407], JAM.policy.p3);
        f$$190 = JAM.new(Smits.PhyloCanvas.PhyloxmlParse, [d$$407], JAM.policy.p3);
      } else {
        var v3194;
        if (k$$78.phyloxml) {
          var v19878;
          if (k$$78.fileSource) {
            v19878 = k$$78.phyloxml;
          } else {
            v19878 = JAM.call(XMLObjectifier.textToXML, XMLObjectifier, [k$$78.phyloxml], JAM.policy.p3);
          }
          d$$407 = v19878;
          d$$407 = JAM.call(XMLObjectifier.xmlToJSON, XMLObjectifier, [d$$407], JAM.policy.p3);
          v3194 = f$$190 = JAM.new(Smits.PhyloCanvas.PhyloxmlParse, [d$$407], JAM.policy.p3);
        } else {
          var v9837;
          if (k$$78.nexml) {
            var v24452;
            if (k$$78.fileSource) {
              v24452 = k$$78.nexml;
            } else {
              v24452 = JAM.call(XMLObjectifier.textToXML, XMLObjectifier, [k$$78.nexml], JAM.policy.p3);
            }
            d$$407 = v24452;
            d$$407 = JAM.call(XMLObjectifier.xmlToJSON, XMLObjectifier, [d$$407], JAM.policy.p3);
            v9837 = f$$190 = JAM.new(Smits.PhyloCanvas.NexmlParse, [d$$407, k$$78], JAM.policy.p3);
          } else {
            var v15581;
            if (k$$78.json) {
              v15581 = f$$190 = JAM.new(Smits.PhyloCanvas.PhyloxmlParse, [k$$78.json], JAM.policy.p3);
            } else {
              var v19883;
              if (k$$78.newick) {
                v19883 = f$$190 = JAM.new(Smits.PhyloCanvas.NewickParse, [k$$78.newick], JAM.policy.p3);
              } else {
                var v24457;
                if (k$$78.nexmlJson) {
                  v24457 = f$$190 = JAM.new(Smits.PhyloCanvas.NexmlJsonParse, [k$$78], JAM.policy.p3);
                } else {
                  v24457 = JAM.call(alert, null, ["Please set the format of input data"], JAM.policy.p3);
                }
                v19883 = v24457;
              }
              v15581 = v19883;
            }
            v9837 = v15581;
          }
          v3194 = v9837;
        }
        v3194;
      }
    } else {
      f$$190 = JAM.new(Smits.PhyloCanvas.NewickParse, [k$$78], JAM.policy.p3);
    }
    c$$554 = l$$84;
    b$$686 = JAM.new(Smits.PhyloCanvas.Render.SVG, [c$$554, p$$51, g$$201], JAM.policy.p3);
    var v3199;
    if (m$$51 == "circular") {
      v3199 = JAM.new(Smits.PhyloCanvas.Render.CircularPhylogram, [b$$686, f$$190], JAM.policy.p3);
    } else {
      v3199 = JAM.new(Smits.PhyloCanvas.Render.Phylogram, [b$$686, f$$190], JAM.policy.p3);
    }
    a$$701 = v3199;
    return;
  }
  var a$$701;
  var c$$554;
  var b$$686;
  var f$$190;
  return v1902;
}
function v1895(a$$700, c$$553) {
  var b$$685 = document.styleSheets[0];
  var v3201;
  if (b$$685.addRule) {
    v3201 = JAM.call(b$$685.addRule, b$$685, [a$$700, c$$553], JAM.policy.p3);
  } else {
    var v9844 = b$$685.insertRule;
    if (v9844) {
      v9844 = JAM.call(b$$685.insertRule, b$$685, [a$$700 + " { " + c$$553 + " }", b$$685.cssRules.length], JAM.policy.p3);
    }
    v3201 = v9844;
  }
  v3201;
  return;
}
function v1894(a$$699, c$$552, b$$684) {
  if (c$$552.type != "radialGradient") {
    return!1;
  }
  var v3203 = Smits.Common;
  a$$699 = JAM.call(v3203.createSvgEl, v3203, ["radialGradient", {id:a$$699, gradientUnits:"userSpaceOnUse", cx:b$$684[0], cy:b$$684[1], r:b$$684[2], fx:b$$684[0], fy:b$$684[1]}], JAM.policy.p3);
  if (c$$552.stop) {
    c$$552 = c$$552.stop;
    b$$684 = 0;
    var v3206 = b$$684 < c$$552.length;
    for (;v3206;) {
      var f$$189 = c$$552[b$$684];
      var v3205;
      if (f$$189["@attributes"]) {
        var v15588 = Smits.Common;
        v3205 = JAM.call(a$$699.appendChild, a$$699, [JAM.call(v15588.createSvgEl, v15588, ["stop", f$$189["@attributes"]], JAM.policy.p3)], JAM.policy.p3);
      } else {
        var v24460 = f$$189._attributes;
        if (v24460) {
          delete f$$189._attributes;
        }
        var v24461 = f$$189._children;
        if (v24461) {
          delete f$$189._children;
        }
        var v19889 = f$$189.__proto__;
        if (v19889) {
          delete f$$189.__proto__;
        }
        var v19890 = Smits.Common;
        v3205 = JAM.call(a$$699.appendChild, a$$699, [JAM.call(v19890.createSvgEl, v19890, ["stop", f$$189], JAM.policy.p3)], JAM.policy.p3);
      }
      v3205;
      b$$684 = b$$684 + 1;
      v3206 = b$$684 < c$$552.length;
    }
  }
  return a$$699;
}
function v1893(a$$698, c$$551) {
  a$$698 = JAM.call(document.createElementNS, document, ["http://www.w3.org/2000/svg", a$$698], JAM.policy.p3);
  if (c$$551) {
    var b$$683;
    for (b$$683 in c$$551) {
      var v3208 = JAM.call(c$$551.hasOwnProperty, c$$551, [b$$683], JAM.policy.p3);
      if (v3208) {
        JAM.call(a$$698.setAttribute, a$$698, [b$$683, JAM.call(String, null, [c$$551[b$$683]], JAM.policy.p3)], JAM.policy.p3);
      }
    }
  }
  return a$$698;
}
function v1892() {
  var v3209;
  if (typeof XMLSerializer == "function") {
    v3209 = !0;
  } else {
    v3209 = !1;
  }
  return v3209;
}
function v1891(a$$697) {
  return!JAM.call(isNaN, null, [JAM.call(parseInt, null, [a$$697], JAM.policy.p3)], JAM.policy.p3);
}
function v1890(a$$695, c$$549, b$$682, f$$188) {
  function v1889(c$$550, a$$696) {
    function v1888(g$$200) {
      a$$696.e = g$$200;
      JAM.call(c$$550, null, [a$$696], JAM.policy.p3);
      return;
    }
    return v1888;
  }
  try {
    JAM.call(a$$695[c$$549], a$$695, [JAM.call(v1889, null, [b$$682, f$$188], JAM.policy.p3)], JAM.policy.p3);
  } catch (k$$77) {
  }
  return;
}
function v1887(a$$694, c$$548) {
  var v9859 = a$$694;
  if (v9859) {
    v9859 = typeof c$$548 == "object";
  }
  if (v9859) {
    var b$$681;
    for (b$$681 in c$$548) {
      JAM.set(a$$694, b$$681, c$$548[b$$681], JAM.policy.p2);
    }
  }
  return a$$694;
}
function v1886(a$$693, c$$547) {
  var b$$680 = 0;
  var f$$187 = 1;
  var v3213 = b$$680 < c$$547;
  for (;v3213;) {
    f$$187 = f$$187 * 10;
    b$$680 = b$$680 + 1;
    v3213 = b$$680 < c$$547;
  }
  return JAM.call(Math.round, Math, [a$$693 * f$$187], JAM.policy.p3) / f$$187;
}
function v1885(e$$347, t$$15, i$$210) {
  function v1884() {
    return JAM.call(e$$347, null, [N$$2], JAM.policy.p3);
  }
  function v1883() {
    if (g$$199) {
      JAM.call(g$$199.stop, g$$199, [], JAM.policy.p3);
      var v29550 = e$$347.colorbox;
      JAM.call(v29550.close, v29550, [], JAM.policy.p3);
      var v28919 = JAM.call(g$$199.stop, g$$199, [], JAM.policy.p3);
      JAM.call(v28919.remove, v28919, [], JAM.policy.p3);
      JAM.call(w$$18.remove, w$$18, [], JAM.policy.p3);
      q$$21 = !1;
      g$$199 = null;
      var v24462 = JAM.call(e$$347, null, ["." + et$$1], JAM.policy.p3);
      var v19891 = JAM.call(v24462.removeData, v24462, [Y$$2], JAM.policy.p3);
      JAM.call(v19891.removeClass, v19891, [et$$1], JAM.policy.p3);
      var v15594 = JAM.call(e$$347, null, [t$$15], JAM.policy.p3);
      JAM.call(v15594.unbind, v15594, ["click." + Z$$2], JAM.policy.p3);
    }
    return;
  }
  function v1882() {
    function v1881() {
      function v1880() {
        q$$21 = !1;
        JAM.call(c$$545, null, [rt$$3, B$$3.onClosed], JAM.policy.p3);
        return;
      }
      var v24463 = JAM.call(g$$199.add, g$$199, [w$$18], JAM.policy.p3);
      var v19892 = JAM.call(v24463.css, v24463, [{opacity:1, cursor:"auto"}], JAM.policy.p3);
      JAM.call(v19892.hide, v19892, [], JAM.policy.p3);
      JAM.call(c$$545, null, [ht], JAM.policy.p3);
      var v15596 = JAM.call(H$$3.empty, H$$3, [], JAM.policy.p3);
      JAM.call(v15596.remove, v15596, [], JAM.policy.p3);
      JAM.call(setTimeout, null, [v1880, 1], JAM.policy.p3);
      return;
    }
    var v9862 = U$$2;
    if (v9862) {
      v9862 = !q$$21;
    }
    var v3215 = v9862;
    if (v3215) {
      q$$21 = !0;
      U$$2 = !1;
      JAM.call(c$$545, null, [nt, B$$3.onCleanup], JAM.policy.p3);
      JAM.call(E$$3.unbind, E$$3, ["." + Z$$2], JAM.policy.p3);
      var v24466 = B$$3.fadeOut;
      if (!v24466) {
        v24466 = 0;
      }
      JAM.call(w$$18.fadeTo, w$$18, [v24466, 0], JAM.policy.p3);
      var v15597 = JAM.call(g$$199.stop, g$$199, [], JAM.policy.p3);
      var v19894 = B$$3.fadeOut;
      if (!v19894) {
        v19894 = 0;
      }
      JAM.call(v15597.fadeTo, v15597, [v19894, 0, v1881], JAM.policy.p3);
    }
    return;
  }
  function v1879() {
    var v15599 = !$$$4;
    if (v15599) {
      v15599 = k$$76[1];
    }
    var v9863 = v15599;
    if (v9863) {
      var v15600 = B$$3.loop;
      if (!v15600) {
        v15600 = z$$7;
      }
      v9863 = v15600;
    }
    var v3216 = v9863;
    if (v3216) {
      z$$7 = JAM.call(r$$22, null, [-1], JAM.policy.p3);
      JAM.call(u$$13, null, [k$$76[z$$7]], JAM.policy.p3);
    }
    return;
  }
  function v1878() {
    var v15602 = !$$$4;
    if (v15602) {
      v15602 = k$$76[1];
    }
    var v9864 = v15602;
    if (v9864) {
      var v15603 = B$$3.loop;
      if (!v15603) {
        v15603 = k$$76[z$$7 + 1];
      }
      v9864 = v15603;
    }
    var v3217 = v9864;
    if (v3217) {
      z$$7 = JAM.call(r$$22, null, [1], JAM.policy.p3);
      JAM.call(u$$13, null, [k$$76[z$$7]], JAM.policy.p3);
    }
    return;
  }
  function v1877(i$$223) {
    function v1876() {
      JAM.call(Q$$2.position, Q$$2, [0, a$$691], JAM.policy.p3);
      return;
    }
    function v1875() {
      function v1874() {
        n$$101.src = "//about:blank";
        return;
      }
      function v1873() {
        var i$$225;
        var o$$33;
        var n$$102 = k$$76[this];
        var r$$27 = JAM.call(e$$347.data, e$$347, [n$$102, Y$$2], JAM.policy.p3);
        var v9865;
        var v19898 = r$$27;
        if (v19898) {
          v19898 = r$$27.href;
        }
        if (v19898) {
          i$$225 = r$$27.href;
          var v19899 = JAM.call(e$$347.isFunction, e$$347, [i$$225], JAM.policy.p3);
          if (v19899) {
            v19899 = i$$225 = JAM.call(i$$225.call, i$$225, [n$$102], JAM.policy.p3);
          }
          v9865 = v19899;
        } else {
          var v15605 = JAM.call(e$$347, null, [n$$102], JAM.policy.p3);
          v9865 = i$$225 = JAM.call(v15605.attr, v15605, ["href"], JAM.policy.p3);
        }
        v9865;
        var v15607 = i$$225;
        if (v15607) {
          var v19900 = r$$27.photo;
          if (!v19900) {
            var v24468 = r$$27.photoRegex;
            v19900 = JAM.call(v24468.test, v24468, [i$$225], JAM.policy.p3);
          }
          v15607 = v19900;
        }
        var v9866 = v15607;
        if (v9866) {
          i$$225 = JAM.call(s$$30, null, [r$$27, i$$225], JAM.policy.p3);
          o$$33 = JAM.call(t$$15.createElement, t$$15, ["img"], JAM.policy.p3);
          o$$33.src = i$$225;
        }
        return;
      }
      function v1872() {
        JAM.call(clearTimeout, null, [G$$3], JAM.policy.p3);
        JAM.call(F$$3.hide, F$$3, [], JAM.policy.p3);
        JAM.call(c$$545, null, [ot, B$$3.onComplete], JAM.policy.p3);
        return;
      }
      function i$$224() {
        var v3218 = e$$347.support.opacity === !1;
        if (v3218) {
          var v9870 = g$$199[0].style;
          JAM.call(v9870.removeAttribute, v9870, ["filter"], JAM.policy.p3);
        }
        return;
      }
      var n$$101;
      var h$$165;
      var a$$692 = k$$76.length;
      var u$$16 = "frameBorder";
      var f$$186 = "allowTransparency";
      if (U$$2) {
        h$$165 = v1872;
        var v27977 = JAM.call(L$$2.html, L$$2, [B$$3.title], JAM.policy.p3);
        var v26522 = JAM.call(v27977.add, v27977, [H$$3], JAM.policy.p3);
        JAM.call(v26522.show, v26522, [], JAM.policy.p3);
        var v24470;
        if (a$$692 > 1) {
          var v29946 = "string" == typeof B$$3.current;
          if (v29946) {
            var v30757 = B$$3.current;
            var v30612 = JAM.call(v30757.replace, v30757, ["{current}", z$$7 + 1], JAM.policy.p3);
            var v30202 = JAM.call(S$$2.html, S$$2, [JAM.call(v30612.replace, v30612, ["{total}", a$$692], JAM.policy.p3)], JAM.policy.p3);
            JAM.call(v30202.show, v30202, [], JAM.policy.p3);
          }
          var v30440;
          var v30759 = B$$3.loop;
          if (!v30759) {
            v30759 = a$$692 - 1 > z$$7;
          }
          if (v30759) {
            v30440 = "show";
          } else {
            v30440 = "hide";
          }
          var v29947 = JAM.call(R$$2[v30440], R$$2, [], JAM.policy.p3);
          JAM.call(v29947.html, v29947, [B$$3.next], JAM.policy.p3);
          var v30204;
          var v30614 = B$$3.loop;
          if (!v30614) {
            v30614 = z$$7;
          }
          if (v30614) {
            v30204 = "show";
          } else {
            v30204 = "hide";
          }
          var v29551 = JAM.call(I$$3[v30204], I$$3, [], JAM.policy.p3);
          JAM.call(v29551.html, v29551, [B$$3.previous], JAM.policy.p3);
          JAM.call(ct$$1, null, [], JAM.policy.p3);
          var v27978 = B$$3.preloading;
          if (v27978) {
            v27978 = JAM.call(e$$347.each, e$$347, [[JAM.call(r$$22, null, [-1], JAM.policy.p3), JAM.call(r$$22, null, [1], JAM.policy.p3)], v1873], JAM.policy.p3);
          }
          v24470 = v27978;
        } else {
          v24470 = JAM.call(P$$2.hide, P$$2, [], JAM.policy.p3);
        }
        v24470;
        var v19901;
        if (B$$3.iframe) {
          n$$101 = JAM.call(o$$26, null, ["iframe"], JAM.policy.p3)[0];
          var v30206 = u$$16 in n$$101;
          if (v30206) {
            JAM.set(n$$101, u$$16, 0, JAM.policy.p2);
          }
          var v29950 = f$$186 in n$$101;
          if (v29950) {
            JAM.set(n$$101, f$$186, "true", JAM.policy.p2);
          }
          var v29555 = B$$3.scrolling;
          if (!v29555) {
            n$$101.scrolling = "no";
          }
          var v29952 = JAM.call(e$$347, null, [n$$101], JAM.policy.p3);
          var v30207 = B$$3.href;
          var v30442 = JAM.new(Date, [], JAM.policy.p3);
          var v29556 = JAM.call(v29952.attr, v29952, [{src:v30207, name:JAM.call(v30442.getTime, v30442, [], JAM.policy.p3), "class":Z$$2 + "Iframe", allowFullScreen:!0, webkitAllowFullScreen:!0, mozallowfullscreen:!0}], JAM.policy.p3);
          var v28922 = JAM.call(v29556.one, v29556, ["load", h$$165], JAM.policy.p3);
          JAM.call(v28922.appendTo, v28922, [H$$3], JAM.policy.p3);
          JAM.call(lt.one, lt, [ht, v1874], JAM.policy.p3);
          var v26524 = B$$3.fastIframe;
          if (v26524) {
            var v27979 = JAM.call(e$$347, null, [n$$101], JAM.policy.p3);
            v26524 = JAM.call(v27979.trigger, v27979, ["load"], JAM.policy.p3);
          }
          v19901 = v26524;
        } else {
          v19901 = JAM.call(h$$165, null, [], JAM.policy.p3);
        }
        v19901;
        var v15610;
        if ("fade" === B$$3.transition) {
          v15610 = JAM.call(g$$199.fadeTo, g$$199, [d$$406, 1, i$$224], JAM.policy.p3);
        } else {
          v15610 = JAM.call(i$$224, null, [], JAM.policy.p3);
        }
        v15610;
      }
      return;
    }
    if (U$$2) {
      var a$$691;
      var v3219;
      if ("none" === B$$3.transition) {
        v3219 = 0;
      } else {
        v3219 = B$$3.speed;
      }
      var d$$406 = v3219;
      var v27980 = JAM.call(H$$3.empty, H$$3, [], JAM.policy.p3);
      JAM.call(v27980.remove, v27980, [], JAM.policy.p3);
      var v27981 = JAM.call(o$$26, null, [st$$2, "LoadedContent"], JAM.policy.p3);
      H$$3 = JAM.call(v27981.append, v27981, [i$$223], JAM.policy.p3);
      var v29557 = JAM.call(H$$3.hide, H$$3, [], JAM.policy.p3);
      var v28923 = JAM.call(v29557.appendTo, v29557, [JAM.call(W$$2.show, W$$2, [], JAM.policy.p3)], JAM.policy.p3);
      var v30443 = B$$3;
      var v30615 = B$$3.w;
      if (!v30615) {
        v30615 = JAM.call(H$$3.width, H$$3, [], JAM.policy.p3);
      }
      v30443.w = v30615;
      var v30444;
      var v30762 = B$$3.mw;
      if (v30762) {
        v30762 = B$$3.mw < B$$3.w;
      }
      if (v30762) {
        v30444 = B$$3.mw;
      } else {
        v30444 = B$$3.w;
      }
      B$$3.w = v30444;
      var v29559 = B$$3.w;
      var v29954;
      if (B$$3.scrolling) {
        v29954 = "auto";
      } else {
        v29954 = "hidden";
      }
      var v27982 = JAM.call(v28923.css, v28923, [{width:v29559, overflow:v29954}], JAM.policy.p3);
      var v30214 = B$$3;
      var v30445 = B$$3.h;
      if (!v30445) {
        v30445 = JAM.call(H$$3.height, H$$3, [], JAM.policy.p3);
      }
      v30214.h = v30445;
      var v30215;
      var v30618 = B$$3.mh;
      if (v30618) {
        v30618 = B$$3.mh < B$$3.h;
      }
      if (v30618) {
        v30215 = B$$3.mh;
      } else {
        v30215 = B$$3.h;
      }
      B$$3.h = v30215;
      var v26525 = JAM.call(v27982.css, v27982, [{height:B$$3.h}], JAM.policy.p3);
      JAM.call(v26525.prependTo, v26525, [y$$55], JAM.policy.p3);
      JAM.call(W$$2.hide, W$$2, [], JAM.policy.p3);
      var v19903 = JAM.call(e$$347, null, [j$$109], JAM.policy.p3);
      JAM.call(v19903.css, v19903, [{"float":"none"}], JAM.policy.p3);
      a$$691 = v1875;
      var v9872;
      if ("fade" === B$$3.transition) {
        v9872 = JAM.call(g$$199.fadeTo, g$$199, [d$$406, 0, v1876], JAM.policy.p3);
      } else {
        v9872 = JAM.call(Q$$2.position, Q$$2, [d$$406, a$$691], JAM.policy.p3);
      }
      v9872;
    }
    return;
  }
  function v1871(e$$357) {
    var t$$29;
    if (U$$2) {
      e$$357 = e$$357 || {};
      var v30216 = e$$357.width;
      if (v30216) {
        B$$3.w = JAM.call(h$$162, null, [e$$357.width, "x"], JAM.policy.p3) - A$$4 - _$$3;
      }
      var v29955 = e$$357.innerWidth;
      if (v29955) {
        var v30217 = B$$3;
        var v31170 = JAM.call(h$$162, null, [e$$357.innerWidth, "x"], JAM.policy.p3);
        v30217.w = v31170;
      }
      JAM.call(H$$3.css, H$$3, [{width:B$$3.w}], JAM.policy.p3);
      var v28926 = e$$357.height;
      if (v28926) {
        B$$3.h = JAM.call(h$$162, null, [e$$357.height, "y"], JAM.policy.p3) - D$$3 - O$$2;
      }
      var v27984 = e$$357.innerHeight;
      if (v27984) {
        var v28927 = B$$3;
        var v31171 = JAM.call(h$$162, null, [e$$357.innerHeight, "y"], JAM.policy.p3);
        v28927.h = v31171;
      }
      var v27985 = e$$357.innerHeight;
      if (!v27985) {
        v27985 = e$$357.height;
      }
      var v26526 = v27985;
      if (!v26526) {
        t$$29 = JAM.call(H$$3.scrollTop, H$$3, [], JAM.policy.p3);
        JAM.call(H$$3.css, H$$3, [{height:"auto"}], JAM.policy.p3);
        var v28929 = B$$3;
        var v31172 = JAM.call(H$$3.height, H$$3, [], JAM.policy.p3);
        v28929.h = v31172;
      }
      JAM.call(H$$3.css, H$$3, [{height:B$$3.h}], JAM.policy.p3);
      if (t$$29) {
        JAM.call(H$$3.scrollTop, H$$3, [t$$29], JAM.policy.p3);
      }
      var v19906;
      if ("none" === B$$3.transition) {
        v19906 = 0;
      } else {
        v19906 = B$$3.speed;
      }
      JAM.call(Q$$2.position, Q$$2, [v19906], JAM.policy.p3);
    }
    return;
  }
  function v1870(t$$28, i$$222) {
    function v1869() {
      function v1868() {
        JAM.call(E$$3.bind, E$$3, ["resize." + Z$$2, Q$$2.position], JAM.policy.p3);
        return;
      }
      JAM.call(o$$32, null, [], JAM.policy.p3);
      $$$4 = !1;
      v$$11[0].style.width = B$$3.w + A$$4 + _$$3 + "px";
      v$$11[0].style.height = B$$3.h + D$$3 + O$$2 + "px";
      var v15614 = B$$3.reposition;
      if (v15614) {
        JAM.call(setTimeout, null, [v1868, 1], JAM.policy.p3);
      }
      if (i$$222) {
        JAM.call(i$$222, null, [], JAM.policy.p3);
      }
      return;
    }
    function v1867(e$$356) {
      var v3222;
      if (r$$26[e$$356] !== dt[e$$356]) {
        u$$15 = t$$28;
        v3222 = void 0;
      } else {
        v3222 = void 0;
      }
      return v3222;
    }
    function o$$32() {
      x$$74[0].style.width = C$$3[0].style.width = y$$55[0].style.width = JAM.call(parseInt, null, [g$$199[0].style.width, 10], JAM.policy.p3) - _$$3 + "px";
      y$$55[0].style.height = b$$679[0].style.height = T$$4[0].style.height = JAM.call(parseInt, null, [g$$199[0].style.height, 10], JAM.policy.p3) - O$$2 + "px";
      return;
    }
    var r$$26;
    var l$$83;
    var s$$32;
    var a$$690 = 0;
    var d$$405 = 0;
    var c$$546 = JAM.call(g$$199.offset, g$$199, [], JAM.policy.p3);
    JAM.call(E$$3.unbind, E$$3, ["resize." + Z$$2], JAM.policy.p3);
    JAM.call(g$$199.css, g$$199, [{top:-9E4, left:-9E4}], JAM.policy.p3);
    l$$83 = JAM.call(E$$3.scrollTop, E$$3, [], JAM.policy.p3);
    s$$32 = JAM.call(E$$3.scrollLeft, E$$3, [], JAM.policy.p3);
    var v29567;
    if (B$$3.fixed) {
      c$$546.top = c$$546.top - l$$83;
      c$$546.left = c$$546.left - s$$32;
      v29567 = JAM.call(g$$199.css, g$$199, [{position:"fixed"}], JAM.policy.p3);
    } else {
      a$$690 = l$$83;
      d$$405 = s$$32;
      v29567 = JAM.call(g$$199.css, g$$199, [{position:"absolute"}], JAM.policy.p3);
    }
    v29567;
    var v29568 = d$$405;
    var v29959;
    if (B$$3.right !== !1) {
      v29959 = JAM.call(Math.max, Math, [JAM.call(E$$3.width, E$$3, [], JAM.policy.p3) - B$$3.w - A$$4 - _$$3 - JAM.call(h$$162, null, [B$$3.right, "x"], JAM.policy.p3), 0], JAM.policy.p3);
    } else {
      var v30222;
      if (B$$3.left !== !1) {
        v30222 = JAM.call(h$$162, null, [B$$3.left, "x"], JAM.policy.p3);
      } else {
        v30222 = JAM.call(Math.round, Math, [JAM.call(Math.max, Math, [JAM.call(E$$3.width, E$$3, [], JAM.policy.p3) - B$$3.w - A$$4 - _$$3, 0], JAM.policy.p3) / 2], JAM.policy.p3);
      }
      v29959 = v30222;
    }
    d$$405 = v29568 + v29959;
    var v28933 = a$$690;
    var v29570;
    if (B$$3.bottom !== !1) {
      v29570 = JAM.call(Math.max, Math, [JAM.call(n$$96, null, [], JAM.policy.p3) - B$$3.h - D$$3 - O$$2 - JAM.call(h$$162, null, [B$$3.bottom, "y"], JAM.policy.p3), 0], JAM.policy.p3);
    } else {
      var v29961;
      if (B$$3.top !== !1) {
        v29961 = JAM.call(h$$162, null, [B$$3.top, "y"], JAM.policy.p3);
      } else {
        v29961 = JAM.call(Math.round, Math, [JAM.call(Math.max, Math, [JAM.call(n$$96, null, [], JAM.policy.p3) - B$$3.h - D$$3 - O$$2, 0], JAM.policy.p3) / 2], JAM.policy.p3);
      }
      v29570 = v29961;
    }
    a$$690 = v28933 + v29570;
    JAM.call(g$$199.css, g$$199, [{top:c$$546.top, left:c$$546.left, visibility:"visible"}], JAM.policy.p3);
    v$$11[0].style.width = v$$11[0].style.height = "9999px";
    r$$26 = {width:B$$3.w + A$$4 + _$$3, height:B$$3.h + D$$3 + O$$2, top:a$$690, left:d$$405};
    if (t$$28) {
      var u$$15 = 0;
      JAM.call(e$$347.each, e$$347, [r$$26, v1867], JAM.policy.p3);
      t$$28 = u$$15;
    }
    dt = r$$26;
    if (!t$$28) {
      JAM.call(g$$199.css, g$$199, [r$$26], JAM.policy.p3);
    }
    var v9876 = JAM.call(g$$199.dequeue, g$$199, [], JAM.policy.p3);
    JAM.call(v9876.animate, v9876, [r$$26, {duration:t$$28 || 0, complete:v1869, step:o$$32}], JAM.policy.p3);
    return;
  }
  function v1866(t$$27, i$$221) {
    function v1865() {
      var v15622 = JAM.call(e$$347.data, e$$347, [this, Y$$2], JAM.policy.p3);
      if (!v15622) {
        v15622 = X$$2;
      }
      JAM.call(e$$347.data, e$$347, [this, Y$$2, JAM.call(e$$347.extend, e$$347, [{}, v15622, t$$27], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    var o$$31 = this;
    t$$27 = t$$27 || {};
    JAM.call(f$$184, null, [], JAM.policy.p3);
    if (JAM.call(p$$50, null, [], JAM.policy.p3)) {
      if (JAM.call(e$$347.isFunction, e$$347, [o$$31], JAM.policy.p3)) {
        o$$31 = JAM.call(e$$347, null, ["<a/>"], JAM.policy.p3);
        t$$27.open = !0;
      } else {
        if (!o$$31[0]) {
          return o$$31;
        }
      }
      if (i$$221) {
        t$$27.onComplete = i$$221;
      }
      var v15623 = JAM.call(o$$31.each, o$$31, [v1865], JAM.policy.p3);
      JAM.call(v15623.addClass, v15623, [et$$1], JAM.policy.p3);
      var v19916 = JAM.call(e$$347.isFunction, e$$347, [t$$27.open], JAM.policy.p3);
      if (v19916) {
        var v24486 = t$$27.open;
        v19916 = JAM.call(v24486.call, v24486, [o$$31], JAM.policy.p3);
      }
      var v15624 = v19916;
      if (!v15624) {
        v15624 = t$$27.open;
      }
      var v9880 = v15624;
      if (v9880) {
        JAM.call(u$$13, null, [o$$31[0]], JAM.policy.p3);
      }
    }
    return o$$31;
  }
  function v1864() {
    function v1863() {
      var v3228;
      if (r$$25) {
        var v9881 = B$$3.slideshow;
        if (!v9881) {
          JAM.call(lt.unbind, lt, [nt, n$$99], JAM.policy.p3);
          v9881 = JAM.call(n$$99, null, [], JAM.policy.p3);
        }
        v3228 = v9881;
      } else {
        var v15627 = B$$3.slideshow;
        if (v15627) {
          v15627 = k$$76[1];
        }
        var v9882 = v15627;
        if (v9882) {
          r$$25 = !0;
          JAM.call(lt.one, lt, [nt, n$$99], JAM.policy.p3);
          var v24487;
          if (B$$3.slideshowAuto) {
            v24487 = JAM.call(i$$220, null, [], JAM.policy.p3);
          } else {
            v24487 = JAM.call(o$$30, null, [], JAM.policy.p3);
          }
          v24487;
          v9882 = JAM.call(M$$2.show, M$$2, [], JAM.policy.p3);
        }
        v3228 = v9882;
      }
      v3228;
      return;
    }
    function e$$355() {
      JAM.call(clearTimeout, null, [h$$163], JAM.policy.p3);
      return;
    }
    function t$$26() {
      var v9883 = B$$3.loop;
      if (!v9883) {
        v9883 = k$$76[z$$7 + 1];
      }
      var v3229 = v9883;
      if (v3229) {
        JAM.call(e$$355, null, [], JAM.policy.p3);
        h$$163 = JAM.call(setTimeout, null, [Q$$2.next, B$$3.slideshowSpeed], JAM.policy.p3);
      }
      return;
    }
    function i$$220() {
      var v19918 = JAM.call(M$$2.html, M$$2, [B$$3.slideshowStop], JAM.policy.p3);
      var v15632 = JAM.call(v19918.unbind, v19918, [s$$31], JAM.policy.p3);
      JAM.call(v15632.one, v15632, [s$$31, o$$30], JAM.policy.p3);
      var v15633 = JAM.call(lt.bind, lt, [ot, t$$26], JAM.policy.p3);
      JAM.call(v15633.bind, v15633, [it, e$$355], JAM.policy.p3);
      var v9884 = JAM.call(g$$199.removeClass, g$$199, [l$$82 + "off"], JAM.policy.p3);
      JAM.call(v9884.addClass, v9884, [l$$82 + "on"], JAM.policy.p3);
      return;
    }
    function o$$30() {
      function v1862() {
        JAM.call(Q$$2.next, Q$$2, [], JAM.policy.p3);
        JAM.call(i$$220, null, [], JAM.policy.p3);
        return;
      }
      JAM.call(e$$355, null, [], JAM.policy.p3);
      var v19919 = JAM.call(lt.unbind, lt, [ot, t$$26], JAM.policy.p3);
      JAM.call(v19919.unbind, v19919, [it, e$$355], JAM.policy.p3);
      var v19920 = JAM.call(M$$2.html, M$$2, [B$$3.slideshowStart], JAM.policy.p3);
      var v15635 = JAM.call(v19920.unbind, v19920, [s$$31], JAM.policy.p3);
      JAM.call(v15635.one, v15635, [s$$31, v1862], JAM.policy.p3);
      var v9886 = JAM.call(g$$199.removeClass, g$$199, [l$$82 + "on"], JAM.policy.p3);
      JAM.call(v9886.addClass, v9886, [l$$82 + "off"], JAM.policy.p3);
      return;
    }
    function n$$99() {
      r$$25 = !1;
      JAM.call(M$$2.hide, M$$2, [], JAM.policy.p3);
      JAM.call(e$$355, null, [], JAM.policy.p3);
      var v15637 = JAM.call(lt.unbind, lt, [ot, t$$26], JAM.policy.p3);
      JAM.call(v15637.unbind, v15637, [it, e$$355], JAM.policy.p3);
      JAM.call(g$$199.removeClass, g$$199, [l$$82 + "off " + l$$82 + "on"], JAM.policy.p3);
      return;
    }
    var r$$25;
    var h$$163;
    var l$$82 = Z$$2 + "Slideshow_";
    var s$$31 = "click." + Z$$2;
    return v1863;
  }
  function o$$26(i$$211, o$$27, n$$97) {
    var r$$23 = JAM.call(t$$15.createElement, t$$15, [i$$211], JAM.policy.p3);
    if (o$$27) {
      r$$23.id = Z$$2 + o$$27;
    }
    if (n$$97) {
      r$$23.style.cssText = n$$97;
    }
    return JAM.call(e$$347, null, [r$$23], JAM.policy.p3);
  }
  function n$$96() {
    var v3230;
    if (i$$210.innerHeight) {
      v3230 = i$$210.innerHeight;
    } else {
      var v9889 = JAM.call(e$$347, null, [i$$210], JAM.policy.p3);
      v3230 = JAM.call(v9889.height, v9889, [], JAM.policy.p3);
    }
    return v3230;
  }
  function r$$22(e$$348) {
    var t$$16 = k$$76.length;
    var i$$212 = (z$$7 + e$$348) % t$$16;
    var v3232;
    if (0 > i$$212) {
      v3232 = t$$16 + i$$212;
    } else {
      v3232 = i$$212;
    }
    return v3232;
  }
  function h$$162(e$$349, t$$17) {
    var v15639;
    if (JAM.call(/%/.test, /%/, [e$$349], JAM.policy.p3)) {
      var v24490;
      if ("x" === t$$17) {
        v24490 = JAM.call(E$$3.width, E$$3, [], JAM.policy.p3);
      } else {
        v24490 = JAM.call(n$$96, null, [], JAM.policy.p3);
      }
      v15639 = v24490 / 100;
    } else {
      v15639 = 1;
    }
    return JAM.call(Math.round, Math, [v15639 * JAM.call(parseInt, null, [e$$349, 10], JAM.policy.p3)], JAM.policy.p3);
  }
  function s$$30(e$$351, t$$19) {
    var v3234;
    var v15640 = e$$351.retinaUrl;
    if (v15640) {
      v15640 = i$$210.devicePixelRatio > 1;
    }
    if (v15640) {
      v3234 = JAM.call(t$$19.replace, t$$19, [e$$351.photoRegex, e$$351.retinaSuffix], JAM.policy.p3);
    } else {
      v3234 = t$$19;
    }
    return v3234;
  }
  function a$$688(e$$352) {
    var v9897 = "contains" in g$$199[0];
    if (v9897) {
      var v19926 = g$$199[0];
      v9897 = !JAM.call(v19926.contains, v19926, [e$$352.target], JAM.policy.p3);
    }
    var v3235 = v9897;
    if (v3235) {
      JAM.call(e$$352.stopPropagation, e$$352, [], JAM.policy.p3);
      JAM.call(g$$199.focus, g$$199, [], JAM.policy.p3);
    }
    return;
  }
  function d$$404() {
    var t$$20;
    var i$$213 = JAM.call(e$$347.data, e$$347, [N$$2, Y$$2], JAM.policy.p3);
    var v3236;
    if (null == i$$213) {
      B$$3 = JAM.call(e$$347.extend, e$$347, [{}, X$$2], JAM.policy.p3);
      var v19928 = console;
      if (v19928) {
        v19928 = console.log;
      }
      var v15643 = v19928;
      if (v15643) {
        v15643 = JAM.call(console.log, console, ["Error: cboxElement missing settings object"], JAM.policy.p3);
      }
      v3236 = v15643;
    } else {
      v3236 = B$$3 = JAM.call(e$$347.extend, e$$347, [{}, i$$213], JAM.policy.p3);
    }
    v3236;
    for (t$$20 in B$$3) {
      var v9899 = JAM.call(e$$347.isFunction, e$$347, [B$$3[t$$20]], JAM.policy.p3);
      if (v9899) {
        v9899 = "on" !== JAM.call(t$$20.slice, t$$20, [0, 2], JAM.policy.p3);
      }
      var v3237 = v9899;
      if (v3237) {
        var v9900 = B$$3;
        var v9901 = t$$20;
        var v15646 = B$$3[t$$20];
        var v31173 = JAM.call(v15646.call, v15646, [N$$2], JAM.policy.p3);
        JAM.set(v9900, v9901, v31173, JAM.policy.p2);
      }
    }
    var v19929 = B$$3;
    var v27994 = B$$3.rel;
    if (!v27994) {
      v27994 = N$$2.rel;
    }
    var v26541 = v27994;
    if (!v26541) {
      var v27995 = JAM.call(e$$347, null, [N$$2], JAM.policy.p3);
      v26541 = JAM.call(v27995.data, v27995, ["rel"], JAM.policy.p3);
    }
    var v24491 = v26541;
    if (!v24491) {
      v24491 = "nofollow";
    }
    v19929.rel = v24491;
    var v19930 = B$$3;
    var v24492 = B$$3.href;
    if (!v24492) {
      var v26543 = JAM.call(e$$347, null, [N$$2], JAM.policy.p3);
      v24492 = JAM.call(v26543.attr, v26543, ["href"], JAM.policy.p3);
    }
    v19930.href = v24492;
    var v15647 = B$$3.title;
    if (!v15647) {
      v15647 = N$$2.title;
    }
    B$$3.title = v15647;
    var v9902 = "string" == typeof B$$3.href;
    if (v9902) {
      var v15649 = B$$3;
      var v31174 = JAM.call(e$$347.trim, e$$347, [B$$3.href], JAM.policy.p3);
      v15649.href = v31174;
    }
    return;
  }
  function c$$545(i$$214, o$$28) {
    var v15650 = JAM.call(e$$347, null, [t$$15], JAM.policy.p3);
    JAM.call(v15650.trigger, v15650, [i$$214], JAM.policy.p3);
    JAM.call(lt.triggerHandler, lt, [i$$214], JAM.policy.p3);
    var v9903 = JAM.call(e$$347.isFunction, e$$347, [o$$28], JAM.policy.p3);
    if (v9903) {
      JAM.call(o$$28.call, o$$28, [N$$2], JAM.policy.p3);
    }
    return;
  }
  function u$$13(i$$215) {
    function v1846() {
      var v3238 = JAM.call(e$$347, null, [N$$2], JAM.policy.p3);
      JAM.call(v3238.focus, v3238, [], JAM.policy.p3);
      return;
    }
    function v1845() {
      JAM.call(t$$15.removeEventListener, t$$15, ["focus", a$$688, !0], JAM.policy.p3);
      return;
    }
    function v1844() {
      var t$$21;
      var i$$216 = JAM.call(e$$347.data, e$$347, [this, Y$$2], JAM.policy.p3);
      if (i$$216) {
        var v24493 = JAM.call(e$$347, null, [this], JAM.policy.p3);
        var v19934 = JAM.call(v24493.data, v24493, ["rel"], JAM.policy.p3);
        if (!v19934) {
          v19934 = i$$216.rel;
        }
        var v15651 = v19934;
        if (!v15651) {
          v15651 = this.rel;
        }
        t$$21 = v15651;
      }
      return t$$21 === B$$3.rel;
    }
    if (!q$$21) {
      N$$2 = i$$215;
      JAM.call(d$$404, null, [], JAM.policy.p3);
      k$$76 = JAM.call(e$$347, null, [N$$2], JAM.policy.p3);
      z$$7 = 0;
      var v29963 = "nofollow" !== B$$3.rel;
      if (v29963) {
        var v30629 = JAM.call(e$$347, null, ["." + et$$1], JAM.policy.p3);
        k$$76 = JAM.call(v30629.filter, v30629, [v1844], JAM.policy.p3);
        z$$7 = JAM.call(k$$76.index, k$$76, [N$$2], JAM.policy.p3);
        var v30464 = -1 === z$$7;
        if (v30464) {
          k$$76 = JAM.call(k$$76.add, k$$76, [N$$2], JAM.policy.p3);
          z$$7 = k$$76.length - 1;
        }
      }
      var v30232 = JAM.call(parseFloat, null, [B$$3.opacity], JAM.policy.p3);
      var v30466;
      if (B$$3.overlayClose) {
        v30466 = "pointer";
      } else {
        v30466 = "auto";
      }
      var v29571 = JAM.call(w$$18.css, w$$18, [{opacity:v30232, cursor:v30466, visibility:"visible"}], JAM.policy.p3);
      JAM.call(v29571.show, v29571, [], JAM.policy.p3);
      if (J$$3) {
        var v29572 = JAM.call(g$$199.add, g$$199, [w$$18], JAM.policy.p3);
        JAM.call(v29572.removeClass, v29572, [J$$3], JAM.policy.p3);
      }
      var v27997 = B$$3.className;
      if (v27997) {
        var v28936 = JAM.call(g$$199.add, g$$199, [w$$18], JAM.policy.p3);
        JAM.call(v28936.addClass, v28936, [B$$3.className], JAM.policy.p3);
      }
      J$$3 = B$$3.className;
      var v24495;
      if (B$$3.closeButton) {
        var v26545 = JAM.call(K$$2.html, K$$2, [B$$3.close], JAM.policy.p3);
        v24495 = JAM.call(v26545.appendTo, v26545, [y$$55], JAM.policy.p3);
      } else {
        v24495 = JAM.call(K$$2.appendTo, K$$2, ["<div/>"], JAM.policy.p3);
      }
      v24495;
      if (!U$$2) {
        U$$2 = $$$4 = !0;
        JAM.call(g$$199.css, g$$199, [{visibility:"hidden", display:"block"}], JAM.policy.p3);
        H$$3 = JAM.call(o$$26, null, [st$$2, "LoadedContent", "width:0; height:0; overflow:hidden"], JAM.policy.p3);
        var v31023 = JAM.call(y$$55.css, y$$55, [{width:"", height:""}], JAM.policy.p3);
        JAM.call(v31023.append, v31023, [H$$3], JAM.policy.p3);
        O$$2 = JAM.call(x$$74.height, x$$74, [], JAM.policy.p3) + JAM.call(C$$3.height, C$$3, [], JAM.policy.p3) + JAM.call(y$$55.outerHeight, y$$55, [!0], JAM.policy.p3) - JAM.call(y$$55.height, y$$55, [], JAM.policy.p3);
        _$$3 = JAM.call(b$$679.width, b$$679, [], JAM.policy.p3) + JAM.call(T$$4.width, T$$4, [], JAM.policy.p3) + JAM.call(y$$55.outerWidth, y$$55, [!0], JAM.policy.p3) - JAM.call(y$$55.width, y$$55, [], JAM.policy.p3);
        D$$3 = JAM.call(H$$3.outerHeight, H$$3, [!0], JAM.policy.p3);
        A$$4 = JAM.call(H$$3.outerWidth, H$$3, [!0], JAM.policy.p3);
        var v30773 = B$$3;
        var v31175 = JAM.call(h$$162, null, [B$$3.initialWidth, "x"], JAM.policy.p3);
        v30773.w = v31175;
        var v30631 = B$$3;
        var v31176 = JAM.call(h$$162, null, [B$$3.initialHeight, "y"], JAM.policy.p3);
        v30631.h = v31176;
        JAM.call(H$$3.css, H$$3, [{width:"", height:B$$3.h}], JAM.policy.p3);
        JAM.call(Q$$2.position, Q$$2, [], JAM.policy.p3);
        JAM.call(c$$545, null, [tt$$1, B$$3.onOpen], JAM.policy.p3);
        var v29573 = JAM.call(P$$2.add, P$$2, [L$$2], JAM.policy.p3);
        JAM.call(v29573.hide, v29573, [], JAM.policy.p3);
        JAM.call(g$$199.focus, g$$199, [], JAM.policy.p3);
        var v28938 = B$$3.trapFocus;
        if (v28938) {
          v28938 = t$$15.addEventListener;
        }
        var v27999 = v28938;
        if (v27999) {
          JAM.call(t$$15.addEventListener, t$$15, ["focus", a$$688, !0], JAM.policy.p3);
          JAM.call(lt.one, lt, [rt$$3, v1845], JAM.policy.p3);
        }
        var v26547 = B$$3.returnFocus;
        if (v26547) {
          JAM.call(lt.one, lt, [rt$$3, v1846], JAM.policy.p3);
        }
      }
      JAM.call(m$$50, null, [], JAM.policy.p3);
    }
    return;
  }
  function f$$184() {
    var v9906 = !g$$199;
    if (v9906) {
      v9906 = t$$15.body;
    }
    var v3240 = v9906;
    if (v3240) {
      V$$2 = !1;
      E$$3 = JAM.call(e$$347, null, [i$$210], JAM.policy.p3);
      var v30633 = JAM.call(o$$26, null, [st$$2], JAM.policy.p3);
      var v30868;
      if (e$$347.support.opacity === !1) {
        v30868 = Z$$2 + "IE";
      } else {
        v30868 = "";
      }
      var v30468 = JAM.call(v30633.attr, v30633, [{id:Y$$2, "class":v30868, role:"dialog", tabindex:"-1"}], JAM.policy.p3);
      g$$199 = JAM.call(v30468.hide, v30468, [], JAM.policy.p3);
      var v30234 = JAM.call(o$$26, null, [st$$2, "Overlay"], JAM.policy.p3);
      w$$18 = JAM.call(v30234.hide, v30234, [], JAM.policy.p3);
      F$$3 = JAM.call(e$$347, null, [[JAM.call(o$$26, null, [st$$2, "LoadingOverlay"], JAM.policy.p3)[0], JAM.call(o$$26, null, [st$$2, "LoadingGraphic"], JAM.policy.p3)[0]]], JAM.policy.p3);
      v$$11 = JAM.call(o$$26, null, [st$$2, "Wrapper"], JAM.policy.p3);
      var v28939 = JAM.call(o$$26, null, [st$$2, "Content"], JAM.policy.p3);
      var v28940 = L$$2 = JAM.call(o$$26, null, [st$$2, "Title"], JAM.policy.p3);
      var v28941 = S$$2 = JAM.call(o$$26, null, [st$$2, "Current"], JAM.policy.p3);
      var v29575 = JAM.call(e$$347, null, ['<button type="button"/>'], JAM.policy.p3);
      var v28942 = I$$3 = JAM.call(v29575.attr, v29575, [{id:Z$$2 + "Previous"}], JAM.policy.p3);
      var v29577 = JAM.call(e$$347, null, ['<button type="button"/>'], JAM.policy.p3);
      y$$55 = JAM.call(v28939.append, v28939, [v28940, v28941, v28942, R$$2 = JAM.call(v29577.attr, v29577, [{id:Z$$2 + "Next"}], JAM.policy.p3), M$$2 = JAM.call(o$$26, null, ["button", "Slideshow"], JAM.policy.p3), F$$3], JAM.policy.p3);
      var v28000 = JAM.call(e$$347, null, ['<button type="button"/>'], JAM.policy.p3);
      K$$2 = JAM.call(v28000.attr, v28000, [{id:Z$$2 + "Close"}], JAM.policy.p3);
      var v29579 = JAM.call(o$$26, null, [st$$2], JAM.policy.p3);
      var v28946 = JAM.call(v29579.append, v29579, [JAM.call(o$$26, null, [st$$2, "TopLeft"], JAM.policy.p3), x$$74 = JAM.call(o$$26, null, [st$$2, "TopCenter"], JAM.policy.p3), JAM.call(o$$26, null, [st$$2, "TopRight"], JAM.policy.p3)], JAM.policy.p3);
      var v29583 = JAM.call(o$$26, null, [st$$2, !1, "clear:left"], JAM.policy.p3);
      var v28947 = JAM.call(v29583.append, v29583, [b$$679 = JAM.call(o$$26, null, [st$$2, "MiddleLeft"], JAM.policy.p3), y$$55, T$$4 = JAM.call(o$$26, null, [st$$2, "MiddleRight"], JAM.policy.p3)], JAM.policy.p3);
      var v29586 = JAM.call(o$$26, null, [st$$2, !1, "clear:left"], JAM.policy.p3);
      var v28002 = JAM.call(v$$11.append, v$$11, [v28946, v28947, JAM.call(v29586.append, v29586, [JAM.call(o$$26, null, [st$$2, "BottomLeft"], JAM.policy.p3), C$$3 = JAM.call(o$$26, null, [st$$2, "BottomCenter"], JAM.policy.p3), JAM.call(o$$26, null, [st$$2, "BottomRight"], JAM.policy.p3)], JAM.policy.p3)], JAM.policy.p3);
      var v26548 = JAM.call(v28002.find, v28002, ["div div"], JAM.policy.p3);
      JAM.call(v26548.css, v26548, [{"float":"left"}], JAM.policy.p3);
      W$$2 = JAM.call(o$$26, null, [st$$2, !1, "position:absolute; width:9999px; visibility:hidden; display:none; max-width:none;"], JAM.policy.p3);
      var v24498 = JAM.call(R$$2.add, R$$2, [I$$3], JAM.policy.p3);
      var v19936 = JAM.call(v24498.add, v24498, [S$$2], JAM.policy.p3);
      P$$2 = JAM.call(v19936.add, v19936, [M$$2], JAM.policy.p3);
      var v15652 = JAM.call(e$$347, null, [t$$15.body], JAM.policy.p3);
      JAM.call(v15652.append, v15652, [w$$18, JAM.call(g$$199.append, g$$199, [v$$11, W$$2], JAM.policy.p3)], JAM.policy.p3);
    }
    return;
  }
  function p$$50() {
    function v1851(e$$354) {
      var t$$22 = e$$354.keyCode;
      var v19938 = U$$2;
      if (v19938) {
        v19938 = B$$3.escKey;
      }
      var v15654 = v19938;
      if (v15654) {
        v15654 = 27 === t$$22;
      }
      var v9907 = v15654;
      if (v9907) {
        JAM.call(e$$354.preventDefault, e$$354, [], JAM.policy.p3);
        JAM.call(Q$$2.close, Q$$2, [], JAM.policy.p3);
      }
      var v24499 = U$$2;
      if (v24499) {
        v24499 = B$$3.arrowKey;
      }
      var v19939 = v24499;
      if (v19939) {
        v19939 = k$$76[1];
      }
      var v15655 = v19939;
      if (v15655) {
        v15655 = !e$$354.altKey;
      }
      var v9908 = v15655;
      if (v9908) {
        var v15656;
        if (37 === t$$22) {
          JAM.call(e$$354.preventDefault, e$$354, [], JAM.policy.p3);
          v15656 = JAM.call(I$$3.click, I$$3, [], JAM.policy.p3);
        } else {
          var v19941 = 39 === t$$22;
          if (v19941) {
            JAM.call(e$$354.preventDefault, e$$354, [], JAM.policy.p3);
            v19941 = JAM.call(R$$2.click, R$$2, [], JAM.policy.p3);
          }
          v15656 = v19941;
        }
        v15656;
      }
      return;
    }
    function v1850() {
      var v3241 = B$$3.overlayClose;
      if (v3241) {
        JAM.call(Q$$2.close, Q$$2, [], JAM.policy.p3);
      }
      return;
    }
    function v1849() {
      JAM.call(Q$$2.close, Q$$2, [], JAM.policy.p3);
      return;
    }
    function v1848() {
      JAM.call(Q$$2.prev, Q$$2, [], JAM.policy.p3);
      return;
    }
    function v1847() {
      JAM.call(Q$$2.next, Q$$2, [], JAM.policy.p3);
      return;
    }
    function i$$217(e$$353) {
      var v24500 = e$$353.which > 1;
      if (!v24500) {
        v24500 = e$$353.shiftKey;
      }
      var v19943 = v24500;
      if (!v19943) {
        v19943 = e$$353.altKey;
      }
      var v15657 = v19943;
      if (!v15657) {
        v15657 = e$$353.metaKey;
      }
      var v9909 = v15657;
      if (!v9909) {
        v9909 = e$$353.ctrlKey;
      }
      var v3242 = v9909;
      if (!v3242) {
        JAM.call(e$$353.preventDefault, e$$353, [], JAM.policy.p3);
        JAM.call(u$$13, null, [this], JAM.policy.p3);
      }
      return;
    }
    var v3243;
    if (g$$199) {
      if (!V$$2) {
        V$$2 = !0;
        JAM.call(R$$2.click, R$$2, [v1847], JAM.policy.p3);
        JAM.call(I$$3.click, I$$3, [v1848], JAM.policy.p3);
        JAM.call(K$$2.click, K$$2, [v1849], JAM.policy.p3);
        JAM.call(w$$18.click, w$$18, [v1850], JAM.policy.p3);
        var v26552 = JAM.call(e$$347, null, [t$$15], JAM.policy.p3);
        JAM.call(v26552.bind, v26552, ["keydown." + Z$$2, v1851], JAM.policy.p3);
        var v24502;
        if (JAM.call(e$$347.isFunction, e$$347, [e$$347.fn.on], JAM.policy.p3)) {
          var v26554 = JAM.call(e$$347, null, [t$$15], JAM.policy.p3);
          v24502 = JAM.call(v26554.on, v26554, ["click." + Z$$2, "." + et$$1, i$$217], JAM.policy.p3);
        } else {
          var v26557 = JAM.call(e$$347, null, ["." + et$$1], JAM.policy.p3);
          v24502 = JAM.call(v26557.live, v26557, ["click." + Z$$2, i$$217], JAM.policy.p3);
        }
        v24502;
      }
      v3243 = !0;
    } else {
      v3243 = !1;
    }
    return v3243;
  }
  function m$$50() {
    function v1861(t$$25, i$$219) {
      var v3244 = f$$185 === at;
      if (v3244) {
        var v15659;
        if ("error" === i$$219) {
          var v19946 = JAM.call(o$$26, null, [st$$2, "Error"], JAM.policy.p3);
          v15659 = JAM.call(v19946.html, v19946, [B$$3.xhrError], JAM.policy.p3);
        } else {
          var v19948 = JAM.call(e$$347, null, [this], JAM.policy.p3);
          v15659 = JAM.call(v19948.contents, v19948, [], JAM.policy.p3);
        }
        JAM.call(u$$14, null, [v15659], JAM.policy.p3);
      }
      return;
    }
    function v1860() {
      j$$109.src = n$$98;
      return;
    }
    function v1859() {
      function v1858() {
        JAM.call(u$$14, null, [j$$109], JAM.policy.p3);
        return;
      }
      function v1857() {
        JAM.call(Q$$2.next, Q$$2, [], JAM.policy.p3);
        return;
      }
      function v1856() {
        j$$109.height = j$$109.height - j$$109.height * t$$23;
        j$$109.width = j$$109.width - j$$109.width * t$$23;
        return;
      }
      function v1855(t$$24, i$$218) {
        var v9912 = JAM.call(e$$347, null, [N$$2], JAM.policy.p3);
        var v3245 = JAM.call(v9912.attr, v9912, [i$$218], JAM.policy.p3);
        if (!v3245) {
          var v9913 = JAM.call(e$$347, null, [N$$2], JAM.policy.p3);
          v3245 = JAM.call(v9913.attr, v9913, ["data-" + i$$218], JAM.policy.p3);
        }
        var o$$29 = v3245;
        if (o$$29) {
          JAM.call(j$$109.setAttribute, j$$109, [i$$218, o$$29], JAM.policy.p3);
        }
        return;
      }
      var t$$23;
      var v3246 = f$$185 === at;
      if (v3246) {
        JAM.call(e$$347.each, e$$347, [["alt", "longdesc", "aria-describedby"], v1855], JAM.policy.p3);
        var v29971 = B$$3.retinaImage;
        if (v29971) {
          v29971 = i$$210.devicePixelRatio > 1;
        }
        var v29591 = v29971;
        if (v29591) {
          j$$109.height = j$$109.height / i$$210.devicePixelRatio;
          j$$109.width = j$$109.width / i$$210.devicePixelRatio;
        }
        var v28950 = B$$3.scalePhotos;
        if (v28950) {
          r$$24 = v1856;
          var v30471 = B$$3.mw;
          if (v30471) {
            v30471 = j$$109.width > B$$3.mw;
          }
          var v30242 = v30471;
          if (v30242) {
            t$$23 = (j$$109.width - B$$3.mw) / j$$109.width;
            JAM.call(r$$24, null, [], JAM.policy.p3);
          }
          var v30243 = B$$3.mh;
          if (v30243) {
            v30243 = j$$109.height > B$$3.mh;
          }
          var v29972 = v30243;
          if (v29972) {
            t$$23 = (j$$109.height - B$$3.mh) / j$$109.height;
            JAM.call(r$$24, null, [], JAM.policy.p3);
          }
        }
        var v28005 = B$$3.h;
        if (v28005) {
          j$$109.style.marginTop = JAM.call(Math.max, Math, [B$$3.mh - j$$109.height, 0], JAM.policy.p3) / 2 + "px";
        }
        var v28006 = k$$76[1];
        if (v28006) {
          var v28952 = B$$3.loop;
          if (!v28952) {
            v28952 = k$$76[z$$7 + 1];
          }
          v28006 = v28952;
        }
        var v26560 = v28006;
        if (v26560) {
          j$$109.style.cursor = "pointer";
          JAM.set(j$$109, "onclick", v1857);
        }
        j$$109.style.width = j$$109.width + "px";
        j$$109.style.height = j$$109.height + "px";
        JAM.call(setTimeout, null, [v1858, 1], JAM.policy.p3);
      }
      return;
    }
    function v1854() {
      B$$3.title = !1;
      var v15664 = JAM.call(o$$26, null, [st$$2, "Error"], JAM.policy.p3);
      JAM.call(u$$14, null, [JAM.call(v15664.html, v15664, [B$$3.imgError], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    function v1853() {
      JAM.call(a$$689.replaceWith, a$$689, [JAM.call(H$$3.children, H$$3, [], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    function v1852() {
      JAM.call(F$$3.show, F$$3, [], JAM.policy.p3);
      return;
    }
    var n$$98;
    var r$$24;
    var a$$689;
    var u$$14 = Q$$2.prep;
    var f$$185 = at = at + 1;
    $$$4 = !0;
    j$$109 = !1;
    N$$2 = k$$76[z$$7];
    JAM.call(d$$404, null, [], JAM.policy.p3);
    JAM.call(c$$545, null, [ht], JAM.policy.p3);
    JAM.call(c$$545, null, [it, B$$3.onLoad], JAM.policy.p3);
    var v29974 = B$$3;
    var v30246;
    if (B$$3.height) {
      v30246 = JAM.call(h$$162, null, [B$$3.height, "y"], JAM.policy.p3) - D$$3 - O$$2;
    } else {
      var v30479 = B$$3.innerHeight;
      if (v30479) {
        v30479 = JAM.call(h$$162, null, [B$$3.innerHeight, "y"], JAM.policy.p3);
      }
      v30246 = v30479;
    }
    v29974.h = v30246;
    var v29595 = B$$3;
    var v29975;
    if (B$$3.width) {
      v29975 = JAM.call(h$$162, null, [B$$3.width, "x"], JAM.policy.p3) - A$$4 - _$$3;
    } else {
      var v30248 = B$$3.innerWidth;
      if (v30248) {
        v30248 = JAM.call(h$$162, null, [B$$3.innerWidth, "x"], JAM.policy.p3);
      }
      v29975 = v30248;
    }
    v29595.w = v29975;
    B$$3.mw = B$$3.w;
    B$$3.mh = B$$3.h;
    var v26562 = B$$3.maxWidth;
    if (v26562) {
      B$$3.mw = JAM.call(h$$162, null, [B$$3.maxWidth, "x"], JAM.policy.p3) - A$$4 - _$$3;
      var v28955;
      var v29977 = B$$3.w;
      if (v29977) {
        v29977 = B$$3.w < B$$3.mw;
      }
      if (v29977) {
        v28955 = B$$3.w;
      } else {
        v28955 = B$$3.mw;
      }
      B$$3.mw = v28955;
    }
    var v24505 = B$$3.maxHeight;
    if (v24505) {
      B$$3.mh = JAM.call(h$$162, null, [B$$3.maxHeight, "y"], JAM.policy.p3) - D$$3 - O$$2;
      var v28008;
      var v29599 = B$$3.h;
      if (v29599) {
        v29599 = B$$3.h < B$$3.mh;
      }
      if (v29599) {
        v28008 = B$$3.h;
      } else {
        v28008 = B$$3.mh;
      }
      B$$3.mh = v28008;
    }
    n$$98 = B$$3.href;
    G$$3 = JAM.call(setTimeout, null, [v1852, 100], JAM.policy.p3);
    var v9917;
    if (B$$3.inline) {
      var v26563 = JAM.call(o$$26, null, [st$$2], JAM.policy.p3);
      var v24506 = JAM.call(v26563.hide, v26563, [], JAM.policy.p3);
      a$$689 = JAM.call(v24506.insertBefore, v24506, [JAM.call(e$$347, null, [n$$98], JAM.policy.p3)[0]], JAM.policy.p3);
      JAM.call(lt.one, lt, [ht, v1853], JAM.policy.p3);
      v9917 = JAM.call(u$$14, null, [JAM.call(e$$347, null, [n$$98], JAM.policy.p3)], JAM.policy.p3);
    } else {
      var v15666;
      if (B$$3.iframe) {
        v15666 = JAM.call(u$$14, null, [" "], JAM.policy.p3);
      } else {
        var v19954;
        if (B$$3.html) {
          v19954 = JAM.call(u$$14, null, [B$$3.html], JAM.policy.p3);
        } else {
          var v24509;
          var v28009 = B$$3.photo;
          if (!v28009) {
            var v28958 = B$$3.photoRegex;
            v28009 = JAM.call(v28958.test, v28958, [n$$98], JAM.policy.p3);
          }
          if (v28009) {
            n$$98 = JAM.call(s$$30, null, [B$$3, n$$98], JAM.policy.p3);
            j$$109 = JAM.call(t$$15.createElement, t$$15, ["img"], JAM.policy.p3);
            var v29981 = JAM.call(e$$347, null, [j$$109], JAM.policy.p3);
            var v29600 = JAM.call(v29981.addClass, v29981, [Z$$2 + "Photo"], JAM.policy.p3);
            var v28960 = JAM.call(v29600.bind, v29600, ["error", v1854], JAM.policy.p3);
            JAM.call(v28960.one, v28960, ["load", v1859], JAM.policy.p3);
            v24509 = JAM.call(setTimeout, null, [v1860, 1], JAM.policy.p3);
          } else {
            var v26565 = n$$98;
            if (v26565) {
              v26565 = JAM.call(W$$2.load, W$$2, [n$$98, B$$3.data, v1861], JAM.policy.p3);
            }
            v24509 = v26565;
          }
          v19954 = v24509;
        }
        v15666 = v19954;
      }
      v9917 = v15666;
    }
    v9917;
    return;
  }
  var w$$18;
  var g$$199;
  var v$$11;
  var y$$55;
  var x$$74;
  var b$$679;
  var T$$4;
  var C$$3;
  var k$$76;
  var E$$3;
  var H$$3;
  var W$$2;
  var F$$3;
  var L$$2;
  var S$$2;
  var M$$2;
  var R$$2;
  var I$$3;
  var K$$2;
  var P$$2;
  var B$$3;
  var O$$2;
  var _$$3;
  var D$$3;
  var A$$4;
  var N$$2;
  var z$$7;
  var j$$109;
  var U$$2;
  var $$$4;
  var q$$21;
  var G$$3;
  var Q$$2;
  var J$$3;
  var V$$2;
  var X$$2 = {html:!1, photo:!1, iframe:!1, inline:!1, transition:"elastic", speed:300, fadeOut:300, width:!1, initialWidth:"600", innerWidth:!1, maxWidth:!1, height:!1, initialHeight:"450", innerHeight:!1, maxHeight:!1, scalePhotos:!0, scrolling:!0, href:!1, title:!1, rel:!1, opacity:.9, preloading:!0, className:!1, overlayClose:!0, escKey:!0, arrowKey:!0, top:!1, bottom:!1, left:!1, right:!1, fixed:!1, data:void 0, closeButton:!0, fastIframe:!0, open:!1, reposition:!0, loop:!0, slideshow:!1, slideshowAuto:!0, 
  slideshowSpeed:2500, slideshowStart:"start slideshow", slideshowStop:"stop slideshow", photoRegex:/\.(gif|png|jp(e|g|eg)|bmp|ico|webp)((#|\?).*)?$/i, retinaImage:!1, retinaUrl:!1, retinaSuffix:"@2x.$1", current:"image {current} of {total}", previous:"previous", next:"next", close:"close", xhrError:"This content failed to load.", imgError:"This image failed to load.", returnFocus:!0, trapFocus:!0, onOpen:!1, onLoad:!1, onComplete:!1, onCleanup:!1, onClosed:!1};
  var Y$$2 = "colorbox";
  var Z$$2 = "cbox";
  var et$$1 = Z$$2 + "Element";
  var tt$$1 = Z$$2 + "_open";
  var it = Z$$2 + "_load";
  var ot = Z$$2 + "_complete";
  var nt = Z$$2 + "_cleanup";
  var rt$$3 = Z$$2 + "_closed";
  var ht = Z$$2 + "_purge";
  var lt = JAM.call(e$$347, null, ["<a/>"], JAM.policy.p3);
  var st$$2 = "div";
  var at = 0;
  var dt = {};
  var ct$$1 = JAM.call(v1864, null, [], JAM.policy.p3);
  var v3290 = e$$347.colorbox;
  if (!v3290) {
    JAM.call(e$$347, null, [f$$184], JAM.policy.p3);
    Q$$2 = JAM.set(e$$347.fn, Y$$2, JAM.set(e$$347, Y$$2, v1866, JAM.policy.p2), JAM.policy.p2);
    Q$$2.position = v1870;
    Q$$2.resize = v1871;
    Q$$2.prep = v1877;
    Q$$2.next = v1878;
    Q$$2.prev = v1879;
    Q$$2.close = v1882;
    Q$$2.remove = v1883;
    Q$$2.element = v1884;
    Q$$2.settings = X$$2;
  }
  return;
}
function v1843(a$$663, b$$652) {
  function v1842(a$$684, b$$677) {
    function v1841(a$$687) {
      var v3291 = a$$687.clientX;
      if (v3291) {
        JAM.call(c$$544.rotate, c$$544, [null], JAM.policy.p3);
      }
      return;
    }
    function v1840(a$$686) {
      JAM.call(e$$346, null, [], JAM.policy.p3);
      return;
    }
    function v1839(b$$678) {
      function v1838() {
        var a$$685 = d$$403.selected;
        var v9919;
        if ((a$$685 = a$$685 + 1) < c$$544.anchors.length) {
          v9919 = a$$685;
        } else {
          v9919 = 0;
        }
        JAM.call(c$$544.select, c$$544, [v9919], JAM.policy.p3);
        return;
      }
      JAM.call(clearTimeout, null, [c$$544.rotation], JAM.policy.p3);
      var v15670 = c$$544;
      var v31177 = JAM.call(setTimeout, null, [v1838, a$$684], JAM.policy.p3);
      v15670.rotation = v31177;
      if (b$$678) {
        JAM.call(b$$678.stopPropagation, b$$678, [], JAM.policy.p3);
      }
      return;
    }
    var c$$544 = this;
    var d$$403 = this.options;
    var v3293 = c$$544._rotate;
    if (!v3293) {
      v3293 = c$$544._rotate = v1839;
    }
    var e$$346 = v3293;
    var v3294 = c$$544._unrotate;
    if (!v3294) {
      var v9921;
      if (b$$677) {
        v9921 = v1840;
      } else {
        v9921 = v1841;
      }
      v3294 = c$$544._unrotate = v9921;
    }
    var f$$183 = v3294;
    var v9923;
    if (a$$684) {
      var v24512 = this.element;
      JAM.call(v24512.bind, v24512, ["tabsshow", e$$346], JAM.policy.p3);
      var v24513 = this.anchors;
      JAM.call(v24513.bind, v24513, [d$$403.event + ".tabs", f$$183], JAM.policy.p3);
      v9923 = JAM.call(e$$346, null, [], JAM.policy.p3);
    } else {
      JAM.call(clearTimeout, null, [c$$544.rotation], JAM.policy.p3);
      var v28012 = this.element;
      JAM.call(v28012.unbind, v28012, ["tabsshow", e$$346], JAM.policy.p3);
      var v26568 = this.anchors;
      JAM.call(v26568.unbind, v26568, [d$$403.event + ".tabs", f$$183], JAM.policy.p3);
      delete this._rotate;
      v9923 = delete this._unrotate;
    }
    v9923;
    return this;
  }
  function v1837() {
    return this.anchors.length;
  }
  function v1836(a$$683, b$$676) {
    var v19958 = this.anchors;
    var v15671 = JAM.call(v19958.eq, v19958, [a$$683], JAM.policy.p3);
    var v9924 = JAM.call(v15671.removeData, v15671, ["cache.tabs"], JAM.policy.p3);
    JAM.call(v9924.data, v9924, ["load.tabs", b$$676], JAM.policy.p3);
    return this;
  }
  function v1835() {
    var v26570 = this.element;
    JAM.call(v26570.queue, v26570, [[]], JAM.policy.p3);
    var v26571 = this.panels;
    JAM.call(v26571.stop, v26571, [!1, !0], JAM.policy.p3);
    var v24515 = this.element;
    var v28014 = this.element;
    var v26574 = JAM.call(v28014.queue, v28014, ["tabs"], JAM.policy.p3);
    JAM.call(v24515.queue, v24515, ["tabs", JAM.call(v26574.splice, v26574, [-2, 2], JAM.policy.p3)], JAM.policy.p3);
    var v19959 = this.xhr;
    if (v19959) {
      var v26575 = this.xhr;
      JAM.call(v26575.abort, v26575, [], JAM.policy.p3);
      delete this.xhr;
    }
    JAM.call(this._cleanup, this, [], JAM.policy.p3);
    return this;
  }
  function v1834(b$$675) {
    function v1833(a$$682, f$$182, g$$197) {
      JAM.call(c$$543._cleanup, c$$543, [], JAM.policy.p3);
      JAM.call(c$$543._trigger, c$$543, ["load", null, JAM.call(c$$543._ui, c$$543, [c$$543.anchors[b$$675], c$$543.panels[b$$675]], JAM.policy.p3)], JAM.policy.p3);
      try {
        var v3296 = d$$402.ajaxOptions;
        JAM.call(v3296.error, v3296, [a$$682, f$$182, b$$675, e$$345], JAM.policy.p3);
      } catch (g$$198) {
      }
      return;
    }
    function v1832(f$$181, g$$196) {
      var v24517 = c$$543.element;
      var v19962 = JAM.call(v24517.find, v24517, [JAM.call(c$$543._sanitizeSelector, c$$543, [e$$345.hash], JAM.policy.p3)], JAM.policy.p3);
      JAM.call(v19962.html, v19962, [f$$181], JAM.policy.p3);
      JAM.call(c$$543._cleanup, c$$543, [], JAM.policy.p3);
      var v15674 = d$$402.cache;
      if (v15674) {
        JAM.call(a$$663.data, a$$663, [e$$345, "cache.tabs", !0], JAM.policy.p3);
      }
      JAM.call(c$$543._trigger, c$$543, ["load", null, JAM.call(c$$543._ui, c$$543, [c$$543.anchors[b$$675], c$$543.panels[b$$675]], JAM.policy.p3)], JAM.policy.p3);
      try {
        var v3297 = d$$402.ajaxOptions;
        JAM.call(v3297.success, v3297, [f$$181, g$$196], JAM.policy.p3);
      } catch (h$$161) {
      }
      return;
    }
    b$$675 = JAM.call(this._getIndex, this, [b$$675], JAM.policy.p3);
    var c$$543 = this;
    var d$$402 = this.options;
    var v9927 = this.anchors;
    var e$$345 = JAM.call(v9927.eq, v9927, [b$$675], JAM.policy.p3)[0];
    var f$$180 = JAM.call(a$$663.data, a$$663, [e$$345, "load.tabs"], JAM.policy.p3);
    JAM.call(this.abort, this, [], JAM.policy.p3);
    var v9928 = !f$$180;
    if (!v9928) {
      var v26577 = this.element;
      var v15677 = JAM.call(v26577.queue, v26577, ["tabs"], JAM.policy.p3).length !== 0;
      if (v15677) {
        v15677 = JAM.call(a$$663.data, a$$663, [e$$345, "cache.tabs"], JAM.policy.p3);
      }
      v9928 = v15677;
    }
    if (v9928) {
      var v3299 = this.element;
      JAM.call(v3299.dequeue, v3299, ["tabs"], JAM.policy.p3);
      return;
    }
    var v9929 = this.lis;
    var v3301 = JAM.call(v9929.eq, v9929, [b$$675], JAM.policy.p3);
    JAM.call(v3301.addClass, v3301, ["ui-state-processing"], JAM.policy.p3);
    if (d$$402.spinner) {
      var g$$195 = JAM.call(a$$663, null, ["span", e$$345], JAM.policy.p3);
      var v3302 = JAM.call(g$$195.data, g$$195, ["label.tabs", JAM.call(g$$195.html, g$$195, [], JAM.policy.p3)], JAM.policy.p3);
      JAM.call(v3302.html, v3302, [d$$402.spinner], JAM.policy.p3);
    }
    var v31178 = JAM.call(a$$663.ajax, a$$663, [JAM.call(a$$663.extend, a$$663, [{}, d$$402.ajaxOptions, {url:f$$180, success:v1832, error:v1833}], JAM.policy.p3)], JAM.policy.p3);
    this.xhr = v31178;
    var v15680 = c$$543.element;
    JAM.call(v15680.dequeue, v15680, ["tabs"], JAM.policy.p3);
    return this;
  }
  function v1831(a$$681) {
    a$$681 = JAM.call(this._getIndex, this, [a$$681], JAM.policy.p3);
    if (a$$681 == -1) {
      var v9931 = this.options.collapsible;
      if (v9931) {
        v9931 = this.options.selected != -1;
      }
      if (v9931) {
        a$$681 = this.options.selected;
      } else {
        return this;
      }
    }
    var v15683 = this.anchors;
    var v9932 = JAM.call(v15683.eq, v15683, [a$$681], JAM.policy.p3);
    JAM.call(v9932.trigger, v9932, [this.options.event + ".tabs"], JAM.policy.p3);
    return this;
  }
  function v1830(a$$680) {
    a$$680 = JAM.call(this._getIndex, this, [a$$680], JAM.policy.p3);
    var b$$674 = this;
    var c$$542 = this.options;
    var v9934 = a$$680 != c$$542.selected;
    if (v9934) {
      var v28015 = this.lis;
      var v26578 = JAM.call(v28015.eq, v28015, [a$$680], JAM.policy.p3);
      JAM.call(v26578.addClass, v26578, ["ui-state-disabled"], JAM.policy.p3);
      var v26579 = c$$542.disabled;
      JAM.call(v26579.push, v26579, [a$$680], JAM.policy.p3);
      var v24520 = c$$542.disabled;
      JAM.call(v24520.sort, v24520, [], JAM.policy.p3);
      JAM.call(this._trigger, this, ["disable", null, JAM.call(this._ui, this, [this.anchors[a$$680], this.panels[a$$680]], JAM.policy.p3)], JAM.policy.p3);
    }
    return this;
  }
  function v1829(b$$673) {
    function v1828(a$$679, c$$541) {
      return a$$679 != b$$673;
    }
    b$$673 = JAM.call(this._getIndex, this, [b$$673], JAM.policy.p3);
    var c$$540 = this.options;
    if (JAM.call(a$$663.inArray, a$$663, [b$$673, c$$540.disabled], JAM.policy.p3) == -1) {
      return;
    }
    var v24523 = this.lis;
    var v19972 = JAM.call(v24523.eq, v24523, [b$$673], JAM.policy.p3);
    JAM.call(v19972.removeClass, v19972, ["ui-state-disabled"], JAM.policy.p3);
    var v19973 = c$$540;
    var v31179 = JAM.call(a$$663.grep, a$$663, [c$$540.disabled, v1828], JAM.policy.p3);
    v19973.disabled = v31179;
    JAM.call(this._trigger, this, ["enable", null, JAM.call(this._ui, this, [this.anchors[b$$673], this.panels[b$$673]], JAM.policy.p3)], JAM.policy.p3);
    return this;
  }
  function v1827(b$$672) {
    function v1826(a$$678, c$$539) {
      var v3309;
      if (a$$678 >= b$$672) {
        v3309 = a$$678 = a$$678 - 1;
      } else {
        v3309 = a$$678;
      }
      return v3309;
    }
    function v1825(a$$677, c$$538) {
      return a$$677 != b$$672;
    }
    b$$672 = JAM.call(this._getIndex, this, [b$$672], JAM.policy.p3);
    var c$$537 = this.options;
    var v9937 = this.lis;
    var v3310 = JAM.call(v9937.eq, v9937, [b$$672], JAM.policy.p3);
    var d$$401 = JAM.call(v3310.remove, v3310, [], JAM.policy.p3);
    var v9938 = this.panels;
    var v3311 = JAM.call(v9938.eq, v9938, [b$$672], JAM.policy.p3);
    var e$$344 = JAM.call(v3311.remove, v3311, [], JAM.policy.p3);
    var v26582 = JAM.call(d$$401.hasClass, d$$401, ["ui-tabs-selected"], JAM.policy.p3);
    if (v26582) {
      v26582 = this.anchors.length > 1;
    }
    var v24527 = v26582;
    if (v24527) {
      var v28962;
      if (b$$672 + 1 < this.anchors.length) {
        v28962 = 1;
      } else {
        v28962 = -1;
      }
      JAM.call(this.select, this, [b$$672 + v28962], JAM.policy.p3);
    }
    var v24528 = c$$537;
    var v31180 = JAM.call(a$$663.map, a$$663, [JAM.call(a$$663.grep, a$$663, [c$$537.disabled, v1825], JAM.policy.p3), v1826], JAM.policy.p3);
    v24528.disabled = v31180;
    JAM.call(this._tabify, this, [], JAM.policy.p3);
    JAM.call(this._trigger, this, ["remove", null, JAM.call(this._ui, this, [JAM.call(d$$401.find, d$$401, ["a"], JAM.policy.p3)[0], e$$344[0]], JAM.policy.p3)], JAM.policy.p3);
    return this;
  }
  function v1824(c$$536, d$$400, e$$343) {
    function v1823() {
      JAM.call(f$$179._trigger, f$$179, ["show", null, JAM.call(f$$179._ui, f$$179, [f$$179.anchors[0], f$$179.panels[0]], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    function v1822(a$$676, b$$671) {
      var v3313;
      if (a$$676 >= e$$343) {
        v3313 = a$$676 = a$$676 + 1;
      } else {
        v3313 = a$$676;
      }
      return v3313;
    }
    var v3314 = e$$343 === b$$652;
    if (v3314) {
      e$$343 = this.anchors.length;
    }
    var f$$179 = this;
    var g$$194 = this.options;
    var v15691 = g$$194.tabTemplate;
    var v9943 = JAM.call(v15691.replace, v15691, [/#\{href\}/g, c$$536], JAM.policy.p3);
    var h$$160 = JAM.call(a$$663, null, [JAM.call(v9943.replace, v9943, [/#\{label\}/g, d$$400], JAM.policy.p3)], JAM.policy.p3);
    var v3316;
    if (JAM.call(c$$536.indexOf, c$$536, ["#"], JAM.policy.p3)) {
      v3316 = JAM.call(this._tabId, this, [JAM.call(a$$663, null, ["a", h$$160], JAM.policy.p3)[0]], JAM.policy.p3);
    } else {
      v3316 = JAM.call(c$$536.replace, c$$536, ["#", ""], JAM.policy.p3);
    }
    var i$$209 = v3316;
    var v3317 = JAM.call(h$$160.addClass, h$$160, ["ui-state-default ui-corner-top"], JAM.policy.p3);
    JAM.call(v3317.data, v3317, ["destroy.tabs", !0], JAM.policy.p3);
    var v3319 = f$$179.element;
    var j$$108 = JAM.call(v3319.find, v3319, ["#" + i$$209], JAM.policy.p3);
    var v28963 = j$$108.length;
    if (!v28963) {
      var v29985 = JAM.call(a$$663, null, [g$$194.panelTemplate], JAM.policy.p3);
      var v29602 = JAM.call(v29985.attr, v29985, ["id", i$$209], JAM.policy.p3);
      j$$108 = JAM.call(v29602.data, v29602, ["destroy.tabs", !0], JAM.policy.p3);
    }
    JAM.call(j$$108.addClass, j$$108, ["ui-tabs-panel ui-widget-content ui-corner-bottom ui-tabs-hide"], JAM.policy.p3);
    var v28019;
    if (e$$343 >= this.lis.length) {
      JAM.call(h$$160.appendTo, h$$160, [this.list], JAM.policy.p3);
      v28019 = JAM.call(j$$108.appendTo, j$$108, [this.list[0].parentNode], JAM.policy.p3);
    } else {
      JAM.call(h$$160.insertBefore, h$$160, [this.lis[e$$343]], JAM.policy.p3);
      v28019 = JAM.call(j$$108.insertBefore, j$$108, [this.panels[e$$343]], JAM.policy.p3);
    }
    v28019;
    var v26585 = g$$194;
    var v31181 = JAM.call(a$$663.map, a$$663, [g$$194.disabled, v1822], JAM.policy.p3);
    v26585.disabled = v31181;
    JAM.call(this._tabify, this, [], JAM.policy.p3);
    var v19978 = this.anchors.length == 1;
    if (v19978) {
      g$$194.selected = 0;
      JAM.call(h$$160.addClass, h$$160, ["ui-tabs-selected ui-state-active"], JAM.policy.p3);
      JAM.call(j$$108.removeClass, j$$108, ["ui-tabs-hide"], JAM.policy.p3);
      var v28021 = this.element;
      JAM.call(v28021.queue, v28021, ["tabs", v1823], JAM.policy.p3);
      JAM.call(this.load, this, [0], JAM.policy.p3);
    }
    JAM.call(this._trigger, this, ["add", null, JAM.call(this._ui, this, [this.anchors[e$$343], this.panels[e$$343]], JAM.policy.p3)], JAM.policy.p3);
    return this;
  }
  function v1821() {
    function v1820() {
      var v3321;
      if (JAM.call(a$$663.data, a$$663, [this, "destroy.tabs"], JAM.policy.p3)) {
        var v9946 = JAM.call(a$$663, null, [this], JAM.policy.p3);
        v3321 = JAM.call(v9946.remove, v9946, [], JAM.policy.p3);
      } else {
        var v9947 = JAM.call(a$$663, null, [this], JAM.policy.p3);
        var v15694 = ["ui-state-default", "ui-corner-top", "ui-tabs-selected", "ui-state-active", "ui-state-hover", "ui-state-focus", "ui-state-disabled", "ui-tabs-panel", "ui-widget-content", "ui-corner-bottom", "ui-tabs-hide"];
        v3321 = JAM.call(v9947.removeClass, v9947, [JAM.call(v15694.join, v15694, [" "], JAM.policy.p3)], JAM.policy.p3);
      }
      v3321;
      return;
    }
    function v1819() {
      function v1818(a$$675, b$$670) {
        JAM.call(c$$535.removeData, c$$535, [b$$670 + ".tabs"], JAM.policy.p3);
        return;
      }
      var b$$669 = JAM.call(a$$663.data, a$$663, [this, "href.tabs"], JAM.policy.p3);
      if (b$$669) {
        this.href = b$$669;
      }
      var v3323 = JAM.call(a$$663, null, [this], JAM.policy.p3);
      var c$$535 = JAM.call(v3323.unbind, v3323, [".tabs"], JAM.policy.p3);
      JAM.call(a$$663.each, a$$663, [["href", "load", "cache"], v1818], JAM.policy.p3);
      return;
    }
    var b$$668 = this.options;
    JAM.call(this.abort, this, [], JAM.policy.p3);
    var v29610 = this.element;
    var v28965 = JAM.call(v29610.unbind, v29610, [".tabs"], JAM.policy.p3);
    var v28022 = JAM.call(v28965.removeClass, v28965, ["ui-tabs ui-widget ui-widget-content ui-corner-all ui-tabs-collapsible"], JAM.policy.p3);
    JAM.call(v28022.removeData, v28022, ["tabs"], JAM.policy.p3);
    var v26587 = this.list;
    JAM.call(v26587.removeClass, v26587, ["ui-tabs-nav ui-helper-reset ui-helper-clearfix ui-widget-header ui-corner-all"], JAM.policy.p3);
    var v24533 = this.anchors;
    JAM.call(v24533.each, v24533, [v1819], JAM.policy.p3);
    var v26588 = this.lis;
    var v24534 = JAM.call(v26588.unbind, v26588, [".tabs"], JAM.policy.p3);
    var v19981 = JAM.call(v24534.add, v24534, [this.panels], JAM.policy.p3);
    JAM.call(v19981.each, v19981, [v1820], JAM.policy.p3);
    var v15695 = b$$668.cookie;
    if (v15695) {
      JAM.call(this._cookie, this, [null, b$$668.cookie], JAM.policy.p3);
    }
    return this;
  }
  function v1817(a$$674) {
    var v9950 = typeof a$$674 == "string";
    if (v9950) {
      var v15697 = this.anchors;
      var v19983 = this.anchors;
      a$$674 = JAM.call(v15697.index, v15697, [JAM.call(v19983.filter, v19983, ["[href$='" + a$$674 + "']"], JAM.policy.p3)], JAM.policy.p3);
    }
    return a$$674;
  }
  function v1816(c$$528) {
    function v1815() {
      return!1;
    }
    function v1814() {
      function v1813() {
        JAM.call(n$$95, null, [b$$667, g$$193], JAM.policy.p3);
        return;
      }
      function v1812() {
        JAM.call(o$$25, null, [b$$667, f$$178], JAM.policy.p3);
        return;
      }
      function v1811() {
        JAM.call(n$$95, null, [b$$667, g$$193], JAM.policy.p3);
        return;
      }
      function v1810() {
        JAM.call(o$$25, null, [b$$667, f$$178], JAM.policy.p3);
        return;
      }
      var b$$667 = this;
      var v3325 = JAM.call(a$$663, null, [b$$667], JAM.policy.p3);
      var c$$534 = JAM.call(v3325.closest, v3325, ["li"], JAM.policy.p3);
      var v3326 = d$$399.panels;
      var f$$178 = JAM.call(v3326.filter, v3326, [":not(.ui-tabs-hide)"], JAM.policy.p3);
      var v3327 = d$$399.element;
      var g$$193 = JAM.call(v3327.find, v3327, [JAM.call(d$$399._sanitizeSelector, d$$399, [b$$667.hash], JAM.policy.p3)], JAM.policy.p3);
      var v26589 = JAM.call(c$$534.hasClass, c$$534, ["ui-tabs-selected"], JAM.policy.p3);
      if (v26589) {
        v26589 = !e$$342.collapsible;
      }
      var v24537 = v26589;
      if (!v24537) {
        v24537 = JAM.call(c$$534.hasClass, c$$534, ["ui-state-disabled"], JAM.policy.p3);
      }
      var v19985 = v24537;
      if (!v19985) {
        v19985 = JAM.call(c$$534.hasClass, c$$534, ["ui-state-processing"], JAM.policy.p3);
      }
      var v15699 = v19985;
      if (!v15699) {
        var v24539 = d$$399.panels;
        v15699 = JAM.call(v24539.filter, v24539, [":animated"], JAM.policy.p3).length;
      }
      var v9952 = v15699;
      if (!v9952) {
        v9952 = JAM.call(d$$399._trigger, d$$399, ["select", null, JAM.call(d$$399._ui, d$$399, [this, g$$193[0]], JAM.policy.p3)], JAM.policy.p3) === !1;
      }
      if (v9952) {
        JAM.call(this.blur, this, [], JAM.policy.p3);
        return!1;
      }
      var v9953 = e$$342;
      var v15703 = d$$399.anchors;
      var v31182 = JAM.call(v15703.index, v15703, [this], JAM.policy.p3);
      v9953.selected = v31182;
      JAM.call(d$$399.abort, d$$399, [], JAM.policy.p3);
      if (e$$342.collapsible) {
        if (JAM.call(c$$534.hasClass, c$$534, ["ui-tabs-selected"], JAM.policy.p3)) {
          e$$342.selected = -1;
          var v24541 = e$$342.cookie;
          if (v24541) {
            JAM.call(d$$399._cookie, d$$399, [e$$342.selected, e$$342.cookie], JAM.policy.p3);
          }
          var v24542 = d$$399.element;
          var v19989 = JAM.call(v24542.queue, v24542, ["tabs", v1810], JAM.policy.p3);
          JAM.call(v19989.dequeue, v19989, ["tabs"], JAM.policy.p3);
          JAM.call(this.blur, this, [], JAM.policy.p3);
          return!1;
        }
        if (!f$$178.length) {
          var v24543 = e$$342.cookie;
          if (v24543) {
            JAM.call(d$$399._cookie, d$$399, [e$$342.selected, e$$342.cookie], JAM.policy.p3);
          }
          var v24544 = d$$399.element;
          JAM.call(v24544.queue, v24544, ["tabs", v1811], JAM.policy.p3);
          var v24545 = d$$399.anchors;
          JAM.call(d$$399.load, d$$399, [JAM.call(v24545.index, v24545, [this], JAM.policy.p3)], JAM.policy.p3);
          JAM.call(this.blur, this, [], JAM.policy.p3);
          return!1;
        }
      }
      var v3333 = e$$342.cookie;
      if (v3333) {
        JAM.call(d$$399._cookie, d$$399, [e$$342.selected, e$$342.cookie], JAM.policy.p3);
      }
      if (g$$193.length) {
        var v15704 = f$$178.length;
        if (v15704) {
          var v19991 = d$$399.element;
          JAM.call(v19991.queue, v19991, ["tabs", v1812], JAM.policy.p3);
        }
        var v15705 = d$$399.element;
        JAM.call(v15705.queue, v15705, ["tabs", v1813], JAM.policy.p3);
        var v15706 = d$$399.anchors;
        JAM.call(d$$399.load, d$$399, [JAM.call(v15706.index, v15706, [this], JAM.policy.p3)], JAM.policy.p3);
      } else {
        throw "jQuery UI Tabs: Mismatching fragment identifier.";
      }
      var v3335 = a$$663.browser.msie;
      if (v3335) {
        JAM.call(this.blur, this, [], JAM.policy.p3);
      }
      return;
    }
    function v1809(a$$673, b$$666, c$$533) {
      var v15707 = d$$399.lis;
      JAM.call(v15707.removeClass, v15707, ["ui-tabs-selected ui-state-active"], JAM.policy.p3);
      JAM.call(b$$666.addClass, b$$666, ["ui-tabs-hide"], JAM.policy.p3);
      var v9959 = d$$399.element;
      JAM.call(v9959.dequeue, v9959, ["tabs"], JAM.policy.p3);
      return;
    }
    function v1808(a$$672, b$$665) {
      function v1807() {
        var v19992 = d$$399.lis;
        JAM.call(v19992.removeClass, v19992, ["ui-tabs-selected ui-state-active"], JAM.policy.p3);
        JAM.call(b$$665.addClass, b$$665, ["ui-tabs-hide"], JAM.policy.p3);
        JAM.call(m$$49, null, [b$$665, k$$74], JAM.policy.p3);
        var v9960 = d$$399.element;
        JAM.call(v9960.dequeue, v9960, ["tabs"], JAM.policy.p3);
        return;
      }
      var v9961 = k$$74.duration;
      if (!v9961) {
        v9961 = "normal";
      }
      JAM.call(b$$665.animate, b$$665, [k$$74, v9961, v1807], JAM.policy.p3);
      return;
    }
    function v1806(b$$664, c$$532) {
      var v19993 = JAM.call(a$$663, null, [b$$664], JAM.policy.p3);
      var v15709 = JAM.call(v19993.closest, v19993, ["li"], JAM.policy.p3);
      JAM.call(v15709.addClass, v15709, ["ui-tabs-selected ui-state-active"], JAM.policy.p3);
      JAM.call(c$$532.removeClass, c$$532, ["ui-tabs-hide"], JAM.policy.p3);
      JAM.call(d$$399._trigger, d$$399, ["show", null, JAM.call(d$$399._ui, d$$399, [b$$664, c$$532[0]], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    function v1805(b$$663, c$$531) {
      function v1804() {
        JAM.call(m$$49, null, [c$$531, l$$80], JAM.policy.p3);
        JAM.call(d$$399._trigger, d$$399, ["show", null, JAM.call(d$$399._ui, d$$399, [b$$663, c$$531[0]], JAM.policy.p3)], JAM.policy.p3);
        return;
      }
      var v15712 = JAM.call(a$$663, null, [b$$663], JAM.policy.p3);
      var v9964 = JAM.call(v15712.closest, v15712, ["li"], JAM.policy.p3);
      JAM.call(v9964.addClass, v9964, ["ui-tabs-selected ui-state-active"], JAM.policy.p3);
      var v15713 = JAM.call(c$$531.hide, c$$531, [], JAM.policy.p3);
      var v9965 = JAM.call(v15713.removeClass, v15713, ["ui-tabs-hide"], JAM.policy.p3);
      var v15714 = l$$80.duration;
      if (!v15714) {
        v15714 = "normal";
      }
      JAM.call(v9965.animate, v9965, [l$$80, v15714, v1804], JAM.policy.p3);
      return;
    }
    function v1803() {
      var v3337 = JAM.call(a$$663, null, [this], JAM.policy.p3);
      var b$$inline_78 = JAM.call(v3337.closest, v3337, ["li"], JAM.policy.p3);
      JAM.call(b$$inline_78.removeClass, b$$inline_78, ["ui-state-" + "focus"], JAM.policy.p3);
      return;
    }
    function v1802() {
      var v9967 = JAM.call(a$$663, null, [this], JAM.policy.p3);
      JAM.call(i$$207, null, ["focus", JAM.call(v9967.closest, v9967, ["li"], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    function v1801() {
      var b$$inline_75 = JAM.call(a$$663, null, [this], JAM.policy.p3);
      JAM.call(b$$inline_75.removeClass, b$$inline_75, ["ui-state-" + "hover"], JAM.policy.p3);
      return;
    }
    function v1800() {
      JAM.call(i$$207, null, ["hover", JAM.call(a$$663, null, [this], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    function v1799(a$$670, b$$661) {
      var v3342 = JAM.call(b$$661.is, b$$661, [":not(.ui-state-disabled)"], JAM.policy.p3);
      if (v3342) {
        JAM.call(b$$661.addClass, b$$661, ["ui-state-" + a$$670], JAM.policy.p3);
      }
      return;
    }
    function v1798() {
      var v15715 = d$$399.lis;
      var v9969 = JAM.call(v15715.add, v15715, [d$$399.anchors], JAM.policy.p3);
      JAM.call(v9969.unbind, v9969, [".tabs"], JAM.policy.p3);
      d$$399.lis = d$$399.anchors = d$$399.panels = null;
      return;
    }
    function v1797() {
      var v9970 = d$$399.anchors[e$$342.selected];
      var v19995 = d$$399.element;
      JAM.call(d$$399._trigger, d$$399, ["show", null, JAM.call(d$$399._ui, d$$399, [v9970, JAM.call(v19995.find, v19995, [JAM.call(d$$399._sanitizeSelector, d$$399, [d$$399.anchors[e$$342.selected].hash], JAM.policy.p3)], JAM.policy.p3)[0]], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    function v1796(a$$669, b$$660) {
      var v3344 = d$$399.lis;
      return JAM.call(v3344.index, v3344, [a$$669], JAM.policy.p3);
    }
    function v1795(a$$668, b$$659) {
      if (b$$659.hash == location.hash) {
        e$$342.selected = a$$668;
        return!1;
      }
      return;
    }
    function v1794(b$$658, c$$530) {
      var v3346 = JAM.call(a$$663, null, [c$$530], JAM.policy.p3);
      var g$$192 = JAM.call(v3346.attr, v3346, ["href"], JAM.policy.p3);
      var h$$159 = JAM.call(g$$192.split, g$$192, ["#"], JAM.policy.p3)[0];
      var i$$208;
      var v9974 = h$$159;
      if (v9974) {
        var v19997 = h$$159;
        var v26596 = JAM.call(location.toString, location, [], JAM.policy.p3);
        var v15720 = v19997 === JAM.call(v26596.split, v26596, ["#"], JAM.policy.p3)[0];
        if (!v15720) {
          var v19999 = i$$208 = JAM.call(a$$663, null, ["base"], JAM.policy.p3)[0];
          if (v19999) {
            v19999 = h$$159 === i$$208.href;
          }
          v15720 = v19999;
        }
        v9974 = v15720;
      }
      var v3348 = v9974;
      if (v3348) {
        g$$192 = c$$530.hash;
        c$$530.href = g$$192;
      }
      if (JAM.call(f$$177.test, f$$177, [g$$192], JAM.policy.p3)) {
        var v3349 = d$$399;
        var v9975 = d$$399.panels;
        var v15721 = d$$399.element;
        var v31183 = JAM.call(v9975.add, v9975, [JAM.call(v15721.find, v15721, [JAM.call(d$$399._sanitizeSelector, d$$399, [g$$192], JAM.policy.p3)], JAM.policy.p3)], JAM.policy.p3);
        v3349.panels = v31183;
      } else {
        var v9977 = g$$192;
        if (v9977) {
          v9977 = g$$192 !== "#";
        }
        if (v9977) {
          JAM.call(a$$663.data, a$$663, [c$$530, "href.tabs", g$$192], JAM.policy.p3);
          JAM.call(a$$663.data, a$$663, [c$$530, "load.tabs", JAM.call(g$$192.replace, g$$192, [/#.*$/, ""], JAM.policy.p3)], JAM.policy.p3);
          var j$$107 = JAM.call(d$$399._tabId, d$$399, [c$$530], JAM.policy.p3);
          c$$530.href = "#" + j$$107;
          var v3350 = d$$399.element;
          var k$$75 = JAM.call(v3350.find, v3350, ["#" + j$$107], JAM.policy.p3);
          var v9979 = k$$75.length;
          if (!v9979) {
            var v26597 = JAM.call(a$$663, null, [e$$342.panelTemplate], JAM.policy.p3);
            var v24550 = JAM.call(v26597.attr, v26597, ["id", j$$107], JAM.policy.p3);
            var v20001 = JAM.call(v24550.addClass, v24550, ["ui-tabs-panel ui-widget-content ui-corner-bottom"], JAM.policy.p3);
            var v24551 = d$$399.panels[b$$658 - 1];
            if (!v24551) {
              v24551 = d$$399.list;
            }
            k$$75 = JAM.call(v20001.insertAfter, v20001, [v24551], JAM.policy.p3);
            JAM.call(k$$75.data, k$$75, ["destroy.tabs", !0], JAM.policy.p3);
          }
          var v9980 = d$$399;
          var v15724 = d$$399.panels;
          var v31184 = JAM.call(v15724.add, v15724, [k$$75], JAM.policy.p3);
          v9980.panels = v31184;
        } else {
          var v3352 = e$$342.disabled;
          JAM.call(v3352.push, v3352, [b$$658], JAM.policy.p3);
        }
      }
      return;
    }
    function v1793() {
      return JAM.call(a$$663, null, ["a", this], JAM.policy.p3)[0];
    }
    function m$$49(b$$657, c$$529) {
      JAM.call(b$$657.css, b$$657, ["display", ""], JAM.policy.p3);
      var v15725 = !a$$663.support.opacity;
      if (v15725) {
        v15725 = c$$529.opacity;
      }
      var v9981 = v15725;
      if (v9981) {
        var v15726 = b$$657[0].style;
        JAM.call(v15726.removeAttribute, v15726, ["filter"], JAM.policy.p3);
      }
      return;
    }
    var d$$399 = this;
    var e$$342 = this.options;
    var f$$177 = /^#.+/;
    var v29611 = this.element;
    var v28966 = JAM.call(v29611.find, v29611, ["ol,ul"], JAM.policy.p3);
    var v31185 = JAM.call(v28966.eq, v28966, [0], JAM.policy.p3);
    this.list = v31185;
    var v31186 = JAM.call(a$$663, null, [" > li:has(a[href])", this.list], JAM.policy.p3);
    this.lis = v31186;
    var v28027 = this.lis;
    var v31187 = JAM.call(v28027.map, v28027, [v1793], JAM.policy.p3);
    this.anchors = v31187;
    var v31188 = JAM.call(a$$663, null, [[]], JAM.policy.p3);
    this.panels = v31188;
    var v24553 = this.anchors;
    JAM.call(v24553.each, v24553, [v1794], JAM.policy.p3);
    var v20006;
    if (c$$528) {
      var v30926 = this.element;
      JAM.call(v30926.addClass, v30926, ["ui-tabs ui-widget ui-widget-content ui-corner-all"], JAM.policy.p3);
      var v30927 = this.list;
      JAM.call(v30927.addClass, v30927, ["ui-tabs-nav ui-helper-reset ui-helper-clearfix ui-widget-header ui-corner-all"], JAM.policy.p3);
      var v30869 = this.lis;
      JAM.call(v30869.addClass, v30869, ["ui-state-default ui-corner-top"], JAM.policy.p3);
      var v30779 = this.panels;
      JAM.call(v30779.addClass, v30779, ["ui-tabs-panel ui-widget-content ui-corner-bottom"], JAM.policy.p3);
      var v30644;
      if (e$$342.selected === b$$652) {
        var v30974 = location.hash;
        if (v30974) {
          var v31003 = this.anchors;
          JAM.call(v31003.each, v31003, [v1795], JAM.policy.p3);
        }
        var v31004 = typeof e$$342.selected != "number";
        if (v31004) {
          v31004 = e$$342.cookie;
        }
        var v30975 = v31004;
        if (v30975) {
          var v31005 = e$$342;
          var v31189 = JAM.call(parseInt, null, [JAM.call(d$$399._cookie, d$$399, [], JAM.policy.p3), 10], JAM.policy.p3);
          v31005.selected = v31189;
        }
        var v30976 = typeof e$$342.selected != "number";
        if (v30976) {
          var v31032 = this.lis;
          v30976 = JAM.call(v31032.filter, v31032, [".ui-tabs-selected"], JAM.policy.p3).length;
        }
        var v30928 = v30976;
        if (v30928) {
          var v30977 = e$$342;
          var v31008 = this.lis;
          var v31033 = this.lis;
          var v31190 = JAM.call(v31008.index, v31008, [JAM.call(v31033.filter, v31033, [".ui-tabs-selected"], JAM.policy.p3)], JAM.policy.p3);
          v30977.selected = v31190;
        }
        var v30871 = e$$342.selected;
        if (!v30871) {
          var v30929;
          if (this.lis.length) {
            v30929 = 0;
          } else {
            v30929 = -1;
          }
          v30871 = v30929;
        }
        v30644 = e$$342.selected = v30871;
      } else {
        var v30780 = e$$342.selected === null;
        if (v30780) {
          v30780 = e$$342.selected = -1;
        }
        v30644 = v30780;
      }
      v30644;
      var v30484;
      var v30873 = e$$342.selected >= 0;
      if (v30873) {
        v30873 = this.anchors[e$$342.selected];
      }
      var v30782 = v30873;
      if (!v30782) {
        v30782 = e$$342.selected < 0;
      }
      if (v30782) {
        v30484 = e$$342.selected;
      } else {
        v30484 = 0;
      }
      e$$342.selected = v30484;
      var v30256 = e$$342;
      var v30783 = e$$342.disabled;
      var v30934 = this.lis;
      var v30485 = JAM.call(a$$663.unique, a$$663, [JAM.call(v30783.concat, v30783, [JAM.call(a$$663.map, a$$663, [JAM.call(v30934.filter, v30934, [".ui-state-disabled"], JAM.policy.p3), v1796], JAM.policy.p3)], JAM.policy.p3)], JAM.policy.p3);
      var v31191 = JAM.call(v30485.sort, v30485, [], JAM.policy.p3);
      v30256.disabled = v31191;
      var v29990 = JAM.call(a$$663.inArray, a$$663, [e$$342.selected, e$$342.disabled], JAM.policy.p3) != -1;
      if (v29990) {
        var v30258 = e$$342.disabled;
        JAM.call(v30258.splice, v30258, [JAM.call(a$$663.inArray, a$$663, [e$$342.selected, e$$342.disabled], JAM.policy.p3), 1], JAM.policy.p3);
      }
      var v29612 = this.panels;
      JAM.call(v29612.addClass, v29612, ["ui-tabs-hide"], JAM.policy.p3);
      var v28968 = this.lis;
      JAM.call(v28968.removeClass, v28968, ["ui-tabs-selected ui-state-active"], JAM.policy.p3);
      var v28969 = e$$342.selected >= 0;
      if (v28969) {
        v28969 = this.anchors.length;
      }
      var v28028 = v28969;
      if (v28028) {
        var v30490 = d$$399.element;
        var v30260 = JAM.call(v30490.find, v30490, [JAM.call(d$$399._sanitizeSelector, d$$399, [d$$399.anchors[e$$342.selected].hash], JAM.policy.p3)], JAM.policy.p3);
        JAM.call(v30260.removeClass, v30260, ["ui-tabs-hide"], JAM.policy.p3);
        var v30492 = this.lis;
        var v30261 = JAM.call(v30492.eq, v30492, [e$$342.selected], JAM.policy.p3);
        JAM.call(v30261.addClass, v30261, ["ui-tabs-selected ui-state-active"], JAM.policy.p3);
        var v29991 = d$$399.element;
        JAM.call(v29991.queue, v29991, ["tabs", v1797], JAM.policy.p3);
        JAM.call(this.load, this, [e$$342.selected], JAM.policy.p3);
      }
      var v26601 = JAM.call(a$$663, null, [window], JAM.policy.p3);
      v20006 = JAM.call(v26601.bind, v26601, ["unload", v1798], JAM.policy.p3);
    } else {
      var v24554 = e$$342;
      var v26602 = this.lis;
      var v28029 = this.lis;
      var v31192 = JAM.call(v26602.index, v26602, [JAM.call(v28029.filter, v28029, [".ui-tabs-selected"], JAM.policy.p3)], JAM.policy.p3);
      v20006 = v24554.selected = v31192;
    }
    v20006;
    var v15727 = this.element;
    var v20007;
    if (e$$342.collapsible) {
      v20007 = "addClass";
    } else {
      v20007 = "removeClass";
    }
    JAM.call(v15727[v20007], v15727, ["ui-tabs-collapsible"], JAM.policy.p3);
    var v9982 = e$$342.cookie;
    if (v9982) {
      JAM.call(this._cookie, this, [e$$342.selected, e$$342.cookie], JAM.policy.p3);
    }
    var g$$191 = 0;
    var h$$158;
    var v3358 = h$$158 = this.lis[g$$191];
    for (;v3358;) {
      var v3356 = JAM.call(a$$663, null, [h$$158], JAM.policy.p3);
      var v9984;
      var v20008 = JAM.call(a$$663.inArray, a$$663, [g$$191, e$$342.disabled], JAM.policy.p3) != -1;
      if (v20008) {
        var v26605 = JAM.call(a$$663, null, [h$$158], JAM.policy.p3);
        v20008 = !JAM.call(v26605.hasClass, v26605, ["ui-tabs-selected"], JAM.policy.p3);
      }
      if (v20008) {
        v9984 = "addClass";
      } else {
        v9984 = "removeClass";
      }
      JAM.call(v3356[v9984], v3356, ["ui-state-disabled"], JAM.policy.p3);
      g$$191 = g$$191 + 1;
      v3358 = h$$158 = this.lis[g$$191];
    }
    var v9986 = e$$342.cache === !1;
    if (v9986) {
      var v15734 = this.anchors;
      JAM.call(v15734.removeData, v15734, ["cache.tabs"], JAM.policy.p3);
    }
    var v15735 = this.lis;
    var v9987 = JAM.call(v15735.add, v15735, [this.anchors], JAM.policy.p3);
    JAM.call(v9987.unbind, v9987, [".tabs"], JAM.policy.p3);
    if (e$$342.event !== "mouseover") {
      var i$$207 = v1799;
      var v20009 = this.lis;
      JAM.call(v20009.bind, v20009, ["mouseover.tabs", v1800], JAM.policy.p3);
      var v20010 = this.lis;
      JAM.call(v20010.bind, v20010, ["mouseout.tabs", v1801], JAM.policy.p3);
      var v15737 = this.anchors;
      JAM.call(v15737.bind, v15737, ["focus.tabs", v1802], JAM.policy.p3);
      var v9989 = this.anchors;
      JAM.call(v9989.bind, v9989, ["blur.tabs", v1803], JAM.policy.p3);
    }
    var k$$74;
    var l$$80;
    var v3360 = e$$342.fx;
    if (v3360) {
      var v9990;
      if (JAM.call(a$$663.isArray, a$$663, [e$$342.fx], JAM.policy.p3)) {
        k$$74 = e$$342.fx[0];
        v9990 = l$$80 = e$$342.fx[1];
      } else {
        v9990 = k$$74 = l$$80 = e$$342.fx;
      }
      v9990;
    }
    var v3361;
    if (l$$80) {
      v3361 = v1805;
    } else {
      v3361 = v1806;
    }
    var n$$95 = v3361;
    var v3362;
    if (k$$74) {
      v3362 = v1808;
    } else {
      v3362 = v1809;
    }
    var o$$25 = v3362;
    var v9991 = this.anchors;
    JAM.call(v9991.bind, v9991, [e$$342.event + ".tabs", v1814], JAM.policy.p3);
    var v9993 = this.anchors;
    JAM.call(v9993.bind, v9993, ["click.tabs", v1815], JAM.policy.p3);
    return;
  }
  function v1792() {
    function v1791() {
      var b$$656 = JAM.call(a$$663, null, [this], JAM.policy.p3);
      var v3363 = JAM.call(b$$656.html, b$$656, [JAM.call(b$$656.data, b$$656, ["label.tabs"], JAM.policy.p3)], JAM.policy.p3);
      JAM.call(v3363.removeData, v3363, ["label.tabs"], JAM.policy.p3);
      return;
    }
    var v20014 = this.lis;
    var v15740 = JAM.call(v20014.filter, v20014, [".ui-state-processing"], JAM.policy.p3);
    var v9995 = JAM.call(v15740.removeClass, v15740, ["ui-state-processing"], JAM.policy.p3);
    var v3364 = JAM.call(v9995.find, v9995, ["span:data(label.tabs)"], JAM.policy.p3);
    JAM.call(v3364.each, v3364, [v1791], JAM.policy.p3);
    return;
  }
  function v1790(a$$667, b$$655) {
    var v9996 = this.anchors;
    return{tab:a$$667, panel:b$$655, index:JAM.call(v9996.index, v9996, [a$$667], JAM.policy.p3)};
  }
  function v1789() {
    var v3366 = this.cookie;
    if (!v3366) {
      var v9997 = this.options.cookie.name;
      if (!v9997) {
        v9997 = "ui-tabs-" + (d$$398 = d$$398 + 1);
      }
      introspect(JAM.policy.p2) {
        v3366 = this.cookie = v9997;
      }
    }
    var b$$654 = v3366;
    var v3367 = a$$663.cookie;
    var v9999 = [b$$654];
    return JAM.call(v3367.apply, v3367, [null, JAM.call(v9999.concat, v9999, [JAM.call(a$$663.makeArray, a$$663, [arguments], JAM.policy.p3)], JAM.policy.p3)], JAM.policy.p3);
  }
  function v1788(a$$666) {
    return JAM.call(a$$666.replace, a$$666, [/:/g, "\\:"], JAM.policy.p3);
  }
  function v1787(a$$665) {
    var v10001 = a$$665.title;
    if (v10001) {
      var v20016 = a$$665.title;
      var v15744 = JAM.call(v20016.replace, v20016, [/\s/g, "_"], JAM.policy.p3);
      v10001 = JAM.call(v15744.replace, v15744, [/[^\w\u00c0-\uFFFF-]/g, ""], JAM.policy.p3);
    }
    var v3369 = v10001;
    if (!v3369) {
      v3369 = this.options.idPrefix + (c$$527 = c$$527 + 1);
    }
    return v3369;
  }
  function v1786(a$$664, b$$653) {
    if (a$$664 == "selected") {
      var v10005 = this.options.collapsible;
      if (v10005) {
        v10005 = b$$653 == this.options.selected;
      }
      if (v10005) {
        return;
      }
      JAM.call(this.select, this, [b$$653], JAM.policy.p3);
    } else {
      JAM.set(this.options, a$$664, b$$653, JAM.policy.p2);
      JAM.call(this._tabify, this, [], JAM.policy.p3);
    }
    return;
  }
  function v1785() {
    JAM.call(this._tabify, this, [!0], JAM.policy.p3);
    return;
  }
  var c$$527 = 0;
  var d$$398 = 0;
  JAM.call(a$$663.widget, a$$663, ["ui.tabs", {options:{add:null, ajaxOptions:null, cache:!1, cookie:null, collapsible:!1, disable:null, disabled:[], enable:null, event:"click", fx:null, idPrefix:"ui-tabs-", load:null, panelTemplate:"<div></div>", remove:null, select:null, show:null, spinner:"<em>Loading&#8230;</em>", tabTemplate:"<li><a href='#{href}'><span>#{label}</span></a></li>"}, _create:v1785, _setOption:v1786, _tabId:v1787, _sanitizeSelector:v1788, _cookie:v1789, _ui:v1790, _cleanup:v1792, 
  _tabify:v1816, _getIndex:v1817, destroy:v1821, add:v1824, remove:v1827, enable:v1829, disable:v1830, select:v1831, load:v1834, abort:v1835, url:v1836, length:v1837}], JAM.policy.p3);
  JAM.call(a$$663.extend, a$$663, [a$$663.ui.tabs, {version:"1.8.24"}], JAM.policy.p3);
  JAM.call(a$$663.extend, a$$663, [a$$663.ui.tabs.prototype, {rotation:null, rotate:v1842}], JAM.policy.p3);
  return;
}
function v1784(a$$649, b$$635) {
  function v1783() {
    function v1782(b$$651, i$$206) {
      f$$175 = (JAM.call(d$$397.values, d$$397, [b$$651], JAM.policy.p3) - d$$397.options.min) / (d$$397.options.max - d$$397.options.min) * 100;
      var v26608;
      if (d$$397.orientation === "horizontal") {
        v26608 = "left";
      } else {
        v26608 = "bottom";
      }
      JAM.set(g$$190, v26608, f$$175 + "%", JAM.policy.p2);
      var v24562 = JAM.call(a$$649, null, [this], JAM.policy.p3);
      var v20021 = JAM.call(v24562.stop, v24562, [1, 1], JAM.policy.p3);
      var v24563;
      if (e$$340) {
        v24563 = "animate";
      } else {
        v24563 = "css";
      }
      JAM.call(v20021[v24563], v20021, [g$$190, c$$526.animate], JAM.policy.p3);
      var v15752 = d$$397.options.range === !0;
      if (v15752) {
        var v20026;
        if (d$$397.orientation === "horizontal") {
          var v26610 = b$$651 === 0;
          if (v26610) {
            var v28974 = d$$397.range;
            var v28035 = JAM.call(v28974.stop, v28974, [1, 1], JAM.policy.p3);
            var v28975;
            if (e$$340) {
              v28975 = "animate";
            } else {
              v28975 = "css";
            }
            JAM.call(v28035[v28975], v28035, [{left:f$$175 + "%"}, c$$526.animate], JAM.policy.p3);
          }
          var v26611 = b$$651 === 1;
          if (v26611) {
            var v28039 = d$$397.range;
            var v28977;
            if (e$$340) {
              v28977 = "animate";
            } else {
              v28977 = "css";
            }
            v26611 = JAM.call(v28039[v28977], v28039, [{width:f$$175 - h$$157 + "%"}, {queue:!1, duration:c$$526.animate}], JAM.policy.p3);
          }
          v20026 = v26611;
        } else {
          var v26612 = b$$651 === 0;
          if (v26612) {
            var v28981 = d$$397.range;
            var v28043 = JAM.call(v28981.stop, v28981, [1, 1], JAM.policy.p3);
            var v28982;
            if (e$$340) {
              v28982 = "animate";
            } else {
              v28982 = "css";
            }
            JAM.call(v28043[v28982], v28043, [{bottom:f$$175 + "%"}, c$$526.animate], JAM.policy.p3);
          }
          var v26613 = b$$651 === 1;
          if (v26613) {
            var v28047 = d$$397.range;
            var v28984;
            if (e$$340) {
              v28984 = "animate";
            } else {
              v28984 = "css";
            }
            v26613 = JAM.call(v28047[v28984], v28047, [{height:f$$175 - h$$157 + "%"}, {queue:!1, duration:c$$526.animate}], JAM.policy.p3);
          }
          v20026 = v26613;
        }
        v20026;
      }
      h$$157 = f$$175;
      return;
    }
    var b$$650 = this.options.range;
    var c$$526 = this.options;
    var d$$397 = this;
    var v3374;
    if (this._animateOff) {
      v3374 = !1;
    } else {
      v3374 = c$$526.animate;
    }
    var e$$340 = v3374;
    var f$$175;
    var g$$190 = {};
    var h$$157;
    var i$$205;
    var j$$105;
    var k$$73;
    var v3375;
    var v15753 = this.options.values;
    if (v15753) {
      v15753 = this.options.values.length;
    }
    if (v15753) {
      var v10010 = this.handles;
      v3375 = JAM.call(v10010.each, v10010, [v1782], JAM.policy.p3);
    } else {
      i$$205 = JAM.call(this.value, this, [], JAM.policy.p3);
      j$$105 = this.options.min;
      k$$73 = this.options.max;
      var v29618;
      if (k$$73 !== j$$105) {
        v29618 = (i$$205 - j$$105) / (k$$73 - j$$105) * 100;
      } else {
        v29618 = 0;
      }
      f$$175 = v29618;
      var v29619;
      if (d$$397.orientation === "horizontal") {
        v29619 = "left";
      } else {
        v29619 = "bottom";
      }
      JAM.set(g$$190, v29619, f$$175 + "%", JAM.policy.p2);
      var v28989 = this.handle;
      var v28051 = JAM.call(v28989.stop, v28989, [1, 1], JAM.policy.p3);
      var v28990;
      if (e$$340) {
        v28990 = "animate";
      } else {
        v28990 = "css";
      }
      JAM.call(v28051[v28990], v28051, [g$$190, c$$526.animate], JAM.policy.p3);
      var v28054 = b$$650 === "min";
      if (v28054) {
        v28054 = this.orientation === "horizontal";
      }
      var v26614 = v28054;
      if (v26614) {
        var v28992 = this.range;
        var v28055 = JAM.call(v28992.stop, v28992, [1, 1], JAM.policy.p3);
        var v28993;
        if (e$$340) {
          v28993 = "animate";
        } else {
          v28993 = "css";
        }
        JAM.call(v28055[v28993], v28055, [{width:f$$175 + "%"}, c$$526.animate], JAM.policy.p3);
      }
      var v26615 = b$$650 === "max";
      if (v26615) {
        v26615 = this.orientation === "horizontal";
      }
      var v24567 = v26615;
      if (v24567) {
        var v26616 = this.range;
        var v28060;
        if (e$$340) {
          v28060 = "animate";
        } else {
          v28060 = "css";
        }
        JAM.call(v26616[v28060], v26616, [{width:100 - f$$175 + "%"}, {queue:!1, duration:c$$526.animate}], JAM.policy.p3);
      }
      var v24568 = b$$650 === "min";
      if (v24568) {
        v24568 = this.orientation === "vertical";
      }
      var v20029 = v24568;
      if (v20029) {
        var v26621 = this.range;
        var v24569 = JAM.call(v26621.stop, v26621, [1, 1], JAM.policy.p3);
        var v26622;
        if (e$$340) {
          v26622 = "animate";
        } else {
          v26622 = "css";
        }
        JAM.call(v24569[v26622], v24569, [{height:f$$175 + "%"}, c$$526.animate], JAM.policy.p3);
      }
      var v20030 = b$$650 === "max";
      if (v20030) {
        v20030 = this.orientation === "vertical";
      }
      var v15754 = v20030;
      if (v15754) {
        var v20031 = this.range;
        var v24574;
        if (e$$340) {
          v24574 = "animate";
        } else {
          v24574 = "css";
        }
        v15754 = JAM.call(v20031[v24574], v20031, [{height:100 - f$$175 + "%"}, {queue:!1, duration:c$$526.animate}], JAM.policy.p3);
      }
      v3375 = v15754;
    }
    v3375;
    return;
  }
  function v1781() {
    return this.options.max;
  }
  function v1780() {
    return this.options.min;
  }
  function v1779(a$$662) {
    if (a$$662 <= this.options.min) {
      return this.options.min;
    }
    if (a$$662 >= this.options.max) {
      return this.options.max;
    }
    var v3382;
    if (this.options.step > 0) {
      v3382 = this.options.step;
    } else {
      v3382 = 1;
    }
    var b$$649 = v3382;
    var c$$525 = (a$$662 - this.options.min) % b$$649;
    var d$$396 = a$$662 - c$$525;
    var v10017 = JAM.call(Math.abs, Math, [c$$525], JAM.policy.p3) * 2 >= b$$649;
    if (v10017) {
      var v24578;
      if (c$$525 > 0) {
        v24578 = b$$649;
      } else {
        v24578 = -b$$649;
      }
      d$$396 = d$$396 + v24578;
    }
    return JAM.call(parseFloat, null, [JAM.call(d$$396.toFixed, d$$396, [5], JAM.policy.p3)], JAM.policy.p3);
  }
  function v1778(a$$661) {
    var b$$648;
    var c$$524;
    var d$$395;
    if (arguments.length) {
      b$$648 = this.options.values[a$$661];
      b$$648 = JAM.call(this._trimAlignValue, this, [b$$648], JAM.policy.p3);
      return b$$648;
    }
    var v3385 = this.options.values;
    c$$524 = JAM.call(v3385.slice, v3385, [], JAM.policy.p3);
    d$$395 = 0;
    var v3388 = d$$395 < c$$524.length;
    for (;v3388;) {
      var v3386 = c$$524;
      var v3387 = d$$395;
      var v31193 = JAM.call(this._trimAlignValue, this, [c$$524[d$$395]], JAM.policy.p3);
      introspect(JAM.policy.p2) {
        v3386[v3387] = v31193;
      }
      d$$395 = d$$395 + 1;
      v3388 = d$$395 < c$$524.length;
    }
    return c$$524;
  }
  function v1777() {
    var a$$660 = this.options.value;
    a$$660 = JAM.call(this._trimAlignValue, this, [a$$660], JAM.policy.p3);
    return a$$660;
  }
  function v1776(b$$647, c$$523) {
    var d$$394;
    var e$$339 = 0;
    var v10023 = JAM.call(a$$649.isArray, a$$649, [this.options.values], JAM.policy.p3);
    if (v10023) {
      e$$339 = this.options.values.length;
    }
    var v10024 = a$$649.Widget.prototype._setOption;
    JAM.call(v10024.apply, v10024, [this, arguments], JAM.policy.p3);
    switch(b$$647) {
      case "disabled":
        var v3390;
        if (c$$523) {
          var v26626 = this.handles;
          var v24579 = JAM.call(v26626.filter, v26626, [".ui-state-focus"], JAM.policy.p3);
          JAM.call(v24579.blur, v24579, [], JAM.policy.p3);
          var v24580 = this.handles;
          JAM.call(v24580.removeClass, v24580, ["ui-state-hover"], JAM.policy.p3);
          var v20042 = this.handles;
          JAM.call(v20042.propAttr, v20042, ["disabled", !0], JAM.policy.p3);
          var v15764 = this.element;
          v3390 = JAM.call(v15764.addClass, v15764, ["ui-disabled"], JAM.policy.p3);
        } else {
          var v15765 = this.handles;
          JAM.call(v15765.propAttr, v15765, ["disabled", !1], JAM.policy.p3);
          var v15767 = this.element;
          v3390 = JAM.call(v15767.removeClass, v15767, ["ui-disabled"], JAM.policy.p3);
        }
        v3390;
        break;
      case "orientation":
        JAM.call(this._detectOrientation, this, [], JAM.policy.p3);
        var v20044 = this.element;
        var v15768 = JAM.call(v20044.removeClass, v20044, ["ui-slider-horizontal ui-slider-vertical"], JAM.policy.p3);
        JAM.call(v15768.addClass, v15768, ["ui-slider-" + this.orientation], JAM.policy.p3);
        JAM.call(this._refreshValue, this, [], JAM.policy.p3);
        break;
      case "value":
        this._animateOff = !0;
        JAM.call(this._refreshValue, this, [], JAM.policy.p3);
        JAM.call(this._change, this, [null, 0], JAM.policy.p3);
        this._animateOff = !1;
        break;
      case "values":
        this._animateOff = !0;
        JAM.call(this._refreshValue, this, [], JAM.policy.p3);
        d$$394 = 0;
        var v3391 = d$$394 < e$$339;
        for (;v3391;) {
          JAM.call(this._change, this, [null, d$$394], JAM.policy.p3);
          d$$394 = d$$394 + 1;
          v3391 = d$$394 < e$$339;
        }
        this._animateOff = !1;
    }
    return;
  }
  function v1775(b$$646, c$$522) {
    var d$$393;
    var e$$338;
    var f$$174;
    if (arguments.length > 1) {
      var v15770 = this.options.values;
      var v15771 = b$$646;
      var v31194 = JAM.call(this._trimAlignValue, this, [c$$522], JAM.policy.p3);
      JAM.set(v15770, v15771, v31194, JAM.policy.p2);
      JAM.call(this._refreshValue, this, [], JAM.policy.p3);
      JAM.call(this._change, this, [null, b$$646], JAM.policy.p3);
      return;
    }
    if (!arguments.length) {
      return JAM.call(this._values, this, [], JAM.policy.p3);
    }
    if (!JAM.call(a$$649.isArray, a$$649, [arguments[0]], JAM.policy.p3)) {
      var v3394;
      var v15773 = this.options.values;
      if (v15773) {
        v15773 = this.options.values.length;
      }
      if (v15773) {
        v3394 = JAM.call(this._values, this, [b$$646], JAM.policy.p3);
      } else {
        v3394 = JAM.call(this.value, this, [], JAM.policy.p3);
      }
      return v3394;
    }
    d$$393 = this.options.values;
    e$$338 = arguments[0];
    f$$174 = 0;
    var v3396 = f$$174 < d$$393.length;
    for (;v3396;) {
      var v10031 = d$$393;
      var v10032 = f$$174;
      var v31195 = JAM.call(this._trimAlignValue, this, [e$$338[f$$174]], JAM.policy.p3);
      introspect(JAM.policy.p2) {
        v10031[v10032] = v31195;
      }
      JAM.call(this._change, this, [null, f$$174], JAM.policy.p3);
      f$$174 = f$$174 + 1;
      v3396 = f$$174 < d$$393.length;
    }
    JAM.call(this._refreshValue, this, [], JAM.policy.p3);
    return;
  }
  function v1774(a$$659) {
    if (arguments.length) {
      var v15775 = this.options;
      var v31196 = JAM.call(this._trimAlignValue, this, [a$$659], JAM.policy.p3);
      v15775.value = v31196;
      JAM.call(this._refreshValue, this, [], JAM.policy.p3);
      JAM.call(this._change, this, [null, 0], JAM.policy.p3);
      return;
    }
    return JAM.call(this._value, this, [], JAM.policy.p3);
  }
  function v1773(a$$658, b$$645) {
    var v10034 = !this._keySliding;
    if (v10034) {
      v10034 = !this._mouseSliding;
    }
    if (v10034) {
      var c$$521 = {handle:this.handles[b$$645], value:JAM.call(this.value, this, [], JAM.policy.p3)};
      var v15778 = this.options.values;
      if (v15778) {
        v15778 = this.options.values.length;
      }
      var v10036 = v15778;
      if (v10036) {
        var v20051 = c$$521;
        var v31197 = JAM.call(this.values, this, [b$$645], JAM.policy.p3);
        v20051.value = v31197;
        var v20052 = c$$521;
        var v31198 = JAM.call(this.values, this, [], JAM.policy.p3);
        v20052.values = v31198;
      }
      JAM.call(this._trigger, this, ["change", a$$658, c$$521], JAM.policy.p3);
    }
    return;
  }
  function v1772(a$$657, b$$644) {
    var c$$520 = {handle:this.handles[b$$644], value:JAM.call(this.value, this, [], JAM.policy.p3)};
    var v15779 = this.options.values;
    if (v15779) {
      v15779 = this.options.values.length;
    }
    var v10038 = v15779;
    if (v10038) {
      var v20055 = c$$520;
      var v31199 = JAM.call(this.values, this, [b$$644], JAM.policy.p3);
      v20055.value = v31199;
      var v20056 = c$$520;
      var v31200 = JAM.call(this.values, this, [], JAM.policy.p3);
      v20056.values = v31200;
    }
    JAM.call(this._trigger, this, ["stop", a$$657, c$$520], JAM.policy.p3);
    return;
  }
  function v1771(a$$656, b$$643, c$$519) {
    var d$$392;
    var e$$337;
    var f$$173;
    var v3403;
    var v15780 = this.options.values;
    if (v15780) {
      v15780 = this.options.values.length;
    }
    if (v15780) {
      var v24585;
      if (b$$643) {
        v24585 = 0;
      } else {
        v24585 = 1;
      }
      d$$392 = JAM.call(this.values, this, [v24585], JAM.policy.p3);
      var v26627 = this.options.values.length === 2;
      if (v26627) {
        v26627 = this.options.range === !0;
      }
      var v24586 = v26627;
      if (v24586) {
        var v28067 = b$$643 === 0;
        if (v28067) {
          v28067 = c$$519 > d$$392;
        }
        var v26628 = v28067;
        if (!v26628) {
          var v28068 = b$$643 === 1;
          if (v28068) {
            v28068 = c$$519 < d$$392;
          }
          v26628 = v28068;
        }
        v24586 = v26628;
      }
      var v20060 = v24586;
      if (v20060) {
        c$$519 = d$$392;
      }
      var v15781 = c$$519 !== JAM.call(this.values, this, [b$$643], JAM.policy.p3);
      if (v15781) {
        e$$337 = JAM.call(this.values, this, [], JAM.policy.p3);
        JAM.set(e$$337, b$$643, c$$519, JAM.policy.p2);
        f$$173 = JAM.call(this._trigger, this, ["slide", a$$656, {handle:this.handles[b$$643], value:c$$519, values:e$$337}], JAM.policy.p3);
        var v28071;
        if (b$$643) {
          v28071 = 0;
        } else {
          v28071 = 1;
        }
        d$$392 = JAM.call(this.values, this, [v28071], JAM.policy.p3);
        var v24587 = f$$173 !== !1;
        if (v24587) {
          v24587 = JAM.call(this.values, this, [b$$643, c$$519, !0], JAM.policy.p3);
        }
        v15781 = v24587;
      }
      v3403 = v15781;
    } else {
      var v10039 = c$$519 !== JAM.call(this.value, this, [], JAM.policy.p3);
      if (v10039) {
        f$$173 = JAM.call(this._trigger, this, ["slide", a$$656, {handle:this.handles[b$$643], value:c$$519}], JAM.policy.p3);
        var v20064 = f$$173 !== !1;
        if (v20064) {
          v20064 = JAM.call(this.value, this, [c$$519], JAM.policy.p3);
        }
        v10039 = v20064;
      }
      v3403 = v10039;
    }
    v3403;
    return;
  }
  function v1770(a$$655, b$$642) {
    var c$$518 = {handle:this.handles[b$$642], value:JAM.call(this.value, this, [], JAM.policy.p3)};
    var v15784 = this.options.values;
    if (v15784) {
      v15784 = this.options.values.length;
    }
    var v10042 = v15784;
    if (v10042) {
      var v20067 = c$$518;
      var v31201 = JAM.call(this.values, this, [b$$642], JAM.policy.p3);
      v20067.value = v31201;
      var v20068 = c$$518;
      var v31202 = JAM.call(this.values, this, [], JAM.policy.p3);
      v20068.values = v31202;
    }
    return JAM.call(this._trigger, this, ["start", a$$655, c$$518], JAM.policy.p3);
  }
  function v1769(a$$654) {
    var b$$641;
    var c$$517;
    var d$$391;
    var e$$336;
    var f$$172;
    var v28999;
    if (this.orientation === "horizontal") {
      b$$641 = this.elementSize.width;
      var v29998 = a$$654.x - this.elementOffset.left;
      var v30268;
      if (this._clickOffset) {
        v30268 = this._clickOffset.left;
      } else {
        v30268 = 0;
      }
      v28999 = c$$517 = v29998 - v30268;
    } else {
      b$$641 = this.elementSize.height;
      var v30001 = a$$654.y - this.elementOffset.top;
      var v30271;
      if (this._clickOffset) {
        v30271 = this._clickOffset.top;
      } else {
        v30271 = 0;
      }
      v28999 = c$$517 = v30001 - v30271;
    }
    v28999;
    d$$391 = c$$517 / b$$641;
    var v28072 = d$$391 > 1;
    if (v28072) {
      d$$391 = 1;
    }
    var v26633 = d$$391 < 0;
    if (v26633) {
      d$$391 = 0;
    }
    var v24591 = this.orientation === "vertical";
    if (v24591) {
      d$$391 = 1 - d$$391;
    }
    e$$336 = this.options.max - this.options.min;
    f$$172 = this.options.min + d$$391 * e$$336;
    return JAM.call(this._trimAlignValue, this, [f$$172], JAM.policy.p3);
  }
  function v1768() {
    var v3406;
    if (this.options.orientation === "vertical") {
      v3406 = "vertical";
    } else {
      v3406 = "horizontal";
    }
    this.orientation = v3406;
    return;
  }
  function v1767(a$$653) {
    var v29000 = this.handles;
    JAM.call(v29000.removeClass, v29000, ["ui-state-active"], JAM.policy.p3);
    this._mouseSliding = !1;
    JAM.call(this._stop, this, [a$$653, this._handleIndex], JAM.policy.p3);
    JAM.call(this._change, this, [a$$653, this._handleIndex], JAM.policy.p3);
    this._handleIndex = null;
    this._clickOffset = null;
    this._animateOff = !1;
    return!1;
  }
  function v1766(a$$652) {
    var b$$640 = {x:a$$652.pageX, y:a$$652.pageY};
    var c$$516 = JAM.call(this._normValueFromMouse, this, [b$$640], JAM.policy.p3);
    JAM.call(this._slide, this, [a$$652, this._handleIndex, c$$516], JAM.policy.p3);
    return!1;
  }
  function v1765(a$$651) {
    return!0;
  }
  function v1764(b$$638) {
    function v1763(b$$639) {
      var c$$515 = JAM.call(Math.abs, Math, [e$$335 - JAM.call(h$$156.values, h$$156, [b$$639], JAM.policy.p3)], JAM.policy.p3);
      var v3410 = f$$171 > c$$515;
      if (v3410) {
        f$$171 = c$$515;
        g$$189 = JAM.call(a$$649, null, [this], JAM.policy.p3);
        i$$204 = b$$639;
      }
      return;
    }
    var c$$514 = this.options;
    var d$$390;
    var e$$335;
    var f$$171;
    var g$$189;
    var h$$156;
    var i$$204;
    var j$$104;
    var k$$72;
    var l$$79;
    var v3411;
    if (c$$514.disabled) {
      v3411 = !1;
    } else {
      var v30500 = this.element;
      var v30272 = JAM.call(v30500.outerWidth, v30500, [], JAM.policy.p3);
      var v30501 = this.element;
      this.elementSize = {width:v30272, height:JAM.call(v30501.outerHeight, v30501, [], JAM.policy.p3)};
      var v30274 = this.element;
      var v31203 = JAM.call(v30274.offset, v30274, [], JAM.policy.p3);
      this.elementOffset = v31203;
      d$$390 = {x:b$$638.pageX, y:b$$638.pageY};
      e$$335 = JAM.call(this._normValueFromMouse, this, [d$$390], JAM.policy.p3);
      f$$171 = this.options.max - this.options.min + 1;
      h$$156 = this;
      var v26636 = this.handles;
      JAM.call(v26636.each, v26636, [v1763], JAM.policy.p3);
      var v26637 = c$$514.range === !0;
      if (v26637) {
        v26637 = JAM.call(this.values, this, [1], JAM.policy.p3) === c$$514.min;
      }
      var v24594 = v26637;
      if (v24594) {
        i$$204 = i$$204 + 1;
        g$$189 = JAM.call(a$$649, null, [this.handles[i$$204]], JAM.policy.p3);
      }
      j$$104 = JAM.call(this._start, this, [b$$638, i$$204], JAM.policy.p3);
      var v15788;
      if (j$$104 === !1) {
        v15788 = !1;
      } else {
        this._mouseSliding = !0;
        h$$156._handleIndex = i$$204;
        var v30275 = JAM.call(g$$189.addClass, g$$189, ["ui-state-active"], JAM.policy.p3);
        JAM.call(v30275.focus, v30275, [], JAM.policy.p3);
        k$$72 = JAM.call(g$$189.offset, g$$189, [], JAM.policy.p3);
        var v30502 = JAM.call(a$$649, null, [b$$638.target], JAM.policy.p3);
        var v30276 = JAM.call(v30502.parents, v30502, [], JAM.policy.p3);
        var v30007 = JAM.call(v30276.andSelf, v30276, [], JAM.policy.p3);
        l$$79 = !JAM.call(v30007.is, v30007, [".ui-slider-handle"], JAM.policy.p3);
        var v29003;
        if (l$$79) {
          v29003 = {left:0, top:0};
        } else {
          var v29626 = b$$638.pageX - k$$72.left - JAM.call(g$$189.width, g$$189, [], JAM.policy.p3) / 2;
          var v30503 = b$$638.pageY - k$$72.top - JAM.call(g$$189.height, g$$189, [], JAM.policy.p3) / 2;
          var v30651 = JAM.call(parseInt, null, [JAM.call(g$$189.css, g$$189, ["borderTopWidth"], JAM.policy.p3), 10], JAM.policy.p3);
          if (!v30651) {
            v30651 = 0;
          }
          var v30280 = v30503 - v30651;
          var v30505 = JAM.call(parseInt, null, [JAM.call(g$$189.css, g$$189, ["borderBottomWidth"], JAM.policy.p3), 10], JAM.policy.p3);
          if (!v30505) {
            v30505 = 0;
          }
          var v30010 = v30280 - v30505;
          var v30282 = JAM.call(parseInt, null, [JAM.call(g$$189.css, g$$189, ["marginTop"], JAM.policy.p3), 10], JAM.policy.p3);
          if (!v30282) {
            v30282 = 0;
          }
          v29003 = {left:v29626, top:v30010 + v30282};
        }
        this._clickOffset = v29003;
        var v29004 = this.handles;
        var v28079 = JAM.call(v29004.hasClass, v29004, ["ui-state-hover"], JAM.policy.p3);
        if (!v28079) {
          JAM.call(this._slide, this, [b$$638, i$$204, e$$335], JAM.policy.p3);
        }
        this._animateOff = !0;
        v15788 = !0;
      }
      v3411 = v15788;
    }
    return v3411;
  }
  function v1762() {
    var v24596 = this.handles;
    JAM.call(v24596.remove, v24596, [], JAM.policy.p3);
    var v24597 = this.range;
    JAM.call(v24597.remove, v24597, [], JAM.policy.p3);
    var v26638 = this.element;
    var v24598 = JAM.call(v26638.removeClass, v26638, ["ui-slider ui-slider-horizontal ui-slider-vertical ui-slider-disabled ui-widget ui-widget-content ui-corner-all"], JAM.policy.p3);
    var v20074 = JAM.call(v24598.removeData, v24598, ["slider"], JAM.policy.p3);
    JAM.call(v20074.unbind, v20074, [".slider"], JAM.policy.p3);
    JAM.call(this._mouseDestroy, this, [], JAM.policy.p3);
    return this;
  }
  function v1761() {
    function v1760(c$$513) {
      var v3412 = JAM.call(a$$649, null, [this], JAM.policy.p3);
      var d$$389 = JAM.call(v3412.data, v3412, ["index.ui-slider-handle"], JAM.policy.p3);
      var v3413 = b$$636._keySliding;
      if (v3413) {
        b$$636._keySliding = !1;
        JAM.call(b$$636._stop, b$$636, [c$$513, d$$389], JAM.policy.p3);
        JAM.call(b$$636._change, b$$636, [c$$513, d$$389], JAM.policy.p3);
        var v15789 = JAM.call(a$$649, null, [this], JAM.policy.p3);
        JAM.call(v15789.removeClass, v15789, ["ui-state-active"], JAM.policy.p3);
      }
      return;
    }
    function v1759(d$$388) {
      var v3414 = JAM.call(a$$649, null, [this], JAM.policy.p3);
      var e$$334 = JAM.call(v3414.data, v3414, ["index.ui-slider-handle"], JAM.policy.p3);
      var f$$170;
      var g$$188;
      var h$$155;
      var i$$203;
      if (b$$636.options.disabled) {
        return;
      }
      switch(d$$388.keyCode) {
        case a$$649.ui.keyCode.HOME:
        ;
        case a$$649.ui.keyCode.END:
        ;
        case a$$649.ui.keyCode.PAGE_UP:
        ;
        case a$$649.ui.keyCode.PAGE_DOWN:
        ;
        case a$$649.ui.keyCode.UP:
        ;
        case a$$649.ui.keyCode.RIGHT:
        ;
        case a$$649.ui.keyCode.DOWN:
        ;
        case a$$649.ui.keyCode.LEFT:
          JAM.call(d$$388.preventDefault, d$$388, [], JAM.policy.p3);
          if (!b$$636._keySliding) {
            b$$636._keySliding = !0;
            var v15790 = JAM.call(a$$649, null, [this], JAM.policy.p3);
            JAM.call(v15790.addClass, v15790, ["ui-state-active"], JAM.policy.p3);
            f$$170 = JAM.call(b$$636._start, b$$636, [d$$388, e$$334], JAM.policy.p3);
            if (f$$170 === !1) {
              return;
            }
          }
        ;
      }
      i$$203 = b$$636.options.step;
      var v10052;
      var v20075 = b$$636.options.values;
      if (v20075) {
        v20075 = b$$636.options.values.length;
      }
      if (v20075) {
        v10052 = g$$188 = h$$155 = JAM.call(b$$636.values, b$$636, [e$$334], JAM.policy.p3);
      } else {
        v10052 = g$$188 = h$$155 = JAM.call(b$$636.value, b$$636, [], JAM.policy.p3);
      }
      v10052;
      switch(d$$388.keyCode) {
        case a$$649.ui.keyCode.HOME:
          h$$155 = b$$636.options.min;
          break;
        case a$$649.ui.keyCode.END:
          h$$155 = b$$636.options.max;
          break;
        case a$$649.ui.keyCode.PAGE_UP:
          h$$155 = JAM.call(b$$636._trimAlignValue, b$$636, [g$$188 + (b$$636.options.max - b$$636.options.min) / c$$512], JAM.policy.p3);
          break;
        case a$$649.ui.keyCode.PAGE_DOWN:
          h$$155 = JAM.call(b$$636._trimAlignValue, b$$636, [g$$188 - (b$$636.options.max - b$$636.options.min) / c$$512], JAM.policy.p3);
          break;
        case a$$649.ui.keyCode.UP:
        ;
        case a$$649.ui.keyCode.RIGHT:
          if (g$$188 === b$$636.options.max) {
            return;
          }
          h$$155 = JAM.call(b$$636._trimAlignValue, b$$636, [g$$188 + i$$203], JAM.policy.p3);
          break;
        case a$$649.ui.keyCode.DOWN:
        ;
        case a$$649.ui.keyCode.LEFT:
          if (g$$188 === b$$636.options.min) {
            return;
          }
          h$$155 = JAM.call(b$$636._trimAlignValue, b$$636, [g$$188 - i$$203], JAM.policy.p3);
      }
      JAM.call(b$$636._slide, b$$636, [d$$388, e$$334, h$$155], JAM.policy.p3);
      return;
    }
    function v1758(b$$637) {
      var v3428 = JAM.call(a$$649, null, [this], JAM.policy.p3);
      JAM.call(v3428.data, v3428, ["index.ui-slider-handle", b$$637], JAM.policy.p3);
      return;
    }
    function v1757() {
      var v3429 = JAM.call(a$$649, null, [this], JAM.policy.p3);
      JAM.call(v3429.removeClass, v3429, ["ui-state-focus"], JAM.policy.p3);
      return;
    }
    function v1756() {
      var v3430;
      if (d$$387.disabled) {
        var v10057 = JAM.call(a$$649, null, [this], JAM.policy.p3);
        v3430 = JAM.call(v10057.blur, v10057, [], JAM.policy.p3);
      } else {
        var v15796 = JAM.call(a$$649, null, [".ui-slider .ui-state-focus"], JAM.policy.p3);
        JAM.call(v15796.removeClass, v15796, ["ui-state-focus"], JAM.policy.p3);
        var v15797 = JAM.call(a$$649, null, [this], JAM.policy.p3);
        v3430 = JAM.call(v15797.addClass, v15797, ["ui-state-focus"], JAM.policy.p3);
      }
      v3430;
      return;
    }
    function v1755() {
      var v3431 = JAM.call(a$$649, null, [this], JAM.policy.p3);
      JAM.call(v3431.removeClass, v3431, ["ui-state-hover"], JAM.policy.p3);
      return;
    }
    function v1754() {
      var v3432 = d$$387.disabled;
      if (!v3432) {
        var v10059 = JAM.call(a$$649, null, [this], JAM.policy.p3);
        JAM.call(v10059.addClass, v10059, ["ui-state-hover"], JAM.policy.p3);
      }
      return;
    }
    function v1753(a$$650) {
      JAM.call(a$$650.preventDefault, a$$650, [], JAM.policy.p3);
      return;
    }
    var b$$636 = this;
    var d$$387 = this.options;
    var v10061 = this.element;
    var v3433 = JAM.call(v10061.find, v10061, [".ui-slider-handle"], JAM.policy.p3);
    var e$$333 = JAM.call(v3433.addClass, v3433, ["ui-state-default ui-corner-all"], JAM.policy.p3);
    var f$$169 = "<a class='ui-slider-handle ui-state-default ui-corner-all' href='#'></a>";
    var v10062 = d$$387.values;
    if (v10062) {
      v10062 = d$$387.values.length;
    }
    var v3434 = v10062;
    if (!v3434) {
      v3434 = 1;
    }
    var g$$187 = v3434;
    var h$$154 = [];
    this._keySliding = !1;
    this._mouseSliding = !1;
    this._animateOff = !0;
    this._handleIndex = null;
    JAM.call(this._detectOrientation, this, [], JAM.policy.p3);
    JAM.call(this._mouseInit, this, [], JAM.policy.p3);
    var v20080 = this.element;
    var v24605 = "ui-slider ui-slider-" + this.orientation + " ui-widget" + " ui-widget-content" + " ui-corner-all";
    var v26641;
    if (d$$387.disabled) {
      v26641 = " ui-slider-disabled ui-disabled";
    } else {
      v26641 = "";
    }
    JAM.call(v20080.addClass, v20080, [v24605 + v26641], JAM.policy.p3);
    var v31204 = JAM.call(a$$649, null, [[]], JAM.policy.p3);
    this.range = v31204;
    var v10064 = d$$387.range;
    if (v10064) {
      var v20082 = d$$387.range === !0;
      if (v20082) {
        var v26642 = d$$387.values;
        if (!v26642) {
          d$$387.values = [this.options.min, this.options.min];
        }
        var v28085 = d$$387.values.length;
        if (v28085) {
          v28085 = d$$387.values.length !== 2;
        }
        var v26643 = v28085;
        if (v26643) {
          d$$387.values = [d$$387.values[0], d$$387.values[0]];
        }
      }
      var v24609 = JAM.call(a$$649, null, ["<div></div>"], JAM.policy.p3);
      var v20083 = JAM.call(v24609.appendTo, v24609, [this.element], JAM.policy.p3);
      var v26644;
      var v29013 = d$$387.range === "min";
      if (!v29013) {
        v29013 = d$$387.range === "max";
      }
      if (v29013) {
        v26644 = " ui-slider-range-" + d$$387.range;
      } else {
        v26644 = "";
      }
      var v31205 = JAM.call(v20083.addClass, v20083, ["ui-slider-range ui-widget-header" + v26644], JAM.policy.p3);
      this.range = v31205;
    }
    var i$$202 = e$$333.length;
    var v3435 = i$$202 < g$$187;
    for (;v3435;) {
      JAM.call(h$$154.push, h$$154, [f$$169], JAM.policy.p3);
      i$$202 = i$$202 + 1;
      v3435 = i$$202 < g$$187;
    }
    var v29014 = JAM.call(a$$649, null, [JAM.call(h$$154.join, h$$154, [""], JAM.policy.p3)], JAM.policy.p3);
    var v31206 = JAM.call(e$$333.add, e$$333, [JAM.call(v29014.appendTo, v29014, [b$$636.element], JAM.policy.p3)], JAM.policy.p3);
    this.handles = v31206;
    var v28091 = this.handles;
    var v31207 = JAM.call(v28091.eq, v28091, [0], JAM.policy.p3);
    this.handle = v31207;
    var v30283 = this.handles;
    var v30012 = JAM.call(v30283.add, v30283, [this.range], JAM.policy.p3);
    var v29634 = JAM.call(v30012.filter, v30012, ["a"], JAM.policy.p3);
    var v29016 = JAM.call(v29634.click, v29634, [v1753], JAM.policy.p3);
    var v28092 = JAM.call(v29016.hover, v29016, [v1754, v1755], JAM.policy.p3);
    var v26645 = JAM.call(v28092.focus, v28092, [v1756], JAM.policy.p3);
    JAM.call(v26645.blur, v26645, [v1757], JAM.policy.p3);
    var v24612 = this.handles;
    JAM.call(v24612.each, v24612, [v1758], JAM.policy.p3);
    var v24613 = this.handles;
    var v20085 = JAM.call(v24613.keydown, v24613, [v1759], JAM.policy.p3);
    JAM.call(v20085.keyup, v20085, [v1760], JAM.policy.p3);
    JAM.call(this._refreshValue, this, [], JAM.policy.p3);
    this._animateOff = !1;
    return;
  }
  var c$$512 = 5;
  JAM.call(a$$649.widget, a$$649, ["ui.slider", a$$649.ui.mouse, {widgetEventPrefix:"slide", options:{animate:!1, distance:0, max:100, min:0, orientation:"horizontal", range:!1, step:1, value:0, values:null}, _create:v1761, destroy:v1762, _mouseCapture:v1764, _mouseStart:v1765, _mouseDrag:v1766, _mouseStop:v1767, _detectOrientation:v1768, _normValueFromMouse:v1769, _start:v1770, _slide:v1771, _stop:v1772, _change:v1773, value:v1774, values:v1775, _setOption:v1776, _value:v1777, _values:v1778, _trimAlignValue:v1779, 
  _valueMin:v1780, _valueMax:v1781, _refreshValue:v1783}], JAM.policy.p3);
  JAM.call(a$$649.extend, a$$649, [a$$649.ui.slider, {version:"1.8.24"}], JAM.policy.p3);
  return;
}
function v1752(a$$645, b$$632) {
  function v1751() {
    var a$$648 = JAM.call(this.value, this, [], JAM.policy.p3);
    var b$$634 = JAM.call(this._percentage, this, [], JAM.policy.p3);
    var v15802 = this.oldValue !== a$$648;
    if (v15802) {
      this.oldValue = a$$648;
      JAM.call(this._trigger, this, ["change"], JAM.policy.p3);
    }
    var v24614 = this.valueDiv;
    var v20089 = JAM.call(v24614.toggle, v24614, [a$$648 > this.min], JAM.policy.p3);
    var v15803 = JAM.call(v20089.toggleClass, v20089, ["ui-corner-right", a$$648 === this.options.max], JAM.policy.p3);
    JAM.call(v15803.width, v15803, [JAM.call(b$$634.toFixed, b$$634, [0], JAM.policy.p3) + "%"], JAM.policy.p3);
    var v10069 = this.element;
    JAM.call(v10069.attr, v10069, ["aria-valuenow", a$$648], JAM.policy.p3);
    return;
  }
  function v1750() {
    return 100 * JAM.call(this._value, this, [], JAM.policy.p3) / this.options.max;
  }
  function v1749() {
    var a$$647 = this.options.value;
    var v10072 = typeof a$$647 != "number";
    if (v10072) {
      a$$647 = 0;
    }
    return JAM.call(Math.min, Math, [this.options.max, JAM.call(Math.max, Math, [this.min, a$$647], JAM.policy.p3)], JAM.policy.p3);
  }
  function v1748(b$$633, c$$511) {
    var v10075 = b$$633 === "value";
    if (v10075) {
      this.options.value = c$$511;
      JAM.call(this._refreshValue, this, [], JAM.policy.p3);
      var v20092 = JAM.call(this._value, this, [], JAM.policy.p3) === this.options.max;
      if (v20092) {
        JAM.call(this._trigger, this, ["complete"], JAM.policy.p3);
      }
    }
    var v10076 = a$$645.Widget.prototype._setOption;
    JAM.call(v10076.apply, v10076, [this, arguments], JAM.policy.p3);
    return;
  }
  function v1747(a$$646) {
    var v3439;
    if (a$$646 === b$$632) {
      v3439 = JAM.call(this._value, this, [], JAM.policy.p3);
    } else {
      JAM.call(this._setOption, this, ["value", a$$646], JAM.policy.p3);
      v3439 = this;
    }
    return v3439;
  }
  function v1746() {
    var v28093 = this.element;
    var v26649 = JAM.call(v28093.removeClass, v28093, ["ui-progressbar ui-widget ui-widget-content ui-corner-all"], JAM.policy.p3);
    var v24620 = JAM.call(v26649.removeAttr, v26649, ["role"], JAM.policy.p3);
    var v20094 = JAM.call(v24620.removeAttr, v24620, ["aria-valuemin"], JAM.policy.p3);
    var v15809 = JAM.call(v20094.removeAttr, v20094, ["aria-valuemax"], JAM.policy.p3);
    JAM.call(v15809.removeAttr, v15809, ["aria-valuenow"], JAM.policy.p3);
    var v15810 = this.valueDiv;
    JAM.call(v15810.remove, v15810, [], JAM.policy.p3);
    var v10078 = a$$645.Widget.prototype.destroy;
    JAM.call(v10078.apply, v10078, [this, arguments], JAM.policy.p3);
    return;
  }
  function v1745() {
    var v24621 = this.element;
    var v20096 = JAM.call(v24621.addClass, v24621, ["ui-progressbar ui-widget ui-widget-content ui-corner-all"], JAM.policy.p3);
    JAM.call(v20096.attr, v20096, [{role:"progressbar", "aria-valuemin":this.min, "aria-valuemax":this.options.max, "aria-valuenow":JAM.call(this._value, this, [], JAM.policy.p3)}], JAM.policy.p3);
    var v20098 = JAM.call(a$$645, null, ["<div class='ui-progressbar-value ui-widget-header ui-corner-left'></div>"], JAM.policy.p3);
    var v31208 = JAM.call(v20098.appendTo, v20098, [this.element], JAM.policy.p3);
    this.valueDiv = v31208;
    var v31209 = JAM.call(this._value, this, [], JAM.policy.p3);
    this.oldValue = v31209;
    JAM.call(this._refreshValue, this, [], JAM.policy.p3);
    return;
  }
  JAM.call(a$$645.widget, a$$645, ["ui.progressbar", {options:{value:0, max:100}, min:0, _create:v1745, destroy:v1746, value:v1747, _setOption:v1748, _value:v1749, _percentage:v1750, _refreshValue:v1751}], JAM.policy.p3);
  JAM.call(a$$645.extend, a$$645, [a$$645.ui.progressbar, {version:"1.8.24"}], JAM.policy.p3);
  return;
}
function v1744(a$$642, b$$622) {
  function v1743() {
    function v1742(a$$644, b$$631) {
      return b$$631;
    }
    var b$$630 = JAM.call(document.getElementsByTagName, document, ["body"], JAM.policy.p3)[0];
    var c$$510 = JAM.call(document.createElement, document, ["div"], JAM.policy.p3);
    var d$$386;
    var e$$332;
    var g$$186;
    var h$$153;
    var i$$201;
    var v20100;
    if (b$$630) {
      v20100 = "div";
    } else {
      v20100 = "body";
    }
    d$$386 = JAM.call(document.createElement, document, [v20100], JAM.policy.p3);
    g$$186 = {visibility:"hidden", width:0, height:0, border:0, margin:0, background:"none"};
    if (b$$630) {
      JAM.call(a$$642.extend, a$$642, [g$$186, {position:"absolute", left:"-1000px", top:"-1000px"}], JAM.policy.p3);
    }
    var j$$103;
    for (j$$103 in g$$186) {
      JAM.set(d$$386.style, j$$103, g$$186[j$$103], JAM.policy.p2);
    }
    JAM.call(d$$386.appendChild, d$$386, [c$$510], JAM.policy.p3);
    var v29635 = b$$630;
    if (!v29635) {
      v29635 = document.documentElement;
    }
    e$$332 = v29635;
    JAM.call(e$$332.insertBefore, e$$332, [d$$386, e$$332.firstChild], JAM.policy.p3);
    c$$510.style.cssText = "position: absolute; left: 10.7432222px; top: 10.432325px; height: 30px; width: 201px;";
    var v28095 = JAM.call(a$$642, null, [c$$510], JAM.policy.p3);
    var v26651 = JAM.call(v28095.offset, v28095, [v1742], JAM.policy.p3);
    h$$153 = JAM.call(v26651.offset, v26651, [], JAM.policy.p3);
    JAM.set(d$$386, "innerHTML", "");
    JAM.call(e$$332.removeChild, e$$332, [d$$386], JAM.policy.p3);
    var v15816 = h$$153.top + h$$153.left;
    var v20103;
    if (b$$630) {
      v20103 = 2E3;
    } else {
      v20103 = 0;
    }
    i$$201 = v15816 + v20103;
    var v10082 = i$$201 > 21;
    if (v10082) {
      v10082 = i$$201 < 22;
    }
    f$$165.fractions = v10082;
    return;
  }
  function v1741(b$$629) {
    function v1740() {
      var v3442 = a$$642.offset;
      JAM.call(v3442.setOffset, v3442, [this, b$$629], JAM.policy.p3);
      return;
    }
    function v1739(c$$509) {
      var v3443 = JAM.call(a$$642, null, [this], JAM.policy.p3);
      var v15818 = JAM.call(a$$642, null, [this], JAM.policy.p3);
      JAM.call(v3443.offset, v3443, [JAM.call(b$$629.call, b$$629, [this, c$$509, JAM.call(v15818.offset, v15818, [], JAM.policy.p3)], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    var c$$508 = this[0];
    var v3445;
    var v15819 = !c$$508;
    if (!v15819) {
      v15819 = !c$$508.ownerDocument;
    }
    if (v15819) {
      v3445 = null;
    } else {
      var v10084;
      if (b$$629) {
        var v15820;
        if (JAM.call(a$$642.isFunction, a$$642, [b$$629], JAM.policy.p3)) {
          v15820 = JAM.call(this.each, this, [v1739], JAM.policy.p3);
        } else {
          v15820 = JAM.call(this.each, this, [v1740], JAM.policy.p3);
        }
        v10084 = v15820;
      } else {
        v10084 = JAM.call(h$$147.call, h$$147, [this], JAM.policy.p3);
      }
      v3445 = v10084;
    }
    return v3445;
  }
  function v1738(b$$628, c$$507) {
    var v3446 = JAM.call(/static/.test, /static/, [JAM.call(a$$642.curCSS, a$$642, [b$$628, "position"], JAM.policy.p3)], JAM.policy.p3);
    if (v3446) {
      b$$628.style.position = "relative";
    }
    var d$$385 = JAM.call(a$$642, null, [b$$628], JAM.policy.p3);
    var e$$331 = JAM.call(d$$385.offset, d$$385, [], JAM.policy.p3);
    var v3447 = JAM.call(parseInt, null, [JAM.call(a$$642.curCSS, a$$642, [b$$628, "top", !0], JAM.policy.p3), 10], JAM.policy.p3);
    if (!v3447) {
      v3447 = 0;
    }
    var f$$168 = v3447;
    var v3448 = JAM.call(parseInt, null, [JAM.call(a$$642.curCSS, a$$642, [b$$628, "left", !0], JAM.policy.p3), 10], JAM.policy.p3);
    if (!v3448) {
      v3448 = 0;
    }
    var g$$185 = v3448;
    var h$$152 = {top:c$$507.top - e$$331.top + f$$168, left:c$$507.left - e$$331.left + g$$185};
    var v3451;
    if ("using" in c$$507) {
      var v10094 = c$$507.using;
      v3451 = JAM.call(v10094.call, v10094, [b$$628, h$$152], JAM.policy.p3);
    } else {
      v3451 = JAM.call(d$$385.css, d$$385, [h$$152], JAM.policy.p3);
    }
    v3451;
    return;
  }
  function v1737(b$$627, c$$506) {
    if (c$$506.at[1] === e$$327) {
      return;
    }
    var d$$384 = JAM.call(a$$642, null, [window], JAM.policy.p3);
    var f$$167 = c$$506.collisionPosition.top + c$$506.collisionHeight - JAM.call(d$$384.height, d$$384, [], JAM.policy.p3) - JAM.call(d$$384.scrollTop, d$$384, [], JAM.policy.p3);
    var v3455;
    if (c$$506.my[1] === "top") {
      v3455 = -c$$506.elemHeight;
    } else {
      var v10100;
      if (c$$506.my[1] === "bottom") {
        v10100 = c$$506.elemHeight;
      } else {
        v10100 = 0;
      }
      v3455 = v10100;
    }
    var g$$184 = v3455;
    var v3456;
    if (c$$506.at[1] === "top") {
      v3456 = c$$506.targetHeight;
    } else {
      v3456 = -c$$506.targetHeight;
    }
    var h$$151 = v3456;
    var i$$200 = -2 * c$$506.offset[1];
    var v10105 = b$$627.top;
    var v15833;
    if (c$$506.collisionPosition.top < 0) {
      v15833 = g$$184 + h$$151 + i$$200;
    } else {
      var v20112;
      if (f$$167 > 0) {
        v20112 = g$$184 + h$$151 + i$$200;
      } else {
        v20112 = 0;
      }
      v15833 = v20112;
    }
    b$$627.top = v10105 + v15833;
    return;
  }
  function v1736(b$$626, c$$505) {
    if (c$$505.at[0] === e$$327) {
      return;
    }
    var d$$383 = JAM.call(a$$642, null, [window], JAM.policy.p3);
    var f$$166 = c$$505.collisionPosition.left + c$$505.collisionWidth - JAM.call(d$$383.width, d$$383, [], JAM.policy.p3) - JAM.call(d$$383.scrollLeft, d$$383, [], JAM.policy.p3);
    var v3461;
    if (c$$505.my[0] === "left") {
      v3461 = -c$$505.elemWidth;
    } else {
      var v10111;
      if (c$$505.my[0] === "right") {
        v10111 = c$$505.elemWidth;
      } else {
        v10111 = 0;
      }
      v3461 = v10111;
    }
    var g$$183 = v3461;
    var v3462;
    if (c$$505.at[0] === "left") {
      v3462 = c$$505.targetWidth;
    } else {
      v3462 = -c$$505.targetWidth;
    }
    var h$$150 = v3462;
    var i$$199 = -2 * c$$505.offset[0];
    var v10116 = b$$626.left;
    var v15840;
    if (c$$505.collisionPosition.left < 0) {
      v15840 = g$$183 + h$$150 + i$$199;
    } else {
      var v20119;
      if (f$$166 > 0) {
        v20119 = g$$183 + h$$150 + i$$199;
      } else {
        v20119 = 0;
      }
      v15840 = v20119;
    }
    b$$626.left = v10116 + v15840;
    return;
  }
  function v1735(b$$625, c$$504) {
    var d$$382 = JAM.call(a$$642, null, [window], JAM.policy.p3);
    var e$$330 = c$$504.collisionPosition.top + c$$504.collisionHeight - JAM.call(d$$382.height, d$$382, [], JAM.policy.p3) - JAM.call(d$$382.scrollTop, d$$382, [], JAM.policy.p3);
    var v3466 = b$$625;
    var v10120;
    if (e$$330 > 0) {
      v10120 = b$$625.top - e$$330;
    } else {
      v10120 = JAM.call(Math.max, Math, [b$$625.top - c$$504.collisionPosition.top, b$$625.top], JAM.policy.p3);
    }
    v3466.top = v10120;
    return;
  }
  function v1734(b$$624, c$$503) {
    var d$$381 = JAM.call(a$$642, null, [window], JAM.policy.p3);
    var e$$329 = c$$503.collisionPosition.left + c$$503.collisionWidth - JAM.call(d$$381.width, d$$381, [], JAM.policy.p3) - JAM.call(d$$381.scrollLeft, d$$381, [], JAM.policy.p3);
    var v3469 = b$$624;
    var v10123;
    if (e$$329 > 0) {
      v10123 = b$$624.left - e$$329;
    } else {
      v10123 = JAM.call(Math.max, Math, [b$$624.left - c$$503.collisionPosition.left, b$$624.left], JAM.policy.p3);
    }
    v3469.left = v10123;
    return;
  }
  function v1733(b$$623) {
    function v1732() {
      function v1731(c$$502, e$$328) {
        var v3470 = a$$642.ui.position[j$$102[c$$502]];
        if (v3470) {
          var v10126 = a$$642.ui.position[j$$102[c$$502]];
          JAM.call(v10126[e$$328], v10126, [q$$20, {targetWidth:l$$78, targetHeight:m$$48, elemWidth:d$$380, elemHeight:g$$182, collisionPosition:r$$21, collisionWidth:o$$24, collisionHeight:p$$49, offset:k$$71, my:b$$623.my, at:b$$623.at}], JAM.policy.p3);
        }
        return;
      }
      var c$$501 = JAM.call(a$$642, null, [this], JAM.policy.p3);
      var d$$380 = JAM.call(c$$501.outerWidth, c$$501, [], JAM.policy.p3);
      var g$$182 = JAM.call(c$$501.outerHeight, c$$501, [], JAM.policy.p3);
      var v3471 = JAM.call(parseInt, null, [JAM.call(a$$642.curCSS, a$$642, [this, "marginLeft", !0], JAM.policy.p3)], JAM.policy.p3);
      if (!v3471) {
        v3471 = 0;
      }
      var h$$149 = v3471;
      var v3472 = JAM.call(parseInt, null, [JAM.call(a$$642.curCSS, a$$642, [this, "marginTop", !0], JAM.policy.p3)], JAM.policy.p3);
      if (!v3472) {
        v3472 = 0;
      }
      var i$$198 = v3472;
      var v3473 = d$$380 + h$$149;
      var v10132 = JAM.call(parseInt, null, [JAM.call(a$$642.curCSS, a$$642, [this, "marginRight", !0], JAM.policy.p3)], JAM.policy.p3);
      if (!v10132) {
        v10132 = 0;
      }
      var o$$24 = v3473 + v10132;
      var v3475 = g$$182 + i$$198;
      var v10133 = JAM.call(parseInt, null, [JAM.call(a$$642.curCSS, a$$642, [this, "marginBottom", !0], JAM.policy.p3)], JAM.policy.p3);
      if (!v10133) {
        v10133 = 0;
      }
      var p$$49 = v3475 + v10133;
      var q$$20 = JAM.call(a$$642.extend, a$$642, [{}, n$$94], JAM.policy.p3);
      var r$$21;
      var v28096;
      if (b$$623.my[0] === "right") {
        v28096 = q$$20.left = q$$20.left - d$$380;
      } else {
        var v29018 = b$$623.my[0] === e$$327;
        if (v29018) {
          v29018 = q$$20.left = q$$20.left - d$$380 / 2;
        }
        v28096 = v29018;
      }
      v28096;
      var v28097;
      if (b$$623.my[1] === "bottom") {
        v28097 = q$$20.top = q$$20.top - g$$182;
      } else {
        var v29020 = b$$623.my[1] === e$$327;
        if (v29020) {
          v29020 = q$$20.top = q$$20.top - g$$182 / 2;
        }
        v28097 = v29020;
      }
      v28097;
      var v26654 = f$$165.fractions;
      if (!v26654) {
        var v29022 = q$$20;
        var v31210 = JAM.call(Math.round, Math, [q$$20.left], JAM.policy.p3);
        v29022.left = v31210;
        var v29023 = q$$20;
        var v31211 = JAM.call(Math.round, Math, [q$$20.top], JAM.policy.p3);
        v29023.top = v31211;
      }
      r$$21 = {left:q$$20.left - h$$149, top:q$$20.top - i$$198};
      JAM.call(a$$642.each, a$$642, [["left", "top"], v1731], JAM.policy.p3);
      var v15864 = a$$642.fn.bgiframe;
      if (v15864) {
        JAM.call(c$$501.bgiframe, c$$501, [], JAM.policy.p3);
      }
      JAM.call(c$$501.offset, c$$501, [JAM.call(a$$642.extend, a$$642, [q$$20, {using:b$$623.using}], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    function v1730() {
      var v10135 = b$$623[this];
      if (!v10135) {
        v10135 = "";
      }
      var v3477 = v10135;
      var a$$643 = JAM.call(v3477.split, v3477, [" "], JAM.policy.p3);
      var v20133 = a$$643.length === 1;
      if (v20133) {
        var v24638;
        if (JAM.call(c$$500.test, c$$500, [a$$643[0]], JAM.policy.p3)) {
          v24638 = JAM.call(a$$643.concat, a$$643, [[e$$327]], JAM.policy.p3);
        } else {
          var v26658;
          if (JAM.call(d$$379.test, d$$379, [a$$643[0]], JAM.policy.p3)) {
            var v28100 = [e$$327];
            v26658 = JAM.call(v28100.concat, v28100, [a$$643], JAM.policy.p3);
          } else {
            v26658 = [e$$327, e$$327];
          }
          v24638 = v26658;
        }
        a$$643 = v24638;
      }
      var v20134 = a$$643;
      var v24639;
      if (JAM.call(c$$500.test, c$$500, [a$$643[0]], JAM.policy.p3)) {
        v24639 = a$$643[0];
      } else {
        v24639 = e$$327;
      }
      introspect(JAM.policy.p2) {
        v20134[0] = v24639;
      }
      var v15867 = a$$643;
      var v20135;
      if (JAM.call(d$$379.test, d$$379, [a$$643[1]], JAM.policy.p3)) {
        v20135 = a$$643[1];
      } else {
        v20135 = e$$327;
      }
      introspect(JAM.policy.p2) {
        v15867[1] = v20135;
      }
      JAM.set(b$$623, this, a$$643, JAM.policy.p2);
      return;
    }
    var v10136 = !b$$623;
    if (!v10136) {
      v10136 = !b$$623.of;
    }
    if (v10136) {
      return JAM.call(g$$181.apply, g$$181, [this, arguments], JAM.policy.p3);
    }
    b$$623 = JAM.call(a$$642.extend, a$$642, [{}, b$$623], JAM.policy.p3);
    var h$$148 = JAM.call(a$$642, null, [b$$623.of], JAM.policy.p3);
    var i$$197 = h$$148[0];
    var v10137 = b$$623.collision;
    if (!v10137) {
      v10137 = "flip";
    }
    var v3480 = v10137;
    var j$$102 = JAM.call(v3480.split, v3480, [" "], JAM.policy.p3);
    var v3481;
    if (b$$623.offset) {
      var v10138 = b$$623.offset;
      v3481 = JAM.call(v10138.split, v10138, [" "], JAM.policy.p3);
    } else {
      v3481 = [0, 0];
    }
    var k$$71 = v3481;
    var l$$78;
    var m$$48;
    var n$$94;
    var v30285;
    if (i$$197.nodeType === 9) {
      l$$78 = JAM.call(h$$148.width, h$$148, [], JAM.policy.p3);
      m$$48 = JAM.call(h$$148.height, h$$148, [], JAM.policy.p3);
      v30285 = n$$94 = {top:0, left:0};
    } else {
      var v30508;
      if (i$$197.setTimeout) {
        l$$78 = JAM.call(h$$148.width, h$$148, [], JAM.policy.p3);
        m$$48 = JAM.call(h$$148.height, h$$148, [], JAM.policy.p3);
        v30508 = n$$94 = {top:JAM.call(h$$148.scrollTop, h$$148, [], JAM.policy.p3), left:JAM.call(h$$148.scrollLeft, h$$148, [], JAM.policy.p3)};
      } else {
        var v30655;
        if (i$$197.preventDefault) {
          b$$623.at = "left top";
          l$$78 = m$$48 = 0;
          v30655 = n$$94 = {top:b$$623.of.pageY, left:b$$623.of.pageX};
        } else {
          l$$78 = JAM.call(h$$148.outerWidth, h$$148, [], JAM.policy.p3);
          m$$48 = JAM.call(h$$148.outerHeight, h$$148, [], JAM.policy.p3);
          v30655 = n$$94 = JAM.call(h$$148.offset, h$$148, [], JAM.policy.p3);
        }
        v30508 = v30655;
      }
      v30285 = v30508;
    }
    v30285;
    JAM.call(a$$642.each, a$$642, [["my", "at"], v1730], JAM.policy.p3);
    var v30022 = j$$102.length === 1;
    if (v30022) {
      introspect(JAM.policy.p2) {
        j$$102[1] = j$$102[0];
      }
    }
    var v29644 = k$$71;
    var v30023 = JAM.call(parseInt, null, [k$$71[0], 10], JAM.policy.p3);
    if (!v30023) {
      v30023 = 0;
    }
    introspect(JAM.policy.p2) {
      v29644[0] = v30023;
    }
    var v29025 = k$$71.length === 1;
    if (v29025) {
      introspect(JAM.policy.p2) {
        k$$71[1] = k$$71[0];
      }
    }
    var v28103 = k$$71;
    var v29026 = JAM.call(parseInt, null, [k$$71[1], 10], JAM.policy.p3);
    if (!v29026) {
      v29026 = 0;
    }
    introspect(JAM.policy.p2) {
      v28103[1] = v29026;
    }
    var v26662;
    if (b$$623.at[0] === "right") {
      v26662 = n$$94.left = n$$94.left + l$$78;
    } else {
      var v28104 = b$$623.at[0] === e$$327;
      if (v28104) {
        v28104 = n$$94.left = n$$94.left + l$$78 / 2;
      }
      v26662 = v28104;
    }
    v26662;
    var v24641;
    if (b$$623.at[1] === "bottom") {
      v24641 = n$$94.top = n$$94.top + m$$48;
    } else {
      var v26663 = b$$623.at[1] === e$$327;
      if (v26663) {
        v26663 = n$$94.top = n$$94.top + m$$48 / 2;
      }
      v24641 = v26663;
    }
    v24641;
    n$$94.left = n$$94.left + k$$71[0];
    n$$94.top = n$$94.top + k$$71[1];
    return JAM.call(this.each, this, [v1732], JAM.policy.p3);
  }
  var v3482 = a$$642.ui;
  if (!v3482) {
    v3482 = {};
  }
  a$$642.ui = v3482;
  var c$$500 = /left|center|right/;
  var d$$379 = /top|center|bottom/;
  var e$$327 = "center";
  var f$$165 = {};
  var g$$181 = a$$642.fn.position;
  var h$$147 = a$$642.fn.offset;
  a$$642.fn.position = v1733;
  a$$642.ui.position = {fit:{left:v1734, top:v1735}, flip:{left:v1736, top:v1737}};
  var v20138 = a$$642.offset.setOffset;
  if (!v20138) {
    a$$642.offset.setOffset = v1738;
    a$$642.fn.offset = v1741;
  }
  var v15871 = a$$642.curCSS;
  if (!v15871) {
    a$$642.curCSS = a$$642.css;
  }
  JAM.call(v1743, null, [], JAM.policy.p3);
  return;
}
function v1729(a$$628, b$$594) {
  function v1728() {
    var v3485 = a$$628.ui.dialog.overlay;
    JAM.call(v3485.destroy, v3485, [this.$el], JAM.policy.p3);
    return;
  }
  function v1727() {
    function v1726() {
      b$$621 = JAM.call(b$$621.add, b$$621, [this], JAM.policy.p3);
      return;
    }
    var b$$621 = JAM.call(a$$628, null, [[]], JAM.policy.p3);
    JAM.call(a$$628.each, a$$628, [a$$628.ui.dialog.overlay.instances, v1726], JAM.policy.p3);
    var v10143 = JAM.call(b$$621.css, b$$621, [{width:0, height:0}], JAM.policy.p3);
    var v20141 = a$$628.ui.dialog.overlay;
    var v15875 = JAM.call(v20141.width, v20141, [], JAM.policy.p3);
    var v20142 = a$$628.ui.dialog.overlay;
    JAM.call(v10143.css, v10143, [{width:v15875, height:JAM.call(v20142.height, v20142, [], JAM.policy.p3)}], JAM.policy.p3);
    return;
  }
  function v1725() {
    var b$$620;
    var c$$499;
    var v3487;
    if (a$$628.browser.msie) {
      b$$620 = JAM.call(Math.max, Math, [document.documentElement.scrollWidth, document.body.scrollWidth], JAM.policy.p3);
      c$$499 = JAM.call(Math.max, Math, [document.documentElement.offsetWidth, document.body.offsetWidth], JAM.policy.p3);
      var v15878;
      if (b$$620 < c$$499) {
        var v24655 = JAM.call(a$$628, null, [window], JAM.policy.p3);
        v15878 = JAM.call(v24655.width, v24655, [], JAM.policy.p3) + "px";
      } else {
        v15878 = b$$620 + "px";
      }
      v3487 = v15878;
    } else {
      var v15879 = JAM.call(a$$628, null, [document], JAM.policy.p3);
      v3487 = JAM.call(v15879.width, v15879, [], JAM.policy.p3) + "px";
    }
    return v3487;
  }
  function v1724() {
    var b$$619;
    var c$$498;
    var v3488;
    var v15880 = a$$628.browser.msie;
    if (v15880) {
      v15880 = a$$628.browser.version < 7;
    }
    if (v15880) {
      b$$619 = JAM.call(Math.max, Math, [document.documentElement.scrollHeight, document.body.scrollHeight], JAM.policy.p3);
      c$$498 = JAM.call(Math.max, Math, [document.documentElement.offsetHeight, document.body.offsetHeight], JAM.policy.p3);
      var v15881;
      if (b$$619 < c$$498) {
        var v24661 = JAM.call(a$$628, null, [window], JAM.policy.p3);
        v15881 = JAM.call(v24661.height, v24661, [], JAM.policy.p3) + "px";
      } else {
        v15881 = b$$619 + "px";
      }
      v3488 = v15881;
    } else {
      var v15882 = JAM.call(a$$628, null, [document], JAM.policy.p3);
      v3488 = JAM.call(v15882.height, v15882, [], JAM.policy.p3) + "px";
    }
    return v3488;
  }
  function v1723(b$$618) {
    function v1722() {
      d$$378 = JAM.call(Math.max, Math, [d$$378, JAM.call(this.css, this, ["z-index"], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    var c$$497 = JAM.call(a$$628.inArray, a$$628, [b$$618, this.instances], JAM.policy.p3);
    var v15883 = c$$497 != -1;
    if (v15883) {
      var v20157 = this.oldInstances;
      var v26671 = this.instances;
      JAM.call(v20157.push, v20157, [JAM.call(v26671.splice, v26671, [c$$497, 1], JAM.policy.p3)[0]], JAM.policy.p3);
    }
    var v15884 = this.instances.length === 0;
    if (v15884) {
      var v20160 = JAM.call(a$$628, null, [[document, window]], JAM.policy.p3);
      JAM.call(v20160.unbind, v20160, [".dialog-overlay"], JAM.policy.p3);
    }
    JAM.call(b$$618.remove, b$$618, [], JAM.policy.p3);
    var d$$378 = 0;
    JAM.call(a$$628.each, a$$628, [this.instances, v1722], JAM.policy.p3);
    this.maxZ = d$$378;
    return;
  }
  function v1721(b$$616) {
    function v1720(c$$496) {
      var v20161 = b$$616.options.closeOnEscape;
      if (v20161) {
        v20161 = !JAM.call(c$$496.isDefaultPrevented, c$$496, [], JAM.policy.p3);
      }
      var v15885 = v20161;
      if (v15885) {
        v15885 = c$$496.keyCode;
      }
      var v10150 = v15885;
      if (v10150) {
        v10150 = c$$496.keyCode === a$$628.ui.keyCode.ESCAPE;
      }
      var v3491 = v10150;
      if (v3491) {
        JAM.call(b$$616.close, b$$616, [c$$496], JAM.policy.p3);
        JAM.call(c$$496.preventDefault, c$$496, [], JAM.policy.p3);
      }
      return;
    }
    function v1719() {
      function v1718(b$$617) {
        var v15888 = JAM.call(a$$628, null, [b$$617.target], JAM.policy.p3);
        if (JAM.call(v15888.zIndex, v15888, [], JAM.policy.p3) < a$$628.ui.dialog.overlay.maxZ) {
          return!1;
        }
        return;
      }
      var v3493 = a$$628.ui.dialog.overlay.instances.length;
      if (v3493) {
        var v10154 = JAM.call(a$$628, null, [document], JAM.policy.p3);
        JAM.call(v10154.bind, v10154, [a$$628.ui.dialog.overlay.events, v1718], JAM.policy.p3);
      }
      return;
    }
    var v3494 = this.instances.length === 0;
    if (v3494) {
      JAM.call(setTimeout, null, [v1719, 1], JAM.policy.p3);
      var v20167 = JAM.call(a$$628, null, [document], JAM.policy.p3);
      JAM.call(v20167.bind, v20167, ["keydown.dialog-overlay", v1720], JAM.policy.p3);
      var v15893 = JAM.call(a$$628, null, [window], JAM.policy.p3);
      JAM.call(v15893.bind, v15893, ["resize.dialog-overlay", a$$628.ui.dialog.overlay.resize], JAM.policy.p3);
    }
    var v20169 = this.oldInstances;
    var v15895 = JAM.call(v20169.pop, v20169, [], JAM.policy.p3);
    if (!v15895) {
      var v20170 = JAM.call(a$$628, null, ["<div></div>"], JAM.policy.p3);
      v15895 = JAM.call(v20170.addClass, v20170, ["ui-widget-overlay"], JAM.policy.p3);
    }
    var v10157 = v15895;
    var v3495 = JAM.call(v10157.appendTo, v10157, [document.body], JAM.policy.p3);
    var c$$495 = JAM.call(v3495.css, v3495, [{width:JAM.call(this.width, this, [], JAM.policy.p3), height:JAM.call(this.height, this, [], JAM.policy.p3)}], JAM.policy.p3);
    var v15896 = a$$628.fn.bgiframe;
    if (v15896) {
      JAM.call(c$$495.bgiframe, c$$495, [], JAM.policy.p3);
    }
    var v15897 = this.instances;
    JAM.call(v15897.push, v15897, [c$$495], JAM.policy.p3);
    return c$$495;
  }
  function v1717(a$$641) {
    return a$$641 + ".dialog-overlay";
  }
  function v1716(b$$615) {
    var v3497 = a$$628.ui.dialog.overlay;
    var v31212 = JAM.call(v3497.create, v3497, [b$$615], JAM.policy.p3);
    this.$el = v31212;
    return;
  }
  function v1715(a$$640) {
    var b$$614 = JAM.call(a$$640.attr, a$$640, ["id"], JAM.policy.p3);
    if (!b$$614) {
      this.uuid = this.uuid + 1;
      b$$614 = this.uuid;
    }
    return "ui-dialog-title-" + b$$614;
  }
  function v1714() {
    var b$$613 = this.options;
    var c$$494;
    var d$$377;
    var v3498 = this.uiDialog;
    var e$$326 = JAM.call(v3498.is, v3498, [":visible"], JAM.policy.p3);
    var v24673 = this.element;
    var v20173 = JAM.call(v24673.show, v24673, [], JAM.policy.p3);
    JAM.call(v20173.css, v20173, [{width:"auto", minHeight:0, height:0}], JAM.policy.p3);
    var v20175 = b$$613.minWidth > b$$613.width;
    if (v20175) {
      b$$613.width = b$$613.minWidth;
    }
    var v20176 = this.uiDialog;
    var v15900 = JAM.call(v20176.css, v20176, [{height:"auto", width:b$$613.width}], JAM.policy.p3);
    c$$494 = JAM.call(v15900.height, v15900, [], JAM.policy.p3);
    d$$377 = JAM.call(Math.max, Math, [0, b$$613.minHeight - c$$494], JAM.policy.p3);
    if (b$$613.height === "auto") {
      if (a$$628.support.minHeight) {
        var v3499 = this.element;
        JAM.call(v3499.css, v3499, [{minHeight:d$$377, height:"auto"}], JAM.policy.p3);
      } else {
        var v3501 = this.uiDialog;
        JAM.call(v3501.show, v3501, [], JAM.policy.p3);
        var v10165 = this.element;
        var v3502 = JAM.call(v10165.css, v10165, ["height", "auto"], JAM.policy.p3);
        var f$$164 = JAM.call(v3502.height, v3502, [], JAM.policy.p3);
        if (!e$$326) {
          var v15902 = this.uiDialog;
          JAM.call(v15902.hide, v15902, [], JAM.policy.p3);
        }
        var v10166 = this.element;
        JAM.call(v10166.height, v10166, [JAM.call(Math.max, Math, [f$$164, d$$377], JAM.policy.p3)], JAM.policy.p3);
      }
    } else {
      var v3504 = this.element;
      JAM.call(v3504.height, v3504, [JAM.call(Math.max, Math, [b$$613.height - c$$494, 0], JAM.policy.p3)], JAM.policy.p3);
    }
    var v10169 = this.uiDialog;
    var v3507 = JAM.call(v10169.is, v10169, [":data(resizable)"], JAM.policy.p3);
    if (v3507) {
      var v10170 = this.uiDialog;
      JAM.call(v10170.resizable, v10170, ["option", "minHeight", JAM.call(this._minHeight, this, [], JAM.policy.p3)], JAM.policy.p3);
    }
    return;
  }
  function v1713(b$$612, d$$376) {
    var e$$325 = this;
    var f$$163 = e$$325.uiDialog;
    switch(b$$612) {
      case "beforeclose":
        b$$612 = "beforeClose";
        break;
      case "buttons":
        JAM.call(e$$325._createButtons, e$$325, [d$$376], JAM.policy.p3);
        break;
      case "closeText":
        var v3508 = e$$325.uiDialogTitlebarCloseText;
        JAM.call(v3508.text, v3508, ["" + d$$376], JAM.policy.p3);
        break;
      case "dialogClass":
        var v3510 = JAM.call(f$$163.removeClass, f$$163, [e$$325.options.dialogClass], JAM.policy.p3);
        JAM.call(v3510.addClass, v3510, [c$$479 + d$$376], JAM.policy.p3);
        break;
      case "disabled":
        var v3512;
        if (d$$376) {
          v3512 = JAM.call(f$$163.addClass, f$$163, ["ui-dialog-disabled"], JAM.policy.p3);
        } else {
          v3512 = JAM.call(f$$163.removeClass, f$$163, ["ui-dialog-disabled"], JAM.policy.p3);
        }
        v3512;
        break;
      case "draggable":
        var g$$180 = JAM.call(f$$163.is, f$$163, [":data(draggable)"], JAM.policy.p3);
        var v15906 = g$$180;
        if (v15906) {
          v15906 = !d$$376;
        }
        var v10173 = v15906;
        if (v10173) {
          JAM.call(f$$163.draggable, f$$163, ["destroy"], JAM.policy.p3);
        }
        var v15907 = !g$$180;
        if (v15907) {
          v15907 = d$$376;
        }
        var v10174 = v15907;
        if (v10174) {
          JAM.call(e$$325._makeDraggable, e$$325, [], JAM.policy.p3);
        }
        break;
      case "position":
        JAM.call(e$$325._position, e$$325, [d$$376], JAM.policy.p3);
        break;
      case "resizable":
        var h$$146 = JAM.call(f$$163.is, f$$163, [":data(resizable)"], JAM.policy.p3);
        var v20178 = h$$146;
        if (v20178) {
          v20178 = !d$$376;
        }
        var v15908 = v20178;
        if (v15908) {
          JAM.call(f$$163.resizable, f$$163, ["destroy"], JAM.policy.p3);
        }
        var v20179 = h$$146;
        if (v20179) {
          v20179 = typeof d$$376 == "string";
        }
        var v15909 = v20179;
        if (v15909) {
          JAM.call(f$$163.resizable, f$$163, ["option", "handles", d$$376], JAM.policy.p3);
        }
        var v15910 = !h$$146;
        if (v15910) {
          v15910 = d$$376 !== !1;
        }
        var v10175 = v15910;
        if (v10175) {
          JAM.call(e$$325._makeResizable, e$$325, [d$$376], JAM.policy.p3);
        }
        break;
      case "title":
        var v3513 = JAM.call(a$$628, null, [".ui-dialog-title", e$$325.uiDialogTitlebar], JAM.policy.p3);
        JAM.call(v3513.html, v3513, ["" + (d$$376 || "&#160;")], JAM.policy.p3);
    }
    var v3515 = a$$628.Widget.prototype._setOption;
    JAM.call(v3515.apply, v3515, [e$$325, arguments], JAM.policy.p3);
    return;
  }
  function v1712(b$$610) {
    function v1711(a$$639, b$$611) {
      JAM.call(c$$493._setOption, c$$493, [a$$639, b$$611], JAM.policy.p3);
      var v15912 = a$$639 in d$$364;
      if (v15912) {
        g$$179 = !0;
      }
      var v10179 = a$$639 in e$$315;
      if (v10179) {
        JAM.set(f$$162, a$$639, b$$611, JAM.policy.p2);
      }
      return;
    }
    var c$$493 = this;
    var f$$162 = {};
    var g$$179 = !1;
    JAM.call(a$$628.each, a$$628, [b$$610, v1711], JAM.policy.p3);
    if (g$$179) {
      JAM.call(this._size, this, [], JAM.policy.p3);
    }
    var v15913 = this.uiDialog;
    var v10180 = JAM.call(v15913.is, v15913, [":data(resizable)"], JAM.policy.p3);
    if (v10180) {
      var v15914 = this.uiDialog;
      JAM.call(v15914.resizable, v15914, ["option", f$$162], JAM.policy.p3);
    }
    return;
  }
  function v1710(b$$608) {
    function v1709(a$$638, b$$609) {
      var v3516 = +c$$492[a$$638] === c$$492[a$$638];
      if (v3516) {
        JAM.set(d$$375, a$$638, c$$492[a$$638], JAM.policy.p2);
        JAM.set(c$$492, a$$638, b$$609, JAM.policy.p2);
      }
      return;
    }
    var c$$492 = [];
    var d$$375 = [0, 0];
    var e$$324;
    if (b$$608) {
      var v10183 = typeof b$$608 == "string";
      if (!v10183) {
        var v15917 = typeof b$$608 == "object";
        if (v15917) {
          v15917 = "0" in b$$608;
        }
        v10183 = v15917;
      }
      if (v10183) {
        var v20182;
        if (b$$608.split) {
          v20182 = JAM.call(b$$608.split, b$$608, [" "], JAM.policy.p3);
        } else {
          v20182 = [b$$608[0], b$$608[1]];
        }
        c$$492 = v20182;
        var v20183 = c$$492.length === 1;
        if (v20183) {
          introspect(JAM.policy.p2) {
            c$$492[1] = c$$492[0];
          }
        }
        JAM.call(a$$628.each, a$$628, [["left", "top"], v1709], JAM.policy.p3);
        b$$608 = {my:JAM.call(c$$492.join, c$$492, [" "], JAM.policy.p3), at:JAM.call(c$$492.join, c$$492, [" "], JAM.policy.p3), offset:JAM.call(d$$375.join, d$$375, [" "], JAM.policy.p3)};
      }
      b$$608 = JAM.call(a$$628.extend, a$$628, [{}, a$$628.ui.dialog.prototype.options.position, b$$608], JAM.policy.p3);
    } else {
      b$$608 = a$$628.ui.dialog.prototype.options.position;
    }
    var v20186 = this.uiDialog;
    e$$324 = JAM.call(v20186.is, v20186, [":visible"], JAM.policy.p3);
    if (!e$$324) {
      var v24683 = this.uiDialog;
      JAM.call(v24683.show, v24683, [], JAM.policy.p3);
    }
    var v20187 = this.uiDialog;
    var v15922 = JAM.call(v20187.css, v20187, [{top:0, left:0}], JAM.policy.p3);
    JAM.call(v15922.position, v15922, [JAM.call(a$$628.extend, a$$628, [{of:window}, b$$608], JAM.policy.p3)], JAM.policy.p3);
    if (!e$$324) {
      var v15924 = this.uiDialog;
      JAM.call(v15924.hide, v15924, [], JAM.policy.p3);
    }
    return;
  }
  function v1708() {
    var a$$637 = this.options;
    var v3520;
    if (a$$637.height === "auto") {
      v3520 = a$$637.minHeight;
    } else {
      v3520 = JAM.call(Math.min, Math, [a$$637.minHeight, a$$637.height], JAM.policy.p3);
    }
    return v3520;
  }
  function v1707(c$$489) {
    function v1706(b$$607, c$$491) {
      var v24685 = JAM.call(a$$628, null, [this], JAM.policy.p3);
      JAM.call(v24685.removeClass, v24685, ["ui-dialog-resizing"], JAM.policy.p3);
      var v24686 = e$$323;
      var v26673 = JAM.call(a$$628, null, [this], JAM.policy.p3);
      var v31213 = JAM.call(v26673.height, v26673, [], JAM.policy.p3);
      v24686.height = v31213;
      var v20190 = e$$323;
      var v24687 = JAM.call(a$$628, null, [this], JAM.policy.p3);
      var v31214 = JAM.call(v24687.width, v24687, [], JAM.policy.p3);
      v20190.width = v31214;
      JAM.call(d$$374._trigger, d$$374, ["resizeStop", b$$607, JAM.call(h$$145, null, [c$$491], JAM.policy.p3)], JAM.policy.p3);
      var v10192 = a$$628.ui.dialog.overlay;
      JAM.call(v10192.resize, v10192, [], JAM.policy.p3);
      return;
    }
    function v1705(a$$636, b$$606) {
      JAM.call(d$$374._trigger, d$$374, ["resize", a$$636, JAM.call(h$$145, null, [b$$606], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    function v1704(b$$605, c$$490) {
      var v10193 = JAM.call(a$$628, null, [this], JAM.policy.p3);
      JAM.call(v10193.addClass, v10193, ["ui-dialog-resizing"], JAM.policy.p3);
      JAM.call(d$$374._trigger, d$$374, ["resizeStart", b$$605, JAM.call(h$$145, null, [c$$490], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    function h$$145(a$$635) {
      return{originalPosition:a$$635.originalPosition, originalSize:a$$635.originalSize, position:a$$635.position, size:a$$635.size};
    }
    var v3526;
    if (c$$489 === b$$594) {
      v3526 = this.options.resizable;
    } else {
      v3526 = c$$489;
    }
    c$$489 = v3526;
    var d$$374 = this;
    var e$$323 = d$$374.options;
    var v3527 = d$$374.uiDialog;
    var f$$161 = JAM.call(v3527.css, v3527, ["position"], JAM.policy.p3);
    var v3528;
    if (typeof c$$489 == "string") {
      v3528 = c$$489;
    } else {
      v3528 = "n,e,s,w,se,sw,ne,nw";
    }
    var g$$178 = v3528;
    var v20192 = d$$374.uiDialog;
    var v15930 = JAM.call(v20192.resizable, v20192, [{cancel:".ui-dialog-content", containment:"document", alsoResize:d$$374.element, maxWidth:e$$323.maxWidth, maxHeight:e$$323.maxHeight, minWidth:e$$323.minWidth, minHeight:JAM.call(d$$374._minHeight, d$$374, [], JAM.policy.p3), handles:g$$178, start:v1704, resize:v1705, stop:v1706}], JAM.policy.p3);
    var v10198 = JAM.call(v15930.css, v15930, ["position", f$$161], JAM.policy.p3);
    var v3529 = JAM.call(v10198.find, v10198, [".ui-resizable-se"], JAM.policy.p3);
    JAM.call(v3529.addClass, v3529, ["ui-icon ui-icon-grip-diagonal-se"], JAM.policy.p3);
    return;
  }
  function v1703() {
    function v1702(g$$177, h$$144) {
      c$$487.position = [h$$144.position.left - JAM.call(d$$372.scrollLeft, d$$372, [], JAM.policy.p3), h$$144.position.top - JAM.call(d$$372.scrollTop, d$$372, [], JAM.policy.p3)];
      var v24695 = JAM.call(a$$628, null, [this], JAM.policy.p3);
      var v20195 = JAM.call(v24695.removeClass, v24695, ["ui-dialog-dragging"], JAM.policy.p3);
      JAM.call(v20195.height, v20195, [e$$322], JAM.policy.p3);
      JAM.call(b$$604._trigger, b$$604, ["dragStop", g$$177, JAM.call(f$$160, null, [h$$144], JAM.policy.p3)], JAM.policy.p3);
      var v10199 = a$$628.ui.dialog.overlay;
      JAM.call(v10199.resize, v10199, [], JAM.policy.p3);
      return;
    }
    function v1701(a$$634, c$$488) {
      JAM.call(b$$604._trigger, b$$604, ["drag", a$$634, JAM.call(f$$160, null, [c$$488], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    function v1700(d$$373, g$$176) {
      var v15933;
      if (c$$487.height === "auto") {
        v15933 = "auto";
      } else {
        var v20197 = JAM.call(a$$628, null, [this], JAM.policy.p3);
        v15933 = JAM.call(v20197.height, v20197, [], JAM.policy.p3);
      }
      e$$322 = v15933;
      var v20199 = JAM.call(a$$628, null, [this], JAM.policy.p3);
      var v24697 = JAM.call(a$$628, null, [this], JAM.policy.p3);
      var v15934 = JAM.call(v20199.height, v20199, [JAM.call(v24697.height, v24697, [], JAM.policy.p3)], JAM.policy.p3);
      JAM.call(v15934.addClass, v15934, ["ui-dialog-dragging"], JAM.policy.p3);
      JAM.call(b$$604._trigger, b$$604, ["dragStart", d$$373, JAM.call(f$$160, null, [g$$176], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    function f$$160(a$$633) {
      return{position:a$$633.position, offset:a$$633.offset};
    }
    var b$$604 = this;
    var c$$487 = b$$604.options;
    var d$$372 = JAM.call(a$$628, null, [document], JAM.policy.p3);
    var e$$322;
    var v3533 = b$$604.uiDialog;
    JAM.call(v3533.draggable, v3533, [{cancel:".ui-dialog-content, .ui-dialog-titlebar-close", handle:".ui-dialog-titlebar", containment:"document", start:v1700, drag:v1701, stop:v1702}], JAM.policy.p3);
    return;
  }
  function v1699(b$$601) {
    function v1698(b$$602, d$$371) {
      function v1697(a$$632, b$$603) {
        if (a$$632 === "click") {
          return;
        }
        var v3536;
        if (a$$632 in e$$321) {
          v3536 = JAM.call(e$$321[a$$632], e$$321, [b$$603], JAM.policy.p3);
        } else {
          v3536 = JAM.call(e$$321.attr, e$$321, [a$$632, b$$603], JAM.policy.p3);
        }
        v3536;
        return;
      }
      function v1696() {
        var v3537 = d$$371.click;
        JAM.call(v3537.apply, v3537, [c$$486.element[0], arguments], JAM.policy.p3);
        return;
      }
      var v3539;
      if (JAM.call(a$$628.isFunction, a$$628, [d$$371], JAM.policy.p3)) {
        v3539 = {click:d$$371, text:b$$602};
      } else {
        v3539 = d$$371;
      }
      d$$371 = v3539;
      var v10204 = JAM.call(a$$628, null, ['<button type="button"></button>'], JAM.policy.p3);
      var v3540 = JAM.call(v10204.click, v10204, [v1696], JAM.policy.p3);
      var e$$321 = JAM.call(v3540.appendTo, v3540, [f$$159], JAM.policy.p3);
      JAM.call(a$$628.each, a$$628, [d$$371, v1697], JAM.policy.p3);
      var v10205 = a$$628.fn.button;
      if (v10205) {
        JAM.call(e$$321.button, e$$321, [], JAM.policy.p3);
      }
      return;
    }
    function v1695() {
      return!(d$$370 = !0);
    }
    var c$$486 = this;
    var d$$370 = !1;
    var v3542 = JAM.call(a$$628, null, ["<div></div>"], JAM.policy.p3);
    var e$$320 = JAM.call(v3542.addClass, v3542, ["ui-dialog-buttonpane ui-widget-content ui-helper-clearfix"], JAM.policy.p3);
    var v10206 = JAM.call(a$$628, null, ["<div></div>"], JAM.policy.p3);
    var v3543 = JAM.call(v10206.addClass, v10206, ["ui-dialog-buttonset"], JAM.policy.p3);
    var f$$159 = JAM.call(v3543.appendTo, v3543, [e$$320], JAM.policy.p3);
    var v20201 = c$$486.uiDialog;
    var v15936 = JAM.call(v20201.find, v20201, [".ui-dialog-buttonpane"], JAM.policy.p3);
    JAM.call(v15936.remove, v15936, [], JAM.policy.p3);
    var v20202 = typeof b$$601 == "object";
    if (v20202) {
      v20202 = b$$601 !== null;
    }
    var v15937 = v20202;
    if (v15937) {
      JAM.call(a$$628.each, a$$628, [b$$601, v1695], JAM.policy.p3);
    }
    if (d$$370) {
      JAM.call(a$$628.each, a$$628, [b$$601, v1698], JAM.policy.p3);
      JAM.call(e$$320.appendTo, e$$320, [c$$486.uiDialog], JAM.policy.p3);
    }
    return;
  }
  function v1694() {
    function v1693(b$$600) {
      if (b$$600.keyCode !== a$$628.ui.keyCode.TAB) {
        return;
      }
      var c$$485 = JAM.call(a$$628, null, [":tabbable", this], JAM.policy.p3);
      var d$$369 = JAM.call(c$$485.filter, c$$485, [":first"], JAM.policy.p3);
      var e$$319 = JAM.call(c$$485.filter, c$$485, [":last"], JAM.policy.p3);
      var v10209 = b$$600.target === e$$319[0];
      if (v10209) {
        v10209 = !b$$600.shiftKey;
      }
      if (v10209) {
        JAM.call(d$$369.focus, d$$369, [1], JAM.policy.p3);
        return!1;
      }
      var v10210 = b$$600.target === d$$369[0];
      if (v10210) {
        v10210 = b$$600.shiftKey;
      }
      if (v10210) {
        JAM.call(e$$319.focus, e$$319, [1], JAM.policy.p3);
        return!1;
      }
      return;
    }
    if (this._isOpen) {
      return;
    }
    var b$$599 = this;
    var c$$484 = b$$599.options;
    var d$$368 = b$$599.uiDialog;
    var v30024 = b$$599;
    var v30290;
    if (c$$484.modal) {
      v30290 = JAM.new(a$$628.ui.dialog.overlay, [b$$599], JAM.policy.p3);
    } else {
      v30290 = null;
    }
    v30024.overlay = v30290;
    JAM.call(b$$599._size, b$$599, [], JAM.policy.p3);
    JAM.call(b$$599._position, b$$599, [c$$484.position], JAM.policy.p3);
    JAM.call(d$$368.show, d$$368, [c$$484.show], JAM.policy.p3);
    JAM.call(b$$599.moveToTop, b$$599, [!0], JAM.policy.p3);
    var v26678 = c$$484.modal;
    if (v26678) {
      JAM.call(d$$368.bind, d$$368, ["keydown.ui-dialog", v1693], JAM.policy.p3);
    }
    var v30025 = b$$599.element;
    var v29653 = JAM.call(v30025.find, v30025, [":tabbable"], JAM.policy.p3);
    var v29035 = JAM.call(v29653.get, v29653, [], JAM.policy.p3);
    var v30026 = JAM.call(d$$368.find, d$$368, [".ui-dialog-buttonpane :tabbable"], JAM.policy.p3);
    var v29654 = JAM.call(v30026.get, v30026, [], JAM.policy.p3);
    var v26679 = JAM.call(a$$628, null, [JAM.call(v29035.concat, v29035, [JAM.call(v29654.concat, v29654, [JAM.call(d$$368.get, d$$368, [], JAM.policy.p3)], JAM.policy.p3)], JAM.policy.p3)], JAM.policy.p3);
    var v24699 = JAM.call(v26679.eq, v26679, [0], JAM.policy.p3);
    JAM.call(v24699.focus, v24699, [], JAM.policy.p3);
    b$$599._isOpen = !0;
    JAM.call(b$$599._trigger, b$$599, ["open"], JAM.policy.p3);
    return b$$599;
  }
  function v1692(b$$598, c$$483) {
    var d$$367 = this;
    var e$$318 = d$$367.options;
    var f$$158;
    var v3548;
    var v20205 = e$$318.modal;
    if (v20205) {
      v20205 = !b$$598;
    }
    var v15944 = v20205;
    if (!v15944) {
      var v20206 = !e$$318.stack;
      if (v20206) {
        v20206 = !e$$318.modal;
      }
      v15944 = v20206;
    }
    if (v15944) {
      v3548 = JAM.call(d$$367._trigger, d$$367, ["focus", c$$483], JAM.policy.p3);
    } else {
      var v29656 = e$$318.zIndex > a$$628.ui.dialog.maxZ;
      if (v29656) {
        a$$628.ui.dialog.maxZ = e$$318.zIndex;
      }
      var v29657 = d$$367.overlay;
      if (v29657) {
        var v30293 = a$$628.ui.dialog;
        v30293.maxZ = v30293.maxZ + 1;
        var v30294 = d$$367.overlay.$el;
        JAM.call(v30294.css, v30294, ["z-index", a$$628.ui.dialog.overlay.maxZ = a$$628.ui.dialog.maxZ], JAM.policy.p3);
      }
      var v29658 = d$$367.element;
      var v29037 = JAM.call(v29658.scrollTop, v29658, [], JAM.policy.p3);
      var v29659 = d$$367.element;
      f$$158 = {scrollTop:v29037, scrollLeft:JAM.call(v29659.scrollLeft, v29659, [], JAM.policy.p3)};
      var v28113 = a$$628.ui.dialog;
      v28113.maxZ = v28113.maxZ + 1;
      var v26680 = d$$367.uiDialog;
      JAM.call(v26680.css, v26680, ["z-index", a$$628.ui.dialog.maxZ], JAM.policy.p3);
      var v24702 = d$$367.element;
      JAM.call(v24702.attr, v24702, [f$$158], JAM.policy.p3);
      JAM.call(d$$367._trigger, d$$367, ["focus", c$$483], JAM.policy.p3);
      v3548 = d$$367;
    }
    return v3548;
  }
  function v1691() {
    return this._isOpen;
  }
  function v1690(b$$597) {
    function v1689() {
      var v3549 = this !== c$$482.uiDialog[0];
      if (v3549) {
        var v15946 = JAM.call(a$$628, null, [this], JAM.policy.p3);
        e$$317 = JAM.call(v15946.css, v15946, ["z-index"], JAM.policy.p3);
        var v15947 = JAM.call(isNaN, null, [e$$317], JAM.policy.p3);
        if (!v15947) {
          d$$366 = JAM.call(Math.max, Math, [d$$366, e$$317], JAM.policy.p3);
        }
      }
      return;
    }
    function v1688() {
      JAM.call(c$$482._trigger, c$$482, ["close", b$$597], JAM.policy.p3);
      return;
    }
    var c$$482 = this;
    var d$$366;
    var e$$317;
    if (!1 === JAM.call(c$$482._trigger, c$$482, ["beforeClose", b$$597], JAM.policy.p3)) {
      return;
    }
    var v28115 = c$$482.overlay;
    if (v28115) {
      var v29041 = c$$482.overlay;
      JAM.call(v29041.destroy, v29041, [], JAM.policy.p3);
    }
    var v28116 = c$$482.uiDialog;
    JAM.call(v28116.unbind, v28116, ["keypress.ui-dialog"], JAM.policy.p3);
    c$$482._isOpen = !1;
    var v24703;
    if (c$$482.options.hide) {
      var v26682 = c$$482.uiDialog;
      v24703 = JAM.call(v26682.hide, v26682, [c$$482.options.hide, v1688], JAM.policy.p3);
    } else {
      var v28119 = c$$482.uiDialog;
      JAM.call(v28119.hide, v28119, [], JAM.policy.p3);
      v24703 = JAM.call(c$$482._trigger, c$$482, ["close", b$$597], JAM.policy.p3);
    }
    v24703;
    var v20209 = a$$628.ui.dialog.overlay;
    JAM.call(v20209.resize, v20209, [], JAM.policy.p3);
    var v15948 = c$$482.options.modal;
    if (v15948) {
      d$$366 = 0;
      var v26686 = JAM.call(a$$628, null, [".ui-dialog"], JAM.policy.p3);
      JAM.call(v26686.each, v26686, [v1689], JAM.policy.p3);
      a$$628.ui.dialog.maxZ = d$$366;
    }
    return c$$482;
  }
  function v1687() {
    return this.uiDialog;
  }
  function v1686() {
    var a$$631 = this;
    var v26688 = a$$631.overlay;
    if (v26688) {
      var v28120 = a$$631.overlay;
      JAM.call(v28120.destroy, v28120, [], JAM.policy.p3);
    }
    var v26689 = a$$631.uiDialog;
    JAM.call(v26689.hide, v26689, [], JAM.policy.p3);
    var v29661 = a$$631.element;
    var v29042 = JAM.call(v29661.unbind, v29661, [".dialog"], JAM.policy.p3);
    var v28121 = JAM.call(v29042.removeData, v29042, ["dialog"], JAM.policy.p3);
    var v26690 = JAM.call(v28121.removeClass, v28121, ["ui-dialog-content ui-widget-content"], JAM.policy.p3);
    var v24706 = JAM.call(v26690.hide, v26690, [], JAM.policy.p3);
    JAM.call(v24706.appendTo, v24706, ["body"], JAM.policy.p3);
    var v20211 = a$$631.uiDialog;
    JAM.call(v20211.remove, v20211, [], JAM.policy.p3);
    var v15949 = a$$631.originalTitle;
    if (v15949) {
      var v20212 = a$$631.element;
      JAM.call(v20212.attr, v20212, ["title", a$$631.originalTitle], JAM.policy.p3);
    }
    return a$$631;
  }
  function v1685() {
    var v3551 = this.options.autoOpen;
    if (v3551) {
      JAM.call(this.open, this, [], JAM.policy.p3);
    }
    return;
  }
  function v1684() {
    function v1683(a$$630) {
      JAM.call(b$$596.close, b$$596, [a$$630], JAM.policy.p3);
      return!1;
    }
    function v1682() {
      JAM.call(j$$101.removeClass, j$$101, ["ui-state-focus"], JAM.policy.p3);
      return;
    }
    function v1681() {
      JAM.call(j$$101.addClass, j$$101, ["ui-state-focus"], JAM.policy.p3);
      return;
    }
    function v1680() {
      JAM.call(j$$101.removeClass, j$$101, ["ui-state-hover"], JAM.policy.p3);
      return;
    }
    function v1679() {
      JAM.call(j$$101.addClass, j$$101, ["ui-state-hover"], JAM.policy.p3);
      return;
    }
    function v1678(a$$629) {
      JAM.call(b$$596.moveToTop, b$$596, [!1, a$$629], JAM.policy.p3);
      return;
    }
    function v1677(c$$481) {
      var v20214 = d$$365.closeOnEscape;
      if (v20214) {
        v20214 = !JAM.call(c$$481.isDefaultPrevented, c$$481, [], JAM.policy.p3);
      }
      var v15950 = v20214;
      if (v15950) {
        v15950 = c$$481.keyCode;
      }
      var v10216 = v15950;
      if (v10216) {
        v10216 = c$$481.keyCode === a$$628.ui.keyCode.ESCAPE;
      }
      var v3553 = v10216;
      if (v3553) {
        JAM.call(b$$596.close, b$$596, [c$$481], JAM.policy.p3);
        JAM.call(c$$481.preventDefault, c$$481, [], JAM.policy.p3);
      }
      return;
    }
    var v15953 = this.element;
    var v31215 = JAM.call(v15953.attr, v15953, ["title"], JAM.policy.p3);
    this.originalTitle = v31215;
    var v15954 = typeof this.originalTitle != "string";
    if (v15954) {
      this.originalTitle = "";
    }
    var v10217 = this.options;
    var v15955 = this.options.title;
    if (!v15955) {
      v15955 = this.originalTitle;
    }
    v10217.title = v15955;
    var b$$596 = this;
    var d$$365 = b$$596.options;
    var v3554 = d$$365.title;
    if (!v3554) {
      v3554 = "&#160;";
    }
    var e$$316 = v3554;
    var v3555 = a$$628.ui.dialog;
    var f$$157 = JAM.call(v3555.getTitleId, v3555, [b$$596.element], JAM.policy.p3);
    var v30030 = b$$596;
    var v31216 = JAM.call(a$$628, null, ["<div></div>"], JAM.policy.p3);
    var v29662 = v30030.uiDialog = v31216;
    var v29043 = JAM.call(v29662.appendTo, v29662, [document.body], JAM.policy.p3);
    var v28122 = JAM.call(v29043.hide, v29043, [], JAM.policy.p3);
    var v26691 = JAM.call(v28122.addClass, v28122, [c$$479 + d$$365.dialogClass], JAM.policy.p3);
    var v24710 = JAM.call(v26691.css, v26691, [{zIndex:d$$365.zIndex}], JAM.policy.p3);
    var v20219 = JAM.call(v24710.attr, v24710, ["tabIndex", -1], JAM.policy.p3);
    var v15956 = JAM.call(v20219.css, v20219, ["outline", 0], JAM.policy.p3);
    var v10220 = JAM.call(v15956.keydown, v15956, [v1677], JAM.policy.p3);
    var v3557 = JAM.call(v10220.attr, v10220, [{role:"dialog", "aria-labelledby":f$$157}], JAM.policy.p3);
    var g$$175 = JAM.call(v3557.mousedown, v3557, [v1678], JAM.policy.p3);
    var v20220 = b$$596.element;
    var v15957 = JAM.call(v20220.show, v20220, [], JAM.policy.p3);
    var v10222 = JAM.call(v15957.removeAttr, v15957, ["title"], JAM.policy.p3);
    var v3558 = JAM.call(v10222.addClass, v10222, ["ui-dialog-content ui-widget-content"], JAM.policy.p3);
    var h$$143 = JAM.call(v3558.appendTo, v3558, [g$$175], JAM.policy.p3);
    var v15958 = b$$596;
    var v31217 = JAM.call(a$$628, null, ["<div></div>"], JAM.policy.p3);
    var v10223 = v15958.uiDialogTitlebar = v31217;
    var v3559 = JAM.call(v10223.addClass, v10223, ["ui-dialog-titlebar ui-widget-header ui-corner-all ui-helper-clearfix"], JAM.policy.p3);
    var i$$196 = JAM.call(v3559.prependTo, v3559, [g$$175], JAM.policy.p3);
    var v28125 = JAM.call(a$$628, null, ['<a href="#"></a>'], JAM.policy.p3);
    var v26693 = JAM.call(v28125.addClass, v28125, ["ui-dialog-titlebar-close ui-corner-all"], JAM.policy.p3);
    var v24711 = JAM.call(v26693.attr, v26693, ["role", "button"], JAM.policy.p3);
    var v20221 = JAM.call(v24711.hover, v24711, [v1679, v1680], JAM.policy.p3);
    var v15959 = JAM.call(v20221.focus, v20221, [v1681], JAM.policy.p3);
    var v10224 = JAM.call(v15959.blur, v15959, [v1682], JAM.policy.p3);
    var v3560 = JAM.call(v10224.click, v10224, [v1683], JAM.policy.p3);
    var j$$101 = JAM.call(v3560.appendTo, v3560, [i$$196], JAM.policy.p3);
    var v20222 = b$$596;
    var v31218 = JAM.call(a$$628, null, ["<span></span>"], JAM.policy.p3);
    var v15960 = v20222.uiDialogTitlebarCloseText = v31218;
    var v10225 = JAM.call(v15960.addClass, v15960, ["ui-icon ui-icon-closethick"], JAM.policy.p3);
    var v3561 = JAM.call(v10225.text, v10225, [d$$365.closeText], JAM.policy.p3);
    var k$$70 = JAM.call(v3561.appendTo, v3561, [j$$101], JAM.policy.p3);
    var v20223 = JAM.call(a$$628, null, ["<span></span>"], JAM.policy.p3);
    var v15961 = JAM.call(v20223.addClass, v20223, ["ui-dialog-title"], JAM.policy.p3);
    var v10227 = JAM.call(v15961.attr, v15961, ["id", f$$157], JAM.policy.p3);
    var v3562 = JAM.call(v10227.html, v10227, [e$$316], JAM.policy.p3);
    var l$$77 = JAM.call(v3562.prependTo, v3562, [i$$196], JAM.policy.p3);
    var v29045 = JAM.call(a$$628.isFunction, a$$628, [d$$365.beforeclose], JAM.policy.p3);
    if (v29045) {
      v29045 = !JAM.call(a$$628.isFunction, a$$628, [d$$365.beforeClose], JAM.policy.p3);
    }
    var v28126 = v29045;
    if (v28126) {
      d$$365.beforeClose = d$$365.beforeclose;
    }
    var v29046 = JAM.call(i$$196.find, i$$196, ["*"], JAM.policy.p3);
    var v28127 = JAM.call(v29046.add, v29046, [i$$196], JAM.policy.p3);
    JAM.call(v28127.disableSelection, v28127, [], JAM.policy.p3);
    var v28128 = d$$365.draggable;
    if (v28128) {
      v28128 = a$$628.fn.draggable;
    }
    var v26694 = v28128;
    if (v26694) {
      JAM.call(b$$596._makeDraggable, b$$596, [], JAM.policy.p3);
    }
    var v26695 = d$$365.resizable;
    if (v26695) {
      v26695 = a$$628.fn.resizable;
    }
    var v24712 = v26695;
    if (v24712) {
      JAM.call(b$$596._makeResizable, b$$596, [], JAM.policy.p3);
    }
    JAM.call(b$$596._createButtons, b$$596, [d$$365.buttons], JAM.policy.p3);
    b$$596._isOpen = !1;
    var v10228 = a$$628.fn.bgiframe;
    if (v10228) {
      JAM.call(g$$175.bgiframe, g$$175, [], JAM.policy.p3);
    }
    return;
  }
  function v1676(b$$595) {
    var v15963 = JAM.call(a$$628, null, [this], JAM.policy.p3);
    var v10229 = JAM.call(v15963.css, v15963, [b$$595], JAM.policy.p3);
    var c$$480 = JAM.call(v10229.offset, v10229, [], JAM.policy.p3).top;
    var v3564 = c$$480 < 0;
    if (v3564) {
      var v10230 = JAM.call(a$$628, null, [this], JAM.policy.p3);
      JAM.call(v10230.css, v10230, ["top", b$$595.top - c$$480], JAM.policy.p3);
    }
    return;
  }
  var c$$479 = "ui-dialog ui-widget ui-widget-content ui-corner-all ";
  var d$$364 = {buttons:!0, height:!0, maxHeight:!0, maxWidth:!0, minHeight:!0, minWidth:!0, width:!0};
  var e$$315 = {maxHeight:!0, maxWidth:!0, minHeight:!0, minWidth:!0};
  JAM.call(a$$628.widget, a$$628, ["ui.dialog", {options:{autoOpen:!0, buttons:{}, closeOnEscape:!0, closeText:"close", dialogClass:"", draggable:!0, hide:null, height:"auto", maxHeight:!1, maxWidth:!1, minHeight:150, minWidth:150, modal:!1, position:{my:"center", at:"center", collision:"fit", using:v1676}, resizable:!0, show:null, stack:!0, title:"", width:300, zIndex:1E3}, _create:v1684, _init:v1685, destroy:v1686, widget:v1687, close:v1690, isOpen:v1691, moveToTop:v1692, open:v1694, _createButtons:v1699, 
  _makeDraggable:v1703, _makeResizable:v1707, _minHeight:v1708, _position:v1710, _setOptions:v1712, _setOption:v1713, _size:v1714}], JAM.policy.p3);
  JAM.call(a$$628.extend, a$$628, [a$$628.ui.dialog, {version:"1.8.24", uuid:0, maxZ:0, getTitleId:v1715, overlay:v1716}], JAM.policy.p3);
  var v15965 = a$$628.ui.dialog.overlay;
  var v24716 = JAM.call(a$$628.map, a$$628, [JAM.call("focus,mousedown,mouseup,keydown,keypress,click".split, "focus,mousedown,mouseup,keydown,keypress,click", [","], JAM.policy.p3), v1717], JAM.policy.p3);
  JAM.call(a$$628.extend, a$$628, [v15965, {instances:[], oldInstances:[], maxZ:0, events:JAM.call(v24716.join, v24716, [" "], JAM.policy.p3), create:v1721, destroy:v1723, height:v1724, width:v1725, resize:v1727}], JAM.policy.p3);
  JAM.call(a$$628.extend, a$$628, [a$$628.ui.dialog.overlay.prototype, {destroy:v1728}], JAM.policy.p3);
  return;
}
function v1675($$$3, undefined$$1) {
  function v1674(a$$627) {
    function v1673() {
      var v3576;
      if (typeof a$$627 == "string") {
        var v10234 = $$$3.datepicker["_" + a$$627 + "Datepicker"];
        var v10235 = $$$3.datepicker;
        var v15971 = [this];
        v3576 = JAM.call(v10234.apply, v10234, [v10235, JAM.call(v15971.concat, v15971, [b$$593], JAM.policy.p3)], JAM.policy.p3);
      } else {
        var v10237 = $$$3.datepicker;
        v3576 = JAM.call(v10237._attachDatepicker, v10237, [this, a$$627], JAM.policy.p3);
      }
      v3576;
      return;
    }
    if (!this.length) {
      return this;
    }
    var v3578 = $$$3.datepicker.initialized;
    if (!v3578) {
      var v24718 = JAM.call($$$3, null, [document], JAM.policy.p3);
      var v20232 = JAM.call(v24718.mousedown, v24718, [$$$3.datepicker._checkExternalClick], JAM.policy.p3);
      var v15972 = JAM.call(v20232.find, v20232, ["body"], JAM.policy.p3);
      JAM.call(v15972.append, v15972, [$$$3.datepicker.dpDiv], JAM.policy.p3);
      $$$3.datepicker.initialized = !0;
    }
    var v3579 = Array.prototype.slice;
    var b$$593 = JAM.call(v3579.call, v3579, [arguments, 1], JAM.policy.p3);
    var v3580;
    var v15975 = typeof a$$627 != "string";
    if (!v15975) {
      var v24720 = a$$627 != "isDisabled";
      if (v24720) {
        v24720 = a$$627 != "getDate";
      }
      var v20235 = v24720;
      if (v20235) {
        v20235 = a$$627 != "widget";
      }
      v15975 = v20235;
    }
    if (v15975) {
      var v10243;
      var v24721 = a$$627 == "option";
      if (v24721) {
        v24721 = arguments.length == 2;
      }
      var v20237 = v24721;
      if (v20237) {
        v20237 = typeof arguments[1] == "string";
      }
      if (v20237) {
        var v15976 = $$$3.datepicker["_" + a$$627 + "Datepicker"];
        var v15977 = $$$3.datepicker;
        var v20240 = [this[0]];
        v10243 = JAM.call(v15976.apply, v15976, [v15977, JAM.call(v20240.concat, v20240, [b$$593], JAM.policy.p3)], JAM.policy.p3);
      } else {
        v10243 = JAM.call(this.each, this, [v1673], JAM.policy.p3);
      }
      v3580 = v10243;
    } else {
      var v10244 = $$$3.datepicker["_" + a$$627 + "Datepicker"];
      var v10245 = $$$3.datepicker;
      var v15982 = [this[0]];
      v3580 = JAM.call(v10244.apply, v10244, [v10245, JAM.call(v15982.concat, v15982, [b$$593], JAM.policy.p3)], JAM.policy.p3);
    }
    return v3580;
  }
  function v1672(a$$626, b$$592, c$$478, d$$363) {
    if (!b$$592) {
      a$$626.currentDay = a$$626.selectedDay;
      a$$626.currentMonth = a$$626.selectedMonth;
      a$$626.currentYear = a$$626.selectedYear;
    }
    var v3581;
    if (b$$592) {
      var v10249;
      if (typeof b$$592 == "object") {
        v10249 = b$$592;
      } else {
        v10249 = JAM.call(this._daylightSavingAdjust, this, [JAM.new(Date, [d$$363, c$$478, b$$592], JAM.policy.p3)], JAM.policy.p3);
      }
      v3581 = v10249;
    } else {
      v3581 = JAM.call(this._daylightSavingAdjust, this, [JAM.new(Date, [a$$626.currentYear, a$$626.currentMonth, a$$626.currentDay], JAM.policy.p3)], JAM.policy.p3);
    }
    var e$$314 = v3581;
    return JAM.call(this.formatDate, this, [JAM.call(this._get, this, [a$$626, "dateFormat"], JAM.policy.p3), e$$314, JAM.call(this._getFormatConfig, this, [a$$626], JAM.policy.p3)], JAM.policy.p3);
  }
  function v1671(a$$625) {
    var b$$591 = JAM.call(this._get, this, [a$$625, "shortYearCutoff"], JAM.policy.p3);
    var v10251;
    if (typeof b$$591 != "string") {
      v10251 = b$$591;
    } else {
      var v24725 = JAM.new(Date, [], JAM.policy.p3);
      v10251 = JAM.call(v24725.getFullYear, v24725, [], JAM.policy.p3) % 100 + JAM.call(parseInt, null, [b$$591, 10], JAM.policy.p3);
    }
    b$$591 = v10251;
    return{shortYearCutoff:b$$591, dayNamesShort:JAM.call(this._get, this, [a$$625, "dayNamesShort"], JAM.policy.p3), dayNames:JAM.call(this._get, this, [a$$625, "dayNames"], JAM.policy.p3), monthNamesShort:JAM.call(this._get, this, [a$$625, "monthNamesShort"], JAM.policy.p3), monthNames:JAM.call(this._get, this, [a$$625, "monthNames"], JAM.policy.p3)};
  }
  function v1670(a$$624, b$$590) {
    var c$$477 = JAM.call(this._getMinMaxDate, this, [a$$624, "min"], JAM.policy.p3);
    var d$$362 = JAM.call(this._getMinMaxDate, this, [a$$624, "max"], JAM.policy.p3);
    var v10256 = !c$$477;
    if (!v10256) {
      v10256 = JAM.call(b$$590.getTime, b$$590, [], JAM.policy.p3) >= JAM.call(c$$477.getTime, c$$477, [], JAM.policy.p3);
    }
    var v3584 = v10256;
    if (v3584) {
      var v10257 = !d$$362;
      if (!v10257) {
        v10257 = JAM.call(b$$590.getTime, b$$590, [], JAM.policy.p3) <= JAM.call(d$$362.getTime, d$$362, [], JAM.policy.p3);
      }
      v3584 = v10257;
    }
    return v3584;
  }
  function v1669(a$$623, b$$589, c$$476, d$$361) {
    var e$$313 = JAM.call(this._getNumberOfMonths, this, [a$$623], JAM.policy.p3);
    var v20246;
    if (b$$589 < 0) {
      v20246 = b$$589;
    } else {
      v20246 = e$$313[0] * e$$313[1];
    }
    var f$$156 = JAM.call(this._daylightSavingAdjust, this, [JAM.new(Date, [c$$476, d$$361 + v20246, 1], JAM.policy.p3)], JAM.policy.p3);
    var v10259 = b$$589 < 0;
    if (v10259) {
      JAM.call(f$$156.setDate, f$$156, [JAM.call(this._getDaysInMonth, this, [JAM.call(f$$156.getFullYear, f$$156, [], JAM.policy.p3), JAM.call(f$$156.getMonth, f$$156, [], JAM.policy.p3)], JAM.policy.p3)], JAM.policy.p3);
    }
    return JAM.call(this._isInRange, this, [a$$623, f$$156], JAM.policy.p3);
  }
  function v1668(a$$622, b$$588) {
    var v3586 = JAM.new(Date, [a$$622, b$$588, 1], JAM.policy.p3);
    return JAM.call(v3586.getDay, v3586, [], JAM.policy.p3);
  }
  function v1667(a$$621, b$$587) {
    var v10260 = JAM.call(this._daylightSavingAdjust, this, [JAM.new(Date, [a$$621, b$$587, 32], JAM.policy.p3)], JAM.policy.p3);
    return 32 - JAM.call(v10260.getDate, v10260, [], JAM.policy.p3);
  }
  function v1666(a$$620, b$$586) {
    return JAM.call(this._determineDate, this, [a$$620, JAM.call(this._get, this, [a$$620, b$$586 + "Date"], JAM.policy.p3), null], JAM.policy.p3);
  }
  function v1665(a$$619) {
    var b$$585 = JAM.call(this._get, this, [a$$619, "numberOfMonths"], JAM.policy.p3);
    var v3589;
    if (b$$585 == null) {
      v3589 = [1, 1];
    } else {
      var v10262;
      if (typeof b$$585 == "number") {
        v10262 = [1, b$$585];
      } else {
        v10262 = b$$585;
      }
      v3589 = v10262;
    }
    return v3589;
  }
  function v1664(a$$618) {
    var b$$584 = JAM.call(this._get, this, [a$$618, "onChangeMonthYear"], JAM.policy.p3);
    if (b$$584) {
      var v16001;
      if (a$$618.input) {
        v16001 = a$$618.input[0];
      } else {
        v16001 = null;
      }
      JAM.call(b$$584.apply, b$$584, [v16001, [a$$618.selectedYear, a$$618.selectedMonth + 1, a$$618]], JAM.policy.p3);
    }
    return;
  }
  function v1663(a$$617, b$$583) {
    var c$$475 = JAM.call(this._getMinMaxDate, this, [a$$617, "min"], JAM.policy.p3);
    var d$$360 = JAM.call(this._getMinMaxDate, this, [a$$617, "max"], JAM.policy.p3);
    var v3590;
    var v16004 = c$$475;
    if (v16004) {
      v16004 = b$$583 < c$$475;
    }
    if (v16004) {
      v3590 = c$$475;
    } else {
      v3590 = b$$583;
    }
    var e$$312 = v3590;
    var v10267;
    var v20253 = d$$360;
    if (v20253) {
      v20253 = e$$312 > d$$360;
    }
    if (v20253) {
      v10267 = d$$360;
    } else {
      v10267 = e$$312;
    }
    e$$312 = v10267;
    return e$$312;
  }
  function v1662(a$$616, b$$582, c$$474) {
    var v3591 = a$$616.drawYear;
    var v10268;
    if (c$$474 == "Y") {
      v10268 = b$$582;
    } else {
      v10268 = 0;
    }
    var d$$359 = v3591 + v10268;
    var v3593 = a$$616.drawMonth;
    var v10269;
    if (c$$474 == "M") {
      v10269 = b$$582;
    } else {
      v10269 = 0;
    }
    var e$$311 = v3593 + v10269;
    var v3595 = JAM.call(Math.min, Math, [a$$616.selectedDay, JAM.call(this._getDaysInMonth, this, [d$$359, e$$311], JAM.policy.p3)], JAM.policy.p3);
    var v10272;
    if (c$$474 == "D") {
      v10272 = b$$582;
    } else {
      v10272 = 0;
    }
    var f$$155 = v3595 + v10272;
    var g$$174 = JAM.call(this._restrictMinMax, this, [a$$616, JAM.call(this._daylightSavingAdjust, this, [JAM.new(Date, [d$$359, e$$311, f$$155], JAM.policy.p3)], JAM.policy.p3)], JAM.policy.p3);
    var v20254 = a$$616;
    var v31219 = JAM.call(g$$174.getDate, g$$174, [], JAM.policy.p3);
    v20254.selectedDay = v31219;
    var v20255 = a$$616;
    var v24729 = a$$616;
    var v31220 = JAM.call(g$$174.getMonth, g$$174, [], JAM.policy.p3);
    v20255.drawMonth = v24729.selectedMonth = v31220;
    var v16009 = a$$616;
    var v20256 = a$$616;
    var v31221 = JAM.call(g$$174.getFullYear, g$$174, [], JAM.policy.p3);
    v16009.drawYear = v20256.selectedYear = v31221;
    var v16010 = c$$474 == "M";
    if (!v16010) {
      v16010 = c$$474 == "Y";
    }
    var v10274 = v16010;
    if (v10274) {
      JAM.call(this._notifyChange, this, [a$$616], JAM.policy.p3);
    }
    return;
  }
  function v1661(a$$614, b$$580, c$$473, d$$358, e$$310, f$$154, g$$173, h$$142) {
    function v1660(a$$615) {
      var v3598;
      if (JAM.call(a$$615.match, a$$615, [/c[+-].*/], JAM.policy.p3)) {
        v3598 = c$$473 + JAM.call(parseInt, null, [JAM.call(a$$615.substring, a$$615, [1], JAM.policy.p3), 10], JAM.policy.p3);
      } else {
        var v10277;
        if (JAM.call(a$$615.match, a$$615, [/[+-].*/], JAM.policy.p3)) {
          v10277 = r$$20 + JAM.call(parseInt, null, [a$$615, 10], JAM.policy.p3);
        } else {
          v10277 = JAM.call(parseInt, null, [a$$615, 10], JAM.policy.p3);
        }
        v3598 = v10277;
      }
      var b$$581 = v3598;
      var v3599;
      if (JAM.call(isNaN, null, [b$$581], JAM.policy.p3)) {
        v3599 = r$$20;
      } else {
        v3599 = b$$581;
      }
      return v3599;
    }
    var i$$195 = JAM.call(this._get, this, [a$$614, "changeMonth"], JAM.policy.p3);
    var j$$100 = JAM.call(this._get, this, [a$$614, "changeYear"], JAM.policy.p3);
    var k$$69 = JAM.call(this._get, this, [a$$614, "showMonthAfterYear"], JAM.policy.p3);
    var l$$76 = '<div class="ui-datepicker-title">';
    var m$$47 = "";
    var v10280 = f$$154;
    if (!v10280) {
      v10280 = !i$$195;
    }
    if (v10280) {
      m$$47 = m$$47 + ('<span class="ui-datepicker-month">' + g$$173[b$$580] + "</span>");
    } else {
      var v3600 = d$$358;
      if (v3600) {
        v3600 = JAM.call(d$$358.getFullYear, d$$358, [], JAM.policy.p3) == c$$473;
      }
      var n$$93 = v3600;
      var v3601 = e$$310;
      if (v3601) {
        v3601 = JAM.call(e$$310.getFullYear, e$$310, [], JAM.policy.p3) == c$$473;
      }
      var o$$23 = v3601;
      m$$47 = m$$47 + '<select class="ui-datepicker-month" data-handler="selectMonth" data-event="change">';
      var p$$48 = 0;
      var v3603 = p$$48 < 12;
      for (;v3603;) {
        var v16017 = !n$$93;
        if (!v16017) {
          v16017 = p$$48 >= JAM.call(d$$358.getMonth, d$$358, [], JAM.policy.p3);
        }
        var v10284 = v16017;
        if (v10284) {
          var v16018 = !o$$23;
          if (!v16018) {
            v16018 = p$$48 <= JAM.call(e$$310.getMonth, e$$310, [], JAM.policy.p3);
          }
          v10284 = v16018;
        }
        var v3602 = v10284;
        if (v3602) {
          var v28130 = '<option value="' + p$$48 + '"';
          var v29049;
          if (p$$48 == b$$580) {
            v29049 = ' selected="selected"';
          } else {
            v29049 = "";
          }
          m$$47 = m$$47 + (v28130 + v29049 + ">" + h$$142[p$$48] + "</option>");
        }
        p$$48 = p$$48 + 1;
        v3603 = p$$48 < 12;
      }
      m$$47 = m$$47 + "</select>";
    }
    if (!k$$69) {
      var v24732;
      var v29050 = f$$154;
      if (!v29050) {
        v29050 = !i$$195;
      }
      var v28132 = v29050;
      if (!v28132) {
        v28132 = !j$$100;
      }
      if (v28132) {
        v24732 = "&#xa0;";
      } else {
        v24732 = "";
      }
      l$$76 = l$$76 + (m$$47 + v24732);
    }
    if (!a$$614.yearshtml) {
      a$$614.yearshtml = "";
      var v10287 = f$$154;
      if (!v10287) {
        v10287 = !j$$100;
      }
      if (v10287) {
        l$$76 = l$$76 + ('<span class="ui-datepicker-year">' + c$$473 + "</span>");
      } else {
        var v3605 = JAM.call(this._get, this, [a$$614, "yearRange"], JAM.policy.p3);
        var q$$19 = JAM.call(v3605.split, v3605, [":"], JAM.policy.p3);
        var v3606 = JAM.new(Date, [], JAM.policy.p3);
        var r$$20 = JAM.call(v3606.getFullYear, v3606, [], JAM.policy.p3);
        var s$$29 = v1660;
        var t$$14 = JAM.call(s$$29, null, [q$$19[0]], JAM.policy.p3);
        var v16023 = q$$19[1];
        if (!v16023) {
          v16023 = "";
        }
        var u$$12 = JAM.call(Math.max, Math, [t$$14, JAM.call(s$$29, null, [v16023], JAM.policy.p3)], JAM.policy.p3);
        var v16024;
        if (d$$358) {
          v16024 = JAM.call(Math.max, Math, [t$$14, JAM.call(d$$358.getFullYear, d$$358, [], JAM.policy.p3)], JAM.policy.p3);
        } else {
          v16024 = t$$14;
        }
        t$$14 = v16024;
        var v16025;
        if (e$$310) {
          v16025 = JAM.call(Math.min, Math, [u$$12, JAM.call(e$$310.getFullYear, e$$310, [], JAM.policy.p3)], JAM.policy.p3);
        } else {
          v16025 = u$$12;
        }
        u$$12 = v16025;
        a$$614.yearshtml = a$$614.yearshtml + '<select class="ui-datepicker-year" data-handler="selectYear" data-event="change">';
        var v3609 = t$$14 <= u$$12;
        for (;v3609;) {
          var v10290 = a$$614.yearshtml;
          var v26711 = '<option value="' + t$$14 + '"';
          var v28134;
          if (t$$14 == c$$473) {
            v28134 = ' selected="selected"';
          } else {
            v28134 = "";
          }
          a$$614.yearshtml = v10290 + (v26711 + v28134 + ">" + t$$14 + "</option>");
          t$$14 = t$$14 + 1;
          v3609 = t$$14 <= u$$12;
        }
        a$$614.yearshtml = a$$614.yearshtml + "</select>";
        l$$76 = l$$76 + a$$614.yearshtml;
        a$$614.yearshtml = null;
      }
    }
    l$$76 = l$$76 + JAM.call(this._get, this, [a$$614, "yearSuffix"], JAM.policy.p3);
    if (k$$69) {
      var v29053;
      var v30296 = f$$154;
      if (!v30296) {
        v30296 = !i$$195;
      }
      var v30032 = v30296;
      if (!v30032) {
        v30032 = !j$$100;
      }
      if (v30032) {
        v29053 = "&#xa0;";
      } else {
        v29053 = "";
      }
      l$$76 = l$$76 + (v29053 + m$$47);
    }
    l$$76 = l$$76 + "</div>";
    return l$$76;
  }
  function v1659(a$$613) {
    var b$$579 = JAM.new(Date, [], JAM.policy.p3);
    b$$579 = JAM.call(this._daylightSavingAdjust, this, [JAM.new(Date, [JAM.call(b$$579.getFullYear, b$$579, [], JAM.policy.p3), JAM.call(b$$579.getMonth, b$$579, [], JAM.policy.p3), JAM.call(b$$579.getDate, b$$579, [], JAM.policy.p3)], JAM.policy.p3)], JAM.policy.p3);
    var c$$472 = JAM.call(this._get, this, [a$$613, "isRTL"], JAM.policy.p3);
    var d$$357 = JAM.call(this._get, this, [a$$613, "showButtonPanel"], JAM.policy.p3);
    var e$$309 = JAM.call(this._get, this, [a$$613, "hideIfNoPrevNext"], JAM.policy.p3);
    var f$$153 = JAM.call(this._get, this, [a$$613, "navigationAsDateFormat"], JAM.policy.p3);
    var g$$172 = JAM.call(this._getNumberOfMonths, this, [a$$613], JAM.policy.p3);
    var h$$141 = JAM.call(this._get, this, [a$$613, "showCurrentAtPos"], JAM.policy.p3);
    var i$$194 = JAM.call(this._get, this, [a$$613, "stepMonths"], JAM.policy.p3);
    var v3613 = g$$172[0] != 1;
    if (!v3613) {
      v3613 = g$$172[1] != 1;
    }
    var j$$99 = v3613;
    var v10298;
    if (a$$613.currentDay) {
      v10298 = JAM.new(Date, [a$$613.currentYear, a$$613.currentMonth, a$$613.currentDay], JAM.policy.p3);
    } else {
      v10298 = JAM.new(Date, [9999, 9, 9], JAM.policy.p3);
    }
    var k$$68 = JAM.call(this._daylightSavingAdjust, this, [v10298], JAM.policy.p3);
    var l$$75 = JAM.call(this._getMinMaxDate, this, [a$$613, "min"], JAM.policy.p3);
    var m$$46 = JAM.call(this._getMinMaxDate, this, [a$$613, "max"], JAM.policy.p3);
    var n$$92 = a$$613.drawMonth - h$$141;
    var o$$22 = a$$613.drawYear;
    var v3616 = n$$92 < 0;
    if (v3616) {
      n$$92 = n$$92 + 12;
      o$$22 = o$$22 - 1;
    }
    if (m$$46) {
      var p$$47 = JAM.call(this._daylightSavingAdjust, this, [JAM.new(Date, [JAM.call(m$$46.getFullYear, m$$46, [], JAM.policy.p3), JAM.call(m$$46.getMonth, m$$46, [], JAM.policy.p3) - g$$172[0] * g$$172[1] + 1, JAM.call(m$$46.getDate, m$$46, [], JAM.policy.p3)], JAM.policy.p3)], JAM.policy.p3);
      var v3618;
      var v16033 = l$$75;
      if (v16033) {
        v16033 = p$$47 < l$$75;
      }
      if (v16033) {
        v3618 = l$$75;
      } else {
        v3618 = p$$47;
      }
      p$$47 = v3618;
      var v3619 = JAM.call(this._daylightSavingAdjust, this, [JAM.new(Date, [o$$22, n$$92, 1], JAM.policy.p3)], JAM.policy.p3) > p$$47;
      for (;v3619;) {
        n$$92 = n$$92 - 1;
        var v10304 = n$$92 < 0;
        if (v10304) {
          n$$92 = 11;
          o$$22 = o$$22 - 1;
        }
        v3619 = JAM.call(this._daylightSavingAdjust, this, [JAM.new(Date, [o$$22, n$$92, 1], JAM.policy.p3)], JAM.policy.p3) > p$$47;
      }
    }
    a$$613.drawMonth = n$$92;
    a$$613.drawYear = o$$22;
    var q$$18 = JAM.call(this._get, this, [a$$613, "prevText"], JAM.policy.p3);
    var v3620;
    if (f$$153) {
      v3620 = JAM.call(this.formatDate, this, [q$$18, JAM.call(this._daylightSavingAdjust, this, [JAM.new(Date, [o$$22, n$$92 - i$$194, 1], JAM.policy.p3)], JAM.policy.p3), JAM.call(this._getFormatConfig, this, [a$$613], JAM.policy.p3)], JAM.policy.p3);
    } else {
      v3620 = q$$18;
    }
    q$$18 = v3620;
    var v3621;
    if (JAM.call(this._canAdjustMonth, this, [a$$613, -1, o$$22, n$$92], JAM.policy.p3)) {
      var v24738 = '<a class="ui-datepicker-prev ui-corner-all" data-handler="prev" data-event="click" title="' + q$$18 + '"><span class="ui-icon ui-icon-circle-triangle-';
      var v26715;
      if (c$$472) {
        v26715 = "e";
      } else {
        v26715 = "w";
      }
      v3621 = v24738 + v26715 + '">' + q$$18 + "</span></a>";
    } else {
      var v10309;
      if (e$$309) {
        v10309 = "";
      } else {
        var v26716 = '<a class="ui-datepicker-prev ui-corner-all ui-state-disabled" title="' + q$$18 + '"><span class="ui-icon ui-icon-circle-triangle-';
        var v28137;
        if (c$$472) {
          v28137 = "e";
        } else {
          v28137 = "w";
        }
        v10309 = v26716 + v28137 + '">' + q$$18 + "</span></a>";
      }
      v3621 = v10309;
    }
    var r$$19 = v3621;
    var s$$28 = JAM.call(this._get, this, [a$$613, "nextText"], JAM.policy.p3);
    var v3622;
    if (f$$153) {
      v3622 = JAM.call(this.formatDate, this, [s$$28, JAM.call(this._daylightSavingAdjust, this, [JAM.new(Date, [o$$22, n$$92 + i$$194, 1], JAM.policy.p3)], JAM.policy.p3), JAM.call(this._getFormatConfig, this, [a$$613], JAM.policy.p3)], JAM.policy.p3);
    } else {
      v3622 = s$$28;
    }
    s$$28 = v3622;
    var v3623;
    if (JAM.call(this._canAdjustMonth, this, [a$$613, 1, o$$22, n$$92], JAM.policy.p3)) {
      var v24741 = '<a class="ui-datepicker-next ui-corner-all" data-handler="next" data-event="click" title="' + s$$28 + '"><span class="ui-icon ui-icon-circle-triangle-';
      var v26719;
      if (c$$472) {
        v26719 = "w";
      } else {
        v26719 = "e";
      }
      v3623 = v24741 + v26719 + '">' + s$$28 + "</span></a>";
    } else {
      var v10314;
      if (e$$309) {
        v10314 = "";
      } else {
        var v26720 = '<a class="ui-datepicker-next ui-corner-all ui-state-disabled" title="' + s$$28 + '"><span class="ui-icon ui-icon-circle-triangle-';
        var v28139;
        if (c$$472) {
          v28139 = "w";
        } else {
          v28139 = "e";
        }
        v10314 = v26720 + v28139 + '">' + s$$28 + "</span></a>";
      }
      v3623 = v10314;
    }
    var t$$13 = v3623;
    var u$$11 = JAM.call(this._get, this, [a$$613, "currentText"], JAM.policy.p3);
    var v3624;
    var v16042 = JAM.call(this._get, this, [a$$613, "gotoCurrent"], JAM.policy.p3);
    if (v16042) {
      v16042 = a$$613.currentDay;
    }
    if (v16042) {
      v3624 = k$$68;
    } else {
      v3624 = b$$579;
    }
    var v$$10 = v3624;
    var v3625;
    if (f$$153) {
      v3625 = JAM.call(this.formatDate, this, [u$$11, v$$10, JAM.call(this._getFormatConfig, this, [a$$613], JAM.policy.p3)], JAM.policy.p3);
    } else {
      v3625 = u$$11;
    }
    u$$11 = v3625;
    var v3626;
    if (a$$613.inline) {
      v3626 = "";
    } else {
      v3626 = '<button type="button" class="ui-datepicker-close ui-state-default ui-priority-primary ui-corner-all" data-handler="hide" data-event="click">' + JAM.call(this._get, this, [a$$613, "closeText"], JAM.policy.p3) + "</button>";
    }
    var w$$17 = v3626;
    var v3627;
    if (d$$357) {
      var v26722;
      if (c$$472) {
        v26722 = w$$17;
      } else {
        v26722 = "";
      }
      var v20281 = '<div class="ui-datepicker-buttonpane ui-widget-content">' + v26722;
      var v24745;
      if (JAM.call(this._isInRange, this, [a$$613, v$$10], JAM.policy.p3)) {
        v24745 = '<button type="button" class="ui-datepicker-current ui-state-default ui-priority-secondary ui-corner-all" data-handler="today" data-event="click">' + u$$11 + "</button>";
      } else {
        v24745 = "";
      }
      var v16044 = v20281 + v24745;
      var v20283;
      if (c$$472) {
        v20283 = "";
      } else {
        v20283 = w$$17;
      }
      v3627 = v16044 + v20283 + "</div>";
    } else {
      v3627 = "";
    }
    var x$$73 = v3627;
    var y$$54 = JAM.call(parseInt, null, [JAM.call(this._get, this, [a$$613, "firstDay"], JAM.policy.p3), 10], JAM.policy.p3);
    var v3629;
    if (JAM.call(isNaN, null, [y$$54], JAM.policy.p3)) {
      v3629 = 0;
    } else {
      v3629 = y$$54;
    }
    y$$54 = v3629;
    var z$$6 = JAM.call(this._get, this, [a$$613, "showWeek"], JAM.policy.p3);
    var A$$3 = JAM.call(this._get, this, [a$$613, "dayNames"], JAM.policy.p3);
    var B$$2 = JAM.call(this._get, this, [a$$613, "dayNamesShort"], JAM.policy.p3);
    var C$$2 = JAM.call(this._get, this, [a$$613, "dayNamesMin"], JAM.policy.p3);
    var D$$2 = JAM.call(this._get, this, [a$$613, "monthNames"], JAM.policy.p3);
    var E$$2 = JAM.call(this._get, this, [a$$613, "monthNamesShort"], JAM.policy.p3);
    var F$$2 = JAM.call(this._get, this, [a$$613, "beforeShowDay"], JAM.policy.p3);
    var G$$2 = JAM.call(this._get, this, [a$$613, "showOtherMonths"], JAM.policy.p3);
    var H$$2 = JAM.call(this._get, this, [a$$613, "selectOtherMonths"], JAM.policy.p3);
    var v3630 = JAM.call(this._get, this, [a$$613, "calculateWeek"], JAM.policy.p3);
    if (!v3630) {
      v3630 = this.iso8601Week;
    }
    var I$$2 = v3630;
    var J$$2 = JAM.call(this._getDefaultDate, this, [a$$613], JAM.policy.p3);
    var K$$1 = "";
    var L$$1 = 0;
    var v3648 = L$$1 < g$$172[0];
    for (;v3648;) {
      var M$$1 = "";
      this.maxRows = 4;
      var N$$1 = 0;
      var v3647 = N$$1 < g$$172[1];
      for (;v3647;) {
        var O$$1 = JAM.call(this._daylightSavingAdjust, this, [JAM.new(Date, [o$$22, n$$92, a$$613.selectedDay], JAM.policy.p3)], JAM.policy.p3);
        var P$$1 = " ui-corner-all";
        var Q$$1 = "";
        if (j$$99) {
          Q$$1 = Q$$1 + '<div class="ui-datepicker-group';
          if (g$$172[1] > 1) {
            switch(N$$1) {
              case 0:
                Q$$1 = Q$$1 + " ui-datepicker-group-first";
                var v16046;
                if (c$$472) {
                  v16046 = "right";
                } else {
                  v16046 = "left";
                }
                P$$1 = " ui-corner-" + v16046;
                break;
              case g$$172[1] - 1:
                Q$$1 = Q$$1 + " ui-datepicker-group-last";
                var v16047;
                if (c$$472) {
                  v16047 = "left";
                } else {
                  v16047 = "right";
                }
                P$$1 = " ui-corner-" + v16047;
                break;
              default:
                Q$$1 = Q$$1 + " ui-datepicker-group-middle";
                P$$1 = "";
            }
          }
          Q$$1 = Q$$1 + '">';
        }
        var v10329 = Q$$1;
        var v28140 = '<div class="ui-datepicker-header ui-widget-header ui-helper-clearfix' + P$$1 + '">';
        var v29055;
        var v30033 = JAM.call(/all|left/.test, /all|left/, [P$$1], JAM.policy.p3);
        if (v30033) {
          v30033 = L$$1 == 0;
        }
        if (v30033) {
          var v29669;
          if (c$$472) {
            v29669 = t$$13;
          } else {
            v29669 = r$$19;
          }
          v29055 = v29669;
        } else {
          v29055 = "";
        }
        var v26725 = v28140 + v29055;
        var v28142;
        var v29671 = JAM.call(/all|right/.test, /all|right/, [P$$1], JAM.policy.p3);
        if (v29671) {
          v29671 = L$$1 == 0;
        }
        if (v29671) {
          var v29056;
          if (c$$472) {
            v29056 = r$$19;
          } else {
            v29056 = t$$13;
          }
          v28142 = v29056;
        } else {
          v28142 = "";
        }
        var v24746 = v26725 + v28142;
        var v28143 = L$$1 > 0;
        if (!v28143) {
          v28143 = N$$1 > 0;
        }
        Q$$1 = v10329 + (v24746 + JAM.call(this._generateMonthYearHeader, this, [a$$613, n$$92, o$$22, l$$75, m$$46, v28143, D$$2, E$$2], JAM.policy.p3) + '</div><table class="ui-datepicker-calendar"><thead>' + "<tr>");
        var v3633;
        if (z$$6) {
          v3633 = '<th class="ui-datepicker-week-col">' + JAM.call(this._get, this, [a$$613, "weekHeader"], JAM.policy.p3) + "</th>";
        } else {
          v3633 = "";
        }
        var R$$1 = v3633;
        var S$$1 = 0;
        var v3635 = S$$1 < 7;
        for (;v3635;) {
          var T$$3 = (S$$1 + y$$54) % 7;
          var v30034;
          if ((S$$1 + y$$54 + 6) % 7 >= 5) {
            v30034 = ' class="ui-datepicker-week-end"';
          } else {
            v30034 = "";
          }
          R$$1 = R$$1 + ("<th" + v30034 + ">" + '<span title="' + A$$3[T$$3] + '">' + C$$2[T$$3] + "</span></th>");
          S$$1 = S$$1 + 1;
          v3635 = S$$1 < 7;
        }
        Q$$1 = Q$$1 + (R$$1 + "</tr></thead><tbody>");
        var U$$1 = JAM.call(this._getDaysInMonth, this, [o$$22, n$$92], JAM.policy.p3);
        var v10334 = o$$22 == a$$613.selectedYear;
        if (v10334) {
          v10334 = n$$92 == a$$613.selectedMonth;
        }
        var v3636 = v10334;
        if (v3636) {
          var v10335 = a$$613;
          var v31222 = JAM.call(Math.min, Math, [a$$613.selectedDay, U$$1], JAM.policy.p3);
          v10335.selectedDay = v31222;
        }
        var V$$1 = (JAM.call(this._getFirstDayOfMonth, this, [o$$22, n$$92], JAM.policy.p3) - y$$54 + 7) % 7;
        var W$$1 = JAM.call(Math.ceil, Math, [(V$$1 + U$$1) / 7], JAM.policy.p3);
        var v3639;
        if (j$$99) {
          var v10338;
          if (this.maxRows > W$$1) {
            v10338 = this.maxRows;
          } else {
            v10338 = W$$1;
          }
          v3639 = v10338;
        } else {
          v3639 = W$$1;
        }
        var X$$1 = v3639;
        this.maxRows = X$$1;
        var Y$$1 = JAM.call(this._daylightSavingAdjust, this, [JAM.new(Date, [o$$22, n$$92, 1 - V$$1], JAM.policy.p3)], JAM.policy.p3);
        var Z$$1 = 0;
        var v3646 = Z$$1 < X$$1;
        for (;v3646;) {
          Q$$1 = Q$$1 + "<tr>";
          var v3641;
          if (z$$6) {
            v3641 = '<td class="ui-datepicker-week-col">' + JAM.call(JAM.call(this._get, this, [a$$613, "calculateWeek"], JAM.policy.p3), null, [Y$$1], JAM.policy.p3) + "</td>";
          } else {
            v3641 = "";
          }
          var _$$2 = v3641;
          S$$1 = 0;
          var v3645 = S$$1 < 7;
          for (;v3645;) {
            var v3642;
            if (F$$2) {
              var v16057;
              if (a$$613.input) {
                v16057 = a$$613.input[0];
              } else {
                v16057 = null;
              }
              v3642 = JAM.call(F$$2.apply, F$$2, [v16057, [Y$$1]], JAM.policy.p3);
            } else {
              v3642 = [!0, ""];
            }
            var ba$$1 = v3642;
            var bb$$1 = JAM.call(Y$$1.getMonth, Y$$1, [], JAM.policy.p3) != n$$92;
            var v20291 = bb$$1;
            if (v20291) {
              v20291 = !H$$2;
            }
            var v16058 = v20291;
            if (!v16058) {
              v16058 = !ba$$1[0];
            }
            var v10344 = v16058;
            if (!v10344) {
              var v16059 = l$$75;
              if (v16059) {
                v16059 = Y$$1 < l$$75;
              }
              v10344 = v16059;
            }
            var v3644 = v10344;
            if (!v3644) {
              var v10345 = m$$46;
              if (v10345) {
                v10345 = Y$$1 > m$$46;
              }
              v3644 = v10345;
            }
            var bc$$1 = v3644;
            var v20294 = _$$2;
            var v30937;
            if ((S$$1 + y$$54 + 6) % 7 >= 5) {
              v30937 = " ui-datepicker-week-end";
            } else {
              v30937 = "";
            }
            var v30798 = '<td class="' + v30937;
            var v30882;
            if (bb$$1) {
              v30882 = " ui-datepicker-other-month";
            } else {
              v30882 = "";
            }
            var v30662 = v30798 + v30882;
            var v30800;
            var v31012 = JAM.call(Y$$1.getTime, Y$$1, [], JAM.policy.p3) == JAM.call(O$$1.getTime, O$$1, [], JAM.policy.p3);
            if (v31012) {
              v31012 = n$$92 == a$$613.selectedMonth;
            }
            var v30980 = v31012;
            if (v30980) {
              v30980 = a$$613._keyEvent;
            }
            var v30938 = v30980;
            if (!v30938) {
              var v30981 = JAM.call(J$$2.getTime, J$$2, [], JAM.policy.p3) == JAM.call(Y$$1.getTime, Y$$1, [], JAM.policy.p3);
              if (v30981) {
                v30981 = JAM.call(J$$2.getTime, J$$2, [], JAM.policy.p3) == JAM.call(O$$1.getTime, O$$1, [], JAM.policy.p3);
              }
              v30938 = v30981;
            }
            if (v30938) {
              v30800 = " " + this._dayOverClass;
            } else {
              v30800 = "";
            }
            var v30518 = v30662 + v30800;
            var v30664;
            if (bc$$1) {
              v30664 = " " + this._unselectableClass + " ui-state-disabled";
            } else {
              v30664 = "";
            }
            var v30299 = v30518 + v30664;
            var v30520;
            var v30802 = bb$$1;
            if (v30802) {
              v30802 = !G$$2;
            }
            if (v30802) {
              v30520 = "";
            } else {
              var v30803 = " " + ba$$1[1];
              var v30887;
              if (JAM.call(Y$$1.getTime, Y$$1, [], JAM.policy.p3) == JAM.call(k$$68.getTime, k$$68, [], JAM.policy.p3)) {
                v30887 = " " + this._currentClass;
              } else {
                v30887 = "";
              }
              var v30665 = v30803 + v30887;
              var v30805;
              if (JAM.call(Y$$1.getTime, Y$$1, [], JAM.policy.p3) == JAM.call(b$$579.getTime, b$$579, [], JAM.policy.p3)) {
                v30805 = " ui-datepicker-today";
              } else {
                v30805 = "";
              }
              v30520 = v30665 + v30805;
            }
            var v29673 = v30299 + v30520 + '"';
            var v30036;
            var v30668 = !bb$$1;
            if (!v30668) {
              v30668 = G$$2;
            }
            var v30521 = v30668;
            if (v30521) {
              v30521 = ba$$1[2];
            }
            if (v30521) {
              v30036 = ' title="' + ba$$1[2] + '"';
            } else {
              v30036 = "";
            }
            var v29060 = v29673 + v30036;
            var v29675;
            if (bc$$1) {
              v29675 = "";
            } else {
              v29675 = ' data-handler="selectDay" data-event="click" data-month="' + JAM.call(Y$$1.getMonth, Y$$1, [], JAM.policy.p3) + '" data-year="' + JAM.call(Y$$1.getFullYear, Y$$1, [], JAM.policy.p3) + '"';
            }
            var v26730 = v29060 + v29675 + ">";
            var v28146;
            var v29676 = bb$$1;
            if (v29676) {
              v29676 = !G$$2;
            }
            if (v29676) {
              v28146 = "&#xa0;";
            } else {
              var v29062;
              if (bc$$1) {
                v29062 = '<span class="ui-state-default">' + JAM.call(Y$$1.getDate, Y$$1, [], JAM.policy.p3) + "</span>";
              } else {
                var v30889;
                if (JAM.call(Y$$1.getTime, Y$$1, [], JAM.policy.p3) == JAM.call(b$$579.getTime, b$$579, [], JAM.policy.p3)) {
                  v30889 = " ui-state-highlight";
                } else {
                  v30889 = "";
                }
                var v30670 = '<a class="ui-state-default' + v30889;
                var v30808;
                if (JAM.call(Y$$1.getTime, Y$$1, [], JAM.policy.p3) == JAM.call(k$$68.getTime, k$$68, [], JAM.policy.p3)) {
                  v30808 = " ui-state-active";
                } else {
                  v30808 = "";
                }
                var v30524 = v30670 + v30808;
                var v30672;
                if (bb$$1) {
                  v30672 = " ui-priority-secondary";
                } else {
                  v30672 = "";
                }
                v29062 = v30524 + v30672 + '" href="#">' + JAM.call(Y$$1.getDate, Y$$1, [], JAM.policy.p3) + "</a>";
              }
              v28146 = v29062;
            }
            _$$2 = v20294 + (v26730 + v28146 + "</td>");
            JAM.call(Y$$1.setDate, Y$$1, [JAM.call(Y$$1.getDate, Y$$1, [], JAM.policy.p3) + 1], JAM.policy.p3);
            Y$$1 = JAM.call(this._daylightSavingAdjust, this, [Y$$1], JAM.policy.p3);
            S$$1 = S$$1 + 1;
            v3645 = S$$1 < 7;
          }
          Q$$1 = Q$$1 + (_$$2 + "</tr>");
          Z$$1 = Z$$1 + 1;
          v3646 = Z$$1 < X$$1;
        }
        n$$92 = n$$92 + 1;
        var v20297 = n$$92 > 11;
        if (v20297) {
          n$$92 = 0;
          o$$22 = o$$22 + 1;
        }
        var v26732;
        if (j$$99) {
          var v29064;
          var v30041 = g$$172[0] > 0;
          if (v30041) {
            v30041 = N$$1 == g$$172[1] - 1;
          }
          if (v30041) {
            v29064 = '<div class="ui-datepicker-row-break"></div>';
          } else {
            v29064 = "";
          }
          v26732 = "</div>" + v29064;
        } else {
          v26732 = "";
        }
        Q$$1 = Q$$1 + ("</tbody></table>" + v26732);
        M$$1 = M$$1 + Q$$1;
        N$$1 = N$$1 + 1;
        v3647 = N$$1 < g$$172[1];
      }
      K$$1 = K$$1 + M$$1;
      L$$1 = L$$1 + 1;
      v3648 = L$$1 < g$$172[0];
    }
    var v20299 = K$$1;
    var v24751 = x$$73;
    var v26733;
    var v29680 = $$$3.browser.msie;
    if (v29680) {
      v29680 = JAM.call(parseInt, null, [$$$3.browser.version, 10], JAM.policy.p3) < 7;
    }
    var v29065 = v29680;
    if (v29065) {
      v29065 = !a$$613.inline;
    }
    if (v29065) {
      v26733 = '<iframe src="javascript:false;" class="ui-datepicker-cover" frameborder="0"></iframe>';
    } else {
      v26733 = "";
    }
    K$$1 = v20299 + (v24751 + v26733);
    a$$613._keyEvent = !1;
    return K$$1;
  }
  function v1658(a$$611) {
    function v1657() {
      function v1656() {
        var v10350 = window["DP_jQuery_" + dpuuid].datepicker;
        JAM.call(v10350._selectMonthYear, v10350, [c$$471, this, "Y"], JAM.policy.p3);
        return!1;
      }
      function v1655() {
        var v10351 = window["DP_jQuery_" + dpuuid].datepicker;
        JAM.call(v10351._selectMonthYear, v10351, [c$$471, this, "M"], JAM.policy.p3);
        return!1;
      }
      function v1654() {
        var v10352 = window["DP_jQuery_" + dpuuid].datepicker;
        JAM.call(v10352._selectDay, v10352, [c$$471, +JAM.call(this.getAttribute, this, ["data-month"], JAM.policy.p3), +JAM.call(this.getAttribute, this, ["data-year"], JAM.policy.p3), this], JAM.policy.p3);
        return!1;
      }
      function v1653() {
        var v3649 = window["DP_jQuery_" + dpuuid].datepicker;
        JAM.call(v3649._gotoToday, v3649, [c$$471], JAM.policy.p3);
        return;
      }
      function v1652() {
        var v3650 = window["DP_jQuery_" + dpuuid].datepicker;
        JAM.call(v3650._hideDatepicker, v3650, [], JAM.policy.p3);
        return;
      }
      function v1651() {
        var v3651 = window["DP_jQuery_" + dpuuid].datepicker;
        JAM.call(v3651._adjustDate, v3651, [c$$471, +b$$578, "M"], JAM.policy.p3);
        return;
      }
      function v1650() {
        var v3653 = window["DP_jQuery_" + dpuuid].datepicker;
        JAM.call(v3653._adjustDate, v3653, [c$$471, -b$$578, "M"], JAM.policy.p3);
        return;
      }
      var a$$612 = {prev:v1650, next:v1651, hide:v1652, today:v1653, selectDay:v1654, selectMonth:v1655, selectYear:v1656};
      var v3655 = JAM.call($$$3, null, [this], JAM.policy.p3);
      JAM.call(v3655.bind, v3655, [JAM.call(this.getAttribute, this, ["data-event"], JAM.policy.p3), a$$612[JAM.call(this.getAttribute, this, ["data-handler"], JAM.policy.p3)]], JAM.policy.p3);
      return;
    }
    var b$$578 = JAM.call(this._get, this, [a$$611, "stepMonths"], JAM.policy.p3);
    var v10361 = a$$611.id;
    var c$$471 = "#" + JAM.call(v10361.replace, v10361, [/\\\\/g, "\\"], JAM.policy.p3);
    var v10362 = a$$611.dpDiv;
    var v3659 = JAM.call(v10362.find, v10362, ["[data-handler]"], JAM.policy.p3);
    JAM.call(v3659.map, v3659, [v1657], JAM.policy.p3);
    return;
  }
  function v1649(a$$610) {
    var v3660;
    var v16071 = !a$$610.currentYear;
    if (!v16071) {
      var v20305 = a$$610.input;
      if (v20305) {
        var v26734 = a$$610.input;
        v20305 = JAM.call(v26734.val, v26734, [], JAM.policy.p3) == "";
      }
      v16071 = v20305;
    }
    if (v16071) {
      v3660 = null;
    } else {
      v3660 = JAM.call(this._daylightSavingAdjust, this, [JAM.new(Date, [a$$610.currentYear, a$$610.currentMonth, a$$610.currentDay], JAM.policy.p3)], JAM.policy.p3);
    }
    var b$$577 = v3660;
    return b$$577;
  }
  function v1648(a$$609, b$$576, c$$470) {
    var d$$356 = !b$$576;
    var e$$308 = a$$609.selectedMonth;
    var f$$152 = a$$609.selectedYear;
    var g$$171 = JAM.call(this._restrictMinMax, this, [a$$609, JAM.call(this._determineDate, this, [a$$609, b$$576, JAM.new(Date, [], JAM.policy.p3)], JAM.policy.p3)], JAM.policy.p3);
    var v26735 = a$$609;
    var v28149 = a$$609;
    var v31223 = JAM.call(g$$171.getDate, g$$171, [], JAM.policy.p3);
    v26735.selectedDay = v28149.currentDay = v31223;
    var v26736 = a$$609;
    var v28150 = a$$609;
    var v29066 = a$$609;
    var v31224 = JAM.call(g$$171.getMonth, g$$171, [], JAM.policy.p3);
    v26736.drawMonth = v28150.selectedMonth = v29066.currentMonth = v31224;
    var v24754 = a$$609;
    var v26737 = a$$609;
    var v28151 = a$$609;
    var v31225 = JAM.call(g$$171.getFullYear, g$$171, [], JAM.policy.p3);
    v24754.drawYear = v26737.selectedYear = v28151.currentYear = v31225;
    var v26738 = e$$308 != a$$609.selectedMonth;
    if (!v26738) {
      v26738 = f$$152 != a$$609.selectedYear;
    }
    var v24755 = v26738;
    if (v24755) {
      v24755 = !c$$470;
    }
    var v20307 = v24755;
    if (v20307) {
      JAM.call(this._notifyChange, this, [a$$609], JAM.policy.p3);
    }
    JAM.call(this._adjustInstDate, this, [a$$609], JAM.policy.p3);
    var v10366 = a$$609.input;
    if (v10366) {
      var v16075 = a$$609.input;
      var v20308;
      if (d$$356) {
        v20308 = "";
      } else {
        v20308 = JAM.call(this._formatDate, this, [a$$609], JAM.policy.p3);
      }
      JAM.call(v16075.val, v16075, [v20308], JAM.policy.p3);
    }
    return;
  }
  function v1647(a$$608) {
    var v3662;
    if (a$$608) {
      var v20309;
      if (JAM.call(a$$608.getHours, a$$608, [], JAM.policy.p3) > 12) {
        v20309 = JAM.call(a$$608.getHours, a$$608, [], JAM.policy.p3) + 2;
      } else {
        v20309 = 0;
      }
      JAM.call(a$$608.setHours, a$$608, [v20309], JAM.policy.p3);
      v3662 = a$$608;
    } else {
      v3662 = null;
    }
    return v3662;
  }
  function v1646(a$$606, b$$573, c$$468) {
    function e$$306(b$$575) {
      try {
        var v3663 = $$$3.datepicker;
        var v10367 = $$$3.datepicker;
        var v3664 = JAM.call(v10367._get, v10367, [a$$606, "dateFormat"], JAM.policy.p3);
        var v10368 = $$$3.datepicker;
        return JAM.call(v3663.parseDate, v3663, [v3664, b$$575, JAM.call(v10368._getFormatConfig, v10368, [a$$606], JAM.policy.p3)], JAM.policy.p3);
      } catch (c$$469) {
      }
      var v10369;
      var v20310 = JAM.call(b$$575.toLowerCase, b$$575, [], JAM.policy.p3);
      if (JAM.call(v20310.match, v20310, [/^c/], JAM.policy.p3)) {
        var v16078 = $$$3.datepicker;
        v10369 = JAM.call(v16078._getDate, v16078, [a$$606], JAM.policy.p3);
      } else {
        v10369 = null;
      }
      var v3666 = v10369;
      if (!v3666) {
        v3666 = JAM.new(Date, [], JAM.policy.p3);
      }
      var d$$355 = v3666;
      var e$$307 = JAM.call(d$$355.getFullYear, d$$355, [], JAM.policy.p3);
      var f$$151 = JAM.call(d$$355.getMonth, d$$355, [], JAM.policy.p3);
      var g$$170 = JAM.call(d$$355.getDate, d$$355, [], JAM.policy.p3);
      var h$$140 = /([+-]?[0-9]+)\s*(d|D|w|W|m|M|y|Y)?/g;
      var i$$193 = JAM.call(h$$140.exec, h$$140, [b$$575], JAM.policy.p3);
      for (;i$$193;) {
        var v10371 = i$$193[2];
        if (!v10371) {
          v10371 = "d";
        }
        switch(v10371) {
          case "d":
          ;
          case "D":
            g$$170 = g$$170 + JAM.call(parseInt, null, [i$$193[1], 10], JAM.policy.p3);
            break;
          case "w":
          ;
          case "W":
            g$$170 = g$$170 + JAM.call(parseInt, null, [i$$193[1], 10], JAM.policy.p3) * 7;
            break;
          case "m":
          ;
          case "M":
            f$$151 = f$$151 + JAM.call(parseInt, null, [i$$193[1], 10], JAM.policy.p3);
            var v16085 = $$$3.datepicker;
            g$$170 = JAM.call(Math.min, Math, [g$$170, JAM.call(v16085._getDaysInMonth, v16085, [e$$307, f$$151], JAM.policy.p3)], JAM.policy.p3);
            break;
          case "y":
          ;
          case "Y":
            e$$307 = e$$307 + JAM.call(parseInt, null, [i$$193[1], 10], JAM.policy.p3);
            var v16088 = $$$3.datepicker;
            g$$170 = JAM.call(Math.min, Math, [g$$170, JAM.call(v16088._getDaysInMonth, v16088, [e$$307, f$$151], JAM.policy.p3)], JAM.policy.p3);
        }
        i$$193 = JAM.call(h$$140.exec, h$$140, [b$$575], JAM.policy.p3);
      }
      return JAM.new(Date, [e$$307, f$$151, g$$170], JAM.policy.p3);
    }
    function d$$354(a$$607) {
      var b$$574 = JAM.new(Date, [], JAM.policy.p3);
      JAM.call(b$$574.setDate, b$$574, [JAM.call(b$$574.getDate, b$$574, [], JAM.policy.p3) + a$$607], JAM.policy.p3);
      return b$$574;
    }
    var v3668;
    var v16090 = b$$573 == null;
    if (!v16090) {
      v16090 = b$$573 === "";
    }
    if (v16090) {
      v3668 = c$$468;
    } else {
      var v10379;
      if (typeof b$$573 == "string") {
        v10379 = JAM.call(e$$306, null, [b$$573], JAM.policy.p3);
      } else {
        var v16091;
        if (typeof b$$573 == "number") {
          var v20316;
          if (JAM.call(isNaN, null, [b$$573], JAM.policy.p3)) {
            v20316 = c$$468;
          } else {
            v20316 = JAM.call(d$$354, null, [b$$573], JAM.policy.p3);
          }
          v16091 = v20316;
        } else {
          v16091 = JAM.new(Date, [JAM.call(b$$573.getTime, b$$573, [], JAM.policy.p3)], JAM.policy.p3);
        }
        v10379 = v16091;
      }
      v3668 = v10379;
    }
    var f$$150 = v3668;
    var v16093;
    var v24760 = f$$150;
    if (v24760) {
      v24760 = JAM.call(f$$150.toString, f$$150, [], JAM.policy.p3) == "Invalid Date";
    }
    if (v24760) {
      v16093 = c$$468;
    } else {
      v16093 = f$$150;
    }
    f$$150 = v16093;
    if (f$$150) {
      JAM.call(f$$150.setHours, f$$150, [0], JAM.policy.p3);
      JAM.call(f$$150.setMinutes, f$$150, [0], JAM.policy.p3);
      JAM.call(f$$150.setSeconds, f$$150, [0], JAM.policy.p3);
      JAM.call(f$$150.setMilliseconds, f$$150, [0], JAM.policy.p3);
    }
    return JAM.call(this._daylightSavingAdjust, this, [f$$150], JAM.policy.p3);
  }
  function v1645(a$$605) {
    return JAM.call(this._restrictMinMax, this, [a$$605, JAM.call(this._determineDate, this, [a$$605, JAM.call(this._get, this, [a$$605, "defaultDate"], JAM.policy.p3), JAM.new(Date, [], JAM.policy.p3)], JAM.policy.p3)], JAM.policy.p3);
  }
  function v1644(a$$604, b$$572) {
    var v16094 = a$$604.input;
    if (JAM.call(v16094.val, v16094, [], JAM.policy.p3) == a$$604.lastVal) {
      return;
    }
    var c$$467 = JAM.call(this._get, this, [a$$604, "dateFormat"], JAM.policy.p3);
    var v3671 = a$$604;
    var v10385;
    if (a$$604.input) {
      var v16095 = a$$604.input;
      v10385 = JAM.call(v16095.val, v16095, [], JAM.policy.p3);
    } else {
      v10385 = null;
    }
    var d$$353 = v3671.lastVal = v10385;
    var e$$305;
    var f$$149;
    e$$305 = f$$149 = JAM.call(this._getDefaultDate, this, [a$$604], JAM.policy.p3);
    var g$$169 = JAM.call(this._getFormatConfig, this, [a$$604], JAM.policy.p3);
    try {
      var v3672 = JAM.call(this.parseDate, this, [c$$467, d$$353, g$$169], JAM.policy.p3);
      if (!v3672) {
        v3672 = f$$149;
      }
      e$$305 = v3672;
    } catch (h$$139) {
      JAM.call(this.log, this, [h$$139], JAM.policy.p3);
      var v10387;
      if (b$$572) {
        v10387 = "";
      } else {
        v10387 = d$$353;
      }
      d$$353 = v10387;
    }
    var v28155 = a$$604;
    var v31226 = JAM.call(e$$305.getDate, e$$305, [], JAM.policy.p3);
    v28155.selectedDay = v31226;
    var v28156 = a$$604;
    var v29067 = a$$604;
    var v31227 = JAM.call(e$$305.getMonth, e$$305, [], JAM.policy.p3);
    v28156.drawMonth = v29067.selectedMonth = v31227;
    var v26741 = a$$604;
    var v28157 = a$$604;
    var v31228 = JAM.call(e$$305.getFullYear, e$$305, [], JAM.policy.p3);
    v26741.drawYear = v28157.selectedYear = v31228;
    var v24761 = a$$604;
    var v26742;
    if (d$$353) {
      v26742 = JAM.call(e$$305.getDate, e$$305, [], JAM.policy.p3);
    } else {
      v26742 = 0;
    }
    v24761.currentDay = v26742;
    var v20320 = a$$604;
    var v24762;
    if (d$$353) {
      v24762 = JAM.call(e$$305.getMonth, e$$305, [], JAM.policy.p3);
    } else {
      v24762 = 0;
    }
    v20320.currentMonth = v24762;
    var v16097 = a$$604;
    var v20321;
    if (d$$353) {
      v20321 = JAM.call(e$$305.getFullYear, e$$305, [], JAM.policy.p3);
    } else {
      v20321 = 0;
    }
    v16097.currentYear = v20321;
    JAM.call(this._adjustInstDate, this, [a$$604], JAM.policy.p3);
    return;
  }
  function v1643(a$$603, b$$571) {
    var v3673;
    if (a$$603.settings[b$$571] !== undefined$$1) {
      v3673 = a$$603.settings[b$$571];
    } else {
      v3673 = this._defaults[b$$571];
    }
    return v3673;
  }
  function v1642(a$$602) {
    function d$$352(b$$570) {
      var v3674 = e$$304 + 1 < a$$602.length;
      if (v3674) {
        v3674 = JAM.call(a$$602.charAt, a$$602, [e$$304 + 1], JAM.policy.p3) == b$$570;
      }
      var c$$466 = v3674;
      if (c$$466) {
        e$$304 = e$$304 + 1;
      }
      return c$$466;
    }
    var b$$569 = "";
    var c$$465 = !1;
    var e$$304 = 0;
    var v3678 = e$$304 < a$$602.length;
    for (;v3678;) {
      if (c$$465) {
        var v3675;
        var v16100 = JAM.call(a$$602.charAt, a$$602, [e$$304], JAM.policy.p3) == "'";
        if (v16100) {
          v16100 = !JAM.call(d$$352, null, ["'"], JAM.policy.p3);
        }
        if (v16100) {
          v3675 = c$$465 = !1;
        } else {
          v3675 = b$$569 = b$$569 + JAM.call(a$$602.charAt, a$$602, [e$$304], JAM.policy.p3);
        }
        v3675;
      } else {
        switch(JAM.call(a$$602.charAt, a$$602, [e$$304], JAM.policy.p3)) {
          case "d":
          ;
          case "m":
          ;
          case "y":
          ;
          case "@":
            b$$569 = b$$569 + "0123456789";
            break;
          case "D":
          ;
          case "M":
            return null;
          case "'":
            var v3676;
            if (JAM.call(d$$352, null, ["'"], JAM.policy.p3)) {
              v3676 = b$$569 = b$$569 + "'";
            } else {
              v3676 = c$$465 = !0;
            }
            v3676;
            break;
          default:
            b$$569 = b$$569 + JAM.call(a$$602.charAt, a$$602, [e$$304], JAM.policy.p3);
        }
      }
      e$$304 = e$$304 + 1;
      v3678 = e$$304 < a$$602.length;
    }
    return b$$569;
  }
  function v1641(a$$599, b$$565, c$$461) {
    function j$$98(a$$601, b$$568, c$$464, d$$351) {
      var v3679;
      if (JAM.call(h$$138, null, [a$$601], JAM.policy.p3)) {
        v3679 = d$$351[b$$568];
      } else {
        v3679 = c$$464[b$$568];
      }
      return v3679;
    }
    function i$$192(a$$600, b$$567, c$$463) {
      var d$$350 = "" + b$$567;
      if (JAM.call(h$$138, null, [a$$600], JAM.policy.p3)) {
        var v3680 = d$$350.length < c$$463;
        for (;v3680;) {
          d$$350 = "0" + d$$350;
          v3680 = d$$350.length < c$$463;
        }
      }
      return d$$350;
    }
    function h$$138(b$$566) {
      var v3682 = m$$45 + 1 < a$$599.length;
      if (v3682) {
        v3682 = JAM.call(a$$599.charAt, a$$599, [m$$45 + 1], JAM.policy.p3) == b$$566;
      }
      var c$$462 = v3682;
      if (c$$462) {
        m$$45 = m$$45 + 1;
      }
      return c$$462;
    }
    if (!b$$565) {
      return "";
    }
    var v10406;
    if (c$$461) {
      v10406 = c$$461.dayNamesShort;
    } else {
      v10406 = null;
    }
    var v3684 = v10406;
    if (!v3684) {
      v3684 = this._defaults.dayNamesShort;
    }
    var d$$349 = v3684;
    var v10409;
    if (c$$461) {
      v10409 = c$$461.dayNames;
    } else {
      v10409 = null;
    }
    var v3685 = v10409;
    if (!v3685) {
      v3685 = this._defaults.dayNames;
    }
    var e$$303 = v3685;
    var v10412;
    if (c$$461) {
      v10412 = c$$461.monthNamesShort;
    } else {
      v10412 = null;
    }
    var v3686 = v10412;
    if (!v3686) {
      v3686 = this._defaults.monthNamesShort;
    }
    var f$$148 = v3686;
    var v10415;
    if (c$$461) {
      v10415 = c$$461.monthNames;
    } else {
      v10415 = null;
    }
    var v3687 = v10415;
    if (!v3687) {
      v3687 = this._defaults.monthNames;
    }
    var g$$168 = v3687;
    var k$$67 = "";
    var l$$74 = !1;
    if (b$$565) {
      var m$$45 = 0;
      var v3691 = m$$45 < a$$599.length;
      for (;v3691;) {
        if (l$$74) {
          var v3688;
          var v16104 = JAM.call(a$$599.charAt, a$$599, [m$$45], JAM.policy.p3) == "'";
          if (v16104) {
            v16104 = !JAM.call(h$$138, null, ["'"], JAM.policy.p3);
          }
          if (v16104) {
            v3688 = l$$74 = !1;
          } else {
            v3688 = k$$67 = k$$67 + JAM.call(a$$599.charAt, a$$599, [m$$45], JAM.policy.p3);
          }
          v3688;
        } else {
          switch(JAM.call(a$$599.charAt, a$$599, [m$$45], JAM.policy.p3)) {
            case "d":
              k$$67 = k$$67 + JAM.call(i$$192, null, ["d", JAM.call(b$$565.getDate, b$$565, [], JAM.policy.p3), 2], JAM.policy.p3);
              break;
            case "D":
              k$$67 = k$$67 + JAM.call(j$$98, null, ["D", JAM.call(b$$565.getDay, b$$565, [], JAM.policy.p3), d$$349, e$$303], JAM.policy.p3);
              break;
            case "o":
              var v10424 = k$$67;
              var v28158 = JAM.new(Date, [JAM.call(b$$565.getFullYear, b$$565, [], JAM.policy.p3), JAM.call(b$$565.getMonth, b$$565, [], JAM.policy.p3), JAM.call(b$$565.getDate, b$$565, [], JAM.policy.p3)], JAM.policy.p3);
              var v26743 = JAM.call(v28158.getTime, v28158, [], JAM.policy.p3);
              var v28159 = JAM.new(Date, [JAM.call(b$$565.getFullYear, b$$565, [], JAM.policy.p3), 0, 0], JAM.policy.p3);
              k$$67 = v10424 + JAM.call(i$$192, null, ["o", JAM.call(Math.round, Math, [(v26743 - JAM.call(v28159.getTime, v28159, [], JAM.policy.p3)) / 864E5], JAM.policy.p3), 3], JAM.policy.p3);
              break;
            case "m":
              k$$67 = k$$67 + JAM.call(i$$192, null, ["m", JAM.call(b$$565.getMonth, b$$565, [], JAM.policy.p3) + 1, 2], JAM.policy.p3);
              break;
            case "M":
              k$$67 = k$$67 + JAM.call(j$$98, null, ["M", JAM.call(b$$565.getMonth, b$$565, [], JAM.policy.p3), f$$148, g$$168], JAM.policy.p3);
              break;
            case "y":
              var v10430 = k$$67;
              var v16112;
              if (JAM.call(h$$138, null, ["y"], JAM.policy.p3)) {
                v16112 = JAM.call(b$$565.getFullYear, b$$565, [], JAM.policy.p3);
              } else {
                var v24764;
                if (JAM.call(b$$565.getYear, b$$565, [], JAM.policy.p3) % 100 < 10) {
                  v24764 = "0";
                } else {
                  v24764 = "";
                }
                v16112 = v24764 + JAM.call(b$$565.getYear, b$$565, [], JAM.policy.p3) % 100;
              }
              k$$67 = v10430 + v16112;
              break;
            case "@":
              k$$67 = k$$67 + JAM.call(b$$565.getTime, b$$565, [], JAM.policy.p3);
              break;
            case "!":
              k$$67 = k$$67 + (JAM.call(b$$565.getTime, b$$565, [], JAM.policy.p3) * 1E4 + this._ticksTo1970);
              break;
            case "'":
              var v3689;
              if (JAM.call(h$$138, null, ["'"], JAM.policy.p3)) {
                v3689 = k$$67 = k$$67 + "'";
              } else {
                v3689 = l$$74 = !0;
              }
              v3689;
              break;
            default:
              k$$67 = k$$67 + JAM.call(a$$599.charAt, a$$599, [m$$45], JAM.policy.p3);
          }
        }
        m$$45 = m$$45 + 1;
        v3691 = m$$45 < a$$599.length;
      }
    }
    return k$$67;
  }
  function v1640(a$$593, b$$561, c$$456) {
    function q$$17() {
      if (JAM.call(b$$561.charAt, b$$561, [r$$18], JAM.policy.p3) != JAM.call(a$$593.charAt, a$$593, [s$$27], JAM.policy.p3)) {
        throw "Unexpected literal at position " + r$$18;
      }
      r$$18 = r$$18 + 1;
      return;
    }
    function p$$46(a$$595, c$$459, d$$347) {
      function v1639(a$$598, c$$460) {
        var d$$348 = c$$460[1];
        var v16115 = JAM.call(b$$561.substr, b$$561, [r$$18, d$$348.length], JAM.policy.p3);
        if (JAM.call(v16115.toLowerCase, v16115, [], JAM.policy.p3) == JAM.call(d$$348.toLowerCase, d$$348, [], JAM.policy.p3)) {
          f$$147 = c$$460[0];
          r$$18 = r$$18 + d$$348.length;
          return!1;
        }
        return;
      }
      function v1638(a$$597, b$$564) {
        return-(a$$597[1].length - b$$564[1].length);
      }
      function v1637(a$$596, b$$563) {
        return[[b$$563, a$$596]];
      }
      var v16118;
      if (JAM.call(n$$91, null, [a$$595], JAM.policy.p3)) {
        v16118 = d$$347;
      } else {
        v16118 = c$$459;
      }
      var v3696 = JAM.call($$$3.map, $$$3, [v16118, v1637], JAM.policy.p3);
      var e$$302 = JAM.call(v3696.sort, v3696, [v1638], JAM.policy.p3);
      var f$$147 = -1;
      JAM.call($$$3.each, $$$3, [e$$302, v1639], JAM.policy.p3);
      if (f$$147 != -1) {
        return f$$147 + 1;
      }
      throw "Unknown name at position " + r$$18;
    }
    function o$$21(a$$594) {
      var c$$458 = JAM.call(n$$91, null, [a$$594], JAM.policy.p3);
      var v3698;
      if (a$$594 == "@") {
        v3698 = 14;
      } else {
        var v10447;
        if (a$$594 == "!") {
          v10447 = 20;
        } else {
          var v16119;
          var v24766 = a$$594 == "y";
          if (v24766) {
            v24766 = c$$458;
          }
          if (v24766) {
            v16119 = 4;
          } else {
            var v20336;
            if (a$$594 == "o") {
              v20336 = 3;
            } else {
              v20336 = 2;
            }
            v16119 = v20336;
          }
          v10447 = v16119;
        }
        v3698 = v10447;
      }
      var d$$346 = v3698;
      var e$$301 = JAM.new(RegExp, ["^\\d{1," + d$$346 + "}"], JAM.policy.p3);
      var v3700 = JAM.call(b$$561.substring, b$$561, [r$$18], JAM.policy.p3);
      var f$$146 = JAM.call(v3700.match, v3700, [e$$301], JAM.policy.p3);
      if (!f$$146) {
        throw "Missing number at position " + r$$18;
      }
      r$$18 = r$$18 + f$$146[0].length;
      return JAM.call(parseInt, null, [f$$146[0], 10], JAM.policy.p3);
    }
    function n$$91(b$$562) {
      var v3702 = s$$27 + 1 < a$$593.length;
      if (v3702) {
        v3702 = JAM.call(a$$593.charAt, a$$593, [s$$27 + 1], JAM.policy.p3) == b$$562;
      }
      var c$$457 = v3702;
      if (c$$457) {
        s$$27 = s$$27 + 1;
      }
      return c$$457;
    }
    var v10454 = a$$593 == null;
    if (!v10454) {
      v10454 = b$$561 == null;
    }
    if (v10454) {
      throw "Invalid arguments";
    }
    var v3704;
    if (typeof b$$561 == "object") {
      v3704 = JAM.call(b$$561.toString, b$$561, [], JAM.policy.p3);
    } else {
      v3704 = b$$561 + "";
    }
    b$$561 = v3704;
    if (b$$561 == "") {
      return null;
    }
    var v10456;
    if (c$$456) {
      v10456 = c$$456.shortYearCutoff;
    } else {
      v10456 = null;
    }
    var v3706 = v10456;
    if (!v3706) {
      v3706 = this._defaults.shortYearCutoff;
    }
    var d$$345 = v3706;
    var v3707;
    if (typeof d$$345 != "string") {
      v3707 = d$$345;
    } else {
      var v20339 = JAM.new(Date, [], JAM.policy.p3);
      v3707 = JAM.call(v20339.getFullYear, v20339, [], JAM.policy.p3) % 100 + JAM.call(parseInt, null, [d$$345, 10], JAM.policy.p3);
    }
    d$$345 = v3707;
    var v10462;
    if (c$$456) {
      v10462 = c$$456.dayNamesShort;
    } else {
      v10462 = null;
    }
    var v3708 = v10462;
    if (!v3708) {
      v3708 = this._defaults.dayNamesShort;
    }
    var e$$300 = v3708;
    var v10465;
    if (c$$456) {
      v10465 = c$$456.dayNames;
    } else {
      v10465 = null;
    }
    var v3709 = v10465;
    if (!v3709) {
      v3709 = this._defaults.dayNames;
    }
    var f$$145 = v3709;
    var v10468;
    if (c$$456) {
      v10468 = c$$456.monthNamesShort;
    } else {
      v10468 = null;
    }
    var v3710 = v10468;
    if (!v3710) {
      v3710 = this._defaults.monthNamesShort;
    }
    var g$$167 = v3710;
    var v10471;
    if (c$$456) {
      v10471 = c$$456.monthNames;
    } else {
      v10471 = null;
    }
    var v3711 = v10471;
    if (!v3711) {
      v3711 = this._defaults.monthNames;
    }
    var h$$137 = v3711;
    var i$$191 = -1;
    var j$$97 = -1;
    var k$$66 = -1;
    var l$$73 = -1;
    var m$$44 = !1;
    var r$$18 = 0;
    var s$$27 = 0;
    var v3717 = s$$27 < a$$593.length;
    for (;v3717;) {
      if (m$$44) {
        var v3712;
        var v16127 = JAM.call(a$$593.charAt, a$$593, [s$$27], JAM.policy.p3) == "'";
        if (v16127) {
          v16127 = !JAM.call(n$$91, null, ["'"], JAM.policy.p3);
        }
        if (v16127) {
          v3712 = m$$44 = !1;
        } else {
          v3712 = JAM.call(q$$17, null, [], JAM.policy.p3);
        }
        v3712;
      } else {
        switch(JAM.call(a$$593.charAt, a$$593, [s$$27], JAM.policy.p3)) {
          case "d":
            k$$66 = JAM.call(o$$21, null, ["d"], JAM.policy.p3);
            break;
          case "D":
            JAM.call(p$$46, null, ["D", e$$300, f$$145], JAM.policy.p3);
            break;
          case "o":
            l$$73 = JAM.call(o$$21, null, ["o"], JAM.policy.p3);
            break;
          case "m":
            j$$97 = JAM.call(o$$21, null, ["m"], JAM.policy.p3);
            break;
          case "M":
            j$$97 = JAM.call(p$$46, null, ["M", g$$167, h$$137], JAM.policy.p3);
            break;
          case "y":
            i$$191 = JAM.call(o$$21, null, ["y"], JAM.policy.p3);
            break;
          case "@":
            var t$$12 = JAM.new(Date, [JAM.call(o$$21, null, ["@"], JAM.policy.p3)], JAM.policy.p3);
            i$$191 = JAM.call(t$$12.getFullYear, t$$12, [], JAM.policy.p3);
            j$$97 = JAM.call(t$$12.getMonth, t$$12, [], JAM.policy.p3) + 1;
            k$$66 = JAM.call(t$$12.getDate, t$$12, [], JAM.policy.p3);
            break;
          case "!":
            t$$12 = JAM.new(Date, [(JAM.call(o$$21, null, ["!"], JAM.policy.p3) - this._ticksTo1970) / 1E4], JAM.policy.p3);
            i$$191 = JAM.call(t$$12.getFullYear, t$$12, [], JAM.policy.p3);
            j$$97 = JAM.call(t$$12.getMonth, t$$12, [], JAM.policy.p3) + 1;
            k$$66 = JAM.call(t$$12.getDate, t$$12, [], JAM.policy.p3);
            break;
          case "'":
            var v3715;
            if (JAM.call(n$$91, null, ["'"], JAM.policy.p3)) {
              v3715 = JAM.call(q$$17, null, [], JAM.policy.p3);
            } else {
              v3715 = m$$44 = !0;
            }
            v3715;
            break;
          default:
            JAM.call(q$$17, null, [], JAM.policy.p3);
        }
      }
      s$$27 = s$$27 + 1;
      v3717 = s$$27 < a$$593.length;
    }
    if (r$$18 < b$$561.length) {
      throw "Extra/unparsed characters found in date: " + JAM.call(b$$561.substring, b$$561, [r$$18], JAM.policy.p3);
    }
    var v3720;
    if (i$$191 == -1) {
      var v10480 = JAM.new(Date, [], JAM.policy.p3);
      v3720 = i$$191 = JAM.call(v10480.getFullYear, v10480, [], JAM.policy.p3);
    } else {
      var v10481 = i$$191 < 100;
      if (v10481) {
        var v20342 = i$$191;
        var v28161 = JAM.new(Date, [], JAM.policy.p3);
        var v26746 = JAM.call(v28161.getFullYear, v28161, [], JAM.policy.p3);
        var v29073 = JAM.new(Date, [], JAM.policy.p3);
        var v24768 = v26746 - JAM.call(v29073.getFullYear, v29073, [], JAM.policy.p3) % 100;
        var v26748;
        if (i$$191 <= d$$345) {
          v26748 = 0;
        } else {
          v26748 = -100;
        }
        v10481 = i$$191 = v20342 + (v24768 + v26748);
      }
      v3720 = v10481;
    }
    v3720;
    if (l$$73 > -1) {
      j$$97 = 1;
      k$$66 = l$$73;
      var v3723 = !0;
      do {
        var u$$10 = JAM.call(this._getDaysInMonth, this, [i$$191, j$$97 - 1], JAM.policy.p3);
        if (k$$66 <= u$$10) {
          break;
        }
        j$$97 = j$$97 + 1;
        k$$66 = k$$66 - u$$10;
        v3723 = !0;
      } while (v3723);
    }
    t$$12 = JAM.call(this._daylightSavingAdjust, this, [JAM.new(Date, [i$$191, j$$97 - 1, k$$66], JAM.policy.p3)], JAM.policy.p3);
    var v16132 = JAM.call(t$$12.getFullYear, t$$12, [], JAM.policy.p3) != i$$191;
    if (!v16132) {
      v16132 = JAM.call(t$$12.getMonth, t$$12, [], JAM.policy.p3) + 1 != j$$97;
    }
    var v10484 = v16132;
    if (!v10484) {
      v10484 = JAM.call(t$$12.getDate, t$$12, [], JAM.policy.p3) != k$$66;
    }
    if (v10484) {
      throw "Invalid date";
    }
    return t$$12;
  }
  function v1636(a$$592) {
    var b$$560 = JAM.new(Date, [JAM.call(a$$592.getTime, a$$592, [], JAM.policy.p3)], JAM.policy.p3);
    var v10485 = JAM.call(b$$560.getDate, b$$560, [], JAM.policy.p3) + 4;
    var v16136 = JAM.call(b$$560.getDay, b$$560, [], JAM.policy.p3);
    if (!v16136) {
      v16136 = 7;
    }
    JAM.call(b$$560.setDate, b$$560, [v10485 - v16136], JAM.policy.p3);
    var c$$455 = JAM.call(b$$560.getTime, b$$560, [], JAM.policy.p3);
    JAM.call(b$$560.setMonth, b$$560, [0], JAM.policy.p3);
    JAM.call(b$$560.setDate, b$$560, [1], JAM.policy.p3);
    return JAM.call(Math.floor, Math, [JAM.call(Math.round, Math, [(c$$455 - b$$560) / 864E5], JAM.policy.p3) / 7], JAM.policy.p3) + 1;
  }
  function v1635(a$$591) {
    var b$$559 = JAM.call(a$$591.getDay, a$$591, [], JAM.policy.p3);
    var v10488 = b$$559 > 0;
    if (v10488) {
      v10488 = b$$559 < 6;
    }
    return[v10488, ""];
  }
  function v1634(a$$590) {
    function v1633() {
      var v3730 = JAM.call($$$3, null, [this], JAM.policy.p3);
      JAM.call(v3730.val, v3730, [e$$299], JAM.policy.p3);
      return;
    }
    var b$$558 = JAM.call(this._get, this, [a$$590, "altField"], JAM.policy.p3);
    if (b$$558) {
      var v3731 = JAM.call(this._get, this, [a$$590, "altFormat"], JAM.policy.p3);
      if (!v3731) {
        v3731 = JAM.call(this._get, this, [a$$590, "dateFormat"], JAM.policy.p3);
      }
      var c$$454 = v3731;
      var d$$344 = JAM.call(this._getDate, this, [a$$590], JAM.policy.p3);
      var e$$299 = JAM.call(this.formatDate, this, [c$$454, d$$344, JAM.call(this._getFormatConfig, this, [a$$590], JAM.policy.p3)], JAM.policy.p3);
      var v3733 = JAM.call($$$3, null, [b$$558], JAM.policy.p3);
      JAM.call(v3733.each, v3733, [v1633], JAM.policy.p3);
    }
    return;
  }
  function v1632(a$$589, b$$557) {
    var c$$453 = JAM.call($$$3, null, [a$$589], JAM.policy.p3);
    var d$$343 = JAM.call(this._getInst, this, [c$$453[0]], JAM.policy.p3);
    var v16138;
    if (b$$557 != null) {
      v16138 = b$$557;
    } else {
      v16138 = JAM.call(this._formatDate, this, [d$$343], JAM.policy.p3);
    }
    b$$557 = v16138;
    var v16139 = d$$343.input;
    if (v16139) {
      var v20350 = d$$343.input;
      JAM.call(v20350.val, v20350, [b$$557], JAM.policy.p3);
    }
    JAM.call(this._updateAlternate, this, [d$$343], JAM.policy.p3);
    var e$$298 = JAM.call(this._get, this, [d$$343, "onSelect"], JAM.policy.p3);
    var v10490;
    if (e$$298) {
      var v20351;
      if (d$$343.input) {
        v20351 = d$$343.input[0];
      } else {
        v20351 = null;
      }
      v10490 = JAM.call(e$$298.apply, e$$298, [v20351, [b$$557, d$$343]], JAM.policy.p3);
    } else {
      var v16142 = d$$343.input;
      if (v16142) {
        var v20352 = d$$343.input;
        v16142 = JAM.call(v20352.trigger, v20352, ["change"], JAM.policy.p3);
      }
      v10490 = v16142;
    }
    v10490;
    var v10491;
    if (d$$343.inline) {
      v10491 = JAM.call(this._updateDatepicker, this, [d$$343], JAM.policy.p3);
    } else {
      JAM.call(this._hideDatepicker, this, [], JAM.policy.p3);
      this._lastInput = d$$343.input[0];
      var v24774 = typeof d$$343.input[0] != "object";
      if (v24774) {
        var v26752 = d$$343.input;
        JAM.call(v26752.focus, v26752, [], JAM.policy.p3);
      }
      v10491 = this._lastInput = null;
    }
    v10491;
    return;
  }
  function v1631(a$$588) {
    var b$$556 = JAM.call($$$3, null, [a$$588], JAM.policy.p3);
    var c$$452 = JAM.call(this._getInst, this, [b$$556[0]], JAM.policy.p3);
    JAM.call(this._selectDate, this, [b$$556, ""], JAM.policy.p3);
    return;
  }
  function v1630(a$$587, b$$555, c$$451, d$$342) {
    var e$$297 = JAM.call($$$3, null, [a$$587], JAM.policy.p3);
    var v16144 = JAM.call($$$3, null, [d$$342], JAM.policy.p3);
    var v10492 = JAM.call(v16144.hasClass, v16144, [this._unselectableClass], JAM.policy.p3);
    if (!v10492) {
      v10492 = JAM.call(this._isDisabledDatepicker, this, [e$$297[0]], JAM.policy.p3);
    }
    if (v10492) {
      return;
    }
    var f$$144 = JAM.call(this._getInst, this, [e$$297[0]], JAM.policy.p3);
    var v20353 = f$$144;
    var v24775 = f$$144;
    var v26753 = JAM.call($$$3, null, ["a", d$$342], JAM.policy.p3);
    var v31229 = JAM.call(v26753.html, v26753, [], JAM.policy.p3);
    v20353.selectedDay = v24775.currentDay = v31229;
    f$$144.selectedMonth = f$$144.currentMonth = b$$555;
    f$$144.selectedYear = f$$144.currentYear = c$$451;
    JAM.call(this._selectDate, this, [a$$587, JAM.call(this._formatDate, this, [f$$144, f$$144.currentDay, f$$144.currentMonth, f$$144.currentYear], JAM.policy.p3)], JAM.policy.p3);
    return;
  }
  function v1629(a$$586, b$$554, c$$450) {
    var d$$341 = JAM.call($$$3, null, [a$$586], JAM.policy.p3);
    var e$$296 = JAM.call(this._getInst, this, [d$$341[0]], JAM.policy.p3);
    var v16151 = e$$296;
    var v24776;
    if (c$$450 == "M") {
      v24776 = "Month";
    } else {
      v24776 = "Year";
    }
    var v16152 = "selected" + v24776;
    var v20355 = e$$296;
    var v26755;
    if (c$$450 == "M") {
      v26755 = "Month";
    } else {
      v26755 = "Year";
    }
    var v20356 = "draw" + v26755;
    var v31230 = JAM.call(parseInt, null, [b$$554.options[b$$554.selectedIndex].value, 10], JAM.policy.p3);
    JAM.set(v16151, v16152, JAM.set(v20355, v20356, v31230, JAM.policy.p2), JAM.policy.p2);
    JAM.call(this._notifyChange, this, [e$$296], JAM.policy.p3);
    JAM.call(this._adjustDate, this, [d$$341], JAM.policy.p3);
    return;
  }
  function v1628(a$$585) {
    var b$$553 = JAM.call($$$3, null, [a$$585], JAM.policy.p3);
    var c$$449 = JAM.call(this._getInst, this, [b$$553[0]], JAM.policy.p3);
    var v10494 = JAM.call(this._get, this, [c$$449, "gotoCurrent"], JAM.policy.p3);
    if (v10494) {
      v10494 = c$$449.currentDay;
    }
    if (v10494) {
      c$$449.selectedDay = c$$449.currentDay;
      c$$449.drawMonth = c$$449.selectedMonth = c$$449.currentMonth;
      c$$449.drawYear = c$$449.selectedYear = c$$449.currentYear;
    } else {
      var d$$340 = JAM.new(Date, [], JAM.policy.p3);
      var v16153 = c$$449;
      var v31231 = JAM.call(d$$340.getDate, d$$340, [], JAM.policy.p3);
      v16153.selectedDay = v31231;
      var v16154 = c$$449;
      var v20357 = c$$449;
      var v31232 = JAM.call(d$$340.getMonth, d$$340, [], JAM.policy.p3);
      v16154.drawMonth = v20357.selectedMonth = v31232;
      var v10495 = c$$449;
      var v16155 = c$$449;
      var v31233 = JAM.call(d$$340.getFullYear, d$$340, [], JAM.policy.p3);
      v10495.drawYear = v16155.selectedYear = v31233;
    }
    JAM.call(this._notifyChange, this, [c$$449], JAM.policy.p3);
    JAM.call(this._adjustDate, this, [b$$553], JAM.policy.p3);
    return;
  }
  function v1627(a$$584, b$$552, c$$448) {
    var d$$339 = JAM.call($$$3, null, [a$$584], JAM.policy.p3);
    var e$$295 = JAM.call(this._getInst, this, [d$$339[0]], JAM.policy.p3);
    if (JAM.call(this._isDisabledDatepicker, this, [d$$339[0]], JAM.policy.p3)) {
      return;
    }
    var v16156 = b$$552;
    var v20358;
    if (c$$448 == "M") {
      v20358 = JAM.call(this._get, this, [e$$295, "showCurrentAtPos"], JAM.policy.p3);
    } else {
      v20358 = 0;
    }
    JAM.call(this._adjustInstDate, this, [e$$295, v16156 + v20358, c$$448], JAM.policy.p3);
    JAM.call(this._updateDatepicker, this, [e$$295], JAM.policy.p3);
    return;
  }
  function v1626(a$$583) {
    if (!$$$3.datepicker._curInst) {
      return;
    }
    var b$$551 = JAM.call($$$3, null, [a$$583.target], JAM.policy.p3);
    var v3745 = $$$3.datepicker;
    var c$$447 = JAM.call(v3745._getInst, v3745, [b$$551[0]], JAM.policy.p3);
    var v28168 = b$$551[0].id != $$$3.datepicker._mainDivId;
    if (v28168) {
      v28168 = JAM.call(b$$551.parents, b$$551, ["#" + $$$3.datepicker._mainDivId], JAM.policy.p3).length == 0;
    }
    var v26757 = v28168;
    if (v26757) {
      v26757 = !JAM.call(b$$551.hasClass, b$$551, [$$$3.datepicker.markerClassName], JAM.policy.p3);
    }
    var v24780 = v26757;
    if (v24780) {
      v24780 = !JAM.call(b$$551.closest, b$$551, ["." + $$$3.datepicker._triggerClass], JAM.policy.p3).length;
    }
    var v20359 = v24780;
    if (v20359) {
      v20359 = $$$3.datepicker._datepickerShowing;
    }
    var v16159 = v20359;
    if (v16159) {
      var v20360 = !$$$3.datepicker._inDialog;
      if (!v20360) {
        v20360 = !$$$3.blockUI;
      }
      v16159 = v20360;
    }
    var v10499 = v16159;
    if (!v10499) {
      var v16160 = JAM.call(b$$551.hasClass, b$$551, [$$$3.datepicker.markerClassName], JAM.policy.p3);
      if (v16160) {
        v16160 = $$$3.datepicker._curInst != c$$447;
      }
      v10499 = v16160;
    }
    var v3747 = v10499;
    if (v3747) {
      var v10500 = $$$3.datepicker;
      JAM.call(v10500._hideDatepicker, v10500, [], JAM.policy.p3);
    }
    return;
  }
  function v1625(a$$582) {
    var v10501 = a$$582.dpDiv;
    var v3748 = JAM.call(v10501.removeClass, v10501, [this._dialogClass], JAM.policy.p3);
    JAM.call(v3748.unbind, v3748, [".ui-datepicker-calendar"], JAM.policy.p3);
    return;
  }
  function v1624(a$$581) {
    function v1623() {
      var v3749 = $$$3.datepicker;
      JAM.call(v3749._tidyDialog, v3749, [b$$550], JAM.policy.p3);
      return;
    }
    var b$$550 = this._curInst;
    var v10503 = !b$$550;
    if (!v10503) {
      var v16162 = a$$581;
      if (v16162) {
        v16162 = b$$550 != JAM.call($$$3.data, $$$3, [a$$581, PROP_NAME], JAM.policy.p3);
      }
      v10503 = v16162;
    }
    if (v10503) {
      return;
    }
    if (this._datepickerShowing) {
      var c$$446 = JAM.call(this._get, this, [b$$550, "showAnim"], JAM.policy.p3);
      var d$$338 = JAM.call(this._get, this, [b$$550, "duration"], JAM.policy.p3);
      var e$$294 = v1623;
      var v16164;
      var v24787 = $$$3.effects;
      if (v24787) {
        v24787 = $$$3.effects[c$$446];
      }
      if (v24787) {
        var v20365 = b$$550.dpDiv;
        var v24788 = $$$3.datepicker;
        v16164 = JAM.call(v20365.hide, v20365, [c$$446, JAM.call(v24788._get, v24788, [b$$550, "showOptions"], JAM.policy.p3), d$$338, e$$294], JAM.policy.p3);
      } else {
        var v20367 = b$$550.dpDiv;
        var v24789;
        if (c$$446 == "slideDown") {
          v24789 = "slideUp";
        } else {
          var v26761;
          if (c$$446 == "fadeIn") {
            v26761 = "fadeOut";
          } else {
            v26761 = "hide";
          }
          v24789 = v26761;
        }
        var v20368 = v24789;
        var v24790;
        if (c$$446) {
          v24790 = d$$338;
        } else {
          v24790 = null;
        }
        v16164 = JAM.call(v20367[v20368], v20367, [v24790, e$$294], JAM.policy.p3);
      }
      v16164;
      if (!c$$446) {
        JAM.call(e$$294, null, [], JAM.policy.p3);
      }
      this._datepickerShowing = !1;
      var f$$143 = JAM.call(this._get, this, [b$$550, "onClose"], JAM.policy.p3);
      if (f$$143) {
        var v26763;
        if (b$$550.input) {
          v26763 = b$$550.input[0];
        } else {
          v26763 = null;
        }
        var v24791 = v26763;
        var v28174;
        if (b$$550.input) {
          var v29080 = b$$550.input;
          v28174 = JAM.call(v29080.val, v29080, [], JAM.policy.p3);
        } else {
          v28174 = "";
        }
        JAM.call(f$$143.apply, f$$143, [v24791, [v28174, b$$550]], JAM.policy.p3);
      }
      this._lastInput = null;
      var v16165 = this._inDialog;
      if (v16165) {
        var v24793 = this._dialogInput;
        JAM.call(v24793.css, v24793, [{position:"absolute", left:"0", top:"-100px"}], JAM.policy.p3);
        var v24795 = $$$3.blockUI;
        if (v24795) {
          JAM.call($$$3.unblockUI, $$$3, [], JAM.policy.p3);
          var v28175 = JAM.call($$$3, null, ["body"], JAM.policy.p3);
          JAM.call(v28175.append, v28175, [this.dpDiv], JAM.policy.p3);
        }
      }
      this._inDialog = !1;
    }
    return;
  }
  function v1622(a$$580) {
    var b$$549 = JAM.call(this._getInst, this, [a$$580], JAM.policy.p3);
    var c$$445 = JAM.call(this._get, this, [b$$549, "isRTL"], JAM.policy.p3);
    var v10504 = a$$580;
    if (v10504) {
      var v20372 = a$$580.type == "hidden";
      if (!v20372) {
        v20372 = a$$580.nodeType != 1;
      }
      var v16166 = v20372;
      if (!v16166) {
        var v20373 = $$$3.expr.filters;
        v16166 = JAM.call(v20373.hidden, v20373, [a$$580], JAM.policy.p3);
      }
      v10504 = v16166;
    }
    var v3753 = v10504;
    for (;v3753;) {
      var v10505;
      if (c$$445) {
        v10505 = "previousSibling";
      } else {
        v10505 = "nextSibling";
      }
      a$$580 = a$$580[v10505];
      var v10506 = a$$580;
      if (v10506) {
        var v20375 = a$$580.type == "hidden";
        if (!v20375) {
          v20375 = a$$580.nodeType != 1;
        }
        var v16167 = v20375;
        if (!v16167) {
          var v20376 = $$$3.expr.filters;
          v16167 = JAM.call(v20376.hidden, v20376, [a$$580], JAM.policy.p3);
        }
        v10506 = v16167;
      }
      v3753 = v10506;
    }
    var v3754 = JAM.call($$$3, null, [a$$580], JAM.policy.p3);
    var d$$337 = JAM.call(v3754.offset, v3754, [], JAM.policy.p3);
    return[d$$337.left, d$$337.top];
  }
  function v1621(a$$579, b$$548, c$$444) {
    var v3757 = a$$579.dpDiv;
    var d$$336 = JAM.call(v3757.outerWidth, v3757, [], JAM.policy.p3);
    var v3758 = a$$579.dpDiv;
    var e$$293 = JAM.call(v3758.outerHeight, v3758, [], JAM.policy.p3);
    var v3759;
    if (a$$579.input) {
      var v10507 = a$$579.input;
      v3759 = JAM.call(v10507.outerWidth, v10507, [], JAM.policy.p3);
    } else {
      v3759 = 0;
    }
    var f$$142 = v3759;
    var v3760;
    if (a$$579.input) {
      var v10509 = a$$579.input;
      v3760 = JAM.call(v10509.outerHeight, v10509, [], JAM.policy.p3);
    } else {
      v3760 = 0;
    }
    var g$$166 = v3760;
    var v3761 = document.documentElement.clientWidth;
    var v10512;
    if (c$$444) {
      v10512 = 0;
    } else {
      var v16168 = JAM.call($$$3, null, [document], JAM.policy.p3);
      v10512 = JAM.call(v16168.scrollLeft, v16168, [], JAM.policy.p3);
    }
    var h$$136 = v3761 + v10512;
    var v3763 = document.documentElement.clientHeight;
    var v10514;
    if (c$$444) {
      v10514 = 0;
    } else {
      var v16169 = JAM.call($$$3, null, [document], JAM.policy.p3);
      v10514 = JAM.call(v16169.scrollTop, v16169, [], JAM.policy.p3);
    }
    var i$$190 = v3763 + v10514;
    var v26765 = b$$548;
    var v29082 = v26765.left;
    var v29687;
    if (JAM.call(this._get, this, [a$$579, "isRTL"], JAM.policy.p3)) {
      v29687 = d$$336 - f$$142;
    } else {
      v29687 = 0;
    }
    v26765.left = v29082 - v29687;
    var v26766 = b$$548;
    var v29084 = v26766.left;
    var v29688;
    var v30310 = c$$444;
    if (v30310) {
      var v30529 = b$$548.left;
      var v30809 = a$$579.input;
      v30310 = v30529 == JAM.call(v30809.offset, v30809, [], JAM.policy.p3).left;
    }
    if (v30310) {
      var v30047 = JAM.call($$$3, null, [document], JAM.policy.p3);
      v29688 = JAM.call(v30047.scrollLeft, v30047, [], JAM.policy.p3);
    } else {
      v29688 = 0;
    }
    v26766.left = v29084 - v29688;
    var v24804 = b$$548;
    var v28177 = v24804.top;
    var v29086;
    var v30049 = c$$444;
    if (v30049) {
      var v30311 = b$$548.top;
      var v30810 = a$$579.input;
      v30049 = v30311 == JAM.call(v30810.offset, v30810, [], JAM.policy.p3).top + g$$166;
    }
    if (v30049) {
      var v29689 = JAM.call($$$3, null, [document], JAM.policy.p3);
      v29086 = JAM.call(v29689.scrollTop, v29689, [], JAM.policy.p3);
    } else {
      v29086 = 0;
    }
    v24804.top = v28177 - v29086;
    var v20378 = b$$548;
    var v26767 = v20378.left;
    var v28179 = b$$548.left;
    var v29087;
    var v30050 = b$$548.left + d$$336 > h$$136;
    if (v30050) {
      v30050 = h$$136 > d$$336;
    }
    if (v30050) {
      v29087 = JAM.call(Math.abs, Math, [b$$548.left + d$$336 - h$$136], JAM.policy.p3);
    } else {
      v29087 = 0;
    }
    v20378.left = v26767 - JAM.call(Math.min, Math, [v28179, v29087], JAM.policy.p3);
    var v16170 = b$$548;
    var v24805 = v16170.top;
    var v26769 = b$$548.top;
    var v28181;
    var v29693 = b$$548.top + e$$293 > i$$190;
    if (v29693) {
      v29693 = i$$190 > e$$293;
    }
    if (v29693) {
      v28181 = JAM.call(Math.abs, Math, [e$$293 + g$$166], JAM.policy.p3);
    } else {
      v28181 = 0;
    }
    v16170.top = v24805 - JAM.call(Math.min, Math, [v26769, v28181], JAM.policy.p3);
    return b$$548;
  }
  function v1620(a$$577) {
    function b$$547(a$$578) {
      var v3765 = {thin:1, medium:2, thick:3}[a$$578];
      if (!v3765) {
        v3765 = a$$578;
      }
      return v3765;
    }
    return[JAM.call(parseFloat, null, [JAM.call(b$$547, null, [JAM.call(a$$577.css, a$$577, ["border-left-width"], JAM.policy.p3)], JAM.policy.p3)], JAM.policy.p3), JAM.call(parseFloat, null, [JAM.call(b$$547, null, [JAM.call(a$$577.css, a$$577, ["border-top-width"], JAM.policy.p3)], JAM.policy.p3)], JAM.policy.p3)];
  }
  function v1619(a$$576) {
    function v1618() {
      var v16173 = h$$135 === a$$576.yearshtml;
      if (v16173) {
        v16173 = a$$576.yearshtml;
      }
      var v10519 = v16173;
      if (v10519) {
        var v20380 = a$$576.dpDiv;
        var v16174 = JAM.call(v20380.find, v20380, ["select.ui-datepicker-year:first"], JAM.policy.p3);
        JAM.call(v16174.replaceWith, v16174, [a$$576.yearshtml], JAM.policy.p3);
      }
      h$$135 = a$$576.yearshtml = null;
      return;
    }
    var b$$546 = this;
    b$$546.maxRows = 4;
    var v3768 = $$$3.datepicker;
    var c$$443 = JAM.call(v3768._getBorders, v3768, [a$$576.dpDiv], JAM.policy.p3);
    instActive = a$$576;
    var v20381 = a$$576.dpDiv;
    var v16176 = JAM.call(v20381.empty, v20381, [], JAM.policy.p3);
    JAM.call(v16176.append, v16176, [JAM.call(this._generateHTML, this, [a$$576], JAM.policy.p3)], JAM.policy.p3);
    JAM.call(this._attachHandlers, this, [a$$576], JAM.policy.p3);
    var v3770 = a$$576.dpDiv;
    var d$$335 = JAM.call(v3770.find, v3770, ["iframe.ui-datepicker-cover"], JAM.policy.p3);
    var v10520 = !d$$335.length;
    if (!v10520) {
      var v20382 = -c$$443[0];
      var v20383 = -c$$443[1];
      var v24809 = a$$576.dpDiv;
      var v20384 = JAM.call(v24809.outerWidth, v24809, [], JAM.policy.p3);
      var v24810 = a$$576.dpDiv;
      JAM.call(d$$335.css, d$$335, [{left:v20382, top:v20383, width:v20384, height:JAM.call(v24810.outerHeight, v24810, [], JAM.policy.p3)}], JAM.policy.p3);
    }
    var v16181 = a$$576.dpDiv;
    var v10521 = JAM.call(v16181.find, v16181, ["." + this._dayOverClass + " a"], JAM.policy.p3);
    JAM.call(v10521.mouseover, v10521, [], JAM.policy.p3);
    var e$$292 = JAM.call(this._getNumberOfMonths, this, [a$$576], JAM.policy.p3);
    var f$$141 = e$$292[1];
    var g$$165 = 17;
    var v26771 = a$$576.dpDiv;
    var v24812 = JAM.call(v26771.removeClass, v26771, ["ui-datepicker-multi-2 ui-datepicker-multi-3 ui-datepicker-multi-4"], JAM.policy.p3);
    JAM.call(v24812.width, v24812, [""], JAM.policy.p3);
    var v24813 = f$$141 > 1;
    if (v24813) {
      var v28182 = a$$576.dpDiv;
      var v26772 = JAM.call(v28182.addClass, v28182, ["ui-datepicker-multi-" + f$$141], JAM.policy.p3);
      JAM.call(v26772.css, v26772, ["width", g$$165 * f$$141 + "em"], JAM.policy.p3);
    }
    var v20387 = a$$576.dpDiv;
    var v26774;
    var v29090 = e$$292[0] != 1;
    if (!v29090) {
      v29090 = e$$292[1] != 1;
    }
    if (v29090) {
      v26774 = "add";
    } else {
      v26774 = "remove";
    }
    JAM.call(v20387[v26774 + "Class"], v20387, ["ui-datepicker-multi"], JAM.policy.p3);
    var v16183 = a$$576.dpDiv;
    var v24815;
    if (JAM.call(this._get, this, [a$$576, "isRTL"], JAM.policy.p3)) {
      v24815 = "add";
    } else {
      v24815 = "remove";
    }
    JAM.call(v16183[v24815 + "Class"], v16183, ["ui-datepicker-rtl"], JAM.policy.p3);
    var v28186 = a$$576 == $$$3.datepicker._curInst;
    if (v28186) {
      v28186 = $$$3.datepicker._datepickerShowing;
    }
    var v26776 = v28186;
    if (v26776) {
      v26776 = a$$576.input;
    }
    var v24816 = v26776;
    if (v24816) {
      var v26777 = a$$576.input;
      v24816 = JAM.call(v26777.is, v26777, [":visible"], JAM.policy.p3);
    }
    var v20390 = v24816;
    if (v20390) {
      var v26778 = a$$576.input;
      v20390 = !JAM.call(v26778.is, v26778, [":disabled"], JAM.policy.p3);
    }
    var v16185 = v20390;
    if (v16185) {
      v16185 = a$$576.input[0] != document.activeElement;
    }
    var v10522 = v16185;
    if (v10522) {
      var v16186 = a$$576.input;
      JAM.call(v16186.focus, v16186, [], JAM.policy.p3);
    }
    if (a$$576.yearshtml) {
      var h$$135 = a$$576.yearshtml;
      JAM.call(setTimeout, null, [v1618, 0], JAM.policy.p3);
    }
    return;
  }
  function v1617(a$$574) {
    function v1616() {
      var v3772 = b$$545.dpDiv;
      var a$$575 = JAM.call(v3772.find, v3772, ["iframe.ui-datepicker-cover"], JAM.policy.p3);
      if (!!a$$575.length) {
        var v3773 = $$$3.datepicker;
        var c$$442 = JAM.call(v3773._getBorders, v3773, [b$$545.dpDiv], JAM.policy.p3);
        var v10524 = -c$$442[0];
        var v10525 = -c$$442[1];
        var v16190 = b$$545.dpDiv;
        var v10526 = JAM.call(v16190.outerWidth, v16190, [], JAM.policy.p3);
        var v16191 = b$$545.dpDiv;
        JAM.call(a$$575.css, a$$575, [{left:v10524, top:v10525, width:v10526, height:JAM.call(v16191.outerHeight, v16191, [], JAM.policy.p3)}], JAM.policy.p3);
      }
      return;
    }
    function v1615() {
      var v16192 = e$$291;
      var v24819 = JAM.call($$$3, null, [this], JAM.policy.p3);
      e$$291 = v16192 | JAM.call(v24819.css, v24819, ["position"], JAM.policy.p3) == "fixed";
      return!e$$291;
    }
    var v10528 = a$$574.target;
    if (!v10528) {
      v10528 = a$$574;
    }
    a$$574 = v10528;
    var v20394 = a$$574.nodeName;
    var v10529 = JAM.call(v20394.toLowerCase, v20394, [], JAM.policy.p3) != "input";
    if (v10529) {
      a$$574 = JAM.call($$$3, null, ["input", a$$574.parentNode], JAM.policy.p3)[0];
    }
    var v16197 = $$$3.datepicker;
    var v10530 = JAM.call(v16197._isDisabledDatepicker, v16197, [a$$574], JAM.policy.p3);
    if (!v10530) {
      v10530 = $$$3.datepicker._lastInput == a$$574;
    }
    if (v10530) {
      return;
    }
    var v3778 = $$$3.datepicker;
    var b$$545 = JAM.call(v3778._getInst, v3778, [a$$574], JAM.policy.p3);
    var v10531 = $$$3.datepicker._curInst;
    if (v10531) {
      v10531 = $$$3.datepicker._curInst != b$$545;
    }
    var v3779 = v10531;
    if (v3779) {
      var v16202 = $$$3.datepicker._curInst.dpDiv;
      JAM.call(v16202.stop, v16202, [!0, !0], JAM.policy.p3);
      var v20399 = b$$545;
      if (v20399) {
        v20399 = $$$3.datepicker._datepickerShowing;
      }
      var v16205 = v20399;
      if (v16205) {
        var v20400 = $$$3.datepicker;
        JAM.call(v20400._hideDatepicker, v20400, [$$$3.datepicker._curInst.input[0]], JAM.policy.p3);
      }
    }
    var v3780 = $$$3.datepicker;
    var c$$441 = JAM.call(v3780._get, v3780, [b$$545, "beforeShow"], JAM.policy.p3);
    var v3781;
    if (c$$441) {
      v3781 = JAM.call(c$$441.apply, c$$441, [a$$574, [a$$574, b$$545]], JAM.policy.p3);
    } else {
      v3781 = {};
    }
    var d$$334 = v3781;
    if (d$$334 === !1) {
      return;
    }
    JAM.call(extendRemove, null, [b$$545.settings, d$$334], JAM.policy.p3);
    b$$545.lastVal = null;
    $$$3.datepicker._lastInput = a$$574;
    var v20402 = $$$3.datepicker;
    JAM.call(v20402._setDateFromField, v20402, [b$$545], JAM.policy.p3);
    var v16206 = $$$3.datepicker._inDialog;
    if (v16206) {
      a$$574.value = "";
    }
    var v10534 = $$$3.datepicker._pos;
    if (!v10534) {
      var v20404 = $$$3.datepicker;
      var v24824 = $$$3.datepicker;
      var v31234 = JAM.call(v24824._findPos, v24824, [a$$574], JAM.policy.p3);
      v20404._pos = v31234;
      var v20405 = $$$3.datepicker._pos;
      var v26781 = v20405[1];
      var v26782 = a$$574.offsetHeight;
      introspect(JAM.policy.p2) {
        v20405[1] = v26781 + v26782;
      }
    }
    var e$$291 = !1;
    var v16209 = JAM.call($$$3, null, [a$$574], JAM.policy.p3);
    var v10535 = JAM.call(v16209.parents, v16209, [], JAM.policy.p3);
    JAM.call(v10535.each, v10535, [v1615], JAM.policy.p3);
    var v16210 = e$$291;
    if (v16210) {
      v16210 = $$$3.browser.opera;
    }
    var v10536 = v16210;
    if (v10536) {
      var v20407 = $$$3.datepicker._pos;
      var v26783 = v20407[0];
      var v26784 = document.documentElement.scrollLeft;
      introspect(JAM.policy.p2) {
        v20407[0] = v26783 - v26784;
      }
      var v20408 = $$$3.datepicker._pos;
      var v26785 = v20408[1];
      var v26786 = document.documentElement.scrollTop;
      introspect(JAM.policy.p2) {
        v20408[1] = v26785 - v26786;
      }
    }
    var f$$140 = {left:$$$3.datepicker._pos[0], top:$$$3.datepicker._pos[1]};
    $$$3.datepicker._pos = null;
    var v26788 = b$$545.dpDiv;
    JAM.call(v26788.empty, v26788, [], JAM.policy.p3);
    var v24828 = b$$545.dpDiv;
    JAM.call(v24828.css, v24828, [{position:"absolute", display:"block", top:"-1000px"}], JAM.policy.p3);
    var v20409 = $$$3.datepicker;
    JAM.call(v20409._updateDatepicker, v20409, [b$$545], JAM.policy.p3);
    var v16213 = $$$3.datepicker;
    f$$140 = JAM.call(v16213._checkOffset, v16213, [b$$545, f$$140, e$$291], JAM.policy.p3);
    var v10539 = b$$545.dpDiv;
    var v20410;
    var v26789 = $$$3.datepicker._inDialog;
    if (v26789) {
      v26789 = $$$3.blockUI;
    }
    if (v26789) {
      v20410 = "static";
    } else {
      var v24830;
      if (e$$291) {
        v24830 = "fixed";
      } else {
        v24830 = "absolute";
      }
      v20410 = v24830;
    }
    JAM.call(v10539.css, v10539, [{position:v20410, display:"none", left:f$$140.left + "px", top:f$$140.top + "px"}], JAM.policy.p3);
    if (!b$$545.inline) {
      var v3785 = $$$3.datepicker;
      var g$$164 = JAM.call(v3785._get, v3785, [b$$545, "showAnim"], JAM.policy.p3);
      var v3786 = $$$3.datepicker;
      var h$$134 = JAM.call(v3786._get, v3786, [b$$545, "duration"], JAM.policy.p3);
      var i$$189 = v1616;
      var v26790 = b$$545.dpDiv;
      var v29093 = JAM.call($$$3, null, [a$$574], JAM.policy.p3);
      JAM.call(v26790.zIndex, v26790, [JAM.call(v29093.zIndex, v29093, [], JAM.policy.p3) + 1], JAM.policy.p3);
      $$$3.datepicker._datepickerShowing = !0;
      var v24832;
      var v28192 = $$$3.effects;
      if (v28192) {
        v28192 = $$$3.effects[g$$164];
      }
      if (v28192) {
        var v26793 = b$$545.dpDiv;
        var v28193 = $$$3.datepicker;
        v24832 = JAM.call(v26793.show, v26793, [g$$164, JAM.call(v28193._get, v28193, [b$$545, "showOptions"], JAM.policy.p3), h$$134, i$$189], JAM.policy.p3);
      } else {
        var v26795 = b$$545.dpDiv;
        var v26796 = g$$164 || "show";
        var v28194;
        if (g$$164) {
          v28194 = h$$134;
        } else {
          v28194 = null;
        }
        v24832 = JAM.call(v26795[v26796], v26795, [v28194, i$$189], JAM.policy.p3);
      }
      v24832;
      var v24833 = !g$$164;
      if (!v24833) {
        v24833 = !h$$134;
      }
      var v20413 = v24833;
      if (v20413) {
        JAM.call(i$$189, null, [], JAM.policy.p3);
      }
      var v24834 = b$$545.input;
      var v20414 = JAM.call(v24834.is, v24834, [":visible"], JAM.policy.p3);
      if (v20414) {
        var v26800 = b$$545.input;
        v20414 = !JAM.call(v26800.is, v26800, [":disabled"], JAM.policy.p3);
      }
      var v16217 = v20414;
      if (v16217) {
        var v20415 = b$$545.input;
        JAM.call(v20415.focus, v20415, [], JAM.policy.p3);
      }
      $$$3.datepicker._curInst = b$$545;
    }
    return;
  }
  function v1614(a$$573) {
    var v3788 = $$$3.datepicker;
    var b$$544 = JAM.call(v3788._getInst, v3788, [a$$573.target], JAM.policy.p3);
    var v16218 = b$$544.input;
    if (JAM.call(v16218.val, v16218, [], JAM.policy.p3) != b$$544.lastVal) {
      try {
        var v3790 = $$$3.datepicker;
        var v10545 = $$$3.datepicker;
        var v3791 = JAM.call(v10545._get, v10545, [b$$544, "dateFormat"], JAM.policy.p3);
        var v10546;
        if (b$$544.input) {
          var v16219 = b$$544.input;
          v10546 = JAM.call(v16219.val, v16219, [], JAM.policy.p3);
        } else {
          v10546 = null;
        }
        var v3792 = v10546;
        var v10547 = $$$3.datepicker;
        var c$$440 = JAM.call(v3790.parseDate, v3790, [v3791, v3792, JAM.call(v10547._getFormatConfig, v10547, [b$$544], JAM.policy.p3)], JAM.policy.p3);
        if (c$$440) {
          var v20416 = $$$3.datepicker;
          JAM.call(v20416._setDateFromField, v20416, [b$$544], JAM.policy.p3);
          var v20417 = $$$3.datepicker;
          JAM.call(v20417._updateAlternate, v20417, [b$$544], JAM.policy.p3);
          var v16221 = $$$3.datepicker;
          JAM.call(v16221._updateDatepicker, v16221, [b$$544], JAM.policy.p3);
        }
      } catch (d$$333) {
        var v3794 = $$$3.datepicker;
        JAM.call(v3794.log, v3794, [d$$333], JAM.policy.p3);
      }
    }
    return!0;
  }
  function v1613(a$$572) {
    var v3796 = $$$3.datepicker;
    var b$$543 = JAM.call(v3796._getInst, v3796, [a$$572.target], JAM.policy.p3);
    var v10548 = $$$3.datepicker;
    if (JAM.call(v10548._get, v10548, [b$$543, "constrainInput"], JAM.policy.p3)) {
      var v3798 = $$$3.datepicker;
      var v10549 = $$$3.datepicker;
      var c$$439 = JAM.call(v3798._possibleChars, v3798, [JAM.call(v10549._get, v10549, [b$$543, "dateFormat"], JAM.policy.p3)], JAM.policy.p3);
      var v10550;
      if (a$$572.charCode == undefined$$1) {
        v10550 = a$$572.keyCode;
      } else {
        v10550 = a$$572.charCode;
      }
      var d$$332 = JAM.call(String.fromCharCode, String, [v10550], JAM.policy.p3);
      var v20419 = a$$572.ctrlKey;
      if (!v20419) {
        v20419 = a$$572.metaKey;
      }
      var v16223 = v20419;
      if (!v16223) {
        v16223 = d$$332 < " ";
      }
      var v10551 = v16223;
      if (!v10551) {
        v10551 = !c$$439;
      }
      var v3801 = v10551;
      if (!v3801) {
        v3801 = JAM.call(c$$439.indexOf, c$$439, [d$$332], JAM.policy.p3) > -1;
      }
      return v3801;
    }
    return;
  }
  function v1612(a$$571) {
    var v3803 = $$$3.datepicker;
    var b$$542 = JAM.call(v3803._getInst, v3803, [a$$571.target], JAM.policy.p3);
    var c$$438 = !0;
    var v3805 = b$$542.dpDiv;
    var d$$331 = JAM.call(v3805.is, v3805, [".ui-datepicker-rtl"], JAM.policy.p3);
    b$$542._keyEvent = !0;
    if ($$$3.datepicker._datepickerShowing) {
      switch(a$$571.keyCode) {
        case 9:
          var v10555 = $$$3.datepicker;
          JAM.call(v10555._hideDatepicker, v10555, [], JAM.policy.p3);
          c$$438 = !1;
          break;
        case 13:
          var e$$290 = JAM.call($$$3, null, ["td." + $$$3.datepicker._dayOverClass + ":not(." + $$$3.datepicker._currentClass + ")", b$$542.dpDiv], JAM.policy.p3);
          var v3808 = e$$290[0];
          if (v3808) {
            var v10557 = $$$3.datepicker;
            JAM.call(v10557._selectDay, v10557, [a$$571.target, b$$542.selectedMonth, b$$542.selectedYear, e$$290[0]], JAM.policy.p3);
          }
          var v3809 = $$$3.datepicker;
          var f$$139 = JAM.call(v3809._get, v3809, [b$$542, "onSelect"], JAM.policy.p3);
          if (f$$139) {
            var v3810 = $$$3.datepicker;
            var g$$163 = JAM.call(v3810._formatDate, v3810, [b$$542], JAM.policy.p3);
            var v10562;
            if (b$$542.input) {
              v10562 = b$$542.input[0];
            } else {
              v10562 = null;
            }
            JAM.call(f$$139.apply, f$$139, [v10562, [g$$163, b$$542]], JAM.policy.p3);
          } else {
            var v3813 = $$$3.datepicker;
            JAM.call(v3813._hideDatepicker, v3813, [], JAM.policy.p3);
          }
          return!1;
        case 27:
          var v3814 = $$$3.datepicker;
          JAM.call(v3814._hideDatepicker, v3814, [], JAM.policy.p3);
          break;
        case 33:
          var v3815 = $$$3.datepicker;
          var v3816 = a$$571.target;
          var v10563;
          if (a$$571.ctrlKey) {
            var v20423 = $$$3.datepicker;
            v10563 = -JAM.call(v20423._get, v20423, [b$$542, "stepBigMonths"], JAM.policy.p3);
          } else {
            var v20424 = $$$3.datepicker;
            v10563 = -JAM.call(v20424._get, v20424, [b$$542, "stepMonths"], JAM.policy.p3);
          }
          JAM.call(v3815._adjustDate, v3815, [v3816, v10563, "M"], JAM.policy.p3);
          break;
        case 34:
          var v3818 = $$$3.datepicker;
          var v3819 = a$$571.target;
          var v10564;
          if (a$$571.ctrlKey) {
            var v20425 = $$$3.datepicker;
            v10564 = +JAM.call(v20425._get, v20425, [b$$542, "stepBigMonths"], JAM.policy.p3);
          } else {
            var v20426 = $$$3.datepicker;
            v10564 = +JAM.call(v20426._get, v20426, [b$$542, "stepMonths"], JAM.policy.p3);
          }
          JAM.call(v3818._adjustDate, v3818, [v3819, v10564, "M"], JAM.policy.p3);
          break;
        case 35:
          var v16235 = a$$571.ctrlKey;
          if (!v16235) {
            v16235 = a$$571.metaKey;
          }
          var v10565 = v16235;
          if (v10565) {
            var v16236 = $$$3.datepicker;
            JAM.call(v16236._clearDate, v16236, [a$$571.target], JAM.policy.p3);
          }
          var v10566 = a$$571.ctrlKey;
          if (!v10566) {
            v10566 = a$$571.metaKey;
          }
          c$$438 = v10566;
          break;
        case 36:
          var v16239 = a$$571.ctrlKey;
          if (!v16239) {
            v16239 = a$$571.metaKey;
          }
          var v10567 = v16239;
          if (v10567) {
            var v16240 = $$$3.datepicker;
            JAM.call(v16240._gotoToday, v16240, [a$$571.target], JAM.policy.p3);
          }
          var v10568 = a$$571.ctrlKey;
          if (!v10568) {
            v10568 = a$$571.metaKey;
          }
          c$$438 = v10568;
          break;
        case 37:
          var v20429 = a$$571.ctrlKey;
          if (!v20429) {
            v20429 = a$$571.metaKey;
          }
          var v16243 = v20429;
          if (v16243) {
            var v20430 = $$$3.datepicker;
            var v20431 = a$$571.target;
            var v24839;
            if (d$$331) {
              v24839 = 1;
            } else {
              v24839 = -1;
            }
            JAM.call(v20430._adjustDate, v20430, [v20431, v24839, "D"], JAM.policy.p3);
          }
          var v16244 = a$$571.ctrlKey;
          if (!v16244) {
            v16244 = a$$571.metaKey;
          }
          c$$438 = v16244;
          var v10569 = a$$571.originalEvent.altKey;
          if (v10569) {
            var v16246 = $$$3.datepicker;
            var v16247 = a$$571.target;
            var v20434;
            if (a$$571.ctrlKey) {
              var v26802 = $$$3.datepicker;
              v20434 = -JAM.call(v26802._get, v26802, [b$$542, "stepBigMonths"], JAM.policy.p3);
            } else {
              var v26803 = $$$3.datepicker;
              v20434 = -JAM.call(v26803._get, v26803, [b$$542, "stepMonths"], JAM.policy.p3);
            }
            JAM.call(v16246._adjustDate, v16246, [v16247, v20434, "M"], JAM.policy.p3);
          }
          break;
        case 38:
          var v16249 = a$$571.ctrlKey;
          if (!v16249) {
            v16249 = a$$571.metaKey;
          }
          var v10570 = v16249;
          if (v10570) {
            var v16250 = $$$3.datepicker;
            JAM.call(v16250._adjustDate, v16250, [a$$571.target, -7, "D"], JAM.policy.p3);
          }
          var v10571 = a$$571.ctrlKey;
          if (!v10571) {
            v10571 = a$$571.metaKey;
          }
          c$$438 = v10571;
          break;
        case 39:
          var v20436 = a$$571.ctrlKey;
          if (!v20436) {
            v20436 = a$$571.metaKey;
          }
          var v16253 = v20436;
          if (v16253) {
            var v20437 = $$$3.datepicker;
            var v20438 = a$$571.target;
            var v24844;
            if (d$$331) {
              v24844 = -1;
            } else {
              v24844 = 1;
            }
            JAM.call(v20437._adjustDate, v20437, [v20438, v24844, "D"], JAM.policy.p3);
          }
          var v16254 = a$$571.ctrlKey;
          if (!v16254) {
            v16254 = a$$571.metaKey;
          }
          c$$438 = v16254;
          var v10572 = a$$571.originalEvent.altKey;
          if (v10572) {
            var v16256 = $$$3.datepicker;
            var v16257 = a$$571.target;
            var v20441;
            if (a$$571.ctrlKey) {
              var v26804 = $$$3.datepicker;
              v20441 = +JAM.call(v26804._get, v26804, [b$$542, "stepBigMonths"], JAM.policy.p3);
            } else {
              var v26805 = $$$3.datepicker;
              v20441 = +JAM.call(v26805._get, v26805, [b$$542, "stepMonths"], JAM.policy.p3);
            }
            JAM.call(v16256._adjustDate, v16256, [v16257, v20441, "M"], JAM.policy.p3);
          }
          break;
        case 40:
          var v16259 = a$$571.ctrlKey;
          if (!v16259) {
            v16259 = a$$571.metaKey;
          }
          var v10573 = v16259;
          if (v10573) {
            var v16260 = $$$3.datepicker;
            JAM.call(v16260._adjustDate, v16260, [a$$571.target, 7, "D"], JAM.policy.p3);
          }
          var v10574 = a$$571.ctrlKey;
          if (!v10574) {
            v10574 = a$$571.metaKey;
          }
          c$$438 = v10574;
          break;
        default:
          c$$438 = !1;
      }
    } else {
      var v3822;
      var v16263 = a$$571.keyCode == 36;
      if (v16263) {
        v16263 = a$$571.ctrlKey;
      }
      if (v16263) {
        var v10575 = $$$3.datepicker;
        v3822 = JAM.call(v10575._showDatepicker, v10575, [this], JAM.policy.p3);
      } else {
        v3822 = c$$438 = !1;
      }
      v3822;
    }
    if (c$$438) {
      JAM.call(a$$571.preventDefault, a$$571, [], JAM.policy.p3);
      JAM.call(a$$571.stopPropagation, a$$571, [], JAM.policy.p3);
    }
    return;
  }
  function v1611(a$$570, b$$541) {
    var c$$437 = JAM.call(this._getInst, this, [a$$570], JAM.policy.p3);
    var v16264 = c$$437;
    if (v16264) {
      v16264 = !c$$437.inline;
    }
    var v10577 = v16264;
    if (v10577) {
      JAM.call(this._setDateFromField, this, [c$$437, b$$541], JAM.policy.p3);
    }
    var v10578;
    if (c$$437) {
      v10578 = JAM.call(this._getDate, this, [c$$437], JAM.policy.p3);
    } else {
      v10578 = null;
    }
    return v10578;
  }
  function v1610(a$$569, b$$540) {
    var c$$436 = JAM.call(this._getInst, this, [a$$569], JAM.policy.p3);
    if (c$$436) {
      JAM.call(this._setDate, this, [c$$436, b$$540], JAM.policy.p3);
      JAM.call(this._updateDatepicker, this, [c$$436], JAM.policy.p3);
      JAM.call(this._updateAlternate, this, [c$$436], JAM.policy.p3);
    }
    return;
  }
  function v1609(a$$568) {
    var b$$539 = JAM.call(this._getInst, this, [a$$568], JAM.policy.p3);
    if (b$$539) {
      JAM.call(this._updateDatepicker, this, [b$$539], JAM.policy.p3);
    }
    return;
  }
  function v1608(a$$567, b$$538, c$$435) {
    JAM.call(this._optionDatepicker, this, [a$$567, b$$538, c$$435], JAM.policy.p3);
    return;
  }
  function v1607(a$$566, b$$537, c$$434) {
    var d$$330 = JAM.call(this._getInst, this, [a$$566], JAM.policy.p3);
    var v10579 = arguments.length == 2;
    if (v10579) {
      v10579 = typeof b$$537 == "string";
    }
    if (v10579) {
      var v3824;
      if (b$$537 == "defaults") {
        v3824 = JAM.call($$$3.extend, $$$3, [{}, $$$3.datepicker._defaults], JAM.policy.p3);
      } else {
        var v10581;
        if (d$$330) {
          var v16268;
          if (b$$537 == "all") {
            v16268 = JAM.call($$$3.extend, $$$3, [{}, d$$330.settings], JAM.policy.p3);
          } else {
            v16268 = JAM.call(this._get, this, [d$$330, b$$537], JAM.policy.p3);
          }
          v10581 = v16268;
        } else {
          v10581 = null;
        }
        v3824 = v10581;
      }
      return v3824;
    }
    var e$$289 = b$$537 || {};
    var v3826 = typeof b$$537 == "string";
    if (v3826) {
      e$$289 = {};
      JAM.set(e$$289, b$$537, c$$434, JAM.policy.p2);
    }
    if (d$$330) {
      var v3827 = this._curInst == d$$330;
      if (v3827) {
        JAM.call(this._hideDatepicker, this, [], JAM.policy.p3);
      }
      var f$$138 = JAM.call(this._getDateDatepicker, this, [a$$566, !0], JAM.policy.p3);
      var g$$162 = JAM.call(this._getMinMaxDate, this, [d$$330, "min"], JAM.policy.p3);
      var h$$133 = JAM.call(this._getMinMaxDate, this, [d$$330, "max"], JAM.policy.p3);
      JAM.call(extendRemove, null, [d$$330.settings, e$$289], JAM.policy.p3);
      var v30053 = g$$162 !== null;
      if (v30053) {
        v30053 = e$$289.dateFormat !== undefined$$1;
      }
      var v29698 = v30053;
      if (v29698) {
        v29698 = e$$289.minDate === undefined$$1;
      }
      var v29096 = v29698;
      if (v29096) {
        var v29699 = d$$330.settings;
        var v31235 = JAM.call(this._formatDate, this, [d$$330, g$$162], JAM.policy.p3);
        v29699.minDate = v31235;
      }
      var v29700 = h$$133 !== null;
      if (v29700) {
        v29700 = e$$289.dateFormat !== undefined$$1;
      }
      var v29097 = v29700;
      if (v29097) {
        v29097 = e$$289.maxDate === undefined$$1;
      }
      var v28195 = v29097;
      if (v28195) {
        var v29098 = d$$330.settings;
        var v31236 = JAM.call(this._formatDate, this, [d$$330, h$$133], JAM.policy.p3);
        v29098.maxDate = v31236;
      }
      JAM.call(this._attachments, this, [JAM.call($$$3, null, [a$$566], JAM.policy.p3), d$$330], JAM.policy.p3);
      JAM.call(this._autoSize, this, [d$$330], JAM.policy.p3);
      JAM.call(this._setDate, this, [d$$330, f$$138], JAM.policy.p3);
      JAM.call(this._updateAlternate, this, [d$$330], JAM.policy.p3);
      JAM.call(this._updateDatepicker, this, [d$$330], JAM.policy.p3);
    }
    return;
  }
  function v1606(a$$565) {
    try {
      return JAM.call($$$3.data, $$$3, [a$$565, PROP_NAME], JAM.policy.p3);
    } catch (b$$536) {
      throw "Missing instance data for this datepicker";
    }
    return;
  }
  function v1605(a$$564) {
    if (!a$$564) {
      return!1;
    }
    var b$$535 = 0;
    var v3831 = b$$535 < this._disabledInputs.length;
    for (;v3831;) {
      if (this._disabledInputs[b$$535] == a$$564) {
        return!0;
      }
      b$$535 = b$$535 + 1;
      v3831 = b$$535 < this._disabledInputs.length;
    }
    return!1;
  }
  function v1604(a$$563) {
    function v1603(b$$534) {
      var v3832;
      if (b$$534 == a$$563) {
        v3832 = null;
      } else {
        v3832 = b$$534;
      }
      return v3832;
    }
    function v1602() {
      this.disabled = !0;
      return;
    }
    var b$$533 = JAM.call($$$3, null, [a$$563], JAM.policy.p3);
    var c$$433 = JAM.call($$$3.data, $$$3, [a$$563, PROP_NAME], JAM.policy.p3);
    if (!JAM.call(b$$533.hasClass, b$$533, [this.markerClassName], JAM.policy.p3)) {
      return;
    }
    var v3834 = a$$563.nodeName;
    var d$$329 = JAM.call(v3834.toLowerCase, v3834, [], JAM.policy.p3);
    if (d$$329 == "input") {
      a$$563.disabled = !0;
      var v26807 = c$$433.trigger;
      var v24848 = JAM.call(v26807.filter, v26807, ["button"], JAM.policy.p3);
      var v20447 = JAM.call(v24848.each, v24848, [v1602], JAM.policy.p3);
      var v16273 = JAM.call(v20447.end, v20447, [], JAM.policy.p3);
      var v10590 = JAM.call(v16273.filter, v16273, ["img"], JAM.policy.p3);
      JAM.call(v10590.css, v10590, [{opacity:"0.5", cursor:"default"}], JAM.policy.p3);
    } else {
      var v10592 = d$$329 == "div";
      if (!v10592) {
        v10592 = d$$329 == "span";
      }
      if (v10592) {
        var e$$288 = JAM.call(b$$533.children, b$$533, ["." + this._inlineClass], JAM.policy.p3);
        var v10594 = JAM.call(e$$288.children, e$$288, [], JAM.policy.p3);
        JAM.call(v10594.addClass, v10594, ["ui-state-disabled"], JAM.policy.p3);
        var v10595 = JAM.call(e$$288.find, e$$288, ["select.ui-datepicker-month, select.ui-datepicker-year"], JAM.policy.p3);
        JAM.call(v10595.attr, v10595, ["disabled", "disabled"], JAM.policy.p3);
      }
    }
    var v31237 = JAM.call($$$3.map, $$$3, [this._disabledInputs, v1603], JAM.policy.p3);
    this._disabledInputs = v31237;
    JAM.set(this._disabledInputs, this._disabledInputs.length, a$$563, JAM.policy.p2);
    return;
  }
  function v1601(a$$562) {
    function v1600(b$$532) {
      var v3838;
      if (b$$532 == a$$562) {
        v3838 = null;
      } else {
        v3838 = b$$532;
      }
      return v3838;
    }
    function v1599() {
      this.disabled = !1;
      return;
    }
    var b$$531 = JAM.call($$$3, null, [a$$562], JAM.policy.p3);
    var c$$432 = JAM.call($$$3.data, $$$3, [a$$562, PROP_NAME], JAM.policy.p3);
    if (!JAM.call(b$$531.hasClass, b$$531, [this.markerClassName], JAM.policy.p3)) {
      return;
    }
    var v3840 = a$$562.nodeName;
    var d$$328 = JAM.call(v3840.toLowerCase, v3840, [], JAM.policy.p3);
    if (d$$328 == "input") {
      a$$562.disabled = !1;
      var v26808 = c$$432.trigger;
      var v24849 = JAM.call(v26808.filter, v26808, ["button"], JAM.policy.p3);
      var v20448 = JAM.call(v24849.each, v24849, [v1599], JAM.policy.p3);
      var v16277 = JAM.call(v20448.end, v20448, [], JAM.policy.p3);
      var v10601 = JAM.call(v16277.filter, v16277, ["img"], JAM.policy.p3);
      JAM.call(v10601.css, v10601, [{opacity:"1.0", cursor:""}], JAM.policy.p3);
    } else {
      var v10603 = d$$328 == "div";
      if (!v10603) {
        v10603 = d$$328 == "span";
      }
      if (v10603) {
        var e$$287 = JAM.call(b$$531.children, b$$531, ["." + this._inlineClass], JAM.policy.p3);
        var v10605 = JAM.call(e$$287.children, e$$287, [], JAM.policy.p3);
        JAM.call(v10605.removeClass, v10605, ["ui-state-disabled"], JAM.policy.p3);
        var v10606 = JAM.call(e$$287.find, e$$287, ["select.ui-datepicker-month, select.ui-datepicker-year"], JAM.policy.p3);
        JAM.call(v10606.removeAttr, v10606, ["disabled"], JAM.policy.p3);
      }
    }
    var v31238 = JAM.call($$$3.map, $$$3, [this._disabledInputs, v1600], JAM.policy.p3);
    this._disabledInputs = v31238;
    return;
  }
  function v1598(a$$561) {
    var b$$530 = JAM.call($$$3, null, [a$$561], JAM.policy.p3);
    var c$$431 = JAM.call($$$3.data, $$$3, [a$$561, PROP_NAME], JAM.policy.p3);
    if (!JAM.call(b$$530.hasClass, b$$530, [this.markerClassName], JAM.policy.p3)) {
      return;
    }
    var v3846 = a$$561.nodeName;
    var d$$327 = JAM.call(v3846.toLowerCase, v3846, [], JAM.policy.p3);
    JAM.call($$$3.removeData, $$$3, [a$$561, PROP_NAME], JAM.policy.p3);
    var v10608;
    if (d$$327 == "input") {
      var v24850 = c$$431.append;
      JAM.call(v24850.remove, v24850, [], JAM.policy.p3);
      var v24851 = c$$431.trigger;
      JAM.call(v24851.remove, v24851, [], JAM.policy.p3);
      var v28196 = JAM.call(b$$530.removeClass, b$$530, [this.markerClassName], JAM.policy.p3);
      var v26809 = JAM.call(v28196.unbind, v28196, ["focus", this._showDatepicker], JAM.policy.p3);
      var v24852 = JAM.call(v26809.unbind, v26809, ["keydown", this._doKeyDown], JAM.policy.p3);
      var v20449 = JAM.call(v24852.unbind, v24852, ["keypress", this._doKeyPress], JAM.policy.p3);
      v10608 = JAM.call(v20449.unbind, v20449, ["keyup", this._doKeyUp], JAM.policy.p3);
    } else {
      var v20451 = d$$327 == "div";
      if (!v20451) {
        v20451 = d$$327 == "span";
      }
      var v16280 = v20451;
      if (v16280) {
        var v20452 = JAM.call(b$$530.removeClass, b$$530, [this.markerClassName], JAM.policy.p3);
        v16280 = JAM.call(v20452.empty, v20452, [], JAM.policy.p3);
      }
      v10608 = v16280;
    }
    v10608;
    return;
  }
  function v1597(a$$560, b$$529, c$$430, d$$326, e$$286) {
    var f$$137 = this._dialogInst;
    if (!f$$137) {
      this.uuid = this.uuid + 1;
      var g$$161 = "dp" + this.uuid;
      var v31239 = JAM.call($$$3, null, ['<input type="text" id="' + g$$161 + '" style="position: absolute; top: -100px; width: 0px;"/>'], JAM.policy.p3);
      this._dialogInput = v31239;
      var v26812 = this._dialogInput;
      JAM.call(v26812.keydown, v26812, [this._doKeyDown], JAM.policy.p3);
      var v24856 = JAM.call($$$3, null, ["body"], JAM.policy.p3);
      JAM.call(v24856.append, v24856, [this._dialogInput], JAM.policy.p3);
      var v31240 = JAM.call(this._newInst, this, [this._dialogInput, !1], JAM.policy.p3);
      f$$137 = this._dialogInst = v31240;
      f$$137.settings = {};
      JAM.call($$$3.data, $$$3, [this._dialogInput[0], PROP_NAME, f$$137], JAM.policy.p3);
    }
    JAM.call(extendRemove, null, [f$$137.settings, d$$326 || {}], JAM.policy.p3);
    var v20457;
    var v26814 = b$$529;
    if (v26814) {
      v26814 = b$$529.constructor == Date;
    }
    if (v26814) {
      v20457 = JAM.call(this._formatDate, this, [f$$137, b$$529], JAM.policy.p3);
    } else {
      v20457 = b$$529;
    }
    b$$529 = v20457;
    var v16283 = this._dialogInput;
    JAM.call(v16283.val, v16283, [b$$529], JAM.policy.p3);
    var v10611;
    if (e$$286) {
      var v16284;
      if (e$$286.length) {
        v16284 = e$$286;
      } else {
        v16284 = [e$$286.pageX, e$$286.pageY];
      }
      v10611 = v16284;
    } else {
      v10611 = null;
    }
    this._pos = v10611;
    if (!this._pos) {
      var h$$132 = document.documentElement.clientWidth;
      var i$$188 = document.documentElement.clientHeight;
      var v3851 = document.documentElement.scrollLeft;
      if (!v3851) {
        v3851 = document.body.scrollLeft;
      }
      var j$$96 = v3851;
      var v3852 = document.documentElement.scrollTop;
      if (!v3852) {
        v3852 = document.body.scrollTop;
      }
      var k$$65 = v3852;
      this._pos = [h$$132 / 2 - 100 + j$$96, i$$188 / 2 - 150 + k$$65];
    }
    var v29702 = this._dialogInput;
    var v29100 = JAM.call(v29702.css, v29702, ["left", this._pos[0] + 20 + "px"], JAM.policy.p3);
    JAM.call(v29100.css, v29100, ["top", this._pos[1] + "px"], JAM.policy.p3);
    f$$137.settings.onSelect = c$$430;
    this._inDialog = !0;
    var v26815 = this.dpDiv;
    JAM.call(v26815.addClass, v26815, [this._dialogClass], JAM.policy.p3);
    JAM.call(this._showDatepicker, this, [this._dialogInput[0]], JAM.policy.p3);
    var v20461 = $$$3.blockUI;
    if (v20461) {
      JAM.call($$$3.blockUI, $$$3, [this.dpDiv], JAM.policy.p3);
    }
    JAM.call($$$3.data, $$$3, [this._dialogInput[0], PROP_NAME, f$$137], JAM.policy.p3);
    return this;
  }
  function v1596(a$$557, b$$528) {
    function v1595(a$$559, c$$429) {
      return JAM.call(this._get, this, [b$$528, c$$429], JAM.policy.p3);
    }
    function v1594(a$$558, c$$428, d$$325) {
      JAM.set(b$$528.settings, c$$428, d$$325, JAM.policy.p2);
      return;
    }
    var c$$427 = JAM.call($$$3, null, [a$$557], JAM.policy.p3);
    if (JAM.call(c$$427.hasClass, c$$427, [this.markerClassName], JAM.policy.p3)) {
      return;
    }
    var v29705 = JAM.call(c$$427.addClass, c$$427, [this.markerClassName], JAM.policy.p3);
    var v29103 = JAM.call(v29705.append, v29705, [b$$528.dpDiv], JAM.policy.p3);
    var v28200 = JAM.call(v29103.bind, v29103, ["setData.datepicker", v1594], JAM.policy.p3);
    JAM.call(v28200.bind, v28200, ["getData.datepicker", v1595], JAM.policy.p3);
    JAM.call($$$3.data, $$$3, [a$$557, PROP_NAME, b$$528], JAM.policy.p3);
    JAM.call(this._setDate, this, [b$$528, JAM.call(this._getDefaultDate, this, [b$$528], JAM.policy.p3), !0], JAM.policy.p3);
    JAM.call(this._updateDatepicker, this, [b$$528], JAM.policy.p3);
    JAM.call(this._updateAlternate, this, [b$$528], JAM.policy.p3);
    var v16288 = b$$528.settings.disabled;
    if (v16288) {
      JAM.call(this._disableDatepicker, this, [a$$557], JAM.policy.p3);
    }
    var v10622 = b$$528.dpDiv;
    JAM.call(v10622.css, v10622, ["display", "block"], JAM.policy.p3);
    return;
  }
  function v1593(a$$555) {
    function v1592(a$$556) {
      var b$$527 = 0;
      var c$$426 = 0;
      var d$$324 = 0;
      var v3859 = d$$324 < a$$556.length;
      for (;v3859;) {
        var v3858 = a$$556[d$$324].length > b$$527;
        if (v3858) {
          b$$527 = a$$556[d$$324].length;
          c$$426 = d$$324;
        }
        d$$324 = d$$324 + 1;
        v3859 = d$$324 < a$$556.length;
      }
      return c$$426;
    }
    var v10626 = JAM.call(this._get, this, [a$$555, "autoSize"], JAM.policy.p3);
    if (v10626) {
      v10626 = !a$$555.inline;
    }
    if (v10626) {
      var b$$526 = JAM.new(Date, [2009, 11, 20], JAM.policy.p3);
      var c$$425 = JAM.call(this._get, this, [a$$555, "dateFormat"], JAM.policy.p3);
      if (JAM.call(c$$425.match, c$$425, [/[DM]/], JAM.policy.p3)) {
        var d$$323 = v1592;
        var v24861;
        if (JAM.call(c$$425.match, c$$425, [/MM/], JAM.policy.p3)) {
          v24861 = "monthNames";
        } else {
          v24861 = "monthNamesShort";
        }
        JAM.call(b$$526.setMonth, b$$526, [JAM.call(d$$323, null, [JAM.call(this._get, this, [a$$555, v24861], JAM.policy.p3)], JAM.policy.p3)], JAM.policy.p3);
        var v28201;
        if (JAM.call(c$$425.match, c$$425, [/DD/], JAM.policy.p3)) {
          v28201 = "dayNames";
        } else {
          v28201 = "dayNamesShort";
        }
        JAM.call(b$$526.setDate, b$$526, [JAM.call(d$$323, null, [JAM.call(this._get, this, [a$$555, v28201], JAM.policy.p3)], JAM.policy.p3) + 20 - JAM.call(b$$526.getDay, b$$526, [], JAM.policy.p3)], JAM.policy.p3);
      }
      var v3861 = a$$555.input;
      JAM.call(v3861.attr, v3861, ["size", JAM.call(this._formatDate, this, [a$$555, b$$526], JAM.policy.p3).length], JAM.policy.p3);
    }
    return;
  }
  function v1591(a$$554, b$$525) {
    function v1590() {
      var v10630;
      var v20466 = $$$3.datepicker._datepickerShowing;
      if (v20466) {
        v20466 = $$$3.datepicker._lastInput == a$$554[0];
      }
      if (v20466) {
        var v16295 = $$$3.datepicker;
        v10630 = JAM.call(v16295._hideDatepicker, v16295, [], JAM.policy.p3);
      } else {
        var v16296;
        var v24866 = $$$3.datepicker._datepickerShowing;
        if (v24866) {
          v24866 = $$$3.datepicker._lastInput != a$$554[0];
        }
        if (v24866) {
          var v24867 = $$$3.datepicker;
          JAM.call(v24867._hideDatepicker, v24867, [], JAM.policy.p3);
          var v24868 = $$$3.datepicker;
          v16296 = JAM.call(v24868._showDatepicker, v24868, [a$$554[0]], JAM.policy.p3);
        } else {
          var v20467 = $$$3.datepicker;
          v16296 = JAM.call(v20467._showDatepicker, v20467, [a$$554[0]], JAM.policy.p3);
        }
        v10630 = v16296;
      }
      v10630;
      return!1;
    }
    var c$$424 = JAM.call(this._get, this, [b$$525, "appendText"], JAM.policy.p3);
    var d$$322 = JAM.call(this._get, this, [b$$525, "isRTL"], JAM.policy.p3);
    var v20470 = b$$525.append;
    if (v20470) {
      var v24870 = b$$525.append;
      JAM.call(v24870.remove, v24870, [], JAM.policy.p3);
    }
    if (c$$424) {
      var v26826 = b$$525;
      var v31241 = JAM.call($$$3, null, ['<span class="' + this._appendClass + '">' + c$$424 + "</span>"], JAM.policy.p3);
      v26826.append = v31241;
      var v28204;
      if (d$$322) {
        v28204 = "before";
      } else {
        v28204 = "after";
      }
      JAM.call(a$$554[v28204], a$$554, [b$$525.append], JAM.policy.p3);
    }
    JAM.call(a$$554.unbind, a$$554, ["focus", this._showDatepicker], JAM.policy.p3);
    var v10631 = b$$525.trigger;
    if (v10631) {
      var v16299 = b$$525.trigger;
      JAM.call(v16299.remove, v16299, [], JAM.policy.p3);
    }
    var e$$285 = JAM.call(this._get, this, [b$$525, "showOn"], JAM.policy.p3);
    var v10632 = e$$285 == "focus";
    if (!v10632) {
      v10632 = e$$285 == "both";
    }
    var v3864 = v10632;
    if (v3864) {
      JAM.call(a$$554.focus, a$$554, [this._showDatepicker], JAM.policy.p3);
    }
    var v10634 = e$$285 == "button";
    if (!v10634) {
      v10634 = e$$285 == "both";
    }
    if (v10634) {
      var f$$136 = JAM.call(this._get, this, [b$$525, "buttonText"], JAM.policy.p3);
      var g$$160 = JAM.call(this._get, this, [b$$525, "buttonImage"], JAM.policy.p3);
      var v16302 = b$$525;
      var v24871;
      if (JAM.call(this._get, this, [b$$525, "buttonImageOnly"], JAM.policy.p3)) {
        var v28205 = JAM.call($$$3, null, ["<img/>"], JAM.policy.p3);
        var v26829 = JAM.call(v28205.addClass, v28205, [this._triggerClass], JAM.policy.p3);
        v24871 = JAM.call(v26829.attr, v26829, [{src:g$$160, alt:f$$136, title:f$$136}], JAM.policy.p3);
      } else {
        var v28207 = JAM.call($$$3, null, ['<button type="button"></button>'], JAM.policy.p3);
        var v26831 = JAM.call(v28207.addClass, v28207, [this._triggerClass], JAM.policy.p3);
        var v28209;
        if (g$$160 == "") {
          v28209 = f$$136;
        } else {
          var v29106 = JAM.call($$$3, null, ["<img/>"], JAM.policy.p3);
          v28209 = JAM.call(v29106.attr, v29106, [{src:g$$160, alt:f$$136, title:f$$136}], JAM.policy.p3);
        }
        v24871 = JAM.call(v26831.html, v26831, [v28209], JAM.policy.p3);
      }
      var v31242 = JAM.call($$$3, null, [v24871], JAM.policy.p3);
      v16302.trigger = v31242;
      var v20472;
      if (d$$322) {
        v20472 = "before";
      } else {
        v20472 = "after";
      }
      JAM.call(a$$554[v20472], a$$554, [b$$525.trigger], JAM.policy.p3);
      var v10635 = b$$525.trigger;
      JAM.call(v10635.click, v10635, [v1590], JAM.policy.p3);
    }
    return;
  }
  function v1589(a$$551, b$$524) {
    function v1588(a$$553, c$$423) {
      return JAM.call(this._get, this, [b$$524, c$$423], JAM.policy.p3);
    }
    function v1587(a$$552, c$$422, d$$321) {
      JAM.set(b$$524.settings, c$$422, d$$321, JAM.policy.p2);
      return;
    }
    var c$$421 = JAM.call($$$3, null, [a$$551], JAM.policy.p3);
    var v10636 = b$$524;
    var v31243 = JAM.call($$$3, null, [[]], JAM.policy.p3);
    v10636.append = v31243;
    var v10637 = b$$524;
    var v31244 = JAM.call($$$3, null, [[]], JAM.policy.p3);
    v10637.trigger = v31244;
    if (JAM.call(c$$421.hasClass, c$$421, [this.markerClassName], JAM.policy.p3)) {
      return;
    }
    JAM.call(this._attachments, this, [c$$421, b$$524], JAM.policy.p3);
    var v29708 = JAM.call(c$$421.addClass, c$$421, [this.markerClassName], JAM.policy.p3);
    var v29109 = JAM.call(v29708.keydown, v29708, [this._doKeyDown], JAM.policy.p3);
    var v28210 = JAM.call(v29109.keypress, v29109, [this._doKeyPress], JAM.policy.p3);
    var v26834 = JAM.call(v28210.keyup, v28210, [this._doKeyUp], JAM.policy.p3);
    var v24872 = JAM.call(v26834.bind, v26834, ["setData.datepicker", v1587], JAM.policy.p3);
    JAM.call(v24872.bind, v24872, ["getData.datepicker", v1588], JAM.policy.p3);
    JAM.call(this._autoSize, this, [b$$524], JAM.policy.p3);
    JAM.call($$$3.data, $$$3, [a$$551, PROP_NAME, b$$524], JAM.policy.p3);
    var v10639 = b$$524.settings.disabled;
    if (v10639) {
      JAM.call(this._disableDatepicker, this, [a$$551], JAM.policy.p3);
    }
    return;
  }
  function v1586(a$$550, b$$523) {
    var v3868 = a$$550[0].id;
    var c$$420 = JAM.call(v3868.replace, v3868, [/([^A-Za-z0-9_-])/g, "\\\\$1"], JAM.policy.p3);
    var v10641;
    if (b$$523) {
      v10641 = JAM.call(bindHover, null, [JAM.call($$$3, null, ['<div class="' + this._inlineClass + ' ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all"></div>'], JAM.policy.p3)], JAM.policy.p3);
    } else {
      v10641 = this.dpDiv;
    }
    return{id:c$$420, input:a$$550, selectedDay:0, selectedMonth:0, selectedYear:0, drawMonth:0, drawYear:0, inline:b$$523, dpDiv:v10641};
  }
  function v1585(target$$27, settings) {
    var inlineSettings = null;
    var attrName;
    for (attrName in this._defaults) {
      var attrValue = JAM.call(target$$27.getAttribute, target$$27, ["date:" + attrName], JAM.policy.p3);
      if (attrValue) {
        inlineSettings = inlineSettings || {};
        try {
          if (JAM.isEval(eval)) {
            var v31245 = eval("introspect(JAM.policy.pFull) { " + attrValue + " }")
          } else {
            var v31245 = JAM.call(eval, null, [attrValue])
          }
          JAM.set(inlineSettings, attrName, v31245, JAM.policy.p2);
        } catch (err) {
          JAM.set(inlineSettings, attrName, attrValue, JAM.policy.p2);
        }
      }
    }
    var v3872 = target$$27.nodeName;
    var nodeName = JAM.call(v3872.toLowerCase, v3872, [], JAM.policy.p3);
    var v3873 = nodeName == "div";
    if (!v3873) {
      v3873 = nodeName == "span";
    }
    var inline = v3873;
    var v3874 = target$$27.id;
    if (!v3874) {
      this.uuid = this.uuid + 1;
      target$$27.id = "dp" + this.uuid;
    }
    var inst = JAM.call(this._newInst, this, [JAM.call($$$3, null, [target$$27], JAM.policy.p3), inline], JAM.policy.p3);
    var v10644 = inst;
    var v31246 = JAM.call($$$3.extend, $$$3, [{}, settings || {}, inlineSettings || {}], JAM.policy.p3);
    v10644.settings = v31246;
    var v10645;
    if (nodeName == "input") {
      v10645 = JAM.call(this._connectDatepicker, this, [target$$27, inst], JAM.policy.p3);
    } else {
      var v16310 = inline;
      if (v16310) {
        v16310 = JAM.call(this._inlineDatepicker, this, [target$$27, inst], JAM.policy.p3);
      }
      v10645 = v16310;
    }
    v10645;
    return;
  }
  function v1584(a$$549) {
    JAM.call(extendRemove, null, [this._defaults, a$$549 || {}], JAM.policy.p3);
    return this;
  }
  function v1583() {
    return this.dpDiv;
  }
  function v1582() {
    var v3876 = this.debug;
    if (v3876) {
      var v10648 = console.log;
      JAM.call(v10648.apply, v10648, ["", arguments], JAM.policy.p3);
    }
    return;
  }
  function Datepicker() {
    this.debug = !1;
    this._curInst = null;
    this._keyEvent = !1;
    this._disabledInputs = [];
    this._datepickerShowing = !1;
    this._inDialog = !1;
    this._mainDivId = "ui-datepicker-div";
    this._inlineClass = "ui-datepicker-inline";
    this._appendClass = "ui-datepicker-append";
    this._triggerClass = "ui-datepicker-trigger";
    this._dialogClass = "ui-datepicker-dialog";
    this._disableClass = "ui-datepicker-disabled";
    this._unselectableClass = "ui-datepicker-unselectable";
    this._currentClass = "ui-datepicker-current-day";
    this._dayOverClass = "ui-datepicker-days-cell-over";
    this.regional = [];
    this.regional[""] = {closeText:"Done", prevText:"Prev", nextText:"Next", currentText:"Today", monthNames:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], monthNamesShort:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], dayNames:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], dayNamesShort:["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], dayNamesMin:["Su", 
    "Mo", "Tu", "We", "Th", "Fr", "Sa"], weekHeader:"Wk", dateFormat:"mm/dd/yy", firstDay:0, isRTL:!1, showMonthAfterYear:!1, yearSuffix:""};
    this._defaults = {showOn:"focus", showAnim:"fadeIn", showOptions:{}, defaultDate:null, appendText:"", buttonText:"...", buttonImage:"", buttonImageOnly:!1, hideIfNoPrevNext:!1, navigationAsDateFormat:!1, gotoCurrent:!1, changeMonth:!1, changeYear:!1, yearRange:"c-10:c+10", showOtherMonths:!1, selectOtherMonths:!1, showWeek:!1, calculateWeek:this.iso8601Week, shortYearCutoff:"+10", minDate:null, maxDate:null, duration:"fast", beforeShowDay:null, beforeShow:null, onSelect:null, onChangeMonthYear:null, 
    onClose:null, numberOfMonths:1, showCurrentAtPos:0, stepMonths:1, stepBigMonths:12, altField:"", altFormat:"", constrainInput:!0, showButtonPanel:!1, autoSize:!1, disabled:!1};
    JAM.call($$$3.extend, $$$3, [this._defaults, this.regional[""]], JAM.policy.p3);
    var v31247 = JAM.call(bindHover, null, [JAM.call($$$3, null, ['<div id="' + this._mainDivId + '" class="ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all"></div>'], JAM.policy.p3)], JAM.policy.p3);
    this.dpDiv = v31247;
    return;
  }
  function bindHover(a$$545) {
    function v1581(c$$418) {
      var v3877 = JAM.call($$$3, null, [c$$418.target], JAM.policy.p3);
      var d$$320 = JAM.call(v3877.closest, v3877, [b$$521], JAM.policy.p3);
      var v16315 = $$$3.datepicker;
      var v20491;
      if (instActive.inline) {
        v20491 = JAM.call(a$$545.parent, a$$545, [], JAM.policy.p3)[0];
      } else {
        v20491 = instActive.input[0];
      }
      var v10651 = JAM.call(v16315._isDisabledDatepicker, v16315, [v20491], JAM.policy.p3);
      if (!v10651) {
        v10651 = !d$$320.length;
      }
      if (v10651) {
        return;
      }
      var v24879 = JAM.call(d$$320.parents, d$$320, [".ui-datepicker-calendar"], JAM.policy.p3);
      var v20492 = JAM.call(v24879.find, v24879, ["a"], JAM.policy.p3);
      JAM.call(v20492.removeClass, v20492, ["ui-state-hover"], JAM.policy.p3);
      JAM.call(d$$320.addClass, d$$320, ["ui-state-hover"], JAM.policy.p3);
      var v16319 = JAM.call(d$$320.hasClass, d$$320, ["ui-datepicker-prev"], JAM.policy.p3);
      if (v16319) {
        JAM.call(d$$320.addClass, d$$320, ["ui-datepicker-prev-hover"], JAM.policy.p3);
      }
      var v10652 = JAM.call(d$$320.hasClass, d$$320, ["ui-datepicker-next"], JAM.policy.p3);
      if (v10652) {
        JAM.call(d$$320.addClass, d$$320, ["ui-datepicker-next-hover"], JAM.policy.p3);
      }
      return;
    }
    function v1580(a$$546) {
      var v3879 = JAM.call($$$3, null, [a$$546.target], JAM.policy.p3);
      var c$$417 = JAM.call(v3879.closest, v3879, [b$$521], JAM.policy.p3);
      if (!c$$417.length) {
        return;
      }
      JAM.call(c$$417.removeClass, c$$417, ["ui-state-hover ui-datepicker-prev-hover ui-datepicker-next-hover"], JAM.policy.p3);
      return;
    }
    var b$$521 = "button, .ui-datepicker-prev, .ui-datepicker-next, .ui-datepicker-calendar td a";
    var v3881 = JAM.call(a$$545.bind, a$$545, ["mouseout", v1580], JAM.policy.p3);
    return JAM.call(v3881.bind, v3881, ["mouseover", v1581], JAM.policy.p3);
  }
  function extendRemove(a$$547, b$$522) {
    JAM.call($$$3.extend, $$$3, [a$$547, b$$522], JAM.policy.p3);
    var c$$419;
    for (c$$419 in b$$522) {
      var v10655 = b$$522[c$$419] == null;
      if (!v10655) {
        v10655 = b$$522[c$$419] == undefined$$1;
      }
      if (v10655) {
        JAM.set(a$$547, c$$419, b$$522[c$$419], JAM.policy.p2);
      }
    }
    return a$$547;
  }
  JAM.call($$$3.extend, $$$3, [$$$3.ui, {datepicker:{version:"1.8.24"}}], JAM.policy.p3);
  var PROP_NAME = "datepicker";
  var v3885 = JAM.new(Date, [], JAM.policy.p3);
  var dpuuid = JAM.call(v3885.getTime, v3885, [], JAM.policy.p3);
  var instActive;
  JAM.call($$$3.extend, $$$3, [Datepicker.prototype, {markerClassName:"hasDatepicker", maxRows:4, log:v1582, _widgetDatepicker:v1583, setDefaults:v1584, _attachDatepicker:v1585, _newInst:v1586, _connectDatepicker:v1589, _attachments:v1591, _autoSize:v1593, _inlineDatepicker:v1596, _dialogDatepicker:v1597, _destroyDatepicker:v1598, _enableDatepicker:v1601, _disableDatepicker:v1604, _isDisabledDatepicker:v1605, _getInst:v1606, _optionDatepicker:v1607, _changeDatepicker:v1608, _refreshDatepicker:v1609, 
  _setDateDatepicker:v1610, _getDateDatepicker:v1611, _doKeyDown:v1612, _doKeyPress:v1613, _doKeyUp:v1614, _showDatepicker:v1617, _updateDatepicker:v1619, _getBorders:v1620, _checkOffset:v1621, _findPos:v1622, _hideDatepicker:v1624, _tidyDialog:v1625, _checkExternalClick:v1626, _adjustDate:v1627, _gotoToday:v1628, _selectMonthYear:v1629, _selectDay:v1630, _clearDate:v1631, _selectDate:v1632, _updateAlternate:v1634, noWeekends:v1635, iso8601Week:v1636, parseDate:v1640, ATOM:"yy-mm-dd", COOKIE:"D, dd M yy", 
  ISO_8601:"yy-mm-dd", RFC_822:"D, d M y", RFC_850:"DD, dd-M-y", RFC_1036:"D, d M y", RFC_1123:"D, d M yy", RFC_2822:"D, d M yy", RSS:"D, d M y", TICKS:"!", TIMESTAMP:"@", W3C:"yy-mm-dd", _ticksTo1970:(718685 + JAM.call(Math.floor, Math, [492.5], JAM.policy.p3) - JAM.call(Math.floor, Math, [19.7], JAM.policy.p3) + JAM.call(Math.floor, Math, [4.925], JAM.policy.p3)) * 24 * 60 * 60 * 1E7, formatDate:v1641, _possibleChars:v1642, _get:v1643, _setDateFromField:v1644, _getDefaultDate:v1645, _determineDate:v1646, 
  _daylightSavingAdjust:v1647, _setDate:v1648, _getDate:v1649, _attachHandlers:v1658, _generateHTML:v1659, _generateMonthYearHeader:v1661, _adjustInstDate:v1662, _restrictMinMax:v1663, _notifyChange:v1664, _getNumberOfMonths:v1665, _getMinMaxDate:v1666, _getDaysInMonth:v1667, _getFirstDayOfMonth:v1668, _canAdjustMonth:v1669, _isInRange:v1670, _getFormatConfig:v1671, _formatDate:v1672}], JAM.policy.p3);
  $$$3.fn.datepicker = v1674;
  var v26843 = $$$3;
  var v31248 = JAM.new(Datepicker, [], JAM.policy.p3);
  v26843.datepicker = v31248;
  $$$3.datepicker.initialized = !1;
  var v20493 = $$$3.datepicker;
  var v24881 = JAM.new(Date, [], JAM.policy.p3);
  var v31249 = JAM.call(v24881.getTime, v24881, [], JAM.policy.p3);
  v20493.uuid = v31249;
  $$$3.datepicker.version = "1.8.24";
  JAM.set(window, "DP_jQuery_" + dpuuid, $$$3, JAM.policy.p2);
  return;
}
function v1579(a$$540, b$$509) {
  function v1578() {
    function v1577() {
      var v10658 = JAM.call(a$$540, null, [this], JAM.policy.p3);
      return JAM.call(v10658.button, v10658, ["widget"], JAM.policy.p3)[0];
    }
    var v16324 = this.element;
    JAM.call(v16324.removeClass, v16324, ["ui-buttonset"], JAM.policy.p3);
    var v26844 = this.buttons;
    var v24882 = JAM.call(v26844.map, v26844, [v1577], JAM.policy.p3);
    var v20494 = JAM.call(v24882.removeClass, v24882, ["ui-corner-left ui-corner-right"], JAM.policy.p3);
    var v16325 = JAM.call(v20494.end, v20494, [], JAM.policy.p3);
    JAM.call(v16325.button, v16325, ["destroy"], JAM.policy.p3);
    var v10659 = a$$540.Widget.prototype.destroy;
    JAM.call(v10659.call, v10659, [this], JAM.policy.p3);
    return;
  }
  function v1576() {
    function v1575() {
      var v10660 = JAM.call(a$$540, null, [this], JAM.policy.p3);
      return JAM.call(v10660.button, v10660, ["widget"], JAM.policy.p3)[0];
    }
    var v10661 = this.element;
    var b$$520 = JAM.call(v10661.css, v10661, ["direction"], JAM.policy.p3) === "rtl";
    var v30946 = this.element;
    var v30892 = JAM.call(v30946.find, v30946, [this.options.items], JAM.policy.p3);
    var v30813 = JAM.call(v30892.filter, v30892, [":ui-button"], JAM.policy.p3);
    var v30677 = JAM.call(v30813.button, v30813, ["refresh"], JAM.policy.p3);
    var v30535 = JAM.call(v30677.end, v30677, [], JAM.policy.p3);
    var v30320 = JAM.call(v30535.not, v30535, [":ui-button"], JAM.policy.p3);
    var v30062 = JAM.call(v30320.button, v30320, [], JAM.policy.p3);
    var v29711 = JAM.call(v30062.end, v30062, [], JAM.policy.p3);
    var v29112 = JAM.call(v29711.map, v29711, [v1575], JAM.policy.p3);
    var v28215 = JAM.call(v29112.removeClass, v29112, ["ui-corner-all ui-corner-left ui-corner-right"], JAM.policy.p3);
    var v26845 = JAM.call(v28215.filter, v28215, [":first"], JAM.policy.p3);
    var v28216;
    if (b$$520) {
      v28216 = "ui-corner-right";
    } else {
      v28216 = "ui-corner-left";
    }
    var v24883 = JAM.call(v26845.addClass, v26845, [v28216], JAM.policy.p3);
    var v20496 = JAM.call(v24883.end, v24883, [], JAM.policy.p3);
    var v16327 = JAM.call(v20496.filter, v20496, [":last"], JAM.policy.p3);
    var v20497;
    if (b$$520) {
      v20497 = "ui-corner-left";
    } else {
      v20497 = "ui-corner-right";
    }
    var v10662 = JAM.call(v16327.addClass, v16327, [v20497], JAM.policy.p3);
    var v3889 = JAM.call(v10662.end, v10662, [], JAM.policy.p3);
    var v31250 = JAM.call(v3889.end, v3889, [], JAM.policy.p3);
    this.buttons = v31250;
    return;
  }
  function v1574(b$$519, c$$416) {
    var v10663 = b$$519 === "disabled";
    if (v10663) {
      var v16329 = this.buttons;
      JAM.call(v16329.button, v16329, ["option", b$$519, c$$416], JAM.policy.p3);
    }
    var v10664 = a$$540.Widget.prototype._setOption;
    JAM.call(v10664.apply, v10664, [this, arguments], JAM.policy.p3);
    return;
  }
  function v1573() {
    JAM.call(this.refresh, this, [], JAM.policy.p3);
    return;
  }
  function v1572() {
    var v3890 = this.element;
    JAM.call(v3890.addClass, v3890, ["ui-buttonset"], JAM.policy.p3);
    return;
  }
  function v1571() {
    if (this.type === "input") {
      var v3891 = this.options.label;
      if (v3891) {
        var v10667 = this.element;
        JAM.call(v10667.val, v10667, [this.options.label], JAM.policy.p3);
      }
      return;
    }
    var v3893 = this.buttonElement;
    var b$$518 = JAM.call(v3893.removeClass, v3893, [i$$186], JAM.policy.p3);
    var v20499 = JAM.call(a$$540, null, ["<span></span>", this.element[0].ownerDocument], JAM.policy.p3);
    var v16332 = JAM.call(v20499.addClass, v20499, ["ui-button-text"], JAM.policy.p3);
    var v10669 = JAM.call(v16332.html, v16332, [this.options.label], JAM.policy.p3);
    var v3894 = JAM.call(v10669.appendTo, v10669, [JAM.call(b$$518.empty, b$$518, [], JAM.policy.p3)], JAM.policy.p3);
    var c$$415 = JAM.call(v3894.text, v3894, [], JAM.policy.p3);
    var d$$319 = this.options.icons;
    var v3896 = d$$319.primary;
    if (v3896) {
      v3896 = d$$319.secondary;
    }
    var e$$284 = v3896;
    var f$$135 = [];
    var v10671;
    var v20501 = d$$319.primary;
    if (!v20501) {
      v20501 = d$$319.secondary;
    }
    if (v20501) {
      var v26848 = this.options.text;
      if (v26848) {
        var v29712;
        if (e$$284) {
          v29712 = "s";
        } else {
          var v30063;
          if (d$$319.primary) {
            v30063 = "-primary";
          } else {
            v30063 = "-secondary";
          }
          v29712 = v30063;
        }
        JAM.call(f$$135.push, f$$135, ["ui-button-text-icon" + v29712], JAM.policy.p3);
      }
      var v26849 = d$$319.primary;
      if (v26849) {
        JAM.call(b$$518.prepend, b$$518, ["<span class='ui-button-icon-primary ui-icon " + d$$319.primary + "'></span>"], JAM.policy.p3);
      }
      var v24886 = d$$319.secondary;
      if (v24886) {
        JAM.call(b$$518.append, b$$518, ["<span class='ui-button-icon-secondary ui-icon " + d$$319.secondary + "'></span>"], JAM.policy.p3);
      }
      var v20502 = this.options.text;
      if (!v20502) {
        var v28222;
        if (e$$284) {
          v28222 = "ui-button-icons-only";
        } else {
          v28222 = "ui-button-icon-only";
        }
        JAM.call(f$$135.push, f$$135, [v28222], JAM.policy.p3);
        var v26852 = this.hasTitle;
        if (!v26852) {
          v26852 = JAM.call(b$$518.attr, b$$518, ["title", c$$415], JAM.policy.p3);
        }
        v20502 = v26852;
      }
      v10671 = v20502;
    } else {
      v10671 = JAM.call(f$$135.push, f$$135, ["ui-button-text-only"], JAM.policy.p3);
    }
    v10671;
    JAM.call(b$$518.addClass, b$$518, [JAM.call(f$$135.join, f$$135, [" "], JAM.policy.p3)], JAM.policy.p3);
    return;
  }
  function v1570() {
    function v1569() {
      var v3897;
      var v16335 = JAM.call(a$$540, null, [this], JAM.policy.p3);
      if (JAM.call(v16335.is, v16335, [":checked"], JAM.policy.p3)) {
        var v20503 = JAM.call(a$$540, null, [this], JAM.policy.p3);
        var v16336 = JAM.call(v20503.button, v20503, ["widget"], JAM.policy.p3);
        var v10673 = JAM.call(v16336.addClass, v16336, ["ui-state-active"], JAM.policy.p3);
        v3897 = JAM.call(v10673.attr, v10673, ["aria-pressed", "true"], JAM.policy.p3);
      } else {
        var v20504 = JAM.call(a$$540, null, [this], JAM.policy.p3);
        var v16337 = JAM.call(v20504.button, v20504, ["widget"], JAM.policy.p3);
        var v10674 = JAM.call(v16337.removeClass, v16337, ["ui-state-active"], JAM.policy.p3);
        v3897 = JAM.call(v10674.attr, v10674, ["aria-pressed", "false"], JAM.policy.p3);
      }
      v3897;
      return;
    }
    var v3898 = this.element;
    var b$$517 = JAM.call(v3898.is, v3898, [":disabled"], JAM.policy.p3);
    var v10676 = b$$517 !== this.options.disabled;
    if (v10676) {
      JAM.call(this._setOption, this, ["disabled", b$$517], JAM.policy.p3);
    }
    var v10677;
    if (this.type === "radio") {
      var v16339 = JAM.call(k$$64, null, [this.element[0]], JAM.policy.p3);
      v10677 = JAM.call(v16339.each, v16339, [v1569], JAM.policy.p3);
    } else {
      var v16340 = this.type === "checkbox";
      if (v16340) {
        var v20509;
        var v26853 = this.element;
        if (JAM.call(v26853.is, v26853, [":checked"], JAM.policy.p3)) {
          var v26854 = this.buttonElement;
          var v24890 = JAM.call(v26854.addClass, v26854, ["ui-state-active"], JAM.policy.p3);
          v20509 = JAM.call(v24890.attr, v24890, ["aria-pressed", "true"], JAM.policy.p3);
        } else {
          var v26855 = this.buttonElement;
          var v24891 = JAM.call(v26855.removeClass, v26855, ["ui-state-active"], JAM.policy.p3);
          v20509 = JAM.call(v24891.attr, v24891, ["aria-pressed", "false"], JAM.policy.p3);
        }
        v16340 = v20509;
      }
      v10677 = v16340;
    }
    v10677;
    return;
  }
  function v1568(b$$516, c$$414) {
    var v3899 = a$$540.Widget.prototype._setOption;
    JAM.call(v3899.apply, v3899, [this, arguments], JAM.policy.p3);
    if (b$$516 === "disabled") {
      var v3900;
      if (c$$414) {
        var v10679 = this.element;
        v3900 = JAM.call(v10679.propAttr, v10679, ["disabled", !0], JAM.policy.p3);
      } else {
        var v10681 = this.element;
        v3900 = JAM.call(v10681.propAttr, v10681, ["disabled", !1], JAM.policy.p3);
      }
      v3900;
      return;
    }
    JAM.call(this._resetButton, this, [], JAM.policy.p3);
    return;
  }
  function v1567() {
    var v20510 = this.element;
    JAM.call(v20510.removeClass, v20510, ["ui-helper-hidden-accessible"], JAM.policy.p3);
    var v28224 = this.buttonElement;
    var v26856 = JAM.call(v28224.removeClass, v28224, [g$$159 + " " + h$$130 + " " + i$$186], JAM.policy.p3);
    var v24893 = JAM.call(v26856.removeAttr, v26856, ["role"], JAM.policy.p3);
    var v20511 = JAM.call(v24893.removeAttr, v24893, ["aria-pressed"], JAM.policy.p3);
    var v26857 = this.buttonElement;
    var v24894 = JAM.call(v26857.find, v26857, [".ui-button-text"], JAM.policy.p3);
    JAM.call(v20511.html, v20511, [JAM.call(v24894.html, v24894, [], JAM.policy.p3)], JAM.policy.p3);
    var v16343 = this.hasTitle;
    if (!v16343) {
      var v20513 = this.buttonElement;
      JAM.call(v20513.removeAttr, v20513, ["title"], JAM.policy.p3);
    }
    var v10683 = a$$540.Widget.prototype.destroy;
    JAM.call(v10683.call, v10683, [this], JAM.policy.p3);
    return;
  }
  function v1566() {
    return this.buttonElement;
  }
  function v1565() {
    var v3902;
    var v16345 = this.element;
    if (JAM.call(v16345.is, v16345, [":checkbox"], JAM.policy.p3)) {
      v3902 = this.type = "checkbox";
    } else {
      var v10684;
      var v20516 = this.element;
      if (JAM.call(v20516.is, v20516, [":radio"], JAM.policy.p3)) {
        v10684 = this.type = "radio";
      } else {
        var v16346;
        var v24895 = this.element;
        if (JAM.call(v24895.is, v24895, ["input"], JAM.policy.p3)) {
          v16346 = this.type = "input";
        } else {
          v16346 = this.type = "button";
        }
        v10684 = v16346;
      }
      v3902 = v10684;
    }
    v3902;
    var v10686 = this.type === "checkbox";
    if (!v10686) {
      v10686 = this.type === "radio";
    }
    if (v10686) {
      var v10687 = this.element;
      var v3903 = JAM.call(v10687.parents, v10687, [], JAM.policy.p3);
      var a$$544 = JAM.call(v3903.filter, v3903, [":last"], JAM.policy.p3);
      var v16351 = this.element;
      var b$$515 = "label[for='" + JAM.call(v16351.attr, v16351, ["id"], JAM.policy.p3) + "']";
      var v31251 = JAM.call(a$$544.find, a$$544, [b$$515], JAM.policy.p3);
      this.buttonElement = v31251;
      var v16352 = this.buttonElement.length;
      if (!v16352) {
        var v26858;
        if (a$$544.length) {
          v26858 = JAM.call(a$$544.siblings, a$$544, [], JAM.policy.p3);
        } else {
          var v28226 = this.element;
          v26858 = JAM.call(v28226.siblings, v28226, [], JAM.policy.p3);
        }
        a$$544 = v26858;
        var v31252 = JAM.call(a$$544.filter, a$$544, [b$$515], JAM.policy.p3);
        this.buttonElement = v31252;
        var v24896 = this.buttonElement.length;
        if (!v24896) {
          var v31253 = JAM.call(a$$544.find, a$$544, [b$$515], JAM.policy.p3);
          this.buttonElement = v31253;
        }
      }
      var v10689 = this.element;
      JAM.call(v10689.addClass, v10689, ["ui-helper-hidden-accessible"], JAM.policy.p3);
      var v3905 = this.element;
      var c$$413 = JAM.call(v3905.is, v3905, [":checked"], JAM.policy.p3);
      if (c$$413) {
        var v16353 = this.buttonElement;
        JAM.call(v16353.addClass, v16353, ["ui-state-active"], JAM.policy.p3);
      }
      var v10690 = this.buttonElement;
      JAM.call(v10690.attr, v10690, ["aria-pressed", c$$413], JAM.policy.p3);
    } else {
      this.buttonElement = this.element;
    }
    return;
  }
  function v1564() {
    function v1563(b$$514) {
      var v3907 = b$$514.keyCode === a$$540.ui.keyCode.SPACE;
      if (v3907) {
        var v10693 = JAM.call(a$$540, null, [this], JAM.policy.p3);
        JAM.call(v10693.click, v10693, [], JAM.policy.p3);
      }
      return;
    }
    function v1562() {
      var v3908 = JAM.call(a$$540, null, [this], JAM.policy.p3);
      JAM.call(v3908.removeClass, v3908, ["ui-state-active"], JAM.policy.p3);
      return;
    }
    function v1561(b$$513) {
      if (h$$131.disabled) {
        return!1;
      }
      var v10694 = b$$513.keyCode == a$$540.ui.keyCode.SPACE;
      if (!v10694) {
        v10694 = b$$513.keyCode == a$$540.ui.keyCode.ENTER;
      }
      var v3910 = v10694;
      if (v3910) {
        var v10695 = JAM.call(a$$540, null, [this], JAM.policy.p3);
        JAM.call(v10695.addClass, v10695, ["ui-state-active"], JAM.policy.p3);
      }
      return;
    }
    function v1560() {
      if (h$$131.disabled) {
        return!1;
      }
      var v3912 = JAM.call(a$$540, null, [this], JAM.policy.p3);
      JAM.call(v3912.removeClass, v3912, ["ui-state-active"], JAM.policy.p3);
      return;
    }
    function v1559() {
      function v1558() {
        c$$410 = null;
        return;
      }
      if (h$$131.disabled) {
        return!1;
      }
      var v16360 = JAM.call(a$$540, null, [this], JAM.policy.p3);
      JAM.call(v16360.addClass, v16360, ["ui-state-active"], JAM.policy.p3);
      c$$410 = this;
      var v10696 = JAM.call(a$$540, null, [document], JAM.policy.p3);
      JAM.call(v10696.one, v10696, ["mouseup", v1558], JAM.policy.p3);
      return;
    }
    function v1557() {
      function v1556() {
        var v10697 = JAM.call(a$$540, null, [this], JAM.policy.p3);
        return JAM.call(v10697.button, v10697, ["widget"], JAM.policy.p3)[0];
      }
      var v10698 = h$$131.disabled;
      if (!v10698) {
        v10698 = f$$134;
      }
      if (v10698) {
        return!1;
      }
      var v10699 = JAM.call(a$$540, null, [this], JAM.policy.p3);
      JAM.call(v10699.addClass, v10699, ["ui-state-active"], JAM.policy.p3);
      var v10700 = b$$512.buttonElement;
      JAM.call(v10700.attr, v10700, ["aria-pressed", "true"], JAM.policy.p3);
      var c$$412 = b$$512.element[0];
      var v20523 = JAM.call(k$$64, null, [c$$412], JAM.policy.p3);
      var v16362 = JAM.call(v20523.not, v20523, [c$$412], JAM.policy.p3);
      var v10701 = JAM.call(v16362.map, v16362, [v1556], JAM.policy.p3);
      var v3917 = JAM.call(v10701.removeClass, v10701, ["ui-state-active"], JAM.policy.p3);
      JAM.call(v3917.attr, v3917, ["aria-pressed", "false"], JAM.policy.p3);
      return;
    }
    function v1555() {
      var v10702 = h$$131.disabled;
      if (!v10702) {
        v10702 = f$$134;
      }
      if (v10702) {
        return!1;
      }
      var v10703 = JAM.call(a$$540, null, [this], JAM.policy.p3);
      JAM.call(v10703.toggleClass, v10703, ["ui-state-active"], JAM.policy.p3);
      var v10704 = b$$512.buttonElement;
      JAM.call(v10704.attr, v10704, ["aria-pressed", b$$512.element[0].checked], JAM.policy.p3);
      return;
    }
    function v1554(a$$543) {
      if (h$$131.disabled) {
        return;
      }
      var v10706 = d$$317 !== a$$543.pageX;
      if (!v10706) {
        v10706 = e$$282 !== a$$543.pageY;
      }
      if (v10706) {
        f$$134 = !0;
      }
      return;
    }
    function v1553(a$$542) {
      if (h$$131.disabled) {
        return;
      }
      f$$134 = !1;
      d$$317 = a$$542.pageX;
      e$$282 = a$$542.pageY;
      return;
    }
    function v1552() {
      if (f$$134) {
        return;
      }
      JAM.call(b$$512.refresh, b$$512, [], JAM.policy.p3);
      return;
    }
    function v1551() {
      var v3922 = b$$512.buttonElement;
      JAM.call(v3922.removeClass, v3922, [m$$43], JAM.policy.p3);
      return;
    }
    function v1550() {
      var v3923 = b$$512.buttonElement;
      JAM.call(v3923.addClass, v3923, [m$$43], JAM.policy.p3);
      return;
    }
    function v1549(a$$541) {
      var v3924 = h$$131.disabled;
      if (v3924) {
        JAM.call(a$$541.preventDefault, a$$541, [], JAM.policy.p3);
        JAM.call(a$$541.stopImmediatePropagation, a$$541, [], JAM.policy.p3);
      }
      return;
    }
    function v1548() {
      if (h$$131.disabled) {
        return;
      }
      var v3926 = JAM.call(a$$540, null, [this], JAM.policy.p3);
      JAM.call(v3926.removeClass, v3926, [l$$72], JAM.policy.p3);
      return;
    }
    function v1547() {
      if (h$$131.disabled) {
        return;
      }
      var v10707 = JAM.call(a$$540, null, [this], JAM.policy.p3);
      JAM.call(v10707.addClass, v10707, ["ui-state-hover"], JAM.policy.p3);
      var v10708 = this === c$$410;
      if (v10708) {
        var v16368 = JAM.call(a$$540, null, [this], JAM.policy.p3);
        JAM.call(v16368.addClass, v16368, ["ui-state-active"], JAM.policy.p3);
      }
      return;
    }
    var v26861 = this.element;
    var v24899 = JAM.call(v26861.closest, v26861, ["form"], JAM.policy.p3);
    var v20525 = JAM.call(v24899.unbind, v24899, ["reset.button"], JAM.policy.p3);
    JAM.call(v20525.bind, v20525, ["reset.button", j$$95], JAM.policy.p3);
    var v20526;
    if (typeof this.options.disabled != "boolean") {
      var v24900 = this.options;
      var v29118 = this.element;
      v20526 = v24900.disabled = !!JAM.call(v29118.propAttr, v29118, ["disabled"], JAM.policy.p3);
    } else {
      var v24901 = this.element;
      v20526 = JAM.call(v24901.propAttr, v24901, ["disabled", this.options.disabled], JAM.policy.p3);
    }
    v20526;
    JAM.call(this._determineButtonType, this, [], JAM.policy.p3);
    var v20527 = this.buttonElement;
    this.hasTitle = !!JAM.call(v20527.attr, v20527, ["title"], JAM.policy.p3);
    var b$$512 = this;
    var h$$131 = this.options;
    var v3928 = this.type === "checkbox";
    if (!v3928) {
      v3928 = this.type === "radio";
    }
    var i$$187 = v3928;
    var v10713;
    if (i$$187) {
      v10713 = "";
    } else {
      v10713 = " ui-state-active";
    }
    var l$$72 = "ui-state-hover" + v10713;
    var m$$43 = "ui-state-focus";
    var v28230 = h$$131.label === null;
    if (v28230) {
      var v29120 = h$$131;
      var v29715 = this.buttonElement;
      var v31254 = JAM.call(v29715.html, v29715, [], JAM.policy.p3);
      v29120.label = v31254;
    }
    var v30322 = this.buttonElement;
    var v30065 = JAM.call(v30322.addClass, v30322, [g$$159], JAM.policy.p3);
    var v29716 = JAM.call(v30065.attr, v30065, ["role", "button"], JAM.policy.p3);
    var v29121 = JAM.call(v29716.bind, v29716, ["mouseenter.button", v1547], JAM.policy.p3);
    var v28231 = JAM.call(v29121.bind, v29121, ["mouseleave.button", v1548], JAM.policy.p3);
    JAM.call(v28231.bind, v28231, ["click.button", v1549], JAM.policy.p3);
    var v28232 = this.element;
    var v26865 = JAM.call(v28232.bind, v28232, ["focus.button", v1550], JAM.policy.p3);
    JAM.call(v26865.bind, v26865, ["blur.button", v1551], JAM.policy.p3);
    if (i$$187) {
      var v28233 = this.element;
      JAM.call(v28233.bind, v28233, ["change.button", v1552], JAM.policy.p3);
      var v29122 = this.buttonElement;
      var v28234 = JAM.call(v29122.bind, v29122, ["mousedown.button", v1553], JAM.policy.p3);
      JAM.call(v28234.bind, v28234, ["mouseup.button", v1554], JAM.policy.p3);
    }
    var v20528;
    if (this.type === "checkbox") {
      var v24904 = this.buttonElement;
      v20528 = JAM.call(v24904.bind, v24904, ["click.button", v1555], JAM.policy.p3);
    } else {
      var v24905;
      if (this.type === "radio") {
        var v26867 = this.buttonElement;
        v24905 = JAM.call(v26867.bind, v26867, ["click.button", v1557], JAM.policy.p3);
      } else {
        var v30066 = this.buttonElement;
        var v29717 = JAM.call(v30066.bind, v30066, ["mousedown.button", v1559], JAM.policy.p3);
        var v29123 = JAM.call(v29717.bind, v29717, ["mouseup.button", v1560], JAM.policy.p3);
        var v28236 = JAM.call(v29123.bind, v29123, ["keydown.button", v1561], JAM.policy.p3);
        JAM.call(v28236.bind, v28236, ["keyup.button", v1562], JAM.policy.p3);
        var v29124 = this.buttonElement;
        var v28237 = JAM.call(v29124.is, v29124, ["a"], JAM.policy.p3);
        if (v28237) {
          var v29125 = this.buttonElement;
          v28237 = JAM.call(v29125.keyup, v29125, [v1563], JAM.policy.p3);
        }
        v24905 = v28237;
      }
      v20528 = v24905;
    }
    v20528;
    JAM.call(this._setOption, this, ["disabled", h$$131.disabled], JAM.policy.p3);
    JAM.call(this._resetButton, this, [], JAM.policy.p3);
    return;
  }
  function k$$64(b$$511) {
    function v1545() {
      return!this.form;
    }
    var c$$411 = b$$511.name;
    var d$$318 = b$$511.form;
    var e$$283 = JAM.call(a$$540, null, [[]], JAM.policy.p3);
    if (c$$411) {
      var v16371;
      if (d$$318) {
        var v20529 = JAM.call(a$$540, null, [d$$318], JAM.policy.p3);
        v16371 = e$$283 = JAM.call(v20529.find, v20529, ["[name='" + c$$411 + "']"], JAM.policy.p3);
      } else {
        var v20531 = JAM.call(a$$540, null, ["[name='" + c$$411 + "']", b$$511.ownerDocument], JAM.policy.p3);
        v16371 = e$$283 = JAM.call(v20531.filter, v20531, [v1545], JAM.policy.p3);
      }
      v16371;
    }
    return e$$283;
  }
  function j$$95() {
    function v1546() {
      JAM.call(b$$510.button, b$$510, ["refresh"], JAM.policy.p3);
      return;
    }
    var v3931 = JAM.call(a$$540, null, [this], JAM.policy.p3);
    var b$$510 = JAM.call(v3931.find, v3931, [":ui-button"], JAM.policy.p3);
    JAM.call(setTimeout, null, [v1546, 1], JAM.policy.p3);
    return;
  }
  var c$$410;
  var d$$317;
  var e$$282;
  var f$$134;
  var g$$159 = "ui-button ui-widget ui-state-default ui-corner-all";
  var h$$130 = "ui-state-hover ui-state-active ";
  var i$$186 = "ui-button-icons-only ui-button-icon-only ui-button-text-icons ui-button-text-icon-primary ui-button-text-icon-secondary ui-button-text-only";
  JAM.call(a$$540.widget, a$$540, ["ui.button", {options:{disabled:null, text:!0, label:null, icons:{primary:null, secondary:null}}, _create:v1564, _determineButtonType:v1565, widget:v1566, destroy:v1567, _setOption:v1568, refresh:v1570, _resetButton:v1571}], JAM.policy.p3);
  JAM.call(a$$540.widget, a$$540, ["ui.buttonset", {options:{items:":button, :submit, :reset, :checkbox, :radio, a, :data(button)"}, _create:v1572, _init:v1573, _setOption:v1574, refresh:v1576, destroy:v1578}], JAM.policy.p3);
  return;
}
function v1544(a$$534) {
  function v1543(a$$539) {
    JAM.call(this._trigger, this, ["selected", a$$539, {item:this.active}], JAM.policy.p3);
    return;
  }
  function v1542() {
    var v10717 = this.element;
    var v3933 = JAM.call(v10717.height, v10717, [], JAM.policy.p3);
    var v10718 = this.element;
    var v16374;
    if (a$$534.fn.prop) {
      v16374 = "prop";
    } else {
      v16374 = "attr";
    }
    return v3933 < JAM.call(v10718[v16374], v10718, ["scrollHeight"], JAM.policy.p3);
  }
  function v1541(b$$507) {
    function v1540() {
      var v24911 = JAM.call(a$$534, null, [this], JAM.policy.p3);
      var v3935 = JAM.call(v24911.offset, v24911, [], JAM.policy.p3).top - c$$409 + d$$316;
      var v10721 = JAM.call(a$$534, null, [this], JAM.policy.p3);
      var b$$508 = v3935 - JAM.call(v10721.height, v10721, [], JAM.policy.p3);
      var v3937 = b$$508 < 10;
      if (v3937) {
        v3937 = b$$508 > -10;
      }
      return v3937;
    }
    if (JAM.call(this.hasScroll, this, [], JAM.policy.p3)) {
      var v10722 = !this.active;
      if (!v10722) {
        v10722 = JAM.call(this.first, this, [], JAM.policy.p3);
      }
      if (v10722) {
        var v10723 = this.element;
        JAM.call(this.activate, this, [b$$507, JAM.call(v10723.children, v10723, [".ui-menu-item:last"], JAM.policy.p3)], JAM.policy.p3);
        return;
      }
      var v10724 = this.active;
      var c$$409 = JAM.call(v10724.offset, v10724, [], JAM.policy.p3).top;
      var v3941 = this.element;
      var d$$316 = JAM.call(v3941.height, v3941, [], JAM.policy.p3);
      var v10725 = this.element;
      var v3942 = JAM.call(v10725.children, v10725, [".ui-menu-item"], JAM.policy.p3);
      var e$$281 = JAM.call(v3942.filter, v3942, [v1540], JAM.policy.p3);
      var v10726 = e$$281.length;
      if (!v10726) {
        var v16378 = this.element;
        e$$281 = JAM.call(v16378.children, v16378, [".ui-menu-item:first"], JAM.policy.p3);
      }
      JAM.call(this.activate, this, [b$$507, e$$281], JAM.policy.p3);
    } else {
      var v16380 = this.element;
      var v10727 = JAM.call(v16380.children, v16380, [".ui-menu-item"], JAM.policy.p3);
      var v16381;
      var v24912 = !this.active;
      if (!v24912) {
        v24912 = JAM.call(this.first, this, [], JAM.policy.p3);
      }
      if (v24912) {
        v16381 = ":last";
      } else {
        v16381 = ":first";
      }
      JAM.call(this.activate, this, [b$$507, JAM.call(v10727.filter, v10727, [v16381], JAM.policy.p3)], JAM.policy.p3);
    }
    return;
  }
  function v1539(b$$505) {
    function v1538() {
      var v24913 = JAM.call(a$$534, null, [this], JAM.policy.p3);
      var v3945 = JAM.call(v24913.offset, v24913, [], JAM.policy.p3).top - c$$408 - d$$315;
      var v10730 = JAM.call(a$$534, null, [this], JAM.policy.p3);
      var b$$506 = v3945 + JAM.call(v10730.height, v10730, [], JAM.policy.p3);
      var v3947 = b$$506 < 10;
      if (v3947) {
        v3947 = b$$506 > -10;
      }
      return v3947;
    }
    if (JAM.call(this.hasScroll, this, [], JAM.policy.p3)) {
      var v10731 = !this.active;
      if (!v10731) {
        v10731 = JAM.call(this.last, this, [], JAM.policy.p3);
      }
      if (v10731) {
        var v10732 = this.element;
        JAM.call(this.activate, this, [b$$505, JAM.call(v10732.children, v10732, [".ui-menu-item:first"], JAM.policy.p3)], JAM.policy.p3);
        return;
      }
      var v10733 = this.active;
      var c$$408 = JAM.call(v10733.offset, v10733, [], JAM.policy.p3).top;
      var v3951 = this.element;
      var d$$315 = JAM.call(v3951.height, v3951, [], JAM.policy.p3);
      var v10734 = this.element;
      var v3952 = JAM.call(v10734.children, v10734, [".ui-menu-item"], JAM.policy.p3);
      var e$$280 = JAM.call(v3952.filter, v3952, [v1538], JAM.policy.p3);
      var v10735 = e$$280.length;
      if (!v10735) {
        var v16385 = this.element;
        e$$280 = JAM.call(v16385.children, v16385, [".ui-menu-item:last"], JAM.policy.p3);
      }
      JAM.call(this.activate, this, [b$$505, e$$280], JAM.policy.p3);
    } else {
      var v16387 = this.element;
      var v10736 = JAM.call(v16387.children, v16387, [".ui-menu-item"], JAM.policy.p3);
      var v16388;
      var v24914 = !this.active;
      if (!v24914) {
        v24914 = JAM.call(this.last, this, [], JAM.policy.p3);
      }
      if (v24914) {
        v16388 = ":first";
      } else {
        v16388 = ":last";
      }
      JAM.call(this.activate, this, [b$$505, JAM.call(v10736.filter, v10736, [v16388], JAM.policy.p3)], JAM.policy.p3);
    }
    return;
  }
  function v1537(a$$538, b$$504, c$$407) {
    if (!this.active) {
      var v10739 = this.element;
      JAM.call(this.activate, this, [c$$407, JAM.call(v10739.children, v10739, [b$$504], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    var v10740 = this.active;
    var v3957 = JAM.call(v10740[a$$538 + "All"], v10740, [".ui-menu-item"], JAM.policy.p3);
    var d$$314 = JAM.call(v3957.eq, v3957, [0], JAM.policy.p3);
    var v3958;
    if (d$$314.length) {
      v3958 = JAM.call(this.activate, this, [c$$407, d$$314], JAM.policy.p3);
    } else {
      var v16389 = this.element;
      v3958 = JAM.call(this.activate, this, [c$$407, JAM.call(v16389.children, v16389, [b$$504], JAM.policy.p3)], JAM.policy.p3);
    }
    v3958;
    return;
  }
  function v1536() {
    var v3959 = this.active;
    if (v3959) {
      var v20539 = this.active;
      v3959 = !JAM.call(v20539.nextAll, v20539, [".ui-menu-item"], JAM.policy.p3).length;
    }
    return v3959;
  }
  function v1535() {
    var v3960 = this.active;
    if (v3960) {
      var v20540 = this.active;
      v3960 = !JAM.call(v20540.prevAll, v20540, [".ui-menu-item"], JAM.policy.p3).length;
    }
    return v3960;
  }
  function v1534(a$$537) {
    JAM.call(this.move, this, ["prev", ".ui-menu-item:last", a$$537], JAM.policy.p3);
    return;
  }
  function v1533(a$$536) {
    JAM.call(this.move, this, ["next", ".ui-menu-item:first", a$$536], JAM.policy.p3);
    return;
  }
  function v1532() {
    if (!this.active) {
      return;
    }
    var v24915 = this.active;
    var v20541 = JAM.call(v24915.children, v24915, ["a"], JAM.policy.p3);
    var v16392 = JAM.call(v20541.removeClass, v20541, ["ui-state-hover"], JAM.policy.p3);
    JAM.call(v16392.removeAttr, v16392, ["id"], JAM.policy.p3);
    JAM.call(this._trigger, this, ["blur"], JAM.policy.p3);
    this.active = null;
    return;
  }
  function v1531(a$$535, b$$503) {
    JAM.call(this.deactivate, this, [], JAM.policy.p3);
    if (JAM.call(this.hasScroll, this, [], JAM.policy.p3)) {
      var v3962 = JAM.call(b$$503.offset, b$$503, [], JAM.policy.p3).top;
      var v16393 = this.element;
      var c$$406 = v3962 - JAM.call(v16393.offset, v16393, [], JAM.policy.p3).top;
      var v3964 = this.element;
      var d$$313 = JAM.call(v3964.scrollTop, v3964, [], JAM.policy.p3);
      var v3965 = this.element;
      var e$$279 = JAM.call(v3965.height, v3965, [], JAM.policy.p3);
      var v3966;
      if (c$$406 < 0) {
        var v10749 = this.element;
        v3966 = JAM.call(v10749.scrollTop, v10749, [d$$313 + c$$406], JAM.policy.p3);
      } else {
        var v10751 = c$$406 >= e$$279;
        if (v10751) {
          var v16394 = this.element;
          v10751 = JAM.call(v16394.scrollTop, v16394, [d$$313 + c$$406 - e$$279 + JAM.call(b$$503.height, b$$503, [], JAM.policy.p3)], JAM.policy.p3);
        }
        v3966 = v10751;
      }
      v3966;
    }
    var v24917 = JAM.call(b$$503.eq, b$$503, [0], JAM.policy.p3);
    var v20544 = JAM.call(v24917.children, v24917, ["a"], JAM.policy.p3);
    var v16396 = JAM.call(v20544.addClass, v20544, ["ui-state-hover"], JAM.policy.p3);
    var v10753 = JAM.call(v16396.attr, v16396, ["id", "ui-active-menuitem"], JAM.policy.p3);
    var v31255 = JAM.call(v10753.end, v10753, [], JAM.policy.p3);
    this.active = v31255;
    JAM.call(this._trigger, this, ["focus", a$$535, {item:b$$503}], JAM.policy.p3);
    return;
  }
  function v1530() {
    function v1529() {
      JAM.call(b$$502.deactivate, b$$502, [], JAM.policy.p3);
      return;
    }
    function v1528(c$$405) {
      var v10755 = JAM.call(a$$534, null, [this], JAM.policy.p3);
      JAM.call(b$$502.activate, b$$502, [c$$405, JAM.call(v10755.parent, v10755, [], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    var b$$502 = this;
    var v16397 = this.element;
    var v10756 = JAM.call(v16397.children, v16397, ["li:not(.ui-menu-item):has(a)"], JAM.policy.p3);
    var v3969 = JAM.call(v10756.addClass, v10756, ["ui-menu-item"], JAM.policy.p3);
    var c$$404 = JAM.call(v3969.attr, v3969, ["role", "menuitem"], JAM.policy.p3);
    var v20545 = JAM.call(c$$404.children, c$$404, ["a"], JAM.policy.p3);
    var v16398 = JAM.call(v20545.addClass, v20545, ["ui-corner-all"], JAM.policy.p3);
    var v10757 = JAM.call(v16398.attr, v16398, ["tabindex", -1], JAM.policy.p3);
    var v3970 = JAM.call(v10757.mouseenter, v10757, [v1528], JAM.policy.p3);
    JAM.call(v3970.mouseleave, v3970, [v1529], JAM.policy.p3);
    return;
  }
  function v1527() {
    function v1526(c$$403) {
      var v20546 = JAM.call(a$$534, null, [c$$403.target], JAM.policy.p3);
      if (!JAM.call(v20546.closest, v20546, [".ui-menu-item a"], JAM.policy.p3).length) {
        return;
      }
      JAM.call(c$$403.preventDefault, c$$403, [], JAM.policy.p3);
      JAM.call(b$$501.select, b$$501, [c$$403], JAM.policy.p3);
      return;
    }
    var b$$501 = this;
    var v20547 = this.element;
    var v16400 = JAM.call(v20547.addClass, v20547, ["ui-menu ui-widget ui-widget-content ui-corner-all"], JAM.policy.p3);
    var v10759 = JAM.call(v16400.attr, v16400, [{role:"listbox", "aria-activedescendant":"ui-active-menuitem"}], JAM.policy.p3);
    JAM.call(v10759.click, v10759, [v1526], JAM.policy.p3);
    JAM.call(this.refresh, this, [], JAM.policy.p3);
    return;
  }
  JAM.call(a$$534.widget, a$$534, ["ui.menu", {_create:v1527, refresh:v1530, activate:v1531, deactivate:v1532, next:v1533, previous:v1534, first:v1535, last:v1536, move:v1537, nextPage:v1539, previousPage:v1541, hasScroll:v1542, select:v1543}], JAM.policy.p3);
  return;
}
function v1525(a$$515, b$$485) {
  function v1524(b$$500, c$$402) {
    function v1523(a$$533) {
      var v16402 = a$$533.label;
      if (!v16402) {
        v16402 = a$$533.value;
      }
      var v10760 = v16402;
      if (!v10760) {
        v10760 = a$$533;
      }
      return JAM.call(d$$312.test, d$$312, [v10760], JAM.policy.p3);
    }
    var v10761 = a$$515.ui.autocomplete;
    var d$$312 = JAM.new(RegExp, [JAM.call(v10761.escapeRegex, v10761, [c$$402], JAM.policy.p3), "i"], JAM.policy.p3);
    return JAM.call(a$$515.grep, a$$515, [b$$500, v1523], JAM.policy.p3);
  }
  function v1522(a$$532) {
    return JAM.call(a$$532.replace, a$$532, [/[-[\]{}()*+?.,\\^$|#\s]/g, "\\$&"], JAM.policy.p3);
  }
  function v1521(a$$531, b$$499) {
    var v10762 = !this.isMultiLine;
    if (!v10762) {
      var v16406 = this.menu.element;
      v10762 = JAM.call(v16406.is, v16406, [":visible"], JAM.policy.p3);
    }
    if (v10762) {
      JAM.call(this._move, this, [a$$531, b$$499], JAM.policy.p3);
      JAM.call(b$$499.preventDefault, b$$499, [], JAM.policy.p3);
    }
    return;
  }
  function v1520() {
    return this.menu.element;
  }
  function v1519(a$$530, b$$498) {
    var v16408 = this.menu.element;
    if (!JAM.call(v16408.is, v16408, [":visible"], JAM.policy.p3)) {
      JAM.call(this.search, this, [null, b$$498], JAM.policy.p3);
      return;
    }
    var v20551 = this.menu;
    var v16409 = JAM.call(v20551.first, v20551, [], JAM.policy.p3);
    if (v16409) {
      v16409 = JAM.call(/^previous/.test, /^previous/, [a$$530], JAM.policy.p3);
    }
    var v10764 = v16409;
    if (!v10764) {
      var v20552 = this.menu;
      var v16410 = JAM.call(v20552.last, v20552, [], JAM.policy.p3);
      if (v16410) {
        v16410 = JAM.call(/^next/.test, /^next/, [a$$530], JAM.policy.p3);
      }
      v10764 = v16410;
    }
    if (v10764) {
      var v10765 = this.element;
      JAM.call(v10765.val, v10765, [this.term], JAM.policy.p3);
      var v10767 = this.menu;
      JAM.call(v10767.deactivate, v10767, [], JAM.policy.p3);
      return;
    }
    var v3979 = this.menu;
    JAM.call(v3979[a$$530], v3979, [b$$498], JAM.policy.p3);
    return;
  }
  function v1518(b$$497, c$$401) {
    var v16412 = JAM.call(a$$515, null, ["<li></li>"], JAM.policy.p3);
    var v10768 = JAM.call(v16412.data, v16412, ["item.autocomplete", c$$401], JAM.policy.p3);
    var v16413 = JAM.call(a$$515, null, ["<a></a>"], JAM.policy.p3);
    var v3980 = JAM.call(v10768.append, v10768, [JAM.call(v16413.text, v16413, [c$$401.label], JAM.policy.p3)], JAM.policy.p3);
    return JAM.call(v3980.appendTo, v3980, [b$$497], JAM.policy.p3);
  }
  function v1517(b$$496, c$$399) {
    function v1516(a$$529, c$$400) {
      JAM.call(d$$311._renderItem, d$$311, [b$$496, c$$400], JAM.policy.p3);
      return;
    }
    var d$$311 = this;
    JAM.call(a$$515.each, a$$515, [c$$399, v1516], JAM.policy.p3);
    return;
  }
  function v1515() {
    var a$$528 = this.menu.element;
    var v20553 = JAM.call(a$$528.width, a$$528, [""], JAM.policy.p3);
    var v10770 = JAM.call(v20553.outerWidth, v20553, [], JAM.policy.p3) + 1;
    var v16416 = this.element;
    JAM.call(a$$528.outerWidth, a$$528, [JAM.call(Math.max, Math, [v10770, JAM.call(v16416.outerWidth, v16416, [], JAM.policy.p3)], JAM.policy.p3)], JAM.policy.p3);
    return;
  }
  function v1514(b$$495) {
    var v10772 = this.menu.element;
    var v3983 = JAM.call(v10772.empty, v10772, [], JAM.policy.p3);
    var v16418 = this.element;
    var c$$398 = JAM.call(v3983.zIndex, v3983, [JAM.call(v16418.zIndex, v16418, [], JAM.policy.p3) + 1], JAM.policy.p3);
    JAM.call(this._renderMenu, this, [c$$398, b$$495], JAM.policy.p3);
    var v28238 = this.menu;
    JAM.call(v28238.deactivate, v28238, [], JAM.policy.p3);
    var v26874 = this.menu;
    JAM.call(v26874.refresh, v26874, [], JAM.policy.p3);
    JAM.call(c$$398.show, c$$398, [], JAM.policy.p3);
    JAM.call(this._resizeMenu, this, [], JAM.policy.p3);
    JAM.call(c$$398.position, c$$398, [JAM.call(a$$515.extend, a$$515, [{of:this.element}, this.options.position], JAM.policy.p3)], JAM.policy.p3);
    var v10774 = this.options.autoFocus;
    if (v10774) {
      var v16421 = this.menu;
      JAM.call(v16421.next, v16421, [JAM.new(a$$515.Event, ["mouseover"], JAM.policy.p3)], JAM.policy.p3);
    }
    return;
  }
  function v1513(b$$493) {
    function v1512(b$$494) {
      var v3985;
      if (typeof b$$494 == "string") {
        v3985 = {label:b$$494, value:b$$494};
      } else {
        var v20557 = b$$494.label;
        if (!v20557) {
          v20557 = b$$494.value;
        }
        var v16424 = v20557;
        var v20558 = b$$494.value;
        if (!v20558) {
          v20558 = b$$494.label;
        }
        v3985 = JAM.call(a$$515.extend, a$$515, [{label:v16424, value:v20558}, b$$494], JAM.policy.p3);
      }
      return v3985;
    }
    var v3986;
    var v20559 = b$$493.length;
    if (v20559) {
      v20559 = b$$493[0].label;
    }
    var v16426 = v20559;
    if (v16426) {
      v16426 = b$$493[0].value;
    }
    if (v16426) {
      v3986 = b$$493;
    } else {
      v3986 = JAM.call(a$$515.map, a$$515, [b$$493, v1512], JAM.policy.p3);
    }
    return v3986;
  }
  function v1511(a$$527) {
    var v10778 = this.previous;
    var v16427 = this.element;
    var v3987 = v10778 !== JAM.call(v16427.val, v16427, [], JAM.policy.p3);
    if (v3987) {
      JAM.call(this._trigger, this, ["change", a$$527, {item:this.selectedItem}], JAM.policy.p3);
    }
    return;
  }
  function v1510(a$$526) {
    JAM.call(clearTimeout, null, [this.closing], JAM.policy.p3);
    var v16429 = this.menu.element;
    var v10782 = JAM.call(v16429.is, v16429, [":visible"], JAM.policy.p3);
    if (v10782) {
      var v24924 = this.menu.element;
      JAM.call(v24924.hide, v24924, [], JAM.policy.p3);
      var v24925 = this.menu;
      JAM.call(v24925.deactivate, v24925, [], JAM.policy.p3);
      JAM.call(this._trigger, this, ["close", a$$526], JAM.policy.p3);
    }
    return;
  }
  function v1509(a$$525) {
    var v3988;
    var v20562 = !this.options.disabled;
    if (v20562) {
      v20562 = a$$525;
    }
    var v16430 = v20562;
    if (v16430) {
      v16430 = a$$525.length;
    }
    if (v16430) {
      a$$525 = JAM.call(this._normalize, this, [a$$525], JAM.policy.p3);
      JAM.call(this._suggest, this, [a$$525], JAM.policy.p3);
      v3988 = JAM.call(this._trigger, this, ["open"], JAM.policy.p3);
    } else {
      v3988 = JAM.call(this.close, this, [], JAM.policy.p3);
    }
    v3988;
    return;
  }
  function v1508() {
    function v1507(d$$310) {
      var v16431 = b$$492 === c$$388;
      if (v16431) {
        JAM.call(a$$524.__response, a$$524, [d$$310], JAM.policy.p3);
      }
      a$$524.pending = a$$524.pending - 1;
      var v10784 = a$$524.pending;
      if (!v10784) {
        var v16432 = a$$524.element;
        JAM.call(v16432.removeClass, v16432, ["ui-autocomplete-loading"], JAM.policy.p3);
      }
      return;
    }
    var a$$524 = this;
    var b$$492 = c$$388 = c$$388 + 1;
    return v1507;
  }
  function v1506(a$$523) {
    this.pending = this.pending + 1;
    var v16434 = this.element;
    JAM.call(v16434.addClass, v16434, ["ui-autocomplete-loading"], JAM.policy.p3);
    JAM.call(this.source, this, [{term:a$$523}, JAM.call(this._response, this, [], JAM.policy.p3)], JAM.policy.p3);
    return;
  }
  function v1505(a$$522, b$$491) {
    var v10787;
    if (a$$522 != null) {
      v10787 = a$$522;
    } else {
      var v16435 = this.element;
      v10787 = JAM.call(v16435.val, v16435, [], JAM.policy.p3);
    }
    a$$522 = v10787;
    var v10788 = this.element;
    var v31256 = JAM.call(v10788.val, v10788, [], JAM.policy.p3);
    this.term = v31256;
    if (a$$522.length < this.options.minLength) {
      return JAM.call(this.close, this, [b$$491], JAM.policy.p3);
    }
    JAM.call(clearTimeout, null, [this.closing], JAM.policy.p3);
    if (JAM.call(this._trigger, this, ["search", b$$491], JAM.policy.p3) === !1) {
      return;
    }
    return JAM.call(this._search, this, [a$$522], JAM.policy.p3);
  }
  function v1504() {
    function v1503(c$$397, e$$278) {
      function v1502() {
        JAM.call(e$$278, null, [[]], JAM.policy.p3);
        return;
      }
      function v1501(a$$521, b$$490) {
        JAM.call(e$$278, null, [a$$521], JAM.policy.p3);
        return;
      }
      var v10793 = b$$488.xhr;
      if (v10793) {
        var v16438 = b$$488.xhr;
        JAM.call(v16438.abort, v16438, [], JAM.policy.p3);
      }
      var v10794 = b$$488;
      var v31257 = JAM.call(a$$515.ajax, a$$515, [{url:d$$308, data:c$$397, dataType:"json", success:v1501, error:v1502}], JAM.policy.p3);
      v10794.xhr = v31257;
      return;
    }
    function v1500(b$$489, d$$309) {
      var v10795 = a$$515.ui.autocomplete;
      JAM.call(d$$309, null, [JAM.call(v10795.filter, v10795, [c$$396, b$$489.term], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    var b$$488 = this;
    var c$$396;
    var d$$308;
    var v3993;
    if (JAM.call(a$$515.isArray, a$$515, [this.options.source], JAM.policy.p3)) {
      c$$396 = this.options.source;
      v3993 = this.source = v1500;
    } else {
      var v10797;
      if (typeof this.options.source == "string") {
        d$$308 = this.options.source;
        v10797 = this.source = v1503;
      } else {
        v10797 = this.source = this.options.source;
      }
      v3993 = v10797;
    }
    v3993;
    return;
  }
  function v1499(b$$487, c$$395) {
    var v20568 = a$$515.Widget.prototype._setOption;
    JAM.call(v20568.apply, v20568, [this, arguments], JAM.policy.p3);
    var v20569 = b$$487 === "source";
    if (v20569) {
      JAM.call(this._initSource, this, [], JAM.policy.p3);
    }
    var v16445 = b$$487 === "appendTo";
    if (v16445) {
      var v20570 = this.menu.element;
      JAM.call(v20570.appendTo, v20570, [JAM.call(a$$515, null, [c$$395 || "body", this.element[0].ownerDocument], JAM.policy.p3)[0]], JAM.policy.p3);
    }
    var v20572 = b$$487 === "disabled";
    if (v20572) {
      v20572 = c$$395;
    }
    var v16446 = v20572;
    if (v16446) {
      v16446 = this.xhr;
    }
    var v10799 = v16446;
    if (v10799) {
      var v16447 = this.xhr;
      JAM.call(v16447.abort, v16447, [], JAM.policy.p3);
    }
    return;
  }
  function v1498() {
    var v29127 = this.element;
    var v28240 = JAM.call(v29127.removeClass, v29127, ["ui-autocomplete-input"], JAM.policy.p3);
    var v26881 = JAM.call(v28240.removeAttr, v28240, ["autocomplete"], JAM.policy.p3);
    var v24931 = JAM.call(v26881.removeAttr, v26881, ["role"], JAM.policy.p3);
    var v20573 = JAM.call(v24931.removeAttr, v24931, ["aria-autocomplete"], JAM.policy.p3);
    JAM.call(v20573.removeAttr, v20573, ["aria-haspopup"], JAM.policy.p3);
    var v20574 = this.menu.element;
    JAM.call(v20574.remove, v20574, [], JAM.policy.p3);
    var v16448 = JAM.call(a$$515, null, [window], JAM.policy.p3);
    JAM.call(v16448.unbind, v16448, ["beforeunload", this.beforeunloadHandler], JAM.policy.p3);
    var v10800 = a$$515.Widget.prototype.destroy;
    JAM.call(v10800.call, v10800, [this], JAM.policy.p3);
    return;
  }
  function v1497() {
    function v1496() {
      var v3994 = b$$486.element;
      JAM.call(v3994.removeAttr, v3994, ["autocomplete"], JAM.policy.p3);
      return;
    }
    function v1495(a$$520, c$$394) {
      var v16451 = b$$486.menu.element;
      var v10801 = JAM.call(v16451.is, v16451, [":visible"], JAM.policy.p3);
      if (v10801) {
        var v20577 = b$$486.element;
        v10801 = JAM.call(v20577.val, v20577, [], JAM.policy.p3) !== b$$486.term;
      }
      var v3995 = v10801;
      if (v3995) {
        var v10802 = b$$486.element;
        JAM.call(v10802.val, v10802, [b$$486.term], JAM.policy.p3);
      }
      return;
    }
    function v1494(a$$519, d$$307) {
      function v1493() {
        b$$486.previous = f$$133;
        b$$486.selectedItem = e$$277;
        return;
      }
      var v3996 = d$$307.item;
      var e$$277 = JAM.call(v3996.data, v3996, ["item.autocomplete"], JAM.policy.p3);
      var f$$133 = b$$486.previous;
      var v24933 = b$$486.element[0] !== c$$389.activeElement;
      if (v24933) {
        var v29128 = b$$486.element;
        JAM.call(v29128.focus, v29128, [], JAM.policy.p3);
        b$$486.previous = f$$133;
        JAM.call(setTimeout, null, [v1493, 1], JAM.policy.p3);
      }
      var v24934 = !1 !== JAM.call(b$$486._trigger, b$$486, ["select", a$$519, {item:e$$277}], JAM.policy.p3);
      if (v24934) {
        var v26886 = b$$486.element;
        JAM.call(v26886.val, v26886, [e$$277.value], JAM.policy.p3);
      }
      var v20578 = b$$486;
      var v24935 = b$$486.element;
      var v31258 = JAM.call(v24935.val, v24935, [], JAM.policy.p3);
      v20578.term = v31258;
      JAM.call(b$$486.close, b$$486, [a$$519], JAM.policy.p3);
      b$$486.selectedItem = e$$277;
      return;
    }
    function v1492(a$$518, c$$393) {
      var v3997 = c$$393.item;
      var d$$306 = JAM.call(v3997.data, v3997, ["item.autocomplete"], JAM.policy.p3);
      var v10804 = !1 !== JAM.call(b$$486._trigger, b$$486, ["focus", a$$518, {item:d$$306}], JAM.policy.p3);
      if (v10804) {
        v10804 = JAM.call(/^key/.test, /^key/, [a$$518.originalEvent.type], JAM.policy.p3);
      }
      var v3998 = v10804;
      if (v3998) {
        var v10805 = b$$486.element;
        JAM.call(v10805.val, v10805, [d$$306.value], JAM.policy.p3);
      }
      return;
    }
    function v1491(c$$391) {
      function v1490() {
        JAM.call(clearTimeout, null, [b$$486.closing], JAM.policy.p3);
        return;
      }
      function v1489() {
        function v1488(c$$392) {
          var v16457 = c$$392.target !== b$$486.element[0];
          if (v16457) {
            v16457 = c$$392.target !== d$$305;
          }
          var v10807 = v16457;
          if (v10807) {
            var v20584 = a$$515.ui;
            v10807 = !JAM.call(v20584.contains, v20584, [d$$305, c$$392.target], JAM.policy.p3);
          }
          var v4000 = v10807;
          if (v4000) {
            JAM.call(b$$486.close, b$$486, [], JAM.policy.p3);
          }
          return;
        }
        var v4001 = JAM.call(a$$515, null, [document], JAM.policy.p3);
        JAM.call(v4001.one, v4001, ["mousedown", v1488], JAM.policy.p3);
        return;
      }
      var d$$305 = b$$486.menu.element[0];
      var v20586 = JAM.call(a$$515, null, [c$$391.target], JAM.policy.p3);
      var v10809 = JAM.call(v20586.closest, v20586, [".ui-menu-item"], JAM.policy.p3).length;
      if (!v10809) {
        JAM.call(setTimeout, null, [v1489, 1], JAM.policy.p3);
      }
      JAM.call(setTimeout, null, [v1490, 13], JAM.policy.p3);
      return;
    }
    function v1487(a$$517) {
      function v1486() {
        JAM.call(b$$486.close, b$$486, [a$$517], JAM.policy.p3);
        JAM.call(b$$486._change, b$$486, [a$$517], JAM.policy.p3);
        return;
      }
      if (b$$486.options.disabled) {
        return;
      }
      JAM.call(clearTimeout, null, [b$$486.searching], JAM.policy.p3);
      var v10812 = b$$486;
      var v31259 = JAM.call(setTimeout, null, [v1486, 150], JAM.policy.p3);
      v10812.closing = v31259;
      return;
    }
    function v1485() {
      if (b$$486.options.disabled) {
        return;
      }
      b$$486.selectedItem = null;
      var v10814 = b$$486;
      var v16461 = b$$486.element;
      var v31260 = JAM.call(v16461.val, v16461, [], JAM.policy.p3);
      v10814.previous = v31260;
      return;
    }
    function v1484(a$$516) {
      if (d$$304) {
        d$$304 = !1;
        JAM.call(a$$516.preventDefault, a$$516, [], JAM.policy.p3);
      }
      return;
    }
    function v1483(c$$390) {
      function v1482() {
        var v10815 = b$$486.term;
        var v16462 = b$$486.element;
        var v4005 = v10815 != JAM.call(v16462.val, v16462, [], JAM.policy.p3);
        if (v4005) {
          b$$486.selectedItem = null;
          JAM.call(b$$486.search, b$$486, [null, c$$390], JAM.policy.p3);
        }
        return;
      }
      var v10817 = b$$486.options.disabled;
      if (!v10817) {
        var v16464 = b$$486.element;
        v10817 = JAM.call(v16464.propAttr, v16464, ["readOnly"], JAM.policy.p3);
      }
      if (v10817) {
        return;
      }
      d$$304 = !1;
      var e$$276 = a$$515.ui.keyCode;
      switch(c$$390.keyCode) {
        case e$$276.PAGE_UP:
          JAM.call(b$$486._move, b$$486, ["previousPage", c$$390], JAM.policy.p3);
          break;
        case e$$276.PAGE_DOWN:
          JAM.call(b$$486._move, b$$486, ["nextPage", c$$390], JAM.policy.p3);
          break;
        case e$$276.UP:
          JAM.call(b$$486._keyEvent, b$$486, ["previous", c$$390], JAM.policy.p3);
          break;
        case e$$276.DOWN:
          JAM.call(b$$486._keyEvent, b$$486, ["next", c$$390], JAM.policy.p3);
          break;
        case e$$276.ENTER:
        ;
        case e$$276.NUMPAD_ENTER:
          var v4008 = b$$486.menu.active;
          if (v4008) {
            d$$304 = !0;
            JAM.call(c$$390.preventDefault, c$$390, [], JAM.policy.p3);
          }
        ;
        case e$$276.TAB:
          if (!b$$486.menu.active) {
            return;
          }
          var v4010 = b$$486.menu;
          JAM.call(v4010.select, v4010, [c$$390], JAM.policy.p3);
          break;
        case e$$276.ESCAPE:
          var v10820 = b$$486.element;
          JAM.call(v10820.val, v10820, [b$$486.term], JAM.policy.p3);
          JAM.call(b$$486.close, b$$486, [c$$390], JAM.policy.p3);
          break;
        default:
          JAM.call(clearTimeout, null, [b$$486.searching], JAM.policy.p3);
          var v10823 = b$$486;
          var v31261 = JAM.call(setTimeout, null, [v1482, b$$486.options.delay], JAM.policy.p3);
          v10823.searching = v31261;
      }
      return;
    }
    var b$$486 = this;
    var c$$389 = this.element[0].ownerDocument;
    var d$$304;
    var v28243 = this.element;
    var v31262 = JAM.call(v28243.is, v28243, ["textarea"], JAM.policy.p3);
    this.isMultiLine = v31262;
    var v30678 = this.element;
    var v30536 = JAM.call(v30678.addClass, v30678, ["ui-autocomplete-input"], JAM.policy.p3);
    var v30323 = JAM.call(v30536.attr, v30536, ["autocomplete", "off"], JAM.policy.p3);
    var v30067 = JAM.call(v30323.attr, v30323, [{role:"textbox", "aria-autocomplete":"list", "aria-haspopup":"true"}], JAM.policy.p3);
    var v29718 = JAM.call(v30067.bind, v30067, ["keydown.autocomplete", v1483], JAM.policy.p3);
    var v29129 = JAM.call(v29718.bind, v29718, ["keypress.autocomplete", v1484], JAM.policy.p3);
    var v28244 = JAM.call(v29129.bind, v29129, ["focus.autocomplete", v1485], JAM.policy.p3);
    JAM.call(v28244.bind, v28244, ["blur.autocomplete", v1487], JAM.policy.p3);
    JAM.call(this._initSource, this, [], JAM.policy.p3);
    var v30537 = JAM.call(a$$515, null, ["<ul></ul>"], JAM.policy.p3);
    var v30325 = JAM.call(v30537.addClass, v30537, ["ui-autocomplete"], JAM.policy.p3);
    var v30814 = this.options.appendTo;
    if (!v30814) {
      v30814 = "body";
    }
    var v30068 = JAM.call(v30325.appendTo, v30325, [JAM.call(a$$515, null, [v30814, c$$389], JAM.policy.p3)[0]], JAM.policy.p3);
    var v29719 = JAM.call(v30068.mousedown, v30068, [v1491], JAM.policy.p3);
    var v29130 = JAM.call(v29719.menu, v29719, [{focus:v1492, selected:v1494, blur:v1495}], JAM.policy.p3);
    var v30069 = this.element;
    var v28245 = JAM.call(v29130.zIndex, v29130, [JAM.call(v30069.zIndex, v30069, [], JAM.policy.p3) + 1], JAM.policy.p3);
    var v26888 = JAM.call(v28245.css, v28245, [{top:0, left:0}], JAM.policy.p3);
    var v24938 = JAM.call(v26888.hide, v26888, [], JAM.policy.p3);
    var v31263 = JAM.call(v24938.data, v24938, ["menu"], JAM.policy.p3);
    this.menu = v31263;
    var v20588 = a$$515.fn.bgiframe;
    if (v20588) {
      var v24940 = this.menu.element;
      JAM.call(v24940.bgiframe, v24940, [], JAM.policy.p3);
    }
    b$$486.beforeunloadHandler = v1496;
    var v10825 = JAM.call(a$$515, null, [window], JAM.policy.p3);
    JAM.call(v10825.bind, v10825, ["beforeunload", b$$486.beforeunloadHandler], JAM.policy.p3);
    return;
  }
  var c$$388 = 0;
  JAM.call(a$$515.widget, a$$515, ["ui.autocomplete", {options:{appendTo:"body", autoFocus:!1, delay:300, minLength:1, position:{my:"left top", at:"left bottom", collision:"none"}, source:null}, pending:0, _create:v1497, destroy:v1498, _setOption:v1499, _initSource:v1504, search:v1505, _search:v1506, _response:v1508, __response:v1509, close:v1510, _change:v1511, _normalize:v1513, _suggest:v1514, _resizeMenu:v1515, _renderMenu:v1517, _renderItem:v1518, _move:v1519, widget:v1520, _keyEvent:v1521}], 
  JAM.policy.p3);
  JAM.call(a$$515.extend, a$$515, [a$$515.ui.autocomplete, {escapeRegex:v1522, filter:v1524}], JAM.policy.p3);
  return;
}
function v1481(a$$507, b$$473) {
  function v1480(a$$514) {
    var v16470;
    if (a$$514.down) {
      v16470 = "easeOutBounce";
    } else {
      v16470 = "swing";
    }
    var v10830 = v16470;
    var v16471;
    if (a$$514.down) {
      v16471 = 1E3;
    } else {
      v16471 = 200;
    }
    JAM.call(this.slide, this, [a$$514, {easing:v10830, duration:v16471}], JAM.policy.p3);
    return;
  }
  function v1479(b$$484, c$$385) {
    function v1478() {
      var v16472 = b$$484.autoHeight;
      if (!v16472) {
        var v20593 = b$$484.toShow;
        JAM.call(v20593.css, v20593, ["height", ""], JAM.policy.p3);
      }
      var v16473 = b$$484.toShow;
      JAM.call(v16473.css, v16473, [{width:i$$185, overflow:d$$302}], JAM.policy.p3);
      JAM.call(b$$484.complete, b$$484, [], JAM.policy.p3);
      return;
    }
    function v1477(a$$513, c$$387) {
      var v10832 = c$$387.prop == "height";
      if (v10832) {
        var v16476;
        if (c$$387.end - c$$387.start === 0) {
          v16476 = 0;
        } else {
          v16476 = (c$$387.now - c$$387.start) / (c$$387.end - c$$387.start);
        }
        e$$274 = v16476;
      }
      JAM.set(b$$484.toShow[0].style, c$$387.prop, e$$274 * f$$132[c$$387.prop].value + f$$132[c$$387.prop].unit, JAM.policy.p2);
      return;
    }
    function v1476(c$$386, d$$303) {
      JAM.set(g$$158, d$$303, "hide", JAM.policy.p2);
      var v4014 = "" + JAM.call(a$$507.css, a$$507, [b$$484.toShow[0], d$$303], JAM.policy.p3);
      var e$$275 = JAM.call(v4014.match, v4014, [/^([\d+-.]+)(.*)$/], JAM.policy.p3);
      var v4015 = e$$275[1];
      var v10836 = e$$275[2];
      if (!v10836) {
        v10836 = "px";
      }
      JAM.set(f$$132, d$$303, {value:v4015, unit:v10836}, JAM.policy.p2);
      return;
    }
    b$$484 = JAM.call(a$$507.extend, a$$507, [{easing:"swing", duration:300}, b$$484, c$$385], JAM.policy.p3);
    var v16482 = b$$484.toHide;
    if (!JAM.call(v16482.size, v16482, [], JAM.policy.p3)) {
      var v4018 = b$$484.toShow;
      JAM.call(v4018.animate, v4018, [{height:"show", paddingTop:"show", paddingBottom:"show"}, b$$484], JAM.policy.p3);
      return;
    }
    var v16483 = b$$484.toShow;
    if (!JAM.call(v16483.size, v16483, [], JAM.policy.p3)) {
      var v4021 = b$$484.toHide;
      JAM.call(v4021.animate, v4021, [{height:"hide", paddingTop:"hide", paddingBottom:"hide"}, b$$484], JAM.policy.p3);
      return;
    }
    var v4024 = b$$484.toShow;
    var d$$302 = JAM.call(v4024.css, v4024, ["overflow"], JAM.policy.p3);
    var e$$274 = 0;
    var f$$132 = {};
    var g$$158 = {};
    var h$$129 = ["height", "paddingTop", "paddingBottom"];
    var i$$185;
    var j$$94 = b$$484.toShow;
    i$$185 = j$$94[0].style.width;
    var v30070 = JAM.call(j$$94.parent, j$$94, [], JAM.policy.p3);
    var v28247 = JAM.call(v30070.width, v30070, [], JAM.policy.p3) - JAM.call(parseFloat, null, [JAM.call(j$$94.css, j$$94, ["paddingLeft"], JAM.policy.p3)], JAM.policy.p3) - JAM.call(parseFloat, null, [JAM.call(j$$94.css, j$$94, ["paddingRight"], JAM.policy.p3)], JAM.policy.p3);
    var v29134 = JAM.call(parseFloat, null, [JAM.call(j$$94.css, j$$94, ["borderLeftWidth"], JAM.policy.p3)], JAM.policy.p3);
    if (!v29134) {
      v29134 = 0;
    }
    var v26894 = v28247 - v29134;
    var v28249 = JAM.call(parseFloat, null, [JAM.call(j$$94.css, j$$94, ["borderRightWidth"], JAM.policy.p3)], JAM.policy.p3);
    if (!v28249) {
      v28249 = 0;
    }
    JAM.call(j$$94.width, j$$94, [v26894 - v28249], JAM.policy.p3);
    JAM.call(a$$507.each, a$$507, [h$$129, v1476], JAM.policy.p3);
    var v20602 = b$$484.toShow;
    var v16484 = JAM.call(v20602.css, v20602, [{height:0, overflow:"hidden"}], JAM.policy.p3);
    JAM.call(v16484.show, v16484, [], JAM.policy.p3);
    var v26896 = b$$484.toHide;
    var v24950 = JAM.call(v26896.filter, v26896, [":hidden"], JAM.policy.p3);
    var v20604 = JAM.call(v24950.each, v24950, [b$$484.complete], JAM.policy.p3);
    var v16485 = JAM.call(v20604.end, v20604, [], JAM.policy.p3);
    var v10839 = JAM.call(v16485.filter, v16485, [":visible"], JAM.policy.p3);
    JAM.call(v10839.animate, v10839, [g$$158, {step:v1477, duration:b$$484.duration, easing:b$$484.easing, complete:v1478}], JAM.policy.p3);
    return;
  }
  function v1475(a$$512) {
    var v4025;
    if (a$$512) {
      v4025 = 0;
    } else {
      v4025 = this.running = this.running - 1;
    }
    this.running = v4025;
    if (this.running) {
      return;
    }
    var v20605 = this.options.clearStyle;
    if (v20605) {
      var v26897 = this.toShow;
      var v24953 = JAM.call(v26897.add, v26897, [this.toHide], JAM.policy.p3);
      JAM.call(v24953.css, v24953, [{height:"", overflow:""}], JAM.policy.p3);
    }
    var v20606 = this.toHide;
    JAM.call(v20606.removeClass, v20606, ["ui-accordion-content-active"], JAM.policy.p3);
    var v16489 = this.toHide.length;
    if (v16489) {
      var v26899 = this.toHide;
      var v20608 = JAM.call(v26899.parent, v26899, [], JAM.policy.p3)[0];
      var v28250 = this.toHide;
      v20608.className = JAM.call(v28250.parent, v28250, [], JAM.policy.p3)[0].className;
    }
    JAM.call(this._trigger, this, ["change", null, this.data], JAM.policy.p3);
    return;
  }
  function v1474(b$$483, c$$384, d$$301, e$$273, f$$131) {
    function v1473(a$$511) {
      JAM.call(this.slide, this, [a$$511, {easing:m$$42, duration:l$$71 || 700}], JAM.policy.p3);
      return;
    }
    function i$$184() {
      if (!g$$157) {
        return;
      }
      var v4029 = g$$157._completed;
      return JAM.call(v4029.apply, v4029, [g$$157, arguments], JAM.policy.p3);
    }
    var g$$157 = this;
    var h$$128 = g$$157.options;
    g$$157.toShow = b$$483;
    g$$157.toHide = c$$384;
    g$$157.data = d$$301;
    JAM.call(g$$157._trigger, g$$157, ["changestart", null, g$$157.data], JAM.policy.p3);
    var v10844 = g$$157;
    var v16490;
    if (JAM.call(c$$384.size, c$$384, [], JAM.policy.p3) === 0) {
      v16490 = JAM.call(b$$483.size, b$$483, [], JAM.policy.p3);
    } else {
      v16490 = JAM.call(c$$384.size, c$$384, [], JAM.policy.p3);
    }
    v10844.running = v16490;
    if (h$$128.animated) {
      var j$$93 = {};
      var v24958;
      var v28251 = h$$128.collapsible;
      if (v28251) {
        v28251 = e$$273;
      }
      if (v28251) {
        var v26901 = JAM.call(a$$507, null, [[]], JAM.policy.p3);
        var v28252 = h$$128.autoHeight;
        if (!v28252) {
          v28252 = h$$128.fillSpace;
        }
        v24958 = j$$93 = {toShow:v26901, toHide:c$$384, complete:i$$184, down:f$$131, autoHeight:v28252};
      } else {
        var v28253 = h$$128.autoHeight;
        if (!v28253) {
          v28253 = h$$128.fillSpace;
        }
        v24958 = j$$93 = {toShow:b$$483, toHide:c$$384, complete:i$$184, down:f$$131, autoHeight:v28253};
      }
      v24958;
      var v24959 = h$$128.proxied;
      if (!v24959) {
        h$$128.proxied = h$$128.animated;
      }
      var v20610 = h$$128.proxiedDuration;
      if (!v20610) {
        h$$128.proxiedDuration = h$$128.duration;
      }
      var v16491 = h$$128;
      var v20611;
      if (JAM.call(a$$507.isFunction, a$$507, [h$$128.proxied], JAM.policy.p3)) {
        v20611 = JAM.call(h$$128.proxied, h$$128, [j$$93], JAM.policy.p3);
      } else {
        v20611 = h$$128.proxied;
      }
      v16491.animated = v20611;
      var v10845 = h$$128;
      var v16492;
      if (JAM.call(a$$507.isFunction, a$$507, [h$$128.proxiedDuration], JAM.policy.p3)) {
        v16492 = JAM.call(h$$128.proxiedDuration, h$$128, [j$$93], JAM.policy.p3);
      } else {
        v16492 = h$$128.proxiedDuration;
      }
      v10845.duration = v16492;
      var k$$63 = a$$507.ui.accordion.animations;
      var l$$71 = h$$128.duration;
      var m$$42 = h$$128.animated;
      var v24963 = m$$42;
      if (v24963) {
        v24963 = !k$$63[m$$42];
      }
      var v20613 = v24963;
      if (v20613) {
        v20613 = !a$$507.easing[m$$42];
      }
      var v16493 = v20613;
      if (v16493) {
        m$$42 = "slide";
      }
      var v16494 = k$$63[m$$42];
      if (!v16494) {
        JAM.set(k$$63, m$$42, v1473, JAM.policy.p2);
      }
      JAM.call(k$$63[m$$42], k$$63, [j$$93], JAM.policy.p3);
    } else {
      var v10847;
      var v20615 = h$$128.collapsible;
      if (v20615) {
        v20615 = e$$273;
      }
      if (v20615) {
        v10847 = JAM.call(b$$483.toggle, b$$483, [], JAM.policy.p3);
      } else {
        JAM.call(c$$384.hide, c$$384, [], JAM.policy.p3);
        v10847 = JAM.call(b$$483.show, b$$483, [], JAM.policy.p3);
      }
      v10847;
      JAM.call(i$$184, null, [!0], JAM.policy.p3);
    }
    var v16496 = JAM.call(c$$384.prev, c$$384, [], JAM.policy.p3);
    var v10849 = JAM.call(v16496.attr, v16496, [{"aria-expanded":"false", "aria-selected":"false", tabIndex:-1}], JAM.policy.p3);
    JAM.call(v10849.blur, v10849, [], JAM.policy.p3);
    var v16498 = JAM.call(b$$483.prev, b$$483, [], JAM.policy.p3);
    var v10850 = JAM.call(v16498.attr, v16498, [{"aria-expanded":"true", "aria-selected":"true", tabIndex:0}], JAM.policy.p3);
    JAM.call(v10850.focus, v10850, [], JAM.policy.p3);
    return;
  }
  function v1472(b$$482, c$$383) {
    var d$$300 = this.options;
    if (d$$300.disabled) {
      return;
    }
    if (!b$$482.target) {
      if (!d$$300.collapsible) {
        return;
      }
      var v26909 = this.active;
      var v24965 = JAM.call(v26909.removeClass, v26909, ["ui-state-active ui-corner-top"], JAM.policy.p3);
      var v20616 = JAM.call(v24965.addClass, v24965, ["ui-state-default ui-corner-all"], JAM.policy.p3);
      var v16500 = JAM.call(v20616.children, v20616, [".ui-icon"], JAM.policy.p3);
      var v10853 = JAM.call(v16500.removeClass, v16500, [d$$300.icons.headerSelected], JAM.policy.p3);
      JAM.call(v10853.addClass, v10853, [d$$300.icons.header], JAM.policy.p3);
      var v16503 = this.active;
      var v10855 = JAM.call(v16503.next, v16503, [], JAM.policy.p3);
      JAM.call(v10855.addClass, v10855, ["ui-accordion-content-active"], JAM.policy.p3);
      var v4034 = this.active;
      var e$$272 = JAM.call(v4034.next, v4034, [], JAM.policy.p3);
      var f$$130 = {options:d$$300, newHeader:JAM.call(a$$507, null, [[]], JAM.policy.p3), oldHeader:d$$300.active, newContent:JAM.call(a$$507, null, [[]], JAM.policy.p3), oldContent:e$$272};
      var v31264 = JAM.call(a$$507, null, [[]], JAM.policy.p3);
      var g$$156 = this.active = v31264;
      JAM.call(this._toggle, this, [g$$156, e$$272, f$$130], JAM.policy.p3);
      return;
    }
    var v10856 = b$$482.currentTarget;
    if (!v10856) {
      v10856 = c$$383;
    }
    var h$$127 = JAM.call(a$$507, null, [v10856], JAM.policy.p3);
    var i$$183 = h$$127[0] === this.active[0];
    var v4042 = d$$300;
    var v10858;
    var v20618 = d$$300.collapsible;
    if (v20618) {
      v20618 = i$$183;
    }
    if (v20618) {
      v10858 = !1;
    } else {
      var v16505 = this.headers;
      v10858 = JAM.call(v16505.index, v16505, [h$$127], JAM.policy.p3);
    }
    v4042.active = v10858;
    var v10859 = this.running;
    if (!v10859) {
      var v16507 = !d$$300.collapsible;
      if (v16507) {
        v16507 = i$$183;
      }
      v10859 = v16507;
    }
    if (v10859) {
      return;
    }
    var j$$92 = this.active;
    g$$156 = JAM.call(h$$127.next, h$$127, [], JAM.policy.p3);
    var v4044 = this.active;
    e$$272 = JAM.call(v4044.next, v4044, [], JAM.policy.p3);
    var v10860;
    var v20620 = i$$183;
    if (v20620) {
      v20620 = d$$300.collapsible;
    }
    if (v20620) {
      v10860 = JAM.call(a$$507, null, [[]], JAM.policy.p3);
    } else {
      v10860 = h$$127;
    }
    var v4045 = v10860;
    var v4046 = this.active;
    var v10861;
    var v20621 = i$$183;
    if (v20621) {
      v20621 = d$$300.collapsible;
    }
    if (v20621) {
      v10861 = JAM.call(a$$507, null, [[]], JAM.policy.p3);
    } else {
      v10861 = g$$156;
    }
    f$$130 = {options:d$$300, newHeader:v4045, oldHeader:v4046, newContent:v10861, oldContent:e$$272};
    var v10862 = this.headers;
    var v4048 = JAM.call(v10862.index, v10862, [this.active[0]], JAM.policy.p3);
    var v10864 = this.headers;
    var k$$62 = v4048 > JAM.call(v10864.index, v10864, [h$$127[0]], JAM.policy.p3);
    var v20622;
    if (i$$183) {
      v20622 = JAM.call(a$$507, null, [[]], JAM.policy.p3);
    } else {
      v20622 = h$$127;
    }
    this.active = v20622;
    JAM.call(this._toggle, this, [g$$156, e$$272, f$$130, i$$183, k$$62], JAM.policy.p3);
    var v26910 = JAM.call(j$$92.removeClass, j$$92, ["ui-state-active ui-corner-top"], JAM.policy.p3);
    var v24966 = JAM.call(v26910.addClass, v26910, ["ui-state-default ui-corner-all"], JAM.policy.p3);
    var v20623 = JAM.call(v24966.children, v24966, [".ui-icon"], JAM.policy.p3);
    var v16512 = JAM.call(v20623.removeClass, v20623, [d$$300.icons.headerSelected], JAM.policy.p3);
    JAM.call(v16512.addClass, v16512, [d$$300.icons.header], JAM.policy.p3);
    if (!i$$183) {
      var v28254 = JAM.call(h$$127.removeClass, h$$127, ["ui-state-default ui-corner-all"], JAM.policy.p3);
      var v26911 = JAM.call(v28254.addClass, v28254, ["ui-state-active ui-corner-top"], JAM.policy.p3);
      var v24968 = JAM.call(v26911.children, v26911, [".ui-icon"], JAM.policy.p3);
      var v20626 = JAM.call(v24968.removeClass, v24968, [d$$300.icons.header], JAM.policy.p3);
      JAM.call(v20626.addClass, v20626, [d$$300.icons.headerSelected], JAM.policy.p3);
      var v20628 = JAM.call(h$$127.next, h$$127, [], JAM.policy.p3);
      JAM.call(v20628.addClass, v20628, ["ui-accordion-content-active"], JAM.policy.p3);
    }
    return;
  }
  function v1471(b$$481) {
    var v4050;
    if (b$$481) {
      var v10866;
      if (typeof b$$481 == "number") {
        var v16515 = this.headers;
        v10866 = JAM.call(v16515.filter, v16515, [":eq(" + b$$481 + ")"], JAM.policy.p3);
      } else {
        var v16517 = this.headers;
        var v20631 = this.headers;
        v10866 = JAM.call(v16517.not, v16517, [JAM.call(v20631.not, v20631, [b$$481], JAM.policy.p3)], JAM.policy.p3);
      }
      v4050 = v10866;
    } else {
      var v10867;
      if (b$$481 === !1) {
        v10867 = JAM.call(a$$507, null, [[]], JAM.policy.p3);
      } else {
        var v16520 = this.headers;
        v10867 = JAM.call(v16520.filter, v16520, [":eq(0)"], JAM.policy.p3);
      }
      v4050 = v10867;
    }
    return v4050;
  }
  function v1470(a$$510) {
    this.options.active = a$$510;
    var b$$480 = JAM.call(this._findActive, this, [a$$510], JAM.policy.p3)[0];
    JAM.call(this._clickHandler, this, [{target:b$$480}, b$$480], JAM.policy.p3);
    return this;
  }
  function v1469() {
    function v1468() {
      var v16522 = JAM.call(a$$507, null, [this], JAM.policy.p3);
      var v10869 = JAM.call(v16522.height, v16522, [""], JAM.policy.p3);
      c$$382 = JAM.call(Math.max, Math, [c$$382, JAM.call(v10869.height, v10869, [], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    function v1467() {
      var v4054 = JAM.call(a$$507, null, [this], JAM.policy.p3);
      var v20633 = c$$382;
      var v24971 = JAM.call(a$$507, null, [this], JAM.policy.p3);
      var v16523 = v20633 - JAM.call(v24971.innerHeight, v24971, [], JAM.policy.p3);
      var v20635 = JAM.call(a$$507, null, [this], JAM.policy.p3);
      JAM.call(v4054.height, v4054, [JAM.call(Math.max, Math, [0, v16523 + JAM.call(v20635.height, v20635, [], JAM.policy.p3)], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    function v1466() {
      var v10871 = c$$382;
      var v16525 = JAM.call(a$$507, null, [this], JAM.policy.p3);
      c$$382 = v10871 - JAM.call(v16525.outerHeight, v16525, [!0], JAM.policy.p3);
      return;
    }
    var b$$479 = this.options;
    var c$$382;
    if (b$$479.fillSpace) {
      if (a$$507.browser.msie) {
        var v10874 = this.element;
        var v4056 = JAM.call(v10874.parent, v10874, [], JAM.policy.p3);
        var d$$299 = JAM.call(v4056.css, v4056, ["overflow"], JAM.policy.p3);
        var v10875 = this.element;
        var v4057 = JAM.call(v10875.parent, v10875, [], JAM.policy.p3);
        JAM.call(v4057.css, v4057, ["overflow", "hidden"], JAM.policy.p3);
      }
      var v24972 = this.element;
      var v20636 = JAM.call(v24972.parent, v24972, [], JAM.policy.p3);
      c$$382 = JAM.call(v20636.height, v20636, [], JAM.policy.p3);
      var v20637 = a$$507.browser.msie;
      if (v20637) {
        var v26913 = this.element;
        var v24974 = JAM.call(v26913.parent, v26913, [], JAM.policy.p3);
        JAM.call(v24974.css, v24974, ["overflow", d$$299], JAM.policy.p3);
      }
      var v16527 = this.headers;
      JAM.call(v16527.each, v16527, [v1466], JAM.policy.p3);
      var v20638 = this.headers;
      var v16528 = JAM.call(v20638.next, v20638, [], JAM.policy.p3);
      var v10876 = JAM.call(v16528.each, v16528, [v1467], JAM.policy.p3);
      JAM.call(v10876.css, v10876, ["overflow", "auto"], JAM.policy.p3);
    } else {
      var v4059 = b$$479.autoHeight;
      if (v4059) {
        c$$382 = 0;
        var v24975 = this.headers;
        var v20639 = JAM.call(v24975.next, v24975, [], JAM.policy.p3);
        var v16529 = JAM.call(v20639.each, v20639, [v1468], JAM.policy.p3);
        JAM.call(v16529.height, v16529, [c$$382], JAM.policy.p3);
      }
    }
    return this;
  }
  function v1465(b$$478) {
    var v16530 = this.options.disabled;
    if (!v16530) {
      v16530 = b$$478.altKey;
    }
    var v10877 = v16530;
    if (!v10877) {
      v10877 = b$$478.ctrlKey;
    }
    if (v10877) {
      return;
    }
    var c$$381 = a$$507.ui.keyCode;
    var d$$298 = this.headers.length;
    var v4064 = this.headers;
    var e$$271 = JAM.call(v4064.index, v4064, [b$$478.target], JAM.policy.p3);
    var f$$129 = !1;
    switch(b$$478.keyCode) {
      case c$$381.RIGHT:
      ;
      case c$$381.DOWN:
        f$$129 = this.headers[(e$$271 + 1) % d$$298];
        break;
      case c$$381.LEFT:
      ;
      case c$$381.UP:
        f$$129 = this.headers[(e$$271 - 1 + d$$298) % d$$298];
        break;
      case c$$381.SPACE:
      ;
      case c$$381.ENTER:
        JAM.call(this._clickHandler, this, [{target:b$$478.target}, b$$478.target], JAM.policy.p3);
        JAM.call(b$$478.preventDefault, b$$478, [], JAM.policy.p3);
    }
    var v4071;
    if (f$$129) {
      var v24976 = JAM.call(a$$507, null, [b$$478.target], JAM.policy.p3);
      JAM.call(v24976.attr, v24976, ["tabIndex", -1], JAM.policy.p3);
      var v24977 = JAM.call(a$$507, null, [f$$129], JAM.policy.p3);
      JAM.call(v24977.attr, v24977, ["tabIndex", 0], JAM.policy.p3);
      JAM.call(f$$129.focus, f$$129, [], JAM.policy.p3);
      v4071 = !1;
    } else {
      v4071 = !0;
    }
    return v4071;
  }
  function v1464(b$$477, c$$380) {
    var v20642 = a$$507.Widget.prototype._setOption;
    JAM.call(v20642.apply, v20642, [this, arguments], JAM.policy.p3);
    var v20643 = b$$477 == "active";
    if (v20643) {
      JAM.call(this.activate, this, [c$$380], JAM.policy.p3);
    }
    var v16534 = b$$477 == "icons";
    if (v16534) {
      JAM.call(this._destroyIcons, this, [], JAM.policy.p3);
      if (c$$380) {
        JAM.call(this._createIcons, this, [], JAM.policy.p3);
      }
    }
    var v10882 = b$$477 == "disabled";
    if (v10882) {
      var v20644 = this.headers;
      var v24979 = this.headers;
      var v16535 = JAM.call(v20644.add, v20644, [JAM.call(v24979.next, v24979, [], JAM.policy.p3)], JAM.policy.p3);
      var v20646;
      if (c$$380) {
        v20646 = "addClass";
      } else {
        v20646 = "removeClass";
      }
      JAM.call(v16535[v20646], v16535, ["ui-accordion-disabled ui-state-disabled"], JAM.policy.p3);
    }
    return;
  }
  function v1463() {
    var b$$476 = this.options;
    var v24980 = this.element;
    var v20647 = JAM.call(v24980.removeClass, v24980, ["ui-accordion ui-widget ui-helper-reset"], JAM.policy.p3);
    JAM.call(v20647.removeAttr, v20647, ["role"], JAM.policy.p3);
    var v29727 = this.headers;
    var v29139 = JAM.call(v29727.unbind, v29727, [".accordion"], JAM.policy.p3);
    var v28255 = JAM.call(v29139.removeClass, v29139, ["ui-accordion-header ui-accordion-disabled ui-helper-reset ui-state-default ui-corner-all ui-state-active ui-state-disabled ui-corner-top"], JAM.policy.p3);
    var v26916 = JAM.call(v28255.removeAttr, v28255, ["role"], JAM.policy.p3);
    var v24981 = JAM.call(v26916.removeAttr, v26916, ["aria-expanded"], JAM.policy.p3);
    var v20648 = JAM.call(v24981.removeAttr, v24981, ["aria-selected"], JAM.policy.p3);
    JAM.call(v20648.removeAttr, v20648, ["tabIndex"], JAM.policy.p3);
    var v20649 = this.headers;
    var v16537 = JAM.call(v20649.find, v20649, ["a"], JAM.policy.p3);
    JAM.call(v16537.removeAttr, v16537, ["tabIndex"], JAM.policy.p3);
    JAM.call(this._destroyIcons, this, [], JAM.policy.p3);
    var v20650 = this.headers;
    var v16538 = JAM.call(v20650.next, v20650, [], JAM.policy.p3);
    var v10883 = JAM.call(v16538.css, v16538, ["display", ""], JAM.policy.p3);
    var v4072 = JAM.call(v10883.removeAttr, v10883, ["role"], JAM.policy.p3);
    var c$$379 = JAM.call(v4072.removeClass, v4072, ["ui-helper-reset ui-widget-content ui-corner-bottom ui-accordion-content ui-accordion-content-active ui-accordion-disabled ui-state-disabled"], JAM.policy.p3);
    var v16539 = b$$476.autoHeight;
    if (!v16539) {
      v16539 = b$$476.fillHeight;
    }
    var v10884 = v16539;
    if (v10884) {
      JAM.call(c$$379.css, c$$379, ["height", ""], JAM.policy.p3);
    }
    var v10885 = a$$507.Widget.prototype.destroy;
    return JAM.call(v10885.call, v10885, [this], JAM.policy.p3);
  }
  function v1462() {
    var v16541 = this.headers;
    var v10886 = JAM.call(v16541.children, v16541, [".ui-icon"], JAM.policy.p3);
    JAM.call(v10886.remove, v10886, [], JAM.policy.p3);
    var v10887 = this.element;
    JAM.call(v10887.removeClass, v10887, ["ui-accordion-icons"], JAM.policy.p3);
    return;
  }
  function v1461() {
    var b$$475 = this.options;
    var v4073 = b$$475.icons;
    if (v4073) {
      var v24982 = JAM.call(a$$507, null, ["<span></span>"], JAM.policy.p3);
      var v20653 = JAM.call(v24982.addClass, v24982, ["ui-icon " + b$$475.icons.header], JAM.policy.p3);
      JAM.call(v20653.prependTo, v20653, [this.headers], JAM.policy.p3);
      var v26918 = this.active;
      var v24984 = JAM.call(v26918.children, v26918, [".ui-icon"], JAM.policy.p3);
      var v20655 = JAM.call(v24984.toggleClass, v24984, [b$$475.icons.header], JAM.policy.p3);
      JAM.call(v20655.toggleClass, v20655, [b$$475.icons.headerSelected], JAM.policy.p3);
      var v16542 = this.element;
      JAM.call(v16542.addClass, v16542, ["ui-accordion-icons"], JAM.policy.p3);
    }
    return;
  }
  function v1460() {
    function v1459(a$$509) {
      var v10888 = b$$474._clickHandler;
      JAM.call(v10888.call, v10888, [b$$474, a$$509, this], JAM.policy.p3);
      JAM.call(a$$509.preventDefault, a$$509, [], JAM.policy.p3);
      return;
    }
    function v1458(a$$508) {
      return JAM.call(b$$474._keydown, b$$474, [a$$508], JAM.policy.p3);
    }
    function v1457() {
      if (c$$378.disabled) {
        return;
      }
      var v4075 = JAM.call(a$$507, null, [this], JAM.policy.p3);
      JAM.call(v4075.removeClass, v4075, ["ui-state-focus"], JAM.policy.p3);
      return;
    }
    function v1456() {
      if (c$$378.disabled) {
        return;
      }
      var v4077 = JAM.call(a$$507, null, [this], JAM.policy.p3);
      JAM.call(v4077.addClass, v4077, ["ui-state-focus"], JAM.policy.p3);
      return;
    }
    function v1455() {
      if (c$$378.disabled) {
        return;
      }
      var v4079 = JAM.call(a$$507, null, [this], JAM.policy.p3);
      JAM.call(v4079.removeClass, v4079, ["ui-state-hover"], JAM.policy.p3);
      return;
    }
    function v1454() {
      if (c$$378.disabled) {
        return;
      }
      var v4081 = JAM.call(a$$507, null, [this], JAM.policy.p3);
      JAM.call(v4081.addClass, v4081, ["ui-state-hover"], JAM.policy.p3);
      return;
    }
    var b$$474 = this;
    var c$$378 = b$$474.options;
    b$$474.running = 0;
    var v26920 = b$$474.element;
    var v24987 = JAM.call(v26920.addClass, v26920, ["ui-accordion ui-widget ui-helper-reset"], JAM.policy.p3);
    var v20657 = JAM.call(v24987.children, v24987, ["li"], JAM.policy.p3);
    JAM.call(v20657.addClass, v20657, ["ui-accordion-li-fix"], JAM.policy.p3);
    var v16543 = b$$474;
    var v29728 = b$$474.element;
    var v29140 = JAM.call(v29728.find, v29728, [c$$378.header], JAM.policy.p3);
    var v28257 = JAM.call(v29140.addClass, v29140, ["ui-accordion-header ui-helper-reset ui-state-default ui-corner-all"], JAM.policy.p3);
    var v26921 = JAM.call(v28257.bind, v28257, ["mouseenter.accordion", v1454], JAM.policy.p3);
    var v24988 = JAM.call(v26921.bind, v26921, ["mouseleave.accordion", v1455], JAM.policy.p3);
    var v20658 = JAM.call(v24988.bind, v24988, ["focus.accordion", v1456], JAM.policy.p3);
    var v31265 = JAM.call(v20658.bind, v20658, ["blur.accordion", v1457], JAM.policy.p3);
    v16543.headers = v31265;
    var v16544 = b$$474.headers;
    var v10889 = JAM.call(v16544.next, v16544, [], JAM.policy.p3);
    JAM.call(v10889.addClass, v10889, ["ui-accordion-content ui-helper-reset ui-widget-content ui-corner-bottom"], JAM.policy.p3);
    if (c$$378.navigation) {
      var v16545 = b$$474.element;
      var v10890 = JAM.call(v16545.find, v16545, ["a"], JAM.policy.p3);
      var v4082 = JAM.call(v10890.filter, v10890, [c$$378.navigationFilter], JAM.policy.p3);
      var d$$297 = JAM.call(v4082.eq, v4082, [0], JAM.policy.p3);
      if (d$$297.length) {
        var e$$270 = JAM.call(d$$297.closest, d$$297, [".ui-accordion-header"], JAM.policy.p3);
        var v4083;
        if (e$$270.length) {
          v4083 = b$$474.active = e$$270;
        } else {
          var v10892 = b$$474;
          var v16546 = JAM.call(d$$297.closest, d$$297, [".ui-accordion-content"], JAM.policy.p3);
          var v31266 = JAM.call(v16546.prev, v16546, [], JAM.policy.p3);
          v4083 = v10892.active = v31266;
        }
        v4083;
      }
    }
    var v30072 = b$$474;
    var v30895 = b$$474.active;
    if (!v30895) {
      v30895 = c$$378.active;
    }
    var v30680 = JAM.call(b$$474._findActive, b$$474, [v30895], JAM.policy.p3);
    var v30539 = JAM.call(v30680.addClass, v30680, ["ui-state-default ui-state-active"], JAM.policy.p3);
    var v30327 = JAM.call(v30539.toggleClass, v30539, ["ui-corner-all"], JAM.policy.p3);
    var v31267 = JAM.call(v30327.toggleClass, v30327, ["ui-corner-top"], JAM.policy.p3);
    v30072.active = v31267;
    var v30328 = b$$474.active;
    var v30073 = JAM.call(v30328.next, v30328, [], JAM.policy.p3);
    JAM.call(v30073.addClass, v30073, ["ui-accordion-content-active"], JAM.policy.p3);
    JAM.call(b$$474._createIcons, b$$474, [], JAM.policy.p3);
    JAM.call(b$$474.resize, b$$474, [], JAM.policy.p3);
    var v28258 = b$$474.element;
    JAM.call(v28258.attr, v28258, ["role", "tablist"], JAM.policy.p3);
    var v29730 = b$$474.headers;
    var v29141 = JAM.call(v29730.attr, v29730, ["role", "tab"], JAM.policy.p3);
    var v28259 = JAM.call(v29141.bind, v29141, ["keydown.accordion", v1458], JAM.policy.p3);
    var v26922 = JAM.call(v28259.next, v28259, [], JAM.policy.p3);
    JAM.call(v26922.attr, v26922, ["role", "tabpanel"], JAM.policy.p3);
    var v29142 = b$$474.headers;
    var v29731 = b$$474.active;
    if (!v29731) {
      v29731 = "";
    }
    var v28260 = JAM.call(v29142.not, v29142, [v29731], JAM.policy.p3);
    var v26923 = JAM.call(v28260.attr, v28260, [{"aria-expanded":"false", "aria-selected":"false", tabIndex:-1}], JAM.policy.p3);
    var v24989 = JAM.call(v26923.next, v26923, [], JAM.policy.p3);
    JAM.call(v24989.hide, v24989, [], JAM.policy.p3);
    var v20659;
    if (b$$474.active.length) {
      var v24990 = b$$474.active;
      v20659 = JAM.call(v24990.attr, v24990, [{"aria-expanded":"true", "aria-selected":"true", tabIndex:0}], JAM.policy.p3);
    } else {
      var v26925 = b$$474.headers;
      var v24992 = JAM.call(v26925.eq, v26925, [0], JAM.policy.p3);
      v20659 = JAM.call(v24992.attr, v24992, ["tabIndex", 0], JAM.policy.p3);
    }
    v20659;
    var v16547 = a$$507.browser.safari;
    if (!v16547) {
      var v24994 = b$$474.headers;
      var v20661 = JAM.call(v24994.find, v24994, ["a"], JAM.policy.p3);
      JAM.call(v20661.attr, v20661, ["tabIndex", -1], JAM.policy.p3);
    }
    var v10894 = c$$378.event;
    if (v10894) {
      var v16548 = b$$474.headers;
      var v26926 = c$$378.event;
      var v24995 = JAM.call(v26926.split, v26926, [" "], JAM.policy.p3);
      JAM.call(v16548.bind, v16548, [JAM.call(v24995.join, v24995, [".accordion "], JAM.policy.p3) + ".accordion", v1459], JAM.policy.p3);
    }
    return;
  }
  function v1453() {
    var v10895 = this.href;
    var v4086 = JAM.call(v10895.toLowerCase, v10895, [], JAM.policy.p3);
    var v10896 = location.href;
    return v4086 === JAM.call(v10896.toLowerCase, v10896, [], JAM.policy.p3);
  }
  JAM.call(a$$507.widget, a$$507, ["ui.accordion", {options:{active:0, animated:"slide", autoHeight:!0, clearStyle:!1, collapsible:!1, event:"click", fillSpace:!1, header:"> li > :first-child,> :not(li):even", icons:{header:"ui-icon-triangle-1-e", headerSelected:"ui-icon-triangle-1-s"}, navigation:!1, navigationFilter:v1453}, _create:v1460, _createIcons:v1461, _destroyIcons:v1462, destroy:v1463, _setOption:v1464, _keydown:v1465, resize:v1469, activate:v1470, _findActive:v1471, _clickHandler:v1472, 
  _toggle:v1474, _completed:v1475}], JAM.policy.p3);
  JAM.call(a$$507.extend, a$$507, [a$$507.ui.accordion, {version:"1.8.24", animations:{slide:v1479, bounceslide:v1480}}], JAM.policy.p3);
  return;
}
function v1452(a$$506, b$$471) {
  function v1451(b$$472) {
    function v1450() {
      function v1449() {
        JAM.call(h$$126.remove, h$$126, [], JAM.policy.p3);
        var v16553 = b$$472.callback;
        if (v16553) {
          var v20670 = b$$472.callback;
          JAM.call(v20670.apply, v20670, [c$$377[0], arguments], JAM.policy.p3);
        }
        JAM.call(c$$377.dequeue, c$$377, [], JAM.policy.p3);
        return;
      }
      var c$$377 = JAM.call(a$$506, null, [this], JAM.policy.p3);
      var d$$296 = JAM.call(a$$506, null, [b$$472.options.to], JAM.policy.p3);
      var e$$269 = JAM.call(d$$296.offset, d$$296, [], JAM.policy.p3);
      var f$$128 = {top:e$$269.top, left:e$$269.left, height:JAM.call(d$$296.innerHeight, d$$296, [], JAM.policy.p3), width:JAM.call(d$$296.innerWidth, d$$296, [], JAM.policy.p3)};
      var g$$155 = JAM.call(c$$377.offset, c$$377, [], JAM.policy.p3);
      var v20672 = JAM.call(a$$506, null, ['<div class="ui-effects-transfer"></div>'], JAM.policy.p3);
      var v16554 = JAM.call(v20672.appendTo, v20672, [document.body], JAM.policy.p3);
      var v10901 = JAM.call(v16554.addClass, v16554, [b$$472.options.className], JAM.policy.p3);
      var v4093 = JAM.call(v10901.css, v10901, [{top:g$$155.top, left:g$$155.left, height:JAM.call(c$$377.innerHeight, c$$377, [], JAM.policy.p3), width:JAM.call(c$$377.innerWidth, c$$377, [], JAM.policy.p3), position:"absolute"}], JAM.policy.p3);
      var h$$126 = JAM.call(v4093.animate, v4093, [f$$128, b$$472.duration, b$$472.options.easing, v1449], JAM.policy.p3);
      return;
    }
    return JAM.call(this.queue, this, [v1450], JAM.policy.p3);
  }
  a$$506.effects.transfer = v1451;
  return;
}
function v1448(a$$505, b$$469) {
  function v1447(b$$470) {
    function v1446() {
      function v1445() {
        var v24996 = e$$268 == "hide";
        if (v24996) {
          JAM.call(c$$376.hide, c$$376, [], JAM.policy.p3);
        }
        var v24997 = a$$505.effects;
        JAM.call(v24997.restore, v24997, [c$$376, d$$295], JAM.policy.p3);
        var v20675 = a$$505.effects;
        JAM.call(v20675.removeWrapper, v20675, [c$$376], JAM.policy.p3);
        var v16560 = b$$470.callback;
        if (v16560) {
          var v20676 = b$$470.callback;
          JAM.call(v20676.apply, v20676, [this, arguments], JAM.policy.p3);
        }
        JAM.call(c$$376.dequeue, c$$376, [], JAM.policy.p3);
        return;
      }
      var c$$376 = JAM.call(a$$505, null, [this], JAM.policy.p3);
      var d$$295 = ["position", "top", "bottom", "left", "right"];
      var v4097 = a$$505.effects;
      var v10904 = b$$470.options.mode;
      if (!v10904) {
        v10904 = "show";
      }
      var e$$268 = JAM.call(v4097.setMode, v4097, [c$$376, v10904], JAM.policy.p3);
      var v4099 = b$$470.options.direction;
      if (!v4099) {
        v4099 = "left";
      }
      var f$$127 = v4099;
      var v16563 = a$$505.effects;
      JAM.call(v16563.save, v16563, [c$$376, d$$295], JAM.policy.p3);
      JAM.call(c$$376.show, c$$376, [], JAM.policy.p3);
      var v16564 = a$$505.effects;
      var v10907 = JAM.call(v16564.createWrapper, v16564, [c$$376], JAM.policy.p3);
      JAM.call(v10907.css, v10907, [{overflow:"hidden"}], JAM.policy.p3);
      var v4100;
      var v16565 = f$$127 == "up";
      if (!v16565) {
        v16565 = f$$127 == "down";
      }
      if (v16565) {
        v4100 = "top";
      } else {
        v4100 = "left";
      }
      var g$$154 = v4100;
      var v4101;
      var v16566 = f$$127 == "up";
      if (!v16566) {
        v16566 = f$$127 == "left";
      }
      if (v16566) {
        v4101 = "pos";
      } else {
        v4101 = "neg";
      }
      var h$$125 = v4101;
      var v4102 = b$$470.options.distance;
      if (!v4102) {
        var v10912;
        if (g$$154 == "top") {
          v10912 = JAM.call(c$$376.outerHeight, c$$376, [!0], JAM.policy.p3);
        } else {
          v10912 = JAM.call(c$$376.outerWidth, c$$376, [!0], JAM.policy.p3);
        }
        v4102 = v10912;
      }
      var i$$182 = v4102;
      var v4103 = e$$268 == "show";
      if (v4103) {
        var v16570;
        if (h$$125 == "pos") {
          var v20679;
          if (JAM.call(isNaN, null, [i$$182], JAM.policy.p3)) {
            v20679 = "-" + i$$182;
          } else {
            v20679 = -i$$182;
          }
          v16570 = v20679;
        } else {
          v16570 = i$$182;
        }
        JAM.call(c$$376.css, c$$376, [g$$154, v16570], JAM.policy.p3);
      }
      var j$$91 = {};
      var v16571;
      if (e$$268 == "show") {
        var v20681;
        if (h$$125 == "pos") {
          v20681 = "+=";
        } else {
          v20681 = "-=";
        }
        v16571 = v20681;
      } else {
        var v20682;
        if (h$$125 == "pos") {
          v20682 = "-=";
        } else {
          v20682 = "+=";
        }
        v16571 = v20682;
      }
      JAM.set(j$$91, g$$154, v16571 + i$$182, JAM.policy.p2);
      JAM.call(c$$376.animate, c$$376, [j$$91, {queue:!1, duration:b$$470.duration, easing:b$$470.options.easing, complete:v1445}], JAM.policy.p3);
      return;
    }
    return JAM.call(this.queue, this, [v1446], JAM.policy.p3);
  }
  a$$505.effects.slide = v1447;
  return;
}
function v1444(a$$504, b$$467) {
  function v1443(b$$468) {
    function v1442() {
      function v1441() {
        JAM.call(c$$375.dequeue, c$$375, [], JAM.policy.p3);
        return;
      }
      function v1440() {
        var v16575 = a$$504.effects;
        JAM.call(v16575.restore, v16575, [c$$375, d$$294], JAM.policy.p3);
        var v16576 = a$$504.effects;
        JAM.call(v16576.removeWrapper, v16576, [c$$375], JAM.policy.p3);
        var v10917 = b$$468.callback;
        if (v10917) {
          var v16577 = b$$468.callback;
          JAM.call(v16577.apply, v16577, [this, arguments], JAM.policy.p3);
        }
        return;
      }
      var c$$375 = JAM.call(a$$504, null, [this], JAM.policy.p3);
      var d$$294 = ["position", "top", "bottom", "left", "right"];
      var v4105 = a$$504.effects;
      var v10918 = b$$468.options.mode;
      if (!v10918) {
        v10918 = "effect";
      }
      var e$$267 = JAM.call(v4105.setMode, v4105, [c$$375, v10918], JAM.policy.p3);
      var v4107 = b$$468.options.direction;
      if (!v4107) {
        v4107 = "left";
      }
      var f$$126 = v4107;
      var v4108 = b$$468.options.distance;
      if (!v4108) {
        v4108 = 20;
      }
      var g$$153 = v4108;
      var v4109 = b$$468.options.times;
      if (!v4109) {
        v4109 = 3;
      }
      var h$$124 = v4109;
      var v10925 = b$$468.duration;
      if (!v10925) {
        v10925 = b$$468.options.duration;
      }
      var v4110 = v10925;
      if (!v4110) {
        v4110 = 140;
      }
      var i$$181 = v4110;
      var v16582 = a$$504.effects;
      JAM.call(v16582.save, v16582, [c$$375, d$$294], JAM.policy.p3);
      JAM.call(c$$375.show, c$$375, [], JAM.policy.p3);
      var v10927 = a$$504.effects;
      JAM.call(v10927.createWrapper, v10927, [c$$375], JAM.policy.p3);
      var v4111;
      var v16583 = f$$126 == "up";
      if (!v16583) {
        v16583 = f$$126 == "down";
      }
      if (v16583) {
        v4111 = "top";
      } else {
        v4111 = "left";
      }
      var j$$90 = v4111;
      var v4112;
      var v16584 = f$$126 == "up";
      if (!v16584) {
        v16584 = f$$126 == "left";
      }
      if (v16584) {
        v4112 = "pos";
      } else {
        v4112 = "neg";
      }
      var k$$61 = v4112;
      var l$$70 = {};
      var m$$41 = {};
      var n$$90 = {};
      var v25001;
      if (k$$61 == "pos") {
        v25001 = "-=";
      } else {
        v25001 = "+=";
      }
      JAM.set(l$$70, j$$90, v25001 + g$$153, JAM.policy.p2);
      var v25002;
      if (k$$61 == "pos") {
        v25002 = "+=";
      } else {
        v25002 = "-=";
      }
      JAM.set(m$$41, j$$90, v25002 + g$$153 * 2, JAM.policy.p2);
      var v20690;
      if (k$$61 == "pos") {
        v20690 = "-=";
      } else {
        v20690 = "+=";
      }
      JAM.set(n$$90, j$$90, v20690 + g$$153 * 2, JAM.policy.p2);
      JAM.call(c$$375.animate, c$$375, [l$$70, i$$181, b$$468.options.easing], JAM.policy.p3);
      var p$$45 = 1;
      var v4115 = p$$45 < h$$124;
      for (;v4115;) {
        var v4113 = JAM.call(c$$375.animate, c$$375, [m$$41, i$$181, b$$468.options.easing], JAM.policy.p3);
        JAM.call(v4113.animate, v4113, [n$$90, i$$181, b$$468.options.easing], JAM.policy.p3);
        p$$45 = p$$45 + 1;
        v4115 = p$$45 < h$$124;
      }
      var v16589 = JAM.call(c$$375.animate, c$$375, [m$$41, i$$181, b$$468.options.easing], JAM.policy.p3);
      JAM.call(v16589.animate, v16589, [l$$70, i$$181 / 2, b$$468.options.easing, v1440], JAM.policy.p3);
      JAM.call(c$$375.queue, c$$375, ["fx", v1441], JAM.policy.p3);
      JAM.call(c$$375.dequeue, c$$375, [], JAM.policy.p3);
      return;
    }
    return JAM.call(this.queue, this, [v1442], JAM.policy.p3);
  }
  a$$504.effects.shake = v1443;
  return;
}
function v1439(a$$503, b$$463) {
  function v1438(b$$466) {
    function v1437() {
      function v1436() {
        var v26929 = c$$373.to.opacity === 0;
        if (v26929) {
          JAM.call(c$$373.css, c$$373, ["opacity", c$$373.from.opacity], JAM.policy.p3);
        }
        var v26930 = j$$89 == "hide";
        if (v26930) {
          JAM.call(c$$373.hide, c$$373, [], JAM.policy.p3);
        }
        var v25005 = a$$503.effects;
        var v26931;
        if (k$$60) {
          v26931 = d$$292;
        } else {
          v26931 = e$$266;
        }
        JAM.call(v25005.restore, v25005, [c$$373, v26931], JAM.policy.p3);
        var v20693 = a$$503.effects;
        JAM.call(v20693.removeWrapper, v20693, [c$$373], JAM.policy.p3);
        var v16592 = b$$466.callback;
        if (v16592) {
          var v20694 = b$$466.callback;
          JAM.call(v20694.apply, v20694, [this, arguments], JAM.policy.p3);
        }
        JAM.call(c$$373.dequeue, c$$373, [], JAM.policy.p3);
        return;
      }
      function v1435() {
        function v1434() {
          if (k$$60) {
            var v10933 = a$$503.effects;
            JAM.call(v10933.restore, v10933, [c$$374, f$$125], JAM.policy.p3);
          }
          return;
        }
        var c$$374 = JAM.call(a$$503, null, [this], JAM.policy.p3);
        if (k$$60) {
          var v10934 = a$$503.effects;
          JAM.call(v10934.save, v10934, [c$$374, f$$125], JAM.policy.p3);
        }
        var JSCompiler_object_inline_height_96 = JAM.call(c$$374.height, c$$374, [], JAM.policy.p3);
        var JSCompiler_object_inline_width_97 = JAM.call(c$$374.width, c$$374, [], JAM.policy.p3);
        c$$374.from = {height:JSCompiler_object_inline_height_96 * JSCompiler_object_inline_y_100, width:JSCompiler_object_inline_width_97 * JSCompiler_object_inline_x_101};
        c$$374.to = {height:JSCompiler_object_inline_height_96 * JSCompiler_object_inline_y_102, width:JSCompiler_object_inline_width_97 * JSCompiler_object_inline_x_103};
        var v25007 = JSCompiler_object_inline_y_100 != JSCompiler_object_inline_y_102;
        if (v25007) {
          var v28264 = c$$374;
          var v29146 = a$$503.effects;
          var v31268 = JAM.call(v29146.setTransition, v29146, [c$$374, h$$123, JSCompiler_object_inline_y_100, c$$374.from], JAM.policy.p3);
          v28264.from = v31268;
          var v28265 = c$$374;
          var v29148 = a$$503.effects;
          var v31269 = JAM.call(v29148.setTransition, v29148, [c$$374, h$$123, JSCompiler_object_inline_y_102, c$$374.to], JAM.policy.p3);
          v28265.to = v31269;
        }
        var v20695 = JSCompiler_object_inline_x_101 != JSCompiler_object_inline_x_103;
        if (v20695) {
          var v26936 = c$$374;
          var v28266 = a$$503.effects;
          var v31270 = JAM.call(v28266.setTransition, v28266, [c$$374, i$$180, JSCompiler_object_inline_x_101, c$$374.from], JAM.policy.p3);
          v26936.from = v31270;
          var v26937 = c$$374;
          var v28268 = a$$503.effects;
          var v31271 = JAM.call(v28268.setTransition, v28268, [c$$374, i$$180, JSCompiler_object_inline_x_103, c$$374.to], JAM.policy.p3);
          v26937.to = v31271;
        }
        JAM.call(c$$374.css, c$$374, [c$$374.from], JAM.policy.p3);
        JAM.call(c$$374.animate, c$$374, [c$$374.to, b$$466.duration, b$$466.options.easing, v1434], JAM.policy.p3);
        return;
      }
      var c$$373 = JAM.call(a$$503, null, [this], JAM.policy.p3);
      var d$$292 = ["position", "top", "bottom", "left", "right", "width", "height", "overflow", "opacity"];
      var e$$266 = ["position", "top", "bottom", "left", "right", "overflow", "opacity"];
      var f$$125 = ["width", "height", "overflow"];
      var g$$152 = ["fontSize"];
      var h$$123 = ["borderTopWidth", "borderBottomWidth", "paddingTop", "paddingBottom"];
      var i$$180 = ["borderLeftWidth", "borderRightWidth", "paddingLeft", "paddingRight"];
      var v4117 = a$$503.effects;
      var v10938 = b$$466.options.mode;
      if (!v10938) {
        v10938 = "effect";
      }
      var j$$89 = JAM.call(v4117.setMode, v4117, [c$$373, v10938], JAM.policy.p3);
      var v4119 = b$$466.options.restore;
      if (!v4119) {
        v4119 = !1;
      }
      var k$$60 = v4119;
      var v4120 = b$$466.options.scale;
      if (!v4120) {
        v4120 = "both";
      }
      var l$$69 = v4120;
      var m$$40 = b$$466.options.origin;
      var n$$89 = {height:JAM.call(c$$373.height, c$$373, [], JAM.policy.p3), width:JAM.call(c$$373.width, c$$373, [], JAM.policy.p3)};
      var v10943 = b$$466.options.from;
      if (!v10943) {
        v10943 = n$$89;
      }
      c$$373.from = v10943;
      var v10944 = b$$466.options.to;
      if (!v10944) {
        v10944 = n$$89;
      }
      c$$373.to = v10944;
      if (m$$40) {
        var v4124 = a$$503.effects;
        var p$$44 = JAM.call(v4124.getBaseline, v4124, [m$$40, n$$89], JAM.policy.p3);
        c$$373.from.top = (n$$89.height - c$$373.from.height) * p$$44.y;
        c$$373.from.left = (n$$89.width - c$$373.from.width) * p$$44.x;
        c$$373.to.top = (n$$89.height - c$$373.to.height) * p$$44.y;
        c$$373.to.left = (n$$89.width - c$$373.to.width) * p$$44.x;
      }
      var JSCompiler_object_inline_y_100 = c$$373.from.height / n$$89.height;
      var JSCompiler_object_inline_x_101 = c$$373.from.width / n$$89.width;
      var JSCompiler_object_inline_y_102 = c$$373.to.height / n$$89.height;
      var JSCompiler_object_inline_x_103 = c$$373.to.width / n$$89.width;
      var v10950 = l$$69 == "box";
      if (!v10950) {
        v10950 = l$$69 == "both";
      }
      if (v10950) {
        var v10951 = JSCompiler_object_inline_y_100 != JSCompiler_object_inline_y_102;
        if (v10951) {
          d$$292 = JAM.call(d$$292.concat, d$$292, [h$$123], JAM.policy.p3);
          var v25015 = c$$373;
          var v26943 = a$$503.effects;
          var v31272 = JAM.call(v26943.setTransition, v26943, [c$$373, h$$123, JSCompiler_object_inline_y_100, c$$373.from], JAM.policy.p3);
          v25015.from = v31272;
          var v20702 = c$$373;
          var v25016 = a$$503.effects;
          var v31273 = JAM.call(v25016.setTransition, v25016, [c$$373, h$$123, JSCompiler_object_inline_y_102, c$$373.to], JAM.policy.p3);
          v20702.to = v31273;
        }
        var v10952 = JSCompiler_object_inline_x_101 != JSCompiler_object_inline_x_103;
        if (v10952) {
          d$$292 = JAM.call(d$$292.concat, d$$292, [i$$180], JAM.policy.p3);
          var v25018 = c$$373;
          var v26945 = a$$503.effects;
          var v31274 = JAM.call(v26945.setTransition, v26945, [c$$373, i$$180, JSCompiler_object_inline_x_101, c$$373.from], JAM.policy.p3);
          v25018.from = v31274;
          var v20703 = c$$373;
          var v25019 = a$$503.effects;
          var v31275 = JAM.call(v25019.setTransition, v25019, [c$$373, i$$180, JSCompiler_object_inline_x_103, c$$373.to], JAM.policy.p3);
          v20703.to = v31275;
        }
      }
      var v28272 = l$$69 == "content";
      if (!v28272) {
        v28272 = l$$69 == "both";
      }
      var v26947 = v28272;
      if (v26947) {
        v26947 = JSCompiler_object_inline_y_100 != JSCompiler_object_inline_y_102;
      }
      var v25021 = v26947;
      if (v25021) {
        d$$292 = JAM.call(d$$292.concat, d$$292, [g$$152], JAM.policy.p3);
        var v29151 = c$$373;
        var v29732 = a$$503.effects;
        var v31276 = JAM.call(v29732.setTransition, v29732, [c$$373, g$$152, JSCompiler_object_inline_y_100, c$$373.from], JAM.policy.p3);
        v29151.from = v31276;
        var v28273 = c$$373;
        var v29152 = a$$503.effects;
        var v31277 = JAM.call(v29152.setTransition, v29152, [c$$373, g$$152, JSCompiler_object_inline_y_102, c$$373.to], JAM.policy.p3);
        v28273.to = v31277;
      }
      var v25022 = a$$503.effects;
      var v26948;
      if (k$$60) {
        v26948 = d$$292;
      } else {
        v26948 = e$$266;
      }
      JAM.call(v25022.save, v25022, [c$$373, v26948], JAM.policy.p3);
      JAM.call(c$$373.show, c$$373, [], JAM.policy.p3);
      var v16605 = a$$503.effects;
      JAM.call(v16605.createWrapper, v16605, [c$$373], JAM.policy.p3);
      var v10953 = JAM.call(c$$373.css, c$$373, ["overflow", "hidden"], JAM.policy.p3);
      JAM.call(v10953.css, v10953, [c$$373.from], JAM.policy.p3);
      var v10955 = l$$69 == "content";
      if (!v10955) {
        v10955 = l$$69 == "both";
      }
      if (v10955) {
        var v20704 = JAM.call(h$$123.concat, h$$123, [["marginTop", "marginBottom"]], JAM.policy.p3);
        h$$123 = JAM.call(v20704.concat, v20704, [g$$152], JAM.policy.p3);
        i$$180 = JAM.call(i$$180.concat, i$$180, [["marginLeft", "marginRight"]], JAM.policy.p3);
        var v16607 = JAM.call(d$$292.concat, d$$292, [h$$123], JAM.policy.p3);
        f$$125 = JAM.call(v16607.concat, v16607, [i$$180], JAM.policy.p3);
        var v10956 = JAM.call(c$$373.find, c$$373, ["*[width]"], JAM.policy.p3);
        JAM.call(v10956.each, v10956, [v1435], JAM.policy.p3);
      }
      JAM.call(c$$373.animate, c$$373, [c$$373.to, {queue:!1, duration:b$$466.duration, easing:b$$466.options.easing, complete:v1436}], JAM.policy.p3);
      return;
    }
    return JAM.call(this.queue, this, [v1437], JAM.policy.p3);
  }
  function v1433(b$$465) {
    function v1432() {
      var c$$372 = JAM.call(a$$503, null, [this], JAM.policy.p3);
      var d$$291 = JAM.call(a$$503.extend, a$$503, [!0, {}, b$$465.options], JAM.policy.p3);
      var v4139 = a$$503.effects;
      var v10960 = b$$465.options.mode;
      if (!v10960) {
        v10960 = "effect";
      }
      var e$$265 = JAM.call(v4139.setMode, v4139, [c$$372, v10960], JAM.policy.p3);
      var v4141 = JAM.call(parseInt, null, [b$$465.options.percent, 10], JAM.policy.p3);
      if (!v4141) {
        var v10962;
        if (JAM.call(parseInt, null, [b$$465.options.percent, 10], JAM.policy.p3) == 0) {
          v10962 = 0;
        } else {
          var v16612;
          if (e$$265 == "hide") {
            v16612 = 0;
          } else {
            v16612 = 100;
          }
          v10962 = v16612;
        }
        v4141 = v10962;
      }
      var f$$124 = v4141;
      var v4142 = b$$465.options.direction;
      if (!v4142) {
        v4142 = "both";
      }
      var g$$151 = v4142;
      var h$$122 = b$$465.options.origin;
      var v4144 = e$$265 != "effect";
      if (v4144) {
        var v16614 = h$$122;
        if (!v16614) {
          v16614 = ["middle", "center"];
        }
        d$$291.origin = v16614;
        d$$291.restore = !0;
      }
      var i$$179 = {height:JAM.call(c$$372.height, c$$372, [], JAM.policy.p3), width:JAM.call(c$$372.width, c$$372, [], JAM.policy.p3)};
      var v4147 = b$$465.options.from;
      if (!v4147) {
        var v10967;
        if (e$$265 == "show") {
          v10967 = {height:0, width:0};
        } else {
          v10967 = i$$179;
        }
        v4147 = v10967;
      }
      c$$372.from = v4147;
      var v4148;
      if (g$$151 != "horizontal") {
        v4148 = f$$124 / 100;
      } else {
        v4148 = 1;
      }
      var JSCompiler_object_inline_y_94 = v4148;
      var v4149;
      if (g$$151 != "vertical") {
        v4149 = f$$124 / 100;
      } else {
        v4149 = 1;
      }
      var JSCompiler_object_inline_x_95 = v4149;
      c$$372.to = {height:i$$179.height * JSCompiler_object_inline_y_94, width:i$$179.width * JSCompiler_object_inline_x_95};
      var v28276 = b$$465.options.fade;
      if (v28276) {
        var v29734 = e$$265 == "show";
        if (v29734) {
          c$$372.from.opacity = 0;
          c$$372.to.opacity = 1;
        }
        var v29735 = e$$265 == "hide";
        if (v29735) {
          c$$372.from.opacity = 1;
          c$$372.to.opacity = 0;
        }
      }
      d$$291.from = c$$372.from;
      d$$291.to = c$$372.to;
      d$$291.mode = e$$265;
      JAM.call(c$$372.effect, c$$372, ["size", d$$291, b$$465.duration, b$$465.callback], JAM.policy.p3);
      JAM.call(c$$372.dequeue, c$$372, [], JAM.policy.p3);
      return;
    }
    return JAM.call(this.queue, this, [v1432], JAM.policy.p3);
  }
  function v1431(b$$464) {
    function v1430() {
      var c$$371 = JAM.call(a$$503, null, [this], JAM.policy.p3);
      var v4150 = a$$503.effects;
      var v10971 = b$$464.options.mode;
      if (!v10971) {
        v10971 = "hide";
      }
      var d$$290 = JAM.call(v4150.setMode, v4150, [c$$371, v10971], JAM.policy.p3);
      var v4152 = JAM.call(parseInt, null, [b$$464.options.percent, 10], JAM.policy.p3);
      if (!v4152) {
        v4152 = 150;
      }
      var e$$264 = v4152;
      var f$$123 = e$$264 / 100;
      var g$$150 = {height:JAM.call(c$$371.height, c$$371, [], JAM.policy.p3), width:JAM.call(c$$371.width, c$$371, [], JAM.policy.p3)};
      var v16621 = b$$464.options;
      var v20709 = !0;
      var v25026;
      if (d$$290 == "hide") {
        v25026 = e$$264;
      } else {
        v25026 = 100;
      }
      var v20710 = v25026;
      var v25027;
      if (d$$290 == "hide") {
        v25027 = g$$150;
      } else {
        v25027 = {height:g$$150.height * f$$123, width:g$$150.width * f$$123};
      }
      JAM.call(a$$503.extend, a$$503, [v16621, {fade:v20709, mode:d$$290, percent:v20710, from:v25027}], JAM.policy.p3);
      JAM.call(c$$371.effect, c$$371, ["scale", b$$464.options, b$$464.duration, b$$464.callback], JAM.policy.p3);
      JAM.call(c$$371.dequeue, c$$371, [], JAM.policy.p3);
      return;
    }
    return JAM.call(this.queue, this, [v1430], JAM.policy.p3);
  }
  a$$503.effects.puff = v1431;
  a$$503.effects.scale = v1433;
  a$$503.effects.size = v1438;
  return;
}
function v1429(a$$502, b$$461) {
  function v1428(b$$462) {
    function v1427() {
      function v1426() {
        JAM.call(c$$370.dequeue, c$$370, [], JAM.policy.p3);
        return;
      }
      function v1425() {
        var v10975 = h$$121 == 0;
        if (v10975) {
          JAM.call(c$$370.hide, c$$370, [], JAM.policy.p3);
        }
        var v10976 = b$$462.callback;
        if (v10976) {
          var v16628 = b$$462.callback;
          JAM.call(v16628.apply, v16628, [this, arguments], JAM.policy.p3);
        }
        return;
      }
      var c$$370 = JAM.call(a$$502, null, [this], JAM.policy.p3);
      var v4155 = a$$502.effects;
      var v10977 = b$$462.options.mode;
      if (!v10977) {
        v10977 = "show";
      }
      var d$$289 = JAM.call(v4155.setMode, v4155, [c$$370, v10977], JAM.policy.p3);
      var v16631 = b$$462.options.times;
      if (!v16631) {
        v16631 = 5;
      }
      var e$$263 = v16631 * 2 - 1;
      var v4158;
      if (b$$462.duration) {
        v4158 = b$$462.duration / 2;
      } else {
        v4158 = a$$502.fx.speeds._default / 2;
      }
      var f$$122 = v4158;
      var g$$149 = JAM.call(c$$370.is, c$$370, [":visible"], JAM.policy.p3);
      var h$$121 = 0;
      if (!g$$149) {
        var v20715 = JAM.call(c$$370.css, c$$370, ["opacity", 0], JAM.policy.p3);
        JAM.call(v20715.show, v20715, [], JAM.policy.p3);
        h$$121 = 1;
      }
      var v20716 = d$$289 == "hide";
      if (v20716) {
        v20716 = g$$149;
      }
      var v16634 = v20716;
      if (!v16634) {
        var v20717 = d$$289 == "show";
        if (v20717) {
          v20717 = !g$$149;
        }
        v16634 = v20717;
      }
      var v10982 = v16634;
      if (v10982) {
        e$$263 = e$$263 - 1;
      }
      var i$$178 = 0;
      var v4159 = i$$178 < e$$263;
      for (;v4159;) {
        JAM.call(c$$370.animate, c$$370, [{opacity:h$$121}, f$$122, b$$462.options.easing], JAM.policy.p3);
        h$$121 = (h$$121 + 1) % 2;
        i$$178 = i$$178 + 1;
        v4159 = i$$178 < e$$263;
      }
      JAM.call(c$$370.animate, c$$370, [{opacity:h$$121}, f$$122, b$$462.options.easing, v1425], JAM.policy.p3);
      var v10988 = JAM.call(c$$370.queue, c$$370, ["fx", v1426], JAM.policy.p3);
      JAM.call(v10988.dequeue, v10988, [], JAM.policy.p3);
      return;
    }
    return JAM.call(this.queue, this, [v1427], JAM.policy.p3);
  }
  a$$502.effects.pulsate = v1428;
  return;
}
function v1424(a$$501, b$$459) {
  function v1423(b$$460) {
    function v1422() {
      function v1421() {
        var v25028 = e$$262 == "hide";
        if (v25028) {
          JAM.call(c$$369.hide, c$$369, [], JAM.policy.p3);
        }
        var v25029 = a$$501.effects;
        JAM.call(v25029.restore, v25029, [c$$369, d$$288], JAM.policy.p3);
        var v25030 = e$$262 == "show";
        if (v25030) {
          v25030 = !a$$501.support.opacity;
        }
        var v20719 = v25030;
        if (v20719) {
          var v25031 = this.style;
          JAM.call(v25031.removeAttribute, v25031, ["filter"], JAM.policy.p3);
        }
        var v16637 = b$$460.callback;
        if (v16637) {
          var v20720 = b$$460.callback;
          JAM.call(v20720.apply, v20720, [this, arguments], JAM.policy.p3);
        }
        JAM.call(c$$369.dequeue, c$$369, [], JAM.policy.p3);
        return;
      }
      var c$$369 = JAM.call(a$$501, null, [this], JAM.policy.p3);
      var d$$288 = ["backgroundImage", "backgroundColor", "opacity"];
      var v4161 = a$$501.effects;
      var v10989 = b$$460.options.mode;
      if (!v10989) {
        v10989 = "show";
      }
      var e$$262 = JAM.call(v4161.setMode, v4161, [c$$369, v10989], JAM.policy.p3);
      var f$$121 = {backgroundColor:JAM.call(c$$369.css, c$$369, ["backgroundColor"], JAM.policy.p3)};
      var v16640 = e$$262 == "hide";
      if (v16640) {
        f$$121.opacity = 0;
      }
      var v16641 = a$$501.effects;
      JAM.call(v16641.save, v16641, [c$$369, d$$288], JAM.policy.p3);
      var v16642 = JAM.call(c$$369.show, c$$369, [], JAM.policy.p3);
      var v25032 = b$$460.options.color;
      if (!v25032) {
        v25032 = "#ffff99";
      }
      var v10990 = JAM.call(v16642.css, v16642, [{backgroundImage:"none", backgroundColor:v25032}], JAM.policy.p3);
      JAM.call(v10990.animate, v10990, [f$$121, {queue:!1, duration:b$$460.duration, easing:b$$460.options.easing, complete:v1421}], JAM.policy.p3);
      return;
    }
    return JAM.call(this.queue, this, [v1422], JAM.policy.p3);
  }
  a$$501.effects.highlight = v1423;
  return;
}
function v1420(a$$500, b$$457) {
  function v1419(b$$458) {
    function v1418() {
      function v1417() {
        var v25033 = e$$261 == "hide";
        if (v25033) {
          JAM.call(c$$368.hide, c$$368, [], JAM.policy.p3);
        }
        var v25034 = a$$500.effects;
        JAM.call(v25034.restore, v25034, [c$$368, d$$287], JAM.policy.p3);
        var v20723 = a$$500.effects;
        JAM.call(v20723.removeWrapper, v20723, [c$$368], JAM.policy.p3);
        var v16647 = b$$458.callback;
        if (v16647) {
          var v20724 = b$$458.callback;
          JAM.call(v20724.apply, v20724, [c$$368[0], arguments], JAM.policy.p3);
        }
        JAM.call(c$$368.dequeue, c$$368, [], JAM.policy.p3);
        return;
      }
      var c$$368 = JAM.call(a$$500, null, [this], JAM.policy.p3);
      var d$$287 = ["position", "top", "bottom", "left", "right"];
      var v4165 = a$$500.effects;
      var v10992 = b$$458.options.mode;
      if (!v10992) {
        v10992 = "hide";
      }
      var e$$261 = JAM.call(v4165.setMode, v4165, [c$$368, v10992], JAM.policy.p3);
      var v4167 = b$$458.options.size;
      if (!v4167) {
        v4167 = 15;
      }
      var f$$120 = v4167;
      var g$$148 = !!b$$458.options.horizFirst;
      var v4169;
      if (b$$458.duration) {
        v4169 = b$$458.duration / 2;
      } else {
        v4169 = a$$500.fx.speeds._default / 2;
      }
      var h$$120 = v4169;
      var v10999 = a$$500.effects;
      JAM.call(v10999.save, v10999, [c$$368, d$$287], JAM.policy.p3);
      JAM.call(c$$368.show, c$$368, [], JAM.policy.p3);
      var v11000 = a$$500.effects;
      var v4170 = JAM.call(v11000.createWrapper, v11000, [c$$368], JAM.policy.p3);
      var i$$177 = JAM.call(v4170.css, v4170, [{overflow:"hidden"}], JAM.policy.p3);
      var j$$87 = e$$261 == "show" != g$$148;
      var v4173;
      if (j$$87) {
        v4173 = ["width", "height"];
      } else {
        v4173 = ["height", "width"];
      }
      var k$$59 = v4173;
      var v4174;
      if (j$$87) {
        v4174 = [JAM.call(i$$177.width, i$$177, [], JAM.policy.p3), JAM.call(i$$177.height, i$$177, [], JAM.policy.p3)];
      } else {
        v4174 = [JAM.call(i$$177.height, i$$177, [], JAM.policy.p3), JAM.call(i$$177.width, i$$177, [], JAM.policy.p3)];
      }
      var l$$68 = v4174;
      var m$$39 = JAM.call(/([0-9]+)%/.exec, /([0-9]+)%/, [f$$120], JAM.policy.p3);
      if (m$$39) {
        var v16652 = JAM.call(parseInt, null, [m$$39[1], 10], JAM.policy.p3) / 100;
        var v25036;
        if (e$$261 == "hide") {
          v25036 = 0;
        } else {
          v25036 = 1;
        }
        f$$120 = v16652 * l$$68[v25036];
      }
      var v11005 = e$$261 == "show";
      if (v11005) {
        var v20729;
        if (g$$148) {
          v20729 = {height:0, width:f$$120};
        } else {
          v20729 = {height:f$$120, width:0};
        }
        JAM.call(i$$177.css, i$$177, [v20729], JAM.policy.p3);
      }
      var n$$88 = {};
      var p$$43 = {};
      var v16655 = k$$59[0];
      var v20730;
      if (e$$261 == "show") {
        v20730 = l$$68[0];
      } else {
        v20730 = f$$120;
      }
      JAM.set(n$$88, v16655, v20730, JAM.policy.p2);
      var v16656 = k$$59[1];
      var v20731;
      if (e$$261 == "show") {
        v20731 = l$$68[1];
      } else {
        v20731 = 0;
      }
      JAM.set(p$$43, v16656, v20731, JAM.policy.p2);
      var v11006 = JAM.call(i$$177.animate, i$$177, [n$$88, h$$120, b$$458.options.easing], JAM.policy.p3);
      JAM.call(v11006.animate, v11006, [p$$43, h$$120, b$$458.options.easing, v1417], JAM.policy.p3);
      return;
    }
    return JAM.call(this.queue, this, [v1418], JAM.policy.p3);
  }
  a$$500.effects.fold = v1419;
  return;
}
function v1416(a$$499, b$$455) {
  function v1415(b$$456) {
    function v1414() {
      function v1413() {
        var v11008 = b$$456.callback;
        if (v11008) {
          var v16659 = b$$456.callback;
          JAM.call(v16659.apply, v16659, [this, arguments], JAM.policy.p3);
        }
        JAM.call(c$$367.dequeue, c$$367, [], JAM.policy.p3);
        return;
      }
      var c$$367 = JAM.call(a$$499, null, [this], JAM.policy.p3);
      var v4176 = a$$499.effects;
      var v11009 = b$$456.options.mode;
      if (!v11009) {
        v11009 = "hide";
      }
      var d$$286 = JAM.call(v4176.setMode, v4176, [c$$367, v11009], JAM.policy.p3);
      JAM.call(c$$367.animate, c$$367, [{opacity:d$$286}, {queue:!1, duration:b$$456.duration, easing:b$$456.options.easing, complete:v1413}], JAM.policy.p3);
      return;
    }
    return JAM.call(this.queue, this, [v1414], JAM.policy.p3);
  }
  a$$499.effects.fade = v1415;
  return;
}
function v1412(a$$498, b$$453) {
  function v1411(b$$454) {
    function v1410() {
      function v1409() {
        var v20733;
        if (b$$454.options.mode == "show") {
          v20733 = JAM.call(e$$260.css, e$$260, [{visibility:"visible"}], JAM.policy.p3);
        } else {
          var v25040 = JAM.call(e$$260.css, e$$260, [{visibility:"visible"}], JAM.policy.p3);
          v20733 = JAM.call(v25040.hide, v25040, [], JAM.policy.p3);
        }
        v20733;
        var v20734 = b$$454.callback;
        if (v20734) {
          var v25042 = b$$454.callback;
          JAM.call(v25042.apply, v25042, [e$$260[0]], JAM.policy.p3);
        }
        JAM.call(e$$260.dequeue, e$$260, [], JAM.policy.p3);
        var v11013 = JAM.call(a$$498, null, ["div.ui-effects-explode"], JAM.policy.p3);
        JAM.call(v11013.remove, v11013, [], JAM.policy.p3);
        return;
      }
      var v4181;
      if (b$$454.options.pieces) {
        v4181 = JAM.call(Math.round, Math, [JAM.call(Math.sqrt, Math, [b$$454.options.pieces], JAM.policy.p3)], JAM.policy.p3);
      } else {
        v4181 = 3;
      }
      var c$$366 = v4181;
      var v4182;
      if (b$$454.options.pieces) {
        v4182 = JAM.call(Math.round, Math, [JAM.call(Math.sqrt, Math, [b$$454.options.pieces], JAM.policy.p3)], JAM.policy.p3);
      } else {
        v4182 = 3;
      }
      var d$$285 = v4182;
      var v4183 = b$$454.options;
      var v11018;
      if (b$$454.options.mode == "toggle") {
        var v16667;
        var v25045 = JAM.call(a$$498, null, [this], JAM.policy.p3);
        if (JAM.call(v25045.is, v25045, [":visible"], JAM.policy.p3)) {
          v16667 = "hide";
        } else {
          v16667 = "show";
        }
        v11018 = v16667;
      } else {
        v11018 = b$$454.options.mode;
      }
      v4183.mode = v11018;
      var v11019 = JAM.call(a$$498, null, [this], JAM.policy.p3);
      var v4184 = JAM.call(v11019.show, v11019, [], JAM.policy.p3);
      var e$$260 = JAM.call(v4184.css, v4184, ["visibility", "hidden"], JAM.policy.p3);
      var f$$119 = JAM.call(e$$260.offset, e$$260, [], JAM.policy.p3);
      var v11020 = f$$119;
      var v20739 = v11020.top;
      var v25046 = JAM.call(parseInt, null, [JAM.call(e$$260.css, e$$260, ["marginTop"], JAM.policy.p3), 10], JAM.policy.p3);
      if (!v25046) {
        v25046 = 0;
      }
      v11020.top = v20739 - v25046;
      var v11021 = f$$119;
      var v20741 = v11021.left;
      var v25047 = JAM.call(parseInt, null, [JAM.call(e$$260.css, e$$260, ["marginLeft"], JAM.policy.p3), 10], JAM.policy.p3);
      if (!v25047) {
        v25047 = 0;
      }
      v11021.left = v20741 - v25047;
      var g$$147 = JAM.call(e$$260.outerWidth, e$$260, [!0], JAM.policy.p3);
      var h$$119 = JAM.call(e$$260.outerHeight, e$$260, [!0], JAM.policy.p3);
      var i$$176 = 0;
      var v4191 = i$$176 < c$$366;
      for (;v4191;) {
        var j$$86 = 0;
        var v4190 = j$$86 < d$$285;
        for (;v4190;) {
          var v28281 = JAM.call(e$$260.clone, e$$260, [], JAM.policy.p3);
          var v26964 = JAM.call(v28281.appendTo, v28281, ["body"], JAM.policy.p3);
          var v25048 = JAM.call(v26964.wrap, v26964, ["<div></div>"], JAM.policy.p3);
          var v20743 = JAM.call(v25048.css, v25048, [{position:"absolute", visibility:"visible", left:-j$$86 * (g$$147 / d$$285), top:-i$$176 * (h$$119 / c$$366)}], JAM.policy.p3);
          var v16670 = JAM.call(v20743.parent, v20743, [], JAM.policy.p3);
          var v11022 = JAM.call(v16670.addClass, v16670, ["ui-effects-explode"], JAM.policy.p3);
          var v16671 = g$$147 / d$$285;
          var v16672 = h$$119 / c$$366;
          var v20744 = f$$119.left + j$$86 * (g$$147 / d$$285);
          var v25052;
          if (b$$454.options.mode == "show") {
            v25052 = (j$$86 - JAM.call(Math.floor, Math, [d$$285 / 2], JAM.policy.p3)) * (g$$147 / d$$285);
          } else {
            v25052 = 0;
          }
          var v16673 = v20744 + v25052;
          var v20746 = f$$119.top + i$$176 * (h$$119 / c$$366);
          var v25055;
          if (b$$454.options.mode == "show") {
            v25055 = (i$$176 - JAM.call(Math.floor, Math, [c$$366 / 2], JAM.policy.p3)) * (h$$119 / c$$366);
          } else {
            v25055 = 0;
          }
          var v16674 = v20746 + v25055;
          var v20748;
          if (b$$454.options.mode == "show") {
            v20748 = 0;
          } else {
            v20748 = 1;
          }
          var v4187 = JAM.call(v11022.css, v11022, [{position:"absolute", overflow:"hidden", width:v16671, height:v16672, left:v16673, top:v16674, opacity:v20748}], JAM.policy.p3);
          var v16676 = f$$119.left + j$$86 * (g$$147 / d$$285);
          var v20751;
          if (b$$454.options.mode == "show") {
            v20751 = 0;
          } else {
            v20751 = (j$$86 - JAM.call(Math.floor, Math, [d$$285 / 2], JAM.policy.p3)) * (g$$147 / d$$285);
          }
          var v11024 = v16676 + v20751;
          var v16678 = f$$119.top + i$$176 * (h$$119 / c$$366);
          var v20754;
          if (b$$454.options.mode == "show") {
            v20754 = 0;
          } else {
            v20754 = (i$$176 - JAM.call(Math.floor, Math, [c$$366 / 2], JAM.policy.p3)) * (h$$119 / c$$366);
          }
          var v11025 = v16678 + v20754;
          var v16680;
          if (b$$454.options.mode == "show") {
            v16680 = 1;
          } else {
            v16680 = 0;
          }
          var v4188 = {left:v11024, top:v11025, opacity:v16680};
          var v11027 = b$$454.duration;
          if (!v11027) {
            v11027 = 500;
          }
          JAM.call(v4187.animate, v4187, [v4188, v11027], JAM.policy.p3);
          j$$86 = j$$86 + 1;
          v4190 = j$$86 < d$$285;
        }
        i$$176 = i$$176 + 1;
        v4191 = i$$176 < c$$366;
      }
      var v11028 = b$$454.duration;
      if (!v11028) {
        v11028 = 500;
      }
      JAM.call(setTimeout, null, [v1409, v11028], JAM.policy.p3);
      return;
    }
    return JAM.call(this.queue, this, [v1410], JAM.policy.p3);
  }
  a$$498.effects.explode = v1411;
  return;
}
function v1408(a$$497, b$$451) {
  function v1407(b$$452) {
    function v1406() {
      function v1405() {
        var v25066 = e$$259 == "hide";
        if (v25066) {
          JAM.call(c$$365.hide, c$$365, [], JAM.policy.p3);
        }
        var v25067 = a$$497.effects;
        JAM.call(v25067.restore, v25067, [c$$365, d$$284], JAM.policy.p3);
        var v20756 = a$$497.effects;
        JAM.call(v20756.removeWrapper, v20756, [c$$365], JAM.policy.p3);
        var v16683 = b$$452.callback;
        if (v16683) {
          var v20757 = b$$452.callback;
          JAM.call(v20757.apply, v20757, [this, arguments], JAM.policy.p3);
        }
        JAM.call(c$$365.dequeue, c$$365, [], JAM.policy.p3);
        return;
      }
      var c$$365 = JAM.call(a$$497, null, [this], JAM.policy.p3);
      var d$$284 = ["position", "top", "bottom", "left", "right", "opacity"];
      var v4194 = a$$497.effects;
      var v11029 = b$$452.options.mode;
      if (!v11029) {
        v11029 = "hide";
      }
      var e$$259 = JAM.call(v4194.setMode, v4194, [c$$365, v11029], JAM.policy.p3);
      var v4196 = b$$452.options.direction;
      if (!v4196) {
        v4196 = "left";
      }
      var f$$118 = v4196;
      var v16686 = a$$497.effects;
      JAM.call(v16686.save, v16686, [c$$365, d$$284], JAM.policy.p3);
      JAM.call(c$$365.show, c$$365, [], JAM.policy.p3);
      var v11032 = a$$497.effects;
      JAM.call(v11032.createWrapper, v11032, [c$$365], JAM.policy.p3);
      var v4197;
      var v16687 = f$$118 == "up";
      if (!v16687) {
        v16687 = f$$118 == "down";
      }
      if (v16687) {
        v4197 = "top";
      } else {
        v4197 = "left";
      }
      var g$$146 = v4197;
      var v4198;
      var v16688 = f$$118 == "up";
      if (!v16688) {
        v16688 = f$$118 == "left";
      }
      if (v16688) {
        v4198 = "pos";
      } else {
        v4198 = "neg";
      }
      var h$$118 = v4198;
      var v4199 = b$$452.options.distance;
      if (!v4199) {
        var v11036;
        if (g$$146 == "top") {
          v11036 = JAM.call(c$$365.outerHeight, c$$365, [!0], JAM.policy.p3) / 2;
        } else {
          v11036 = JAM.call(c$$365.outerWidth, c$$365, [!0], JAM.policy.p3) / 2;
        }
        v4199 = v11036;
      }
      var i$$175 = v4199;
      var v4200 = e$$259 == "show";
      if (v4200) {
        var v11038 = JAM.call(c$$365.css, c$$365, ["opacity", 0], JAM.policy.p3);
        var v16692;
        if (h$$118 == "pos") {
          v16692 = -i$$175;
        } else {
          v16692 = i$$175;
        }
        JAM.call(v11038.css, v11038, [g$$146, v16692], JAM.policy.p3);
      }
      var v11040;
      if (e$$259 == "show") {
        v11040 = 1;
      } else {
        v11040 = 0;
      }
      var j$$85 = {opacity:v11040};
      var v16694;
      if (e$$259 == "show") {
        var v20763;
        if (h$$118 == "pos") {
          v20763 = "+=";
        } else {
          v20763 = "-=";
        }
        v16694 = v20763;
      } else {
        var v20764;
        if (h$$118 == "pos") {
          v20764 = "-=";
        } else {
          v20764 = "+=";
        }
        v16694 = v20764;
      }
      JAM.set(j$$85, g$$146, v16694 + i$$175, JAM.policy.p2);
      JAM.call(c$$365.animate, c$$365, [j$$85, {queue:!1, duration:b$$452.duration, easing:b$$452.options.easing, complete:v1405}], JAM.policy.p3);
      return;
    }
    return JAM.call(this.queue, this, [v1406], JAM.policy.p3);
  }
  a$$497.effects.drop = v1407;
  return;
}
function v1404(a$$496, b$$449) {
  function v1403(b$$450) {
    function v1402() {
      function v1401() {
        var v25070 = e$$258 == "hide";
        if (v25070) {
          JAM.call(c$$364.hide, c$$364, [], JAM.policy.p3);
        }
        var v25071 = a$$496.effects;
        JAM.call(v25071.restore, v25071, [c$$364, d$$283], JAM.policy.p3);
        var v20767 = a$$496.effects;
        JAM.call(v20767.removeWrapper, v20767, [c$$364], JAM.policy.p3);
        var v16698 = b$$450.callback;
        if (v16698) {
          var v20768 = b$$450.callback;
          JAM.call(v20768.apply, v20768, [c$$364[0], arguments], JAM.policy.p3);
        }
        JAM.call(c$$364.dequeue, c$$364, [], JAM.policy.p3);
        return;
      }
      var c$$364 = JAM.call(a$$496, null, [this], JAM.policy.p3);
      var d$$283 = ["position", "top", "bottom", "left", "right", "height", "width"];
      var v4203 = a$$496.effects;
      var v11043 = b$$450.options.mode;
      if (!v11043) {
        v11043 = "hide";
      }
      var e$$258 = JAM.call(v4203.setMode, v4203, [c$$364, v11043], JAM.policy.p3);
      var v4205 = b$$450.options.direction;
      if (!v4205) {
        v4205 = "vertical";
      }
      var f$$117 = v4205;
      var v11046 = a$$496.effects;
      JAM.call(v11046.save, v11046, [c$$364, d$$283], JAM.policy.p3);
      JAM.call(c$$364.show, c$$364, [], JAM.policy.p3);
      var v11047 = a$$496.effects;
      var v4206 = JAM.call(v11047.createWrapper, v11047, [c$$364], JAM.policy.p3);
      var g$$145 = JAM.call(v4206.css, v4206, [{overflow:"hidden"}], JAM.policy.p3);
      var v4208;
      if (c$$364[0].tagName == "IMG") {
        v4208 = g$$145;
      } else {
        v4208 = c$$364;
      }
      var h$$117 = v4208;
      var v4209;
      if (f$$117 == "vertical") {
        v4209 = "height";
      } else {
        v4209 = "width";
      }
      var JSCompiler_object_inline_size_92 = v4209;
      var v4210;
      if (f$$117 == "vertical") {
        v4210 = "top";
      } else {
        v4210 = "left";
      }
      var JSCompiler_object_inline_position_93 = v4210;
      var v4211;
      if (f$$117 == "vertical") {
        v4211 = JAM.call(h$$117.height, h$$117, [], JAM.policy.p3);
      } else {
        v4211 = JAM.call(h$$117.width, h$$117, [], JAM.policy.p3);
      }
      var j$$84 = v4211;
      var v4212 = e$$258 == "show";
      if (v4212) {
        JAM.call(h$$117.css, h$$117, [JSCompiler_object_inline_size_92, 0], JAM.policy.p3);
        JAM.call(h$$117.css, h$$117, [JSCompiler_object_inline_position_93, j$$84 / 2], JAM.policy.p3);
      }
      var k$$58 = {};
      var v16703;
      if (e$$258 == "show") {
        v16703 = j$$84;
      } else {
        v16703 = 0;
      }
      JAM.set(k$$58, JSCompiler_object_inline_size_92, v16703, JAM.policy.p2);
      var v16704;
      if (e$$258 == "show") {
        v16704 = 0;
      } else {
        v16704 = j$$84 / 2;
      }
      JAM.set(k$$58, JSCompiler_object_inline_position_93, v16704, JAM.policy.p2);
      JAM.call(h$$117.animate, h$$117, [k$$58, {queue:!1, duration:b$$450.duration, easing:b$$450.options.easing, complete:v1401}], JAM.policy.p3);
      return;
    }
    return JAM.call(this.queue, this, [v1402], JAM.policy.p3);
  }
  a$$496.effects.clip = v1403;
  return;
}
function v1400(a$$495, b$$447) {
  function v1399(b$$448) {
    function v1398() {
      function v1397() {
        JAM.call(c$$363.dequeue, c$$363, [], JAM.policy.p3);
        return;
      }
      function v1396() {
        var v16708 = a$$495.effects;
        JAM.call(v16708.restore, v16708, [c$$363, d$$282], JAM.policy.p3);
        var v16709 = a$$495.effects;
        JAM.call(v16709.removeWrapper, v16709, [c$$363], JAM.policy.p3);
        var v11053 = b$$448.callback;
        if (v11053) {
          var v16710 = b$$448.callback;
          JAM.call(v16710.apply, v16710, [this, arguments], JAM.policy.p3);
        }
        return;
      }
      function v1395() {
        JAM.call(c$$363.hide, c$$363, [], JAM.policy.p3);
        var v20774 = a$$495.effects;
        JAM.call(v20774.restore, v20774, [c$$363, d$$282], JAM.policy.p3);
        var v16711 = a$$495.effects;
        JAM.call(v16711.removeWrapper, v16711, [c$$363], JAM.policy.p3);
        var v11054 = b$$448.callback;
        if (v11054) {
          var v16712 = b$$448.callback;
          JAM.call(v16712.apply, v16712, [this, arguments], JAM.policy.p3);
        }
        return;
      }
      var c$$363 = JAM.call(a$$495, null, [this], JAM.policy.p3);
      var d$$282 = ["position", "top", "bottom", "left", "right"];
      var v4214 = a$$495.effects;
      var v11055 = b$$448.options.mode;
      if (!v11055) {
        v11055 = "effect";
      }
      var e$$257 = JAM.call(v4214.setMode, v4214, [c$$363, v11055], JAM.policy.p3);
      var v4216 = b$$448.options.direction;
      if (!v4216) {
        v4216 = "up";
      }
      var f$$116 = v4216;
      var v4217 = b$$448.options.distance;
      if (!v4217) {
        v4217 = 20;
      }
      var g$$144 = v4217;
      var v4218 = b$$448.options.times;
      if (!v4218) {
        v4218 = 5;
      }
      var h$$116 = v4218;
      var v4219 = b$$448.duration;
      if (!v4219) {
        v4219 = 250;
      }
      var i$$173 = v4219;
      var v20775 = JAM.call(/show|hide/.test, /show|hide/, [e$$257], JAM.policy.p3);
      if (v20775) {
        JAM.call(d$$282.push, d$$282, ["opacity"], JAM.policy.p3);
      }
      var v20776 = a$$495.effects;
      JAM.call(v20776.save, v20776, [c$$363, d$$282], JAM.policy.p3);
      JAM.call(c$$363.show, c$$363, [], JAM.policy.p3);
      var v11063 = a$$495.effects;
      JAM.call(v11063.createWrapper, v11063, [c$$363], JAM.policy.p3);
      var v4220;
      var v16715 = f$$116 == "up";
      if (!v16715) {
        v16715 = f$$116 == "down";
      }
      if (v16715) {
        v4220 = "top";
      } else {
        v4220 = "left";
      }
      var j$$83 = v4220;
      var v4221;
      var v16716 = f$$116 == "up";
      if (!v16716) {
        v16716 = f$$116 == "left";
      }
      if (v16716) {
        v4221 = "pos";
      } else {
        v4221 = "neg";
      }
      var k$$57 = v4221;
      var v4222 = b$$448.options.distance;
      if (!v4222) {
        var v11067;
        if (j$$83 == "top") {
          v11067 = JAM.call(c$$363.outerHeight, c$$363, [!0], JAM.policy.p3) / 3;
        } else {
          v11067 = JAM.call(c$$363.outerWidth, c$$363, [!0], JAM.policy.p3) / 3;
        }
        v4222 = v11067;
      }
      g$$144 = v4222;
      var v16720 = e$$257 == "show";
      if (v16720) {
        var v20781 = JAM.call(c$$363.css, c$$363, ["opacity", 0], JAM.policy.p3);
        var v25072;
        if (k$$57 == "pos") {
          v25072 = -g$$144;
        } else {
          v25072 = g$$144;
        }
        JAM.call(v20781.css, v20781, [j$$83, v25072], JAM.policy.p3);
      }
      var v16721 = e$$257 == "hide";
      if (v16721) {
        g$$144 = g$$144 / (h$$116 * 2);
      }
      var v11069 = e$$257 != "hide";
      if (v11069) {
        h$$116 = h$$116 - 1;
      }
      if (e$$257 == "show") {
        var l$$67 = {opacity:1};
        var v25073;
        if (k$$57 == "pos") {
          v25073 = "+=";
        } else {
          v25073 = "-=";
        }
        JAM.set(l$$67, j$$83, v25073 + g$$144, JAM.policy.p2);
        JAM.call(c$$363.animate, c$$363, [l$$67, i$$173 / 2, b$$448.options.easing], JAM.policy.p3);
        g$$144 = g$$144 / 2;
        h$$116 = h$$116 - 1;
      }
      var m$$38 = 0;
      var v4224 = m$$38 < h$$116;
      for (;v4224;) {
        var n$$87 = {};
        var p$$42 = {};
        var v25075;
        if (k$$57 == "pos") {
          v25075 = "-=";
        } else {
          v25075 = "+=";
        }
        JAM.set(n$$87, j$$83, v25075 + g$$144, JAM.policy.p2);
        var v25076;
        if (k$$57 == "pos") {
          v25076 = "+=";
        } else {
          v25076 = "-=";
        }
        JAM.set(p$$42, j$$83, v25076 + g$$144, JAM.policy.p2);
        var v16722 = JAM.call(c$$363.animate, c$$363, [n$$87, i$$173 / 2, b$$448.options.easing], JAM.policy.p3);
        JAM.call(v16722.animate, v16722, [p$$42, i$$173 / 2, b$$448.options.easing], JAM.policy.p3);
        var v11070;
        if (e$$257 == "hide") {
          v11070 = g$$144 * 2;
        } else {
          v11070 = g$$144 / 2;
        }
        g$$144 = v11070;
        m$$38 = m$$38 + 1;
        v4224 = m$$38 < h$$116;
      }
      if (e$$257 == "hide") {
        l$$67 = {opacity:0};
        var v16726;
        if (k$$57 == "pos") {
          v16726 = "-=";
        } else {
          v16726 = "+=";
        }
        JAM.set(l$$67, j$$83, v16726 + g$$144, JAM.policy.p2);
        JAM.call(c$$363.animate, c$$363, [l$$67, i$$173 / 2, b$$448.options.easing, v1395], JAM.policy.p3);
      } else {
        n$$87 = {};
        p$$42 = {};
        var v20793;
        if (k$$57 == "pos") {
          v20793 = "-=";
        } else {
          v20793 = "+=";
        }
        JAM.set(n$$87, j$$83, v20793 + g$$144, JAM.policy.p2);
        var v20794;
        if (k$$57 == "pos") {
          v20794 = "+=";
        } else {
          v20794 = "-=";
        }
        JAM.set(p$$42, j$$83, v20794 + g$$144, JAM.policy.p2);
        var v11074 = JAM.call(c$$363.animate, c$$363, [n$$87, i$$173 / 2, b$$448.options.easing], JAM.policy.p3);
        JAM.call(v11074.animate, v11074, [p$$42, i$$173 / 2, b$$448.options.easing, v1396], JAM.policy.p3);
      }
      JAM.call(c$$363.queue, c$$363, ["fx", v1397], JAM.policy.p3);
      JAM.call(c$$363.dequeue, c$$363, [], JAM.policy.p3);
      return;
    }
    return JAM.call(this.queue, this, [v1398], JAM.policy.p3);
  }
  a$$495.effects.bounce = v1399;
  return;
}
function v1394(a$$494, b$$445) {
  function v1393(b$$446) {
    function v1392() {
      function v1391() {
        var v25080 = e$$256 == "hide";
        if (v25080) {
          JAM.call(c$$362.hide, c$$362, [], JAM.policy.p3);
        }
        var v25081 = a$$494.effects;
        JAM.call(v25081.restore, v25081, [c$$362, d$$281], JAM.policy.p3);
        var v20796 = a$$494.effects;
        JAM.call(v20796.removeWrapper, v20796, [c$$362], JAM.policy.p3);
        var v16733 = b$$446.callback;
        if (v16733) {
          var v20797 = b$$446.callback;
          JAM.call(v20797.apply, v20797, [c$$362[0], arguments], JAM.policy.p3);
        }
        JAM.call(c$$362.dequeue, c$$362, [], JAM.policy.p3);
        return;
      }
      var c$$362 = JAM.call(a$$494, null, [this], JAM.policy.p3);
      var d$$281 = ["position", "top", "bottom", "left", "right"];
      var v4227 = a$$494.effects;
      var v11077 = b$$446.options.mode;
      if (!v11077) {
        v11077 = "hide";
      }
      var e$$256 = JAM.call(v4227.setMode, v4227, [c$$362, v11077], JAM.policy.p3);
      var v4229 = b$$446.options.direction;
      if (!v4229) {
        v4229 = "vertical";
      }
      var f$$115 = v4229;
      var v11080 = a$$494.effects;
      JAM.call(v11080.save, v11080, [c$$362, d$$281], JAM.policy.p3);
      JAM.call(c$$362.show, c$$362, [], JAM.policy.p3);
      var v11081 = a$$494.effects;
      var v4230 = JAM.call(v11081.createWrapper, v11081, [c$$362], JAM.policy.p3);
      var g$$143 = JAM.call(v4230.css, v4230, [{overflow:"hidden"}], JAM.policy.p3);
      var v4232;
      if (f$$115 == "vertical") {
        v4232 = "height";
      } else {
        v4232 = "width";
      }
      var h$$115 = v4232;
      var v4233;
      if (f$$115 == "vertical") {
        v4233 = JAM.call(g$$143.height, g$$143, [], JAM.policy.p3);
      } else {
        v4233 = JAM.call(g$$143.width, g$$143, [], JAM.policy.p3);
      }
      var i$$172 = v4233;
      var v4234 = e$$256 == "show";
      if (v4234) {
        JAM.call(g$$143.css, g$$143, [h$$115, 0], JAM.policy.p3);
      }
      var j$$82 = {};
      var v11084;
      if (e$$256 == "show") {
        v11084 = i$$172;
      } else {
        v11084 = 0;
      }
      JAM.set(j$$82, h$$115, v11084, JAM.policy.p2);
      JAM.call(g$$143.animate, g$$143, [j$$82, b$$446.duration, b$$446.options.easing, v1391], JAM.policy.p3);
      return;
    }
    return JAM.call(this.queue, this, [v1392], JAM.policy.p3);
  }
  a$$494.effects.blind = v1393;
  return;
}
function v1390(a$$470, b$$414) {
  function v1389(b$$444, c$$361) {
    function v1388(a$$493) {
      var v4236;
      if (a$$493 < .5) {
        v4236 = JAM.call(c$$361, null, [a$$493 * 2], JAM.policy.p3) / 2;
      } else {
        v4236 = JAM.call(c$$361, null, [a$$493 * -2 + 2], JAM.policy.p3) / -2 + 1;
      }
      return v4236;
    }
    function v1387(a$$492) {
      return 1 - JAM.call(c$$361, null, [1 - a$$492], JAM.policy.p3);
    }
    JAM.set(a$$470.easing, "easeIn" + b$$444, c$$361, JAM.policy.p2);
    JAM.set(a$$470.easing, "easeOut" + b$$444, v1387, JAM.policy.p2);
    JAM.set(a$$470.easing, "easeInOut" + b$$444, v1388, JAM.policy.p2);
    return;
  }
  function v1386(a$$491) {
    var b$$443;
    var c$$360 = 4;
    var v4238 = a$$491 < ((b$$443 = JAM.call(Math.pow, Math, [2, c$$360 = c$$360 - 1], JAM.policy.p3)) - 1) / 11;
    for (;v4238;) {
      v4238 = a$$491 < ((b$$443 = JAM.call(Math.pow, Math, [2, c$$360 = c$$360 - 1], JAM.policy.p3)) - 1) / 11;
    }
    return 1 / JAM.call(Math.pow, Math, [4, 3 - c$$360], JAM.policy.p3) - 7.5625 * JAM.call(Math.pow, Math, [(b$$443 * 3 - 2) / 22 - a$$491, 2], JAM.policy.p3);
  }
  function v1385(a$$490) {
    return a$$490 * a$$490 * (3 * a$$490 - 2);
  }
  function v1384(a$$489) {
    var v4243;
    var v16748 = a$$489 === 0;
    if (!v16748) {
      v16748 = a$$489 === 1;
    }
    if (v16748) {
      v4243 = a$$489;
    } else {
      v4243 = -JAM.call(Math.pow, Math, [2, 8 * (a$$489 - 1)], JAM.policy.p3) * JAM.call(Math.sin, Math, [((a$$489 - 1) * 80 - 7.5) * Math.PI / 15], JAM.policy.p3);
    }
    return v4243;
  }
  function v1383(a$$488) {
    return 1 - JAM.call(Math.sqrt, Math, [1 - a$$488 * a$$488], JAM.policy.p3);
  }
  function v1382(a$$487) {
    return 1 - JAM.call(Math.cos, Math, [a$$487 * Math.PI / 2], JAM.policy.p3);
  }
  function v1381(a$$486, b$$441) {
    function v1380(b$$442) {
      return JAM.call(Math.pow, Math, [b$$442, a$$486 + 2], JAM.policy.p3);
    }
    JAM.set(m$$36, b$$441, v1380, JAM.policy.p2);
    return;
  }
  function v1379(b$$439) {
    function v1378(a$$485, b$$440) {
      var v4247 = JAM.call(c$$359.indexOf, c$$359, [b$$440], JAM.policy.p3) > 0;
      if (v4247) {
        d$$280 = [JAM.call(parseFloat, null, [c$$359], JAM.policy.p3), b$$440];
      }
      return;
    }
    var c$$359 = JAM.call(this.css, this, [b$$439], JAM.policy.p3);
    var d$$280 = [];
    JAM.call(a$$470.each, a$$470, [["em", "px", "%", "pt"], v1378], JAM.policy.p3);
    return d$$280;
  }
  function v1377(b$$438) {
    var v16753 = JAM.call(l$$65, null, [b$$438], JAM.policy.p3);
    if (!v16753) {
      v16753 = typeof b$$438 == "boolean";
    }
    var v11108 = v16753;
    if (!v11108) {
      v11108 = JAM.call(a$$470.isFunction, a$$470, [b$$438], JAM.policy.p3);
    }
    if (v11108) {
      var v4248 = this.__toggle;
      return JAM.call(v4248.apply, v4248, [this, arguments], JAM.policy.p3);
    }
    var c$$358 = JAM.call(k$$55.apply, k$$55, [this, arguments], JAM.policy.p3);
    c$$358[1].mode = "toggle";
    var v11110 = this.effect;
    return JAM.call(v11110.apply, v11110, [this, c$$358], JAM.policy.p3);
  }
  function v1376(a$$484) {
    if (JAM.call(l$$65, null, [a$$484], JAM.policy.p3)) {
      var v4250 = this._hide;
      return JAM.call(v4250.apply, v4250, [this, arguments], JAM.policy.p3);
    }
    var b$$437 = JAM.call(k$$55.apply, k$$55, [this, arguments], JAM.policy.p3);
    b$$437[1].mode = "hide";
    var v11112 = this.effect;
    return JAM.call(v11112.apply, v11112, [this, b$$437], JAM.policy.p3);
  }
  function v1375(a$$483) {
    if (JAM.call(l$$65, null, [a$$483], JAM.policy.p3)) {
      var v4252 = this._show;
      return JAM.call(v4252.apply, v4252, [this, arguments], JAM.policy.p3);
    }
    var b$$436 = JAM.call(k$$55.apply, k$$55, [this, arguments], JAM.policy.p3);
    b$$436[1].mode = "show";
    var v11114 = this.effect;
    return JAM.call(v11114.apply, v11114, [this, b$$436], JAM.policy.p3);
  }
  function v1374(b$$435, c$$357, d$$279, e$$255) {
    function v1373() {
      var v4254 = g$$142.callback;
      if (v4254) {
        var v11115 = g$$142.callback;
        JAM.call(v11115.call, v11115, [this], JAM.policy.p3);
      }
      return;
    }
    var f$$114 = JAM.call(k$$55.apply, k$$55, [this, arguments], JAM.policy.p3);
    var g$$142 = {options:f$$114[1], duration:f$$114[2], callback:f$$114[3]};
    var h$$114 = g$$142.options.mode;
    var i$$171 = a$$470.effects[b$$435];
    var v4260;
    var v16755 = a$$470.fx.off;
    if (!v16755) {
      v16755 = !i$$171;
    }
    if (v16755) {
      var v11116;
      if (h$$114) {
        v11116 = JAM.call(this[h$$114], this, [g$$142.duration, g$$142.callback], JAM.policy.p3);
      } else {
        v11116 = JAM.call(this.each, this, [v1373], JAM.policy.p3);
      }
      v4260 = v11116;
    } else {
      v4260 = JAM.call(i$$171.call, i$$171, [this, g$$142], JAM.policy.p3);
    }
    return v4260;
  }
  function v1372(b$$434, c$$355, d$$278, e$$254) {
    function v1371(a$$482, c$$356) {
      var f$$113 = JAM.call(b$$434.cssUnit, b$$434, [c$$356], JAM.policy.p3);
      var v4261 = f$$113[0] > 0;
      if (v4261) {
        JAM.set(e$$254, c$$356, f$$113[0] * d$$278 + f$$113[1], JAM.policy.p2);
      }
      return;
    }
    e$$254 = e$$254 || {};
    JAM.call(a$$470.each, a$$470, [c$$355, v1371], JAM.policy.p3);
    return e$$254;
  }
  function v1370(b$$433) {
    var c$$354;
    var d$$277 = document.activeElement;
    var v4262;
    var v16759 = JAM.call(b$$433.parent, b$$433, [], JAM.policy.p3);
    if (JAM.call(v16759.is, v16759, [".ui-effects-wrapper"], JAM.policy.p3)) {
      var v20811 = JAM.call(b$$433.parent, b$$433, [], JAM.policy.p3);
      c$$354 = JAM.call(v20811.replaceWith, v20811, [b$$433], JAM.policy.p3);
      var v25089 = b$$433[0] === d$$277;
      if (!v25089) {
        v25089 = JAM.call(a$$470.contains, a$$470, [b$$433[0], d$$277], JAM.policy.p3);
      }
      var v20812 = v25089;
      if (v20812) {
        var v25090 = JAM.call(a$$470, null, [d$$277], JAM.policy.p3);
        JAM.call(v25090.focus, v25090, [], JAM.policy.p3);
      }
      v4262 = c$$354;
    } else {
      v4262 = b$$433;
    }
    return v4262;
  }
  function v1369(b$$432) {
    function v1368(a$$481, d$$276) {
      var v11122 = c$$353;
      var v11123 = d$$276;
      var v31278 = JAM.call(b$$432.css, b$$432, [d$$276], JAM.policy.p3);
      JAM.set(v11122, v11123, v31278, JAM.policy.p2);
      var v11124 = JAM.call(isNaN, null, [JAM.call(parseInt, null, [c$$353[d$$276], 10], JAM.policy.p3)], JAM.policy.p3);
      if (v11124) {
        JAM.set(c$$353, d$$276, "auto", JAM.policy.p2);
      }
      return;
    }
    var v11125 = JAM.call(b$$432.parent, b$$432, [], JAM.policy.p3);
    if (JAM.call(v11125.is, v11125, [".ui-effects-wrapper"], JAM.policy.p3)) {
      return JAM.call(b$$432.parent, b$$432, [], JAM.policy.p3);
    }
    var c$$353 = {width:JAM.call(b$$432.outerWidth, b$$432, [!0], JAM.policy.p3), height:JAM.call(b$$432.outerHeight, b$$432, [!0], JAM.policy.p3), "float":JAM.call(b$$432.css, b$$432, ["float"], JAM.policy.p3)};
    var v11128 = JAM.call(a$$470, null, ["<div></div>"], JAM.policy.p3);
    var v4267 = JAM.call(v11128.addClass, v11128, ["ui-effects-wrapper"], JAM.policy.p3);
    var d$$275 = JAM.call(v4267.css, v4267, [{fontSize:"100%", background:"transparent", border:"none", margin:0, padding:0}], JAM.policy.p3);
    var e$$253 = document.activeElement;
    try {
    } catch (f$$112) {
      e$$253 = document.body;
    }
    JAM.call(b$$432.wrap, b$$432, [d$$275], JAM.policy.p3);
    var v26992 = b$$432[0] === e$$253;
    if (!v26992) {
      v26992 = JAM.call(a$$470.contains, a$$470, [b$$432[0], e$$253], JAM.policy.p3);
    }
    var v25091 = v26992;
    if (v25091) {
      var v26993 = JAM.call(a$$470, null, [e$$253], JAM.policy.p3);
      JAM.call(v26993.focus, v26993, [], JAM.policy.p3);
    }
    d$$275 = JAM.call(b$$432.parent, b$$432, [], JAM.policy.p3);
    var v16761;
    if (JAM.call(b$$432.css, b$$432, ["position"], JAM.policy.p3) == "static") {
      JAM.call(d$$275.css, d$$275, [{position:"relative"}], JAM.policy.p3);
      v16761 = JAM.call(b$$432.css, b$$432, [{position:"relative"}], JAM.policy.p3);
    } else {
      JAM.call(a$$470.extend, a$$470, [c$$353, {position:JAM.call(b$$432.css, b$$432, ["position"], JAM.policy.p3), zIndex:JAM.call(b$$432.css, b$$432, ["z-index"], JAM.policy.p3)}], JAM.policy.p3);
      JAM.call(a$$470.each, a$$470, [["top", "left", "bottom", "right"], v1368], JAM.policy.p3);
      v16761 = JAM.call(b$$432.css, b$$432, [{position:"relative", top:0, left:0, right:"auto", bottom:"auto"}], JAM.policy.p3);
    }
    v16761;
    var v11129 = JAM.call(d$$275.css, d$$275, [c$$353], JAM.policy.p3);
    return JAM.call(v11129.show, v11129, [], JAM.policy.p3);
  }
  function v1367(a$$480, b$$431) {
    var c$$352;
    var d$$274;
    switch(a$$480[0]) {
      case "top":
        c$$352 = 0;
        break;
      case "middle":
        c$$352 = .5;
        break;
      case "bottom":
        c$$352 = 1;
        break;
      default:
        c$$352 = a$$480[0] / b$$431.height;
    }
    switch(a$$480[1]) {
      case "left":
        d$$274 = 0;
        break;
      case "center":
        d$$274 = .5;
        break;
      case "right":
        d$$274 = 1;
        break;
      default:
        d$$274 = a$$480[1] / b$$431.width;
    }
    return{x:d$$274, y:c$$352};
  }
  function v1366(a$$479, b$$430) {
    var v11130 = b$$430 == "toggle";
    if (v11130) {
      var v16762;
      if (JAM.call(a$$479.is, a$$479, [":hidden"], JAM.policy.p3)) {
        v16762 = "show";
      } else {
        v16762 = "hide";
      }
      b$$430 = v16762;
    }
    return b$$430;
  }
  function v1365(a$$478, b$$429) {
    var c$$351 = 0;
    var v4276 = c$$351 < b$$429.length;
    for (;v4276;) {
      var v4275 = b$$429[c$$351] !== null;
      if (v4275) {
        JAM.call(a$$478.css, a$$478, [b$$429[c$$351], JAM.call(a$$478.data, a$$478, ["ec.storage." + b$$429[c$$351]], JAM.policy.p3)], JAM.policy.p3);
      }
      c$$351 = c$$351 + 1;
      v4276 = c$$351 < b$$429.length;
    }
    return;
  }
  function v1364(a$$477, b$$428) {
    var c$$350 = 0;
    var v4278 = c$$350 < b$$428.length;
    for (;v4278;) {
      var v4277 = b$$428[c$$350] !== null;
      if (v4277) {
        JAM.call(a$$477.data, a$$477, ["ec.storage." + b$$428[c$$350], a$$477[0].style[b$$428[c$$350]]], JAM.policy.p3);
      }
      c$$350 = c$$350 + 1;
      v4278 = c$$350 < b$$428.length;
    }
    return;
  }
  function v1363(b$$427, c$$349, d$$273, e$$252, f$$111) {
    var v4279 = a$$470.effects.animateClass;
    return JAM.call(v4279.apply, v4279, [this, [{add:c$$349, remove:b$$427}, d$$273, e$$252, f$$111]], JAM.policy.p3);
  }
  function v1362(c$$348, d$$272, e$$251, f$$110, g$$141) {
    var v4281;
    var v16767 = typeof d$$272 == "boolean";
    if (!v16767) {
      v16767 = d$$272 === b$$414;
    }
    if (v16767) {
      var v11143;
      if (e$$251) {
        var v16768 = a$$470.effects.animateClass;
        var v25096;
        if (d$$272) {
          v25096 = {add:c$$348};
        } else {
          v25096 = {remove:c$$348};
        }
        v11143 = JAM.call(v16768.apply, v16768, [this, [v25096, e$$251, f$$110, g$$141]], JAM.policy.p3);
      } else {
        v11143 = JAM.call(this._toggleClass, this, [c$$348, d$$272], JAM.policy.p3);
      }
      v4281 = v11143;
    } else {
      var v11144 = a$$470.effects.animateClass;
      v4281 = JAM.call(v11144.apply, v11144, [this, [{toggle:c$$348}, d$$272, e$$251, f$$110]], JAM.policy.p3);
    }
    return v4281;
  }
  function v1361(b$$426, c$$347, d$$271, e$$250) {
    var v4282;
    if (c$$347) {
      var v11147 = a$$470.effects.animateClass;
      v4282 = JAM.call(v11147.apply, v11147, [this, [{remove:b$$426}, c$$347, d$$271, e$$250]], JAM.policy.p3);
    } else {
      v4282 = JAM.call(this._removeClass, this, [b$$426], JAM.policy.p3);
    }
    return v4282;
  }
  function v1360(b$$425, c$$346, d$$270, e$$249) {
    var v4283;
    if (c$$346) {
      var v11149 = a$$470.effects.animateClass;
      v4283 = JAM.call(v11149.apply, v11149, [this, [{add:b$$425}, c$$346, d$$270, e$$249]], JAM.policy.p3);
    } else {
      v4283 = JAM.call(this._addClass, this, [b$$425], JAM.policy.p3);
    }
    return v4283;
  }
  function v1359(b$$424, c$$343, d$$269, e$$248) {
    function v1358() {
      function v1357() {
        function v1356(a$$476, c$$345) {
          var v4284 = b$$424[c$$345];
          if (v4284) {
            JAM.call(g$$140[c$$345 + "Class"], g$$140, [b$$424[c$$345]], JAM.policy.p3);
          }
          return;
        }
        JAM.call(a$$470.each, a$$470, [f$$109, v1356], JAM.policy.p3);
        var v20822;
        if (typeof JAM.call(g$$140.attr, g$$140, ["style"], JAM.policy.p3) == "object") {
          JAM.call(g$$140.attr, g$$140, ["style"], JAM.policy.p3).cssText = "";
          v20822 = JAM.call(g$$140.attr, g$$140, ["style"], JAM.policy.p3).cssText = k$$56;
        } else {
          v20822 = JAM.call(g$$140.attr, g$$140, ["style", k$$56], JAM.policy.p3);
        }
        v20822;
        if (e$$248) {
          JAM.call(e$$248.apply, e$$248, [this, arguments], JAM.policy.p3);
        }
        JAM.call(a$$470.dequeue, a$$470, [this], JAM.policy.p3);
        return;
      }
      function v1355(a$$475, c$$344) {
        var v4285 = b$$424[c$$344];
        if (v4285) {
          JAM.call(g$$140[c$$344 + "Class"], g$$140, [b$$424[c$$344]], JAM.policy.p3);
        }
        return;
      }
      var g$$140 = JAM.call(a$$470, null, [this], JAM.policy.p3);
      var v4286 = JAM.call(g$$140.attr, g$$140, ["style"], JAM.policy.p3);
      if (!v4286) {
        v4286 = " ";
      }
      var k$$56 = v4286;
      var l$$66 = JAM.call(i$$170, null, [JAM.call(h$$113.call, h$$113, [this], JAM.policy.p3)], JAM.policy.p3);
      var m$$37;
      var v4288 = JAM.call(g$$140.attr, g$$140, ["class"], JAM.policy.p3);
      if (!v4288) {
        v4288 = "";
      }
      var n$$86 = v4288;
      JAM.call(a$$470.each, a$$470, [f$$109, v1355], JAM.policy.p3);
      m$$37 = JAM.call(i$$170, null, [JAM.call(h$$113.call, h$$113, [this], JAM.policy.p3)], JAM.policy.p3);
      JAM.call(g$$140.attr, g$$140, ["class", n$$86], JAM.policy.p3);
      JAM.call(g$$140.animate, g$$140, [JAM.call(j$$81, null, [l$$66, m$$37], JAM.policy.p3), {queue:!1, duration:c$$343, easing:d$$269, complete:v1357}], JAM.policy.p3);
      return;
    }
    var v11159 = JAM.call(a$$470.isFunction, a$$470, [d$$269], JAM.policy.p3);
    if (v11159) {
      e$$248 = d$$269;
      d$$269 = null;
    }
    return JAM.call(this.queue, this, [v1358], JAM.policy.p3);
  }
  function v1354(b$$423, e$$247) {
    function v1353(a$$474) {
      var JSCompiler_temp$$8;
      if (JSCompiler_temp$$8 = a$$474.colorInit) {
      } else {
        var JSCompiler_inline_result$$9;
        var b$$inline_70 = a$$474.elem;
        var d$$inline_71 = e$$247;
        var e$$inline_72;
        var v4291 = b$$inline_70 = b$$inline_70.parentNode;
        do {
          var v11160 = a$$470.curCSS;
          if (!v11160) {
            v11160 = a$$470.css;
          }
          e$$inline_72 = JAM.call(v11160, null, [b$$inline_70, d$$inline_71], JAM.policy.p3);
          var v16778 = e$$inline_72 != "";
          if (v16778) {
            v16778 = e$$inline_72 != "transparent";
          }
          var v11161 = v16778;
          if (!v11161) {
            v11161 = JAM.call(a$$470.nodeName, a$$470, [b$$inline_70, "body"], JAM.policy.p3);
          }
          if (v11161) {
            break;
          }
          d$$inline_71 = "backgroundColor";
          v4291 = b$$inline_70 = b$$inline_70.parentNode;
        } while (v4291);
        JSCompiler_inline_result$$9 = JAM.call(c$$337, null, [e$$inline_72], JAM.policy.p3);
        a$$474.start = JSCompiler_inline_result$$9;
        var v16780 = a$$474;
        var v31279 = JAM.call(c$$337, null, [a$$474.end], JAM.policy.p3);
        v16780.end = v31279;
        JSCompiler_temp$$8 = a$$474.colorInit = !0;
      }
      JSCompiler_temp$$8;
      JAM.set(a$$474.elem.style, e$$247, "rgb(" + JAM.call(Math.max, Math, [JAM.call(Math.min, Math, [JAM.call(parseInt, null, [a$$474.pos * (a$$474.end[0] - a$$474.start[0]) + a$$474.start[0], 10], JAM.policy.p3), 255], JAM.policy.p3), 0], JAM.policy.p3) + "," + JAM.call(Math.max, Math, [JAM.call(Math.min, Math, [JAM.call(parseInt, null, [a$$474.pos * (a$$474.end[1] - a$$474.start[1]) + a$$474.start[1], 10], JAM.policy.p3), 255], JAM.policy.p3), 0], JAM.policy.p3) + "," + JAM.call(Math.max, Math, 
      [JAM.call(Math.min, Math, [JAM.call(parseInt, null, [a$$474.pos * (a$$474.end[2] - a$$474.start[2]) + a$$474.start[2], 10], JAM.policy.p3), 255], JAM.policy.p3), 0], JAM.policy.p3) + ")", JAM.policy.p2);
      return;
    }
    JAM.set(a$$470.fx.step, e$$247, v1353, JAM.policy.p2);
    return;
  }
  function c$$337(b$$415) {
    var c$$338;
    var v4294;
    var v20827 = b$$415;
    if (v20827) {
      v20827 = b$$415.constructor == Array;
    }
    var v16783 = v20827;
    if (v16783) {
      v16783 = b$$415.length == 3;
    }
    if (v16783) {
      v4294 = b$$415;
    } else {
      var v11165;
      if (c$$338 = JAM.call(/rgb\(\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*\)/.exec, /rgb\(\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*\)/, [b$$415], JAM.policy.p3)) {
        v11165 = [JAM.call(parseInt, null, [c$$338[1], 10], JAM.policy.p3), JAM.call(parseInt, null, [c$$338[2], 10], JAM.policy.p3), JAM.call(parseInt, null, [c$$338[3], 10], JAM.policy.p3)];
      } else {
        var v16787;
        if (c$$338 = JAM.call(/rgb\(\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*\)/.exec, /rgb\(\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*\)/, [b$$415], JAM.policy.p3)) {
          v16787 = [JAM.call(parseFloat, null, [c$$338[1]], JAM.policy.p3) * 2.55, JAM.call(parseFloat, null, [c$$338[2]], JAM.policy.p3) * 2.55, JAM.call(parseFloat, null, [c$$338[3]], JAM.policy.p3) * 2.55];
        } else {
          var v20835;
          if (c$$338 = JAM.call(/#([a-fA-F0-9]{2})([a-fA-F0-9]{2})([a-fA-F0-9]{2})/.exec, /#([a-fA-F0-9]{2})([a-fA-F0-9]{2})([a-fA-F0-9]{2})/, [b$$415], JAM.policy.p3)) {
            v20835 = [JAM.call(parseInt, null, [c$$338[1], 16], JAM.policy.p3), JAM.call(parseInt, null, [c$$338[2], 16], JAM.policy.p3), JAM.call(parseInt, null, [c$$338[3], 16], JAM.policy.p3)];
          } else {
            var v25107;
            if (c$$338 = JAM.call(/#([a-fA-F0-9])([a-fA-F0-9])([a-fA-F0-9])/.exec, /#([a-fA-F0-9])([a-fA-F0-9])([a-fA-F0-9])/, [b$$415], JAM.policy.p3)) {
              v25107 = [JAM.call(parseInt, null, [c$$338[1] + c$$338[1], 16], JAM.policy.p3), JAM.call(parseInt, null, [c$$338[2] + c$$338[2], 16], JAM.policy.p3), JAM.call(parseInt, null, [c$$338[3] + c$$338[3], 16], JAM.policy.p3)];
            } else {
              var v27011;
              if (c$$338 = JAM.call(/rgba\(0, 0, 0, 0\)/.exec, /rgba\(0, 0, 0, 0\)/, [b$$415], JAM.policy.p3)) {
                v27011 = e$$243.transparent;
              } else {
                var v28310 = e$$243;
                var v29171 = JAM.call(a$$470.trim, a$$470, [b$$415], JAM.policy.p3);
                v27011 = v28310[JAM.call(v29171.toLowerCase, v29171, [], JAM.policy.p3)];
              }
              v25107 = v27011;
            }
            v20835 = v25107;
          }
          v16787 = v20835;
        }
        v11165 = v16787;
      }
      v4294 = v11165;
    }
    return v4294;
  }
  function h$$113() {
    function v1352(a$$472, b$$418) {
      return JAM.call(b$$418.toUpperCase, b$$418, [], JAM.policy.p3);
    }
    var v4295;
    if (document.defaultView) {
      var v11167 = document.defaultView;
      v4295 = JAM.call(v11167.getComputedStyle, v11167, [this, null], JAM.policy.p3);
    } else {
      v4295 = this.currentStyle;
    }
    var a$$471 = v4295;
    var b$$417 = {};
    var c$$339;
    var d$$265;
    var v20837 = a$$471;
    if (v20837) {
      v20837 = a$$471.length;
    }
    var v16789 = v20837;
    if (v16789) {
      v16789 = a$$471[0];
    }
    var v11169 = v16789;
    if (v11169) {
      v11169 = a$$471[a$$471[0]];
    }
    if (v11169) {
      var e$$245 = a$$471.length;
      var v4296 = e$$245;
      e$$245 = e$$245 - 1;
      for (;v4296;) {
        c$$339 = a$$471[e$$245];
        var v11170 = typeof a$$471[c$$339] == "string";
        if (v11170) {
          d$$265 = JAM.call(c$$339.replace, c$$339, [/\-(\w)/g, v1352], JAM.policy.p3);
          JAM.set(b$$417, d$$265, a$$471[c$$339], JAM.policy.p2);
        }
        v4296 = e$$245;
        e$$245 = e$$245 - 1;
      }
    } else {
      for (c$$339 in a$$471) {
        var v4297 = typeof a$$471[c$$339] == "string";
        if (v4297) {
          JAM.set(b$$417, c$$339, a$$471[c$$339], JAM.policy.p2);
        }
      }
    }
    return b$$417;
  }
  function i$$170(b$$419) {
    var c$$340;
    var d$$266;
    for (c$$340 in b$$419) {
      d$$266 = b$$419[c$$340];
      var v27013 = d$$266 == null;
      if (!v27013) {
        v27013 = JAM.call(a$$470.isFunction, a$$470, [d$$266], JAM.policy.p3);
      }
      var v25109 = v27013;
      if (!v25109) {
        v25109 = c$$340 in g$$139;
      }
      var v20839 = v25109;
      if (!v20839) {
        v20839 = JAM.call(/scrollbar/.test, /scrollbar/, [c$$340], JAM.policy.p3);
      }
      var v16793 = v20839;
      if (!v16793) {
        var v20840 = !JAM.call(/color/i.test, /color/i, [c$$340], JAM.policy.p3);
        if (v20840) {
          v20840 = JAM.call(isNaN, null, [JAM.call(parseFloat, null, [d$$266], JAM.policy.p3)], JAM.policy.p3);
        }
        v16793 = v20840;
      }
      var v11172 = v16793;
      if (v11172) {
        delete b$$419[c$$340];
      }
    }
    return b$$419;
  }
  function j$$81(a$$473, b$$420) {
    var c$$341 = {_:0};
    var d$$267;
    for (d$$267 in b$$420) {
      var v4299 = a$$473[d$$267] != b$$420[d$$267];
      if (v4299) {
        JAM.set(c$$341, d$$267, b$$420[d$$267], JAM.policy.p2);
      }
    }
    return c$$341;
  }
  function k$$55(b$$421, c$$342, d$$268, e$$246) {
    var v11175 = typeof b$$421 == "object";
    if (v11175) {
      e$$246 = c$$342;
      d$$268 = null;
      c$$342 = b$$421;
      b$$421 = c$$342.effect;
    }
    var v11176 = JAM.call(a$$470.isFunction, a$$470, [c$$342], JAM.policy.p3);
    if (v11176) {
      e$$246 = c$$342;
      d$$268 = null;
      c$$342 = {};
    }
    var v11177 = typeof c$$342 == "number";
    if (!v11177) {
      v11177 = a$$470.fx.speeds[c$$342];
    }
    if (v11177) {
      e$$246 = d$$268;
      d$$268 = c$$342;
      c$$342 = {};
    }
    var v27015 = JAM.call(a$$470.isFunction, a$$470, [d$$268], JAM.policy.p3);
    if (v27015) {
      e$$246 = d$$268;
      d$$268 = null;
    }
    c$$342 = c$$342 || {};
    var v25113 = d$$268;
    if (!v25113) {
      v25113 = c$$342.duration;
    }
    d$$268 = v25113;
    var v20843;
    if (a$$470.fx.off) {
      v20843 = 0;
    } else {
      var v25114;
      if (typeof d$$268 == "number") {
        v25114 = d$$268;
      } else {
        var v27018;
        if (d$$268 in a$$470.fx.speeds) {
          v27018 = a$$470.fx.speeds[d$$268];
        } else {
          v27018 = a$$470.fx.speeds._default;
        }
        v25114 = v27018;
      }
      v20843 = v25114;
    }
    d$$268 = v20843;
    var v16798 = e$$246;
    if (!v16798) {
      v16798 = c$$342.complete;
    }
    e$$246 = v16798;
    return[b$$421, c$$342, d$$268, e$$246];
  }
  function l$$65(b$$422) {
    var v4301;
    var v20845 = !b$$422;
    if (!v20845) {
      v20845 = typeof b$$422 == "number";
    }
    var v16799 = v20845;
    if (!v16799) {
      v16799 = a$$470.fx.speeds[b$$422];
    }
    if (v16799) {
      v4301 = !0;
    } else {
      var v11178;
      var v20848 = typeof b$$422 == "string";
      if (v20848) {
        v20848 = !a$$470.effects[b$$422];
      }
      if (v20848) {
        v11178 = !0;
      } else {
        v11178 = !1;
      }
      v4301 = v11178;
    }
    return v4301;
  }
  a$$470.effects = {};
  JAM.call(a$$470.each, a$$470, [["backgroundColor", "borderBottomColor", "borderLeftColor", "borderRightColor", "borderTopColor", "borderColor", "color", "outlineColor"], v1354], JAM.policy.p3);
  var e$$243 = {aqua:[0, 255, 255], azure:[240, 255, 255], beige:[245, 245, 220], black:[0, 0, 0], blue:[0, 0, 255], brown:[165, 42, 42], cyan:[0, 255, 255], darkblue:[0, 0, 139], darkcyan:[0, 139, 139], darkgrey:[169, 169, 169], darkgreen:[0, 100, 0], darkkhaki:[189, 183, 107], darkmagenta:[139, 0, 139], darkolivegreen:[85, 107, 47], darkorange:[255, 140, 0], darkorchid:[153, 50, 204], darkred:[139, 0, 0], darksalmon:[233, 150, 122], darkviolet:[148, 0, 211], fuchsia:[255, 0, 255], gold:[255, 215, 
  0], green:[0, 128, 0], indigo:[75, 0, 130], khaki:[240, 230, 140], lightblue:[173, 216, 230], lightcyan:[224, 255, 255], lightgreen:[144, 238, 144], lightgrey:[211, 211, 211], lightpink:[255, 182, 193], lightyellow:[255, 255, 224], lime:[0, 255, 0], magenta:[255, 0, 255], maroon:[128, 0, 0], navy:[0, 0, 128], olive:[128, 128, 0], orange:[255, 165, 0], pink:[255, 192, 203], purple:[128, 0, 128], violet:[128, 0, 128], red:[255, 0, 0], silver:[192, 192, 192], white:[255, 255, 255], yellow:[255, 255, 
  0], transparent:[255, 255, 255]};
  var f$$109 = ["add", "remove", "toggle"];
  var g$$139 = {border:1, borderBottom:1, borderColor:1, borderLeft:1, borderRight:1, borderTop:1, borderWidth:1, margin:1, padding:1};
  a$$470.effects.animateClass = v1359;
  var v20850 = a$$470.fn;
  JAM.call(v20850.extend, v20850, [{_addClass:a$$470.fn.addClass, addClass:v1360, _removeClass:a$$470.fn.removeClass, removeClass:v1361, _toggleClass:a$$470.fn.toggleClass, toggleClass:v1362, switchClass:v1363}], JAM.policy.p3);
  JAM.call(a$$470.extend, a$$470, [a$$470.effects, {version:"1.8.24", save:v1364, restore:v1365, setMode:v1366, getBaseline:v1367, createWrapper:v1369, removeWrapper:v1370, setTransition:v1372}], JAM.policy.p3);
  var v11181 = a$$470.fn;
  JAM.call(v11181.extend, v11181, [{effect:v1374, _show:a$$470.fn.show, show:v1375, _hide:a$$470.fn.hide, hide:v1376, __toggle:a$$470.fn.toggle, toggle:v1377, cssUnit:v1379}], JAM.policy.p3);
  var m$$36 = {};
  JAM.call(a$$470.each, a$$470, [["Quad", "Cubic", "Quart", "Quint", "Expo"], v1381], JAM.policy.p3);
  JAM.call(a$$470.extend, a$$470, [m$$36, {Sine:v1382, Circ:v1383, Elastic:v1384, Back:v1385, Bounce:v1386}], JAM.policy.p3);
  JAM.call(a$$470.each, a$$470, [m$$36, v1389], JAM.policy.p3);
  return;
}
function v1351(a$$452, b$$380) {
  function v1350(b$$413) {
    var c$$336 = b$$413 || this;
    var v4346 = c$$336.helper;
    var v11183 = c$$336.placeholder;
    if (!v11183) {
      v11183 = JAM.call(a$$452, null, [[]], JAM.policy.p3);
    }
    var v4347 = v11183;
    var v4348 = c$$336.position;
    var v4349 = c$$336.originalPosition;
    var v4350 = c$$336.positionAbs;
    var v4351 = c$$336.currentItem;
    var v11184;
    if (b$$413) {
      v11184 = b$$413.element;
    } else {
      v11184 = null;
    }
    return{helper:v4346, placeholder:v4347, position:v4348, originalPosition:v4349, offset:v4350, item:v4351, sender:v11184};
  }
  function v1349() {
    var v16809 = a$$452.Widget.prototype._trigger;
    var v4353 = JAM.call(v16809.apply, v16809, [this, arguments], JAM.policy.p3) === !1;
    if (v4353) {
      JAM.call(this.cancel, this, [], JAM.policy.p3);
    }
    return;
  }
  function v1348(b$$408, c$$335) {
    function v1347(a$$469) {
      function v1346(b$$412) {
        JAM.call(a$$469._trigger, a$$469, ["out", b$$412, JAM.call(this._uiHash, this, [this], JAM.policy.p3)], JAM.policy.p3);
        return;
      }
      return v1346;
    }
    function v1345(a$$468) {
      function v1344(b$$411) {
        JAM.call(a$$468._trigger, a$$468, ["deactivate", b$$411, JAM.call(this._uiHash, this, [this], JAM.policy.p3)], JAM.policy.p3);
        return;
      }
      return v1344;
    }
    function v1343(a$$467) {
      function v1342(b$$410) {
        JAM.call(a$$467._trigger, a$$467, ["update", b$$410, JAM.call(this._uiHash, this, [this], JAM.policy.p3)], JAM.policy.p3);
        return;
      }
      return v1342;
    }
    function v1341(a$$466) {
      function v1340(b$$409) {
        JAM.call(a$$466._trigger, a$$466, ["receive", b$$409, JAM.call(this._uiHash, this, [this], JAM.policy.p3)], JAM.policy.p3);
        return;
      }
      return v1340;
    }
    function v1339(a$$465) {
      JAM.call(this._trigger, this, ["remove", a$$465, JAM.call(this._uiHash, this, [], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    function v1338(a$$464) {
      JAM.call(this._trigger, this, ["update", a$$464, JAM.call(this._uiHash, this, [], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    function v1337(a$$463) {
      JAM.call(this._trigger, this, ["receive", a$$463, JAM.call(this._uiHash, this, [this.fromOutside], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    this.reverting = !1;
    var d$$262 = [];
    var e$$242 = this;
    var v16810 = !this._noFinalSort;
    if (v16810) {
      var v25125 = this.currentItem;
      v16810 = JAM.call(v25125.parent, v25125, [], JAM.policy.p3).length;
    }
    var v11188 = v16810;
    if (v11188) {
      var v16811 = this.placeholder;
      JAM.call(v16811.before, v16811, [this.currentItem], JAM.policy.p3);
    }
    this._noFinalSort = null;
    if (this.helper[0] == this.currentItem[0]) {
      var f$$108;
      for (f$$108 in this._storedCSS) {
        var v11191 = this._storedCSS[f$$108] == "auto";
        if (!v11191) {
          v11191 = this._storedCSS[f$$108] == "static";
        }
        if (v11191) {
          JAM.set(this._storedCSS, f$$108, "", JAM.policy.p2);
        }
      }
      var v11192 = this.currentItem;
      var v4364 = JAM.call(v11192.css, v11192, [this._storedCSS], JAM.policy.p3);
      JAM.call(v4364.removeClass, v4364, ["ui-sortable-helper"], JAM.policy.p3);
    } else {
      var v4365 = this.currentItem;
      JAM.call(v4365.show, v4365, [], JAM.policy.p3);
    }
    var v20860 = this.fromOutside;
    if (v20860) {
      v20860 = !c$$335;
    }
    var v16818 = v20860;
    if (v16818) {
      JAM.call(d$$262.push, d$$262, [v1337], JAM.policy.p3);
    }
    var v27024 = this.fromOutside;
    if (!v27024) {
      var v28318 = this.domPosition.prev;
      var v30080 = this.currentItem;
      var v29742 = JAM.call(v30080.prev, v30080, [], JAM.policy.p3);
      v27024 = v28318 != JAM.call(v29742.not, v29742, [".ui-sortable-helper"], JAM.policy.p3)[0];
    }
    var v25126 = v27024;
    if (!v25126) {
      var v27025 = this.domPosition.parent;
      var v29177 = this.currentItem;
      v25126 = v27025 != JAM.call(v29177.parent, v29177, [], JAM.policy.p3)[0];
    }
    var v20861 = v25126;
    if (v20861) {
      v20861 = !c$$335;
    }
    var v16819 = v20861;
    if (v16819) {
      JAM.call(d$$262.push, d$$262, [v1338], JAM.policy.p3);
    }
    var v11194 = this !== this.currentContainer;
    if (v11194) {
      if (!c$$335) {
        JAM.call(d$$262.push, d$$262, [v1339], JAM.policy.p3);
        JAM.call(d$$262.push, d$$262, [JAM.call(v1341.call, v1341, [this, this.currentContainer], JAM.policy.p3)], JAM.policy.p3);
        JAM.call(d$$262.push, d$$262, [JAM.call(v1343.call, v1343, [this, this.currentContainer], JAM.policy.p3)], JAM.policy.p3);
      }
    }
    f$$108 = this.containers.length - 1;
    var v4368 = f$$108 >= 0;
    for (;v4368;) {
      if (!c$$335) {
        JAM.call(d$$262.push, d$$262, [JAM.call(v1345.call, v1345, [this, this.containers[f$$108]], JAM.policy.p3)], JAM.policy.p3);
      }
      var v11196 = this.containers[f$$108].containerCache.over;
      if (v11196) {
        JAM.call(d$$262.push, d$$262, [JAM.call(v1347.call, v1347, [this, this.containers[f$$108]], JAM.policy.p3)], JAM.policy.p3);
        this.containers[f$$108].containerCache.over = 0;
      }
      f$$108 = f$$108 - 1;
      v4368 = f$$108 >= 0;
    }
    var v20867 = this._storedCursor;
    if (v20867) {
      var v25132 = JAM.call(a$$452, null, ["body"], JAM.policy.p3);
      JAM.call(v25132.css, v25132, ["cursor", this._storedCursor], JAM.policy.p3);
    }
    var v20868 = this._storedOpacity;
    if (v20868) {
      var v25134 = this.helper;
      JAM.call(v25134.css, v25134, ["opacity", this._storedOpacity], JAM.policy.p3);
    }
    var v16824 = this._storedZIndex;
    if (v16824) {
      var v20869 = this.helper;
      var v25136;
      if (this._storedZIndex == "auto") {
        v25136 = "";
      } else {
        v25136 = this._storedZIndex;
      }
      JAM.call(v20869.css, v20869, ["zIndex", v25136], JAM.policy.p3);
    }
    this.dragging = !1;
    if (this.cancelHelperRemoval) {
      if (!c$$335) {
        JAM.call(this._trigger, this, ["beforeStop", b$$408, JAM.call(this._uiHash, this, [], JAM.policy.p3)], JAM.policy.p3);
        f$$108 = 0;
        var v4371 = f$$108 < d$$262.length;
        for (;v4371;) {
          var v4370 = d$$262[f$$108];
          JAM.call(v4370.call, v4370, [this, b$$408], JAM.policy.p3);
          f$$108 = f$$108 + 1;
          v4371 = f$$108 < d$$262.length;
        }
        JAM.call(this._trigger, this, ["stop", b$$408, JAM.call(this._uiHash, this, [], JAM.policy.p3)], JAM.policy.p3);
      }
      this.fromOutside = !1;
      return!1;
    }
    if (!c$$335) {
      JAM.call(this._trigger, this, ["beforeStop", b$$408, JAM.call(this._uiHash, this, [], JAM.policy.p3)], JAM.policy.p3);
    }
    var v20871 = this.placeholder[0].parentNode;
    JAM.call(v20871.removeChild, v20871, [this.placeholder[0]], JAM.policy.p3);
    var v16825 = this.helper[0] != this.currentItem[0];
    if (v16825) {
      var v20875 = this.helper;
      JAM.call(v20875.remove, v20875, [], JAM.policy.p3);
    }
    this.helper = null;
    if (!c$$335) {
      f$$108 = 0;
      var v4376 = f$$108 < d$$262.length;
      for (;v4376;) {
        var v4375 = d$$262[f$$108];
        JAM.call(v4375.call, v4375, [this, b$$408], JAM.policy.p3);
        f$$108 = f$$108 + 1;
        v4376 = f$$108 < d$$262.length;
      }
      JAM.call(this._trigger, this, ["stop", b$$408, JAM.call(this._uiHash, this, [], JAM.policy.p3)], JAM.policy.p3);
    }
    this.fromOutside = !1;
    return!0;
  }
  function v1336(a$$462, b$$407, c$$334, d$$261) {
    function v1335() {
      var v4379 = f$$107 == e$$241.counter;
      if (v4379) {
        JAM.call(e$$241.refreshPositions, e$$241, [!d$$261], JAM.policy.p3);
      }
      return;
    }
    var v11203;
    if (c$$334) {
      var v16826 = c$$334[0];
      v11203 = JAM.call(v16826.appendChild, v16826, [this.placeholder[0]], JAM.policy.p3);
    } else {
      var v16828 = b$$407.item[0].parentNode;
      var v16829 = this.placeholder[0];
      var v20879;
      if (this.direction == "down") {
        v20879 = b$$407.item[0];
      } else {
        v20879 = b$$407.item[0].nextSibling;
      }
      v11203 = JAM.call(v16828.insertBefore, v16828, [v16829, v20879], JAM.policy.p3);
    }
    v11203;
    var v11204;
    if (this.counter) {
      v11204 = this.counter = this.counter + 1;
    } else {
      v11204 = 1;
    }
    this.counter = v11204;
    var e$$241 = this;
    var f$$107 = this.counter;
    JAM.call(window.setTimeout, window, [v1335, 0], JAM.policy.p3);
    return;
  }
  function v1334(b$$406) {
    var c$$333 = this.options;
    var v4380;
    var v16832 = this.cssPosition == "absolute";
    if (v16832) {
      var v20882 = this.scrollParent[0] == document;
      if (!v20882) {
        var v27037 = a$$452.ui;
        v20882 = !JAM.call(v27037.contains, v27037, [this.scrollParent[0], this.offsetParent[0]], JAM.policy.p3);
      }
      v16832 = v20882;
    }
    if (v16832) {
      v4380 = this.offsetParent;
    } else {
      v4380 = this.scrollParent;
    }
    var d$$260 = v4380;
    var e$$240 = JAM.call(/(html|body)/i.test, /(html|body)/i, [d$$260[0].tagName], JAM.policy.p3);
    var v11207 = this.cssPosition == "relative";
    if (v11207) {
      var v16834 = this.scrollParent[0] == document;
      if (!v16834) {
        v16834 = this.scrollParent[0] == this.offsetParent[0];
      }
      v11207 = v16834;
    }
    var v4382 = v11207;
    if (v4382) {
      var v11208 = this.offset;
      var v31280 = JAM.call(this._getRelativeOffset, this, [], JAM.policy.p3);
      v11208.relative = v31280;
    }
    var f$$106 = b$$406.pageX;
    var g$$138 = b$$406.pageY;
    if (this.originalPosition) {
      var v4383 = this.containment;
      if (v4383) {
        var v25153 = b$$406.pageX - this.offset.click.left < this.containment[0];
        if (v25153) {
          f$$106 = this.containment[0] + this.offset.click.left;
        }
        var v25154 = b$$406.pageY - this.offset.click.top < this.containment[1];
        if (v25154) {
          g$$138 = this.containment[1] + this.offset.click.top;
        }
        var v20887 = b$$406.pageX - this.offset.click.left > this.containment[2];
        if (v20887) {
          f$$106 = this.containment[2] + this.offset.click.left;
        }
        var v16835 = b$$406.pageY - this.offset.click.top > this.containment[3];
        if (v16835) {
          g$$138 = this.containment[3] + this.offset.click.top;
        }
      }
      if (c$$333.grid) {
        var h$$112 = this.originalPageY + JAM.call(Math.round, Math, [(g$$138 - this.originalPageY) / c$$333.grid[1]], JAM.policy.p3) * c$$333.grid[1];
        var v4386;
        if (this.containment) {
          var v11211;
          var v20894 = h$$112 - this.offset.click.top < this.containment[1];
          if (!v20894) {
            v20894 = h$$112 - this.offset.click.top > this.containment[3];
          }
          if (v20894) {
            var v16838;
            if (h$$112 - this.offset.click.top < this.containment[1]) {
              v16838 = h$$112 + c$$333.grid[1];
            } else {
              v16838 = h$$112 - c$$333.grid[1];
            }
            v11211 = v16838;
          } else {
            v11211 = h$$112;
          }
          v4386 = v11211;
        } else {
          v4386 = h$$112;
        }
        g$$138 = v4386;
        var i$$169 = this.originalPageX + JAM.call(Math.round, Math, [(f$$106 - this.originalPageX) / c$$333.grid[0]], JAM.policy.p3) * c$$333.grid[0];
        var v4389;
        if (this.containment) {
          var v11215;
          var v20900 = i$$169 - this.offset.click.left < this.containment[0];
          if (!v20900) {
            v20900 = i$$169 - this.offset.click.left > this.containment[2];
          }
          if (v20900) {
            var v16842;
            if (i$$169 - this.offset.click.left < this.containment[0]) {
              v16842 = i$$169 + c$$333.grid[0];
            } else {
              v16842 = i$$169 - c$$333.grid[0];
            }
            v11215 = v16842;
          } else {
            v11215 = i$$169;
          }
          v4389 = v11215;
        } else {
          v4389 = i$$169;
        }
        f$$106 = v4389;
      }
    }
    var v11217 = g$$138 - this.offset.click.top - this.offset.relative.top - this.offset.parent.top;
    var v16846;
    var v25189 = a$$452.browser.safari;
    if (v25189) {
      v25189 = this.cssPosition == "fixed";
    }
    if (v25189) {
      v16846 = 0;
    } else {
      var v20907;
      if (this.cssPosition == "fixed") {
        var v27072 = this.scrollParent;
        v20907 = -JAM.call(v27072.scrollTop, v27072, [], JAM.policy.p3);
      } else {
        var v25191;
        if (e$$240) {
          v25191 = 0;
        } else {
          v25191 = JAM.call(d$$260.scrollTop, d$$260, [], JAM.policy.p3);
        }
        v20907 = v25191;
      }
      v16846 = v20907;
    }
    var v4392 = v11217 + v16846;
    var v11219 = f$$106 - this.offset.click.left - this.offset.relative.left - this.offset.parent.left;
    var v16849;
    var v25196 = a$$452.browser.safari;
    if (v25196) {
      v25196 = this.cssPosition == "fixed";
    }
    if (v25196) {
      v16849 = 0;
    } else {
      var v20912;
      if (this.cssPosition == "fixed") {
        var v27078 = this.scrollParent;
        v20912 = -JAM.call(v27078.scrollLeft, v27078, [], JAM.policy.p3);
      } else {
        var v25198;
        if (e$$240) {
          v25198 = 0;
        } else {
          v25198 = JAM.call(d$$260.scrollLeft, d$$260, [], JAM.policy.p3);
        }
        v20912 = v25198;
      }
      v16849 = v20912;
    }
    return{top:v4392, left:v11219 + v16849};
  }
  function v1333(b$$405, c$$332) {
    if (!c$$332) {
      c$$332 = this.position;
    }
    var v4394;
    if (b$$405 == "absolute") {
      v4394 = 1;
    } else {
      v4394 = -1;
    }
    var d$$259 = v4394;
    var e$$239 = this.options;
    var v4395;
    var v16850 = this.cssPosition == "absolute";
    if (v16850) {
      var v20915 = this.scrollParent[0] == document;
      if (!v20915) {
        var v27080 = a$$452.ui;
        v20915 = !JAM.call(v27080.contains, v27080, [this.scrollParent[0], this.offsetParent[0]], JAM.policy.p3);
      }
      v16850 = v20915;
    }
    if (v16850) {
      v4395 = this.offsetParent;
    } else {
      v4395 = this.scrollParent;
    }
    var f$$105 = v4395;
    var g$$137 = JAM.call(/(html|body)/i.test, /(html|body)/i, [f$$105[0].tagName], JAM.policy.p3);
    var v11225 = c$$332.top + this.offset.relative.top * d$$259 + this.offset.parent.top * d$$259;
    var v16853;
    var v25205 = a$$452.browser.safari;
    if (v25205) {
      v25205 = this.cssPosition == "fixed";
    }
    if (v25205) {
      v16853 = 0;
    } else {
      var v25206;
      if (this.cssPosition == "fixed") {
        var v28352 = this.scrollParent;
        v25206 = -JAM.call(v28352.scrollTop, v28352, [], JAM.policy.p3);
      } else {
        var v27088;
        if (g$$137) {
          v27088 = 0;
        } else {
          v27088 = JAM.call(f$$105.scrollTop, f$$105, [], JAM.policy.p3);
        }
        v25206 = v27088;
      }
      v16853 = v25206 * d$$259;
    }
    var v4397 = v11225 - v16853;
    var v11227 = c$$332.left + this.offset.relative.left * d$$259 + this.offset.parent.left * d$$259;
    var v16856;
    var v25209 = a$$452.browser.safari;
    if (v25209) {
      v25209 = this.cssPosition == "fixed";
    }
    if (v25209) {
      v16856 = 0;
    } else {
      var v25210;
      if (this.cssPosition == "fixed") {
        var v28355 = this.scrollParent;
        v25210 = -JAM.call(v28355.scrollLeft, v28355, [], JAM.policy.p3);
      } else {
        var v27095;
        if (g$$137) {
          v27095 = 0;
        } else {
          v27095 = JAM.call(f$$105.scrollLeft, f$$105, [], JAM.policy.p3);
        }
        v25210 = v27095;
      }
      v16856 = v25210 * d$$259;
    }
    return{top:v4397, left:v11227 - v16856};
  }
  function v1332() {
    var b$$404 = this.options;
    var v4399 = b$$404.containment == "parent";
    if (v4399) {
      b$$404.containment = this.helper[0].parentNode;
    }
    var v11231 = b$$404.containment == "document";
    if (!v11231) {
      v11231 = b$$404.containment == "window";
    }
    if (v11231) {
      var v4400 = 0 - this.offset.relative.left - this.offset.parent.left;
      var v4401 = 0 - this.offset.relative.top - this.offset.parent.top;
      var v27097;
      if (b$$404.containment == "document") {
        v27097 = document;
      } else {
        v27097 = window;
      }
      var v20930 = JAM.call(a$$452, null, [v27097], JAM.policy.p3);
      var v4402 = JAM.call(v20930.width, v20930, [], JAM.policy.p3) - this.helperProportions.width - this.margins.left;
      var v28357;
      if (b$$404.containment == "document") {
        v28357 = document;
      } else {
        v28357 = window;
      }
      var v25214 = JAM.call(a$$452, null, [v28357], JAM.policy.p3);
      var v20932 = JAM.call(v25214.height, v25214, [], JAM.policy.p3);
      if (!v20932) {
        v20932 = document.body.parentNode.scrollHeight;
      }
      this.containment = [v4400, v4401, v4402, v20932 - this.helperProportions.height - this.margins.top];
    }
    if (!JAM.call(/^(document|window|parent)$/.test, /^(document|window|parent)$/, [b$$404.containment], JAM.policy.p3)) {
      var c$$331 = JAM.call(a$$452, null, [b$$404.containment], JAM.policy.p3)[0];
      var v4406 = JAM.call(a$$452, null, [b$$404.containment], JAM.policy.p3);
      var d$$258 = JAM.call(v4406.offset, v4406, [], JAM.policy.p3);
      var v11243 = JAM.call(a$$452, null, [c$$331], JAM.policy.p3);
      var e$$238 = JAM.call(v11243.css, v11243, ["overflow"], JAM.policy.p3) != "hidden";
      var v20934 = d$$258.left;
      var v28358 = JAM.call(a$$452, null, [c$$331], JAM.policy.p3);
      var v25217 = JAM.call(parseInt, null, [JAM.call(v28358.css, v28358, ["borderLeftWidth"], JAM.policy.p3), 10], JAM.policy.p3);
      if (!v25217) {
        v25217 = 0;
      }
      var v16872 = v20934 + v25217;
      var v27102 = JAM.call(a$$452, null, [c$$331], JAM.policy.p3);
      var v20936 = JAM.call(parseInt, null, [JAM.call(v27102.css, v27102, ["paddingLeft"], JAM.policy.p3), 10], JAM.policy.p3);
      if (!v20936) {
        v20936 = 0;
      }
      var v4408 = v16872 + v20936 - this.margins.left;
      var v20937 = d$$258.top;
      var v28359 = JAM.call(a$$452, null, [c$$331], JAM.policy.p3);
      var v25220 = JAM.call(parseInt, null, [JAM.call(v28359.css, v28359, ["borderTopWidth"], JAM.policy.p3), 10], JAM.policy.p3);
      if (!v25220) {
        v25220 = 0;
      }
      var v16875 = v20937 + v25220;
      var v27105 = JAM.call(a$$452, null, [c$$331], JAM.policy.p3);
      var v20939 = JAM.call(parseInt, null, [JAM.call(v27105.css, v27105, ["paddingTop"], JAM.policy.p3), 10], JAM.policy.p3);
      if (!v20939) {
        v20939 = 0;
      }
      var v4409 = v16875 + v20939 - this.margins.top;
      var v27106 = d$$258.left;
      var v28360;
      if (e$$238) {
        v28360 = JAM.call(Math.max, Math, [c$$331.scrollWidth, c$$331.offsetWidth], JAM.policy.p3);
      } else {
        v28360 = c$$331.offsetWidth;
      }
      var v25223 = v27106 + v28360;
      var v29193 = JAM.call(a$$452, null, [c$$331], JAM.policy.p3);
      var v27108 = JAM.call(parseInt, null, [JAM.call(v29193.css, v29193, ["borderLeftWidth"], JAM.policy.p3), 10], JAM.policy.p3);
      if (!v27108) {
        v27108 = 0;
      }
      var v20940 = v25223 - v27108;
      var v28363 = JAM.call(a$$452, null, [c$$331], JAM.policy.p3);
      var v25225 = JAM.call(parseInt, null, [JAM.call(v28363.css, v28363, ["paddingRight"], JAM.policy.p3), 10], JAM.policy.p3);
      if (!v25225) {
        v25225 = 0;
      }
      var v4410 = v20940 - v25225 - this.helperProportions.width - this.margins.left;
      var v27111 = d$$258.top;
      var v28364;
      if (e$$238) {
        v28364 = JAM.call(Math.max, Math, [c$$331.scrollHeight, c$$331.offsetHeight], JAM.policy.p3);
      } else {
        v28364 = c$$331.offsetHeight;
      }
      var v25226 = v27111 + v28364;
      var v29196 = JAM.call(a$$452, null, [c$$331], JAM.policy.p3);
      var v27113 = JAM.call(parseInt, null, [JAM.call(v29196.css, v29196, ["borderTopWidth"], JAM.policy.p3), 10], JAM.policy.p3);
      if (!v27113) {
        v27113 = 0;
      }
      var v20943 = v25226 - v27113;
      var v28367 = JAM.call(a$$452, null, [c$$331], JAM.policy.p3);
      var v25228 = JAM.call(parseInt, null, [JAM.call(v28367.css, v28367, ["paddingBottom"], JAM.policy.p3), 10], JAM.policy.p3);
      if (!v25228) {
        v25228 = 0;
      }
      this.containment = [v4408, v4409, v4410, v20943 - v25228 - this.helperProportions.height - this.margins.top];
    }
    return;
  }
  function v1331() {
    var v11252 = this.helper;
    var v4413 = JAM.call(v11252.outerWidth, v11252, [], JAM.policy.p3);
    var v11253 = this.helper;
    this.helperProportions = {width:v4413, height:JAM.call(v11253.outerHeight, v11253, [], JAM.policy.p3)};
    return;
  }
  function v1330() {
    var v20946 = this.currentItem;
    var v11254 = JAM.call(parseInt, null, [JAM.call(v20946.css, v20946, ["marginLeft"], JAM.policy.p3), 10], JAM.policy.p3);
    if (!v11254) {
      v11254 = 0;
    }
    var v4415 = v11254;
    var v20947 = this.currentItem;
    var v11255 = JAM.call(parseInt, null, [JAM.call(v20947.css, v20947, ["marginTop"], JAM.policy.p3), 10], JAM.policy.p3);
    if (!v11255) {
      v11255 = 0;
    }
    this.margins = {left:v4415, top:v11255};
    return;
  }
  function v1329() {
    if (this.cssPosition == "relative") {
      var v4417 = this.currentItem;
      var a$$461 = JAM.call(v4417.position, v4417, [], JAM.policy.p3);
      var v16888 = a$$461.top;
      var v27116 = this.helper;
      var v20948 = JAM.call(parseInt, null, [JAM.call(v27116.css, v27116, ["top"], JAM.policy.p3), 10], JAM.policy.p3);
      if (!v20948) {
        v20948 = 0;
      }
      var v11257 = v16888 - v20948;
      var v16890 = this.scrollParent;
      var v4418 = v11257 + JAM.call(v16890.scrollTop, v16890, [], JAM.policy.p3);
      var v16891 = a$$461.left;
      var v27117 = this.helper;
      var v20949 = JAM.call(parseInt, null, [JAM.call(v27117.css, v27117, ["left"], JAM.policy.p3), 10], JAM.policy.p3);
      if (!v20949) {
        v20949 = 0;
      }
      var v11259 = v16891 - v20949;
      var v16893 = this.scrollParent;
      return{top:v4418, left:v11259 + JAM.call(v16893.scrollLeft, v16893, [], JAM.policy.p3)};
    }
    return{top:0, left:0};
  }
  function v1328() {
    var v4421 = this.helper;
    var v31281 = JAM.call(v4421.offsetParent, v4421, [], JAM.policy.p3);
    this.offsetParent = v31281;
    var v4422 = this.offsetParent;
    var b$$403 = JAM.call(v4422.offset, v4422, [], JAM.policy.p3);
    var v16894 = this.cssPosition == "absolute";
    if (v16894) {
      v16894 = this.scrollParent[0] != document;
    }
    var v11261 = v16894;
    if (v11261) {
      var v16895 = a$$452.ui;
      v11261 = JAM.call(v16895.contains, v16895, [this.scrollParent[0], this.offsetParent[0]], JAM.policy.p3);
    }
    var v4423 = v11261;
    if (v4423) {
      var v16898 = b$$403;
      var v25234 = v16898.left;
      var v27118 = this.scrollParent;
      v16898.left = v25234 + JAM.call(v27118.scrollLeft, v27118, [], JAM.policy.p3);
      var v16899 = b$$403;
      var v25236 = v16899.top;
      var v27119 = this.scrollParent;
      v16899.top = v25236 + JAM.call(v27119.scrollTop, v27119, [], JAM.policy.p3);
    }
    var v11262 = this.offsetParent[0] == document.body;
    if (!v11262) {
      var v20955 = this.offsetParent[0].tagName;
      if (v20955) {
        var v27121 = this.offsetParent[0].tagName;
        v20955 = JAM.call(v27121.toLowerCase, v27121, [], JAM.policy.p3) == "html";
      }
      var v16902 = v20955;
      if (v16902) {
        v16902 = a$$452.browser.msie;
      }
      v11262 = v16902;
    }
    if (v11262) {
      b$$403 = {top:0, left:0};
    }
    var v11263 = b$$403.top;
    var v25240 = this.offsetParent;
    var v16904 = JAM.call(parseInt, null, [JAM.call(v25240.css, v25240, ["borderTopWidth"], JAM.policy.p3), 10], JAM.policy.p3);
    if (!v16904) {
      v16904 = 0;
    }
    var v4425 = v11263 + v16904;
    var v11265 = b$$403.left;
    var v25241 = this.offsetParent;
    var v16905 = JAM.call(parseInt, null, [JAM.call(v25241.css, v25241, ["borderLeftWidth"], JAM.policy.p3), 10], JAM.policy.p3);
    if (!v16905) {
      v16905 = 0;
    }
    return{top:v4425, left:v11265 + v16905};
  }
  function v1327(b$$402) {
    var v27122 = typeof b$$402 == "string";
    if (v27122) {
      b$$402 = JAM.call(b$$402.split, b$$402, [" "], JAM.policy.p3);
    }
    var v27123 = JAM.call(a$$452.isArray, a$$452, [b$$402], JAM.policy.p3);
    if (v27123) {
      var v28370 = +b$$402[0];
      var v29199 = +b$$402[1];
      if (!v29199) {
        v29199 = 0;
      }
      b$$402 = {left:v28370, top:v29199};
    }
    var v25242 = "left" in b$$402;
    if (v25242) {
      this.offset.click.left = b$$402.left + this.margins.left;
    }
    var v20961 = "right" in b$$402;
    if (v20961) {
      this.offset.click.left = this.helperProportions.width - b$$402.right + this.margins.left;
    }
    var v16906 = "top" in b$$402;
    if (v16906) {
      this.offset.click.top = b$$402.top + this.margins.top;
    }
    var v11267 = "bottom" in b$$402;
    if (v11267) {
      this.offset.click.top = this.helperProportions.height - b$$402.bottom + this.margins.top;
    }
    return;
  }
  function v1326(b$$401) {
    var c$$330 = this.options;
    var v4427;
    if (JAM.call(a$$452.isFunction, a$$452, [c$$330.helper], JAM.policy.p3)) {
      var v16909 = c$$330.helper;
      v4427 = JAM.call(a$$452, null, [JAM.call(v16909.apply, v16909, [this.element[0], [b$$401, this.currentItem]], JAM.policy.p3)], JAM.policy.p3);
    } else {
      var v11269;
      if (c$$330.helper == "clone") {
        var v16912 = this.currentItem;
        v11269 = JAM.call(v16912.clone, v16912, [], JAM.policy.p3);
      } else {
        v11269 = this.currentItem;
      }
      v4427 = v11269;
    }
    var d$$257 = v4427;
    var v25250 = JAM.call(d$$257.parents, d$$257, ["body"], JAM.policy.p3).length;
    if (!v25250) {
      var v29748;
      if (c$$330.appendTo != "parent") {
        v29748 = c$$330.appendTo;
      } else {
        v29748 = this.currentItem[0].parentNode;
      }
      var v27131 = JAM.call(a$$452, null, [v29748], JAM.policy.p3)[0];
      JAM.call(v27131.appendChild, v27131, [d$$257[0]], JAM.policy.p3);
    }
    var v25251 = d$$257[0] == this.currentItem[0];
    if (v25251) {
      var v27136 = this.currentItem[0].style.width;
      var v27137 = this.currentItem[0].style.height;
      var v28382 = this.currentItem;
      var v27138 = JAM.call(v28382.css, v28382, ["position"], JAM.policy.p3);
      var v28383 = this.currentItem;
      var v27139 = JAM.call(v28383.css, v28383, ["top"], JAM.policy.p3);
      var v28384 = this.currentItem;
      this._storedCSS = {width:v27136, height:v27137, position:v27138, top:v27139, left:JAM.call(v28384.css, v28384, ["left"], JAM.policy.p3)};
    }
    var v25252 = d$$257[0].style.width == "";
    if (!v25252) {
      v25252 = c$$330.forceHelperSize;
    }
    var v20969 = v25252;
    if (v20969) {
      var v27143 = this.currentItem;
      JAM.call(d$$257.width, d$$257, [JAM.call(v27143.width, v27143, [], JAM.policy.p3)], JAM.policy.p3);
    }
    var v20970 = d$$257[0].style.height == "";
    if (!v20970) {
      v20970 = c$$330.forceHelperSize;
    }
    var v16914 = v20970;
    if (v16914) {
      var v25256 = this.currentItem;
      JAM.call(d$$257.height, d$$257, [JAM.call(v25256.height, v25256, [], JAM.policy.p3)], JAM.policy.p3);
    }
    return d$$257;
  }
  function v1325(b$$400) {
    var c$$329 = null;
    var d$$256 = null;
    var e$$237 = this.containers.length - 1;
    var v4433 = e$$237 >= 0;
    for (;v4433;) {
      var v11272 = a$$452.ui;
      if (JAM.call(v11272.contains, v11272, [this.currentItem[0], this.containers[e$$237].element[0]], JAM.policy.p3)) {
        e$$237 = e$$237 - 1;
        v4433 = e$$237 >= 0;
        continue;
      }
      if (JAM.call(this._intersectsWith, this, [this.containers[e$$237].containerCache], JAM.policy.p3)) {
        var v11276 = c$$329;
        if (v11276) {
          var v16918 = a$$452.ui;
          v11276 = JAM.call(v16918.contains, v16918, [this.containers[e$$237].element[0], c$$329.element[0]], JAM.policy.p3);
        }
        if (v11276) {
          e$$237 = e$$237 - 1;
          v4433 = e$$237 >= 0;
          continue;
        }
        c$$329 = this.containers[e$$237];
        d$$256 = e$$237;
      } else {
        var v4431 = this.containers[e$$237].containerCache.over;
        if (v4431) {
          var v16922 = this.containers[e$$237];
          JAM.call(v16922._trigger, v16922, ["out", b$$400, JAM.call(this._uiHash, this, [this], JAM.policy.p3)], JAM.policy.p3);
          this.containers[e$$237].containerCache.over = 0;
        }
      }
      e$$237 = e$$237 - 1;
      v4433 = e$$237 >= 0;
    }
    if (!c$$329) {
      return;
    }
    if (this.containers.length === 1) {
      var v11280 = this.containers[d$$256];
      JAM.call(v11280._trigger, v11280, ["over", b$$400, JAM.call(this._uiHash, this, [this], JAM.policy.p3)], JAM.policy.p3);
      this.containers[d$$256].containerCache.over = 1;
    } else {
      if (this.currentContainer != this.containers[d$$256]) {
        var f$$104 = 1E4;
        var g$$136 = null;
        var v4435 = this.positionAbs;
        var v11285;
        if (this.containers[d$$256].floating) {
          v11285 = "left";
        } else {
          v11285 = "top";
        }
        var h$$111 = v4435[v11285];
        var i$$168 = this.items.length - 1;
        var v4441 = i$$168 >= 0;
        for (;v4441;) {
          var v16930 = a$$452.ui;
          if (!JAM.call(v16930.contains, v16930, [this.containers[d$$256].element[0], this.items[i$$168].item[0]], JAM.policy.p3)) {
            i$$168 = i$$168 - 1;
            v4441 = i$$168 >= 0;
            continue;
          }
          var v4439;
          if (this.containers[d$$256].floating) {
            var v16934 = this.items[i$$168].item;
            v4439 = JAM.call(v16934.offset, v16934, [], JAM.policy.p3).left;
          } else {
            var v16935 = this.items[i$$168].item;
            v4439 = JAM.call(v16935.offset, v16935, [], JAM.policy.p3).top;
          }
          var j$$80 = v4439;
          var v4440 = JAM.call(Math.abs, Math, [j$$80 - h$$111], JAM.policy.p3) < f$$104;
          if (v4440) {
            f$$104 = JAM.call(Math.abs, Math, [j$$80 - h$$111], JAM.policy.p3);
            g$$136 = this.items[i$$168];
            var v16937;
            if (j$$80 - h$$111 > 0) {
              v16937 = "down";
            } else {
              v16937 = "up";
            }
            this.direction = v16937;
          }
          i$$168 = i$$168 - 1;
          v4441 = i$$168 >= 0;
        }
        var v11292 = !g$$136;
        if (v11292) {
          v11292 = !this.options.dropOnEmpty;
        }
        if (v11292) {
          return;
        }
        this.currentContainer = this.containers[d$$256];
        var v28388;
        if (g$$136) {
          v28388 = JAM.call(this._rearrange, this, [b$$400, g$$136, null, !0], JAM.policy.p3);
        } else {
          v28388 = JAM.call(this._rearrange, this, [b$$400, null, this.containers[d$$256].element, !0], JAM.policy.p3);
        }
        v28388;
        JAM.call(this._trigger, this, ["change", b$$400, JAM.call(this._uiHash, this, [], JAM.policy.p3)], JAM.policy.p3);
        var v25266 = this.containers[d$$256];
        JAM.call(v25266._trigger, v25266, ["change", b$$400, JAM.call(this._uiHash, this, [this], JAM.policy.p3)], JAM.policy.p3);
        var v20990 = this.options.placeholder;
        JAM.call(v20990.update, v20990, [this.currentContainer, this.placeholder], JAM.policy.p3);
        var v16939 = this.containers[d$$256];
        JAM.call(v16939._trigger, v16939, ["over", b$$400, JAM.call(this._uiHash, this, [this], JAM.policy.p3)], JAM.policy.p3);
        this.containers[d$$256].containerCache.over = 1;
      }
    }
    return;
  }
  function v1324(b$$397) {
    function v1323(a$$460, b$$399) {
      var v11294 = e$$236;
      if (v11294) {
        v11294 = !d$$255.forcePlaceholderSize;
      }
      if (v11294) {
        return;
      }
      var v11295 = JAM.call(b$$399.height, b$$399, [], JAM.policy.p3);
      if (!v11295) {
        var v27150 = c$$328.currentItem;
        var v25269 = JAM.call(v27150.innerHeight, v27150, [], JAM.policy.p3);
        var v29209 = c$$328.currentItem;
        var v28389 = JAM.call(v29209.css, v29209, ["paddingTop"], JAM.policy.p3);
        if (!v28389) {
          v28389 = 0;
        }
        var v20995 = v25269 - JAM.call(parseInt, null, [v28389, 10], JAM.policy.p3);
        var v28390 = c$$328.currentItem;
        var v27152 = JAM.call(v28390.css, v28390, ["paddingBottom"], JAM.policy.p3);
        if (!v27152) {
          v27152 = 0;
        }
        JAM.call(b$$399.height, b$$399, [v20995 - JAM.call(parseInt, null, [v27152, 10], JAM.policy.p3)], JAM.policy.p3);
      }
      var v11296 = JAM.call(b$$399.width, b$$399, [], JAM.policy.p3);
      if (!v11296) {
        var v27153 = c$$328.currentItem;
        var v25272 = JAM.call(v27153.innerWidth, v27153, [], JAM.policy.p3);
        var v29211 = c$$328.currentItem;
        var v28392 = JAM.call(v29211.css, v29211, ["paddingLeft"], JAM.policy.p3);
        if (!v28392) {
          v28392 = 0;
        }
        var v20997 = v25272 - JAM.call(parseInt, null, [v28392, 10], JAM.policy.p3);
        var v28393 = c$$328.currentItem;
        var v27155 = JAM.call(v28393.css, v28393, ["paddingRight"], JAM.policy.p3);
        if (!v27155) {
          v27155 = 0;
        }
        JAM.call(b$$399.width, b$$399, [v20997 - JAM.call(parseInt, null, [v27155, 10], JAM.policy.p3)], JAM.policy.p3);
      }
      return;
    }
    function v1322() {
      var v16947 = JAM.call(a$$452, null, [JAM.call(document.createElement, document, [c$$328.currentItem[0].nodeName], JAM.policy.p3)], JAM.policy.p3);
      var v21000 = e$$236;
      if (!v21000) {
        v21000 = c$$328.currentItem[0].className + " ui-sortable-placeholder";
      }
      var v11297 = JAM.call(v16947.addClass, v16947, [v21000], JAM.policy.p3);
      var b$$398 = JAM.call(v11297.removeClass, v11297, ["ui-sortable-helper"], JAM.policy.p3)[0];
      if (!e$$236) {
        b$$398.style.visibility = "hidden";
      }
      return b$$398;
    }
    var c$$328 = b$$397 || this;
    var d$$255 = c$$328.options;
    var v11298 = !d$$255.placeholder;
    if (!v11298) {
      v11298 = d$$255.placeholder.constructor == String;
    }
    if (v11298) {
      var e$$236 = d$$255.placeholder;
      d$$255.placeholder = {element:v1322, update:v1323};
    }
    var v16954 = c$$328;
    var v25278 = d$$255.placeholder.element;
    var v31282 = JAM.call(a$$452, null, [JAM.call(v25278.call, v25278, [c$$328.element, c$$328.currentItem], JAM.policy.p3)], JAM.policy.p3);
    v16954.placeholder = v31282;
    var v16955 = c$$328.currentItem;
    JAM.call(v16955.after, v16955, [c$$328.placeholder], JAM.policy.p3);
    var v11299 = d$$255.placeholder;
    JAM.call(v11299.update, v11299, [c$$328, c$$328.placeholder], JAM.policy.p3);
    return;
  }
  function v1321(b$$396) {
    var v11301 = this.offsetParent;
    if (v11301) {
      v11301 = this.helper;
    }
    var v4448 = v11301;
    if (v4448) {
      var v11302 = this.offset;
      var v31283 = JAM.call(this._getParentOffset, this, [], JAM.policy.p3);
      v11302.parent = v31283;
    }
    var c$$327 = this.items.length - 1;
    var v4453 = c$$327 >= 0;
    for (;v4453;) {
      var d$$254 = this.items[c$$327];
      var v16957 = d$$254.instance != this.currentContainer;
      if (v16957) {
        v16957 = this.currentContainer;
      }
      var v11304 = v16957;
      if (v11304) {
        v11304 = d$$254.item[0] != this.currentItem[0];
      }
      if (v11304) {
        c$$327 = c$$327 - 1;
        v4453 = c$$327 >= 0;
        continue;
      }
      var v4452;
      if (this.options.toleranceElement) {
        v4452 = JAM.call(a$$452, null, [this.options.toleranceElement, d$$254.item], JAM.policy.p3);
      } else {
        v4452 = d$$254.item;
      }
      var e$$235 = v4452;
      if (!b$$396) {
        var v16962 = d$$254;
        var v31284 = JAM.call(e$$235.outerWidth, e$$235, [], JAM.policy.p3);
        v16962.width = v31284;
        var v16963 = d$$254;
        var v31285 = JAM.call(e$$235.outerHeight, e$$235, [], JAM.policy.p3);
        v16963.height = v31285;
      }
      var f$$103 = JAM.call(e$$235.offset, e$$235, [], JAM.policy.p3);
      d$$254.left = f$$103.left;
      d$$254.top = f$$103.top;
      c$$327 = c$$327 - 1;
      v4453 = c$$327 >= 0;
    }
    var v11309 = this.options.custom;
    if (v11309) {
      v11309 = this.options.custom.refreshContainers;
    }
    if (v11309) {
      var v4454 = this.options.custom.refreshContainers;
      JAM.call(v4454.call, v4454, [this], JAM.policy.p3);
    } else {
      c$$327 = this.containers.length - 1;
      var v4457 = c$$327 >= 0;
      for (;v4457;) {
        var v4456 = this.containers[c$$327].element;
        f$$103 = JAM.call(v4456.offset, v4456, [], JAM.policy.p3);
        this.containers[c$$327].containerCache.left = f$$103.left;
        this.containers[c$$327].containerCache.top = f$$103.top;
        var v16968 = this.containers[c$$327].containerCache;
        var v21011 = this.containers[c$$327].element;
        var v31286 = JAM.call(v21011.outerWidth, v21011, [], JAM.policy.p3);
        v16968.width = v31286;
        var v11313 = this.containers[c$$327].containerCache;
        var v16970 = this.containers[c$$327].element;
        var v31287 = JAM.call(v16970.outerHeight, v16970, [], JAM.policy.p3);
        v11313.height = v31287;
        c$$327 = c$$327 - 1;
        v4457 = c$$327 >= 0;
      }
    }
    return this;
  }
  function v1320(b$$395) {
    this.items = [];
    this.containers = [this];
    var c$$326 = this.items;
    var d$$253 = this;
    var v16971;
    if (JAM.call(a$$452.isFunction, a$$452, [this.options.items], JAM.policy.p3)) {
      var v21014 = this.options.items;
      v16971 = JAM.call(v21014.call, v21014, [this.element[0], b$$395, {item:this.currentItem}], JAM.policy.p3);
    } else {
      v16971 = JAM.call(a$$452, null, [this.options.items, this.element], JAM.policy.p3);
    }
    var e$$234 = [[v16971, this]];
    var f$$102 = JAM.call(this._connectWith, this, [], JAM.policy.p3);
    var v11315 = f$$102;
    if (v11315) {
      v11315 = this.ready;
    }
    if (v11315) {
      var g$$135 = f$$102.length - 1;
      var v4467 = g$$135 >= 0;
      for (;v4467;) {
        var h$$110 = JAM.call(a$$452, null, [f$$102[g$$135]], JAM.policy.p3);
        var i$$167 = h$$110.length - 1;
        var v4466 = i$$167 >= 0;
        for (;v4466;) {
          var j$$79 = JAM.call(a$$452.data, a$$452, [h$$110[i$$167], this.widgetName], JAM.policy.p3);
          var v16972 = j$$79;
          if (v16972) {
            v16972 = j$$79 != this;
          }
          var v11316 = v16972;
          if (v11316) {
            v11316 = !j$$79.options.disabled;
          }
          var v4465 = v11316;
          if (v4465) {
            var v25291;
            if (JAM.call(a$$452.isFunction, a$$452, [j$$79.options.items], JAM.policy.p3)) {
              var v27163 = j$$79.options.items;
              v25291 = JAM.call(v27163.call, v27163, [j$$79.element[0], b$$395, {item:this.currentItem}], JAM.policy.p3);
            } else {
              v25291 = JAM.call(a$$452, null, [j$$79.options.items, j$$79.element], JAM.policy.p3);
            }
            JAM.call(e$$234.push, e$$234, [[v25291, j$$79]], JAM.policy.p3);
            var v16975 = this.containers;
            JAM.call(v16975.push, v16975, [j$$79], JAM.policy.p3);
          }
          i$$167 = i$$167 - 1;
          v4466 = i$$167 >= 0;
        }
        g$$135 = g$$135 - 1;
        v4467 = g$$135 >= 0;
      }
    }
    g$$135 = e$$234.length - 1;
    var v4474 = g$$135 >= 0;
    for (;v4474;) {
      var k$$54 = e$$234[g$$135][1];
      var l$$64 = e$$234[g$$135][0];
      i$$167 = 0;
      var m$$35 = l$$64.length;
      var v4473 = i$$167 < m$$35;
      for (;v4473;) {
        var n$$85 = JAM.call(a$$452, null, [l$$64[i$$167]], JAM.policy.p3);
        JAM.call(n$$85.data, n$$85, [this.widgetName + "-item", k$$54], JAM.policy.p3);
        JAM.call(c$$326.push, c$$326, [{item:n$$85, instance:k$$54, width:0, height:0, left:0, top:0}], JAM.policy.p3);
        i$$167 = i$$167 + 1;
        v4473 = i$$167 < m$$35;
      }
      g$$135 = g$$135 - 1;
      v4474 = g$$135 >= 0;
    }
    return;
  }
  function v1319() {
    var v4475 = this.currentItem;
    var a$$459 = JAM.call(v4475.find, v4475, [":data(" + this.widgetName + "-item)"], JAM.policy.p3);
    var b$$394 = 0;
    var v4479 = b$$394 < this.items.length;
    for (;v4479;) {
      var c$$325 = 0;
      var v4478 = c$$325 < a$$459.length;
      for (;v4478;) {
        var v4477 = a$$459[c$$325] == this.items[b$$394].item[0];
        if (v4477) {
          var v11324 = this.items;
          JAM.call(v11324.splice, v11324, [b$$394, 1], JAM.policy.p3);
        }
        c$$325 = c$$325 + 1;
        v4478 = c$$325 < a$$459.length;
      }
      b$$394 = b$$394 + 1;
      v4479 = b$$394 < this.items.length;
    }
    return;
  }
  function v1318(b$$393) {
    function v1317() {
      JAM.call(d$$252.push, d$$252, [this], JAM.policy.p3);
      return;
    }
    var c$$324 = this;
    var d$$252 = [];
    var e$$233 = [];
    var f$$101 = JAM.call(this._connectWith, this, [], JAM.policy.p3);
    if (f$$101 && b$$393) {
      var g$$134 = f$$101.length - 1;
      var v4487 = g$$134 >= 0;
      for (;v4487;) {
        var h$$109 = JAM.call(a$$452, null, [f$$101[g$$134]], JAM.policy.p3);
        var i$$166 = h$$109.length - 1;
        var v4486 = i$$166 >= 0;
        for (;v4486;) {
          var j$$78 = JAM.call(a$$452.data, a$$452, [h$$109[i$$166], this.widgetName], JAM.policy.p3);
          var v16981 = j$$78;
          if (v16981) {
            v16981 = j$$78 != this;
          }
          var v11327 = v16981;
          if (v11327) {
            v11327 = !j$$78.options.disabled;
          }
          var v4485 = v11327;
          if (v4485) {
            var v21024;
            if (JAM.call(a$$452.isFunction, a$$452, [j$$78.options.items], JAM.policy.p3)) {
              var v25293 = j$$78.options.items;
              v21024 = JAM.call(v25293.call, v25293, [j$$78.element], JAM.policy.p3);
            } else {
              var v27171 = JAM.call(a$$452, null, [j$$78.options.items, j$$78.element], JAM.policy.p3);
              var v25295 = JAM.call(v27171.not, v27171, [".ui-sortable-helper"], JAM.policy.p3);
              v21024 = JAM.call(v25295.not, v25295, [".ui-sortable-placeholder"], JAM.policy.p3);
            }
            JAM.call(e$$233.push, e$$233, [[v21024, j$$78]], JAM.policy.p3);
          }
          i$$166 = i$$166 - 1;
          v4486 = i$$166 >= 0;
        }
        g$$134 = g$$134 - 1;
        v4487 = g$$134 >= 0;
      }
    }
    var v16984;
    if (JAM.call(a$$452.isFunction, a$$452, [this.options.items], JAM.policy.p3)) {
      var v21025 = this.options.items;
      v16984 = JAM.call(v21025.call, v21025, [this.element, null, {options:this.options, item:this.currentItem}], JAM.policy.p3);
    } else {
      var v25301 = JAM.call(a$$452, null, [this.options.items, this.element], JAM.policy.p3);
      var v21028 = JAM.call(v25301.not, v25301, [".ui-sortable-helper"], JAM.policy.p3);
      v16984 = JAM.call(v21028.not, v21028, [".ui-sortable-placeholder"], JAM.policy.p3);
    }
    JAM.call(e$$233.push, e$$233, [[v16984, this]], JAM.policy.p3);
    g$$134 = e$$233.length - 1;
    var v4492 = g$$134 >= 0;
    for (;v4492;) {
      var v4491 = e$$233[g$$134][0];
      JAM.call(v4491.each, v4491, [v1317], JAM.policy.p3);
      g$$134 = g$$134 - 1;
      v4492 = g$$134 >= 0;
    }
    return JAM.call(a$$452, null, [d$$252], JAM.policy.p3);
  }
  function v1316() {
    var a$$458 = this.options;
    var v4493;
    if (a$$458.connectWith.constructor == String) {
      v4493 = [a$$458.connectWith];
    } else {
      v4493 = a$$458.connectWith;
    }
    return v4493;
  }
  function v1315(a$$457) {
    JAM.call(this._refreshItems, this, [a$$457], JAM.policy.p3);
    JAM.call(this.refreshPositions, this, [], JAM.policy.p3);
    return this;
  }
  function v1314() {
    var a$$456 = this.positionAbs.left - this.lastPositionAbs.left;
    var v4496 = a$$456 != 0;
    if (v4496) {
      var v11335;
      if (a$$456 > 0) {
        v11335 = "right";
      } else {
        v11335 = "left";
      }
      v4496 = v11335;
    }
    return v4496;
  }
  function v1313() {
    var a$$455 = this.positionAbs.top - this.lastPositionAbs.top;
    var v4499 = a$$455 != 0;
    if (v4499) {
      var v11338;
      if (a$$455 > 0) {
        v11338 = "down";
      } else {
        v11338 = "up";
      }
      v4499 = v11338;
    }
    return v4499;
  }
  function v1312(b$$392) {
    var v4500 = a$$452.ui;
    var c$$323 = JAM.call(v4500.isOverAxis, v4500, [this.positionAbs.top + this.offset.click.top, b$$392.top + b$$392.height / 2, b$$392.height], JAM.policy.p3);
    var v4504 = a$$452.ui;
    var d$$251 = JAM.call(v4504.isOverAxis, v4504, [this.positionAbs.left + this.offset.click.left, b$$392.left + b$$392.width / 2, b$$392.width], JAM.policy.p3);
    var e$$232 = JAM.call(this._getDragVerticalDirection, this, [], JAM.policy.p3);
    var f$$100 = JAM.call(this._getDragHorizontalDirection, this, [], JAM.policy.p3);
    var v4508;
    var v16994 = this.floating;
    if (v16994) {
      v16994 = f$$100;
    }
    if (v16994) {
      var v16995 = f$$100 == "right";
      if (v16995) {
        v16995 = d$$251;
      }
      var v11347 = v16995;
      if (!v11347) {
        var v16996 = f$$100 == "left";
        if (v16996) {
          v16996 = !d$$251;
        }
        v11347 = v16996;
      }
      v4508 = v11347;
    } else {
      var v11348 = e$$232;
      if (v11348) {
        var v21033 = e$$232 == "down";
        if (v21033) {
          v21033 = c$$323;
        }
        var v16998 = v21033;
        if (!v16998) {
          var v21034 = e$$232 == "up";
          if (v21034) {
            v21034 = !c$$323;
          }
          v16998 = v21034;
        }
        v11348 = v16998;
      }
      v4508 = v11348;
    }
    return v4508;
  }
  function v1311(b$$391) {
    var v4509 = this.options.axis === "x";
    if (!v4509) {
      var v11351 = a$$452.ui;
      v4509 = JAM.call(v11351.isOverAxis, v11351, [this.positionAbs.top + this.offset.click.top, b$$391.top, b$$391.height], JAM.policy.p3);
    }
    var c$$322 = v4509;
    var v4510 = this.options.axis === "y";
    if (!v4510) {
      var v11357 = a$$452.ui;
      v4510 = JAM.call(v11357.isOverAxis, v11357, [this.positionAbs.left + this.offset.click.left, b$$391.left, b$$391.width], JAM.policy.p3);
    }
    var d$$250 = v4510;
    var e$$231 = c$$322 && d$$250;
    var f$$99 = JAM.call(this._getDragVerticalDirection, this, [], JAM.policy.p3);
    var g$$133 = JAM.call(this._getDragHorizontalDirection, this, [], JAM.policy.p3);
    var v4511;
    if (e$$231) {
      var v11362;
      if (this.floating) {
        var v17005;
        var v27175 = g$$133;
        if (v27175) {
          v27175 = g$$133 == "right";
        }
        var v25304 = v27175;
        if (!v25304) {
          v25304 = f$$99 == "down";
        }
        if (v25304) {
          v17005 = 2;
        } else {
          v17005 = 1;
        }
        v11362 = v17005;
      } else {
        var v17006 = f$$99;
        if (v17006) {
          var v21041;
          if (f$$99 == "down") {
            v21041 = 2;
          } else {
            v21041 = 1;
          }
          v17006 = v21041;
        }
        v11362 = v17006;
      }
      v4511 = v11362;
    } else {
      v4511 = !1;
    }
    return v4511;
  }
  function v1310(a$$454) {
    var b$$390 = this.positionAbs.left;
    var c$$321 = b$$390 + this.helperProportions.width;
    var d$$249 = this.positionAbs.top;
    var e$$230 = d$$249 + this.helperProportions.height;
    var f$$98 = a$$454.left;
    var g$$132 = f$$98 + a$$454.width;
    var h$$108 = a$$454.top;
    var i$$165 = h$$108 + a$$454.height;
    var j$$77 = this.offset.click.top;
    var k$$53 = this.offset.click.left;
    var v17008 = d$$249 + j$$77 > h$$108;
    if (v17008) {
      v17008 = d$$249 + j$$77 < i$$165;
    }
    var v11367 = v17008;
    if (v11367) {
      v11367 = b$$390 + k$$53 > f$$98;
    }
    var v4520 = v11367;
    if (v4520) {
      v4520 = b$$390 + k$$53 < g$$132;
    }
    var l$$63 = v4520;
    var v4521;
    var v21044 = this.options.tolerance == "pointer";
    if (!v21044) {
      v21044 = this.options.forcePointerForContainers;
    }
    var v17010 = v21044;
    if (!v17010) {
      var v21045 = this.options.tolerance != "pointer";
      if (v21045) {
        var v27179 = this.helperProportions;
        var v28406;
        if (this.floating) {
          v28406 = "width";
        } else {
          v28406 = "height";
        }
        var v25310 = v27179[v28406];
        var v28407;
        if (this.floating) {
          v28407 = "width";
        } else {
          v28407 = "height";
        }
        v21045 = v25310 > a$$454[v28407];
      }
      v17010 = v21045;
    }
    if (v17010) {
      v4521 = l$$63;
    } else {
      var v21047 = f$$98 < b$$390 + this.helperProportions.width / 2;
      if (v21047) {
        v21047 = c$$321 - this.helperProportions.width / 2 < g$$132;
      }
      var v17011 = v21047;
      if (v17011) {
        v17011 = h$$108 < d$$249 + this.helperProportions.height / 2;
      }
      var v11369 = v17011;
      if (v11369) {
        v11369 = e$$230 - this.helperProportions.height / 2 < i$$165;
      }
      v4521 = v11369;
    }
    return v4521;
  }
  function v1309(b$$389) {
    function v1308() {
      var v25316 = b$$389.item;
      if (!v25316) {
        v25316 = this;
      }
      var v17013 = JAM.call(a$$452, null, [v25316], JAM.policy.p3);
      var v21051 = b$$389.attribute;
      if (!v21051) {
        v21051 = "id";
      }
      var v11371 = JAM.call(v17013.attr, v17013, [v21051], JAM.policy.p3);
      if (!v11371) {
        v11371 = "";
      }
      JAM.call(d$$248.push, d$$248, [v11371], JAM.policy.p3);
      return;
    }
    var v11372 = b$$389;
    if (v11372) {
      v11372 = b$$389.connected;
    }
    var c$$320 = JAM.call(this._getItemsAsjQuery, this, [v11372], JAM.policy.p3);
    var d$$248 = [];
    b$$389 = b$$389 || {};
    JAM.call(c$$320.each, c$$320, [v1308], JAM.policy.p3);
    return d$$248;
  }
  function v1307(b$$388) {
    function v1306() {
      var v25318 = b$$388.item;
      if (!v25318) {
        v25318 = this;
      }
      var v17016 = JAM.call(a$$452, null, [v25318], JAM.policy.p3);
      var v21053 = b$$388.attribute;
      if (!v21053) {
        v21053 = "id";
      }
      var v11373 = JAM.call(v17016.attr, v17016, [v21053], JAM.policy.p3);
      if (!v11373) {
        v11373 = "";
      }
      var v4524 = v11373;
      var v11374 = b$$388.expression;
      if (!v11374) {
        v11374 = /(.+)[-=_](.+)/;
      }
      var c$$319 = JAM.call(v4524.match, v4524, [v11374], JAM.policy.p3);
      if (c$$319) {
        var v25320 = b$$388.key;
        if (!v25320) {
          v25320 = c$$319[1] + "[]";
        }
        var v17020 = v25320 + "=";
        var v21055;
        var v27190 = b$$388.key;
        if (v27190) {
          v27190 = b$$388.expression;
        }
        if (v27190) {
          v21055 = c$$319[1];
        } else {
          v21055 = c$$319[2];
        }
        JAM.call(d$$247.push, d$$247, [v17020 + v21055], JAM.policy.p3);
      }
      return;
    }
    var v11376 = b$$388;
    if (v11376) {
      v11376 = b$$388.connected;
    }
    var c$$318 = JAM.call(this._getItemsAsjQuery, this, [v11376], JAM.policy.p3);
    var d$$247 = [];
    b$$388 = b$$388 || {};
    var v21056 = JAM.call(a$$452, null, [c$$318], JAM.policy.p3);
    JAM.call(v21056.each, v21056, [v1306], JAM.policy.p3);
    var v21057 = !d$$247.length;
    if (v21057) {
      v21057 = b$$388.key;
    }
    var v17022 = v21057;
    if (v17022) {
      JAM.call(d$$247.push, d$$247, [b$$388.key + "="], JAM.policy.p3);
    }
    return JAM.call(d$$247.join, d$$247, ["&"], JAM.policy.p3);
  }
  function v1305() {
    var b$$387 = this;
    if (this.dragging) {
      JAM.call(this._mouseUp, this, [{target:null}], JAM.policy.p3);
      var v11378;
      if (this.options.helper == "original") {
        var v21060 = this.currentItem;
        var v17023 = JAM.call(v21060.css, v21060, [this._storedCSS], JAM.policy.p3);
        v11378 = JAM.call(v17023.removeClass, v17023, ["ui-sortable-helper"], JAM.policy.p3);
      } else {
        var v17024 = this.currentItem;
        v11378 = JAM.call(v17024.show, v17024, [], JAM.policy.p3);
      }
      v11378;
      var c$$317 = this.containers.length - 1;
      var v4528 = c$$317 >= 0;
      for (;v4528;) {
        var v11380 = this.containers[c$$317];
        JAM.call(v11380._trigger, v11380, ["deactivate", null, JAM.call(b$$387._uiHash, b$$387, [this], JAM.policy.p3)], JAM.policy.p3);
        var v11382 = this.containers[c$$317].containerCache.over;
        if (v11382) {
          var v21063 = this.containers[c$$317];
          JAM.call(v21063._trigger, v21063, ["out", null, JAM.call(b$$387._uiHash, b$$387, [this], JAM.policy.p3)], JAM.policy.p3);
          this.containers[c$$317].containerCache.over = 0;
        }
        c$$317 = c$$317 - 1;
        v4528 = c$$317 >= 0;
      }
    }
    var v11383 = this.placeholder;
    if (v11383) {
      var v27192 = this.placeholder[0].parentNode;
      if (v27192) {
        var v28412 = this.placeholder[0].parentNode;
        JAM.call(v28412.removeChild, v28412, [this.placeholder[0]], JAM.policy.p3);
      }
      var v29222 = this.options.helper != "original";
      if (v29222) {
        v29222 = this.helper;
      }
      var v28414 = v29222;
      if (v28414) {
        v28414 = this.helper[0].parentNode;
      }
      var v27193 = v28414;
      if (v27193) {
        var v28415 = this.helper;
        JAM.call(v28415.remove, v28415, [], JAM.policy.p3);
      }
      JAM.call(a$$452.extend, a$$452, [this, {helper:null, dragging:!1, reverting:!1, _noFinalSort:null}], JAM.policy.p3);
      var v21066;
      if (this.domPosition.prev) {
        var v25329 = JAM.call(a$$452, null, [this.domPosition.prev], JAM.policy.p3);
        v21066 = JAM.call(v25329.after, v25329, [this.currentItem], JAM.policy.p3);
      } else {
        var v25331 = JAM.call(a$$452, null, [this.domPosition.parent], JAM.policy.p3);
        v21066 = JAM.call(v25331.prepend, v25331, [this.currentItem], JAM.policy.p3);
      }
      v21066;
    }
    return this;
  }
  function v1304(b$$386, c$$316) {
    function v1303() {
      JAM.call(d$$246._clear, d$$246, [b$$386], JAM.policy.p3);
      return;
    }
    if (!b$$386) {
      return;
    }
    var v11384 = a$$452.ui.ddmanager;
    if (v11384) {
      v11384 = !this.options.dropBehaviour;
    }
    var v4531 = v11384;
    if (v4531) {
      var v11385 = a$$452.ui.ddmanager;
      JAM.call(v11385.drop, v11385, [this, b$$386], JAM.policy.p3);
    }
    if (this.options.revert) {
      var d$$246 = this;
      var v4532 = d$$246.placeholder;
      var e$$229 = JAM.call(v4532.offset, v4532, [], JAM.policy.p3);
      d$$246.reverting = !0;
      var v11387 = JAM.call(a$$452, null, [this.helper], JAM.policy.p3);
      var v21068 = e$$229.left - this.offset.parent.left - d$$246.margins.left;
      var v25336;
      if (this.offsetParent[0] == document.body) {
        v25336 = 0;
      } else {
        v25336 = this.offsetParent[0].scrollLeft;
      }
      var v17032 = v21068 + v25336;
      var v21070 = e$$229.top - this.offset.parent.top - d$$246.margins.top;
      var v25339;
      if (this.offsetParent[0] == document.body) {
        v25339 = 0;
      } else {
        v25339 = this.offsetParent[0].scrollTop;
      }
      var v11388 = {left:v17032, top:v21070 + v25339};
      var v17034 = JAM.call(parseInt, null, [this.options.revert, 10], JAM.policy.p3);
      if (!v17034) {
        v17034 = 500;
      }
      JAM.call(v11387.animate, v11387, [v11388, v17034, v1303], JAM.policy.p3);
    } else {
      JAM.call(this._clear, this, [b$$386, c$$316], JAM.policy.p3);
    }
    return!1;
  }
  function v1302(b$$385) {
    var v31288 = JAM.call(this._generatePosition, this, [b$$385], JAM.policy.p3);
    this.position = v31288;
    var v31289 = JAM.call(this._convertPositionTo, this, ["absolute"], JAM.policy.p3);
    this.positionAbs = v31289;
    var v11390 = this.lastPositionAbs;
    if (!v11390) {
      this.lastPositionAbs = this.positionAbs;
    }
    if (this.options.scroll) {
      var c$$315 = this.options;
      var d$$245 = !1;
      var v11392;
      var v21074 = this.scrollParent[0] != document;
      if (v21074) {
        v21074 = this.scrollParent[0].tagName != "HTML";
      }
      if (v21074) {
        var v21075;
        if (this.overflowOffset.top + this.scrollParent[0].offsetHeight - b$$385.pageY < c$$315.scrollSensitivity) {
          v21075 = this.scrollParent[0].scrollTop = d$$245 = this.scrollParent[0].scrollTop + c$$315.scrollSpeed;
        } else {
          var v25344 = b$$385.pageY - this.overflowOffset.top < c$$315.scrollSensitivity;
          if (v25344) {
            v25344 = this.scrollParent[0].scrollTop = d$$245 = this.scrollParent[0].scrollTop - c$$315.scrollSpeed;
          }
          v21075 = v25344;
        }
        v21075;
        var v21076;
        if (this.overflowOffset.left + this.scrollParent[0].offsetWidth - b$$385.pageX < c$$315.scrollSensitivity) {
          v21076 = this.scrollParent[0].scrollLeft = d$$245 = this.scrollParent[0].scrollLeft + c$$315.scrollSpeed;
        } else {
          var v25347 = b$$385.pageX - this.overflowOffset.left < c$$315.scrollSensitivity;
          if (v25347) {
            v25347 = this.scrollParent[0].scrollLeft = d$$245 = this.scrollParent[0].scrollLeft - c$$315.scrollSpeed;
          }
          v21076 = v25347;
        }
        v11392 = v21076;
      } else {
        var v21077;
        var v28443 = b$$385.pageY;
        var v29238 = JAM.call(a$$452, null, [document], JAM.policy.p3);
        if (v28443 - JAM.call(v29238.scrollTop, v29238, [], JAM.policy.p3) < c$$315.scrollSensitivity) {
          var v25349 = JAM.call(a$$452, null, [document], JAM.policy.p3);
          var v28445 = JAM.call(a$$452, null, [document], JAM.policy.p3);
          v21077 = d$$245 = JAM.call(v25349.scrollTop, v25349, [JAM.call(v28445.scrollTop, v28445, [], JAM.policy.p3) - c$$315.scrollSpeed], JAM.policy.p3);
        } else {
          var v29239 = JAM.call(a$$452, null, [window], JAM.policy.p3);
          var v28446 = JAM.call(v29239.height, v29239, [], JAM.policy.p3);
          var v29240 = b$$385.pageY;
          var v29761 = JAM.call(a$$452, null, [document], JAM.policy.p3);
          var v25351 = v28446 - (v29240 - JAM.call(v29761.scrollTop, v29761, [], JAM.policy.p3)) < c$$315.scrollSensitivity;
          if (v25351) {
            var v27233 = JAM.call(a$$452, null, [document], JAM.policy.p3);
            var v29242 = JAM.call(a$$452, null, [document], JAM.policy.p3);
            v25351 = d$$245 = JAM.call(v27233.scrollTop, v27233, [JAM.call(v29242.scrollTop, v29242, [], JAM.policy.p3) + c$$315.scrollSpeed], JAM.policy.p3);
          }
          v21077 = v25351;
        }
        v21077;
        var v21078;
        var v28450 = b$$385.pageX;
        var v29243 = JAM.call(a$$452, null, [document], JAM.policy.p3);
        if (v28450 - JAM.call(v29243.scrollLeft, v29243, [], JAM.policy.p3) < c$$315.scrollSensitivity) {
          var v25353 = JAM.call(a$$452, null, [document], JAM.policy.p3);
          var v28452 = JAM.call(a$$452, null, [document], JAM.policy.p3);
          v21078 = d$$245 = JAM.call(v25353.scrollLeft, v25353, [JAM.call(v28452.scrollLeft, v28452, [], JAM.policy.p3) - c$$315.scrollSpeed], JAM.policy.p3);
        } else {
          var v29244 = JAM.call(a$$452, null, [window], JAM.policy.p3);
          var v28453 = JAM.call(v29244.width, v29244, [], JAM.policy.p3);
          var v29245 = b$$385.pageX;
          var v29762 = JAM.call(a$$452, null, [document], JAM.policy.p3);
          var v25355 = v28453 - (v29245 - JAM.call(v29762.scrollLeft, v29762, [], JAM.policy.p3)) < c$$315.scrollSensitivity;
          if (v25355) {
            var v27241 = JAM.call(a$$452, null, [document], JAM.policy.p3);
            var v29247 = JAM.call(a$$452, null, [document], JAM.policy.p3);
            v25355 = d$$245 = JAM.call(v27241.scrollLeft, v27241, [JAM.call(v29247.scrollLeft, v29247, [], JAM.policy.p3) + c$$315.scrollSpeed], JAM.policy.p3);
          }
          v21078 = v25355;
        }
        v11392 = v21078;
      }
      v11392;
      var v21079 = d$$245 !== !1;
      if (v21079) {
        v21079 = a$$452.ui.ddmanager;
      }
      var v17037 = v21079;
      if (v17037) {
        v17037 = !c$$315.dropBehaviour;
      }
      var v11393 = v17037;
      if (v11393) {
        var v17038 = a$$452.ui.ddmanager;
        JAM.call(v17038.prepareOffsets, v17038, [this, b$$385], JAM.policy.p3);
      }
    }
    var v31290 = JAM.call(this._convertPositionTo, this, ["absolute"], JAM.policy.p3);
    this.positionAbs = v31290;
    var v11394 = !this.options.axis;
    if (!v11394) {
      v11394 = this.options.axis != "y";
    }
    if (v11394) {
      this.helper[0].style.left = this.position.left + "px";
    }
    var v11397 = !this.options.axis;
    if (!v11397) {
      v11397 = this.options.axis != "x";
    }
    if (v11397) {
      this.helper[0].style.top = this.position.top + "px";
    }
    var e$$228 = this.items.length - 1;
    var v4548 = e$$228 >= 0;
    for (;v4548;) {
      var f$$97 = this.items[e$$228];
      var g$$131 = f$$97.item[0];
      var h$$107 = JAM.call(this._intersectsWithPointer, this, [f$$97], JAM.policy.p3);
      if (!h$$107) {
        e$$228 = e$$228 - 1;
        v4548 = e$$228 >= 0;
        continue;
      }
      if (f$$97.instance !== this.currentContainer) {
        e$$228 = e$$228 - 1;
        v4548 = e$$228 >= 0;
        continue;
      }
      var v21086 = g$$131 != this.currentItem[0];
      if (v21086) {
        var v28457 = this.placeholder;
        var v29248;
        if (h$$107 == 1) {
          v29248 = "next";
        } else {
          v29248 = "prev";
        }
        v21086 = JAM.call(v28457[v29248], v28457, [], JAM.policy.p3)[0] != g$$131;
      }
      var v17049 = v21086;
      if (v17049) {
        var v25361 = a$$452.ui;
        v17049 = !JAM.call(v25361.contains, v25361, [this.placeholder[0], g$$131], JAM.policy.p3);
      }
      var v11403 = v17049;
      if (v11403) {
        var v17050;
        if (this.options.type == "semi-dynamic") {
          var v25364 = a$$452.ui;
          v17050 = !JAM.call(v25364.contains, v25364, [this.element[0], g$$131], JAM.policy.p3);
        } else {
          v17050 = !0;
        }
        v11403 = v17050;
      }
      if (v11403) {
        var v4544;
        if (h$$107 == 1) {
          v4544 = "down";
        } else {
          v4544 = "up";
        }
        this.direction = v4544;
        var v11405 = this.options.tolerance == "pointer";
        if (!v11405) {
          v11405 = JAM.call(this._intersectsWithSides, this, [f$$97], JAM.policy.p3);
        }
        if (v11405) {
          JAM.call(this._rearrange, this, [b$$385, f$$97], JAM.policy.p3);
        } else {
          break;
        }
        JAM.call(this._trigger, this, ["change", b$$385, JAM.call(this._uiHash, this, [], JAM.policy.p3)], JAM.policy.p3);
        break;
      }
      e$$228 = e$$228 - 1;
      v4548 = e$$228 >= 0;
    }
    JAM.call(this._contactContainers, this, [b$$385], JAM.policy.p3);
    var v25366 = a$$452.ui.ddmanager;
    if (v25366) {
      var v27249 = a$$452.ui.ddmanager;
      JAM.call(v27249.drag, v27249, [this, b$$385], JAM.policy.p3);
    }
    JAM.call(this._trigger, this, ["sort", b$$385, JAM.call(this._uiHash, this, [], JAM.policy.p3)], JAM.policy.p3);
    this.lastPositionAbs = this.positionAbs;
    return!1;
  }
  function v1301(b$$384, c$$314, d$$244) {
    var e$$227 = this.options;
    var f$$96 = this;
    this.currentContainer = this;
    JAM.call(this.refreshPositions, this, [], JAM.policy.p3);
    var v31291 = JAM.call(this._createHelper, this, [b$$384], JAM.policy.p3);
    this.helper = v31291;
    JAM.call(this._cacheHelperProportions, this, [], JAM.policy.p3);
    JAM.call(this._cacheMargins, this, [], JAM.policy.p3);
    var v31064 = this.helper;
    var v31292 = JAM.call(v31064.scrollParent, v31064, [], JAM.policy.p3);
    this.scrollParent = v31292;
    var v31053 = this.currentItem;
    var v31293 = JAM.call(v31053.offset, v31053, [], JAM.policy.p3);
    this.offset = v31293;
    this.offset = {top:this.offset.top - this.margins.top, left:this.offset.left - this.margins.left};
    JAM.call(a$$452.extend, a$$452, [this.offset, {click:{left:b$$384.pageX - this.offset.left, top:b$$384.pageY - this.offset.top}, parent:JAM.call(this._getParentOffset, this, [], JAM.policy.p3), relative:JAM.call(this._getRelativeOffset, this, [], JAM.policy.p3)}], JAM.policy.p3);
    var v30988 = this.helper;
    JAM.call(v30988.css, v30988, ["position", "absolute"], JAM.policy.p3);
    var v30949 = this.helper;
    var v31294 = JAM.call(v30949.css, v30949, ["position"], JAM.policy.p3);
    this.cssPosition = v31294;
    var v31295 = JAM.call(this._generatePosition, this, [b$$384], JAM.policy.p3);
    this.originalPosition = v31295;
    this.originalPageX = b$$384.pageX;
    this.originalPageY = b$$384.pageY;
    var v30544 = e$$227.cursorAt;
    if (v30544) {
      JAM.call(this._adjustOffsetFromHelper, this, [e$$227.cursorAt], JAM.policy.p3);
    }
    var v30687 = this.currentItem;
    var v30341 = JAM.call(v30687.prev, v30687, [], JAM.policy.p3)[0];
    var v30688 = this.currentItem;
    this.domPosition = {prev:v30341, parent:JAM.call(v30688.parent, v30688, [], JAM.policy.p3)[0]};
    var v30087 = this.helper[0] != this.currentItem[0];
    if (v30087) {
      var v30345 = this.currentItem;
      JAM.call(v30345.hide, v30345, [], JAM.policy.p3);
    }
    JAM.call(this._createPlaceholder, this, [], JAM.policy.p3);
    var v29249 = e$$227.containment;
    if (v29249) {
      JAM.call(this._setContainment, this, [], JAM.policy.p3);
    }
    var v28460 = e$$227.cursor;
    if (v28460) {
      var v30088 = JAM.call(a$$452, null, ["body"], JAM.policy.p3);
      var v29764 = JAM.call(v30088.css, v30088, ["cursor"], JAM.policy.p3);
      if (v29764) {
        var v30089 = JAM.call(a$$452, null, ["body"], JAM.policy.p3);
        var v31296 = JAM.call(v30089.css, v30089, ["cursor"], JAM.policy.p3);
        this._storedCursor = v31296;
      }
      var v29765 = JAM.call(a$$452, null, ["body"], JAM.policy.p3);
      JAM.call(v29765.css, v29765, ["cursor", e$$227.cursor], JAM.policy.p3);
    }
    var v27250 = e$$227.opacity;
    if (v27250) {
      var v29767 = this.helper;
      var v29250 = JAM.call(v29767.css, v29767, ["opacity"], JAM.policy.p3);
      if (v29250) {
        var v29768 = this.helper;
        var v31297 = JAM.call(v29768.css, v29768, ["opacity"], JAM.policy.p3);
        this._storedOpacity = v31297;
      }
      var v29251 = this.helper;
      JAM.call(v29251.css, v29251, ["opacity", e$$227.opacity], JAM.policy.p3);
    }
    var v25367 = e$$227.zIndex;
    if (v25367) {
      var v29253 = this.helper;
      var v28461 = JAM.call(v29253.css, v29253, ["zIndex"], JAM.policy.p3);
      if (v28461) {
        var v29254 = this.helper;
        var v31298 = JAM.call(v29254.css, v29254, ["zIndex"], JAM.policy.p3);
        this._storedZIndex = v31298;
      }
      var v28462 = this.helper;
      JAM.call(v28462.css, v28462, ["zIndex", e$$227.zIndex], JAM.policy.p3);
    }
    var v25368 = this.scrollParent[0] != document;
    if (v25368) {
      v25368 = this.scrollParent[0].tagName != "HTML";
    }
    var v21092 = v25368;
    if (v21092) {
      var v25369 = this.scrollParent;
      var v31299 = JAM.call(v25369.offset, v25369, [], JAM.policy.p3);
      this.overflowOffset = v31299;
    }
    JAM.call(this._trigger, this, ["start", b$$384, JAM.call(this._uiHash, this, [], JAM.policy.p3)], JAM.policy.p3);
    var v11406 = this._preserveHelperProportions;
    if (!v11406) {
      JAM.call(this._cacheHelperProportions, this, [], JAM.policy.p3);
    }
    if (!d$$244) {
      var g$$130 = this.containers.length - 1;
      var v4552 = g$$130 >= 0;
      for (;v4552;) {
        var v4550 = this.containers[g$$130];
        JAM.call(v4550._trigger, v4550, ["activate", b$$384, JAM.call(f$$96._uiHash, f$$96, [this], JAM.policy.p3)], JAM.policy.p3);
        g$$130 = g$$130 - 1;
        v4552 = g$$130 >= 0;
      }
    }
    var v27253 = a$$452.ui.ddmanager;
    if (v27253) {
      a$$452.ui.ddmanager.current = this;
    }
    var v28468 = a$$452.ui.ddmanager;
    if (v28468) {
      v28468 = !e$$227.dropBehaviour;
    }
    var v27254 = v28468;
    if (v27254) {
      var v28469 = a$$452.ui.ddmanager;
      JAM.call(v28469.prepareOffsets, v28469, [this, b$$384], JAM.policy.p3);
    }
    this.dragging = !0;
    var v21093 = this.helper;
    JAM.call(v21093.addClass, v21093, ["ui-sortable-helper"], JAM.policy.p3);
    JAM.call(this._mouseDrag, this, [b$$384], JAM.policy.p3);
    return!0;
  }
  function v1300(b$$383, c$$313) {
    function v1299() {
      var v4554 = this == b$$383.target;
      if (v4554) {
        h$$106 = !0;
      }
      return;
    }
    function v1298() {
      if (JAM.call(a$$452.data, a$$452, [this, d$$243.widgetName + "-item"], JAM.policy.p3) == f$$95) {
        e$$226 = JAM.call(a$$452, null, [this], JAM.policy.p3);
        return!1;
      }
      return;
    }
    var d$$243 = this;
    if (this.reverting) {
      return!1;
    }
    var v11411 = this.options.disabled;
    if (!v11411) {
      v11411 = this.options.type == "static";
    }
    if (v11411) {
      return!1;
    }
    JAM.call(this._refreshItems, this, [b$$383], JAM.policy.p3);
    var e$$226 = null;
    var f$$95 = this;
    var v11412 = JAM.call(a$$452, null, [b$$383.target], JAM.policy.p3);
    var v4558 = JAM.call(v11412.parents, v11412, [], JAM.policy.p3);
    var g$$129 = JAM.call(v4558.each, v4558, [v1298], JAM.policy.p3);
    var v4559 = JAM.call(a$$452.data, a$$452, [b$$383.target, d$$243.widgetName + "-item"], JAM.policy.p3) == f$$95;
    if (v4559) {
      e$$226 = JAM.call(a$$452, null, [b$$383.target], JAM.policy.p3);
    }
    if (!e$$226) {
      return!1;
    }
    var v11415 = this.options.handle;
    if (v11415) {
      v11415 = !c$$313;
    }
    if (v11415) {
      var h$$106 = !1;
      var v17063 = JAM.call(a$$452, null, [this.options.handle, e$$226], JAM.policy.p3);
      var v11416 = JAM.call(v17063.find, v17063, ["*"], JAM.policy.p3);
      var v4561 = JAM.call(v11416.andSelf, v11416, [], JAM.policy.p3);
      JAM.call(v4561.each, v4561, [v1299], JAM.policy.p3);
      if (!h$$106) {
        return!1;
      }
    }
    this.currentItem = e$$226;
    JAM.call(this._removeCurrentsFromItems, this, [], JAM.policy.p3);
    return!0;
  }
  function v1297(b$$382, c$$312) {
    var v4564;
    if (b$$382 === "disabled") {
      JAM.set(this.options, b$$382, c$$312, JAM.policy.p2);
      var v17065 = JAM.call(this.widget, this, [], JAM.policy.p3);
      var v21098;
      if (c$$312) {
        v21098 = "addClass";
      } else {
        v21098 = "removeClass";
      }
      v4564 = JAM.call(v17065[v21098], v17065, ["ui-sortable-disabled"], JAM.policy.p3);
    } else {
      var v11417 = a$$452.Widget.prototype._setOption;
      v4564 = JAM.call(v11417.apply, v11417, [this, arguments], JAM.policy.p3);
    }
    v4564;
    return;
  }
  function v1296() {
    var v17068 = a$$452.Widget.prototype.destroy;
    JAM.call(v17068.call, v17068, [this], JAM.policy.p3);
    var v17069 = this.element;
    JAM.call(v17069.removeClass, v17069, ["ui-sortable ui-sortable-disabled"], JAM.policy.p3);
    JAM.call(this._mouseDestroy, this, [], JAM.policy.p3);
    var b$$381 = this.items.length - 1;
    var v4568 = b$$381 >= 0;
    for (;v4568;) {
      var v4566 = this.items[b$$381].item;
      JAM.call(v4566.removeData, v4566, [this.widgetName + "-item"], JAM.policy.p3);
      b$$381 = b$$381 - 1;
      v4568 = b$$381 >= 0;
    }
    return this;
  }
  function v1295() {
    var a$$453 = this.options;
    this.containerCache = {};
    var v28470 = this.element;
    JAM.call(v28470.addClass, v28470, ["ui-sortable"], JAM.policy.p3);
    JAM.call(this.refresh, this, [], JAM.policy.p3);
    var v25372;
    if (this.items.length) {
      var v28472 = a$$453.axis === "x";
      if (!v28472) {
        var v29769 = this.items[0].item;
        v28472 = JAM.call(/left|right/.test, /left|right/, [JAM.call(v29769.css, v29769, ["float"], JAM.policy.p3)], JAM.policy.p3);
      }
      var v27255 = v28472;
      if (!v27255) {
        var v29263 = this.items[0].item;
        v27255 = JAM.call(/inline|table-cell/.test, /inline|table-cell/, [JAM.call(v29263.css, v29263, ["display"], JAM.policy.p3)], JAM.policy.p3);
      }
      v25372 = v27255;
    } else {
      v25372 = !1;
    }
    this.floating = v25372;
    var v21101 = this.element;
    var v31300 = JAM.call(v21101.offset, v21101, [], JAM.policy.p3);
    this.offset = v31300;
    JAM.call(this._mouseInit, this, [], JAM.policy.p3);
    this.ready = !0;
    return;
  }
  JAM.call(a$$452.widget, a$$452, ["ui.sortable", a$$452.ui.mouse, {widgetEventPrefix:"sort", ready:!1, options:{appendTo:"parent", axis:!1, connectWith:!1, containment:!1, cursor:"auto", cursorAt:!1, dropOnEmpty:!0, forcePlaceholderSize:!1, forceHelperSize:!1, grid:!1, handle:!1, helper:"original", items:"> *", opacity:!1, placeholder:!1, revert:!1, scroll:!0, scrollSensitivity:20, scrollSpeed:20, scope:"default", tolerance:"intersect", zIndex:1E3}, _create:v1295, destroy:v1296, _setOption:v1297, 
  _mouseCapture:v1300, _mouseStart:v1301, _mouseDrag:v1302, _mouseStop:v1304, cancel:v1305, serialize:v1307, toArray:v1309, _intersectsWith:v1310, _intersectsWithPointer:v1311, _intersectsWithSides:v1312, _getDragVerticalDirection:v1313, _getDragHorizontalDirection:v1314, refresh:v1315, _connectWith:v1316, _getItemsAsjQuery:v1318, _removeCurrentsFromItems:v1319, _refreshItems:v1320, refreshPositions:v1321, _createPlaceholder:v1324, _contactContainers:v1325, _createHelper:v1326, _adjustOffsetFromHelper:v1327, 
  _getParentOffset:v1328, _getRelativeOffset:v1329, _cacheMargins:v1330, _cacheHelperProportions:v1331, _setContainment:v1332, _convertPositionTo:v1333, _generatePosition:v1334, _rearrange:v1336, _clear:v1348, _trigger:v1349, _uiHash:v1350}], JAM.policy.p3);
  JAM.call(a$$452.extend, a$$452, [a$$452.ui.sortable, {version:"1.8.24"}], JAM.policy.p3);
  return;
}
function v1294(a$$451, b$$374) {
  function v1293(b$$379) {
    function v1292() {
      var d$$242 = JAM.call(a$$451.data, a$$451, [this, "selectable-item"], JAM.policy.p3);
      var v27257 = d$$242.$element;
      var v25373 = JAM.call(v27257.removeClass, v27257, ["ui-selecting"], JAM.policy.p3);
      JAM.call(v25373.addClass, v25373, ["ui-selected"], JAM.policy.p3);
      d$$242.selecting = !1;
      d$$242.selected = !0;
      d$$242.startselected = !0;
      JAM.call(c$$311._trigger, c$$311, ["selected", b$$379, {selected:d$$242.element}], JAM.policy.p3);
      return;
    }
    function v1291() {
      var d$$241 = JAM.call(a$$451.data, a$$451, [this, "selectable-item"], JAM.policy.p3);
      var v21115 = d$$241.$element;
      JAM.call(v21115.removeClass, v21115, ["ui-unselecting"], JAM.policy.p3);
      d$$241.unselecting = !1;
      d$$241.startselected = !1;
      JAM.call(c$$311._trigger, c$$311, ["unselected", b$$379, {unselected:d$$241.element}], JAM.policy.p3);
      return;
    }
    var c$$311 = this;
    this.dragged = !1;
    var d$$240 = this.options;
    var v25374 = JAM.call(a$$451, null, [".ui-unselecting", this.element[0]], JAM.policy.p3);
    JAM.call(v25374.each, v25374, [v1291], JAM.policy.p3);
    var v25375 = JAM.call(a$$451, null, [".ui-selecting", this.element[0]], JAM.policy.p3);
    JAM.call(v25375.each, v25375, [v1292], JAM.policy.p3);
    JAM.call(this._trigger, this, ["stop", b$$379], JAM.policy.p3);
    var v17077 = this.helper;
    JAM.call(v17077.remove, v17077, [], JAM.policy.p3);
    return!1;
  }
  function v1290(b$$378) {
    function v1289() {
      var i$$164 = JAM.call(a$$451.data, a$$451, [this, "selectable-item"], JAM.policy.p3);
      var v11428 = !i$$164;
      if (!v11428) {
        v11428 = i$$164.element == c$$310.element[0];
      }
      if (v11428) {
        return;
      }
      var j$$76 = !1;
      var v11429;
      if (d$$239.tolerance == "touch") {
        var v27260 = i$$164.left > g$$128;
        if (!v27260) {
          v27260 = i$$164.right < e$$225;
        }
        var v25376 = v27260;
        if (!v25376) {
          v25376 = i$$164.top > h$$105;
        }
        var v21118 = v25376;
        if (!v21118) {
          v21118 = i$$164.bottom < f$$94;
        }
        v11429 = j$$76 = !v21118;
      } else {
        var v17082 = d$$239.tolerance == "fit";
        if (v17082) {
          var v27263 = i$$164.left > e$$225;
          if (v27263) {
            v27263 = i$$164.right < g$$128;
          }
          var v25379 = v27263;
          if (v25379) {
            v25379 = i$$164.top > f$$94;
          }
          var v21120 = v25379;
          if (v21120) {
            v21120 = i$$164.bottom < h$$105;
          }
          v17082 = j$$76 = v21120;
        }
        v11429 = v17082;
      }
      v11429;
      var v11430;
      if (j$$76) {
        var v25381 = i$$164.selected;
        if (v25381) {
          var v28482 = i$$164.$element;
          JAM.call(v28482.removeClass, v28482, ["ui-selected"], JAM.policy.p3);
          i$$164.selected = !1;
        }
        var v25382 = i$$164.unselecting;
        if (v25382) {
          var v28483 = i$$164.$element;
          JAM.call(v28483.removeClass, v28483, ["ui-unselecting"], JAM.policy.p3);
          i$$164.unselecting = !1;
        }
        var v21121 = i$$164.selecting;
        if (!v21121) {
          var v28484 = i$$164.$element;
          JAM.call(v28484.addClass, v28484, ["ui-selecting"], JAM.policy.p3);
          i$$164.selecting = !0;
          v21121 = JAM.call(c$$310._trigger, c$$310, ["selecting", b$$378, {selecting:i$$164.element}], JAM.policy.p3);
        }
        v11430 = v21121;
      } else {
        var v21122 = i$$164.selecting;
        if (v21122) {
          var v25384;
          var v29264 = b$$378.metaKey;
          if (!v29264) {
            v29264 = b$$378.ctrlKey;
          }
          var v28486 = v29264;
          if (v28486) {
            v28486 = i$$164.startselected;
          }
          if (v28486) {
            var v29772 = i$$164.$element;
            JAM.call(v29772.removeClass, v29772, ["ui-selecting"], JAM.policy.p3);
            i$$164.selecting = !1;
            var v29265 = i$$164.$element;
            JAM.call(v29265.addClass, v29265, ["ui-selected"], JAM.policy.p3);
            v25384 = i$$164.selected = !0;
          } else {
            var v29773 = i$$164.$element;
            JAM.call(v29773.removeClass, v29773, ["ui-selecting"], JAM.policy.p3);
            i$$164.selecting = !1;
            var v29266 = i$$164.startselected;
            if (v29266) {
              var v30092 = i$$164.$element;
              JAM.call(v30092.addClass, v30092, ["ui-unselecting"], JAM.policy.p3);
              i$$164.unselecting = !0;
            }
            v25384 = JAM.call(c$$310._trigger, c$$310, ["unselecting", b$$378, {unselecting:i$$164.element}], JAM.policy.p3);
          }
          v25384;
        }
        var v28488 = i$$164.selected;
        if (v28488) {
          v28488 = !b$$378.metaKey;
        }
        var v27267 = v28488;
        if (v27267) {
          v27267 = !b$$378.ctrlKey;
        }
        var v25385 = v27267;
        if (v25385) {
          v25385 = !i$$164.startselected;
        }
        var v21123 = v25385;
        if (v21123) {
          var v29774 = i$$164.$element;
          JAM.call(v29774.removeClass, v29774, ["ui-selected"], JAM.policy.p3);
          i$$164.selected = !1;
          var v29269 = i$$164.$element;
          JAM.call(v29269.addClass, v29269, ["ui-unselecting"], JAM.policy.p3);
          i$$164.unselecting = !0;
          v21123 = JAM.call(c$$310._trigger, c$$310, ["unselecting", b$$378, {unselecting:i$$164.element}], JAM.policy.p3);
        }
        v11430 = v21123;
      }
      v11430;
      return;
    }
    var c$$310 = this;
    this.dragged = !0;
    if (this.options.disabled) {
      return;
    }
    var d$$239 = this.options;
    var e$$225 = this.opos[0];
    var f$$94 = this.opos[1];
    var g$$128 = b$$378.pageX;
    var h$$105 = b$$378.pageY;
    if (e$$225 > g$$128) {
      var i$$163 = g$$128;
      g$$128 = e$$225;
      e$$225 = i$$163;
    }
    if (f$$94 > h$$105) {
      i$$163 = h$$105;
      h$$105 = f$$94;
      f$$94 = i$$163;
    }
    var v17084 = this.helper;
    JAM.call(v17084.css, v17084, [{left:e$$225, top:f$$94, width:g$$128 - e$$225, height:h$$105 - f$$94}], JAM.policy.p3);
    var v17086 = this.selectees;
    JAM.call(v17086.each, v17086, [v1289], JAM.policy.p3);
    return!1;
  }
  function v1288(b$$377) {
    function v1287() {
      var d$$238 = JAM.call(a$$451.data, a$$451, [this, "selectable-item"], JAM.policy.p3);
      if (d$$238) {
        var v11432 = !b$$377.metaKey;
        if (v11432) {
          v11432 = !b$$377.ctrlKey;
        }
        var v4575 = v11432;
        if (!v4575) {
          var v17089 = d$$238.$element;
          v4575 = !JAM.call(v17089.hasClass, v17089, ["ui-selected"], JAM.policy.p3);
        }
        var e$$224 = v4575;
        var v28491 = d$$238.$element;
        var v29270;
        if (e$$224) {
          v29270 = "ui-unselecting";
        } else {
          v29270 = "ui-selected";
        }
        var v27270 = JAM.call(v28491.removeClass, v28491, [v29270], JAM.policy.p3);
        var v28493;
        if (e$$224) {
          v28493 = "ui-selecting";
        } else {
          v28493 = "ui-unselecting";
        }
        JAM.call(v27270.addClass, v27270, [v28493], JAM.policy.p3);
        d$$238.unselecting = !e$$224;
        d$$238.selecting = e$$224;
        d$$238.selected = e$$224;
        var v17090;
        if (e$$224) {
          v17090 = JAM.call(c$$309._trigger, c$$309, ["selecting", b$$377, {selecting:d$$238.element}], JAM.policy.p3);
        } else {
          v17090 = JAM.call(c$$309._trigger, c$$309, ["unselecting", b$$377, {unselecting:d$$238.element}], JAM.policy.p3);
        }
        v17090;
        return!1;
      }
      return;
    }
    function v1286() {
      var d$$237 = JAM.call(a$$451.data, a$$451, [this, "selectable-item"], JAM.policy.p3);
      d$$237.startselected = !0;
      var v17091 = !b$$377.metaKey;
      if (v17091) {
        v17091 = !b$$377.ctrlKey;
      }
      var v11435 = v17091;
      if (v11435) {
        var v28494 = d$$237.$element;
        JAM.call(v28494.removeClass, v28494, ["ui-selected"], JAM.policy.p3);
        d$$237.selected = !1;
        var v27272 = d$$237.$element;
        JAM.call(v27272.addClass, v27272, ["ui-unselecting"], JAM.policy.p3);
        d$$237.unselecting = !0;
        JAM.call(c$$309._trigger, c$$309, ["unselecting", b$$377, {unselecting:d$$237.element}], JAM.policy.p3);
      }
      return;
    }
    var c$$309 = this;
    this.opos = [b$$377.pageX, b$$377.pageY];
    if (this.options.disabled) {
      return;
    }
    var d$$236 = this.options;
    var v31301 = JAM.call(a$$451, null, [d$$236.filter, this.element[0]], JAM.policy.p3);
    this.selectees = v31301;
    JAM.call(this._trigger, this, ["start", b$$377], JAM.policy.p3);
    var v27273 = JAM.call(a$$451, null, [d$$236.appendTo], JAM.policy.p3);
    JAM.call(v27273.append, v27273, [this.helper], JAM.policy.p3);
    var v25389 = this.helper;
    JAM.call(v25389.css, v25389, [{left:b$$377.clientX, top:b$$377.clientY, width:0, height:0}], JAM.policy.p3);
    var v21131 = d$$236.autoRefresh;
    if (v21131) {
      JAM.call(this.refresh, this, [], JAM.policy.p3);
    }
    var v21132 = this.selectees;
    var v17092 = JAM.call(v21132.filter, v21132, [".ui-selected"], JAM.policy.p3);
    JAM.call(v17092.each, v17092, [v1286], JAM.policy.p3);
    var v21133 = JAM.call(a$$451, null, [b$$377.target], JAM.policy.p3);
    var v17093 = JAM.call(v21133.parents, v21133, [], JAM.policy.p3);
    var v11437 = JAM.call(v17093.andSelf, v17093, [], JAM.policy.p3);
    JAM.call(v11437.each, v11437, [v1287], JAM.policy.p3);
    return;
  }
  function v1285() {
    var v25392 = this.selectees;
    var v21134 = JAM.call(v25392.removeClass, v25392, ["ui-selectee"], JAM.policy.p3);
    JAM.call(v21134.removeData, v21134, ["selectable-item"], JAM.policy.p3);
    var v27277 = this.element;
    var v25393 = JAM.call(v27277.removeClass, v27277, ["ui-selectable ui-selectable-disabled"], JAM.policy.p3);
    var v21135 = JAM.call(v25393.removeData, v25393, ["selectable"], JAM.policy.p3);
    JAM.call(v21135.unbind, v21135, [".selectable"], JAM.policy.p3);
    JAM.call(this._mouseDestroy, this, [], JAM.policy.p3);
    return this;
  }
  function v1284() {
    function v1283() {
      function v1282() {
        var b$$376 = JAM.call(a$$451, null, [this], JAM.policy.p3);
        var c$$308 = JAM.call(b$$376.offset, b$$376, [], JAM.policy.p3);
        JAM.call(a$$451.data, a$$451, [this, "selectable-item", {element:this, $element:b$$376, left:c$$308.left, top:c$$308.top, right:c$$308.left + JAM.call(b$$376.outerWidth, b$$376, [], JAM.policy.p3), bottom:c$$308.top + JAM.call(b$$376.outerHeight, b$$376, [], JAM.policy.p3), startselected:!1, selected:JAM.call(b$$376.hasClass, b$$376, ["ui-selected"], JAM.policy.p3), selecting:JAM.call(b$$376.hasClass, b$$376, ["ui-selecting"], JAM.policy.p3), unselecting:JAM.call(b$$376.hasClass, b$$376, 
        ["ui-unselecting"], JAM.policy.p3)}], JAM.policy.p3);
        return;
      }
      c$$307 = JAM.call(a$$451, null, [b$$375.options.filter, b$$375.element[0]], JAM.policy.p3);
      JAM.call(c$$307.addClass, c$$307, ["ui-selectee"], JAM.policy.p3);
      JAM.call(c$$307.each, c$$307, [v1282], JAM.policy.p3);
      return;
    }
    var b$$375 = this;
    var v11446 = this.element;
    JAM.call(v11446.addClass, v11446, ["ui-selectable"], JAM.policy.p3);
    this.dragged = !1;
    var c$$307;
    this.refresh = v1283;
    JAM.call(this.refresh, this, [], JAM.policy.p3);
    var v31302 = JAM.call(c$$307.addClass, c$$307, ["ui-selectee"], JAM.policy.p3);
    this.selectees = v31302;
    JAM.call(this._mouseInit, this, [], JAM.policy.p3);
    var v31303 = JAM.call(a$$451, null, ["<div class='ui-selectable-helper'></div>"], JAM.policy.p3);
    this.helper = v31303;
    return;
  }
  JAM.call(a$$451.widget, a$$451, ["ui.selectable", a$$451.ui.mouse, {options:{appendTo:"body", autoRefresh:!0, distance:0, filter:"*", tolerance:"touch"}, _create:v1284, destroy:v1285, _mouseStart:v1288, _mouseDrag:v1290, _mouseStop:v1293}], JAM.policy.p3);
  JAM.call(a$$451.extend, a$$451, [a$$451.ui.selectable, {version:"1.8.24"}], JAM.policy.p3);
  return;
}
function v1281(a$$434, b$$331) {
  function v1280(b$$373, c$$306) {
    var v4580 = JAM.call(a$$434, null, [this], JAM.policy.p3);
    var d$$235 = JAM.call(v4580.data, v4580, ["resizable"], JAM.policy.p3);
    var e$$223 = d$$235.options;
    var f$$93 = d$$235.size;
    var g$$127 = d$$235.originalSize;
    var h$$104 = d$$235.originalPosition;
    var i$$162 = d$$235.axis;
    var v4581 = e$$223._aspectRatio;
    if (!v4581) {
      v4581 = b$$373.shiftKey;
    }
    var j$$75 = v4581;
    var v4582;
    if (typeof e$$223.grid == "number") {
      v4582 = [e$$223.grid, e$$223.grid];
    } else {
      v4582 = e$$223.grid;
    }
    e$$223.grid = v4582;
    var v17104 = f$$93.width - g$$127.width;
    var v21142 = e$$223.grid[0];
    if (!v21142) {
      v21142 = 1;
    }
    var v4583 = JAM.call(Math.round, Math, [v17104 / v21142], JAM.policy.p3);
    var v11456 = e$$223.grid[0];
    if (!v11456) {
      v11456 = 1;
    }
    var k$$52 = v4583 * v11456;
    var v17108 = f$$93.height - g$$127.height;
    var v21145 = e$$223.grid[1];
    if (!v21145) {
      v21145 = 1;
    }
    var v4585 = JAM.call(Math.round, Math, [v17108 / v21145], JAM.policy.p3);
    var v11458 = e$$223.grid[1];
    if (!v11458) {
      v11458 = 1;
    }
    var l$$62 = v4585 * v11458;
    var v4587;
    if (JAM.call(/^(se|s|e)$/.test, /^(se|s|e)$/, [i$$162], JAM.policy.p3)) {
      d$$235.size.width = g$$127.width + k$$52;
      v4587 = d$$235.size.height = g$$127.height + l$$62;
    } else {
      var v11459;
      if (JAM.call(/^(ne)$/.test, /^(ne)$/, [i$$162], JAM.policy.p3)) {
        d$$235.size.width = g$$127.width + k$$52;
        d$$235.size.height = g$$127.height + l$$62;
        v11459 = d$$235.position.top = h$$104.top - l$$62;
      } else {
        var v17114;
        if (JAM.call(/^(sw)$/.test, /^(sw)$/, [i$$162], JAM.policy.p3)) {
          d$$235.size.width = g$$127.width + k$$52;
          d$$235.size.height = g$$127.height + l$$62;
          v17114 = d$$235.position.left = h$$104.left - k$$52;
        } else {
          d$$235.size.width = g$$127.width + k$$52;
          d$$235.size.height = g$$127.height + l$$62;
          d$$235.position.top = h$$104.top - l$$62;
          v17114 = d$$235.position.left = h$$104.left - k$$52;
        }
        v11459 = v17114;
      }
      v4587 = v11459;
    }
    v4587;
    return;
  }
  function v1279(b$$372, c$$305) {
    var v4588 = JAM.call(a$$434, null, [this], JAM.policy.p3);
    var d$$234 = JAM.call(v4588.data, v4588, ["resizable"], JAM.policy.p3);
    var e$$222 = d$$234.options;
    var v11461 = d$$234.ghost;
    if (v11461) {
      v11461 = d$$234.helper;
    }
    var v4589 = v11461;
    if (v4589) {
      var v17116 = d$$234.helper;
      var v11462 = JAM.call(v17116.get, v17116, [0], JAM.policy.p3);
      var v17117 = d$$234.ghost;
      JAM.call(v11462.removeChild, v11462, [JAM.call(v17117.get, v17117, [0], JAM.policy.p3)], JAM.policy.p3);
    }
    return;
  }
  function v1278(b$$371, c$$304) {
    var v4590 = JAM.call(a$$434, null, [this], JAM.policy.p3);
    var d$$233 = JAM.call(v4590.data, v4590, ["resizable"], JAM.policy.p3);
    var e$$221 = d$$233.options;
    var v4591 = d$$233.ghost;
    if (v4591) {
      var v11464 = d$$233.ghost;
      JAM.call(v11464.css, v11464, [{position:"relative", height:d$$233.size.height, width:d$$233.size.width}], JAM.policy.p3);
    }
    return;
  }
  function v1277(b$$370, c$$303) {
    var v4592 = JAM.call(a$$434, null, [this], JAM.policy.p3);
    var d$$232 = JAM.call(v4592.data, v4592, ["resizable"], JAM.policy.p3);
    var e$$220 = d$$232.options;
    var f$$92 = d$$232.size;
    var v17120 = d$$232;
    var v21152 = d$$232.originalElement;
    var v31304 = JAM.call(v21152.clone, v21152, [], JAM.policy.p3);
    v17120.ghost = v31304;
    var v25403 = d$$232.ghost;
    var v21153 = JAM.call(v25403.css, v25403, [{opacity:.25, display:"block", position:"relative", height:f$$92.height, width:f$$92.width, margin:0, left:0, top:0}], JAM.policy.p3);
    var v17121 = JAM.call(v21153.addClass, v21153, ["ui-resizable-ghost"], JAM.policy.p3);
    var v21154;
    if (typeof e$$220.ghost == "string") {
      v21154 = e$$220.ghost;
    } else {
      v21154 = "";
    }
    JAM.call(v17121.addClass, v17121, [v21154], JAM.policy.p3);
    var v11466 = d$$232.ghost;
    JAM.call(v11466.appendTo, v11466, [d$$232.helper], JAM.policy.p3);
    return;
  }
  function v1276(b$$369, c$$302) {
    var v4593 = JAM.call(a$$434, null, [this], JAM.policy.p3);
    var d$$231 = JAM.call(v4593.data, v4593, ["resizable"], JAM.policy.p3);
    var e$$219 = d$$231.options;
    var f$$91 = d$$231.position;
    var g$$126 = d$$231.containerOffset;
    var h$$103 = d$$231.containerPosition;
    var i$$161 = d$$231.containerElement;
    var j$$74 = JAM.call(a$$434, null, [d$$231.helper], JAM.policy.p3);
    var k$$51 = JAM.call(j$$74.offset, j$$74, [], JAM.policy.p3);
    var l$$61 = JAM.call(j$$74.outerWidth, j$$74, [], JAM.policy.p3) - d$$231.sizeDiff.width;
    var m$$34 = JAM.call(j$$74.outerHeight, j$$74, [], JAM.policy.p3) - d$$231.sizeDiff.height;
    var v21155 = d$$231._helper;
    if (v21155) {
      v21155 = !e$$219.animate;
    }
    var v17123 = v21155;
    if (v17123) {
      v17123 = JAM.call(/relative/.test, /relative/, [JAM.call(i$$161.css, i$$161, ["position"], JAM.policy.p3)], JAM.policy.p3);
    }
    var v11470 = v17123;
    if (v11470) {
      var v17124 = JAM.call(a$$434, null, [this], JAM.policy.p3);
      JAM.call(v17124.css, v17124, [{left:k$$51.left - h$$103.left - g$$126.left, width:l$$61, height:m$$34}], JAM.policy.p3);
    }
    var v21158 = d$$231._helper;
    if (v21158) {
      v21158 = !e$$219.animate;
    }
    var v17126 = v21158;
    if (v17126) {
      v17126 = JAM.call(/static/.test, /static/, [JAM.call(i$$161.css, i$$161, ["position"], JAM.policy.p3)], JAM.policy.p3);
    }
    var v11471 = v17126;
    if (v11471) {
      var v17127 = JAM.call(a$$434, null, [this], JAM.policy.p3);
      JAM.call(v17127.css, v17127, [{left:k$$51.left - h$$103.left - g$$126.left, width:l$$61, height:m$$34}], JAM.policy.p3);
    }
    return;
  }
  function v1275(b$$368, c$$301) {
    var v4599 = JAM.call(a$$434, null, [this], JAM.policy.p3);
    var d$$230 = JAM.call(v4599.data, v4599, ["resizable"], JAM.policy.p3);
    var e$$218 = d$$230.options;
    var f$$90 = d$$230.containerSize;
    var g$$125 = d$$230.containerOffset;
    var h$$102 = d$$230.size;
    var i$$160 = d$$230.position;
    var v4600 = d$$230._aspectRatio;
    if (!v4600) {
      v4600 = b$$368.shiftKey;
    }
    var j$$73 = v4600;
    var k$$50 = {top:0, left:0};
    var l$$60 = d$$230.containerElement;
    var v27292 = l$$60[0] != document;
    if (v27292) {
      v27292 = JAM.call(/static/.test, /static/, [JAM.call(l$$60.css, l$$60, ["position"], JAM.policy.p3)], JAM.policy.p3);
    }
    var v25412 = v27292;
    if (v25412) {
      k$$50 = g$$125;
    }
    var v27293 = i$$160.left;
    var v28506;
    if (d$$230._helper) {
      v28506 = g$$125.left;
    } else {
      v28506 = 0;
    }
    var v25413 = v27293 < v28506;
    if (v25413) {
      var v29275 = d$$230.size;
      var v29775 = d$$230.size.width;
      var v30094;
      if (d$$230._helper) {
        v30094 = d$$230.position.left - g$$125.left;
      } else {
        v30094 = d$$230.position.left - k$$50.left;
      }
      v29275.width = v29775 + v30094;
      if (j$$73) {
        d$$230.size.height = d$$230.size.width / d$$230.aspectRatio;
      }
      var v28507 = d$$230.position;
      var v29276;
      if (e$$218.helper) {
        v29276 = g$$125.left;
      } else {
        v29276 = 0;
      }
      v28507.left = v29276;
    }
    var v25414 = i$$160.top;
    var v27295;
    if (d$$230._helper) {
      v27295 = g$$125.top;
    } else {
      v27295 = 0;
    }
    var v21161 = v25414 < v27295;
    if (v21161) {
      var v28509 = d$$230.size;
      var v29277 = d$$230.size.height;
      var v29780;
      if (d$$230._helper) {
        v29780 = d$$230.position.top - g$$125.top;
      } else {
        v29780 = d$$230.position.top;
      }
      v28509.height = v29277 + v29780;
      if (j$$73) {
        d$$230.size.width = d$$230.size.height * d$$230.aspectRatio;
      }
      var v27296 = d$$230.position;
      var v28510;
      if (d$$230._helper) {
        v28510 = g$$125.top;
      } else {
        v28510 = 0;
      }
      v27296.top = v28510;
    }
    d$$230.offset.left = d$$230.parentData.left + d$$230.position.left;
    d$$230.offset.top = d$$230.parentData.top + d$$230.position.top;
    var v17132;
    if (d$$230._helper) {
      v17132 = d$$230.offset.left - k$$50.left;
    } else {
      v17132 = d$$230.offset.left - k$$50.left;
    }
    var m$$33 = JAM.call(Math.abs, Math, [v17132 + d$$230.sizeDiff.width], JAM.policy.p3);
    var v17134;
    if (d$$230._helper) {
      v17134 = d$$230.offset.top - k$$50.top;
    } else {
      v17134 = d$$230.offset.top - g$$125.top;
    }
    var n$$84 = JAM.call(Math.abs, Math, [v17134 + d$$230.sizeDiff.height], JAM.policy.p3);
    var v11478 = d$$230.containerElement;
    var v4603 = JAM.call(v11478.get, v11478, [0], JAM.policy.p3);
    var v17136 = d$$230.element;
    var v11479 = JAM.call(v17136.parent, v17136, [], JAM.policy.p3);
    var o$$20 = v4603 == JAM.call(v11479.get, v11479, [0], JAM.policy.p3);
    var v11480 = d$$230.containerElement;
    var p$$41 = JAM.call(/relative|absolute/.test, /relative|absolute/, [JAM.call(v11480.css, v11480, ["position"], JAM.policy.p3)], JAM.policy.p3);
    var v17137 = o$$20 && p$$41;
    if (v17137) {
      m$$33 = m$$33 - d$$230.parentData.left;
    }
    var v17138 = m$$33 + d$$230.size.width >= d$$230.parentData.width;
    if (v17138) {
      d$$230.size.width = d$$230.parentData.width - m$$33;
      if (j$$73) {
        d$$230.size.height = d$$230.size.width / d$$230.aspectRatio;
      }
    }
    var v11481 = n$$84 + d$$230.size.height >= d$$230.parentData.height;
    if (v11481) {
      d$$230.size.height = d$$230.parentData.height - n$$84;
      if (j$$73) {
        d$$230.size.width = d$$230.size.height * d$$230.aspectRatio;
      }
    }
    return;
  }
  function v1274(b$$366, d$$229) {
    function v1273(a$$448, b$$367) {
      var v4606 = k$$49;
      var v4607 = a$$448;
      var v31305 = JAM.call(c$$273, null, [JAM.call(j$$72.css, j$$72, ["padding" + b$$367], JAM.policy.p3)], JAM.policy.p3);
      JAM.set(v4606, v4607, v31305, JAM.policy.p2);
      return;
    }
    var v4608 = JAM.call(a$$434, null, [this], JAM.policy.p3);
    var e$$217 = JAM.call(v4608.data, v4608, ["resizable"], JAM.policy.p3);
    var f$$89 = e$$217.options;
    var g$$124 = e$$217.element;
    var h$$101 = f$$89.containment;
    var v4609;
    if (h$$101 instanceof a$$434) {
      v4609 = JAM.call(h$$101.get, h$$101, [0], JAM.policy.p3);
    } else {
      var v11483;
      if (JAM.call(/parent/.test, /parent/, [h$$101], JAM.policy.p3)) {
        var v17142 = JAM.call(g$$124.parent, g$$124, [], JAM.policy.p3);
        v11483 = JAM.call(v17142.get, v17142, [0], JAM.policy.p3);
      } else {
        v11483 = h$$101;
      }
      v4609 = v11483;
    }
    var i$$159 = v4609;
    if (!i$$159) {
      return;
    }
    var v4611 = e$$217;
    var v31306 = JAM.call(a$$434, null, [i$$159], JAM.policy.p3);
    v4611.containerElement = v31306;
    var v11485 = JAM.call(/document/.test, /document/, [h$$101], JAM.policy.p3);
    if (!v11485) {
      v11485 = h$$101 == document;
    }
    if (v11485) {
      e$$217.containerOffset = {left:0, top:0};
      e$$217.containerPosition = {left:0, top:0};
      var v11486 = e$$217;
      var v17145 = JAM.call(a$$434, null, [document], JAM.policy.p3);
      var v21181 = JAM.call(a$$434, null, [document], JAM.policy.p3);
      var v17146 = JAM.call(v21181.width, v21181, [], JAM.policy.p3);
      var v25429 = JAM.call(a$$434, null, [document], JAM.policy.p3);
      var v21182 = JAM.call(v25429.height, v25429, [], JAM.policy.p3);
      if (!v21182) {
        v21182 = document.body.parentNode.scrollHeight;
      }
      v11486.parentData = {element:v17145, left:0, top:0, width:v17146, height:v21182};
    } else {
      var j$$72 = JAM.call(a$$434, null, [i$$159], JAM.policy.p3);
      var k$$49 = [];
      var v21183 = JAM.call(a$$434, null, [["Top", "Right", "Left", "Bottom"]], JAM.policy.p3);
      JAM.call(v21183.each, v21183, [v1273], JAM.policy.p3);
      var v21184 = e$$217;
      var v31307 = JAM.call(j$$72.offset, j$$72, [], JAM.policy.p3);
      v21184.containerOffset = v31307;
      var v17148 = e$$217;
      var v31308 = JAM.call(j$$72.position, j$$72, [], JAM.policy.p3);
      v17148.containerPosition = v31308;
      e$$217.containerSize = {height:JAM.call(j$$72.innerHeight, j$$72, [], JAM.policy.p3) - k$$49[3], width:JAM.call(j$$72.innerWidth, j$$72, [], JAM.policy.p3) - k$$49[1]};
      var l$$59 = e$$217.containerOffset;
      var m$$32 = e$$217.containerSize.height;
      var n$$83 = e$$217.containerSize.width;
      var v4614;
      var v17151 = a$$434.ui;
      if (JAM.call(v17151.hasScroll, v17151, [i$$159, "left"], JAM.policy.p3)) {
        v4614 = i$$159.scrollWidth;
      } else {
        v4614 = n$$83;
      }
      var o$$19 = v4614;
      var v4615;
      var v17152 = a$$434.ui;
      if (JAM.call(v17152.hasScroll, v17152, [i$$159], JAM.policy.p3)) {
        v4615 = i$$159.scrollHeight;
      } else {
        v4615 = m$$32;
      }
      var p$$40 = v4615;
      e$$217.parentData = {element:i$$159, left:l$$59.left, top:l$$59.top, width:o$$19, height:p$$40};
    }
    return;
  }
  function v1272(b$$365, c$$299) {
    function v1271() {
      var v17153 = d$$228.element;
      var v4619 = JAM.call(parseInt, null, [JAM.call(v17153.css, v17153, ["width"], JAM.policy.p3), 10], JAM.policy.p3);
      var v17154 = d$$228.element;
      var v4620 = JAM.call(parseInt, null, [JAM.call(v17154.css, v17154, ["height"], JAM.policy.p3), 10], JAM.policy.p3);
      var v17155 = d$$228.element;
      var v4621 = JAM.call(parseInt, null, [JAM.call(v17155.css, v17155, ["top"], JAM.policy.p3), 10], JAM.policy.p3);
      var v17156 = d$$228.element;
      var c$$300 = {width:v4619, height:v4620, top:v4621, left:JAM.call(parseInt, null, [JAM.call(v17156.css, v17156, ["left"], JAM.policy.p3), 10], JAM.policy.p3)};
      var v21189 = f$$88;
      if (v21189) {
        v21189 = f$$88.length;
      }
      var v17157 = v21189;
      if (v17157) {
        var v21190 = JAM.call(a$$434, null, [f$$88[0]], JAM.policy.p3);
        JAM.call(v21190.css, v21190, [{width:c$$300.width, height:c$$300.height}], JAM.policy.p3);
      }
      JAM.call(d$$228._updateCache, d$$228, [c$$300], JAM.policy.p3);
      JAM.call(d$$228._propagate, d$$228, ["resize", b$$365], JAM.policy.p3);
      return;
    }
    var v4623 = JAM.call(a$$434, null, [this], JAM.policy.p3);
    var d$$228 = JAM.call(v4623.data, v4623, ["resizable"], JAM.policy.p3);
    var e$$216 = d$$228.options;
    var f$$88 = d$$228._proportionallyResizeElements;
    var v4624 = f$$88.length;
    if (v4624) {
      v4624 = JAM.call(/textarea/i.test, /textarea/i, [f$$88[0].nodeName], JAM.policy.p3);
    }
    var g$$123 = v4624;
    var v4625;
    var v17159 = g$$123;
    if (v17159) {
      var v21192 = a$$434.ui;
      v17159 = JAM.call(v21192.hasScroll, v21192, [f$$88[0], "left"], JAM.policy.p3);
    }
    if (v17159) {
      v4625 = 0;
    } else {
      v4625 = d$$228.sizeDiff.height;
    }
    var h$$100 = v4625;
    var v4626;
    if (g$$123) {
      v4626 = 0;
    } else {
      v4626 = d$$228.sizeDiff.width;
    }
    var i$$158 = v4626;
    var j$$71 = {width:d$$228.size.width - i$$158, height:d$$228.size.height - h$$100};
    var v21194 = d$$228.element;
    var v4629 = JAM.call(parseInt, null, [JAM.call(v21194.css, v21194, ["left"], JAM.policy.p3), 10], JAM.policy.p3) + (d$$228.position.left - d$$228.originalPosition.left);
    if (!v4629) {
      v4629 = null;
    }
    var k$$48 = v4629;
    var v21197 = d$$228.element;
    var v4630 = JAM.call(parseInt, null, [JAM.call(v21197.css, v21197, ["top"], JAM.policy.p3), 10], JAM.policy.p3) + (d$$228.position.top - d$$228.originalPosition.top);
    if (!v4630) {
      v4630 = null;
    }
    var l$$58 = v4630;
    var v4631 = d$$228.element;
    var v17168;
    if (l$$58 && k$$48) {
      v17168 = {top:l$$58, left:k$$48};
    } else {
      v17168 = {};
    }
    JAM.call(v4631.animate, v4631, [JAM.call(a$$434.extend, a$$434, [j$$71, v17168], JAM.policy.p3), {duration:e$$216.animateDuration, easing:e$$216.animateEasing, step:v1271}], JAM.policy.p3);
    return;
  }
  function v1270(b$$364, c$$298) {
    var v4634 = JAM.call(a$$434, null, [this], JAM.policy.p3);
    JAM.call(v4634.removeData, v4634, ["resizable-alsoresize"], JAM.policy.p3);
    return;
  }
  function v1269(b$$359, c$$296) {
    function v1268(a$$447, b$$363) {
      JAM.call(i$$157, null, [a$$447, b$$363], JAM.policy.p3);
      return;
    }
    function i$$157(b$$360, d$$227) {
      function v1267() {
        function v1266(a$$446, b$$362) {
          var v11509 = e$$215[b$$362];
          if (!v11509) {
            v11509 = 0;
          }
          var v4635 = v11509;
          var v11510 = h$$99[b$$362];
          if (!v11510) {
            v11510 = 0;
          }
          var c$$297 = v4635 + v11510;
          var v11511 = c$$297;
          if (v11511) {
            v11511 = c$$297 >= 0;
          }
          var v4637 = v11511;
          if (v4637) {
            JAM.set(f$$87, b$$362, c$$297 || null, JAM.policy.p2);
          }
          return;
        }
        var b$$361 = JAM.call(a$$434, null, [this], JAM.policy.p3);
        var v4638 = JAM.call(a$$434, null, [this], JAM.policy.p3);
        var e$$215 = JAM.call(v4638.data, v4638, ["resizable-alsoresize"], JAM.policy.p3);
        var f$$87 = {};
        var v4639;
        var v17171 = d$$227;
        if (v17171) {
          v17171 = d$$227.length;
        }
        if (v17171) {
          v4639 = d$$227;
        } else {
          var v11512;
          if (JAM.call(b$$361.parents, b$$361, [c$$296.originalElement[0]], JAM.policy.p3).length) {
            v11512 = ["width", "height"];
          } else {
            v11512 = ["width", "height", "top", "left"];
          }
          v4639 = v11512;
        }
        var g$$122 = v4639;
        JAM.call(a$$434.each, a$$434, [g$$122, v1266], JAM.policy.p3);
        JAM.call(b$$361.css, b$$361, [f$$87], JAM.policy.p3);
        return;
      }
      var v4640 = JAM.call(a$$434, null, [b$$360], JAM.policy.p3);
      JAM.call(v4640.each, v4640, [v1267], JAM.policy.p3);
      return;
    }
    var v4641 = JAM.call(a$$434, null, [this], JAM.policy.p3);
    var d$$226 = JAM.call(v4641.data, v4641, ["resizable"], JAM.policy.p3);
    var e$$214 = d$$226.options;
    var f$$86 = d$$226.originalSize;
    var g$$121 = d$$226.originalPosition;
    var v11514 = d$$226.size.height - f$$86.height;
    if (!v11514) {
      v11514 = 0;
    }
    var v4642 = v11514;
    var v11515 = d$$226.size.width - f$$86.width;
    if (!v11515) {
      v11515 = 0;
    }
    var v4643 = v11515;
    var v11516 = d$$226.position.top - g$$121.top;
    if (!v11516) {
      v11516 = 0;
    }
    var v4644 = v11516;
    var v11517 = d$$226.position.left - g$$121.left;
    if (!v11517) {
      v11517 = 0;
    }
    var h$$99 = {height:v4642, width:v4643, top:v4644, left:v11517};
    var v4646;
    var v17185 = typeof e$$214.alsoResize == "object";
    if (v17185) {
      v17185 = !e$$214.alsoResize.nodeType;
    }
    if (v17185) {
      v4646 = JAM.call(a$$434.each, a$$434, [e$$214.alsoResize, v1268], JAM.policy.p3);
    } else {
      v4646 = JAM.call(i$$157, null, [e$$214.alsoResize], JAM.policy.p3);
    }
    v4646;
    return;
  }
  function v1265(b$$356, c$$295) {
    function v1264(a$$445) {
      JAM.call(f$$85, null, [a$$445], JAM.policy.p3);
      return;
    }
    function f$$85(b$$357) {
      function v1263() {
        var b$$358 = JAM.call(a$$434, null, [this], JAM.policy.p3);
        JAM.call(b$$358.data, b$$358, ["resizable-alsoresize", {width:JAM.call(parseInt, null, [JAM.call(b$$358.width, b$$358, [], JAM.policy.p3), 10], JAM.policy.p3), height:JAM.call(parseInt, null, [JAM.call(b$$358.height, b$$358, [], JAM.policy.p3), 10], JAM.policy.p3), left:JAM.call(parseInt, null, [JAM.call(b$$358.css, b$$358, ["left"], JAM.policy.p3), 10], JAM.policy.p3), top:JAM.call(parseInt, null, [JAM.call(b$$358.css, b$$358, ["top"], JAM.policy.p3), 10], JAM.policy.p3)}], JAM.policy.p3);
        return;
      }
      var v4648 = JAM.call(a$$434, null, [b$$357], JAM.policy.p3);
      JAM.call(v4648.each, v4648, [v1263], JAM.policy.p3);
      return;
    }
    var v4649 = JAM.call(a$$434, null, [this], JAM.policy.p3);
    var d$$225 = JAM.call(v4649.data, v4649, ["resizable"], JAM.policy.p3);
    var e$$213 = d$$225.options;
    var v4650;
    var v17190 = typeof e$$213.alsoResize == "object";
    if (v17190) {
      v17190 = !e$$213.alsoResize.parentNode;
    }
    if (v17190) {
      var v11525;
      if (e$$213.alsoResize.length) {
        e$$213.alsoResize = e$$213.alsoResize[0];
        v11525 = JAM.call(f$$85, null, [e$$213.alsoResize], JAM.policy.p3);
      } else {
        v11525 = JAM.call(a$$434.each, a$$434, [e$$213.alsoResize, v1264], JAM.policy.p3);
      }
      v4650 = v11525;
    } else {
      v4650 = JAM.call(f$$85, null, [e$$213.alsoResize], JAM.policy.p3);
    }
    v4650;
    return;
  }
  function v1262() {
    return{originalElement:this.originalElement, element:this.element, helper:this.helper, position:this.position, size:this.size, originalSize:this.originalSize, originalPosition:this.originalPosition};
  }
  function v1261(b$$355, c$$294) {
    var v11528 = a$$434.ui.plugin;
    JAM.call(v11528.call, v11528, [this, b$$355, [c$$294, JAM.call(this.ui, this, [], JAM.policy.p3)]], JAM.policy.p3);
    var v11530 = b$$355 != "resize";
    if (v11530) {
      JAM.call(this._trigger, this, [b$$355, c$$294, JAM.call(this.ui, this, [], JAM.policy.p3)], JAM.policy.p3);
    }
    return;
  }
  function v1260(b$$354, c$$293, d$$224) {
    var v11531 = this._change.n;
    var v4658 = JAM.call(v11531.apply, v11531, [this, arguments], JAM.policy.p3);
    var v11532 = this._change.w;
    return JAM.call(a$$434.extend, a$$434, [v4658, JAM.call(v11532.apply, v11532, [this, [b$$354, c$$293, d$$224]], JAM.policy.p3)], JAM.policy.p3);
  }
  function v1259(b$$353, c$$292, d$$223) {
    var v11534 = this._change.n;
    var v4660 = JAM.call(v11534.apply, v11534, [this, arguments], JAM.policy.p3);
    var v11535 = this._change.e;
    return JAM.call(a$$434.extend, a$$434, [v4660, JAM.call(v11535.apply, v11535, [this, [b$$353, c$$292, d$$223]], JAM.policy.p3)], JAM.policy.p3);
  }
  function v1258(b$$352, c$$291, d$$222) {
    var v11537 = this._change.s;
    var v4662 = JAM.call(v11537.apply, v11537, [this, arguments], JAM.policy.p3);
    var v11538 = this._change.w;
    return JAM.call(a$$434.extend, a$$434, [v4662, JAM.call(v11538.apply, v11538, [this, [b$$352, c$$291, d$$222]], JAM.policy.p3)], JAM.policy.p3);
  }
  function v1257(b$$351, c$$290, d$$221) {
    var v11540 = this._change.s;
    var v4664 = JAM.call(v11540.apply, v11540, [this, arguments], JAM.policy.p3);
    var v11541 = this._change.e;
    return JAM.call(a$$434.extend, a$$434, [v4664, JAM.call(v11541.apply, v11541, [this, [b$$351, c$$290, d$$221]], JAM.policy.p3)], JAM.policy.p3);
  }
  function v1256(a$$444, b$$350, c$$289) {
    return{height:this.originalSize.height + c$$289};
  }
  function v1255(a$$443, b$$349, c$$288) {
    var d$$220 = this.options;
    var e$$212 = this.originalSize;
    var f$$84 = this.originalPosition;
    return{top:f$$84.top + c$$288, height:e$$212.height - c$$288};
  }
  function v1254(a$$442, b$$348, c$$287) {
    var d$$219 = this.options;
    var e$$211 = this.originalSize;
    var f$$83 = this.originalPosition;
    return{left:f$$83.left + b$$348, width:e$$211.width - b$$348};
  }
  function v1253(a$$441, b$$347, c$$286) {
    return{width:this.originalSize.width + b$$347};
  }
  function v1252() {
    var b$$346 = this.element;
    var c$$285 = this.options;
    var v31309 = JAM.call(b$$346.offset, b$$346, [], JAM.policy.p3);
    this.elementOffset = v31309;
    if (this._helper) {
      var v4672 = this.helper;
      if (!v4672) {
        v4672 = JAM.call(a$$434, null, ['<div style="overflow:hidden;"></div>'], JAM.policy.p3);
      }
      this.helper = v4672;
      var v4673 = a$$434.browser.msie;
      if (v4673) {
        v4673 = a$$434.browser.version < 7;
      }
      var d$$218 = v4673;
      var v4674;
      if (d$$218) {
        v4674 = 1;
      } else {
        v4674 = 0;
      }
      var e$$210 = v4674;
      var v4675;
      if (d$$218) {
        v4675 = 2;
      } else {
        v4675 = -1;
      }
      var f$$82 = v4675;
      var v17207 = this.helper;
      var v11552 = JAM.call(v17207.addClass, v17207, [this._helper], JAM.policy.p3);
      var v25441 = this.element;
      var v17209 = JAM.call(v25441.outerWidth, v25441, [], JAM.policy.p3) + f$$82;
      var v25442 = this.element;
      JAM.call(v11552.css, v11552, [{width:v17209, height:JAM.call(v25442.outerHeight, v25442, [], JAM.policy.p3) + f$$82, position:"absolute", left:this.elementOffset.left - e$$210 + "px", top:this.elementOffset.top - e$$210 + "px", zIndex:c$$285.zIndex = c$$285.zIndex + 1}], JAM.policy.p3);
      var v17214 = this.helper;
      var v11554 = JAM.call(v17214.appendTo, v17214, ["body"], JAM.policy.p3);
      JAM.call(v11554.disableSelection, v11554, [], JAM.policy.p3);
    } else {
      this.helper = this.element;
    }
    return;
  }
  function v1251() {
    function v1250(a$$440, b$$345) {
      var v4677 = JAM.call(parseInt, null, [a$$440, 10], JAM.policy.p3);
      if (!v4677) {
        v4677 = 0;
      }
      var c$$284 = v4677;
      var v4678 = JAM.call(parseInt, null, [g$$120[b$$345], 10], JAM.policy.p3);
      if (!v4678) {
        v4678 = 0;
      }
      var d$$217 = v4678;
      return c$$284 + d$$217;
    }
    var b$$344 = this.options;
    if (!this._proportionallyResizeElements.length) {
      return;
    }
    var v4680 = this.helper;
    if (!v4680) {
      v4680 = this.element;
    }
    var c$$283 = v4680;
    var d$$216 = 0;
    var v4693 = d$$216 < this._proportionallyResizeElements.length;
    for (;v4693;) {
      var e$$209 = this._proportionallyResizeElements[d$$216];
      if (!this.borderDif) {
        var f$$81 = [JAM.call(e$$209.css, e$$209, ["borderTopWidth"], JAM.policy.p3), JAM.call(e$$209.css, e$$209, ["borderRightWidth"], JAM.policy.p3), JAM.call(e$$209.css, e$$209, ["borderBottomWidth"], JAM.policy.p3), JAM.call(e$$209.css, e$$209, ["borderLeftWidth"], JAM.policy.p3)];
        var g$$120 = [JAM.call(e$$209.css, e$$209, ["paddingTop"], JAM.policy.p3), JAM.call(e$$209.css, e$$209, ["paddingRight"], JAM.policy.p3), JAM.call(e$$209.css, e$$209, ["paddingBottom"], JAM.policy.p3), JAM.call(e$$209.css, e$$209, ["paddingLeft"], JAM.policy.p3)];
        var v31310 = JAM.call(a$$434.map, a$$434, [f$$81, v1250], JAM.policy.p3);
        this.borderDif = v31310;
      }
      var v11562 = !a$$434.browser.msie;
      if (!v11562) {
        var v25446 = JAM.call(a$$434, null, [c$$283], JAM.policy.p3);
        var v17218 = !JAM.call(v25446.is, v25446, [":hidden"], JAM.policy.p3);
        if (v17218) {
          var v27308 = JAM.call(a$$434, null, [c$$283], JAM.policy.p3);
          v17218 = !JAM.call(v27308.parents, v27308, [":hidden"], JAM.policy.p3).length;
        }
        v11562 = v17218;
      }
      if (v11562) {
        var v17220 = JAM.call(c$$283.height, c$$283, [], JAM.policy.p3) - this.borderDif[0] - this.borderDif[2];
        if (!v17220) {
          v17220 = 0;
        }
        var v11563 = v17220;
        var v17221 = JAM.call(c$$283.width, c$$283, [], JAM.policy.p3) - this.borderDif[1] - this.borderDif[3];
        if (!v17221) {
          v17221 = 0;
        }
        JAM.call(e$$209.css, e$$209, [{height:v11563, width:v17221}], JAM.policy.p3);
      } else {
      }
      d$$216 = d$$216 + 1;
      v4693 = d$$216 < this._proportionallyResizeElements.length;
    }
    return;
  }
  function v1249(a$$439, b$$343) {
    var c$$282 = this.helper;
    var e$$208 = this._vBoundaries;
    var v4694 = this._aspectRatio;
    if (!v4694) {
      v4694 = b$$343.shiftKey;
    }
    var f$$80 = v4694;
    var g$$119 = this.axis;
    var v11567 = JAM.call(d$$209, null, [a$$439.width], JAM.policy.p3);
    if (v11567) {
      v11567 = e$$208.maxWidth;
    }
    var v4695 = v11567;
    if (v4695) {
      v4695 = e$$208.maxWidth < a$$439.width;
    }
    var h$$98 = v4695;
    var v11570 = JAM.call(d$$209, null, [a$$439.height], JAM.policy.p3);
    if (v11570) {
      v11570 = e$$208.maxHeight;
    }
    var v4696 = v11570;
    if (v4696) {
      v4696 = e$$208.maxHeight < a$$439.height;
    }
    var i$$156 = v4696;
    var v11573 = JAM.call(d$$209, null, [a$$439.width], JAM.policy.p3);
    if (v11573) {
      v11573 = e$$208.minWidth;
    }
    var v4697 = v11573;
    if (v4697) {
      v4697 = e$$208.minWidth > a$$439.width;
    }
    var j$$70 = v4697;
    var v11576 = JAM.call(d$$209, null, [a$$439.height], JAM.policy.p3);
    if (v11576) {
      v11576 = e$$208.minHeight;
    }
    var v4698 = v11576;
    if (v4698) {
      v4698 = e$$208.minHeight > a$$439.height;
    }
    var k$$47 = v4698;
    if (j$$70) {
      a$$439.width = e$$208.minWidth;
    }
    if (k$$47) {
      a$$439.height = e$$208.minHeight;
    }
    if (h$$98) {
      a$$439.width = e$$208.maxWidth;
    }
    if (i$$156) {
      a$$439.height = e$$208.maxHeight;
    }
    var l$$57 = this.originalPosition.left + this.originalSize.width;
    var m$$31 = this.position.top + this.size.height;
    var n$$82 = JAM.call(/sw|nw|w/.test, /sw|nw|w/, [g$$119], JAM.policy.p3);
    var o$$18 = JAM.call(/nw|ne|n/.test, /nw|ne|n/, [g$$119], JAM.policy.p3);
    var v21226 = j$$70 && n$$82;
    if (v21226) {
      a$$439.left = l$$57 - e$$208.minWidth;
    }
    var v21227 = h$$98 && n$$82;
    if (v21227) {
      a$$439.left = l$$57 - e$$208.maxWidth;
    }
    var v17227 = k$$47 && o$$18;
    if (v17227) {
      a$$439.top = m$$31 - e$$208.minHeight;
    }
    var v11583 = i$$156 && o$$18;
    if (v11583) {
      a$$439.top = m$$31 - e$$208.maxHeight;
    }
    var v4703 = !a$$439.width;
    if (v4703) {
      v4703 = !a$$439.height;
    }
    var p$$39 = v4703;
    var v11586;
    var v25456 = p$$39;
    if (v25456) {
      v25456 = !a$$439.left;
    }
    var v21229 = v25456;
    if (v21229) {
      v21229 = a$$439.top;
    }
    if (v21229) {
      v11586 = a$$439.top = null;
    } else {
      var v25457 = p$$39;
      if (v25457) {
        v25457 = !a$$439.top;
      }
      var v21230 = v25457;
      if (v21230) {
        v21230 = a$$439.left;
      }
      var v17229 = v21230;
      if (v17229) {
        v17229 = a$$439.left = null;
      }
      v11586 = v17229;
    }
    v11586;
    return a$$439;
  }
  function v1248(a$$438, b$$342) {
    var c$$281 = this.options;
    var e$$207 = this.position;
    var f$$79 = this.size;
    var g$$118 = this.axis;
    var v21231;
    if (JAM.call(d$$209, null, [a$$438.height], JAM.policy.p3)) {
      v21231 = a$$438.width = a$$438.height * this.aspectRatio;
    } else {
      var v25460 = JAM.call(d$$209, null, [a$$438.width], JAM.policy.p3);
      if (v25460) {
        v25460 = a$$438.height = a$$438.width / this.aspectRatio;
      }
      v21231 = v25460;
    }
    v21231;
    var v21232 = g$$118 == "sw";
    if (v21232) {
      a$$438.left = e$$207.left + (f$$79.width - a$$438.width);
      a$$438.top = null;
    }
    var v17231 = g$$118 == "nw";
    if (v17231) {
      a$$438.top = e$$207.top + (f$$79.height - a$$438.height);
      a$$438.left = e$$207.left + (f$$79.width - a$$438.width);
    }
    return a$$438;
  }
  function v1247(a$$437) {
    var b$$341 = this.options;
    var v25466 = this.helper;
    var v31311 = JAM.call(v25466.offset, v25466, [], JAM.policy.p3);
    this.offset = v31311;
    var v25467 = JAM.call(d$$209, null, [a$$437.left], JAM.policy.p3);
    if (v25467) {
      this.position.left = a$$437.left;
    }
    var v21233 = JAM.call(d$$209, null, [a$$437.top], JAM.policy.p3);
    if (v21233) {
      this.position.top = a$$437.top;
    }
    var v17232 = JAM.call(d$$209, null, [a$$437.height], JAM.policy.p3);
    if (v17232) {
      this.size.height = a$$437.height;
    }
    var v11587 = JAM.call(d$$209, null, [a$$437.width], JAM.policy.p3);
    if (v11587) {
      this.size.width = a$$437.width;
    }
    return;
  }
  function v1246(a$$436) {
    var b$$340 = this.options;
    var c$$280;
    var e$$206;
    var f$$78;
    var g$$117;
    var h$$97;
    var v11588;
    if (JAM.call(d$$209, null, [b$$340.minWidth], JAM.policy.p3)) {
      v11588 = b$$340.minWidth;
    } else {
      v11588 = 0;
    }
    var v4704 = v11588;
    var v11589;
    if (JAM.call(d$$209, null, [b$$340.maxWidth], JAM.policy.p3)) {
      v11589 = b$$340.maxWidth;
    } else {
      v11589 = Infinity;
    }
    var v4705 = v11589;
    var v11590;
    if (JAM.call(d$$209, null, [b$$340.minHeight], JAM.policy.p3)) {
      v11590 = b$$340.minHeight;
    } else {
      v11590 = 0;
    }
    var v4706 = v11590;
    var v11591;
    if (JAM.call(d$$209, null, [b$$340.maxHeight], JAM.policy.p3)) {
      v11591 = b$$340.maxHeight;
    } else {
      v11591 = Infinity;
    }
    h$$97 = {minWidth:v4704, maxWidth:v4705, minHeight:v4706, maxHeight:v11591};
    var v11592 = this._aspectRatio;
    if (!v11592) {
      v11592 = a$$436;
    }
    if (v11592) {
      c$$280 = h$$97.minHeight * this.aspectRatio;
      f$$78 = h$$97.minWidth / this.aspectRatio;
      e$$206 = h$$97.maxHeight * this.aspectRatio;
      g$$117 = h$$97.maxWidth / this.aspectRatio;
      var v25470 = c$$280 > h$$97.minWidth;
      if (v25470) {
        h$$97.minWidth = c$$280;
      }
      var v21240 = f$$78 > h$$97.minHeight;
      if (v21240) {
        h$$97.minHeight = f$$78;
      }
      var v17240 = e$$206 < h$$97.maxWidth;
      if (v17240) {
        h$$97.maxWidth = e$$206;
      }
      var v11593 = g$$117 < h$$97.maxHeight;
      if (v11593) {
        h$$97.maxHeight = g$$117;
      }
    }
    this._vBoundaries = h$$97;
    return;
  }
  function v1245(b$$339) {
    this.resizing = !1;
    var c$$279 = this.options;
    var d$$215 = this;
    if (this._helper) {
      var e$$205 = this._proportionallyResizeElements;
      var v4709 = e$$205.length;
      if (v4709) {
        v4709 = JAM.call(/textarea/i.test, /textarea/i, [e$$205[0].nodeName], JAM.policy.p3);
      }
      var f$$77 = v4709;
      var v4710;
      var v17243 = f$$77;
      if (v17243) {
        var v21242 = a$$434.ui;
        v17243 = JAM.call(v21242.hasScroll, v21242, [e$$205[0], "left"], JAM.policy.p3);
      }
      if (v17243) {
        v4710 = 0;
      } else {
        v4710 = d$$215.sizeDiff.height;
      }
      var g$$116 = v4710;
      var v4711;
      if (f$$77) {
        v4711 = 0;
      } else {
        v4711 = d$$215.sizeDiff.width;
      }
      var h$$96 = v4711;
      var v17244 = d$$215.helper;
      var v4712 = JAM.call(v17244.width, v17244, [], JAM.policy.p3) - h$$96;
      var v17245 = d$$215.helper;
      var i$$155 = {width:v4712, height:JAM.call(v17245.height, v17245, [], JAM.policy.p3) - g$$116};
      var v21244 = d$$215.element;
      var v4714 = JAM.call(parseInt, null, [JAM.call(v21244.css, v21244, ["left"], JAM.policy.p3), 10], JAM.policy.p3) + (d$$215.position.left - d$$215.originalPosition.left);
      if (!v4714) {
        v4714 = null;
      }
      var j$$69 = v4714;
      var v21247 = d$$215.element;
      var v4715 = JAM.call(parseInt, null, [JAM.call(v21247.css, v21247, ["top"], JAM.policy.p3), 10], JAM.policy.p3) + (d$$215.position.top - d$$215.originalPosition.top);
      if (!v4715) {
        v4715 = null;
      }
      var k$$46 = v4715;
      var v21250 = c$$279.animate;
      if (!v21250) {
        var v25472 = this.element;
        JAM.call(v25472.css, v25472, [JAM.call(a$$434.extend, a$$434, [i$$155, {top:k$$46, left:j$$69}], JAM.policy.p3)], JAM.policy.p3);
      }
      var v21251 = d$$215.helper;
      JAM.call(v21251.height, v21251, [d$$215.size.height], JAM.policy.p3);
      var v17252 = d$$215.helper;
      JAM.call(v17252.width, v17252, [d$$215.size.width], JAM.policy.p3);
      var v17254 = this._helper;
      if (v17254) {
        v17254 = !c$$279.animate;
      }
      var v11606 = v17254;
      if (v11606) {
        JAM.call(this._proportionallyResize, this, [], JAM.policy.p3);
      }
    }
    var v25476 = JAM.call(a$$434, null, ["body"], JAM.policy.p3);
    JAM.call(v25476.css, v25476, ["cursor", "auto"], JAM.policy.p3);
    var v25477 = this.element;
    JAM.call(v25477.removeClass, v25477, ["ui-resizable-resizing"], JAM.policy.p3);
    JAM.call(this._propagate, this, ["stop", b$$339], JAM.policy.p3);
    var v17255 = this._helper;
    if (v17255) {
      var v21255 = this.helper;
      JAM.call(v21255.remove, v21255, [], JAM.policy.p3);
    }
    return!1;
  }
  function v1244(b$$338) {
    var c$$278 = this.helper;
    var d$$214 = this.options;
    var f$$76 = this;
    var g$$115 = this.originalMousePosition;
    var h$$95 = this.axis;
    var v4717 = b$$338.pageX - g$$115.left;
    if (!v4717) {
      v4717 = 0;
    }
    var i$$154 = v4717;
    var v4718 = b$$338.pageY - g$$115.top;
    if (!v4718) {
      v4718 = 0;
    }
    var j$$68 = v4718;
    var k$$45 = this._change[h$$95];
    if (!k$$45) {
      return!1;
    }
    var l$$56 = JAM.call(k$$45.apply, k$$45, [this, [b$$338, i$$154, j$$68]], JAM.policy.p3);
    var v4722 = a$$434.browser.msie;
    if (v4722) {
      v4722 = a$$434.browser.version < 7;
    }
    var m$$30 = v4722;
    var n$$81 = this.sizeDiff;
    JAM.call(this._updateVirtualBoundaries, this, [b$$338.shiftKey], JAM.policy.p3);
    var v11615 = this._aspectRatio;
    if (!v11615) {
      v11615 = b$$338.shiftKey;
    }
    if (v11615) {
      l$$56 = JAM.call(this._updateRatio, this, [l$$56, b$$338], JAM.policy.p3);
    }
    l$$56 = JAM.call(this._respectSize, this, [l$$56, b$$338], JAM.policy.p3);
    JAM.call(this._propagate, this, ["resize", b$$338], JAM.policy.p3);
    JAM.call(c$$278.css, c$$278, [{top:this.position.top + "px", left:this.position.left + "px", width:this.size.width + "px", height:this.size.height + "px"}], JAM.policy.p3);
    var v27330 = !this._helper;
    if (v27330) {
      v27330 = this._proportionallyResizeElements.length;
    }
    var v25478 = v27330;
    if (v25478) {
      JAM.call(this._proportionallyResize, this, [], JAM.policy.p3);
    }
    JAM.call(this._updateCache, this, [l$$56], JAM.policy.p3);
    JAM.call(this._trigger, this, ["resize", b$$338, JAM.call(this.ui, this, [], JAM.policy.p3)], JAM.policy.p3);
    return!1;
  }
  function v1243(b$$337) {
    var d$$213 = this.options;
    var v4725 = this.element;
    var e$$203 = JAM.call(v4725.position, v4725, [], JAM.policy.p3);
    var f$$75 = this.element;
    this.resizing = !0;
    var v25479 = JAM.call(a$$434, null, [document], JAM.policy.p3);
    var v21256 = JAM.call(v25479.scrollTop, v25479, [], JAM.policy.p3);
    var v25480 = JAM.call(a$$434, null, [document], JAM.policy.p3);
    this.documentScroll = {top:v21256, left:JAM.call(v25480.scrollLeft, v25480, [], JAM.policy.p3)};
    var v21258 = JAM.call(f$$75.is, f$$75, [".ui-draggable"], JAM.policy.p3);
    if (!v21258) {
      v21258 = JAM.call(/absolute/.test, /absolute/, [JAM.call(f$$75.css, f$$75, ["position"], JAM.policy.p3)], JAM.policy.p3);
    }
    var v17259 = v21258;
    if (v17259) {
      JAM.call(f$$75.css, f$$75, [{position:"absolute", top:e$$203.top, left:e$$203.left}], JAM.policy.p3);
    }
    JAM.call(this._renderProxy, this, [], JAM.policy.p3);
    var v11616 = this.helper;
    var g$$114 = JAM.call(c$$273, null, [JAM.call(v11616.css, v11616, ["left"], JAM.policy.p3)], JAM.policy.p3);
    var v11617 = this.helper;
    var h$$94 = JAM.call(c$$273, null, [JAM.call(v11617.css, v11617, ["top"], JAM.policy.p3)], JAM.policy.p3);
    var v29787 = d$$213.containment;
    if (v29787) {
      var v30551 = g$$114;
      var v30818 = JAM.call(a$$434, null, [d$$213.containment], JAM.policy.p3);
      var v30689 = JAM.call(v30818.scrollLeft, v30818, [], JAM.policy.p3);
      if (!v30689) {
        v30689 = 0;
      }
      g$$114 = v30551 + v30689;
      var v30553 = h$$94;
      var v30820 = JAM.call(a$$434, null, [d$$213.containment], JAM.policy.p3);
      var v30690 = JAM.call(v30820.scrollTop, v30820, [], JAM.policy.p3);
      if (!v30690) {
        v30690 = 0;
      }
      h$$94 = v30553 + v30690;
    }
    var v29788 = this.helper;
    var v31312 = JAM.call(v29788.offset, v29788, [], JAM.policy.p3);
    this.offset = v31312;
    this.position = {left:g$$114, top:h$$94};
    var v28525;
    if (this._helper) {
      v28525 = {width:JAM.call(f$$75.outerWidth, f$$75, [], JAM.policy.p3), height:JAM.call(f$$75.outerHeight, f$$75, [], JAM.policy.p3)};
    } else {
      v28525 = {width:JAM.call(f$$75.width, f$$75, [], JAM.policy.p3), height:JAM.call(f$$75.height, f$$75, [], JAM.policy.p3)};
    }
    this.size = v28525;
    var v27331;
    if (this._helper) {
      v27331 = {width:JAM.call(f$$75.outerWidth, f$$75, [], JAM.policy.p3), height:JAM.call(f$$75.outerHeight, f$$75, [], JAM.policy.p3)};
    } else {
      v27331 = {width:JAM.call(f$$75.width, f$$75, [], JAM.policy.p3), height:JAM.call(f$$75.height, f$$75, [], JAM.policy.p3)};
    }
    this.originalSize = v27331;
    this.originalPosition = {left:g$$114, top:h$$94};
    this.sizeDiff = {width:JAM.call(f$$75.outerWidth, f$$75, [], JAM.policy.p3) - JAM.call(f$$75.width, f$$75, [], JAM.policy.p3), height:JAM.call(f$$75.outerHeight, f$$75, [], JAM.policy.p3) - JAM.call(f$$75.height, f$$75, [], JAM.policy.p3)};
    this.originalMousePosition = {left:b$$337.pageX, top:b$$337.pageY};
    var v11618;
    if (typeof d$$213.aspectRatio == "number") {
      v11618 = d$$213.aspectRatio;
    } else {
      var v17262 = this.originalSize.width / this.originalSize.height;
      if (!v17262) {
        v17262 = 1;
      }
      v11618 = v17262;
    }
    this.aspectRatio = v11618;
    var v4728 = JAM.call(a$$434, null, [".ui-resizable-" + this.axis], JAM.policy.p3);
    var i$$153 = JAM.call(v4728.css, v4728, ["cursor"], JAM.policy.p3);
    var v21266 = JAM.call(a$$434, null, ["body"], JAM.policy.p3);
    var v25492;
    if (i$$153 == "auto") {
      v25492 = this.axis + "-resize";
    } else {
      v25492 = i$$153;
    }
    JAM.call(v21266.css, v21266, ["cursor", v25492], JAM.policy.p3);
    JAM.call(f$$75.addClass, f$$75, ["ui-resizable-resizing"], JAM.policy.p3);
    JAM.call(this._propagate, this, ["start", b$$337], JAM.policy.p3);
    return!0;
  }
  function v1242(b$$336) {
    var c$$277 = !1;
    var d$$212;
    for (d$$212 in this.handles) {
      var v4729 = JAM.call(a$$434, null, [this.handles[d$$212]], JAM.policy.p3)[0] == b$$336.target;
      if (v4729) {
        c$$277 = !0;
      }
    }
    var v4731 = !this.options.disabled;
    if (v4731) {
      v4731 = c$$277;
    }
    return v4731;
  }
  function v1241() {
    function b$$334(b$$335) {
      var v25494 = JAM.call(a$$434, null, [b$$335], JAM.policy.p3);
      var v21269 = JAM.call(v25494.removeClass, v25494, ["ui-resizable ui-resizable-disabled ui-resizable-resizing"], JAM.policy.p3);
      var v17267 = JAM.call(v21269.removeData, v21269, ["resizable"], JAM.policy.p3);
      var v11623 = JAM.call(v17267.unbind, v17267, [".resizable"], JAM.policy.p3);
      var v4732 = JAM.call(v11623.find, v11623, [".ui-resizable-handle"], JAM.policy.p3);
      JAM.call(v4732.remove, v4732, [], JAM.policy.p3);
      return;
    }
    JAM.call(this._mouseDestroy, this, [], JAM.policy.p3);
    if (this.elementIsWrapper) {
      JAM.call(b$$334, null, [this.element], JAM.policy.p3);
      var c$$276 = this.element;
      var v17268 = this.originalElement;
      var v4734 = JAM.call(c$$276.after, c$$276, [JAM.call(v17268.css, v17268, [{position:JAM.call(c$$276.css, c$$276, ["position"], JAM.policy.p3), width:JAM.call(c$$276.outerWidth, c$$276, [], JAM.policy.p3), height:JAM.call(c$$276.outerHeight, c$$276, [], JAM.policy.p3), top:JAM.call(c$$276.css, c$$276, ["top"], JAM.policy.p3), left:JAM.call(c$$276.css, c$$276, ["left"], JAM.policy.p3)}], JAM.policy.p3)], JAM.policy.p3);
      JAM.call(v4734.remove, v4734, [], JAM.policy.p3);
    }
    var v17270 = this.originalElement;
    JAM.call(v17270.css, v17270, ["resize", this.originalResizeStyle], JAM.policy.p3);
    JAM.call(b$$334, null, [this.originalElement], JAM.policy.p3);
    return this;
  }
  function v1240() {
    function v1239() {
      if (c$$274.disabled) {
        return;
      }
      var v4737 = b$$332.resizing;
      if (!v4737) {
        var v17273 = JAM.call(a$$434, null, [this], JAM.policy.p3);
        JAM.call(v17273.addClass, v17273, ["ui-resizable-autohide"], JAM.policy.p3);
        var v17274 = b$$332._handles;
        JAM.call(v17274.hide, v17274, [], JAM.policy.p3);
      }
      return;
    }
    function v1238() {
      if (c$$274.disabled) {
        return;
      }
      var v11626 = JAM.call(a$$434, null, [this], JAM.policy.p3);
      JAM.call(v11626.removeClass, v11626, ["ui-resizable-autohide"], JAM.policy.p3);
      var v11627 = b$$332._handles;
      JAM.call(v11627.show, v11627, [], JAM.policy.p3);
      return;
    }
    function v1237() {
      if (!b$$332.resizing) {
        if (this.className) {
          var v4739 = this.className;
          var a$$435 = JAM.call(v4739.match, v4739, [/ui-resizable-(se|sw|ne|nw|n|e|s|w)/i], JAM.policy.p3);
        }
        var v4741;
        var v17275 = a$$435;
        if (v17275) {
          v17275 = a$$435[1];
        }
        if (v17275) {
          v4741 = a$$435[1];
        } else {
          v4741 = "se";
        }
        b$$332.axis = v4741;
      }
      return;
    }
    function v1236(b$$333) {
      var v4743 = b$$333;
      if (!v4743) {
        v4743 = this.element;
      }
      b$$333 = v4743;
      var c$$275;
      for (c$$275 in this.handles) {
        var v4744 = this.handles[c$$275].constructor == String;
        if (v4744) {
          var v11632 = this.handles;
          var v11633 = c$$275;
          var v17277 = JAM.call(a$$434, null, [this.handles[c$$275], this.element], JAM.policy.p3);
          var v31313 = JAM.call(v17277.show, v17277, [], JAM.policy.p3);
          JAM.set(v11632, v11633, v31313, JAM.policy.p2);
        }
        var v11634 = this.elementIsWrapper;
        if (v11634) {
          var v17278 = this.originalElement[0].nodeName;
          v11634 = JAM.call(v17278.match, v17278, [/textarea|input|select|button/i], JAM.policy.p3);
        }
        if (v11634) {
          var d$$211 = JAM.call(a$$434, null, [this.handles[c$$275], this.element], JAM.policy.p3);
          var e$$202 = 0;
          var v4747;
          if (JAM.call(/sw|ne|nw|se|n|s/.test, /sw|ne|nw|se|n|s/, [c$$275], JAM.policy.p3)) {
            v4747 = JAM.call(d$$211.outerHeight, d$$211, [], JAM.policy.p3);
          } else {
            v4747 = JAM.call(d$$211.outerWidth, d$$211, [], JAM.policy.p3);
          }
          e$$202 = v4747;
          var v17279;
          if (JAM.call(/ne|nw|n/.test, /ne|nw|n/, [c$$275], JAM.policy.p3)) {
            v17279 = "Top";
          } else {
            var v21279;
            if (JAM.call(/se|sw|s/.test, /se|sw|s/, [c$$275], JAM.policy.p3)) {
              v21279 = "Bottom";
            } else {
              var v25497;
              if (JAM.call(/^e$/.test, /^e$/, [c$$275], JAM.policy.p3)) {
                v25497 = "Right";
              } else {
                v25497 = "Left";
              }
              v21279 = v25497;
            }
            v17279 = v21279;
          }
          var v4748 = ["padding", v17279];
          var f$$74 = JAM.call(v4748.join, v4748, [""], JAM.policy.p3);
          JAM.call(b$$333.css, b$$333, [f$$74, e$$202], JAM.policy.p3);
          JAM.call(this._proportionallyResize, this, [], JAM.policy.p3);
        }
        if (!JAM.call(a$$434, null, [this.handles[c$$275]], JAM.policy.p3).length) {
        }
      }
      return;
    }
    var b$$332 = this;
    var c$$274 = this.options;
    var v21282 = this.element;
    JAM.call(v21282.addClass, v21282, ["ui-resizable"], JAM.policy.p3);
    var v25500 = !!c$$274.aspectRatio;
    var v25501 = c$$274.aspectRatio;
    var v25502 = this.element;
    var v27336;
    var v29789 = c$$274.helper;
    if (!v29789) {
      v29789 = c$$274.ghost;
    }
    var v29295 = v29789;
    if (!v29295) {
      v29295 = c$$274.animate;
    }
    if (v29295) {
      var v28532 = c$$274.helper;
      if (!v28532) {
        v28532 = "ui-resizable-helper";
      }
      v27336 = v28532;
    } else {
      v27336 = null;
    }
    JAM.call(a$$434.extend, a$$434, [this, {_aspectRatio:v25500, aspectRatio:v25501, originalElement:v25502, _proportionallyResizeElements:[], _helper:v27336}], JAM.policy.p3);
    var v21284 = this.element[0].nodeName;
    var v17281 = JAM.call(v21284.match, v21284, [/canvas|textarea|input|select|button|img/i], JAM.policy.p3);
    if (v17281) {
      var v30691 = this.element;
      var v30822 = JAM.call(a$$434, null, ['<div class="ui-wrapper" style="overflow: hidden;"></div>'], JAM.policy.p3);
      var v30950 = this.element;
      var v30900 = JAM.call(v30950.css, v30950, ["position"], JAM.policy.p3);
      var v30951 = this.element;
      var v30901 = JAM.call(v30951.outerWidth, v30951, [], JAM.policy.p3);
      var v30952 = this.element;
      var v30902 = JAM.call(v30952.outerHeight, v30952, [], JAM.policy.p3);
      var v30953 = this.element;
      var v30903 = JAM.call(v30953.css, v30953, ["top"], JAM.policy.p3);
      var v30954 = this.element;
      JAM.call(v30691.wrap, v30691, [JAM.call(v30822.css, v30822, [{position:v30900, width:v30901, height:v30902, top:v30903, left:JAM.call(v30954.css, v30954, ["left"], JAM.policy.p3)}], JAM.policy.p3)], JAM.policy.p3);
      var v30824 = this.element;
      var v30693 = JAM.call(v30824.parent, v30824, [], JAM.policy.p3);
      var v30825 = this.element;
      var v31314 = JAM.call(v30693.data, v30693, ["resizable", JAM.call(v30825.data, v30825, ["resizable"], JAM.policy.p3)], JAM.policy.p3);
      this.element = v31314;
      this.elementIsWrapper = !0;
      var v30354 = this.element;
      var v30695 = this.originalElement;
      var v30555 = JAM.call(v30695.css, v30695, ["marginLeft"], JAM.policy.p3);
      var v30696 = this.originalElement;
      var v30556 = JAM.call(v30696.css, v30696, ["marginTop"], JAM.policy.p3);
      var v30697 = this.originalElement;
      var v30557 = JAM.call(v30697.css, v30697, ["marginRight"], JAM.policy.p3);
      var v30698 = this.originalElement;
      JAM.call(v30354.css, v30354, [{marginLeft:v30555, marginTop:v30556, marginRight:v30557, marginBottom:JAM.call(v30698.css, v30698, ["marginBottom"], JAM.policy.p3)}], JAM.policy.p3);
      var v30103 = this.originalElement;
      JAM.call(v30103.css, v30103, [{marginLeft:0, marginTop:0, marginRight:0, marginBottom:0}], JAM.policy.p3);
      var v29791 = this.originalElement;
      var v31315 = JAM.call(v29791.css, v29791, ["resize"], JAM.policy.p3);
      this.originalResizeStyle = v31315;
      var v29297 = this.originalElement;
      JAM.call(v29297.css, v29297, ["resize", "none"], JAM.policy.p3);
      var v28534 = this._proportionallyResizeElements;
      var v29298 = this.originalElement;
      JAM.call(v28534.push, v28534, [JAM.call(v29298.css, v29298, [{position:"static", zoom:1, display:"block"}], JAM.policy.p3)], JAM.policy.p3);
      var v27338 = this.originalElement;
      var v29300 = this.originalElement;
      JAM.call(v27338.css, v27338, [{margin:JAM.call(v29300.css, v29300, ["margin"], JAM.policy.p3)}], JAM.policy.p3);
      JAM.call(this._proportionallyResize, this, [], JAM.policy.p3);
    }
    var v11639 = c$$274.handles;
    if (!v11639) {
      var v17282;
      if (JAM.call(a$$434, null, [".ui-resizable-handle", this.element], JAM.policy.p3).length) {
        v17282 = {n:".ui-resizable-n", e:".ui-resizable-e", s:".ui-resizable-s", w:".ui-resizable-w", se:".ui-resizable-se", sw:".ui-resizable-sw", ne:".ui-resizable-ne", nw:".ui-resizable-nw"};
      } else {
        v17282 = "e,s,se";
      }
      v11639 = v17282;
    }
    this.handles = v11639;
    if (this.handles.constructor == String) {
      var v4752 = this.handles == "all";
      if (v4752) {
        this.handles = "n,e,s,w,se,sw,ne,nw";
      }
      var v4753 = this.handles;
      var d$$210 = JAM.call(v4753.split, v4753, [","], JAM.policy.p3);
      this.handles = {};
      var e$$201 = 0;
      var v4756 = e$$201 < d$$210.length;
      for (;v4756;) {
        var f$$73 = JAM.call(a$$434.trim, a$$434, [d$$210[e$$201]], JAM.policy.p3);
        var g$$113 = "ui-resizable-" + f$$73;
        var h$$93 = JAM.call(a$$434, null, ['<div class="ui-resizable-handle ' + g$$113 + '"></div>'], JAM.policy.p3);
        JAM.call(h$$93.css, h$$93, [{zIndex:c$$274.zIndex}], JAM.policy.p3);
        var v21287 = "se" == f$$73;
        if (v21287) {
          JAM.call(h$$93.addClass, h$$93, ["ui-icon ui-icon-gripsmall-diagonal-se"], JAM.policy.p3);
        }
        JAM.set(this.handles, f$$73, ".ui-resizable-" + f$$73, JAM.policy.p2);
        var v11644 = this.element;
        JAM.call(v11644.append, v11644, [h$$93], JAM.policy.p3);
        e$$201 = e$$201 + 1;
        v4756 = e$$201 < d$$210.length;
      }
    }
    this._renderAxis = v1236;
    JAM.call(this._renderAxis, this, [this.element], JAM.policy.p3);
    var v25507 = JAM.call(a$$434, null, [".ui-resizable-handle", this.element], JAM.policy.p3);
    var v31316 = JAM.call(v25507.disableSelection, v25507, [], JAM.policy.p3);
    this._handles = v31316;
    var v21288 = this._handles;
    JAM.call(v21288.mouseover, v21288, [v1237], JAM.policy.p3);
    var v17286 = c$$274.autoHide;
    if (v17286) {
      var v25508 = this._handles;
      JAM.call(v25508.hide, v25508, [], JAM.policy.p3);
      var v27343 = JAM.call(a$$434, null, [this.element], JAM.policy.p3);
      var v25509 = JAM.call(v27343.addClass, v27343, ["ui-resizable-autohide"], JAM.policy.p3);
      JAM.call(v25509.hover, v25509, [v1238, v1239], JAM.policy.p3);
    }
    JAM.call(this._mouseInit, this, [], JAM.policy.p3);
    return;
  }
  function d$$209(a$$450) {
    return!JAM.call(isNaN, null, [JAM.call(parseInt, null, [a$$450, 10], JAM.policy.p3)], JAM.policy.p3);
  }
  function c$$273(a$$449) {
    var v4759 = JAM.call(parseInt, null, [a$$449, 10], JAM.policy.p3);
    if (!v4759) {
      v4759 = 0;
    }
    return v4759;
  }
  JAM.call(a$$434.widget, a$$434, ["ui.resizable", a$$434.ui.mouse, {widgetEventPrefix:"resize", options:{alsoResize:!1, animate:!1, animateDuration:"slow", animateEasing:"swing", aspectRatio:!1, autoHide:!1, containment:!1, ghost:!1, grid:!1, handles:"e,s,se", helper:!1, maxHeight:null, maxWidth:null, minHeight:10, minWidth:10, zIndex:1E3}, _create:v1240, destroy:v1241, _mouseCapture:v1242, _mouseStart:v1243, _mouseDrag:v1244, _mouseStop:v1245, _updateVirtualBoundaries:v1246, _updateCache:v1247, 
  _updateRatio:v1248, _respectSize:v1249, _proportionallyResize:v1251, _renderProxy:v1252, _change:{e:v1253, w:v1254, n:v1255, s:v1256, se:v1257, sw:v1258, ne:v1259, nw:v1260}, _propagate:v1261, plugins:{}, ui:v1262}], JAM.policy.p3);
  JAM.call(a$$434.extend, a$$434, [a$$434.ui.resizable, {version:"1.8.24"}], JAM.policy.p3);
  var v27344 = a$$434.ui.plugin;
  JAM.call(v27344.add, v27344, ["resizable", "alsoResize", {start:v1265, resize:v1269, stop:v1270}], JAM.policy.p3);
  var v25510 = a$$434.ui.plugin;
  JAM.call(v25510.add, v25510, ["resizable", "animate", {stop:v1272}], JAM.policy.p3);
  var v21289 = a$$434.ui.plugin;
  JAM.call(v21289.add, v21289, ["resizable", "containment", {start:v1274, resize:v1275, stop:v1276}], JAM.policy.p3);
  var v17287 = a$$434.ui.plugin;
  JAM.call(v17287.add, v17287, ["resizable", "ghost", {start:v1277, resize:v1278, stop:v1279}], JAM.policy.p3);
  var v11648 = a$$434.ui.plugin;
  JAM.call(v11648.add, v11648, ["resizable", "grid", {resize:v1280}], JAM.policy.p3);
  return;
}
function v1235(a$$430, b$$315) {
  function v1234(b$$330, c$$272) {
    var v17290 = b$$330.element;
    var v11650 = JAM.call(v17290.parents, v17290, [":not(body,html)"], JAM.policy.p3);
    JAM.call(v11650.unbind, v11650, ["scroll.droppable"], JAM.policy.p3);
    var v11651 = b$$330.options.refreshPositions;
    if (!v11651) {
      var v17292 = a$$430.ui.ddmanager;
      JAM.call(v17292.prepareOffsets, v17292, [b$$330, c$$272], JAM.policy.p3);
    }
    return;
  }
  function v1233(b$$329, c$$271) {
    function v1232() {
      function v1231() {
        return JAM.call(a$$430.data, a$$430, [this, "droppable"], JAM.policy.p3).options.scope === g$$112;
      }
      var v17295 = this.options.disabled;
      if (!v17295) {
        v17295 = this.greedyChild;
      }
      var v11653 = v17295;
      if (!v11653) {
        v11653 = !this.visible;
      }
      if (v11653) {
        return;
      }
      var v4762 = a$$430.ui;
      var d$$208 = JAM.call(v4762.intersect, v4762, [b$$329, this, this.options.tolerance], JAM.policy.p3);
      var v4764;
      var v17298 = !d$$208;
      if (v17298) {
        v17298 = this.isover == 1;
      }
      if (v17298) {
        v4764 = "isout";
      } else {
        var v11655;
        var v21296 = d$$208;
        if (v21296) {
          v21296 = this.isover == 0;
        }
        if (v21296) {
          v11655 = "isover";
        } else {
          v11655 = null;
        }
        v4764 = v11655;
      }
      var e$$200 = v4764;
      if (!e$$200) {
        return;
      }
      var f$$72;
      if (this.options.greedy) {
        var g$$112 = this.options.scope;
        var v11658 = this.element;
        var v4767 = JAM.call(v11658.parents, v11658, [":data(droppable)"], JAM.policy.p3);
        var h$$92 = JAM.call(v4767.filter, v4767, [v1231], JAM.policy.p3);
        var v4768 = h$$92.length;
        if (v4768) {
          f$$72 = JAM.call(a$$430.data, a$$430, [h$$92[0], "droppable"], JAM.policy.p3);
          var v17301;
          if (e$$200 == "isover") {
            v17301 = 1;
          } else {
            v17301 = 0;
          }
          f$$72.greedyChild = v17301;
        }
      }
      var v27347 = f$$72;
      if (v27347) {
        v27347 = e$$200 == "isover";
      }
      var v25514 = v27347;
      if (v25514) {
        f$$72.isover = 0;
        f$$72.isout = 1;
        var v28543 = f$$72._out;
        JAM.call(v28543.call, v28543, [f$$72, c$$271], JAM.policy.p3);
      }
      JAM.set(this, e$$200, 1, JAM.policy.p2);
      var v25515;
      if (e$$200 == "isout") {
        v25515 = "isover";
      } else {
        v25515 = "isout";
      }
      JAM.set(this, v25515, 0, JAM.policy.p2);
      var v25516;
      if (e$$200 == "isover") {
        v25516 = "_over";
      } else {
        v25516 = "_out";
      }
      var v17302 = this[v25516];
      JAM.call(v17302.call, v17302, [this, c$$271], JAM.policy.p3);
      var v17303 = f$$72;
      if (v17303) {
        v17303 = e$$200 == "isout";
      }
      var v11659 = v17303;
      if (v11659) {
        f$$72.isout = 0;
        f$$72.isover = 1;
        var v21300 = f$$72._over;
        JAM.call(v21300.call, v21300, [f$$72, c$$271], JAM.policy.p3);
      }
      return;
    }
    var v11660 = b$$329.options.refreshPositions;
    if (v11660) {
      var v17305 = a$$430.ui.ddmanager;
      JAM.call(v17305.prepareOffsets, v17305, [b$$329, c$$271], JAM.policy.p3);
    }
    var v17306 = a$$430.ui.ddmanager.droppables[b$$329.options.scope];
    if (!v17306) {
      v17306 = [];
    }
    JAM.call(a$$430.each, a$$430, [v17306, v1232], JAM.policy.p3);
    return;
  }
  function v1230(b$$328, c$$270) {
    function v1229() {
      var v4770 = b$$328.options.refreshPositions;
      if (!v4770) {
        var v11663 = a$$430.ui.ddmanager;
        JAM.call(v11663.prepareOffsets, v11663, [b$$328, c$$270], JAM.policy.p3);
      }
      return;
    }
    var v11665 = b$$328.element;
    var v4771 = JAM.call(v11665.parents, v11665, [":not(body,html)"], JAM.policy.p3);
    JAM.call(v4771.bind, v4771, ["scroll.droppable", v1229], JAM.policy.p3);
    return;
  }
  function v1228(b$$327, c$$269) {
    function v1227() {
      if (!this.options) {
        return;
      }
      var v21305 = !this.options.disabled;
      if (v21305) {
        v21305 = this.visible;
      }
      var v17308 = v21305;
      if (v17308) {
        var v21306 = a$$430.ui;
        v17308 = JAM.call(v21306.intersect, v21306, [b$$327, this, this.options.tolerance], JAM.policy.p3);
      }
      var v11667 = v17308;
      if (v11667) {
        var v21308 = this._drop;
        var v17309 = JAM.call(v21308.call, v21308, [this, c$$269], JAM.policy.p3);
        if (!v17309) {
          v17309 = d$$207;
        }
        d$$207 = v17309;
      }
      var v21310 = !this.options.disabled;
      if (v21310) {
        v21310 = this.visible;
      }
      var v17310 = v21310;
      if (v17310) {
        var v21311 = this.accept;
        var v21312 = this.element[0];
        var v25523 = b$$327.currentItem;
        if (!v25523) {
          v25523 = b$$327.element;
        }
        v17310 = JAM.call(v21311.call, v21311, [v21312, v25523], JAM.policy.p3);
      }
      var v11668 = v17310;
      if (v11668) {
        this.isout = 1;
        this.isover = 0;
        var v21314 = this._deactivate;
        JAM.call(v21314.call, v21314, [this, c$$269], JAM.policy.p3);
      }
      return;
    }
    var d$$207 = !1;
    var v17311 = a$$430.ui.ddmanager.droppables[b$$327.options.scope];
    if (!v17311) {
      v17311 = [];
    }
    JAM.call(a$$430.each, a$$430, [v17311, v1227], JAM.policy.p3);
    return d$$207;
  }
  function v1226(b$$326, c$$268) {
    var v4773 = a$$430.ui.ddmanager.droppables[b$$326.options.scope];
    if (!v4773) {
      v4773 = [];
    }
    var d$$206 = v4773;
    var v4774;
    if (c$$268) {
      v4774 = c$$268.type;
    } else {
      v4774 = null;
    }
    var e$$199 = v4774;
    var v17314 = b$$326.currentItem;
    if (!v17314) {
      v17314 = b$$326.element;
    }
    var v11673 = v17314;
    var v4775 = JAM.call(v11673.find, v11673, [":data(droppable)"], JAM.policy.p3);
    var f$$71 = JAM.call(v4775.andSelf, v4775, [], JAM.policy.p3);
    var h$$91 = 0;
    var v4782 = h$$91 < d$$206.length;
    g: for (;v4782;) {
      var v11675 = d$$206[h$$91].options.disabled;
      if (!v11675) {
        var v17316 = b$$326;
        if (v17316) {
          var v25526 = d$$206[h$$91].accept;
          var v25527 = d$$206[h$$91].element[0];
          var v27357 = b$$326.currentItem;
          if (!v27357) {
            v27357 = b$$326.element;
          }
          v17316 = !JAM.call(v25526.call, v25526, [v25527, v27357], JAM.policy.p3);
        }
        v11675 = v17316;
      }
      if (v11675) {
        h$$91 = h$$91 + 1;
        v4782 = h$$91 < d$$206.length;
        continue;
      }
      var i$$152 = 0;
      var v4779 = i$$152 < f$$71.length;
      for (;v4779;) {
        if (f$$71[i$$152] == d$$206[h$$91].element[0]) {
          d$$206[h$$91].proportions.height = 0;
          i$$152 = i$$152 + 1;
          v4779 = i$$152 < f$$71.length;
          h$$91 = h$$91 + 1;
          v4782 = h$$91 < d$$206.length;
          continue g;
        }
        i$$152 = i$$152 + 1;
        v4779 = i$$152 < f$$71.length;
      }
      var v4780 = d$$206[h$$91];
      var v17319 = d$$206[h$$91].element;
      v4780.visible = JAM.call(v17319.css, v17319, ["display"], JAM.policy.p3) != "none";
      if (!d$$206[h$$91].visible) {
        h$$91 = h$$91 + 1;
        v4782 = h$$91 < d$$206.length;
        continue;
      }
      var v17321 = e$$199 == "mousedown";
      if (v17321) {
        var v21324 = d$$206[h$$91]._activate;
        JAM.call(v21324.call, v21324, [d$$206[h$$91], c$$268], JAM.policy.p3);
      }
      var v17322 = d$$206[h$$91];
      var v21326 = d$$206[h$$91].element;
      var v31317 = JAM.call(v21326.offset, v21326, [], JAM.policy.p3);
      v17322.offset = v31317;
      d$$206[h$$91].proportions = {width:d$$206[h$$91].element[0].offsetWidth, height:d$$206[h$$91].element[0].offsetHeight};
      h$$91 = h$$91 + 1;
      v4782 = h$$91 < d$$206.length;
    }
    return;
  }
  function v1225(b$$325, c$$267, d$$205) {
    if (!c$$267.offset) {
      return!1;
    }
    var v11690 = b$$325.positionAbs;
    if (!v11690) {
      v11690 = b$$325.position.absolute;
    }
    var e$$198 = v11690.left;
    var f$$70 = e$$198 + b$$325.helperProportions.width;
    var v11692 = b$$325.positionAbs;
    if (!v11692) {
      v11692 = b$$325.position.absolute;
    }
    var g$$111 = v11692.top;
    var h$$90 = g$$111 + b$$325.helperProportions.height;
    var i$$151 = c$$267.offset.left;
    var j$$67 = i$$151 + c$$267.proportions.width;
    var k$$44 = c$$267.offset.top;
    var l$$55 = k$$44 + c$$267.proportions.height;
    switch(d$$205) {
      case "fit":
        var v17329 = i$$151 <= e$$198;
        if (v17329) {
          v17329 = f$$70 <= j$$67;
        }
        var v11696 = v17329;
        if (v11696) {
          v11696 = k$$44 <= g$$111;
        }
        var v4792 = v11696;
        if (v4792) {
          v4792 = h$$90 <= l$$55;
        }
        return v4792;
      case "intersect":
        var v17330 = i$$151 < e$$198 + b$$325.helperProportions.width / 2;
        if (v17330) {
          v17330 = f$$70 - b$$325.helperProportions.width / 2 < j$$67;
        }
        var v11697 = v17330;
        if (v11697) {
          v11697 = k$$44 < g$$111 + b$$325.helperProportions.height / 2;
        }
        var v4793 = v11697;
        if (v4793) {
          v4793 = h$$90 - b$$325.helperProportions.height / 2 < l$$55;
        }
        return v4793;
      case "pointer":
        var v17333 = b$$325.positionAbs;
        if (!v17333) {
          v17333 = b$$325.position.absolute;
        }
        var v4794 = v17333.left;
        var v17334 = b$$325.clickOffset;
        if (!v17334) {
          v17334 = b$$325.offset.click;
        }
        var m$$29 = v4794 + v17334.left;
        var v17335 = b$$325.positionAbs;
        if (!v17335) {
          v17335 = b$$325.position.absolute;
        }
        var v4796 = v17335.top;
        var v17336 = b$$325.clickOffset;
        if (!v17336) {
          v17336 = b$$325.offset.click;
        }
        var n$$80 = v4796 + v17336.top;
        var v4798 = a$$430.ui;
        var o$$17 = JAM.call(v4798.isOver, v4798, [n$$80, m$$29, k$$44, i$$151, c$$267.proportions.height, c$$267.proportions.width], JAM.policy.p3);
        return o$$17;
      case "touch":
        var v21341 = g$$111 >= k$$44;
        if (v21341) {
          v21341 = g$$111 <= l$$55;
        }
        var v17337 = v21341;
        if (!v17337) {
          var v21342 = h$$90 >= k$$44;
          if (v21342) {
            v21342 = h$$90 <= l$$55;
          }
          v17337 = v21342;
        }
        var v11705 = v17337;
        if (!v11705) {
          var v17338 = g$$111 < k$$44;
          if (v17338) {
            v17338 = h$$90 > l$$55;
          }
          v11705 = v17338;
        }
        var v4801 = v11705;
        if (v4801) {
          var v21344 = e$$198 >= i$$151;
          if (v21344) {
            v21344 = e$$198 <= j$$67;
          }
          var v17340 = v21344;
          if (!v17340) {
            var v21345 = f$$70 >= i$$151;
            if (v21345) {
              v21345 = f$$70 <= j$$67;
            }
            v17340 = v21345;
          }
          var v11706 = v17340;
          if (!v11706) {
            var v17341 = e$$198 < i$$151;
            if (v17341) {
              v17341 = f$$70 > j$$67;
            }
            v11706 = v17341;
          }
          v4801 = v11706;
        }
        return v4801;
      default:
        return!1;
    }
    return;
  }
  function v1224(a$$433) {
    var v11707 = a$$433.currentItem;
    if (!v11707) {
      v11707 = a$$433.element;
    }
    return{draggable:v11707, helper:a$$433.helper, position:a$$433.position, offset:a$$433.positionAbs};
  }
  function v1223(b$$323, c$$266) {
    function v1222() {
      var b$$324 = JAM.call(a$$430.data, a$$430, [this, "droppable"], JAM.policy.p3);
      var v25537 = b$$324.options.greedy;
      if (v25537) {
        v25537 = !b$$324.options.disabled;
      }
      var v21347 = v25537;
      if (v21347) {
        v21347 = b$$324.options.scope == d$$204.options.scope;
      }
      var v17344 = v21347;
      if (v17344) {
        var v21348 = b$$324.accept;
        var v21349 = b$$324.element[0];
        var v25541 = d$$204.currentItem;
        if (!v25541) {
          v25541 = d$$204.element;
        }
        v17344 = JAM.call(v21348.call, v21348, [v21349, v25541], JAM.policy.p3);
      }
      var v11708 = v17344;
      if (v11708) {
        var v17345 = a$$430.ui;
        var v27368 = b$$324.element;
        v11708 = JAM.call(v17345.intersect, v17345, [d$$204, JAM.call(a$$430.extend, a$$430, [b$$324, {offset:JAM.call(v27368.offset, v27368, [], JAM.policy.p3)}], JAM.policy.p3), b$$324.options.tolerance], JAM.policy.p3);
      }
      if (v11708) {
        e$$197 = !0;
        return!1;
      }
      return;
    }
    var v4807 = c$$266;
    if (!v4807) {
      v4807 = a$$430.ui.ddmanager.current;
    }
    var d$$204 = v4807;
    var v11711 = !d$$204;
    if (!v11711) {
      var v25543 = d$$204.currentItem;
      if (!v25543) {
        v25543 = d$$204.element;
      }
      v11711 = v25543[0] == this.element[0];
    }
    if (v11711) {
      return!1;
    }
    var e$$197 = !1;
    var v21355 = this.element;
    var v17352 = JAM.call(v21355.find, v21355, [":data(droppable)"], JAM.policy.p3);
    var v11712 = JAM.call(v17352.not, v17352, [".ui-draggable-dragging"], JAM.policy.p3);
    JAM.call(v11712.each, v11712, [v1222], JAM.policy.p3);
    var v11713;
    if (e$$197) {
      v11713 = !1;
    } else {
      var v17353;
      var v25544 = this.accept;
      var v25545 = this.element[0];
      var v27371 = d$$204.currentItem;
      if (!v27371) {
        v27371 = d$$204.element;
      }
      if (JAM.call(v25544.call, v25544, [v25545, v27371], JAM.policy.p3)) {
        var v28550 = this.options.activeClass;
        if (v28550) {
          var v29306 = this.element;
          JAM.call(v29306.removeClass, v29306, [this.options.activeClass], JAM.policy.p3);
        }
        var v28551 = this.options.hoverClass;
        if (v28551) {
          var v29309 = this.element;
          JAM.call(v29309.removeClass, v29309, [this.options.hoverClass], JAM.policy.p3);
        }
        JAM.call(this._trigger, this, ["drop", b$$323, JAM.call(this.ui, this, [d$$204], JAM.policy.p3)], JAM.policy.p3);
        v17353 = this.element;
      } else {
        v17353 = !1;
      }
      v11713 = v17353;
    }
    return v11713;
  }
  function v1221(b$$322) {
    var c$$265 = a$$430.ui.ddmanager.current;
    var v11715 = !c$$265;
    if (!v11715) {
      var v25547 = c$$265.currentItem;
      if (!v25547) {
        v25547 = c$$265.element;
      }
      v11715 = v25547[0] == this.element[0];
    }
    if (v11715) {
      return;
    }
    var v11716 = this.accept;
    var v11717 = this.element[0];
    var v17358 = c$$265.currentItem;
    if (!v17358) {
      v17358 = c$$265.element;
    }
    var v4811 = JAM.call(v11716.call, v11716, [v11717, v17358], JAM.policy.p3);
    if (v4811) {
      var v17359 = this.options.hoverClass;
      if (v17359) {
        var v21361 = this.element;
        JAM.call(v21361.removeClass, v21361, [this.options.hoverClass], JAM.policy.p3);
      }
      JAM.call(this._trigger, this, ["out", b$$322, JAM.call(this.ui, this, [c$$265], JAM.policy.p3)], JAM.policy.p3);
    }
    return;
  }
  function v1220(b$$321) {
    var c$$264 = a$$430.ui.ddmanager.current;
    var v11720 = !c$$264;
    if (!v11720) {
      var v25549 = c$$264.currentItem;
      if (!v25549) {
        v25549 = c$$264.element;
      }
      v11720 = v25549[0] == this.element[0];
    }
    if (v11720) {
      return;
    }
    var v11721 = this.accept;
    var v11722 = this.element[0];
    var v17365 = c$$264.currentItem;
    if (!v17365) {
      v17365 = c$$264.element;
    }
    var v4814 = JAM.call(v11721.call, v11721, [v11722, v17365], JAM.policy.p3);
    if (v4814) {
      var v17366 = this.options.hoverClass;
      if (v17366) {
        var v21367 = this.element;
        JAM.call(v21367.addClass, v21367, [this.options.hoverClass], JAM.policy.p3);
      }
      JAM.call(this._trigger, this, ["over", b$$321, JAM.call(this.ui, this, [c$$264], JAM.policy.p3)], JAM.policy.p3);
    }
    return;
  }
  function v1219(b$$320) {
    var c$$263 = a$$430.ui.ddmanager.current;
    var v11725 = this.options.activeClass;
    if (v11725) {
      var v17369 = this.element;
      JAM.call(v17369.removeClass, v17369, [this.options.activeClass], JAM.policy.p3);
    }
    if (c$$263) {
      JAM.call(this._trigger, this, ["deactivate", b$$320, JAM.call(this.ui, this, [c$$263], JAM.policy.p3)], JAM.policy.p3);
    }
    return;
  }
  function v1218(b$$319) {
    var c$$262 = a$$430.ui.ddmanager.current;
    var v11727 = this.options.activeClass;
    if (v11727) {
      var v17373 = this.element;
      JAM.call(v17373.addClass, v17373, [this.options.activeClass], JAM.policy.p3);
    }
    if (c$$262) {
      JAM.call(this._trigger, this, ["activate", b$$319, JAM.call(this.ui, this, [c$$262], JAM.policy.p3)], JAM.policy.p3);
    }
    return;
  }
  function v1217(b$$318, c$$261) {
    function v1216(a$$432) {
      return JAM.call(a$$432.is, a$$432, [c$$261], JAM.policy.p3);
    }
    var v11728 = b$$318 == "accept";
    if (v11728) {
      var v17376;
      if (JAM.call(a$$430.isFunction, a$$430, [c$$261], JAM.policy.p3)) {
        v17376 = c$$261;
      } else {
        v17376 = v1216;
      }
      this.accept = v17376;
    }
    var v11729 = a$$430.Widget.prototype._setOption;
    JAM.call(v11729.apply, v11729, [this, arguments], JAM.policy.p3);
    return;
  }
  function v1215() {
    var b$$317 = a$$430.ui.ddmanager.droppables[this.options.scope];
    var c$$260 = 0;
    var v4820 = c$$260 < b$$317.length;
    for (;v4820;) {
      var v4819 = b$$317[c$$260] == this;
      if (v4819) {
        JAM.call(b$$317.splice, b$$317, [c$$260, 1], JAM.policy.p3);
      }
      c$$260 = c$$260 + 1;
      v4820 = c$$260 < b$$317.length;
    }
    var v21373 = this.element;
    var v17379 = JAM.call(v21373.removeClass, v21373, ["ui-droppable ui-droppable-disabled"], JAM.policy.p3);
    var v11735 = JAM.call(v17379.removeData, v17379, ["droppable"], JAM.policy.p3);
    JAM.call(v11735.unbind, v11735, [".droppable"], JAM.policy.p3);
    return this;
  }
  function v1214() {
    function v1213(a$$431) {
      return JAM.call(a$$431.is, a$$431, [c$$259], JAM.policy.p3);
    }
    var b$$316 = this.options;
    var c$$259 = b$$316.accept;
    this.isover = 0;
    this.isout = 1;
    var v27375;
    if (JAM.call(a$$430.isFunction, a$$430, [c$$259], JAM.policy.p3)) {
      v27375 = c$$259;
    } else {
      v27375 = v1213;
    }
    this.accept = v27375;
    this.proportions = {width:this.element[0].offsetWidth, height:this.element[0].offsetHeight};
    var v21374 = a$$430.ui.ddmanager.droppables;
    var v21375 = b$$316.scope;
    var v25554 = a$$430.ui.ddmanager.droppables[b$$316.scope];
    if (!v25554) {
      v25554 = [];
    }
    JAM.set(v21374, v21375, v25554, JAM.policy.p2);
    var v17380 = a$$430.ui.ddmanager.droppables[b$$316.scope];
    JAM.call(v17380.push, v17380, [this], JAM.policy.p3);
    var v11736 = b$$316.addClasses;
    if (v11736) {
      var v17381 = this.element;
      JAM.call(v17381.addClass, v17381, ["ui-droppable"], JAM.policy.p3);
    }
    return;
  }
  JAM.call(a$$430.widget, a$$430, ["ui.droppable", {widgetEventPrefix:"drop", options:{accept:"*", activeClass:!1, addClasses:!0, greedy:!1, hoverClass:!1, scope:"default", tolerance:"intersect"}, _create:v1214, destroy:v1215, _setOption:v1217, _activate:v1218, _deactivate:v1219, _over:v1220, _out:v1221, _drop:v1223, ui:v1224}], JAM.policy.p3);
  JAM.call(a$$430.extend, a$$430, [a$$430.ui.droppable, {version:"1.8.24"}], JAM.policy.p3);
  a$$430.ui.intersect = v1225;
  a$$430.ui.ddmanager = {current:null, droppables:{"default":[]}, prepareOffsets:v1226, drop:v1228, dragStart:v1230, drag:v1233, dragStop:v1234};
  return;
}
function v1212(a$$426, b$$284) {
  function v1211(b$$314, c$$258) {
    var v11738 = JAM.call(a$$426, null, [this], JAM.policy.p3);
    var d$$203 = JAM.call(v11738.data, v11738, ["draggable"], JAM.policy.p3).options;
    var v4822 = d$$203._zIndex;
    if (v4822) {
      var v11739 = JAM.call(a$$426, null, [c$$258.helper], JAM.policy.p3);
      JAM.call(v11739.css, v11739, ["zIndex", d$$203._zIndex], JAM.policy.p3);
    }
    return;
  }
  function v1210(b$$313, c$$257) {
    var d$$202 = JAM.call(a$$426, null, [c$$257.helper], JAM.policy.p3);
    var v11741 = JAM.call(a$$426, null, [this], JAM.policy.p3);
    var e$$196 = JAM.call(v11741.data, v11741, ["draggable"], JAM.policy.p3).options;
    var v11742 = JAM.call(d$$202.css, d$$202, ["zIndex"], JAM.policy.p3);
    if (v11742) {
      var v17385 = e$$196;
      var v31318 = JAM.call(d$$202.css, d$$202, ["zIndex"], JAM.policy.p3);
      v17385._zIndex = v31318;
    }
    JAM.call(d$$202.css, d$$202, ["zIndex", e$$196.zIndex], JAM.policy.p3);
    return;
  }
  function v1209(b$$311, c$$255) {
    function v1208(a$$429) {
      this.style.zIndex = f$$69 + a$$429;
      return;
    }
    function v1207(b$$312, c$$256) {
      var v21381 = JAM.call(a$$426, null, [b$$312], JAM.policy.p3);
      var v11744 = JAM.call(parseInt, null, [JAM.call(v21381.css, v21381, ["zIndex"], JAM.policy.p3), 10], JAM.policy.p3);
      if (!v11744) {
        v11744 = 0;
      }
      var v4826 = v11744;
      var v21382 = JAM.call(a$$426, null, [c$$256], JAM.policy.p3);
      var v11745 = JAM.call(parseInt, null, [JAM.call(v21382.css, v21382, ["zIndex"], JAM.policy.p3), 10], JAM.policy.p3);
      if (!v11745) {
        v11745 = 0;
      }
      return v4826 - v11745;
    }
    var v11746 = JAM.call(a$$426, null, [this], JAM.policy.p3);
    var d$$201 = JAM.call(v11746.data, v11746, ["draggable"], JAM.policy.p3).options;
    var v4829 = JAM.call(a$$426.makeArray, a$$426, [JAM.call(a$$426, null, [d$$201.stack], JAM.policy.p3)], JAM.policy.p3);
    var e$$195 = JAM.call(v4829.sort, v4829, [v1207], JAM.policy.p3);
    if (!e$$195.length) {
      return;
    }
    var v4831 = JAM.call(parseInt, null, [e$$195[0].style.zIndex], JAM.policy.p3);
    if (!v4831) {
      v4831 = 0;
    }
    var f$$69 = v4831;
    var v11751 = JAM.call(a$$426, null, [e$$195], JAM.policy.p3);
    JAM.call(v11751.each, v11751, [v1208], JAM.policy.p3);
    this[0].style.zIndex = f$$69 + e$$195.length;
    return;
  }
  function v1206(b$$310, c$$254) {
    var v4832 = JAM.call(a$$426, null, [this], JAM.policy.p3);
    var d$$200 = JAM.call(v4832.data, v4832, ["draggable"], JAM.policy.p3);
    var e$$194 = d$$200.options;
    var f$$68 = e$$194.snapTolerance;
    var g$$110 = c$$254.offset.left;
    var h$$89 = g$$110 + d$$200.helperProportions.width;
    var i$$150 = c$$254.offset.top;
    var j$$66 = i$$150 + d$$200.helperProportions.height;
    var k$$43 = d$$200.snapElements.length - 1;
    var v4854 = k$$43 >= 0;
    for (;v4854;) {
      var l$$54 = d$$200.snapElements[k$$43].left;
      var m$$28 = l$$54 + d$$200.snapElements[k$$43].width;
      var n$$79 = d$$200.snapElements[k$$43].top;
      var o$$16 = n$$79 + d$$200.snapElements[k$$43].height;
      var v29312 = l$$54 - f$$68 < g$$110;
      if (v29312) {
        v29312 = g$$110 < m$$28 + f$$68;
      }
      var v28556 = v29312;
      if (v28556) {
        v28556 = n$$79 - f$$68 < i$$150;
      }
      var v27387 = v28556;
      if (v27387) {
        v27387 = i$$150 < o$$16 + f$$68;
      }
      var v25558 = v27387;
      if (!v25558) {
        var v29314 = l$$54 - f$$68 < g$$110;
        if (v29314) {
          v29314 = g$$110 < m$$28 + f$$68;
        }
        var v28558 = v29314;
        if (v28558) {
          v28558 = n$$79 - f$$68 < j$$66;
        }
        var v27388 = v28558;
        if (v27388) {
          v27388 = j$$66 < o$$16 + f$$68;
        }
        v25558 = v27388;
      }
      var v21384 = v25558;
      if (!v21384) {
        var v28560 = l$$54 - f$$68 < h$$89;
        if (v28560) {
          v28560 = h$$89 < m$$28 + f$$68;
        }
        var v27390 = v28560;
        if (v27390) {
          v27390 = n$$79 - f$$68 < i$$150;
        }
        var v25559 = v27390;
        if (v25559) {
          v25559 = i$$150 < o$$16 + f$$68;
        }
        v21384 = v25559;
      }
      var v17396 = v21384;
      if (!v17396) {
        var v27392 = l$$54 - f$$68 < h$$89;
        if (v27392) {
          v27392 = h$$89 < m$$28 + f$$68;
        }
        var v25561 = v27392;
        if (v25561) {
          v25561 = n$$79 - f$$68 < j$$66;
        }
        var v21385 = v25561;
        if (v21385) {
          v21385 = j$$66 < o$$16 + f$$68;
        }
        v17396 = v21385;
      }
      if (!v17396) {
        var v17397 = d$$200.snapElements[k$$43].snapping;
        if (v17397) {
          v17397 = d$$200.options.snap.release;
        }
        var v11761 = v17397;
        if (v11761) {
          var v17398 = d$$200.options.snap.release;
          JAM.call(v17398.call, v17398, [d$$200.element, b$$310, JAM.call(a$$426.extend, a$$426, [JAM.call(d$$200._uiHash, d$$200, [], JAM.policy.p3), {snapItem:d$$200.snapElements[k$$43].item}], JAM.policy.p3)], JAM.policy.p3);
        }
        d$$200.snapElements[k$$43].snapping = !1;
        k$$43 = k$$43 - 1;
        v4854 = k$$43 >= 0;
        continue;
      }
      if (e$$194.snapMode != "inner") {
        var p$$38 = JAM.call(Math.abs, Math, [n$$79 - j$$66], JAM.policy.p3) <= f$$68;
        var q$$15 = JAM.call(Math.abs, Math, [o$$16 - i$$150], JAM.policy.p3) <= f$$68;
        var r$$17 = JAM.call(Math.abs, Math, [l$$54 - h$$89], JAM.policy.p3) <= f$$68;
        var s$$26 = JAM.call(Math.abs, Math, [m$$28 - g$$110], JAM.policy.p3) <= f$$68;
        if (p$$38) {
          c$$254.position.top = JAM.call(d$$200._convertPositionTo, d$$200, ["relative", {top:n$$79 - d$$200.helperProportions.height, left:0}], JAM.policy.p3).top - d$$200.margins.top;
        }
        if (q$$15) {
          c$$254.position.top = JAM.call(d$$200._convertPositionTo, d$$200, ["relative", {top:o$$16, left:0}], JAM.policy.p3).top - d$$200.margins.top;
        }
        if (r$$17) {
          c$$254.position.left = JAM.call(d$$200._convertPositionTo, d$$200, ["relative", {top:0, left:l$$54 - d$$200.helperProportions.width}], JAM.policy.p3).left - d$$200.margins.left;
        }
        if (s$$26) {
          c$$254.position.left = JAM.call(d$$200._convertPositionTo, d$$200, ["relative", {top:0, left:m$$28}], JAM.policy.p3).left - d$$200.margins.left;
        }
      }
      var v11768 = p$$38 || q$$15;
      if (!v11768) {
        v11768 = r$$17;
      }
      var v4848 = v11768;
      if (!v4848) {
        v4848 = s$$26;
      }
      var t$$11 = v4848;
      if (e$$194.snapMode != "outer") {
        p$$38 = JAM.call(Math.abs, Math, [n$$79 - i$$150], JAM.policy.p3) <= f$$68;
        q$$15 = JAM.call(Math.abs, Math, [o$$16 - j$$66], JAM.policy.p3) <= f$$68;
        r$$17 = JAM.call(Math.abs, Math, [l$$54 - g$$110], JAM.policy.p3) <= f$$68;
        s$$26 = JAM.call(Math.abs, Math, [m$$28 - h$$89], JAM.policy.p3) <= f$$68;
        if (p$$38) {
          c$$254.position.top = JAM.call(d$$200._convertPositionTo, d$$200, ["relative", {top:n$$79, left:0}], JAM.policy.p3).top - d$$200.margins.top;
        }
        if (q$$15) {
          c$$254.position.top = JAM.call(d$$200._convertPositionTo, d$$200, ["relative", {top:o$$16 - d$$200.helperProportions.height, left:0}], JAM.policy.p3).top - d$$200.margins.top;
        }
        if (r$$17) {
          c$$254.position.left = JAM.call(d$$200._convertPositionTo, d$$200, ["relative", {top:0, left:l$$54}], JAM.policy.p3).left - d$$200.margins.left;
        }
        if (s$$26) {
          c$$254.position.left = JAM.call(d$$200._convertPositionTo, d$$200, ["relative", {top:0, left:m$$28 - d$$200.helperProportions.width}], JAM.policy.p3).left - d$$200.margins.left;
        }
      }
      var v21398 = !d$$200.snapElements[k$$43].snapping;
      if (v21398) {
        var v28577 = p$$38 || q$$15;
        if (!v28577) {
          v28577 = r$$17;
        }
        var v27410 = v28577;
        if (!v27410) {
          v27410 = s$$26;
        }
        var v25580 = v27410;
        if (!v25580) {
          v25580 = t$$11;
        }
        v21398 = v25580;
      }
      var v17405 = v21398;
      if (v17405) {
        v17405 = d$$200.options.snap.snap;
      }
      var v11775 = v17405;
      if (v11775) {
        var v17406 = d$$200.options.snap.snap;
        JAM.call(v17406.call, v17406, [d$$200.element, b$$310, JAM.call(a$$426.extend, a$$426, [JAM.call(d$$200._uiHash, d$$200, [], JAM.policy.p3), {snapItem:d$$200.snapElements[k$$43].item}], JAM.policy.p3)], JAM.policy.p3);
      }
      var v11776 = d$$200.snapElements[k$$43];
      var v25584 = p$$38 || q$$15;
      if (!v25584) {
        v25584 = r$$17;
      }
      var v21403 = v25584;
      if (!v21403) {
        v21403 = s$$26;
      }
      var v17410 = v21403;
      if (!v17410) {
        v17410 = t$$11;
      }
      v11776.snapping = v17410;
      k$$43 = k$$43 - 1;
      v4854 = k$$43 >= 0;
    }
    return;
  }
  function v1205(b$$308, c$$252) {
    function v1204() {
      var b$$309 = JAM.call(a$$426, null, [this], JAM.policy.p3);
      var c$$253 = JAM.call(b$$309.offset, b$$309, [], JAM.policy.p3);
      var v4855 = this != d$$199.element[0];
      if (v4855) {
        var v11778 = d$$199.snapElements;
        JAM.call(v11778.push, v11778, [{item:this, width:JAM.call(b$$309.outerWidth, b$$309, [], JAM.policy.p3), height:JAM.call(b$$309.outerHeight, b$$309, [], JAM.policy.p3), top:c$$253.top, left:c$$253.left}], JAM.policy.p3);
      }
      return;
    }
    var v4856 = JAM.call(a$$426, null, [this], JAM.policy.p3);
    var d$$199 = JAM.call(v4856.data, v4856, ["draggable"], JAM.policy.p3);
    var e$$193 = d$$199.options;
    d$$199.snapElements = [];
    var v21405;
    if (e$$193.snap.constructor != String) {
      var v25586 = e$$193.snap.items;
      if (!v25586) {
        v25586 = ":data(draggable)";
      }
      v21405 = v25586;
    } else {
      v21405 = e$$193.snap;
    }
    var v11780 = JAM.call(a$$426, null, [v21405], JAM.policy.p3);
    JAM.call(v11780.each, v11780, [v1204], JAM.policy.p3);
    return;
  }
  function v1203(b$$307, c$$251) {
    var v4857 = JAM.call(a$$426, null, [this], JAM.policy.p3);
    var d$$198 = JAM.call(v4857.data, v4857, ["draggable"], JAM.policy.p3);
    var e$$192 = d$$198.options;
    var f$$67 = !1;
    var v11781 = d$$198.scrollParent[0] != document;
    if (v11781) {
      v11781 = d$$198.scrollParent[0].tagName != "HTML";
    }
    if (v11781) {
      var v11782 = !e$$192.axis;
      if (!v11782) {
        v11782 = e$$192.axis != "x";
      }
      if (v11782) {
        var v4858;
        if (d$$198.overflowOffset.top + d$$198.scrollParent[0].offsetHeight - b$$307.pageY < e$$192.scrollSensitivity) {
          v4858 = d$$198.scrollParent[0].scrollTop = f$$67 = d$$198.scrollParent[0].scrollTop + e$$192.scrollSpeed;
        } else {
          var v11784 = b$$307.pageY - d$$198.overflowOffset.top < e$$192.scrollSensitivity;
          if (v11784) {
            v11784 = d$$198.scrollParent[0].scrollTop = f$$67 = d$$198.scrollParent[0].scrollTop - e$$192.scrollSpeed;
          }
          v4858 = v11784;
        }
        v4858;
      }
      var v11786 = !e$$192.axis;
      if (!v11786) {
        v11786 = e$$192.axis != "y";
      }
      if (v11786) {
        var v4860;
        if (d$$198.overflowOffset.left + d$$198.scrollParent[0].offsetWidth - b$$307.pageX < e$$192.scrollSensitivity) {
          v4860 = d$$198.scrollParent[0].scrollLeft = f$$67 = d$$198.scrollParent[0].scrollLeft + e$$192.scrollSpeed;
        } else {
          var v11788 = b$$307.pageX - d$$198.overflowOffset.left < e$$192.scrollSensitivity;
          if (v11788) {
            v11788 = d$$198.scrollParent[0].scrollLeft = f$$67 = d$$198.scrollParent[0].scrollLeft - e$$192.scrollSpeed;
          }
          v4860 = v11788;
        }
        v4860;
      }
    } else {
      var v11790 = !e$$192.axis;
      if (!v11790) {
        v11790 = e$$192.axis != "x";
      }
      if (v11790) {
        var v4862;
        var v21424 = b$$307.pageY;
        var v25599 = JAM.call(a$$426, null, [document], JAM.policy.p3);
        if (v21424 - JAM.call(v25599.scrollTop, v25599, [], JAM.policy.p3) < e$$192.scrollSensitivity) {
          var v11791 = JAM.call(a$$426, null, [document], JAM.policy.p3);
          var v21426 = JAM.call(a$$426, null, [document], JAM.policy.p3);
          v4862 = f$$67 = JAM.call(v11791.scrollTop, v11791, [JAM.call(v21426.scrollTop, v21426, [], JAM.policy.p3) - e$$192.scrollSpeed], JAM.policy.p3);
        } else {
          var v25600 = JAM.call(a$$426, null, [window], JAM.policy.p3);
          var v21427 = JAM.call(v25600.height, v25600, [], JAM.policy.p3);
          var v25601 = b$$307.pageY;
          var v27423 = JAM.call(a$$426, null, [document], JAM.policy.p3);
          var v11793 = v21427 - (v25601 - JAM.call(v27423.scrollTop, v27423, [], JAM.policy.p3)) < e$$192.scrollSensitivity;
          if (v11793) {
            var v17450 = JAM.call(a$$426, null, [document], JAM.policy.p3);
            var v25603 = JAM.call(a$$426, null, [document], JAM.policy.p3);
            v11793 = f$$67 = JAM.call(v17450.scrollTop, v17450, [JAM.call(v25603.scrollTop, v25603, [], JAM.policy.p3) + e$$192.scrollSpeed], JAM.policy.p3);
          }
          v4862 = v11793;
        }
        v4862;
      }
      var v11795 = !e$$192.axis;
      if (!v11795) {
        v11795 = e$$192.axis != "y";
      }
      if (v11795) {
        var v4864;
        var v21431 = b$$307.pageX;
        var v25604 = JAM.call(a$$426, null, [document], JAM.policy.p3);
        if (v21431 - JAM.call(v25604.scrollLeft, v25604, [], JAM.policy.p3) < e$$192.scrollSensitivity) {
          var v11796 = JAM.call(a$$426, null, [document], JAM.policy.p3);
          var v21433 = JAM.call(a$$426, null, [document], JAM.policy.p3);
          v4864 = f$$67 = JAM.call(v11796.scrollLeft, v11796, [JAM.call(v21433.scrollLeft, v21433, [], JAM.policy.p3) - e$$192.scrollSpeed], JAM.policy.p3);
        } else {
          var v25605 = JAM.call(a$$426, null, [window], JAM.policy.p3);
          var v21434 = JAM.call(v25605.width, v25605, [], JAM.policy.p3);
          var v25606 = b$$307.pageX;
          var v27424 = JAM.call(a$$426, null, [document], JAM.policy.p3);
          var v11798 = v21434 - (v25606 - JAM.call(v27424.scrollLeft, v27424, [], JAM.policy.p3)) < e$$192.scrollSensitivity;
          if (v11798) {
            var v17461 = JAM.call(a$$426, null, [document], JAM.policy.p3);
            var v25608 = JAM.call(a$$426, null, [document], JAM.policy.p3);
            v11798 = f$$67 = JAM.call(v17461.scrollLeft, v17461, [JAM.call(v25608.scrollLeft, v25608, [], JAM.policy.p3) + e$$192.scrollSpeed], JAM.policy.p3);
          }
          v4864 = v11798;
        }
        v4864;
      }
    }
    var v17463 = f$$67 !== !1;
    if (v17463) {
      v17463 = a$$426.ui.ddmanager;
    }
    var v11800 = v17463;
    if (v11800) {
      v11800 = !e$$192.dropBehaviour;
    }
    var v4867 = v11800;
    if (v4867) {
      var v11801 = a$$426.ui.ddmanager;
      JAM.call(v11801.prepareOffsets, v11801, [d$$198, b$$307], JAM.policy.p3);
    }
    return;
  }
  function v1202(b$$306, c$$250) {
    var v4868 = JAM.call(a$$426, null, [this], JAM.policy.p3);
    var d$$197 = JAM.call(v4868.data, v4868, ["draggable"], JAM.policy.p3);
    var v11802 = d$$197.scrollParent[0] != document;
    if (v11802) {
      v11802 = d$$197.scrollParent[0].tagName != "HTML";
    }
    var v4869 = v11802;
    if (v4869) {
      var v11803 = d$$197;
      var v17468 = d$$197.scrollParent;
      var v31319 = JAM.call(v17468.offset, v17468, [], JAM.policy.p3);
      v11803.overflowOffset = v31319;
    }
    return;
  }
  function v1201(b$$305, c$$249) {
    var v11804 = JAM.call(a$$426, null, [this], JAM.policy.p3);
    var d$$196 = JAM.call(v11804.data, v11804, ["draggable"], JAM.policy.p3).options;
    var v4871 = d$$196._opacity;
    if (v4871) {
      var v11805 = JAM.call(a$$426, null, [c$$249.helper], JAM.policy.p3);
      JAM.call(v11805.css, v11805, ["opacity", d$$196._opacity], JAM.policy.p3);
    }
    return;
  }
  function v1200(b$$304, c$$248) {
    var d$$195 = JAM.call(a$$426, null, [c$$248.helper], JAM.policy.p3);
    var v11807 = JAM.call(a$$426, null, [this], JAM.policy.p3);
    var e$$191 = JAM.call(v11807.data, v11807, ["draggable"], JAM.policy.p3).options;
    var v11808 = JAM.call(d$$195.css, d$$195, ["opacity"], JAM.policy.p3);
    if (v11808) {
      var v17470 = e$$191;
      var v31320 = JAM.call(d$$195.css, d$$195, ["opacity"], JAM.policy.p3);
      v17470._opacity = v31320;
    }
    JAM.call(d$$195.css, d$$195, ["opacity", e$$191.opacity], JAM.policy.p3);
    return;
  }
  function v1199(b$$303, c$$247) {
    var v11810 = JAM.call(a$$426, null, [this], JAM.policy.p3);
    var d$$194 = JAM.call(v11810.data, v11810, ["draggable"], JAM.policy.p3).options;
    var v4875 = d$$194._cursor;
    if (v4875) {
      var v11811 = JAM.call(a$$426, null, ["body"], JAM.policy.p3);
      JAM.call(v11811.css, v11811, ["cursor", d$$194._cursor], JAM.policy.p3);
    }
    return;
  }
  function v1198(b$$302, c$$246) {
    var d$$193 = JAM.call(a$$426, null, ["body"], JAM.policy.p3);
    var v11813 = JAM.call(a$$426, null, [this], JAM.policy.p3);
    var e$$190 = JAM.call(v11813.data, v11813, ["draggable"], JAM.policy.p3).options;
    var v11814 = JAM.call(d$$193.css, d$$193, ["cursor"], JAM.policy.p3);
    if (v11814) {
      var v17471 = e$$190;
      var v31321 = JAM.call(d$$193.css, d$$193, ["cursor"], JAM.policy.p3);
      v17471._cursor = v31321;
    }
    JAM.call(d$$193.css, d$$193, ["cursor", e$$190.cursor], JAM.policy.p3);
    return;
  }
  function v1197(b$$300, c$$244) {
    function v1196(f$$66) {
      function v1195() {
        return c$$244.helper[0];
      }
      this.instance.positionAbs = d$$191.positionAbs;
      this.instance.helperProportions = d$$191.helperProportions;
      this.instance.offset.click = d$$191.offset.click;
      var v11816;
      var v21446 = this.instance;
      if (JAM.call(v21446._intersectsWith, v21446, [this.instance.containerCache], JAM.policy.p3)) {
        var v21448 = this.instance.isOver;
        if (!v21448) {
          this.instance.isOver = 1;
          var v31044 = this.instance;
          var v31081 = JAM.call(a$$426, null, [e$$188], JAM.policy.p3);
          var v31078 = JAM.call(v31081.clone, v31081, [], JAM.policy.p3);
          var v31073 = JAM.call(v31078.removeAttr, v31078, ["id"], JAM.policy.p3);
          var v31060 = JAM.call(v31073.appendTo, v31073, [this.instance.element], JAM.policy.p3);
          var v31322 = JAM.call(v31060.data, v31060, ["sortable-item", !0], JAM.policy.p3);
          v31044.currentItem = v31322;
          this.instance.options._helper = this.instance.options.helper;
          this.instance.options.helper = v1195;
          b$$300.target = this.instance.currentItem[0];
          var v30905 = this.instance;
          JAM.call(v30905._mouseCapture, v30905, [b$$300, !0], JAM.policy.p3);
          var v30826 = this.instance;
          JAM.call(v30826._mouseStart, v30826, [b$$300, !0, !0], JAM.policy.p3);
          this.instance.offset.click.top = d$$191.offset.click.top;
          this.instance.offset.click.left = d$$191.offset.click.left;
          var v30358 = this.instance.offset.parent;
          v30358.left = v30358.left - (d$$191.offset.parent.left - this.instance.offset.parent.left);
          var v30108 = this.instance.offset.parent;
          v30108.top = v30108.top - (d$$191.offset.parent.top - this.instance.offset.parent.top);
          JAM.call(d$$191._trigger, d$$191, ["toSortable", b$$300], JAM.policy.p3);
          d$$191.dropped = this.instance.element;
          d$$191.currentItem = d$$191.element;
          this.instance.fromOutside = d$$191;
        }
        var v21449 = this.instance.currentItem;
        if (v21449) {
          var v25614 = this.instance;
          v21449 = JAM.call(v25614._mouseDrag, v25614, [b$$300], JAM.policy.p3);
        }
        v11816 = v21449;
      } else {
        var v17473 = this.instance.isOver;
        if (v17473) {
          this.instance.isOver = 0;
          this.instance.cancelHelperRemoval = !0;
          this.instance.options.revert = !1;
          var v30360 = this.instance;
          var v30565 = this.instance;
          JAM.call(v30360._trigger, v30360, ["out", b$$300, JAM.call(v30565._uiHash, v30565, [this.instance], JAM.policy.p3)], JAM.policy.p3);
          var v30109 = this.instance;
          JAM.call(v30109._mouseStop, v30109, [b$$300, !0], JAM.policy.p3);
          this.instance.options.helper = this.instance.options._helper;
          var v29326 = this.instance.currentItem;
          JAM.call(v29326.remove, v29326, [], JAM.policy.p3);
          var v28583 = this.instance.placeholder;
          if (v28583) {
            var v29328 = this.instance.placeholder;
            JAM.call(v29328.remove, v29328, [], JAM.policy.p3);
          }
          JAM.call(d$$191._trigger, d$$191, ["fromSortable", b$$300], JAM.policy.p3);
          v17473 = d$$191.dropped = !1;
        }
        v11816 = v17473;
      }
      v11816;
      return;
    }
    var v4878 = JAM.call(a$$426, null, [this], JAM.policy.p3);
    var d$$191 = JAM.call(v4878.data, v4878, ["draggable"], JAM.policy.p3);
    var e$$188 = this;
    JAM.call(a$$426.each, a$$426, [d$$191.sortables, v1196], JAM.policy.p3);
    return;
  }
  function v1194(b$$299, c$$243) {
    function v1193() {
      var v4880;
      if (this.instance.isOver) {
        this.instance.isOver = 0;
        d$$190.cancelHelperRemoval = !0;
        this.instance.cancelHelperRemoval = !1;
        var v27426 = this.shouldRevert;
        if (v27426) {
          this.instance.options.revert = !0;
        }
        var v25615 = this.instance;
        JAM.call(v25615._mouseStop, v25615, [b$$299], JAM.policy.p3);
        this.instance.options.helper = this.instance.options._helper;
        var v17476 = d$$190.options.helper == "original";
        if (v17476) {
          var v21453 = this.instance.currentItem;
          v17476 = JAM.call(v21453.css, v21453, [{top:"auto", left:"auto"}], JAM.policy.p3);
        }
        v4880 = v17476;
      } else {
        this.instance.cancelHelperRemoval = !1;
        var v17478 = this.instance;
        v4880 = JAM.call(v17478._trigger, v17478, ["deactivate", b$$299, e$$187], JAM.policy.p3);
      }
      v4880;
      return;
    }
    var v4881 = JAM.call(a$$426, null, [this], JAM.policy.p3);
    var d$$190 = JAM.call(v4881.data, v4881, ["draggable"], JAM.policy.p3);
    var e$$187 = JAM.call(a$$426.extend, a$$426, [{}, c$$243, {item:d$$190.element}], JAM.policy.p3);
    JAM.call(a$$426.each, a$$426, [d$$190.sortables, v1193], JAM.policy.p3);
    return;
  }
  function v1192(b$$298, c$$241) {
    function v1191() {
      var c$$242 = JAM.call(a$$426.data, a$$426, [this, "sortable"], JAM.policy.p3);
      var v11819 = c$$242;
      if (v11819) {
        v11819 = !c$$242.options.disabled;
      }
      var v4884 = v11819;
      if (v4884) {
        var v21456 = d$$189.sortables;
        JAM.call(v21456.push, v21456, [{instance:c$$242, shouldRevert:c$$242.options.revert}], JAM.policy.p3);
        JAM.call(c$$242.refreshPositions, c$$242, [], JAM.policy.p3);
        JAM.call(c$$242._trigger, c$$242, ["activate", b$$298, f$$63], JAM.policy.p3);
      }
      return;
    }
    var v4885 = JAM.call(a$$426, null, [this], JAM.policy.p3);
    var d$$189 = JAM.call(v4885.data, v4885, ["draggable"], JAM.policy.p3);
    var e$$186 = d$$189.options;
    var f$$63 = JAM.call(a$$426.extend, a$$426, [{}, c$$241, {item:d$$189.element}], JAM.policy.p3);
    d$$189.sortables = [];
    var v11821 = JAM.call(a$$426, null, [e$$186.connectToSortable], JAM.policy.p3);
    JAM.call(v11821.each, v11821, [v1191], JAM.policy.p3);
    return;
  }
  function v1190(a$$428) {
    return{helper:this.helper, position:this.position, originalPosition:this.originalPosition, offset:this.positionAbs};
  }
  function v1189(b$$297, c$$240, d$$188) {
    var v21458 = d$$188;
    if (!v21458) {
      v21458 = JAM.call(this._uiHash, this, [], JAM.policy.p3);
    }
    d$$188 = v21458;
    var v21459 = a$$426.ui.plugin;
    JAM.call(v21459.call, v21459, [this, b$$297, [c$$240, d$$188]], JAM.policy.p3);
    var v17481 = b$$297 == "drag";
    if (v17481) {
      var v31323 = JAM.call(this._convertPositionTo, this, ["absolute"], JAM.policy.p3);
      this.positionAbs = v31323;
    }
    var v11822 = a$$426.Widget.prototype._trigger;
    return JAM.call(v11822.call, v11822, [this, b$$297, c$$240, d$$188], JAM.policy.p3);
  }
  function v1188() {
    var v21462 = this.helper;
    JAM.call(v21462.removeClass, v21462, ["ui-draggable-dragging"], JAM.policy.p3);
    var v25623 = this.helper[0] != this.element[0];
    if (v25623) {
      v25623 = !this.cancelHelperRemoval;
    }
    var v21463 = v25623;
    if (v21463) {
      var v25624 = this.helper;
      JAM.call(v25624.remove, v25624, [], JAM.policy.p3);
    }
    this.helper = null;
    this.cancelHelperRemoval = !1;
    return;
  }
  function v1187(b$$296) {
    var c$$239 = this.options;
    var v4891;
    var v17483 = this.cssPosition == "absolute";
    if (v17483) {
      var v21465 = this.scrollParent[0] == document;
      if (!v21465) {
        var v27433 = a$$426.ui;
        v21465 = !JAM.call(v27433.contains, v27433, [this.scrollParent[0], this.offsetParent[0]], JAM.policy.p3);
      }
      v17483 = v21465;
    }
    if (v17483) {
      v4891 = this.offsetParent;
    } else {
      v4891 = this.scrollParent;
    }
    var d$$187 = v4891;
    var e$$185 = JAM.call(/(html|body)/i.test, /(html|body)/i, [d$$187[0].tagName], JAM.policy.p3);
    var f$$62 = b$$296.pageX;
    var g$$108 = b$$296.pageY;
    if (this.originalPosition) {
      var h$$87;
      if (this.containment) {
        if (this.relative_container) {
          var v4893 = this.relative_container;
          var i$$148 = JAM.call(v4893.offset, v4893, [], JAM.policy.p3);
          h$$87 = [this.containment[0] + i$$148.left, this.containment[1] + i$$148.top, this.containment[2] + i$$148.left, this.containment[3] + i$$148.top];
        } else {
          h$$87 = this.containment;
        }
        var v21466 = b$$296.pageX - this.offset.click.left < h$$87[0];
        if (v21466) {
          f$$62 = h$$87[0] + this.offset.click.left;
        }
        var v21467 = b$$296.pageY - this.offset.click.top < h$$87[1];
        if (v21467) {
          g$$108 = h$$87[1] + this.offset.click.top;
        }
        var v17488 = b$$296.pageX - this.offset.click.left > h$$87[2];
        if (v17488) {
          f$$62 = h$$87[2] + this.offset.click.left;
        }
        var v11833 = b$$296.pageY - this.offset.click.top > h$$87[3];
        if (v11833) {
          g$$108 = h$$87[3] + this.offset.click.top;
        }
      }
      if (c$$239.grid) {
        var v4900;
        if (c$$239.grid[1]) {
          v4900 = this.originalPageY + JAM.call(Math.round, Math, [(g$$108 - this.originalPageY) / c$$239.grid[1]], JAM.policy.p3) * c$$239.grid[1];
        } else {
          v4900 = this.originalPageY;
        }
        var j$$64 = v4900;
        var v4901;
        if (h$$87) {
          var v11837;
          var v21477 = j$$64 - this.offset.click.top < h$$87[1];
          if (!v21477) {
            v21477 = j$$64 - this.offset.click.top > h$$87[3];
          }
          if (v21477) {
            var v17496;
            if (j$$64 - this.offset.click.top < h$$87[1]) {
              v17496 = j$$64 + c$$239.grid[1];
            } else {
              v17496 = j$$64 - c$$239.grid[1];
            }
            v11837 = v17496;
          } else {
            v11837 = j$$64;
          }
          v4901 = v11837;
        } else {
          v4901 = j$$64;
        }
        g$$108 = v4901;
        var v4902;
        if (c$$239.grid[0]) {
          v4902 = this.originalPageX + JAM.call(Math.round, Math, [(f$$62 - this.originalPageX) / c$$239.grid[0]], JAM.policy.p3) * c$$239.grid[0];
        } else {
          v4902 = this.originalPageX;
        }
        var k$$42 = v4902;
        var v4903;
        if (h$$87) {
          var v11841;
          var v21483 = k$$42 - this.offset.click.left < h$$87[0];
          if (!v21483) {
            v21483 = k$$42 - this.offset.click.left > h$$87[2];
          }
          if (v21483) {
            var v17501;
            if (k$$42 - this.offset.click.left < h$$87[0]) {
              v17501 = k$$42 + c$$239.grid[0];
            } else {
              v17501 = k$$42 - c$$239.grid[0];
            }
            v11841 = v17501;
          } else {
            v11841 = k$$42;
          }
          v4903 = v11841;
        } else {
          v4903 = k$$42;
        }
        f$$62 = v4903;
      }
    }
    var v11842 = g$$108 - this.offset.click.top - this.offset.relative.top - this.offset.parent.top;
    var v17505;
    var v27457 = a$$426.browser.safari;
    if (v27457) {
      v27457 = a$$426.browser.version < 526;
    }
    var v25666 = v27457;
    if (v25666) {
      v25666 = this.cssPosition == "fixed";
    }
    if (v25666) {
      v17505 = 0;
    } else {
      var v21490;
      if (this.cssPosition == "fixed") {
        var v27460 = this.scrollParent;
        v21490 = -JAM.call(v27460.scrollTop, v27460, [], JAM.policy.p3);
      } else {
        var v25668;
        if (e$$185) {
          v25668 = 0;
        } else {
          v25668 = JAM.call(d$$187.scrollTop, d$$187, [], JAM.policy.p3);
        }
        v21490 = v25668;
      }
      v17505 = v21490;
    }
    var v4906 = v11842 + v17505;
    var v11844 = f$$62 - this.offset.click.left - this.offset.relative.left - this.offset.parent.left;
    var v17508;
    var v27463 = a$$426.browser.safari;
    if (v27463) {
      v27463 = a$$426.browser.version < 526;
    }
    var v25673 = v27463;
    if (v25673) {
      v25673 = this.cssPosition == "fixed";
    }
    if (v25673) {
      v17508 = 0;
    } else {
      var v21495;
      if (this.cssPosition == "fixed") {
        var v27466 = this.scrollParent;
        v21495 = -JAM.call(v27466.scrollLeft, v27466, [], JAM.policy.p3);
      } else {
        var v25675;
        if (e$$185) {
          v25675 = 0;
        } else {
          v25675 = JAM.call(d$$187.scrollLeft, d$$187, [], JAM.policy.p3);
        }
        v21495 = v25675;
      }
      v17508 = v21495;
    }
    return{top:v4906, left:v11844 + v17508};
  }
  function v1186(b$$295, c$$238) {
    if (!c$$238) {
      c$$238 = this.position;
    }
    var v4908;
    if (b$$295 == "absolute") {
      v4908 = 1;
    } else {
      v4908 = -1;
    }
    var d$$186 = v4908;
    var e$$184 = this.options;
    var v4909;
    var v17509 = this.cssPosition == "absolute";
    if (v17509) {
      var v21498 = this.scrollParent[0] == document;
      if (!v21498) {
        var v27468 = a$$426.ui;
        v21498 = !JAM.call(v27468.contains, v27468, [this.scrollParent[0], this.offsetParent[0]], JAM.policy.p3);
      }
      v17509 = v21498;
    }
    if (v17509) {
      v4909 = this.offsetParent;
    } else {
      v4909 = this.scrollParent;
    }
    var f$$61 = v4909;
    var g$$107 = JAM.call(/(html|body)/i.test, /(html|body)/i, [f$$61[0].tagName], JAM.policy.p3);
    var v11850 = c$$238.top + this.offset.relative.top * d$$186 + this.offset.parent.top * d$$186;
    var v17512;
    var v27473 = a$$426.browser.safari;
    if (v27473) {
      v27473 = a$$426.browser.version < 526;
    }
    var v25682 = v27473;
    if (v25682) {
      v25682 = this.cssPosition == "fixed";
    }
    if (v25682) {
      v17512 = 0;
    } else {
      var v25683;
      if (this.cssPosition == "fixed") {
        var v28613 = this.scrollParent;
        v25683 = -JAM.call(v28613.scrollTop, v28613, [], JAM.policy.p3);
      } else {
        var v27476;
        if (g$$107) {
          v27476 = 0;
        } else {
          v27476 = JAM.call(f$$61.scrollTop, f$$61, [], JAM.policy.p3);
        }
        v25683 = v27476;
      }
      v17512 = v25683 * d$$186;
    }
    var v4911 = v11850 - v17512;
    var v11852 = c$$238.left + this.offset.relative.left * d$$186 + this.offset.parent.left * d$$186;
    var v17515;
    var v27480 = a$$426.browser.safari;
    if (v27480) {
      v27480 = a$$426.browser.version < 526;
    }
    var v25686 = v27480;
    if (v25686) {
      v25686 = this.cssPosition == "fixed";
    }
    if (v25686) {
      v17515 = 0;
    } else {
      var v25687;
      if (this.cssPosition == "fixed") {
        var v28618 = this.scrollParent;
        v25687 = -JAM.call(v28618.scrollLeft, v28618, [], JAM.policy.p3);
      } else {
        var v27483;
        if (g$$107) {
          v27483 = 0;
        } else {
          v27483 = JAM.call(f$$61.scrollLeft, f$$61, [], JAM.policy.p3);
        }
        v25687 = v27483;
      }
      v17515 = v25687 * d$$186;
    }
    return{top:v4911, left:v11852 - v17515};
  }
  function v1185() {
    var b$$294 = this.options;
    var v4913 = b$$294.containment == "parent";
    if (v4913) {
      b$$294.containment = this.helper[0].parentNode;
    }
    var v11856 = b$$294.containment == "document";
    if (!v11856) {
      v11856 = b$$294.containment == "window";
    }
    if (v11856) {
      var v11857;
      if (b$$294.containment == "document") {
        v11857 = 0;
      } else {
        var v25688 = JAM.call(a$$426, null, [window], JAM.policy.p3);
        v11857 = JAM.call(v25688.scrollLeft, v25688, [], JAM.policy.p3) - this.offset.relative.left - this.offset.parent.left;
      }
      var v4914 = v11857;
      var v11858;
      if (b$$294.containment == "document") {
        v11858 = 0;
      } else {
        var v25691 = JAM.call(a$$426, null, [window], JAM.policy.p3);
        v11858 = JAM.call(v25691.scrollTop, v25691, [], JAM.policy.p3) - this.offset.relative.top - this.offset.parent.top;
      }
      var v4915 = v11858;
      var v25694;
      if (b$$294.containment == "document") {
        v25694 = 0;
      } else {
        var v27487 = JAM.call(a$$426, null, [window], JAM.policy.p3);
        v25694 = JAM.call(v27487.scrollLeft, v27487, [], JAM.policy.p3);
      }
      var v21517 = v25694;
      var v28620;
      if (b$$294.containment == "document") {
        v28620 = document;
      } else {
        v28620 = window;
      }
      var v25695 = JAM.call(a$$426, null, [v28620], JAM.policy.p3);
      var v4916 = v21517 + JAM.call(v25695.width, v25695, [], JAM.policy.p3) - this.helperProportions.width - this.margins.left;
      var v25696;
      if (b$$294.containment == "document") {
        v25696 = 0;
      } else {
        var v27490 = JAM.call(a$$426, null, [window], JAM.policy.p3);
        v25696 = JAM.call(v27490.scrollTop, v27490, [], JAM.policy.p3);
      }
      var v21520 = v25696;
      var v29344;
      if (b$$294.containment == "document") {
        v29344 = document;
      } else {
        v29344 = window;
      }
      var v27492 = JAM.call(a$$426, null, [v29344], JAM.policy.p3);
      var v25697 = JAM.call(v27492.height, v27492, [], JAM.policy.p3);
      if (!v25697) {
        v25697 = document.body.parentNode.scrollHeight;
      }
      this.containment = [v4914, v4915, v4916, v21520 + v25697 - this.helperProportions.height - this.margins.top];
    }
    var v11863 = !JAM.call(/^(document|window|parent)$/.test, /^(document|window|parent)$/, [b$$294.containment], JAM.policy.p3);
    if (v11863) {
      v11863 = b$$294.containment.constructor != Array;
    }
    if (v11863) {
      var c$$237 = JAM.call(a$$426, null, [b$$294.containment], JAM.policy.p3);
      var d$$185 = c$$237[0];
      if (!d$$185) {
        return;
      }
      var e$$183 = JAM.call(c$$237.offset, c$$237, [], JAM.policy.p3);
      var v11864 = JAM.call(a$$426, null, [d$$185], JAM.policy.p3);
      var f$$60 = JAM.call(v11864.css, v11864, ["overflow"], JAM.policy.p3) != "hidden";
      var v27495 = JAM.call(a$$426, null, [d$$185], JAM.policy.p3);
      var v21525 = JAM.call(parseInt, null, [JAM.call(v27495.css, v27495, ["borderLeftWidth"], JAM.policy.p3), 10], JAM.policy.p3);
      if (!v21525) {
        v21525 = 0;
      }
      var v17534 = v21525;
      var v27496 = JAM.call(a$$426, null, [d$$185], JAM.policy.p3);
      var v21526 = JAM.call(parseInt, null, [JAM.call(v27496.css, v27496, ["paddingLeft"], JAM.policy.p3), 10], JAM.policy.p3);
      if (!v21526) {
        v21526 = 0;
      }
      var v11865 = v17534 + v21526;
      var v27497 = JAM.call(a$$426, null, [d$$185], JAM.policy.p3);
      var v21527 = JAM.call(parseInt, null, [JAM.call(v27497.css, v27497, ["borderTopWidth"], JAM.policy.p3), 10], JAM.policy.p3);
      if (!v21527) {
        v21527 = 0;
      }
      var v17536 = v21527;
      var v27498 = JAM.call(a$$426, null, [d$$185], JAM.policy.p3);
      var v21528 = JAM.call(parseInt, null, [JAM.call(v27498.css, v27498, ["paddingTop"], JAM.policy.p3), 10], JAM.policy.p3);
      if (!v21528) {
        v21528 = 0;
      }
      var v11866 = v17536 + v21528;
      var v29345;
      if (f$$60) {
        v29345 = JAM.call(Math.max, Math, [d$$185.scrollWidth, d$$185.offsetWidth], JAM.policy.p3);
      } else {
        v29345 = d$$185.offsetWidth;
      }
      var v28624 = v29345;
      var v30114 = JAM.call(a$$426, null, [d$$185], JAM.policy.p3);
      var v29346 = JAM.call(parseInt, null, [JAM.call(v30114.css, v30114, ["borderLeftWidth"], JAM.policy.p3), 10], JAM.policy.p3);
      if (!v29346) {
        v29346 = 0;
      }
      var v27499 = v28624 - v29346;
      var v29819 = JAM.call(a$$426, null, [d$$185], JAM.policy.p3);
      var v28626 = JAM.call(parseInt, null, [JAM.call(v29819.css, v29819, ["paddingRight"], JAM.policy.p3), 10], JAM.policy.p3);
      if (!v28626) {
        v28626 = 0;
      }
      var v11867 = v27499 - v28626 - this.helperProportions.width - this.margins.left - this.margins.right;
      var v29349;
      if (f$$60) {
        v29349 = JAM.call(Math.max, Math, [d$$185.scrollHeight, d$$185.offsetHeight], JAM.policy.p3);
      } else {
        v29349 = d$$185.offsetHeight;
      }
      var v28627 = v29349;
      var v30115 = JAM.call(a$$426, null, [d$$185], JAM.policy.p3);
      var v29350 = JAM.call(parseInt, null, [JAM.call(v30115.css, v30115, ["borderTopWidth"], JAM.policy.p3), 10], JAM.policy.p3);
      if (!v29350) {
        v29350 = 0;
      }
      var v27502 = v28627 - v29350;
      var v29824 = JAM.call(a$$426, null, [d$$185], JAM.policy.p3);
      var v28629 = JAM.call(parseInt, null, [JAM.call(v29824.css, v29824, ["paddingBottom"], JAM.policy.p3), 10], JAM.policy.p3);
      if (!v28629) {
        v28629 = 0;
      }
      this.containment = [v11865, v11866, v11867, v27502 - v28629 - this.helperProportions.height - this.margins.top - this.margins.bottom];
      this.relative_container = c$$237;
    } else {
      var v4922 = b$$294.containment.constructor == Array;
      if (v4922) {
        this.containment = b$$294.containment;
      }
    }
    return;
  }
  function v1184() {
    var v11870 = this.helper;
    var v4924 = JAM.call(v11870.outerWidth, v11870, [], JAM.policy.p3);
    var v11871 = this.helper;
    this.helperProportions = {width:v4924, height:JAM.call(v11871.outerHeight, v11871, [], JAM.policy.p3)};
    return;
  }
  function v1183() {
    var v21535 = this.element;
    var v11872 = JAM.call(parseInt, null, [JAM.call(v21535.css, v21535, ["marginLeft"], JAM.policy.p3), 10], JAM.policy.p3);
    if (!v11872) {
      v11872 = 0;
    }
    var v4926 = v11872;
    var v21536 = this.element;
    var v11873 = JAM.call(parseInt, null, [JAM.call(v21536.css, v21536, ["marginTop"], JAM.policy.p3), 10], JAM.policy.p3);
    if (!v11873) {
      v11873 = 0;
    }
    var v4927 = v11873;
    var v21537 = this.element;
    var v11874 = JAM.call(parseInt, null, [JAM.call(v21537.css, v21537, ["marginRight"], JAM.policy.p3), 10], JAM.policy.p3);
    if (!v11874) {
      v11874 = 0;
    }
    var v4928 = v11874;
    var v21538 = this.element;
    var v11875 = JAM.call(parseInt, null, [JAM.call(v21538.css, v21538, ["marginBottom"], JAM.policy.p3), 10], JAM.policy.p3);
    if (!v11875) {
      v11875 = 0;
    }
    this.margins = {left:v4926, top:v4927, right:v4928, bottom:v11875};
    return;
  }
  function v1182() {
    if (this.cssPosition == "relative") {
      var v4930 = this.element;
      var a$$427 = JAM.call(v4930.position, v4930, [], JAM.policy.p3);
      var v17551 = a$$427.top;
      var v27505 = this.helper;
      var v21539 = JAM.call(parseInt, null, [JAM.call(v27505.css, v27505, ["top"], JAM.policy.p3), 10], JAM.policy.p3);
      if (!v21539) {
        v21539 = 0;
      }
      var v11877 = v17551 - v21539;
      var v17553 = this.scrollParent;
      var v4931 = v11877 + JAM.call(v17553.scrollTop, v17553, [], JAM.policy.p3);
      var v17554 = a$$427.left;
      var v27506 = this.helper;
      var v21540 = JAM.call(parseInt, null, [JAM.call(v27506.css, v27506, ["left"], JAM.policy.p3), 10], JAM.policy.p3);
      if (!v21540) {
        v21540 = 0;
      }
      var v11879 = v17554 - v21540;
      var v17556 = this.scrollParent;
      return{top:v4931, left:v11879 + JAM.call(v17556.scrollLeft, v17556, [], JAM.policy.p3)};
    }
    return{top:0, left:0};
  }
  function v1181() {
    var v4934 = this.helper;
    var v31324 = JAM.call(v4934.offsetParent, v4934, [], JAM.policy.p3);
    this.offsetParent = v31324;
    var v4935 = this.offsetParent;
    var b$$293 = JAM.call(v4935.offset, v4935, [], JAM.policy.p3);
    var v17557 = this.cssPosition == "absolute";
    if (v17557) {
      v17557 = this.scrollParent[0] != document;
    }
    var v11881 = v17557;
    if (v11881) {
      var v17558 = a$$426.ui;
      v11881 = JAM.call(v17558.contains, v17558, [this.scrollParent[0], this.offsetParent[0]], JAM.policy.p3);
    }
    var v4936 = v11881;
    if (v4936) {
      var v17561 = b$$293;
      var v25717 = v17561.left;
      var v27507 = this.scrollParent;
      v17561.left = v25717 + JAM.call(v27507.scrollLeft, v27507, [], JAM.policy.p3);
      var v17562 = b$$293;
      var v25719 = v17562.top;
      var v27508 = this.scrollParent;
      v17562.top = v25719 + JAM.call(v27508.scrollTop, v27508, [], JAM.policy.p3);
    }
    var v11882 = this.offsetParent[0] == document.body;
    if (!v11882) {
      var v21546 = this.offsetParent[0].tagName;
      if (v21546) {
        var v27510 = this.offsetParent[0].tagName;
        v21546 = JAM.call(v27510.toLowerCase, v27510, [], JAM.policy.p3) == "html";
      }
      var v17565 = v21546;
      if (v17565) {
        v17565 = a$$426.browser.msie;
      }
      v11882 = v17565;
    }
    if (v11882) {
      b$$293 = {top:0, left:0};
    }
    var v11883 = b$$293.top;
    var v25723 = this.offsetParent;
    var v17567 = JAM.call(parseInt, null, [JAM.call(v25723.css, v25723, ["borderTopWidth"], JAM.policy.p3), 10], JAM.policy.p3);
    if (!v17567) {
      v17567 = 0;
    }
    var v4938 = v11883 + v17567;
    var v11885 = b$$293.left;
    var v25724 = this.offsetParent;
    var v17568 = JAM.call(parseInt, null, [JAM.call(v25724.css, v25724, ["borderLeftWidth"], JAM.policy.p3), 10], JAM.policy.p3);
    if (!v17568) {
      v17568 = 0;
    }
    return{top:v4938, left:v11885 + v17568};
  }
  function v1180(b$$292) {
    var v27511 = typeof b$$292 == "string";
    if (v27511) {
      b$$292 = JAM.call(b$$292.split, b$$292, [" "], JAM.policy.p3);
    }
    var v27512 = JAM.call(a$$426.isArray, a$$426, [b$$292], JAM.policy.p3);
    if (v27512) {
      var v28632 = +b$$292[0];
      var v29355 = +b$$292[1];
      if (!v29355) {
        v29355 = 0;
      }
      b$$292 = {left:v28632, top:v29355};
    }
    var v25725 = "left" in b$$292;
    if (v25725) {
      this.offset.click.left = b$$292.left + this.margins.left;
    }
    var v21552 = "right" in b$$292;
    if (v21552) {
      this.offset.click.left = this.helperProportions.width - b$$292.right + this.margins.left;
    }
    var v17569 = "top" in b$$292;
    if (v17569) {
      this.offset.click.top = b$$292.top + this.margins.top;
    }
    var v11887 = "bottom" in b$$292;
    if (v11887) {
      this.offset.click.top = this.helperProportions.height - b$$292.bottom + this.margins.top;
    }
    return;
  }
  function v1179(b$$291) {
    var c$$236 = this.options;
    var v4940;
    if (JAM.call(a$$426.isFunction, a$$426, [c$$236.helper], JAM.policy.p3)) {
      var v17572 = c$$236.helper;
      v4940 = JAM.call(a$$426, null, [JAM.call(v17572.apply, v17572, [this.element[0], [b$$291]], JAM.policy.p3)], JAM.policy.p3);
    } else {
      var v11889;
      if (c$$236.helper == "clone") {
        var v21559 = this.element;
        var v17575 = JAM.call(v21559.clone, v21559, [], JAM.policy.p3);
        v11889 = JAM.call(v17575.removeAttr, v17575, ["id"], JAM.policy.p3);
      } else {
        v11889 = this.element;
      }
      v4940 = v11889;
    }
    var d$$184 = v4940;
    var v17577 = JAM.call(d$$184.parents, d$$184, ["body"], JAM.policy.p3).length;
    if (!v17577) {
      var v25733;
      if (c$$236.appendTo == "parent") {
        v25733 = this.element[0].parentNode;
      } else {
        v25733 = c$$236.appendTo;
      }
      JAM.call(d$$184.appendTo, d$$184, [v25733], JAM.policy.p3);
    }
    var v21563 = d$$184[0] != this.element[0];
    if (v21563) {
      v21563 = !JAM.call(/(fixed|absolute)/.test, /(fixed|absolute)/, [JAM.call(d$$184.css, d$$184, ["position"], JAM.policy.p3)], JAM.policy.p3);
    }
    var v17578 = v21563;
    if (v17578) {
      JAM.call(d$$184.css, d$$184, ["position", "absolute"], JAM.policy.p3);
    }
    return d$$184;
  }
  function v1178(b$$290) {
    function v1177() {
      var v4941 = this == b$$290.target;
      if (v4941) {
        c$$235 = !0;
      }
      return;
    }
    var v4942;
    var v17579 = !this.options.handle;
    if (!v17579) {
      v17579 = !JAM.call(a$$426, null, [this.options.handle, this.element], JAM.policy.p3).length;
    }
    if (v17579) {
      v4942 = !0;
    } else {
      v4942 = !1;
    }
    var c$$235 = v4942;
    var v21567 = JAM.call(a$$426, null, [this.options.handle, this.element], JAM.policy.p3);
    var v17580 = JAM.call(v21567.find, v21567, ["*"], JAM.policy.p3);
    var v11893 = JAM.call(v17580.andSelf, v17580, [], JAM.policy.p3);
    JAM.call(v11893.each, v11893, [v1177], JAM.policy.p3);
    return c$$235;
  }
  function v1176() {
    var v11894;
    var v21568 = this.helper;
    if (JAM.call(v21568.is, v21568, [".ui-draggable-dragging"], JAM.policy.p3)) {
      v11894 = JAM.call(this._mouseUp, this, [{}], JAM.policy.p3);
    } else {
      v11894 = JAM.call(this._clear, this, [], JAM.policy.p3);
    }
    v11894;
    return this;
  }
  function v1175(b$$289) {
    function v1174() {
      var v4943 = this.parentNode;
      JAM.call(v4943.removeChild, v4943, [this], JAM.policy.p3);
      return;
    }
    var v17582 = JAM.call(a$$426, null, ["div.ui-draggable-iframeFix"], JAM.policy.p3);
    JAM.call(v17582.each, v17582, [v1174], JAM.policy.p3);
    var v17583 = a$$426.ui.ddmanager;
    if (v17583) {
      var v21570 = a$$426.ui.ddmanager;
      JAM.call(v21570.dragStop, v21570, [this, b$$289], JAM.policy.p3);
    }
    var v11895 = a$$426.ui.mouse.prototype._mouseUp;
    return JAM.call(v11895.call, v11895, [this, b$$289], JAM.policy.p3);
  }
  function v1173(b$$288) {
    function v1172() {
      var v4944 = JAM.call(f$$59._trigger, f$$59, ["stop", b$$288], JAM.policy.p3) !== !1;
      if (v4944) {
        JAM.call(f$$59._clear, f$$59, [], JAM.policy.p3);
      }
      return;
    }
    var c$$234 = !1;
    var v17585 = a$$426.ui.ddmanager;
    if (v17585) {
      v17585 = !this.options.dropBehaviour;
    }
    var v11898 = v17585;
    if (v11898) {
      var v17586 = a$$426.ui.ddmanager;
      c$$234 = JAM.call(v17586.drop, v17586, [this, b$$288], JAM.policy.p3);
    }
    var v11899 = this.dropped;
    if (v11899) {
      c$$234 = this.dropped;
      this.dropped = !1;
    }
    var d$$183 = this.element[0];
    var e$$182 = !1;
    var v11900 = d$$183;
    if (v11900) {
      v11900 = d$$183 = d$$183.parentNode;
    }
    var v4947 = v11900;
    for (;v4947;) {
      var v4946 = d$$183 == document;
      if (v4946) {
        e$$182 = !0;
      }
      var v11901 = d$$183;
      if (v11901) {
        v11901 = d$$183 = d$$183.parentNode;
      }
      v4947 = v11901;
    }
    var v11902 = !e$$182;
    if (v11902) {
      v11902 = this.options.helper === "original";
    }
    if (v11902) {
      return!1;
    }
    var v25744 = this.options.revert == "invalid";
    if (v25744) {
      v25744 = !c$$234;
    }
    var v21576 = v25744;
    if (!v21576) {
      var v25745 = this.options.revert == "valid";
      if (v25745) {
        v25745 = c$$234;
      }
      v21576 = v25745;
    }
    var v17588 = v21576;
    if (!v17588) {
      v17588 = this.options.revert === !0;
    }
    var v11903 = v17588;
    if (!v11903) {
      var v17589 = JAM.call(a$$426.isFunction, a$$426, [this.options.revert], JAM.policy.p3);
      if (v17589) {
        var v21581 = this.options.revert;
        v17589 = JAM.call(v21581.call, v21581, [this.element, c$$234], JAM.policy.p3);
      }
      v11903 = v17589;
    }
    if (v11903) {
      var f$$59 = this;
      var v4949 = JAM.call(a$$426, null, [this.helper], JAM.policy.p3);
      JAM.call(v4949.animate, v4949, [this.originalPosition, JAM.call(parseInt, null, [this.options.revertDuration, 10], JAM.policy.p3), v1172], JAM.policy.p3);
    } else {
      var v4952 = JAM.call(this._trigger, this, ["stop", b$$288], JAM.policy.p3) !== !1;
      if (v4952) {
        JAM.call(this._clear, this, [], JAM.policy.p3);
      }
    }
    return!1;
  }
  function v1171(b$$287, c$$233) {
    var v31325 = JAM.call(this._generatePosition, this, [b$$287], JAM.policy.p3);
    this.position = v31325;
    var v31326 = JAM.call(this._convertPositionTo, this, ["absolute"], JAM.policy.p3);
    this.positionAbs = v31326;
    if (!c$$233) {
      var d$$182 = JAM.call(this._uiHash, this, [], JAM.policy.p3);
      if (JAM.call(this._trigger, this, ["drag", b$$287, d$$182], JAM.policy.p3) === !1) {
        JAM.call(this._mouseUp, this, [{}], JAM.policy.p3);
        return!1;
      }
      this.position = d$$182.position;
    }
    var v11910 = !this.options.axis;
    if (!v11910) {
      v11910 = this.options.axis != "y";
    }
    if (v11910) {
      this.helper[0].style.left = this.position.left + "px";
    }
    var v11913 = !this.options.axis;
    if (!v11913) {
      v11913 = this.options.axis != "x";
    }
    if (v11913) {
      this.helper[0].style.top = this.position.top + "px";
    }
    var v11916 = a$$426.ui.ddmanager;
    if (v11916) {
      var v17603 = a$$426.ui.ddmanager;
      JAM.call(v17603.drag, v17603, [this, b$$287], JAM.policy.p3);
    }
    return!1;
  }
  function v1170(b$$286) {
    var c$$232 = this.options;
    var v31327 = JAM.call(this._createHelper, this, [b$$286], JAM.policy.p3);
    this.helper = v31327;
    var v30959 = this.helper;
    JAM.call(v30959.addClass, v30959, ["ui-draggable-dragging"], JAM.policy.p3);
    JAM.call(this._cacheHelperProportions, this, [], JAM.policy.p3);
    var v30837 = a$$426.ui.ddmanager;
    if (v30837) {
      a$$426.ui.ddmanager.current = this;
    }
    JAM.call(this._cacheMargins, this, [], JAM.policy.p3);
    var v30567 = this.helper;
    var v31328 = JAM.call(v30567.css, v30567, ["position"], JAM.policy.p3);
    this.cssPosition = v31328;
    var v30363 = this.helper;
    var v31329 = JAM.call(v30363.scrollParent, v30363, [], JAM.policy.p3);
    this.scrollParent = v31329;
    var v30116 = this.element;
    var v31330 = JAM.call(v30116.offset, v30116, [], JAM.policy.p3);
    this.offset = this.positionAbs = v31330;
    this.offset = {top:this.offset.top - this.margins.top, left:this.offset.left - this.margins.left};
    JAM.call(a$$426.extend, a$$426, [this.offset, {click:{left:b$$286.pageX - this.offset.left, top:b$$286.pageY - this.offset.top}, parent:JAM.call(this._getParentOffset, this, [], JAM.policy.p3), relative:JAM.call(this._getRelativeOffset, this, [], JAM.policy.p3)}], JAM.policy.p3);
    var v31331 = JAM.call(this._generatePosition, this, [b$$286], JAM.policy.p3);
    this.originalPosition = this.position = v31331;
    this.originalPageX = b$$286.pageX;
    this.originalPageY = b$$286.pageY;
    var v21588 = c$$232.cursorAt;
    if (v21588) {
      JAM.call(this._adjustOffsetFromHelper, this, [c$$232.cursorAt], JAM.policy.p3);
    }
    var v17604 = c$$232.containment;
    if (v17604) {
      JAM.call(this._setContainment, this, [], JAM.policy.p3);
    }
    var v11917;
    if (JAM.call(this._trigger, this, ["start", b$$286], JAM.policy.p3) === !1) {
      JAM.call(this._clear, this, [], JAM.policy.p3);
      v11917 = !1;
    } else {
      JAM.call(this._cacheHelperProportions, this, [], JAM.policy.p3);
      var v29360 = a$$426.ui.ddmanager;
      if (v29360) {
        v29360 = !c$$232.dropBehaviour;
      }
      var v28645 = v29360;
      if (v28645) {
        var v29361 = a$$426.ui.ddmanager;
        JAM.call(v29361.prepareOffsets, v29361, [this, b$$286], JAM.policy.p3);
      }
      JAM.call(this._mouseDrag, this, [b$$286, !0], JAM.policy.p3);
      var v25751 = a$$426.ui.ddmanager;
      if (v25751) {
        var v27530 = a$$426.ui.ddmanager;
        JAM.call(v27530.dragStart, v27530, [this, b$$286], JAM.policy.p3);
      }
      v11917 = !0;
    }
    return v11917;
  }
  function v1169(b$$285) {
    function v1168() {
      var v17606 = JAM.call(a$$426, null, ['<div class="ui-draggable-iframeFix" style="background: #fff;"></div>'], JAM.policy.p3);
      var v11918 = JAM.call(v17606.css, v17606, [{width:this.offsetWidth + "px", height:this.offsetHeight + "px", position:"absolute", opacity:"0.001", zIndex:1E3}], JAM.policy.p3);
      var v17608 = JAM.call(a$$426, null, [this], JAM.policy.p3);
      var v4960 = JAM.call(v11918.css, v11918, [JAM.call(v17608.offset, v17608, [], JAM.policy.p3)], JAM.policy.p3);
      JAM.call(v4960.appendTo, v4960, ["body"], JAM.policy.p3);
      return;
    }
    var c$$231 = this.options;
    var v4961;
    var v21593 = this.helper;
    if (!v21593) {
      v21593 = c$$231.disabled;
    }
    var v17609 = v21593;
    if (!v17609) {
      var v21594 = JAM.call(a$$426, null, [b$$285.target], JAM.policy.p3);
      v17609 = JAM.call(v21594.is, v21594, [".ui-resizable-handle"], JAM.policy.p3);
    }
    if (v17609) {
      v4961 = !1;
    } else {
      var v31332 = JAM.call(this._getHandle, this, [b$$285], JAM.policy.p3);
      this.handle = v31332;
      var v17610;
      if (this.handle) {
        var v25756 = c$$231.iframeFix;
        if (v25756) {
          var v29362;
          if (c$$231.iframeFix === !0) {
            v29362 = "iframe";
          } else {
            v29362 = c$$231.iframeFix;
          }
          var v27531 = JAM.call(a$$426, null, [v29362], JAM.policy.p3);
          JAM.call(v27531.each, v27531, [v1168], JAM.policy.p3);
        }
        v17610 = !0;
      } else {
        v17610 = !1;
      }
      v4961 = v17610;
    }
    return v4961;
  }
  function v1167() {
    var v17611 = this.element;
    if (!JAM.call(v17611.data, v17611, ["draggable"], JAM.policy.p3)) {
      return;
    }
    var v25757 = this.element;
    var v21597 = JAM.call(v25757.removeData, v25757, ["draggable"], JAM.policy.p3);
    var v17612 = JAM.call(v21597.unbind, v21597, [".draggable"], JAM.policy.p3);
    JAM.call(v17612.removeClass, v17612, ["ui-draggable ui-draggable-dragging ui-draggable-disabled"], JAM.policy.p3);
    JAM.call(this._mouseDestroy, this, [], JAM.policy.p3);
    return this;
  }
  function v1166() {
    var v25758 = this.options.helper == "original";
    if (v25758) {
      var v29363 = this.element;
      v25758 = !JAM.call(/^(?:r|a|f)/.test, /^(?:r|a|f)/, [JAM.call(v29363.css, v29363, ["position"], JAM.policy.p3)], JAM.policy.p3);
    }
    var v21598 = v25758;
    if (v21598) {
      this.element[0].style.position = "relative";
    }
    var v21599 = this.options.addClasses;
    if (v21599) {
      var v25761 = this.element;
      JAM.call(v25761.addClass, v25761, ["ui-draggable"], JAM.policy.p3);
    }
    var v17613 = this.options.disabled;
    if (v17613) {
      var v21601 = this.element;
      JAM.call(v21601.addClass, v21601, ["ui-draggable-disabled"], JAM.policy.p3);
    }
    JAM.call(this._mouseInit, this, [], JAM.policy.p3);
    return;
  }
  JAM.call(a$$426.widget, a$$426, ["ui.draggable", a$$426.ui.mouse, {widgetEventPrefix:"drag", options:{addClasses:!0, appendTo:"parent", axis:!1, connectToSortable:!1, containment:!1, cursor:"auto", cursorAt:!1, grid:!1, handle:!1, helper:"original", iframeFix:!1, opacity:!1, refreshPositions:!1, revert:!1, revertDuration:500, scope:"default", scroll:!0, scrollSensitivity:20, scrollSpeed:20, snap:!1, snapMode:"both", snapTolerance:20, stack:!1, zIndex:!1}, _create:v1166, destroy:v1167, _mouseCapture:v1169, 
  _mouseStart:v1170, _mouseDrag:v1171, _mouseStop:v1173, _mouseUp:v1175, cancel:v1176, _getHandle:v1178, _createHelper:v1179, _adjustOffsetFromHelper:v1180, _getParentOffset:v1181, _getRelativeOffset:v1182, _cacheMargins:v1183, _cacheHelperProportions:v1184, _setContainment:v1185, _convertPositionTo:v1186, _generatePosition:v1187, _clear:v1188, _trigger:v1189, plugins:{}, _uiHash:v1190}], JAM.policy.p3);
  JAM.call(a$$426.extend, a$$426, [a$$426.ui.draggable, {version:"1.8.24"}], JAM.policy.p3);
  var v29364 = a$$426.ui.plugin;
  JAM.call(v29364.add, v29364, ["draggable", "connectToSortable", {start:v1192, stop:v1194, drag:v1197}], JAM.policy.p3);
  var v28651 = a$$426.ui.plugin;
  JAM.call(v28651.add, v28651, ["draggable", "cursor", {start:v1198, stop:v1199}], JAM.policy.p3);
  var v27535 = a$$426.ui.plugin;
  JAM.call(v27535.add, v27535, ["draggable", "opacity", {start:v1200, stop:v1201}], JAM.policy.p3);
  var v25762 = a$$426.ui.plugin;
  JAM.call(v25762.add, v25762, ["draggable", "scroll", {start:v1202, drag:v1203}], JAM.policy.p3);
  var v21602 = a$$426.ui.plugin;
  JAM.call(v21602.add, v21602, ["draggable", "snap", {start:v1205, drag:v1206}], JAM.policy.p3);
  var v17614 = a$$426.ui.plugin;
  JAM.call(v17614.add, v17614, ["draggable", "stack", {start:v1209}], JAM.policy.p3);
  var v11922 = a$$426.ui.plugin;
  JAM.call(v11922.add, v11922, ["draggable", "zIndex", {start:v1210, stop:v1211}], JAM.policy.p3);
  return;
}
function v1165(a$$415, b$$279) {
  function v1164(a$$425) {
    return!0;
  }
  function v1163(a$$424) {
    return;
  }
  function v1162(a$$423) {
    return;
  }
  function v1161(a$$422) {
    return;
  }
  function v1160(a$$421) {
    return this.mouseDelayMet;
  }
  function v1159(a$$420) {
    return JAM.call(Math.max, Math, [JAM.call(Math.abs, Math, [this._mouseDownEvent.pageX - a$$420.pageX], JAM.policy.p3), JAM.call(Math.abs, Math, [this._mouseDownEvent.pageY - a$$420.pageY], JAM.policy.p3)], JAM.policy.p3) >= this.options.distance;
  }
  function v1158(b$$283) {
    var v21609 = JAM.call(a$$415, null, [document], JAM.policy.p3);
    var v17619 = JAM.call(v21609.unbind, v21609, ["mousemove." + this.widgetName, this._mouseMoveDelegate], JAM.policy.p3);
    JAM.call(v17619.unbind, v17619, ["mouseup." + this.widgetName, this._mouseUpDelegate], JAM.policy.p3);
    var v17622 = this._mouseStarted;
    if (v17622) {
      this._mouseStarted = !1;
      var v27538 = b$$283.target == this._mouseDownEvent.target;
      if (v27538) {
        JAM.call(a$$415.data, a$$415, [b$$283.target, this.widgetName + ".preventClickEvent", !0], JAM.policy.p3);
      }
      JAM.call(this._mouseStop, this, [b$$283], JAM.policy.p3);
    }
    return!1;
  }
  function v1157(b$$282) {
    var v4965;
    var v21613 = !a$$415.browser.msie;
    if (!v21613) {
      v21613 = document.documentMode >= 9;
    }
    var v17623 = v21613;
    if (!v17623) {
      v17623 = !!b$$282.button;
    }
    if (v17623) {
      var v11927;
      if (this._mouseStarted) {
        JAM.call(this._mouseDrag, this, [b$$282], JAM.policy.p3);
        v11927 = JAM.call(b$$282.preventDefault, b$$282, [], JAM.policy.p3);
      } else {
        var v25772 = JAM.call(this._mouseDistanceMet, this, [b$$282], JAM.policy.p3);
        if (v25772) {
          v25772 = this.mouseDelayMet;
        }
        var v21616 = v25772;
        if (v21616) {
          this._mouseStarted = JAM.call(this._mouseStart, this, [this._mouseDownEvent, b$$282], JAM.policy.p3) !== !1;
          var v27542;
          if (this._mouseStarted) {
            v27542 = JAM.call(this._mouseDrag, this, [b$$282], JAM.policy.p3);
          } else {
            v27542 = JAM.call(this._mouseUp, this, [b$$282], JAM.policy.p3);
          }
          v27542;
        }
        v11927 = !this._mouseStarted;
      }
      v4965 = v11927;
    } else {
      v4965 = JAM.call(this._mouseUp, this, [b$$282], JAM.policy.p3);
    }
    return v4965;
  }
  function v1156(b$$281) {
    function v1155(a$$419) {
      return JAM.call(d$$181._mouseUp, d$$181, [a$$419], JAM.policy.p3);
    }
    function v1154(a$$418) {
      return JAM.call(d$$181._mouseMove, d$$181, [a$$418], JAM.policy.p3);
    }
    function v1153() {
      d$$181.mouseDelayMet = !0;
      return;
    }
    if (c$$229) {
      return;
    }
    var v11929 = this._mouseStarted;
    if (v11929) {
      JAM.call(this._mouseUp, this, [b$$281], JAM.policy.p3);
    }
    this._mouseDownEvent = b$$281;
    var d$$181 = this;
    var e$$181 = b$$281.which == 1;
    var v4967;
    var v17625 = typeof this.options.cancel == "string";
    if (v17625) {
      v17625 = b$$281.target.nodeName;
    }
    if (v17625) {
      var v17626 = JAM.call(a$$415, null, [b$$281.target], JAM.policy.p3);
      v4967 = JAM.call(v17626.closest, v17626, [this.options.cancel], JAM.policy.p3).length;
    } else {
      v4967 = !1;
    }
    var f$$58 = v4967;
    var v17628 = !e$$181;
    if (!v17628) {
      v17628 = f$$58;
    }
    var v11932 = v17628;
    if (!v11932) {
      v11932 = !JAM.call(this._mouseCapture, this, [b$$281], JAM.policy.p3);
    }
    if (v11932) {
      return!0;
    }
    this.mouseDelayMet = !this.options.delay;
    var v11934 = this.mouseDelayMet;
    if (!v11934) {
      var v31333 = JAM.call(setTimeout, null, [v1153, this.options.delay], JAM.policy.p3);
      this._mouseDelayTimer = v31333;
    }
    var v11935 = JAM.call(this._mouseDistanceMet, this, [b$$281], JAM.policy.p3);
    if (v11935) {
      v11935 = this.mouseDelayMet;
    }
    if (v11935) {
      this._mouseStarted = JAM.call(this._mouseStart, this, [b$$281], JAM.policy.p3) !== !1;
      if (!this._mouseStarted) {
        JAM.call(b$$281.preventDefault, b$$281, [], JAM.policy.p3);
        return!0;
      }
    }
    var v28661 = !0 === JAM.call(a$$415.data, a$$415, [b$$281.target, this.widgetName + ".preventClickEvent"], JAM.policy.p3);
    if (v28661) {
      JAM.call(a$$415.removeData, a$$415, [b$$281.target, this.widgetName + ".preventClickEvent"], JAM.policy.p3);
    }
    this._mouseMoveDelegate = v1154;
    this._mouseUpDelegate = v1155;
    var v27544 = JAM.call(a$$415, null, [document], JAM.policy.p3);
    var v25774 = JAM.call(v27544.bind, v27544, ["mousemove." + this.widgetName, this._mouseMoveDelegate], JAM.policy.p3);
    JAM.call(v25774.bind, v25774, ["mouseup." + this.widgetName, this._mouseUpDelegate], JAM.policy.p3);
    JAM.call(b$$281.preventDefault, b$$281, [], JAM.policy.p3);
    c$$229 = !0;
    return!0;
  }
  function v1152() {
    var v11937 = this.element;
    JAM.call(v11937.unbind, v11937, ["." + this.widgetName], JAM.policy.p3);
    var v11939 = this._mouseMoveDelegate;
    if (v11939) {
      var v21624 = JAM.call(a$$415, null, [document], JAM.policy.p3);
      var v17635 = JAM.call(v21624.unbind, v21624, ["mousemove." + this.widgetName, this._mouseMoveDelegate], JAM.policy.p3);
      JAM.call(v17635.unbind, v17635, ["mouseup." + this.widgetName, this._mouseUpDelegate], JAM.policy.p3);
    }
    return;
  }
  function v1151() {
    function v1150(c$$230) {
      if (!0 === JAM.call(a$$415.data, a$$415, [c$$230.target, b$$280.widgetName + ".preventClickEvent"], JAM.policy.p3)) {
        JAM.call(a$$415.removeData, a$$415, [c$$230.target, b$$280.widgetName + ".preventClickEvent"], JAM.policy.p3);
        JAM.call(c$$230.stopImmediatePropagation, c$$230, [], JAM.policy.p3);
        return!1;
      }
      return;
    }
    function v1149(a$$417) {
      return JAM.call(b$$280._mouseDown, b$$280, [a$$417], JAM.policy.p3);
    }
    var b$$280 = this;
    var v17642 = this.element;
    var v11942 = JAM.call(v17642.bind, v17642, ["mousedown." + this.widgetName, v1149], JAM.policy.p3);
    JAM.call(v11942.bind, v11942, ["click." + this.widgetName, v1150], JAM.policy.p3);
    this.started = !1;
    return;
  }
  function v1148(a$$416) {
    c$$229 = !1;
    return;
  }
  var c$$229 = !1;
  var v11944 = JAM.call(a$$415, null, [document], JAM.policy.p3);
  JAM.call(v11944.mouseup, v11944, [v1148], JAM.policy.p3);
  JAM.call(a$$415.widget, a$$415, ["ui.mouse", {options:{cancel:":input,option", distance:1, delay:0}, _mouseInit:v1151, _mouseDestroy:v1152, _mouseDown:v1156, _mouseMove:v1157, _mouseUp:v1158, _mouseDistanceMet:v1159, _mouseDelayMet:v1160, _mouseStart:v1161, _mouseDrag:v1162, _mouseStop:v1163, _mouseCapture:v1164}], JAM.policy.p3);
  return;
}
function v1147(a$$410, b$$266) {
  function v1146(b$$278, c$$228, d$$180) {
    var e$$180;
    var f$$57;
    var g$$106 = this.options[b$$278];
    d$$180 = d$$180 || {};
    c$$228 = JAM.call(a$$410.Event, a$$410, [c$$228], JAM.policy.p3);
    var v21631 = c$$228;
    var v27548;
    if (b$$278 === this.widgetEventPrefix) {
      v27548 = b$$278;
    } else {
      v27548 = this.widgetEventPrefix + b$$278;
    }
    var v25778 = v27548;
    var v31334 = JAM.call(v25778.toLowerCase, v25778, [], JAM.policy.p3);
    v21631.type = v31334;
    c$$228.target = this.element[0];
    f$$57 = c$$228.originalEvent;
    if (f$$57) {
      for (e$$180 in f$$57) {
        var v4975 = e$$180 in c$$228;
        if (!v4975) {
          JAM.set(c$$228, e$$180, f$$57[e$$180], JAM.policy.p2);
        }
      }
    }
    var v11947 = this.element;
    JAM.call(v11947.trigger, v11947, [c$$228, d$$180], JAM.policy.p3);
    var v21632 = JAM.call(a$$410.isFunction, a$$410, [g$$106], JAM.policy.p3);
    if (v21632) {
      v21632 = JAM.call(g$$106.call, g$$106, [this.element[0], c$$228, d$$180], JAM.policy.p3) === !1;
    }
    var v17647 = v21632;
    if (!v17647) {
      v17647 = JAM.call(c$$228.isDefaultPrevented, c$$228, [], JAM.policy.p3);
    }
    return!v17647;
  }
  function v1145() {
    return JAM.call(this._setOption, this, ["disabled", !0], JAM.policy.p3);
  }
  function v1144() {
    return JAM.call(this._setOption, this, ["disabled", !1], JAM.policy.p3);
  }
  function v1143(a$$414, b$$277) {
    JAM.set(this.options, a$$414, b$$277, JAM.policy.p2);
    var v17649 = a$$414 === "disabled";
    if (v17649) {
      var v25781 = JAM.call(this.widget, this, [], JAM.policy.p3);
      var v27550;
      if (b$$277) {
        v27550 = "addClass";
      } else {
        v27550 = "removeClass";
      }
      var v21634 = JAM.call(v25781[v27550], v25781, [this.widgetBaseClass + "-disabled" + " " + "ui-state-disabled"], JAM.policy.p3);
      JAM.call(v21634.attr, v21634, ["aria-disabled", b$$277], JAM.policy.p3);
    }
    return this;
  }
  function v1142(b$$275) {
    function v1141(a$$413, b$$276) {
      JAM.call(c$$227._setOption, c$$227, [a$$413, b$$276], JAM.policy.p3);
      return;
    }
    var c$$227 = this;
    JAM.call(a$$410.each, a$$410, [b$$275, v1141], JAM.policy.p3);
    return this;
  }
  function v1140(c$$226, d$$179) {
    var e$$179 = c$$226;
    if (arguments.length === 0) {
      return JAM.call(a$$410.extend, a$$410, [{}, this.options], JAM.policy.p3);
    }
    if (typeof c$$226 == "string") {
      if (d$$179 === b$$266) {
        return this.options[c$$226];
      }
      e$$179 = {};
      JAM.set(e$$179, c$$226, d$$179, JAM.policy.p2);
    }
    JAM.call(this._setOptions, this, [e$$179], JAM.policy.p3);
    return this;
  }
  function v1139() {
    return this.element;
  }
  function v1138() {
    var v17650 = this.element;
    var v11951 = JAM.call(v17650.unbind, v17650, ["." + this.widgetName], JAM.policy.p3);
    JAM.call(v11951.removeData, v11951, [this.widgetName], JAM.policy.p3);
    var v21636 = JAM.call(this.widget, this, [], JAM.policy.p3);
    var v17652 = JAM.call(v21636.unbind, v21636, ["." + this.widgetName], JAM.policy.p3);
    var v11953 = JAM.call(v17652.removeAttr, v17652, ["aria-disabled"], JAM.policy.p3);
    JAM.call(v11953.removeClass, v11953, [this.widgetBaseClass + "-disabled " + "ui-state-disabled"], JAM.policy.p3);
    return;
  }
  function v1137() {
    return;
  }
  function v1136() {
    return;
  }
  function v1135() {
    var v4983 = a$$410.metadata;
    if (v4983) {
      var v17654 = a$$410.metadata;
      v4983 = JAM.call(v17654.get, v17654, [this.element[0]], JAM.policy.p3)[this.widgetName];
    }
    return v4983;
  }
  function v1134(b$$274, c$$225) {
    function v1133() {
      JAM.call(d$$178.destroy, d$$178, [], JAM.policy.p3);
      return;
    }
    JAM.call(a$$410.data, a$$410, [c$$225, this.widgetName, this], JAM.policy.p3);
    var v31335 = JAM.call(a$$410, null, [c$$225], JAM.policy.p3);
    this.element = v31335;
    var v31336 = JAM.call(a$$410.extend, a$$410, [!0, {}, this.options, JAM.call(this._getCreateOptions, this, [], JAM.policy.p3), b$$274], JAM.policy.p3);
    this.options = v31336;
    var d$$178 = this;
    var v21640 = this.element;
    JAM.call(v21640.bind, v21640, ["remove." + this.widgetName, v1133], JAM.policy.p3);
    JAM.call(this._create, this, [], JAM.policy.p3);
    JAM.call(this._trigger, this, ["create"], JAM.policy.p3);
    JAM.call(this._init, this, [], JAM.policy.p3);
    return;
  }
  function v1132(a$$412, b$$273) {
    var v4984 = arguments.length;
    if (v4984) {
      JAM.call(this._createWidget, this, [a$$412, b$$273], JAM.policy.p3);
    }
    return;
  }
  function v1131(c$$224, d$$176) {
    function v1130(e$$178) {
      function v1129() {
        var b$$272 = JAM.call(a$$410.data, a$$410, [this, c$$224], JAM.policy.p3);
        var v4985;
        if (b$$272) {
          var v11960 = JAM.call(b$$272.option, b$$272, [e$$178 || {}], JAM.policy.p3);
          v4985 = JAM.call(v11960._init, v11960, [], JAM.policy.p3);
        } else {
          v4985 = JAM.call(a$$410.data, a$$410, [this, c$$224, JAM.new(d$$176, [e$$178, this], JAM.policy.p3)], JAM.policy.p3);
        }
        v4985;
        return;
      }
      function v1128() {
        var d$$177 = JAM.call(a$$410.data, a$$410, [this, c$$224], JAM.policy.p3);
        var v4986;
        var v17658 = d$$177;
        if (v17658) {
          v17658 = JAM.call(a$$410.isFunction, a$$410, [d$$177[e$$178]], JAM.policy.p3);
        }
        if (v17658) {
          var v11962 = d$$177[e$$178];
          v4986 = JAM.call(v11962.apply, v11962, [d$$177, g$$105], JAM.policy.p3);
        } else {
          v4986 = d$$177;
        }
        var f$$56 = v4986;
        var v11964 = f$$56 !== d$$177;
        if (v11964) {
          v11964 = f$$56 !== b$$266;
        }
        if (v11964) {
          h$$86 = f$$56;
          return!1;
        }
        return;
      }
      var f$$55 = typeof e$$178 == "string";
      var v4989 = Array.prototype.slice;
      var g$$105 = JAM.call(v4989.call, v4989, [arguments, 1], JAM.policy.p3);
      var h$$86 = this;
      var v11966;
      var v21643 = !f$$55;
      if (v21643) {
        v21643 = g$$105.length;
      }
      if (v21643) {
        var v17659 = a$$410.extend;
        var v21644 = [!0, e$$178];
        v11966 = JAM.call(v17659.apply, v17659, [null, JAM.call(v21644.concat, v21644, [g$$105], JAM.policy.p3)], JAM.policy.p3);
      } else {
        v11966 = e$$178;
      }
      e$$178 = v11966;
      var v11967;
      var v21645 = f$$55;
      if (v21645) {
        v21645 = JAM.call(e$$178.charAt, e$$178, [0], JAM.policy.p3) === "_";
      }
      if (v21645) {
        v11967 = h$$86;
      } else {
        var v21646;
        if (f$$55) {
          v21646 = JAM.call(this.each, this, [v1128], JAM.policy.p3);
        } else {
          v21646 = JAM.call(this.each, this, [v1129], JAM.policy.p3);
        }
        v21646;
        v11967 = h$$86;
      }
      return v11967;
    }
    JAM.set(a$$410.fn, c$$224, v1130, JAM.policy.p2);
    return;
  }
  function v1127(b$$270, c$$222, d$$175) {
    function v1126(a$$411, b$$271) {
      var v4991 = arguments.length;
      if (v4991) {
        JAM.call(this._createWidget, this, [a$$411, b$$271], JAM.policy.p3);
      }
      return;
    }
    function v1125(c$$223) {
      return!!JAM.call(a$$410.data, a$$410, [c$$223, b$$270], JAM.policy.p3);
    }
    var e$$177 = JAM.call(b$$270.split, b$$270, ["."], JAM.policy.p3)[0];
    var f$$54;
    b$$270 = JAM.call(b$$270.split, b$$270, ["."], JAM.policy.p3)[1];
    f$$54 = e$$177 + "-" + b$$270;
    if (!d$$175) {
      d$$175 = c$$222;
      c$$222 = a$$410.Widget;
    }
    JAM.set(a$$410.expr[":"], f$$54, v1125, JAM.policy.p2);
    var v17663 = a$$410[e$$177];
    if (!v17663) {
      v17663 = {};
    }
    JAM.set(a$$410, e$$177, v17663, JAM.policy.p2);
    JAM.set(a$$410[e$$177], b$$270, v1126, JAM.policy.p2);
    var g$$104 = JAM.new(c$$222, [], JAM.policy.p3);
    var v17664 = g$$104;
    var v31337 = JAM.call(a$$410.extend, a$$410, [!0, {}, g$$104.options], JAM.policy.p3);
    v17664.options = v31337;
    var v17665 = a$$410[e$$177][b$$270];
    var v21652 = !0;
    var v27555 = a$$410[e$$177][b$$270].prototype.widgetEventPrefix;
    if (!v27555) {
      v27555 = b$$270;
    }
    var v31338 = JAM.call(a$$410.extend, a$$410, [v21652, g$$104, {namespace:e$$177, widgetName:b$$270, widgetEventPrefix:v27555, widgetBaseClass:f$$54}, d$$175], JAM.policy.p3);
    v17665.prototype = v31338;
    var v11970 = a$$410.widget;
    JAM.call(v11970.bridge, v11970, [b$$270, a$$410[e$$177][b$$270]], JAM.policy.p3);
    return;
  }
  function v1124(b$$268, c$$221) {
    function v1123() {
      function v1122() {
        try {
          var v4994 = JAM.call(a$$410, null, [this], JAM.policy.p3);
          JAM.call(v4994.triggerHandler, v4994, ["remove"], JAM.policy.p3);
        } catch (b$$269) {
        }
        return;
      }
      if (!c$$221) {
        var v21654 = !b$$268;
        if (!v21654) {
          v21654 = JAM.call(a$$410.filter, a$$410, [b$$268, [this]], JAM.policy.p3).length;
        }
        var v17667 = v21654;
        if (v17667) {
          var v25792 = JAM.call(a$$410, null, ["*", this], JAM.policy.p3);
          var v21655 = JAM.call(v25792.add, v25792, [[this]], JAM.policy.p3);
          JAM.call(v21655.each, v21655, [v1122], JAM.policy.p3);
        }
      }
      return JAM.call(d$$173.call, d$$173, [JAM.call(a$$410, null, [this], JAM.policy.p3), b$$268, c$$221], JAM.policy.p3);
    }
    return JAM.call(this.each, this, [v1123], JAM.policy.p3);
  }
  function v1121(b$$267) {
    var d$$174 = 0;
    var e$$176;
    var v4996 = (e$$176 = b$$267[d$$174]) != null;
    for (;v4996;) {
      try {
        var v4995 = JAM.call(a$$410, null, [e$$176], JAM.policy.p3);
        JAM.call(v4995.triggerHandler, v4995, ["remove"], JAM.policy.p3);
      } catch (f$$53) {
      }
      d$$174 = d$$174 + 1;
      v4996 = (e$$176 = b$$267[d$$174]) != null;
    }
    JAM.call(c$$220, null, [b$$267], JAM.policy.p3);
    return;
  }
  if (a$$410.cleanData) {
    var c$$220 = a$$410.cleanData;
    a$$410.cleanData = v1121;
  } else {
    var d$$173 = a$$410.fn.remove;
    a$$410.fn.remove = v1124;
  }
  a$$410.widget = v1127;
  a$$410.widget.bridge = v1131;
  a$$410.Widget = v1132;
  a$$410.Widget.prototype = {widgetName:"widget", widgetEventPrefix:"", options:{disabled:!1}, _createWidget:v1134, _getCreateOptions:v1135, _create:v1136, _init:v1137, destroy:v1138, widget:v1139, option:v1140, _setOptions:v1142, _setOption:v1143, enable:v1144, disable:v1145, _trigger:v1146};
  return;
}
function v1120(a$$405, b$$248) {
  function v1119(b$$265, c$$219, d$$172, e$$175, f$$52, g$$103) {
    var v11976 = a$$405.ui;
    var v5000 = JAM.call(v11976.isOverAxis, v11976, [b$$265, d$$172, f$$52], JAM.policy.p3);
    if (v5000) {
      var v11977 = a$$405.ui;
      v5000 = JAM.call(v11977.isOverAxis, v11977, [c$$219, e$$175, g$$103], JAM.policy.p3);
    }
    return v5000;
  }
  function v1118(a$$409, b$$264, c$$218) {
    var v5001 = a$$409 > b$$264;
    if (v5001) {
      v5001 = a$$409 < b$$264 + c$$218;
    }
    return v5001;
  }
  function v1117(b$$263, c$$217) {
    var v17670 = JAM.call(a$$405, null, [b$$263], JAM.policy.p3);
    if (JAM.call(v17670.css, v17670, ["overflow"], JAM.policy.p3) === "hidden") {
      return!1;
    }
    var v5003;
    var v17671 = c$$217;
    if (v17671) {
      v17671 = c$$217 === "left";
    }
    if (v17671) {
      v5003 = "scrollLeft";
    } else {
      v5003 = "scrollTop";
    }
    var d$$171 = v5003;
    var e$$174 = !1;
    var v5004;
    if (b$$263[d$$171] > 0) {
      v5004 = !0;
    } else {
      JAM.set(b$$263, d$$171, 1, JAM.policy.p2);
      e$$174 = b$$263[d$$171] > 0;
      JAM.set(b$$263, d$$171, 0, JAM.policy.p2);
      v5004 = e$$174;
    }
    return v5004;
  }
  function v1116(a$$408, b$$262) {
    var v5005;
    if (document.compareDocumentPosition) {
      v5005 = JAM.call(a$$408.compareDocumentPosition, a$$408, [b$$262], JAM.policy.p3) & 16;
    } else {
      var v11983 = a$$408 !== b$$262;
      if (v11983) {
        v11983 = JAM.call(a$$408.contains, a$$408, [b$$262], JAM.policy.p3);
      }
      v5005 = v11983;
    }
    return v5005;
  }
  function v1115(a$$407, b$$261, c$$216) {
    var d$$170 = a$$407.plugins[b$$261];
    var v11985 = !d$$170;
    if (!v11985) {
      v11985 = !a$$407.element[0].parentNode;
    }
    if (v11985) {
      return;
    }
    var e$$173 = 0;
    var v5009 = e$$173 < d$$170.length;
    for (;v5009;) {
      var v5008 = a$$407.options[d$$170[e$$173][0]];
      if (v5008) {
        var v11989 = d$$170[e$$173][1];
        JAM.call(v11989.apply, v11989, [a$$407.element, c$$216], JAM.policy.p3);
      }
      e$$173 = e$$173 + 1;
      v5009 = e$$173 < d$$170.length;
    }
    return;
  }
  function v1114(b$$260, c$$215, d$$169) {
    var e$$172 = a$$405.ui[b$$260].prototype;
    var f$$51;
    for (f$$51 in d$$169) {
      var v11993 = e$$172.plugins;
      var v17677 = e$$172.plugins[f$$51];
      if (!v17677) {
        v17677 = [];
      }
      JAM.set(v11993, f$$51, v17677, JAM.policy.p2);
      var v11994 = e$$172.plugins[f$$51];
      JAM.call(v11994.push, v11994, [[c$$215, d$$169[f$$51]]], JAM.policy.p3);
    }
    return;
  }
  function v1113() {
    var b$$259 = document.body;
    var c$$214 = JAM.call(b$$259.appendChild, b$$259, [c$$214 = JAM.call(document.createElement, document, ["div"], JAM.policy.p3)], JAM.policy.p3);
    c$$214.offsetHeight;
    JAM.call(a$$405.extend, a$$405, [c$$214.style, {minHeight:"100px", height:"auto", padding:0, borderWidth:0}], JAM.policy.p3);
    a$$405.support.minHeight = c$$214.offsetHeight === 100;
    a$$405.support.selectstart = "onselectstart" in c$$214;
    JAM.call(b$$259.removeChild, b$$259, [c$$214], JAM.policy.p3).style.display = "none";
    return;
  }
  function v1112(b$$258) {
    var d$$168 = JAM.call(a$$405.attr, a$$405, [b$$258, "tabindex"], JAM.policy.p3);
    var e$$171 = JAM.call(isNaN, null, [d$$168], JAM.policy.p3);
    var v11997 = e$$171;
    if (!v11997) {
      v11997 = d$$168 >= 0;
    }
    var v5012 = v11997;
    if (v5012) {
      v5012 = JAM.call(c$$204, null, [b$$258, !e$$171], JAM.policy.p3);
    }
    return v5012;
  }
  function v1111(b$$257) {
    return JAM.call(c$$204, null, [b$$257, !JAM.call(isNaN, null, [JAM.call(a$$405.attr, a$$405, [b$$257, "tabindex"], JAM.policy.p3)], JAM.policy.p3)], JAM.policy.p3);
  }
  function v1110(b$$256, c$$213, d$$167) {
    return!!JAM.call(a$$405.data, a$$405, [b$$256, d$$167[3]], JAM.policy.p3);
  }
  function v1109(b$$255) {
    function v1108(c$$212) {
      return!!JAM.call(a$$405.data, a$$405, [c$$212, b$$255], JAM.policy.p3);
    }
    return v1108;
  }
  function v1107(c$$208, d$$165) {
    function v1106(b$$254, c$$211) {
      function v1105() {
        var v5016 = JAM.call(a$$405, null, [this], JAM.policy.p3);
        JAM.call(v5016.css, v5016, [f$$49, JAM.call(h$$85, null, [this, b$$254, !0, c$$211], JAM.policy.p3) + "px"], JAM.policy.p3);
        return;
      }
      var v5018;
      if (typeof b$$254 != "number") {
        var v12003 = g$$102["outer" + d$$165];
        v5018 = JAM.call(v12003.call, v12003, [this, b$$254], JAM.policy.p3);
      } else {
        v5018 = JAM.call(this.each, this, [v1105], JAM.policy.p3);
      }
      return v5018;
    }
    function v1104(c$$210) {
      function v1103() {
        var v5019 = JAM.call(a$$405, null, [this], JAM.policy.p3);
        JAM.call(v5019.css, v5019, [f$$49, JAM.call(h$$85, null, [this, c$$210], JAM.policy.p3) + "px"], JAM.policy.p3);
        return;
      }
      var v5021;
      if (c$$210 === b$$248) {
        var v12006 = g$$102["inner" + d$$165];
        v5021 = JAM.call(v12006.call, v12006, [this], JAM.policy.p3);
      } else {
        v5021 = JAM.call(this.each, this, [v1103], JAM.policy.p3);
      }
      return v5021;
    }
    function h$$85(b$$253, c$$209, d$$166, f$$50) {
      function v1102() {
        var v21662 = c$$209;
        var v25799 = JAM.call(parseFloat, null, [JAM.call(a$$405.curCSS, a$$405, [b$$253, "padding" + this, !0], JAM.policy.p3)], JAM.policy.p3);
        if (!v25799) {
          v25799 = 0;
        }
        c$$209 = v21662 - v25799;
        if (d$$166) {
          var v25800 = c$$209;
          var v27559 = JAM.call(parseFloat, null, [JAM.call(a$$405.curCSS, a$$405, [b$$253, "border" + this + "Width", !0], JAM.policy.p3)], JAM.policy.p3);
          if (!v27559) {
            v27559 = 0;
          }
          c$$209 = v25800 - v27559;
        }
        if (f$$50) {
          var v21664 = c$$209;
          var v25802 = JAM.call(parseFloat, null, [JAM.call(a$$405.curCSS, a$$405, [b$$253, "margin" + this, !0], JAM.policy.p3)], JAM.policy.p3);
          if (!v25802) {
            v25802 = 0;
          }
          c$$209 = v21664 - v25802;
        }
        return;
      }
      JAM.call(a$$405.each, a$$405, [e$$170, v1102], JAM.policy.p3);
      return c$$209;
    }
    var v5022;
    if (d$$165 === "Width") {
      v5022 = ["Left", "Right"];
    } else {
      v5022 = ["Top", "Bottom"];
    }
    var e$$170 = v5022;
    var f$$49 = JAM.call(d$$165.toLowerCase, d$$165, [], JAM.policy.p3);
    var g$$102 = {innerWidth:a$$405.fn.innerWidth, innerHeight:a$$405.fn.innerHeight, outerWidth:a$$405.fn.outerWidth, outerHeight:a$$405.fn.outerHeight};
    JAM.set(a$$405.fn, "inner" + d$$165, v1104, JAM.policy.p2);
    JAM.set(a$$405.fn, "outer" + d$$165, v1106, JAM.policy.p2);
    return;
  }
  function v1101() {
    return JAM.call(this.unbind, this, [".ui-disableSelection"], JAM.policy.p3);
  }
  function v1100() {
    function v1099(a$$406) {
      JAM.call(a$$406.preventDefault, a$$406, [], JAM.policy.p3);
      return;
    }
    var v17689;
    if (a$$405.support.selectstart) {
      v17689 = "selectstart";
    } else {
      v17689 = "mousedown";
    }
    return JAM.call(this.bind, this, [v17689 + ".ui-disableSelection", v1099], JAM.policy.p3);
  }
  function v1098(c$$207) {
    if (c$$207 !== b$$248) {
      return JAM.call(this.css, this, ["zIndex", c$$207], JAM.policy.p3);
    }
    if (this.length) {
      var d$$164 = JAM.call(a$$405, null, [this[0]], JAM.policy.p3);
      var e$$169;
      var f$$48;
      var v12018 = d$$164.length;
      if (v12018) {
        v12018 = d$$164[0] !== document;
      }
      var v5033 = v12018;
      for (;v5033;) {
        e$$169 = JAM.call(d$$164.css, d$$164, ["position"], JAM.policy.p3);
        var v17691 = e$$169 === "absolute";
        if (!v17691) {
          v17691 = e$$169 === "relative";
        }
        var v12019 = v17691;
        if (!v12019) {
          v12019 = e$$169 === "fixed";
        }
        if (v12019) {
          f$$48 = JAM.call(parseInt, null, [JAM.call(d$$164.css, d$$164, ["zIndex"], JAM.policy.p3), 10], JAM.policy.p3);
          var v12020 = !JAM.call(isNaN, null, [f$$48], JAM.policy.p3);
          if (v12020) {
            v12020 = f$$48 !== 0;
          }
          if (v12020) {
            return f$$48;
          }
        }
        d$$164 = JAM.call(d$$164.parent, d$$164, [], JAM.policy.p3);
        var v12021 = d$$164.length;
        if (v12021) {
          v12021 = d$$164[0] !== document;
        }
        v5033 = v12021;
      }
    }
    return 0;
  }
  function v1097() {
    function v1096() {
      return JAM.call(/(auto|scroll)/.test, /(auto|scroll)/, [JAM.call(a$$405.curCSS, a$$405, [this, "overflow", 1], JAM.policy.p3) + JAM.call(a$$405.curCSS, a$$405, [this, "overflow-y", 1], JAM.policy.p3) + JAM.call(a$$405.curCSS, a$$405, [this, "overflow-x", 1], JAM.policy.p3)], JAM.policy.p3);
    }
    function v1095() {
      var v5036 = JAM.call(/(relative|absolute|fixed)/.test, /(relative|absolute|fixed)/, [JAM.call(a$$405.curCSS, a$$405, [this, "position", 1], JAM.policy.p3)], JAM.policy.p3);
      if (v5036) {
        v5036 = JAM.call(/(auto|scroll)/.test, /(auto|scroll)/, [JAM.call(a$$405.curCSS, a$$405, [this, "overflow", 1], JAM.policy.p3) + JAM.call(a$$405.curCSS, a$$405, [this, "overflow-y", 1], JAM.policy.p3) + JAM.call(a$$405.curCSS, a$$405, [this, "overflow-x", 1], JAM.policy.p3)], JAM.policy.p3);
      }
      return v5036;
    }
    var b$$252;
    var v12026;
    var v25804 = a$$405.browser.msie;
    if (v25804) {
      v25804 = JAM.call(/(static|relative)/.test, /(static|relative)/, [JAM.call(this.css, this, ["position"], JAM.policy.p3)], JAM.policy.p3);
    }
    var v21670 = v25804;
    if (!v21670) {
      v21670 = JAM.call(/absolute/.test, /absolute/, [JAM.call(this.css, this, ["position"], JAM.policy.p3)], JAM.policy.p3);
    }
    if (v21670) {
      var v21671 = JAM.call(this.parents, this, [], JAM.policy.p3);
      var v17699 = JAM.call(v21671.filter, v21671, [v1095], JAM.policy.p3);
      v12026 = b$$252 = JAM.call(v17699.eq, v17699, [0], JAM.policy.p3);
    } else {
      var v21672 = JAM.call(this.parents, this, [], JAM.policy.p3);
      var v17700 = JAM.call(v21672.filter, v21672, [v1096], JAM.policy.p3);
      v12026 = b$$252 = JAM.call(v17700.eq, v17700, [0], JAM.policy.p3);
    }
    v12026;
    var v12027;
    var v21673 = JAM.call(/fixed/.test, /fixed/, [JAM.call(this.css, this, ["position"], JAM.policy.p3)], JAM.policy.p3);
    if (!v21673) {
      v21673 = !b$$252.length;
    }
    if (v21673) {
      v12027 = JAM.call(a$$405, null, [document], JAM.policy.p3);
    } else {
      v12027 = b$$252;
    }
    return v12027;
  }
  function v1094(b$$251, c$$206) {
    function v1093() {
      function v1092() {
        var v12028 = JAM.call(a$$405, null, [d$$163], JAM.policy.p3);
        JAM.call(v12028.focus, v12028, [], JAM.policy.p3);
        if (c$$206) {
          JAM.call(c$$206.call, c$$206, [d$$163], JAM.policy.p3);
        }
        return;
      }
      var d$$163 = this;
      JAM.call(setTimeout, null, [v1092, b$$251], JAM.policy.p3);
      return;
    }
    var v5037;
    if (typeof b$$251 == "number") {
      v5037 = JAM.call(this.each, this, [v1093], JAM.policy.p3);
    } else {
      var v12029 = this._focus;
      v5037 = JAM.call(v12029.apply, v12029, [this, arguments], JAM.policy.p3);
    }
    return v5037;
  }
  function c$$204(b$$249, c$$205) {
    var v5038 = b$$249.nodeName;
    var e$$168 = JAM.call(v5038.toLowerCase, v5038, [], JAM.policy.p3);
    if ("area" === e$$168) {
      var f$$47 = b$$249.parentNode;
      var g$$101 = f$$47.name;
      var h$$84;
      var v5039;
      var v21674 = !b$$249.href;
      if (!v21674) {
        v21674 = !g$$101;
      }
      var v17704 = v21674;
      if (!v17704) {
        var v25812 = f$$47.nodeName;
        v17704 = JAM.call(v25812.toLowerCase, v25812, [], JAM.policy.p3) !== "map";
      }
      if (v17704) {
        v5039 = !1;
      } else {
        h$$84 = JAM.call(a$$405, null, ["img[usemap=#" + g$$101 + "]"], JAM.policy.p3)[0];
        var v17706 = !!h$$84;
        if (v17706) {
          v17706 = JAM.call(d$$162, null, [h$$84], JAM.policy.p3);
        }
        v5039 = v17706;
      }
      return v5039;
    }
    var v12032;
    if (JAM.call(/input|select|textarea|button|object/.test, /input|select|textarea|button|object/, [e$$168], JAM.policy.p3)) {
      v12032 = !b$$249.disabled;
    } else {
      var v17708;
      if ("a" == e$$168) {
        var v21679 = b$$249.href;
        if (!v21679) {
          v21679 = c$$205;
        }
        v17708 = v21679;
      } else {
        v17708 = c$$205;
      }
      v12032 = v17708;
    }
    var v5041 = v12032;
    if (v5041) {
      v5041 = JAM.call(d$$162, null, [b$$249], JAM.policy.p3);
    }
    return v5041;
  }
  function d$$162(b$$250) {
    function v1091() {
      var v5042 = JAM.call(a$$405.curCSS, a$$405, [this, "visibility"], JAM.policy.p3) === "hidden";
      if (!v5042) {
        var v12034 = a$$405.expr.filters;
        v5042 = JAM.call(v12034.hidden, v12034, [this], JAM.policy.p3);
      }
      return v5042;
    }
    var v25815 = JAM.call(a$$405, null, [b$$250], JAM.policy.p3);
    var v21681 = JAM.call(v25815.parents, v25815, [], JAM.policy.p3);
    var v17711 = JAM.call(v21681.andSelf, v21681, [], JAM.policy.p3);
    return!JAM.call(v17711.filter, v17711, [v1091], JAM.policy.p3).length;
  }
  var v5044 = a$$405.ui;
  if (!v5044) {
    v5044 = {};
  }
  a$$405.ui = v5044;
  if (a$$405.ui.version) {
    return;
  }
  JAM.call(a$$405.extend, a$$405, [a$$405.ui, {version:"1.8.24", keyCode:{ALT:18, BACKSPACE:8, CAPS_LOCK:20, COMMA:188, COMMAND:91, COMMAND_LEFT:91, COMMAND_RIGHT:93, CONTROL:17, DELETE:46, DOWN:40, END:35, ENTER:13, ESCAPE:27, HOME:36, INSERT:45, LEFT:37, MENU:93, NUMPAD_ADD:107, NUMPAD_DECIMAL:110, NUMPAD_DIVIDE:111, NUMPAD_ENTER:108, NUMPAD_MULTIPLY:106, NUMPAD_SUBTRACT:109, PAGE_DOWN:34, PAGE_UP:33, PERIOD:190, RIGHT:39, SHIFT:16, SPACE:32, TAB:9, UP:38, WINDOWS:91}}], JAM.policy.p3);
  var v28677 = a$$405.fn;
  var v29846 = a$$405.fn.prop;
  if (!v29846) {
    v29846 = a$$405.fn.attr;
  }
  JAM.call(v28677.extend, v28677, [{propAttr:v29846, _focus:a$$405.fn.focus, focus:v1094, scrollParent:v1097, zIndex:v1098, disableSelection:v1100, enableSelection:v1101}], JAM.policy.p3);
  var v29381 = JAM.call(a$$405, null, ["<a>"], JAM.policy.p3);
  var v27564 = JAM.call(v29381.outerWidth, v29381, [1], JAM.policy.p3).jquery;
  if (!v27564) {
    JAM.call(a$$405.each, a$$405, [["Width", "Height"], v1107], JAM.policy.p3);
  }
  var v25816 = a$$405.expr[":"];
  var v28682;
  if (a$$405.expr.createPseudo) {
    var v29382 = a$$405.expr;
    v28682 = JAM.call(v29382.createPseudo, v29382, [v1109], JAM.policy.p3);
  } else {
    v28682 = v1110;
  }
  JAM.call(a$$405.extend, a$$405, [v25816, {data:v28682, focusable:v1111, tabbable:v1112}], JAM.policy.p3);
  JAM.call(a$$405, null, [v1113], JAM.policy.p3);
  var v17712 = a$$405.curCSS;
  if (!v17712) {
    a$$405.curCSS = a$$405.css;
  }
  JAM.call(a$$405.extend, a$$405, [a$$405.ui, {plugin:{add:v1114, call:v1115}, contains:v1116, hasScroll:v1117, isOverAxis:v1118, isOver:v1119}], JAM.policy.p3);
  return;
}
function v1090(a$$13, b$$9) {
  function v1089() {
    return f$$4;
  }
  function v1088(a$$400, c$$202) {
    function v1087(a$$403) {
      function v1086(a$$404, c$$203, h$$83) {
        var i$$147;
        var j$$63;
        var k$$41;
        var l$$53;
        if (JAM.call(f$$4.isWindow, f$$4, [a$$404], JAM.policy.p3)) {
          i$$147 = a$$404.document;
          j$$63 = i$$147.documentElement[d$$161];
          var v17714 = f$$4.support.boxModel;
          if (v17714) {
            v17714 = j$$63;
          }
          var v12042 = v17714;
          if (!v12042) {
            var v17715 = i$$147.body;
            if (v17715) {
              v17715 = i$$147.body[d$$161];
            }
            v12042 = v17715;
          }
          var v5046 = v12042;
          if (!v5046) {
            v5046 = j$$63;
          }
          return v5046;
        }
        if (a$$404.nodeType === 9) {
          i$$147 = a$$404.documentElement;
          if (i$$147[d$$161] >= i$$147[e$$167]) {
            return i$$147[d$$161];
          }
          return JAM.call(Math.max, Math, [a$$404.body[e$$167], i$$147[e$$167], a$$404.body[g$$100], i$$147[g$$100]], JAM.policy.p3);
        }
        if (h$$83 === b$$9) {
          k$$41 = JAM.call(f$$4.css, f$$4, [a$$404, c$$203], JAM.policy.p3);
          l$$53 = JAM.call(parseFloat, null, [k$$41], JAM.policy.p3);
          var v5054;
          if (JAM.call(f$$4.isNumeric, f$$4, [l$$53], JAM.policy.p3)) {
            v5054 = l$$53;
          } else {
            v5054 = k$$41;
          }
          return v5054;
        }
        var v5056 = JAM.call(f$$4, null, [a$$404], JAM.policy.p3);
        JAM.call(v5056.css, v5056, [c$$203, h$$83], JAM.policy.p3);
        return;
      }
      return JAM.call(f$$4.access, f$$4, [this, v1086, c$$202, a$$403, arguments.length, null], JAM.policy.p3);
    }
    function v1085(a$$402) {
      var b$$247 = this[0];
      var v5058;
      if (b$$247) {
        var v12050;
        if (b$$247.style) {
          var v25818;
          if (a$$402) {
            v25818 = "margin";
          } else {
            v25818 = "border";
          }
          v12050 = JAM.call(parseFloat, null, [JAM.call(f$$4.css, f$$4, [b$$247, c$$202, v25818], JAM.policy.p3)], JAM.policy.p3);
        } else {
          v12050 = JAM.call(this[c$$202], this, [], JAM.policy.p3);
        }
        v5058 = v12050;
      } else {
        v5058 = null;
      }
      return v5058;
    }
    function v1084() {
      var a$$401 = this[0];
      var v5059;
      if (a$$401) {
        var v12051;
        if (a$$401.style) {
          v12051 = JAM.call(parseFloat, null, [JAM.call(f$$4.css, f$$4, [a$$401, c$$202, "padding"], JAM.policy.p3)], JAM.policy.p3);
        } else {
          v12051 = JAM.call(this[c$$202], this, [], JAM.policy.p3);
        }
        v5059 = v12051;
      } else {
        v5059 = null;
      }
      return v5059;
    }
    var d$$161 = "client" + a$$400;
    var e$$167 = "scroll" + a$$400;
    var g$$100 = "offset" + a$$400;
    JAM.set(f$$4.fn, "inner" + a$$400, v1084, JAM.policy.p2);
    JAM.set(f$$4.fn, "outer" + a$$400, v1085, JAM.policy.p2);
    JAM.set(f$$4.fn, c$$202, v1087, JAM.policy.p2);
    return;
  }
  function v1083(a$$398, c$$201) {
    function v1082(e$$165) {
      function v1081(a$$399, e$$166, g$$99) {
        var h$$82 = JAM.call(cy, null, [a$$399], JAM.policy.p3);
        if (g$$99 === b$$9) {
          var v5060;
          if (h$$82) {
            var v12053;
            if (c$$201 in h$$82) {
              v12053 = h$$82[c$$201];
            } else {
              var v21686 = f$$4.support.boxModel;
              if (v21686) {
                v21686 = h$$82.document.documentElement[e$$166];
              }
              var v17725 = v21686;
              if (!v17725) {
                v17725 = h$$82.document.body[e$$166];
              }
              v12053 = v17725;
            }
            v5060 = v12053;
          } else {
            v5060 = a$$399[e$$166];
          }
          return v5060;
        }
        var v5062;
        if (h$$82) {
          var v17727;
          if (d$$160) {
            var v21689 = JAM.call(f$$4, null, [h$$82], JAM.policy.p3);
            v17727 = JAM.call(v21689.scrollLeft, v21689, [], JAM.policy.p3);
          } else {
            v17727 = g$$99;
          }
          var v12054 = v17727;
          var v17728;
          if (d$$160) {
            v17728 = g$$99;
          } else {
            var v21690 = JAM.call(f$$4, null, [h$$82], JAM.policy.p3);
            v17728 = JAM.call(v21690.scrollTop, v21690, [], JAM.policy.p3);
          }
          v5062 = JAM.call(h$$82.scrollTo, h$$82, [v12054, v17728], JAM.policy.p3);
        } else {
          v5062 = JAM.set(a$$399, e$$166, g$$99, JAM.policy.p2);
        }
        v5062;
        return;
      }
      return JAM.call(f$$4.access, f$$4, [this, v1081, a$$398, e$$165, arguments.length, null], JAM.policy.p3);
    }
    var d$$160 = JAM.call(/Y/.test, /Y/, [c$$201], JAM.policy.p3);
    JAM.set(f$$4.fn, a$$398, v1082, JAM.policy.p2);
    return;
  }
  function v1080() {
    function v1079() {
      var v5065 = this.offsetParent;
      if (!v5065) {
        v5065 = c$$5.body;
      }
      var a$$397 = v5065;
      var v17729 = a$$397;
      if (v17729) {
        v17729 = !JAM.call(cx.test, cx, [a$$397.nodeName], JAM.policy.p3);
      }
      var v12057 = v17729;
      if (v12057) {
        v12057 = JAM.call(f$$4.css, f$$4, [a$$397, "position"], JAM.policy.p3) === "static";
      }
      var v5066 = v12057;
      for (;v5066;) {
        a$$397 = a$$397.offsetParent;
        var v17731 = a$$397;
        if (v17731) {
          v17731 = !JAM.call(cx.test, cx, [a$$397.nodeName], JAM.policy.p3);
        }
        var v12058 = v17731;
        if (v12058) {
          v12058 = JAM.call(f$$4.css, f$$4, [a$$397, "position"], JAM.policy.p3) === "static";
        }
        v5066 = v12058;
      }
      return a$$397;
    }
    return JAM.call(this.map, this, [v1079], JAM.policy.p3);
  }
  function v1078() {
    if (!this[0]) {
      return null;
    }
    var a$$396 = this[0];
    var b$$246 = JAM.call(this.offsetParent, this, [], JAM.policy.p3);
    var c$$200 = JAM.call(this.offset, this, [], JAM.policy.p3);
    var v5068;
    if (JAM.call(cx.test, cx, [b$$246[0].nodeName], JAM.policy.p3)) {
      v5068 = {top:0, left:0};
    } else {
      v5068 = JAM.call(b$$246.offset, b$$246, [], JAM.policy.p3);
    }
    var d$$159 = v5068;
    var v21694 = c$$200;
    var v27568 = v21694.top;
    var v28683 = JAM.call(parseFloat, null, [JAM.call(f$$4.css, f$$4, [a$$396, "marginTop"], JAM.policy.p3)], JAM.policy.p3);
    if (!v28683) {
      v28683 = 0;
    }
    v21694.top = v27568 - v28683;
    var v21695 = c$$200;
    var v27570 = v21695.left;
    var v28684 = JAM.call(parseFloat, null, [JAM.call(f$$4.css, f$$4, [a$$396, "marginLeft"], JAM.policy.p3)], JAM.policy.p3);
    if (!v28684) {
      v28684 = 0;
    }
    v21695.left = v27570 - v28684;
    var v17734 = d$$159;
    var v25824 = v17734.top;
    var v27572 = JAM.call(parseFloat, null, [JAM.call(f$$4.css, f$$4, [b$$246[0], "borderTopWidth"], JAM.policy.p3)], JAM.policy.p3);
    if (!v27572) {
      v27572 = 0;
    }
    v17734.top = v25824 + v27572;
    var v12061 = d$$159;
    var v21696 = v12061.left;
    var v25826 = JAM.call(parseFloat, null, [JAM.call(f$$4.css, f$$4, [b$$246[0], "borderLeftWidth"], JAM.policy.p3)], JAM.policy.p3);
    if (!v25826) {
      v25826 = 0;
    }
    v12061.left = v21696 + v25826;
    return{top:c$$200.top - d$$159.top, left:c$$200.left - d$$159.left};
  }
  function v1077(a$$395, b$$245, c$$199) {
    var d$$158 = JAM.call(f$$4.css, f$$4, [a$$395, "position"], JAM.policy.p3);
    var v5071 = d$$158 === "static";
    if (v5071) {
      a$$395.style.position = "relative";
    }
    var e$$164 = JAM.call(f$$4, null, [a$$395], JAM.policy.p3);
    var g$$98 = JAM.call(e$$164.offset, e$$164, [], JAM.policy.p3);
    var h$$81 = JAM.call(f$$4.css, f$$4, [a$$395, "top"], JAM.policy.p3);
    var i$$146 = JAM.call(f$$4.css, f$$4, [a$$395, "left"], JAM.policy.p3);
    var v12067 = d$$158 === "absolute";
    if (!v12067) {
      v12067 = d$$158 === "fixed";
    }
    var v5072 = v12067;
    if (v5072) {
      v5072 = JAM.call(f$$4.inArray, f$$4, ["auto", [h$$81, i$$146]], JAM.policy.p3) > -1;
    }
    var j$$62 = v5072;
    var k$$40 = {};
    var l$$52 = {};
    var m$$27;
    var n$$78;
    var v25827;
    if (j$$62) {
      l$$52 = JAM.call(e$$164.position, e$$164, [], JAM.policy.p3);
      m$$27 = l$$52.top;
      v25827 = n$$78 = l$$52.left;
    } else {
      var v28688 = JAM.call(parseFloat, null, [h$$81], JAM.policy.p3);
      if (!v28688) {
        v28688 = 0;
      }
      m$$27 = v28688;
      var v28689 = JAM.call(parseFloat, null, [i$$146], JAM.policy.p3);
      if (!v28689) {
        v28689 = 0;
      }
      v25827 = n$$78 = v28689;
    }
    v25827;
    var v25828 = JAM.call(f$$4.isFunction, f$$4, [b$$245], JAM.policy.p3);
    if (v25828) {
      b$$245 = JAM.call(b$$245.call, b$$245, [a$$395, c$$199, g$$98], JAM.policy.p3);
    }
    var v21698 = b$$245.top != null;
    if (v21698) {
      k$$40.top = b$$245.top - g$$98.top + m$$27;
    }
    var v17737 = b$$245.left != null;
    if (v17737) {
      k$$40.left = b$$245.left - g$$98.left + n$$78;
    }
    var v12069;
    if ("using" in b$$245) {
      var v17738 = b$$245.using;
      v12069 = JAM.call(v17738.call, v17738, [a$$395, k$$40], JAM.policy.p3);
    } else {
      v12069 = JAM.call(e$$164.css, e$$164, [k$$40], JAM.policy.p3);
    }
    v12069;
    return;
  }
  function v1076(a$$394) {
    var b$$244 = a$$394.offsetTop;
    var c$$198 = a$$394.offsetLeft;
    var v5073 = f$$4.support.doesNotIncludeMarginInBodyOffset;
    if (v5073) {
      var v21701 = b$$244;
      var v25833 = JAM.call(parseFloat, null, [JAM.call(f$$4.css, f$$4, [a$$394, "marginTop"], JAM.policy.p3)], JAM.policy.p3);
      if (!v25833) {
        v25833 = 0;
      }
      b$$244 = v21701 + v25833;
      var v21703 = c$$198;
      var v25834 = JAM.call(parseFloat, null, [JAM.call(f$$4.css, f$$4, [a$$394, "marginLeft"], JAM.policy.p3)], JAM.policy.p3);
      if (!v25834) {
        v25834 = 0;
      }
      c$$198 = v21703 + v25834;
    }
    return{top:b$$244, left:c$$198};
  }
  function v1075(a$$393) {
    function v1074(b$$243) {
      var v5074 = f$$4.offset;
      JAM.call(v5074.setOffset, v5074, [this, a$$393, b$$243], JAM.policy.p3);
      return;
    }
    if (arguments.length) {
      var v5075;
      if (a$$393 === b$$9) {
        v5075 = this;
      } else {
        v5075 = JAM.call(this.each, this, [v1074], JAM.policy.p3);
      }
      return v5075;
    }
    var c$$197 = this[0];
    var v5077 = c$$197;
    if (v5077) {
      v5077 = c$$197.ownerDocument;
    }
    var d$$157 = v5077;
    if (!d$$157) {
      return null;
    }
    if (c$$197 === d$$157.body) {
      var v5079 = f$$4.offset;
      return JAM.call(v5079.bodyOffset, v5079, [c$$197], JAM.policy.p3);
    }
    return JAM.call(cv, null, [c$$197, d$$157, d$$157.documentElement], JAM.policy.p3);
  }
  function v1073(a$$392, b$$242, c$$196) {
    var d$$156;
    var e$$163 = a$$392.offsetParent;
    var g$$97 = a$$392;
    var h$$80 = b$$242.body;
    var i$$145 = b$$242.defaultView;
    var v5082;
    if (i$$145) {
      v5082 = JAM.call(i$$145.getComputedStyle, i$$145, [a$$392, null], JAM.policy.p3);
    } else {
      v5082 = a$$392.currentStyle;
    }
    var j$$61 = v5082;
    var k$$39 = a$$392.offsetTop;
    var l$$51 = a$$392.offsetLeft;
    var v17740 = a$$392 = a$$392.parentNode;
    if (v17740) {
      v17740 = a$$392 !== h$$80;
    }
    var v12073 = v17740;
    if (v12073) {
      v12073 = a$$392 !== c$$196;
    }
    var v5084 = v12073;
    for (;v5084;) {
      var v12074 = f$$4.support.fixedPosition;
      if (v12074) {
        v12074 = j$$61.position === "fixed";
      }
      if (v12074) {
        break;
      }
      var v27581;
      if (i$$145) {
        v27581 = JAM.call(i$$145.getComputedStyle, i$$145, [a$$392, null], JAM.policy.p3);
      } else {
        v27581 = a$$392.currentStyle;
      }
      d$$156 = v27581;
      k$$39 = k$$39 - a$$392.scrollTop;
      l$$51 = l$$51 - a$$392.scrollLeft;
      var v21705 = a$$392 === e$$163;
      if (v21705) {
        k$$39 = k$$39 + a$$392.offsetTop;
        l$$51 = l$$51 + a$$392.offsetLeft;
        var v29849 = f$$4.support.doesNotAddBorder;
        if (v29849) {
          var v30135 = !f$$4.support.doesAddBorderForTableAndCells;
          if (!v30135) {
            v30135 = !JAM.call(cw.test, cw, [a$$392.nodeName], JAM.policy.p3);
          }
          v29849 = v30135;
        }
        var v29391 = v29849;
        if (v29391) {
          var v30390 = k$$39;
          var v30572 = JAM.call(parseFloat, null, [d$$156.borderTopWidth], JAM.policy.p3);
          if (!v30572) {
            v30572 = 0;
          }
          k$$39 = v30390 + v30572;
          var v30392 = l$$51;
          var v30573 = JAM.call(parseFloat, null, [d$$156.borderLeftWidth], JAM.policy.p3);
          if (!v30573) {
            v30573 = 0;
          }
          l$$51 = v30392 + v30573;
        }
        g$$97 = e$$163;
        e$$163 = a$$392.offsetParent;
      }
      var v21706 = f$$4.support.subtractsBorderForOverflowNotVisible;
      if (v21706) {
        v21706 = d$$156.overflow !== "visible";
      }
      var v17743 = v21706;
      if (v17743) {
        var v27583 = k$$39;
        var v28691 = JAM.call(parseFloat, null, [d$$156.borderTopWidth], JAM.policy.p3);
        if (!v28691) {
          v28691 = 0;
        }
        k$$39 = v27583 + v28691;
        var v27585 = l$$51;
        var v28692 = JAM.call(parseFloat, null, [d$$156.borderLeftWidth], JAM.policy.p3);
        if (!v28692) {
          v28692 = 0;
        }
        l$$51 = v27585 + v28692;
      }
      j$$61 = d$$156;
      var v17744 = a$$392 = a$$392.parentNode;
      if (v17744) {
        v17744 = a$$392 !== h$$80;
      }
      var v12075 = v17744;
      if (v12075) {
        v12075 = a$$392 !== c$$196;
      }
      v5084 = v12075;
    }
    var v12076 = j$$61.position === "relative";
    if (!v12076) {
      v12076 = j$$61.position === "static";
    }
    if (v12076) {
      k$$39 = k$$39 + h$$80.offsetTop;
      l$$51 = l$$51 + h$$80.offsetLeft;
    }
    var v12077 = f$$4.support.fixedPosition;
    if (v12077) {
      v12077 = j$$61.position === "fixed";
    }
    var v5086 = v12077;
    if (v5086) {
      k$$39 = k$$39 + JAM.call(Math.max, Math, [c$$196.scrollTop, h$$80.scrollTop], JAM.policy.p3);
      l$$51 = l$$51 + JAM.call(Math.max, Math, [c$$196.scrollLeft, h$$80.scrollLeft], JAM.policy.p3);
    }
    return{top:k$$39, left:l$$51};
  }
  function v1072(a$$391, b$$241, c$$195, d$$155) {
    try {
      d$$155 = JAM.call(a$$391.getBoundingClientRect, a$$391, [], JAM.policy.p3);
    } catch (e$$162) {
    }
    var v12078 = !d$$155;
    if (!v12078) {
      v12078 = !JAM.call(f$$4.contains, f$$4, [c$$195, a$$391], JAM.policy.p3);
    }
    if (v12078) {
      var v5087;
      if (d$$155) {
        v5087 = {top:d$$155.top, left:d$$155.left};
      } else {
        v5087 = {top:0, left:0};
      }
      return v5087;
    }
    var g$$96 = b$$241.body;
    var h$$79 = JAM.call(cy, null, [b$$241], JAM.policy.p3);
    var v12081 = c$$195.clientTop;
    if (!v12081) {
      v12081 = g$$96.clientTop;
    }
    var v5089 = v12081;
    if (!v5089) {
      v5089 = 0;
    }
    var i$$144 = v5089;
    var v12083 = c$$195.clientLeft;
    if (!v12083) {
      v12083 = g$$96.clientLeft;
    }
    var v5090 = v12083;
    if (!v5090) {
      v5090 = 0;
    }
    var j$$60 = v5090;
    var v12085 = h$$79.pageYOffset;
    if (!v12085) {
      var v17756 = f$$4.support.boxModel;
      if (v17756) {
        v17756 = c$$195.scrollTop;
      }
      v12085 = v17756;
    }
    var v5091 = v12085;
    if (!v5091) {
      v5091 = g$$96.scrollTop;
    }
    var k$$38 = v5091;
    var v12087 = h$$79.pageXOffset;
    if (!v12087) {
      var v17758 = f$$4.support.boxModel;
      if (v17758) {
        v17758 = c$$195.scrollLeft;
      }
      v12087 = v17758;
    }
    var v5092 = v12087;
    if (!v5092) {
      v5092 = g$$96.scrollLeft;
    }
    var l$$50 = v5092;
    var m$$26 = d$$155.top + k$$38 - i$$144;
    var n$$77 = d$$155.left + l$$50 - j$$60;
    return{top:m$$26, left:n$$77};
  }
  function v1071(a$$390) {
    function v1070(b$$240) {
      return a$$390 === b$$240.elem;
    }
    return JAM.call(f$$4.grep, f$$4, [f$$4.timers, v1070], JAM.policy.p3).length;
  }
  function v1069(a$$388, b$$239) {
    function v1068(a$$389) {
      JAM.call(f$$4.style, f$$4, [a$$389.elem, b$$239, JAM.call(Math.max, Math, [0, a$$389.now], JAM.policy.p3) + a$$389.unit], JAM.policy.p3);
      return;
    }
    var v5099 = JAM.call(b$$239.indexOf, b$$239, ["margin"], JAM.policy.p3);
    if (v5099) {
      JAM.set(f$$4.fx.step, b$$239, v1068, JAM.policy.p2);
    }
    return;
  }
  function v1067(a$$387) {
    var v5100;
    var v17762 = a$$387.elem.style;
    if (v17762) {
      v17762 = a$$387.elem.style[a$$387.prop] != null;
    }
    if (v17762) {
      v5100 = JAM.set(a$$387.elem.style, a$$387.prop, a$$387.now + a$$387.unit, JAM.policy.p2);
    } else {
      v5100 = JAM.set(a$$387.elem, a$$387.prop, a$$387.now, JAM.policy.p2);
    }
    v5100;
    return;
  }
  function v1066(a$$386) {
    JAM.call(f$$4.style, f$$4, [a$$386.elem, "opacity", a$$386.now], JAM.policy.p3);
    return;
  }
  function v1065() {
    JAM.call(clearInterval, null, [co], JAM.policy.p3);
    co = null;
    return;
  }
  function v1064() {
    var a$$385;
    var b$$238 = f$$4.timers;
    var c$$194 = 0;
    var v5103 = c$$194 < b$$238.length;
    for (;v5103;) {
      a$$385 = b$$238[c$$194];
      var v17766 = !JAM.call(a$$385, null, [], JAM.policy.p3);
      if (v17766) {
        v17766 = b$$238[c$$194] === a$$385;
      }
      var v12101 = v17766;
      if (v12101) {
        var v17767 = c$$194;
        c$$194 = c$$194 - 1;
        JAM.call(b$$238.splice, b$$238, [v17767, 1], JAM.policy.p3);
      }
      c$$194 = c$$194 + 1;
      v5103 = c$$194 < b$$238.length;
    }
    var v5104 = b$$238.length;
    if (!v5104) {
      var v12103 = f$$4.fx;
      JAM.call(v12103.stop, v12103, [], JAM.policy.p3);
    }
    return;
  }
  function v1063(a$$383) {
    function v1062(a$$384, b$$237) {
      JAM.set(h$$78.style, "overflow" + b$$237, i$$143.overflow[a$$384], JAM.policy.p2);
      return;
    }
    var b$$236;
    var c$$193;
    var d$$154;
    var v5107 = cq;
    if (!v5107) {
      v5107 = JAM.call(cr, null, [], JAM.policy.p3);
    }
    var e$$161 = v5107;
    var g$$95 = !0;
    var h$$78 = this.elem;
    var i$$143 = this.options;
    var v12107 = a$$383;
    if (!v12107) {
      v12107 = e$$161 >= i$$143.duration + this.startTime;
    }
    if (v12107) {
      this.now = this.end;
      this.pos = this.state = 1;
      JAM.call(this.update, this, [], JAM.policy.p3);
      JAM.set(i$$143.animatedProperties, this.prop, !0, JAM.policy.p2);
      for (b$$236 in i$$143.animatedProperties) {
        var v5108 = i$$143.animatedProperties[b$$236] !== !0;
        if (v5108) {
          g$$95 = !1;
        }
      }
      if (g$$95) {
        var v17771 = i$$143.overflow != null;
        if (v17771) {
          v17771 = !f$$4.support.shrinkWrapBlocks;
        }
        var v12112 = v17771;
        if (v12112) {
          JAM.call(f$$4.each, f$$4, [["", "X", "Y"], v1062], JAM.policy.p3);
        }
        var v12113 = i$$143.hide;
        if (v12113) {
          var v17773 = JAM.call(f$$4, null, [h$$78], JAM.policy.p3);
          JAM.call(v17773.hide, v17773, [], JAM.policy.p3);
        }
        var v12114 = i$$143.hide;
        if (!v12114) {
          v12114 = i$$143.show;
        }
        if (v12114) {
          for (b$$236 in i$$143.animatedProperties) {
            JAM.call(f$$4.style, f$$4, [h$$78, b$$236, i$$143.orig[b$$236]], JAM.policy.p3);
            JAM.call(f$$4.removeData, f$$4, [h$$78, "fxshow" + b$$236, !0], JAM.policy.p3);
            JAM.call(f$$4.removeData, f$$4, [h$$78, "toggle" + b$$236, !0], JAM.policy.p3);
          }
        }
        d$$154 = i$$143.complete;
        if (d$$154) {
          i$$143.complete = !1;
          JAM.call(d$$154.call, d$$154, [h$$78], JAM.policy.p3);
        }
      }
      return!1;
    }
    var v12117;
    if (i$$143.duration == Infinity) {
      v12117 = this.now = e$$161;
    } else {
      c$$193 = e$$161 - this.startTime;
      this.state = c$$193 / i$$143.duration;
      var v25844 = f$$4.easing;
      var v31339 = JAM.call(v25844[i$$143.animatedProperties[this.prop]], v25844, [this.state, c$$193, 0, 1, i$$143.duration], JAM.policy.p3);
      this.pos = v31339;
      v12117 = this.now = this.start + (this.end - this.start) * this.pos;
    }
    v12117;
    JAM.call(this.update, this, [], JAM.policy.p3);
    return!0;
  }
  function v1061() {
    var v17779 = this.options.orig;
    var v17780 = this.prop;
    var v21726 = JAM.call(f$$4._data, f$$4, [this.elem, "fxshow" + this.prop], JAM.policy.p3);
    if (!v21726) {
      v21726 = JAM.call(f$$4.style, f$$4, [this.elem, this.prop], JAM.policy.p3);
    }
    JAM.set(v17779, v17780, v21726, JAM.policy.p2);
    this.options.hide = !0;
    JAM.call(this.custom, this, [JAM.call(this.cur, this, [], JAM.policy.p3), 0], JAM.policy.p3);
    return;
  }
  function v1060() {
    var a$$382 = JAM.call(f$$4._data, f$$4, [this.elem, "fxshow" + this.prop], JAM.policy.p3);
    var v21727 = this.options.orig;
    var v21728 = this.prop;
    var v25856 = a$$382;
    if (!v25856) {
      v25856 = JAM.call(f$$4.style, f$$4, [this.elem, this.prop], JAM.policy.p3);
    }
    JAM.set(v21727, v21728, v25856, JAM.policy.p2);
    this.options.show = !0;
    var v17782;
    if (a$$382 !== b$$9) {
      v17782 = JAM.call(this.custom, this, [JAM.call(this.cur, this, [], JAM.policy.p3), a$$382], JAM.policy.p3);
    } else {
      var v25857;
      var v28693 = this.prop === "width";
      if (!v28693) {
        v28693 = this.prop === "height";
      }
      if (v28693) {
        v25857 = 1;
      } else {
        v25857 = 0;
      }
      v17782 = JAM.call(this.custom, this, [v25857, JAM.call(this.cur, this, [], JAM.policy.p3)], JAM.policy.p3);
    }
    v17782;
    var v12120 = JAM.call(f$$4, null, [this.elem], JAM.policy.p3);
    JAM.call(v12120.show, v12120, [], JAM.policy.p3);
    return;
  }
  function v1059(a$$380, c$$192, d$$153) {
    function v1058() {
      var v5115 = JAM.call(f$$4._data, f$$4, [e$$160.elem, "fxshow" + e$$160.prop], JAM.policy.p3) === b$$9;
      if (v5115) {
        var v12122;
        if (e$$160.options.hide) {
          v12122 = JAM.call(f$$4._data, f$$4, [e$$160.elem, "fxshow" + e$$160.prop, e$$160.start], JAM.policy.p3);
        } else {
          var v17789 = e$$160.options.show;
          if (v17789) {
            v17789 = JAM.call(f$$4._data, f$$4, [e$$160.elem, "fxshow" + e$$160.prop, e$$160.end], JAM.policy.p3);
          }
          v12122 = v17789;
        }
        v12122;
      }
      return;
    }
    function h$$77(a$$381) {
      return JAM.call(e$$160.step, e$$160, [a$$381], JAM.policy.p3);
    }
    var e$$160 = this;
    var g$$94 = f$$4.fx;
    var v29850 = cq;
    if (!v29850) {
      v29850 = JAM.call(cr, null, [], JAM.policy.p3);
    }
    this.startTime = v29850;
    this.end = c$$192;
    this.now = this.start = a$$380;
    this.pos = this.state = 0;
    var v28694 = d$$153;
    if (!v28694) {
      v28694 = this.unit;
    }
    var v27599 = v28694;
    if (!v27599) {
      var v28695;
      if (f$$4.cssNumber[this.prop]) {
        v28695 = "";
      } else {
        v28695 = "px";
      }
      v27599 = v28695;
    }
    this.unit = v27599;
    h$$77.queue = this.options.queue;
    h$$77.elem = this.elem;
    h$$77.saveState = v1058;
    var v21741 = JAM.call(h$$77, null, [], JAM.policy.p3);
    if (v21741) {
      var v25860 = f$$4.timers;
      v21741 = JAM.call(v25860.push, v25860, [h$$77], JAM.policy.p3);
    }
    var v17791 = v21741;
    if (v17791) {
      v17791 = !co;
    }
    var v12123 = v17791;
    if (v12123) {
      co = JAM.call(setInterval, null, [g$$94.tick, g$$94.interval], JAM.policy.p3);
    }
    return;
  }
  function v1057() {
    var v12124 = this.elem[this.prop] != null;
    if (v12124) {
      var v17795 = !this.elem.style;
      if (!v17795) {
        v17795 = this.elem.style[this.prop] == null;
      }
      v12124 = v17795;
    }
    if (v12124) {
      return this.elem[this.prop];
    }
    var a$$379;
    var b$$235 = JAM.call(f$$4.css, f$$4, [this.elem, this.prop], JAM.policy.p3);
    var v5121;
    if (JAM.call(isNaN, null, [a$$379 = JAM.call(parseFloat, null, [b$$235], JAM.policy.p3)], JAM.policy.p3)) {
      var v12125;
      var v21747 = !b$$235;
      if (!v21747) {
        v21747 = b$$235 === "auto";
      }
      if (v21747) {
        v12125 = 0;
      } else {
        v12125 = b$$235;
      }
      v5121 = v12125;
    } else {
      v5121 = a$$379;
    }
    return v5121;
  }
  function v1056() {
    var v12127 = this.options.step;
    if (v12127) {
      var v17799 = this.options.step;
      JAM.call(v17799.call, v17799, [this.elem, this.now, this], JAM.policy.p3);
    }
    var v17802 = f$$4.fx.step[this.prop];
    if (!v17802) {
      v17802 = f$$4.fx.step._default;
    }
    JAM.call(v17802, null, [this], JAM.policy.p3);
    return;
  }
  function v1055(a$$378, b$$234, c$$191) {
    this.options = b$$234;
    this.elem = a$$378;
    this.prop = c$$191;
    var v12129 = b$$234.orig;
    if (!v12129) {
      v12129 = {};
    }
    b$$234.orig = v12129;
    return;
  }
  function v1054(a$$377) {
    return-JAM.call(Math.cos, Math, [a$$377 * Math.PI], JAM.policy.p3) / 2 + .5;
  }
  function v1053(a$$376) {
    return a$$376;
  }
  function v1052(a$$374, b$$233, c$$190) {
    function v1051(a$$375) {
      var v12131 = JAM.call(f$$4.isFunction, f$$4, [d$$152.old], JAM.policy.p3);
      if (v12131) {
        var v17806 = d$$152.old;
        JAM.call(v17806.call, v17806, [this], JAM.policy.p3);
      }
      var v12132;
      if (d$$152.queue) {
        v12132 = JAM.call(f$$4.dequeue, f$$4, [this, d$$152.queue], JAM.policy.p3);
      } else {
        var v17808 = a$$375 !== !1;
        if (v17808) {
          v17808 = JAM.call(f$$4._unmark, f$$4, [this], JAM.policy.p3);
        }
        v12132 = v17808;
      }
      v12132;
      return;
    }
    var v5123;
    var v17810 = a$$374;
    if (v17810) {
      v17810 = typeof a$$374 == "object";
    }
    if (v17810) {
      v5123 = JAM.call(f$$4.extend, f$$4, [{}, a$$374], JAM.policy.p3);
    } else {
      var v21756 = c$$190;
      if (!v21756) {
        var v25868 = !c$$190;
        if (v25868) {
          v25868 = b$$233;
        }
        v21756 = v25868;
      }
      var v17811 = v21756;
      if (!v17811) {
        var v21757 = JAM.call(f$$4.isFunction, f$$4, [a$$374], JAM.policy.p3);
        if (v21757) {
          v21757 = a$$374;
        }
        v17811 = v21757;
      }
      var v12133 = v17811;
      var v17812 = c$$190 && b$$233;
      if (!v17812) {
        var v25870 = b$$233;
        if (v25870) {
          v25870 = !JAM.call(f$$4.isFunction, f$$4, [b$$233], JAM.policy.p3);
        }
        var v21759 = v25870;
        if (v21759) {
          v21759 = b$$233;
        }
        v17812 = v21759;
      }
      v5123 = {complete:v12133, duration:a$$374, easing:v17812};
    }
    var d$$152 = v5123;
    var v5124;
    if (f$$4.fx.off) {
      v5124 = 0;
    } else {
      var v12136;
      if (typeof d$$152.duration == "number") {
        v12136 = d$$152.duration;
      } else {
        var v17814;
        if (d$$152.duration in f$$4.fx.speeds) {
          v17814 = f$$4.fx.speeds[d$$152.duration];
        } else {
          v17814 = f$$4.fx.speeds._default;
        }
        v12136 = v17814;
      }
      v5124 = v12136;
    }
    d$$152.duration = v5124;
    var v12138 = d$$152.queue == null;
    if (!v12138) {
      v12138 = d$$152.queue === !0;
    }
    if (v12138) {
      d$$152.queue = "fx";
    }
    d$$152.old = d$$152.complete;
    d$$152.complete = v1051;
    return d$$152;
  }
  function v1050(a$$372, b$$232) {
    function v1049(a$$373, c$$189, d$$151) {
      return JAM.call(this.animate, this, [b$$232, a$$373, c$$189, d$$151], JAM.policy.p3);
    }
    JAM.set(f$$4.fn, a$$372, v1049, JAM.policy.p2);
    return;
  }
  function v1048(a$$370, c$$186, d$$150) {
    function v1047() {
      var b$$230;
      var c$$187 = !1;
      var e$$158 = f$$4.timers;
      var g$$93 = JAM.call(f$$4._data, f$$4, [this], JAM.policy.p3);
      if (!d$$150) {
        JAM.call(f$$4._unmark, f$$4, [!0, this], JAM.policy.p3);
      }
      if (a$$370 == null) {
        for (b$$230 in g$$93) {
          var v17820 = g$$93[b$$230];
          if (v17820) {
            v17820 = g$$93[b$$230].stop;
          }
          var v12141 = v17820;
          if (v12141) {
            v12141 = JAM.call(b$$230.indexOf, b$$230, [".run"], JAM.policy.p3) === b$$230.length - 4;
          }
          if (v12141) {
            var e$$inline_63 = g$$93[b$$230];
            JAM.call(f$$4.removeData, f$$4, [this, b$$230, !0], JAM.policy.p3);
            JAM.call(e$$inline_63.stop, e$$inline_63, [d$$150], JAM.policy.p3);
          }
        }
      } else {
        var v12143 = g$$93[b$$230 = a$$370 + ".run"];
        if (v12143) {
          v12143 = g$$93[b$$230].stop;
        }
        if (v12143) {
          var e$$inline_68 = g$$93[b$$230];
          JAM.call(f$$4.removeData, f$$4, [this, b$$230, !0], JAM.policy.p3);
          JAM.call(e$$inline_68.stop, e$$inline_68, [d$$150], JAM.policy.p3);
        }
      }
      b$$230 = e$$158.length;
      var v5131 = b$$230;
      b$$230 = b$$230 - 1;
      for (;v5131;) {
        var v12145 = e$$158[b$$230].elem === this;
        if (v12145) {
          var v17826 = a$$370 == null;
          if (!v17826) {
            v17826 = e$$158[b$$230].queue === a$$370;
          }
          v12145 = v17826;
        }
        var v5130 = v12145;
        if (v5130) {
          var v21771;
          if (d$$150) {
            v21771 = JAM.call(e$$158[b$$230], e$$158, [!0], JAM.policy.p3);
          } else {
            var v25878 = e$$158[b$$230];
            v21771 = JAM.call(v25878.saveState, v25878, [], JAM.policy.p3);
          }
          v21771;
          c$$187 = !0;
          JAM.call(e$$158.splice, e$$158, [b$$230, 1], JAM.policy.p3);
        }
        v5131 = b$$230;
        b$$230 = b$$230 - 1;
      }
      var v12146 = !d$$150;
      if (!v12146) {
        v12146 = !c$$187;
      }
      var v5132 = v12146;
      if (v5132) {
        JAM.call(f$$4.dequeue, f$$4, [this, a$$370], JAM.policy.p3);
      }
      return;
    }
    var v12147 = typeof a$$370 != "string";
    if (v12147) {
      d$$150 = c$$186;
      c$$186 = a$$370;
      a$$370 = b$$9;
    }
    var v17829 = c$$186;
    if (v17829) {
      v17829 = a$$370 !== !1;
    }
    var v12148 = v17829;
    if (v12148) {
      JAM.call(this.queue, this, [a$$370 || "fx", []], JAM.policy.p3);
    }
    return JAM.call(this.each, this, [v1047], JAM.policy.p3);
  }
  function v1046(a$$369, b$$228, c$$184, d$$148) {
    function g$$91() {
      var v5133 = e$$157.queue === !1;
      if (v5133) {
        JAM.call(f$$4._mark, f$$4, [this], JAM.policy.p3);
      }
      var b$$229 = JAM.call(f$$4.extend, f$$4, [{}, e$$157], JAM.policy.p3);
      var c$$185 = this.nodeType === 1;
      var v5135 = c$$185;
      if (v5135) {
        var v12151 = JAM.call(f$$4, null, [this], JAM.policy.p3);
        v5135 = JAM.call(v12151.is, v12151, [":hidden"], JAM.policy.p3);
      }
      var d$$149 = v5135;
      var g$$92;
      var h$$75;
      var i$$142;
      var j$$59;
      var k$$37;
      var l$$49;
      var m$$25;
      var n$$76;
      var o$$15;
      var p$$37;
      var q$$14;
      b$$229.animatedProperties = {};
      for (i$$142 in a$$369) {
        g$$92 = JAM.call(f$$4.camelCase, f$$4, [i$$142], JAM.policy.p3);
        var v12152 = i$$142 !== g$$92;
        if (v12152) {
          JAM.set(a$$369, g$$92, a$$369[i$$142], JAM.policy.p2);
          delete a$$369[i$$142];
        }
        var v12153 = k$$37 = f$$4.cssHooks[g$$92];
        if (v12153) {
          v12153 = "expand" in k$$37;
        }
        if (v12153) {
          l$$49 = JAM.call(k$$37.expand, k$$37, [a$$369[g$$92]], JAM.policy.p3);
          delete a$$369[g$$92];
          for (i$$142 in l$$49) {
            var v5136 = i$$142 in a$$369;
            if (!v5136) {
              JAM.set(a$$369, i$$142, l$$49[i$$142], JAM.policy.p2);
            }
          }
        }
      }
      for (g$$92 in a$$369) {
        h$$75 = a$$369[g$$92];
        var v12156;
        if (JAM.call(f$$4.isArray, f$$4, [h$$75], JAM.policy.p3)) {
          JAM.set(b$$229.animatedProperties, g$$92, h$$75[1], JAM.policy.p2);
          v12156 = h$$75 = JAM.set(a$$369, g$$92, h$$75[0], JAM.policy.p2);
        } else {
          var v17832 = b$$229.animatedProperties;
          var v27603 = b$$229.specialEasing;
          if (v27603) {
            v27603 = b$$229.specialEasing[g$$92];
          }
          var v25879 = v27603;
          if (!v25879) {
            v25879 = b$$229.easing;
          }
          var v21774 = v25879;
          if (!v21774) {
            v21774 = "swing";
          }
          v12156 = JAM.set(v17832, g$$92, v21774, JAM.policy.p2);
        }
        v12156;
        var v17834 = h$$75 === "hide";
        if (v17834) {
          v17834 = d$$149;
        }
        var v12157 = v17834;
        if (!v12157) {
          var v17835 = h$$75 === "show";
          if (v17835) {
            v17835 = !d$$149;
          }
          v12157 = v17835;
        }
        if (v12157) {
          var v5138 = b$$229.complete;
          return JAM.call(v5138.call, v5138, [this], JAM.policy.p3);
        }
        var v12158 = c$$185;
        if (v12158) {
          var v17837 = g$$92 === "height";
          if (!v17837) {
            v17837 = g$$92 === "width";
          }
          v12158 = v17837;
        }
        var v5140 = v12158;
        if (v5140) {
          b$$229.overflow = [this.style.overflow, this.style.overflowX, this.style.overflowY];
          var v21779 = JAM.call(f$$4.css, f$$4, [this, "display"], JAM.policy.p3) === "inline";
          if (v21779) {
            v21779 = JAM.call(f$$4.css, f$$4, [this, "float"], JAM.policy.p3) === "none";
          }
          var v17841 = v21779;
          if (v17841) {
            var v21780;
            var v27605 = !f$$4.support.inlineBlockNeedsLayout;
            if (!v27605) {
              v27605 = JAM.call(cu, null, [this.nodeName], JAM.policy.p3) === "inline";
            }
            if (v27605) {
              v21780 = this.style.display = "inline-block";
            } else {
              v21780 = this.style.zoom = 1;
            }
            v21780;
          }
        }
      }
      var v5141 = b$$229.overflow != null;
      if (v5141) {
        this.style.overflow = "hidden";
      }
      for (i$$142 in a$$369) {
        j$$59 = JAM.new(f$$4.fx, [this, b$$229, i$$142], JAM.policy.p3);
        h$$75 = a$$369[i$$142];
        var v12161;
        if (JAM.call(cm.test, cm, [h$$75], JAM.policy.p3)) {
          var v21781 = JAM.call(f$$4._data, f$$4, [this, "toggle" + i$$142], JAM.policy.p3);
          if (!v21781) {
            var v25887;
            if (h$$75 === "toggle") {
              var v27606;
              if (d$$149) {
                v27606 = "show";
              } else {
                v27606 = "hide";
              }
              v25887 = v27606;
            } else {
              v25887 = 0;
            }
            v21781 = v25887;
          }
          q$$14 = v21781;
          var v21782;
          if (q$$14) {
            var v27608 = "toggle" + i$$142;
            var v28701;
            if (q$$14 === "show") {
              v28701 = "hide";
            } else {
              v28701 = "show";
            }
            JAM.call(f$$4._data, f$$4, [this, v27608, v28701], JAM.policy.p3);
            v21782 = JAM.call(j$$59[q$$14], j$$59, [], JAM.policy.p3);
          } else {
            v21782 = JAM.call(j$$59[h$$75], j$$59, [], JAM.policy.p3);
          }
          v12161 = v21782;
        } else {
          m$$25 = JAM.call(cn.exec, cn, [h$$75], JAM.policy.p3);
          n$$76 = JAM.call(j$$59.cur, j$$59, [], JAM.policy.p3);
          var v21783;
          if (m$$25) {
            o$$15 = JAM.call(parseFloat, null, [m$$25[2]], JAM.policy.p3);
            var v29854 = m$$25[3];
            if (!v29854) {
              var v30137;
              if (f$$4.cssNumber[i$$142]) {
                v30137 = "";
              } else {
                v30137 = "px";
              }
              v29854 = v30137;
            }
            p$$37 = v29854;
            var v29404 = p$$37 !== "px";
            if (v29404) {
              JAM.call(f$$4.style, f$$4, [this, i$$142, (o$$15 || 1) + p$$37], JAM.policy.p3);
              n$$76 = (o$$15 || 1) / JAM.call(j$$59.cur, j$$59, [], JAM.policy.p3) * n$$76;
              JAM.call(f$$4.style, f$$4, [this, i$$142, n$$76 + p$$37], JAM.policy.p3);
            }
            var v28702 = m$$25[1];
            if (v28702) {
              var v30140;
              if (m$$25[1] === "-=") {
                v30140 = -1;
              } else {
                v30140 = 1;
              }
              o$$15 = v30140 * o$$15 + n$$76;
            }
            v21783 = JAM.call(j$$59.custom, j$$59, [n$$76, o$$15, p$$37], JAM.policy.p3);
          } else {
            v21783 = JAM.call(j$$59.custom, j$$59, [n$$76, h$$75, ""], JAM.policy.p3);
          }
          v12161 = v21783;
        }
        v12161;
      }
      return!0;
    }
    var e$$157 = JAM.call(f$$4.speed, f$$4, [b$$228, c$$184, d$$148], JAM.policy.p3);
    if (JAM.call(f$$4.isEmptyObject, f$$4, [a$$369], JAM.policy.p3)) {
      return JAM.call(this.each, this, [e$$157.complete, [!1]], JAM.policy.p3);
    }
    a$$369 = JAM.call(f$$4.extend, f$$4, [{}, a$$369], JAM.policy.p3);
    var v5145;
    if (e$$157.queue === !1) {
      v5145 = JAM.call(this.each, this, [g$$91], JAM.policy.p3);
    } else {
      v5145 = JAM.call(this.queue, this, [e$$157.queue, g$$91], JAM.policy.p3);
    }
    return v5145;
  }
  function v1045(a$$368, b$$227, c$$183, d$$147) {
    var v21784 = JAM.call(this.filter, this, [":hidden"], JAM.policy.p3);
    var v17846 = JAM.call(v21784.css, v21784, ["opacity", 0], JAM.policy.p3);
    var v12165 = JAM.call(v17846.show, v17846, [], JAM.policy.p3);
    var v5146 = JAM.call(v12165.end, v12165, [], JAM.policy.p3);
    return JAM.call(v5146.animate, v5146, [{opacity:b$$227}, a$$368, c$$183, d$$147], JAM.policy.p3);
  }
  function v1044(a$$367, b$$225, c$$182) {
    function v1043() {
      var v5148;
      if (d$$146) {
        v5148 = a$$367;
      } else {
        var v12166 = JAM.call(f$$4, null, [this], JAM.policy.p3);
        v5148 = JAM.call(v12166.is, v12166, [":hidden"], JAM.policy.p3);
      }
      var b$$226 = v5148;
      var v5149 = JAM.call(f$$4, null, [this], JAM.policy.p3);
      var v12167;
      if (b$$226) {
        v12167 = "show";
      } else {
        v12167 = "hide";
      }
      JAM.call(v5149[v12167], v5149, [], JAM.policy.p3);
      return;
    }
    var d$$146 = typeof a$$367 == "boolean";
    var v5152;
    var v17847 = JAM.call(f$$4.isFunction, f$$4, [a$$367], JAM.policy.p3);
    if (v17847) {
      v17847 = JAM.call(f$$4.isFunction, f$$4, [b$$225], JAM.policy.p3);
    }
    if (v17847) {
      var v12168 = this._toggle;
      v5152 = JAM.call(v12168.apply, v12168, [this, arguments], JAM.policy.p3);
    } else {
      var v12169;
      var v21785 = a$$367 == null;
      if (!v21785) {
        v21785 = d$$146;
      }
      if (v21785) {
        v12169 = JAM.call(this.each, this, [v1043], JAM.policy.p3);
      } else {
        v12169 = JAM.call(this.animate, this, [JAM.call(ct, null, ["toggle", 3], JAM.policy.p3), a$$367, b$$225, c$$182], JAM.policy.p3);
      }
      v5152 = v12169;
    }
    v5152;
    return this;
  }
  function v1042(a$$366, b$$224, c$$181) {
    var v12171 = a$$366;
    if (!v12171) {
      v12171 = a$$366 === 0;
    }
    if (v12171) {
      return JAM.call(this.animate, this, [JAM.call(ct, null, ["hide", 3], JAM.policy.p3), a$$366, b$$224, c$$181], JAM.policy.p3);
    }
    var d$$145;
    var e$$156;
    var g$$90 = 0;
    var h$$74 = this.length;
    var v5155 = g$$90 < h$$74;
    for (;v5155;) {
      d$$145 = this[g$$90];
      var v12172 = d$$145.style;
      if (v12172) {
        e$$156 = JAM.call(f$$4.css, f$$4, [d$$145, "display"], JAM.policy.p3);
        var v25890 = e$$156 !== "none";
        if (v25890) {
          v25890 = !JAM.call(f$$4._data, f$$4, [d$$145, "olddisplay"], JAM.policy.p3);
        }
        var v21786 = v25890;
        if (v21786) {
          JAM.call(f$$4._data, f$$4, [d$$145, "olddisplay", e$$156], JAM.policy.p3);
        }
      }
      g$$90 = g$$90 + 1;
      v5155 = g$$90 < h$$74;
    }
    g$$90 = 0;
    var v5157 = g$$90 < h$$74;
    for (;v5157;) {
      var v5156 = this[g$$90].style;
      if (v5156) {
        this[g$$90].style.display = "none";
      }
      g$$90 = g$$90 + 1;
      v5157 = g$$90 < h$$74;
    }
    return this;
  }
  function v1041(a$$365, b$$223, c$$180) {
    var d$$144;
    var e$$155;
    var v12175 = a$$365;
    if (!v12175) {
      v12175 = a$$365 === 0;
    }
    if (v12175) {
      return JAM.call(this.animate, this, [JAM.call(ct, null, ["show", 3], JAM.policy.p3), a$$365, b$$223, c$$180], JAM.policy.p3);
    }
    var g$$89 = 0;
    var h$$73 = this.length;
    var v5160 = g$$89 < h$$73;
    for (;v5160;) {
      d$$144 = this[g$$89];
      var v12176 = d$$144.style;
      if (v12176) {
        e$$155 = d$$144.style.display;
        var v27611 = !JAM.call(f$$4._data, f$$4, [d$$144, "olddisplay"], JAM.policy.p3);
        if (v27611) {
          v27611 = e$$155 === "none";
        }
        var v25892 = v27611;
        if (v25892) {
          e$$155 = d$$144.style.display = "";
        }
        var v27613 = e$$155 === "";
        if (v27613) {
          v27613 = JAM.call(f$$4.css, f$$4, [d$$144, "display"], JAM.policy.p3) === "none";
        }
        var v25893 = v27613;
        if (!v25893) {
          v25893 = !JAM.call(f$$4.contains, f$$4, [d$$144.ownerDocument.documentElement, d$$144], JAM.policy.p3);
        }
        var v21787 = v25893;
        if (v21787) {
          JAM.call(f$$4._data, f$$4, [d$$144, "olddisplay", JAM.call(cu, null, [d$$144.nodeName], JAM.policy.p3)], JAM.policy.p3);
        }
      }
      g$$89 = g$$89 + 1;
      v5160 = g$$89 < h$$73;
    }
    g$$89 = 0;
    var v5165 = g$$89 < h$$73;
    for (;v5165;) {
      d$$144 = this[g$$89];
      if (d$$144.style) {
        e$$155 = d$$144.style.display;
        var v12177 = e$$155 === "";
        if (!v12177) {
          v12177 = e$$155 === "none";
        }
        if (v12177) {
          var v5162 = d$$144.style;
          var v12178 = JAM.call(f$$4._data, f$$4, [d$$144, "olddisplay"], JAM.policy.p3);
          if (!v12178) {
            v12178 = "";
          }
          v5162.display = v12178;
        }
      }
      g$$89 = g$$89 + 1;
      v5165 = g$$89 < h$$73;
    }
    return this;
  }
  function v1040(c$$179) {
    function v1039() {
      if (d$$143) {
        JAM.call(d$$143, null, [0, 1], JAM.policy.p3);
      }
      return;
    }
    function v1038(e$$153, g$$88) {
      function v1037(a$$363, e$$154) {
        var j$$58;
        var k$$36;
        var l$$48;
        var m$$24;
        var n$$75;
        try {
          var v12179 = d$$143;
          if (v12179) {
            var v17855 = e$$154;
            if (!v17855) {
              v17855 = h$$72.readyState === 4;
            }
            v12179 = v17855;
          }
          if (v12179) {
            d$$143 = b$$9;
            if (i$$141) {
              JAM.set(h$$72, "onreadystatechange", f$$4.noop);
              if (ce) {
                delete cg[i$$141];
              }
            }
            if (e$$154) {
              var v5166 = h$$72.readyState !== 4;
              if (v5166) {
                JAM.call(h$$72.abort, h$$72, [], JAM.policy.p3);
              }
            } else {
              j$$58 = h$$72.status;
              l$$48 = JAM.call(h$$72.getAllResponseHeaders, h$$72, [], JAM.policy.p3);
              m$$24 = {};
              n$$75 = h$$72.responseXML;
              var v17856 = n$$75;
              if (v17856) {
                v17856 = n$$75.documentElement;
              }
              var v12181 = v17856;
              if (v12181) {
                m$$24.xml = n$$75;
              }
              try {
                m$$24.text = h$$72.responseText;
              } catch (a$$364) {
              }
              try {
                k$$36 = h$$72.statusText;
              } catch (o$$14) {
                k$$36 = "";
              }
              var v5167;
              var v21790 = !j$$58;
              if (v21790) {
                v21790 = c$$179.isLocal;
              }
              var v17857 = v21790;
              if (v17857) {
                v17857 = !c$$179.crossDomain;
              }
              if (v17857) {
                var v12182;
                if (m$$24.text) {
                  v12182 = 200;
                } else {
                  v12182 = 404;
                }
                v5167 = j$$58 = v12182;
              } else {
                var v12183 = j$$58 === 1223;
                if (v12183) {
                  v12183 = j$$58 = 204;
                }
                v5167 = v12183;
              }
              v5167;
            }
          }
        } catch (p$$36) {
          if (!e$$154) {
            JAM.call(g$$88, null, [-1, p$$36], JAM.policy.p3);
          }
        }
        if (m$$24) {
          JAM.call(g$$88, null, [j$$58, k$$36, m$$24, l$$48], JAM.policy.p3);
        }
        return;
      }
      var h$$72 = JAM.call(c$$179.xhr, c$$179, [], JAM.policy.p3);
      var i$$141;
      var j$$57;
      var v5169;
      if (c$$179.username) {
        v5169 = JAM.call(h$$72.open, h$$72, [c$$179.type, c$$179.url, c$$179.async, c$$179.username, c$$179.password], JAM.policy.p3);
      } else {
        v5169 = JAM.call(h$$72.open, h$$72, [c$$179.type, c$$179.url, c$$179.async], JAM.policy.p3);
      }
      v5169;
      if (c$$179.xhrFields) {
        for (j$$57 in c$$179.xhrFields) {
          JAM.set(h$$72, j$$57, c$$179.xhrFields[j$$57], JAM.policy.p2);
        }
      }
      var v17859 = c$$179.mimeType;
      if (v17859) {
        v17859 = h$$72.overrideMimeType;
      }
      var v12195 = v17859;
      if (v12195) {
        JAM.call(h$$72.overrideMimeType, h$$72, [c$$179.mimeType], JAM.policy.p3);
      }
      var v17861 = !c$$179.crossDomain;
      if (v17861) {
        v17861 = !e$$153["X-Requested-With"];
      }
      var v12196 = v17861;
      if (v12196) {
        e$$153["X-Requested-With"] = "XMLHttpRequest";
      }
      try {
        for (j$$57 in e$$153) {
          JAM.call(h$$72.setRequestHeader, h$$72, [j$$57, e$$153[j$$57]], JAM.policy.p3);
        }
      } catch (k$$35) {
      }
      var v25895 = c$$179.hasContent;
      if (v25895) {
        v25895 = c$$179.data;
      }
      var v21794 = v25895;
      if (!v21794) {
        v21794 = null;
      }
      JAM.call(h$$72.send, h$$72, [v21794], JAM.policy.p3);
      d$$143 = v1037;
      var v12197;
      var v21795 = !c$$179.async;
      if (!v21795) {
        v21795 = h$$72.readyState === 4;
      }
      if (v21795) {
        v12197 = JAM.call(d$$143, null, [], JAM.policy.p3);
      } else {
        i$$141 = cf = cf + 1;
        if (ce) {
          if (!cg) {
            cg = {};
            var v29856 = JAM.call(f$$4, null, [a$$13], JAM.policy.p3);
            JAM.call(v29856.unload, v29856, [ce], JAM.policy.p3);
          }
          JAM.set(cg, i$$141, d$$143, JAM.policy.p2);
        }
        v12197 = JAM.set(h$$72, "onreadystatechange", d$$143);
      }
      v12197;
      return;
    }
    var v12198 = !c$$179.crossDomain;
    if (!v12198) {
      v12198 = f$$4.support.cors;
    }
    if (v12198) {
      var d$$143;
      return{send:v1038, abort:v1039};
    }
    return;
  }
  function v1036(a$$362) {
    var v5175 = f$$4.support;
    var v12199 = !!a$$362;
    var v17868 = !!a$$362;
    if (v17868) {
      v17868 = "withCredentials" in a$$362;
    }
    JAM.call(f$$4.extend, f$$4, [v5175, {ajax:v12199, cors:v17868}], JAM.policy.p3);
    return;
  }
  function v1035() {
    var JSCompiler_temp$$10;
    var v12201 = !this.isLocal;
    if (v12201) {
      v12201 = JAM.call(ch$$14, null, [], JAM.policy.p3);
    }
    if (JSCompiler_temp$$10 = v12201) {
    } else {
      JSCompiler_inline_label_ci_59: {
        try {
          JSCompiler_temp$$10 = JAM.new(a$$13.ActiveXObject, ["Microsoft.XMLHTTP"], JAM.policy.p3);
          break JSCompiler_inline_label_ci_59;
        } catch (b$$inline_58) {
        }
        JSCompiler_temp$$10 = void 0;
      }
    }
    return JSCompiler_temp$$10;
  }
  function v1034() {
    var a$$361;
    for (a$$361 in cg) {
      JAM.call(cg[a$$361], cg, [0, 1], JAM.policy.p3);
    }
    return;
  }
  function v1033(a$$359) {
    function v1032() {
      if (d$$142) {
        JAM.call(d$$142.onload, d$$142, [0, 1], JAM.policy.p3);
      }
      return;
    }
    function v1031(f$$46, g$$87) {
      function v1030(a$$360, c$$178) {
        var v17870 = c$$178;
        if (!v17870) {
          v17870 = !d$$142.readyState;
        }
        var v12202 = v17870;
        if (!v12202) {
          v12202 = JAM.call(/loaded|complete/.test, /loaded|complete/, [d$$142.readyState], JAM.policy.p3);
        }
        if (v12202) {
          JAM.set(d$$142, "onload", JAM.set(d$$142, "onreadystatechange", null));
          var v25900 = e$$152;
          if (v25900) {
            v25900 = d$$142.parentNode;
          }
          var v21799 = v25900;
          if (v21799) {
            JAM.call(e$$152.removeChild, e$$152, [d$$142], JAM.policy.p3);
          }
          d$$142 = b$$9;
          if (!c$$178) {
            JAM.call(g$$87, null, [200, "success"], JAM.policy.p3);
          }
        }
        return;
      }
      d$$142 = JAM.call(c$$5.createElement, c$$5, ["script"], JAM.policy.p3);
      d$$142.async = "async";
      var v25901 = a$$359.scriptCharset;
      if (v25901) {
        d$$142.charset = a$$359.scriptCharset;
      }
      d$$142.src = a$$359.url;
      JAM.set(d$$142, "onload", JAM.set(d$$142, "onreadystatechange", v1030));
      JAM.call(e$$152.insertBefore, e$$152, [d$$142, e$$152.firstChild], JAM.policy.p3);
      return;
    }
    if (a$$359.crossDomain) {
      var d$$142;
      var v12204 = c$$5.head;
      if (!v12204) {
        v12204 = JAM.call(c$$5.getElementsByTagName, c$$5, ["head"], JAM.policy.p3)[0];
      }
      var v5180 = v12204;
      if (!v5180) {
        v5180 = c$$5.documentElement;
      }
      var e$$152 = v5180;
      return{send:v1031, abort:v1032};
    }
    return;
  }
  function v1029(a$$358) {
    var v12206 = a$$358.cache === b$$9;
    if (v12206) {
      a$$358.cache = !1;
    }
    var v12207 = a$$358.crossDomain;
    if (v12207) {
      a$$358.type = "GET";
      a$$358.global = !1;
    }
    return;
  }
  function v1028(a$$357) {
    JAM.call(f$$4.globalEval, f$$4, [a$$357], JAM.policy.p3);
    return a$$357;
  }
  function v1027(b$$222, c$$177, d$$141) {
    function v1026() {
      if (!g$$86) {
        JAM.call(f$$4.error, f$$4, [h$$71 + " was not called"], JAM.policy.p3);
      }
      return g$$86[0];
    }
    function v1025() {
      JAM.set(a$$13, h$$71, i$$140, JAM.policy.p2);
      var v17877 = g$$86;
      if (v17877) {
        v17877 = JAM.call(f$$4.isFunction, f$$4, [i$$140], JAM.policy.p3);
      }
      var v12210 = v17877;
      if (v12210) {
        JAM.call(a$$13[h$$71], a$$13, [g$$86[0]], JAM.policy.p3);
      }
      return;
    }
    function v1024(a$$356) {
      g$$86 = [a$$356];
      return;
    }
    var v5182 = typeof b$$222.data == "string";
    if (v5182) {
      v5182 = JAM.call(/^application\/x\-www\-form\-urlencoded/.test, /^application\/x\-www\-form\-urlencoded/, [b$$222.contentType], JAM.policy.p3);
    }
    var e$$151 = v5182;
    var v12213 = b$$222.dataTypes[0] === "jsonp";
    if (!v12213) {
      var v17881 = b$$222.jsonp !== !1;
      if (v17881) {
        var v21803 = JAM.call(cd.test, cd, [b$$222.url], JAM.policy.p3);
        if (!v21803) {
          var v25903 = e$$151;
          if (v25903) {
            v25903 = JAM.call(cd.test, cd, [b$$222.data], JAM.policy.p3);
          }
          v21803 = v25903;
        }
        v17881 = v21803;
      }
      v12213 = v17881;
    }
    if (v12213) {
      var g$$86;
      var v5183 = b$$222;
      var v12214;
      if (JAM.call(f$$4.isFunction, f$$4, [b$$222.jsonpCallback], JAM.policy.p3)) {
        v12214 = JAM.call(b$$222.jsonpCallback, b$$222, [], JAM.policy.p3);
      } else {
        v12214 = b$$222.jsonpCallback;
      }
      var h$$71 = v5183.jsonpCallback = v12214;
      var i$$140 = a$$13[h$$71];
      var j$$56 = b$$222.url;
      var k$$34 = b$$222.data;
      var l$$47 = "$1" + h$$71 + "$2";
      var v28706 = b$$222.jsonp !== !1;
      if (v28706) {
        j$$56 = JAM.call(j$$56.replace, j$$56, [cd, l$$47], JAM.policy.p3);
        var v29857 = b$$222.url === j$$56;
        if (v29857) {
          if (e$$151) {
            k$$34 = JAM.call(k$$34.replace, k$$34, [cd, l$$47], JAM.policy.p3);
          }
          var v30398 = b$$222.data === k$$34;
          if (v30398) {
            var v30714 = j$$56;
            var v30992;
            if (JAM.call(/\?/.test, /\?/, [j$$56], JAM.policy.p3)) {
              v30992 = "&";
            } else {
              v30992 = "?";
            }
            j$$56 = v30714 + (v30992 + b$$222.jsonp + "=" + h$$71);
          }
        }
      }
      b$$222.url = j$$56;
      b$$222.data = k$$34;
      JAM.set(a$$13, h$$71, v1024, JAM.policy.p2);
      JAM.call(d$$141.always, d$$141, [v1025], JAM.policy.p3);
      b$$222.converters["script json"] = v1026;
      var v12215 = b$$222.dataTypes;
      introspect(JAM.policy.p2) {
        v12215[0] = "json";
      }
      return "script";
    }
    return;
  }
  function v1023() {
    var v5186 = f$$4.expando + "_";
    var v5187 = cc;
    cc = cc + 1;
    return v5186 + v5187;
  }
  function v1022(a$$354, c$$176) {
    function v1021() {
      JAM.call(e$$150, null, [this.name, this.value], JAM.policy.p3);
      return;
    }
    function e$$150(a$$355, b$$221) {
      var v12217;
      if (JAM.call(f$$4.isFunction, f$$4, [b$$221], JAM.policy.p3)) {
        v12217 = JAM.call(b$$221, null, [], JAM.policy.p3);
      } else {
        v12217 = b$$221;
      }
      b$$221 = v12217;
      var v12218 = d$$140;
      var v12219 = d$$140.length;
      var v17886 = JAM.call(encodeURIComponent, null, [a$$355], JAM.policy.p3) + "=";
      var v17887 = JAM.call(encodeURIComponent, null, [b$$221], JAM.policy.p3);
      introspect(JAM.policy.p2) {
        v12218[v12219] = v17886 + v17887;
      }
      return;
    }
    var d$$140 = [];
    var v5190 = c$$176 === b$$9;
    if (v5190) {
      c$$176 = f$$4.ajaxSettings.traditional;
    }
    var v12221 = JAM.call(f$$4.isArray, f$$4, [a$$354], JAM.policy.p3);
    if (!v12221) {
      var v17888 = a$$354.jquery;
      if (v17888) {
        v17888 = !JAM.call(f$$4.isPlainObject, f$$4, [a$$354], JAM.policy.p3);
      }
      v12221 = v17888;
    }
    if (v12221) {
      JAM.call(f$$4.each, f$$4, [a$$354, v1021], JAM.policy.p3);
    } else {
      var g$$85;
      for (g$$85 in a$$354) {
        JAM.call(b_, null, [g$$85, a$$354[g$$85], c$$176, e$$150], JAM.policy.p3);
      }
    }
    var v5193 = JAM.call(d$$140.join, d$$140, ["&"], JAM.policy.p3);
    return JAM.call(v5193.replace, v5193, [bC, "+"], JAM.policy.p3);
  }
  function v1020(a$$347, c$$172) {
    function v1019() {
      JAM.call(v$$9.abort, v$$9, ["timeout"], JAM.policy.p3);
      return;
    }
    function v1018(a$$353) {
      if (a$$353) {
        var b$$220;
        if (s$$25 < 2) {
          for (b$$220 in a$$353) {
            JAM.set(j$$55, b$$220, [j$$55[b$$220], a$$353[b$$220]], JAM.policy.p2);
          }
        } else {
          b$$220 = a$$353[v$$9.status];
          JAM.call(v$$9.then, v$$9, [b$$220, b$$220], JAM.policy.p3);
        }
      }
      return this;
    }
    function v1017(a$$352) {
      a$$352 = a$$352 || "abort";
      if (p$$35) {
        JAM.call(p$$35.abort, p$$35, [a$$352], JAM.policy.p3);
      }
      JAM.call(w$$15, null, [0, a$$352], JAM.policy.p3);
      return this;
    }
    function v1016(a$$351) {
      if (!s$$25) {
        d$$139.mimeType = a$$351;
      }
      return this;
    }
    function v1015(a$$350) {
      var c$$175;
      if (s$$25 === 2) {
        if (!o$$12) {
          o$$12 = {};
          var v5198 = c$$175 = JAM.call(bG.exec, bG, [n$$74], JAM.policy.p3);
          for (;v5198;) {
            var v12224 = c$$175[1];
            JAM.set(o$$12, JAM.call(v12224.toLowerCase, v12224, [], JAM.policy.p3), c$$175[2], JAM.policy.p2);
            v5198 = c$$175 = JAM.call(bG.exec, bG, [n$$74], JAM.policy.p3);
          }
        }
        c$$175 = o$$12[JAM.call(a$$350.toLowerCase, a$$350, [], JAM.policy.p3)];
      }
      var v5203;
      if (c$$175 === b$$9) {
        v5203 = null;
      } else {
        v5203 = c$$175;
      }
      return v5203;
    }
    function v1014() {
      var v5204;
      if (s$$25 === 2) {
        v5204 = n$$74;
      } else {
        v5204 = null;
      }
      return v5204;
    }
    function v1013(a$$349, b$$219) {
      if (!s$$25) {
        var c$$174 = JAM.call(a$$349.toLowerCase, a$$349, [], JAM.policy.p3);
        var v12227 = m$$22[c$$174];
        if (!v12227) {
          v12227 = a$$349;
        }
        a$$349 = JAM.set(m$$22, c$$174, v12227, JAM.policy.p2);
        JAM.set(l$$45, a$$349, b$$219, JAM.policy.p2);
      }
      return this;
    }
    function w$$15(a$$348, c$$173, l$$46, m$$23) {
      if (s$$25 !== 2) {
        s$$25 = 2;
        if (q$$13) {
          JAM.call(clearTimeout, null, [q$$13], JAM.policy.p3);
        }
        p$$35 = b$$9;
        n$$74 = m$$23 || "";
        var v12228;
        if (a$$348 > 0) {
          v12228 = 4;
        } else {
          v12228 = 0;
        }
        v$$9.readyState = v12228;
        var o$$13;
        var r$$16;
        var u$$9;
        var w$$16 = c$$173;
        var JSCompiler_temp$$6;
        if (l$$46) {
          JSCompiler_inline_label_ca_42: {
            var a$$inline_32 = d$$139;
            var c$$inline_33 = v$$9;
            var d$$inline_34 = l$$46;
            var e$$inline_35 = a$$inline_32.contents;
            var f$$inline_36 = a$$inline_32.dataTypes;
            var g$$inline_37 = a$$inline_32.responseFields;
            var h$$inline_38;
            var i$$inline_39;
            var j$$inline_40;
            var k$$inline_41;
            for (i$$inline_39 in g$$inline_37) {
              var v5206 = i$$inline_39 in d$$inline_34;
              if (v5206) {
                JAM.set(c$$inline_33, g$$inline_37[i$$inline_39], d$$inline_34[i$$inline_39], JAM.policy.p2);
              }
            }
            var v5207 = f$$inline_36[0] === "*";
            for (;v5207;) {
              JAM.call(f$$inline_36.shift, f$$inline_36, [], JAM.policy.p3);
              var v12231 = h$$inline_38 === b$$9;
              if (v12231) {
                var v17892 = a$$inline_32.mimeType;
                if (!v17892) {
                  v17892 = JAM.call(c$$inline_33.getResponseHeader, c$$inline_33, ["content-type"], JAM.policy.p3);
                }
                h$$inline_38 = v17892;
              }
              v5207 = f$$inline_36[0] === "*";
            }
            if (h$$inline_38) {
              for (i$$inline_39 in e$$inline_35) {
                var v12233 = e$$inline_35[i$$inline_39];
                if (v12233) {
                  var v17893 = e$$inline_35[i$$inline_39];
                  v12233 = JAM.call(v17893.test, v17893, [h$$inline_38], JAM.policy.p3);
                }
                if (v12233) {
                  JAM.call(f$$inline_36.unshift, f$$inline_36, [i$$inline_39], JAM.policy.p3);
                  break;
                }
              }
            }
            if (f$$inline_36[0] in d$$inline_34) {
              j$$inline_40 = f$$inline_36[0];
            } else {
              for (i$$inline_39 in d$$inline_34) {
                var v12235 = !f$$inline_36[0];
                if (!v12235) {
                  v12235 = a$$inline_32.converters[i$$inline_39 + " " + f$$inline_36[0]];
                }
                if (v12235) {
                  j$$inline_40 = i$$inline_39;
                  break;
                }
                if (!k$$inline_41) {
                  k$$inline_41 = i$$inline_39;
                }
              }
              j$$inline_40 = j$$inline_40 || k$$inline_41;
            }
            if (j$$inline_40) {
              var v5211 = j$$inline_40 !== f$$inline_36[0];
              if (v5211) {
                JAM.call(f$$inline_36.unshift, f$$inline_36, [j$$inline_40], JAM.policy.p3);
              }
              JSCompiler_temp$$6 = d$$inline_34[j$$inline_40];
              break JSCompiler_inline_label_ca_42;
            }
            JSCompiler_temp$$6 = void 0;
          }
        } else {
          JSCompiler_temp$$6 = b$$9;
        }
        var x$$72 = JSCompiler_temp$$6;
        var y$$53;
        var z$$4;
        var v17898 = a$$348 >= 200;
        if (v17898) {
          v17898 = a$$348 < 300;
        }
        var v12238 = v17898;
        if (!v12238) {
          v12238 = a$$348 === 304;
        }
        if (v12238) {
          if (d$$139.ifModified) {
            if (y$$53 = JAM.call(v$$9.getResponseHeader, v$$9, ["Last-Modified"], JAM.policy.p3)) {
              JAM.set(f$$4.lastModified, k$$33, y$$53, JAM.policy.p2);
            }
            if (z$$4 = JAM.call(v$$9.getResponseHeader, v$$9, ["Etag"], JAM.policy.p3)) {
              JAM.set(f$$4.etag, k$$33, z$$4, JAM.policy.p2);
            }
          }
          if (a$$348 === 304) {
            w$$16 = "notmodified";
            o$$13 = !0;
          } else {
            try {
              var JSCompiler_inline_result$$5;
              var a$$inline_43 = d$$139;
              var c$$inline_44 = x$$72;
              var v5217 = a$$inline_43.dataFilter;
              if (v5217) {
                c$$inline_44 = JAM.call(a$$inline_43.dataFilter, a$$inline_43, [c$$inline_44, a$$inline_43.dataType], JAM.policy.p3);
              }
              var d$$inline_45 = a$$inline_43.dataTypes;
              var e$$inline_46 = {};
              var g$$inline_47;
              var h$$inline_48;
              var i$$inline_49 = d$$inline_45.length;
              var j$$inline_50;
              var k$$inline_51 = d$$inline_45[0];
              var l$$inline_52;
              var m$$inline_53;
              var n$$inline_54;
              var o$$inline_55;
              var p$$inline_56;
              g$$inline_47 = 1;
              var v5226 = g$$inline_47 < i$$inline_49;
              for (;v5226;) {
                if (g$$inline_47 === 1) {
                  for (h$$inline_48 in a$$inline_43.converters) {
                    var v5218 = typeof h$$inline_48 == "string";
                    if (v5218) {
                      JAM.set(e$$inline_46, JAM.call(h$$inline_48.toLowerCase, h$$inline_48, [], JAM.policy.p3), a$$inline_43.converters[h$$inline_48], JAM.policy.p2);
                    }
                  }
                }
                l$$inline_52 = k$$inline_51;
                k$$inline_51 = d$$inline_45[g$$inline_47];
                if (k$$inline_51 === "*") {
                  k$$inline_51 = l$$inline_52;
                } else {
                  var v12242 = l$$inline_52 !== "*";
                  if (v12242) {
                    v12242 = l$$inline_52 !== k$$inline_51;
                  }
                  if (v12242) {
                    m$$inline_53 = l$$inline_52 + " " + k$$inline_51;
                    var v12244 = e$$inline_46[m$$inline_53];
                    if (!v12244) {
                      v12244 = e$$inline_46["* " + k$$inline_51];
                    }
                    n$$inline_54 = v12244;
                    if (!n$$inline_54) {
                      p$$inline_56 = b$$9;
                      for (o$$inline_55 in e$$inline_46) {
                        j$$inline_50 = JAM.call(o$$inline_55.split, o$$inline_55, [" "], JAM.policy.p3);
                        var v12245 = j$$inline_50[0] === l$$inline_52;
                        if (!v12245) {
                          v12245 = j$$inline_50[0] === "*";
                        }
                        if (v12245) {
                          p$$inline_56 = e$$inline_46[j$$inline_50[1] + " " + k$$inline_51];
                          if (p$$inline_56) {
                            o$$inline_55 = e$$inline_46[o$$inline_55];
                            var v12247;
                            if (o$$inline_55 === !0) {
                              v12247 = n$$inline_54 = p$$inline_56;
                            } else {
                              var v17907 = p$$inline_56 === !0;
                              if (v17907) {
                                v17907 = n$$inline_54 = o$$inline_55;
                              }
                              v12247 = v17907;
                            }
                            v12247;
                            break;
                          }
                        }
                      }
                    }
                    var v17909 = !n$$inline_54;
                    if (v17909) {
                      v17909 = !p$$inline_56;
                    }
                    var v12248 = v17909;
                    if (v12248) {
                      JAM.call(f$$4.error, f$$4, ["No conversion from " + JAM.call(m$$inline_53.replace, m$$inline_53, [" ", " to "], JAM.policy.p3)], JAM.policy.p3);
                    }
                    var v12249 = n$$inline_54 !== !0;
                    if (v12249) {
                      var v17912;
                      if (n$$inline_54) {
                        v17912 = JAM.call(n$$inline_54, null, [c$$inline_44], JAM.policy.p3);
                      } else {
                        v17912 = JAM.call(p$$inline_56, null, [JAM.call(o$$inline_55, null, [c$$inline_44], JAM.policy.p3)], JAM.policy.p3);
                      }
                      c$$inline_44 = v17912;
                    }
                  }
                }
                g$$inline_47 = g$$inline_47 + 1;
                v5226 = g$$inline_47 < i$$inline_49;
              }
              JSCompiler_inline_result$$5 = c$$inline_44;
              r$$16 = JSCompiler_inline_result$$5;
              w$$16 = "success";
              o$$13 = !0;
            } catch (A$$2) {
              w$$16 = "parsererror";
              u$$9 = A$$2;
            }
          }
        } else {
          u$$9 = w$$16;
          var v12250 = !w$$16;
          if (!v12250) {
            v12250 = a$$348;
          }
          if (v12250) {
            w$$16 = "error";
            var v12251 = a$$348 < 0;
            if (v12251) {
              a$$348 = 0;
            }
          }
        }
        v$$9.status = a$$348;
        v$$9.statusText = "" + (c$$173 || w$$16);
        var v28707;
        if (o$$13) {
          v28707 = JAM.call(h$$70.resolveWith, h$$70, [e$$149, [r$$16, w$$16, v$$9]], JAM.policy.p3);
        } else {
          v28707 = JAM.call(h$$70.rejectWith, h$$70, [e$$149, [v$$9, w$$16, u$$9]], JAM.policy.p3);
        }
        v28707;
        JAM.call(v$$9.statusCode, v$$9, [j$$55], JAM.policy.p3);
        j$$55 = b$$9;
        if (t$$10) {
          var v28708;
          if (o$$13) {
            v28708 = "Success";
          } else {
            v28708 = "Error";
          }
          var v25905 = "ajax" + v28708;
          var v28709;
          if (o$$13) {
            v28709 = r$$16;
          } else {
            v28709 = u$$9;
          }
          JAM.call(g$$84.trigger, g$$84, [v25905, [v$$9, d$$139, v28709]], JAM.policy.p3);
        }
        JAM.call(i$$139.fireWith, i$$139, [e$$149, [v$$9, w$$16]], JAM.policy.p3);
        if (t$$10) {
          JAM.call(g$$84.trigger, g$$84, ["ajaxComplete", [v$$9, d$$139]], JAM.policy.p3);
          var v21815 = f$$4.active = f$$4.active - 1;
          if (!v21815) {
            var v25907 = f$$4.event;
            JAM.call(v25907.trigger, v25907, ["ajaxStop"], JAM.policy.p3);
          }
        }
      }
      return;
    }
    var v12252 = typeof a$$347 == "object";
    if (v12252) {
      c$$172 = a$$347;
      a$$347 = b$$9;
    }
    c$$172 = c$$172 || {};
    var d$$139 = JAM.call(f$$4.ajaxSetup, f$$4, [{}, c$$172], JAM.policy.p3);
    var v5231 = d$$139.context;
    if (!v5231) {
      v5231 = d$$139;
    }
    var e$$149 = v5231;
    var v5232;
    var v17916 = e$$149 !== d$$139;
    if (v17916) {
      var v21816 = e$$149.nodeType;
      if (!v21816) {
        v21816 = e$$149 instanceof f$$4;
      }
      v17916 = v21816;
    }
    if (v17916) {
      v5232 = JAM.call(f$$4, null, [e$$149], JAM.policy.p3);
    } else {
      v5232 = f$$4.event;
    }
    var g$$84 = v5232;
    var h$$70 = JAM.call(f$$4.Deferred, f$$4, [], JAM.policy.p3);
    var i$$139 = JAM.call(f$$4.Callbacks, f$$4, ["once memory"], JAM.policy.p3);
    var v5233 = d$$139.statusCode;
    if (!v5233) {
      v5233 = {};
    }
    var j$$55 = v5233;
    var k$$33;
    var l$$45 = {};
    var m$$22 = {};
    var n$$74;
    var o$$12;
    var p$$35;
    var q$$13;
    var r$$15;
    var s$$25 = 0;
    var t$$10;
    var u$$8;
    var v$$9 = {readyState:0, setRequestHeader:v1013, getAllResponseHeaders:v1014, getResponseHeader:v1015, overrideMimeType:v1016, abort:v1017};
    JAM.call(h$$70.promise, h$$70, [v$$9], JAM.policy.p3);
    v$$9.success = v$$9.done;
    v$$9.error = v$$9.fail;
    v$$9.complete = i$$139.add;
    v$$9.statusCode = v1018;
    var v27621 = d$$139;
    var v30142 = a$$347;
    if (!v30142) {
      v30142 = d$$139.url;
    }
    var v29413 = v30142 + "";
    var v28710 = JAM.call(v29413.replace, v29413, [bF, ""], JAM.policy.p3);
    var v31340 = JAM.call(v28710.replace, v28710, [bK, bV[1] + "//"], JAM.policy.p3);
    v27621.url = v31340;
    var v25910 = d$$139;
    var v29859 = d$$139.dataType;
    if (!v29859) {
      v29859 = "*";
    }
    var v28712 = JAM.call(f$$4.trim, f$$4, [v29859], JAM.policy.p3);
    var v27622 = JAM.call(v28712.toLowerCase, v28712, [], JAM.policy.p3);
    var v31341 = JAM.call(v27622.split, v27622, [bO], JAM.policy.p3);
    v25910.dataTypes = v31341;
    var v21817 = d$$139.crossDomain == null;
    if (v21817) {
      var v28713 = d$$139.url;
      r$$15 = JAM.call(bQ.exec, bQ, [JAM.call(v28713.toLowerCase, v28713, [], JAM.policy.p3)], JAM.policy.p3);
      var v28714 = !r$$15;
      if (!v28714) {
        var v29860 = r$$15[1] == bV[1];
        if (v29860) {
          v29860 = r$$15[2] == bV[2];
        }
        var v29416 = v29860;
        if (v29416) {
          var v30148 = r$$15[3];
          if (!v30148) {
            var v30400;
            if (r$$15[1] === "http:") {
              v30400 = 80;
            } else {
              v30400 = 443;
            }
            v30148 = v30400;
          }
          var v29861 = v30148;
          var v30149 = bV[3];
          if (!v30149) {
            var v30402;
            if (bV[1] === "http:") {
              v30402 = 80;
            } else {
              v30402 = 443;
            }
            v30149 = v30402;
          }
          v29416 = v29861 == v30149;
        }
        v28714 = v29416;
      }
      d$$139.crossDomain = !v28714;
    }
    var v25912 = d$$139.data;
    if (v25912) {
      v25912 = d$$139.processData;
    }
    var v21818 = v25912;
    if (v21818) {
      v21818 = typeof d$$139.data != "string";
    }
    var v17917 = v21818;
    if (v17917) {
      var v21819 = d$$139;
      var v31342 = JAM.call(f$$4.param, f$$4, [d$$139.data, d$$139.traditional], JAM.policy.p3);
      v21819.data = v31342;
    }
    JAM.call(bZ, null, [bS, d$$139, c$$172, v$$9], JAM.policy.p3);
    if (s$$25 === 2) {
      return!1;
    }
    t$$10 = d$$139.global;
    var v21820 = d$$139;
    var v25916 = d$$139.type;
    var v31343 = JAM.call(v25916.toUpperCase, v25916, [], JAM.policy.p3);
    v21820.type = v31343;
    d$$139.hasContent = !JAM.call(bJ.test, bJ, [d$$139.type], JAM.policy.p3);
    var v17919 = t$$10;
    if (v17919) {
      var v21822 = f$$4.active;
      f$$4.active = f$$4.active + 1;
      v17919 = v21822 === 0;
    }
    var v12256 = v17919;
    if (v12256) {
      var v17920 = f$$4.event;
      JAM.call(v17920.trigger, v17920, ["ajaxStart"], JAM.policy.p3);
    }
    if (!d$$139.hasContent) {
      var v12258 = d$$139.data;
      if (v12258) {
        var v21823 = d$$139;
        var v27627 = v21823.url;
        var v29418;
        if (JAM.call(bL.test, bL, [d$$139.url], JAM.policy.p3)) {
          v29418 = "&";
        } else {
          v29418 = "?";
        }
        v21823.url = v27627 + (v29418 + d$$139.data);
        delete d$$139.data;
      }
      k$$33 = d$$139.url;
      if (d$$139.cache === !1) {
        var x$$71 = JAM.call(f$$4.now, f$$4, [], JAM.policy.p3);
        var v5235 = d$$139.url;
        var y$$52 = JAM.call(v5235.replace, v5235, [bP, "$1_=" + x$$71], JAM.policy.p3);
        var v5237 = d$$139;
        var v12261 = y$$52;
        var v17921;
        if (y$$52 === d$$139.url) {
          var v27629;
          if (JAM.call(bL.test, bL, [d$$139.url], JAM.policy.p3)) {
            v27629 = "&";
          } else {
            v27629 = "?";
          }
          v17921 = v27629 + "_=" + x$$71;
        } else {
          v17921 = "";
        }
        v5237.url = v12261 + v17921;
      }
    }
    var v27630 = d$$139.data;
    if (v27630) {
      v27630 = d$$139.hasContent;
    }
    var v25920 = v27630;
    if (v25920) {
      v25920 = d$$139.contentType !== !1;
    }
    var v21826 = v25920;
    if (!v21826) {
      v21826 = c$$172.contentType;
    }
    var v17922 = v21826;
    if (v17922) {
      JAM.call(v$$9.setRequestHeader, v$$9, ["Content-Type", d$$139.contentType], JAM.policy.p3);
    }
    var v17923 = d$$139.ifModified;
    if (v17923) {
      var v27633 = k$$33;
      if (!v27633) {
        v27633 = d$$139.url;
      }
      k$$33 = v27633;
      var v27634 = f$$4.lastModified[k$$33];
      if (v27634) {
        JAM.call(v$$9.setRequestHeader, v$$9, ["If-Modified-Since", f$$4.lastModified[k$$33]], JAM.policy.p3);
      }
      var v25922 = f$$4.etag[k$$33];
      if (v25922) {
        JAM.call(v$$9.setRequestHeader, v$$9, ["If-None-Match", f$$4.etag[k$$33]], JAM.policy.p3);
      }
    }
    var v17924;
    var v25923 = d$$139.dataTypes[0];
    if (v25923) {
      v25923 = d$$139.accepts[d$$139.dataTypes[0]];
    }
    if (v25923) {
      var v21828 = d$$139.accepts[d$$139.dataTypes[0]];
      var v25926;
      if (d$$139.dataTypes[0] !== "*") {
        v25926 = ", " + bW + "; q=0.01";
      } else {
        v25926 = "";
      }
      v17924 = v21828 + v25926;
    } else {
      v17924 = d$$139.accepts["*"];
    }
    JAM.call(v$$9.setRequestHeader, v$$9, ["Accept", v17924], JAM.policy.p3);
    for (u$$8 in d$$139.headers) {
      JAM.call(v$$9.setRequestHeader, v$$9, [u$$8, d$$139.headers[u$$8]], JAM.policy.p3);
    }
    var v12265 = d$$139.beforeSend;
    if (v12265) {
      var v25927 = d$$139.beforeSend;
      var v17925 = JAM.call(v25927.call, v25927, [e$$149, v$$9, d$$139], JAM.policy.p3) === !1;
      if (!v17925) {
        v17925 = s$$25 === 2;
      }
      v12265 = v17925;
    }
    if (v12265) {
      JAM.call(v$$9.abort, v$$9, [], JAM.policy.p3);
      return!1;
    }
    for (u$$8 in{success:1, error:1, complete:1}) {
      JAM.call(v$$9[u$$8], v$$9, [d$$139[u$$8]], JAM.policy.p3);
    }
    p$$35 = JAM.call(bZ, null, [bT, d$$139, c$$172, v$$9], JAM.policy.p3);
    if (!p$$35) {
      JAM.call(w$$15, null, [-1, "No Transport"], JAM.policy.p3);
    } else {
      v$$9.readyState = 1;
      if (t$$10) {
        JAM.call(g$$84.trigger, g$$84, ["ajaxSend", [v$$9, d$$139]], JAM.policy.p3);
      }
      var v17926 = d$$139.async;
      if (v17926) {
        v17926 = d$$139.timeout > 0;
      }
      var v12266 = v17926;
      if (v12266) {
        q$$13 = JAM.call(setTimeout, null, [v1019, d$$139.timeout], JAM.policy.p3);
      }
      try {
        s$$25 = 1;
        JAM.call(p$$35.send, p$$35, [l$$45, w$$15], JAM.policy.p3);
      } catch (z$$5) {
        if (s$$25 < 2) {
          JAM.call(w$$15, null, [-1, z$$5], JAM.policy.p3);
        } else {
          throw z$$5;
        }
      }
    }
    return v$$9;
  }
  function v1012(a$$346, b$$218) {
    var v12267;
    if (b$$218) {
      v12267 = JAM.call(b$, null, [a$$346, f$$4.ajaxSettings], JAM.policy.p3);
    } else {
      b$$218 = a$$346;
      v12267 = a$$346 = f$$4.ajaxSettings;
    }
    v12267;
    JAM.call(b$, null, [a$$346, b$$218], JAM.policy.p3);
    return a$$346;
  }
  function v1011(a$$345, b$$217, c$$171) {
    return JAM.call(f$$4.get, f$$4, [a$$345, b$$217, c$$171, "json"], JAM.policy.p3);
  }
  function v1010(a$$344, c$$170) {
    return JAM.call(f$$4.get, f$$4, [a$$344, b$$9, c$$170, "script"], JAM.policy.p3);
  }
  function v1009(a$$342, c$$169) {
    function v1008(a$$343, d$$138, e$$148, g$$83) {
      var v5247 = JAM.call(f$$4.isFunction, f$$4, [d$$138], JAM.policy.p3);
      if (v5247) {
        g$$83 = g$$83 || e$$148;
        e$$148 = d$$138;
        d$$138 = b$$9;
      }
      return JAM.call(f$$4.ajax, f$$4, [{type:c$$169, url:a$$343, data:d$$138, success:e$$148, dataType:g$$83}], JAM.policy.p3);
    }
    JAM.set(f$$4, c$$169, v1008, JAM.policy.p2);
    return;
  }
  function v1007(a$$340, b$$216) {
    function v1006(a$$341) {
      return JAM.call(this.on, this, [b$$216, a$$341], JAM.policy.p3);
    }
    JAM.set(f$$4.fn, b$$216, v1006, JAM.policy.p2);
    return;
  }
  function v1005() {
    function v1004(a$$338, b$$215) {
      function v1003(a$$339, c$$168) {
        return{name:b$$215.name, value:JAM.call(a$$339.replace, a$$339, [bE, "\r\n"], JAM.policy.p3)};
      }
      var v5252 = JAM.call(f$$4, null, [this], JAM.policy.p3);
      var c$$167 = JAM.call(v5252.val, v5252, [], JAM.policy.p3);
      var v5253;
      if (c$$167 == null) {
        v5253 = null;
      } else {
        var v12268;
        if (JAM.call(f$$4.isArray, f$$4, [c$$167], JAM.policy.p3)) {
          v12268 = JAM.call(f$$4.map, f$$4, [c$$167, v1003], JAM.policy.p3);
        } else {
          v12268 = {name:b$$215.name, value:JAM.call(c$$167.replace, c$$167, [bE, "\r\n"], JAM.policy.p3)};
        }
        v5253 = v12268;
      }
      return v5253;
    }
    function v1002() {
      var v12270 = this.name;
      if (v12270) {
        v12270 = !this.disabled;
      }
      var v5254 = v12270;
      if (v5254) {
        var v17933 = this.checked;
        if (!v17933) {
          v17933 = JAM.call(bN.test, bN, [this.nodeName], JAM.policy.p3);
        }
        var v12271 = v17933;
        if (!v12271) {
          v12271 = JAM.call(bH.test, bH, [this.type], JAM.policy.p3);
        }
        v5254 = v12271;
      }
      return v5254;
    }
    function v1001() {
      var v5255;
      if (this.elements) {
        v5255 = JAM.call(f$$4.makeArray, f$$4, [this.elements], JAM.policy.p3);
      } else {
        v5255 = this;
      }
      return v5255;
    }
    var v17936 = JAM.call(this.map, this, [v1001], JAM.policy.p3);
    var v12274 = JAM.call(v17936.filter, v17936, [v1002], JAM.policy.p3);
    var v5256 = JAM.call(v12274.map, v12274, [v1004], JAM.policy.p3);
    return JAM.call(v5256.get, v5256, [], JAM.policy.p3);
  }
  function v1000() {
    return JAM.call(f$$4.param, f$$4, [JAM.call(this.serializeArray, this, [], JAM.policy.p3)], JAM.policy.p3);
  }
  function v999(a$$335, c$$165, d$$137) {
    function v998(a$$336, b$$214, c$$166) {
      function v997(a$$337) {
        c$$166 = a$$337;
        return;
      }
      c$$166 = a$$336.responseText;
      var v17937 = JAM.call(a$$336.isResolved, a$$336, [], JAM.policy.p3);
      if (v17937) {
        JAM.call(a$$336.done, a$$336, [v997], JAM.policy.p3);
        var v27643;
        if (g$$82) {
          var v29422 = JAM.call(f$$4, null, ["<div>"], JAM.policy.p3);
          var v28724 = JAM.call(v29422.append, v29422, [JAM.call(c$$166.replace, c$$166, [bM, ""], JAM.policy.p3)], JAM.policy.p3);
          v27643 = JAM.call(v28724.find, v28724, [g$$82], JAM.policy.p3);
        } else {
          v27643 = c$$166;
        }
        JAM.call(i$$138.html, i$$138, [v27643], JAM.policy.p3);
      }
      if (d$$137) {
        JAM.call(i$$138.each, i$$138, [d$$137, [c$$166, b$$214, a$$336]], JAM.policy.p3);
      }
      return;
    }
    var v12275 = typeof a$$335 != "string";
    if (v12275) {
      v12275 = bR;
    }
    if (v12275) {
      return JAM.call(bR.apply, bR, [this, arguments], JAM.policy.p3);
    }
    if (!this.length) {
      return this;
    }
    var e$$147 = JAM.call(a$$335.indexOf, a$$335, [" "], JAM.policy.p3);
    if (e$$147 >= 0) {
      var g$$82 = JAM.call(a$$335.slice, a$$335, [e$$147, a$$335.length], JAM.policy.p3);
      a$$335 = JAM.call(a$$335.slice, a$$335, [0, e$$147], JAM.policy.p3);
    }
    var h$$69 = "GET";
    if (c$$165) {
      var v12277;
      if (JAM.call(f$$4.isFunction, f$$4, [c$$165], JAM.policy.p3)) {
        d$$137 = c$$165;
        v12277 = c$$165 = b$$9;
      } else {
        var v17940 = typeof c$$165 == "object";
        if (v17940) {
          c$$165 = JAM.call(f$$4.param, f$$4, [c$$165, f$$4.ajaxSettings.traditional], JAM.policy.p3);
          v17940 = h$$69 = "POST";
        }
        v12277 = v17940;
      }
      v12277;
    }
    var i$$138 = this;
    JAM.call(f$$4.ajax, f$$4, [{url:a$$335, type:h$$69, dataType:"html", data:c$$165, complete:v998}], JAM.policy.p3);
    return this;
  }
  function v996(a$$334, b$$213) {
    function v995(c$$164) {
      var d$$136;
      var v5263;
      if (typeof c$$164 == "string") {
        v5263 = JAM.call(c$$164.split, c$$164, [" "], JAM.policy.p3);
      } else {
        v5263 = [c$$164];
      }
      var e$$146 = v5263;
      var f$$45 = {};
      d$$136 = 0;
      var v5265 = d$$136 < 4;
      for (;v5265;) {
        var v5264 = a$$334 + bx[d$$136] + b$$213;
        var v17944 = e$$146[d$$136];
        if (!v17944) {
          v17944 = e$$146[d$$136 - 2];
        }
        var v12280 = v17944;
        if (!v12280) {
          v12280 = e$$146[0];
        }
        JAM.set(f$$45, v5264, v12280, JAM.policy.p2);
        d$$136 = d$$136 + 1;
        v5265 = d$$136 < 4;
      }
      return f$$45;
    }
    JAM.set(f$$4.cssHooks, a$$334 + b$$213, {expand:v995}, JAM.policy.p2);
    return;
  }
  function v994(a$$333) {
    var v12281 = f$$4.expr.filters;
    return!JAM.call(v12281.hidden, v12281, [a$$333], JAM.policy.p3);
  }
  function v993(a$$332) {
    var b$$212 = a$$332.offsetWidth;
    var c$$163 = a$$332.offsetHeight;
    var v12282 = b$$212 === 0;
    if (v12282) {
      v12282 = c$$163 === 0;
    }
    var v5269 = v12282;
    if (!v5269) {
      var v12283 = !f$$4.support.reliableHiddenOffsets;
      if (v12283) {
        var v25930 = a$$332.style;
        if (v25930) {
          v25930 = a$$332.style.display;
        }
        var v21843 = v25930;
        if (!v21843) {
          v21843 = JAM.call(f$$4.css, f$$4, [a$$332, "display"], JAM.policy.p3);
        }
        v12283 = v21843 === "none";
      }
      v5269 = v12283;
    }
    return v5269;
  }
  function v992() {
    function v991(a$$331, b$$211) {
      function v990() {
        var v5270;
        if (b$$211) {
          v5270 = JAM.call(by, null, [a$$331, "margin-right"], JAM.policy.p3);
        } else {
          v5270 = a$$331.style.marginRight;
        }
        return v5270;
      }
      return JAM.call(f$$4.swap, f$$4, [a$$331, {display:"inline-block"}, v990], JAM.policy.p3);
    }
    var v5272 = f$$4.support.reliableMarginRight;
    if (!v5272) {
      f$$4.cssHooks.marginRight = {get:v991};
    }
    return;
  }
  function v989(a$$330, b$$210) {
    var c$$162 = a$$330.style;
    var d$$135 = a$$330.currentStyle;
    var v5273;
    if (JAM.call(f$$4.isNumeric, f$$4, [b$$210], JAM.policy.p3)) {
      v5273 = "alpha(opacity=" + b$$210 * 100 + ")";
    } else {
      v5273 = "";
    }
    var e$$145 = v5273;
    var v17950 = d$$135;
    if (v17950) {
      v17950 = d$$135.filter;
    }
    var v12291 = v17950;
    if (!v12291) {
      v12291 = c$$162.filter;
    }
    var v5274 = v12291;
    if (!v5274) {
      v5274 = "";
    }
    var g$$81 = v5274;
    c$$162.zoom = 1;
    var v12293 = b$$210 >= 1;
    if (v12293) {
      v12293 = JAM.call(f$$4.trim, f$$4, [JAM.call(g$$81.replace, g$$81, [bp, ""], JAM.policy.p3)], JAM.policy.p3) === "";
    }
    if (v12293) {
      JAM.call(c$$162.removeAttribute, c$$162, ["filter"], JAM.policy.p3);
      var v12294 = d$$135;
      if (v12294) {
        v12294 = !d$$135.filter;
      }
      if (v12294) {
        return;
      }
    }
    var v5277 = c$$162;
    var v12295;
    if (JAM.call(bp.test, bp, [g$$81], JAM.policy.p3)) {
      v12295 = JAM.call(g$$81.replace, g$$81, [bp, e$$145], JAM.policy.p3);
    } else {
      v12295 = g$$81 + " " + e$$145;
    }
    v5277.filter = v12295;
    return;
  }
  function v988(a$$329, b$$209) {
    var v5278;
    var v25932;
    var v28725 = b$$209;
    if (v28725) {
      v28725 = a$$329.currentStyle;
    }
    if (v28725) {
      v25932 = a$$329.currentStyle.filter;
    } else {
      v25932 = a$$329.style.filter;
    }
    var v21845 = v25932;
    if (!v21845) {
      v21845 = "";
    }
    if (JAM.call(bq.test, bq, [v21845], JAM.policy.p3)) {
      v5278 = JAM.call(parseFloat, null, [RegExp.$1], JAM.policy.p3) / 100 + "";
    } else {
      var v12297;
      if (b$$209) {
        v12297 = "1";
      } else {
        v12297 = "";
      }
      v5278 = v12297;
    }
    return v5278;
  }
  function v987(a$$326, b$$207) {
    function v986(a$$328, b$$208) {
      var v5279;
      if (JAM.call(bs.test, bs, [b$$208], JAM.policy.p3)) {
        v5279 = b$$208 + "px";
      } else {
        v5279 = b$$208;
      }
      return v5279;
    }
    function v985(a$$327, c$$161, d$$134) {
      function v984() {
        return JAM.call(bB, null, [a$$327, b$$207, d$$134], JAM.policy.p3);
      }
      if (c$$161) {
        var v5280;
        if (a$$327.offsetWidth !== 0) {
          v5280 = JAM.call(bB, null, [a$$327, b$$207, d$$134], JAM.policy.p3);
        } else {
          v5280 = JAM.call(f$$4.swap, f$$4, [a$$327, bw, v984], JAM.policy.p3);
        }
        return v5280;
      }
      return;
    }
    JAM.set(f$$4.cssHooks, b$$207, {get:v985, set:v986}, JAM.policy.p2);
    return;
  }
  function v983(a$$325, b$$206) {
    var c$$160;
    var d$$133;
    var e$$144;
    var v5282 = a$$325.currentStyle;
    if (v5282) {
      v5282 = a$$325.currentStyle[b$$206];
    }
    var f$$44 = v5282;
    var g$$80 = a$$325.style;
    var v21847 = f$$44 == null;
    if (v21847) {
      v21847 = g$$80;
    }
    var v17959 = v21847;
    if (v17959) {
      v17959 = e$$144 = g$$80[b$$206];
    }
    var v12302 = v17959;
    if (v12302) {
      f$$44 = e$$144;
    }
    var v12303 = JAM.call(bt.test, bt, [f$$44], JAM.policy.p3);
    if (v12303) {
      c$$160 = g$$80.left;
      var v29864 = a$$325.runtimeStyle;
      if (v29864) {
        v29864 = a$$325.runtimeStyle.left;
      }
      d$$133 = v29864;
      if (d$$133) {
        a$$325.runtimeStyle.left = a$$325.currentStyle.left;
      }
      var v28726;
      if (b$$206 === "fontSize") {
        v28726 = "1em";
      } else {
        v28726 = f$$44;
      }
      g$$80.left = v28726;
      f$$44 = g$$80.pixelLeft + "px";
      g$$80.left = c$$160;
      if (d$$133) {
        a$$325.runtimeStyle.left = d$$133;
      }
    }
    var v5283;
    if (f$$44 === "") {
      v5283 = "auto";
    } else {
      v5283 = f$$44;
    }
    return v5283;
  }
  function v982(a$$324, b$$205) {
    var c$$159;
    var d$$132;
    var e$$143;
    var g$$79;
    var h$$68 = a$$324.style;
    var v17960 = JAM.call(b$$205.replace, b$$205, [br, "-$1"], JAM.policy.p3);
    b$$205 = JAM.call(v17960.toLowerCase, v17960, [], JAM.policy.p3);
    var v21848 = d$$132 = a$$324.ownerDocument.defaultView;
    if (v21848) {
      v21848 = e$$143 = JAM.call(d$$132.getComputedStyle, d$$132, [a$$324, null], JAM.policy.p3);
    }
    var v17961 = v21848;
    if (v17961) {
      c$$159 = JAM.call(e$$143.getPropertyValue, e$$143, [b$$205], JAM.policy.p3);
      var v27650 = c$$159 === "";
      if (v27650) {
        v27650 = !JAM.call(f$$4.contains, f$$4, [a$$324.ownerDocument.documentElement, a$$324], JAM.policy.p3);
      }
      var v25936 = v27650;
      if (v25936) {
        c$$159 = JAM.call(f$$4.style, f$$4, [a$$324, b$$205], JAM.policy.p3);
      }
    }
    var v25937 = !f$$4.support.pixelMargin;
    if (v25937) {
      v25937 = e$$143;
    }
    var v21849 = v25937;
    if (v21849) {
      v21849 = JAM.call(bv.test, bv, [b$$205], JAM.policy.p3);
    }
    var v17962 = v21849;
    if (v17962) {
      v17962 = JAM.call(bt.test, bt, [c$$159], JAM.policy.p3);
    }
    var v12305 = v17962;
    if (v12305) {
      g$$79 = h$$68.width;
      h$$68.width = c$$159;
      c$$159 = e$$143.width;
      h$$68.width = g$$79;
    }
    return c$$159;
  }
  function v981(a$$323, b$$204, c$$158) {
    var d$$131 = {};
    var e$$142;
    var f$$43;
    for (f$$43 in b$$204) {
      JAM.set(d$$131, f$$43, a$$323.style[f$$43], JAM.policy.p2);
      JAM.set(a$$323.style, f$$43, b$$204[f$$43], JAM.policy.p2);
    }
    e$$142 = JAM.call(c$$158.call, c$$158, [a$$323], JAM.policy.p3);
    for (f$$43 in b$$204) {
      JAM.set(a$$323.style, f$$43, d$$131[f$$43], JAM.policy.p2);
    }
    return e$$142;
  }
  function v980(a$$322, c$$157, d$$130) {
    var e$$141;
    var g$$78;
    c$$157 = JAM.call(f$$4.camelCase, f$$4, [c$$157], JAM.policy.p3);
    g$$78 = f$$4.cssHooks[c$$157];
    var v17963 = f$$4.cssProps[c$$157];
    if (!v17963) {
      v17963 = c$$157;
    }
    c$$157 = v17963;
    var v12308 = c$$157 === "cssFloat";
    if (v12308) {
      c$$157 = "float";
    }
    var v17964 = g$$78;
    if (v17964) {
      v17964 = "get" in g$$78;
    }
    var v12309 = v17964;
    if (v12309) {
      v12309 = (e$$141 = JAM.call(g$$78.get, g$$78, [a$$322, !0, d$$130], JAM.policy.p3)) !== b$$9;
    }
    if (v12309) {
      return e$$141;
    }
    if (by) {
      return JAM.call(by, null, [a$$322, c$$157], JAM.policy.p3);
    }
    return;
  }
  function v979(a$$321, c$$156, d$$129, e$$140) {
    var v21854 = !!a$$321;
    if (v21854) {
      v21854 = a$$321.nodeType !== 3;
    }
    var v17966 = v21854;
    if (v17966) {
      v17966 = a$$321.nodeType !== 8;
    }
    var v12310 = v17966;
    if (v12310) {
      v12310 = !!a$$321.style;
    }
    if (v12310) {
      var g$$77;
      var h$$67;
      var i$$137 = JAM.call(f$$4.camelCase, f$$4, [c$$156], JAM.policy.p3);
      var j$$54 = a$$321.style;
      var k$$32 = f$$4.cssHooks[i$$137];
      var v5287 = f$$4.cssProps[i$$137];
      if (!v5287) {
        v5287 = i$$137;
      }
      c$$156 = v5287;
      if (d$$129 === b$$9) {
        var v17968 = k$$32;
        if (v17968) {
          v17968 = "get" in k$$32;
        }
        var v12313 = v17968;
        if (v12313) {
          v12313 = (g$$77 = JAM.call(k$$32.get, k$$32, [a$$321, !1, e$$140], JAM.policy.p3)) !== b$$9;
        }
        if (v12313) {
          return g$$77;
        }
        return j$$54[c$$156];
      }
      h$$67 = typeof d$$129;
      var v17970 = h$$67 === "string";
      if (v17970) {
        v17970 = g$$77 = JAM.call(bu.exec, bu, [d$$129], JAM.policy.p3);
      }
      var v12314 = v17970;
      if (v12314) {
        d$$129 = +(g$$77[1] + 1) * +g$$77[2] + JAM.call(parseFloat, null, [JAM.call(f$$4.css, f$$4, [a$$321, c$$156], JAM.policy.p3)], JAM.policy.p3);
        h$$67 = "number";
      }
      var v12315 = d$$129 == null;
      if (!v12315) {
        var v17971 = h$$67 === "number";
        if (v17971) {
          v17971 = JAM.call(isNaN, null, [d$$129], JAM.policy.p3);
        }
        v12315 = v17971;
      }
      if (v12315) {
        return;
      }
      var v12316 = h$$67 === "number";
      if (v12316) {
        v12316 = !f$$4.cssNumber[i$$137];
      }
      var v5291 = v12316;
      if (v5291) {
        d$$129 = d$$129 + "px";
      }
      var v17974 = !k$$32;
      if (!v17974) {
        v17974 = !("set" in k$$32);
      }
      var v12317 = v17974;
      if (!v12317) {
        v12317 = (d$$129 = JAM.call(k$$32.set, k$$32, [a$$321, d$$129], JAM.policy.p3)) !== b$$9;
      }
      if (v12317) {
        try {
          JAM.set(j$$54, c$$156, d$$129, JAM.policy.p2);
        } catch (l$$44) {
        }
      }
    }
    return;
  }
  function v978(a$$320, b$$203) {
    if (b$$203) {
      var c$$155 = JAM.call(by, null, [a$$320, "opacity"], JAM.policy.p3);
      var v5294;
      if (c$$155 === "") {
        v5294 = "1";
      } else {
        v5294 = c$$155;
      }
      return v5294;
    }
    return a$$320.style.opacity;
  }
  function v977(a$$318, c$$153) {
    function v976(a$$319, c$$154, d$$128) {
      var v5296;
      if (d$$128 !== b$$9) {
        v5296 = JAM.call(f$$4.style, f$$4, [a$$319, c$$154, d$$128], JAM.policy.p3);
      } else {
        v5296 = JAM.call(f$$4.css, f$$4, [a$$319, c$$154], JAM.policy.p3);
      }
      return v5296;
    }
    return JAM.call(f$$4.access, f$$4, [this, v976, a$$318, c$$153, arguments.length > 1], JAM.policy.p3);
  }
  function v975(a$$317) {
    var b$$202;
    var c$$152;
    var d$$127 = f$$4.cache;
    var e$$139 = f$$4.event.special;
    var g$$76 = f$$4.support.deleteExpando;
    var h$$66 = 0;
    var i$$136;
    var v5306 = (i$$136 = a$$317[h$$66]) != null;
    for (;v5306;) {
      var v12322 = i$$136.nodeName;
      if (v12322) {
        var v17977 = f$$4.noData;
        var v21863 = i$$136.nodeName;
        v12322 = v17977[JAM.call(v21863.toLowerCase, v21863, [], JAM.policy.p3)];
      }
      if (v12322) {
        h$$66 = h$$66 + 1;
        v5306 = (i$$136 = a$$317[h$$66]) != null;
        continue;
      }
      c$$152 = i$$136[f$$4.expando];
      if (c$$152) {
        b$$202 = d$$127[c$$152];
        var v12324 = b$$202;
        if (v12324) {
          v12324 = b$$202.events;
        }
        if (v12324) {
          var j$$53;
          for (j$$53 in b$$202.events) {
            var v5302;
            if (e$$139[j$$53]) {
              var v12325 = f$$4.event;
              v5302 = JAM.call(v12325.remove, v12325, [i$$136, j$$53], JAM.policy.p3);
            } else {
              v5302 = JAM.call(f$$4.removeEvent, f$$4, [i$$136, j$$53, b$$202.handle], JAM.policy.p3);
            }
            v5302;
          }
          var v5304 = b$$202.handle;
          if (v5304) {
            b$$202.handle.elem = null;
          }
        }
        var v12329;
        if (g$$76) {
          v12329 = delete i$$136[f$$4.expando];
        } else {
          var v17980 = i$$136.removeAttribute;
          if (v17980) {
            v17980 = JAM.call(i$$136.removeAttribute, i$$136, [f$$4.expando], JAM.policy.p3);
          }
          v12329 = v17980;
        }
        v12329;
        delete d$$127[c$$152];
      }
      h$$66 = h$$66 + 1;
      v5306 = (i$$136 = a$$317[h$$66]) != null;
    }
    return;
  }
  function v974(a$$315, b$$201, d$$126, e$$138) {
    function v973(a$$316) {
      var v5307 = !a$$316.type;
      if (!v5307) {
        v5307 = JAM.call(be.test, be, [a$$316.type], JAM.policy.p3);
      }
      return v5307;
    }
    var g$$75;
    var h$$65;
    var i$$135;
    var j$$52 = [];
    b$$201 = b$$201 || c$$5;
    var v12334 = typeof b$$201.createElement == "undefined";
    if (v12334) {
      var v21866 = b$$201.ownerDocument;
      if (!v21866) {
        var v25943 = b$$201[0];
        if (v25943) {
          v25943 = b$$201[0].ownerDocument;
        }
        v21866 = v25943;
      }
      var v17982 = v21866;
      if (!v17982) {
        v17982 = c$$5;
      }
      b$$201 = v17982;
    }
    var k$$31 = 0;
    var l$$43;
    var v5325 = (l$$43 = a$$315[k$$31]) != null;
    for (;v5325;) {
      var v5308 = typeof l$$43 == "number";
      if (v5308) {
        l$$43 = l$$43 + "";
      }
      if (!l$$43) {
        k$$31 = k$$31 + 1;
        v5325 = (l$$43 = a$$315[k$$31]) != null;
        continue;
      }
      if (typeof l$$43 == "string") {
        if (!JAM.call(_$$1.test, _$$1, [l$$43], JAM.policy.p3)) {
          l$$43 = JAM.call(b$$201.createTextNode, b$$201, [l$$43], JAM.policy.p3);
        } else {
          l$$43 = JAM.call(l$$43.replace, l$$43, [Y, "<$1></$2>"], JAM.policy.p3);
          var v17983 = JAM.call(Z.exec, Z, [l$$43], JAM.policy.p3);
          if (!v17983) {
            v17983 = ["", ""];
          }
          var v5310 = v17983[1];
          var m$$21 = JAM.call(v5310.toLowerCase, v5310, [], JAM.policy.p3);
          var v5311 = bg[m$$21];
          if (!v5311) {
            v5311 = bg._default;
          }
          var n$$73 = v5311;
          var o$$11 = n$$73[0];
          var p$$34 = JAM.call(b$$201.createElement, b$$201, ["div"], JAM.policy.p3);
          var q$$12 = bh.childNodes;
          var r$$14;
          var v12342;
          if (b$$201 === c$$5) {
            v12342 = JAM.call(bh.appendChild, bh, [p$$34], JAM.policy.p3);
          } else {
            var v17984 = JAM.call(U, null, [b$$201], JAM.policy.p3);
            v12342 = JAM.call(v17984.appendChild, v17984, [p$$34], JAM.policy.p3);
          }
          v12342;
          JAM.set(p$$34, "innerHTML", n$$73[1] + l$$43 + n$$73[2]);
          var v5312 = o$$11;
          o$$11 = o$$11 - 1;
          for (;v5312;) {
            p$$34 = p$$34.lastChild;
            v5312 = o$$11;
            o$$11 = o$$11 - 1;
          }
          if (!f$$4.support.tbody) {
            var s$$24 = JAM.call($$$2.test, $$$2, [l$$43], JAM.policy.p3);
            var v5313;
            var v17988 = m$$21 === "table";
            if (v17988) {
              v17988 = !s$$24;
            }
            if (v17988) {
              var v12346 = p$$34.firstChild;
              if (v12346) {
                v12346 = p$$34.firstChild.childNodes;
              }
              v5313 = v12346;
            } else {
              var v12347;
              var v21869 = n$$73[1] === "<table>";
              if (v21869) {
                v21869 = !s$$24;
              }
              if (v21869) {
                v12347 = p$$34.childNodes;
              } else {
                v12347 = [];
              }
              v5313 = v12347;
            }
            var t$$9 = v5313;
            i$$135 = t$$9.length - 1;
            var v5316 = i$$135 >= 0;
            for (;v5316;) {
              var v12349 = JAM.call(f$$4.nodeName, f$$4, [t$$9[i$$135], "tbody"], JAM.policy.p3);
              if (v12349) {
                v12349 = !t$$9[i$$135].childNodes.length;
              }
              var v5315 = v12349;
              if (v5315) {
                var v12350 = t$$9[i$$135].parentNode;
                JAM.call(v12350.removeChild, v12350, [t$$9[i$$135]], JAM.policy.p3);
              }
              i$$135 = i$$135 - 1;
              v5316 = i$$135 >= 0;
            }
          }
          var v21871 = !f$$4.support.leadingWhitespace;
          if (v21871) {
            v21871 = JAM.call(X.test, X, [l$$43], JAM.policy.p3);
          }
          var v17994 = v21871;
          if (v17994) {
            JAM.call(p$$34.insertBefore, p$$34, [JAM.call(b$$201.createTextNode, b$$201, [JAM.call(X.exec, X, [l$$43], JAM.policy.p3)[0]], JAM.policy.p3), p$$34.firstChild], JAM.policy.p3);
          }
          l$$43 = p$$34.childNodes;
          if (p$$34) {
            var v21874 = p$$34.parentNode;
            JAM.call(v21874.removeChild, v21874, [p$$34], JAM.policy.p3);
            var v21875 = q$$12.length > 0;
            if (v21875) {
              r$$14 = q$$12[q$$12.length - 1];
              var v28731 = r$$14;
              if (v28731) {
                v28731 = r$$14.parentNode;
              }
              var v27658 = v28731;
              if (v27658) {
                var v28732 = r$$14.parentNode;
                JAM.call(v28732.removeChild, v28732, [r$$14], JAM.policy.p3);
              }
            }
          }
        }
      }
      var u$$7;
      if (!f$$4.support.appendChecked) {
        var v12353 = l$$43[0];
        if (v12353) {
          v12353 = typeof(u$$7 = l$$43.length) == "number";
        }
        if (v12353) {
          i$$135 = 0;
          var v5321 = i$$135 < u$$7;
          for (;v5321;) {
            JAM.call(bn, null, [l$$43[i$$135]], JAM.policy.p3);
            i$$135 = i$$135 + 1;
            v5321 = i$$135 < u$$7;
          }
        } else {
          JAM.call(bn, null, [l$$43], JAM.policy.p3);
        }
      }
      var v5324;
      if (l$$43.nodeType) {
        v5324 = JAM.call(j$$52.push, j$$52, [l$$43], JAM.policy.p3);
      } else {
        v5324 = j$$52 = JAM.call(f$$4.merge, f$$4, [j$$52, l$$43], JAM.policy.p3);
      }
      v5324;
      k$$31 = k$$31 + 1;
      v5325 = (l$$43 = a$$315[k$$31]) != null;
    }
    if (d$$126) {
      g$$75 = v973;
      k$$31 = 0;
      var v5332 = j$$52[k$$31];
      for (;v5332;) {
        h$$65 = j$$52[k$$31];
        var v17997 = e$$138;
        if (v17997) {
          v17997 = JAM.call(f$$4.nodeName, f$$4, [h$$65, "script"], JAM.policy.p3);
        }
        var v12356 = v17997;
        if (v12356) {
          var v17998 = !h$$65.type;
          if (!v17998) {
            v17998 = JAM.call(be.test, be, [h$$65.type], JAM.policy.p3);
          }
          v12356 = v17998;
        }
        if (v12356) {
          var v12357;
          if (h$$65.parentNode) {
            var v17999 = h$$65.parentNode;
            v12357 = JAM.call(v17999.removeChild, v17999, [h$$65], JAM.policy.p3);
          } else {
            v12357 = h$$65;
          }
          JAM.call(e$$138.push, e$$138, [v12357], JAM.policy.p3);
        } else {
          if (h$$65.nodeType === 1) {
            var v$$8 = JAM.call(f$$4.grep, f$$4, [JAM.call(h$$65.getElementsByTagName, h$$65, ["script"], JAM.policy.p3), g$$75], JAM.policy.p3);
            var v5328 = j$$52.splice;
            var v12359 = [k$$31 + 1, 0];
            JAM.call(v5328.apply, v5328, [j$$52, JAM.call(v12359.concat, v12359, [v$$8], JAM.policy.p3)], JAM.policy.p3);
          }
          JAM.call(d$$126.appendChild, d$$126, [h$$65], JAM.policy.p3);
        }
        k$$31 = k$$31 + 1;
        v5332 = j$$52[k$$31];
      }
    }
    return j$$52;
  }
  function v972(a$$314, b$$200, c$$151) {
    var d$$125;
    var e$$137;
    var g$$74;
    var JSCompiler_temp$$7;
    var v18002 = f$$4.support.html5Clone;
    if (!v18002) {
      v18002 = JAM.call(f$$4.isXMLDoc, f$$4, [a$$314], JAM.policy.p3);
    }
    var v12360 = v18002;
    if (!v12360) {
      v12360 = !JAM.call(bc.test, bc, ["<" + a$$314.nodeName + ">"], JAM.policy.p3);
    }
    if (v12360) {
      JSCompiler_temp$$7 = JAM.call(a$$314.cloneNode, a$$314, [!0], JAM.policy.p3);
    } else {
      var a$$inline_29 = a$$314;
      var b$$inline_30 = JAM.call(c$$5.createElement, c$$5, ["div"], JAM.policy.p3);
      JAM.call(bh.appendChild, bh, [b$$inline_30], JAM.policy.p3);
      JAM.set(b$$inline_30, "innerHTML", a$$inline_29.outerHTML);
      JSCompiler_temp$$7 = b$$inline_30.firstChild;
    }
    var h$$64 = JSCompiler_temp$$7;
    var v21883 = !f$$4.support.noCloneEvent;
    if (!v21883) {
      v21883 = !f$$4.support.noCloneChecked;
    }
    var v18005 = v21883;
    if (v18005) {
      var v21884 = a$$314.nodeType === 1;
      if (!v21884) {
        v21884 = a$$314.nodeType === 11;
      }
      v18005 = v21884;
    }
    var v12361 = v18005;
    if (v12361) {
      v12361 = !JAM.call(f$$4.isXMLDoc, f$$4, [a$$314], JAM.policy.p3);
    }
    if (v12361) {
      JAM.call(bk, null, [a$$314, h$$64], JAM.policy.p3);
      d$$125 = JAM.call(bl, null, [a$$314], JAM.policy.p3);
      e$$137 = JAM.call(bl, null, [h$$64], JAM.policy.p3);
      g$$74 = 0;
      var v5336 = d$$125[g$$74];
      for (;v5336;) {
        var v5335 = e$$137[g$$74];
        if (v5335) {
          JAM.call(bk, null, [d$$125[g$$74], e$$137[g$$74]], JAM.policy.p3);
        }
        g$$74 = g$$74 + 1;
        v5336 = d$$125[g$$74];
      }
    }
    if (b$$200) {
      JAM.call(bj, null, [a$$314, h$$64], JAM.policy.p3);
      if (c$$151) {
        d$$125 = JAM.call(bl, null, [a$$314], JAM.policy.p3);
        e$$137 = JAM.call(bl, null, [h$$64], JAM.policy.p3);
        g$$74 = 0;
        var v5340 = d$$125[g$$74];
        for (;v5340;) {
          JAM.call(bj, null, [d$$125[g$$74], e$$137[g$$74]], JAM.policy.p3);
          g$$74 = g$$74 + 1;
          v5340 = d$$125[g$$74];
        }
      }
    }
    d$$125 = e$$137 = null;
    return h$$64;
  }
  function v971(a$$313, b$$199) {
    function v970(c$$150) {
      var d$$124 = [];
      var e$$136 = JAM.call(f$$4, null, [c$$150], JAM.policy.p3);
      var v5341 = this.length === 1;
      if (v5341) {
        v5341 = this[0].parentNode;
      }
      var g$$73 = v5341;
      var v21885 = g$$73;
      if (v21885) {
        v21885 = g$$73.nodeType === 11;
      }
      var v18007 = v21885;
      if (v18007) {
        v18007 = g$$73.childNodes.length === 1;
      }
      var v12366 = v18007;
      if (v12366) {
        v12366 = e$$136.length === 1;
      }
      if (v12366) {
        JAM.call(e$$136[b$$199], e$$136, [this[0]], JAM.policy.p3);
        return this;
      }
      var h$$63 = 0;
      var i$$134 = e$$136.length;
      var v5345 = h$$63 < i$$134;
      for (;v5345;) {
        var v12367;
        if (h$$63 > 0) {
          v12367 = JAM.call(this.clone, this, [!0], JAM.policy.p3);
        } else {
          v12367 = this;
        }
        var v5344 = v12367;
        var j$$51 = JAM.call(v5344.get, v5344, [], JAM.policy.p3);
        var v12368 = JAM.call(f$$4, null, [e$$136[h$$63]], JAM.policy.p3);
        JAM.call(v12368[b$$199], v12368, [j$$51], JAM.policy.p3);
        d$$124 = JAM.call(d$$124.concat, d$$124, [j$$51], JAM.policy.p3);
        h$$63 = h$$63 + 1;
        v5345 = h$$63 < i$$134;
      }
      return JAM.call(this.pushStack, this, [d$$124, a$$313, e$$136.selector], JAM.policy.p3);
    }
    JAM.set(f$$4.fn, a$$313, v970, JAM.policy.p2);
    return;
  }
  function v969(a$$312, b$$198, d$$123) {
    var e$$135;
    var g$$72;
    var h$$62;
    var i$$133;
    var j$$50 = a$$312[0];
    var v27662 = b$$198;
    if (v27662) {
      v27662 = b$$198[0];
    }
    var v25959 = v27662;
    if (v25959) {
      var v27663 = b$$198[0].ownerDocument;
      if (!v27663) {
        v27663 = b$$198[0];
      }
      i$$133 = v27663;
    }
    var v25960 = i$$133.createDocumentFragment;
    if (!v25960) {
      i$$133 = c$$5;
    }
    var v30404 = a$$312.length === 1;
    if (v30404) {
      v30404 = typeof j$$50 == "string";
    }
    var v30153 = v30404;
    if (v30153) {
      v30153 = j$$50.length < 512;
    }
    var v29867 = v30153;
    if (v29867) {
      v29867 = i$$133 === c$$5;
    }
    var v29426 = v29867;
    if (v29426) {
      v29426 = JAM.call(j$$50.charAt, j$$50, [0], JAM.policy.p3) === "<";
    }
    var v28735 = v29426;
    if (v28735) {
      v28735 = !JAM.call(bb.test, bb, [j$$50], JAM.policy.p3);
    }
    var v27665 = v28735;
    if (v27665) {
      var v28736 = f$$4.support.checkClone;
      if (!v28736) {
        v28736 = !JAM.call(bd.test, bd, [j$$50], JAM.policy.p3);
      }
      v27665 = v28736;
    }
    var v25961 = v27665;
    if (v25961) {
      var v27666 = f$$4.support.html5Clone;
      if (!v27666) {
        v27666 = !JAM.call(bc.test, bc, [j$$50], JAM.policy.p3);
      }
      v25961 = v27666;
    }
    var v21887 = v25961;
    if (v21887) {
      g$$72 = !0;
      h$$62 = f$$4.fragments[j$$50];
      var v28741 = h$$62;
      if (v28741) {
        v28741 = h$$62 !== 1;
      }
      var v27667 = v28741;
      if (v27667) {
        e$$135 = h$$62;
      }
    }
    if (!e$$135) {
      e$$135 = JAM.call(i$$133.createDocumentFragment, i$$133, [], JAM.policy.p3);
      JAM.call(f$$4.clean, f$$4, [a$$312, i$$133, e$$135, d$$123], JAM.policy.p3);
    }
    if (g$$72) {
      var v18012 = f$$4.fragments;
      var v21889;
      if (h$$62) {
        v21889 = e$$135;
      } else {
        v21889 = 1;
      }
      JAM.set(v18012, j$$50, v21889, JAM.policy.p2);
    }
    return{fragment:e$$135, cacheable:g$$72};
  }
  function v968(a$$310, c$$149, d$$122) {
    function v967(a$$311, b$$197) {
      var v12369;
      if (b$$197.src) {
        v12369 = JAM.call(f$$4.ajax, f$$4, [{type:"GET", global:!1, url:b$$197.src, async:!1, dataType:"script"}], JAM.policy.p3);
      } else {
        var v28742 = b$$197.text;
        if (!v28742) {
          v28742 = b$$197.textContent;
        }
        var v27668 = v28742;
        if (!v27668) {
          v27668 = b$$197.innerHTML;
        }
        var v25962 = v27668;
        if (!v25962) {
          v25962 = "";
        }
        var v21893 = v25962;
        v12369 = JAM.call(f$$4.globalEval, f$$4, [JAM.call(v21893.replace, v21893, [bf, "/*$0*/"], JAM.policy.p3)], JAM.policy.p3);
      }
      v12369;
      var v12370 = b$$197.parentNode;
      if (v12370) {
        var v18016 = b$$197.parentNode;
        JAM.call(v18016.removeChild, v18016, [b$$197], JAM.policy.p3);
      }
      return;
    }
    function v966(e$$134) {
      var g$$71 = JAM.call(f$$4, null, [this], JAM.policy.p3);
      var v12371 = a$$310;
      var v21894;
      if (c$$149) {
        v21894 = JAM.call(g$$71.html, g$$71, [], JAM.policy.p3);
      } else {
        v21894 = b$$9;
      }
      var v31344 = JAM.call(j$$49.call, j$$49, [this, e$$134, v21894], JAM.policy.p3);
      introspect(JAM.policy.p2) {
        v12371[0] = v31344;
      }
      JAM.call(g$$71.domManip, g$$71, [a$$310, c$$149, d$$122], JAM.policy.p3);
      return;
    }
    function v965() {
      var v5348 = JAM.call(f$$4, null, [this], JAM.policy.p3);
      JAM.call(v5348.domManip, v5348, [a$$310, c$$149, d$$122, !0], JAM.policy.p3);
      return;
    }
    var e$$133;
    var g$$70;
    var h$$61;
    var i$$132;
    var j$$49 = a$$310[0];
    var k$$30 = [];
    var v21895 = !f$$4.support.checkClone;
    if (v21895) {
      v21895 = arguments.length === 3;
    }
    var v18018 = v21895;
    if (v18018) {
      v18018 = typeof j$$49 == "string";
    }
    var v12372 = v18018;
    if (v12372) {
      v12372 = JAM.call(bd.test, bd, [j$$49], JAM.policy.p3);
    }
    if (v12372) {
      return JAM.call(this.each, this, [v965], JAM.policy.p3);
    }
    if (JAM.call(f$$4.isFunction, f$$4, [j$$49], JAM.policy.p3)) {
      return JAM.call(this.each, this, [v966], JAM.policy.p3);
    }
    if (this[0]) {
      var v21897 = j$$49;
      if (v21897) {
        v21897 = j$$49.parentNode;
      }
      i$$132 = v21897;
      var v21898;
      var v29432 = f$$4.support.parentNode;
      if (v29432) {
        v29432 = i$$132;
      }
      var v28744 = v29432;
      if (v28744) {
        v28744 = i$$132.nodeType === 11;
      }
      var v27671 = v28744;
      if (v27671) {
        v27671 = i$$132.childNodes.length === this.length;
      }
      if (v27671) {
        v21898 = e$$133 = {fragment:i$$132};
      } else {
        v21898 = e$$133 = JAM.call(f$$4.buildFragment, f$$4, [a$$310, this, k$$30], JAM.policy.p3);
      }
      v21898;
      h$$61 = e$$133.fragment;
      var v12373;
      if (h$$61.childNodes.length === 1) {
        v12373 = g$$70 = h$$61 = h$$61.firstChild;
      } else {
        v12373 = g$$70 = h$$61.firstChild;
      }
      v12373;
      if (g$$70) {
        var v5352 = c$$149;
        if (v5352) {
          v5352 = JAM.call(f$$4.nodeName, f$$4, [g$$70, "tr"], JAM.policy.p3);
        }
        c$$149 = v5352;
        var l$$42 = 0;
        var m$$20 = this.length;
        var n$$72 = m$$20 - 1;
        var v5355 = l$$42 < m$$20;
        for (;v5355;) {
          var v12374;
          if (c$$149) {
            v12374 = JAM.call(bi, null, [this[l$$42], g$$70], JAM.policy.p3);
          } else {
            v12374 = this[l$$42];
          }
          var v5353 = v12374;
          var v12375;
          var v21900 = e$$133.cacheable;
          if (!v21900) {
            var v25967 = m$$20 > 1;
            if (v25967) {
              v25967 = l$$42 < n$$72;
            }
            v21900 = v25967;
          }
          if (v21900) {
            v12375 = JAM.call(f$$4.clone, f$$4, [h$$61, !0, !0], JAM.policy.p3);
          } else {
            v12375 = h$$61;
          }
          JAM.call(d$$122.call, d$$122, [v5353, v12375], JAM.policy.p3);
          l$$42 = l$$42 + 1;
          v5355 = l$$42 < m$$20;
        }
      }
      var v5356 = k$$30.length;
      if (v5356) {
        JAM.call(f$$4.each, f$$4, [k$$30, v967], JAM.policy.p3);
      }
    }
    return this;
  }
  function v964(a$$309) {
    return JAM.call(this.remove, this, [a$$309, !0], JAM.policy.p3);
  }
  function v963(a$$308) {
    function v962() {
      var b$$196 = this.nextSibling;
      var c$$148 = this.parentNode;
      var v12376 = JAM.call(f$$4, null, [this], JAM.policy.p3);
      JAM.call(v12376.remove, v12376, [], JAM.policy.p3);
      var v12377;
      if (b$$196) {
        var v18024 = JAM.call(f$$4, null, [b$$196], JAM.policy.p3);
        v12377 = JAM.call(v18024.before, v18024, [a$$308], JAM.policy.p3);
      } else {
        var v18025 = JAM.call(f$$4, null, [c$$148], JAM.policy.p3);
        v12377 = JAM.call(v18025.append, v18025, [a$$308], JAM.policy.p3);
      }
      v12377;
      return;
    }
    function v961(b$$195) {
      var c$$147 = JAM.call(f$$4, null, [this], JAM.policy.p3);
      var d$$121 = JAM.call(c$$147.html, c$$147, [], JAM.policy.p3);
      JAM.call(c$$147.replaceWith, c$$147, [JAM.call(a$$308.call, a$$308, [this, b$$195, d$$121], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    var v12378 = this[0];
    if (v12378) {
      v12378 = this[0].parentNode;
    }
    if (v12378) {
      if (JAM.call(f$$4.isFunction, f$$4, [a$$308], JAM.policy.p3)) {
        return JAM.call(this.each, this, [v961], JAM.policy.p3);
      }
      var v5361 = typeof a$$308 != "string";
      if (v5361) {
        var v12380 = JAM.call(f$$4, null, [a$$308], JAM.policy.p3);
        a$$308 = JAM.call(v12380.detach, v12380, [], JAM.policy.p3);
      }
      return JAM.call(this.each, this, [v962], JAM.policy.p3);
    }
    var v5363;
    if (this.length) {
      var v21901;
      if (JAM.call(f$$4.isFunction, f$$4, [a$$308], JAM.policy.p3)) {
        v21901 = JAM.call(a$$308, null, [], JAM.policy.p3);
      } else {
        v21901 = a$$308;
      }
      v5363 = JAM.call(this.pushStack, this, [JAM.call(f$$4, null, [v21901], JAM.policy.p3), "replaceWith", a$$308], JAM.policy.p3);
    } else {
      v5363 = this;
    }
    return v5363;
  }
  function v960(a$$306) {
    function v959(a$$307) {
      var v5364 = this[0];
      if (!v5364) {
        v5364 = {};
      }
      var c$$146 = v5364;
      var d$$120 = 0;
      var e$$132 = this.length;
      if (a$$307 === b$$9) {
        var v5365;
        if (c$$146.nodeType === 1) {
          var v12384 = c$$146.innerHTML;
          v5365 = JAM.call(v12384.replace, v12384, [W, ""], JAM.policy.p3);
        } else {
          v5365 = null;
        }
        return v5365;
      }
      var v21902 = typeof a$$307 == "string";
      if (v21902) {
        v21902 = !JAM.call(ba.test, ba, [a$$307], JAM.policy.p3);
      }
      var v18029 = v21902;
      if (v18029) {
        var v21903 = f$$4.support.leadingWhitespace;
        if (!v21903) {
          v21903 = !JAM.call(X.test, X, [a$$307], JAM.policy.p3);
        }
        v18029 = v21903;
      }
      var v12386 = v18029;
      if (v12386) {
        var v21904 = bg;
        var v28747 = JAM.call(Z.exec, Z, [a$$307], JAM.policy.p3);
        if (!v28747) {
          v28747 = ["", ""];
        }
        var v25975 = v28747[1];
        v12386 = !v21904[JAM.call(v25975.toLowerCase, v25975, [], JAM.policy.p3)];
      }
      if (v12386) {
        a$$307 = JAM.call(a$$307.replace, a$$307, [Y, "<$1></$2>"], JAM.policy.p3);
        try {
          var v5367 = d$$120 < e$$132;
          for (;v5367;) {
            var v12387 = this[d$$120];
            if (!v12387) {
              v12387 = {};
            }
            c$$146 = v12387;
            var v12388 = c$$146.nodeType === 1;
            if (v12388) {
              JAM.call(f$$4.cleanData, f$$4, [JAM.call(c$$146.getElementsByTagName, c$$146, ["*"], JAM.policy.p3)], JAM.policy.p3);
              JAM.set(c$$146, "innerHTML", a$$307);
            }
            d$$120 = d$$120 + 1;
            v5367 = d$$120 < e$$132;
          }
          c$$146 = 0;
        } catch (g$$69) {
        }
      }
      if (c$$146) {
        var v12389 = JAM.call(this.empty, this, [], JAM.policy.p3);
        JAM.call(v12389.append, v12389, [a$$307], JAM.policy.p3);
      }
      return;
    }
    return JAM.call(f$$4.access, f$$4, [this, v959, null, a$$306, arguments.length], JAM.policy.p3);
  }
  function v958(a$$305, b$$194) {
    function v957() {
      return JAM.call(f$$4.clone, f$$4, [this, a$$305, b$$194], JAM.policy.p3);
    }
    var v12390;
    if (a$$305 == null) {
      v12390 = !1;
    } else {
      v12390 = a$$305;
    }
    a$$305 = v12390;
    var v12391;
    if (b$$194 == null) {
      v12391 = a$$305;
    } else {
      v12391 = b$$194;
    }
    b$$194 = v12391;
    return JAM.call(this.map, this, [v957], JAM.policy.p3);
  }
  function v956() {
    var a$$304 = 0;
    var b$$193;
    var v5373 = (b$$193 = this[a$$304]) != null;
    for (;v5373;) {
      var v5370 = b$$193.nodeType === 1;
      if (v5370) {
        JAM.call(f$$4.cleanData, f$$4, [JAM.call(b$$193.getElementsByTagName, b$$193, ["*"], JAM.policy.p3)], JAM.policy.p3);
      }
      var v5372 = b$$193.firstChild;
      for (;v5372;) {
        JAM.call(b$$193.removeChild, b$$193, [b$$193.firstChild], JAM.policy.p3);
        v5372 = b$$193.firstChild;
      }
      a$$304 = a$$304 + 1;
      v5373 = (b$$193 = this[a$$304]) != null;
    }
    return this;
  }
  function v955(a$$303, b$$192) {
    var c$$145 = 0;
    var d$$119;
    var v5375 = (d$$119 = this[c$$145]) != null;
    for (;v5375;) {
      var v12397 = !a$$303;
      if (!v12397) {
        v12397 = JAM.call(f$$4.filter, f$$4, [a$$303, [d$$119]], JAM.policy.p3).length;
      }
      if (v12397) {
        var v18037 = !b$$192;
        if (v18037) {
          v18037 = d$$119.nodeType === 1;
        }
        var v12398 = v18037;
        if (v12398) {
          JAM.call(f$$4.cleanData, f$$4, [JAM.call(d$$119.getElementsByTagName, d$$119, ["*"], JAM.policy.p3)], JAM.policy.p3);
          JAM.call(f$$4.cleanData, f$$4, [[d$$119]], JAM.policy.p3);
        }
        var v12399 = d$$119.parentNode;
        if (v12399) {
          var v18038 = d$$119.parentNode;
          JAM.call(v18038.removeChild, v18038, [d$$119], JAM.policy.p3);
        }
      }
      c$$145 = c$$145 + 1;
      v5375 = (d$$119 = this[c$$145]) != null;
    }
    return this;
  }
  function v954() {
    function v953(a$$302) {
      var v5376 = this.parentNode;
      JAM.call(v5376.insertBefore, v5376, [a$$302, this.nextSibling], JAM.policy.p3);
      return;
    }
    var v12401 = this[0];
    if (v12401) {
      v12401 = this[0].parentNode;
    }
    if (v12401) {
      return JAM.call(this.domManip, this, [arguments, !1, v953], JAM.policy.p3);
    }
    if (arguments.length) {
      var a$$301 = JAM.call(this.pushStack, this, [this, "after", arguments], JAM.policy.p3);
      var v5380 = a$$301.push;
      JAM.call(v5380.apply, v5380, [a$$301, JAM.call(f$$4.clean, f$$4, [arguments], JAM.policy.p3)], JAM.policy.p3);
      return a$$301;
    }
    return;
  }
  function v952() {
    function v951(a$$300) {
      var v5383 = this.parentNode;
      JAM.call(v5383.insertBefore, v5383, [a$$300, this], JAM.policy.p3);
      return;
    }
    var v12402 = this[0];
    if (v12402) {
      v12402 = this[0].parentNode;
    }
    if (v12402) {
      return JAM.call(this.domManip, this, [arguments, !1, v951], JAM.policy.p3);
    }
    if (arguments.length) {
      var a$$299 = JAM.call(f$$4.clean, f$$4, [arguments], JAM.policy.p3);
      var v5386 = a$$299.push;
      JAM.call(v5386.apply, v5386, [a$$299, JAM.call(this.toArray, this, [], JAM.policy.p3)], JAM.policy.p3);
      return JAM.call(this.pushStack, this, [a$$299, "before", arguments], JAM.policy.p3);
    }
    return;
  }
  function v950() {
    function v949(a$$298) {
      var v5389 = this.nodeType === 1;
      if (v5389) {
        JAM.call(this.insertBefore, this, [a$$298, this.firstChild], JAM.policy.p3);
      }
      return;
    }
    return JAM.call(this.domManip, this, [arguments, !0, v949], JAM.policy.p3);
  }
  function v948() {
    function v947(a$$297) {
      var v5391 = this.nodeType === 1;
      if (v5391) {
        JAM.call(this.appendChild, this, [a$$297], JAM.policy.p3);
      }
      return;
    }
    return JAM.call(this.domManip, this, [arguments, !0, v947], JAM.policy.p3);
  }
  function v946() {
    function v945() {
      var v5393 = JAM.call(f$$4.nodeName, f$$4, [this, "body"], JAM.policy.p3);
      if (!v5393) {
        var v12406 = JAM.call(f$$4, null, [this], JAM.policy.p3);
        JAM.call(v12406.replaceWith, v12406, [this.childNodes], JAM.policy.p3);
      }
      return;
    }
    var v12409 = JAM.call(this.parent, this, [], JAM.policy.p3);
    var v5394 = JAM.call(v12409.each, v12409, [v945], JAM.policy.p3);
    return JAM.call(v5394.end, v5394, [], JAM.policy.p3);
  }
  function v944(a$$296) {
    function v943(c$$144) {
      var v5395 = JAM.call(f$$4, null, [this], JAM.policy.p3);
      var v12410;
      if (b$$191) {
        v12410 = JAM.call(a$$296.call, a$$296, [this, c$$144], JAM.policy.p3);
      } else {
        v12410 = a$$296;
      }
      JAM.call(v5395.wrapAll, v5395, [v12410], JAM.policy.p3);
      return;
    }
    var b$$191 = JAM.call(f$$4.isFunction, f$$4, [a$$296], JAM.policy.p3);
    return JAM.call(this.each, this, [v943], JAM.policy.p3);
  }
  function v942(a$$295) {
    function v941() {
      var b$$190 = JAM.call(f$$4, null, [this], JAM.policy.p3);
      var c$$143 = JAM.call(b$$190.contents, b$$190, [], JAM.policy.p3);
      var v5397;
      if (c$$143.length) {
        v5397 = JAM.call(c$$143.wrapAll, c$$143, [a$$295], JAM.policy.p3);
      } else {
        v5397 = JAM.call(b$$190.append, b$$190, [a$$295], JAM.policy.p3);
      }
      v5397;
      return;
    }
    function v940(b$$189) {
      var v5398 = JAM.call(f$$4, null, [this], JAM.policy.p3);
      JAM.call(v5398.wrapInner, v5398, [JAM.call(a$$295.call, a$$295, [this, b$$189], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    if (JAM.call(f$$4.isFunction, f$$4, [a$$295], JAM.policy.p3)) {
      return JAM.call(this.each, this, [v940], JAM.policy.p3);
    }
    return JAM.call(this.each, this, [v941], JAM.policy.p3);
  }
  function v939(a$$293) {
    function v938() {
      var a$$294 = this;
      var v12412 = a$$294.firstChild;
      if (v12412) {
        v12412 = a$$294.firstChild.nodeType === 1;
      }
      var v5401 = v12412;
      for (;v5401;) {
        a$$294 = a$$294.firstChild;
        var v12413 = a$$294.firstChild;
        if (v12413) {
          v12413 = a$$294.firstChild.nodeType === 1;
        }
        v5401 = v12413;
      }
      return a$$294;
    }
    function v937(b$$188) {
      var v5402 = JAM.call(f$$4, null, [this], JAM.policy.p3);
      JAM.call(v5402.wrapAll, v5402, [JAM.call(a$$293.call, a$$293, [this, b$$188], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    if (JAM.call(f$$4.isFunction, f$$4, [a$$293], JAM.policy.p3)) {
      return JAM.call(this.each, this, [v937], JAM.policy.p3);
    }
    if (this[0]) {
      var v12414 = JAM.call(f$$4, null, [a$$293, this[0].ownerDocument], JAM.policy.p3);
      var v5405 = JAM.call(v12414.eq, v12414, [0], JAM.policy.p3);
      var b$$187 = JAM.call(v5405.clone, v5405, [!0], JAM.policy.p3);
      var v12415 = this[0].parentNode;
      if (v12415) {
        JAM.call(b$$187.insertBefore, b$$187, [this[0]], JAM.policy.p3);
      }
      var v12416 = JAM.call(b$$187.map, b$$187, [v938], JAM.policy.p3);
      JAM.call(v12416.append, v12416, [this], JAM.policy.p3);
    }
    return this;
  }
  function v936(a$$291) {
    function v935(a$$292) {
      var v5408;
      if (a$$292 === b$$9) {
        v5408 = JAM.call(f$$4.text, f$$4, [this], JAM.policy.p3);
      } else {
        var v12417 = JAM.call(this.empty, this, [], JAM.policy.p3);
        var v25976 = this[0];
        if (v25976) {
          v25976 = this[0].ownerDocument;
        }
        var v21914 = v25976;
        if (!v21914) {
          v21914 = c$$5;
        }
        var v18046 = v21914;
        v5408 = JAM.call(v12417.append, v12417, [JAM.call(v18046.createTextNode, v18046, [a$$292], JAM.policy.p3)], JAM.policy.p3);
      }
      return v5408;
    }
    return JAM.call(f$$4.access, f$$4, [this, v935, null, a$$291, arguments.length], JAM.policy.p3);
  }
  function v934(a$$290, b$$186) {
    var c$$142 = [];
    for (;a$$290;) {
      var v12420 = a$$290.nodeType === 1;
      if (v12420) {
        v12420 = a$$290 !== b$$186;
      }
      var v5410 = v12420;
      if (v5410) {
        JAM.call(c$$142.push, c$$142, [a$$290], JAM.policy.p3);
      }
      a$$290 = a$$290.nextSibling;
    }
    return c$$142;
  }
  function v933(a$$289, b$$185, c$$141, d$$118) {
    b$$185 = b$$185 || 1;
    var e$$131 = 0;
    for (;a$$289;) {
      var v12421 = a$$289.nodeType === 1;
      if (v12421) {
        v12421 = (e$$131 = e$$131 + 1) === b$$185;
      }
      if (v12421) {
        break;
      }
      a$$289 = a$$289[c$$141];
    }
    return a$$289;
  }
  function v932(a$$288, c$$140, d$$117) {
    var e$$130 = [];
    var g$$68 = a$$288[c$$140];
    var v18050 = g$$68;
    if (v18050) {
      v18050 = g$$68.nodeType !== 9;
    }
    var v12422 = v18050;
    if (v12422) {
      var v21916 = d$$117 === b$$9;
      if (!v21916) {
        v21916 = g$$68.nodeType !== 1;
      }
      var v18051 = v21916;
      if (!v18051) {
        var v25980 = JAM.call(f$$4, null, [g$$68], JAM.policy.p3);
        v18051 = !JAM.call(v25980.is, v25980, [d$$117], JAM.policy.p3);
      }
      v12422 = v18051;
    }
    var v5412 = v12422;
    for (;v5412;) {
      var v12423 = g$$68.nodeType === 1;
      if (v12423) {
        JAM.call(e$$130.push, e$$130, [g$$68], JAM.policy.p3);
      }
      g$$68 = g$$68[c$$140];
      var v18053 = g$$68;
      if (v18053) {
        v18053 = g$$68.nodeType !== 9;
      }
      var v12424 = v18053;
      if (v12424) {
        var v21920 = d$$117 === b$$9;
        if (!v21920) {
          v21920 = g$$68.nodeType !== 1;
        }
        var v18054 = v21920;
        if (!v18054) {
          var v25983 = JAM.call(f$$4, null, [g$$68], JAM.policy.p3);
          v18054 = !JAM.call(v25983.is, v25983, [d$$117], JAM.policy.p3);
        }
        v12424 = v18054;
      }
      v5412 = v12424;
    }
    return e$$130;
  }
  function v931(a$$287, b$$184, c$$139) {
    if (c$$139) {
      a$$287 = ":not(" + a$$287 + ")";
    }
    var v5413;
    if (b$$184.length === 1) {
      var v12426;
      var v21923 = f$$4.find;
      if (JAM.call(v21923.matchesSelector, v21923, [b$$184[0], a$$287], JAM.policy.p3)) {
        v12426 = [b$$184[0]];
      } else {
        v12426 = [];
      }
      v5413 = v12426;
    } else {
      var v12427 = f$$4.find;
      v5413 = JAM.call(v12427.matches, v12427, [a$$287, b$$184], JAM.policy.p3);
    }
    return v5413;
  }
  function v930(a$$286, b$$183) {
    function v929(c$$138, d$$116) {
      var e$$129 = JAM.call(f$$4.map, f$$4, [this, b$$183, c$$138], JAM.policy.p3);
      var v21925 = JAM.call(L.test, L, [a$$286], JAM.policy.p3);
      if (!v21925) {
        d$$116 = c$$138;
      }
      var v25985 = d$$116;
      if (v25985) {
        v25985 = typeof d$$116 == "string";
      }
      var v21926 = v25985;
      if (v21926) {
        e$$129 = JAM.call(f$$4.filter, f$$4, [d$$116, e$$129], JAM.policy.p3);
      }
      var v18058;
      var v25986 = this.length > 1;
      if (v25986) {
        v25986 = !R[a$$286];
      }
      if (v25986) {
        v18058 = JAM.call(f$$4.unique, f$$4, [e$$129], JAM.policy.p3);
      } else {
        v18058 = e$$129;
      }
      e$$129 = v18058;
      var v21928 = this.length > 1;
      if (!v21928) {
        v21928 = JAM.call(N.test, N, [d$$116], JAM.policy.p3);
      }
      var v18059 = v21928;
      if (v18059) {
        v18059 = JAM.call(M.test, M, [a$$286], JAM.policy.p3);
      }
      var v12429 = v18059;
      if (v12429) {
        e$$129 = JAM.call(e$$129.reverse, e$$129, [], JAM.policy.p3);
      }
      var v12430 = JAM.call(P.call, P, [arguments], JAM.policy.p3);
      return JAM.call(this.pushStack, this, [e$$129, a$$286, JAM.call(v12430.join, v12430, [","], JAM.policy.p3)], JAM.policy.p3);
    }
    JAM.set(f$$4.fn, a$$286, v929, JAM.policy.p2);
    return;
  }
  function v928(a$$285) {
    var v5416;
    if (JAM.call(f$$4.nodeName, f$$4, [a$$285, "iframe"], JAM.policy.p3)) {
      var v12431 = a$$285.contentDocument;
      if (!v12431) {
        v12431 = a$$285.contentWindow.document;
      }
      v5416 = v12431;
    } else {
      v5416 = JAM.call(f$$4.makeArray, f$$4, [a$$285.childNodes], JAM.policy.p3);
    }
    return v5416;
  }
  function v927(a$$284) {
    return JAM.call(f$$4.sibling, f$$4, [a$$284.firstChild], JAM.policy.p3);
  }
  function v926(a$$283) {
    var v18062 = a$$283.parentNode;
    if (!v18062) {
      v18062 = {};
    }
    return JAM.call(f$$4.sibling, f$$4, [v18062.firstChild, a$$283], JAM.policy.p3);
  }
  function v925(a$$282, b$$182, c$$137) {
    return JAM.call(f$$4.dir, f$$4, [a$$282, "previousSibling", c$$137], JAM.policy.p3);
  }
  function v924(a$$281, b$$181, c$$136) {
    return JAM.call(f$$4.dir, f$$4, [a$$281, "nextSibling", c$$136], JAM.policy.p3);
  }
  function v923(a$$280) {
    return JAM.call(f$$4.dir, f$$4, [a$$280, "previousSibling"], JAM.policy.p3);
  }
  function v922(a$$279) {
    return JAM.call(f$$4.dir, f$$4, [a$$279, "nextSibling"], JAM.policy.p3);
  }
  function v921(a$$278) {
    return JAM.call(f$$4.nth, f$$4, [a$$278, 2, "previousSibling"], JAM.policy.p3);
  }
  function v920(a$$277) {
    return JAM.call(f$$4.nth, f$$4, [a$$277, 2, "nextSibling"], JAM.policy.p3);
  }
  function v919(a$$276, b$$180, c$$135) {
    return JAM.call(f$$4.dir, f$$4, [a$$276, "parentNode", c$$135], JAM.policy.p3);
  }
  function v918(a$$275) {
    return JAM.call(f$$4.dir, f$$4, [a$$275, "parentNode"], JAM.policy.p3);
  }
  function v917(a$$274) {
    var b$$179 = a$$274.parentNode;
    var v5419;
    var v18063 = b$$179;
    if (v18063) {
      v18063 = b$$179.nodeType !== 11;
    }
    if (v18063) {
      v5419 = b$$179;
    } else {
      v5419 = null;
    }
    return v5419;
  }
  function v916() {
    return JAM.call(this.add, this, [this.prevObject], JAM.policy.p3);
  }
  function v915(a$$273, b$$178) {
    var v5421;
    if (typeof a$$273 == "string") {
      v5421 = JAM.call(f$$4, null, [a$$273, b$$178], JAM.policy.p3);
    } else {
      var v18065;
      var v25989 = a$$273;
      if (v25989) {
        v25989 = a$$273.nodeType;
      }
      if (v25989) {
        v18065 = [a$$273];
      } else {
        v18065 = a$$273;
      }
      v5421 = JAM.call(f$$4.makeArray, f$$4, [v18065], JAM.policy.p3);
    }
    var c$$134 = v5421;
    var d$$115 = JAM.call(f$$4.merge, f$$4, [JAM.call(this.get, this, [], JAM.policy.p3), c$$134], JAM.policy.p3);
    var v12438;
    var v21932 = JAM.call(S, null, [c$$134[0]], JAM.policy.p3);
    if (!v21932) {
      v21932 = JAM.call(S, null, [d$$115[0]], JAM.policy.p3);
    }
    if (v21932) {
      v12438 = d$$115;
    } else {
      v12438 = JAM.call(f$$4.unique, f$$4, [d$$115], JAM.policy.p3);
    }
    return JAM.call(this.pushStack, this, [v12438], JAM.policy.p3);
  }
  function v914(a$$272) {
    if (!a$$272) {
      var v5424;
      var v18067 = this[0];
      if (v18067) {
        v18067 = this[0].parentNode;
      }
      if (v18067) {
        v5424 = JAM.call(this.prevAll, this, [], JAM.policy.p3).length;
      } else {
        v5424 = -1;
      }
      return v5424;
    }
    if (typeof a$$272 == "string") {
      return JAM.call(f$$4.inArray, f$$4, [this[0], JAM.call(f$$4, null, [a$$272], JAM.policy.p3)], JAM.policy.p3);
    }
    var v12442;
    if (a$$272.jquery) {
      v12442 = a$$272[0];
    } else {
      v12442 = a$$272;
    }
    return JAM.call(f$$4.inArray, f$$4, [v12442, this], JAM.policy.p3);
  }
  function v913(a$$271, b$$177) {
    var c$$133 = [];
    var d$$114;
    var e$$128;
    var g$$67 = this[0];
    if (JAM.call(f$$4.isArray, f$$4, [a$$271], JAM.policy.p3)) {
      var h$$60 = 1;
      var v18069 = g$$67;
      if (v18069) {
        v18069 = g$$67.ownerDocument;
      }
      var v12443 = v18069;
      if (v12443) {
        v12443 = g$$67 !== b$$177;
      }
      var v5432 = v12443;
      for (;v5432;) {
        d$$114 = 0;
        var v5431 = d$$114 < a$$271.length;
        for (;v5431;) {
          var v12445 = JAM.call(f$$4, null, [g$$67], JAM.policy.p3);
          var v5430 = JAM.call(v12445.is, v12445, [a$$271[d$$114]], JAM.policy.p3);
          if (v5430) {
            JAM.call(c$$133.push, c$$133, [{selector:a$$271[d$$114], elem:g$$67, level:h$$60}], JAM.policy.p3);
          }
          d$$114 = d$$114 + 1;
          v5431 = d$$114 < a$$271.length;
        }
        g$$67 = g$$67.parentNode;
        h$$60 = h$$60 + 1;
        var v18071 = g$$67;
        if (v18071) {
          v18071 = g$$67.ownerDocument;
        }
        var v12449 = v18071;
        if (v12449) {
          v12449 = g$$67 !== b$$177;
        }
        v5432 = v12449;
      }
      return c$$133;
    }
    var v5434;
    var v18072 = JAM.call(Q.test, Q, [a$$271], JAM.policy.p3);
    if (!v18072) {
      v18072 = typeof a$$271 != "string";
    }
    if (v18072) {
      var v18073 = b$$177;
      if (!v18073) {
        v18073 = this.context;
      }
      v5434 = JAM.call(f$$4, null, [a$$271, v18073], JAM.policy.p3);
    } else {
      v5434 = 0;
    }
    var i$$131 = v5434;
    d$$114 = 0;
    e$$128 = this.length;
    var v5437 = d$$114 < e$$128;
    for (;v5437;) {
      g$$67 = this[d$$114];
      for (;g$$67;) {
        var v12452;
        if (i$$131) {
          v12452 = JAM.call(i$$131.index, i$$131, [g$$67], JAM.policy.p3) > -1;
        } else {
          var v18075 = f$$4.find;
          v12452 = JAM.call(v18075.matchesSelector, v18075, [g$$67, a$$271], JAM.policy.p3);
        }
        if (v12452) {
          JAM.call(c$$133.push, c$$133, [g$$67], JAM.policy.p3);
          break;
        }
        g$$67 = g$$67.parentNode;
        var v21937 = !g$$67;
        if (!v21937) {
          v21937 = !g$$67.ownerDocument;
        }
        var v18076 = v21937;
        if (!v18076) {
          v18076 = g$$67 === b$$177;
        }
        var v12453 = v18076;
        if (!v12453) {
          v12453 = g$$67.nodeType === 11;
        }
        if (v12453) {
          break;
        }
      }
      d$$114 = d$$114 + 1;
      v5437 = d$$114 < e$$128;
    }
    var v5438;
    if (c$$133.length > 1) {
      v5438 = JAM.call(f$$4.unique, f$$4, [c$$133], JAM.policy.p3);
    } else {
      v5438 = c$$133;
    }
    c$$133 = v5438;
    return JAM.call(this.pushStack, this, [c$$133, "closest", a$$271], JAM.policy.p3);
  }
  function v912(a$$270) {
    var v5439 = !!a$$270;
    if (v5439) {
      var v12456;
      if (typeof a$$270 == "string") {
        var v18080;
        if (JAM.call(Q.test, Q, [a$$270], JAM.policy.p3)) {
          var v25995 = JAM.call(f$$4, null, [a$$270, this.context], JAM.policy.p3);
          v18080 = JAM.call(v25995.index, v25995, [this[0]], JAM.policy.p3) >= 0;
        } else {
          v18080 = JAM.call(f$$4.filter, f$$4, [a$$270, this], JAM.policy.p3).length > 0;
        }
        v12456 = v18080;
      } else {
        v12456 = JAM.call(this.filter, this, [a$$270], JAM.policy.p3).length > 0;
      }
      v5439 = v12456;
    }
    return v5439;
  }
  function v911(a$$269) {
    return JAM.call(this.pushStack, this, [JAM.call(T$$2, null, [this, a$$269, !0], JAM.policy.p3), "filter", a$$269], JAM.policy.p3);
  }
  function v910(a$$268) {
    return JAM.call(this.pushStack, this, [JAM.call(T$$2, null, [this, a$$268, !1], JAM.policy.p3), "not", a$$268], JAM.policy.p3);
  }
  function v909(a$$266) {
    function v908() {
      var a$$267 = 0;
      var c$$132 = b$$176.length;
      var v5443 = a$$267 < c$$132;
      for (;v5443;) {
        if (JAM.call(f$$4.contains, f$$4, [this, b$$176[a$$267]], JAM.policy.p3)) {
          return!0;
        }
        a$$267 = a$$267 + 1;
        v5443 = a$$267 < c$$132;
      }
      return;
    }
    var b$$176 = JAM.call(f$$4, null, [a$$266], JAM.policy.p3);
    return JAM.call(this.filter, this, [v908], JAM.policy.p3);
  }
  function v907(a$$265) {
    function v906() {
      c$$131 = 0;
      d$$113 = b$$175.length;
      var v5445 = c$$131 < d$$113;
      for (;v5445;) {
        if (JAM.call(f$$4.contains, f$$4, [b$$175[c$$131], this], JAM.policy.p3)) {
          return!0;
        }
        c$$131 = c$$131 + 1;
        v5445 = c$$131 < d$$113;
      }
      return;
    }
    var b$$175 = this;
    var c$$131;
    var d$$113;
    if (typeof a$$265 != "string") {
      var v5446 = JAM.call(f$$4, null, [a$$265], JAM.policy.p3);
      return JAM.call(v5446.filter, v5446, [v906], JAM.policy.p3);
    }
    var e$$127 = JAM.call(this.pushStack, this, ["", "find", a$$265], JAM.policy.p3);
    var g$$66;
    var h$$59;
    var i$$130;
    c$$131 = 0;
    d$$113 = this.length;
    var v5453 = c$$131 < d$$113;
    for (;v5453;) {
      g$$66 = e$$127.length;
      JAM.call(f$$4.find, f$$4, [a$$265, this[c$$131], e$$127], JAM.policy.p3);
      if (c$$131 > 0) {
        h$$59 = g$$66;
        var v5451 = h$$59 < e$$127.length;
        for (;v5451;) {
          i$$130 = 0;
          var v5450 = i$$130 < g$$66;
          for (;v5450;) {
            if (e$$127[i$$130] === e$$127[h$$59]) {
              var v5448 = h$$59;
              h$$59 = h$$59 - 1;
              JAM.call(e$$127.splice, e$$127, [v5448, 1], JAM.policy.p3);
              break;
            }
            i$$130 = i$$130 + 1;
            v5450 = i$$130 < g$$66;
          }
          h$$59 = h$$59 + 1;
          v5451 = h$$59 < e$$127.length;
        }
      }
      c$$131 = c$$131 + 1;
      v5453 = c$$131 < d$$113;
    }
    return e$$127;
  }
  function v905() {
    function v904(a$$263) {
      var v12467;
      if (a$$263) {
        var v18083 = a$$263.ownerDocument;
        if (!v18083) {
          v18083 = a$$263;
        }
        v12467 = v18083;
      } else {
        v12467 = 0;
      }
      var b$$173 = v12467.documentElement;
      var v5455;
      if (b$$173) {
        v5455 = b$$173.nodeName !== "HTML";
      } else {
        v5455 = !1;
      }
      return v5455;
    }
    function v903() {
      return!1;
    }
    function v902(a$$262, b$$172) {
      return!!(JAM.call(a$$262.compareDocumentPosition, a$$262, [b$$172], JAM.policy.p3) & 16);
    }
    function v901(a$$261, b$$171) {
      var v5457 = a$$261 !== b$$171;
      if (v5457) {
        var v12470;
        if (a$$261.contains) {
          v12470 = JAM.call(a$$261.contains, a$$261, [b$$171], JAM.policy.p3);
        } else {
          v12470 = !0;
        }
        v5457 = v12470;
      }
      return v5457;
    }
    function v900() {
      function v899(a$$260, b$$170, c$$129) {
        var v12471 = typeof b$$170.getElementsByClassName != "undefined";
        if (v12471) {
          v12471 = !c$$129;
        }
        if (v12471) {
          return JAM.call(b$$170.getElementsByClassName, b$$170, [a$$260[1]], JAM.policy.p3);
        }
        return;
      }
      var a$$259 = JAM.call(c$$5.createElement, c$$5, ["div"], JAM.policy.p3);
      JAM.set(a$$259, "innerHTML", "<div class='test e'></div><div class='test'></div>");
      var v12472 = !!a$$259.getElementsByClassName;
      if (v12472) {
        v12472 = JAM.call(a$$259.getElementsByClassName, a$$259, ["e"], JAM.policy.p3).length !== 0;
      }
      if (v12472) {
        a$$259.lastChild.className = "e";
        if (JAM.call(a$$259.getElementsByClassName, a$$259, ["e"], JAM.policy.p3).length === 1) {
          return;
        }
        var v18090 = o$$10.order;
        JAM.call(v18090.splice, v18090, [1, 0, "CLASS"], JAM.policy.p3);
        o$$10.find.CLASS = v899;
        a$$259 = null;
      }
      return;
    }
    function v898() {
      function v897(a$$258, c$$128) {
        c$$128 = JAM.call(c$$128.replace, c$$128, [/\=\s*([^'"\]]*)\s*\]/g, "='$1']"], JAM.policy.p3);
        if (!JAM.call(m$$19.isXML, m$$19, [a$$258], JAM.policy.p3)) {
          try {
            var v12475 = e$$125;
            if (!v12475) {
              var v25998 = o$$10.match.PSEUDO;
              var v18092 = !JAM.call(v25998.test, v25998, [c$$128], JAM.policy.p3);
              if (v18092) {
                v18092 = !JAM.call(/!=/.test, /!=/, [c$$128], JAM.policy.p3);
              }
              v12475 = v18092;
            }
            if (v12475) {
              var f$$41 = JAM.call(b$$169.call, b$$169, [a$$258, c$$128], JAM.policy.p3);
              var v18094 = f$$41;
              if (!v18094) {
                v18094 = !d$$111;
              }
              var v12476 = v18094;
              if (!v12476) {
                var v18095 = a$$258.document;
                if (v18095) {
                  v18095 = a$$258.document.nodeType !== 11;
                }
                v12476 = v18095;
              }
              if (v12476) {
                return f$$41;
              }
            }
          } catch (g$$64) {
          }
        }
        return JAM.call(m$$19, null, [c$$128, null, null, [a$$258]], JAM.policy.p3).length > 0;
      }
      var a$$257 = c$$5.documentElement;
      var v18098 = a$$257.matchesSelector;
      if (!v18098) {
        v18098 = a$$257.mozMatchesSelector;
      }
      var v12478 = v18098;
      if (!v12478) {
        v12478 = a$$257.webkitMatchesSelector;
      }
      var v5467 = v12478;
      if (!v5467) {
        v5467 = a$$257.msMatchesSelector;
      }
      var b$$169 = v5467;
      if (b$$169) {
        var d$$111 = !JAM.call(b$$169.call, b$$169, [JAM.call(c$$5.createElement, c$$5, ["div"], JAM.policy.p3), "div"], JAM.policy.p3);
        var e$$125 = !1;
        try {
          JAM.call(b$$169.call, b$$169, [c$$5.documentElement, "[test!='']:sizzle"], JAM.policy.p3);
        } catch (f$$40) {
          e$$125 = !0;
        }
        m$$19.matchesSelector = v897;
      }
      return;
    }
    function v896() {
      function v895(b$$168, e$$124, f$$39, g$$63) {
        e$$124 = e$$124 || c$$5;
        var v12481 = !g$$63;
        if (v12481) {
          v12481 = !JAM.call(m$$19.isXML, m$$19, [e$$124], JAM.policy.p3);
        }
        if (v12481) {
          var h$$57 = JAM.call(/^(\w+$)|^\.([\w\-]+$)|^#([\w\-]+$)/.exec, /^(\w+$)|^\.([\w\-]+$)|^#([\w\-]+$)/, [b$$168], JAM.policy.p3);
          var v12482 = h$$57;
          if (v12482) {
            var v18101 = e$$124.nodeType === 1;
            if (!v18101) {
              v18101 = e$$124.nodeType === 9;
            }
            v12482 = v18101;
          }
          if (v12482) {
            if (h$$57[1]) {
              return JAM.call(s$$22, null, [JAM.call(e$$124.getElementsByTagName, e$$124, [b$$168], JAM.policy.p3), f$$39], JAM.policy.p3);
            }
            var v18102 = h$$57[2];
            if (v18102) {
              v18102 = o$$10.find.CLASS;
            }
            var v12483 = v18102;
            if (v12483) {
              v12483 = e$$124.getElementsByClassName;
            }
            if (v12483) {
              return JAM.call(s$$22, null, [JAM.call(e$$124.getElementsByClassName, e$$124, [h$$57[2]], JAM.policy.p3), f$$39], JAM.policy.p3);
            }
          }
          if (e$$124.nodeType === 9) {
            var v12486 = b$$168 === "body";
            if (v12486) {
              v12486 = e$$124.body;
            }
            if (v12486) {
              return JAM.call(s$$22, null, [[e$$124.body], f$$39], JAM.policy.p3);
            }
            var v12488 = h$$57;
            if (v12488) {
              v12488 = h$$57[3];
            }
            if (v12488) {
              var i$$128 = JAM.call(e$$124.getElementById, e$$124, [h$$57[3]], JAM.policy.p3);
              var v12489 = !i$$128;
              if (!v12489) {
                v12489 = !i$$128.parentNode;
              }
              if (v12489) {
                return JAM.call(s$$22, null, [[], f$$39], JAM.policy.p3);
              }
              if (i$$128.id === h$$57[3]) {
                return JAM.call(s$$22, null, [[i$$128], f$$39], JAM.policy.p3);
              }
            }
            try {
              return JAM.call(s$$22, null, [JAM.call(e$$124.querySelectorAll, e$$124, [b$$168], JAM.policy.p3), f$$39], JAM.policy.p3);
            } catch (j$$48) {
            }
          } else {
            var v12492 = e$$124.nodeType === 1;
            if (v12492) {
              var v21957 = e$$124.nodeName;
              v12492 = JAM.call(v21957.toLowerCase, v21957, [], JAM.policy.p3) !== "object";
            }
            if (v12492) {
              var k$$29 = e$$124;
              var l$$41 = JAM.call(e$$124.getAttribute, e$$124, ["id"], JAM.policy.p3);
              var n$$71 = l$$41 || d$$110;
              var p$$33 = e$$124.parentNode;
              var q$$11 = JAM.call(/^\s*[+~]/.test, /^\s*[+~]/, [b$$168], JAM.policy.p3);
              var v12493;
              if (l$$41) {
                v12493 = n$$71 = JAM.call(n$$71.replace, n$$71, [/'/g, "\\$&"], JAM.policy.p3);
              } else {
                v12493 = JAM.call(e$$124.setAttribute, e$$124, ["id", n$$71], JAM.policy.p3);
              }
              v12493;
              var v12494 = q$$11 && p$$33;
              if (v12494) {
                e$$124 = e$$124.parentNode;
              }
              try {
                var v12495 = !q$$11;
                if (!v12495) {
                  v12495 = p$$33;
                }
                if (v12495) {
                  return JAM.call(s$$22, null, [JAM.call(e$$124.querySelectorAll, e$$124, ["[id='" + n$$71 + "'] " + b$$168], JAM.policy.p3), f$$39], JAM.policy.p3);
                }
              } catch (r$$13) {
              } finally {
                if (!l$$41) {
                  JAM.call(k$$29.removeAttribute, k$$29, ["id"], JAM.policy.p3);
                }
              }
            }
          }
        }
        return JAM.call(a$$256, null, [b$$168, e$$124, f$$39, g$$63], JAM.policy.p3);
      }
      var a$$256 = m$$19;
      var b$$167 = JAM.call(c$$5.createElement, c$$5, ["div"], JAM.policy.p3);
      var d$$110 = "__sizzle__";
      JAM.set(b$$167, "innerHTML", "<p class='TEST'></p>");
      var v12498 = !b$$167.querySelectorAll;
      if (!v12498) {
        v12498 = JAM.call(b$$167.querySelectorAll, b$$167, [".TEST"], JAM.policy.p3).length !== 0;
      }
      if (v12498) {
        m$$19 = v895;
        var e$$123;
        for (e$$123 in a$$256) {
          JAM.set(m$$19, e$$123, a$$256[e$$123], JAM.policy.p2);
        }
        b$$167 = null;
      }
      return;
    }
    function v894() {
      function v893(a$$255) {
        return JAM.call(a$$255.getAttribute, a$$255, ["href", 2], JAM.policy.p3);
      }
      function v892(a$$254, b$$166) {
        var c$$127 = JAM.call(b$$166.getElementsByTagName, b$$166, [a$$254[1]], JAM.policy.p3);
        if (a$$254[1] === "*") {
          var d$$109 = [];
          var e$$122 = 0;
          var v5491 = c$$127[e$$122];
          for (;v5491;) {
            var v5490 = c$$127[e$$122].nodeType === 1;
            if (v5490) {
              JAM.call(d$$109.push, d$$109, [c$$127[e$$122]], JAM.policy.p3);
            }
            e$$122 = e$$122 + 1;
            v5491 = c$$127[e$$122];
          }
          c$$127 = d$$109;
        }
        return c$$127;
      }
      var a$$253 = JAM.call(c$$5.createElement, c$$5, ["div"], JAM.policy.p3);
      JAM.call(a$$253.appendChild, a$$253, [JAM.call(c$$5.createComment, c$$5, [""], JAM.policy.p3)], JAM.policy.p3);
      var v26001 = JAM.call(a$$253.getElementsByTagName, a$$253, ["*"], JAM.policy.p3).length > 0;
      if (v26001) {
        o$$10.find.TAG = v892;
      }
      JAM.set(a$$253, "innerHTML", "<a href='#'></a>");
      var v26002 = a$$253.firstChild;
      if (v26002) {
        v26002 = typeof a$$253.firstChild.getAttribute != "undefined";
      }
      var v21960 = v26002;
      if (v21960) {
        var v27682 = a$$253.firstChild;
        v21960 = JAM.call(v27682.getAttribute, v27682, ["href"], JAM.policy.p3) !== "#";
      }
      var v18113 = v21960;
      if (v18113) {
        o$$10.attrHandle.href = v893;
      }
      a$$253 = null;
      return;
    }
    function v891() {
      function v890(a$$252, b$$165) {
        var v5493 = typeof a$$252.getAttributeNode != "undefined";
        if (v5493) {
          v5493 = JAM.call(a$$252.getAttributeNode, a$$252, ["id"], JAM.policy.p3);
        }
        var c$$126 = v5493;
        var v12503 = a$$252.nodeType === 1;
        if (v12503) {
          v12503 = c$$126;
        }
        var v5494 = v12503;
        if (v5494) {
          v5494 = c$$126.nodeValue === b$$165;
        }
        return v5494;
      }
      function v889(a$$251, c$$125, d$$108) {
        var v12505 = typeof c$$125.getElementById != "undefined";
        if (v12505) {
          v12505 = !d$$108;
        }
        if (v12505) {
          var e$$121 = JAM.call(c$$125.getElementById, c$$125, [a$$251[1]], JAM.policy.p3);
          var v5496;
          if (e$$121) {
            var v12506;
            var v21963 = e$$121.id === a$$251[1];
            if (!v21963) {
              var v26006 = typeof e$$121.getAttributeNode != "undefined";
              if (v26006) {
                v26006 = JAM.call(e$$121.getAttributeNode, e$$121, ["id"], JAM.policy.p3).nodeValue === a$$251[1];
              }
              v21963 = v26006;
            }
            if (v21963) {
              v12506 = [e$$121];
            } else {
              v12506 = b$$9;
            }
            v5496 = v12506;
          } else {
            v5496 = [];
          }
          return v5496;
        }
        return;
      }
      var a$$250 = JAM.call(c$$5.createElement, c$$5, ["div"], JAM.policy.p3);
      var v12507 = JAM.new(Date, [], JAM.policy.p3);
      var d$$107 = "script" + JAM.call(v12507.getTime, v12507, [], JAM.policy.p3);
      var e$$120 = c$$5.documentElement;
      JAM.set(a$$250, "innerHTML", "<a name='" + d$$107 + "'/>");
      JAM.call(e$$120.insertBefore, e$$120, [a$$250, e$$120.firstChild], JAM.policy.p3);
      var v21964 = JAM.call(c$$5.getElementById, c$$5, [d$$107], JAM.policy.p3);
      if (v21964) {
        o$$10.find.ID = v889;
        o$$10.filter.ID = v890;
      }
      JAM.call(e$$120.removeChild, e$$120, [a$$250], JAM.policy.p3);
      e$$120 = a$$250 = null;
      return;
    }
    function v888(a$$249, b$$164, c$$124) {
      if (a$$249 === b$$164) {
        return c$$124;
      }
      var d$$106 = a$$249.nextSibling;
      for (;d$$106;) {
        if (d$$106 === b$$164) {
          return-1;
        }
        d$$106 = d$$106.nextSibling;
      }
      return 1;
    }
    function v887(a$$248, b$$163) {
      if (a$$248 === b$$163) {
        h$$47 = !0;
        return 0;
      }
      var v12508 = a$$248.sourceIndex;
      if (v12508) {
        v12508 = b$$163.sourceIndex;
      }
      if (v12508) {
        return a$$248.sourceIndex - b$$163.sourceIndex;
      }
      var c$$123;
      var d$$105;
      var e$$119 = [];
      var f$$38 = [];
      var g$$62 = a$$248.parentNode;
      var i$$127 = b$$163.parentNode;
      var j$$47 = g$$62;
      if (g$$62 === i$$127) {
        return JAM.call(v$$6, null, [a$$248, b$$163], JAM.policy.p3);
      }
      if (!g$$62) {
        return-1;
      }
      if (!i$$127) {
        return 1;
      }
      for (;j$$47;) {
        JAM.call(e$$119.unshift, e$$119, [j$$47], JAM.policy.p3);
        j$$47 = j$$47.parentNode;
      }
      j$$47 = i$$127;
      for (;j$$47;) {
        JAM.call(f$$38.unshift, f$$38, [j$$47], JAM.policy.p3);
        j$$47 = j$$47.parentNode;
      }
      c$$123 = e$$119.length;
      d$$105 = f$$38.length;
      var k$$28 = 0;
      var v12509 = k$$28 < c$$123;
      if (v12509) {
        v12509 = k$$28 < d$$105;
      }
      var v5511 = v12509;
      for (;v5511;) {
        if (e$$119[k$$28] !== f$$38[k$$28]) {
          return JAM.call(v$$6, null, [e$$119[k$$28], f$$38[k$$28]], JAM.policy.p3);
        }
        k$$28 = k$$28 + 1;
        var v12512 = k$$28 < c$$123;
        if (v12512) {
          v12512 = k$$28 < d$$105;
        }
        v5511 = v12512;
      }
      var v5512;
      if (k$$28 === c$$123) {
        v5512 = JAM.call(v$$6, null, [a$$248, f$$38[k$$28], -1], JAM.policy.p3);
      } else {
        v5512 = JAM.call(v$$6, null, [e$$119[k$$28], b$$163, 1], JAM.policy.p3);
      }
      return v5512;
    }
    function v886(a$$247, b$$162) {
      if (a$$247 === b$$162) {
        h$$47 = !0;
        return 0;
      }
      var v12516 = !a$$247.compareDocumentPosition;
      if (!v12516) {
        v12516 = !b$$162.compareDocumentPosition;
      }
      if (v12516) {
        var v5514;
        if (a$$247.compareDocumentPosition) {
          v5514 = -1;
        } else {
          v5514 = 1;
        }
        return v5514;
      }
      var v5516;
      if (JAM.call(a$$247.compareDocumentPosition, a$$247, [b$$162], JAM.policy.p3) & 4) {
        v5516 = -1;
      } else {
        v5516 = 1;
      }
      return v5516;
    }
    function v885(a$$246, b$$161) {
      var c$$122 = 0;
      var d$$104 = b$$161 || [];
      if (JAM.call(g$$47.call, g$$47, [a$$246], JAM.policy.p3) === "[object Array]") {
        var v5517 = Array.prototype.push;
        JAM.call(v5517.apply, v5517, [d$$104, a$$246], JAM.policy.p3);
      } else {
        if (typeof a$$246.length == "number") {
          var e$$118 = a$$246.length;
          var v5519 = c$$122 < e$$118;
          for (;v5519;) {
            JAM.call(d$$104.push, d$$104, [a$$246[c$$122]], JAM.policy.p3);
            c$$122 = c$$122 + 1;
            v5519 = c$$122 < e$$118;
          }
        } else {
          var v5521 = a$$246[c$$122];
          for (;v5521;) {
            JAM.call(d$$104.push, d$$104, [a$$246[c$$122]], JAM.policy.p3);
            c$$122 = c$$122 + 1;
            v5521 = a$$246[c$$122];
          }
        }
      }
      return d$$104;
    }
    function v884(a$$243, b$$158, c$$121, d$$103) {
      var e$$117 = b$$158[2];
      var f$$37 = o$$10.setFilters[e$$117];
      if (f$$37) {
        return JAM.call(f$$37, null, [a$$243, c$$121, b$$158, d$$103], JAM.policy.p3);
      }
      return;
    }
    function v883(a$$242, b$$157) {
      var c$$120 = b$$157[1];
      var v5525;
      if (m$$19.attr) {
        v5525 = JAM.call(m$$19.attr, m$$19, [a$$242, c$$120], JAM.policy.p3);
      } else {
        var v12522;
        if (o$$10.attrHandle[c$$120]) {
          var v18123 = o$$10.attrHandle;
          v12522 = JAM.call(v18123[c$$120], v18123, [a$$242], JAM.policy.p3);
        } else {
          var v18124;
          if (a$$242[c$$120] != null) {
            v18124 = a$$242[c$$120];
          } else {
            v18124 = JAM.call(a$$242.getAttribute, a$$242, [c$$120], JAM.policy.p3);
          }
          v12522 = v18124;
        }
        v5525 = v12522;
      }
      var d$$102 = v5525;
      var e$$116 = d$$102 + "";
      var f$$36 = b$$157[2];
      var g$$61 = b$$157[4];
      var v5526;
      if (d$$102 == null) {
        v5526 = f$$36 === "!=";
      } else {
        var v12524;
        var v21967 = !f$$36;
        if (v21967) {
          v21967 = m$$19.attr;
        }
        if (v21967) {
          v12524 = d$$102 != null;
        } else {
          var v18126;
          if (f$$36 === "=") {
            v18126 = e$$116 === g$$61;
          } else {
            var v21968;
            if (f$$36 === "*=") {
              v21968 = JAM.call(e$$116.indexOf, e$$116, [g$$61], JAM.policy.p3) >= 0;
            } else {
              var v26012;
              if (f$$36 === "~=") {
                var v28752 = " " + e$$116 + " ";
                v26012 = JAM.call(v28752.indexOf, v28752, [g$$61], JAM.policy.p3) >= 0;
              } else {
                var v27689;
                if (g$$61) {
                  var v28753;
                  if (f$$36 === "!=") {
                    v28753 = e$$116 !== g$$61;
                  } else {
                    var v29438;
                    if (f$$36 === "^=") {
                      v29438 = JAM.call(e$$116.indexOf, e$$116, [g$$61], JAM.policy.p3) === 0;
                    } else {
                      var v29871;
                      if (f$$36 === "$=") {
                        v29871 = JAM.call(e$$116.substr, e$$116, [e$$116.length - g$$61.length], JAM.policy.p3) === g$$61;
                      } else {
                        var v30155;
                        if (f$$36 === "|=") {
                          var v30407 = e$$116 === g$$61;
                          if (!v30407) {
                            v30407 = JAM.call(e$$116.substr, e$$116, [0, g$$61.length + 1], JAM.policy.p3) === g$$61 + "-";
                          }
                          v30155 = v30407;
                        } else {
                          v30155 = !1;
                        }
                        v29871 = v30155;
                      }
                      v29438 = v29871;
                    }
                    v28753 = v29438;
                  }
                  v27689 = v28753;
                } else {
                  var v28754 = e$$116;
                  if (v28754) {
                    v28754 = d$$102 !== !1;
                  }
                  v27689 = v28754;
                }
                v26012 = v27689;
              }
              v21968 = v26012;
            }
            v18126 = v21968;
          }
          v12524 = v18126;
        }
        v5526 = v12524;
      }
      return v5526;
    }
    function v882(a$$241, b$$156) {
      var v26014 = a$$241.className;
      if (!v26014) {
        v26014 = JAM.call(a$$241.getAttribute, a$$241, ["class"], JAM.policy.p3);
      }
      var v12526 = " " + v26014 + " ";
      return JAM.call(v12526.indexOf, v12526, [b$$156], JAM.policy.p3) > -1;
    }
    function v881(a$$240, b$$155) {
      var v12527 = b$$155 === "*";
      if (v12527) {
        v12527 = a$$240.nodeType === 1;
      }
      var v5528 = v12527;
      if (!v5528) {
        var v12528 = !!a$$240.nodeName;
        if (v12528) {
          var v21972 = a$$240.nodeName;
          v12528 = JAM.call(v21972.toLowerCase, v21972, [], JAM.policy.p3) === b$$155;
        }
        v5528 = v12528;
      }
      return v5528;
    }
    function v880(a$$239, b$$154) {
      var v5529 = a$$239.nodeType === 1;
      if (v5529) {
        v5529 = JAM.call(a$$239.getAttribute, a$$239, ["id"], JAM.policy.p3) === b$$154;
      }
      return v5529;
    }
    function v879(a$$238, b$$153) {
      var c$$119;
      var e$$115;
      var f$$35;
      var g$$60;
      var h$$56;
      var i$$126;
      var j$$46;
      var k$$27 = b$$153[1];
      var l$$40 = a$$238;
      switch(k$$27) {
        case "only":
        ;
        case "first":
          var v5531 = l$$40 = l$$40.previousSibling;
          for (;v5531;) {
            if (l$$40.nodeType === 1) {
              return!1;
            }
            v5531 = l$$40 = l$$40.previousSibling;
          }
          if (k$$27 === "first") {
            return!0;
          }
          l$$40 = a$$238;
        case "last":
          var v5534 = l$$40 = l$$40.nextSibling;
          for (;v5534;) {
            if (l$$40.nodeType === 1) {
              return!1;
            }
            v5534 = l$$40 = l$$40.nextSibling;
          }
          return!0;
        case "nth":
          c$$119 = b$$153[2];
          e$$115 = b$$153[3];
          var v12534 = c$$119 === 1;
          if (v12534) {
            v12534 = e$$115 === 0;
          }
          if (v12534) {
            return!0;
          }
          f$$35 = b$$153[0];
          g$$60 = a$$238.parentNode;
          var v12535 = g$$60;
          if (v12535) {
            var v18132 = g$$60[d$$86] !== f$$35;
            if (!v18132) {
              v18132 = !a$$238.nodeIndex;
            }
            v12535 = v18132;
          }
          if (v12535) {
            i$$126 = 0;
            l$$40 = g$$60.firstChild;
            for (;l$$40;) {
              var v5536 = l$$40.nodeType === 1;
              if (v5536) {
                l$$40.nodeIndex = i$$126 = i$$126 + 1;
              }
              l$$40 = l$$40.nextSibling;
            }
            JAM.set(g$$60, d$$86, f$$35, JAM.policy.p2);
          }
          j$$46 = a$$238.nodeIndex - e$$115;
          var v5539;
          if (c$$119 === 0) {
            v5539 = j$$46 === 0;
          } else {
            var v12537 = j$$46 % c$$119 === 0;
            if (v12537) {
              v12537 = j$$46 / c$$119 >= 0;
            }
            v5539 = v12537;
          }
          return v5539;
      }
      return;
    }
    function v878(a$$237, b$$152, c$$118, d$$101) {
      var e$$114 = b$$152[1];
      var f$$34 = o$$10.filters[e$$114];
      if (f$$34) {
        return JAM.call(f$$34, null, [a$$237, c$$118, b$$152, d$$101], JAM.policy.p3);
      }
      if (e$$114 === "contains") {
        var v26015 = a$$237.textContent;
        if (!v26015) {
          v26015 = a$$237.innerText;
        }
        var v21976 = v26015;
        if (!v21976) {
          v21976 = JAM.call(n$$68, null, [[a$$237]], JAM.policy.p3);
        }
        var v18135 = v21976;
        if (!v18135) {
          v18135 = "";
        }
        var v12539 = v18135;
        return JAM.call(v12539.indexOf, v12539, [b$$152[3]], JAM.policy.p3) >= 0;
      }
      if (e$$114 === "not") {
        var g$$59 = b$$152[3];
        var h$$55 = 0;
        var i$$125 = g$$59.length;
        var v5544 = h$$55 < i$$125;
        for (;v5544;) {
          if (g$$59[h$$55] === a$$237) {
            return!1;
          }
          h$$55 = h$$55 + 1;
          v5544 = h$$55 < i$$125;
        }
        return!0;
      }
      JAM.call(m$$19.error, m$$19, [e$$114], JAM.policy.p3);
      return;
    }
    function v877(a$$236, b$$151, c$$117) {
      return c$$117[3] - 0 === b$$151;
    }
    function v876(a$$235, b$$150, c$$116) {
      return c$$116[3] - 0 === b$$150;
    }
    function v875(a$$234, b$$149, c$$115) {
      return b$$149 > c$$115[3] - 0;
    }
    function v874(a$$233, b$$148, c$$114) {
      return b$$148 < c$$114[3] - 0;
    }
    function v873(a$$232, b$$147) {
      return b$$147 % 2 === 1;
    }
    function v872(a$$231, b$$146) {
      return b$$146 % 2 === 0;
    }
    function v871(a$$230, b$$145, c$$113, d$$100) {
      return b$$145 === d$$100.length - 1;
    }
    function v870(a$$229, b$$144) {
      return b$$144 === 0;
    }
    function v869(a$$228) {
      return a$$228 === a$$228.ownerDocument.activeElement;
    }
    function v868(a$$227) {
      return JAM.call(/input|select|textarea|button/i.test, /input|select|textarea|button/i, [a$$227.nodeName], JAM.policy.p3);
    }
    function v867(a$$226) {
      var v5555 = a$$226.nodeName;
      var b$$143 = JAM.call(v5555.toLowerCase, v5555, [], JAM.policy.p3);
      var v12548 = b$$143 === "input";
      if (v12548) {
        v12548 = "button" === a$$226.type;
      }
      var v5556 = v12548;
      if (!v5556) {
        v5556 = b$$143 === "button";
      }
      return v5556;
    }
    function v866(a$$225) {
      var v5557 = a$$225.nodeName;
      var b$$142 = JAM.call(v5557.toLowerCase, v5557, [], JAM.policy.p3);
      var v12550 = b$$142 === "input";
      if (!v12550) {
        v12550 = b$$142 === "button";
      }
      var v5558 = v12550;
      if (v5558) {
        v5558 = "reset" === a$$225.type;
      }
      return v5558;
    }
    function v865(a$$224) {
      var v18138 = a$$224.nodeName;
      var v5559 = JAM.call(v18138.toLowerCase, v18138, [], JAM.policy.p3) === "input";
      if (v5559) {
        v5559 = "image" === a$$224.type;
      }
      return v5559;
    }
    function v864(a$$223) {
      var v5560 = a$$223.nodeName;
      var b$$141 = JAM.call(v5560.toLowerCase, v5560, [], JAM.policy.p3);
      var v12554 = b$$141 === "input";
      if (!v12554) {
        v12554 = b$$141 === "button";
      }
      var v5561 = v12554;
      if (v5561) {
        v5561 = "submit" === a$$223.type;
      }
      return v5561;
    }
    function v863(a$$222) {
      var v18140 = a$$222.nodeName;
      var v5562 = JAM.call(v18140.toLowerCase, v18140, [], JAM.policy.p3) === "input";
      if (v5562) {
        v5562 = "password" === a$$222.type;
      }
      return v5562;
    }
    function v862(a$$221) {
      var v18141 = a$$221.nodeName;
      var v5563 = JAM.call(v18141.toLowerCase, v18141, [], JAM.policy.p3) === "input";
      if (v5563) {
        v5563 = "file" === a$$221.type;
      }
      return v5563;
    }
    function v861(a$$220) {
      var v18142 = a$$220.nodeName;
      var v5564 = JAM.call(v18142.toLowerCase, v18142, [], JAM.policy.p3) === "input";
      if (v5564) {
        v5564 = "checkbox" === a$$220.type;
      }
      return v5564;
    }
    function v860(a$$219) {
      var v18143 = a$$219.nodeName;
      var v5565 = JAM.call(v18143.toLowerCase, v18143, [], JAM.policy.p3) === "input";
      if (v5565) {
        v5565 = "radio" === a$$219.type;
      }
      return v5565;
    }
    function v859(a$$218) {
      var b$$140 = JAM.call(a$$218.getAttribute, a$$218, ["type"], JAM.policy.p3);
      var c$$112 = a$$218.type;
      var v21978 = a$$218.nodeName;
      var v12564 = JAM.call(v21978.toLowerCase, v21978, [], JAM.policy.p3) === "input";
      if (v12564) {
        v12564 = "text" === c$$112;
      }
      var v5566 = v12564;
      if (v5566) {
        var v12565 = b$$140 === c$$112;
        if (!v12565) {
          v12565 = b$$140 === null;
        }
        v5566 = v12565;
      }
      return v5566;
    }
    function v858(a$$217) {
      return JAM.call(/h\d/i.test, /h\d/i, [a$$217.nodeName], JAM.policy.p3);
    }
    function v857(a$$216, b$$139, c$$111) {
      return!!JAM.call(m$$19, null, [c$$111[3], a$$216], JAM.policy.p3).length;
    }
    function v856(a$$215) {
      return!a$$215.firstChild;
    }
    function v855(a$$214) {
      return!!a$$214.firstChild;
    }
    function v854(a$$213) {
      return a$$213.selected === !0;
    }
    function v853(a$$212) {
      return a$$212.checked === !0;
    }
    function v852(a$$211) {
      return a$$211.disabled === !0;
    }
    function v851(a$$210) {
      var v5577 = a$$210.disabled === !1;
      if (v5577) {
        v5577 = a$$210.type !== "hidden";
      }
      return v5577;
    }
    function v850(a$$209) {
      JAM.call(a$$209.unshift, a$$209, [!0], JAM.policy.p3);
      return a$$209;
    }
    function v849(b$$138, c$$110, d$$99, e$$113, f$$33) {
      if (b$$138[1] === "not") {
        var v26018 = JAM.call(a$$185.exec, a$$185, [b$$138[3]], JAM.policy.p3);
        if (!v26018) {
          v26018 = "";
        }
        var v12572 = v26018.length > 1;
        if (!v12572) {
          v12572 = JAM.call(/^\w/.test, /^\w/, [b$$138[3]], JAM.policy.p3);
        }
        if (v12572) {
          var v5579 = b$$138;
          var v31345 = JAM.call(m$$19, null, [b$$138[3], null, null, c$$110], JAM.policy.p3);
          introspect(JAM.policy.p2) {
            v5579[3] = v31345;
          }
        } else {
          var g$$58 = JAM.call(m$$19.filter, m$$19, [b$$138[3], c$$110, d$$99, !0 ^ f$$33], JAM.policy.p3);
          if (!d$$99) {
            var v12575 = e$$113.push;
            JAM.call(v12575.apply, v12575, [e$$113, g$$58], JAM.policy.p3);
          }
          return!1;
        }
      } else {
        var v18150 = o$$10.match.POS;
        var v12577 = JAM.call(v18150.test, v18150, [b$$138[0]], JAM.policy.p3);
        if (!v12577) {
          var v18152 = o$$10.match.CHILD;
          v12577 = JAM.call(v18152.test, v18152, [b$$138[0]], JAM.policy.p3);
        }
        if (v12577) {
          return!0;
        }
      }
      return b$$138;
    }
    function v848(a$$208, b$$137, c$$109, d$$98, e$$112, f$$32) {
      var v5585 = a$$208;
      var v12578 = a$$208[1];
      var v31346 = JAM.call(v12578.replace, v12578, [j$$41, ""], JAM.policy.p3);
      introspect(JAM.policy.p2) {
        var g$$57 = v5585[1] = v31346
      }
      var v21983 = !f$$32;
      if (v21983) {
        v21983 = o$$10.attrMap[g$$57];
      }
      var v18155 = v21983;
      if (v18155) {
        var v21984 = o$$10.attrMap;
        introspect(JAM.policy.p2) {
          a$$208[1] = v21984[g$$57];
        }
      }
      var v18156 = a$$208;
      var v27695 = a$$208[4];
      if (!v27695) {
        v27695 = a$$208[5];
      }
      var v26020 = v27695;
      if (!v26020) {
        v26020 = "";
      }
      var v21985 = v26020;
      var v31347 = JAM.call(v21985.replace, v21985, [j$$41, ""], JAM.policy.p3);
      introspect(JAM.policy.p2) {
        v18156[4] = v31347;
      }
      var v12579 = a$$208[2] === "~=";
      if (v12579) {
        var v18158 = " " + a$$208[4];
        introspect(JAM.policy.p2) {
          a$$208[4] = v18158 + " ";
        }
      }
      return a$$208;
    }
    function v847(a$$207) {
      if (a$$207[1] === "nth") {
        var v12581 = a$$207[2];
        if (!v12581) {
          JAM.call(m$$19.error, m$$19, [a$$207[0]], JAM.policy.p3);
        }
        var v12582 = a$$207;
        var v18161 = a$$207[2];
        var v31348 = JAM.call(v18161.replace, v18161, [/^\+|\s*/g, ""], JAM.policy.p3);
        introspect(JAM.policy.p2) {
          v12582[2] = v31348;
        }
        var v26021 = a$$207[2] === "even";
        if (v26021) {
          v26021 = "2n";
        }
        var v21987 = v26021;
        if (!v21987) {
          var v26022 = a$$207[2] === "odd";
          if (v26022) {
            v26022 = "2n+1";
          }
          v21987 = v26022;
        }
        var v18162 = v21987;
        if (!v18162) {
          var v21988 = !JAM.call(/\D/.test, /\D/, [a$$207[2]], JAM.policy.p3);
          if (v21988) {
            v21988 = "0n+" + a$$207[2];
          }
          v18162 = v21988;
        }
        var v12583 = v18162;
        if (!v12583) {
          v12583 = a$$207[2];
        }
        var b$$136 = JAM.call(/(-?)(\d*)(?:n([+\-]?\d*))?/.exec, /(-?)(\d*)(?:n([+\-]?\d*))?/, [v12583], JAM.policy.p3);
        var v18164 = b$$136[1];
        var v21990 = b$$136[2];
        if (!v21990) {
          v21990 = 1;
        }
        var v12584 = v18164 + v21990;
        introspect(JAM.policy.p2) {
          a$$207[2] = v12584 - 0;
        }
        var v12585 = b$$136[3];
        introspect(JAM.policy.p2) {
          a$$207[3] = v12585 - 0;
        }
      } else {
        var v5587 = a$$207[2];
        if (v5587) {
          JAM.call(m$$19.error, m$$19, [a$$207[0]], JAM.policy.p3);
        }
      }
      introspect(JAM.policy.p2) {
        a$$207[0] = e$$101;
      }
      e$$101 = e$$101 + 1;
      return a$$207;
    }
    function v846(a$$206, b$$135) {
      var v12587 = a$$206[1];
      var v5589 = JAM.call(v12587.replace, v12587, [j$$41, ""], JAM.policy.p3);
      return JAM.call(v5589.toLowerCase, v5589, [], JAM.policy.p3);
    }
    function v845(a$$205) {
      var v5590 = a$$205[1];
      return JAM.call(v5590.replace, v5590, [j$$41, ""], JAM.policy.p3);
    }
    function v844(a$$204, b$$134, c$$108, d$$97, e$$111, f$$31) {
      var v18166 = a$$204[1];
      a$$204 = " " + JAM.call(v18166.replace, v18166, [j$$41, ""], JAM.policy.p3) + " ";
      if (f$$31) {
        return a$$204;
      }
      var g$$56 = 0;
      var h$$54;
      var v5592 = (h$$54 = b$$134[g$$56]) != null;
      for (;v5592;) {
        if (h$$54) {
          var v12590;
          var v21991 = e$$111;
          var v26027 = h$$54.className;
          if (v26027) {
            var v29441 = " " + h$$54.className + " ";
            var v28756 = JAM.call(v29441.replace, v29441, [/[\t\n\r]/g, " "], JAM.policy.p3);
            v26027 = JAM.call(v28756.indexOf, v28756, [a$$204], JAM.policy.p3) >= 0;
          }
          if (v21991 ^ v26027) {
            var v18167 = c$$108;
            if (!v18167) {
              v18167 = JAM.call(d$$97.push, d$$97, [h$$54], JAM.policy.p3);
            }
            v12590 = v18167;
          } else {
            var v18168 = c$$108;
            if (v18168) {
              introspect(JAM.policy.p2) {
                v18168 = b$$134[g$$56] = !1;
              }
            }
            v12590 = v18168;
          }
          v12590;
        }
        g$$56 = g$$56 + 1;
        v5592 = (h$$54 = b$$134[g$$56]) != null;
      }
      return!1;
    }
    function v843(a$$203, b$$133) {
      if (typeof b$$133.getElementsByTagName != "undefined") {
        return JAM.call(b$$133.getElementsByTagName, b$$133, [a$$203[1]], JAM.policy.p3);
      }
      return;
    }
    function v842(a$$202, b$$132) {
      if (typeof b$$132.getElementsByName != "undefined") {
        var c$$107 = [];
        var d$$96 = JAM.call(b$$132.getElementsByName, b$$132, [a$$202[1]], JAM.policy.p3);
        var e$$110 = 0;
        var f$$30 = d$$96.length;
        var v5597 = e$$110 < f$$30;
        for (;v5597;) {
          var v18172 = d$$96[e$$110];
          var v5596 = JAM.call(v18172.getAttribute, v18172, ["name"], JAM.policy.p3) === a$$202[1];
          if (v5596) {
            JAM.call(c$$107.push, c$$107, [d$$96[e$$110]], JAM.policy.p3);
          }
          e$$110 = e$$110 + 1;
          v5597 = e$$110 < f$$30;
        }
        var v5598;
        if (c$$107.length === 0) {
          v5598 = null;
        } else {
          v5598 = c$$107;
        }
        return v5598;
      }
      return;
    }
    function v841(a$$201, b$$131, c$$106) {
      var v12598 = typeof b$$131.getElementById != "undefined";
      if (v12598) {
        v12598 = !c$$106;
      }
      if (v12598) {
        var d$$95 = JAM.call(b$$131.getElementById, b$$131, [a$$201[1]], JAM.policy.p3);
        var v5601;
        var v18175 = d$$95;
        if (v18175) {
          v18175 = d$$95.parentNode;
        }
        if (v18175) {
          v5601 = [d$$95];
        } else {
          v5601 = [];
        }
        return v5601;
      }
      return;
    }
    function v840(a$$200, b$$130, c$$105) {
      var d$$94;
      var f$$29 = e$$101;
      e$$101 = e$$101 + 1;
      var g$$55 = x$$69;
      var v18176 = typeof b$$130 == "string";
      if (v18176) {
        v18176 = !JAM.call(l$$37.test, l$$37, [b$$130], JAM.policy.p3);
      }
      var v12600 = v18176;
      if (v12600) {
        b$$130 = JAM.call(b$$130.toLowerCase, b$$130, [], JAM.policy.p3);
        d$$94 = b$$130;
        g$$55 = w$$13;
      }
      JAM.call(g$$55, null, ["previousSibling", b$$130, f$$29, a$$200, d$$94, c$$105], JAM.policy.p3);
      return;
    }
    function v839(a$$199, b$$129, c$$104) {
      var d$$93;
      var f$$28 = e$$101;
      e$$101 = e$$101 + 1;
      var g$$54 = x$$69;
      var v18177 = typeof b$$129 == "string";
      if (v18177) {
        v18177 = !JAM.call(l$$37.test, l$$37, [b$$129], JAM.policy.p3);
      }
      var v12601 = v18177;
      if (v12601) {
        b$$129 = JAM.call(b$$129.toLowerCase, b$$129, [], JAM.policy.p3);
        d$$93 = b$$129;
        g$$54 = w$$13;
      }
      JAM.call(g$$54, null, ["parentNode", b$$129, f$$28, a$$199, d$$93, c$$104], JAM.policy.p3);
      return;
    }
    function v838(a$$198, b$$128) {
      var c$$103;
      var d$$92 = typeof b$$128 == "string";
      var e$$109 = 0;
      var f$$27 = a$$198.length;
      var v12602 = d$$92;
      if (v12602) {
        v12602 = !JAM.call(l$$37.test, l$$37, [b$$128], JAM.policy.p3);
      }
      if (v12602) {
        b$$128 = JAM.call(b$$128.toLowerCase, b$$128, [], JAM.policy.p3);
        var v5606 = e$$109 < f$$27;
        for (;v5606;) {
          c$$103 = a$$198[e$$109];
          if (c$$103) {
            var g$$53 = c$$103.parentNode;
            var v5604 = a$$198;
            var v5605 = e$$109;
            var v12603;
            var v26028 = g$$53.nodeName;
            if (JAM.call(v26028.toLowerCase, v26028, [], JAM.policy.p3) === b$$128) {
              v12603 = g$$53;
            } else {
              v12603 = !1;
            }
            introspect(JAM.policy.p2) {
              v5604[v5605] = v12603;
            }
          }
          e$$109 = e$$109 + 1;
          v5606 = e$$109 < f$$27;
        }
      } else {
        var v5607 = e$$109 < f$$27;
        for (;v5607;) {
          c$$103 = a$$198[e$$109];
          if (c$$103) {
            var v18180;
            if (d$$92) {
              v18180 = c$$103.parentNode;
            } else {
              v18180 = c$$103.parentNode === b$$128;
            }
            introspect(JAM.policy.p2) {
              a$$198[e$$109] = v18180;
            }
          }
          e$$109 = e$$109 + 1;
          v5607 = e$$109 < f$$27;
        }
        if (d$$92) {
          JAM.call(m$$19.filter, m$$19, [b$$128, a$$198, !0], JAM.policy.p3);
        }
      }
      return;
    }
    function v837(a$$197, b$$127) {
      var c$$102 = typeof b$$127 == "string";
      var v5610 = c$$102;
      if (v5610) {
        v5610 = !JAM.call(l$$37.test, l$$37, [b$$127], JAM.policy.p3);
      }
      var d$$91 = v5610;
      var v5611 = c$$102;
      if (v5611) {
        v5611 = !d$$91;
      }
      var e$$108 = v5611;
      if (d$$91) {
        b$$127 = JAM.call(b$$127.toLowerCase, b$$127, [], JAM.policy.p3);
      }
      var f$$26 = 0;
      var g$$52 = a$$197.length;
      var h$$53;
      var v5616 = f$$26 < g$$52;
      for (;v5616;) {
        if (h$$53 = a$$197[f$$26]) {
          var v12606 = h$$53 = h$$53.previousSibling;
          if (v12606) {
            v12606 = h$$53.nodeType !== 1;
          }
          var v5612 = v12606;
          for (;v5612;) {
            var v12607 = h$$53 = h$$53.previousSibling;
            if (v12607) {
              v12607 = h$$53.nodeType !== 1;
            }
            v5612 = v12607;
          }
          var v5613 = a$$197;
          var v5614 = f$$26;
          var v12608;
          var v22001 = e$$108;
          if (!v22001) {
            var v26029 = h$$53;
            if (v26029) {
              var v28757 = h$$53.nodeName;
              v26029 = JAM.call(v28757.toLowerCase, v28757, [], JAM.policy.p3) === b$$127;
            }
            v22001 = v26029;
          }
          if (v22001) {
            var v18183 = h$$53;
            if (!v18183) {
              v18183 = !1;
            }
            v12608 = v18183;
          } else {
            v12608 = h$$53 === b$$127;
          }
          introspect(JAM.policy.p2) {
            v5613[v5614] = v12608;
          }
        }
        f$$26 = f$$26 + 1;
        v5616 = f$$26 < g$$52;
      }
      if (e$$108) {
        JAM.call(m$$19.filter, m$$19, [b$$127, a$$197, !0], JAM.policy.p3);
      }
      return;
    }
    function v836(a$$196) {
      return JAM.call(a$$196.getAttribute, a$$196, ["type"], JAM.policy.p3);
    }
    function v835(a$$195) {
      return JAM.call(a$$195.getAttribute, a$$195, ["href"], JAM.policy.p3);
    }
    function v834(a$$194) {
      var b$$126;
      var c$$101;
      var d$$90 = a$$194.nodeType;
      var e$$107 = "";
      if (d$$90) {
        var v18185 = d$$90 === 1;
        if (!v18185) {
          v18185 = d$$90 === 9;
        }
        var v12610 = v18185;
        if (!v12610) {
          v12610 = d$$90 === 11;
        }
        if (v12610) {
          if (typeof a$$194.textContent == "string") {
            return a$$194.textContent;
          }
          if (typeof a$$194.innerText == "string") {
            var v5618 = a$$194.innerText;
            return JAM.call(v5618.replace, v5618, [k$$22, ""], JAM.policy.p3);
          }
          a$$194 = a$$194.firstChild;
          for (;a$$194;) {
            e$$107 = e$$107 + JAM.call(n$$68, null, [a$$194], JAM.policy.p3);
            a$$194 = a$$194.nextSibling;
          }
        } else {
          var v12615 = d$$90 === 3;
          if (!v12615) {
            v12615 = d$$90 === 4;
          }
          if (v12615) {
            return a$$194.nodeValue;
          }
        }
      } else {
        b$$126 = 0;
        var v5623 = c$$101 = a$$194[b$$126];
        for (;v5623;) {
          var v5622 = c$$101.nodeType !== 8;
          if (v5622) {
            e$$107 = e$$107 + JAM.call(n$$68, null, [c$$101], JAM.policy.p3);
          }
          b$$126 = b$$126 + 1;
          v5623 = c$$101 = a$$194[b$$126];
        }
      }
      return e$$107;
    }
    function v833(a$$193) {
      throw JAM.new(Error, ["Syntax error, unrecognized expression: " + a$$193], JAM.policy.p3);
    }
    function v832(a$$192, c$$100, d$$89, e$$106) {
      var f$$25;
      var g$$51;
      var h$$52;
      var i$$124;
      var j$$45;
      var k$$26;
      var l$$39;
      var n$$70;
      var p$$32;
      var q$$10 = a$$192;
      var r$$12 = [];
      var s$$23 = c$$100;
      var v12617 = c$$100;
      if (v12617) {
        v12617 = c$$100[0];
      }
      var v5625 = v12617;
      if (v5625) {
        v5625 = JAM.call(m$$19.isXML, m$$19, [c$$100[0]], JAM.policy.p3);
      }
      var t$$7 = v5625;
      var v12619 = a$$192;
      if (v12619) {
        v12619 = c$$100.length;
      }
      var v5639 = v12619;
      for (;v5639;) {
        for (h$$52 in o$$10.filter) {
          var v22004 = o$$10.leftMatch[h$$52];
          var v12620 = (f$$25 = JAM.call(v22004.exec, v22004, [a$$192], JAM.policy.p3)) != null;
          if (v12620) {
            v12620 = f$$25[2];
          }
          if (v12620) {
            k$$26 = o$$10.filter[h$$52];
            l$$39 = f$$25[1];
            g$$51 = !1;
            JAM.call(f$$25.splice, f$$25, [1, 1], JAM.policy.p3);
            if (JAM.call(l$$39.substr, l$$39, [l$$39.length - 1], JAM.policy.p3) === "\\") {
              continue;
            }
            var v5627 = s$$23 === r$$12;
            if (v5627) {
              r$$12 = [];
            }
            if (o$$10.preFilter[h$$52]) {
              var v5628 = o$$10.preFilter;
              f$$25 = JAM.call(v5628[h$$52], v5628, [f$$25, s$$23, d$$89, r$$12, e$$106, t$$7], JAM.policy.p3);
              if (!f$$25) {
                g$$51 = i$$124 = !0;
              } else {
                if (f$$25 === !0) {
                  continue;
                }
              }
            }
            if (f$$25) {
              n$$70 = 0;
              var v5632 = (j$$45 = s$$23[n$$70]) != null;
              for (;v5632;) {
                if (j$$45) {
                  i$$124 = JAM.call(k$$26, null, [j$$45, f$$25, n$$70, s$$23], JAM.policy.p3);
                  p$$32 = e$$106 ^ i$$124;
                  var v18194;
                  var v26032 = d$$89;
                  if (v26032) {
                    v26032 = i$$124 != null;
                  }
                  if (v26032) {
                    var v22007;
                    if (p$$32) {
                      v22007 = g$$51 = !0;
                    } else {
                      v22007 = JAM.set(s$$23, n$$70, !1, JAM.policy.p2);
                    }
                    v18194 = v22007;
                  } else {
                    var v22008 = p$$32;
                    if (v22008) {
                      JAM.call(r$$12.push, r$$12, [j$$45], JAM.policy.p3);
                      v22008 = g$$51 = !0;
                    }
                    v18194 = v22008;
                  }
                  v18194;
                }
                n$$70 = n$$70 + 1;
                v5632 = (j$$45 = s$$23[n$$70]) != null;
              }
            }
            if (i$$124 !== b$$9) {
              if (!d$$89) {
                s$$23 = r$$12;
              }
              a$$192 = JAM.call(a$$192.replace, a$$192, [o$$10.match[h$$52], ""], JAM.policy.p3);
              if (!g$$51) {
                return[];
              }
              break;
            }
          }
        }
        if (a$$192 === q$$10) {
          if (g$$51 == null) {
            JAM.call(m$$19.error, m$$19, [a$$192], JAM.policy.p3);
          } else {
            break;
          }
        }
        q$$10 = a$$192;
        var v12627 = a$$192;
        if (v12627) {
          v12627 = c$$100.length;
        }
        v5639 = v12627;
      }
      return s$$23;
    }
    function v831(a$$191, b$$125, c$$99) {
      var d$$88;
      var e$$105;
      var f$$24;
      var g$$50;
      var h$$51;
      var i$$123;
      if (!a$$191) {
        return[];
      }
      e$$105 = 0;
      f$$24 = o$$10.order.length;
      var v5646 = e$$105 < f$$24;
      for (;v5646;) {
        h$$51 = o$$10.order[e$$105];
        var v12629 = o$$10.leftMatch[h$$51];
        if (g$$50 = JAM.call(v12629.exec, v12629, [a$$191], JAM.policy.p3)) {
          i$$123 = g$$50[1];
          JAM.call(g$$50.splice, g$$50, [1, 1], JAM.policy.p3);
          if (JAM.call(i$$123.substr, i$$123, [i$$123.length - 1], JAM.policy.p3) !== "\\") {
            var v12631 = g$$50;
            var v22011 = g$$50[1];
            if (!v22011) {
              v22011 = "";
            }
            var v18199 = v22011;
            var v31349 = JAM.call(v18199.replace, v18199, [j$$41, ""], JAM.policy.p3);
            introspect(JAM.policy.p2) {
              v12631[1] = v31349;
            }
            var v12632 = o$$10.find;
            d$$88 = JAM.call(v12632[h$$51], v12632, [g$$50, b$$125, c$$99], JAM.policy.p3);
            if (d$$88 != null) {
              a$$191 = JAM.call(a$$191.replace, a$$191, [o$$10.match[h$$51], ""], JAM.policy.p3);
              break;
            }
          }
        }
        e$$105 = e$$105 + 1;
        v5646 = e$$105 < f$$24;
      }
      if (!d$$88) {
        var v12634;
        if (typeof b$$125.getElementsByTagName != "undefined") {
          v12634 = JAM.call(b$$125.getElementsByTagName, b$$125, ["*"], JAM.policy.p3);
        } else {
          v12634 = [];
        }
        d$$88 = v12634;
      }
      return{set:d$$88, expr:a$$191};
    }
    function v830(a$$190, b$$124) {
      return JAM.call(m$$19, null, [b$$124, null, null, [a$$190]], JAM.policy.p3).length > 0;
    }
    function v829(a$$189, b$$123) {
      return JAM.call(m$$19, null, [a$$189, null, null, b$$123], JAM.policy.p3);
    }
    function v828(a$$188) {
      if (u$$5) {
        h$$47 = i$$119;
        JAM.call(a$$188.sort, a$$188, [u$$5], JAM.policy.p3);
        if (h$$47) {
          var b$$122 = 1;
          var v5649 = b$$122 < a$$188.length;
          for (;v5649;) {
            var v5648 = a$$188[b$$122] === a$$188[b$$122 - 1];
            if (v5648) {
              var v12640 = b$$122;
              b$$122 = b$$122 - 1;
              JAM.call(a$$188.splice, a$$188, [v12640, 1], JAM.policy.p3);
            }
            b$$122 = b$$122 + 1;
            v5649 = b$$122 < a$$188.length;
          }
        }
      }
      return a$$188;
    }
    function v827() {
      i$$119 = !1;
      return 0;
    }
    function y$$51(a$$264, b$$174, c$$130) {
      var d$$112;
      var e$$126 = [];
      var f$$42 = "";
      var v5650;
      if (b$$174.nodeType) {
        v5650 = [b$$174];
      } else {
        v5650 = b$$174;
      }
      var g$$65 = v5650;
      var v12643 = o$$10.match.PSEUDO;
      var v5651 = d$$112 = JAM.call(v12643.exec, v12643, [a$$264], JAM.policy.p3);
      for (;v5651;) {
        f$$42 = f$$42 + d$$112[0];
        a$$264 = JAM.call(a$$264.replace, a$$264, [o$$10.match.PSEUDO, ""], JAM.policy.p3);
        var v12645 = o$$10.match.PSEUDO;
        v5651 = d$$112 = JAM.call(v12645.exec, v12645, [a$$264], JAM.policy.p3);
      }
      var v5652;
      if (o$$10.relative[a$$264]) {
        v5652 = a$$264 + "*";
      } else {
        v5652 = a$$264;
      }
      a$$264 = v5652;
      var h$$58 = 0;
      var i$$129 = g$$65.length;
      var v5654 = h$$58 < i$$129;
      for (;v5654;) {
        JAM.call(m$$19, null, [a$$264, g$$65[h$$58], e$$126, c$$130], JAM.policy.p3);
        h$$58 = h$$58 + 1;
        v5654 = h$$58 < i$$129;
      }
      return JAM.call(m$$19.filter, m$$19, [f$$42, e$$126], JAM.policy.p3);
    }
    function s$$22(a$$245, b$$160) {
      var v5655 = Array.prototype.slice;
      a$$245 = JAM.call(v5655.call, v5655, [a$$245, 0], JAM.policy.p3);
      if (b$$160) {
        var v5656 = b$$160.push;
        JAM.call(v5656.apply, v5656, [b$$160, a$$245], JAM.policy.p3);
        return b$$160;
      }
      return a$$245;
    }
    function q$$8(a$$244, b$$159) {
      return "\\" + (b$$159 - 0 + 1);
    }
    function m$$19(b$$121, d$$87, e$$104, f$$23) {
      e$$104 = e$$104 || [];
      d$$87 = d$$87 || c$$5;
      var h$$50 = d$$87;
      var v12649 = d$$87.nodeType !== 1;
      if (v12649) {
        v12649 = d$$87.nodeType !== 9;
      }
      if (v12649) {
        return[];
      }
      var v12650 = !b$$121;
      if (!v12650) {
        v12650 = typeof b$$121 != "string";
      }
      if (v12650) {
        return e$$104;
      }
      var i$$122;
      var j$$44;
      var k$$25;
      var l$$38;
      var n$$69;
      var q$$9;
      var r$$11;
      var t$$6;
      var u$$6 = !0;
      var v$$7 = JAM.call(m$$19.isXML, m$$19, [d$$87], JAM.policy.p3);
      var w$$14 = [];
      var x$$70 = b$$121;
      do {
        JAM.call(a$$185.exec, a$$185, [""], JAM.policy.p3);
        i$$122 = JAM.call(a$$185.exec, a$$185, [x$$70], JAM.policy.p3);
        if (i$$122) {
          x$$70 = i$$122[3];
          JAM.call(w$$14.push, w$$14, [i$$122[1]], JAM.policy.p3);
          if (i$$122[2]) {
            l$$38 = i$$122[3];
            break;
          }
        }
      } while (i$$122);
      var v12652 = w$$14.length > 1;
      if (v12652) {
        v12652 = JAM.call(p$$31.exec, p$$31, [b$$121], JAM.policy.p3);
      }
      if (v12652) {
        var v12653 = w$$14.length === 2;
        if (v12653) {
          v12653 = o$$10.relative[w$$14[0]];
        }
        if (v12653) {
          j$$44 = JAM.call(y$$51, null, [w$$14[0] + w$$14[1], d$$87, f$$23], JAM.policy.p3);
        } else {
          var v5662;
          if (o$$10.relative[w$$14[0]]) {
            v5662 = [d$$87];
          } else {
            v5662 = JAM.call(m$$19, null, [JAM.call(w$$14.shift, w$$14, [], JAM.policy.p3), d$$87], JAM.policy.p3);
          }
          j$$44 = v5662;
          var v5663 = w$$14.length;
          for (;v5663;) {
            b$$121 = JAM.call(w$$14.shift, w$$14, [], JAM.policy.p3);
            var v18218 = o$$10.relative[b$$121];
            if (v18218) {
              b$$121 = b$$121 + JAM.call(w$$14.shift, w$$14, [], JAM.policy.p3);
            }
            j$$44 = JAM.call(y$$51, null, [b$$121, j$$44, f$$23], JAM.policy.p3);
            v5663 = w$$14.length;
          }
        }
      } else {
        var v27702 = !f$$23;
        if (v27702) {
          v27702 = w$$14.length > 1;
        }
        var v26037 = v27702;
        if (v26037) {
          v26037 = d$$87.nodeType === 9;
        }
        var v22014 = v26037;
        if (v22014) {
          v22014 = !v$$7;
        }
        var v18219 = v22014;
        if (v18219) {
          var v22015 = o$$10.match.ID;
          v18219 = JAM.call(v22015.test, v22015, [w$$14[0]], JAM.policy.p3);
        }
        var v12658 = v18219;
        if (v12658) {
          var v22017 = o$$10.match.ID;
          v12658 = !JAM.call(v22017.test, v22017, [w$$14[w$$14.length - 1]], JAM.policy.p3);
        }
        var v5665 = v12658;
        if (v5665) {
          n$$69 = JAM.call(m$$19.find, m$$19, [JAM.call(w$$14.shift, w$$14, [], JAM.policy.p3), d$$87, v$$7], JAM.policy.p3);
          var v18222;
          if (n$$69.expr) {
            v18222 = JAM.call(m$$19.filter, m$$19, [n$$69.expr, n$$69.set], JAM.policy.p3)[0];
          } else {
            v18222 = n$$69.set[0];
          }
          d$$87 = v18222;
        }
        if (d$$87) {
          var v18223;
          if (f$$23) {
            v18223 = {expr:JAM.call(w$$14.pop, w$$14, [], JAM.policy.p3), set:JAM.call(s$$22, null, [f$$23], JAM.policy.p3)};
          } else {
            var v22024 = JAM.call(w$$14.pop, w$$14, [], JAM.policy.p3);
            var v26043;
            var v29442 = w$$14.length === 1;
            if (v29442) {
              var v29875 = w$$14[0] === "~";
              if (!v29875) {
                v29875 = w$$14[0] === "+";
              }
              v29442 = v29875;
            }
            var v28759 = v29442;
            if (v28759) {
              v28759 = d$$87.parentNode;
            }
            if (v28759) {
              v26043 = d$$87.parentNode;
            } else {
              v26043 = d$$87;
            }
            v18223 = JAM.call(m$$19.find, m$$19, [v22024, v26043, v$$7], JAM.policy.p3);
          }
          n$$69 = v18223;
          var v18224;
          if (n$$69.expr) {
            v18224 = JAM.call(m$$19.filter, m$$19, [n$$69.expr, n$$69.set], JAM.policy.p3);
          } else {
            v18224 = n$$69.set;
          }
          j$$44 = v18224;
          var v12659;
          if (w$$14.length > 0) {
            v12659 = k$$25 = JAM.call(s$$22, null, [j$$44], JAM.policy.p3);
          } else {
            v12659 = u$$6 = !1;
          }
          v12659;
          var v5666 = w$$14.length;
          for (;v5666;) {
            q$$9 = JAM.call(w$$14.pop, w$$14, [], JAM.policy.p3);
            r$$11 = q$$9;
            var v22030;
            if (o$$10.relative[q$$9]) {
              v22030 = r$$11 = JAM.call(w$$14.pop, w$$14, [], JAM.policy.p3);
            } else {
              v22030 = q$$9 = "";
            }
            v22030;
            var v18226 = r$$11 == null;
            if (v18226) {
              r$$11 = d$$87;
            }
            var v12660 = o$$10.relative;
            JAM.call(v12660[q$$9], v12660, [k$$25, r$$11, v$$7], JAM.policy.p3);
            v5666 = w$$14.length;
          }
        } else {
          k$$25 = w$$14 = [];
        }
      }
      if (!k$$25) {
        k$$25 = j$$44;
      }
      if (!k$$25) {
        JAM.call(m$$19.error, m$$19, [q$$9 || b$$121], JAM.policy.p3);
      }
      if (JAM.call(g$$47.call, g$$47, [k$$25], JAM.policy.p3) === "[object Array]") {
        if (!u$$6) {
          var v5668 = e$$104.push;
          JAM.call(v5668.apply, v5668, [e$$104, k$$25], JAM.policy.p3);
        } else {
          var v12662 = d$$87;
          if (v12662) {
            v12662 = d$$87.nodeType === 1;
          }
          if (v12662) {
            t$$6 = 0;
            var v5670 = k$$25[t$$6] != null;
            for (;v5670;) {
              var v12664 = k$$25[t$$6];
              if (v12664) {
                var v18231 = k$$25[t$$6] === !0;
                if (!v18231) {
                  var v22033 = k$$25[t$$6].nodeType === 1;
                  if (v22033) {
                    v22033 = JAM.call(m$$19.contains, m$$19, [d$$87, k$$25[t$$6]], JAM.policy.p3);
                  }
                  v18231 = v22033;
                }
                v12664 = v18231;
              }
              var v5669 = v12664;
              if (v5669) {
                JAM.call(e$$104.push, e$$104, [j$$44[t$$6]], JAM.policy.p3);
              }
              t$$6 = t$$6 + 1;
              v5670 = k$$25[t$$6] != null;
            }
          } else {
            t$$6 = 0;
            var v5672 = k$$25[t$$6] != null;
            for (;v5672;) {
              var v12668 = k$$25[t$$6];
              if (v12668) {
                v12668 = k$$25[t$$6].nodeType === 1;
              }
              var v5671 = v12668;
              if (v5671) {
                JAM.call(e$$104.push, e$$104, [j$$44[t$$6]], JAM.policy.p3);
              }
              t$$6 = t$$6 + 1;
              v5672 = k$$25[t$$6] != null;
            }
          }
        }
      } else {
        JAM.call(s$$22, null, [k$$25, e$$104], JAM.policy.p3);
      }
      if (l$$38) {
        JAM.call(m$$19, null, [l$$38, h$$50, e$$104, f$$23], JAM.policy.p3);
        JAM.call(m$$19.uniqueSort, m$$19, [e$$104], JAM.policy.p3);
      }
      return e$$104;
    }
    function x$$69(a$$186, b$$119, c$$97, e$$102, f$$21, g$$48) {
      var h$$48 = 0;
      var i$$120 = e$$102.length;
      var v5682 = h$$48 < i$$120;
      for (;v5682;) {
        var j$$42 = e$$102[h$$48];
        if (j$$42) {
          var k$$23 = !1;
          j$$42 = j$$42[a$$186];
          for (;j$$42;) {
            if (j$$42[d$$86] === c$$97) {
              k$$23 = e$$102[j$$42.sizset];
              break;
            }
            if (j$$42.nodeType === 1) {
              if (!g$$48) {
                JAM.set(j$$42, d$$86, c$$97, JAM.policy.p2);
                j$$42.sizset = h$$48;
              }
              if (typeof b$$119 != "string") {
                if (j$$42 === b$$119) {
                  k$$23 = !0;
                  break;
                }
              } else {
                if (JAM.call(m$$19.filter, m$$19, [b$$119, [j$$42]], JAM.policy.p3).length > 0) {
                  k$$23 = j$$42;
                  break;
                }
              }
            }
            j$$42 = j$$42[a$$186];
          }
          introspect(JAM.policy.p2) {
            e$$102[h$$48] = k$$23;
          }
        }
        h$$48 = h$$48 + 1;
        v5682 = h$$48 < i$$120;
      }
      return;
    }
    function w$$13(a$$187, b$$120, c$$98, e$$103, f$$22, g$$49) {
      var h$$49 = 0;
      var i$$121 = e$$103.length;
      var v5687 = h$$49 < i$$121;
      for (;v5687;) {
        var j$$43 = e$$103[h$$49];
        if (j$$43) {
          var k$$24 = !1;
          j$$43 = j$$43[a$$187];
          for (;j$$43;) {
            if (j$$43[d$$86] === c$$98) {
              k$$24 = e$$103[j$$43.sizset];
              break;
            }
            var v12677 = j$$43.nodeType === 1;
            if (v12677) {
              v12677 = !g$$49;
            }
            var v5685 = v12677;
            if (v5685) {
              JAM.set(j$$43, d$$86, c$$98, JAM.policy.p2);
              j$$43.sizset = h$$49;
            }
            var v18235 = j$$43.nodeName;
            if (JAM.call(v18235.toLowerCase, v18235, [], JAM.policy.p3) === b$$120) {
              k$$24 = j$$43;
              break;
            }
            j$$43 = j$$43[a$$187];
          }
          introspect(JAM.policy.p2) {
            e$$103[h$$49] = k$$24;
          }
        }
        h$$49 = h$$49 + 1;
        v5687 = h$$49 < i$$121;
      }
      return;
    }
    var a$$185 = /((?:\((?:\([^()]+\)|[^()]+)+\)|\[(?:\[[^\[\]]*\]|['"][^'"]*['"]|[^\[\]'"]+)+\]|\\.|[^ >+~,(\[\\]+)+|[>+~])(\s*,\s*)?((?:.|\r|\n)*)/g;
    var v12679 = JAM.call(Math.random, Math, [], JAM.policy.p3) + "";
    var d$$86 = "sizcache" + JAM.call(v12679.replace, v12679, [".", ""], JAM.policy.p3);
    var e$$101 = 0;
    var g$$47 = Object.prototype.toString;
    var h$$47 = !1;
    var i$$119 = !0;
    var j$$41 = /\\/g;
    var k$$22 = /\r\n/g;
    var l$$37 = /\W/;
    var v5690 = [0, 0];
    JAM.call(v5690.sort, v5690, [v827], JAM.policy.p3);
    m$$19.uniqueSort = v828;
    m$$19.matches = v829;
    m$$19.matchesSelector = v830;
    m$$19.find = v831;
    m$$19.filter = v832;
    m$$19.error = v833;
    var n$$68 = m$$19.getText = v834;
    var o$$10 = m$$19.selectors = {order:["ID", "NAME", "TAG"], match:{ID:/#((?:[\w\u00c0-\uFFFF\-]|\\.)+)/, CLASS:/\.((?:[\w\u00c0-\uFFFF\-]|\\.)+)/, NAME:/\[name=['"]*((?:[\w\u00c0-\uFFFF\-]|\\.)+)['"]*\]/, ATTR:/\[\s*((?:[\w\u00c0-\uFFFF\-]|\\.)+)\s*(?:(\S?=)\s*(?:(['"])(.*?)\3|(#?(?:[\w\u00c0-\uFFFF\-]|\\.)*)|)|)\s*\]/, TAG:/^((?:[\w\u00c0-\uFFFF\*\-]|\\.)+)/, CHILD:/:(only|nth|last|first)-child(?:\(\s*(even|odd|(?:[+\-]?\d+|(?:[+\-]?\d*)?n\s*(?:[+\-]\s*\d+)?))\s*\))?/, POS:/:(nth|eq|gt|lt|first|last|even|odd)(?:\((\d*)\))?(?=[^\-]|$)/, 
    PSEUDO:/:((?:[\w\u00c0-\uFFFF\-]|\\.)+)(?:\((['"]?)((?:\([^\)]+\)|[^\(\)]*)+)\2\))?/}, leftMatch:{}, attrMap:{"class":"className", "for":"htmlFor"}, attrHandle:{href:v835, type:v836}, relative:{"+":v837, ">":v838, "":v839, "~":v840}, find:{ID:v841, NAME:v842, TAG:v843}, preFilter:{CLASS:v844, ID:v845, TAG:v846, CHILD:v847, ATTR:v848, PSEUDO:v849, POS:v850}, filters:{enabled:v851, disabled:v852, checked:v853, selected:v854, parent:v855, empty:v856, has:v857, header:v858, text:v859, radio:v860, 
    checkbox:v861, file:v862, password:v863, submit:v864, image:v865, reset:v866, button:v867, input:v868, focus:v869}, setFilters:{first:v870, last:v871, even:v872, odd:v873, lt:v874, gt:v875, nth:v876, eq:v877}, filter:{PSEUDO:v878, CHILD:v879, ID:v880, TAG:v881, CLASS:v882, ATTR:v883, POS:v884}};
    var p$$31 = o$$10.match.POS;
    var r$$10;
    for (r$$10 in o$$10.match) {
      var v12680 = o$$10.match;
      var v12681 = r$$10;
      var v31350 = JAM.new(RegExp, [o$$10.match[r$$10].source + /(?![^\[]*\])(?![^\(]*\))/.source], JAM.policy.p3);
      JAM.set(v12680, v12681, v31350, JAM.policy.p2);
      var v12682 = o$$10.leftMatch;
      var v12683 = r$$10;
      var v22039 = /(^(?:.|\r|\n)*?)/.source;
      var v26048 = o$$10.match[r$$10].source;
      var v31351 = JAM.new(RegExp, [v22039 + JAM.call(v26048.replace, v26048, [/\\(\d+)/g, q$$8], JAM.policy.p3)], JAM.policy.p3);
      JAM.set(v12682, v12683, v31351, JAM.policy.p2);
    }
    o$$10.match.globalPOS = p$$31;
    try {
      var v18239 = Array.prototype.slice;
      JAM.call(v18239.call, v18239, [c$$5.documentElement.childNodes, 0], JAM.policy.p3)[0].nodeType;
    } catch (t$$8) {
      s$$22 = v885;
    }
    var u$$5;
    var v$$6;
    var v29443;
    if (c$$5.documentElement.compareDocumentPosition) {
      v29443 = u$$5 = v886;
    } else {
      u$$5 = v887;
      v29443 = v$$6 = v888;
    }
    v29443;
    JAM.call(v891, null, [], JAM.policy.p3);
    JAM.call(v894, null, [], JAM.policy.p3);
    var v27710 = c$$5.querySelectorAll;
    if (v27710) {
      JAM.call(v896, null, [], JAM.policy.p3);
    }
    JAM.call(v898, null, [], JAM.policy.p3);
    JAM.call(v900, null, [], JAM.policy.p3);
    var v18241;
    if (c$$5.documentElement.contains) {
      v18241 = m$$19.contains = v901;
    } else {
      var v22043;
      if (c$$5.documentElement.compareDocumentPosition) {
        v22043 = m$$19.contains = v902;
      } else {
        v22043 = m$$19.contains = v903;
      }
      v18241 = v22043;
    }
    v18241;
    m$$19.isXML = v904;
    m$$19.attr = f$$4.attr;
    m$$19.selectors.attrMap = {};
    f$$4.find = m$$19;
    f$$4.expr = m$$19.selectors;
    f$$4.expr[":"] = f$$4.expr.filters;
    f$$4.unique = m$$19.uniqueSort;
    f$$4.text = m$$19.getText;
    f$$4.isXMLDoc = m$$19.isXML;
    f$$4.contains = m$$19.contains;
    return;
  }
  function v826(a$$183, b$$118) {
    function v825(a$$184, c$$96) {
      var v5705 = c$$96 == null;
      if (v5705) {
        c$$96 = a$$184;
        a$$184 = null;
      }
      var v5706;
      if (arguments.length > 0) {
        v5706 = JAM.call(this.on, this, [b$$118, null, a$$184, c$$96], JAM.policy.p3);
      } else {
        v5706 = JAM.call(this.trigger, this, [b$$118], JAM.policy.p3);
      }
      return v5706;
    }
    JAM.set(f$$4.fn, b$$118, v825, JAM.policy.p2);
    var v22046 = f$$4.attrFn;
    if (v22046) {
      JAM.set(f$$4.attrFn, b$$118, !0, JAM.policy.p2);
    }
    var v18243 = JAM.call(C.test, C, [b$$118], JAM.policy.p3);
    if (v18243) {
      JAM.set(f$$4.event.fixHooks, b$$118, f$$4.event.keyHooks, JAM.policy.p2);
    }
    var v12686 = JAM.call(D.test, D, [b$$118], JAM.policy.p3);
    if (v12686) {
      JAM.set(f$$4.event.fixHooks, b$$118, f$$4.event.mouseHooks, JAM.policy.p2);
    }
    return;
  }
  function v824(a$$182, b$$117) {
    var v5707 = JAM.call(this.mouseenter, this, [a$$182], JAM.policy.p3);
    return JAM.call(v5707.mouseleave, v5707, [b$$117 || a$$182], JAM.policy.p3);
  }
  function v823(a$$181) {
    function e$$99(c$$95) {
      var v12687 = JAM.call(f$$4._data, f$$4, [this, "lastToggle" + a$$181.guid], JAM.policy.p3);
      if (!v12687) {
        v12687 = 0;
      }
      var e$$100 = v12687 % d$$85;
      JAM.call(f$$4._data, f$$4, [this, "lastToggle" + a$$181.guid, e$$100 + 1], JAM.policy.p3);
      JAM.call(c$$95.preventDefault, c$$95, [], JAM.policy.p3);
      var v12690 = b$$116[e$$100];
      var v5710 = JAM.call(v12690.apply, v12690, [this, arguments], JAM.policy.p3);
      if (!v5710) {
        v5710 = !1;
      }
      return v5710;
    }
    var b$$116 = arguments;
    var v5711 = a$$181.guid;
    if (!v5711) {
      v5711 = f$$4.guid;
      f$$4.guid = f$$4.guid + 1;
    }
    var c$$94 = v5711;
    var d$$85 = 0;
    e$$99.guid = c$$94;
    var v5713 = d$$85 < b$$116.length;
    for (;v5713;) {
      var v12694 = d$$85;
      d$$85 = d$$85 + 1;
      b$$116[v12694].guid = c$$94;
      v5713 = d$$85 < b$$116.length;
    }
    return JAM.call(this.click, this, [e$$99], JAM.policy.p3);
  }
  function v822(a$$180, b$$115) {
    if (this[0]) {
      var v5714 = f$$4.event;
      return JAM.call(v5714.trigger, v5714, [a$$180, b$$115, this[0], !0], JAM.policy.p3);
    }
    return;
  }
  function v821(a$$179, b$$114) {
    function v820() {
      var v5718 = f$$4.event;
      JAM.call(v5718.trigger, v5718, [a$$179, b$$114, this], JAM.policy.p3);
      return;
    }
    return JAM.call(this.each, this, [v820], JAM.policy.p3);
  }
  function v819(a$$178, b$$113, c$$93) {
    var v5719;
    if (arguments.length == 1) {
      v5719 = JAM.call(this.off, this, [a$$178, "**"], JAM.policy.p3);
    } else {
      v5719 = JAM.call(this.off, this, [b$$113, a$$178, c$$93], JAM.policy.p3);
    }
    return v5719;
  }
  function v818(a$$177, b$$112, c$$92, d$$84) {
    return JAM.call(this.on, this, [b$$112, a$$177, c$$92, d$$84], JAM.policy.p3);
  }
  function v817(a$$176, b$$111) {
    var v5720 = JAM.call(f$$4, null, [this.context], JAM.policy.p3);
    var v12698 = this.selector;
    if (!v12698) {
      v12698 = "**";
    }
    JAM.call(v5720.off, v5720, [a$$176, v12698, b$$111], JAM.policy.p3);
    return this;
  }
  function v816(a$$175, b$$110, c$$91) {
    var v5722 = JAM.call(f$$4, null, [this.context], JAM.policy.p3);
    JAM.call(v5722.on, v5722, [a$$175, this.selector, b$$110, c$$91], JAM.policy.p3);
    return this;
  }
  function v815(a$$174, b$$109) {
    return JAM.call(this.off, this, [a$$174, null, b$$109], JAM.policy.p3);
  }
  function v814(a$$173, b$$108, c$$90) {
    return JAM.call(this.on, this, [a$$173, null, b$$108, c$$90], JAM.policy.p3);
  }
  function v813(a$$172, c$$89, d$$83) {
    function v812() {
      var v5724 = f$$4.event;
      JAM.call(v5724.remove, v5724, [this, a$$172, d$$83, c$$89], JAM.policy.p3);
      return;
    }
    var v18251 = a$$172;
    if (v18251) {
      v18251 = a$$172.preventDefault;
    }
    var v12700 = v18251;
    if (v12700) {
      v12700 = a$$172.handleObj;
    }
    if (v12700) {
      var e$$98 = a$$172.handleObj;
      var v5725 = JAM.call(f$$4, null, [a$$172.delegateTarget], JAM.policy.p3);
      var v12702;
      if (e$$98.namespace) {
        v12702 = e$$98.origType + "." + e$$98.namespace;
      } else {
        v12702 = e$$98.origType;
      }
      JAM.call(v5725.off, v5725, [v12702, e$$98.selector, e$$98.handler], JAM.policy.p3);
      return this;
    }
    if (typeof a$$172 == "object") {
      var g$$46;
      for (g$$46 in a$$172) {
        JAM.call(this.off, this, [g$$46, c$$89, a$$172[g$$46]], JAM.policy.p3);
      }
      return this;
    }
    var v12704 = c$$89 === !1;
    if (!v12704) {
      v12704 = typeof c$$89 == "function";
    }
    if (v12704) {
      d$$83 = c$$89;
      c$$89 = b$$9;
    }
    var v5733 = d$$83 === !1;
    if (v5733) {
      d$$83 = J;
    }
    return JAM.call(this.each, this, [v812], JAM.policy.p3);
  }
  function v811(a$$171, b$$107, c$$88, d$$82) {
    return JAM.call(this.on, this, [a$$171, b$$107, c$$88, d$$82, 1], JAM.policy.p3);
  }
  function v810(a$$169, c$$87, d$$81, e$$97, g$$45) {
    function v809() {
      var v5734 = f$$4.event;
      JAM.call(v5734.add, v5734, [this, a$$169, e$$97, d$$81, c$$87], JAM.policy.p3);
      return;
    }
    function v808(a$$170) {
      var v5735 = JAM.call(f$$4, null, [], JAM.policy.p3);
      JAM.call(v5735.off, v5735, [a$$170], JAM.policy.p3);
      return JAM.call(h$$46.apply, h$$46, [this, arguments], JAM.policy.p3);
    }
    var h$$46;
    var i$$118;
    if (typeof a$$169 == "object") {
      var v5736 = typeof c$$87 != "string";
      if (v5736) {
        d$$81 = d$$81 || c$$87;
        c$$87 = b$$9;
      }
      for (i$$118 in a$$169) {
        JAM.call(this.on, this, [i$$118, c$$87, d$$81, a$$169[i$$118], g$$45], JAM.policy.p3);
      }
      return this;
    }
    var v5739;
    var v18258 = d$$81 == null;
    if (v18258) {
      v18258 = e$$97 == null;
    }
    if (v18258) {
      e$$97 = c$$87;
      v5739 = d$$81 = c$$87 = b$$9;
    } else {
      var v12708 = e$$97 == null;
      if (v12708) {
        var v18259;
        if (typeof c$$87 == "string") {
          e$$97 = d$$81;
          v18259 = d$$81 = b$$9;
        } else {
          e$$97 = d$$81;
          d$$81 = c$$87;
          v18259 = c$$87 = b$$9;
        }
        v12708 = v18259;
      }
      v5739 = v12708;
    }
    v5739;
    if (e$$97 === !1) {
      e$$97 = J;
    } else {
      if (!e$$97) {
        return this;
      }
    }
    var v5742 = g$$45 === 1;
    if (v5742) {
      h$$46 = e$$97;
      e$$97 = v808;
      var v18260 = h$$46.guid;
      if (!v18260) {
        v18260 = h$$46.guid = f$$4.guid;
        f$$4.guid = f$$4.guid + 1;
      }
      e$$97.guid = v18260;
    }
    return JAM.call(this.each, this, [v809], JAM.policy.p3);
  }
  function v807(a$$167, b$$106) {
    function v806() {
      var v5743 = (d$$80 = d$$80 - 1) === 0;
      if (v5743) {
        JAM.call(c$$5.removeEventListener, c$$5, [a$$167, e$$96, !0], JAM.policy.p3);
      }
      return;
    }
    function v805() {
      var v12713 = d$$80;
      d$$80 = d$$80 + 1;
      var v5744 = v12713 === 0;
      if (v5744) {
        JAM.call(c$$5.addEventListener, c$$5, [a$$167, e$$96, !0], JAM.policy.p3);
      }
      return;
    }
    function e$$96(a$$168) {
      var v5745 = f$$4.event;
      var v5746 = a$$168.target;
      var v12715 = f$$4.event;
      JAM.call(v5745.simulate, v5745, [b$$106, v5746, JAM.call(v12715.fix, v12715, [a$$168], JAM.policy.p3), !0], JAM.policy.p3);
      return;
    }
    var d$$80 = 0;
    JAM.set(f$$4.event.special, b$$106, {setup:v805, teardown:v806}, JAM.policy.p2);
    return;
  }
  function v804() {
    var v5750 = f$$4.event;
    JAM.call(v5750.remove, v5750, [this, "._change"], JAM.policy.p3);
    return JAM.call(z$$2.test, z$$2, [this.nodeName], JAM.policy.p3);
  }
  function v803(a$$166) {
    var b$$105 = a$$166.target;
    var v22054 = this !== b$$105;
    if (!v22054) {
      v22054 = a$$166.isSimulated;
    }
    var v18261 = v22054;
    if (!v18261) {
      v18261 = a$$166.isTrigger;
    }
    var v12717 = v18261;
    if (!v12717) {
      var v18262 = b$$105.type !== "radio";
      if (v18262) {
        v18262 = b$$105.type !== "checkbox";
      }
      v12717 = v18262;
    }
    if (v12717) {
      var v5752 = a$$166.handleObj.handler;
      return JAM.call(v5752.apply, v5752, [this, arguments], JAM.policy.p3);
    }
    return;
  }
  function v802() {
    function v801(a$$164) {
      function v800(a$$165) {
        var v18264 = this.parentNode;
        if (v18264) {
          v18264 = !a$$165.isSimulated;
        }
        var v12719 = v18264;
        if (v12719) {
          v12719 = !a$$165.isTrigger;
        }
        var v5754 = v12719;
        if (v5754) {
          var v12720 = f$$4.event;
          JAM.call(v12720.simulate, v12720, ["change", this.parentNode, a$$165, !0], JAM.policy.p3);
        }
        return;
      }
      var b$$104 = a$$164.target;
      var v12723 = JAM.call(z$$2.test, z$$2, [b$$104.nodeName], JAM.policy.p3);
      if (v12723) {
        v12723 = !b$$104._change_attached;
      }
      var v5755 = v12723;
      if (v5755) {
        var v18268 = f$$4.event;
        JAM.call(v18268.add, v18268, [b$$104, "change._change", v800], JAM.policy.p3);
        b$$104._change_attached = !0;
      }
      return;
    }
    function v799(a$$163) {
      var v12724 = this._just_changed;
      if (v12724) {
        v12724 = !a$$163.isTrigger;
      }
      var v5756 = v12724;
      if (v5756) {
        this._just_changed = !1;
        var v18270 = f$$4.event;
        JAM.call(v18270.simulate, v18270, ["change", this, a$$163, !0], JAM.policy.p3);
      }
      return;
    }
    function v798(a$$162) {
      var v5757 = a$$162.originalEvent.propertyName === "checked";
      if (v5757) {
        this._just_changed = !0;
      }
      return;
    }
    if (JAM.call(z$$2.test, z$$2, [this.nodeName], JAM.policy.p3)) {
      var v12727 = this.type === "checkbox";
      if (!v12727) {
        v12727 = this.type === "radio";
      }
      if (v12727) {
        var v12728 = f$$4.event;
        JAM.call(v12728.add, v12728, [this, "propertychange._change", v798], JAM.policy.p3);
        var v12729 = f$$4.event;
        JAM.call(v12729.add, v12729, [this, "click._change", v799], JAM.policy.p3);
      }
      return!1;
    }
    var v5760 = f$$4.event;
    JAM.call(v5760.add, v5760, [this, "beforeactivate._change", v801], JAM.policy.p3);
    return;
  }
  function v797() {
    if (JAM.call(f$$4.nodeName, f$$4, [this, "form"], JAM.policy.p3)) {
      return!1;
    }
    var v5762 = f$$4.event;
    JAM.call(v5762.remove, v5762, [this, "._submit"], JAM.policy.p3);
    return;
  }
  function v796(a$$161) {
    var v5763 = a$$161._submit_bubble;
    if (v5763) {
      delete a$$161._submit_bubble;
      var v22059 = this.parentNode;
      if (v22059) {
        v22059 = !a$$161.isTrigger;
      }
      var v18276 = v22059;
      if (v18276) {
        var v22060 = f$$4.event;
        JAM.call(v22060.simulate, v22060, ["submit", this.parentNode, a$$161, !0], JAM.policy.p3);
      }
    }
    return;
  }
  function v795() {
    function v794(a$$159) {
      function v793(a$$160) {
        a$$160._submit_bubble = !0;
        return;
      }
      var c$$86 = a$$159.target;
      var v5764;
      var v18277 = JAM.call(f$$4.nodeName, f$$4, [c$$86, "input"], JAM.policy.p3);
      if (!v18277) {
        v18277 = JAM.call(f$$4.nodeName, f$$4, [c$$86, "button"], JAM.policy.p3);
      }
      if (v18277) {
        v5764 = c$$86.form;
      } else {
        v5764 = b$$9;
      }
      var d$$79 = v5764;
      var v12731 = d$$79;
      if (v12731) {
        v12731 = !d$$79._submit_attached;
      }
      var v5765 = v12731;
      if (v5765) {
        var v18279 = f$$4.event;
        JAM.call(v18279.add, v18279, [d$$79, "submit._submit", v793], JAM.policy.p3);
        d$$79._submit_attached = !0;
      }
      return;
    }
    if (JAM.call(f$$4.nodeName, f$$4, [this, "form"], JAM.policy.p3)) {
      return!1;
    }
    var v5767 = f$$4.event;
    JAM.call(v5767.add, v5767, [this, "click._submit keypress._submit", v794], JAM.policy.p3);
    return;
  }
  function v792(a$$157, b$$103) {
    function v791(a$$158) {
      var c$$85 = this;
      var d$$78 = a$$158.relatedTarget;
      var e$$95 = a$$158.handleObj;
      var g$$44 = e$$95.selector;
      var h$$45;
      var v12732 = !d$$78;
      if (!v12732) {
        var v18280 = d$$78 !== c$$85;
        if (v18280) {
          v18280 = !JAM.call(f$$4.contains, f$$4, [c$$85, d$$78], JAM.policy.p3);
        }
        v12732 = v18280;
      }
      if (v12732) {
        a$$158.type = e$$95.origType;
        var v18282 = e$$95.handler;
        h$$45 = JAM.call(v18282.apply, v18282, [this, arguments], JAM.policy.p3);
        a$$158.type = b$$103;
      }
      return h$$45;
    }
    JAM.set(f$$4.event.special, a$$157, {delegateType:b$$103, bindType:b$$103, handle:v791}, JAM.policy.p2);
    return;
  }
  function v790() {
    this.isImmediatePropagationStopped = K;
    JAM.call(this.stopPropagation, this, [], JAM.policy.p3);
    return;
  }
  function v789() {
    this.isPropagationStopped = K;
    var a$$156 = this.originalEvent;
    var v5770 = !a$$156;
    if (!v5770) {
      var v18283 = a$$156.stopPropagation;
      if (v18283) {
        JAM.call(a$$156.stopPropagation, a$$156, [], JAM.policy.p3);
      }
      a$$156.cancelBubble = !0;
    }
    return;
  }
  function v788() {
    this.isDefaultPrevented = K;
    var a$$155 = this.originalEvent;
    var v5771 = !a$$155;
    if (!v5771) {
      var v12735;
      if (a$$155.preventDefault) {
        v12735 = JAM.call(a$$155.preventDefault, a$$155, [], JAM.policy.p3);
      } else {
        v12735 = a$$155.returnValue = !1;
      }
      v12735;
    }
    return;
  }
  function v787(a$$154, b$$102) {
    if (!(this instanceof f$$4.Event)) {
      return JAM.new(f$$4.Event, [a$$154, b$$102], JAM.policy.p3);
    }
    var v22065;
    var v27713 = a$$154;
    if (v27713) {
      v27713 = a$$154.type;
    }
    if (v27713) {
      this.originalEvent = a$$154;
      this.type = a$$154.type;
      var v27714;
      var v29878 = a$$154.defaultPrevented;
      if (!v29878) {
        v29878 = a$$154.returnValue === !1;
      }
      var v29444 = v29878;
      if (!v29444) {
        var v29879 = a$$154.getPreventDefault;
        if (v29879) {
          v29879 = JAM.call(a$$154.getPreventDefault, a$$154, [], JAM.policy.p3);
        }
        v29444 = v29879;
      }
      if (v29444) {
        v27714 = K;
      } else {
        v27714 = J;
      }
      v22065 = this.isDefaultPrevented = v27714;
    } else {
      v22065 = this.type = a$$154;
    }
    v22065;
    if (b$$102) {
      JAM.call(f$$4.extend, f$$4, [this, b$$102], JAM.policy.p3);
    }
    var v22066 = a$$154;
    if (v22066) {
      v22066 = a$$154.timeStamp;
    }
    var v18286 = v22066;
    if (!v18286) {
      v18286 = JAM.call(f$$4.now, f$$4, [], JAM.policy.p3);
    }
    this.timeStamp = v18286;
    JAM.set(this, f$$4.expando, !0, JAM.policy.p2);
    return;
  }
  function v786(a$$153, b$$101, c$$84) {
    var v5774 = a$$153.detachEvent;
    if (v5774) {
      JAM.call(a$$153.detachEvent, a$$153, ["on" + b$$101, c$$84], JAM.policy.p3);
    }
    return;
  }
  function v785(a$$152, b$$100, c$$83) {
    var v5775 = a$$152.removeEventListener;
    if (v5775) {
      JAM.call(a$$152.removeEventListener, a$$152, [b$$100, c$$83, !1], JAM.policy.p3);
    }
    return;
  }
  function v784(a$$151, b$$99, c$$82, d$$77) {
    var e$$94 = JAM.call(f$$4.extend, f$$4, [JAM.new(f$$4.Event, [], JAM.policy.p3), c$$82, {type:a$$151, isSimulated:!0, originalEvent:{}}], JAM.policy.p3);
    var v12743;
    if (d$$77) {
      var v18287 = f$$4.event;
      v12743 = JAM.call(v18287.trigger, v18287, [e$$94, null, b$$99], JAM.policy.p3);
    } else {
      var v18288 = f$$4.event.dispatch;
      v12743 = JAM.call(v18288.call, v18288, [b$$99, e$$94], JAM.policy.p3);
    }
    v12743;
    var v12744 = JAM.call(e$$94.isDefaultPrevented, e$$94, [], JAM.policy.p3);
    if (v12744) {
      JAM.call(c$$82.preventDefault, c$$82, [], JAM.policy.p3);
    }
    return;
  }
  function v783(a$$150, b$$98) {
    var v5778 = this.onbeforeunload === b$$98;
    if (v5778) {
      JAM.set(this, "onbeforeunload", null);
    }
    return;
  }
  function v782(a$$149, b$$97, c$$81) {
    var v5779 = JAM.call(f$$4.isWindow, f$$4, [this], JAM.policy.p3);
    if (v5779) {
      JAM.set(this, "onbeforeunload", c$$81);
    }
    return;
  }
  function v781(a$$148) {
    if (a$$148[f$$4.expando]) {
      return a$$148;
    }
    var d$$76;
    var e$$93;
    var g$$43 = a$$148;
    var v5781 = f$$4.event.fixHooks[a$$148.type];
    if (!v5781) {
      v5781 = {};
    }
    var h$$44 = v5781;
    var v5782;
    if (h$$44.props) {
      var v12750 = this.props;
      v5782 = JAM.call(v12750.concat, v12750, [h$$44.props], JAM.policy.p3);
    } else {
      v5782 = this.props;
    }
    var i$$117 = v5782;
    a$$148 = JAM.call(f$$4.Event, f$$4, [g$$43], JAM.policy.p3);
    d$$76 = i$$117.length;
    for (;d$$76;) {
      e$$93 = i$$117[d$$76 = d$$76 - 1];
      JAM.set(a$$148, e$$93, g$$43[e$$93], JAM.policy.p2);
    }
    var v18290 = a$$148.target;
    if (!v18290) {
      var v22069 = g$$43.srcElement;
      if (!v22069) {
        v22069 = c$$5;
      }
      a$$148.target = v22069;
    }
    var v18291 = a$$148.target.nodeType === 3;
    if (v18291) {
      a$$148.target = a$$148.target.parentNode;
    }
    var v12754 = a$$148.metaKey === b$$9;
    if (v12754) {
      a$$148.metaKey = a$$148.ctrlKey;
    }
    var v5783;
    if (h$$44.filter) {
      v5783 = JAM.call(h$$44.filter, h$$44, [a$$148, g$$43], JAM.policy.p3);
    } else {
      v5783 = a$$148;
    }
    return v5783;
  }
  function v780(a$$147, d$$75) {
    var e$$92;
    var f$$20;
    var g$$42;
    var h$$43 = d$$75.button;
    var i$$116 = d$$75.fromElement;
    var v22073 = a$$147.pageX == null;
    if (v22073) {
      v22073 = d$$75.clientX != null;
    }
    var v18293 = v22073;
    if (v18293) {
      var v29445 = a$$147.target.ownerDocument;
      if (!v29445) {
        v29445 = c$$5;
      }
      e$$92 = v29445;
      f$$20 = e$$92.documentElement;
      g$$42 = e$$92.body;
      var v28763 = d$$75.clientX;
      var v30165 = f$$20;
      if (v30165) {
        v30165 = f$$20.scrollLeft;
      }
      var v29883 = v30165;
      if (!v29883) {
        var v30166 = g$$42;
        if (v30166) {
          v30166 = g$$42.scrollLeft;
        }
        v29883 = v30166;
      }
      var v29446 = v29883;
      if (!v29446) {
        v29446 = 0;
      }
      var v27715 = v28763 + v29446;
      var v29885 = f$$20;
      if (v29885) {
        v29885 = f$$20.clientLeft;
      }
      var v29447 = v29885;
      if (!v29447) {
        var v29886 = g$$42;
        if (v29886) {
          v29886 = g$$42.clientLeft;
        }
        v29447 = v29886;
      }
      var v28765 = v29447;
      if (!v28765) {
        v28765 = 0;
      }
      a$$147.pageX = v27715 - v28765;
      var v27717 = d$$75.clientY;
      var v29888 = f$$20;
      if (v29888) {
        v29888 = f$$20.scrollTop;
      }
      var v29449 = v29888;
      if (!v29449) {
        var v29889 = g$$42;
        if (v29889) {
          v29889 = g$$42.scrollTop;
        }
        v29449 = v29889;
      }
      var v28766 = v29449;
      if (!v28766) {
        v28766 = 0;
      }
      var v26063 = v27717 + v28766;
      var v29451 = f$$20;
      if (v29451) {
        v29451 = f$$20.clientTop;
      }
      var v28767 = v29451;
      if (!v28767) {
        var v29452 = g$$42;
        if (v29452) {
          v29452 = g$$42.clientTop;
        }
        v28767 = v29452;
      }
      var v27719 = v28767;
      if (!v27719) {
        v27719 = 0;
      }
      a$$147.pageY = v26063 - v27719;
    }
    var v22074 = !a$$147.relatedTarget;
    if (v22074) {
      v22074 = i$$116;
    }
    var v18294 = v22074;
    if (v18294) {
      var v22075;
      if (i$$116 === a$$147.target) {
        v22075 = d$$75.toElement;
      } else {
        v22075 = i$$116;
      }
      a$$147.relatedTarget = v22075;
    }
    var v18295 = !a$$147.which;
    if (v18295) {
      v18295 = h$$43 !== b$$9;
    }
    var v12756 = v18295;
    if (v12756) {
      var v18296;
      if (h$$43 & 1) {
        v18296 = 1;
      } else {
        var v22077;
        if (h$$43 & 2) {
          v22077 = 3;
        } else {
          var v26067;
          if (h$$43 & 4) {
            v26067 = 2;
          } else {
            v26067 = 0;
          }
          v22077 = v26067;
        }
        v18296 = v22077;
      }
      a$$147.which = v18296;
    }
    return a$$147;
  }
  function v779(a$$146, b$$96) {
    var v5784 = a$$146.which == null;
    if (v5784) {
      var v12758;
      if (b$$96.charCode != null) {
        v12758 = b$$96.charCode;
      } else {
        v12758 = b$$96.keyCode;
      }
      a$$146.which = v12758;
    }
    return a$$146;
  }
  function v778(c$$80) {
    var v5785 = f$$4.event;
    var v12759 = c$$80;
    if (!v12759) {
      v12759 = a$$13.event;
    }
    c$$80 = JAM.call(v5785.fix, v5785, [v12759], JAM.policy.p3);
    var v18299 = JAM.call(f$$4._data, f$$4, [this, "events"], JAM.policy.p3);
    if (!v18299) {
      v18299 = {};
    }
    var v5787 = v18299[c$$80.type];
    if (!v5787) {
      v5787 = [];
    }
    var d$$74 = v5787;
    var e$$91 = d$$74.delegateCount;
    var v5788 = [].slice;
    var g$$41 = JAM.call(v5788.call, v5788, [arguments, 0], JAM.policy.p3);
    var v5789 = !c$$80.exclusive;
    if (v5789) {
      v5789 = !c$$80.namespace;
    }
    var h$$42 = v5789;
    var v5790 = f$$4.event.special[c$$80.type];
    if (!v5790) {
      v5790 = {};
    }
    var i$$115 = v5790;
    var j$$40 = [];
    var k$$21;
    var l$$36;
    var m$$18;
    var n$$67;
    var o$$9;
    var p$$30;
    var q$$7;
    var r$$9;
    var s$$21;
    var t$$5;
    var u$$4;
    introspect(JAM.policy.p2) {
      g$$41[0] = c$$80;
    }
    c$$80.delegateTarget = this;
    var v12768 = !i$$115.preDispatch;
    if (!v12768) {
      var v22081 = i$$115.preDispatch;
      v12768 = JAM.call(v22081.call, v22081, [this, c$$80], JAM.policy.p3) !== !1;
    }
    if (v12768) {
      var v12769 = e$$91;
      if (v12769) {
        var v18305 = !c$$80.button;
        if (!v18305) {
          v18305 = c$$80.type !== "click";
        }
        v12769 = v18305;
      }
      if (v12769) {
        n$$67 = JAM.call(f$$4, null, [this], JAM.policy.p3);
        var v12770 = this.ownerDocument;
        if (!v12770) {
          v12770 = this;
        }
        n$$67.context = v12770;
        m$$18 = c$$80.target;
        var v5798 = m$$18 != this;
        for (;v5798;) {
          if (m$$18.disabled !== !0) {
            p$$30 = {};
            r$$9 = [];
            introspect(JAM.policy.p2) {
              n$$67[0] = m$$18;
            }
            k$$21 = 0;
            var v5795 = k$$21 < e$$91;
            for (;v5795;) {
              s$$21 = d$$74[k$$21];
              var JSCompiler_temp_const$$0 = t$$5 = s$$21.selector;
              var JSCompiler_temp$$1;
              if (JSCompiler_temp$$1 = p$$30[t$$5] === b$$9) {
                var JSCompiler_temp_const$$3 = p$$30;
                var JSCompiler_temp_const$$2 = t$$5;
                var JSCompiler_temp$$4;
                if (s$$21.quick) {
                  var b$$inline_26 = s$$21.quick;
                  var v5791 = m$$18.attributes;
                  if (!v5791) {
                    v5791 = {};
                  }
                  var c$$inline_27 = v5791;
                  var v18307 = !b$$inline_26[1];
                  if (!v18307) {
                    var v26069 = m$$18.nodeName;
                    v18307 = JAM.call(v26069.toLowerCase, v26069, [], JAM.policy.p3) === b$$inline_26[1];
                  }
                  var v12775 = v18307;
                  if (v12775) {
                    var v18308 = !b$$inline_26[2];
                    if (!v18308) {
                      var v27722 = c$$inline_27.id;
                      if (!v27722) {
                        v27722 = {};
                      }
                      v18308 = v27722.value === b$$inline_26[2];
                    }
                    v12775 = v18308;
                  }
                  var v5792 = v12775;
                  if (v5792) {
                    var v12776 = !b$$inline_26[3];
                    if (!v12776) {
                      var v18310 = b$$inline_26[3];
                      var v26071 = c$$inline_27["class"];
                      if (!v26071) {
                        v26071 = {};
                      }
                      v12776 = JAM.call(v18310.test, v18310, [v26071.value], JAM.policy.p3);
                    }
                    v5792 = v12776;
                  }
                  JSCompiler_temp$$4 = v5792;
                } else {
                  JSCompiler_temp$$4 = JAM.call(n$$67.is, n$$67, [t$$5], JAM.policy.p3);
                }
                JSCompiler_temp$$1 = JAM.set(JSCompiler_temp_const$$3, JSCompiler_temp_const$$2, JSCompiler_temp$$4, JAM.policy.p2);
              }
              JSCompiler_temp_const$$0;
              JSCompiler_temp$$1;
              var v12777 = p$$30[t$$5];
              if (v12777) {
                JAM.call(r$$9.push, r$$9, [s$$21], JAM.policy.p3);
              }
              k$$21 = k$$21 + 1;
              v5795 = k$$21 < e$$91;
            }
            var v5796 = r$$9.length;
            if (v5796) {
              JAM.call(j$$40.push, j$$40, [{elem:m$$18, matches:r$$9}], JAM.policy.p3);
            }
          }
          var v12779 = m$$18.parentNode;
          if (!v12779) {
            v12779 = this;
          }
          m$$18 = v12779;
          v5798 = m$$18 != this;
        }
      }
      var v5800 = d$$74.length > e$$91;
      if (v5800) {
        JAM.call(j$$40.push, j$$40, [{elem:this, matches:JAM.call(d$$74.slice, d$$74, [e$$91], JAM.policy.p3)}], JAM.policy.p3);
      }
      k$$21 = 0;
      var v12782 = k$$21 < j$$40.length;
      if (v12782) {
        v12782 = !JAM.call(c$$80.isPropagationStopped, c$$80, [], JAM.policy.p3);
      }
      var v5804 = v12782;
      for (;v5804;) {
        q$$7 = j$$40[k$$21];
        c$$80.currentTarget = q$$7.elem;
        l$$36 = 0;
        var v12783 = l$$36 < q$$7.matches.length;
        if (v12783) {
          v12783 = !JAM.call(c$$80.isImmediatePropagationStopped, c$$80, [], JAM.policy.p3);
        }
        var v5803 = v12783;
        for (;v5803;) {
          s$$21 = q$$7.matches[l$$36];
          var v18319 = h$$42;
          if (!v18319) {
            var v22095 = !c$$80.namespace;
            if (v22095) {
              v22095 = !s$$21.namespace;
            }
            v18319 = v22095;
          }
          var v12784 = v18319;
          if (!v12784) {
            var v18320 = c$$80.namespace_re;
            if (v18320) {
              var v22097 = c$$80.namespace_re;
              v18320 = JAM.call(v22097.test, v22097, [s$$21.namespace], JAM.policy.p3);
            }
            v12784 = v18320;
          }
          if (v12784) {
            c$$80.data = s$$21.data;
            c$$80.handleObj = s$$21;
            var v27724 = f$$4.event.special[s$$21.origType];
            if (!v27724) {
              v27724 = {};
            }
            var v22099 = v27724.handle;
            if (!v22099) {
              v22099 = s$$21.handler;
            }
            var v18322 = v22099;
            o$$9 = JAM.call(v18322.apply, v18322, [q$$7.elem, g$$41], JAM.policy.p3);
            var v12785 = o$$9 !== b$$9;
            if (v12785) {
              c$$80.result = o$$9;
              var v22100 = o$$9 === !1;
              if (v22100) {
                JAM.call(c$$80.preventDefault, c$$80, [], JAM.policy.p3);
                JAM.call(c$$80.stopPropagation, c$$80, [], JAM.policy.p3);
              }
            }
          }
          l$$36 = l$$36 + 1;
          var v12786 = l$$36 < q$$7.matches.length;
          if (v12786) {
            v12786 = !JAM.call(c$$80.isImmediatePropagationStopped, c$$80, [], JAM.policy.p3);
          }
          v5803 = v12786;
        }
        k$$21 = k$$21 + 1;
        var v12787 = k$$21 < j$$40.length;
        if (v12787) {
          v12787 = !JAM.call(c$$80.isPropagationStopped, c$$80, [], JAM.policy.p3);
        }
        v5804 = v12787;
      }
      var v5805 = i$$115.postDispatch;
      if (v5805) {
        var v12788 = i$$115.postDispatch;
        JAM.call(v12788.call, v12788, [this, c$$80], JAM.policy.p3);
      }
      return c$$80.result;
    }
    return;
  }
  function v777(c$$79, d$$73, e$$90, g$$40) {
    var v12789 = !e$$90;
    if (!v12789) {
      var v18328 = e$$90.nodeType !== 3;
      if (v18328) {
        v18328 = e$$90.nodeType !== 8;
      }
      v12789 = v18328;
    }
    if (v12789) {
      var v5807 = c$$79.type;
      if (!v5807) {
        v5807 = c$$79;
      }
      var h$$41 = v5807;
      var i$$114 = [];
      var j$$39;
      var k$$20;
      var l$$35;
      var m$$17;
      var n$$66;
      var o$$8;
      var p$$29;
      var q$$6;
      var r$$8;
      var s$$20;
      if (JAM.call(E.test, E, [h$$41 + f$$4.event.triggered], JAM.policy.p3)) {
        return;
      }
      var v12792 = JAM.call(h$$41.indexOf, h$$41, ["!"], JAM.policy.p3) >= 0;
      if (v12792) {
        h$$41 = JAM.call(h$$41.slice, h$$41, [0, -1], JAM.policy.p3);
        k$$20 = !0;
      }
      var v12793 = JAM.call(h$$41.indexOf, h$$41, ["."], JAM.policy.p3) >= 0;
      if (v12793) {
        i$$114 = JAM.call(h$$41.split, h$$41, ["."], JAM.policy.p3);
        h$$41 = JAM.call(i$$114.shift, i$$114, [], JAM.policy.p3);
        JAM.call(i$$114.sort, i$$114, [], JAM.policy.p3);
      }
      var v18333 = !e$$90;
      if (!v18333) {
        v18333 = f$$4.event.customEvent[h$$41];
      }
      var v12794 = v18333;
      if (v12794) {
        v12794 = !f$$4.event.global[h$$41];
      }
      if (v12794) {
        return;
      }
      var v28773;
      if (typeof c$$79 == "object") {
        var v29455;
        if (c$$79[f$$4.expando]) {
          v29455 = c$$79;
        } else {
          v29455 = JAM.new(f$$4.Event, [h$$41, c$$79], JAM.policy.p3);
        }
        v28773 = v29455;
      } else {
        v28773 = JAM.new(f$$4.Event, [h$$41], JAM.policy.p3);
      }
      c$$79 = v28773;
      c$$79.type = h$$41;
      c$$79.isTrigger = !0;
      c$$79.exclusive = k$$20;
      var v22108 = c$$79;
      var v31352 = JAM.call(i$$114.join, i$$114, ["."], JAM.policy.p3);
      v22108.namespace = v31352;
      var v18335 = c$$79;
      var v22109;
      if (c$$79.namespace) {
        v22109 = JAM.new(RegExp, ["(^|\\.)" + JAM.call(i$$114.join, i$$114, ["\\.(?:.*\\.)?"], JAM.policy.p3) + "(\\.|$)"], JAM.policy.p3);
      } else {
        v22109 = null;
      }
      v18335.namespace_re = v22109;
      var v12795;
      if (JAM.call(h$$41.indexOf, h$$41, [":"], JAM.policy.p3) < 0) {
        v12795 = "on" + h$$41;
      } else {
        v12795 = "";
      }
      o$$8 = v12795;
      if (!e$$90) {
        j$$39 = f$$4.cache;
        for (l$$35 in j$$39) {
          var v12796 = j$$39[l$$35].events;
          if (v12796) {
            v12796 = j$$39[l$$35].events[h$$41];
          }
          var v5810 = v12796;
          if (v5810) {
            var v12797 = f$$4.event;
            JAM.call(v12797.trigger, v12797, [c$$79, d$$73, j$$39[l$$35].handle.elem, !0], JAM.policy.p3);
          }
        }
        return;
      }
      c$$79.result = b$$9;
      var v26081 = c$$79.target;
      if (!v26081) {
        c$$79.target = e$$90;
      }
      var v22113;
      if (d$$73 != null) {
        v22113 = JAM.call(f$$4.makeArray, f$$4, [d$$73], JAM.policy.p3);
      } else {
        v22113 = [];
      }
      d$$73 = v22113;
      JAM.call(d$$73.unshift, d$$73, [c$$79], JAM.policy.p3);
      var v12800 = f$$4.event.special[h$$41];
      if (!v12800) {
        v12800 = {};
      }
      p$$29 = v12800;
      var v12801 = p$$29.trigger;
      if (v12801) {
        var v22115 = p$$29.trigger;
        v12801 = JAM.call(v22115.apply, v22115, [e$$90, d$$73], JAM.policy.p3) === !1;
      }
      if (v12801) {
        return;
      }
      var v18344 = p$$29.bindType;
      if (!v18344) {
        v18344 = h$$41;
      }
      r$$8 = [[e$$90, v18344]];
      var v18345 = !g$$40;
      if (v18345) {
        v18345 = !p$$29.noBubble;
      }
      var v12803 = v18345;
      if (v12803) {
        v12803 = !JAM.call(f$$4.isWindow, f$$4, [e$$90], JAM.policy.p3);
      }
      if (v12803) {
        var v18347 = p$$29.delegateType;
        if (!v18347) {
          v18347 = h$$41;
        }
        s$$20 = v18347;
        var v18348;
        if (JAM.call(E.test, E, [s$$20 + h$$41], JAM.policy.p3)) {
          v18348 = e$$90;
        } else {
          v18348 = e$$90.parentNode;
        }
        m$$17 = v18348;
        n$$66 = null;
        for (;m$$17;) {
          JAM.call(r$$8.push, r$$8, [[m$$17, s$$20]], JAM.policy.p3);
          n$$66 = m$$17;
          m$$17 = m$$17.parentNode;
        }
        var v12805 = n$$66;
        if (v12805) {
          v12805 = n$$66 === e$$90.ownerDocument;
        }
        var v5814 = v12805;
        if (v5814) {
          var v26084 = n$$66.defaultView;
          if (!v26084) {
            v26084 = n$$66.parentWindow;
          }
          var v22120 = v26084;
          if (!v22120) {
            v22120 = a$$13;
          }
          JAM.call(r$$8.push, r$$8, [[v22120, s$$20]], JAM.policy.p3);
        }
      }
      l$$35 = 0;
      var v12807 = l$$35 < r$$8.length;
      if (v12807) {
        v12807 = !JAM.call(c$$79.isPropagationStopped, c$$79, [], JAM.policy.p3);
      }
      var v5816 = v12807;
      for (;v5816;) {
        m$$17 = r$$8[l$$35][0];
        c$$79.type = r$$8[l$$35][1];
        var v28775 = JAM.call(f$$4._data, f$$4, [m$$17, "events"], JAM.policy.p3);
        if (!v28775) {
          v28775 = {};
        }
        var v26086 = v28775[c$$79.type];
        if (v26086) {
          v26086 = JAM.call(f$$4._data, f$$4, [m$$17, "handle"], JAM.policy.p3);
        }
        q$$6 = v26086;
        if (q$$6) {
          JAM.call(q$$6.apply, q$$6, [m$$17, d$$73], JAM.policy.p3);
        }
        var v18353 = o$$8;
        if (v18353) {
          v18353 = m$$17[o$$8];
        }
        q$$6 = v18353;
        var v22121 = q$$6;
        if (v22121) {
          v22121 = JAM.call(f$$4.acceptData, f$$4, [m$$17], JAM.policy.p3);
        }
        var v18354 = v22121;
        if (v18354) {
          v18354 = JAM.call(q$$6.apply, q$$6, [m$$17, d$$73], JAM.policy.p3) === !1;
        }
        var v12808 = v18354;
        if (v12808) {
          JAM.call(c$$79.preventDefault, c$$79, [], JAM.policy.p3);
        }
        l$$35 = l$$35 + 1;
        var v12809 = l$$35 < r$$8.length;
        if (v12809) {
          v12809 = !JAM.call(c$$79.isPropagationStopped, c$$79, [], JAM.policy.p3);
        }
        v5816 = v12809;
      }
      c$$79.type = h$$41;
      var v30169 = !g$$40;
      if (v30169) {
        v30169 = !JAM.call(c$$79.isDefaultPrevented, c$$79, [], JAM.policy.p3);
      }
      var v29894 = v30169;
      if (v29894) {
        var v30170 = !p$$29._default;
        if (!v30170) {
          var v30589 = p$$29._default;
          v30170 = JAM.call(v30589.apply, v30589, [e$$90.ownerDocument, d$$73], JAM.policy.p3) === !1;
        }
        v29894 = v30170;
      }
      var v29459 = v29894;
      if (v29459) {
        var v29895 = h$$41 !== "click";
        if (!v29895) {
          v29895 = !JAM.call(f$$4.nodeName, f$$4, [e$$90, "a"], JAM.policy.p3);
        }
        v29459 = v29895;
      }
      var v28776 = v29459;
      if (v28776) {
        v28776 = JAM.call(f$$4.acceptData, f$$4, [e$$90], JAM.policy.p3);
      }
      var v27732 = v28776;
      if (v27732) {
        v27732 = o$$8;
      }
      var v26087 = v27732;
      if (v26087) {
        v26087 = e$$90[h$$41];
      }
      var v22124 = v26087;
      if (v22124) {
        var v27733 = h$$41 !== "focus";
        if (v27733) {
          v27733 = h$$41 !== "blur";
        }
        var v26088 = v27733;
        if (!v26088) {
          v26088 = c$$79.target.offsetWidth !== 0;
        }
        v22124 = v26088;
      }
      var v18357 = v22124;
      if (v18357) {
        v18357 = !JAM.call(f$$4.isWindow, f$$4, [e$$90], JAM.policy.p3);
      }
      var v12810 = v18357;
      if (v12810) {
        n$$66 = e$$90[o$$8];
        if (n$$66) {
          JAM.set(e$$90, o$$8, null, JAM.policy.p2);
        }
        f$$4.event.triggered = h$$41;
        JAM.call(e$$90[h$$41], e$$90, [], JAM.policy.p3);
        f$$4.event.triggered = b$$9;
        if (n$$66) {
          JAM.set(e$$90, o$$8, n$$66, JAM.policy.p2);
        }
      }
      return c$$79.result;
    }
    return;
  }
  function v776(a$$145, b$$95, c$$78, d$$72, e$$89) {
    var v5818 = JAM.call(f$$4.hasData, f$$4, [a$$145], JAM.policy.p3);
    if (v5818) {
      v5818 = JAM.call(f$$4._data, f$$4, [a$$145], JAM.policy.p3);
    }
    var g$$39 = v5818;
    var h$$40;
    var i$$113;
    var j$$38;
    var k$$19;
    var l$$34;
    var m$$16;
    var n$$65;
    var o$$7;
    var p$$28;
    var q$$5;
    var r$$7;
    var s$$19;
    var v12811 = !!g$$39;
    if (v12811) {
      v12811 = !!(o$$7 = g$$39.events);
    }
    if (v12811) {
      var v5819 = JAM.call(f$$4.trim, f$$4, [JAM.call(I, null, [b$$95 || ""], JAM.policy.p3)], JAM.policy.p3);
      b$$95 = JAM.call(v5819.split, v5819, [" "], JAM.policy.p3);
      h$$40 = 0;
      var v5826 = h$$40 < b$$95.length;
      for (;v5826;) {
        var v18361 = JAM.call(A.exec, A, [b$$95[h$$40]], JAM.policy.p3);
        if (!v18361) {
          v18361 = [];
        }
        i$$113 = v18361;
        j$$38 = k$$19 = i$$113[1];
        l$$34 = i$$113[2];
        if (!j$$38) {
          for (j$$38 in o$$7) {
            var v5820 = f$$4.event;
            JAM.call(v5820.remove, v5820, [a$$145, j$$38 + b$$95[h$$40], c$$78, d$$72, !0], JAM.policy.p3);
          }
          h$$40 = h$$40 + 1;
          v5826 = h$$40 < b$$95.length;
          continue;
        }
        var v26090 = f$$4.event.special[j$$38];
        if (!v26090) {
          v26090 = {};
        }
        p$$28 = v26090;
        var v27738;
        if (d$$72) {
          v27738 = p$$28.delegateType;
        } else {
          v27738 = p$$28.bindType;
        }
        var v26091 = v27738;
        if (!v26091) {
          v26091 = j$$38;
        }
        j$$38 = v26091;
        var v22129 = o$$7[j$$38];
        if (!v22129) {
          v22129 = [];
        }
        r$$7 = v22129;
        m$$16 = r$$7.length;
        var v12816;
        if (l$$34) {
          var v28780 = JAM.call(l$$34.split, l$$34, ["."], JAM.policy.p3);
          var v27740 = JAM.call(v28780.sort, v28780, [], JAM.policy.p3);
          v12816 = JAM.new(RegExp, ["(^|\\.)" + JAM.call(v27740.join, v27740, ["\\.(?:.*\\.)?"], JAM.policy.p3) + "(\\.|$)"], JAM.policy.p3);
        } else {
          v12816 = null;
        }
        l$$34 = v12816;
        n$$65 = 0;
        var v5824 = n$$65 < r$$7.length;
        for (;v5824;) {
          s$$19 = r$$7[n$$65];
          var v27741 = e$$89;
          if (!v27741) {
            v27741 = k$$19 === s$$19.origType;
          }
          var v26094 = v27741;
          if (v26094) {
            var v27742 = !c$$78;
            if (!v27742) {
              v27742 = c$$78.guid === s$$19.guid;
            }
            v26094 = v27742;
          }
          var v22131 = v26094;
          if (v22131) {
            var v26095 = !l$$34;
            if (!v26095) {
              v26095 = JAM.call(l$$34.test, l$$34, [s$$19.namespace], JAM.policy.p3);
            }
            v22131 = v26095;
          }
          var v18363 = v22131;
          if (v18363) {
            var v26096 = !d$$72;
            if (!v26096) {
              v26096 = d$$72 === s$$19.selector;
            }
            var v22132 = v26096;
            if (!v22132) {
              var v26097 = d$$72 === "**";
              if (v26097) {
                v26097 = s$$19.selector;
              }
              v22132 = v26097;
            }
            v18363 = v22132;
          }
          var v12818 = v18363;
          if (v12818) {
            var v26099 = n$$65;
            n$$65 = n$$65 - 1;
            JAM.call(r$$7.splice, r$$7, [v26099, 1], JAM.policy.p3);
            var v26100 = s$$19.selector;
            if (v26100) {
              r$$7.delegateCount = r$$7.delegateCount - 1;
            }
            var v22133 = p$$28.remove;
            if (v22133) {
              var v26101 = p$$28.remove;
              JAM.call(v26101.call, v26101, [a$$145, s$$19], JAM.policy.p3);
            }
          }
          n$$65 = n$$65 + 1;
          v5824 = n$$65 < r$$7.length;
        }
        var v12820 = r$$7.length === 0;
        if (v12820) {
          v12820 = m$$16 !== r$$7.length;
        }
        var v5825 = v12820;
        if (v5825) {
          var v22134 = !p$$28.teardown;
          if (!v22134) {
            var v27747 = p$$28.teardown;
            v22134 = JAM.call(v27747.call, v27747, [a$$145, l$$34], JAM.policy.p3) === !1;
          }
          var v18366 = v22134;
          if (v18366) {
            JAM.call(f$$4.removeEvent, f$$4, [a$$145, j$$38, g$$39.handle], JAM.policy.p3);
          }
          delete o$$7[j$$38];
        }
        h$$40 = h$$40 + 1;
        v5826 = h$$40 < b$$95.length;
      }
      var v5827 = JAM.call(f$$4.isEmptyObject, f$$4, [o$$7], JAM.policy.p3);
      if (v5827) {
        q$$5 = g$$39.handle;
        if (q$$5) {
          q$$5.elem = null;
        }
        JAM.call(f$$4.removeData, f$$4, [a$$145, ["events", "handle"], !0], JAM.policy.p3);
      }
    }
    return;
  }
  function v775(a$$143, c$$77, d$$71, e$$88, g$$38) {
    function v774(a$$144) {
      var v5829;
      var v18369 = typeof f$$4 != "undefined";
      if (v18369) {
        var v22137 = !a$$144;
        if (!v22137) {
          v22137 = f$$4.event.triggered !== a$$144.type;
        }
        v18369 = v22137;
      }
      if (v18369) {
        var v12822 = f$$4.event.dispatch;
        v5829 = JAM.call(v12822.apply, v12822, [i$$112.elem, arguments], JAM.policy.p3);
      } else {
        v5829 = b$$9;
      }
      return v5829;
    }
    var h$$39;
    var i$$112;
    var j$$37;
    var k$$18;
    var l$$33;
    var m$$15;
    var n$$64;
    var o$$6;
    var p$$27;
    var q$$4;
    var r$$6;
    var s$$18;
    var v27749 = a$$143.nodeType === 3;
    if (!v27749) {
      v27749 = a$$143.nodeType === 8;
    }
    var v26109 = v27749;
    if (!v26109) {
      v26109 = !c$$77;
    }
    var v22138 = v26109;
    if (!v22138) {
      v22138 = !d$$71;
    }
    var v18371 = v22138;
    if (!v18371) {
      v18371 = !(h$$39 = JAM.call(f$$4._data, f$$4, [a$$143], JAM.policy.p3));
    }
    if (!v18371) {
      var v28790 = d$$71.handler;
      if (v28790) {
        p$$27 = d$$71;
        d$$71 = p$$27.handler;
        g$$38 = p$$27.selector;
      }
      var v28791 = d$$71.guid;
      if (!v28791) {
        d$$71.guid = f$$4.guid;
        f$$4.guid = f$$4.guid + 1;
      }
      j$$37 = h$$39.events;
      if (!j$$37) {
        h$$39.events = j$$37 = {};
      }
      i$$112 = h$$39.handle;
      if (!i$$112) {
        h$$39.handle = i$$112 = v774;
        i$$112.elem = a$$143;
      }
      var v12826 = JAM.call(f$$4.trim, f$$4, [JAM.call(I, null, [c$$77], JAM.policy.p3)], JAM.policy.p3);
      c$$77 = JAM.call(v12826.split, v12826, [" "], JAM.policy.p3);
      k$$18 = 0;
      var v5833 = k$$18 < c$$77.length;
      for (;v5833;) {
        var v29461 = JAM.call(A.exec, A, [c$$77[k$$18]], JAM.policy.p3);
        if (!v29461) {
          v29461 = [];
        }
        l$$33 = v29461;
        m$$15 = l$$33[1];
        var v29899 = l$$33[2];
        if (!v29899) {
          v29899 = "";
        }
        var v29462 = v29899;
        var v28792 = JAM.call(v29462.split, v29462, ["."], JAM.policy.p3);
        n$$64 = JAM.call(v28792.sort, v28792, [], JAM.policy.p3);
        var v27752 = f$$4.event.special[m$$15];
        if (!v27752) {
          v27752 = {};
        }
        s$$18 = v27752;
        var v27753;
        if (g$$38) {
          v27753 = s$$18.delegateType;
        } else {
          v27753 = s$$18.bindType;
        }
        var v26111 = v27753;
        if (!v26111) {
          v26111 = m$$15;
        }
        m$$15 = v26111;
        var v22142 = f$$4.event.special[m$$15];
        if (!v22142) {
          v22142 = {};
        }
        s$$18 = v22142;
        var v22143 = l$$33[1];
        var v22144 = d$$71.guid;
        var v26114 = g$$38;
        if (v26114) {
          v26114 = JAM.call(G, null, [g$$38], JAM.policy.p3);
        }
        o$$6 = JAM.call(f$$4.extend, f$$4, [{type:m$$15, origType:v22143, data:e$$88, handler:d$$71, guid:v22144, selector:g$$38, quick:v26114, namespace:JAM.call(n$$64.join, n$$64, ["."], JAM.policy.p3)}, p$$27], JAM.policy.p3);
        r$$6 = j$$37[m$$15];
        if (!r$$6) {
          r$$6 = JAM.set(j$$37, m$$15, [], JAM.policy.p2);
          r$$6.delegateCount = 0;
          var v12828 = !s$$18.setup;
          if (!v12828) {
            var v22147 = s$$18.setup;
            v12828 = JAM.call(v22147.call, v22147, [a$$143, e$$88, n$$64, i$$112], JAM.policy.p3) === !1;
          }
          if (v12828) {
            var v5830;
            if (a$$143.addEventListener) {
              v5830 = JAM.call(a$$143.addEventListener, a$$143, [m$$15, i$$112, !1], JAM.policy.p3);
            } else {
              var v12830 = a$$143.attachEvent;
              if (v12830) {
                v12830 = JAM.call(a$$143.attachEvent, a$$143, ["on" + m$$15, i$$112], JAM.policy.p3);
              }
              v5830 = v12830;
            }
            v5830;
          }
        }
        var v18379 = s$$18.add;
        if (v18379) {
          var v26115 = s$$18.add;
          JAM.call(v26115.call, v26115, [a$$143, o$$6], JAM.policy.p3);
          var v26116 = o$$6.handler.guid;
          if (!v26116) {
            o$$6.handler.guid = d$$71.guid;
          }
        }
        var v18380;
        if (g$$38) {
          var v22148 = r$$6.delegateCount;
          r$$6.delegateCount = r$$6.delegateCount + 1;
          v18380 = JAM.call(r$$6.splice, r$$6, [v22148, 0, o$$6], JAM.policy.p3);
        } else {
          v18380 = JAM.call(r$$6.push, r$$6, [o$$6], JAM.policy.p3);
        }
        v18380;
        JAM.set(f$$4.event.global, m$$15, !0, JAM.policy.p2);
        k$$18 = k$$18 + 1;
        v5833 = k$$18 < c$$77.length;
      }
      a$$143 = null;
    }
    return;
  }
  function v773() {
    function v772(a$$139, b$$92) {
      if (JAM.call(f$$4.isArray, f$$4, [b$$92], JAM.policy.p3)) {
        var v5835 = a$$139;
        var v22149 = JAM.call(f$$4, null, [a$$139], JAM.policy.p3);
        return v5835.checked = JAM.call(f$$4.inArray, f$$4, [JAM.call(v22149.val, v22149, [], JAM.policy.p3), b$$92], JAM.policy.p3) >= 0;
      }
      return;
    }
    var v5837 = f$$4.valHooks;
    var v31353 = JAM.call(f$$4.extend, f$$4, [f$$4.valHooks[this], {set:v772}], JAM.policy.p3);
    JAM.set(v5837, this, v31353, JAM.policy.p2);
    return;
  }
  function v771() {
    function v770(a$$138) {
      var v5838;
      if (JAM.call(a$$138.getAttribute, a$$138, ["value"], JAM.policy.p3) === null) {
        v5838 = "on";
      } else {
        v5838 = a$$138.value;
      }
      return v5838;
    }
    JAM.set(f$$4.valHooks, this, {get:v770}, JAM.policy.p2);
    return;
  }
  function v769(a$$137) {
    var b$$91 = a$$137.parentNode;
    return null;
  }
  function v768(a$$136, b$$90) {
    return a$$136.style.cssText = "" + b$$90;
  }
  function v767(a$$135) {
    var v12838 = a$$135.style.cssText;
    var v5841 = JAM.call(v12838.toLowerCase, v12838, [], JAM.policy.p3);
    if (!v5841) {
      v5841 = b$$9;
    }
    return v5841;
  }
  function v766(a$$133, c$$75) {
    function v765(a$$134) {
      var d$$70 = JAM.call(a$$134.getAttribute, a$$134, [c$$75, 2], JAM.policy.p3);
      var v5842;
      if (d$$70 === null) {
        v5842 = b$$9;
      } else {
        v5842 = d$$70;
      }
      return v5842;
    }
    var v5843 = f$$4.attrHooks;
    var v5844 = c$$75;
    var v31354 = JAM.call(f$$4.extend, f$$4, [f$$4.attrHooks[c$$75], {get:v765}], JAM.policy.p3);
    JAM.set(v5843, v5844, v31354, JAM.policy.p2);
    return;
  }
  function v764(a$$132, b$$89, c$$74) {
    var v12843 = b$$89 === "";
    if (v12843) {
      b$$89 = "false";
    }
    JAM.call(w$$11.set, w$$11, [a$$132, b$$89, c$$74], JAM.policy.p3);
    return;
  }
  function v763(a$$130, b$$88) {
    function v762(a$$131, c$$73) {
      if (c$$73 === "") {
        JAM.call(a$$131.setAttribute, a$$131, [b$$88, "auto"], JAM.policy.p3);
        return c$$73;
      }
      return;
    }
    var v5846 = f$$4.attrHooks;
    var v5847 = b$$88;
    var v31355 = JAM.call(f$$4.extend, f$$4, [f$$4.attrHooks[b$$88], {set:v762}], JAM.policy.p3);
    JAM.set(v5846, v5847, v31355, JAM.policy.p2);
    return;
  }
  function v761(a$$129, b$$87, d$$69) {
    var e$$87 = JAM.call(a$$129.getAttributeNode, a$$129, [d$$69], JAM.policy.p3);
    if (!e$$87) {
      e$$87 = JAM.call(c$$5.createAttribute, c$$5, [d$$69], JAM.policy.p3);
      JAM.call(a$$129.setAttributeNode, a$$129, [e$$87], JAM.policy.p3);
    }
    return e$$87.nodeValue = b$$87 + "";
  }
  function v760(a$$128, c$$72) {
    var d$$68;
    d$$68 = JAM.call(a$$128.getAttributeNode, a$$128, [c$$72], JAM.policy.p3);
    var v5848;
    var v18388 = d$$68;
    if (v18388) {
      var v22150;
      if (y$$49[c$$72]) {
        v22150 = d$$68.nodeValue !== "";
      } else {
        v22150 = d$$68.specified;
      }
      v18388 = v22150;
    }
    if (v18388) {
      v5848 = d$$68.nodeValue;
    } else {
      v5848 = b$$9;
    }
    return v5848;
  }
  function v759(a$$127, b$$86, c$$71) {
    var d$$67;
    var v5849;
    if (b$$86 === !1) {
      v5849 = JAM.call(f$$4.removeAttr, f$$4, [a$$127, c$$71], JAM.policy.p3);
    } else {
      var v22151 = f$$4.propFix[c$$71];
      if (!v22151) {
        v22151 = c$$71;
      }
      d$$67 = v22151;
      var v22152 = d$$67 in a$$127;
      if (v22152) {
        JAM.set(a$$127, d$$67, !0, JAM.policy.p2);
      }
      v5849 = JAM.call(a$$127.setAttribute, a$$127, [c$$71, JAM.call(c$$71.toLowerCase, c$$71, [], JAM.policy.p3)], JAM.policy.p3);
    }
    v5849;
    return c$$71;
  }
  function v758(a$$126, c$$70) {
    var d$$66;
    var e$$86 = JAM.call(f$$4.prop, f$$4, [a$$126, c$$70], JAM.policy.p3);
    var v5850;
    var v18391 = e$$86 === !0;
    if (!v18391) {
      var v26121 = typeof e$$86 != "boolean";
      if (v26121) {
        v26121 = d$$66 = JAM.call(a$$126.getAttributeNode, a$$126, [c$$70], JAM.policy.p3);
      }
      var v22154 = v26121;
      if (v22154) {
        v22154 = d$$66.nodeValue !== !1;
      }
      v18391 = v22154;
    }
    if (v18391) {
      v5850 = JAM.call(c$$70.toLowerCase, c$$70, [], JAM.policy.p3);
    } else {
      v5850 = b$$9;
    }
    return v5850;
  }
  function v757(a$$125) {
    var c$$69 = JAM.call(a$$125.getAttributeNode, a$$125, ["tabindex"], JAM.policy.p3);
    var v5851;
    var v18392 = c$$69;
    if (v18392) {
      v18392 = c$$69.specified;
    }
    if (v18392) {
      v5851 = JAM.call(parseInt, null, [c$$69.value, 10], JAM.policy.p3);
    } else {
      var v12851;
      var v22156 = JAM.call(s$$15.test, s$$15, [a$$125.nodeName], JAM.policy.p3);
      if (!v22156) {
        var v26125 = JAM.call(t$$2.test, t$$2, [a$$125.nodeName], JAM.policy.p3);
        if (v26125) {
          v26125 = a$$125.href;
        }
        v22156 = v26125;
      }
      if (v22156) {
        v12851 = 0;
      } else {
        v12851 = b$$9;
      }
      v5851 = v12851;
    }
    return v5851;
  }
  function v756(a$$124, c$$68, d$$65) {
    var e$$85;
    var g$$37;
    var h$$38;
    var i$$111 = a$$124.nodeType;
    var v22157 = !!a$$124;
    if (v22157) {
      v22157 = i$$111 !== 3;
    }
    var v18394 = v22157;
    if (v18394) {
      v18394 = i$$111 !== 8;
    }
    var v12853 = v18394;
    if (v12853) {
      v12853 = i$$111 !== 2;
    }
    if (v12853) {
      var v12854 = i$$111 !== 1;
      if (!v12854) {
        v12854 = !JAM.call(f$$4.isXMLDoc, f$$4, [a$$124], JAM.policy.p3);
      }
      h$$38 = v12854;
      if (h$$38) {
        var v22158 = f$$4.propFix[c$$68];
        if (!v22158) {
          v22158 = c$$68;
        }
        c$$68 = v22158;
        g$$37 = f$$4.propHooks[c$$68];
      }
      var v5852;
      if (d$$65 !== b$$9) {
        var v12855;
        var v26130 = g$$37;
        if (v26130) {
          v26130 = "set" in g$$37;
        }
        var v22160 = v26130;
        if (v22160) {
          v22160 = (e$$85 = JAM.call(g$$37.set, g$$37, [a$$124, d$$65, c$$68], JAM.policy.p3)) !== b$$9;
        }
        if (v22160) {
          v12855 = e$$85;
        } else {
          v12855 = JAM.set(a$$124, c$$68, d$$65, JAM.policy.p2);
        }
        v5852 = v12855;
      } else {
        var v12856;
        var v26132 = g$$37;
        if (v26132) {
          v26132 = "get" in g$$37;
        }
        var v22161 = v26132;
        if (v22161) {
          v22161 = (e$$85 = JAM.call(g$$37.get, g$$37, [a$$124, c$$68], JAM.policy.p3)) !== null;
        }
        if (v22161) {
          v12856 = e$$85;
        } else {
          v12856 = a$$124[c$$68];
        }
        v5852 = v12856;
      }
      return v5852;
    }
    return;
  }
  function v755(a$$123, b$$85, c$$67) {
    var v12858 = w$$11;
    if (v12858) {
      v12858 = JAM.call(f$$4.nodeName, f$$4, [a$$123, "button"], JAM.policy.p3);
    }
    if (v12858) {
      return JAM.call(w$$11.set, w$$11, [a$$123, b$$85, c$$67], JAM.policy.p3);
    }
    a$$123.value = b$$85;
    return;
  }
  function v754(a$$122, b$$84) {
    var v12859 = w$$11;
    if (v12859) {
      v12859 = JAM.call(f$$4.nodeName, f$$4, [a$$122, "button"], JAM.policy.p3);
    }
    if (v12859) {
      return JAM.call(w$$11.get, w$$11, [a$$122, b$$84], JAM.policy.p3);
    }
    var v5856;
    if (b$$84 in a$$122) {
      v5856 = a$$122.value;
    } else {
      v5856 = null;
    }
    return v5856;
  }
  function v753(a$$121, b$$83) {
    var v12861 = JAM.call(r$$2.test, r$$2, [a$$121.nodeName], JAM.policy.p3);
    if (v12861) {
      v12861 = a$$121.parentNode;
    }
    if (v12861) {
      JAM.call(f$$4.error, f$$4, ["type property can't be changed"], JAM.policy.p3);
    } else {
      var v18400 = !f$$4.support.radioValue;
      if (v18400) {
        v18400 = b$$83 === "radio";
      }
      var v12862 = v18400;
      if (v12862) {
        v12862 = JAM.call(f$$4.nodeName, f$$4, [a$$121, "input"], JAM.policy.p3);
      }
      if (v12862) {
        var c$$66 = a$$121.value;
        JAM.call(a$$121.setAttribute, a$$121, ["type", b$$83], JAM.policy.p3);
        if (c$$66) {
          a$$121.value = c$$66;
        }
        return b$$83;
      }
    }
    return;
  }
  function v752(a$$120, b$$82) {
    var c$$65;
    var d$$64;
    var e$$84;
    var g$$36;
    var h$$37;
    var i$$110 = 0;
    var v12863 = b$$82;
    if (v12863) {
      v12863 = a$$120.nodeType === 1;
    }
    if (v12863) {
      var v12864 = JAM.call(b$$82.toLowerCase, b$$82, [], JAM.policy.p3);
      d$$64 = JAM.call(v12864.split, v12864, [p$$22], JAM.policy.p3);
      g$$36 = d$$64.length;
      var v5859 = i$$110 < g$$36;
      for (;v5859;) {
        e$$84 = d$$64[i$$110];
        if (e$$84) {
          var v28795 = f$$4.propFix[e$$84];
          if (!v28795) {
            v28795 = e$$84;
          }
          c$$65 = v28795;
          h$$37 = JAM.call(u$$1.test, u$$1, [e$$84], JAM.policy.p3);
          if (!h$$37) {
            JAM.call(f$$4.attr, f$$4, [a$$120, e$$84, ""], JAM.policy.p3);
          }
          var v27762;
          if (v$$4) {
            v27762 = e$$84;
          } else {
            v27762 = c$$65;
          }
          JAM.call(a$$120.removeAttribute, a$$120, [v27762], JAM.policy.p3);
          var v26136 = h$$37;
          if (v26136) {
            v26136 = c$$65 in a$$120;
          }
          var v22163 = v26136;
          if (v22163) {
            JAM.set(a$$120, c$$65, !1, JAM.policy.p2);
          }
        }
        i$$110 = i$$110 + 1;
        v5859 = i$$110 < g$$36;
      }
    }
    return;
  }
  function v751(a$$119, c$$64, d$$63, e$$83) {
    var g$$35;
    var h$$36;
    var i$$109;
    var j$$36 = a$$119.nodeType;
    var v22164 = !!a$$119;
    if (v22164) {
      v22164 = j$$36 !== 3;
    }
    var v18402 = v22164;
    if (v18402) {
      v18402 = j$$36 !== 8;
    }
    var v12865 = v18402;
    if (v12865) {
      v12865 = j$$36 !== 2;
    }
    if (v12865) {
      var v12866 = e$$83;
      if (v12866) {
        v12866 = c$$64 in f$$4.attrFn;
      }
      if (v12866) {
        var v5861 = JAM.call(f$$4, null, [a$$119], JAM.policy.p3);
        return JAM.call(v5861[c$$64], v5861, [d$$63], JAM.policy.p3);
      }
      if (typeof a$$119.getAttribute == "undefined") {
        return JAM.call(f$$4.prop, f$$4, [a$$119, c$$64, d$$63], JAM.policy.p3);
      }
      var v12868 = j$$36 !== 1;
      if (!v12868) {
        v12868 = !JAM.call(f$$4.isXMLDoc, f$$4, [a$$119], JAM.policy.p3);
      }
      i$$109 = v12868;
      if (i$$109) {
        c$$64 = JAM.call(c$$64.toLowerCase, c$$64, [], JAM.policy.p3);
        var v22165 = f$$4.attrHooks[c$$64];
        if (!v22165) {
          var v26139;
          if (JAM.call(u$$1.test, u$$1, [c$$64], JAM.policy.p3)) {
            v26139 = x$$67;
          } else {
            v26139 = w$$11;
          }
          v22165 = v26139;
        }
        h$$36 = v22165;
      }
      if (d$$63 !== b$$9) {
        if (d$$63 === null) {
          JAM.call(f$$4.removeAttr, f$$4, [a$$119, c$$64], JAM.policy.p3);
          return;
        }
        var v22166 = h$$36;
        if (v22166) {
          v22166 = "set" in h$$36;
        }
        var v18407 = v22166;
        if (v18407) {
          v18407 = i$$109;
        }
        var v12869 = v18407;
        if (v12869) {
          v12869 = (g$$35 = JAM.call(h$$36.set, h$$36, [a$$119, d$$63, c$$64], JAM.policy.p3)) !== b$$9;
        }
        if (v12869) {
          return g$$35;
        }
        JAM.call(a$$119.setAttribute, a$$119, [c$$64, "" + d$$63], JAM.policy.p3);
        return d$$63;
      }
      var v22167 = h$$36;
      if (v22167) {
        v22167 = "get" in h$$36;
      }
      var v18409 = v22167;
      if (v18409) {
        v18409 = i$$109;
      }
      var v12870 = v18409;
      if (v12870) {
        v12870 = (g$$35 = JAM.call(h$$36.get, h$$36, [a$$119, c$$64], JAM.policy.p3)) !== null;
      }
      if (v12870) {
        return g$$35;
      }
      g$$35 = JAM.call(a$$119.getAttribute, a$$119, [c$$64], JAM.policy.p3);
      var v5869;
      if (g$$35 === null) {
        v5869 = b$$9;
      } else {
        v5869 = g$$35;
      }
      return v5869;
    }
    return;
  }
  function v750(a$$118, b$$81) {
    function v749() {
      var v18411 = JAM.call(f$$4, null, [this], JAM.policy.p3);
      this.selected = JAM.call(f$$4.inArray, f$$4, [JAM.call(v18411.val, v18411, [], JAM.policy.p3), c$$63], JAM.policy.p3) >= 0;
      return;
    }
    var c$$63 = JAM.call(f$$4.makeArray, f$$4, [b$$81], JAM.policy.p3);
    var v18412 = JAM.call(f$$4, null, [a$$118], JAM.policy.p3);
    var v12873 = JAM.call(v18412.find, v18412, ["option"], JAM.policy.p3);
    JAM.call(v12873.each, v12873, [v749], JAM.policy.p3);
    var v12874 = c$$63.length;
    if (!v12874) {
      a$$118.selectedIndex = -1;
    }
    return c$$63;
  }
  function v748(a$$117) {
    var b$$80;
    var c$$62;
    var d$$62;
    var e$$82;
    var g$$34 = a$$117.selectedIndex;
    var h$$35 = [];
    var i$$108 = a$$117.options;
    var j$$35 = a$$117.type === "select-one";
    if (g$$34 < 0) {
      return null;
    }
    var v12875;
    if (j$$35) {
      v12875 = g$$34;
    } else {
      v12875 = 0;
    }
    c$$62 = v12875;
    var v12876;
    if (j$$35) {
      v12876 = g$$34 + 1;
    } else {
      v12876 = i$$108.length;
    }
    d$$62 = v12876;
    var v5876 = c$$62 < d$$62;
    for (;v5876;) {
      e$$82 = i$$108[c$$62];
      var v18414 = e$$82.selected;
      if (v18414) {
        var v22168;
        if (f$$4.support.optDisabled) {
          v22168 = !e$$82.disabled;
        } else {
          v22168 = JAM.call(e$$82.getAttribute, e$$82, ["disabled"], JAM.policy.p3) === null;
        }
        v18414 = v22168;
      }
      var v12877 = v18414;
      if (v12877) {
        var v18415 = !e$$82.parentNode.disabled;
        if (!v18415) {
          v18415 = !JAM.call(f$$4.nodeName, f$$4, [e$$82.parentNode, "optgroup"], JAM.policy.p3);
        }
        v12877 = v18415;
      }
      if (v12877) {
        var v5874 = JAM.call(f$$4, null, [e$$82], JAM.policy.p3);
        b$$80 = JAM.call(v5874.val, v5874, [], JAM.policy.p3);
        if (j$$35) {
          return b$$80;
        }
        JAM.call(h$$35.push, h$$35, [b$$80], JAM.policy.p3);
      }
      c$$62 = c$$62 + 1;
      v5876 = c$$62 < d$$62;
    }
    var v18416 = j$$35;
    if (v18416) {
      v18416 = !h$$35.length;
    }
    var v12878 = v18416;
    if (v12878) {
      v12878 = i$$108.length;
    }
    if (v12878) {
      var v5877 = JAM.call(f$$4, null, [i$$108[g$$34]], JAM.policy.p3);
      return JAM.call(v5877.val, v5877, [], JAM.policy.p3);
    }
    return h$$35;
  }
  function v747(a$$116) {
    var b$$79 = a$$116.attributes.value;
    var v5880;
    var v18417 = !b$$79;
    if (!v18417) {
      v18417 = b$$79.specified;
    }
    if (v18417) {
      v5880 = a$$116.value;
    } else {
      v5880 = a$$116.text;
    }
    return v5880;
  }
  function v746(a$$114) {
    function v745(d$$61) {
      function v744(a$$115) {
        var v5881;
        if (a$$115 == null) {
          v5881 = "";
        } else {
          v5881 = a$$115 + "";
        }
        return v5881;
      }
      var g$$33 = JAM.call(f$$4, null, [this], JAM.policy.p3);
      var h$$34;
      if (this.nodeType === 1) {
        var v18418;
        if (e$$81) {
          v18418 = h$$34 = JAM.call(a$$114.call, a$$114, [this, d$$61, JAM.call(g$$33.val, g$$33, [], JAM.policy.p3)], JAM.policy.p3);
        } else {
          v18418 = h$$34 = a$$114;
        }
        v18418;
        var v18419;
        if (h$$34 == null) {
          v18419 = h$$34 = "";
        } else {
          var v22175;
          if (typeof h$$34 == "number") {
            v22175 = h$$34 = h$$34 + "";
          } else {
            var v26146 = JAM.call(f$$4.isArray, f$$4, [h$$34], JAM.policy.p3);
            if (v26146) {
              v26146 = h$$34 = JAM.call(f$$4.map, f$$4, [h$$34, v744], JAM.policy.p3);
            }
            v22175 = v26146;
          }
          v18419 = v22175;
        }
        v18419;
        var v12883 = f$$4.valHooks[this.type];
        if (!v12883) {
          var v18422 = f$$4.valHooks;
          var v22177 = this.nodeName;
          v12883 = v18422[JAM.call(v22177.toLowerCase, v22177, [], JAM.policy.p3)];
        }
        c$$61 = v12883;
        var v18425 = !c$$61;
        if (!v18425) {
          v18425 = !("set" in c$$61);
        }
        var v12884 = v18425;
        if (!v12884) {
          v12884 = JAM.call(c$$61.set, c$$61, [this, h$$34, "value"], JAM.policy.p3) === b$$9;
        }
        if (v12884) {
          this.value = h$$34;
        }
      }
      return;
    }
    var c$$61;
    var d$$60;
    var e$$81;
    var g$$32 = this[0];
    if (!!arguments.length) {
      e$$81 = JAM.call(f$$4.isFunction, f$$4, [a$$114], JAM.policy.p3);
      return JAM.call(this.each, this, [v745], JAM.policy.p3);
    }
    if (g$$32) {
      var v5885 = f$$4.valHooks[g$$32.type];
      if (!v5885) {
        var v12888 = f$$4.valHooks;
        var v18429 = g$$32.nodeName;
        v5885 = v12888[JAM.call(v18429.toLowerCase, v18429, [], JAM.policy.p3)];
      }
      c$$61 = v5885;
      var v18430 = c$$61;
      if (v18430) {
        v18430 = "get" in c$$61;
      }
      var v12891 = v18430;
      if (v12891) {
        v12891 = (d$$60 = JAM.call(c$$61.get, c$$61, [g$$32, "value"], JAM.policy.p3)) !== b$$9;
      }
      if (v12891) {
        return d$$60;
      }
      d$$60 = g$$32.value;
      var v5887;
      if (typeof d$$60 == "string") {
        v5887 = JAM.call(d$$60.replace, d$$60, [q, ""], JAM.policy.p3);
      } else {
        var v12892;
        if (d$$60 == null) {
          v12892 = "";
        } else {
          v12892 = d$$60;
        }
        v5887 = v12892;
      }
      return v5887;
    }
    return;
  }
  function v743(a$$113) {
    var b$$78 = " " + a$$113 + " ";
    var c$$60 = 0;
    var d$$59 = this.length;
    var v5890 = c$$60 < d$$59;
    for (;v5890;) {
      var v12894 = this[c$$60].nodeType === 1;
      if (v12894) {
        var v26148 = " " + this[c$$60].className + " ";
        var v22181 = JAM.call(v26148.replace, v26148, [o, " "], JAM.policy.p3);
        v12894 = JAM.call(v22181.indexOf, v22181, [b$$78], JAM.policy.p3) > -1;
      }
      if (v12894) {
        return!0;
      }
      c$$60 = c$$60 + 1;
      v5890 = c$$60 < d$$59;
    }
    return!1;
  }
  function v742(a$$112, b$$77) {
    function v741() {
      if (c$$58 === "string") {
        var e$$80;
        var g$$31 = 0;
        var h$$33 = JAM.call(f$$4, null, [this], JAM.policy.p3);
        var i$$107 = b$$77;
        var j$$34 = JAM.call(a$$112.split, a$$112, [p$$22], JAM.policy.p3);
        var v12895 = g$$31;
        g$$31 = g$$31 + 1;
        var v5891 = e$$80 = j$$34[v12895];
        for (;v5891;) {
          var v12896;
          if (d$$58) {
            v12896 = i$$107;
          } else {
            v12896 = !JAM.call(h$$33.hasClass, h$$33, [e$$80], JAM.policy.p3);
          }
          i$$107 = v12896;
          var v18437;
          if (i$$107) {
            v18437 = "addClass";
          } else {
            v18437 = "removeClass";
          }
          JAM.call(h$$33[v18437], h$$33, [e$$80], JAM.policy.p3);
          var v12898 = g$$31;
          g$$31 = g$$31 + 1;
          v5891 = e$$80 = j$$34[v12898];
        }
      } else {
        var v12899 = c$$58 === "undefined";
        if (!v12899) {
          v12899 = c$$58 === "boolean";
        }
        if (v12899) {
          var v12900 = this.className;
          if (v12900) {
            JAM.call(f$$4._data, f$$4, [this, "__className__", this.className], JAM.policy.p3);
          }
          var v12901;
          var v22182 = this.className;
          if (!v22182) {
            v22182 = a$$112 === !1;
          }
          if (v22182) {
            v12901 = "";
          } else {
            var v18440 = JAM.call(f$$4._data, f$$4, [this, "__className__"], JAM.policy.p3);
            if (!v18440) {
              v18440 = "";
            }
            v12901 = v18440;
          }
          this.className = v12901;
        }
      }
      return;
    }
    function v740(c$$59) {
      var v5894 = JAM.call(f$$4, null, [this], JAM.policy.p3);
      JAM.call(v5894.toggleClass, v5894, [JAM.call(a$$112.call, a$$112, [this, c$$59, this.className, b$$77], JAM.policy.p3), b$$77], JAM.policy.p3);
      return;
    }
    var c$$58 = typeof a$$112;
    var d$$58 = typeof b$$77 == "boolean";
    if (JAM.call(f$$4.isFunction, f$$4, [a$$112], JAM.policy.p3)) {
      return JAM.call(this.each, this, [v740], JAM.policy.p3);
    }
    return JAM.call(this.each, this, [v741], JAM.policy.p3);
  }
  function v739(a$$111) {
    function v738(b$$76) {
      var v5898 = JAM.call(f$$4, null, [this], JAM.policy.p3);
      JAM.call(v5898.removeClass, v5898, [JAM.call(a$$111.call, a$$111, [this, b$$76, this.className], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    var c$$57;
    var d$$57;
    var e$$79;
    var g$$30;
    var h$$32;
    var i$$106;
    var j$$33;
    if (JAM.call(f$$4.isFunction, f$$4, [a$$111], JAM.policy.p3)) {
      return JAM.call(this.each, this, [v738], JAM.policy.p3);
    }
    var v18442 = a$$111;
    if (v18442) {
      v18442 = typeof a$$111 == "string";
    }
    var v12904 = v18442;
    if (!v12904) {
      v12904 = a$$111 === b$$9;
    }
    if (v12904) {
      var v5901 = a$$111 || "";
      c$$57 = JAM.call(v5901.split, v5901, [p$$22], JAM.policy.p3);
      d$$57 = 0;
      e$$79 = this.length;
      var v5907 = d$$57 < e$$79;
      for (;v5907;) {
        g$$30 = this[d$$57];
        var v12905 = g$$30.nodeType === 1;
        if (v12905) {
          v12905 = g$$30.className;
        }
        if (v12905) {
          if (a$$111) {
            var v5902 = " " + g$$30.className + " ";
            h$$32 = JAM.call(v5902.replace, v5902, [o, " "], JAM.policy.p3);
            i$$106 = 0;
            j$$33 = c$$57.length;
            var v5904 = i$$106 < j$$33;
            for (;v5904;) {
              h$$32 = JAM.call(h$$32.replace, h$$32, [" " + c$$57[i$$106] + " ", " "], JAM.policy.p3);
              i$$106 = i$$106 + 1;
              v5904 = i$$106 < j$$33;
            }
            var v5905 = g$$30;
            var v31356 = JAM.call(f$$4.trim, f$$4, [h$$32], JAM.policy.p3);
            v5905.className = v31356;
          } else {
            g$$30.className = "";
          }
        }
        d$$57 = d$$57 + 1;
        v5907 = d$$57 < e$$79;
      }
    }
    return this;
  }
  function v737(a$$110) {
    function v736(b$$75) {
      var v5909 = JAM.call(f$$4, null, [this], JAM.policy.p3);
      JAM.call(v5909.addClass, v5909, [JAM.call(a$$110.call, a$$110, [this, b$$75, this.className], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    var b$$74;
    var c$$56;
    var d$$56;
    var e$$78;
    var g$$29;
    var h$$31;
    var i$$105;
    if (JAM.call(f$$4.isFunction, f$$4, [a$$110], JAM.policy.p3)) {
      return JAM.call(this.each, this, [v736], JAM.policy.p3);
    }
    var v12909 = a$$110;
    if (v12909) {
      v12909 = typeof a$$110 == "string";
    }
    if (v12909) {
      b$$74 = JAM.call(a$$110.split, a$$110, [p$$22], JAM.policy.p3);
      c$$56 = 0;
      d$$56 = this.length;
      var v5918 = c$$56 < d$$56;
      for (;v5918;) {
        e$$78 = this[c$$56];
        if (e$$78.nodeType === 1) {
          var v12911 = !e$$78.className;
          if (v12911) {
            v12911 = b$$74.length === 1;
          }
          if (v12911) {
            e$$78.className = a$$110;
          } else {
            g$$29 = " " + e$$78.className + " ";
            h$$31 = 0;
            i$$105 = b$$74.length;
            var v5914 = h$$31 < i$$105;
            for (;v5914;) {
              var v5913 = ~JAM.call(g$$29.indexOf, g$$29, [" " + b$$74[h$$31] + " "], JAM.policy.p3);
              if (!v5913) {
                g$$29 = g$$29 + (b$$74[h$$31] + " ");
              }
              h$$31 = h$$31 + 1;
              v5914 = h$$31 < i$$105;
            }
            var v5915 = e$$78;
            var v31357 = JAM.call(f$$4.trim, f$$4, [g$$29], JAM.policy.p3);
            v5915.className = v31357;
          }
        }
        c$$56 = c$$56 + 1;
        v5918 = c$$56 < d$$56;
      }
    }
    return this;
  }
  function v735(a$$109) {
    function v734() {
      try {
        JAM.set(this, a$$109, b$$9, JAM.policy.p2);
        delete this[a$$109];
      } catch (c$$55) {
      }
      return;
    }
    var v5920 = f$$4.propFix[a$$109];
    if (!v5920) {
      v5920 = a$$109;
    }
    a$$109 = v5920;
    return JAM.call(this.each, this, [v734], JAM.policy.p3);
  }
  function v733(a$$108, b$$73) {
    return JAM.call(f$$4.access, f$$4, [this, f$$4.prop, a$$108, b$$73, arguments.length > 1], JAM.policy.p3);
  }
  function v732(a$$107) {
    function v731() {
      JAM.call(f$$4.removeAttr, f$$4, [this, a$$107], JAM.policy.p3);
      return;
    }
    return JAM.call(this.each, this, [v731], JAM.policy.p3);
  }
  function v730(a$$106, b$$72) {
    return JAM.call(f$$4.access, f$$4, [this, f$$4.attr, a$$106, b$$72, arguments.length > 1], JAM.policy.p3);
  }
  function v729(a$$105, c$$54) {
    function m$$14() {
      var v5925 = h$$30 = h$$30 - 1;
      if (!v5925) {
        JAM.call(d$$55.resolveWith, d$$55, [e$$77, [e$$77]], JAM.policy.p3);
      }
      return;
    }
    var v12921 = typeof a$$105 != "string";
    if (v12921) {
      c$$54 = a$$105;
      a$$105 = b$$9;
    }
    a$$105 = a$$105 || "fx";
    var d$$55 = JAM.call(f$$4.Deferred, f$$4, [], JAM.policy.p3);
    var e$$77 = this;
    var g$$28 = e$$77.length;
    var h$$30 = 1;
    var i$$104 = a$$105 + "defer";
    var j$$32 = a$$105 + "queue";
    var k$$17 = a$$105 + "mark";
    var l$$32;
    var v5927 = g$$28;
    g$$28 = g$$28 - 1;
    for (;v5927;) {
      var v12922 = JAM.call(f$$4.data, f$$4, [e$$77[g$$28], i$$104, b$$9, !0], JAM.policy.p3);
      if (!v12922) {
        var v22187 = JAM.call(f$$4.data, f$$4, [e$$77[g$$28], j$$32, b$$9, !0], JAM.policy.p3);
        if (!v22187) {
          v22187 = JAM.call(f$$4.data, f$$4, [e$$77[g$$28], k$$17, b$$9, !0], JAM.policy.p3);
        }
        var v18455 = v22187;
        if (v18455) {
          v18455 = JAM.call(f$$4.data, f$$4, [e$$77[g$$28], i$$104, JAM.call(f$$4.Callbacks, f$$4, ["once memory"], JAM.policy.p3), !0], JAM.policy.p3);
        }
        v12922 = v18455;
      }
      if (l$$32 = v12922) {
        h$$30 = h$$30 + 1;
        JAM.call(l$$32.add, l$$32, [m$$14], JAM.policy.p3);
      }
      v5927 = g$$28;
      g$$28 = g$$28 - 1;
    }
    JAM.call(m$$14, null, [], JAM.policy.p3);
    return JAM.call(d$$55.promise, d$$55, [c$$54], JAM.policy.p3);
  }
  function v728(a$$104) {
    return JAM.call(this.queue, this, [a$$104 || "fx", []], JAM.policy.p3);
  }
  function v727(a$$103, b$$70) {
    function v726(b$$71, c$$53) {
      function v725() {
        JAM.call(clearTimeout, null, [d$$54], JAM.policy.p3);
        return;
      }
      var d$$54 = JAM.call(setTimeout, null, [b$$71, a$$103], JAM.policy.p3);
      c$$53.stop = v725;
      return;
    }
    var v12923;
    if (f$$4.fx) {
      var v18457 = f$$4.fx.speeds[a$$103];
      if (!v18457) {
        v18457 = a$$103;
      }
      v12923 = v18457;
    } else {
      v12923 = a$$103;
    }
    a$$103 = v12923;
    b$$70 = b$$70 || "fx";
    return JAM.call(this.queue, this, [b$$70, v726], JAM.policy.p3);
  }
  function v724(a$$102) {
    function v723() {
      JAM.call(f$$4.dequeue, f$$4, [this, a$$102], JAM.policy.p3);
      return;
    }
    return JAM.call(this.each, this, [v723], JAM.policy.p3);
  }
  function v722(a$$101, c$$52) {
    function v721() {
      var b$$69 = JAM.call(f$$4.queue, f$$4, [this, a$$101, c$$52], JAM.policy.p3);
      var v12924 = a$$101 === "fx";
      if (v12924) {
        v12924 = b$$69[0] !== "inprogress";
      }
      var v5929 = v12924;
      if (v5929) {
        JAM.call(f$$4.dequeue, f$$4, [this, a$$101], JAM.policy.p3);
      }
      return;
    }
    var d$$53 = 2;
    var v5930 = typeof a$$101 != "string";
    if (v5930) {
      c$$52 = a$$101;
      a$$101 = "fx";
      d$$53 = d$$53 - 1;
    }
    if (arguments.length < d$$53) {
      return JAM.call(f$$4.queue, f$$4, [this[0], a$$101], JAM.policy.p3);
    }
    var v5933;
    if (c$$52 === b$$9) {
      v5933 = this;
    } else {
      v5933 = JAM.call(this.each, this, [v721], JAM.policy.p3);
    }
    return v5933;
  }
  function v720(a$$100, b$$68) {
    function v719() {
      JAM.call(f$$4.dequeue, f$$4, [a$$100, b$$68], JAM.policy.p3);
      return;
    }
    b$$68 = b$$68 || "fx";
    var c$$51 = JAM.call(f$$4.queue, f$$4, [a$$100, b$$68], JAM.policy.p3);
    var d$$52 = JAM.call(c$$51.shift, c$$51, [], JAM.policy.p3);
    var e$$76 = {};
    var v18460 = d$$52 === "inprogress";
    if (v18460) {
      d$$52 = JAM.call(c$$51.shift, c$$51, [], JAM.policy.p3);
    }
    if (d$$52) {
      var v27767 = b$$68 === "fx";
      if (v27767) {
        JAM.call(c$$51.unshift, c$$51, ["inprogress"], JAM.policy.p3);
      }
      JAM.call(f$$4._data, f$$4, [a$$100, b$$68 + ".run", e$$76], JAM.policy.p3);
      JAM.call(d$$52.call, d$$52, [a$$100, v719, e$$76], JAM.policy.p3);
    }
    var v12928 = c$$51.length;
    if (!v12928) {
      JAM.call(f$$4.removeData, f$$4, [a$$100, b$$68 + "queue " + b$$68 + ".run", !0], JAM.policy.p3);
      JAM.call(n$$57, null, [a$$100, b$$68, "queue"], JAM.policy.p3);
    }
    return;
  }
  function v718(a$$99, b$$67, c$$50) {
    var d$$51;
    if (a$$99) {
      b$$67 = (b$$67 || "fx") + "queue";
      d$$51 = JAM.call(f$$4._data, f$$4, [a$$99, b$$67], JAM.policy.p3);
      if (c$$50) {
        var v18463;
        var v26159 = !d$$51;
        if (!v26159) {
          v26159 = JAM.call(f$$4.isArray, f$$4, [c$$50], JAM.policy.p3);
        }
        if (v26159) {
          v18463 = d$$51 = JAM.call(f$$4._data, f$$4, [a$$99, b$$67, JAM.call(f$$4.makeArray, f$$4, [c$$50], JAM.policy.p3)], JAM.policy.p3);
        } else {
          v18463 = JAM.call(d$$51.push, d$$51, [c$$50], JAM.policy.p3);
        }
        v18463;
      }
      return d$$51 || [];
    }
    return;
  }
  function v717(a$$98, b$$66, c$$49) {
    var v5934 = a$$98 !== !0;
    if (v5934) {
      c$$49 = b$$66;
      b$$66 = a$$98;
      a$$98 = !1;
    }
    if (b$$66) {
      c$$49 = c$$49 || "fx";
      var d$$50 = c$$49 + "mark";
      var v5935;
      if (a$$98) {
        v5935 = 0;
      } else {
        var v18464 = JAM.call(f$$4._data, f$$4, [b$$66, d$$50], JAM.policy.p3);
        if (!v18464) {
          v18464 = 1;
        }
        v5935 = v18464 - 1;
      }
      var e$$75 = v5935;
      var v5936;
      if (e$$75) {
        v5936 = JAM.call(f$$4._data, f$$4, [b$$66, d$$50, e$$75], JAM.policy.p3);
      } else {
        JAM.call(f$$4.removeData, f$$4, [b$$66, d$$50, !0], JAM.policy.p3);
        v5936 = JAM.call(n$$57, null, [b$$66, c$$49, "mark"], JAM.policy.p3);
      }
      v5936;
    }
    return;
  }
  function v716(a$$97, b$$65) {
    if (a$$97) {
      b$$65 = (b$$65 || "fx") + "mark";
      var v26160 = JAM.call(f$$4._data, f$$4, [a$$97, b$$65], JAM.policy.p3);
      if (!v26160) {
        v26160 = 0;
      }
      JAM.call(f$$4._data, f$$4, [a$$97, b$$65, v26160 + 1], JAM.policy.p3);
    }
    return;
  }
  function v715(a$$96) {
    function v714() {
      JAM.call(f$$4.removeData, f$$4, [this, a$$96], JAM.policy.p3);
      return;
    }
    return JAM.call(this.each, this, [v714], JAM.policy.p3);
  }
  function v713(a$$95, c$$47) {
    function v712(c$$48) {
      function v711() {
        var b$$64 = JAM.call(f$$4, null, [this], JAM.policy.p3);
        JAM.call(b$$64.triggerHandler, b$$64, ["setData" + e$$74, d$$49], JAM.policy.p3);
        JAM.call(f$$4.data, f$$4, [this, a$$95, c$$48], JAM.policy.p3);
        JAM.call(b$$64.triggerHandler, b$$64, ["changeData" + e$$74, d$$49], JAM.policy.p3);
        return;
      }
      if (c$$48 === b$$9) {
        m$$13 = JAM.call(this.triggerHandler, this, ["getData" + e$$74, [d$$49[0]]], JAM.policy.p3);
        var v18470 = m$$13 === b$$9;
        if (v18470) {
          v18470 = j$$31;
        }
        var v12934 = v18470;
        if (v12934) {
          m$$13 = JAM.call(f$$4.data, f$$4, [j$$31, a$$95], JAM.policy.p3);
          m$$13 = JAM.call(l$$21, null, [j$$31, a$$95, m$$13], JAM.policy.p3);
        }
        var v5937;
        var v18471 = m$$13 === b$$9;
        if (v18471) {
          v18471 = d$$49[1];
        }
        if (v18471) {
          v5937 = JAM.call(this.data, this, [d$$49[0]], JAM.policy.p3);
        } else {
          v5937 = m$$13;
        }
        return v5937;
      }
      introspect(JAM.policy.p2) {
        d$$49[1] = c$$48;
      }
      JAM.call(this.each, this, [v711], JAM.policy.p3);
      return;
    }
    function v710() {
      JAM.call(f$$4.data, f$$4, [this, a$$95], JAM.policy.p3);
      return;
    }
    var d$$49;
    var e$$74;
    var g$$27;
    var h$$29;
    var i$$103;
    var j$$31 = this[0];
    var k$$16 = 0;
    var m$$13 = null;
    if (a$$95 === b$$9) {
      if (this.length) {
        m$$13 = JAM.call(f$$4.data, f$$4, [j$$31], JAM.policy.p3);
        var v12937 = j$$31.nodeType === 1;
        if (v12937) {
          v12937 = !JAM.call(f$$4._data, f$$4, [j$$31, "parsedAttrs"], JAM.policy.p3);
        }
        if (v12937) {
          g$$27 = j$$31.attributes;
          i$$103 = g$$27.length;
          var v5939 = k$$16 < i$$103;
          for (;v5939;) {
            h$$29 = g$$27[k$$16].name;
            var v12939 = JAM.call(h$$29.indexOf, h$$29, ["data-"], JAM.policy.p3) === 0;
            if (v12939) {
              h$$29 = JAM.call(f$$4.camelCase, f$$4, [JAM.call(h$$29.substring, h$$29, [5], JAM.policy.p3)], JAM.policy.p3);
              JAM.call(l$$21, null, [j$$31, h$$29, m$$13[h$$29]], JAM.policy.p3);
            }
            k$$16 = k$$16 + 1;
            v5939 = k$$16 < i$$103;
          }
          JAM.call(f$$4._data, f$$4, [j$$31, "parsedAttrs", !0], JAM.policy.p3);
        }
      }
      return m$$13;
    }
    if (typeof a$$95 == "object") {
      return JAM.call(this.each, this, [v710], JAM.policy.p3);
    }
    d$$49 = JAM.call(a$$95.split, a$$95, [".", 2], JAM.policy.p3);
    var v18475;
    if (d$$49[1]) {
      v18475 = "." + d$$49[1];
    } else {
      v18475 = "";
    }
    introspect(JAM.policy.p2) {
      d$$49[1] = v18475;
    }
    e$$74 = d$$49[1] + "!";
    return JAM.call(f$$4.access, f$$4, [this, v712, null, c$$47, arguments.length > 1, null, !1], JAM.policy.p3);
  }
  function v709(a$$94) {
    if (a$$94.nodeName) {
      var v5947 = f$$4.noData;
      var v12943 = a$$94.nodeName;
      var b$$63 = v5947[JAM.call(v12943.toLowerCase, v12943, [], JAM.policy.p3)];
      if (b$$63) {
        var v5949 = b$$63 !== !0;
        if (v5949) {
          v5949 = JAM.call(a$$94.getAttribute, a$$94, ["classid"], JAM.policy.p3) === b$$63;
        }
        return v5949;
      }
    }
    return!0;
  }
  function v708(a$$93, b$$62, c$$46) {
    return JAM.call(f$$4.data, f$$4, [a$$93, b$$62, c$$46, !0], JAM.policy.p3);
  }
  function v707(a$$92, b$$61, c$$45) {
    if (!!JAM.call(f$$4.acceptData, f$$4, [a$$92], JAM.policy.p3)) {
      var d$$48;
      var e$$73;
      var g$$26;
      var h$$28 = f$$4.expando;
      var i$$102 = a$$92.nodeType;
      var v5952;
      if (i$$102) {
        v5952 = f$$4.cache;
      } else {
        v5952 = a$$92;
      }
      var j$$30 = v5952;
      var v5953;
      if (i$$102) {
        v5953 = a$$92[h$$28];
      } else {
        v5953 = h$$28;
      }
      var k$$15 = v5953;
      if (!j$$30[k$$15]) {
        return;
      }
      if (b$$61) {
        var v5955;
        if (c$$45) {
          v5955 = j$$30[k$$15];
        } else {
          v5955 = j$$30[k$$15].data;
        }
        d$$48 = v5955;
        if (d$$48) {
          var v5956 = JAM.call(f$$4.isArray, f$$4, [b$$61], JAM.policy.p3);
          if (!v5956) {
            var v12949;
            if (b$$61 in d$$48) {
              v12949 = b$$61 = [b$$61];
            } else {
              b$$61 = JAM.call(f$$4.camelCase, f$$4, [b$$61], JAM.policy.p3);
              var v22203;
              if (b$$61 in d$$48) {
                v22203 = b$$61 = [b$$61];
              } else {
                v22203 = b$$61 = JAM.call(b$$61.split, b$$61, [" "], JAM.policy.p3);
              }
              v12949 = v22203;
            }
            v12949;
          }
          e$$73 = 0;
          g$$26 = b$$61.length;
          var v5958 = e$$73 < g$$26;
          for (;v5958;) {
            delete d$$48[b$$61[e$$73]];
            e$$73 = e$$73 + 1;
            v5958 = e$$73 < g$$26;
          }
          var v22204;
          if (c$$45) {
            v22204 = m$$4;
          } else {
            v22204 = f$$4.isEmptyObject;
          }
          if (!JAM.call(v22204, null, [d$$48], JAM.policy.p3)) {
            return;
          }
        }
      }
      if (!c$$45) {
        delete j$$30[k$$15].data;
        if (!JAM.call(m$$4, null, [j$$30[k$$15]], JAM.policy.p3)) {
          return;
        }
      }
      var v12953;
      var v22205 = f$$4.support.deleteExpando;
      if (!v22205) {
        v22205 = !j$$30.setInterval;
      }
      if (v22205) {
        v12953 = delete j$$30[k$$15];
      } else {
        v12953 = JAM.set(j$$30, k$$15, null, JAM.policy.p2);
      }
      v12953;
      if (i$$102) {
        var v18481;
        if (f$$4.support.deleteExpando) {
          v18481 = delete a$$92[h$$28];
        } else {
          var v22206;
          if (a$$92.removeAttribute) {
            v22206 = JAM.call(a$$92.removeAttribute, a$$92, [h$$28], JAM.policy.p3);
          } else {
            v22206 = JAM.set(a$$92, h$$28, null, JAM.policy.p2);
          }
          v18481 = v22206;
        }
        v18481;
      }
    }
    return;
  }
  function v706(a$$91, c$$44, d$$47, e$$72) {
    if (!!JAM.call(f$$4.acceptData, f$$4, [a$$91], JAM.policy.p3)) {
      var g$$25;
      var h$$27;
      var i$$101;
      var j$$29 = f$$4.expando;
      var k$$14 = typeof c$$44 == "string";
      var l$$31 = a$$91.nodeType;
      var v5965;
      if (l$$31) {
        v5965 = f$$4.cache;
      } else {
        v5965 = a$$91;
      }
      var m$$12 = v5965;
      var v5966;
      if (l$$31) {
        v5966 = a$$91[j$$29];
      } else {
        var v12955 = a$$91[j$$29];
        if (v12955) {
          v12955 = j$$29;
        }
        v5966 = v12955;
      }
      var n$$63 = v5966;
      var o$$5 = c$$44 === "events";
      var v26167 = !n$$63;
      if (!v26167) {
        v26167 = !m$$12[n$$63];
      }
      var v22208 = v26167;
      if (!v22208) {
        var v27774 = !o$$5;
        if (v27774) {
          v27774 = !e$$72;
        }
        var v26168 = v27774;
        if (v26168) {
          v26168 = !m$$12[n$$63].data;
        }
        v22208 = v26168;
      }
      var v18483 = v22208;
      if (v18483) {
        v18483 = k$$14;
      }
      var v12956 = v18483;
      if (v12956) {
        v12956 = d$$47 === b$$9;
      }
      if (v12956) {
        return;
      }
      if (!n$$63) {
        var v18484;
        if (l$$31) {
          v18484 = JAM.set(a$$91, j$$29, n$$63 = JAM.set(f$$4, "uuid", f$$4.uuid + 1, JAM.policy.p2), JAM.policy.p2);
        } else {
          v18484 = n$$63 = j$$29;
        }
        v18484;
      }
      var v12957 = m$$12[n$$63];
      if (!v12957) {
        JAM.set(m$$12, n$$63, {}, JAM.policy.p2);
        if (!l$$31) {
          m$$12[n$$63].toJSON = f$$4.noop;
        }
      }
      var v12958 = typeof c$$44 == "object";
      if (!v12958) {
        v12958 = typeof c$$44 == "function";
      }
      if (v12958) {
        var v5968;
        if (e$$72) {
          var v12959 = m$$12;
          var v12960 = n$$63;
          var v31358 = JAM.call(f$$4.extend, f$$4, [m$$12[n$$63], c$$44], JAM.policy.p3);
          v5968 = JAM.set(v12959, v12960, v31358, JAM.policy.p2);
        } else {
          var v12961 = m$$12[n$$63];
          var v31359 = JAM.call(f$$4.extend, f$$4, [m$$12[n$$63].data, c$$44], JAM.policy.p3);
          v5968 = v12961.data = v31359;
        }
        v5968;
      }
      g$$25 = h$$27 = m$$12[n$$63];
      if (!e$$72) {
        var v26173 = h$$27.data;
        if (!v26173) {
          h$$27.data = {};
        }
        h$$27 = h$$27.data;
      }
      var v12962 = d$$47 !== b$$9;
      if (v12962) {
        JAM.set(h$$27, JAM.call(f$$4.camelCase, f$$4, [c$$44], JAM.policy.p3), d$$47, JAM.policy.p2);
      }
      var v12963 = o$$5;
      if (v12963) {
        v12963 = !h$$27[c$$44];
      }
      if (v12963) {
        return g$$25.events;
      }
      var v5971;
      if (k$$14) {
        i$$101 = h$$27[c$$44];
        var v18494 = i$$101 == null;
        if (v18494) {
          v18494 = i$$101 = h$$27[JAM.call(f$$4.camelCase, f$$4, [c$$44], JAM.policy.p3)];
        }
        v5971 = v18494;
      } else {
        v5971 = i$$101 = h$$27;
      }
      v5971;
      return i$$101;
    }
    return;
  }
  function v705(a$$90) {
    var v5973;
    if (a$$90.nodeType) {
      v5973 = f$$4.cache[a$$90[f$$4.expando]];
    } else {
      v5973 = a$$90[f$$4.expando];
    }
    a$$90 = v5973;
    var v5974 = !!a$$90;
    if (v5974) {
      v5974 = !JAM.call(m$$4, null, [a$$90], JAM.policy.p3);
    }
    return v5974;
  }
  function v704() {
    function v703() {
      var d$$46;
      var e$$71;
      var g$$24;
      var h$$26;
      var i$$100;
      var j$$28;
      var l$$30;
      var m$$11;
      var n$$62;
      var q$$3;
      var r$$5;
      var s$$17;
      var t$$4;
      var u$$3 = JAM.call(c$$5.getElementsByTagName, c$$5, ["body"], JAM.policy.p3)[0];
      var v5976 = !u$$3;
      if (!v5976) {
        m$$11 = 1;
        t$$4 = "padding:0;margin:0;border:";
        r$$5 = "position:absolute;top:0;left:0;width:1px;height:1px;";
        s$$17 = t$$4 + "0;visibility:hidden;";
        n$$62 = "style='" + r$$5 + t$$4 + "5px solid #000;";
        q$$3 = "<div " + n$$62 + "display:block;'><div style='" + t$$4 + "0;display:block;overflow:hidden;'></div></div>" + "<table " + n$$62 + "' cellpadding='0' cellspacing='0'>" + "<tr><td></td></tr></table>";
        d$$46 = JAM.call(c$$5.createElement, c$$5, ["div"], JAM.policy.p3);
        d$$46.style.cssText = s$$17 + "width:0;height:0;position:static;top:0;margin-top:" + m$$11 + "px";
        JAM.call(u$$3.insertBefore, u$$3, [d$$46, u$$3.firstChild], JAM.policy.p3);
        p$$26 = JAM.call(c$$5.createElement, c$$5, ["div"], JAM.policy.p3);
        JAM.call(d$$46.appendChild, d$$46, [p$$26], JAM.policy.p3);
        JAM.set(p$$26, "innerHTML", "<table><tr><td style='" + t$$4 + "0;display:none'></td><td>t</td></tr></table>");
        k$$13 = JAM.call(p$$26.getElementsByTagName, p$$26, ["td"], JAM.policy.p3);
        o$$4 = k$$13[0].offsetHeight === 0;
        k$$13[0].style.display = "";
        k$$13[1].style.display = "none";
        var v31084 = o$$4;
        if (v31084) {
          v31084 = k$$13[0].offsetHeight === 0;
        }
        b$$60.reliableHiddenOffsets = v31084;
        var v31082 = a$$13.getComputedStyle;
        if (v31082) {
          JAM.set(p$$26, "innerHTML", "");
          l$$30 = JAM.call(c$$5.createElement, c$$5, ["div"], JAM.policy.p3);
          l$$30.style.width = "0";
          l$$30.style.marginRight = "0";
          p$$26.style.width = "2px";
          JAM.call(p$$26.appendChild, p$$26, [l$$30], JAM.policy.p3);
          var v31089 = b$$60;
          var v31112 = JAM.call(a$$13.getComputedStyle, a$$13, [l$$30, null], JAM.policy.p3);
          if (!v31112) {
            v31112 = {marginRight:0};
          }
          var v31101 = JAM.call(parseInt, null, [v31112.marginRight, 10], JAM.policy.p3);
          if (!v31101) {
            v31101 = 0;
          }
          v31089.reliableMarginRight = v31101 === 0;
        }
        var v31080 = typeof p$$26.style.zoom != "undefined";
        if (v31080) {
          JAM.set(p$$26, "innerHTML", "");
          p$$26.style.width = p$$26.style.padding = "1px";
          p$$26.style.border = 0;
          p$$26.style.overflow = "hidden";
          p$$26.style.display = "inline";
          p$$26.style.zoom = 1;
          b$$60.inlineBlockNeedsLayout = p$$26.offsetWidth === 3;
          p$$26.style.display = "block";
          p$$26.style.overflow = "visible";
          JAM.set(p$$26, "innerHTML", "<div style='width:5px;'></div>");
          b$$60.shrinkWrapBlocks = p$$26.offsetWidth !== 3;
        }
        p$$26.style.cssText = r$$5 + s$$17;
        JAM.set(p$$26, "innerHTML", q$$3);
        e$$71 = p$$26.firstChild;
        g$$24 = e$$71.firstChild;
        i$$100 = e$$71.nextSibling.firstChild.firstChild;
        j$$28 = {doesNotAddBorder:g$$24.offsetTop !== 5, doesAddBorderForTableAndCells:i$$100.offsetTop === 5};
        g$$24.style.position = "fixed";
        g$$24.style.top = "20px";
        var v30719 = g$$24.offsetTop === 20;
        if (!v30719) {
          v30719 = g$$24.offsetTop === 15;
        }
        j$$28.fixedPosition = v30719;
        g$$24.style.position = g$$24.style.top = "";
        e$$71.style.overflow = "hidden";
        e$$71.style.position = "relative";
        j$$28.subtractsBorderForOverflowNotVisible = g$$24.offsetTop === -5;
        j$$28.doesNotIncludeMarginInBodyOffset = u$$3.offsetTop !== m$$11;
        var v28799 = a$$13.getComputedStyle;
        if (v28799) {
          p$$26.style.marginTop = "1%";
          var v29902 = b$$60;
          var v30592 = JAM.call(a$$13.getComputedStyle, a$$13, [p$$26, null], JAM.policy.p3);
          if (!v30592) {
            v30592 = {marginTop:0};
          }
          v29902.pixelMargin = v30592.marginTop !== "1%";
        }
        var v27777 = typeof d$$46.style.zoom != "undefined";
        if (v27777) {
          d$$46.style.zoom = 1;
        }
        JAM.call(u$$3.removeChild, u$$3, [d$$46], JAM.policy.p3);
        l$$30 = p$$26 = d$$46 = null;
        JAM.call(f$$4.extend, f$$4, [b$$60, j$$28], JAM.policy.p3);
      }
      return;
    }
    function v702() {
      b$$60.noCloneEvent = !1;
      return;
    }
    var b$$60;
    var d$$45;
    var e$$70;
    var g$$23;
    var h$$25;
    var i$$99;
    var j$$27;
    var k$$13;
    var l$$29;
    var m$$10;
    var n$$61;
    var o$$4;
    var p$$26 = JAM.call(c$$5.createElement, c$$5, ["div"], JAM.policy.p3);
    var q$$2 = c$$5.documentElement;
    JAM.call(p$$26.setAttribute, p$$26, ["className", "t"], JAM.policy.p3);
    JAM.set(p$$26, "innerHTML", "   <link/><table></table><a href='/a' style='top:1px;float:left;opacity:.55;'>a</a><input type='checkbox'/>");
    d$$45 = JAM.call(p$$26.getElementsByTagName, p$$26, ["*"], JAM.policy.p3);
    e$$70 = JAM.call(p$$26.getElementsByTagName, p$$26, ["a"], JAM.policy.p3)[0];
    var v18496 = !d$$45;
    if (!v18496) {
      v18496 = !d$$45.length;
    }
    var v12972 = v18496;
    if (!v12972) {
      v12972 = !e$$70;
    }
    if (v12972) {
      return{};
    }
    g$$23 = JAM.call(c$$5.createElement, c$$5, ["select"], JAM.policy.p3);
    h$$25 = JAM.call(g$$23.appendChild, g$$23, [JAM.call(c$$5.createElement, c$$5, ["option"], JAM.policy.p3)], JAM.policy.p3);
    i$$99 = JAM.call(p$$26.getElementsByTagName, p$$26, ["input"], JAM.policy.p3)[0];
    var v28802 = p$$26.firstChild.nodeType === 3;
    var v28803 = !JAM.call(p$$26.getElementsByTagName, p$$26, ["tbody"], JAM.policy.p3).length;
    var v28804 = !!JAM.call(p$$26.getElementsByTagName, p$$26, ["link"], JAM.policy.p3).length;
    var v28805 = JAM.call(/top/.test, /top/, [JAM.call(e$$70.getAttribute, e$$70, ["style"], JAM.policy.p3)], JAM.policy.p3);
    var v28806 = JAM.call(e$$70.getAttribute, e$$70, ["href"], JAM.policy.p3) === "/a";
    var v28807 = JAM.call(/^0.55/.test, /^0.55/, [e$$70.style.opacity], JAM.policy.p3);
    var v28808 = !!e$$70.style.cssFloat;
    var v28809 = i$$99.value === "on";
    var v28810 = h$$25.selected;
    var v28811 = p$$26.className !== "t";
    var v28812 = !!JAM.call(c$$5.createElement, c$$5, ["form"], JAM.policy.p3).enctype;
    var v30179 = JAM.call(c$$5.createElement, c$$5, ["nav"], JAM.policy.p3);
    b$$60 = {leadingWhitespace:v28802, tbody:v28803, htmlSerialize:v28804, style:v28805, hrefNormalized:v28806, opacity:v28807, cssFloat:v28808, checkOn:v28809, optSelected:v28810, getSetAttribute:v28811, enctype:v28812, html5Clone:JAM.call(v30179.cloneNode, v30179, [!0], JAM.policy.p3).outerHTML !== "<:nav></:nav>", submitBubbles:!0, changeBubbles:!0, focusinBubbles:!1, deleteExpando:!0, noCloneEvent:!0, inlineBlockNeedsLayout:!1, shrinkWrapBlocks:!1, reliableMarginRight:!0, pixelMargin:!0};
    f$$4.boxModel = b$$60.boxModel = c$$5.compatMode === "CSS1Compat";
    i$$99.checked = !0;
    b$$60.noCloneChecked = JAM.call(i$$99.cloneNode, i$$99, [!0], JAM.policy.p3).checked;
    g$$23.disabled = !0;
    b$$60.optDisabled = !h$$25.disabled;
    try {
      delete p$$26.test;
    } catch (r$$4) {
      b$$60.deleteExpando = !1;
    }
    var v30965 = !p$$26.addEventListener;
    if (v30965) {
      v30965 = p$$26.attachEvent;
    }
    var v30917 = v30965;
    if (v30917) {
      v30917 = p$$26.fireEvent;
    }
    var v30844 = v30917;
    if (v30844) {
      JAM.call(p$$26.attachEvent, p$$26, ["onclick", v702], JAM.policy.p3);
      var v30966 = JAM.call(p$$26.cloneNode, p$$26, [!0], JAM.policy.p3);
      JAM.call(v30966.fireEvent, v30966, ["onclick"], JAM.policy.p3);
    }
    i$$99 = JAM.call(c$$5.createElement, c$$5, ["input"], JAM.policy.p3);
    i$$99.value = "t";
    JAM.call(i$$99.setAttribute, i$$99, ["type", "radio"], JAM.policy.p3);
    b$$60.radioValue = i$$99.value === "t";
    JAM.call(i$$99.setAttribute, i$$99, ["checked", "checked"], JAM.policy.p3);
    JAM.call(i$$99.setAttribute, i$$99, ["name", "t"], JAM.policy.p3);
    JAM.call(p$$26.appendChild, p$$26, [i$$99], JAM.policy.p3);
    j$$27 = JAM.call(c$$5.createDocumentFragment, c$$5, [], JAM.policy.p3);
    JAM.call(j$$27.appendChild, j$$27, [p$$26.lastChild], JAM.policy.p3);
    var v26175 = b$$60;
    var v29481 = JAM.call(j$$27.cloneNode, j$$27, [!0], JAM.policy.p3);
    v26175.checkClone = JAM.call(v29481.cloneNode, v29481, [!0], JAM.policy.p3).lastChild.checked;
    b$$60.appendChecked = i$$99.checked;
    JAM.call(j$$27.removeChild, j$$27, [i$$99], JAM.policy.p3);
    JAM.call(j$$27.appendChild, j$$27, [p$$26], JAM.policy.p3);
    if (p$$26.attachEvent) {
      for (n$$61 in{submit:1, change:1, focusin:1}) {
        m$$10 = "on" + n$$61;
        o$$4 = m$$10 in p$$26;
        if (!o$$4) {
          JAM.call(p$$26.setAttribute, p$$26, [m$$10, "return;"], JAM.policy.p3);
          o$$4 = typeof p$$26[m$$10] == "function";
        }
        JAM.set(b$$60, n$$61 + "Bubbles", o$$4, JAM.policy.p2);
      }
    }
    JAM.call(j$$27.removeChild, j$$27, [p$$26], JAM.policy.p3);
    j$$27 = g$$23 = h$$25 = p$$26 = i$$99 = null;
    JAM.call(f$$4, null, [v703], JAM.policy.p3);
    return b$$60;
  }
  function v701(a$$87) {
    function m$$9(a$$88) {
      function v699(b$$59) {
        var v12975 = e$$69;
        var v12976 = a$$88;
        var v18498;
        if (arguments.length > 1) {
          v18498 = JAM.call(i$$85.call, i$$85, [arguments, 0], JAM.policy.p3);
        } else {
          v18498 = b$$59;
        }
        JAM.set(v12975, v12976, v18498, JAM.policy.p2);
        JAM.call(j$$26.notifyWith, j$$26, [k$$12, e$$69], JAM.policy.p3);
        return;
      }
      return v699;
    }
    function l$$28(a$$89) {
      function v700(c$$43) {
        var v12977 = b$$58;
        var v12978 = a$$89;
        var v18499;
        if (arguments.length > 1) {
          v18499 = JAM.call(i$$85.call, i$$85, [arguments, 0], JAM.policy.p3);
        } else {
          v18499 = c$$43;
        }
        JAM.set(v12977, v12978, v18499, JAM.policy.p2);
        var v12979 = g$$22 = g$$22 - 1;
        if (!v12979) {
          JAM.call(j$$26.resolveWith, j$$26, [j$$26, b$$58], JAM.policy.p3);
        }
        return;
      }
      return v700;
    }
    var b$$58 = JAM.call(i$$85.call, i$$85, [arguments, 0], JAM.policy.p3);
    var c$$42 = 0;
    var d$$44 = b$$58.length;
    var e$$69 = JAM.call(Array, null, [d$$44], JAM.policy.p3);
    var g$$22 = d$$44;
    var h$$24 = d$$44;
    var v5980;
    var v22219 = d$$44 <= 1;
    if (v22219) {
      v22219 = a$$87;
    }
    var v18501 = v22219;
    if (v18501) {
      v18501 = JAM.call(f$$4.isFunction, f$$4, [a$$87.promise], JAM.policy.p3);
    }
    if (v18501) {
      v5980 = a$$87;
    } else {
      v5980 = JAM.call(f$$4.Deferred, f$$4, [], JAM.policy.p3);
    }
    var j$$26 = v5980;
    var k$$12 = JAM.call(j$$26.promise, j$$26, [], JAM.policy.p3);
    if (d$$44 > 1) {
      var v5982 = c$$42 < d$$44;
      for (;v5982;) {
        var v5981;
        var v22221 = b$$58[c$$42];
        if (v22221) {
          v22221 = b$$58[c$$42].promise;
        }
        var v18502 = v22221;
        if (v18502) {
          v18502 = JAM.call(f$$4.isFunction, f$$4, [b$$58[c$$42].promise], JAM.policy.p3);
        }
        if (v18502) {
          var v18503 = b$$58[c$$42];
          var v12981 = JAM.call(v18503.promise, v18503, [], JAM.policy.p3);
          v5981 = JAM.call(v12981.then, v12981, [JAM.call(l$$28, null, [c$$42], JAM.policy.p3), j$$26.reject, JAM.call(m$$9, null, [c$$42], JAM.policy.p3)], JAM.policy.p3);
        } else {
          v5981 = g$$22 = g$$22 - 1;
        }
        v5981;
        c$$42 = c$$42 + 1;
        v5982 = c$$42 < d$$44;
      }
      if (!g$$22) {
        JAM.call(j$$26.resolveWith, j$$26, [j$$26, b$$58], JAM.policy.p3);
      }
    } else {
      var v5983 = j$$26 !== a$$87;
      if (v5983) {
        var v18504;
        if (d$$44) {
          v18504 = [a$$87];
        } else {
          v18504 = [];
        }
        JAM.call(j$$26.resolveWith, j$$26, [j$$26, v18504], JAM.policy.p3);
      }
    }
    return k$$12;
  }
  function v698(a$$82) {
    function v697() {
      e$$67 = "rejected";
      return;
    }
    function v696() {
      e$$67 = "resolved";
      return;
    }
    function v695(a$$86) {
      if (a$$86 == null) {
        a$$86 = h$$23;
      } else {
        var b$$57;
        for (b$$57 in h$$23) {
          JAM.set(a$$86, b$$57, h$$23[b$$57], JAM.policy.p2);
        }
      }
      return a$$86;
    }
    function v694(a$$84, b$$55, c$$40) {
      function v693(d$$43) {
        function v692(a$$85, b$$56) {
          function v691() {
            g$$21 = JAM.call(c$$41.apply, c$$41, [this, arguments], JAM.policy.p3);
            var v12988;
            var v22223 = g$$21;
            if (v22223) {
              v22223 = JAM.call(f$$4.isFunction, f$$4, [g$$21.promise], JAM.policy.p3);
            }
            if (v22223) {
              var v18505 = JAM.call(g$$21.promise, g$$21, [], JAM.policy.p3);
              v12988 = JAM.call(v18505.then, v18505, [d$$43.resolve, d$$43.reject, d$$43.notify], JAM.policy.p3);
            } else {
              var v18509 = e$$68 + "With";
              var v22224;
              if (this === i$$98) {
                v22224 = d$$43;
              } else {
                v22224 = this;
              }
              v12988 = JAM.call(d$$43[v18509], d$$43, [v22224, [g$$21]], JAM.policy.p3);
            }
            v12988;
            return;
          }
          var c$$41 = b$$56[0];
          var e$$68 = b$$56[1];
          var g$$21;
          var v5986;
          if (JAM.call(f$$4.isFunction, f$$4, [c$$41], JAM.policy.p3)) {
            v5986 = JAM.call(i$$98[a$$85], i$$98, [v691], JAM.policy.p3);
          } else {
            v5986 = JAM.call(i$$98[a$$85], i$$98, [d$$43[e$$68]], JAM.policy.p3);
          }
          v5986;
          return;
        }
        JAM.call(f$$4.each, f$$4, [{done:[a$$84, "resolve"], fail:[b$$55, "reject"], progress:[c$$40, "notify"]}, v692], JAM.policy.p3);
        return;
      }
      var v5988 = JAM.call(f$$4.Deferred, f$$4, [v693], JAM.policy.p3);
      return JAM.call(v5988.promise, v5988, [], JAM.policy.p3);
    }
    function v690() {
      var v18513 = i$$98.done;
      var v5989 = JAM.call(v18513.apply, v18513, [i$$98, arguments], JAM.policy.p3).fail;
      JAM.call(v5989.apply, v5989, [i$$98, arguments], JAM.policy.p3);
      return this;
    }
    function v689(a$$83, b$$54, c$$39) {
      var v12995 = JAM.call(i$$98.done, i$$98, [a$$83], JAM.policy.p3);
      var v5990 = JAM.call(v12995.fail, v12995, [b$$54], JAM.policy.p3);
      JAM.call(v5990.progress, v5990, [c$$39], JAM.policy.p3);
      return this;
    }
    function v688() {
      return e$$67;
    }
    var b$$53 = JAM.call(f$$4.Callbacks, f$$4, ["once memory"], JAM.policy.p3);
    var c$$38 = JAM.call(f$$4.Callbacks, f$$4, ["once memory"], JAM.policy.p3);
    var d$$42 = JAM.call(f$$4.Callbacks, f$$4, ["memory"], JAM.policy.p3);
    var e$$67 = "pending";
    var g$$20 = {resolve:b$$53, reject:c$$38, notify:d$$42};
    var h$$23 = {done:b$$53.add, fail:c$$38.add, progress:d$$42.add, state:v688, isResolved:b$$53.fired, isRejected:c$$38.fired, then:v689, always:v690, pipe:v694, promise:v695};
    var i$$98 = JAM.call(h$$23.promise, h$$23, [{}], JAM.policy.p3);
    var j$$25;
    for (j$$25 in g$$20) {
      JAM.set(i$$98, j$$25, g$$20[j$$25].fire, JAM.policy.p2);
      JAM.set(i$$98, j$$25 + "With", g$$20[j$$25].fireWith, JAM.policy.p2);
    }
    var v12998 = JAM.call(i$$98.done, i$$98, [v696, c$$38.disable, d$$42.lock], JAM.policy.p3);
    JAM.call(v12998.fail, v12998, [v697, b$$53.disable, d$$42.lock], JAM.policy.p3);
    if (a$$82) {
      JAM.call(a$$82.call, a$$82, [i$$98, i$$98], JAM.policy.p3);
    }
    return i$$98;
  }
  function v687(a$$79) {
    function v686() {
      return!!i$$96;
    }
    function v685() {
      JAM.call(p$$25.fireWith, p$$25, [this, arguments], JAM.policy.p3);
      return this;
    }
    function v684(b$$52, c$$37) {
      if (d$$38) {
        var v13001;
        if (j$$24) {
          var v18517 = a$$79.once;
          if (!v18517) {
            v18517 = JAM.call(d$$38.push, d$$38, [[b$$52, c$$37]], JAM.policy.p3);
          }
          v13001 = v18517;
        } else {
          var v22227 = !a$$79.once;
          if (!v22227) {
            v22227 = !e$$64;
          }
          var v18518 = v22227;
          if (v18518) {
            v18518 = JAM.call(o$$3, null, [b$$52, c$$37], JAM.policy.p3);
          }
          v13001 = v18518;
        }
        v13001;
      }
      return this;
    }
    function v683() {
      return!d$$38;
    }
    function v682() {
      d$$38 = b$$9;
      var v18519 = !e$$64;
      if (!v18519) {
        v18519 = e$$64 === !0;
      }
      var v13002 = v18519;
      if (v13002) {
        JAM.call(p$$25.disable, p$$25, [], JAM.policy.p3);
      }
      return this;
    }
    function v681() {
      return!c$$36;
    }
    function v680() {
      c$$36 = d$$38 = e$$64 = b$$9;
      return this;
    }
    function v679() {
      c$$36 = [];
      return this;
    }
    function v678(a$$81) {
      if (c$$36) {
        var b$$51 = 0;
        var d$$41 = c$$36.length;
        var v5998 = b$$51 < d$$41;
        for (;v5998;) {
          if (a$$81 === c$$36[b$$51]) {
            return!0;
          }
          b$$51 = b$$51 + 1;
          v5998 = b$$51 < d$$41;
        }
      }
      return!1;
    }
    function v677() {
      if (c$$36) {
        var b$$50 = arguments;
        var d$$40 = 0;
        var e$$66 = b$$50.length;
        var v6002 = d$$40 < e$$66;
        for (;v6002;) {
          var f$$19 = 0;
          var v6001 = f$$19 < c$$36.length;
          for (;v6001;) {
            if (b$$50[d$$40] === c$$36[f$$19]) {
              var v18520 = j$$24;
              if (v18520) {
                v18520 = f$$19 <= l$$27;
              }
              var v13007 = v18520;
              if (v13007) {
                l$$27 = l$$27 - 1;
                var v22230 = f$$19 <= m$$8;
                if (v22230) {
                  m$$8 = m$$8 - 1;
                }
              }
              var v13008 = f$$19;
              f$$19 = f$$19 - 1;
              JAM.call(c$$36.splice, c$$36, [v13008, 1], JAM.policy.p3);
              if (a$$79.unique) {
                break;
              }
            }
            f$$19 = f$$19 + 1;
            v6001 = f$$19 < c$$36.length;
          }
          d$$40 = d$$40 + 1;
          v6002 = d$$40 < e$$66;
        }
      }
      return this;
    }
    function v676() {
      if (c$$36) {
        var a$$80 = c$$36.length;
        JAM.call(n$$60, null, [arguments], JAM.policy.p3);
        var v13010;
        if (j$$24) {
          v13010 = l$$27 = c$$36.length;
        } else {
          var v22231 = e$$64;
          if (v22231) {
            v22231 = e$$64 !== !0;
          }
          var v18521 = v22231;
          if (v18521) {
            k$$11 = a$$80;
            v18521 = JAM.call(o$$3, null, [e$$64[0], e$$64[1]], JAM.policy.p3);
          }
          v13010 = v18521;
        }
        v13010;
      }
      return this;
    }
    function o$$3(b$$49, f$$18) {
      f$$18 = f$$18 || [];
      var v28824 = !a$$79.memory;
      if (!v28824) {
        v28824 = [b$$49, f$$18];
      }
      e$$64 = v28824;
      i$$96 = !0;
      j$$24 = !0;
      m$$8 = k$$11 || 0;
      k$$11 = 0;
      l$$27 = c$$36.length;
      var v13011 = c$$36;
      if (v13011) {
        v13011 = m$$8 < l$$27;
      }
      var v6004 = v13011;
      for (;v6004;) {
        var v22232 = c$$36[m$$8];
        var v13012 = JAM.call(v22232.apply, v22232, [b$$49, f$$18], JAM.policy.p3) === !1;
        if (v13012) {
          v13012 = a$$79.stopOnFalse;
        }
        if (v13012) {
          e$$64 = !0;
          break;
        }
        m$$8 = m$$8 + 1;
        var v13013 = c$$36;
        if (v13013) {
          v13013 = m$$8 < l$$27;
        }
        v6004 = v13013;
      }
      j$$24 = !1;
      if (c$$36) {
        var v18524;
        if (a$$79.once) {
          var v22233;
          if (e$$64 === !0) {
            v22233 = JAM.call(p$$25.disable, p$$25, [], JAM.policy.p3);
          } else {
            v22233 = c$$36 = [];
          }
          v18524 = v22233;
        } else {
          var v26189 = d$$38;
          if (v26189) {
            v26189 = d$$38.length;
          }
          var v22234 = v26189;
          if (v22234) {
            e$$64 = JAM.call(d$$38.shift, d$$38, [], JAM.policy.p3);
            v22234 = JAM.call(p$$25.fireWith, p$$25, [e$$64[0], e$$64[1]], JAM.policy.p3);
          }
          v18524 = v22234;
        }
        v18524;
      }
      return;
    }
    function n$$60(b$$48) {
      var d$$39;
      var e$$65;
      var g$$19;
      var h$$22;
      var i$$97;
      d$$39 = 0;
      e$$65 = b$$48.length;
      var v6005 = d$$39 < e$$65;
      for (;v6005;) {
        g$$19 = b$$48[d$$39];
        h$$22 = JAM.call(f$$4.type, f$$4, [g$$19], JAM.policy.p3);
        var v13014;
        if (h$$22 === "array") {
          v13014 = JAM.call(n$$60, null, [g$$19], JAM.policy.p3);
        } else {
          var v22236 = h$$22 === "function";
          if (v22236) {
            var v26190 = !a$$79.unique;
            if (!v26190) {
              v26190 = !JAM.call(p$$25.has, p$$25, [g$$19], JAM.policy.p3);
            }
            v22236 = v26190;
          }
          var v18525 = v22236;
          if (v18525) {
            v18525 = JAM.call(c$$36.push, c$$36, [g$$19], JAM.policy.p3);
          }
          v13014 = v18525;
        }
        v13014;
        d$$39 = d$$39 + 1;
        v6005 = d$$39 < e$$65;
      }
      return;
    }
    var v6006;
    if (a$$79) {
      var v13015 = g[a$$79];
      if (!v13015) {
        v13015 = JAM.call(h$$9, null, [a$$79], JAM.policy.p3);
      }
      v6006 = v13015;
    } else {
      v6006 = {};
    }
    a$$79 = v6006;
    var c$$36 = [];
    var d$$38 = [];
    var e$$64;
    var i$$96;
    var j$$24;
    var k$$11;
    var l$$27;
    var m$$8;
    var p$$25 = {add:v676, remove:v677, has:v678, empty:v679, disable:v680, disabled:v681, lock:v682, locked:v683, fireWith:v684, fire:v685, fired:v686};
    return p$$25;
  }
  function v675() {
    function v674() {
      var v6007 = c$$5.readyState === "complete";
      if (v6007) {
        JAM.call(c$$5.detachEvent, c$$5, ["onreadystatechange", B$$1], JAM.policy.p3);
        JAM.call(e$$61.ready, e$$61, [], JAM.policy.p3);
      }
      return;
    }
    function v673() {
      JAM.call(c$$5.removeEventListener, c$$5, ["DOMContentLoaded", B$$1, !1], JAM.policy.p3);
      JAM.call(e$$61.ready, e$$61, [], JAM.policy.p3);
      return;
    }
    function v672(a$$78, b$$47) {
      var v6008 = I$$1;
      var v6009 = "[object " + b$$47 + "]";
      var v31360 = JAM.call(b$$47.toLowerCase, b$$47, [], JAM.policy.p3);
      JAM.set(v6008, v6009, v31360, JAM.policy.p2);
      return;
    }
    function v671() {
      function v670(d$$37, f$$17) {
        var v18528 = f$$17;
        if (v18528) {
          v18528 = f$$17 instanceof e$$61;
        }
        var v13019 = v18528;
        if (v13019) {
          v13019 = !(f$$17 instanceof a$$77);
        }
        var v6010 = v13019;
        if (v6010) {
          f$$17 = JAM.call(a$$77, null, [f$$17], JAM.policy.p3);
        }
        var v6011 = e$$61.fn.init;
        return JAM.call(v6011.call, v6011, [this, d$$37, f$$17, b$$45], JAM.policy.p3);
      }
      function a$$77(b$$46, c$$35) {
        return JAM.new(a$$77.fn.init, [b$$46, c$$35], JAM.policy.p3);
      }
      JAM.call(e$$61.extend, e$$61, [!0, a$$77, this], JAM.policy.p3);
      a$$77.superclass = this;
      var v27789 = a$$77;
      var v28826 = a$$77;
      var v31361 = JAM.call(this, null, [], JAM.policy.p3);
      v27789.fn = v28826.prototype = v31361;
      a$$77.fn.constructor = a$$77;
      a$$77.sub = this.sub;
      a$$77.fn.init = v670;
      a$$77.fn.init.prototype = a$$77.fn;
      var b$$45 = JAM.call(a$$77, null, [c$$5], JAM.policy.p3);
      return a$$77;
    }
    function v669(a$$76) {
      a$$76 = JAM.call(a$$76.toLowerCase, a$$76, [], JAM.policy.p3);
      var v22237 = JAM.call(r$$3.exec, r$$3, [a$$76], JAM.policy.p3);
      if (!v22237) {
        v22237 = JAM.call(s$$16.exec, s$$16, [a$$76], JAM.policy.p3);
      }
      var v18532 = v22237;
      if (!v18532) {
        v18532 = JAM.call(t$$3.exec, t$$3, [a$$76], JAM.policy.p3);
      }
      var v13023 = v18532;
      if (!v13023) {
        var v18533 = JAM.call(a$$76.indexOf, a$$76, ["compatible"], JAM.policy.p3) < 0;
        if (v18533) {
          v18533 = JAM.call(u$$2.exec, u$$2, [a$$76], JAM.policy.p3);
        }
        v13023 = v18533;
      }
      var v6013 = v13023;
      if (!v6013) {
        v6013 = [];
      }
      var b$$44 = v6013;
      var v13025 = b$$44[1];
      if (!v13025) {
        v13025 = "";
      }
      var v6014 = v13025;
      var v13026 = b$$44[2];
      if (!v13026) {
        v13026 = "0";
      }
      return{browser:v6014, version:v13026};
    }
    function v668() {
      var v6016 = JAM.new(Date, [], JAM.policy.p3);
      return JAM.call(v6016.getTime, v6016, [], JAM.policy.p3);
    }
    function v667(a$$74, c$$33, d$$36, f$$16, g$$18, h$$21, i$$95) {
      function v666(a$$75, b$$43, c$$34) {
        return JAM.call(j$$23.call, j$$23, [JAM.call(e$$61, null, [a$$75], JAM.policy.p3), c$$34], JAM.policy.p3);
      }
      var j$$23;
      var k$$10 = d$$36 == null;
      var l$$26 = 0;
      var m$$7 = a$$74.length;
      var v13027 = d$$36;
      if (v13027) {
        v13027 = typeof d$$36 == "object";
      }
      if (v13027) {
        for (l$$26 in d$$36) {
          JAM.call(e$$61.access, e$$61, [a$$74, c$$33, l$$26, d$$36[l$$26], 1, h$$21, f$$16], JAM.policy.p3);
        }
        g$$18 = 1;
      } else {
        if (f$$16 !== b$$9) {
          var v13028 = i$$95 === b$$9;
          if (v13028) {
            v13028 = JAM.call(e$$61.isFunction, e$$61, [f$$16], JAM.policy.p3);
          }
          j$$23 = v13028;
          if (k$$10) {
            var v18538;
            if (j$$23) {
              j$$23 = c$$33;
              v18538 = c$$33 = v666;
            } else {
              JAM.call(c$$33.call, c$$33, [a$$74, f$$16], JAM.policy.p3);
              v18538 = c$$33 = null;
            }
            v18538;
          }
          if (c$$33) {
            var v6021 = l$$26 < m$$7;
            for (;v6021;) {
              var v6019 = a$$74[l$$26];
              var v13029;
              if (j$$23) {
                v13029 = JAM.call(f$$16.call, f$$16, [a$$74[l$$26], l$$26, JAM.call(c$$33, null, [a$$74[l$$26], d$$36], JAM.policy.p3)], JAM.policy.p3);
              } else {
                v13029 = f$$16;
              }
              JAM.call(c$$33, null, [v6019, d$$36, v13029, i$$95], JAM.policy.p3);
              l$$26 = l$$26 + 1;
              v6021 = l$$26 < m$$7;
            }
          }
          g$$18 = 1;
        }
      }
      var v6024;
      if (g$$18) {
        v6024 = a$$74;
      } else {
        var v13030;
        if (k$$10) {
          v13030 = JAM.call(c$$33.call, c$$33, [a$$74], JAM.policy.p3);
        } else {
          var v18541;
          if (m$$7) {
            v18541 = JAM.call(c$$33, null, [a$$74[0], d$$36], JAM.policy.p3);
          } else {
            v18541 = h$$21;
          }
          v13030 = v18541;
        }
        v6024 = v13030;
      }
      return v6024;
    }
    function v665(a$$73, c$$32) {
      function g$$17() {
        return JAM.call(a$$73.apply, a$$73, [c$$32, JAM.call(f$$15.concat, f$$15, [JAM.call(F$$1.call, F$$1, [arguments], JAM.policy.p3)], JAM.policy.p3)], JAM.policy.p3);
      }
      if (typeof c$$32 == "string") {
        var d$$35 = a$$73[c$$32];
        c$$32 = a$$73;
        a$$73 = d$$35;
      }
      if (!JAM.call(e$$61.isFunction, e$$61, [a$$73], JAM.policy.p3)) {
        return b$$9;
      }
      var f$$15 = JAM.call(F$$1.call, F$$1, [arguments, 2], JAM.policy.p3);
      var v13034 = a$$73.guid;
      if (!v13034) {
        v13034 = g$$17.guid;
      }
      var v6028 = v13034;
      if (!v6028) {
        v6028 = e$$61.guid;
        e$$61.guid = e$$61.guid + 1;
      }
      g$$17.guid = a$$73.guid = v6028;
      return g$$17;
    }
    function v664(a$$72, c$$31, d$$34) {
      var f$$14;
      var g$$16;
      var h$$20 = [];
      var i$$94 = 0;
      var j$$22 = a$$72.length;
      var v6029 = a$$72 instanceof e$$61;
      if (!v6029) {
        var v18544 = j$$22 !== b$$9;
        if (v18544) {
          v18544 = typeof j$$22 == "number";
        }
        var v13036 = v18544;
        if (v13036) {
          var v27790 = j$$22 > 0;
          if (v27790) {
            v27790 = a$$72[0];
          }
          var v26193 = v27790;
          if (v26193) {
            v26193 = a$$72[j$$22 - 1];
          }
          var v22243 = v26193;
          if (!v22243) {
            v22243 = j$$22 === 0;
          }
          var v18545 = v22243;
          if (!v18545) {
            v18545 = JAM.call(e$$61.isArray, e$$61, [a$$72], JAM.policy.p3);
          }
          v13036 = v18545;
        }
        v6029 = v13036;
      }
      var k$$9 = v6029;
      if (k$$9) {
        var v6030 = i$$94 < j$$22;
        for (;v6030;) {
          f$$14 = JAM.call(c$$31, null, [a$$72[i$$94], i$$94, d$$34], JAM.policy.p3);
          var v13039 = f$$14 != null;
          if (v13039) {
            var v18546 = h$$20.length;
            introspect(JAM.policy.p2) {
              h$$20[v18546] = f$$14;
            }
          }
          i$$94 = i$$94 + 1;
          v6030 = i$$94 < j$$22;
        }
      } else {
        for (g$$16 in a$$72) {
          f$$14 = JAM.call(c$$31, null, [a$$72[g$$16], g$$16, d$$34], JAM.policy.p3);
          var v13041 = f$$14 != null;
          if (v13041) {
            var v18547 = h$$20.length;
            introspect(JAM.policy.p2) {
              h$$20[v18547] = f$$14;
            }
          }
        }
      }
      var v6031 = h$$20.concat;
      return JAM.call(v6031.apply, v6031, [[], h$$20], JAM.policy.p3);
    }
    function v663(a$$71, b$$42, c$$30) {
      var d$$33 = [];
      var e$$63;
      c$$30 = !!c$$30;
      var f$$13 = 0;
      var g$$15 = a$$71.length;
      var v6033 = f$$13 < g$$15;
      for (;v6033;) {
        e$$63 = !!JAM.call(b$$42, null, [a$$71[f$$13], f$$13], JAM.policy.p3);
        var v13043 = c$$30 !== e$$63;
        if (v13043) {
          JAM.call(d$$33.push, d$$33, [a$$71[f$$13]], JAM.policy.p3);
        }
        f$$13 = f$$13 + 1;
        v6033 = f$$13 < g$$15;
      }
      return d$$33;
    }
    function v662(a$$70, c$$29) {
      var d$$32 = a$$70.length;
      var e$$62 = 0;
      if (typeof c$$29.length == "number") {
        var f$$12 = c$$29.length;
        var v6035 = e$$62 < f$$12;
        for (;v6035;) {
          var v6034 = d$$32;
          d$$32 = d$$32 + 1;
          JAM.set(a$$70, v6034, c$$29[e$$62], JAM.policy.p2);
          e$$62 = e$$62 + 1;
          v6035 = e$$62 < f$$12;
        }
      } else {
        var v6037 = c$$29[e$$62] !== b$$9;
        for (;v6037;) {
          var v6036 = d$$32;
          d$$32 = d$$32 + 1;
          var v13046 = e$$62;
          e$$62 = e$$62 + 1;
          JAM.set(a$$70, v6036, c$$29[v13046], JAM.policy.p2);
          v6037 = c$$29[e$$62] !== b$$9;
        }
      }
      a$$70.length = d$$32;
      return a$$70;
    }
    function v661(a$$69, b$$41, c$$28) {
      var d$$31;
      if (b$$41) {
        if (H$$1) {
          return JAM.call(H$$1.call, H$$1, [b$$41, a$$69, c$$28], JAM.policy.p3);
        }
        d$$31 = b$$41.length;
        var v13048;
        if (c$$28) {
          var v18551;
          if (c$$28 < 0) {
            v18551 = JAM.call(Math.max, Math, [0, d$$31 + c$$28], JAM.policy.p3);
          } else {
            v18551 = c$$28;
          }
          v13048 = v18551;
        } else {
          v13048 = 0;
        }
        c$$28 = v13048;
        var v6040 = c$$28 < d$$31;
        for (;v6040;) {
          var v13049 = c$$28 in b$$41;
          if (v13049) {
            v13049 = b$$41[c$$28] === a$$69;
          }
          if (v13049) {
            return c$$28;
          }
          c$$28 = c$$28 + 1;
          v6040 = c$$28 < d$$31;
        }
      }
      return-1;
    }
    function v660(a$$68, b$$40) {
      var c$$27 = b$$40 || [];
      if (a$$68 != null) {
        var d$$30 = JAM.call(e$$61.type, e$$61, [a$$68], JAM.policy.p3);
        var v6041;
        var v27792 = a$$68.length == null;
        if (!v27792) {
          v27792 = d$$30 === "string";
        }
        var v26195 = v27792;
        if (!v26195) {
          v26195 = d$$30 === "function";
        }
        var v22248 = v26195;
        if (!v22248) {
          v22248 = d$$30 === "regexp";
        }
        var v18553 = v22248;
        if (!v18553) {
          v18553 = JAM.call(e$$61.isWindow, e$$61, [a$$68], JAM.policy.p3);
        }
        if (v18553) {
          v6041 = JAM.call(E$$1.call, E$$1, [c$$27, a$$68], JAM.policy.p3);
        } else {
          v6041 = JAM.call(e$$61.merge, e$$61, [c$$27, a$$68], JAM.policy.p3);
        }
        v6041;
      }
      return c$$27;
    }
    function v659(a$$67) {
      var v6043;
      if (a$$67 == null) {
        v6043 = "";
      } else {
        var v18554 = a$$67 + "";
        var v13051 = JAM.call(v18554.replace, v18554, [k$$6, ""], JAM.policy.p3);
        v6043 = JAM.call(v13051.replace, v13051, [l$$24, ""], JAM.policy.p3);
      }
      return v6043;
    }
    function v658(a$$66) {
      var v6044;
      if (a$$66 == null) {
        v6044 = "";
      } else {
        v6044 = JAM.call(G$$1.call, G$$1, [a$$66], JAM.policy.p3);
      }
      return v6044;
    }
    function v657(a$$65, c$$26, d$$29) {
      var f$$11;
      var g$$14 = 0;
      var h$$19 = a$$65.length;
      var v6045 = h$$19 === b$$9;
      if (!v6045) {
        v6045 = JAM.call(e$$61.isFunction, e$$61, [a$$65], JAM.policy.p3);
      }
      var i$$93 = v6045;
      if (d$$29) {
        if (i$$93) {
          for (f$$11 in a$$65) {
            if (JAM.call(c$$26.apply, c$$26, [a$$65[f$$11], d$$29], JAM.policy.p3) === !1) {
              break;
            }
          }
        } else {
          var v6048 = g$$14 < h$$19;
          for (;v6048;) {
            var v22250 = g$$14;
            g$$14 = g$$14 + 1;
            if (JAM.call(c$$26.apply, c$$26, [a$$65[v22250], d$$29], JAM.policy.p3) === !1) {
              break;
            }
            v6048 = g$$14 < h$$19;
          }
        }
      } else {
        if (i$$93) {
          for (f$$11 in a$$65) {
            if (JAM.call(c$$26.call, c$$26, [a$$65[f$$11], f$$11, a$$65[f$$11]], JAM.policy.p3) === !1) {
              break;
            }
          }
        } else {
          var v6051 = g$$14 < h$$19;
          for (;v6051;) {
            var v18559 = a$$65[g$$14];
            var v22251 = g$$14;
            g$$14 = g$$14 + 1;
            if (JAM.call(c$$26.call, c$$26, [v18559, g$$14, a$$65[v22251]], JAM.policy.p3) === !1) {
              break;
            }
            v6051 = g$$14 < h$$19;
          }
        }
      }
      return a$$65;
    }
    function v656(a$$64, b$$39) {
      var v6052 = a$$64.nodeName;
      if (v6052) {
        var v18561 = a$$64.nodeName;
        v6052 = JAM.call(v18561.toUpperCase, v18561, [], JAM.policy.p3) === JAM.call(b$$39.toUpperCase, b$$39, [], JAM.policy.p3);
      }
      return v6052;
    }
    function v655(a$$63) {
      var v6053 = JAM.call(a$$63.replace, a$$63, [w$$12, "ms-"], JAM.policy.p3);
      return JAM.call(v6053.replace, v6053, [v$$5, x$$68], JAM.policy.p3);
    }
    function v654(b$$37) {
      function v653(b$$38) {
        var v6054 = a$$13.eval;
        JAM.call(v6054.call, v6054, [a$$13, b$$38], JAM.policy.p3);
        return;
      }
      var v13065 = b$$37;
      if (v13065) {
        v13065 = JAM.call(j$$19.test, j$$19, [b$$37], JAM.policy.p3);
      }
      var v6055 = v13065;
      if (v6055) {
        var v18562 = a$$13.execScript;
        if (!v18562) {
          v18562 = v653;
        }
        JAM.call(v18562, null, [b$$37], JAM.policy.p3);
      }
      return;
    }
    function v652() {
      return;
    }
    function v651(c$$25) {
      var v13067 = typeof c$$25 != "string";
      if (!v13067) {
        v13067 = !c$$25;
      }
      if (v13067) {
        return null;
      }
      var d$$28;
      var f$$10;
      try {
        var v6057;
        if (a$$13.DOMParser) {
          f$$10 = JAM.new(DOMParser, [], JAM.policy.p3);
          v6057 = d$$28 = JAM.call(f$$10.parseFromString, f$$10, [c$$25, "text/xml"], JAM.policy.p3);
        } else {
          d$$28 = JAM.new(ActiveXObject, ["Microsoft.XMLDOM"], JAM.policy.p3);
          d$$28.async = "false";
          v6057 = JAM.call(d$$28.loadXML, d$$28, [c$$25], JAM.policy.p3);
        }
        v6057;
      } catch (g$$13) {
        d$$28 = b$$9;
      }
      var v18565 = !d$$28;
      if (!v18565) {
        v18565 = !d$$28.documentElement;
      }
      var v13069 = v18565;
      if (!v13069) {
        v13069 = JAM.call(d$$28.getElementsByTagName, d$$28, ["parsererror"], JAM.policy.p3).length;
      }
      var v6058 = v13069;
      if (v6058) {
        JAM.call(e$$61.error, e$$61, ["Invalid XML: " + c$$25], JAM.policy.p3);
      }
      return d$$28;
    }
    function v650(b$$36) {
      var v13071 = typeof b$$36 != "string";
      if (!v13071) {
        v13071 = !b$$36;
      }
      if (v13071) {
        return null;
      }
      b$$36 = JAM.call(e$$61.trim, e$$61, [b$$36], JAM.policy.p3);
      var v13072 = a$$13.JSON;
      if (v13072) {
        v13072 = a$$13.JSON.parse;
      }
      if (v13072) {
        var v6060 = a$$13.JSON;
        return JAM.call(v6060.parse, v6060, [b$$36], JAM.policy.p3);
      }
      var v22255 = JAM.call(b$$36.replace, b$$36, [o$$2, "@"], JAM.policy.p3);
      var v18571 = JAM.call(v22255.replace, v22255, [p$$24, "]"], JAM.policy.p3);
      if (JAM.call(n$$59.test, n$$59, [JAM.call(v18571.replace, v18571, [q$$1, ""], JAM.policy.p3)], JAM.policy.p3)) {
        return JAM.call(JAM.new(Function, ["return " + b$$36], JAM.policy.p3), null, [], JAM.policy.p3);
      }
      JAM.call(e$$61.error, e$$61, ["Invalid JSON: " + b$$36], JAM.policy.p3);
      return;
    }
    function v649(a$$62) {
      throw JAM.new(Error, [a$$62], JAM.policy.p3);
    }
    function v648(a$$61) {
      var b$$35;
      for (b$$35 in a$$61) {
        return!1;
      }
      return!0;
    }
    function v647(a$$60) {
      var v22256 = !a$$60;
      if (!v22256) {
        v22256 = JAM.call(e$$61.type, e$$61, [a$$60], JAM.policy.p3) !== "object";
      }
      var v18572 = v22256;
      if (!v18572) {
        v18572 = a$$60.nodeType;
      }
      var v13075 = v18572;
      if (!v13075) {
        v13075 = JAM.call(e$$61.isWindow, e$$61, [a$$60], JAM.policy.p3);
      }
      if (v13075) {
        return!1;
      }
      try {
        var v18574 = a$$60.constructor;
        if (v18574) {
          v18574 = !JAM.call(D$$1.call, D$$1, [a$$60, "constructor"], JAM.policy.p3);
        }
        var v13076 = v18574;
        if (v13076) {
          v13076 = !JAM.call(D$$1.call, D$$1, [a$$60.constructor.prototype, "isPrototypeOf"], JAM.policy.p3);
        }
        if (v13076) {
          return!1;
        }
      } catch (c$$24) {
        return!1;
      }
      var d$$27;
      for (d$$27 in a$$60) {
      }
      var v6067 = d$$27 === b$$9;
      if (!v6067) {
        v6067 = JAM.call(D$$1.call, D$$1, [a$$60, d$$27], JAM.policy.p3);
      }
      return v6067;
    }
    function v646(a$$59) {
      var v6068;
      if (a$$59 == null) {
        v6068 = JAM.call(String, null, [a$$59], JAM.policy.p3);
      } else {
        var v13078 = I$$1[JAM.call(C$$1.call, C$$1, [a$$59], JAM.policy.p3)];
        if (!v13078) {
          v13078 = "object";
        }
        v6068 = v13078;
      }
      return v6068;
    }
    function v645(a$$58) {
      var v6069 = !JAM.call(isNaN, null, [JAM.call(parseFloat, null, [a$$58], JAM.policy.p3)], JAM.policy.p3);
      if (v6069) {
        v6069 = JAM.call(isFinite, null, [a$$58], JAM.policy.p3);
      }
      return v6069;
    }
    function v644(a$$57) {
      var v6070 = a$$57 != null;
      if (v6070) {
        v6070 = a$$57 == a$$57.window;
      }
      return v6070;
    }
    function v643(a$$56) {
      return JAM.call(e$$61.type, e$$61, [a$$56], JAM.policy.p3) === "array";
    }
    function v642(a$$55) {
      return JAM.call(e$$61.type, e$$61, [a$$55], JAM.policy.p3) === "function";
    }
    function v641() {
      if (!A$$1) {
        A$$1 = JAM.call(e$$61.Callbacks, e$$61, ["once memory"], JAM.policy.p3);
        if (c$$5.readyState === "complete") {
          return JAM.call(setTimeout, null, [e$$61.ready, 1], JAM.policy.p3);
        }
        if (c$$5.addEventListener) {
          JAM.call(c$$5.addEventListener, c$$5, ["DOMContentLoaded", B$$1, !1], JAM.policy.p3);
          JAM.call(a$$13.addEventListener, a$$13, ["load", e$$61.ready, !1], JAM.policy.p3);
        } else {
          if (c$$5.attachEvent) {
            JAM.call(c$$5.attachEvent, c$$5, ["onreadystatechange", B$$1], JAM.policy.p3);
            JAM.call(a$$13.attachEvent, a$$13, ["onload", e$$61.ready], JAM.policy.p3);
            var b$$34 = !1;
            try {
              b$$34 = a$$13.frameElement == null;
            } catch (d$$26) {
            }
            var v13087 = c$$5.documentElement.doScroll;
            if (v13087) {
              v13087 = b$$34;
            }
            var v6076 = v13087;
            if (v6076) {
              JAM.call(J$$1, null, [], JAM.policy.p3);
            }
          }
        }
      }
      return;
    }
    function v640(a$$54) {
      var v18581 = a$$54 === !0;
      if (v18581) {
        v18581 = !(e$$61.readyWait = e$$61.readyWait - 1);
      }
      var v13088 = v18581;
      if (!v13088) {
        var v18582 = a$$54 !== !0;
        if (v18582) {
          v18582 = !e$$61.isReady;
        }
        v13088 = v18582;
      }
      if (v13088) {
        if (!c$$5.body) {
          return JAM.call(setTimeout, null, [e$$61.ready, 1], JAM.policy.p3);
        }
        e$$61.isReady = !0;
        var v13090 = a$$54 !== !0;
        if (v13090) {
          v13090 = (e$$61.readyWait = e$$61.readyWait - 1) > 0;
        }
        if (v13090) {
          return;
        }
        JAM.call(A$$1.fireWith, A$$1, [c$$5, [e$$61]], JAM.policy.p3);
        var v13092 = e$$61.fn.trigger;
        if (v13092) {
          var v22264 = JAM.call(e$$61, null, [c$$5], JAM.policy.p3);
          var v18587 = JAM.call(v22264.trigger, v22264, ["ready"], JAM.policy.p3);
          JAM.call(v18587.off, v18587, ["ready"], JAM.policy.p3);
        }
      }
      return;
    }
    function v639(a$$53) {
      var v6084;
      if (a$$53) {
        v6084 = e$$61.readyWait;
        e$$61.readyWait = e$$61.readyWait + 1;
      } else {
        v6084 = JAM.call(e$$61.ready, e$$61, [!0], JAM.policy.p3);
      }
      v6084;
      return;
    }
    function v638(b$$33) {
      var v13094 = a$$13.$ === e$$61;
      if (v13094) {
        a$$13.$ = g$$10;
      }
      var v18590 = b$$33;
      if (v18590) {
        v18590 = a$$13.jQuery === e$$61;
      }
      var v13095 = v18590;
      if (v13095) {
        a$$13.jQuery = f$$7;
      }
      return e$$61;
    }
    function v637() {
      var a$$52;
      var c$$23;
      var d$$25;
      var f$$9;
      var g$$12;
      var h$$18;
      var v6085 = arguments[0];
      if (!v6085) {
        v6085 = {};
      }
      var i$$92 = v6085;
      var j$$21 = 1;
      var k$$8 = arguments.length;
      var l$$25 = !1;
      var v18591 = typeof i$$92 == "boolean";
      if (v18591) {
        l$$25 = i$$92;
        var v27795 = arguments[1];
        if (!v27795) {
          v27795 = {};
        }
        i$$92 = v27795;
        j$$21 = 2;
      }
      var v22267 = typeof i$$92 != "object";
      if (v22267) {
        v22267 = !JAM.call(e$$61.isFunction, e$$61, [i$$92], JAM.policy.p3);
      }
      var v18592 = v22267;
      if (v18592) {
        i$$92 = {};
      }
      var v13097 = k$$8 === j$$21;
      if (v13097) {
        i$$92 = this;
        j$$21 = j$$21 - 1;
      }
      var v6089 = j$$21 < k$$8;
      for (;v6089;) {
        if ((a$$52 = arguments[j$$21]) != null) {
          for (c$$23 in a$$52) {
            d$$25 = i$$92[c$$23];
            f$$9 = a$$52[c$$23];
            if (i$$92 === f$$9) {
              continue;
            }
            var v6087;
            var v18593 = l$$25 && f$$9;
            if (v18593) {
              var v22268 = JAM.call(e$$61.isPlainObject, e$$61, [f$$9], JAM.policy.p3);
              if (!v22268) {
                v22268 = g$$12 = JAM.call(e$$61.isArray, e$$61, [f$$9], JAM.policy.p3);
              }
              v18593 = v22268;
            }
            if (v18593) {
              var v18594;
              if (g$$12) {
                g$$12 = !1;
                var v26204;
                var v28830 = d$$25;
                if (v28830) {
                  v28830 = JAM.call(e$$61.isArray, e$$61, [d$$25], JAM.policy.p3);
                }
                if (v28830) {
                  v26204 = d$$25;
                } else {
                  v26204 = [];
                }
                v18594 = h$$18 = v26204;
              } else {
                var v22269;
                var v27797 = d$$25;
                if (v27797) {
                  v27797 = JAM.call(e$$61.isPlainObject, e$$61, [d$$25], JAM.policy.p3);
                }
                if (v27797) {
                  v22269 = d$$25;
                } else {
                  v22269 = {};
                }
                v18594 = h$$18 = v22269;
              }
              v18594;
              var v18595 = i$$92;
              var v18596 = c$$23;
              var v31362 = JAM.call(e$$61.extend, e$$61, [l$$25, h$$18, f$$9], JAM.policy.p3);
              v6087 = JAM.set(v18595, v18596, v31362, JAM.policy.p2);
            } else {
              var v13099 = f$$9 !== b$$9;
              if (v13099) {
                v13099 = JAM.set(i$$92, c$$23, f$$9, JAM.policy.p2);
              }
              v6087 = v13099;
            }
            v6087;
          }
        }
        j$$21 = j$$21 + 1;
        v6089 = j$$21 < k$$8;
      }
      return i$$92;
    }
    function v636() {
      var v6090 = this.prevObject;
      if (!v6090) {
        v6090 = JAM.call(this.constructor, this, [null], JAM.policy.p3);
      }
      return v6090;
    }
    function v635(a$$51) {
      function v634(b$$32, c$$22) {
        return JAM.call(a$$51.call, a$$51, [b$$32, c$$22, b$$32], JAM.policy.p3);
      }
      return JAM.call(this.pushStack, this, [JAM.call(e$$61.map, e$$61, [this, v634], JAM.policy.p3)], JAM.policy.p3);
    }
    function v633() {
      var v6092 = JAM.call(F$$1.apply, F$$1, [this, arguments], JAM.policy.p3);
      var v13102 = JAM.call(F$$1.call, F$$1, [arguments], JAM.policy.p3);
      return JAM.call(this.pushStack, this, [v6092, "slice", JAM.call(v13102.join, v13102, [","], JAM.policy.p3)], JAM.policy.p3);
    }
    function v632() {
      return JAM.call(this.eq, this, [-1], JAM.policy.p3);
    }
    function v631() {
      return JAM.call(this.eq, this, [0], JAM.policy.p3);
    }
    function v630(a$$50) {
      a$$50 = +a$$50;
      var v6094;
      if (a$$50 === -1) {
        v6094 = JAM.call(this.slice, this, [a$$50], JAM.policy.p3);
      } else {
        v6094 = JAM.call(this.slice, this, [a$$50, a$$50 + 1], JAM.policy.p3);
      }
      return v6094;
    }
    function v629(a$$49) {
      JAM.call(e$$61.bindReady, e$$61, [], JAM.policy.p3);
      JAM.call(A$$1.add, A$$1, [a$$49], JAM.policy.p3);
      return this;
    }
    function v628(a$$48, b$$31) {
      return JAM.call(e$$61.each, e$$61, [this, a$$48, b$$31], JAM.policy.p3);
    }
    function v627(a$$47, b$$30, c$$21) {
      var d$$24 = JAM.call(this.constructor, this, [], JAM.policy.p3);
      var v22270;
      if (JAM.call(e$$61.isArray, e$$61, [a$$47], JAM.policy.p3)) {
        v22270 = JAM.call(E$$1.apply, E$$1, [d$$24, a$$47], JAM.policy.p3);
      } else {
        v22270 = JAM.call(e$$61.merge, e$$61, [d$$24, a$$47], JAM.policy.p3);
      }
      v22270;
      d$$24.prevObject = this;
      d$$24.context = this.context;
      var v13105;
      if (b$$30 === "find") {
        var v22271 = this.selector;
        var v26207;
        if (this.selector) {
          v26207 = " ";
        } else {
          v26207 = "";
        }
        v13105 = d$$24.selector = v22271 + v26207 + c$$21;
      } else {
        var v18598 = b$$30;
        if (v18598) {
          v18598 = d$$24.selector = this.selector + "." + b$$30 + "(" + c$$21 + ")";
        }
        v13105 = v18598;
      }
      v13105;
      return d$$24;
    }
    function v626(a$$46) {
      var v6095;
      if (a$$46 == null) {
        v6095 = JAM.call(this.toArray, this, [], JAM.policy.p3);
      } else {
        var v13106;
        if (a$$46 < 0) {
          v13106 = this[this.length + a$$46];
        } else {
          v13106 = this[a$$46];
        }
        v6095 = v13106;
      }
      return v6095;
    }
    function v625() {
      return JAM.call(F$$1.call, F$$1, [this, 0], JAM.policy.p3);
    }
    function v624() {
      return this.length;
    }
    function v623(a$$45, d$$23, f$$8) {
      var g$$11;
      var h$$17;
      var j$$20;
      var k$$7;
      if (!a$$45) {
        return this;
      }
      if (a$$45.nodeType) {
        introspect(JAM.policy.p2) {
          this.context = this[0] = a$$45;
        }
        this.length = 1;
        return this;
      }
      var v18602 = a$$45 === "body";
      if (v18602) {
        v18602 = !d$$23;
      }
      var v13108 = v18602;
      if (v13108) {
        v13108 = c$$5.body;
      }
      if (v13108) {
        this.context = c$$5;
        introspect(JAM.policy.p2) {
          this[0] = c$$5.body;
        }
        this.selector = a$$45;
        this.length = 1;
        return this;
      }
      if (typeof a$$45 == "string") {
        var v6099;
        var v22275 = JAM.call(a$$45.charAt, a$$45, [0], JAM.policy.p3) !== "<";
        if (!v22275) {
          v22275 = JAM.call(a$$45.charAt, a$$45, [a$$45.length - 1], JAM.policy.p3) !== ">";
        }
        var v18603 = v22275;
        if (!v18603) {
          v18603 = a$$45.length < 3;
        }
        if (v18603) {
          v6099 = g$$11 = JAM.call(i$$91.exec, i$$91, [a$$45], JAM.policy.p3);
        } else {
          v6099 = g$$11 = [null, a$$45, null];
        }
        v6099;
        var v13111 = g$$11;
        if (v13111) {
          var v18604 = g$$11[1];
          if (!v18604) {
            v18604 = !d$$23;
          }
          v13111 = v18604;
        }
        if (v13111) {
          if (g$$11[1]) {
            var v22279;
            if (d$$23 instanceof e$$61) {
              v22279 = d$$23[0];
            } else {
              v22279 = d$$23;
            }
            d$$23 = v22279;
            var v22280;
            if (d$$23) {
              var v26213 = d$$23.ownerDocument;
              if (!v26213) {
                v26213 = d$$23;
              }
              v22280 = v26213;
            } else {
              v22280 = c$$5;
            }
            k$$7 = v22280;
            j$$20 = JAM.call(m$$6.exec, m$$6, [a$$45], JAM.policy.p3);
            var v13112;
            if (j$$20) {
              var v18605;
              if (JAM.call(e$$61.isPlainObject, e$$61, [d$$23], JAM.policy.p3)) {
                a$$45 = [JAM.call(c$$5.createElement, c$$5, [j$$20[1]], JAM.policy.p3)];
                var v26215 = e$$61.fn.attr;
                v18605 = JAM.call(v26215.call, v26215, [a$$45, d$$23, !0], JAM.policy.p3);
              } else {
                v18605 = a$$45 = [JAM.call(k$$7.createElement, k$$7, [j$$20[1]], JAM.policy.p3)];
              }
              v13112 = v18605;
            } else {
              j$$20 = JAM.call(e$$61.buildFragment, e$$61, [[g$$11[1]], [k$$7]], JAM.policy.p3);
              var v26219;
              if (j$$20.cacheable) {
                v26219 = JAM.call(e$$61.clone, e$$61, [j$$20.fragment], JAM.policy.p3);
              } else {
                v26219 = j$$20.fragment;
              }
              v13112 = a$$45 = v26219.childNodes;
            }
            v13112;
            return JAM.call(e$$61.merge, e$$61, [this, a$$45], JAM.policy.p3);
          }
          h$$17 = JAM.call(c$$5.getElementById, c$$5, [g$$11[2]], JAM.policy.p3);
          var v13113 = h$$17;
          if (v13113) {
            v13113 = h$$17.parentNode;
          }
          if (v13113) {
            if (h$$17.id !== g$$11[2]) {
              return JAM.call(f$$8.find, f$$8, [a$$45], JAM.policy.p3);
            }
            this.length = 1;
            introspect(JAM.policy.p2) {
              this[0] = h$$17;
            }
          }
          this.context = c$$5;
          this.selector = a$$45;
          return this;
        }
        var v6105;
        var v18606 = !d$$23;
        if (!v18606) {
          v18606 = d$$23.jquery;
        }
        if (v18606) {
          var v13116 = d$$23 || f$$8;
          v6105 = JAM.call(v13116.find, v13116, [a$$45], JAM.policy.p3);
        } else {
          var v13117 = JAM.call(this.constructor, this, [d$$23], JAM.policy.p3);
          v6105 = JAM.call(v13117.find, v13117, [a$$45], JAM.policy.p3);
        }
        return v6105;
      }
      if (JAM.call(e$$61.isFunction, e$$61, [a$$45], JAM.policy.p3)) {
        return JAM.call(f$$8.ready, f$$8, [a$$45], JAM.policy.p3);
      }
      var v6108 = a$$45.selector !== b$$9;
      if (v6108) {
        this.selector = a$$45.selector;
        this.context = a$$45.context;
      }
      return JAM.call(e$$61.makeArray, e$$61, [a$$45, this], JAM.policy.p3);
    }
    function x$$68(a$$44, b$$29) {
      var v6109 = b$$29 + "";
      return JAM.call(v6109.toUpperCase, v6109, [], JAM.policy.p3);
    }
    function e$$61(a$$43, b$$28) {
      return JAM.new(e$$61.fn.init, [a$$43, b$$28, h$$16], JAM.policy.p3);
    }
    function J$$1() {
      if (!e$$61.isReady) {
        try {
          var v6111 = c$$5.documentElement;
          JAM.call(v6111.doScroll, v6111, ["left"], JAM.policy.p3);
        } catch (a$$42) {
          JAM.call(setTimeout, null, [J$$1, 1], JAM.policy.p3);
          return;
        }
        JAM.call(e$$61.ready, e$$61, [], JAM.policy.p3);
      }
      return;
    }
    var f$$7 = a$$13.jQuery;
    var g$$10 = a$$13.$;
    var h$$16;
    var i$$91 = /^(?:[^#<]*(<[\w\W]+>)[^>]*$|#([\w\-]*)$)/;
    var j$$19 = /\S/;
    var k$$6 = /^\s+/;
    var l$$24 = /\s+$/;
    var m$$6 = /^<(\w+)\s*\/?>(?:<\/\1>)?$/;
    var n$$59 = /^[\],:{}\s]*$/;
    var o$$2 = /\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g;
    var p$$24 = /"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g;
    var q$$1 = /(?:^|:|,)(?:\s*\[)+/g;
    var r$$3 = /(webkit)[ \/]([\w.]+)/;
    var s$$16 = /(opera)(?:.*version)?[ \/]([\w.]+)/;
    var t$$3 = /(msie) ([\w.]+)/;
    var u$$2 = /(mozilla)(?:.*? rv:([\w.]+))?/;
    var v$$5 = /-([a-z]|[0-9])/ig;
    var w$$12 = /^-ms-/;
    var y$$50 = d$$6.userAgent;
    var z$$3;
    var A$$1;
    var B$$1;
    var C$$1 = Object.prototype.toString;
    var D$$1 = Object.prototype.hasOwnProperty;
    var E$$1 = Array.prototype.push;
    var F$$1 = Array.prototype.slice;
    var G$$1 = String.prototype.trim;
    var H$$1 = Array.prototype.indexOf;
    var I$$1 = {};
    e$$61.fn = e$$61.prototype = {constructor:e$$61, init:v623, selector:"", jquery:"1.7.2", length:0, size:v624, toArray:v625, get:v626, pushStack:v627, each:v628, ready:v629, eq:v630, first:v631, last:v632, slice:v633, map:v635, end:v636, push:E$$1, sort:[].sort, splice:[].splice};
    e$$61.fn.init.prototype = e$$61.fn;
    e$$61.extend = e$$61.fn.extend = v637;
    var v30182 = !1;
    var v30420 = Array.isArray;
    if (!v30420) {
      v30420 = v643;
    }
    var v30183 = v30420;
    var v30421;
    if (G$$1) {
      v30421 = v658;
    } else {
      v30421 = v659;
    }
    JAM.call(e$$61.extend, e$$61, [{noConflict:v638, isReady:v30182, readyWait:1, holdReady:v639, ready:v640, bindReady:v641, isFunction:v642, isArray:v30183, isWindow:v644, isNumeric:v645, type:v646, isPlainObject:v647, isEmptyObject:v648, error:v649, parseJSON:v650, parseXML:v651, noop:v652, globalEval:v654, camelCase:v655, nodeName:v656, each:v657, trim:v30421, makeArray:v660, inArray:v661, merge:v662, grep:v663, map:v664, guid:1, proxy:v665, access:v667, now:v668, uaMatch:v669, sub:v671, browser:{}}], 
    JAM.policy.p3);
    JAM.call(e$$61.each, e$$61, [JAM.call("Boolean Number String Function Array Date RegExp Object".split, "Boolean Number String Function Array Date RegExp Object", [" "], JAM.policy.p3), v672], JAM.policy.p3);
    z$$3 = JAM.call(e$$61.uaMatch, e$$61, [y$$50], JAM.policy.p3);
    var v27806 = z$$3.browser;
    if (v27806) {
      JAM.set(e$$61.browser, z$$3.browser, !0, JAM.policy.p2);
      e$$61.browser.version = z$$3.version;
    }
    var v26220 = e$$61.browser.webkit;
    if (v26220) {
      e$$61.browser.safari = !0;
    }
    var v22287 = JAM.call(j$$19.test, j$$19, ["\u00a0"], JAM.policy.p3);
    if (v22287) {
      k$$6 = /^[\s\xA0]+/;
      l$$24 = /[\s\xA0]+$/;
    }
    h$$16 = JAM.call(e$$61, null, [c$$5], JAM.policy.p3);
    var v13122;
    if (c$$5.addEventListener) {
      v13122 = B$$1 = v673;
    } else {
      var v18607 = c$$5.attachEvent;
      if (v18607) {
        v18607 = B$$1 = v674;
      }
      v13122 = v18607;
    }
    v13122;
    return e$$61;
  }
  function I(a$$142) {
    var v6119;
    if (f$$4.event.special.hover) {
      v6119 = a$$142;
    } else {
      v6119 = JAM.call(a$$142.replace, a$$142, [B, "mouseenter$1 mouseleave$1"], JAM.policy.p3);
    }
    return v6119;
  }
  function G(a$$140) {
    var b$$93 = JAM.call(F.exec, F, [a$$140], JAM.policy.p3);
    if (b$$93) {
      var v18610 = b$$93;
      var v26221 = b$$93[1];
      if (!v26221) {
        v26221 = "";
      }
      var v22289 = v26221;
      var v31363 = JAM.call(v22289.toLowerCase, v22289, [], JAM.policy.p3);
      introspect(JAM.policy.p2) {
        v18610[1] = v31363;
      }
      var v18611 = b$$93;
      var v22290 = b$$93[3];
      if (v22290) {
        v22290 = JAM.new(RegExp, ["(?:^|\\s)" + b$$93[3] + "(?:\\s|$)"], JAM.policy.p3);
      }
      introspect(JAM.policy.p2) {
        v18611[3] = v22290;
      }
    }
    return b$$93;
  }
  function cy(a$$14) {
    var v6120;
    if (JAM.call(f$$4.isWindow, f$$4, [a$$14], JAM.policy.p3)) {
      v6120 = a$$14;
    } else {
      var v13124;
      if (a$$14.nodeType === 9) {
        var v18612 = a$$14.defaultView;
        if (!v18612) {
          v18612 = a$$14.parentWindow;
        }
        v13124 = v18612;
      } else {
        v13124 = !1;
      }
      v6120 = v13124;
    }
    return v6120;
  }
  function cu(a$$15) {
    if (!cj[a$$15]) {
      var b$$10 = c$$5.body;
      var v6121 = JAM.call(f$$4, null, ["<" + a$$15 + ">"], JAM.policy.p3);
      var d$$7 = JAM.call(v6121.appendTo, v6121, [b$$10], JAM.policy.p3);
      var e$$48 = JAM.call(d$$7.css, d$$7, ["display"], JAM.policy.p3);
      JAM.call(d$$7.remove, d$$7, [], JAM.policy.p3);
      var v13128 = e$$48 === "none";
      if (!v13128) {
        v13128 = e$$48 === "";
      }
      if (v13128) {
        if (!ck) {
          ck = JAM.call(c$$5.createElement, c$$5, ["iframe"], JAM.policy.p3);
          ck.frameBorder = ck.width = ck.height = 0;
        }
        JAM.call(b$$10.appendChild, b$$10, [ck], JAM.policy.p3);
        var v13129 = !cl;
        if (!v13129) {
          v13129 = !ck.createElement;
        }
        if (v13129) {
          var v22293 = ck.contentWindow;
          if (!v22293) {
            v22293 = ck.contentDocument;
          }
          cl = v22293.document;
          var v26224;
          if (f$$4.support.boxModel) {
            v26224 = "<!doctype html>";
          } else {
            v26224 = "";
          }
          JAM.call(cl.write, cl, [v26224 + "<html><body>"], JAM.policy.p3);
          JAM.call(cl.close, cl, [], JAM.policy.p3);
        }
        d$$7 = JAM.call(cl.createElement, cl, [a$$15], JAM.policy.p3);
        var v22295 = cl.body;
        JAM.call(v22295.appendChild, v22295, [d$$7], JAM.policy.p3);
        e$$48 = JAM.call(f$$4.css, f$$4, [d$$7, "display"], JAM.policy.p3);
        JAM.call(b$$10.removeChild, b$$10, [ck], JAM.policy.p3);
      }
      JAM.set(cj, a$$15, e$$48, JAM.policy.p2);
    }
    return cj[a$$15];
  }
  function ct(a$$16, b$$11) {
    function v615() {
      JAM.set(c$$6, this, a$$16, JAM.policy.p2);
      return;
    }
    var c$$6 = {};
    var v13130 = cp.concat;
    JAM.call(f$$4.each, f$$4, [JAM.call(v13130.apply, v13130, [[], JAM.call(cp.slice, cp, [0, b$$11], JAM.policy.p3)], JAM.policy.p3), v615], JAM.policy.p3);
    return c$$6;
  }
  function cs() {
    cq = b$$9;
    return;
  }
  function cr() {
    JAM.call(setTimeout, null, [cs, 0], JAM.policy.p3);
    return cq = JAM.call(f$$4.now, f$$4, [], JAM.policy.p3);
  }
  function ch$$14() {
    try {
      return JAM.new(a$$13.XMLHttpRequest, [], JAM.policy.p3);
    } catch (b$$13) {
    }
    return;
  }
  function b_(a$$19, b$$14, c$$9, d$$10) {
    function v616(b$$15, e$$52) {
      var v6127;
      var v18621 = c$$9;
      if (!v18621) {
        v18621 = JAM.call(bD.test, bD, [a$$19], JAM.policy.p3);
      }
      if (v18621) {
        v6127 = JAM.call(d$$10, null, [a$$19, e$$52], JAM.policy.p3);
      } else {
        var v22297 = a$$19 + "[";
        var v26225;
        if (typeof e$$52 == "object") {
          v26225 = b$$15;
        } else {
          v26225 = "";
        }
        v6127 = JAM.call(b_, null, [v22297 + v26225 + "]", e$$52, c$$9, d$$10], JAM.policy.p3);
      }
      v6127;
      return;
    }
    if (JAM.call(f$$4.isArray, f$$4, [b$$14], JAM.policy.p3)) {
      JAM.call(f$$4.each, f$$4, [b$$14, v616], JAM.policy.p3);
    } else {
      var v13134 = !c$$9;
      if (v13134) {
        v13134 = JAM.call(f$$4.type, f$$4, [b$$14], JAM.policy.p3) === "object";
      }
      if (v13134) {
        var e$$51;
        for (e$$51 in b$$14) {
          JAM.call(b_, null, [a$$19 + "[" + e$$51 + "]", b$$14[e$$51], c$$9, d$$10], JAM.policy.p3);
        }
      } else {
        JAM.call(d$$10, null, [a$$19, b$$14], JAM.policy.p3);
      }
    }
    return;
  }
  function b$(a$$20, c$$10) {
    var d$$11;
    var e$$53;
    var v6132 = f$$4.ajaxSettings.flatOptions;
    if (!v6132) {
      v6132 = {};
    }
    var g$$3 = v6132;
    for (d$$11 in c$$10) {
      var v6133 = c$$10[d$$11] !== b$$9;
      if (v6133) {
        var v18625;
        if (g$$3[d$$11]) {
          v18625 = a$$20;
        } else {
          var v22299 = e$$53;
          if (!v22299) {
            v22299 = e$$53 = {};
          }
          v18625 = v22299;
        }
        JAM.set(v18625, d$$11, c$$10[d$$11], JAM.policy.p2);
      }
    }
    if (e$$53) {
      JAM.call(f$$4.extend, f$$4, [!0, a$$20, e$$53], JAM.policy.p3);
    }
    return;
  }
  function bZ(a$$21, c$$11, d$$12, e$$54, f$$6, g$$4) {
    var v18626 = f$$6;
    if (!v18626) {
      v18626 = c$$11.dataTypes[0];
    }
    f$$6 = v18626;
    g$$4 = g$$4 || {};
    JAM.set(g$$4, f$$6, !0, JAM.policy.p2);
    var h$$12 = a$$21[f$$6];
    var i$$88 = 0;
    var v6134;
    if (h$$12) {
      v6134 = h$$12.length;
    } else {
      v6134 = 0;
    }
    var j$$17 = v6134;
    var k$$5 = a$$21 === bS;
    var l$$23;
    var v13141 = i$$88 < j$$17;
    if (v13141) {
      var v18627 = k$$5;
      if (!v18627) {
        v18627 = !l$$23;
      }
      v13141 = v18627;
    }
    var v6135 = v13141;
    for (;v6135;) {
      l$$23 = JAM.call(h$$12[i$$88], h$$12, [c$$11, d$$12, e$$54], JAM.policy.p3);
      var v13142 = typeof l$$23 == "string";
      if (v13142) {
        var v18629;
        var v26227 = !k$$5;
        if (!v26227) {
          v26227 = g$$4[l$$23];
        }
        if (v26227) {
          v18629 = l$$23 = b$$9;
        } else {
          var v26228 = c$$11.dataTypes;
          JAM.call(v26228.unshift, v26228, [l$$23], JAM.policy.p3);
          v18629 = l$$23 = JAM.call(bZ, null, [a$$21, c$$11, d$$12, e$$54, l$$23, g$$4], JAM.policy.p3);
        }
        v18629;
      }
      i$$88 = i$$88 + 1;
      var v13143 = i$$88 < j$$17;
      if (v13143) {
        var v18630 = k$$5;
        if (!v18630) {
          v18630 = !l$$23;
        }
        v13143 = v18630;
      }
      v6135 = v13143;
    }
    var v18631 = k$$5;
    if (!v18631) {
      v18631 = !l$$23;
    }
    var v13144 = v18631;
    if (v13144) {
      v13144 = !g$$4["*"];
    }
    var v6136 = v13144;
    if (v6136) {
      l$$23 = JAM.call(bZ, null, [a$$21, c$$11, d$$12, e$$54, "*", g$$4], JAM.policy.p3);
    }
    return l$$23;
  }
  function bY(a$$22) {
    function v617(b$$16, c$$12) {
      var v6137 = typeof b$$16 != "string";
      if (v6137) {
        c$$12 = b$$16;
        b$$16 = "*";
      }
      if (JAM.call(f$$4.isFunction, f$$4, [c$$12], JAM.policy.p3)) {
        var v6138 = JAM.call(b$$16.toLowerCase, b$$16, [], JAM.policy.p3);
        var d$$13 = JAM.call(v6138.split, v6138, [bO], JAM.policy.p3);
        var e$$55 = 0;
        var g$$5 = d$$13.length;
        var h$$13;
        var i$$89;
        var j$$18;
        var v6139 = e$$55 < g$$5;
        for (;v6139;) {
          h$$13 = d$$13[e$$55];
          j$$18 = JAM.call(/^\+/.test, /^\+/, [h$$13], JAM.policy.p3);
          if (j$$18) {
            var v26229 = JAM.call(h$$13.substr, h$$13, [1], JAM.policy.p3);
            if (!v26229) {
              v26229 = "*";
            }
            h$$13 = v26229;
          }
          var v18633 = a$$22[h$$13];
          if (!v18633) {
            v18633 = [];
          }
          i$$89 = JAM.set(a$$22, h$$13, v18633, JAM.policy.p2);
          var v18634;
          if (j$$18) {
            v18634 = "unshift";
          } else {
            v18634 = "push";
          }
          JAM.call(i$$89[v18634], i$$89, [c$$12], JAM.policy.p3);
          e$$55 = e$$55 + 1;
          v6139 = e$$55 < g$$5;
        }
      }
      return;
    }
    return v617;
  }
  function bB(a$$23, b$$17, c$$13) {
    var v6141;
    if (b$$17 === "width") {
      v6141 = a$$23.offsetWidth;
    } else {
      v6141 = a$$23.offsetHeight;
    }
    var d$$14 = v6141;
    var v6142;
    if (b$$17 === "width") {
      v6142 = 1;
    } else {
      v6142 = 0;
    }
    var e$$56 = v6142;
    var g$$6 = 4;
    if (d$$14 > 0) {
      if (c$$13 !== "border") {
        var v6143 = e$$56 < g$$6;
        for (;v6143;) {
          if (!c$$13) {
            var v22308 = d$$14;
            var v26230 = JAM.call(parseFloat, null, [JAM.call(f$$4.css, f$$4, [a$$23, "padding" + bx[e$$56]], JAM.policy.p3)], JAM.policy.p3);
            if (!v26230) {
              v26230 = 0;
            }
            d$$14 = v22308 - v26230;
          }
          var v13149;
          if (c$$13 === "margin") {
            var v22310 = d$$14;
            var v26231 = JAM.call(parseFloat, null, [JAM.call(f$$4.css, f$$4, [a$$23, c$$13 + bx[e$$56]], JAM.policy.p3)], JAM.policy.p3);
            if (!v26231) {
              v26231 = 0;
            }
            v13149 = d$$14 = v22310 + v26231;
          } else {
            var v22312 = d$$14;
            var v26232 = JAM.call(parseFloat, null, [JAM.call(f$$4.css, f$$4, [a$$23, "border" + bx[e$$56] + "Width"], JAM.policy.p3)], JAM.policy.p3);
            if (!v26232) {
              v26232 = 0;
            }
            v13149 = d$$14 = v22312 - v26232;
          }
          v13149;
          e$$56 = e$$56 + 2;
          v6143 = e$$56 < g$$6;
        }
      }
      return d$$14 + "px";
    }
    d$$14 = JAM.call(by, null, [a$$23, b$$17], JAM.policy.p3);
    var v13150 = d$$14 < 0;
    if (!v13150) {
      v13150 = d$$14 == null;
    }
    if (v13150) {
      d$$14 = a$$23.style[b$$17];
    }
    if (JAM.call(bt.test, bt, [d$$14], JAM.policy.p3)) {
      return d$$14;
    }
    var v6149 = JAM.call(parseFloat, null, [d$$14], JAM.policy.p3);
    if (!v6149) {
      v6149 = 0;
    }
    d$$14 = v6149;
    if (c$$13) {
      var v6150 = e$$56 < g$$6;
      for (;v6150;) {
        var v22314 = d$$14;
        var v26233 = JAM.call(parseFloat, null, [JAM.call(f$$4.css, f$$4, [a$$23, "padding" + bx[e$$56]], JAM.policy.p3)], JAM.policy.p3);
        if (!v26233) {
          v26233 = 0;
        }
        d$$14 = v22314 + v26233;
        var v18638 = c$$13 !== "padding";
        if (v18638) {
          var v26234 = d$$14;
          var v27823 = JAM.call(parseFloat, null, [JAM.call(f$$4.css, f$$4, [a$$23, "border" + bx[e$$56] + "Width"], JAM.policy.p3)], JAM.policy.p3);
          if (!v27823) {
            v27823 = 0;
          }
          d$$14 = v26234 + v27823;
        }
        var v13152 = c$$13 === "margin";
        if (v13152) {
          var v22316 = d$$14;
          var v26236 = JAM.call(parseFloat, null, [JAM.call(f$$4.css, f$$4, [a$$23, c$$13 + bx[e$$56]], JAM.policy.p3)], JAM.policy.p3);
          if (!v26236) {
            v26236 = 0;
          }
          d$$14 = v22316 + v26236;
        }
        e$$56 = e$$56 + 2;
        v6150 = e$$56 < g$$6;
      }
    }
    return d$$14 + "px";
  }
  function bn(a$$25) {
    var v13153 = a$$25.nodeName;
    if (!v13153) {
      v13153 = "";
    }
    var v6151 = v13153;
    var b$$19 = JAM.call(v6151.toLowerCase, v6151, [], JAM.policy.p3);
    var v6152;
    if (b$$19 === "input") {
      v6152 = JAM.call(bm, null, [a$$25], JAM.policy.p3);
    } else {
      var v18640 = b$$19 !== "script";
      if (v18640) {
        v18640 = typeof a$$25.getElementsByTagName != "undefined";
      }
      var v13154 = v18640;
      if (v13154) {
        v13154 = JAM.call(f$$4.grep, f$$4, [JAM.call(a$$25.getElementsByTagName, a$$25, ["input"], JAM.policy.p3), bm], JAM.policy.p3);
      }
      v6152 = v13154;
    }
    v6152;
    return;
  }
  function bm(a$$26) {
    var v13156 = a$$26.type === "checkbox";
    if (!v13156) {
      v13156 = a$$26.type === "radio";
    }
    if (v13156) {
      a$$26.defaultChecked = a$$26.checked;
    }
    return;
  }
  function bl(a$$27) {
    var v6154;
    if (typeof a$$27.getElementsByTagName != "undefined") {
      v6154 = JAM.call(a$$27.getElementsByTagName, a$$27, ["*"], JAM.policy.p3);
    } else {
      var v13157;
      if (typeof a$$27.querySelectorAll != "undefined") {
        v13157 = JAM.call(a$$27.querySelectorAll, a$$27, ["*"], JAM.policy.p3);
      } else {
        v13157 = [];
      }
      v6154 = v13157;
    }
    return v6154;
  }
  function bk(a$$28, b$$20) {
    var c$$14;
    var v6155 = b$$20.nodeType === 1;
    if (v6155) {
      var v29496 = b$$20.clearAttributes;
      if (v29496) {
        JAM.call(b$$20.clearAttributes, b$$20, [], JAM.policy.p3);
      }
      var v29497 = b$$20.mergeAttributes;
      if (v29497) {
        JAM.call(b$$20.mergeAttributes, b$$20, [a$$28], JAM.policy.p3);
      }
      var v28843 = b$$20.nodeName;
      c$$14 = JAM.call(v28843.toLowerCase, v28843, [], JAM.policy.p3);
      var v27826;
      if (c$$14 === "object") {
        v27826 = JAM.set(b$$20, "outerHTML", a$$28.outerHTML);
      } else {
        var v28844;
        var v29916 = c$$14 !== "input";
        if (!v29916) {
          var v30186 = a$$28.type !== "checkbox";
          if (v30186) {
            v30186 = a$$28.type !== "radio";
          }
          v29916 = v30186;
        }
        if (v29916) {
          var v29498;
          if (c$$14 === "option") {
            v29498 = b$$20.selected = a$$28.defaultSelected;
          } else {
            var v29917;
            var v30424 = c$$14 === "input";
            if (!v30424) {
              v30424 = c$$14 === "textarea";
            }
            if (v30424) {
              v29917 = b$$20.defaultValue = a$$28.defaultValue;
            } else {
              var v30425 = c$$14 === "script";
              if (v30425) {
                v30425 = b$$20.text !== a$$28.text;
              }
              var v30188 = v30425;
              if (v30188) {
                v30188 = b$$20.text = a$$28.text;
              }
              v29917 = v30188;
            }
            v29498 = v29917;
          }
          v28844 = v29498;
        } else {
          var v29919 = a$$28.checked;
          if (v29919) {
            b$$20.defaultChecked = b$$20.checked = a$$28.checked;
          }
          var v29920 = b$$20.value !== a$$28.value;
          if (v29920) {
            v29920 = b$$20.value = a$$28.value;
          }
          v28844 = v29920;
        }
        v27826 = v28844;
      }
      v27826;
      JAM.call(b$$20.removeAttribute, b$$20, [f$$4.expando], JAM.policy.p3);
      JAM.call(b$$20.removeAttribute, b$$20, ["_submit_attached"], JAM.policy.p3);
      JAM.call(b$$20.removeAttribute, b$$20, ["_change_attached"], JAM.policy.p3);
    }
    return;
  }
  function bj(a$$29, b$$21) {
    var v13160 = b$$21.nodeType === 1;
    if (v13160) {
      v13160 = !!JAM.call(f$$4.hasData, f$$4, [a$$29], JAM.policy.p3);
    }
    if (v13160) {
      var c$$15;
      var d$$15;
      var e$$57;
      var g$$7 = JAM.call(f$$4._data, f$$4, [a$$29], JAM.policy.p3);
      var h$$14 = JAM.call(f$$4._data, f$$4, [b$$21, g$$7], JAM.policy.p3);
      var i$$90 = g$$7.events;
      if (i$$90) {
        delete h$$14.handle;
        h$$14.events = {};
        for (c$$15 in i$$90) {
          d$$15 = 0;
          e$$57 = i$$90[c$$15].length;
          var v6158 = d$$15 < e$$57;
          for (;v6158;) {
            var v6156 = f$$4.event;
            JAM.call(v6156.add, v6156, [b$$21, c$$15, i$$90[c$$15][d$$15]], JAM.policy.p3);
            d$$15 = d$$15 + 1;
            v6158 = d$$15 < e$$57;
          }
        }
      }
      var v6159 = h$$14.data;
      if (v6159) {
        var v13163 = h$$14;
        var v31364 = JAM.call(f$$4.extend, f$$4, [{}, h$$14.data], JAM.policy.p3);
        v13163.data = v31364;
      }
    }
    return;
  }
  function bi(a$$30, b$$22) {
    var v6161;
    if (JAM.call(f$$4.nodeName, f$$4, [a$$30, "table"], JAM.policy.p3)) {
      var v13164 = JAM.call(a$$30.getElementsByTagName, a$$30, ["tbody"], JAM.policy.p3)[0];
      if (!v13164) {
        var v22322 = a$$30.ownerDocument;
        v13164 = JAM.call(a$$30.appendChild, a$$30, [JAM.call(v22322.createElement, v22322, ["tbody"], JAM.policy.p3)], JAM.policy.p3);
      }
      v6161 = v13164;
    } else {
      v6161 = a$$30;
    }
    return v6161;
  }
  function U(a$$31) {
    var b$$23 = JAM.call(V.split, V, ["|"], JAM.policy.p3);
    var c$$16 = JAM.call(a$$31.createDocumentFragment, a$$31, [], JAM.policy.p3);
    if (c$$16.createElement) {
      var v6163 = b$$23.length;
      for (;v6163;) {
        JAM.call(c$$16.createElement, c$$16, [JAM.call(b$$23.pop, b$$23, [], JAM.policy.p3)], JAM.policy.p3);
        v6163 = b$$23.length;
      }
    }
    return c$$16;
  }
  function T$$2(a$$32, b$$24, c$$17) {
    function v621(a$$36, d$$19) {
      return JAM.call(f$$4.inArray, f$$4, [a$$36, b$$24], JAM.policy.p3) >= 0 === c$$17;
    }
    function v620(a$$35) {
      return a$$35.nodeType === 1;
    }
    function v619(a$$34, d$$18) {
      return a$$34 === b$$24 === c$$17;
    }
    function v618(a$$33, d$$17) {
      var e$$58 = !!JAM.call(b$$24.call, b$$24, [a$$33, d$$17, a$$33], JAM.policy.p3);
      return e$$58 === c$$17;
    }
    b$$24 = b$$24 || 0;
    if (JAM.call(f$$4.isFunction, f$$4, [b$$24], JAM.policy.p3)) {
      return JAM.call(f$$4.grep, f$$4, [a$$32, v618], JAM.policy.p3);
    }
    if (b$$24.nodeType) {
      return JAM.call(f$$4.grep, f$$4, [a$$32, v619], JAM.policy.p3);
    }
    if (typeof b$$24 == "string") {
      var d$$16 = JAM.call(f$$4.grep, f$$4, [a$$32, v620], JAM.policy.p3);
      if (JAM.call(O.test, O, [b$$24], JAM.policy.p3)) {
        return JAM.call(f$$4.filter, f$$4, [b$$24, d$$16, !c$$17], JAM.policy.p3);
      }
      b$$24 = JAM.call(f$$4.filter, f$$4, [b$$24, d$$16], JAM.policy.p3);
    }
    return JAM.call(f$$4.grep, f$$4, [a$$32, v621], JAM.policy.p3);
  }
  function S(a$$37) {
    var v13169 = !a$$37;
    if (!v13169) {
      v13169 = !a$$37.parentNode;
    }
    var v6174 = v13169;
    if (!v6174) {
      v6174 = a$$37.parentNode.nodeType === 11;
    }
    return v6174;
  }
  function K() {
    return!0;
  }
  function J() {
    return!1;
  }
  function n$$57(a$$38, b$$25, c$$18) {
    function v622() {
      var v13172 = !JAM.call(f$$4._data, f$$4, [a$$38, e$$59], JAM.policy.p3);
      if (v13172) {
        v13172 = !JAM.call(f$$4._data, f$$4, [a$$38, g$$8], JAM.policy.p3);
      }
      var v6175 = v13172;
      if (v6175) {
        JAM.call(f$$4.removeData, f$$4, [a$$38, d$$20, !0], JAM.policy.p3);
        JAM.call(h$$15.fire, h$$15, [], JAM.policy.p3);
      }
      return;
    }
    var d$$20 = b$$25 + "defer";
    var e$$59 = b$$25 + "queue";
    var g$$8 = b$$25 + "mark";
    var h$$15 = JAM.call(f$$4._data, f$$4, [a$$38, d$$20], JAM.policy.p3);
    var v18659 = h$$15;
    if (v18659) {
      var v22323 = c$$18 === "queue";
      if (!v22323) {
        v22323 = !JAM.call(f$$4._data, f$$4, [a$$38, e$$59], JAM.policy.p3);
      }
      v18659 = v22323;
    }
    var v13173 = v18659;
    if (v13173) {
      var v18660 = c$$18 === "mark";
      if (!v18660) {
        v18660 = !JAM.call(f$$4._data, f$$4, [a$$38, g$$8], JAM.policy.p3);
      }
      v13173 = v18660;
    }
    var v6176 = v13173;
    if (v6176) {
      JAM.call(setTimeout, null, [v622, 0], JAM.policy.p3);
    }
    return;
  }
  function m$$4(a$$39) {
    var b$$26;
    for (b$$26 in a$$39) {
      var v13174 = b$$26 === "data";
      if (v13174) {
        v13174 = JAM.call(f$$4.isEmptyObject, f$$4, [a$$39[b$$26]], JAM.policy.p3);
      }
      if (v13174) {
        continue;
      }
      if (b$$26 !== "toJSON") {
        return!1;
      }
    }
    return!0;
  }
  function l$$21(a$$40, c$$19, d$$21) {
    var v13175 = d$$21 === b$$9;
    if (v13175) {
      v13175 = a$$40.nodeType === 1;
    }
    if (v13175) {
      var v13176 = JAM.call(c$$19.replace, c$$19, [k$$2, "-$1"], JAM.policy.p3);
      var e$$60 = "data-" + JAM.call(v13176.toLowerCase, v13176, [], JAM.policy.p3);
      d$$21 = JAM.call(a$$40.getAttribute, a$$40, [e$$60], JAM.policy.p3);
      if (typeof d$$21 == "string") {
        try {
          var v6180;
          if (d$$21 === "true") {
            v6180 = !0;
          } else {
            var v13178;
            if (d$$21 === "false") {
              v13178 = !1;
            } else {
              var v18663;
              if (d$$21 === "null") {
                v18663 = null;
              } else {
                var v22326;
                if (JAM.call(f$$4.isNumeric, f$$4, [d$$21], JAM.policy.p3)) {
                  v22326 = +d$$21;
                } else {
                  var v26242;
                  if (JAM.call(j$$14.test, j$$14, [d$$21], JAM.policy.p3)) {
                    v26242 = JAM.call(f$$4.parseJSON, f$$4, [d$$21], JAM.policy.p3);
                  } else {
                    v26242 = d$$21;
                  }
                  v22326 = v26242;
                }
                v18663 = v22326;
              }
              v13178 = v18663;
            }
            v6180 = v13178;
          }
          d$$21 = v6180;
        } catch (g$$9) {
        }
        JAM.call(f$$4.data, f$$4, [a$$40, c$$19, d$$21], JAM.policy.p3);
      } else {
        d$$21 = b$$9;
      }
    }
    return d$$21;
  }
  function h$$9(a$$41) {
    var b$$27 = JAM.set(g, a$$41, {}, JAM.policy.p2);
    var c$$20;
    var d$$22;
    a$$41 = JAM.call(a$$41.split, a$$41, [/\s+/], JAM.policy.p3);
    c$$20 = 0;
    d$$22 = a$$41.length;
    var v6184 = c$$20 < d$$22;
    for (;v6184;) {
      JAM.set(b$$27, a$$41[c$$20], !0, JAM.policy.p2);
      c$$20 = c$$20 + 1;
      v6184 = c$$20 < d$$22;
    }
    return b$$27;
  }
  var c$$5 = a$$13.document;
  var d$$6 = a$$13.navigator;
  var e$$47 = a$$13.location;
  var f$$4 = JAM.call(v675, null, [], JAM.policy.p3);
  var g = {};
  f$$4.Callbacks = v687;
  var i$$85 = [].slice;
  JAM.call(f$$4.extend, f$$4, [{Deferred:v698, when:v701}], JAM.policy.p3);
  var v13181 = f$$4;
  var v31365 = JAM.call(v704, null, [], JAM.policy.p3);
  v13181.support = v31365;
  var j$$14 = /^(?:\{.*\}|\[.*\])$/;
  var k$$2 = /([A-Z])/g;
  var v28846 = f$$4.fn.jquery + JAM.call(Math.random, Math, [], JAM.policy.p3);
  JAM.call(f$$4.extend, f$$4, [{cache:{}, uuid:0, expando:"jQuery" + JAM.call(v28846.replace, v28846, [/\D/g, ""], JAM.policy.p3), noData:{embed:!0, object:"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000", applet:!0}, hasData:v705, data:v706, removeData:v707, _data:v708, acceptData:v709}], JAM.policy.p3);
  var v22329 = f$$4.fn;
  JAM.call(v22329.extend, v22329, [{data:v713, removeData:v715}], JAM.policy.p3);
  JAM.call(f$$4.extend, f$$4, [{_mark:v716, _unmark:v717, queue:v718, dequeue:v720}], JAM.policy.p3);
  var v13182 = f$$4.fn;
  JAM.call(v13182.extend, v13182, [{queue:v722, dequeue:v724, delay:v727, clearQueue:v728, promise:v729}], JAM.policy.p3);
  var o = /[\n\t\r]/g;
  var p$$22 = /\s+/;
  var q = /\r/g;
  var r$$2 = /^(?:button|input)$/i;
  var s$$15 = /^(?:button|input|object|select|textarea)$/i;
  var t$$2 = /^a(?:rea)?$/i;
  var u$$1 = /^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$/i;
  var v$$4 = f$$4.support.getSetAttribute;
  var w$$11;
  var x$$67;
  var y$$49;
  var v30426 = f$$4.fn;
  JAM.call(v30426.extend, v30426, [{attr:v730, removeAttr:v732, prop:v733, removeProp:v735, addClass:v737, removeClass:v739, toggleClass:v742, hasClass:v743, val:v746}], JAM.policy.p3);
  JAM.call(f$$4.extend, f$$4, [{valHooks:{option:{get:v747}, select:{get:v748, set:v750}}, attrFn:{val:!0, css:!0, html:!0, text:!0, data:!0, width:!0, height:!0, offset:!0}, attr:v751, removeAttr:v752, attrHooks:{type:{set:v753}, value:{get:v754, set:v755}}, propFix:{tabindex:"tabIndex", readonly:"readOnly", "for":"htmlFor", "class":"className", maxlength:"maxLength", cellspacing:"cellSpacing", cellpadding:"cellPadding", rowspan:"rowSpan", colspan:"colSpan", usemap:"useMap", frameborder:"frameBorder", 
  contenteditable:"contentEditable"}, prop:v756, propHooks:{tabIndex:{get:v757}}}], JAM.policy.p3);
  f$$4.attrHooks.tabindex = f$$4.propHooks.tabIndex;
  x$$67 = {get:v758, set:v759};
  if (!v$$4) {
    y$$49 = {name:!0, id:!0, coords:!0};
    w$$11 = f$$4.valHooks.button = {get:v760, set:v761};
    f$$4.attrHooks.tabindex.set = w$$11.set;
    JAM.call(f$$4.each, f$$4, [["width", "height"], v763], JAM.policy.p3);
    f$$4.attrHooks.contenteditable = {get:w$$11.get, set:v764};
  }
  var v28847 = f$$4.support.hrefNormalized;
  if (!v28847) {
    JAM.call(f$$4.each, f$$4, [["href", "src", "width", "height"], v766], JAM.policy.p3);
  }
  var v27831 = f$$4.support.style;
  if (!v27831) {
    f$$4.attrHooks.style = {get:v767, set:v768};
  }
  var v26246 = f$$4.support.optSelected;
  if (!v26246) {
    var v27833 = f$$4.propHooks;
    var v31366 = JAM.call(f$$4.extend, f$$4, [f$$4.propHooks.selected, {get:v769}], JAM.policy.p3);
    v27833.selected = v31366;
  }
  var v22331 = f$$4.support.enctype;
  if (!v22331) {
    f$$4.propFix.enctype = "encoding";
  }
  var v18666 = f$$4.support.checkOn;
  if (!v18666) {
    JAM.call(f$$4.each, f$$4, [["radio", "checkbox"], v771], JAM.policy.p3);
  }
  JAM.call(f$$4.each, f$$4, [["radio", "checkbox"], v773], JAM.policy.p3);
  var z$$2 = /^(?:textarea|input|select)$/i;
  var A = /^([^\.]*)?(?:\.(.+))?$/;
  var B = /(?:^|\s)hover(\.\S+)?\b/;
  var C = /^key/;
  var D = /^(?:mouse|contextmenu)|click/;
  var E = /^(?:focusinfocus|focusoutblur)$/;
  var F = /^(\w*)(?:#([\w\-]+))?(?:\.([\w\-]+))?$/;
  f$$4.event = {add:v775, global:{}, remove:v776, customEvent:{getData:!0, setData:!0, changeData:!0}, trigger:v777, dispatch:v778, props:JAM.call("attrChange attrName relatedNode srcElement altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split, "attrChange attrName relatedNode srcElement altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which", [" "], JAM.policy.p3), 
  fixHooks:{}, keyHooks:{props:JAM.call("char charCode key keyCode".split, "char charCode key keyCode", [" "], JAM.policy.p3), filter:v779}, mouseHooks:{props:JAM.call("button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement".split, "button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement", [" "], JAM.policy.p3), filter:v780}, fix:v781, special:{ready:{setup:f$$4.bindReady}, load:{noBubble:!0}, focus:{delegateType:"focusin"}, 
  blur:{delegateType:"focusout"}, beforeunload:{setup:v782, teardown:v783}}, simulate:v784};
  f$$4.event.handle = f$$4.event.dispatch;
  var v30432;
  if (c$$5.removeEventListener) {
    v30432 = v785;
  } else {
    v30432 = v786;
  }
  f$$4.removeEvent = v30432;
  f$$4.Event = v787;
  f$$4.Event.prototype = {preventDefault:v788, stopPropagation:v789, stopImmediatePropagation:v790, isDefaultPrevented:J, isPropagationStopped:J, isImmediatePropagationStopped:J};
  JAM.call(f$$4.each, f$$4, [{mouseenter:"mouseover", mouseleave:"mouseout"}, v792], JAM.policy.p3);
  var v28853 = f$$4.support.submitBubbles;
  if (!v28853) {
    f$$4.event.special.submit = {setup:v795, postDispatch:v796, teardown:v797};
  }
  var v27835 = f$$4.support.changeBubbles;
  if (!v27835) {
    f$$4.event.special.change = {setup:v802, handle:v803, teardown:v804};
  }
  var v26250 = f$$4.support.focusinBubbles;
  if (!v26250) {
    JAM.call(f$$4.each, f$$4, [{focus:"focusin", blur:"focusout"}, v807], JAM.policy.p3);
  }
  var v22335 = f$$4.fn;
  JAM.call(v22335.extend, v22335, [{on:v810, one:v811, off:v813, bind:v814, unbind:v815, live:v816, die:v817, delegate:v818, undelegate:v819, trigger:v821, triggerHandler:v822, toggle:v823, hover:v824}], JAM.policy.p3);
  JAM.call(f$$4.each, f$$4, [JAM.call("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu".split, "blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu", [" "], JAM.policy.p3), v826], JAM.policy.p3);
  JAM.call(v905, null, [], JAM.policy.p3);
  var L = /Until$/;
  var M = /^(?:parents|prevUntil|prevAll)/;
  var N = /,/;
  var O = /^.[^:#\[\.,]*$/;
  var P = Array.prototype.slice;
  var Q = f$$4.expr.match.globalPOS;
  var R = {children:!0, contents:!0, next:!0, prev:!0};
  var v18668 = f$$4.fn;
  JAM.call(v18668.extend, v18668, [{find:v907, has:v909, not:v910, filter:v911, is:v912, closest:v913, index:v914, add:v915, andSelf:v916}], JAM.policy.p3);
  JAM.call(f$$4.each, f$$4, [{parent:v917, parents:v918, parentsUntil:v919, next:v920, prev:v921, nextAll:v922, prevAll:v923, nextUntil:v924, prevUntil:v925, siblings:v926, children:v927, contents:v928}, v930], JAM.policy.p3);
  JAM.call(f$$4.extend, f$$4, [{filter:v931, dir:v932, nth:v933, sibling:v934}], JAM.policy.p3);
  var V = "abbr|article|aside|audio|bdi|canvas|data|datalist|details|figcaption|figure|footer|header|hgroup|mark|meter|nav|output|progress|section|summary|time|video";
  var W = / jQuery\d+="(?:\d+|null)"/g;
  var X = /^\s+/;
  var Y = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/ig;
  var Z = /<([\w:]+)/;
  var $$$2 = /<tbody/i;
  var _$$1 = /<|&#?\w+;/;
  var ba = /<(?:script|style)/i;
  var bb = /<(?:script|object|embed|option|style)/i;
  var bc = JAM.new(RegExp, ["<(?:" + V + ")[\\s/>]", "i"], JAM.policy.p3);
  var bd = /checked\s*(?:[^=]|=\s*.checked.)/i;
  var be = /\/(java|ecma)script/i;
  var bf = /^\s*<!(?:\[CDATA\[|\-\-)/;
  var bg = {option:[1, "<select multiple='multiple'>", "</select>"], legend:[1, "<fieldset>", "</fieldset>"], thead:[1, "<table>", "</table>"], tr:[2, "<table><tbody>", "</tbody></table>"], td:[3, "<table><tbody><tr>", "</tr></tbody></table>"], col:[2, "<table><tbody></tbody><colgroup>", "</colgroup></table>"], area:[1, "<map>", "</map>"], _default:[0, "", ""]};
  var bh = JAM.call(U, null, [c$$5], JAM.policy.p3);
  bg.optgroup = bg.option;
  bg.tbody = bg.tfoot = bg.colgroup = bg.caption = bg.thead;
  bg.th = bg.td;
  var v28857 = f$$4.support.htmlSerialize;
  if (!v28857) {
    bg._default = [1, "div<div>", "</div>"];
  }
  var v27839 = f$$4.fn;
  JAM.call(v27839.extend, v27839, [{text:v936, wrapAll:v939, wrapInner:v942, wrap:v944, unwrap:v946, append:v948, prepend:v950, before:v952, after:v954, remove:v955, empty:v956, clone:v958, html:v960, replaceWith:v963, detach:v964, domManip:v968}], JAM.policy.p3);
  f$$4.buildFragment = v969;
  f$$4.fragments = {};
  JAM.call(f$$4.each, f$$4, [{appendTo:"append", prependTo:"prepend", insertBefore:"before", insertAfter:"after", replaceAll:"replaceWith"}, v971], JAM.policy.p3);
  JAM.call(f$$4.extend, f$$4, [{clone:v972, clean:v974, cleanData:v975}], JAM.policy.p3);
  var bp = /alpha\([^)]*\)/i;
  var bq = /opacity=([^)]*)/;
  var br = /([A-Z]|^ms)/g;
  var bs = /^[\-+]?(?:\d*\.)?\d+$/i;
  var bt = /^-?(?:\d*\.)?\d+(?!px)[^\d\s]+$/i;
  var bu = /^([\-+])=([\-+.\de]+)/;
  var bv = /^margin/;
  var bw = {position:"absolute", visibility:"hidden", display:"block"};
  var bx = ["Top", "Right", "Bottom", "Left"];
  var by;
  var bz;
  var bA;
  f$$4.fn.css = v977;
  var v30607 = {opacity:{get:v978}};
  var v30608 = {fillOpacity:!0, fontWeight:!0, lineHeight:!0, opacity:!0, orphans:!0, widows:!0, zIndex:!0, zoom:!0};
  var v30855;
  if (f$$4.support.cssFloat) {
    v30855 = "cssFloat";
  } else {
    v30855 = "styleFloat";
  }
  JAM.call(f$$4.extend, f$$4, [{cssHooks:v30607, cssNumber:v30608, cssProps:{"float":v30855}, style:v979, css:v980, swap:v981}], JAM.policy.p3);
  f$$4.curCSS = f$$4.css;
  var v30194 = c$$5.defaultView;
  if (v30194) {
    v30194 = c$$5.defaultView.getComputedStyle;
  }
  var v29925 = v30194;
  if (v29925) {
    bz = v982;
  }
  var v29513 = c$$5.documentElement.currentStyle;
  if (v29513) {
    bA = v983;
  }
  by = bz || bA;
  JAM.call(f$$4.each, f$$4, [["height", "width"], v987], JAM.policy.p3);
  var v26251 = f$$4.support.opacity;
  if (!v26251) {
    f$$4.cssHooks.opacity = {get:v988, set:v989};
  }
  JAM.call(f$$4, null, [v992], JAM.policy.p3);
  var v22337 = f$$4.expr;
  if (v22337) {
    v22337 = f$$4.expr.filters;
  }
  var v18672 = v22337;
  if (v18672) {
    f$$4.expr.filters.hidden = v993;
    f$$4.expr.filters.visible = v994;
  }
  JAM.call(f$$4.each, f$$4, [{margin:"", padding:"", border:"Width"}, v996], JAM.policy.p3);
  var bC = /%20/g;
  var bD = /\[\]$/;
  var bE = /\r?\n/g;
  var bF = /#.*$/;
  var bG = /^(.*?):[ \t]*([^\r\n]*)\r?$/mg;
  var bH = /^(?:color|date|datetime|datetime-local|email|hidden|month|number|password|range|search|tel|text|time|url|week)$/i;
  var bI = /^(?:about|app|app\-storage|.+\-extension|file|res|widget):$/;
  var bJ = /^(?:GET|HEAD)$/;
  var bK = /^\/\//;
  var bL = /\?/;
  var bM = /<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi;
  var bN = /^(?:select|textarea)/i;
  var bO = /\s+/;
  var bP = /([?&])_=[^&]*/;
  var bQ = /^([\w\+\.\-]+:)(?:\/\/([^\/?#:]*)(?::(\d+))?)?/;
  var bR = f$$4.fn.load;
  var bS = {};
  var bT = {};
  var bU;
  var bV;
  var bW = ["*/"] + ["*"];
  try {
    bU = e$$47.href;
  } catch (bX) {
    bU = JAM.call(c$$5.createElement, c$$5, ["a"], JAM.policy.p3);
    bU.href = "";
    bU = bU.href;
  }
  var v27847 = JAM.call(bQ.exec, bQ, [JAM.call(bU.toLowerCase, bU, [], JAM.policy.p3)], JAM.policy.p3);
  if (!v27847) {
    v27847 = [];
  }
  bV = v27847;
  var v27848 = f$$4.fn;
  JAM.call(v27848.extend, v27848, [{load:v999, serialize:v1000, serializeArray:v1005}], JAM.policy.p3);
  JAM.call(f$$4.each, f$$4, [JAM.call("ajaxStart ajaxStop ajaxComplete ajaxError ajaxSuccess ajaxSend".split, "ajaxStart ajaxStop ajaxComplete ajaxError ajaxSuccess ajaxSend", [" "], JAM.policy.p3), v1007], JAM.policy.p3);
  JAM.call(f$$4.each, f$$4, [["get", "post"], v1009], JAM.policy.p3);
  JAM.call(f$$4.extend, f$$4, [{getScript:v1010, getJSON:v1011, ajaxSetup:v1012, ajaxSettings:{url:bU, isLocal:JAM.call(bI.test, bI, [bV[1]], JAM.policy.p3), global:!0, type:"GET", contentType:"application/x-www-form-urlencoded; charset=UTF-8", processData:!0, async:!0, accepts:{xml:"application/xml, text/xml", html:"text/html", text:"text/plain", json:"application/json, text/javascript", "*":bW}, contents:{xml:/xml/, html:/html/, json:/json/}, responseFields:{xml:"responseXML", text:"responseText"}, 
  converters:{"* text":a$$13.String, "text html":!0, "text json":f$$4.parseJSON, "text xml":f$$4.parseXML}, flatOptions:{context:!0, url:!0}}, ajaxPrefilter:JAM.call(bY, null, [bS], JAM.policy.p3), ajaxTransport:JAM.call(bY, null, [bT], JAM.policy.p3), ajax:v1020, param:v1022}], JAM.policy.p3);
  JAM.call(f$$4.extend, f$$4, [{active:0, lastModified:{}, etag:{}}], JAM.policy.p3);
  var cc = JAM.call(f$$4.now, f$$4, [], JAM.policy.p3);
  var cd = /(\=)\?(&|$)|\?\?/i;
  JAM.call(f$$4.ajaxSetup, f$$4, [{jsonp:"callback", jsonpCallback:v1023}], JAM.policy.p3);
  JAM.call(f$$4.ajaxPrefilter, f$$4, ["json jsonp", v1027], JAM.policy.p3);
  JAM.call(f$$4.ajaxSetup, f$$4, [{accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"}, contents:{script:/javascript|ecmascript/}, converters:{"text script":v1028}}], JAM.policy.p3);
  JAM.call(f$$4.ajaxPrefilter, f$$4, ["script", v1029], JAM.policy.p3);
  JAM.call(f$$4.ajaxTransport, f$$4, ["script", v1033], JAM.policy.p3);
  var v6204;
  if (a$$13.ActiveXObject) {
    v6204 = v1034;
  } else {
    v6204 = !1;
  }
  var ce = v6204;
  var cf = 0;
  var cg;
  var v18674 = f$$4.ajaxSettings;
  var v22343;
  if (a$$13.ActiveXObject) {
    v22343 = v1035;
  } else {
    v22343 = ch$$14;
  }
  v18674.xhr = v22343;
  var v22344 = f$$4.ajaxSettings;
  JAM.call(v1036, null, [JAM.call(v22344.xhr, v22344, [], JAM.policy.p3)], JAM.policy.p3);
  var v13192 = f$$4.support.ajax;
  if (v13192) {
    JAM.call(f$$4.ajaxTransport, f$$4, [v1040], JAM.policy.p3);
  }
  var cj = {};
  var ck;
  var cl;
  var cm = /^(?:toggle|show|hide)$/;
  var cn = /^([+\-]=)?([\d+.\-]+)([a-z%]*)$/i;
  var co;
  var cp = [["height", "marginTop", "marginBottom", "paddingTop", "paddingBottom"], ["width", "marginLeft", "marginRight", "paddingLeft", "paddingRight"], ["opacity"]];
  var cq;
  var v28860 = f$$4.fn;
  JAM.call(v28860.extend, v28860, [{show:v1041, hide:v1042, _toggle:f$$4.fn.toggle, toggle:v1044, fadeTo:v1045, animate:v1046, stop:v1048}], JAM.policy.p3);
  JAM.call(f$$4.each, f$$4, [{slideDown:JAM.call(ct, null, ["show", 1], JAM.policy.p3), slideUp:JAM.call(ct, null, ["hide", 1], JAM.policy.p3), slideToggle:JAM.call(ct, null, ["toggle", 1], JAM.policy.p3), fadeIn:{opacity:"show"}, fadeOut:{opacity:"hide"}, fadeToggle:{opacity:"toggle"}}, v1050], JAM.policy.p3);
  JAM.call(f$$4.extend, f$$4, [{speed:v1052, easing:{linear:v1053, swing:v1054}, timers:[], fx:v1055}], JAM.policy.p3);
  f$$4.fx.prototype = {update:v1056, cur:v1057, custom:v1059, show:v1060, hide:v1061, step:v1063};
  JAM.call(f$$4.extend, f$$4, [f$$4.fx, {tick:v1064, interval:13, stop:v1065, speeds:{slow:600, fast:200, _default:400}, step:{opacity:v1066, _default:v1067}}], JAM.policy.p3);
  var v22347 = cp.concat;
  JAM.call(f$$4.each, f$$4, [JAM.call(v22347.apply, v22347, [[], cp], JAM.policy.p3), v1069], JAM.policy.p3);
  var v18678 = f$$4.expr;
  if (v18678) {
    v18678 = f$$4.expr.filters;
  }
  var v13193 = v18678;
  if (v13193) {
    f$$4.expr.filters.animated = v1071;
  }
  var cv;
  var cw = /^t(?:able|d|h)$/i;
  var cx = /^(?:body|html)$/i;
  var v29521;
  if ("getBoundingClientRect" in c$$5.documentElement) {
    v29521 = cv = v1072;
  } else {
    v29521 = cv = v1073;
  }
  v29521;
  f$$4.fn.offset = v1075;
  f$$4.offset = {bodyOffset:v1076, setOffset:v1077};
  var v27858 = f$$4.fn;
  JAM.call(v27858.extend, v27858, [{position:v1078, offsetParent:v1080}], JAM.policy.p3);
  JAM.call(f$$4.each, f$$4, [{scrollLeft:"pageXOffset", scrollTop:"pageYOffset"}, v1083], JAM.policy.p3);
  JAM.call(f$$4.each, f$$4, [{Height:"height", Width:"width"}, v1088], JAM.policy.p3);
  a$$13.jQuery = a$$13.$ = f$$4;
  var v22351 = typeof define == "function";
  if (v22351) {
    v22351 = define.amd;
  }
  var v18680 = v22351;
  if (v18680) {
    v18680 = define.amd.jQuery;
  }
  var v13194 = v18680;
  if (v13194) {
    JAM.call(define, null, ["jquery", [], v1089], JAM.policy.p3);
  }
  return;
}
function v614() {
  function v613(x$$66, y$$48, x2$$1, y2$$1, dashArray) {
    if (!dashArray) {
      dashArray = [10, 5];
    }
    var dashCount = dashArray.length;
    JAM.call(this.moveTo, this, [x$$66, y$$48], JAM.policy.p3);
    var dx$$5 = x2$$1 - x$$66;
    var dy$$5 = y2$$1 - y$$48;
    var slope = dy$$5 / dx$$5;
    var distRemaining = JAM.call(Math.sqrt, Math, [dx$$5 * dx$$5 + dy$$5 * dy$$5], JAM.policy.p3);
    var dashIndex = 0;
    var draw = true;
    var v6214 = distRemaining >= .1;
    for (;v6214;) {
      dashIndex = dashIndex + 1;
      var dashLength = dashArray[dashIndex % dashCount];
      if (dashLength > distRemaining) {
        dashLength = distRemaining;
      }
      var xStep = JAM.call(Math.sqrt, Math, [dashLength * dashLength / (1 + slope * slope)], JAM.policy.p3);
      x$$66 = x$$66 + xStep;
      y$$48 = y$$48 + slope * xStep;
      var v13200;
      if (draw) {
        v13200 = "lineTo";
      } else {
        v13200 = "moveTo";
      }
      JAM.call(this[v13200], this, [x$$66, y$$48], JAM.policy.p3);
      distRemaining = distRemaining - dashLength;
      draw = !draw;
      v6214 = distRemaining >= .1;
    }
    return;
  }
  function v612(npos$$11, pos$$55, dim$$24) {
    var a$$12 = JAM.new(Complex, [npos$$11.x, npos$$11.y], JAM.policy.p3);
    var b$$8 = JAM.new(Complex, [a$$12.x + dim$$24, npos$$11.y - dim$$24], JAM.policy.p3);
    var c$$4 = JAM.new(Complex, [b$$8.x, npos$$11.y + dim$$24], JAM.policy.p3);
    pos$$55 = JAM.new(Complex, [pos$$55.x, pos$$55.y], JAM.policy.p3);
    var negOne = JAM.new(Complex, [-1, -1], JAM.policy.p3);
    var v0 = JAM.new(Complex, [c$$4.x - a$$12.x, c$$4.y - a$$12.y], JAM.policy.p3);
    var v1$$2 = JAM.new(Complex, [b$$8.x - a$$12.x, b$$8.y - a$$12.y], JAM.policy.p3);
    var v2$$2 = JAM.new(Complex, [pos$$55.x - a$$12.x, pos$$55.y - a$$12.y], JAM.policy.p3);
    var dot00 = v0.x * v0.x + v0.y * v0.y;
    var dot01 = v0.x * v1$$2.x + v0.y * v1$$2.y;
    var dot02 = v0.x * v2$$2.x + v0.y * v2$$2.y;
    var dot11 = v1$$2.x * v1$$2.x + v1$$2.y * v1$$2.y;
    var dot12 = v1$$2.x * v2$$2.x + v1$$2.y * v2$$2.y;
    var inv$$1 = 1 / (dot00 * dot11 - dot01 * dot01);
    var u = (dot11 * dot02 - dot01 * dot12) * inv$$1;
    var v$$3 = (dot00 * dot12 - dot01 * dot02) * inv$$1;
    var v13242 = u > 0;
    if (v13242) {
      v13242 = v$$3 > 0;
    }
    var v6242 = v13242;
    if (v6242) {
      v6242 = u + v$$3 < 1;
    }
    return v6242;
  }
  function v611(type$$58, pos$$54, dim$$23, canvas$$53) {
    var ctx$$24 = JAM.call(canvas$$53.getCtx, canvas$$53, [], JAM.policy.p3);
    var c1x$$1 = pos$$54.x;
    var c1y$$1 = pos$$54.y;
    var c2x$$1 = c1x$$1 + dim$$23;
    var c2y$$1 = pos$$54.y - dim$$23;
    var c3x$$1 = c2x$$1;
    var c3y$$1 = pos$$54.y + dim$$23;
    JAM.call(ctx$$24.beginPath, ctx$$24, [], JAM.policy.p3);
    JAM.call(ctx$$24.moveTo, ctx$$24, [c1x$$1, c1y$$1], JAM.policy.p3);
    JAM.call(ctx$$24.lineTo, ctx$$24, [c2x$$1, c2y$$1], JAM.policy.p3);
    JAM.call(ctx$$24.lineTo, ctx$$24, [c3x$$1, c3y$$1], JAM.policy.p3);
    JAM.call(ctx$$24.closePath, ctx$$24, [], JAM.policy.p3);
    JAM.call(ctx$$24[type$$58], ctx$$24, [], JAM.policy.p3);
    return;
  }
  function v610(graph$$20, id$$36, startDepth$$1, flags$$14) {
    function v609(adj$$33) {
      var n$$56 = adj$$33.nodeTo;
      var v13244 = n$$56._flag === false;
      if (v13244) {
        v13244 = JAM.call(filter$$6, null, [n$$56], JAM.policy.p3);
      }
      if (v13244) {
        if (n$$56._depth < 0) {
          n$$56._depth = node$$115._depth + 1 + startDepth$$1;
          if (!graph$$20.depth[n$$56._depth]) {
            JAM.set(graph$$20.depth, n$$56._depth, [], JAM.policy.p2);
          }
          var v6249 = graph$$20.depth[n$$56._depth];
          JAM.call(v6249.push, v6249, [n$$56], JAM.policy.p3);
        }
        JAM.call(queue$$2.unshift, queue$$2, [n$$56], JAM.policy.p3);
      }
      return;
    }
    function v608(elem$$60) {
      elem$$60._flag = false;
      elem$$60._depth = -1;
      return;
    }
    startDepth$$1 = startDepth$$1 || 0;
    var filter$$6 = JAM.call(this.filter, this, [flags$$14], JAM.policy.p3);
    JAM.call(this.eachNode, this, [graph$$20, v608, flags$$14], JAM.policy.p3);
    var root$$20 = JAM.call(graph$$20.getNode, graph$$20, [id$$36], JAM.policy.p3);
    root$$20._depth = startDepth$$1;
    var queue$$2 = [root$$20];
    graph$$20.depth = [];
    var that$$35 = this;
    var v6252 = queue$$2.length !== 0;
    for (;v6252;) {
      var node$$115 = JAM.call(queue$$2.pop, queue$$2, [], JAM.policy.p3);
      node$$115._flag = true;
      JAM.call(this.eachAdjacency, this, [node$$115, v609, flags$$14], JAM.policy.p3);
      v6252 = queue$$2.length !== 0;
    }
    return;
  }
  function v607(e$$46, win$$34, scroll$$4) {
    if (!this.config.zooming) {
      return;
    }
    var v6254 = $$$1.event;
    var v13253 = $$$1.event;
    JAM.call(v6254.stop, v6254, [JAM.call(v13253.get, v13253, [e$$46, win$$34], JAM.policy.p3)], JAM.policy.p3);
    var v6256 = this.viz;
    JAM.call(v6256.zoom, v6256, [scroll$$4], JAM.policy.p3);
    return;
  }
  function v606(adj$$32, pos$$53) {
    var orn$$17 = JAM.call(this.getOrientation, this, [adj$$32], JAM.policy.p3);
    var nodeFrom$$13 = adj$$32.nodeFrom;
    var nodeTo$$15 = adj$$32.nodeTo;
    var rel$$7 = nodeFrom$$13._depth < nodeTo$$15._depth;
    var v6259 = this.viz.geom;
    var v13255;
    if (rel$$7) {
      v13255 = nodeFrom$$13;
    } else {
      v13255 = nodeTo$$15;
    }
    var from$$16 = JAM.call(v6259.getEdge, v6259, [v13255, "begin", orn$$17], JAM.policy.p3);
    var v6261 = this.viz.geom;
    var v13257;
    if (rel$$7) {
      v13257 = nodeTo$$15;
    } else {
      v13257 = nodeFrom$$13;
    }
    var to$$17 = JAM.call(v6261.getEdge, v6261, [v13257, "end", orn$$17], JAM.policy.p3);
    var v6263 = this.edgeHelper.line;
    return JAM.call(v6263.contains, v6263, [from$$16, to$$17, pos$$53, this.edge.epsilon], JAM.policy.p3);
  }
  function v605(adj$$31, canvas$$52) {
    var orn$$16 = JAM.call(this.getOrientation, this, [adj$$31], JAM.policy.p3);
    var nodeFrom$$12 = adj$$31.nodeFrom;
    var nodeTo$$14 = adj$$31.nodeTo;
    var rel$$6 = nodeFrom$$12._depth < nodeTo$$14._depth;
    var v6267 = this.viz.geom;
    var v13261;
    if (rel$$6) {
      v13261 = nodeFrom$$12;
    } else {
      v13261 = nodeTo$$14;
    }
    var from$$15 = JAM.call(v6267.getEdge, v6267, [v13261, "begin", orn$$16], JAM.policy.p3);
    var v6269 = this.viz.geom;
    var v13263;
    if (rel$$6) {
      v13263 = nodeTo$$14;
    } else {
      v13263 = nodeFrom$$12;
    }
    var to$$16 = JAM.call(v6269.getEdge, v6269, [v13263, "end", orn$$16], JAM.policy.p3);
    var middle = {x:from$$15.x, y:to$$16.y};
    var v6273 = this.edgeHelper.line;
    JAM.call(v6273.render, v6273, [from$$15, middle, canvas$$52], JAM.policy.p3);
    var v6274 = this.edgeHelper.line;
    JAM.call(v6274.render, v6274, [middle, to$$16, canvas$$52], JAM.policy.p3);
    return;
  }
  function v604(adj$$30, canvas$$51) {
    var orn$$15 = JAM.call(this.getOrientation, this, [adj$$30], JAM.policy.p3);
    var nodeFrom$$11 = adj$$30.nodeFrom;
    var nodeTo$$13 = adj$$30.nodeTo;
    var rel$$5 = nodeFrom$$11._depth < nodeTo$$13._depth;
    var v6277 = this.viz.geom;
    var v13267;
    if (rel$$5) {
      v13267 = nodeFrom$$11;
    } else {
      v13267 = nodeTo$$13;
    }
    var begin$$13 = JAM.call(v6277.getEdge, v6277, [v13267, "begin", orn$$15], JAM.policy.p3);
    var v6279 = this.viz.geom;
    var v13269;
    if (rel$$5) {
      v13269 = nodeTo$$13;
    } else {
      v13269 = nodeFrom$$11;
    }
    var end$$3 = JAM.call(v6279.getEdge, v6279, [v13269, "end", orn$$15], JAM.policy.p3);
    var dim$$22 = JAM.call(adj$$30.getData, adj$$30, ["dim"], JAM.policy.p3);
    var ctx$$23 = JAM.call(canvas$$51.getCtx, canvas$$51, [], JAM.policy.p3);
    JAM.call(ctx$$23.beginPath, ctx$$23, [], JAM.policy.p3);
    JAM.call(ctx$$23.moveTo, ctx$$23, [begin$$13.x, begin$$13.y], JAM.policy.p3);
    switch(orn$$15) {
      case "left":
        JAM.call(ctx$$23.bezierCurveTo, ctx$$23, [begin$$13.x + dim$$22, begin$$13.y, end$$3.x - dim$$22, end$$3.y, end$$3.x, end$$3.y], JAM.policy.p3);
        break;
      case "right":
        JAM.call(ctx$$23.bezierCurveTo, ctx$$23, [begin$$13.x - dim$$22, begin$$13.y, end$$3.x + dim$$22, end$$3.y, end$$3.x, end$$3.y], JAM.policy.p3);
        break;
      case "top":
        JAM.call(ctx$$23.bezierCurveTo, ctx$$23, [begin$$13.x, begin$$13.y + dim$$22, end$$3.x, end$$3.y - dim$$22, end$$3.x, end$$3.y], JAM.policy.p3);
        break;
      case "bottom":
        JAM.call(ctx$$23.bezierCurveTo, ctx$$23, [begin$$13.x, begin$$13.y - dim$$22, end$$3.x, end$$3.y + dim$$22, end$$3.x, end$$3.y], JAM.policy.p3);
    }
    JAM.call(ctx$$23.stroke, ctx$$23, [], JAM.policy.p3);
    return;
  }
  function v603(adj$$29, canvas$$50) {
    var orn$$14 = JAM.call(this.getOrientation, this, [adj$$29], JAM.policy.p3);
    var nodeFrom$$10 = adj$$29.nodeFrom;
    var nodeTo$$12 = adj$$29.nodeTo;
    var rel$$4 = nodeFrom$$10._depth < nodeTo$$12._depth;
    var v6309 = this.viz.geom;
    var v13279;
    if (rel$$4) {
      v13279 = nodeFrom$$10;
    } else {
      v13279 = nodeTo$$12;
    }
    var begin$$12 = JAM.call(v6309.getEdge, v6309, [v13279, "begin", orn$$14], JAM.policy.p3);
    var v6311 = this.viz.geom;
    var v13281;
    if (rel$$4) {
      v13281 = nodeTo$$12;
    } else {
      v13281 = nodeFrom$$10;
    }
    var end$$2 = JAM.call(v6311.getEdge, v6311, [v13281, "end", orn$$14], JAM.policy.p3);
    var dim$$21 = JAM.call(adj$$29.getData, adj$$29, ["dim"], JAM.policy.p3);
    var ctx$$22 = JAM.call(canvas$$50.getCtx, canvas$$50, [], JAM.policy.p3);
    JAM.call(ctx$$22.beginPath, ctx$$22, [], JAM.policy.p3);
    JAM.call(ctx$$22.moveTo, ctx$$22, [begin$$12.x, begin$$12.y], JAM.policy.p3);
    switch(orn$$14) {
      case "left":
        JAM.call(ctx$$22.quadraticCurveTo, ctx$$22, [end$$2.x - dim$$21, end$$2.y, end$$2.x, end$$2.y], JAM.policy.p3);
        break;
      case "right":
        JAM.call(ctx$$22.quadraticCurveTo, ctx$$22, [end$$2.x + dim$$21, end$$2.y, end$$2.x, end$$2.y], JAM.policy.p3);
        break;
      case "top":
        JAM.call(ctx$$22.quadraticCurveTo, ctx$$22, [end$$2.x, end$$2.y - dim$$21, end$$2.x, end$$2.y], JAM.policy.p3);
        break;
      case "bottom":
        JAM.call(ctx$$22.quadraticCurveTo, ctx$$22, [end$$2.x, end$$2.y + dim$$21, end$$2.x, end$$2.y], JAM.policy.p3);
    }
    JAM.call(ctx$$22.stroke, ctx$$22, [], JAM.policy.p3);
    return;
  }
  function v602(adj$$28, canvas$$49) {
    var orn$$13 = JAM.call(this.getOrientation, this, [adj$$28], JAM.policy.p3);
    var nodeFrom$$9 = adj$$28.nodeFrom;
    var nodeTo$$11 = adj$$28.nodeTo;
    var rel$$3 = nodeFrom$$9._depth < nodeTo$$11._depth;
    var v6333 = this.viz.geom;
    var v13287;
    if (rel$$3) {
      v13287 = nodeFrom$$9;
    } else {
      v13287 = nodeTo$$11;
    }
    var begin$$11 = JAM.call(v6333.getEdge, v6333, [v13287, "begin", orn$$13], JAM.policy.p3);
    var v6335 = this.viz.geom;
    var v13289;
    if (rel$$3) {
      v13289 = nodeTo$$11;
    } else {
      v13289 = nodeFrom$$9;
    }
    var end$$1 = JAM.call(v6335.getEdge, v6335, [v13289, "end", orn$$13], JAM.policy.p3);
    var dim$$20 = JAM.call(adj$$28.getData, adj$$28, ["dim"], JAM.policy.p3);
    var ctx$$21 = JAM.call(canvas$$49.getCtx, canvas$$49, [], JAM.policy.p3);
    JAM.call(ctx$$21.beginPath, ctx$$21, [], JAM.policy.p3);
    JAM.call(ctx$$21.moveTo, ctx$$21, [begin$$11.x, begin$$11.y], JAM.policy.p3);
    switch(orn$$13) {
      case "left":
        JAM.call(ctx$$21.quadraticCurveTo, ctx$$21, [begin$$11.x + dim$$20, begin$$11.y, end$$1.x, end$$1.y], JAM.policy.p3);
        break;
      case "right":
        JAM.call(ctx$$21.quadraticCurveTo, ctx$$21, [begin$$11.x - dim$$20, begin$$11.y, end$$1.x, end$$1.y], JAM.policy.p3);
        break;
      case "top":
        JAM.call(ctx$$21.quadraticCurveTo, ctx$$21, [begin$$11.x, begin$$11.y + dim$$20, end$$1.x, end$$1.y], JAM.policy.p3);
        break;
      case "bottom":
        JAM.call(ctx$$21.quadraticCurveTo, ctx$$21, [begin$$11.x, begin$$11.y - dim$$20, end$$1.x, end$$1.y], JAM.policy.p3);
    }
    JAM.call(ctx$$21.stroke, ctx$$21, [], JAM.policy.p3);
    return;
  }
  function v601(adj$$27, pos$$52) {
    var orn$$12 = JAM.call(this.getOrientation, this, [adj$$27], JAM.policy.p3);
    var nodeFrom$$8 = adj$$27.nodeFrom;
    var nodeTo$$10 = adj$$27.nodeTo;
    var rel$$2 = nodeFrom$$8._depth < nodeTo$$10._depth;
    var v6357 = this.viz.geom;
    var v13295;
    if (rel$$2) {
      v13295 = nodeFrom$$8;
    } else {
      v13295 = nodeTo$$10;
    }
    var from$$14 = JAM.call(v6357.getEdge, v6357, [v13295, "begin", orn$$12], JAM.policy.p3);
    var v6359 = this.viz.geom;
    var v13297;
    if (rel$$2) {
      v13297 = nodeTo$$10;
    } else {
      v13297 = nodeFrom$$8;
    }
    var to$$15 = JAM.call(v6359.getEdge, v6359, [v13297, "end", orn$$12], JAM.policy.p3);
    var v6361 = this.edgeHelper.arrow;
    return JAM.call(v6361.contains, v6361, [from$$14, to$$15, pos$$52, this.edge.epsilon], JAM.policy.p3);
  }
  function v600(adj$$26, canvas$$48) {
    var orn$$11 = JAM.call(this.getOrientation, this, [adj$$26], JAM.policy.p3);
    var node$$114 = adj$$26.nodeFrom;
    var child$$1 = adj$$26.nodeTo;
    var dim$$19 = JAM.call(adj$$26.getData, adj$$26, ["dim"], JAM.policy.p3);
    var v6363 = this.viz.geom;
    var from$$13 = JAM.call(v6363.getEdge, v6363, [node$$114, "begin", orn$$11], JAM.policy.p3);
    var v6364 = this.viz.geom;
    var to$$14 = JAM.call(v6364.getEdge, v6364, [child$$1, "end", orn$$11], JAM.policy.p3);
    var direction$$3 = adj$$26.data.$direction;
    var v13302 = direction$$3;
    if (v13302) {
      v13302 = direction$$3.length > 1;
    }
    var v6366 = v13302;
    if (v6366) {
      v6366 = direction$$3[0] !== node$$114.id;
    }
    var inv = v6366;
    var v6367 = this.edgeHelper.arrow;
    JAM.call(v6367.render, v6367, [from$$13, to$$14, dim$$19, inv, canvas$$48], JAM.policy.p3);
    return;
  }
  function v599(adj$$25, pos$$51) {
    var orn$$10 = JAM.call(this.getOrientation, this, [adj$$25], JAM.policy.p3);
    var nodeFrom$$7 = adj$$25.nodeFrom;
    var nodeTo$$9 = adj$$25.nodeTo;
    var rel$$1 = nodeFrom$$7._depth < nodeTo$$9._depth;
    var v6370 = this.viz.geom;
    var v13307;
    if (rel$$1) {
      v13307 = nodeFrom$$7;
    } else {
      v13307 = nodeTo$$9;
    }
    var from$$12 = JAM.call(v6370.getEdge, v6370, [v13307, "begin", orn$$10], JAM.policy.p3);
    var v6372 = this.viz.geom;
    var v13309;
    if (rel$$1) {
      v13309 = nodeTo$$9;
    } else {
      v13309 = nodeFrom$$7;
    }
    var to$$13 = JAM.call(v6372.getEdge, v6372, [v13309, "end", orn$$10], JAM.policy.p3);
    var v6374 = this.edgeHelper.line;
    return JAM.call(v6374.contains, v6374, [from$$12, to$$13, pos$$51, this.edge.epsilon], JAM.policy.p3);
  }
  function v598(adj$$24, canvas$$47) {
    var orn$$9 = JAM.call(this.getOrientation, this, [adj$$24], JAM.policy.p3);
    var nodeFrom$$6 = adj$$24.nodeFrom;
    var nodeTo$$8 = adj$$24.nodeTo;
    var rel = nodeFrom$$6._depth < nodeTo$$8._depth;
    var v13312;
    if (rel) {
      v13312 = nodeFrom$$6;
    } else {
      v13312 = nodeTo$$8;
    }
    var v6378 = v13312;
    var from$$11 = JAM.call(v6378.getPos, v6378, [], JAM.policy.p3);
    var v13313;
    if (rel) {
      v13313 = nodeTo$$8;
    } else {
      v13313 = nodeFrom$$6;
    }
    var v6379 = v13313;
    var to$$12 = JAM.call(v6379.getPos, v6379, [], JAM.policy.p3);
    var JSCompiler_object_inline_x_90 = from$$11.x;
    var JSCompiler_object_inline_y_91 = from$$11.y;
    var middle2 = {x:JSCompiler_object_inline_x_90, y:to$$12.y};
    var v6381 = this.edgeHelper.line;
    JAM.call(v6381.render, v6381, [from$$11, middle2, canvas$$47], JAM.policy.p3);
    var v6382 = this.edgeHelper.line;
    JAM.call(v6382.render, v6382, [middle2, to$$12, canvas$$47], JAM.policy.p3);
    var v13316 = !JAM.call(nodeTo$$8.anySubnode, nodeTo$$8, [], JAM.policy.p3);
    if (v13316) {
      v13316 = this.config.alignName;
    }
    if (v13316) {
      var ctx$$20 = JAM.call(canvas$$47.getCtx, canvas$$47, [], JAM.policy.p3);
      JAM.call(ctx$$20.save, ctx$$20, [], JAM.policy.p3);
      ctx$$20.lineWidth = 2;
      ctx$$20.lineCap = "butt";
      ctx$$20.fillStyle = ctx$$20.strokeStyle = "#ccb";
      JAM.call(ctx$$20.beginPath, ctx$$20, [], JAM.policy.p3);
      JAM.call(ctx$$20.dashedLine, ctx$$20, [to$$12.x, to$$12.y, this.viz.graph.maxXpos, to$$12.y, [4, 2]], JAM.policy.p3);
      JAM.call(ctx$$20.closePath, ctx$$20, [], JAM.policy.p3);
      JAM.call(ctx$$20.stroke, ctx$$20, [], JAM.policy.p3);
      JAM.call(ctx$$20.restore, ctx$$20, [], JAM.policy.p3);
    }
    return;
  }
  function v597(node$$113, pos$$50) {
    if (!node$$113.exist) {
      return false;
    }
    var width$$30 = JAM.call(node$$113.getData, node$$113, ["width"], JAM.policy.p3);
    var height$$28 = JAM.call(node$$113.getData, node$$113, ["height"], JAM.policy.p3);
    var dim$$18 = JAM.call(node$$113.getData, node$$113, ["dim"], JAM.policy.p3);
    var v13319 = node$$113.pos;
    var npos$$10 = JAM.call(this.getAlignedPos, this, [JAM.call(v13319.getc, v13319, [true], JAM.policy.p3), width$$30, height$$28], JAM.policy.p3);
    var v6391 = this.nodeHelper.triangle;
    return JAM.call(v6391.contains, v6391, [{x:npos$$10.x + width$$30 / 2, y:npos$$10.y + height$$28 / 2}, pos$$50, dim$$18], JAM.policy.p3);
  }
  function v596(node$$112, canvas$$46) {
    var width$$29 = JAM.call(node$$112.getData, node$$112, ["width"], JAM.policy.p3);
    var height$$27 = JAM.call(node$$112.getData, node$$112, ["height"], JAM.policy.p3);
    var dim$$17 = JAM.call(node$$112.getData, node$$112, ["dim"], JAM.policy.p3);
    var v13323 = node$$112.pos;
    var pos$$49 = JAM.call(this.getAlignedPos, this, [JAM.call(v13323.getc, v13323, [true], JAM.policy.p3), width$$29, height$$27], JAM.policy.p3);
    var v6394 = this.nodeHelper.triangle;
    JAM.call(v6394.render, v6394, ["fill", {x:pos$$49.x + width$$29 / 2, y:pos$$49.y + height$$27 / 2}, dim$$17, canvas$$46], JAM.policy.p3);
    return;
  }
  function v595(node$$111, pos$$48) {
    if (!node$$111.exist) {
      return false;
    }
    var width$$28 = JAM.call(node$$111.getData, node$$111, ["width"], JAM.policy.p3);
    var height$$26 = JAM.call(node$$111.getData, node$$111, ["height"], JAM.policy.p3);
    var v13328 = node$$111.pos;
    var npos$$9 = JAM.call(this.getAlignedPos, this, [JAM.call(v13328.getc, v13328, [true], JAM.policy.p3), width$$28, height$$26], JAM.policy.p3);
    var v6398 = this.nodeHelper.rectangle;
    JAM.call(v6398.contains, v6398, [{x:npos$$9.x + width$$28 / 2, y:npos$$9.y + height$$26 / 2}, pos$$48, width$$28, height$$26], JAM.policy.p3);
    return;
  }
  function v594(node$$110, canvas$$45) {
    var width$$27 = JAM.call(node$$110.getData, node$$110, ["width"], JAM.policy.p3);
    var height$$25 = JAM.call(node$$110.getData, node$$110, ["height"], JAM.policy.p3);
    var v13332 = node$$110.pos;
    var pos$$47 = JAM.call(this.getAlignedPos, this, [JAM.call(v13332.getc, v13332, [true], JAM.policy.p3), width$$27, height$$25], JAM.policy.p3);
    var v6401 = this.nodeHelper.rectangle;
    JAM.call(v6401.render, v6401, ["fill", {x:pos$$47.x + width$$27 / 2, y:pos$$47.y + height$$25 / 2}, width$$27, height$$25, canvas$$45], JAM.policy.p3);
    return;
  }
  function v593(node$$109, pos$$46) {
    if (!node$$109.exist) {
      return false;
    }
    var width$$26 = JAM.call(node$$109.getData, node$$109, ["width"], JAM.policy.p3);
    var height$$24 = JAM.call(node$$109.getData, node$$109, ["height"], JAM.policy.p3);
    var v13337 = node$$109.pos;
    var npos$$8 = JAM.call(this.getAlignedPos, this, [JAM.call(v13337.getc, v13337, [true], JAM.policy.p3), width$$26, height$$24], JAM.policy.p3);
    var v6405 = this.nodeHelper.ellipse;
    JAM.call(v6405.contains, v6405, [{x:npos$$8.x + width$$26 / 2, y:npos$$8.y + height$$24 / 2}, pos$$46, width$$26, height$$24], JAM.policy.p3);
    return;
  }
  function v592(node$$108, canvas$$44) {
    var width$$25 = JAM.call(node$$108.getData, node$$108, ["width"], JAM.policy.p3);
    var height$$23 = JAM.call(node$$108.getData, node$$108, ["height"], JAM.policy.p3);
    var v13341 = node$$108.pos;
    var pos$$45 = JAM.call(this.getAlignedPos, this, [JAM.call(v13341.getc, v13341, [true], JAM.policy.p3), width$$25, height$$23], JAM.policy.p3);
    var v6408 = this.nodeHelper.ellipse;
    JAM.call(v6408.render, v6408, ["fill", {x:pos$$45.x + width$$25 / 2, y:pos$$45.y + height$$23 / 2}, width$$25, height$$23, canvas$$44], JAM.policy.p3);
    return;
  }
  function v591(node$$107, pos$$44) {
    if (!node$$107.exist) {
      return false;
    }
    var dim$$16 = JAM.call(node$$107.getData, node$$107, ["dim"], JAM.policy.p3);
    var v13346 = node$$107.pos;
    var npos$$7 = JAM.call(this.getAlignedPos, this, [JAM.call(v13346.getc, v13346, [true], JAM.policy.p3), dim$$16, dim$$16], JAM.policy.p3);
    var dim2$$3 = dim$$16 / 2;
    var v6412 = this.nodeHelper.square;
    return JAM.call(v6412.contains, v6412, [{x:npos$$7.x, y:npos$$7.y + dim2$$3}, pos$$44, dim2$$3], JAM.policy.p3);
  }
  function v590(node$$106, canvas$$43) {
    var dim$$15 = JAM.call(node$$106.getData, node$$106, ["dim"], JAM.policy.p3);
    var dim2$$2 = dim$$15 / 2;
    var v13350 = node$$106.pos;
    var pos$$43 = JAM.call(this.getAlignedPos, this, [JAM.call(v13350.getc, v13350, [true], JAM.policy.p3), dim$$15, dim$$15], JAM.policy.p3);
    var v6415 = this.nodeHelper.square;
    JAM.call(v6415.render, v6415, ["fill", {x:pos$$43.x, y:pos$$43.y + dim2$$2}, dim2$$2, canvas$$43], JAM.policy.p3);
    return;
  }
  function v589(node$$105, pos$$42) {
    if (!node$$105.exist) {
      return false;
    }
    var dim$$14 = JAM.call(node$$105.getData, node$$105, ["dim"], JAM.policy.p3);
    var v13355 = node$$105.pos;
    var npos$$6 = JAM.call(this.getAlignedPos, this, [JAM.call(v13355.getc, v13355, [true], JAM.policy.p3), dim$$14, dim$$14], JAM.policy.p3);
    var dim2$$1 = dim$$14 / 2;
    var v6419 = this.nodeHelper.circle;
    return JAM.call(v6419.contains, v6419, [{x:npos$$6.x, y:npos$$6.y + dim2$$1}, pos$$42, dim2$$1 + 10], JAM.policy.p3);
  }
  function v588(node$$104, canvas$$42) {
    var dim$$13 = JAM.call(node$$104.getData, node$$104, ["dim"], JAM.policy.p3);
    var v13359 = node$$104.pos;
    var pos$$41 = JAM.call(this.getAlignedPos, this, [JAM.call(v13359.getc, v13359, [true], JAM.policy.p3), dim$$13, dim$$13], JAM.policy.p3);
    var dim2 = dim$$13 / 2;
    var v6423 = this.nodeHelper.circle;
    JAM.call(v6423.render, v6423, ["fill", {x:pos$$41.x, y:pos$$41.y + dim2}, dim2, canvas$$42], JAM.policy.p3);
    return;
  }
  function v587(viz$$30) {
    this.viz = viz$$30;
    return;
  }
  function v586(viz$$29) {
    this.viz = viz$$29;
    return;
  }
  function v585(tag$$4, node$$103, controller$$11) {
    var v13363 = node$$103.pos;
    var v6425 = JAM.call(v13363.getc, v13363, [true], JAM.policy.p3);
    var pos$$40 = JAM.call(v6425.clone, v6425, [], JAM.policy.p3);
    var config$$16 = this.viz.config;
    var dim$$12 = config$$16.Node;
    var canvas$$41 = this.viz.canvas;
    var w$$10 = JAM.call(node$$103.getData, node$$103, ["width"], JAM.policy.p3);
    var h$$8 = JAM.call(node$$103.getData, node$$103, ["height"], JAM.policy.p3);
    var radius$$6 = JAM.call(canvas$$41.getSize, canvas$$41, [], JAM.policy.p3);
    var labelPos;
    var orn$$8;
    if (config$$16.alignName) {
      pos$$40.x = this.viz.graph.maxXpos;
    }
    var ox$$5 = canvas$$41.translateOffsetX;
    var oy$$6 = canvas$$41.translateOffsetY;
    var sx$$6 = canvas$$41.scaleOffsetX;
    var sy$$6 = canvas$$41.scaleOffsetY;
    var posx = pos$$40.x * sx$$6 + ox$$5;
    var posy = pos$$40.y * sy$$6 + oy$$6;
    if (dim$$12.align === "left") {
      labelPos = {x:JAM.call(Math.round, Math, [posx + 10], JAM.policy.p3), y:JAM.call(Math.round, Math, [posy - h$$8 / 2], JAM.policy.p3)};
      var v13370 = !controller$$11.alignName;
      if (v13370) {
        v13370 = !node$$103.data.leaf;
      }
      if (v13370) {
        labelPos.x = labelPos.x + controller$$11.collapsedXOffset;
      }
      tag$$4.style.textAlign = "left";
    } else {
      throw "align: not implemented";
    }
    var style$$6 = tag$$4.style;
    style$$6.left = labelPos.x + "px";
    style$$6.top = labelPos.y + "px";
    var v6439 = style$$6;
    var v13373;
    if (JAM.call(this.fitsInCanvas, this, [labelPos, canvas$$41], JAM.policy.p3)) {
      v13373 = "inline";
    } else {
      v13373 = "none";
    }
    v6439.display = v13373;
    JAM.call(controller$$11.onPlaceLabel, controller$$11, [tag$$4, node$$103], JAM.policy.p3);
    return;
  }
  function v584(canvas$$40, node$$102, controller$$10) {
    var ctx$$19 = JAM.call(canvas$$40.getCtx, canvas$$40, [], JAM.policy.p3);
    var v6440 = node$$102.pos;
    var coord = JAM.call(v6440.getc, v6440, [true], JAM.policy.p3);
    var width$$24 = JAM.call(node$$102.getData, node$$102, ["width"], JAM.policy.p3);
    var height$$22 = JAM.call(node$$102.getData, node$$102, ["height"], JAM.policy.p3);
    var v6441 = this.viz.fx;
    var pos$$39 = JAM.call(v6441.getAlignedPos, v6441, [coord, width$$24, height$$22], JAM.policy.p3);
    JAM.call(ctx$$19.fillText, ctx$$19, [node$$102.name, pos$$39.x + width$$24 / 2, pos$$39.y + height$$22 / 2], JAM.policy.p3);
    return;
  }
  function v583(adj$$23) {
    var config$$15 = this.config;
    var orn$$7 = config$$15.orientation;
    if (config$$15.multitree) {
      var nodeFrom$$5 = adj$$23.nodeFrom;
      var nodeTo$$7 = adj$$23.nodeTo;
      var v13379 = "$orn" in nodeFrom$$5.data;
      if (v13379) {
        v13379 = nodeFrom$$5.data.$orn;
      }
      var v6445 = v13379;
      if (!v6445) {
        var v13380 = "$orn" in nodeTo$$7.data;
        if (v13380) {
          v13380 = nodeTo$$7.data.$orn;
        }
        v6445 = v13380;
      }
      orn$$7 = v6445;
    }
    return orn$$7;
  }
  function v582(pos$$38, width$$23, height$$21) {
    var nconfig = this.node;
    var square;
    var orn$$6;
    if (nconfig.align === "center") {
      square = {x:pos$$38.x - width$$23 / 2, y:pos$$38.y - height$$21 / 2};
    } else {
      if (nconfig.align === "left") {
        orn$$6 = this.config.orientation;
        var v13388 = orn$$6 === "bottom";
        if (!v13388) {
          v13388 = orn$$6 === "top";
        }
        if (v13388) {
          square = {x:pos$$38.x - width$$23 / 2, y:pos$$38.y};
        } else {
          square = {x:pos$$38.x, y:pos$$38.y - height$$21 / 2};
        }
      } else {
        if (nconfig.align === "right") {
          orn$$6 = this.config.orientation;
          var v13394 = orn$$6 === "bottom";
          if (!v13394) {
            v13394 = orn$$6 === "top";
          }
          if (v13394) {
            square = {x:pos$$38.x - width$$23 / 2, y:pos$$38.y - height$$21};
          } else {
            square = {x:pos$$38.x - width$$23, y:pos$$38.y - height$$21 / 2};
          }
        } else {
          throw "align: not implemented";
        }
      }
    }
    return square;
  }
  function v581(node$$101, opt$$26, scale$$1, animating$$6) {
    function v580(n$$55, ch$$13) {
      var v6464 = config$$14.multitree;
      if (v6464) {
        v6464 = !("$orn" in node$$101.data);
      }
      var root$$19 = v6464;
      var v6465 = root$$19;
      if (v6465) {
        v6465 = JAM.call(node$$101.getData, node$$101, ["orns"], JAM.policy.p3);
      }
      var orns$$3 = v6465;
      var v6466 = !root$$19;
      if (!v6466) {
        v6466 = JAM.call(orns$$3.indexOf, orns$$3, [JAM.call(node$$101.getData, node$$101, ["orn"], JAM.policy.p3)], JAM.policy.p3) > -1;
      }
      return v6466;
    }
    var viz$$28 = this.viz;
    var canvas$$39 = viz$$28.canvas;
    var config$$14 = viz$$28.config;
    scale$$1 = JAM.call(Math.min, Math, [JAM.call(Math.max, Math, [.001, scale$$1], JAM.policy.p3), 1], JAM.policy.p3);
    if (scale$$1 >= 0) {
      node$$101.drawn = false;
      var ctx$$18 = JAM.call(canvas$$39.getCtx, canvas$$39, [], JAM.policy.p3);
      var v6468 = viz$$28.geom;
      var diff$$4 = JAM.call(v6468.getScaledTreePosition, v6468, [node$$101, scale$$1], JAM.policy.p3);
      JAM.call(ctx$$18.translate, ctx$$18, [diff$$4.x, diff$$4.y], JAM.policy.p3);
      JAM.call(ctx$$18.scale, ctx$$18, [scale$$1, scale$$1], JAM.policy.p3);
    }
    JAM.call(this.plotTree, this, [node$$101, JAM.call($$$1.merge, $$$1, [opt$$26, {"withLabels":true, "hideLabels":!!scale$$1, "plotSubtree":v580}], JAM.policy.p3), animating$$6], JAM.policy.p3);
    if (scale$$1 >= 0) {
      node$$101.drawn = true;
    }
    return;
  }
  function v579(node$$100, opt$$25, animating$$5) {
    function v578(elem$$59) {
      var v18731 = JAM.call(opt$$25.plotSubtree, opt$$25, [node$$100, elem$$59], JAM.policy.p3);
      if (v18731) {
        v18731 = elem$$59.exist;
      }
      var v13405 = v18731;
      if (v13405) {
        v13405 = elem$$59.drawn;
      }
      if (v13405) {
        var adj$$22 = JAM.call(node$$100.getAdjacency, node$$100, [elem$$59.id], JAM.policy.p3);
        var v6475 = !animating$$5;
        if (v6475) {
          JAM.call(opt$$25.onBeforePlotLine, opt$$25, [adj$$22], JAM.policy.p3);
        }
        JAM.call(that$$34.plotLine, that$$34, [adj$$22, canvas$$38, animating$$5], JAM.policy.p3);
        var v6476 = !animating$$5;
        if (v6476) {
          JAM.call(opt$$25.onAfterPlotLine, opt$$25, [adj$$22], JAM.policy.p3);
        }
        JAM.call(that$$34.plotTree, that$$34, [elem$$59, opt$$25, animating$$5], JAM.policy.p3);
      }
      return;
    }
    var that$$34 = this;
    var viz$$27 = this.viz;
    var canvas$$38 = viz$$27.canvas;
    var config$$13 = this.config;
    var ctx$$17 = JAM.call(canvas$$38.getCtx, canvas$$38, [], JAM.policy.p3);
    var nodeAlpha$$2 = JAM.call(node$$100.getData, node$$100, ["alpha"], JAM.policy.p3);
    if (viz$$27.clickedNode.id === node$$100.id) {
      JAM.call(ctx$$17.save, ctx$$17, [], JAM.policy.p3);
      ctx$$17.strokeStyle = "yellow";
    }
    JAM.call(node$$100.eachSubnode, node$$100, [v578], JAM.policy.p3);
    if (node$$100.drawn) {
      var v6479 = !animating$$5;
      if (v6479) {
        JAM.call(opt$$25.onBeforePlotNode, opt$$25, [node$$100], JAM.policy.p3);
      }
      JAM.call(this.plotNode, this, [node$$100, canvas$$38, animating$$5], JAM.policy.p3);
      var v6480 = !animating$$5;
      if (v6480) {
        JAM.call(opt$$25.onAfterPlotNode, opt$$25, [node$$100], JAM.policy.p3);
      }
      var v18733 = !opt$$25.hideLabels;
      if (v18733) {
        v18733 = opt$$25.withLabels;
      }
      var v13408 = v18733;
      if (v13408) {
        v13408 = nodeAlpha$$2 >= .95;
      }
      if (v13408) {
        var v6481 = this.labels;
        JAM.call(v6481.plotLabel, v6481, [canvas$$38, node$$100, opt$$25], JAM.policy.p3);
      } else {
        var v6482 = this.labels;
        JAM.call(v6482.hideLabel, v6482, [node$$100, false], JAM.policy.p3);
      }
    } else {
      var v6484 = this.labels;
      JAM.call(v6484.hideLabel, v6484, [node$$100, true], JAM.policy.p3);
    }
    if (viz$$27.clickedNode.id === node$$100.id) {
      JAM.call(ctx$$17.restore, ctx$$17, [], JAM.policy.p3);
    }
    return;
  }
  function v577(node$$99, action$$10, flags$$13) {
    function v576(node1, node2) {
      var v6487 = node1.data;
      var v13411 = node1.data.len;
      if (!v13411) {
        v13411 = 0;
      }
      v6487.len = v13411;
      var v6488 = node2.data;
      var v13412 = node2.data.len;
      if (!v13412) {
        v13412 = 0;
      }
      v6488.len = v13412;
      return node1.data.len - node2.data.len;
    }
    var adj$$21 = node$$99.adjacencies;
    var filter$$5 = JAM.call(this.filter, this, [flags$$13], JAM.policy.p3);
    var id$$35;
    var i$$84;
    var keys = JAM.new(Array, [], JAM.policy.p3);
    var nodeList$$1 = JAM.new(Array, [], JAM.policy.p3);
    for (id$$35 in adj$$21) {
      JAM.call(keys.push, keys, [id$$35], JAM.policy.p3);
      if (node$$99 !== adj$$21[id$$35].nodeTo) {
        JAM.call(nodeList$$1.push, nodeList$$1, [adj$$21[id$$35].nodeTo], JAM.policy.p3);
      } else {
        JAM.call(nodeList$$1.push, nodeList$$1, [adj$$21[id$$35].nodeFrom], JAM.policy.p3);
      }
    }
    if (JAM.call(isLateralise, null, [], JAM.policy.p3)) {
      var cmp = v576;
      nodeList$$1 = JAM.call(nodeList$$1.sort, nodeList$$1, [cmp], JAM.policy.p3);
      keys = JAM.new(Array, [], JAM.policy.p3);
      i$$84 = 0;
      var v6495 = i$$84 < nodeList$$1.length;
      for (;v6495;) {
        JAM.call(keys.push, keys, [nodeList$$1[i$$84].id], JAM.policy.p3);
        i$$84 = i$$84 + 1;
        v6495 = i$$84 < nodeList$$1.length;
      }
    }
    if (node$$99.data.rotate) {
      keys = JAM.call(keys.reverse, keys, [], JAM.policy.p3);
    }
    for (id$$35 in keys) {
      if (JAM.call(keys.hasOwnProperty, keys, [id$$35], JAM.policy.p3)) {
        var a$$11 = adj$$21[keys[id$$35]];
        if (JAM.call(filter$$5, null, [a$$11], JAM.policy.p3)) {
          if (a$$11.nodeFrom !== node$$99) {
            var tmp$$2 = a$$11.nodeFrom;
            a$$11.nodeFrom = a$$11.nodeTo;
            a$$11.nodeTo = tmp$$2;
          }
          JAM.call(action$$10, null, [a$$11, id$$35], JAM.policy.p3);
        }
      }
    }
    return;
  }
  function v575(node$$97, canvas$$37, level$$15) {
    function v574(level$$16, node$$98) {
      var v6502 = level$$16 === 0;
      if (!v6502) {
        v6502 = !JAM.call(node$$98.anySubnode, node$$98, [], JAM.policy.p3);
      }
      return v6502;
    }
    var csize = JAM.call(canvas$$37.getSize, canvas$$37, [], JAM.policy.p3);
    var v18740 = this.config.multitree;
    if (v18740) {
      v18740 = "$orn" in node$$97.data;
    }
    var v13425 = v18740;
    if (v13425) {
      v13425 = node$$97.data.$orn;
    }
    var v6503 = v13425;
    if (!v6503) {
      v6503 = this.config.orientation;
    }
    var s$$14 = v6503;
    var size$$10 = JAM.call(this.dispatch, this, [s$$14, csize.width, csize.height], JAM.policy.p3);
    var baseSize = JAM.call(this.getTreeBaseSize, this, [node$$97, level$$15, v574], JAM.policy.p3);
    return baseSize < size$$10;
  }
  function v573(node$$96, scale) {
    function $C$$2(a$$10, b$$7) {
      function v572() {
        var v13428 = node$$96.pos;
        var v6506 = JAM.call(v13428.add, v13428, [JAM.new(Complex, [a$$10, b$$7], JAM.policy.p3)], JAM.policy.p3);
        return JAM.call(v6506.$scale, v6506, [1 - scale], JAM.policy.p3);
      }
      return v572;
    }
    var dim$$11 = this.node;
    var w$$9 = JAM.call(node$$96.getData, node$$96, ["width"], JAM.policy.p3);
    var h$$7 = JAM.call(node$$96.getData, node$$96, ["height"], JAM.policy.p3);
    var v18742 = this.config.multitree;
    if (v18742) {
      v18742 = "$orn" in node$$96.data;
    }
    var v13430 = v18742;
    if (v13430) {
      v13430 = node$$96.data.$orn;
    }
    var v6508 = v13430;
    if (!v6508) {
      v6508 = this.config.orientation;
    }
    var s$$13 = v6508;
    if (dim$$11.align === "left") {
      return JAM.call(this.dispatch, this, [s$$13, JAM.call($C$$2, null, [0, h$$7], JAM.policy.p3), JAM.call($C$$2, null, [0, 0], JAM.policy.p3), JAM.call($C$$2, null, [0, 0], JAM.policy.p3), JAM.call($C$$2, null, [w$$9, 0], JAM.policy.p3)], JAM.policy.p3);
    } else {
      if (dim$$11.align === "center") {
        return JAM.call(this.dispatch, this, [s$$13, JAM.call($C$$2, null, [0, h$$7 / 2], JAM.policy.p3), JAM.call($C$$2, null, [-w$$9 / 2, 0], JAM.policy.p3), JAM.call($C$$2, null, [0, -h$$7 / 2], JAM.policy.p3), JAM.call($C$$2, null, [w$$9 / 2, 0], JAM.policy.p3)], JAM.policy.p3);
      } else {
        if (dim$$11.align === "right") {
          return JAM.call(this.dispatch, this, [s$$13, JAM.call($C$$2, null, [0, 0], JAM.policy.p3), JAM.call($C$$2, null, [-w$$9, 0], JAM.policy.p3), JAM.call($C$$2, null, [0, -h$$7], JAM.policy.p3), JAM.call($C$$2, null, [0, 0], JAM.policy.p3)], JAM.policy.p3);
        } else {
          throw "align: not implemented";
        }
      }
    }
    return;
  }
  function v571(node$$95, type$$57, s$$12) {
    function $C$$1(a$$9, b$$6) {
      function v570() {
        var v6524 = node$$95.pos;
        return JAM.call(v6524.add, v6524, [JAM.new(Complex, [a$$9, b$$6], JAM.policy.p3)], JAM.policy.p3);
      }
      return v570;
    }
    var dim$$10 = this.node;
    var w$$8 = JAM.call(node$$95.getData, node$$95, ["width"], JAM.policy.p3);
    var h$$6 = JAM.call(node$$95.getData, node$$95, ["height"], JAM.policy.p3);
    if (type$$57 === "begin") {
      if (dim$$10.align === "center") {
        return JAM.call(this.dispatch, this, [s$$12, JAM.call($C$$1, null, [0, h$$6 / 2], JAM.policy.p3), JAM.call($C$$1, null, [-w$$8 / 2, 0], JAM.policy.p3), JAM.call($C$$1, null, [0, -h$$6 / 2], JAM.policy.p3), JAM.call($C$$1, null, [w$$8 / 2, 0], JAM.policy.p3)], JAM.policy.p3);
      } else {
        if (dim$$10.align === "left") {
          return JAM.call(this.dispatch, this, [s$$12, JAM.call($C$$1, null, [0, h$$6], JAM.policy.p3), JAM.call($C$$1, null, [0, 0], JAM.policy.p3), JAM.call($C$$1, null, [0, 0], JAM.policy.p3), JAM.call($C$$1, null, [w$$8, 0], JAM.policy.p3)], JAM.policy.p3);
        } else {
          if (dim$$10.align === "right") {
            return JAM.call(this.dispatch, this, [s$$12, JAM.call($C$$1, null, [0, 0], JAM.policy.p3), JAM.call($C$$1, null, [-w$$8, 0], JAM.policy.p3), JAM.call($C$$1, null, [0, -h$$6], JAM.policy.p3), JAM.call($C$$1, null, [0, 0], JAM.policy.p3)], JAM.policy.p3);
          } else {
            throw "align: not implemented";
          }
        }
      }
    } else {
      if (type$$57 === "end") {
        if (dim$$10.align === "center") {
          return JAM.call(this.dispatch, this, [s$$12, JAM.call($C$$1, null, [0, -h$$6 / 2], JAM.policy.p3), JAM.call($C$$1, null, [w$$8 / 2, 0], JAM.policy.p3), JAM.call($C$$1, null, [0, h$$6 / 2], JAM.policy.p3), JAM.call($C$$1, null, [-w$$8 / 2, 0], JAM.policy.p3)], JAM.policy.p3);
        } else {
          if (dim$$10.align === "left") {
            return JAM.call(this.dispatch, this, [s$$12, JAM.call($C$$1, null, [0, 0], JAM.policy.p3), JAM.call($C$$1, null, [w$$8, 0], JAM.policy.p3), JAM.call($C$$1, null, [0, h$$6], JAM.policy.p3), JAM.call($C$$1, null, [0, 0], JAM.policy.p3)], JAM.policy.p3);
          } else {
            if (dim$$10.align === "right") {
              return JAM.call(this.dispatch, this, [s$$12, JAM.call($C$$1, null, [0, -h$$6], JAM.policy.p3), JAM.call($C$$1, null, [0, 0], JAM.policy.p3), JAM.call($C$$1, null, [0, 0], JAM.policy.p3), JAM.call($C$$1, null, [-w$$8, 0], JAM.policy.p3)], JAM.policy.p3);
            } else {
              throw "align: not implemented";
            }
          }
        }
      }
    }
    return;
  }
  function v569(node$$94, level$$14, leaf) {
    function v568(elem$$58) {
      baseHeight = baseHeight + JAM.call(that$$33.getTreeBaseSize, that$$33, [elem$$58, level$$14 - 1, leaf], JAM.policy.p3);
      return;
    }
    var size$$9 = JAM.call(this.getSize, this, [node$$94, true], JAM.policy.p3);
    var baseHeight = 0;
    var that$$33 = this;
    if (JAM.call(leaf, null, [level$$14, node$$94], JAM.policy.p3)) {
      return size$$9;
    }
    if (level$$14 === 0) {
      return 0;
    }
    JAM.call(node$$94.eachSubnode, node$$94, [v568], JAM.policy.p3);
    var v13462;
    if (size$$9 > baseHeight) {
      v13462 = size$$9;
    } else {
      v13462 = baseHeight;
    }
    return v13462 + this.config.subtreeOffset;
  }
  function v567(n$$54, invert$$1) {
    var data$$27 = n$$54.data;
    var config$$12 = this.config;
    var siblingOffset$$1 = config$$12.siblingOffset;
    var v18752 = config$$12.multitree;
    if (v18752) {
      v18752 = "$orn" in data$$27;
    }
    var v13464 = v18752;
    if (v13464) {
      v13464 = data$$27.$orn;
    }
    var v6562 = v13464;
    if (!v6562) {
      v6562 = config$$12.orientation;
    }
    var s$$11 = v6562;
    var w$$7 = JAM.call(n$$54.getData, n$$54, ["width"], JAM.policy.p3) + siblingOffset$$1;
    var h$$5 = JAM.call(n$$54.getData, n$$54, ["height"], JAM.policy.p3) + siblingOffset$$1;
    if (!invert$$1) {
      return JAM.call(this.dispatch, this, [s$$11, h$$5, w$$7], JAM.policy.p3);
    } else {
      return JAM.call(this.dispatch, this, [s$$11, w$$7, h$$5], JAM.policy.p3);
    }
    return;
  }
  function v566() {
    function val$$6(a$$8) {
      var v6566;
      if (typeof a$$8 === "function") {
        v6566 = JAM.call(a$$8, null, [], JAM.policy.p3);
      } else {
        v6566 = a$$8;
      }
      return v6566;
    }
    var v6567 = Array.prototype.slice;
    var args$$3 = JAM.call(v6567.call, v6567, [arguments], JAM.policy.p3);
    var s$$10 = JAM.call(args$$3.shift, args$$3, [], JAM.policy.p3);
    var len$$6 = args$$3.length;
    if (len$$6 === 2) {
      var v6568;
      var v18754 = s$$10 === "top";
      if (!v18754) {
        v18754 = s$$10 === "bottom";
      }
      if (v18754) {
        v6568 = JAM.call(val$$6, null, [args$$3[0]], JAM.policy.p3);
      } else {
        v6568 = JAM.call(val$$6, null, [args$$3[1]], JAM.policy.p3);
      }
      return v6568;
    } else {
      if (len$$6 === 4) {
        switch(s$$10) {
          case "top":
            return JAM.call(val$$6, null, [args$$3[0]], JAM.policy.p3);
          case "right":
            return JAM.call(val$$6, null, [args$$3[1]], JAM.policy.p3);
          case "bottom":
            return JAM.call(val$$6, null, [args$$3[2]], JAM.policy.p3);
          case "left":
            return JAM.call(val$$6, null, [args$$3[3]], JAM.policy.p3);
        }
      }
    }
    return undefined;
  }
  function v565(orn$$5) {
    this.config.orientation = orn$$5;
    return;
  }
  function v564(nodes$$11) {
    function v563(n$$53) {
      function v562(sn$$1) {
        JAM.call(ans$$17.push, ans$$17, [sn$$1], JAM.policy.p3);
        return;
      }
      var par$$1 = JAM.call(n$$53.getParents, n$$53, [], JAM.policy.p3);
      if (par$$1.length === 0) {
        JAM.set(siblings, n$$53.id, [n$$53], JAM.policy.p2);
      } else {
        var ans$$17 = [];
        var v6577 = par$$1[0];
        JAM.call(v6577.eachSubnode, v6577, [v562], JAM.policy.p3);
        JAM.set(siblings, n$$53.id, ans$$17, JAM.policy.p2);
      }
      return;
    }
    var siblings = {};
    JAM.call($$$1.each, $$$1, [nodes$$11, v563], JAM.policy.p3);
    return siblings;
  }
  function v561(delta$$23, controller$$9, animating$$4) {
    function v560(n$$52) {
      n$$52.drawn = true;
      return;
    }
    function v559(n$$51) {
      var v18755 = root$$18 && orns$$2;
      if (v18755) {
        v18755 = JAM.call(orns$$2.indexOf, orns$$2, [n$$51.data.$orn], JAM.policy.p3) > 0;
      }
      var v13472 = v18755;
      if (v13472) {
        v13472 = n$$51.drawn;
      }
      if (v13472) {
        n$$51.drawn = false;
        var v6580 = nds[node$$93.id];
        JAM.call(v6580.push, v6580, [n$$51], JAM.policy.p3);
      } else {
        var v18756 = !root$$18;
        if (!v18756) {
          v18756 = !orns$$2;
        }
        var v13474 = v18756;
        if (v13474) {
          v13474 = n$$51.drawn;
        }
        if (v13474) {
          n$$51.drawn = false;
          var v6581 = nds[node$$93.id];
          JAM.call(v6581.push, v6581, [n$$51], JAM.policy.p3);
        }
      }
      return;
    }
    var viz$$26 = this.viz;
    var config$$11 = this.config;
    var canvas$$36 = viz$$26.canvas;
    var ctx$$16 = JAM.call(canvas$$36.getCtx, canvas$$36, [], JAM.policy.p3);
    var nodes$$10 = this.nodes;
    var i$$83;
    var node$$93;
    var nds = {};
    i$$83 = 0;
    var v6587 = i$$83 < nodes$$10.length;
    for (;v6587;) {
      node$$93 = nodes$$10[i$$83];
      JAM.set(nds, node$$93.id, [], JAM.policy.p2);
      var v6585 = config$$11.multitree;
      if (v6585) {
        v6585 = !("$orn" in node$$93.data);
      }
      var root$$18 = v6585;
      var v6586 = root$$18;
      if (v6586) {
        v6586 = node$$93.data.$orns;
      }
      var orns$$2 = v6586;
      JAM.call(node$$93.eachSubgraph, node$$93, [v559], JAM.policy.p3);
      node$$93.drawn = true;
      i$$83 = i$$83 + 1;
      v6587 = i$$83 < nodes$$10.length;
    }
    if (nodes$$10.length > 0) {
      var v6588 = viz$$26.fx;
      JAM.call(v6588.plot, v6588, [], JAM.policy.p3);
    }
    for (i$$83 in nds) {
      JAM.call($$$1.each, $$$1, [nds[i$$83], v560], JAM.policy.p3);
    }
    i$$83 = 0;
    var v6592 = i$$83 < nodes$$10.length;
    for (;v6592;) {
      node$$93 = nodes$$10[i$$83];
      JAM.call(ctx$$16.save, ctx$$16, [], JAM.policy.p3);
      var v6591 = viz$$26.fx;
      JAM.call(v6591.plotSubtree, v6591, [node$$93, controller$$9, delta$$23, animating$$4], JAM.policy.p3);
      JAM.call(ctx$$16.restore, ctx$$16, [], JAM.policy.p3);
      i$$83 = i$$83 + 1;
      v6592 = i$$83 < nodes$$10.length;
    }
    return;
  }
  function v558(nodes$$9) {
    function v557(a$$7, b$$5) {
      return(a$$7._depth <= b$$5._depth) - (a$$7._depth >= b$$5._depth);
    }
    var ans$$16 = [];
    var config$$10 = this.config;
    var root$$17 = this.viz.root;
    var i$$82;
    var j$$13;
    var desc;
    JAM.call(nodes$$9.sort, nodes$$9, [v557], JAM.policy.p3);
    i$$82 = 0;
    var v6602 = i$$82 < nodes$$9.length;
    for (;v6602;) {
      var v13488 = nodes$$9[i$$82];
      if (JAM.call(v13488.anySubnode, v13488, ["exist"], JAM.policy.p3)) {
        j$$13 = i$$82 + 1;
        desc = false;
        var v13489 = !desc;
        if (v13489) {
          v13489 = j$$13 < nodes$$9.length;
        }
        var v6598 = v13489;
        for (;v6598;) {
          var v13490 = !config$$10.multitree;
          if (!v13490) {
            v13490 = "$orn" in nodes$$9[j$$13].data;
          }
          if (v13490) {
            var v6596 = desc;
            if (!v6596) {
              var v13491 = nodes$$9[i$$82];
              v6596 = JAM.call(v13491.isDescendantOf, v13491, [nodes$$9[j$$13].id], JAM.policy.p3);
            }
            desc = v6596;
          }
          j$$13 = j$$13 + 1;
          var v13494 = !desc;
          if (v13494) {
            v13494 = j$$13 < nodes$$9.length;
          }
          v6598 = v13494;
        }
        if (!desc) {
          JAM.call(ans$$16.push, ans$$16, [nodes$$9[i$$82]], JAM.policy.p3);
        }
      }
      i$$82 = i$$82 + 1;
      v6602 = i$$82 < nodes$$9.length;
    }
    return ans$$16;
  }
  function v556(nodes$$8) {
    var v31367 = JAM.call(this.getNodesWithChildren, this, [nodes$$8], JAM.policy.p3);
    this.nodes = v31367;
    return this.nodes;
  }
  function v555(nodes$$7) {
    function v554(n$$49) {
      function v553(n$$50) {
        if (n$$50.exist) {
          n$$50.drawn = true;
        }
        return;
      }
      function v552(ch$$12) {
        var v22364 = "$orn" in ch$$12.data;
        if (v22364) {
          v22364 = JAM.call(orns$$1.indexOf, orns$$1, [ch$$12.data.$orn], JAM.policy.p3) < 0;
        }
        var v18764 = v22364;
        if (v18764) {
          v18764 = ch$$12.exist;
        }
        var v13496 = v18764;
        if (v13496) {
          v13496 = !ch$$12.drawn;
        }
        if (v13496) {
          orns$$1 = orns$$1 + (ch$$12.data.$orn + " ");
        }
        return;
      }
      var v13498 = config$$9.multitree;
      if (v13498) {
        v13498 = !("$orn" in n$$49.data);
      }
      if (v13498) {
        delete n$$49.data.$orns;
        var orns$$1 = " ";
        JAM.call(n$$49.eachSubnode, n$$49, [v552], JAM.policy.p3);
        n$$49.data.$orns = orns$$1;
      }
      JAM.call(n$$49.eachLevel, n$$49, [0, config$$9.levelsToShow, v553], JAM.policy.p3);
      return;
    }
    var config$$9 = this.config;
    JAM.call(this.prepare, this, [nodes$$7], JAM.policy.p3);
    JAM.call($$$1.each, $$$1, [nodes$$7, v554], JAM.policy.p3);
    return;
  }
  function v551(nodes$$6, controller$$8) {
    function v550() {
      JAM.call(that$$32.plotStep, that$$32, [undefined, controller$$8, false], JAM.policy.p3);
      JAM.call(controller$$8.onComplete, controller$$8, [], JAM.policy.p3);
      return;
    }
    function v549(delta$$22) {
      JAM.call(that$$32.plotStep, that$$32, [delta$$22, controller$$8, this.$animating], JAM.policy.p3);
      this.$animating = "expand";
      return;
    }
    var that$$32 = this;
    JAM.call(this.show, this, [nodes$$6], JAM.policy.p3);
    var v13499 = this.animation;
    var v6610 = JAM.call(v13499.setOptions, v13499, [JAM.call($$$1.merge, $$$1, [controller$$8, {$animating:false, compute:v549, complete:v550}], JAM.policy.p3)], JAM.policy.p3);
    JAM.call(v6610.start, v6610, [], JAM.policy.p3);
    return;
  }
  function v548(nodes$$5, controller$$7) {
    function v547(n$$48) {
      JAM.call(ids$$1.push, ids$$1, [n$$48.id], JAM.policy.p3);
      return;
    }
    function v546(elem$$57) {
      if (elem$$57.exist) {
        JAM.call($$$1.extend, $$$1, [elem$$57, {"drawn":false, "exist":false}], JAM.policy.p3);
      }
      return;
    }
    var viz$$25 = this.viz;
    var i$$81;
    i$$81 = 0;
    var v6620 = i$$81 < nodes$$5.length;
    for (;v6620;) {
      var v18769 = true;
      if (!v18769) {
        v18769 = !controller$$7;
      }
      var v13502 = v18769;
      if (!v13502) {
        v13502 = !controller$$7.request;
      }
      if (v13502) {
        var v6614 = nodes$$5[i$$81];
        JAM.call(v6614.eachLevel, v6614, [1, false, v546], JAM.policy.p3);
      } else {
        var ids$$1 = [];
        var v6615 = nodes$$5[i$$81];
        JAM.call(v6615.eachLevel, v6615, [1, false, v547], JAM.policy.p3);
        var v6616 = viz$$25.op;
        JAM.call(v6616.removeNode, v6616, [ids$$1, {"type":"nothing"}], JAM.policy.p3);
        var v6618 = viz$$25.labels;
        JAM.call(v6618.clearLabels, v6618, [], JAM.policy.p3);
      }
      i$$81 = i$$81 + 1;
      v6620 = i$$81 < nodes$$5.length;
    }
    JAM.call(controller$$7.onComplete, controller$$7, [], JAM.policy.p3);
    return;
  }
  function v545(nodes$$4, controller$$6) {
    function v544() {
      JAM.call(that$$31.hide, that$$31, [nodes$$4, controller$$6], JAM.policy.p3);
      return;
    }
    function v543(delta$$21) {
      if (delta$$21 === 1) {
        delta$$21 = .99;
      }
      JAM.call(that$$31.plotStep, that$$31, [1 - delta$$21, controller$$6, this.$animating], JAM.policy.p3);
      this.$animating = "contract";
      return;
    }
    var viz$$24 = this.viz;
    var that$$31 = this;
    nodes$$4 = JAM.call(this.prepare, this, [nodes$$4], JAM.policy.p3);
    var v13504 = this.animation;
    var v6624 = JAM.call(v13504.setOptions, v13504, [JAM.call($$$1.merge, $$$1, [controller$$6, {$animating:false, compute:v543, complete:v544}], JAM.policy.p3)], JAM.policy.p3);
    JAM.call(v6624.start, v6624, [], JAM.policy.p3);
    return;
  }
  function v542(nodes$$3, controller$$5) {
    function v541(nodeId, data$$26) {
      var v13506 = data$$26;
      if (v13506) {
        v13506 = data$$26.children;
      }
      if (v13506) {
        data$$26.id = nodeId;
        var v6625 = viz$$23.op;
        JAM.call(v6625.sum, v6625, [data$$26, {type:"nothing"}], JAM.policy.p3);
      }
      if ((counter = counter + 1) === len$$5) {
        var v6628 = viz$$23.graph;
        JAM.call(v6628.computeLevels, v6628, [viz$$23.root, 0], JAM.policy.p3);
        JAM.call(controller$$5.onComplete, controller$$5, [], JAM.policy.p3);
      }
      return;
    }
    var counter = 0;
    var len$$5 = nodes$$3.length;
    var nodeSelected = {};
    var i$$80;
    var viz$$23 = this.viz;
    if (len$$5 === 0) {
      JAM.call(controller$$5.onComplete, controller$$5, [], JAM.policy.p3);
    }
    i$$80 = 0;
    var v6636 = i$$80 < len$$5;
    for (;v6636;) {
      JAM.set(nodeSelected, nodes$$3[i$$80].id, nodes$$3[i$$80], JAM.policy.p2);
      JAM.call(controller$$5.request, controller$$5, [nodes$$3[i$$80].id, nodes$$3[i$$80]._level, {onComplete:v541}], JAM.policy.p3);
      i$$80 = i$$80 + 1;
      v6636 = i$$80 < len$$5;
    }
    return;
  }
  function v540(viz$$22) {
    this.viz = viz$$22;
    this.canvas = viz$$22.canvas;
    this.config = viz$$22.config;
    var v31368 = JAM.new(Animation, [], JAM.policy.p3);
    this.animation = v31368;
    this.nodes = null;
    return;
  }
  function v539() {
    function v538(id$$34, options$$11) {
      var canvas$$35 = this.canvas;
      var that$$30 = this;
      var Geom$$3 = this.geom;
      var config$$8 = this.config;
      var v18773 = config$$8.offsetX;
      if (!v18773) {
        v18773 = 0;
      }
      var v13511 = v18773;
      var v18774 = config$$8.offsetY;
      if (!v18774) {
        v18774 = 0;
      }
      var innerController = {Move:{enable:true, offsetX:v13511, offsetY:v18774}, setRightLevelToShowConfig:false, onBeforeRequest:$$$1.empty, onBeforeContract:$$$1.empty, onBeforeMove:$$$1.empty, onBeforeExpand:$$$1.empty};
      var complete$$1 = JAM.call($$$1.merge, $$$1, [this.controller, innerController, options$$11], JAM.policy.p3);
      if (!this.busy) {
        this.busy = true;
        var v6643 = this.graph;
        var node$$92 = JAM.call(v6643.getNode, v6643, [id$$34], JAM.policy.p3);
        JAM.call(this.selectPath, this, [node$$92, this.clickedNode], JAM.policy.p3);
        this.clickedNode = node$$92;
        JAM.call(complete$$1.onBeforeCompute, complete$$1, [node$$92], JAM.policy.p3);
        JAM.call(complete$$1.onBeforeRequest, complete$$1, [node$$92], JAM.policy.p3);
        JAM.call(complete$$1.onBeforeContract, complete$$1, [node$$92], JAM.policy.p3);
        JAM.call(Geom$$3.setRightLevelToShow, Geom$$3, [node$$92, canvas$$35, complete$$1.setRightLevelToShowConfig], JAM.policy.p3);
        JAM.call(complete$$1.onBeforeMove, complete$$1, [node$$92], JAM.policy.p3);
        var nodes$$2 = JAM.call(getNodesToShow.call, getNodesToShow, [this, node$$92], JAM.policy.p3);
        var v6646 = that$$30.group;
        JAM.call(v6646.show, v6646, [nodes$$2], JAM.policy.p3);
        JAM.call(that$$30.computePositions, that$$30, [node$$92, ""], JAM.policy.p3);
        JAM.call(complete$$1.onAfterCompute, complete$$1, [id$$34], JAM.policy.p3);
        this.busy = false;
      }
      return;
    }
    function v537(id$$33, onComplete$$9) {
      function v536() {
        function v535(n$$47) {
          var v6648 = n$$47.pos;
          var pos$$37 = JAM.call(v6648.getc, v6648, [true], JAM.policy.p3);
          var v6649 = n$$47.startPos;
          JAM.call(v6649.setc, v6649, [pos$$37.x, pos$$37.y], JAM.policy.p3);
          var v6652 = n$$47.endPos;
          JAM.call(v6652.setc, v6652, [pos$$37.x, pos$$37.y], JAM.policy.p3);
          n$$47.visited = false;
          return;
        }
        JAM.call(group$$1.hide, group$$1, [JAM.call(group$$1.prepare, group$$1, [JAM.call(getNodesToHide.call, getNodesToHide, [that$$29], JAM.policy.p3)], JAM.policy.p3), complete], JAM.policy.p3);
        JAM.call(geom$$5.setRightLevelToShow, geom$$5, [node$$91, canvas$$34], JAM.policy.p3);
        JAM.call(that$$29.compute, that$$29, ["current"], JAM.policy.p3);
        var v6656 = that$$29.graph;
        JAM.call(v6656.eachNode, v6656, [v535], JAM.policy.p3);
        var offset$$11 = {x:complete.offsetX, y:complete.offsetY};
        var v6659 = that$$29.geom;
        var v18775 = node$$91.endPos;
        var v13515 = JAM.call(v18775.add, v18775, [offset$$11], JAM.policy.p3);
        JAM.call(v6659.translate, v6659, [JAM.call(v13515.$scale, v13515, [-1], JAM.policy.p3), ["start", "current", "end"]], JAM.policy.p3);
        JAM.call(group$$1.show, group$$1, [JAM.call(getNodesToShow.call, getNodesToShow, [that$$29], JAM.policy.p3)], JAM.policy.p3);
        JAM.call(that$$29.plot, that$$29, [], JAM.policy.p3);
        JAM.call(complete.onAfterCompute, complete, [that$$29.clickedNode], JAM.policy.p3);
        JAM.call(complete.onComplete, complete, [], JAM.policy.p3);
        return;
      }
      var group$$1 = this.group;
      var geom$$5 = this.geom;
      var v6664 = this.graph;
      var node$$91 = JAM.call(v6664.getNode, v6664, [id$$33], JAM.policy.p3);
      var canvas$$34 = this.canvas;
      var v6665 = this.graph;
      var root$$16 = JAM.call(v6665.getNode, v6665, [this.root], JAM.policy.p3);
      var complete = JAM.call($$$1.merge, $$$1, [this.controller, onComplete$$9], JAM.policy.p3);
      var that$$29 = this;
      JAM.call(complete.onBeforeCompute, complete, [node$$91], JAM.policy.p3);
      JAM.call(this.selectPath, this, [node$$91], JAM.policy.p3);
      this.clickedNode = node$$91;
      JAM.call(this.requestNodes, this, [node$$91, {onComplete:v536}], JAM.policy.p3);
      return;
    }
    function v534(id$$32, removeRoot, method$$6, onComplete$$8) {
      function v533(n$$46) {
        JAM.call(subids.push, subids, [n$$46.id], JAM.policy.p3);
        return;
      }
      var v6670 = this.graph;
      var node$$90 = JAM.call(v6670.getNode, v6670, [id$$32], JAM.policy.p3);
      var subids = [];
      JAM.call(node$$90.eachLevel, node$$90, [+!removeRoot, false, v533], JAM.policy.p3);
      if (method$$6 === "replot") {
        var v6672 = this.op;
        JAM.call(v6672.removeNode, v6672, [subids, JAM.call($$$1.extend, $$$1, [{type:"replot"}, onComplete$$8 || {}], JAM.policy.p3)], JAM.policy.p3);
      } else {
        if (method$$6 === "animate") {
          var v6674 = this.op;
          JAM.call(v6674.removeNode, v6674, [subids, JAM.call($$$1.extend, $$$1, [{type:"fade:seq"}, onComplete$$8 || {}], JAM.policy.p3)], JAM.policy.p3);
        }
      }
      return;
    }
    function v532(subtree$$2, method$$5, onComplete$$7) {
      if (method$$5 === "replot") {
        var v6678 = this.op;
        JAM.call(v6678.sum, v6678, [subtree$$2, JAM.call($$$1.extend, $$$1, [{type:"replot"}, onComplete$$7 || {}], JAM.policy.p3)], JAM.policy.p3);
      } else {
        if (method$$5 === "animate") {
          var v6680 = this.op;
          JAM.call(v6680.sum, v6680, [subtree$$2, JAM.call($$$1.extend, $$$1, [{type:"fade:seq"}, onComplete$$7 || {}], JAM.policy.p3)], JAM.policy.p3);
        }
      }
      return;
    }
    function v531(id$$31, method$$4, onComplete$$6) {
      function $setRoot() {
        function v530() {
          that$$28.busy = false;
          return;
        }
        this.root = id$$31;
        var v6684 = this.graph;
        var node$$89 = JAM.call(v6684.getNode, v6684, [id$$31], JAM.policy.p3);
        this.clickedNode = clickedNode;
        var v6685 = this.graph;
        JAM.call(v6685.computeLevels, v6685, [this.root, 0, "ignore"], JAM.policy.p3);
        node$$89.collapsed = true;
        JAM.call(this.nodesExpCol, this, [node$$89], JAM.policy.p3);
        JAM.call(this.computePositions, this, [node$$89, "end", true], JAM.policy.p3);
        var v13525 = this.graph;
        JAM.call(this.computeLeaves, this, [JAM.call(v13525.getNode, v13525, [id$$31], JAM.policy.p3), 0], JAM.policy.p3);
        var v13526 = this.graph;
        JAM.call(this.fitchParsimony, this, [JAM.call(v13526.getNode, v13526, [id$$31], JAM.policy.p3)], JAM.policy.p3);
        JAM.call(this.colorCharacter, this, [], JAM.policy.p3);
        var v6689 = this.fx;
        JAM.call(v6689.animate, v6689, [{modes:["linear", "node-property:alpha"], onComplete:v530}], JAM.policy.p3);
        return;
      }
      if (this.busy) {
        return;
      }
      this.busy = true;
      var that$$28 = this;
      var canvas$$33 = this.canvas;
      var v6692 = this.graph;
      var clickedNode = JAM.call(v6692.getNode, v6692, [id$$31], JAM.policy.p3);
      if (method$$4 === "animate") {
        JAM.call($setRoot.call, $setRoot, [this], JAM.policy.p3);
      } else {
        if (method$$4 === "replot") {
          JAM.call($setRoot.call, $setRoot, [this], JAM.policy.p3);
        }
      }
      this.zoomIndex = this.graph.depth.length - 1;
      return;
    }
    function v529(node$$87) {
      function v528(n$$45) {
        n$$45.selected = false;
        return;
      }
      function path(node$$88) {
        function v527(n$$44) {
          n$$44.exist = true;
          n$$44.drawn = true;
          return;
        }
        var v13529 = node$$88 === null;
        if (!v13529) {
          v13529 = node$$88.selected;
        }
        if (v13529) {
          return;
        }
        node$$88.selected = true;
        var v18778 = that$$27.group;
        JAM.call($$$1.each, $$$1, [JAM.call(v18778.getSiblings, v18778, [[node$$88]], JAM.policy.p3)[node$$88.id], v527], JAM.policy.p3);
        var parents = JAM.call(node$$88.getParents, node$$88, [], JAM.policy.p3);
        var v6698;
        if (parents.length > 0) {
          v6698 = parents[0];
        } else {
          v6698 = null;
        }
        parents = v6698;
        JAM.call(path, null, [parents], JAM.policy.p3);
        return;
      }
      var that$$27 = this;
      var i$$79;
      var ns$$1;
      var v6699 = this.graph;
      JAM.call(v6699.eachNode, v6699, [v528], JAM.policy.p3);
      i$$79 = 0;
      var v13533 = [node$$87.id];
      ns$$1 = JAM.call(v13533.concat, v13533, [nodesInPath], JAM.policy.p3);
      var v6701 = i$$79 < ns$$1.length;
      for (;v6701;) {
        var v13535 = this.graph;
        JAM.call(path, null, [JAM.call(v13535.getNode, v13535, [ns$$1[i$$79]], JAM.policy.p3)], JAM.policy.p3);
        i$$79 = i$$79 + 1;
        v6701 = i$$79 < ns$$1.length;
      }
      return;
    }
    function v526(node$$86, onComplete$$5) {
      var nodeArray$$2 = JAM.call(getNodesToShow.call, getNodesToShow, [this, node$$86], JAM.policy.p3);
      var v6702 = this.group;
      JAM.call(v6702.expand, v6702, [nodeArray$$2, JAM.call($$$1.merge, $$$1, [this.controller, onComplete$$5], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    function v525(node$$85, onComplete$$4) {
      JAM.call(this.compute, this, ["end", false], JAM.policy.p3);
      var move = onComplete$$4.Move;
      var JSCompiler_object_inline_x_88 = move.offsetX;
      var JSCompiler_object_inline_y_89 = move.offsetY;
      var v6704 = this.fx;
      JAM.call(v6704.animate, v6704, [JAM.call($$$1.merge, $$$1, [this.controller, {modes:["linear"]}, onComplete$$4], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    function v524(onComplete$$3, switched) {
      var orn$$4 = this.config.orientation;
      var Geom$$2 = this.geom;
      var Group = this.group;
      if (switched) {
        JAM.call(Geom$$2.switchOrientation, Geom$$2, [switched], JAM.policy.p3);
      }
      var nodes$$1 = JAM.call(getNodesToHide.call, getNodesToHide, [this], JAM.policy.p3);
      if (switched) {
        JAM.call(Geom$$2.switchOrientation, Geom$$2, [orn$$4], JAM.policy.p3);
      }
      JAM.call(Group.contract, Group, [nodes$$1, JAM.call($$$1.merge, $$$1, [this.controller, onComplete$$3], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    function v523(node$$84, onComplete$$2) {
      function v522(n$$43) {
        var v13542 = n$$43.drawn;
        if (v13542) {
          v13542 = !JAM.call(n$$43.anySubnode, n$$43, [], JAM.policy.p3);
        }
        if (v13542) {
          JAM.call(leaves$$2.push, leaves$$2, [n$$43], JAM.policy.p3);
          n$$43._level = lev - (n$$43._depth - d$$5);
        }
        return;
      }
      var handler$$3 = JAM.call($$$1.merge, $$$1, [this.controller, onComplete$$2], JAM.policy.p3);
      var lev = this.config.levelsToShow;
      if (handler$$3.request) {
        var leaves$$2 = [];
        var d$$5 = node$$84._depth;
        JAM.call(node$$84.eachLevel, node$$84, [0, lev, v522], JAM.policy.p3);
        var v6712 = this.group;
        JAM.call(v6712.requestNodes, v6712, [leaves$$2, handler$$3], JAM.policy.p3);
      } else {
        JAM.call(handler$$3.onComplete, handler$$3, [], JAM.policy.p3);
      }
      return;
    }
    function v521() {
      function v520(n$$42) {
        if (n$$42.exist) {
          n$$42.drawn = true;
        }
        return;
      }
      var v6715 = this.graph;
      JAM.call(v6715.computeLevels, v6715, [this.root, 0, "ignore"], JAM.policy.p3);
      var v6717 = this.geom;
      JAM.call(v6717.setRightLevelToShow, v6717, [this.clickedNode, this.canvas], JAM.policy.p3);
      var v6720 = this.graph;
      JAM.call(v6720.eachNode, v6720, [v520], JAM.policy.p3);
      JAM.call(this.compute, this, ["end"], JAM.policy.p3);
      return;
    }
    function v519() {
      JAM.call(this.reposition, this, [], JAM.policy.p3);
      var v18784 = this.clickedNode;
      if (v18784) {
        v18784 = this.clickedNode.id;
      }
      var v13544 = v18784;
      if (!v13544) {
        v13544 = this.root;
      }
      JAM.call(this.select, this, [v13544], JAM.policy.p3);
      return;
    }
    function v518(id$$30) {
      nodesInPath.length = 0;
      var v18786 = this.clickedNode;
      if (v18786) {
        v18786 = this.clickedNode.id;
      }
      var v13545 = v18786;
      if (!v13545) {
        v13545 = this.root;
      }
      JAM.call(this.select, this, [v13545], JAM.policy.p3);
      return;
    }
    function v517(id$$29) {
      JAM.call(nodesInPath.push, nodesInPath, [id$$29], JAM.policy.p3);
      var v18788 = this.clickedNode;
      if (v18788) {
        v18788 = this.clickedNode.id;
      }
      var v13546 = v18788;
      if (!v13546) {
        v13546 = this.root;
      }
      JAM.call(this.select, this, [v13546], JAM.policy.p3);
      return;
    }
    function v516(align$$2, method$$3, onComplete$$1) {
      this.config.align = align$$2;
      if (method$$3 === "animate") {
        JAM.call(this.select, this, [this.clickedNode.id, onComplete$$1], JAM.policy.p3);
      } else {
        if (method$$3 === "replot") {
          JAM.call(this.onClick, this, [this.clickedNode.id, onComplete$$1], JAM.policy.p3);
        }
      }
      return;
    }
    function v515(pos$$36, method$$2, onComplete) {
      function v514() {
        JAM.call(Geom$$1.switchOrientation, Geom$$1, [pos$$36], JAM.policy.p3);
        JAM.call(that$$26.compute, that$$26, ["end", false], JAM.policy.p3);
        Plot.busy = false;
        if (method$$2 === "animate") {
          JAM.call(that$$26.onClick, that$$26, [that$$26.clickedNode.id, onComplete], JAM.policy.p3);
        } else {
          if (method$$2 === "replot") {
            JAM.call(that$$26.select, that$$26, [that$$26.clickedNode.id, onComplete], JAM.policy.p3);
          }
        }
        return;
      }
      var Geom$$1 = this.geom;
      var Plot = this.fx;
      var that$$26 = this;
      if (!Plot.busy) {
        Plot.busy = true;
        JAM.call(this.contract, this, [{onComplete:v514}, pos$$36], JAM.policy.p3);
      }
      return;
    }
    function v513(scroll$$3) {
      function v512(subn$$5) {
        var v6735;
        if (show$$2) {
          v6735 = !subn$$5.exist;
        } else {
          v6735 = subn$$5.exist;
        }
        var nodeVisible = v6735;
        if (nodeVisible) {
          subn$$5.exist = show$$2;
          subn$$5.drawn = show$$2;
        }
        return;
      }
      if (!this.busy) {
        this.busy = true;
        var v6736 = this.config;
        JAM.call(v6736.onBeforeCompute, v6736, [{name:""}], JAM.policy.p3);
        var viz$$21 = this;
        var graph$$19 = viz$$21.graph;
        var flag$$2 = true;
        var v6738 = viz$$21.graph;
        var node$$83 = JAM.call(v6738.getNode, v6738, [viz$$21.root], JAM.policy.p3);
        var step$$2 = 2;
        var min$$6 = 1;
        var max$$4 = graph$$19.depth.length - 1;
        var j$$12;
        if (typeof viz$$21.zoomIndex === "undefined") {
          viz$$21.zoomIndex = 1;
        }
        var i$$78 = viz$$21.zoomIndex;
        if (i$$78 < 1) {
          i$$78 = 1;
        } else {
          if (i$$78 > graph$$19.depth.length - 1) {
            i$$78 = graph$$19.depth.length - 1;
          }
        }
        var v6745;
        if (scroll$$3 < 0) {
          v6745 = false;
        } else {
          v6745 = true;
        }
        var show$$2 = v6745;
        step$$2 = JAM.call(Math.round, Math, [graph$$19.depth.length / 10], JAM.policy.p3);
        step$$2 = JAM.call(Math.max, Math, [step$$2, 2], JAM.policy.p3);
        var maxDepth = graph$$19.depth.length;
        var nodelist = graph$$19.depth[i$$78];
        j$$12 = nodelist.length - 1;
        var v6750 = j$$12 >= 0;
        for (;v6750;) {
          var n$$41 = nodelist[j$$12];
          JAM.call(n$$41.eachLevel, n$$41, [1, step$$2, v512], JAM.policy.p3);
          j$$12 = j$$12 - 1;
          v6750 = j$$12 >= 0;
        }
        JAM.call(viz$$21.computePositions, viz$$21, [node$$83, ""], JAM.policy.p3);
        JAM.call(viz$$21.plot, viz$$21, [], JAM.policy.p3);
        var v6751 = viz$$21.config;
        JAM.call(v6751.onAfterCompute, v6751, ["Depth " + i$$78], JAM.policy.p3);
        var v22374;
        if (show$$2) {
          v22374 = +1;
        } else {
          v22374 = -1;
        }
        i$$78 = i$$78 + v22374 * step$$2;
        viz$$21.zoomIndex = i$$78;
        this.busy = false;
      }
      return;
    }
    function v511() {
      var v6754 = this.canvas;
      var size$$8 = JAM.call(v6754.getSize, v6754, [], JAM.policy.p3);
      var key$$28;
      var i$$77;
      var overflow = false;
      var v6755 = this.clickedNode.id;
      if (!v6755) {
        v6755 = this.root;
      }
      var clicked = v6755;
      var height$$20 = 0;
      var v6756 = this.graph;
      var root$$15 = JAM.call(v6756.getNode, v6756, [clicked], JAM.policy.p3);
      var depth$$1 = this.graph.depth;
      var v6758 = this.config;
      JAM.call(v6758.onBeforeCompute, v6758, [{name:""}], JAM.policy.p3);
      for (key$$28 in depth$$1) {
        if (JAM.call(depth$$1.hasOwnProperty, depth$$1, [key$$28], JAM.policy.p3)) {
          if (depth$$1[key$$28]) {
            var nodes = depth$$1[key$$28];
            var tempHeight = 0;
            i$$77 = 0;
            var v6762 = i$$77 < nodes.length;
            for (;v6762;) {
              var node$$82 = nodes[i$$77];
              if (height$$20 < size$$8.height) {
                if (node$$82.data.leaf) {
                  tempHeight = tempHeight + (JAM.call(node$$82.getData, node$$82, ["height", "start"], JAM.policy.p3) + 8);
                } else {
                  tempHeight = tempHeight + JAM.call(node$$82.getData, node$$82, ["height", "start"], JAM.policy.p3) / 2;
                }
                node$$82.drawn = true;
                node$$82.exist = true;
              }
              i$$77 = i$$77 + 1;
              v6762 = i$$77 < nodes.length;
            }
            var v13571 = tempHeight + height$$20 < size$$8.height;
            if (v13571) {
              v13571 = !overflow;
            }
            if (v13571) {
              height$$20 = height$$20 + tempHeight;
              var v31369 = JAM.call(parseInt, null, [key$$28, 10], JAM.policy.p3);
              this.zoomIndex = v31369;
            } else {
              i$$77 = 0;
              var v6763 = i$$77 < nodes.length;
              for (;v6763;) {
                node$$82 = nodes[i$$77];
                node$$82.exist = false;
                node$$82.drawn = false;
                node$$82.collapsed = true;
                i$$77 = i$$77 + 1;
                v6763 = i$$77 < nodes.length;
              }
              overflow = true;
            }
          }
        }
      }
      var canvas$$32 = this.canvas;
      var ox$$4 = canvas$$32.translateOffsetX;
      var oy$$5 = canvas$$32.translateOffsetY;
      var v6767 = this.canvas;
      JAM.call(v6767.translate, v6767, [-1 * ox$$4, -1 * oy$$5], JAM.policy.p3);
      var v13574 = this.graph;
      JAM.call(this.computePositions, this, [JAM.call(v13574.getNode, v13574, [this.root], JAM.policy.p3), ""], JAM.policy.p3);
      JAM.call(this.plot, this, [], JAM.policy.p3);
      var v6771 = this.config;
      JAM.call(v6771.onAfterCompute, v6771, [], JAM.policy.p3);
      return;
    }
    function v510() {
      var v6772 = this.fx;
      JAM.call(v6772.plot, v6772, [this.controller], JAM.policy.p3);
      return;
    }
    function v509(value$$42, rangeArray$$2) {
      var i$$76;
      var v13576 = typeof value$$42 === "undefined";
      if (!v13576) {
        v13576 = typeof rangeArray$$2 === "undefined";
      }
      if (v13576) {
        return;
      }
      i$$76 = 0;
      var v6776 = i$$76 < rangeArray$$2.length;
      for (;v6776;) {
        if (value$$42 <= rangeArray$$2[i$$76]) {
          break;
        }
        i$$76 = i$$76 + 1;
        v6776 = i$$76 < rangeArray$$2.length;
      }
      var v6777;
      if (i$$76 === rangeArray$$2.length) {
        v6777 = i$$76 - 1;
      } else {
        v6777 = i$$76;
      }
      return v6777;
    }
    function v508() {
      var list$$1;
      var root$$14;
      var i$$75;
      var char$$20;
      var temp$$2 = {};
      var ds = {};
      var j$$11;
      var dschar;
      var sh$$2;
      var jj;
      var shapes$$1 = this.config.shapes;
      var dsAlt = {};
      var dscharAlt;
      var color$$6 = this.config.color;
      var shapePointer = 0;
      var rangeArray$$1;
      var label$$11;
      var quantColor$$1 = this.config.quantColor;
      var quantShape = this.config.quantShape;
      var heading;
      var content;
      var v6782 = this.graph;
      root$$14 = JAM.call(v6782.getNode, v6782, [this.root], JAM.policy.p3);
      list$$1 = this.characterGroups.quali;
      if (!list$$1) {
        JAM.call(this.findAllCharTypes, this, [root$$14], JAM.policy.p3);
        list$$1 = this.characterGroups.quali;
      }
      if (list$$1) {
        i$$75 = 0;
        var v6790 = i$$75 < list$$1.length;
        for (;v6790;) {
          char$$20 = list$$1[i$$75];
          JAM.set(temp$$2, char$$20, JAM.call(this.findDistinctCharacterStates, this, [char$$20], JAM.policy.p3).array, JAM.policy.p2);
          var v6789 = temp$$2[char$$20];
          if (v6789) {
            var v13583 = temp$$2[char$$20];
            JAM.call(v13583.push, v13583, ["multiple"], JAM.policy.p3);
          }
          i$$75 = i$$75 + 1;
          v6790 = i$$75 < list$$1.length;
        }
      }
      for (i$$75 in temp$$2) {
        if (JAM.call(temp$$2.hasOwnProperty, temp$$2, [i$$75], JAM.policy.p3)) {
          char$$20 = temp$$2[i$$75];
          dschar = [];
          dscharAlt = {};
          j$$11 = 0;
          var v6795 = j$$11 < char$$20.length;
          for (;v6795;) {
            var v6791;
            if (color$$6.length > j$$11) {
              v6791 = j$$11;
            } else {
              v6791 = color$$6.length - 1;
            }
            jj = v6791;
            var v6792;
            if (shapes$$1.length > shapePointer) {
              v6792 = shapePointer;
            } else {
              v6792 = shapes$$1.length - 1;
            }
            sh$$2 = v6792;
            JAM.call(dschar.push, dschar, [{color:color$$6[jj], name:char$$20[j$$11], shape:shapes$$1[sh$$2]}], JAM.policy.p3);
            JAM.set(dscharAlt, char$$20[j$$11], {color:color$$6[jj], shape:shapes$$1[sh$$2]}, JAM.policy.p2);
            j$$11 = j$$11 + 1;
            v6795 = j$$11 < char$$20.length;
          }
          JAM.set(ds, i$$75, dschar, JAM.policy.p2);
          JAM.set(dsAlt, i$$75, dscharAlt, JAM.policy.p2);
          shapePointer = shapePointer + 1;
        }
      }
      i$$75 = 0;
      var v6806 = i$$75 < this.characterGroups.quant.length;
      for (;v6806;) {
        char$$20 = this.characterGroups.quant[i$$75];
        rangeArray$$1 = this.range[char$$20];
        dschar = [];
        dscharAlt = {};
        j$$11 = 0;
        var v6805 = j$$11 < rangeArray$$1.length;
        for (;v6805;) {
          var v6799;
          if (quantColor$$1.length > j$$11) {
            v6799 = j$$11;
          } else {
            v6799 = quantColor$$1.length - 1;
          }
          jj = v6799;
          var v6800;
          if (shapes$$1.length > shapePointer) {
            v6800 = shapePointer;
          } else {
            v6800 = shapes$$1.length - 1;
          }
          sh$$2 = v6800;
          var v18807;
          if (j$$11 === 0) {
            var v22376 = this.characterMinMax[char$$20].min;
            v18807 = JAM.call(v22376.toFixed, v22376, [2], JAM.policy.p3);
          } else {
            v18807 = rangeArray$$1[j$$11 - 1];
          }
          label$$11 = v18807 + " - " + rangeArray$$1[j$$11];
          JAM.call(dschar.push, dschar, [{color:quantColor$$1[j$$11], name:label$$11, shape:quantShape}], JAM.policy.p3);
          JAM.set(dscharAlt, label$$11, {color:quantColor$$1[j$$11], shape:quantShape}, JAM.policy.p2);
          j$$11 = j$$11 + 1;
          v6805 = j$$11 < rangeArray$$1.length;
        }
        JAM.set(ds, char$$20, dschar, JAM.policy.p2);
        JAM.set(dsAlt, char$$20, dscharAlt, JAM.policy.p2);
        shapePointer = shapePointer + 1;
        i$$75 = i$$75 + 1;
        v6806 = i$$75 < this.characterGroups.quant.length;
      }
      heading = "";
      content = "";
      list$$1 = this.config.selectedCharacters;
      i$$75 = 0;
      var v6812 = i$$75 < list$$1.length;
      for (;v6812;) {
        label$$11 = "";
        char$$20 = list$$1[i$$75];
        if (typeof char$$20 !== "undefined") {
          var v6808 = ds[char$$20];
          if (!v6808) {
            v6808 = [];
          }
          dschar = v6808;
          heading = '<tr><th colspan="2">' + JAM.call(char$$20.replace, char$$20, [/_/g, " "], JAM.policy.p3) + "</th></tr>";
          j$$11 = 0;
          var v6810 = j$$11 < dschar.length;
          for (;v6810;) {
            sh$$2 = dschar[j$$11];
            label$$11 = label$$11 + ('<tr><td><div class ="' + sh$$2.shape + '" style="background-color:' + sh$$2.color + ';"></div></td><td>' + sh$$2.name + "</td></tr>");
            j$$11 = j$$11 + 1;
            v6810 = j$$11 < dschar.length;
          }
          if (label$$11) {
            content = content + (heading + label$$11);
          }
        }
        i$$75 = i$$75 + 1;
        v6812 = i$$75 < list$$1.length;
      }
      this.colorCoding = dsAlt;
      this.colorCodingQuali = ds;
      return content;
    }
    function v507(character$$2) {
      var i$$74;
      var result$$17 = [];
      var temp$$1 = {};
      var node$$81;
      var char$$19;
      var j$$10;
      for (i$$74 in this.graph.nodes) {
        var v13617 = this.graph.nodes;
        if (JAM.call(v13617.hasOwnProperty, v13617, [i$$74], JAM.policy.p3)) {
          node$$81 = this.graph.nodes[i$$74];
          char$$19 = node$$81.data.character[character$$2];
          var v13620 = node$$81.data.leaf;
          if (v13620) {
            v13620 = char$$19;
          }
          if (v13620) {
            j$$10 = 0;
            var v6816 = j$$10 < char$$19.length;
            for (;v6816;) {
              JAM.set(temp$$1, char$$19[j$$10], character$$2, JAM.policy.p2);
              j$$10 = j$$10 + 1;
              v6816 = j$$10 < char$$19.length;
            }
          }
        }
      }
      for (i$$74 in temp$$1) {
        if (JAM.call(temp$$1.hasOwnProperty, temp$$1, [i$$74], JAM.policy.p3)) {
          JAM.call(result$$17.push, result$$17, [i$$74], JAM.policy.p3);
        }
      }
      return{hash:temp$$1, array:result$$17};
    }
    function v506(colorOverwrite) {
      function v505(root$$13, characterColorCollection) {
        function v504(node$$80) {
          var v6821 = node$$80.data;
          var v13623 = node$$80.data.color;
          if (!v13623) {
            v13623 = {};
          }
          v6821.color = v13623;
          for (adj in node$$80.adjacencies) {
            var v13624 = node$$80.adjacencies;
            if (JAM.call(v13624.hasOwnProperty, v13624, [adj], JAM.policy.p3)) {
              currentAdj$$1 = node$$80.adjacencies[adj];
              var v6823 = currentAdj$$1.data;
              if (v6823) {
                delete currentAdj$$1.data.$color;
              }
            }
          }
          i$$73 = 0;
          var v6841 = i$$73 < that$$25.characterGroups.quali.length;
          for (;v6841;) {
            char$$18 = that$$25.characterGroups.quali[i$$73];
            charArray = node$$80.data.character[char$$18];
            var v18815 = charArray;
            if (v18815) {
              v18815 = charArray.length === 1;
            }
            var v13629 = v18815;
            if (v13629) {
              v13629 = charArray[0];
            }
            var v6828 = v13629;
            if (!v6828) {
              v6828 = "";
            }
            key$$27 = v6828;
            if (key$$27) {
              key$$27 = JAM.call(key$$27.replace, key$$27, [/ /g, ""], JAM.policy.p3);
              JAM.set(node$$80.data.color, char$$18, characterColorCollection[char$$18].color, JAM.policy.p2);
              if (char$$18 === firstCharacter$$2) {
                for (adj in node$$80.adjacencies) {
                  var v13633 = node$$80.adjacencies;
                  if (JAM.call(v13633.hasOwnProperty, v13633, [adj], JAM.policy.p3)) {
                    currentAdj$$1 = node$$80.adjacencies[adj];
                    var nodeTo$$6 = node$$80.adjacencies[adj].nodeTo;
                    var nodeFrom$$4 = node$$80.adjacencies[adj].nodeFrom;
                    var v13636 = nodeTo$$6._depth < node$$80._depth;
                    if (!v13636) {
                      v13636 = nodeFrom$$4._depth < node$$80._depth;
                    }
                    if (v13636) {
                      if (charArray.length === 1) {
                        currentAdj$$1.data.$color = characterColorCollection[firstCharacter$$2][charArray[0]].color;
                        break;
                      } else {
                        delete currentAdj$$1.data.$color;
                      }
                    }
                  }
                }
              }
            } else {
              JAM.set(node$$80.data.color, char$$18, characterColorCollection[char$$18]["multiple"], JAM.policy.p2);
            }
            i$$73 = i$$73 + 1;
            v6841 = i$$73 < that$$25.characterGroups.quali.length;
          }
          i$$73 = 0;
          var v6857 = i$$73 < that$$25.characterGroups.quant.length;
          for (;v6857;) {
            char$$18 = that$$25.characterGroups.quant[i$$73];
            charArray = node$$80.data.character[char$$18];
            var v18825 = charArray;
            if (v18825) {
              v18825 = charArray.length === 1;
            }
            var v13645 = v18825;
            if (v13645) {
              v13645 = charArray[0];
            }
            var v6844 = v13645;
            if (!v6844) {
              v6844 = "";
            }
            key$$27 = v6844;
            if (key$$27) {
              var rangeArray = that$$25.range[char$$18];
              var index$$43 = JAM.call(that$$25.findIndex, that$$25, [key$$27, rangeArray], JAM.policy.p3);
              JAM.set(node$$80.data.color, char$$18, quantColor[index$$43], JAM.policy.p2);
              if (char$$18 === firstCharacter$$2) {
                for (adj in node$$80.adjacencies) {
                  var v13648 = node$$80.adjacencies;
                  if (JAM.call(v13648.hasOwnProperty, v13648, [adj], JAM.policy.p3)) {
                    var currentAdj$$1 = node$$80.adjacencies[adj];
                    nodeTo$$6 = node$$80.adjacencies[adj].nodeTo;
                    nodeFrom$$4 = node$$80.adjacencies[adj].nodeFrom;
                    var v13651 = nodeTo$$6._depth < node$$80._depth;
                    if (!v13651) {
                      v13651 = nodeFrom$$4._depth < node$$80._depth;
                    }
                    if (v13651) {
                      if (charArray.length === 1) {
                        currentAdj$$1.data.$color = quantColor[index$$43];
                        break;
                      } else {
                        delete currentAdj$$1.data.$color;
                      }
                    }
                  }
                }
              }
            }
            i$$73 = i$$73 + 1;
            v6857 = i$$73 < that$$25.characterGroups.quant.length;
          }
          return;
        }
        var firstCharacter$$2 = that$$25.config.firstCharacter;
        var key$$27;
        var charArray;
        var char$$18;
        var i$$73;
        var quantColor = that$$25.config.quantColor;
        var currentAdj;
        JAM.call(root$$13.eachSubgraph, root$$13, [v504], JAM.policy.p3);
        return;
      }
      var speciesHash$$1 = this.character;
      var speciesName$$1;
      var char$$17;
      var i$$72;
      var that$$25 = this;
      var box;
      var node$$79;
      var characterValue;
      var j$$9;
      var html$$5;
      if (JAM.call(this.hasProperty, this, [speciesHash$$1], JAM.policy.p3)) {
        var $colorCharacter = v505;
        var v6860 = this.graph;
        var rootNode$$1 = JAM.call(v6860.getNode, v6860, [this.root], JAM.policy.p3);
        var string;
        var color$$5 = this.config.color;
        var distinct = {};
        var legendColorCollection = {};
        var pointer = 0;
        var legendRows = "";
        var multiple = false;
        var firstCharacter$$1;
        var firstSpecies;
        var characterKey = [];
        for (speciesName$$1 in speciesHash$$1) {
          if (JAM.call(speciesHash$$1.hasOwnProperty, speciesHash$$1, [speciesName$$1], JAM.policy.p3)) {
            for (char$$17 in speciesHash$$1[speciesName$$1]) {
              var v13654 = speciesHash$$1[speciesName$$1];
              if (JAM.call(v13654.hasOwnProperty, v13654, [char$$17], JAM.policy.p3)) {
                JAM.call(characterKey.push, characterKey, [char$$17], JAM.policy.p3);
              }
            }
            break;
          }
        }
        distinct = legendColorCollection[firstCharacter$$1];
        if (!this.config.initCharacter) {
          JAM.call(this.setCharacter, this, [this.config.firstCharacter], JAM.policy.p3);
          this.config.initCharacter = true;
        }
        var v31370 = JAM.call(this.findAllCharTypes, this, [rootNode$$1], JAM.policy.p3);
        this.characterGroups = v31370;
        JAM.call(this.fitchParsimony, this, [rootNode$$1, this.characterGroups.quali], JAM.policy.p3);
        JAM.call(this.quantParsimony, this, [rootNode$$1, this.characterGroups.quant], JAM.policy.p3);
        JAM.call(this.checkQuali, this, [this.characterGroups.quali], JAM.policy.p3);
        JAM.call(this.checkQuant, this, [this.characterGroups.quant], JAM.policy.p3);
        var v31371 = JAM.call(this.findQuantMinMax, this, [rootNode$$1, this.characterGroups.quant], JAM.policy.p3);
        this.characterMinMax = v31371;
        var v31372 = JAM.call(this.findQuantRange, this, [this.characterMinMax], JAM.policy.p3);
        this.range = v31372;
        html$$5 = JAM.call(this.createLegend, this, [], JAM.policy.p3);
        var v13662 = this.graph;
        JAM.call($colorCharacter, null, [JAM.call(v13662.getNode, v13662, [this.root], JAM.policy.p3), this.colorCoding], JAM.policy.p3);
        return html$$5;
      }
      return;
    }
    function v503(quantMinMax) {
      var result$$16 = {};
      var char$$16;
      var rangeCount = this.config.rangeCount;
      var stepsize;
      var i$$71;
      for (char$$16 in quantMinMax) {
        if (JAM.call(quantMinMax.hasOwnProperty, quantMinMax, [char$$16], JAM.policy.p3)) {
          var min$$5 = quantMinMax[char$$16].min;
          var max$$3 = quantMinMax[char$$16].max;
          stepsize = (max$$3 - min$$5) / rangeCount;
          JAM.set(result$$16, char$$16, [], JAM.policy.p2);
          i$$71 = 1;
          var v6884 = i$$71 <= rangeCount;
          for (;v6884;) {
            var v6882 = result$$16[char$$16];
            var v13664 = min$$5 + i$$71 * stepsize;
            JAM.call(v6882.push, v6882, [JAM.call(v13664.toFixed, v13664, [2], JAM.policy.p3)], JAM.policy.p3);
            i$$71 = i$$71 + 1;
            v6884 = i$$71 <= rangeCount;
          }
        }
      }
      return result$$16;
    }
    function v502(root$$12, quantCharacters) {
      function v501(node$$78) {
        if (node$$78.data.leaf) {
          var v6886 = node$$78.data.character[char$$15];
          if (v6886) {
            v6886 = node$$78.data.character[char$$15][0];
          }
          var charState = v6886;
          if (typeof charState !== "undefined") {
            var v6887;
            if (min$$4 < charState) {
              v6887 = min$$4;
            } else {
              v6887 = charState;
            }
            min$$4 = v6887;
            var v6888;
            if (max$$2 > charState) {
              v6888 = max$$2;
            } else {
              v6888 = charState;
            }
            max$$2 = v6888;
          }
        }
        return;
      }
      var char$$15;
      var min$$4;
      var max$$2;
      var result$$15 = {};
      var i$$70;
      i$$70 = 0;
      var v6896 = i$$70 < quantCharacters.length;
      for (;v6896;) {
        char$$15 = quantCharacters[i$$70];
        var v6891 = result$$15[char$$15];
        if (!v6891) {
          v6891 = {};
        }
        JAM.set(result$$15, char$$15, v6891, JAM.policy.p2);
        result$$15[char$$15].min = min$$4 = Number.MAX_VALUE;
        result$$15[char$$15].max = max$$2 = Number.MIN_VALUE;
        JAM.call(root$$12.eachSubgraph, root$$12, [v501], JAM.policy.p3);
        result$$15[char$$15].min = min$$4;
        result$$15[char$$15].max = max$$2;
        i$$70 = i$$70 + 1;
        v6896 = i$$70 < quantCharacters.length;
      }
      return result$$15;
    }
    function v500(root$$11) {
      function v499(node$$77) {
        if (node$$77.data.leaf) {
          i$$69 = 0;
          var v6901 = i$$69 < all.length;
          for (;v6901;) {
            key$$26 = all[i$$69];
            if (JAM.call(that$$24.characterType, that$$24, [node$$77.data.character[key$$26], "quali"], JAM.policy.p3)) {
              JAM.set(quali, key$$26, true, JAM.policy.p2);
              JAM.set(charTypeMapping$$1, key$$26, that$$24.config.typeEnum.quali, JAM.policy.p2);
            } else {
              if (JAM.call(that$$24.characterType, that$$24, [node$$77.data.character[key$$26], "quant"], JAM.policy.p3)) {
                JAM.set(quant, key$$26, true, JAM.policy.p2);
                JAM.set(charTypeMapping$$1, key$$26, that$$24.config.typeEnum.quant, JAM.policy.p2);
              }
            }
            i$$69 = i$$69 + 1;
            v6901 = i$$69 < all.length;
          }
        }
        return;
      }
      var type$$56 = {quant:[], quali:[]};
      var all = [];
      var quali = {};
      var quant = {};
      var key$$26;
      var that$$24 = this;
      var first$$4 = this.config.firstCharacter;
      var charTypeMapping$$1 = {};
      var i$$69;
      var v13681 = all;
      if (v13681) {
        v13681 = all.length === 0;
      }
      if (v13681) {
        all = JAM.call(this.listCharacters, this, [], JAM.policy.p3);
        if (this.config.selectedCharacters.length !== 0) {
          if (typeof this.config.selectedCharacters[0] === "undefined") {
            var v6904 = this.config.selectedCharacters;
            introspect(JAM.policy.p2) {
              v6904[0] = all[0];
            }
          }
          this.config.firstCharacter = this.config.selectedCharacters[0];
        } else {
          if (all.length !== 0) {
            this.config.selectedCharacters = [all[0]];
            this.config.firstCharacter = all[0];
          }
        }
      }
      var v13688 = all;
      if (v13688) {
        v13688 = all.length !== 0;
      }
      if (v13688) {
        JAM.call(root$$11.eachSubgraph, root$$11, [v499], JAM.policy.p3);
      }
      for (key$$26 in quali) {
        if (JAM.call(quali.hasOwnProperty, quali, [key$$26], JAM.policy.p3)) {
          var v6913 = type$$56.quali;
          JAM.call(v6913.push, v6913, [key$$26], JAM.policy.p3);
        }
      }
      for (key$$26 in quant) {
        if (JAM.call(quant.hasOwnProperty, quant, [key$$26], JAM.policy.p3)) {
          var v6915 = type$$56.quant;
          JAM.call(v6915.push, v6915, [key$$26], JAM.policy.p3);
        }
      }
      this.characterList = all;
      this.charTypeMapping = charTypeMapping$$1;
      return type$$56;
    }
    function v498() {
      var aSpecies;
      var i$$68;
      var result$$14 = [];
      for (aSpecies in this.character) {
        for (i$$68 in this.character[aSpecies]) {
          JAM.call(result$$14.push, result$$14, [i$$68], JAM.policy.p3);
        }
        return result$$14;
      }
      return;
    }
    function v497(root$$10, characters$$5) {
      function $quantParsimony(node$$76) {
        function v496(n$$40) {
          var result$$13 = JAM.call($quantParsimony, null, [n$$40], JAM.policy.p3);
          i = 0;
          var v6922 = i < characters$$5.length;
          for (;v6922;) {
            var v13691 = result$$13[characters$$5[i]];
            if (v13691) {
              v13691 = typeof result$$13[characters$$5[i]][0] !== "undefined";
            }
            if (v13691) {
              var v6919 = childrenValues$$2[characters$$5[i]];
              JAM.call(v6919.push, v6919, [result$$13[characters$$5[i]][0]], JAM.policy.p3);
            }
            i = i + 1;
            v6922 = i < characters$$5.length;
          }
          return;
        }
        var childrenValues$$2 = {};
        i = 0;
        var v6924 = i < characters$$5.length;
        for (;v6924;) {
          JAM.set(childrenValues$$2, characters$$5[i], [], JAM.policy.p2);
          i = i + 1;
          v6924 = i < characters$$5.length;
        }
        JAM.call(node$$76.eachSubnode, node$$76, [v496], JAM.policy.p3);
        if (!node$$76.data.leaf) {
          i = 0;
          var v6928 = i < characters$$5.length;
          for (;v6928;) {
            var char$$14 = characters$$5[i];
            var value$$41 = node$$76.data.character[char$$14];
            var mean$$1 = JAM.call(st.mean, st, [childrenValues$$2[char$$14]], JAM.policy.p3);
            JAM.set(node$$76.data.character, char$$14, [mean$$1], JAM.policy.p2);
            i = i + 1;
            v6928 = i < characters$$5.length;
          }
        }
        return node$$76.data.character;
      }
      var methods$$1 = this.calcMethods;
      JAM.call($quantParsimony, null, [root$$10], JAM.policy.p3);
      return;
    }
    function v495(characters$$4) {
      function $checkQuali(node$$75) {
        function v494(n$$39) {
          result$$12 = JAM.call($checkQuali, null, [n$$39], JAM.policy.p3);
          i$$67 = 0;
          var v6934 = i$$67 < characters$$4.length;
          for (;v6934;) {
            if (result$$12[characters$$4[i$$67]]) {
              var v6931 = childrenValues$$1[characters$$4[i$$67]];
              JAM.call(v6931.push, v6931, [result$$12[characters$$4[i$$67]]], JAM.policy.p3);
            }
            i$$67 = i$$67 + 1;
            v6934 = i$$67 < characters$$4.length;
          }
          return;
        }
        var childrenValues$$1 = {};
        var result$$12;
        var v6935 = node$$75.data;
        var v13707 = node$$75.data.characterConsistency;
        if (!v13707) {
          v13707 = {};
        }
        v6935.characterConsistency = v13707;
        i$$67 = 0;
        var v6937 = i$$67 < characters$$4.length;
        for (;v6937;) {
          JAM.set(childrenValues$$1, characters$$4[i$$67], [], JAM.policy.p2);
          i$$67 = i$$67 + 1;
          v6937 = i$$67 < characters$$4.length;
        }
        JAM.call(node$$75.eachSubnode, node$$75, [v494], JAM.policy.p3);
        if (!node$$75.data.leaf) {
          i$$67 = 0;
          var v6940 = i$$67 < characters$$4.length;
          for (;v6940;) {
            var char$$13 = characters$$4[i$$67];
            result$$12 = JAM.call(compareFunction$$1, null, [childrenValues$$1[char$$13]], JAM.policy.p3);
            JAM.set(node$$75.data.characterConsistency, char$$13, result$$12, JAM.policy.p2);
            i$$67 = i$$67 + 1;
            v6940 = i$$67 < characters$$4.length;
          }
        }
        return node$$75.data.character;
      }
      function compareFunction$$1(sample$$4) {
        var test1$$1 = sample$$4[0];
        var test2$$1;
        var j$$8 = 0;
        var v6944 = j$$8 < sample$$4.length;
        for (;v6944;) {
          test2$$1 = sample$$4[j$$8];
          var result$$11 = JAM.call(that$$23.intersect, that$$23, [test1$$1, test2$$1], JAM.policy.p3);
          var v13715 = result$$11.length !== test1$$1.length;
          if (!v13715) {
            v13715 = result$$11.length !== test2$$1.length;
          }
          if (v13715) {
            return false;
          }
          test1$$1 = result$$11;
          j$$8 = j$$8 + 1;
          v6944 = j$$8 < sample$$4.length;
        }
        return true;
      }
      var v6945 = this.graph;
      var root$$9 = JAM.call(v6945.getNode, v6945, [this.root], JAM.policy.p3);
      var i$$67;
      var that$$23 = this;
      JAM.call($checkQuali, null, [root$$9], JAM.policy.p3);
      return;
    }
    function v493(characters$$3) {
      function $checkQuant(node$$74) {
        function v492(n$$38) {
          ans$$15 = JAM.call($checkQuant, null, [n$$38], JAM.policy.p3);
          result$$10 = ans$$15.character;
          i$$66 = 0;
          var v6956 = i$$66 < characters$$3.length;
          for (;v6956;) {
            var v13718 = result$$10[characters$$3[i$$66]];
            if (v13718) {
              v13718 = typeof result$$10[characters$$3[i$$66]][0] !== "undefined";
            }
            if (v13718) {
              var v6947 = childrenValues[characters$$3[i$$66]];
              JAM.call(v6947.push, v6947, [result$$10[characters$$3[i$$66]][0]], JAM.policy.p3);
              var v6949 = sd$$3[characters$$3[i$$66]];
              JAM.call(v6949.push, v6949, [ans$$15.stat[characters$$3[i$$66]].sd], JAM.policy.p3);
              var v6951 = ui$$3[characters$$3[i$$66]];
              JAM.call(v6951.push, v6951, [ans$$15.stat[characters$$3[i$$66]].u], JAM.policy.p3);
              var v6953 = num$$8[characters$$3[i$$66]];
              JAM.call(v6953.push, v6953, [ans$$15.stat[characters$$3[i$$66]].n], JAM.policy.p3);
            }
            i$$66 = i$$66 + 1;
            v6956 = i$$66 < characters$$3.length;
          }
          return;
        }
        var childrenValues = {};
        var result$$10;
        var sd$$3 = {};
        var ui$$3 = {};
        var num$$8 = {};
        var ans$$15;
        var char$$12;
        var v6957 = node$$74.data;
        var v13728 = node$$74.data.characterConsistency;
        if (!v13728) {
          v13728 = {};
        }
        v6957.characterConsistency = v13728;
        node$$74.data.stat = {};
        i$$66 = 0;
        var v6962 = i$$66 < characters$$3.length;
        for (;v6962;) {
          char$$12 = characters$$3[i$$66];
          JAM.set(childrenValues, characters$$3[i$$66], [], JAM.policy.p2);
          JAM.set(node$$74.data.stat, characters$$3[i$$66], {sd:undefined, u:undefined, n:undefined}, JAM.policy.p2);
          JAM.set(sd$$3, char$$12, [], JAM.policy.p2);
          JAM.set(ui$$3, char$$12, [], JAM.policy.p2);
          JAM.set(num$$8, char$$12, [], JAM.policy.p2);
          i$$66 = i$$66 + 1;
          v6962 = i$$66 < characters$$3.length;
        }
        JAM.call(node$$74.eachSubnode, node$$74, [v492], JAM.policy.p3);
        if (!node$$74.data.leaf) {
          i$$66 = 0;
          var v6974 = i$$66 < characters$$3.length;
          for (;v6974;) {
            char$$12 = characters$$3[i$$66];
            if (childrenValues[char$$12].length !== 0) {
              var v6963 = node$$74.data.stat[char$$12];
              var v31373 = JAM.call(that$$22.meanPop, that$$22, [num$$8[char$$12], ui$$3[char$$12]], JAM.policy.p3);
              v6963.u = v31373;
              JAM.set(node$$74.data.character, char$$12, [node$$74.data.stat[char$$12].u], JAM.policy.p2);
              var v6965 = node$$74.data.stat[char$$12];
              var v31374 = JAM.call(that$$22.sum, that$$22, [num$$8[char$$12]], JAM.policy.p3);
              v6965.n = v31374;
              var v6966 = node$$74.data.stat[char$$12];
              var v31375 = JAM.call(that$$22.sdPop, that$$22, [num$$8[char$$12], sd$$3[char$$12], ui$$3[char$$12], node$$74.data.stat[characters$$3[i$$66]].u], JAM.policy.p3);
              v6966.sd = v31375;
              result$$10 = JAM.call(compareFunction, null, [node$$74.data.stat[char$$12].u, node$$74.data.stat[char$$12].sd, meanTree[char$$12], sdTree[char$$12]], JAM.policy.p3);
            } else {
              JAM.set(node$$74.data.stat, char$$12, {sd:undefined, u:undefined, n:undefined}, JAM.policy.p2);
              result$$10 = true;
            }
            JAM.set(node$$74.data.characterConsistency, char$$12, result$$10, JAM.policy.p2);
            i$$66 = i$$66 + 1;
            v6974 = i$$66 < characters$$3.length;
          }
        } else {
          i$$66 = 0;
          var v6981 = i$$66 < characters$$3.length;
          for (;v6981;) {
            result$$10 = node$$74.data.character;
            var v13753 = result$$10[characters$$3[i$$66]];
            if (v13753) {
              v13753 = typeof result$$10[characters$$3[i$$66]][0] !== "undefined";
            }
            if (v13753) {
              JAM.set(node$$74.data.stat, characters$$3[i$$66], {sd:0, u:result$$10[characters$$3[i$$66]][0], n:1}, JAM.policy.p2);
            } else {
              JAM.set(node$$74.data.stat, characters$$3[i$$66], {sd:undefined, u:undefined, n:undefined}, JAM.policy.p2);
            }
            i$$66 = i$$66 + 1;
            v6981 = i$$66 < characters$$3.length;
          }
        }
        return node$$74.data;
      }
      function compareFunction(mean, sd$$2, mTree, sTree) {
        var test1 = JAM.call(Math.abs, Math, [mean - mTree], JAM.policy.p3) > sTree;
        var test2 = sd$$2 > sTree;
        return!(test1 && test2);
      }
      var n$$37 = this.config.threshold;
      var v6986 = this.graph;
      var root$$8 = JAM.call(v6986.getNode, v6986, [this.root], JAM.policy.p3);
      var meanTree = JAM.call(this.meanAtTree, this, [root$$8, characters$$3], JAM.policy.p3);
      var sdTree = JAM.call(this.sdAtTree, this, [root$$8, characters$$3], JAM.policy.p3);
      var i$$66;
      var that$$22 = this;
      var count$$4 = 0;
      JAM.call($checkQuant, null, [root$$8], JAM.policy.p3);
      return;
    }
    function v491(root$$7, characters$$2) {
      function v490(node$$73) {
        if (node$$73.data.leaf) {
          i = 0;
          var v6992 = i < characters$$2.length;
          for (;v6992;) {
            char$$11 = characters$$2[i];
            var v13761 = node$$73.data.character[char$$11];
            if (v13761) {
              v13761 = typeof node$$73.data.character[char$$11][0] !== "undefined";
            }
            if (v13761) {
              var v6988 = samples$$2[char$$11].value;
              JAM.call(v6988.push, v6988, [node$$73.data.character[char$$11][0]], JAM.policy.p3);
              var v6990 = samples$$2[char$$11].number;
              JAM.call(v6990.push, v6990, [1], JAM.policy.p3);
            }
            i = i + 1;
            v6992 = i < characters$$2.length;
          }
        }
        return;
      }
      var samples$$2 = {};
      var char$$11;
      var result$$9 = {};
      i = 0;
      var v6995 = i < characters$$2.length;
      for (;v6995;) {
        JAM.set(samples$$2, characters$$2[i], {value:[], number:[]}, JAM.policy.p2);
        i = i + 1;
        v6995 = i < characters$$2.length;
      }
      JAM.call(root$$7.eachSubgraph, root$$7, [v490], JAM.policy.p3);
      i = 0;
      var v6998 = i < characters$$2.length;
      for (;v6998;) {
        char$$11 = characters$$2[i];
        var v6996 = result$$9;
        var v6997 = char$$11;
        var v31376 = JAM.call(this.wtmean, this, [samples$$2[char$$11].value, samples$$2[char$$11].number], JAM.policy.p3);
        JAM.set(v6996, v6997, v31376, JAM.policy.p2);
        i = i + 1;
        v6998 = i < characters$$2.length;
      }
      return result$$9;
    }
    function v489(root$$6, characters$$1) {
      function v488(node$$72) {
        if (node$$72.data.leaf) {
          i = 0;
          var v7002 = i < characters$$1.length;
          for (;v7002;) {
            char$$10 = characters$$1[i];
            var v13774 = node$$72.data.character[char$$10];
            if (v13774) {
              v13774 = typeof node$$72.data.character[char$$10][0] !== "undefined";
            }
            if (v13774) {
              var v6999 = samples$$1[char$$10];
              JAM.call(v6999.push, v6999, [node$$72.data.character[char$$10][0]], JAM.policy.p3);
            }
            i = i + 1;
            v7002 = i < characters$$1.length;
          }
        }
        return;
      }
      var samples$$1 = {};
      var char$$10;
      var result$$8 = {};
      i = 0;
      var v7005 = i < characters$$1.length;
      for (;v7005;) {
        JAM.set(samples$$1, characters$$1[i], [], JAM.policy.p2);
        i = i + 1;
        v7005 = i < characters$$1.length;
      }
      JAM.call(root$$6.eachSubgraph, root$$6, [v488], JAM.policy.p3);
      i = 0;
      var v7008 = i < characters$$1.length;
      for (;v7008;) {
        char$$10 = characters$$1[i];
        var v7006 = result$$8;
        var v7007 = char$$10;
        var v31377 = JAM.call(this.variance, this, [samples$$1[char$$10]], JAM.policy.p3);
        JAM.set(v7006, v7007, v31377, JAM.policy.p2);
        i = i + 1;
        v7008 = i < characters$$1.length;
      }
      return result$$8;
    }
    function v487(root$$5, characters) {
      function v486(node$$71) {
        if (node$$71.data.leaf) {
          i = 0;
          var v7012 = i < characters.length;
          for (;v7012;) {
            char$$9 = characters[i];
            var v13784 = node$$71.data.character[char$$9];
            if (v13784) {
              v13784 = typeof node$$71.data.character[char$$9][0] !== "undefined";
            }
            if (v13784) {
              var v7009 = samples[char$$9];
              JAM.call(v7009.push, v7009, [node$$71.data.character[char$$9][0]], JAM.policy.p3);
            }
            i = i + 1;
            v7012 = i < characters.length;
          }
        }
        return;
      }
      var samples = {};
      var char$$9;
      var result$$7 = {};
      i = 0;
      var v7015 = i < characters.length;
      for (;v7015;) {
        JAM.set(samples, characters[i], [], JAM.policy.p2);
        i = i + 1;
        v7015 = i < characters.length;
      }
      JAM.call(root$$5.eachSubgraph, root$$5, [v486], JAM.policy.p3);
      i = 0;
      var v7018 = i < characters.length;
      for (;v7018;) {
        char$$9 = characters[i];
        var v7016 = result$$7;
        var v7017 = char$$9;
        var v31378 = JAM.call(this.sd, this, [samples[char$$9]], JAM.policy.p3);
        JAM.set(v7016, v7017, v31378, JAM.policy.p2);
        i = i + 1;
        v7018 = i < characters.length;
      }
      return result$$7;
    }
    function v485(firstCharacter) {
      var v7019 = firstCharacter;
      if (!v7019) {
        v7019 = this.config.firstCharacter;
      }
      firstCharacter = v7019;
      if (!firstCharacter) {
        return;
      }
      var speciesHash = this.character;
      var speciesName;
      var char$$8;
      var i$$65;
      for (i$$65 in this.graph.nodes) {
        var v13795 = this.graph.nodes;
        if (JAM.call(v13795.hasOwnProperty, v13795, [i$$65], JAM.policy.p3)) {
          var node$$70 = this.graph.nodes[i$$65];
          node$$70.data.character = {};
          if (node$$70.data.leaf) {
            for (key in speciesHash) {
              if (JAM.call(speciesHash.hasOwnProperty, speciesHash, [key], JAM.policy.p3)) {
                var speciesCharacter = speciesHash[key][firstCharacter];
                if (node$$70.name === key) {
                  node$$70.data.colorCharacter = speciesCharacter;
                  node$$70.data.character = speciesHash[key];
                  break;
                }
              }
            }
          }
        }
      }
      return;
    }
    function v484(node$$67, characterList) {
      function downPass(node$$68) {
        function v479(snode) {
          char$$7 = JAM.call(downPass, null, [snode], JAM.policy.p3);
          i$$63 = 0;
          var v7034 = i$$63 < characterList.length;
          for (;v7034;) {
            key$$24 = characterList[i$$63];
            var v7031 = childrenChar[key$$24];
            if (!v7031) {
              v7031 = [];
            }
            JAM.set(childrenChar, key$$24, v7031, JAM.policy.p2);
            var v7032 = childrenChar[key$$24];
            JAM.call(v7032.push, v7032, [char$$7[key$$24]], JAM.policy.p3);
            i$$63 = i$$63 + 1;
            v7034 = i$$63 < characterList.length;
          }
          return;
        }
        var childrenChar = {};
        var key$$24;
        var i$$63;
        var j$$7;
        JAM.call(node$$68.eachSubnode, node$$68, [v479], JAM.policy.p3);
        if (node$$68.data.leaf) {
          var v7035 = node$$68.data.character;
          if (!v7035) {
            v7035 = [];
          }
          return v7035;
        }
        var parentChar = {};
        j$$7 = 0;
        var v7044 = j$$7 < characterList.length;
        for (;v7044;) {
          key$$24 = characterList[j$$7];
          var v7037 = childrenChar[key$$24][0];
          if (!v7037) {
            v7037 = [];
          }
          var intersection = v7037;
          i$$63 = 0;
          var v7039 = i$$63 < childrenChar[key$$24].length;
          for (;v7039;) {
            var v7038 = childrenChar[key$$24][i$$63];
            if (!v7038) {
              v7038 = [];
            }
            char$$7 = v7038;
            intersection = JAM.call(that$$21.intersect, that$$21, [intersection, char$$7], JAM.policy.p3);
            i$$63 = i$$63 + 1;
            v7039 = i$$63 < childrenChar[key$$24].length;
          }
          if (intersection.length > 0) {
            JAM.set(parentChar, key$$24, intersection, JAM.policy.p2);
          } else {
            var v7040 = childrenChar[key$$24][0];
            if (!v7040) {
              v7040 = [];
            }
            char$$7 = v7040;
            i$$63 = 1;
            var v7042 = i$$63 < childrenChar[key$$24].length;
            for (;v7042;) {
              char$$7 = JAM.call(that$$21.union, that$$21, [char$$7, childrenChar[key$$24][i$$63]], JAM.policy.p3);
              i$$63 = i$$63 + 1;
              v7042 = i$$63 < childrenChar[key$$24].length;
            }
            JAM.set(parentChar, key$$24, char$$7, JAM.policy.p2);
          }
          j$$7 = j$$7 + 1;
          v7044 = j$$7 < characterList.length;
        }
        node$$68.data.colorCharacter = parentChar[that$$21.config.firstCharacter];
        return node$$68.data.character = parentChar;
      }
      function upPass(node$$69) {
        function v483(n$$36) {
          JAM.call($upPass, null, [n$$36], JAM.policy.p3);
          return;
        }
        function $upPass(n$$35) {
          function v482(sn) {
            JAM.call($upPass, null, [sn], JAM.policy.p3);
            return;
          }
          function v481(subn$$4) {
            cUnion = JAM.call(that$$21.union, that$$21, [cUnion, subn$$4.data.character[key$$25]], JAM.policy.p3);
            return;
          }
          function v480(subn$$3) {
            if (!cIntersect) {
              cIntersect = subn$$3.data.character[key$$25];
              return;
            }
            cIntersect = JAM.call(that$$21.intersect, that$$21, [cIntersect, subn$$3.data.character[key$$25]], JAM.policy.p3);
            return;
          }
          if (n$$35.data.leaf) {
            return;
          }
          var key$$25;
          var morphData = n$$35.data.character;
          var p$$21 = JAM.call(n$$35.getParents, n$$35, [], JAM.policy.p3)[0];
          var fp;
          var i$$64;
          for (key$$25 in morphData) {
            if (JAM.call(morphData.hasOwnProperty, morphData, [key$$25], JAM.policy.p3)) {
              var sp = morphData[key$$25];
              var fa = p$$21.data.character[key$$25];
              fp = JAM.call(that$$21.intersect, that$$21, [sp, fa], JAM.policy.p3);
              if (fp.length !== fa.length) {
                var cIntersect;
                JAM.call(n$$35.eachSubnode, n$$35, [v480], JAM.policy.p3);
                var v13827 = cIntersect;
                if (v13827) {
                  v13827 = cIntersect.length !== 0;
                }
                if (v13827) {
                  var cUnion = [];
                  var aIntersect;
                  JAM.call(n$$35.eachSubnode, n$$35, [v481], JAM.policy.p3);
                  aIntersect = JAM.call(that$$21.intersect, that$$21, [cUnion, fa], JAM.policy.p3);
                  fp = JAM.call(that$$21.union, that$$21, [aIntersect, n$$35.data.character[key$$25]], JAM.policy.p3);
                } else {
                  fp = JAM.call(that$$21.union, that$$21, [n$$35.data.character[key$$25], fa], JAM.policy.p3);
                }
              }
              JAM.set(n$$35.data.character, key$$25, fp, JAM.policy.p2);
            }
          }
          JAM.call(n$$35.eachSubnode, n$$35, [v482], JAM.policy.p3);
          n$$35.data.colorCharacter = n$$35.data.character[that$$21.config.firstCharacter];
          return;
        }
        JAM.call(node$$69.eachSubnode, node$$69, [v483], JAM.policy.p3);
        return[];
      }
      var v13833 = characterList;
      if (v13833) {
        v13833 = characterList.length != 0;
      }
      if (v13833) {
        var i$$62;
        var char$$7;
        var j$$6;
        var that$$21 = this;
        var result$$6;
        JAM.call(downPass, null, [node$$67], JAM.policy.p3);
        JAM.call(upPass, null, [node$$67], JAM.policy.p3);
      }
      return;
    }
    function v478(node$$66) {
      function v477(elem$$56) {
        elem$$56.exist = false;
        elem$$56.drawn = false;
        if (!elem$$56.data.leaf) {
          elem$$56.data.$type = "circle";
        } else {
          elem$$56.data.$type = "none";
        }
        elem$$56.collapsed = true;
        return;
      }
      function v476(elem$$55) {
        if (!elem$$55.exist) {
          elem$$55.exist = true;
          elem$$55.drawn = true;
        }
        if (!elem$$55.data.leaf) {
          elem$$55.data.$type = "circle";
        } else {
          elem$$55.data.$type = "none";
        }
        elem$$55.collapsed = false;
        if (level$$13 < elem$$55._depth) {
          level$$13 = elem$$55._depth + 1;
        }
        return;
      }
      var level$$13 = 0;
      if (node$$66.collapsed) {
        JAM.call(node$$66.eachSubgraph, node$$66, [v476], JAM.policy.p3);
        if (!node$$66.data.leaf) {
          node$$66.data.$type = "circle";
        } else {
          node$$66.data.$type = "none";
        }
      } else {
        JAM.call(node$$66.eachSubgraph, node$$66, [v477], JAM.policy.p3);
        node$$66.exist = true;
        node$$66.drawn = true;
        level$$13 = false;
        if (!node$$66.data.leaf) {
          node$$66.data.$type = "triangle";
        } else {
          node$$66.data.$type = "none";
        }
      }
      return level$$13;
    }
    function v475(node$$65) {
      if (node$$65.data.$type === "triangle") {
        node$$65.collapsed = true;
      } else {
        node$$65.collapsed = false;
      }
      return;
    }
    function v474(setA$$1, setB$$1) {
      setA$$1 = setA$$1 || [];
      setB$$1 = setB$$1 || [];
      var i$$61;
      var j$$5;
      var sets = [setA$$1, setB$$1];
      var char$$6;
      var union = {};
      i$$61 = 0;
      var v7082 = i$$61 < sets.length;
      for (;v7082;) {
        char$$6 = sets[i$$61];
        j$$5 = 0;
        var v7081 = j$$5 < char$$6.length;
        for (;v7081;) {
          JAM.set(union, char$$6[j$$5], char$$6[j$$5], JAM.policy.p2);
          j$$5 = j$$5 + 1;
          v7081 = j$$5 < char$$6.length;
        }
        i$$61 = i$$61 + 1;
        v7082 = i$$61 < sets.length;
      }
      char$$6 = [];
      for (i$$61 in union) {
        if (JAM.call(union.hasOwnProperty, union, [i$$61], JAM.policy.p3)) {
          JAM.call(char$$6.push, char$$6, [union[i$$61]], JAM.policy.p3);
        }
      }
      return char$$6;
    }
    function v473(setA, setB) {
      var v22411 = !setA;
      if (!v22411) {
        v22411 = !setB;
      }
      var v18908 = v22411;
      if (!v18908) {
        v18908 = setA.length === 0;
      }
      var v13845 = v18908;
      if (!v13845) {
        v13845 = setB.length === 0;
      }
      if (v13845) {
        return[];
      }
      var hashA = {};
      var i$$60;
      var result$$5 = [];
      i$$60 = 0;
      var v7087 = i$$60 < setA.length;
      for (;v7087;) {
        JAM.set(hashA, setA[i$$60], true, JAM.policy.p2);
        i$$60 = i$$60 + 1;
        v7087 = i$$60 < setA.length;
      }
      i$$60 = 0;
      var v7090 = i$$60 < setB.length;
      for (;v7090;) {
        if (hashA[setB[i$$60]]) {
          JAM.call(result$$5.push, result$$5, [setB[i$$60]], JAM.policy.p3);
        }
        i$$60 = i$$60 + 1;
        v7090 = i$$60 < setB.length;
      }
      return result$$5;
    }
    function v472(data$$25, testcase) {
      var v13851 = !data$$25;
      if (!v13851) {
        v13851 = data$$25.length === 0;
      }
      if (v13851) {
        return;
      }
      switch(testcase) {
        case "quant":
          return JAM.call(this.isQuant, this, [data$$25], JAM.policy.p3);
        case "quali":
          return JAM.call(this.isQuali, this, [data$$25], JAM.policy.p3);
      }
      return;
    }
    function v471(data$$24) {
      if (typeof data$$24[0] === "string") {
        return true;
      } else {
        return false;
      }
      return;
    }
    function v470(data$$23) {
      if (typeof data$$23[0] === "number") {
        return true;
      } else {
        return false;
      }
      return;
    }
    function v469(ni, ui$$2) {
      var v18915 = !ni;
      if (!v18915) {
        v18915 = !ui$$2;
      }
      var v13854 = v18915;
      if (!v13854) {
        v13854 = ni.length != ui$$2.length;
      }
      if (v13854) {
        return;
      }
      return JAM.call(this.sum, this, [JAM.call(this.multiply, this, [ni, ui$$2], JAM.policy.p3)], JAM.policy.p3) / JAM.call(this.sum, this, [ni], JAM.policy.p3);
    }
    function v468(num$$7, sd$$1, ui$$1, up$$1) {
      var v26290 = !num$$7;
      if (!v26290) {
        v26290 = !sd$$1;
      }
      var v22415 = v26290;
      if (!v22415) {
        v22415 = !ui$$1;
      }
      var v18919 = v22415;
      if (!v18919) {
        v18919 = num$$7.length !== sd$$1.length;
      }
      var v13856 = v18919;
      if (!v13856) {
        v13856 = sd$$1.length !== ui$$1.length;
      }
      if (v13856) {
        return;
      }
      return JAM.call(Math.sqrt, Math, [JAM.call(this.variancePop, this, [num$$7, sd$$1, ui$$1, up$$1], JAM.policy.p3)], JAM.policy.p3);
    }
    function v467(num$$6, sd, ui, up) {
      function v466(elem$$54) {
        return elem$$54 - 1;
      }
      var v26292 = !num$$6;
      if (!v26292) {
        v26292 = !sd;
      }
      var v22419 = v26292;
      if (!v22419) {
        v22419 = !ui;
      }
      var v18923 = v22419;
      if (!v18923) {
        v18923 = num$$6.length !== sd.length;
      }
      var v13857 = v18923;
      if (!v13857) {
        v13857 = sd.length !== ui.length;
      }
      if (v13857) {
        return;
      }
      if (num$$6.length === 1) {
        return 0;
      }
      var sumNum = JAM.call(this.sum, this, [num$$6], JAM.policy.p3);
      var sqUp = up * up;
      var lessNum;
      var sqSd;
      var sqUi;
      var v7101 = $jit.util;
      lessNum = JAM.call(v7101.map, v7101, [num$$6, v466], JAM.policy.p3);
      sqSd = JAM.call(this.square, this, [sd], JAM.policy.p3);
      sqUi = JAM.call(this.square, this, [ui], JAM.policy.p3);
      return(JAM.call(this.sum, this, [JAM.call(this.multiply, this, [lessNum, sqSd], JAM.policy.p3)], JAM.policy.p3) + JAM.call(this.sum, this, [JAM.call(this.multiply, this, [num$$6, sqUi], JAM.policy.p3)], JAM.policy.p3) - sumNum * sqUp) / (sumNum - 1);
    }
    function v465(num1, num2) {
      var v18929 = !num1;
      if (!v18929) {
        v18929 = !num2;
      }
      var v13861 = v18929;
      if (!v13861) {
        v13861 = num1.length !== num2.length;
      }
      if (v13861) {
        return;
      }
      var i$$59;
      var result$$4 = [];
      i$$59 = 0;
      var v7106 = i$$59 < num1.length;
      for (;v7106;) {
        JAM.call(result$$4.push, result$$4, [num1[i$$59] * num2[i$$59]], JAM.policy.p3);
        i$$59 = i$$59 + 1;
        v7106 = i$$59 < num1.length;
      }
      return result$$4;
    }
    function v464(num$$5) {
      function v463(elem$$53) {
        return elem$$53 * elem$$53;
      }
      var v7107 = $jit.util;
      return JAM.call(v7107.map, v7107, [num$$5, v463], JAM.policy.p3);
    }
    function v462(sample$$3) {
      var v13866 = !sample$$3;
      if (!v13866) {
        v13866 = sample$$3.length === 0;
      }
      if (v13866) {
        return;
      }
      return JAM.call(Math.sqrt, Math, [JAM.call(this.variance, this, [sample$$3], JAM.policy.p3)], JAM.policy.p3);
    }
    function v461(sample$$2) {
      function v460(acc$$1, value$$40) {
        var diff$$3 = value$$40 - avg;
        return acc$$1 + diff$$3 * diff$$3;
      }
      var v13867 = !sample$$2;
      if (!v13867) {
        v13867 = sample$$2.length === 0;
      }
      if (v13867) {
        return;
      }
      var avg;
      var num$$4;
      var total;
      avg = JAM.call(this.mean, this, [sample$$2], JAM.policy.p3);
      num$$4 = sample$$2.length;
      total = JAM.call($$$1.reduce, $$$1, [sample$$2, v460, 0], JAM.policy.p3);
      return total / num$$4;
    }
    function v459(sample$$1, number$$2) {
      var v26294 = !sample$$1;
      if (!v26294) {
        v26294 = sample$$1.length === 0;
      }
      var v22426 = v26294;
      if (!v22426) {
        v22426 = !number$$2;
      }
      var v18937 = v22426;
      if (!v18937) {
        v18937 = number$$2.length === 0;
      }
      var v13868 = v18937;
      if (!v13868) {
        v13868 = number$$2.length !== sample$$1.length;
      }
      if (v13868) {
        return;
      }
      var i$$58;
      var sum$$1 = 0;
      var count$$3 = 0;
      i$$58 = 0;
      var v7113 = i$$58 < number$$2.length;
      for (;v7113;) {
        sum$$1 = sum$$1 + number$$2[i$$58] * sample$$1[i$$58];
        count$$3 = count$$3 + number$$2[i$$58];
        i$$58 = i$$58 + 1;
        v7113 = i$$58 < number$$2.length;
      }
      return sum$$1 / count$$3;
    }
    function v458(sample) {
      var v13873 = !sample;
      if (!v13873) {
        v13873 = sample.length === 0;
      }
      if (v13873) {
        return;
      }
      return JAM.call(this.sum, this, [sample], JAM.policy.p3) / sample.length;
    }
    function v457(array$$13) {
      function v456(acc, value$$39) {
        return acc + value$$39;
      }
      var v13874 = !array$$13;
      if (!v13874) {
        v13874 = array$$13.length === 0;
      }
      if (v13874) {
        return;
      }
      return JAM.call($$$1.reduce, $$$1, [array$$13, v456, 0], JAM.policy.p3);
    }
    function v455(obj$$30) {
      if (typeof obj$$30 === "undefined") {
        return false;
      }
      var i$$57;
      for (i$$57 in obj$$30) {
        if (JAM.call(obj$$30.hasOwnProperty, obj$$30, [i$$57], JAM.policy.p3)) {
          return true;
        }
      }
      return false;
    }
    function v454(controller$$4) {
      var $Phylo = $jit.Phylo;
      var config$$7 = {levelsToShow:2, levelDistance:30, constrained:true, Node:{type:"rectangle"}, duration:700, offsetX:0, offsetY:0};
      var v31379 = JAM.call($$$1.merge, $$$1, [JAM.call(Options, null, ["Canvas", "Fx", "Tree", "PhyloJive", "Node", "Edge", "Controller", "Tips", "NodeStyles", "Events", "Navigation", "Label"], JAM.policy.p3), config$$7, controller$$4], JAM.policy.p3);
      this.controller = this.config = v31379;
      var canvasConfig = this.config;
      if (canvasConfig.useCanvas) {
        this.canvas = canvasConfig.useCanvas;
        this.config.labelContainer = this.canvas.id + "-label";
      } else {
        if (canvasConfig.background) {
          var v7123 = canvasConfig;
          var v31380 = JAM.call($$$1.merge, $$$1, [{type:"Circles"}, canvasConfig.background], JAM.policy.p3);
          v7123.background = v31380;
        }
        var v31381 = JAM.new(Canvas, [this, canvasConfig], JAM.policy.p3);
        this.canvas = v31381;
        var v7125 = this.config;
        var v18948;
        if (typeof canvasConfig.injectInto === "string") {
          v18948 = canvasConfig.injectInto;
        } else {
          v18948 = canvasConfig.injectInto.id;
        }
        v7125.labelContainer = v18948 + "-label";
      }
      this.graphOptions = {"klass":Complex};
      var v31382 = JAM.new(Graph, [this.graphOptions, this.config.Node, this.config.Edge], JAM.policy.p3);
      this.graph = v31382;
      var v31383 = JAM.new($Phylo.Label[canvasConfig.Label.type], [this], JAM.policy.p3);
      this.labels = v31383;
      var v31384 = JAM.new($Phylo.Plot, [this, $Phylo], JAM.policy.p3);
      this.fx = v31384;
      var v31385 = JAM.new($Phylo.Op, [this], JAM.policy.p3);
      this.op = v31385;
      var v31386 = JAM.new($Phylo.Group, [this], JAM.policy.p3);
      this.group = v31386;
      var v31387 = JAM.new($Phylo.Geom, [this], JAM.policy.p3);
      this.geom = v31387;
      this.clickedNode = null;
      JAM.call(this.initializeExtras, this, [], JAM.policy.p3);
      return;
    }
    function getNodesToHide(node$$63) {
      function v451(n$$33) {
        var v13884 = n$$33.exist;
        if (v13884) {
          v13884 = !n$$33.selected;
        }
        if (v13884) {
          JAM.call(nodeArray.push, nodeArray, [n$$33], JAM.policy.p3);
        }
        return;
      }
      function v450(n$$32) {
        var v13885 = n$$32.exist;
        if (v13885) {
          v13885 = !n$$32.selected;
        }
        if (v13885) {
          if (JAM.call(n$$32.isDescendantOf, n$$32, [node$$63.id], JAM.policy.p3)) {
            if (n$$32._depth <= level$$12) {
              JAM.call(nodeArray.push, nodeArray, [n$$32], JAM.policy.p3);
            }
          } else {
            JAM.call(nodeArray.push, nodeArray, [n$$32], JAM.policy.p3);
          }
        }
        return;
      }
      var v7139 = node$$63;
      if (!v7139) {
        v7139 = this.clickedNode;
      }
      node$$63 = v7139;
      if (!this.config.constrained) {
        return[];
      }
      var i$$56;
      var Geom = this.geom;
      var graph$$18 = this.graph;
      var canvas$$31 = this.canvas;
      var level$$12 = node$$63._depth;
      var nodeArray = [];
      JAM.call(graph$$18.eachNode, graph$$18, [v450], JAM.policy.p3);
      var leafLevel = JAM.call(Geom.getRightLevelToShow, Geom, [node$$63, canvas$$31], JAM.policy.p3);
      JAM.call(node$$63.eachLevel, node$$63, [leafLevel, leafLevel, v451], JAM.policy.p3);
      i$$56 = 0;
      var v7144 = i$$56 < nodesInPath.length;
      for (;v7144;) {
        var v7141 = this.graph;
        var n$$31 = JAM.call(v7141.getNode, v7141, [nodesInPath[i$$56]], JAM.policy.p3);
        if (!JAM.call(n$$31.isDescendantOf, n$$31, [node$$63.id], JAM.policy.p3)) {
          JAM.call(nodeArray.push, nodeArray, [n$$31], JAM.policy.p3);
        }
        i$$56 = i$$56 + 1;
        v7144 = i$$56 < nodesInPath.length;
      }
      return nodeArray;
    }
    function getNodesToShow(node$$64) {
      function v453(n$$34) {
        function v452(ch$$11) {
          var v7145 = ch$$11.exist;
          if (v7145) {
            v7145 = !ch$$11.drawn;
          }
          return v7145;
        }
        var v18954 = config$$6.multitree;
        if (v18954) {
          v18954 = !("$orn" in n$$34.data);
        }
        var v13894 = v18954;
        if (v13894) {
          v13894 = JAM.call(n$$34.anySubnode, n$$34, [v452], JAM.policy.p3);
        }
        if (v13894) {
          JAM.call(nodeArray$$1.push, nodeArray$$1, [n$$34], JAM.policy.p3);
        } else {
          var v13895 = n$$34.drawn;
          if (v13895) {
            v13895 = !JAM.call(n$$34.anySubnode, n$$34, ["drawn"], JAM.policy.p3);
          }
          if (v13895) {
            JAM.call(nodeArray$$1.push, nodeArray$$1, [n$$34], JAM.policy.p3);
          }
        }
        return;
      }
      var nodeArray$$1 = [];
      var config$$6 = this.config;
      var v7148 = node$$64;
      if (!v7148) {
        v7148 = this.clickedNode;
      }
      node$$64 = v7148;
      var v7149 = this.clickedNode;
      JAM.call(v7149.eachLevel, v7149, [0, config$$6.levelsToShow, v453], JAM.policy.p3);
      return nodeArray$$1;
    }
    var nodesInPath = [];
    return JAM.new(Class, [{Implements:[Loader, Extras, Layouts.PhyloJive], initialize:v454, hasProperty:v455, sum:v457, mean:v458, wtmean:v459, variance:v461, sd:v462, square:v464, multiply:v465, variancePop:v467, sdPop:v468, meanPop:v469, isQuant:v470, isQuali:v471, characterType:v472, intersect:v473, union:v474, setCollapsed:v475, nodesExpCol:v478, fitchParsimony:v484, setCharacter:v485, sdAtTree:v487, varianceAtTree:v489, meanAtTree:v491, checkQuant:v493, checkQuali:v495, quantParsimony:v497, 
    listCharacters:v498, findAllCharTypes:v500, findQuantMinMax:v502, findQuantRange:v503, colorCharacter:v506, findDistinctCharacterStates:v507, createLegend:v508, findIndex:v509, plot:v510, fitScreen:v511, zoom:v513, switchPosition:v515, switchAlignment:v516, addNodeInPath:v517, clearNodesInPath:v518, refresh:v519, reposition:v521, requestNodes:v523, contract:v524, move:v525, expand:v526, selectPath:v529, setRoot:v531, addSubtree:v532, removeSubtree:v534, select:v537, onClick:v538}], JAM.policy.p3);
  }
  function v449() {
    function v448(node$$61, leaves$$1) {
      function v447(node$$62) {
        leaves$$1 = leaves$$1 + JAM.call(that$$20.computeLeaves, that$$20, [node$$62, 0], JAM.policy.p3);
        return;
      }
      var that$$20 = this;
      JAM.call(node$$61.eachSubnode, node$$61, [v447], JAM.policy.p3);
      if (node$$61.data.leaf) {
        return node$$61.data.leaves = 1;
      }
      return node$$61.data.leaves = leaves$$1;
    }
    function v446(node$$60, prop$$34) {
      function v445(orn$$3) {
        JAM.call(design, null, [that$$19.graph, node$$60, prop$$34, that$$19.config, orn$$3, prop$$34], JAM.policy.p3);
        var v7157 = ["x", "y"];
        var v18957 = orn$$3 == "left";
        if (!v18957) {
          v18957 = orn$$3 == "right";
        }
        var i$$55 = v7157[+v18957];
        var prev;
        if (!prev) {
          prev = node$$60;
        }
        return;
      }
      var config$$5 = this.config;
      var multitree$$2 = config$$5.multitree;
      var align$$1 = config$$5.align;
      var v7160 = align$$1 !== "center";
      if (v7160) {
        v7160 = config$$5.indent;
      }
      var indent = v7160;
      var orn$$2 = config$$5.orientation;
      var v7161;
      if (multitree$$2) {
        v7161 = ["top", "right", "bottom", "left"];
      } else {
        v7161 = [orn$$2];
      }
      var orns = v7161;
      var that$$19 = this;
      JAM.call($$$1.each, $$$1, [orns, v445], JAM.policy.p3);
      return;
    }
    function v444(property, computeLevels) {
      var prop$$33 = property || "start";
      var v7162 = this.graph;
      var node$$59 = JAM.call(v7162.getNode, v7162, [this.root], JAM.policy.p3);
      JAM.call($$$1.extend, $$$1, [node$$59, {"drawn":true, "exist":true, "selected":true}], JAM.policy.p3);
      JAM.call(NodeDim.compute, NodeDim, [this.graph, prop$$33, this.config], JAM.policy.p3);
      var v13902 = !!computeLevels;
      if (!v13902) {
        v13902 = !("_depth" in node$$59);
      }
      if (v13902) {
        var v7167 = this.graph;
        JAM.call(v7167.computeLevels, v7167, [this.root, 0, "ignore"], JAM.policy.p3);
      }
      JAM.call(this.computePositions, this, [node$$59, prop$$33], JAM.policy.p3);
      return;
    }
    function getBoundaries(graph$$16, config$$3, level$$11, orn, prop$$31) {
      function v440(n$$28) {
        var v13903 = n$$28._depth == level$$11;
        if (v13903) {
          var v18962 = !multitree;
          if (!v18962) {
            var v22433 = "$orn" in n$$28.data;
            if (v22433) {
              v22433 = n$$28.data.$orn == orn;
            }
            v18962 = v22433;
          }
          v13903 = v18962;
        }
        if (v13903) {
          var dw = JAM.call(n$$28.getData, n$$28, ["width", prop$$31], JAM.policy.p3);
          var dh = JAM.call(n$$28.getData, n$$28, ["height", prop$$31], JAM.policy.p3);
          var v7170;
          if (w$$6 < dw) {
            v7170 = dw;
          } else {
            v7170 = w$$6;
          }
          w$$6 = v7170;
          var v7171;
          if (h$$4 < dh) {
            v7171 = dh;
          } else {
            v7171 = h$$4;
          }
          h$$4 = v7171;
        }
        return;
      }
      var dim$$9 = config$$3.Node;
      var multitree = config$$3.multitree;
      if (dim$$9.overridable) {
        var w$$6 = -1;
        var h$$4 = -1;
        JAM.call(graph$$16.eachNode, graph$$16, [v440], JAM.policy.p3);
        var v13906;
        if (w$$6 < 0) {
          v13906 = dim$$9.width;
        } else {
          v13906 = w$$6;
        }
        var v7173 = v13906;
        var v13907;
        if (h$$4 < 0) {
          v13907 = dim$$9.height;
        } else {
          v13907 = h$$4;
        }
        return{"width":v7173, "height":v13907};
      } else {
        return dim$$9;
      }
      return;
    }
    function design(graph$$17, node$$56, prop$$32, config$$4, orn$$1) {
      function v443(node$$58) {
        if (node$$58.data.len < min$$2) {
          min$$2 = node$$58.data.len;
        }
        if (node$$58.data.len > max$$1) {
          max$$1 = node$$58.data.len;
        }
        return;
      }
      function $design(node$$57, maxsize, y$$47, xpos) {
        function v442(n$$30) {
          var v13910 = !n$$30.exist;
          if (v13910) {
            v13910 = !n$$30.drawn;
          }
          if (v13910) {
            anyChildVisible = false;
          }
          return;
        }
        function v441(n$$29) {
          if (n$$29.exist) {
            subnodeVisible = true;
            y$$47 = JAM.call($design, null, [n$$29, null, y$$47, xpos], JAM.policy.p3);
            if (ymin > y$$47.ymid) {
              ymin = y$$47.ymid;
            }
            if (ymax < y$$47.ymid) {
              ymax = y$$47.ymid;
            }
          }
          return;
        }
        var ymin = Number.MAX_VALUE;
        var ymax = Number.MIN_VALUE;
        var subnodeVisible = false;
        if (config$$4.branchLength) {
          xpos = xpos + (10 + graph$$17.factor * node$$57.data.len * config$$4.branchMultiplier);
        } else {
          xpos = xpos + config$$4.levelDistance;
        }
        JAM.call(node$$57.eachSubnode, node$$57, [v441], JAM.policy.p3);
        if (graph$$17.maxXpos < xpos) {
          graph$$17.maxXpos = xpos;
        }
        if (subnodeVisible) {
          y$$47.ymid = JAM.call(node$$57.getPos, node$$57, [prop$$32], JAM.policy.p3)["y"] = (ymax + ymin) / 2;
        } else {
          y$$47.ymid = y$$47.ymin = y$$47.ymax = JAM.call(node$$57.getPos, node$$57, [prop$$32], JAM.policy.p3)["y"] = y$$47.ymax + JAM.call(node$$57.getData, node$$57, [s$$9, prop$$32], JAM.policy.p3) + siblingOffset;
        }
        JAM.call(node$$57.getPos, node$$57, [prop$$32], JAM.policy.p3)["x"] = xpos;
        if (!node$$57.data.leaf) {
          var anyChildVisible = true;
          JAM.call(node$$57.eachLevel, node$$57, [1, 1, v442], JAM.policy.p3);
          if (!anyChildVisible) {
            node$$57.data.display = "";
            node$$57.data.$type = "triangle";
          } else {
            node$$57.data.display = "none";
            node$$57.data.$type = "circle";
          }
        }
        return y$$47;
      }
      var multitree$$1 = config$$4.multitree;
      var auxp = ["x", "y"];
      var auxs = ["width", "height"];
      var v13919 = orn$$1 == "left";
      if (!v13919) {
        v13919 = orn$$1 == "right";
      }
      var ind = +v13919;
      var p$$20 = auxp[ind];
      var notp = auxp[1 - ind];
      var cnode = config$$4.Node;
      var s$$9 = auxs[ind];
      var nots = auxs[1 - ind];
      var siblingOffset = config$$4.siblingOffset;
      var subtreeOffset = config$$4.subtreeOffset;
      var align = config$$4.align;
      graph$$17.maxXpos = Number.MIN_VALUE;
      var v18974 = !graph$$17.maxLen;
      if (v18974) {
        v18974 = !graph$$17.minLen;
      }
      var v13920 = v18974;
      if (v13920) {
        v13920 = !graph$$17.factor;
      }
      if (v13920) {
        var max$$1 = Number.MIN_VALUE;
        var min$$2 = Number.MAX_VALUE;
        JAM.call(graph$$17.eachNode, graph$$17, [v443], JAM.policy.p3);
        graph$$17.minLen = min$$2;
        graph$$17.maxLen = max$$1;
        var constant = config$$4.width / graph$$17.depth.length;
        graph$$17.factor = constant / (graph$$17.maxLen - graph$$17.minLen);
      }
      JAM.call($design, null, [node$$56, false, {ymid:0, ymin:0, ymax:0}, 0], JAM.policy.p3);
      var v13924 = graph$$17.maxXpos;
      var v18976 = node$$56.data.$dim + 10;
      if (!v18976) {
        v18976 = 0;
      }
      graph$$17.maxXpos = v13924 + v18976;
      return;
    }
    var slice = Array.prototype.slice;
    return JAM.new(Class, [{compute:v444, computePositions:v446, computeLeaves:v448}], JAM.policy.p3);
  }
  function v439(opt$$24) {
    JAM.call($$$1.extend, $$$1, [this.label.style, {"visibility":"hidden", "position":"absolute", "width":"auto", "height":"auto"}], JAM.policy.p3);
    this.label.className = "jit-autoadjust-label";
    return;
  }
  function v438(opt$$23) {
    if (!this.label) {
      var v31388 = JAM.call(document.createElement, document, ["div"], JAM.policy.p3);
      this.label = v31388;
      var v7208 = document.body;
      JAM.call(v7208.appendChild, v7208, [this.label], JAM.policy.p3);
    }
    JAM.call(this.setLabelStyles, this, [opt$$23], JAM.policy.p3);
    return;
  }
  function v437(graph$$15, prop$$30, opt$$22) {
    function v436(n$$27) {
      var autoWidth = JAM.call(n$$27.getData, n$$27, ["autoWidth"], JAM.policy.p3);
      var autoHeight = JAM.call(n$$27.getData, n$$27, ["autoHeight"], JAM.policy.p3);
      if (autoWidth || autoHeight) {
        delete n$$27.data.$width;
        delete n$$27.data.$height;
        delete n$$27.data.$dim;
        var width$$22 = JAM.call(n$$27.getData, n$$27, ["width"], JAM.policy.p3);
        var height$$19 = JAM.call(n$$27.getData, n$$27, ["height"], JAM.policy.p3);
        var v7214;
        if (autoWidth) {
          v7214 = "auto";
        } else {
          v7214 = width$$22 + "px";
        }
        style$$5.width = v7214;
        var v7215;
        if (autoHeight) {
          v7215 = "auto";
        } else {
          v7215 = height$$19 + "px";
        }
        style$$5.height = v7215;
        JAM.set(label$$10, "innerHTML", n$$27.name);
        var offsetWidth = label$$10.offsetWidth;
        var offsetHeight = label$$10.offsetHeight;
        var type$$55 = JAM.call(n$$27.getData, n$$27, ["type"], JAM.policy.p3);
        if (JAM.call($$$1.indexOf, $$$1, [["circle", "square", "triangle", "star"], type$$55], JAM.policy.p3) === -1) {
          JAM.call(n$$27.setData, n$$27, ["width", offsetWidth], JAM.policy.p3);
          JAM.call(n$$27.setData, n$$27, ["height", offsetHeight], JAM.policy.p3);
        } else {
          var v7216;
          if (offsetWidth > offsetHeight) {
            v7216 = offsetWidth;
          } else {
            v7216 = offsetHeight;
          }
          var dim$$8 = v7216;
          JAM.call(n$$27.setData, n$$27, ["width", dim$$8], JAM.policy.p3);
          JAM.call(n$$27.setData, n$$27, ["height", dim$$8], JAM.policy.p3);
          JAM.call(n$$27.setData, n$$27, ["dim", dim$$8], JAM.policy.p3);
        }
      }
      return;
    }
    JAM.call(this.initializeLabel, this, [opt$$22], JAM.policy.p3);
    var label$$10 = this.label;
    var style$$5 = label$$10.style;
    JAM.call(graph$$15.eachNode, graph$$15, [v436], JAM.policy.p3);
    return;
  }
  function v435(type$$54) {
    function v434(node$$55) {
      function v433(adj$$20) {
        var nodeTo$$5 = adj$$20.nodeTo;
        if (!!nodeTo$$5.visited === T$$1) {
          var ansAdj = {};
          ansAdj.nodeTo = nodeTo$$5.id;
          ansAdj.data = adj$$20.data;
          JAM.call(adjs$$2.push, adjs$$2, [ansAdj], JAM.policy.p3);
        }
        return;
      }
      var ansNode = {};
      ansNode.id = node$$55.id;
      ansNode.name = node$$55.name;
      ansNode.data = node$$55.data;
      var adjs$$2 = [];
      JAM.call(node$$55.eachAdjacency, node$$55, [v433], JAM.policy.p3);
      ansNode.adjacencies = adjs$$2;
      JAM.call(ans$$13.push, ans$$13, [ansNode], JAM.policy.p3);
      node$$55.visited = !T$$1;
      return;
    }
    function recTree(node$$54) {
      function v432(n$$26) {
        JAM.call(ch$$10.push, ch$$10, [JAM.call(recTree, null, [n$$26], JAM.policy.p3)], JAM.policy.p3);
        return;
      }
      var ans$$14 = {};
      ans$$14.id = node$$54.id;
      ans$$14.name = node$$54.name;
      ans$$14.data = node$$54.data;
      var ch$$10 = [];
      JAM.call(node$$54.eachSubnode, node$$54, [v432], JAM.policy.p3);
      ans$$14.children = ch$$10;
      return ans$$14;
    }
    type$$54 = type$$54 || "tree";
    if (type$$54 == "tree") {
      var ans$$13 = {};
      var v7221 = this.graph;
      var rootNode = JAM.call(v7221.getNode, v7221, [this.root], JAM.policy.p3);
      ans$$13 = JAM.call(recTree, null, [rootNode], JAM.policy.p3);
      return ans$$13;
    } else {
      ans$$13 = [];
      var v22443 = this.graph;
      var T$$1 = !!JAM.call(v22443.getNode, v22443, [this.root], JAM.policy.p3).visited;
      var v7224 = this.graph;
      JAM.call(v7224.eachNode, v7224, [v434], JAM.policy.p3);
      return ans$$13;
    }
    return;
  }
  function v431(json$$8, i$$53) {
    this.json = json$$8;
    var v13932 = this.labels;
    if (v13932) {
      v13932 = this.labels.clearLabels;
    }
    if (v13932) {
      var v7226 = this.labels;
      JAM.call(v7226.clearLabels, v7226, [true], JAM.policy.p3);
    }
    var v31389 = JAM.call(this.construct, this, [json$$8], JAM.policy.p3);
    this.graph = v31389;
    if (JAM.call($$$1.type, $$$1, [json$$8], JAM.policy.p3) != "array") {
      this.root = json$$8.id;
    } else {
      var v18981;
      if (i$$53) {
        v18981 = i$$53;
      } else {
        v18981 = 0;
      }
      this.root = json$$8[v18981].id;
    }
    return;
  }
  function v430(json$$5) {
    function v429(ans$$12, json$$7) {
      function getNode(id$$28) {
        var i$$52 = 0;
        var l$$20 = json$$7.length;
        var v7231 = i$$52 < l$$20;
        for (;v7231;) {
          if (json$$7[i$$52].id == id$$28) {
            return json$$7[i$$52];
          }
          i$$52 = i$$52 + 1;
          v7231 = i$$52 < l$$20;
        }
        var newNode$$1 = {"id":id$$28, "name":id$$28};
        return JAM.call(ans$$12.addNode, ans$$12, [newNode$$1], JAM.policy.p3);
      }
      var i$$51 = 0;
      var l$$19 = json$$7.length;
      var v7239 = i$$51 < l$$19;
      for (;v7239;) {
        JAM.call(ans$$12.addNode, ans$$12, [json$$7[i$$51]], JAM.policy.p3);
        var adj$$19 = json$$7[i$$51].adjacencies;
        if (adj$$19) {
          var j$$4 = 0;
          var lj = adj$$19.length;
          var v7238 = j$$4 < lj;
          for (;v7238;) {
            var node$$53 = adj$$19[j$$4];
            var data$$22 = {};
            if (typeof adj$$19[j$$4] != "string") {
              data$$22 = JAM.call($$$1.merge, $$$1, [node$$53.data, {}], JAM.policy.p3);
              node$$53 = node$$53.nodeTo;
            }
            JAM.call(ans$$12.addAdjacence, ans$$12, [json$$7[i$$51], JAM.call(getNode, null, [node$$53], JAM.policy.p3), data$$22], JAM.policy.p3);
            j$$4 = j$$4 + 1;
            v7238 = j$$4 < lj;
          }
        }
        i$$51 = i$$51 + 1;
        v7239 = i$$51 < l$$19;
      }
      return;
    }
    function v428(ans$$11, json$$6) {
      JAM.call(ans$$11.addNode, ans$$11, [json$$6], JAM.policy.p3);
      if (json$$6.children) {
        var i$$50 = 0;
        var ch$$9 = json$$6.children;
        var v7242 = i$$50 < ch$$9.length;
        for (;v7242;) {
          JAM.call(ans$$11.addAdjacence, ans$$11, [json$$6, ch$$9[i$$50]], JAM.policy.p3);
          JAM.call(arguments.callee, arguments, [ans$$11, ch$$9[i$$50]], JAM.policy.p3);
          i$$50 = i$$50 + 1;
          v7242 = i$$50 < ch$$9.length;
        }
      }
      return;
    }
    var isGraph = JAM.call($$$1.type, $$$1, [json$$5], JAM.policy.p3) == "array";
    var ans$$10 = JAM.new(Graph, [this.graphOptions, this.config.Node, this.config.Edge, this.config.Label], JAM.policy.p3);
    if (!isGraph) {
      JAM.call(v428, null, [ans$$10, json$$5], JAM.policy.p3);
    } else {
      JAM.call(v429, null, [ans$$10, json$$5], JAM.policy.p3);
    }
    return ans$$10;
  }
  function v427(node$$52, canvas$$30) {
    var config$$2 = this.config;
    var level$$10 = config$$2.levelsToShow;
    var constrained = config$$2.constrained;
    if (!constrained) {
      return level$$10;
    }
    var v13942 = !JAM.call(this.treeFitsInCanvas, this, [node$$52, canvas$$30, level$$10], JAM.policy.p3);
    if (v13942) {
      v13942 = level$$10 > 1;
    }
    var v7251 = v13942;
    for (;v7251;) {
      level$$10 = level$$10 - 1;
      var v13943 = !JAM.call(this.treeFitsInCanvas, this, [node$$52, canvas$$30, level$$10], JAM.policy.p3);
      if (v13943) {
        v13943 = level$$10 > 1;
      }
      v7251 = v13943;
    }
    return level$$10;
  }
  function v426(node$$51, canvas$$29, callback$$25) {
    function v425(n$$25) {
      var d$$4 = n$$25._depth - node$$51._depth;
      if (d$$4 > level$$9) {
        JAM.call(opt$$21.onHide, opt$$21, [n$$25], JAM.policy.p3);
        if (opt$$21.execHide) {
          n$$25.drawn = false;
          n$$25.exist = false;
          JAM.call(fx$$1.hideLabel, fx$$1, [n$$25, false], JAM.policy.p3);
        }
      } else {
        JAM.call(opt$$21.onShow, opt$$21, [n$$25], JAM.policy.p3);
        if (opt$$21.execShow) {
          n$$25.exist = true;
        }
      }
      return;
    }
    var level$$9 = JAM.call(this.getRightLevelToShow, this, [node$$51, canvas$$29], JAM.policy.p3);
    var fx$$1 = this.viz.labels;
    var opt$$21 = JAM.call($$$1.merge, $$$1, [{execShow:true, execHide:true, onHide:$$$1.empty, onShow:$$$1.empty}, callback$$25 || {}], JAM.policy.p3);
    JAM.call(node$$51.eachLevel, node$$51, [0, this.config.levelsToShow, v425], JAM.policy.p3);
    node$$51.drawn = true;
    return;
  }
  function v424(pos$$34, prop$$29) {
    function v423(elem$$52) {
      function v422(p$$19) {
        var v7261 = JAM.call(elem$$52.getPos, elem$$52, [p$$19], JAM.policy.p3);
        JAM.call(v7261.$add, v7261, [pos$$34], JAM.policy.p3);
        return;
      }
      JAM.call($$$1.each, $$$1, [prop$$29, v422], JAM.policy.p3);
      return;
    }
    prop$$29 = JAM.call($$$1.splat, $$$1, [prop$$29], JAM.policy.p3);
    var v7262 = this.viz.graph;
    JAM.call(v7262.eachNode, v7262, [v423], JAM.policy.p3);
    return;
  }
  function v421(viz$$20) {
    this.viz = viz$$20;
    this.config = viz$$20.config;
    this.node = viz$$20.config.Node;
    this.edge = viz$$20.config.Edge;
    return;
  }
  function v420(canvas$$28, node$$50, controller$$3) {
    var id$$27 = node$$50.id;
    var tag$$3 = JAM.call(this.getLabel, this, [id$$27], JAM.policy.p3);
    var v13948 = !tag$$3;
    if (v13948) {
      v13948 = !(tag$$3 = JAM.call(document.getElementById, document, [id$$27], JAM.policy.p3));
    }
    if (v13948) {
      var ns = "http://www.w3.org/2000/svg";
      tag$$3 = JAM.call(document.createElementNS, document, [ns, "svg:text"], JAM.policy.p3);
      var tspan = JAM.call(document.createElementNS, document, [ns, "svg:tspan"], JAM.policy.p3);
      JAM.call(tag$$3.appendChild, tag$$3, [tspan], JAM.policy.p3);
      var container$$2 = JAM.call(this.getLabelContainer, this, [], JAM.policy.p3);
      JAM.call(tag$$3.setAttribute, tag$$3, ["id", id$$27], JAM.policy.p3);
      JAM.call(tag$$3.setAttribute, tag$$3, ["class", "node"], JAM.policy.p3);
      JAM.call(container$$2.appendChild, container$$2, [tag$$3], JAM.policy.p3);
      JAM.call(controller$$3.onCreateLabel, controller$$3, [tag$$3, node$$50], JAM.policy.p3);
      JAM.set(this.labels, node$$50.id, tag$$3, JAM.policy.p2);
    }
    JAM.call(this.placeLabel, this, [tag$$3, node$$50, controller$$3], JAM.policy.p3);
    return;
  }
  function v419(canvas$$27, node$$49, controller$$2) {
    var id$$26 = node$$49.id;
    var tag$$2 = JAM.call(this.getLabel, this, [id$$26], JAM.policy.p3);
    var v13949 = !tag$$2;
    if (v13949) {
      v13949 = !(tag$$2 = JAM.call(document.getElementById, document, [id$$26], JAM.policy.p3));
    }
    if (v13949) {
      tag$$2 = JAM.call(document.createElement, document, ["div"], JAM.policy.p3);
      var container$$1 = JAM.call(this.getLabelContainer, this, [], JAM.policy.p3);
      tag$$2.id = id$$26;
      tag$$2.className = "node";
      tag$$2.style.position = "absolute";
      JAM.call(controller$$2.onCreateLabel, controller$$2, [tag$$2, node$$49], JAM.policy.p3);
      JAM.call(container$$1.appendChild, container$$1, [tag$$2], JAM.policy.p3);
      JAM.set(this.labels, node$$49.id, tag$$2, JAM.policy.p2);
    }
    JAM.call(this.placeLabel, this, [tag$$2, node$$49, controller$$2], JAM.policy.p3);
    return;
  }
  function v418(pos$$33, canvas$$26) {
    var size$$7 = JAM.call(canvas$$26.getSize, canvas$$26, [], JAM.policy.p3);
    var v13950 = pos$$33.w;
    if (v13950) {
      v13950 = pos$$33.h;
    }
    if (v13950) {
      var v22445 = pos$$33.x >= size$$7.width;
      if (!v22445) {
        v22445 = pos$$33.x < -pos$$33.w;
      }
      var v18988 = v22445;
      if (!v18988) {
        v18988 = pos$$33.y >= size$$7.height;
      }
      var v13951 = v18988;
      if (!v13951) {
        v13951 = pos$$33.y < -pos$$33.h;
      }
      if (v13951) {
        return false;
      }
    } else {
      var v22450 = pos$$33.x >= size$$7.width;
      if (!v22450) {
        v22450 = pos$$33.x < 0;
      }
      var v18992 = v22450;
      if (!v18992) {
        v18992 = pos$$33.y >= size$$7.height;
      }
      var v13952 = v18992;
      if (!v13952) {
        v13952 = pos$$33.y < 0;
      }
      if (v13952) {
        return false;
      }
    }
    return true;
  }
  function v417(node$$48, show$$1) {
    function v416(n$$24) {
      lab = JAM.call(that$$18.getLabel, that$$18, [n$$24.id], JAM.policy.p3);
      if (lab) {
        lab.style.display = st$$1;
      }
      return;
    }
    node$$48 = JAM.call($$$1.splat, $$$1, [node$$48], JAM.policy.p3);
    var v7277;
    if (show$$1) {
      v7277 = "";
    } else {
      v7277 = "none";
    }
    var st$$1 = v7277;
    var lab;
    var that$$18 = this;
    JAM.call($$$1.each, $$$1, [node$$48, v416], JAM.policy.p3);
    return;
  }
  function v415(id$$25) {
    var elem$$51 = JAM.call(this.getLabel, this, [id$$25], JAM.policy.p3);
    var v13953 = elem$$51;
    if (v13953) {
      v13953 = elem$$51.parentNode;
    }
    if (v13953) {
      var v7278 = elem$$51.parentNode;
      JAM.call(v7278.removeChild, v7278, [elem$$51], JAM.policy.p3);
    }
    return;
  }
  function v414(force$$5) {
    var id$$24;
    for (id$$24 in this.labels) {
      var v13954 = force$$5;
      if (!v13954) {
        var v22454 = this.viz.graph;
        v13954 = !JAM.call(v22454.hasNode, v22454, [id$$24], JAM.policy.p3);
      }
      if (v13954) {
        JAM.call(this.disposeLabel, this, [id$$24], JAM.policy.p3);
        delete this.labels[id$$24];
      }
    }
    return;
  }
  function v413(hide) {
    var container = JAM.call(this.getLabelContainer, this, [], JAM.policy.p3);
    if (hide) {
      container.style.display = "none";
    } else {
      container.style.display = "";
    }
    this.labelsHidden = hide;
    return;
  }
  function v412(id$$23) {
    var v7285;
    var v18997 = id$$23 in this.labels;
    if (v18997) {
      v18997 = this.labels[id$$23] != null;
    }
    if (v18997) {
      v7285 = this.labels[id$$23];
    } else {
      var v13956 = this.labels;
      var v13957 = id$$23;
      var v31390 = JAM.call(document.getElementById, document, [id$$23], JAM.policy.p3);
      v7285 = JAM.set(v13956, v13957, v31390, JAM.policy.p2);
    }
    return v7285;
  }
  function v411() {
    var v7286;
    if (this.labelContainer) {
      v7286 = this.labelContainer;
    } else {
      var v31391 = JAM.call(document.getElementById, document, [this.viz.config.labelContainer], JAM.policy.p3);
      v7286 = this.labelContainer = v31391;
    }
    return v7286;
  }
  function v410(node$$47, show) {
    function v409(n$$23) {
      n$$23._hideLabel = al;
      return;
    }
    node$$47 = JAM.call($$$1.splat, $$$1, [node$$47], JAM.policy.p3);
    var v7287;
    if (show) {
      v7287 = false;
    } else {
      v7287 = true;
    }
    var al = v7287;
    JAM.call($$$1.each, $$$1, [node$$47, v409], JAM.policy.p3);
    return;
  }
  function v408(canvas$$25, node$$46, controller$$1) {
    var ctx$$15 = JAM.call(canvas$$25.getCtx, canvas$$25, [], JAM.policy.p3);
    var v7288 = node$$46.pos;
    var pos$$32 = JAM.call(v7288.getc, v7288, [true], JAM.policy.p3);
    JAM.call(ctx$$15.fillText, ctx$$15, [node$$46.name, pos$$32.x, pos$$32.y + JAM.call(node$$46.getData, node$$46, ["height"], JAM.policy.p3) / 2], JAM.policy.p3);
    return;
  }
  function v407(canvas$$24, node$$45, controller) {
    var ctx$$14 = JAM.call(canvas$$24.getCtx, canvas$$24, [], JAM.policy.p3);
    var v7292 = node$$45.pos;
    var pos$$31 = JAM.call(v7292.getc, v7292, [true], JAM.policy.p3);
    ctx$$14.font = JAM.call(node$$45.getLabelData, node$$45, ["style"], JAM.policy.p3) + " " + JAM.call(node$$45.getLabelData, node$$45, ["size"], JAM.policy.p3) + "px " + JAM.call(node$$45.getLabelData, node$$45, ["family"], JAM.policy.p3);
    var v7294 = ctx$$14;
    var v31392 = JAM.call(node$$45.getLabelData, node$$45, ["textAlign"], JAM.policy.p3);
    v7294.textAlign = v31392;
    var v7295 = ctx$$14;
    var v13965 = ctx$$14;
    var v31393 = JAM.call(node$$45.getLabelData, node$$45, ["color"], JAM.policy.p3);
    v7295.fillStyle = v13965.strokeStyle = v31393;
    var v7296 = ctx$$14;
    var v31394 = JAM.call(node$$45.getLabelData, node$$45, ["textBaseline"], JAM.policy.p3);
    v7296.textBaseline = v31394;
    JAM.call(this.renderLabel, this, [canvas$$24, node$$45, controller], JAM.policy.p3);
    return;
  }
  function v406(viz$$19) {
    this.viz = viz$$19;
    return;
  }
  function v405(elem$$50, canvas$$23, opt$$20) {
    var gl = JAM.call(canvas$$23.getCtx, canvas$$23, [], JAM.policy.p3);
    var viewMatrix = JAM.new(Matrix4, [], JAM.policy.p3);
    var lighting = canvas$$23.config.Scene.Lighting;
    var wcanvas = canvas$$23.canvases[0];
    var program$$16 = wcanvas.program;
    var camera = wcanvas.camera;
    if (!elem$$50.geometry) {
      var v7299 = elem$$50;
      var v31395 = JAM.new(O3D[JAM.call(elem$$50.getData, elem$$50, ["type"], JAM.policy.p3)], [], JAM.policy.p3);
      v7299.geometry = v31395;
    }
    var v7301 = elem$$50.geometry;
    JAM.call(v7301.update, v7301, [elem$$50], JAM.policy.p3);
    if (!elem$$50.webGLVertexBuffer) {
      var vertices = [];
      var faces = [];
      var normals = [];
      var vertexIndex = 0;
      var geom$$4 = elem$$50.geometry;
      var i$$49 = 0;
      var vs = geom$$4.vertices;
      var fs = geom$$4.faces;
      var fsl = fs.length;
      var v7334 = i$$49 < fsl;
      for (;v7334;) {
        var face$$3 = fs[i$$49];
        var v1$$1 = vs[face$$3.a];
        var v2$$1 = vs[face$$3.b];
        var v3 = vs[face$$3.c];
        var v7305;
        if (face$$3.d) {
          v7305 = vs[face$$3.d];
        } else {
          v7305 = false;
        }
        var v4 = v7305;
        var n$$22 = face$$3.normal;
        JAM.call(vertices.push, vertices, [v1$$1.x, v1$$1.y, v1$$1.z], JAM.policy.p3);
        JAM.call(vertices.push, vertices, [v2$$1.x, v2$$1.y, v2$$1.z], JAM.policy.p3);
        JAM.call(vertices.push, vertices, [v3.x, v3.y, v3.z], JAM.policy.p3);
        if (v4) {
          JAM.call(vertices.push, vertices, [v4.x, v4.y, v4.z], JAM.policy.p3);
        }
        JAM.call(normals.push, normals, [n$$22.x, n$$22.y, n$$22.z], JAM.policy.p3);
        JAM.call(normals.push, normals, [n$$22.x, n$$22.y, n$$22.z], JAM.policy.p3);
        JAM.call(normals.push, normals, [n$$22.x, n$$22.y, n$$22.z], JAM.policy.p3);
        if (v4) {
          JAM.call(normals.push, normals, [n$$22.x, n$$22.y, n$$22.z], JAM.policy.p3);
        }
        JAM.call(faces.push, faces, [vertexIndex, vertexIndex + 1, vertexIndex + 2], JAM.policy.p3);
        if (v4) {
          JAM.call(faces.push, faces, [vertexIndex, vertexIndex + 2, vertexIndex + 3], JAM.policy.p3);
          vertexIndex = vertexIndex + 4;
        } else {
          vertexIndex = vertexIndex + 3;
        }
        i$$49 = i$$49 + 1;
        v7334 = i$$49 < fsl;
      }
      var v7335 = elem$$50;
      var v31396 = JAM.call(gl.createBuffer, gl, [], JAM.policy.p3);
      v7335.webGLVertexBuffer = v31396;
      JAM.call(gl.bindBuffer, gl, [gl.ARRAY_BUFFER, elem$$50.webGLVertexBuffer], JAM.policy.p3);
      JAM.call(gl.bufferData, gl, [gl.ARRAY_BUFFER, JAM.new(Float32Array, [vertices], JAM.policy.p3), gl.STATIC_DRAW], JAM.policy.p3);
      var v7341 = elem$$50;
      var v31397 = JAM.call(gl.createBuffer, gl, [], JAM.policy.p3);
      v7341.webGLFaceBuffer = v31397;
      JAM.call(gl.bindBuffer, gl, [gl.ELEMENT_ARRAY_BUFFER, elem$$50.webGLFaceBuffer], JAM.policy.p3);
      JAM.call(gl.bufferData, gl, [gl.ELEMENT_ARRAY_BUFFER, JAM.new(Uint16Array, [faces], JAM.policy.p3), gl.STATIC_DRAW], JAM.policy.p3);
      elem$$50.webGLFaceCount = faces.length;
      var v7347 = elem$$50;
      var v31398 = JAM.call(gl.createBuffer, gl, [], JAM.policy.p3);
      v7347.webGLNormalBuffer = v31398;
      JAM.call(gl.bindBuffer, gl, [gl.ARRAY_BUFFER, elem$$50.webGLNormalBuffer], JAM.policy.p3);
      JAM.call(gl.bufferData, gl, [gl.ARRAY_BUFFER, JAM.new(Float32Array, [normals], JAM.policy.p3), gl.STATIC_DRAW], JAM.policy.p3);
    }
    JAM.call(viewMatrix.multiply, viewMatrix, [camera.matrix, elem$$50.geometry.matrix], JAM.policy.p3);
    JAM.call(gl.uniformMatrix4fv, gl, [program$$16.viewMatrix, false, JAM.call(viewMatrix.flatten, viewMatrix, [], JAM.policy.p3)], JAM.policy.p3);
    var v7358 = program$$16.projectionMatrix;
    var v13973 = camera.projectionMatrix;
    JAM.call(gl.uniformMatrix4fv, gl, [v7358, false, JAM.call(v13973.flatten, v13973, [], JAM.policy.p3)], JAM.policy.p3);
    var normalMatrix = JAM.call(Matrix4.makeInvert, Matrix4, [viewMatrix], JAM.policy.p3);
    JAM.call(normalMatrix.$transpose, normalMatrix, [], JAM.policy.p3);
    JAM.call(gl.uniformMatrix4fv, gl, [program$$16.normalMatrix, false, JAM.call(normalMatrix.flatten, normalMatrix, [], JAM.policy.p3)], JAM.policy.p3);
    var color$$4 = JAM.call($$$1.hexToRgb, $$$1, [JAM.call(elem$$50.getData, elem$$50, ["color"], JAM.policy.p3)], JAM.policy.p3);
    JAM.call(color$$4.push, color$$4, [JAM.call(opt$$20.getAlpha, opt$$20, [], JAM.policy.p3)], JAM.policy.p3);
    JAM.call(gl.uniform4f, gl, [program$$16.color, color$$4[0] / 255, color$$4[1] / 255, color$$4[2] / 255, color$$4[3]], JAM.policy.p3);
    JAM.call(gl.uniform1i, gl, [program$$16.enableLighting, lighting.enable], JAM.policy.p3);
    if (lighting.enable) {
      if (lighting.ambient) {
        var acolor = lighting.ambient;
        JAM.call(gl.uniform3f, gl, [program$$16.ambientColor, acolor[0], acolor[1], acolor[2]], JAM.policy.p3);
      }
      if (lighting.directional) {
        var dir = lighting.directional;
        color$$4 = dir.color;
        var pos$$30 = dir.direction;
        var v13977 = JAM.new(Vector3, [pos$$30.x, pos$$30.y, pos$$30.z], JAM.policy.p3);
        var v7376 = JAM.call(v13977.normalize, v13977, [], JAM.policy.p3);
        var vd = JAM.call(v7376.$scale, v7376, [-1], JAM.policy.p3);
        JAM.call(gl.uniform3f, gl, [program$$16.lightingDirection, vd.x, vd.y, vd.z], JAM.policy.p3);
        JAM.call(gl.uniform3f, gl, [program$$16.directionalColor, color$$4[0], color$$4[1], color$$4[2]], JAM.policy.p3);
      }
    }
    JAM.call(gl.bindBuffer, gl, [gl.ARRAY_BUFFER, elem$$50.webGLVertexBuffer], JAM.policy.p3);
    JAM.call(gl.vertexAttribPointer, gl, [program$$16.position, 3, gl.FLOAT, false, 0, 0], JAM.policy.p3);
    JAM.call(gl.bindBuffer, gl, [gl.ARRAY_BUFFER, elem$$50.webGLNormalBuffer], JAM.policy.p3);
    JAM.call(gl.vertexAttribPointer, gl, [program$$16.normal, 3, gl.FLOAT, false, 0, 0], JAM.policy.p3);
    JAM.call(gl.bindBuffer, gl, [gl.ELEMENT_ARRAY_BUFFER, elem$$50.webGLFaceBuffer], JAM.policy.p3);
    JAM.call(gl.drawElements, gl, [gl.TRIANGLES, elem$$50.webGLFaceCount, gl.UNSIGNED_SHORT, 0], JAM.policy.p3);
    return;
  }
  function v404(adj$$18, canvas$$22) {
    function v403() {
      var v13978 = adj$$18.nodeFrom;
      var v7400 = JAM.call(v13978.getData, v13978, ["alpha"], JAM.policy.p3);
      var v13979 = adj$$18.nodeTo;
      return JAM.call(Math.min, Math, [v7400, JAM.call(v13979.getData, v13979, ["alpha"], JAM.policy.p3), JAM.call(adj$$18.getData, adj$$18, ["alpha"], JAM.policy.p3)], JAM.policy.p3);
    }
    if (JAM.call(adj$$18.getData, adj$$18, ["type"], JAM.policy.p3) == "none") {
      return;
    }
    JAM.call(this.plotElement, this, [adj$$18, canvas$$22, {getAlpha:v403}], JAM.policy.p3);
    return;
  }
  function v402(node$$44, canvas$$21) {
    function v401() {
      return JAM.call(node$$44.getData, node$$44, ["alpha"], JAM.policy.p3);
    }
    if (JAM.call(node$$44.getData, node$$44, ["type"], JAM.policy.p3) == "none") {
      return;
    }
    JAM.call(this.plotElement, this, [node$$44, canvas$$21, {getAlpha:v401}], JAM.policy.p3);
    return;
  }
  function v400(elem$$49, props$$15, delta$$20) {
    var v7407 = elem$$49.startPos;
    var from$$10 = JAM.call(v7407.getc, v7407, [true], JAM.policy.p3);
    var v7408 = elem$$49.endPos;
    var to$$11 = JAM.call(v7408.getc, v7408, [true], JAM.policy.p3);
    var v7409 = elem$$49.pos;
    JAM.call(v7409.setc, v7409, [JAM.call(this.compute, this, [from$$10.x, to$$11.x, delta$$20], JAM.policy.p3), JAM.call(this.compute, this, [from$$10.y, to$$11.y, delta$$20], JAM.policy.p3), JAM.call(this.compute, this, [from$$10.z, to$$11.z, delta$$20], JAM.policy.p3)], JAM.policy.p3);
    return;
  }
  function v399(adj$$17, canvas$$20, animating$$3) {
    var f$$3 = JAM.call(adj$$17.getData, adj$$17, ["type"], JAM.policy.p3);
    var ctxObj$$1 = this.edge.CanvasStyles;
    if (f$$3 != "none") {
      var width$$21 = JAM.call(adj$$17.getData, adj$$17, ["lineWidth"], JAM.policy.p3);
      var color$$3 = JAM.call(adj$$17.getData, adj$$17, ["color"], JAM.policy.p3);
      var ctx$$13 = JAM.call(canvas$$20.getCtx, canvas$$20, [], JAM.policy.p3);
      var nodeFrom$$3 = adj$$17.nodeFrom;
      var nodeTo$$4 = adj$$17.nodeTo;
      JAM.call(ctx$$13.save, ctx$$13, [], JAM.policy.p3);
      ctx$$13.lineWidth = width$$21;
      ctx$$13.fillStyle = ctx$$13.strokeStyle = color$$3;
      var v7414 = ctx$$13;
      var v31399 = JAM.call(Math.min, Math, [JAM.call(nodeFrom$$3.getData, nodeFrom$$3, ["alpha"], JAM.policy.p3), JAM.call(nodeTo$$4.getData, nodeTo$$4, ["alpha"], JAM.policy.p3), JAM.call(adj$$17.getData, adj$$17, ["alpha"], JAM.policy.p3)], JAM.policy.p3);
      v7414.globalAlpha = v31399;
      var s$$8;
      for (s$$8 in ctxObj$$1) {
        var v7415 = ctx$$13;
        var v7416 = s$$8;
        var v31400 = JAM.call(adj$$17.getCanvasStyle, adj$$17, [s$$8], JAM.policy.p3);
        JAM.set(v7415, v7416, v31400, JAM.policy.p2);
      }
      var v7417 = this.edgeTypes[f$$3].render;
      JAM.call(v7417.call, v7417, [this, adj$$17, canvas$$20, animating$$3], JAM.policy.p3);
      JAM.call(ctx$$13.restore, ctx$$13, [], JAM.policy.p3);
    }
    return;
  }
  function v398(node$$43, canvas$$19, animating$$2) {
    var f$$2 = JAM.call(node$$43.getData, node$$43, ["type"], JAM.policy.p3);
    var ctxObj = this.node.CanvasStyles;
    if (f$$2 != "none") {
      var width$$20 = JAM.call(node$$43.getData, node$$43, ["lineWidth"], JAM.policy.p3);
      var color$$2 = JAM.call(node$$43.getData, node$$43, ["color"], JAM.policy.p3);
      var alpha$$3 = JAM.call(node$$43.getData, node$$43, ["alpha"], JAM.policy.p3);
      var ctx$$12 = JAM.call(canvas$$19.getCtx, canvas$$19, [], JAM.policy.p3);
      JAM.call(ctx$$12.save, ctx$$12, [], JAM.policy.p3);
      ctx$$12.lineWidth = width$$20;
      ctx$$12.fillStyle = ctx$$12.strokeStyle = color$$2;
      ctx$$12.globalAlpha = alpha$$3;
      var s$$7;
      for (s$$7 in ctxObj) {
        var v7420 = ctx$$12;
        var v7421 = s$$7;
        var v31401 = JAM.call(node$$43.getCanvasStyle, node$$43, [s$$7], JAM.policy.p3);
        JAM.set(v7420, v7421, v31401, JAM.policy.p2);
      }
      var v7422 = this.nodeTypes[f$$2].render;
      JAM.call(v7422.call, v7422, [this, node$$43, canvas$$19, animating$$2], JAM.policy.p3);
      JAM.call(ctx$$12.restore, ctx$$12, [], JAM.policy.p3);
    }
    return;
  }
  function v397(node$$42, opt$$19, animating$$1) {
    function v396(elem$$48) {
      var v19008 = JAM.call(opt$$19.plotSubtree, opt$$19, [node$$42, elem$$48], JAM.policy.p3);
      if (v19008) {
        v19008 = elem$$48.exist;
      }
      var v13993 = v19008;
      if (v13993) {
        v13993 = elem$$48.drawn;
      }
      if (v13993) {
        var adj$$16 = JAM.call(node$$42.getAdjacency, node$$42, [elem$$48.id], JAM.policy.p3);
        var v7425 = !animating$$1;
        if (v7425) {
          JAM.call(opt$$19.onBeforePlotLine, opt$$19, [adj$$16], JAM.policy.p3);
        }
        JAM.call(that$$17.plotLine, that$$17, [adj$$16, canvas$$18, animating$$1], JAM.policy.p3);
        var v7426 = !animating$$1;
        if (v7426) {
          JAM.call(opt$$19.onAfterPlotLine, opt$$19, [adj$$16], JAM.policy.p3);
        }
        JAM.call(that$$17.plotTree, that$$17, [elem$$48, opt$$19, animating$$1], JAM.policy.p3);
      }
      return;
    }
    var that$$17 = this;
    var viz$$18 = this.viz;
    var canvas$$18 = viz$$18.canvas;
    var config$$1 = this.config;
    var ctx$$11 = JAM.call(canvas$$18.getCtx, canvas$$18, [], JAM.policy.p3);
    var nodeAlpha$$1 = JAM.call(node$$42.getData, node$$42, ["alpha"], JAM.policy.p3);
    JAM.call(node$$42.eachSubnode, node$$42, [v396], JAM.policy.p3);
    if (node$$42.drawn) {
      var v7428 = !animating$$1;
      if (v7428) {
        JAM.call(opt$$19.onBeforePlotNode, opt$$19, [node$$42], JAM.policy.p3);
      }
      JAM.call(this.plotNode, this, [node$$42, canvas$$18, animating$$1], JAM.policy.p3);
      var v7429 = !animating$$1;
      if (v7429) {
        JAM.call(opt$$19.onAfterPlotNode, opt$$19, [node$$42], JAM.policy.p3);
      }
      var v19009 = !opt$$19.hideLabels;
      if (v19009) {
        v19009 = opt$$19.withLabels;
      }
      var v13994 = v19009;
      if (v13994) {
        v13994 = nodeAlpha$$1 >= .95;
      }
      if (v13994) {
        var v7430 = this.labels;
        JAM.call(v7430.plotLabel, v7430, [canvas$$18, node$$42, opt$$19], JAM.policy.p3);
      } else {
        var v7431 = this.labels;
        JAM.call(v7431.hideLabel, v7431, [node$$42, false], JAM.policy.p3);
      }
    } else {
      var v7433 = this.labels;
      JAM.call(v7433.hideLabel, v7433, [node$$42, true], JAM.policy.p3);
    }
    return;
  }
  function v395(opt$$18, animating) {
    function v394(node$$41) {
      function v393(adj$$15) {
        var nodeTo$$3 = adj$$15.nodeTo;
        var v19010 = !!nodeTo$$3.visited === T;
        if (v19010) {
          v19010 = node$$41.drawn;
        }
        var v13995 = v19010;
        if (v13995) {
          v13995 = nodeTo$$3.drawn;
        }
        if (v13995) {
          var v7435 = !animating;
          if (v7435) {
            JAM.call(opt$$18.onBeforePlotLine, opt$$18, [adj$$15], JAM.policy.p3);
          }
          JAM.call(that$$16.plotLine, that$$16, [adj$$15, canvas$$17, animating], JAM.policy.p3);
          var v7436 = !animating;
          if (v7436) {
            JAM.call(opt$$18.onAfterPlotLine, opt$$18, [adj$$15], JAM.policy.p3);
          }
        }
        return;
      }
      var nodeAlpha = JAM.call(node$$41.getData, node$$41, ["alpha"], JAM.policy.p3);
      JAM.call(node$$41.eachAdjacency, node$$41, [v393], JAM.policy.p3);
      if (node$$41.drawn) {
        var v7438 = !animating;
        if (v7438) {
          JAM.call(opt$$18.onBeforePlotNode, opt$$18, [node$$41], JAM.policy.p3);
        }
        JAM.call(that$$16.plotNode, that$$16, [node$$41, canvas$$17, animating], JAM.policy.p3);
        var v7439 = !animating;
        if (v7439) {
          JAM.call(opt$$18.onAfterPlotNode, opt$$18, [node$$41], JAM.policy.p3);
        }
      }
      var v13996 = !that$$16.labelsHidden;
      if (v13996) {
        v13996 = opt$$18.withLabels;
      }
      if (v13996) {
        var v13997 = node$$41.drawn;
        if (v13997) {
          v13997 = nodeAlpha >= .95;
        }
        if (v13997) {
          var v7441 = that$$16.labels;
          JAM.call(v7441.plotLabel, v7441, [canvas$$17, node$$41, opt$$18], JAM.policy.p3);
        } else {
          var v7442 = that$$16.labels;
          JAM.call(v7442.hideLabel, v7442, [node$$41, false], JAM.policy.p3);
        }
      }
      node$$41.visited = !T;
      return;
    }
    var viz$$17 = this.viz;
    var aGraph = viz$$17.graph;
    var canvas$$17 = viz$$17.canvas;
    var id$$22 = viz$$17.root;
    var that$$16 = this;
    var ctx$$10 = JAM.call(canvas$$17.getCtx, canvas$$17, [], JAM.policy.p3);
    var min$$1 = Math.min;
    var v7445 = opt$$18;
    if (!v7445) {
      v7445 = this.viz.controller;
    }
    opt$$18 = v7445;
    var v7446 = opt$$18.clearCanvas;
    if (v7446) {
      JAM.call(canvas$$17.clear, canvas$$17, [], JAM.policy.p3);
    }
    var root$$4 = JAM.call(aGraph.getNode, aGraph, [id$$22], JAM.policy.p3);
    if (!root$$4) {
      return;
    }
    var T = !!root$$4.visited;
    JAM.call(aGraph.eachNode, aGraph, [v394], JAM.policy.p3);
    return;
  }
  function v392(opt$$17) {
    function v391(id$$21) {
      var n$$21 = JAM.call(graph$$14.getNode, graph$$14, [id$$21], JAM.policy.p3);
      if (n$$21) {
        var prop$$28;
        for (prop$$28 in props$$14) {
          JAM.call(n$$21.setData, n$$21, [prop$$28, props$$14[prop$$28], "end"], JAM.policy.p3);
        }
      }
      return;
    }
    function v390(n$$20) {
      var prop$$27;
      for (prop$$27 in props$$14) {
        JAM.call(n$$20.setData, n$$20, [prop$$27, props$$14[prop$$27], "end"], JAM.policy.p3);
      }
      return;
    }
    var viz$$16 = this.viz;
    var graph$$14 = viz$$16.graph;
    var animation$$1 = this.nodeFxAnimation;
    var options$$10 = JAM.call($$$1.merge, $$$1, [this.viz.config, {"elements":{"id":false, "properties":{}}, "reposition":false}], JAM.policy.p3);
    opt$$17 = JAM.call($$$1.merge, $$$1, [options$$10, opt$$17 || {}, {onBeforeCompute:$$$1.empty, onAfterCompute:$$$1.empty}], JAM.policy.p3);
    JAM.call(animation$$1.stopTimer, animation$$1, [], JAM.policy.p3);
    var props$$14 = opt$$17.elements.properties;
    if (!opt$$17.elements.id) {
      JAM.call(graph$$14.eachNode, graph$$14, [v390], JAM.policy.p3);
    } else {
      var ids = JAM.call($$$1.splat, $$$1, [opt$$17.elements.id], JAM.policy.p3);
      JAM.call($$$1.each, $$$1, [ids, v391], JAM.policy.p3);
    }
    var propnames = [];
    var prop$$26;
    for (prop$$26 in props$$14) {
      JAM.call(propnames.push, propnames, [prop$$26], JAM.policy.p3);
    }
    var modes$$3 = ["node-property:" + JAM.call(propnames.join, propnames, [":"], JAM.policy.p3)];
    if (opt$$17.reposition) {
      JAM.call(modes$$3.push, modes$$3, ["linear"], JAM.policy.p3);
      JAM.call(viz$$16.compute, viz$$16, ["end"], JAM.policy.p3);
    }
    JAM.call(this.animate, this, [JAM.call($$$1.merge, $$$1, [opt$$17, {modes:modes$$3, type:"nodefx"}], JAM.policy.p3)], JAM.policy.p3);
    return;
  }
  function v389(opt$$16, versor) {
    function v388() {
      if (opt$$16.hideLabels) {
        var v7461 = that$$15.labels;
        JAM.call(v7461.hideLabels, v7461, [false], JAM.policy.p3);
      }
      JAM.call(that$$15.plot, that$$15, [opt$$16], JAM.policy.p3);
      JAM.call(opt$$16.onComplete, opt$$16, [], JAM.policy.p3);
      return;
    }
    function v387(delta$$19) {
      function v386(node$$40) {
        var p$$18;
        for (p$$18 in m$$3) {
          JAM.call(interp[p$$18], interp, [node$$40, m$$3[p$$18], delta$$19, versor], JAM.policy.p3);
        }
        return;
      }
      JAM.call(graph$$13.eachNode, graph$$13, [v386], JAM.policy.p3);
      JAM.call(that$$15.plot, that$$15, [opt$$16, this.$animating, delta$$19], JAM.policy.p3);
      this.$animating = true;
      return;
    }
    opt$$16 = JAM.call($$$1.merge, $$$1, [this.viz.config, opt$$16 || {}], JAM.policy.p3);
    var that$$15 = this;
    var viz$$15 = this.viz;
    var graph$$13 = viz$$15.graph;
    var interp = this.Interpolator;
    var v7467;
    if (opt$$16.type === "nodefx") {
      v7467 = this.nodeFxAnimation;
    } else {
      v7467 = this.animation;
    }
    var animation = v7467;
    var m$$3 = JAM.call(this.prepare, this, [opt$$16.modes], JAM.policy.p3);
    if (opt$$16.hideLabels) {
      var v7469 = this.labels;
      JAM.call(v7469.hideLabels, v7469, [true], JAM.policy.p3);
    }
    var v7471 = JAM.call(animation.setOptions, animation, [JAM.call($$$1.extend, $$$1, [opt$$16, {$animating:false, compute:v387, complete:v388}], JAM.policy.p3)], JAM.policy.p3);
    JAM.call(v7471.start, v7471, [], JAM.policy.p3);
    return;
  }
  function v385(modes$$2) {
    function v384(node$$39) {
      function v383(p$$17) {
        function v382(adj$$14) {
          var i$$48 = 0;
          var l$$18 = prop$$25.length;
          var v7475 = i$$48 < l$$18;
          for (;v7475;) {
            JAM.call(adj$$14[accessors[p$$17].setter], adj$$14, [prop$$25[i$$48], JAM.call(adj$$14[accessors[p$$17].getter], adj$$14, [prop$$25[i$$48]], JAM.policy.p3), "start"], JAM.policy.p3);
            i$$48 = i$$48 + 1;
            v7475 = i$$48 < l$$18;
          }
          return;
        }
        if (p$$17 in m$$2) {
          var prop$$25 = m$$2[p$$17];
          JAM.call(node$$39.eachAdjacency, node$$39, [v382], JAM.policy.p3);
        }
        return;
      }
      function v381(p$$16) {
        if (p$$16 in m$$2) {
          var prop$$24 = m$$2[p$$16];
          var i$$47 = 0;
          var l$$17 = prop$$24.length;
          var v7480 = i$$47 < l$$17;
          for (;v7480;) {
            JAM.call(node$$39[accessors[p$$16].setter], node$$39, [prop$$24[i$$47], JAM.call(node$$39[accessors[p$$16].getter], node$$39, [prop$$24[i$$47]], JAM.policy.p3), "start"], JAM.policy.p3);
            i$$47 = i$$47 + 1;
            v7480 = i$$47 < l$$17;
          }
        }
        return;
      }
      var v7482 = node$$39.startPos;
      JAM.call(v7482.set, v7482, [node$$39.pos], JAM.policy.p3);
      JAM.call($$$1.each, $$$1, [["node-property", "node-style"], v381], JAM.policy.p3);
      JAM.call($$$1.each, $$$1, [["edge-property", "edge-style"], v383], JAM.policy.p3);
      return;
    }
    var graph$$12 = this.viz.graph;
    var accessors = {"node-property":{"getter":"getData", "setter":"setData"}, "edge-property":{"getter":"getData", "setter":"setData"}, "node-style":{"getter":"getCanvasStyle", "setter":"setCanvasStyle"}, "edge-style":{"getter":"getCanvasStyle", "setter":"setCanvasStyle"}};
    var m$$2 = {};
    if (JAM.call($$$1.type, $$$1, [modes$$2], JAM.policy.p3) == "array") {
      var i$$46 = 0;
      var len$$4 = modes$$2.length;
      var v7493 = i$$46 < len$$4;
      for (;v7493;) {
        var v7491 = modes$$2[i$$46];
        var elems = JAM.call(v7491.split, v7491, [":"], JAM.policy.p3);
        JAM.set(m$$2, JAM.call(elems.shift, elems, [], JAM.policy.p3), elems, JAM.policy.p2);
        i$$46 = i$$46 + 1;
        v7493 = i$$46 < len$$4;
      }
    } else {
      var p$$15;
      for (p$$15 in modes$$2) {
        if (p$$15 == "position") {
          JAM.set(m$$2, modes$$2.position, [], JAM.policy.p2);
        } else {
          var v7495 = m$$2;
          var v7496 = p$$15;
          var v31402 = JAM.call($$$1.splat, $$$1, [modes$$2[p$$15]], JAM.policy.p3);
          JAM.set(v7495, v7496, v31402, JAM.policy.p2);
        }
      }
    }
    JAM.call(graph$$12.eachNode, graph$$12, [v384], JAM.policy.p3);
    return m$$2;
  }
  function v380(options$$9) {
    function v379() {
      if (JAM.call(options$$9.condition, options$$9, [], JAM.policy.p3)) {
        JAM.call(options$$9.step, options$$9, [], JAM.policy.p3);
      } else {
        JAM.call(clearInterval, null, [interval], JAM.policy.p3);
        JAM.call(options$$9.onComplete, options$$9, [], JAM.policy.p3);
      }
      var v7500 = that$$14.viz;
      JAM.call(v7500.refresh, v7500, [true], JAM.policy.p3);
      return;
    }
    var that$$14 = this;
    options$$9 = JAM.call($$$1.merge, $$$1, [{condition:JAM.call($$$1.lambda, $$$1, [false], JAM.policy.p3), step:$$$1.empty, onComplete:$$$1.empty, duration:200}, options$$9 || {}], JAM.policy.p3);
    var interval = JAM.call(setInterval, null, [v379, options$$9.duration], JAM.policy.p3);
    return;
  }
  function v378(elem$$47, prop$$23, delta$$18, getter$$5, setter$$5) {
    function v377() {
      return JAM.new($jit.Complex, [0, 0], JAM.policy.p3);
    }
    var from$$9 = JAM.call(elem$$47[getter$$5], elem$$47, [prop$$23, "start"], JAM.policy.p3);
    var to$$10 = JAM.call(elem$$47[getter$$5], elem$$47, [prop$$23, "end"], JAM.policy.p3);
    var cur$$2 = [];
    if (typeof from$$9.offset == "undefined") {
      if (from$$9 === 0) {
        from$$9 = JAM.call($$$1.map, $$$1, [to$$10, v377], JAM.policy.p3);
        from$$9.offset = 0;
      } else {
        if (from$$9.length == 0) {
          JAM.call(from$$9.push, from$$9, [JAM.new($jit.Complex, [0, 0], JAM.policy.p3)], JAM.policy.p3);
        }
        var v7508 = from$$9.length < to$$10.length;
        for (;v7508;) {
          JAM.call(from$$9.push, from$$9, [from$$9[0]], JAM.policy.p3);
          v7508 = from$$9.length < to$$10.length;
        }
        var v7510 = from$$9.length > to$$10.length;
        for (;v7510;) {
          var v14032 = to$$10[0];
          if (!v14032) {
            v14032 = JAM.new($jit.Complex, [0, 0], JAM.policy.p3);
          }
          JAM.call(to$$10.push, to$$10, [v14032], JAM.policy.p3);
          v7510 = from$$9.length > to$$10.length;
        }
        if (from$$9.length == 0) {
          return;
        }
        var l$$16 = from$$9.length;
        var minDist = 1E300;
        var offset$$9 = 0;
        var v7514 = offset$$9 < l$$16;
        for (;v7514;) {
          var d$$3 = 0;
          var i$$45 = 0;
          var v7512 = i$$45 < l$$16;
          for (;v7512;) {
            d$$3 = d$$3 + JAM.call(Geometry.dist2, Geometry, [from$$9[(offset$$9 + i$$45) % l$$16], to$$10[i$$45]], JAM.policy.p3);
            i$$45 = i$$45 + 1;
            v7512 = i$$45 < l$$16;
          }
          if (d$$3 < minDist) {
            from$$9.offset = offset$$9;
            minDist = d$$3;
          }
          offset$$9 = offset$$9 + 1;
          v7514 = offset$$9 < l$$16;
        }
      }
    }
    i$$45 = 0;
    l$$16 = from$$9.length;
    var v7519 = i$$45 < l$$16;
    for (;v7519;) {
      var fromi$$1 = from$$9[(i$$45 + from$$9.offset) % l$$16];
      var toi$$1 = to$$10[i$$45];
      JAM.call(cur$$2.push, cur$$2, [JAM.new($jit.Complex, [JAM.call(this.compute, this, [fromi$$1.x, toi$$1.x, delta$$18], JAM.policy.p3), JAM.call(this.compute, this, [fromi$$1.y, toi$$1.y, delta$$18], JAM.policy.p3)], JAM.policy.p3)], JAM.policy.p3);
      i$$45 = i$$45 + 1;
      v7519 = i$$45 < l$$16;
    }
    JAM.call(elem$$47[setter$$5], elem$$47, [prop$$23, cur$$2], JAM.policy.p3);
    return;
  }
  function v376(elem$$46, props$$13, delta$$17) {
    JAM.call(this["edge"], this, [elem$$46, props$$13, delta$$17, "canvas", "getCanvasStyle", "setCanvasStyle"], JAM.policy.p3);
    return;
  }
  function v375(elem$$45, props$$12, delta$$16) {
    JAM.call(this["node"], this, [elem$$45, props$$12, delta$$16, "canvas", "getCanvasStyle", "setCanvasStyle"], JAM.policy.p3);
    return;
  }
  function v374(elem$$44, props$$11, delta$$15) {
    JAM.call(this["node"], this, [elem$$44, props$$11, delta$$15, "label", "getLabelData", "setLabelData"], JAM.policy.p3);
    return;
  }
  function v373(elem$$43, props$$10, delta$$14) {
    JAM.call(this["edge"], this, [elem$$43, props$$10, delta$$14, "map", "getData", "setData"], JAM.policy.p3);
    return;
  }
  function v372(elem$$42, props$$9, delta$$13) {
    JAM.call(this["node"], this, [elem$$42, props$$9, delta$$13, "map", "getData", "setData"], JAM.policy.p3);
    return;
  }
  function v371(elem$$41, props$$8, delta$$12, mapKey, getter$$4, setter$$4) {
    var adjs$$1 = elem$$41.adjacencies;
    var id$$20;
    for (id$$20 in adjs$$1) {
      JAM.call(this["node"], this, [adjs$$1[id$$20], props$$8, delta$$12, mapKey, getter$$4, setter$$4], JAM.policy.p3);
    }
    return;
  }
  function v370(elem$$40, props$$7, delta$$11, map, getter$$3, setter$$3) {
    map = this[map];
    if (props$$7) {
      var len$$3 = props$$7.length;
      var i$$44 = 0;
      var v7522 = i$$44 < len$$3;
      for (;v7522;) {
        var pi$$1 = props$$7[i$$44];
        JAM.call(this[map[pi$$1]], this, [elem$$40, pi$$1, delta$$11, getter$$3, setter$$3], JAM.policy.p3);
        i$$44 = i$$44 + 1;
        v7522 = i$$44 < len$$3;
      }
    } else {
      for (pi$$1 in map) {
        JAM.call(this[map[pi$$1]], this, [elem$$40, pi$$1, delta$$11, getter$$3, setter$$3], JAM.policy.p3);
      }
    }
    return;
  }
  function v369(elem$$39, prop$$22, delta$$10, getter$$2, setter$$2) {
    var from$$8 = JAM.call(elem$$39[getter$$2], elem$$39, [prop$$22, "start"], JAM.policy.p3);
    var to$$9 = JAM.call(elem$$39[getter$$2], elem$$39, [prop$$22, "end"], JAM.policy.p3);
    var cur$$1 = [];
    var i$$43 = 0;
    var l$$15 = from$$8.length;
    var v7528 = i$$43 < l$$15;
    for (;v7528;) {
      var fromi = from$$8[i$$43];
      var toi = to$$9[i$$43];
      if (fromi.length) {
        var j$$3 = 0;
        var len$$2 = fromi.length;
        var curi = [];
        var v7525 = j$$3 < len$$2;
        for (;v7525;) {
          JAM.call(curi.push, curi, [JAM.call(this.compute, this, [fromi[j$$3], toi[j$$3], delta$$10], JAM.policy.p3)], JAM.policy.p3);
          j$$3 = j$$3 + 1;
          v7525 = j$$3 < len$$2;
        }
        JAM.call(cur$$1.push, cur$$1, [curi], JAM.policy.p3);
      } else {
        JAM.call(cur$$1.push, cur$$1, [JAM.call(this.compute, this, [fromi, toi, delta$$10], JAM.policy.p3)], JAM.policy.p3);
      }
      i$$43 = i$$43 + 1;
      v7528 = i$$43 < l$$15;
    }
    JAM.call(elem$$39[setter$$2], elem$$39, [prop$$22, cur$$1], JAM.policy.p3);
    return;
  }
  function v368(elem$$38, prop$$21, delta$$9, getter$$1, setter$$1) {
    var from$$7 = JAM.call($$$1.hexToRgb, $$$1, [JAM.call(elem$$38[getter$$1], elem$$38, [prop$$21, "start"], JAM.policy.p3)], JAM.policy.p3);
    var to$$8 = JAM.call($$$1.hexToRgb, $$$1, [JAM.call(elem$$38[getter$$1], elem$$38, [prop$$21, "end"], JAM.policy.p3)], JAM.policy.p3);
    var comp = this.compute;
    var val$$5 = JAM.call($$$1.rgbToHex, $$$1, [[JAM.call(parseInt, null, [JAM.call(comp, null, [from$$7[0], to$$8[0], delta$$9], JAM.policy.p3)], JAM.policy.p3), JAM.call(parseInt, null, [JAM.call(comp, null, [from$$7[1], to$$8[1], delta$$9], JAM.policy.p3)], JAM.policy.p3), JAM.call(parseInt, null, [JAM.call(comp, null, [from$$7[2], to$$8[2], delta$$9], JAM.policy.p3)], JAM.policy.p3)]], JAM.policy.p3);
    JAM.call(elem$$38[setter$$1], elem$$38, [prop$$21, val$$5], JAM.policy.p3);
    return;
  }
  function v367(elem$$37, prop$$20, delta$$8, getter, setter) {
    var from$$6 = JAM.call(elem$$37[getter], elem$$37, [prop$$20, "start"], JAM.policy.p3);
    var to$$7 = JAM.call(elem$$37[getter], elem$$37, [prop$$20, "end"], JAM.policy.p3);
    JAM.call(elem$$37[setter], elem$$37, [prop$$20, JAM.call(this.compute, this, [from$$6, to$$7, delta$$8], JAM.policy.p3)], JAM.policy.p3);
    return;
  }
  function v366(elem$$36, props$$6, delta$$7) {
    var v7533 = elem$$36.startPos;
    var from$$5 = JAM.call(v7533.getp, v7533, [true], JAM.policy.p3);
    var v7534 = elem$$36.endPos;
    var to$$6 = JAM.call(v7534.getp, v7534, [], JAM.policy.p3);
    var ans$$9 = JAM.call(to$$6.interpolate, to$$6, [from$$5, delta$$7], JAM.policy.p3);
    var v7535 = elem$$36.pos;
    JAM.call(v7535.setp, v7535, [ans$$9.theta, ans$$9.rho], JAM.policy.p3);
    return;
  }
  function v365(elem$$35, props$$5, delta$$6) {
    var v7538 = elem$$35.startPos;
    var from$$4 = JAM.call(v7538.getc, v7538, [true], JAM.policy.p3);
    var v7539 = elem$$35.endPos;
    var to$$5 = JAM.call(v7539.getc, v7539, [true], JAM.policy.p3);
    var v7540 = elem$$35.pos;
    JAM.call(v7540.setc, v7540, [JAM.call(this.compute, this, [from$$4.x, to$$5.x, delta$$6], JAM.policy.p3), JAM.call(this.compute, this, [from$$4.y, to$$5.y, delta$$6], JAM.policy.p3)], JAM.policy.p3);
    return;
  }
  function v364(elem$$34, props$$4, delta$$5, vector) {
    var v$$2 = JAM.call(vector.scale, vector, [-delta$$5], JAM.policy.p3);
    if (JAM.call(v$$2.norm, v$$2, [], JAM.policy.p3) < 1) {
      var x$$65 = v$$2.x;
      var y$$46 = v$$2.y;
      var v14052 = elem$$34.startPos;
      var v7544 = JAM.call(v14052.getc, v14052, [], JAM.policy.p3);
      var ans$$8 = JAM.call(v7544.moebiusTransformation, v7544, [v$$2], JAM.policy.p3);
      var v7545 = elem$$34.pos;
      JAM.call(v7545.setc, v7545, [ans$$8.x, ans$$8.y], JAM.policy.p3);
      v$$2.x = x$$65;
      v$$2.y = y$$46;
    }
    return;
  }
  function v363(from$$3, to$$4, delta$$4) {
    return from$$3 + (to$$4 - from$$3) * delta$$4;
  }
  function v362(viz$$14, klass$$6) {
    this.viz = viz$$14;
    this.config = viz$$14.config;
    this.node = viz$$14.config.Node;
    this.edge = viz$$14.config.Edge;
    var v31403 = JAM.new(Animation, [], JAM.policy.p3);
    this.animation = v31403;
    var v31404 = JAM.new(klass$$6.Plot.NodeTypes, [], JAM.policy.p3);
    this.nodeTypes = v31404;
    var v31405 = JAM.new(klass$$6.Plot.EdgeTypes, [], JAM.policy.p3);
    this.edgeTypes = v31405;
    this.labels = viz$$14.labels;
    return;
  }
  function v361(from$$2, to$$3, r$$1, canvas$$16) {
    function computeArcThroughTwoPoints(p1, p2) {
      var aDen = p1.x * p2.y - p1.y * p2.x;
      var bDen = aDen;
      var sq1 = JAM.call(p1.squaredNorm, p1, [], JAM.policy.p3);
      var sq2 = JAM.call(p2.squaredNorm, p2, [], JAM.policy.p3);
      if (aDen == 0) {
        return{x:0, y:0, ratio:-1};
      }
      var a$$6 = (p1.y * sq2 - p2.y * sq1 + p1.y - p2.y) / aDen;
      var b$$4 = (p2.x * sq1 - p1.x * sq2 + p2.x - p1.x) / bDen;
      var x$$64 = -a$$6 / 2;
      var y$$45 = -b$$4 / 2;
      var squaredRatio = (a$$6 * a$$6 + b$$4 * b$$4) / 4 - 1;
      if (squaredRatio < 0) {
        return{x:0, y:0, ratio:-1};
      }
      var ratio = JAM.call(Math.sqrt, Math, [squaredRatio], JAM.policy.p3);
      var v14065;
      if (ratio > 1E3) {
        v14065 = -1;
      } else {
        v14065 = ratio;
      }
      var out = {x:x$$64, y:y$$45, ratio:v14065, a:a$$6, b:b$$4};
      return out;
    }
    function sense(angleBegin$$1, angleEnd$$1) {
      var v7564;
      if (angleBegin$$1 < angleEnd$$1) {
        var v14066;
        if (angleBegin$$1 + Math.PI > angleEnd$$1) {
          v14066 = false;
        } else {
          v14066 = true;
        }
        v7564 = v14066;
      } else {
        var v14067;
        if (angleEnd$$1 + Math.PI > angleBegin$$1) {
          v14067 = true;
        } else {
          v14067 = false;
        }
        v7564 = v14067;
      }
      return v7564;
    }
    var ctx$$9 = JAM.call(canvas$$16.getCtx, canvas$$16, [], JAM.policy.p3);
    var centerOfCircle = JAM.call(computeArcThroughTwoPoints, null, [from$$2, to$$3], JAM.policy.p3);
    var v19039 = centerOfCircle.a > 1E3;
    if (!v19039) {
      v19039 = centerOfCircle.b > 1E3;
    }
    var v14069 = v19039;
    if (!v14069) {
      v14069 = centerOfCircle.ratio < 0;
    }
    if (v14069) {
      JAM.call(ctx$$9.beginPath, ctx$$9, [], JAM.policy.p3);
      JAM.call(ctx$$9.moveTo, ctx$$9, [from$$2.x * r$$1, from$$2.y * r$$1], JAM.policy.p3);
      JAM.call(ctx$$9.lineTo, ctx$$9, [to$$3.x * r$$1, to$$3.y * r$$1], JAM.policy.p3);
      JAM.call(ctx$$9.stroke, ctx$$9, [], JAM.policy.p3);
    } else {
      var angleBegin = JAM.call(Math.atan2, Math, [to$$3.y - centerOfCircle.y, to$$3.x - centerOfCircle.x], JAM.policy.p3);
      var angleEnd = JAM.call(Math.atan2, Math, [from$$2.y - centerOfCircle.y, from$$2.x - centerOfCircle.x], JAM.policy.p3);
      sense = JAM.call(sense, null, [angleBegin, angleEnd], JAM.policy.p3);
      JAM.call(ctx$$9.beginPath, ctx$$9, [], JAM.policy.p3);
      JAM.call(ctx$$9.arc, ctx$$9, [centerOfCircle.x * r$$1, centerOfCircle.y * r$$1, centerOfCircle.ratio * r$$1, angleBegin, angleEnd, sense], JAM.policy.p3);
      JAM.call(ctx$$9.stroke, ctx$$9, [], JAM.policy.p3);
    }
    return;
  }
  function v360(posFrom$$1, posTo$$1, pos$$29, epsilon$$1) {
    var v7577 = EdgeHelper.line;
    return JAM.call(v7577.contains, v7577, [posFrom$$1, posTo$$1, pos$$29, epsilon$$1], JAM.policy.p3);
  }
  function v359(from$$1, to$$2, dim$$7, swap, canvas$$15) {
    var ctx$$8 = JAM.call(canvas$$15.getCtx, canvas$$15, [], JAM.policy.p3);
    if (swap) {
      var tmp$$1 = from$$1;
      from$$1 = to$$2;
      to$$2 = tmp$$1;
    }
    var vect = JAM.new(Complex, [to$$2.x - from$$1.x, to$$2.y - from$$1.y], JAM.policy.p3);
    JAM.call(vect.$scale, vect, [dim$$7 / JAM.call(vect.norm, vect, [], JAM.policy.p3)], JAM.policy.p3);
    var intermediatePoint = JAM.new(Complex, [to$$2.x - vect.x, to$$2.y - vect.y], JAM.policy.p3);
    var normal = JAM.new(Complex, [-vect.y / 2, vect.x / 2], JAM.policy.p3);
    var v1 = JAM.call(intermediatePoint.add, intermediatePoint, [normal], JAM.policy.p3);
    var v2 = JAM.call(intermediatePoint.$add, intermediatePoint, [JAM.call(normal.$scale, normal, [-1], JAM.policy.p3)], JAM.policy.p3);
    JAM.call(ctx$$8.beginPath, ctx$$8, [], JAM.policy.p3);
    JAM.call(ctx$$8.moveTo, ctx$$8, [from$$1.x, from$$1.y], JAM.policy.p3);
    JAM.call(ctx$$8.lineTo, ctx$$8, [to$$2.x, to$$2.y], JAM.policy.p3);
    JAM.call(ctx$$8.stroke, ctx$$8, [], JAM.policy.p3);
    JAM.call(ctx$$8.beginPath, ctx$$8, [], JAM.policy.p3);
    JAM.call(ctx$$8.moveTo, ctx$$8, [v1.x, v1.y], JAM.policy.p3);
    JAM.call(ctx$$8.lineTo, ctx$$8, [v2.x, v2.y], JAM.policy.p3);
    JAM.call(ctx$$8.lineTo, ctx$$8, [to$$2.x, to$$2.y], JAM.policy.p3);
    JAM.call(ctx$$8.closePath, ctx$$8, [], JAM.policy.p3);
    JAM.call(ctx$$8.fill, ctx$$8, [], JAM.policy.p3);
    return;
  }
  function v358(posFrom, posTo, pos$$28, epsilon) {
    var min = Math.min;
    var max = Math.max;
    var minPosX = JAM.call(min, null, [posFrom.x, posTo.x], JAM.policy.p3);
    var maxPosX = JAM.call(max, null, [posFrom.x, posTo.x], JAM.policy.p3);
    var minPosY = JAM.call(min, null, [posFrom.y, posTo.y], JAM.policy.p3);
    var maxPosY = JAM.call(max, null, [posFrom.y, posTo.y], JAM.policy.p3);
    var v22478 = pos$$28.x >= minPosX;
    if (v22478) {
      v22478 = pos$$28.x <= maxPosX;
    }
    var v19043 = v22478;
    if (v19043) {
      v19043 = pos$$28.y >= minPosY;
    }
    var v14097 = v19043;
    if (v14097) {
      v14097 = pos$$28.y <= maxPosY;
    }
    if (v14097) {
      if (JAM.call(Math.abs, Math, [posTo.x - posFrom.x], JAM.policy.p3) <= epsilon) {
        return true;
      }
      var dist = (posTo.y - posFrom.y) / (posTo.x - posFrom.x) * (pos$$28.x - posFrom.x) + posFrom.y;
      return JAM.call(Math.abs, Math, [dist - pos$$28.y], JAM.policy.p3) <= epsilon;
    }
    return false;
  }
  function v357(from, to$$1, canvas$$14) {
    var ctx$$7 = JAM.call(canvas$$14.getCtx, canvas$$14, [], JAM.policy.p3);
    JAM.call(ctx$$7.beginPath, ctx$$7, [], JAM.policy.p3);
    JAM.call(ctx$$7.moveTo, ctx$$7, [from.x, from.y], JAM.policy.p3);
    JAM.call(ctx$$7.lineTo, ctx$$7, [to$$1.x, to$$1.y], JAM.policy.p3);
    JAM.call(ctx$$7.stroke, ctx$$7, [], JAM.policy.p3);
    return;
  }
  function v356(npos$$5, pos$$27, dim$$6) {
    var v7613 = NodeHelper.circle;
    return JAM.call(v7613.contains, v7613, [npos$$5, pos$$27, dim$$6], JAM.policy.p3);
  }
  function v355(type$$53, pos$$26, dim$$5, canvas$$13) {
    var ctx$$6 = JAM.call(canvas$$13.getCtx, canvas$$13, [], JAM.policy.p3);
    var pi5 = Math.PI / 5;
    JAM.call(ctx$$6.save, ctx$$6, [], JAM.policy.p3);
    JAM.call(ctx$$6.translate, ctx$$6, [pos$$26.x, pos$$26.y], JAM.policy.p3);
    JAM.call(ctx$$6.beginPath, ctx$$6, [], JAM.policy.p3);
    JAM.call(ctx$$6.moveTo, ctx$$6, [dim$$5, 0], JAM.policy.p3);
    var i$$42 = 0;
    var v7619 = i$$42 < 9;
    for (;v7619;) {
      JAM.call(ctx$$6.rotate, ctx$$6, [pi5], JAM.policy.p3);
      if (i$$42 % 2 == 0) {
        JAM.call(ctx$$6.lineTo, ctx$$6, [dim$$5 / .525731 * .200811, 0], JAM.policy.p3);
      } else {
        JAM.call(ctx$$6.lineTo, ctx$$6, [dim$$5, 0], JAM.policy.p3);
      }
      i$$42 = i$$42 + 1;
      v7619 = i$$42 < 9;
    }
    JAM.call(ctx$$6.closePath, ctx$$6, [], JAM.policy.p3);
    JAM.call(ctx$$6[type$$53], ctx$$6, [], JAM.policy.p3);
    JAM.call(ctx$$6.restore, ctx$$6, [], JAM.policy.p3);
    return;
  }
  function v354(npos$$4, pos$$25, dim$$4) {
    var v7620 = NodeHelper.circle;
    return JAM.call(v7620.contains, v7620, [npos$$4, pos$$25, dim$$4], JAM.policy.p3);
  }
  function v353(type$$52, pos$$24, dim$$3, canvas$$12) {
    var ctx$$5 = JAM.call(canvas$$12.getCtx, canvas$$12, [], JAM.policy.p3);
    var c1x = pos$$24.x;
    var c1y = pos$$24.y - dim$$3;
    var c2x = c1x - dim$$3;
    var c2y = pos$$24.y + dim$$3;
    var c3x = c1x + dim$$3;
    var c3y = c2y;
    JAM.call(ctx$$5.beginPath, ctx$$5, [], JAM.policy.p3);
    JAM.call(ctx$$5.moveTo, ctx$$5, [c1x, c1y], JAM.policy.p3);
    JAM.call(ctx$$5.lineTo, ctx$$5, [c2x, c2y], JAM.policy.p3);
    JAM.call(ctx$$5.lineTo, ctx$$5, [c3x, c3y], JAM.policy.p3);
    JAM.call(ctx$$5.closePath, ctx$$5, [], JAM.policy.p3);
    JAM.call(ctx$$5[type$$52], ctx$$5, [], JAM.policy.p3);
    return;
  }
  function v352(npos$$3, pos$$23, width$$19, height$$18) {
    var v7623 = JAM.call(Math.abs, Math, [pos$$23.x - npos$$3.x], JAM.policy.p3) <= width$$19 / 2;
    if (v7623) {
      v7623 = JAM.call(Math.abs, Math, [pos$$23.y - npos$$3.y], JAM.policy.p3) <= height$$18 / 2;
    }
    return v7623;
  }
  function v351(type$$51, pos$$22, width$$18, height$$17, canvas$$11) {
    var v7624 = JAM.call(canvas$$11.getCtx, canvas$$11, [], JAM.policy.p3);
    JAM.call(v7624[type$$51 + "Rect"], v7624, [pos$$22.x - width$$18 / 2, pos$$22.y - height$$17 / 2, width$$18, height$$17], JAM.policy.p3);
    return;
  }
  function v350(npos$$2, pos$$21, dim$$2) {
    var v7628 = JAM.call(Math.abs, Math, [pos$$21.x - npos$$2.x], JAM.policy.p3) <= dim$$2;
    if (v7628) {
      v7628 = JAM.call(Math.abs, Math, [pos$$21.y - npos$$2.y], JAM.policy.p3) <= dim$$2;
    }
    return v7628;
  }
  function v349(type$$50, pos$$20, dim$$1, canvas$$10) {
    var v7629 = JAM.call(canvas$$10.getCtx, canvas$$10, [], JAM.policy.p3);
    JAM.call(v7629[type$$50 + "Rect"], v7629, [pos$$20.x - dim$$1, pos$$20.y - dim$$1, 2 * dim$$1, 2 * dim$$1], JAM.policy.p3);
    return;
  }
  function v348(npos$$1, pos$$19, width$$17, height$$16) {
    var radius$$5 = 0;
    var scalex$$1 = 1;
    var scaley$$1 = 1;
    var diffx$$1 = 0;
    var diffy$$1 = 0;
    var diff$$2 = 0;
    if (width$$17 > height$$16) {
      radius$$5 = width$$17 / 2;
      scaley$$1 = height$$16 / width$$17;
    } else {
      radius$$5 = height$$16 / 2;
      scalex$$1 = width$$17 / height$$16;
    }
    diffx$$1 = (npos$$1.x - pos$$19.x) * (1 / scalex$$1);
    diffy$$1 = (npos$$1.y - pos$$19.y) * (1 / scaley$$1);
    diff$$2 = diffx$$1 * diffx$$1 + diffy$$1 * diffy$$1;
    return diff$$2 <= radius$$5 * radius$$5;
  }
  function v347(type$$49, pos$$18, width$$16, height$$15, canvas$$9) {
    var ctx$$4 = JAM.call(canvas$$9.getCtx, canvas$$9, [], JAM.policy.p3);
    var scalex = 1;
    var scaley = 1;
    var scaleposx = 1;
    var scaleposy = 1;
    var radius$$4 = 0;
    if (width$$16 > height$$15) {
      radius$$4 = width$$16 / 2;
      scaley = height$$15 / width$$16;
      scaleposy = width$$16 / height$$15;
    } else {
      radius$$4 = height$$15 / 2;
      scalex = width$$16 / height$$15;
      scaleposx = height$$15 / width$$16;
    }
    JAM.call(ctx$$4.save, ctx$$4, [], JAM.policy.p3);
    JAM.call(ctx$$4.scale, ctx$$4, [scalex, scaley], JAM.policy.p3);
    JAM.call(ctx$$4.beginPath, ctx$$4, [], JAM.policy.p3);
    JAM.call(ctx$$4.arc, ctx$$4, [pos$$18.x * scaleposx, pos$$18.y * scaleposy, radius$$4, 0, Math.PI * 2, true], JAM.policy.p3);
    JAM.call(ctx$$4.closePath, ctx$$4, [], JAM.policy.p3);
    JAM.call(ctx$$4[type$$49], ctx$$4, [], JAM.policy.p3);
    JAM.call(ctx$$4.restore, ctx$$4, [], JAM.policy.p3);
    return;
  }
  function v346(npos, pos$$17, radius$$3) {
    var diffx = npos.x - pos$$17.x;
    var diffy = npos.y - pos$$17.y;
    var diff$$1 = diffx * diffx + diffy * diffy;
    return diff$$1 <= radius$$3 * radius$$3;
  }
  function v345(type$$48, pos$$16, radius$$2, canvas$$8) {
    var ctx$$3 = JAM.call(canvas$$8.getCtx, canvas$$8, [], JAM.policy.p3);
    JAM.call(ctx$$3.beginPath, ctx$$3, [], JAM.policy.p3);
    JAM.call(ctx$$3.arc, ctx$$3, [pos$$16.x, pos$$16.y, radius$$2, 0, Math.PI * 2, true], JAM.policy.p3);
    JAM.call(ctx$$3.closePath, ctx$$3, [], JAM.policy.p3);
    JAM.call(ctx$$3[type$$48], ctx$$3, [], JAM.policy.p3);
    return;
  }
  function v344(graph$$11) {
    function v343(elem$$33) {
      function v342(adj$$13) {
        var v7657 = viz$$13.graph;
        var nodeFrom$$2 = JAM.call(v7657.getNode, v7657, [adj$$13.nodeFrom.id], JAM.policy.p3);
        var v7659 = viz$$13.graph;
        var nodeTo$$2 = JAM.call(v7659.getNode, v7659, [adj$$13.nodeTo.id], JAM.policy.p3);
        if (!JAM.call(nodeFrom$$2.adjacentTo, nodeFrom$$2, [nodeTo$$2], JAM.policy.p3)) {
          var v7661 = viz$$13.graph;
          adj$$13 = JAM.call(v7661.addAdjacence, v7661, [nodeFrom$$2, nodeTo$$2, adj$$13.data], JAM.policy.p3);
          var v14127 = nodeFrom$$2.startAlpha == nodeFrom$$2.endAlpha;
          if (v14127) {
            v14127 = nodeTo$$2.startAlpha == nodeTo$$2.endAlpha;
          }
          if (v14127) {
            fadeEdges$$2 = true;
            JAM.call(adj$$13.setData, adj$$13, ["alpha", 0], JAM.policy.p3);
            JAM.call(adj$$13.setData, adj$$13, ["alpha", 0, "start"], JAM.policy.p3);
            JAM.call(adj$$13.setData, adj$$13, ["alpha", 1, "end"], JAM.policy.p3);
          }
        }
        return;
      }
      JAM.call(elem$$33.eachAdjacency, elem$$33, [v342], JAM.policy.p3);
      return;
    }
    function v341(elem$$32) {
      var v19059 = viz$$13.graph;
      if (!JAM.call(v19059.hasNode, v19059, [elem$$32.id], JAM.policy.p3)) {
        var v7665 = viz$$13.graph;
        JAM.call(v7665.addNode, v7665, [elem$$32], JAM.policy.p3);
        var v7666 = viz$$13.graph;
        var n$$19 = JAM.call(v7666.getNode, v7666, [elem$$32.id], JAM.policy.p3);
        JAM.call(n$$19.setData, n$$19, ["alpha", 0], JAM.policy.p3);
        JAM.call(n$$19.setData, n$$19, ["alpha", 0, "start"], JAM.policy.p3);
        JAM.call(n$$19.setData, n$$19, ["alpha", 1, "end"], JAM.policy.p3);
      }
      return;
    }
    var viz$$13 = this.viz;
    JAM.call(graph$$11.eachNode, graph$$11, [v341], JAM.policy.p3);
    var fadeEdges$$2 = false;
    JAM.call(graph$$11.eachNode, graph$$11, [v343], JAM.policy.p3);
    return fadeEdges$$2;
  }
  function v340(node$$38, opt$$15) {
    function subn$$2(n$$18) {
      function v339(ch$$8) {
        delete ch$$8.ignore;
        var v14129;
        if (opt$$15.type == "animate") {
          v14129 = "end";
        } else {
          v14129 = "current";
        }
        JAM.call(ch$$8.setData, ch$$8, ["alpha", 1, v14129], JAM.policy.p3);
        JAM.call(subn$$2, null, [ch$$8], JAM.policy.p3);
        return;
      }
      JAM.call(n$$18.eachSubnode, n$$18, [v339], JAM.policy.p3);
      return;
    }
    if (!("collapsed" in node$$38)) {
      return;
    }
    var viz$$12 = this.viz;
    opt$$15 = JAM.call($$$1.merge, $$$1, [this.options, viz$$12.config, opt$$15 || {}, {"modes":["node-property:alpha:span", "linear"]}], JAM.policy.p3);
    delete node$$38.collapsed;
    JAM.call(subn$$2, null, [node$$38], JAM.policy.p3);
    if (opt$$15.type == "animate") {
      JAM.call(viz$$12.compute, viz$$12, ["end"], JAM.policy.p3);
      if (viz$$12.rotated) {
        JAM.call(viz$$12.rotate, viz$$12, [viz$$12.rotated, "none", {"property":"end"}], JAM.policy.p3);
      }
      var v7678 = viz$$12.fx;
      JAM.call(v7678.animate, v7678, [opt$$15], JAM.policy.p3);
    } else {
      if (opt$$15.type == "replot") {
        JAM.call(viz$$12.refresh, viz$$12, [], JAM.policy.p3);
      }
    }
    return;
  }
  function v338(node$$37, opt$$14) {
    function subn$$1(n$$17) {
      function v337(ch$$7) {
        JAM.call(ch$$7.setPos, ch$$7, [JAM.call(node$$37.getPos, node$$37, ["end"], JAM.policy.p3), "end"], JAM.policy.p3);
        JAM.call(subn$$1, null, [ch$$7], JAM.policy.p3);
        return;
      }
      JAM.call(n$$17.eachSubnode, n$$17, [v337], JAM.policy.p3);
      return;
    }
    function subn(n$$16) {
      function v336(ch$$6) {
        ch$$6.ignore = true;
        var v14134;
        if (opt$$14.type == "animate") {
          v14134 = "end";
        } else {
          v14134 = "current";
        }
        JAM.call(ch$$6.setData, ch$$6, ["alpha", 0, v14134], JAM.policy.p3);
        JAM.call(subn, null, [ch$$6], JAM.policy.p3);
        return;
      }
      JAM.call(n$$16.eachSubnode, n$$16, [v336], JAM.policy.p3);
      return;
    }
    var viz$$11 = this.viz;
    var v14135 = node$$37.collapsed;
    if (!v14135) {
      v14135 = !JAM.call(node$$37.anySubnode, node$$37, [JAM.call($$$1.lambda, $$$1, [true], JAM.policy.p3)], JAM.policy.p3);
    }
    if (v14135) {
      return;
    }
    opt$$14 = JAM.call($$$1.merge, $$$1, [this.options, viz$$11.config, opt$$14 || {}, {"modes":["node-property:alpha:span", "linear"]}], JAM.policy.p3);
    node$$37.collapsed = true;
    JAM.call(subn, null, [node$$37], JAM.policy.p3);
    if (opt$$14.type == "animate") {
      JAM.call(viz$$11.compute, viz$$11, ["end"], JAM.policy.p3);
      if (viz$$11.rotated) {
        JAM.call(viz$$11.rotate, viz$$11, [viz$$11.rotated, "none", {"property":"end"}], JAM.policy.p3);
      }
      JAM.call(subn$$1, null, [node$$37], JAM.policy.p3);
      var v7691 = viz$$11.fx;
      JAM.call(v7691.animate, v7691, [opt$$14], JAM.policy.p3);
    } else {
      if (opt$$14.type == "replot") {
        JAM.call(viz$$11.refresh, viz$$11, [], JAM.policy.p3);
      }
    }
    return;
  }
  function v335(json$$4, opt$$13, extraModes) {
    function v334() {
      function v333(elem$$31) {
        function v332(adj$$12) {
          if (adj$$12.ignore) {
            var v7694 = viz$$10.graph;
            JAM.call(v7694.removeAdjacence, v7694, [adj$$12.nodeFrom.id, adj$$12.nodeTo.id], JAM.policy.p3);
          }
          return;
        }
        JAM.call(elem$$31.eachAdjacency, elem$$31, [v332], JAM.policy.p3);
        return;
      }
      function v331(elem$$30) {
        if (elem$$30.ignore) {
          var v7698 = viz$$10.graph;
          JAM.call(v7698.removeNode, v7698, [elem$$30.id], JAM.policy.p3);
        }
        return;
      }
      var v7701 = viz$$10.graph;
      JAM.call(v7701.eachNode, v7701, [v331], JAM.policy.p3);
      var v7702 = viz$$10.graph;
      JAM.call(v7702.eachNode, v7702, [v333], JAM.policy.p3);
      JAM.call(options$$8.onComplete, options$$8, [], JAM.policy.p3);
      return;
    }
    function v330(elem$$29) {
      var v14141 = elem$$29.id != root$$3;
      if (v14141) {
        var v22497 = elem$$29.pos;
        var v19066 = JAM.call(v22497.getp, v22497, [], JAM.policy.p3);
        v14141 = JAM.call(v19066.equals, v19066, [Polar.KER], JAM.policy.p3);
      }
      if (v14141) {
        var v7703 = elem$$29.pos;
        JAM.call(v7703.set, v7703, [elem$$29.endPos], JAM.policy.p3);
        var v7705 = elem$$29.startPos;
        JAM.call(v7705.set, v7705, [elem$$29.endPos], JAM.policy.p3);
      }
      return;
    }
    function v329(elem$$28) {
      function v328(adj$$11) {
        var v14142 = adj$$11.nodeFrom.ignore;
        if (!v14142) {
          v14142 = adj$$11.nodeTo.ignore;
        }
        if (v14142) {
          return;
        }
        var nodeFrom$$1 = JAM.call(graph$$10.getNode, graph$$10, [adj$$11.nodeFrom.id], JAM.policy.p3);
        var nodeTo$$1 = JAM.call(graph$$10.getNode, graph$$10, [adj$$11.nodeTo.id], JAM.policy.p3);
        if (!JAM.call(nodeFrom$$1.adjacentTo, nodeFrom$$1, [nodeTo$$1], JAM.policy.p3)) {
          var v7711 = viz$$10.graph;
          adj$$11 = JAM.call(v7711.getAdjacence, v7711, [nodeFrom$$1.id, nodeTo$$1.id], JAM.policy.p3);
          fadeEdges$$1 = true;
          JAM.call(adj$$11.setData, adj$$11, ["alpha", 1], JAM.policy.p3);
          JAM.call(adj$$11.setData, adj$$11, ["alpha", 1, "start"], JAM.policy.p3);
          JAM.call(adj$$11.setData, adj$$11, ["alpha", 0, "end"], JAM.policy.p3);
        }
        return;
      }
      if (elem$$28.ignore) {
        return;
      }
      JAM.call(elem$$28.eachAdjacency, elem$$28, [v328], JAM.policy.p3);
      return;
    }
    function v327(elem$$27) {
      var graphNode = JAM.call(graph$$10.getNode, graph$$10, [elem$$27.id], JAM.policy.p3);
      if (!graphNode) {
        JAM.call(elem$$27.setData, elem$$27, ["alpha", 1], JAM.policy.p3);
        JAM.call(elem$$27.setData, elem$$27, ["alpha", 1, "start"], JAM.policy.p3);
        JAM.call(elem$$27.setData, elem$$27, ["alpha", 0, "end"], JAM.policy.p3);
        elem$$27.ignore = true;
      } else {
        var graphNodeData = graphNode.data;
        var prop$$19;
        for (prop$$19 in graphNodeData) {
          var v14146 = nodeModes;
          if (v14146) {
            v14146 = JAM.call($$$1.indexOf, $$$1, [nodeModes, prop$$19], JAM.policy.p3) > -1;
          }
          if (v14146) {
            JAM.set(elem$$27.endData, prop$$19, graphNodeData[prop$$19], JAM.policy.p2);
          } else {
            JAM.set(elem$$27.data, prop$$19, graphNodeData[prop$$19], JAM.policy.p2);
          }
        }
      }
      return;
    }
    function v326(n$$15) {
      return "$" + n$$15;
    }
    function v325(elem$$26) {
      function v324(adj$$10) {
        if (!JAM.call(graph$$10.getAdjacence, graph$$10, [adj$$10.nodeFrom.id, adj$$10.nodeTo.id], JAM.policy.p3)) {
          var v7721 = viz$$10.graph;
          JAM.call(v7721.removeAdjacence, v7721, [adj$$10.nodeFrom.id, adj$$10.nodeTo.id], JAM.policy.p3);
        }
        return;
      }
      JAM.call(elem$$26.eachAdjacency, elem$$26, [v324], JAM.policy.p3);
      if (!JAM.call(graph$$10.hasNode, graph$$10, [elem$$26.id], JAM.policy.p3)) {
        var v7725 = viz$$10.graph;
        JAM.call(v7725.removeNode, v7725, [elem$$26.id], JAM.policy.p3);
      }
      return;
    }
    function v323(elem$$25) {
      function v322(adj$$9) {
        var v19075 = viz$$10.graph;
        var adjExists = !!JAM.call(v19075.getAdjacence, v19075, [adj$$9.nodeFrom.id, adj$$9.nodeTo.id], JAM.policy.p3);
        var v7729 = viz$$10.graph;
        JAM.call(v7729.addAdjacence, v7729, [adj$$9.nodeFrom, adj$$9.nodeTo, adj$$9.data], JAM.policy.p3);
        if (adjExists) {
          var v7733 = viz$$10.graph;
          var addedAdj = JAM.call(v7733.getAdjacence, v7733, [adj$$9.nodeFrom.id, adj$$9.nodeTo.id], JAM.policy.p3);
          var prop$$18;
          var v14154 = adj$$9.data;
          if (!v14154) {
            v14154 = {};
          }
          for (prop$$18 in v14154) {
            JAM.set(addedAdj.data, prop$$18, adj$$9.data[prop$$18], JAM.policy.p2);
          }
        }
        return;
      }
      var v7738 = viz$$10.graph;
      var nodeExists = JAM.call(v7738.hasNode, v7738, [elem$$25.id], JAM.policy.p3);
      JAM.call(elem$$25.eachAdjacency, elem$$25, [v322], JAM.policy.p3);
      if (nodeExists) {
        var v7740 = viz$$10.graph;
        var addedNode = JAM.call(v7740.getNode, v7740, [elem$$25.id], JAM.policy.p3);
        var prop$$17;
        var v14156 = elem$$25.data;
        if (!v14156) {
          v14156 = {};
        }
        for (prop$$17 in v14156) {
          JAM.set(addedNode.data, prop$$17, elem$$25.data[prop$$17], JAM.policy.p2);
        }
      }
      return;
    }
    extraModes = extraModes || {};
    var viz$$10 = this.viz;
    var options$$8 = JAM.call($$$1.merge, $$$1, [this.options, viz$$10.controller, opt$$13], JAM.policy.p3);
    var root$$3 = viz$$10.root;
    var graph$$10;
    var v7746 = opt$$13.id;
    if (!v7746) {
      v7746 = viz$$10.root;
    }
    viz$$10.root = v7746;
    switch(options$$8.type) {
      case "nothing":
        graph$$10 = JAM.call(viz$$10.construct, viz$$10, [json$$4], JAM.policy.p3);
        JAM.call(graph$$10.eachNode, graph$$10, [v323], JAM.policy.p3);
        var v7747 = viz$$10.graph;
        JAM.call(v7747.eachNode, v7747, [v325], JAM.policy.p3);
        break;
      case "replot":
        var v7748 = viz$$10.labels;
        JAM.call(v7748.clearLabels, v7748, [true], JAM.policy.p3);
        JAM.call(this.morph, this, [json$$4, {type:"nothing"}], JAM.policy.p3);
        JAM.call(viz$$10.refresh, viz$$10, [true], JAM.policy.p3);
        JAM.call(viz$$10.refresh, viz$$10, [true], JAM.policy.p3);
        break;
      case "fade:seq":
      ;
      case "fade":
      ;
      case "fade:con":
        that = this;
        graph$$10 = JAM.call(viz$$10.construct, viz$$10, [json$$4], JAM.policy.p3);
        var v7750 = "node-property" in extraModes;
        if (v7750) {
          v7750 = JAM.call($$$1.map, $$$1, [JAM.call($$$1.splat, $$$1, [extraModes["node-property"]], JAM.policy.p3), v326], JAM.policy.p3);
        }
        var nodeModes = v7750;
        var v7751 = viz$$10.graph;
        JAM.call(v7751.eachNode, v7751, [v327], JAM.policy.p3);
        var v7752 = viz$$10.graph;
        JAM.call(v7752.eachNode, v7752, [v329], JAM.policy.p3);
        var fadeEdges$$1 = JAM.call(this.preprocessSum, this, [graph$$10], JAM.policy.p3);
        var v7753;
        if (!fadeEdges$$1) {
          v7753 = ["node-property:alpha"];
        } else {
          v7753 = ["node-property:alpha", "edge-property:alpha"];
        }
        var modes$$1 = v7753;
        var v7754 = modes$$1;
        var v14161 = modes$$1[0];
        var v19081;
        if ("node-property" in extraModes) {
          var v26326 = JAM.call($$$1.splat, $$$1, [extraModes["node-property"]], JAM.policy.p3);
          v19081 = ":" + JAM.call(v26326.join, v26326, [":"], JAM.policy.p3);
        } else {
          v19081 = "";
        }
        var v14162 = v19081;
        introspect(JAM.policy.p2) {
          v7754[0] = v14161 + v14162;
        }
        var v7755 = modes$$1;
        var v19082 = modes$$1[1];
        if (!v19082) {
          v19082 = "edge-property:alpha";
        }
        var v14163 = v19082;
        var v19083;
        if ("edge-property" in extraModes) {
          var v26327 = JAM.call($$$1.splat, $$$1, [extraModes["edge-property"]], JAM.policy.p3);
          v19083 = ":" + JAM.call(v26327.join, v26327, [":"], JAM.policy.p3);
        } else {
          v19083 = "";
        }
        var v14164 = v19083;
        introspect(JAM.policy.p2) {
          v7755[1] = v14163 + v14164;
        }
        if ("label-property" in extraModes) {
          var v19084 = JAM.call($$$1.splat, $$$1, [extraModes["label-property"]], JAM.policy.p3);
          JAM.call(modes$$1.push, modes$$1, ["label-property:" + JAM.call(v19084.join, v19084, [":"], JAM.policy.p3)], JAM.policy.p3);
        }
        if (viz$$10.reposition) {
          JAM.call(viz$$10.reposition, viz$$10, [], JAM.policy.p3);
        } else {
          JAM.call(viz$$10.compute, viz$$10, ["end"], JAM.policy.p3);
        }
        var v7759 = viz$$10.graph;
        JAM.call(v7759.eachNode, v7759, [v330], JAM.policy.p3);
        var v7760 = viz$$10.fx;
        var v27884 = extraModes.position;
        if (!v27884) {
          v27884 = "polar";
        }
        var v22508 = [v27884];
        JAM.call(v7760.animate, v7760, [JAM.call($$$1.merge, $$$1, [options$$8, {modes:JAM.call(v22508.concat, v22508, [modes$$1], JAM.policy.p3), onComplete:v334}], JAM.policy.p3)], JAM.policy.p3);
      default:
      ;
    }
    return;
  }
  function v321(json$$3, opt$$12) {
    function v320(elem$$24) {
      var v14167 = elem$$24.id != root$$2;
      if (v14167) {
        var v19087 = elem$$24.pos;
        v14167 = JAM.call(v19087.isZero, v19087, [], JAM.policy.p3);
      }
      if (v14167) {
        var v7763 = elem$$24.pos;
        JAM.call(v7763.set, v7763, [elem$$24.endPos], JAM.policy.p3);
        var v7765 = elem$$24.startPos;
        JAM.call(v7765.set, v7765, [elem$$24.endPos], JAM.policy.p3);
      }
      return;
    }
    function v319() {
      function v318() {
        JAM.call(options$$7.onComplete, options$$7, [], JAM.policy.p3);
        return;
      }
      var v7768 = viz$$9.fx;
      JAM.call(v7768.animate, v7768, [JAM.call($$$1.merge, $$$1, [options$$7, {modes:modes, onComplete:v318}], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    function v317(elem$$23) {
      function v316(adj$$8) {
        var v7770 = viz$$9.graph;
        JAM.call(v7770.addAdjacence, v7770, [adj$$8.nodeFrom, adj$$8.nodeTo, adj$$8.data], JAM.policy.p3);
        return;
      }
      JAM.call(elem$$23.eachAdjacency, elem$$23, [v316], JAM.policy.p3);
      return;
    }
    var viz$$9 = this.viz;
    var options$$7 = JAM.call($$$1.merge, $$$1, [this.options, viz$$9.controller, opt$$12], JAM.policy.p3);
    var root$$2 = viz$$9.root;
    var graph$$9;
    var v7776 = opt$$12.id;
    if (!v7776) {
      v7776 = viz$$9.root;
    }
    viz$$9.root = v7776;
    switch(options$$7.type) {
      case "nothing":
        graph$$9 = JAM.call(viz$$9.construct, viz$$9, [json$$3], JAM.policy.p3);
        JAM.call(graph$$9.eachNode, graph$$9, [v317], JAM.policy.p3);
        break;
      case "replot":
        JAM.call(viz$$9.refresh, viz$$9, [true], JAM.policy.p3);
        JAM.call(this.sum, this, [json$$3, {type:"nothing"}], JAM.policy.p3);
        JAM.call(viz$$9.refresh, viz$$9, [true], JAM.policy.p3);
        break;
      case "fade:seq":
      ;
      case "fade":
      ;
      case "fade:con":
        that = this;
        graph$$9 = JAM.call(viz$$9.construct, viz$$9, [json$$3], JAM.policy.p3);
        var fadeEdges = JAM.call(this.preprocessSum, this, [graph$$9], JAM.policy.p3);
        var v7778;
        if (!fadeEdges) {
          v7778 = ["node-property:alpha"];
        } else {
          v7778 = ["node-property:alpha", "edge-property:alpha"];
        }
        var modes = v7778;
        JAM.call(viz$$9.reposition, viz$$9, [], JAM.policy.p3);
        if (options$$7.type != "fade:con") {
          var v7779 = viz$$9.fx;
          JAM.call(v7779.animate, v7779, [JAM.call($$$1.merge, $$$1, [options$$7, {modes:["linear"], onComplete:v319}], JAM.policy.p3)], JAM.policy.p3);
        } else {
          var v7781 = viz$$9.graph;
          JAM.call(v7781.eachNode, v7781, [v320], JAM.policy.p3);
          var v7782 = viz$$9.fx;
          var v22509 = ["linear"];
          JAM.call(v7782.animate, v7782, [JAM.call($$$1.merge, $$$1, [options$$7, {modes:JAM.call(v22509.concat, v22509, [modes], JAM.policy.p3)}], JAM.policy.p3)], JAM.policy.p3);
        }
        break;
      default:
        JAM.call(this.doError, this, [], JAM.policy.p3);
    }
    return;
  }
  function v315(vertex, opt$$11) {
    function v314() {
      JAM.call(options$$6.onComplete, options$$6, [], JAM.policy.p3);
      return;
    }
    function v313() {
      JAM.call(that$$13.removeEdge, that$$13, [JAM.call(v$$1.shift, v$$1, [], JAM.policy.p3), {type:"nothing"}], JAM.policy.p3);
      var v7788 = viz$$8.labels;
      JAM.call(v7788.clearLabels, v7788, [], JAM.policy.p3);
      return;
    }
    function v312() {
      return v$$1.length != 0;
    }
    function v311() {
      JAM.call(that$$13.removeEdge, that$$13, [v$$1, {type:"nothing"}], JAM.policy.p3);
      var v7791 = options$$6.onComplete;
      if (v7791) {
        JAM.call(options$$6.onComplete, options$$6, [], JAM.policy.p3);
      }
      return;
    }
    function v310() {
      JAM.call(that$$13.removeEdge, that$$13, [v$$1, {type:"nothing"}], JAM.policy.p3);
      JAM.call(viz$$8.reposition, viz$$8, [], JAM.policy.p3);
      var v7793 = viz$$8.fx;
      JAM.call(v7793.animate, v7793, [JAM.call($$$1.merge, $$$1, [options$$6, {modes:["linear"]}], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    var viz$$8 = this.viz;
    var options$$6 = JAM.call($$$1.merge, $$$1, [this.options, viz$$8.controller, opt$$11], JAM.policy.p3);
    var v7797;
    if (JAM.call($$$1.type, $$$1, [vertex[0]], JAM.policy.p3) == "string") {
      v7797 = [vertex];
    } else {
      v7797 = vertex;
    }
    var v$$1 = v7797;
    var i$$41;
    var that$$13;
    var adj$$7;
    switch(options$$6.type) {
      case "nothing":
        i$$41 = 0;
        var v7801 = i$$41 < v$$1.length;
        for (;v7801;) {
          var v7798 = viz$$8.graph;
          JAM.call(v7798.removeAdjacence, v7798, [v$$1[i$$41][0], v$$1[i$$41][1]], JAM.policy.p3);
          i$$41 = i$$41 + 1;
          v7801 = i$$41 < v$$1.length;
        }
        break;
      case "replot":
        JAM.call(this.removeEdge, this, [v$$1, {type:"nothing"}], JAM.policy.p3);
        JAM.call(viz$$8.refresh, viz$$8, [true], JAM.policy.p3);
        break;
      case "fade:seq":
      ;
      case "fade":
        that$$13 = this;
        i$$41 = 0;
        var v7806 = i$$41 < v$$1.length;
        for (;v7806;) {
          var v7803 = viz$$8.graph;
          adj$$7 = JAM.call(v7803.getAdjacence, v7803, [v$$1[i$$41][0], v$$1[i$$41][1]], JAM.policy.p3);
          if (adj$$7) {
            JAM.call(adj$$7.setData, adj$$7, ["alpha", 0, "end"], JAM.policy.p3);
          }
          i$$41 = i$$41 + 1;
          v7806 = i$$41 < v$$1.length;
        }
        var v7807 = viz$$8.fx;
        JAM.call(v7807.animate, v7807, [JAM.call($$$1.merge, $$$1, [options$$6, {modes:["edge-property:alpha"], onComplete:v310}], JAM.policy.p3)], JAM.policy.p3);
        break;
      case "fade:con":
        that$$13 = this;
        i$$41 = 0;
        var v7812 = i$$41 < v$$1.length;
        for (;v7812;) {
          var v7809 = viz$$8.graph;
          adj$$7 = JAM.call(v7809.getAdjacence, v7809, [v$$1[i$$41][0], v$$1[i$$41][1]], JAM.policy.p3);
          if (adj$$7) {
            JAM.call(adj$$7.setData, adj$$7, ["alpha", 0, "end"], JAM.policy.p3);
            adj$$7.ignore = true;
          }
          i$$41 = i$$41 + 1;
          v7812 = i$$41 < v$$1.length;
        }
        JAM.call(viz$$8.reposition, viz$$8, [], JAM.policy.p3);
        var v7813 = viz$$8.fx;
        JAM.call(v7813.animate, v7813, [JAM.call($$$1.merge, $$$1, [options$$6, {modes:["edge-property:alpha", "linear"], onComplete:v311}], JAM.policy.p3)], JAM.policy.p3);
        break;
      case "iter":
        that$$13 = this;
        var v7815 = viz$$8.fx;
        JAM.call(v7815.sequence, v7815, [{condition:v312, step:v313, onComplete:v314, duration:JAM.call(Math.ceil, Math, [options$$6.duration / v$$1.length], JAM.policy.p3)}], JAM.policy.p3);
        break;
      default:
        JAM.call(this.doError, this, [], JAM.policy.p3);
    }
    return;
  }
  function v309(node$$36, opt$$10) {
    function v308() {
      var v7818 = options$$5.onComplete;
      if (v7818) {
        JAM.call(options$$5.onComplete, options$$5, [], JAM.policy.p3);
      }
      return;
    }
    function v307() {
      JAM.call(that$$12.removeNode, that$$12, [JAM.call(n$$14.shift, n$$14, [], JAM.policy.p3), {type:"nothing"}], JAM.policy.p3);
      var v7821 = viz$$7.labels;
      JAM.call(v7821.clearLabels, v7821, [], JAM.policy.p3);
      return;
    }
    function v306() {
      return n$$14.length != 0;
    }
    function v305() {
      JAM.call(that$$12.removeNode, that$$12, [n$$14, {type:"nothing"}], JAM.policy.p3);
      var v7824 = options$$5.onComplete;
      if (v7824) {
        JAM.call(options$$5.onComplete, options$$5, [], JAM.policy.p3);
      }
      return;
    }
    function v304() {
      JAM.call(that$$12.removeNode, that$$12, [n$$14, {type:"nothing"}], JAM.policy.p3);
      var v7826 = viz$$7.labels;
      JAM.call(v7826.clearLabels, v7826, [], JAM.policy.p3);
      JAM.call(viz$$7.reposition, viz$$7, [], JAM.policy.p3);
      var v7827 = viz$$7.fx;
      JAM.call(v7827.animate, v7827, [JAM.call($$$1.merge, $$$1, [options$$5, {modes:["linear"]}], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    var viz$$7 = this.viz;
    var options$$5 = JAM.call($$$1.merge, $$$1, [this.options, viz$$7.controller, opt$$10], JAM.policy.p3);
    var n$$14 = JAM.call($$$1.splat, $$$1, [node$$36], JAM.policy.p3);
    var i$$40;
    var that$$12;
    var nodeObj;
    switch(options$$5.type) {
      case "nothing":
        i$$40 = 0;
        var v7834 = i$$40 < n$$14.length;
        for (;v7834;) {
          var v14193 = viz$$7.graph;
          JAM.call(options$$5.onBeforeRemoveNode, options$$5, [JAM.call(v14193.getNode, v14193, [n$$14[i$$40]], JAM.policy.p3)], JAM.policy.p3);
          var v7832 = viz$$7.graph;
          JAM.call(v7832.removeNode, v7832, [n$$14[i$$40]], JAM.policy.p3);
          i$$40 = i$$40 + 1;
          v7834 = i$$40 < n$$14.length;
        }
        break;
      case "replot":
        JAM.call(this.removeNode, this, [n$$14, {type:"nothing"}], JAM.policy.p3);
        var v7836 = viz$$7.labels;
        JAM.call(v7836.clearLabels, v7836, [], JAM.policy.p3);
        JAM.call(viz$$7.refresh, viz$$7, [true], JAM.policy.p3);
        break;
      case "fade:seq":
      ;
      case "fade":
        that$$12 = this;
        i$$40 = 0;
        var v7839 = i$$40 < n$$14.length;
        for (;v7839;) {
          var v7837 = viz$$7.graph;
          nodeObj = JAM.call(v7837.getNode, v7837, [n$$14[i$$40]], JAM.policy.p3);
          JAM.call(nodeObj.setData, nodeObj, ["alpha", 0, "end"], JAM.policy.p3);
          i$$40 = i$$40 + 1;
          v7839 = i$$40 < n$$14.length;
        }
        var v7840 = viz$$7.fx;
        JAM.call(v7840.animate, v7840, [JAM.call($$$1.merge, $$$1, [options$$5, {modes:["node-property:alpha"], onComplete:v304}], JAM.policy.p3)], JAM.policy.p3);
        break;
      case "fade:con":
        that$$12 = this;
        i$$40 = 0;
        var v7844 = i$$40 < n$$14.length;
        for (;v7844;) {
          var v7842 = viz$$7.graph;
          nodeObj = JAM.call(v7842.getNode, v7842, [n$$14[i$$40]], JAM.policy.p3);
          JAM.call(nodeObj.setData, nodeObj, ["alpha", 0, "end"], JAM.policy.p3);
          nodeObj.ignore = true;
          i$$40 = i$$40 + 1;
          v7844 = i$$40 < n$$14.length;
        }
        JAM.call(viz$$7.reposition, viz$$7, [], JAM.policy.p3);
        var v7845 = viz$$7.fx;
        JAM.call(v7845.animate, v7845, [JAM.call($$$1.merge, $$$1, [options$$5, {modes:["node-property:alpha", "linear"], onComplete:v305}], JAM.policy.p3)], JAM.policy.p3);
        break;
      case "iter":
        that$$12 = this;
        var v7847 = viz$$7.fx;
        JAM.call(v7847.sequence, v7847, [{condition:v306, step:v307, onComplete:v308, duration:JAM.call(Math.ceil, Math, [options$$5.duration / n$$14.length], JAM.policy.p3)}], JAM.policy.p3);
        break;
      default:
        JAM.call(this.doError, this, [], JAM.policy.p3);
    }
    return;
  }
  function v303(viz$$6) {
    this.viz = viz$$6;
    return;
  }
  function v302(m$$1) {
    function v301() {
      var v7850 = Graph.Util[m$$1];
      var v7851 = Graph.Util;
      var v14204 = [this];
      var v19099 = Array.prototype.slice;
      return JAM.call(v7850.apply, v7850, [v7851, JAM.call(v14204.concat, v14204, [JAM.call(v19099.call, v19099, [arguments], JAM.policy.p3)], JAM.policy.p3)], JAM.policy.p3);
    }
    JAM.set(Graph.Node.prototype, m$$1, v301, JAM.policy.p2);
    return;
  }
  function v300(m) {
    function v299() {
      var v7854 = Graph.Util[m];
      var v7855 = Graph.Util;
      var v14208 = [this];
      var v19100 = Array.prototype.slice;
      return JAM.call(v7854.apply, v7854, [v7855, JAM.call(v14208.concat, v14208, [JAM.call(v19100.call, v19100, [arguments], JAM.policy.p3)], JAM.policy.p3)], JAM.policy.p3);
    }
    JAM.set(Graph.prototype, m, v299, JAM.policy.p2);
    return;
  }
  function v298(graph$$8, pos$$15, prop$$16, flags$$12) {
    function v297(elem$$22) {
      var v7858;
      var v19101 = node$$35 == null;
      if (!v19101) {
        var v27885 = JAM.call(elem$$22.getPos, elem$$22, [prop$$16], JAM.policy.p3);
        var v22517 = JAM.call(distance, null, [JAM.call(v27885.getc, v27885, [true], JAM.policy.p3), pos$$15], JAM.policy.p3);
        var v27886 = JAM.call(node$$35.getPos, node$$35, [prop$$16], JAM.policy.p3);
        v19101 = v22517 < JAM.call(distance, null, [JAM.call(v27886.getc, v27886, [true], JAM.policy.p3), pos$$15], JAM.policy.p3);
      }
      if (v19101) {
        v7858 = elem$$22;
      } else {
        v7858 = node$$35;
      }
      node$$35 = v7858;
      return;
    }
    function distance(a$$5, b$$3) {
      var d1 = a$$5.x - b$$3.x;
      var d2 = a$$5.y - b$$3.y;
      return d1 * d1 + d2 * d2;
    }
    var node$$35 = null;
    prop$$16 = prop$$16 || "current";
    var v14211 = pos$$15;
    if (v14211) {
      v14211 = JAM.call(pos$$15.getc, pos$$15, [true], JAM.policy.p3);
    }
    var v7865 = v14211;
    if (!v7865) {
      v7865 = Complex.KER;
    }
    pos$$15 = v7865;
    JAM.call(this.eachNode, this, [graph$$8, v297, flags$$12], JAM.policy.p3);
    return node$$35;
  }
  function v296(graph$$7, prop$$15, flags$$11) {
    return JAM.call(this.getClosestNodeToPos, this, [graph$$7, Polar.KER, prop$$15, flags$$11], JAM.policy.p3);
  }
  function v295(graph$$6) {
    function v294(elem$$21) {
      elem$$21._flag = false;
      return;
    }
    JAM.call(this.eachNode, this, [graph$$6, v294], JAM.policy.p3);
    return;
  }
  function v293(node$$34, id$$19) {
    if (node$$34.id == id$$19) {
      return true;
    }
    var pars = JAM.call(this.getParents, this, [node$$34], JAM.policy.p3);
    var ans$$7 = false;
    var i$$39 = 0;
    var v14214 = !ans$$7;
    if (v14214) {
      v14214 = i$$39 < pars.length;
    }
    var v7869 = v14214;
    for (;v7869;) {
      var v7868 = ans$$7;
      if (!v7868) {
        v7868 = JAM.call(this.isDescendantOf, this, [pars[i$$39], id$$19], JAM.policy.p3);
      }
      ans$$7 = v7868;
      i$$39 = i$$39 + 1;
      var v14217 = !ans$$7;
      if (v14217) {
        v14217 = i$$39 < pars.length;
      }
      v7869 = v14217;
    }
    return ans$$7;
  }
  function v292(node$$33) {
    function v291(adj$$6) {
      var n$$13 = adj$$6.nodeTo;
      if (n$$13._depth < node$$33._depth) {
        JAM.call(ans$$6.push, ans$$6, [n$$13], JAM.policy.p3);
      }
      return;
    }
    var ans$$6 = [];
    JAM.call(this.eachAdjacency, this, [node$$33, v291], JAM.policy.p3);
    return ans$$6;
  }
  function v290(node$$32, level$$8, flags$$10) {
    function v289(n$$12) {
      JAM.call(ans$$5.push, ans$$5, [n$$12], JAM.policy.p3);
      return;
    }
    var ans$$5 = [];
    var that$$11 = this;
    level$$8 = level$$8 || 0;
    var levelStart;
    var levelEnd$$2;
    if (JAM.call($$$1.type, $$$1, [level$$8], JAM.policy.p3) == "array") {
      levelStart = level$$8[0];
      levelEnd$$2 = level$$8[1];
    } else {
      levelStart = level$$8;
      levelEnd$$2 = Number.MAX_VALUE - node$$32._depth;
    }
    JAM.call(this.eachLevel, this, [node$$32, levelStart, levelEnd$$2, v289, flags$$10], JAM.policy.p3);
    return ans$$5;
  }
  function v288(node$$31, cond, flags$$9) {
    function v287(elem$$20) {
      if (JAM.call(c$$3, null, [elem$$20], JAM.policy.p3)) {
        flag$$1 = true;
      }
      return;
    }
    function v286(n$$11) {
      return n$$11[cond];
    }
    var flag$$1 = false;
    var v7875 = cond;
    if (!v7875) {
      v7875 = JAM.call($$$1.lambda, $$$1, [true], JAM.policy.p3);
    }
    cond = v7875;
    var v7876;
    if (JAM.call($$$1.type, $$$1, [cond], JAM.policy.p3) == "string") {
      v7876 = v286;
    } else {
      v7876 = cond;
    }
    var c$$3 = v7876;
    JAM.call(this.eachSubnode, this, [node$$31, v287, flags$$9], JAM.policy.p3);
    return flag$$1;
  }
  function v285(node$$30, action$$9, flags$$8) {
    JAM.call(this.eachLevel, this, [node$$30, 1, 1, action$$9, flags$$8], JAM.policy.p3);
    return;
  }
  function v284(node$$29, action$$8, flags$$7) {
    JAM.call(this.eachLevel, this, [node$$29, 0, false, action$$8, flags$$7], JAM.policy.p3);
    return;
  }
  function v283(node$$27, levelBegin, levelEnd, action$$7, flags$$6) {
    function loopLevel(node$$28, levelBegin$$1, levelEnd$$1) {
      function v282(adj$$5) {
        var n$$10 = adj$$5.nodeTo;
        if (n$$10._depth > d$$2) {
          JAM.call(loopLevel, null, [n$$10, levelBegin$$1, levelEnd$$1], JAM.policy.p3);
        }
        return;
      }
      if (!shouldContinue) {
        return;
      }
      var d$$2 = node$$28._depth;
      var ret;
      var v19105 = d$$2 >= levelBegin$$1;
      if (v19105) {
        v19105 = d$$2 <= levelEnd$$1;
      }
      var v14224 = v19105;
      if (v14224) {
        v14224 = JAM.call(filter$$4, null, [node$$28], JAM.policy.p3);
      }
      if (v14224) {
        ret = JAM.call(action$$7, null, [node$$28, d$$2], JAM.policy.p3);
      }
      if (typeof ret !== "undefined") {
        shouldContinue = ret;
      }
      var v14226 = shouldContinue;
      if (v14226) {
        v14226 = d$$2 < levelEnd$$1;
      }
      if (v14226) {
        JAM.call(that$$10.eachAdjacency, that$$10, [node$$28, v282], JAM.policy.p3);
      }
      return;
    }
    var d$$1 = node$$27._depth;
    var filter$$4 = JAM.call(this.filter, this, [flags$$6], JAM.policy.p3);
    var that$$10 = this;
    var shouldContinue = true;
    var v7882;
    if (levelEnd === false) {
      v7882 = Number.MAX_VALUE - d$$1;
    } else {
      v7882 = levelEnd;
    }
    levelEnd = v7882;
    JAM.call(loopLevel, null, [node$$27, levelBegin + d$$1, levelEnd + d$$1], JAM.policy.p3);
    return;
  }
  function v281(graph$$5, id$$18, action$$6, flags$$5) {
    function v280(adj$$4) {
      var n$$9 = adj$$4.nodeTo;
      var v14229 = n$$9._flag == false;
      if (v14229) {
        v14229 = JAM.call(filter$$3, null, [n$$9], JAM.policy.p3);
      }
      if (v14229) {
        n$$9._flag = true;
        JAM.call(queue$$1.unshift, queue$$1, [n$$9], JAM.policy.p3);
      }
      return;
    }
    var filter$$3 = JAM.call(this.filter, this, [flags$$5], JAM.policy.p3);
    JAM.call(this.clean, this, [graph$$5], JAM.policy.p3);
    var queue$$1 = [JAM.call(graph$$5.getNode, graph$$5, [id$$18], JAM.policy.p3)];
    var v7889 = queue$$1.length != 0;
    for (;v7889;) {
      var node$$26 = JAM.call(queue$$1.pop, queue$$1, [], JAM.policy.p3);
      if (!node$$26) {
        return;
      }
      node$$26._flag = true;
      JAM.call(action$$6, null, [node$$26, node$$26._depth], JAM.policy.p3);
      JAM.call(this.eachAdjacency, this, [node$$26, v280, flags$$5], JAM.policy.p3);
      v7889 = queue$$1.length != 0;
    }
    return;
  }
  function v279(graph$$4, id$$17, startDepth, flags$$4) {
    function v278(adj$$3) {
      var n$$8 = adj$$3.nodeTo;
      var v14232 = n$$8._flag == false;
      if (v14232) {
        v14232 = JAM.call(filter$$2, null, [n$$8], JAM.policy.p3);
      }
      if (v14232) {
        if (n$$8._depth < 0) {
          n$$8._depth = node$$25._depth + 1 + startDepth;
        }
        JAM.call(queue.unshift, queue, [n$$8], JAM.policy.p3);
      }
      return;
    }
    function v277(elem$$19) {
      elem$$19._flag = false;
      elem$$19._depth = -1;
      return;
    }
    startDepth = startDepth || 0;
    var filter$$2 = JAM.call(this.filter, this, [flags$$4], JAM.policy.p3);
    JAM.call(this.eachNode, this, [graph$$4, v277, flags$$4], JAM.policy.p3);
    var root$$1 = JAM.call(graph$$4.getNode, graph$$4, [id$$17], JAM.policy.p3);
    root$$1._depth = startDepth;
    var queue = [root$$1];
    var v7893 = queue.length != 0;
    for (;v7893;) {
      var node$$25 = JAM.call(queue.pop, queue, [], JAM.policy.p3);
      node$$25._flag = true;
      JAM.call(this.eachAdjacency, this, [node$$25, v278, flags$$4], JAM.policy.p3);
      v7893 = queue.length != 0;
    }
    return;
  }
  function v276(node$$24, action$$5, flags$$3) {
    var adj$$2 = node$$24.adjacencies;
    var filter$$1 = JAM.call(this.filter, this, [flags$$3], JAM.policy.p3);
    var id$$16;
    for (id$$16 in adj$$2) {
      var a$$4 = adj$$2[id$$16];
      if (JAM.call(filter$$1, null, [a$$4], JAM.policy.p3)) {
        if (a$$4.nodeFrom != node$$24) {
          var tmp = a$$4.nodeFrom;
          a$$4.nodeFrom = a$$4.nodeTo;
          a$$4.nodeTo = tmp;
        }
        JAM.call(action$$5, null, [a$$4, id$$16], JAM.policy.p3);
      }
    }
    return;
  }
  function v275(graph$$3, action$$4, flags$$2) {
    JAM.call(this.eachNode, this, [graph$$3, action$$4, flags$$2], JAM.policy.p3);
    return;
  }
  function v274(graph$$2, action$$3, flags$$1) {
    var filter = JAM.call(this.filter, this, [flags$$1], JAM.policy.p3);
    var i$$38;
    for (i$$38 in graph$$2.nodes) {
      if (JAM.call(filter, null, [graph$$2.nodes[i$$38]], JAM.policy.p3)) {
        JAM.call(action$$3, null, [graph$$2.nodes[i$$38]], JAM.policy.p3);
      }
    }
    return;
  }
  function v273(graph$$1, id$$15) {
    return graph$$1.nodes[id$$15];
  }
  function v272(param$$3) {
    function v271(elem$$18) {
      var i$$37 = 0;
      var v7901 = i$$37 < props$$3.length;
      for (;v7901;) {
        if (elem$$18[props$$3[i$$37]]) {
          return false;
        }
        i$$37 = i$$37 + 1;
        v7901 = i$$37 < props$$3.length;
      }
      return true;
    }
    function v270() {
      return true;
    }
    var v14243 = !param$$3;
    if (!v14243) {
      v14243 = !(JAM.call($$$1.type, $$$1, [param$$3], JAM.policy.p3) == "string");
    }
    if (v14243) {
      return v270;
    }
    var props$$3 = JAM.call(param$$3.split, param$$3, [" "], JAM.policy.p3);
    return v271;
  }
  function v269(nodeFrom, nodeTo, data$$21, Edge$$2, Label$$2) {
    this.nodeFrom = nodeFrom;
    this.nodeTo = nodeTo;
    this.data = data$$21 || {};
    this.startData = {};
    this.endData = {};
    this.Config = this.Edge = Edge$$2;
    this.Label = Label$$2;
    return;
  }
  function v268(value$$38, type$$47) {
    type$$47 = type$$47 || "current";
    var pos$$14;
    if (type$$47 == "current") {
      pos$$14 = this.pos;
    } else {
      if (type$$47 == "end") {
        pos$$14 = this.endPos;
      } else {
        if (type$$47 == "start") {
          pos$$14 = this.startPos;
        }
      }
    }
    JAM.call(pos$$14.set, pos$$14, [value$$38], JAM.policy.p3);
    return;
  }
  function v267(type$$46) {
    type$$46 = type$$46 || "current";
    if (type$$46 == "current") {
      return this.pos;
    } else {
      if (type$$46 == "end") {
        return this.endPos;
      } else {
        if (type$$46 == "start") {
          return this.startPos;
        }
      }
    }
    return;
  }
  function v266(id$$14) {
    return this.adjacencies[id$$14];
  }
  function v265(node$$23) {
    return node$$23.id in this.adjacencies;
  }
  function v264(opt$$9, klass$$5, Node$$2, Edge$$1, Label$$1) {
    var innerOptions$$1 = {"id":"", "name":"", "data":{}, "startData":{}, "endData":{}, "adjacencies":{}, "selected":false, "drawn":false, "exist":false, "angleSpan":{"begin":0, "end":0}, "pos":JAM.new(klass$$5, [], JAM.policy.p3), "startPos":JAM.new(klass$$5, [], JAM.policy.p3), "endPos":JAM.new(klass$$5, [], JAM.policy.p3)};
    JAM.call($$$1.extend, $$$1, [this, JAM.call($$$1.extend, $$$1, [innerOptions$$1, opt$$9], JAM.policy.p3)], JAM.policy.p3);
    this.Config = this.Node = Node$$2;
    this.Edge = Edge$$1;
    this.Label = Label$$1;
    return;
  }
  function v263() {
    function v262() {
      var v14244 = Array.prototype.slice;
      JAM.call(removeDataInternal.call, removeDataInternal, [this, "label", JAM.call(v14244.call, v14244, [arguments], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    function v261(types$$2, obj$$29) {
      types$$2 = JAM.call($$$1.splat, $$$1, [types$$2], JAM.policy.p3);
      var attr$$2;
      for (attr$$2 in obj$$29) {
        var i$$36 = 0;
        var val$$4 = JAM.call($$$1.splat, $$$1, [obj$$29[attr$$2]], JAM.policy.p3);
        var l$$14 = types$$2.length;
        var v7921 = i$$36 < l$$14;
        for (;v7921;) {
          JAM.call(this.setLabelData, this, [attr$$2, val$$4[i$$36], types$$2[i$$36]], JAM.policy.p3);
          i$$36 = i$$36 + 1;
          v7921 = i$$36 < l$$14;
        }
      }
      return;
    }
    function v260(prop$$14, value$$37, type$$45) {
      JAM.call(setDataInternal.call, setDataInternal, [this, "label", prop$$14, value$$37, type$$45], JAM.policy.p3);
      return;
    }
    function v259(prop$$13, type$$44, force$$4) {
      return JAM.call(getDataInternal.call, getDataInternal, [this, "label", prop$$13, type$$44, force$$4, this.Label], JAM.policy.p3);
    }
    function v258() {
      var v14245 = Array.prototype.slice;
      JAM.call(removeDataInternal.call, removeDataInternal, [this, "canvas", JAM.call(v14245.call, v14245, [arguments], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    function v257(types$$1, obj$$28) {
      types$$1 = JAM.call($$$1.splat, $$$1, [types$$1], JAM.policy.p3);
      var attr$$1;
      for (attr$$1 in obj$$28) {
        var i$$35 = 0;
        var val$$3 = JAM.call($$$1.splat, $$$1, [obj$$28[attr$$1]], JAM.policy.p3);
        var l$$13 = types$$1.length;
        var v7927 = i$$35 < l$$13;
        for (;v7927;) {
          JAM.call(this.setCanvasStyle, this, [attr$$1, val$$3[i$$35], types$$1[i$$35]], JAM.policy.p3);
          i$$35 = i$$35 + 1;
          v7927 = i$$35 < l$$13;
        }
      }
      return;
    }
    function v256(prop$$12, value$$36, type$$43) {
      JAM.call(setDataInternal.call, setDataInternal, [this, "canvas", prop$$12, value$$36, type$$43], JAM.policy.p3);
      return;
    }
    function v255(prop$$11, type$$42, force$$3) {
      return JAM.call(getDataInternal.call, getDataInternal, [this, "canvas", prop$$11, type$$42, force$$3, this.Config.CanvasStyles], JAM.policy.p3);
    }
    function v254() {
      var v14247 = Array.prototype.slice;
      JAM.call(removeDataInternal.call, removeDataInternal, [this, "", JAM.call(v14247.call, v14247, [arguments], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    function v253(types, obj$$27) {
      types = JAM.call($$$1.splat, $$$1, [types], JAM.policy.p3);
      var attr;
      for (attr in obj$$27) {
        var i$$34 = 0;
        var val$$2 = JAM.call($$$1.splat, $$$1, [obj$$27[attr]], JAM.policy.p3);
        var l$$12 = types.length;
        var v7933 = i$$34 < l$$12;
        for (;v7933;) {
          JAM.call(this.setData, this, [attr, val$$2[i$$34], types[i$$34]], JAM.policy.p3);
          i$$34 = i$$34 + 1;
          v7933 = i$$34 < l$$12;
        }
      }
      return;
    }
    function v252(prop$$10, value$$35, type$$41) {
      JAM.call(setDataInternal.call, setDataInternal, [this, "", prop$$10, value$$35, type$$41], JAM.policy.p3);
      return;
    }
    function v251(prop$$9, type$$40, force$$2) {
      return JAM.call(getDataInternal.call, getDataInternal, [this, "", prop$$9, type$$40, force$$2, this.Config], JAM.policy.p3);
    }
    function removeDataInternal(prefix$$4, properties$$3) {
      function v250(prop$$8) {
        var pref = prefix$$4 + prop$$8;
        delete that$$9.data[pref];
        delete that$$9.endData[pref];
        delete that$$9.startData[pref];
        return;
      }
      var v14248;
      if (prefix$$4) {
        v14248 = prefix$$4 + "-";
      } else {
        v14248 = "";
      }
      prefix$$4 = "$" + v14248;
      var that$$9 = this;
      JAM.call($$$1.each, $$$1, [properties$$3, v250], JAM.policy.p3);
      return;
    }
    function setDataInternal(prefix$$3, prop$$7, value$$34, type$$39) {
      type$$39 = type$$39 || "current";
      var v14249;
      if (prefix$$3) {
        v14249 = prefix$$3 + "-";
      } else {
        v14249 = "";
      }
      prefix$$3 = "$" + v14249;
      var data$$20;
      if (type$$39 == "current") {
        data$$20 = this.data;
      } else {
        if (type$$39 == "start") {
          data$$20 = this.startData;
        } else {
          if (type$$39 == "end") {
            data$$20 = this.endData;
          }
        }
      }
      JAM.set(data$$20, prefix$$3 + prop$$7, value$$34, JAM.policy.p2);
      return;
    }
    function getDataInternal(prefix$$2, prop$$6, type$$38, force$$1, prefixConfig) {
      var data$$19;
      type$$38 = type$$38 || "current";
      var v14250;
      if (prefix$$2) {
        v14250 = prefix$$2 + "-";
      } else {
        v14250 = "";
      }
      prefix$$2 = "$" + v14250;
      if (type$$38 == "current") {
        data$$19 = this.data;
      } else {
        if (type$$38 == "start") {
          data$$19 = this.startData;
        } else {
          if (type$$38 == "end") {
            data$$19 = this.endData;
          }
        }
      }
      var dollar = prefix$$2 + prop$$6;
      if (force$$1) {
        return data$$19[dollar];
      }
      if (!this.Config.overridable) {
        var v7948 = prefixConfig[prop$$6];
        if (!v7948) {
          v7948 = 0;
        }
        return v7948;
      }
      var v7950;
      if (dollar in data$$19) {
        v7950 = data$$19[dollar];
      } else {
        var v14253;
        if (dollar in this.data) {
          v14253 = this.data[dollar];
        } else {
          var v19116 = prefixConfig[prop$$6];
          if (!v19116) {
            v19116 = 0;
          }
          v14253 = v19116;
        }
        v7950 = v14253;
      }
      return v7950;
    }
    Accessors = {getData:v251, setData:v252, setDataset:v253, removeData:v254, getCanvasStyle:v255, setCanvasStyle:v256, setCanvasStyles:v257, removeCanvasStyle:v258, getLabelData:v259, setLabelData:v260, setLabelDataset:v261, removeLabelData:v262};
    return;
  }
  function v249() {
    this.nodes = {};
    this.edges = {};
    return;
  }
  function v248(id$$13) {
    return id$$13 in this.nodes;
  }
  function v247(id1, id2$$1) {
    delete this.edges[id1][id2$$1];
    delete this.edges[id2$$1][id1];
    return;
  }
  function v246(id$$12) {
    if (JAM.call(this.hasNode, this, [id$$12], JAM.policy.p3)) {
      delete this.nodes[id$$12];
      var adjs = this.edges[id$$12];
      var to;
      for (to in adjs) {
        delete this.edges[to][id$$12];
      }
      delete this.edges[id$$12];
    }
    return;
  }
  function v245(obj$$26, obj2, data$$18) {
    if (!JAM.call(this.hasNode, this, [obj$$26.id], JAM.policy.p3)) {
      JAM.call(this.addNode, this, [obj$$26], JAM.policy.p3);
    }
    if (!JAM.call(this.hasNode, this, [obj2.id], JAM.policy.p3)) {
      JAM.call(this.addNode, this, [obj2], JAM.policy.p3);
    }
    obj$$26 = this.nodes[obj$$26.id];
    obj2 = this.nodes[obj2.id];
    if (!JAM.call(obj$$26.adjacentTo, obj$$26, [obj2], JAM.policy.p3)) {
      var v7965 = this.edges;
      var v7966 = obj$$26.id;
      var v14261 = this.edges[obj$$26.id];
      if (!v14261) {
        v14261 = {};
      }
      var adjsObj = JAM.set(v7965, v7966, v14261, JAM.policy.p2);
      var v7967 = this.edges;
      var v7968 = obj2.id;
      var v14262 = this.edges[obj2.id];
      if (!v14262) {
        v14262 = {};
      }
      var adjsObj2 = JAM.set(v7967, v7968, v14262, JAM.policy.p2);
      var v7969 = adjsObj;
      var v7970 = obj2.id;
      var v14263 = adjsObj2;
      var v14264 = obj$$26.id;
      var v31406 = JAM.new(Graph.Adjacence, [obj$$26, obj2, data$$18, this.Edge, this.Label], JAM.policy.p3);
      JAM.set(v7969, v7970, JAM.set(v14263, v14264, v31406, JAM.policy.p2), JAM.policy.p2);
      return adjsObj[obj2.id];
    }
    return this.edges[obj$$26.id][obj2.id];
  }
  function v244(obj$$25) {
    if (!this.nodes[obj$$25.id]) {
      var edges = JAM.set(this.edges, obj$$25.id, {}, JAM.policy.p2);
      var v7977 = this.nodes;
      var v7978 = obj$$25.id;
      var v14268 = Graph.Node;
      var v22523 = obj$$25.id;
      var v22524 = obj$$25.name;
      var v27887 = obj$$25.data;
      if (!v27887) {
        v27887 = {};
      }
      var v31407 = JAM.new(v14268, [JAM.call($$$1.extend, $$$1, [{"id":v22523, "name":v22524, "data":JAM.call($$$1.merge, $$$1, [v27887, {}], JAM.policy.p3), "adjacencies":edges}, this.opt.Node], JAM.policy.p3), this.opt.klass, this.Node, this.Edge, this.Label], JAM.policy.p3);
      JAM.set(v7977, v7978, v31407, JAM.policy.p2);
    }
    return this.nodes[obj$$25.id];
  }
  function v243(id$$11, id2) {
    if (id$$11 in this.edges) {
      return this.edges[id$$11][id2];
    }
    return false;
  }
  function v242(name$$36) {
    var id$$10;
    for (id$$10 in this.nodes) {
      var n$$7 = this.nodes[id$$10];
      if (n$$7.name == name$$36) {
        return n$$7;
      }
    }
    return false;
  }
  function v241(id$$9) {
    return JAM.call(this.getNode, this, [id$$9], JAM.policy.p3);
  }
  function v240(id$$8) {
    if (JAM.call(this.hasNode, this, [id$$8], JAM.policy.p3)) {
      return this.nodes[id$$8];
    }
    return false;
  }
  function v239(opt$$8, Node$$1, Edge, Label) {
    function v238(p$$14) {
      function v237() {
        function v236(n$$6) {
          var v7989 = n$$6[p$$14];
          JAM.call(v7989.apply, v7989, [n$$6, args$$2], JAM.policy.p3);
          return;
        }
        var v7990 = Array.prototype.slice;
        var args$$2 = JAM.call(v7990.call, v7990, [arguments], JAM.policy.p3);
        JAM.call(that$$8.eachNode, that$$8, [v236], JAM.policy.p3);
        return;
      }
      return v237;
    }
    var innerOptions = {"klass":Complex, "Node":{}};
    this.Node = Node$$1;
    this.Edge = Edge;
    this.Label = Label;
    var v31408 = JAM.call($$$1.merge, $$$1, [innerOptions, opt$$8 || {}], JAM.policy.p3);
    this.opt = v31408;
    this.nodes = {};
    this.edges = {};
    var that$$8 = this;
    this.nodeList = {};
    var p$$13;
    for (p$$13 in Accessors) {
      var v7992 = that$$8.nodeList;
      var v7993 = p$$13;
      var v31409 = JAM.call(v238, null, [p$$13], JAM.policy.p3);
      JAM.set(v7992, v7993, v31409, JAM.policy.p2);
    }
    return;
  }
  function v235() {
    var almostZero$$1 = 1E-4;
    var abs$$1 = Math.abs;
    var v7994 = JAM.call(abs$$1, null, [this.x], JAM.policy.p3) < almostZero$$1;
    if (v7994) {
      v7994 = JAM.call(abs$$1, null, [this.y], JAM.policy.p3) < almostZero$$1;
    }
    return v7994;
  }
  function v234(pos$$13) {
    var x$$63 = this.x;
    var y$$44 = this.y;
    var sq = JAM.call(pos$$13.squaredNorm, pos$$13, [], JAM.policy.p3);
    this.x = x$$63 * pos$$13.x + y$$44 * pos$$13.y;
    this.y = y$$44 * pos$$13.x - x$$63 * pos$$13.y;
    return JAM.call(this.$scale, this, [1 / sq], JAM.policy.p3);
  }
  function v233(factor$$2) {
    this.x = this.x * factor$$2;
    this.y = this.y * factor$$2;
    return this;
  }
  function v232() {
    this.y = -this.y;
    return this;
  }
  function v231(pos$$12) {
    var x$$62 = this.x;
    var y$$43 = this.y;
    this.x = x$$62 * pos$$12.x - y$$43 * pos$$12.y;
    this.y = y$$43 * pos$$12.x + x$$62 * pos$$12.y;
    return this;
  }
  function v230(pos$$11) {
    this.x = this.x + pos$$11.x;
    this.y = this.y + pos$$11.y;
    return this;
  }
  function v229(c$$2) {
    var v8005 = this.x == c$$2.x;
    if (v8005) {
      v8005 = this.y == c$$2.y;
    }
    return v8005;
  }
  function v228(factor$$1) {
    return JAM.new(Complex, [this.x * factor$$1, this.y * factor$$1], JAM.policy.p3);
  }
  function v227() {
    return JAM.new(Complex, [this.x, -this.y], JAM.policy.p3);
  }
  function v226(pos$$10) {
    return JAM.new(Complex, [this.x * pos$$10.x - this.y * pos$$10.y, this.y * pos$$10.x + this.x * pos$$10.y], JAM.policy.p3);
  }
  function v225(pos$$9) {
    return JAM.new(Complex, [this.x + pos$$9.x, this.y + pos$$9.y], JAM.policy.p3);
  }
  function v224() {
    return this.x * this.x + this.y * this.y;
  }
  function v223() {
    return JAM.call(Math.sqrt, Math, [JAM.call(this.squaredNorm, this, [], JAM.policy.p3)], JAM.policy.p3);
  }
  function v222(simple$$3) {
    var rho$$4 = JAM.call(this.norm, this, [], JAM.policy.p3);
    var atan = JAM.call(Math.atan2, Math, [this.y, this.x], JAM.policy.p3);
    if (atan < 0) {
      atan = atan + Math.PI * 2;
    }
    if (simple$$3) {
      return{"theta":atan, "rho":rho$$4};
    }
    return JAM.new(Polar, [atan, rho$$4], JAM.policy.p3);
  }
  function v221() {
    return JAM.new(Complex, [this.x, this.y], JAM.policy.p3);
  }
  function v220(theta$$2, rho$$3) {
    this.x = JAM.call(Math.cos, Math, [theta$$2], JAM.policy.p3) * rho$$3;
    this.y = JAM.call(Math.sin, Math, [theta$$2], JAM.policy.p3) * rho$$3;
    return;
  }
  function v219(x$$61, y$$42) {
    this.x = x$$61;
    this.y = y$$42;
    return;
  }
  function v218(c$$1) {
    c$$1 = JAM.call(c$$1.getc, c$$1, [true], JAM.policy.p3);
    this.x = c$$1.x;
    this.y = c$$1.y;
    return;
  }
  function v217(simple$$2) {
    return JAM.call(this.toPolar, this, [simple$$2], JAM.policy.p3);
  }
  function v216() {
    return this;
  }
  function v215(elem$$17, delta$$3) {
    function ch$$5(t$$1) {
      var v8024;
      if (t$$1 < 0) {
        v8024 = t$$1 % pi2 + pi2;
      } else {
        v8024 = t$$1 % pi2;
      }
      var a$$1 = v8024;
      return a$$1;
    }
    var pi = Math.PI;
    var pi2 = pi * 2;
    var tt = this.theta;
    var et = elem$$17.theta;
    var sum;
    var diff = JAM.call(Math.abs, Math, [tt - et], JAM.policy.p3);
    if (diff == pi) {
      if (tt > et) {
        sum = JAM.call(ch$$5, null, [et + (tt - pi2 - et) * delta$$3], JAM.policy.p3);
      } else {
        sum = JAM.call(ch$$5, null, [et - pi2 + (tt - et) * delta$$3], JAM.policy.p3);
      }
    } else {
      if (diff >= pi) {
        if (tt > et) {
          sum = JAM.call(ch$$5, null, [et + (tt - pi2 - et) * delta$$3], JAM.policy.p3);
        } else {
          sum = JAM.call(ch$$5, null, [et - pi2 + (tt - (et - pi2)) * delta$$3], JAM.policy.p3);
        }
      } else {
        sum = JAM.call(ch$$5, null, [et + (tt - et) * delta$$3], JAM.policy.p3);
      }
    }
    var r = (this.rho - elem$$17.rho) * delta$$3 + elem$$17.rho;
    return{"theta":sum, "rho":r};
  }
  function v214() {
    var almostZero = 1E-4;
    var abs = Math.abs;
    var v8037 = JAM.call(abs, null, [this.theta], JAM.policy.p3) < almostZero;
    if (v8037) {
      v8037 = JAM.call(abs, null, [this.rho], JAM.policy.p3) < almostZero;
    }
    return v8037;
  }
  function v213(number$$1) {
    this.rho = this.rho * number$$1;
    return this;
  }
  function v212(polar$$2) {
    this.theta = (this.theta + polar$$2.theta) % (Math.PI * 2);
    this.rho = this.rho + polar$$2.rho;
    return this;
  }
  function v211(polar$$1) {
    this.theta = this.theta + polar$$1.theta;
    this.rho = this.rho + polar$$1.rho;
    return this;
  }
  function v210(c) {
    var v8042 = this.theta == c.theta;
    if (v8042) {
      v8042 = this.rho == c.rho;
    }
    return v8042;
  }
  function v209(number) {
    return JAM.new(Polar, [this.theta, this.rho * number], JAM.policy.p3);
  }
  function v208(polar) {
    return JAM.new(Polar, [this.theta + polar.theta, this.rho + polar.rho], JAM.policy.p3);
  }
  function v207(simple$$1) {
    var x$$59 = JAM.call(Math.cos, Math, [this.theta], JAM.policy.p3) * this.rho;
    var y$$40 = JAM.call(Math.sin, Math, [this.theta], JAM.policy.p3) * this.rho;
    if (simple$$1) {
      return{"x":x$$59, "y":y$$40};
    }
    return JAM.new(Complex, [x$$59, y$$40], JAM.policy.p3);
  }
  function v206() {
    return JAM.new(Polar, [this.theta, this.rho], JAM.policy.p3);
  }
  function v205(theta$$1, rho$$2) {
    this.theta = theta$$1;
    this.rho = rho$$2;
    return;
  }
  function v204(x$$58, y$$39) {
    var v31410 = JAM.call(Math.sqrt, Math, [x$$58 * x$$58 + y$$39 * y$$39], JAM.policy.p3);
    this.rho = v31410;
    var v31411 = JAM.call(Math.atan2, Math, [y$$39, x$$58], JAM.policy.p3);
    this.theta = v31411;
    if (this.theta < 0) {
      this.theta = this.theta + Math.PI * 2;
    }
    return;
  }
  function v203(v) {
    v = JAM.call(v.getp, v, [], JAM.policy.p3);
    this.theta = v.theta;
    this.rho = v.rho;
    return;
  }
  function v202() {
    return this;
  }
  function v201(simple) {
    return JAM.call(this.toComplex, this, [simple], JAM.policy.p3);
  }
  function v200() {
    function v199(base$$3) {
      var canvas$$7 = base$$3.canvas;
      var ctx$$2 = JAM.call(base$$3.getCtx, base$$3, [], JAM.policy.p3);
      var conf = this.config;
      var styles$$1 = conf.CanvasStyles;
      var s$$6;
      for (s$$6 in styles$$1) {
        JAM.set(ctx$$2, s$$6, styles$$1[s$$6], JAM.policy.p2);
      }
      var n$$5 = conf.numberOfCircles;
      var rho = conf.levelDistance;
      var i$$33 = 1;
      var v8057 = i$$33 <= n$$5;
      for (;v8057;) {
        JAM.call(ctx$$2.beginPath, ctx$$2, [], JAM.policy.p3);
        JAM.call(ctx$$2.arc, ctx$$2, [0, 0, rho * i$$33, 0, 2 * Math.PI, false], JAM.policy.p3);
        JAM.call(ctx$$2.stroke, ctx$$2, [], JAM.policy.p3);
        JAM.call(ctx$$2.closePath, ctx$$2, [], JAM.policy.p3);
        i$$33 = i$$33 + 1;
        v8057 = i$$33 <= n$$5;
      }
      return;
    }
    function v198(width$$15, height$$14, base$$2) {
      JAM.call(this.plot, this, [base$$2], JAM.policy.p3);
      return;
    }
    function v197(viz$$5, options$$4) {
      this.viz = viz$$5;
      var v31412 = JAM.call($$$1.merge, $$$1, [{idSuffix:"-bkcanvas", levelDistance:100, numberOfCircles:6, CanvasStyles:{}, offset:0}, options$$4], JAM.policy.p3);
      this.config = v31412;
      return;
    }
    function v196() {
      JAM.call(this.clear, this, [], JAM.policy.p3);
      var v8059 = this.viz;
      JAM.call(v8059.plot, v8059, [this], JAM.policy.p3);
      return;
    }
    function v195() {
      var size$$6 = JAM.call(this.getSize, this, [], JAM.policy.p3);
      var ox$$3 = this.translateOffsetX;
      var oy$$4 = this.translateOffsetY;
      var sx$$5 = this.scaleOffsetX;
      var sy$$5 = this.scaleOffsetY;
      var x$$57 = (0 - ox$$3) * 1 / sx$$5;
      var y$$38 = (0 - oy$$4) * 1 / sy$$5;
      var v8062 = JAM.call(this.getCtx, this, [], JAM.policy.p3);
      JAM.call(v8062.clearRect, v8062, [x$$57, y$$38, size$$6.width * 1 / sx$$5 + JAM.call(Math.abs, Math, [x$$57], JAM.policy.p3), size$$6.height * 1 / sy$$5 + JAM.call(Math.abs, Math, [y$$38], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    function v194(x$$56, y$$37, disablePlot$$4) {
      this.scaleOffsetX = this.scaleOffsetX * x$$56;
      this.scaleOffsetY = this.scaleOffsetY * y$$37;
      var v8065 = JAM.call(this.getCtx, this, [], JAM.policy.p3);
      JAM.call(v8065.scale, v8065, [x$$56, y$$37], JAM.policy.p3);
      var v8066 = !disablePlot$$4;
      if (v8066) {
        JAM.call(this.plot, this, [], JAM.policy.p3);
      }
      return;
    }
    function v193(x$$55, y$$36, disablePlot$$3) {
      var sx$$4 = this.scaleOffsetX;
      var sy$$4 = this.scaleOffsetY;
      this.translateOffsetX = this.translateOffsetX + x$$55 * sx$$4;
      this.translateOffsetY = this.translateOffsetY + y$$36 * sy$$4;
      var v8067 = JAM.call(this.getCtx, this, [], JAM.policy.p3);
      JAM.call(v8067.translate, v8067, [x$$55, y$$36], JAM.policy.p3);
      var v8068 = !disablePlot$$3;
      if (v8068) {
        JAM.call(this.plot, this, [], JAM.policy.p3);
      }
      return;
    }
    function v192(width$$14, height$$13) {
      var size$$5 = JAM.call(this.getSize, this, [], JAM.policy.p3);
      var canvas$$6 = this.canvas;
      var styles = canvas$$6.style;
      this.size = false;
      canvas$$6.width = width$$14;
      canvas$$6.height = height$$13;
      styles.width = width$$14 + "px";
      styles.height = height$$13 + "px";
      if (!supportsCanvas) {
        JAM.call(this.translateToCenter, this, [size$$5], JAM.policy.p3);
      } else {
        JAM.call(this.translateToCenter, this, [], JAM.policy.p3);
      }
      this.translateOffsetX = this.translateOffsetY = 0;
      this.scaleOffsetX = this.scaleOffsetY = 1;
      JAM.call(this.clear, this, [], JAM.policy.p3);
      var v8070 = this.viz;
      JAM.call(v8070.resize, v8070, [width$$14, height$$13, this], JAM.policy.p3);
      return;
    }
    function v191(ps) {
      var size$$4 = JAM.call(this.getSize, this, [], JAM.policy.p3);
      var v8071;
      if (ps) {
        v8071 = size$$4.width - ps.width - this.translateOffsetX * 2;
      } else {
        v8071 = size$$4.width;
      }
      var width$$13 = v8071;
      var v8072;
      if (ps) {
        v8072 = size$$4.height - ps.height - this.translateOffsetY * 2;
      } else {
        v8072 = size$$4.height;
      }
      height = v8072;
      var ctx$$1 = JAM.call(this.getCtx, this, [], JAM.policy.p3);
      if (ps) {
        JAM.call(ctx$$1.scale, ctx$$1, [1 / this.scaleOffsetX, 1 / this.scaleOffsetY], JAM.policy.p3);
      }
      return;
    }
    function v190() {
      if (this.size) {
        return this.size;
      }
      var canvas$$5 = this.canvas;
      return this.size = {width:canvas$$5.width, height:canvas$$5.height};
    }
    function v189() {
      if (!this.ctx) {
        var v8076 = this.canvas;
        var v31413 = JAM.call(v8076.getContext, v8076, ["2d"], JAM.policy.p3);
        return this.ctx = v31413;
      }
      return this.ctx;
    }
    function v188() {
      var opt$$7 = this.opt;
      var width$$12 = opt$$7.width;
      var height$$12 = opt$$7.height;
      var v31414 = JAM.call($E$$1, null, ["canvas", {"id":opt$$7.injectInto + opt$$7.idSuffix, "width":width$$12, "height":height$$12, "style":{"position":"absolute", "top":0, "left":0, "width":width$$12 + "px", "height":height$$12 + "px"}}], JAM.policy.p3);
      this.canvas = v31414;
      return;
    }
    function v187(viz$$4) {
      this.viz = viz$$4;
      this.opt = viz$$4.config;
      this.size = false;
      JAM.call(this.createCanvas, this, [], JAM.policy.p3);
      JAM.call(this.translateToCenter, this, [], JAM.policy.p3);
      return;
    }
    function v186(type$$37, idLabel$$1, dim) {
      var NS = "http://www.w3.org/2000/svg";
      var v14372 = type$$37 == "HTML";
      if (!v14372) {
        v14372 = type$$37 == "Native";
      }
      if (v14372) {
        return JAM.call($E$$1, null, ["div", {"id":idLabel$$1, "style":{"overflow":"visible", "position":"absolute", "top":0, "left":0, "width":dim.width + "px", "height":0}}], JAM.policy.p3);
      } else {
        if (type$$37 == "SVG") {
          var svgContainer = JAM.call(document.createElementNS, document, [NS, "svg:svg"], JAM.policy.p3);
          JAM.call(svgContainer.setAttribute, svgContainer, ["width", dim.width], JAM.policy.p3);
          JAM.call(svgContainer.setAttribute, svgContainer, ["height", dim.height], JAM.policy.p3);
          var style$$4 = svgContainer.style;
          style$$4.position = "absolute";
          style$$4.left = style$$4.top = "0px";
          var labelContainer$$1 = JAM.call(document.createElementNS, document, [NS, "svg:g"], JAM.policy.p3);
          JAM.call(labelContainer$$1.setAttribute, labelContainer$$1, ["width", dim.width], JAM.policy.p3);
          JAM.call(labelContainer$$1.setAttribute, labelContainer$$1, ["height", dim.height], JAM.policy.p3);
          JAM.call(labelContainer$$1.setAttribute, labelContainer$$1, ["x", 0], JAM.policy.p3);
          JAM.call(labelContainer$$1.setAttribute, labelContainer$$1, ["y", 0], JAM.policy.p3);
          JAM.call(labelContainer$$1.setAttribute, labelContainer$$1, ["id", idLabel$$1], JAM.policy.p3);
          JAM.call(svgContainer.appendChild, svgContainer, [labelContainer$$1], JAM.policy.p3);
          return svgContainer;
        }
      }
      return;
    }
    function v185(type$$36, action$$2) {
      var v8086 = this.canvases[0];
      var ctx = JAM.call(v8086.getCtx, v8086, [], JAM.policy.p3);
      JAM.call(ctx.beginPath, ctx, [], JAM.policy.p3);
      JAM.call(action$$2, null, [ctx], JAM.policy.p3);
      JAM.call(ctx[type$$36], ctx, [], JAM.policy.p3);
      JAM.call(ctx.closePath, ctx, [], JAM.policy.p3);
      return;
    }
    function v184(i$$32) {
      var v8087 = this.canvases[i$$32 || 0];
      JAM.call(v8087.clear, v8087, [], JAM.policy.p3);
      return;
    }
    function v183(force) {
      var v14377 = force;
      if (!v14377) {
        v14377 = !this.pos;
      }
      if (v14377) {
        var v31415 = JAM.call($$$1.getPos, $$$1, [this.element], JAM.policy.p3);
        return this.pos = v31415;
      }
      return this.pos;
    }
    function v182(x$$54, y$$35, disablePlot$$2) {
      var cur = JAM.call(this.getZoom, this, [], JAM.policy.p3);
      var px$$1 = x$$54 / cur.x;
      var py$$1 = y$$35 / cur.y;
      JAM.call(this.scale, this, [px$$1, py$$1, disablePlot$$2], JAM.policy.p3);
      return;
    }
    function v181() {
      return JAM.new(Complex, [this.scaleOffsetX, this.scaleOffsetY], JAM.policy.p3);
    }
    function v180(x$$53, y$$34, disablePlot$$1) {
      var px = this.scaleOffsetX * x$$53;
      var py = this.scaleOffsetY * y$$34;
      var dx$$4 = this.translateOffsetX * (x$$53 - 1) / px;
      var dy$$4 = this.translateOffsetY * (y$$34 - 1) / py;
      this.scaleOffsetX = px;
      this.scaleOffsetY = py;
      var i$$31 = 0;
      var l$$11 = this.canvases.length;
      var v8100 = i$$31 < l$$11;
      for (;v8100;) {
        var v8099 = this.canvases[i$$31];
        JAM.call(v8099.scale, v8099, [x$$53, y$$34, true], JAM.policy.p3);
        i$$31 = i$$31 + 1;
        v8100 = i$$31 < l$$11;
      }
      JAM.call(this.translate, this, [dx$$4, dy$$4, false], JAM.policy.p3);
      return;
    }
    function v179(x$$52, y$$33, disablePlot) {
      this.translateOffsetX = this.translateOffsetX + x$$52 * this.scaleOffsetX;
      this.translateOffsetY = this.translateOffsetY + y$$33 * this.scaleOffsetY;
      var i$$30 = 0;
      var l$$10 = this.canvases.length;
      var v8103 = i$$30 < l$$10;
      for (;v8103;) {
        var v8102 = this.canvases[i$$30];
        JAM.call(v8102.translate, v8102, [x$$52, y$$33, disablePlot], JAM.policy.p3);
        i$$30 = i$$30 + 1;
        v8103 = i$$30 < l$$10;
      }
      return;
    }
    function v178(width$$11, height$$11) {
      JAM.call(this.getPos, this, [true], JAM.policy.p3);
      this.translateOffsetX = this.translateOffsetY = 0;
      this.scaleOffsetX = this.scaleOffsetY = 1;
      var i$$29 = 0;
      var l$$9 = this.canvases.length;
      var v8106 = i$$29 < l$$9;
      for (;v8106;) {
        var v8105 = this.canvases[i$$29];
        JAM.call(v8105.resize, v8105, [width$$11, height$$11], JAM.policy.p3);
        i$$29 = i$$29 + 1;
        v8106 = i$$29 < l$$9;
      }
      var style$$3 = this.element.style;
      style$$3.width = width$$11 + "px";
      style$$3.height = height$$11 + "px";
      if (this.labelContainer) {
        this.labelContainer.style.width = width$$11 + "px";
      }
      return;
    }
    function v177(i$$28) {
      var v8110 = this.canvases[i$$28 || 0];
      return JAM.call(v8110.getSize, v8110, [], JAM.policy.p3);
    }
    function v176() {
      return this.element;
    }
    function v175() {
      return this.opt;
    }
    function v174(i$$27) {
      var v8111 = this.canvases[i$$27 || 0];
      return JAM.call(v8111.getCtx, v8111, [], JAM.policy.p3);
    }
    function v173(viz$$3, opt$$6) {
      function v172() {
        function v171() {
          JAM.call(that$$7.getPos, that$$7, [true], JAM.policy.p3);
          return;
        }
        JAM.call(clearTimeout, null, [timer], JAM.policy.p3);
        timer = JAM.call(setTimeout, null, [v171, 500], JAM.policy.p3);
        return;
      }
      function v170() {
        JAM.call(viz$$3.refresh, viz$$3, [], JAM.policy.p3);
        return;
      }
      function v169(base$$1) {
        var v8112 = viz$$3.fx;
        JAM.call(v8112.plot, v8112, [], JAM.policy.p3);
        return;
      }
      this.viz = viz$$3;
      this.opt = this.config = opt$$6;
      var v8113;
      if (JAM.call($$$1.type, $$$1, [opt$$6.injectInto], JAM.policy.p3) == "string") {
        v8113 = opt$$6.injectInto;
      } else {
        v8113 = opt$$6.injectInto.id;
      }
      var id$$7 = v8113;
      var type$$35 = opt$$6.type;
      var idLabel = id$$7 + "-label";
      var wrapper = JAM.call($$$1, null, [id$$7], JAM.policy.p3);
      var v8114 = opt$$6.width;
      if (!v8114) {
        v8114 = wrapper.offsetWidth;
      }
      var width$$10 = v8114;
      var v8115 = opt$$6.height;
      if (!v8115) {
        v8115 = wrapper.offsetHeight;
      }
      var height$$10 = v8115;
      this.id = id$$7;
      var canvasOptions = {injectInto:id$$7, width:width$$10, height:height$$10};
      var v31416 = JAM.call($E$$1, null, ["div", {"id":id$$7 + "-canvaswidget", "style":{"position":"relative", "width":width$$10 + "px", "height":height$$10 + "px"}}], JAM.policy.p3);
      this.element = v31416;
      var v31417 = JAM.call(this.createLabelContainer, this, [opt$$6.Label.type, idLabel, canvasOptions], JAM.policy.p3);
      this.labelContainer = v31417;
      var v8118 = this.canvases;
      JAM.call(v8118.push, v8118, [JAM.new(Canvas.Base[type$$35], [{config:JAM.call($$$1.extend, $$$1, [{idSuffix:"-canvas"}, canvasOptions], JAM.policy.p3), plot:v169, resize:v170}], JAM.policy.p3)], JAM.policy.p3);
      var back = opt$$6.background;
      if (back) {
        var backCanvas = JAM.new(Canvas.Background[back.type], [viz$$3, JAM.call($$$1.extend, $$$1, [back, canvasOptions], JAM.policy.p3)], JAM.policy.p3);
        var v8122 = this.canvases;
        JAM.call(v8122.push, v8122, [JAM.new(Canvas.Base[type$$35], [backCanvas], JAM.policy.p3)], JAM.policy.p3);
      }
      var len$$1 = this.canvases.length;
      var v8129 = len$$1;
      len$$1 = len$$1 - 1;
      for (;v8129;) {
        var v8125 = this.element;
        JAM.call(v8125.appendChild, v8125, [this.canvases[len$$1].canvas], JAM.policy.p3);
        if (len$$1 > 0) {
          var v8127 = this.canvases[len$$1];
          JAM.call(v8127.plot, v8127, [], JAM.policy.p3);
        }
        v8129 = len$$1;
        len$$1 = len$$1 - 1;
      }
      var v8130 = this.element;
      JAM.call(v8130.appendChild, v8130, [this.labelContainer], JAM.policy.p3);
      JAM.call(wrapper.appendChild, wrapper, [this.element], JAM.policy.p3);
      var timer = null;
      var that$$7 = this;
      JAM.call($$$1.addEvent, $$$1, [window, "scroll", v172], JAM.policy.p3);
      return;
    }
    function $E$$1(tag$$1, props$$2) {
      var elem$$16 = JAM.call(document.createElement, document, [tag$$1], JAM.policy.p3);
      var p$$12;
      for (p$$12 in props$$2) {
        if (typeof props$$2[p$$12] == "object") {
          JAM.call($$$1.extend, $$$1, [elem$$16[p$$12], props$$2[p$$12]], JAM.policy.p3);
        } else {
          JAM.set(elem$$16, p$$12, props$$2[p$$12], JAM.policy.p2);
        }
      }
      var v19183 = tag$$1 == "canvas";
      if (v19183) {
        v19183 = !supportsCanvas;
      }
      var v14409 = v19183;
      if (v14409) {
        v14409 = G_vmlCanvasManager;
      }
      if (v14409) {
        var v14410 = document.body;
        elem$$16 = JAM.call(G_vmlCanvasManager.initElement, G_vmlCanvasManager, [JAM.call(v14410.appendChild, v14410, [elem$$16], JAM.policy.p3)], JAM.policy.p3);
      }
      return elem$$16;
    }
    var canvasType = typeof HTMLCanvasElement;
    var v8138 = canvasType == "object";
    if (!v8138) {
      v8138 = canvasType == "function";
    }
    var supportsCanvas = v8138;
    $jit.Canvas = Canvas = JAM.new(Class, [{canvases:[], pos:false, element:false, labelContainer:false, translateOffsetX:0, translateOffsetY:0, scaleOffsetX:1, scaleOffsetY:1, initialize:v173, getCtx:v174, getConfig:v175, getElement:v176, getSize:v177, resize:v178, translate:v179, scale:v180, getZoom:v181, setZoom:v182, getPos:v183, clear:v184, path:v185, createLabelContainer:v186}], JAM.policy.p3);
    Canvas.Base = {};
    var v8140 = Canvas.Base;
    var v31418 = JAM.new(Class, [{translateOffsetX:0, translateOffsetY:0, scaleOffsetX:1, scaleOffsetY:1, initialize:v187, createCanvas:v188, getCtx:v189, getSize:v190, translateToCenter:v191, resize:v192, translate:v193, scale:v194, clear:v195, plot:v196}], JAM.policy.p3);
    v8140["2D"] = v31418;
    Canvas.Background = {};
    var v8141 = Canvas.Background;
    var v31419 = JAM.new(Class, [{initialize:v197, resize:v198, plot:v199}], JAM.policy.p3);
    v8141.Circles = v31419;
    return;
  }
  function v168(e$$45, win$$33, eventInfo$$4, isRightClick$$3) {
    if (!this.config.panning) {
      return;
    }
    this.pressed = false;
    return;
  }
  function v167(e$$44, win$$32, eventInfo$$3) {
    if (!this.config.panning) {
      return;
    }
    if (!this.pressed) {
      return;
    }
    var v14418 = this.config.panning == "avoid nodes";
    if (v14418) {
      var v19187;
      if (this.dom) {
        v19187 = JAM.call(this.isLabel, this, [e$$44, win$$32], JAM.policy.p3);
      } else {
        v19187 = JAM.call(eventInfo$$3.getNode, eventInfo$$3, [], JAM.policy.p3);
      }
      v14418 = v19187;
    }
    if (v14418) {
      return;
    }
    var thispos = this.pos;
    var currentPos = JAM.call(eventInfo$$3.getPos, eventInfo$$3, [], JAM.policy.p3);
    var canvas$$4 = this.canvas;
    var ox$$2 = canvas$$4.translateOffsetX;
    var oy$$3 = canvas$$4.translateOffsetY;
    var sx$$3 = canvas$$4.scaleOffsetX;
    var sy$$3 = canvas$$4.scaleOffsetY;
    currentPos.x = currentPos.x * sx$$3;
    currentPos.y = currentPos.y * sy$$3;
    currentPos.x = currentPos.x + ox$$2;
    currentPos.y = currentPos.y + oy$$3;
    var x$$51 = currentPos.x - thispos.x;
    var y$$32 = currentPos.y - thispos.y;
    this.pos = currentPos;
    var v8150 = this.canvas;
    JAM.call(v8150.translate, v8150, [x$$51 * 1 / sx$$3, y$$32 * 1 / sy$$3], JAM.policy.p3);
    return;
  }
  function v166(e$$43, win$$31, eventInfo$$2) {
    if (!this.config.panning) {
      return;
    }
    var v14426 = this.config.panning == "avoid nodes";
    if (v14426) {
      var v19190;
      if (this.dom) {
        v19190 = JAM.call(this.isLabel, this, [e$$43, win$$31], JAM.policy.p3);
      } else {
        v19190 = JAM.call(eventInfo$$2.getNode, eventInfo$$2, [], JAM.policy.p3);
      }
      v14426 = v19190;
    }
    if (v14426) {
      return;
    }
    this.pressed = true;
    var v31420 = JAM.call(eventInfo$$2.getPos, eventInfo$$2, [], JAM.policy.p3);
    this.pos = v31420;
    var canvas$$3 = this.canvas;
    var ox$$1 = canvas$$3.translateOffsetX;
    var oy$$2 = canvas$$3.translateOffsetY;
    var sx$$2 = canvas$$3.scaleOffsetX;
    var sy$$2 = canvas$$3.scaleOffsetY;
    var v8155 = this.pos;
    v8155.x = v8155.x * sx$$2;
    var v8156 = this.pos;
    v8156.x = v8156.x + ox$$1;
    var v8157 = this.pos;
    v8157.y = v8157.y * sy$$2;
    var v8158 = this.pos;
    v8158.y = v8158.y + oy$$2;
    return;
  }
  function v165(e$$42, win$$30, scroll$$2) {
    if (!this.config.zooming) {
      return;
    }
    var v8160 = $$$1.event;
    var v14428 = $$$1.event;
    JAM.call(v8160.stop, v8160, [JAM.call(v14428.get, v14428, [e$$42, win$$30], JAM.policy.p3)], JAM.policy.p3);
    var val$$1 = this.config.zooming / 1E3;
    var ans$$4 = 1 + scroll$$2 * val$$1;
    var v8164 = this.canvas;
    JAM.call(v8164.scale, v8164, [ans$$4, ans$$4], JAM.policy.p3);
    return;
  }
  function v164() {
    this.pos = false;
    this.pressed = false;
    return;
  }
  function v163(e$$41, win$$29, event$$15) {
    function v162(n$$4) {
      var v14430 = n$$4.hovered;
      if (v14430) {
        v14430 = !n$$4.selected;
      }
      if (v14430) {
        var s$$5;
        for (s$$5 in nStyles$$3) {
          JAM.call(n$$4.setData, n$$4, [s$$5, n$$4.styles["$" + s$$5], "end"], JAM.policy.p3);
        }
        delete n$$4.hovered;
      }
      return;
    }
    if (this.down) {
      this.move = true;
    }
    var v14433 = this.dom;
    if (v14433) {
      v14433 = JAM.call(this.isLabel, this, [e$$41, win$$29], JAM.policy.p3);
    }
    if (v14433) {
      return;
    }
    var nStyles$$3 = this.nodeStylesOnHover;
    if (!nStyles$$3) {
      return;
    }
    if (!this.dom) {
      if (this.hoveredNode) {
        var v8170 = this.types;
        var v14435 = this.hoveredNode;
        var geom$$3 = v8170[JAM.call(v14435.getData, v14435, ["type"], JAM.policy.p3)];
        var v14436 = geom$$3;
        if (v14436) {
          v14436 = geom$$3.contains;
        }
        var v8172 = v14436;
        if (v8172) {
          var v14437 = geom$$3.contains;
          v8172 = JAM.call(v14437.call, v14437, [this.fx, this.hoveredNode, JAM.call(event$$15.getPos, event$$15, [], JAM.policy.p3)], JAM.policy.p3);
        }
        var contains$$3 = v8172;
        if (contains$$3) {
          return;
        }
      }
      var node$$22 = JAM.call(event$$15.getNode, event$$15, [], JAM.policy.p3);
      var v14441 = !this.hoveredNode;
      if (v14441) {
        v14441 = !node$$22;
      }
      if (v14441) {
        return;
      }
      if (node$$22.hovered) {
        return;
      }
      var v14442 = node$$22;
      if (v14442) {
        v14442 = !node$$22.selected;
      }
      if (v14442) {
        var v8176 = this.fx.nodeFxAnimation;
        JAM.call(v8176.stopTimer, v8176, [], JAM.policy.p3);
        var v8177 = this.viz.graph;
        JAM.call(v8177.eachNode, v8177, [v162], JAM.policy.p3);
        node$$22.hovered = true;
        this.hoveredNode = node$$22;
        JAM.call(this.toggleStylesOnHover, this, [node$$22, true], JAM.policy.p3);
      } else {
        var v14445 = this.hoveredNode;
        if (v14445) {
          v14445 = !this.hoveredNode.selected;
        }
        if (v14445) {
          var v8178 = this.fx.nodeFxAnimation;
          JAM.call(v8178.stopTimer, v8178, [], JAM.policy.p3);
          JAM.call(this.toggleStylesOnHover, this, [this.hoveredNode, false], JAM.policy.p3);
          delete this.hoveredNode.hovered;
          this.hoveredNode = false;
        }
      }
    }
    return;
  }
  function v161(node$$21) {
    function v160(n$$3) {
      if (n$$3.selected) {
        var s$$4;
        for (s$$4 in nStyles$$2) {
          JAM.call(n$$3.setData, n$$3, [s$$4, n$$3.styles["$" + s$$4], "end"], JAM.policy.p3);
        }
        delete n$$3.selected;
      }
      return;
    }
    if (!node$$21) {
      return;
    }
    var nStyles$$2 = this.nodeStylesOnClick;
    if (!nStyles$$2) {
      return;
    }
    if (node$$21.selected) {
      JAM.call(this.toggleStylesOnClick, this, [node$$21, false], JAM.policy.p3);
      delete node$$21.selected;
    } else {
      var v8188 = this.viz.graph;
      JAM.call(v8188.eachNode, v8188, [v160], JAM.policy.p3);
      JAM.call(this.toggleStylesOnClick, this, [node$$21, true], JAM.policy.p3);
      node$$21.selected = true;
      delete node$$21.hovered;
      this.hoveredNode = false;
    }
    return;
  }
  function v159(type$$34, node$$20, set$$2) {
    var viz$$2 = this.viz;
    var nStyles$$1 = this.nStyles;
    if (set$$2) {
      var that$$6 = this;
      if (!node$$20.styles) {
        var v8190 = node$$20;
        var v31421 = JAM.call($$$1.merge, $$$1, [node$$20.data, {}], JAM.policy.p3);
        v8190.styles = v31421;
      }
      var s$$3;
      for (s$$3 in this["nodeStylesOn" + type$$34]) {
        var $s = "$" + s$$3;
        if (!($s in node$$20.styles)) {
          var v8192 = node$$20.styles;
          var v8193 = $s;
          var v31422 = JAM.call(node$$20.getData, node$$20, [s$$3], JAM.policy.p3);
          JAM.set(v8192, v8193, v31422, JAM.policy.p2);
        }
      }
      var v8196 = viz$$2.fx;
      JAM.call(v8196.nodeFx, v8196, [JAM.call($$$1.extend, $$$1, [{"elements":{"id":node$$20.id, "properties":that$$6["nodeStylesOn" + type$$34]}, transition:Trans.Quart.easeOut, duration:300, fps:40}, this.config], JAM.policy.p3)], JAM.policy.p3);
    } else {
      var restoredStyles$$1 = JAM.call(this.getRestoredStyles, this, [node$$20, type$$34], JAM.policy.p3);
      var v8198 = viz$$2.fx;
      JAM.call(v8198.nodeFx, v8198, [JAM.call($$$1.extend, $$$1, [{"elements":{"id":node$$20.id, "properties":restoredStyles$$1}, transition:Trans.Quart.easeOut, duration:300, fps:40}, this.config], JAM.policy.p3)], JAM.policy.p3);
    }
    return;
  }
  function v158(node$$19, set$$1) {
    if (this.nodeStylesOnClick) {
      JAM.call(this.toggleStylesOn, this, ["Click", node$$19, set$$1], JAM.policy.p3);
    }
    return;
  }
  function v157(node$$18, set) {
    if (this.nodeStylesOnHover) {
      JAM.call(this.toggleStylesOn, this, ["Hover", node$$18, set], JAM.policy.p3);
    }
    return;
  }
  function v156(node$$17, type$$33) {
    var restoredStyles = {};
    var nStyles = this["nodeStylesOn" + type$$33];
    var prop$$5;
    for (prop$$5 in nStyles) {
      JAM.set(restoredStyles, prop$$5, node$$17.styles["$" + prop$$5], JAM.policy.p2);
    }
    return restoredStyles;
  }
  function v155(e$$40, win$$28, event$$14, isRightClick$$2) {
    if (isRightClick$$2) {
      return;
    }
    if (!this.move) {
      JAM.call(this.onClick, this, [JAM.call(event$$14.getNode, event$$14, [], JAM.policy.p3)], JAM.policy.p3);
    }
    this.down = this.move = false;
    return;
  }
  function v154(e$$39, win$$27, event$$13, isRightClick$$1) {
    if (isRightClick$$1) {
      return;
    }
    var label$$9;
    var v14459 = this.dom;
    if (v14459) {
      v14459 = label$$9 = JAM.call(this.isLabel, this, [e$$39, win$$27], JAM.policy.p3);
    }
    if (v14459) {
      var v8207 = this.viz.graph;
      var v31423 = JAM.call(v8207.getNode, v8207, [label$$9.id], JAM.policy.p3);
      this.down = v31423;
    } else {
      if (!this.dom) {
        var v31424 = JAM.call(event$$13.getNode, event$$13, [], JAM.policy.p3);
        this.down = v31424;
      }
    }
    this.move = false;
    return;
  }
  function v153(e$$38, win$$26) {
    var label$$8;
    var v14462 = this.dom;
    if (v14462) {
      v14462 = label$$8 = JAM.call(this.isLabel, this, [e$$38, win$$26, true], JAM.policy.p3);
    }
    if (v14462) {
      var v8211 = this.viz.graph;
      var node$$16 = JAM.call(v8211.getNode, v8211, [label$$8.id], JAM.policy.p3);
      if (node$$16.selected) {
        return;
      }
      this.hoveredNode = node$$16;
      JAM.call(this.toggleStylesOnHover, this, [this.hoveredNode, true], JAM.policy.p3);
    }
    return;
  }
  function v152(e$$37, win$$25) {
    this.down = this.move = false;
    if (!this.hoveredNode) {
      return;
    }
    var v14465 = this.dom;
    if (v14465) {
      v14465 = JAM.call(this.isLabel, this, [e$$37, win$$25, true], JAM.policy.p3);
    }
    if (v14465) {
      JAM.call(this.toggleStylesOnHover, this, [this.hoveredNode, false], JAM.policy.p3);
    }
    var rt$$2 = e$$37.relatedTarget;
    var canvasWidget$$2 = this.canvas.element;
    var v14466 = rt$$2;
    if (v14466) {
      v14466 = rt$$2.parentNode;
    }
    var v8221 = v14466;
    for (;v8221;) {
      if (canvasWidget$$2 == rt$$2.parentNode) {
        return;
      }
      rt$$2 = rt$$2.parentNode;
      var v14468 = rt$$2;
      if (v14468) {
        v14468 = rt$$2.parentNode;
      }
      v8221 = v14468;
    }
    JAM.call(this.toggleStylesOnHover, this, [this.hoveredNode, false], JAM.policy.p3);
    this.hoveredNode = false;
    return;
  }
  function v151() {
    this.fx = this.viz.fx;
    this.types = this.viz.fx.nodeTypes;
    this.nStyles = this.config;
    this.nodeStylesOnHover = this.nStyles.stylesHover;
    this.nodeStylesOnClick = this.nStyles.stylesClick;
    this.hoveredNode = false;
    var v8227 = this.fx;
    var v31425 = JAM.new(Animation, [], JAM.policy.p3);
    v8227.nodeFxAnimation = v31425;
    this.down = false;
    this.move = false;
    return;
  }
  function v150(triggerCallback) {
    this.tip.style.display = "none";
    if (triggerCallback) {
      var v14471 = this.config;
      JAM.call(v14471.onHide, v14471, [], JAM.policy.p3);
    }
    return;
  }
  function v149(pos$$8) {
    var tip$$1 = this.tip;
    var style$$2 = tip$$1.style;
    var cont = this.config;
    style$$2.display = "";
    var v19205 = document.compatMode === "CSS1Compat";
    if (v19205) {
      v19205 = document.documentElement;
    }
    var v14472 = v19205;
    if (!v14472) {
      v14472 = document.body;
    }
    var v8229 = v14472;
    if (!v8229) {
      v8229 = document.documentElement;
    }
    var elem$$15 = v8229;
    var JSCompiler_object_inline_width_82 = elem$$15.clientWidth;
    var JSCompiler_object_inline_height_83 = elem$$15.clientHeight;
    var v19207 = window.pageXOffset;
    if (!v19207) {
      var v22546 = document.documentElement;
      if (v22546) {
        v22546 = document.documentElement.scrollLeft;
      }
      v19207 = v22546;
    }
    var v14474 = v19207;
    if (!v14474) {
      var v19208 = document.body;
      if (v19208) {
        v19208 = document.body.scrollLeft;
      }
      v14474 = v19208;
    }
    var v8230 = v14474;
    if (!v8230) {
      v8230 = 0;
    }
    var JSCompiler_object_inline_x_84 = v8230;
    var v19210 = window.pageYOffset;
    if (!v19210) {
      var v22549 = document.documentElement;
      if (v22549) {
        v22549 = document.documentElement.scrollTop;
      }
      v19210 = v22549;
    }
    var v14476 = v19210;
    if (!v14476) {
      var v19211 = document.body;
      if (v19211) {
        v19211 = document.body.scrollTop;
      }
      v14476 = v19211;
    }
    var v8231 = v14476;
    if (!v8231) {
      v8231 = 0;
    }
    var JSCompiler_object_inline_y_85 = v8231;
    var JSCompiler_object_inline_width_86 = tip$$1.offsetWidth;
    var JSCompiler_object_inline_height_87 = tip$$1.offsetHeight;
    var x$$50 = cont.offsetX;
    var y$$31 = cont.offsetY;
    var v14478;
    if (pos$$8.y + JSCompiler_object_inline_height_87 + y$$31 > JSCompiler_object_inline_height_83 + JSCompiler_object_inline_y_85) {
      v14478 = pos$$8.y - JSCompiler_object_inline_height_87 - y$$31;
    } else {
      v14478 = pos$$8.y + y$$31;
    }
    style$$2.top = v14478 + "px";
    var v14479;
    if (pos$$8.x + JSCompiler_object_inline_width_86 + x$$50 > JSCompiler_object_inline_width_82 + JSCompiler_object_inline_x_84) {
      v14479 = pos$$8.x - JSCompiler_object_inline_width_86 - x$$50;
    } else {
      v14479 = pos$$8.x + x$$50;
    }
    style$$2.left = v14479 + "px";
    return;
  }
  function v148(e$$36, win$$24, opt$$5) {
    var v14480 = this.dom;
    if (v14480) {
      v14480 = JAM.call(this.isLabel, this, [e$$36, win$$24], JAM.policy.p3);
    }
    if (v14480) {
      var v14481 = $$$1.event;
      JAM.call(this.setTooltipPosition, this, [JAM.call(v14481.getPos, v14481, [e$$36, win$$24], JAM.policy.p3)], JAM.policy.p3);
    }
    if (!this.dom) {
      var node$$15 = JAM.call(opt$$5.getNode, opt$$5, [], JAM.policy.p3);
      if (!node$$15) {
        JAM.call(this.hide, this, [true], JAM.policy.p3);
        return;
      }
      var v19219 = this.config.force;
      if (!v19219) {
        v19219 = !this.node;
      }
      var v14483 = v19219;
      if (!v14483) {
        v14483 = this.node.id != node$$15.id;
      }
      if (v14483) {
        this.node = node$$15;
        var v8237 = this.config;
        JAM.call(v8237.onShow, v8237, [this.tip, node$$15, JAM.call(opt$$5.getContains, opt$$5, [], JAM.policy.p3)], JAM.policy.p3);
      }
      var v14484 = $$$1.event;
      JAM.call(this.setTooltipPosition, this, [JAM.call(v14484.getPos, v14484, [e$$36, win$$24], JAM.policy.p3)], JAM.policy.p3);
    }
    return;
  }
  function v147(e$$35, win$$23) {
    var label$$7;
    var v14485 = this.dom;
    if (v14485) {
      v14485 = label$$7 = JAM.call(this.isLabel, this, [e$$35, win$$23, false], JAM.policy.p3);
    }
    if (v14485) {
      var v8243 = this.viz.graph;
      var v31426 = JAM.call(v8243.getNode, v8243, [label$$7.id], JAM.policy.p3);
      this.node = v31426;
      var v8245 = this.config;
      JAM.call(v8245.onShow, v8245, [this.tip, this.node, label$$7], JAM.policy.p3);
    }
    return;
  }
  function v146(e$$34, win$$22) {
    var v8249 = $$$1.event;
    var evt$$16 = JAM.call(v8249.get, v8249, [e$$34, win$$22], JAM.policy.p3);
    var v14487 = this.dom;
    if (v14487) {
      v14487 = JAM.call(this.isLabel, this, [e$$34, win$$22, true], JAM.policy.p3);
    }
    if (v14487) {
      JAM.call(this.hide, this, [true], JAM.policy.p3);
      return;
    }
    var rt$$1 = e$$34.relatedTarget;
    var canvasWidget$$1 = this.canvas.element;
    var v14488 = rt$$1;
    if (v14488) {
      v14488 = rt$$1.parentNode;
    }
    var v8253 = v14488;
    for (;v8253;) {
      if (canvasWidget$$1 == rt$$1.parentNode) {
        return;
      }
      rt$$1 = rt$$1.parentNode;
      var v14490 = rt$$1;
      if (v14490) {
        v14490 = rt$$1.parentNode;
      }
      v8253 = v14490;
    }
    JAM.call(this.hide, this, [false], JAM.policy.p3);
    return;
  }
  function v145() {
    if (document.body) {
      var v8254 = JAM.call($$$1, null, ["_tooltip"], JAM.policy.p3);
      if (!v8254) {
        v8254 = JAM.call(document.createElement, document, ["div"], JAM.policy.p3);
      }
      var tip = v8254;
      tip.id = "_tooltip";
      tip.className = "tip";
      JAM.call($$$1.extend, $$$1, [tip.style, {position:"absolute", display:"none", zIndex:13E3}], JAM.policy.p3);
      var v8257 = document.body;
      JAM.call(v8257.appendChild, v8257, [tip], JAM.policy.p3);
      this.tip = tip;
      this.node = false;
    }
    return;
  }
  function v144(e$$33, win$$21, event$$12) {
    var v8259 = $$$1.event;
    var evt$$15 = JAM.call(v8259.get, v8259, [e$$33, win$$21], JAM.policy.p3);
    if (this.touched) {
      if (this.touchMoved) {
        var v8260 = this.config;
        JAM.call(v8260.onTouchEnd, v8260, [this.touched, event$$12, evt$$15], JAM.policy.p3);
      } else {
        var v8262 = this.config;
        JAM.call(v8262.onTouchCancel, v8262, [this.touched, event$$12, evt$$15], JAM.policy.p3);
      }
      this.touched = this.touchMoved = false;
    }
    return;
  }
  function v143(e$$32, win$$20, event$$11) {
    var v8266 = $$$1.event;
    var evt$$14 = JAM.call(v8266.get, v8266, [e$$32, win$$20], JAM.policy.p3);
    if (this.touched) {
      this.touchMoved = true;
      var v8267 = this.config;
      JAM.call(v8267.onTouchMove, v8267, [this.touched, event$$11, evt$$14], JAM.policy.p3);
    }
    return;
  }
  function v142(e$$31, win$$19, event$$10) {
    var v8270 = $$$1.event;
    var evt$$13 = JAM.call(v8270.get, v8270, [e$$31, win$$19], JAM.policy.p3);
    var label$$6;
    var v14492 = this.dom;
    if (v14492) {
      v14492 = label$$6 = JAM.call(this.isLabel, this, [e$$31, win$$19], JAM.policy.p3);
    }
    if (v14492) {
      var v8271 = this.viz.graph;
      var v31427 = JAM.call(v8271.getNode, v8271, [label$$6.id], JAM.policy.p3);
      this.touched = v31427;
    } else {
      var v8273 = JAM.call(event$$10.getNode, event$$10, [], JAM.policy.p3);
      if (!v8273) {
        var v14494 = this.config.enableForEdges;
        if (v14494) {
          v14494 = JAM.call(event$$10.getEdge, event$$10, [], JAM.policy.p3);
        }
        v8273 = v14494;
      }
      this.touched = v8273;
    }
    var v8275 = this.touched;
    if (v8275) {
      var v14496 = this.config;
      JAM.call(v14496.onTouchStart, v14496, [this.touched, event$$10, evt$$13], JAM.policy.p3);
    }
    return;
  }
  function v141(e$$30, win$$18, event$$9) {
    var v8276 = $$$1.event;
    var evt$$12 = JAM.call(v8276.get, v8276, [e$$30, win$$18], JAM.policy.p3);
    var label$$5;
    if (this.dom) {
      if (label$$5 = JAM.call(this.isLabel, this, [e$$30, win$$18], JAM.policy.p3)) {
        var v8277 = this.viz.graph;
        var v31428 = JAM.call(v8277.getNode, v8277, [label$$5.id], JAM.policy.p3);
        this.pressed = v31428;
      }
    } else {
      var v8280 = JAM.call(event$$9.getNode, event$$9, [], JAM.policy.p3);
      if (!v8280) {
        var v14499 = this.config.enableForEdges;
        if (v14499) {
          v14499 = JAM.call(event$$9.getEdge, event$$9, [], JAM.policy.p3);
        }
        v8280 = v14499;
      }
      this.pressed = v8280;
    }
    var v8282 = this.pressed;
    if (v8282) {
      var v14501 = this.config;
      JAM.call(v14501.onDragStart, v14501, [this.pressed, event$$9, evt$$12], JAM.policy.p3);
    }
    return;
  }
  function v140(e$$29, win$$17, delta$$2) {
    var v8283 = this.config;
    var v14503 = $$$1.event;
    JAM.call(v8283.onMouseWheel, v8283, [delta$$2, JAM.call(v14503.get, v14503, [e$$29, win$$17], JAM.policy.p3)], JAM.policy.p3);
    return;
  }
  function v139(e$$28, win$$16, event$$8) {
    var label$$4;
    var v8285 = $$$1.event;
    var evt$$11 = JAM.call(v8285.get, v8285, [e$$28, win$$16], JAM.policy.p3);
    if (this.pressed) {
      this.moved = true;
      var v8286 = this.config;
      JAM.call(v8286.onDragMove, v8286, [this.pressed, event$$8, evt$$11], JAM.policy.p3);
      return;
    }
    if (this.dom) {
      var v8289 = this.config;
      JAM.call(v8289.onMouseMove, v8289, [this.hovered, event$$8, evt$$11], JAM.policy.p3);
    } else {
      if (this.hovered) {
        var hn = this.hovered;
        var v8291;
        if (hn.nodeFrom) {
          v8291 = this.etypes[JAM.call(hn.getData, hn, ["type"], JAM.policy.p3)];
        } else {
          v8291 = this.ntypes[JAM.call(hn.getData, hn, ["type"], JAM.policy.p3)];
        }
        var geom$$2 = v8291;
        var v14509 = geom$$2;
        if (v14509) {
          v14509 = geom$$2.contains;
        }
        var v8292 = v14509;
        if (v8292) {
          var v14510 = geom$$2.contains;
          v8292 = JAM.call(v14510.call, v14510, [this.fx, hn, JAM.call(event$$8.getPos, event$$8, [], JAM.policy.p3)], JAM.policy.p3);
        }
        var contains$$2 = v8292;
        if (contains$$2) {
          var v8293 = this.config;
          JAM.call(v8293.onMouseMove, v8293, [hn, event$$8, evt$$11], JAM.policy.p3);
          return;
        } else {
          var v8294 = this.config;
          JAM.call(v8294.onMouseLeave, v8294, [hn, event$$8, evt$$11], JAM.policy.p3);
          this.hovered = false;
        }
      }
      var v14513 = JAM.call(event$$8.getNode, event$$8, [], JAM.policy.p3);
      if (!v14513) {
        var v19225 = this.config.enableForEdges;
        if (v19225) {
          v19225 = JAM.call(event$$8.getEdge, event$$8, [], JAM.policy.p3);
        }
        v14513 = v19225;
      }
      if (this.hovered = v14513) {
        var v8296 = this.config;
        JAM.call(v8296.onMouseEnter, v8296, [this.hovered, event$$8, evt$$11], JAM.policy.p3);
      } else {
        var v8298 = this.config;
        JAM.call(v8298.onMouseMove, v8298, [false, event$$8, evt$$11], JAM.policy.p3);
      }
    }
    return;
  }
  function v138(e$$27, win$$15, event$$7) {
    var v8301 = $$$1.event;
    var evt$$10 = JAM.call(v8301.get, v8301, [e$$27, win$$15], JAM.policy.p3);
    var label$$3;
    var v14514 = this.dom;
    if (v14514) {
      v14514 = label$$3 = JAM.call(this.isLabel, this, [e$$27, win$$15, true], JAM.policy.p3);
    }
    if (v14514) {
      var v8302 = this.viz.graph;
      var v31429 = JAM.call(v8302.getNode, v8302, [label$$3.id], JAM.policy.p3);
      this.hovered = v31429;
      var v8304 = this.config;
      JAM.call(v8304.onMouseEnter, v8304, [this.hovered, event$$7, evt$$10], JAM.policy.p3);
    }
    return;
  }
  function v137(e$$26, win$$14, event$$6) {
    var v8307 = $$$1.event;
    var evt$$9 = JAM.call(v8307.get, v8307, [e$$26, win$$14], JAM.policy.p3);
    var label$$2;
    var v14516 = this.dom;
    if (v14516) {
      v14516 = label$$2 = JAM.call(this.isLabel, this, [e$$26, win$$14, true], JAM.policy.p3);
    }
    if (v14516) {
      var v8308 = this.config;
      var v14517 = this.viz.graph;
      JAM.call(v8308.onMouseLeave, v8308, [JAM.call(v14517.getNode, v14517, [label$$2.id], JAM.policy.p3), event$$6, evt$$9], JAM.policy.p3);
      this.hovered = false;
      return;
    }
    var rt = evt$$9.relatedTarget;
    var canvasWidget = this.canvas.element;
    var v14519 = rt;
    if (v14519) {
      v14519 = rt.parentNode;
    }
    var v8313 = v14519;
    for (;v8313;) {
      if (canvasWidget == rt.parentNode) {
        return;
      }
      rt = rt.parentNode;
      var v14521 = rt;
      if (v14521) {
        v14521 = rt.parentNode;
      }
      v8313 = v14521;
    }
    if (this.hovered) {
      var v8314 = this.config;
      JAM.call(v8314.onMouseLeave, v8314, [this.hovered, event$$6, evt$$9], JAM.policy.p3);
      this.hovered = false;
    }
    return;
  }
  function v136(e$$25, win$$13, event$$5, isRightClick) {
    var v8317 = $$$1.event;
    var evt$$8 = JAM.call(v8317.get, v8317, [e$$25, win$$13], JAM.policy.p3);
    if (!this.moved) {
      if (isRightClick) {
        var v8318 = this.config;
        JAM.call(v8318.onRightClick, v8318, [this.hovered, event$$5, evt$$8], JAM.policy.p3);
      } else {
        var v8320 = this.config;
        JAM.call(v8320.onClick, v8320, [this.pressed, event$$5, evt$$8], JAM.policy.p3);
      }
    }
    if (this.pressed) {
      if (this.moved) {
        var v8323 = this.config;
        JAM.call(v8323.onDragEnd, v8323, [this.pressed, event$$5, evt$$8], JAM.policy.p3);
      } else {
        var v8325 = this.config;
        JAM.call(v8325.onDragCancel, v8325, [this.pressed, event$$5, evt$$8], JAM.policy.p3);
      }
      this.pressed = this.moved = false;
    }
    return;
  }
  function v135() {
    this.fx = this.viz.fx;
    this.ntypes = this.viz.fx.nodeTypes;
    this.etypes = this.viz.fx.edgeTypes;
    this.hovered = false;
    this.pressed = false;
    this.touched = false;
    this.touchMoved = false;
    this.moved = false;
    return;
  }
  function v134() {
    function v133(k$$1) {
      var obj$$23 = JAM.new(Extras.Classes[k$$1], [k$$1, that$$5], JAM.policy.p3);
      if (JAM.call(obj$$23.isEnabled, obj$$23, [], JAM.policy.p3)) {
        JAM.call(mem.register, mem, [obj$$23], JAM.policy.p3);
      }
      if (JAM.call(obj$$23.setAsProperty, obj$$23, [], JAM.policy.p3)) {
        JAM.set(that$$5, JAM.call(k$$1.toLowerCase, k$$1, [], JAM.policy.p3), obj$$23, JAM.policy.p2);
      }
      return;
    }
    var mem = JAM.new(MouseEventsManager, [this], JAM.policy.p3);
    var that$$5 = this;
    JAM.call($$$1.each, $$$1, [["NodeStyles", "Tips", "Navigation", "Events"], v133], JAM.policy.p3);
    return;
  }
  function v132(e$$23, win$$12) {
    function v131() {
      if (this.getNodeCalled) {
        return this.contains;
      }
      JAM.call(this.getNode, this, [], JAM.policy.p3);
      return this.contains;
    }
    function v130() {
      if (this.getEdgeCalled) {
        return this.edge;
      }
      this.getEdgeCalled = true;
      var hashset = {};
      var id$$6;
      for (id$$6 in graph.edges) {
        var edgeFrom = graph.edges[id$$6];
        JAM.set(hashset, id$$6, true, JAM.policy.p2);
        var edgeId;
        for (edgeId in edgeFrom) {
          if (edgeId in hashset) {
            continue;
          }
          var e$$24 = edgeFrom[edgeId];
          var v8341 = e$$24;
          if (v8341) {
            v8341 = etypes[JAM.call(e$$24.getData, e$$24, ["type"], JAM.policy.p3)];
          }
          var geom$$1 = v8341;
          var v14528 = geom$$1;
          if (v14528) {
            v14528 = geom$$1.contains;
          }
          var v8342 = v14528;
          if (v8342) {
            var v14529 = geom$$1.contains;
            v8342 = JAM.call(v14529.call, v14529, [fx, e$$24, JAM.call(this.getPos, this, [], JAM.policy.p3)], JAM.policy.p3);
          }
          var contains$$1 = v8342;
          if (contains$$1) {
            this.contains = contains$$1;
            return that$$4.edge = this.edge = e$$24;
          }
        }
      }
      return that$$4.edge = this.edge = false;
    }
    function v129() {
      if (this.getNodeCalled) {
        return this.node;
      }
      this.getNodeCalled = true;
      var id$$5;
      for (id$$5 in graph.nodes) {
        var n$$2 = graph.nodes[id$$5];
        var v8346 = n$$2;
        if (v8346) {
          v8346 = ntypes[JAM.call(n$$2.getData, n$$2, ["type"], JAM.policy.p3)];
        }
        var geom = v8346;
        var v14533 = geom;
        if (v14533) {
          v14533 = geom.contains;
        }
        var v8347 = v14533;
        if (v8347) {
          var v14534 = geom.contains;
          v8347 = JAM.call(v14534.call, v14534, [fx, n$$2, JAM.call(this.getPos, this, [], JAM.policy.p3)], JAM.policy.p3);
        }
        var contains = v8347;
        if (contains) {
          this.contains = contains;
          return that$$4.node = this.node = n$$2;
        }
      }
      return that$$4.node = this.node = false;
    }
    function v128() {
      var canvas$$2 = that$$4.viz.canvas;
      var s$$2 = JAM.call(canvas$$2.getSize, canvas$$2, [], JAM.policy.p3);
      var p$$11 = JAM.call(canvas$$2.getPos, canvas$$2, [], JAM.policy.p3);
      var ox = canvas$$2.translateOffsetX;
      var oy$$1 = canvas$$2.translateOffsetY;
      var sx$$1 = canvas$$2.scaleOffsetX;
      var sy$$1 = canvas$$2.scaleOffsetY;
      var v8350 = $$$1.event;
      var pos$$7 = JAM.call(v8350.getPos, v8350, [e$$23, win$$12], JAM.policy.p3);
      this.pos = {x:(pos$$7.x - p$$11.x - ox) * 1 / sx$$1, y:(pos$$7.y - p$$11.y - oy$$1) * 1 / sy$$1};
      return this.pos;
    }
    var that$$4 = this;
    var graph = this.viz.graph;
    var fx = this.viz.fx;
    var ntypes = fx.nodeTypes;
    var etypes = fx.edgeTypes;
    return{pos:false, node:false, edge:false, contains:false, getNodeCalled:false, getEdgeCalled:false, getPos:v128, getNode:v129, getEdge:v130, getContains:v131};
  }
  function v127() {
    var v8355 = Array.prototype.slice;
    var args$$1 = JAM.call(v8355.call, v8355, [arguments], JAM.policy.p3);
    var type$$32 = JAM.call(args$$1.shift, args$$1, [], JAM.policy.p3);
    var i$$26 = 0;
    var regs = this.registeredObjects;
    var l$$8 = regs.length;
    var v8358 = i$$26 < l$$8;
    for (;v8358;) {
      var v8356 = regs[i$$26]["on" + type$$32];
      JAM.call(v8356.apply, v8356, [regs[i$$26], args$$1], JAM.policy.p3);
      i$$26 = i$$26 + 1;
      v8358 = i$$26 < l$$8;
    }
    return;
  }
  function v126(obj$$22) {
    var v8359 = this.registeredObjects;
    JAM.call(v8359.push, v8359, [obj$$22], JAM.policy.p3);
    return;
  }
  function v125() {
    function v124(e$$21, win$$10) {
      JAM.call(that$$3.handleEvent, that$$3, ["TouchEnd", e$$21, win$$10, JAM.call(that$$3.makeEventObject, that$$3, [e$$21, win$$10], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    function v123(e$$20, win$$9) {
      JAM.call(that$$3.handleEvent, that$$3, ["TouchMove", e$$20, win$$9, JAM.call(that$$3.makeEventObject, that$$3, [e$$20, win$$9], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    function v122(e$$19, win$$8) {
      JAM.call(that$$3.handleEvent, that$$3, ["TouchStart", e$$19, win$$8, JAM.call(that$$3.makeEventObject, that$$3, [e$$19, win$$8], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    function v121(e$$18, win$$7) {
      JAM.call(that$$3.handleEvent, that$$3, ["MouseOut", e$$18, win$$7, JAM.call(that$$3.makeEventObject, that$$3, [e$$18, win$$7], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    function v120(e$$17, win$$6) {
      JAM.call(that$$3.handleEvent, that$$3, ["MouseOver", e$$17, win$$6, JAM.call(that$$3.makeEventObject, that$$3, [e$$17, win$$6], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    function v119(e$$16, win$$5) {
      JAM.call(that$$3.handleEvent, that$$3, ["MouseMove", e$$16, win$$5, JAM.call(that$$3.makeEventObject, that$$3, [e$$16, win$$5], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    function v118(e$$15, win$$4) {
      var v8366 = $$$1.event;
      var event$$3 = JAM.call(v8366.get, v8366, [e$$15, win$$4], JAM.policy.p3);
      var v8367 = JAM.call(that$$3.makeEventObject, that$$3, [e$$15, win$$4], JAM.policy.p3);
      var v14541 = $$$1.event;
      JAM.call(that$$3.handleEvent, that$$3, ["MouseDown", e$$15, win$$4, v8367, JAM.call(v14541.isRightClick, v14541, [event$$3], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    function v117(e$$14, win$$3) {
      var v8369 = $$$1.event;
      var event$$2 = JAM.call(v8369.get, v8369, [e$$14, win$$3], JAM.policy.p3);
      var v8370 = JAM.call(that$$3.makeEventObject, that$$3, [e$$14, win$$3], JAM.policy.p3);
      var v14542 = $$$1.event;
      JAM.call(that$$3.handleEvent, that$$3, ["MouseUp", e$$14, win$$3, v8370, JAM.call(v14542.isRightClick, v14542, [event$$2], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    function handleMouseWheel(e$$22, win$$11) {
      var v8372 = $$$1.event;
      var event$$4 = JAM.call(v8372.get, v8372, [e$$22, win$$11], JAM.policy.p3);
      var v8373 = $$$1.event;
      var wheel = JAM.call(v8373.getWheel, v8373, [event$$4], JAM.policy.p3);
      JAM.call(that$$3.handleEvent, that$$3, ["MouseWheel", e$$22, win$$11, wheel], JAM.policy.p3);
      return;
    }
    var htmlCanvas = this.canvas.element;
    var that$$3 = this;
    var v8375 = htmlCanvas;
    var v31430 = JAM.call($$$1.lambda, $$$1, [false], JAM.policy.p3);
    JAM.set(v8375, "oncontextmenu", v31430);
    JAM.call($$$1.addEvents, $$$1, [htmlCanvas, {"mouseup":v117, "mousedown":v118, "mousemove":v119, "mouseover":v120, "mouseout":v121, "touchstart":v122, "touchmove":v123, "touchend":v124}], JAM.policy.p3);
    var v14543 = !document.getBoxObjectFor;
    if (v14543) {
      v14543 = window.mozInnerScreenX == null;
    }
    if (v14543) {
      JAM.call($$$1.addEvent, $$$1, [htmlCanvas, "mousewheel", handleMouseWheel], JAM.policy.p3);
    } else {
      JAM.call(htmlCanvas.addEventListener, htmlCanvas, ["DOMMouseScroll", handleMouseWheel, false], JAM.policy.p3);
    }
    return;
  }
  function v116(viz$$1) {
    this.viz = viz$$1;
    this.canvas = viz$$1.canvas;
    this.node = false;
    this.edge = false;
    this.registeredObjects = [];
    JAM.call(this.attachEvents, this, [], JAM.policy.p3);
    return;
  }
  function v115(elem$$14, par) {
    var v14544 = elem$$14;
    if (v14544) {
      v14544 = elem$$14.parentNode;
    }
    var v8379 = v14544;
    for (;v8379;) {
      if (elem$$14.parentNode == par) {
        return elem$$14;
      }
      elem$$14 = elem$$14.parentNode;
      var v14546 = elem$$14;
      if (v14546) {
        v14546 = elem$$14.parentNode;
      }
      v8379 = v14546;
    }
    return false;
  }
  function v114(e$$13, win$$2, group) {
    var v8380 = $$$1.event;
    e$$13 = JAM.call(v8380.get, v8380, [e$$13, win$$2], JAM.policy.p3);
    var labelContainer = this.labelContainer;
    var v8381 = e$$13.target;
    if (!v8381) {
      v8381 = e$$13.srcElement;
    }
    var target$$26 = v8381;
    var related = e$$13.relatedTarget;
    if (group) {
      var v19232 = related;
      if (v19232) {
        var v22565 = related;
        var v27890 = this.viz.canvas;
        v19232 = v22565 == JAM.call(v27890.getCtx, v27890, [], JAM.policy.p3).canvas;
      }
      var v14548 = v19232;
      if (v14548) {
        v14548 = !!target$$26;
      }
      var v8382 = v14548;
      if (v8382) {
        v8382 = JAM.call(this.isDescendantOf, this, [target$$26, labelContainer], JAM.policy.p3);
      }
      return v8382;
    } else {
      return JAM.call(this.isDescendantOf, this, [target$$26, labelContainer], JAM.policy.p3);
    }
    return;
  }
  function v113() {
    return this.config.enable;
  }
  function v112(className, viz) {
    this.viz = viz;
    this.canvas = viz.canvas;
    this.config = viz.config[className];
    this.nodeTypes = viz.fx.nodeTypes;
    var type$$31 = this.config.type;
    var v8387;
    if (type$$31 == "auto") {
      v8387 = viz.config.Label.type != "Native";
    } else {
      v8387 = type$$31 != "Native";
    }
    this.dom = v8387;
    var v8388 = this.dom;
    if (v8388) {
      var v14551 = viz.labels;
      v8388 = JAM.call(v14551.getLabelContainer, v14551, [], JAM.policy.p3);
    }
    this.labelContainer = v8388;
    var v8389 = JAM.call(this.isEnabled, this, [], JAM.policy.p3);
    if (v8389) {
      JAM.call(this.initializePost, this, [], JAM.policy.p3);
    }
    return;
  }
  function v111() {
    if (!this.timer) {
      return true;
    }
    if (this.opt.link == "cancel") {
      JAM.call(this.stopTimer, this, [], JAM.policy.p3);
      return true;
    }
    return false;
  }
  function v110() {
    if (!this.timer) {
      return false;
    }
    this.time = JAM.call($$$1.time, $$$1, [], JAM.policy.p3) - this.time;
    var v31431 = JAM.call(clearInterval, null, [this.timer], JAM.policy.p3);
    this.timer = v31431;
    return true;
  }
  function v109() {
    JAM.call(this.startTimer, this, [], JAM.policy.p3);
    return this;
  }
  function v108() {
    JAM.call(this.stopTimer, this, [], JAM.policy.p3);
    return this;
  }
  function v107() {
    function v106() {
      JAM.call(that$$2.step, that$$2, [], JAM.policy.p3);
      return;
    }
    var that$$2 = this;
    var fps = this.opt.fps;
    if (this.timer) {
      return false;
    }
    this.time = JAM.call($$$1.time, $$$1, [], JAM.policy.p3) - this.time;
    var v31432 = JAM.call(setInterval, null, [v106, JAM.call(Math.round, Math, [1E3 / fps], JAM.policy.p3)], JAM.policy.p3);
    this.timer = v31432;
    return true;
  }
  function v105() {
    if (!JAM.call(this.check, this, [], JAM.policy.p3)) {
      return this;
    }
    this.time = 0;
    JAM.call(this.startTimer, this, [], JAM.policy.p3);
    return this;
  }
  function v104() {
    var time = JAM.call($$$1.time, $$$1, [], JAM.policy.p3);
    var opt$$3 = this.opt;
    if (time < this.time + opt$$3.duration) {
      var delta$$1 = JAM.call(opt$$3.transition, opt$$3, [(time - this.time) / opt$$3.duration], JAM.policy.p3);
      JAM.call(opt$$3.compute, opt$$3, [delta$$1], JAM.policy.p3);
    } else {
      var v31433 = JAM.call(clearInterval, null, [this.timer], JAM.policy.p3);
      this.timer = v31433;
      JAM.call(opt$$3.compute, opt$$3, [1], JAM.policy.p3);
      JAM.call(opt$$3.complete, opt$$3, [], JAM.policy.p3);
    }
    return;
  }
  function v103(options$$3) {
    var opt$$2 = {duration:2500, fps:40, transition:Trans.Quart.easeInOut, compute:$$$1.empty, complete:$$$1.empty, link:"ignore"};
    var v31434 = JAM.call($$$1.merge, $$$1, [opt$$2, options$$3 || {}], JAM.policy.p3);
    this.opt = v31434;
    return this;
  }
  function v102(options$$2) {
    JAM.call(this.setOptions, this, [options$$2], JAM.policy.p3);
    return;
  }
  function v101() {
    function v100(elem$$13, i$$24) {
      function v99(p$$10) {
        return JAM.call(Math.pow, Math, [p$$10, [i$$24 + 2]], JAM.policy.p3);
      }
      var v31435 = JAM.call(makeTrans, null, [v99], JAM.policy.p3);
      JAM.set(Trans, elem$$13, v31435, JAM.policy.p2);
      return;
    }
    function v98(val, key$$23) {
      var v31436 = JAM.call(makeTrans, null, [val], JAM.policy.p3);
      JAM.set(Trans, key$$23, v31436, JAM.policy.p2);
      return;
    }
    function v97(p$$9, x$$49) {
      var v8410 = JAM.call(Math.pow, Math, [2, 10 * (p$$9 = p$$9 - 1)], JAM.policy.p3);
      var v22568 = 20 * p$$9 * Math.PI;
      var v26344 = x$$49[0];
      if (!v26344) {
        v26344 = 1;
      }
      return v8410 * JAM.call(Math.cos, Math, [v22568 * v26344 / 3], JAM.policy.p3);
    }
    function v96(p$$8) {
      var value$$33;
      var a = 0;
      var b = 1;
      for (;1;) {
        if (p$$8 >= (7 - 4 * a) / 11) {
          value$$33 = b * b - JAM.call(Math.pow, Math, [(11 - 6 * a - 11 * p$$8) / 4, 2], JAM.policy.p3);
          break;
        }
        a = a + b;
        b = b / 2;
      }
      return value$$33;
    }
    function v95(p$$7, x$$48) {
      var v8415 = x$$48[0];
      if (!v8415) {
        v8415 = 1.618;
      }
      x$$48 = v8415;
      return JAM.call(Math.pow, Math, [p$$7, 2], JAM.policy.p3) * ((x$$48 + 1) * p$$7 - x$$48);
    }
    function v94(p$$6) {
      return 1 - JAM.call(Math.sin, Math, [(1 - p$$6) * Math.PI / 2], JAM.policy.p3);
    }
    function v93(p$$5) {
      return 1 - JAM.call(Math.sin, Math, [JAM.call(Math.acos, Math, [p$$5], JAM.policy.p3)], JAM.policy.p3);
    }
    function v92(p$$4) {
      return JAM.call(Math.pow, Math, [2, 8 * (p$$4 - 1)], JAM.policy.p3);
    }
    function v91(p$$3, x$$47) {
      var v14571 = x$$47[0];
      if (!v14571) {
        v14571 = 6;
      }
      return JAM.call(Math.pow, Math, [p$$3, v14571], JAM.policy.p3);
    }
    function makeTrans(transition, params) {
      function v90(pos$$6) {
        var v8422;
        if (pos$$6 <= .5) {
          v8422 = JAM.call(transition, null, [2 * pos$$6, params], JAM.policy.p3) / 2;
        } else {
          v8422 = (2 - JAM.call(transition, null, [2 * (1 - pos$$6), params], JAM.policy.p3)) / 2;
        }
        return v8422;
      }
      function v89(pos$$5) {
        return 1 - JAM.call(transition, null, [1 - pos$$5, params], JAM.policy.p3);
      }
      function v88(pos$$4) {
        return JAM.call(transition, null, [pos$$4, params], JAM.policy.p3);
      }
      params = JAM.call($$$1.splat, $$$1, [params], JAM.policy.p3);
      return JAM.call($$$1.extend, $$$1, [transition, {easeIn:v88, easeOut:v89, easeInOut:v90}], JAM.policy.p3);
    }
    var transitions = {Pow:v91, Expo:v92, Circ:v93, Sine:v94, Back:v95, Bounce:v96, Elastic:v97};
    JAM.call($$$1.each, $$$1, [transitions, v98], JAM.policy.p3);
    JAM.call($$$1.each, $$$1, [["Quad", "Cubic", "Quart", "Quint"], v100], JAM.policy.p3);
    return;
  }
  function v87(p$$2) {
    return p$$2;
  }
  function v86(tree$$5, action$$1) {
    JAM.call(this.eachLevel, this, [tree$$5, 0, Number.MAX_VALUE, action$$1], JAM.policy.p3);
    return;
  }
  function v85(tree$$4, initLevel, toLevel, action) {
    if (initLevel <= toLevel) {
      JAM.call(action, null, [tree$$4, initLevel], JAM.policy.p3);
      if (!tree$$4.children) {
        return;
      }
      var i$$23 = 0;
      var ch$$4 = tree$$4.children;
      var v8430 = i$$23 < ch$$4.length;
      for (;v8430;) {
        JAM.call(this.eachLevel, this, [ch$$4[i$$23], initLevel + 1, toLevel, action], JAM.policy.p3);
        i$$23 = i$$23 + 1;
        v8430 = i$$23 < ch$$4.length;
      }
    }
    return;
  }
  function v84(tree$$3, id$$4) {
    if (tree$$3.id == id$$4) {
      return tree$$3;
    }
    var i$$22 = 0;
    var ch$$3 = tree$$3.children;
    var v14580 = ch$$3;
    if (v14580) {
      v14580 = i$$22 < ch$$3.length;
    }
    var v8435 = v14580;
    for (;v8435;) {
      var t = JAM.call(this.getSubtree, this, [ch$$3[i$$22], id$$4], JAM.policy.p3);
      if (t != null) {
        return t;
      }
      i$$22 = i$$22 + 1;
      var v14581 = ch$$3;
      if (v14581) {
        v14581 = i$$22 < ch$$3.length;
      }
      v8435 = v14581;
    }
    return null;
  }
  function v83(tree$$2, id$$3) {
    if (tree$$2.id == id$$3) {
      return false;
    }
    var ch$$2 = tree$$2.children;
    var v14583 = ch$$2;
    if (v14583) {
      v14583 = ch$$2.length > 0;
    }
    if (v14583) {
      var i$$21 = 0;
      var v8439 = i$$21 < ch$$2.length;
      for (;v8439;) {
        if (ch$$2[i$$21].id == id$$3) {
          return tree$$2;
        } else {
          var ans$$2 = JAM.call(this.getParent, this, [ch$$2[i$$21], id$$3], JAM.policy.p3);
          if (ans$$2) {
            return ans$$2;
          }
        }
        i$$21 = i$$21 + 1;
        v8439 = i$$21 < ch$$2.length;
      }
    }
    return false;
  }
  function v82(tree$$1, maxLevel) {
    function v81(elem$$12, i$$20) {
      var v14587 = i$$20 == maxLevel;
      if (v14587) {
        v14587 = elem$$12.children;
      }
      if (v14587) {
        delete elem$$12.children;
        elem$$12.children = [];
      }
      return;
    }
    JAM.call(this.each, this, [tree$$1, v81], JAM.policy.p3);
    return;
  }
  function v80() {
    function v79(properties$$2) {
      JAM.call(Class.inherit, Class, [proto$$1, properties$$2], JAM.policy.p3);
      return;
    }
    var proto$$1 = this.prototype;
    var v14588 = Array.prototype.slice;
    JAM.call($$$1.each, $$$1, [JAM.call(v14588.call, v14588, [arguments || []], JAM.policy.p3), v79], JAM.policy.p3);
    return this;
  }
  function v78(object$$3, name$$35, method$$1) {
    function override$$1() {
      var previous$$2 = this.parent;
      var v8443;
      if (parent$$1) {
        v8443 = parent$$1[name$$35];
      } else {
        v8443 = object$$3[name$$35];
      }
      this.parent = v8443;
      var value$$32 = JAM.call(method$$1.apply, method$$1, [this, arguments], JAM.policy.p3);
      this.parent = previous$$2;
      return value$$32;
    }
    var parent$$1 = Class.prototyping;
    var v14590 = parent$$1;
    if (v14590) {
      v14590 = object$$3[name$$35] != parent$$1[name$$35];
    }
    if (v14590) {
      parent$$1 = null;
    }
    JAM.set(object$$3, name$$35, override$$1, JAM.policy.p2);
    return;
  }
  function v77(object$$2, properties$$1) {
    var key$$22;
    for (key$$22 in properties$$1) {
      var override = properties$$1[key$$22];
      var previous$$1 = object$$2[key$$22];
      var type$$30 = JAM.call($$$1.type, $$$1, [override], JAM.policy.p3);
      var v14591 = previous$$1;
      if (v14591) {
        v14591 = type$$30 == "function";
      }
      if (v14591) {
        if (override != previous$$1) {
          JAM.call(Class.override, Class, [object$$2, key$$22, override], JAM.policy.p3);
        }
      } else {
        if (type$$30 == "object") {
          var v8446 = object$$2;
          var v8447 = key$$22;
          var v31437 = JAM.call($$$1.merge, $$$1, [previous$$1, override], JAM.policy.p3);
          JAM.set(v8446, v8447, v31437, JAM.policy.p2);
        } else {
          JAM.set(object$$2, key$$22, override, JAM.policy.p2);
        }
      }
    }
    return object$$2;
  }
  function v76(self$$1, klasses) {
    function v75(klass$$4) {
      Class.prototyping = klass$$4;
      var v8450;
      if (typeof klass$$4 == "function") {
        v8450 = JAM.new(klass$$4, [], JAM.policy.p3);
      } else {
        v8450 = klass$$4;
      }
      var instance$$1 = v8450;
      var prop$$4;
      for (prop$$4 in instance$$1) {
        if (!(prop$$4 in self$$1)) {
          JAM.set(self$$1, prop$$4, instance$$1[prop$$4], JAM.policy.p2);
        }
      }
      delete Class.prototyping;
      return;
    }
    JAM.call($$$1.each, $$$1, [JAM.call($$$1.splat, $$$1, [klasses], JAM.policy.p3), v75], JAM.policy.p3);
    return self$$1;
  }
  function v74(e$$12) {
    if (e$$12.stopPropagation) {
      JAM.call(e$$12.stopPropagation, e$$12, [], JAM.policy.p3);
    }
    e$$12.cancelBubble = true;
    if (e$$12.preventDefault) {
      JAM.call(e$$12.preventDefault, e$$12, [], JAM.policy.p3);
    } else {
      e$$12.returnValue = false;
    }
    return;
  }
  function v73(e$$11, win$$1) {
    win$$1 = win$$1 || window;
    var v8455 = e$$11;
    if (!v8455) {
      v8455 = win$$1.event;
    }
    e$$11 = v8455;
    var doc = win$$1.document;
    var v8456 = doc.documentElement;
    if (!v8456) {
      v8456 = doc.body;
    }
    doc = v8456;
    var v14596 = e$$11.touches;
    if (v14596) {
      v14596 = e$$11.touches.length;
    }
    if (v14596) {
      e$$11 = e$$11.touches[0];
    }
    var v14597 = e$$11.pageX;
    if (!v14597) {
      v14597 = e$$11.clientX + doc.scrollLeft;
    }
    var v8459 = v14597;
    var v14598 = e$$11.pageY;
    if (!v14598) {
      v14598 = e$$11.clientY + doc.scrollTop;
    }
    var page = {x:v8459, y:v14598};
    return page;
  }
  function v72(e$$10) {
    var v8461 = e$$10.which == 3;
    if (!v8461) {
      v8461 = e$$10.button == 2;
    }
    return v8461;
  }
  function v71(e$$9) {
    var v8462;
    if (e$$9.wheelDelta) {
      v8462 = e$$9.wheelDelta / 120;
    } else {
      var v22576 = e$$9.detail;
      if (!v22576) {
        v22576 = 0;
      }
      v8462 = -v22576 / 3;
    }
    return v8462;
  }
  function v70(e$$8, win) {
    win = win || window;
    var v8463 = e$$8;
    if (!v8463) {
      v8463 = win.event;
    }
    return v8463;
  }
  function v69(elem$$9) {
    function getOffsets(elem$$10) {
      var position = {x:0, y:0};
      var v14606 = elem$$10;
      if (v14606) {
        v14606 = !JAM.call(/^(?:body|html)$/i.test, /^(?:body|html)$/i, [elem$$10.tagName], JAM.policy.p3);
      }
      var v8464 = v14606;
      for (;v8464;) {
        position.x = position.x + elem$$10.offsetLeft;
        position.y = position.y + elem$$10.offsetTop;
        elem$$10 = elem$$10.offsetParent;
        var v14611 = elem$$10;
        if (v14611) {
          v14611 = !JAM.call(/^(?:body|html)$/i.test, /^(?:body|html)$/i, [elem$$10.tagName], JAM.policy.p3);
        }
        v8464 = v14611;
      }
      return position;
    }
    function getScrolls(elem$$11) {
      var position$$1 = {x:0, y:0};
      var v14612 = elem$$11;
      if (v14612) {
        v14612 = !JAM.call(/^(?:body|html)$/i.test, /^(?:body|html)$/i, [elem$$11.tagName], JAM.policy.p3);
      }
      var v8465 = v14612;
      for (;v8465;) {
        position$$1.x = position$$1.x + elem$$11.scrollLeft;
        position$$1.y = position$$1.y + elem$$11.scrollTop;
        elem$$11 = elem$$11.parentNode;
        var v14617 = elem$$11;
        if (v14617) {
          v14617 = !JAM.call(/^(?:body|html)$/i.test, /^(?:body|html)$/i, [elem$$11.tagName], JAM.policy.p3);
        }
        v8465 = v14617;
      }
      return position$$1;
    }
    var offset$$8 = JAM.call(getOffsets, null, [elem$$9], JAM.policy.p3);
    var scroll$$1 = JAM.call(getScrolls, null, [elem$$9], JAM.policy.p3);
    return{x:offset$$8.x - scroll$$1.x, y:offset$$8.y - scroll$$1.y};
  }
  function v68(obj$$21, klass$$2) {
    var v8468 = obj$$21;
    var v14622 = obj$$21.className;
    var v31438 = JAM.call(v14622.replace, v14622, [JAM.new(RegExp, ["(^|\\s)" + klass$$2 + "(?:\\s|$)"], JAM.policy.p3), "$1"], JAM.policy.p3);
    v8468.className = v31438;
    return;
  }
  function v67(obj$$20, klass$$1) {
    if (!JAM.call($$$1.hasClass, $$$1, [obj$$20, klass$$1], JAM.policy.p3)) {
      obj$$20.className = obj$$20.className + " " + klass$$1;
    }
    return;
  }
  function v66(obj$$19, klass) {
    var v14626 = " " + obj$$19.className + " ";
    return JAM.call(v14626.indexOf, v14626, [" " + klass + " "], JAM.policy.p3) > -1;
  }
  function v65(obj$$18, typeObj) {
    var type$$29;
    for (type$$29 in typeObj) {
      JAM.call($$$1.addEvent, $$$1, [obj$$18, type$$29, typeObj[type$$29]], JAM.policy.p3);
    }
    return;
  }
  function v64(obj$$17, type$$28, fn$$1) {
    if (obj$$17.addEventListener) {
      JAM.call(obj$$17.addEventListener, obj$$17, [type$$28, fn$$1, false], JAM.policy.p3);
    } else {
      JAM.call(obj$$17.attachEvent, obj$$17, ["on" + type$$28, fn$$1], JAM.policy.p3);
    }
    return;
  }
  function v63(elem$$8) {
    var ch$$1 = elem$$8.childNodes;
    var i$$19 = 0;
    var l$$6 = ch$$1.length;
    var v8476 = i$$19 < l$$6;
    for (;v8476;) {
      JAM.call($$$1.destroy, $$$1, [ch$$1[i$$19]], JAM.policy.p3);
      i$$19 = i$$19 + 1;
      v8476 = i$$19 < l$$6;
    }
    return;
  }
  function v62(elem$$7) {
    JAM.call($$$1.clean, $$$1, [elem$$7], JAM.policy.p3);
    if (elem$$7.parentNode) {
      var v8477 = elem$$7.parentNode;
      JAM.call(v8477.removeChild, v8477, [elem$$7], JAM.policy.p3);
    }
    if (elem$$7.clearAttributes) {
      JAM.call(elem$$7.clearAttributes, elem$$7, [], JAM.policy.p3);
    }
    return;
  }
  function v61(hex$$1) {
    if (hex$$1.length != 7) {
      hex$$1 = JAM.call(hex$$1.match, hex$$1, [/^#?(\w{1,2})(\w{1,2})(\w{1,2})$/], JAM.policy.p3);
      JAM.call(hex$$1.shift, hex$$1, [], JAM.policy.p3);
      if (hex$$1.length != 3) {
        return null;
      }
      var rgb = [];
      var i$$18 = 0;
      var v8483 = i$$18 < 3;
      for (;v8483;) {
        var value$$31 = hex$$1[i$$18];
        if (value$$31.length == 1) {
          value$$31 = value$$31 + value$$31;
        }
        JAM.call(rgb.push, rgb, [JAM.call(parseInt, null, [value$$31, 16], JAM.policy.p3)], JAM.policy.p3);
        i$$18 = i$$18 + 1;
        v8483 = i$$18 < 3;
      }
      return rgb;
    } else {
      hex$$1 = JAM.call(parseInt, null, [JAM.call(hex$$1.slice, hex$$1, [1], JAM.policy.p3), 16], JAM.policy.p3);
      return[hex$$1 >> 16, hex$$1 >> 8 & 255, hex$$1 & 255];
    }
    return;
  }
  function v60(srcArray, array$$12) {
    if (srcArray.length < 3) {
      return null;
    }
    var v19271 = srcArray.length == 4;
    if (v19271) {
      v19271 = srcArray[3] == 0;
    }
    var v14633 = v19271;
    if (v14633) {
      v14633 = !array$$12;
    }
    if (v14633) {
      return "transparent";
    }
    var hex = [];
    var i$$17 = 0;
    var v8493 = i$$17 < 3;
    for (;v8493;) {
      var v8491 = srcArray[i$$17] - 0;
      var bit = JAM.call(v8491.toString, v8491, [16], JAM.policy.p3);
      var v14635;
      if (bit.length == 1) {
        v14635 = "0" + bit;
      } else {
        v14635 = bit;
      }
      JAM.call(hex.push, hex, [v14635], JAM.policy.p3);
      i$$17 = i$$17 + 1;
      v8493 = i$$17 < 3;
    }
    var v8494;
    if (array$$12) {
      v8494 = hex;
    } else {
      v8494 = "#" + JAM.call(hex.join, hex, [""], JAM.policy.p3);
    }
    return v8494;
  }
  function v59() {
    if (arguments.length === 0) {
      return[];
    }
    var j$$2 = 0;
    var ans$$1 = [];
    var l$$5 = arguments.length;
    var ml = arguments[0].length;
    var v8499 = j$$2 < ml;
    for (;v8499;) {
      var i$$16 = 0;
      var row = [];
      var v8498 = i$$16 < l$$5;
      for (;v8498;) {
        JAM.call(row.push, row, [arguments[i$$16][j$$2]], JAM.policy.p3);
        i$$16 = i$$16 + 1;
        v8498 = i$$16 < l$$5;
      }
      JAM.call(ans$$1.push, ans$$1, [row], JAM.policy.p3);
      j$$2 = j$$2 + 1;
      v8499 = j$$2 < ml;
    }
    return ans$$1;
  }
  function v58(object$$1) {
    var unlinked;
    switch(JAM.call($$$1.type, $$$1, [object$$1], JAM.policy.p3)) {
      case "object":
        unlinked = {};
        var p$$1;
        for (p$$1 in object$$1) {
          var v8500 = unlinked;
          var v8501 = p$$1;
          var v31439 = JAM.call($$$1.unlink, $$$1, [object$$1[p$$1]], JAM.policy.p3);
          JAM.set(v8500, v8501, v31439, JAM.policy.p2);
        }
        break;
      case "array":
        unlinked = [];
        var i$$15 = 0;
        var l$$4 = object$$1.length;
        var v8504 = i$$15 < l$$4;
        for (;v8504;) {
          var v8502 = unlinked;
          var v8503 = i$$15;
          var v31440 = JAM.call($$$1.unlink, $$$1, [object$$1[i$$15]], JAM.policy.p3);
          introspect(JAM.policy.p2) {
            v8502[v8503] = v31440;
          }
          i$$15 = i$$15 + 1;
          v8504 = i$$15 < l$$4;
        }
        break;
      default:
        return object$$1;
    }
    return unlinked;
  }
  function v57() {
    var mix = {};
    var i$$14 = 0;
    var l$$3 = arguments.length;
    var v8509 = i$$14 < l$$3;
    for (;v8509;) {
      var object = arguments[i$$14];
      if (JAM.call($$$1.type, $$$1, [object], JAM.policy.p3) != "object") {
        i$$14 = i$$14 + 1;
        v8509 = i$$14 < l$$3;
        continue;
      }
      var key$$20;
      for (key$$20 in object) {
        var op = object[key$$20];
        var mp = mix[key$$20];
        var v8507 = mix;
        var v8508 = key$$20;
        var v14642;
        var v26348 = mp;
        if (v26348) {
          v26348 = JAM.call($$$1.type, $$$1, [op], JAM.policy.p3) == "object";
        }
        var v22586 = v26348;
        if (v22586) {
          v22586 = JAM.call($$$1.type, $$$1, [mp], JAM.policy.p3) == "object";
        }
        if (v22586) {
          v14642 = JAM.call($$$1.merge, $$$1, [mp, op], JAM.policy.p3);
        } else {
          v14642 = JAM.call($$$1.unlink, $$$1, [op], JAM.policy.p3);
        }
        JAM.set(v8507, v8508, v14642, JAM.policy.p2);
      }
      i$$14 = i$$14 + 1;
      v8509 = i$$14 < l$$3;
    }
    return mix;
  }
  function v56(array$$11, f$$1, opt$$1) {
    var l$$2 = array$$11.length;
    if (l$$2 == 0) {
      return opt$$1;
    }
    var v8511;
    if (arguments.length == 3) {
      v8511 = opt$$1;
    } else {
      v8511 = array$$11[l$$2 = l$$2 - 1];
    }
    var acum = v8511;
    var v8513 = l$$2;
    l$$2 = l$$2 - 1;
    for (;v8513;) {
      acum = JAM.call(f$$1, null, [acum, array$$11[l$$2]], JAM.policy.p3);
      v8513 = l$$2;
      l$$2 = l$$2 - 1;
    }
    return acum;
  }
  function v55(array$$10, f) {
    function v54(elem$$6, i$$13) {
      JAM.call(ans.push, ans, [JAM.call(f, null, [elem$$6, i$$13], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    var ans = [];
    JAM.call($$$1.each, $$$1, [array$$10, v54], JAM.policy.p3);
    return ans;
  }
  function v53(array$$9, item) {
    if (Array.indexOf) {
      return JAM.call(array$$9.indexOf, array$$9, [item], JAM.policy.p3);
    }
    var i$$12 = 0;
    var l$$1 = array$$9.length;
    var v8517 = i$$12 < l$$1;
    for (;v8517;) {
      if (array$$9[i$$12] === item) {
        return i$$12;
      }
      i$$12 = i$$12 + 1;
      v8517 = i$$12 < l$$1;
    }
    return-1;
  }
  function v52(iterable, fn) {
    var type$$27 = JAM.call($$$1.type, $$$1, [iterable], JAM.policy.p3);
    if (type$$27 == "object") {
      var key$$19;
      for (key$$19 in iterable) {
        JAM.call(fn, null, [iterable[key$$19], key$$19], JAM.policy.p3);
      }
    } else {
      var i$$11 = 0;
      var l = iterable.length;
      var v8520 = i$$11 < l;
      for (;v8520;) {
        JAM.call(fn, null, [iterable[i$$11], i$$11], JAM.policy.p3);
        i$$11 = i$$11 + 1;
        v8520 = i$$11 < l;
      }
    }
    return;
  }
  function v51(elem$$5) {
    var v22587 = $$$1.type.s;
    var v19275 = JAM.call(v22587.call, v22587, [elem$$5], JAM.policy.p3);
    var v8522 = JAM.call(v19275.match, v19275, [/^\[object\s(.*)\]$/], JAM.policy.p3)[1];
    var type$$26 = JAM.call(v8522.toLowerCase, v8522, [], JAM.policy.p3);
    if (type$$26 != "object") {
      return type$$26;
    }
    var v14647 = elem$$5;
    if (v14647) {
      v14647 = elem$$5.$$family;
    }
    if (v14647) {
      return elem$$5.$$family;
    }
    var v8525;
    var v22588 = elem$$5;
    if (v22588) {
      v22588 = elem$$5.nodeName;
    }
    var v19276 = v22588;
    if (v19276) {
      v19276 = elem$$5.nodeType == 1;
    }
    if (v19276) {
      v8525 = "element";
    } else {
      v8525 = type$$26;
    }
    return v8525;
  }
  function v50(obj$$16) {
    var type$$25 = JAM.call($$$1.type, $$$1, [obj$$16], JAM.policy.p3);
    var v8526;
    if (type$$25) {
      var v14649;
      if (type$$25 != "array") {
        v14649 = [obj$$16];
      } else {
        v14649 = obj$$16;
      }
      v8526 = v14649;
    } else {
      v8526 = [];
    }
    return v8526;
  }
  function v49() {
    return+JAM.new(Date, [], JAM.policy.p3);
  }
  function v48(value$$30) {
    function v47() {
      return value$$30;
    }
    var v8528;
    if (typeof value$$30 == "function") {
      v8528 = value$$30;
    } else {
      v8528 = v47;
    }
    return v8528;
  }
  function v46(original, extended) {
    var key$$18;
    for (key$$18 in extended || {}) {
      JAM.set(original, key$$18, extended[key$$18], JAM.policy.p2);
    }
    return original;
  }
  function v45() {
    return;
  }
  function v44(w$$5) {
    w$$5 = w$$5 || window;
    var k;
    for (k in $jit) {
      if ($jit[k].$extend) {
        JAM.set(w$$5, k, $jit[k], JAM.policy.p2);
      }
    }
    return;
  }
  function Complex(x$$60, y$$41) {
    this.x = x$$60 || 0;
    this.y = y$$41 || 0;
    return;
  }
  function Polar(theta, rho$$1) {
    this.theta = theta || 0;
    this.rho = rho$$1 || 0;
    return;
  }
  function Options() {
    var args = arguments;
    var i$$25 = 0;
    var l$$7 = args.length;
    var ans$$3 = {};
    var v8534 = i$$25 < l$$7;
    for (;v8534;) {
      var opt$$4 = Options[args[i$$25]];
      if (opt$$4.$extend) {
        JAM.call($$$1.extend, $$$1, [ans$$3, opt$$4], JAM.policy.p3);
      } else {
        JAM.set(ans$$3, args[i$$25], opt$$4, JAM.policy.p2);
      }
      i$$25 = i$$25 + 1;
      v8534 = i$$25 < l$$7;
    }
    return ans$$3;
  }
  function Class(properties) {
    function klass$$3() {
      var key$$21;
      for (key$$21 in this) {
        if (typeof this[key$$21] != "function") {
          var v8535 = key$$21;
          var v31441 = JAM.call($$$1.unlink, $$$1, [this[key$$21]], JAM.policy.p3);
          JAM.set(this, v8535, v31441, JAM.policy.p2);
        }
      }
      this.constructor = klass$$3;
      if (Class.prototyping) {
        return this;
      }
      var v8538;
      if (this.initialize) {
        var v14654 = this.initialize;
        v8538 = JAM.call(v14654.apply, v14654, [this, arguments], JAM.policy.p3);
      } else {
        v8538 = this;
      }
      var instance = v8538;
      this.$$family = "class";
      return instance;
    }
    properties = properties || {};
    var mutator;
    for (mutator in Class.Mutators) {
      if (!properties[mutator]) {
        continue;
      }
      var v8540 = Class.Mutators;
      properties = JAM.call(v8540[mutator], v8540, [properties, properties[mutator]], JAM.policy.p3);
      delete properties[mutator];
    }
    JAM.call($$$1.extend, $$$1, [klass$$3, this], JAM.policy.p3);
    klass$$3.constructor = Class;
    klass$$3.prototype = properties;
    return klass$$3;
  }
  function $$$1(d) {
    return JAM.call(document.getElementById, document, [d], JAM.policy.p3);
  }
  this.$jit = v44;
  $jit.version = "2.0.1";
  $$$1.empty = v45;
  $$$1.extend = v46;
  $$$1.lambda = v48;
  var v8543 = Date.now;
  if (!v8543) {
    v8543 = v49;
  }
  $$$1.time = v8543;
  $$$1.splat = v50;
  $$$1.type = v51;
  $$$1.type.s = Object.prototype.toString;
  $$$1.each = v52;
  $$$1.indexOf = v53;
  $$$1.map = v55;
  $$$1.reduce = v56;
  $$$1.merge = v57;
  $$$1.unlink = v58;
  $$$1.zip = v59;
  $$$1.rgbToHex = v60;
  $$$1.hexToRgb = v61;
  $$$1.destroy = v62;
  $$$1.clean = v63;
  $$$1.addEvent = v64;
  $$$1.addEvents = v65;
  $$$1.hasClass = v66;
  $$$1.addClass = v67;
  $$$1.removeClass = v68;
  $$$1.getPos = v69;
  $$$1.event = {get:v70, getWheel:v71, isRightClick:v72, getPos:v73, stop:v74};
  $jit.util = $jit.id = $$$1;
  Class.Mutators = {Implements:v76};
  JAM.call($$$1.extend, $$$1, [Class, {inherit:v77, override:v78}], JAM.policy.p3);
  Class.prototype.implement = v80;
  $jit.Class = Class;
  $jit.json = {prune:v82, getParent:v83, getSubtree:v84, eachLevel:v85, each:v86};
  $jit.Trans = {$extend:true, linear:v87};
  var Trans = $jit.Trans;
  JAM.call(v101, null, [], JAM.policy.p3);
  var Animation = JAM.new(Class, [{initialize:v102, setOptions:v103, step:v104, start:v105, startTimer:v107, pause:v108, resume:v109, stopTimer:v110, check:v111}], JAM.policy.p3);
  Options.Canvas = {$extend:true, injectInto:"id", type:"2D", width:false, height:false, useCanvas:false, withLabels:true, background:false, Scene:{Lighting:{enable:false, ambient:[1, 1, 1], directional:{direction:{x:-100, y:-100, z:-100}, color:[.5, .3, .1]}}}};
  Options.Tree = {$extend:true, orientation:"left", subtreeOffset:8, siblingOffset:5, indent:10, multitree:false, align:"center"};
  Options.PhyloJive = {$extend:true, alignName:false, lateralise:false, collapsedXOffset:25, branchLength:true, levelDistance:40, branchMultiplier:1, initCharacter:false, firstCharacter:false, presentClade:$$$1.empty, onPresentClade:$$$1.empty, rangeCount:10, shapes:["box", "star", "square"], color:["BlueViolet", "Brown", "CadetBlue", "Coral", "CornflowerBlue", "Crimson", "DarkCyan", "DarkGoldenrod", "DarkGreen", "DarkKhaki", "DarkOlive Green", "DarkOrange", "DarkRed", "DarkSalmon", "DarkSlateBlue", 
  "DarkSlateGray", "DarkViolet", "DeepPink", "DimGray", "DodgerBlue"], typeEnum:{quant:0, quali:1}, quantColor:["#00FFFF", "#00DDFF", "#00BBFF", "#0099FF", "#0088FF", "#0077FF", "#0055FF", "#0044FF", "#0022FF", "#0000FF"], quantShape:"quant", selectedCharacters:[]};
  Options.Node = {$extend:false, overridable:false, type:"circle", color:"#ccb", alpha:1, dim:3, height:20, width:90, autoHeight:false, autoWidth:false, lineWidth:1, transform:true, align:"center", angularWidth:1, span:1, CanvasStyles:{}};
  Options.Edge = {$extend:false, overridable:false, type:"line", color:"#ccb", lineWidth:1, dim:15, alpha:1, epsilon:7, CanvasStyles:{}};
  Options.Fx = {$extend:true, fps:40, duration:2500, transition:$jit.Trans.Quart.easeInOut, clearCanvas:true};
  Options.Label = {$extend:false, overridable:false, type:"HTML", style:" ", size:10, family:"sans-serif", textAlign:"center", textBaseline:"alphabetic", color:"#fff"};
  Options.Tips = {$extend:false, enable:false, type:"auto", offsetX:20, offsetY:20, force:false, onShow:$$$1.empty, onHide:$$$1.empty};
  Options.NodeStyles = {$extend:false, enable:false, type:"auto", stylesHover:false, stylesClick:false};
  Options.Events = {$extend:false, enable:false, enableForEdges:false, type:"auto", onClick:$$$1.empty, onRightClick:$$$1.empty, onMouseMove:$$$1.empty, onMouseEnter:$$$1.empty, onMouseLeave:$$$1.empty, onDragStart:$$$1.empty, onDragMove:$$$1.empty, onDragCancel:$$$1.empty, onDragEnd:$$$1.empty, onTouchStart:$$$1.empty, onTouchMove:$$$1.empty, onTouchEnd:$$$1.empty, onMouseWheel:$$$1.empty};
  Options.Navigation = {$extend:false, enable:false, type:"auto", panning:false, zooming:false};
  Options.Controller = {$extend:true, onBeforeCompute:$$$1.empty, onAfterCompute:$$$1.empty, onCreateLabel:$$$1.empty, onPlaceLabel:$$$1.empty, onComplete:$$$1.empty, onBeforePlotLine:$$$1.empty, onAfterPlotLine:$$$1.empty, onBeforePlotNode:$$$1.empty, onAfterPlotNode:$$$1.empty, onBeforeRemoveNode:$$$1.empty, request:false};
  var ExtrasInitializer = {initialize:v112, initializePost:$$$1.empty, setAsProperty:JAM.call($$$1.lambda, $$$1, [false], JAM.policy.p3), isEnabled:v113, isLabel:v114, isDescendantOf:v115};
  var EventsInterface = {onMouseUp:$$$1.empty, onMouseDown:$$$1.empty, onMouseMove:$$$1.empty, onMouseOver:$$$1.empty, onMouseOut:$$$1.empty, onMouseWheel:$$$1.empty, onTouchStart:$$$1.empty, onTouchMove:$$$1.empty, onTouchEnd:$$$1.empty, onTouchCancel:$$$1.empty};
  var MouseEventsManager = JAM.new(Class, [{initialize:v116, attachEvents:v125, register:v126, handleEvent:v127, makeEventObject:v132}], JAM.policy.p3);
  var Extras = {initializeExtras:v134};
  Extras.Classes = {};
  var v8594 = Extras.Classes;
  var v31442 = JAM.new(Class, [{Implements:[ExtrasInitializer, EventsInterface], initializePost:v135, setAsProperty:JAM.call($$$1.lambda, $$$1, [true], JAM.policy.p3), onMouseUp:v136, onMouseOut:v137, onMouseOver:v138, onMouseMove:v139, onMouseWheel:v140, onMouseDown:v141, onTouchStart:v142, onTouchMove:v143, onTouchEnd:v144}], JAM.policy.p3);
  v8594.Events = v31442;
  var v8595 = Extras.Classes;
  var v31443 = JAM.new(Class, [{Implements:[ExtrasInitializer, EventsInterface], initializePost:v145, setAsProperty:JAM.call($$$1.lambda, $$$1, [true], JAM.policy.p3), onMouseOut:v146, onMouseOver:v147, onMouseMove:v148, setTooltipPosition:v149, hide:v150}], JAM.policy.p3);
  v8595.Tips = v31443;
  var v8596 = Extras.Classes;
  var v31444 = JAM.new(Class, [{Implements:[ExtrasInitializer, EventsInterface], initializePost:v151, onMouseOut:v152, onMouseOver:v153, onMouseDown:v154, onMouseUp:v155, getRestoredStyles:v156, toggleStylesOnHover:v157, toggleStylesOnClick:v158, toggleStylesOn:v159, onClick:v161, onMouseMove:v163}], JAM.policy.p3);
  v8596.NodeStyles = v31444;
  var v8597 = Extras.Classes;
  var v31445 = JAM.new(Class, [{Implements:[ExtrasInitializer, EventsInterface], initializePost:v164, onMouseWheel:v165, onMouseDown:v166, onMouseMove:v167, onMouseUp:v168}], JAM.policy.p3);
  v8597.Navigation = v31445;
  var Canvas;
  JAM.call(v200, null, [], JAM.policy.p3);
  $jit.Polar = Polar;
  Polar.prototype = {getc:v201, getp:v202, set:v203, setc:v204, setp:v205, clone:v206, toComplex:v207, add:v208, scale:v209, equals:v210, $add:v211, $madd:v212, $scale:v213, isZero:v214, interpolate:v215};
  var v8598 = Polar;
  var v31446 = JAM.new(Polar, [0, 0], JAM.policy.p3);
  v8598.KER = v31446;
  $jit.Complex = Complex;
  Complex.prototype = {getc:v216, getp:v217, set:v218, setc:v219, setp:v220, clone:v221, toPolar:v222, norm:v223, squaredNorm:v224, add:v225, prod:v226, conjugate:v227, scale:v228, equals:v229, $add:v230, $prod:v231, $conjugate:v232, $scale:v233, $div:v234, isZero:v235};
  var v8599 = Complex;
  var v31447 = JAM.new(Complex, [0, 0], JAM.policy.p3);
  v8599.KER = v31447;
  var v8600 = Complex;
  var v31448 = JAM.new(Complex, [0, 1], JAM.policy.p3);
  v8600.IM = v31448;
  var v8601 = $jit;
  var v31449 = JAM.new(Class, [{initialize:v239, getNode:v240, get:v241, getByName:v242, getAdjacence:v243, addNode:v244, addAdjacence:v245, removeNode:v246, removeAdjacence:v247, hasNode:v248, empty:v249}], JAM.policy.p3);
  v8601.Graph = v31449;
  var Graph = $jit.Graph;
  var Accessors;
  JAM.call(v263, null, [], JAM.policy.p3);
  var v8602 = Graph;
  var v31450 = JAM.new(Class, [{initialize:v264, adjacentTo:v265, getAdjacency:v266, getPos:v267, setPos:v268}], JAM.policy.p3);
  v8602.Node = v31450;
  var v8603 = Graph.Node;
  JAM.call(v8603.implement, v8603, [Accessors], JAM.policy.p3);
  var v8604 = Graph;
  var v31451 = JAM.new(Class, [{initialize:v269}], JAM.policy.p3);
  v8604.Adjacence = v31451;
  var v8605 = Graph.Adjacence;
  JAM.call(v8605.implement, v8605, [Accessors], JAM.policy.p3);
  Graph.Util = {filter:v272, getNode:v273, eachNode:v274, each:v275, eachAdjacency:v276, computeLevels:v279, eachBFS:v281, eachLevel:v283, eachSubgraph:v284, eachSubnode:v285, anySubnode:v288, getSubnodes:v290, getParents:v292, isDescendantOf:v293, clean:v295, getClosestNodeToOrigin:v296, getClosestNodeToPos:v298};
  JAM.call($$$1.each, $$$1, [["get", "getNode", "each", "eachNode", "computeLevels", "eachBFS", "clean", "getClosestNodeToPos", "getClosestNodeToOrigin"], v300], JAM.policy.p3);
  JAM.call($$$1.each, $$$1, [["eachAdjacency", "eachLevel", "eachSubgraph", "eachSubnode", "anySubnode", "getSubnodes", "getParents", "isDescendantOf"], v302], JAM.policy.p3);
  Graph.Op = {options:{type:"nothing", duration:2E3, hideLabels:true, fps:30}, initialize:v303, removeNode:v309, removeEdge:v315, sum:v321, morph:v335, contract:v338, expand:v340, preprocessSum:v344};
  var NodeHelper = {"none":{"render":$$$1.empty, "contains":JAM.call($$$1.lambda, $$$1, [false], JAM.policy.p3)}, "circle":{"render":v345, "contains":v346}, "ellipse":{"render":v347, "contains":v348}, "square":{"render":v349, "contains":v350}, "rectangle":{"render":v351, "contains":v352}, "triangle":{"render":v353, "contains":v354}, "star":{"render":v355, "contains":v356}};
  var EdgeHelper = {"line":{"render":v357, "contains":v358}, "arrow":{"render":v359, "contains":v360}, "hyperline":{"render":v361, "contains":JAM.call($$$1.lambda, $$$1, [false], JAM.policy.p3)}};
  Graph.Plot = {initialize:v362, nodeHelper:NodeHelper, edgeHelper:EdgeHelper, Interpolator:{"map":{"border":"color", "color":"color", "width":"number", "height":"number", "dim":"number", "alpha":"number", "lineWidth":"number", "angularWidth":"number", "span":"number", "valueArray":"array-number", "dimArray":"array-number", "vertices":"polygon"}, "canvas":{"globalAlpha":"number", "fillStyle":"color", "strokeStyle":"color", "lineWidth":"number", "shadowBlur":"number", "shadowColor":"color", "shadowOffsetX":"number", 
  "shadowOffsetY":"number", "miterLimit":"number"}, "label":{"size":"number", "color":"color"}, "compute":v363, "moebius":v364, "linear":v365, "polar":v366, "number":v367, "color":v368, "array-number":v369, "node":v370, "edge":v371, "node-property":v372, "edge-property":v373, "label-property":v374, "node-style":v375, "edge-style":v376, "polygon":v378}, sequence:v380, prepare:v385, animate:v389, nodeFx:v392, plot:v395, plotTree:v397, plotNode:v398, plotLine:v399};
  var v8620 = Graph;
  var v31452 = JAM.call($$$1.merge, $$$1, [Graph.Plot, {Interpolator:{"linear":v400}, plotNode:v402, plotLine:v404, plotElement:v405}], JAM.policy.p3);
  v8620.Plot3D = v31452;
  Graph.Label = {};
  var v8621 = Graph.Label;
  var v31453 = JAM.new(Class, [{initialize:v406, plotLabel:v407, renderLabel:v408, hideLabel:v410, hideLabels:$$$1.empty}], JAM.policy.p3);
  v8621.Native = v31453;
  var v8622 = Graph.Label;
  var v31454 = JAM.new(Class, [{labelsHidden:false, labelContainer:false, labels:{}, getLabelContainer:v411, getLabel:v412, hideLabels:v413, clearLabels:v414, disposeLabel:v415, hideLabel:v417, fitsInCanvas:v418}], JAM.policy.p3);
  v8622.DOM = v31454;
  var v8623 = Graph.Label;
  var v31455 = JAM.new(Class, [{Implements:Graph.Label.DOM, plotLabel:v419}], JAM.policy.p3);
  v8623.HTML = v31455;
  var v8624 = Graph.Label;
  var v31456 = JAM.new(Class, [{Implements:Graph.Label.DOM, plotLabel:v420}], JAM.policy.p3);
  v8624.SVG = v31456;
  var v8625 = Graph;
  var v31457 = JAM.new(Class, [{initialize:v421, translate:v424, setRightLevelToShow:v426, getRightLevelToShow:v427}], JAM.policy.p3);
  v8625.Geom = v31457;
  var Loader = {construct:v430, loadJSON:v431, toJSON:v435};
  var Layouts = $jit.Layouts = {};
  var NodeDim = {label:null, compute:v437, initializeLabel:v438, setLabelStyles:v439};
  var v8626 = Layouts;
  var v31458 = JAM.call(v449, null, [], JAM.policy.p3);
  v8626.PhyloJive = v31458;
  var v8627 = $jit;
  var v31459 = JAM.call(v539, null, [], JAM.policy.p3);
  v8627.Phylo = v31459;
  $jit.Phylo.$extend = true;
  var v8629 = $jit.Phylo;
  var v31460 = JAM.new(Class, [{Implements:Graph.Op}], JAM.policy.p3);
  v8629.Op = v31460;
  var v8630 = $jit.Phylo;
  var v31461 = JAM.new(Class, [{initialize:v540, requestNodes:v542, contract:v545, hide:v548, expand:v551, show:v555, prepare:v556, getNodesWithChildren:v558, plotStep:v561, getSiblings:v564}], JAM.policy.p3);
  v8630.Group = v31461;
  var v8631 = $jit.Phylo;
  var v31462 = JAM.new(Class, [{Implements:Graph.Geom, switchOrientation:v565, dispatch:v566, getSize:v567, getTreeBaseSize:v569, getEdge:v571, getScaledTreePosition:v573, treeFitsInCanvas:v575}], JAM.policy.p3);
  v8631.Geom = v31462;
  Graph.Util.eachAdjacency = v577;
  Graph.Plot.plotTree = v579;
  var v8634 = $jit.Phylo;
  var v31463 = JAM.new(Class, [{Implements:Graph.Plot, plotSubtree:v581, getAlignedPos:v582, getOrientation:v583}], JAM.policy.p3);
  v8634.Plot = v31463;
  $jit.Phylo.Label = {};
  var v8636 = $jit.Phylo.Label;
  var v31464 = JAM.new(Class, [{Implements:Graph.Label.Native, renderLabel:v584}], JAM.policy.p3);
  v8636.Native = v31464;
  var v8637 = $jit.Phylo.Label;
  var v31465 = JAM.new(Class, [{Implements:Graph.Label.DOM, placeLabel:v585}], JAM.policy.p3);
  v8637.DOM = v31465;
  var v8638 = $jit.Phylo.Label;
  var v31466 = JAM.new(Class, [{Implements:[$jit.Phylo.Label.DOM, Graph.Label.SVG], initialize:v586}], JAM.policy.p3);
  v8638.SVG = v31466;
  var v8639 = $jit.Phylo.Label;
  var v31467 = JAM.new(Class, [{Implements:[$jit.Phylo.Label.DOM, Graph.Label.HTML], initialize:v587}], JAM.policy.p3);
  v8639.HTML = v31467;
  var v8640 = $jit.Phylo.Plot;
  var v31468 = JAM.new(Class, [{"none":{"render":$$$1.empty, "contains":JAM.call($$$1.lambda, $$$1, [false], JAM.policy.p3)}, "circle":{"render":v588, "contains":v589}, "square":{"render":v590, "contains":v591}, "ellipse":{"render":v592, "contains":v593}, "rectangle":{"render":v594, "contains":v595}, "triangle":{"render":v596, "contains":v597}}], JAM.policy.p3);
  v8640.NodeTypes = v31468;
  var v8641 = $jit.Phylo.Plot;
  var v31469 = JAM.new(Class, [{"none":$$$1.empty, "line":{"render":v598, "contains":v599}, "arrow":{"render":v600, "contains":v601}, "quadratic:begin":{"render":v602}, "quadratic:end":{"render":v603}, "bezier":{"render":v604}, "rectangular":{"render":v605, "contains":v606}}], JAM.policy.p3);
  v8641.EdgeTypes = v31469;
  var v8642 = Extras.Classes.Navigation;
  JAM.call(v8642.implement, v8642, [{onMouseWheel:v607}], JAM.policy.p3);
  Graph.Util.computeLevels = v610;
  NodeHelper.triangle = {render:v611, contains:v612};
  var v8645 = window.CanvasRenderingContext2D;
  if (v8645) {
    v8645 = CanvasRenderingContext2D.prototype;
  }
  var CP = v8645;
  var v14698 = CP;
  if (v14698) {
    v14698 = CP.lineTo;
  }
  if (v14698) {
    CP.dashedLine = v613;
  }
  return;
}
function v43() {
  function v42() {
    return;
  }
  function v41(newickTree) {
    if (typeof newickTree === "undefined") {
      JAM.call(alert, null, ["tree is not defined."], JAM.policy.p3);
      return;
    }
    var json;
    var legendElem;
    JAM.call(Smits.NewickParse, Smits, [newickTree], JAM.policy.p3);
    var v8648 = JAM.call(Smits.getRoot, Smits, [], JAM.policy.p3);
    var v31470 = JAM.call(v8648.json, v8648, [], JAM.policy.p3);
    this.tree = v31470;
    JAM.call(st.loadJSON, st, [this.tree], JAM.policy.p3);
    JAM.call(st.compute, st, [], JAM.policy.p3);
    st.config.initCharacter = false;
    legendElem = JAM.call($jit.id, $jit, ["legend"], JAM.policy.p3);
    if (st.character) {
      var v8651 = JAM.call(st.colorCharacter, st, [], JAM.policy.p3);
      if (!v8651) {
        v8651 = "";
      }
      html = v8651;
      var v8652 = JAM.call(jQuery, null, ["#legendBody"], JAM.policy.p3);
      JAM.call(v8652.html, v8652, [html], JAM.policy.p3);
      legendElem.style.display = "inline";
      JAM.call(updateCharacter, null, [st.characterList], JAM.policy.p3);
    } else {
      legendElem.style.display = "none";
    }
    JAM.call(st.onClick, st, [st.root], JAM.policy.p3);
    JAM.call(st.fitScreen, st, [], JAM.policy.p3);
    return;
  }
  var tree;
  var character$$1;
  return{drawTree:v41, drawCharacter:v42};
}
function v40() {
  var rightContainer = JAM.call($jit.id, $jit, ["right-jitcontainer"], JAM.policy.p3);
  JAM.set(rightContainer, "innerHTML", rightContainer.innerHTML + '<div id="tabs"><ul><li><a href="#tabAction">Action</a></li><li><a href="#tabCharacter">Character</a></li><li><a href="#tabLegend">Legend</a></li><li><a href="#tabSearch">Search</a></li><li><a href="#tabInput">Input</a></li></ul>  <div id="tabCharacter"><h4>Select Character</h4><p><label>Select: </label><br/><label id="characterSelection">First Characters: <select id="firstCharacter" onChange="onSetCharacter ( )"> </select><br/>Second Chracter: <select id ="secondCharacter" onChange="onSetCharacter ( )"></select><br/>Third Chracter: <select id ="thirdCharacter" onChange="onSetCharacter ( )"></select></label></p></div><div id ="tabAction"><h4>Actions</h4><p><table><tr><td>Node Actions</td></tr><tr><td>Select</td><td><input id="selectClade" name="options" type="radio" checked /><tr><td>Expand / Collapse</td><td><div id="expandDiv"><input id = "expand" name="options" type="radio" /></div></td></tr><tr><td>Rotate</td><td><div id="rotateDiv"><input id = "rotate" name="options" type="radio" /></div></td></tr><tr><td>Set Root</td><td><input id = "setRoot" name="options" type = "radio" onclick = "onSetRoot ( this );"/></td></tr>\x3c!--<tr><td>Get Characters</td><td><input id = "character" name="options" type = "radio" onclick = "onGetCharacter ( this );"/></td></tr>--\x3e</table><br/><table><tr><td>Tree Actions</td></tr><tr><td>Align Names</td><td><div id="settings"><input id="alignName" type="checkbox"  onclick="onClickAlign ( this )"/></div></td></tr><tr><td>Ladderize</td><td><input id = "lateralise"  checked type = "checkbox" onclick = "onLateralise ( this );"/></td></tr><tr><td>Animate</td><td><input id="animate" type="checkbox" checked onClick = "onAnimate( this )"/></td></tr><tr><td>Branch Length</td><td><input id="branchLength" type="checkbox" checked onClick = "onBranchLength( this )"/></td></tr><tr><td>Length Multiplier</td><td><label><input id="branchMultiplier" name="multiply" type="radio" onClick = "onBranchMultiply( 0.1 )"/>x0.1</label> <label><input name="multiply" id="branchMultiplier" type="radio" onClick = "onBranchMultiply( 1 )"/>x1</label> <label><input id="branchMultiplier" name="multiply" type="radio" checked onClick = "onBranchMultiply( 5 )"/>x5</label></td></tr>\x3c!--<tr><td>Selected Nodes</td><td><div id="selected"></div></td></tr>--\x3e</table></p></div><div id="tabLegend"><h4>Legend</h4><p><table id ="legend"><tbody id = "legendBody"><tr><th>Legend:</th><td></td></tr></tbody></table></p></div><div id="tabSearch"><h4>Search</h4><p><table><tr><td>Search:</td><td><input id="searchString" type="text" size="15" /></td><tr><td></td><td><input class ="foswikiButton" type="submit" id="next" value="next"/><input type="submit" id="previous" class ="foswikiButton" value="previous"/></td></tr></table></p></div><div id="tabInput"><h4>Input Tree</h4><p><table><tr><td>Input Tree:</td><td><textarea id="newickTree" size="15"></textarea></td></tr><tr><td></td><td><input id="renderTree" type="submit" value="Render" onclick="onRender ( this )"/></td></tr></table></p></div></div>');
  var v8658 = JAM.call(jQuery, null, ["#tabs"], JAM.policy.p3);
  JAM.call(v8658.tabs, v8658, [], JAM.policy.p3);
  return;
}
function v39(character) {
  if (!character) {
    return;
  }
  var options$$1 = "";
  var unselected = "";
  var i$$2;
  var name$$30;
  var v8660 = st.config.selectedCharacters[0];
  if (!v8660) {
    v8660 = false;
  }
  var selectedfirst = v8660;
  var v8661 = st.config.selectedCharacters[0];
  if (!v8661) {
    v8661 = false;
  }
  var first$$1 = v8661;
  var v8662 = st.config.selectedCharacters[1];
  if (!v8662) {
    v8662 = false;
  }
  var second = v8662;
  var v8663 = st.config.selectedCharacters[2];
  if (!v8663) {
    v8663 = false;
  }
  var third = v8663;
  var select1 = "";
  var select2 = "";
  var select3 = "";
  i$$2 = 0;
  var v8668 = i$$2 < character.length;
  for (;v8668;) {
    var opt1 = "";
    var opt2 = "";
    var opt3 = "";
    var v14711 = first$$1 !== false;
    if (v14711) {
      v14711 = first$$1 === character[i$$2];
    }
    if (v14711) {
      opt1 = 'selected="selected"';
    }
    var v14712 = second !== false;
    if (v14712) {
      v14712 = second === character[i$$2];
    }
    if (v14712) {
      opt2 = 'selected="selected"';
    }
    var v14713 = third !== false;
    if (v14713) {
      v14713 = third === character[i$$2];
    }
    if (v14713) {
      opt3 = 'selected="selected"';
    }
    var v8667 = character[i$$2];
    name$$30 = JAM.call(v8667.replace, v8667, [/_/g, " "], JAM.policy.p3);
    select1 = select1 + ("<option " + opt1 + ' value="' + character[i$$2] + '" >' + name$$30 + "</option>");
    select2 = select2 + ("<option " + opt2 + ' value="' + character[i$$2] + '" >' + name$$30 + "</option>");
    select3 = select3 + ("<option " + opt3 + ' value="' + character[i$$2] + '" >' + name$$30 + "</option>");
    i$$2 = i$$2 + 1;
    v8668 = i$$2 < character.length;
  }
  if (select2) {
    select2 = '<option value=""> Please select </option>' + select2;
  }
  if (select3) {
    select3 = '<option value=""> Please select </option>' + select3;
  }
  var v8669 = JAM.call(jQuery, null, ["#firstCharacter"], JAM.policy.p3);
  JAM.call(v8669.html, v8669, [select1], JAM.policy.p3);
  var v8670 = JAM.call(jQuery, null, ["#secondCharacter"], JAM.policy.p3);
  JAM.call(v8670.html, v8670, [select2], JAM.policy.p3);
  var v8671 = JAM.call(jQuery, null, ["#thirdCharacter"], JAM.policy.p3);
  JAM.call(v8671.html, v8671, [select3], JAM.policy.p3);
  return;
}
function v38(opt) {
  function v37() {
    JAM.call(toggleScreen, null, [this], JAM.policy.p3);
    return;
  }
  function $E(tag, props$$1) {
    var elem$$1 = JAM.call(document.createElement, document, [tag], JAM.policy.p3);
    var p;
    for (p in props$$1) {
      if (typeof props$$1[p] == "object") {
        var v8672 = $jit.util;
        JAM.call(v8672.extend, v8672, [elem$$1[p], props$$1[p]], JAM.policy.p3);
      } else {
        JAM.set(elem$$1, p, props$$1[p], JAM.policy.p2);
      }
    }
    return elem$$1;
  }
  opt.codeBase = "";
  var popupHTML = '<div id="popup-close" style="position:relative; width:100%; background-color:lightblue"><a href="#" onclick="this.parentNode.parentNode.style.display=\'none\';" onmouseover="this.style.cursor=\'pointer\';" class="ui-dialog-titlebar-close ui-corner-all" role="button"><span class="ui-icon ui-icon-closethick">close</span></a></div><div id="popup-text"></div>';
  var navHTML = '<div style="position:relative"><div id="panup" style="position: absolute; left: 13px; top: 4px; width: 18px; height: 18px; cursor: pointer;"><img id="north" src="' + opt.codeBase + 'resources/north-mini.png" /></div><div id="panleft" style="position: absolute; left: 4px; top: 22px; width: 18px; height: 18px; cursor: pointer;"><img id="west" src="' + opt.codeBase + 'resources/west-mini.png" /></div><div id="panright" style="position: absolute; left: 22px; top: 22px; width: 18px; height: 18px; cursor: pointer;"><img id="east" src="' + 
  opt.codeBase + 'resources/east-mini.png" /></div><div id="pandown" style="position: absolute; left: 13px; top: 40px; width: 18px; height: 18px; cursor: pointer;"><img id="south" src="' + opt.codeBase + 'resources/south-mini.png" /></div><div id="zoomout" style="position: absolute; left: 13px; top: 99px; width: 18px; height: 18px; cursor: pointer;"><img id="zoomOUT" src="' + opt.codeBase + 'resources/zoom-minus-mini.png" /></div><div id="zoomworld" style="position: absolute; left: 13px; top: 81px; width: 18px; height: 18px; cursor: pointer;"><img id="world" style="position: relative; width: 18px; height: 18px;" src="' + 
  opt.codeBase + 'resources/zoom-world-mini.png"></div><div id="zoomin" style="position: absolute; left: 13px; top: 63px; width: 18px; height: 18px; cursor: pointer;"><img id="zoomIN" src="' + opt.codeBase + 'resources/zoom-plus-mini.png" /></div><div style="position:absolute;left:-50px;top:123px;width:130px"> Status: <span id="log"></span></div></div>';
  var jitcontainer;
  var rightJitContainer;
  var centerJitContainer;
  var v8677;
  if (typeof opt.injectInto == "string") {
    v8677 = opt.injectInto;
  } else {
    v8677 = opt.injectInto.id;
  }
  var id = v8677;
  var infovis;
  var parent;
  var popup;
  var navigation;
  var menu;
  var border$$2;
  border$$2 = opt.width * 100 / 90;
  jitcontainer = JAM.call($E, null, ["div", {"id":"jitcontainer", "className":"clearfix roundedCorner", "style":{"position":"relative", "width":border$$2 + "px", "height":opt.height + 55 + border$$2 / 20 + "px"}}], JAM.policy.p3);
  rightJitContainer = JAM.call($E, null, ["div", {"id":"right-jitcontainer", "className":"phylojivepadding", "style":{display:"none"}}], JAM.policy.p3);
  centerJitContainer = JAM.call($E, null, ["div", {"id":"center-jitcontainer", "className":"phylojivepadding"}], JAM.policy.p3);
  infovis = JAM.call(jQuery, null, ["#" + id], JAM.policy.p3)[0];
  parent = infovis.parentNode;
  JAM.call(parent.replaceChild, parent, [jitcontainer, infovis], JAM.policy.p3);
  JAM.call(centerJitContainer.appendChild, centerJitContainer, [infovis], JAM.policy.p3);
  JAM.call(jitcontainer.appendChild, jitcontainer, [centerJitContainer], JAM.policy.p3);
  JAM.call(jitcontainer.appendChild, jitcontainer, [rightJitContainer], JAM.policy.p3);
  popup = JAM.call($E, null, ["div", {"id":"popup", "className":"", "style":{"color":"black", "display":"none", "border":"1px solid green", "background-color":"#B5D397", "position":"absolute", "left":"50px", "top":"90px", "overflow":"auto", "text-align":"left"}}], JAM.policy.p3);
  var v8684 = JAM.call(jQuery, null, [popup], JAM.policy.p3);
  JAM.call(v8684.html, v8684, [popupHTML], JAM.policy.p3);
  JAM.call(centerJitContainer.appendChild, centerJitContainer, [popup], JAM.policy.p3);
  var v8685 = JAM.call(jQuery, null, [popup], JAM.policy.p3);
  JAM.call(v8685.resizable, v8685, [{maxHeight:450, maxWidth:350, minHeight:250, minWidth:170}], JAM.policy.p3);
  var v8687 = JAM.call(jQuery, null, [popup], JAM.policy.p3);
  JAM.call(v8687.draggable, v8687, [{handle:"#popup-close", containment:"#" + opt.injectInto}], JAM.policy.p3);
  navigation = JAM.call($E, null, ["div", {"id":"navigationPanel", "style":{"left":opt.width - 50 + "px"}}], JAM.policy.p3);
  var v8690 = JAM.call(jQuery, null, [navigation], JAM.policy.p3);
  JAM.call(v8690.html, v8690, [navHTML], JAM.policy.p3);
  JAM.call(jitcontainer.appendChild, jitcontainer, [navigation], JAM.policy.p3);
  menu = JAM.call($E, null, ["div", {"id":"jitmenubutton", "className":"menubutton"}], JAM.policy.p3);
  var v8692 = JAM.call(jQuery, null, [menu], JAM.policy.p3);
  JAM.call(v8692.click, v8692, [v37], JAM.policy.p3);
  JAM.call(jitcontainer.appendChild, jitcontainer, [menu], JAM.policy.p3);
  return;
}
function v36(text$$7) {
  if (!this.elem) {
    var v31471 = JAM.call(document.getElementById, document, ["log"], JAM.policy.p3);
    this.elem = v31471;
  }
  JAM.set(this.elem, "innerHTML", text$$7);
  return;
}
function v35() {
  var ua = navigator.userAgent;
  var v8695 = JAM.call(ua.match, ua, [/iPhone/i], JAM.policy.p3);
  if (!v8695) {
    v8695 = JAM.call(ua.match, ua, [/iPad/i], JAM.policy.p3);
  }
  var iStuff = v8695;
  var typeOfCanvas = typeof HTMLCanvasElement;
  var v8696 = typeOfCanvas === "object";
  if (!v8696) {
    v8696 = typeOfCanvas === "function";
  }
  var nativeCanvasSupport = v8696;
  var v8697 = nativeCanvasSupport;
  if (v8697) {
    var v26362 = JAM.call(document.createElement, document, ["canvas"], JAM.policy.p3);
    v8697 = typeof JAM.call(v26362.getContext, v26362, ["2d"], JAM.policy.p3).fillText === "function";
  }
  var textSupport = v8697;
  var v8698;
  var v19331 = !nativeCanvasSupport;
  if (!v19331) {
    var v22611 = textSupport;
    if (v22611) {
      v22611 = !iStuff;
    }
    v19331 = v22611;
  }
  if (v19331) {
    v8698 = "Native";
  } else {
    v8698 = "HTML";
  }
  labelType = v8698;
  nativeTextSupport = labelType === "Native";
  useGradients = nativeCanvasSupport;
  var v14735 = iStuff;
  if (!v14735) {
    v14735 = !nativeCanvasSupport;
  }
  animate = !v14735;
  return;
}
function smitsNode2JSON(node$$2) {
  var childJSON = [];
  var leaves = 0;
  var i$$3 = 0;
  var v8701 = i$$3 < node$$2.children.length;
  for (;v8701;) {
    var j = JAM.call(smitsNode2JSON, null, [node$$2.children[i$$3]], JAM.policy.p3);
    JAM.call(childJSON.push, childJSON, [j], JAM.policy.p3);
    leaves = leaves + j.data.leaf;
    leaves = leaves + j.data.leaves;
    i$$3 = i$$3 + 1;
    v8701 = i$$3 < node$$2.children.length;
  }
  var that$$1 = node$$2;
  var sampleid = "";
  if (childJSON.length !== 0) {
    return{"id":node$$2.id, "name":node$$2.name, "data":{"leaves":leaves, "leaf":0, "len":node$$2.len, "$type":"circle", "$dim":5, "$color":"#fff"}, "children":childJSON};
  } else {
    var v8705 = node$$2;
    var v14743 = node$$2.name;
    var v31472 = JAM.call(v14743.replace, v14743, [/_/g, " "], JAM.policy.p3);
    v8705.name = v31472;
    var v8706 = node$$2.name;
    var sampleArray = JAM.call(v8706.split, v8706, [" "], JAM.policy.p3);
    if (sampleArray.length > 1) {
      sampleid = sampleArray[1];
    }
    var name$$31 = sampleArray[0];
    var nodeJSON = {"id":node$$2.id, "name":node$$2.name, "data":{"leaves":0, "leaf":1, "len":node$$2.len, "$height":20, "$type":"none", "sampleid":sampleid, "name":name$$31}, "children":childJSON};
    return nodeJSON;
  }
  return;
}
function phylogenyExplorer_init(initial) {
  function v34(char$$5) {
    var chars = JAM.call(char$$5.split, char$$5, ["/"], JAM.policy.p3);
    var index$$42 = ["firstCharacter", "secondCharacter", "thirdCharacter"];
    var i$$10 = 0;
    var v8716 = i$$10 < chars.length;
    for (;v8716;) {
      var ch = JAM.call(unescape, null, [chars[i$$10]], JAM.policy.p3);
      var select$$1 = JAM.call(jQuery, null, ["#" + index$$42[i$$10]], JAM.policy.p3)[0];
      var j$$1 = 0;
      var v8715 = j$$1 < select$$1.options.length;
      for (;v8715;) {
        if (select$$1.options[j$$1].value === ch) {
          select$$1.selectedIndex = j$$1;
          break;
        }
        j$$1 = j$$1 + 1;
        v8715 = j$$1 < select$$1.options.length;
      }
      i$$10 = i$$10 + 1;
      v8716 = i$$10 < chars.length;
    }
    JAM.call(onSetCharacter, null, [], JAM.policy.p3);
    return;
  }
  function v33() {
    JAM.call(st.onClick, st, [st.root], JAM.policy.p3);
    JAM.call(st.fitScreen, st, [], JAM.policy.p3);
    return;
  }
  function v32() {
    var first$$inline_13;
    var second$$inline_14;
    var third$$inline_15;
    var value$$inline_16 = [];
    var v8718 = JAM.call(jQuery, null, ["#firstCharacter"], JAM.policy.p3);
    first$$inline_13 = JAM.call(v8718.val, v8718, [], JAM.policy.p3);
    var v8719 = JAM.call(jQuery, null, ["#secondCharacter"], JAM.policy.p3);
    second$$inline_14 = JAM.call(v8719.val, v8719, [], JAM.policy.p3);
    var v8720 = JAM.call(jQuery, null, ["#thirdCharacter"], JAM.policy.p3);
    third$$inline_15 = JAM.call(v8720.val, v8720, [], JAM.policy.p3);
    if (first$$inline_13) {
      JAM.call(value$$inline_16.push, value$$inline_16, [first$$inline_13], JAM.policy.p3);
    }
    if (second$$inline_14) {
      JAM.call(value$$inline_16.push, value$$inline_16, [second$$inline_14], JAM.policy.p3);
    }
    if (third$$inline_15) {
      JAM.call(value$$inline_16.push, value$$inline_16, [third$$inline_15], JAM.policy.p3);
    }
    st.config.firstCharacter = first$$inline_13 || "";
    st.config.selectedCharacters = value$$inline_16;
    var v8723;
    if (typeof first$$inline_13 === "undefined") {
      v8723 = "";
    } else {
      v8723 = first$$inline_13;
    }
    first$$inline_13 = v8723;
    var v8724;
    if (typeof second$$inline_14 === "undefined") {
      v8724 = "";
    } else {
      v8724 = second$$inline_14;
    }
    second$$inline_14 = v8724;
    var v8725;
    if (typeof third$$inline_15 === "undefined") {
      v8725 = "";
    } else {
      v8725 = third$$inline_15;
    }
    third$$inline_15 = v8725;
    JAM.call(app.navigate, app, ["character/" + first$$inline_13 + "/" + second$$inline_14 + "/" + third$$inline_15], JAM.policy.p3);
    var legendElem$$inline_18 = JAM.call($jit.id, $jit, ["legend"], JAM.policy.p3);
    var i$$inline_19;
    var node$$inline_20;
    var label$$inline_21;
    if (st.character) {
      var v8727 = JAM.call(st.colorCharacter, st, [], JAM.policy.p3);
      if (!v8727) {
        v8727 = "";
      }
      html$$1 = v8727;
      var v8728 = JAM.call(jQuery, null, ["#legendBody"], JAM.policy.p3);
      JAM.call(v8728.html, v8728, [html$$1], JAM.policy.p3);
      legendElem$$inline_18.style.display = "inline";
    } else {
      legendElem$$inline_18.style.display = "none";
    }
    for (i$$inline_19 in st.graph.nodes) {
      var v14758 = st.graph.nodes;
      if (JAM.call(v14758.hasOwnProperty, v14758, [i$$inline_19], JAM.policy.p3)) {
        node$$inline_20 = st.graph.nodes[i$$inline_19];
        label$$inline_21 = JAM.call(jQuery, null, ["#" + node$$inline_20.id], JAM.policy.p3)[0];
        if (label$$inline_21) {
          var v14761 = st.config;
          JAM.call(v14761.onCreateLabel, v14761, [label$$inline_21, node$$inline_20], JAM.policy.p3);
        }
      }
    }
    JAM.call(st.onClick, st, [st.root], JAM.policy.p3);
    JAM.call(st.fitScreen, st, [], JAM.policy.p3);
    return;
  }
  function v31(elem$$4) {
    var style$$1 = JAM.call(jQuery, null, ["#right-jitcontainer"], JAM.policy.p3)[0].style;
    var v8738;
    if (style$$1.display === "none") {
      v8738 = "";
    } else {
      v8738 = "none";
    }
    style$$1.display = v8738;
    if (style$$1.display) {
      var v8739 = JAM.call(jQuery, null, [elem$$4], JAM.policy.p3);
      JAM.call(v8739.removeClass, v8739, ["on"], JAM.policy.p3);
    } else {
      var v8740 = JAM.call(jQuery, null, [elem$$4], JAM.policy.p3);
      JAM.call(v8740.addClass, v8740, ["on"], JAM.policy.p3);
    }
    return;
  }
  function v30(value$$29) {
    st.config.branchMultiplier = value$$29;
    var v14764 = st.graph;
    JAM.call(st.computePositions, st, [JAM.call(v14764.getNode, v14764, [st.root], JAM.policy.p3), ""], JAM.policy.p3);
    JAM.call(st.plot, st, [], JAM.policy.p3);
    return;
  }
  function v29(checkbox) {
    st.config.branchLength = checkbox.checked;
    var v14766 = st.graph;
    JAM.call(st.computePositions, st, [JAM.call(v14766.getNode, v14766, [st.root], JAM.policy.p3), ""], JAM.policy.p3);
    JAM.call(st.plot, st, [], JAM.policy.p3);
    return;
  }
  function v28(char$$4) {
    return;
  }
  function v27(render) {
    var newickTree$$1 = JAM.call($jit.id, $jit, ["newickTree"], JAM.policy.p3).value;
    if (newickTree$$1) {
      var dataObject$$1 = JAM.new(Smits.PhyloCanvas.NewickParse, [newickTree$$1], JAM.policy.p3);
      var rootObject;
      var json$$2 = "";
      if (typeof dataObject$$1 === "object") {
        rootObject = JAM.call(dataObject$$1.getRoot, dataObject$$1, [], JAM.policy.p3);
        json$$2 = JAM.call(smitsNode2JSON, null, [rootObject], JAM.policy.p3);
        JAM.call(st.loadJSON, st, [json$$2], JAM.policy.p3);
      }
      JAM.call(st.compute, st, [], JAM.policy.p3);
      st.config.initCharacter = false;
      var legendElem$$3 = JAM.call($jit.id, $jit, ["legend"], JAM.policy.p3);
      if (st.character) {
        var v8750 = JAM.call(st.colorCharacter, st, [], JAM.policy.p3);
        if (!v8750) {
          v8750 = "";
        }
        html$$1 = v8750;
        var v8751 = JAM.call(jQuery, null, ["#legendBody"], JAM.policy.p3);
        JAM.call(v8751.html, v8751, [html$$1], JAM.policy.p3);
        legendElem$$3.style.display = "inline";
        JAM.call(updateCharacter, null, [st.characterList], JAM.policy.p3);
      } else {
        legendElem$$3.style.display = "none";
      }
      JAM.call(st.onClick, st, [st.root], JAM.policy.p3);
      JAM.call(st.fitScreen, st, [], JAM.policy.p3);
    }
    return;
  }
  function v26(animate$$1) {
    if (!animateDuration) {
      animateDuration = st.config.duration;
    }
    if (animate$$1.checked) {
      st.config.duration = animateDuration;
    } else {
      st.config.duration = 0;
    }
    return;
  }
  function v25(lat) {
    if (lat.checked) {
      st.config.lateralise = true;
    } else {
      st.config.lateralise = false;
    }
    var v14771 = st.graph;
    JAM.call(st.computePositions, st, [JAM.call(v14771.getNode, v14771, [st.root], JAM.policy.p3), ""], JAM.policy.p3);
    JAM.call(st.plot, st, [], JAM.policy.p3);
    return;
  }
  function v24(setRoot$$2) {
    if (setRoot$$2.value === "checked") {
      var id$$2 = st.clickedNode.id;
      JAM.call(st.setRoot, st, [id$$2, "animate"], JAM.policy.p3);
    }
    return;
  }
  function v23(alignName$$1) {
    if (alignName$$1.checked) {
      st.config.alignName = true;
      var v8769 = JAM.call(jQuery, null, [".quant"], JAM.policy.p3);
      JAM.call(v8769.addClass, v8769, ["quantAlign"], JAM.policy.p3);
    } else {
      st.config.alignName = false;
      var v8771 = JAM.call(jQuery, null, [".quant"], JAM.policy.p3);
      JAM.call(v8771.removeClass, v8771, ["quantAlign"], JAM.policy.p3);
    }
    JAM.call(st.plot, st, [], JAM.policy.p3);
    return;
  }
  function v22() {
    JAM.call(search, null, [-1], JAM.policy.p3);
    return;
  }
  function v21() {
    JAM.call(search, null, [1], JAM.policy.p3);
    return;
  }
  function v20() {
    JAM.call(st.fitScreen, st, [], JAM.policy.p3);
    return;
  }
  function v19() {
    return st.config.lateralise;
  }
  function v18(dom, node$$13) {
    var alignName = JAM.call($jit.id, $jit, ["alignName"], JAM.policy.p3);
    if (node$$13.selected) {
      dom.style.display = "none";
    }
    if (!node$$13.data.leaf) {
      dom.style.display = "none";
    }
    var v8778 = dom.style;
    var v14775 = node$$13.data.display;
    if (!v14775) {
      v14775 = "block";
    }
    v8778.display = v14775;
    if (alignName.checked) {
      var v8779 = JAM.call(jQuery, null, ["#" + dom.id + " .quant"], JAM.policy.p3);
      JAM.call(v8779.addClass, v8779, ["quantAlign"], JAM.policy.p3);
    } else {
      var v8780 = JAM.call(jQuery, null, ["#" + dom.id + " .quant"], JAM.policy.p3);
      JAM.call(v8780.removeClass, v8780, ["quantAlign"], JAM.policy.p3);
    }
    return;
  }
  function v17(node$$12, eventInfo$$1, e$$7) {
    function v16(n$$1) {
      if (n$$1.data.leaf) {
        JAM.set(elem$$3, "innerHTML", elem$$3.innerHTML + (n$$1.name + "<br/>"));
      }
      return;
    }
    if (node$$12) {
      var elem$$3 = JAM.call(document.getElementById, document, ["selected"], JAM.policy.p3);
      if (node$$12.leaf) {
        JAM.set(elem$$3, "innerHTML", node$$12.name);
      } else {
        JAM.set(elem$$3, "innerHTML", "");
        JAM.call(node$$12.subGraph, node$$12, [v16], JAM.policy.p3);
      }
    }
    return;
  }
  function v15(adj$$1) {
    return;
  }
  function v14(node$$11) {
    var result$$3 = true;
    var char$$3;
    if (!node$$11.data.leaf) {
      var key$$17;
      for (key$$17 in st.config.selectedCharacters) {
        var v14783 = node$$11.data.characterConsistency;
        if (JAM.call(v14783.hasOwnProperty, v14783, [key$$17], JAM.policy.p3)) {
          char$$3 = st.config.selectedCharacters[key$$17];
          var v8785 = result$$3;
          if (v8785) {
            v8785 = node$$11.data.characterConsistency[char$$3];
          }
          result$$3 = v8785;
        }
      }
    }
    var v14786 = !result$$3;
    if (v14786) {
      v14786 = node$$11.data.$type !== "triangle";
    }
    if (v14786) {
      node$$11.data.$type = "square";
    }
    if (node$$11.data.$type === "circle") {
      if (node$$11.data.rotate) {
        node$$11.data.$color = "purple";
      } else {
        node$$11.data.$color = "red";
      }
    } else {
      if (node$$11.data.$type === "square") {
        node$$11.data.$dim = 10;
        node$$11.data.$color = "red";
      }
    }
    if (node$$11.data.$type === "triangle") {
      node$$11.data.$dim = 15;
      node$$11.data.$color = "#EE9AA2";
    } else {
      if (node$$11.data.$type !== "square") {
        delete node$$11.data.$dim;
      }
    }
    if (st.root === node$$11.id) {
      node$$11.data.$color = "lightblue";
    }
    return;
  }
  function v13(label$$1, node$$10) {
    function v12() {
      var setRoot$$1 = JAM.call($jit.id, $jit, ["setRoot"], JAM.policy.p3);
      if (!setRoot$$1.checked) {
        var v8805 = st.controller.Events;
        JAM.call(v8805.onClick, v8805, [node$$10], JAM.policy.p3);
      }
      return;
    }
    var char$$2;
    var list = st.config.selectedCharacters;
    var charTypeMapping = st.charTypeMapping;
    var i$$9;
    var values$$4;
    var div$$2;
    var colorCoding = st.colorCoding;
    var firstColor;
    var index$$41;
    var temp;
    var shape;
    label$$1.id = node$$10.id;
    JAM.set(label$$1, "innerHTML", node$$10.name);
    JAM.set(label$$1, "onclick", v12);
    var style = label$$1.style;
    style.width = "auto";
    style.height = 17 + "px";
    style.cursor = "pointer";
    style.color = "#333";
    style.fontSize = "0.8em";
    style.textAlign = "left";
    style.paddingTop = "3px";
    style.display = "inline";
    style.color = node$$10.data.$color;
    var boxes = "";
    var first$$3 = st.config.firstCharacter;
    var shapes = ["box", "star", "triangle"];
    index$$41 = 0;
    boxes = "";
    i$$9 = 0;
    var v8825 = i$$9 < list.length;
    for (;v8825;) {
      char$$2 = list[i$$9];
      values$$4 = node$$10.data.character[char$$2];
      var v19362 = values$$4;
      if (v19362) {
        v19362 = values$$4.length > 0;
      }
      var v14798 = v19362;
      if (v14798) {
        v14798 = typeof values$$4[0] !== "undefined";
      }
      if (v14798) {
        if (charTypeMapping[char$$2] === st.config.typeEnum.quali) {
          temp = colorCoding[char$$2];
          value = values$$4[0];
          if (values$$4.length > 1) {
            value = "multiple";
          }
          shape = '<div class="' + temp[value].shape + '" style="float:left;background-color:' + temp[value].color + ';" title="' + char$$2 + " : " + JAM.call(values$$4.join, values$$4, [" , "], JAM.policy.p3) + '"></div>';
          if (i$$9 === 0) {
            firstColor = temp[value].color;
          }
        } else {
          if (charTypeMapping[char$$2] === st.config.typeEnum.quant) {
            temp = st.colorCodingQuali[char$$2];
            value = values$$4[0];
            index$$41 = JAM.call(st.findIndex, st, [value, st.range[char$$2]], JAM.policy.p3);
            shape = '<div class="' + temp[index$$41].shape + '" style="float:left;background-color:' + temp[index$$41].color + ';" title="' + char$$2 + " : " + temp[index$$41].name + '"></div>';
            if (i$$9 === 0) {
              firstColor = st.config.quantColor[st.config.quantColor.length - 1];
            }
          }
        }
      } else {
        shape = '<div class="empty" style="float:left;background-color:;" title="empty"></div>';
      }
      if (first$$3 !== char$$2) {
        boxes = boxes + shape;
      } else {
        boxes = shape + boxes;
      }
      i$$9 = i$$9 + 1;
      v8825 = i$$9 < list.length;
    }
    if (label$$1) {
      if (!node$$10.data.leaf) {
        JAM.set(label$$1, "innerHTML", boxes + '&nbsp;&nbsp;<div style="display:inline;color:' + firstColor + '">' + node$$10.data.leaves + " Taxa</div>");
      } else {
        JAM.set(label$$1, "innerHTML", boxes + '&nbsp;&nbsp;<div style="display:inline;color:' + firstColor + '">' + node$$10.name + "</div>");
      }
    }
    return;
  }
  function v11(msg) {
    if (msg) {
      JAM.call(Log.write, Log, [msg], JAM.policy.p3);
    } else {
      JAM.call(Log.write, Log, ["done"], JAM.policy.p3);
    }
    return;
  }
  function v10(node$$9) {
    JAM.call(Log.write, Log, ["loading " + node$$9.name], JAM.policy.p3);
    return;
  }
  function v9(div$$1, node$$8) {
    var url$$3 = "";
    var key$$16;
    var i$$8;
    var char$$1;
    var html$$4 = "";
    var name$$33 = "";
    var maptitle = "";
    var index$$40;
    if (!!node$$8.name) {
      var v19375 = node$$8.name;
      url$$3 = '<img class="tipImage" src="http://biocache.ala.org.au/ws/density/map?q=' + JAM.call(v19375.replace, v19375, [" ", "+"], JAM.policy.p3) + '"/>';
      maptitle = "<br/>ALA <strong>reported</strong> occurences";
      name$$33 = "<i>" + node$$8.name + "</i>";
    } else {
      name$$33 = " unnamed clade ";
    }
    name$$33 = name$$33 + "<strong> click</strong> for ";
    if (node$$8.data.leaf) {
      name$$33 = name$$33 + "for linked data";
    } else {
      name$$33 = "Part of " + name$$33;
      if (node$$8.length < 30) {
        name$$33 = name$$33 + "clade members";
      } else {
        name$$33 = name$$33 + "30 clade members";
      }
    }
    name$$33 = "<h3>" + name$$33 + "</h3>";
    var result$$2 = [];
    for (index$$40 in st.config.selectedCharacters) {
      key$$16 = st.config.selectedCharacters[index$$40];
      char$$1 = node$$8.data.character[key$$16];
      html$$4 = "<strong>" + key$$16 + "</strong>: ";
      var v19376 = typeof char$$1 === "undefined";
      if (!v19376) {
        v19376 = char$$1.length === 0;
      }
      var v14826 = v19376;
      if (!v14826) {
        v14826 = typeof char$$1[0] === "undefined";
      }
      if (v14826) {
        html$$4 = html$$4 + "&mdash;";
      } else {
        if (typeof char$$1[0] !== "number") {
          html$$4 = html$$4 + JAM.call(char$$1.join, char$$1, [",<br/>...."], JAM.policy.p3);
        } else {
          var v14830 = html$$4;
          var v19380 = char$$1[0];
          html$$4 = v14830 + JAM.call(v19380.toFixed, v19380, [4], JAM.policy.p3);
        }
      }
      JAM.call(result$$2.push, result$$2, [html$$4], JAM.policy.p3);
    }
    JAM.set(div$$1, "innerHTML", name$$33 + JAM.call(result$$2.join, result$$2, ["<br/>"], JAM.policy.p3) + maptitle + url$$3);
    return;
  }
  function v8() {
    var v8843 = JAM.call($, null, ["a.thumbImage1"], JAM.policy.p3);
    JAM.call(v8843.colorbox, v8843, [{iframe:true, width:"80%", height:"80%"}], JAM.policy.p3);
    return;
  }
  function v7(clade) {
    var tmpl = st.config.tmpl;
    var nodeList = [];
    var node$$7;
    var html$$3;
    var split;
    var i$$7 = 0;
    var v8847 = i$$7 < clade.length & i$$7 < 30;
    for (;v8847;) {
      node$$7 = {};
      node$$7.name = clade[i$$7].name;
      JAM.call(nodeList.push, nodeList, [node$$7], JAM.policy.p3);
      i$$7 = i$$7 + 1;
      v8847 = i$$7 < clade.length & i$$7 < 30;
    }
    if (tmpl) {
      tmpl = JAM.call(_.template, _, [tmpl], JAM.policy.p3);
      html$$3 = JAM.call(tmpl, null, [{nodeList:nodeList}], JAM.policy.p3);
    } else {
    }
    return html$$3;
  }
  function v6(node$$6, eventInfo, e$$6) {
    function v5(elem$$2) {
      if (elem$$2.data.leaf) {
        if (leafs) {
          leafs = leafs + ("<li>" + elem$$2.name + "</li>");
        } else {
          leafs = "<li>" + elem$$2.name + "</li>";
        }
        JAM.call(selectedClade.push, selectedClade, [elem$$2], JAM.policy.p3);
      }
      return;
    }
    function v4$$1() {
      return;
    }
    var leafs;
    if (node$$6) {
      selectedClade = [];
      var expand = JAM.call($jit.id, $jit, ["expand"], JAM.policy.p3);
      var v8851 = st.labels;
      var pos$$3 = JAM.call(v8851.getLabel, v8851, [node$$6.id], JAM.policy.p3);
      var setRoot = JAM.call($jit.id, $jit, ["setRoot"], JAM.policy.p3);
      var rotate = JAM.call($jit.id, $jit, ["rotate"], JAM.policy.p3);
      var select = JAM.call($jit.id, $jit, ["selectClade"], JAM.policy.p3);
      var v19385 = pos$$3.style.left;
      var loc = JAM.call(parseInt, null, [JAM.call(v19385.replace, v19385, [/px/, ""], JAM.policy.p3), 10], JAM.policy.p3) + 100;
      var v19386 = pos$$3.style.top;
      var locy = JAM.call(parseInt, null, [JAM.call(v19386.replace, v19386, [/px/, ""], JAM.policy.p3), 10], JAM.policy.p3) + 40;
      if (setRoot.checked) {
        var id$$1 = node$$6.id;
        JAM.call(st.setRoot, st, [id$$1, "animate"], JAM.policy.p3);
        st.root = id$$1;
      }
      if (rotate.checked) {
        var v14842 = st.graph;
        JAM.call(st.computePositions, st, [JAM.call(v14842.getNode, v14842, [st.root], JAM.policy.p3), "start"], JAM.policy.p3);
        if (typeof node$$6.data.rotate === "undefined") {
          node$$6.data.rotate = false;
        }
        node$$6.data.rotate = !node$$6.data.rotate;
        var v14846 = st.graph;
        JAM.call(st.computePositions, st, [JAM.call(v14846.getNode, v14846, [st.root], JAM.policy.p3), "end"], JAM.policy.p3);
        var v8861 = st.fx;
        JAM.call(v8861.animate, v8861, [{modes:["linear", "node-property:alpha"], onComplete:v4$$1}], JAM.policy.p3);
      }
      if (expand.checked) {
        JAM.call(st.setCollapsed, st, [node$$6], JAM.policy.p3);
        var level$$7 = JAM.call(st.nodesExpCol, st, [node$$6], JAM.policy.p3);
        if (level$$7) {
          st.zoomIndex = level$$7;
        }
        var v14849 = st.graph;
        JAM.call(st.computePositions, st, [JAM.call(v14849.getNode, v14849, [st.root], JAM.policy.p3), ""], JAM.policy.p3);
        JAM.call(st.plot, st, [], JAM.policy.p3);
      }
      if (select.checked) {
        st.clickedNode = node$$6;
        JAM.call(node$$6.eachSubgraph, node$$6, [v5], JAM.policy.p3);
        popup$$1.style.display = "inline";
        popup$$1.style.top = locy + "px";
        popup$$1.style.left = loc + "px";
        var v8869 = popupText;
        var v14851 = st.config;
        var v31473 = JAM.call(v14851.presentClade, v14851, [selectedClade], JAM.policy.p3);
        JAM.set(v8869, "innerHTML", v31473);
        var v8870 = st.config;
        JAM.call(v8870.onPresentClade, v8870, [], JAM.policy.p3);
        JAM.call(st.plot, st, [], JAM.policy.p3);
      }
    }
    return;
  }
  function v3$$1() {
    st.canvas.element.style.cursor = "";
    var v8873 = st.tips;
    JAM.call(v8873.hide, v8873, [true], JAM.policy.p3);
    return;
  }
  function v2$$1(node$$5, event$$1, e$$5) {
    st.canvas.element.style.cursor = "pointer";
    var v8875 = st.tips.config;
    JAM.call(v8875.onShow, v8875, [st.tips.tip, node$$5], JAM.policy.p3);
    var v8877 = st.tips;
    var v14856 = $jit.util.event;
    JAM.call(v8877.setTooltipPosition, v8877, [JAM.call(v14856.getPos, v14856, [e$$5], JAM.policy.p3)], JAM.policy.p3);
    return;
  }
  function v1$$1(div, node$$4) {
    var url$$2 = "";
    var key$$15;
    var i$$6;
    var char;
    var html$$2 = "";
    var name$$32 = "";
    var index$$39;
    if (node$$4.data.leaf) {
      name$$32 = "<h3>" + node$$4.name + "</h3>";
      var v22637 = node$$4.name;
      var v19392 = JAM.call(v22637.split, v22637, [/\s+/], JAM.policy.p3);
      url$$2 = '<img class="tipImage" src="http://biocache.ala.org.au/ws/density/map?q=' + JAM.call(v19392.join, v19392, ["+"], JAM.policy.p3) + '"/>';
    }
    var result$$1 = [];
    for (index$$39 in st.config.selectedCharacters) {
      key$$15 = st.config.selectedCharacters[index$$39];
      char = node$$4.data.character[key$$15];
      html$$2 = "<strong>" + key$$15 + "</strong>: ";
      var v19393 = typeof char === "undefined";
      if (!v19393) {
        v19393 = char.length === 0;
      }
      var v14863 = v19393;
      if (!v14863) {
        v14863 = typeof char[0] === "undefined";
      }
      if (v14863) {
        html$$2 = html$$2 + "&mdash;";
      } else {
        if (typeof char[0] !== "number") {
          html$$2 = html$$2 + JAM.call(char.join, char, [","], JAM.policy.p3);
        } else {
          var v14867 = html$$2;
          var v19397 = char[0];
          html$$2 = v14867 + JAM.call(v19397.toFixed, v19397, [4], JAM.policy.p3);
        }
      }
      JAM.call(result$$1.push, result$$1, [html$$2], JAM.policy.p3);
    }
    JAM.set(div, "innerHTML", name$$32 + JAM.call(result$$1.join, result$$1, ["<br/>"], JAM.policy.p3) + url$$2);
    return;
  }
  function search(step$$1) {
    function v0$$1(node$$14) {
      var name$$34 = node$$14.name;
      var pattern$$1 = JAM.new(RegExp, [searchString, "i"], JAM.policy.p3);
      if (JAM.call(name$$34.match, name$$34, [pattern$$1], JAM.policy.p3)) {
        JAM.call(result.push, result, [node$$14], JAM.policy.p3);
      }
      return;
    }
    var searchString = searchBtn.value;
    var len;
    var v8890 = st.graph;
    var root = JAM.call(v8890.getNode, v8890, [st.root], JAM.policy.p3);
    if (result.length > 0) {
      len = result.length;
      pos = JAM.call(nextStep, null, [pos, step$$1, len], JAM.policy.p3);
      var v8892 = st.labels;
      var prevElem = JAM.call(v8892.getLabel, v8892, [result[JAM.call(nextStep, null, [pos, -1 * step$$1, len], JAM.policy.p3)].id], JAM.policy.p3);
      prevElem.style.backgroundColor = "";
    }
    var v14872 = searchString;
    if (v14872) {
      v14872 = prevSearch !== searchString;
    }
    if (v14872) {
      result = [];
      prevSearch = searchString;
      JAM.call(root.eachSubgraph, root, [v0$$1], JAM.policy.p3);
      pos = JAM.call(nextStep, null, [undefined, step$$1, len], JAM.policy.p3);
    } else {
      if (searchString === "") {
        result = [];
      }
    }
    if (result.length > 0) {
      var shownNode = result[pos];
      if (!shownNode.exist) {
        root.collapsed = true;
        JAM.call(st.nodesExpCol, st, [root], JAM.policy.p3);
        JAM.call(st.computePositions, st, [root, ""], JAM.policy.p3);
        JAM.call(st.plot, st, [], JAM.policy.p3);
      }
      var canvas$$1 = st.canvas;
      var oy = canvas$$1.translateOffsetY;
      var xTranslate = 0;
      var yTranslate = -oy;
      var v8899 = st.canvas;
      JAM.call(v8899.translate, v8899, [xTranslate, yTranslate], JAM.policy.p3);
      var v8900 = st.labels;
      var element$$2 = JAM.call(v8900.getLabel, v8900, [result[pos].id], JAM.policy.p3);
      element$$2.style.backgroundColor = "yellow";
      var v8903 = JAM.call(jQuery, null, [element$$2], JAM.policy.p3);
      JAM.call(v8903.click, v8903, [], JAM.policy.p3);
    }
    return;
  }
  function clickHandler() {
    var JSCompiler_object_inline_x_80;
    var JSCompiler_object_inline_y_81;
    switch(this.id) {
      case "north":
        JSCompiler_object_inline_x_80 = 0;
        JSCompiler_object_inline_y_81 = 10;
        true;
        break;
      case "west":
        JSCompiler_object_inline_x_80 = -10;
        JSCompiler_object_inline_y_81 = 0;
        true;
        break;
      case "east":
        JSCompiler_object_inline_x_80 = 10;
        JSCompiler_object_inline_y_81 = 0;
        true;
        break;
      case "south":
        JSCompiler_object_inline_x_80 = 0;
        JSCompiler_object_inline_y_81 = -10;
        true;
    }
    var canvas = st.canvas;
    JAM.call(canvas.translate, canvas, [JSCompiler_object_inline_x_80, JSCompiler_object_inline_y_81], JAM.policy.p3);
    return;
  }
  function zoomHandler() {
    var scroll;
    switch(this.id) {
      case "zoomIN":
        scroll = +1;
        break;
      case "zoomOUT":
        scroll = -1;
    }
    JAM.call(st.zoom, st, [scroll], JAM.policy.p3);
    return;
  }
  function nextStep(pos$$2, step, length$$11) {
    if (typeof pos$$2 === "undefined") {
      var v8907;
      if (step > 0) {
        v8907 = 0;
      } else {
        v8907 = length$$11 - 1;
      }
      return v8907;
    }
    var i$$4 = (pos$$2 + step) % length$$11;
    var v8910;
    if (i$$4 < 0) {
      v8910 = length$$11 + i$$4;
    } else {
      v8910 = i$$4;
    }
    return v8910;
  }
  function keyHandler(e$$4) {
    var ENTER = 13;
    var shift = e$$4.shiftKey;
    var v14879 = shift;
    if (v14879) {
      v14879 = e$$4.keyCode === ENTER;
    }
    if (v14879) {
      JAM.call(search, null, [-1], JAM.policy.p3);
      if (e$$4.preventDefault) {
        JAM.call(e$$4.preventDefault, e$$4, [], JAM.policy.p3);
      }
      return false;
    } else {
      if (e$$4.keyCode === ENTER) {
        JAM.call(search, null, [1], JAM.policy.p3);
        if (e$$4.preventDefault) {
          JAM.call(e$$4.preventDefault, e$$4, [], JAM.policy.p3);
        }
        return false;
      }
    }
    return;
  }
  var config = {injectInto:"infovis", width:800, height:600, offsetX:0, align:"left", alignName:false, lateralise:true, branchLength:true, branchMultiplier:1, duration:1E3, fps:10, transition:$jit.Trans.Quart.easeInOut, levelDistance:20, levelsToShow:Number.MAX_VALUE, constrained:false, firstCharacter:"Raceme_length_median", Navigation:{enable:true, panning:"avoid nodes", zooming:50}, Tips:{enable:true, onShow:v1$$1}, Node:{height:40, width:20, type:"circle", dim:5, color:"#aaa", overridable:true, 
  align:"left"}, Canvas:{background:{color:"#EEF2F7"}}, Edge:{type:"line", color:"#000", overridable:true, lineWidth:2}, Events:{enable:true, type:"Native", onMouseEnter:v2$$1, onMouseLeave:v3$$1, onClick:v6}, presentClade:v7, onPresentClade:v8, tmpl:"<ul><% _.each(nodeList , function( value ) { %> <li> <%= value.name %> </li> <% }); %> </ul>", Tips:{enable:true, onShow:v9}, onBeforeCompute:v10, onAfterCompute:v11, onCreateLabel:v13, onBeforePlotNode:v14, onBeforePlotLine:v15, onClick:v17, onPlaceLabel:v18};
  var height$$9 = config.height;
  var v8924 = config.width;
  if (!v8924) {
    v8924 = 800;
  }
  var width$$9 = v8924;
  var v8925 = $jit.util;
  JAM.call(v8925.extend, v8925, [config, initial], JAM.policy.p3);
  JAM.call(Nav.load, Nav, [config], JAM.policy.p3);
  var html$$1;
  var rightContainer$$1 = JAM.call($jit.id, $jit, ["right-jitcontainer"], JAM.policy.p3);
  var popup$$1 = JAM.call($jit.id, $jit, ["popup"], JAM.policy.p3);
  var popupText = JAM.call($jit.id, $jit, ["popup-text"], JAM.policy.p3);
  JAM.call(settingsPage, null, [], JAM.policy.p3);
  var dataObject;
  var json$$1 = "";
  if (config.tree) {
    dataObject = JAM.new(Smits.PhyloCanvas.NewickParse, [config.tree], JAM.policy.p3);
  }
  if (typeof dataObject === "object") {
    json$$1 = JAM.call(smitsNode2JSON, null, [JAM.call(dataObject.getRoot, dataObject, [], JAM.policy.p3)], JAM.policy.p3);
  }
  var selectedClade;
  var zoomIN = JAM.call($jit.id, $jit, ["zoomIN"], JAM.policy.p3);
  var zoomOUT = JAM.call($jit.id, $jit, ["zoomOUT"], JAM.policy.p3);
  var world = JAM.call($jit.id, $jit, ["world"], JAM.policy.p3);
  st = JAM.new($jit.Phylo, [config], JAM.policy.p3);
  isLateralise = v19;
  JAM.call(st.loadJSON, st, [json$$1], JAM.policy.p3);
  JAM.call(st.compute, st, [], JAM.policy.p3);
  var v8932 = config.character;
  if (!v8932) {
    v8932 = {};
  }
  st.character = v8932;
  var legendElem$$1 = JAM.call($jit.id, $jit, ["legend"], JAM.policy.p3);
  if (st.character) {
    var v8933 = JAM.call(st.colorCharacter, st, [], JAM.policy.p3);
    if (!v8933) {
      v8933 = "";
    }
    html$$1 = v8933;
    var v8934 = JAM.call(jQuery, null, ["#legendBody"], JAM.policy.p3);
    JAM.call(v8934.html, v8934, [html$$1], JAM.policy.p3);
    legendElem$$1.style.display = "inline";
    JAM.call(updateCharacter, null, [st.characterList], JAM.policy.p3);
  } else {
    legendElem$$1.style.display = "none";
  }
  var north = JAM.call($jit.id, $jit, ["north"], JAM.policy.p3);
  var east = JAM.call($jit.id, $jit, ["east"], JAM.policy.p3);
  var west = JAM.call($jit.id, $jit, ["west"], JAM.policy.p3);
  var south = JAM.call($jit.id, $jit, ["south"], JAM.policy.p3);
  JAM.set(north, "onmousedown", JAM.set(south, "onmousedown", JAM.set(east, "onmousedown", JAM.set(west, "onmousedown", clickHandler))));
  JAM.set(zoomIN, "onclick", JAM.set(zoomOUT, "onclick", zoomHandler));
  JAM.set(world, "onclick", v20);
  var result = [];
  var pos;
  var prevSearch;
  var searchBtn = JAM.call($jit.id, $jit, ["searchString"], JAM.policy.p3);
  if (searchBtn.addEventListener) {
    JAM.call(searchBtn.addEventListener, searchBtn, ["keydown", keyHandler, false], JAM.policy.p3);
  } else {
    if (searchBtn.attachEvent) {
      JAM.call(searchBtn.attachEvent, searchBtn, ["onkeydown", keyHandler], JAM.policy.p3);
    }
  }
  var next = JAM.call($jit.id, $jit, ["next"], JAM.policy.p3);
  var previous = JAM.call($jit.id, $jit, ["previous"], JAM.policy.p3);
  JAM.set(next, "onclick", v21);
  JAM.set(previous, "onclick", v22);
  onClickAlign = v23;
  onSetRoot = v24;
  onLateralise = v25;
  var animateDuration;
  onAnimate = v26;
  onRender = v27;
  onGetCharacter = v28;
  onBranchLength = v29;
  onBranchMultiply = v30;
  toggleScreen = v31;
  onSetCharacter = v32;
  var v8941 = Backbone.Router;
  var AppRouter = JAM.call(v8941.extend, v8941, [{routes:{"":"start", "character/*char":"characterSelection"}, start:v33, characterSelection:v34}], JAM.policy.p3);
  var app = JAM.new(AppRouter, [], JAM.policy.p3);
  var v8943 = Backbone.history;
  JAM.call(v8943.start, v8943, [], JAM.policy.p3);
  return;
}
function init() {
  JAM.call(phylogenyExplorer_init, null, [{codeBase:"../..", width:550, height:800, alignName:true, lateralise:false, levelsToShow:10, branchMultiplier:1, tree:"((Replace:0.007667365048364433,(this:0.005369261896034483,(with:0.011621228506591308,your:2.100100506802205E-6):0.0027929350821030707):0.012281999999150084):0.0400709772514759,(((own:0.0012025949078822151,phylogeny:0.0024332420478173633):0.006421131153429474,(in:0.008984623535641459,(newick:0.0012074724370825796,form:0.004013224017395373):0.003744210327868966):0.00542385295016945):0.023689622298502563,(tree:0.036702751435909745,((take:0.002448206437464337,care:0.0024347868455663196):0.001504447318880206,(to:0.0023787045835393372,(remove:2.100100506802205E-6,quotes_and_other_html_special_characters:0.01728824049672087):0.010690121488212884):6.006911375427831E-4):0.005347250770554118):0.014788598652250115):0.0400709772514759);", 
  character:{"Replace":{"modelled annual mean moisture index":[.6837124164], "modelled annual mean rad":[17.1466667213], "modelled annual mean temp":[16.0416993341], "modelled annual precipitation":[1039.2849673203], "modelled clpk 1 1000 g clay":[18998.3660130718], "modelled erosional":[85.9191176471], "modelled highest period moisture index":[.8894836614], "modelled highest period radiation":[25.3393464394], "modelled hydraulic conductivity ksat":[157.4640522876], "modelled isothermality":[.4932352942], 
  "modelled lowest period moisture index":[.3231372576], "modelled lowest period radiation":[9.081829987], "modelled max temp warmest period":[28.0827450671], "modelled mean diurnal range":[11.3729411867], "modelled mean moisture index coldest quarter":[.8600326849], "modelled mean moisture index highest quarter MI":[.8941764697], "modelled mean moisture index lowest quater MI":[.3734836587], "modelled mean moisture index warmest quarter":[.4585424874], "modelled mean temp coldest quarter":[10.5782352927], 
  "modelled mean temp driest quater":[15.4166012935], "modelled mean temp warmer quarter":[20.968431512], "modelled mean temp wettest quarter":[15.8052941168], "modelled min temp coldest period":[4.1385621225], "modelled moisture index seasonality":[33.0339869281], "modelled phos":[.0438125788], "modelled precipitation coldets quarter":[255.5509803922], "modelled precipitation driest period":[5.322875817], "modelled precipitation driest quarter":[143.0516339869], "modelled precipitation seasonality":[39.0823529412], 
  "modelled precipitation warmest quarter":[292.9124183007], "modelled precipitation wettest period":[36.9261437908], "modelled precipitation wettest quarter":[423.4202614379], "modelled radiation coldest quarter":[10.6616340562], "modelled radiation driest quarter":[17.4772549498], "modelled radiation seasonality":[33.0607843137], "modelled radiation warmest quarter":[22.9215031792], "modelled radiation wettest quarter":[15.7764050234], "modelled relief":[64.9002548406], "modelled ridgetopflat":[1.964869281], 
  "modelled rockalklty":[4.9215686275], "modelled rockgrainsz":[4.1215686275], "modelled rockhardness":[5.8725490196], "modelled rocknutrnt":[4.7078431373], "modelled roughness":[19.0273797546], "modelled sapk 1 1000 g sand":[64840.3594771241], "modelled slope":[4.4690577426], "modelled soildepth":[.9153594758], "modelled solpawhc":[107.6281045752], "modelled temperature annual range":[23.24398698], "modelled temperature seasonality":[1.4140000156], "modelled thpk 1 1000 g thickness":[292.831372549], 
  "modelled twi":[5.5785338397], "modelled valleybottom":[8.4109477124], "modelled whpk 1 1000 g water cap":[44557.6633986928], "raw annual mean moisture index":[1E-7], "raw annual mean rad":[19], "raw annual mean temp":[21.5], "raw annual precipitation":[1111], "raw clpk 1 1000 g clay":[18E3], "raw erosional":[100], "raw highest period moisture index":[1], "raw highest period radiation":[25.5], "raw hydraulic conductivity ksat":[200], "raw lowest period moisture index":[0], "raw lowest period radiation":[14], 
  "raw max temp warmest period":[30], "raw mean diurnal range":[9], "raw mean moisture index coldest quarter":[0], "raw mean moisture index highest quarter MI":[.5], "raw mean moisture index lowest quater MI":[0], "raw mean moisture index warmest quarter":[0], "raw mean temp coldest quarter":[17], "raw mean temp driest quater":[18.5], "raw mean temp warmer quarter":[24.5], "raw mean temp wettest quarter":[24.5], "raw min temp coldest period":[11], "raw moisture index seasonality":[57], "raw precipitation coldets quarter":[82], 
  "raw precipitation driest period":[0], "raw precipitation driest quarter":[61], "raw precipitation seasonality":[99.5], "raw precipitation warmest quarter":[574.5], "raw precipitation wettest period":[72.5], "raw precipitation wettest quarter":[716], "raw radiation coldest quarter":[15.5], "raw radiation driest quarter":[19], "raw radiation seasonality":[18.5], "raw radiation warmest quarter":[22], "raw radiation wettest quarter":[19], "raw relief":[125], "raw ridgetopflat":[0], "raw rockalklty":[4], 
  "raw rockgrainsz":[8], "raw rockhardness":[7], "raw rocknutrnt":[4], "raw roughness":[11], "raw sapk 1 1000 g sand":[63E3], "raw slope":[6], "raw soildepth":[1], "raw solpawhc":[177], "raw temperature annual range":[18], "raw temperature seasonality":[1], "raw thpk 1 1000 g thickness":[295.5], "raw twi":[5.5], "raw valleybottom":[0]}, "this":{"modelled annual mean moisture index":[.6050000191], "modelled annual mean rad":[19.6500005722], "modelled annual mean temp":[21.75], "modelled annual precipitation":[1111], 
  "modelled clpk 1 1000 g clay":[18E3], "modelled erosional":[100], "modelled highest period moisture index":[1], "modelled highest period radiation":[26.1500005722], "modelled hydraulic conductivity ksat":[200], "modelled isothermality":[.5150000155], "modelled lowest period moisture index":[.1199999973], "modelled lowest period radiation":[14.3499999046], "modelled max temp warmest period":[30.1999998093], "modelled mean diurnal range":[9.6500000954], "modelled mean moisture index coldest quarter":[.5400000066], 
  "modelled mean moisture index highest quarter MI":[.9950000048], "modelled mean moisture index lowest quater MI":[.1750000007], "modelled mean moisture index warmest quarter":[.7150000036], "modelled mean temp coldest quarter":[17.4500007629], "modelled mean temp driest quater":[18.8999996185], "modelled mean temp warmer quarter":[25.1499996185], "modelled mean temp wettest quarter":[24.8500003815], "modelled min temp coldest period":[11.5999999046], "modelled moisture index seasonality":[57], 
  "modelled phos":[.0198370004], "modelled precipitation coldets quarter":[82], "modelled precipitation driest period":[0], "modelled precipitation driest quarter":[61], "modelled precipitation seasonality":[99.5], "modelled precipitation warmest quarter":[574.5], "modelled precipitation wettest period":[72.5], "modelled precipitation wettest quarter":[716], "modelled radiation coldest quarter":[15.9499998093], "modelled radiation driest quarter":[19.1999998093], "modelled radiation seasonality":[18.5], 
  "modelled radiation warmest quarter":[22.3999996185], "modelled radiation wettest quarter":[19.6000003815], "modelled relief":[125.4036026001], "modelled ridgetopflat":[0], "modelled rockalklty":[4], "modelled rockgrainsz":[8], "modelled rockhardness":[7], "modelled rocknutrnt":[4], "modelled roughness":[11.5456476212], "modelled sapk 1 1000 g sand":[63E3], "modelled slope":[6.512172699], "modelled soildepth":[1.25], "modelled solpawhc":[177], "modelled temperature annual range":[18.6500005722], 
  "modelled temperature seasonality":[1.0499999523], "modelled thpk 1 1000 g thickness":[295.5], "modelled twi":[5.6324121952], "modelled valleybottom":[0], "modelled whpk 1 1000 g water cap":[5E4], "raw annual mean moisture index":[0], "raw annual mean rad":[19], "raw annual mean temp":[21.75], "raw annual precipitation":[1107], "raw clpk 1 1000 g clay":[19E3], "raw erosional":[100], "raw highest period moisture index":[1], "raw highest period radiation":[25.25], "raw hydraulic conductivity ksat":[250], 
  "raw lowest period moisture index":[0], "raw lowest period radiation":[14], "raw max temp warmest period":[30], "raw mean diurnal range":[8.5], "raw mean moisture index coldest quarter":[0], "raw mean moisture index highest quarter MI":[.25], "raw mean moisture index lowest quater MI":[0], "raw mean moisture index warmest quarter":[0], "raw mean temp coldest quarter":[17.5], "raw mean temp driest quater":[18.75], "raw mean temp warmer quarter":[24.75], "raw mean temp wettest quarter":[24.75], "raw min temp coldest period":[11.5], 
  "raw moisture index seasonality":[61.5], "raw precipitation coldets quarter":[74.5], "raw precipitation driest period":[0], "raw precipitation driest quarter":[55], "raw precipitation seasonality":[103.75], "raw precipitation warmest quarter":[608.75], "raw precipitation wettest period":[75.75], "raw precipitation wettest quarter":[731.5], "raw radiation coldest quarter":[15.25], "raw radiation driest quarter":[19], "raw radiation seasonality":[18.25], "raw radiation warmest quarter":[21.5], "raw radiation wettest quarter":[19], 
  "raw relief":[162], "raw ridgetopflat":[0], "raw rockalklty":[4], "raw rockgrainsz":[8], "raw rockhardness":[7], "raw rocknutrnt":[4], "raw roughness":[15.5], "raw sapk 1 1000 g sand":[61500], "raw slope":[7.5], "raw soildepth":[1], "raw solpawhc":[183], "raw temperature annual range":[17.5], "raw temperature seasonality":[1], "raw thpk 1 1000 g thickness":[285.25], "raw twi":[4.75], "raw valleybottom":[0]}, "with":{"modelled annual mean moisture index":[.9200000167], "modelled annual mean rad":[16.8999996185], 
  "modelled annual mean temp":[19.3999996185], "modelled annual precipitation":[1778], "modelled clpk 1 1000 g clay":[14E3], "modelled erosional":[100], "modelled highest period moisture index":[1], "modelled highest period radiation":[22.8999996185], "modelled hydraulic conductivity ksat":[300], "modelled isothermality":[.4900000095], "modelled lowest period moisture index":[.7300000191], "modelled lowest period radiation":[10.8000001907], "modelled max temp warmest period":[27.7999992371], "modelled mean diurnal range":[9.5], 
  "modelled mean moisture index coldest quarter":[1], "modelled mean moisture index highest quarter MI":[1], "modelled mean moisture index lowest quater MI":[.75], "modelled mean moisture index warmest quarter":[.9200000167], "modelled mean temp coldest quarter":[14.6000003815], "modelled mean temp driest quater":[16.1000003815], "modelled mean temp warmer quarter":[23.5], "modelled mean temp wettest quarter":[23.1000003815], "modelled min temp coldest period":[8.1999998093], "modelled moisture index seasonality":[12], 
  "modelled phos":[.0327499993], "modelled precipitation coldets quarter":[258], "modelled precipitation driest period":[11], "modelled precipitation driest quarter":[211], "modelled precipitation seasonality":[46], "modelled precipitation warmest quarter":[670], "modelled precipitation wettest period":[66], "modelled precipitation wettest quarter":[730], "modelled radiation coldest quarter":[12.8999996185], "modelled radiation driest quarter":[16.2999992371], "modelled radiation seasonality":[24], 
  "modelled radiation warmest quarter":[20.1000003815], "modelled radiation wettest quarter":[18.2999992371], "modelled relief":[178.5762023926], "modelled ridgetopflat":[0], "modelled rockalklty":[5], "modelled rockgrainsz":[3], "modelled rockhardness":[4], "modelled rocknutrnt":[4], "modelled roughness":[72.862159729], "modelled sapk 1 1000 g sand":[69E3], "modelled slope":[10.0389699936], "modelled soildepth":[1], "modelled solpawhc":[169], "modelled temperature annual range":[19.5], "modelled temperature seasonality":[1.2000000477], 
  "modelled thpk 1 1000 g thickness":[599], "modelled twi":[2.5513501167], "modelled valleybottom":[0], "modelled whpk 1 1000 g water cap":[117E3], "raw annual mean moisture index":[0], "raw annual mean rad":[16], "raw annual mean temp":[19], "raw annual precipitation":[1778], "raw clpk 1 1000 g clay":[14E3], "raw erosional":[100], "raw highest period moisture index":[1], "raw highest period radiation":[22], "raw hydraulic conductivity ksat":[300], "raw lowest period moisture index":[0], "raw lowest period radiation":[10], 
  "raw max temp warmest period":[27], "raw mean diurnal range":[9], "raw mean moisture index coldest quarter":[1], "raw mean moisture index highest quarter MI":[1], "raw mean moisture index lowest quater MI":[0], "raw mean moisture index warmest quarter":[0], "raw mean temp coldest quarter":[14], "raw mean temp driest quater":[16], "raw mean temp warmer quarter":[23], "raw mean temp wettest quarter":[23], "raw min temp coldest period":[8], "raw moisture index seasonality":[12], "raw precipitation coldets quarter":[258], 
  "raw precipitation driest period":[11], "raw precipitation driest quarter":[211], "raw precipitation seasonality":[46], "raw precipitation warmest quarter":[670], "raw precipitation wettest period":[66], "raw precipitation wettest quarter":[730], "raw radiation coldest quarter":[12], "raw radiation driest quarter":[16], "raw radiation seasonality":[24], "raw radiation warmest quarter":[20], "raw radiation wettest quarter":[18], "raw relief":[178], "raw ridgetopflat":[0], "raw rockalklty":[5], "raw rockgrainsz":[3], 
  "raw rockhardness":[4], "raw rocknutrnt":[4], "raw roughness":[72], "raw sapk 1 1000 g sand":[69E3], "raw slope":[10], "raw soildepth":[1], "raw solpawhc":[169], "raw temperature annual range":[19], "raw temperature seasonality":[1], "raw thpk 1 1000 g thickness":[599], "raw twi":[2], "raw valleybottom":[0]}, "your":{"modelled annual mean moisture index":[.8323181818], "modelled annual mean rad":[17.9524242387], "modelled annual mean temp":[19.2898482727], "modelled annual precipitation":[1888.3636363636], 
  "modelled clpk 1 1000 g clay":[25214.7727272727], "modelled erosional":[92.8787878788], "modelled highest period moisture index":[.998939395], "modelled highest period radiation":[24.5178788503], "modelled hydraulic conductivity ksat":[205.6212121212], "modelled isothermality":[.5086363656], "modelled lowest period moisture index":[.4447727201], "modelled lowest period radiation":[12.1872727221], "modelled max temp warmest period":[28.0525757327], "modelled mean diurnal range":[9.485757533], "modelled mean moisture index coldest quarter":[.8951666693], 
  "modelled mean moisture index highest quarter MI":[.9978787867], "modelled mean moisture index lowest quater MI":[.5378636367], "modelled mean moisture index warmest quarter":[.8636969721], "modelled mean temp coldest quarter":[14.951212141], "modelled mean temp driest quater":[16.7531818144], "modelled mean temp warmer quarter":[22.9656060132], "modelled mean temp wettest quarter":[22.5318182165], "modelled min temp coldest period":[9.4287879063], "modelled moisture index seasonality":[25.9621212121], 
  "modelled phos":[.0453631317], "modelled precipitation coldets quarter":[235.6090909091], "modelled precipitation driest period":[6.7242424242], "modelled precipitation driest quarter":[167.2409090909], "modelled precipitation seasonality":[68.203030303], "modelled precipitation warmest quarter":[790.2136363636], "modelled precipitation wettest period":[88.2606060606], "modelled precipitation wettest quarter":[970.5196969697], "modelled radiation coldest quarter":[14.1262121605], "modelled radiation driest quarter":[17.7987878742], 
  "modelled radiation seasonality":[21.6636363636], "modelled radiation warmest quarter":[20.8286361521], "modelled radiation wettest quarter":[18.6671213323], "modelled relief":[151.1616860035], "modelled ridgetopflat":[0], "modelled rockalklty":[4.7151515152], "modelled rockgrainsz":[5.5742424242], "modelled rockhardness":[6.2560606061], "modelled rocknutrnt":[4.5742424242], "modelled roughness":[14.6029429806], "modelled sapk 1 1000 g sand":[54667.803030303], "modelled slope":[8.4508264353], "modelled soildepth":[1.1122727402], 
  "modelled solpawhc":[155.3090909091], "modelled temperature annual range":[18.6489395503], "modelled temperature seasonality":[1.0938939283], "modelled thpk 1 1000 g thickness":[301.3257575758], "modelled twi":[5.6370893103], "modelled valleybottom":[7.1212121212], "modelled whpk 1 1000 g water cap":[51557.1969696969], "raw annual mean moisture index":[0], "raw annual mean rad":[17.6111111111], "raw annual mean temp":[18.5], "raw annual precipitation":[1925.8333333333], "raw clpk 1 1000 g clay":[26833.3333333333], 
  "raw erosional":[94.4444444444], "raw highest period moisture index":[.9444444444], "raw highest period radiation":[24.1111111111], "raw hydraulic conductivity ksat":[196.1111111111], "raw lowest period moisture index":[0], "raw lowest period radiation":[11.8333333333], "raw max temp warmest period":[27.4444444444], "raw mean diurnal range":[9.2777777778], "raw mean moisture index coldest quarter":[.3888888889], "raw mean moisture index highest quarter MI":[.9444444444], "raw mean moisture index lowest quater MI":[0], 
  "raw mean moisture index warmest quarter":[.0555555556], "raw mean temp coldest quarter":[14.1111111111], "raw mean temp driest quater":[15.8888888889], "raw mean temp warmer quarter":[22.1666666667], "raw mean temp wettest quarter":[21.7222222222], "raw min temp coldest period":[8.5555555556], "raw moisture index seasonality":[24.3333333333], "raw precipitation coldets quarter":[238.8888888889], "raw precipitation driest period":[6.5], "raw precipitation driest quarter":[169.1666666667], "raw precipitation seasonality":[69.4444444444], 
  "raw precipitation warmest quarter":[812.7222222222], "raw precipitation wettest period":[91.2777777778], "raw precipitation wettest quarter":[998.7222222222], "raw radiation coldest quarter":[13.6666666667], "raw radiation driest quarter":[17.1666666667], "raw radiation seasonality":[21.3333333333], "raw radiation warmest quarter":[20.3333333333], "raw radiation wettest quarter":[18.2777777778], "raw relief":[163.1111111111], "raw ridgetopflat":[0], "raw rockalklty":[4.3888888889], "raw rockgrainsz":[5.5], 
  "raw rockhardness":[6.0555555556], "raw rocknutrnt":[4.4444444444], "raw roughness":[11.8888888889], "raw sapk 1 1000 g sand":[52583.3333333333], "raw slope":[8.5], "raw soildepth":[.8333333333], "raw solpawhc":[156.6666666667], "raw temperature annual range":[18.6111111111], "raw temperature seasonality":[.6111111111], "raw thpk 1 1000 g thickness":[272.0555555556], "raw twi":[5.0555555556], "raw valleybottom":[5.5555555556]}, "own":{"modelled annual mean moisture index":[.9350000024], "modelled annual mean rad":[18.0500001907], 
  "modelled annual mean temp":[20.1999998093], "modelled annual precipitation":[2948], "modelled clpk 1 1000 g clay":[42E3], "modelled erosional":[100], "modelled highest period moisture index":[1], "modelled highest period radiation":[25.0500001907], "modelled hydraulic conductivity ksat":[300], "modelled isothermality":[.5400000215], "modelled lowest period moisture index":[.5549999774], "modelled lowest period radiation":[12.4000000954], "modelled max temp warmest period":[28.6499996185], "modelled mean diurnal range":[9.4500002861], 
  "modelled mean moisture index coldest quarter":[1], "modelled mean moisture index highest quarter MI":[1], "modelled mean moisture index lowest quater MI":[.7350000143], "modelled mean moisture index warmest quarter":[.9200000167], "modelled mean temp coldest quarter":[16.4500007629], "modelled mean temp driest quater":[19.4000005722], "modelled mean temp warmer quarter":[23.4000005722], "modelled mean temp wettest quarter":[22.6499996185], "modelled min temp coldest period":[11.3000001907], "modelled moisture index seasonality":[14], 
  "modelled phos":[.0769999996], "modelled precipitation coldets quarter":[428.5], "modelled precipitation driest period":[12.5], "modelled precipitation driest quarter":[247], "modelled precipitation seasonality":[68.5], "modelled precipitation warmest quarter":[1054], "modelled precipitation wettest period":[131], "modelled precipitation wettest quarter":[1492], "modelled radiation coldest quarter":[14.75], "modelled radiation driest quarter":[19.6499996185], "modelled radiation seasonality":[20], 
  "modelled radiation warmest quarter":[20.75], "modelled radiation wettest quarter":[18.0500001907], "modelled relief":[93.9310970306], "modelled ridgetopflat":[0], "modelled rockalklty":[6], "modelled rockgrainsz":[4], "modelled rockhardness":[7], "modelled rocknutrnt":[6], "modelled roughness":[4.0198574662], "modelled sapk 1 1000 g sand":[44E3], "modelled slope":[5.4142469168], "modelled soildepth":[1.1000000238], "modelled solpawhc":[171], "modelled temperature annual range":[17.4000005722], 
  "modelled temperature seasonality":[.9499999881], "modelled thpk 1 1000 g thickness":[150], "modelled twi":[5.4885058403], "modelled valleybottom":[0], "modelled whpk 1 1000 g water cap":[33E3], "raw annual mean moisture index":[0], "raw annual mean rad":[18], "raw annual mean temp":[20], "raw annual precipitation":[3017.6666666667], "raw clpk 1 1000 g clay":[42E3], "raw erosional":[100], "raw highest period moisture index":[1], "raw highest period radiation":[25], "raw hydraulic conductivity ksat":[300], 
  "raw lowest period moisture index":[0], "raw lowest period radiation":[12], "raw max temp warmest period":[28], "raw mean diurnal range":[9], "raw mean moisture index coldest quarter":[1], "raw mean moisture index highest quarter MI":[1], "raw mean moisture index lowest quater MI":[0], "raw mean moisture index warmest quarter":[0], "raw mean temp coldest quarter":[16], "raw mean temp driest quater":[19], "raw mean temp warmer quarter":[23], "raw mean temp wettest quarter":[22], "raw min temp coldest period":[11], 
  "raw moisture index seasonality":[13.6666666667], "raw precipitation coldets quarter":[437], "raw precipitation driest period":[12.6666666667], "raw precipitation driest quarter":[252.3333333333], "raw precipitation seasonality":[68.6666666667], "raw precipitation warmest quarter":[1077.3333333333], "raw precipitation wettest period":[134.3333333333], "raw precipitation wettest quarter":[1531], "raw radiation coldest quarter":[14], "raw radiation driest quarter":[19], "raw radiation seasonality":[20], 
  "raw radiation warmest quarter":[20], "raw radiation wettest quarter":[18], "raw relief":[113], "raw ridgetopflat":[0], "raw rockalklty":[6], "raw rockgrainsz":[4], "raw rockhardness":[7], "raw rocknutrnt":[6], "raw roughness":[4.6666666667], "raw sapk 1 1000 g sand":[44E3], "raw slope":[6.3333333333], "raw soildepth":[1], "raw solpawhc":[165.6666666667], "raw temperature annual range":[17], "raw temperature seasonality":[0], "raw thpk 1 1000 g thickness":[150], "raw twi":[5.3333333333], "raw valleybottom":[0]}, 
  "phylogeny":{"modelled annual mean moisture index":[.8325000107], "modelled annual mean rad":[18.5249996185], "modelled annual mean temp":[20.9250001907], "modelled annual precipitation":[2179.25], "modelled clpk 1 1000 g clay":[35250], "modelled erosional":[100], "modelled highest period moisture index":[1], "modelled highest period radiation":[25.2750000954], "modelled hydraulic conductivity ksat":[250], "modelled isothermality":[.5450000167], "modelled lowest period moisture index":[.3475000001], 
  "modelled lowest period radiation":[13.3499999046], "modelled max temp warmest period":[29.2249999046], "modelled mean diurnal range":[9.5], "modelled mean moisture index coldest quarter":[.8774999976], "modelled mean moisture index highest quarter MI":[1], "modelled mean moisture index lowest quater MI":[.4975000024], "modelled mean moisture index warmest quarter":[.8824999928], "modelled mean temp coldest quarter":[17.125], "modelled mean temp driest quater":[19.0499997139], "modelled mean temp warmer quarter":[24.0749998093], 
  "modelled mean temp wettest quarter":[23.5500001907], "modelled min temp coldest period":[11.75], "modelled moisture index seasonality":[28.5], "modelled phos":[.0491249994], "modelled precipitation coldets quarter":[234.25], "modelled precipitation driest period":[5.5], "modelled precipitation driest quarter":[157.75], "modelled precipitation seasonality":[79], "modelled precipitation warmest quarter":[919.25], "modelled precipitation wettest period":[108.75], "modelled precipitation wettest quarter":[1209.25], 
  "modelled radiation coldest quarter":[15.4999997616], "modelled radiation driest quarter":[18.9500002861], "modelled radiation seasonality":[18.75], "modelled radiation warmest quarter":[21], "modelled radiation wettest quarter":[18.4499998093], "modelled relief":[191.561460495], "modelled ridgetopflat":[0], "modelled rockalklty":[4.5], "modelled rockgrainsz":[4.5], "modelled rockhardness":[6.5], "modelled rocknutrnt":[5.5], "modelled roughness":[11.7312440872], "modelled sapk 1 1000 g sand":[46500], 
  "modelled slope":[10.01773417], "modelled soildepth":[1.2000000179], "modelled solpawhc":[164.5], "modelled temperature annual range":[17.4500000477], "modelled temperature seasonality":[.9424999952], "modelled thpk 1 1000 g thickness":[195.25], "modelled twi":[7.2423673272], "modelled valleybottom":[0], "modelled whpk 1 1000 g water cap":[35500], "raw annual mean moisture index":[0], "raw annual mean rad":[18], "raw annual mean temp":[20.5], "raw annual precipitation":[2179.25], "raw clpk 1 1000 g clay":[35250], 
  "raw erosional":[100], "raw highest period moisture index":[1], "raw highest period radiation":[25], "raw hydraulic conductivity ksat":[250], "raw lowest period moisture index":[0], "raw lowest period radiation":[13], "raw max temp warmest period":[28.5], "raw mean diurnal range":[9], "raw mean moisture index coldest quarter":[.75], "raw mean moisture index highest quarter MI":[1], "raw mean moisture index lowest quater MI":[0], "raw mean moisture index warmest quarter":[0], "raw mean temp coldest quarter":[16.75], 
  "raw mean temp driest quater":[18.75], "raw mean temp warmer quarter":[23.75], "raw mean temp wettest quarter":[23], "raw min temp coldest period":[11], "raw moisture index seasonality":[28.5], "raw precipitation coldets quarter":[234.25], "raw precipitation driest period":[5.5], "raw precipitation driest quarter":[157.75], "raw precipitation seasonality":[79], "raw precipitation warmest quarter":[919.25], "raw precipitation wettest period":[108.75], "raw precipitation wettest quarter":[1209.25], 
  "raw radiation coldest quarter":[15.25], "raw radiation driest quarter":[18.75], "raw radiation seasonality":[18.75], "raw radiation warmest quarter":[20.75], "raw radiation wettest quarter":[18], "raw relief":[191], "raw ridgetopflat":[0], "raw rockalklty":[4.5], "raw rockgrainsz":[4.5], "raw rockhardness":[6.5], "raw rocknutrnt":[5.5], "raw roughness":[11.25], "raw sapk 1 1000 g sand":[46500], "raw slope":[9.5], "raw soildepth":[1], "raw solpawhc":[164.5], "raw temperature annual range":[17], 
  "raw temperature seasonality":[.25], "raw thpk 1 1000 g thickness":[195.25], "raw twi":[6.75], "raw valleybottom":[0]}, "in":{"modelled annual mean moisture index":[.8511999941], "modelled annual mean rad":[17.7549997139], "modelled annual mean temp":[20.1320000076], "modelled annual precipitation":[2004.6], "modelled clpk 1 1000 g clay":[24337.5], "modelled erosional":[100], "modelled highest period moisture index":[1], "modelled highest period radiation":[24.4609998512], "modelled hydraulic conductivity ksat":[230], 
  "modelled isothermality":[.519799999], "modelled lowest period moisture index":[.4349999921], "modelled lowest period radiation":[11.9399999428], "modelled max temp warmest period":[28.5809999847], "modelled mean diurnal range":[9.3529999971], "modelled mean moisture index coldest quarter":[.9477999979], "modelled mean moisture index highest quarter MI":[1], "modelled mean moisture index lowest quater MI":[.5399000007], "modelled mean moisture index warmest quarter":[.8883000004], "modelled mean temp coldest quarter":[16.0029999352], 
  "modelled mean temp driest quater":[17.4470001602], "modelled mean temp warmer quarter":[23.6520002556], "modelled mean temp wettest quarter":[23.2579998207], "modelled min temp coldest period":[10.5970001769], "modelled moisture index seasonality":[24.44], "modelled phos":[.0236599989], "modelled precipitation coldets quarter":[229.2], "modelled precipitation driest period":[8.44], "modelled precipitation driest quarter":[170.66], "modelled precipitation seasonality":[66.77], "modelled precipitation warmest quarter":[871.37], 
  "modelled precipitation wettest period":[92.64], "modelled precipitation wettest quarter":[1050.83], "modelled radiation coldest quarter":[14.0290001678], "modelled radiation driest quarter":[17.2499999809], "modelled radiation seasonality":[21.92], "modelled radiation warmest quarter":[20.4790001106], "modelled radiation wettest quarter":[18.3959999466], "modelled relief":[180.825651741], "modelled ridgetopflat":[0], "modelled rockalklty":[4.92], "modelled rockgrainsz":[6.22], "modelled rockhardness":[6.34], 
  "modelled rocknutrnt":[4.34], "modelled roughness":[41.1613443279], "modelled sapk 1 1000 g sand":[52267.5], "modelled slope":[10.5619576693], "modelled soildepth":[1.3479999959], "modelled solpawhc":[183.33], "modelled temperature annual range":[17.9670000267], "modelled temperature seasonality":[1.0439999992], "modelled thpk 1 1000 g thickness":[226.16], "modelled twi":[5.7365186501], "modelled valleybottom":[1.0625], "modelled whpk 1 1000 g water cap":[35632.5], "raw annual mean moisture index":[0], 
  "raw annual mean rad":[17], "raw annual mean temp":[18.8571428571], "raw annual precipitation":[1932.7142857143], "raw clpk 1 1000 g clay":[23678.5714285714], "raw erosional":[100], "raw highest period moisture index":[1], "raw highest period radiation":[24.1428571429], "raw hydraulic conductivity ksat":[242.8571428571], "raw lowest period moisture index":[0], "raw lowest period radiation":[11], "raw max temp warmest period":[27.4285714286], "raw mean diurnal range":[9], "raw mean moisture index coldest quarter":[.4285714286], 
  "raw mean moisture index highest quarter MI":[1], "raw mean moisture index lowest quater MI":[0], "raw mean moisture index warmest quarter":[0], "raw mean temp coldest quarter":[14.5714285714], "raw mean temp driest quater":[16], "raw mean temp warmer quarter":[22.5714285714], "raw mean temp wettest quarter":[22.1428571429], "raw min temp coldest period":[9.2857142857], "raw moisture index seasonality":[23.5714285714], "raw precipitation coldets quarter":[226.2857142857], "raw precipitation driest period":[8.4285714286], 
  "raw precipitation driest quarter":[171.4285714286], "raw precipitation seasonality":[64.8571428571], "raw precipitation warmest quarter":[833.5714285714], "raw precipitation wettest period":[89], "raw precipitation wettest quarter":[1003.5714285714], "raw radiation coldest quarter":[13.1428571429], "raw radiation driest quarter":[16.4285714286], "raw radiation seasonality":[22.8571428571], "raw radiation warmest quarter":[20.2857142857], "raw radiation wettest quarter":[17.8571428571], "raw relief":[182.5714285714], 
  "raw ridgetopflat":[0], "raw rockalklty":[4], "raw rockgrainsz":[4.8571428571], "raw rockhardness":[5.1428571429], "raw rocknutrnt":[3.7142857143], "raw roughness":[29.7142857143], "raw sapk 1 1000 g sand":[54535.7142857143], "raw slope":[10.1428571429], "raw soildepth":[1], "raw solpawhc":[188.7142857143], "raw temperature annual range":[18], "raw temperature seasonality":[.4285714286], "raw thpk 1 1000 g thickness":[253.4285714286], "raw twi":[4.8571428571], "raw valleybottom":[0]}, "newick":{"modelled annual mean moisture index":[.8419692351], 
  "modelled annual mean rad":[15.4089230904], "modelled annual mean temp":[11.7830769011], "modelled annual precipitation":[1282.2246153846], "modelled clpk 1 1000 g clay":[21682.3076923077], "modelled erosional":[98.4807692308], "modelled highest period moisture index":[.9973846157], "modelled highest period radiation":[24.0646153729], "modelled hydraulic conductivity ksat":[180.3692307692], "modelled isothermality":[.4703076909], "modelled lowest period moisture index":[.48273846], "modelled lowest period radiation":[7.0495384554], 
  "modelled max temp warmest period":[23.5836921927], "modelled mean diurnal range":[10.2701538335], "modelled mean moisture index coldest quarter":[.9867076942], "modelled mean moisture index highest quarter MI":[.9953846163], "modelled mean moisture index lowest quater MI":[.5702769235], "modelled mean moisture index warmest quarter":[.6286461528], "modelled mean temp coldest quarter":[6.664307713], "modelled mean temp driest quater":[12.2307692], "modelled mean temp warmer quarter":[16.8929231204], 
  "modelled mean temp wettest quarter":[11.9966153483], "modelled min temp coldest period":[1.7335384761], "modelled moisture index seasonality":[22.3753846154], "modelled phos":[.0354398355], "modelled precipitation coldets quarter":[316.5815384615], "modelled precipitation driest period":[13.1261538462], "modelled precipitation driest quarter":[212.48], "modelled precipitation seasonality":[25.9846153846], "modelled precipitation warmest quarter":[333.4307692308], "modelled precipitation wettest period":[39.5076923077], 
  "modelled precipitation wettest quarter":[446.7507692308], "modelled radiation coldest quarter":[8.8353845684], "modelled radiation driest quarter":[17.0212307989], "modelled radiation seasonality":[39.0307692308], "modelled radiation warmest quarter":[21.3784615619], "modelled radiation wettest quarter":[14.3270768371], "modelled relief":[156.8749819389], "modelled ridgetopflat":[.2884615385], "modelled rockalklty":[4.6646153846], "modelled rockgrainsz":[4.6615384615], "modelled rockhardness":[5.8615384615], 
  "modelled rocknutrnt":[4.5569230769], "modelled roughness":[9.5328148233], "modelled sapk 1 1000 g sand":[58780.7692307692], "modelled slope":[9.5631930516], "modelled soildepth":[1.0756923059], "modelled solpawhc":[151.4553846154], "modelled temperature annual range":[21.8473846553], "modelled temperature seasonality":[1.4144307659], "modelled thpk 1 1000 g thickness":[278.2092307692], "modelled twi":[4.8256355231], "modelled valleybottom":[.4807692308], "modelled whpk 1 1000 g water cap":[45223.0769230769], 
  "raw annual mean moisture index":[.0083333333], "raw annual mean rad":[15], "raw annual mean temp":[11.5], "raw annual precipitation":[1295.7833333333], "raw clpk 1 1000 g clay":[22614.5833333333], "raw erosional":[98.5166666667], "raw highest period moisture index":[.9583333333], "raw highest period radiation":[23.625], "raw hydraulic conductivity ksat":[181.4166666667], "raw lowest period moisture index":[0], "raw lowest period radiation":[6.7916666667], "raw max temp warmest period":[23.2833333333], 
  "raw mean diurnal range":[9.8083333333], "raw mean moisture index coldest quarter":[.6333333333], "raw mean moisture index highest quarter MI":[.8583333333], "raw mean moisture index lowest quater MI":[.0083333333], "raw mean moisture index warmest quarter":[.0083333333], "raw mean temp coldest quarter":[6.4], "raw mean temp driest quater":[11.8333333333], "raw mean temp warmer quarter":[16.6], "raw mean temp wettest quarter":[11.9], "raw min temp coldest period":[1.75], "raw moisture index seasonality":[22.375], 
  "raw precipitation coldets quarter":[312.6666666667], "raw precipitation driest period":[13.0083333333], "raw precipitation driest quarter":[212.0583333333], "raw precipitation seasonality":[26.6833333333], "raw precipitation warmest quarter":[347.1833333333], "raw precipitation wettest period":[40.8166666667], "raw precipitation wettest quarter":[460.0583333333], "raw radiation coldest quarter":[8.4333333333], "raw radiation driest quarter":[16.5416666667], "raw radiation seasonality":[38.6916666667], 
  "raw radiation warmest quarter":[20.8916666667], "raw radiation wettest quarter":[13.8916666667], "raw relief":[157], "raw ridgetopflat":[.1], "raw rockalklty":[4.4083333333], "raw rockgrainsz":[4.6083333333], "raw rockhardness":[5.8], "raw rocknutrnt":[4.35], "raw roughness":[9.5166666667], "raw sapk 1 1000 g sand":[57129.1666666667], "raw slope":[9.1583333333], "raw soildepth":[.6083333333], "raw solpawhc":[151.35], "raw temperature annual range":[21.4333333333], "raw temperature seasonality":[.9416666667], 
  "raw thpk 1 1000 g thickness":[279.0416666667], "raw twi":[4.5416666667], "raw valleybottom":[.6083333333]}, "form":{"modelled annual mean moisture index":[.9756666799], "modelled annual mean rad":[12.0000000954], "modelled annual mean temp":[8.4266665936], "modelled annual precipitation":[1407.3333333333], "modelled clpk 1 1000 g clay":[24058.3333333333], "modelled erosional":[99.1666666667], "modelled highest period moisture index":[1], "modelled highest period radiation":[20.980000178], "modelled hydraulic conductivity ksat":[166.6666666667], 
  "modelled isothermality":[.4939999938], "modelled lowest period moisture index":[.8756666621], "modelled lowest period radiation":[3.9166666349], "modelled max temp warmest period":[18.3566667557], "modelled mean diurnal range":[8.6166667461], "modelled mean moisture index coldest quarter":[1], "modelled mean moisture index highest quarter MI":[1], "modelled mean moisture index lowest quater MI":[.9139999986], "modelled mean moisture index warmest quarter":[.9393333415], "modelled mean temp coldest quarter":[4.6199999571], 
  "modelled mean temp driest quater":[12.2033334096], "modelled mean temp warmer quarter":[12.313333416], "modelled mean temp wettest quarter":[6.9966665745], "modelled min temp coldest period":[1.009999985], "modelled moisture index seasonality":[4.4], "modelled phos":[.0296393858], "modelled precipitation coldets quarter":[405], "modelled precipitation driest period":[18.4333333333], "modelled precipitation driest quarter":[267.1666666667], "modelled precipitation seasonality":[17.3666666667], 
  "modelled precipitation warmest quarter":[272.2], "modelled precipitation wettest period":[36.7], "modelled precipitation wettest quarter":[425.8333333333], "modelled radiation coldest quarter":[5.6500000318], "modelled radiation driest quarter":[17.3266669591], "modelled radiation seasonality":[50.7666666667], "modelled radiation warmest quarter":[18.4133333206], "modelled radiation wettest quarter":[11.630000035], "modelled relief":[187.601335907], "modelled ridgetopflat":[0], "modelled rockalklty":[5.8], 
  "modelled rockgrainsz":[5.0333333333], "modelled rockhardness":[5.7666666667], "modelled rocknutrnt":[5.7666666667], "modelled roughness":[11.1428800742], "modelled sapk 1 1000 g sand":[54641.6666666666], "modelled slope":[12.2245521386], "modelled soildepth":[1.0466666738], "modelled solpawhc":[160.1666666667], "modelled temperature annual range":[17.3433331172], "modelled temperature seasonality":[1.0673333148], "modelled thpk 1 1000 g thickness":[322.6333333333], "modelled twi":[5.1204978943], 
  "modelled valleybottom":[.8333333333], "modelled whpk 1 1000 g water cap":[53558.3333333333], "raw annual mean moisture index":[.0909090909], "raw annual mean rad":[11.7272727273], "raw annual mean temp":[7.9090909091], "raw annual precipitation":[1400], "raw clpk 1 1000 g clay":[25386.3636363636], "raw erosional":[99.3636363636], "raw highest period moisture index":[1], "raw highest period radiation":[20.8181818182], "raw hydraulic conductivity ksat":[172.7272727273], "raw lowest period moisture index":[.0909090909], 
  "raw lowest period radiation":[3.8181818182], "raw max temp warmest period":[18.0909090909], "raw mean diurnal range":[8.2727272727], "raw mean moisture index coldest quarter":[1], "raw mean moisture index highest quarter MI":[1], "raw mean moisture index lowest quater MI":[.0909090909], "raw mean moisture index warmest quarter":[.0909090909], "raw mean temp coldest quarter":[4.2727272727], "raw mean temp driest quater":[11.9090909091], "raw mean temp warmer quarter":[11.9090909091], "raw mean temp wettest quarter":[6.2727272727], 
  "raw min temp coldest period":[.6363636364], "raw moisture index seasonality":[4.5454545455], "raw precipitation coldets quarter":[404.1818181818], "raw precipitation driest period":[18], "raw precipitation driest quarter":[264.1818181818], "raw precipitation seasonality":[17.6363636364], "raw precipitation warmest quarter":[269], "raw precipitation wettest period":[36.3636363636], "raw precipitation wettest quarter":[423.1818181818], "raw radiation coldest quarter":[5.0909090909], "raw radiation driest quarter":[17.1818181818], 
  "raw radiation seasonality":[50.5454545455], "raw radiation warmest quarter":[18.0909090909], "raw radiation wettest quarter":[11], "raw relief":[214.8181818182], "raw ridgetopflat":[0], "raw rockalklty":[5.8181818182], "raw rockgrainsz":[4.9090909091], "raw rockhardness":[5.8181818182], "raw rocknutrnt":[5.8181818182], "raw roughness":[11.5454545455], "raw sapk 1 1000 g sand":[52431.8181818182], "raw slope":[13], "raw soildepth":[.7272727273], "raw solpawhc":[167.5454545455], "raw temperature annual range":[16.9090909091], 
  "raw temperature seasonality":[.8181818182], "raw thpk 1 1000 g thickness":[308.6363636364], "raw twi":[4.3636363636], "raw valleybottom":[.5454545455]}, "tree":{"modelled annual mean moisture index":[.2800000012], "modelled annual mean rad":[22.1500005722], "modelled annual mean temp":[26.4499998093], "modelled annual precipitation":[732], "modelled clpk 1 1000 g clay":[41500], "modelled erosional":[100], "modelled highest period moisture index":[.9199999869], "modelled highest period radiation":[26.8000001907], 
  "modelled hydraulic conductivity ksat":[65], "modelled isothermality":[.5400000215], "modelled lowest period moisture index":[.0049999999], "modelled lowest period radiation":[17], "modelled max temp warmest period":[38.5], "modelled mean diurnal range":[14.9500002861], "modelled mean moisture index coldest quarter":[.0299999993], "modelled mean moisture index highest quarter MI":[.8199999928], "modelled mean moisture index lowest quater MI":[.0099999998], "modelled mean moisture index warmest quarter":[.2599999979], 
  "modelled mean temp coldest quarter":[21], "modelled mean temp driest quater":[23.25], "modelled mean temp warmer quarter":[30.5], "modelled mean temp wettest quarter":[29.3500003815], "modelled min temp coldest period":[10.7999997139], "modelled moisture index seasonality":[120], "modelled phos":[.0149999997], "modelled precipitation coldets quarter":[14], "modelled precipitation driest period":[0], "modelled precipitation driest quarter":[0], "modelled precipitation seasonality":[126], "modelled precipitation warmest quarter":[239.5], 
  "modelled precipitation wettest period":[52], "modelled precipitation wettest quarter":[546], "modelled radiation coldest quarter":[18.8500003815], "modelled radiation driest quarter":[21.9499998093], "modelled radiation seasonality":[13.5], "modelled radiation warmest quarter":[25.25], "modelled radiation wettest quarter":[22.4000005722], "modelled relief":[98.6766052246], "modelled ridgetopflat":[0], "modelled rockalklty":[5.5], "modelled rockgrainsz":[4.5], "modelled rockhardness":[4.5], "modelled rocknutrnt":[5], 
  "modelled roughness":[17.0805878639], "modelled sapk 1 1000 g sand":[37E3], "modelled slope":[5.9404842854], "modelled soildepth":[1.0000000298], "modelled solpawhc":[117.5], "modelled temperature annual range":[27.75], "modelled temperature seasonality":[1.2549999952], "modelled thpk 1 1000 g thickness":[150], "modelled twi":[8.5943181515], "modelled valleybottom":[0], "modelled whpk 1 1000 g water cap":[20500], "raw annual mean moisture index":[0], "raw annual mean rad":[22], "raw annual mean temp":[26], 
  "raw annual precipitation":[732], "raw clpk 1 1000 g clay":[41500], "raw erosional":[100], "raw highest period moisture index":[0], "raw highest period radiation":[26], "raw hydraulic conductivity ksat":[65], "raw lowest period moisture index":[0], "raw lowest period radiation":[16.5], "raw max temp warmest period":[38], "raw mean diurnal range":[14.5], "raw mean moisture index coldest quarter":[0], "raw mean moisture index highest quarter MI":[0], "raw mean moisture index lowest quater MI":[0], 
  "raw mean moisture index warmest quarter":[0], "raw mean temp coldest quarter":[20.5], "raw mean temp driest quater":[22.5], "raw mean temp warmer quarter":[30], "raw mean temp wettest quarter":[29], "raw min temp coldest period":[10.5], "raw moisture index seasonality":[120], "raw precipitation coldets quarter":[14], "raw precipitation driest period":[0], "raw precipitation driest quarter":[0], "raw precipitation seasonality":[126], "raw precipitation warmest quarter":[239.5], "raw precipitation wettest period":[52], 
  "raw precipitation wettest quarter":[546], "raw radiation coldest quarter":[18.5], "raw radiation driest quarter":[21.5], "raw radiation seasonality":[13.5], "raw radiation warmest quarter":[25], "raw radiation wettest quarter":[22], "raw relief":[98], "raw ridgetopflat":[0], "raw rockalklty":[5.5], "raw rockgrainsz":[4.5], "raw rockhardness":[4.5], "raw rocknutrnt":[5], "raw roughness":[16.5], "raw sapk 1 1000 g sand":[37E3], "raw slope":[5.5], "raw soildepth":[.5], "raw solpawhc":[117.5], "raw temperature annual range":[27], 
  "raw temperature seasonality":[1], "raw thpk 1 1000 g thickness":[150], "raw twi":[8], "raw valleybottom":[0]}, "take":{"modelled annual mean moisture index":[.7365444446], "modelled annual mean rad":[17.1275078493], "modelled annual mean temp":[16.1311112493], "modelled annual precipitation":[1255.8687301587], "modelled clpk 1 1000 g clay":[21822.0634920634], "modelled erosional":[91.9027777778], "modelled highest period moisture index":[.9502539679], "modelled highest period radiation":[24.715031606], 
  "modelled hydraulic conductivity ksat":[152.3], "modelled isothermality":[.4938333283], "modelled lowest period moisture index":[.3612952372], "modelled lowest period radiation":[9.6579523886], "modelled max temp warmest period":[27.2970475527], "modelled mean diurnal range":[10.9151110977], "modelled mean moisture index coldest quarter":[.8659396845], "modelled mean moisture index highest quarter MI":[.9381000012], "modelled mean moisture index lowest quater MI":[.4386444416], "modelled mean moisture index warmest quarter":[.5990571438], 
  "modelled mean temp coldest quarter":[11.0153809807], "modelled mean temp driest quater":[14.1643810366], "modelled mean temp warmer quarter":[21.0059206676], "modelled mean temp wettest quarter":[18.1127459956], "modelled min temp coldest period":[5.1418412599], "modelled moisture index seasonality":[31.663015873], "modelled phos":[.0397253511], "modelled precipitation coldets quarter":[243.0065079365], "modelled precipitation driest period":[7.4119047619], "modelled precipitation driest quarter":[158.4253968254], 
  "modelled precipitation seasonality":[45.0196825397], "modelled precipitation warmest quarter":[418.6682539683], "modelled precipitation wettest period":[49.3933333333], "modelled precipitation wettest quarter":[535.4804761905], "modelled radiation coldest quarter":[11.5418730642], "modelled radiation driest quarter":[16.7123016274], "modelled radiation seasonality":[30.5920634921], "modelled radiation warmest quarter":[21.9849682202], "modelled radiation wettest quarter":[17.2387459149], "modelled relief":[97.2765801426], 
  "modelled ridgetopflat":[.6339285714], "modelled rockalklty":[4.7514285714], "modelled rockgrainsz":[4.3793650794], "modelled rockhardness":[5.7], "modelled rocknutrnt":[4.7347619048], "modelled roughness":[13.9966933051], "modelled sapk 1 1000 g sand":[61094.5238095238], "modelled slope":[6.4187526792], "modelled soildepth":[.9957460357], "modelled solpawhc":[125.65], "modelled temperature annual range":[22.1440794706], "modelled temperature seasonality":[1.3577285743], "modelled thpk 1 1000 g thickness":[276.8314285714], 
  "modelled twi":[6.0713178382], "modelled valleybottom":[5.5426587302], "modelled whpk 1 1000 g water cap":[41211.3919047619], "raw annual mean moisture index":[0], "raw annual mean rad":[16.0625], "raw annual mean temp":[15.203125], "raw annual precipitation":[1208.296875], "raw clpk 1 1000 g clay":[20792.96875], "raw erosional":[90.5625], "raw highest period moisture index":[.703125], "raw highest period radiation":[23.421875], "raw hydraulic conductivity ksat":[141.09375], "raw lowest period moisture index":[0], 
  "raw lowest period radiation":[8.8125], "raw max temp warmest period":[25.828125], "raw mean diurnal range":[10.046875], "raw mean moisture index coldest quarter":[.40625], "raw mean moisture index highest quarter MI":[.640625], "raw mean moisture index lowest quater MI":[0], "raw mean moisture index warmest quarter":[.015625], "raw mean temp coldest quarter":[10.265625], "raw mean temp driest quater":[13.1875], "raw mean temp warmer quarter":[19.796875], "raw mean temp wettest quarter":[16.9375], 
  "raw min temp coldest period":[4.53125], "raw moisture index seasonality":[29.625], "raw precipitation coldets quarter":[232.109375], "raw precipitation driest period":[7.28125], "raw precipitation driest quarter":[157.328125], "raw precipitation seasonality":[42.140625], "raw precipitation warmest quarter":[401.015625], "raw precipitation wettest period":[45.546875], "raw precipitation wettest quarter":[506.40625], "raw radiation coldest quarter":[10.625], "raw radiation driest quarter":[15.6875], 
  "raw radiation seasonality":[29.78125], "raw radiation warmest quarter":[20.71875], "raw radiation wettest quarter":[16.421875], "raw relief":[100.15625], "raw ridgetopflat":[.484375], "raw rockalklty":[4.109375], "raw rockgrainsz":[3.84375], "raw rockhardness":[5.1875], "raw rocknutrnt":[4], "raw roughness":[13.9375], "raw sapk 1 1000 g sand":[57734.375], "raw slope":[6.078125], "raw soildepth":[.5], "raw solpawhc":[116.21875], "raw temperature annual range":[21.03125], "raw temperature seasonality":[.90625], 
  "raw thpk 1 1000 g thickness":[267.40625], "raw twi":[5.46875], "raw valleybottom":[4.953125]}, "care":{"modelled annual mean moisture index":[.7523631571], "modelled annual mean rad":[15.7872632313], "modelled annual mean temp":[14.148368388], "modelled annual precipitation":[1072.0410526316], "modelled clpk 1 1000 g clay":[20124.6052631579], "modelled erosional":[85.6052631579], "modelled highest period moisture index":[.9810842105], "modelled highest period radiation":[24.9694211327], "modelled hydraulic conductivity ksat":[130.0578947368], 
  "modelled isothermality":[.4845000008], "modelled lowest period moisture index":[.323263157], "modelled lowest period radiation":[7.2001579207], "modelled max temp warmest period":[25.3658948326], "modelled mean diurnal range":[10.2003158394], "modelled mean moisture index coldest quarter":[.9645894769], "modelled mean moisture index highest quarter MI":[.9754421075], "modelled mean moisture index lowest quater MI":[.4105263146], "modelled mean moisture index warmest quarter":[.4492105245], "modelled mean temp coldest quarter":[9.284631582], 
  "modelled mean temp driest quater":[15.7744210745], "modelled mean temp warmer quarter":[18.8259999486], "modelled mean temp wettest quarter":[13.4179999638], "modelled min temp coldest period":[4.3915789415], "modelled moisture index seasonality":[34.51], "modelled phos":[.0319927152], "modelled precipitation coldets quarter":[293.6242105263], "modelled precipitation driest period":[7.7615789474], "modelled precipitation driest quarter":[158.1031578947], "modelled precipitation seasonality":[32.4805263158], 
  "modelled precipitation warmest quarter":[240.0526315789], "modelled precipitation wettest period":[34.3584210526], "modelled precipitation wettest quarter":[384.7031578947], "modelled radiation coldest quarter":[9.1081578742], "modelled radiation driest quarter":[19.6293685346], "modelled radiation seasonality":[39.0931578947], "modelled radiation warmest quarter":[22.166210543], "modelled radiation wettest quarter":[13.3475263033], "modelled relief":[74.8392543699], "modelled ridgetopflat":[4.1447368421], 
  "modelled rockalklty":[4.9478947368], "modelled rockgrainsz":[4.0494736842], "modelled rockhardness":[5.6621052632], "modelled rocknutrnt":[4.4805263158], "modelled roughness":[17.1395764974], "modelled sapk 1 1000 g sand":[60505.3947368421], "modelled slope":[4.8369444082], "modelled soildepth":[.9438947287], "modelled solpawhc":[110.2721052632], "modelled temperature annual range":[20.8948948519], "modelled temperature seasonality":[1.3039000004], "modelled thpk 1 1000 g thickness":[270.7410526316], 
  "modelled twi":[5.8377228775], "modelled valleybottom":[11.2171052632], "modelled whpk 1 1000 g water cap":[38992.5510526315], "raw annual mean moisture index":[0], "raw annual mean rad":[14.5428571429], "raw annual mean temp":[12.8285714286], "raw annual precipitation":[1000.6], "raw clpk 1 1000 g clay":[18821.4285714286], "raw erosional":[77.6], "raw highest period moisture index":[.7714285714], "raw highest period radiation":[23.1428571429], "raw hydraulic conductivity ksat":[122.2857142857], 
  "raw lowest period moisture index":[0], "raw lowest period radiation":[6.4571428571], "raw max temp warmest period":[23.5142857143], "raw mean diurnal range":[9.2], "raw mean moisture index coldest quarter":[.4285714286], "raw mean moisture index highest quarter MI":[.7428571429], "raw mean moisture index lowest quater MI":[0], "raw mean moisture index warmest quarter":[0], "raw mean temp coldest quarter":[8.3714285714], "raw mean temp driest quater":[14.3428571429], "raw mean temp warmer quarter":[17.3428571429], 
  "raw mean temp wettest quarter":[12.3428571429], "raw min temp coldest period":[3.6], "raw moisture index seasonality":[32.3428571429], "raw precipitation coldets quarter":[272.2571428571], "raw precipitation driest period":[7.2285714286], "raw precipitation driest quarter":[149.8], "raw precipitation seasonality":[30.2857142857], "raw precipitation warmest quarter":[235.7714285714], "raw precipitation wettest period":[32.0857142857], "raw precipitation wettest quarter":[363.1714285714], "raw radiation coldest quarter":[8.2571428571], 
  "raw radiation driest quarter":[18], "raw radiation seasonality":[37], "raw radiation warmest quarter":[20.4285714286], "raw radiation wettest quarter":[12.1714285714], "raw relief":[73.2285714286], "raw ridgetopflat":[4.2571428571], "raw rockalklty":[4.2], "raw rockgrainsz":[3.6571428571], "raw rockhardness":[4.6], "raw rocknutrnt":[3.8], "raw roughness":[15.9714285714], "raw sapk 1 1000 g sand":[55707.1428571429], "raw slope":[4.4], "raw soildepth":[.3142857143], "raw solpawhc":[99.3714285714], 
  "raw temperature annual range":[19.4857142857], "raw temperature seasonality":[.8857142857], "raw thpk 1 1000 g thickness":[256.2285714286], "raw twi":[5.7428571429], "raw valleybottom":[9.3714285714]}, "to":{"modelled annual mean moisture index":[.3124999981], "modelled annual mean rad":[19.4000000954], "modelled annual mean temp":[17.6749999523], "modelled annual precipitation":[369.5], "modelled clpk 1 1000 g clay":[16375], "modelled erosional":[57.8125], "modelled highest period moisture index":[.7574999928], 
  "modelled highest period radiation":[28.8750004768], "modelled hydraulic conductivity ksat":[200], "modelled isothermality":[.484999992], "modelled lowest period moisture index":[.0299999993], "modelled lowest period radiation":[9.7249999046], "modelled max temp warmest period":[33.1500005722], "modelled mean diurnal range":[13.2000000477], "modelled mean moisture index coldest quarter":[.7025000006], "modelled mean moisture index highest quarter MI":[.7099999934], "modelled mean moisture index lowest quater MI":[.044999999], 
  "modelled mean moisture index warmest quarter":[.0574999992], "modelled mean temp coldest quarter":[11.5250000954], "modelled mean temp driest quater":[21.6499996185], "modelled mean temp warmer quarter":[24.25], "modelled mean temp wettest quarter":[12.1749999523], "modelled min temp coldest period":[5.6000000238], "modelled moisture index seasonality":[90.25], "modelled phos":[.0180416674], "modelled precipitation coldets quarter":[160.25], "modelled precipitation driest period":[0], "modelled precipitation driest quarter":[28.75], 
  "modelled precipitation seasonality":[59.75], "modelled precipitation warmest quarter":[48.75], "modelled precipitation wettest period":[15], "modelled precipitation wettest quarter":[174.5], "modelled radiation coldest quarter":[12.2000000477], "modelled radiation driest quarter":[27.0499997139], "modelled radiation seasonality":[34.75], "modelled radiation warmest quarter":[26.0750002861], "modelled radiation wettest quarter":[11.0250000954], "modelled relief":[10.535130471], "modelled ridgetopflat":[0], 
  "modelled rockalklty":[5], "modelled rockgrainsz":[5.5], "modelled rockhardness":[5.5], "modelled rocknutrnt":[3.75], "modelled roughness":[1.172922425], "modelled sapk 1 1000 g sand":[68250], "modelled slope":[.6775645409], "modelled soildepth":[.875], "modelled solpawhc":[120], "modelled temperature annual range":[27.5250000954], "modelled temperature seasonality":[1.7350000143], "modelled thpk 1 1000 g thickness":[277.75], "modelled twi":[7.6787025928], "modelled valleybottom":[35.9375], "modelled whpk 1 1000 g water cap":[23578.75], 
  "raw annual mean moisture index":[0], "raw annual mean rad":[18.6666666667], "raw annual mean temp":[16.5], "raw annual precipitation":[378], "raw clpk 1 1000 g clay":[14916.6666666667], "raw erosional":[69.5], "raw highest period moisture index":[0], "raw highest period radiation":[28.5], "raw hydraulic conductivity ksat":[233.3333333333], "raw lowest period moisture index":[0], "raw lowest period radiation":[9.1666666667], "raw max temp warmest period":[31.6666666667], "raw mean diurnal range":[12.5], 
  "raw mean moisture index coldest quarter":[0], "raw mean moisture index highest quarter MI":[0], "raw mean moisture index lowest quater MI":[0], "raw mean moisture index warmest quarter":[0], "raw mean temp coldest quarter":[10.8333333333], "raw mean temp driest quater":[21.1666666667], "raw mean temp warmer quarter":[23], "raw mean temp wettest quarter":[11.6666666667], "raw min temp coldest period":[5], "raw moisture index seasonality":[89.1666666667], "raw precipitation coldets quarter":[161.6666666667], 
  "raw precipitation driest period":[0], "raw precipitation driest quarter":[33.1666666667], "raw precipitation seasonality":[59], "raw precipitation warmest quarter":[47.8333333333], "raw precipitation wettest period":[15], "raw precipitation wettest quarter":[176.3333333333], "raw radiation coldest quarter":[11.5], "raw radiation driest quarter":[26.5], "raw radiation seasonality":[35.1666666667], "raw radiation warmest quarter":[25.6666666667], "raw radiation wettest quarter":[10.3333333333], 
  "raw relief":[12.3333333333], "raw ridgetopflat":[0], "raw rockalklty":[4.1666666667], "raw rockgrainsz":[5], "raw rockhardness":[6], "raw rocknutrnt":[3.8333333333], "raw roughness":[1], "raw sapk 1 1000 g sand":[71500], "raw slope":[.3333333333], "raw soildepth":[.5], "raw solpawhc":[122.6666666667], "raw temperature annual range":[26.3333333333], "raw temperature seasonality":[1.1666666667], "raw thpk 1 1000 g thickness":[315.8333333333], "raw twi":[6.6666666667], "raw valleybottom":[29]}, "remove":{"modelled annual mean moisture index":[], 
  "modelled annual mean rad":[], "modelled annual mean temp":[], "modelled annual precipitation":[], "modelled clpk 1 1000 g clay":[], "modelled erosional":[], "modelled highest period moisture index":[], "modelled highest period radiation":[], "modelled hydraulic conductivity ksat":[], "modelled isothermality":[], "modelled lowest period moisture index":[], "modelled lowest period radiation":[], "modelled max temp warmest period":[], "modelled mean diurnal range":[], "modelled mean moisture index coldest quarter":[], 
  "modelled mean moisture index highest quarter MI":[], "modelled mean moisture index lowest quater MI":[], "modelled mean moisture index warmest quarter":[], "modelled mean temp coldest quarter":[], "modelled mean temp driest quater":[], "modelled mean temp warmer quarter":[], "modelled mean temp wettest quarter":[], "modelled min temp coldest period":[], "modelled moisture index seasonality":[], "modelled phos":[], "modelled precipitation coldets quarter":[], "modelled precipitation driest period":[], 
  "modelled precipitation driest quarter":[], "modelled precipitation seasonality":[], "modelled precipitation warmest quarter":[], "modelled precipitation wettest period":[], "modelled precipitation wettest quarter":[], "modelled radiation coldest quarter":[], "modelled radiation driest quarter":[], "modelled radiation seasonality":[], "modelled radiation warmest quarter":[], "modelled radiation wettest quarter":[], "modelled relief":[], "modelled ridgetopflat":[], "modelled rockalklty":[], "modelled rockgrainsz":[], 
  "modelled rockhardness":[], "modelled rocknutrnt":[], "modelled roughness":[], "modelled sapk 1 1000 g sand":[], "modelled slope":[], "modelled soildepth":[], "modelled solpawhc":[], "modelled temperature annual range":[], "modelled temperature seasonality":[], "modelled thpk 1 1000 g thickness":[], "modelled twi":[], "modelled valleybottom":[], "modelled whpk 1 1000 g water cap":[], "raw annual mean moisture index":[0], "raw annual mean rad":[16], "raw annual mean temp":[13.8333333333], "raw annual precipitation":[683.8333333333], 
  "raw clpk 1 1000 g clay":[9833.3333333333], "raw erosional":[67.1666666667], "raw highest period moisture index":[.6666666667], "raw highest period radiation":[26], "raw hydraulic conductivity ksat":[266.6666666667], "raw lowest period moisture index":[0], "raw lowest period radiation":[6.1666666667], "raw max temp warmest period":[25.1666666667], "raw mean diurnal range":[10], "raw mean moisture index coldest quarter":[0], "raw mean moisture index highest quarter MI":[.6666666667], "raw mean moisture index lowest quater MI":[0], 
  "raw mean moisture index warmest quarter":[0], "raw mean temp coldest quarter":[9.5], "raw mean temp driest quater":[18.1666666667], "raw mean temp warmer quarter":[18.5], "raw mean temp wettest quarter":[9.6666666667], "raw min temp coldest period":[5], "raw moisture index seasonality":[61.3333333333], "raw precipitation coldets quarter":[267.8333333333], "raw precipitation driest period":[0], "raw precipitation driest quarter":[84.1666666667], "raw precipitation seasonality":[46], "raw precipitation warmest quarter":[85.6666666667], 
  "raw precipitation wettest period":[24.5], "raw precipitation wettest quarter":[272.8333333333], "raw radiation coldest quarter":[8.3333333333], "raw radiation driest quarter":[24], "raw radiation seasonality":[43.6666666667], "raw radiation warmest quarter":[23.6666666667], "raw radiation wettest quarter":[7.8333333333], "raw relief":[29.6666666667], "raw ridgetopflat":[0], "raw rockalklty":[4.3333333333], "raw rockgrainsz":[4.3333333333], "raw rockhardness":[2.1666666667], "raw rocknutrnt":[2.1666666667], 
  "raw roughness":[21.6666666667], "raw sapk 1 1000 g sand":[81666.6666666667], "raw slope":[1.5], "raw soildepth":[.6666666667], "raw solpawhc":[124.8333333333], "raw temperature annual range":[20.1666666667], "raw temperature seasonality":[1], "raw thpk 1 1000 g thickness":[597.3333333333], "raw twi":[8.8333333333], "raw valleybottom":[6.1666666667]}, "quotes_and_other_html_special_characters":{"modelled annual mean moisture index":[.7600000054], "modelled annual mean rad":[17.4749999046], "modelled annual mean temp":[17.6499996185], 
  "modelled annual precipitation":[1174], "modelled clpk 1 1000 g clay":[36312.5], "modelled erosional":[75], "modelled highest period moisture index":[.962500006], "modelled highest period radiation":[24.5249996185], "modelled hydraulic conductivity ksat":[200], "modelled isothermality":[.5150000006], "modelled lowest period moisture index":[.400000006], "modelled lowest period radiation":[10.2999997139], "modelled max temp warmest period":[28.25], "modelled mean diurnal range":[11.6499998569], 
  "modelled mean moisture index coldest quarter":[.9274999946], "modelled mean moisture index highest quarter MI":[.9399999976], "modelled mean moisture index lowest quater MI":[.4825000018], "modelled mean moisture index warmest quarter":[.6875], "modelled mean temp coldest quarter":[12.5], "modelled mean temp driest quater":[13.875], "modelled mean temp warmer quarter":[22.2500004768], "modelled mean temp wettest quarter":[21.8999996185], "modelled min temp coldest period":[5.5750000477], "modelled moisture index seasonality":[25.25], 
  "modelled phos":[.0735000009], "modelled precipitation coldets quarter":[186.5], "modelled precipitation driest period":[5.75], "modelled precipitation driest quarter":[144.5], "modelled precipitation seasonality":[45.5], "modelled precipitation warmest quarter":[452], "modelled precipitation wettest period":[45.75], "modelled precipitation wettest quarter":[509.5], "modelled radiation coldest quarter":[12.1000001431], "modelled radiation driest quarter":[15.5250000954], "modelled radiation seasonality":[27.5], 
  "modelled radiation warmest quarter":[21.7000002861], "modelled radiation wettest quarter":[19.7750000954], "modelled relief":[77.4553109407], "modelled ridgetopflat":[0], "modelled rockalklty":[4.75], "modelled rockgrainsz":[3], "modelled rockhardness":[4.5], "modelled rocknutrnt":[4.75], "modelled roughness":[16.6225522161], "modelled sapk 1 1000 g sand":[43625], "modelled slope":[4.8600849956], "modelled soildepth":[1.1749999821], "modelled solpawhc":[159.5], "modelled temperature annual range":[22.6749997139], 
  "modelled temperature seasonality":[1.3325000107], "modelled thpk 1 1000 g thickness":[219], "modelled twi":[10.4112542868], "modelled valleybottom":[28.125], "modelled whpk 1 1000 g water cap":[35500], "raw annual mean moisture index":[0], "raw annual mean rad":[17.4], "raw annual mean temp":[17.4], "raw annual precipitation":[1239.4], "raw clpk 1 1000 g clay":[37300], "raw erosional":[90], "raw highest period moisture index":[.6], "raw highest period radiation":[24.2], "raw hydraulic conductivity ksat":[220], 
  "raw lowest period moisture index":[0], "raw lowest period radiation":[10.6], "raw max temp warmest period":[28], "raw mean diurnal range":[11], "raw mean moisture index coldest quarter":[0], "raw mean moisture index highest quarter MI":[.6], "raw mean moisture index lowest quater MI":[0], "raw mean moisture index warmest quarter":[0], "raw mean temp coldest quarter":[12.8], "raw mean temp driest quater":[14.2], "raw mean temp warmer quarter":[22], "raw mean temp wettest quarter":[21.6], "raw min temp coldest period":[5.8], 
  "raw moisture index seasonality":[26.6], "raw precipitation coldets quarter":[177.4], "raw precipitation driest period":[4.6], "raw precipitation driest quarter":[135.6], "raw precipitation seasonality":[52.8], "raw precipitation warmest quarter":[497.4], "raw precipitation wettest period":[52.4], "raw precipitation wettest quarter":[579.6], "raw radiation coldest quarter":[12.2], "raw radiation driest quarter":[15.8], "raw radiation seasonality":[25.8], "raw radiation warmest quarter":[21.2], 
  "raw radiation wettest quarter":[19.2], "raw relief":[81.6], "raw ridgetopflat":[0], "raw rockalklty":[4.6], "raw rockgrainsz":[3], "raw rockhardness":[4.8], "raw rocknutrnt":[5], "raw roughness":[15.4], "raw sapk 1 1000 g sand":[42950], "raw slope":[4.6], "raw soildepth":[.8], "raw solpawhc":[160.8], "raw temperature annual range":[21.6], "raw temperature seasonality":[1], "raw thpk 1 1000 g thickness":[227.8], "raw twi":[10.4], "raw valleybottom":[13.6]}}}], JAM.policy.p3);
  return;
}
var labelType;
var useGradients;
var nativeTextSupport;
var animate;
JAM.call(v35, null, [], JAM.policy.p3);
var Log = {elem:false, write:v36};
var Nav = {elem:false, load:v38};
var settingsPage;
var updateCharacter;
var onSetCharacter;
var onClickAlign;
var onSetRoot;
var onLateralise;
var isLateralise;
var onAnimate;
var onRender;
var onBranchLength;
var onBranchMultiply;
var onGetCharacter;
var st;
var toggleScreen;
updateCharacter = v39;
settingsPage = v40;
var phylojive = JAM.call(v43, null, [], JAM.policy.p3);
JAM.call(v614, null, [], JAM.policy.p3);
JAM.call(v1090, null, [window], JAM.policy.p3);
JAM.call(v1120, null, [jQuery], JAM.policy.p3);
JAM.call(v1147, null, [jQuery], JAM.policy.p3);
JAM.call(v1165, null, [jQuery], JAM.policy.p3);
JAM.call(v1212, null, [jQuery], JAM.policy.p3);
JAM.call(v1235, null, [jQuery], JAM.policy.p3);
JAM.call(v1281, null, [jQuery], JAM.policy.p3);
JAM.call(v1294, null, [jQuery], JAM.policy.p3);
JAM.call(v1351, null, [jQuery], JAM.policy.p3);
var v31091 = jQuery.effects;
if (!v31091) {
  JAM.call(v1390, null, [jQuery], JAM.policy.p3);
}
JAM.call(v1394, null, [jQuery], JAM.policy.p3);
JAM.call(v1400, null, [jQuery], JAM.policy.p3);
JAM.call(v1404, null, [jQuery], JAM.policy.p3);
JAM.call(v1408, null, [jQuery], JAM.policy.p3);
JAM.call(v1412, null, [jQuery], JAM.policy.p3);
JAM.call(v1416, null, [jQuery], JAM.policy.p3);
JAM.call(v1420, null, [jQuery], JAM.policy.p3);
JAM.call(v1424, null, [jQuery], JAM.policy.p3);
JAM.call(v1429, null, [jQuery], JAM.policy.p3);
JAM.call(v1439, null, [jQuery], JAM.policy.p3);
JAM.call(v1444, null, [jQuery], JAM.policy.p3);
JAM.call(v1448, null, [jQuery], JAM.policy.p3);
JAM.call(v1452, null, [jQuery], JAM.policy.p3);
JAM.call(v1481, null, [jQuery], JAM.policy.p3);
JAM.call(v1525, null, [jQuery], JAM.policy.p3);
JAM.call(v1544, null, [jQuery], JAM.policy.p3);
JAM.call(v1579, null, [jQuery], JAM.policy.p3);
JAM.call(v1675, null, [jQuery], JAM.policy.p3);
JAM.call(v1729, null, [jQuery], JAM.policy.p3);
JAM.call(v1744, null, [jQuery], JAM.policy.p3);
JAM.call(v1752, null, [jQuery], JAM.policy.p3);
JAM.call(v1784, null, [jQuery], JAM.policy.p3);
JAM.call(v1843, null, [jQuery], JAM.policy.p3);
JAM.call(v1885, null, [jQuery, document, window], JAM.policy.p3);
Smits = {};
Smits.Common = {nodeIdIncrement:0, activeNode:0, roundFloat:v1886, apply:v1887, addRaphEventHandler:v1890, isInteger:v1891, isXMLSerializerAvailable:v1892, createSvgEl:v1893, createGradientEl:v1894, setCssStyle:v1895};
var v8945 = Smits;
var v31474 = JAM.call(v1903, null, [], JAM.policy.p3);
v8945.PhyloCanvas = v31474;
Smits.PhyloCanvas.prototype = {};
var v8947 = Smits.PhyloCanvas;
var v31475 = JAM.call(v1905, null, [], JAM.policy.p3);
v8947.Node = v31475;
Smits.PhyloCanvas.Node.prototype = {getCountAllChildren:v1906, getCountImmediateChildren:v1907, getMidbranchPosition:v1908};
var v8949 = Smits.PhyloCanvas;
var v31476 = JAM.call(v1914, null, [], JAM.policy.p3);
v8949.NewickParse = v31476;
Smits.PhyloCanvas.NewickParse.prototype = {};
var v8951 = Smits.PhyloCanvas;
var v31477 = JAM.call(v1920, null, [], JAM.policy.p3);
v8951.PhyloxmlParse = v31477;
Smits.PhyloCanvas.PhyloxmlParse.prototype = {};
var v8953 = Smits.PhyloCanvas;
var v31478 = JAM.call(v1926, null, [], JAM.policy.p3);
v8953.NexmlParse = v31478;
Smits.PhyloCanvas.NexmlParse.prototype = {};
var v8955 = Smits.PhyloCanvas;
var v31479 = JAM.call(v1932, null, [], JAM.policy.p3);
v8955.NexmlJsonParse = v31479;
Smits.PhyloCanvas.NexmlParse.prototype = {};
Smits.PhyloCanvas.Render = {};
Smits.PhyloCanvas.Render.Style = {line:{stroke:"rgb(0,0,0)", "stroke-width":1}, text:{"font-family":"Verdana", "font-size":12, "text-anchor":"start"}, path:{stroke:"rgb(0,0,0)", "stroke-width":1}, connectedDash:{stroke:"rgb(200,200,200)", "stroke-dasharray":". "}, textSecantBg:{fill:"#EEE", stroke:"#DDD"}, highlightedEdgeCircle:{fill:"red"}, barChart:{fill:"#003300", stroke:"#DDD"}, getStyle:v1933};
Smits.PhyloCanvas.Render.Parameters = {jsOverride:0, Rectangular:{bufferX:200, paddingX:10, paddingY:20, bufferInnerLabels:10, bufferOuterLabels:5, minHeightBetweenLeaves:10, alignPadding:0, alignRight:!1, showScaleBar:!1}, Circular:{bufferRadius:.33, bufferAngle:20, initStartAngle:160, innerCircleRadius:0, minHeightBetweenLeaves:5, bufferInnerLabels:2, bufferOuterLabels:5}, binaryCharts:[], integratedBinaryCharts:[], barCharts:[], binaryChartBufferInner:5, binaryChartBufferSiblings:.01, binaryChartThickness:15, 
binaryChartDisjointed:!1, barChartBufferInner:3, barChartHeight:50, barChartWidth:.5, mouseRollOver:v1934, mouseRollOut:v1935, set:v1936};
var v8960 = Smits.PhyloCanvas.Render;
var v31480 = JAM.call(v1938, null, [], JAM.policy.p3);
v8960.Line = v31480;
var v8961 = Smits.PhyloCanvas.Render;
var v31481 = JAM.call(v1940, null, [], JAM.policy.p3);
v8961.Text = v31481;
var v8962 = Smits.PhyloCanvas.Render;
var v31482 = JAM.call(v1942, null, [], JAM.policy.p3);
v8962.Path = v31482;
var v8963 = Smits.PhyloCanvas.Render;
var v31483 = JAM.call(v1944, null, [], JAM.policy.p3);
v8963.Circle = v31483;
var v8964 = Smits.PhyloCanvas.Render;
var v31484 = JAM.call(v1946, null, [], JAM.policy.p3);
v8964.SVG = v31484;
Smits.PhyloCanvas.Render.SVG.prototype = {render:v1947, draw:v1948};
var v8966 = Smits.PhyloCanvas.Render;
var v31485 = JAM.call(v1952, null, [], JAM.policy.p3);
v8966.Phylogram = v31485;
Smits.PhyloCanvas.Render.Phylogram.prototype = {};
var v8968 = Smits.PhyloCanvas.Render;
var v31486 = JAM.call(v1956, null, [], JAM.policy.p3);
v8968.CircularPhylogram = v31486;
Smits.PhyloCanvas.Render.CircularPhylogram.prototype = {};
var XMLObjectifier = JAM.call(v1991, null, [], JAM.policy.p3);
JAM.call(v2127.call, v2127, [this], JAM.policy.p3);
JAM.call(v2226.call, v2226, [this], JAM.policy.p3);
JAM.set(document.body, "onload", init)
