introspect(JAM.policy.pFull) {
function v2226() {
  function v2225(a$$944, b$$831, c$$678) {
    function v2224(d$$505, e$$426) {
      var v2227;
      var v8951 = d$$505 === b$$831;
      if (v8951) {
        v2227 = e$$426;
      } else {
        v2227 = d$$505;
      }
      e$$426 = v2227;
      var v2228;
      if (a$$944) {
        v2228 = a$$944(b$$831, e$$426, c$$678);
      } else {
        v2228 = b$$831.trigger("error", b$$831, e$$426, c$$678);
      }
      v2228;
      return;
    }
    return v2224;
  }
  function v2223(a$$942, b$$830, c$$677) {
    function v2222(a$$943) {
      a$$943.setRequestHeader("X-HTTP-Method-Override", d$$504);
      return;
    }
    var d$$504 = H$$5[a$$942];
    var v8952 = !c$$677;
    if (v8952) {
      c$$677 = {};
    }
    var e$$425 = {type:d$$504, dataType:"json"};
    var v2229 = c$$677.url;
    var v8954 = !v2229;
    if (v8954) {
      var v8953 = e$$425;
      var v14862 = n$$110(b$$830, "url");
      var v19319 = !v14862;
      if (v19319) {
        v14862 = t$$33();
      }
      v8953.url = v14862;
    }
    var v19320 = c$$677.data;
    var v14863 = !v19320;
    if (v14863) {
      v14863 = b$$830;
    }
    var v8955 = v14863;
    if (v8955) {
      var v14864 = "create" == a$$942;
      var v19321 = !v14864;
      if (v19321) {
        v14864 = "update" == a$$942;
      }
      v8955 = v14864;
    }
    var v2230 = v8955;
    if (v2230) {
      e$$425.contentType = "application/json";
      var v8956 = e$$425;
      var v14865 = b$$830.toJSON();
      var v30914 = JSON.stringify(v14865);
      v8956.data = v30914;
    }
    var v2231 = g$$232.emulateJSON;
    if (v2231) {
      e$$425.contentType = "application/x-www-form-urlencoded";
      var v14866;
      var v19323 = e$$425.data;
      if (v19323) {
        var v19322 = e$$425.data;
        v14866 = {model:v19322};
      } else {
        v14866 = {};
      }
      e$$425.data = v14866;
    }
    var v8957 = g$$232.emulateHTTP;
    if (v8957) {
      var v14867 = "PUT" === d$$504;
      var v19324 = !v14867;
      if (v19324) {
        v14867 = "DELETE" === d$$504;
      }
      v8957 = v14867;
    }
    var v2232 = v8957;
    if (v2232) {
      var v14868 = g$$232.emulateJSON;
      if (v14868) {
        var v19325 = e$$425.data;
        v19325._method = d$$504;
      }
      e$$425.type = "POST";
      e$$425.beforeSend = v2222;
    }
    var v14869 = e$$425.type;
    var v8958 = "GET" !== v14869;
    if (v8958) {
      var v14870 = g$$232.emulateJSON;
      v8958 = !v14870;
    }
    var v2233 = v8958;
    if (v2233) {
      e$$425.processData = !1;
    }
    var v2234 = f$$232.extend(e$$425, c$$677);
    return i$$241.ajax(v2234);
  }
  function v2221(a$$941, b$$829) {
    var c$$676 = G$$5(this, a$$941, b$$829);
    c$$676.extend = this.extend;
    return c$$676;
  }
  function v2220() {
    var v2242 = this.el;
    if (v2242) {
      var v2235 = this.el;
      var v2236 = !1;
      this.setElement(v2235, v2236);
    } else {
      var v2237 = n$$110(this, "attributes");
      var v8959 = !v2237;
      if (v8959) {
        v2237 = {};
      }
      var a$$940 = v2237;
      var v2238 = this.id;
      if (v2238) {
        a$$940.id = this.id;
      }
      var v2239 = this.className;
      if (v2239) {
        a$$940["class"] = this.className;
      }
      var v8960 = this.tagName;
      var v2240 = this.make(v8960, a$$940);
      var v2241 = !1;
      this.setElement(v2240, v2241);
    }
    return;
  }
  function v2219(a$$939) {
    var v2243 = this.options;
    if (v2243) {
      var v8961 = this.options;
      a$$939 = f$$232.extend({}, v8961, a$$939);
    }
    var b$$828 = 0;
    var c$$675 = w$$21.length;
    var v2245 = b$$828 < c$$675;
    for (;v2245;) {
      var d$$503 = w$$21[b$$828];
      var v2244 = a$$939[d$$503];
      if (v2244) {
        this[d$$503] = a$$939[d$$503];
      }
      b$$828++;
      v2245 = b$$828 < c$$675;
    }
    this.options = a$$939;
    return;
  }
  function v2218() {
    var v2246 = this.$el;
    var v8962 = this.cid;
    var v2247 = ".delegateEvents" + v8962;
    v2246.unbind(v2247);
    return;
  }
  function v2217(a$$938) {
    var v8963 = a$$938;
    var v14871 = !v8963;
    if (v14871) {
      v8963 = a$$938 = n$$110(this, "events");
    }
    var v2253 = v8963;
    if (v2253) {
      this.undelegateEvents();
      var b$$827;
      for (b$$827 in a$$938) {
        var c$$674 = a$$938[b$$827];
        var v2248 = f$$232.isFunction(c$$674);
        var v8965 = !v2248;
        if (v8965) {
          var v8964 = a$$938[b$$827];
          c$$674 = this[v8964];
        }
        var v2250 = !c$$674;
        if (v2250) {
          var v14872 = a$$938[b$$827];
          var v8966 = 'Method "' + v14872;
          var v2249 = v8966 + '" does not exist';
          throw Error(v2249);
        }
        var d$$502 = b$$827.match(F$$6);
        var e$$424 = d$$502[1];
        d$$502 = d$$502[2];
        c$$674 = f$$232.bind(c$$674, this);
        var v8967 = this.cid;
        var v2251 = ".delegateEvents" + v8967;
        e$$424 = e$$424 + v2251;
        var v2252;
        var v8970 = "" === d$$502;
        if (v8970) {
          var v8968 = this.$el;
          v2252 = v8968.bind(e$$424, c$$674);
        } else {
          var v8969 = this.$el;
          v2252 = v8969.delegate(d$$502, e$$424, c$$674);
        }
        v2252;
      }
    }
    return;
  }
  function v2216(a$$937, b$$826) {
    var v2254 = this.$el;
    if (v2254) {
      this.undelegateEvents();
    }
    var v2255;
    var v8971 = a$$937 instanceof i$$241;
    if (v8971) {
      v2255 = a$$937;
    } else {
      v2255 = i$$241(a$$937);
    }
    this.$el = v2255;
    var v2256 = this.$el;
    this.el = v2256[0];
    var v8972 = !1;
    var v2257 = v8972 !== b$$826;
    if (v2257) {
      this.delegateEvents();
    }
    return this;
  }
  function v2215(a$$936, b$$825, c$$673) {
    a$$936 = document.createElement(a$$936);
    if (b$$825) {
      var v8973 = i$$241(a$$936);
      v8973.attr(b$$825);
    }
    if (c$$673) {
      var v8974 = i$$241(a$$936);
      v8974.html(c$$673);
    }
    return a$$936;
  }
  function v2214() {
    var v2258 = this.$el;
    v2258.remove();
    return this;
  }
  function v2213() {
    return this;
  }
  function v2212() {
    return;
  }
  function v2211(a$$935) {
    var v2259 = this.$el;
    return v2259.find(a$$935);
  }
  function v2210(a$$934) {
    var v30915 = f$$232.uniqueId("view");
    this.cid = v30915;
    var v2260 = a$$934 || {};
    this._configure(v2260);
    this._ensureElement();
    var v2261 = this.initialize;
    v2261.apply(this, arguments);
    this.delegateEvents();
    return;
  }
  function v2209(a$$933, b$$824, c$$672) {
    var v2262;
    if (c$$672) {
      var v24027 = a$$933.toString();
      var v19326 = v24027.replace(/(javascript:|#).*$/, "");
      var v14873 = v19326 + "#";
      var v8975 = v14873 + b$$824;
      v2262 = a$$933.replace(v8975);
    } else {
      v2262 = a$$933.hash = b$$824;
    }
    v2262;
    return;
  }
  function v2208(a$$932, b$$823) {
    var v8976 = m$$64.started;
    var v2263 = !v8976;
    if (v2263) {
      return!1;
    }
    var v8977 = !b$$823;
    var v14875 = !v8977;
    if (v14875) {
      var v14874 = !0;
      v8977 = v14874 === b$$823;
    }
    var v2264 = v8977;
    if (v2264) {
      b$$823 = {trigger:b$$823};
    }
    var v2265 = a$$932 || "";
    var c$$671 = v2265.replace(s$$36, "");
    var v8978 = this.fragment;
    var v2266 = v8978 != c$$671;
    if (v2266) {
      var v14876;
      var v19328 = this._hasPushState;
      if (v19328) {
        var v29322 = this.options;
        var v28684 = v29322.root;
        var v27725 = c$$671.indexOf(v28684);
        var v26201 = 0 != v27725;
        if (v26201) {
          var v28685 = this.options;
          var v27726 = v28685.root;
          c$$671 = v27726 + c$$671;
        }
        this.fragment = c$$671;
        var v24028 = window.history;
        var v26202;
        var v27727 = b$$823.replace;
        if (v27727) {
          v26202 = "replaceState";
        } else {
          v26202 = "pushState";
        }
        var v24029 = v26202;
        var v24030 = document.title;
        v14876 = v24028[v24029]({}, v24030, c$$671);
      } else {
        var v19327;
        var v24033 = this._wantsHashChange;
        if (v24033) {
          this.fragment = c$$671;
          var v27728 = window.location;
          var v27729 = b$$823.replace;
          this._updateHash(v27728, c$$671, v27729);
          var v27730 = this.iframe;
          if (v27730) {
            var v29726 = this.iframe;
            var v29323 = this.getHash(v29726);
            var v28686 = this.getFragment(v29323);
            v27730 = c$$671 != v28686;
          }
          var v26203 = v27730;
          if (v26203) {
            var v28687 = b$$823.replace;
            var v29325 = !v28687;
            if (v29325) {
              var v29991 = this.iframe;
              var v29727 = v29991.document;
              var v29324 = v29727.open();
              v29324.close();
            }
            var v29326 = this.iframe;
            var v28688 = v29326.location;
            var v28689 = b$$823.replace;
            v26203 = this._updateHash(v28688, c$$671, v28689);
          }
          v19327 = v26203;
        } else {
          var v24031 = window.location;
          var v27731 = this.options;
          var v26204 = v27731.root;
          var v24032 = v26204 + a$$932;
          v19327 = v24031.assign(v24032);
        }
        v14876 = v19327;
      }
      v14876;
      var v14877 = b$$823.trigger;
      if (v14877) {
        this.loadUrl(a$$932);
      }
    }
    return;
  }
  function v2207(a$$930) {
    function v2206(a$$931) {
      var v8979 = a$$931.route;
      var v2267 = v8979.test(b$$822);
      if (v2267) {
        a$$931.callback(b$$822);
        return!0;
      }
      return;
    }
    var v30916 = this.getFragment(a$$930);
    var b$$822 = this.fragment = v30916;
    var v2268 = this.handlers;
    return f$$232.any(v2268, v2206);
  }
  function v2205() {
    var a$$929 = this.getFragment();
    var v14878 = this.fragment;
    var v8980 = a$$929 == v14878;
    if (v8980) {
      v8980 = this.iframe;
    }
    var v2269 = v8980;
    if (v2269) {
      var v14879 = this.iframe;
      var v8981 = this.getHash(v14879);
      a$$929 = this.getFragment(v8981);
    }
    var v8982 = this.fragment;
    var v2270 = a$$929 == v8982;
    if (v2270) {
      return!1;
    }
    var v2271 = this.iframe;
    if (v2271) {
      this.navigate(a$$929);
    }
    var v2272 = this.loadUrl();
    var v8984 = !v2272;
    if (v8984) {
      var v8983 = this.getHash();
      this.loadUrl(v8983);
    }
    return;
  }
  function v2204(a$$928, b$$821) {
    var v2273 = this.handlers;
    var v2274 = {route:a$$928, callback:b$$821};
    v2273.unshift(v2274);
    return;
  }
  function v2203() {
    var v8985 = i$$241(window);
    var v8986 = this.checkUrl;
    var v2275 = v8985.unbind("popstate", v8986);
    var v2276 = this.checkUrl;
    v2275.unbind("hashchange", v2276);
    var v2277 = this._checkUrlInterval;
    clearInterval(v2277);
    m$$64.started = !1;
    return;
  }
  function v2202(a$$927) {
    var v2278 = m$$64.started;
    if (v2278) {
      throw Error("Backbone.history has already been started");
    }
    m$$64.started = !0;
    var v2279 = {root:"/"};
    var v2280 = this.options;
    var v30917 = f$$232.extend({}, v2279, v2280, a$$927);
    this.options = v30917;
    var v2281 = !1;
    var v8987 = this.options;
    var v2282 = v8987.hashChange;
    this._wantsHashChange = v2281 !== v2282;
    var v14880 = this.options;
    var v8988 = v14880.pushState;
    var v2283 = !v8988;
    this._wantsPushState = !v2283;
    var v24034 = this.options;
    var v19329 = v24034.pushState;
    var v14881 = !v19329;
    var v19331 = !v14881;
    if (v19331) {
      var v19330 = window.history;
      v14881 = !v19330;
    }
    var v8989 = v14881;
    var v14883 = !v8989;
    if (v14883) {
      var v19332 = window.history;
      var v14882 = v19332.pushState;
      v8989 = !v14882;
    }
    var v2284 = v8989;
    this._hasPushState = !v2284;
    a$$927 = this.getFragment();
    var b$$820 = document.documentMode;
    var v19333 = navigator.userAgent;
    var v14884 = v19333.toLowerCase();
    var v8990 = E$$6.exec(v14884);
    if (v8990) {
      var v14885 = !b$$820;
      var v19334 = !v14885;
      if (v19334) {
        v14885 = 7 >= b$$820;
      }
      v8990 = v14885;
    }
    var v2285 = b$$820 = v8990;
    if (v2285) {
      var v24035 = i$$241('<iframe src="javascript:0" tabindex="-1" />');
      var v19335 = v24035.hide();
      var v14886 = v19335.appendTo("body");
      var v8991 = v14886[0];
      this.iframe = v8991.contentWindow;
      this.navigate(a$$927);
    }
    var v2286;
    var v8995 = this._hasPushState;
    if (v8995) {
      var v8992 = i$$241(window);
      var v8993 = this.checkUrl;
      v2286 = v8992.bind("popstate", v8993);
    } else {
      var v8994;
      var v24036 = this._wantsHashChange;
      if (v24036) {
        v24036 = "onhashchange" in window;
      }
      var v19336 = v24036;
      if (v19336) {
        v19336 = !b$$820;
      }
      var v14890 = v19336;
      if (v14890) {
        var v14887 = i$$241(window);
        var v14888 = this.checkUrl;
        v8994 = v14887.bind("hashchange", v14888);
      } else {
        var v14889 = this._wantsHashChange;
        if (v14889) {
          var v19337 = this.checkUrl;
          var v19338 = this.interval;
          var v30918 = setInterval(v19337, v19338);
          v14889 = this._checkUrlInterval = v30918;
        }
        v8994 = v14889;
      }
      v2286 = v8994;
    }
    v2286;
    this.fragment = a$$927;
    a$$927 = window.location;
    var v2287 = a$$927.pathname;
    var v8996 = this.options;
    var v2288 = v8996.root;
    b$$820 = v2287 == v2288;
    var v19339 = this._wantsHashChange;
    if (v19339) {
      v19339 = this._wantsPushState;
    }
    var v14891 = v19339;
    if (v14891) {
      var v19340 = this._hasPushState;
      v14891 = !v19340;
    }
    var v8997 = v14891;
    if (v8997) {
      v8997 = !b$$820;
    }
    var v2289 = v8997;
    if (v2289) {
      var v14892 = !0;
      var v30919 = this.getFragment(null, v14892);
      this.fragment = v30919;
      var v14893 = window.location;
      var v26205 = this.options;
      var v24037 = v26205.root;
      var v19341 = v24037 + "#";
      var v19342 = this.fragment;
      var v14894 = v19341 + v19342;
      v14893.replace(v14894);
      return!0;
    }
    var v19343 = this._wantsPushState;
    if (v19343) {
      v19343 = this._hasPushState;
    }
    var v14895 = v19343;
    if (v14895) {
      v14895 = b$$820;
    }
    var v8998 = v14895;
    if (v8998) {
      v8998 = a$$927.hash;
    }
    var v2290 = v8998;
    if (v2290) {
      var v14896 = this.getHash();
      var v30920 = v14896.replace(s$$36, "");
      this.fragment = v30920;
      var v14897 = window.history;
      var v14898 = document.title;
      var v27732 = a$$927.protocol;
      var v26206 = v27732 + "//";
      var v26207 = a$$927.host;
      var v24038 = v26206 + v26207;
      var v26208 = this.options;
      var v24039 = v26208.root;
      var v19344 = v24038 + v24039;
      var v19345 = this.fragment;
      var v14899 = v19344 + v19345;
      v14897.replaceState({}, v14898, v14899);
    }
    var v14900 = this.options;
    var v8999 = v14900.silent;
    var v2291 = !v8999;
    if (v2291) {
      return this.loadUrl();
    }
    return;
  }
  function v2201(a$$926, b$$819) {
    var v2295 = null == a$$926;
    if (v2295) {
      var v9000 = this._hasPushState;
      var v14901 = !v9000;
      if (v14901) {
        v9000 = b$$819;
      }
      var v2294 = v9000;
      if (v2294) {
        var v2292 = window.location;
        a$$926 = v2292.pathname;
        var v2293 = window.location;
        var c$$670 = v2293.search;
        if (c$$670) {
          a$$926 = a$$926 + c$$670;
        }
      } else {
        a$$926 = this.getHash();
      }
    }
    var v14902 = this.options;
    var v9001 = v14902.root;
    var v2296 = a$$926.indexOf(v9001);
    var v9003 = !v2296;
    if (v9003) {
      var v19346 = this.options;
      var v14903 = v19346.root;
      var v9002 = v14903.length;
      a$$926 = a$$926.substr(v9002);
    }
    return a$$926.replace(s$$36, "");
  }
  function v2200(a$$925) {
    var v2297;
    var v24040;
    if (a$$925) {
      v24040 = a$$925.location;
    } else {
      v24040 = window.location;
    }
    var v19347 = v24040;
    var v14904 = v19347.href;
    var v9004 = a$$925 = v14904.match(/#(.*)$/);
    if (v9004) {
      v2297 = a$$925[1];
    } else {
      v2297 = "";
    }
    return v2297;
  }
  function v2199() {
    this.handlers = [];
    f$$232.bindAll(this, "checkUrl");
    return;
  }
  function v2198(a$$924, b$$818) {
    var v2298 = a$$924.exec(b$$818);
    return v2298.slice(1);
  }
  function v2197(a$$923) {
    var v9005 = a$$923.replace(D$$6, "\\$&");
    var v2299 = v9005.replace(B$$7, "([^/]+)");
    a$$923 = v2299.replace(C$$6, "(.*?)");
    var v9006 = "^" + a$$923;
    var v2300 = v9006 + "$";
    return RegExp(v2300);
  }
  function v2196() {
    var v2307 = this.routes;
    if (v2307) {
      var a$$922 = [];
      var b$$817;
      var v2302 = this.routes;
      for (b$$817 in v2302) {
        var v14905 = this.routes;
        var v9007 = v14905[b$$817];
        var v2301 = [b$$817, v9007];
        a$$922.unshift(v2301);
      }
      b$$817 = 0;
      var c$$669 = a$$922.length;
      var v2306 = b$$817 < c$$669;
      for (;v2306;) {
        var v9008 = a$$922[b$$817];
        var v2303 = v9008[0];
        var v9009 = a$$922[b$$817];
        var v2304 = v9009[1];
        var v14906 = a$$922[b$$817];
        var v9010 = v14906[1];
        var v2305 = this[v9010];
        this.route(v2303, v2304, v2305);
        b$$817++;
        v2306 = b$$817 < c$$669;
      }
    }
    return;
  }
  function v2195(a$$921, b$$816) {
    var v2308 = g$$232.history;
    v2308.navigate(a$$921, b$$816);
    return;
  }
  function v2194(a$$920, b$$815, c$$668) {
    function v2193(d$$501) {
      d$$501 = this._extractParameters(a$$920, d$$501);
      if (c$$668) {
        c$$668.apply(this, d$$501);
      }
      var v2309 = this.trigger;
      var v14907 = "route:" + b$$815;
      var v9011 = [v14907];
      var v2310 = v9011.concat(d$$501);
      v2309.apply(this, v2310);
      var v2311 = g$$232.history;
      v2311.trigger("route", this, b$$815, d$$501);
      return;
    }
    var v2312 = g$$232.history;
    var v9013 = !v2312;
    if (v9013) {
      var v9012 = g$$232;
      var v30921 = new m$$64;
      v9012.history = v30921;
    }
    var v2313 = f$$232.isRegExp(a$$920);
    var v9014 = !v2313;
    if (v9014) {
      a$$920 = this._routeToRegExp(a$$920);
    }
    var v9015 = !c$$668;
    if (v9015) {
      c$$668 = this[b$$815];
    }
    var v2314 = g$$232.history;
    var v2315 = f$$232.bind(v2193, this);
    v2314.route(a$$920, v2315);
    return this;
  }
  function v2192() {
    return;
  }
  function v2191(a$$919) {
    var v9016 = !a$$919;
    if (v9016) {
      a$$919 = {};
    }
    var v2316 = a$$919.routes;
    if (v2316) {
      this.routes = a$$919.routes;
    }
    this._bindRoutes();
    var v2317 = this.initialize;
    v2317.apply(this, arguments);
    return;
  }
  function v2190(a$$918) {
    function v2189() {
      var v2318 = f$$232[a$$918];
      var v14908 = this.models;
      var v9017 = [v14908];
      var v9018 = f$$232.toArray(arguments);
      var v2319 = v9017.concat(v9018);
      return v2318.apply(f$$232, v2319);
    }
    var v2320 = r$$32.prototype;
    v2320[a$$918] = v2189;
    return;
  }
  function v2188(a$$917, b$$814, c$$667, d$$500) {
    var v14909 = "add" == a$$917;
    var v19348 = !v14909;
    if (v19348) {
      v14909 = "remove" == a$$917;
    }
    var v9019 = v14909;
    if (v9019) {
      v9019 = c$$667 != this;
    }
    var v2321 = v9019;
    var v9020 = !v2321;
    if (v9020) {
      var v19349 = "destroy" == a$$917;
      if (v19349) {
        this.remove(b$$814, d$$500);
      }
      var v24041 = b$$814;
      if (v24041) {
        var v27733 = b$$814.idAttribute;
        var v26209 = "change:" + v27733;
        v24041 = a$$917 === v26209;
      }
      var v19350 = v24041;
      if (v19350) {
        var v26210 = this._byId;
        var v27734 = b$$814.idAttribute;
        var v26211 = b$$814.previous(v27734);
        delete v26210[v26211];
        var v26212 = this._byId;
        var v26213 = b$$814.id;
        v26212[v26213] = b$$814;
      }
      var v14910 = this.trigger;
      v14910.apply(this, arguments);
    }
    return;
  }
  function v2187(a$$916) {
    var v9021 = a$$916.collection;
    var v2322 = this == v9021;
    if (v2322) {
      delete a$$916.collection;
    }
    var v2323 = this._onModelEvent;
    a$$916.off("all", v2323, this);
    return;
  }
  function v2186(a$$915, b$$813) {
    var v9022 = !b$$813;
    if (v9022) {
      b$$813 = {};
    }
    var v2324;
    var v9024 = a$$915 instanceof o$$42;
    if (v9024) {
      var v9023 = a$$915.collection;
      var v14911 = !v9023;
      if (v14911) {
        v9023 = a$$915.collection = this;
      }
      v2324 = v9023;
    } else {
      b$$813.collection = this;
      var v19351 = this.model;
      a$$915 = new v19351(a$$915, b$$813);
      var v19352 = a$$915.attributes;
      var v14912 = a$$915._validate(v19352, b$$813);
      var v19353 = !v14912;
      if (v19353) {
        v14912 = a$$915 = !1;
      }
      v2324 = v14912;
    }
    v2324;
    return a$$915;
  }
  function v2185() {
    this.length = 0;
    this.models = [];
    this._byId = {};
    this._byCid = {};
    return;
  }
  function v2184() {
    var v9025 = this.models;
    var v2325 = f$$232(v9025);
    return v2325.chain();
  }
  function v2183(a$$914) {
    return a$$914;
  }
  function v2182(a$$913, b$$812) {
    function v2181(e$$423, f$$237) {
      var v2326 = b$$812.wait;
      if (v2326) {
        c$$666.add(e$$423, b$$812);
      }
      var v2327;
      if (d$$499) {
        v2327 = d$$499(e$$423, f$$237);
      } else {
        v2327 = e$$423.trigger("sync", a$$913, f$$237, b$$812);
      }
      v2327;
      return;
    }
    var c$$666 = this;
    var v2328;
    if (b$$812) {
      v2328 = f$$232.clone(b$$812);
    } else {
      v2328 = {};
    }
    b$$812 = v2328;
    a$$913 = this._prepareModel(a$$913, b$$812);
    var v2329 = !a$$913;
    if (v2329) {
      return!1;
    }
    var v2330 = b$$812.wait;
    var v9026 = !v2330;
    if (v9026) {
      c$$666.add(a$$913, b$$812);
    }
    var d$$499 = b$$812.success;
    b$$812.success = v2181;
    a$$913.save(null, b$$812);
    return a$$913;
  }
  function v2180(a$$912) {
    function v2179(d$$498, e$$422, f$$236) {
      var v9027;
      var v14913 = a$$912.add;
      if (v14913) {
        v9027 = "add";
      } else {
        v9027 = "reset";
      }
      var v2331 = v9027;
      var v2332 = b$$811.parse(d$$498, f$$236);
      b$$811[v2331](v2332, a$$912);
      if (c$$665) {
        c$$665(b$$811, d$$498);
      }
      return;
    }
    var v2333;
    if (a$$912) {
      v2333 = f$$232.clone(a$$912);
    } else {
      v2333 = {};
    }
    a$$912 = v2333;
    var v9028 = void 0;
    var v9029 = a$$912.parse;
    var v2334 = v9028 === v9029;
    if (v2334) {
      a$$912.parse = !0;
    }
    var b$$811 = this;
    var c$$665 = a$$912.success;
    a$$912.success = v2179;
    var v2335 = a$$912;
    var v9030 = a$$912.error;
    var v30922 = g$$232.wrapError(v9030, b$$811, a$$912);
    v2335.error = v30922;
    var v9031 = this.sync;
    var v14914 = !v9031;
    if (v14914) {
      v9031 = g$$232.sync;
    }
    var v2336 = v9031;
    return v2336.call(this, "read", this, a$$912);
  }
  function v2178(a$$911, b$$810) {
    var v9032 = !a$$911;
    if (v9032) {
      a$$911 = [];
    }
    var v9033 = !b$$810;
    if (v9033) {
      b$$810 = {};
    }
    var c$$664 = 0;
    var v2337 = this.models;
    var d$$497 = v2337.length;
    var v2339 = c$$664 < d$$497;
    for (;v2339;) {
      var v9034 = this.models;
      var v2338 = v9034[c$$664];
      this._removeReference(v2338);
      c$$664++;
      v2339 = c$$664 < d$$497;
    }
    this._reset();
    var v14915 = !0;
    var v9035 = {silent:v14915};
    var v2340 = f$$232.extend(v9035, b$$810);
    this.add(a$$911, v2340);
    var v2341 = b$$810.silent;
    var v9036 = !v2341;
    if (v9036) {
      this.trigger("reset", this, b$$810);
    }
    return this;
  }
  function v2177(a$$910) {
    function v2176(b$$809) {
      return b$$809.get(a$$910);
    }
    var v2342 = this.models;
    return f$$232.map(v2342, v2176);
  }
  function v2175(a$$909) {
    var v9037 = !a$$909;
    if (v9037) {
      a$$909 = {};
    }
    var v9038 = this.comparator;
    var v2343 = !v9038;
    if (v2343) {
      throw Error("Cannot sort a set without a comparator");
    }
    var v2344 = this.comparator;
    var b$$808 = f$$232.bind(v2344, this);
    var v2345;
    var v19354 = this.comparator;
    var v14916 = v19354.length;
    var v9040 = 1 == v14916;
    if (v9040) {
      var v30923 = this.sortBy(b$$808);
      v2345 = this.models = v30923;
    } else {
      var v9039 = this.models;
      v2345 = v9039.sort(b$$808);
    }
    v2345;
    var v2346 = a$$909.silent;
    var v9041 = !v2346;
    if (v9041) {
      this.trigger("reset", this, a$$909);
    }
    return this;
  }
  function v2174(a$$908) {
    function v2173(b$$807) {
      var c$$663;
      for (c$$663 in a$$908) {
        var v9042 = a$$908[c$$663];
        var v9043 = b$$807.get(c$$663);
        var v2347 = v9042 !== v9043;
        if (v2347) {
          return!1;
        }
      }
      return!0;
    }
    var v2348;
    var v9044 = f$$232.isEmpty(a$$908);
    if (v9044) {
      v2348 = [];
    } else {
      v2348 = this.filter(v2173);
    }
    return v2348;
  }
  function v2172(a$$907) {
    var v2349 = this.models;
    return v2349[a$$907];
  }
  function v2171(a$$906) {
    var v2350 = a$$906;
    if (v2350) {
      var v9045 = this._byCid;
      var v14917 = a$$906.cid;
      var v19355 = !v14917;
      if (v19355) {
        v14917 = a$$906;
      }
      var v9046 = v14917;
      v2350 = v9045[v9046];
    }
    return v2350;
  }
  function v2170(a$$905) {
    var v2351;
    var v9049 = null == a$$905;
    if (v9049) {
      v2351 = void 0;
    } else {
      var v9047 = this._byId;
      var v14918;
      var v24042 = a$$905.id;
      var v19356 = null != v24042;
      if (v19356) {
        v14918 = a$$905.id;
      } else {
        v14918 = a$$905;
      }
      var v9048 = v14918;
      v2351 = v9047[v9048];
    }
    return v2351;
  }
  function v2169(a$$904) {
    var b$$806 = this.at(0);
    this.remove(b$$806, a$$904);
    return b$$806;
  }
  function v2168(a$$903, b$$805) {
    a$$903 = this._prepareModel(a$$903, b$$805);
    var v9050 = {at:0};
    var v2352 = f$$232.extend(v9050, b$$805);
    this.add(a$$903, v2352);
    return a$$903;
  }
  function v2167(a$$902) {
    var v9051 = this.length;
    var v2353 = v9051 - 1;
    var b$$804 = this.at(v2353);
    this.remove(b$$804, a$$902);
    return b$$804;
  }
  function v2166(a$$901, b$$803) {
    a$$901 = this._prepareModel(a$$901, b$$803);
    this.add(a$$901, b$$803);
    return a$$901;
  }
  function v2165(a$$900, b$$802) {
    var c$$662;
    var d$$496;
    var e$$421;
    var g$$238;
    var v9052 = !b$$802;
    if (v9052) {
      b$$802 = {};
    }
    var v2354;
    var v9053 = f$$232.isArray(a$$900);
    if (v9053) {
      v2354 = a$$900.slice();
    } else {
      v2354 = [a$$900];
    }
    a$$900 = v2354;
    c$$662 = 0;
    d$$496 = a$$900.length;
    var v2356 = c$$662 < d$$496;
    for (;v2356;) {
      var v14919 = a$$900[c$$662];
      var v9054 = this.getByCid(v14919);
      var v14921 = !v9054;
      if (v14921) {
        var v14920 = a$$900[c$$662];
        v9054 = this.get(v14920);
      }
      var v2355 = g$$238 = v9054;
      if (v2355) {
        var v27735 = this._byId;
        var v27736 = g$$238.id;
        delete v27735[v27736];
        var v27737 = this._byCid;
        var v27738 = g$$238.cid;
        delete v27737[v27738];
        e$$421 = this.indexOf(g$$238);
        var v24043 = this.models;
        v24043.splice(e$$421, 1);
        this.length--;
        var v14922 = b$$802.silent;
        var v19357 = !v14922;
        if (v19357) {
          b$$802.index = e$$421;
          g$$238.trigger("remove", g$$238, this, b$$802);
        }
        this._removeReference(g$$238);
      }
      c$$662++;
      v2356 = c$$662 < d$$496;
    }
    return this;
  }
  function v2164(a$$899, b$$801) {
    var c$$661;
    var d$$495;
    var e$$420;
    var g$$237;
    var i$$243;
    var j$$130 = {};
    var k$$94 = {};
    var l$$98 = [];
    var v9055 = !b$$801;
    if (v9055) {
      b$$801 = {};
    }
    var v2357;
    var v9056 = f$$232.isArray(a$$899);
    if (v9056) {
      v2357 = a$$899.slice();
    } else {
      v2357 = [a$$899];
    }
    a$$899 = v2357;
    c$$661 = 0;
    d$$495 = a$$899.length;
    var v2360 = c$$661 < d$$495;
    for (;v2360;) {
      var v14923 = a$$899[c$$661];
      var v30924 = this._prepareModel(v14923, b$$801);
      var v9057 = e$$420 = a$$899[c$$661] = v30924;
      var v2358 = !v9057;
      if (v2358) {
        throw Error("Can't add an invalid model to a collection");
      }
      g$$237 = e$$420.cid;
      i$$243 = e$$420.id;
      var v2359;
      var v19358 = j$$130[g$$237];
      var v24045 = !v19358;
      if (v24045) {
        var v24044 = this._byCid;
        v19358 = v24044[g$$237];
      }
      var v14924 = v19358;
      var v19360 = !v14924;
      if (v19360) {
        var v19359 = null != i$$243;
        if (v19359) {
          var v24046 = k$$94[i$$243];
          var v26215 = !v24046;
          if (v26215) {
            var v26214 = this._byId;
            v24046 = v26214[i$$243];
          }
          v19359 = v24046;
        }
        v14924 = v19359;
      }
      var v9058 = v14924;
      if (v9058) {
        v2359 = l$$98.push(c$$661);
      } else {
        v2359 = j$$130[g$$237] = k$$94[i$$243] = e$$420;
      }
      v2359;
      c$$661++;
      v2360 = c$$661 < d$$495;
    }
    c$$661 = l$$98.length;
    var v2362 = c$$661;
    c$$661 = c$$661 - 1;
    for (;v2362;) {
      var v2361 = l$$98[c$$661];
      a$$899.splice(v2361, 1);
      v2362 = c$$661;
      c$$661 = c$$661 - 1;
    }
    c$$661 = 0;
    d$$495 = a$$899.length;
    var v2363 = c$$661 < d$$495;
    for (;v2363;) {
      var v14925 = e$$420 = a$$899[c$$661];
      var v14926 = this._onModelEvent;
      v14925.on("all", v14926, this);
      var v14927 = this._byCid;
      var v14928 = e$$420.cid;
      v14927[v14928] = e$$420;
      var v14929 = e$$420.id;
      var v9059 = null != v14929;
      if (v9059) {
        var v14930 = this._byId;
        var v14931 = e$$420.id;
        v14930[v14931] = e$$420;
      }
      c$$661++;
      v2363 = c$$661 < d$$495;
    }
    var v9060 = this.length;
    this.length = v9060 + d$$495;
    var v2364 = this.models;
    var v19361;
    var v26216 = b$$801.at;
    var v24048 = null != v26216;
    if (v24048) {
      v19361 = b$$801.at;
    } else {
      var v24047 = this.models;
      v19361 = v24047.length;
    }
    var v14932 = v19361;
    var v9061 = [v14932, 0];
    var v2365 = v9061.concat(a$$899);
    A$$7.apply(v2364, v2365);
    var v2366 = this.comparator;
    if (v2366) {
      var v14933 = !0;
      var v9062 = {silent:v14933};
      this.sort(v9062);
    }
    var v2367 = b$$801.silent;
    if (v2367) {
      return this;
    }
    c$$661 = 0;
    var v2368 = this.models;
    d$$495 = v2368.length;
    var v2370 = c$$661 < d$$495;
    for (;v2370;) {
      var v19362 = this.models;
      var v14934 = e$$420 = v19362[c$$661];
      var v9063 = v14934.cid;
      var v2369 = j$$130[v9063];
      if (v2369) {
        b$$801.index = c$$661;
        e$$420.trigger("add", e$$420, this, b$$801);
      }
      c$$661++;
      v2370 = c$$661 < d$$495;
    }
    return this;
  }
  function v2163(a$$898) {
    function v2162(b$$800) {
      return b$$800.toJSON(a$$898);
    }
    return this.map(v2162);
  }
  function v2161() {
    return;
  }
  function v2160(a$$897, b$$799) {
    var v9064 = !b$$799;
    if (v9064) {
      b$$799 = {};
    }
    var v2371 = b$$799.model;
    if (v2371) {
      this.model = b$$799.model;
    }
    var v2372 = b$$799.comparator;
    if (v2372) {
      this.comparator = b$$799.comparator;
    }
    this._reset();
    var v2373 = this.initialize;
    v2373.apply(this, arguments);
    if (a$$897) {
      var v14935 = !0;
      var v14936 = b$$799.parse;
      var v9065 = {silent:v14935, parse:v14936};
      this.reset(a$$897, v9065);
    }
    return;
  }
  function v2159(a$$896, b$$798) {
    var v9066 = b$$798.silent;
    var v14938 = !v9066;
    if (v14938) {
      var v14937 = this.validate;
      v9066 = !v14937;
    }
    var v2374 = v9066;
    if (v2374) {
      return!0;
    }
    var v2375 = this.attributes;
    a$$896 = f$$232.extend({}, v2375, a$$896);
    var c$$660 = this.validate(a$$896, b$$798);
    var v2376 = !c$$660;
    if (v2376) {
      return!0;
    }
    var v2377;
    var v14939 = b$$798;
    if (v14939) {
      v14939 = b$$798.error;
    }
    var v9067 = v14939;
    if (v9067) {
      v2377 = b$$798.error(this, c$$660, b$$798);
    } else {
      v2377 = this.trigger("error", this, c$$660, b$$798);
    }
    v2377;
    return!1;
  }
  function v2158() {
    var v9068 = this.attributes;
    var v2378 = this.validate(v9068);
    return!v2378;
  }
  function v2157() {
    var v2379 = this._previousAttributes;
    return f$$232.clone(v2379);
  }
  function v2156(a$$895) {
    var v2380;
    var v19363 = arguments.length;
    var v14940 = !v19363;
    var v19365 = !v14940;
    if (v19365) {
      var v19364 = this._previousAttributes;
      v14940 = !v19364;
    }
    var v9070 = v14940;
    if (v9070) {
      v2380 = null;
    } else {
      var v9069 = this._previousAttributes;
      v2380 = v9069[a$$895];
    }
    return v2380;
  }
  function v2155(a$$894) {
    var v2382 = !a$$894;
    if (v2382) {
      var v2381;
      var v9072 = this.hasChanged();
      if (v9072) {
        var v9071 = this.changed;
        v2381 = f$$232.clone(v9071);
      } else {
        v2381 = !1;
      }
      return v2381;
    }
    var b$$797;
    var c$$659 = !1;
    var d$$494 = this._previousAttributes;
    var e$$419;
    for (e$$419 in a$$894) {
      var v14941 = d$$494[e$$419];
      var v14942 = b$$797 = a$$894[e$$419];
      var v9073 = f$$232.isEqual(v14941, v14942);
      var v2384 = !v9073;
      if (v2384) {
        var v9074 = c$$659;
        var v14943 = !v9074;
        if (v14943) {
          v9074 = c$$659 = {};
        }
        var v2383 = v9074;
        v2383[e$$419] = b$$797;
      }
    }
    return c$$659;
  }
  function v2154(a$$893) {
    var v2385;
    var v14944 = arguments.length;
    var v9077 = !v14944;
    if (v9077) {
      var v14945 = this.changed;
      var v9075 = f$$232.isEmpty(v14945);
      v2385 = !v9075;
    } else {
      var v9076 = this.changed;
      v2385 = f$$232.has(v9076, a$$893);
    }
    return v2385;
  }
  function v2153(a$$892) {
    var v9078 = !a$$892;
    if (v9078) {
      a$$892 = {};
    }
    var b$$796 = this._changing;
    this._changing = !0;
    var c$$658;
    var v2387 = this._silent;
    for (c$$658 in v2387) {
      var v2386 = this._pending;
      v2386[c$$658] = !0;
    }
    var v2388 = a$$892.changes;
    var v2389 = this._silent;
    var d$$493 = f$$232.extend({}, v2388, v2389);
    this._silent = {};
    for (c$$658 in d$$493) {
      var v2390 = "change:" + c$$658;
      var v2391 = this.get(c$$658);
      this.trigger(v2390, this, v2391, a$$892);
    }
    if (b$$796) {
      return this;
    }
    var v14946 = this._pending;
    var v9079 = f$$232.isEmpty(v14946);
    var v2395 = !v9079;
    for (;v2395;) {
      this._pending = {};
      this.trigger("change", this, a$$892);
      var v2393 = this.changed;
      for (c$$658 in v2393) {
        var v19366 = this._pending;
        var v14947 = v19366[c$$658];
        var v9080 = !v14947;
        if (v9080) {
          var v19367 = this._silent;
          var v14948 = v19367[c$$658];
          v9080 = !v14948;
        }
        var v2392 = v9080;
        if (v2392) {
          var v9081 = this.changed;
          delete v9081[c$$658];
        }
      }
      var v2394 = this.attributes;
      var v30925 = f$$232.clone(v2394);
      this._previousAttributes = v30925;
      var v14949 = this._pending;
      var v9082 = f$$232.isEmpty(v14949);
      v2395 = !v9082;
    }
    this._changing = !1;
    return this;
  }
  function v2152() {
    var v2396 = this.id;
    return null == v2396;
  }
  function v2151() {
    var v2397 = this.constructor;
    var v2398 = this.attributes;
    return new v2397(v2398);
  }
  function v2150(a$$891) {
    return a$$891;
  }
  function v2149() {
    var v9083 = n$$110(this, "urlRoot");
    var v14951 = !v9083;
    if (v14951) {
      var v14950 = this.collection;
      v9083 = n$$110(v14950, "url");
    }
    var v2399 = v9083;
    var v9084 = !v2399;
    if (v9084) {
      v2399 = t$$33();
    }
    var a$$890 = v2399;
    var v2400;
    var v9087 = this.isNew();
    if (v9087) {
      v2400 = a$$890;
    } else {
      var v19368;
      var v28690 = a$$890.length;
      var v27739 = v28690 - 1;
      var v26217 = a$$890.charAt(v27739);
      var v24049 = "/" == v26217;
      if (v24049) {
        v19368 = "";
      } else {
        v19368 = "/";
      }
      var v14952 = v19368;
      var v9085 = a$$890 + v14952;
      var v14953 = this.id;
      var v9086 = encodeURIComponent(v14953);
      v2400 = v9085 + v9086;
    }
    return v2400;
  }
  function v2148(a$$889) {
    function v2147(e$$418) {
      var v2401 = a$$889.wait;
      if (v2401) {
        d$$492();
      }
      var v2402;
      if (c$$657) {
        v2402 = c$$657(b$$795, e$$418);
      } else {
        v2402 = b$$795.trigger("sync", b$$795, e$$418, a$$889);
      }
      v2402;
      return;
    }
    function d$$492() {
      var v2403 = b$$795.collection;
      b$$795.trigger("destroy", b$$795, v2403, a$$889);
      return;
    }
    var v2404;
    if (a$$889) {
      v2404 = f$$232.clone(a$$889);
    } else {
      v2404 = {};
    }
    a$$889 = v2404;
    var b$$795 = this;
    var c$$657 = a$$889.success;
    var v2405 = this.isNew();
    if (v2405) {
      d$$492();
      return!1;
    }
    a$$889.success = v2147;
    var v2406 = a$$889;
    var v9088 = a$$889.error;
    var v30926 = g$$232.wrapError(v9088, b$$795, a$$889);
    v2406.error = v30926;
    var v9089 = this.sync;
    var v14954 = !v9089;
    if (v14954) {
      v9089 = g$$232.sync;
    }
    var v2407 = v9089;
    var e$$417 = v2407.call(this, "delete", this, a$$889);
    var v2408 = a$$889.wait;
    var v9090 = !v2408;
    if (v9090) {
      d$$492();
    }
    return e$$417;
  }
  function v2146(a$$887, b$$793, c$$656) {
    function v2145(a$$888, b$$794, e$$416) {
      b$$794 = h$$194.parse(a$$888, e$$416);
      var v2410 = c$$656.wait;
      if (v2410) {
        delete c$$656.wait;
        var v2409 = d$$491 || {};
        b$$794 = f$$232.extend(v2409, b$$794);
      }
      var v9091 = h$$194.set(b$$794, c$$656);
      var v2411 = !v9091;
      if (v2411) {
        return false;
      }
      var v2412;
      if (i$$242) {
        v2412 = i$$242(h$$194, a$$888);
      } else {
        v2412 = h$$194.trigger("sync", h$$194, a$$888, c$$656);
      }
      v2412;
      return;
    }
    var d$$491;
    var e$$415;
    var v2413;
    var v14955 = f$$232.isObject(a$$887);
    var v19369 = !v14955;
    if (v19369) {
      v14955 = null == a$$887;
    }
    var v9092 = v14955;
    if (v9092) {
      d$$491 = a$$887;
      v2413 = c$$656 = b$$793;
    } else {
      d$$491 = {};
      v2413 = d$$491[a$$887] = b$$793;
    }
    v2413;
    var v2414;
    if (c$$656) {
      v2414 = f$$232.clone(c$$656);
    } else {
      v2414 = {};
    }
    c$$656 = v2414;
    var v2417 = c$$656.wait;
    if (v2417) {
      var v9093 = this._validate(d$$491, c$$656);
      var v2415 = !v9093;
      if (v2415) {
        return!1;
      }
      var v2416 = this.attributes;
      e$$415 = f$$232.clone(v2416);
    }
    var v9094 = !0;
    var v2418 = {silent:v9094};
    a$$887 = f$$232.extend({}, c$$656, v2418);
    var v9095 = d$$491;
    if (v9095) {
      var v24050;
      var v26218 = c$$656.wait;
      if (v26218) {
        v24050 = a$$887;
      } else {
        v24050 = c$$656;
      }
      var v19370 = v24050;
      var v14956 = this.set(d$$491, v19370);
      v9095 = !v14956;
    }
    var v2419 = v9095;
    if (v2419) {
      return!1;
    }
    var h$$194 = this;
    var i$$242 = c$$656.success;
    c$$656.success = v2145;
    var v2420 = c$$656;
    var v9096 = c$$656.error;
    var v30927 = g$$232.wrapError(v9096, h$$194, c$$656);
    v2420.error = v30927;
    var v2421;
    var v9097 = this.isNew();
    if (v9097) {
      v2421 = "create";
    } else {
      v2421 = "update";
    }
    b$$793 = v2421;
    var v9098 = this.sync;
    var v14957 = !v9098;
    if (v14957) {
      v9098 = g$$232.sync;
    }
    var v2422 = v9098;
    b$$793 = v2422.call(this, b$$793, this, c$$656);
    var v2423 = c$$656.wait;
    if (v2423) {
      this.set(e$$415, a$$887);
    }
    return b$$793;
  }
  function v2144(a$$886) {
    function v2143(d$$490, e$$414, f$$235) {
      var v14958 = b$$792.parse(d$$490, f$$235);
      var v9099 = b$$792.set(v14958, a$$886);
      var v2424 = !v9099;
      if (v2424) {
        return!1;
      }
      if (c$$655) {
        c$$655(b$$792, d$$490);
      }
      return;
    }
    var v2425;
    if (a$$886) {
      v2425 = f$$232.clone(a$$886);
    } else {
      v2425 = {};
    }
    a$$886 = v2425;
    var b$$792 = this;
    var c$$655 = a$$886.success;
    a$$886.success = v2143;
    var v2426 = a$$886;
    var v9100 = a$$886.error;
    var v30928 = g$$232.wrapError(v9100, b$$792, a$$886);
    v2426.error = v30928;
    var v9101 = this.sync;
    var v14959 = !v9101;
    if (v14959) {
      v9101 = g$$232.sync;
    }
    var v2427 = v9101;
    return v2427.call(this, "read", this, a$$886);
  }
  function v2142(a$$885) {
    var v9102 = a$$885;
    var v14960 = !v9102;
    if (v14960) {
      v9102 = a$$885 = {};
    }
    var v2428 = v9102;
    v2428.unset = !0;
    var v9103 = this.attributes;
    var v2429 = f$$232.clone(v9103);
    return this.set(v2429, a$$885);
  }
  function v2141(a$$884, b$$791) {
    var v9104 = b$$791;
    var v14961 = !v9104;
    if (v14961) {
      v9104 = b$$791 = {};
    }
    var v2430 = v9104;
    v2430.unset = !0;
    return this.set(a$$884, null, b$$791);
  }
  function v2140(a$$883, b$$790, c$$654) {
    var d$$489;
    var e$$413;
    var v2431;
    var v14962 = f$$232.isObject(a$$883);
    var v19371 = !v14962;
    if (v19371) {
      v14962 = null == a$$883;
    }
    var v9105 = v14962;
    if (v9105) {
      d$$489 = a$$883;
      v2431 = c$$654 = b$$790;
    } else {
      d$$489 = {};
      v2431 = d$$489[a$$883] = b$$790;
    }
    v2431;
    var v9106 = !c$$654;
    if (v9106) {
      c$$654 = {};
    }
    var v2432 = !d$$489;
    if (v2432) {
      return this;
    }
    var v2433 = d$$489 instanceof o$$42;
    if (v2433) {
      d$$489 = d$$489.attributes;
    }
    var v2434 = c$$654.unset;
    if (v2434) {
      for (e$$413 in d$$489) {
        d$$489[e$$413] = void 0;
      }
    }
    var v9107 = this._validate(d$$489, c$$654);
    var v2435 = !v9107;
    if (v2435) {
      return!1;
    }
    var v9108 = this.idAttribute;
    var v2436 = v9108 in d$$489;
    if (v2436) {
      var v9109 = this.idAttribute;
      this.id = d$$489[v9109];
    }
    b$$790 = c$$654.changes = {};
    var h$$193 = this.attributes;
    var g$$236 = this._escapedAttributes;
    var v2437 = this._previousAttributes;
    var v9110 = !v2437;
    if (v9110) {
      v2437 = {};
    }
    var j$$129 = v2437;
    for (e$$413 in d$$489) {
      a$$883 = d$$489[e$$413];
      var v19372 = h$$193[e$$413];
      var v14963 = f$$232.isEqual(v19372, a$$883);
      var v9111 = !v14963;
      var v14965 = !v9111;
      if (v14965) {
        var v14964 = c$$654.unset;
        if (v14964) {
          v14964 = f$$232.has(h$$193, e$$413);
        }
        v9111 = v14964;
      }
      var v2438 = v9111;
      if (v2438) {
        delete g$$236[e$$413];
        var v14966;
        var v19373 = c$$654.silent;
        if (v19373) {
          v14966 = this._silent;
        } else {
          v14966 = b$$790;
        }
        var v9112 = v14966;
        v9112[e$$413] = !0;
      }
      var v2439;
      var v9113 = c$$654.unset;
      if (v9113) {
        v2439 = delete h$$193[e$$413];
      } else {
        v2439 = h$$193[e$$413] = a$$883;
      }
      v2439;
      var v2440;
      var v24051 = j$$129[e$$413];
      var v19374 = f$$232.isEqual(v24051, a$$883);
      var v14967 = !v19374;
      var v19377 = !v14967;
      if (v19377) {
        var v19375 = f$$232.has(h$$193, e$$413);
        var v19376 = f$$232.has(j$$129, e$$413);
        v14967 = v19375 != v19376;
      }
      var v9114 = v14967;
      if (v9114) {
        var v14968 = this.changed;
        v14968[e$$413] = a$$883;
        var v14969 = c$$654.silent;
        var v19379 = !v14969;
        if (v19379) {
          var v19378 = this._pending;
          v14969 = v19378[e$$413] = !0;
        }
        v2440 = v14969;
      } else {
        var v14970 = this.changed;
        delete v14970[e$$413];
        var v14971 = this._pending;
        v2440 = delete v14971[e$$413];
      }
      v2440;
    }
    var v2441 = c$$654.silent;
    var v9115 = !v2441;
    if (v9115) {
      this.change(c$$654);
    }
    return this;
  }
  function v2139(a$$882) {
    var v2442 = this.get(a$$882);
    return null != v2442;
  }
  function v2138(a$$881) {
    var b$$789;
    var v9116 = this._escapedAttributes;
    var v2443 = b$$789 = v9116[a$$881];
    if (v2443) {
      return b$$789;
    }
    b$$789 = this.get(a$$881);
    var v2444 = this._escapedAttributes;
    var v14972;
    var v19380 = null == b$$789;
    if (v19380) {
      v14972 = "";
    } else {
      v14972 = "" + b$$789;
    }
    var v9117 = v14972;
    var v30929 = f$$232.escape(v9117);
    return v2444[a$$881] = v30929;
  }
  function v2137(a$$880) {
    var v2445 = this.attributes;
    return v2445[a$$880];
  }
  function v2136() {
    var v2446 = this.attributes;
    return f$$232.clone(v2446);
  }
  function v2135() {
    return;
  }
  function v2134(a$$879, b$$788) {
    var c$$653;
    var v9118 = !a$$879;
    if (v9118) {
      a$$879 = {};
    }
    var v9119 = b$$788;
    if (v9119) {
      v9119 = b$$788.parse;
    }
    var v2447 = v9119;
    if (v2447) {
      a$$879 = this.parse(a$$879);
    }
    var v2448 = c$$653 = n$$110(this, "defaults");
    if (v2448) {
      a$$879 = f$$232.extend({}, c$$653, a$$879);
    }
    var v9120 = b$$788;
    if (v9120) {
      v9120 = b$$788.collection;
    }
    var v2449 = v9120;
    if (v2449) {
      this.collection = b$$788.collection;
    }
    this.attributes = {};
    this._escapedAttributes = {};
    var v30930 = f$$232.uniqueId("c");
    this.cid = v30930;
    this.changed = {};
    this._silent = {};
    this._pending = {};
    var v9121 = !0;
    var v2450 = {silent:v9121};
    this.set(a$$879, v2450);
    this.changed = {};
    this._silent = {};
    this._pending = {};
    var v2451 = this.attributes;
    var v30931 = f$$232.clone(v2451);
    this._previousAttributes = v30931;
    var v2452 = this.initialize;
    v2452.apply(this, arguments);
    return;
  }
  function v2133(a$$878) {
    var b$$787;
    var c$$652;
    var d$$488;
    var e$$412;
    var f$$234;
    var g$$235;
    var v9122 = d$$488 = this._callbacks;
    var v2453 = !v9122;
    if (v2453) {
      return this;
    }
    f$$234 = d$$488.all;
    a$$878 = a$$878.split(p$$61);
    g$$235 = z$$11.call(arguments, 1);
    var v2463 = b$$787 = a$$878.shift();
    for (;v2463;) {
      var v2457 = c$$652 = d$$488[b$$787];
      if (v2457) {
        e$$412 = c$$652.tail;
        var v9123 = c$$652 = c$$652.next;
        var v2456 = v9123 !== e$$412;
        for (;v2456;) {
          var v2454 = c$$652.callback;
          var v9124 = c$$652.context;
          var v14973 = !v9124;
          if (v14973) {
            v9124 = this;
          }
          var v2455 = v9124;
          v2454.apply(v2455, g$$235);
          var v9125 = c$$652 = c$$652.next;
          v2456 = v9125 !== e$$412;
        }
      }
      var v2462 = c$$652 = f$$234;
      if (v2462) {
        e$$412 = c$$652.tail;
        var v2458 = [b$$787];
        b$$787 = v2458.concat(g$$235);
        var v9126 = c$$652 = c$$652.next;
        var v2461 = v9126 !== e$$412;
        for (;v2461;) {
          var v2459 = c$$652.callback;
          var v9127 = c$$652.context;
          var v14974 = !v9127;
          if (v14974) {
            v9127 = this;
          }
          var v2460 = v9127;
          v2459.apply(v2460, b$$787);
          var v9128 = c$$652 = c$$652.next;
          v2461 = v9128 !== e$$412;
        }
      }
      v2463 = b$$787 = a$$878.shift();
    }
    return this;
  }
  function v2132(a$$877, b$$786, c$$651) {
    var d$$487;
    var e$$411;
    var h$$192;
    var g$$234;
    var j$$128;
    var q$$28;
    var v2470 = e$$411 = this._callbacks;
    if (v2470) {
      var v14975 = !a$$877;
      if (v14975) {
        v14975 = !b$$786;
      }
      var v9129 = v14975;
      if (v9129) {
        v9129 = !c$$651;
      }
      var v2464 = v9129;
      if (v2464) {
        delete this._callbacks;
        return this;
      }
      var v2465;
      if (a$$877) {
        v2465 = a$$877.split(p$$61);
      } else {
        v2465 = f$$232.keys(e$$411);
      }
      a$$877 = v2465;
      var v2469 = d$$487 = a$$877.shift();
      for (;v2469;) {
        h$$192 = e$$411[d$$487];
        delete e$$411[d$$487];
        var v14976 = h$$192;
        if (v14976) {
          v14976 = b$$786 || c$$651;
        }
        var v2468 = v14976;
        if (v2468) {
          g$$234 = h$$192.tail;
          var v9130 = h$$192 = h$$192.next;
          var v2467 = v9130 !== g$$234;
          for (;v2467;) {
            j$$128 = h$$192.callback;
            q$$28 = h$$192.context;
            var v19381 = b$$786;
            if (v19381) {
              v19381 = j$$128 !== b$$786;
            }
            var v14977 = v19381;
            var v19383 = !v14977;
            if (v19383) {
              var v19382 = c$$651;
              if (v19382) {
                v19382 = q$$28 !== c$$651;
              }
              v14977 = v19382;
            }
            var v2466 = v14977;
            if (v2466) {
              this.on(d$$487, j$$128, q$$28);
            }
            var v9131 = h$$192 = h$$192.next;
            v2467 = v9131 !== g$$234;
          }
        }
        v2469 = d$$487 = a$$877.shift();
      }
      return this;
    }
    return;
  }
  function v2131(a$$876, b$$785, c$$650) {
    var d$$486;
    var e$$410;
    var f$$233;
    var g$$233;
    var j$$127;
    var v2471 = !b$$785;
    if (v2471) {
      return this;
    }
    a$$876 = a$$876.split(p$$61);
    var v2472 = this._callbacks;
    var v9132 = !v2472;
    if (v9132) {
      v2472 = this._callbacks = {};
    }
    d$$486 = v2472;
    var v2473 = e$$410 = a$$876.shift();
    for (;v2473;) {
      var v24052;
      var v26219 = j$$127 = d$$486[e$$410];
      if (v26219) {
        v24052 = j$$127.tail;
      } else {
        v24052 = {};
      }
      f$$233 = v24052;
      f$$233.next = g$$233 = {};
      f$$233.context = c$$650;
      f$$233.callback = b$$785;
      var v14978;
      if (j$$127) {
        v14978 = j$$127.next;
      } else {
        v14978 = f$$233;
      }
      var v9133 = v14978;
      d$$486[e$$410] = {tail:g$$233, next:v9133};
      v2473 = e$$410 = a$$876.shift();
    }
    return this;
  }
  function v2130() {
    l$$97.Backbone = y$$57;
    return this;
  }
  function v2129(a$$875) {
    i$$241 = a$$875;
    return;
  }
  function t$$33() {
    throw Error('A "url" property or function must be specified');
  }
  function n$$110(a$$946, b$$833) {
    var v2474;
    var v14979 = !a$$946;
    var v19385 = !v14979;
    if (v19385) {
      var v19384 = a$$946[b$$833];
      v14979 = !v19384;
    }
    var v9135 = v14979;
    if (v9135) {
      v2474 = null;
    } else {
      var v9134;
      var v19386 = a$$946[b$$833];
      var v14980 = f$$232.isFunction(v19386);
      if (v14980) {
        v9134 = a$$946[b$$833]();
      } else {
        v9134 = a$$946[b$$833];
      }
      v2474 = v9134;
    }
    return v2474;
  }
  function G$$5(a$$945, b$$832, c$$679) {
    function v2128() {
      a$$945.apply(this, arguments);
      return;
    }
    var d$$506;
    var v2475;
    var v14981 = b$$832;
    if (v14981) {
      v14981 = b$$832.hasOwnProperty("constructor");
    }
    var v9136 = v14981;
    if (v9136) {
      v2475 = b$$832.constructor;
    } else {
      v2475 = v2128;
    }
    d$$506 = v2475;
    f$$232.extend(d$$506, a$$945);
    x$$77.prototype = a$$945.prototype;
    var v2476 = d$$506;
    var v30932 = new x$$77;
    v2476.prototype = v30932;
    if (b$$832) {
      var v9137 = d$$506.prototype;
      f$$232.extend(v9137, b$$832);
    }
    if (c$$679) {
      f$$232.extend(d$$506, c$$679);
    }
    var v2477 = d$$506.prototype;
    v2477.constructor = d$$506;
    d$$506.__super__ = a$$945.prototype;
    return d$$506;
  }
  function x$$77() {
    return;
  }
  var l$$97 = this;
  var y$$57 = l$$97.Backbone;
  var v2478 = Array.prototype;
  var z$$11 = v2478.slice;
  var v2479 = Array.prototype;
  var A$$7 = v2479.splice;
  var g$$232;
  var v2480;
  var v14982 = typeof exports;
  var v9138 = "undefined" !== v14982;
  if (v9138) {
    v2480 = exports;
  } else {
    v2480 = l$$97.Backbone = {};
  }
  g$$232 = v2480;
  g$$232.VERSION = "0.9.2";
  var f$$232 = l$$97._;
  var v9139 = !f$$232;
  if (v9139) {
    var v14983 = typeof require;
    v9139 = "undefined" !== v14983;
  }
  var v2481 = v9139;
  if (v2481) {
    f$$232 = require("underscore");
  }
  var v9140 = l$$97.jQuery;
  var v14984 = !v9140;
  if (v14984) {
    v9140 = l$$97.Zepto;
  }
  var v2482 = v9140;
  var v9141 = !v2482;
  if (v9141) {
    v2482 = l$$97.ender;
  }
  var i$$241 = v2482;
  g$$232.setDomLibrary = v2129;
  g$$232.noConflict = v2130;
  g$$232.emulateHTTP = !1;
  g$$232.emulateJSON = !1;
  var p$$61 = /\s+/;
  var k$$93 = g$$232.Events = {on:v2131, off:v2132, trigger:v2133};
  k$$93.bind = k$$93.on;
  k$$93.unbind = k$$93.off;
  var o$$42 = g$$232.Model = v2134;
  var v2483 = o$$42.prototype;
  var v2484 = {changed:null, _silent:null, _pending:null, idAttribute:"id", initialize:v2135, toJSON:v2136, get:v2137, escape:v2138, has:v2139, set:v2140, unset:v2141, clear:v2142, fetch:v2144, save:v2146, destroy:v2148, url:v2149, parse:v2150, clone:v2151, isNew:v2152, change:v2153, hasChanged:v2154, changedAttributes:v2155, previous:v2156, previousAttributes:v2157, isValid:v2158, _validate:v2159};
  f$$232.extend(v2483, k$$93, v2484);
  var r$$32 = g$$232.Collection = v2160;
  var v2485 = r$$32.prototype;
  var v2486 = {model:o$$42, initialize:v2161, toJSON:v2163, add:v2164, remove:v2165, push:v2166, pop:v2167, unshift:v2168, shift:v2169, get:v2170, getByCid:v2171, at:v2172, where:v2174, sort:v2175, pluck:v2177, reset:v2178, fetch:v2180, create:v2182, parse:v2183, chain:v2184, _reset:v2185, _prepareModel:v2186, _removeReference:v2187, _onModelEvent:v2188};
  f$$232.extend(v2485, k$$93, v2486);
  var v2487 = "forEach,each,map,reduce,reduceRight,find,detect,filter,select,reject,every,all,some,any,include,contains,invoke,max,min,sortBy,sortedIndex,toArray,size,first,initial,rest,last,without,indexOf,shuffle,lastIndexOf,isEmpty,groupBy".split(",");
  f$$232.each(v2487, v2190);
  var u$$20 = g$$232.Router = v2191;
  var B$$7 = /:\w+/g;
  var C$$6 = /\*\w+/g;
  var D$$6 = /[-[\]{}()+?.,\\^$|#\s]/g;
  var v2488 = u$$20.prototype;
  var v2489 = {initialize:v2192, route:v2194, navigate:v2195, _bindRoutes:v2196, _routeToRegExp:v2197, _extractParameters:v2198};
  f$$232.extend(v2488, k$$93, v2489);
  var m$$64 = g$$232.History = v2199;
  var s$$36 = /^[#\/]/;
  var E$$6 = /msie [\w.]+/;
  m$$64.started = !1;
  var v2490 = m$$64.prototype;
  var v2491 = {interval:50, getHash:v2200, getFragment:v2201, start:v2202, stop:v2203, route:v2204, checkUrl:v2205, loadUrl:v2207, navigate:v2208, _updateHash:v2209};
  f$$232.extend(v2490, k$$93, v2491);
  var v$$15 = g$$232.View = v2210;
  var F$$6 = /^(\S+)\s*(.*)$/;
  var w$$21 = "model,collection,el,id,attributes,className,tagName".split(",");
  var v2492 = v$$15.prototype;
  var v2493 = {tagName:"div", $:v2211, initialize:v2212, render:v2213, remove:v2214, make:v2215, setElement:v2216, delegateEvents:v2217, undelegateEvents:v2218, _configure:v2219, _ensureElement:v2220};
  f$$232.extend(v2492, k$$93, v2493);
  o$$42.extend = r$$32.extend = u$$20.extend = v$$15.extend = v2221;
  var H$$5 = {create:"POST", update:"PUT", "delete":"DELETE", read:"GET"};
  g$$232.sync = v2223;
  g$$232.wrapError = v2225;
  return;
}
function v2127() {
  function v2126() {
    return this._wrapped;
  }
  function v2125() {
    this._chain = true;
    return this;
  }
  function v2124(a$$874) {
    function v2123() {
      var v9142 = this._wrapped;
      var v2494 = b$$784.apply(v9142, arguments);
      var v2495 = this._chain;
      return x$$76(v2494, v2495);
    }
    var b$$784 = k$$92[a$$874];
    var v2496 = m$$63.prototype;
    v2496[a$$874] = v2123;
    return;
  }
  function v2122(a$$873) {
    function v2121() {
      var d$$485 = this._wrapped;
      b$$783.apply(d$$485, arguments);
      var e$$409 = d$$485.length;
      var v14985 = a$$873 == "shift";
      var v19387 = !v14985;
      if (v19387) {
        v14985 = a$$873 == "splice";
      }
      var v9143 = v14985;
      if (v9143) {
        v9143 = e$$409 === 0;
      }
      var v2497 = v9143;
      if (v2497) {
        delete d$$485[0];
      }
      var v2498 = this._chain;
      return x$$76(d$$485, v2498);
    }
    var b$$783 = k$$92[a$$873];
    var v2499 = m$$63.prototype;
    v2499[a$$873] = v2121;
    return;
  }
  function v2120(a$$868) {
    var v2500 = b$$743(a$$868);
    return v2500.chain();
  }
  function v2119(a$$862, c$$647, d$$484) {
    function v2118(a$$867) {
      return e$$408.call(this, a$$867, b$$743);
    }
    function v2117(a$$866, b$$782) {
      var v9144 = w$$20(b$$782);
      var v2501 = "';\n" + v9144;
      return v2501 + "\n;__p+='";
    }
    function v2116(a$$865, b$$781) {
      var v9145 = w$$20(b$$781);
      var v2502 = "'+\n(" + v9145;
      return v2502 + ")+\n'";
    }
    function v2115(a$$864, b$$780) {
      var v9146 = w$$20(b$$780);
      var v2503 = "'+\n_.escape(" + v9146;
      return v2503 + ")+\n'";
    }
    function v2114(a$$863) {
      var v2504 = n$$109[a$$863];
      return "\\" + v2504;
    }
    var v2505 = d$$484 || {};
    var v2506 = b$$743.templateSettings;
    d$$484 = b$$743.defaults(v2505, v2506);
    var v24053 = a$$862.replace(O$$3, v2114);
    var v26220 = d$$484.escape;
    var v27740 = !v26220;
    if (v27740) {
      v26220 = u$$19;
    }
    var v24054 = v26220;
    var v19388 = v24053.replace(v24054, v2115);
    var v24055 = d$$484.interpolate;
    var v26221 = !v24055;
    if (v26221) {
      v24055 = u$$19;
    }
    var v19389 = v24055;
    var v14986 = v19388.replace(v19389, v2116);
    var v19390 = d$$484.evaluate;
    var v24056 = !v19390;
    if (v24056) {
      v19390 = u$$19;
    }
    var v14987 = v19390;
    var v9147 = v14986.replace(v14987, v2117);
    var v2507 = "__p+='" + v9147;
    a$$862 = v2507 + "';\n";
    var v2508 = d$$484.variable;
    var v9149 = !v2508;
    if (v9149) {
      var v9148 = "with(obj||{}){\n" + a$$862;
      a$$862 = v9148 + "}\n";
    }
    var v2509 = "var __p='';var print=function(){__p+=Array.prototype.join.call(arguments, '')};\n" + a$$862;
    a$$862 = v2509 + "return __p;\n";
    var v9150 = d$$484.variable;
    var v14988 = !v9150;
    if (v14988) {
      v9150 = "obj";
    }
    var v2510 = v9150;
    var e$$408 = new Function(v2510, "_", a$$862);
    if (c$$647) {
      return e$$408(c$$647, b$$743);
    }
    c$$647 = v2118;
    var v24057 = d$$484.variable;
    var v26222 = !v24057;
    if (v26222) {
      v24057 = "obj";
    }
    var v19391 = v24057;
    var v14989 = "function(" + v19391;
    var v9151 = v14989 + "){\n";
    var v2511 = v9151 + a$$862;
    c$$647.source = v2511 + "}";
    return c$$647;
  }
  function v2113(a$$859) {
    var b$$778 = N$$3;
    N$$3 = N$$3 + 1;
    var v2512;
    if (a$$859) {
      v2512 = a$$859 + b$$778;
    } else {
      v2512 = b$$778;
    }
    return v2512;
  }
  function v2112(a$$858) {
    function v2111(c$$646) {
      var v2513 = b$$743[c$$646] = a$$858[c$$646];
      M$$3(c$$646, v2513);
      return;
    }
    var v2514 = b$$743.functions(a$$858);
    j$$125(v2514, v2111);
    return;
  }
  function v2110(a$$857, c$$645) {
    var v2515 = a$$857 == null;
    if (v2515) {
      return null;
    }
    var d$$483 = a$$857[c$$645];
    var v2516;
    var v9152 = b$$743.isFunction(d$$483);
    if (v9152) {
      v2516 = d$$483.call(a$$857);
    } else {
      v2516 = d$$483;
    }
    return v2516;
  }
  function v2109(a$$856) {
    var v26223 = "" + a$$856;
    var v24058 = v26223.replace(/&/g, "&amp;");
    var v19392 = v24058.replace(/</g, "&lt;");
    var v14990 = v19392.replace(/>/g, "&gt;");
    var v9153 = v14990.replace(/"/g, "&quot;");
    var v2517 = v9153.replace(/'/g, "&#x27;");
    return v2517.replace(/\//g, "&#x2F;");
  }
  function v2108(a$$855, b$$777, d$$482) {
    var e$$407 = 0;
    var v2518 = e$$407 < a$$855;
    for (;v2518;) {
      b$$777.call(d$$482, e$$407);
      e$$407++;
      v2518 = e$$407 < a$$855;
    }
    return;
  }
  function v2107(a$$854) {
    return a$$854;
  }
  function v2106() {
    s$$35._ = I$$4;
    return this;
  }
  function v2105(a$$853, b$$776) {
    return K$$3.call(a$$853, b$$776);
  }
  function v2104(a$$852) {
    var v2519 = void 0;
    return a$$852 === v2519;
  }
  function v2103(a$$851) {
    return a$$851 === null;
  }
  function v2102(a$$850) {
    var v2520 = l$$96.call(a$$850);
    return v2520 == "[object RegExp]";
  }
  function v2101(a$$849) {
    var v2521 = l$$96.call(a$$849);
    return v2521 == "[object Date]";
  }
  function v2100(a$$848) {
    var v9154 = a$$848 === true;
    var v14991 = !v9154;
    if (v14991) {
      v9154 = a$$848 === false;
    }
    var v2522 = v9154;
    var v9156 = !v2522;
    if (v9156) {
      var v9155 = l$$96.call(a$$848);
      v2522 = v9155 == "[object Boolean]";
    }
    return v2522;
  }
  function v2099(a$$847) {
    return a$$847 !== a$$847;
  }
  function v2098(a$$846) {
    var v2523 = b$$743.isNumber(a$$846);
    if (v2523) {
      v2523 = isFinite(a$$846);
    }
    return v2523;
  }
  function v2097(a$$845) {
    var v2524 = l$$96.call(a$$845);
    return v2524 == "[object Number]";
  }
  function v2096(a$$844) {
    var v2525 = l$$96.call(a$$844);
    return v2525 == "[object String]";
  }
  function v2095(a$$843) {
    var v2526 = l$$96.call(a$$843);
    return v2526 == "[object Function]";
  }
  function v2094(a$$842) {
    var v9157 = !a$$842;
    var v14993 = !v9157;
    if (v14993) {
      var v14992 = b$$743.has(a$$842, "callee");
      v9157 = !v14992;
    }
    var v2527 = v9157;
    return!v2527;
  }
  function v2093(a$$841) {
    var v2528 = l$$96.call(a$$841);
    return v2528 == "[object Arguments]";
  }
  function v2092(a$$840) {
    var v2529 = Object(a$$840);
    return a$$840 === v2529;
  }
  function v2091(a$$839) {
    var v2530 = l$$96.call(a$$839);
    return v2530 == "[object Array]";
  }
  function v2090(a$$838) {
    var v14994 = a$$838;
    if (v14994) {
      var v19393 = a$$838.nodeType;
      v14994 = v19393 == 1;
    }
    var v9158 = v14994;
    var v2531 = !v9158;
    return!v2531;
  }
  function v2089(a$$837) {
    var v2532 = a$$837 == null;
    if (v2532) {
      return true;
    }
    var v9159 = b$$743.isArray(a$$837);
    var v14995 = !v9159;
    if (v14995) {
      v9159 = b$$743.isString(a$$837);
    }
    var v2534 = v9159;
    if (v2534) {
      var v2533 = a$$837.length;
      return v2533 === 0;
    }
    var c$$644;
    for (c$$644 in a$$837) {
      var v2535 = b$$743.has(a$$837, c$$644);
      if (v2535) {
        return false;
      }
    }
    return true;
  }
  function v2088(a$$836, b$$775) {
    return r$$31(a$$836, b$$775, []);
  }
  function v2087(a$$835, b$$774) {
    b$$774(a$$835);
    return a$$835;
  }
  function v2086(a$$834) {
    var v2536;
    var v14996 = b$$743.isObject(a$$834);
    var v9161 = !v14996;
    if (v9161) {
      v2536 = a$$834;
    } else {
      var v9160;
      var v14997 = b$$743.isArray(a$$834);
      if (v14997) {
        v9160 = a$$834.slice();
      } else {
        v9160 = b$$743.extend({}, a$$834);
      }
      v2536 = v9160;
    }
    return v2536;
  }
  function v2085(a$$833) {
    function v2084(b$$773) {
      var d$$481;
      for (d$$481 in b$$773) {
        var v9162 = a$$833[d$$481];
        var v2537 = v9162 == null;
        if (v2537) {
          a$$833[d$$481] = b$$773[d$$481];
        }
      }
      return;
    }
    var v2538 = i$$238.call(arguments, 1);
    j$$125(v2538, v2084);
    return a$$833;
  }
  function v2083(a$$832) {
    function v2082(b$$772) {
      var v2539 = b$$772 in a$$832;
      if (v2539) {
        c$$643[b$$772] = a$$832[b$$772];
      }
      return;
    }
    var c$$643 = {};
    var v9163 = i$$238.call(arguments, 1);
    var v2540 = b$$743.flatten(v9163);
    j$$125(v2540, v2082);
    return c$$643;
  }
  function v2081(a$$831) {
    function v2080(b$$771) {
      var d$$480;
      for (d$$480 in b$$771) {
        a$$831[d$$480] = b$$771[d$$480];
      }
      return;
    }
    var v2541 = i$$238.call(arguments, 1);
    j$$125(v2541, v2080);
    return a$$831;
  }
  function v2079(a$$830) {
    var c$$642 = [];
    var d$$479;
    for (d$$479 in a$$830) {
      var v9164 = a$$830[d$$479];
      var v2542 = b$$743.isFunction(v9164);
      if (v2542) {
        c$$642.push(d$$479);
      }
    }
    return c$$642.sort();
  }
  function v2078(a$$829) {
    var v2543 = b$$743.identity;
    return b$$743.map(a$$829, v2543);
  }
  function v2077(a$$828) {
    var v9165 = Object(a$$828);
    var v2544 = a$$828 !== v9165;
    if (v2544) {
      throw new TypeError("Invalid object");
    }
    var c$$641 = [];
    var d$$478;
    for (d$$478 in a$$828) {
      var v2545 = b$$743.has(a$$828, d$$478);
      if (v2545) {
        var v9166 = c$$641.length;
        c$$641[v9166] = d$$478;
      }
    }
    return c$$641;
  }
  function v2076(a$$827, b$$770) {
    function v2075() {
      var v9167 = a$$827 = a$$827 - 1;
      var v2546 = v9167 < 1;
      if (v2546) {
        return b$$770.apply(this, arguments);
      }
      return;
    }
    var v2547;
    var v9168 = a$$827 <= 0;
    if (v9168) {
      v2547 = b$$770();
    } else {
      v2547 = v2075;
    }
    return v2547;
  }
  function v2074() {
    function v2073() {
      var b$$769 = arguments;
      var v2548 = a$$826.length;
      var d$$477 = v2548 - 1;
      var v2550 = d$$477 >= 0;
      for (;v2550;) {
        var v9169 = a$$826[d$$477];
        var v2549 = v9169.apply(this, b$$769);
        b$$769 = [v2549];
        d$$477--;
        v2550 = d$$477 >= 0;
      }
      return b$$769[0];
    }
    var a$$826 = arguments;
    return v2073;
  }
  function v2072(a$$825, b$$768) {
    function v2071() {
      var v2551 = [a$$825];
      var v2552 = i$$238.call(arguments, 0);
      var d$$476 = v2551.concat(v2552);
      return b$$768.apply(this, d$$476);
    }
    return v2071;
  }
  function v2070(a$$824) {
    function v2069() {
      if (b$$767) {
        return d$$475;
      }
      b$$767 = true;
      return d$$475 = a$$824.apply(this, arguments);
    }
    var b$$767 = false;
    var d$$475;
    return v2069;
  }
  function v2068(a$$823, b$$766, d$$474) {
    function v2067() {
      function v2066() {
        e$$406 = null;
        var v9170 = !d$$474;
        if (v9170) {
          a$$823.apply(f$$231, g$$231);
        }
        return;
      }
      var f$$231 = this;
      var g$$231 = arguments;
      var v9171 = d$$474;
      if (v9171) {
        v9171 = !e$$406;
      }
      var v2553 = v9171;
      if (v2553) {
        a$$823.apply(f$$231, g$$231);
      }
      clearTimeout(e$$406);
      e$$406 = setTimeout(v2066, b$$766);
      return;
    }
    var e$$406;
    return v2067;
  }
  function v2065(a$$822, c$$640) {
    function v2064() {
      function v2063() {
        f$$230 = null;
        if (h$$191) {
          a$$822.apply(d$$473, e$$405);
        }
        j$$126();
        return;
      }
      d$$473 = this;
      e$$405 = arguments;
      var v9172 = !f$$230;
      if (v9172) {
        f$$230 = setTimeout(v2063, c$$640);
      }
      var v2554;
      if (g$$230) {
        v2554 = h$$191 = true;
      } else {
        v2554 = i$$240 = a$$822.apply(d$$473, e$$405);
      }
      v2554;
      j$$126();
      g$$230 = true;
      return i$$240;
    }
    function v2062() {
      h$$191 = g$$230 = false;
      return;
    }
    var d$$473;
    var e$$405;
    var f$$230;
    var g$$230;
    var h$$191;
    var i$$240;
    var j$$126 = b$$743.debounce(v2062, c$$640);
    return v2064;
  }
  function v2061(a$$821) {
    var v2555 = b$$743.delay;
    var v9173 = [a$$821, 1];
    var v9174 = i$$238.call(arguments, 1);
    var v2556 = v9173.concat(v9174);
    return v2555.apply(b$$743, v2556);
  }
  function v2060(a$$820, b$$765) {
    function v2059() {
      return a$$820.apply(null, d$$472);
    }
    var d$$472 = i$$238.call(arguments, 2);
    return setTimeout(v2059, b$$765);
  }
  function v2058(a$$819, c$$639) {
    function v2057() {
      var e$$404 = c$$639.apply(this, arguments);
      var v2557;
      var v9176 = b$$743.has(d$$471, e$$404);
      if (v9176) {
        v2557 = d$$471[e$$404];
      } else {
        var v9175 = d$$471;
        var v30933 = a$$819.apply(this, arguments);
        v2557 = v9175[e$$404] = v30933;
      }
      return v2557;
    }
    var d$$471 = {};
    var v9177 = !c$$639;
    if (v9177) {
      c$$639 = b$$743.identity;
    }
    return v2057;
  }
  function v2056(a$$818) {
    function v2055(c$$638) {
      var v2558 = a$$818;
      var v9178 = a$$818[c$$638];
      var v30934 = b$$743.bind(v9178, a$$818);
      v2558[c$$638] = v30934;
      return;
    }
    var c$$637 = i$$238.call(arguments, 1);
    var v9179 = c$$637.length;
    var v2559 = v9179 == 0;
    if (v2559) {
      c$$637 = b$$743.functions(a$$818);
    }
    j$$125(c$$637, v2055);
    return a$$818;
  }
  function v2054(a$$817, c$$636) {
    function v2053() {
      var v9180 = this instanceof d$$470;
      var v2561 = !v9180;
      if (v2561) {
        var v9181 = i$$238.call(arguments);
        var v2560 = e$$403.concat(v9181);
        return a$$817.apply(c$$636, v2560);
      }
      H$$4.prototype = a$$817.prototype;
      var b$$764 = new H$$4;
      var v9182 = i$$238.call(arguments);
      var v2562 = e$$403.concat(v9182);
      var g$$229 = a$$817.apply(b$$764, v2562);
      var v2563;
      var v14998 = Object(g$$229);
      var v9183 = v14998 === g$$229;
      if (v9183) {
        v2563 = g$$229;
      } else {
        v2563 = b$$764;
      }
      return v2563;
    }
    var d$$470;
    var e$$403;
    var v14999 = a$$817.bind;
    var v9184 = v14999 === t$$32;
    if (v9184) {
      v9184 = t$$32;
    }
    var v2565 = v9184;
    if (v2565) {
      var v2564 = i$$238.call(arguments, 1);
      return t$$32.apply(a$$817, v2564);
    }
    var v9185 = b$$743.isFunction(a$$817);
    var v2566 = !v9185;
    if (v2566) {
      throw new TypeError;
    }
    e$$403 = i$$238.call(arguments, 2);
    return d$$470 = v2053;
  }
  function v2052(a$$816, b$$763, d$$469) {
    var v9186 = arguments.length;
    var v2567 = v9186 <= 1;
    if (v2567) {
      b$$763 = a$$816 || 0;
      a$$816 = 0;
    }
    var v2568 = arguments[2];
    var v9187 = !v2568;
    if (v9187) {
      v2568 = 1;
    }
    d$$469 = v2568;
    var v15000 = b$$763 - a$$816;
    var v9188 = v15000 / d$$469;
    var v2569 = Math.ceil(v9188);
    var e$$402 = Math.max(v2569, 0);
    var f$$229 = 0;
    var g$$228 = Array(e$$402);
    var v2571 = f$$229 < e$$402;
    for (;v2571;) {
      var v2570 = f$$229;
      f$$229 = f$$229 + 1;
      g$$228[v2570] = a$$816;
      a$$816 = a$$816 + d$$469;
      v2571 = f$$229 < e$$402;
    }
    return g$$228;
  }
  function v2051(a$$815, b$$762) {
    var v2572 = a$$815 == null;
    if (v2572) {
      return-1;
    }
    var v9189 = F$$5;
    if (v9189) {
      var v15001 = a$$815.lastIndexOf;
      v9189 = v15001 === F$$5;
    }
    var v2573 = v9189;
    if (v2573) {
      return a$$815.lastIndexOf(b$$762);
    }
    var d$$468 = a$$815.length;
    var v2575 = d$$468;
    d$$468 = d$$468 - 1;
    for (;v2575;) {
      var v9190 = d$$468 in a$$815;
      if (v9190) {
        var v15002 = a$$815[d$$468];
        v9190 = v15002 === b$$762;
      }
      var v2574 = v9190;
      if (v2574) {
        return d$$468;
      }
      v2575 = d$$468;
      d$$468 = d$$468 - 1;
    }
    return-1;
  }
  function v2050(a$$814, c$$635, d$$467) {
    var v2576 = a$$814 == null;
    if (v2576) {
      return-1;
    }
    var e$$401;
    if (d$$467) {
      d$$467 = b$$743.sortedIndex(a$$814, c$$635);
      var v2577;
      var v15003 = a$$814[d$$467];
      var v9191 = v15003 === c$$635;
      if (v9191) {
        v2577 = d$$467;
      } else {
        v2577 = -1;
      }
      return v2577;
    }
    var v9192 = q$$27;
    if (v9192) {
      var v15004 = a$$814.indexOf;
      v9192 = v15004 === q$$27;
    }
    var v2578 = v9192;
    if (v2578) {
      return a$$814.indexOf(c$$635);
    }
    d$$467 = 0;
    e$$401 = a$$814.length;
    var v2580 = d$$467 < e$$401;
    for (;v2580;) {
      var v9193 = d$$467 in a$$814;
      if (v9193) {
        var v15005 = a$$814[d$$467];
        v9193 = v15005 === c$$635;
      }
      var v2579 = v9193;
      if (v2579) {
        return d$$467;
      }
      d$$467++;
      v2580 = d$$467 < e$$401;
    }
    return-1;
  }
  function v2049() {
    var a$$813 = i$$238.call(arguments);
    var v2581 = b$$743.pluck(a$$813, "length");
    var c$$634 = b$$743.max(v2581);
    var d$$466 = Array(c$$634);
    var e$$400 = 0;
    var v2583 = e$$400 < c$$634;
    for (;v2583;) {
      var v2582 = "" + e$$400;
      var v30935 = b$$743.pluck(a$$813, v2582);
      d$$466[e$$400] = v30935;
      e$$400++;
      v2583 = e$$400 < c$$634;
    }
    return d$$466;
  }
  function v2048(a$$811) {
    function v2047(a$$812) {
      var v2584 = b$$743.include(c$$633, a$$812);
      return!v2584;
    }
    var v2585 = i$$238.call(arguments, 1);
    var c$$633 = b$$743.flatten(v2585, true);
    return b$$743.filter(a$$811, v2047);
  }
  function v2046(a$$809) {
    function v2045(a$$810) {
      function v2044(c$$632) {
        var v2586 = b$$743.indexOf(c$$632, a$$810);
        return v2586 >= 0;
      }
      return b$$743.every(c$$631, v2044);
    }
    var c$$631 = i$$238.call(arguments, 1);
    var v2587 = b$$743.uniq(a$$809);
    return b$$743.filter(v2587, v2045);
  }
  function v2043() {
    var v2588 = b$$743.flatten(arguments, true);
    return b$$743.uniq(v2588);
  }
  function v2042(a$$808, c$$630, d$$464) {
    function v2041(d$$465, g$$227, h$$190) {
      var v9194;
      if (c$$630) {
        var v19394 = b$$743.last(d$$465);
        var v15006 = v19394 !== g$$227;
        var v19396 = !v15006;
        if (v19396) {
          var v19395 = d$$465.length;
          v15006 = !v19395;
        }
        v9194 = v15006;
      } else {
        var v15007 = b$$743.include(d$$465, g$$227);
        v9194 = !v15007;
      }
      var v2590 = v9194;
      if (v2590) {
        d$$465.push(g$$227);
        var v2589 = a$$808[h$$190];
        e$$399.push(v2589);
      }
      return d$$465;
    }
    var v2591;
    if (d$$464) {
      v2591 = b$$743.map(a$$808, d$$464);
    } else {
      v2591 = a$$808;
    }
    d$$464 = v2591;
    var e$$399 = [];
    var v9195 = a$$808.length;
    var v2592 = v9195 < 3;
    if (v2592) {
      c$$630 = true;
    }
    b$$743.reduce(d$$464, v2041, []);
    return e$$399;
  }
  function v2040(a$$807) {
    var v2593 = i$$238.call(arguments, 1);
    return b$$743.difference(a$$807, v2593);
  }
  function v2039(a$$805, c$$629) {
    function v2038(a$$806, e$$398) {
      var v2595 = b$$743.isArray(e$$398);
      if (v2595) {
        var v9196;
        if (c$$629) {
          v9196 = e$$398;
        } else {
          v9196 = b$$743.flatten(e$$398);
        }
        var v2594 = v9196;
        return a$$806.concat(v2594);
      }
      var v2596 = a$$806.length;
      a$$806[v2596] = e$$398;
      return a$$806;
    }
    return b$$743.reduce(a$$805, v2038, []);
  }
  function v2037(a$$803) {
    function v2036(a$$804) {
      var v2597 = !a$$804;
      return!v2597;
    }
    return b$$743.filter(a$$803, v2036);
  }
  function v2035(a$$802, b$$761, d$$463) {
    var v9197;
    var v19397 = b$$761 == null;
    var v24059 = !v19397;
    if (v24059) {
      v19397 = d$$463;
    }
    var v15008 = v19397;
    if (v15008) {
      v9197 = 1;
    } else {
      v9197 = b$$761;
    }
    var v2598 = v9197;
    return i$$238.call(a$$802, v2598);
  }
  function v2034(a$$801, b$$760, d$$462) {
    var v2599;
    var v15009 = b$$760 != null;
    if (v15009) {
      v15009 = !d$$462;
    }
    var v9200 = v15009;
    if (v9200) {
      var v19398 = a$$801.length;
      var v15010 = v19398 - b$$760;
      var v9198 = Math.max(v15010, 0);
      v2599 = i$$238.call(a$$801, v9198);
    } else {
      var v15011 = a$$801.length;
      var v9199 = v15011 - 1;
      v2599 = a$$801[v9199];
    }
    return v2599;
  }
  function v2033(a$$800, b$$759, d$$461) {
    var v9201 = a$$800.length;
    var v15012;
    var v24060 = b$$759 == null;
    var v26224 = !v24060;
    if (v26224) {
      v24060 = d$$461;
    }
    var v19399 = v24060;
    if (v19399) {
      v15012 = 1;
    } else {
      v15012 = b$$759;
    }
    var v9202 = v15012;
    var v2600 = v9201 - v9202;
    return i$$238.call(a$$800, 0, v2600);
  }
  function v2032(a$$799, b$$758, d$$460) {
    var v2601;
    var v15013 = b$$758 != null;
    if (v15013) {
      v15013 = !d$$460;
    }
    var v9203 = v15013;
    if (v9203) {
      v2601 = i$$238.call(a$$799, 0, b$$758);
    } else {
      v2601 = a$$799[0];
    }
    return v2601;
  }
  function v2031(a$$798) {
    var v2602;
    var v9205 = b$$743.isArray(a$$798);
    if (v9205) {
      v2602 = a$$798.length;
    } else {
      var v9204 = b$$743.keys(a$$798);
      v2602 = v9204.length;
    }
    return v2602;
  }
  function v2030(a$$797) {
    var v2603;
    var v9207 = !a$$797;
    if (v9207) {
      v2603 = [];
    } else {
      var v9206;
      var v19400 = b$$743.isArray(a$$797);
      var v24061 = !v19400;
      if (v24061) {
        v19400 = b$$743.isArguments(a$$797);
      }
      var v15015 = v19400;
      if (v15015) {
        v9206 = i$$238.call(a$$797);
      } else {
        var v15014;
        var v24062 = a$$797.toArray;
        if (v24062) {
          var v26225 = a$$797.toArray;
          v24062 = b$$743.isFunction(v26225);
        }
        var v19401 = v24062;
        if (v19401) {
          v15014 = a$$797.toArray();
        } else {
          v15014 = b$$743.values(a$$797);
        }
        v9206 = v15014;
      }
      v2603 = v9206;
    }
    return v2603;
  }
  function v2029(a$$796, c$$628, d$$459) {
    var v9208 = !d$$459;
    if (v9208) {
      d$$459 = b$$743.identity;
    }
    var e$$397 = 0;
    var f$$228 = a$$796.length;
    var v2606 = e$$397 < f$$228;
    for (;v2606;) {
      var v2604 = e$$397 + f$$228;
      var g$$226 = v2604 >> 1;
      var v2605;
      var v19402 = a$$796[g$$226];
      var v15016 = d$$459(v19402);
      var v15017 = d$$459(c$$628);
      var v9209 = v15016 < v15017;
      if (v9209) {
        v2605 = e$$397 = g$$226 + 1;
      } else {
        v2605 = f$$228 = g$$226;
      }
      v2605;
      v2606 = e$$397 < f$$228;
    }
    return e$$397;
  }
  function v2028(a$$793, c$$626) {
    function v2027(a$$795, b$$757) {
      var c$$627 = e$$396(a$$795, b$$757);
      var v9210 = d$$458[c$$627];
      var v15018 = !v9210;
      if (v15018) {
        v9210 = d$$458[c$$627] = [];
      }
      var v2607 = v9210;
      v2607.push(a$$795);
      return;
    }
    function v2026(a$$794) {
      return a$$794[c$$626];
    }
    var d$$458 = {};
    var v2608;
    var v9211 = b$$743.isFunction(c$$626);
    if (v9211) {
      v2608 = c$$626;
    } else {
      v2608 = v2026;
    }
    var e$$396 = v2608;
    j$$125(a$$793, v2027);
    return d$$458;
  }
  function v2025(a$$789, c$$623, d$$456) {
    function v2024(a$$792, b$$756) {
      var c$$625 = a$$792.criteria;
      var d$$457 = b$$756.criteria;
      var v2609;
      var v15019 = void 0;
      var v9213 = c$$625 === v15019;
      if (v9213) {
        v2609 = 1;
      } else {
        var v9212;
        var v19403 = void 0;
        var v15021 = d$$457 === v19403;
        if (v15021) {
          v9212 = -1;
        } else {
          var v15020;
          var v19405 = c$$625 < d$$457;
          if (v19405) {
            v15020 = -1;
          } else {
            var v19404;
            var v24063 = c$$625 > d$$457;
            if (v24063) {
              v19404 = 1;
            } else {
              v19404 = 0;
            }
            v15020 = v19404;
          }
          v9212 = v15020;
        }
        v2609 = v9212;
      }
      return v2609;
    }
    function v2023(a$$791, b$$755, c$$624) {
      var v2610 = e$$395.call(d$$456, a$$791, b$$755, c$$624);
      return{value:a$$791, criteria:v2610};
    }
    function v2022(a$$790) {
      return a$$790[c$$623];
    }
    var v2611;
    var v9214 = b$$743.isFunction(c$$623);
    if (v9214) {
      v2611 = c$$623;
    } else {
      v2611 = v2022;
    }
    var e$$395 = v2611;
    var v9215 = b$$743.map(a$$789, v2023);
    var v2612 = v9215.sort(v2024);
    return b$$743.pluck(v2612, "value");
  }
  function v2021(a$$787) {
    function v2020(a$$788, f$$227) {
      var v9216 = Math.random();
      var v9217 = f$$227 + 1;
      var v2613 = v9216 * v9217;
      d$$455 = Math.floor(v2613);
      b$$754[f$$227] = b$$754[d$$455];
      b$$754[d$$455] = a$$788;
      return;
    }
    var b$$754 = [];
    var d$$455;
    j$$125(a$$787, v2020);
    return b$$754;
  }
  function v2019(a$$785, c$$622, d$$454) {
    function v2018(a$$786, b$$753, h$$189) {
      var v2614;
      if (c$$622) {
        v2614 = c$$622.call(d$$454, a$$786, b$$753, h$$189);
      } else {
        v2614 = a$$786;
      }
      b$$753 = v2614;
      var v9218 = e$$394.computed;
      var v2615 = b$$753 < v9218;
      if (v2615) {
        e$$394 = {value:a$$786, computed:b$$753};
      }
      return;
    }
    var v15022 = !c$$622;
    if (v15022) {
      v15022 = b$$743.isArray(a$$785);
    }
    var v9219 = v15022;
    if (v9219) {
      var v15023 = a$$785[0];
      var v19406 = a$$785[0];
      var v15024 = +v19406;
      v9219 = v15023 === v15024;
    }
    var v2617 = v9219;
    if (v2617) {
      var v2616 = Math.min;
      return v2616.apply(Math, a$$785);
    }
    var v9220 = !c$$622;
    if (v9220) {
      v9220 = b$$743.isEmpty(a$$785);
    }
    var v2618 = v9220;
    if (v2618) {
      return Infinity;
    }
    var e$$394 = {computed:Infinity};
    j$$125(a$$785, v2018);
    return e$$394.value;
  }
  function v2017(a$$783, c$$621, d$$453) {
    function v2016(a$$784, b$$752, h$$188) {
      var v2619;
      if (c$$621) {
        v2619 = c$$621.call(d$$453, a$$784, b$$752, h$$188);
      } else {
        v2619 = a$$784;
      }
      b$$752 = v2619;
      var v9221 = e$$393.computed;
      var v2620 = b$$752 >= v9221;
      if (v2620) {
        e$$393 = {value:a$$784, computed:b$$752};
      }
      return;
    }
    var v15025 = !c$$621;
    if (v15025) {
      v15025 = b$$743.isArray(a$$783);
    }
    var v9222 = v15025;
    if (v9222) {
      var v15026 = a$$783[0];
      var v19407 = a$$783[0];
      var v15027 = +v19407;
      v9222 = v15026 === v15027;
    }
    var v2622 = v9222;
    if (v2622) {
      var v2621 = Math.max;
      return v2621.apply(Math, a$$783);
    }
    var v9223 = !c$$621;
    if (v9223) {
      v9223 = b$$743.isEmpty(a$$783);
    }
    var v2623 = v9223;
    if (v2623) {
      return-Infinity;
    }
    var v2624 = -Infinity;
    var e$$393 = {computed:v2624};
    j$$125(a$$783, v2016);
    return e$$393.value;
  }
  function v2015(a$$781, c$$620) {
    function v2014(a$$782) {
      return a$$782[c$$620];
    }
    return b$$743.map(a$$781, v2014);
  }
  function v2013(a$$779, c$$619) {
    function v2012(a$$780) {
      var v9224;
      var v15028 = b$$743.isFunction(c$$619);
      if (v15028) {
        v9224 = c$$619 || a$$780;
      } else {
        v9224 = a$$780[c$$619];
      }
      var v2625 = v9224;
      return v2625.apply(a$$780, d$$452);
    }
    var d$$452 = i$$238.call(arguments, 2);
    return b$$743.map(a$$779, v2012);
  }
  function v2011(a$$777, c$$618) {
    function v2010(a$$778) {
      return a$$778 === c$$618;
    }
    var b$$751 = false;
    var v2626 = a$$777 == null;
    if (v2626) {
      return b$$751;
    }
    var v9225 = q$$27;
    if (v9225) {
      var v15029 = a$$777.indexOf;
      v9225 = v15029 === q$$27;
    }
    var v2628 = v9225;
    if (v2628) {
      var v2627 = a$$777.indexOf(c$$618);
      return v2627 != -1;
    }
    return b$$751 = G$$4(a$$777, v2010);
  }
  function v2009(a$$775, c$$617, d$$451) {
    function v2008(a$$776, b$$750, h$$187) {
      var v9226 = e$$392;
      var v15030 = !v9226;
      if (v15030) {
        v9226 = e$$392 = c$$617.call(d$$451, a$$776, b$$750, h$$187);
      }
      var v2629 = v9226;
      if (v2629) {
        return o$$41;
      }
      return;
    }
    var v9227 = !c$$617;
    if (v9227) {
      c$$617 = b$$743.identity;
    }
    var e$$392 = false;
    var v2630 = a$$775 == null;
    if (v2630) {
      return e$$392;
    }
    var v9228 = E$$5;
    if (v9228) {
      var v15031 = a$$775.some;
      v9228 = v15031 === E$$5;
    }
    var v2631 = v9228;
    if (v2631) {
      return a$$775.some(c$$617, d$$451);
    }
    j$$125(a$$775, v2008);
    var v2632 = !e$$392;
    return!v2632;
  }
  function v2007(a$$773, c$$616, b$$749) {
    function v2006(a$$774, g$$225, h$$186) {
      var v15032 = e$$391;
      if (v15032) {
        v15032 = c$$616.call(b$$749, a$$774, g$$225, h$$186);
      }
      var v9229 = e$$391 = v15032;
      var v2633 = !v9229;
      if (v2633) {
        return o$$41;
      }
      return;
    }
    var e$$391 = true;
    var v2634 = a$$773 == null;
    if (v2634) {
      return e$$391;
    }
    var v9230 = D$$5;
    if (v9230) {
      var v15033 = a$$773.every;
      v9230 = v15033 === D$$5;
    }
    var v2635 = v9230;
    if (v2635) {
      return a$$773.every(c$$616, b$$749);
    }
    j$$125(a$$773, v2006);
    var v2636 = !e$$391;
    return!v2636;
  }
  function v2005(a$$771, c$$615, b$$748) {
    function v2004(a$$772, g$$224, h$$185) {
      var v2637 = c$$615.call(b$$748, a$$772, g$$224, h$$185);
      var v9232 = !v2637;
      if (v9232) {
        var v9231 = e$$390.length;
        e$$390[v9231] = a$$772;
      }
      return;
    }
    var e$$390 = [];
    var v2638 = a$$771 == null;
    if (v2638) {
      return e$$390;
    }
    j$$125(a$$771, v2004);
    return e$$390;
  }
  function v2003(a$$769, c$$614, b$$747) {
    function v2002(a$$770, g$$223, h$$184) {
      var v2639 = c$$614.call(b$$747, a$$770, g$$223, h$$184);
      if (v2639) {
        var v9233 = e$$389.length;
        e$$389[v9233] = a$$770;
      }
      return;
    }
    var e$$389 = [];
    var v2640 = a$$769 == null;
    if (v2640) {
      return e$$389;
    }
    var v9234 = C$$5;
    if (v9234) {
      var v15034 = a$$769.filter;
      v9234 = v15034 === C$$5;
    }
    var v2641 = v9234;
    if (v2641) {
      return a$$769.filter(c$$614, b$$747);
    }
    j$$125(a$$769, v2002);
    return e$$389;
  }
  function v2001(a$$767, c$$613, b$$746) {
    function v2000(a$$768, g$$222, h$$183) {
      var v2642 = c$$613.call(b$$746, a$$768, g$$222, h$$183);
      if (v2642) {
        e$$388 = a$$768;
        return true;
      }
      return;
    }
    var e$$388;
    G$$4(a$$767, v2000);
    return e$$388;
  }
  function v1999(a$$766, c$$612, d$$450, e$$387) {
    var v2643 = arguments.length;
    var f$$226 = v2643 > 2;
    var v2644 = a$$766 == null;
    if (v2644) {
      a$$766 = [];
    }
    var v9235 = B$$6;
    if (v9235) {
      var v15035 = a$$766.reduceRight;
      v9235 = v15035 === B$$6;
    }
    var v2646 = v9235;
    if (v2646) {
      if (e$$387) {
        c$$612 = b$$743.bind(c$$612, e$$387);
      }
      var v2645;
      if (f$$226) {
        v2645 = a$$766.reduceRight(c$$612, d$$450);
      } else {
        v2645 = a$$766.reduceRight(c$$612);
      }
      return v2645;
    }
    var v2647 = b$$743.toArray(a$$766);
    var g$$221 = v2647.reverse();
    var v9236 = e$$387;
    if (v9236) {
      v9236 = !f$$226;
    }
    var v2648 = v9236;
    if (v2648) {
      c$$612 = b$$743.bind(c$$612, e$$387);
    }
    var v2649;
    if (f$$226) {
      v2649 = b$$743.reduce(g$$221, c$$612, d$$450, e$$387);
    } else {
      v2649 = b$$743.reduce(g$$221, c$$612);
    }
    return v2649;
  }
  function v1998(a$$764, c$$611, d$$449, e$$386) {
    function v1997(a$$765, b$$745, i$$239) {
      if (f$$225) {
        d$$449 = c$$611.call(e$$386, d$$449, a$$765, b$$745, i$$239);
      } else {
        d$$449 = a$$765;
        f$$225 = true;
      }
      return;
    }
    var v2650 = arguments.length;
    var f$$225 = v2650 > 2;
    var v2651 = a$$764 == null;
    if (v2651) {
      a$$764 = [];
    }
    var v9237 = A$$6;
    if (v9237) {
      var v15036 = a$$764.reduce;
      v9237 = v15036 === A$$6;
    }
    var v2653 = v9237;
    if (v2653) {
      if (e$$386) {
        c$$611 = b$$743.bind(c$$611, e$$386);
      }
      var v2652;
      if (f$$225) {
        v2652 = a$$764.reduce(c$$611, d$$449);
      } else {
        v2652 = a$$764.reduce(c$$611);
      }
      return v2652;
    }
    j$$125(a$$764, v1997);
    var v2654 = !f$$225;
    if (v2654) {
      throw new TypeError("Reduce of empty array with no initial value");
    }
    return d$$449;
  }
  function v1996(a$$762, c$$610, b$$744) {
    function v1995(a$$763, g$$220, h$$182) {
      var v2655 = e$$385;
      var v2656 = e$$385.length;
      var v30936 = c$$610.call(b$$744, a$$763, g$$220, h$$182);
      v2655[v2656] = v30936;
      return;
    }
    var e$$385 = [];
    var v2657 = a$$762 == null;
    if (v2657) {
      return e$$385;
    }
    var v9238 = z$$10;
    if (v9238) {
      var v15037 = a$$762.map;
      v9238 = v15037 === z$$10;
    }
    var v2658 = v9238;
    if (v2658) {
      return a$$762.map(c$$610, b$$744);
    }
    j$$125(a$$762, v1995);
    var v9239 = a$$762.length;
    var v15038 = a$$762.length;
    var v9240 = +v15038;
    var v2659 = v9239 === v9240;
    if (v2659) {
      e$$385.length = a$$762.length;
    }
    return e$$385;
  }
  function v1994(a$$761, c$$609, d$$448) {
    var v2665 = a$$761 != null;
    if (v2665) {
      var v9241 = y$$56;
      if (v9241) {
        var v15039 = a$$761.forEach;
        v9241 = v15039 === y$$56;
      }
      var v2664 = v9241;
      if (v2664) {
        a$$761.forEach(c$$609, d$$448);
      } else {
        var v9242 = a$$761.length;
        var v15040 = a$$761.length;
        var v9243 = +v15040;
        var v2663 = v9242 === v9243;
        if (v2663) {
          var e$$384 = 0;
          var f$$224 = a$$761.length;
          var v2661 = e$$384 < f$$224;
          for (;v2661;) {
            var v9244 = e$$384 in a$$761;
            if (v9244) {
              var v19408 = a$$761[e$$384];
              var v15041 = c$$609.call(d$$448, v19408, e$$384, a$$761);
              v9244 = v15041 === o$$41;
            }
            var v2660 = v9244;
            if (v2660) {
              break;
            }
            e$$384++;
            v2661 = e$$384 < f$$224;
          }
        } else {
          for (e$$384 in a$$761) {
            var v9245 = b$$743.has(a$$761, e$$384);
            if (v9245) {
              var v19409 = a$$761[e$$384];
              var v15042 = c$$609.call(d$$448, v19409, e$$384, a$$761);
              v9245 = v15042 === o$$41;
            }
            var v2662 = v9245;
            if (v2662) {
              break;
            }
          }
        }
      }
    }
    return;
  }
  function M$$3(a$$871, c$$649) {
    function v1992() {
      var a$$872 = i$$238.call(arguments);
      var v2666 = this._wrapped;
      J$$4.call(a$$872, v2666);
      var v2667 = c$$649.apply(b$$743, a$$872);
      var v2668 = this._chain;
      return x$$76(v2667, v2668);
    }
    var v2669 = m$$63.prototype;
    v2669[a$$871] = v1992;
    return;
  }
  function x$$76(a$$870, c$$648) {
    var v2670;
    if (c$$648) {
      var v9246 = b$$743(a$$870);
      v2670 = v9246.chain();
    } else {
      v2670 = a$$870;
    }
    return v2670;
  }
  function m$$63(a$$869) {
    this._wrapped = a$$869;
    return;
  }
  function w$$20(a$$860) {
    function v1993(a$$861, b$$779) {
      return n$$109[b$$779];
    }
    return a$$860.replace(P$$3, v1993);
  }
  function H$$4() {
    return;
  }
  function b$$743(a$$760) {
    return new m$$63(a$$760);
  }
  function r$$31(a$$759, c$$608, d$$447) {
    var v2672 = a$$759 === c$$608;
    if (v2672) {
      var v2671 = 0 !== a$$759;
      var v9249 = !v2671;
      if (v9249) {
        var v9247 = 1 / a$$759;
        var v9248 = 1 / c$$608;
        v2671 = v9247 == v9248;
      }
      return v2671;
    }
    var v9250 = null == a$$759;
    var v15043 = !v9250;
    if (v15043) {
      v9250 = null == c$$608;
    }
    var v2673 = v9250;
    if (v2673) {
      return a$$759 === c$$608;
    }
    var v2674 = a$$759._chain;
    if (v2674) {
      a$$759 = a$$759._wrapped;
    }
    var v2675 = c$$608._chain;
    if (v2675) {
      c$$608 = c$$608._wrapped;
    }
    var v9251 = a$$759.isEqual;
    if (v9251) {
      var v15044 = a$$759.isEqual;
      v9251 = b$$743.isFunction(v15044);
    }
    var v2676 = v9251;
    if (v2676) {
      return a$$759.isEqual(c$$608);
    }
    var v9252 = c$$608.isEqual;
    if (v9252) {
      var v15045 = c$$608.isEqual;
      v9252 = b$$743.isFunction(v15045);
    }
    var v2677 = v9252;
    if (v2677) {
      return c$$608.isEqual(a$$759);
    }
    var e$$383 = l$$96.call(a$$759);
    var v9253 = l$$96.call(c$$608);
    var v2678 = e$$383 != v9253;
    if (v2678) {
      return!1;
    }
    switch(e$$383) {
      case "[object String]":
        var v2679 = "" + c$$608;
        return a$$759 == v2679;
      case "[object Number]":
        var v2680;
        var v15046 = +a$$759;
        var v9256 = a$$759 != v15046;
        if (v9256) {
          var v9254 = +c$$608;
          v2680 = c$$608 != v9254;
        } else {
          var v9255;
          var v15050 = 0 == a$$759;
          if (v15050) {
            var v15047 = 1 / a$$759;
            var v15048 = 1 / c$$608;
            v9255 = v15047 == v15048;
          } else {
            var v15049 = +c$$608;
            v9255 = a$$759 == v15049;
          }
          v2680 = v9255;
        }
        return v2680;
      case "[object Date]":
      ;
      case "[object Boolean]":
        var v2681 = +a$$759;
        var v2682 = +c$$608;
        return v2681 == v2682;
      case "[object RegExp]":
        var v19410 = a$$759.source;
        var v19411 = c$$608.source;
        var v15051 = v19410 == v19411;
        if (v15051) {
          var v19412 = a$$759.global;
          var v19413 = c$$608.global;
          v15051 = v19412 == v19413;
        }
        var v9257 = v15051;
        if (v9257) {
          var v15052 = a$$759.multiline;
          var v15053 = c$$608.multiline;
          v9257 = v15052 == v15053;
        }
        var v2683 = v9257;
        if (v2683) {
          var v9258 = a$$759.ignoreCase;
          var v9259 = c$$608.ignoreCase;
          v2683 = v9258 == v9259;
        }
        return v2683;
    }
    var v15054 = typeof a$$759;
    var v9260 = "object" != v15054;
    var v15056 = !v9260;
    if (v15056) {
      var v15055 = typeof c$$608;
      v9260 = "object" != v15055;
    }
    var v2684 = v9260;
    if (v2684) {
      return!1;
    }
    var f$$223 = d$$447.length;
    var v2686 = f$$223;
    f$$223 = f$$223 - 1;
    for (;v2686;) {
      var v9261 = d$$447[f$$223];
      var v2685 = v9261 == a$$759;
      if (v2685) {
        return!0;
      }
      v2686 = f$$223;
      f$$223 = f$$223 - 1;
    }
    d$$447.push(a$$759);
    f$$223 = 0;
    var g$$219 = !0;
    var v2692 = "[object Array]" == e$$383;
    if (v2692) {
      f$$223 = a$$759.length;
      var v15057 = c$$608.length;
      var v2688 = g$$219 = f$$223 == v15057;
      if (v2688) {
        var v9262 = f$$223;
        f$$223 = f$$223 - 1;
        if (v9262) {
          var v19414 = f$$223 in a$$759;
          var v19415 = f$$223 in c$$608;
          var v15058 = v19414 == v19415;
          if (v15058) {
            var v19416 = a$$759[f$$223];
            var v19417 = c$$608[f$$223];
            v15058 = r$$31(v19416, v19417, d$$447);
          }
          v9262 = g$$219 = v15058;
        }
        var v2687 = v9262;
        for (;v2687;) {
          var v9263 = f$$223;
          f$$223 = f$$223 - 1;
          if (v9263) {
            var v19418 = f$$223 in a$$759;
            var v19419 = f$$223 in c$$608;
            var v15059 = v19418 == v19419;
            if (v15059) {
              var v19420 = a$$759[f$$223];
              var v19421 = c$$608[f$$223];
              v15059 = r$$31(v19420, v19421, d$$447);
            }
            v9263 = g$$219 = v15059;
          }
          v2687 = v9263;
        }
      }
    } else {
      var v15060 = "constructor" in a$$759;
      var v15061 = "constructor" in c$$608;
      var v9264 = v15060 != v15061;
      var v15064 = !v9264;
      if (v15064) {
        var v15062 = a$$759.constructor;
        var v15063 = c$$608.constructor;
        v9264 = v15062 != v15063;
      }
      var v2689 = v9264;
      if (v2689) {
        return!1;
      }
      var h$$181;
      for (h$$181 in a$$759) {
        var v9265 = b$$743.has(a$$759, h$$181);
        if (v9265) {
          f$$223++;
          var v24064 = b$$743.has(c$$608, h$$181);
          if (v24064) {
            var v26226 = a$$759[h$$181];
            var v26227 = c$$608[h$$181];
            v24064 = r$$31(v26226, v26227, d$$447);
          }
          var v19422 = g$$219 = v24064;
          v9265 = !v19422;
        }
        var v2690 = v9265;
        if (v2690) {
          break;
        }
      }
      if (g$$219) {
        for (h$$181 in c$$608) {
          var v9266 = b$$743.has(c$$608, h$$181);
          if (v9266) {
            var v15065 = f$$223;
            f$$223 = f$$223 - 1;
            v9266 = !v15065;
          }
          var v2691 = v9266;
          if (v2691) {
            break;
          }
        }
        g$$219 = !f$$223;
      }
    }
    d$$447.pop();
    return g$$219;
  }
  var s$$35 = this;
  var I$$4 = s$$35._;
  var o$$41 = {};
  var k$$92 = Array.prototype;
  var p$$60 = Object.prototype;
  var i$$238 = k$$92.slice;
  var J$$4 = k$$92.unshift;
  var l$$96 = p$$60.toString;
  var K$$3 = p$$60.hasOwnProperty;
  var y$$56 = k$$92.forEach;
  var z$$10 = k$$92.map;
  var A$$6 = k$$92.reduce;
  var B$$6 = k$$92.reduceRight;
  var C$$5 = k$$92.filter;
  var D$$5 = k$$92.every;
  var E$$5 = k$$92.some;
  var q$$27 = k$$92.indexOf;
  var F$$5 = k$$92.lastIndexOf;
  p$$60 = Array.isArray;
  var L$$3 = Object.keys;
  var v2693 = Function.prototype;
  var t$$32 = v2693.bind;
  var v2694;
  var v15066 = typeof exports;
  var v9267 = "undefined" !== v15066;
  if (v9267) {
    var v24065 = typeof module;
    var v19423 = "undefined" !== v24065;
    if (v19423) {
      v19423 = module.exports;
    }
    var v15067 = v19423;
    if (v15067) {
      exports = module.exports = b$$743;
    }
    v2694 = exports._ = b$$743;
  } else {
    v2694 = s$$35._ = b$$743;
  }
  v2694;
  b$$743.VERSION = "1.3.3";
  var j$$125 = b$$743.each = b$$743.forEach = v1994;
  b$$743.map = b$$743.collect = v1996;
  b$$743.reduce = b$$743.foldl = b$$743.inject = v1998;
  b$$743.reduceRight = b$$743.foldr = v1999;
  b$$743.find = b$$743.detect = v2001;
  b$$743.filter = b$$743.select = v2003;
  b$$743.reject = v2005;
  b$$743.every = b$$743.all = v2007;
  var G$$4 = b$$743.some = b$$743.any = v2009;
  b$$743.include = b$$743.contains = v2011;
  b$$743.invoke = v2013;
  b$$743.pluck = v2015;
  b$$743.max = v2017;
  b$$743.min = v2019;
  b$$743.shuffle = v2021;
  b$$743.sortBy = v2025;
  b$$743.groupBy = v2028;
  b$$743.sortedIndex = v2029;
  b$$743.toArray = v2030;
  b$$743.size = v2031;
  b$$743.first = b$$743.head = b$$743.take = v2032;
  b$$743.initial = v2033;
  b$$743.last = v2034;
  b$$743.rest = b$$743.tail = v2035;
  b$$743.compact = v2037;
  b$$743.flatten = v2039;
  b$$743.without = v2040;
  b$$743.uniq = b$$743.unique = v2042;
  b$$743.union = v2043;
  b$$743.intersection = b$$743.intersect = v2046;
  b$$743.difference = v2048;
  b$$743.zip = v2049;
  b$$743.indexOf = v2050;
  b$$743.lastIndexOf = v2051;
  b$$743.range = v2052;
  b$$743.bind = v2054;
  b$$743.bindAll = v2056;
  b$$743.memoize = v2058;
  b$$743.delay = v2060;
  b$$743.defer = v2061;
  b$$743.throttle = v2065;
  b$$743.debounce = v2068;
  b$$743.once = v2070;
  b$$743.wrap = v2072;
  b$$743.compose = v2074;
  b$$743.after = v2076;
  b$$743.keys = L$$3 || v2077;
  b$$743.values = v2078;
  b$$743.functions = b$$743.methods = v2079;
  b$$743.extend = v2081;
  b$$743.pick = v2083;
  b$$743.defaults = v2085;
  b$$743.clone = v2086;
  b$$743.tap = v2087;
  b$$743.isEqual = v2088;
  b$$743.isEmpty = v2089;
  b$$743.isElement = v2090;
  b$$743.isArray = p$$60 || v2091;
  b$$743.isObject = v2092;
  b$$743.isArguments = v2093;
  var v2695 = b$$743.isArguments(arguments);
  var v9268 = !v2695;
  if (v9268) {
    b$$743.isArguments = v2094;
  }
  b$$743.isFunction = v2095;
  b$$743.isString = v2096;
  b$$743.isNumber = v2097;
  b$$743.isFinite = v2098;
  b$$743.isNaN = v2099;
  b$$743.isBoolean = v2100;
  b$$743.isDate = v2101;
  b$$743.isRegExp = v2102;
  b$$743.isNull = v2103;
  b$$743.isUndefined = v2104;
  b$$743.has = v2105;
  b$$743.noConflict = v2106;
  b$$743.identity = v2107;
  b$$743.times = v2108;
  b$$743.escape = v2109;
  b$$743.result = v2110;
  b$$743.mixin = v2112;
  var N$$3 = 0;
  b$$743.uniqueId = v2113;
  b$$743.templateSettings = {evaluate:/<%([\s\S]+?)%>/g, interpolate:/<%=([\s\S]+?)%>/g, escape:/<%-([\s\S]+?)%>/g};
  var u$$19 = /.^/;
  var n$$109 = {"\\":"\\", "'":"'", r:"\r", n:"\n", t:"\t", u2028:"\u2028", u2029:"\u2029"};
  var v$$14;
  for (v$$14 in n$$109) {
    var v2696 = n$$109[v$$14];
    n$$109[v2696] = v$$14;
  }
  var O$$3 = /\\|'|\r|\n|\t|\u2028|\u2029/g;
  var P$$3 = /\\(\\|'|r|n|t|u2028|u2029)/g;
  b$$743.template = v2119;
  b$$743.chain = v2120;
  b$$743.prototype = m$$63.prototype;
  b$$743.mixin(b$$743);
  var v2697 = "pop,push,reverse,shift,sort,splice,unshift".split(",");
  j$$125(v2697, v2122);
  var v2698 = ["concat", "join", "slice"];
  j$$125(v2698, v2124);
  var v2699 = m$$63.prototype;
  v2699.chain = v2125;
  var v2700 = m$$63.prototype;
  v2700.value = v2126;
  return;
}
function v1991() {
  function v1990(a$$758) {
    var b$$742 = null;
    try {
      var v9269;
      var v15068 = document.all;
      if (v15068) {
        v9269 = new ActiveXObject("Microsoft.XMLDOM");
      } else {
        v9269 = new DOMParser;
      }
      b$$742 = v9269;
      b$$742.async = !1;
    } catch (f$$222) {
      throw Error("XML Parser could not be instantiated");
    }
    var k$$91;
    try {
      var v2701;
      var v9271 = document.all;
      if (v9271) {
        var v9270;
        var v15069 = b$$742.loadXML(a$$758);
        if (v15069) {
          v9270 = b$$742;
        } else {
          v9270 = !1;
        }
        v2701 = v9270;
      } else {
        v2701 = b$$742.parseFromString(a$$758, "text/xml");
      }
      k$$91 = v2701;
    } catch (l$$95) {
      throw Error("Error parsing XML string");
    }
    return k$$91;
  }
  function v1989(c$$589) {
    function v1988(a$$757, b$$741) {
      var c$$607;
      var e$$382;
      var f$$221;
      var m$$61 = "";
      var v2702 = !b$$741;
      if (v2702) {
        return null;
      }
      var v15070 = b$$741.attributes;
      var v9272 = v15070.length;
      var v2703 = v9272 > 0;
      if (v2703) {
        l$$92(a$$757, b$$741);
      }
      a$$757.Text = "";
      var v2715 = b$$741.hasChildNodes();
      if (v2715) {
        var v9273 = b$$741.childNodes;
        var v2704 = v9273.length;
        var o$$40 = v2704 - 1;
        var q$$26 = 0;
        var v9274 = q$$26;
        q$$26 = q$$26 + 1;
        var v2714 = v9274 < o$$40;
        do {
          var v15071 = b$$741.childNodes;
          e$$382 = v15071[q$$26];
          var v2713 = e$$382.nodeType;
          switch(v2713) {
            case 1:
              a$$757._children = [];
              var v2705;
              var v9275 = e$$382.localName;
              if (v9275) {
                v2705 = e$$382.localName;
              } else {
                v2705 = e$$382.baseName;
              }
              c$$607 = v2705;
              var v2706 = String(c$$607);
              c$$607 = v2706.replace(/-/g, "_");
              var v2707 = m$$61 != c$$607;
              if (v2707) {
                var v9276 = a$$757._children;
                v9276.push(c$$607);
              }
              var v2708 = a$$757[c$$607];
              var v9277 = !v2708;
              if (v9277) {
                a$$757[c$$607] = [];
              }
              f$$221 = {};
              var v2709 = a$$757[c$$607];
              v2709.push(f$$221);
              var v15072 = e$$382.attributes;
              var v9278 = v15072.length;
              var v2710 = v9278 > 0;
              if (v2710) {
                l$$92(f$$221, e$$382);
              }
              var v9279 = a$$757[c$$607];
              var v2711 = v9279.contains;
              var v9281 = !v2711;
              if (v9281) {
                var v9280 = a$$757[c$$607];
                p$$59(v9280);
              }
              m$$61 = c$$607;
              var v2712 = e$$382.hasChildNodes();
              if (v2712) {
                g$$212(f$$221, e$$382);
              }
              break;
            case 3:
              var v9282 = a$$757.Text;
              var v15073 = e$$382.nodeValue;
              var v9283 = k$$87(v15073);
              a$$757.Text = v9282 + v9283;
              break;
            case 4:
              var v9284 = a$$757.Text;
              var v15074;
              var v19426 = e$$382.text;
              if (v19426) {
                var v19424 = e$$382.text;
                v15074 = k$$87(v19424);
              } else {
                var v19425 = e$$382.nodeValue;
                v15074 = k$$87(v19425);
              }
              var v9285 = v15074;
              a$$757.Text = v9284 + v9285;
          }
          var v9286 = q$$26;
          q$$26 = q$$26 + 1;
          v2714 = v9286 < o$$40;
        } while (v2714);
      }
      return;
    }
    function v1987(b$$731) {
      function v1986(b$$739, d$$445) {
        function v1985(a$$756, f$$220) {
          var g$$218 = 0;
          var k$$90;
          var l$$94;
          k$$90 = c$$605(a$$756, b$$739);
          l$$94 = c$$605(f$$220, b$$739);
          var v2716;
          var v9288 = k$$90 < l$$94;
          if (v9288) {
            v2716 = g$$218 = -1;
          } else {
            var v9287 = l$$94 < k$$90;
            if (v9287) {
              v9287 = g$$218 = 1;
            }
            v2716 = v9287;
          }
          v2716;
          if (d$$445) {
            var v9289;
            var v19427 = d$$445.toUpperCase();
            var v15075 = v19427 == "DESC";
            if (v15075) {
              v9289 = 0 - g$$218;
            } else {
              v9289 = g$$218;
            }
            g$$218 = v9289;
          }
          return g$$218;
        }
        function v1984(b$$740, d$$446) {
          var v9290 = b$$740[d$$446];
          var v2717 = v9290[0];
          var c$$606 = v2717.Text;
          var v2718;
          var v9291 = a$$740(c$$606);
          if (v9291) {
            v2718 = parseFloat(c$$606);
          } else {
            v2718 = c$$606;
          }
          return c$$606 = v2718;
        }
        var v2719 = this.length;
        if (v2719) {
          var c$$605 = v1984;
          this.sort(v1985);
        }
        return;
      }
      function v1983(b$$737) {
        function v1982(a$$755, c$$604) {
          var f$$219 = 0;
          var g$$217;
          var k$$89;
          g$$217 = d$$444(a$$755);
          k$$89 = d$$444(c$$604);
          var v2720;
          var v9293 = g$$217 < k$$89;
          if (v9293) {
            v2720 = f$$219 = -1;
          } else {
            var v9292 = k$$89 < g$$217;
            if (v9292) {
              v9292 = f$$219 = 1;
            }
            v2720 = v9292;
          }
          v2720;
          if (b$$737) {
            var v9294;
            var v19428 = b$$737.toUpperCase();
            var v15076 = v19428 == "DESC";
            if (v15076) {
              v9294 = 0 - f$$219;
            } else {
              v9294 = f$$219;
            }
            f$$219 = v9294;
          }
          return f$$219;
        }
        function v1981(b$$738) {
          b$$738 = b$$738.Text;
          var v2721;
          var v9295 = a$$740(b$$738);
          if (v9295) {
            v2721 = parseFloat(b$$738);
          } else {
            v2721 = b$$738;
          }
          return b$$738 = v2721;
        }
        var v2722 = this.length;
        if (v2722) {
          var d$$444 = v1981;
          this.sort(v1982);
        }
        return;
      }
      function v1980(b$$735, d$$442) {
        function v1979(a$$754, f$$218) {
          var g$$216 = 0;
          var k$$88;
          var l$$93;
          k$$88 = c$$602(a$$754, b$$735);
          l$$93 = c$$602(f$$218, b$$735);
          var v2723;
          var v9297 = k$$88 < l$$93;
          if (v9297) {
            v2723 = g$$216 = -1;
          } else {
            var v9296 = l$$93 < k$$88;
            if (v9296) {
              v9296 = g$$216 = 1;
            }
            v2723 = v9296;
          }
          v2723;
          if (d$$442) {
            var v9298;
            var v19429 = d$$442.toUpperCase();
            var v15077 = v19429 == "DESC";
            if (v15077) {
              v9298 = 0 - g$$216;
            } else {
              v9298 = g$$216;
            }
            g$$216 = v9298;
          }
          return g$$216;
        }
        function v1978(b$$736, d$$443) {
          var c$$603 = b$$736[d$$443];
          var v2724;
          var v9299 = a$$740(c$$603);
          if (v9299) {
            v2724 = parseFloat(c$$603);
          } else {
            v2724 = c$$603;
          }
          return c$$603 = v2724;
        }
        var v2725 = this.length;
        if (v2725) {
          var c$$602 = v1978;
          this.sort(v1979);
        }
        return;
      }
      function v1977(a$$753, b$$734) {
        var d$$441 = -1;
        var v9300 = this.length;
        var v2729 = v9300 > 0;
        if (v2729) {
          var v2726 = this.length;
          var c$$601 = v2726 - 1;
          try {
            var v2728 = c$$601;
            c$$601 = c$$601 - 1;
            do {
              var v15078 = this[c$$601];
              var v9301 = v15078[a$$753];
              var v2727 = v9301 == b$$734;
              if (v2727) {
                d$$441 = c$$601;
              }
              v2728 = c$$601;
              c$$601 = c$$601 - 1;
            } while (v2728);
          } catch (f$$217) {
            return-1;
          }
          return d$$441;
        }
        return;
      }
      function v1976(a$$752, b$$733) {
        var v9302 = this.length;
        var v2733 = v9302 > 0;
        if (v2733) {
          var v2730 = this.length;
          var d$$440 = v2730 - 1;
          try {
            var v2732 = d$$440;
            d$$440 = d$$440 - 1;
            do {
              var v15079 = this[d$$440];
              var v9303 = v15079[a$$752];
              var v2731 = v9303 == b$$733;
              if (v2731) {
                return!0;
              }
              v2732 = d$$440;
              d$$440 = d$$440 - 1;
            } while (v2732);
          } catch (c$$600) {
          }
          return!1;
        }
        return;
      }
      function v1975(a$$751, b$$732) {
        var v9304 = this.length;
        var v2737 = v9304 > 0;
        if (v2737) {
          var d$$439;
          var v2734 = this.length;
          var c$$599 = v2734 - 1;
          try {
            var v2736 = c$$599;
            c$$599 = c$$599 - 1;
            do {
              d$$439 = this[c$$599];
              var v15080 = d$$439[a$$751];
              var v2735 = v15080 == b$$732;
              if (v2735) {
                return d$$439;
              }
              v2736 = c$$599;
              c$$599 = c$$599 - 1;
            } while (v2736);
          } catch (f$$216) {
          }
          return!1;
        }
        return;
      }
      b$$731.getNodeByAttribute = v1975;
      b$$731.contains = v1976;
      b$$731.indexOf = v1977;
      b$$731.SortByAttribute = v1980;
      b$$731.SortByValue = v1983;
      b$$731.SortByNode = v1986;
      return;
    }
    function v1974() {
      function v1973() {
        function v1972(b$$729, c$$598) {
          function v1971(a$$750, d$$438) {
            var f$$215;
            var g$$215;
            f$$215 = e$$381(a$$750, b$$729);
            g$$215 = e$$381(d$$438, b$$729);
            var v2738;
            var v9306 = f$$215 < g$$215;
            if (v9306) {
              v2738 = -1;
            } else {
              var v9305;
              var v15081 = g$$215 < f$$215;
              if (v15081) {
                v9305 = 1;
              } else {
                v9305 = 0;
              }
              v2738 = v9305;
            }
            f$$215 = v2738;
            if (c$$598) {
              var v9307;
              var v19430 = c$$598.toUpperCase();
              var v15082 = v19430 === "DESC";
              if (v15082) {
                v9307 = 0 - f$$215;
              } else {
                v9307 = f$$215;
              }
              f$$215 = v9307;
            }
            return f$$215;
          }
          function v1970(a$$749, b$$730) {
            var v9308 = a$$749[b$$730];
            var v2739 = v9308[0];
            var d$$437 = v2739.Text;
            var v2740;
            var v15083 = bam.validation;
            var v9309 = v15083.isNumeric(d$$437);
            if (v9309) {
              v2740 = parseFloat(d$$437);
            } else {
              v2740 = d$$437;
            }
            return d$$437 = v2740;
          }
          var v9310 = a$$744;
          if (v9310) {
            var v15084 = a$$744.length;
            v9310 = v15084 > 0;
          }
          var v2741 = v9310;
          if (v2741) {
            var e$$381 = v1970;
            a$$744.sort(v1971);
          }
          return;
        }
        function v1969(b$$728) {
          function v1968(a$$748, d$$436) {
            var f$$214;
            var g$$214;
            f$$214 = c$$597(a$$748);
            g$$214 = c$$597(d$$436);
            var v2742;
            var v9312 = f$$214 < g$$214;
            if (v9312) {
              v2742 = -1;
            } else {
              var v9311;
              var v15085 = g$$214 < f$$214;
              if (v15085) {
                v9311 = 1;
              } else {
                v9311 = 0;
              }
              v2742 = v9311;
            }
            f$$214 = v2742;
            if (b$$728) {
              var v9313;
              var v19431 = b$$728.toUpperCase();
              var v15086 = v19431 === "DESC";
              if (v15086) {
                v9313 = 0 - f$$214;
              } else {
                v9313 = f$$214;
              }
              f$$214 = v9313;
            }
            return f$$214;
          }
          function v1967(a$$747) {
            a$$747 = a$$747.Text;
            var v2743;
            var v15087 = bam.validation;
            var v9314 = v15087.isNumeric(a$$747);
            if (v9314) {
              v2743 = parseFloat(a$$747);
            } else {
              v2743 = a$$747;
            }
            return a$$747 = v2743;
          }
          var v9315 = a$$744;
          if (v9315) {
            var v15088 = a$$744.length;
            v9315 = v15088 > 0;
          }
          var v2744 = v9315;
          if (v2744) {
            var c$$597 = v1967;
            a$$744.sort(v1968);
          }
          return;
        }
        function v1966(b$$726, c$$596) {
          function v1965(a$$746, d$$435) {
            var f$$213;
            var g$$213;
            f$$213 = e$$380(a$$746, b$$726);
            g$$213 = e$$380(d$$435, b$$726);
            var v2745;
            var v9317 = f$$213 < g$$213;
            if (v9317) {
              v2745 = -1;
            } else {
              var v9316;
              var v15089 = g$$213 < f$$213;
              if (v15089) {
                v9316 = 1;
              } else {
                v9316 = 0;
              }
              v2745 = v9316;
            }
            f$$213 = v2745;
            if (c$$596) {
              var v9318;
              var v19432 = c$$596.toUpperCase();
              var v15090 = v19432 === "DESC";
              if (v15090) {
                v9318 = 0 - f$$213;
              } else {
                v9318 = f$$213;
              }
              f$$213 = v9318;
            }
            return f$$213;
          }
          function v1964(a$$745, b$$727) {
            var d$$434 = a$$745[b$$727];
            var v2746;
            var v15091 = bam.validation;
            var v9319 = v15091.isNumeric(d$$434);
            if (v9319) {
              v2746 = parseFloat(d$$434);
            } else {
              v2746 = d$$434;
            }
            return d$$434 = v2746;
          }
          var v9320 = a$$744;
          if (v9320) {
            var v15092 = a$$744.length;
            v9320 = v15092 > 0;
          }
          var v2747 = v9320;
          if (v2747) {
            var e$$380 = v1964;
            a$$744.sort(v1965);
          }
          return;
        }
        function v1963(b$$725, c$$595) {
          var e$$379 = -1;
          var v9321 = a$$744;
          if (v9321) {
            var v15093 = a$$744.length;
            v9321 = v15093 > 0;
          }
          var v2751 = v9321;
          if (v2751) {
            var v2748 = a$$744.length;
            var h$$180 = v2748 - 1;
            try {
              var v2750 = h$$180;
              h$$180 = h$$180 - 1;
              do {
                var v15094 = a$$744[h$$180];
                var v9322 = v15094[b$$725];
                var v2749 = v9322 === c$$595;
                if (v2749) {
                  e$$379 = h$$180;
                }
                v2750 = h$$180;
                h$$180 = h$$180 - 1;
              } while (v2750);
            } catch (f$$212) {
              return-1;
            }
            return e$$379;
          }
          return;
        }
        function v1962(b$$724, c$$594) {
          var v9323 = a$$744;
          if (v9323) {
            var v15095 = a$$744.length;
            v9323 = v15095 > 0;
          }
          var v2755 = v9323;
          if (v2755) {
            var v2752 = a$$744.length;
            var e$$378 = v2752 - 1;
            try {
              var v2754 = e$$378;
              e$$378 = e$$378 - 1;
              do {
                var v15096 = a$$744[e$$378];
                var v9324 = v15096[b$$724];
                var v2753 = v9324 === c$$594;
                if (v2753) {
                  return!0;
                }
                v2754 = e$$378;
                e$$378 = e$$378 - 1;
              } while (v2754);
            } catch (h$$179) {
            }
            return!1;
          }
          return;
        }
        function v1961(b$$723) {
          var v9325 = a$$744;
          if (v9325) {
            var v15097 = a$$744.length;
            v9325 = v15097 > 0;
          }
          var v2758 = v9325;
          if (v2758) {
            var c$$593 = [];
            var e$$377;
            var v2756 = a$$744.length;
            var h$$178 = v2756 - 1;
            try {
              var v2757 = h$$178;
              h$$178 = h$$178 - 1;
              do {
                e$$377 = a$$744[h$$178];
                var v15098 = e$$377.Text;
                if (v15098) {
                  var v19433 = e$$377.Text;
                  v15098 = v19433 === b$$723;
                }
                var v9326 = v15098;
                if (v9326) {
                  c$$593.push(e$$377);
                }
                v2757 = h$$178;
                h$$178 = h$$178 - 1;
              } while (v2757);
              return c$$593;
            } catch (f$$211) {
            }
            return null;
          }
          return;
        }
        function v1960(b$$722, c$$592) {
          var v9327 = a$$744;
          if (v9327) {
            var v15099 = a$$744.length;
            v9327 = v15099 > 0;
          }
          var v2762 = v9327;
          if (v2762) {
            var e$$376;
            var v2759 = a$$744.length;
            var h$$177 = v2759 - 1;
            try {
              var v2761 = h$$177;
              h$$177 = h$$177 - 1;
              do {
                e$$376 = a$$744[h$$177];
                var v15100 = e$$376[b$$722];
                var v2760 = v15100 === c$$592;
                if (v2760) {
                  return e$$376;
                }
                v2761 = h$$177;
                h$$177 = h$$177 - 1;
              } while (v2761);
            } catch (f$$210) {
            }
            return null;
          }
          return;
        }
        function v1959(b$$721, c$$591) {
          var v9328 = a$$744;
          if (v9328) {
            var v15101 = a$$744.length;
            v9328 = v15101 > 0;
          }
          var v2765 = v9328;
          if (v2765) {
            var e$$375 = [];
            var h$$176;
            var v2763 = a$$744.length;
            var f$$209 = v2763 - 1;
            try {
              var v2764 = f$$209;
              f$$209 = f$$209 - 1;
              do {
                h$$176 = a$$744[f$$209];
                var v15102 = h$$176[b$$721];
                var v9329 = v15102 === c$$591;
                if (v9329) {
                  e$$375.push(h$$176);
                }
                v2764 = f$$209;
                f$$209 = f$$209 - 1;
              } while (v2764);
              e$$375.reverse();
              return e$$375;
            } catch (o$$39) {
            }
            return null;
          }
          return;
        }
        var a$$744 = [];
        a$$744.getNodesByAttribute = v1959;
        a$$744.getNodeByAttribute = v1960;
        a$$744.getNodesByValue = v1961;
        a$$744.contains = v1962;
        a$$744.indexOf = v1963;
        a$$744.SortByAttribute = v1966;
        a$$744.SortByValue = v1969;
        a$$744.SortByNode = v1972;
        return a$$744;
      }
      return{activate:v1973};
    }
    function v1958(a$$743, b$$720) {
      var v15103 = b$$720.attributes;
      var v9330 = v15103.length;
      var v2768 = v9330 > 0;
      if (v2768) {
        var v9331 = b$$720.attributes;
        var v2766 = v9331.length;
        var c$$590 = v2766 - 1;
        var e$$374;
        a$$743._attributes = [];
        var v2767 = c$$590;
        c$$590 = c$$590 - 1;
        do {
          var v27741 = b$$720.attributes;
          var v26228 = v27741[c$$590];
          var v24066 = v26228.name;
          var v19434 = String(v24066);
          var v15104 = v19434.replace(/-/g, "_");
          e$$374 = String(v15104);
          var v15105 = a$$743._attributes;
          v15105.push(e$$374);
          var v19435 = b$$720.attributes;
          var v15106 = v19435[c$$590];
          var v9332 = v15106.value;
          var v30937 = k$$87(v9332);
          a$$743[e$$374] = v30937;
          v2767 = c$$590;
          c$$590 = c$$590 - 1;
        } while (v2767);
      }
      return;
    }
    function v1957(a$$742) {
      return a$$742.replace(/^\s+|\s+$/gm, "");
    }
    try {
      var v2769 = !c$$589;
      if (v2769) {
        return null;
      }
      var b$$719 = {typeOf:"JSXBObject"};
      var v2770;
      var v15107 = c$$589.nodeType;
      var v9333 = v15107 == 9;
      if (v9333) {
        v2770 = c$$589.documentElement;
      } else {
        v2770 = c$$589;
      }
      var f$$208 = v2770;
      var v2771 = f$$208.nodeName;
      var v9334 = !v2771;
      if (v9334) {
        v2771 = "";
      }
      b$$719.RootName = v2771;
      var v15108 = c$$589.nodeType;
      var v9335 = v15108 == 3;
      var v15110 = !v9335;
      if (v15110) {
        var v15109 = c$$589.nodeType;
        v9335 = v15109 == 4;
      }
      var v2772 = v9335;
      if (v2772) {
        return c$$589.nodeValue;
      }
      var k$$87 = v1957;
      var l$$92 = v1958;
      v1974();
      var p$$59 = v1987;
      var g$$212 = v1988;
      g$$212(b$$719, f$$208);
      f$$208 = c$$589 = null;
      return b$$719;
    } catch (m$$62) {
      return null;
    }
    return;
  }
  function a$$740(a$$741) {
    var b$$718 = "";
    var v9336 = a$$741;
    if (v9336) {
      var v15111 = typeof a$$741;
      v9336 = v15111 === "string";
    }
    var v2773 = v9336;
    if (v2773) {
      b$$718 = a$$741;
    }
    return/^((-)?([0-9]*)((\.{0,1})([0-9]+))?$)/.test(b$$718);
  }
  return{xmlToJSON:v1989, textToXML:v1990};
}
function v1956() {
  function v1955(a$$739, b$$717, c$$588) {
    function v1954() {
      return b$$717.getRoot();
    }
    function v1953() {
      return[h$$171, n$$106];
    }
    this.getCanvasSize = v1953;
    this.getRoot = v1954;
    var v2799 = b$$717.getValidate();
    if (v2799) {
      var v19436 = a$$739.canvasSize;
      var v15112 = v19436[1];
      var v9337 = v15112 / 3;
      var v9338 = b$$717.getValidate();
      var v2774 = {type:"text", x:0, y:v9337, text:v9338};
      a$$739.draw(v2774);
    } else {
      i$$235 = a$$739;
      a$$739 = b$$717.getRoot();
      var f$$207 = b$$717.getNewickLen();
      var v2775 = i$$235.canvasSize;
      h$$171 = v2775[0];
      var v2776 = i$$235.canvasSize;
      n$$106 = v2776[1];
      E$$4 = h$$171 / 2;
      r$$29 = n$$106 / 2;
      var v2777 = Math.min;
      var v2778 = [h$$171, n$$106];
      o$$36 = v2777.apply(null, v2778);
      var v2779;
      var v15113 = e$$368.bufferRadius;
      var v9341 = v15113 > 1;
      if (v9341) {
        v2779 = e$$368.bufferRadius;
      } else {
        var v9339 = Smits.Common;
        var v15114 = e$$368.bufferRadius;
        var v9340 = o$$36 * v15114;
        v2779 = v9339.roundFloat(v9340, 4);
      }
      c$$588 = v2779;
      C$$4 = e$$368.bufferAngle;
      z$$9 = e$$368.innerCircleRadius;
      D$$4 = e$$368.initStartAngle;
      var v15115 = o$$36 - c$$588;
      var v9342 = v15115 - z$$9;
      var v2780 = v9342 / 2;
      v$$13 = Math.round(v2780);
      var v2781 = v$$13 - z$$9;
      q$$24 = v2781 / f$$207;
      var v2782 = Smits.Common;
      var v9343 = 360 - C$$4;
      var v9344 = a$$739.getCountAllChildren();
      var v2783 = v9343 / v9344;
      u$$18 = v2782.roundFloat(v2783, 4);
      p$$57(a$$739, z$$9);
      var v2784 = v$$13 + x$$75;
      var v2785 = e$$368.bufferOuterLabels;
      w$$19 = v2784 + v2785;
      var v24067 = Smits.PhyloCanvas;
      var v19437 = v24067.Render;
      var v15116 = v19437.Parameters;
      var v9345 = v15116.integratedBinaryCharts;
      var v2790 = v9345.length;
      if (v2790) {
        var v15117 = Smits.PhyloCanvas;
        var v9346 = v15117.Render;
        var v2786 = v9346.Parameters;
        c$$588 = v2786.integratedBinaryCharts;
        var g$$211;
        for (g$$211 in c$$588) {
          var v19438;
          var v26229 = c$$588[g$$211];
          var v24070 = v26229.thickness;
          if (v24070) {
            var v24068 = c$$588[g$$211];
            v19438 = v24068.thickness;
          } else {
            var v27742 = Smits.PhyloCanvas;
            var v26230 = v27742.Render;
            var v24069 = v26230.Parameters;
            v19438 = v24069.binaryChartThickness;
          }
          var v15118 = v19438;
          var v9347 = w$$19 - v15118;
          var v15119;
          var v24071 = c$$588[g$$211];
          var v19441 = v24071.bufferInner;
          if (v19441) {
            var v19439 = c$$588[g$$211];
            v15119 = v19439.bufferInner;
          } else {
            var v26231 = Smits.PhyloCanvas;
            var v24072 = v26231.Render;
            var v19440 = v24072.Parameters;
            v15119 = v19440.binaryChartBufferInner;
          }
          var v9348 = v15119;
          var v2787 = v9347 - v9348;
          var v9349 = c$$588[g$$211];
          var v2788 = v9349.chart;
          var v2789 = c$$588[g$$211];
          w$$19 = d$$423(v2787, v2788, v2789);
        }
      }
      w$$19 = m$$58();
      var v24073 = Smits.PhyloCanvas;
      var v19442 = v24073.Render;
      var v15120 = v19442.Parameters;
      var v9350 = v15120.binaryCharts;
      var v2794 = v9350.length;
      if (v2794) {
        var v24074 = Smits.PhyloCanvas;
        var v19443 = v24074.Render;
        var v15121 = v19443.Parameters;
        c$$588 = v15121.binaryCharts;
        var v2793 = c$$588;
        for (g$$211 in v2793) {
          var v9351 = c$$588[g$$211];
          var v2791 = v9351.chart;
          var v2792 = c$$588[g$$211];
          w$$19 = d$$423(w$$19, v2791, v2792);
        }
      }
      var v24075 = Smits.PhyloCanvas;
      var v19444 = v24075.Render;
      var v15122 = v19444.Parameters;
      var v9352 = v15122.barCharts;
      var v2798 = v9352.length;
      if (v2798) {
        var v24076 = Smits.PhyloCanvas;
        var v19445 = v24076.Render;
        var v15123 = v19445.Parameters;
        c$$588 = v15123.barCharts;
        var v2797 = c$$588;
        for (g$$211 in v2797) {
          var v9353 = c$$588[g$$211];
          var v2795 = v9353.chart;
          var v2796 = c$$588[g$$211];
          w$$19 = j$$120(w$$19, v2795, v2796);
        }
      }
    }
    return;
  }
  function a$$731(a$$732, d$$424) {
    d$$424 = d$$424 + D$$4;
    var v9354 = Smits.Common;
    var v15124 = E$$4;
    var v24077 = d$$424 * F$$4;
    var v19446 = Math.sin(v24077);
    var v15125 = a$$732 * v19446;
    var v9355 = v15124 + v15125;
    var v2800 = v9354.roundFloat(v9355, 4);
    var v9356 = Smits.Common;
    var v15126 = r$$29;
    var v24078 = d$$424 * F$$4;
    var v19447 = Math.cos(v24078);
    var v15127 = a$$732 * v19447;
    var v9357 = v15126 + v15127;
    var v2801 = v9356.roundFloat(v9357, 4);
    return[v2800, v2801];
  }
  function c$$583(a$$733) {
    var v9358 = 90 - a$$733;
    var v2802 = v9358 - D$$4;
    a$$733 = k$$85(v2802);
    var v9359 = a$$733 > 90;
    if (v9359) {
      v9359 = a$$733 < 270;
    }
    var v2803 = v9359;
    if (v2803) {
      a$$733 = a$$733 + 180;
      var d$$425 = "end";
    } else {
      d$$425 = "start";
    }
    return[a$$733, d$$425];
  }
  function b$$710(d$$426, b$$711, c$$584, e$$369) {
    var i$$236 = a$$731(d$$426, b$$711);
    var h$$172 = a$$731(d$$426, c$$584);
    var j$$121 = [];
    var f$$204 = 0;
    var v2804;
    var v24079 = c$$584 - b$$711;
    var v19448 = k$$85(v24079);
    var v15128 = Math.abs(v19448);
    var v9360 = v15128 > 180;
    if (v9360) {
      v2804 = 1;
    } else {
      v2804 = -1;
    }
    b$$711 = v2804;
    var v9361 = e$$369;
    if (v9361) {
      v9361 = e$$369.invertSecant;
    }
    var v2805 = v9361;
    if (v2805) {
      b$$711 = b$$711 * -1;
      f$$204 = 1;
    }
    var v9362 = !e$$369;
    var v15130 = !v9362;
    if (v15130) {
      var v15129 = e$$369.noMove;
      v9362 = !v15129;
    }
    var v2806 = v9362;
    if (v2806) {
      j$$121.push("M");
    }
    var v2807 = i$$236[0];
    var v2808 = i$$236[1];
    var v9363;
    var v15131 = b$$711 < 1;
    if (v15131) {
      v9363 = 0;
    } else {
      v9363 = 1;
    }
    var v2809 = v9363;
    var v2810 = h$$172[0];
    var v2811 = h$$172[1];
    j$$121.push(v2807, v2808, "A", d$$426, d$$426, 0, v2809, f$$204, v2810, v2811);
    return j$$121;
  }
  function f$$203(d$$427, b$$712, c$$585, e$$370) {
    var i$$237 = [];
    b$$712 = a$$731(b$$712, d$$427);
    d$$427 = a$$731(c$$585, d$$427);
    var v9364 = !e$$370;
    var v15133 = !v9364;
    if (v15133) {
      var v15132 = e$$370.noMove;
      v9364 = !v15132;
    }
    var v2812 = v9364;
    if (v2812) {
      i$$237.push("M");
    }
    var v2813 = b$$712[0];
    var v2814 = b$$712[1];
    var v2815 = d$$427[0];
    var v2816 = d$$427[1];
    i$$237.push(v2813, v2814, "L", v2815, v2816);
    return i$$237;
  }
  function k$$85(a$$734) {
    var v9365 = a$$734 > 360;
    var v15134 = !v9365;
    if (v15134) {
      v9365 = a$$734 < 0;
    }
    var v2818 = v9365;
    for (;v2818;) {
      var v2817;
      var v9367 = a$$734 > 360;
      if (v9367) {
        v2817 = a$$734 = a$$734 - 360;
      } else {
        var v9366 = a$$734 < 0;
        if (v9366) {
          v9366 = a$$734 = a$$734 + 360;
        }
        v2817 = v9366;
      }
      v2817;
      var v9368 = a$$734 > 360;
      var v15135 = !v9368;
      if (v15135) {
        v9368 = a$$734 < 0;
      }
      v2818 = v9368;
    }
    return a$$734;
  }
  function l$$90(a$$735, d$$428, c$$586, e$$371) {
    var v9369 = !d$$428;
    if (v9369) {
      var v15136 = a$$735.length;
      v9369 = v15136 > 1;
    }
    var v2819 = v9369;
    if (v2819) {
      e$$371 = a$$735[3];
      c$$586 = a$$735[2];
      d$$428 = a$$735[1];
      a$$735 = a$$735[0];
    }
    var v9370 = {noMove:1, invertSecant:0};
    var v2820 = b$$710(a$$735, c$$586, e$$371, v9370);
    var v9371 = {noMove:1, invertSecant:1};
    var v2821 = b$$710(d$$428, e$$371, c$$586, v9371);
    return g$$209("M", v2820, "L", v2821, "Z");
  }
  function p$$57(d$$429, h$$173) {
    var v2822 = d$$429.len;
    if (v2822) {
      var v9372;
      if (B$$5) {
        v9372 = A$$5 = C$$4 || 1;
      } else {
        var v24080 = d$$429.children;
        var v19449 = v24080.length;
        var v15137 = v19449 == 0;
        if (v15137) {
          var v19450 = Smits.Common;
          var v19451 = A$$5 + u$$18;
          v15137 = A$$5 = v19450.roundFloat(v19451, 4);
        }
        v9372 = v15137;
      }
      v9372;
    }
    var v15138 = d$$429.children;
    var v9373 = v15138.length;
    var v2844 = v9373 > 0;
    if (v2844) {
      var j$$122 = [];
      var o$$37;
      var n$$107;
      var k$$86;
      o$$37 = h$$173;
      var v15139 = Smits.Common;
      var v19452 = d$$429.len;
      var v15140 = q$$24 * v19452;
      var v9374 = v15139.roundFloat(v15140, 4);
      n$$107 = h$$173 = h$$173 + v9374;
      var v9375 = d$$429.children;
      if (v9375) {
        var v15141 = d$$429.children;
        v9375 = v15141.length;
      }
      var v2826 = v9375;
      if (v2826) {
        var l$$91 = 0;
        var v15142 = d$$429.children;
        var v9376 = v15142.length;
        var v2825 = l$$91 < v9376;
        for (;v2825;) {
          var v9377 = d$$429.children;
          var v2823 = v9377[l$$91];
          var m$$59 = p$$57(v2823, h$$173);
          var v2824 = m$$59 > 0;
          if (v2824) {
            j$$122.push(m$$59);
          }
          l$$91++;
          var v15143 = d$$429.children;
          var v9378 = v15143.length;
          v2825 = l$$91 < v9378;
        }
      }
      var v2827 = Smits.Common;
      var v9379 = Math.min;
      var v2828 = v9379.apply(null, j$$122);
      l$$91 = v2827.roundFloat(v2828, 4);
      var v2829 = Smits.Common;
      var v9380 = Math.max;
      var v2830 = v9380.apply(null, j$$122);
      j$$122 = v2829.roundFloat(v2830, 4);
      var v9381 = d$$429.level;
      var v2831 = v9381 != 0;
      if (v2831) {
        var v24081 = Smits.PhyloCanvas;
        var v19453 = v24081.Render;
        var v15144 = v19453.Path;
        var v24082 = h$$173 + .01;
        var v19454 = a$$731(v24082, l$$91);
        var v26232 = !0;
        var v24083 = {noMove:v26232};
        var v19455 = b$$710(h$$173, l$$91, j$$122, v24083);
        var v24084 = h$$173 + .01;
        var v19456 = a$$731(v24084, j$$122);
        var v15145 = g$$209("M", v19454, "L", v19455, "L", v19456);
        var v9382 = new v15144(v15145);
        i$$235.draw(v9382);
      }
      var v2832 = d$$429.len;
      if (v2832) {
        var v15146 = Smits.Common;
        var v24085 = j$$122 - l$$91;
        var v19457 = v24085 / 2;
        var v15147 = l$$91 + v19457;
        k$$86 = v15146.roundFloat(v15147, 4);
        var v26233 = Smits.PhyloCanvas;
        var v24086 = v26233.Render;
        var v19458 = v24086.Path;
        var v19459 = f$$203(k$$86, o$$37, n$$107);
        var v15148 = new v19458(v19459);
        i$$235.draw(v15148);
      }
    } else {
      d$$429.y = A$$5;
      s$$34.push(d$$429);
      o$$37 = h$$173;
      var v27743 = Smits.Common;
      var v29327 = d$$429.len;
      var v28691 = q$$24 * v29327;
      var v27744 = h$$173 + v28691;
      n$$107 = v27743.roundFloat(v27744);
      k$$86 = A$$5;
      var v28692 = Smits.PhyloCanvas;
      var v27745 = v28692.Render;
      var v26234 = v27745.Path;
      var v26235 = f$$203(k$$86, o$$37, n$$107);
      var v24087 = new v26234(v26235);
      i$$235.draw(v24087);
      var v27746 = Smits.PhyloCanvas;
      var v26236 = v27746.Render;
      var v24088 = v26236.Path;
      var v24089 = f$$203(k$$86, n$$107, v$$13);
      var v29328 = Smits.PhyloCanvas;
      var v28693 = v29328.Render;
      var v27747 = v28693.Style;
      var v26237 = v27747.connectedDash;
      var v24090 = {attr:v26237};
      var v19460 = new v24088(v24089, v24090);
      i$$235.draw(v19460);
      var v2843 = d$$429.name;
      if (v2843) {
        var v9383 = e$$368.bufferInnerLabels;
        var v2833 = v$$13 + v9383;
        o$$37 = a$$731(v2833, k$$86);
        l$$91 = c$$583(k$$86);
        j$$122 = l$$91[0];
        l$$91 = l$$91[1];
        m$$59 = {};
        var v2834 = d$$429.style;
        if (v2834) {
          var v9384 = Smits.Common;
          var v24091 = Smits.PhyloCanvas;
          var v19461 = v24091.Render;
          var v15149 = v19461.Style;
          var v15150 = d$$429.style;
          var v9385 = v15149.getStyle(v15150, "text");
          v9384.apply(m$$59, v9385);
        }
        m$$59["text-anchor"] = l$$91;
        var v2835 = d$$429.uri;
        if (v2835) {
          m$$59.href = d$$429.uri;
        }
        var v2836 = d$$429.description;
        if (v2836) {
          m$$59.title = d$$429.description;
        }
        var v19462 = Smits.PhyloCanvas;
        var v15151 = v19462.Render;
        var v9386 = v15151.Text;
        var v9387 = o$$37[0];
        var v9388 = o$$37[1];
        var v9389 = d$$429.name;
        var v19463 = o$$37[0];
        var v19464 = o$$37[1];
        var v15152 = [j$$122, v19463, v19464];
        var v9390 = {attr:m$$59, rotate:v15152};
        var v2837 = new v9386(v9387, v9388, v9389, v9390);
        j$$122 = i$$235.draw(v2837);
        var v2838 = d$$429.bgStyle;
        if (v2838) {
          var v15153 = d$$429.bgStyle;
          var v9391 = [v15153, k$$86];
          t$$30.push(v9391);
        }
        o$$37 = a$$731(n$$107, k$$86);
        var v19465 = Smits.PhyloCanvas;
        var v15154 = v19465.Render;
        var v9392 = v15154.Parameters;
        var v2839 = v9392.mouseRollOver;
        if (v2839) {
          var v9393 = Smits.Common;
          var v9394 = j$$122[0];
          var v24092 = Smits.PhyloCanvas;
          var v19466 = v24092.Render;
          var v15155 = v19466.Parameters;
          var v9395 = v15155.mouseRollOver;
          var v15156 = o$$37[0];
          var v15157 = o$$37[1];
          var v15158 = j$$122[0];
          var v9396 = {svg:i$$235, node:d$$429, x:v15156, y:v15157, textEl:v15158};
          v9393.addRaphEventHandler(v9394, "mouseover", v9395, v9396);
        }
        var v19467 = Smits.PhyloCanvas;
        var v15159 = v19467.Render;
        var v9397 = v15159.Parameters;
        var v2840 = v9397.mouseRollOut;
        if (v2840) {
          var v9398 = Smits.Common;
          var v9399 = j$$122[0];
          var v24093 = Smits.PhyloCanvas;
          var v19468 = v24093.Render;
          var v15160 = v19468.Parameters;
          var v9400 = v15160.mouseRollOut;
          var v15161 = o$$37[0];
          var v15162 = o$$37[1];
          var v15163 = j$$122[0];
          var v9401 = {svg:i$$235, node:d$$429, x:v15161, y:v15162, textEl:v15163};
          v9398.addRaphEventHandler(v9399, "mouseout", v9400, v9401);
        }
        var v19469 = Smits.PhyloCanvas;
        var v15164 = v19469.Render;
        var v9402 = v15164.Parameters;
        var v2841 = v9402.onClickAction;
        if (v2841) {
          var v9403 = Smits.Common;
          var v9404 = j$$122[0];
          var v24094 = Smits.PhyloCanvas;
          var v19470 = v24094.Render;
          var v15165 = v19470.Parameters;
          var v9405 = v15165.onClickAction;
          var v15166 = o$$37[0];
          var v15167 = o$$37[1];
          var v15168 = j$$122[0];
          var v9406 = {svg:i$$235, node:d$$429, x:v15166, y:v15167, textEl:v15168};
          v9403.addRaphEventHandler(v9404, "click", v9405, v9406);
        }
        var v2842 = j$$122[1];
        x$$75 = Math.max(v2842, x$$75);
      }
    }
    if (B$$5) {
      B$$5 = !1;
    }
    return k$$86;
  }
  function g$$209(a$$736) {
    var d$$430 = a$$736;
    var b$$713 = 1;
    var v9407 = arguments.length;
    var v2846 = b$$713 < v9407;
    for (;v2846;) {
      var v2845 = arguments[b$$713];
      d$$430 = d$$430.concat(v2845);
      b$$713++;
      var v9408 = arguments.length;
      v2846 = b$$713 < v9408;
    }
    return d$$430;
  }
  function m$$58() {
    var a$$737 = [];
    var v9409 = t$$30.length;
    var v2856 = v9409 > 0;
    if (v2856) {
      var v19471 = Smits.PhyloCanvas;
      var v15169 = v19471.Render;
      var v9410 = v15169.Style;
      var v2853 = v9410.jsphylosvgGradientList;
      if (v2853) {
        var d$$431 = 0;
        var v26238 = Smits.PhyloCanvas;
        var v24095 = v26238.Render;
        var v19472 = v24095.Style;
        var v15170 = v19472.jsphylosvgGradientList;
        var v9411 = v15170.length;
        var v2852 = d$$431 < v9411;
        for (;v2852;) {
          var v19473 = Smits.PhyloCanvas;
          var v15171 = v19473.Render;
          var v9412 = v15171.Style;
          var v2847 = v9412.jsphylosvgGradientList;
          var b$$714 = v2847[d$$431];
          var v2848 = Smits.Common;
          var v19474 = Smits.PhyloCanvas;
          var v15172 = v19474.Render;
          var v9413 = v15172.Style;
          var v2849 = v9413[b$$714];
          var v15173 = v$$13 + x$$75;
          var v15174 = e$$368.bufferOuterLabels;
          var v9414 = v15173 + v15174;
          var v2850 = [E$$4, r$$29, v9414];
          b$$714 = v2848.createGradientEl(b$$714, v2849, v2850);
          var v9415 = i$$235.svg;
          var v2851 = v9415.defs;
          v2851.appendChild(b$$714);
          d$$431++;
          var v26239 = Smits.PhyloCanvas;
          var v24096 = v26239.Render;
          var v19475 = v24096.Style;
          var v15175 = v19475.jsphylosvgGradientList;
          var v9416 = v15175.length;
          v2852 = d$$431 < v9416;
        }
      }
      d$$431 = 0;
      var v9417 = t$$30.length;
      var v2855 = d$$431 < v9417;
      for (;v2855;) {
        var v2854;
        var v24097 = t$$30.length;
        var v19476 = v24097 - 1;
        var v15176 = d$$431 != v19476;
        if (v15176) {
          var v24098 = t$$30[d$$431];
          var v19477 = v24098[0];
          var v26240 = d$$431 + 1;
          var v24099 = t$$30[v26240];
          var v19478 = v24099[0];
          v15176 = v19477 == v19478;
        }
        var v9419 = v15176;
        if (v9419) {
          var v15177 = d$$431 + 1;
          var v9418 = t$$30[v15177];
          var v15178;
          var v24100 = t$$30[d$$431];
          var v19481 = v24100[2];
          if (v19481) {
            var v19479 = t$$30[d$$431];
            v15178 = v19479[2];
          } else {
            var v19480 = t$$30[d$$431];
            v15178 = v19480[1];
          }
          v2854 = v9418[2] = v15178;
        } else {
          var v28694 = v$$13 + x$$75;
          var v28695 = e$$368.bufferOuterLabels;
          var v27748 = v28694 + v28695;
          var v28696;
          var v29728 = t$$30[d$$431];
          var v29333 = v29728[2];
          if (v29333) {
            var v29729 = t$$30[d$$431];
            var v29329 = v29729[2];
            var v29330 = u$$18 / 2;
            v28696 = v29329 - v29330;
          } else {
            var v29730 = t$$30[d$$431];
            var v29331 = v29730[1];
            var v29332 = u$$18 / 2;
            v28696 = v29331 - v29332;
          }
          var v27749 = v28696;
          var v29334 = t$$30[d$$431];
          var v28697 = v29334[1];
          var v28698 = u$$18 / 2;
          var v27750 = v28697 + v28698;
          a$$737 = l$$90(v$$13, v27748, v27749, v27750);
          var v29335 = Smits.PhyloCanvas;
          var v28699 = v29335.Render;
          var v27751 = v28699.Style;
          var v28700 = t$$30[d$$431];
          var v27752 = v28700[0];
          b$$714 = v27751.getStyle(v27752, "textSecantBg");
          var v29336 = Smits.PhyloCanvas;
          var v28701 = v29336.Render;
          var v27753 = v28701.Path;
          var v29337;
          var v29731 = b$$714.type;
          if (v29731) {
            v29337 = {};
          } else {
            v29337 = b$$714;
          }
          var v28702 = v29337;
          var v27754 = {attr:v28702};
          var v26241 = new v27753(a$$737, v27754);
          a$$737 = i$$235.draw(v26241);
          var v26242 = b$$714.type;
          if (v26242) {
            var v27755 = b$$714.type;
            v26242 = v27755 == "radialGradient";
          }
          var v24101 = v26242;
          if (v24101) {
            var v27756 = a$$737[0];
            var v26243 = v27756.node;
            var v28703 = b$$714.name;
            var v27757 = "url(#" + v28703;
            var v26244 = v27757 + ")";
            v26243.setAttribute("fill", v26244);
          }
          var v24102 = b$$714.type;
          if (v24102) {
            var v26245 = b$$714.type;
            v24102 = v26245 == "radialGradient";
          }
          var v19482 = v24102;
          if (v19482) {
            var v26246 = a$$737[0];
            var v24103 = v26246.node;
            v24103.setAttribute("stroke", "none");
          }
          var v15179 = a$$737[0];
          v2854 = v15179.toBack();
        }
        v2854;
        d$$431++;
        var v9420 = t$$30.length;
        v2855 = d$$431 < v9420;
      }
    }
    var v9421 = v$$13 + x$$75;
    var v9422 = e$$368.bufferOuterLabels;
    var v2857 = v9421 + v9422;
    var v9423 = C$$4 || 1;
    var v9424 = u$$18 / 2;
    var v2858 = v9423 - v9424;
    var v9425 = u$$18 / 2;
    var v2859 = 360 - v9425;
    a$$737 = l$$90(v$$13, v2857, v2858, v2859);
    var v19483 = Smits.PhyloCanvas;
    var v15180 = v19483.Render;
    var v9426 = v15180.Path;
    var v26247 = Smits.PhyloCanvas;
    var v24104 = v26247.Render;
    var v19484 = v24104.Style;
    var v15181 = v19484.textSecantBg;
    var v9427 = {attr:v15181};
    var v2860 = new v9426(a$$737, v9427);
    a$$737 = i$$235.draw(v2860);
    var v2861 = a$$737[0];
    v2861.toBack();
    var v2862 = v$$13 + x$$75;
    var v2863 = e$$368.bufferOuterLabels;
    return v2862 + v2863;
  }
  function d$$423(d$$432, b$$715, e$$372) {
    var v2864;
    var v15182 = e$$372;
    if (v15182) {
      v15182 = e$$372.bufferInner;
    }
    var v9430 = v15182;
    if (v9430) {
      var v9428 = e$$372.bufferInner;
      v2864 = parseFloat(v9428);
    } else {
      var v19485 = Smits.PhyloCanvas;
      var v15183 = v19485.Render;
      var v9429 = v15183.Parameters;
      v2864 = v9429.binaryChartBufferInner;
    }
    var j$$123 = v2864;
    var v9431;
    var v19486 = e$$372;
    if (v19486) {
      v19486 = e$$372.bufferSiblings;
    }
    var v15185 = v19486;
    if (v15185) {
      var v15184 = e$$372.bufferSiblings;
      v9431 = v15184 * u$$18;
    } else {
      v9431 = 0;
    }
    var v2865 = v9431;
    var v9432;
    var v27758 = Smits.PhyloCanvas;
    var v26248 = v27758.Render;
    var v24105 = v26248.Parameters;
    var v19487 = v24105.binaryChartBufferSiblings;
    var v15188 = v19487 < 1;
    if (v15188) {
      var v26249 = Smits.PhyloCanvas;
      var v24106 = v26249.Render;
      var v19488 = v24106.Parameters;
      var v15186 = v19488.binaryChartBufferSiblings;
      v9432 = u$$18 * v15186;
    } else {
      var v24107 = Smits.PhyloCanvas;
      var v19489 = v24107.Render;
      var v15187 = v19489.Parameters;
      v9432 = v15187.binaryChartBufferSiblings;
    }
    var v2866 = v9432;
    var h$$174 = v2865 | v2866;
    var v2867;
    var v15189 = e$$372;
    if (v15189) {
      v15189 = e$$372.thickness;
    }
    var v9435 = v15189;
    if (v9435) {
      var v9433 = e$$372.thickness;
      v2867 = parseFloat(v9433);
    } else {
      var v19490 = Smits.PhyloCanvas;
      var v15190 = v19490.Render;
      var v9434 = v15190.Parameters;
      v2867 = v9434.binaryChartThickness;
    }
    var f$$205 = v2867;
    var v9436;
    var v19491 = e$$372;
    if (v19491) {
      v19491 = e$$372.disjointed;
    }
    var v15191 = v19491;
    if (v15191) {
      v9436 = e$$372.disjointed;
    } else {
      v9436 = 0;
    }
    var v2868 = v9436;
    var v19492 = Smits.PhyloCanvas;
    var v15192 = v19492.Render;
    var v9437 = v15192.Parameters;
    var v2869 = v9437.binaryChartDisjointed;
    var o$$38 = v2868 | v2869;
    var v2870;
    var v15193 = e$$372;
    if (v15193) {
      v15193 = e$$372.isInternal;
    }
    var v9438 = v15193;
    if (v9438) {
      v2870 = e$$372.isInternal;
    } else {
      v2870 = !1;
    }
    e$$372 = v2870;
    var n$$108 = !0;
    var g$$210;
    var m$$60 = 0;
    var v9439 = s$$34.length;
    var v2890 = m$$60 < v9439;
    for (;v2890;) {
      var q$$25 = s$$34[m$$60];
      var v26250 = m$$60 + 1;
      var v24108 = s$$34[v26250];
      var v19493 = !v24108;
      var v24111 = !v19493;
      if (v24111) {
        var v26251 = q$$25.chart;
        var v24109 = v26251[b$$715];
        var v28704 = m$$60 + 1;
        var v27759 = s$$34[v28704];
        var v26252 = v27759.chart;
        var v24110 = v26252[b$$715];
        v19493 = v24109 !== v24110;
      }
      var v15194 = v19493;
      var v19494 = !v15194;
      if (v19494) {
        v15194 = o$$38;
      }
      var v9440 = v15194;
      if (v9440) {
        var v19495 = q$$25.chart;
        var v15195 = v19495[b$$715];
        v9440 = v15195 != "none";
      }
      var v2889 = v9440;
      if (v2889) {
        var v15196 = Smits.PhyloCanvas;
        var v9441 = v15196.Render;
        var v2871 = v9441.Style;
        var v9442 = q$$25.chart;
        var v2872 = v9442[b$$715];
        var p$$58 = v2871.getStyle(v2872, "textSecantBg");
        var v2873;
        if (e$$372) {
          var v15197 = v$$13 - j$$123;
          var v9443 = v15197 - f$$205;
          var v9444 = v$$13 - j$$123;
          var v24112;
          if (g$$210) {
            v24112 = g$$210;
          } else {
            v24112 = q$$25.y;
          }
          var v19496 = v24112;
          var v19497 = u$$18 / 2;
          var v15198 = v19496 - v19497;
          var v19498;
          var v26253 = n$$108;
          if (v26253) {
            v26253 = !o$$38;
          }
          var v24113 = v26253;
          if (v24113) {
            v19498 = 0;
          } else {
            v19498 = h$$174 / 2;
          }
          var v15199 = v19498;
          var v9445 = v15198 + v15199;
          var v19499 = q$$25.y;
          var v19500 = u$$18 / 2;
          var v15200 = v19499 + v19500;
          var v19501;
          var v28705 = s$$34.length;
          var v27760 = v28705 - 1;
          var v26254 = m$$60 == v27760;
          if (v26254) {
            v26254 = !o$$38;
          }
          var v24114 = v26254;
          if (v24114) {
            v19501 = 0;
          } else {
            v19501 = h$$174 / 2;
          }
          var v15201 = v19501;
          var v9446 = v15200 - v15201;
          v2873 = [v9443, v9444, v9445, v9446];
        } else {
          var v9447 = d$$432 + j$$123;
          var v15202 = d$$432 + j$$123;
          var v9448 = v15202 + f$$205;
          var v24115;
          if (g$$210) {
            v24115 = g$$210;
          } else {
            v24115 = q$$25.y;
          }
          var v19502 = v24115;
          var v19503 = u$$18 / 2;
          var v15203 = v19502 - v19503;
          var v19504;
          var v26255 = n$$108;
          if (v26255) {
            v26255 = !o$$38;
          }
          var v24116 = v26255;
          if (v24116) {
            v19504 = 0;
          } else {
            v19504 = h$$174 / 2;
          }
          var v15204 = v19504;
          var v9449 = v15203 + v15204;
          var v19505 = q$$25.y;
          var v19506 = u$$18 / 2;
          var v15205 = v19505 + v19506;
          var v19507;
          var v28706 = s$$34.length;
          var v27761 = v28706 - 1;
          var v26256 = m$$60 == v27761;
          if (v26256) {
            v26256 = !o$$38;
          }
          var v24117 = v26256;
          if (v24117) {
            v19507 = 0;
          } else {
            v19507 = h$$174 / 2;
          }
          var v15206 = v19507;
          var v9450 = v15205 - v15206;
          v2873 = [v9447, v9448, v9449, v9450];
        }
        g$$210 = v2873;
        var v2884 = p$$58.label;
        if (v2884) {
          var v15207 = Smits.PhyloCanvas;
          var v9451 = v15207.Render;
          var v2874 = v9451.Style;
          var v2875 = p$$58.labelStyle;
          n$$108 = v2874.getStyle(v2875, "text");
          var v15208 = g$$210[0];
          var v15209 = g$$210[1];
          var v9452 = v15208 + v15209;
          var v2876 = v9452 / 2;
          var v15210 = g$$210[2];
          var v15211 = g$$210[3];
          var v9453 = v15210 + v15211;
          var v2877 = v9453 / 2;
          q$$25 = a$$731(v2876, v2877);
          var v15212 = g$$210[2];
          var v15213 = g$$210[3];
          var v9454 = v15212 + v15213;
          var v2878 = v9454 / 2;
          var r$$30 = c$$583(v2878);
          var v9455 = r$$30[0];
          var v15214;
          var v19509 = n$$108.rotate;
          if (v19509) {
            var v19508 = n$$108.rotate;
            v15214 = parseFloat(v19508);
          } else {
            v15214 = 0;
          }
          var v9456 = v15214;
          var v2879 = v9455 + v9456;
          r$$30 = k$$85(v2879);
          var v24118 = g$$210[2];
          var v24119 = g$$210[3];
          var v19510 = v24118 + v24119;
          var v15215 = v19510 / 2;
          var v9457 = 90 - v15215;
          var v2880 = v9457 - D$$4;
          var t$$31 = k$$85(v2880);
          var v9458 = t$$31 > 90;
          if (v9458) {
            v9458 = t$$31 < 270;
          }
          var v2881 = v9458;
          if (v2881) {
            r$$30 = r$$30 + 180;
          }
          var v2882 = n$$108["text-anchor"];
          var v9459 = !v2882;
          if (v9459) {
            n$$108["text-anchor"] = "middle";
          }
          var v26257 = Smits.PhyloCanvas;
          var v24120 = v26257.Render;
          var v19511 = v24120.Text;
          var v19512 = q$$25[0];
          var v19513 = q$$25[1];
          var v19514 = p$$58.label;
          var v19515 = {attr:n$$108, rotate:r$$30};
          var v15216 = new v19511(v19512, v19513, v19514, v19515);
          var v9460 = i$$235.draw(v15216);
          var v2883 = v9460[0];
          v2883.toBack();
        }
        var v2885 = p$$58.borderStyle;
        if (v2885) {
          var v24121 = Smits.PhyloCanvas;
          var v19516 = v24121.Render;
          var v15217 = v19516.Style;
          var v15218 = p$$58.borderStyle;
          n$$108 = v15217.getStyle(v15218, "textSecantBg");
          var v28707 = Smits.PhyloCanvas;
          var v27762 = v28707.Render;
          var v26258 = v27762.Path;
          var v29338;
          var v29732 = n$$108.fullsize;
          if (v29732) {
            v29338 = g$$210[1];
          } else {
            v29338 = g$$210[0];
          }
          var v28708 = v29338;
          var v28709 = g$$210[2];
          var v28710 = g$$210[3];
          var v27763 = [v$$13, v28708, v28709, v28710];
          var v26259 = l$$90(v27763);
          var v26260 = {attr:n$$108};
          var v24122 = new v26258(v26259, v26260);
          var v19517 = i$$235.draw(v24122);
          var v15219 = v19517[0];
          v15219.toBack();
        }
        var v26261 = Smits.PhyloCanvas;
        var v24123 = v26261.Render;
        var v19518 = v24123.Path;
        var v19519 = l$$90(g$$210);
        var v19520 = {attr:p$$58};
        var v15220 = new v19518(v19519, v19520);
        var v9461 = i$$235.draw(v15220);
        var v2886 = v9461[0];
        v2886.toBack();
        g$$210 = 0;
      } else {
        var v2887 = !g$$210;
        if (v2887) {
          g$$210 = q$$25.y;
        }
        var v15221 = q$$25.chart;
        var v9462 = v15221[b$$715];
        var v2888 = v9462 == "none";
        if (v2888) {
          g$$210 = 0;
        }
      }
      n$$108 = !1;
      m$$60++;
      var v9463 = s$$34.length;
      v2890 = m$$60 < v9463;
    }
    var v2891;
    if (e$$372) {
      v2891 = d$$432;
    } else {
      var v9464 = d$$432 + j$$123;
      v2891 = v9464 + f$$205;
    }
    return v2891;
  }
  function j$$120(d$$433, a$$738, b$$716) {
    var c$$587 = [];
    var v2892;
    var v15222 = b$$716;
    if (v15222) {
      v15222 = b$$716.bufferInner;
    }
    var v9467 = v15222;
    if (v9467) {
      var v9465 = b$$716.bufferInner;
      v2892 = parseFloat(v9465);
    } else {
      var v19521 = Smits.PhyloCanvas;
      var v15223 = v19521.Render;
      var v9466 = v15223.Parameters;
      v2892 = v9466.barChartBufferInner;
    }
    var e$$373 = v2892;
    var v2893;
    var v15224 = b$$716;
    if (v15224) {
      v15224 = b$$716.height;
    }
    var v9470 = v15224;
    if (v9470) {
      var v9468 = b$$716.height;
      v2893 = parseFloat(v9468);
    } else {
      var v9469;
      var v26262 = Smits.PhyloCanvas;
      var v24124 = v26262.Render;
      var v19522 = v24124.Parameters;
      var v15226 = v19522.barChartHeight;
      if (v15226) {
        var v24125 = Smits.PhyloCanvas;
        var v19523 = v24125.Render;
        var v15225 = v19523.Parameters;
        v9469 = v15225.barChartHeight;
      } else {
        v9469 = 0;
      }
      v2893 = v9469;
    }
    var j$$124 = v2893;
    var v2894;
    var v15227 = b$$716;
    if (v15227) {
      v15227 = b$$716.width;
    }
    var v9473 = v15227;
    if (v9473) {
      var v9471;
      var v24126 = b$$716.width;
      var v19524 = parseFloat(v24126);
      var v15231 = v19524 < 1;
      if (v15231) {
        var v15228 = u$$18;
        var v19525 = b$$716.width;
        var v15229 = parseFloat(v19525);
        v9471 = v15228 * v15229;
      } else {
        var v15230 = b$$716.width;
        v9471 = parseFloat(v15230);
      }
      v2894 = v9471;
    } else {
      var v15232;
      var v28711 = Smits.PhyloCanvas;
      var v27764 = v28711.Render;
      var v26263 = v27764.Parameters;
      var v24127 = v26263.barChartWidth;
      var v19528 = v24127 < 1;
      if (v19528) {
        var v27765 = Smits.PhyloCanvas;
        var v26264 = v27765.Render;
        var v24128 = v26264.Parameters;
        var v19526 = v24128.barChartWidth;
        v15232 = u$$18 * v19526;
      } else {
        var v26265 = Smits.PhyloCanvas;
        var v24129 = v26265.Render;
        var v19527 = v24129.Parameters;
        v15232 = v19527.barChartWidth;
      }
      var v9472 = v15232;
      v2894 = 0 | v9472;
    }
    b$$716 = v2894;
    var h$$175 = 0;
    var f$$206 = 0;
    var v9474 = s$$34.length;
    var v2896 = f$$206 < v9474;
    for (;v2896;) {
      var v15233 = s$$34[f$$206];
      var v9475 = v15233.chart;
      var v2895 = v9475[a$$738];
      c$$587.push(v2895);
      f$$206++;
      var v9476 = s$$34.length;
      v2896 = f$$206 < v9476;
    }
    var v2897 = Math.max;
    c$$587 = v2897.apply(null, c$$587);
    var v2898 = Smits.Common;
    var v2899 = j$$124 / c$$587;
    h$$175 = v2898.roundFloat(v2899, 4);
    f$$206 = 0;
    var v9477 = s$$34.length;
    var v2900 = f$$206 < v9477;
    for (;v2900;) {
      c$$587 = s$$34[f$$206];
      var v19529 = c$$587.chart;
      var v15234 = v19529[a$$738];
      var v9478 = v15234 > 0;
      if (v9478) {
        var v26266 = Smits.PhyloCanvas;
        var v24130 = v26266.Render;
        var v19530 = v24130.Path;
        var v24131 = d$$433 + e$$373;
        var v26267 = d$$433 + e$$373;
        var v28712 = c$$587.chart;
        var v27766 = v28712[a$$738];
        var v26268 = h$$175 * v27766;
        var v24132 = v26267 + v26268;
        var v26269 = c$$587.y;
        var v26270 = b$$716 / 2;
        var v24133 = v26269 - v26270;
        var v26271 = c$$587.y;
        var v26272 = b$$716 / 2;
        var v24134 = v26271 + v26272;
        var v19531 = l$$90(v24131, v24132, v24133, v24134);
        var v28713 = Smits.PhyloCanvas;
        var v27767 = v28713.Render;
        var v26273 = v27767.Style;
        var v27768 = c$$587.chart;
        var v26274 = v27768[a$$738];
        var v24135 = v26273.getStyle(v26274, "barChart");
        var v19532 = {attr:v24135};
        var v15235 = new v19530(v19531, v19532);
        i$$235.draw(v15235);
      }
      f$$206++;
      var v9479 = s$$34.length;
      v2900 = f$$206 < v9479;
    }
    var v2901 = d$$433 + e$$373;
    return v2901 + j$$124;
  }
  var i$$235;
  var v15236 = Smits.PhyloCanvas;
  var v9480 = v15236.Render;
  var v2902 = v9480.Parameters;
  var e$$368 = v2902.Circular;
  var h$$171;
  var n$$106;
  var o$$36;
  var q$$24;
  var u$$18;
  var z$$9;
  var B$$5 = !0;
  var A$$5 = 0;
  var E$$4;
  var r$$29;
  var v$$13;
  var s$$34 = [];
  var t$$30 = [];
  var C$$4;
  var w$$19;
  var x$$75 = 0;
  var D$$4;
  var v2903 = Math.PI;
  var F$$4 = v2903 / 180;
  return v1955;
}
function v1952() {
  function v1951(q$$23, m$$57) {
    function v1950() {
      return m$$57.getRoot();
    }
    function v1949() {
      return[b$$706, f$$200];
    }
    this.getCanvasSize = v1949;
    this.getRoot = v1950;
    var v2904 = m$$57.getValidate();
    if (v2904) {
      var v9481 = m$$57.getValidate();
      a$$730.draw(0, 0, v9481);
    }
    a$$730 = q$$23;
    var r$$28 = m$$57.getRoot();
    var v$$12 = m$$57.getNewickLen();
    var v2905 = a$$730.canvasSize;
    b$$706 = v2905[0];
    var v2906 = a$$730.canvasSize;
    f$$200 = v2906[1];
    h$$167 = c$$580.bufferX;
    n$$104 = c$$580.paddingX;
    o$$34 = c$$580.paddingY;
    g$$207 = c$$580.minHeightBetweenLeaves;
    d$$420 = o$$34;
    var v15237 = b$$706 - h$$167;
    var v15238 = n$$104 * 2;
    var v9482 = v15237 - v15238;
    var v2907 = v9482 / v$$12;
    k$$84 = Math.round(v2907);
    var v15239 = o$$34 * 2;
    var v9483 = f$$200 - v15239;
    var v15240;
    var v19534 = c$$580.showScaleBar;
    if (v19534) {
      v15240 = r$$28.getCountAllChildren();
    } else {
      var v19533 = r$$28.getCountAllChildren();
      v15240 = v19533 - 1;
    }
    var v9484 = v15240;
    var v2908 = v9483 / v9484;
    l$$89 = Math.round(v2908);
    var v2909 = l$$89 < g$$207;
    if (v2909) {
      l$$89 = g$$207;
    }
    var v9485 = b$$706 - h$$167;
    var v9486 = n$$104 * 2;
    var v2910 = v9485 - v9486;
    p$$56 = Math.round(v2910);
    var v26275 = Smits.PhyloCanvas;
    var v24136 = v26275.Render;
    var v19535 = v24136.Parameters;
    var v15241 = v19535.binaryCharts;
    var v9487 = v15241.length;
    var v15243 = !v9487;
    if (v15243) {
      var v26276 = Smits.PhyloCanvas;
      var v24137 = v26276.Render;
      var v19536 = v24137.Parameters;
      var v15242 = v19536.barCharts;
      v9487 = v15242.length;
    }
    var v2911 = v9487;
    if (v2911) {
      c$$580.alignRight = !0;
    }
    u$$17(r$$28, n$$104);
    var v2912 = c$$580.showScaleBar;
    if (v2912) {
      y = d$$420 + l$$89;
      var v24138 = c$$580.showScaleBar;
      e$$364 = v24138 * k$$84;
      var v27769 = Smits.PhyloCanvas;
      var v26277 = v27769.Render;
      var v24139 = v26277.Line;
      var v19537 = new v24139(0, e$$364, y, y);
      a$$730.draw(v19537);
      var v26278 = Smits.PhyloCanvas;
      var v24140 = v26278.Render;
      var v19538 = v24140.Text;
      var v24141 = 0 + e$$364;
      var v19539 = v24141 / 2;
      var v19540 = y - 8;
      var v19541 = c$$580.showScaleBar;
      var v15244 = new v19538(v19539, v19540, v19541);
      a$$730.draw(v15244);
    }
    var v2913 = p$$56 + j$$117;
    var v2914 = c$$580.bufferInnerLabels;
    i$$231 = v2913 + v2914;
    var v24142 = Smits.PhyloCanvas;
    var v19542 = v24142.Render;
    var v15245 = v19542.Parameters;
    var v9488 = v15245.binaryCharts;
    var v2918 = v9488.length;
    if (v2918) {
      var v15246 = Smits.PhyloCanvas;
      var v9489 = v15246.Render;
      var v2915 = v9489.Parameters;
      r$$28 = v2915.binaryCharts;
      var s$$33;
      for (s$$33 in r$$28) {
        var v9490 = r$$28[s$$33];
        var v2916 = v9490.chart;
        var v2917 = r$$28[s$$33];
        i$$231 = z$$8(i$$231, v2916, v2917);
      }
    }
    var v24143 = Smits.PhyloCanvas;
    var v19543 = v24143.Render;
    var v15247 = v19543.Parameters;
    var v9491 = v15247.barCharts;
    var v2922 = v9491.length;
    if (v2922) {
      var v24144 = Smits.PhyloCanvas;
      var v19544 = v24144.Render;
      var v15248 = v19544.Parameters;
      r$$28 = v15248.barCharts;
      var v2921 = r$$28;
      for (s$$33 in v2921) {
        var v9492 = r$$28[s$$33];
        var v2919 = v9492.chart;
        var v2920 = r$$28[s$$33];
        B$$4(i$$231, v2919, v2920);
      }
    }
    return;
  }
  function B$$4(d$$422, c$$582, b$$709) {
    var e$$367 = [];
    var v2923;
    var v15249 = b$$709;
    if (v15249) {
      v15249 = b$$709.bufferInner;
    }
    var v9494 = v15249;
    if (v9494) {
      v2923 = b$$709.bufferInner;
    } else {
      var v24145 = Smits.PhyloCanvas;
      var v19545 = v24145.Render;
      var v15250 = v19545.Parameters;
      var v9493 = v15250.barChartBufferInner;
      v2923 = 0 | v9493;
    }
    var i$$234 = v2923;
    var v2924;
    var v15251 = b$$709;
    if (v15251) {
      v15251 = b$$709.height;
    }
    var v9496 = v15251;
    if (v9496) {
      v2924 = b$$709.height;
    } else {
      var v24146 = Smits.PhyloCanvas;
      var v19546 = v24146.Render;
      var v15252 = v19546.Parameters;
      var v9495 = v15252.barChartHeight;
      v2924 = 0 | v9495;
    }
    var h$$170 = v2924;
    var v2925;
    var v15253 = b$$709;
    if (v15253) {
      v15253 = b$$709.width;
    }
    var v9499 = v15253;
    if (v9499) {
      var v9497;
      var v19547 = b$$709.width;
      var v15255 = v19547 < 1;
      if (v15255) {
        var v15254 = b$$709.width;
        v9497 = l$$89 * v15254;
      } else {
        v9497 = b$$709.width;
      }
      v2925 = v9497;
    } else {
      var v15256;
      var v28714 = Smits.PhyloCanvas;
      var v27770 = v28714.Render;
      var v26279 = v27770.Parameters;
      var v24147 = v26279.barChartWidth;
      var v19550 = v24147 < 1;
      if (v19550) {
        var v27771 = Smits.PhyloCanvas;
        var v26280 = v27771.Render;
        var v24148 = v26280.Parameters;
        var v19548 = v24148.barChartWidth;
        v15256 = l$$89 * v19548;
      } else {
        var v26281 = Smits.PhyloCanvas;
        var v24149 = v26281.Render;
        var v19549 = v24149.Parameters;
        v15256 = v19549.barChartWidth;
      }
      var v9498 = v15256;
      v2925 = 0 | v9498;
    }
    b$$709 = v2925;
    var j$$119 = 0;
    var f$$202 = 0;
    var v9500 = q$$22.length;
    var v2927 = f$$202 < v9500;
    for (;v2927;) {
      var v15257 = q$$22[f$$202];
      var v9501 = v15257.chart;
      var v2926 = v9501[c$$582];
      e$$367.push(v2926);
      f$$202++;
      var v9502 = q$$22.length;
      v2927 = f$$202 < v9502;
    }
    var v2928 = Math.max;
    e$$367 = v2928.apply(null, e$$367);
    var v2929 = Smits.Common;
    var v2930 = h$$170 / e$$367;
    j$$119 = v2929.roundFloat(v2930, 4);
    f$$202 = 0;
    var v9503 = q$$22.length;
    var v2931 = f$$202 < v9503;
    for (;v2931;) {
      e$$367 = q$$22[f$$202];
      var v24150 = Smits.PhyloCanvas;
      var v19551 = v24150.Render;
      var v15258 = v19551.Path;
      var v19552 = d$$422 + i$$234;
      var v24151 = e$$367.y;
      var v24152 = b$$709 / 2;
      var v19553 = v24151 - v24152;
      var v24153 = d$$422 + i$$234;
      var v27772 = e$$367.chart;
      var v26282 = v27772[c$$582];
      var v24154 = j$$119 * v26282;
      var v19554 = v24153 + v24154;
      var v24155 = e$$367.y;
      var v24156 = b$$709 / 2;
      var v19555 = v24155 - v24156;
      var v24157 = d$$422 + i$$234;
      var v27773 = e$$367.chart;
      var v26283 = v27773[c$$582];
      var v24158 = j$$119 * v26283;
      var v19556 = v24157 + v24158;
      var v24159 = e$$367.y;
      var v24160 = b$$709 / 2;
      var v19557 = v24159 + v24160;
      var v19558 = d$$422 + i$$234;
      var v24161 = e$$367.y;
      var v24162 = b$$709 / 2;
      var v19559 = v24161 + v24162;
      var v15259 = ["M", v19552, v19553, "L", v19554, v19555, "L", v19556, v19557, "L", v19558, v19559, "Z"];
      var v27774 = Smits.PhyloCanvas;
      var v26284 = v27774.Render;
      var v24163 = v26284.Style;
      var v26285 = e$$367.chart;
      var v24164 = v26285[c$$582];
      var v19560 = v24163.getStyle(v24164, "barChart");
      var v15260 = {attr:v19560};
      var v9504 = new v15258(v15259, v15260);
      a$$730.draw(v9504);
      f$$202++;
      var v9505 = q$$22.length;
      v2931 = f$$202 < v9505;
    }
    var v2932 = d$$422 + i$$234;
    return v2932 + h$$170;
  }
  function z$$8(d$$421, c$$581, b$$708) {
    var v9506;
    var v19561 = b$$708;
    if (v19561) {
      v19561 = b$$708.bufferInner;
    }
    var v15261 = v19561;
    if (v15261) {
      v9506 = b$$708.bufferInner;
    } else {
      v9506 = 0;
    }
    var v2933 = v9506;
    var v19562 = Smits.PhyloCanvas;
    var v15262 = v19562.Render;
    var v9507 = v15262.Parameters;
    var v2934 = v9507.binaryChartBufferInner;
    var e$$366 = v2933 | v2934;
    var v9508;
    var v19563 = b$$708;
    if (v19563) {
      v19563 = b$$708.bufferSiblings;
    }
    var v15264 = v19563;
    if (v15264) {
      var v15263 = b$$708.bufferSiblings;
      v9508 = v15263 * l$$89;
    } else {
      v9508 = 0;
    }
    var v2935 = v9508;
    var v9509;
    var v27775 = Smits.PhyloCanvas;
    var v26286 = v27775.Render;
    var v24165 = v26286.Parameters;
    var v19564 = v24165.binaryChartBufferSiblings;
    var v15267 = v19564 < 1;
    if (v15267) {
      var v26287 = Smits.PhyloCanvas;
      var v24166 = v26287.Render;
      var v19565 = v24166.Parameters;
      var v15265 = v19565.binaryChartBufferSiblings;
      v9509 = l$$89 * v15265;
    } else {
      var v24167 = Smits.PhyloCanvas;
      var v19566 = v24167.Render;
      var v15266 = v19566.Parameters;
      v9509 = v15266.binaryChartBufferSiblings;
    }
    var v2936 = v9509;
    var i$$233 = v2935 | v2936;
    var v9510;
    var v19567 = b$$708;
    if (v19567) {
      v19567 = b$$708.thickness;
    }
    var v15268 = v19567;
    if (v15268) {
      v9510 = b$$708.thickness;
    } else {
      v9510 = 0;
    }
    var v2937 = v9510;
    var v19568 = Smits.PhyloCanvas;
    var v15269 = v19568.Render;
    var v9511 = v15269.Parameters;
    var v2938 = v9511.binaryChartThickness;
    b$$708 = v2937 | v2938;
    var h$$169 = 0;
    var v9512 = q$$22.length;
    var v2940 = h$$169 < v9512;
    for (;v2940;) {
      var j$$118 = q$$22[h$$169];
      var v19569 = Smits.PhyloCanvas;
      var v15270 = v19569.Render;
      var v9513 = v15270.Path;
      var v15271 = d$$421 + e$$366;
      var v24168 = j$$118.y;
      var v24169 = l$$89 / 2;
      var v19570 = v24168 - v24169;
      var v19571 = i$$233 / 2;
      var v15272 = v19570 + v19571;
      var v19572 = d$$421 + e$$366;
      var v15273 = v19572 + b$$708;
      var v24170 = j$$118.y;
      var v24171 = l$$89 / 2;
      var v19573 = v24170 - v24171;
      var v19574 = i$$233 / 2;
      var v15274 = v19573 + v19574;
      var v19575 = d$$421 + e$$366;
      var v15275 = v19575 + b$$708;
      var v24172 = j$$118.y;
      var v24173 = l$$89 / 2;
      var v19576 = v24172 + v24173;
      var v19577 = i$$233 / 2;
      var v15276 = v19576 - v19577;
      var v15277 = d$$421 + e$$366;
      var v24174 = j$$118.y;
      var v24175 = l$$89 / 2;
      var v19578 = v24174 + v24175;
      var v19579 = i$$233 / 2;
      var v15278 = v19578 - v19579;
      var v9514 = ["M", v15271, v15272, "L", v15273, v15274, "L", v15275, v15276, "L", v15277, v15278, "Z"];
      var v26288 = Smits.PhyloCanvas;
      var v24176 = v26288.Render;
      var v19580 = v24176.Style;
      var v24177 = j$$118.chart;
      var v19581 = v24177[c$$581];
      var v15279 = v19580.getStyle(v19581, "textSecantBg");
      var v9515 = {attr:v15279};
      var v2939 = new v9513(v9514, v9515);
      a$$730.draw(v2939);
      h$$169++;
      var v9516 = q$$22.length;
      v2940 = h$$169 < v9516;
    }
    var v2941 = d$$421 + e$$366;
    return v2941 + b$$708;
  }
  function u$$17(b$$707, e$$365) {
    var v15280 = b$$707.len;
    if (v15280) {
      var v19582 = !1;
      v15280 = m$$56 == v19582;
    }
    var v9517 = v15280;
    if (v9517) {
      var v19583 = b$$707.children;
      var v15281 = v19583.length;
      v9517 = v15281 == 0;
    }
    var v2942 = v9517;
    if (v2942) {
      var v9518 = Smits.Common;
      var v9519 = d$$420 + l$$89;
      d$$420 = v9518.roundFloat(v9519, 4);
    }
    var v15282 = b$$707.children;
    var v9520 = v15282.length;
    var v2970 = v9520 > 0;
    if (v2970) {
      var i$$232 = [];
      var h$$168;
      var f$$201;
      var o$$35;
      var n$$105;
      var v2943 = b$$707.len;
      if (v2943) {
        h$$168 = e$$365;
        var v24178 = Smits.Common;
        var v27776 = b$$707.len;
        var v26289 = k$$84 * v27776;
        var v24179 = e$$365 + v26289;
        f$$201 = e$$365 = v24178.roundFloat(v24179, 4);
        var v19584 = d$$420;
        var v24180 = b$$707.getMidbranchPosition(m$$56);
        var v19585 = v24180 * l$$89;
        n$$105 = o$$35 = v19584 + v19585;
        var v26290 = Smits.PhyloCanvas;
        var v24181 = v26290.Render;
        var v19586 = v24181.Line;
        var v15283 = new v19586(h$$168, f$$201, o$$35, n$$105);
        a$$730.draw(v15283);
      }
      var v2949 = b$$707.name;
      if (v2949) {
        h$$168 = {};
        var v15284 = Smits.PhyloCanvas;
        var v9521 = v15284.Render;
        var v2944 = v9521.Style;
        h$$168 = v2944.getStyle("bootstrap", "text");
        var v2945 = b$$707.uri;
        if (v2945) {
          h$$168.href = b$$707.uri;
        }
        var v2946 = b$$707.description;
        if (v2946) {
          h$$168.title = b$$707.description;
        }
        var v2947;
        var v15285 = b$$707.level;
        var v9524 = v15285 == 0;
        if (v9524) {
          var v9522 = d$$420;
          var v15286 = b$$707.getMidbranchPosition(m$$56);
          var v9523 = v15286 * l$$89;
          v2947 = v9522 + v9523;
        } else {
          v2947 = n$$105;
        }
        var g$$208 = v2947;
        var v19587 = Smits.PhyloCanvas;
        var v15287 = v19587.Render;
        var v9525 = v15287.Text;
        var v15288 = f$$201 || e$$365;
        var v9526 = v15288 + 5;
        var v9527 = b$$707.name;
        var v9528 = {attr:h$$168};
        var v2948 = new v9525(v9526, g$$208, v9527, v9528);
        a$$730.draw(v2948);
      }
      var v9529 = b$$707.children;
      if (v9529) {
        var v15289 = b$$707.children;
        v9529 = v15289.length;
      }
      var v2952 = v9529;
      if (v2952) {
        h$$168 = 0;
        var v15290 = b$$707.children;
        var v9530 = v15290.length;
        var v2951 = h$$168 < v9530;
        for (;v2951;) {
          var v15291 = b$$707.children;
          var v9531 = v15291[h$$168];
          var v2950 = u$$17(v9531, e$$365);
          i$$232.push(v2950);
          h$$168++;
          var v15292 = b$$707.children;
          var v9532 = v15292.length;
          v2951 = h$$168 < v9532;
        }
      }
      f$$201 = [];
      h$$168 = 0;
      var v9533 = i$$232.length;
      var v2953 = h$$168 < v9533;
      for (;v2953;) {
        var v15293 = i$$232[h$$168];
        var v9534 = v15293[0];
        if (v9534) {
          var v19588 = i$$232[h$$168];
          var v15294 = v19588[0];
          f$$201.push(v15294);
        }
        var v15295 = i$$232[h$$168];
        var v9535 = v15295[1];
        if (v9535) {
          var v19589 = i$$232[h$$168];
          var v15296 = v19589[1];
          f$$201.push(v15296);
        }
        h$$168++;
        var v9536 = i$$232.length;
        v2953 = h$$168 < v9536;
      }
      var v2954 = Math.min;
      i$$232 = v2954.apply(null, f$$201);
      var v2955 = Math.max;
      f$$201 = v2955.apply(null, f$$201);
      var v19590 = Smits.PhyloCanvas;
      var v15297 = v19590.Render;
      var v9537 = v15297.Path;
      var v15298 = e$$365 + 1E-4;
      var v15299 = e$$365 + 1E-4;
      var v9538 = ["M", v15298, i$$232, "L", e$$365, i$$232, "L", e$$365, f$$201, "L", v15299, f$$201];
      var v26291 = Smits.PhyloCanvas;
      var v24182 = v26291.Render;
      var v19591 = v24182.Style;
      var v15300 = v19591.line;
      var v9539 = {attr:v15300};
      var v2956 = new v9537(v9538, v9539);
      a$$730.draw(v2956);
    } else {
      h$$168 = e$$365;
      var v2957 = Smits.Common;
      var v15301 = b$$707.len;
      var v9540 = k$$84 * v15301;
      var v2958 = e$$365 + v9540;
      f$$201 = v2957.roundFloat(v2958, 2);
      n$$105 = o$$35 = d$$420;
      b$$707.y = d$$420;
      q$$22.push(b$$707);
      var v19592 = Smits.PhyloCanvas;
      var v15302 = v19592.Render;
      var v9541 = v15302.Line;
      var v2959 = new v9541(h$$168, f$$201, o$$35, n$$105);
      a$$730.draw(v2959);
      var v2960 = c$$580.alignRight;
      if (v2960) {
        var v24183 = Smits.PhyloCanvas;
        var v19593 = v24183.Render;
        var v15303 = v19593.Path;
        var v24184 = c$$580.alignPadding;
        var v19594 = v24184 + p$$56;
        var v15304 = ["M", f$$201, o$$35, "L", v19594, n$$105];
        var v27777 = Smits.PhyloCanvas;
        var v26292 = v27777.Render;
        var v24185 = v26292.Style;
        var v19595 = v24185.connectedDash;
        var v15305 = {attr:v19595};
        var v9542 = new v15303(v15304, v15305);
        a$$730.draw(v9542);
      }
      var v2969 = b$$707.name;
      if (v2969) {
        h$$168 = {};
        var v2961 = b$$707.style;
        if (v2961) {
          var v19596 = Smits.PhyloCanvas;
          var v15306 = v19596.Render;
          var v9543 = v15306.Style;
          var v9544 = b$$707.style;
          h$$168 = v9543.getStyle(v9544, "text");
        }
        h$$168["text-anchor"] = "start";
        var v2962 = b$$707.uri;
        if (v2962) {
          h$$168.href = b$$707.uri;
        }
        var v2963 = b$$707.description;
        if (v2963) {
          h$$168.title = b$$707.description;
        }
        var v19597 = Smits.PhyloCanvas;
        var v15307 = v19597.Render;
        var v9545 = v15307.Text;
        var v15308;
        var v19601 = c$$580.alignRight;
        if (v19601) {
          var v24186 = c$$580.bufferInnerLabels;
          var v19598 = p$$56 + v24186;
          var v19599 = c$$580.alignPadding;
          v15308 = v19598 + v19599;
        } else {
          var v19600 = c$$580.bufferInnerLabels;
          v15308 = f$$201 + v19600;
        }
        var v9546 = v15308;
        var v9547 = b$$707.name;
        var v9548 = {attr:h$$168};
        var v2964 = new v9545(v9546, n$$105, v9547, v9548);
        i$$232 = a$$730.draw(v2964);
        var v2965 = i$$232[1];
        j$$117 = Math.max(v2965, j$$117);
        var v19602 = Smits.PhyloCanvas;
        var v15309 = v19602.Render;
        var v9549 = v15309.Parameters;
        var v2966 = v9549.mouseRollOver;
        if (v2966) {
          var v9550 = Smits.Common;
          var v9551 = i$$232[0];
          var v24187 = Smits.PhyloCanvas;
          var v19603 = v24187.Render;
          var v15310 = v19603.Parameters;
          var v9552 = v15310.mouseRollOver;
          var v15311 = i$$232[0];
          var v9553 = {svg:a$$730, node:b$$707, x:f$$201, y:n$$105, textEl:v15311};
          v9550.addRaphEventHandler(v9551, "mouseover", v9552, v9553);
        }
        var v19604 = Smits.PhyloCanvas;
        var v15312 = v19604.Render;
        var v9554 = v15312.Parameters;
        var v2967 = v9554.mouseRollOut;
        if (v2967) {
          var v9555 = Smits.Common;
          var v9556 = i$$232[0];
          var v24188 = Smits.PhyloCanvas;
          var v19605 = v24188.Render;
          var v15313 = v19605.Parameters;
          var v9557 = v15313.mouseRollOut;
          var v15314 = i$$232[0];
          var v9558 = {svg:a$$730, node:b$$707, x:f$$201, y:n$$105, textEl:v15314};
          v9555.addRaphEventHandler(v9556, "mouseout", v9557, v9558);
        }
        var v19606 = Smits.PhyloCanvas;
        var v15315 = v19606.Render;
        var v9559 = v15315.Parameters;
        var v2968 = v9559.onClickAction;
        if (v2968) {
          var v9560 = Smits.Common;
          var v9561 = i$$232[0];
          var v24189 = Smits.PhyloCanvas;
          var v19607 = v24189.Render;
          var v15316 = v19607.Parameters;
          var v9562 = v15316.onClickAction;
          var v15317 = i$$232[0];
          var v9563 = {svg:a$$730, node:b$$707, x:f$$201, y:n$$105, textEl:v15317};
          v9560.addRaphEventHandler(v9561, "click", v9562, v9563);
        }
      }
      if (m$$56) {
        m$$56 = !1;
      }
    }
    return[o$$35, n$$105];
  }
  var a$$730;
  var v15318 = Smits.PhyloCanvas;
  var v9564 = v15318.Render;
  var v2971 = v9564.Parameters;
  var c$$580 = v2971.Rectangular;
  var b$$706;
  var f$$200;
  var k$$84;
  var l$$89;
  var p$$56;
  var g$$207;
  var m$$56 = !0;
  var d$$420 = 0;
  var j$$117 = 0;
  var i$$231;
  var e$$364;
  var h$$167;
  var n$$104;
  var o$$34;
  var q$$22 = [];
  return v1951;
}
function v1948(a$$729) {
  var c$$579;
  var b$$705;
  var v2972;
  var v15319 = a$$729.type;
  var v9568 = v15319 == "line";
  if (v9568) {
    var v15320 = this.svg;
    var v19608 = a$$729.x1;
    var v19609 = a$$729.y1;
    var v19610 = a$$729.x2;
    var v19611 = a$$729.y2;
    var v15321 = ["M", v19608, v19609, "L", v19610, v19611];
    var v9565 = v15320.path(v15321);
    var v24190 = Smits.PhyloCanvas;
    var v19612 = v24190.Render;
    var v15322 = v19612.Style;
    var v9566 = v15322.line;
    v2972 = c$$579 = v9565.attr(v9566);
  } else {
    var v9567;
    var v19613 = a$$729.type;
    var v15326 = v19613 == "path";
    if (v15326) {
      var v19614 = this.svg;
      var v19615 = a$$729.path;
      var v15323 = v19614.path(v19615);
      var v15324 = a$$729.attr;
      v9567 = c$$579 = v15323.attr(v15324);
    } else {
      var v15325;
      var v24191 = a$$729.type;
      var v19619 = v24191 == "circle";
      if (v19619) {
        var v24192 = this.svg;
        var v24193 = a$$729.x;
        var v24194 = a$$729.y;
        var v24195 = a$$729.radius;
        var v19616 = v24192.circle(v24193, v24194, v24195);
        var v19617 = {stroke:"red"};
        v15325 = c$$579 = v19616.attr(v19617);
      } else {
        var v24196 = a$$729.type;
        var v19618 = v24196 == "text";
        if (v19618) {
          var v29733 = this.svg;
          var v29734 = a$$729.x;
          var v29735 = a$$729.y;
          var v29736 = a$$729.text;
          var v29339 = v29733.text(v29734, v29735, v29736);
          var v30225 = Smits.PhyloCanvas;
          var v29992 = v30225.Render;
          var v29737 = v29992.Style;
          var v29340 = v29737.text;
          c$$579 = v29339.attr(v29340);
          var v29341 = a$$729.attr;
          if (v29341) {
            var v29738 = a$$729.attr;
            c$$579.attr(v29738);
          }
          var v28715 = a$$729.rotate;
          if (v28715) {
            var v29342 = a$$729.rotate;
            c$$579.rotate(v29342);
          }
          a$$729 = c$$579.getBBox();
          var v28716 = a$$729.height;
          var v28717 = a$$729.height;
          var v27778 = v28716 * v28717;
          var v28718 = a$$729.width;
          var v28719 = a$$729.width;
          var v27779 = v28718 * v28719;
          var v26293 = v27778 + v27779;
          v19618 = b$$705 = Math.sqrt(v26293);
        }
        v15325 = v19618;
      }
      v9567 = v15325;
    }
    v2972 = v9567;
  }
  v2972;
  return[c$$579, b$$705];
}
function v1947() {
  var v2973 = this.phylogramObject;
  var a$$728 = v2973.getDrawInstructs();
  var v9569 = this.phylogramObject;
  var v2974 = v9569.getDrawInstructs();
  console.log("render", v2974);
  var c$$578 = 0;
  var v9570 = a$$728.length;
  var v2988 = c$$578 < v9570;
  for (;v2988;) {
    var v15327 = a$$728[c$$578];
    var v9571 = v15327.type;
    var v2987 = v9571 == "line";
    if (v2987) {
      var v9572 = this.svg;
      var v19620 = a$$728[c$$578];
      var v15328 = v19620.x1;
      var v19621 = a$$728[c$$578];
      var v15329 = v19621.y1;
      var v19622 = a$$728[c$$578];
      var v15330 = v19622.x2;
      var v19623 = a$$728[c$$578];
      var v15331 = v19623.y2;
      var v9573 = ["M", v15328, v15329, "L", v15330, v15331];
      var v2975 = v9572.path(v9573);
      var v19624 = Smits.PhyloCanvas;
      var v15332 = v19624.Render;
      var v9574 = v15332.Style;
      var v2976 = v9574.line;
      v2975.attr(v2976);
    } else {
      var v15333 = a$$728[c$$578];
      var v9575 = v15333.type;
      var v2986 = v9575 == "path";
      if (v2986) {
        var v9576 = this.svg;
        var v15334 = a$$728[c$$578];
        var v9577 = v15334.path;
        var v2977 = v9576.path(v9577);
        var v9578 = a$$728[c$$578];
        var v2978 = v9578.attr;
        v2977.attr(v2978);
      } else {
        var v15335 = a$$728[c$$578];
        var v9579 = v15335.type;
        var v2985 = v9579 == "circle";
        if (v2985) {
          var v9580 = this.svg;
          var v15336 = a$$728[c$$578];
          var v9581 = v15336.x;
          var v15337 = a$$728[c$$578];
          var v9582 = v15337.y;
          var v15338 = a$$728[c$$578];
          var v9583 = v15338.radius;
          var v2979 = v9580.circle(v9581, v9582, v9583);
          var v2980 = {stroke:"red"};
          v2979.attr(v2980);
        } else {
          var v9584 = this.svg;
          var v15339 = a$$728[c$$578];
          var v9585 = v15339.x;
          var v15340 = a$$728[c$$578];
          var v9586 = v15340.y;
          var v15341 = a$$728[c$$578];
          var v9587 = v15341.text;
          var v2981 = v9584.text(v9585, v9586, v9587);
          var v19625 = Smits.PhyloCanvas;
          var v15342 = v19625.Render;
          var v9588 = v15342.Style;
          var v2982 = v9588.text;
          var b$$704 = v2981.attr(v2982);
          var v9589 = a$$728[c$$578];
          var v2983 = v9589.attr;
          if (v2983) {
            var v15343 = a$$728[c$$578];
            var v9590 = v15343.attr;
            b$$704.attr(v9590);
          }
          var v9591 = a$$728[c$$578];
          var v2984 = v9591.rotate;
          if (v2984) {
            var v15344 = a$$728[c$$578];
            var v9592 = v15344.rotate;
            b$$704.rotate(v9592);
          }
          b$$704.getBBox();
        }
      }
    }
    c$$578++;
    var v9593 = a$$728.length;
    v2988 = c$$578 < v9593;
  }
  return;
}
function v1946() {
  function v1945(a$$727, c$$577, b$$703) {
    this.canvasSize = [c$$577, b$$703];
    var v9594 = this.canvasSize;
    var v2989 = v9594[0];
    var v9595 = this.canvasSize;
    var v2990 = v9595[1];
    var v30938 = Raphael(a$$727, v2989, v2990);
    this.svg = v30938;
    return;
  }
  return v1945;
}
function v1944() {
  function v1943(a$$726, c$$576, b$$702, f$$199) {
    this.type = "circle";
    this.x = a$$726;
    this.y = c$$576;
    this.radius = b$$702;
    var v9596 = f$$199;
    if (v9596) {
      var v19626 = Smits.Common;
      v19626.apply(this, f$$199);
      v9596 = f$$199.attr;
    }
    var v2991 = v9596;
    if (v2991) {
      this.attr = f$$199.attr;
    }
    return;
  }
  return v1943;
}
function v1942() {
  function v1941(a$$725, c$$575) {
    this.type = "path";
    var v15345 = Smits.PhyloCanvas;
    var v9597 = v15345.Render;
    var v2992 = v9597.Style;
    this.attr = v2992.path;
    this.path = a$$725;
    var v9598 = c$$575;
    if (v9598) {
      var v19627 = Smits.Common;
      v19627.apply(this, c$$575);
      v9598 = c$$575.attr;
    }
    var v2993 = v9598;
    if (v2993) {
      this.attr = c$$575.attr;
    }
    return;
  }
  return v1941;
}
function v1940() {
  function v1939(a$$724, c$$574, b$$701, f$$198) {
    this.type = "text";
    var v15346 = Smits.PhyloCanvas;
    var v9599 = v15346.Render;
    var v2994 = v9599.Style;
    this.attr = v2994.text;
    this.x = a$$724;
    this.y = c$$574;
    this.text = b$$701;
    var v9600 = f$$198;
    if (v9600) {
      var v19628 = Smits.Common;
      v19628.apply(this, f$$198);
      v9600 = f$$198.attr;
    }
    var v2995 = v9600;
    if (v2995) {
      this.attr = f$$198.attr;
    }
    return;
  }
  return v1939;
}
function v1938() {
  function v1937(a$$723, c$$573, b$$700, f$$197, k$$83) {
    this.type = "line";
    var v15347 = Smits.PhyloCanvas;
    var v9601 = v15347.Render;
    var v2996 = v9601.Style;
    this.attr = v2996.line;
    this.x1 = a$$723;
    this.x2 = c$$573;
    this.y1 = b$$700;
    this.y2 = f$$197;
    var v9602 = k$$83;
    if (v9602) {
      var v19629 = Smits.Common;
      v19629.apply(this, k$$83);
      v9602 = k$$83.attr;
    }
    var v2997 = v9602;
    if (v2997) {
      this.attr = k$$83.attr;
    }
    return;
  }
  return v1937;
}
function v1936(a$$722, c$$572, b$$699) {
  var v2998 = this.jsOverride;
  var v9604 = !v2998;
  if (v9604) {
    var v9603;
    if (b$$699) {
      var v15348;
      var v19632 = b$$699 == "circular";
      if (v19632) {
        var v19630 = this.Circular;
        var v30939 = parseFloat(c$$572);
        v15348 = v19630[a$$722] = v30939;
      } else {
        var v19631 = b$$699 == "rectangular";
        if (v19631) {
          var v24197 = this.Rectangular;
          var v30940 = parseFloat(c$$572);
          v19631 = v24197[a$$722] = v30940;
        }
        v15348 = v19631;
      }
      v9603 = v15348;
    } else {
      var v30941 = parseFloat(c$$572);
      v9603 = this[a$$722] = v30941;
    }
    v9603;
  }
  return;
}
function v1935(a$$721) {
  var v9605 = a$$721.node;
  var v2999 = v9605.edgeCircleHighlight;
  v2999.hide();
  var v3000 = a$$721.textEl;
  var v3001 = {fill:"#000"};
  v3000.attr(v3001);
  return;
}
function v1934(a$$720) {
  var v9606 = a$$720.node;
  var v3006 = v9606.edgeCircleHighlight;
  if (v3006) {
    var v9607 = a$$720.node;
    var v3002 = v9607.edgeCircleHighlight;
    v3002.show();
  } else {
    var v3003 = a$$720.svg;
    var v19633 = Smits.PhyloCanvas;
    var v15349 = v19633.Render;
    var v9608 = v15349.Circle;
    var v9609 = a$$720.x;
    var v9610 = a$$720.y;
    var v26294 = Smits.PhyloCanvas;
    var v24198 = v26294.Render;
    var v19634 = v24198.Style;
    var v15350 = v19634.highlightedEdgeCircle;
    var v9611 = {attr:v15350};
    var v3004 = new v9608(v9609, v9610, 5, v9611);
    var c$$571 = v3003.draw(v3004);
    var v3005 = a$$720.node;
    v3005.edgeCircleHighlight = c$$571[0];
  }
  var v3007 = a$$720.textEl;
  var v3008 = {fill:"red"};
  v3007.attr(v3008);
  return;
}
function v1933(a$$719, c$$570) {
  var v3009;
  var v9612 = this[a$$719];
  if (v9612) {
    v3009 = this[a$$719];
  } else {
    v3009 = this[c$$570];
  }
  return v3009;
}
function v1932() {
  function v1931(d$$419) {
    function v1930() {
      return f$$196;
    }
    function v1929() {
      return c$$567;
    }
    function v1928() {
      return a$$716;
    }
    function v1927() {
      return b$$695;
    }
    this.getRoot = v1927;
    this.getLevels = v1928;
    this.getNewickLen = v1929;
    this.getValidate = v1930;
    var v3010 = d$$419.nexmlJson;
    var j$$116 = v3010.nexml;
    var i$$230 = j$$116.render;
    var v9613 = i$$230;
    if (v9613) {
      v9613 = i$$230.styles;
    }
    var v3015 = v9613;
    if (v3015) {
      var e$$363 = i$$230.styles;
      var h$$166;
      for (h$$166 in e$$363) {
        var v9614 = h$$166 != "_children";
        if (v9614) {
          v9614 = h$$166 != "Text";
        }
        var v3014 = v9614;
        if (v3014) {
          var v24199 = e$$363[h$$166];
          var v19635 = v24199["@attributes"];
          var v15351 = v19635.type;
          if (v15351) {
            var v26295 = e$$363[h$$166];
            var v24200 = v26295["@attributes"];
            var v19636 = v24200.type;
            v15351 = v19636 == "radialGradient";
          }
          var v9615 = v15351;
          if (v9615) {
            v9615 = Raphael.svg;
          }
          var v3013 = v9615;
          if (v3013) {
            var v24201 = e$$363[h$$166];
            v24201.name = h$$166;
            var v24202 = e$$363[h$$166];
            var v27780 = e$$363[h$$166];
            var v26296 = v27780["@attributes"];
            v24202.type = v26296.type;
            var v26297 = Smits.PhyloCanvas;
            var v24203 = v26297.Render;
            var v19637 = v24203.Style;
            v19637[h$$166] = e$$363[h$$166];
            var v26298 = Smits.PhyloCanvas;
            var v24204 = v26298.Render;
            var v19638 = v24204.Style;
            var v15352 = v19638.jsphylosvgGradientList;
            var v19640 = !v15352;
            if (v19640) {
              var v26299 = Smits.PhyloCanvas;
              var v24205 = v26299.Render;
              var v19639 = v24205.Style;
              v19639.jsphylosvgGradientList = [];
            }
            var v24206 = Smits.PhyloCanvas;
            var v19641 = v24206.Render;
            var v15353 = v19641.Style;
            var v9616 = v15353.jsphylosvgGradientList;
            v9616.push(h$$166);
          } else {
            var n$$103;
            var v26300 = Smits.PhyloCanvas;
            var v24207 = v26300.Render;
            var v19642 = v24207.Style;
            var v15354 = v19642[h$$166];
            var v19644 = !v15354;
            if (v19644) {
              var v26301 = Smits.PhyloCanvas;
              var v24208 = v26301.Render;
              var v19643 = v24208.Style;
              v19643[h$$166] = {};
            }
            var v15355 = e$$363[h$$166];
            var v3012 = v15355["@attributes"];
            for (n$$103 in v3012) {
              var v15356 = n$$103 != "_attributes";
              if (v15356) {
                v15356 = n$$103 != "_children";
              }
              var v9617 = v15356;
              if (v9617) {
                v9617 = n$$103 != "type";
              }
              var v3011 = v9617;
              if (v3011) {
                var v24209 = Smits.PhyloCanvas;
                var v19645 = v24209.Render;
                var v15357 = v19645.Style;
                var v9618 = v15357[h$$166];
                var v9619 = n$$103.replace("_", "-");
                var v19646 = e$$363[h$$166];
                var v15358 = v19646["@attributes"];
                v9618[v9619] = v15358[n$$103];
              }
            }
          }
        }
      }
    }
    var v9620 = i$$230;
    if (v9620) {
      v9620 = i$$230.parameters;
    }
    var v3016 = v9620;
    if (v3016) {
      var v9621 = i$$230.parameters;
      m$$55(v9621);
    }
    var v9622 = i$$230;
    if (v9622) {
      v9622 = i$$230.charts;
    }
    var v3018 = v9622;
    if (v3018) {
      i$$230 = i$$230.charts;
      var v3017 = i$$230;
      for (h$$166 in v3017) {
        var v15359 = i$$230[h$$166];
        var v9623 = v15359["@attributes"];
        v9623.chart = h$$166;
        var v9624;
        var v26302 = i$$230[h$$166];
        var v24210 = v26302["@attributes"];
        var v19647 = v24210.type;
        var v15363 = v19647 == "binary";
        if (v15363) {
          var v26303 = Smits.PhyloCanvas;
          var v24211 = v26303.Render;
          var v19648 = v24211.Parameters;
          var v15360 = v19648.binaryCharts;
          var v19649 = i$$230[h$$166];
          var v15361 = v19649["@attributes"];
          v9624 = v15360.push(v15361);
        } else {
          var v15362;
          var v27781 = i$$230[h$$166];
          var v26304 = v27781["@attributes"];
          var v24212 = v26304.type;
          var v19653 = v24212 == "integratedBinary";
          if (v19653) {
            var v27782 = Smits.PhyloCanvas;
            var v26305 = v27782.Render;
            var v24213 = v26305.Parameters;
            var v19650 = v24213.integratedBinaryCharts;
            var v24214 = i$$230[h$$166];
            var v19651 = v24214["@attributes"];
            v15362 = v19650.push(v19651);
          } else {
            var v27783 = i$$230[h$$166];
            var v26306 = v27783["@attributes"];
            var v24215 = v26306.type;
            var v19652 = v24215 == "bar";
            if (v19652) {
              var v28720 = Smits.PhyloCanvas;
              var v27784 = v28720.Render;
              var v26307 = v27784.Parameters;
              var v24216 = v26307.barCharts;
              var v26308 = i$$230[h$$166];
              var v24217 = v26308["@attributes"];
              v19652 = v24216.push(v24217);
            }
            v15362 = v19652;
          }
          v9624 = v15362;
        }
        v9624;
      }
    }
    var v15364 = d$$419.tree;
    if (v15364) {
      var v19654 = j$$116.trees;
      v15364 = v19654[0];
    }
    var v9625 = v15364;
    if (v9625) {
      var v24218 = j$$116.trees;
      var v19655 = v24218[0];
      var v15365 = v19655.tree;
      var v19656 = d$$419.tree;
      var v15366 = v19656 - 1;
      v9625 = v15365[v15366];
    }
    var v3025 = v9625;
    if (v3025) {
      var v24219 = j$$116.trees;
      var v19657 = v24219[0];
      var v15367 = v19657.tree;
      var v19658 = d$$419.tree;
      var v15368 = v19658 - 1;
      var v9626 = v15367[v15368];
      k$$82 = v9626.edge;
      var v24220 = j$$116.trees;
      var v19659 = v24220[0];
      var v15369 = v19659.tree;
      var v19660 = d$$419.tree;
      var v15370 = v19660 - 1;
      var v9627 = v15369[v15370];
      l$$88 = v9627.node;
    } else {
      h$$166 = 0;
      var v24221 = j$$116.trees;
      var v19661 = v24221.tree;
      var v15371 = v19661.edge;
      var v9628 = v15371.length;
      var v3020 = h$$166 < v9628;
      for (;v3020;) {
        var v24222 = j$$116.trees;
        var v19662 = v24222.tree;
        var v15372 = v19662.edge;
        var v9629 = v15372[h$$166];
        var v3019 = v9629["@attributes"];
        k$$82.push(v3019);
        h$$166++;
        var v24223 = j$$116.trees;
        var v19663 = v24223.tree;
        var v15373 = v19663.edge;
        var v9630 = v15373.length;
        v3020 = h$$166 < v9630;
      }
      h$$166 = 0;
      var v24224 = j$$116.trees;
      var v19664 = v24224.tree;
      var v15374 = v19664.node;
      var v9631 = v15374.length;
      var v3024 = h$$166 < v9631;
      for (;v3024;) {
        var v19665 = j$$116.trees;
        var v15375 = v19665.tree;
        var v9632 = v15375.node;
        var v3021 = v9632[h$$166];
        d$$419 = v3021["@attributes"];
        var v3023 = d$$419.label;
        if (v3023) {
          var v19666 = j$$116.trees;
          var v15376 = v19666.tree;
          var v9633 = v15376.node;
          var v3022 = v9633[h$$166];
          d$$419.chart = v3022.chart;
        }
        l$$88.push(d$$419);
        h$$166++;
        var v24225 = j$$116.trees;
        var v19667 = v24225.tree;
        var v15377 = v19667.node;
        var v9634 = v15377.length;
        v3024 = h$$166 < v9634;
      }
    }
    h$$166 = 0;
    var v9635 = l$$88.length;
    var v3027 = h$$166 < v9635;
    for (;v3027;) {
      var v15378 = l$$88[h$$166];
      var v9636 = v15378.root;
      if (v9636) {
        var v19668 = l$$88[h$$166];
        var v15379 = v19668.root;
        v9636 = v15379 == "true";
      }
      var v3026 = v9636;
      if (v3026) {
        b$$695 = l$$88[h$$166];
      }
      h$$166++;
      var v9637 = l$$88.length;
      v3027 = h$$166 < v9637;
    }
    var v3028;
    if (b$$695) {
      b$$695 = p$$55(b$$695);
      v3028 = b$$695 = g$$206(b$$695);
    } else {
      v3028 = f$$196 = "Error. Currently, only rooted NeXML trees are supported.";
    }
    v3028;
    return;
  }
  function m$$55(a$$718, c$$569) {
    var b$$698;
    for (b$$698 in a$$718) {
      var v9638 = b$$698 != "_children";
      if (v9638) {
        v9638 = b$$698 != "Text";
      }
      var v3029 = v9638;
      if (v3029) {
        var v9639;
        var v19669 = b$$698 == "rectangular";
        var v24226 = !v19669;
        if (v24226) {
          v19669 = b$$698 == "circular";
        }
        var v15381 = v19669;
        if (v15381) {
          var v15380 = a$$718[b$$698];
          v9639 = m$$55(v15380, b$$698);
        } else {
          var v27785 = Smits.PhyloCanvas;
          var v26309 = v27785.Render;
          var v24227 = v26309.Parameters;
          var v19670 = v24227[b$$698];
          var v24229 = !v19670;
          if (v24229) {
            var v27786 = Smits.PhyloCanvas;
            var v26310 = v27786.Render;
            var v24228 = v26310.Parameters;
            v24228[b$$698] = {};
          }
          var v26311 = Smits.PhyloCanvas;
          var v24230 = v26311.Render;
          var v19671 = v24230.Parameters;
          var v19672 = a$$718[b$$698];
          v9639 = v19671.set(b$$698, v19672, c$$569);
        }
        v9639;
      }
    }
    return;
  }
  function g$$206(d$$418) {
    var v9640 = d$$418.children;
    if (v9640) {
      var v15382 = d$$418.children;
      v9640 = v15382.length;
    }
    var v3036 = v9640;
    if (v3036) {
      var b$$697 = 0;
      var v15383 = d$$418.children;
      var v9641 = v15383.length;
      var v3035 = b$$697 < v9641;
      for (;v3035;) {
        var v3030 = d$$418.children;
        var i$$229 = v3030[b$$697];
        var v19673 = i$$229.len;
        var v19674 = d$$418.newickLen;
        var v15384 = v19673 + v19674;
        var v9642 = v15384 * 1E4;
        var v3031 = Math.round(v9642);
        i$$229.newickLen = v3031 / 1E4;
        var v9643 = i$$229.level;
        var v3032 = v9643 > a$$716;
        if (v3032) {
          a$$716 = i$$229.level;
        }
        var v9644 = i$$229.newickLen;
        var v3033 = v9644 > c$$567;
        if (v3033) {
          c$$567 = i$$229.newickLen;
        }
        var v15385 = i$$229.children;
        var v9645 = v15385.length;
        var v3034 = v9645 > 0;
        if (v3034) {
          g$$206(i$$229, d$$418);
        }
        b$$697++;
        var v15386 = d$$418.children;
        var v9646 = v15386.length;
        v3035 = b$$697 < v9646;
      }
    }
    return d$$418;
  }
  function p$$55(a$$717, c$$568, i$$228) {
    var v9647 = Smits.PhyloCanvas;
    var v3037 = v9647.Node;
    var e$$362 = new v3037;
    if (i$$228) {
      var v3038 = i$$228.level;
      e$$362.level = v3038 + 1;
    }
    i$$228 = 0;
    var v9648 = k$$82.length;
    var v3042 = i$$228 < v9648;
    for (;v3042;) {
      var v15387 = k$$82[i$$228];
      var v9649 = v15387.source;
      var v9650 = a$$717.id;
      var v3041 = v9649 == v9650;
      if (v3041) {
        var b$$696 = 0;
        var v9651 = l$$88.length;
        var v3040 = b$$696 < v9651;
        for (;v3040;) {
          var v15388 = k$$82[i$$228];
          var v9652 = v15388.target;
          var v15389 = l$$88[b$$696];
          var v9653 = v15389.id;
          var v3039 = v9652 == v9653;
          if (v3039) {
            var v9654 = e$$362.children;
            var v15390 = l$$88[b$$696];
            var v19675 = k$$82[i$$228];
            var v15391 = v19675.length;
            var v9655 = p$$55(v15390, v15391, e$$362);
            v9654.push(v9655);
          }
          b$$696++;
          var v9656 = l$$88.length;
          v3040 = b$$696 < v9656;
        }
      }
      i$$228++;
      var v9657 = k$$82.length;
      v3042 = i$$228 < v9657;
    }
    var v9658 = c$$568;
    if (v9658) {
      var v19676 = Smits.Common;
      var v30942 = v19676.roundFloat(c$$568, 4);
      e$$362.len = v30942;
      var v19677 = e$$362.len;
      v9658 = v19677 == 0;
    }
    var v3043 = v9658;
    if (v3043) {
      e$$362.len = 1E-4;
    }
    var v3047 = a$$717.label;
    if (v3047) {
      e$$362.type = "label";
      e$$362.name = a$$717.label;
      var v3044 = a$$717.accession;
      if (v3044) {
        e$$362.accession = a$$717.accession;
      }
      var v3045 = a$$717.style;
      if (v3045) {
        e$$362.style = a$$717.style;
      }
      var v3046 = a$$717.bgStyle;
      if (v3046) {
        e$$362.bgStyle = a$$717.bgStyle;
      }
    }
    var v3048 = a$$717.chart;
    if (v3048) {
      e$$362.chart = a$$717.chart;
    }
    var v9659 = e$$362;
    if (v9659) {
      var v15392 = e$$362.level;
      v9659 = v15392 > 1;
    }
    var v3049 = v9659;
    if (v3049) {
      var v9660 = e$$362.len;
      var v15393 = !v9660;
      if (v15393) {
        f$$196 = "Error. Please include Branch Lengths - we only draw rooted phylogenetic trees.";
      }
    }
    return e$$362;
  }
  var a$$716 = 0;
  var c$$567 = 0;
  var b$$695;
  var f$$196;
  var k$$82 = [];
  var l$$88 = [];
  return v1931;
}
function v1926() {
  function v1925(m$$54, d$$417) {
    function v1924() {
      return f$$195;
    }
    function v1923() {
      return c$$565;
    }
    function v1922() {
      return a$$714;
    }
    function v1921() {
      return b$$693;
    }
    this.getRoot = v1921;
    this.getLevels = v1922;
    this.getNewickLen = v1923;
    this.getValidate = v1924;
    var v3050;
    var v19678 = d$$417.tree;
    if (v19678) {
      var v24231 = m$$54.trees;
      v19678 = v24231[0];
    }
    var v15394 = v19678;
    if (v15394) {
      var v26312 = m$$54.trees;
      var v24232 = v26312[0];
      var v19679 = v24232.tree;
      var v24233 = d$$417.tree;
      var v19680 = v24233 - 1;
      v15394 = v19679[v19680];
    }
    var v9661 = v15394;
    if (v9661) {
      var v26313 = m$$54.trees;
      var v24234 = v26313[0];
      var v19681 = v24234.tree;
      var v24235 = d$$417.tree;
      var v19682 = v24235 - 1;
      var v15395 = v19681[v19682];
      k$$81 = v15395.edge;
      var v26314 = m$$54.trees;
      var v24236 = v26314[0];
      var v19683 = v24236.tree;
      var v24237 = d$$417.tree;
      var v19684 = v24237 - 1;
      var v15396 = v19683[v19684];
      v3050 = l$$87 = v15396.node;
    } else {
      var v26315 = m$$54.trees;
      var v24238 = v26315[0];
      var v19685 = v24238.tree;
      var v15397 = v19685[0];
      k$$81 = v15397.edge;
      var v26316 = m$$54.trees;
      var v24239 = v26316[0];
      var v19686 = v24239.tree;
      var v15398 = v19686[0];
      v3050 = l$$87 = v15398.node;
    }
    v3050;
    var j$$115 = 0;
    var v9662 = l$$87.length;
    var v3055 = j$$115 < v9662;
    for (;v3055;) {
      var i$$227 = 0;
      var v15399 = l$$87[j$$115];
      var v9663 = v15399.root;
      if (v9663) {
        var v19687 = l$$87[j$$115];
        var v15400 = v19687.root;
        v9663 = v15400 == "true";
      }
      var v3051 = v9663;
      if (v3051) {
        b$$693 = l$$87[j$$115];
        break;
      }
      var e$$361 = 0;
      var v9664 = k$$81.length;
      var v3053 = e$$361 < v9664;
      for (;v3053;) {
        var v15401 = k$$81[e$$361];
        var v9665 = v15401.target;
        var v15402 = l$$87[j$$115];
        var v9666 = v15402.id;
        var v3052 = v9665 == v9666;
        if (v3052) {
          i$$227++;
        }
        e$$361++;
        var v9667 = k$$81.length;
        v3053 = e$$361 < v9667;
      }
      var v3054 = i$$227 == 0;
      if (v3054) {
        b$$693 = l$$87[j$$115];
        break;
      }
      j$$115++;
      var v9668 = l$$87.length;
      v3055 = j$$115 < v9668;
    }
    var v3056;
    if (b$$693) {
      b$$693 = p$$54(b$$693);
      v3056 = b$$693 = g$$205(b$$693);
    } else {
      v3056 = f$$195 = "Error. Currently, only rooted NeXML trees are supported.";
    }
    v3056;
    return;
  }
  function g$$205(b$$694) {
    var v9669 = b$$694.children;
    if (v9669) {
      var v15403 = b$$694.children;
      v9669 = v15403.length;
    }
    var v3063 = v9669;
    if (v3063) {
      var d$$416 = 0;
      var v15404 = b$$694.children;
      var v9670 = v15404.length;
      var v3062 = d$$416 < v9670;
      for (;v3062;) {
        var v3057 = b$$694.children;
        var j$$114 = v3057[d$$416];
        var v19688 = j$$114.len;
        var v19689 = b$$694.newickLen;
        var v15405 = v19688 + v19689;
        var v9671 = v15405 * 1E4;
        var v3058 = Math.round(v9671);
        j$$114.newickLen = v3058 / 1E4;
        var v9672 = j$$114.level;
        var v3059 = v9672 > a$$714;
        if (v3059) {
          a$$714 = j$$114.level;
        }
        var v9673 = j$$114.newickLen;
        var v3060 = v9673 > c$$565;
        if (v3060) {
          c$$565 = j$$114.newickLen;
        }
        var v15406 = j$$114.children;
        var v9674 = v15406.length;
        var v3061 = v9674 > 0;
        if (v3061) {
          g$$205(j$$114, b$$694);
        }
        d$$416++;
        var v15407 = b$$694.children;
        var v9675 = v15407.length;
        v3062 = d$$416 < v9675;
      }
    }
    return b$$694;
  }
  function p$$54(a$$715, d$$415, c$$566) {
    var v9676 = Smits.PhyloCanvas;
    var v3064 = v9676.Node;
    var i$$226 = new v3064;
    if (c$$566) {
      var v3065 = c$$566.level;
      i$$226.level = v3065 + 1;
    }
    c$$566 = 0;
    var v9677 = k$$81.length;
    var v3069 = c$$566 < v9677;
    for (;v3069;) {
      var v15408 = k$$81[c$$566];
      var v9678 = v15408.source;
      var v9679 = a$$715.id;
      var v3068 = v9678 == v9679;
      if (v3068) {
        var e$$360 = 0;
        var v9680 = l$$87.length;
        var v3067 = e$$360 < v9680;
        for (;v3067;) {
          var v15409 = k$$81[c$$566];
          var v9681 = v15409.target;
          var v15410 = l$$87[e$$360];
          var v9682 = v15410.id;
          var v3066 = v9681 == v9682;
          if (v3066) {
            var v9683 = i$$226.children;
            var v15411 = l$$87[e$$360];
            var v19690 = k$$81[c$$566];
            var v15412 = v19690.length;
            var v9684 = p$$54(v15411, v15412, i$$226);
            v9683.push(v9684);
          }
          e$$360++;
          var v9685 = l$$87.length;
          v3067 = e$$360 < v9685;
        }
      }
      c$$566++;
      var v9686 = k$$81.length;
      v3069 = c$$566 < v9686;
    }
    var v15413 = i$$226;
    if (v15413) {
      var v19691 = i$$226.level;
      v15413 = v19691 > 0;
    }
    var v9687 = v15413;
    if (v9687) {
      var v15414 = i$$226.len;
      v9687 = !v15414;
    }
    var v3070 = v9687;
    if (v3070) {
      i$$226.len = 1;
    }
    var v9688 = d$$415;
    if (v9688) {
      var v19692 = Smits.Common;
      var v30943 = v19692.roundFloat(d$$415, 4);
      i$$226.len = v30943;
      var v19693 = i$$226.len;
      v9688 = v19693 == 0;
    }
    var v3071 = v9688;
    if (v3071) {
      i$$226.len = 1E-4;
    }
    var v9689 = a$$715.label;
    if (v9689) {
      i$$226.type = "label";
      i$$226.name = a$$715.label;
      v9689 = a$$715.style;
    }
    var v3072 = v9689;
    if (v3072) {
      i$$226.style = a$$715.style;
    }
    return i$$226;
  }
  var a$$714 = 0;
  var c$$565 = 0;
  var b$$693;
  var f$$195;
  var k$$81;
  var l$$87;
  return v1925;
}
function v1920() {
  function v1919(g$$204) {
    function v1918() {
      return f$$193;
    }
    function v1917() {
      return c$$562;
    }
    function v1916() {
      return a$$711;
    }
    function v1915() {
      return b$$691;
    }
    this.getRoot = v1915;
    this.getLevels = v1916;
    this.getNewickLen = v1917;
    this.getValidate = v1918;
    var v15415 = g$$204.phylogeny;
    if (v15415) {
      var v19694 = g$$204.phylogeny;
      v15415 = v19694[0];
    }
    var v9690 = v15415;
    if (v9690) {
      var v19695 = g$$204.phylogeny;
      var v15416 = v19695[0];
      v9690 = v15416.clade;
    }
    var v3073 = v9690;
    if (v3073) {
      var v24240 = g$$204.phylogeny;
      var v19696 = v24240[0];
      var v15417 = v19696.clade;
      var v9691 = v15417[0];
      b$$691 = k$$80(v9691);
    }
    var v19697 = g$$204.phylogeny;
    if (v19697) {
      var v24241 = g$$204.phylogeny;
      v19697 = v24241[0];
    }
    var v15418 = v19697;
    if (v15418) {
      var v24242 = g$$204.phylogeny;
      var v19698 = v24242[0];
      v15418 = v19698.render;
    }
    var v9692 = v15418;
    if (v9692) {
      var v24243 = g$$204.phylogeny;
      var v19699 = v24243[0];
      var v15419 = v19699.render;
      v9692 = v15419[0];
    }
    var v3088 = v9692;
    if (v3088) {
      var v24244 = g$$204.phylogeny;
      var v19700 = v24244[0];
      var v15420 = v19700.render;
      var v9693 = g$$204 = v15420[0];
      if (v9693) {
        v9693 = g$$204.styles;
      }
      var v3079 = v9693;
      if (v3079) {
        var v3074 = g$$204.styles;
        var m$$53 = v3074[0];
        var d$$414;
        for (d$$414 in m$$53) {
          var v9694 = d$$414 != "_children";
          if (v9694) {
            v9694 = d$$414 != "Text";
          }
          var v3078 = v9694;
          if (v3078) {
            var v24245 = m$$53[d$$414];
            var v19701 = v24245[0];
            var v15421 = v19701.type;
            if (v15421) {
              var v26317 = m$$53[d$$414];
              var v24246 = v26317[0];
              var v19702 = v24246.type;
              v15421 = v19702 == "radialGradient";
            }
            var v9695 = v15421;
            if (v9695) {
              v9695 = Raphael.svg;
            }
            var v3077 = v9695;
            if (v3077) {
              var v24247 = m$$53[d$$414];
              var v19703 = v24247[0];
              v19703.name = d$$414;
              var v26318 = Smits.PhyloCanvas;
              var v24248 = v26318.Render;
              var v19704 = v24248.Style;
              var v24249 = m$$53[d$$414];
              v19704[d$$414] = v24249[0];
              var v26319 = Smits.PhyloCanvas;
              var v24250 = v26319.Render;
              var v19705 = v24250.Style;
              var v15422 = v19705.jsphylosvgGradientList;
              var v19707 = !v15422;
              if (v19707) {
                var v26320 = Smits.PhyloCanvas;
                var v24251 = v26320.Render;
                var v19706 = v24251.Style;
                v19706.jsphylosvgGradientList = [];
              }
              var v24252 = Smits.PhyloCanvas;
              var v19708 = v24252.Render;
              var v15423 = v19708.Style;
              var v9696 = v15423.jsphylosvgGradientList;
              v9696.push(d$$414);
            } else {
              var j$$113;
              var v26321 = Smits.PhyloCanvas;
              var v24253 = v26321.Render;
              var v19709 = v24253.Style;
              var v15424 = v19709[d$$414];
              var v19711 = !v15424;
              if (v19711) {
                var v26322 = Smits.PhyloCanvas;
                var v24254 = v26322.Render;
                var v19710 = v24254.Style;
                v19710[d$$414] = {};
              }
              var v15425 = m$$53[d$$414];
              var v3076 = v15425[0];
              for (j$$113 in v3076) {
                var v15426 = j$$113 != "_attributes";
                if (v15426) {
                  v15426 = j$$113 != "_children";
                }
                var v9697 = v15426;
                if (v9697) {
                  v9697 = j$$113 != "type";
                }
                var v3075 = v9697;
                if (v3075) {
                  var v24255 = Smits.PhyloCanvas;
                  var v19712 = v24255.Render;
                  var v15427 = v19712.Style;
                  var v9698 = v15427[d$$414];
                  var v9699 = j$$113.replace("_", "-");
                  var v19713 = m$$53[d$$414];
                  var v15428 = v19713[0];
                  v9698[v9699] = v15428[j$$113];
                }
              }
            }
          }
        }
      }
      var v9700 = g$$204;
      if (v9700) {
        v9700 = g$$204.parameters;
      }
      var v3080 = v9700;
      if (v3080) {
        var v15429 = g$$204.parameters;
        var v9701 = v15429[0];
        p$$53(v9701);
      }
      var v9702 = g$$204;
      if (v9702) {
        v9702 = g$$204.charts;
      }
      var v3087 = v9702;
      if (v3087) {
        var v15430 = g$$204.charts;
        g$$204 = v15430[0];
        var v3086 = g$$204;
        for (d$$414 in v3086) {
          var v9703 = d$$414 != "_children";
          if (v9703) {
            v9703 = d$$414 != "Text";
          }
          var v3085 = v9703;
          if (v3085) {
            var v3084 = g$$204[d$$414];
            for (j$$113 in v3084) {
              var v19714 = g$$204[d$$414];
              var v15431 = v19714[j$$113];
              var v9704 = v15431.type;
              var v3083 = v9704 == "binary";
              if (v3083) {
                var v15432 = g$$204[d$$414];
                var v9705 = v15432[j$$113];
                v9705.chart = d$$414;
                var v24256 = Smits.PhyloCanvas;
                var v19715 = v24256.Render;
                var v15433 = v19715.Parameters;
                var v9706 = v15433.binaryCharts;
                var v15434 = g$$204[d$$414];
                var v9707 = v15434[j$$113];
                v9706.push(v9707);
              } else {
                var v19716 = g$$204[d$$414];
                var v15435 = v19716[j$$113];
                var v9708 = v15435.type;
                var v3082 = v9708 == "integratedBinary";
                if (v3082) {
                  var v15436 = g$$204[d$$414];
                  var v9709 = v15436[j$$113];
                  v9709.chart = d$$414;
                  var v24257 = Smits.PhyloCanvas;
                  var v19717 = v24257.Render;
                  var v15437 = v19717.Parameters;
                  var v9710 = v15437.integratedBinaryCharts;
                  var v15438 = g$$204[d$$414];
                  var v9711 = v15438[j$$113];
                  v9710.push(v9711);
                } else {
                  var v19718 = g$$204[d$$414];
                  var v15439 = v19718[j$$113];
                  var v9712 = v15439.type;
                  var v3081 = v9712 == "bar";
                  if (v3081) {
                    var v15440 = g$$204[d$$414];
                    var v9713 = v15440[j$$113];
                    v9713.chart = d$$414;
                    var v24258 = Smits.PhyloCanvas;
                    var v19719 = v24258.Render;
                    var v15441 = v19719.Parameters;
                    var v9714 = v15441.barCharts;
                    var v15442 = g$$204[d$$414];
                    var v9715 = v15442[j$$113];
                    v9714.push(v9715);
                  }
                }
              }
            }
          }
        }
      }
    }
    b$$691 = l$$86(b$$691);
    return;
  }
  function p$$53(a$$713, c$$564) {
    var d$$413;
    for (d$$413 in a$$713) {
      var v9716 = d$$413 != "_children";
      if (v9716) {
        v9716 = d$$413 != "Text";
      }
      var v3089 = v9716;
      if (v3089) {
        var v9717;
        var v19720 = d$$413 == "rectangular";
        var v24259 = !v19720;
        if (v24259) {
          v19720 = d$$413 == "circular";
        }
        var v15444 = v19720;
        if (v15444) {
          var v19721 = a$$713[d$$413];
          var v15443 = v19721[0];
          v9717 = p$$53(v15443, d$$413);
        } else {
          var v27787 = Smits.PhyloCanvas;
          var v26323 = v27787.Render;
          var v24260 = v26323.Parameters;
          var v19722 = v24260[d$$413];
          var v24262 = !v19722;
          if (v24262) {
            var v27788 = Smits.PhyloCanvas;
            var v26324 = v27788.Render;
            var v24261 = v26324.Parameters;
            v24261[d$$413] = {};
          }
          var v26325 = Smits.PhyloCanvas;
          var v24263 = v26325.Render;
          var v19723 = v24263.Parameters;
          var v26326 = a$$713[d$$413];
          var v24264 = v26326[0];
          var v19724 = v24264.Text;
          v9717 = v19723.set(d$$413, v19724, c$$564);
        }
        v9717;
      }
    }
    return;
  }
  function l$$86(b$$692) {
    var v9718 = b$$692.children;
    if (v9718) {
      var v15445 = b$$692.children;
      v9718 = v15445.length;
    }
    var v3096 = v9718;
    if (v3096) {
      var f$$194 = 0;
      var v15446 = b$$692.children;
      var v9719 = v15446.length;
      var v3095 = f$$194 < v9719;
      for (;v3095;) {
        var v3090 = b$$692.children;
        var d$$412 = v3090[f$$194];
        var v19725 = d$$412.len;
        var v19726 = b$$692.newickLen;
        var v15447 = v19725 + v19726;
        var v9720 = v15447 * 1E4;
        var v3091 = Math.round(v9720);
        d$$412.newickLen = v3091 / 1E4;
        var v9721 = d$$412.level;
        var v3092 = v9721 > a$$711;
        if (v3092) {
          a$$711 = d$$412.level;
        }
        var v9722 = d$$412.newickLen;
        var v3093 = v9722 > c$$562;
        if (v3093) {
          c$$562 = d$$412.newickLen;
        }
        var v15448 = d$$412.children;
        var v9723 = v15448.length;
        var v3094 = v9723 > 0;
        if (v3094) {
          l$$86(d$$412, b$$692);
        }
        f$$194++;
        var v15449 = b$$692.children;
        var v9724 = v15449.length;
        v3095 = f$$194 < v9724;
      }
    }
    return b$$692;
  }
  function k$$80(a$$712, c$$563) {
    var v9725 = Smits.PhyloCanvas;
    var v3097 = v9725.Node;
    var d$$411 = new v3097;
    if (c$$563) {
      var v3098 = c$$563.level;
      d$$411.level = v3098 + 1;
    }
    var v9726 = a$$712.clade;
    if (v9726) {
      var v15450 = a$$712.clade;
      v9726 = v15450.length;
    }
    var v3102 = v9726;
    if (v3102) {
      var j$$112 = 0;
      var v15451 = a$$712.clade;
      var v9727 = v15451.length;
      var v3101 = j$$112 < v9727;
      for (;v3101;) {
        var v3099 = d$$411.children;
        var v15452 = a$$712.clade;
        var v9728 = v15452[j$$112];
        var v3100 = k$$80(v9728, d$$411);
        v3099.push(v3100);
        j$$112++;
        var v15453 = a$$712.clade;
        var v9729 = v15453.length;
        v3101 = j$$112 < v9729;
      }
    }
    var v3108 = a$$712.branch_length;
    if (v3108) {
      var v15454 = a$$712.branch_length;
      var v9730 = typeof v15454;
      var v3104 = v9730 === "object";
      if (v3104) {
        var v9731 = a$$712.branch_length;
        var v3103 = v9731[0];
        a$$712.branch_length = v3103.Text;
      }
      var v3105 = Smits.Common;
      var v3106 = a$$712.branch_length;
      var v30944 = v3105.roundFloat(v3106, 4);
      d$$411.len = v30944;
      var v9732 = d$$411.len;
      var v3107 = v9732 == 0;
      if (v3107) {
        d$$411.len = 1E-4;
      }
    }
    var v3116 = a$$712.name;
    if (v3116) {
      d$$411.type = "label";
      var v9733 = a$$712.name;
      var v3109 = v9733[0];
      d$$411.name = v3109.Text;
      var v15455 = a$$712.name;
      var v9734 = v15455[0];
      if (v9734) {
        var v19727 = a$$712.name;
        var v15456 = v19727[0];
        v9734 = v15456.style;
      }
      var v3111 = v9734;
      if (v3111) {
        var v9735 = a$$712.name;
        var v3110 = v9735[0];
        d$$411.style = v3110.style;
      }
      var v15457 = a$$712.name;
      var v9736 = v15457[0];
      if (v9736) {
        var v19728 = a$$712.name;
        var v15458 = v19728[0];
        v9736 = v15458.bgStyle;
      }
      var v3113 = v9736;
      if (v3113) {
        var v9737 = a$$712.name;
        var v3112 = v9737[0];
        d$$411.bgStyle = v3112.bgStyle;
      }
    } else {
      var v3115 = a$$712.confidence;
      if (v3115) {
        var v9738 = a$$712.confidence;
        var v3114 = v9738[0];
        d$$411.name = v3114.Text;
      }
    }
    var v24265 = a$$712.sequence;
    if (v24265) {
      var v26327 = a$$712.sequence;
      v24265 = v26327[0];
    }
    var v19729 = v24265;
    if (v19729) {
      var v26328 = a$$712.sequence;
      var v24266 = v26328[0];
      v19729 = v24266.name;
    }
    var v15459 = v19729;
    if (v15459) {
      var v26329 = a$$712.sequence;
      var v24267 = v26329[0];
      var v19730 = v24267.name;
      v15459 = v19730[0];
    }
    var v9739 = v15459;
    if (v9739) {
      var v26330 = a$$712.sequence;
      var v24268 = v26330[0];
      var v19731 = v24268.name;
      var v15460 = v19731[0];
      v9739 = v15460.Text;
    }
    var v3118 = v9739;
    if (v3118) {
      var v19732 = a$$712.sequence;
      var v15461 = v19732[0];
      var v9740 = v15461.name;
      var v3117 = v9740[0];
      d$$411.sequenceName = v3117.Text;
    }
    var v9741 = a$$712.taxonomy;
    if (v9741) {
      var v15462 = a$$712.taxonomy;
      v9741 = v15462[0];
    }
    var v3123 = v9741;
    if (v3123) {
      var v24269 = a$$712.taxonomy;
      var v19733 = v24269[0];
      var v15463 = v19733.scientific_name;
      if (v15463) {
        var v26331 = a$$712.taxonomy;
        var v24270 = v26331[0];
        var v19734 = v24270.scientific_name;
        v15463 = v19734[0];
      }
      var v9742 = v15463;
      if (v9742) {
        var v26332 = a$$712.taxonomy;
        var v24271 = v26332[0];
        var v19735 = v24271.scientific_name;
        var v15464 = v19735[0];
        v9742 = v15464.Text;
      }
      var v3120 = v9742;
      if (v3120) {
        var v19736 = a$$712.taxonomy;
        var v15465 = v19736[0];
        var v9743 = v15465.scientific_name;
        var v3119 = v9743[0];
        d$$411.taxonomyScientificName = v3119.Text;
      }
      var v24272 = a$$712.taxonomy;
      var v19737 = v24272[0];
      var v15466 = v19737.common_name;
      if (v15466) {
        var v26333 = a$$712.taxonomy;
        var v24273 = v26333[0];
        var v19738 = v24273.common_name;
        v15466 = v19738[0];
      }
      var v9744 = v15466;
      if (v9744) {
        var v26334 = a$$712.taxonomy;
        var v24274 = v26334[0];
        var v19739 = v24274.common_name;
        var v15467 = v19739[0];
        v9744 = v15467.Text;
      }
      var v3122 = v9744;
      if (v3122) {
        var v19740 = a$$712.taxonomy;
        var v15468 = v19740[0];
        var v9745 = v15468.common_name;
        var v3121 = v9745[0];
        d$$411.taxonomyCommonName = v3121.Text;
      }
    }
    var v24275 = a$$712.sequence;
    if (v24275) {
      var v26335 = a$$712.sequence;
      v24275 = v26335[0];
    }
    var v19741 = v24275;
    if (v19741) {
      var v26336 = a$$712.sequence;
      var v24276 = v26336[0];
      v19741 = v24276.accession;
    }
    var v15469 = v19741;
    if (v15469) {
      var v26337 = a$$712.sequence;
      var v24277 = v26337[0];
      var v19742 = v24277.accession;
      v15469 = v19742[0];
    }
    var v9746 = v15469;
    if (v9746) {
      var v26338 = a$$712.sequence;
      var v24278 = v26338[0];
      var v19743 = v24278.accession;
      var v15470 = v19743[0];
      v9746 = v15470.Text;
    }
    var v3125 = v9746;
    if (v3125) {
      var v19744 = a$$712.sequence;
      var v15471 = v19744[0];
      var v9747 = v15471.accession;
      var v3124 = v9747[0];
      d$$411.sequenceAccession = v3124.Text;
    }
    var v3128 = a$$712.point;
    if (v3128) {
      var v24279 = a$$712.point;
      var v19745 = v24279[0];
      var v15472 = v19745.lat;
      var v9748 = v15472[0];
      var v3126 = v9748.Text;
      var v24280 = a$$712.point;
      var v19746 = v24280[0];
      var v15473 = v19746["long"];
      var v9749 = v15473[0];
      var v3127 = v9749.Text;
      d$$411.LatLong = [v3126, v3127];
    }
    var v9750 = d$$411.name;
    var v3134 = !v9750;
    if (v3134) {
      var v3132 = d$$411.sequenceName;
      if (v3132) {
        d$$411.name = d$$411.sequenceName;
      } else {
        var v3131 = d$$411.taxonomyScientificName;
        if (v3131) {
          d$$411.name = d$$411.taxonomyScientificName;
        } else {
          var v3130 = d$$411.taxonomyCommonName;
          if (v3130) {
            d$$411.name = d$$411.taxonomyCommonName;
          } else {
            var v3129 = d$$411.sequenceAccession;
            if (v3129) {
              d$$411.name = d$$411.sequenceAccession;
            }
          }
        }
      }
      var v3133 = d$$411.name;
      if (v3133) {
        d$$411.type = "label";
      }
    }
    var v3143 = a$$712.annotation;
    if (v3143) {
      var v24281 = a$$712.annotation;
      var v19747 = v24281[0];
      if (v19747) {
        var v26339 = a$$712.annotation;
        var v24282 = v26339[0];
        v19747 = v24282.desc;
      }
      var v15474 = v19747;
      if (v15474) {
        var v26340 = a$$712.annotation;
        var v24283 = v26340[0];
        var v19748 = v24283.desc;
        v15474 = v19748[0];
      }
      var v9751 = v15474;
      if (v9751) {
        var v26341 = a$$712.annotation;
        var v24284 = v26341[0];
        var v19749 = v24284.desc;
        var v15475 = v19749[0];
        v9751 = v15475.Text;
      }
      var v3136 = v9751;
      if (v3136) {
        var v19750 = a$$712.annotation;
        var v15476 = v19750[0];
        var v9752 = v15476.desc;
        var v3135 = v9752[0];
        d$$411.description = v3135.Text;
      }
      var v24285 = a$$712.annotation;
      var v19751 = v24285[0];
      if (v19751) {
        var v26342 = a$$712.annotation;
        var v24286 = v26342[0];
        v19751 = v24286.uri;
      }
      var v15477 = v19751;
      if (v15477) {
        var v26343 = a$$712.annotation;
        var v24287 = v26343[0];
        var v19752 = v24287.uri;
        v15477 = v19752[0];
      }
      var v9753 = v15477;
      if (v9753) {
        var v26344 = a$$712.annotation;
        var v24288 = v26344[0];
        var v19753 = v24288.uri;
        var v15478 = v19753[0];
        v9753 = v15478.Text;
      }
      var v3138 = v9753;
      if (v3138) {
        var v19754 = a$$712.annotation;
        var v15479 = v19754[0];
        var v9754 = v15479.uri;
        var v3137 = v9754[0];
        d$$411.uri = v3137.Text;
      }
      var v15480 = a$$712.annotation;
      var v9755 = v15480[0];
      if (v9755) {
        var v19755 = a$$712.annotation;
        var v15481 = v19755[0];
        v9755 = v15481.img;
      }
      var v3142 = v9755;
      if (v3142) {
        var v15482 = a$$712.annotation;
        var v9756 = v15482[0];
        var v3141 = v9756.img;
        for (j$$112 in v3141) {
          var v9757 = Smits.Common;
          var v3140 = v9757.isInteger(j$$112);
          if (v3140) {
            var v3139 = d$$411.img;
            var v24289 = a$$712.annotation;
            var v19756 = v24289[0];
            var v15483 = v19756.img;
            var v9758 = v15483[j$$112];
            v3139[j$$112] = v9758.Text;
          }
        }
      }
    }
    var v9759 = a$$712.chart;
    if (v9759) {
      var v15484 = a$$712.chart;
      v9759 = v15484[0];
    }
    var v3147 = v9759;
    if (v3147) {
      var v9760 = a$$712.chart;
      var v3146 = v9760[0];
      for (j$$112 in v3146) {
        var v9761 = j$$112 != "Text";
        if (v9761) {
          v9761 = j$$112 != "_children";
        }
        var v3145 = v9761;
        if (v3145) {
          var v3144 = d$$411.chart;
          var v24290 = a$$712.chart;
          var v19757 = v24290[0];
          var v15485 = v19757[j$$112];
          var v9762 = v15485[0];
          v3144[j$$112] = v9762.Text;
        }
      }
    }
    var v9763 = d$$411;
    if (v9763) {
      var v15486 = d$$411.level;
      v9763 = v15486 > 1;
    }
    var v3148 = v9763;
    if (v3148) {
      var v9764 = d$$411.len;
      var v15487 = !v9764;
      if (v15487) {
        f$$193 = "Error. Please include Branch Lengths - we only draw rooted phylogenetic trees.";
      }
    }
    return d$$411;
  }
  var a$$711 = 0;
  var c$$562 = 0;
  var b$$691;
  var f$$193;
  return v1919;
}
function v1914() {
  function v1913(c$$561) {
    function v1912() {
      return;
    }
    function v1911() {
      return k$$79;
    }
    function v1910() {
      return f$$192;
    }
    function v1909() {
      return l$$85;
    }
    this.getRoot = v1909;
    this.getLevels = v1910;
    this.getNewickLen = v1911;
    this.getValidate = v1912;
    k$$79 = f$$192 = 0;
    a$$706 = c$$561;
    b$$689 = 0;
    d$$409();
    l$$85 = g$$202();
    l$$85 = j$$110(l$$85);
    return;
  }
  function j$$110(d$$410) {
    var v9765 = d$$410.children;
    if (v9765) {
      var v15488 = d$$410.children;
      v9765 = v15488.length;
    }
    var v3157 = v9765;
    if (v3157) {
      var c$$560 = 0;
      var v15489 = d$$410.children;
      var v9766 = v15489.length;
      var v3156 = c$$560 < v9766;
      for (;v3156;) {
        var v3149 = d$$410.children;
        var a$$710 = v3149[c$$560];
        var v9767 = a$$710.len;
        var v3150 = v9767 === 0;
        if (v3150) {
          a$$710.len = 1;
        }
        var v3151 = Smits.Common;
        var v9768 = a$$710.len;
        var v9769 = d$$410.newickLen;
        var v3152 = v9768 + v9769;
        var v30945 = v3151.roundFloat(v3152, 4);
        a$$710.newickLen = v30945;
        var v9770 = a$$710.level;
        var v3153 = v9770 > f$$192;
        if (v3153) {
          f$$192 = a$$710.level;
        }
        var v9771 = a$$710.newickLen;
        var v3154 = v9771 > k$$79;
        if (v3154) {
          k$$79 = a$$710.newickLen;
        }
        var v15490 = a$$710.children;
        var v9772 = v15490.length;
        var v3155 = v9772 > 0;
        if (v3155) {
          j$$110(a$$710, d$$410);
        }
        c$$560++;
        var v15491 = d$$410.children;
        var v9773 = v15491.length;
        v3156 = c$$560 < v9773;
      }
    }
    return d$$410;
  }
  function d$$409() {
    c$$559 = a$$706.charAt(b$$689);
    b$$689 = b$$689 + 1;
    return c$$559;
  }
  function m$$52() {
    var a$$709 = "";
    var v19758 = c$$559 !== ":";
    if (v19758) {
      v19758 = c$$559 !== ")";
    }
    var v15492 = v19758;
    if (v15492) {
      v15492 = c$$559 !== ",";
    }
    var v9774 = v15492;
    if (v9774) {
      v9774 = c$$559 !== ";";
    }
    var v3158 = v9774;
    for (;v3158;) {
      a$$709 = a$$709 + c$$559;
      d$$409();
      var v19759 = c$$559 !== ":";
      if (v19759) {
        v19759 = c$$559 !== ")";
      }
      var v15493 = v19759;
      if (v15493) {
        v15493 = c$$559 !== ",";
      }
      var v9775 = v15493;
      if (v9775) {
        v9775 = c$$559 !== ";";
      }
      v3158 = v9775;
    }
    return a$$709;
  }
  function g$$202(a$$708) {
    var v9776 = Smits.PhyloCanvas;
    var v3159 = v9776.Node;
    var e$$359 = new v3159;
    if (a$$708) {
      var v3160 = a$$708.level;
      e$$359.level = v3160 + 1;
    }
    var v3161 = c$$559 !== ")";
    for (;v3161;) {
      d$$409();
      var v9777;
      var v15498 = c$$559 === "(";
      if (v15498) {
        var v15494 = e$$359.children;
        var v15495 = g$$202(e$$359);
        v9777 = v15494.push(v15495);
      } else {
        var v15496 = e$$359.children;
        var v15497 = p$$52(e$$359);
        v9777 = v15496.push(v15497);
      }
      v9777;
      v3161 = c$$559 !== ")";
    }
    d$$409();
    var v19760 = c$$559 !== ":";
    if (v19760) {
      v19760 = c$$559 !== ")";
    }
    var v15499 = v19760;
    if (v15499) {
      v15499 = c$$559 !== ",";
    }
    var v9778 = v15499;
    if (v9778) {
      v9778 = c$$559 !== ";";
    }
    var v3162 = v9778;
    if (v3162) {
      e$$359.type = "label";
      var v30946 = m$$52();
      e$$359.name = v30946;
    }
    var v3166 = c$$559 === ":";
    if (v3166) {
      d$$409();
      var v3163 = Smits.Common;
      var v3164 = m$$52();
      var v30947 = v3163.roundFloat(v3164, 4);
      e$$359.len = v30947;
      var v9779 = e$$359.len;
      var v3165 = v9779 == 0;
      if (v3165) {
        e$$359.len = 1E-4;
      }
      e$$359.type = "stem";
    }
    return e$$359;
  }
  function p$$52(a$$707) {
    var v9780 = Smits.PhyloCanvas;
    var v3167 = v9780.Node;
    var e$$358 = new v3167;
    var v9781 = c$$559 !== ")";
    if (v9781) {
      v9781 = c$$559 !== ",";
    }
    var v3172 = v9781;
    for (;v3172;) {
      var v3171 = c$$559 === ":";
      if (v3171) {
        d$$409();
        var v19761 = Smits.Common;
        var v19762 = m$$52();
        var v30948 = v19761.roundFloat(v19762, 4);
        e$$358.len = v30948;
        var v15500 = e$$358.len;
        var v3168 = v15500 == 0;
        if (v3168) {
          e$$358.len = 1E-4;
        }
      } else {
        var v9782 = c$$559 === "'";
        var v15501 = !v9782;
        if (v15501) {
          v9782 = c$$559 === '"';
        }
        var v3170 = v9782;
        if (v3170) {
          e$$358.type = "label";
          var g$$203 = e$$358;
          var j$$111 = c$$559;
          var b$$690 = "";
          var v3169 = c$$559 !== j$$111;
          for (;v3169;) {
            b$$690 = b$$690 + c$$559;
            d$$409();
            v3169 = c$$559 !== j$$111;
          }
          g$$203.name = b$$690;
        } else {
          e$$358.type = "label";
          var v30949 = m$$52();
          e$$358.name = v30949;
        }
      }
      var v9783 = c$$559 !== ")";
      if (v9783) {
        v9783 = c$$559 !== ",";
      }
      v3172 = v9783;
    }
    var v3173 = a$$707.level;
    e$$358.level = v3173 + 1;
    return e$$358;
  }
  var a$$706;
  var c$$559;
  var b$$689;
  var f$$192 = 0;
  var k$$79 = 0;
  var l$$85;
  return v1913;
}
function v1908(a$$705) {
  var v9784 = this._midBranchPosition;
  var v9785 = !1;
  var v3174 = v9784 !== v9785;
  if (v3174) {
    return this._midBranchPosition;
  }
  var c$$558 = [0, 0];
  var b$$688 = 0;
  var v15502 = this.children;
  var v9786 = v15502.length;
  var v3177 = b$$688 < v9786;
  for (;v3177;) {
    var v3175 = this.children;
    var f$$191 = v3175[b$$688];
    var v3176;
    var v15503 = f$$191.children;
    if (v15503) {
      var v24291 = f$$191.children;
      var v19763 = v24291.length;
      v15503 = v19763 > 0;
    }
    var v9789 = v15503;
    if (v9789) {
      var v9787;
      var v19764 = b$$688 == 0;
      if (v19764) {
        v19764 = a$$705;
      }
      var v15505 = v19764;
      if (v15505) {
        var v19765 = !0;
        var v30950 = f$$191.getMidbranchPosition(v19765);
        c$$558[0] = v30950;
        var v24292 = c$$558[1];
        var v26345 = f$$191.getCountAllChildren();
        var v24293 = v26345 - 1;
        v9787 = c$$558[1] = v24292 + v24293;
      } else {
        var v15504;
        var v19766 = b$$688 == 0;
        if (v19766) {
          var v30951 = f$$191.getMidbranchPosition();
          c$$558[0] = v30951;
          var v26346 = c$$558[1];
          var v26347 = f$$191.getCountAllChildren();
          v15504 = c$$558[1] = v26346 + v26347;
        } else {
          var v24294 = c$$558[1];
          var v26348;
          var v29739 = this.children;
          var v29343 = v29739.length;
          var v28721 = v29343 - 1;
          var v27789 = b$$688 == v28721;
          if (v27789) {
            v26348 = f$$191.getMidbranchPosition();
          } else {
            v26348 = f$$191.getCountAllChildren();
          }
          var v24295 = v26348;
          v15504 = c$$558[1] = v24294 + v24295;
        }
        v9787 = v15504;
      }
      v3176 = v9787;
    } else {
      var v9788;
      var v19767 = b$$688 == 0;
      if (v19767) {
        v19767 = a$$705;
      }
      var v15506 = v19767;
      if (v15506) {
        v9788 = c$$558[0] = 0;
      } else {
        var v19768 = b$$688 == 0;
        if (v19768) {
          c$$558[0] = 1;
        }
        var v24296 = c$$558[1];
        v9788 = c$$558[1] = v24296 + 1;
      }
      v3176 = v9788;
    }
    v3176;
    b$$688++;
    var v15507 = this.children;
    var v9790 = v15507.length;
    v3177 = b$$688 < v9790;
  }
  var v3178;
  var v15508 = c$$558[1];
  var v15509 = c$$558[0];
  var v9792 = v15508 >= v15509;
  if (v9792) {
    var v15510 = c$$558[1];
    var v15511 = c$$558[0];
    var v9791 = v15510 + v15511;
    v3178 = v9791 / 2;
  } else {
    v3178 = c$$558[0];
  }
  return this._midBranchPosition = v3178;
}
function v1907() {
  var v9793 = this._countImmediateChildren;
  var v9794 = !1;
  var v3179 = v9793 !== v9794;
  if (v3179) {
    return this._countImmediateChildren;
  }
  var a$$704 = 0;
  var c$$557;
  var v3180 = this.children;
  for (c$$557 in v3180) {
    var v19769 = this.children;
    var v15512 = v19769[c$$557];
    var v9795 = v15512.length;
    a$$704 = a$$704 + v9795;
  }
  return this._countImmediateChildren = a$$704;
}
function v1906() {
  var v9796 = this._countAllChildren;
  var v9797 = !1;
  var v3181 = v9796 !== v9797;
  if (v3181) {
    return this._countAllChildren;
  }
  var a$$703 = 0;
  var c$$556;
  var v3185 = this.children;
  for (c$$556 in v3185) {
    var v9798 = Smits.Common;
    var v3184 = v9798.isInteger(c$$556);
    if (v3184) {
      var v3182 = this.children;
      var b$$687 = v3182[c$$556];
      var v3183;
      var v15513 = b$$687.children;
      if (v15513) {
        var v24297 = b$$687.children;
        var v19770 = v24297.length;
        v15513 = v19770 > 0;
      }
      var v9799 = v15513;
      if (v9799) {
        var v15514 = b$$687.getCountAllChildren();
        v3183 = a$$703 = a$$703 + v15514;
      } else {
        v3183 = a$$703;
        a$$703 = a$$703 + 1;
      }
      v3183;
    }
  }
  return this._countAllChildren = a$$703;
}
function v1905() {
  function v1904(a$$702, c$$555) {
    var v3186 = Smits.Common;
    var v15515 = v3186.nodeIdIncrement;
    this.id = v3186.nodeIdIncrement = v15515 + 1;
    this.newickLen = this.len = this.level = 0;
    this.type = this.name = "";
    this.chart = {};
    this.img = [];
    if (a$$702) {
      var v9800 = Smits.Common;
      v9800.apply(this, a$$702);
    }
    this._midBranchPosition = this._countImmediateChildren = this._countAllChildren = !1;
    this.children = [];
    if (c$$555) {
      var v9801 = c$$555.children;
      v9801.push(this);
    }
    return;
  }
  return v1904;
}
function v1903() {
  function v1902(k$$78, l$$84, p$$51, g$$201, m$$51) {
    function v1901() {
      var v3187;
      var v15516 = Raphael.svg;
      if (v15516) {
        var v19771 = Smits.Common;
        v15516 = v19771.isXMLSerializerAvailable();
      }
      var v9804 = v15516;
      if (v9804) {
        var v9802 = new XMLSerializer;
        var v15517 = b$$686.svg;
        var v9803 = v15517.canvas;
        v3187 = v9802.serializeToString(v9803);
      } else {
        v3187 = !1;
      }
      return v3187;
    }
    function v1900() {
      return a$$701;
    }
    function v1899() {
      return b$$686;
    }
    function v1898(d$$408) {
      var v3188 = b$$686.svg;
      v3188.scale(d$$408);
      return;
    }
    function v1897() {
      return;
    }
    function v1896() {
      return;
    }
    this.getNewickObject = v1896;
    this.clear = v1897;
    this.scale = v1898;
    this.getSvg = v1899;
    this.getPhylogram = v1900;
    this.getSvgSource = v1901;
    var v9805 = typeof k$$78;
    var v3194 = v9805 === "object";
    if (v3194) {
      var v3192 = k$$78.xml;
      if (v3192) {
        var v3189;
        var v9807 = k$$78.fileSource;
        if (v9807) {
          v3189 = k$$78.xml;
        } else {
          var v9806 = k$$78.xml;
          v3189 = XMLObjectifier.textToXML(v9806);
        }
        var d$$407 = v3189;
        d$$407 = XMLObjectifier.xmlToJSON(d$$407);
        var v9808 = Smits.PhyloCanvas;
        var v3190 = v9808.PhyloxmlParse;
        f$$190 = new v3190(d$$407);
      } else {
        var v3191;
        var v9810 = k$$78.phyloxml;
        if (v9810) {
          var v19772;
          var v24299 = k$$78.fileSource;
          if (v24299) {
            v19772 = k$$78.phyloxml;
          } else {
            var v24298 = k$$78.phyloxml;
            v19772 = XMLObjectifier.textToXML(v24298);
          }
          d$$407 = v19772;
          d$$407 = XMLObjectifier.xmlToJSON(d$$407);
          var v19773 = Smits.PhyloCanvas;
          var v15518 = v19773.PhyloxmlParse;
          v3191 = f$$190 = new v15518(d$$407);
        } else {
          var v9809;
          var v15520 = k$$78.nexml;
          if (v15520) {
            var v24300;
            var v26350 = k$$78.fileSource;
            if (v26350) {
              v24300 = k$$78.nexml;
            } else {
              var v26349 = k$$78.nexml;
              v24300 = XMLObjectifier.textToXML(v26349);
            }
            d$$407 = v24300;
            d$$407 = XMLObjectifier.xmlToJSON(d$$407);
            var v24301 = Smits.PhyloCanvas;
            var v19774 = v24301.NexmlParse;
            v9809 = f$$190 = new v19774(d$$407, k$$78);
          } else {
            var v15519;
            var v19778 = k$$78.json;
            if (v19778) {
              var v24302 = Smits.PhyloCanvas;
              var v19775 = v24302.PhyloxmlParse;
              var v19776 = k$$78.json;
              v15519 = f$$190 = new v19775(v19776);
            } else {
              var v19777;
              var v24306 = k$$78.newick;
              if (v24306) {
                var v26351 = Smits.PhyloCanvas;
                var v24303 = v26351.NewickParse;
                var v24304 = k$$78.newick;
                v19777 = f$$190 = new v24303(v24304);
              } else {
                var v24305;
                var v26353 = k$$78.nexmlJson;
                if (v26353) {
                  var v27790 = Smits.PhyloCanvas;
                  var v26352 = v27790.NexmlJsonParse;
                  v24305 = f$$190 = new v26352(k$$78);
                } else {
                  v24305 = alert("Please set the format of input data");
                }
                v19777 = v24305;
              }
              v15519 = v19777;
            }
            v9809 = v15519;
          }
          v3191 = v9809;
        }
        v3191;
      }
    } else {
      var v9811 = Smits.PhyloCanvas;
      var v3193 = v9811.NewickParse;
      f$$190 = new v3193(k$$78);
    }
    c$$554 = l$$84;
    var v15521 = Smits.PhyloCanvas;
    var v9812 = v15521.Render;
    var v3195 = v9812.SVG;
    b$$686 = new v3195(c$$554, p$$51, g$$201);
    var v3196;
    var v9815 = m$$51 == "circular";
    if (v9815) {
      var v19779 = Smits.PhyloCanvas;
      var v15522 = v19779.Render;
      var v9813 = v15522.CircularPhylogram;
      v3196 = new v9813(b$$686, f$$190);
    } else {
      var v19780 = Smits.PhyloCanvas;
      var v15523 = v19780.Render;
      var v9814 = v15523.Phylogram;
      v3196 = new v9814(b$$686, f$$190);
    }
    a$$701 = v3196;
    return;
  }
  var a$$701;
  var c$$554;
  var b$$686;
  var f$$190;
  return v1902;
}
function v1895(a$$700, c$$553) {
  var v3197 = document.styleSheets;
  var b$$685 = v3197[0];
  var v3198;
  var v9817 = b$$685.addRule;
  if (v9817) {
    v3198 = b$$685.addRule(a$$700, c$$553);
  } else {
    var v9816 = b$$685.insertRule;
    if (v9816) {
      var v24307 = a$$700 + " { ";
      var v19781 = v24307 + c$$553;
      var v15524 = v19781 + " }";
      var v19782 = b$$685.cssRules;
      var v15525 = v19782.length;
      v9816 = b$$685.insertRule(v15524, v15525);
    }
    v3198 = v9816;
  }
  v3198;
  return;
}
function v1894(a$$699, c$$552, b$$684) {
  var v9818 = c$$552.type;
  var v3199 = v9818 != "radialGradient";
  if (v3199) {
    return!1;
  }
  var v3200 = Smits.Common;
  var v9819 = b$$684[0];
  var v9820 = b$$684[1];
  var v9821 = b$$684[2];
  var v9822 = b$$684[0];
  var v9823 = b$$684[1];
  var v3201 = {id:a$$699, gradientUnits:"userSpaceOnUse", cx:v9819, cy:v9820, r:v9821, fx:v9822, fy:v9823};
  a$$699 = v3200.createSvgEl("radialGradient", v3201);
  var v3204 = c$$552.stop;
  if (v3204) {
    c$$552 = c$$552.stop;
    b$$684 = 0;
    var v9824 = c$$552.length;
    var v3203 = b$$684 < v9824;
    for (;v3203;) {
      var f$$189 = c$$552[b$$684];
      var v3202;
      var v9826 = f$$189["@attributes"];
      if (v9826) {
        var v15526 = Smits.Common;
        var v15527 = f$$189["@attributes"];
        var v9825 = v15526.createSvgEl("stop", v15527);
        v3202 = a$$699.appendChild(v9825);
      } else {
        var v24308 = f$$189._attributes;
        if (v24308) {
          delete f$$189._attributes;
        }
        var v24309 = f$$189._children;
        if (v24309) {
          delete f$$189._children;
        }
        var v19783 = f$$189.__proto__;
        if (v19783) {
          delete f$$189.__proto__;
        }
        var v19784 = Smits.Common;
        var v15528 = v19784.createSvgEl("stop", f$$189);
        v3202 = a$$699.appendChild(v15528);
      }
      v3202;
      b$$684++;
      var v9827 = c$$552.length;
      v3203 = b$$684 < v9827;
    }
  }
  return a$$699;
}
function v1893(a$$698, c$$551) {
  a$$698 = document.createElementNS("http://www.w3.org/2000/svg", a$$698);
  if (c$$551) {
    var b$$683;
    for (b$$683 in c$$551) {
      var v3205 = c$$551.hasOwnProperty(b$$683);
      if (v3205) {
        var v15529 = c$$551[b$$683];
        var v9828 = String(v15529);
        a$$698.setAttribute(b$$683, v9828);
      }
    }
  }
  return a$$698;
}
function v1892() {
  var v3206;
  var v15530 = typeof XMLSerializer;
  var v9829 = v15530 == "function";
  if (v9829) {
    v3206 = !0;
  } else {
    v3206 = !1;
  }
  return v3206;
}
function v1891(a$$697) {
  var v9830 = parseInt(a$$697);
  var v3207 = isNaN(v9830);
  return!v3207;
}
function v1890(a$$695, c$$549, b$$682, f$$188) {
  function v1889(c$$550, a$$696) {
    function v1888(g$$200) {
      a$$696.e = g$$200;
      c$$550(a$$696);
      return;
    }
    return v1888;
  }
  try {
    var v3208 = v1889(b$$682, f$$188);
    a$$695[c$$549](v3208);
  } catch (k$$77) {
  }
  return;
}
function v1887(a$$694, c$$548) {
  var v9831 = a$$694;
  if (v9831) {
    var v15531 = typeof c$$548;
    v9831 = v15531 == "object";
  }
  var v3209 = v9831;
  if (v3209) {
    var b$$681;
    for (b$$681 in c$$548) {
      a$$694[b$$681] = c$$548[b$$681];
    }
  }
  return a$$694;
}
function v1886(a$$693, c$$547) {
  var b$$680 = 0;
  var f$$187 = 1;
  var v3210 = b$$680 < c$$547;
  for (;v3210;) {
    f$$187 = f$$187 * 10;
    b$$680++;
    v3210 = b$$680 < c$$547;
  }
  var v9832 = a$$693 * f$$187;
  var v3211 = Math.round(v9832);
  return v3211 / f$$187;
}
function v1885(e$$347, t$$15, i$$210) {
  function v1884() {
    return e$$347(N$$2);
  }
  function v1883() {
    if (g$$199) {
      g$$199.stop();
      var v29344 = e$$347.colorbox;
      v29344.close();
      var v28722 = g$$199.stop();
      v28722.remove();
      w$$18.remove();
      q$$21 = !1;
      g$$199 = null;
      var v26354 = "." + et$$1;
      var v24310 = e$$347(v26354);
      var v19785 = v24310.removeData(Y$$2);
      v19785.removeClass(et$$1);
      var v15532 = e$$347(t$$15);
      var v15533 = "click." + Z$$2;
      v15532.unbind(v15533);
    }
    return;
  }
  function v1882() {
    function v1881() {
      function v1880() {
        q$$21 = !1;
        var v9833 = B$$3.onClosed;
        c$$545(rt$$3, v9833);
        return;
      }
      var v24311 = g$$199.add(w$$18);
      var v24312 = {opacity:1, cursor:"auto"};
      var v19786 = v24311.css(v24312);
      v19786.hide();
      c$$545(ht);
      var v15534 = H$$3.empty();
      v15534.remove();
      setTimeout(v1880, 1);
      return;
    }
    var v9834 = U$$2;
    if (v9834) {
      v9834 = !q$$21;
    }
    var v3212 = v9834;
    if (v3212) {
      q$$21 = !0;
      U$$2 = !1;
      var v26355 = B$$3.onCleanup;
      c$$545(nt, v26355);
      var v24313 = "." + Z$$2;
      E$$3.unbind(v24313);
      var v24314 = B$$3.fadeOut;
      var v26356 = !v24314;
      if (v26356) {
        v24314 = 0;
      }
      var v19787 = v24314;
      w$$18.fadeTo(v19787, 0);
      var v15535 = g$$199.stop();
      var v19788 = B$$3.fadeOut;
      var v24315 = !v19788;
      if (v24315) {
        v19788 = 0;
      }
      var v15536 = v19788;
      v15535.fadeTo(v15536, 0, v1881);
    }
    return;
  }
  function v1879() {
    var v15537 = !$$$4;
    if (v15537) {
      v15537 = k$$76[1];
    }
    var v9835 = v15537;
    if (v9835) {
      var v15538 = B$$3.loop;
      var v19789 = !v15538;
      if (v19789) {
        v15538 = z$$7;
      }
      v9835 = v15538;
    }
    var v3213 = v9835;
    if (v3213) {
      z$$7 = r$$22(-1);
      var v15539 = k$$76[z$$7];
      u$$13(v15539);
    }
    return;
  }
  function v1878() {
    var v15540 = !$$$4;
    if (v15540) {
      v15540 = k$$76[1];
    }
    var v9836 = v15540;
    if (v9836) {
      var v15541 = B$$3.loop;
      var v19791 = !v15541;
      if (v19791) {
        var v19790 = z$$7 + 1;
        v15541 = k$$76[v19790];
      }
      v9836 = v15541;
    }
    var v3214 = v9836;
    if (v3214) {
      z$$7 = r$$22(1);
      var v15542 = k$$76[z$$7];
      u$$13(v15542);
    }
    return;
  }
  function v1877(i$$223) {
    function v1876() {
      Q$$2.position(0, a$$691);
      return;
    }
    function v1875() {
      function v1874() {
        n$$101.src = "//about:blank";
        return;
      }
      function v1873() {
        var i$$225;
        var o$$33;
        var n$$102 = k$$76[this];
        var r$$27 = e$$347.data(n$$102, Y$$2);
        var v9837;
        var v19792 = r$$27;
        if (v19792) {
          v19792 = r$$27.href;
        }
        var v15544 = v19792;
        if (v15544) {
          i$$225 = r$$27.href;
          var v19793 = e$$347.isFunction(i$$225);
          if (v19793) {
            v19793 = i$$225 = i$$225.call(n$$102);
          }
          v9837 = v19793;
        } else {
          var v15543 = e$$347(n$$102);
          v9837 = i$$225 = v15543.attr("href");
        }
        v9837;
        var v15545 = i$$225;
        if (v15545) {
          var v19794 = r$$27.photo;
          var v24317 = !v19794;
          if (v24317) {
            var v24316 = r$$27.photoRegex;
            v19794 = v24316.test(i$$225);
          }
          v15545 = v19794;
        }
        var v9838 = v15545;
        if (v9838) {
          i$$225 = s$$30(r$$27, i$$225);
          o$$33 = t$$15.createElement("img");
          o$$33.src = i$$225;
        }
        return;
      }
      function v1872() {
        clearTimeout(G$$3);
        F$$3.hide();
        var v9839 = B$$3.onComplete;
        c$$545(ot, v9839);
        return;
      }
      function i$$224() {
        var v15546 = e$$347.support;
        var v9840 = v15546.opacity;
        var v9841 = !1;
        var v3215 = v9840 === v9841;
        if (v3215) {
          var v15547 = g$$199[0];
          var v9842 = v15547.style;
          v9842.removeAttribute("filter");
        }
        return;
      }
      var n$$101;
      var h$$165;
      var a$$692 = k$$76.length;
      var u$$16 = "frameBorder";
      var f$$186 = "allowTransparency";
      if (U$$2) {
        h$$165 = v1872;
        var v28723 = B$$3.title;
        var v27791 = L$$2.html(v28723);
        var v26357 = v27791.add(H$$3);
        v26357.show();
        var v24318;
        var v26358 = a$$692 > 1;
        if (v26358) {
          var v30226 = B$$3.current;
          var v29993 = typeof v30226;
          var v29740 = "string" == v29993;
          if (v29740) {
            var v30541 = B$$3.current;
            var v30542 = z$$7 + 1;
            var v30396 = v30541.replace("{current}", v30542);
            var v30227 = v30396.replace("{total}", a$$692);
            var v29994 = S$$2.html(v30227);
            v29994.show();
          }
          var v30228;
          var v30543 = B$$3.loop;
          var v30640 = !v30543;
          if (v30640) {
            var v30639 = a$$692 - 1;
            v30543 = v30639 > z$$7;
          }
          var v30397 = v30543;
          if (v30397) {
            v30228 = "show";
          } else {
            v30228 = "hide";
          }
          var v29995 = v30228;
          var v29741 = R$$2[v29995]();
          var v29742 = B$$3.next;
          v29741.html(v29742);
          var v29996;
          var v30398 = B$$3.loop;
          var v30544 = !v30398;
          if (v30544) {
            v30398 = z$$7;
          }
          var v30229 = v30398;
          if (v30229) {
            v29996 = "show";
          } else {
            v29996 = "hide";
          }
          var v29743 = v29996;
          var v29345 = I$$3[v29743]();
          var v29346 = B$$3.previous;
          v29345.html(v29346);
          ct$$1();
          var v27792 = B$$3.preloading;
          if (v27792) {
            var v29347 = r$$22(-1);
            var v29348 = r$$22(1);
            var v28724 = [v29347, v29348];
            v27792 = e$$347.each(v28724, v1873);
          }
          v24318 = v27792;
        } else {
          v24318 = P$$2.hide();
        }
        v24318;
        var v19795;
        var v24319 = B$$3.iframe;
        if (v24319) {
          var v29997 = o$$26("iframe");
          n$$101 = v29997[0];
          var v29998 = u$$16 in n$$101;
          if (v29998) {
            n$$101[u$$16] = 0;
          }
          var v29744 = f$$186 in n$$101;
          if (v29744) {
            n$$101[f$$186] = "true";
          }
          var v29349 = B$$3.scrolling;
          var v29745 = !v29349;
          if (v29745) {
            n$$101.scrolling = "no";
          }
          var v29746 = e$$347(n$$101);
          var v29999 = B$$3.href;
          var v30230 = new Date;
          var v30000 = v30230.getTime();
          var v30001 = Z$$2 + "Iframe";
          var v30002 = !0;
          var v30003 = !0;
          var v30004 = !0;
          var v29747 = {src:v29999, name:v30000, "class":v30001, allowFullScreen:v30002, webkitAllowFullScreen:v30003, mozallowfullscreen:v30004};
          var v29350 = v29746.attr(v29747);
          var v28725 = v29350.one("load", h$$165);
          v28725.appendTo(H$$3);
          lt.one(ht, v1874);
          var v26359 = B$$3.fastIframe;
          if (v26359) {
            var v27793 = e$$347(n$$101);
            v26359 = v27793.trigger("load");
          }
          v19795 = v26359;
        } else {
          v19795 = h$$165();
        }
        v19795;
        var v15548;
        var v24320 = B$$3.transition;
        var v19796 = "fade" === v24320;
        if (v19796) {
          v15548 = g$$199.fadeTo(d$$406, 1, i$$224);
        } else {
          v15548 = i$$224();
        }
        v15548;
      }
      return;
    }
    if (U$$2) {
      var a$$691;
      var v3216;
      var v15549 = B$$3.transition;
      var v9843 = "none" === v15549;
      if (v9843) {
        v3216 = 0;
      } else {
        v3216 = B$$3.speed;
      }
      var d$$406 = v3216;
      var v27794 = H$$3.empty();
      v27794.remove();
      var v27795 = o$$26(st$$2, "LoadedContent");
      H$$3 = v27795.append(i$$223);
      var v29351 = H$$3.hide();
      var v29352 = W$$2.show();
      var v28726 = v29351.appendTo(v29352);
      var v30231 = B$$3;
      var v30399 = B$$3.w;
      var v30545 = !v30399;
      if (v30545) {
        v30399 = H$$3.width();
      }
      v30231.w = v30399;
      var v30232;
      var v30546 = B$$3.mw;
      if (v30546) {
        var v30641 = B$$3.mw;
        var v30642 = B$$3.w;
        v30546 = v30641 < v30642;
      }
      var v30400 = v30546;
      if (v30400) {
        v30232 = B$$3.mw;
      } else {
        v30232 = B$$3.w;
      }
      B$$3.w = v30232;
      var v29353 = B$$3.w;
      var v29748;
      var v30005 = B$$3.scrolling;
      if (v30005) {
        v29748 = "auto";
      } else {
        v29748 = "hidden";
      }
      var v29354 = v29748;
      var v28727 = {width:v29353, overflow:v29354};
      var v27796 = v28726.css(v28727);
      var v30006 = B$$3;
      var v30233 = B$$3.h;
      var v30401 = !v30233;
      if (v30401) {
        v30233 = H$$3.height();
      }
      v30006.h = v30233;
      var v30007;
      var v30402 = B$$3.mh;
      if (v30402) {
        var v30547 = B$$3.mh;
        var v30548 = B$$3.h;
        v30402 = v30547 < v30548;
      }
      var v30234 = v30402;
      if (v30234) {
        v30007 = B$$3.mh;
      } else {
        v30007 = B$$3.h;
      }
      B$$3.h = v30007;
      var v28728 = B$$3.h;
      var v27797 = {height:v28728};
      var v26360 = v27796.css(v27797);
      v26360.prependTo(y$$55);
      W$$2.hide();
      var v19797 = e$$347(j$$109);
      var v19798 = {"float":"none"};
      v19797.css(v19798);
      a$$691 = v1875;
      var v9844;
      var v19799 = B$$3.transition;
      var v15550 = "fade" === v19799;
      if (v15550) {
        v9844 = g$$199.fadeTo(d$$406, 0, v1876);
      } else {
        v9844 = Q$$2.position(d$$406, a$$691);
      }
      v9844;
    }
    return;
  }
  function v1871(e$$357) {
    var t$$29;
    if (U$$2) {
      e$$357 = e$$357 || {};
      var v30008 = e$$357.width;
      if (v30008) {
        var v30235 = B$$3;
        var v30643 = e$$357.width;
        var v30549 = h$$162(v30643, "x");
        var v30403 = v30549 - A$$4;
        v30235.w = v30403 - _$$3;
      }
      var v29749 = e$$357.innerWidth;
      if (v29749) {
        var v30009 = B$$3;
        var v30236 = e$$357.innerWidth;
        var v30952 = h$$162(v30236, "x");
        v30009.w = v30952;
      }
      var v29750 = B$$3.w;
      var v29355 = {width:v29750};
      H$$3.css(v29355);
      var v28729 = e$$357.height;
      if (v28729) {
        var v29356 = B$$3;
        var v30237 = e$$357.height;
        var v30010 = h$$162(v30237, "y");
        var v29751 = v30010 - D$$3;
        v29356.h = v29751 - O$$2;
      }
      var v27798 = e$$357.innerHeight;
      if (v27798) {
        var v28730 = B$$3;
        var v29357 = e$$357.innerHeight;
        var v30953 = h$$162(v29357, "y");
        v28730.h = v30953;
      }
      var v27799 = e$$357.innerHeight;
      var v28731 = !v27799;
      if (v28731) {
        v27799 = e$$357.height;
      }
      var v26361 = v27799;
      var v27800 = !v26361;
      if (v27800) {
        t$$29 = H$$3.scrollTop();
        var v29358 = {height:"auto"};
        H$$3.css(v29358);
        var v28732 = B$$3;
        var v30954 = H$$3.height();
        v28732.h = v30954;
      }
      var v26362 = B$$3.h;
      var v24321 = {height:v26362};
      H$$3.css(v24321);
      if (t$$29) {
        H$$3.scrollTop(t$$29);
      }
      var v19800;
      var v26363 = B$$3.transition;
      var v24322 = "none" === v26363;
      if (v24322) {
        v19800 = 0;
      } else {
        v19800 = B$$3.speed;
      }
      var v15551 = v19800;
      Q$$2.position(v15551);
    }
    return;
  }
  function v1870(t$$28, i$$222) {
    function v1869() {
      function v1868() {
        var v3217 = "resize." + Z$$2;
        var v3218 = Q$$2.position;
        E$$3.bind(v3217, v3218);
        return;
      }
      o$$32();
      $$$4 = !1;
      var v26364 = v$$11[0];
      var v24323 = v26364.style;
      var v28733 = B$$3.w;
      var v27801 = v28733 + A$$4;
      var v26365 = v27801 + _$$3;
      v24323.width = v26365 + "px";
      var v24324 = v$$11[0];
      var v19801 = v24324.style;
      var v27802 = B$$3.h;
      var v26366 = v27802 + D$$3;
      var v24325 = v26366 + O$$2;
      v19801.height = v24325 + "px";
      var v15552 = B$$3.reposition;
      if (v15552) {
        setTimeout(v1868, 1);
      }
      if (i$$222) {
        i$$222();
      }
      return;
    }
    function v1867(e$$356) {
      var v3219;
      var v15553 = r$$26[e$$356];
      var v15554 = dt[e$$356];
      var v9845 = v15553 !== v15554;
      if (v9845) {
        u$$15 = t$$28;
        v3219 = void 0;
      } else {
        v3219 = void 0;
      }
      return v3219;
    }
    function o$$32() {
      var v15555 = x$$74[0];
      var v9846 = v15555.style;
      var v19802 = C$$3[0];
      var v15556 = v19802.style;
      var v24326 = y$$55[0];
      var v19803 = v24326.style;
      var v29359 = g$$199[0];
      var v28734 = v29359.style;
      var v27803 = v28734.width;
      var v26367 = parseInt(v27803, 10);
      var v24327 = v26367 - _$$3;
      v9846.width = v15556.width = v19803.width = v24327 + "px";
      var v15557 = y$$55[0];
      var v9847 = v15557.style;
      var v19804 = b$$679[0];
      var v15558 = v19804.style;
      var v24328 = T$$4[0];
      var v19805 = v24328.style;
      var v29360 = g$$199[0];
      var v28735 = v29360.style;
      var v27804 = v28735.height;
      var v26368 = parseInt(v27804, 10);
      var v24329 = v26368 - O$$2;
      v9847.height = v15558.height = v19805.height = v24329 + "px";
      return;
    }
    var r$$26;
    var l$$83;
    var s$$32;
    var a$$690 = 0;
    var d$$405 = 0;
    var c$$546 = g$$199.offset();
    var v30238 = "resize." + Z$$2;
    E$$3.unbind(v30238);
    var v30239 = {top:-9E4, left:-9E4};
    g$$199.css(v30239);
    l$$83 = E$$3.scrollTop();
    s$$32 = E$$3.scrollLeft();
    var v29361;
    var v29752 = B$$3.fixed;
    if (v29752) {
      var v30404 = c$$546.top;
      c$$546.top = v30404 - l$$83;
      var v30405 = c$$546.left;
      c$$546.left = v30405 - s$$32;
      var v30011 = {position:"fixed"};
      v29361 = g$$199.css(v30011);
    } else {
      a$$690 = l$$83;
      d$$405 = s$$32;
      var v30012 = {position:"absolute"};
      v29361 = g$$199.css(v30012);
    }
    v29361;
    var v29362 = d$$405;
    var v29753;
    var v30240 = B$$3.right;
    var v30241 = !1;
    var v30015 = v30240 !== v30241;
    if (v30015) {
      var v30644 = E$$3.width();
      var v30645 = B$$3.w;
      var v30550 = v30644 - v30645;
      var v30406 = v30550 - A$$4;
      var v30242 = v30406 - _$$3;
      var v30407 = B$$3.right;
      var v30243 = h$$162(v30407, "x");
      var v30013 = v30242 - v30243;
      v29753 = Math.max(v30013, 0);
    } else {
      var v30014;
      var v30408 = B$$3.left;
      var v30409 = !1;
      var v30246 = v30408 !== v30409;
      if (v30246) {
        var v30244 = B$$3.left;
        v30014 = h$$162(v30244, "x");
      } else {
        var v30750 = E$$3.width();
        var v30751 = B$$3.w;
        var v30703 = v30750 - v30751;
        var v30646 = v30703 - A$$4;
        var v30551 = v30646 - _$$3;
        var v30410 = Math.max(v30551, 0);
        var v30245 = v30410 / 2;
        v30014 = Math.round(v30245);
      }
      v29753 = v30014;
    }
    var v29363 = v29753;
    d$$405 = v29362 + v29363;
    var v28736 = a$$690;
    var v29364;
    var v30016 = B$$3.bottom;
    var v30017 = !1;
    var v29756 = v30016 !== v30017;
    if (v29756) {
      var v30552 = n$$96();
      var v30553 = B$$3.h;
      var v30411 = v30552 - v30553;
      var v30247 = v30411 - D$$3;
      var v30018 = v30247 - O$$2;
      var v30248 = B$$3.bottom;
      var v30019 = h$$162(v30248, "y");
      var v29754 = v30018 - v30019;
      v29364 = Math.max(v29754, 0);
    } else {
      var v29755;
      var v30249 = B$$3.top;
      var v30250 = !1;
      var v30022 = v30249 !== v30250;
      if (v30022) {
        var v30020 = B$$3.top;
        v29755 = h$$162(v30020, "y");
      } else {
        var v30704 = n$$96();
        var v30705 = B$$3.h;
        var v30647 = v30704 - v30705;
        var v30554 = v30647 - D$$3;
        var v30412 = v30554 - O$$2;
        var v30251 = Math.max(v30412, 0);
        var v30021 = v30251 / 2;
        v29755 = Math.round(v30021);
      }
      v29364 = v29755;
    }
    var v28737 = v29364;
    a$$690 = v28736 + v28737;
    var v27805 = c$$546.top;
    var v27806 = c$$546.left;
    var v26369 = {top:v27805, left:v27806, visibility:"visible"};
    g$$199.css(v26369);
    var v26370 = v$$11[0];
    var v24330 = v26370.style;
    var v27807 = v$$11[0];
    var v26371 = v27807.style;
    v24330.width = v26371.height = "9999px";
    var v26372 = B$$3.w;
    var v24331 = v26372 + A$$4;
    var v19806 = v24331 + _$$3;
    var v26373 = B$$3.h;
    var v24332 = v26373 + D$$3;
    var v19807 = v24332 + O$$2;
    r$$26 = {width:v19806, height:v19807, top:a$$690, left:d$$405};
    var v3220 = t$$28;
    if (v3220) {
      var u$$15 = 0;
      e$$347.each(r$$26, v1867);
      t$$28 = u$$15;
    }
    dt = r$$26;
    var v19808 = !t$$28;
    if (v19808) {
      g$$199.css(r$$26);
    }
    var v9848 = g$$199.dequeue();
    var v15559 = t$$28 || 0;
    var v9849 = {duration:v15559, complete:v1869, step:o$$32};
    v9848.animate(r$$26, v9849);
    return;
  }
  function v1866(t$$27, i$$221) {
    function v1865() {
      var v15560 = e$$347.data(this, Y$$2);
      var v19809 = !v15560;
      if (v19809) {
        v15560 = X$$2;
      }
      var v9850 = v15560;
      var v3221 = e$$347.extend({}, v9850, t$$27);
      e$$347.data(this, Y$$2, v3221);
      return;
    }
    var o$$31 = this;
    t$$27 = t$$27 || {};
    f$$184();
    var v3224 = p$$50();
    if (v3224) {
      var v3223 = e$$347.isFunction(o$$31);
      if (v3223) {
        o$$31 = e$$347("<a/>");
        t$$27.open = !0;
      } else {
        var v9851 = o$$31[0];
        var v3222 = !v9851;
        if (v3222) {
          return o$$31;
        }
      }
      if (i$$221) {
        t$$27.onComplete = i$$221;
      }
      var v15561 = o$$31.each(v1865);
      v15561.addClass(et$$1);
      var v24333 = t$$27.open;
      var v19810 = e$$347.isFunction(v24333);
      if (v19810) {
        var v24334 = t$$27.open;
        v19810 = v24334.call(o$$31);
      }
      var v15562 = v19810;
      var v19811 = !v15562;
      if (v19811) {
        v15562 = t$$27.open;
      }
      var v9852 = v15562;
      if (v9852) {
        var v15563 = o$$31[0];
        u$$13(v15563);
      }
    }
    return o$$31;
  }
  function v1864() {
    function v1863() {
      var v3225;
      if (r$$25) {
        var v9853 = B$$3.slideshow;
        var v15564 = !v9853;
        if (v15564) {
          lt.unbind(nt, n$$99);
          v9853 = n$$99();
        }
        v3225 = v9853;
      } else {
        var v15565 = B$$3.slideshow;
        if (v15565) {
          v15565 = k$$76[1];
        }
        var v9854 = v15565;
        if (v9854) {
          r$$25 = !0;
          lt.one(nt, n$$99);
          var v24335;
          var v26374 = B$$3.slideshowAuto;
          if (v26374) {
            v24335 = i$$220();
          } else {
            v24335 = o$$30();
          }
          v24335;
          v9854 = M$$2.show();
        }
        v3225 = v9854;
      }
      v3225;
      return;
    }
    function e$$355() {
      clearTimeout(h$$163);
      return;
    }
    function t$$26() {
      var v9855 = B$$3.loop;
      var v15567 = !v9855;
      if (v15567) {
        var v15566 = z$$7 + 1;
        v9855 = k$$76[v15566];
      }
      var v3226 = v9855;
      if (v3226) {
        e$$355();
        var v15568 = Q$$2.next;
        var v15569 = B$$3.slideshowSpeed;
        h$$163 = setTimeout(v15568, v15569);
      }
      return;
    }
    function i$$220() {
      var v24336 = B$$3.slideshowStop;
      var v19812 = M$$2.html(v24336);
      var v15570 = v19812.unbind(s$$31);
      v15570.one(s$$31, o$$30);
      var v15571 = lt.bind(ot, t$$26);
      v15571.bind(it, e$$355);
      var v15572 = l$$82 + "off";
      var v9856 = g$$199.removeClass(v15572);
      var v9857 = l$$82 + "on";
      v9856.addClass(v9857);
      return;
    }
    function o$$30() {
      function v1862() {
        Q$$2.next();
        i$$220();
        return;
      }
      e$$355();
      var v19813 = lt.unbind(ot, t$$26);
      v19813.unbind(it, e$$355);
      var v24337 = B$$3.slideshowStart;
      var v19814 = M$$2.html(v24337);
      var v15573 = v19814.unbind(s$$31);
      v15573.one(s$$31, v1862);
      var v15574 = l$$82 + "on";
      var v9858 = g$$199.removeClass(v15574);
      var v9859 = l$$82 + "off";
      v9858.addClass(v9859);
      return;
    }
    function n$$99() {
      r$$25 = !1;
      M$$2.hide();
      e$$355();
      var v15575 = lt.unbind(ot, t$$26);
      v15575.unbind(it, e$$355);
      var v19815 = l$$82 + "off ";
      var v15576 = v19815 + l$$82;
      var v9860 = v15576 + "on";
      g$$199.removeClass(v9860);
      return;
    }
    var r$$25;
    var h$$163;
    var l$$82 = Z$$2 + "Slideshow_";
    var s$$31 = "click." + Z$$2;
    return v1863;
  }
  function o$$26(i$$211, o$$27, n$$97) {
    var r$$23 = t$$15.createElement(i$$211);
    if (o$$27) {
      r$$23.id = Z$$2 + o$$27;
    }
    if (n$$97) {
      var v19816 = r$$23.style;
      v19816.cssText = n$$97;
    }
    return e$$347(r$$23);
  }
  function n$$96() {
    var v3227;
    var v9862 = i$$210.innerHeight;
    if (v9862) {
      v3227 = i$$210.innerHeight;
    } else {
      var v9861 = e$$347(i$$210);
      v3227 = v9861.height();
    }
    return v3227;
  }
  function r$$22(e$$348) {
    var t$$16 = k$$76.length;
    var v3228 = z$$7 + e$$348;
    var i$$212 = v3228 % t$$16;
    var v3229;
    var v9863 = 0 > i$$212;
    if (v9863) {
      v3229 = t$$16 + i$$212;
    } else {
      v3229 = i$$212;
    }
    return v3229;
  }
  function h$$162(e$$349, t$$17) {
    var v15577;
    var v19818 = /%/.test(e$$349);
    if (v19818) {
      var v24338;
      var v26375 = "x" === t$$17;
      if (v26375) {
        v24338 = E$$3.width();
      } else {
        v24338 = n$$96();
      }
      var v19817 = v24338;
      v15577 = v19817 / 100;
    } else {
      v15577 = 1;
    }
    var v9864 = v15577;
    var v9865 = parseInt(e$$349, 10);
    var v3230 = v9864 * v9865;
    return Math.round(v3230);
  }
  function s$$30(e$$351, t$$19) {
    var v3231;
    var v15578 = e$$351.retinaUrl;
    if (v15578) {
      var v19819 = i$$210.devicePixelRatio;
      v15578 = v19819 > 1;
    }
    var v9868 = v15578;
    if (v9868) {
      var v9866 = e$$351.photoRegex;
      var v9867 = e$$351.retinaSuffix;
      v3231 = t$$19.replace(v9866, v9867);
    } else {
      v3231 = t$$19;
    }
    return v3231;
  }
  function a$$688(e$$352) {
    var v15579 = g$$199[0];
    var v9869 = "contains" in v15579;
    if (v9869) {
      var v19820 = g$$199[0];
      var v19821 = e$$352.target;
      var v15580 = v19820.contains(v19821);
      v9869 = !v15580;
    }
    var v3232 = v9869;
    if (v3232) {
      e$$352.stopPropagation();
      g$$199.focus();
    }
    return;
  }
  function d$$404() {
    var t$$20;
    var i$$213 = e$$347.data(N$$2, Y$$2);
    var v3233;
    var v9870 = null == i$$213;
    if (v9870) {
      B$$3 = e$$347.extend({}, X$$2);
      var v19822 = console;
      if (v19822) {
        v19822 = console.log;
      }
      var v15581 = v19822;
      if (v15581) {
        v15581 = console.log("Error: cboxElement missing settings object");
      }
      v3233 = v15581;
    } else {
      v3233 = B$$3 = e$$347.extend({}, i$$213);
    }
    v3233;
    for (t$$20 in B$$3) {
      var v15582 = B$$3[t$$20];
      var v9871 = e$$347.isFunction(v15582);
      if (v9871) {
        var v15583 = t$$20.slice(0, 2);
        v9871 = "on" !== v15583;
      }
      var v3234 = v9871;
      if (v3234) {
        var v9872 = B$$3;
        var v15584 = B$$3[t$$20];
        var v30955 = v15584.call(N$$2);
        v9872[t$$20] = v30955;
      }
    }
    var v19823 = B$$3;
    var v27808 = B$$3.rel;
    var v28738 = !v27808;
    if (v28738) {
      v27808 = N$$2.rel;
    }
    var v26376 = v27808;
    var v27810 = !v26376;
    if (v27810) {
      var v27809 = e$$347(N$$2);
      v26376 = v27809.data("rel");
    }
    var v24339 = v26376;
    var v26377 = !v24339;
    if (v26377) {
      v24339 = "nofollow";
    }
    v19823.rel = v24339;
    var v19824 = B$$3;
    var v24340 = B$$3.href;
    var v26379 = !v24340;
    if (v26379) {
      var v26378 = e$$347(N$$2);
      v24340 = v26378.attr("href");
    }
    v19824.href = v24340;
    var v15585 = B$$3.title;
    var v19825 = !v15585;
    if (v19825) {
      v15585 = N$$2.title;
    }
    B$$3.title = v15585;
    var v19826 = B$$3.href;
    var v15586 = typeof v19826;
    var v9873 = "string" == v15586;
    if (v9873) {
      var v15587 = B$$3;
      var v19827 = B$$3.href;
      var v30956 = e$$347.trim(v19827);
      v15587.href = v30956;
    }
    return;
  }
  function c$$545(i$$214, o$$28) {
    var v15588 = e$$347(t$$15);
    v15588.trigger(i$$214);
    lt.triggerHandler(i$$214);
    var v9874 = e$$347.isFunction(o$$28);
    if (v9874) {
      o$$28.call(N$$2);
    }
    return;
  }
  function u$$13(i$$215) {
    function v1846() {
      var v3235 = e$$347(N$$2);
      v3235.focus();
      return;
    }
    function v1845() {
      var v3236 = !0;
      t$$15.removeEventListener("focus", a$$688, v3236);
      return;
    }
    function v1844() {
      var t$$21;
      var i$$216 = e$$347.data(this, Y$$2);
      if (i$$216) {
        var v24341 = e$$347(this);
        var v19828 = v24341.data("rel");
        var v24342 = !v19828;
        if (v24342) {
          v19828 = i$$216.rel;
        }
        var v15589 = v19828;
        var v19829 = !v15589;
        if (v19829) {
          v15589 = this.rel;
        }
        t$$21 = v15589;
      }
      var v9875 = B$$3.rel;
      return t$$21 === v9875;
    }
    var v9876 = !q$$21;
    if (v9876) {
      N$$2 = i$$215;
      d$$404();
      k$$76 = e$$347(N$$2);
      z$$7 = 0;
      var v30023 = B$$3.rel;
      var v29757 = "nofollow" !== v30023;
      if (v29757) {
        var v30555 = "." + et$$1;
        var v30413 = e$$347(v30555);
        k$$76 = v30413.filter(v1844);
        z$$7 = k$$76.index(N$$2);
        var v30252 = -1 === z$$7;
        if (v30252) {
          k$$76 = k$$76.add(N$$2);
          var v30556 = k$$76.length;
          z$$7 = v30556 - 1;
        }
      }
      var v30253 = B$$3.opacity;
      var v30024 = parseFloat(v30253);
      var v30254;
      var v30414 = B$$3.overlayClose;
      if (v30414) {
        v30254 = "pointer";
      } else {
        v30254 = "auto";
      }
      var v30025 = v30254;
      var v29758 = {opacity:v30024, cursor:v30025, visibility:"visible"};
      var v29365 = w$$18.css(v29758);
      v29365.show();
      if (J$$3) {
        var v29366 = g$$199.add(w$$18);
        v29366.removeClass(J$$3);
      }
      var v27811 = B$$3.className;
      if (v27811) {
        var v28739 = g$$199.add(w$$18);
        var v28740 = B$$3.className;
        v28739.addClass(v28740);
      }
      J$$3 = B$$3.className;
      var v24343;
      var v26381 = B$$3.closeButton;
      if (v26381) {
        var v27812 = B$$3.close;
        var v26380 = K$$2.html(v27812);
        v24343 = v26380.appendTo(y$$55);
      } else {
        v24343 = K$$2.appendTo("<div/>");
      }
      v24343;
      var v24344 = !U$$2;
      if (v24344) {
        U$$2 = $$$4 = !0;
        var v30845 = {visibility:"hidden", display:"block"};
        g$$199.css(v30845);
        H$$3 = o$$26(st$$2, "LoadedContent", "width:0; height:0; overflow:hidden");
        var v30829 = {width:"", height:""};
        var v30805 = y$$55.css(v30829);
        v30805.append(H$$3);
        var v30830 = x$$74.height();
        var v30831 = C$$3.height();
        var v30806 = v30830 + v30831;
        var v30832 = !0;
        var v30807 = y$$55.outerHeight(v30832);
        var v30780 = v30806 + v30807;
        var v30781 = y$$55.height();
        O$$2 = v30780 - v30781;
        var v30808 = b$$679.width();
        var v30809 = T$$4.width();
        var v30782 = v30808 + v30809;
        var v30810 = !0;
        var v30783 = y$$55.outerWidth(v30810);
        var v30752 = v30782 + v30783;
        var v30753 = y$$55.width();
        _$$3 = v30752 - v30753;
        var v30706 = !0;
        D$$3 = H$$3.outerHeight(v30706);
        var v30648 = !0;
        A$$4 = H$$3.outerWidth(v30648);
        var v30557 = B$$3;
        var v30649 = B$$3.initialWidth;
        var v30957 = h$$162(v30649, "x");
        v30557.w = v30957;
        var v30415 = B$$3;
        var v30558 = B$$3.initialHeight;
        var v30958 = h$$162(v30558, "y");
        v30415.h = v30958;
        var v30416 = B$$3.h;
        var v30255 = {width:"", height:v30416};
        H$$3.css(v30255);
        Q$$2.position();
        var v29759 = B$$3.onOpen;
        c$$545(tt$$1, v29759);
        var v29367 = P$$2.add(L$$2);
        v29367.hide();
        g$$199.focus();
        var v28741 = B$$3.trapFocus;
        if (v28741) {
          v28741 = t$$15.addEventListener;
        }
        var v27813 = v28741;
        if (v27813) {
          var v29368 = !0;
          t$$15.addEventListener("focus", a$$688, v29368);
          lt.one(rt$$3, v1845);
        }
        var v26382 = B$$3.returnFocus;
        if (v26382) {
          lt.one(rt$$3, v1846);
        }
      }
      m$$50();
    }
    return;
  }
  function f$$184() {
    var v9877 = !g$$199;
    if (v9877) {
      v9877 = t$$15.body;
    }
    var v3237 = v9877;
    if (v3237) {
      V$$2 = !1;
      E$$3 = e$$347(i$$210);
      var v30417 = o$$26(st$$2);
      var v30650;
      var v30784 = e$$347.support;
      var v30754 = v30784.opacity;
      var v30755 = !1;
      var v30707 = v30754 === v30755;
      if (v30707) {
        v30650 = Z$$2 + "IE";
      } else {
        v30650 = "";
      }
      var v30559 = v30650;
      var v30418 = {id:Y$$2, "class":v30559, role:"dialog", tabindex:"-1"};
      var v30256 = v30417.attr(v30418);
      g$$199 = v30256.hide();
      var v30026 = o$$26(st$$2, "Overlay");
      w$$18 = v30026.hide();
      var v30257 = o$$26(st$$2, "LoadingOverlay");
      var v30027 = v30257[0];
      var v30258 = o$$26(st$$2, "LoadingGraphic");
      var v30028 = v30258[0];
      var v29760 = [v30027, v30028];
      F$$3 = e$$347(v29760);
      v$$11 = o$$26(st$$2, "Wrapper");
      var v28742 = o$$26(st$$2, "Content");
      var v28743 = L$$2 = o$$26(st$$2, "Title");
      var v28744 = S$$2 = o$$26(st$$2, "Current");
      var v29369 = e$$347('<button type="button"/>');
      var v29761 = Z$$2 + "Previous";
      var v29370 = {id:v29761};
      var v28745 = I$$3 = v29369.attr(v29370);
      var v29371 = e$$347('<button type="button"/>');
      var v29762 = Z$$2 + "Next";
      var v29372 = {id:v29762};
      var v28746 = R$$2 = v29371.attr(v29372);
      var v28747 = M$$2 = o$$26("button", "Slideshow");
      y$$55 = v28742.append(v28743, v28744, v28745, v28746, v28747, F$$3);
      var v27814 = e$$347('<button type="button"/>');
      var v28748 = Z$$2 + "Close";
      var v27815 = {id:v28748};
      K$$2 = v27814.attr(v27815);
      var v29373 = o$$26(st$$2);
      var v29374 = o$$26(st$$2, "TopLeft");
      var v29375 = x$$74 = o$$26(st$$2, "TopCenter");
      var v29376 = o$$26(st$$2, "TopRight");
      var v28749 = v29373.append(v29374, v29375, v29376);
      var v29763 = !1;
      var v29377 = o$$26(st$$2, v29763, "clear:left");
      var v29378 = b$$679 = o$$26(st$$2, "MiddleLeft");
      var v29379 = T$$4 = o$$26(st$$2, "MiddleRight");
      var v28750 = v29377.append(v29378, y$$55, v29379);
      var v29764 = !1;
      var v29380 = o$$26(st$$2, v29764, "clear:left");
      var v29381 = o$$26(st$$2, "BottomLeft");
      var v29382 = C$$3 = o$$26(st$$2, "BottomCenter");
      var v29383 = o$$26(st$$2, "BottomRight");
      var v28751 = v29380.append(v29381, v29382, v29383);
      var v27816 = v$$11.append(v28749, v28750, v28751);
      var v26383 = v27816.find("div div");
      var v26384 = {"float":"left"};
      v26383.css(v26384);
      var v24345 = !1;
      W$$2 = o$$26(st$$2, v24345, "position:absolute; width:9999px; visibility:hidden; display:none; max-width:none;");
      var v24346 = R$$2.add(I$$3);
      var v19830 = v24346.add(S$$2);
      P$$2 = v19830.add(M$$2);
      var v19831 = t$$15.body;
      var v15590 = e$$347(v19831);
      var v15591 = g$$199.append(v$$11, W$$2);
      v15590.append(w$$18, v15591);
    }
    return;
  }
  function p$$50() {
    function v1851(e$$354) {
      var t$$22 = e$$354.keyCode;
      var v19832 = U$$2;
      if (v19832) {
        v19832 = B$$3.escKey;
      }
      var v15592 = v19832;
      if (v15592) {
        v15592 = 27 === t$$22;
      }
      var v9878 = v15592;
      if (v9878) {
        e$$354.preventDefault();
        Q$$2.close();
      }
      var v24347 = U$$2;
      if (v24347) {
        v24347 = B$$3.arrowKey;
      }
      var v19833 = v24347;
      if (v19833) {
        v19833 = k$$76[1];
      }
      var v15593 = v19833;
      if (v15593) {
        var v19834 = e$$354.altKey;
        v15593 = !v19834;
      }
      var v9879 = v15593;
      if (v9879) {
        var v15594;
        var v19836 = 37 === t$$22;
        if (v19836) {
          e$$354.preventDefault();
          v15594 = I$$3.click();
        } else {
          var v19835 = 39 === t$$22;
          if (v19835) {
            e$$354.preventDefault();
            v19835 = R$$2.click();
          }
          v15594 = v19835;
        }
        v15594;
      }
      return;
    }
    function v1850() {
      var v3238 = B$$3.overlayClose;
      if (v3238) {
        Q$$2.close();
      }
      return;
    }
    function v1849() {
      Q$$2.close();
      return;
    }
    function v1848() {
      Q$$2.prev();
      return;
    }
    function v1847() {
      Q$$2.next();
      return;
    }
    function i$$217(e$$353) {
      var v26385 = e$$353.which;
      var v24348 = v26385 > 1;
      var v26386 = !v24348;
      if (v26386) {
        v24348 = e$$353.shiftKey;
      }
      var v19837 = v24348;
      var v24349 = !v19837;
      if (v24349) {
        v19837 = e$$353.altKey;
      }
      var v15595 = v19837;
      var v19838 = !v15595;
      if (v19838) {
        v15595 = e$$353.metaKey;
      }
      var v9880 = v15595;
      var v15596 = !v9880;
      if (v15596) {
        v9880 = e$$353.ctrlKey;
      }
      var v3239 = v9880;
      var v9881 = !v3239;
      if (v9881) {
        e$$353.preventDefault();
        u$$13(this);
      }
      return;
    }
    var v3240;
    if (g$$199) {
      var v19839 = !V$$2;
      if (v19839) {
        V$$2 = !0;
        R$$2.click(v1847);
        I$$3.click(v1848);
        K$$2.click(v1849);
        w$$18.click(v1850);
        var v26387 = e$$347(t$$15);
        var v26388 = "keydown." + Z$$2;
        v26387.bind(v26388, v1851);
        var v24350;
        var v28752 = e$$347.fn;
        var v27817 = v28752.on;
        var v26394 = e$$347.isFunction(v27817);
        if (v26394) {
          var v26389 = e$$347(t$$15);
          var v26390 = "click." + Z$$2;
          var v26391 = "." + et$$1;
          v24350 = v26389.on(v26390, v26391, i$$217);
        } else {
          var v27818 = "." + et$$1;
          var v26392 = e$$347(v27818);
          var v26393 = "click." + Z$$2;
          v24350 = v26392.live(v26393, i$$217);
        }
        v24350;
      }
      v3240 = !0;
    } else {
      v3240 = !1;
    }
    return v3240;
  }
  function m$$50() {
    function v1861(t$$25, i$$219) {
      var v3241 = f$$185 === at;
      if (v3241) {
        var v15597;
        var v19843 = "error" === i$$219;
        if (v19843) {
          var v19840 = o$$26(st$$2, "Error");
          var v19841 = B$$3.xhrError;
          v15597 = v19840.html(v19841);
        } else {
          var v19842 = e$$347(this);
          v15597 = v19842.contents();
        }
        var v9882 = v15597;
        u$$14(v9882);
      }
      return;
    }
    function v1860() {
      j$$109.src = n$$98;
      return;
    }
    function v1859() {
      function v1858() {
        u$$14(j$$109);
        return;
      }
      function v1857() {
        Q$$2.next();
        return;
      }
      function v1856() {
        var v15598 = j$$109.height;
        var v19844 = j$$109.height;
        var v15599 = v19844 * t$$23;
        j$$109.height = v15598 - v15599;
        var v15600 = j$$109.width;
        var v19845 = j$$109.width;
        var v15601 = v19845 * t$$23;
        j$$109.width = v15600 - v15601;
        return;
      }
      function v1855(t$$24, i$$218) {
        var v9883 = e$$347(N$$2);
        var v3242 = v9883.attr(i$$218);
        var v9886 = !v3242;
        if (v9886) {
          var v9884 = e$$347(N$$2);
          var v9885 = "data-" + i$$218;
          v3242 = v9884.attr(v9885);
        }
        var o$$29 = v3242;
        if (o$$29) {
          j$$109.setAttribute(i$$218, o$$29);
        }
        return;
      }
      var t$$23;
      var v3243 = f$$185 === at;
      if (v3243) {
        var v29384 = ["alt", "longdesc", "aria-describedby"];
        e$$347.each(v29384, v1855);
        var v29765 = B$$3.retinaImage;
        if (v29765) {
          var v30029 = i$$210.devicePixelRatio;
          v29765 = v30029 > 1;
        }
        var v29385 = v29765;
        if (v29385) {
          var v30030 = j$$109.height;
          var v30031 = i$$210.devicePixelRatio;
          j$$109.height = v30030 / v30031;
          var v30032 = j$$109.width;
          var v30033 = i$$210.devicePixelRatio;
          j$$109.width = v30032 / v30033;
        }
        var v28753 = B$$3.scalePhotos;
        if (v28753) {
          r$$24 = v1856;
          var v30259 = B$$3.mw;
          if (v30259) {
            var v30419 = j$$109.width;
            var v30420 = B$$3.mw;
            v30259 = v30419 > v30420;
          }
          var v30034 = v30259;
          if (v30034) {
            var v30560 = j$$109.width;
            var v30561 = B$$3.mw;
            var v30421 = v30560 - v30561;
            var v30422 = j$$109.width;
            t$$23 = v30421 / v30422;
            r$$24();
          }
          var v30035 = B$$3.mh;
          if (v30035) {
            var v30260 = j$$109.height;
            var v30261 = B$$3.mh;
            v30035 = v30260 > v30261;
          }
          var v29766 = v30035;
          if (v29766) {
            var v30423 = j$$109.height;
            var v30424 = B$$3.mh;
            var v30262 = v30423 - v30424;
            var v30263 = j$$109.height;
            t$$23 = v30262 / v30263;
            r$$24();
          }
        }
        var v27819 = B$$3.h;
        if (v27819) {
          var v28754 = j$$109.style;
          var v30264 = B$$3.mh;
          var v30265 = j$$109.height;
          var v30036 = v30264 - v30265;
          var v29767 = Math.max(v30036, 0);
          var v29386 = v29767 / 2;
          v28754.marginTop = v29386 + "px";
        }
        var v27820 = k$$76[1];
        if (v27820) {
          var v28755 = B$$3.loop;
          var v29388 = !v28755;
          if (v29388) {
            var v29387 = z$$7 + 1;
            v28755 = k$$76[v29387];
          }
          v27820 = v28755;
        }
        var v26395 = v27820;
        if (v26395) {
          var v28756 = j$$109.style;
          v28756.cursor = "pointer";
          j$$109.onclick = v1857;
        }
        var v24351 = j$$109.style;
        var v26396 = j$$109.width;
        v24351.width = v26396 + "px";
        var v19846 = j$$109.style;
        var v24352 = j$$109.height;
        v19846.height = v24352 + "px";
        setTimeout(v1858, 1);
      }
      return;
    }
    function v1854() {
      B$$3.title = !1;
      var v15602 = o$$26(st$$2, "Error");
      var v15603 = B$$3.imgError;
      var v9887 = v15602.html(v15603);
      u$$14(v9887);
      return;
    }
    function v1853() {
      var v3244 = H$$3.children();
      a$$689.replaceWith(v3244);
      return;
    }
    function v1852() {
      F$$3.show();
      return;
    }
    var n$$98;
    var r$$24;
    var a$$689;
    var u$$14 = Q$$2.prep;
    var f$$185 = at = at + 1;
    $$$4 = !0;
    j$$109 = !1;
    N$$2 = k$$76[z$$7];
    d$$404();
    c$$545(ht);
    var v30037 = B$$3.onLoad;
    c$$545(it, v30037);
    var v29768 = B$$3;
    var v30038;
    var v30268 = B$$3.height;
    if (v30268) {
      var v30562 = B$$3.height;
      var v30425 = h$$162(v30562, "y");
      var v30266 = v30425 - D$$3;
      v30038 = v30266 - O$$2;
    } else {
      var v30267 = B$$3.innerHeight;
      if (v30267) {
        var v30426 = B$$3.innerHeight;
        v30267 = h$$162(v30426, "y");
      }
      v30038 = v30267;
    }
    v29768.h = v30038;
    var v29389 = B$$3;
    var v29769;
    var v30041 = B$$3.width;
    if (v30041) {
      var v30427 = B$$3.width;
      var v30269 = h$$162(v30427, "x");
      var v30039 = v30269 - A$$4;
      v29769 = v30039 - _$$3;
    } else {
      var v30040 = B$$3.innerWidth;
      if (v30040) {
        var v30270 = B$$3.innerWidth;
        v30040 = h$$162(v30270, "x");
      }
      v29769 = v30040;
    }
    v29389.w = v29769;
    B$$3.mw = B$$3.w;
    B$$3.mh = B$$3.h;
    var v26397 = B$$3.maxWidth;
    if (v26397) {
      var v28757 = B$$3;
      var v30042 = B$$3.maxWidth;
      var v29770 = h$$162(v30042, "x");
      var v29390 = v29770 - A$$4;
      v28757.mw = v29390 - _$$3;
      var v28758;
      var v29771 = B$$3.w;
      if (v29771) {
        var v30043 = B$$3.w;
        var v30044 = B$$3.mw;
        v29771 = v30043 < v30044;
      }
      var v29391 = v29771;
      if (v29391) {
        v28758 = B$$3.w;
      } else {
        v28758 = B$$3.mw;
      }
      B$$3.mw = v28758;
    }
    var v24353 = B$$3.maxHeight;
    if (v24353) {
      var v27821 = B$$3;
      var v29772 = B$$3.maxHeight;
      var v29392 = h$$162(v29772, "y");
      var v28759 = v29392 - D$$3;
      v27821.mh = v28759 - O$$2;
      var v27822;
      var v29393 = B$$3.h;
      if (v29393) {
        var v29773 = B$$3.h;
        var v29774 = B$$3.mh;
        v29393 = v29773 < v29774;
      }
      var v28760 = v29393;
      if (v28760) {
        v27822 = B$$3.h;
      } else {
        v27822 = B$$3.mh;
      }
      B$$3.mh = v27822;
    }
    n$$98 = B$$3.href;
    G$$3 = setTimeout(v1852, 100);
    var v9888;
    var v15605 = B$$3.inline;
    if (v15605) {
      var v26398 = o$$26(st$$2);
      var v24354 = v26398.hide();
      var v26399 = e$$347(n$$98);
      var v24355 = v26399[0];
      a$$689 = v24354.insertBefore(v24355);
      lt.one(ht, v1853);
      var v19847 = e$$347(n$$98);
      v9888 = u$$14(v19847);
    } else {
      var v15604;
      var v19849 = B$$3.iframe;
      if (v19849) {
        v15604 = u$$14(" ");
      } else {
        var v19848;
        var v24358 = B$$3.html;
        if (v24358) {
          var v24356 = B$$3.html;
          v19848 = u$$14(v24356);
        } else {
          var v24357;
          var v27823 = B$$3.photo;
          var v28762 = !v27823;
          if (v28762) {
            var v28761 = B$$3.photoRegex;
            v27823 = v28761.test(n$$98);
          }
          var v26401 = v27823;
          if (v26401) {
            n$$98 = s$$30(B$$3, n$$98);
            j$$109 = t$$15.createElement("img");
            var v29775 = e$$347(j$$109);
            var v29776 = Z$$2 + "Photo";
            var v29394 = v29775.addClass(v29776);
            var v28763 = v29394.bind("error", v1854);
            v28763.one("load", v1859);
            v24357 = setTimeout(v1860, 1);
          } else {
            var v26400 = n$$98;
            if (v26400) {
              var v27824 = B$$3.data;
              v26400 = W$$2.load(n$$98, v27824, v1861);
            }
            v24357 = v26400;
          }
          v19848 = v24357;
        }
        v15604 = v19848;
      }
      v9888 = v15604;
    }
    v9888;
    return;
  }
  var w$$18;
  var g$$199;
  var v$$11;
  var y$$55;
  var x$$74;
  var b$$679;
  var T$$4;
  var C$$3;
  var k$$76;
  var E$$3;
  var H$$3;
  var W$$2;
  var F$$3;
  var L$$2;
  var S$$2;
  var M$$2;
  var R$$2;
  var I$$3;
  var K$$2;
  var P$$2;
  var B$$3;
  var O$$2;
  var _$$3;
  var D$$3;
  var A$$4;
  var N$$2;
  var z$$7;
  var j$$109;
  var U$$2;
  var $$$4;
  var q$$21;
  var G$$3;
  var Q$$2;
  var J$$3;
  var V$$2;
  var v3245 = !1;
  var v3246 = !1;
  var v3247 = !1;
  var v3248 = !1;
  var v3249 = !1;
  var v3250 = !1;
  var v3251 = !1;
  var v3252 = !1;
  var v3253 = !1;
  var v3254 = !1;
  var v3255 = !0;
  var v3256 = !0;
  var v3257 = !1;
  var v3258 = !1;
  var v3259 = !1;
  var v3260 = !0;
  var v3261 = !1;
  var v3262 = !0;
  var v3263 = !0;
  var v3264 = !0;
  var v3265 = !1;
  var v3266 = !1;
  var v3267 = !1;
  var v3268 = !1;
  var v3269 = !1;
  var v3270 = void 0;
  var v3271 = !0;
  var v3272 = !0;
  var v3273 = !1;
  var v3274 = !0;
  var v3275 = !0;
  var v3276 = !1;
  var v3277 = !0;
  var v3278 = !1;
  var v3279 = !1;
  var v3280 = !0;
  var v3281 = !0;
  var v3282 = !1;
  var v3283 = !1;
  var v3284 = !1;
  var v3285 = !1;
  var v3286 = !1;
  var X$$2 = {html:v3245, photo:v3246, iframe:v3247, inline:v3248, transition:"elastic", speed:300, fadeOut:300, width:v3249, initialWidth:"600", innerWidth:v3250, maxWidth:v3251, height:v3252, initialHeight:"450", innerHeight:v3253, maxHeight:v3254, scalePhotos:v3255, scrolling:v3256, href:v3257, title:v3258, rel:v3259, opacity:.9, preloading:v3260, className:v3261, overlayClose:v3262, escKey:v3263, arrowKey:v3264, top:v3265, bottom:v3266, left:v3267, right:v3268, fixed:v3269, data:v3270, closeButton:v3271, 
  fastIframe:v3272, open:v3273, reposition:v3274, loop:v3275, slideshow:v3276, slideshowAuto:v3277, slideshowSpeed:2500, slideshowStart:"start slideshow", slideshowStop:"stop slideshow", photoRegex:/\.(gif|png|jp(e|g|eg)|bmp|ico|webp)((#|\?).*)?$/i, retinaImage:v3278, retinaUrl:v3279, retinaSuffix:"@2x.$1", current:"image {current} of {total}", previous:"previous", next:"next", close:"close", xhrError:"This content failed to load.", imgError:"This image failed to load.", returnFocus:v3280, trapFocus:v3281, 
  onOpen:v3282, onLoad:v3283, onComplete:v3284, onCleanup:v3285, onClosed:v3286};
  var Y$$2 = "colorbox";
  var Z$$2 = "cbox";
  var et$$1 = Z$$2 + "Element";
  var tt$$1 = Z$$2 + "_open";
  var it = Z$$2 + "_load";
  var ot = Z$$2 + "_complete";
  var nt = Z$$2 + "_cleanup";
  var rt$$3 = Z$$2 + "_closed";
  var ht = Z$$2 + "_purge";
  var lt = e$$347("<a/>");
  var st$$2 = "div";
  var at = 0;
  var dt = {};
  var ct$$1 = v1864();
  var v3287 = e$$347.colorbox;
  var v9889 = !v3287;
  if (v9889) {
    e$$347(f$$184);
    var v30271 = e$$347.fn;
    Q$$2 = v30271[Y$$2] = e$$347[Y$$2] = v1866;
    Q$$2.position = v1870;
    Q$$2.resize = v1871;
    Q$$2.prep = v1877;
    Q$$2.next = v1878;
    Q$$2.prev = v1879;
    Q$$2.close = v1882;
    Q$$2.remove = v1883;
    Q$$2.element = v1884;
    Q$$2.settings = X$$2;
  }
  return;
}
function v1843(a$$663, b$$652) {
  function v1842(a$$684, b$$677) {
    function v1841(a$$687) {
      var v3288 = a$$687.clientX;
      if (v3288) {
        c$$544.rotate(null);
      }
      return;
    }
    function v1840(a$$686) {
      e$$346();
      return;
    }
    function v1839(b$$678) {
      function v1838() {
        var a$$685 = d$$403.selected;
        var v9890;
        var v19850 = a$$685 = a$$685 + 1;
        var v24359 = c$$544.anchors;
        var v19851 = v24359.length;
        var v15606 = v19850 < v19851;
        if (v15606) {
          v9890 = a$$685;
        } else {
          v9890 = 0;
        }
        var v3289 = v9890;
        c$$544.select(v3289);
        return;
      }
      var v15607 = c$$544.rotation;
      clearTimeout(v15607);
      var v15608 = c$$544;
      var v30959 = setTimeout(v1838, a$$684);
      v15608.rotation = v30959;
      if (b$$678) {
        b$$678.stopPropagation();
      }
      return;
    }
    var c$$544 = this;
    var d$$403 = this.options;
    var v3290 = c$$544._rotate;
    var v9891 = !v3290;
    if (v9891) {
      v3290 = c$$544._rotate = v1839;
    }
    var e$$346 = v3290;
    var v3291 = c$$544._unrotate;
    var v9893 = !v3291;
    if (v9893) {
      var v9892;
      if (b$$677) {
        v9892 = v1840;
      } else {
        v9892 = v1841;
      }
      v3291 = c$$544._unrotate = v9892;
    }
    var f$$183 = v3291;
    var v9894;
    if (a$$684) {
      var v24360 = this.element;
      v24360.bind("tabsshow", e$$346);
      var v24361 = this.anchors;
      var v26402 = d$$403.event;
      var v24362 = v26402 + ".tabs";
      v24361.bind(v24362, f$$183);
      v9894 = e$$346();
    } else {
      var v27825 = c$$544.rotation;
      clearTimeout(v27825);
      var v27826 = this.element;
      v27826.unbind("tabsshow", e$$346);
      var v26403 = this.anchors;
      var v27827 = d$$403.event;
      var v26404 = v27827 + ".tabs";
      v26403.unbind(v26404, f$$183);
      delete this._rotate;
      v9894 = delete this._unrotate;
    }
    v9894;
    return this;
  }
  function v1837() {
    var v3292 = this.anchors;
    return v3292.length;
  }
  function v1836(a$$683, b$$676) {
    var v19852 = this.anchors;
    var v15609 = v19852.eq(a$$683);
    var v9895 = v15609.removeData("cache.tabs");
    v9895.data("load.tabs", b$$676);
    return this;
  }
  function v1835() {
    var v26405 = this.element;
    v26405.queue([]);
    var v26406 = this.panels;
    var v26407 = !1;
    var v26408 = !0;
    v26406.stop(v26407, v26408);
    var v24363 = this.element;
    var v27828 = this.element;
    var v26409 = v27828.queue("tabs");
    var v24364 = v26409.splice(-2, 2);
    v24363.queue("tabs", v24364);
    var v19853 = this.xhr;
    if (v19853) {
      var v26410 = this.xhr;
      v26410.abort();
      delete this.xhr;
    }
    this._cleanup();
    return this;
  }
  function v1834(b$$675) {
    function v1833(a$$682, f$$182, g$$197) {
      c$$543._cleanup();
      var v19854 = c$$543.anchors;
      var v15610 = v19854[b$$675];
      var v19855 = c$$543.panels;
      var v15611 = v19855[b$$675];
      var v9896 = c$$543._ui(v15610, v15611);
      c$$543._trigger("load", null, v9896);
      try {
        var v3293 = d$$402.ajaxOptions;
        v3293.error(a$$682, f$$182, b$$675, e$$345);
      } catch (g$$198) {
      }
      return;
    }
    function v1832(f$$181, g$$196) {
      var v24365 = c$$543.element;
      var v26411 = e$$345.hash;
      var v24366 = c$$543._sanitizeSelector(v26411);
      var v19856 = v24365.find(v24366);
      v19856.html(f$$181);
      c$$543._cleanup();
      var v15612 = d$$402.cache;
      if (v15612) {
        var v19857 = !0;
        a$$663.data(e$$345, "cache.tabs", v19857);
      }
      var v19858 = c$$543.anchors;
      var v15613 = v19858[b$$675];
      var v19859 = c$$543.panels;
      var v15614 = v19859[b$$675];
      var v9897 = c$$543._ui(v15613, v15614);
      c$$543._trigger("load", null, v9897);
      try {
        var v3294 = d$$402.ajaxOptions;
        v3294.success(f$$181, g$$196);
      } catch (h$$161) {
      }
      return;
    }
    b$$675 = this._getIndex(b$$675);
    var c$$543 = this;
    var d$$402 = this.options;
    var v9898 = this.anchors;
    var v3295 = v9898.eq(b$$675);
    var e$$345 = v3295[0];
    var f$$180 = a$$663.data(e$$345, "load.tabs");
    this.abort();
    var v9899 = !f$$180;
    var v15616 = !v9899;
    if (v15616) {
      var v26412 = this.element;
      var v24367 = v26412.queue("tabs");
      var v19860 = v24367.length;
      var v15615 = v19860 !== 0;
      if (v15615) {
        v15615 = a$$663.data(e$$345, "cache.tabs");
      }
      v9899 = v15615;
    }
    var v3297 = v9899;
    if (v3297) {
      var v3296 = this.element;
      v3296.dequeue("tabs");
      return;
    }
    var v9900 = this.lis;
    var v3298 = v9900.eq(b$$675);
    v3298.addClass("ui-state-processing");
    var v3301 = d$$402.spinner;
    if (v3301) {
      var g$$195 = a$$663("span", e$$345);
      var v9901 = g$$195.html();
      var v3299 = g$$195.data("label.tabs", v9901);
      var v3300 = d$$402.spinner;
      v3299.html(v3300);
    }
    var v19861 = d$$402.ajaxOptions;
    var v19862 = {url:f$$180, success:v1832, error:v1833};
    var v15617 = a$$663.extend({}, v19861, v19862);
    var v30960 = a$$663.ajax(v15617);
    this.xhr = v30960;
    var v15618 = c$$543.element;
    v15618.dequeue("tabs");
    return this;
  }
  function v1831(a$$681) {
    a$$681 = this._getIndex(a$$681);
    var v3304 = a$$681 == -1;
    if (v3304) {
      var v15619 = this.options;
      var v9902 = v15619.collapsible;
      if (v9902) {
        var v19863 = this.options;
        var v15620 = v19863.selected;
        v9902 = v15620 != -1;
      }
      var v3303 = v9902;
      if (v3303) {
        var v3302 = this.options;
        a$$681 = v3302.selected;
      } else {
        return this;
      }
    }
    var v15621 = this.anchors;
    var v9903 = v15621.eq(a$$681);
    var v19864 = this.options;
    var v15622 = v19864.event;
    var v9904 = v15622 + ".tabs";
    v9903.trigger(v9904);
    return this;
  }
  function v1830(a$$680) {
    a$$680 = this._getIndex(a$$680);
    var b$$674 = this;
    var c$$542 = this.options;
    var v15623 = c$$542.selected;
    var v9905 = a$$680 != v15623;
    if (v9905) {
      var v27829 = this.lis;
      var v26413 = v27829.eq(a$$680);
      v26413.addClass("ui-state-disabled");
      var v26414 = c$$542.disabled;
      v26414.push(a$$680);
      var v24368 = c$$542.disabled;
      v24368.sort();
      var v26415 = this.anchors;
      var v24369 = v26415[a$$680];
      var v26416 = this.panels;
      var v24370 = v26416[a$$680];
      var v19865 = this._ui(v24369, v24370);
      this._trigger("disable", null, v19865);
    }
    return this;
  }
  function v1829(b$$673) {
    function v1828(a$$679, c$$541) {
      return a$$679 != b$$673;
    }
    b$$673 = this._getIndex(b$$673);
    var c$$540 = this.options;
    var v15624 = c$$540.disabled;
    var v9906 = a$$663.inArray(b$$673, v15624);
    var v3305 = v9906 == -1;
    if (v3305) {
      return;
    }
    var v24371 = this.lis;
    var v19866 = v24371.eq(b$$673);
    v19866.removeClass("ui-state-disabled");
    var v19867 = c$$540;
    var v24372 = c$$540.disabled;
    var v30961 = a$$663.grep(v24372, v1828);
    v19867.disabled = v30961;
    var v24373 = this.anchors;
    var v19868 = v24373[b$$673];
    var v24374 = this.panels;
    var v19869 = v24374[b$$673];
    var v15625 = this._ui(v19868, v19869);
    this._trigger("enable", null, v15625);
    return this;
  }
  function v1827(b$$672) {
    function v1826(a$$678, c$$539) {
      var v3306;
      var v9907 = a$$678 >= b$$672;
      if (v9907) {
        v3306 = a$$678 = a$$678 - 1;
      } else {
        v3306 = a$$678;
      }
      return v3306;
    }
    function v1825(a$$677, c$$538) {
      return a$$677 != b$$672;
    }
    b$$672 = this._getIndex(b$$672);
    var c$$537 = this.options;
    var v9908 = this.lis;
    var v3307 = v9908.eq(b$$672);
    var d$$401 = v3307.remove();
    var v9909 = this.panels;
    var v3308 = v9909.eq(b$$672);
    var e$$344 = v3308.remove();
    var v26417 = d$$401.hasClass("ui-tabs-selected");
    if (v26417) {
      var v28764 = this.anchors;
      var v27830 = v28764.length;
      v26417 = v27830 > 1;
    }
    var v24375 = v26417;
    if (v24375) {
      var v28765;
      var v29777 = b$$672 + 1;
      var v30045 = this.anchors;
      var v29778 = v30045.length;
      var v29395 = v29777 < v29778;
      if (v29395) {
        v28765 = 1;
      } else {
        v28765 = -1;
      }
      var v27831 = v28765;
      var v26418 = b$$672 + v27831;
      this.select(v26418);
    }
    var v24376 = c$$537;
    var v27832 = c$$537.disabled;
    var v26419 = a$$663.grep(v27832, v1825);
    var v30962 = a$$663.map(v26419, v1826);
    v24376.disabled = v30962;
    this._tabify();
    var v24377 = d$$401.find("a");
    var v19870 = v24377[0];
    var v19871 = e$$344[0];
    var v15626 = this._ui(v19870, v19871);
    this._trigger("remove", null, v15626);
    return this;
  }
  function v1824(c$$536, d$$400, e$$343) {
    function v1823() {
      var v15627 = f$$179.anchors;
      var v9910 = v15627[0];
      var v15628 = f$$179.panels;
      var v9911 = v15628[0];
      var v3309 = f$$179._ui(v9910, v9911);
      f$$179._trigger("show", null, v3309);
      return;
    }
    function v1822(a$$676, b$$671) {
      var v3310;
      var v9912 = a$$676 >= e$$343;
      if (v9912) {
        v3310 = a$$676 = a$$676 + 1;
      } else {
        v3310 = a$$676;
      }
      return v3310;
    }
    var v3311 = e$$343 === b$$652;
    if (v3311) {
      var v9913 = this.anchors;
      e$$343 = v9913.length;
    }
    var f$$179 = this;
    var g$$194 = this.options;
    var v15629 = g$$194.tabTemplate;
    var v9914 = v15629.replace(/#\{href\}/g, c$$536);
    var v3312 = v9914.replace(/#\{label\}/g, d$$400);
    var h$$160 = a$$663(v3312);
    var v3313;
    var v9916 = c$$536.indexOf("#");
    if (v9916) {
      var v15630 = a$$663("a", h$$160);
      var v9915 = v15630[0];
      v3313 = this._tabId(v9915);
    } else {
      v3313 = c$$536.replace("#", "");
    }
    var i$$209 = v3313;
    var v3314 = h$$160.addClass("ui-state-default ui-corner-top");
    var v3315 = !0;
    v3314.data("destroy.tabs", v3315);
    var v3316 = f$$179.element;
    var v3317 = "#" + i$$209;
    var j$$108 = v3316.find(v3317);
    var v28766 = j$$108.length;
    var v29398 = !v28766;
    if (v29398) {
      var v30046 = g$$194.panelTemplate;
      var v29779 = a$$663(v30046);
      var v29396 = v29779.attr("id", i$$209);
      var v29397 = !0;
      j$$108 = v29396.data("destroy.tabs", v29397);
    }
    j$$108.addClass("ui-tabs-panel ui-widget-content ui-corner-bottom ui-tabs-hide");
    var v27833;
    var v29780 = this.lis;
    var v29399 = v29780.length;
    var v28767 = e$$343 >= v29399;
    if (v28767) {
      var v29400 = this.list;
      h$$160.appendTo(v29400);
      var v30047 = this.list;
      var v29781 = v30047[0];
      var v29401 = v29781.parentNode;
      v27833 = j$$108.appendTo(v29401);
    } else {
      var v29782 = this.lis;
      var v29402 = v29782[e$$343];
      h$$160.insertBefore(v29402);
      var v29783 = this.panels;
      var v29403 = v29783[e$$343];
      v27833 = j$$108.insertBefore(v29403);
    }
    v27833;
    var v26420 = g$$194;
    var v27834 = g$$194.disabled;
    var v30963 = a$$663.map(v27834, v1822);
    v26420.disabled = v30963;
    this._tabify();
    var v26421 = this.anchors;
    var v24378 = v26421.length;
    var v19872 = v24378 == 1;
    if (v19872) {
      g$$194.selected = 0;
      h$$160.addClass("ui-tabs-selected ui-state-active");
      j$$108.removeClass("ui-tabs-hide");
      var v27835 = this.element;
      v27835.queue("tabs", v1823);
      this.load(0);
    }
    var v24379 = this.anchors;
    var v19873 = v24379[e$$343];
    var v24380 = this.panels;
    var v19874 = v24380[e$$343];
    var v15631 = this._ui(v19873, v19874);
    this._trigger("add", null, v15631);
    return this;
  }
  function v1821() {
    function v1820() {
      var v3318;
      var v9920 = a$$663.data(this, "destroy.tabs");
      if (v9920) {
        var v9917 = a$$663(this);
        v3318 = v9917.remove();
      } else {
        var v9918 = a$$663(this);
        var v15632 = ["ui-state-default", "ui-corner-top", "ui-tabs-selected", "ui-state-active", "ui-state-hover", "ui-state-focus", "ui-state-disabled", "ui-tabs-panel", "ui-widget-content", "ui-corner-bottom", "ui-tabs-hide"];
        var v9919 = v15632.join(" ");
        v3318 = v9918.removeClass(v9919);
      }
      v3318;
      return;
    }
    function v1819() {
      function v1818(a$$675, b$$670) {
        var v3319 = b$$670 + ".tabs";
        c$$535.removeData(v3319);
        return;
      }
      var b$$669 = a$$663.data(this, "href.tabs");
      if (b$$669) {
        this.href = b$$669;
      }
      var v3320 = a$$663(this);
      var c$$535 = v3320.unbind(".tabs");
      var v3321 = ["href", "load", "cache"];
      a$$663.each(v3321, v1818);
      return;
    }
    var b$$668 = this.options;
    this.abort();
    var v29404 = this.element;
    var v28768 = v29404.unbind(".tabs");
    var v27836 = v28768.removeClass("ui-tabs ui-widget ui-widget-content ui-corner-all ui-tabs-collapsible");
    v27836.removeData("tabs");
    var v26422 = this.list;
    v26422.removeClass("ui-tabs-nav ui-helper-reset ui-helper-clearfix ui-widget-header ui-corner-all");
    var v24381 = this.anchors;
    v24381.each(v1819);
    var v26423 = this.lis;
    var v24382 = v26423.unbind(".tabs");
    var v24383 = this.panels;
    var v19875 = v24382.add(v24383);
    v19875.each(v1820);
    var v15633 = b$$668.cookie;
    if (v15633) {
      var v19876 = b$$668.cookie;
      this._cookie(null, v19876);
    }
    return this;
  }
  function v1817(a$$674) {
    var v15634 = typeof a$$674;
    var v9921 = v15634 == "string";
    if (v9921) {
      var v15635 = this.anchors;
      var v19877 = this.anchors;
      var v24384 = "[href$='" + a$$674;
      var v19878 = v24384 + "']";
      var v15636 = v19877.filter(v19878);
      a$$674 = v15635.index(v15636);
    }
    return a$$674;
  }
  function v1816(c$$528) {
    function v1815() {
      return!1;
    }
    function v1814() {
      function v1813() {
        n$$95(b$$667, g$$193);
        return;
      }
      function v1812() {
        o$$25(b$$667, f$$178);
        return;
      }
      function v1811() {
        n$$95(b$$667, g$$193);
        return;
      }
      function v1810() {
        o$$25(b$$667, f$$178);
        return;
      }
      var b$$667 = this;
      var v3322 = a$$663(b$$667);
      var c$$534 = v3322.closest("li");
      var v3323 = d$$399.panels;
      var f$$178 = v3323.filter(":not(.ui-tabs-hide)");
      var v3324 = d$$399.element;
      var v9922 = b$$667.hash;
      var v3325 = d$$399._sanitizeSelector(v9922);
      var g$$193 = v3324.find(v3325);
      var v26424 = c$$534.hasClass("ui-tabs-selected");
      if (v26424) {
        var v27837 = e$$342.collapsible;
        v26424 = !v27837;
      }
      var v24385 = v26424;
      var v26425 = !v24385;
      if (v26425) {
        v24385 = c$$534.hasClass("ui-state-disabled");
      }
      var v19879 = v24385;
      var v24386 = !v19879;
      if (v24386) {
        v19879 = c$$534.hasClass("ui-state-processing");
      }
      var v15637 = v19879;
      var v19881 = !v15637;
      if (v19881) {
        var v24387 = d$$399.panels;
        var v19880 = v24387.filter(":animated");
        v15637 = v19880.length;
      }
      var v9923 = v15637;
      var v15640 = !v9923;
      if (v15640) {
        var v24388 = g$$193[0];
        var v19882 = d$$399._ui(this, v24388);
        var v15638 = d$$399._trigger("select", null, v19882);
        var v15639 = !1;
        v9923 = v15638 === v15639;
      }
      var v3326 = v9923;
      if (v3326) {
        this.blur();
        return!1;
      }
      var v9924 = e$$342;
      var v15641 = d$$399.anchors;
      var v30964 = v15641.index(this);
      v9924.selected = v30964;
      d$$399.abort();
      var v3329 = e$$342.collapsible;
      if (v3329) {
        var v3327 = c$$534.hasClass("ui-tabs-selected");
        if (v3327) {
          e$$342.selected = -1;
          var v24389 = e$$342.cookie;
          if (v24389) {
            var v26426 = e$$342.selected;
            var v26427 = e$$342.cookie;
            d$$399._cookie(v26426, v26427);
          }
          var v24390 = d$$399.element;
          var v19883 = v24390.queue("tabs", v1810);
          v19883.dequeue("tabs");
          this.blur();
          return!1;
        }
        var v9925 = f$$178.length;
        var v3328 = !v9925;
        if (v3328) {
          var v24391 = e$$342.cookie;
          if (v24391) {
            var v26428 = e$$342.selected;
            var v26429 = e$$342.cookie;
            d$$399._cookie(v26428, v26429);
          }
          var v24392 = d$$399.element;
          v24392.queue("tabs", v1811);
          var v24393 = d$$399.anchors;
          var v19884 = v24393.index(this);
          d$$399.load(v19884);
          this.blur();
          return!1;
        }
      }
      var v3330 = e$$342.cookie;
      if (v3330) {
        var v9926 = e$$342.selected;
        var v9927 = e$$342.cookie;
        d$$399._cookie(v9926, v9927);
      }
      var v3331 = g$$193.length;
      if (v3331) {
        var v15642 = f$$178.length;
        if (v15642) {
          var v19885 = d$$399.element;
          v19885.queue("tabs", v1812);
        }
        var v15643 = d$$399.element;
        v15643.queue("tabs", v1813);
        var v15644 = d$$399.anchors;
        var v9928 = v15644.index(this);
        d$$399.load(v9928);
      } else {
        throw "jQuery UI Tabs: Mismatching fragment identifier.";
      }
      var v9929 = a$$663.browser;
      var v3332 = v9929.msie;
      if (v3332) {
        this.blur();
      }
      return;
    }
    function v1809(a$$673, b$$666, c$$533) {
      var v15645 = d$$399.lis;
      v15645.removeClass("ui-tabs-selected ui-state-active");
      b$$666.addClass("ui-tabs-hide");
      var v9930 = d$$399.element;
      v9930.dequeue("tabs");
      return;
    }
    function v1808(a$$672, b$$665) {
      function v1807() {
        var v19886 = d$$399.lis;
        v19886.removeClass("ui-tabs-selected ui-state-active");
        b$$665.addClass("ui-tabs-hide");
        m$$49(b$$665, k$$74);
        var v9931 = d$$399.element;
        v9931.dequeue("tabs");
        return;
      }
      var v9932 = k$$74.duration;
      var v15646 = !v9932;
      if (v15646) {
        v9932 = "normal";
      }
      var v3333 = v9932;
      b$$665.animate(k$$74, v3333, v1807);
      return;
    }
    function v1806(b$$664, c$$532) {
      var v19887 = a$$663(b$$664);
      var v15647 = v19887.closest("li");
      v15647.addClass("ui-tabs-selected ui-state-active");
      c$$532.removeClass("ui-tabs-hide");
      var v15648 = c$$532[0];
      var v9933 = d$$399._ui(b$$664, v15648);
      d$$399._trigger("show", null, v9933);
      return;
    }
    function v1805(b$$663, c$$531) {
      function v1804() {
        m$$49(c$$531, l$$80);
        var v15649 = c$$531[0];
        var v9934 = d$$399._ui(b$$663, v15649);
        d$$399._trigger("show", null, v9934);
        return;
      }
      var v15650 = a$$663(b$$663);
      var v9935 = v15650.closest("li");
      v9935.addClass("ui-tabs-selected ui-state-active");
      var v15651 = c$$531.hide();
      var v9936 = v15651.removeClass("ui-tabs-hide");
      var v15652 = l$$80.duration;
      var v19888 = !v15652;
      if (v19888) {
        v15652 = "normal";
      }
      var v9937 = v15652;
      v9936.animate(l$$80, v9937, v1804);
      return;
    }
    function v1803() {
      var v3334 = a$$663(this);
      var b$$inline_78 = v3334.closest("li");
      var v3335 = "ui-state-" + "focus";
      b$$inline_78.removeClass(v3335);
      return;
    }
    function v1802() {
      var v9938 = a$$663(this);
      var v3336 = v9938.closest("li");
      i$$207("focus", v3336);
      return;
    }
    function v1801() {
      var b$$inline_75 = a$$663(this);
      var v3337 = "ui-state-" + "hover";
      b$$inline_75.removeClass(v3337);
      return;
    }
    function v1800() {
      var v3338 = a$$663(this);
      i$$207("hover", v3338);
      return;
    }
    function v1799(a$$670, b$$661) {
      var v3339 = b$$661.is(":not(.ui-state-disabled)");
      if (v3339) {
        var v9939 = "ui-state-" + a$$670;
        b$$661.addClass(v9939);
      }
      return;
    }
    function v1798() {
      var v15653 = d$$399.lis;
      var v15654 = d$$399.anchors;
      var v9940 = v15653.add(v15654);
      v9940.unbind(".tabs");
      d$$399.lis = d$$399.anchors = d$$399.panels = null;
      return;
    }
    function v1797() {
      var v15655 = d$$399.anchors;
      var v15656 = e$$342.selected;
      var v9941 = v15655[v15656];
      var v19889 = d$$399.element;
      var v27838 = d$$399.anchors;
      var v27839 = e$$342.selected;
      var v26430 = v27838[v27839];
      var v24394 = v26430.hash;
      var v19890 = d$$399._sanitizeSelector(v24394);
      var v15657 = v19889.find(v19890);
      var v9942 = v15657[0];
      var v3340 = d$$399._ui(v9941, v9942);
      d$$399._trigger("show", null, v3340);
      return;
    }
    function v1796(a$$669, b$$660) {
      var v3341 = d$$399.lis;
      return v3341.index(a$$669);
    }
    function v1795(a$$668, b$$659) {
      var v9943 = b$$659.hash;
      var v9944 = location.hash;
      var v3342 = v9943 == v9944;
      if (v3342) {
        e$$342.selected = a$$668;
        return!1;
      }
      return;
    }
    function v1794(b$$658, c$$530) {
      var v3343 = a$$663(c$$530);
      var g$$192 = v3343.attr("href");
      var v3344 = g$$192.split("#");
      var h$$159 = v3344[0];
      var i$$208;
      var v9945 = h$$159;
      if (v9945) {
        var v26431 = location.toString();
        var v24395 = v26431.split("#");
        var v19891 = v24395[0];
        var v15658 = h$$159 === v19891;
        var v19893 = !v15658;
        if (v19893) {
          var v24396 = a$$663("base");
          var v19892 = i$$208 = v24396[0];
          if (v19892) {
            var v24397 = i$$208.href;
            v19892 = h$$159 === v24397;
          }
          v15658 = v19892;
        }
        v9945 = v15658;
      }
      var v3345 = v9945;
      if (v3345) {
        g$$192 = c$$530.hash;
        c$$530.href = g$$192;
      }
      var v3351 = f$$177.test(g$$192);
      if (v3351) {
        var v3346 = d$$399;
        var v9946 = d$$399.panels;
        var v15659 = d$$399.element;
        var v15660 = d$$399._sanitizeSelector(g$$192);
        var v9947 = v15659.find(v15660);
        var v30965 = v9946.add(v9947);
        v3346.panels = v30965;
      } else {
        var v9948 = g$$192;
        if (v9948) {
          v9948 = g$$192 !== "#";
        }
        var v3350 = v9948;
        if (v3350) {
          a$$663.data(c$$530, "href.tabs", g$$192);
          var v9949 = g$$192.replace(/#.*$/, "");
          a$$663.data(c$$530, "load.tabs", v9949);
          var j$$107 = d$$399._tabId(c$$530);
          c$$530.href = "#" + j$$107;
          var v3347 = d$$399.element;
          var v3348 = "#" + j$$107;
          var k$$75 = v3347.find(v3348);
          var v9950 = k$$75.length;
          var v15661 = !v9950;
          if (v15661) {
            var v27840 = e$$342.panelTemplate;
            var v26432 = a$$663(v27840);
            var v24398 = v26432.attr("id", j$$107);
            var v19894 = v24398.addClass("ui-tabs-panel ui-widget-content ui-corner-bottom");
            var v26433 = d$$399.panels;
            var v26434 = b$$658 - 1;
            var v24399 = v26433[v26434];
            var v26435 = !v24399;
            if (v26435) {
              v24399 = d$$399.list;
            }
            var v19895 = v24399;
            k$$75 = v19894.insertAfter(v19895);
            var v19896 = !0;
            k$$75.data("destroy.tabs", v19896);
          }
          var v9951 = d$$399;
          var v15662 = d$$399.panels;
          var v30966 = v15662.add(k$$75);
          v9951.panels = v30966;
        } else {
          var v3349 = e$$342.disabled;
          v3349.push(b$$658);
        }
      }
      return;
    }
    function v1793() {
      var v3352 = a$$663("a", this);
      return v3352[0];
    }
    function m$$49(b$$657, c$$529) {
      b$$657.css("display", "");
      var v24400 = a$$663.support;
      var v19897 = v24400.opacity;
      var v15663 = !v19897;
      if (v15663) {
        v15663 = c$$529.opacity;
      }
      var v9952 = v15663;
      if (v9952) {
        var v19898 = b$$657[0];
        var v15664 = v19898.style;
        v15664.removeAttribute("filter");
      }
      return;
    }
    var d$$399 = this;
    var e$$342 = this.options;
    var f$$177 = /^#.+/;
    var v29405 = this.element;
    var v28769 = v29405.find("ol,ul");
    var v30967 = v28769.eq(0);
    this.list = v30967;
    var v28770 = this.list;
    var v30968 = a$$663(" > li:has(a[href])", v28770);
    this.lis = v30968;
    var v27841 = this.lis;
    var v30969 = v27841.map(v1793);
    this.anchors = v30969;
    var v30970 = a$$663([]);
    this.panels = v30970;
    var v24401 = this.anchors;
    v24401.each(v1794);
    var v19899;
    if (c$$528) {
      var v30708 = this.element;
      v30708.addClass("ui-tabs ui-widget ui-widget-content ui-corner-all");
      var v30709 = this.list;
      v30709.addClass("ui-tabs-nav ui-helper-reset ui-helper-clearfix ui-widget-header ui-corner-all");
      var v30651 = this.lis;
      v30651.addClass("ui-state-default ui-corner-top");
      var v30563 = this.panels;
      v30563.addClass("ui-tabs-panel ui-widget-content ui-corner-bottom");
      var v30428;
      var v30652 = e$$342.selected;
      var v30565 = v30652 === b$$652;
      if (v30565) {
        var v30756 = location.hash;
        if (v30756) {
          var v30785 = this.anchors;
          v30785.each(v1795);
        }
        var v30833 = e$$342.selected;
        var v30811 = typeof v30833;
        var v30786 = v30811 != "number";
        if (v30786) {
          v30786 = e$$342.cookie;
        }
        var v30757 = v30786;
        if (v30757) {
          var v30787 = e$$342;
          var v30812 = d$$399._cookie();
          var v30971 = parseInt(v30812, 10);
          v30787.selected = v30971;
        }
        var v30813 = e$$342.selected;
        var v30788 = typeof v30813;
        var v30758 = v30788 != "number";
        if (v30758) {
          var v30814 = this.lis;
          var v30789 = v30814.filter(".ui-tabs-selected");
          v30758 = v30789.length;
        }
        var v30710 = v30758;
        if (v30710) {
          var v30759 = e$$342;
          var v30790 = this.lis;
          var v30815 = this.lis;
          var v30791 = v30815.filter(".ui-tabs-selected");
          var v30972 = v30790.index(v30791);
          v30759.selected = v30972;
        }
        var v30653 = e$$342.selected;
        var v30712 = !v30653;
        if (v30712) {
          var v30711;
          var v30792 = this.lis;
          var v30760 = v30792.length;
          if (v30760) {
            v30711 = 0;
          } else {
            v30711 = -1;
          }
          v30653 = v30711;
        }
        v30428 = e$$342.selected = v30653;
      } else {
        var v30654 = e$$342.selected;
        var v30564 = v30654 === null;
        if (v30564) {
          v30564 = e$$342.selected = -1;
        }
        v30428 = v30564;
      }
      v30428;
      var v30272;
      var v30713 = e$$342.selected;
      var v30655 = v30713 >= 0;
      if (v30655) {
        var v30714 = this.anchors;
        var v30715 = e$$342.selected;
        v30655 = v30714[v30715];
      }
      var v30566 = v30655;
      var v30657 = !v30566;
      if (v30657) {
        var v30656 = e$$342.selected;
        v30566 = v30656 < 0;
      }
      var v30429 = v30566;
      if (v30429) {
        v30272 = e$$342.selected;
      } else {
        v30272 = 0;
      }
      e$$342.selected = v30272;
      var v30048 = e$$342;
      var v30567 = e$$342.disabled;
      var v30716 = this.lis;
      var v30658 = v30716.filter(".ui-state-disabled");
      var v30568 = a$$663.map(v30658, v1796);
      var v30430 = v30567.concat(v30568);
      var v30273 = a$$663.unique(v30430);
      var v30973 = v30273.sort();
      v30048.disabled = v30973;
      var v30274 = e$$342.selected;
      var v30275 = e$$342.disabled;
      var v30049 = a$$663.inArray(v30274, v30275);
      var v29784 = v30049 != -1;
      if (v29784) {
        var v30050 = e$$342.disabled;
        var v30276 = e$$342.selected;
        var v30277 = e$$342.disabled;
        var v30051 = a$$663.inArray(v30276, v30277);
        v30050.splice(v30051, 1);
      }
      var v29406 = this.panels;
      v29406.addClass("ui-tabs-hide");
      var v28771 = this.lis;
      v28771.removeClass("ui-tabs-selected ui-state-active");
      var v29407 = e$$342.selected;
      var v28772 = v29407 >= 0;
      if (v28772) {
        var v29408 = this.anchors;
        v28772 = v29408.length;
      }
      var v27842 = v28772;
      if (v27842) {
        var v30278 = d$$399.element;
        var v30659 = d$$399.anchors;
        var v30660 = e$$342.selected;
        var v30569 = v30659[v30660];
        var v30431 = v30569.hash;
        var v30279 = d$$399._sanitizeSelector(v30431);
        var v30052 = v30278.find(v30279);
        v30052.removeClass("ui-tabs-hide");
        var v30280 = this.lis;
        var v30281 = e$$342.selected;
        var v30053 = v30280.eq(v30281);
        v30053.addClass("ui-tabs-selected ui-state-active");
        var v29785 = d$$399.element;
        v29785.queue("tabs", v1797);
        var v29409 = e$$342.selected;
        this.load(v29409);
      }
      var v26436 = a$$663(window);
      v19899 = v26436.bind("unload", v1798);
    } else {
      var v24402 = e$$342;
      var v26437 = this.lis;
      var v27843 = this.lis;
      var v26438 = v27843.filter(".ui-tabs-selected");
      var v30974 = v26437.index(v26438);
      v19899 = v24402.selected = v30974;
    }
    v19899;
    var v15665 = this.element;
    var v19900;
    var v24403 = e$$342.collapsible;
    if (v24403) {
      v19900 = "addClass";
    } else {
      v19900 = "removeClass";
    }
    var v15666 = v19900;
    v15665[v15666]("ui-tabs-collapsible");
    var v9953 = e$$342.cookie;
    if (v9953) {
      var v15667 = e$$342.selected;
      var v15668 = e$$342.cookie;
      this._cookie(v15667, v15668);
    }
    var g$$191 = 0;
    var h$$158;
    var v9954 = this.lis;
    var v3355 = h$$158 = v9954[g$$191];
    for (;v3355;) {
      var v3353 = a$$663(h$$158);
      var v9955;
      var v26439 = e$$342.disabled;
      var v24404 = a$$663.inArray(g$$191, v26439);
      var v19901 = v24404 != -1;
      if (v19901) {
        var v26440 = a$$663(h$$158);
        var v24405 = v26440.hasClass("ui-tabs-selected");
        v19901 = !v24405;
      }
      var v15669 = v19901;
      if (v15669) {
        v9955 = "addClass";
      } else {
        v9955 = "removeClass";
      }
      var v3354 = v9955;
      v3353[v3354]("ui-state-disabled");
      g$$191++;
      var v9956 = this.lis;
      v3355 = h$$158 = v9956[g$$191];
    }
    var v15670 = e$$342.cache;
    var v15671 = !1;
    var v9957 = v15670 === v15671;
    if (v9957) {
      var v15672 = this.anchors;
      v15672.removeData("cache.tabs");
    }
    var v15673 = this.lis;
    var v15674 = this.anchors;
    var v9958 = v15673.add(v15674);
    v9958.unbind(".tabs");
    var v9959 = e$$342.event;
    var v3356 = v9959 !== "mouseover";
    if (v3356) {
      var i$$207 = v1799;
      var v19902 = this.lis;
      v19902.bind("mouseover.tabs", v1800);
      var v19903 = this.lis;
      v19903.bind("mouseout.tabs", v1801);
      var v15675 = this.anchors;
      v15675.bind("focus.tabs", v1802);
      var v9960 = this.anchors;
      v9960.bind("blur.tabs", v1803);
    }
    var k$$74;
    var l$$80;
    var v3357 = e$$342.fx;
    if (v3357) {
      var v9961;
      var v19904 = e$$342.fx;
      var v15676 = a$$663.isArray(v19904);
      if (v15676) {
        var v19905 = e$$342.fx;
        k$$74 = v19905[0];
        var v19906 = e$$342.fx;
        v9961 = l$$80 = v19906[1];
      } else {
        v9961 = k$$74 = l$$80 = e$$342.fx;
      }
      v9961;
    }
    var v3358;
    if (l$$80) {
      v3358 = v1805;
    } else {
      v3358 = v1806;
    }
    var n$$95 = v3358;
    var v3359;
    if (k$$74) {
      v3359 = v1808;
    } else {
      v3359 = v1809;
    }
    var o$$25 = v3359;
    var v9962 = this.anchors;
    var v15677 = e$$342.event;
    var v9963 = v15677 + ".tabs";
    v9962.bind(v9963, v1814);
    var v9964 = this.anchors;
    v9964.bind("click.tabs", v1815);
    return;
  }
  function v1792() {
    function v1791() {
      var b$$656 = a$$663(this);
      var v9965 = b$$656.data("label.tabs");
      var v3360 = b$$656.html(v9965);
      v3360.removeData("label.tabs");
      return;
    }
    var v19907 = this.lis;
    var v15678 = v19907.filter(".ui-state-processing");
    var v9966 = v15678.removeClass("ui-state-processing");
    var v3361 = v9966.find("span:data(label.tabs)");
    v3361.each(v1791);
    return;
  }
  function v1790(a$$667, b$$655) {
    var v9967 = this.anchors;
    var v3362 = v9967.index(a$$667);
    return{tab:a$$667, panel:b$$655, index:v3362};
  }
  function v1789() {
    var v3363 = this.cookie;
    var v9969 = !v3363;
    if (v9969) {
      var v19908 = this.options;
      var v15679 = v19908.cookie;
      var v9968 = v15679.name;
      var v15681 = !v9968;
      if (v15681) {
        var v15680 = d$$398 = d$$398 + 1;
        v9968 = "ui-tabs-" + v15680;
      }
      v3363 = this.cookie = v9968;
    }
    var b$$654 = v3363;
    var v3364 = a$$663.cookie;
    var v9970 = [b$$654];
    var v9971 = a$$663.makeArray(arguments);
    var v3365 = v9970.concat(v9971);
    return v3364.apply(null, v3365);
  }
  function v1788(a$$666) {
    return a$$666.replace(/:/g, "\\:");
  }
  function v1787(a$$665) {
    var v9972 = a$$665.title;
    if (v9972) {
      var v19909 = a$$665.title;
      var v15682 = v19909.replace(/\s/g, "_");
      v9972 = v15682.replace(/[^\w\u00c0-\uFFFF-]/g, "");
    }
    var v3366 = v9972;
    var v9975 = !v3366;
    if (v9975) {
      var v15683 = this.options;
      var v9973 = v15683.idPrefix;
      var v9974 = c$$527 = c$$527 + 1;
      v3366 = v9973 + v9974;
    }
    return v3366;
  }
  function v1786(a$$664, b$$653) {
    var v3368 = a$$664 == "selected";
    if (v3368) {
      var v15684 = this.options;
      var v9976 = v15684.collapsible;
      if (v9976) {
        var v19910 = this.options;
        var v15685 = v19910.selected;
        v9976 = b$$653 == v15685;
      }
      var v3367 = v9976;
      if (v3367) {
        return;
      }
      this.select(b$$653);
    } else {
      var v9977 = this.options;
      v9977[a$$664] = b$$653;
      this._tabify();
    }
    return;
  }
  function v1785() {
    var v3369 = !0;
    this._tabify(v3369);
    return;
  }
  var c$$527 = 0;
  var d$$398 = 0;
  var v24406 = !1;
  var v24407 = !1;
  var v19911 = {add:null, ajaxOptions:null, cache:v24406, cookie:null, collapsible:v24407, disable:null, disabled:[], enable:null, event:"click", fx:null, idPrefix:"ui-tabs-", load:null, panelTemplate:"<div></div>", remove:null, select:null, show:null, spinner:"<em>Loading&#8230;</em>", tabTemplate:"<li><a href='#{href}'><span>#{label}</span></a></li>"};
  var v15686 = {options:v19911, _create:v1785, _setOption:v1786, _tabId:v1787, _sanitizeSelector:v1788, _cookie:v1789, _ui:v1790, _cleanup:v1792, _tabify:v1816, _getIndex:v1817, destroy:v1821, add:v1824, remove:v1827, enable:v1829, disable:v1830, select:v1831, load:v1834, abort:v1835, url:v1836, length:v1837};
  a$$663.widget("ui.tabs", v15686);
  var v19912 = a$$663.ui;
  var v15687 = v19912.tabs;
  var v15688 = {version:"1.8.24"};
  a$$663.extend(v15687, v15688);
  var v19913 = a$$663.ui;
  var v15689 = v19913.tabs;
  var v9978 = v15689.prototype;
  var v9979 = {rotation:null, rotate:v1842};
  a$$663.extend(v9978, v9979);
  return;
}
function v1784(a$$649, b$$635) {
  function v1783() {
    function v1782(b$$651, i$$206) {
      var v27844 = d$$397.values(b$$651);
      var v28773 = d$$397.options;
      var v27845 = v28773.min;
      var v26441 = v27844 - v27845;
      var v28774 = d$$397.options;
      var v27846 = v28774.max;
      var v28775 = d$$397.options;
      var v27847 = v28775.min;
      var v26442 = v27846 - v27847;
      var v24408 = v26441 / v26442;
      f$$175 = v24408 * 100;
      var v26443;
      var v28776 = d$$397.orientation;
      var v27848 = v28776 === "horizontal";
      if (v27848) {
        v26443 = "left";
      } else {
        v26443 = "bottom";
      }
      var v24409 = v26443;
      g$$190[v24409] = f$$175 + "%";
      var v24410 = a$$649(this);
      var v19914 = v24410.stop(1, 1);
      var v24411;
      if (e$$340) {
        v24411 = "animate";
      } else {
        v24411 = "css";
      }
      var v19915 = v24411;
      var v19916 = c$$526.animate;
      v19914[v19915](g$$190, v19916);
      var v24412 = d$$397.options;
      var v19917 = v24412.range;
      var v19918 = !0;
      var v15690 = v19917 === v19918;
      if (v15690) {
        var v19919;
        var v26444 = d$$397.orientation;
        var v24413 = v26444 === "horizontal";
        if (v24413) {
          var v26445 = b$$651 === 0;
          if (v26445) {
            var v28777 = d$$397.range;
            var v27849 = v28777.stop(1, 1);
            var v28778;
            if (e$$340) {
              v28778 = "animate";
            } else {
              v28778 = "css";
            }
            var v27850 = v28778;
            var v28779 = f$$175 + "%";
            var v27851 = {left:v28779};
            var v27852 = c$$526.animate;
            v27849[v27850](v27851, v27852);
          }
          var v26446 = b$$651 === 1;
          if (v26446) {
            var v27853 = d$$397.range;
            var v28780;
            if (e$$340) {
              v28780 = "animate";
            } else {
              v28780 = "css";
            }
            var v27854 = v28780;
            var v29410 = f$$175 - h$$157;
            var v28781 = v29410 + "%";
            var v27855 = {width:v28781};
            var v28782 = !1;
            var v28783 = c$$526.animate;
            var v27856 = {queue:v28782, duration:v28783};
            v26446 = v27853[v27854](v27855, v27856);
          }
          v19919 = v26446;
        } else {
          var v26447 = b$$651 === 0;
          if (v26447) {
            var v28784 = d$$397.range;
            var v27857 = v28784.stop(1, 1);
            var v28785;
            if (e$$340) {
              v28785 = "animate";
            } else {
              v28785 = "css";
            }
            var v27858 = v28785;
            var v28786 = f$$175 + "%";
            var v27859 = {bottom:v28786};
            var v27860 = c$$526.animate;
            v27857[v27858](v27859, v27860);
          }
          var v26448 = b$$651 === 1;
          if (v26448) {
            var v27861 = d$$397.range;
            var v28787;
            if (e$$340) {
              v28787 = "animate";
            } else {
              v28787 = "css";
            }
            var v27862 = v28787;
            var v29411 = f$$175 - h$$157;
            var v28788 = v29411 + "%";
            var v27863 = {height:v28788};
            var v28789 = !1;
            var v28790 = c$$526.animate;
            var v27864 = {queue:v28789, duration:v28790};
            v26448 = v27861[v27862](v27863, v27864);
          }
          v19919 = v26448;
        }
        v19919;
      }
      h$$157 = f$$175;
      return;
    }
    var v3370 = this.options;
    var b$$650 = v3370.range;
    var c$$526 = this.options;
    var d$$397 = this;
    var v3371;
    var v9980 = this._animateOff;
    if (v9980) {
      v3371 = !1;
    } else {
      v3371 = c$$526.animate;
    }
    var e$$340 = v3371;
    var f$$175;
    var g$$190 = {};
    var h$$157;
    var i$$205;
    var j$$105;
    var k$$73;
    var v3372;
    var v19920 = this.options;
    var v15691 = v19920.values;
    if (v15691) {
      var v24414 = this.options;
      var v19921 = v24414.values;
      v15691 = v19921.length;
    }
    var v9982 = v15691;
    if (v9982) {
      var v9981 = this.handles;
      v3372 = v9981.each(v1782);
    } else {
      i$$205 = this.value();
      var v30054 = this.options;
      j$$105 = v30054.min;
      var v29786 = this.options;
      k$$73 = v29786.max;
      var v29412;
      var v29788 = k$$73 !== j$$105;
      if (v29788) {
        var v30055 = i$$205 - j$$105;
        var v30056 = k$$73 - j$$105;
        var v29787 = v30055 / v30056;
        v29412 = v29787 * 100;
      } else {
        v29412 = 0;
      }
      f$$175 = v29412;
      var v29413;
      var v30057 = d$$397.orientation;
      var v29789 = v30057 === "horizontal";
      if (v29789) {
        v29413 = "left";
      } else {
        v29413 = "bottom";
      }
      var v28791 = v29413;
      g$$190[v28791] = f$$175 + "%";
      var v28792 = this.handle;
      var v27865 = v28792.stop(1, 1);
      var v28793;
      if (e$$340) {
        v28793 = "animate";
      } else {
        v28793 = "css";
      }
      var v27866 = v28793;
      var v27867 = c$$526.animate;
      v27865[v27866](g$$190, v27867);
      var v27868 = b$$650 === "min";
      if (v27868) {
        var v28794 = this.orientation;
        v27868 = v28794 === "horizontal";
      }
      var v26449 = v27868;
      if (v26449) {
        var v28795 = this.range;
        var v27869 = v28795.stop(1, 1);
        var v28796;
        if (e$$340) {
          v28796 = "animate";
        } else {
          v28796 = "css";
        }
        var v27870 = v28796;
        var v28797 = f$$175 + "%";
        var v27871 = {width:v28797};
        var v27872 = c$$526.animate;
        v27869[v27870](v27871, v27872);
      }
      var v26450 = b$$650 === "max";
      if (v26450) {
        var v27873 = this.orientation;
        v26450 = v27873 === "horizontal";
      }
      var v24415 = v26450;
      if (v24415) {
        var v26451 = this.range;
        var v27874;
        if (e$$340) {
          v27874 = "animate";
        } else {
          v27874 = "css";
        }
        var v26452 = v27874;
        var v28798 = 100 - f$$175;
        var v27875 = v28798 + "%";
        var v26453 = {width:v27875};
        var v27876 = !1;
        var v27877 = c$$526.animate;
        var v26454 = {queue:v27876, duration:v27877};
        v26451[v26452](v26453, v26454);
      }
      var v24416 = b$$650 === "min";
      if (v24416) {
        var v26455 = this.orientation;
        v24416 = v26455 === "vertical";
      }
      var v19922 = v24416;
      if (v19922) {
        var v26456 = this.range;
        var v24417 = v26456.stop(1, 1);
        var v26457;
        if (e$$340) {
          v26457 = "animate";
        } else {
          v26457 = "css";
        }
        var v24418 = v26457;
        var v26458 = f$$175 + "%";
        var v24419 = {height:v26458};
        var v24420 = c$$526.animate;
        v24417[v24418](v24419, v24420);
      }
      var v19923 = b$$650 === "max";
      if (v19923) {
        var v24421 = this.orientation;
        v19923 = v24421 === "vertical";
      }
      var v15692 = v19923;
      if (v15692) {
        var v19924 = this.range;
        var v24422;
        if (e$$340) {
          v24422 = "animate";
        } else {
          v24422 = "css";
        }
        var v19925 = v24422;
        var v26459 = 100 - f$$175;
        var v24423 = v26459 + "%";
        var v19926 = {height:v24423};
        var v24424 = !1;
        var v24425 = c$$526.animate;
        var v19927 = {queue:v24424, duration:v24425};
        v15692 = v19924[v19925](v19926, v19927);
      }
      v3372 = v15692;
    }
    v3372;
    return;
  }
  function v1781() {
    var v3373 = this.options;
    return v3373.max;
  }
  function v1780() {
    var v3374 = this.options;
    return v3374.min;
  }
  function v1779(a$$662) {
    var v15693 = this.options;
    var v9983 = v15693.min;
    var v3376 = a$$662 <= v9983;
    if (v3376) {
      var v3375 = this.options;
      return v3375.min;
    }
    var v15694 = this.options;
    var v9984 = v15694.max;
    var v3378 = a$$662 >= v9984;
    if (v3378) {
      var v3377 = this.options;
      return v3377.max;
    }
    var v3379;
    var v19928 = this.options;
    var v15695 = v19928.step;
    var v9986 = v15695 > 0;
    if (v9986) {
      var v9985 = this.options;
      v3379 = v9985.step;
    } else {
      v3379 = 1;
    }
    var b$$649 = v3379;
    var v15696 = this.options;
    var v9987 = v15696.min;
    var v3380 = a$$662 - v9987;
    var c$$525 = v3380 % b$$649;
    var d$$396 = a$$662 - c$$525;
    var v19929 = Math.abs(c$$525);
    var v15697 = v19929 * 2;
    var v9988 = v15697 >= b$$649;
    if (v9988) {
      var v24426;
      var v26460 = c$$525 > 0;
      if (v26460) {
        v24426 = b$$649;
      } else {
        v24426 = -b$$649;
      }
      var v19930 = v24426;
      d$$396 = d$$396 + v19930;
    }
    var v9989 = d$$396.toFixed(5);
    return parseFloat(v9989);
  }
  function v1778(a$$661) {
    var b$$648;
    var c$$524;
    var d$$395;
    var v3381 = arguments.length;
    if (v3381) {
      var v19931 = this.options;
      var v15698 = v19931.values;
      b$$648 = v15698[a$$661];
      b$$648 = this._trimAlignValue(b$$648);
      return b$$648;
    }
    var v9990 = this.options;
    var v3382 = v9990.values;
    c$$524 = v3382.slice();
    d$$395 = 0;
    var v9991 = c$$524.length;
    var v3384 = d$$395 < v9991;
    for (;v3384;) {
      var v3383 = c$$524[d$$395];
      var v30975 = this._trimAlignValue(v3383);
      c$$524[d$$395] = v30975;
      d$$395 = d$$395 + 1;
      var v9992 = c$$524.length;
      v3384 = d$$395 < v9992;
    }
    return c$$524;
  }
  function v1777() {
    var v3385 = this.options;
    var a$$660 = v3385.value;
    a$$660 = this._trimAlignValue(a$$660);
    return a$$660;
  }
  function v1776(b$$647, c$$523) {
    var d$$394;
    var e$$339 = 0;
    var v19932 = this.options;
    var v15699 = v19932.values;
    var v9993 = a$$649.isArray(v15699);
    if (v9993) {
      var v19933 = this.options;
      var v15700 = v19933.values;
      e$$339 = v15700.length;
    }
    var v19934 = a$$649.Widget;
    var v15701 = v19934.prototype;
    var v9994 = v15701._setOption;
    v9994.apply(this, arguments);
    switch(b$$647) {
      case "disabled":
        var v3386;
        if (c$$523) {
          var v26461 = this.handles;
          var v24427 = v26461.filter(".ui-state-focus");
          v24427.blur();
          var v24428 = this.handles;
          v24428.removeClass("ui-state-hover");
          var v19935 = this.handles;
          var v19936 = !0;
          v19935.propAttr("disabled", v19936);
          var v15702 = this.element;
          v3386 = v15702.addClass("ui-disabled");
        } else {
          var v15703 = this.handles;
          var v15704 = !1;
          v15703.propAttr("disabled", v15704);
          var v15705 = this.element;
          v3386 = v15705.removeClass("ui-disabled");
        }
        v3386;
        break;
      case "orientation":
        this._detectOrientation();
        var v19937 = this.element;
        var v15706 = v19937.removeClass("ui-slider-horizontal ui-slider-vertical");
        var v19938 = this.orientation;
        var v15707 = "ui-slider-" + v19938;
        v15706.addClass(v15707);
        this._refreshValue();
        break;
      case "value":
        this._animateOff = !0;
        this._refreshValue();
        this._change(null, 0);
        this._animateOff = !1;
        break;
      case "values":
        this._animateOff = !0;
        this._refreshValue();
        d$$394 = 0;
        var v3387 = d$$394 < e$$339;
        for (;v3387;) {
          this._change(null, d$$394);
          d$$394 = d$$394 + 1;
          v3387 = d$$394 < e$$339;
        }
        this._animateOff = !1;
    }
    return;
  }
  function v1775(b$$646, c$$522) {
    var d$$393;
    var e$$338;
    var f$$174;
    var v9995 = arguments.length;
    var v3388 = v9995 > 1;
    if (v3388) {
      var v19939 = this.options;
      var v15708 = v19939.values;
      var v30976 = this._trimAlignValue(c$$522);
      v15708[b$$646] = v30976;
      this._refreshValue();
      this._change(null, b$$646);
      return;
    }
    var v9996 = arguments.length;
    var v3389 = !v9996;
    if (v3389) {
      return this._values();
    }
    var v15709 = arguments[0];
    var v9997 = a$$649.isArray(v15709);
    var v3391 = !v9997;
    if (v3391) {
      var v3390;
      var v19940 = this.options;
      var v15710 = v19940.values;
      if (v15710) {
        var v24429 = this.options;
        var v19941 = v24429.values;
        v15710 = v19941.length;
      }
      var v9998 = v15710;
      if (v9998) {
        v3390 = this._values(b$$646);
      } else {
        v3390 = this.value();
      }
      return v3390;
    }
    var v9999 = this.options;
    d$$393 = v9999.values;
    e$$338 = arguments[0];
    f$$174 = 0;
    var v10000 = d$$393.length;
    var v3392 = f$$174 < v10000;
    for (;v3392;) {
      var v10001 = e$$338[f$$174];
      var v30977 = this._trimAlignValue(v10001);
      d$$393[f$$174] = v30977;
      this._change(null, f$$174);
      f$$174 = f$$174 + 1;
      var v10002 = d$$393.length;
      v3392 = f$$174 < v10002;
    }
    this._refreshValue();
    return;
  }
  function v1774(a$$659) {
    var v3393 = arguments.length;
    if (v3393) {
      var v15711 = this.options;
      var v30978 = this._trimAlignValue(a$$659);
      v15711.value = v30978;
      this._refreshValue();
      this._change(null, 0);
      return;
    }
    return this._value();
  }
  function v1773(a$$658, b$$645) {
    var v15712 = this._keySliding;
    var v10003 = !v15712;
    if (v10003) {
      var v15713 = this._mouseSliding;
      v10003 = !v15713;
    }
    var v3396 = v10003;
    if (v3396) {
      var v10004 = this.handles;
      var v3394 = v10004[b$$645];
      var v3395 = this.value();
      var c$$521 = {handle:v3394, value:v3395};
      var v19942 = this.options;
      var v15714 = v19942.values;
      if (v15714) {
        var v24430 = this.options;
        var v19943 = v24430.values;
        v15714 = v19943.length;
      }
      var v10005 = v15714;
      if (v10005) {
        var v30979 = this.values(b$$645);
        c$$521.value = v30979;
        var v30980 = this.values();
        c$$521.values = v30980;
      }
      this._trigger("change", a$$658, c$$521);
    }
    return;
  }
  function v1772(a$$657, b$$644) {
    var v10006 = this.handles;
    var v3397 = v10006[b$$644];
    var v3398 = this.value();
    var c$$520 = {handle:v3397, value:v3398};
    var v19944 = this.options;
    var v15715 = v19944.values;
    if (v15715) {
      var v24431 = this.options;
      var v19945 = v24431.values;
      v15715 = v19945.length;
    }
    var v10007 = v15715;
    if (v10007) {
      var v30981 = this.values(b$$644);
      c$$520.value = v30981;
      var v30982 = this.values();
      c$$520.values = v30982;
    }
    this._trigger("stop", a$$657, c$$520);
    return;
  }
  function v1771(a$$656, b$$643, c$$519) {
    var d$$392;
    var e$$337;
    var f$$173;
    var v3399;
    var v19946 = this.options;
    var v15716 = v19946.values;
    if (v15716) {
      var v24432 = this.options;
      var v19947 = v24432.values;
      v15716 = v19947.length;
    }
    var v10009 = v15716;
    if (v10009) {
      var v24433;
      if (b$$643) {
        v24433 = 0;
      } else {
        v24433 = 1;
      }
      var v19948 = v24433;
      d$$392 = this.values(v19948);
      var v29414 = this.options;
      var v28799 = v29414.values;
      var v27878 = v28799.length;
      var v26462 = v27878 === 2;
      if (v26462) {
        var v28800 = this.options;
        var v27879 = v28800.range;
        var v27880 = !0;
        v26462 = v27879 === v27880;
      }
      var v24434 = v26462;
      if (v24434) {
        var v27881 = b$$643 === 0;
        if (v27881) {
          v27881 = c$$519 > d$$392;
        }
        var v26463 = v27881;
        var v27883 = !v26463;
        if (v27883) {
          var v27882 = b$$643 === 1;
          if (v27882) {
            v27882 = c$$519 < d$$392;
          }
          v26463 = v27882;
        }
        v24434 = v26463;
      }
      var v19949 = v24434;
      if (v19949) {
        c$$519 = d$$392;
      }
      var v19950 = this.values(b$$643);
      var v15717 = c$$519 !== v19950;
      if (v15717) {
        e$$337 = this.values();
        e$$337[b$$643] = c$$519;
        var v29415 = this.handles;
        var v28801 = v29415[b$$643];
        var v27884 = {handle:v28801, value:c$$519, values:e$$337};
        f$$173 = this._trigger("slide", a$$656, v27884);
        var v27885;
        if (b$$643) {
          v27885 = 0;
        } else {
          v27885 = 1;
        }
        var v26464 = v27885;
        d$$392 = this.values(v26464);
        var v26465 = !1;
        var v24435 = f$$173 !== v26465;
        if (v24435) {
          var v26466 = !0;
          v24435 = this.values(b$$643, c$$519, v26466);
        }
        v15717 = v24435;
      }
      v3399 = v15717;
    } else {
      var v15718 = this.value();
      var v10008 = c$$519 !== v15718;
      if (v10008) {
        var v26467 = this.handles;
        var v24436 = v26467[b$$643];
        var v19951 = {handle:v24436, value:c$$519};
        f$$173 = this._trigger("slide", a$$656, v19951);
        var v24437 = !1;
        var v19952 = f$$173 !== v24437;
        if (v19952) {
          v19952 = this.value(c$$519);
        }
        v10008 = v19952;
      }
      v3399 = v10008;
    }
    v3399;
    return;
  }
  function v1770(a$$655, b$$642) {
    var v10010 = this.handles;
    var v3400 = v10010[b$$642];
    var v3401 = this.value();
    var c$$518 = {handle:v3400, value:v3401};
    var v19953 = this.options;
    var v15719 = v19953.values;
    if (v15719) {
      var v24438 = this.options;
      var v19954 = v24438.values;
      v15719 = v19954.length;
    }
    var v10011 = v15719;
    if (v10011) {
      var v30983 = this.values(b$$642);
      c$$518.value = v30983;
      var v30984 = this.values();
      c$$518.values = v30984;
    }
    return this._trigger("start", a$$655, c$$518);
  }
  function v1769(a$$654) {
    var b$$641;
    var c$$517;
    var d$$391;
    var e$$336;
    var f$$172;
    var v28802;
    var v29790 = this.orientation;
    var v29416 = v29790 === "horizontal";
    if (v29416) {
      var v29791 = this.elementSize;
      b$$641 = v29791.width;
      var v30058 = a$$654.x;
      var v30282 = this.elementOffset;
      var v30059 = v30282.left;
      var v29792 = v30058 - v30059;
      var v30060;
      var v30284 = this._clickOffset;
      if (v30284) {
        var v30283 = this._clickOffset;
        v30060 = v30283.left;
      } else {
        v30060 = 0;
      }
      var v29793 = v30060;
      v28802 = c$$517 = v29792 - v29793;
    } else {
      var v29794 = this.elementSize;
      b$$641 = v29794.height;
      var v30061 = a$$654.y;
      var v30285 = this.elementOffset;
      var v30062 = v30285.top;
      var v29795 = v30061 - v30062;
      var v30063;
      var v30287 = this._clickOffset;
      if (v30287) {
        var v30286 = this._clickOffset;
        v30063 = v30286.top;
      } else {
        v30063 = 0;
      }
      var v29796 = v30063;
      v28802 = c$$517 = v29795 - v29796;
    }
    v28802;
    d$$391 = c$$517 / b$$641;
    var v27886 = d$$391 > 1;
    if (v27886) {
      d$$391 = 1;
    }
    var v26468 = d$$391 < 0;
    if (v26468) {
      d$$391 = 0;
    }
    var v26469 = this.orientation;
    var v24439 = v26469 === "vertical";
    if (v24439) {
      d$$391 = 1 - d$$391;
    }
    var v24440 = this.options;
    var v19955 = v24440.max;
    var v24441 = this.options;
    var v19956 = v24441.min;
    e$$336 = v19955 - v19956;
    var v19957 = this.options;
    var v15720 = v19957.min;
    var v15721 = d$$391 * e$$336;
    f$$172 = v15720 + v15721;
    return this._trimAlignValue(f$$172);
  }
  function v1768() {
    var v3402;
    var v19958 = this.options;
    var v15722 = v19958.orientation;
    var v10012 = v15722 === "vertical";
    if (v10012) {
      v3402 = "vertical";
    } else {
      v3402 = "horizontal";
    }
    this.orientation = v3402;
    return;
  }
  function v1767(a$$653) {
    var v28803 = this.handles;
    v28803.removeClass("ui-state-active");
    this._mouseSliding = !1;
    var v27887 = this._handleIndex;
    this._stop(a$$653, v27887);
    var v26470 = this._handleIndex;
    this._change(a$$653, v26470);
    this._handleIndex = null;
    this._clickOffset = null;
    this._animateOff = !1;
    return!1;
  }
  function v1766(a$$652) {
    var v3403 = a$$652.pageX;
    var v3404 = a$$652.pageY;
    var b$$640 = {x:v3403, y:v3404};
    var c$$516 = this._normValueFromMouse(b$$640);
    var v10013 = this._handleIndex;
    this._slide(a$$652, v10013, c$$516);
    return!1;
  }
  function v1765(a$$651) {
    return!0;
  }
  function v1764(b$$638) {
    function v1763(b$$639) {
      var v10014 = e$$335;
      var v10015 = h$$156.values(b$$639);
      var v3405 = v10014 - v10015;
      var c$$515 = Math.abs(v3405);
      var v3406 = f$$171 > c$$515;
      if (v3406) {
        f$$171 = c$$515;
        g$$189 = a$$649(this);
        i$$204 = b$$639;
      }
      return;
    }
    var c$$514 = this.options;
    var d$$390;
    var e$$335;
    var f$$171;
    var g$$189;
    var h$$156;
    var i$$204;
    var j$$104;
    var k$$72;
    var l$$79;
    var v3407;
    var v10016 = c$$514.disabled;
    if (v10016) {
      v3407 = !1;
    } else {
      var v30288 = this.element;
      var v30064 = v30288.outerWidth();
      var v30289 = this.element;
      var v30065 = v30289.outerHeight();
      this.elementSize = {width:v30064, height:v30065};
      var v30066 = this.element;
      var v30985 = v30066.offset();
      this.elementOffset = v30985;
      var v29797 = b$$638.pageX;
      var v29798 = b$$638.pageY;
      d$$390 = {x:v29797, y:v29798};
      e$$335 = this._normValueFromMouse(d$$390);
      var v29799 = this.options;
      var v29417 = v29799.max;
      var v29800 = this.options;
      var v29418 = v29800.min;
      var v28804 = v29417 - v29418;
      f$$171 = v28804 + 1;
      h$$156 = this;
      var v26471 = this.handles;
      v26471.each(v1763);
      var v27888 = c$$514.range;
      var v27889 = !0;
      var v26472 = v27888 === v27889;
      if (v26472) {
        var v27890 = this.values(1);
        var v27891 = c$$514.min;
        v26472 = v27890 === v27891;
      }
      var v24442 = v26472;
      if (v24442) {
        i$$204 = i$$204 + 1;
        var v28805 = this.handles;
        var v27892 = v28805[i$$204];
        g$$189 = a$$649(v27892);
      }
      j$$104 = this._start(b$$638, i$$204);
      var v15723;
      var v24443 = !1;
      var v19959 = j$$104 === v24443;
      if (v19959) {
        v15723 = !1;
      } else {
        this._mouseSliding = !0;
        h$$156._handleIndex = i$$204;
        var v30067 = g$$189.addClass("ui-state-active");
        v30067.focus();
        k$$72 = g$$189.offset();
        var v30432 = b$$638.target;
        var v30290 = a$$649(v30432);
        var v30068 = v30290.parents();
        var v29801 = v30068.andSelf();
        var v29419 = v29801.is(".ui-slider-handle");
        l$$79 = !v29419;
        var v28806;
        if (l$$79) {
          v28806 = {left:0, top:0};
        } else {
          var v30069 = b$$638.pageX;
          var v30070 = k$$72.left;
          var v29802 = v30069 - v30070;
          var v30071 = g$$189.width();
          var v29803 = v30071 / 2;
          var v29420 = v29802 - v29803;
          var v30570 = b$$638.pageY;
          var v30571 = k$$72.top;
          var v30433 = v30570 - v30571;
          var v30572 = g$$189.height();
          var v30434 = v30572 / 2;
          var v30291 = v30433 - v30434;
          var v30573 = g$$189.css("borderTopWidth");
          var v30435 = parseInt(v30573, 10);
          var v30574 = !v30435;
          if (v30574) {
            v30435 = 0;
          }
          var v30292 = v30435;
          var v30072 = v30291 - v30292;
          var v30436 = g$$189.css("borderBottomWidth");
          var v30293 = parseInt(v30436, 10);
          var v30437 = !v30293;
          if (v30437) {
            v30293 = 0;
          }
          var v30073 = v30293;
          var v29804 = v30072 - v30073;
          var v30294 = g$$189.css("marginTop");
          var v30074 = parseInt(v30294, 10);
          var v30295 = !v30074;
          if (v30295) {
            v30074 = 0;
          }
          var v29805 = v30074;
          var v29421 = v29804 + v29805;
          v28806 = {left:v29420, top:v29421};
        }
        this._clickOffset = v28806;
        var v28807 = this.handles;
        var v27893 = v28807.hasClass("ui-state-hover");
        var v28808 = !v27893;
        if (v28808) {
          this._slide(b$$638, i$$204, e$$335);
        }
        this._animateOff = !0;
        v15723 = !0;
      }
      v3407 = v15723;
    }
    return v3407;
  }
  function v1762() {
    var v24444 = this.handles;
    v24444.remove();
    var v24445 = this.range;
    v24445.remove();
    var v26473 = this.element;
    var v24446 = v26473.removeClass("ui-slider ui-slider-horizontal ui-slider-vertical ui-slider-disabled ui-widget ui-widget-content ui-corner-all");
    var v19960 = v24446.removeData("slider");
    v19960.unbind(".slider");
    this._mouseDestroy();
    return this;
  }
  function v1761() {
    function v1760(c$$513) {
      var v3408 = a$$649(this);
      var d$$389 = v3408.data("index.ui-slider-handle");
      var v3409 = b$$636._keySliding;
      if (v3409) {
        b$$636._keySliding = !1;
        b$$636._stop(c$$513, d$$389);
        b$$636._change(c$$513, d$$389);
        var v15724 = a$$649(this);
        v15724.removeClass("ui-state-active");
      }
      return;
    }
    function v1759(d$$388) {
      var v3410 = a$$649(this);
      var e$$334 = v3410.data("index.ui-slider-handle");
      var f$$170;
      var g$$188;
      var h$$155;
      var i$$203;
      var v10017 = b$$636.options;
      var v3411 = v10017.disabled;
      if (v3411) {
        return;
      }
      var v3414 = d$$388.keyCode;
      switch(v3414) {
        case a$$649.ui.keyCode.HOME:
        ;
        case a$$649.ui.keyCode.END:
        ;
        case a$$649.ui.keyCode.PAGE_UP:
        ;
        case a$$649.ui.keyCode.PAGE_DOWN:
        ;
        case a$$649.ui.keyCode.UP:
        ;
        case a$$649.ui.keyCode.RIGHT:
        ;
        case a$$649.ui.keyCode.DOWN:
        ;
        case a$$649.ui.keyCode.LEFT:
          d$$388.preventDefault();
          var v10018 = b$$636._keySliding;
          var v3413 = !v10018;
          if (v3413) {
            b$$636._keySliding = !0;
            var v15725 = a$$649(this);
            v15725.addClass("ui-state-active");
            f$$170 = b$$636._start(d$$388, e$$334);
            var v10019 = !1;
            var v3412 = f$$170 === v10019;
            if (v3412) {
              return;
            }
          }
        ;
      }
      var v10020 = b$$636.options;
      i$$203 = v10020.step;
      var v10021;
      var v24447 = b$$636.options;
      var v19961 = v24447.values;
      if (v19961) {
        var v26474 = b$$636.options;
        var v24448 = v26474.values;
        v19961 = v24448.length;
      }
      var v15726 = v19961;
      if (v15726) {
        v10021 = g$$188 = h$$155 = b$$636.values(e$$334);
      } else {
        v10021 = g$$188 = h$$155 = b$$636.value();
      }
      v10021;
      var v3423 = d$$388.keyCode;
      switch(v3423) {
        case a$$649.ui.keyCode.HOME:
          var v3415 = b$$636.options;
          h$$155 = v3415.min;
          break;
        case a$$649.ui.keyCode.END:
          var v3416 = b$$636.options;
          h$$155 = v3416.max;
          break;
        case a$$649.ui.keyCode.PAGE_UP:
          var v24449 = b$$636.options;
          var v19962 = v24449.max;
          var v24450 = b$$636.options;
          var v19963 = v24450.min;
          var v15727 = v19962 - v19963;
          var v10022 = v15727 / c$$512;
          var v3417 = g$$188 + v10022;
          h$$155 = b$$636._trimAlignValue(v3417);
          break;
        case a$$649.ui.keyCode.PAGE_DOWN:
          var v24451 = b$$636.options;
          var v19964 = v24451.max;
          var v24452 = b$$636.options;
          var v19965 = v24452.min;
          var v15728 = v19964 - v19965;
          var v10023 = v15728 / c$$512;
          var v3418 = g$$188 - v10023;
          h$$155 = b$$636._trimAlignValue(v3418);
          break;
        case a$$649.ui.keyCode.UP:
        ;
        case a$$649.ui.keyCode.RIGHT:
          var v15729 = b$$636.options;
          var v10024 = v15729.max;
          var v3419 = g$$188 === v10024;
          if (v3419) {
            return;
          }
          var v3420 = g$$188 + i$$203;
          h$$155 = b$$636._trimAlignValue(v3420);
          break;
        case a$$649.ui.keyCode.DOWN:
        ;
        case a$$649.ui.keyCode.LEFT:
          var v15730 = b$$636.options;
          var v10025 = v15730.min;
          var v3421 = g$$188 === v10025;
          if (v3421) {
            return;
          }
          var v3422 = g$$188 - i$$203;
          h$$155 = b$$636._trimAlignValue(v3422);
      }
      b$$636._slide(d$$388, e$$334, h$$155);
      return;
    }
    function v1758(b$$637) {
      var v3424 = a$$649(this);
      v3424.data("index.ui-slider-handle", b$$637);
      return;
    }
    function v1757() {
      var v3425 = a$$649(this);
      v3425.removeClass("ui-state-focus");
      return;
    }
    function v1756() {
      var v3426;
      var v10027 = d$$387.disabled;
      if (v10027) {
        var v10026 = a$$649(this);
        v3426 = v10026.blur();
      } else {
        var v15731 = a$$649(".ui-slider .ui-state-focus");
        v15731.removeClass("ui-state-focus");
        var v15732 = a$$649(this);
        v3426 = v15732.addClass("ui-state-focus");
      }
      v3426;
      return;
    }
    function v1755() {
      var v3427 = a$$649(this);
      v3427.removeClass("ui-state-hover");
      return;
    }
    function v1754() {
      var v3428 = d$$387.disabled;
      var v10029 = !v3428;
      if (v10029) {
        var v10028 = a$$649(this);
        v10028.addClass("ui-state-hover");
      }
      return;
    }
    function v1753(a$$650) {
      a$$650.preventDefault();
      return;
    }
    var b$$636 = this;
    var d$$387 = this.options;
    var v10030 = this.element;
    var v3429 = v10030.find(".ui-slider-handle");
    var e$$333 = v3429.addClass("ui-state-default ui-corner-all");
    var f$$169 = "<a class='ui-slider-handle ui-state-default ui-corner-all' href='#'></a>";
    var v10031 = d$$387.values;
    if (v10031) {
      var v15733 = d$$387.values;
      v10031 = v15733.length;
    }
    var v3430 = v10031;
    var v10032 = !v3430;
    if (v10032) {
      v3430 = 1;
    }
    var g$$187 = v3430;
    var h$$154 = [];
    this._keySliding = !1;
    this._mouseSliding = !1;
    this._animateOff = !0;
    this._handleIndex = null;
    this._detectOrientation();
    this._mouseInit();
    var v19966 = this.element;
    var v29422 = this.orientation;
    var v28809 = "ui-slider ui-slider-" + v29422;
    var v27894 = v28809 + " ui-widget";
    var v26475 = v27894 + " ui-widget-content";
    var v24453 = v26475 + " ui-corner-all";
    var v26476;
    var v27895 = d$$387.disabled;
    if (v27895) {
      v26476 = " ui-slider-disabled ui-disabled";
    } else {
      v26476 = "";
    }
    var v24454 = v26476;
    var v19967 = v24453 + v24454;
    v19966.addClass(v19967);
    var v30986 = a$$649([]);
    this.range = v30986;
    var v10033 = d$$387.range;
    if (v10033) {
      var v24455 = d$$387.range;
      var v24456 = !0;
      var v19968 = v24455 === v24456;
      if (v19968) {
        var v26477 = d$$387.values;
        var v27898 = !v26477;
        if (v27898) {
          var v28810 = this.options;
          var v27896 = v28810.min;
          var v28811 = this.options;
          var v27897 = v28811.min;
          d$$387.values = [v27896, v27897];
        }
        var v28812 = d$$387.values;
        var v27899 = v28812.length;
        if (v27899) {
          var v29423 = d$$387.values;
          var v28813 = v29423.length;
          v27899 = v28813 !== 2;
        }
        var v26478 = v27899;
        if (v26478) {
          var v28814 = d$$387.values;
          var v27900 = v28814[0];
          var v28815 = d$$387.values;
          var v27901 = v28815[0];
          d$$387.values = [v27900, v27901];
        }
      }
      var v24457 = a$$649("<div></div>");
      var v24458 = this.element;
      var v19969 = v24457.appendTo(v24458);
      var v26479;
      var v29424 = d$$387.range;
      var v28816 = v29424 === "min";
      var v29426 = !v28816;
      if (v29426) {
        var v29425 = d$$387.range;
        v28816 = v29425 === "max";
      }
      var v27903 = v28816;
      if (v27903) {
        var v27902 = d$$387.range;
        v26479 = " ui-slider-range-" + v27902;
      } else {
        v26479 = "";
      }
      var v24459 = v26479;
      var v19970 = "ui-slider-range ui-widget-header" + v24459;
      var v30987 = v19969.addClass(v19970);
      this.range = v30987;
    }
    var i$$202 = e$$333.length;
    var v3431 = i$$202 < g$$187;
    for (;v3431;) {
      h$$154.push(f$$169);
      i$$202 = i$$202 + 1;
      v3431 = i$$202 < g$$187;
    }
    var v29427 = h$$154.join("");
    var v28817 = a$$649(v29427);
    var v28818 = b$$636.element;
    var v27904 = v28817.appendTo(v28818);
    var v30988 = e$$333.add(v27904);
    this.handles = v30988;
    var v27905 = this.handles;
    var v30989 = v27905.eq(0);
    this.handle = v30989;
    var v30075 = this.handles;
    var v30076 = this.range;
    var v29806 = v30075.add(v30076);
    var v29428 = v29806.filter("a");
    var v28819 = v29428.click(v1753);
    var v27906 = v28819.hover(v1754, v1755);
    var v26480 = v27906.focus(v1756);
    v26480.blur(v1757);
    var v24460 = this.handles;
    v24460.each(v1758);
    var v24461 = this.handles;
    var v19971 = v24461.keydown(v1759);
    v19971.keyup(v1760);
    this._refreshValue();
    this._animateOff = !1;
    return;
  }
  var c$$512 = 5;
  var v15734 = a$$649.ui;
  var v10034 = v15734.mouse;
  var v19972 = !1;
  var v19973 = !1;
  var v15735 = {animate:v19972, distance:0, max:100, min:0, orientation:"horizontal", range:v19973, step:1, value:0, values:null};
  var v10035 = {widgetEventPrefix:"slide", options:v15735, _create:v1761, destroy:v1762, _mouseCapture:v1764, _mouseStart:v1765, _mouseDrag:v1766, _mouseStop:v1767, _detectOrientation:v1768, _normValueFromMouse:v1769, _start:v1770, _slide:v1771, _stop:v1772, _change:v1773, value:v1774, values:v1775, _setOption:v1776, _value:v1777, _values:v1778, _trimAlignValue:v1779, _valueMin:v1780, _valueMax:v1781, _refreshValue:v1783};
  a$$649.widget("ui.slider", v10034, v10035);
  var v15736 = a$$649.ui;
  var v10036 = v15736.slider;
  var v10037 = {version:"1.8.24"};
  a$$649.extend(v10036, v10037);
  return;
}
function v1752(a$$645, b$$632) {
  function v1751() {
    var a$$648 = this.value();
    var b$$634 = this._percentage();
    var v19974 = this.oldValue;
    var v15737 = v19974 !== a$$648;
    if (v15737) {
      this.oldValue = a$$648;
      this._trigger("change");
    }
    var v24462 = this.valueDiv;
    var v26481 = this.min;
    var v24463 = a$$648 > v26481;
    var v19975 = v24462.toggle(v24463);
    var v26482 = this.options;
    var v24464 = v26482.max;
    var v19976 = a$$648 === v24464;
    var v15738 = v19975.toggleClass("ui-corner-right", v19976);
    var v19977 = b$$634.toFixed(0);
    var v15739 = v19977 + "%";
    v15738.width(v15739);
    var v10038 = this.element;
    v10038.attr("aria-valuenow", a$$648);
    return;
  }
  function v1750() {
    var v10039 = this._value();
    var v3432 = 100 * v10039;
    var v10040 = this.options;
    var v3433 = v10040.max;
    return v3432 / v3433;
  }
  function v1749() {
    var v3434 = this.options;
    var a$$647 = v3434.value;
    var v15740 = typeof a$$647;
    var v10041 = v15740 != "number";
    if (v10041) {
      a$$647 = 0;
    }
    var v15741 = this.options;
    var v10042 = v15741.max;
    var v15742 = this.min;
    var v10043 = Math.max(v15742, a$$647);
    return Math.min(v10042, v10043);
  }
  function v1748(b$$633, c$$511) {
    var v10044 = b$$633 === "value";
    if (v10044) {
      var v24465 = this.options;
      v24465.value = c$$511;
      this._refreshValue();
      var v24466 = this._value();
      var v26483 = this.options;
      var v24467 = v26483.max;
      var v19978 = v24466 === v24467;
      if (v19978) {
        this._trigger("complete");
      }
    }
    var v19979 = a$$645.Widget;
    var v15743 = v19979.prototype;
    var v10045 = v15743._setOption;
    v10045.apply(this, arguments);
    return;
  }
  function v1747(a$$646) {
    var v3435;
    var v10046 = a$$646 === b$$632;
    if (v10046) {
      v3435 = this._value();
    } else {
      this._setOption("value", a$$646);
      v3435 = this;
    }
    return v3435;
  }
  function v1746() {
    var v27907 = this.element;
    var v26484 = v27907.removeClass("ui-progressbar ui-widget ui-widget-content ui-corner-all");
    var v24468 = v26484.removeAttr("role");
    var v19980 = v24468.removeAttr("aria-valuemin");
    var v15744 = v19980.removeAttr("aria-valuemax");
    v15744.removeAttr("aria-valuenow");
    var v15745 = this.valueDiv;
    v15745.remove();
    var v19981 = a$$645.Widget;
    var v15746 = v19981.prototype;
    var v10047 = v15746.destroy;
    v10047.apply(this, arguments);
    return;
  }
  function v1745() {
    var v24469 = this.element;
    var v19982 = v24469.addClass("ui-progressbar ui-widget ui-widget-content ui-corner-all");
    var v24470 = this.min;
    var v26485 = this.options;
    var v24471 = v26485.max;
    var v24472 = this._value();
    var v19983 = {role:"progressbar", "aria-valuemin":v24470, "aria-valuemax":v24471, "aria-valuenow":v24472};
    v19982.attr(v19983);
    var v19984 = a$$645("<div class='ui-progressbar-value ui-widget-header ui-corner-left'></div>");
    var v19985 = this.element;
    var v30990 = v19984.appendTo(v19985);
    this.valueDiv = v30990;
    var v30991 = this._value();
    this.oldValue = v30991;
    this._refreshValue();
    return;
  }
  var v15747 = {value:0, max:100};
  var v10048 = {options:v15747, min:0, _create:v1745, destroy:v1746, value:v1747, _setOption:v1748, _value:v1749, _percentage:v1750, _refreshValue:v1751};
  a$$645.widget("ui.progressbar", v10048);
  var v15748 = a$$645.ui;
  var v10049 = v15748.progressbar;
  var v10050 = {version:"1.8.24"};
  a$$645.extend(v10049, v10050);
  return;
}
function v1744(a$$642, b$$622) {
  function v1743() {
    function v1742(a$$644, b$$631) {
      return b$$631;
    }
    var v3436 = document.getElementsByTagName("body");
    var b$$630 = v3436[0];
    var c$$510 = document.createElement("div");
    var d$$386;
    var e$$332;
    var g$$186;
    var h$$153;
    var i$$201;
    var v19986;
    if (b$$630) {
      v19986 = "div";
    } else {
      v19986 = "body";
    }
    var v15749 = v19986;
    d$$386 = document.createElement(v15749);
    g$$186 = {visibility:"hidden", width:0, height:0, border:0, margin:0, background:"none"};
    if (b$$630) {
      var v15750 = {position:"absolute", left:"-1000px", top:"-1000px"};
      a$$642.extend(g$$186, v15750);
    }
    var j$$103;
    for (j$$103 in g$$186) {
      var v3437 = d$$386.style;
      v3437[j$$103] = g$$186[j$$103];
    }
    d$$386.appendChild(c$$510);
    var v29429 = b$$630;
    var v29807 = !v29429;
    if (v29807) {
      v29429 = document.documentElement;
    }
    e$$332 = v29429;
    var v28820 = e$$332.firstChild;
    e$$332.insertBefore(d$$386, v28820);
    var v27908 = c$$510.style;
    v27908.cssText = "position: absolute; left: 10.7432222px; top: 10.432325px; height: 30px; width: 201px;";
    var v27909 = a$$642(c$$510);
    var v26486 = v27909.offset(v1742);
    h$$153 = v26486.offset();
    d$$386.innerHTML = "";
    e$$332.removeChild(d$$386);
    var v19987 = h$$153.top;
    var v19988 = h$$153.left;
    var v15751 = v19987 + v19988;
    var v19989;
    if (b$$630) {
      v19989 = 2E3;
    } else {
      v19989 = 0;
    }
    var v15752 = v19989;
    i$$201 = v15751 + v15752;
    var v10051 = i$$201 > 21;
    if (v10051) {
      v10051 = i$$201 < 22;
    }
    f$$165.fractions = v10051;
    return;
  }
  function v1741(b$$629) {
    function v1740() {
      var v3438 = a$$642.offset;
      v3438.setOffset(this, b$$629);
      return;
    }
    function v1739(c$$509) {
      var v3439 = a$$642(this);
      var v15753 = a$$642(this);
      var v10052 = v15753.offset();
      var v3440 = b$$629.call(this, c$$509, v10052);
      v3439.offset(v3440);
      return;
    }
    var c$$508 = this[0];
    var v3441;
    var v15754 = !c$$508;
    var v19991 = !v15754;
    if (v19991) {
      var v19990 = c$$508.ownerDocument;
      v15754 = !v19990;
    }
    var v10054 = v15754;
    if (v10054) {
      v3441 = null;
    } else {
      var v10053;
      if (b$$629) {
        var v15755;
        var v19992 = a$$642.isFunction(b$$629);
        if (v19992) {
          v15755 = this.each(v1739);
        } else {
          v15755 = this.each(v1740);
        }
        v10053 = v15755;
      } else {
        v10053 = h$$147.call(this);
      }
      v3441 = v10053;
    }
    return v3441;
  }
  function v1738(b$$628, c$$507) {
    var v10055 = a$$642.curCSS(b$$628, "position");
    var v3442 = /static/.test(v10055);
    if (v3442) {
      var v10056 = b$$628.style;
      v10056.position = "relative";
    }
    var d$$385 = a$$642(b$$628);
    var e$$331 = d$$385.offset();
    var v15756 = !0;
    var v10057 = a$$642.curCSS(b$$628, "top", v15756);
    var v3443 = parseInt(v10057, 10);
    var v10058 = !v3443;
    if (v10058) {
      v3443 = 0;
    }
    var f$$168 = v3443;
    var v15757 = !0;
    var v10059 = a$$642.curCSS(b$$628, "left", v15757);
    var v3444 = parseInt(v10059, 10);
    var v10060 = !v3444;
    if (v10060) {
      v3444 = 0;
    }
    var g$$185 = v3444;
    var v15758 = c$$507.top;
    var v15759 = e$$331.top;
    var v10061 = v15758 - v15759;
    var v3445 = v10061 + f$$168;
    var v15760 = c$$507.left;
    var v15761 = e$$331.left;
    var v10062 = v15760 - v15761;
    var v3446 = v10062 + g$$185;
    var h$$152 = {top:v3445, left:v3446};
    var v3447;
    var v10064 = "using" in c$$507;
    if (v10064) {
      var v10063 = c$$507.using;
      v3447 = v10063.call(b$$628, h$$152);
    } else {
      v3447 = d$$385.css(h$$152);
    }
    v3447;
    return;
  }
  function v1737(b$$627, c$$506) {
    var v15762 = c$$506.at;
    var v10065 = v15762[1];
    var v3448 = v10065 === e$$327;
    if (v3448) {
      return;
    }
    var d$$384 = a$$642(window);
    var v19993 = c$$506.collisionPosition;
    var v15763 = v19993.top;
    var v15764 = c$$506.collisionHeight;
    var v10066 = v15763 + v15764;
    var v10067 = d$$384.height();
    var v3449 = v10066 - v10067;
    var v3450 = d$$384.scrollTop();
    var f$$167 = v3449 - v3450;
    var v3451;
    var v19994 = c$$506.my;
    var v15765 = v19994[1];
    var v10070 = v15765 === "top";
    if (v10070) {
      var v10068 = c$$506.elemHeight;
      v3451 = -v10068;
    } else {
      var v10069;
      var v24473 = c$$506.my;
      var v19995 = v24473[1];
      var v15766 = v19995 === "bottom";
      if (v15766) {
        v10069 = c$$506.elemHeight;
      } else {
        v10069 = 0;
      }
      v3451 = v10069;
    }
    var g$$184 = v3451;
    var v3452;
    var v19996 = c$$506.at;
    var v15767 = v19996[1];
    var v10072 = v15767 === "top";
    if (v10072) {
      v3452 = c$$506.targetHeight;
    } else {
      var v10071 = c$$506.targetHeight;
      v3452 = -v10071;
    }
    var h$$151 = v3452;
    var v10073 = c$$506.offset;
    var v3453 = v10073[1];
    var i$$200 = -2 * v3453;
    var v10074 = b$$627.top;
    var v15768;
    var v26487 = c$$506.collisionPosition;
    var v24474 = v26487.top;
    var v19999 = v24474 < 0;
    if (v19999) {
      var v19997 = g$$184 + h$$151;
      v15768 = v19997 + i$$200;
    } else {
      var v19998;
      var v24476 = f$$167 > 0;
      if (v24476) {
        var v24475 = g$$184 + h$$151;
        v19998 = v24475 + i$$200;
      } else {
        v19998 = 0;
      }
      v15768 = v19998;
    }
    var v10075 = v15768;
    b$$627.top = v10074 + v10075;
    return;
  }
  function v1736(b$$626, c$$505) {
    var v15769 = c$$505.at;
    var v10076 = v15769[0];
    var v3454 = v10076 === e$$327;
    if (v3454) {
      return;
    }
    var d$$383 = a$$642(window);
    var v20000 = c$$505.collisionPosition;
    var v15770 = v20000.left;
    var v15771 = c$$505.collisionWidth;
    var v10077 = v15770 + v15771;
    var v10078 = d$$383.width();
    var v3455 = v10077 - v10078;
    var v3456 = d$$383.scrollLeft();
    var f$$166 = v3455 - v3456;
    var v3457;
    var v20001 = c$$505.my;
    var v15772 = v20001[0];
    var v10081 = v15772 === "left";
    if (v10081) {
      var v10079 = c$$505.elemWidth;
      v3457 = -v10079;
    } else {
      var v10080;
      var v24477 = c$$505.my;
      var v20002 = v24477[0];
      var v15773 = v20002 === "right";
      if (v15773) {
        v10080 = c$$505.elemWidth;
      } else {
        v10080 = 0;
      }
      v3457 = v10080;
    }
    var g$$183 = v3457;
    var v3458;
    var v20003 = c$$505.at;
    var v15774 = v20003[0];
    var v10083 = v15774 === "left";
    if (v10083) {
      v3458 = c$$505.targetWidth;
    } else {
      var v10082 = c$$505.targetWidth;
      v3458 = -v10082;
    }
    var h$$150 = v3458;
    var v10084 = c$$505.offset;
    var v3459 = v10084[0];
    var i$$199 = -2 * v3459;
    var v10085 = b$$626.left;
    var v15775;
    var v26488 = c$$505.collisionPosition;
    var v24478 = v26488.left;
    var v20006 = v24478 < 0;
    if (v20006) {
      var v20004 = g$$183 + h$$150;
      v15775 = v20004 + i$$199;
    } else {
      var v20005;
      var v24480 = f$$166 > 0;
      if (v24480) {
        var v24479 = g$$183 + h$$150;
        v20005 = v24479 + i$$199;
      } else {
        v20005 = 0;
      }
      v15775 = v20005;
    }
    var v10086 = v15775;
    b$$626.left = v10085 + v10086;
    return;
  }
  function v1735(b$$625, c$$504) {
    var d$$382 = a$$642(window);
    var v20007 = c$$504.collisionPosition;
    var v15776 = v20007.top;
    var v15777 = c$$504.collisionHeight;
    var v10087 = v15776 + v15777;
    var v10088 = d$$382.height();
    var v3460 = v10087 - v10088;
    var v3461 = d$$382.scrollTop();
    var e$$330 = v3460 - v3461;
    var v3462;
    var v10092 = e$$330 > 0;
    if (v10092) {
      var v10089 = b$$625.top;
      v3462 = v10089 - e$$330;
    } else {
      var v15778 = b$$625.top;
      var v20008 = c$$504.collisionPosition;
      var v15779 = v20008.top;
      var v10090 = v15778 - v15779;
      var v10091 = b$$625.top;
      v3462 = Math.max(v10090, v10091);
    }
    b$$625.top = v3462;
    return;
  }
  function v1734(b$$624, c$$503) {
    var d$$381 = a$$642(window);
    var v20009 = c$$503.collisionPosition;
    var v15780 = v20009.left;
    var v15781 = c$$503.collisionWidth;
    var v10093 = v15780 + v15781;
    var v10094 = d$$381.width();
    var v3463 = v10093 - v10094;
    var v3464 = d$$381.scrollLeft();
    var e$$329 = v3463 - v3464;
    var v3465;
    var v10098 = e$$329 > 0;
    if (v10098) {
      var v10095 = b$$624.left;
      v3465 = v10095 - e$$329;
    } else {
      var v15782 = b$$624.left;
      var v20010 = c$$503.collisionPosition;
      var v15783 = v20010.left;
      var v10096 = v15782 - v15783;
      var v10097 = b$$624.left;
      v3465 = Math.max(v10096, v10097);
    }
    b$$624.left = v3465;
    return;
  }
  function v1733(b$$623) {
    function v1732() {
      function v1731(c$$502, e$$328) {
        var v15784 = a$$642.ui;
        var v10099 = v15784.position;
        var v10100 = j$$102[c$$502];
        var v3466 = v10099[v10100];
        if (v3466) {
          var v20011 = a$$642.ui;
          var v15785 = v20011.position;
          var v15786 = j$$102[c$$502];
          var v10101 = v15785[v15786];
          var v15787 = b$$623.my;
          var v15788 = b$$623.at;
          var v10102 = {targetWidth:l$$78, targetHeight:m$$48, elemWidth:d$$380, elemHeight:g$$182, collisionPosition:r$$21, collisionWidth:o$$24, collisionHeight:p$$49, offset:k$$71, my:v15787, at:v15788};
          v10101[e$$328](q$$20, v10102);
        }
        return;
      }
      var c$$501 = a$$642(this);
      var d$$380 = c$$501.outerWidth();
      var g$$182 = c$$501.outerHeight();
      var v15789 = !0;
      var v10103 = a$$642.curCSS(this, "marginLeft", v15789);
      var v3467 = parseInt(v10103);
      var v10104 = !v3467;
      if (v10104) {
        v3467 = 0;
      }
      var h$$149 = v3467;
      var v15790 = !0;
      var v10105 = a$$642.curCSS(this, "marginTop", v15790);
      var v3468 = parseInt(v10105);
      var v10106 = !v3468;
      if (v10106) {
        v3468 = 0;
      }
      var i$$198 = v3468;
      var v3469 = d$$380 + h$$149;
      var v20012 = !0;
      var v15791 = a$$642.curCSS(this, "marginRight", v20012);
      var v10107 = parseInt(v15791);
      var v15792 = !v10107;
      if (v15792) {
        v10107 = 0;
      }
      var v3470 = v10107;
      var o$$24 = v3469 + v3470;
      var v3471 = g$$182 + i$$198;
      var v20013 = !0;
      var v15793 = a$$642.curCSS(this, "marginBottom", v20013);
      var v10108 = parseInt(v15793);
      var v15794 = !v10108;
      if (v15794) {
        v10108 = 0;
      }
      var v3472 = v10108;
      var p$$49 = v3471 + v3472;
      var q$$20 = a$$642.extend({}, n$$94);
      var r$$21;
      var v27910;
      var v29808 = b$$623.my;
      var v29430 = v29808[0];
      var v28822 = v29430 === "right";
      if (v28822) {
        var v29431 = q$$20.left;
        v27910 = q$$20.left = v29431 - d$$380;
      } else {
        var v29809 = b$$623.my;
        var v29432 = v29809[0];
        var v28821 = v29432 === e$$327;
        if (v28821) {
          var v29810 = q$$20.left;
          var v29811 = d$$380 / 2;
          v28821 = q$$20.left = v29810 - v29811;
        }
        v27910 = v28821;
      }
      v27910;
      var v27911;
      var v29812 = b$$623.my;
      var v29433 = v29812[1];
      var v28824 = v29433 === "bottom";
      if (v28824) {
        var v29434 = q$$20.top;
        v27911 = q$$20.top = v29434 - g$$182;
      } else {
        var v29813 = b$$623.my;
        var v29435 = v29813[1];
        var v28823 = v29435 === e$$327;
        if (v28823) {
          var v29814 = q$$20.top;
          var v29815 = g$$182 / 2;
          v28823 = q$$20.top = v29814 - v29815;
        }
        v27911 = v28823;
      }
      v27911;
      var v26489 = f$$165.fractions;
      var v27912 = !v26489;
      if (v27912) {
        var v28825 = q$$20;
        var v29436 = q$$20.left;
        var v30992 = Math.round(v29436);
        v28825.left = v30992;
        var v28826 = q$$20;
        var v29437 = q$$20.top;
        var v30993 = Math.round(v29437);
        v28826.top = v30993;
      }
      var v26490 = q$$20.left;
      var v24481 = v26490 - h$$149;
      var v26491 = q$$20.top;
      var v24482 = v26491 - i$$198;
      r$$21 = {left:v24481, top:v24482};
      var v20014 = ["left", "top"];
      a$$642.each(v20014, v1731);
      var v20015 = a$$642.fn;
      var v15795 = v20015.bgiframe;
      if (v15795) {
        c$$501.bgiframe();
      }
      var v20016 = b$$623.using;
      var v15796 = {using:v20016};
      var v10109 = a$$642.extend(q$$20, v15796);
      c$$501.offset(v10109);
      return;
    }
    function v1730() {
      var v10110 = b$$623[this];
      var v15797 = !v10110;
      if (v15797) {
        v10110 = "";
      }
      var v3473 = v10110;
      var a$$643 = v3473.split(" ");
      var v24483 = a$$643.length;
      var v20017 = v24483 === 1;
      if (v20017) {
        var v24484;
        var v27913 = a$$643[0];
        var v26494 = c$$500.test(v27913);
        if (v26494) {
          var v26492 = [e$$327];
          v24484 = a$$643.concat(v26492);
        } else {
          var v26493;
          var v28827 = a$$643[0];
          var v27915 = d$$379.test(v28827);
          if (v27915) {
            var v27914 = [e$$327];
            v26493 = v27914.concat(a$$643);
          } else {
            v26493 = [e$$327, e$$327];
          }
          v24484 = v26493;
        }
        a$$643 = v24484;
      }
      var v20018;
      var v26495 = a$$643[0];
      var v24485 = c$$500.test(v26495);
      if (v24485) {
        v20018 = a$$643[0];
      } else {
        v20018 = e$$327;
      }
      a$$643[0] = v20018;
      var v15798;
      var v24486 = a$$643[1];
      var v20019 = d$$379.test(v24486);
      if (v20019) {
        v15798 = a$$643[1];
      } else {
        v15798 = e$$327;
      }
      a$$643[1] = v15798;
      b$$623[this] = a$$643;
      return;
    }
    var v10111 = !b$$623;
    var v15800 = !v10111;
    if (v15800) {
      var v15799 = b$$623.of;
      v10111 = !v15799;
    }
    var v3474 = v10111;
    if (v3474) {
      return g$$181.apply(this, arguments);
    }
    b$$623 = a$$642.extend({}, b$$623);
    var v3475 = b$$623.of;
    var h$$148 = a$$642(v3475);
    var i$$197 = h$$148[0];
    var v10112 = b$$623.collision;
    var v15801 = !v10112;
    if (v15801) {
      v10112 = "flip";
    }
    var v3476 = v10112;
    var j$$102 = v3476.split(" ");
    var v3477;
    var v10114 = b$$623.offset;
    if (v10114) {
      var v10113 = b$$623.offset;
      v3477 = v10113.split(" ");
    } else {
      v3477 = [0, 0];
    }
    var k$$71 = v3477;
    var l$$78;
    var m$$48;
    var n$$94;
    var v30077;
    var v30438 = i$$197.nodeType;
    var v30297 = v30438 === 9;
    if (v30297) {
      l$$78 = h$$148.width();
      m$$48 = h$$148.height();
      v30077 = n$$94 = {top:0, left:0};
    } else {
      var v30296;
      var v30440 = i$$197.setTimeout;
      if (v30440) {
        l$$78 = h$$148.width();
        m$$48 = h$$148.height();
        var v30575 = h$$148.scrollTop();
        var v30576 = h$$148.scrollLeft();
        v30296 = n$$94 = {top:v30575, left:v30576};
      } else {
        var v30439;
        var v30577 = i$$197.preventDefault;
        if (v30577) {
          b$$623.at = "left top";
          l$$78 = m$$48 = 0;
          var v30717 = b$$623.of;
          var v30661 = v30717.pageY;
          var v30718 = b$$623.of;
          var v30662 = v30718.pageX;
          v30439 = n$$94 = {top:v30661, left:v30662};
        } else {
          l$$78 = h$$148.outerWidth();
          m$$48 = h$$148.outerHeight();
          v30439 = n$$94 = h$$148.offset();
        }
        v30296 = v30439;
      }
      v30077 = v30296;
    }
    v30077;
    var v30078 = ["my", "at"];
    a$$642.each(v30078, v1730);
    var v30079 = j$$102.length;
    var v29816 = v30079 === 1;
    if (v29816) {
      j$$102[1] = j$$102[0];
    }
    var v29438 = k$$71;
    var v30080 = k$$71[0];
    var v29817 = parseInt(v30080, 10);
    var v30081 = !v29817;
    if (v30081) {
      v29817 = 0;
    }
    v29438[0] = v29817;
    var v29439 = k$$71.length;
    var v28828 = v29439 === 1;
    if (v28828) {
      k$$71[1] = k$$71[0];
    }
    var v27916 = k$$71;
    var v29440 = k$$71[1];
    var v28829 = parseInt(v29440, 10);
    var v29441 = !v28829;
    if (v29441) {
      v28829 = 0;
    }
    v27916[1] = v28829;
    var v26496;
    var v29442 = b$$623.at;
    var v28830 = v29442[0];
    var v27918 = v28830 === "right";
    if (v27918) {
      var v28831 = n$$94.left;
      v26496 = n$$94.left = v28831 + l$$78;
    } else {
      var v29443 = b$$623.at;
      var v28832 = v29443[0];
      var v27917 = v28832 === e$$327;
      if (v27917) {
        var v29444 = n$$94.left;
        var v29445 = l$$78 / 2;
        v27917 = n$$94.left = v29444 + v29445;
      }
      v26496 = v27917;
    }
    v26496;
    var v24487;
    var v28833 = b$$623.at;
    var v27919 = v28833[1];
    var v26498 = v27919 === "bottom";
    if (v26498) {
      var v27920 = n$$94.top;
      v24487 = n$$94.top = v27920 + m$$48;
    } else {
      var v28834 = b$$623.at;
      var v27921 = v28834[1];
      var v26497 = v27921 === e$$327;
      if (v26497) {
        var v28835 = n$$94.top;
        var v28836 = m$$48 / 2;
        v26497 = n$$94.top = v28835 + v28836;
      }
      v24487 = v26497;
    }
    v24487;
    var v24488 = n$$94.left;
    var v24489 = k$$71[0];
    n$$94.left = v24488 + v24489;
    var v20020 = n$$94.top;
    var v20021 = k$$71[1];
    n$$94.top = v20020 + v20021;
    return this.each(v1732);
  }
  var v3478 = a$$642.ui;
  var v10115 = !v3478;
  if (v10115) {
    v3478 = {};
  }
  a$$642.ui = v3478;
  var c$$500 = /left|center|right/;
  var d$$379 = /top|center|bottom/;
  var e$$327 = "center";
  var f$$165 = {};
  var v3479 = a$$642.fn;
  var g$$181 = v3479.position;
  var v3480 = a$$642.fn;
  var h$$147 = v3480.offset;
  var v24490 = a$$642.fn;
  v24490.position = v1733;
  var v24491 = a$$642.ui;
  var v26499 = {left:v1734, top:v1735};
  var v26500 = {left:v1736, top:v1737};
  v24491.position = {fit:v26499, flip:v26500};
  var v24492 = a$$642.offset;
  var v20022 = v24492.setOffset;
  var v24493 = !v20022;
  if (v24493) {
    var v26501 = a$$642.offset;
    v26501.setOffset = v1738;
    var v26502 = a$$642.fn;
    v26502.offset = v1741;
  }
  var v15802 = a$$642.curCSS;
  var v20023 = !v15802;
  if (v20023) {
    a$$642.curCSS = a$$642.css;
  }
  v1743();
  return;
}
function v1729(a$$628, b$$594) {
  function v1728() {
    var v15803 = a$$628.ui;
    var v10116 = v15803.dialog;
    var v3481 = v10116.overlay;
    var v3482 = this.$el;
    v3481.destroy(v3482);
    return;
  }
  function v1727() {
    function v1726() {
      b$$621 = b$$621.add(this);
      return;
    }
    var b$$621 = a$$628([]);
    var v24494 = a$$628.ui;
    var v20024 = v24494.dialog;
    var v15804 = v20024.overlay;
    var v10117 = v15804.instances;
    a$$628.each(v10117, v1726);
    var v15805 = {width:0, height:0};
    var v10118 = b$$621.css(v15805);
    var v26503 = a$$628.ui;
    var v24495 = v26503.dialog;
    var v20025 = v24495.overlay;
    var v15806 = v20025.width();
    var v26504 = a$$628.ui;
    var v24496 = v26504.dialog;
    var v20026 = v24496.overlay;
    var v15807 = v20026.height();
    var v10119 = {width:v15806, height:v15807};
    v10118.css(v10119);
    return;
  }
  function v1725() {
    var b$$620;
    var c$$499;
    var v3483;
    var v15808 = a$$628.browser;
    var v10121 = v15808.msie;
    if (v10121) {
      var v24497 = document.documentElement;
      var v20027 = v24497.scrollWidth;
      var v24498 = document.body;
      var v20028 = v24498.scrollWidth;
      b$$620 = Math.max(v20027, v20028);
      var v24499 = document.documentElement;
      var v20029 = v24499.offsetWidth;
      var v24500 = document.body;
      var v20030 = v24500.offsetWidth;
      c$$499 = Math.max(v20029, v20030);
      var v15809;
      var v20032 = b$$620 < c$$499;
      if (v20032) {
        var v24501 = a$$628(window);
        var v20031 = v24501.width();
        v15809 = v20031 + "px";
      } else {
        v15809 = b$$620 + "px";
      }
      v3483 = v15809;
    } else {
      var v15810 = a$$628(document);
      var v10120 = v15810.width();
      v3483 = v10120 + "px";
    }
    return v3483;
  }
  function v1724() {
    var b$$619;
    var c$$498;
    var v3484;
    var v20033 = a$$628.browser;
    var v15811 = v20033.msie;
    if (v15811) {
      var v24502 = a$$628.browser;
      var v20034 = v24502.version;
      v15811 = v20034 < 7;
    }
    var v10123 = v15811;
    if (v10123) {
      var v24503 = document.documentElement;
      var v20035 = v24503.scrollHeight;
      var v24504 = document.body;
      var v20036 = v24504.scrollHeight;
      b$$619 = Math.max(v20035, v20036);
      var v24505 = document.documentElement;
      var v20037 = v24505.offsetHeight;
      var v24506 = document.body;
      var v20038 = v24506.offsetHeight;
      c$$498 = Math.max(v20037, v20038);
      var v15812;
      var v20040 = b$$619 < c$$498;
      if (v20040) {
        var v24507 = a$$628(window);
        var v20039 = v24507.height();
        v15812 = v20039 + "px";
      } else {
        v15812 = b$$619 + "px";
      }
      v3484 = v15812;
    } else {
      var v15813 = a$$628(document);
      var v10122 = v15813.height();
      v3484 = v10122 + "px";
    }
    return v3484;
  }
  function v1723(b$$618) {
    function v1722() {
      var v3485 = this.css("z-index");
      d$$378 = Math.max(d$$378, v3485);
      return;
    }
    var v3486 = this.instances;
    var c$$497 = a$$628.inArray(b$$618, v3486);
    var v15814 = c$$497 != -1;
    if (v15814) {
      var v20041 = this.oldInstances;
      var v26505 = this.instances;
      var v24508 = v26505.splice(c$$497, 1);
      var v20042 = v24508[0];
      v20041.push(v20042);
    }
    var v24509 = this.instances;
    var v20043 = v24509.length;
    var v15815 = v20043 === 0;
    if (v15815) {
      var v24510 = [document, window];
      var v20044 = a$$628(v24510);
      v20044.unbind(".dialog-overlay");
    }
    b$$618.remove();
    var d$$378 = 0;
    var v10124 = this.instances;
    a$$628.each(v10124, v1722);
    this.maxZ = d$$378;
    return;
  }
  function v1721(b$$616) {
    function v1720(c$$496) {
      var v24511 = b$$616.options;
      var v20045 = v24511.closeOnEscape;
      if (v20045) {
        var v24512 = c$$496.isDefaultPrevented();
        v20045 = !v24512;
      }
      var v15816 = v20045;
      if (v15816) {
        v15816 = c$$496.keyCode;
      }
      var v10125 = v15816;
      if (v10125) {
        var v15817 = c$$496.keyCode;
        var v24513 = a$$628.ui;
        var v20046 = v24513.keyCode;
        var v15818 = v20046.ESCAPE;
        v10125 = v15817 === v15818;
      }
      var v3487 = v10125;
      if (v3487) {
        b$$616.close(c$$496);
        c$$496.preventDefault();
      }
      return;
    }
    function v1719() {
      function v1718(b$$617) {
        var v20047 = b$$617.target;
        var v15819 = a$$628(v20047);
        var v10126 = v15819.zIndex();
        var v24514 = a$$628.ui;
        var v20048 = v24514.dialog;
        var v15820 = v20048.overlay;
        var v10127 = v15820.maxZ;
        var v3488 = v10126 < v10127;
        if (v3488) {
          return!1;
        }
        return;
      }
      var v24515 = a$$628.ui;
      var v20049 = v24515.dialog;
      var v15821 = v20049.overlay;
      var v10128 = v15821.instances;
      var v3489 = v10128.length;
      if (v3489) {
        var v10129 = a$$628(document);
        var v24516 = a$$628.ui;
        var v20050 = v24516.dialog;
        var v15822 = v20050.overlay;
        var v10130 = v15822.events;
        v10129.bind(v10130, v1718);
      }
      return;
    }
    var v15823 = this.instances;
    var v10131 = v15823.length;
    var v3490 = v10131 === 0;
    if (v3490) {
      setTimeout(v1719, 1);
      var v20051 = a$$628(document);
      v20051.bind("keydown.dialog-overlay", v1720);
      var v15824 = a$$628(window);
      var v26506 = a$$628.ui;
      var v24517 = v26506.dialog;
      var v20052 = v24517.overlay;
      var v15825 = v20052.resize;
      v15824.bind("resize.dialog-overlay", v15825);
    }
    var v20053 = this.oldInstances;
    var v15826 = v20053.pop();
    var v20055 = !v15826;
    if (v20055) {
      var v20054 = a$$628("<div></div>");
      v15826 = v20054.addClass("ui-widget-overlay");
    }
    var v10132 = v15826;
    var v10133 = document.body;
    var v3491 = v10132.appendTo(v10133);
    var v10134 = this.width();
    var v10135 = this.height();
    var v3492 = {width:v10134, height:v10135};
    var c$$495 = v3491.css(v3492);
    var v20056 = a$$628.fn;
    var v15827 = v20056.bgiframe;
    if (v15827) {
      c$$495.bgiframe();
    }
    var v15828 = this.instances;
    v15828.push(c$$495);
    return c$$495;
  }
  function v1717(a$$641) {
    return a$$641 + ".dialog-overlay";
  }
  function v1716(b$$615) {
    var v15829 = a$$628.ui;
    var v10136 = v15829.dialog;
    var v3493 = v10136.overlay;
    var v30994 = v3493.create(b$$615);
    this.$el = v30994;
    return;
  }
  function v1715(a$$640) {
    var b$$614 = a$$640.attr("id");
    var v15830 = !b$$614;
    if (v15830) {
      var v24518 = this.uuid;
      this.uuid = v24518 + 1;
      b$$614 = this.uuid;
    }
    return "ui-dialog-title-" + b$$614;
  }
  function v1714() {
    var b$$613 = this.options;
    var c$$494;
    var d$$377;
    var v3494 = this.uiDialog;
    var e$$326 = v3494.is(":visible");
    var v24519 = this.element;
    var v20057 = v24519.show();
    var v20058 = {width:"auto", minHeight:0, height:0};
    v20057.css(v20058);
    var v24520 = b$$613.minWidth;
    var v24521 = b$$613.width;
    var v20059 = v24520 > v24521;
    if (v20059) {
      b$$613.width = b$$613.minWidth;
    }
    var v20060 = this.uiDialog;
    var v24522 = b$$613.width;
    var v20061 = {height:"auto", width:v24522};
    var v15831 = v20060.css(v20061);
    c$$494 = v15831.height();
    var v15832 = b$$613.minHeight;
    var v10137 = v15832 - c$$494;
    d$$377 = Math.max(0, v10137);
    var v10138 = b$$613.height;
    var v3502 = v10138 === "auto";
    if (v3502) {
      var v10139 = a$$628.support;
      var v3499 = v10139.minHeight;
      if (v3499) {
        var v3495 = this.element;
        var v3496 = {minHeight:d$$377, height:"auto"};
        v3495.css(v3496);
      } else {
        var v3497 = this.uiDialog;
        v3497.show();
        var v10140 = this.element;
        var v3498 = v10140.css("height", "auto");
        var f$$164 = v3498.height();
        var v15834 = !e$$326;
        if (v15834) {
          var v15833 = this.uiDialog;
          v15833.hide();
        }
        var v10141 = this.element;
        var v10142 = Math.max(f$$164, d$$377);
        v10141.height(v10142);
      }
    } else {
      var v3500 = this.element;
      var v15835 = b$$613.height;
      var v10143 = v15835 - c$$494;
      var v3501 = Math.max(v10143, 0);
      v3500.height(v3501);
    }
    var v10144 = this.uiDialog;
    var v3503 = v10144.is(":data(resizable)");
    if (v3503) {
      var v10145 = this.uiDialog;
      var v10146 = this._minHeight();
      v10145.resizable("option", "minHeight", v10146);
    }
    return;
  }
  function v1713(b$$612, d$$376) {
    var e$$325 = this;
    var f$$163 = e$$325.uiDialog;
    switch(b$$612) {
      case "beforeclose":
        b$$612 = "beforeClose";
        break;
      case "buttons":
        e$$325._createButtons(d$$376);
        break;
      case "closeText":
        var v3504 = e$$325.uiDialogTitlebarCloseText;
        var v3505 = "" + d$$376;
        v3504.text(v3505);
        break;
      case "dialogClass":
        var v15836 = e$$325.options;
        var v10147 = v15836.dialogClass;
        var v3506 = f$$163.removeClass(v10147);
        var v3507 = c$$479 + d$$376;
        v3506.addClass(v3507);
        break;
      case "disabled":
        var v3508;
        if (d$$376) {
          v3508 = f$$163.addClass("ui-dialog-disabled");
        } else {
          v3508 = f$$163.removeClass("ui-dialog-disabled");
        }
        v3508;
        break;
      case "draggable":
        var g$$180 = f$$163.is(":data(draggable)");
        var v15837 = g$$180;
        if (v15837) {
          v15837 = !d$$376;
        }
        var v10148 = v15837;
        if (v10148) {
          f$$163.draggable("destroy");
        }
        var v15838 = !g$$180;
        if (v15838) {
          v15838 = d$$376;
        }
        var v10149 = v15838;
        if (v10149) {
          e$$325._makeDraggable();
        }
        break;
      case "position":
        e$$325._position(d$$376);
        break;
      case "resizable":
        var h$$146 = f$$163.is(":data(resizable)");
        var v20062 = h$$146;
        if (v20062) {
          v20062 = !d$$376;
        }
        var v15839 = v20062;
        if (v15839) {
          f$$163.resizable("destroy");
        }
        var v20063 = h$$146;
        if (v20063) {
          var v24523 = typeof d$$376;
          v20063 = v24523 == "string";
        }
        var v15840 = v20063;
        if (v15840) {
          f$$163.resizable("option", "handles", d$$376);
        }
        var v15841 = !h$$146;
        if (v15841) {
          var v20064 = !1;
          v15841 = d$$376 !== v20064;
        }
        var v10150 = v15841;
        if (v10150) {
          e$$325._makeResizable(d$$376);
        }
        break;
      case "title":
        var v10151 = e$$325.uiDialogTitlebar;
        var v3509 = a$$628(".ui-dialog-title", v10151);
        var v10152 = d$$376 || "&#160;";
        var v3510 = "" + v10152;
        v3509.html(v3510);
    }
    var v15842 = a$$628.Widget;
    var v10153 = v15842.prototype;
    var v3511 = v10153._setOption;
    v3511.apply(e$$325, arguments);
    return;
  }
  function v1712(b$$610) {
    function v1711(a$$639, b$$611) {
      c$$493._setOption(a$$639, b$$611);
      var v15843 = a$$639 in d$$364;
      if (v15843) {
        g$$179 = !0;
      }
      var v10154 = a$$639 in e$$315;
      if (v10154) {
        f$$162[a$$639] = b$$611;
      }
      return;
    }
    var c$$493 = this;
    var f$$162 = {};
    var g$$179 = !1;
    a$$628.each(b$$610, v1711);
    if (g$$179) {
      this._size();
    }
    var v15844 = this.uiDialog;
    var v10155 = v15844.is(":data(resizable)");
    if (v10155) {
      var v15845 = this.uiDialog;
      v15845.resizable("option", f$$162);
    }
    return;
  }
  function v1710(b$$608) {
    function v1709(a$$638, b$$609) {
      var v15846 = c$$492[a$$638];
      var v10156 = +v15846;
      var v10157 = c$$492[a$$638];
      var v3512 = v10156 === v10157;
      if (v3512) {
        d$$375[a$$638] = c$$492[a$$638];
        c$$492[a$$638] = b$$609;
      }
      return;
    }
    var c$$492 = [];
    var d$$375 = [0, 0];
    var e$$324;
    if (b$$608) {
      var v15847 = typeof b$$608;
      var v10158 = v15847 == "string";
      var v15849 = !v10158;
      if (v15849) {
        var v20065 = typeof b$$608;
        var v15848 = v20065 == "object";
        if (v15848) {
          v15848 = "0" in b$$608;
        }
        v10158 = v15848;
      }
      var v3513 = v10158;
      if (v3513) {
        var v20066;
        var v24526 = b$$608.split;
        if (v24526) {
          v20066 = b$$608.split(" ");
        } else {
          var v24524 = b$$608[0];
          var v24525 = b$$608[1];
          v20066 = [v24524, v24525];
        }
        c$$492 = v20066;
        var v24527 = c$$492.length;
        var v20067 = v24527 === 1;
        if (v20067) {
          c$$492[1] = c$$492[0];
        }
        var v15850 = ["left", "top"];
        a$$628.each(v15850, v1709);
        var v10159 = c$$492.join(" ");
        var v10160 = c$$492.join(" ");
        var v10161 = d$$375.join(" ");
        b$$608 = {my:v10159, at:v10160, offset:v10161};
      }
      var v24528 = a$$628.ui;
      var v20068 = v24528.dialog;
      var v15851 = v20068.prototype;
      var v10162 = v15851.options;
      var v3514 = v10162.position;
      b$$608 = a$$628.extend({}, v3514, b$$608);
    } else {
      var v20069 = a$$628.ui;
      var v15852 = v20069.dialog;
      var v10163 = v15852.prototype;
      var v3515 = v10163.options;
      b$$608 = v3515.position;
    }
    var v20070 = this.uiDialog;
    e$$324 = v20070.is(":visible");
    var v24530 = !e$$324;
    if (v24530) {
      var v24529 = this.uiDialog;
      v24529.show();
    }
    var v20071 = this.uiDialog;
    var v20072 = {top:0, left:0};
    var v15853 = v20071.css(v20072);
    var v20073 = {of:window};
    var v15854 = a$$628.extend(v20073, b$$608);
    v15853.position(v15854);
    var v15856 = !e$$324;
    if (v15856) {
      var v15855 = this.uiDialog;
      v15855.hide();
    }
    return;
  }
  function v1708() {
    var a$$637 = this.options;
    var v3516;
    var v15857 = a$$637.height;
    var v10166 = v15857 === "auto";
    if (v10166) {
      v3516 = a$$637.minHeight;
    } else {
      var v10164 = a$$637.minHeight;
      var v10165 = a$$637.height;
      v3516 = Math.min(v10164, v10165);
    }
    return v3516;
  }
  function v1707(c$$489) {
    function v1706(b$$607, c$$491) {
      var v24531 = a$$628(this);
      v24531.removeClass("ui-dialog-resizing");
      var v24532 = e$$323;
      var v26507 = a$$628(this);
      var v30995 = v26507.height();
      v24532.height = v30995;
      var v20074 = e$$323;
      var v24533 = a$$628(this);
      var v30996 = v24533.width();
      v20074.width = v30996;
      var v15858 = h$$145(c$$491);
      d$$374._trigger("resizeStop", b$$607, v15858);
      var v20075 = a$$628.ui;
      var v15859 = v20075.dialog;
      var v10167 = v15859.overlay;
      v10167.resize();
      return;
    }
    function v1705(a$$636, b$$606) {
      var v3517 = h$$145(b$$606);
      d$$374._trigger("resize", a$$636, v3517);
      return;
    }
    function v1704(b$$605, c$$490) {
      var v10168 = a$$628(this);
      v10168.addClass("ui-dialog-resizing");
      var v10169 = h$$145(c$$490);
      d$$374._trigger("resizeStart", b$$605, v10169);
      return;
    }
    function h$$145(a$$635) {
      var v3518 = a$$635.originalPosition;
      var v3519 = a$$635.originalSize;
      var v3520 = a$$635.position;
      var v3521 = a$$635.size;
      return{originalPosition:v3518, originalSize:v3519, position:v3520, size:v3521};
    }
    var v3522;
    var v10171 = c$$489 === b$$594;
    if (v10171) {
      var v10170 = this.options;
      v3522 = v10170.resizable;
    } else {
      v3522 = c$$489;
    }
    c$$489 = v3522;
    var d$$374 = this;
    var e$$323 = d$$374.options;
    var v3523 = d$$374.uiDialog;
    var f$$161 = v3523.css("position");
    var v3524;
    var v15860 = typeof c$$489;
    var v10172 = v15860 == "string";
    if (v10172) {
      v3524 = c$$489;
    } else {
      v3524 = "n,e,s,w,se,sw,ne,nw";
    }
    var g$$178 = v3524;
    var v20076 = d$$374.uiDialog;
    var v24534 = d$$374.element;
    var v24535 = e$$323.maxWidth;
    var v24536 = e$$323.maxHeight;
    var v24537 = e$$323.minWidth;
    var v24538 = d$$374._minHeight();
    var v20077 = {cancel:".ui-dialog-content", containment:"document", alsoResize:v24534, maxWidth:v24535, maxHeight:v24536, minWidth:v24537, minHeight:v24538, handles:g$$178, start:v1704, resize:v1705, stop:v1706};
    var v15861 = v20076.resizable(v20077);
    var v10173 = v15861.css("position", f$$161);
    var v3525 = v10173.find(".ui-resizable-se");
    v3525.addClass("ui-icon ui-icon-grip-diagonal-se");
    return;
  }
  function v1703() {
    function v1702(g$$177, h$$144) {
      var v20078 = c$$487;
      var v27922 = h$$144.position;
      var v26508 = v27922.left;
      var v26509 = d$$372.scrollLeft();
      var v24539 = v26508 - v26509;
      var v27923 = h$$144.position;
      var v26510 = v27923.top;
      var v26511 = d$$372.scrollTop();
      var v24540 = v26510 - v26511;
      v20078.position = [v24539, v24540];
      var v24541 = a$$628(this);
      var v20079 = v24541.removeClass("ui-dialog-dragging");
      v20079.height(e$$322);
      var v15862 = f$$160(h$$144);
      b$$604._trigger("dragStop", g$$177, v15862);
      var v20080 = a$$628.ui;
      var v15863 = v20080.dialog;
      var v10174 = v15863.overlay;
      v10174.resize();
      return;
    }
    function v1701(a$$634, c$$488) {
      var v3526 = f$$160(c$$488);
      b$$604._trigger("drag", a$$634, v3526);
      return;
    }
    function v1700(d$$373, g$$176) {
      var v15864;
      var v24542 = c$$487.height;
      var v20082 = v24542 === "auto";
      if (v20082) {
        v15864 = "auto";
      } else {
        var v20081 = a$$628(this);
        v15864 = v20081.height();
      }
      e$$322 = v15864;
      var v20083 = a$$628(this);
      var v24543 = a$$628(this);
      var v20084 = v24543.height();
      var v15865 = v20083.height(v20084);
      v15865.addClass("ui-dialog-dragging");
      var v10175 = f$$160(g$$176);
      b$$604._trigger("dragStart", d$$373, v10175);
      return;
    }
    function f$$160(a$$633) {
      var v3527 = a$$633.position;
      var v3528 = a$$633.offset;
      return{position:v3527, offset:v3528};
    }
    var b$$604 = this;
    var c$$487 = b$$604.options;
    var d$$372 = a$$628(document);
    var e$$322;
    var v3529 = b$$604.uiDialog;
    var v3530 = {cancel:".ui-dialog-content, .ui-dialog-titlebar-close", handle:".ui-dialog-titlebar", containment:"document", start:v1700, drag:v1701, stop:v1702};
    v3529.draggable(v3530);
    return;
  }
  function v1699(b$$601) {
    function v1698(b$$602, d$$371) {
      function v1697(a$$632, b$$603) {
        var v3531 = a$$632 === "click";
        if (v3531) {
          return;
        }
        var v3532;
        var v10176 = a$$632 in e$$321;
        if (v10176) {
          v3532 = e$$321[a$$632](b$$603);
        } else {
          v3532 = e$$321.attr(a$$632, b$$603);
        }
        v3532;
        return;
      }
      function v1696() {
        var v3533 = d$$371.click;
        var v10177 = c$$486.element;
        var v3534 = v10177[0];
        v3533.apply(v3534, arguments);
        return;
      }
      var v3535;
      var v10178 = a$$628.isFunction(d$$371);
      if (v10178) {
        v3535 = {click:d$$371, text:b$$602};
      } else {
        v3535 = d$$371;
      }
      d$$371 = v3535;
      var v10179 = a$$628('<button type="button"></button>');
      var v3536 = v10179.click(v1696);
      var e$$321 = v3536.appendTo(f$$159);
      a$$628.each(d$$371, v1697);
      var v15866 = a$$628.fn;
      var v10180 = v15866.button;
      if (v10180) {
        e$$321.button();
      }
      return;
    }
    function v1695() {
      var v3537 = d$$370 = !0;
      return!v3537;
    }
    var c$$486 = this;
    var d$$370 = !1;
    var v3538 = a$$628("<div></div>");
    var e$$320 = v3538.addClass("ui-dialog-buttonpane ui-widget-content ui-helper-clearfix");
    var v10181 = a$$628("<div></div>");
    var v3539 = v10181.addClass("ui-dialog-buttonset");
    var f$$159 = v3539.appendTo(e$$320);
    var v20085 = c$$486.uiDialog;
    var v15867 = v20085.find(".ui-dialog-buttonpane");
    v15867.remove();
    var v24544 = typeof b$$601;
    var v20086 = v24544 == "object";
    if (v20086) {
      v20086 = b$$601 !== null;
    }
    var v15868 = v20086;
    if (v15868) {
      a$$628.each(b$$601, v1695);
    }
    if (d$$370) {
      a$$628.each(b$$601, v1698);
      var v20087 = c$$486.uiDialog;
      e$$320.appendTo(v20087);
    }
    return;
  }
  function v1694() {
    function v1693(b$$600) {
      var v10182 = b$$600.keyCode;
      var v20088 = a$$628.ui;
      var v15869 = v20088.keyCode;
      var v10183 = v15869.TAB;
      var v3540 = v10182 !== v10183;
      if (v3540) {
        return;
      }
      var c$$485 = a$$628(":tabbable", this);
      var d$$369 = c$$485.filter(":first");
      var e$$319 = c$$485.filter(":last");
      var v15870 = b$$600.target;
      var v15871 = e$$319[0];
      var v10184 = v15870 === v15871;
      if (v10184) {
        var v15872 = b$$600.shiftKey;
        v10184 = !v15872;
      }
      var v3541 = v10184;
      if (v3541) {
        d$$369.focus(1);
        return!1;
      }
      var v15873 = b$$600.target;
      var v15874 = d$$369[0];
      var v10185 = v15873 === v15874;
      if (v10185) {
        v10185 = b$$600.shiftKey;
      }
      var v3542 = v10185;
      if (v3542) {
        e$$319.focus(1);
        return!1;
      }
      return;
    }
    var v3543 = this._isOpen;
    if (v3543) {
      return;
    }
    var b$$599 = this;
    var c$$484 = b$$599.options;
    var d$$368 = b$$599.uiDialog;
    var v29818 = b$$599;
    var v30082;
    var v30299 = c$$484.modal;
    if (v30299) {
      var v30578 = a$$628.ui;
      var v30441 = v30578.dialog;
      var v30298 = v30441.overlay;
      v30082 = new v30298(b$$599);
    } else {
      v30082 = null;
    }
    v29818.overlay = v30082;
    b$$599._size();
    var v29446 = c$$484.position;
    b$$599._position(v29446);
    var v28837 = c$$484.show;
    d$$368.show(v28837);
    var v27924 = !0;
    b$$599.moveToTop(v27924);
    var v26512 = c$$484.modal;
    if (v26512) {
      d$$368.bind("keydown.ui-dialog", v1693);
    }
    var v29819 = b$$599.element;
    var v29447 = v29819.find(":tabbable");
    var v28838 = v29447.get();
    var v29820 = d$$368.find(".ui-dialog-buttonpane :tabbable");
    var v29448 = v29820.get();
    var v29449 = d$$368.get();
    var v28839 = v29448.concat(v29449);
    var v27925 = v28838.concat(v28839);
    var v26513 = a$$628(v27925);
    var v24545 = v26513.eq(0);
    v24545.focus();
    b$$599._isOpen = !0;
    b$$599._trigger("open");
    return b$$599;
  }
  function v1692(b$$598, c$$483) {
    var d$$367 = this;
    var e$$318 = d$$367.options;
    var f$$158;
    var v3544;
    var v20089 = e$$318.modal;
    if (v20089) {
      v20089 = !b$$598;
    }
    var v15875 = v20089;
    var v20091 = !v15875;
    if (v20091) {
      var v24546 = e$$318.stack;
      var v20090 = !v24546;
      if (v20090) {
        var v24547 = e$$318.modal;
        v20090 = !v24547;
      }
      v15875 = v20090;
    }
    var v10186 = v15875;
    if (v10186) {
      v3544 = d$$367._trigger("focus", c$$483);
    } else {
      var v29821 = e$$318.zIndex;
      var v30300 = a$$628.ui;
      var v30083 = v30300.dialog;
      var v29822 = v30083.maxZ;
      var v29450 = v29821 > v29822;
      if (v29450) {
        var v30084 = a$$628.ui;
        var v29823 = v30084.dialog;
        v29823.maxZ = e$$318.zIndex;
      }
      var v29451 = d$$367.overlay;
      if (v29451) {
        var v30301 = a$$628.ui;
        var v30085 = v30301.dialog;
        var v30442 = v30085.maxZ;
        v30085.maxZ = v30442 + 1;
        var v30302 = d$$367.overlay;
        var v30086 = v30302.$el;
        var v30579 = a$$628.ui;
        var v30443 = v30579.dialog;
        var v30303 = v30443.overlay;
        var v30580 = a$$628.ui;
        var v30444 = v30580.dialog;
        var v30087 = v30303.maxZ = v30444.maxZ;
        v30086.css("z-index", v30087);
      }
      var v29452 = d$$367.element;
      var v28840 = v29452.scrollTop();
      var v29453 = d$$367.element;
      var v28841 = v29453.scrollLeft();
      f$$158 = {scrollTop:v28840, scrollLeft:v28841};
      var v28842 = a$$628.ui;
      var v27926 = v28842.dialog;
      var v29454 = v27926.maxZ;
      v27926.maxZ = v29454 + 1;
      var v26514 = d$$367.uiDialog;
      var v28843 = a$$628.ui;
      var v27927 = v28843.dialog;
      var v26515 = v27927.maxZ;
      v26514.css("z-index", v26515);
      var v24548 = d$$367.element;
      v24548.attr(f$$158);
      d$$367._trigger("focus", c$$483);
      v3544 = d$$367;
    }
    return v3544;
  }
  function v1691() {
    return this._isOpen;
  }
  function v1690(b$$597) {
    function v1689() {
      var v15876 = c$$482.uiDialog;
      var v10187 = v15876[0];
      var v3545 = this !== v10187;
      if (v3545) {
        var v15877 = a$$628(this);
        e$$317 = v15877.css("z-index");
        var v15878 = isNaN(e$$317);
        var v20092 = !v15878;
        if (v20092) {
          d$$366 = Math.max(d$$366, e$$317);
        }
      }
      return;
    }
    function v1688() {
      c$$482._trigger("close", b$$597);
      return;
    }
    var c$$482 = this;
    var d$$366;
    var e$$317;
    var v10188 = !1;
    var v10189 = c$$482._trigger("beforeClose", b$$597);
    var v3546 = v10188 === v10189;
    if (v3546) {
      return;
    }
    var v27928 = c$$482.overlay;
    if (v27928) {
      var v28844 = c$$482.overlay;
      v28844.destroy();
    }
    var v27929 = c$$482.uiDialog;
    v27929.unbind("keypress.ui-dialog");
    c$$482._isOpen = !1;
    var v24549;
    var v27930 = c$$482.options;
    var v26518 = v27930.hide;
    if (v26518) {
      var v26516 = c$$482.uiDialog;
      var v27931 = c$$482.options;
      var v26517 = v27931.hide;
      v24549 = v26516.hide(v26517, v1688);
    } else {
      var v27932 = c$$482.uiDialog;
      v27932.hide();
      v24549 = c$$482._trigger("close", b$$597);
    }
    v24549;
    var v26519 = a$$628.ui;
    var v24550 = v26519.dialog;
    var v20093 = v24550.overlay;
    v20093.resize();
    var v20094 = c$$482.options;
    var v15879 = v20094.modal;
    if (v15879) {
      d$$366 = 0;
      var v26520 = a$$628(".ui-dialog");
      v26520.each(v1689);
      var v26521 = a$$628.ui;
      var v24551 = v26521.dialog;
      v24551.maxZ = d$$366;
    }
    return c$$482;
  }
  function v1687() {
    return this.uiDialog;
  }
  function v1686() {
    var a$$631 = this;
    var v26522 = a$$631.overlay;
    if (v26522) {
      var v27933 = a$$631.overlay;
      v27933.destroy();
    }
    var v26523 = a$$631.uiDialog;
    v26523.hide();
    var v29455 = a$$631.element;
    var v28845 = v29455.unbind(".dialog");
    var v27934 = v28845.removeData("dialog");
    var v26524 = v27934.removeClass("ui-dialog-content ui-widget-content");
    var v24552 = v26524.hide();
    v24552.appendTo("body");
    var v20095 = a$$631.uiDialog;
    v20095.remove();
    var v15880 = a$$631.originalTitle;
    if (v15880) {
      var v20096 = a$$631.element;
      var v20097 = a$$631.originalTitle;
      v20096.attr("title", v20097);
    }
    return a$$631;
  }
  function v1685() {
    var v10190 = this.options;
    var v3547 = v10190.autoOpen;
    if (v3547) {
      this.open();
    }
    return;
  }
  function v1684() {
    function v1683(a$$630) {
      b$$596.close(a$$630);
      return!1;
    }
    function v1682() {
      j$$101.removeClass("ui-state-focus");
      return;
    }
    function v1681() {
      j$$101.addClass("ui-state-focus");
      return;
    }
    function v1680() {
      j$$101.removeClass("ui-state-hover");
      return;
    }
    function v1679() {
      j$$101.addClass("ui-state-hover");
      return;
    }
    function v1678(a$$629) {
      var v3548 = !1;
      b$$596.moveToTop(v3548, a$$629);
      return;
    }
    function v1677(c$$481) {
      var v20098 = d$$365.closeOnEscape;
      if (v20098) {
        var v24553 = c$$481.isDefaultPrevented();
        v20098 = !v24553;
      }
      var v15881 = v20098;
      if (v15881) {
        v15881 = c$$481.keyCode;
      }
      var v10191 = v15881;
      if (v10191) {
        var v15882 = c$$481.keyCode;
        var v24554 = a$$628.ui;
        var v20099 = v24554.keyCode;
        var v15883 = v20099.ESCAPE;
        v10191 = v15882 === v15883;
      }
      var v3549 = v10191;
      if (v3549) {
        b$$596.close(c$$481);
        c$$481.preventDefault();
      }
      return;
    }
    var v15884 = this.element;
    var v30997 = v15884.attr("title");
    this.originalTitle = v30997;
    var v24555 = this.originalTitle;
    var v20100 = typeof v24555;
    var v15885 = v20100 != "string";
    if (v15885) {
      this.originalTitle = "";
    }
    var v10192 = this.options;
    var v20101 = this.options;
    var v15886 = v20101.title;
    var v20102 = !v15886;
    if (v20102) {
      v15886 = this.originalTitle;
    }
    v10192.title = v15886;
    var b$$596 = this;
    var d$$365 = b$$596.options;
    var v3550 = d$$365.title;
    var v10193 = !v3550;
    if (v10193) {
      v3550 = "&#160;";
    }
    var e$$316 = v3550;
    var v10194 = a$$628.ui;
    var v3551 = v10194.dialog;
    var v3552 = b$$596.element;
    var f$$157 = v3551.getTitleId(v3552);
    var v29824 = b$$596;
    var v30998 = a$$628("<div></div>");
    var v29456 = v29824.uiDialog = v30998;
    var v29457 = document.body;
    var v28846 = v29456.appendTo(v29457);
    var v27935 = v28846.hide();
    var v28847 = d$$365.dialogClass;
    var v27936 = c$$479 + v28847;
    var v26525 = v27935.addClass(v27936);
    var v27937 = d$$365.zIndex;
    var v26526 = {zIndex:v27937};
    var v24556 = v26525.css(v26526);
    var v20103 = v24556.attr("tabIndex", -1);
    var v15887 = v20103.css("outline", 0);
    var v10195 = v15887.keydown(v1677);
    var v10196 = {role:"dialog", "aria-labelledby":f$$157};
    var v3553 = v10195.attr(v10196);
    var g$$175 = v3553.mousedown(v1678);
    var v20104 = b$$596.element;
    var v15888 = v20104.show();
    var v10197 = v15888.removeAttr("title");
    var v3554 = v10197.addClass("ui-dialog-content ui-widget-content");
    var h$$143 = v3554.appendTo(g$$175);
    var v15889 = b$$596;
    var v30999 = a$$628("<div></div>");
    var v10198 = v15889.uiDialogTitlebar = v30999;
    var v3555 = v10198.addClass("ui-dialog-titlebar ui-widget-header ui-corner-all ui-helper-clearfix");
    var i$$196 = v3555.prependTo(g$$175);
    var v27938 = a$$628('<a href="#"></a>');
    var v26527 = v27938.addClass("ui-dialog-titlebar-close ui-corner-all");
    var v24557 = v26527.attr("role", "button");
    var v20105 = v24557.hover(v1679, v1680);
    var v15890 = v20105.focus(v1681);
    var v10199 = v15890.blur(v1682);
    var v3556 = v10199.click(v1683);
    var j$$101 = v3556.appendTo(i$$196);
    var v20106 = b$$596;
    var v31000 = a$$628("<span></span>");
    var v15891 = v20106.uiDialogTitlebarCloseText = v31000;
    var v10200 = v15891.addClass("ui-icon ui-icon-closethick");
    var v10201 = d$$365.closeText;
    var v3557 = v10200.text(v10201);
    var k$$70 = v3557.appendTo(j$$101);
    var v20107 = a$$628("<span></span>");
    var v15892 = v20107.addClass("ui-dialog-title");
    var v10202 = v15892.attr("id", f$$157);
    var v3558 = v10202.html(e$$316);
    var l$$77 = v3558.prependTo(i$$196);
    var v29458 = d$$365.beforeclose;
    var v28848 = a$$628.isFunction(v29458);
    if (v28848) {
      var v29825 = d$$365.beforeClose;
      var v29459 = a$$628.isFunction(v29825);
      v28848 = !v29459;
    }
    var v27939 = v28848;
    if (v27939) {
      d$$365.beforeClose = d$$365.beforeclose;
    }
    var v28849 = i$$196.find("*");
    var v27940 = v28849.add(i$$196);
    v27940.disableSelection();
    var v27941 = d$$365.draggable;
    if (v27941) {
      var v28850 = a$$628.fn;
      v27941 = v28850.draggable;
    }
    var v26528 = v27941;
    if (v26528) {
      b$$596._makeDraggable();
    }
    var v26529 = d$$365.resizable;
    if (v26529) {
      var v27942 = a$$628.fn;
      v26529 = v27942.resizable;
    }
    var v24558 = v26529;
    if (v24558) {
      b$$596._makeResizable();
    }
    var v20108 = d$$365.buttons;
    b$$596._createButtons(v20108);
    b$$596._isOpen = !1;
    var v15893 = a$$628.fn;
    var v10203 = v15893.bgiframe;
    if (v10203) {
      g$$175.bgiframe();
    }
    return;
  }
  function v1676(b$$595) {
    var v15894 = a$$628(this);
    var v10204 = v15894.css(b$$595);
    var v3559 = v10204.offset();
    var c$$480 = v3559.top;
    var v3560 = c$$480 < 0;
    if (v3560) {
      var v10205 = a$$628(this);
      var v15895 = b$$595.top;
      var v10206 = v15895 - c$$480;
      v10205.css("top", v10206);
    }
    return;
  }
  var c$$479 = "ui-dialog ui-widget ui-widget-content ui-corner-all ";
  var v3561 = !0;
  var v3562 = !0;
  var v3563 = !0;
  var v3564 = !0;
  var v3565 = !0;
  var v3566 = !0;
  var v3567 = !0;
  var d$$364 = {buttons:v3561, height:v3562, maxHeight:v3563, maxWidth:v3564, minHeight:v3565, minWidth:v3566, width:v3567};
  var v3568 = !0;
  var v3569 = !0;
  var v3570 = !0;
  var v3571 = !0;
  var e$$315 = {maxHeight:v3568, maxWidth:v3569, minHeight:v3570, minWidth:v3571};
  var v26530 = !0;
  var v26531 = !0;
  var v26532 = !0;
  var v26533 = !1;
  var v26534 = !1;
  var v26535 = !1;
  var v26536 = {my:"center", at:"center", collision:"fit", using:v1676};
  var v26537 = !0;
  var v26538 = !0;
  var v24559 = {autoOpen:v26530, buttons:{}, closeOnEscape:v26531, closeText:"close", dialogClass:"", draggable:v26532, hide:null, height:"auto", maxHeight:v26533, maxWidth:v26534, minHeight:150, minWidth:150, modal:v26535, position:v26536, resizable:v26537, show:null, stack:v26538, title:"", width:300, zIndex:1E3};
  var v20109 = {options:v24559, _create:v1684, _init:v1685, destroy:v1686, widget:v1687, close:v1690, isOpen:v1691, moveToTop:v1692, open:v1694, _createButtons:v1699, _makeDraggable:v1703, _makeResizable:v1707, _minHeight:v1708, _position:v1710, _setOptions:v1712, _setOption:v1713, _size:v1714};
  a$$628.widget("ui.dialog", v20109);
  var v24560 = a$$628.ui;
  var v20110 = v24560.dialog;
  var v20111 = {version:"1.8.24", uuid:0, maxZ:0, getTitleId:v1715, overlay:v1716};
  a$$628.extend(v20110, v20111);
  var v24561 = a$$628.ui;
  var v20112 = v24561.dialog;
  var v15896 = v20112.overlay;
  var v26539 = "focus,mousedown,mouseup,keydown,keypress,click".split(",");
  var v24562 = a$$628.map(v26539, v1717);
  var v20113 = v24562.join(" ");
  var v15897 = {instances:[], oldInstances:[], maxZ:0, events:v20113, create:v1721, destroy:v1723, height:v1724, width:v1725, resize:v1727};
  a$$628.extend(v15896, v15897);
  var v24563 = a$$628.ui;
  var v20114 = v24563.dialog;
  var v15898 = v20114.overlay;
  var v10207 = v15898.prototype;
  var v10208 = {destroy:v1728};
  a$$628.extend(v10207, v10208);
  return;
}
function v1675($$$3, undefined$$1) {
  function v1674(a$$627) {
    function v1673() {
      var v3572;
      var v15899 = typeof a$$627;
      var v10213 = v15899 == "string";
      if (v10213) {
        var v15900 = $$$3.datepicker;
        var v20115 = "_" + a$$627;
        var v15901 = v20115 + "Datepicker";
        var v10209 = v15900[v15901];
        var v10210 = $$$3.datepicker;
        var v15902 = [this];
        var v10211 = v15902.concat(b$$593);
        v3572 = v10209.apply(v10210, v10211);
      } else {
        var v10212 = $$$3.datepicker;
        v3572 = v10212._attachDatepicker(this, a$$627);
      }
      v3572;
      return;
    }
    var v10214 = this.length;
    var v3573 = !v10214;
    if (v3573) {
      return this;
    }
    var v10215 = $$$3.datepicker;
    var v3574 = v10215.initialized;
    var v10216 = !v3574;
    if (v10216) {
      var v24564 = $$$3(document);
      var v26540 = $$$3.datepicker;
      var v24565 = v26540._checkExternalClick;
      var v20116 = v24564.mousedown(v24565);
      var v15903 = v20116.find("body");
      var v20117 = $$$3.datepicker;
      var v15904 = v20117.dpDiv;
      v15903.append(v15904);
      var v15905 = $$$3.datepicker;
      v15905.initialized = !0;
    }
    var v10217 = Array.prototype;
    var v3575 = v10217.slice;
    var b$$593 = v3575.call(arguments, 1);
    var v3576;
    var v20118 = typeof a$$627;
    var v15906 = v20118 != "string";
    var v20120 = !v15906;
    if (v20120) {
      var v24566 = a$$627 != "isDisabled";
      if (v24566) {
        v24566 = a$$627 != "getDate";
      }
      var v20119 = v24566;
      if (v20119) {
        v20119 = a$$627 != "widget";
      }
      v15906 = v20119;
    }
    var v10222 = v15906;
    if (v10222) {
      var v10218;
      var v24567 = a$$627 == "option";
      if (v24567) {
        var v26541 = arguments.length;
        v24567 = v26541 == 2;
      }
      var v20121 = v24567;
      if (v20121) {
        var v26542 = arguments[1];
        var v24568 = typeof v26542;
        v20121 = v24568 == "string";
      }
      var v15910 = v20121;
      if (v15910) {
        var v20122 = $$$3.datepicker;
        var v24569 = "_" + a$$627;
        var v20123 = v24569 + "Datepicker";
        var v15907 = v20122[v20123];
        var v15908 = $$$3.datepicker;
        var v24570 = this[0];
        var v20124 = [v24570];
        var v15909 = v20124.concat(b$$593);
        v10218 = v15907.apply(v15908, v15909);
      } else {
        v10218 = this.each(v1673);
      }
      v3576 = v10218;
    } else {
      var v15911 = $$$3.datepicker;
      var v20125 = "_" + a$$627;
      var v15912 = v20125 + "Datepicker";
      var v10219 = v15911[v15912];
      var v10220 = $$$3.datepicker;
      var v20126 = this[0];
      var v15913 = [v20126];
      var v10221 = v15913.concat(b$$593);
      v3576 = v10219.apply(v10220, v10221);
    }
    return v3576;
  }
  function v1672(a$$626, b$$592, c$$478, d$$363) {
    var v10223 = !b$$592;
    if (v10223) {
      a$$626.currentDay = a$$626.selectedDay;
      a$$626.currentMonth = a$$626.selectedMonth;
      a$$626.currentYear = a$$626.selectedYear;
    }
    var v3577;
    if (b$$592) {
      var v10224;
      var v20127 = typeof b$$592;
      var v15915 = v20127 == "object";
      if (v15915) {
        v10224 = b$$592;
      } else {
        var v15914 = new Date(d$$363, c$$478, b$$592);
        v10224 = this._daylightSavingAdjust(v15914);
      }
      v3577 = v10224;
    } else {
      var v15916 = a$$626.currentYear;
      var v15917 = a$$626.currentMonth;
      var v15918 = a$$626.currentDay;
      var v10225 = new Date(v15916, v15917, v15918);
      v3577 = this._daylightSavingAdjust(v10225);
    }
    var e$$314 = v3577;
    var v3578 = this._get(a$$626, "dateFormat");
    var v3579 = this._getFormatConfig(a$$626);
    return this.formatDate(v3578, e$$314, v3579);
  }
  function v1671(a$$625) {
    var b$$591 = this._get(a$$625, "shortYearCutoff");
    var v10226;
    var v20128 = typeof b$$591;
    var v15921 = v20128 != "string";
    if (v15921) {
      v10226 = b$$591;
    } else {
      var v24571 = new Date;
      var v20129 = v24571.getFullYear();
      var v15919 = v20129 % 100;
      var v15920 = parseInt(b$$591, 10);
      v10226 = v15919 + v15920;
    }
    b$$591 = v10226;
    var v10227 = this._get(a$$625, "dayNamesShort");
    var v10228 = this._get(a$$625, "dayNames");
    var v10229 = this._get(a$$625, "monthNamesShort");
    var v10230 = this._get(a$$625, "monthNames");
    return{shortYearCutoff:b$$591, dayNamesShort:v10227, dayNames:v10228, monthNamesShort:v10229, monthNames:v10230};
  }
  function v1670(a$$624, b$$590) {
    var c$$477 = this._getMinMaxDate(a$$624, "min");
    var d$$362 = this._getMinMaxDate(a$$624, "max");
    var v10231 = !c$$477;
    var v15924 = !v10231;
    if (v15924) {
      var v15922 = b$$590.getTime();
      var v15923 = c$$477.getTime();
      v10231 = v15922 >= v15923;
    }
    var v3580 = v10231;
    if (v3580) {
      var v10232 = !d$$362;
      var v15927 = !v10232;
      if (v15927) {
        var v15925 = b$$590.getTime();
        var v15926 = d$$362.getTime();
        v10232 = v15925 <= v15926;
      }
      v3580 = v10232;
    }
    return v3580;
  }
  function v1669(a$$623, b$$589, c$$476, d$$361) {
    var e$$313 = this._getNumberOfMonths(a$$623);
    var v20130;
    var v24574 = b$$589 < 0;
    if (v24574) {
      v20130 = b$$589;
    } else {
      var v24572 = e$$313[0];
      var v24573 = e$$313[1];
      v20130 = v24572 * v24573;
    }
    var v15928 = v20130;
    var v10233 = d$$361 + v15928;
    var v3581 = new Date(c$$476, v10233, 1);
    var f$$156 = this._daylightSavingAdjust(v3581);
    var v10234 = b$$589 < 0;
    if (v10234) {
      var v20131 = f$$156.getFullYear();
      var v20132 = f$$156.getMonth();
      var v15929 = this._getDaysInMonth(v20131, v20132);
      f$$156.setDate(v15929);
    }
    return this._isInRange(a$$623, f$$156);
  }
  function v1668(a$$622, b$$588) {
    var v3582 = new Date(a$$622, b$$588, 1);
    return v3582.getDay();
  }
  function v1667(a$$621, b$$587) {
    var v15930 = new Date(a$$621, b$$587, 32);
    var v10235 = this._daylightSavingAdjust(v15930);
    var v3583 = v10235.getDate();
    return 32 - v3583;
  }
  function v1666(a$$620, b$$586) {
    var v10236 = b$$586 + "Date";
    var v3584 = this._get(a$$620, v10236);
    return this._determineDate(a$$620, v3584, null);
  }
  function v1665(a$$619) {
    var b$$585 = this._get(a$$619, "numberOfMonths");
    var v3585;
    var v10238 = b$$585 == null;
    if (v10238) {
      v3585 = [1, 1];
    } else {
      var v10237;
      var v20133 = typeof b$$585;
      var v15931 = v20133 == "number";
      if (v15931) {
        v10237 = [1, b$$585];
      } else {
        v10237 = b$$585;
      }
      v3585 = v10237;
    }
    return v3585;
  }
  function v1664(a$$618) {
    var b$$584 = this._get(a$$618, "onChangeMonthYear");
    if (b$$584) {
      var v15932;
      var v20135 = a$$618.input;
      if (v20135) {
        var v20134 = a$$618.input;
        v15932 = v20134[0];
      } else {
        v15932 = null;
      }
      var v10239 = v15932;
      var v15933 = a$$618.selectedYear;
      var v20136 = a$$618.selectedMonth;
      var v15934 = v20136 + 1;
      var v10240 = [v15933, v15934, a$$618];
      b$$584.apply(v10239, v10240);
    }
    return;
  }
  function v1663(a$$617, b$$583) {
    var c$$475 = this._getMinMaxDate(a$$617, "min");
    var d$$360 = this._getMinMaxDate(a$$617, "max");
    var v3586;
    var v15935 = c$$475;
    if (v15935) {
      v15935 = b$$583 < c$$475;
    }
    var v10241 = v15935;
    if (v10241) {
      v3586 = c$$475;
    } else {
      v3586 = b$$583;
    }
    var e$$312 = v3586;
    var v10242;
    var v20137 = d$$360;
    if (v20137) {
      v20137 = e$$312 > d$$360;
    }
    var v15936 = v20137;
    if (v15936) {
      v10242 = d$$360;
    } else {
      v10242 = e$$312;
    }
    e$$312 = v10242;
    return e$$312;
  }
  function v1662(a$$616, b$$582, c$$474) {
    var v3587 = a$$616.drawYear;
    var v10243;
    var v15937 = c$$474 == "Y";
    if (v15937) {
      v10243 = b$$582;
    } else {
      v10243 = 0;
    }
    var v3588 = v10243;
    var d$$359 = v3587 + v3588;
    var v3589 = a$$616.drawMonth;
    var v10244;
    var v15938 = c$$474 == "M";
    if (v15938) {
      v10244 = b$$582;
    } else {
      v10244 = 0;
    }
    var v3590 = v10244;
    var e$$311 = v3589 + v3590;
    var v10245 = a$$616.selectedDay;
    var v10246 = this._getDaysInMonth(d$$359, e$$311);
    var v3591 = Math.min(v10245, v10246);
    var v10247;
    var v15939 = c$$474 == "D";
    if (v15939) {
      v10247 = b$$582;
    } else {
      v10247 = 0;
    }
    var v3592 = v10247;
    var f$$155 = v3591 + v3592;
    var v10248 = new Date(d$$359, e$$311, f$$155);
    var v3593 = this._daylightSavingAdjust(v10248);
    var g$$174 = this._restrictMinMax(a$$616, v3593);
    var v31001 = g$$174.getDate();
    a$$616.selectedDay = v31001;
    var v31002 = g$$174.getMonth();
    a$$616.drawMonth = a$$616.selectedMonth = v31002;
    var v31003 = g$$174.getFullYear();
    a$$616.drawYear = a$$616.selectedYear = v31003;
    var v15940 = c$$474 == "M";
    var v20138 = !v15940;
    if (v20138) {
      v15940 = c$$474 == "Y";
    }
    var v10249 = v15940;
    if (v10249) {
      this._notifyChange(a$$616);
    }
    return;
  }
  function v1661(a$$614, b$$580, c$$473, d$$358, e$$310, f$$154, g$$173, h$$142) {
    function v1660(a$$615) {
      var v3594;
      var v10253 = a$$615.match(/c[+-].*/);
      if (v10253) {
        var v10250 = c$$473;
        var v15941 = a$$615.substring(1);
        var v10251 = parseInt(v15941, 10);
        v3594 = v10250 + v10251;
      } else {
        var v10252;
        var v15944 = a$$615.match(/[+-].*/);
        if (v15944) {
          var v15942 = r$$20;
          var v15943 = parseInt(a$$615, 10);
          v10252 = v15942 + v15943;
        } else {
          v10252 = parseInt(a$$615, 10);
        }
        v3594 = v10252;
      }
      var b$$581 = v3594;
      var v3595;
      var v10254 = isNaN(b$$581);
      if (v10254) {
        v3595 = r$$20;
      } else {
        v3595 = b$$581;
      }
      return v3595;
    }
    var i$$195 = this._get(a$$614, "changeMonth");
    var j$$100 = this._get(a$$614, "changeYear");
    var k$$69 = this._get(a$$614, "showMonthAfterYear");
    var l$$76 = '<div class="ui-datepicker-title">';
    var m$$47 = "";
    var v10255 = f$$154;
    var v15945 = !v10255;
    if (v15945) {
      v10255 = !i$$195;
    }
    var v3600 = v10255;
    if (v3600) {
      var v20139 = g$$173[b$$580];
      var v15946 = '<span class="ui-datepicker-month">' + v20139;
      var v10256 = v15946 + "</span>";
      m$$47 = m$$47 + v10256;
    } else {
      var v3596 = d$$358;
      if (v3596) {
        var v10257 = d$$358.getFullYear();
        v3596 = v10257 == c$$473;
      }
      var n$$93 = v3596;
      var v3597 = e$$310;
      if (v3597) {
        var v10258 = e$$310.getFullYear();
        v3597 = v10258 == c$$473;
      }
      var o$$23 = v3597;
      m$$47 = m$$47 + '<select class="ui-datepicker-month" data-handler="selectMonth" data-event="change">';
      var p$$48 = 0;
      var v3599 = p$$48 < 12;
      for (;v3599;) {
        var v15947 = !n$$93;
        var v20142 = !v15947;
        if (v20142) {
          var v20140 = p$$48;
          var v20141 = d$$358.getMonth();
          v15947 = v20140 >= v20141;
        }
        var v10259 = v15947;
        if (v10259) {
          var v15948 = !o$$23;
          var v20145 = !v15948;
          if (v20145) {
            var v20143 = p$$48;
            var v20144 = e$$310.getMonth();
            v15948 = v20143 <= v20144;
          }
          v10259 = v15948;
        }
        var v3598 = v10259;
        if (v3598) {
          var v28851 = '<option value="' + p$$48;
          var v27943 = v28851 + '"';
          var v28852;
          var v29460 = p$$48 == b$$580;
          if (v29460) {
            v28852 = ' selected="selected"';
          } else {
            v28852 = "";
          }
          var v27944 = v28852;
          var v26543 = v27943 + v27944;
          var v24575 = v26543 + ">";
          var v24576 = h$$142[p$$48];
          var v20146 = v24575 + v24576;
          var v15949 = v20146 + "</option>";
          m$$47 = m$$47 + v15949;
        }
        p$$48++;
        v3599 = p$$48 < 12;
      }
      m$$47 = m$$47 + "</select>";
    }
    var v10260 = !k$$69;
    if (v10260) {
      var v24577;
      var v28853 = f$$154;
      var v29461 = !v28853;
      if (v29461) {
        v28853 = !i$$195;
      }
      var v27945 = v28853;
      var v28854 = !v27945;
      if (v28854) {
        v27945 = !j$$100;
      }
      var v26544 = v27945;
      if (v26544) {
        v24577 = "&#xa0;";
      } else {
        v24577 = "";
      }
      var v20147 = v24577;
      var v15950 = m$$47 + v20147;
      l$$76 = l$$76 + v15950;
    }
    var v10261 = a$$614.yearshtml;
    var v3607 = !v10261;
    if (v3607) {
      a$$614.yearshtml = "";
      var v10262 = f$$154;
      var v15951 = !v10262;
      if (v15951) {
        v10262 = !j$$100;
      }
      var v3606 = v10262;
      if (v3606) {
        var v15952 = '<span class="ui-datepicker-year">' + c$$473;
        var v10263 = v15952 + "</span>";
        l$$76 = l$$76 + v10263;
      } else {
        var v3601 = this._get(a$$614, "yearRange");
        var q$$19 = v3601.split(":");
        var v3602 = new Date;
        var r$$20 = v3602.getFullYear();
        var s$$29 = v1660;
        var v3603 = q$$19[0];
        var t$$14 = s$$29(v3603);
        var v15953 = q$$19[1];
        var v20148 = !v15953;
        if (v20148) {
          v15953 = "";
        }
        var v10264 = v15953;
        var v3604 = s$$29(v10264);
        var u$$12 = Math.max(t$$14, v3604);
        var v15954;
        if (d$$358) {
          var v20149 = d$$358.getFullYear();
          v15954 = Math.max(t$$14, v20149);
        } else {
          v15954 = t$$14;
        }
        t$$14 = v15954;
        var v15955;
        if (e$$310) {
          var v20150 = e$$310.getFullYear();
          v15955 = Math.min(u$$12, v20150);
        } else {
          v15955 = u$$12;
        }
        u$$12 = v15955;
        var v15956 = a$$614.yearshtml;
        a$$614.yearshtml = v15956 + '<select class="ui-datepicker-year" data-handler="selectYear" data-event="change">';
        var v3605 = t$$14 <= u$$12;
        for (;v3605;) {
          var v10265 = a$$614.yearshtml;
          var v27946 = '<option value="' + t$$14;
          var v26545 = v27946 + '"';
          var v27947;
          var v28855 = t$$14 == c$$473;
          if (v28855) {
            v27947 = ' selected="selected"';
          } else {
            v27947 = "";
          }
          var v26546 = v27947;
          var v24578 = v26545 + v26546;
          var v20151 = v24578 + ">";
          var v15957 = v20151 + t$$14;
          var v10266 = v15957 + "</option>";
          a$$614.yearshtml = v10265 + v10266;
          t$$14++;
          v3605 = t$$14 <= u$$12;
        }
        var v20152 = a$$614.yearshtml;
        a$$614.yearshtml = v20152 + "</select>";
        var v20153 = a$$614.yearshtml;
        l$$76 = l$$76 + v20153;
        a$$614.yearshtml = null;
      }
    }
    var v24579 = l$$76;
    var v24580 = this._get(a$$614, "yearSuffix");
    l$$76 = v24579 + v24580;
    if (k$$69) {
      var v28856;
      var v30088 = f$$154;
      var v30304 = !v30088;
      if (v30304) {
        v30088 = !i$$195;
      }
      var v29826 = v30088;
      var v30089 = !v29826;
      if (v30089) {
        v29826 = !j$$100;
      }
      var v29462 = v29826;
      if (v29462) {
        v28856 = "&#xa0;";
      } else {
        v28856 = "";
      }
      var v27948 = v28856;
      var v26547 = v27948 + m$$47;
      l$$76 = l$$76 + v26547;
    }
    l$$76 = l$$76 + "</div>";
    return l$$76;
  }
  function v1659(a$$613) {
    var b$$579 = new Date;
    var v10267 = b$$579.getFullYear();
    var v10268 = b$$579.getMonth();
    var v10269 = b$$579.getDate();
    var v3608 = new Date(v10267, v10268, v10269);
    b$$579 = this._daylightSavingAdjust(v3608);
    var c$$472 = this._get(a$$613, "isRTL");
    var d$$357 = this._get(a$$613, "showButtonPanel");
    var e$$309 = this._get(a$$613, "hideIfNoPrevNext");
    var f$$153 = this._get(a$$613, "navigationAsDateFormat");
    var g$$172 = this._getNumberOfMonths(a$$613);
    var h$$141 = this._get(a$$613, "showCurrentAtPos");
    var i$$194 = this._get(a$$613, "stepMonths");
    var v10270 = g$$172[0];
    var v3609 = v10270 != 1;
    var v10272 = !v3609;
    if (v10272) {
      var v10271 = g$$172[1];
      v3609 = v10271 != 1;
    }
    var j$$99 = v3609;
    var v10273;
    var v15961 = a$$613.currentDay;
    if (v15961) {
      var v15958 = a$$613.currentYear;
      var v15959 = a$$613.currentMonth;
      var v15960 = a$$613.currentDay;
      v10273 = new Date(v15958, v15959, v15960);
    } else {
      v10273 = new Date(9999, 9, 9);
    }
    var v3610 = v10273;
    var k$$68 = this._daylightSavingAdjust(v3610);
    var l$$75 = this._getMinMaxDate(a$$613, "min");
    var m$$46 = this._getMinMaxDate(a$$613, "max");
    var v3611 = a$$613.drawMonth;
    var n$$92 = v3611 - h$$141;
    var o$$22 = a$$613.drawYear;
    var v3612 = n$$92 < 0;
    if (v3612) {
      n$$92 = n$$92 + 12;
      o$$22--;
    }
    if (m$$46) {
      var v10274 = m$$46.getFullYear();
      var v20154 = m$$46.getMonth();
      var v24581 = g$$172[0];
      var v24582 = g$$172[1];
      var v20155 = v24581 * v24582;
      var v15962 = v20154 - v20155;
      var v10275 = v15962 + 1;
      var v10276 = m$$46.getDate();
      var v3613 = new Date(v10274, v10275, v10276);
      var p$$47 = this._daylightSavingAdjust(v3613);
      var v3614;
      var v15963 = l$$75;
      if (v15963) {
        v15963 = p$$47 < l$$75;
      }
      var v10277 = v15963;
      if (v10277) {
        v3614 = l$$75;
      } else {
        v3614 = p$$47;
      }
      p$$47 = v3614;
      var v15964 = new Date(o$$22, n$$92, 1);
      var v10278 = this._daylightSavingAdjust(v15964);
      var v3615 = v10278 > p$$47;
      for (;v3615;) {
        n$$92--;
        var v10279 = n$$92 < 0;
        if (v10279) {
          n$$92 = 11;
          o$$22--;
        }
        var v15965 = new Date(o$$22, n$$92, 1);
        var v10280 = this._daylightSavingAdjust(v15965);
        v3615 = v10280 > p$$47;
      }
    }
    a$$613.drawMonth = n$$92;
    a$$613.drawYear = o$$22;
    var q$$18 = this._get(a$$613, "prevText");
    var v3616;
    if (f$$153) {
      var v20156 = n$$92 - i$$194;
      var v15966 = new Date(o$$22, v20156, 1);
      var v10281 = this._daylightSavingAdjust(v15966);
      var v10282 = this._getFormatConfig(a$$613);
      v3616 = this.formatDate(q$$18, v10281, v10282);
    } else {
      v3616 = q$$18;
    }
    q$$18 = v3616;
    var v3617;
    var v10285 = this._canAdjustMonth(a$$613, -1, o$$22, n$$92);
    if (v10285) {
      var v26548 = '<a class="ui-datepicker-prev ui-corner-all" data-handler="prev" data-event="click" title="' + q$$18;
      var v24583 = v26548 + '"><span class="ui-icon ui-icon-circle-triangle-';
      var v26549;
      if (c$$472) {
        v26549 = "e";
      } else {
        v26549 = "w";
      }
      var v24584 = v26549;
      var v20157 = v24583 + v24584;
      var v15967 = v20157 + '">';
      var v10283 = v15967 + q$$18;
      v3617 = v10283 + "</span></a>";
    } else {
      var v10284;
      if (e$$309) {
        v10284 = "";
      } else {
        var v27949 = '<a class="ui-datepicker-prev ui-corner-all ui-state-disabled" title="' + q$$18;
        var v26550 = v27949 + '"><span class="ui-icon ui-icon-circle-triangle-';
        var v27950;
        if (c$$472) {
          v27950 = "e";
        } else {
          v27950 = "w";
        }
        var v26551 = v27950;
        var v24585 = v26550 + v26551;
        var v20158 = v24585 + '">';
        var v15968 = v20158 + q$$18;
        v10284 = v15968 + "</span></a>";
      }
      v3617 = v10284;
    }
    var r$$19 = v3617;
    var s$$28 = this._get(a$$613, "nextText");
    var v3618;
    if (f$$153) {
      var v20159 = n$$92 + i$$194;
      var v15969 = new Date(o$$22, v20159, 1);
      var v10286 = this._daylightSavingAdjust(v15969);
      var v10287 = this._getFormatConfig(a$$613);
      v3618 = this.formatDate(s$$28, v10286, v10287);
    } else {
      v3618 = s$$28;
    }
    s$$28 = v3618;
    var v3619;
    var v10290 = this._canAdjustMonth(a$$613, 1, o$$22, n$$92);
    if (v10290) {
      var v26552 = '<a class="ui-datepicker-next ui-corner-all" data-handler="next" data-event="click" title="' + s$$28;
      var v24586 = v26552 + '"><span class="ui-icon ui-icon-circle-triangle-';
      var v26553;
      if (c$$472) {
        v26553 = "w";
      } else {
        v26553 = "e";
      }
      var v24587 = v26553;
      var v20160 = v24586 + v24587;
      var v15970 = v20160 + '">';
      var v10288 = v15970 + s$$28;
      v3619 = v10288 + "</span></a>";
    } else {
      var v10289;
      if (e$$309) {
        v10289 = "";
      } else {
        var v27951 = '<a class="ui-datepicker-next ui-corner-all ui-state-disabled" title="' + s$$28;
        var v26554 = v27951 + '"><span class="ui-icon ui-icon-circle-triangle-';
        var v27952;
        if (c$$472) {
          v27952 = "w";
        } else {
          v27952 = "e";
        }
        var v26555 = v27952;
        var v24588 = v26554 + v26555;
        var v20161 = v24588 + '">';
        var v15971 = v20161 + s$$28;
        v10289 = v15971 + "</span></a>";
      }
      v3619 = v10289;
    }
    var t$$13 = v3619;
    var u$$11 = this._get(a$$613, "currentText");
    var v3620;
    var v15972 = this._get(a$$613, "gotoCurrent");
    if (v15972) {
      v15972 = a$$613.currentDay;
    }
    var v10291 = v15972;
    if (v10291) {
      v3620 = k$$68;
    } else {
      v3620 = b$$579;
    }
    var v$$10 = v3620;
    var v3621;
    if (f$$153) {
      var v10292 = this._getFormatConfig(a$$613);
      v3621 = this.formatDate(u$$11, v$$10, v10292);
    } else {
      v3621 = u$$11;
    }
    u$$11 = v3621;
    var v3622;
    var v10294 = a$$613.inline;
    if (v10294) {
      v3622 = "";
    } else {
      var v15973 = this._get(a$$613, "closeText");
      var v10293 = '<button type="button" class="ui-datepicker-close ui-state-default ui-priority-primary ui-corner-all" data-handler="hide" data-event="click">' + v15973;
      v3622 = v10293 + "</button>";
    }
    var w$$17 = v3622;
    var v3623;
    if (d$$357) {
      var v26556;
      if (c$$472) {
        v26556 = w$$17;
      } else {
        v26556 = "";
      }
      var v24589 = v26556;
      var v20162 = '<div class="ui-datepicker-buttonpane ui-widget-content">' + v24589;
      var v24590;
      var v26558 = this._isInRange(a$$613, v$$10);
      if (v26558) {
        var v26557 = '<button type="button" class="ui-datepicker-current ui-state-default ui-priority-secondary ui-corner-all" data-handler="today" data-event="click">' + u$$11;
        v24590 = v26557 + "</button>";
      } else {
        v24590 = "";
      }
      var v20163 = v24590;
      var v15974 = v20162 + v20163;
      var v20164;
      if (c$$472) {
        v20164 = "";
      } else {
        v20164 = w$$17;
      }
      var v15975 = v20164;
      var v10295 = v15974 + v15975;
      v3623 = v10295 + "</div>";
    } else {
      v3623 = "";
    }
    var x$$73 = v3623;
    var v3624 = this._get(a$$613, "firstDay");
    var y$$54 = parseInt(v3624, 10);
    var v3625;
    var v10296 = isNaN(y$$54);
    if (v10296) {
      v3625 = 0;
    } else {
      v3625 = y$$54;
    }
    y$$54 = v3625;
    var z$$6 = this._get(a$$613, "showWeek");
    var A$$3 = this._get(a$$613, "dayNames");
    var B$$2 = this._get(a$$613, "dayNamesShort");
    var C$$2 = this._get(a$$613, "dayNamesMin");
    var D$$2 = this._get(a$$613, "monthNames");
    var E$$2 = this._get(a$$613, "monthNamesShort");
    var F$$2 = this._get(a$$613, "beforeShowDay");
    var G$$2 = this._get(a$$613, "showOtherMonths");
    var H$$2 = this._get(a$$613, "selectOtherMonths");
    var v3626 = this._get(a$$613, "calculateWeek");
    var v10297 = !v3626;
    if (v10297) {
      v3626 = this.iso8601Week;
    }
    var I$$2 = v3626;
    var J$$2 = this._getDefaultDate(a$$613);
    var K$$1 = "";
    var L$$1 = 0;
    var v10298 = g$$172[0];
    var v3644 = L$$1 < v10298;
    for (;v3644;) {
      var M$$1 = "";
      this.maxRows = 4;
      var N$$1 = 0;
      var v10299 = g$$172[1];
      var v3643 = N$$1 < v10299;
      for (;v3643;) {
        var v10300 = a$$613.selectedDay;
        var v3627 = new Date(o$$22, n$$92, v10300);
        var O$$1 = this._daylightSavingAdjust(v3627);
        var P$$1 = " ui-corner-all";
        var Q$$1 = "";
        if (j$$99) {
          Q$$1 = Q$$1 + '<div class="ui-datepicker-group';
          var v10301 = g$$172[1];
          var v3628 = v10301 > 1;
          if (v3628) {
            switch(N$$1) {
              case 0:
                Q$$1 = Q$$1 + " ui-datepicker-group-first";
                var v15976;
                if (c$$472) {
                  v15976 = "right";
                } else {
                  v15976 = "left";
                }
                var v10302 = v15976;
                P$$1 = " ui-corner-" + v10302;
                break;
              case g$$172[1] - 1:
                Q$$1 = Q$$1 + " ui-datepicker-group-last";
                var v15977;
                if (c$$472) {
                  v15977 = "left";
                } else {
                  v15977 = "right";
                }
                var v10303 = v15977;
                P$$1 = " ui-corner-" + v10303;
                break;
              default:
                Q$$1 = Q$$1 + " ui-datepicker-group-middle";
                P$$1 = "";
            }
          }
          Q$$1 = Q$$1 + '">';
        }
        var v28857 = '<div class="ui-datepicker-header ui-widget-header ui-helper-clearfix' + P$$1;
        var v27953 = v28857 + '">';
        var v28858;
        var v29827 = /all|left/.test(P$$1);
        if (v29827) {
          v29827 = L$$1 == 0;
        }
        var v29464 = v29827;
        if (v29464) {
          var v29463;
          if (c$$472) {
            v29463 = t$$13;
          } else {
            v29463 = r$$19;
          }
          v28858 = v29463;
        } else {
          v28858 = "";
        }
        var v27954 = v28858;
        var v26559 = v27953 + v27954;
        var v27955;
        var v29465 = /all|right/.test(P$$1);
        if (v29465) {
          v29465 = L$$1 == 0;
        }
        var v28860 = v29465;
        if (v28860) {
          var v28859;
          if (c$$472) {
            v28859 = r$$19;
          } else {
            v28859 = t$$13;
          }
          v27955 = v28859;
        } else {
          v27955 = "";
        }
        var v26560 = v27955;
        var v24591 = v26559 + v26560;
        var v27956 = L$$1 > 0;
        var v28861 = !v27956;
        if (v28861) {
          v27956 = N$$1 > 0;
        }
        var v26561 = v27956;
        var v24592 = this._generateMonthYearHeader(a$$613, n$$92, o$$22, l$$75, m$$46, v26561, D$$2, E$$2);
        var v20165 = v24591 + v24592;
        var v15978 = v20165 + '</div><table class="ui-datepicker-calendar"><thead>';
        var v10304 = v15978 + "<tr>";
        Q$$1 = Q$$1 + v10304;
        var v3629;
        if (z$$6) {
          var v15979 = this._get(a$$613, "weekHeader");
          var v10305 = '<th class="ui-datepicker-week-col">' + v15979;
          v3629 = v10305 + "</th>";
        } else {
          v3629 = "";
        }
        var R$$1 = v3629;
        var S$$1 = 0;
        var v3631 = S$$1 < 7;
        for (;v3631;) {
          var v3630 = S$$1 + y$$54;
          var T$$3 = v3630 % 7;
          var v29828;
          var v30581 = S$$1 + y$$54;
          var v30445 = v30581 + 6;
          var v30305 = v30445 % 7;
          var v30090 = v30305 >= 5;
          if (v30090) {
            v29828 = ' class="ui-datepicker-week-end"';
          } else {
            v29828 = "";
          }
          var v29466 = v29828;
          var v28862 = "<th" + v29466;
          var v27957 = v28862 + ">";
          var v26562 = v27957 + '<span title="';
          var v26563 = A$$3[T$$3];
          var v24593 = v26562 + v26563;
          var v20166 = v24593 + '">';
          var v20167 = C$$2[T$$3];
          var v15980 = v20166 + v20167;
          var v10306 = v15980 + "</span></th>";
          R$$1 = R$$1 + v10306;
          S$$1++;
          v3631 = S$$1 < 7;
        }
        var v10307 = R$$1 + "</tr></thead><tbody>";
        Q$$1 = Q$$1 + v10307;
        var U$$1 = this._getDaysInMonth(o$$22, n$$92);
        var v15981 = a$$613.selectedYear;
        var v10308 = o$$22 == v15981;
        if (v10308) {
          var v15982 = a$$613.selectedMonth;
          v10308 = n$$92 == v15982;
        }
        var v3632 = v10308;
        if (v3632) {
          var v10309 = a$$613.selectedDay;
          var v31004 = Math.min(v10309, U$$1);
          a$$613.selectedDay = v31004;
        }
        var v15983 = this._getFirstDayOfMonth(o$$22, n$$92);
        var v10310 = v15983 - y$$54;
        var v3633 = v10310 + 7;
        var V$$1 = v3633 % 7;
        var v10311 = V$$1 + U$$1;
        var v3634 = v10311 / 7;
        var W$$1 = Math.ceil(v3634);
        var v3635;
        if (j$$99) {
          var v10312;
          var v20168 = this.maxRows;
          var v15984 = v20168 > W$$1;
          if (v15984) {
            v10312 = this.maxRows;
          } else {
            v10312 = W$$1;
          }
          v3635 = v10312;
        } else {
          v3635 = W$$1;
        }
        var X$$1 = v3635;
        this.maxRows = X$$1;
        var v10313 = 1 - V$$1;
        var v3636 = new Date(o$$22, n$$92, v10313);
        var Y$$1 = this._daylightSavingAdjust(v3636);
        var Z$$1 = 0;
        var v3642 = Z$$1 < X$$1;
        for (;v3642;) {
          Q$$1 = Q$$1 + "<tr>";
          var v3637;
          if (z$$6) {
            var v20169 = this._get(a$$613, "calculateWeek");
            var v15985 = v20169(Y$$1);
            var v10314 = '<td class="ui-datepicker-week-col">' + v15985;
            v3637 = v10314 + "</td>";
          } else {
            v3637 = "";
          }
          var _$$2 = v3637;
          S$$1 = 0;
          var v3641 = S$$1 < 7;
          for (;v3641;) {
            var v3638;
            if (F$$2) {
              var v15986;
              var v20171 = a$$613.input;
              if (v20171) {
                var v20170 = a$$613.input;
                v15986 = v20170[0];
              } else {
                v15986 = null;
              }
              var v10315 = v15986;
              var v10316 = [Y$$1];
              v3638 = F$$2.apply(v10315, v10316);
            } else {
              var v10317 = !0;
              v3638 = [v10317, ""];
            }
            var ba$$1 = v3638;
            var v3639 = Y$$1.getMonth();
            var bb$$1 = v3639 != n$$92;
            var v20172 = bb$$1;
            if (v20172) {
              v20172 = !H$$2;
            }
            var v15987 = v20172;
            var v20174 = !v15987;
            if (v20174) {
              var v20173 = ba$$1[0];
              v15987 = !v20173;
            }
            var v10318 = v15987;
            var v15989 = !v10318;
            if (v15989) {
              var v15988 = l$$75;
              if (v15988) {
                v15988 = Y$$1 < l$$75;
              }
              v10318 = v15988;
            }
            var v3640 = v10318;
            var v10320 = !v3640;
            if (v10320) {
              var v10319 = m$$46;
              if (v10319) {
                v10319 = Y$$1 > m$$46;
              }
              v3640 = v10319;
            }
            var bc$$1 = v3640;
            var v30719;
            var v30834 = S$$1 + y$$54;
            var v30816 = v30834 + 6;
            var v30793 = v30816 % 7;
            var v30761 = v30793 >= 5;
            if (v30761) {
              v30719 = " ui-datepicker-week-end";
            } else {
              v30719 = "";
            }
            var v30663 = v30719;
            var v30582 = '<td class="' + v30663;
            var v30664;
            if (bb$$1) {
              v30664 = " ui-datepicker-other-month";
            } else {
              v30664 = "";
            }
            var v30583 = v30664;
            var v30446 = v30582 + v30583;
            var v30584;
            var v30817 = Y$$1.getTime();
            var v30818 = O$$1.getTime();
            var v30794 = v30817 == v30818;
            if (v30794) {
              var v30819 = a$$613.selectedMonth;
              v30794 = n$$92 == v30819;
            }
            var v30762 = v30794;
            if (v30762) {
              v30762 = a$$613._keyEvent;
            }
            var v30720 = v30762;
            var v30764 = !v30720;
            if (v30764) {
              var v30795 = J$$2.getTime();
              var v30796 = Y$$1.getTime();
              var v30763 = v30795 == v30796;
              if (v30763) {
                var v30797 = J$$2.getTime();
                var v30798 = O$$1.getTime();
                v30763 = v30797 == v30798;
              }
              v30720 = v30763;
            }
            var v30666 = v30720;
            if (v30666) {
              var v30665 = this._dayOverClass;
              v30584 = " " + v30665;
            } else {
              v30584 = "";
            }
            var v30447 = v30584;
            var v30306 = v30446 + v30447;
            var v30448;
            if (bc$$1) {
              var v30667 = this._unselectableClass;
              var v30585 = " " + v30667;
              v30448 = v30585 + " ui-state-disabled";
            } else {
              v30448 = "";
            }
            var v30307 = v30448;
            var v30091 = v30306 + v30307;
            var v30308;
            var v30586 = bb$$1;
            if (v30586) {
              v30586 = !G$$2;
            }
            var v30451 = v30586;
            if (v30451) {
              v30308 = "";
            } else {
              var v30668 = ba$$1[1];
              var v30587 = " " + v30668;
              var v30669;
              var v30765 = Y$$1.getTime();
              var v30766 = k$$68.getTime();
              var v30722 = v30765 == v30766;
              if (v30722) {
                var v30721 = this._currentClass;
                v30669 = " " + v30721;
              } else {
                v30669 = "";
              }
              var v30588 = v30669;
              var v30449 = v30587 + v30588;
              var v30589;
              var v30723 = Y$$1.getTime();
              var v30724 = b$$579.getTime();
              var v30670 = v30723 == v30724;
              if (v30670) {
                v30589 = " ui-datepicker-today";
              } else {
                v30589 = "";
              }
              var v30450 = v30589;
              v30308 = v30449 + v30450;
            }
            var v30092 = v30308;
            var v29829 = v30091 + v30092;
            var v29467 = v29829 + '"';
            var v29830;
            var v30452 = !bb$$1;
            var v30590 = !v30452;
            if (v30590) {
              v30452 = G$$2;
            }
            var v30309 = v30452;
            if (v30309) {
              v30309 = ba$$1[2];
            }
            var v30094 = v30309;
            if (v30094) {
              var v30310 = ba$$1[2];
              var v30093 = ' title="' + v30310;
              v29830 = v30093 + '"';
            } else {
              v29830 = "";
            }
            var v29468 = v29830;
            var v28863 = v29467 + v29468;
            var v29469;
            if (bc$$1) {
              v29469 = "";
            } else {
              var v30453 = Y$$1.getMonth();
              var v30311 = ' data-handler="selectDay" data-event="click" data-month="' + v30453;
              var v30095 = v30311 + '" data-year="';
              var v30096 = Y$$1.getFullYear();
              var v29831 = v30095 + v30096;
              v29469 = v29831 + '"';
            }
            var v28864 = v29469;
            var v27958 = v28863 + v28864;
            var v26564 = v27958 + ">";
            var v27959;
            var v29470 = bb$$1;
            if (v29470) {
              v29470 = !G$$2;
            }
            var v28866 = v29470;
            if (v28866) {
              v27959 = "&#xa0;";
            } else {
              var v28865;
              if (bc$$1) {
                var v29832 = Y$$1.getDate();
                var v29471 = '<span class="ui-state-default">' + v29832;
                v28865 = v29471 + "</span>";
              } else {
                var v30671;
                var v30767 = Y$$1.getTime();
                var v30768 = b$$579.getTime();
                var v30725 = v30767 == v30768;
                if (v30725) {
                  v30671 = " ui-state-highlight";
                } else {
                  v30671 = "";
                }
                var v30591 = v30671;
                var v30454 = '<a class="ui-state-default' + v30591;
                var v30592;
                var v30726 = Y$$1.getTime();
                var v30727 = k$$68.getTime();
                var v30672 = v30726 == v30727;
                if (v30672) {
                  v30592 = " ui-state-active";
                } else {
                  v30592 = "";
                }
                var v30455 = v30592;
                var v30312 = v30454 + v30455;
                var v30456;
                if (bb$$1) {
                  v30456 = " ui-priority-secondary";
                } else {
                  v30456 = "";
                }
                var v30313 = v30456;
                var v30097 = v30312 + v30313;
                var v29833 = v30097 + '" href="#">';
                var v29834 = Y$$1.getDate();
                var v29472 = v29833 + v29834;
                v28865 = v29472 + "</a>";
              }
              v27959 = v28865;
            }
            var v26565 = v27959;
            var v24594 = v26564 + v26565;
            var v20175 = v24594 + "</td>";
            _$$2 = _$$2 + v20175;
            var v20176 = Y$$1.getDate();
            var v15990 = v20176 + 1;
            Y$$1.setDate(v15990);
            Y$$1 = this._daylightSavingAdjust(Y$$1);
            S$$1++;
            v3641 = S$$1 < 7;
          }
          var v10321 = _$$2 + "</tr>";
          Q$$1 = Q$$1 + v10321;
          Z$$1++;
          v3642 = Z$$1 < X$$1;
        }
        n$$92++;
        var v20177 = n$$92 > 11;
        if (v20177) {
          n$$92 = 0;
          o$$22++;
        }
        var v26566;
        if (j$$99) {
          var v28867;
          var v30098 = g$$172[0];
          var v29835 = v30098 > 0;
          if (v29835) {
            var v30314 = g$$172[1];
            var v30099 = v30314 - 1;
            v29835 = N$$1 == v30099;
          }
          var v29473 = v29835;
          if (v29473) {
            v28867 = '<div class="ui-datepicker-row-break"></div>';
          } else {
            v28867 = "";
          }
          var v27960 = v28867;
          v26566 = "</div>" + v27960;
        } else {
          v26566 = "";
        }
        var v24595 = v26566;
        var v20178 = "</tbody></table>" + v24595;
        Q$$1 = Q$$1 + v20178;
        M$$1 = M$$1 + Q$$1;
        N$$1++;
        var v10322 = g$$172[1];
        v3643 = N$$1 < v10322;
      }
      K$$1 = K$$1 + M$$1;
      L$$1++;
      var v10323 = g$$172[0];
      v3644 = L$$1 < v10323;
    }
    var v26567;
    var v29836 = $$$3.browser;
    var v29474 = v29836.msie;
    if (v29474) {
      var v30315 = $$$3.browser;
      var v30100 = v30315.version;
      var v29837 = parseInt(v30100, 10);
      v29474 = v29837 < 7;
    }
    var v28868 = v29474;
    if (v28868) {
      var v29475 = a$$613.inline;
      v28868 = !v29475;
    }
    var v27961 = v28868;
    if (v27961) {
      v26567 = '<iframe src="javascript:false;" class="ui-datepicker-cover" frameborder="0"></iframe>';
    } else {
      v26567 = "";
    }
    var v24596 = v26567;
    var v20179 = x$$73 + v24596;
    K$$1 = K$$1 + v20179;
    a$$613._keyEvent = !1;
    return K$$1;
  }
  function v1658(a$$611) {
    function v1657() {
      function v1656() {
        var v20180 = "DP_jQuery_" + dpuuid;
        var v15991 = window[v20180];
        var v10324 = v15991.datepicker;
        v10324._selectMonthYear(c$$471, this, "Y");
        return!1;
      }
      function v1655() {
        var v20181 = "DP_jQuery_" + dpuuid;
        var v15992 = window[v20181];
        var v10325 = v15992.datepicker;
        v10325._selectMonthYear(c$$471, this, "M");
        return!1;
      }
      function v1654() {
        var v20182 = "DP_jQuery_" + dpuuid;
        var v15993 = window[v20182];
        var v10326 = v15993.datepicker;
        var v15994 = this.getAttribute("data-month");
        var v10327 = +v15994;
        var v15995 = this.getAttribute("data-year");
        var v10328 = +v15995;
        v10326._selectDay(c$$471, v10327, v10328, this);
        return!1;
      }
      function v1653() {
        var v15996 = "DP_jQuery_" + dpuuid;
        var v10329 = window[v15996];
        var v3645 = v10329.datepicker;
        v3645._gotoToday(c$$471);
        return;
      }
      function v1652() {
        var v15997 = "DP_jQuery_" + dpuuid;
        var v10330 = window[v15997];
        var v3646 = v10330.datepicker;
        v3646._hideDatepicker();
        return;
      }
      function v1651() {
        var v15998 = "DP_jQuery_" + dpuuid;
        var v10331 = window[v15998];
        var v3647 = v10331.datepicker;
        var v3648 = +b$$578;
        v3647._adjustDate(c$$471, v3648, "M");
        return;
      }
      function v1650() {
        var v15999 = "DP_jQuery_" + dpuuid;
        var v10332 = window[v15999];
        var v3649 = v10332.datepicker;
        var v3650 = -b$$578;
        v3649._adjustDate(c$$471, v3650, "M");
        return;
      }
      var a$$612 = {prev:v1650, next:v1651, hide:v1652, today:v1653, selectDay:v1654, selectMonth:v1655, selectYear:v1656};
      var v3651 = $$$3(this);
      var v3652 = this.getAttribute("data-event");
      var v10333 = a$$612;
      var v10334 = this.getAttribute("data-handler");
      var v3653 = v10333[v10334];
      v3651.bind(v3652, v3653);
      return;
    }
    var b$$578 = this._get(a$$611, "stepMonths");
    var v10335 = a$$611.id;
    var v3654 = v10335.replace(/\\\\/g, "\\");
    var c$$471 = "#" + v3654;
    var v10336 = a$$611.dpDiv;
    var v3655 = v10336.find("[data-handler]");
    v3655.map(v1657);
    return;
  }
  function v1649(a$$610) {
    var v3656;
    var v20183 = a$$610.currentYear;
    var v16000 = !v20183;
    var v20185 = !v16000;
    if (v20185) {
      var v20184 = a$$610.input;
      if (v20184) {
        var v26568 = a$$610.input;
        var v24597 = v26568.val();
        v20184 = v24597 == "";
      }
      v16000 = v20184;
    }
    var v10338 = v16000;
    if (v10338) {
      v3656 = null;
    } else {
      var v16001 = a$$610.currentYear;
      var v16002 = a$$610.currentMonth;
      var v16003 = a$$610.currentDay;
      var v10337 = new Date(v16001, v16002, v16003);
      v3656 = this._daylightSavingAdjust(v10337);
    }
    var b$$577 = v3656;
    return b$$577;
  }
  function v1648(a$$609, b$$576, c$$470) {
    var d$$356 = !b$$576;
    var e$$308 = a$$609.selectedMonth;
    var f$$152 = a$$609.selectedYear;
    var v10339 = new Date;
    var v3657 = this._determineDate(a$$609, b$$576, v10339);
    var g$$171 = this._restrictMinMax(a$$609, v3657);
    var v31005 = g$$171.getDate();
    a$$609.selectedDay = a$$609.currentDay = v31005;
    var v31006 = g$$171.getMonth();
    a$$609.drawMonth = a$$609.selectedMonth = a$$609.currentMonth = v31006;
    var v31007 = g$$171.getFullYear();
    a$$609.drawYear = a$$609.selectedYear = a$$609.currentYear = v31007;
    var v27962 = a$$609.selectedMonth;
    var v26569 = e$$308 != v27962;
    var v27964 = !v26569;
    if (v27964) {
      var v27963 = a$$609.selectedYear;
      v26569 = f$$152 != v27963;
    }
    var v24598 = v26569;
    if (v24598) {
      v24598 = !c$$470;
    }
    var v20186 = v24598;
    if (v20186) {
      this._notifyChange(a$$609);
    }
    this._adjustInstDate(a$$609);
    var v10340 = a$$609.input;
    if (v10340) {
      var v16004 = a$$609.input;
      var v20187;
      if (d$$356) {
        v20187 = "";
      } else {
        v20187 = this._formatDate(a$$609);
      }
      var v16005 = v20187;
      v16004.val(v16005);
    }
    return;
  }
  function v1647(a$$608) {
    var v3658;
    if (a$$608) {
      var v20188;
      var v26570 = a$$608.getHours();
      var v24600 = v26570 > 12;
      if (v24600) {
        var v24599 = a$$608.getHours();
        v20188 = v24599 + 2;
      } else {
        v20188 = 0;
      }
      var v16006 = v20188;
      a$$608.setHours(v16006);
      v3658 = a$$608;
    } else {
      v3658 = null;
    }
    return v3658;
  }
  function v1646(a$$606, b$$573, c$$468) {
    function e$$306(b$$575) {
      try {
        var v3659 = $$$3.datepicker;
        var v10341 = $$$3.datepicker;
        var v3660 = v10341._get(a$$606, "dateFormat");
        var v10342 = $$$3.datepicker;
        var v3661 = v10342._getFormatConfig(a$$606);
        return v3659.parseDate(v3660, b$$575, v3661);
      } catch (c$$469) {
      }
      var v10343;
      var v20189 = b$$575.toLowerCase();
      var v16008 = v20189.match(/^c/);
      if (v16008) {
        var v16007 = $$$3.datepicker;
        v10343 = v16007._getDate(a$$606);
      } else {
        v10343 = null;
      }
      var v3662 = v10343;
      var v10344 = !v3662;
      if (v10344) {
        v3662 = new Date;
      }
      var d$$355 = v3662;
      var e$$307 = d$$355.getFullYear();
      var f$$151 = d$$355.getMonth();
      var g$$170 = d$$355.getDate();
      var h$$140 = /([+-]?[0-9]+)\s*(d|D|w|W|m|M|y|Y)?/g;
      var i$$193 = h$$140.exec(b$$575);
      for (;i$$193;) {
        var v10345 = i$$193[2];
        var v16009 = !v10345;
        if (v16009) {
          v10345 = "d";
        }
        var v3663 = v10345;
        switch(v3663) {
          case "d":
          ;
          case "D":
            var v16010 = i$$193[1];
            var v10346 = parseInt(v16010, 10);
            g$$170 = g$$170 + v10346;
            break;
          case "w":
          ;
          case "W":
            var v20190 = i$$193[1];
            var v16011 = parseInt(v20190, 10);
            var v10347 = v16011 * 7;
            g$$170 = g$$170 + v10347;
            break;
          case "m":
          ;
          case "M":
            var v20191 = i$$193[1];
            var v16012 = parseInt(v20191, 10);
            f$$151 = f$$151 + v16012;
            var v16013 = $$$3.datepicker;
            var v10348 = v16013._getDaysInMonth(e$$307, f$$151);
            g$$170 = Math.min(g$$170, v10348);
            break;
          case "y":
          ;
          case "Y":
            var v20192 = i$$193[1];
            var v16014 = parseInt(v20192, 10);
            e$$307 = e$$307 + v16014;
            var v16015 = $$$3.datepicker;
            var v10349 = v16015._getDaysInMonth(e$$307, f$$151);
            g$$170 = Math.min(g$$170, v10349);
        }
        i$$193 = h$$140.exec(b$$575);
      }
      return new Date(e$$307, f$$151, g$$170);
    }
    function d$$354(a$$607) {
      var b$$574 = new Date;
      var v16016 = b$$574.getDate();
      var v10350 = v16016 + a$$607;
      b$$574.setDate(v10350);
      return b$$574;
    }
    var v3664;
    var v16017 = b$$573 == null;
    var v20193 = !v16017;
    if (v20193) {
      v16017 = b$$573 === "";
    }
    var v10352 = v16017;
    if (v10352) {
      v3664 = c$$468;
    } else {
      var v10351;
      var v20194 = typeof b$$573;
      var v16019 = v20194 == "string";
      if (v16019) {
        v10351 = e$$306(b$$573);
      } else {
        var v16018;
        var v24601 = typeof b$$573;
        var v20197 = v24601 == "number";
        if (v20197) {
          var v20195;
          var v24602 = isNaN(b$$573);
          if (v24602) {
            v20195 = c$$468;
          } else {
            v20195 = d$$354(b$$573);
          }
          v16018 = v20195;
        } else {
          var v20196 = b$$573.getTime();
          v16018 = new Date(v20196);
        }
        v10351 = v16018;
      }
      v3664 = v10351;
    }
    var f$$150 = v3664;
    var v16020;
    var v24603 = f$$150;
    if (v24603) {
      var v26571 = f$$150.toString();
      v24603 = v26571 == "Invalid Date";
    }
    var v20198 = v24603;
    if (v20198) {
      v16020 = c$$468;
    } else {
      v16020 = f$$150;
    }
    f$$150 = v16020;
    if (f$$150) {
      f$$150.setHours(0);
      f$$150.setMinutes(0);
      f$$150.setSeconds(0);
      f$$150.setMilliseconds(0);
    }
    return this._daylightSavingAdjust(f$$150);
  }
  function v1645(a$$605) {
    var v10353 = this._get(a$$605, "defaultDate");
    var v10354 = new Date;
    var v3665 = this._determineDate(a$$605, v10353, v10354);
    return this._restrictMinMax(a$$605, v3665);
  }
  function v1644(a$$604, b$$572) {
    var v16021 = a$$604.input;
    var v10355 = v16021.val();
    var v10356 = a$$604.lastVal;
    var v3666 = v10355 == v10356;
    if (v3666) {
      return;
    }
    var c$$467 = this._get(a$$604, "dateFormat");
    var v3667;
    var v10358 = a$$604.input;
    if (v10358) {
      var v10357 = a$$604.input;
      v3667 = v10357.val();
    } else {
      v3667 = null;
    }
    var d$$353 = a$$604.lastVal = v3667;
    var e$$305;
    var f$$149;
    e$$305 = f$$149 = this._getDefaultDate(a$$604);
    var g$$169 = this._getFormatConfig(a$$604);
    try {
      var v3668 = this.parseDate(c$$467, d$$353, g$$169);
      var v10359 = !v3668;
      if (v10359) {
        v3668 = f$$149;
      }
      e$$305 = v3668;
    } catch (h$$139) {
      this.log(h$$139);
      var v10360;
      if (b$$572) {
        v10360 = "";
      } else {
        v10360 = d$$353;
      }
      d$$353 = v10360;
    }
    var v31008 = e$$305.getDate();
    a$$604.selectedDay = v31008;
    var v31009 = e$$305.getMonth();
    a$$604.drawMonth = a$$604.selectedMonth = v31009;
    var v31010 = e$$305.getFullYear();
    a$$604.drawYear = a$$604.selectedYear = v31010;
    var v24604;
    if (d$$353) {
      v24604 = e$$305.getDate();
    } else {
      v24604 = 0;
    }
    a$$604.currentDay = v24604;
    var v20199;
    if (d$$353) {
      v20199 = e$$305.getMonth();
    } else {
      v20199 = 0;
    }
    a$$604.currentMonth = v20199;
    var v16022;
    if (d$$353) {
      v16022 = e$$305.getFullYear();
    } else {
      v16022 = 0;
    }
    a$$604.currentYear = v16022;
    this._adjustInstDate(a$$604);
    return;
  }
  function v1643(a$$603, b$$571) {
    var v3669;
    var v20200 = a$$603.settings;
    var v16023 = v20200[b$$571];
    var v10363 = v16023 !== undefined$$1;
    if (v10363) {
      var v10361 = a$$603.settings;
      v3669 = v10361[b$$571];
    } else {
      var v10362 = this._defaults;
      v3669 = v10362[b$$571];
    }
    return v3669;
  }
  function v1642(a$$602) {
    function d$$352(b$$570) {
      var v10364 = e$$304 + 1;
      var v10365 = a$$602.length;
      var v3670 = v10364 < v10365;
      if (v3670) {
        var v16024 = e$$304 + 1;
        var v10366 = a$$602.charAt(v16024);
        v3670 = v10366 == b$$570;
      }
      var c$$466 = v3670;
      if (c$$466) {
        e$$304++;
      }
      return c$$466;
    }
    var b$$569 = "";
    var c$$465 = !1;
    var e$$304 = 0;
    var v10367 = a$$602.length;
    var v3674 = e$$304 < v10367;
    for (;v3674;) {
      if (c$$465) {
        var v3671;
        var v20201 = a$$602.charAt(e$$304);
        var v16025 = v20201 == "'";
        if (v16025) {
          var v20202 = d$$352("'");
          v16025 = !v20202;
        }
        var v10368 = v16025;
        if (v10368) {
          v3671 = c$$465 = !1;
        } else {
          var v16026 = b$$569;
          var v16027 = a$$602.charAt(e$$304);
          v3671 = b$$569 = v16026 + v16027;
        }
        v3671;
      } else {
        var v3673 = a$$602.charAt(e$$304);
        switch(v3673) {
          case "d":
          ;
          case "m":
          ;
          case "y":
          ;
          case "@":
            b$$569 = b$$569 + "0123456789";
            break;
          case "D":
          ;
          case "M":
            return null;
          case "'":
            var v3672;
            var v10369 = d$$352("'");
            if (v10369) {
              v3672 = b$$569 = b$$569 + "'";
            } else {
              v3672 = c$$465 = !0;
            }
            v3672;
            break;
          default:
            var v10370 = b$$569;
            var v10371 = a$$602.charAt(e$$304);
            b$$569 = v10370 + v10371;
        }
      }
      e$$304++;
      var v10372 = a$$602.length;
      v3674 = e$$304 < v10372;
    }
    return b$$569;
  }
  function v1641(a$$599, b$$565, c$$461) {
    function j$$98(a$$601, b$$568, c$$464, d$$351) {
      var v3675;
      var v10373 = h$$138(a$$601);
      if (v10373) {
        v3675 = d$$351[b$$568];
      } else {
        v3675 = c$$464[b$$568];
      }
      return v3675;
    }
    function i$$192(a$$600, b$$567, c$$463) {
      var d$$350 = "" + b$$567;
      var v3677 = h$$138(a$$600);
      if (v3677) {
        var v10374 = d$$350.length;
        var v3676 = v10374 < c$$463;
        for (;v3676;) {
          d$$350 = "0" + d$$350;
          var v10375 = d$$350.length;
          v3676 = v10375 < c$$463;
        }
      }
      return d$$350;
    }
    function h$$138(b$$566) {
      var v10376 = m$$45 + 1;
      var v10377 = a$$599.length;
      var v3678 = v10376 < v10377;
      if (v3678) {
        var v16028 = m$$45 + 1;
        var v10378 = a$$599.charAt(v16028);
        v3678 = v10378 == b$$566;
      }
      var c$$462 = v3678;
      if (c$$462) {
        m$$45++;
      }
      return c$$462;
    }
    var v3679 = !b$$565;
    if (v3679) {
      return "";
    }
    var v10379;
    if (c$$461) {
      v10379 = c$$461.dayNamesShort;
    } else {
      v10379 = null;
    }
    var v3680 = v10379;
    var v10381 = !v3680;
    if (v10381) {
      var v10380 = this._defaults;
      v3680 = v10380.dayNamesShort;
    }
    var d$$349 = v3680;
    var v10382;
    if (c$$461) {
      v10382 = c$$461.dayNames;
    } else {
      v10382 = null;
    }
    var v3681 = v10382;
    var v10384 = !v3681;
    if (v10384) {
      var v10383 = this._defaults;
      v3681 = v10383.dayNames;
    }
    var e$$303 = v3681;
    var v10385;
    if (c$$461) {
      v10385 = c$$461.monthNamesShort;
    } else {
      v10385 = null;
    }
    var v3682 = v10385;
    var v10387 = !v3682;
    if (v10387) {
      var v10386 = this._defaults;
      v3682 = v10386.monthNamesShort;
    }
    var f$$148 = v3682;
    var v10388;
    if (c$$461) {
      v10388 = c$$461.monthNames;
    } else {
      v10388 = null;
    }
    var v3683 = v10388;
    var v10390 = !v3683;
    if (v10390) {
      var v10389 = this._defaults;
      v3683 = v10389.monthNames;
    }
    var g$$168 = v3683;
    var k$$67 = "";
    var l$$74 = !1;
    if (b$$565) {
      var m$$45 = 0;
      var v10391 = a$$599.length;
      var v3687 = m$$45 < v10391;
      for (;v3687;) {
        if (l$$74) {
          var v3684;
          var v20203 = a$$599.charAt(m$$45);
          var v16029 = v20203 == "'";
          if (v16029) {
            var v20204 = h$$138("'");
            v16029 = !v20204;
          }
          var v10392 = v16029;
          if (v10392) {
            v3684 = l$$74 = !1;
          } else {
            var v16030 = k$$67;
            var v16031 = a$$599.charAt(m$$45);
            v3684 = k$$67 = v16030 + v16031;
          }
          v3684;
        } else {
          var v3686 = a$$599.charAt(m$$45);
          switch(v3686) {
            case "d":
              var v10393 = k$$67;
              var v16032 = b$$565.getDate();
              var v10394 = i$$192("d", v16032, 2);
              k$$67 = v10393 + v10394;
              break;
            case "D":
              var v10395 = k$$67;
              var v16033 = b$$565.getDay();
              var v10396 = j$$98("D", v16033, d$$349, e$$303);
              k$$67 = v10395 + v10396;
              break;
            case "o":
              var v10397 = k$$67;
              var v28869 = b$$565.getFullYear();
              var v28870 = b$$565.getMonth();
              var v28871 = b$$565.getDate();
              var v27965 = new Date(v28869, v28870, v28871);
              var v26572 = v27965.getTime();
              var v28872 = b$$565.getFullYear();
              var v27966 = new Date(v28872, 0, 0);
              var v26573 = v27966.getTime();
              var v24605 = v26572 - v26573;
              var v20205 = v24605 / 864E5;
              var v16034 = Math.round(v20205);
              var v10398 = i$$192("o", v16034, 3);
              k$$67 = v10397 + v10398;
              break;
            case "m":
              var v10399 = k$$67;
              var v20206 = b$$565.getMonth();
              var v16035 = v20206 + 1;
              var v10400 = i$$192("m", v16035, 2);
              k$$67 = v10399 + v10400;
              break;
            case "M":
              var v10401 = k$$67;
              var v16036 = b$$565.getMonth();
              var v10402 = j$$98("M", v16036, f$$148, g$$168);
              k$$67 = v10401 + v10402;
              break;
            case "y":
              var v10403 = k$$67;
              var v16037;
              var v20209 = h$$138("y");
              if (v20209) {
                v16037 = b$$565.getFullYear();
              } else {
                var v24606;
                var v28873 = b$$565.getYear();
                var v27967 = v28873 % 100;
                var v26574 = v27967 < 10;
                if (v26574) {
                  v24606 = "0";
                } else {
                  v24606 = "";
                }
                var v20207 = v24606;
                var v24607 = b$$565.getYear();
                var v20208 = v24607 % 100;
                v16037 = v20207 + v20208;
              }
              var v10404 = v16037;
              k$$67 = v10403 + v10404;
              break;
            case "@":
              var v10405 = k$$67;
              var v10406 = b$$565.getTime();
              k$$67 = v10405 + v10406;
              break;
            case "!":
              var v10407 = k$$67;
              var v20210 = b$$565.getTime();
              var v16038 = v20210 * 1E4;
              var v16039 = this._ticksTo1970;
              var v10408 = v16038 + v16039;
              k$$67 = v10407 + v10408;
              break;
            case "'":
              var v3685;
              var v10409 = h$$138("'");
              if (v10409) {
                v3685 = k$$67 = k$$67 + "'";
              } else {
                v3685 = l$$74 = !0;
              }
              v3685;
              break;
            default:
              var v10410 = k$$67;
              var v10411 = a$$599.charAt(m$$45);
              k$$67 = v10410 + v10411;
          }
        }
        m$$45++;
        var v10412 = a$$599.length;
        v3687 = m$$45 < v10412;
      }
    }
    return k$$67;
  }
  function v1640(a$$593, b$$561, c$$456) {
    function q$$17() {
      var v10413 = b$$561.charAt(r$$18);
      var v10414 = a$$593.charAt(s$$27);
      var v3688 = v10413 != v10414;
      if (v3688) {
        throw "Unexpected literal at position " + r$$18;
      }
      r$$18++;
      return;
    }
    function p$$46(a$$595, c$$459, d$$347) {
      function v1639(a$$598, c$$460) {
        var d$$348 = c$$460[1];
        var v20211 = d$$348.length;
        var v16040 = b$$561.substr(r$$18, v20211);
        var v10415 = v16040.toLowerCase();
        var v10416 = d$$348.toLowerCase();
        var v3689 = v10415 == v10416;
        if (v3689) {
          f$$147 = c$$460[0];
          var v20212 = d$$348.length;
          r$$18 = r$$18 + v20212;
          return!1;
        }
        return;
      }
      function v1638(a$$597, b$$564) {
        var v16041 = a$$597[1];
        var v10417 = v16041.length;
        var v16042 = b$$564[1];
        var v10418 = v16042.length;
        var v3690 = v10417 - v10418;
        return-v3690;
      }
      function v1637(a$$596, b$$563) {
        var v3691 = [b$$563, a$$596];
        return[v3691];
      }
      var v16043;
      var v20213 = n$$91(a$$595);
      if (v20213) {
        v16043 = d$$347;
      } else {
        v16043 = c$$459;
      }
      var v10419 = v16043;
      var v3692 = $$$3.map(v10419, v1637);
      var e$$302 = v3692.sort(v1638);
      var f$$147 = -1;
      $$$3.each(e$$302, v1639);
      var v3693 = f$$147 != -1;
      if (v3693) {
        return f$$147 + 1;
      }
      throw "Unknown name at position " + r$$18;
    }
    function o$$21(a$$594) {
      var c$$458 = n$$91(a$$594);
      var v3694;
      var v10421 = a$$594 == "@";
      if (v10421) {
        v3694 = 14;
      } else {
        var v10420;
        var v16045 = a$$594 == "!";
        if (v16045) {
          v10420 = 20;
        } else {
          var v16044;
          var v24608 = a$$594 == "y";
          if (v24608) {
            v24608 = c$$458;
          }
          var v20215 = v24608;
          if (v20215) {
            v16044 = 4;
          } else {
            var v20214;
            var v24609 = a$$594 == "o";
            if (v24609) {
              v20214 = 3;
            } else {
              v20214 = 2;
            }
            v16044 = v20214;
          }
          v10420 = v16044;
        }
        v3694 = v10420;
      }
      var d$$346 = v3694;
      var v10422 = "^\\d{1," + d$$346;
      var v3695 = v10422 + "}";
      var e$$301 = new RegExp(v3695);
      var v3696 = b$$561.substring(r$$18);
      var f$$146 = v3696.match(e$$301);
      var v3697 = !f$$146;
      if (v3697) {
        throw "Missing number at position " + r$$18;
      }
      var v20216 = f$$146[0];
      var v16046 = v20216.length;
      r$$18 = r$$18 + v16046;
      var v10423 = f$$146[0];
      return parseInt(v10423, 10);
    }
    function n$$91(b$$562) {
      var v10424 = s$$27 + 1;
      var v10425 = a$$593.length;
      var v3698 = v10424 < v10425;
      if (v3698) {
        var v16047 = s$$27 + 1;
        var v10426 = a$$593.charAt(v16047);
        v3698 = v10426 == b$$562;
      }
      var c$$457 = v3698;
      if (c$$457) {
        s$$27++;
      }
      return c$$457;
    }
    var v10427 = a$$593 == null;
    var v16048 = !v10427;
    if (v16048) {
      v10427 = b$$561 == null;
    }
    var v3699 = v10427;
    if (v3699) {
      throw "Invalid arguments";
    }
    var v3700;
    var v16049 = typeof b$$561;
    var v10428 = v16049 == "object";
    if (v10428) {
      v3700 = b$$561.toString();
    } else {
      v3700 = b$$561 + "";
    }
    b$$561 = v3700;
    var v3701 = b$$561 == "";
    if (v3701) {
      return null;
    }
    var v10429;
    if (c$$456) {
      v10429 = c$$456.shortYearCutoff;
    } else {
      v10429 = null;
    }
    var v3702 = v10429;
    var v10431 = !v3702;
    if (v10431) {
      var v10430 = this._defaults;
      v3702 = v10430.shortYearCutoff;
    }
    var d$$345 = v3702;
    var v3703;
    var v16050 = typeof d$$345;
    var v10434 = v16050 != "string";
    if (v10434) {
      v3703 = d$$345;
    } else {
      var v20217 = new Date;
      var v16051 = v20217.getFullYear();
      var v10432 = v16051 % 100;
      var v10433 = parseInt(d$$345, 10);
      v3703 = v10432 + v10433;
    }
    d$$345 = v3703;
    var v10435;
    if (c$$456) {
      v10435 = c$$456.dayNamesShort;
    } else {
      v10435 = null;
    }
    var v3704 = v10435;
    var v10437 = !v3704;
    if (v10437) {
      var v10436 = this._defaults;
      v3704 = v10436.dayNamesShort;
    }
    var e$$300 = v3704;
    var v10438;
    if (c$$456) {
      v10438 = c$$456.dayNames;
    } else {
      v10438 = null;
    }
    var v3705 = v10438;
    var v10440 = !v3705;
    if (v10440) {
      var v10439 = this._defaults;
      v3705 = v10439.dayNames;
    }
    var f$$145 = v3705;
    var v10441;
    if (c$$456) {
      v10441 = c$$456.monthNamesShort;
    } else {
      v10441 = null;
    }
    var v3706 = v10441;
    var v10443 = !v3706;
    if (v10443) {
      var v10442 = this._defaults;
      v3706 = v10442.monthNamesShort;
    }
    var g$$167 = v3706;
    var v10444;
    if (c$$456) {
      v10444 = c$$456.monthNames;
    } else {
      v10444 = null;
    }
    var v3707 = v10444;
    var v10446 = !v3707;
    if (v10446) {
      var v10445 = this._defaults;
      v3707 = v10445.monthNames;
    }
    var h$$137 = v3707;
    var i$$191 = -1;
    var j$$97 = -1;
    var k$$66 = -1;
    var l$$73 = -1;
    var m$$44 = !1;
    var r$$18 = 0;
    var s$$27 = 0;
    var v10447 = a$$593.length;
    var v3713 = s$$27 < v10447;
    for (;v3713;) {
      if (m$$44) {
        var v3708;
        var v20218 = a$$593.charAt(s$$27);
        var v16052 = v20218 == "'";
        if (v16052) {
          var v20219 = n$$91("'");
          v16052 = !v20219;
        }
        var v10448 = v16052;
        if (v10448) {
          v3708 = m$$44 = !1;
        } else {
          v3708 = q$$17();
        }
        v3708;
      } else {
        var v3712 = a$$593.charAt(s$$27);
        switch(v3712) {
          case "d":
            k$$66 = o$$21("d");
            break;
          case "D":
            p$$46("D", e$$300, f$$145);
            break;
          case "o":
            l$$73 = o$$21("o");
            break;
          case "m":
            j$$97 = o$$21("m");
            break;
          case "M":
            j$$97 = p$$46("M", g$$167, h$$137);
            break;
          case "y":
            i$$191 = o$$21("y");
            break;
          case "@":
            var v3709 = o$$21("@");
            var t$$12 = new Date(v3709);
            i$$191 = t$$12.getFullYear();
            var v16053 = t$$12.getMonth();
            j$$97 = v16053 + 1;
            k$$66 = t$$12.getDate();
            break;
          case "!":
            var v16054 = o$$21("!");
            var v16055 = this._ticksTo1970;
            var v10449 = v16054 - v16055;
            var v3710 = v10449 / 1E4;
            t$$12 = new Date(v3710);
            i$$191 = t$$12.getFullYear();
            var v16056 = t$$12.getMonth();
            j$$97 = v16056 + 1;
            k$$66 = t$$12.getDate();
            break;
          case "'":
            var v3711;
            var v10450 = n$$91("'");
            if (v10450) {
              v3711 = q$$17();
            } else {
              v3711 = m$$44 = !0;
            }
            v3711;
            break;
          default:
            q$$17();
        }
      }
      s$$27++;
      var v10451 = a$$593.length;
      v3713 = s$$27 < v10451;
    }
    var v10452 = b$$561.length;
    var v3715 = r$$18 < v10452;
    if (v3715) {
      var v3714 = b$$561.substring(r$$18);
      throw "Extra/unparsed characters found in date: " + v3714;
    }
    var v3716;
    var v10455 = i$$191 == -1;
    if (v10455) {
      var v10453 = new Date;
      v3716 = i$$191 = v10453.getFullYear();
    } else {
      var v10454 = i$$191 < 100;
      if (v10454) {
        var v20220 = i$$191;
        var v27968 = new Date;
        var v26575 = v27968.getFullYear();
        var v28874 = new Date;
        var v27969 = v28874.getFullYear();
        var v26576 = v27969 % 100;
        var v24610 = v26575 - v26576;
        var v26577;
        var v27970 = i$$191 <= d$$345;
        if (v27970) {
          v26577 = 0;
        } else {
          v26577 = -100;
        }
        var v24611 = v26577;
        var v20221 = v24610 + v24611;
        v10454 = i$$191 = v20220 + v20221;
      }
      v3716 = v10454;
    }
    v3716;
    var v3720 = l$$73 > -1;
    if (v3720) {
      j$$97 = 1;
      k$$66 = l$$73;
      var v3719 = !0;
      do {
        var v3717 = j$$97 - 1;
        var u$$10 = this._getDaysInMonth(i$$191, v3717);
        var v3718 = k$$66 <= u$$10;
        if (v3718) {
          break;
        }
        j$$97++;
        k$$66 = k$$66 - u$$10;
        v3719 = !0;
      } while (v3719);
    }
    var v10456 = j$$97 - 1;
    var v3721 = new Date(i$$191, v10456, k$$66);
    t$$12 = this._daylightSavingAdjust(v3721);
    var v20222 = t$$12.getFullYear();
    var v16057 = v20222 != i$$191;
    var v20224 = !v16057;
    if (v20224) {
      var v24612 = t$$12.getMonth();
      var v20223 = v24612 + 1;
      v16057 = v20223 != j$$97;
    }
    var v10457 = v16057;
    var v16059 = !v10457;
    if (v16059) {
      var v16058 = t$$12.getDate();
      v10457 = v16058 != k$$66;
    }
    var v3722 = v10457;
    if (v3722) {
      throw "Invalid date";
    }
    return t$$12;
  }
  function v1636(a$$592) {
    var v3723 = a$$592.getTime();
    var b$$560 = new Date(v3723);
    var v16060 = b$$560.getDate();
    var v10458 = v16060 + 4;
    var v16061 = b$$560.getDay();
    var v20225 = !v16061;
    if (v20225) {
      v16061 = 7;
    }
    var v10459 = v16061;
    var v3724 = v10458 - v10459;
    b$$560.setDate(v3724);
    var c$$455 = b$$560.getTime();
    b$$560.setMonth(0);
    b$$560.setDate(1);
    var v26578 = c$$455 - b$$560;
    var v24613 = v26578 / 864E5;
    var v20226 = Math.round(v24613);
    var v16062 = v20226 / 7;
    var v10460 = Math.floor(v16062);
    return v10460 + 1;
  }
  function v1635(a$$591) {
    var b$$559 = a$$591.getDay();
    var v10461 = b$$559 > 0;
    if (v10461) {
      v10461 = b$$559 < 6;
    }
    var v3725 = v10461;
    return[v3725, ""];
  }
  function v1634(a$$590) {
    function v1633() {
      var v3726 = $$$3(this);
      v3726.val(e$$299);
      return;
    }
    var b$$558 = this._get(a$$590, "altField");
    if (b$$558) {
      var v3727 = this._get(a$$590, "altFormat");
      var v10462 = !v3727;
      if (v10462) {
        v3727 = this._get(a$$590, "dateFormat");
      }
      var c$$454 = v3727;
      var d$$344 = this._getDate(a$$590);
      var v3728 = this._getFormatConfig(a$$590);
      var e$$299 = this.formatDate(c$$454, d$$344, v3728);
      var v3729 = $$$3(b$$558);
      v3729.each(v1633);
    }
    return;
  }
  function v1632(a$$589, b$$557) {
    var c$$453 = $$$3(a$$589);
    var v3730 = c$$453[0];
    var d$$343 = this._getInst(v3730);
    var v16063;
    var v20227 = b$$557 != null;
    if (v20227) {
      v16063 = b$$557;
    } else {
      v16063 = this._formatDate(d$$343);
    }
    b$$557 = v16063;
    var v16064 = d$$343.input;
    if (v16064) {
      var v20228 = d$$343.input;
      v20228.val(b$$557);
    }
    this._updateAlternate(d$$343);
    var e$$298 = this._get(d$$343, "onSelect");
    var v10463;
    if (e$$298) {
      var v20229;
      var v24615 = d$$343.input;
      if (v24615) {
        var v24614 = d$$343.input;
        v20229 = v24614[0];
      } else {
        v20229 = null;
      }
      var v16065 = v20229;
      var v16066 = [b$$557, d$$343];
      v10463 = e$$298.apply(v16065, v16066);
    } else {
      var v16067 = d$$343.input;
      if (v16067) {
        var v20230 = d$$343.input;
        v16067 = v20230.trigger("change");
      }
      v10463 = v16067;
    }
    v10463;
    var v10464;
    var v16068 = d$$343.inline;
    if (v16068) {
      v10464 = this._updateDatepicker(d$$343);
    } else {
      this._hideDatepicker();
      var v26579 = d$$343.input;
      this._lastInput = v26579[0];
      var v28875 = d$$343.input;
      var v27971 = v28875[0];
      var v26580 = typeof v27971;
      var v24616 = v26580 != "object";
      if (v24616) {
        var v26581 = d$$343.input;
        v26581.focus();
      }
      v10464 = this._lastInput = null;
    }
    v10464;
    return;
  }
  function v1631(a$$588) {
    var b$$556 = $$$3(a$$588);
    var v3731 = b$$556[0];
    var c$$452 = this._getInst(v3731);
    this._selectDate(b$$556, "");
    return;
  }
  function v1630(a$$587, b$$555, c$$451, d$$342) {
    var e$$297 = $$$3(a$$587);
    var v16069 = $$$3(d$$342);
    var v16070 = this._unselectableClass;
    var v10465 = v16069.hasClass(v16070);
    var v16072 = !v10465;
    if (v16072) {
      var v16071 = e$$297[0];
      v10465 = this._isDisabledDatepicker(v16071);
    }
    var v3732 = v10465;
    if (v3732) {
      return;
    }
    var v3733 = e$$297[0];
    var f$$144 = this._getInst(v3733);
    var v20231 = $$$3("a", d$$342);
    var v31011 = v20231.html();
    f$$144.selectedDay = f$$144.currentDay = v31011;
    f$$144.selectedMonth = f$$144.currentMonth = b$$555;
    f$$144.selectedYear = f$$144.currentYear = c$$451;
    var v16073 = f$$144.currentDay;
    var v16074 = f$$144.currentMonth;
    var v16075 = f$$144.currentYear;
    var v10466 = this._formatDate(f$$144, v16073, v16074, v16075);
    this._selectDate(a$$587, v10466);
    return;
  }
  function v1629(a$$586, b$$554, c$$450) {
    var d$$341 = $$$3(a$$586);
    var v3734 = d$$341[0];
    var e$$296 = this._getInst(v3734);
    var v24617;
    var v26582 = c$$450 == "M";
    if (v26582) {
      v24617 = "Month";
    } else {
      v24617 = "Year";
    }
    var v20232 = v24617;
    var v16076 = "selected" + v20232;
    var v26583;
    var v27972 = c$$450 == "M";
    if (v27972) {
      v26583 = "Month";
    } else {
      v26583 = "Year";
    }
    var v24618 = v26583;
    var v20233 = "draw" + v24618;
    var v27973 = b$$554.options;
    var v27974 = b$$554.selectedIndex;
    var v26584 = v27973[v27974];
    var v24619 = v26584.value;
    var v31012 = parseInt(v24619, 10);
    e$$296[v16076] = e$$296[v20233] = v31012;
    this._notifyChange(e$$296);
    this._adjustDate(d$$341);
    return;
  }
  function v1628(a$$585) {
    var b$$553 = $$$3(a$$585);
    var v3735 = b$$553[0];
    var c$$449 = this._getInst(v3735);
    var v10467 = this._get(c$$449, "gotoCurrent");
    if (v10467) {
      v10467 = c$$449.currentDay;
    }
    var v3736 = v10467;
    if (v3736) {
      c$$449.selectedDay = c$$449.currentDay;
      c$$449.drawMonth = c$$449.selectedMonth = c$$449.currentMonth;
      c$$449.drawYear = c$$449.selectedYear = c$$449.currentYear;
    } else {
      var d$$340 = new Date;
      var v31013 = d$$340.getDate();
      c$$449.selectedDay = v31013;
      var v31014 = d$$340.getMonth();
      c$$449.drawMonth = c$$449.selectedMonth = v31014;
      var v31015 = d$$340.getFullYear();
      c$$449.drawYear = c$$449.selectedYear = v31015;
    }
    this._notifyChange(c$$449);
    this._adjustDate(b$$553);
    return;
  }
  function v1627(a$$584, b$$552, c$$448) {
    var d$$339 = $$$3(a$$584);
    var v3737 = d$$339[0];
    var e$$295 = this._getInst(v3737);
    var v10468 = d$$339[0];
    var v3738 = this._isDisabledDatepicker(v10468);
    if (v3738) {
      return;
    }
    var v20234;
    var v24620 = c$$448 == "M";
    if (v24620) {
      v20234 = this._get(e$$295, "showCurrentAtPos");
    } else {
      v20234 = 0;
    }
    var v16077 = v20234;
    var v10469 = b$$552 + v16077;
    this._adjustInstDate(e$$295, v10469, c$$448);
    this._updateDatepicker(e$$295);
    return;
  }
  function v1626(a$$583) {
    var v16078 = $$$3.datepicker;
    var v10470 = v16078._curInst;
    var v3739 = !v10470;
    if (v3739) {
      return;
    }
    var v3740 = a$$583.target;
    var b$$551 = $$$3(v3740);
    var v3741 = $$$3.datepicker;
    var v3742 = b$$551[0];
    var c$$447 = v3741._getInst(v3742);
    var v29476 = b$$551[0];
    var v28876 = v29476.id;
    var v29477 = $$$3.datepicker;
    var v28877 = v29477._mainDivId;
    var v27975 = v28876 != v28877;
    if (v27975) {
      var v30316 = $$$3.datepicker;
      var v30101 = v30316._mainDivId;
      var v29838 = "#" + v30101;
      var v29478 = b$$551.parents(v29838);
      var v28878 = v29478.length;
      v27975 = v28878 == 0;
    }
    var v26585 = v27975;
    if (v26585) {
      var v29479 = $$$3.datepicker;
      var v28879 = v29479.markerClassName;
      var v27976 = b$$551.hasClass(v28879);
      v26585 = !v27976;
    }
    var v24621 = v26585;
    if (v24621) {
      var v29839 = $$$3.datepicker;
      var v29480 = v29839._triggerClass;
      var v28880 = "." + v29480;
      var v27977 = b$$551.closest(v28880);
      var v26586 = v27977.length;
      v24621 = !v26586;
    }
    var v20235 = v24621;
    if (v20235) {
      var v24622 = $$$3.datepicker;
      v20235 = v24622._datepickerShowing;
    }
    var v16079 = v20235;
    if (v16079) {
      var v26587 = $$$3.datepicker;
      var v24623 = v26587._inDialog;
      var v20236 = !v24623;
      var v24625 = !v20236;
      if (v24625) {
        var v24624 = $$$3.blockUI;
        v20236 = !v24624;
      }
      v16079 = v20236;
    }
    var v10471 = v16079;
    var v16081 = !v10471;
    if (v16081) {
      var v24626 = $$$3.datepicker;
      var v20237 = v24626.markerClassName;
      var v16080 = b$$551.hasClass(v20237);
      if (v16080) {
        var v24627 = $$$3.datepicker;
        var v20238 = v24627._curInst;
        v16080 = v20238 != c$$447;
      }
      v10471 = v16080;
    }
    var v3743 = v10471;
    if (v3743) {
      var v10472 = $$$3.datepicker;
      v10472._hideDatepicker();
    }
    return;
  }
  function v1625(a$$582) {
    var v10473 = a$$582.dpDiv;
    var v10474 = this._dialogClass;
    var v3744 = v10473.removeClass(v10474);
    v3744.unbind(".ui-datepicker-calendar");
    return;
  }
  function v1624(a$$581) {
    function v1623() {
      var v3745 = $$$3.datepicker;
      v3745._tidyDialog(b$$550);
      return;
    }
    var b$$550 = this._curInst;
    var v10475 = !b$$550;
    var v16083 = !v10475;
    if (v16083) {
      var v16082 = a$$581;
      if (v16082) {
        var v20239 = b$$550;
        var v20240 = $$$3.data(a$$581, PROP_NAME);
        v16082 = v20239 != v20240;
      }
      v10475 = v16082;
    }
    var v3746 = v10475;
    if (v3746) {
      return;
    }
    var v3747 = this._datepickerShowing;
    if (v3747) {
      var c$$446 = this._get(b$$550, "showAnim");
      var d$$338 = this._get(b$$550, "duration");
      var e$$294 = v1623;
      var v16084;
      var v24628 = $$$3.effects;
      if (v24628) {
        var v26588 = $$$3.effects;
        v24628 = v26588[c$$446];
      }
      var v20246 = v24628;
      if (v20246) {
        var v20241 = b$$550.dpDiv;
        var v24629 = $$$3.datepicker;
        var v20242 = v24629._get(b$$550, "showOptions");
        v16084 = v20241.hide(c$$446, v20242, d$$338, e$$294);
      } else {
        var v20243 = b$$550.dpDiv;
        var v24630;
        var v26590 = c$$446 == "slideDown";
        if (v26590) {
          v24630 = "slideUp";
        } else {
          var v26589;
          var v27978 = c$$446 == "fadeIn";
          if (v27978) {
            v26589 = "fadeOut";
          } else {
            v26589 = "hide";
          }
          v24630 = v26589;
        }
        var v20244 = v24630;
        var v24631;
        if (c$$446) {
          v24631 = d$$338;
        } else {
          v24631 = null;
        }
        var v20245 = v24631;
        v16084 = v20243[v20244](v20245, e$$294);
      }
      v16084;
      var v20247 = !c$$446;
      if (v20247) {
        e$$294();
      }
      this._datepickerShowing = !1;
      var f$$143 = this._get(b$$550, "onClose");
      if (f$$143) {
        var v26591;
        var v27980 = b$$550.input;
        if (v27980) {
          var v27979 = b$$550.input;
          v26591 = v27979[0];
        } else {
          v26591 = null;
        }
        var v24632 = v26591;
        var v27981;
        var v28882 = b$$550.input;
        if (v28882) {
          var v28881 = b$$550.input;
          v27981 = v28881.val();
        } else {
          v27981 = "";
        }
        var v26592 = v27981;
        var v24633 = [v26592, b$$550];
        f$$143.apply(v24632, v24633);
      }
      this._lastInput = null;
      var v16085 = this._inDialog;
      if (v16085) {
        var v24634 = this._dialogInput;
        var v24635 = {position:"absolute", left:"0", top:"-100px"};
        v24634.css(v24635);
        var v24636 = $$$3.blockUI;
        if (v24636) {
          $$$3.unblockUI();
          var v27982 = $$$3("body");
          var v27983 = this.dpDiv;
          v27982.append(v27983);
        }
      }
      this._inDialog = !1;
    }
    return;
  }
  function v1622(a$$580) {
    var b$$549 = this._getInst(a$$580);
    var c$$445 = this._get(b$$549, "isRTL");
    var v10476 = a$$580;
    if (v10476) {
      var v24637 = a$$580.type;
      var v20248 = v24637 == "hidden";
      var v24639 = !v20248;
      if (v24639) {
        var v24638 = a$$580.nodeType;
        v20248 = v24638 != 1;
      }
      var v16086 = v20248;
      var v20250 = !v16086;
      if (v20250) {
        var v24640 = $$$3.expr;
        var v20249 = v24640.filters;
        v16086 = v20249.hidden(a$$580);
      }
      v10476 = v16086;
    }
    var v3749 = v10476;
    for (;v3749;) {
      var v10477;
      if (c$$445) {
        v10477 = "previousSibling";
      } else {
        v10477 = "nextSibling";
      }
      var v3748 = v10477;
      a$$580 = a$$580[v3748];
      var v10478 = a$$580;
      if (v10478) {
        var v24641 = a$$580.type;
        var v20251 = v24641 == "hidden";
        var v24643 = !v20251;
        if (v24643) {
          var v24642 = a$$580.nodeType;
          v20251 = v24642 != 1;
        }
        var v16087 = v20251;
        var v20253 = !v16087;
        if (v20253) {
          var v24644 = $$$3.expr;
          var v20252 = v24644.filters;
          v16087 = v20252.hidden(a$$580);
        }
        v10478 = v16087;
      }
      v3749 = v10478;
    }
    var v3750 = $$$3(a$$580);
    var d$$337 = v3750.offset();
    var v3751 = d$$337.left;
    var v3752 = d$$337.top;
    return[v3751, v3752];
  }
  function v1621(a$$579, b$$548, c$$444) {
    var v3753 = a$$579.dpDiv;
    var d$$336 = v3753.outerWidth();
    var v3754 = a$$579.dpDiv;
    var e$$293 = v3754.outerHeight();
    var v3755;
    var v10480 = a$$579.input;
    if (v10480) {
      var v10479 = a$$579.input;
      v3755 = v10479.outerWidth();
    } else {
      v3755 = 0;
    }
    var f$$142 = v3755;
    var v3756;
    var v10482 = a$$579.input;
    if (v10482) {
      var v10481 = a$$579.input;
      v3756 = v10481.outerHeight();
    } else {
      v3756 = 0;
    }
    var g$$166 = v3756;
    var v10483 = document.documentElement;
    var v3757 = v10483.clientWidth;
    var v10484;
    if (c$$444) {
      v10484 = 0;
    } else {
      var v16088 = $$$3(document);
      v10484 = v16088.scrollLeft();
    }
    var v3758 = v10484;
    var h$$136 = v3757 + v3758;
    var v10485 = document.documentElement;
    var v3759 = v10485.clientHeight;
    var v10486;
    if (c$$444) {
      v10486 = 0;
    } else {
      var v16089 = $$$3(document);
      v10486 = v16089.scrollTop();
    }
    var v3760 = v10486;
    var i$$190 = v3759 + v3760;
    var v27984 = b$$548.left;
    var v28883;
    var v29481 = this._get(a$$579, "isRTL");
    if (v29481) {
      v28883 = d$$336 - f$$142;
    } else {
      v28883 = 0;
    }
    var v27985 = v28883;
    b$$548.left = v27984 - v27985;
    var v27986 = b$$548.left;
    var v28884;
    var v29840 = c$$444;
    if (v29840) {
      var v30102 = b$$548.left;
      var v30457 = a$$579.input;
      var v30317 = v30457.offset();
      var v30103 = v30317.left;
      v29840 = v30102 == v30103;
    }
    var v29483 = v29840;
    if (v29483) {
      var v29482 = $$$3(document);
      v28884 = v29482.scrollLeft();
    } else {
      v28884 = 0;
    }
    var v27987 = v28884;
    b$$548.left = v27986 - v27987;
    var v26593 = b$$548.top;
    var v27988;
    var v29484 = c$$444;
    if (v29484) {
      var v29841 = b$$548.top;
      var v30458 = a$$579.input;
      var v30318 = v30458.offset();
      var v30104 = v30318.top;
      var v29842 = v30104 + g$$166;
      v29484 = v29841 == v29842;
    }
    var v28886 = v29484;
    if (v28886) {
      var v28885 = $$$3(document);
      v27988 = v28885.scrollTop();
    } else {
      v27988 = 0;
    }
    var v26594 = v27988;
    b$$548.top = v26593 - v26594;
    var v24645 = b$$548.left;
    var v26595 = b$$548.left;
    var v27989;
    var v30105 = b$$548.left;
    var v29843 = v30105 + d$$336;
    var v29485 = v29843 > h$$136;
    if (v29485) {
      v29485 = h$$136 > d$$336;
    }
    var v28888 = v29485;
    if (v28888) {
      var v29844 = b$$548.left;
      var v29486 = v29844 + d$$336;
      var v28887 = v29486 - h$$136;
      v27989 = Math.abs(v28887);
    } else {
      v27989 = 0;
    }
    var v26596 = v27989;
    var v24646 = Math.min(v26595, v26596);
    b$$548.left = v24645 - v24646;
    var v20254 = b$$548.top;
    var v24647 = b$$548.top;
    var v26597;
    var v29845 = b$$548.top;
    var v29487 = v29845 + e$$293;
    var v28889 = v29487 > i$$190;
    if (v28889) {
      v28889 = i$$190 > e$$293;
    }
    var v27991 = v28889;
    if (v27991) {
      var v27990 = e$$293 + g$$166;
      v26597 = Math.abs(v27990);
    } else {
      v26597 = 0;
    }
    var v24648 = v26597;
    var v20255 = Math.min(v24647, v24648);
    b$$548.top = v20254 - v20255;
    return b$$548;
  }
  function v1620(a$$577) {
    function b$$547(a$$578) {
      var v10487 = {thin:1, medium:2, thick:3};
      var v3761 = v10487[a$$578];
      var v10488 = !v3761;
      if (v10488) {
        v3761 = a$$578;
      }
      return v3761;
    }
    var v16090 = a$$577.css("border-left-width");
    var v10489 = b$$547(v16090);
    var v3762 = parseFloat(v10489);
    var v16091 = a$$577.css("border-top-width");
    var v10490 = b$$547(v16091);
    var v3763 = parseFloat(v10490);
    return[v3762, v3763];
  }
  function v1619(a$$576) {
    function v1618() {
      var v20256 = a$$576.yearshtml;
      var v16092 = h$$135 === v20256;
      if (v16092) {
        v16092 = a$$576.yearshtml;
      }
      var v10491 = v16092;
      if (v10491) {
        var v20257 = a$$576.dpDiv;
        var v16093 = v20257.find("select.ui-datepicker-year:first");
        var v16094 = a$$576.yearshtml;
        v16093.replaceWith(v16094);
      }
      h$$135 = a$$576.yearshtml = null;
      return;
    }
    var b$$546 = this;
    b$$546.maxRows = 4;
    var v3764 = $$$3.datepicker;
    var v3765 = a$$576.dpDiv;
    var c$$443 = v3764._getBorders(v3765);
    instActive = a$$576;
    var v20258 = a$$576.dpDiv;
    var v16095 = v20258.empty();
    var v16096 = this._generateHTML(a$$576);
    v16095.append(v16096);
    this._attachHandlers(a$$576);
    var v3766 = a$$576.dpDiv;
    var d$$335 = v3766.find("iframe.ui-datepicker-cover");
    var v16097 = d$$335.length;
    var v10492 = !v16097;
    var v16099 = !v10492;
    if (v16099) {
      var v24649 = c$$443[0];
      var v20259 = -v24649;
      var v24650 = c$$443[1];
      var v20260 = -v24650;
      var v24651 = a$$576.dpDiv;
      var v20261 = v24651.outerWidth();
      var v24652 = a$$576.dpDiv;
      var v20262 = v24652.outerHeight();
      var v16098 = {left:v20259, top:v20260, width:v20261, height:v20262};
      d$$335.css(v16098);
    }
    var v16100 = a$$576.dpDiv;
    var v24653 = this._dayOverClass;
    var v20263 = "." + v24653;
    var v16101 = v20263 + " a";
    var v10493 = v16100.find(v16101);
    v10493.mouseover();
    var e$$292 = this._getNumberOfMonths(a$$576);
    var f$$141 = e$$292[1];
    var g$$165 = 17;
    var v26598 = a$$576.dpDiv;
    var v24654 = v26598.removeClass("ui-datepicker-multi-2 ui-datepicker-multi-3 ui-datepicker-multi-4");
    v24654.width("");
    var v24655 = f$$141 > 1;
    if (v24655) {
      var v27992 = a$$576.dpDiv;
      var v27993 = "ui-datepicker-multi-" + f$$141;
      var v26599 = v27992.addClass(v27993);
      var v27994 = g$$165 * f$$141;
      var v26600 = v27994 + "em";
      v26599.css("width", v26600);
    }
    var v20264 = a$$576.dpDiv;
    var v26601;
    var v29488 = e$$292[0];
    var v28890 = v29488 != 1;
    var v29490 = !v28890;
    if (v29490) {
      var v29489 = e$$292[1];
      v28890 = v29489 != 1;
    }
    var v27995 = v28890;
    if (v27995) {
      v26601 = "add";
    } else {
      v26601 = "remove";
    }
    var v24656 = v26601;
    var v20265 = v24656 + "Class";
    v20264[v20265]("ui-datepicker-multi");
    var v16102 = a$$576.dpDiv;
    var v24657;
    var v26602 = this._get(a$$576, "isRTL");
    if (v26602) {
      v24657 = "add";
    } else {
      v24657 = "remove";
    }
    var v20266 = v24657;
    var v16103 = v20266 + "Class";
    v16102[v16103]("ui-datepicker-rtl");
    var v29491 = $$$3.datepicker;
    var v28891 = v29491._curInst;
    var v27996 = a$$576 == v28891;
    if (v27996) {
      var v28892 = $$$3.datepicker;
      v27996 = v28892._datepickerShowing;
    }
    var v26603 = v27996;
    if (v26603) {
      v26603 = a$$576.input;
    }
    var v24658 = v26603;
    if (v24658) {
      var v26604 = a$$576.input;
      v24658 = v26604.is(":visible");
    }
    var v20267 = v24658;
    if (v20267) {
      var v26605 = a$$576.input;
      var v24659 = v26605.is(":disabled");
      v20267 = !v24659;
    }
    var v16104 = v20267;
    if (v16104) {
      var v24660 = a$$576.input;
      var v20268 = v24660[0];
      var v20269 = document.activeElement;
      v16104 = v20268 != v20269;
    }
    var v10494 = v16104;
    if (v10494) {
      var v16105 = a$$576.input;
      v16105.focus();
    }
    var v3767 = a$$576.yearshtml;
    if (v3767) {
      var h$$135 = a$$576.yearshtml;
      setTimeout(v1618, 0);
    }
    return;
  }
  function v1617(a$$574) {
    function v1616() {
      var v3768 = b$$545.dpDiv;
      var a$$575 = v3768.find("iframe.ui-datepicker-cover");
      var v16106 = a$$575.length;
      var v10495 = !v16106;
      var v3772 = !v10495;
      if (v3772) {
        var v3769 = $$$3.datepicker;
        var v3770 = b$$545.dpDiv;
        var c$$442 = v3769._getBorders(v3770);
        var v16107 = c$$442[0];
        var v10496 = -v16107;
        var v16108 = c$$442[1];
        var v10497 = -v16108;
        var v16109 = b$$545.dpDiv;
        var v10498 = v16109.outerWidth();
        var v16110 = b$$545.dpDiv;
        var v10499 = v16110.outerHeight();
        var v3771 = {left:v10496, top:v10497, width:v10498, height:v10499};
        a$$575.css(v3771);
      }
      return;
    }
    function v1615() {
      var v16111 = e$$291;
      var v24661 = $$$3(this);
      var v20270 = v24661.css("position");
      var v16112 = v20270 == "fixed";
      e$$291 = v16111 | v16112;
      return!e$$291;
    }
    var v10500 = a$$574.target;
    var v16113 = !v10500;
    if (v16113) {
      v10500 = a$$574;
    }
    a$$574 = v10500;
    var v20271 = a$$574.nodeName;
    var v16114 = v20271.toLowerCase();
    var v10501 = v16114 != "input";
    if (v10501) {
      var v20272 = a$$574.parentNode;
      var v16115 = $$$3("input", v20272);
      a$$574 = v16115[0];
    }
    var v16116 = $$$3.datepicker;
    var v10502 = v16116._isDisabledDatepicker(a$$574);
    var v16118 = !v10502;
    if (v16118) {
      var v20273 = $$$3.datepicker;
      var v16117 = v20273._lastInput;
      v10502 = v16117 == a$$574;
    }
    var v3773 = v10502;
    if (v3773) {
      return;
    }
    var v3774 = $$$3.datepicker;
    var b$$545 = v3774._getInst(a$$574);
    var v16119 = $$$3.datepicker;
    var v10503 = v16119._curInst;
    if (v10503) {
      var v20274 = $$$3.datepicker;
      var v16120 = v20274._curInst;
      v10503 = v16120 != b$$545;
    }
    var v3775 = v10503;
    if (v3775) {
      var v24662 = $$$3.datepicker;
      var v20275 = v24662._curInst;
      var v16121 = v20275.dpDiv;
      var v16122 = !0;
      var v16123 = !0;
      v16121.stop(v16122, v16123);
      var v20276 = b$$545;
      if (v20276) {
        var v24663 = $$$3.datepicker;
        v20276 = v24663._datepickerShowing;
      }
      var v16124 = v20276;
      if (v16124) {
        var v20277 = $$$3.datepicker;
        var v27997 = $$$3.datepicker;
        var v26606 = v27997._curInst;
        var v24664 = v26606.input;
        var v20278 = v24664[0];
        v20277._hideDatepicker(v20278);
      }
    }
    var v3776 = $$$3.datepicker;
    var c$$441 = v3776._get(b$$545, "beforeShow");
    var v3777;
    if (c$$441) {
      var v10504 = [a$$574, b$$545];
      v3777 = c$$441.apply(a$$574, v10504);
    } else {
      v3777 = {};
    }
    var d$$334 = v3777;
    var v10505 = !1;
    var v3778 = d$$334 === v10505;
    if (v3778) {
      return;
    }
    var v26607 = b$$545.settings;
    extendRemove(v26607, d$$334);
    b$$545.lastVal = null;
    var v24665 = $$$3.datepicker;
    v24665._lastInput = a$$574;
    var v20279 = $$$3.datepicker;
    v20279._setDateFromField(b$$545);
    var v20280 = $$$3.datepicker;
    var v16125 = v20280._inDialog;
    if (v16125) {
      a$$574.value = "";
    }
    var v16126 = $$$3.datepicker;
    var v10506 = v16126._pos;
    var v16127 = !v10506;
    if (v16127) {
      var v20281 = $$$3.datepicker;
      var v24666 = $$$3.datepicker;
      var v31016 = v24666._findPos(a$$574);
      v20281._pos = v31016;
      var v24667 = $$$3.datepicker;
      var v20282 = v24667._pos;
      var v26608 = v20282[1];
      var v26609 = a$$574.offsetHeight;
      v20282[1] = v26608 + v26609;
    }
    var e$$291 = !1;
    var v16128 = $$$3(a$$574);
    var v10507 = v16128.parents();
    v10507.each(v1615);
    var v16129 = e$$291;
    if (v16129) {
      var v20283 = $$$3.browser;
      v16129 = v20283.opera;
    }
    var v10508 = v16129;
    if (v10508) {
      var v24668 = $$$3.datepicker;
      var v20284 = v24668._pos;
      var v26610 = v20284[0];
      var v27998 = document.documentElement;
      var v26611 = v27998.scrollLeft;
      v20284[0] = v26610 - v26611;
      var v24669 = $$$3.datepicker;
      var v20285 = v24669._pos;
      var v26612 = v20285[1];
      var v27999 = document.documentElement;
      var v26613 = v27999.scrollTop;
      v20285[1] = v26612 - v26613;
    }
    var v16130 = $$$3.datepicker;
    var v10509 = v16130._pos;
    var v3779 = v10509[0];
    var v16131 = $$$3.datepicker;
    var v10510 = v16131._pos;
    var v3780 = v10510[1];
    var f$$140 = {left:v3779, top:v3780};
    var v26614 = $$$3.datepicker;
    v26614._pos = null;
    var v26615 = b$$545.dpDiv;
    v26615.empty();
    var v24670 = b$$545.dpDiv;
    var v24671 = {position:"absolute", display:"block", top:"-1000px"};
    v24670.css(v24671);
    var v20286 = $$$3.datepicker;
    v20286._updateDatepicker(b$$545);
    var v16132 = $$$3.datepicker;
    f$$140 = v16132._checkOffset(b$$545, f$$140, e$$291);
    var v10511 = b$$545.dpDiv;
    var v20287;
    var v28000 = $$$3.datepicker;
    var v26616 = v28000._inDialog;
    if (v26616) {
      v26616 = $$$3.blockUI;
    }
    var v24673 = v26616;
    if (v24673) {
      v20287 = "static";
    } else {
      var v24672;
      if (e$$291) {
        v24672 = "fixed";
      } else {
        v24672 = "absolute";
      }
      v20287 = v24672;
    }
    var v16133 = v20287;
    var v20288 = f$$140.left;
    var v16134 = v20288 + "px";
    var v20289 = f$$140.top;
    var v16135 = v20289 + "px";
    var v10512 = {position:v16133, display:"none", left:v16134, top:v16135};
    v10511.css(v10512);
    var v10513 = b$$545.inline;
    var v3783 = !v10513;
    if (v3783) {
      var v3781 = $$$3.datepicker;
      var g$$164 = v3781._get(b$$545, "showAnim");
      var v3782 = $$$3.datepicker;
      var h$$134 = v3782._get(b$$545, "duration");
      var i$$189 = v1616;
      var v26617 = b$$545.dpDiv;
      var v28893 = $$$3(a$$574);
      var v28001 = v28893.zIndex();
      var v26618 = v28001 + 1;
      v26617.zIndex(v26618);
      var v26619 = $$$3.datepicker;
      v26619._datepickerShowing = !0;
      var v24674;
      var v28002 = $$$3.effects;
      if (v28002) {
        var v28894 = $$$3.effects;
        v28002 = v28894[g$$164];
      }
      var v26625 = v28002;
      if (v26625) {
        var v26620 = b$$545.dpDiv;
        var v28003 = $$$3.datepicker;
        var v26621 = v28003._get(b$$545, "showOptions");
        v24674 = v26620.show(g$$164, v26621, h$$134, i$$189);
      } else {
        var v26622 = b$$545.dpDiv;
        var v26623 = g$$164 || "show";
        var v28004;
        if (g$$164) {
          v28004 = h$$134;
        } else {
          v28004 = null;
        }
        var v26624 = v28004;
        v24674 = v26622[v26623](v26624, i$$189);
      }
      v24674;
      var v24675 = !g$$164;
      var v26626 = !v24675;
      if (v26626) {
        v24675 = !h$$134;
      }
      var v20290 = v24675;
      if (v20290) {
        i$$189();
      }
      var v24676 = b$$545.input;
      var v20291 = v24676.is(":visible");
      if (v20291) {
        var v26627 = b$$545.input;
        var v24677 = v26627.is(":disabled");
        v20291 = !v24677;
      }
      var v16136 = v20291;
      if (v16136) {
        var v20292 = b$$545.input;
        v20292.focus();
      }
      var v10514 = $$$3.datepicker;
      v10514._curInst = b$$545;
    }
    return;
  }
  function v1614(a$$573) {
    var v3784 = $$$3.datepicker;
    var v3785 = a$$573.target;
    var b$$544 = v3784._getInst(v3785);
    var v16137 = b$$544.input;
    var v10515 = v16137.val();
    var v10516 = b$$544.lastVal;
    var v3791 = v10515 != v10516;
    if (v3791) {
      try {
        var v3786 = $$$3.datepicker;
        var v10517 = $$$3.datepicker;
        var v3787 = v10517._get(b$$544, "dateFormat");
        var v10518;
        var v16139 = b$$544.input;
        if (v16139) {
          var v16138 = b$$544.input;
          v10518 = v16138.val();
        } else {
          v10518 = null;
        }
        var v3788 = v10518;
        var v10519 = $$$3.datepicker;
        var v3789 = v10519._getFormatConfig(b$$544);
        var c$$440 = v3786.parseDate(v3787, v3788, v3789);
        if (c$$440) {
          var v20293 = $$$3.datepicker;
          v20293._setDateFromField(b$$544);
          var v20294 = $$$3.datepicker;
          v20294._updateAlternate(b$$544);
          var v16140 = $$$3.datepicker;
          v16140._updateDatepicker(b$$544);
        }
      } catch (d$$333) {
        var v3790 = $$$3.datepicker;
        v3790.log(d$$333);
      }
    }
    return!0;
  }
  function v1613(a$$572) {
    var v3792 = $$$3.datepicker;
    var v3793 = a$$572.target;
    var b$$543 = v3792._getInst(v3793);
    var v10520 = $$$3.datepicker;
    var v3798 = v10520._get(b$$543, "constrainInput");
    if (v3798) {
      var v3794 = $$$3.datepicker;
      var v10521 = $$$3.datepicker;
      var v3795 = v10521._get(b$$543, "dateFormat");
      var c$$439 = v3794._possibleChars(v3795);
      var v10522;
      var v20295 = a$$572.charCode;
      var v16141 = v20295 == undefined$$1;
      if (v16141) {
        v10522 = a$$572.keyCode;
      } else {
        v10522 = a$$572.charCode;
      }
      var v3796 = v10522;
      var d$$332 = String.fromCharCode(v3796);
      var v20296 = a$$572.ctrlKey;
      var v24678 = !v20296;
      if (v24678) {
        v20296 = a$$572.metaKey;
      }
      var v16142 = v20296;
      var v20297 = !v16142;
      if (v20297) {
        v16142 = d$$332 < " ";
      }
      var v10523 = v16142;
      var v16143 = !v10523;
      if (v16143) {
        v10523 = !c$$439;
      }
      var v3797 = v10523;
      var v10525 = !v3797;
      if (v10525) {
        var v10524 = c$$439.indexOf(d$$332);
        v3797 = v10524 > -1;
      }
      return v3797;
    }
    return;
  }
  function v1612(a$$571) {
    var v3799 = $$$3.datepicker;
    var v3800 = a$$571.target;
    var b$$542 = v3799._getInst(v3800);
    var c$$438 = !0;
    var v3801 = b$$542.dpDiv;
    var d$$331 = v3801.is(".ui-datepicker-rtl");
    b$$542._keyEvent = !0;
    var v10526 = $$$3.datepicker;
    var v3819 = v10526._datepickerShowing;
    if (v3819) {
      var v3817 = a$$571.keyCode;
      switch(v3817) {
        case 9:
          var v10527 = $$$3.datepicker;
          v10527._hideDatepicker();
          c$$438 = !1;
          break;
        case 13:
          var v26628 = $$$3.datepicker;
          var v24679 = v26628._dayOverClass;
          var v20298 = "td." + v24679;
          var v16144 = v20298 + ":not(.";
          var v20299 = $$$3.datepicker;
          var v16145 = v20299._currentClass;
          var v10528 = v16144 + v16145;
          var v3802 = v10528 + ")";
          var v3803 = b$$542.dpDiv;
          var e$$290 = $$$3(v3802, v3803);
          var v3804 = e$$290[0];
          if (v3804) {
            var v10529 = $$$3.datepicker;
            var v10530 = a$$571.target;
            var v10531 = b$$542.selectedMonth;
            var v10532 = b$$542.selectedYear;
            var v10533 = e$$290[0];
            v10529._selectDay(v10530, v10531, v10532, v10533);
          }
          var v3805 = $$$3.datepicker;
          var f$$139 = v3805._get(b$$542, "onSelect");
          if (f$$139) {
            var v3806 = $$$3.datepicker;
            var g$$163 = v3806._formatDate(b$$542);
            var v10534;
            var v16147 = b$$542.input;
            if (v16147) {
              var v16146 = b$$542.input;
              v10534 = v16146[0];
            } else {
              v10534 = null;
            }
            var v3807 = v10534;
            var v3808 = [g$$163, b$$542];
            f$$139.apply(v3807, v3808);
          } else {
            var v3809 = $$$3.datepicker;
            v3809._hideDatepicker();
          }
          return!1;
        case 27:
          var v3810 = $$$3.datepicker;
          v3810._hideDatepicker();
          break;
        case 33:
          var v3811 = $$$3.datepicker;
          var v3812 = a$$571.target;
          var v10535;
          var v16150 = a$$571.ctrlKey;
          if (v16150) {
            var v20300 = $$$3.datepicker;
            var v16148 = v20300._get(b$$542, "stepBigMonths");
            v10535 = -v16148;
          } else {
            var v20301 = $$$3.datepicker;
            var v16149 = v20301._get(b$$542, "stepMonths");
            v10535 = -v16149;
          }
          var v3813 = v10535;
          v3811._adjustDate(v3812, v3813, "M");
          break;
        case 34:
          var v3814 = $$$3.datepicker;
          var v3815 = a$$571.target;
          var v10536;
          var v16153 = a$$571.ctrlKey;
          if (v16153) {
            var v20302 = $$$3.datepicker;
            var v16151 = v20302._get(b$$542, "stepBigMonths");
            v10536 = +v16151;
          } else {
            var v20303 = $$$3.datepicker;
            var v16152 = v20303._get(b$$542, "stepMonths");
            v10536 = +v16152;
          }
          var v3816 = v10536;
          v3814._adjustDate(v3815, v3816, "M");
          break;
        case 35:
          var v16154 = a$$571.ctrlKey;
          var v20304 = !v16154;
          if (v20304) {
            v16154 = a$$571.metaKey;
          }
          var v10537 = v16154;
          if (v10537) {
            var v16155 = $$$3.datepicker;
            var v16156 = a$$571.target;
            v16155._clearDate(v16156);
          }
          var v10538 = a$$571.ctrlKey;
          var v16157 = !v10538;
          if (v16157) {
            v10538 = a$$571.metaKey;
          }
          c$$438 = v10538;
          break;
        case 36:
          var v16158 = a$$571.ctrlKey;
          var v20305 = !v16158;
          if (v20305) {
            v16158 = a$$571.metaKey;
          }
          var v10539 = v16158;
          if (v10539) {
            var v16159 = $$$3.datepicker;
            var v16160 = a$$571.target;
            v16159._gotoToday(v16160);
          }
          var v10540 = a$$571.ctrlKey;
          var v16161 = !v10540;
          if (v16161) {
            v10540 = a$$571.metaKey;
          }
          c$$438 = v10540;
          break;
        case 37:
          var v20306 = a$$571.ctrlKey;
          var v24680 = !v20306;
          if (v24680) {
            v20306 = a$$571.metaKey;
          }
          var v16162 = v20306;
          if (v16162) {
            var v20307 = $$$3.datepicker;
            var v20308 = a$$571.target;
            var v24681;
            if (d$$331) {
              v24681 = 1;
            } else {
              v24681 = -1;
            }
            var v20309 = v24681;
            v20307._adjustDate(v20308, v20309, "D");
          }
          var v16163 = a$$571.ctrlKey;
          var v20310 = !v16163;
          if (v20310) {
            v16163 = a$$571.metaKey;
          }
          c$$438 = v16163;
          var v16164 = a$$571.originalEvent;
          var v10541 = v16164.altKey;
          if (v10541) {
            var v16165 = $$$3.datepicker;
            var v16166 = a$$571.target;
            var v20311;
            var v24684 = a$$571.ctrlKey;
            if (v24684) {
              var v26629 = $$$3.datepicker;
              var v24682 = v26629._get(b$$542, "stepBigMonths");
              v20311 = -v24682;
            } else {
              var v26630 = $$$3.datepicker;
              var v24683 = v26630._get(b$$542, "stepMonths");
              v20311 = -v24683;
            }
            var v16167 = v20311;
            v16165._adjustDate(v16166, v16167, "M");
          }
          break;
        case 38:
          var v16168 = a$$571.ctrlKey;
          var v20312 = !v16168;
          if (v20312) {
            v16168 = a$$571.metaKey;
          }
          var v10542 = v16168;
          if (v10542) {
            var v16169 = $$$3.datepicker;
            var v16170 = a$$571.target;
            v16169._adjustDate(v16170, -7, "D");
          }
          var v10543 = a$$571.ctrlKey;
          var v16171 = !v10543;
          if (v16171) {
            v10543 = a$$571.metaKey;
          }
          c$$438 = v10543;
          break;
        case 39:
          var v20313 = a$$571.ctrlKey;
          var v24685 = !v20313;
          if (v24685) {
            v20313 = a$$571.metaKey;
          }
          var v16172 = v20313;
          if (v16172) {
            var v20314 = $$$3.datepicker;
            var v20315 = a$$571.target;
            var v24686;
            if (d$$331) {
              v24686 = -1;
            } else {
              v24686 = 1;
            }
            var v20316 = v24686;
            v20314._adjustDate(v20315, v20316, "D");
          }
          var v16173 = a$$571.ctrlKey;
          var v20317 = !v16173;
          if (v20317) {
            v16173 = a$$571.metaKey;
          }
          c$$438 = v16173;
          var v16174 = a$$571.originalEvent;
          var v10544 = v16174.altKey;
          if (v10544) {
            var v16175 = $$$3.datepicker;
            var v16176 = a$$571.target;
            var v20318;
            var v24689 = a$$571.ctrlKey;
            if (v24689) {
              var v26631 = $$$3.datepicker;
              var v24687 = v26631._get(b$$542, "stepBigMonths");
              v20318 = +v24687;
            } else {
              var v26632 = $$$3.datepicker;
              var v24688 = v26632._get(b$$542, "stepMonths");
              v20318 = +v24688;
            }
            var v16177 = v20318;
            v16175._adjustDate(v16176, v16177, "M");
          }
          break;
        case 40:
          var v16178 = a$$571.ctrlKey;
          var v20319 = !v16178;
          if (v20319) {
            v16178 = a$$571.metaKey;
          }
          var v10545 = v16178;
          if (v10545) {
            var v16179 = $$$3.datepicker;
            var v16180 = a$$571.target;
            v16179._adjustDate(v16180, 7, "D");
          }
          var v10546 = a$$571.ctrlKey;
          var v16181 = !v10546;
          if (v16181) {
            v10546 = a$$571.metaKey;
          }
          c$$438 = v10546;
          break;
        default:
          c$$438 = !1;
      }
    } else {
      var v3818;
      var v20320 = a$$571.keyCode;
      var v16182 = v20320 == 36;
      if (v16182) {
        v16182 = a$$571.ctrlKey;
      }
      var v10548 = v16182;
      if (v10548) {
        var v10547 = $$$3.datepicker;
        v3818 = v10547._showDatepicker(this);
      } else {
        v3818 = c$$438 = !1;
      }
      v3818;
    }
    if (c$$438) {
      a$$571.preventDefault();
      a$$571.stopPropagation();
    }
    return;
  }
  function v1611(a$$570, b$$541) {
    var c$$437 = this._getInst(a$$570);
    var v16183 = c$$437;
    if (v16183) {
      var v20321 = c$$437.inline;
      v16183 = !v20321;
    }
    var v10549 = v16183;
    if (v10549) {
      this._setDateFromField(c$$437, b$$541);
    }
    var v10550;
    if (c$$437) {
      v10550 = this._getDate(c$$437);
    } else {
      v10550 = null;
    }
    return v10550;
  }
  function v1610(a$$569, b$$540) {
    var c$$436 = this._getInst(a$$569);
    if (c$$436) {
      this._setDate(c$$436, b$$540);
      this._updateDatepicker(c$$436);
      this._updateAlternate(c$$436);
    }
    return;
  }
  function v1609(a$$568) {
    var b$$539 = this._getInst(a$$568);
    if (b$$539) {
      this._updateDatepicker(b$$539);
    }
    return;
  }
  function v1608(a$$567, b$$538, c$$435) {
    this._optionDatepicker(a$$567, b$$538, c$$435);
    return;
  }
  function v1607(a$$566, b$$537, c$$434) {
    var d$$330 = this._getInst(a$$566);
    var v16184 = arguments.length;
    var v10551 = v16184 == 2;
    if (v10551) {
      var v16185 = typeof b$$537;
      v10551 = v16185 == "string";
    }
    var v3821 = v10551;
    if (v3821) {
      var v3820;
      var v10554 = b$$537 == "defaults";
      if (v10554) {
        var v16186 = $$$3.datepicker;
        var v10552 = v16186._defaults;
        v3820 = $$$3.extend({}, v10552);
      } else {
        var v10553;
        if (d$$330) {
          var v16187;
          var v20323 = b$$537 == "all";
          if (v20323) {
            var v20322 = d$$330.settings;
            v16187 = $$$3.extend({}, v20322);
          } else {
            v16187 = this._get(d$$330, b$$537);
          }
          v10553 = v16187;
        } else {
          v10553 = null;
        }
        v3820 = v10553;
      }
      return v3820;
    }
    var e$$289 = b$$537 || {};
    var v10555 = typeof b$$537;
    var v3822 = v10555 == "string";
    if (v3822) {
      e$$289 = {};
      e$$289[b$$537] = c$$434;
    }
    if (d$$330) {
      var v10556 = this._curInst;
      var v3823 = v10556 == d$$330;
      if (v3823) {
        this._hideDatepicker();
      }
      var v3824 = !0;
      var f$$138 = this._getDateDatepicker(a$$566, v3824);
      var g$$162 = this._getMinMaxDate(d$$330, "min");
      var h$$133 = this._getMinMaxDate(d$$330, "max");
      var v28895 = d$$330.settings;
      extendRemove(v28895, e$$289);
      var v29846 = g$$162 !== null;
      if (v29846) {
        var v30106 = e$$289.dateFormat;
        v29846 = v30106 !== undefined$$1;
      }
      var v29492 = v29846;
      if (v29492) {
        var v29847 = e$$289.minDate;
        v29492 = v29847 === undefined$$1;
      }
      var v28896 = v29492;
      if (v28896) {
        var v29493 = d$$330.settings;
        var v31017 = this._formatDate(d$$330, g$$162);
        v29493.minDate = v31017;
      }
      var v29494 = h$$133 !== null;
      if (v29494) {
        var v29848 = e$$289.dateFormat;
        v29494 = v29848 !== undefined$$1;
      }
      var v28897 = v29494;
      if (v28897) {
        var v29495 = e$$289.maxDate;
        v28897 = v29495 === undefined$$1;
      }
      var v28005 = v28897;
      if (v28005) {
        var v28898 = d$$330.settings;
        var v31018 = this._formatDate(d$$330, h$$133);
        v28898.maxDate = v31018;
      }
      var v26633 = $$$3(a$$566);
      this._attachments(v26633, d$$330);
      this._autoSize(d$$330);
      this._setDate(d$$330, f$$138);
      this._updateAlternate(d$$330);
      this._updateDatepicker(d$$330);
    }
    return;
  }
  function v1606(a$$565) {
    try {
      return $$$3.data(a$$565, PROP_NAME);
    } catch (b$$536) {
      throw "Missing instance data for this datepicker";
    }
    return;
  }
  function v1605(a$$564) {
    var v3825 = !a$$564;
    if (v3825) {
      return!1;
    }
    var b$$535 = 0;
    var v16188 = this._disabledInputs;
    var v10557 = v16188.length;
    var v3827 = b$$535 < v10557;
    for (;v3827;) {
      var v16189 = this._disabledInputs;
      var v10558 = v16189[b$$535];
      var v3826 = v10558 == a$$564;
      if (v3826) {
        return!0;
      }
      b$$535++;
      var v16190 = this._disabledInputs;
      var v10559 = v16190.length;
      v3827 = b$$535 < v10559;
    }
    return!1;
  }
  function v1604(a$$563) {
    function v1603(b$$534) {
      var v3828;
      var v10560 = b$$534 == a$$563;
      if (v10560) {
        v3828 = null;
      } else {
        v3828 = b$$534;
      }
      return v3828;
    }
    function v1602() {
      this.disabled = !0;
      return;
    }
    var b$$533 = $$$3(a$$563);
    var c$$433 = $$$3.data(a$$563, PROP_NAME);
    var v16191 = this.markerClassName;
    var v10561 = b$$533.hasClass(v16191);
    var v3829 = !v10561;
    if (v3829) {
      return;
    }
    var v3830 = a$$563.nodeName;
    var d$$329 = v3830.toLowerCase();
    var v3833 = d$$329 == "input";
    if (v3833) {
      a$$563.disabled = !0;
      var v26634 = c$$433.trigger;
      var v24690 = v26634.filter("button");
      var v20324 = v24690.each(v1602);
      var v16192 = v20324.end();
      var v10562 = v16192.filter("img");
      var v10563 = {opacity:"0.5", cursor:"default"};
      v10562.css(v10563);
    } else {
      var v10564 = d$$329 == "div";
      var v16193 = !v10564;
      if (v16193) {
        v10564 = d$$329 == "span";
      }
      var v3832 = v10564;
      if (v3832) {
        var v10565 = this._inlineClass;
        var v3831 = "." + v10565;
        var e$$288 = b$$533.children(v3831);
        var v10566 = e$$288.children();
        v10566.addClass("ui-state-disabled");
        var v10567 = e$$288.find("select.ui-datepicker-month, select.ui-datepicker-year");
        v10567.attr("disabled", "disabled");
      }
    }
    var v10568 = this._disabledInputs;
    var v31019 = $$$3.map(v10568, v1603);
    this._disabledInputs = v31019;
    var v10569 = this._disabledInputs;
    var v16194 = this._disabledInputs;
    var v10570 = v16194.length;
    v10569[v10570] = a$$563;
    return;
  }
  function v1601(a$$562) {
    function v1600(b$$532) {
      var v3834;
      var v10571 = b$$532 == a$$562;
      if (v10571) {
        v3834 = null;
      } else {
        v3834 = b$$532;
      }
      return v3834;
    }
    function v1599() {
      this.disabled = !1;
      return;
    }
    var b$$531 = $$$3(a$$562);
    var c$$432 = $$$3.data(a$$562, PROP_NAME);
    var v16195 = this.markerClassName;
    var v10572 = b$$531.hasClass(v16195);
    var v3835 = !v10572;
    if (v3835) {
      return;
    }
    var v3836 = a$$562.nodeName;
    var d$$328 = v3836.toLowerCase();
    var v3839 = d$$328 == "input";
    if (v3839) {
      a$$562.disabled = !1;
      var v26635 = c$$432.trigger;
      var v24691 = v26635.filter("button");
      var v20325 = v24691.each(v1599);
      var v16196 = v20325.end();
      var v10573 = v16196.filter("img");
      var v10574 = {opacity:"1.0", cursor:""};
      v10573.css(v10574);
    } else {
      var v10575 = d$$328 == "div";
      var v16197 = !v10575;
      if (v16197) {
        v10575 = d$$328 == "span";
      }
      var v3838 = v10575;
      if (v3838) {
        var v10576 = this._inlineClass;
        var v3837 = "." + v10576;
        var e$$287 = b$$531.children(v3837);
        var v10577 = e$$287.children();
        v10577.removeClass("ui-state-disabled");
        var v10578 = e$$287.find("select.ui-datepicker-month, select.ui-datepicker-year");
        v10578.removeAttr("disabled");
      }
    }
    var v3840 = this._disabledInputs;
    var v31020 = $$$3.map(v3840, v1600);
    this._disabledInputs = v31020;
    return;
  }
  function v1598(a$$561) {
    var b$$530 = $$$3(a$$561);
    var c$$431 = $$$3.data(a$$561, PROP_NAME);
    var v16198 = this.markerClassName;
    var v10579 = b$$530.hasClass(v16198);
    var v3841 = !v10579;
    if (v3841) {
      return;
    }
    var v3842 = a$$561.nodeName;
    var d$$327 = v3842.toLowerCase();
    $$$3.removeData(a$$561, PROP_NAME);
    var v10580;
    var v16200 = d$$327 == "input";
    if (v16200) {
      var v24692 = c$$431.append;
      v24692.remove();
      var v24693 = c$$431.trigger;
      v24693.remove();
      var v28899 = this.markerClassName;
      var v28006 = b$$530.removeClass(v28899);
      var v28007 = this._showDatepicker;
      var v26636 = v28006.unbind("focus", v28007);
      var v26637 = this._doKeyDown;
      var v24694 = v26636.unbind("keydown", v26637);
      var v24695 = this._doKeyPress;
      var v20326 = v24694.unbind("keypress", v24695);
      var v20327 = this._doKeyUp;
      v10580 = v20326.unbind("keyup", v20327);
    } else {
      var v20328 = d$$327 == "div";
      var v24696 = !v20328;
      if (v24696) {
        v20328 = d$$327 == "span";
      }
      var v16199 = v20328;
      if (v16199) {
        var v24697 = this.markerClassName;
        var v20329 = b$$530.removeClass(v24697);
        v16199 = v20329.empty();
      }
      v10580 = v16199;
    }
    v10580;
    return;
  }
  function v1597(a$$560, b$$529, c$$430, d$$326, e$$286) {
    var f$$137 = this._dialogInst;
    var v3844 = !f$$137;
    if (v3844) {
      var v10581 = this.uuid;
      this.uuid = v10581 + 1;
      var v3843 = this.uuid;
      var g$$161 = "dp" + v3843;
      var v28008 = '<input type="text" id="' + g$$161;
      var v26638 = v28008 + '" style="position: absolute; top: -100px; width: 0px;"/>';
      var v31021 = $$$3(v26638);
      this._dialogInput = v31021;
      var v26639 = this._dialogInput;
      var v26640 = this._doKeyDown;
      v26639.keydown(v26640);
      var v24698 = $$$3("body");
      var v24699 = this._dialogInput;
      v24698.append(v24699);
      var v20330 = this._dialogInput;
      var v20331 = !1;
      var v31022 = this._newInst(v20330, v20331);
      f$$137 = this._dialogInst = v31022;
      f$$137.settings = {};
      var v16201 = this._dialogInput;
      var v10582 = v16201[0];
      $$$3.data(v10582, PROP_NAME, f$$137);
    }
    var v20332 = f$$137.settings;
    var v20333 = d$$326 || {};
    extendRemove(v20332, v20333);
    var v20334;
    var v26641 = b$$529;
    if (v26641) {
      var v28009 = b$$529.constructor;
      v26641 = v28009 == Date;
    }
    var v24700 = v26641;
    if (v24700) {
      v20334 = this._formatDate(f$$137, b$$529);
    } else {
      v20334 = b$$529;
    }
    b$$529 = v20334;
    var v16202 = this._dialogInput;
    v16202.val(b$$529);
    var v10583;
    if (e$$286) {
      var v16203;
      var v20337 = e$$286.length;
      if (v20337) {
        v16203 = e$$286;
      } else {
        var v20335 = e$$286.pageX;
        var v20336 = e$$286.pageY;
        v16203 = [v20335, v20336];
      }
      v10583 = v16203;
    } else {
      v10583 = null;
    }
    this._pos = v10583;
    var v10584 = this._pos;
    var v3851 = !v10584;
    if (v3851) {
      var v3845 = document.documentElement;
      var h$$132 = v3845.clientWidth;
      var v3846 = document.documentElement;
      var i$$188 = v3846.clientHeight;
      var v10585 = document.documentElement;
      var v3847 = v10585.scrollLeft;
      var v10587 = !v3847;
      if (v10587) {
        var v10586 = document.body;
        v3847 = v10586.scrollLeft;
      }
      var j$$96 = v3847;
      var v10588 = document.documentElement;
      var v3848 = v10588.scrollTop;
      var v10590 = !v3848;
      if (v10590) {
        var v10589 = document.body;
        v3848 = v10589.scrollTop;
      }
      var k$$65 = v3848;
      var v16204 = h$$132 / 2;
      var v10591 = v16204 - 100;
      var v3849 = v10591 + j$$96;
      var v16205 = i$$188 / 2;
      var v10592 = v16205 - 150;
      var v3850 = v10592 + k$$65;
      this._pos = [v3849, v3850];
    }
    var v29496 = this._dialogInput;
    var v30319 = this._pos;
    var v30107 = v30319[0];
    var v29849 = v30107 + 20;
    var v29497 = v29849 + "px";
    var v28900 = v29496.css("left", v29497);
    var v29850 = this._pos;
    var v29498 = v29850[1];
    var v28901 = v29498 + "px";
    v28900.css("top", v28901);
    var v28902 = f$$137.settings;
    v28902.onSelect = c$$430;
    this._inDialog = !0;
    var v26642 = this.dpDiv;
    var v26643 = this._dialogClass;
    v26642.addClass(v26643);
    var v26644 = this._dialogInput;
    var v24701 = v26644[0];
    this._showDatepicker(v24701);
    var v20338 = $$$3.blockUI;
    if (v20338) {
      var v24702 = this.dpDiv;
      $$$3.blockUI(v24702);
    }
    var v20339 = this._dialogInput;
    var v16206 = v20339[0];
    $$$3.data(v16206, PROP_NAME, f$$137);
    return this;
  }
  function v1596(a$$557, b$$528) {
    function v1595(a$$559, c$$429) {
      return this._get(b$$528, c$$429);
    }
    function v1594(a$$558, c$$428, d$$325) {
      var v3852 = b$$528.settings;
      v3852[c$$428] = d$$325;
      return;
    }
    var c$$427 = $$$3(a$$557);
    var v10593 = this.markerClassName;
    var v3853 = c$$427.hasClass(v10593);
    if (v3853) {
      return;
    }
    var v29851 = this.markerClassName;
    var v29499 = c$$427.addClass(v29851);
    var v29500 = b$$528.dpDiv;
    var v28903 = v29499.append(v29500);
    var v28010 = v28903.bind("setData.datepicker", v1594);
    v28010.bind("getData.datepicker", v1595);
    $$$3.data(a$$557, PROP_NAME, b$$528);
    var v26645 = this._getDefaultDate(b$$528);
    var v26646 = !0;
    this._setDate(b$$528, v26645, v26646);
    this._updateDatepicker(b$$528);
    this._updateAlternate(b$$528);
    var v20340 = b$$528.settings;
    var v16207 = v20340.disabled;
    if (v16207) {
      this._disableDatepicker(a$$557);
    }
    var v10594 = b$$528.dpDiv;
    v10594.css("display", "block");
    return;
  }
  function v1593(a$$555) {
    function v1592(a$$556) {
      var b$$527 = 0;
      var c$$426 = 0;
      var d$$324 = 0;
      var v10595 = a$$556.length;
      var v3855 = d$$324 < v10595;
      for (;v3855;) {
        var v16208 = a$$556[d$$324];
        var v10596 = v16208.length;
        var v3854 = v10596 > b$$527;
        if (v3854) {
          var v16209 = a$$556[d$$324];
          b$$527 = v16209.length;
          c$$426 = d$$324;
        }
        d$$324++;
        var v10597 = a$$556.length;
        v3855 = d$$324 < v10597;
      }
      return c$$426;
    }
    var v10598 = this._get(a$$555, "autoSize");
    if (v10598) {
      var v16210 = a$$555.inline;
      v10598 = !v16210;
    }
    var v3859 = v10598;
    if (v3859) {
      var b$$526 = new Date(2009, 11, 20);
      var c$$425 = this._get(a$$555, "dateFormat");
      var v3856 = c$$425.match(/[DM]/);
      if (v3856) {
        var d$$323 = v1592;
        var v24703;
        var v26647 = c$$425.match(/MM/);
        if (v26647) {
          v24703 = "monthNames";
        } else {
          v24703 = "monthNamesShort";
        }
        var v20341 = v24703;
        var v16211 = this._get(a$$555, v20341);
        var v10599 = d$$323(v16211);
        b$$526.setMonth(v10599);
        var v28011;
        var v28904 = c$$425.match(/DD/);
        if (v28904) {
          v28011 = "dayNames";
        } else {
          v28011 = "dayNamesShort";
        }
        var v26648 = v28011;
        var v24704 = this._get(a$$555, v26648);
        var v20342 = d$$323(v24704);
        var v16212 = v20342 + 20;
        var v16213 = b$$526.getDay();
        var v10600 = v16212 - v16213;
        b$$526.setDate(v10600);
      }
      var v3857 = a$$555.input;
      var v10601 = this._formatDate(a$$555, b$$526);
      var v3858 = v10601.length;
      v3857.attr("size", v3858);
    }
    return;
  }
  function v1591(a$$554, b$$525) {
    function v1590() {
      var v10602;
      var v24705 = $$$3.datepicker;
      var v20343 = v24705._datepickerShowing;
      if (v20343) {
        var v26649 = $$$3.datepicker;
        var v24706 = v26649._lastInput;
        var v24707 = a$$554[0];
        v20343 = v24706 == v24707;
      }
      var v16216 = v20343;
      if (v16216) {
        var v16214 = $$$3.datepicker;
        v10602 = v16214._hideDatepicker();
      } else {
        var v16215;
        var v26650 = $$$3.datepicker;
        var v24708 = v26650._datepickerShowing;
        if (v24708) {
          var v28012 = $$$3.datepicker;
          var v26651 = v28012._lastInput;
          var v26652 = a$$554[0];
          v24708 = v26651 != v26652;
        }
        var v20346 = v24708;
        if (v20346) {
          var v24709 = $$$3.datepicker;
          v24709._hideDatepicker();
          var v24710 = $$$3.datepicker;
          var v24711 = a$$554[0];
          v16215 = v24710._showDatepicker(v24711);
        } else {
          var v20344 = $$$3.datepicker;
          var v20345 = a$$554[0];
          v16215 = v20344._showDatepicker(v20345);
        }
        v10602 = v16215;
      }
      v10602;
      return!1;
    }
    var c$$424 = this._get(b$$525, "appendText");
    var d$$322 = this._get(b$$525, "isRTL");
    var v20347 = b$$525.append;
    if (v20347) {
      var v24712 = b$$525.append;
      v24712.remove();
    }
    if (c$$424) {
      var v26653 = b$$525;
      var v30108 = this._appendClass;
      var v29852 = '<span class="' + v30108;
      var v29501 = v29852 + '">';
      var v28905 = v29501 + c$$424;
      var v28013 = v28905 + "</span>";
      var v31023 = $$$3(v28013);
      v26653.append = v31023;
      var v28014;
      if (d$$322) {
        v28014 = "before";
      } else {
        v28014 = "after";
      }
      var v26654 = v28014;
      var v26655 = b$$525.append;
      a$$554[v26654](v26655);
    }
    var v16217 = this._showDatepicker;
    a$$554.unbind("focus", v16217);
    var v10603 = b$$525.trigger;
    if (v10603) {
      var v16218 = b$$525.trigger;
      v16218.remove();
    }
    var e$$285 = this._get(b$$525, "showOn");
    var v10604 = e$$285 == "focus";
    var v16219 = !v10604;
    if (v16219) {
      v10604 = e$$285 == "both";
    }
    var v3860 = v10604;
    if (v3860) {
      var v10605 = this._showDatepicker;
      a$$554.focus(v10605);
    }
    var v10606 = e$$285 == "button";
    var v16220 = !v10606;
    if (v16220) {
      v10606 = e$$285 == "both";
    }
    var v3861 = v10606;
    if (v3861) {
      var f$$136 = this._get(b$$525, "buttonText");
      var g$$160 = this._get(b$$525, "buttonImage");
      var v16221 = b$$525;
      var v24713;
      var v26660 = this._get(b$$525, "buttonImageOnly");
      if (v26660) {
        var v28015 = $$$3("<img/>");
        var v28016 = this._triggerClass;
        var v26656 = v28015.addClass(v28016);
        var v26657 = {src:g$$160, alt:f$$136, title:f$$136};
        v24713 = v26656.attr(v26657);
      } else {
        var v28017 = $$$3('<button type="button"></button>');
        var v28018 = this._triggerClass;
        var v26658 = v28017.addClass(v28018);
        var v28019;
        var v28908 = g$$160 == "";
        if (v28908) {
          v28019 = f$$136;
        } else {
          var v28906 = $$$3("<img/>");
          var v28907 = {src:g$$160, alt:f$$136, title:f$$136};
          v28019 = v28906.attr(v28907);
        }
        var v26659 = v28019;
        v24713 = v26658.html(v26659);
      }
      var v20348 = v24713;
      var v31024 = $$$3(v20348);
      v16221.trigger = v31024;
      var v20349;
      if (d$$322) {
        v20349 = "before";
      } else {
        v20349 = "after";
      }
      var v16222 = v20349;
      var v16223 = b$$525.trigger;
      a$$554[v16222](v16223);
      var v10607 = b$$525.trigger;
      v10607.click(v1590);
    }
    return;
  }
  function v1589(a$$551, b$$524) {
    function v1588(a$$553, c$$423) {
      return this._get(b$$524, c$$423);
    }
    function v1587(a$$552, c$$422, d$$321) {
      var v3862 = b$$524.settings;
      v3862[c$$422] = d$$321;
      return;
    }
    var c$$421 = $$$3(a$$551);
    var v10608 = b$$524;
    var v31025 = $$$3([]);
    v10608.append = v31025;
    var v10609 = b$$524;
    var v31026 = $$$3([]);
    v10609.trigger = v31026;
    var v10610 = this.markerClassName;
    var v3863 = c$$421.hasClass(v10610);
    if (v3863) {
      return;
    }
    this._attachments(c$$421, b$$524);
    var v29853 = this.markerClassName;
    var v29502 = c$$421.addClass(v29853);
    var v29503 = this._doKeyDown;
    var v28909 = v29502.keydown(v29503);
    var v28910 = this._doKeyPress;
    var v28020 = v28909.keypress(v28910);
    var v28021 = this._doKeyUp;
    var v26661 = v28020.keyup(v28021);
    var v24714 = v26661.bind("setData.datepicker", v1587);
    v24714.bind("getData.datepicker", v1588);
    this._autoSize(b$$524);
    $$$3.data(a$$551, PROP_NAME, b$$524);
    var v16224 = b$$524.settings;
    var v10611 = v16224.disabled;
    if (v10611) {
      this._disableDatepicker(a$$551);
    }
    return;
  }
  function v1586(a$$550, b$$523) {
    var v10612 = a$$550[0];
    var v3864 = v10612.id;
    var c$$420 = v3864.replace(/([^A-Za-z0-9_-])/g, "\\\\$1");
    var v10613;
    if (b$$523) {
      var v26662 = this._inlineClass;
      var v24715 = '<div class="' + v26662;
      var v20350 = v24715 + ' ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all"></div>';
      var v16225 = $$$3(v20350);
      v10613 = bindHover(v16225);
    } else {
      v10613 = this.dpDiv;
    }
    var v3865 = v10613;
    return{id:c$$420, input:a$$550, selectedDay:0, selectedMonth:0, selectedYear:0, drawMonth:0, drawYear:0, inline:b$$523, dpDiv:v3865};
  }
  function v1585(target$$27, settings) {
    var inlineSettings = null;
    var attrName;
    var v3867 = this._defaults;
    for (attrName in v3867) {
      var v3866 = "date:" + attrName;
      var attrValue = target$$27.getAttribute(v3866);
      if (attrValue) {
        inlineSettings = inlineSettings || {};
        try {
          var v31027 = eval(attrValue);
          inlineSettings[attrName] = v31027;
        } catch (err) {
          inlineSettings[attrName] = attrValue;
        }
      }
    }
    var v3868 = target$$27.nodeName;
    var nodeName = v3868.toLowerCase();
    var v3869 = nodeName == "div";
    var v10614 = !v3869;
    if (v10614) {
      v3869 = nodeName == "span";
    }
    var inline = v3869;
    var v3870 = target$$27.id;
    var v10615 = !v3870;
    if (v10615) {
      var v20351 = this.uuid;
      this.uuid = v20351 + 1;
      var v16226 = this.uuid;
      target$$27.id = "dp" + v16226;
    }
    var v3871 = $$$3(target$$27);
    var inst = this._newInst(v3871, inline);
    var v10616 = settings || {};
    var v10617 = inlineSettings || {};
    var v31028 = $$$3.extend({}, v10616, v10617);
    inst.settings = v31028;
    var v10618;
    var v16228 = nodeName == "input";
    if (v16228) {
      v10618 = this._connectDatepicker(target$$27, inst);
    } else {
      var v16227 = inline;
      if (v16227) {
        v16227 = this._inlineDatepicker(target$$27, inst);
      }
      v10618 = v16227;
    }
    v10618;
    return;
  }
  function v1584(a$$549) {
    var v10619 = this._defaults;
    var v10620 = a$$549 || {};
    extendRemove(v10619, v10620);
    return this;
  }
  function v1583() {
    return this.dpDiv;
  }
  function v1582() {
    var v3872 = this.debug;
    if (v3872) {
      var v10621 = console.log;
      v10621.apply("", arguments);
    }
    return;
  }
  function Datepicker() {
    this.debug = !1;
    this._curInst = null;
    this._keyEvent = !1;
    this._disabledInputs = [];
    this._datepickerShowing = !1;
    this._inDialog = !1;
    this._mainDivId = "ui-datepicker-div";
    this._inlineClass = "ui-datepicker-inline";
    this._appendClass = "ui-datepicker-append";
    this._triggerClass = "ui-datepicker-trigger";
    this._dialogClass = "ui-datepicker-dialog";
    this._disableClass = "ui-datepicker-disabled";
    this._unselectableClass = "ui-datepicker-unselectable";
    this._currentClass = "ui-datepicker-current-day";
    this._dayOverClass = "ui-datepicker-days-cell-over";
    this.regional = [];
    var v24716 = this.regional;
    var v26663 = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"];
    var v26664 = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
    var v26665 = ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"];
    var v26666 = ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"];
    var v26667 = ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"];
    var v26668 = !1;
    var v26669 = !1;
    v24716[""] = {closeText:"Done", prevText:"Prev", nextText:"Next", currentText:"Today", monthNames:v26663, monthNamesShort:v26664, dayNames:v26665, dayNamesShort:v26666, dayNamesMin:v26667, weekHeader:"Wk", dateFormat:"mm/dd/yy", firstDay:0, isRTL:v26668, showMonthAfterYear:v26669, yearSuffix:""};
    var v20352 = !1;
    var v20353 = !1;
    var v20354 = !1;
    var v20355 = !1;
    var v20356 = !1;
    var v20357 = !1;
    var v20358 = !1;
    var v20359 = !1;
    var v20360 = !1;
    var v20361 = this.iso8601Week;
    var v20362 = !0;
    var v20363 = !1;
    var v20364 = !1;
    var v20365 = !1;
    this._defaults = {showOn:"focus", showAnim:"fadeIn", showOptions:{}, defaultDate:null, appendText:"", buttonText:"...", buttonImage:"", buttonImageOnly:v20352, hideIfNoPrevNext:v20353, navigationAsDateFormat:v20354, gotoCurrent:v20355, changeMonth:v20356, changeYear:v20357, yearRange:"c-10:c+10", showOtherMonths:v20358, selectOtherMonths:v20359, showWeek:v20360, calculateWeek:v20361, shortYearCutoff:"+10", minDate:null, maxDate:null, duration:"fast", beforeShowDay:null, beforeShow:null, onSelect:null, 
    onChangeMonthYear:null, onClose:null, numberOfMonths:1, showCurrentAtPos:0, stepMonths:1, stepBigMonths:12, altField:"", altFormat:"", constrainInput:v20362, showButtonPanel:v20363, autoSize:v20364, disabled:v20365};
    var v16229 = this._defaults;
    var v20366 = this.regional;
    var v16230 = v20366[""];
    $$$3.extend(v16229, v16230);
    var v24717 = this._mainDivId;
    var v20367 = '<div id="' + v24717;
    var v16231 = v20367 + '" class="ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all"></div>';
    var v10622 = $$$3(v16231);
    var v31029 = bindHover(v10622);
    this.dpDiv = v31029;
    return;
  }
  function bindHover(a$$545) {
    function v1581(c$$418) {
      var v10623 = c$$418.target;
      var v3873 = $$$3(v10623);
      var d$$320 = v3873.closest(b$$521);
      var v16232 = $$$3.datepicker;
      var v20368;
      var v24720 = instActive.inline;
      if (v24720) {
        var v24718 = a$$545.parent();
        v20368 = v24718[0];
      } else {
        var v24719 = instActive.input;
        v20368 = v24719[0];
      }
      var v16233 = v20368;
      var v10624 = v16232._isDisabledDatepicker(v16233);
      var v16235 = !v10624;
      if (v16235) {
        var v16234 = d$$320.length;
        v10624 = !v16234;
      }
      var v3874 = v10624;
      if (v3874) {
        return;
      }
      var v24721 = d$$320.parents(".ui-datepicker-calendar");
      var v20369 = v24721.find("a");
      v20369.removeClass("ui-state-hover");
      d$$320.addClass("ui-state-hover");
      var v16236 = d$$320.hasClass("ui-datepicker-prev");
      if (v16236) {
        d$$320.addClass("ui-datepicker-prev-hover");
      }
      var v10625 = d$$320.hasClass("ui-datepicker-next");
      if (v10625) {
        d$$320.addClass("ui-datepicker-next-hover");
      }
      return;
    }
    function v1580(a$$546) {
      var v10626 = a$$546.target;
      var v3875 = $$$3(v10626);
      var c$$417 = v3875.closest(b$$521);
      var v10627 = c$$417.length;
      var v3876 = !v10627;
      if (v3876) {
        return;
      }
      c$$417.removeClass("ui-state-hover ui-datepicker-prev-hover ui-datepicker-next-hover");
      return;
    }
    var b$$521 = "button, .ui-datepicker-prev, .ui-datepicker-next, .ui-datepicker-calendar td a";
    var v3877 = a$$545.bind("mouseout", v1580);
    return v3877.bind("mouseover", v1581);
  }
  function extendRemove(a$$547, b$$522) {
    $$$3.extend(a$$547, b$$522);
    var c$$419;
    for (c$$419 in b$$522) {
      var v16237 = b$$522[c$$419];
      var v10628 = v16237 == null;
      var v16239 = !v10628;
      if (v16239) {
        var v16238 = b$$522[c$$419];
        v10628 = v16238 == undefined$$1;
      }
      var v3878 = v10628;
      if (v3878) {
        a$$547[c$$419] = b$$522[c$$419];
      }
    }
    return a$$547;
  }
  var v3879 = $$$3.ui;
  var v10629 = {version:"1.8.24"};
  var v3880 = {datepicker:v10629};
  $$$3.extend(v3879, v3880);
  var PROP_NAME = "datepicker";
  var v3881 = new Date;
  var dpuuid = v3881.getTime();
  var instActive;
  var v28022 = Datepicker.prototype;
  var v30673 = Math.floor(492.5);
  var v30593 = 718685 + v30673;
  var v30594 = Math.floor(19.7);
  var v30459 = v30593 - v30594;
  var v30460 = Math.floor(4.925);
  var v30320 = v30459 + v30460;
  var v30109 = v30320 * 24;
  var v29854 = v30109 * 60;
  var v29504 = v29854 * 60;
  var v28911 = v29504 * 1E7;
  var v28023 = {markerClassName:"hasDatepicker", maxRows:4, log:v1582, _widgetDatepicker:v1583, setDefaults:v1584, _attachDatepicker:v1585, _newInst:v1586, _connectDatepicker:v1589, _attachments:v1591, _autoSize:v1593, _inlineDatepicker:v1596, _dialogDatepicker:v1597, _destroyDatepicker:v1598, _enableDatepicker:v1601, _disableDatepicker:v1604, _isDisabledDatepicker:v1605, _getInst:v1606, _optionDatepicker:v1607, _changeDatepicker:v1608, _refreshDatepicker:v1609, _setDateDatepicker:v1610, _getDateDatepicker:v1611, 
  _doKeyDown:v1612, _doKeyPress:v1613, _doKeyUp:v1614, _showDatepicker:v1617, _updateDatepicker:v1619, _getBorders:v1620, _checkOffset:v1621, _findPos:v1622, _hideDatepicker:v1624, _tidyDialog:v1625, _checkExternalClick:v1626, _adjustDate:v1627, _gotoToday:v1628, _selectMonthYear:v1629, _selectDay:v1630, _clearDate:v1631, _selectDate:v1632, _updateAlternate:v1634, noWeekends:v1635, iso8601Week:v1636, parseDate:v1640, ATOM:"yy-mm-dd", COOKIE:"D, dd M yy", ISO_8601:"yy-mm-dd", RFC_822:"D, d M y", RFC_850:"DD, dd-M-y", 
  RFC_1036:"D, d M y", RFC_1123:"D, d M yy", RFC_2822:"D, d M yy", RSS:"D, d M y", TICKS:"!", TIMESTAMP:"@", W3C:"yy-mm-dd", _ticksTo1970:v28911, formatDate:v1641, _possibleChars:v1642, _get:v1643, _setDateFromField:v1644, _getDefaultDate:v1645, _determineDate:v1646, _daylightSavingAdjust:v1647, _setDate:v1648, _getDate:v1649, _attachHandlers:v1658, _generateHTML:v1659, _generateMonthYearHeader:v1661, _adjustInstDate:v1662, _restrictMinMax:v1663, _notifyChange:v1664, _getNumberOfMonths:v1665, _getMinMaxDate:v1666, 
  _getDaysInMonth:v1667, _getFirstDayOfMonth:v1668, _canAdjustMonth:v1669, _isInRange:v1670, _getFormatConfig:v1671, _formatDate:v1672};
  $$$3.extend(v28022, v28023);
  var v28024 = $$$3.fn;
  v28024.datepicker = v1674;
  var v26670 = $$$3;
  var v31030 = new Datepicker;
  v26670.datepicker = v31030;
  var v24722 = $$$3.datepicker;
  v24722.initialized = !1;
  var v20370 = $$$3.datepicker;
  var v24723 = new Date;
  var v31031 = v24723.getTime();
  v20370.uuid = v31031;
  var v16240 = $$$3.datepicker;
  v16240.version = "1.8.24";
  var v10630 = "DP_jQuery_" + dpuuid;
  window[v10630] = $$$3;
  return;
}
function v1579(a$$540, b$$509) {
  function v1578() {
    function v1577() {
      var v10631 = a$$540(this);
      var v3882 = v10631.button("widget");
      return v3882[0];
    }
    var v16241 = this.element;
    v16241.removeClass("ui-buttonset");
    var v26671 = this.buttons;
    var v24724 = v26671.map(v1577);
    var v20371 = v24724.removeClass("ui-corner-left ui-corner-right");
    var v16242 = v20371.end();
    v16242.button("destroy");
    var v20372 = a$$540.Widget;
    var v16243 = v20372.prototype;
    var v10632 = v16243.destroy;
    v10632.call(this);
    return;
  }
  function v1576() {
    function v1575() {
      var v10633 = a$$540(this);
      var v3883 = v10633.button("widget");
      return v3883[0];
    }
    var v10634 = this.element;
    var v3884 = v10634.css("direction");
    var b$$520 = v3884 === "rtl";
    var v30728 = this.element;
    var v30769 = this.options;
    var v30729 = v30769.items;
    var v30674 = v30728.find(v30729);
    var v30595 = v30674.filter(":ui-button");
    var v30461 = v30595.button("refresh");
    var v30321 = v30461.end();
    var v30110 = v30321.not(":ui-button");
    var v29855 = v30110.button();
    var v29505 = v29855.end();
    var v28912 = v29505.map(v1575);
    var v28025 = v28912.removeClass("ui-corner-all ui-corner-left ui-corner-right");
    var v26672 = v28025.filter(":first");
    var v28026;
    if (b$$520) {
      v28026 = "ui-corner-right";
    } else {
      v28026 = "ui-corner-left";
    }
    var v26673 = v28026;
    var v24725 = v26672.addClass(v26673);
    var v20373 = v24725.end();
    var v16244 = v20373.filter(":last");
    var v20374;
    if (b$$520) {
      v20374 = "ui-corner-left";
    } else {
      v20374 = "ui-corner-right";
    }
    var v16245 = v20374;
    var v10635 = v16244.addClass(v16245);
    var v3885 = v10635.end();
    var v31032 = v3885.end();
    this.buttons = v31032;
    return;
  }
  function v1574(b$$519, c$$416) {
    var v10636 = b$$519 === "disabled";
    if (v10636) {
      var v16246 = this.buttons;
      v16246.button("option", b$$519, c$$416);
    }
    var v20375 = a$$540.Widget;
    var v16247 = v20375.prototype;
    var v10637 = v16247._setOption;
    v10637.apply(this, arguments);
    return;
  }
  function v1573() {
    this.refresh();
    return;
  }
  function v1572() {
    var v3886 = this.element;
    v3886.addClass("ui-buttonset");
    return;
  }
  function v1571() {
    var v10638 = this.type;
    var v3888 = v10638 === "input";
    if (v3888) {
      var v10639 = this.options;
      var v3887 = v10639.label;
      if (v3887) {
        var v10640 = this.element;
        var v16248 = this.options;
        var v10641 = v16248.label;
        v10640.val(v10641);
      }
      return;
    }
    var v3889 = this.buttonElement;
    var b$$518 = v3889.removeClass(i$$186);
    var v28027 = this.element;
    var v26674 = v28027[0];
    var v24726 = v26674.ownerDocument;
    var v20376 = a$$540("<span></span>", v24726);
    var v16249 = v20376.addClass("ui-button-text");
    var v20377 = this.options;
    var v16250 = v20377.label;
    var v10642 = v16249.html(v16250);
    var v10643 = b$$518.empty();
    var v3890 = v10642.appendTo(v10643);
    var c$$415 = v3890.text();
    var v3891 = this.options;
    var d$$319 = v3891.icons;
    var v3892 = d$$319.primary;
    if (v3892) {
      v3892 = d$$319.secondary;
    }
    var e$$284 = v3892;
    var f$$135 = [];
    var v10644;
    var v20378 = d$$319.primary;
    var v24727 = !v20378;
    if (v24727) {
      v20378 = d$$319.secondary;
    }
    var v16251 = v20378;
    if (v16251) {
      var v28028 = this.options;
      var v26675 = v28028.text;
      if (v26675) {
        var v29506;
        if (e$$284) {
          v29506 = "s";
        } else {
          var v29856;
          var v30111 = d$$319.primary;
          if (v30111) {
            v29856 = "-primary";
          } else {
            v29856 = "-secondary";
          }
          v29506 = v29856;
        }
        var v28913 = v29506;
        var v28029 = "ui-button-text-icon" + v28913;
        f$$135.push(v28029);
      }
      var v26676 = d$$319.primary;
      if (v26676) {
        var v29507 = d$$319.primary;
        var v28914 = "<span class='ui-button-icon-primary ui-icon " + v29507;
        var v28030 = v28914 + "'></span>";
        b$$518.prepend(v28030);
      }
      var v24728 = d$$319.secondary;
      if (v24728) {
        var v28915 = d$$319.secondary;
        var v28031 = "<span class='ui-button-icon-secondary ui-icon " + v28915;
        var v26677 = v28031 + "'></span>";
        b$$518.append(v26677);
      }
      var v24729 = this.options;
      var v20379 = v24729.text;
      var v24730 = !v20379;
      if (v24730) {
        var v28032;
        if (e$$284) {
          v28032 = "ui-button-icons-only";
        } else {
          v28032 = "ui-button-icon-only";
        }
        var v26678 = v28032;
        f$$135.push(v26678);
        var v26679 = this.hasTitle;
        var v28033 = !v26679;
        if (v28033) {
          v26679 = b$$518.attr("title", c$$415);
        }
        v20379 = v26679;
      }
      v10644 = v20379;
    } else {
      v10644 = f$$135.push("ui-button-text-only");
    }
    v10644;
    var v10645 = f$$135.join(" ");
    b$$518.addClass(v10645);
    return;
  }
  function v1570() {
    function v1569() {
      var v3893;
      var v16252 = a$$540(this);
      var v10648 = v16252.is(":checked");
      if (v10648) {
        var v20380 = a$$540(this);
        var v16253 = v20380.button("widget");
        var v10646 = v16253.addClass("ui-state-active");
        v3893 = v10646.attr("aria-pressed", "true");
      } else {
        var v20381 = a$$540(this);
        var v16254 = v20381.button("widget");
        var v10647 = v16254.removeClass("ui-state-active");
        v3893 = v10647.attr("aria-pressed", "false");
      }
      v3893;
      return;
    }
    var v3894 = this.element;
    var b$$517 = v3894.is(":disabled");
    var v20382 = this.options;
    var v16255 = v20382.disabled;
    var v10649 = b$$517 !== v16255;
    if (v10649) {
      this._setOption("disabled", b$$517);
    }
    var v10650;
    var v20383 = this.type;
    var v16258 = v20383 === "radio";
    if (v16258) {
      var v24731 = this.element;
      var v20384 = v24731[0];
      var v16256 = k$$64(v20384);
      v10650 = v16256.each(v1569);
    } else {
      var v20385 = this.type;
      var v16257 = v20385 === "checkbox";
      if (v16257) {
        var v20386;
        var v26680 = this.element;
        var v24734 = v26680.is(":checked");
        if (v24734) {
          var v26681 = this.buttonElement;
          var v24732 = v26681.addClass("ui-state-active");
          v20386 = v24732.attr("aria-pressed", "true");
        } else {
          var v26682 = this.buttonElement;
          var v24733 = v26682.removeClass("ui-state-active");
          v20386 = v24733.attr("aria-pressed", "false");
        }
        v16257 = v20386;
      }
      v10650 = v16257;
    }
    v10650;
    return;
  }
  function v1568(b$$516, c$$414) {
    var v16259 = a$$540.Widget;
    var v10651 = v16259.prototype;
    var v3895 = v10651._setOption;
    v3895.apply(this, arguments);
    var v3897 = b$$516 === "disabled";
    if (v3897) {
      var v3896;
      if (c$$414) {
        var v10652 = this.element;
        var v10653 = !0;
        v3896 = v10652.propAttr("disabled", v10653);
      } else {
        var v10654 = this.element;
        var v10655 = !1;
        v3896 = v10654.propAttr("disabled", v10655);
      }
      v3896;
      return;
    }
    this._resetButton();
    return;
  }
  function v1567() {
    var v20387 = this.element;
    v20387.removeClass("ui-helper-hidden-accessible");
    var v28034 = this.buttonElement;
    var v29857 = g$$159 + " ";
    var v29508 = v29857 + h$$130;
    var v28916 = v29508 + " ";
    var v28035 = v28916 + i$$186;
    var v26683 = v28034.removeClass(v28035);
    var v24735 = v26683.removeAttr("role");
    var v20388 = v24735.removeAttr("aria-pressed");
    var v26684 = this.buttonElement;
    var v24736 = v26684.find(".ui-button-text");
    var v20389 = v24736.html();
    v20388.html(v20389);
    var v16260 = this.hasTitle;
    var v20391 = !v16260;
    if (v20391) {
      var v20390 = this.buttonElement;
      v20390.removeAttr("title");
    }
    var v20392 = a$$540.Widget;
    var v16261 = v20392.prototype;
    var v10656 = v16261.destroy;
    v10656.call(this);
    return;
  }
  function v1566() {
    return this.buttonElement;
  }
  function v1565() {
    var v3898;
    var v16262 = this.element;
    var v10658 = v16262.is(":checkbox");
    if (v10658) {
      v3898 = this.type = "checkbox";
    } else {
      var v10657;
      var v20393 = this.element;
      var v16264 = v20393.is(":radio");
      if (v16264) {
        v10657 = this.type = "radio";
      } else {
        var v16263;
        var v24737 = this.element;
        var v20394 = v24737.is("input");
        if (v20394) {
          v16263 = this.type = "input";
        } else {
          v16263 = this.type = "button";
        }
        v10657 = v16263;
      }
      v3898 = v10657;
    }
    v3898;
    var v16265 = this.type;
    var v10659 = v16265 === "checkbox";
    var v16267 = !v10659;
    if (v16267) {
      var v16266 = this.type;
      v10659 = v16266 === "radio";
    }
    var v3902 = v10659;
    if (v3902) {
      var v10660 = this.element;
      var v3899 = v10660.parents();
      var a$$544 = v3899.filter(":last");
      var v16268 = this.element;
      var v10661 = v16268.attr("id");
      var v3900 = "label[for='" + v10661;
      var b$$515 = v3900 + "']";
      var v31033 = a$$544.find(b$$515);
      this.buttonElement = v31033;
      var v20395 = this.buttonElement;
      var v16269 = v20395.length;
      var v20396 = !v16269;
      if (v20396) {
        var v26685;
        var v28037 = a$$544.length;
        if (v28037) {
          v26685 = a$$544.siblings();
        } else {
          var v28036 = this.element;
          v26685 = v28036.siblings();
        }
        a$$544 = v26685;
        var v31034 = a$$544.filter(b$$515);
        this.buttonElement = v31034;
        var v26686 = this.buttonElement;
        var v24738 = v26686.length;
        var v26687 = !v24738;
        if (v26687) {
          var v31035 = a$$544.find(b$$515);
          this.buttonElement = v31035;
        }
      }
      var v10662 = this.element;
      v10662.addClass("ui-helper-hidden-accessible");
      var v3901 = this.element;
      var c$$413 = v3901.is(":checked");
      if (c$$413) {
        var v16270 = this.buttonElement;
        v16270.addClass("ui-state-active");
      }
      var v10663 = this.buttonElement;
      v10663.attr("aria-pressed", c$$413);
    } else {
      this.buttonElement = this.element;
    }
    return;
  }
  function v1564() {
    function v1563(b$$514) {
      var v10664 = b$$514.keyCode;
      var v20397 = a$$540.ui;
      var v16271 = v20397.keyCode;
      var v10665 = v16271.SPACE;
      var v3903 = v10664 === v10665;
      if (v3903) {
        var v10666 = a$$540(this);
        v10666.click();
      }
      return;
    }
    function v1562() {
      var v3904 = a$$540(this);
      v3904.removeClass("ui-state-active");
      return;
    }
    function v1561(b$$513) {
      var v3905 = h$$131.disabled;
      if (v3905) {
        return!1;
      }
      var v16272 = b$$513.keyCode;
      var v24739 = a$$540.ui;
      var v20398 = v24739.keyCode;
      var v16273 = v20398.SPACE;
      var v10667 = v16272 == v16273;
      var v16276 = !v10667;
      if (v16276) {
        var v16274 = b$$513.keyCode;
        var v24740 = a$$540.ui;
        var v20399 = v24740.keyCode;
        var v16275 = v20399.ENTER;
        v10667 = v16274 == v16275;
      }
      var v3906 = v10667;
      if (v3906) {
        var v10668 = a$$540(this);
        v10668.addClass("ui-state-active");
      }
      return;
    }
    function v1560() {
      var v3907 = h$$131.disabled;
      if (v3907) {
        return!1;
      }
      var v3908 = a$$540(this);
      v3908.removeClass("ui-state-active");
      return;
    }
    function v1559() {
      function v1558() {
        c$$410 = null;
        return;
      }
      var v3909 = h$$131.disabled;
      if (v3909) {
        return!1;
      }
      var v16277 = a$$540(this);
      v16277.addClass("ui-state-active");
      c$$410 = this;
      var v10669 = a$$540(document);
      v10669.one("mouseup", v1558);
      return;
    }
    function v1557() {
      function v1556() {
        var v10670 = a$$540(this);
        var v3910 = v10670.button("widget");
        return v3910[0];
      }
      var v10671 = h$$131.disabled;
      var v16278 = !v10671;
      if (v16278) {
        v10671 = f$$134;
      }
      var v3911 = v10671;
      if (v3911) {
        return!1;
      }
      var v10672 = a$$540(this);
      v10672.addClass("ui-state-active");
      var v10673 = b$$512.buttonElement;
      v10673.attr("aria-pressed", "true");
      var v3912 = b$$512.element;
      var c$$412 = v3912[0];
      var v20400 = k$$64(c$$412);
      var v16279 = v20400.not(c$$412);
      var v10674 = v16279.map(v1556);
      var v3913 = v10674.removeClass("ui-state-active");
      v3913.attr("aria-pressed", "false");
      return;
    }
    function v1555() {
      var v10675 = h$$131.disabled;
      var v16280 = !v10675;
      if (v16280) {
        v10675 = f$$134;
      }
      var v3914 = v10675;
      if (v3914) {
        return!1;
      }
      var v10676 = a$$540(this);
      v10676.toggleClass("ui-state-active");
      var v10677 = b$$512.buttonElement;
      var v20401 = b$$512.element;
      var v16281 = v20401[0];
      var v10678 = v16281.checked;
      v10677.attr("aria-pressed", v10678);
      return;
    }
    function v1554(a$$543) {
      var v3915 = h$$131.disabled;
      if (v3915) {
        return;
      }
      var v16282 = a$$543.pageX;
      var v10679 = d$$317 !== v16282;
      var v16284 = !v10679;
      if (v16284) {
        var v16283 = a$$543.pageY;
        v10679 = e$$282 !== v16283;
      }
      var v3916 = v10679;
      if (v3916) {
        f$$134 = !0;
      }
      return;
    }
    function v1553(a$$542) {
      var v3917 = h$$131.disabled;
      if (v3917) {
        return;
      }
      f$$134 = !1;
      d$$317 = a$$542.pageX;
      e$$282 = a$$542.pageY;
      return;
    }
    function v1552() {
      if (f$$134) {
        return;
      }
      b$$512.refresh();
      return;
    }
    function v1551() {
      var v3918 = b$$512.buttonElement;
      v3918.removeClass(m$$43);
      return;
    }
    function v1550() {
      var v3919 = b$$512.buttonElement;
      v3919.addClass(m$$43);
      return;
    }
    function v1549(a$$541) {
      var v3920 = h$$131.disabled;
      if (v3920) {
        a$$541.preventDefault();
        a$$541.stopImmediatePropagation();
      }
      return;
    }
    function v1548() {
      var v3921 = h$$131.disabled;
      if (v3921) {
        return;
      }
      var v3922 = a$$540(this);
      v3922.removeClass(l$$72);
      return;
    }
    function v1547() {
      var v3923 = h$$131.disabled;
      if (v3923) {
        return;
      }
      var v10680 = a$$540(this);
      v10680.addClass("ui-state-hover");
      var v10681 = this === c$$410;
      if (v10681) {
        var v16285 = a$$540(this);
        v16285.addClass("ui-state-active");
      }
      return;
    }
    var v26688 = this.element;
    var v24741 = v26688.closest("form");
    var v20402 = v24741.unbind("reset.button");
    v20402.bind("reset.button", j$$95);
    var v20403;
    var v28917 = this.options;
    var v28038 = v28917.disabled;
    var v26689 = typeof v28038;
    var v24745 = v26689 != "boolean";
    if (v24745) {
      var v24742 = this.options;
      var v28918 = this.element;
      var v28039 = v28918.propAttr("disabled");
      var v26690 = !v28039;
      v20403 = v24742.disabled = !v26690;
    } else {
      var v24743 = this.element;
      var v26691 = this.options;
      var v24744 = v26691.disabled;
      v20403 = v24743.propAttr("disabled", v24744);
    }
    v20403;
    this._determineButtonType();
    var v20404 = this.buttonElement;
    var v16286 = v20404.attr("title");
    var v10682 = !v16286;
    this.hasTitle = !v10682;
    var b$$512 = this;
    var h$$131 = this.options;
    var v10683 = this.type;
    var v3924 = v10683 === "checkbox";
    var v10685 = !v3924;
    if (v10685) {
      var v10684 = this.type;
      v3924 = v10684 === "radio";
    }
    var i$$187 = v3924;
    var v10686;
    if (i$$187) {
      v10686 = "";
    } else {
      v10686 = " ui-state-active";
    }
    var v3925 = v10686;
    var l$$72 = "ui-state-hover" + v3925;
    var m$$43 = "ui-state-focus";
    var v28919 = h$$131.label;
    var v28040 = v28919 === null;
    if (v28040) {
      var v28920 = h$$131;
      var v29509 = this.buttonElement;
      var v31036 = v29509.html();
      v28920.label = v31036;
    }
    var v30112 = this.buttonElement;
    var v29858 = v30112.addClass(g$$159);
    var v29510 = v29858.attr("role", "button");
    var v28921 = v29510.bind("mouseenter.button", v1547);
    var v28041 = v28921.bind("mouseleave.button", v1548);
    v28041.bind("click.button", v1549);
    var v28042 = this.element;
    var v26692 = v28042.bind("focus.button", v1550);
    v26692.bind("blur.button", v1551);
    if (i$$187) {
      var v28043 = this.element;
      v28043.bind("change.button", v1552);
      var v28922 = this.buttonElement;
      var v28044 = v28922.bind("mousedown.button", v1553);
      v28044.bind("mouseup.button", v1554);
    }
    var v20405;
    var v26693 = this.type;
    var v24748 = v26693 === "checkbox";
    if (v24748) {
      var v24746 = this.buttonElement;
      v20405 = v24746.bind("click.button", v1555);
    } else {
      var v24747;
      var v28045 = this.type;
      var v26695 = v28045 === "radio";
      if (v26695) {
        var v26694 = this.buttonElement;
        v24747 = v26694.bind("click.button", v1557);
      } else {
        var v29859 = this.buttonElement;
        var v29511 = v29859.bind("mousedown.button", v1559);
        var v28923 = v29511.bind("mouseup.button", v1560);
        var v28046 = v28923.bind("keydown.button", v1561);
        v28046.bind("keyup.button", v1562);
        var v28924 = this.buttonElement;
        var v28047 = v28924.is("a");
        if (v28047) {
          var v28925 = this.buttonElement;
          v28047 = v28925.keyup(v1563);
        }
        v24747 = v28047;
      }
      v20405 = v24747;
    }
    v20405;
    var v16287 = h$$131.disabled;
    this._setOption("disabled", v16287);
    this._resetButton();
    return;
  }
  function k$$64(b$$511) {
    function v1545() {
      var v3926 = this.form;
      return!v3926;
    }
    var c$$411 = b$$511.name;
    var d$$318 = b$$511.form;
    var e$$283 = a$$540([]);
    if (c$$411) {
      var v16288;
      if (d$$318) {
        var v20406 = a$$540(d$$318);
        var v24749 = "[name='" + c$$411;
        var v20407 = v24749 + "']";
        v16288 = e$$283 = v20406.find(v20407);
      } else {
        var v26696 = "[name='" + c$$411;
        var v24750 = v26696 + "']";
        var v24751 = b$$511.ownerDocument;
        var v20408 = a$$540(v24750, v24751);
        v16288 = e$$283 = v20408.filter(v1545);
      }
      v16288;
    }
    return e$$283;
  }
  function j$$95() {
    function v1546() {
      b$$510.button("refresh");
      return;
    }
    var v3927 = a$$540(this);
    var b$$510 = v3927.find(":ui-button");
    setTimeout(v1546, 1);
    return;
  }
  var c$$410;
  var d$$317;
  var e$$282;
  var f$$134;
  var g$$159 = "ui-button ui-widget ui-state-default ui-corner-all";
  var h$$130 = "ui-state-hover ui-state-active ";
  var i$$186 = "ui-button-icons-only ui-button-icon-only ui-button-text-icons ui-button-text-icon-primary ui-button-text-icon-secondary ui-button-text-only";
  var v20409 = !0;
  var v20410 = {primary:null, secondary:null};
  var v16289 = {disabled:null, text:v20409, label:null, icons:v20410};
  var v10687 = {options:v16289, _create:v1564, _determineButtonType:v1565, widget:v1566, destroy:v1567, _setOption:v1568, refresh:v1570, _resetButton:v1571};
  a$$540.widget("ui.button", v10687);
  var v16290 = {items:":button, :submit, :reset, :checkbox, :radio, a, :data(button)"};
  var v10688 = {options:v16290, _create:v1572, _init:v1573, _setOption:v1574, refresh:v1576, destroy:v1578};
  a$$540.widget("ui.buttonset", v10688);
  return;
}
function v1544(a$$534) {
  function v1543(a$$539) {
    var v10689 = this.active;
    var v3928 = {item:v10689};
    this._trigger("selected", a$$539, v3928);
    return;
  }
  function v1542() {
    var v10690 = this.element;
    var v3929 = v10690.height();
    var v10691 = this.element;
    var v16291;
    var v24752 = a$$534.fn;
    var v20411 = v24752.prop;
    if (v20411) {
      v16291 = "prop";
    } else {
      v16291 = "attr";
    }
    var v10692 = v16291;
    var v3930 = v10691[v10692]("scrollHeight");
    return v3929 < v3930;
  }
  function v1541(b$$507) {
    function v1540() {
      var v24753 = a$$534(this);
      var v20412 = v24753.offset();
      var v16292 = v20412.top;
      var v10693 = v16292 - c$$409;
      var v3931 = v10693 + d$$316;
      var v10694 = a$$534(this);
      var v3932 = v10694.height();
      var b$$508 = v3931 - v3932;
      var v3933 = b$$508 < 10;
      if (v3933) {
        v3933 = b$$508 > -10;
      }
      return v3933;
    }
    var v3940 = this.hasScroll();
    if (v3940) {
      var v16293 = this.active;
      var v10695 = !v16293;
      var v16294 = !v10695;
      if (v16294) {
        v10695 = this.first();
      }
      var v3935 = v10695;
      if (v3935) {
        var v10696 = this.element;
        var v3934 = v10696.children(".ui-menu-item:last");
        this.activate(b$$507, v3934);
        return;
      }
      var v10697 = this.active;
      var v3936 = v10697.offset();
      var c$$409 = v3936.top;
      var v3937 = this.element;
      var d$$316 = v3937.height();
      var v10698 = this.element;
      var v3938 = v10698.children(".ui-menu-item");
      var e$$281 = v3938.filter(v1540);
      var v10699 = e$$281.length;
      var v16296 = !v10699;
      if (v16296) {
        var v16295 = this.element;
        e$$281 = v16295.children(".ui-menu-item:first");
      }
      this.activate(b$$507, e$$281);
    } else {
      var v16297 = this.element;
      var v10700 = v16297.children(".ui-menu-item");
      var v16298;
      var v26697 = this.active;
      var v24754 = !v26697;
      var v26698 = !v24754;
      if (v26698) {
        v24754 = this.first();
      }
      var v20413 = v24754;
      if (v20413) {
        v16298 = ":last";
      } else {
        v16298 = ":first";
      }
      var v10701 = v16298;
      var v3939 = v10700.filter(v10701);
      this.activate(b$$507, v3939);
    }
    return;
  }
  function v1539(b$$505) {
    function v1538() {
      var v24755 = a$$534(this);
      var v20414 = v24755.offset();
      var v16299 = v20414.top;
      var v10702 = v16299 - c$$408;
      var v3941 = v10702 - d$$315;
      var v10703 = a$$534(this);
      var v3942 = v10703.height();
      var b$$506 = v3941 + v3942;
      var v3943 = b$$506 < 10;
      if (v3943) {
        v3943 = b$$506 > -10;
      }
      return v3943;
    }
    var v3950 = this.hasScroll();
    if (v3950) {
      var v16300 = this.active;
      var v10704 = !v16300;
      var v16301 = !v10704;
      if (v16301) {
        v10704 = this.last();
      }
      var v3945 = v10704;
      if (v3945) {
        var v10705 = this.element;
        var v3944 = v10705.children(".ui-menu-item:first");
        this.activate(b$$505, v3944);
        return;
      }
      var v10706 = this.active;
      var v3946 = v10706.offset();
      var c$$408 = v3946.top;
      var v3947 = this.element;
      var d$$315 = v3947.height();
      var v10707 = this.element;
      var v3948 = v10707.children(".ui-menu-item");
      var e$$280 = v3948.filter(v1538);
      var v10708 = e$$280.length;
      var v16303 = !v10708;
      if (v16303) {
        var v16302 = this.element;
        e$$280 = v16302.children(".ui-menu-item:last");
      }
      this.activate(b$$505, e$$280);
    } else {
      var v16304 = this.element;
      var v10709 = v16304.children(".ui-menu-item");
      var v16305;
      var v26699 = this.active;
      var v24756 = !v26699;
      var v26700 = !v24756;
      if (v26700) {
        v24756 = this.last();
      }
      var v20415 = v24756;
      if (v20415) {
        v16305 = ":first";
      } else {
        v16305 = ":last";
      }
      var v10710 = v16305;
      var v3949 = v10709.filter(v10710);
      this.activate(b$$505, v3949);
    }
    return;
  }
  function v1537(a$$538, b$$504, c$$407) {
    var v10711 = this.active;
    var v3952 = !v10711;
    if (v3952) {
      var v10712 = this.element;
      var v3951 = v10712.children(b$$504);
      this.activate(c$$407, v3951);
      return;
    }
    var v10713 = this.active;
    var v10714 = a$$538 + "All";
    var v3953 = v10713[v10714](".ui-menu-item");
    var d$$314 = v3953.eq(0);
    var v3954;
    var v10716 = d$$314.length;
    if (v10716) {
      v3954 = this.activate(c$$407, d$$314);
    } else {
      var v16306 = this.element;
      var v10715 = v16306.children(b$$504);
      v3954 = this.activate(c$$407, v10715);
    }
    v3954;
    return;
  }
  function v1536() {
    var v3955 = this.active;
    if (v3955) {
      var v20416 = this.active;
      var v16307 = v20416.nextAll(".ui-menu-item");
      var v10717 = v16307.length;
      v3955 = !v10717;
    }
    return v3955;
  }
  function v1535() {
    var v3956 = this.active;
    if (v3956) {
      var v20417 = this.active;
      var v16308 = v20417.prevAll(".ui-menu-item");
      var v10718 = v16308.length;
      v3956 = !v10718;
    }
    return v3956;
  }
  function v1534(a$$537) {
    this.move("prev", ".ui-menu-item:last", a$$537);
    return;
  }
  function v1533(a$$536) {
    this.move("next", ".ui-menu-item:first", a$$536);
    return;
  }
  function v1532() {
    var v10719 = this.active;
    var v3957 = !v10719;
    if (v3957) {
      return;
    }
    var v24757 = this.active;
    var v20418 = v24757.children("a");
    var v16309 = v20418.removeClass("ui-state-hover");
    v16309.removeAttr("id");
    this._trigger("blur");
    this.active = null;
    return;
  }
  function v1531(a$$535, b$$503) {
    this.deactivate();
    var v3963 = this.hasScroll();
    if (v3963) {
      var v10720 = b$$503.offset();
      var v3958 = v10720.top;
      var v16310 = this.element;
      var v10721 = v16310.offset();
      var v3959 = v10721.top;
      var c$$406 = v3958 - v3959;
      var v3960 = this.element;
      var d$$313 = v3960.scrollTop();
      var v3961 = this.element;
      var e$$279 = v3961.height();
      var v3962;
      var v10725 = c$$406 < 0;
      if (v10725) {
        var v10722 = this.element;
        var v10723 = d$$313 + c$$406;
        v3962 = v10722.scrollTop(v10723);
      } else {
        var v10724 = c$$406 >= e$$279;
        if (v10724) {
          var v16311 = this.element;
          var v24758 = d$$313 + c$$406;
          var v20419 = v24758 - e$$279;
          var v20420 = b$$503.height();
          var v16312 = v20419 + v20420;
          v10724 = v16311.scrollTop(v16312);
        }
        v3962 = v10724;
      }
      v3962;
    }
    var v24759 = b$$503.eq(0);
    var v20421 = v24759.children("a");
    var v16313 = v20421.addClass("ui-state-hover");
    var v10726 = v16313.attr("id", "ui-active-menuitem");
    var v31037 = v10726.end();
    this.active = v31037;
    var v10727 = {item:b$$503};
    this._trigger("focus", a$$535, v10727);
    return;
  }
  function v1530() {
    function v1529() {
      b$$502.deactivate();
      return;
    }
    function v1528(c$$405) {
      var v10728 = a$$534(this);
      var v3964 = v10728.parent();
      b$$502.activate(c$$405, v3964);
      return;
    }
    var b$$502 = this;
    var v16314 = this.element;
    var v10729 = v16314.children("li:not(.ui-menu-item):has(a)");
    var v3965 = v10729.addClass("ui-menu-item");
    var c$$404 = v3965.attr("role", "menuitem");
    var v20422 = c$$404.children("a");
    var v16315 = v20422.addClass("ui-corner-all");
    var v10730 = v16315.attr("tabindex", -1);
    var v3966 = v10730.mouseenter(v1528);
    v3966.mouseleave(v1529);
    return;
  }
  function v1527() {
    function v1526(c$$403) {
      var v24760 = c$$403.target;
      var v20423 = a$$534(v24760);
      var v16316 = v20423.closest(".ui-menu-item a");
      var v10731 = v16316.length;
      var v3967 = !v10731;
      if (v3967) {
        return;
      }
      c$$403.preventDefault();
      b$$501.select(c$$403);
      return;
    }
    var b$$501 = this;
    var v20424 = this.element;
    var v16317 = v20424.addClass("ui-menu ui-widget ui-widget-content ui-corner-all");
    var v16318 = {role:"listbox", "aria-activedescendant":"ui-active-menuitem"};
    var v10732 = v16317.attr(v16318);
    v10732.click(v1526);
    this.refresh();
    return;
  }
  var v3968 = {_create:v1527, refresh:v1530, activate:v1531, deactivate:v1532, next:v1533, previous:v1534, first:v1535, last:v1536, move:v1537, nextPage:v1539, previousPage:v1541, hasScroll:v1542, select:v1543};
  a$$534.widget("ui.menu", v3968);
  return;
}
function v1525(a$$515, b$$485) {
  function v1524(b$$500, c$$402) {
    function v1523(a$$533) {
      var v16319 = a$$533.label;
      var v20425 = !v16319;
      if (v20425) {
        v16319 = a$$533.value;
      }
      var v10733 = v16319;
      var v16320 = !v10733;
      if (v16320) {
        v10733 = a$$533;
      }
      var v3969 = v10733;
      return d$$312.test(v3969);
    }
    var v16321 = a$$515.ui;
    var v10734 = v16321.autocomplete;
    var v3970 = v10734.escapeRegex(c$$402);
    var d$$312 = new RegExp(v3970, "i");
    return a$$515.grep(b$$500, v1523);
  }
  function v1522(a$$532) {
    return a$$532.replace(/[-[\]{}()*+?.,\\^$|#\s]/g, "\\$&");
  }
  function v1521(a$$531, b$$499) {
    var v16322 = this.isMultiLine;
    var v10735 = !v16322;
    var v16324 = !v10735;
    if (v16324) {
      var v20426 = this.menu;
      var v16323 = v20426.element;
      v10735 = v16323.is(":visible");
    }
    var v3971 = v10735;
    if (v3971) {
      this._move(a$$531, b$$499);
      b$$499.preventDefault();
    }
    return;
  }
  function v1520() {
    var v3972 = this.menu;
    return v3972.element;
  }
  function v1519(a$$530, b$$498) {
    var v20427 = this.menu;
    var v16325 = v20427.element;
    var v10736 = v16325.is(":visible");
    var v3973 = !v10736;
    if (v3973) {
      this.search(null, b$$498);
      return;
    }
    var v20428 = this.menu;
    var v16326 = v20428.first();
    if (v16326) {
      v16326 = /^previous/.test(a$$530);
    }
    var v10737 = v16326;
    var v16328 = !v10737;
    if (v16328) {
      var v20429 = this.menu;
      var v16327 = v20429.last();
      if (v16327) {
        v16327 = /^next/.test(a$$530);
      }
      v10737 = v16327;
    }
    var v3974 = v10737;
    if (v3974) {
      var v10738 = this.element;
      var v10739 = this.term;
      v10738.val(v10739);
      var v10740 = this.menu;
      v10740.deactivate();
      return;
    }
    var v3975 = this.menu;
    v3975[a$$530](b$$498);
    return;
  }
  function v1518(b$$497, c$$401) {
    var v16329 = a$$515("<li></li>");
    var v10741 = v16329.data("item.autocomplete", c$$401);
    var v16330 = a$$515("<a></a>");
    var v16331 = c$$401.label;
    var v10742 = v16330.text(v16331);
    var v3976 = v10741.append(v10742);
    return v3976.appendTo(b$$497);
  }
  function v1517(b$$496, c$$399) {
    function v1516(a$$529, c$$400) {
      d$$311._renderItem(b$$496, c$$400);
      return;
    }
    var d$$311 = this;
    a$$515.each(c$$399, v1516);
    return;
  }
  function v1515() {
    var v3977 = this.menu;
    var a$$528 = v3977.element;
    var v20430 = a$$528.width("");
    var v16332 = v20430.outerWidth();
    var v10743 = v16332 + 1;
    var v16333 = this.element;
    var v10744 = v16333.outerWidth();
    var v3978 = Math.max(v10743, v10744);
    a$$528.outerWidth(v3978);
    return;
  }
  function v1514(b$$495) {
    var v16334 = this.menu;
    var v10745 = v16334.element;
    var v3979 = v10745.empty();
    var v16335 = this.element;
    var v10746 = v16335.zIndex();
    var v3980 = v10746 + 1;
    var c$$398 = v3979.zIndex(v3980);
    this._renderMenu(c$$398, b$$495);
    var v28048 = this.menu;
    v28048.deactivate();
    var v26701 = this.menu;
    v26701.refresh();
    c$$398.show();
    this._resizeMenu();
    var v24761 = this.element;
    var v20431 = {of:v24761};
    var v24762 = this.options;
    var v20432 = v24762.position;
    var v16336 = a$$515.extend(v20431, v20432);
    c$$398.position(v16336);
    var v16337 = this.options;
    var v10747 = v16337.autoFocus;
    if (v10747) {
      var v16338 = this.menu;
      var v20433 = a$$515.Event;
      var v16339 = new v20433("mouseover");
      v16338.next(v16339);
    }
    return;
  }
  function v1513(b$$493) {
    function v1512(b$$494) {
      var v3981;
      var v16340 = typeof b$$494;
      var v10749 = v16340 == "string";
      if (v10749) {
        v3981 = {label:b$$494, value:b$$494};
      } else {
        var v20434 = b$$494.label;
        var v24763 = !v20434;
        if (v24763) {
          v20434 = b$$494.value;
        }
        var v16341 = v20434;
        var v20435 = b$$494.value;
        var v24764 = !v20435;
        if (v24764) {
          v20435 = b$$494.label;
        }
        var v16342 = v20435;
        var v10748 = {label:v16341, value:v16342};
        v3981 = a$$515.extend(v10748, b$$494);
      }
      return v3981;
    }
    var v3982;
    var v20436 = b$$493.length;
    if (v20436) {
      var v24765 = b$$493[0];
      v20436 = v24765.label;
    }
    var v16343 = v20436;
    if (v16343) {
      var v20437 = b$$493[0];
      v16343 = v20437.value;
    }
    var v10750 = v16343;
    if (v10750) {
      v3982 = b$$493;
    } else {
      v3982 = a$$515.map(b$$493, v1512);
    }
    return v3982;
  }
  function v1511(a$$527) {
    var v10751 = this.previous;
    var v16344 = this.element;
    var v10752 = v16344.val();
    var v3983 = v10751 !== v10752;
    if (v3983) {
      var v16345 = this.selectedItem;
      var v10753 = {item:v16345};
      this._trigger("change", a$$527, v10753);
    }
    return;
  }
  function v1510(a$$526) {
    var v10754 = this.closing;
    clearTimeout(v10754);
    var v20438 = this.menu;
    var v16346 = v20438.element;
    var v10755 = v16346.is(":visible");
    if (v10755) {
      var v26702 = this.menu;
      var v24766 = v26702.element;
      v24766.hide();
      var v24767 = this.menu;
      v24767.deactivate();
      this._trigger("close", a$$526);
    }
    return;
  }
  function v1509(a$$525) {
    var v3984;
    var v26703 = this.options;
    var v24768 = v26703.disabled;
    var v20439 = !v24768;
    if (v20439) {
      v20439 = a$$525;
    }
    var v16347 = v20439;
    if (v16347) {
      v16347 = a$$525.length;
    }
    var v10756 = v16347;
    if (v10756) {
      a$$525 = this._normalize(a$$525);
      this._suggest(a$$525);
      v3984 = this._trigger("open");
    } else {
      v3984 = this.close();
    }
    v3984;
    return;
  }
  function v1508() {
    function v1507(d$$310) {
      var v16348 = b$$492 === c$$388;
      if (v16348) {
        a$$524.__response(d$$310);
      }
      a$$524.pending--;
      var v10757 = a$$524.pending;
      var v16350 = !v10757;
      if (v16350) {
        var v16349 = a$$524.element;
        v16349.removeClass("ui-autocomplete-loading");
      }
      return;
    }
    var a$$524 = this;
    var b$$492 = c$$388 = c$$388 + 1;
    return v1507;
  }
  function v1506(a$$523) {
    this.pending++;
    var v16351 = this.element;
    v16351.addClass("ui-autocomplete-loading");
    var v10758 = {term:a$$523};
    var v10759 = this._response();
    this.source(v10758, v10759);
    return;
  }
  function v1505(a$$522, b$$491) {
    var v10760;
    var v16353 = a$$522 != null;
    if (v16353) {
      v10760 = a$$522;
    } else {
      var v16352 = this.element;
      v10760 = v16352.val();
    }
    a$$522 = v10760;
    var v10761 = this.element;
    var v31038 = v10761.val();
    this.term = v31038;
    var v10762 = a$$522.length;
    var v16354 = this.options;
    var v10763 = v16354.minLength;
    var v3985 = v10762 < v10763;
    if (v3985) {
      return this.close(b$$491);
    }
    var v3986 = this.closing;
    clearTimeout(v3986);
    var v10764 = this._trigger("search", b$$491);
    var v10765 = !1;
    var v3987 = v10764 === v10765;
    if (v3987) {
      return;
    }
    return this._search(a$$522);
  }
  function v1504() {
    function v1503(c$$397, e$$278) {
      function v1502() {
        e$$278([]);
        return;
      }
      function v1501(a$$521, b$$490) {
        e$$278(a$$521);
        return;
      }
      var v10766 = b$$488.xhr;
      if (v10766) {
        var v16355 = b$$488.xhr;
        v16355.abort();
      }
      var v10767 = b$$488;
      var v16356 = {url:d$$308, data:c$$397, dataType:"json", success:v1501, error:v1502};
      var v31039 = a$$515.ajax(v16356);
      v10767.xhr = v31039;
      return;
    }
    function v1500(b$$489, d$$309) {
      var v16357 = a$$515.ui;
      var v10768 = v16357.autocomplete;
      var v10769 = b$$489.term;
      var v3988 = v10768.filter(c$$396, v10769);
      d$$309(v3988);
      return;
    }
    var b$$488 = this;
    var c$$396;
    var d$$308;
    var v3989;
    var v20440 = this.options;
    var v16358 = v20440.source;
    var v10771 = a$$515.isArray(v16358);
    if (v10771) {
      var v16359 = this.options;
      c$$396 = v16359.source;
      v3989 = this.source = v1500;
    } else {
      var v10770;
      var v26704 = this.options;
      var v24769 = v26704.source;
      var v20441 = typeof v24769;
      var v16361 = v20441 == "string";
      if (v16361) {
        var v20442 = this.options;
        d$$308 = v20442.source;
        v10770 = this.source = v1503;
      } else {
        var v16360 = this.options;
        v10770 = this.source = v16360.source;
      }
      v3989 = v10770;
    }
    v3989;
    return;
  }
  function v1499(b$$487, c$$395) {
    var v26705 = a$$515.Widget;
    var v24770 = v26705.prototype;
    var v20443 = v24770._setOption;
    v20443.apply(this, arguments);
    var v20444 = b$$487 === "source";
    if (v20444) {
      this._initSource();
    }
    var v16362 = b$$487 === "appendTo";
    if (v16362) {
      var v24771 = this.menu;
      var v20445 = v24771.element;
      var v26706 = c$$395 || "body";
      var v28926 = this.element;
      var v28049 = v28926[0];
      var v26707 = v28049.ownerDocument;
      var v24772 = a$$515(v26706, v26707);
      var v20446 = v24772[0];
      v20445.appendTo(v20446);
    }
    var v20447 = b$$487 === "disabled";
    if (v20447) {
      v20447 = c$$395;
    }
    var v16363 = v20447;
    if (v16363) {
      v16363 = this.xhr;
    }
    var v10772 = v16363;
    if (v10772) {
      var v16364 = this.xhr;
      v16364.abort();
    }
    return;
  }
  function v1498() {
    var v28927 = this.element;
    var v28050 = v28927.removeClass("ui-autocomplete-input");
    var v26708 = v28050.removeAttr("autocomplete");
    var v24773 = v26708.removeAttr("role");
    var v20448 = v24773.removeAttr("aria-autocomplete");
    v20448.removeAttr("aria-haspopup");
    var v24774 = this.menu;
    var v20449 = v24774.element;
    v20449.remove();
    var v16365 = a$$515(window);
    var v16366 = this.beforeunloadHandler;
    v16365.unbind("beforeunload", v16366);
    var v20450 = a$$515.Widget;
    var v16367 = v20450.prototype;
    var v10773 = v16367.destroy;
    v10773.call(this);
    return;
  }
  function v1497() {
    function v1496() {
      var v3990 = b$$486.element;
      v3990.removeAttr("autocomplete");
      return;
    }
    function v1495(a$$520, c$$394) {
      var v20451 = b$$486.menu;
      var v16368 = v20451.element;
      var v10774 = v16368.is(":visible");
      if (v10774) {
        var v20452 = b$$486.element;
        var v16369 = v20452.val();
        var v16370 = b$$486.term;
        v10774 = v16369 !== v16370;
      }
      var v3991 = v10774;
      if (v3991) {
        var v10775 = b$$486.element;
        var v10776 = b$$486.term;
        v10775.val(v10776);
      }
      return;
    }
    function v1494(a$$519, d$$307) {
      function v1493() {
        b$$486.previous = f$$133;
        b$$486.selectedItem = e$$277;
        return;
      }
      var v3992 = d$$307.item;
      var e$$277 = v3992.data("item.autocomplete");
      var f$$133 = b$$486.previous;
      var v28051 = b$$486.element;
      var v26709 = v28051[0];
      var v26710 = c$$389.activeElement;
      var v24775 = v26709 !== v26710;
      if (v24775) {
        var v28928 = b$$486.element;
        v28928.focus();
        b$$486.previous = f$$133;
        setTimeout(v1493, 1);
      }
      var v26711 = !1;
      var v28052 = {item:e$$277};
      var v26712 = b$$486._trigger("select", a$$519, v28052);
      var v24776 = v26711 !== v26712;
      if (v24776) {
        var v26713 = b$$486.element;
        var v26714 = e$$277.value;
        v26713.val(v26714);
      }
      var v20453 = b$$486;
      var v24777 = b$$486.element;
      var v31040 = v24777.val();
      v20453.term = v31040;
      b$$486.close(a$$519);
      b$$486.selectedItem = e$$277;
      return;
    }
    function v1492(a$$518, c$$393) {
      var v3993 = c$$393.item;
      var d$$306 = v3993.data("item.autocomplete");
      var v16371 = !1;
      var v20454 = {item:d$$306};
      var v16372 = b$$486._trigger("focus", a$$518, v20454);
      var v10777 = v16371 !== v16372;
      if (v10777) {
        var v20455 = a$$518.originalEvent;
        var v16373 = v20455.type;
        v10777 = /^key/.test(v16373);
      }
      var v3994 = v10777;
      if (v3994) {
        var v10778 = b$$486.element;
        var v10779 = d$$306.value;
        v10778.val(v10779);
      }
      return;
    }
    function v1491(c$$391) {
      function v1490() {
        var v3995 = b$$486.closing;
        clearTimeout(v3995);
        return;
      }
      function v1489() {
        function v1488(c$$392) {
          var v20456 = c$$392.target;
          var v24778 = b$$486.element;
          var v20457 = v24778[0];
          var v16374 = v20456 !== v20457;
          if (v16374) {
            var v20458 = c$$392.target;
            v16374 = v20458 !== d$$305;
          }
          var v10780 = v16374;
          if (v10780) {
            var v20459 = a$$515.ui;
            var v20460 = c$$392.target;
            var v16375 = v20459.contains(d$$305, v20460);
            v10780 = !v16375;
          }
          var v3996 = v10780;
          if (v3996) {
            b$$486.close();
          }
          return;
        }
        var v3997 = a$$515(document);
        v3997.one("mousedown", v1488);
        return;
      }
      var v10781 = b$$486.menu;
      var v3998 = v10781.element;
      var d$$305 = v3998[0];
      var v24779 = c$$391.target;
      var v20461 = a$$515(v24779);
      var v16376 = v20461.closest(".ui-menu-item");
      var v10782 = v16376.length;
      var v16377 = !v10782;
      if (v16377) {
        setTimeout(v1489, 1);
      }
      setTimeout(v1490, 13);
      return;
    }
    function v1487(a$$517) {
      function v1486() {
        b$$486.close(a$$517);
        b$$486._change(a$$517);
        return;
      }
      var v10783 = b$$486.options;
      var v3999 = v10783.disabled;
      if (v3999) {
        return;
      }
      var v10784 = b$$486.searching;
      clearTimeout(v10784);
      var v10785 = b$$486;
      var v31041 = setTimeout(v1486, 150);
      v10785.closing = v31041;
      return;
    }
    function v1485() {
      var v10786 = b$$486.options;
      var v4000 = v10786.disabled;
      if (v4000) {
        return;
      }
      b$$486.selectedItem = null;
      var v10787 = b$$486;
      var v16378 = b$$486.element;
      var v31042 = v16378.val();
      v10787.previous = v31042;
      return;
    }
    function v1484(a$$516) {
      if (d$$304) {
        d$$304 = !1;
        a$$516.preventDefault();
      }
      return;
    }
    function v1483(c$$390) {
      function v1482() {
        var v10788 = b$$486.term;
        var v16379 = b$$486.element;
        var v10789 = v16379.val();
        var v4001 = v10788 != v10789;
        if (v4001) {
          b$$486.selectedItem = null;
          b$$486.search(null, c$$390);
        }
        return;
      }
      var v16380 = b$$486.options;
      var v10790 = v16380.disabled;
      var v16382 = !v10790;
      if (v16382) {
        var v16381 = b$$486.element;
        v10790 = v16381.propAttr("readOnly");
      }
      var v4002 = v10790;
      if (v4002) {
        return;
      }
      d$$304 = !1;
      var v4003 = a$$515.ui;
      var e$$276 = v4003.keyCode;
      var v4007 = c$$390.keyCode;
      switch(v4007) {
        case e$$276.PAGE_UP:
          b$$486._move("previousPage", c$$390);
          break;
        case e$$276.PAGE_DOWN:
          b$$486._move("nextPage", c$$390);
          break;
        case e$$276.UP:
          b$$486._keyEvent("previous", c$$390);
          break;
        case e$$276.DOWN:
          b$$486._keyEvent("next", c$$390);
          break;
        case e$$276.ENTER:
        ;
        case e$$276.NUMPAD_ENTER:
          var v10791 = b$$486.menu;
          var v4004 = v10791.active;
          if (v4004) {
            d$$304 = !0;
            c$$390.preventDefault();
          }
        ;
        case e$$276.TAB:
          var v16383 = b$$486.menu;
          var v10792 = v16383.active;
          var v4005 = !v10792;
          if (v4005) {
            return;
          }
          var v4006 = b$$486.menu;
          v4006.select(c$$390);
          break;
        case e$$276.ESCAPE:
          var v10793 = b$$486.element;
          var v10794 = b$$486.term;
          v10793.val(v10794);
          b$$486.close(c$$390);
          break;
        default:
          var v10795 = b$$486.searching;
          clearTimeout(v10795);
          var v10796 = b$$486;
          var v20462 = b$$486.options;
          var v16384 = v20462.delay;
          var v31043 = setTimeout(v1482, v16384);
          v10796.searching = v31043;
      }
      return;
    }
    var b$$486 = this;
    var v10797 = this.element;
    var v4008 = v10797[0];
    var c$$389 = v4008.ownerDocument;
    var d$$304;
    var v28053 = this.element;
    var v31044 = v28053.is("textarea");
    this.isMultiLine = v31044;
    var v30462 = this.element;
    var v30322 = v30462.addClass("ui-autocomplete-input");
    var v30113 = v30322.attr("autocomplete", "off");
    var v30114 = {role:"textbox", "aria-autocomplete":"list", "aria-haspopup":"true"};
    var v29860 = v30113.attr(v30114);
    var v29512 = v29860.bind("keydown.autocomplete", v1483);
    var v28929 = v29512.bind("keypress.autocomplete", v1484);
    var v28054 = v28929.bind("focus.autocomplete", v1485);
    v28054.bind("blur.autocomplete", v1487);
    this._initSource();
    var v30323 = a$$515("<ul></ul>");
    var v30115 = v30323.addClass("ui-autocomplete");
    var v30675 = this.options;
    var v30596 = v30675.appendTo;
    var v30676 = !v30596;
    if (v30676) {
      v30596 = "body";
    }
    var v30463 = v30596;
    var v30324 = a$$515(v30463, c$$389);
    var v30116 = v30324[0];
    var v29861 = v30115.appendTo(v30116);
    var v29513 = v29861.mousedown(v1491);
    var v29514 = {focus:v1492, selected:v1494, blur:v1495};
    var v28930 = v29513.menu(v29514);
    var v29862 = this.element;
    var v29515 = v29862.zIndex();
    var v28931 = v29515 + 1;
    var v28055 = v28930.zIndex(v28931);
    var v28056 = {top:0, left:0};
    var v26715 = v28055.css(v28056);
    var v24780 = v26715.hide();
    var v31045 = v24780.data("menu");
    this.menu = v31045;
    var v24781 = a$$515.fn;
    var v20463 = v24781.bgiframe;
    if (v20463) {
      var v26716 = this.menu;
      var v24782 = v26716.element;
      v24782.bgiframe();
    }
    b$$486.beforeunloadHandler = v1496;
    var v10798 = a$$515(window);
    var v10799 = b$$486.beforeunloadHandler;
    v10798.bind("beforeunload", v10799);
    return;
  }
  var c$$388 = 0;
  var v20464 = !1;
  var v20465 = {my:"left top", at:"left bottom", collision:"none"};
  var v16385 = {appendTo:"body", autoFocus:v20464, delay:300, minLength:1, position:v20465, source:null};
  var v10800 = {options:v16385, pending:0, _create:v1497, destroy:v1498, _setOption:v1499, _initSource:v1504, search:v1505, _search:v1506, _response:v1508, __response:v1509, close:v1510, _change:v1511, _normalize:v1513, _suggest:v1514, _resizeMenu:v1515, _renderMenu:v1517, _renderItem:v1518, _move:v1519, widget:v1520, _keyEvent:v1521};
  a$$515.widget("ui.autocomplete", v10800);
  var v16386 = a$$515.ui;
  var v10801 = v16386.autocomplete;
  var v10802 = {escapeRegex:v1522, filter:v1524};
  a$$515.extend(v10801, v10802);
  return;
}
function v1481(a$$507, b$$473) {
  function v1480(a$$514) {
    var v16387;
    var v20466 = a$$514.down;
    if (v20466) {
      v16387 = "easeOutBounce";
    } else {
      v16387 = "swing";
    }
    var v10803 = v16387;
    var v16388;
    var v20467 = a$$514.down;
    if (v20467) {
      v16388 = 1E3;
    } else {
      v16388 = 200;
    }
    var v10804 = v16388;
    var v4009 = {easing:v10803, duration:v10804};
    this.slide(a$$514, v4009);
    return;
  }
  function v1479(b$$484, c$$385) {
    function v1478() {
      var v16389 = b$$484.autoHeight;
      var v20469 = !v16389;
      if (v20469) {
        var v20468 = b$$484.toShow;
        v20468.css("height", "");
      }
      var v16390 = b$$484.toShow;
      var v16391 = {width:i$$185, overflow:d$$302};
      v16390.css(v16391);
      b$$484.complete();
      return;
    }
    function v1477(a$$513, c$$387) {
      var v16392 = c$$387.prop;
      var v10805 = v16392 == "height";
      if (v10805) {
        var v16393;
        var v26717 = c$$387.end;
        var v26718 = c$$387.start;
        var v24783 = v26717 - v26718;
        var v20472 = v24783 === 0;
        if (v20472) {
          v16393 = 0;
        } else {
          var v24784 = c$$387.now;
          var v24785 = c$$387.start;
          var v20470 = v24784 - v24785;
          var v24786 = c$$387.end;
          var v24787 = c$$387.start;
          var v20471 = v24786 - v24787;
          v16393 = v20470 / v20471;
        }
        e$$274 = v16393;
      }
      var v20473 = b$$484.toShow;
      var v16394 = v20473[0];
      var v10806 = v16394.style;
      var v10807 = c$$387.prop;
      var v26719 = c$$387.prop;
      var v24788 = f$$132[v26719];
      var v20474 = v24788.value;
      var v16395 = e$$274 * v20474;
      var v24789 = c$$387.prop;
      var v20475 = f$$132[v24789];
      var v16396 = v20475.unit;
      v10806[v10807] = v16395 + v16396;
      return;
    }
    function v1476(c$$386, d$$303) {
      g$$158[d$$303] = "hide";
      var v20476 = b$$484.toShow;
      var v16397 = v20476[0];
      var v10808 = a$$507.css(v16397, d$$303);
      var v4010 = "" + v10808;
      var e$$275 = v4010.match(/^([\d+-.]+)(.*)$/);
      var v4011 = e$$275[1];
      var v10809 = e$$275[2];
      var v16398 = !v10809;
      if (v16398) {
        v10809 = "px";
      }
      var v4012 = v10809;
      f$$132[d$$303] = {value:v4011, unit:v4012};
      return;
    }
    var v4013 = {easing:"swing", duration:300};
    b$$484 = a$$507.extend(v4013, b$$484, c$$385);
    var v16399 = b$$484.toHide;
    var v10810 = v16399.size();
    var v4016 = !v10810;
    if (v4016) {
      var v4014 = b$$484.toShow;
      var v4015 = {height:"show", paddingTop:"show", paddingBottom:"show"};
      v4014.animate(v4015, b$$484);
      return;
    }
    var v16400 = b$$484.toShow;
    var v10811 = v16400.size();
    var v4019 = !v10811;
    if (v4019) {
      var v4017 = b$$484.toHide;
      var v4018 = {height:"hide", paddingTop:"hide", paddingBottom:"hide"};
      v4017.animate(v4018, b$$484);
      return;
    }
    var v4020 = b$$484.toShow;
    var d$$302 = v4020.css("overflow");
    var e$$274 = 0;
    var f$$132 = {};
    var g$$158 = {};
    var h$$129 = ["height", "paddingTop", "paddingBottom"];
    var i$$185;
    var j$$94 = b$$484.toShow;
    var v26720 = j$$94[0];
    var v24790 = v26720.style;
    i$$185 = v24790.width;
    var v29863 = j$$94.parent();
    var v29516 = v29863.width();
    var v29864 = j$$94.css("paddingLeft");
    var v29517 = parseFloat(v29864);
    var v28932 = v29516 - v29517;
    var v29518 = j$$94.css("paddingRight");
    var v28933 = parseFloat(v29518);
    var v28057 = v28932 - v28933;
    var v29519 = j$$94.css("borderLeftWidth");
    var v28934 = parseFloat(v29519);
    var v29520 = !v28934;
    if (v29520) {
      v28934 = 0;
    }
    var v28058 = v28934;
    var v26721 = v28057 - v28058;
    var v28935 = j$$94.css("borderRightWidth");
    var v28059 = parseFloat(v28935);
    var v28936 = !v28059;
    if (v28936) {
      v28059 = 0;
    }
    var v26722 = v28059;
    var v24791 = v26721 - v26722;
    j$$94.width(v24791);
    a$$507.each(h$$129, v1476);
    var v20477 = b$$484.toShow;
    var v20478 = {height:0, overflow:"hidden"};
    var v16401 = v20477.css(v20478);
    v16401.show();
    var v26723 = b$$484.toHide;
    var v24792 = v26723.filter(":hidden");
    var v24793 = b$$484.complete;
    var v20479 = v24792.each(v24793);
    var v16402 = v20479.end();
    var v10812 = v16402.filter(":visible");
    var v16403 = b$$484.duration;
    var v16404 = b$$484.easing;
    var v10813 = {step:v1477, duration:v16403, easing:v16404, complete:v1478};
    v10812.animate(g$$158, v10813);
    return;
  }
  function v1475(a$$512) {
    var v4021;
    if (a$$512) {
      v4021 = 0;
    } else {
      var v16405 = this.running;
      v4021 = this.running = v16405 - 1;
    }
    this.running = v4021;
    var v4022 = this.running;
    if (v4022) {
      return;
    }
    var v24794 = this.options;
    var v20480 = v24794.clearStyle;
    if (v20480) {
      var v26724 = this.toShow;
      var v26725 = this.toHide;
      var v24795 = v26724.add(v26725);
      var v24796 = {height:"", overflow:""};
      v24795.css(v24796);
    }
    var v20481 = this.toHide;
    v20481.removeClass("ui-accordion-content-active");
    var v20482 = this.toHide;
    var v16406 = v20482.length;
    if (v16406) {
      var v26726 = this.toHide;
      var v24797 = v26726.parent();
      var v20483 = v24797[0];
      var v28060 = this.toHide;
      var v26727 = v28060.parent();
      var v24798 = v26727[0];
      v20483.className = v24798.className;
    }
    var v10814 = this.data;
    this._trigger("change", null, v10814);
    return;
  }
  function v1474(b$$483, c$$384, d$$301, e$$273, f$$131) {
    function v1473(a$$511) {
      var v10815 = l$$71 || 700;
      var v4023 = {easing:m$$42, duration:v10815};
      this.slide(a$$511, v4023);
      return;
    }
    function i$$184() {
      var v4024 = !g$$157;
      if (v4024) {
        return;
      }
      var v4025 = g$$157._completed;
      return v4025.apply(g$$157, arguments);
    }
    var g$$157 = this;
    var h$$128 = g$$157.options;
    g$$157.toShow = b$$483;
    g$$157.toHide = c$$384;
    g$$157.data = d$$301;
    var v10816 = g$$157.data;
    g$$157._trigger("changestart", null, v10816);
    var v10817 = g$$157;
    var v16407;
    var v24799 = c$$384.size();
    var v20484 = v24799 === 0;
    if (v20484) {
      v16407 = b$$483.size();
    } else {
      v16407 = c$$384.size();
    }
    v10817.running = v16407;
    var v4027 = h$$128.animated;
    if (v4027) {
      var j$$93 = {};
      var v24800;
      var v28061 = h$$128.collapsible;
      if (v28061) {
        v28061 = e$$273;
      }
      var v26731 = v28061;
      if (v26731) {
        var v26728 = a$$507([]);
        var v28062 = h$$128.autoHeight;
        var v28937 = !v28062;
        if (v28937) {
          v28062 = h$$128.fillSpace;
        }
        var v26729 = v28062;
        v24800 = j$$93 = {toShow:v26728, toHide:c$$384, complete:i$$184, down:f$$131, autoHeight:v26729};
      } else {
        var v28063 = h$$128.autoHeight;
        var v28938 = !v28063;
        if (v28938) {
          v28063 = h$$128.fillSpace;
        }
        var v26730 = v28063;
        v24800 = j$$93 = {toShow:b$$483, toHide:c$$384, complete:i$$184, down:f$$131, autoHeight:v26730};
      }
      v24800;
      var v24801 = h$$128.proxied;
      var v26732 = !v24801;
      if (v26732) {
        h$$128.proxied = h$$128.animated;
      }
      var v20485 = h$$128.proxiedDuration;
      var v24802 = !v20485;
      if (v24802) {
        h$$128.proxiedDuration = h$$128.duration;
      }
      var v16408 = h$$128;
      var v20486;
      var v26733 = h$$128.proxied;
      var v24803 = a$$507.isFunction(v26733);
      if (v24803) {
        v20486 = h$$128.proxied(j$$93);
      } else {
        v20486 = h$$128.proxied;
      }
      v16408.animated = v20486;
      var v10818 = h$$128;
      var v16409;
      var v24804 = h$$128.proxiedDuration;
      var v20487 = a$$507.isFunction(v24804);
      if (v20487) {
        v16409 = h$$128.proxiedDuration(j$$93);
      } else {
        v16409 = h$$128.proxiedDuration;
      }
      v10818.duration = v16409;
      var v10819 = a$$507.ui;
      var v4026 = v10819.accordion;
      var k$$63 = v4026.animations;
      var l$$71 = h$$128.duration;
      var m$$42 = h$$128.animated;
      var v24805 = m$$42;
      if (v24805) {
        var v26734 = k$$63[m$$42];
        v24805 = !v26734;
      }
      var v20488 = v24805;
      if (v20488) {
        var v26735 = a$$507.easing;
        var v24806 = v26735[m$$42];
        v20488 = !v24806;
      }
      var v16410 = v20488;
      if (v16410) {
        m$$42 = "slide";
      }
      var v16411 = k$$63[m$$42];
      var v20489 = !v16411;
      if (v20489) {
        k$$63[m$$42] = v1473;
      }
      k$$63[m$$42](j$$93);
    } else {
      var v10820;
      var v20490 = h$$128.collapsible;
      if (v20490) {
        v20490 = e$$273;
      }
      var v16412 = v20490;
      if (v16412) {
        v10820 = b$$483.toggle();
      } else {
        c$$384.hide();
        v10820 = b$$483.show();
      }
      v10820;
      var v10821 = !0;
      i$$184(v10821);
    }
    var v16413 = c$$384.prev();
    var v16414 = {"aria-expanded":"false", "aria-selected":"false", tabIndex:-1};
    var v10822 = v16413.attr(v16414);
    v10822.blur();
    var v16415 = b$$483.prev();
    var v16416 = {"aria-expanded":"true", "aria-selected":"true", tabIndex:0};
    var v10823 = v16415.attr(v16416);
    v10823.focus();
    return;
  }
  function v1472(b$$482, c$$383) {
    var d$$300 = this.options;
    var v4028 = d$$300.disabled;
    if (v4028) {
      return;
    }
    var v10824 = b$$482.target;
    var v4034 = !v10824;
    if (v4034) {
      var v10825 = d$$300.collapsible;
      var v4029 = !v10825;
      if (v4029) {
        return;
      }
      var v26736 = this.active;
      var v24807 = v26736.removeClass("ui-state-active ui-corner-top");
      var v20491 = v24807.addClass("ui-state-default ui-corner-all");
      var v16417 = v20491.children(".ui-icon");
      var v20492 = d$$300.icons;
      var v16418 = v20492.headerSelected;
      var v10826 = v16417.removeClass(v16418);
      var v16419 = d$$300.icons;
      var v10827 = v16419.header;
      v10826.addClass(v10827);
      var v16420 = this.active;
      var v10828 = v16420.next();
      v10828.addClass("ui-accordion-content-active");
      var v4030 = this.active;
      var e$$272 = v4030.next();
      var v4031 = a$$507([]);
      var v4032 = d$$300.active;
      var v4033 = a$$507([]);
      var f$$130 = {options:d$$300, newHeader:v4031, oldHeader:v4032, newContent:v4033, oldContent:e$$272};
      var v31046 = a$$507([]);
      var g$$156 = this.active = v31046;
      this._toggle(g$$156, e$$272, f$$130);
      return;
    }
    var v10829 = b$$482.currentTarget;
    var v16421 = !v10829;
    if (v16421) {
      v10829 = c$$383;
    }
    var v4035 = v10829;
    var h$$127 = a$$507(v4035);
    var v4036 = h$$127[0];
    var v10830 = this.active;
    var v4037 = v10830[0];
    var i$$183 = v4036 === v4037;
    var v4038;
    var v16422 = d$$300.collapsible;
    if (v16422) {
      v16422 = i$$183;
    }
    var v10832 = v16422;
    if (v10832) {
      v4038 = !1;
    } else {
      var v10831 = this.headers;
      v4038 = v10831.index(h$$127);
    }
    d$$300.active = v4038;
    var v10833 = this.running;
    var v16424 = !v10833;
    if (v16424) {
      var v20493 = d$$300.collapsible;
      var v16423 = !v20493;
      if (v16423) {
        v16423 = i$$183;
      }
      v10833 = v16423;
    }
    var v4039 = v10833;
    if (v4039) {
      return;
    }
    var j$$92 = this.active;
    g$$156 = h$$127.next();
    var v4040 = this.active;
    e$$272 = v4040.next();
    var v10834;
    var v20494 = i$$183;
    if (v20494) {
      v20494 = d$$300.collapsible;
    }
    var v16425 = v20494;
    if (v16425) {
      v10834 = a$$507([]);
    } else {
      v10834 = h$$127;
    }
    var v4041 = v10834;
    var v4042 = this.active;
    var v10835;
    var v20495 = i$$183;
    if (v20495) {
      v20495 = d$$300.collapsible;
    }
    var v16426 = v20495;
    if (v16426) {
      v10835 = a$$507([]);
    } else {
      v10835 = g$$156;
    }
    var v4043 = v10835;
    f$$130 = {options:d$$300, newHeader:v4041, oldHeader:v4042, newContent:v4043, oldContent:e$$272};
    var v10836 = this.headers;
    var v16427 = this.active;
    var v10837 = v16427[0];
    var v4044 = v10836.index(v10837);
    var v10838 = this.headers;
    var v10839 = h$$127[0];
    var v4045 = v10838.index(v10839);
    var k$$62 = v4044 > v4045;
    var v20496;
    if (i$$183) {
      v20496 = a$$507([]);
    } else {
      v20496 = h$$127;
    }
    this.active = v20496;
    this._toggle(g$$156, e$$272, f$$130, i$$183, k$$62);
    var v26737 = j$$92.removeClass("ui-state-active ui-corner-top");
    var v24808 = v26737.addClass("ui-state-default ui-corner-all");
    var v20497 = v24808.children(".ui-icon");
    var v24809 = d$$300.icons;
    var v20498 = v24809.headerSelected;
    var v16428 = v20497.removeClass(v20498);
    var v20499 = d$$300.icons;
    var v16429 = v20499.header;
    v16428.addClass(v16429);
    var v16430 = !i$$183;
    if (v16430) {
      var v28064 = h$$127.removeClass("ui-state-default ui-corner-all");
      var v26738 = v28064.addClass("ui-state-active ui-corner-top");
      var v24810 = v26738.children(".ui-icon");
      var v26739 = d$$300.icons;
      var v24811 = v26739.header;
      var v20500 = v24810.removeClass(v24811);
      var v24812 = d$$300.icons;
      var v20501 = v24812.headerSelected;
      v20500.addClass(v20501);
      var v20502 = h$$127.next();
      v20502.addClass("ui-accordion-content-active");
    }
    return;
  }
  function v1471(b$$481) {
    var v4046;
    if (b$$481) {
      var v10840;
      var v20503 = typeof b$$481;
      var v16435 = v20503 == "number";
      if (v16435) {
        var v16431 = this.headers;
        var v20504 = ":eq(" + b$$481;
        var v16432 = v20504 + ")";
        v10840 = v16431.filter(v16432);
      } else {
        var v16433 = this.headers;
        var v20505 = this.headers;
        var v16434 = v20505.not(b$$481);
        v10840 = v16433.not(v16434);
      }
      v4046 = v10840;
    } else {
      var v10841;
      var v20506 = !1;
      var v16437 = b$$481 === v20506;
      if (v16437) {
        v10841 = a$$507([]);
      } else {
        var v16436 = this.headers;
        v10841 = v16436.filter(":eq(0)");
      }
      v4046 = v10841;
    }
    return v4046;
  }
  function v1470(a$$510) {
    var v4047 = this.options;
    v4047.active = a$$510;
    var v4048 = this._findActive(a$$510);
    var b$$480 = v4048[0];
    var v10842 = {target:b$$480};
    this._clickHandler(v10842, b$$480);
    return this;
  }
  function v1469() {
    function v1468() {
      var v16438 = a$$507(this);
      var v10843 = v16438.height("");
      var v4049 = v10843.height();
      c$$382 = Math.max(c$$382, v4049);
      return;
    }
    function v1467() {
      var v4050 = a$$507(this);
      var v20507 = c$$382;
      var v24813 = a$$507(this);
      var v20508 = v24813.innerHeight();
      var v16439 = v20507 - v20508;
      var v20509 = a$$507(this);
      var v16440 = v20509.height();
      var v10844 = v16439 + v16440;
      var v4051 = Math.max(0, v10844);
      v4050.height(v4051);
      return;
    }
    function v1466() {
      var v10845 = c$$382;
      var v16441 = a$$507(this);
      var v16442 = !0;
      var v10846 = v16441.outerHeight(v16442);
      c$$382 = v10845 - v10846;
      return;
    }
    var b$$479 = this.options;
    var c$$382;
    var v4056 = b$$479.fillSpace;
    if (v4056) {
      var v10847 = a$$507.browser;
      var v4054 = v10847.msie;
      if (v4054) {
        var v10848 = this.element;
        var v4052 = v10848.parent();
        var d$$299 = v4052.css("overflow");
        var v10849 = this.element;
        var v4053 = v10849.parent();
        v4053.css("overflow", "hidden");
      }
      var v24814 = this.element;
      var v20510 = v24814.parent();
      c$$382 = v20510.height();
      var v24815 = a$$507.browser;
      var v20511 = v24815.msie;
      if (v20511) {
        var v26740 = this.element;
        var v24816 = v26740.parent();
        v24816.css("overflow", d$$299);
      }
      var v16443 = this.headers;
      v16443.each(v1466);
      var v20512 = this.headers;
      var v16444 = v20512.next();
      var v10850 = v16444.each(v1467);
      v10850.css("overflow", "auto");
    } else {
      var v4055 = b$$479.autoHeight;
      if (v4055) {
        c$$382 = 0;
        var v24817 = this.headers;
        var v20513 = v24817.next();
        var v16445 = v20513.each(v1468);
        v16445.height(c$$382);
      }
    }
    return this;
  }
  function v1465(b$$478) {
    var v20514 = this.options;
    var v16446 = v20514.disabled;
    var v20515 = !v16446;
    if (v20515) {
      v16446 = b$$478.altKey;
    }
    var v10851 = v16446;
    var v16447 = !v10851;
    if (v16447) {
      v10851 = b$$478.ctrlKey;
    }
    var v4057 = v10851;
    if (v4057) {
      return;
    }
    var v4058 = a$$507.ui;
    var c$$381 = v4058.keyCode;
    var v4059 = this.headers;
    var d$$298 = v4059.length;
    var v4060 = this.headers;
    var v4061 = b$$478.target;
    var e$$271 = v4060.index(v4061);
    var f$$129 = !1;
    var v4066 = b$$478.keyCode;
    switch(v4066) {
      case c$$381.RIGHT:
      ;
      case c$$381.DOWN:
        var v4062 = this.headers;
        var v10852 = e$$271 + 1;
        var v4063 = v10852 % d$$298;
        f$$129 = v4062[v4063];
        break;
      case c$$381.LEFT:
      ;
      case c$$381.UP:
        var v4064 = this.headers;
        var v16448 = e$$271 - 1;
        var v10853 = v16448 + d$$298;
        var v4065 = v10853 % d$$298;
        f$$129 = v4064[v4065];
        break;
      case c$$381.SPACE:
      ;
      case c$$381.ENTER:
        var v16449 = b$$478.target;
        var v10854 = {target:v16449};
        var v10855 = b$$478.target;
        this._clickHandler(v10854, v10855);
        b$$478.preventDefault();
    }
    var v4067;
    if (f$$129) {
      var v26741 = b$$478.target;
      var v24818 = a$$507(v26741);
      v24818.attr("tabIndex", -1);
      var v24819 = a$$507(f$$129);
      v24819.attr("tabIndex", 0);
      f$$129.focus();
      v4067 = !1;
    } else {
      v4067 = !0;
    }
    return v4067;
  }
  function v1464(b$$477, c$$380) {
    var v26742 = a$$507.Widget;
    var v24820 = v26742.prototype;
    var v20516 = v24820._setOption;
    v20516.apply(this, arguments);
    var v20517 = b$$477 == "active";
    if (v20517) {
      this.activate(c$$380);
    }
    var v16450 = b$$477 == "icons";
    if (v16450) {
      this._destroyIcons();
      if (c$$380) {
        this._createIcons();
      }
    }
    var v10856 = b$$477 == "disabled";
    if (v10856) {
      var v20518 = this.headers;
      var v24821 = this.headers;
      var v20519 = v24821.next();
      var v16451 = v20518.add(v20519);
      var v20520;
      if (c$$380) {
        v20520 = "addClass";
      } else {
        v20520 = "removeClass";
      }
      var v16452 = v20520;
      v16451[v16452]("ui-accordion-disabled ui-state-disabled");
    }
    return;
  }
  function v1463() {
    var b$$476 = this.options;
    var v24822 = this.element;
    var v20521 = v24822.removeClass("ui-accordion ui-widget ui-helper-reset");
    v20521.removeAttr("role");
    var v29521 = this.headers;
    var v28939 = v29521.unbind(".accordion");
    var v28065 = v28939.removeClass("ui-accordion-header ui-accordion-disabled ui-helper-reset ui-state-default ui-corner-all ui-state-active ui-state-disabled ui-corner-top");
    var v26743 = v28065.removeAttr("role");
    var v24823 = v26743.removeAttr("aria-expanded");
    var v20522 = v24823.removeAttr("aria-selected");
    v20522.removeAttr("tabIndex");
    var v20523 = this.headers;
    var v16453 = v20523.find("a");
    v16453.removeAttr("tabIndex");
    this._destroyIcons();
    var v20524 = this.headers;
    var v16454 = v20524.next();
    var v10857 = v16454.css("display", "");
    var v4068 = v10857.removeAttr("role");
    var c$$379 = v4068.removeClass("ui-helper-reset ui-widget-content ui-corner-bottom ui-accordion-content ui-accordion-content-active ui-accordion-disabled ui-state-disabled");
    var v16455 = b$$476.autoHeight;
    var v20525 = !v16455;
    if (v20525) {
      v16455 = b$$476.fillHeight;
    }
    var v10858 = v16455;
    if (v10858) {
      c$$379.css("height", "");
    }
    var v20526 = a$$507.Widget;
    var v16456 = v20526.prototype;
    var v10859 = v16456.destroy;
    return v10859.call(this);
  }
  function v1462() {
    var v16457 = this.headers;
    var v10860 = v16457.children(".ui-icon");
    v10860.remove();
    var v10861 = this.element;
    v10861.removeClass("ui-accordion-icons");
    return;
  }
  function v1461() {
    var b$$475 = this.options;
    var v4069 = b$$475.icons;
    if (v4069) {
      var v24824 = a$$507("<span></span>");
      var v28066 = b$$475.icons;
      var v26744 = v28066.header;
      var v24825 = "ui-icon " + v26744;
      var v20527 = v24824.addClass(v24825);
      var v20528 = this.headers;
      v20527.prependTo(v20528);
      var v26745 = this.active;
      var v24826 = v26745.children(".ui-icon");
      var v26746 = b$$475.icons;
      var v24827 = v26746.header;
      var v20529 = v24826.toggleClass(v24827);
      var v24828 = b$$475.icons;
      var v20530 = v24828.headerSelected;
      v20529.toggleClass(v20530);
      var v16458 = this.element;
      v16458.addClass("ui-accordion-icons");
    }
    return;
  }
  function v1460() {
    function v1459(a$$509) {
      var v10862 = b$$474._clickHandler;
      v10862.call(b$$474, a$$509, this);
      a$$509.preventDefault();
      return;
    }
    function v1458(a$$508) {
      return b$$474._keydown(a$$508);
    }
    function v1457() {
      var v4070 = c$$378.disabled;
      if (v4070) {
        return;
      }
      var v4071 = a$$507(this);
      v4071.removeClass("ui-state-focus");
      return;
    }
    function v1456() {
      var v4072 = c$$378.disabled;
      if (v4072) {
        return;
      }
      var v4073 = a$$507(this);
      v4073.addClass("ui-state-focus");
      return;
    }
    function v1455() {
      var v4074 = c$$378.disabled;
      if (v4074) {
        return;
      }
      var v4075 = a$$507(this);
      v4075.removeClass("ui-state-hover");
      return;
    }
    function v1454() {
      var v4076 = c$$378.disabled;
      if (v4076) {
        return;
      }
      var v4077 = a$$507(this);
      v4077.addClass("ui-state-hover");
      return;
    }
    var b$$474 = this;
    var c$$378 = b$$474.options;
    b$$474.running = 0;
    var v26747 = b$$474.element;
    var v24829 = v26747.addClass("ui-accordion ui-widget ui-helper-reset");
    var v20531 = v24829.children("li");
    v20531.addClass("ui-accordion-li-fix");
    var v16459 = b$$474;
    var v29522 = b$$474.element;
    var v29523 = c$$378.header;
    var v28940 = v29522.find(v29523);
    var v28067 = v28940.addClass("ui-accordion-header ui-helper-reset ui-state-default ui-corner-all");
    var v26748 = v28067.bind("mouseenter.accordion", v1454);
    var v24830 = v26748.bind("mouseleave.accordion", v1455);
    var v20532 = v24830.bind("focus.accordion", v1456);
    var v31047 = v20532.bind("blur.accordion", v1457);
    v16459.headers = v31047;
    var v16460 = b$$474.headers;
    var v10863 = v16460.next();
    v10863.addClass("ui-accordion-content ui-helper-reset ui-widget-content ui-corner-bottom");
    var v4081 = c$$378.navigation;
    if (v4081) {
      var v16461 = b$$474.element;
      var v10864 = v16461.find("a");
      var v10865 = c$$378.navigationFilter;
      var v4078 = v10864.filter(v10865);
      var d$$297 = v4078.eq(0);
      var v4080 = d$$297.length;
      if (v4080) {
        var e$$270 = d$$297.closest(".ui-accordion-header");
        var v4079;
        var v10867 = e$$270.length;
        if (v10867) {
          v4079 = b$$474.active = e$$270;
        } else {
          var v10866 = b$$474;
          var v16462 = d$$297.closest(".ui-accordion-content");
          var v31048 = v16462.prev();
          v4079 = v10866.active = v31048;
        }
        v4079;
      }
    }
    var v29865 = b$$474;
    var v30677 = b$$474.active;
    var v30730 = !v30677;
    if (v30730) {
      v30677 = c$$378.active;
    }
    var v30597 = v30677;
    var v30464 = b$$474._findActive(v30597);
    var v30325 = v30464.addClass("ui-state-default ui-state-active");
    var v30117 = v30325.toggleClass("ui-corner-all");
    var v31049 = v30117.toggleClass("ui-corner-top");
    v29865.active = v31049;
    var v30118 = b$$474.active;
    var v29866 = v30118.next();
    v29866.addClass("ui-accordion-content-active");
    b$$474._createIcons();
    b$$474.resize();
    var v28068 = b$$474.element;
    v28068.attr("role", "tablist");
    var v29524 = b$$474.headers;
    var v28941 = v29524.attr("role", "tab");
    var v28069 = v28941.bind("keydown.accordion", v1458);
    var v26749 = v28069.next();
    v26749.attr("role", "tabpanel");
    var v28942 = b$$474.headers;
    var v29525 = b$$474.active;
    var v29867 = !v29525;
    if (v29867) {
      v29525 = "";
    }
    var v28943 = v29525;
    var v28070 = v28942.not(v28943);
    var v28071 = {"aria-expanded":"false", "aria-selected":"false", tabIndex:-1};
    var v26750 = v28070.attr(v28071);
    var v24831 = v26750.next();
    v24831.hide();
    var v20533;
    var v26751 = b$$474.active;
    var v24835 = v26751.length;
    if (v24835) {
      var v24832 = b$$474.active;
      var v24833 = {"aria-expanded":"true", "aria-selected":"true", tabIndex:0};
      v20533 = v24832.attr(v24833);
    } else {
      var v26752 = b$$474.headers;
      var v24834 = v26752.eq(0);
      v20533 = v24834.attr("tabIndex", 0);
    }
    v20533;
    var v20534 = a$$507.browser;
    var v16463 = v20534.safari;
    var v20536 = !v16463;
    if (v20536) {
      var v24836 = b$$474.headers;
      var v20535 = v24836.find("a");
      v20535.attr("tabIndex", -1);
    }
    var v10868 = c$$378.event;
    if (v10868) {
      var v16464 = b$$474.headers;
      var v26753 = c$$378.event;
      var v24837 = v26753.split(" ");
      var v20537 = v24837.join(".accordion ");
      var v16465 = v20537 + ".accordion";
      v16464.bind(v16465, v1459);
    }
    return;
  }
  function v1453() {
    var v10869 = this.href;
    var v4082 = v10869.toLowerCase();
    var v10870 = location.href;
    var v4083 = v10870.toLowerCase();
    return v4082 === v4083;
  }
  var v20538 = !0;
  var v20539 = !1;
  var v20540 = !1;
  var v20541 = !1;
  var v20542 = {header:"ui-icon-triangle-1-e", headerSelected:"ui-icon-triangle-1-s"};
  var v20543 = !1;
  var v16466 = {active:0, animated:"slide", autoHeight:v20538, clearStyle:v20539, collapsible:v20540, event:"click", fillSpace:v20541, header:"> li > :first-child,> :not(li):even", icons:v20542, navigation:v20543, navigationFilter:v1453};
  var v10871 = {options:v16466, _create:v1460, _createIcons:v1461, _destroyIcons:v1462, destroy:v1463, _setOption:v1464, _keydown:v1465, resize:v1469, activate:v1470, _findActive:v1471, _clickHandler:v1472, _toggle:v1474, _completed:v1475};
  a$$507.widget("ui.accordion", v10871);
  var v16467 = a$$507.ui;
  var v10872 = v16467.accordion;
  var v16468 = {slide:v1479, bounceslide:v1480};
  var v10873 = {version:"1.8.24", animations:v16468};
  a$$507.extend(v10872, v10873);
  return;
}
function v1452(a$$506, b$$471) {
  function v1451(b$$472) {
    function v1450() {
      function v1449() {
        h$$126.remove();
        var v16469 = b$$472.callback;
        if (v16469) {
          var v20544 = b$$472.callback;
          var v20545 = c$$377[0];
          v20544.apply(v20545, arguments);
        }
        c$$377.dequeue();
        return;
      }
      var c$$377 = a$$506(this);
      var v10874 = b$$472.options;
      var v4084 = v10874.to;
      var d$$296 = a$$506(v4084);
      var e$$269 = d$$296.offset();
      var v4085 = e$$269.top;
      var v4086 = e$$269.left;
      var v4087 = d$$296.innerHeight();
      var v4088 = d$$296.innerWidth();
      var f$$128 = {top:v4085, left:v4086, height:v4087, width:v4088};
      var g$$155 = c$$377.offset();
      var v20546 = a$$506('<div class="ui-effects-transfer"></div>');
      var v20547 = document.body;
      var v16470 = v20546.appendTo(v20547);
      var v20548 = b$$472.options;
      var v16471 = v20548.className;
      var v10875 = v16470.addClass(v16471);
      var v16472 = g$$155.top;
      var v16473 = g$$155.left;
      var v16474 = c$$377.innerHeight();
      var v16475 = c$$377.innerWidth();
      var v10876 = {top:v16472, left:v16473, height:v16474, width:v16475, position:"absolute"};
      var v4089 = v10875.css(v10876);
      var v4090 = b$$472.duration;
      var v10877 = b$$472.options;
      var v4091 = v10877.easing;
      var h$$126 = v4089.animate(f$$128, v4090, v4091, v1449);
      return;
    }
    return this.queue(v1450);
  }
  var v4092 = a$$506.effects;
  v4092.transfer = v1451;
  return;
}
function v1448(a$$505, b$$469) {
  function v1447(b$$470) {
    function v1446() {
      function v1445() {
        var v24838 = e$$268 == "hide";
        if (v24838) {
          c$$376.hide();
        }
        var v24839 = a$$505.effects;
        v24839.restore(c$$376, d$$295);
        var v20549 = a$$505.effects;
        v20549.removeWrapper(c$$376);
        var v16476 = b$$470.callback;
        if (v16476) {
          var v20550 = b$$470.callback;
          v20550.apply(this, arguments);
        }
        c$$376.dequeue();
        return;
      }
      var c$$376 = a$$505(this);
      var d$$295 = ["position", "top", "bottom", "left", "right"];
      var v4093 = a$$505.effects;
      var v16477 = b$$470.options;
      var v10878 = v16477.mode;
      var v16478 = !v10878;
      if (v16478) {
        v10878 = "show";
      }
      var v4094 = v10878;
      var e$$268 = v4093.setMode(c$$376, v4094);
      var v10879 = b$$470.options;
      var v4095 = v10879.direction;
      var v10880 = !v4095;
      if (v10880) {
        v4095 = "left";
      }
      var f$$127 = v4095;
      var v16479 = a$$505.effects;
      v16479.save(c$$376, d$$295);
      c$$376.show();
      var v16480 = a$$505.effects;
      var v10881 = v16480.createWrapper(c$$376);
      var v10882 = {overflow:"hidden"};
      v10881.css(v10882);
      var v4096;
      var v16481 = f$$127 == "up";
      var v20551 = !v16481;
      if (v20551) {
        v16481 = f$$127 == "down";
      }
      var v10883 = v16481;
      if (v10883) {
        v4096 = "top";
      } else {
        v4096 = "left";
      }
      var g$$154 = v4096;
      var v4097;
      var v16482 = f$$127 == "up";
      var v20552 = !v16482;
      if (v20552) {
        v16482 = f$$127 == "left";
      }
      var v10884 = v16482;
      if (v10884) {
        v4097 = "pos";
      } else {
        v4097 = "neg";
      }
      var h$$125 = v4097;
      var v10885 = b$$470.options;
      var v4098 = v10885.distance;
      var v10887 = !v4098;
      if (v10887) {
        var v10886;
        var v16485 = g$$154 == "top";
        if (v16485) {
          var v16483 = !0;
          v10886 = c$$376.outerHeight(v16483);
        } else {
          var v16484 = !0;
          v10886 = c$$376.outerWidth(v16484);
        }
        v4098 = v10886;
      }
      var i$$182 = v4098;
      var v4099 = e$$268 == "show";
      if (v4099) {
        var v16486;
        var v20554 = h$$125 == "pos";
        if (v20554) {
          var v20553;
          var v24840 = isNaN(i$$182);
          if (v24840) {
            v20553 = "-" + i$$182;
          } else {
            v20553 = -i$$182;
          }
          v16486 = v20553;
        } else {
          v16486 = i$$182;
        }
        var v10888 = v16486;
        c$$376.css(g$$154, v10888);
      }
      var j$$91 = {};
      var v16487;
      var v20557 = e$$268 == "show";
      if (v20557) {
        var v20555;
        var v24841 = h$$125 == "pos";
        if (v24841) {
          v20555 = "+=";
        } else {
          v20555 = "-=";
        }
        v16487 = v20555;
      } else {
        var v20556;
        var v24842 = h$$125 == "pos";
        if (v24842) {
          v20556 = "-=";
        } else {
          v20556 = "+=";
        }
        v16487 = v20556;
      }
      var v10889 = v16487;
      j$$91[g$$154] = v10889 + i$$182;
      var v16488 = !1;
      var v16489 = b$$470.duration;
      var v20558 = b$$470.options;
      var v16490 = v20558.easing;
      var v10890 = {queue:v16488, duration:v16489, easing:v16490, complete:v1445};
      c$$376.animate(j$$91, v10890);
      return;
    }
    return this.queue(v1446);
  }
  var v4100 = a$$505.effects;
  v4100.slide = v1447;
  return;
}
function v1444(a$$504, b$$467) {
  function v1443(b$$468) {
    function v1442() {
      function v1441() {
        c$$375.dequeue();
        return;
      }
      function v1440() {
        var v16491 = a$$504.effects;
        v16491.restore(c$$375, d$$294);
        var v16492 = a$$504.effects;
        v16492.removeWrapper(c$$375);
        var v10891 = b$$468.callback;
        if (v10891) {
          var v16493 = b$$468.callback;
          v16493.apply(this, arguments);
        }
        return;
      }
      var c$$375 = a$$504(this);
      var d$$294 = ["position", "top", "bottom", "left", "right"];
      var v4101 = a$$504.effects;
      var v16494 = b$$468.options;
      var v10892 = v16494.mode;
      var v16495 = !v10892;
      if (v16495) {
        v10892 = "effect";
      }
      var v4102 = v10892;
      var e$$267 = v4101.setMode(c$$375, v4102);
      var v10893 = b$$468.options;
      var v4103 = v10893.direction;
      var v10894 = !v4103;
      if (v10894) {
        v4103 = "left";
      }
      var f$$126 = v4103;
      var v10895 = b$$468.options;
      var v4104 = v10895.distance;
      var v10896 = !v4104;
      if (v10896) {
        v4104 = 20;
      }
      var g$$153 = v4104;
      var v10897 = b$$468.options;
      var v4105 = v10897.times;
      var v10898 = !v4105;
      if (v10898) {
        v4105 = 3;
      }
      var h$$124 = v4105;
      var v10899 = b$$468.duration;
      var v16497 = !v10899;
      if (v16497) {
        var v16496 = b$$468.options;
        v10899 = v16496.duration;
      }
      var v4106 = v10899;
      var v10900 = !v4106;
      if (v10900) {
        v4106 = 140;
      }
      var i$$181 = v4106;
      var v16498 = a$$504.effects;
      v16498.save(c$$375, d$$294);
      c$$375.show();
      var v10901 = a$$504.effects;
      v10901.createWrapper(c$$375);
      var v4107;
      var v16499 = f$$126 == "up";
      var v20559 = !v16499;
      if (v20559) {
        v16499 = f$$126 == "down";
      }
      var v10902 = v16499;
      if (v10902) {
        v4107 = "top";
      } else {
        v4107 = "left";
      }
      var j$$90 = v4107;
      var v4108;
      var v16500 = f$$126 == "up";
      var v20560 = !v16500;
      if (v20560) {
        v16500 = f$$126 == "left";
      }
      var v10903 = v16500;
      if (v10903) {
        v4108 = "pos";
      } else {
        v4108 = "neg";
      }
      var k$$61 = v4108;
      var l$$70 = {};
      var m$$41 = {};
      var n$$90 = {};
      var v24843;
      var v26754 = k$$61 == "pos";
      if (v26754) {
        v24843 = "-=";
      } else {
        v24843 = "+=";
      }
      var v20561 = v24843;
      l$$70[j$$90] = v20561 + g$$153;
      var v24844;
      var v26755 = k$$61 == "pos";
      if (v26755) {
        v24844 = "+=";
      } else {
        v24844 = "-=";
      }
      var v20562 = v24844;
      var v20563 = g$$153 * 2;
      m$$41[j$$90] = v20562 + v20563;
      var v20564;
      var v24845 = k$$61 == "pos";
      if (v24845) {
        v20564 = "-=";
      } else {
        v20564 = "+=";
      }
      var v16501 = v20564;
      var v16502 = g$$153 * 2;
      n$$90[j$$90] = v16501 + v16502;
      var v16503 = b$$468.options;
      var v10904 = v16503.easing;
      c$$375.animate(l$$70, i$$181, v10904);
      var p$$45 = 1;
      var v4111 = p$$45 < h$$124;
      for (;v4111;) {
        var v16504 = b$$468.options;
        var v10905 = v16504.easing;
        var v4109 = c$$375.animate(m$$41, i$$181, v10905);
        var v10906 = b$$468.options;
        var v4110 = v10906.easing;
        v4109.animate(n$$90, i$$181, v4110);
        p$$45++;
        v4111 = p$$45 < h$$124;
      }
      var v24846 = b$$468.options;
      var v20565 = v24846.easing;
      var v16505 = c$$375.animate(m$$41, i$$181, v20565);
      var v16506 = i$$181 / 2;
      var v20566 = b$$468.options;
      var v16507 = v20566.easing;
      v16505.animate(l$$70, v16506, v16507, v1440);
      c$$375.queue("fx", v1441);
      c$$375.dequeue();
      return;
    }
    return this.queue(v1442);
  }
  var v4112 = a$$504.effects;
  v4112.shake = v1443;
  return;
}
function v1439(a$$503, b$$463) {
  function v1438(b$$466) {
    function v1437() {
      function v1436() {
        var v28944 = c$$373.to;
        var v28072 = v28944.opacity;
        var v26756 = v28072 === 0;
        if (v26756) {
          var v28945 = c$$373.from;
          var v28073 = v28945.opacity;
          c$$373.css("opacity", v28073);
        }
        var v26757 = j$$89 == "hide";
        if (v26757) {
          c$$373.hide();
        }
        var v24847 = a$$503.effects;
        var v26758;
        if (k$$60) {
          v26758 = d$$292;
        } else {
          v26758 = e$$266;
        }
        var v24848 = v26758;
        v24847.restore(c$$373, v24848);
        var v20567 = a$$503.effects;
        v20567.removeWrapper(c$$373);
        var v16508 = b$$466.callback;
        if (v16508) {
          var v20568 = b$$466.callback;
          v20568.apply(this, arguments);
        }
        c$$373.dequeue();
        return;
      }
      function v1435() {
        function v1434() {
          if (k$$60) {
            var v10907 = a$$503.effects;
            v10907.restore(c$$374, f$$125);
          }
          return;
        }
        var c$$374 = a$$503(this);
        if (k$$60) {
          var v10908 = a$$503.effects;
          v10908.save(c$$374, f$$125);
        }
        var JSCompiler_object_inline_height_96 = c$$374.height();
        var JSCompiler_object_inline_width_97 = c$$374.width();
        var v26759 = JSCompiler_object_inline_height_96 * JSCompiler_object_inline_y_100;
        var v26760 = JSCompiler_object_inline_width_97 * JSCompiler_object_inline_x_101;
        c$$374.from = {height:v26759, width:v26760};
        var v26761 = JSCompiler_object_inline_height_96 * JSCompiler_object_inline_y_102;
        var v26762 = JSCompiler_object_inline_width_97 * JSCompiler_object_inline_x_103;
        c$$374.to = {height:v26761, width:v26762};
        var v24849 = JSCompiler_object_inline_y_100 != JSCompiler_object_inline_y_102;
        if (v24849) {
          var v28074 = c$$374;
          var v28946 = a$$503.effects;
          var v28947 = c$$374.from;
          var v31050 = v28946.setTransition(c$$374, h$$123, JSCompiler_object_inline_y_100, v28947);
          v28074.from = v31050;
          var v28075 = c$$374;
          var v28948 = a$$503.effects;
          var v28949 = c$$374.to;
          var v31051 = v28948.setTransition(c$$374, h$$123, JSCompiler_object_inline_y_102, v28949);
          v28075.to = v31051;
        }
        var v20569 = JSCompiler_object_inline_x_101 != JSCompiler_object_inline_x_103;
        if (v20569) {
          var v26763 = c$$374;
          var v28076 = a$$503.effects;
          var v28077 = c$$374.from;
          var v31052 = v28076.setTransition(c$$374, i$$180, JSCompiler_object_inline_x_101, v28077);
          v26763.from = v31052;
          var v26764 = c$$374;
          var v28078 = a$$503.effects;
          var v28079 = c$$374.to;
          var v31053 = v28078.setTransition(c$$374, i$$180, JSCompiler_object_inline_x_103, v28079);
          v26764.to = v31053;
        }
        var v16509 = c$$374.from;
        c$$374.css(v16509);
        var v10909 = c$$374.to;
        var v10910 = b$$466.duration;
        var v16510 = b$$466.options;
        var v10911 = v16510.easing;
        c$$374.animate(v10909, v10910, v10911, v1434);
        return;
      }
      var c$$373 = a$$503(this);
      var d$$292 = ["position", "top", "bottom", "left", "right", "width", "height", "overflow", "opacity"];
      var e$$266 = ["position", "top", "bottom", "left", "right", "overflow", "opacity"];
      var f$$125 = ["width", "height", "overflow"];
      var g$$152 = ["fontSize"];
      var h$$123 = ["borderTopWidth", "borderBottomWidth", "paddingTop", "paddingBottom"];
      var i$$180 = ["borderLeftWidth", "borderRightWidth", "paddingLeft", "paddingRight"];
      var v4113 = a$$503.effects;
      var v16511 = b$$466.options;
      var v10912 = v16511.mode;
      var v16512 = !v10912;
      if (v16512) {
        v10912 = "effect";
      }
      var v4114 = v10912;
      var j$$89 = v4113.setMode(c$$373, v4114);
      var v10913 = b$$466.options;
      var v4115 = v10913.restore;
      var v10914 = !v4115;
      if (v10914) {
        v4115 = !1;
      }
      var k$$60 = v4115;
      var v10915 = b$$466.options;
      var v4116 = v10915.scale;
      var v10916 = !v4116;
      if (v10916) {
        v4116 = "both";
      }
      var l$$69 = v4116;
      var v4117 = b$$466.options;
      var m$$40 = v4117.origin;
      var v4118 = c$$373.height();
      var v4119 = c$$373.width();
      var n$$89 = {height:v4118, width:v4119};
      var v16513 = b$$466.options;
      var v10917 = v16513.from;
      var v16514 = !v10917;
      if (v16514) {
        v10917 = n$$89;
      }
      c$$373.from = v10917;
      var v16515 = b$$466.options;
      var v10918 = v16515.to;
      var v16516 = !v10918;
      if (v16516) {
        v10918 = n$$89;
      }
      c$$373.to = v10918;
      if (m$$40) {
        var v4120 = a$$503.effects;
        var p$$44 = v4120.getBaseline(m$$40, n$$89);
        var v20570 = c$$373.from;
        var v26765 = n$$89.height;
        var v28080 = c$$373.from;
        var v26766 = v28080.height;
        var v24850 = v26765 - v26766;
        var v24851 = p$$44.y;
        v20570.top = v24850 * v24851;
        var v20571 = c$$373.from;
        var v26767 = n$$89.width;
        var v28081 = c$$373.from;
        var v26768 = v28081.width;
        var v24852 = v26767 - v26768;
        var v24853 = p$$44.x;
        v20571.left = v24852 * v24853;
        var v16517 = c$$373.to;
        var v24854 = n$$89.height;
        var v26769 = c$$373.to;
        var v24855 = v26769.height;
        var v20572 = v24854 - v24855;
        var v20573 = p$$44.y;
        v16517.top = v20572 * v20573;
        var v10919 = c$$373.to;
        var v20574 = n$$89.width;
        var v24856 = c$$373.to;
        var v20575 = v24856.width;
        var v16518 = v20574 - v20575;
        var v16519 = p$$44.x;
        v10919.left = v16518 * v16519;
      }
      var v10920 = c$$373.from;
      var v4121 = v10920.height;
      var v4122 = n$$89.height;
      var JSCompiler_object_inline_y_100 = v4121 / v4122;
      var v10921 = c$$373.from;
      var v4123 = v10921.width;
      var v4124 = n$$89.width;
      var JSCompiler_object_inline_x_101 = v4123 / v4124;
      var v10922 = c$$373.to;
      var v4125 = v10922.height;
      var v4126 = n$$89.height;
      var JSCompiler_object_inline_y_102 = v4125 / v4126;
      var v10923 = c$$373.to;
      var v4127 = v10923.width;
      var v4128 = n$$89.width;
      var JSCompiler_object_inline_x_103 = v4127 / v4128;
      var v10924 = l$$69 == "box";
      var v16520 = !v10924;
      if (v16520) {
        v10924 = l$$69 == "both";
      }
      var v4129 = v10924;
      if (v4129) {
        var v10925 = JSCompiler_object_inline_y_100 != JSCompiler_object_inline_y_102;
        if (v10925) {
          d$$292 = d$$292.concat(h$$123);
          var v24857 = c$$373;
          var v26770 = a$$503.effects;
          var v26771 = c$$373.from;
          var v31054 = v26770.setTransition(c$$373, h$$123, JSCompiler_object_inline_y_100, v26771);
          v24857.from = v31054;
          var v20576 = c$$373;
          var v24858 = a$$503.effects;
          var v24859 = c$$373.to;
          var v31055 = v24858.setTransition(c$$373, h$$123, JSCompiler_object_inline_y_102, v24859);
          v20576.to = v31055;
        }
        var v10926 = JSCompiler_object_inline_x_101 != JSCompiler_object_inline_x_103;
        if (v10926) {
          d$$292 = d$$292.concat(i$$180);
          var v24860 = c$$373;
          var v26772 = a$$503.effects;
          var v26773 = c$$373.from;
          var v31056 = v26772.setTransition(c$$373, i$$180, JSCompiler_object_inline_x_101, v26773);
          v24860.from = v31056;
          var v20577 = c$$373;
          var v24861 = a$$503.effects;
          var v24862 = c$$373.to;
          var v31057 = v24861.setTransition(c$$373, i$$180, JSCompiler_object_inline_x_103, v24862);
          v20577.to = v31057;
        }
      }
      var v28082 = l$$69 == "content";
      var v28950 = !v28082;
      if (v28950) {
        v28082 = l$$69 == "both";
      }
      var v26774 = v28082;
      if (v26774) {
        v26774 = JSCompiler_object_inline_y_100 != JSCompiler_object_inline_y_102;
      }
      var v24863 = v26774;
      if (v24863) {
        d$$292 = d$$292.concat(g$$152);
        var v28951 = c$$373;
        var v29526 = a$$503.effects;
        var v29527 = c$$373.from;
        var v31058 = v29526.setTransition(c$$373, g$$152, JSCompiler_object_inline_y_100, v29527);
        v28951.from = v31058;
        var v28083 = c$$373;
        var v28952 = a$$503.effects;
        var v28953 = c$$373.to;
        var v31059 = v28952.setTransition(c$$373, g$$152, JSCompiler_object_inline_y_102, v28953);
        v28083.to = v31059;
      }
      var v24864 = a$$503.effects;
      var v26775;
      if (k$$60) {
        v26775 = d$$292;
      } else {
        v26775 = e$$266;
      }
      var v24865 = v26775;
      v24864.save(c$$373, v24865);
      c$$373.show();
      var v16521 = a$$503.effects;
      v16521.createWrapper(c$$373);
      var v10927 = c$$373.css("overflow", "hidden");
      var v10928 = c$$373.from;
      v10927.css(v10928);
      var v10929 = l$$69 == "content";
      var v16522 = !v10929;
      if (v16522) {
        v10929 = l$$69 == "both";
      }
      var v4130 = v10929;
      if (v4130) {
        var v24866 = ["marginTop", "marginBottom"];
        var v20578 = h$$123.concat(v24866);
        h$$123 = v20578.concat(g$$152);
        var v20579 = ["marginLeft", "marginRight"];
        i$$180 = i$$180.concat(v20579);
        var v16523 = d$$292.concat(h$$123);
        f$$125 = v16523.concat(i$$180);
        var v10930 = c$$373.find("*[width]");
        v10930.each(v1435);
      }
      var v4131 = c$$373.to;
      var v10931 = !1;
      var v10932 = b$$466.duration;
      var v16524 = b$$466.options;
      var v10933 = v16524.easing;
      var v4132 = {queue:v10931, duration:v10932, easing:v10933, complete:v1436};
      c$$373.animate(v4131, v4132);
      return;
    }
    return this.queue(v1437);
  }
  function v1433(b$$465) {
    function v1432() {
      var c$$372 = a$$503(this);
      var v4133 = !0;
      var v4134 = b$$465.options;
      var d$$291 = a$$503.extend(v4133, {}, v4134);
      var v4135 = a$$503.effects;
      var v16525 = b$$465.options;
      var v10934 = v16525.mode;
      var v16526 = !v10934;
      if (v16526) {
        v10934 = "effect";
      }
      var v4136 = v10934;
      var e$$265 = v4135.setMode(c$$372, v4136);
      var v16527 = b$$465.options;
      var v10935 = v16527.percent;
      var v4137 = parseInt(v10935, 10);
      var v10937 = !v4137;
      if (v10937) {
        var v10936;
        var v26776 = b$$465.options;
        var v24867 = v26776.percent;
        var v20580 = parseInt(v24867, 10);
        var v16529 = v20580 == 0;
        if (v16529) {
          v10936 = 0;
        } else {
          var v16528;
          var v20581 = e$$265 == "hide";
          if (v20581) {
            v16528 = 0;
          } else {
            v16528 = 100;
          }
          v10936 = v16528;
        }
        v4137 = v10936;
      }
      var f$$124 = v4137;
      var v10938 = b$$465.options;
      var v4138 = v10938.direction;
      var v10939 = !v4138;
      if (v10939) {
        v4138 = "both";
      }
      var g$$151 = v4138;
      var v4139 = b$$465.options;
      var h$$122 = v4139.origin;
      var v4140 = e$$265 != "effect";
      if (v4140) {
        var v16530 = h$$122;
        var v20582 = !v16530;
        if (v20582) {
          v16530 = ["middle", "center"];
        }
        d$$291.origin = v16530;
        d$$291.restore = !0;
      }
      var v4141 = c$$372.height();
      var v4142 = c$$372.width();
      var i$$179 = {height:v4141, width:v4142};
      var v10940 = b$$465.options;
      var v4143 = v10940.from;
      var v10942 = !v4143;
      if (v10942) {
        var v10941;
        var v16531 = e$$265 == "show";
        if (v16531) {
          v10941 = {height:0, width:0};
        } else {
          v10941 = i$$179;
        }
        v4143 = v10941;
      }
      c$$372.from = v4143;
      var v4144;
      var v10943 = g$$151 != "horizontal";
      if (v10943) {
        v4144 = f$$124 / 100;
      } else {
        v4144 = 1;
      }
      var JSCompiler_object_inline_y_94 = v4144;
      var v4145;
      var v10944 = g$$151 != "vertical";
      if (v10944) {
        v4145 = f$$124 / 100;
      } else {
        v4145 = 1;
      }
      var JSCompiler_object_inline_x_95 = v4145;
      var v28954 = i$$179.height;
      var v28084 = v28954 * JSCompiler_object_inline_y_94;
      var v28955 = i$$179.width;
      var v28085 = v28955 * JSCompiler_object_inline_x_95;
      c$$372.to = {height:v28084, width:v28085};
      var v28956 = b$$465.options;
      var v28086 = v28956.fade;
      if (v28086) {
        var v29528 = e$$265 == "show";
        if (v29528) {
          var v30119 = c$$372.from;
          v30119.opacity = 0;
          var v30120 = c$$372.to;
          v30120.opacity = 1;
        }
        var v29529 = e$$265 == "hide";
        if (v29529) {
          var v30121 = c$$372.from;
          v30121.opacity = 1;
          var v30122 = c$$372.to;
          v30122.opacity = 0;
        }
      }
      d$$291.from = c$$372.from;
      d$$291.to = c$$372.to;
      d$$291.mode = e$$265;
      var v16532 = b$$465.duration;
      var v16533 = b$$465.callback;
      c$$372.effect("size", d$$291, v16532, v16533);
      c$$372.dequeue();
      return;
    }
    return this.queue(v1432);
  }
  function v1431(b$$464) {
    function v1430() {
      var c$$371 = a$$503(this);
      var v4146 = a$$503.effects;
      var v16534 = b$$464.options;
      var v10945 = v16534.mode;
      var v16535 = !v10945;
      if (v16535) {
        v10945 = "hide";
      }
      var v4147 = v10945;
      var d$$290 = v4146.setMode(c$$371, v4147);
      var v16536 = b$$464.options;
      var v10946 = v16536.percent;
      var v4148 = parseInt(v10946, 10);
      var v10947 = !v4148;
      if (v10947) {
        v4148 = 150;
      }
      var e$$264 = v4148;
      var f$$123 = e$$264 / 100;
      var v4149 = c$$371.height();
      var v4150 = c$$371.width();
      var g$$150 = {height:v4149, width:v4150};
      var v16537 = b$$464.options;
      var v20583 = !0;
      var v24868;
      var v26777 = d$$290 == "hide";
      if (v26777) {
        v24868 = e$$264;
      } else {
        v24868 = 100;
      }
      var v20584 = v24868;
      var v24869;
      var v26780 = d$$290 == "hide";
      if (v26780) {
        v24869 = g$$150;
      } else {
        var v28087 = g$$150.height;
        var v26778 = v28087 * f$$123;
        var v28088 = g$$150.width;
        var v26779 = v28088 * f$$123;
        v24869 = {height:v26778, width:v26779};
      }
      var v20585 = v24869;
      var v16538 = {fade:v20583, mode:d$$290, percent:v20584, from:v20585};
      a$$503.extend(v16537, v16538);
      var v16539 = b$$464.options;
      var v16540 = b$$464.duration;
      var v16541 = b$$464.callback;
      c$$371.effect("scale", v16539, v16540, v16541);
      c$$371.dequeue();
      return;
    }
    return this.queue(v1430);
  }
  var v16542 = a$$503.effects;
  v16542.puff = v1431;
  var v16543 = a$$503.effects;
  v16543.scale = v1433;
  var v10948 = a$$503.effects;
  v10948.size = v1438;
  return;
}
function v1429(a$$502, b$$461) {
  function v1428(b$$462) {
    function v1427() {
      function v1426() {
        c$$370.dequeue();
        return;
      }
      function v1425() {
        var v10949 = h$$121 == 0;
        if (v10949) {
          c$$370.hide();
        }
        var v10950 = b$$462.callback;
        if (v10950) {
          var v16544 = b$$462.callback;
          v16544.apply(this, arguments);
        }
        return;
      }
      var c$$370 = a$$502(this);
      var v4151 = a$$502.effects;
      var v16545 = b$$462.options;
      var v10951 = v16545.mode;
      var v16546 = !v10951;
      if (v16546) {
        v10951 = "show";
      }
      var v4152 = v10951;
      var d$$289 = v4151.setMode(c$$370, v4152);
      var v20586 = b$$462.options;
      var v16547 = v20586.times;
      var v20587 = !v16547;
      if (v20587) {
        v16547 = 5;
      }
      var v10952 = v16547;
      var v4153 = v10952 * 2;
      var e$$263 = v4153 - 1;
      var v4154;
      var v10955 = b$$462.duration;
      if (v10955) {
        var v10953 = b$$462.duration;
        v4154 = v10953 / 2;
      } else {
        var v20588 = a$$502.fx;
        var v16548 = v20588.speeds;
        var v10954 = v16548._default;
        v4154 = v10954 / 2;
      }
      var f$$122 = v4154;
      var g$$149 = c$$370.is(":visible");
      var h$$121 = 0;
      var v16549 = !g$$149;
      if (v16549) {
        var v20589 = c$$370.css("opacity", 0);
        v20589.show();
        h$$121 = 1;
      }
      var v20590 = d$$289 == "hide";
      if (v20590) {
        v20590 = g$$149;
      }
      var v16550 = v20590;
      var v20592 = !v16550;
      if (v20592) {
        var v20591 = d$$289 == "show";
        if (v20591) {
          v20591 = !g$$149;
        }
        v16550 = v20591;
      }
      var v10956 = v16550;
      if (v10956) {
        e$$263--;
      }
      var i$$178 = 0;
      var v4155 = i$$178 < e$$263;
      for (;v4155;) {
        var v10957 = {opacity:h$$121};
        var v16551 = b$$462.options;
        var v10958 = v16551.easing;
        c$$370.animate(v10957, f$$122, v10958);
        var v10959 = h$$121 + 1;
        h$$121 = v10959 % 2;
        i$$178++;
        v4155 = i$$178 < e$$263;
      }
      var v10960 = {opacity:h$$121};
      var v16552 = b$$462.options;
      var v10961 = v16552.easing;
      c$$370.animate(v10960, f$$122, v10961, v1425);
      var v10962 = c$$370.queue("fx", v1426);
      v10962.dequeue();
      return;
    }
    return this.queue(v1427);
  }
  var v4156 = a$$502.effects;
  v4156.pulsate = v1428;
  return;
}
function v1424(a$$501, b$$459) {
  function v1423(b$$460) {
    function v1422() {
      function v1421() {
        var v24870 = e$$262 == "hide";
        if (v24870) {
          c$$369.hide();
        }
        var v24871 = a$$501.effects;
        v24871.restore(c$$369, d$$288);
        var v24872 = e$$262 == "show";
        if (v24872) {
          var v28089 = a$$501.support;
          var v26781 = v28089.opacity;
          v24872 = !v26781;
        }
        var v20593 = v24872;
        if (v20593) {
          var v24873 = this.style;
          v24873.removeAttribute("filter");
        }
        var v16553 = b$$460.callback;
        if (v16553) {
          var v20594 = b$$460.callback;
          v20594.apply(this, arguments);
        }
        c$$369.dequeue();
        return;
      }
      var c$$369 = a$$501(this);
      var d$$288 = ["backgroundImage", "backgroundColor", "opacity"];
      var v4157 = a$$501.effects;
      var v16554 = b$$460.options;
      var v10963 = v16554.mode;
      var v16555 = !v10963;
      if (v16555) {
        v10963 = "show";
      }
      var v4158 = v10963;
      var e$$262 = v4157.setMode(c$$369, v4158);
      var v4159 = c$$369.css("backgroundColor");
      var f$$121 = {backgroundColor:v4159};
      var v16556 = e$$262 == "hide";
      if (v16556) {
        f$$121.opacity = 0;
      }
      var v16557 = a$$501.effects;
      v16557.save(c$$369, d$$288);
      var v16558 = c$$369.show();
      var v26782 = b$$460.options;
      var v24874 = v26782.color;
      var v26783 = !v24874;
      if (v26783) {
        v24874 = "#ffff99";
      }
      var v20595 = v24874;
      var v16559 = {backgroundImage:"none", backgroundColor:v20595};
      var v10964 = v16558.css(v16559);
      var v16560 = !1;
      var v16561 = b$$460.duration;
      var v20596 = b$$460.options;
      var v16562 = v20596.easing;
      var v10965 = {queue:v16560, duration:v16561, easing:v16562, complete:v1421};
      v10964.animate(f$$121, v10965);
      return;
    }
    return this.queue(v1422);
  }
  var v4160 = a$$501.effects;
  v4160.highlight = v1423;
  return;
}
function v1420(a$$500, b$$457) {
  function v1419(b$$458) {
    function v1418() {
      function v1417() {
        var v24875 = e$$261 == "hide";
        if (v24875) {
          c$$368.hide();
        }
        var v24876 = a$$500.effects;
        v24876.restore(c$$368, d$$287);
        var v20597 = a$$500.effects;
        v20597.removeWrapper(c$$368);
        var v16563 = b$$458.callback;
        if (v16563) {
          var v20598 = b$$458.callback;
          var v20599 = c$$368[0];
          v20598.apply(v20599, arguments);
        }
        c$$368.dequeue();
        return;
      }
      var c$$368 = a$$500(this);
      var d$$287 = ["position", "top", "bottom", "left", "right"];
      var v4161 = a$$500.effects;
      var v16564 = b$$458.options;
      var v10966 = v16564.mode;
      var v16565 = !v10966;
      if (v16565) {
        v10966 = "hide";
      }
      var v4162 = v10966;
      var e$$261 = v4161.setMode(c$$368, v4162);
      var v10967 = b$$458.options;
      var v4163 = v10967.size;
      var v10968 = !v4163;
      if (v10968) {
        v4163 = 15;
      }
      var f$$120 = v4163;
      var v16566 = b$$458.options;
      var v10969 = v16566.horizFirst;
      var v4164 = !v10969;
      var g$$148 = !v4164;
      var v4165;
      var v10972 = b$$458.duration;
      if (v10972) {
        var v10970 = b$$458.duration;
        v4165 = v10970 / 2;
      } else {
        var v20600 = a$$500.fx;
        var v16567 = v20600.speeds;
        var v10971 = v16567._default;
        v4165 = v10971 / 2;
      }
      var h$$120 = v4165;
      var v10973 = a$$500.effects;
      v10973.save(c$$368, d$$287);
      c$$368.show();
      var v10974 = a$$500.effects;
      var v4166 = v10974.createWrapper(c$$368);
      var v4167 = {overflow:"hidden"};
      var i$$177 = v4166.css(v4167);
      var v4168 = e$$261 == "show";
      var j$$87 = v4168 != g$$148;
      var v4169;
      if (j$$87) {
        v4169 = ["width", "height"];
      } else {
        v4169 = ["height", "width"];
      }
      var k$$59 = v4169;
      var v4170;
      if (j$$87) {
        var v10975 = i$$177.width();
        var v10976 = i$$177.height();
        v4170 = [v10975, v10976];
      } else {
        var v10977 = i$$177.height();
        var v10978 = i$$177.width();
        v4170 = [v10977, v10978];
      }
      var l$$68 = v4170;
      var m$$39 = /([0-9]+)%/.exec(f$$120);
      if (m$$39) {
        var v24877 = m$$39[1];
        var v20601 = parseInt(v24877, 10);
        var v16568 = v20601 / 100;
        var v24878;
        var v26784 = e$$261 == "hide";
        if (v26784) {
          v24878 = 0;
        } else {
          v24878 = 1;
        }
        var v20602 = v24878;
        var v16569 = l$$68[v20602];
        f$$120 = v16568 * v16569;
      }
      var v10979 = e$$261 == "show";
      if (v10979) {
        var v20603;
        if (g$$148) {
          v20603 = {height:0, width:f$$120};
        } else {
          v20603 = {height:f$$120, width:0};
        }
        var v16570 = v20603;
        i$$177.css(v16570);
      }
      var n$$88 = {};
      var p$$43 = {};
      var v16571 = k$$59[0];
      var v20604;
      var v24879 = e$$261 == "show";
      if (v24879) {
        v20604 = l$$68[0];
      } else {
        v20604 = f$$120;
      }
      n$$88[v16571] = v20604;
      var v16572 = k$$59[1];
      var v20605;
      var v24880 = e$$261 == "show";
      if (v24880) {
        v20605 = l$$68[1];
      } else {
        v20605 = 0;
      }
      p$$43[v16572] = v20605;
      var v20606 = b$$458.options;
      var v16573 = v20606.easing;
      var v10980 = i$$177.animate(n$$88, h$$120, v16573);
      var v16574 = b$$458.options;
      var v10981 = v16574.easing;
      v10980.animate(p$$43, h$$120, v10981, v1417);
      return;
    }
    return this.queue(v1418);
  }
  var v4171 = a$$500.effects;
  v4171.fold = v1419;
  return;
}
function v1416(a$$499, b$$455) {
  function v1415(b$$456) {
    function v1414() {
      function v1413() {
        var v10982 = b$$456.callback;
        if (v10982) {
          var v16575 = b$$456.callback;
          v16575.apply(this, arguments);
        }
        c$$367.dequeue();
        return;
      }
      var c$$367 = a$$499(this);
      var v4172 = a$$499.effects;
      var v16576 = b$$456.options;
      var v10983 = v16576.mode;
      var v16577 = !v10983;
      if (v16577) {
        v10983 = "hide";
      }
      var v4173 = v10983;
      var d$$286 = v4172.setMode(c$$367, v4173);
      var v4174 = {opacity:d$$286};
      var v10984 = !1;
      var v10985 = b$$456.duration;
      var v16578 = b$$456.options;
      var v10986 = v16578.easing;
      var v4175 = {queue:v10984, duration:v10985, easing:v10986, complete:v1413};
      c$$367.animate(v4174, v4175);
      return;
    }
    return this.queue(v1414);
  }
  var v4176 = a$$499.effects;
  v4176.fade = v1415;
  return;
}
function v1412(a$$498, b$$453) {
  function v1411(b$$454) {
    function v1410() {
      function v1409() {
        var v20607;
        var v28090 = b$$454.options;
        var v26785 = v28090.mode;
        var v24883 = v26785 == "show";
        if (v24883) {
          var v24881 = {visibility:"visible"};
          v20607 = e$$260.css(v24881);
        } else {
          var v26786 = {visibility:"visible"};
          var v24882 = e$$260.css(v26786);
          v20607 = v24882.hide();
        }
        v20607;
        var v20608 = b$$454.callback;
        if (v20608) {
          var v24884 = b$$454.callback;
          var v24885 = e$$260[0];
          v24884.apply(v24885);
        }
        e$$260.dequeue();
        var v10987 = a$$498("div.ui-effects-explode");
        v10987.remove();
        return;
      }
      var v4177;
      var v16579 = b$$454.options;
      var v10989 = v16579.pieces;
      if (v10989) {
        var v20609 = b$$454.options;
        var v16580 = v20609.pieces;
        var v10988 = Math.sqrt(v16580);
        v4177 = Math.round(v10988);
      } else {
        v4177 = 3;
      }
      var c$$366 = v4177;
      var v4178;
      var v16581 = b$$454.options;
      var v10991 = v16581.pieces;
      if (v10991) {
        var v20610 = b$$454.options;
        var v16582 = v20610.pieces;
        var v10990 = Math.sqrt(v16582);
        v4178 = Math.round(v10990);
      } else {
        v4178 = 3;
      }
      var d$$285 = v4178;
      var v4179 = b$$454.options;
      var v10992;
      var v24886 = b$$454.options;
      var v20611 = v24886.mode;
      var v16585 = v20611 == "toggle";
      if (v16585) {
        var v16583;
        var v24887 = a$$498(this);
        var v20612 = v24887.is(":visible");
        if (v20612) {
          v16583 = "hide";
        } else {
          v16583 = "show";
        }
        v10992 = v16583;
      } else {
        var v16584 = b$$454.options;
        v10992 = v16584.mode;
      }
      v4179.mode = v10992;
      var v10993 = a$$498(this);
      var v4180 = v10993.show();
      var e$$260 = v4180.css("visibility", "hidden");
      var f$$119 = e$$260.offset();
      var v10994 = f$$119;
      var v20613 = v10994.top;
      var v26787 = e$$260.css("marginTop");
      var v24888 = parseInt(v26787, 10);
      var v26788 = !v24888;
      if (v26788) {
        v24888 = 0;
      }
      var v20614 = v24888;
      v10994.top = v20613 - v20614;
      var v10995 = f$$119;
      var v20615 = v10995.left;
      var v26789 = e$$260.css("marginLeft");
      var v24889 = parseInt(v26789, 10);
      var v26790 = !v24889;
      if (v26790) {
        v24889 = 0;
      }
      var v20616 = v24889;
      v10995.left = v20615 - v20616;
      var v4181 = !0;
      var g$$147 = e$$260.outerWidth(v4181);
      var v4182 = !0;
      var h$$119 = e$$260.outerHeight(v4182);
      var i$$176 = 0;
      var v4187 = i$$176 < c$$366;
      for (;v4187;) {
        var j$$86 = 0;
        var v4186 = j$$86 < d$$285;
        for (;v4186;) {
          var v28091 = e$$260.clone();
          var v26791 = v28091.appendTo("body");
          var v24890 = v26791.wrap("<div></div>");
          var v28092 = -j$$86;
          var v28093 = g$$147 / d$$285;
          var v26792 = v28092 * v28093;
          var v28094 = -i$$176;
          var v28095 = h$$119 / c$$366;
          var v26793 = v28094 * v28095;
          var v24891 = {position:"absolute", visibility:"visible", left:v26792, top:v26793};
          var v20617 = v24890.css(v24891);
          var v16586 = v20617.parent();
          var v10996 = v16586.addClass("ui-effects-explode");
          var v16587 = g$$147 / d$$285;
          var v16588 = h$$119 / c$$366;
          var v24892 = f$$119.left;
          var v26794 = g$$147 / d$$285;
          var v24893 = j$$86 * v26794;
          var v20618 = v24892 + v24893;
          var v24894;
          var v28957 = b$$454.options;
          var v28096 = v28957.mode;
          var v26797 = v28096 == "show";
          if (v26797) {
            var v28097 = j$$86;
            var v28958 = d$$285 / 2;
            var v28098 = Math.floor(v28958);
            var v26795 = v28097 - v28098;
            var v26796 = g$$147 / d$$285;
            v24894 = v26795 * v26796;
          } else {
            v24894 = 0;
          }
          var v20619 = v24894;
          var v16589 = v20618 + v20619;
          var v24895 = f$$119.top;
          var v26798 = h$$119 / c$$366;
          var v24896 = i$$176 * v26798;
          var v20620 = v24895 + v24896;
          var v24897;
          var v28959 = b$$454.options;
          var v28099 = v28959.mode;
          var v26801 = v28099 == "show";
          if (v26801) {
            var v28100 = i$$176;
            var v28960 = c$$366 / 2;
            var v28101 = Math.floor(v28960);
            var v26799 = v28100 - v28101;
            var v26800 = h$$119 / c$$366;
            v24897 = v26799 * v26800;
          } else {
            v24897 = 0;
          }
          var v20621 = v24897;
          var v16590 = v20620 + v20621;
          var v20622;
          var v28102 = b$$454.options;
          var v26802 = v28102.mode;
          var v24898 = v26802 == "show";
          if (v24898) {
            v20622 = 0;
          } else {
            v20622 = 1;
          }
          var v16591 = v20622;
          var v10997 = {position:"absolute", overflow:"hidden", width:v16587, height:v16588, left:v16589, top:v16590, opacity:v16591};
          var v4183 = v10996.css(v10997);
          var v20623 = f$$119.left;
          var v24899 = g$$147 / d$$285;
          var v20624 = j$$86 * v24899;
          var v16592 = v20623 + v20624;
          var v20625;
          var v28103 = b$$454.options;
          var v26803 = v28103.mode;
          var v24902 = v26803 == "show";
          if (v24902) {
            v20625 = 0;
          } else {
            var v26804 = j$$86;
            var v28104 = d$$285 / 2;
            var v26805 = Math.floor(v28104);
            var v24900 = v26804 - v26805;
            var v24901 = g$$147 / d$$285;
            v20625 = v24900 * v24901;
          }
          var v16593 = v20625;
          var v10998 = v16592 + v16593;
          var v20626 = f$$119.top;
          var v24903 = h$$119 / c$$366;
          var v20627 = i$$176 * v24903;
          var v16594 = v20626 + v20627;
          var v20628;
          var v28105 = b$$454.options;
          var v26806 = v28105.mode;
          var v24906 = v26806 == "show";
          if (v24906) {
            v20628 = 0;
          } else {
            var v26807 = i$$176;
            var v28106 = c$$366 / 2;
            var v26808 = Math.floor(v28106);
            var v24904 = v26807 - v26808;
            var v24905 = h$$119 / c$$366;
            v20628 = v24904 * v24905;
          }
          var v16595 = v20628;
          var v10999 = v16594 + v16595;
          var v16596;
          var v26809 = b$$454.options;
          var v24907 = v26809.mode;
          var v20629 = v24907 == "show";
          if (v20629) {
            v16596 = 1;
          } else {
            v16596 = 0;
          }
          var v11000 = v16596;
          var v4184 = {left:v10998, top:v10999, opacity:v11000};
          var v11001 = b$$454.duration;
          var v16597 = !v11001;
          if (v16597) {
            v11001 = 500;
          }
          var v4185 = v11001;
          v4183.animate(v4184, v4185);
          j$$86++;
          v4186 = j$$86 < d$$285;
        }
        i$$176++;
        v4187 = i$$176 < c$$366;
      }
      var v11002 = b$$454.duration;
      var v16598 = !v11002;
      if (v16598) {
        v11002 = 500;
      }
      var v4188 = v11002;
      setTimeout(v1409, v4188);
      return;
    }
    return this.queue(v1410);
  }
  var v4189 = a$$498.effects;
  v4189.explode = v1411;
  return;
}
function v1408(a$$497, b$$451) {
  function v1407(b$$452) {
    function v1406() {
      function v1405() {
        var v24908 = e$$259 == "hide";
        if (v24908) {
          c$$365.hide();
        }
        var v24909 = a$$497.effects;
        v24909.restore(c$$365, d$$284);
        var v20630 = a$$497.effects;
        v20630.removeWrapper(c$$365);
        var v16599 = b$$452.callback;
        if (v16599) {
          var v20631 = b$$452.callback;
          v20631.apply(this, arguments);
        }
        c$$365.dequeue();
        return;
      }
      var c$$365 = a$$497(this);
      var d$$284 = ["position", "top", "bottom", "left", "right", "opacity"];
      var v4190 = a$$497.effects;
      var v16600 = b$$452.options;
      var v11003 = v16600.mode;
      var v16601 = !v11003;
      if (v16601) {
        v11003 = "hide";
      }
      var v4191 = v11003;
      var e$$259 = v4190.setMode(c$$365, v4191);
      var v11004 = b$$452.options;
      var v4192 = v11004.direction;
      var v11005 = !v4192;
      if (v11005) {
        v4192 = "left";
      }
      var f$$118 = v4192;
      var v16602 = a$$497.effects;
      v16602.save(c$$365, d$$284);
      c$$365.show();
      var v11006 = a$$497.effects;
      v11006.createWrapper(c$$365);
      var v4193;
      var v16603 = f$$118 == "up";
      var v20632 = !v16603;
      if (v20632) {
        v16603 = f$$118 == "down";
      }
      var v11007 = v16603;
      if (v11007) {
        v4193 = "top";
      } else {
        v4193 = "left";
      }
      var g$$146 = v4193;
      var v4194;
      var v16604 = f$$118 == "up";
      var v20633 = !v16604;
      if (v20633) {
        v16604 = f$$118 == "left";
      }
      var v11008 = v16604;
      if (v11008) {
        v4194 = "pos";
      } else {
        v4194 = "neg";
      }
      var h$$118 = v4194;
      var v11009 = b$$452.options;
      var v4195 = v11009.distance;
      var v11011 = !v4195;
      if (v11011) {
        var v11010;
        var v16607 = g$$146 == "top";
        if (v16607) {
          var v20634 = !0;
          var v16605 = c$$365.outerHeight(v20634);
          v11010 = v16605 / 2;
        } else {
          var v20635 = !0;
          var v16606 = c$$365.outerWidth(v20635);
          v11010 = v16606 / 2;
        }
        v4195 = v11010;
      }
      var i$$175 = v4195;
      var v4196 = e$$259 == "show";
      if (v4196) {
        var v11012 = c$$365.css("opacity", 0);
        var v16608;
        var v20636 = h$$118 == "pos";
        if (v20636) {
          v16608 = -i$$175;
        } else {
          v16608 = i$$175;
        }
        var v11013 = v16608;
        v11012.css(g$$146, v11013);
      }
      var v11014;
      var v16609 = e$$259 == "show";
      if (v16609) {
        v11014 = 1;
      } else {
        v11014 = 0;
      }
      var v4197 = v11014;
      var j$$85 = {opacity:v4197};
      var v16610;
      var v20639 = e$$259 == "show";
      if (v20639) {
        var v20637;
        var v24910 = h$$118 == "pos";
        if (v24910) {
          v20637 = "+=";
        } else {
          v20637 = "-=";
        }
        v16610 = v20637;
      } else {
        var v20638;
        var v24911 = h$$118 == "pos";
        if (v24911) {
          v20638 = "-=";
        } else {
          v20638 = "+=";
        }
        v16610 = v20638;
      }
      var v11015 = v16610;
      j$$85[g$$146] = v11015 + i$$175;
      var v16611 = !1;
      var v16612 = b$$452.duration;
      var v20640 = b$$452.options;
      var v16613 = v20640.easing;
      var v11016 = {queue:v16611, duration:v16612, easing:v16613, complete:v1405};
      c$$365.animate(j$$85, v11016);
      return;
    }
    return this.queue(v1406);
  }
  var v4198 = a$$497.effects;
  v4198.drop = v1407;
  return;
}
function v1404(a$$496, b$$449) {
  function v1403(b$$450) {
    function v1402() {
      function v1401() {
        var v24912 = e$$258 == "hide";
        if (v24912) {
          c$$364.hide();
        }
        var v24913 = a$$496.effects;
        v24913.restore(c$$364, d$$283);
        var v20641 = a$$496.effects;
        v20641.removeWrapper(c$$364);
        var v16614 = b$$450.callback;
        if (v16614) {
          var v20642 = b$$450.callback;
          var v20643 = c$$364[0];
          v20642.apply(v20643, arguments);
        }
        c$$364.dequeue();
        return;
      }
      var c$$364 = a$$496(this);
      var d$$283 = ["position", "top", "bottom", "left", "right", "height", "width"];
      var v4199 = a$$496.effects;
      var v16615 = b$$450.options;
      var v11017 = v16615.mode;
      var v16616 = !v11017;
      if (v16616) {
        v11017 = "hide";
      }
      var v4200 = v11017;
      var e$$258 = v4199.setMode(c$$364, v4200);
      var v11018 = b$$450.options;
      var v4201 = v11018.direction;
      var v11019 = !v4201;
      if (v11019) {
        v4201 = "vertical";
      }
      var f$$117 = v4201;
      var v11020 = a$$496.effects;
      v11020.save(c$$364, d$$283);
      c$$364.show();
      var v11021 = a$$496.effects;
      var v4202 = v11021.createWrapper(c$$364);
      var v4203 = {overflow:"hidden"};
      var g$$145 = v4202.css(v4203);
      var v4204;
      var v20644 = c$$364[0];
      var v16617 = v20644.tagName;
      var v11022 = v16617 == "IMG";
      if (v11022) {
        v4204 = g$$145;
      } else {
        v4204 = c$$364;
      }
      var h$$117 = v4204;
      var v4205;
      var v11023 = f$$117 == "vertical";
      if (v11023) {
        v4205 = "height";
      } else {
        v4205 = "width";
      }
      var JSCompiler_object_inline_size_92 = v4205;
      var v4206;
      var v11024 = f$$117 == "vertical";
      if (v11024) {
        v4206 = "top";
      } else {
        v4206 = "left";
      }
      var JSCompiler_object_inline_position_93 = v4206;
      var v4207;
      var v11025 = f$$117 == "vertical";
      if (v11025) {
        v4207 = h$$117.height();
      } else {
        v4207 = h$$117.width();
      }
      var j$$84 = v4207;
      var v4208 = e$$258 == "show";
      if (v4208) {
        h$$117.css(JSCompiler_object_inline_size_92, 0);
        var v16618 = j$$84 / 2;
        h$$117.css(JSCompiler_object_inline_position_93, v16618);
      }
      var k$$58 = {};
      var v16619;
      var v20645 = e$$258 == "show";
      if (v20645) {
        v16619 = j$$84;
      } else {
        v16619 = 0;
      }
      k$$58[JSCompiler_object_inline_size_92] = v16619;
      var v16620;
      var v20646 = e$$258 == "show";
      if (v20646) {
        v16620 = 0;
      } else {
        v16620 = j$$84 / 2;
      }
      k$$58[JSCompiler_object_inline_position_93] = v16620;
      var v16621 = !1;
      var v16622 = b$$450.duration;
      var v20647 = b$$450.options;
      var v16623 = v20647.easing;
      var v11026 = {queue:v16621, duration:v16622, easing:v16623, complete:v1401};
      h$$117.animate(k$$58, v11026);
      return;
    }
    return this.queue(v1402);
  }
  var v4209 = a$$496.effects;
  v4209.clip = v1403;
  return;
}
function v1400(a$$495, b$$447) {
  function v1399(b$$448) {
    function v1398() {
      function v1397() {
        c$$363.dequeue();
        return;
      }
      function v1396() {
        var v16624 = a$$495.effects;
        v16624.restore(c$$363, d$$282);
        var v16625 = a$$495.effects;
        v16625.removeWrapper(c$$363);
        var v11027 = b$$448.callback;
        if (v11027) {
          var v16626 = b$$448.callback;
          v16626.apply(this, arguments);
        }
        return;
      }
      function v1395() {
        c$$363.hide();
        var v20648 = a$$495.effects;
        v20648.restore(c$$363, d$$282);
        var v16627 = a$$495.effects;
        v16627.removeWrapper(c$$363);
        var v11028 = b$$448.callback;
        if (v11028) {
          var v16628 = b$$448.callback;
          v16628.apply(this, arguments);
        }
        return;
      }
      var c$$363 = a$$495(this);
      var d$$282 = ["position", "top", "bottom", "left", "right"];
      var v4210 = a$$495.effects;
      var v16629 = b$$448.options;
      var v11029 = v16629.mode;
      var v16630 = !v11029;
      if (v16630) {
        v11029 = "effect";
      }
      var v4211 = v11029;
      var e$$257 = v4210.setMode(c$$363, v4211);
      var v11030 = b$$448.options;
      var v4212 = v11030.direction;
      var v11031 = !v4212;
      if (v11031) {
        v4212 = "up";
      }
      var f$$116 = v4212;
      var v11032 = b$$448.options;
      var v4213 = v11032.distance;
      var v11033 = !v4213;
      if (v11033) {
        v4213 = 20;
      }
      var g$$144 = v4213;
      var v11034 = b$$448.options;
      var v4214 = v11034.times;
      var v11035 = !v4214;
      if (v11035) {
        v4214 = 5;
      }
      var h$$116 = v4214;
      var v4215 = b$$448.duration;
      var v11036 = !v4215;
      if (v11036) {
        v4215 = 250;
      }
      var i$$173 = v4215;
      var v20649 = /show|hide/.test(e$$257);
      if (v20649) {
        d$$282.push("opacity");
      }
      var v20650 = a$$495.effects;
      v20650.save(c$$363, d$$282);
      c$$363.show();
      var v11037 = a$$495.effects;
      v11037.createWrapper(c$$363);
      var v4216;
      var v16631 = f$$116 == "up";
      var v20651 = !v16631;
      if (v20651) {
        v16631 = f$$116 == "down";
      }
      var v11038 = v16631;
      if (v11038) {
        v4216 = "top";
      } else {
        v4216 = "left";
      }
      var j$$83 = v4216;
      var v4217;
      var v16632 = f$$116 == "up";
      var v20652 = !v16632;
      if (v20652) {
        v16632 = f$$116 == "left";
      }
      var v11039 = v16632;
      if (v11039) {
        v4217 = "pos";
      } else {
        v4217 = "neg";
      }
      var k$$57 = v4217;
      var v11040 = b$$448.options;
      var v4218 = v11040.distance;
      var v11042 = !v4218;
      if (v11042) {
        var v11041;
        var v16635 = j$$83 == "top";
        if (v16635) {
          var v20653 = !0;
          var v16633 = c$$363.outerHeight(v20653);
          v11041 = v16633 / 3;
        } else {
          var v20654 = !0;
          var v16634 = c$$363.outerWidth(v20654);
          v11041 = v16634 / 3;
        }
        v4218 = v11041;
      }
      g$$144 = v4218;
      var v16636 = e$$257 == "show";
      if (v16636) {
        var v20655 = c$$363.css("opacity", 0);
        var v24914;
        var v26810 = k$$57 == "pos";
        if (v26810) {
          v24914 = -g$$144;
        } else {
          v24914 = g$$144;
        }
        var v20656 = v24914;
        v20655.css(j$$83, v20656);
      }
      var v16637 = e$$257 == "hide";
      if (v16637) {
        var v20657 = h$$116 * 2;
        g$$144 = g$$144 / v20657;
      }
      var v11043 = e$$257 != "hide";
      if (v11043) {
        h$$116--;
      }
      var v4219 = e$$257 == "show";
      if (v4219) {
        var l$$67 = {opacity:1};
        var v24915;
        var v26811 = k$$57 == "pos";
        if (v26811) {
          v24915 = "+=";
        } else {
          v24915 = "-=";
        }
        var v20658 = v24915;
        l$$67[j$$83] = v20658 + g$$144;
        var v20659 = i$$173 / 2;
        var v24916 = b$$448.options;
        var v20660 = v24916.easing;
        c$$363.animate(l$$67, v20659, v20660);
        g$$144 = g$$144 / 2;
        h$$116--;
      }
      var m$$38 = 0;
      var v4220 = m$$38 < h$$116;
      for (;v4220;) {
        var n$$87 = {};
        var p$$42 = {};
        var v24917;
        var v26812 = k$$57 == "pos";
        if (v26812) {
          v24917 = "-=";
        } else {
          v24917 = "+=";
        }
        var v20661 = v24917;
        n$$87[j$$83] = v20661 + g$$144;
        var v24918;
        var v26813 = k$$57 == "pos";
        if (v26813) {
          v24918 = "+=";
        } else {
          v24918 = "-=";
        }
        var v20662 = v24918;
        p$$42[j$$83] = v20662 + g$$144;
        var v20663 = i$$173 / 2;
        var v24919 = b$$448.options;
        var v20664 = v24919.easing;
        var v16638 = c$$363.animate(n$$87, v20663, v20664);
        var v16639 = i$$173 / 2;
        var v20665 = b$$448.options;
        var v16640 = v20665.easing;
        v16638.animate(p$$42, v16639, v16640);
        var v11044;
        var v16641 = e$$257 == "hide";
        if (v16641) {
          v11044 = g$$144 * 2;
        } else {
          v11044 = g$$144 / 2;
        }
        g$$144 = v11044;
        m$$38++;
        v4220 = m$$38 < h$$116;
      }
      var v4221 = e$$257 == "hide";
      if (v4221) {
        l$$67 = {opacity:0};
        var v16642;
        var v20666 = k$$57 == "pos";
        if (v20666) {
          v16642 = "-=";
        } else {
          v16642 = "+=";
        }
        var v11045 = v16642;
        l$$67[j$$83] = v11045 + g$$144;
        var v11046 = i$$173 / 2;
        var v16643 = b$$448.options;
        var v11047 = v16643.easing;
        c$$363.animate(l$$67, v11046, v11047, v1395);
      } else {
        n$$87 = {};
        p$$42 = {};
        var v20667;
        var v24920 = k$$57 == "pos";
        if (v24920) {
          v20667 = "-=";
        } else {
          v20667 = "+=";
        }
        var v16644 = v20667;
        n$$87[j$$83] = v16644 + g$$144;
        var v20668;
        var v24921 = k$$57 == "pos";
        if (v24921) {
          v20668 = "+=";
        } else {
          v20668 = "-=";
        }
        var v16645 = v20668;
        p$$42[j$$83] = v16645 + g$$144;
        var v16646 = i$$173 / 2;
        var v20669 = b$$448.options;
        var v16647 = v20669.easing;
        var v11048 = c$$363.animate(n$$87, v16646, v16647);
        var v11049 = i$$173 / 2;
        var v16648 = b$$448.options;
        var v11050 = v16648.easing;
        v11048.animate(p$$42, v11049, v11050, v1396);
      }
      c$$363.queue("fx", v1397);
      c$$363.dequeue();
      return;
    }
    return this.queue(v1398);
  }
  var v4222 = a$$495.effects;
  v4222.bounce = v1399;
  return;
}
function v1394(a$$494, b$$445) {
  function v1393(b$$446) {
    function v1392() {
      function v1391() {
        var v24922 = e$$256 == "hide";
        if (v24922) {
          c$$362.hide();
        }
        var v24923 = a$$494.effects;
        v24923.restore(c$$362, d$$281);
        var v20670 = a$$494.effects;
        v20670.removeWrapper(c$$362);
        var v16649 = b$$446.callback;
        if (v16649) {
          var v20671 = b$$446.callback;
          var v20672 = c$$362[0];
          v20671.apply(v20672, arguments);
        }
        c$$362.dequeue();
        return;
      }
      var c$$362 = a$$494(this);
      var d$$281 = ["position", "top", "bottom", "left", "right"];
      var v4223 = a$$494.effects;
      var v16650 = b$$446.options;
      var v11051 = v16650.mode;
      var v16651 = !v11051;
      if (v16651) {
        v11051 = "hide";
      }
      var v4224 = v11051;
      var e$$256 = v4223.setMode(c$$362, v4224);
      var v11052 = b$$446.options;
      var v4225 = v11052.direction;
      var v11053 = !v4225;
      if (v11053) {
        v4225 = "vertical";
      }
      var f$$115 = v4225;
      var v11054 = a$$494.effects;
      v11054.save(c$$362, d$$281);
      c$$362.show();
      var v11055 = a$$494.effects;
      var v4226 = v11055.createWrapper(c$$362);
      var v4227 = {overflow:"hidden"};
      var g$$143 = v4226.css(v4227);
      var v4228;
      var v11056 = f$$115 == "vertical";
      if (v11056) {
        v4228 = "height";
      } else {
        v4228 = "width";
      }
      var h$$115 = v4228;
      var v4229;
      var v11057 = f$$115 == "vertical";
      if (v11057) {
        v4229 = g$$143.height();
      } else {
        v4229 = g$$143.width();
      }
      var i$$172 = v4229;
      var v4230 = e$$256 == "show";
      if (v4230) {
        g$$143.css(h$$115, 0);
      }
      var j$$82 = {};
      var v11058;
      var v16652 = e$$256 == "show";
      if (v16652) {
        v11058 = i$$172;
      } else {
        v11058 = 0;
      }
      j$$82[h$$115] = v11058;
      var v11059 = b$$446.duration;
      var v16653 = b$$446.options;
      var v11060 = v16653.easing;
      g$$143.animate(j$$82, v11059, v11060, v1391);
      return;
    }
    return this.queue(v1392);
  }
  var v4231 = a$$494.effects;
  v4231.blind = v1393;
  return;
}
function v1390(a$$470, b$$414) {
  function v1389(b$$444, c$$361) {
    function v1388(a$$493) {
      var v4232;
      var v11063 = a$$493 < .5;
      if (v11063) {
        var v16654 = a$$493 * 2;
        var v11061 = c$$361(v16654);
        v4232 = v11061 / 2;
      } else {
        var v24924 = a$$493 * -2;
        var v20673 = v24924 + 2;
        var v16655 = c$$361(v20673);
        var v11062 = v16655 / -2;
        v4232 = v11062 + 1;
      }
      return v4232;
    }
    function v1387(a$$492) {
      var v11064 = 1 - a$$492;
      var v4233 = c$$361(v11064);
      return 1 - v4233;
    }
    var v16656 = a$$470.easing;
    var v16657 = "easeIn" + b$$444;
    v16656[v16657] = c$$361;
    var v16658 = a$$470.easing;
    var v16659 = "easeOut" + b$$444;
    v16658[v16659] = v1387;
    var v11065 = a$$470.easing;
    var v11066 = "easeInOut" + b$$444;
    v11065[v11066] = v1388;
    return;
  }
  function v1386(a$$491) {
    var b$$443;
    var c$$360 = 4;
    var v24925 = c$$360 = c$$360 - 1;
    var v20674 = b$$443 = Math.pow(2, v24925);
    var v16660 = v20674 - 1;
    var v11067 = v16660 / 11;
    var v4234 = a$$491 < v11067;
    for (;v4234;) {
      var v24926 = c$$360 = c$$360 - 1;
      var v20675 = b$$443 = Math.pow(2, v24926);
      var v16661 = v20675 - 1;
      var v11068 = v16661 / 11;
      v4234 = a$$491 < v11068;
    }
    var v16662 = 3 - c$$360;
    var v11069 = Math.pow(4, v16662);
    var v4235 = 1 / v11069;
    var v26814 = b$$443 * 3;
    var v24927 = v26814 - 2;
    var v20676 = v24927 / 22;
    var v16663 = v20676 - a$$491;
    var v11070 = Math.pow(v16663, 2);
    var v4236 = 7.5625 * v11070;
    return v4235 - v4236;
  }
  function v1385(a$$490) {
    var v4237 = a$$490 * a$$490;
    var v11071 = 3 * a$$490;
    var v4238 = v11071 - 2;
    return v4237 * v4238;
  }
  function v1384(a$$489) {
    var v4239;
    var v16664 = a$$489 === 0;
    var v20677 = !v16664;
    if (v20677) {
      v16664 = a$$489 === 1;
    }
    var v11074 = v16664;
    if (v11074) {
      v4239 = a$$489;
    } else {
      var v24928 = a$$489 - 1;
      var v20678 = 8 * v24928;
      var v16665 = Math.pow(2, v20678);
      var v11072 = -v16665;
      var v28107 = a$$489 - 1;
      var v26815 = v28107 * 80;
      var v24929 = v26815 - 7.5;
      var v24930 = Math.PI;
      var v20679 = v24929 * v24930;
      var v16666 = v20679 / 15;
      var v11073 = Math.sin(v16666);
      v4239 = v11072 * v11073;
    }
    return v4239;
  }
  function v1383(a$$488) {
    var v16667 = a$$488 * a$$488;
    var v11075 = 1 - v16667;
    var v4240 = Math.sqrt(v11075);
    return 1 - v4240;
  }
  function v1382(a$$487) {
    var v20680 = Math.PI;
    var v16668 = a$$487 * v20680;
    var v11076 = v16668 / 2;
    var v4241 = Math.cos(v11076);
    return 1 - v4241;
  }
  function v1381(a$$486, b$$441) {
    function v1380(b$$442) {
      var v4242 = a$$486 + 2;
      return Math.pow(b$$442, v4242);
    }
    m$$36[b$$441] = v1380;
    return;
  }
  function v1379(b$$439) {
    function v1378(a$$485, b$$440) {
      var v11077 = c$$359.indexOf(b$$440);
      var v4243 = v11077 > 0;
      if (v4243) {
        var v11078 = parseFloat(c$$359);
        d$$280 = [v11078, b$$440];
      }
      return;
    }
    var c$$359 = this.css(b$$439);
    var d$$280 = [];
    var v11079 = ["em", "px", "%", "pt"];
    a$$470.each(v11079, v1378);
    return d$$280;
  }
  function v1377(b$$438) {
    var v16669 = l$$65(b$$438);
    var v20682 = !v16669;
    if (v20682) {
      var v20681 = typeof b$$438;
      v16669 = v20681 == "boolean";
    }
    var v11080 = v16669;
    var v16670 = !v11080;
    if (v16670) {
      v11080 = a$$470.isFunction(b$$438);
    }
    var v4245 = v11080;
    if (v4245) {
      var v4244 = this.__toggle;
      return v4244.apply(this, arguments);
    }
    var c$$358 = k$$55.apply(this, arguments);
    var v11081 = c$$358[1];
    v11081.mode = "toggle";
    var v11082 = this.effect;
    return v11082.apply(this, c$$358);
  }
  function v1376(a$$484) {
    var v4247 = l$$65(a$$484);
    if (v4247) {
      var v4246 = this._hide;
      return v4246.apply(this, arguments);
    }
    var b$$437 = k$$55.apply(this, arguments);
    var v11083 = b$$437[1];
    v11083.mode = "hide";
    var v11084 = this.effect;
    return v11084.apply(this, b$$437);
  }
  function v1375(a$$483) {
    var v4249 = l$$65(a$$483);
    if (v4249) {
      var v4248 = this._show;
      return v4248.apply(this, arguments);
    }
    var b$$436 = k$$55.apply(this, arguments);
    var v11085 = b$$436[1];
    v11085.mode = "show";
    var v11086 = this.effect;
    return v11086.apply(this, b$$436);
  }
  function v1374(b$$435, c$$357, d$$279, e$$255) {
    function v1373() {
      var v4250 = g$$142.callback;
      if (v4250) {
        var v11087 = g$$142.callback;
        v11087.call(this);
      }
      return;
    }
    var f$$114 = k$$55.apply(this, arguments);
    var v4251 = f$$114[1];
    var v4252 = f$$114[2];
    var v4253 = f$$114[3];
    var g$$142 = {options:v4251, duration:v4252, callback:v4253};
    var v4254 = g$$142.options;
    var h$$114 = v4254.mode;
    var v4255 = a$$470.effects;
    var i$$171 = v4255[b$$435];
    var v4256;
    var v20683 = a$$470.fx;
    var v16671 = v20683.off;
    var v20684 = !v16671;
    if (v20684) {
      v16671 = !i$$171;
    }
    var v11089 = v16671;
    if (v11089) {
      var v11088;
      if (h$$114) {
        var v16672 = g$$142.duration;
        var v16673 = g$$142.callback;
        v11088 = this[h$$114](v16672, v16673);
      } else {
        v11088 = this.each(v1373);
      }
      v4256 = v11088;
    } else {
      v4256 = i$$171.call(this, g$$142);
    }
    return v4256;
  }
  function v1372(b$$434, c$$355, d$$278, e$$254) {
    function v1371(a$$482, c$$356) {
      var f$$113 = b$$434.cssUnit(c$$356);
      var v11090 = f$$113[0];
      var v4257 = v11090 > 0;
      if (v4257) {
        var v16674 = f$$113[0];
        var v11091 = v16674 * d$$278;
        var v11092 = f$$113[1];
        e$$254[c$$356] = v11091 + v11092;
      }
      return;
    }
    e$$254 = e$$254 || {};
    a$$470.each(c$$355, v1371);
    return e$$254;
  }
  function v1370(b$$433) {
    var c$$354;
    var d$$277 = document.activeElement;
    var v4258;
    var v16675 = b$$433.parent();
    var v11093 = v16675.is(".ui-effects-wrapper");
    if (v11093) {
      var v20685 = b$$433.parent();
      c$$354 = v20685.replaceWith(b$$433);
      var v26816 = b$$433[0];
      var v24931 = v26816 === d$$277;
      var v26818 = !v24931;
      if (v26818) {
        var v26817 = b$$433[0];
        v24931 = a$$470.contains(v26817, d$$277);
      }
      var v20686 = v24931;
      if (v20686) {
        var v24932 = a$$470(d$$277);
        v24932.focus();
      }
      v4258 = c$$354;
    } else {
      v4258 = b$$433;
    }
    return v4258;
  }
  function v1369(b$$432) {
    function v1368(a$$481, d$$276) {
      var v11094 = c$$353;
      var v31060 = b$$432.css(d$$276);
      v11094[d$$276] = v31060;
      var v20687 = c$$353[d$$276];
      var v16676 = parseInt(v20687, 10);
      var v11095 = isNaN(v16676);
      if (v11095) {
        c$$353[d$$276] = "auto";
      }
      return;
    }
    var v11096 = b$$432.parent();
    var v4259 = v11096.is(".ui-effects-wrapper");
    if (v4259) {
      return b$$432.parent();
    }
    var v11097 = !0;
    var v4260 = b$$432.outerWidth(v11097);
    var v11098 = !0;
    var v4261 = b$$432.outerHeight(v11098);
    var v4262 = b$$432.css("float");
    var c$$353 = {width:v4260, height:v4261, "float":v4262};
    var v11099 = a$$470("<div></div>");
    var v4263 = v11099.addClass("ui-effects-wrapper");
    var v4264 = {fontSize:"100%", background:"transparent", border:"none", margin:0, padding:0};
    var d$$275 = v4263.css(v4264);
    var e$$253 = document.activeElement;
    try {
    } catch (f$$112) {
      e$$253 = document.body;
    }
    b$$432.wrap(d$$275);
    var v28108 = b$$432[0];
    var v26819 = v28108 === e$$253;
    var v28110 = !v26819;
    if (v28110) {
      var v28109 = b$$432[0];
      v26819 = a$$470.contains(v28109, e$$253);
    }
    var v24933 = v26819;
    if (v24933) {
      var v26820 = a$$470(e$$253);
      v26820.focus();
    }
    d$$275 = b$$432.parent();
    var v16677;
    var v24934 = b$$432.css("position");
    var v20688 = v24934 == "static";
    if (v20688) {
      var v24935 = {position:"relative"};
      d$$275.css(v24935);
      var v24936 = {position:"relative"};
      v16677 = b$$432.css(v24936);
    } else {
      var v28111 = b$$432.css("position");
      var v28112 = b$$432.css("z-index");
      var v26821 = {position:v28111, zIndex:v28112};
      a$$470.extend(c$$353, v26821);
      var v26822 = ["top", "left", "bottom", "right"];
      a$$470.each(v26822, v1368);
      var v24937 = {position:"relative", top:0, left:0, right:"auto", bottom:"auto"};
      v16677 = b$$432.css(v24937);
    }
    v16677;
    var v11100 = d$$275.css(c$$353);
    return v11100.show();
  }
  function v1367(a$$480, b$$431) {
    var c$$352;
    var d$$274;
    var v4267 = a$$480[0];
    switch(v4267) {
      case "top":
        c$$352 = 0;
        break;
      case "middle":
        c$$352 = .5;
        break;
      case "bottom":
        c$$352 = 1;
        break;
      default:
        var v4265 = a$$480[0];
        var v4266 = b$$431.height;
        c$$352 = v4265 / v4266;
    }
    var v4270 = a$$480[1];
    switch(v4270) {
      case "left":
        d$$274 = 0;
        break;
      case "center":
        d$$274 = .5;
        break;
      case "right":
        d$$274 = 1;
        break;
      default:
        var v4268 = a$$480[1];
        var v4269 = b$$431.width;
        d$$274 = v4268 / v4269;
    }
    return{x:d$$274, y:c$$352};
  }
  function v1366(a$$479, b$$430) {
    var v11101 = b$$430 == "toggle";
    if (v11101) {
      var v16678;
      var v20689 = a$$479.is(":hidden");
      if (v20689) {
        v16678 = "show";
      } else {
        v16678 = "hide";
      }
      b$$430 = v16678;
    }
    return b$$430;
  }
  function v1365(a$$478, b$$429) {
    var c$$351 = 0;
    var v11102 = b$$429.length;
    var v4272 = c$$351 < v11102;
    for (;v4272;) {
      var v11103 = b$$429[c$$351];
      var v4271 = v11103 !== null;
      if (v4271) {
        var v11104 = b$$429[c$$351];
        var v20690 = b$$429[c$$351];
        var v16679 = "ec.storage." + v20690;
        var v11105 = a$$478.data(v16679);
        a$$478.css(v11104, v11105);
      }
      c$$351++;
      var v11106 = b$$429.length;
      v4272 = c$$351 < v11106;
    }
    return;
  }
  function v1364(a$$477, b$$428) {
    var c$$350 = 0;
    var v11107 = b$$428.length;
    var v4274 = c$$350 < v11107;
    for (;v4274;) {
      var v11108 = b$$428[c$$350];
      var v4273 = v11108 !== null;
      if (v4273) {
        var v16680 = b$$428[c$$350];
        var v11109 = "ec.storage." + v16680;
        var v20691 = a$$477[0];
        var v16681 = v20691.style;
        var v16682 = b$$428[c$$350];
        var v11110 = v16681[v16682];
        a$$477.data(v11109, v11110);
      }
      c$$350++;
      var v11111 = b$$428.length;
      v4274 = c$$350 < v11111;
    }
    return;
  }
  function v1363(b$$427, c$$349, d$$273, e$$252, f$$111) {
    var v11112 = a$$470.effects;
    var v4275 = v11112.animateClass;
    var v11113 = {add:c$$349, remove:b$$427};
    var v4276 = [v11113, d$$273, e$$252, f$$111];
    return v4275.apply(this, v4276);
  }
  function v1362(c$$348, d$$272, e$$251, f$$110, g$$141) {
    var v4277;
    var v20692 = typeof d$$272;
    var v16683 = v20692 == "boolean";
    var v20693 = !v16683;
    if (v20693) {
      v16683 = d$$272 === b$$414;
    }
    var v11117 = v16683;
    if (v11117) {
      var v11114;
      if (e$$251) {
        var v20694 = a$$470.effects;
        var v16684 = v20694.animateClass;
        var v24938;
        if (d$$272) {
          v24938 = {add:c$$348};
        } else {
          v24938 = {remove:c$$348};
        }
        var v20695 = v24938;
        var v16685 = [v20695, e$$251, f$$110, g$$141];
        v11114 = v16684.apply(this, v16685);
      } else {
        v11114 = this._toggleClass(c$$348, d$$272);
      }
      v4277 = v11114;
    } else {
      var v16686 = a$$470.effects;
      var v11115 = v16686.animateClass;
      var v16687 = {toggle:c$$348};
      var v11116 = [v16687, d$$272, e$$251, f$$110];
      v4277 = v11115.apply(this, v11116);
    }
    return v4277;
  }
  function v1361(b$$426, c$$347, d$$271, e$$250) {
    var v4278;
    if (c$$347) {
      var v16688 = a$$470.effects;
      var v11118 = v16688.animateClass;
      var v16689 = {remove:b$$426};
      var v11119 = [v16689, c$$347, d$$271, e$$250];
      v4278 = v11118.apply(this, v11119);
    } else {
      v4278 = this._removeClass(b$$426);
    }
    return v4278;
  }
  function v1360(b$$425, c$$346, d$$270, e$$249) {
    var v4279;
    if (c$$346) {
      var v16690 = a$$470.effects;
      var v11120 = v16690.animateClass;
      var v16691 = {add:b$$425};
      var v11121 = [v16691, c$$346, d$$270, e$$249];
      v4279 = v11120.apply(this, v11121);
    } else {
      v4279 = this._addClass(b$$425);
    }
    return v4279;
  }
  function v1359(b$$424, c$$343, d$$269, e$$248) {
    function v1358() {
      function v1357() {
        function v1356(a$$476, c$$345) {
          var v4280 = b$$424[c$$345];
          if (v4280) {
            var v11122 = c$$345 + "Class";
            var v11123 = b$$424[c$$345];
            g$$140[v11122](v11123);
          }
          return;
        }
        a$$470.each(f$$109, v1356);
        var v20696;
        var v28113 = g$$140.attr("style");
        var v26823 = typeof v28113;
        var v24939 = v26823 == "object";
        if (v24939) {
          var v26824 = g$$140.attr("style");
          v26824.cssText = "";
          var v26825 = g$$140.attr("style");
          v20696 = v26825.cssText = k$$56;
        } else {
          v20696 = g$$140.attr("style", k$$56);
        }
        v20696;
        if (e$$248) {
          e$$248.apply(this, arguments);
        }
        a$$470.dequeue(this);
        return;
      }
      function v1355(a$$475, c$$344) {
        var v4281 = b$$424[c$$344];
        if (v4281) {
          var v11124 = c$$344 + "Class";
          var v11125 = b$$424[c$$344];
          g$$140[v11124](v11125);
        }
        return;
      }
      var g$$140 = a$$470(this);
      var v4282 = g$$140.attr("style");
      var v11126 = !v4282;
      if (v11126) {
        v4282 = " ";
      }
      var k$$56 = v4282;
      var v4283 = h$$113.call(this);
      var l$$66 = i$$170(v4283);
      var m$$37;
      var v4284 = g$$140.attr("class");
      var v11127 = !v4284;
      if (v11127) {
        v4284 = "";
      }
      var n$$86 = v4284;
      a$$470.each(f$$109, v1355);
      var v20697 = h$$113.call(this);
      m$$37 = i$$170(v20697);
      g$$140.attr("class", n$$86);
      var v11128 = j$$81(l$$66, m$$37);
      var v16692 = !1;
      var v11129 = {queue:v16692, duration:c$$343, easing:d$$269, complete:v1357};
      g$$140.animate(v11128, v11129);
      return;
    }
    var v11130 = a$$470.isFunction(d$$269);
    if (v11130) {
      e$$248 = d$$269;
      d$$269 = null;
    }
    return this.queue(v1358);
  }
  function v1354(b$$423, e$$247) {
    function v1353(a$$474) {
      var JSCompiler_temp$$8;
      var v4288 = JSCompiler_temp$$8 = a$$474.colorInit;
      if (v4288) {
      } else {
        var JSCompiler_inline_result$$9;
        var b$$inline_70 = a$$474.elem;
        var d$$inline_71 = e$$247;
        var e$$inline_72;
        var v4287 = b$$inline_70 = b$$inline_70.parentNode;
        do {
          var v11131 = a$$470.curCSS;
          var v16693 = !v11131;
          if (v16693) {
            v11131 = a$$470.css;
          }
          var v4285 = v11131;
          e$$inline_72 = v4285(b$$inline_70, d$$inline_71);
          var v16694 = e$$inline_72 != "";
          if (v16694) {
            v16694 = e$$inline_72 != "transparent";
          }
          var v11132 = v16694;
          var v16695 = !v11132;
          if (v16695) {
            v11132 = a$$470.nodeName(b$$inline_70, "body");
          }
          var v4286 = v11132;
          if (v4286) {
            break;
          }
          d$$inline_71 = "backgroundColor";
          v4287 = b$$inline_70 = b$$inline_70.parentNode;
        } while (v4287);
        JSCompiler_inline_result$$9 = c$$337(e$$inline_72);
        a$$474.start = JSCompiler_inline_result$$9;
        var v16696 = a$$474.end;
        var v31061 = c$$337(v16696);
        a$$474.end = v31061;
        JSCompiler_temp$$8 = a$$474.colorInit = !0;
      }
      JSCompiler_temp$$8;
      var v16697 = a$$474.elem;
      var v11133 = v16697.style;
      var v11134 = e$$247;
      var v30465 = a$$474.pos;
      var v30678 = a$$474.end;
      var v30598 = v30678[0];
      var v30679 = a$$474.start;
      var v30599 = v30679[0];
      var v30466 = v30598 - v30599;
      var v30326 = v30465 * v30466;
      var v30467 = a$$474.start;
      var v30327 = v30467[0];
      var v30123 = v30326 + v30327;
      var v29868 = parseInt(v30123, 10);
      var v29530 = Math.min(v29868, 255);
      var v28961 = Math.max(v29530, 0);
      var v28114 = "rgb(" + v28961;
      var v26826 = v28114 + ",";
      var v30124 = a$$474.pos;
      var v30468 = a$$474.end;
      var v30328 = v30468[1];
      var v30469 = a$$474.start;
      var v30329 = v30469[1];
      var v30125 = v30328 - v30329;
      var v29869 = v30124 * v30125;
      var v30126 = a$$474.start;
      var v29870 = v30126[1];
      var v29531 = v29869 + v29870;
      var v28962 = parseInt(v29531, 10);
      var v28115 = Math.min(v28962, 255);
      var v26827 = Math.max(v28115, 0);
      var v24940 = v26826 + v26827;
      var v20698 = v24940 + ",";
      var v29532 = a$$474.pos;
      var v30127 = a$$474.end;
      var v29871 = v30127[2];
      var v30128 = a$$474.start;
      var v29872 = v30128[2];
      var v29533 = v29871 - v29872;
      var v28963 = v29532 * v29533;
      var v29534 = a$$474.start;
      var v28964 = v29534[2];
      var v28116 = v28963 + v28964;
      var v26828 = parseInt(v28116, 10);
      var v24941 = Math.min(v26828, 255);
      var v20699 = Math.max(v24941, 0);
      var v16698 = v20698 + v20699;
      v11133[v11134] = v16698 + ")";
      return;
    }
    var v11135 = a$$470.fx;
    var v4289 = v11135.step;
    v4289[e$$247] = v1353;
    return;
  }
  function c$$337(b$$415) {
    var c$$338;
    var v4290;
    var v20700 = b$$415;
    if (v20700) {
      var v24942 = b$$415.constructor;
      v20700 = v24942 == Array;
    }
    var v16699 = v20700;
    if (v16699) {
      var v20701 = b$$415.length;
      v16699 = v20701 == 3;
    }
    var v11137 = v16699;
    if (v11137) {
      v4290 = b$$415;
    } else {
      var v11136;
      var v16704 = c$$338 = /rgb\(\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*\)/.exec(b$$415);
      if (v16704) {
        var v20702 = c$$338[1];
        var v16700 = parseInt(v20702, 10);
        var v20703 = c$$338[2];
        var v16701 = parseInt(v20703, 10);
        var v20704 = c$$338[3];
        var v16702 = parseInt(v20704, 10);
        v11136 = [v16700, v16701, v16702];
      } else {
        var v16703;
        var v20709 = c$$338 = /rgb\(\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*\)/.exec(b$$415);
        if (v20709) {
          var v26829 = c$$338[1];
          var v24943 = parseFloat(v26829);
          var v20705 = v24943 * 2.55;
          var v26830 = c$$338[2];
          var v24944 = parseFloat(v26830);
          var v20706 = v24944 * 2.55;
          var v26831 = c$$338[3];
          var v24945 = parseFloat(v26831);
          var v20707 = v24945 * 2.55;
          v16703 = [v20705, v20706, v20707];
        } else {
          var v20708;
          var v24950 = c$$338 = /#([a-fA-F0-9]{2})([a-fA-F0-9]{2})([a-fA-F0-9]{2})/.exec(b$$415);
          if (v24950) {
            var v26832 = c$$338[1];
            var v24946 = parseInt(v26832, 16);
            var v26833 = c$$338[2];
            var v24947 = parseInt(v26833, 16);
            var v26834 = c$$338[3];
            var v24948 = parseInt(v26834, 16);
            v20708 = [v24946, v24947, v24948];
          } else {
            var v24949;
            var v26839 = c$$338 = /#([a-fA-F0-9])([a-fA-F0-9])([a-fA-F0-9])/.exec(b$$415);
            if (v26839) {
              var v28965 = c$$338[1];
              var v28966 = c$$338[1];
              var v28117 = v28965 + v28966;
              var v26835 = parseInt(v28117, 16);
              var v28967 = c$$338[2];
              var v28968 = c$$338[2];
              var v28118 = v28967 + v28968;
              var v26836 = parseInt(v28118, 16);
              var v28969 = c$$338[3];
              var v28970 = c$$338[3];
              var v28119 = v28969 + v28970;
              var v26837 = parseInt(v28119, 16);
              v24949 = [v26835, v26836, v26837];
            } else {
              var v26838;
              var v28122 = c$$338 = /rgba\(0, 0, 0, 0\)/.exec(b$$415);
              if (v28122) {
                v26838 = e$$243.transparent;
              } else {
                var v28120 = e$$243;
                var v28971 = a$$470.trim(b$$415);
                var v28121 = v28971.toLowerCase();
                v26838 = v28120[v28121];
              }
              v24949 = v26838;
            }
            v20708 = v24949;
          }
          v16703 = v20708;
        }
        v11136 = v16703;
      }
      v4290 = v11136;
    }
    return v4290;
  }
  function h$$113() {
    function v1352(a$$472, b$$418) {
      return b$$418.toUpperCase();
    }
    var v4291;
    var v11139 = document.defaultView;
    if (v11139) {
      var v11138 = document.defaultView;
      v4291 = v11138.getComputedStyle(this, null);
    } else {
      v4291 = this.currentStyle;
    }
    var a$$471 = v4291;
    var b$$417 = {};
    var c$$339;
    var d$$265;
    var v20710 = a$$471;
    if (v20710) {
      v20710 = a$$471.length;
    }
    var v16705 = v20710;
    if (v16705) {
      v16705 = a$$471[0];
    }
    var v11140 = v16705;
    if (v11140) {
      var v16706 = a$$471[0];
      v11140 = a$$471[v16706];
    }
    var v4294 = v11140;
    if (v4294) {
      var e$$245 = a$$471.length;
      var v4292 = e$$245;
      e$$245 = e$$245 - 1;
      for (;v4292;) {
        c$$339 = a$$471[e$$245];
        var v20711 = a$$471[c$$339];
        var v16707 = typeof v20711;
        var v11141 = v16707 == "string";
        if (v11141) {
          d$$265 = c$$339.replace(/\-(\w)/g, v1352);
          b$$417[d$$265] = a$$471[c$$339];
        }
        v4292 = e$$245;
        e$$245 = e$$245 - 1;
      }
    } else {
      for (c$$339 in a$$471) {
        var v16708 = a$$471[c$$339];
        var v11142 = typeof v16708;
        var v4293 = v11142 == "string";
        if (v4293) {
          b$$417[c$$339] = a$$471[c$$339];
        }
      }
    }
    return b$$417;
  }
  function i$$170(b$$419) {
    var c$$340;
    var d$$266;
    for (c$$340 in b$$419) {
      d$$266 = b$$419[c$$340];
      var v26840 = d$$266 == null;
      var v28123 = !v26840;
      if (v28123) {
        v26840 = a$$470.isFunction(d$$266);
      }
      var v24951 = v26840;
      var v26841 = !v24951;
      if (v26841) {
        v24951 = c$$340 in g$$139;
      }
      var v20712 = v24951;
      var v24952 = !v20712;
      if (v24952) {
        v20712 = /scrollbar/.test(c$$340);
      }
      var v16709 = v20712;
      var v20714 = !v16709;
      if (v20714) {
        var v24953 = /color/i.test(c$$340);
        var v20713 = !v24953;
        if (v20713) {
          var v24954 = parseFloat(d$$266);
          v20713 = isNaN(v24954);
        }
        v16709 = v20713;
      }
      var v11143 = v16709;
      if (v11143) {
        delete b$$419[c$$340];
      }
    }
    return b$$419;
  }
  function j$$81(a$$473, b$$420) {
    var c$$341 = {_:0};
    var d$$267;
    for (d$$267 in b$$420) {
      var v11144 = a$$473[d$$267];
      var v11145 = b$$420[d$$267];
      var v4295 = v11144 != v11145;
      if (v4295) {
        c$$341[d$$267] = b$$420[d$$267];
      }
    }
    return c$$341;
  }
  function k$$55(b$$421, c$$342, d$$268, e$$246) {
    var v16710 = typeof b$$421;
    var v11146 = v16710 == "object";
    if (v11146) {
      e$$246 = c$$342;
      d$$268 = null;
      c$$342 = b$$421;
      b$$421 = c$$342.effect;
    }
    var v11147 = a$$470.isFunction(c$$342);
    if (v11147) {
      e$$246 = c$$342;
      d$$268 = null;
      c$$342 = {};
    }
    var v16711 = typeof c$$342;
    var v11148 = v16711 == "number";
    var v16713 = !v11148;
    if (v16713) {
      var v20715 = a$$470.fx;
      var v16712 = v20715.speeds;
      v11148 = v16712[c$$342];
    }
    var v4296 = v11148;
    if (v4296) {
      e$$246 = d$$268;
      d$$268 = c$$342;
      c$$342 = {};
    }
    var v26842 = a$$470.isFunction(d$$268);
    if (v26842) {
      e$$246 = d$$268;
      d$$268 = null;
    }
    c$$342 = c$$342 || {};
    var v24955 = d$$268;
    var v26843 = !v24955;
    if (v26843) {
      v24955 = c$$342.duration;
    }
    d$$268 = v24955;
    var v20716;
    var v26844 = a$$470.fx;
    var v24957 = v26844.off;
    if (v24957) {
      v20716 = 0;
    } else {
      var v24956;
      var v28124 = typeof d$$268;
      var v26846 = v28124 == "number";
      if (v26846) {
        v24956 = d$$268;
      } else {
        var v26845;
        var v29535 = a$$470.fx;
        var v28972 = v29535.speeds;
        var v28127 = d$$268 in v28972;
        if (v28127) {
          var v28973 = a$$470.fx;
          var v28125 = v28973.speeds;
          v26845 = v28125[d$$268];
        } else {
          var v28974 = a$$470.fx;
          var v28126 = v28974.speeds;
          v26845 = v28126._default;
        }
        v24956 = v26845;
      }
      v20716 = v24956;
    }
    d$$268 = v20716;
    var v16714 = e$$246;
    var v20717 = !v16714;
    if (v20717) {
      v16714 = c$$342.complete;
    }
    e$$246 = v16714;
    return[b$$421, c$$342, d$$268, e$$246];
  }
  function l$$65(b$$422) {
    var v4297;
    var v20718 = !b$$422;
    var v24959 = !v20718;
    if (v24959) {
      var v24958 = typeof b$$422;
      v20718 = v24958 == "number";
    }
    var v16715 = v20718;
    var v20720 = !v16715;
    if (v20720) {
      var v24960 = a$$470.fx;
      var v20719 = v24960.speeds;
      v16715 = v20719[b$$422];
    }
    var v11150 = v16715;
    if (v11150) {
      v4297 = !0;
    } else {
      var v11149;
      var v24961 = typeof b$$422;
      var v20721 = v24961 == "string";
      if (v20721) {
        var v26847 = a$$470.effects;
        var v24962 = v26847[b$$422];
        v20721 = !v24962;
      }
      var v16716 = v20721;
      if (v16716) {
        v11149 = !0;
      } else {
        v11149 = !1;
      }
      v4297 = v11149;
    }
    return v4297;
  }
  a$$470.effects = {};
  var v11151 = ["backgroundColor", "borderBottomColor", "borderLeftColor", "borderRightColor", "borderTopColor", "borderColor", "color", "outlineColor"];
  a$$470.each(v11151, v1354);
  var v4298 = [0, 255, 255];
  var v4299 = [240, 255, 255];
  var v4300 = [245, 245, 220];
  var v4301 = [0, 0, 0];
  var v4302 = [0, 0, 255];
  var v4303 = [165, 42, 42];
  var v4304 = [0, 255, 255];
  var v4305 = [0, 0, 139];
  var v4306 = [0, 139, 139];
  var v4307 = [169, 169, 169];
  var v4308 = [0, 100, 0];
  var v4309 = [189, 183, 107];
  var v4310 = [139, 0, 139];
  var v4311 = [85, 107, 47];
  var v4312 = [255, 140, 0];
  var v4313 = [153, 50, 204];
  var v4314 = [139, 0, 0];
  var v4315 = [233, 150, 122];
  var v4316 = [148, 0, 211];
  var v4317 = [255, 0, 255];
  var v4318 = [255, 215, 0];
  var v4319 = [0, 128, 0];
  var v4320 = [75, 0, 130];
  var v4321 = [240, 230, 140];
  var v4322 = [173, 216, 230];
  var v4323 = [224, 255, 255];
  var v4324 = [144, 238, 144];
  var v4325 = [211, 211, 211];
  var v4326 = [255, 182, 193];
  var v4327 = [255, 255, 224];
  var v4328 = [0, 255, 0];
  var v4329 = [255, 0, 255];
  var v4330 = [128, 0, 0];
  var v4331 = [0, 0, 128];
  var v4332 = [128, 128, 0];
  var v4333 = [255, 165, 0];
  var v4334 = [255, 192, 203];
  var v4335 = [128, 0, 128];
  var v4336 = [128, 0, 128];
  var v4337 = [255, 0, 0];
  var v4338 = [192, 192, 192];
  var v4339 = [255, 255, 255];
  var v4340 = [255, 255, 0];
  var v4341 = [255, 255, 255];
  var e$$243 = {aqua:v4298, azure:v4299, beige:v4300, black:v4301, blue:v4302, brown:v4303, cyan:v4304, darkblue:v4305, darkcyan:v4306, darkgrey:v4307, darkgreen:v4308, darkkhaki:v4309, darkmagenta:v4310, darkolivegreen:v4311, darkorange:v4312, darkorchid:v4313, darkred:v4314, darksalmon:v4315, darkviolet:v4316, fuchsia:v4317, gold:v4318, green:v4319, indigo:v4320, khaki:v4321, lightblue:v4322, lightcyan:v4323, lightgreen:v4324, lightgrey:v4325, lightpink:v4326, lightyellow:v4327, lime:v4328, magenta:v4329, 
  maroon:v4330, navy:v4331, olive:v4332, orange:v4333, pink:v4334, purple:v4335, violet:v4336, red:v4337, silver:v4338, white:v4339, yellow:v4340, transparent:v4341};
  var f$$109 = ["add", "remove", "toggle"];
  var g$$139 = {border:1, borderBottom:1, borderColor:1, borderLeft:1, borderRight:1, borderTop:1, borderWidth:1, margin:1, padding:1};
  var v20722 = a$$470.effects;
  v20722.animateClass = v1359;
  var v20723 = a$$470.fn;
  var v26848 = a$$470.fn;
  var v24963 = v26848.addClass;
  var v26849 = a$$470.fn;
  var v24964 = v26849.removeClass;
  var v26850 = a$$470.fn;
  var v24965 = v26850.toggleClass;
  var v20724 = {_addClass:v24963, addClass:v1360, _removeClass:v24964, removeClass:v1361, _toggleClass:v24965, toggleClass:v1362, switchClass:v1363};
  v20723.extend(v20724);
  var v16717 = a$$470.effects;
  var v16718 = {version:"1.8.24", save:v1364, restore:v1365, setMode:v1366, getBaseline:v1367, createWrapper:v1369, removeWrapper:v1370, setTransition:v1372};
  a$$470.extend(v16717, v16718);
  var v11152 = a$$470.fn;
  var v20725 = a$$470.fn;
  var v16719 = v20725.show;
  var v20726 = a$$470.fn;
  var v16720 = v20726.hide;
  var v20727 = a$$470.fn;
  var v16721 = v20727.toggle;
  var v11153 = {effect:v1374, _show:v16719, show:v1375, _hide:v16720, hide:v1376, __toggle:v16721, toggle:v1377, cssUnit:v1379};
  v11152.extend(v11153);
  var m$$36 = {};
  var v16722 = ["Quad", "Cubic", "Quart", "Quint", "Expo"];
  a$$470.each(v16722, v1381);
  var v16723 = {Sine:v1382, Circ:v1383, Elastic:v1384, Back:v1385, Bounce:v1386};
  a$$470.extend(m$$36, v16723);
  a$$470.each(m$$36, v1389);
  return;
}
function v1351(a$$452, b$$380) {
  function v1350(b$$413) {
    var c$$336 = b$$413 || this;
    var v4342 = c$$336.helper;
    var v11154 = c$$336.placeholder;
    var v16724 = !v11154;
    if (v16724) {
      v11154 = a$$452([]);
    }
    var v4343 = v11154;
    var v4344 = c$$336.position;
    var v4345 = c$$336.originalPosition;
    var v4346 = c$$336.positionAbs;
    var v4347 = c$$336.currentItem;
    var v11155;
    if (b$$413) {
      v11155 = b$$413.element;
    } else {
      v11155 = null;
    }
    var v4348 = v11155;
    return{helper:v4342, placeholder:v4343, position:v4344, originalPosition:v4345, offset:v4346, item:v4347, sender:v4348};
  }
  function v1349() {
    var v24966 = a$$452.Widget;
    var v20728 = v24966.prototype;
    var v16725 = v20728._trigger;
    var v11156 = v16725.apply(this, arguments);
    var v11157 = !1;
    var v4349 = v11156 === v11157;
    if (v4349) {
      this.cancel();
    }
    return;
  }
  function v1348(b$$408, c$$335) {
    function v1347(a$$469) {
      function v1346(b$$412) {
        var v4350 = this._uiHash(this);
        a$$469._trigger("out", b$$412, v4350);
        return;
      }
      return v1346;
    }
    function v1345(a$$468) {
      function v1344(b$$411) {
        var v4351 = this._uiHash(this);
        a$$468._trigger("deactivate", b$$411, v4351);
        return;
      }
      return v1344;
    }
    function v1343(a$$467) {
      function v1342(b$$410) {
        var v4352 = this._uiHash(this);
        a$$467._trigger("update", b$$410, v4352);
        return;
      }
      return v1342;
    }
    function v1341(a$$466) {
      function v1340(b$$409) {
        var v4353 = this._uiHash(this);
        a$$466._trigger("receive", b$$409, v4353);
        return;
      }
      return v1340;
    }
    function v1339(a$$465) {
      var v4354 = this._uiHash();
      this._trigger("remove", a$$465, v4354);
      return;
    }
    function v1338(a$$464) {
      var v4355 = this._uiHash();
      this._trigger("update", a$$464, v4355);
      return;
    }
    function v1337(a$$463) {
      var v11158 = this.fromOutside;
      var v4356 = this._uiHash(v11158);
      this._trigger("receive", a$$463, v4356);
      return;
    }
    this.reverting = !1;
    var d$$262 = [];
    var e$$242 = this;
    var v20729 = this._noFinalSort;
    var v16726 = !v20729;
    if (v16726) {
      var v24967 = this.currentItem;
      var v20730 = v24967.parent();
      v16726 = v20730.length;
    }
    var v11159 = v16726;
    if (v11159) {
      var v16727 = this.placeholder;
      var v16728 = this.currentItem;
      v16727.before(v16728);
    }
    this._noFinalSort = null;
    var v16729 = this.helper;
    var v11160 = v16729[0];
    var v16730 = this.currentItem;
    var v11161 = v16730[0];
    var v4362 = v11160 == v11161;
    if (v4362) {
      var f$$108;
      var v4359 = this._storedCSS;
      for (f$$108 in v4359) {
        var v20731 = this._storedCSS;
        var v16731 = v20731[f$$108];
        var v11162 = v16731 == "auto";
        var v16733 = !v11162;
        if (v16733) {
          var v20732 = this._storedCSS;
          var v16732 = v20732[f$$108];
          v11162 = v16732 == "static";
        }
        var v4358 = v11162;
        if (v4358) {
          var v4357 = this._storedCSS;
          v4357[f$$108] = "";
        }
      }
      var v11163 = this.currentItem;
      var v11164 = this._storedCSS;
      var v4360 = v11163.css(v11164);
      v4360.removeClass("ui-sortable-helper");
    } else {
      var v4361 = this.currentItem;
      v4361.show();
    }
    var v20733 = this.fromOutside;
    if (v20733) {
      v20733 = !c$$335;
    }
    var v16734 = v20733;
    if (v16734) {
      d$$262.push(v1337);
    }
    var v26851 = this.fromOutside;
    var v28130 = !v26851;
    if (v28130) {
      var v28975 = this.domPosition;
      var v28128 = v28975.prev;
      var v29873 = this.currentItem;
      var v29536 = v29873.prev();
      var v28976 = v29536.not(".ui-sortable-helper");
      var v28129 = v28976[0];
      v26851 = v28128 != v28129;
    }
    var v24968 = v26851;
    var v26854 = !v24968;
    if (v26854) {
      var v28131 = this.domPosition;
      var v26852 = v28131.parent;
      var v28977 = this.currentItem;
      var v28132 = v28977.parent();
      var v26853 = v28132[0];
      v24968 = v26852 != v26853;
    }
    var v20734 = v24968;
    if (v20734) {
      v20734 = !c$$335;
    }
    var v16735 = v20734;
    if (v16735) {
      d$$262.push(v1338);
    }
    var v16736 = this.currentContainer;
    var v11165 = this !== v16736;
    if (v11165) {
      var v20735 = !c$$335;
      if (v20735) {
        d$$262.push(v1339);
        var v28133 = this.currentContainer;
        var v26855 = v1341.call(this, v28133);
        d$$262.push(v26855);
        var v26856 = this.currentContainer;
        var v24969 = v1343.call(this, v26856);
        d$$262.push(v24969);
      }
    }
    var v11166 = this.containers;
    var v4363 = v11166.length;
    f$$108 = v4363 - 1;
    var v4364 = f$$108 >= 0;
    for (;v4364;) {
      var v16738 = !c$$335;
      if (v16738) {
        var v24970 = this.containers;
        var v20736 = v24970[f$$108];
        var v16737 = v1345.call(this, v20736);
        d$$262.push(v16737);
      }
      var v24971 = this.containers;
      var v20737 = v24971[f$$108];
      var v16739 = v20737.containerCache;
      var v11167 = v16739.over;
      if (v11167) {
        var v26857 = this.containers;
        var v24972 = v26857[f$$108];
        var v20738 = v1347.call(this, v24972);
        d$$262.push(v20738);
        var v26858 = this.containers;
        var v24973 = v26858[f$$108];
        var v20739 = v24973.containerCache;
        v20739.over = 0;
      }
      f$$108--;
      v4364 = f$$108 >= 0;
    }
    var v20740 = this._storedCursor;
    if (v20740) {
      var v24974 = a$$452("body");
      var v24975 = this._storedCursor;
      v24974.css("cursor", v24975);
    }
    var v20741 = this._storedOpacity;
    if (v20741) {
      var v24976 = this.helper;
      var v24977 = this._storedOpacity;
      v24976.css("opacity", v24977);
    }
    var v16740 = this._storedZIndex;
    if (v16740) {
      var v20742 = this.helper;
      var v24978;
      var v28134 = this._storedZIndex;
      var v26859 = v28134 == "auto";
      if (v26859) {
        v24978 = "";
      } else {
        v24978 = this._storedZIndex;
      }
      var v20743 = v24978;
      v20742.css("zIndex", v20743);
    }
    this.dragging = !1;
    var v4370 = this.cancelHelperRemoval;
    if (v4370) {
      var v4369 = !c$$335;
      if (v4369) {
        var v4365 = this._uiHash();
        this._trigger("beforeStop", b$$408, v4365);
        f$$108 = 0;
        var v11168 = d$$262.length;
        var v4367 = f$$108 < v11168;
        for (;v4367;) {
          var v4366 = d$$262[f$$108];
          v4366.call(this, b$$408);
          f$$108++;
          var v11169 = d$$262.length;
          v4367 = f$$108 < v11169;
        }
        var v4368 = this._uiHash();
        this._trigger("stop", b$$408, v4368);
      }
      this.fromOutside = !1;
      return!1;
    }
    var v24980 = !c$$335;
    if (v24980) {
      var v24979 = this._uiHash();
      this._trigger("beforeStop", b$$408, v24979);
    }
    var v26860 = this.placeholder;
    var v24981 = v26860[0];
    var v20744 = v24981.parentNode;
    var v24982 = this.placeholder;
    var v20745 = v24982[0];
    v20744.removeChild(v20745);
    var v24983 = this.helper;
    var v20746 = v24983[0];
    var v24984 = this.currentItem;
    var v20747 = v24984[0];
    var v16741 = v20746 != v20747;
    if (v16741) {
      var v20748 = this.helper;
      v20748.remove();
    }
    this.helper = null;
    var v4374 = !c$$335;
    if (v4374) {
      f$$108 = 0;
      var v11170 = d$$262.length;
      var v4372 = f$$108 < v11170;
      for (;v4372;) {
        var v4371 = d$$262[f$$108];
        v4371.call(this, b$$408);
        f$$108++;
        var v11171 = d$$262.length;
        v4372 = f$$108 < v11171;
      }
      var v4373 = this._uiHash();
      this._trigger("stop", b$$408, v4373);
    }
    this.fromOutside = !1;
    return!0;
  }
  function v1336(a$$462, b$$407, c$$334, d$$261) {
    function v1335() {
      var v11172 = e$$241.counter;
      var v4375 = f$$107 == v11172;
      if (v4375) {
        var v11173 = !d$$261;
        e$$241.refreshPositions(v11173);
      }
      return;
    }
    var v11174;
    if (c$$334) {
      var v16742 = c$$334[0];
      var v20749 = this.placeholder;
      var v16743 = v20749[0];
      v11174 = v16742.appendChild(v16743);
    } else {
      var v24985 = b$$407.item;
      var v20750 = v24985[0];
      var v16744 = v20750.parentNode;
      var v20751 = this.placeholder;
      var v16745 = v20751[0];
      var v20752;
      var v26861 = this.direction;
      var v24988 = v26861 == "down";
      if (v24988) {
        var v24986 = b$$407.item;
        v20752 = v24986[0];
      } else {
        var v26862 = b$$407.item;
        var v24987 = v26862[0];
        v20752 = v24987.nextSibling;
      }
      var v16746 = v20752;
      v11174 = v16744.insertBefore(v16745, v16746);
    }
    v11174;
    var v11175;
    var v16747 = this.counter;
    if (v16747) {
      var v20753 = this.counter;
      v11175 = this.counter = v20753 + 1;
    } else {
      v11175 = 1;
    }
    this.counter = v11175;
    var e$$241 = this;
    var f$$107 = this.counter;
    window.setTimeout(v1335, 0);
    return;
  }
  function v1334(b$$406) {
    var c$$333 = this.options;
    var v4376;
    var v20754 = this.cssPosition;
    var v16748 = v20754 == "absolute";
    if (v16748) {
      var v26863 = this.scrollParent;
      var v24989 = v26863[0];
      var v20755 = v24989 == document;
      var v24991 = !v20755;
      if (v24991) {
        var v26864 = a$$452.ui;
        var v28135 = this.scrollParent;
        var v26865 = v28135[0];
        var v28136 = this.offsetParent;
        var v26866 = v28136[0];
        var v24990 = v26864.contains(v26865, v26866);
        v20755 = !v24990;
      }
      v16748 = v20755;
    }
    var v11176 = v16748;
    if (v11176) {
      v4376 = this.offsetParent;
    } else {
      v4376 = this.scrollParent;
    }
    var d$$260 = v4376;
    var v11177 = d$$260[0];
    var v4377 = v11177.tagName;
    var e$$240 = /(html|body)/i.test(v4377);
    var v16749 = this.cssPosition;
    var v11178 = v16749 == "relative";
    if (v11178) {
      var v24992 = this.scrollParent;
      var v20756 = v24992[0];
      var v16750 = v20756 == document;
      var v20759 = !v16750;
      if (v20759) {
        var v24993 = this.scrollParent;
        var v20757 = v24993[0];
        var v24994 = this.offsetParent;
        var v20758 = v24994[0];
        v16750 = v20757 == v20758;
      }
      v11178 = v16750;
    }
    var v4378 = v11178;
    if (v4378) {
      var v11179 = this.offset;
      var v31062 = this._getRelativeOffset();
      v11179.relative = v31062;
    }
    var f$$106 = b$$406.pageX;
    var g$$138 = b$$406.pageY;
    var v4387 = this.originalPosition;
    if (v4387) {
      var v4379 = this.containment;
      if (v4379) {
        var v28137 = b$$406.pageX;
        var v29537 = this.offset;
        var v28978 = v29537.click;
        var v28138 = v28978.left;
        var v26867 = v28137 - v28138;
        var v28139 = this.containment;
        var v26868 = v28139[0];
        var v24995 = v26867 < v26868;
        if (v24995) {
          var v28140 = this.containment;
          var v26869 = v28140[0];
          var v28979 = this.offset;
          var v28141 = v28979.click;
          var v26870 = v28141.left;
          f$$106 = v26869 + v26870;
        }
        var v28142 = b$$406.pageY;
        var v29538 = this.offset;
        var v28980 = v29538.click;
        var v28143 = v28980.top;
        var v26871 = v28142 - v28143;
        var v28144 = this.containment;
        var v26872 = v28144[1];
        var v24996 = v26871 < v26872;
        if (v24996) {
          var v28145 = this.containment;
          var v26873 = v28145[1];
          var v28981 = this.offset;
          var v28146 = v28981.click;
          var v26874 = v28146.top;
          g$$138 = v26873 + v26874;
        }
        var v26875 = b$$406.pageX;
        var v28982 = this.offset;
        var v28147 = v28982.click;
        var v26876 = v28147.left;
        var v24997 = v26875 - v26876;
        var v26877 = this.containment;
        var v24998 = v26877[2];
        var v20760 = v24997 > v24998;
        if (v20760) {
          var v26878 = this.containment;
          var v24999 = v26878[2];
          var v28148 = this.offset;
          var v26879 = v28148.click;
          var v25000 = v26879.left;
          f$$106 = v24999 + v25000;
        }
        var v25001 = b$$406.pageY;
        var v28149 = this.offset;
        var v26880 = v28149.click;
        var v25002 = v26880.top;
        var v20761 = v25001 - v25002;
        var v25003 = this.containment;
        var v20762 = v25003[3];
        var v16751 = v20761 > v20762;
        if (v16751) {
          var v25004 = this.containment;
          var v20763 = v25004[3];
          var v26881 = this.offset;
          var v25005 = v26881.click;
          var v20764 = v25005.top;
          g$$138 = v20763 + v20764;
        }
      }
      var v4386 = c$$333.grid;
      if (v4386) {
        var v4380 = this.originalPageY;
        var v25006 = this.originalPageY;
        var v20765 = g$$138 - v25006;
        var v25007 = c$$333.grid;
        var v20766 = v25007[1];
        var v16752 = v20765 / v20766;
        var v11180 = Math.round(v16752);
        var v16753 = c$$333.grid;
        var v11181 = v16753[1];
        var v4381 = v11180 * v11181;
        var h$$112 = v4380 + v4381;
        var v4382;
        var v11183 = this.containment;
        if (v11183) {
          var v11182;
          var v28983 = this.offset;
          var v28150 = v28983.click;
          var v26882 = v28150.top;
          var v25008 = h$$112 - v26882;
          var v26883 = this.containment;
          var v25009 = v26883[1];
          var v20767 = v25008 < v25009;
          var v25012 = !v20767;
          if (v25012) {
            var v28984 = this.offset;
            var v28151 = v28984.click;
            var v26884 = v28151.top;
            var v25010 = h$$112 - v26884;
            var v26885 = this.containment;
            var v25011 = v26885[3];
            v20767 = v25010 > v25011;
          }
          var v16755 = v20767;
          if (v16755) {
            var v16754;
            var v28985 = this.offset;
            var v28152 = v28985.click;
            var v26886 = v28152.top;
            var v25013 = h$$112 - v26886;
            var v26887 = this.containment;
            var v25014 = v26887[1];
            var v20770 = v25013 < v25014;
            if (v20770) {
              var v25015 = c$$333.grid;
              var v20768 = v25015[1];
              v16754 = h$$112 + v20768;
            } else {
              var v25016 = c$$333.grid;
              var v20769 = v25016[1];
              v16754 = h$$112 - v20769;
            }
            v11182 = v16754;
          } else {
            v11182 = h$$112;
          }
          v4382 = v11182;
        } else {
          v4382 = h$$112;
        }
        g$$138 = v4382;
        var v4383 = this.originalPageX;
        var v25017 = this.originalPageX;
        var v20771 = f$$106 - v25017;
        var v25018 = c$$333.grid;
        var v20772 = v25018[0];
        var v16756 = v20771 / v20772;
        var v11184 = Math.round(v16756);
        var v16757 = c$$333.grid;
        var v11185 = v16757[0];
        var v4384 = v11184 * v11185;
        var i$$169 = v4383 + v4384;
        var v4385;
        var v11187 = this.containment;
        if (v11187) {
          var v11186;
          var v28986 = this.offset;
          var v28153 = v28986.click;
          var v26888 = v28153.left;
          var v25019 = i$$169 - v26888;
          var v26889 = this.containment;
          var v25020 = v26889[0];
          var v20773 = v25019 < v25020;
          var v25023 = !v20773;
          if (v25023) {
            var v28987 = this.offset;
            var v28154 = v28987.click;
            var v26890 = v28154.left;
            var v25021 = i$$169 - v26890;
            var v26891 = this.containment;
            var v25022 = v26891[2];
            v20773 = v25021 > v25022;
          }
          var v16759 = v20773;
          if (v16759) {
            var v16758;
            var v28988 = this.offset;
            var v28155 = v28988.click;
            var v26892 = v28155.left;
            var v25024 = i$$169 - v26892;
            var v26893 = this.containment;
            var v25025 = v26893[0];
            var v20776 = v25024 < v25025;
            if (v20776) {
              var v25026 = c$$333.grid;
              var v20774 = v25026[0];
              v16758 = i$$169 + v20774;
            } else {
              var v25027 = c$$333.grid;
              var v20775 = v25027[0];
              v16758 = i$$169 - v20775;
            }
            v11186 = v16758;
          } else {
            v11186 = i$$169;
          }
          v4385 = v11186;
        } else {
          v4385 = i$$169;
        }
        f$$106 = v4385;
      }
    }
    var v28156 = this.offset;
    var v26894 = v28156.click;
    var v25028 = v26894.top;
    var v20777 = g$$138 - v25028;
    var v26895 = this.offset;
    var v25029 = v26895.relative;
    var v20778 = v25029.top;
    var v16760 = v20777 - v20778;
    var v25030 = this.offset;
    var v20779 = v25030.parent;
    var v16761 = v20779.top;
    var v11188 = v16760 - v16761;
    var v16762;
    var v26896 = a$$452.browser;
    var v25031 = v26896.safari;
    if (v25031) {
      var v26897 = this.cssPosition;
      v25031 = v26897 == "fixed";
    }
    var v20781 = v25031;
    if (v20781) {
      v16762 = 0;
    } else {
      var v20780;
      var v26898 = this.cssPosition;
      var v25034 = v26898 == "fixed";
      if (v25034) {
        var v26899 = this.scrollParent;
        var v25032 = v26899.scrollTop();
        v20780 = -v25032;
      } else {
        var v25033;
        if (e$$240) {
          v25033 = 0;
        } else {
          v25033 = d$$260.scrollTop();
        }
        v20780 = v25033;
      }
      v16762 = v20780;
    }
    var v11189 = v16762;
    var v4388 = v11188 + v11189;
    var v28157 = this.offset;
    var v26900 = v28157.click;
    var v25035 = v26900.left;
    var v20782 = f$$106 - v25035;
    var v26901 = this.offset;
    var v25036 = v26901.relative;
    var v20783 = v25036.left;
    var v16763 = v20782 - v20783;
    var v25037 = this.offset;
    var v20784 = v25037.parent;
    var v16764 = v20784.left;
    var v11190 = v16763 - v16764;
    var v16765;
    var v26902 = a$$452.browser;
    var v25038 = v26902.safari;
    if (v25038) {
      var v26903 = this.cssPosition;
      v25038 = v26903 == "fixed";
    }
    var v20786 = v25038;
    if (v20786) {
      v16765 = 0;
    } else {
      var v20785;
      var v26904 = this.cssPosition;
      var v25041 = v26904 == "fixed";
      if (v25041) {
        var v26905 = this.scrollParent;
        var v25039 = v26905.scrollLeft();
        v20785 = -v25039;
      } else {
        var v25040;
        if (e$$240) {
          v25040 = 0;
        } else {
          v25040 = d$$260.scrollLeft();
        }
        v20785 = v25040;
      }
      v16765 = v20785;
    }
    var v11191 = v16765;
    var v4389 = v11190 + v11191;
    return{top:v4388, left:v4389};
  }
  function v1333(b$$405, c$$332) {
    var v11192 = !c$$332;
    if (v11192) {
      c$$332 = this.position;
    }
    var v4390;
    var v11193 = b$$405 == "absolute";
    if (v11193) {
      v4390 = 1;
    } else {
      v4390 = -1;
    }
    var d$$259 = v4390;
    var e$$239 = this.options;
    var v4391;
    var v20787 = this.cssPosition;
    var v16766 = v20787 == "absolute";
    if (v16766) {
      var v26906 = this.scrollParent;
      var v25042 = v26906[0];
      var v20788 = v25042 == document;
      var v25044 = !v20788;
      if (v25044) {
        var v26907 = a$$452.ui;
        var v28158 = this.scrollParent;
        var v26908 = v28158[0];
        var v28159 = this.offsetParent;
        var v26909 = v28159[0];
        var v25043 = v26907.contains(v26908, v26909);
        v20788 = !v25043;
      }
      v16766 = v20788;
    }
    var v11194 = v16766;
    if (v11194) {
      v4391 = this.offsetParent;
    } else {
      v4391 = this.scrollParent;
    }
    var f$$105 = v4391;
    var v11195 = f$$105[0];
    var v4392 = v11195.tagName;
    var g$$137 = /(html|body)/i.test(v4392);
    var v20789 = c$$332.top;
    var v28160 = this.offset;
    var v26910 = v28160.relative;
    var v25045 = v26910.top;
    var v20790 = v25045 * d$$259;
    var v16767 = v20789 + v20790;
    var v26911 = this.offset;
    var v25046 = v26911.parent;
    var v20791 = v25046.top;
    var v16768 = v20791 * d$$259;
    var v11196 = v16767 + v16768;
    var v16769;
    var v26912 = a$$452.browser;
    var v25047 = v26912.safari;
    if (v25047) {
      var v26913 = this.cssPosition;
      v25047 = v26913 == "fixed";
    }
    var v20793 = v25047;
    if (v20793) {
      v16769 = 0;
    } else {
      var v25048;
      var v28161 = this.cssPosition;
      var v26916 = v28161 == "fixed";
      if (v26916) {
        var v28162 = this.scrollParent;
        var v26914 = v28162.scrollTop();
        v25048 = -v26914;
      } else {
        var v26915;
        if (g$$137) {
          v26915 = 0;
        } else {
          v26915 = f$$105.scrollTop();
        }
        v25048 = v26915;
      }
      var v20792 = v25048;
      v16769 = v20792 * d$$259;
    }
    var v11197 = v16769;
    var v4393 = v11196 - v11197;
    var v20794 = c$$332.left;
    var v28163 = this.offset;
    var v26917 = v28163.relative;
    var v25049 = v26917.left;
    var v20795 = v25049 * d$$259;
    var v16770 = v20794 + v20795;
    var v26918 = this.offset;
    var v25050 = v26918.parent;
    var v20796 = v25050.left;
    var v16771 = v20796 * d$$259;
    var v11198 = v16770 + v16771;
    var v16772;
    var v26919 = a$$452.browser;
    var v25051 = v26919.safari;
    if (v25051) {
      var v26920 = this.cssPosition;
      v25051 = v26920 == "fixed";
    }
    var v20798 = v25051;
    if (v20798) {
      v16772 = 0;
    } else {
      var v25052;
      var v28164 = this.cssPosition;
      var v26923 = v28164 == "fixed";
      if (v26923) {
        var v28165 = this.scrollParent;
        var v26921 = v28165.scrollLeft();
        v25052 = -v26921;
      } else {
        var v26922;
        if (g$$137) {
          v26922 = 0;
        } else {
          v26922 = f$$105.scrollLeft();
        }
        v25052 = v26922;
      }
      var v20797 = v25052;
      v16772 = v20797 * d$$259;
    }
    var v11199 = v16772;
    var v4394 = v11198 - v11199;
    return{top:v4393, left:v4394};
  }
  function v1332() {
    var b$$404 = this.options;
    var v11200 = b$$404.containment;
    var v4395 = v11200 == "parent";
    if (v4395) {
      var v16773 = this.helper;
      var v11201 = v16773[0];
      b$$404.containment = v11201.parentNode;
    }
    var v16774 = b$$404.containment;
    var v11202 = v16774 == "document";
    var v16776 = !v11202;
    if (v16776) {
      var v16775 = b$$404.containment;
      v11202 = v16775 == "window";
    }
    var v4400 = v11202;
    if (v4400) {
      var v25053 = this.offset;
      var v20799 = v25053.relative;
      var v16777 = v20799.left;
      var v11203 = 0 - v16777;
      var v20800 = this.offset;
      var v16778 = v20800.parent;
      var v11204 = v16778.left;
      var v4396 = v11203 - v11204;
      var v25054 = this.offset;
      var v20801 = v25054.relative;
      var v16779 = v20801.top;
      var v11205 = 0 - v16779;
      var v20802 = this.offset;
      var v16780 = v20802.parent;
      var v11206 = v16780.top;
      var v4397 = v11205 - v11206;
      var v26924;
      var v28989 = b$$404.containment;
      var v28166 = v28989 == "document";
      if (v28166) {
        v26924 = document;
      } else {
        v26924 = window;
      }
      var v25055 = v26924;
      var v20803 = a$$452(v25055);
      var v16781 = v20803.width();
      var v20804 = this.helperProportions;
      var v16782 = v20804.width;
      var v11207 = v16781 - v16782;
      var v16783 = this.margins;
      var v11208 = v16783.left;
      var v4398 = v11207 - v11208;
      var v28167;
      var v29539 = b$$404.containment;
      var v28990 = v29539 == "document";
      if (v28990) {
        v28167 = document;
      } else {
        v28167 = window;
      }
      var v26925 = v28167;
      var v25056 = a$$452(v26925);
      var v20805 = v25056.height();
      var v25058 = !v20805;
      if (v25058) {
        var v26926 = document.body;
        var v25057 = v26926.parentNode;
        v20805 = v25057.scrollHeight;
      }
      var v16784 = v20805;
      var v20806 = this.helperProportions;
      var v16785 = v20806.height;
      var v11209 = v16784 - v16785;
      var v16786 = this.margins;
      var v11210 = v16786.top;
      var v4399 = v11209 - v11210;
      this.containment = [v4396, v4397, v4398, v4399];
    }
    var v16787 = b$$404.containment;
    var v11211 = /^(document|window|parent)$/.test(v16787);
    var v4408 = !v11211;
    if (v4408) {
      var v11212 = b$$404.containment;
      var v4401 = a$$452(v11212);
      var c$$331 = v4401[0];
      var v11213 = b$$404.containment;
      var v4402 = a$$452(v11213);
      var d$$258 = v4402.offset();
      var v11214 = a$$452(c$$331);
      var v4403 = v11214.css("overflow");
      var e$$238 = v4403 != "hidden";
      var v20807 = d$$258.left;
      var v28168 = a$$452(c$$331);
      var v26927 = v28168.css("borderLeftWidth");
      var v25059 = parseInt(v26927, 10);
      var v26928 = !v25059;
      if (v26928) {
        v25059 = 0;
      }
      var v20808 = v25059;
      var v16788 = v20807 + v20808;
      var v26929 = a$$452(c$$331);
      var v25060 = v26929.css("paddingLeft");
      var v20809 = parseInt(v25060, 10);
      var v25061 = !v20809;
      if (v25061) {
        v20809 = 0;
      }
      var v16789 = v20809;
      var v11215 = v16788 + v16789;
      var v16790 = this.margins;
      var v11216 = v16790.left;
      var v4404 = v11215 - v11216;
      var v20810 = d$$258.top;
      var v28169 = a$$452(c$$331);
      var v26930 = v28169.css("borderTopWidth");
      var v25062 = parseInt(v26930, 10);
      var v26931 = !v25062;
      if (v26931) {
        v25062 = 0;
      }
      var v20811 = v25062;
      var v16791 = v20810 + v20811;
      var v26932 = a$$452(c$$331);
      var v25063 = v26932.css("paddingTop");
      var v20812 = parseInt(v25063, 10);
      var v25064 = !v20812;
      if (v25064) {
        v20812 = 0;
      }
      var v16792 = v20812;
      var v11217 = v16791 + v16792;
      var v16793 = this.margins;
      var v11218 = v16793.top;
      var v4405 = v11217 - v11218;
      var v26933 = d$$258.left;
      var v28170;
      if (e$$238) {
        var v28991 = c$$331.scrollWidth;
        var v28992 = c$$331.offsetWidth;
        v28170 = Math.max(v28991, v28992);
      } else {
        v28170 = c$$331.offsetWidth;
      }
      var v26934 = v28170;
      var v25065 = v26933 + v26934;
      var v28993 = a$$452(c$$331);
      var v28171 = v28993.css("borderLeftWidth");
      var v26935 = parseInt(v28171, 10);
      var v28172 = !v26935;
      if (v28172) {
        v26935 = 0;
      }
      var v25066 = v26935;
      var v20813 = v25065 - v25066;
      var v28173 = a$$452(c$$331);
      var v26936 = v28173.css("paddingRight");
      var v25067 = parseInt(v26936, 10);
      var v26937 = !v25067;
      if (v26937) {
        v25067 = 0;
      }
      var v20814 = v25067;
      var v16794 = v20813 - v20814;
      var v20815 = this.helperProportions;
      var v16795 = v20815.width;
      var v11219 = v16794 - v16795;
      var v16796 = this.margins;
      var v11220 = v16796.left;
      var v4406 = v11219 - v11220;
      var v26938 = d$$258.top;
      var v28174;
      if (e$$238) {
        var v28994 = c$$331.scrollHeight;
        var v28995 = c$$331.offsetHeight;
        v28174 = Math.max(v28994, v28995);
      } else {
        v28174 = c$$331.offsetHeight;
      }
      var v26939 = v28174;
      var v25068 = v26938 + v26939;
      var v28996 = a$$452(c$$331);
      var v28175 = v28996.css("borderTopWidth");
      var v26940 = parseInt(v28175, 10);
      var v28176 = !v26940;
      if (v28176) {
        v26940 = 0;
      }
      var v25069 = v26940;
      var v20816 = v25068 - v25069;
      var v28177 = a$$452(c$$331);
      var v26941 = v28177.css("paddingBottom");
      var v25070 = parseInt(v26941, 10);
      var v26942 = !v25070;
      if (v26942) {
        v25070 = 0;
      }
      var v20817 = v25070;
      var v16797 = v20816 - v20817;
      var v20818 = this.helperProportions;
      var v16798 = v20818.height;
      var v11221 = v16797 - v16798;
      var v16799 = this.margins;
      var v11222 = v16799.top;
      var v4407 = v11221 - v11222;
      this.containment = [v4404, v4405, v4406, v4407];
    }
    return;
  }
  function v1331() {
    var v11223 = this.helper;
    var v4409 = v11223.outerWidth();
    var v11224 = this.helper;
    var v4410 = v11224.outerHeight();
    this.helperProportions = {width:v4409, height:v4410};
    return;
  }
  function v1330() {
    var v20819 = this.currentItem;
    var v16800 = v20819.css("marginLeft");
    var v11225 = parseInt(v16800, 10);
    var v16801 = !v11225;
    if (v16801) {
      v11225 = 0;
    }
    var v4411 = v11225;
    var v20820 = this.currentItem;
    var v16802 = v20820.css("marginTop");
    var v11226 = parseInt(v16802, 10);
    var v16803 = !v11226;
    if (v16803) {
      v11226 = 0;
    }
    var v4412 = v11226;
    this.margins = {left:v4411, top:v4412};
    return;
  }
  function v1329() {
    var v11227 = this.cssPosition;
    var v4416 = v11227 == "relative";
    if (v4416) {
      var v4413 = this.currentItem;
      var a$$461 = v4413.position();
      var v16804 = a$$461.top;
      var v26943 = this.helper;
      var v25071 = v26943.css("top");
      var v20821 = parseInt(v25071, 10);
      var v25072 = !v20821;
      if (v25072) {
        v20821 = 0;
      }
      var v16805 = v20821;
      var v11228 = v16804 - v16805;
      var v16806 = this.scrollParent;
      var v11229 = v16806.scrollTop();
      var v4414 = v11228 + v11229;
      var v16807 = a$$461.left;
      var v26944 = this.helper;
      var v25073 = v26944.css("left");
      var v20822 = parseInt(v25073, 10);
      var v25074 = !v20822;
      if (v25074) {
        v20822 = 0;
      }
      var v16808 = v20822;
      var v11230 = v16807 - v16808;
      var v16809 = this.scrollParent;
      var v11231 = v16809.scrollLeft();
      var v4415 = v11230 + v11231;
      return{top:v4414, left:v4415};
    }
    return{top:0, left:0};
  }
  function v1328() {
    var v4417 = this.helper;
    var v31063 = v4417.offsetParent();
    this.offsetParent = v31063;
    var v4418 = this.offsetParent;
    var b$$403 = v4418.offset();
    var v20823 = this.cssPosition;
    var v16810 = v20823 == "absolute";
    if (v16810) {
      var v25075 = this.scrollParent;
      var v20824 = v25075[0];
      v16810 = v20824 != document;
    }
    var v11232 = v16810;
    if (v11232) {
      var v16811 = a$$452.ui;
      var v20825 = this.scrollParent;
      var v16812 = v20825[0];
      var v20826 = this.offsetParent;
      var v16813 = v20826[0];
      v11232 = v16811.contains(v16812, v16813);
    }
    var v4419 = v11232;
    if (v4419) {
      var v20827 = b$$403.left;
      var v25076 = this.scrollParent;
      var v20828 = v25076.scrollLeft();
      b$$403.left = v20827 + v20828;
      var v20829 = b$$403.top;
      var v25077 = this.scrollParent;
      var v20830 = v25077.scrollTop();
      b$$403.top = v20829 + v20830;
    }
    var v20831 = this.offsetParent;
    var v16814 = v20831[0];
    var v16815 = document.body;
    var v11233 = v16814 == v16815;
    var v16817 = !v11233;
    if (v16817) {
      var v26945 = this.offsetParent;
      var v25078 = v26945[0];
      var v20832 = v25078.tagName;
      if (v20832) {
        var v28997 = this.offsetParent;
        var v28178 = v28997[0];
        var v26946 = v28178.tagName;
        var v25079 = v26946.toLowerCase();
        v20832 = v25079 == "html";
      }
      var v16816 = v20832;
      if (v16816) {
        var v20833 = a$$452.browser;
        v16816 = v20833.msie;
      }
      v11233 = v16816;
    }
    var v4420 = v11233;
    if (v4420) {
      b$$403 = {top:0, left:0};
    }
    var v11234 = b$$403.top;
    var v25080 = this.offsetParent;
    var v20834 = v25080.css("borderTopWidth");
    var v16818 = parseInt(v20834, 10);
    var v20835 = !v16818;
    if (v20835) {
      v16818 = 0;
    }
    var v11235 = v16818;
    var v4421 = v11234 + v11235;
    var v11236 = b$$403.left;
    var v25081 = this.offsetParent;
    var v20836 = v25081.css("borderLeftWidth");
    var v16819 = parseInt(v20836, 10);
    var v20837 = !v16819;
    if (v20837) {
      v16819 = 0;
    }
    var v11237 = v16819;
    var v4422 = v11236 + v11237;
    return{top:v4421, left:v4422};
  }
  function v1327(b$$402) {
    var v28179 = typeof b$$402;
    var v26947 = v28179 == "string";
    if (v26947) {
      b$$402 = b$$402.split(" ");
    }
    var v26948 = a$$452.isArray(b$$402);
    if (v26948) {
      var v28998 = b$$402[0];
      var v28180 = +v28998;
      var v29540 = b$$402[1];
      var v28999 = +v29540;
      var v29541 = !v28999;
      if (v29541) {
        v28999 = 0;
      }
      var v28181 = v28999;
      b$$402 = {left:v28180, top:v28181};
    }
    var v25082 = "left" in b$$402;
    if (v25082) {
      var v28182 = this.offset;
      var v26949 = v28182.click;
      var v28183 = b$$402.left;
      var v29000 = this.margins;
      var v28184 = v29000.left;
      v26949.left = v28183 + v28184;
    }
    var v20838 = "right" in b$$402;
    if (v20838) {
      var v26950 = this.offset;
      var v25083 = v26950.click;
      var v29001 = this.helperProportions;
      var v28185 = v29001.width;
      var v28186 = b$$402.right;
      var v26951 = v28185 - v28186;
      var v28187 = this.margins;
      var v26952 = v28187.left;
      v25083.left = v26951 + v26952;
    }
    var v16820 = "top" in b$$402;
    if (v16820) {
      var v25084 = this.offset;
      var v20839 = v25084.click;
      var v25085 = b$$402.top;
      var v26953 = this.margins;
      var v25086 = v26953.top;
      v20839.top = v25085 + v25086;
    }
    var v11238 = "bottom" in b$$402;
    if (v11238) {
      var v20840 = this.offset;
      var v16821 = v20840.click;
      var v26954 = this.helperProportions;
      var v25087 = v26954.height;
      var v25088 = b$$402.bottom;
      var v20841 = v25087 - v25088;
      var v25089 = this.margins;
      var v20842 = v25089.top;
      v16821.top = v20841 + v20842;
    }
    return;
  }
  function v1326(b$$401) {
    var c$$330 = this.options;
    var v4423;
    var v16822 = c$$330.helper;
    var v11241 = a$$452.isFunction(v16822);
    if (v11241) {
      var v16823 = c$$330.helper;
      var v20843 = this.element;
      var v16824 = v20843[0];
      var v20844 = this.currentItem;
      var v16825 = [b$$401, v20844];
      var v11239 = v16823.apply(v16824, v16825);
      v4423 = a$$452(v11239);
    } else {
      var v11240;
      var v20845 = c$$330.helper;
      var v16827 = v20845 == "clone";
      if (v16827) {
        var v16826 = this.currentItem;
        v11240 = v16826.clone();
      } else {
        v11240 = this.currentItem;
      }
      v4423 = v11240;
    }
    var d$$257 = v4423;
    var v26955 = d$$257.parents("body");
    var v25090 = v26955.length;
    var v26958 = !v25090;
    if (v26958) {
      var v29542;
      var v30129 = c$$330.appendTo;
      var v29875 = v30129 != "parent";
      if (v29875) {
        v29542 = c$$330.appendTo;
      } else {
        var v30130 = this.currentItem;
        var v29874 = v30130[0];
        v29542 = v29874.parentNode;
      }
      var v29002 = v29542;
      var v28188 = a$$452(v29002);
      var v26956 = v28188[0];
      var v26957 = d$$257[0];
      v26956.appendChild(v26957);
    }
    var v26959 = d$$257[0];
    var v28189 = this.currentItem;
    var v26960 = v28189[0];
    var v25091 = v26959 == v26960;
    if (v25091) {
      var v29543 = this.currentItem;
      var v29003 = v29543[0];
      var v28190 = v29003.style;
      var v26961 = v28190.width;
      var v29544 = this.currentItem;
      var v29004 = v29544[0];
      var v28191 = v29004.style;
      var v26962 = v28191.height;
      var v28192 = this.currentItem;
      var v26963 = v28192.css("position");
      var v28193 = this.currentItem;
      var v26964 = v28193.css("top");
      var v28194 = this.currentItem;
      var v26965 = v28194.css("left");
      this._storedCSS = {width:v26961, height:v26962, position:v26963, top:v26964, left:v26965};
    }
    var v29005 = d$$257[0];
    var v28195 = v29005.style;
    var v26966 = v28195.width;
    var v25092 = v26966 == "";
    var v26967 = !v25092;
    if (v26967) {
      v25092 = c$$330.forceHelperSize;
    }
    var v20846 = v25092;
    if (v20846) {
      var v26968 = this.currentItem;
      var v25093 = v26968.width();
      d$$257.width(v25093);
    }
    var v28196 = d$$257[0];
    var v26969 = v28196.style;
    var v25094 = v26969.height;
    var v20847 = v25094 == "";
    var v25095 = !v20847;
    if (v25095) {
      v20847 = c$$330.forceHelperSize;
    }
    var v16828 = v20847;
    if (v16828) {
      var v25096 = this.currentItem;
      var v20848 = v25096.height();
      d$$257.height(v20848);
    }
    return d$$257;
  }
  function v1325(b$$400) {
    var c$$329 = null;
    var d$$256 = null;
    var v11242 = this.containers;
    var v4424 = v11242.length;
    var e$$237 = v4424 - 1;
    var v4429 = e$$237 >= 0;
    for (;v4429;) {
      var v11243 = a$$452.ui;
      var v16829 = this.currentItem;
      var v11244 = v16829[0];
      var v25097 = this.containers;
      var v20849 = v25097[e$$237];
      var v16830 = v20849.element;
      var v11245 = v16830[0];
      var v4425 = v11243.contains(v11244, v11245);
      if (v4425) {
        e$$237--;
        v4429 = e$$237 >= 0;
        continue;
      }
      var v20850 = this.containers;
      var v16831 = v20850[e$$237];
      var v11246 = v16831.containerCache;
      var v4428 = this._intersectsWith(v11246);
      if (v4428) {
        var v11247 = c$$329;
        if (v11247) {
          var v16832 = a$$452.ui;
          var v26970 = this.containers;
          var v25098 = v26970[e$$237];
          var v20851 = v25098.element;
          var v16833 = v20851[0];
          var v20852 = c$$329.element;
          var v16834 = v20852[0];
          v11247 = v16832.contains(v16833, v16834);
        }
        var v4426 = v11247;
        if (v4426) {
          e$$237--;
          v4429 = e$$237 >= 0;
          continue;
        }
        var v11248 = this.containers;
        c$$329 = v11248[e$$237];
        d$$256 = e$$237;
      } else {
        var v20853 = this.containers;
        var v16835 = v20853[e$$237];
        var v11249 = v16835.containerCache;
        var v4427 = v11249.over;
        if (v4427) {
          var v20854 = this.containers;
          var v16836 = v20854[e$$237];
          var v16837 = this._uiHash(this);
          v16836._trigger("out", b$$400, v16837);
          var v25099 = this.containers;
          var v20855 = v25099[e$$237];
          var v16838 = v20855.containerCache;
          v16838.over = 0;
        }
      }
      e$$237--;
      v4429 = e$$237 >= 0;
    }
    var v4430 = !c$$329;
    if (v4430) {
      return;
    }
    var v16839 = this.containers;
    var v11250 = v16839.length;
    var v4440 = v11250 === 1;
    if (v4440) {
      var v16840 = this.containers;
      var v11251 = v16840[d$$256];
      var v11252 = this._uiHash(this);
      v11251._trigger("over", b$$400, v11252);
      var v20856 = this.containers;
      var v16841 = v20856[d$$256];
      var v11253 = v16841.containerCache;
      v11253.over = 1;
    } else {
      var v11254 = this.currentContainer;
      var v16842 = this.containers;
      var v11255 = v16842[d$$256];
      var v4439 = v11254 != v11255;
      if (v4439) {
        var f$$104 = 1E4;
        var g$$136 = null;
        var v4431 = this.positionAbs;
        var v11256;
        var v25100 = this.containers;
        var v20857 = v25100[d$$256];
        var v16843 = v20857.floating;
        if (v16843) {
          v11256 = "left";
        } else {
          v11256 = "top";
        }
        var v4432 = v11256;
        var h$$111 = v4431[v4432];
        var v11257 = this.items;
        var v4433 = v11257.length;
        var i$$168 = v4433 - 1;
        var v4437 = i$$168 >= 0;
        for (;v4437;) {
          var v16844 = a$$452.ui;
          var v26971 = this.containers;
          var v25101 = v26971[d$$256];
          var v20858 = v25101.element;
          var v16845 = v20858[0];
          var v26972 = this.items;
          var v25102 = v26972[i$$168];
          var v20859 = v25102.item;
          var v16846 = v20859[0];
          var v11258 = v16844.contains(v16845, v16846);
          var v4434 = !v11258;
          if (v4434) {
            i$$168--;
            v4437 = i$$168 >= 0;
            continue;
          }
          var v4435;
          var v20860 = this.containers;
          var v16847 = v20860[d$$256];
          var v11261 = v16847.floating;
          if (v11261) {
            var v25103 = this.items;
            var v20861 = v25103[i$$168];
            var v16848 = v20861.item;
            var v11259 = v16848.offset();
            v4435 = v11259.left;
          } else {
            var v25104 = this.items;
            var v20862 = v25104[i$$168];
            var v16849 = v20862.item;
            var v11260 = v16849.offset();
            v4435 = v11260.top;
          }
          var j$$80 = v4435;
          var v16850 = j$$80 - h$$111;
          var v11262 = Math.abs(v16850);
          var v4436 = v11262 < f$$104;
          if (v4436) {
            var v20863 = j$$80 - h$$111;
            f$$104 = Math.abs(v20863);
            var v20864 = this.items;
            g$$136 = v20864[i$$168];
            var v16851;
            var v25105 = j$$80 - h$$111;
            var v20865 = v25105 > 0;
            if (v20865) {
              v16851 = "down";
            } else {
              v16851 = "up";
            }
            this.direction = v16851;
          }
          i$$168--;
          v4437 = i$$168 >= 0;
        }
        var v11263 = !g$$136;
        if (v11263) {
          var v20866 = this.options;
          var v16852 = v20866.dropOnEmpty;
          v11263 = !v16852;
        }
        var v4438 = v11263;
        if (v4438) {
          return;
        }
        var v28197 = this.containers;
        this.currentContainer = v28197[d$$256];
        var v28198;
        if (g$$136) {
          var v29006 = !0;
          v28198 = this._rearrange(b$$400, g$$136, null, v29006);
        } else {
          var v29876 = this.containers;
          var v29545 = v29876[d$$256];
          var v29007 = v29545.element;
          var v29008 = !0;
          v28198 = this._rearrange(b$$400, null, v29007, v29008);
        }
        v28198;
        var v26973 = this._uiHash();
        this._trigger("change", b$$400, v26973);
        var v26974 = this.containers;
        var v25106 = v26974[d$$256];
        var v25107 = this._uiHash(this);
        v25106._trigger("change", b$$400, v25107);
        var v25108 = this.options;
        var v20867 = v25108.placeholder;
        var v20868 = this.currentContainer;
        var v20869 = this.placeholder;
        v20867.update(v20868, v20869);
        var v20870 = this.containers;
        var v16853 = v20870[d$$256];
        var v16854 = this._uiHash(this);
        v16853._trigger("over", b$$400, v16854);
        var v20871 = this.containers;
        var v16855 = v20871[d$$256];
        var v11264 = v16855.containerCache;
        v11264.over = 1;
      }
    }
    return;
  }
  function v1324(b$$397) {
    function v1323(a$$460, b$$399) {
      var v11265 = e$$236;
      if (v11265) {
        var v16856 = d$$255.forcePlaceholderSize;
        v11265 = !v16856;
      }
      var v4441 = v11265;
      if (v4441) {
        return;
      }
      var v11266 = b$$399.height();
      var v16858 = !v11266;
      if (v16858) {
        var v26975 = c$$328.currentItem;
        var v25109 = v26975.innerHeight();
        var v29009 = c$$328.currentItem;
        var v28199 = v29009.css("paddingTop");
        var v29010 = !v28199;
        if (v29010) {
          v28199 = 0;
        }
        var v26976 = v28199;
        var v25110 = parseInt(v26976, 10);
        var v20872 = v25109 - v25110;
        var v28200 = c$$328.currentItem;
        var v26977 = v28200.css("paddingBottom");
        var v28201 = !v26977;
        if (v28201) {
          v26977 = 0;
        }
        var v25111 = v26977;
        var v20873 = parseInt(v25111, 10);
        var v16857 = v20872 - v20873;
        b$$399.height(v16857);
      }
      var v11267 = b$$399.width();
      var v16860 = !v11267;
      if (v16860) {
        var v26978 = c$$328.currentItem;
        var v25112 = v26978.innerWidth();
        var v29011 = c$$328.currentItem;
        var v28202 = v29011.css("paddingLeft");
        var v29012 = !v28202;
        if (v29012) {
          v28202 = 0;
        }
        var v26979 = v28202;
        var v25113 = parseInt(v26979, 10);
        var v20874 = v25112 - v25113;
        var v28203 = c$$328.currentItem;
        var v26980 = v28203.css("paddingRight");
        var v28204 = !v26980;
        if (v28204) {
          v26980 = 0;
        }
        var v25114 = v26980;
        var v20875 = parseInt(v25114, 10);
        var v16859 = v20874 - v20875;
        b$$399.width(v16859);
      }
      return;
    }
    function v1322() {
      var v28205 = c$$328.currentItem;
      var v26981 = v28205[0];
      var v25115 = v26981.nodeName;
      var v20876 = document.createElement(v25115);
      var v16861 = a$$452(v20876);
      var v20877 = e$$236;
      var v25117 = !v20877;
      if (v25117) {
        var v28206 = c$$328.currentItem;
        var v26982 = v28206[0];
        var v25116 = v26982.className;
        v20877 = v25116 + " ui-sortable-placeholder";
      }
      var v16862 = v20877;
      var v11268 = v16861.addClass(v16862);
      var v4442 = v11268.removeClass("ui-sortable-helper");
      var b$$398 = v4442[0];
      var v16864 = !e$$236;
      if (v16864) {
        var v16863 = b$$398.style;
        v16863.visibility = "hidden";
      }
      return b$$398;
    }
    var c$$328 = b$$397 || this;
    var d$$255 = c$$328.options;
    var v16865 = d$$255.placeholder;
    var v11269 = !v16865;
    var v16867 = !v11269;
    if (v16867) {
      var v20878 = d$$255.placeholder;
      var v16866 = v20878.constructor;
      v11269 = v16866 == String;
    }
    var v4443 = v11269;
    if (v4443) {
      var e$$236 = d$$255.placeholder;
      d$$255.placeholder = {element:v1322, update:v1323};
    }
    var v16868 = c$$328;
    var v26983 = d$$255.placeholder;
    var v25118 = v26983.element;
    var v25119 = c$$328.element;
    var v25120 = c$$328.currentItem;
    var v20879 = v25118.call(v25119, v25120);
    var v31064 = a$$452(v20879);
    v16868.placeholder = v31064;
    var v16869 = c$$328.currentItem;
    var v16870 = c$$328.placeholder;
    v16869.after(v16870);
    var v11270 = d$$255.placeholder;
    var v11271 = c$$328.placeholder;
    v11270.update(c$$328, v11271);
    return;
  }
  function v1321(b$$396) {
    var v11272 = this.offsetParent;
    if (v11272) {
      v11272 = this.helper;
    }
    var v4444 = v11272;
    if (v4444) {
      var v11273 = this.offset;
      var v31065 = this._getParentOffset();
      v11273.parent = v31065;
    }
    var v11274 = this.items;
    var v4445 = v11274.length;
    var c$$327 = v4445 - 1;
    var v4449 = c$$327 >= 0;
    for (;v4449;) {
      var v4446 = this.items;
      var d$$254 = v4446[c$$327];
      var v20880 = d$$254.instance;
      var v20881 = this.currentContainer;
      var v16871 = v20880 != v20881;
      if (v16871) {
        v16871 = this.currentContainer;
      }
      var v11275 = v16871;
      if (v11275) {
        var v20882 = d$$254.item;
        var v16872 = v20882[0];
        var v20883 = this.currentItem;
        var v16873 = v20883[0];
        v11275 = v16872 != v16873;
      }
      var v4447 = v11275;
      if (v4447) {
        c$$327--;
        v4449 = c$$327 >= 0;
        continue;
      }
      var v4448;
      var v16874 = this.options;
      var v11278 = v16874.toleranceElement;
      if (v11278) {
        var v16875 = this.options;
        var v11276 = v16875.toleranceElement;
        var v11277 = d$$254.item;
        v4448 = a$$452(v11276, v11277);
      } else {
        v4448 = d$$254.item;
      }
      var e$$235 = v4448;
      var v11279 = !b$$396;
      if (v11279) {
        var v31066 = e$$235.outerWidth();
        d$$254.width = v31066;
        var v31067 = e$$235.outerHeight();
        d$$254.height = v31067;
      }
      var f$$103 = e$$235.offset();
      d$$254.left = f$$103.left;
      d$$254.top = f$$103.top;
      c$$327--;
      v4449 = c$$327 >= 0;
    }
    var v16876 = this.options;
    var v11280 = v16876.custom;
    if (v11280) {
      var v20884 = this.options;
      var v16877 = v20884.custom;
      v11280 = v16877.refreshContainers;
    }
    var v4454 = v11280;
    if (v4454) {
      var v16878 = this.options;
      var v11281 = v16878.custom;
      var v4450 = v11281.refreshContainers;
      v4450.call(this);
    } else {
      var v11282 = this.containers;
      var v4451 = v11282.length;
      c$$327 = v4451 - 1;
      var v4453 = c$$327 >= 0;
      for (;v4453;) {
        var v16879 = this.containers;
        var v11283 = v16879[c$$327];
        var v4452 = v11283.element;
        f$$103 = v4452.offset();
        var v26984 = this.containers;
        var v25121 = v26984[c$$327];
        var v20885 = v25121.containerCache;
        v20885.left = f$$103.left;
        var v26985 = this.containers;
        var v25122 = v26985[c$$327];
        var v20886 = v25122.containerCache;
        v20886.top = f$$103.top;
        var v25123 = this.containers;
        var v20887 = v25123[c$$327];
        var v16880 = v20887.containerCache;
        var v26986 = this.containers;
        var v25124 = v26986[c$$327];
        var v20888 = v25124.element;
        var v31068 = v20888.outerWidth();
        v16880.width = v31068;
        var v20889 = this.containers;
        var v16881 = v20889[c$$327];
        var v11284 = v16881.containerCache;
        var v25125 = this.containers;
        var v20890 = v25125[c$$327];
        var v16882 = v20890.element;
        var v31069 = v16882.outerHeight();
        v11284.height = v31069;
        c$$327--;
        v4453 = c$$327 >= 0;
      }
    }
    return this;
  }
  function v1320(b$$395) {
    this.items = [];
    this.containers = [this];
    var c$$326 = this.items;
    var d$$253 = this;
    var v16883;
    var v26987 = this.options;
    var v25126 = v26987.items;
    var v20896 = a$$452.isFunction(v25126);
    if (v20896) {
      var v25127 = this.options;
      var v20891 = v25127.items;
      var v25128 = this.element;
      var v20892 = v25128[0];
      var v25129 = this.currentItem;
      var v20893 = {item:v25129};
      v16883 = v20891.call(v20892, b$$395, v20893);
    } else {
      var v25130 = this.options;
      var v20894 = v25130.items;
      var v20895 = this.element;
      v16883 = a$$452(v20894, v20895);
    }
    var v11285 = v16883;
    var v4455 = [v11285, this];
    var e$$234 = [v4455];
    var f$$102 = this._connectWith();
    var v11286 = f$$102;
    if (v11286) {
      v11286 = this.ready;
    }
    var v4464 = v11286;
    if (v4464) {
      var v4456 = f$$102.length;
      var g$$135 = v4456 - 1;
      var v4463 = g$$135 >= 0;
      for (;v4463;) {
        var v4457 = f$$102[g$$135];
        var h$$110 = a$$452(v4457);
        var v4458 = h$$110.length;
        var i$$167 = v4458 - 1;
        var v4462 = i$$167 >= 0;
        for (;v4462;) {
          var v4459 = h$$110[i$$167];
          var v4460 = this.widgetName;
          var j$$79 = a$$452.data(v4459, v4460);
          var v16884 = j$$79;
          if (v16884) {
            v16884 = j$$79 != this;
          }
          var v11287 = v16884;
          if (v11287) {
            var v20897 = j$$79.options;
            var v16885 = v20897.disabled;
            v11287 = !v16885;
          }
          var v4461 = v11287;
          if (v4461) {
            var v25131;
            var v29013 = j$$79.options;
            var v28207 = v29013.items;
            var v26993 = a$$452.isFunction(v28207);
            if (v26993) {
              var v28208 = j$$79.options;
              var v26988 = v28208.items;
              var v28209 = j$$79.element;
              var v26989 = v28209[0];
              var v28210 = this.currentItem;
              var v26990 = {item:v28210};
              v25131 = v26988.call(v26989, b$$395, v26990);
            } else {
              var v28211 = j$$79.options;
              var v26991 = v28211.items;
              var v26992 = j$$79.element;
              v25131 = a$$452(v26991, v26992);
            }
            var v20898 = v25131;
            var v16886 = [v20898, j$$79];
            e$$234.push(v16886);
            var v16887 = this.containers;
            v16887.push(j$$79);
          }
          i$$167--;
          v4462 = i$$167 >= 0;
        }
        g$$135--;
        v4463 = g$$135 >= 0;
      }
    }
    var v4465 = e$$234.length;
    g$$135 = v4465 - 1;
    var v4470 = g$$135 >= 0;
    for (;v4470;) {
      var v4466 = e$$234[g$$135];
      var k$$54 = v4466[1];
      var v4467 = e$$234[g$$135];
      var l$$64 = v4467[0];
      i$$167 = 0;
      var m$$35 = l$$64.length;
      var v4469 = i$$167 < m$$35;
      for (;v4469;) {
        var v4468 = l$$64[i$$167];
        var n$$85 = a$$452(v4468);
        var v16888 = this.widgetName;
        var v11288 = v16888 + "-item";
        n$$85.data(v11288, k$$54);
        var v11289 = {item:n$$85, instance:k$$54, width:0, height:0, left:0, top:0};
        c$$326.push(v11289);
        i$$167++;
        v4469 = i$$167 < m$$35;
      }
      g$$135--;
      v4470 = g$$135 >= 0;
    }
    return;
  }
  function v1319() {
    var v4471 = this.currentItem;
    var v16889 = this.widgetName;
    var v11290 = ":data(" + v16889;
    var v4472 = v11290 + "-item)";
    var a$$459 = v4471.find(v4472);
    var b$$394 = 0;
    var v16890 = this.items;
    var v11291 = v16890.length;
    var v4475 = b$$394 < v11291;
    for (;v4475;) {
      var c$$325 = 0;
      var v11292 = a$$459.length;
      var v4474 = c$$325 < v11292;
      for (;v4474;) {
        var v11293 = a$$459[c$$325];
        var v25132 = this.items;
        var v20899 = v25132[b$$394];
        var v16891 = v20899.item;
        var v11294 = v16891[0];
        var v4473 = v11293 == v11294;
        if (v4473) {
          var v11295 = this.items;
          v11295.splice(b$$394, 1);
        }
        c$$325++;
        var v11296 = a$$459.length;
        v4474 = c$$325 < v11296;
      }
      b$$394++;
      var v16892 = this.items;
      var v11297 = v16892.length;
      v4475 = b$$394 < v11297;
    }
    return;
  }
  function v1318(b$$393) {
    function v1317() {
      d$$252.push(this);
      return;
    }
    var c$$324 = this;
    var d$$252 = [];
    var e$$233 = [];
    var f$$101 = this._connectWith();
    var v4484 = f$$101 && b$$393;
    if (v4484) {
      var v4476 = f$$101.length;
      var g$$134 = v4476 - 1;
      var v4483 = g$$134 >= 0;
      for (;v4483;) {
        var v4477 = f$$101[g$$134];
        var h$$109 = a$$452(v4477);
        var v4478 = h$$109.length;
        var i$$166 = v4478 - 1;
        var v4482 = i$$166 >= 0;
        for (;v4482;) {
          var v4479 = h$$109[i$$166];
          var v4480 = this.widgetName;
          var j$$78 = a$$452.data(v4479, v4480);
          var v16893 = j$$78;
          if (v16893) {
            v16893 = j$$78 != this;
          }
          var v11298 = v16893;
          if (v11298) {
            var v20900 = j$$78.options;
            var v16894 = v20900.disabled;
            v11298 = !v16894;
          }
          var v4481 = v11298;
          if (v4481) {
            var v20901;
            var v28212 = j$$78.options;
            var v26994 = v28212.items;
            var v25136 = a$$452.isFunction(v26994);
            if (v25136) {
              var v26995 = j$$78.options;
              var v25133 = v26995.items;
              var v25134 = j$$78.element;
              v20901 = v25133.call(v25134);
            } else {
              var v29014 = j$$78.options;
              var v28213 = v29014.items;
              var v28214 = j$$78.element;
              var v26996 = a$$452(v28213, v28214);
              var v25135 = v26996.not(".ui-sortable-helper");
              v20901 = v25135.not(".ui-sortable-placeholder");
            }
            var v16895 = v20901;
            var v11299 = [v16895, j$$78];
            e$$233.push(v11299);
          }
          i$$166--;
          v4482 = i$$166 >= 0;
        }
        g$$134--;
        v4483 = g$$134 >= 0;
      }
    }
    var v16896;
    var v26997 = this.options;
    var v25137 = v26997.items;
    var v20906 = a$$452.isFunction(v25137);
    if (v20906) {
      var v25138 = this.options;
      var v20902 = v25138.items;
      var v20903 = this.element;
      var v25139 = this.options;
      var v25140 = this.currentItem;
      var v20904 = {options:v25139, item:v25140};
      v16896 = v20902.call(v20903, null, v20904);
    } else {
      var v28215 = this.options;
      var v26998 = v28215.items;
      var v26999 = this.element;
      var v25141 = a$$452(v26998, v26999);
      var v20905 = v25141.not(".ui-sortable-helper");
      v16896 = v20905.not(".ui-sortable-placeholder");
    }
    var v11300 = v16896;
    var v4485 = [v11300, this];
    e$$233.push(v4485);
    var v4486 = e$$233.length;
    g$$134 = v4486 - 1;
    var v4488 = g$$134 >= 0;
    for (;v4488;) {
      var v11301 = e$$233[g$$134];
      var v4487 = v11301[0];
      v4487.each(v1317);
      g$$134--;
      v4488 = g$$134 >= 0;
    }
    return a$$452(d$$252);
  }
  function v1316() {
    var a$$458 = this.options;
    var v4489;
    var v20907 = a$$458.connectWith;
    var v16897 = v20907.constructor;
    var v11303 = v16897 == String;
    if (v11303) {
      var v11302 = a$$458.connectWith;
      v4489 = [v11302];
    } else {
      v4489 = a$$458.connectWith;
    }
    return v4489;
  }
  function v1315(a$$457) {
    this._refreshItems(a$$457);
    this.refreshPositions();
    return this;
  }
  function v1314() {
    var v11304 = this.positionAbs;
    var v4490 = v11304.left;
    var v11305 = this.lastPositionAbs;
    var v4491 = v11305.left;
    var a$$456 = v4490 - v4491;
    var v4492 = a$$456 != 0;
    if (v4492) {
      var v11306;
      var v16898 = a$$456 > 0;
      if (v16898) {
        v11306 = "right";
      } else {
        v11306 = "left";
      }
      v4492 = v11306;
    }
    return v4492;
  }
  function v1313() {
    var v11307 = this.positionAbs;
    var v4493 = v11307.top;
    var v11308 = this.lastPositionAbs;
    var v4494 = v11308.top;
    var a$$455 = v4493 - v4494;
    var v4495 = a$$455 != 0;
    if (v4495) {
      var v11309;
      var v16899 = a$$455 > 0;
      if (v16899) {
        v11309 = "down";
      } else {
        v11309 = "up";
      }
      v4495 = v11309;
    }
    return v4495;
  }
  function v1312(b$$392) {
    var v4496 = a$$452.ui;
    var v16900 = this.positionAbs;
    var v11310 = v16900.top;
    var v20908 = this.offset;
    var v16901 = v20908.click;
    var v11311 = v16901.top;
    var v4497 = v11310 + v11311;
    var v11312 = b$$392.top;
    var v16902 = b$$392.height;
    var v11313 = v16902 / 2;
    var v4498 = v11312 + v11313;
    var v4499 = b$$392.height;
    var c$$323 = v4496.isOverAxis(v4497, v4498, v4499);
    var v4500 = a$$452.ui;
    var v16903 = this.positionAbs;
    var v11314 = v16903.left;
    var v20909 = this.offset;
    var v16904 = v20909.click;
    var v11315 = v16904.left;
    var v4501 = v11314 + v11315;
    var v11316 = b$$392.left;
    var v16905 = b$$392.width;
    var v11317 = v16905 / 2;
    var v4502 = v11316 + v11317;
    var v4503 = b$$392.width;
    var d$$251 = v4500.isOverAxis(v4501, v4502, v4503);
    var e$$232 = this._getDragVerticalDirection();
    var f$$100 = this._getDragHorizontalDirection();
    var v4504;
    var v16906 = this.floating;
    if (v16906) {
      v16906 = f$$100;
    }
    var v11320 = v16906;
    if (v11320) {
      var v16907 = f$$100 == "right";
      if (v16907) {
        v16907 = d$$251;
      }
      var v11318 = v16907;
      var v16909 = !v11318;
      if (v16909) {
        var v16908 = f$$100 == "left";
        if (v16908) {
          v16908 = !d$$251;
        }
        v11318 = v16908;
      }
      v4504 = v11318;
    } else {
      var v11319 = e$$232;
      if (v11319) {
        var v20910 = e$$232 == "down";
        if (v20910) {
          v20910 = c$$323;
        }
        var v16910 = v20910;
        var v20912 = !v16910;
        if (v20912) {
          var v20911 = e$$232 == "up";
          if (v20911) {
            v20911 = !c$$323;
          }
          v16910 = v20911;
        }
        v11319 = v16910;
      }
      v4504 = v11319;
    }
    return v4504;
  }
  function v1311(b$$391) {
    var v16911 = this.options;
    var v11321 = v16911.axis;
    var v4505 = v11321 === "x";
    var v11326 = !v4505;
    if (v11326) {
      var v11322 = a$$452.ui;
      var v20913 = this.positionAbs;
      var v16912 = v20913.top;
      var v25142 = this.offset;
      var v20914 = v25142.click;
      var v16913 = v20914.top;
      var v11323 = v16912 + v16913;
      var v11324 = b$$391.top;
      var v11325 = b$$391.height;
      v4505 = v11322.isOverAxis(v11323, v11324, v11325);
    }
    var c$$322 = v4505;
    var v16914 = this.options;
    var v11327 = v16914.axis;
    var v4506 = v11327 === "y";
    var v11332 = !v4506;
    if (v11332) {
      var v11328 = a$$452.ui;
      var v20915 = this.positionAbs;
      var v16915 = v20915.left;
      var v25143 = this.offset;
      var v20916 = v25143.click;
      var v16916 = v20916.left;
      var v11329 = v16915 + v16916;
      var v11330 = b$$391.left;
      var v11331 = b$$391.width;
      v4506 = v11328.isOverAxis(v11329, v11330, v11331);
    }
    var d$$250 = v4506;
    var e$$231 = c$$322 && d$$250;
    var f$$99 = this._getDragVerticalDirection();
    var g$$133 = this._getDragHorizontalDirection();
    var v4507;
    if (e$$231) {
      var v11333;
      var v16919 = this.floating;
      if (v16919) {
        var v16917;
        var v27000 = g$$133;
        if (v27000) {
          v27000 = g$$133 == "right";
        }
        var v25144 = v27000;
        var v27001 = !v25144;
        if (v27001) {
          v25144 = f$$99 == "down";
        }
        var v20917 = v25144;
        if (v20917) {
          v16917 = 2;
        } else {
          v16917 = 1;
        }
        v11333 = v16917;
      } else {
        var v16918 = f$$99;
        if (v16918) {
          var v20918;
          var v25145 = f$$99 == "down";
          if (v25145) {
            v20918 = 2;
          } else {
            v20918 = 1;
          }
          v16918 = v20918;
        }
        v11333 = v16918;
      }
      v4507 = v11333;
    } else {
      v4507 = !1;
    }
    return v4507;
  }
  function v1310(a$$454) {
    var v4508 = this.positionAbs;
    var b$$390 = v4508.left;
    var v11334 = this.helperProportions;
    var v4509 = v11334.width;
    var c$$321 = b$$390 + v4509;
    var v4510 = this.positionAbs;
    var d$$249 = v4510.top;
    var v11335 = this.helperProportions;
    var v4511 = v11335.height;
    var e$$230 = d$$249 + v4511;
    var f$$98 = a$$454.left;
    var v4512 = a$$454.width;
    var g$$132 = f$$98 + v4512;
    var h$$108 = a$$454.top;
    var v4513 = a$$454.height;
    var i$$165 = h$$108 + v4513;
    var v11336 = this.offset;
    var v4514 = v11336.click;
    var j$$77 = v4514.top;
    var v11337 = this.offset;
    var v4515 = v11337.click;
    var k$$53 = v4515.left;
    var v20919 = d$$249 + j$$77;
    var v16920 = v20919 > h$$108;
    if (v16920) {
      var v20920 = d$$249 + j$$77;
      v16920 = v20920 < i$$165;
    }
    var v11338 = v16920;
    if (v11338) {
      var v16921 = b$$390 + k$$53;
      v11338 = v16921 > f$$98;
    }
    var v4516 = v11338;
    if (v4516) {
      var v11339 = b$$390 + k$$53;
      v4516 = v11339 < g$$132;
    }
    var l$$63 = v4516;
    var v4517;
    var v27002 = this.options;
    var v25146 = v27002.tolerance;
    var v20921 = v25146 == "pointer";
    var v25148 = !v20921;
    if (v25148) {
      var v25147 = this.options;
      v20921 = v25147.forcePointerForContainers;
    }
    var v16922 = v20921;
    var v20923 = !v16922;
    if (v20923) {
      var v27003 = this.options;
      var v25149 = v27003.tolerance;
      var v20922 = v25149 != "pointer";
      if (v20922) {
        var v27004 = this.helperProportions;
        var v28216;
        var v29015 = this.floating;
        if (v29015) {
          v28216 = "width";
        } else {
          v28216 = "height";
        }
        var v27005 = v28216;
        var v25150 = v27004[v27005];
        var v28217;
        var v29016 = this.floating;
        if (v29016) {
          v28217 = "width";
        } else {
          v28217 = "height";
        }
        var v27006 = v28217;
        var v25151 = a$$454[v27006];
        v20922 = v25150 > v25151;
      }
      v16922 = v20922;
    }
    var v11341 = v16922;
    if (v11341) {
      v4517 = l$$63;
    } else {
      var v29017 = this.helperProportions;
      var v28218 = v29017.width;
      var v27007 = v28218 / 2;
      var v25152 = b$$390 + v27007;
      var v20924 = f$$98 < v25152;
      if (v20924) {
        var v29018 = this.helperProportions;
        var v28219 = v29018.width;
        var v27008 = v28219 / 2;
        var v25153 = c$$321 - v27008;
        v20924 = v25153 < g$$132;
      }
      var v16923 = v20924;
      if (v16923) {
        var v28220 = this.helperProportions;
        var v27009 = v28220.height;
        var v25154 = v27009 / 2;
        var v20925 = d$$249 + v25154;
        v16923 = h$$108 < v20925;
      }
      var v11340 = v16923;
      if (v11340) {
        var v27010 = this.helperProportions;
        var v25155 = v27010.height;
        var v20926 = v25155 / 2;
        var v16924 = e$$230 - v20926;
        v11340 = v16924 < i$$165;
      }
      v4517 = v11340;
    }
    return v4517;
  }
  function v1309(b$$389) {
    function v1308() {
      var v25156 = b$$389.item;
      var v27011 = !v25156;
      if (v27011) {
        v25156 = this;
      }
      var v20927 = v25156;
      var v16925 = a$$452(v20927);
      var v20928 = b$$389.attribute;
      var v25157 = !v20928;
      if (v25157) {
        v20928 = "id";
      }
      var v16926 = v20928;
      var v11342 = v16925.attr(v16926);
      var v16927 = !v11342;
      if (v16927) {
        v11342 = "";
      }
      var v4518 = v11342;
      d$$248.push(v4518);
      return;
    }
    var v11343 = b$$389;
    if (v11343) {
      v11343 = b$$389.connected;
    }
    var v4519 = v11343;
    var c$$320 = this._getItemsAsjQuery(v4519);
    var d$$248 = [];
    b$$389 = b$$389 || {};
    c$$320.each(v1308);
    return d$$248;
  }
  function v1307(b$$388) {
    function v1306() {
      var v25158 = b$$388.item;
      var v27012 = !v25158;
      if (v27012) {
        v25158 = this;
      }
      var v20929 = v25158;
      var v16928 = a$$452(v20929);
      var v20930 = b$$388.attribute;
      var v25159 = !v20930;
      if (v25159) {
        v20930 = "id";
      }
      var v16929 = v20930;
      var v11344 = v16928.attr(v16929);
      var v16930 = !v11344;
      if (v16930) {
        v11344 = "";
      }
      var v4520 = v11344;
      var v11345 = b$$388.expression;
      var v16931 = !v11345;
      if (v16931) {
        v11345 = /(.+)[-=_](.+)/;
      }
      var v4521 = v11345;
      var c$$319 = v4520.match(v4521);
      if (c$$319) {
        var v25160 = b$$388.key;
        var v27014 = !v25160;
        if (v27014) {
          var v27013 = c$$319[1];
          v25160 = v27013 + "[]";
        }
        var v20931 = v25160;
        var v16932 = v20931 + "=";
        var v20932;
        var v27015 = b$$388.key;
        if (v27015) {
          v27015 = b$$388.expression;
        }
        var v25161 = v27015;
        if (v25161) {
          v20932 = c$$319[1];
        } else {
          v20932 = c$$319[2];
        }
        var v16933 = v20932;
        var v11346 = v16932 + v16933;
        d$$247.push(v11346);
      }
      return;
    }
    var v11347 = b$$388;
    if (v11347) {
      v11347 = b$$388.connected;
    }
    var v4522 = v11347;
    var c$$318 = this._getItemsAsjQuery(v4522);
    var d$$247 = [];
    b$$388 = b$$388 || {};
    var v20933 = a$$452(c$$318);
    v20933.each(v1306);
    var v25162 = d$$247.length;
    var v20934 = !v25162;
    if (v20934) {
      v20934 = b$$388.key;
    }
    var v16934 = v20934;
    if (v16934) {
      var v25163 = b$$388.key;
      var v20935 = v25163 + "=";
      d$$247.push(v20935);
    }
    return d$$247.join("&");
  }
  function v1305() {
    var b$$387 = this;
    var v4525 = this.dragging;
    if (v4525) {
      var v11348 = {target:null};
      this._mouseUp(v11348);
      var v11349;
      var v25164 = this.options;
      var v20936 = v25164.helper;
      var v16937 = v20936 == "original";
      if (v16937) {
        var v20937 = this.currentItem;
        var v20938 = this._storedCSS;
        var v16935 = v20937.css(v20938);
        v11349 = v16935.removeClass("ui-sortable-helper");
      } else {
        var v16936 = this.currentItem;
        v11349 = v16936.show();
      }
      v11349;
      var v11350 = this.containers;
      var v4523 = v11350.length;
      var c$$317 = v4523 - 1;
      var v4524 = c$$317 >= 0;
      for (;v4524;) {
        var v16938 = this.containers;
        var v11351 = v16938[c$$317];
        var v11352 = b$$387._uiHash(this);
        v11351._trigger("deactivate", null, v11352);
        var v25165 = this.containers;
        var v20939 = v25165[c$$317];
        var v16939 = v20939.containerCache;
        var v11353 = v16939.over;
        if (v11353) {
          var v25166 = this.containers;
          var v20940 = v25166[c$$317];
          var v20941 = b$$387._uiHash(this);
          v20940._trigger("out", null, v20941);
          var v27016 = this.containers;
          var v25167 = v27016[c$$317];
          var v20942 = v25167.containerCache;
          v20942.over = 0;
        }
        c$$317--;
        v4524 = c$$317 >= 0;
      }
    }
    var v11354 = this.placeholder;
    if (v11354) {
      var v29019 = this.placeholder;
      var v28221 = v29019[0];
      var v27017 = v28221.parentNode;
      if (v27017) {
        var v29546 = this.placeholder;
        var v29020 = v29546[0];
        var v28222 = v29020.parentNode;
        var v29021 = this.placeholder;
        var v28223 = v29021[0];
        v28222.removeChild(v28223);
      }
      var v29877 = this.options;
      var v29547 = v29877.helper;
      var v29022 = v29547 != "original";
      if (v29022) {
        v29022 = this.helper;
      }
      var v28224 = v29022;
      if (v28224) {
        var v29548 = this.helper;
        var v29023 = v29548[0];
        v28224 = v29023.parentNode;
      }
      var v27018 = v28224;
      if (v27018) {
        var v28225 = this.helper;
        v28225.remove();
      }
      var v27019 = !1;
      var v27020 = !1;
      var v25168 = {helper:null, dragging:v27019, reverting:v27020, _noFinalSort:null};
      a$$452.extend(this, v25168);
      var v20943;
      var v27021 = this.domPosition;
      var v25173 = v27021.prev;
      if (v25173) {
        var v28226 = this.domPosition;
        var v27022 = v28226.prev;
        var v25169 = a$$452(v27022);
        var v25170 = this.currentItem;
        v20943 = v25169.after(v25170);
      } else {
        var v28227 = this.domPosition;
        var v27023 = v28227.parent;
        var v25171 = a$$452(v27023);
        var v25172 = this.currentItem;
        v20943 = v25171.prepend(v25172);
      }
      v20943;
    }
    return this;
  }
  function v1304(b$$386, c$$316) {
    function v1303() {
      d$$246._clear(b$$386);
      return;
    }
    var v4526 = !b$$386;
    if (v4526) {
      return;
    }
    var v16940 = a$$452.ui;
    var v11355 = v16940.ddmanager;
    if (v11355) {
      var v20944 = this.options;
      var v16941 = v20944.dropBehaviour;
      v11355 = !v16941;
    }
    var v4527 = v11355;
    if (v4527) {
      var v16942 = a$$452.ui;
      var v11356 = v16942.ddmanager;
      v11356.drop(this, b$$386);
    }
    var v11357 = this.options;
    var v4529 = v11357.revert;
    if (v4529) {
      var d$$246 = this;
      var v4528 = d$$246.placeholder;
      var e$$229 = v4528.offset();
      d$$246.reverting = !0;
      var v16943 = this.helper;
      var v11358 = a$$452(v16943);
      var v27024 = e$$229.left;
      var v29024 = this.offset;
      var v28228 = v29024.parent;
      var v27025 = v28228.left;
      var v25174 = v27024 - v27025;
      var v27026 = d$$246.margins;
      var v25175 = v27026.left;
      var v20945 = v25174 - v25175;
      var v25176;
      var v29025 = this.offsetParent;
      var v28229 = v29025[0];
      var v28230 = document.body;
      var v27028 = v28229 == v28230;
      if (v27028) {
        v25176 = 0;
      } else {
        var v28231 = this.offsetParent;
        var v27027 = v28231[0];
        v25176 = v27027.scrollLeft;
      }
      var v20946 = v25176;
      var v16944 = v20945 + v20946;
      var v27029 = e$$229.top;
      var v29026 = this.offset;
      var v28232 = v29026.parent;
      var v27030 = v28232.top;
      var v25177 = v27029 - v27030;
      var v27031 = d$$246.margins;
      var v25178 = v27031.top;
      var v20947 = v25177 - v25178;
      var v25179;
      var v29027 = this.offsetParent;
      var v28233 = v29027[0];
      var v28234 = document.body;
      var v27033 = v28233 == v28234;
      if (v27033) {
        v25179 = 0;
      } else {
        var v28235 = this.offsetParent;
        var v27032 = v28235[0];
        v25179 = v27032.scrollTop;
      }
      var v20948 = v25179;
      var v16945 = v20947 + v20948;
      var v11359 = {left:v16944, top:v16945};
      var v25180 = this.options;
      var v20949 = v25180.revert;
      var v16946 = parseInt(v20949, 10);
      var v20950 = !v16946;
      if (v20950) {
        v16946 = 500;
      }
      var v11360 = v16946;
      v11358.animate(v11359, v11360, v1303);
    } else {
      this._clear(b$$386, c$$316);
    }
    return!1;
  }
  function v1302(b$$385) {
    var v31070 = this._generatePosition(b$$385);
    this.position = v31070;
    var v31071 = this._convertPositionTo("absolute");
    this.positionAbs = v31071;
    var v11361 = this.lastPositionAbs;
    var v16947 = !v11361;
    if (v16947) {
      this.lastPositionAbs = this.positionAbs;
    }
    var v11362 = this.options;
    var v4530 = v11362.scroll;
    if (v4530) {
      var c$$315 = this.options;
      var d$$245 = !1;
      var v11363;
      var v27034 = this.scrollParent;
      var v25181 = v27034[0];
      var v20951 = v25181 != document;
      if (v20951) {
        var v28236 = this.scrollParent;
        var v27035 = v28236[0];
        var v25182 = v27035.tagName;
        v20951 = v25182 != "HTML";
      }
      var v16948 = v20951;
      if (v16948) {
        var v20952;
        var v29549 = this.overflowOffset;
        var v29028 = v29549.top;
        var v29878 = this.scrollParent;
        var v29550 = v29878[0];
        var v29029 = v29550.offsetHeight;
        var v28237 = v29028 + v29029;
        var v28238 = b$$385.pageY;
        var v27036 = v28237 - v28238;
        var v27037 = c$$315.scrollSensitivity;
        var v25185 = v27036 < v27037;
        if (v25185) {
          var v27038 = this.scrollParent;
          var v25183 = v27038[0];
          var v29030 = this.scrollParent;
          var v28239 = v29030[0];
          var v27039 = v28239.scrollTop;
          var v27040 = c$$315.scrollSpeed;
          v20952 = v25183.scrollTop = d$$245 = v27039 + v27040;
        } else {
          var v28240 = b$$385.pageY;
          var v29031 = this.overflowOffset;
          var v28241 = v29031.top;
          var v27041 = v28240 - v28241;
          var v27042 = c$$315.scrollSensitivity;
          var v25184 = v27041 < v27042;
          if (v25184) {
            var v28242 = this.scrollParent;
            var v27043 = v28242[0];
            var v29551 = this.scrollParent;
            var v29032 = v29551[0];
            var v28243 = v29032.scrollTop;
            var v28244 = c$$315.scrollSpeed;
            v25184 = v27043.scrollTop = d$$245 = v28243 - v28244;
          }
          v20952 = v25184;
        }
        v20952;
        var v20953;
        var v29552 = this.overflowOffset;
        var v29033 = v29552.left;
        var v29879 = this.scrollParent;
        var v29553 = v29879[0];
        var v29034 = v29553.offsetWidth;
        var v28245 = v29033 + v29034;
        var v28246 = b$$385.pageX;
        var v27044 = v28245 - v28246;
        var v27045 = c$$315.scrollSensitivity;
        var v25188 = v27044 < v27045;
        if (v25188) {
          var v27046 = this.scrollParent;
          var v25186 = v27046[0];
          var v29035 = this.scrollParent;
          var v28247 = v29035[0];
          var v27047 = v28247.scrollLeft;
          var v27048 = c$$315.scrollSpeed;
          v20953 = v25186.scrollLeft = d$$245 = v27047 + v27048;
        } else {
          var v28248 = b$$385.pageX;
          var v29036 = this.overflowOffset;
          var v28249 = v29036.left;
          var v27049 = v28248 - v28249;
          var v27050 = c$$315.scrollSensitivity;
          var v25187 = v27049 < v27050;
          if (v25187) {
            var v28250 = this.scrollParent;
            var v27051 = v28250[0];
            var v29554 = this.scrollParent;
            var v29037 = v29554[0];
            var v28251 = v29037.scrollLeft;
            var v28252 = c$$315.scrollSpeed;
            v25187 = v27051.scrollLeft = d$$245 = v28251 - v28252;
          }
          v20953 = v25187;
        }
        v11363 = v20953;
      } else {
        var v20954;
        var v28253 = b$$385.pageY;
        var v29038 = a$$452(document);
        var v28254 = v29038.scrollTop();
        var v27052 = v28253 - v28254;
        var v27053 = c$$315.scrollSensitivity;
        var v25192 = v27052 < v27053;
        if (v25192) {
          var v25189 = a$$452(document);
          var v28255 = a$$452(document);
          var v27054 = v28255.scrollTop();
          var v27055 = c$$315.scrollSpeed;
          var v25190 = v27054 - v27055;
          v20954 = d$$245 = v25189.scrollTop(v25190);
        } else {
          var v29039 = a$$452(window);
          var v28256 = v29039.height();
          var v29040 = b$$385.pageY;
          var v29555 = a$$452(document);
          var v29041 = v29555.scrollTop();
          var v28257 = v29040 - v29041;
          var v27056 = v28256 - v28257;
          var v27057 = c$$315.scrollSensitivity;
          var v25191 = v27056 < v27057;
          if (v25191) {
            var v27058 = a$$452(document);
            var v29042 = a$$452(document);
            var v28258 = v29042.scrollTop();
            var v28259 = c$$315.scrollSpeed;
            var v27059 = v28258 + v28259;
            v25191 = d$$245 = v27058.scrollTop(v27059);
          }
          v20954 = v25191;
        }
        v20954;
        var v20955;
        var v28260 = b$$385.pageX;
        var v29043 = a$$452(document);
        var v28261 = v29043.scrollLeft();
        var v27060 = v28260 - v28261;
        var v27061 = c$$315.scrollSensitivity;
        var v25196 = v27060 < v27061;
        if (v25196) {
          var v25193 = a$$452(document);
          var v28262 = a$$452(document);
          var v27062 = v28262.scrollLeft();
          var v27063 = c$$315.scrollSpeed;
          var v25194 = v27062 - v27063;
          v20955 = d$$245 = v25193.scrollLeft(v25194);
        } else {
          var v29044 = a$$452(window);
          var v28263 = v29044.width();
          var v29045 = b$$385.pageX;
          var v29556 = a$$452(document);
          var v29046 = v29556.scrollLeft();
          var v28264 = v29045 - v29046;
          var v27064 = v28263 - v28264;
          var v27065 = c$$315.scrollSensitivity;
          var v25195 = v27064 < v27065;
          if (v25195) {
            var v27066 = a$$452(document);
            var v29047 = a$$452(document);
            var v28265 = v29047.scrollLeft();
            var v28266 = c$$315.scrollSpeed;
            var v27067 = v28265 + v28266;
            v25195 = d$$245 = v27066.scrollLeft(v27067);
          }
          v20955 = v25195;
        }
        v11363 = v20955;
      }
      v11363;
      var v25197 = !1;
      var v20956 = d$$245 !== v25197;
      if (v20956) {
        var v25198 = a$$452.ui;
        v20956 = v25198.ddmanager;
      }
      var v16949 = v20956;
      if (v16949) {
        var v20957 = c$$315.dropBehaviour;
        v16949 = !v20957;
      }
      var v11364 = v16949;
      if (v11364) {
        var v20958 = a$$452.ui;
        var v16950 = v20958.ddmanager;
        v16950.prepareOffsets(this, b$$385);
      }
    }
    var v31072 = this._convertPositionTo("absolute");
    this.positionAbs = v31072;
    var v20959 = this.options;
    var v16951 = v20959.axis;
    var v11365 = !v16951;
    var v16953 = !v11365;
    if (v16953) {
      var v20960 = this.options;
      var v16952 = v20960.axis;
      v11365 = v16952 != "y";
    }
    var v4532 = v11365;
    if (v4532) {
      var v16954 = this.helper;
      var v11366 = v16954[0];
      var v4531 = v11366.style;
      var v16955 = this.position;
      var v11367 = v16955.left;
      v4531.left = v11367 + "px";
    }
    var v20961 = this.options;
    var v16956 = v20961.axis;
    var v11368 = !v16956;
    var v16958 = !v11368;
    if (v16958) {
      var v20962 = this.options;
      var v16957 = v20962.axis;
      v11368 = v16957 != "x";
    }
    var v4534 = v11368;
    if (v4534) {
      var v16959 = this.helper;
      var v11369 = v16959[0];
      var v4533 = v11369.style;
      var v16960 = this.position;
      var v11370 = v16960.top;
      v4533.top = v11370 + "px";
    }
    var v11371 = this.items;
    var v4535 = v11371.length;
    var e$$228 = v4535 - 1;
    var v4544 = e$$228 >= 0;
    for (;v4544;) {
      var v4536 = this.items;
      var f$$97 = v4536[e$$228];
      var v4537 = f$$97.item;
      var g$$131 = v4537[0];
      var h$$107 = this._intersectsWithPointer(f$$97);
      var v4538 = !h$$107;
      if (v4538) {
        e$$228--;
        v4544 = e$$228 >= 0;
        continue;
      }
      var v11372 = f$$97.instance;
      var v11373 = this.currentContainer;
      var v4539 = v11372 !== v11373;
      if (v4539) {
        e$$228--;
        v4544 = e$$228 >= 0;
        continue;
      }
      var v27068 = this.currentItem;
      var v25199 = v27068[0];
      var v20963 = g$$131 != v25199;
      if (v20963) {
        var v28267 = this.placeholder;
        var v29048;
        var v29557 = h$$107 == 1;
        if (v29557) {
          v29048 = "next";
        } else {
          v29048 = "prev";
        }
        var v28268 = v29048;
        var v27069 = v28267[v28268]();
        var v25200 = v27069[0];
        v20963 = v25200 != g$$131;
      }
      var v16961 = v20963;
      if (v16961) {
        var v25201 = a$$452.ui;
        var v27070 = this.placeholder;
        var v25202 = v27070[0];
        var v20964 = v25201.contains(v25202, g$$131);
        v16961 = !v20964;
      }
      var v11374 = v16961;
      if (v11374) {
        var v16962;
        var v27071 = this.options;
        var v25203 = v27071.type;
        var v20966 = v25203 == "semi-dynamic";
        if (v20966) {
          var v25204 = a$$452.ui;
          var v27072 = this.element;
          var v25205 = v27072[0];
          var v20965 = v25204.contains(v25205, g$$131);
          v16962 = !v20965;
        } else {
          v16962 = !0;
        }
        v11374 = v16962;
      }
      var v4543 = v11374;
      if (v4543) {
        var v4540;
        var v11375 = h$$107 == 1;
        if (v11375) {
          v4540 = "down";
        } else {
          v4540 = "up";
        }
        this.direction = v4540;
        var v20967 = this.options;
        var v16963 = v20967.tolerance;
        var v11376 = v16963 == "pointer";
        var v16964 = !v11376;
        if (v16964) {
          v11376 = this._intersectsWithSides(f$$97);
        }
        var v4541 = v11376;
        if (v4541) {
          this._rearrange(b$$385, f$$97);
        } else {
          break;
        }
        var v4542 = this._uiHash();
        this._trigger("change", b$$385, v4542);
        break;
      }
      e$$228--;
      v4544 = e$$228 >= 0;
    }
    this._contactContainers(b$$385);
    var v27073 = a$$452.ui;
    var v25206 = v27073.ddmanager;
    if (v25206) {
      var v28269 = a$$452.ui;
      var v27074 = v28269.ddmanager;
      v27074.drag(this, b$$385);
    }
    var v20968 = this._uiHash();
    this._trigger("sort", b$$385, v20968);
    this.lastPositionAbs = this.positionAbs;
    return!1;
  }
  function v1301(b$$384, c$$314, d$$244) {
    var e$$227 = this.options;
    var f$$96 = this;
    this.currentContainer = this;
    this.refreshPositions();
    var v31073 = this._createHelper(b$$384);
    this.helper = v31073;
    this._cacheHelperProportions();
    this._cacheMargins();
    var v30846 = this.helper;
    var v31074 = v30846.scrollParent();
    this.scrollParent = v31074;
    var v30835 = this.currentItem;
    var v31075 = v30835.offset();
    this.offset = v31075;
    var v30847 = this.offset;
    var v30836 = v30847.top;
    var v30848 = this.margins;
    var v30837 = v30848.top;
    var v30820 = v30836 - v30837;
    var v30849 = this.offset;
    var v30838 = v30849.left;
    var v30850 = this.margins;
    var v30839 = v30850.left;
    var v30821 = v30838 - v30839;
    this.offset = {top:v30820, left:v30821};
    var v30799 = this.offset;
    var v30851 = b$$384.pageX;
    var v30858 = this.offset;
    var v30852 = v30858.left;
    var v30840 = v30851 - v30852;
    var v30853 = b$$384.pageY;
    var v30859 = this.offset;
    var v30854 = v30859.top;
    var v30841 = v30853 - v30854;
    var v30822 = {left:v30840, top:v30841};
    var v30823 = this._getParentOffset();
    var v30824 = this._getRelativeOffset();
    var v30800 = {click:v30822, parent:v30823, relative:v30824};
    a$$452.extend(v30799, v30800);
    var v30770 = this.helper;
    v30770.css("position", "absolute");
    var v30731 = this.helper;
    var v31076 = v30731.css("position");
    this.cssPosition = v31076;
    var v31077 = this._generatePosition(b$$384);
    this.originalPosition = v31077;
    this.originalPageX = b$$384.pageX;
    this.originalPageY = b$$384.pageY;
    var v30330 = e$$227.cursorAt;
    if (v30330) {
      var v30470 = e$$227.cursorAt;
      this._adjustOffsetFromHelper(v30470);
    }
    var v30471 = this.currentItem;
    var v30331 = v30471.prev();
    var v30131 = v30331[0];
    var v30472 = this.currentItem;
    var v30332 = v30472.parent();
    var v30132 = v30332[0];
    this.domPosition = {prev:v30131, parent:v30132};
    var v30333 = this.helper;
    var v30133 = v30333[0];
    var v30334 = this.currentItem;
    var v30134 = v30334[0];
    var v29880 = v30133 != v30134;
    if (v29880) {
      var v30135 = this.currentItem;
      v30135.hide();
    }
    this._createPlaceholder();
    var v29049 = e$$227.containment;
    if (v29049) {
      this._setContainment();
    }
    var v28270 = e$$227.cursor;
    if (v28270) {
      var v29881 = a$$452("body");
      var v29558 = v29881.css("cursor");
      if (v29558) {
        var v29882 = a$$452("body");
        var v31078 = v29882.css("cursor");
        this._storedCursor = v31078;
      }
      var v29559 = a$$452("body");
      var v29560 = e$$227.cursor;
      v29559.css("cursor", v29560);
    }
    var v27075 = e$$227.opacity;
    if (v27075) {
      var v29561 = this.helper;
      var v29050 = v29561.css("opacity");
      if (v29050) {
        var v29562 = this.helper;
        var v31079 = v29562.css("opacity");
        this._storedOpacity = v31079;
      }
      var v29051 = this.helper;
      var v29052 = e$$227.opacity;
      v29051.css("opacity", v29052);
    }
    var v25207 = e$$227.zIndex;
    if (v25207) {
      var v29053 = this.helper;
      var v28271 = v29053.css("zIndex");
      if (v28271) {
        var v29054 = this.helper;
        var v31080 = v29054.css("zIndex");
        this._storedZIndex = v31080;
      }
      var v28272 = this.helper;
      var v28273 = e$$227.zIndex;
      v28272.css("zIndex", v28273);
    }
    var v28274 = this.scrollParent;
    var v27076 = v28274[0];
    var v25208 = v27076 != document;
    if (v25208) {
      var v29055 = this.scrollParent;
      var v28275 = v29055[0];
      var v27077 = v28275.tagName;
      v25208 = v27077 != "HTML";
    }
    var v20969 = v25208;
    if (v20969) {
      var v25209 = this.scrollParent;
      var v31081 = v25209.offset();
      this.overflowOffset = v31081;
    }
    var v16965 = this._uiHash();
    this._trigger("start", b$$384, v16965);
    var v11377 = this._preserveHelperProportions;
    var v16966 = !v11377;
    if (v16966) {
      this._cacheHelperProportions();
    }
    var v4549 = !d$$244;
    if (v4549) {
      var v11378 = this.containers;
      var v4545 = v11378.length;
      var g$$130 = v4545 - 1;
      var v4548 = g$$130 >= 0;
      for (;v4548;) {
        var v11379 = this.containers;
        var v4546 = v11379[g$$130];
        var v4547 = f$$96._uiHash(this);
        v4546._trigger("activate", b$$384, v4547);
        g$$130--;
        v4548 = g$$130 >= 0;
      }
    }
    var v28276 = a$$452.ui;
    var v27078 = v28276.ddmanager;
    if (v27078) {
      var v29056 = a$$452.ui;
      var v28277 = v29056.ddmanager;
      v28277.current = this;
    }
    var v29057 = a$$452.ui;
    var v28278 = v29057.ddmanager;
    if (v28278) {
      var v29058 = e$$227.dropBehaviour;
      v28278 = !v29058;
    }
    var v27079 = v28278;
    if (v27079) {
      var v29059 = a$$452.ui;
      var v28279 = v29059.ddmanager;
      v28279.prepareOffsets(this, b$$384);
    }
    this.dragging = !0;
    var v20970 = this.helper;
    v20970.addClass("ui-sortable-helper");
    this._mouseDrag(b$$384);
    return!0;
  }
  function v1300(b$$383, c$$313) {
    function v1299() {
      var v11380 = b$$383.target;
      var v4550 = this == v11380;
      if (v4550) {
        h$$106 = !0;
      }
      return;
    }
    function v1298() {
      var v20971 = d$$243.widgetName;
      var v16967 = v20971 + "-item";
      var v11381 = a$$452.data(this, v16967);
      var v4551 = v11381 == f$$95;
      if (v4551) {
        e$$226 = a$$452(this);
        return!1;
      }
      return;
    }
    var d$$243 = this;
    var v4552 = this.reverting;
    if (v4552) {
      return!1;
    }
    var v16968 = this.options;
    var v11382 = v16968.disabled;
    var v16970 = !v11382;
    if (v16970) {
      var v20972 = this.options;
      var v16969 = v20972.type;
      v11382 = v16969 == "static";
    }
    var v4553 = v11382;
    if (v4553) {
      return!1;
    }
    this._refreshItems(b$$383);
    var e$$226 = null;
    var f$$95 = this;
    var v16971 = b$$383.target;
    var v11383 = a$$452(v16971);
    var v4554 = v11383.parents();
    var g$$129 = v4554.each(v1298);
    var v16972 = b$$383.target;
    var v20973 = d$$243.widgetName;
    var v16973 = v20973 + "-item";
    var v11384 = a$$452.data(v16972, v16973);
    var v4555 = v11384 == f$$95;
    if (v4555) {
      var v11385 = b$$383.target;
      e$$226 = a$$452(v11385);
    }
    var v4556 = !e$$226;
    if (v4556) {
      return!1;
    }
    var v16974 = this.options;
    var v11386 = v16974.handle;
    if (v11386) {
      v11386 = !c$$313;
    }
    var v4559 = v11386;
    if (v4559) {
      var h$$106 = !1;
      var v25210 = this.options;
      var v20974 = v25210.handle;
      var v16975 = a$$452(v20974, e$$226);
      var v11387 = v16975.find("*");
      var v4557 = v11387.andSelf();
      v4557.each(v1299);
      var v4558 = !h$$106;
      if (v4558) {
        return!1;
      }
    }
    this.currentItem = e$$226;
    this._removeCurrentsFromItems();
    return!0;
  }
  function v1297(b$$382, c$$312) {
    var v4560;
    var v11389 = b$$382 === "disabled";
    if (v11389) {
      var v16976 = this.options;
      v16976[b$$382] = c$$312;
      var v16977 = this.widget();
      var v20975;
      if (c$$312) {
        v20975 = "addClass";
      } else {
        v20975 = "removeClass";
      }
      var v16978 = v20975;
      v4560 = v16977[v16978]("ui-sortable-disabled");
    } else {
      var v20976 = a$$452.Widget;
      var v16979 = v20976.prototype;
      var v11388 = v16979._setOption;
      v4560 = v11388.apply(this, arguments);
    }
    v4560;
    return;
  }
  function v1296() {
    var v25211 = a$$452.Widget;
    var v20977 = v25211.prototype;
    var v16980 = v20977.destroy;
    v16980.call(this);
    var v16981 = this.element;
    v16981.removeClass("ui-sortable ui-sortable-disabled");
    this._mouseDestroy();
    var v11390 = this.items;
    var v4561 = v11390.length;
    var b$$381 = v4561 - 1;
    var v4564 = b$$381 >= 0;
    for (;v4564;) {
      var v16982 = this.items;
      var v11391 = v16982[b$$381];
      var v4562 = v11391.item;
      var v11392 = this.widgetName;
      var v4563 = v11392 + "-item";
      v4562.removeData(v4563);
      b$$381--;
      v4564 = b$$381 >= 0;
    }
    return this;
  }
  function v1295() {
    var a$$453 = this.options;
    this.containerCache = {};
    var v28280 = this.element;
    v28280.addClass("ui-sortable");
    this.refresh();
    var v25212;
    var v28281 = this.items;
    var v27081 = v28281.length;
    if (v27081) {
      var v29060 = a$$453.axis;
      var v28282 = v29060 === "x";
      var v29062 = !v28282;
      if (v29062) {
        var v30136 = this.items;
        var v29883 = v30136[0];
        var v29563 = v29883.item;
        var v29061 = v29563.css("float");
        v28282 = /left|right/.test(v29061);
      }
      var v27080 = v28282;
      var v28284 = !v27080;
      if (v28284) {
        var v29884 = this.items;
        var v29564 = v29884[0];
        var v29063 = v29564.item;
        var v28283 = v29063.css("display");
        v27080 = /inline|table-cell/.test(v28283);
      }
      v25212 = v27080;
    } else {
      v25212 = !1;
    }
    this.floating = v25212;
    var v20978 = this.element;
    var v31082 = v20978.offset();
    this.offset = v31082;
    this._mouseInit();
    this.ready = !0;
    return;
  }
  var v16983 = a$$452.ui;
  var v11393 = v16983.mouse;
  var v16984 = !1;
  var v20979 = !1;
  var v20980 = !1;
  var v20981 = !1;
  var v20982 = !1;
  var v20983 = !0;
  var v20984 = !1;
  var v20985 = !1;
  var v20986 = !1;
  var v20987 = !1;
  var v20988 = !1;
  var v20989 = !1;
  var v20990 = !1;
  var v20991 = !0;
  var v16985 = {appendTo:"parent", axis:v20979, connectWith:v20980, containment:v20981, cursor:"auto", cursorAt:v20982, dropOnEmpty:v20983, forcePlaceholderSize:v20984, forceHelperSize:v20985, grid:v20986, handle:v20987, helper:"original", items:"> *", opacity:v20988, placeholder:v20989, revert:v20990, scroll:v20991, scrollSensitivity:20, scrollSpeed:20, scope:"default", tolerance:"intersect", zIndex:1E3};
  var v11394 = {widgetEventPrefix:"sort", ready:v16984, options:v16985, _create:v1295, destroy:v1296, _setOption:v1297, _mouseCapture:v1300, _mouseStart:v1301, _mouseDrag:v1302, _mouseStop:v1304, cancel:v1305, serialize:v1307, toArray:v1309, _intersectsWith:v1310, _intersectsWithPointer:v1311, _intersectsWithSides:v1312, _getDragVerticalDirection:v1313, _getDragHorizontalDirection:v1314, refresh:v1315, _connectWith:v1316, _getItemsAsjQuery:v1318, _removeCurrentsFromItems:v1319, _refreshItems:v1320, 
  refreshPositions:v1321, _createPlaceholder:v1324, _contactContainers:v1325, _createHelper:v1326, _adjustOffsetFromHelper:v1327, _getParentOffset:v1328, _getRelativeOffset:v1329, _cacheMargins:v1330, _cacheHelperProportions:v1331, _setContainment:v1332, _convertPositionTo:v1333, _generatePosition:v1334, _rearrange:v1336, _clear:v1348, _trigger:v1349, _uiHash:v1350};
  a$$452.widget("ui.sortable", v11393, v11394);
  var v16986 = a$$452.ui;
  var v11395 = v16986.sortable;
  var v11396 = {version:"1.8.24"};
  a$$452.extend(v11395, v11396);
  return;
}
function v1294(a$$451, b$$374) {
  function v1293(b$$379) {
    function v1292() {
      var d$$242 = a$$451.data(this, "selectable-item");
      var v27082 = d$$242.$element;
      var v25213 = v27082.removeClass("ui-selecting");
      v25213.addClass("ui-selected");
      d$$242.selecting = !1;
      d$$242.selected = !0;
      d$$242.startselected = !0;
      var v16987 = d$$242.element;
      var v11397 = {selected:v16987};
      c$$311._trigger("selected", b$$379, v11397);
      return;
    }
    function v1291() {
      var d$$241 = a$$451.data(this, "selectable-item");
      var v20992 = d$$241.$element;
      v20992.removeClass("ui-unselecting");
      d$$241.unselecting = !1;
      d$$241.startselected = !1;
      var v16988 = d$$241.element;
      var v11398 = {unselected:v16988};
      c$$311._trigger("unselected", b$$379, v11398);
      return;
    }
    var c$$311 = this;
    this.dragged = !1;
    var d$$240 = this.options;
    var v28285 = this.element;
    var v27083 = v28285[0];
    var v25214 = a$$451(".ui-unselecting", v27083);
    v25214.each(v1291);
    var v28286 = this.element;
    var v27084 = v28286[0];
    var v25215 = a$$451(".ui-selecting", v27084);
    v25215.each(v1292);
    this._trigger("stop", b$$379);
    var v16989 = this.helper;
    v16989.remove();
    return!1;
  }
  function v1290(b$$378) {
    function v1289() {
      var i$$164 = a$$451.data(this, "selectable-item");
      var v11399 = !i$$164;
      var v16992 = !v11399;
      if (v16992) {
        var v16990 = i$$164.element;
        var v20993 = c$$310.element;
        var v16991 = v20993[0];
        v11399 = v16990 == v16991;
      }
      var v4565 = v11399;
      if (v4565) {
        return;
      }
      var j$$76 = !1;
      var v11400;
      var v20994 = d$$239.tolerance;
      var v16995 = v20994 == "touch";
      if (v16995) {
        var v28287 = i$$164.left;
        var v27085 = v28287 > g$$128;
        var v28289 = !v27085;
        if (v28289) {
          var v28288 = i$$164.right;
          v27085 = v28288 < e$$225;
        }
        var v25216 = v27085;
        var v27087 = !v25216;
        if (v27087) {
          var v27086 = i$$164.top;
          v25216 = v27086 > h$$105;
        }
        var v20995 = v25216;
        var v25218 = !v20995;
        if (v25218) {
          var v25217 = i$$164.bottom;
          v20995 = v25217 < f$$94;
        }
        var v16993 = v20995;
        v11400 = j$$76 = !v16993;
      } else {
        var v20996 = d$$239.tolerance;
        var v16994 = v20996 == "fit";
        if (v16994) {
          var v28290 = i$$164.left;
          var v27088 = v28290 > e$$225;
          if (v27088) {
            var v28291 = i$$164.right;
            v27088 = v28291 < g$$128;
          }
          var v25219 = v27088;
          if (v25219) {
            var v27089 = i$$164.top;
            v25219 = v27089 > f$$94;
          }
          var v20997 = v25219;
          if (v20997) {
            var v25220 = i$$164.bottom;
            v20997 = v25220 < h$$105;
          }
          v16994 = j$$76 = v20997;
        }
        v11400 = v16994;
      }
      v11400;
      var v11401;
      if (j$$76) {
        var v25221 = i$$164.selected;
        if (v25221) {
          var v28292 = i$$164.$element;
          v28292.removeClass("ui-selected");
          i$$164.selected = !1;
        }
        var v25222 = i$$164.unselecting;
        if (v25222) {
          var v28293 = i$$164.$element;
          v28293.removeClass("ui-unselecting");
          i$$164.unselecting = !1;
        }
        var v20998 = i$$164.selecting;
        var v25223 = !v20998;
        if (v25223) {
          var v28294 = i$$164.$element;
          v28294.addClass("ui-selecting");
          i$$164.selecting = !0;
          var v28295 = i$$164.element;
          var v27090 = {selecting:v28295};
          v20998 = c$$310._trigger("selecting", b$$378, v27090);
        }
        v11401 = v20998;
      } else {
        var v20999 = i$$164.selecting;
        if (v20999) {
          var v25224;
          var v29064 = b$$378.metaKey;
          var v29565 = !v29064;
          if (v29565) {
            v29064 = b$$378.ctrlKey;
          }
          var v28296 = v29064;
          if (v28296) {
            v28296 = i$$164.startselected;
          }
          var v27091 = v28296;
          if (v27091) {
            var v29566 = i$$164.$element;
            v29566.removeClass("ui-selecting");
            i$$164.selecting = !1;
            var v29065 = i$$164.$element;
            v29065.addClass("ui-selected");
            v25224 = i$$164.selected = !0;
          } else {
            var v29567 = i$$164.$element;
            v29567.removeClass("ui-selecting");
            i$$164.selecting = !1;
            var v29066 = i$$164.startselected;
            if (v29066) {
              var v29885 = i$$164.$element;
              v29885.addClass("ui-unselecting");
              i$$164.unselecting = !0;
            }
            var v29067 = i$$164.element;
            var v28297 = {unselecting:v29067};
            v25224 = c$$310._trigger("unselecting", b$$378, v28297);
          }
          v25224;
        }
        var v28298 = i$$164.selected;
        if (v28298) {
          var v29068 = b$$378.metaKey;
          v28298 = !v29068;
        }
        var v27092 = v28298;
        if (v27092) {
          var v28299 = b$$378.ctrlKey;
          v27092 = !v28299;
        }
        var v25225 = v27092;
        if (v25225) {
          var v27093 = i$$164.startselected;
          v25225 = !v27093;
        }
        var v21000 = v25225;
        if (v21000) {
          var v29568 = i$$164.$element;
          v29568.removeClass("ui-selected");
          i$$164.selected = !1;
          var v29069 = i$$164.$element;
          v29069.addClass("ui-unselecting");
          i$$164.unselecting = !0;
          var v28300 = i$$164.element;
          var v27094 = {unselecting:v28300};
          v21000 = c$$310._trigger("unselecting", b$$378, v27094);
        }
        v11401 = v21000;
      }
      v11401;
      return;
    }
    var c$$310 = this;
    this.dragged = !0;
    var v11402 = this.options;
    var v4566 = v11402.disabled;
    if (v4566) {
      return;
    }
    var d$$239 = this.options;
    var v4567 = this.opos;
    var e$$225 = v4567[0];
    var v4568 = this.opos;
    var f$$94 = v4568[1];
    var g$$128 = b$$378.pageX;
    var h$$105 = b$$378.pageY;
    var v4569 = e$$225 > g$$128;
    if (v4569) {
      var i$$163 = g$$128;
      g$$128 = e$$225;
      e$$225 = i$$163;
    }
    var v4570 = f$$94 > h$$105;
    if (v4570) {
      i$$163 = h$$105;
      h$$105 = f$$94;
      f$$94 = i$$163;
    }
    var v16996 = this.helper;
    var v21001 = g$$128 - e$$225;
    var v21002 = h$$105 - f$$94;
    var v16997 = {left:e$$225, top:f$$94, width:v21001, height:v21002};
    v16996.css(v16997);
    var v16998 = this.selectees;
    v16998.each(v1289);
    return!1;
  }
  function v1288(b$$377) {
    function v1287() {
      var d$$238 = a$$451.data(this, "selectable-item");
      if (d$$238) {
        var v16999 = b$$377.metaKey;
        var v11403 = !v16999;
        if (v11403) {
          var v17000 = b$$377.ctrlKey;
          v11403 = !v17000;
        }
        var v4571 = v11403;
        var v11405 = !v4571;
        if (v11405) {
          var v17001 = d$$238.$element;
          var v11404 = v17001.hasClass("ui-selected");
          v4571 = !v11404;
        }
        var e$$224 = v4571;
        var v28301 = d$$238.$element;
        var v29070;
        if (e$$224) {
          v29070 = "ui-unselecting";
        } else {
          v29070 = "ui-selected";
        }
        var v28302 = v29070;
        var v27095 = v28301.removeClass(v28302);
        var v28303;
        if (e$$224) {
          v28303 = "ui-selecting";
        } else {
          v28303 = "ui-unselecting";
        }
        var v27096 = v28303;
        v27095.addClass(v27096);
        d$$238.unselecting = !e$$224;
        d$$238.selecting = e$$224;
        d$$238.selected = e$$224;
        var v17002;
        if (e$$224) {
          var v25226 = d$$238.element;
          var v21003 = {selecting:v25226};
          v17002 = c$$309._trigger("selecting", b$$377, v21003);
        } else {
          var v25227 = d$$238.element;
          var v21004 = {unselecting:v25227};
          v17002 = c$$309._trigger("unselecting", b$$377, v21004);
        }
        v17002;
        return!1;
      }
      return;
    }
    function v1286() {
      var d$$237 = a$$451.data(this, "selectable-item");
      d$$237.startselected = !0;
      var v21005 = b$$377.metaKey;
      var v17003 = !v21005;
      if (v17003) {
        var v21006 = b$$377.ctrlKey;
        v17003 = !v21006;
      }
      var v11406 = v17003;
      if (v11406) {
        var v28304 = d$$237.$element;
        v28304.removeClass("ui-selected");
        d$$237.selected = !1;
        var v27097 = d$$237.$element;
        v27097.addClass("ui-unselecting");
        d$$237.unselecting = !0;
        var v25228 = d$$237.element;
        var v21007 = {unselecting:v25228};
        c$$309._trigger("unselecting", b$$377, v21007);
      }
      return;
    }
    var c$$309 = this;
    var v4572 = b$$377.pageX;
    var v4573 = b$$377.pageY;
    this.opos = [v4572, v4573];
    var v11407 = this.options;
    var v4574 = v11407.disabled;
    if (v4574) {
      return;
    }
    var d$$236 = this.options;
    var v28305 = d$$236.filter;
    var v29071 = this.element;
    var v28306 = v29071[0];
    var v31083 = a$$451(v28305, v28306);
    this.selectees = v31083;
    this._trigger("start", b$$377);
    var v28307 = d$$236.appendTo;
    var v27098 = a$$451(v28307);
    var v27099 = this.helper;
    v27098.append(v27099);
    var v25229 = this.helper;
    var v27100 = b$$377.clientX;
    var v27101 = b$$377.clientY;
    var v25230 = {left:v27100, top:v27101, width:0, height:0};
    v25229.css(v25230);
    var v21008 = d$$236.autoRefresh;
    if (v21008) {
      this.refresh();
    }
    var v21009 = this.selectees;
    var v17004 = v21009.filter(".ui-selected");
    v17004.each(v1286);
    var v25231 = b$$377.target;
    var v21010 = a$$451(v25231);
    var v17005 = v21010.parents();
    var v11408 = v17005.andSelf();
    v11408.each(v1287);
    return;
  }
  function v1285() {
    var v25232 = this.selectees;
    var v21011 = v25232.removeClass("ui-selectee");
    v21011.removeData("selectable-item");
    var v27102 = this.element;
    var v25233 = v27102.removeClass("ui-selectable ui-selectable-disabled");
    var v21012 = v25233.removeData("selectable");
    v21012.unbind(".selectable");
    this._mouseDestroy();
    return this;
  }
  function v1284() {
    function v1283() {
      function v1282() {
        var b$$376 = a$$451(this);
        var c$$308 = b$$376.offset();
        var v11409 = c$$308.left;
        var v11410 = c$$308.top;
        var v17006 = c$$308.left;
        var v17007 = b$$376.outerWidth();
        var v11411 = v17006 + v17007;
        var v17008 = c$$308.top;
        var v17009 = b$$376.outerHeight();
        var v11412 = v17008 + v17009;
        var v11413 = !1;
        var v11414 = b$$376.hasClass("ui-selected");
        var v11415 = b$$376.hasClass("ui-selecting");
        var v11416 = b$$376.hasClass("ui-unselecting");
        var v4575 = {element:this, $element:b$$376, left:v11409, top:v11410, right:v11411, bottom:v11412, startselected:v11413, selected:v11414, selecting:v11415, unselecting:v11416};
        a$$451.data(this, "selectable-item", v4575);
        return;
      }
      var v21013 = b$$375.options;
      var v17010 = v21013.filter;
      var v21014 = b$$375.element;
      var v17011 = v21014[0];
      c$$307 = a$$451(v17010, v17011);
      c$$307.addClass("ui-selectee");
      c$$307.each(v1282);
      return;
    }
    var b$$375 = this;
    var v11417 = this.element;
    v11417.addClass("ui-selectable");
    this.dragged = !1;
    var c$$307;
    this.refresh = v1283;
    this.refresh();
    var v31084 = c$$307.addClass("ui-selectee");
    this.selectees = v31084;
    this._mouseInit();
    var v31085 = a$$451("<div class='ui-selectable-helper'></div>");
    this.helper = v31085;
    return;
  }
  var v17012 = a$$451.ui;
  var v11418 = v17012.mouse;
  var v21015 = !0;
  var v17013 = {appendTo:"body", autoRefresh:v21015, distance:0, filter:"*", tolerance:"touch"};
  var v11419 = {options:v17013, _create:v1284, destroy:v1285, _mouseStart:v1288, _mouseDrag:v1290, _mouseStop:v1293};
  a$$451.widget("ui.selectable", v11418, v11419);
  var v17014 = a$$451.ui;
  var v11420 = v17014.selectable;
  var v11421 = {version:"1.8.24"};
  a$$451.extend(v11420, v11421);
  return;
}
function v1281(a$$434, b$$331) {
  function v1280(b$$373, c$$306) {
    var v4576 = a$$434(this);
    var d$$235 = v4576.data("resizable");
    var e$$223 = d$$235.options;
    var f$$93 = d$$235.size;
    var g$$127 = d$$235.originalSize;
    var h$$104 = d$$235.originalPosition;
    var i$$162 = d$$235.axis;
    var v4577 = e$$223._aspectRatio;
    var v11422 = !v4577;
    if (v11422) {
      v4577 = b$$373.shiftKey;
    }
    var j$$75 = v4577;
    var v4578;
    var v21016 = e$$223.grid;
    var v17015 = typeof v21016;
    var v11425 = v17015 == "number";
    if (v11425) {
      var v11423 = e$$223.grid;
      var v11424 = e$$223.grid;
      v4578 = [v11423, v11424];
    } else {
      v4578 = e$$223.grid;
    }
    e$$223.grid = v4578;
    var v21017 = f$$93.width;
    var v21018 = g$$127.width;
    var v17016 = v21017 - v21018;
    var v25234 = e$$223.grid;
    var v21019 = v25234[0];
    var v25235 = !v21019;
    if (v25235) {
      v21019 = 1;
    }
    var v17017 = v21019;
    var v11426 = v17016 / v17017;
    var v4579 = Math.round(v11426);
    var v17018 = e$$223.grid;
    var v11427 = v17018[0];
    var v17019 = !v11427;
    if (v17019) {
      v11427 = 1;
    }
    var v4580 = v11427;
    var k$$52 = v4579 * v4580;
    var v21020 = f$$93.height;
    var v21021 = g$$127.height;
    var v17020 = v21020 - v21021;
    var v25236 = e$$223.grid;
    var v21022 = v25236[1];
    var v25237 = !v21022;
    if (v25237) {
      v21022 = 1;
    }
    var v17021 = v21022;
    var v11428 = v17020 / v17021;
    var v4581 = Math.round(v11428);
    var v17022 = e$$223.grid;
    var v11429 = v17022[1];
    var v17023 = !v11429;
    if (v17023) {
      v11429 = 1;
    }
    var v4582 = v11429;
    var l$$62 = v4581 * v4582;
    var v4583;
    var v11431 = /^(se|s|e)$/.test(i$$162);
    if (v11431) {
      var v17024 = d$$235.size;
      var v21023 = g$$127.width;
      v17024.width = v21023 + k$$52;
      var v17025 = d$$235.size;
      var v21024 = g$$127.height;
      v4583 = v17025.height = v21024 + l$$62;
    } else {
      var v11430;
      var v17027 = /^(ne)$/.test(i$$162);
      if (v17027) {
        var v25238 = d$$235.size;
        var v27103 = g$$127.width;
        v25238.width = v27103 + k$$52;
        var v25239 = d$$235.size;
        var v27104 = g$$127.height;
        v25239.height = v27104 + l$$62;
        var v21025 = d$$235.position;
        var v25240 = h$$104.top;
        v11430 = v21025.top = v25240 - l$$62;
      } else {
        var v17026;
        var v21026 = /^(sw)$/.test(i$$162);
        if (v21026) {
          var v27105 = d$$235.size;
          var v28308 = g$$127.width;
          v27105.width = v28308 + k$$52;
          var v27106 = d$$235.size;
          var v28309 = g$$127.height;
          v27106.height = v28309 + l$$62;
          var v25241 = d$$235.position;
          var v27107 = h$$104.left;
          v17026 = v25241.left = v27107 - k$$52;
        } else {
          var v28310 = d$$235.size;
          var v29072 = g$$127.width;
          v28310.width = v29072 + k$$52;
          var v28311 = d$$235.size;
          var v29073 = g$$127.height;
          v28311.height = v29073 + l$$62;
          var v27108 = d$$235.position;
          var v28312 = h$$104.top;
          v27108.top = v28312 - l$$62;
          var v25242 = d$$235.position;
          var v27109 = h$$104.left;
          v17026 = v25242.left = v27109 - k$$52;
        }
        v11430 = v17026;
      }
      v4583 = v11430;
    }
    v4583;
    return;
  }
  function v1279(b$$372, c$$305) {
    var v4584 = a$$434(this);
    var d$$234 = v4584.data("resizable");
    var e$$222 = d$$234.options;
    var v11432 = d$$234.ghost;
    if (v11432) {
      v11432 = d$$234.helper;
    }
    var v4585 = v11432;
    if (v4585) {
      var v17028 = d$$234.helper;
      var v11433 = v17028.get(0);
      var v17029 = d$$234.ghost;
      var v11434 = v17029.get(0);
      v11433.removeChild(v11434);
    }
    return;
  }
  function v1278(b$$371, c$$304) {
    var v4586 = a$$434(this);
    var d$$233 = v4586.data("resizable");
    var e$$221 = d$$233.options;
    var v4587 = d$$233.ghost;
    if (v4587) {
      var v11435 = d$$233.ghost;
      var v21027 = d$$233.size;
      var v17030 = v21027.height;
      var v21028 = d$$233.size;
      var v17031 = v21028.width;
      var v11436 = {position:"relative", height:v17030, width:v17031};
      v11435.css(v11436);
    }
    return;
  }
  function v1277(b$$370, c$$303) {
    var v4588 = a$$434(this);
    var d$$232 = v4588.data("resizable");
    var e$$220 = d$$232.options;
    var f$$92 = d$$232.size;
    var v17032 = d$$232.originalElement;
    var v31086 = v17032.clone();
    d$$232.ghost = v31086;
    var v25243 = d$$232.ghost;
    var v27110 = f$$92.height;
    var v27111 = f$$92.width;
    var v25244 = {opacity:.25, display:"block", position:"relative", height:v27110, width:v27111, margin:0, left:0, top:0};
    var v21029 = v25243.css(v25244);
    var v17033 = v21029.addClass("ui-resizable-ghost");
    var v21030;
    var v28313 = e$$220.ghost;
    var v27112 = typeof v28313;
    var v25245 = v27112 == "string";
    if (v25245) {
      v21030 = e$$220.ghost;
    } else {
      v21030 = "";
    }
    var v17034 = v21030;
    v17033.addClass(v17034);
    var v11437 = d$$232.ghost;
    var v11438 = d$$232.helper;
    v11437.appendTo(v11438);
    return;
  }
  function v1276(b$$369, c$$302) {
    var v4589 = a$$434(this);
    var d$$231 = v4589.data("resizable");
    var e$$219 = d$$231.options;
    var f$$91 = d$$231.position;
    var g$$126 = d$$231.containerOffset;
    var h$$103 = d$$231.containerPosition;
    var i$$161 = d$$231.containerElement;
    var v4590 = d$$231.helper;
    var j$$74 = a$$434(v4590);
    var k$$51 = j$$74.offset();
    var v4591 = j$$74.outerWidth();
    var v11439 = d$$231.sizeDiff;
    var v4592 = v11439.width;
    var l$$61 = v4591 - v4592;
    var v4593 = j$$74.outerHeight();
    var v11440 = d$$231.sizeDiff;
    var v4594 = v11440.height;
    var m$$34 = v4593 - v4594;
    var v21031 = d$$231._helper;
    if (v21031) {
      var v25246 = e$$219.animate;
      v21031 = !v25246;
    }
    var v17035 = v21031;
    if (v17035) {
      var v21032 = i$$161.css("position");
      v17035 = /relative/.test(v21032);
    }
    var v11441 = v17035;
    if (v11441) {
      var v17036 = a$$434(this);
      var v27113 = k$$51.left;
      var v27114 = h$$103.left;
      var v25247 = v27113 - v27114;
      var v25248 = g$$126.left;
      var v21033 = v25247 - v25248;
      var v17037 = {left:v21033, width:l$$61, height:m$$34};
      v17036.css(v17037);
    }
    var v21034 = d$$231._helper;
    if (v21034) {
      var v25249 = e$$219.animate;
      v21034 = !v25249;
    }
    var v17038 = v21034;
    if (v17038) {
      var v21035 = i$$161.css("position");
      v17038 = /static/.test(v21035);
    }
    var v11442 = v17038;
    if (v11442) {
      var v17039 = a$$434(this);
      var v27115 = k$$51.left;
      var v27116 = h$$103.left;
      var v25250 = v27115 - v27116;
      var v25251 = g$$126.left;
      var v21036 = v25250 - v25251;
      var v17040 = {left:v21036, width:l$$61, height:m$$34};
      v17039.css(v17040);
    }
    return;
  }
  function v1275(b$$368, c$$301) {
    var v4595 = a$$434(this);
    var d$$230 = v4595.data("resizable");
    var e$$218 = d$$230.options;
    var f$$90 = d$$230.containerSize;
    var g$$125 = d$$230.containerOffset;
    var h$$102 = d$$230.size;
    var i$$160 = d$$230.position;
    var v4596 = d$$230._aspectRatio;
    var v11443 = !v4596;
    if (v11443) {
      v4596 = b$$368.shiftKey;
    }
    var j$$73 = v4596;
    var k$$50 = {top:0, left:0};
    var l$$60 = d$$230.containerElement;
    var v28314 = l$$60[0];
    var v27117 = v28314 != document;
    if (v27117) {
      var v28315 = l$$60.css("position");
      v27117 = /static/.test(v28315);
    }
    var v25252 = v27117;
    if (v25252) {
      k$$50 = g$$125;
    }
    var v27118 = i$$160.left;
    var v28316;
    var v29074 = d$$230._helper;
    if (v29074) {
      v28316 = g$$125.left;
    } else {
      v28316 = 0;
    }
    var v27119 = v28316;
    var v25253 = v27118 < v27119;
    if (v25253) {
      var v29075 = d$$230.size;
      var v29886 = d$$230.size;
      var v29569 = v29886.width;
      var v29887;
      var v30141 = d$$230._helper;
      if (v30141) {
        var v30335 = d$$230.position;
        var v30137 = v30335.left;
        var v30138 = g$$125.left;
        v29887 = v30137 - v30138;
      } else {
        var v30336 = d$$230.position;
        var v30139 = v30336.left;
        var v30140 = k$$50.left;
        v29887 = v30139 - v30140;
      }
      var v29570 = v29887;
      v29075.width = v29569 + v29570;
      if (j$$73) {
        var v29571 = d$$230.size;
        var v30142 = d$$230.size;
        var v29888 = v30142.width;
        var v29889 = d$$230.aspectRatio;
        v29571.height = v29888 / v29889;
      }
      var v28317 = d$$230.position;
      var v29076;
      var v29572 = e$$218.helper;
      if (v29572) {
        v29076 = g$$125.left;
      } else {
        v29076 = 0;
      }
      v28317.left = v29076;
    }
    var v25254 = i$$160.top;
    var v27120;
    var v28318 = d$$230._helper;
    if (v28318) {
      v27120 = g$$125.top;
    } else {
      v27120 = 0;
    }
    var v25255 = v27120;
    var v21037 = v25254 < v25255;
    if (v21037) {
      var v28319 = d$$230.size;
      var v29573 = d$$230.size;
      var v29077 = v29573.height;
      var v29574;
      var v29893 = d$$230._helper;
      if (v29893) {
        var v30143 = d$$230.position;
        var v29890 = v30143.top;
        var v29891 = g$$125.top;
        v29574 = v29890 - v29891;
      } else {
        var v29892 = d$$230.position;
        v29574 = v29892.top;
      }
      var v29078 = v29574;
      v28319.height = v29077 + v29078;
      if (j$$73) {
        var v29079 = d$$230.size;
        var v29894 = d$$230.size;
        var v29575 = v29894.height;
        var v29576 = d$$230.aspectRatio;
        v29079.width = v29575 * v29576;
      }
      var v27121 = d$$230.position;
      var v28320;
      var v29080 = d$$230._helper;
      if (v29080) {
        v28320 = g$$125.top;
      } else {
        v28320 = 0;
      }
      v27121.top = v28320;
    }
    var v17041 = d$$230.offset;
    var v25256 = d$$230.parentData;
    var v21038 = v25256.left;
    var v25257 = d$$230.position;
    var v21039 = v25257.left;
    v17041.left = v21038 + v21039;
    var v11444 = d$$230.offset;
    var v21040 = d$$230.parentData;
    var v17042 = v21040.top;
    var v21041 = d$$230.position;
    var v17043 = v21041.top;
    v11444.top = v17042 + v17043;
    var v17044;
    var v21046 = d$$230._helper;
    if (v21046) {
      var v25258 = d$$230.offset;
      var v21042 = v25258.left;
      var v21043 = k$$50.left;
      v17044 = v21042 - v21043;
    } else {
      var v25259 = d$$230.offset;
      var v21044 = v25259.left;
      var v21045 = k$$50.left;
      v17044 = v21044 - v21045;
    }
    var v11445 = v17044;
    var v17045 = d$$230.sizeDiff;
    var v11446 = v17045.width;
    var v4597 = v11445 + v11446;
    var m$$33 = Math.abs(v4597);
    var v17046;
    var v21051 = d$$230._helper;
    if (v21051) {
      var v25260 = d$$230.offset;
      var v21047 = v25260.top;
      var v21048 = k$$50.top;
      v17046 = v21047 - v21048;
    } else {
      var v25261 = d$$230.offset;
      var v21049 = v25261.top;
      var v21050 = g$$125.top;
      v17046 = v21049 - v21050;
    }
    var v11447 = v17046;
    var v17047 = d$$230.sizeDiff;
    var v11448 = v17047.height;
    var v4598 = v11447 + v11448;
    var n$$84 = Math.abs(v4598);
    var v11449 = d$$230.containerElement;
    var v4599 = v11449.get(0);
    var v17048 = d$$230.element;
    var v11450 = v17048.parent();
    var v4600 = v11450.get(0);
    var o$$20 = v4599 == v4600;
    var v11451 = d$$230.containerElement;
    var v4601 = v11451.css("position");
    var p$$41 = /relative|absolute/.test(v4601);
    var v17049 = o$$20 && p$$41;
    if (v17049) {
      var v27122 = d$$230.parentData;
      var v25262 = v27122.left;
      m$$33 = m$$33 - v25262;
    }
    var v27123 = d$$230.size;
    var v25263 = v27123.width;
    var v21052 = m$$33 + v25263;
    var v25264 = d$$230.parentData;
    var v21053 = v25264.width;
    var v17050 = v21052 >= v21053;
    if (v17050) {
      var v25265 = d$$230.size;
      var v28321 = d$$230.parentData;
      var v27124 = v28321.width;
      v25265.width = v27124 - m$$33;
      if (j$$73) {
        var v27125 = d$$230.size;
        var v29081 = d$$230.size;
        var v28322 = v29081.width;
        var v28323 = d$$230.aspectRatio;
        v27125.height = v28322 / v28323;
      }
    }
    var v25266 = d$$230.size;
    var v21054 = v25266.height;
    var v17051 = n$$84 + v21054;
    var v21055 = d$$230.parentData;
    var v17052 = v21055.height;
    var v11452 = v17051 >= v17052;
    if (v11452) {
      var v21056 = d$$230.size;
      var v27126 = d$$230.parentData;
      var v25267 = v27126.height;
      v21056.height = v25267 - n$$84;
      if (j$$73) {
        var v25268 = d$$230.size;
        var v28324 = d$$230.size;
        var v27127 = v28324.height;
        var v27128 = d$$230.aspectRatio;
        v25268.width = v27127 * v27128;
      }
    }
    return;
  }
  function v1274(b$$366, d$$229) {
    function v1273(a$$448, b$$367) {
      var v4602 = k$$49;
      var v17053 = "padding" + b$$367;
      var v11453 = j$$72.css(v17053);
      var v31087 = c$$273(v11453);
      v4602[a$$448] = v31087;
      return;
    }
    var v4603 = a$$434(this);
    var e$$217 = v4603.data("resizable");
    var f$$89 = e$$217.options;
    var g$$124 = e$$217.element;
    var h$$101 = f$$89.containment;
    var v4604;
    var v11455 = h$$101 instanceof a$$434;
    if (v11455) {
      v4604 = h$$101.get(0);
    } else {
      var v11454;
      var v17055 = /parent/.test(h$$101);
      if (v17055) {
        var v17054 = g$$124.parent();
        v11454 = v17054.get(0);
      } else {
        v11454 = h$$101;
      }
      v4604 = v11454;
    }
    var i$$159 = v4604;
    var v4605 = !i$$159;
    if (v4605) {
      return;
    }
    var v4606 = e$$217;
    var v31088 = a$$434(i$$159);
    v4606.containerElement = v31088;
    var v11456 = /document/.test(h$$101);
    var v17056 = !v11456;
    if (v17056) {
      v11456 = h$$101 == document;
    }
    var v4613 = v11456;
    if (v4613) {
      e$$217.containerOffset = {left:0, top:0};
      e$$217.containerPosition = {left:0, top:0};
      var v11457 = e$$217;
      var v17057 = a$$434(document);
      var v21057 = a$$434(document);
      var v17058 = v21057.width();
      var v25269 = a$$434(document);
      var v21058 = v25269.height();
      var v25271 = !v21058;
      if (v25271) {
        var v27129 = document.body;
        var v25270 = v27129.parentNode;
        v21058 = v25270.scrollHeight;
      }
      var v17059 = v21058;
      v11457.parentData = {element:v17057, left:0, top:0, width:v17058, height:v17059};
    } else {
      var j$$72 = a$$434(i$$159);
      var k$$49 = [];
      var v25272 = ["Top", "Right", "Left", "Bottom"];
      var v21059 = a$$434(v25272);
      v21059.each(v1273);
      var v21060 = e$$217;
      var v31089 = j$$72.offset();
      v21060.containerOffset = v31089;
      var v17060 = e$$217;
      var v31090 = j$$72.position();
      v17060.containerPosition = v31090;
      var v11458 = e$$217;
      var v21061 = j$$72.innerHeight();
      var v21062 = k$$49[3];
      var v17061 = v21061 - v21062;
      var v21063 = j$$72.innerWidth();
      var v21064 = k$$49[1];
      var v17062 = v21063 - v21064;
      v11458.containerSize = {height:v17061, width:v17062};
      var l$$59 = e$$217.containerOffset;
      var v4607 = e$$217.containerSize;
      var m$$32 = v4607.height;
      var v4608 = e$$217.containerSize;
      var n$$83 = v4608.width;
      var v4609;
      var v17063 = a$$434.ui;
      var v11459 = v17063.hasScroll(i$$159, "left");
      if (v11459) {
        v4609 = i$$159.scrollWidth;
      } else {
        v4609 = n$$83;
      }
      var o$$19 = v4609;
      var v4610;
      var v17064 = a$$434.ui;
      var v11460 = v17064.hasScroll(i$$159);
      if (v11460) {
        v4610 = i$$159.scrollHeight;
      } else {
        v4610 = m$$32;
      }
      var p$$40 = v4610;
      var v4611 = l$$59.left;
      var v4612 = l$$59.top;
      e$$217.parentData = {element:i$$159, left:v4611, top:v4612, width:o$$19, height:p$$40};
    }
    return;
  }
  function v1272(b$$365, c$$299) {
    function v1271() {
      var v17065 = d$$228.element;
      var v11461 = v17065.css("width");
      var v4614 = parseInt(v11461, 10);
      var v17066 = d$$228.element;
      var v11462 = v17066.css("height");
      var v4615 = parseInt(v11462, 10);
      var v17067 = d$$228.element;
      var v11463 = v17067.css("top");
      var v4616 = parseInt(v11463, 10);
      var v17068 = d$$228.element;
      var v11464 = v17068.css("left");
      var v4617 = parseInt(v11464, 10);
      var c$$300 = {width:v4614, height:v4615, top:v4616, left:v4617};
      var v21065 = f$$88;
      if (v21065) {
        v21065 = f$$88.length;
      }
      var v17069 = v21065;
      if (v17069) {
        var v25273 = f$$88[0];
        var v21066 = a$$434(v25273);
        var v25274 = c$$300.width;
        var v25275 = c$$300.height;
        var v21067 = {width:v25274, height:v25275};
        v21066.css(v21067);
      }
      d$$228._updateCache(c$$300);
      d$$228._propagate("resize", b$$365);
      return;
    }
    var v4618 = a$$434(this);
    var d$$228 = v4618.data("resizable");
    var e$$216 = d$$228.options;
    var f$$88 = d$$228._proportionallyResizeElements;
    var v4619 = f$$88.length;
    if (v4619) {
      var v17070 = f$$88[0];
      var v11465 = v17070.nodeName;
      v4619 = /textarea/i.test(v11465);
    }
    var g$$123 = v4619;
    var v4620;
    var v17071 = g$$123;
    if (v17071) {
      var v21068 = a$$434.ui;
      var v21069 = f$$88[0];
      v17071 = v21068.hasScroll(v21069, "left");
    }
    var v11467 = v17071;
    if (v11467) {
      v4620 = 0;
    } else {
      var v11466 = d$$228.sizeDiff;
      v4620 = v11466.height;
    }
    var h$$100 = v4620;
    var v4621;
    if (g$$123) {
      v4621 = 0;
    } else {
      var v11468 = d$$228.sizeDiff;
      v4621 = v11468.width;
    }
    var i$$158 = v4621;
    var v17072 = d$$228.size;
    var v11469 = v17072.width;
    var v4622 = v11469 - i$$158;
    var v17073 = d$$228.size;
    var v11470 = v17073.height;
    var v4623 = v11470 - h$$100;
    var j$$71 = {width:v4622, height:v4623};
    var v21070 = d$$228.element;
    var v17074 = v21070.css("left");
    var v11471 = parseInt(v17074, 10);
    var v21071 = d$$228.position;
    var v17075 = v21071.left;
    var v21072 = d$$228.originalPosition;
    var v17076 = v21072.left;
    var v11472 = v17075 - v17076;
    var v4624 = v11471 + v11472;
    var v11473 = !v4624;
    if (v11473) {
      v4624 = null;
    }
    var k$$48 = v4624;
    var v21073 = d$$228.element;
    var v17077 = v21073.css("top");
    var v11474 = parseInt(v17077, 10);
    var v21074 = d$$228.position;
    var v17078 = v21074.top;
    var v21075 = d$$228.originalPosition;
    var v17079 = v21075.top;
    var v11475 = v17078 - v17079;
    var v4625 = v11474 + v11475;
    var v11476 = !v4625;
    if (v11476) {
      v4625 = null;
    }
    var l$$58 = v4625;
    var v4626 = d$$228.element;
    var v17080;
    var v21076 = l$$58 && k$$48;
    if (v21076) {
      v17080 = {top:l$$58, left:k$$48};
    } else {
      v17080 = {};
    }
    var v11477 = v17080;
    var v4627 = a$$434.extend(j$$71, v11477);
    var v11478 = e$$216.animateDuration;
    var v11479 = e$$216.animateEasing;
    var v4628 = {duration:v11478, easing:v11479, step:v1271};
    v4626.animate(v4627, v4628);
    return;
  }
  function v1270(b$$364, c$$298) {
    var v4629 = a$$434(this);
    v4629.removeData("resizable-alsoresize");
    return;
  }
  function v1269(b$$359, c$$296) {
    function v1268(a$$447, b$$363) {
      i$$157(a$$447, b$$363);
      return;
    }
    function i$$157(b$$360, d$$227) {
      function v1267() {
        function v1266(a$$446, b$$362) {
          var v11480 = e$$215[b$$362];
          var v17081 = !v11480;
          if (v17081) {
            v11480 = 0;
          }
          var v4630 = v11480;
          var v11481 = h$$99[b$$362];
          var v17082 = !v11481;
          if (v17082) {
            v11481 = 0;
          }
          var v4631 = v11481;
          var c$$297 = v4630 + v4631;
          var v11482 = c$$297;
          if (v11482) {
            v11482 = c$$297 >= 0;
          }
          var v4632 = v11482;
          if (v4632) {
            f$$87[b$$362] = c$$297 || null;
          }
          return;
        }
        var b$$361 = a$$434(this);
        var v4633 = a$$434(this);
        var e$$215 = v4633.data("resizable-alsoresize");
        var f$$87 = {};
        var v4634;
        var v17083 = d$$227;
        if (v17083) {
          v17083 = d$$227.length;
        }
        var v11484 = v17083;
        if (v11484) {
          v4634 = d$$227;
        } else {
          var v11483;
          var v27130 = c$$296.originalElement;
          var v25276 = v27130[0];
          var v21077 = b$$361.parents(v25276);
          var v17084 = v21077.length;
          if (v17084) {
            v11483 = ["width", "height"];
          } else {
            v11483 = ["width", "height", "top", "left"];
          }
          v4634 = v11483;
        }
        var g$$122 = v4634;
        a$$434.each(g$$122, v1266);
        b$$361.css(f$$87);
        return;
      }
      var v4635 = a$$434(b$$360);
      v4635.each(v1267);
      return;
    }
    var v4636 = a$$434(this);
    var d$$226 = v4636.data("resizable");
    var e$$214 = d$$226.options;
    var f$$86 = d$$226.originalSize;
    var g$$121 = d$$226.originalPosition;
    var v21078 = d$$226.size;
    var v17085 = v21078.height;
    var v17086 = f$$86.height;
    var v11485 = v17085 - v17086;
    var v17087 = !v11485;
    if (v17087) {
      v11485 = 0;
    }
    var v4637 = v11485;
    var v21079 = d$$226.size;
    var v17088 = v21079.width;
    var v17089 = f$$86.width;
    var v11486 = v17088 - v17089;
    var v17090 = !v11486;
    if (v17090) {
      v11486 = 0;
    }
    var v4638 = v11486;
    var v21080 = d$$226.position;
    var v17091 = v21080.top;
    var v17092 = g$$121.top;
    var v11487 = v17091 - v17092;
    var v17093 = !v11487;
    if (v17093) {
      v11487 = 0;
    }
    var v4639 = v11487;
    var v21081 = d$$226.position;
    var v17094 = v21081.left;
    var v17095 = g$$121.left;
    var v11488 = v17094 - v17095;
    var v17096 = !v11488;
    if (v17096) {
      v11488 = 0;
    }
    var v4640 = v11488;
    var h$$99 = {height:v4637, width:v4638, top:v4639, left:v4640};
    var v4641;
    var v25277 = e$$214.alsoResize;
    var v21082 = typeof v25277;
    var v17097 = v21082 == "object";
    if (v17097) {
      var v25278 = e$$214.alsoResize;
      var v21083 = v25278.nodeType;
      v17097 = !v21083;
    }
    var v11491 = v17097;
    if (v11491) {
      var v11489 = e$$214.alsoResize;
      v4641 = a$$434.each(v11489, v1268);
    } else {
      var v11490 = e$$214.alsoResize;
      v4641 = i$$157(v11490);
    }
    v4641;
    return;
  }
  function v1265(b$$356, c$$295) {
    function v1264(a$$445) {
      f$$85(a$$445);
      return;
    }
    function f$$85(b$$357) {
      function v1263() {
        var b$$358 = a$$434(this);
        var v17098 = b$$358.width();
        var v11492 = parseInt(v17098, 10);
        var v17099 = b$$358.height();
        var v11493 = parseInt(v17099, 10);
        var v17100 = b$$358.css("left");
        var v11494 = parseInt(v17100, 10);
        var v17101 = b$$358.css("top");
        var v11495 = parseInt(v17101, 10);
        var v4642 = {width:v11492, height:v11493, left:v11494, top:v11495};
        b$$358.data("resizable-alsoresize", v4642);
        return;
      }
      var v4643 = a$$434(b$$357);
      v4643.each(v1263);
      return;
    }
    var v4644 = a$$434(this);
    var d$$225 = v4644.data("resizable");
    var e$$213 = d$$225.options;
    var v4645;
    var v25279 = e$$213.alsoResize;
    var v21084 = typeof v25279;
    var v17102 = v21084 == "object";
    if (v17102) {
      var v25280 = e$$213.alsoResize;
      var v21085 = v25280.parentNode;
      v17102 = !v21085;
    }
    var v11498 = v17102;
    if (v11498) {
      var v11496;
      var v21086 = e$$213.alsoResize;
      var v17104 = v21086.length;
      if (v17104) {
        var v21087 = e$$213.alsoResize;
        e$$213.alsoResize = v21087[0];
        var v21088 = e$$213.alsoResize;
        v11496 = f$$85(v21088);
      } else {
        var v17103 = e$$213.alsoResize;
        v11496 = a$$434.each(v17103, v1264);
      }
      v4645 = v11496;
    } else {
      var v11497 = e$$213.alsoResize;
      v4645 = f$$85(v11497);
    }
    v4645;
    return;
  }
  function v1262() {
    var v4646 = this.originalElement;
    var v4647 = this.element;
    var v4648 = this.helper;
    var v4649 = this.position;
    var v4650 = this.size;
    var v4651 = this.originalSize;
    var v4652 = this.originalPosition;
    return{originalElement:v4646, element:v4647, helper:v4648, position:v4649, size:v4650, originalSize:v4651, originalPosition:v4652};
  }
  function v1261(b$$355, c$$294) {
    var v17105 = a$$434.ui;
    var v11499 = v17105.plugin;
    var v17106 = this.ui();
    var v11500 = [c$$294, v17106];
    v11499.call(this, b$$355, v11500);
    var v11501 = b$$355 != "resize";
    if (v11501) {
      var v17107 = this.ui();
      this._trigger(b$$355, c$$294, v17107);
    }
    return;
  }
  function v1260(b$$354, c$$293, d$$224) {
    var v17108 = this._change;
    var v11502 = v17108.n;
    var v4653 = v11502.apply(this, arguments);
    var v17109 = this._change;
    var v11503 = v17109.w;
    var v11504 = [b$$354, c$$293, d$$224];
    var v4654 = v11503.apply(this, v11504);
    return a$$434.extend(v4653, v4654);
  }
  function v1259(b$$353, c$$292, d$$223) {
    var v17110 = this._change;
    var v11505 = v17110.n;
    var v4655 = v11505.apply(this, arguments);
    var v17111 = this._change;
    var v11506 = v17111.e;
    var v11507 = [b$$353, c$$292, d$$223];
    var v4656 = v11506.apply(this, v11507);
    return a$$434.extend(v4655, v4656);
  }
  function v1258(b$$352, c$$291, d$$222) {
    var v17112 = this._change;
    var v11508 = v17112.s;
    var v4657 = v11508.apply(this, arguments);
    var v17113 = this._change;
    var v11509 = v17113.w;
    var v11510 = [b$$352, c$$291, d$$222];
    var v4658 = v11509.apply(this, v11510);
    return a$$434.extend(v4657, v4658);
  }
  function v1257(b$$351, c$$290, d$$221) {
    var v17114 = this._change;
    var v11511 = v17114.s;
    var v4659 = v11511.apply(this, arguments);
    var v17115 = this._change;
    var v11512 = v17115.e;
    var v11513 = [b$$351, c$$290, d$$221];
    var v4660 = v11512.apply(this, v11513);
    return a$$434.extend(v4659, v4660);
  }
  function v1256(a$$444, b$$350, c$$289) {
    var v17116 = this.originalSize;
    var v11514 = v17116.height;
    var v4661 = v11514 + c$$289;
    return{height:v4661};
  }
  function v1255(a$$443, b$$349, c$$288) {
    var d$$220 = this.options;
    var e$$212 = this.originalSize;
    var f$$84 = this.originalPosition;
    var v11515 = f$$84.top;
    var v4662 = v11515 + c$$288;
    var v11516 = e$$212.height;
    var v4663 = v11516 - c$$288;
    return{top:v4662, height:v4663};
  }
  function v1254(a$$442, b$$348, c$$287) {
    var d$$219 = this.options;
    var e$$211 = this.originalSize;
    var f$$83 = this.originalPosition;
    var v11517 = f$$83.left;
    var v4664 = v11517 + b$$348;
    var v11518 = e$$211.width;
    var v4665 = v11518 - b$$348;
    return{left:v4664, width:v4665};
  }
  function v1253(a$$441, b$$347, c$$286) {
    var v17117 = this.originalSize;
    var v11519 = v17117.width;
    var v4666 = v11519 + b$$347;
    return{width:v4666};
  }
  function v1252() {
    var b$$346 = this.element;
    var c$$285 = this.options;
    var v31091 = b$$346.offset();
    this.elementOffset = v31091;
    var v4671 = this._helper;
    if (v4671) {
      var v4667 = this.helper;
      var v11520 = !v4667;
      if (v11520) {
        v4667 = a$$434('<div style="overflow:hidden;"></div>');
      }
      this.helper = v4667;
      var v11521 = a$$434.browser;
      var v4668 = v11521.msie;
      if (v4668) {
        var v17118 = a$$434.browser;
        var v11522 = v17118.version;
        v4668 = v11522 < 7;
      }
      var d$$218 = v4668;
      var v4669;
      if (d$$218) {
        v4669 = 1;
      } else {
        v4669 = 0;
      }
      var e$$210 = v4669;
      var v4670;
      if (d$$218) {
        v4670 = 2;
      } else {
        v4670 = -1;
      }
      var f$$82 = v4670;
      var v17119 = this.helper;
      var v17120 = this._helper;
      var v11523 = v17119.addClass(v17120);
      var v25281 = this.element;
      var v21089 = v25281.outerWidth();
      var v17121 = v21089 + f$$82;
      var v25282 = this.element;
      var v21090 = v25282.outerHeight();
      var v17122 = v21090 + f$$82;
      var v27131 = this.elementOffset;
      var v25283 = v27131.left;
      var v21091 = v25283 - e$$210;
      var v17123 = v21091 + "px";
      var v27132 = this.elementOffset;
      var v25284 = v27132.top;
      var v21092 = v25284 - e$$210;
      var v17124 = v21092 + "px";
      var v25285 = c$$285.zIndex;
      var v17125 = c$$285.zIndex = v25285 + 1;
      var v11524 = {width:v17121, height:v17122, position:"absolute", left:v17123, top:v17124, zIndex:v17125};
      v11523.css(v11524);
      var v17126 = this.helper;
      var v11525 = v17126.appendTo("body");
      v11525.disableSelection();
    } else {
      this.helper = this.element;
    }
    return;
  }
  function v1251() {
    function v1250(a$$440, b$$345) {
      var v4672 = parseInt(a$$440, 10);
      var v11526 = !v4672;
      if (v11526) {
        v4672 = 0;
      }
      var c$$284 = v4672;
      var v11527 = g$$120[b$$345];
      var v4673 = parseInt(v11527, 10);
      var v11528 = !v4673;
      if (v11528) {
        v4673 = 0;
      }
      var d$$217 = v4673;
      return c$$284 + d$$217;
    }
    var b$$344 = this.options;
    var v17127 = this._proportionallyResizeElements;
    var v11529 = v17127.length;
    var v4674 = !v11529;
    if (v4674) {
      return;
    }
    var v4675 = this.helper;
    var v11530 = !v4675;
    if (v11530) {
      v4675 = this.element;
    }
    var c$$283 = v4675;
    var d$$216 = 0;
    var v17128 = this._proportionallyResizeElements;
    var v11531 = v17128.length;
    var v4688 = d$$216 < v11531;
    for (;v4688;) {
      var v4676 = this._proportionallyResizeElements;
      var e$$209 = v4676[d$$216];
      var v11532 = this.borderDif;
      var v4685 = !v11532;
      if (v4685) {
        var v4677 = e$$209.css("borderTopWidth");
        var v4678 = e$$209.css("borderRightWidth");
        var v4679 = e$$209.css("borderBottomWidth");
        var v4680 = e$$209.css("borderLeftWidth");
        var f$$81 = [v4677, v4678, v4679, v4680];
        var v4681 = e$$209.css("paddingTop");
        var v4682 = e$$209.css("paddingRight");
        var v4683 = e$$209.css("paddingBottom");
        var v4684 = e$$209.css("paddingLeft");
        var g$$120 = [v4681, v4682, v4683, v4684];
        var v31092 = a$$434.map(f$$81, v1250);
        this.borderDif = v31092;
      }
      var v21093 = a$$434.browser;
      var v17129 = v21093.msie;
      var v11533 = !v17129;
      var v17131 = !v11533;
      if (v17131) {
        var v25286 = a$$434(c$$283);
        var v21094 = v25286.is(":hidden");
        var v17130 = !v21094;
        if (v17130) {
          var v27133 = a$$434(c$$283);
          var v25287 = v27133.parents(":hidden");
          var v21095 = v25287.length;
          v17130 = !v21095;
        }
        v11533 = v17130;
      }
      var v4687 = v11533;
      if (v4687) {
        var v25288 = c$$283.height();
        var v27134 = this.borderDif;
        var v25289 = v27134[0];
        var v21096 = v25288 - v25289;
        var v25290 = this.borderDif;
        var v21097 = v25290[2];
        var v17132 = v21096 - v21097;
        var v21098 = !v17132;
        if (v21098) {
          v17132 = 0;
        }
        var v11534 = v17132;
        var v25291 = c$$283.width();
        var v27135 = this.borderDif;
        var v25292 = v27135[1];
        var v21099 = v25291 - v25292;
        var v25293 = this.borderDif;
        var v21100 = v25293[3];
        var v17133 = v21099 - v21100;
        var v21101 = !v17133;
        if (v21101) {
          v17133 = 0;
        }
        var v11535 = v17133;
        var v4686 = {height:v11534, width:v11535};
        e$$209.css(v4686);
      } else {
      }
      d$$216++;
      var v17134 = this._proportionallyResizeElements;
      var v11536 = v17134.length;
      v4688 = d$$216 < v11536;
    }
    return;
  }
  function v1249(a$$439, b$$343) {
    var c$$282 = this.helper;
    var e$$208 = this._vBoundaries;
    var v4689 = this._aspectRatio;
    var v11537 = !v4689;
    if (v11537) {
      v4689 = b$$343.shiftKey;
    }
    var f$$80 = v4689;
    var g$$119 = this.axis;
    var v17135 = a$$439.width;
    var v11538 = d$$209(v17135);
    if (v11538) {
      v11538 = e$$208.maxWidth;
    }
    var v4690 = v11538;
    if (v4690) {
      var v11539 = e$$208.maxWidth;
      var v11540 = a$$439.width;
      v4690 = v11539 < v11540;
    }
    var h$$98 = v4690;
    var v17136 = a$$439.height;
    var v11541 = d$$209(v17136);
    if (v11541) {
      v11541 = e$$208.maxHeight;
    }
    var v4691 = v11541;
    if (v4691) {
      var v11542 = e$$208.maxHeight;
      var v11543 = a$$439.height;
      v4691 = v11542 < v11543;
    }
    var i$$156 = v4691;
    var v17137 = a$$439.width;
    var v11544 = d$$209(v17137);
    if (v11544) {
      v11544 = e$$208.minWidth;
    }
    var v4692 = v11544;
    if (v4692) {
      var v11545 = e$$208.minWidth;
      var v11546 = a$$439.width;
      v4692 = v11545 > v11546;
    }
    var j$$70 = v4692;
    var v17138 = a$$439.height;
    var v11547 = d$$209(v17138);
    if (v11547) {
      v11547 = e$$208.minHeight;
    }
    var v4693 = v11547;
    if (v4693) {
      var v11548 = e$$208.minHeight;
      var v11549 = a$$439.height;
      v4693 = v11548 > v11549;
    }
    var k$$47 = v4693;
    if (j$$70) {
      a$$439.width = e$$208.minWidth;
    }
    if (k$$47) {
      a$$439.height = e$$208.minHeight;
    }
    if (h$$98) {
      a$$439.width = e$$208.maxWidth;
    }
    if (i$$156) {
      a$$439.height = e$$208.maxHeight;
    }
    var v11550 = this.originalPosition;
    var v4694 = v11550.left;
    var v11551 = this.originalSize;
    var v4695 = v11551.width;
    var l$$57 = v4694 + v4695;
    var v11552 = this.position;
    var v4696 = v11552.top;
    var v11553 = this.size;
    var v4697 = v11553.height;
    var m$$31 = v4696 + v4697;
    var n$$82 = /sw|nw|w/.test(g$$119);
    var o$$18 = /nw|ne|n/.test(g$$119);
    var v21102 = j$$70 && n$$82;
    if (v21102) {
      var v25294 = e$$208.minWidth;
      a$$439.left = l$$57 - v25294;
    }
    var v21103 = h$$98 && n$$82;
    if (v21103) {
      var v25295 = e$$208.maxWidth;
      a$$439.left = l$$57 - v25295;
    }
    var v17139 = k$$47 && o$$18;
    if (v17139) {
      var v21104 = e$$208.minHeight;
      a$$439.top = m$$31 - v21104;
    }
    var v11554 = i$$156 && o$$18;
    if (v11554) {
      var v17140 = e$$208.maxHeight;
      a$$439.top = m$$31 - v17140;
    }
    var v11555 = a$$439.width;
    var v4698 = !v11555;
    if (v4698) {
      var v11556 = a$$439.height;
      v4698 = !v11556;
    }
    var p$$39 = v4698;
    var v11557;
    var v25296 = p$$39;
    if (v25296) {
      var v27136 = a$$439.left;
      v25296 = !v27136;
    }
    var v21105 = v25296;
    if (v21105) {
      v21105 = a$$439.top;
    }
    var v17142 = v21105;
    if (v17142) {
      v11557 = a$$439.top = null;
    } else {
      var v25297 = p$$39;
      if (v25297) {
        var v27137 = a$$439.top;
        v25297 = !v27137;
      }
      var v21106 = v25297;
      if (v21106) {
        v21106 = a$$439.left;
      }
      var v17141 = v21106;
      if (v17141) {
        v17141 = a$$439.left = null;
      }
      v11557 = v17141;
    }
    v11557;
    return a$$439;
  }
  function v1248(a$$438, b$$342) {
    var c$$281 = this.options;
    var e$$207 = this.position;
    var f$$79 = this.size;
    var g$$118 = this.axis;
    var v21107;
    var v27138 = a$$438.height;
    var v25301 = d$$209(v27138);
    if (v25301) {
      var v25298 = a$$438.height;
      var v25299 = this.aspectRatio;
      v21107 = a$$438.width = v25298 * v25299;
    } else {
      var v27139 = a$$438.width;
      var v25300 = d$$209(v27139);
      if (v25300) {
        var v27140 = a$$438.width;
        var v27141 = this.aspectRatio;
        v25300 = a$$438.height = v27140 / v27141;
      }
      v21107 = v25300;
    }
    v21107;
    var v21108 = g$$118 == "sw";
    if (v21108) {
      var v27142 = e$$207.left;
      var v28325 = f$$79.width;
      var v28326 = a$$438.width;
      var v27143 = v28325 - v28326;
      a$$438.left = v27142 + v27143;
      a$$438.top = null;
    }
    var v17143 = g$$118 == "nw";
    if (v17143) {
      var v25302 = e$$207.top;
      var v27144 = f$$79.height;
      var v27145 = a$$438.height;
      var v25303 = v27144 - v27145;
      a$$438.top = v25302 + v25303;
      var v25304 = e$$207.left;
      var v27146 = f$$79.width;
      var v27147 = a$$438.width;
      var v25305 = v27146 - v27147;
      a$$438.left = v25304 + v25305;
    }
    return a$$438;
  }
  function v1247(a$$437) {
    var b$$341 = this.options;
    var v25306 = this.helper;
    var v31093 = v25306.offset();
    this.offset = v31093;
    var v27148 = a$$437.left;
    var v25307 = d$$209(v27148);
    if (v25307) {
      var v27149 = this.position;
      v27149.left = a$$437.left;
    }
    var v25308 = a$$437.top;
    var v21109 = d$$209(v25308);
    if (v21109) {
      var v25309 = this.position;
      v25309.top = a$$437.top;
    }
    var v21110 = a$$437.height;
    var v17144 = d$$209(v21110);
    if (v17144) {
      var v21111 = this.size;
      v21111.height = a$$437.height;
    }
    var v17145 = a$$437.width;
    var v11558 = d$$209(v17145);
    if (v11558) {
      var v17146 = this.size;
      v17146.width = a$$437.width;
    }
    return;
  }
  function v1246(a$$436) {
    var b$$340 = this.options;
    var c$$280;
    var e$$206;
    var f$$78;
    var g$$117;
    var h$$97;
    var v11559;
    var v21112 = b$$340.minWidth;
    var v17147 = d$$209(v21112);
    if (v17147) {
      v11559 = b$$340.minWidth;
    } else {
      v11559 = 0;
    }
    var v4699 = v11559;
    var v11560;
    var v21113 = b$$340.maxWidth;
    var v17148 = d$$209(v21113);
    if (v17148) {
      v11560 = b$$340.maxWidth;
    } else {
      v11560 = Infinity;
    }
    var v4700 = v11560;
    var v11561;
    var v21114 = b$$340.minHeight;
    var v17149 = d$$209(v21114);
    if (v17149) {
      v11561 = b$$340.minHeight;
    } else {
      v11561 = 0;
    }
    var v4701 = v11561;
    var v11562;
    var v21115 = b$$340.maxHeight;
    var v17150 = d$$209(v21115);
    if (v17150) {
      v11562 = b$$340.maxHeight;
    } else {
      v11562 = Infinity;
    }
    var v4702 = v11562;
    h$$97 = {minWidth:v4699, maxWidth:v4700, minHeight:v4701, maxHeight:v4702};
    var v11563 = this._aspectRatio;
    var v17151 = !v11563;
    if (v17151) {
      v11563 = a$$436;
    }
    var v4703 = v11563;
    if (v4703) {
      var v29082 = h$$97.minHeight;
      var v29083 = this.aspectRatio;
      c$$280 = v29082 * v29083;
      var v29084 = h$$97.minWidth;
      var v29085 = this.aspectRatio;
      f$$78 = v29084 / v29085;
      var v28327 = h$$97.maxHeight;
      var v28328 = this.aspectRatio;
      e$$206 = v28327 * v28328;
      var v27150 = h$$97.maxWidth;
      var v27151 = this.aspectRatio;
      g$$117 = v27150 / v27151;
      var v27152 = h$$97.minWidth;
      var v25310 = c$$280 > v27152;
      if (v25310) {
        h$$97.minWidth = c$$280;
      }
      var v25311 = h$$97.minHeight;
      var v21116 = f$$78 > v25311;
      if (v21116) {
        h$$97.minHeight = f$$78;
      }
      var v21117 = h$$97.maxWidth;
      var v17152 = e$$206 < v21117;
      if (v17152) {
        h$$97.maxWidth = e$$206;
      }
      var v17153 = h$$97.maxHeight;
      var v11564 = g$$117 < v17153;
      if (v11564) {
        h$$97.maxHeight = g$$117;
      }
    }
    this._vBoundaries = h$$97;
    return;
  }
  function v1245(b$$339) {
    this.resizing = !1;
    var c$$279 = this.options;
    var d$$215 = this;
    var v4711 = this._helper;
    if (v4711) {
      var e$$205 = this._proportionallyResizeElements;
      var v4704 = e$$205.length;
      if (v4704) {
        var v17154 = e$$205[0];
        var v11565 = v17154.nodeName;
        v4704 = /textarea/i.test(v11565);
      }
      var f$$77 = v4704;
      var v4705;
      var v17155 = f$$77;
      if (v17155) {
        var v21118 = a$$434.ui;
        var v21119 = e$$205[0];
        v17155 = v21118.hasScroll(v21119, "left");
      }
      var v11567 = v17155;
      if (v11567) {
        v4705 = 0;
      } else {
        var v11566 = d$$215.sizeDiff;
        v4705 = v11566.height;
      }
      var g$$116 = v4705;
      var v4706;
      if (f$$77) {
        v4706 = 0;
      } else {
        var v11568 = d$$215.sizeDiff;
        v4706 = v11568.width;
      }
      var h$$96 = v4706;
      var v17156 = d$$215.helper;
      var v11569 = v17156.width();
      var v4707 = v11569 - h$$96;
      var v17157 = d$$215.helper;
      var v11570 = v17157.height();
      var v4708 = v11570 - g$$116;
      var i$$155 = {width:v4707, height:v4708};
      var v21120 = d$$215.element;
      var v17158 = v21120.css("left");
      var v11571 = parseInt(v17158, 10);
      var v21121 = d$$215.position;
      var v17159 = v21121.left;
      var v21122 = d$$215.originalPosition;
      var v17160 = v21122.left;
      var v11572 = v17159 - v17160;
      var v4709 = v11571 + v11572;
      var v11573 = !v4709;
      if (v11573) {
        v4709 = null;
      }
      var j$$69 = v4709;
      var v21123 = d$$215.element;
      var v17161 = v21123.css("top");
      var v11574 = parseInt(v17161, 10);
      var v21124 = d$$215.position;
      var v17162 = v21124.top;
      var v21125 = d$$215.originalPosition;
      var v17163 = v21125.top;
      var v11575 = v17162 - v17163;
      var v4710 = v11574 + v11575;
      var v11576 = !v4710;
      if (v11576) {
        v4710 = null;
      }
      var k$$46 = v4710;
      var v21126 = c$$279.animate;
      var v25314 = !v21126;
      if (v25314) {
        var v25312 = this.element;
        var v27153 = {top:k$$46, left:j$$69};
        var v25313 = a$$434.extend(i$$155, v27153);
        v25312.css(v25313);
      }
      var v21127 = d$$215.helper;
      var v25315 = d$$215.size;
      var v21128 = v25315.height;
      v21127.height(v21128);
      var v17164 = d$$215.helper;
      var v21129 = d$$215.size;
      var v17165 = v21129.width;
      v17164.width(v17165);
      var v17166 = this._helper;
      if (v17166) {
        var v21130 = c$$279.animate;
        v17166 = !v21130;
      }
      var v11577 = v17166;
      if (v11577) {
        this._proportionallyResize();
      }
    }
    var v25316 = a$$434("body");
    v25316.css("cursor", "auto");
    var v25317 = this.element;
    v25317.removeClass("ui-resizable-resizing");
    this._propagate("stop", b$$339);
    var v17167 = this._helper;
    if (v17167) {
      var v21131 = this.helper;
      v21131.remove();
    }
    return!1;
  }
  function v1244(b$$338) {
    var c$$278 = this.helper;
    var d$$214 = this.options;
    var f$$76 = this;
    var g$$115 = this.originalMousePosition;
    var h$$95 = this.axis;
    var v11578 = b$$338.pageX;
    var v11579 = g$$115.left;
    var v4712 = v11578 - v11579;
    var v11580 = !v4712;
    if (v11580) {
      v4712 = 0;
    }
    var i$$154 = v4712;
    var v11581 = b$$338.pageY;
    var v11582 = g$$115.top;
    var v4713 = v11581 - v11582;
    var v11583 = !v4713;
    if (v11583) {
      v4713 = 0;
    }
    var j$$68 = v4713;
    var v4714 = this._change;
    var k$$45 = v4714[h$$95];
    var v4715 = !k$$45;
    if (v4715) {
      return!1;
    }
    var v4716 = [b$$338, i$$154, j$$68];
    var l$$56 = k$$45.apply(this, v4716);
    var v11584 = a$$434.browser;
    var v4717 = v11584.msie;
    if (v4717) {
      var v17168 = a$$434.browser;
      var v11585 = v17168.version;
      v4717 = v11585 < 7;
    }
    var m$$30 = v4717;
    var n$$81 = this.sizeDiff;
    var v4718 = b$$338.shiftKey;
    this._updateVirtualBoundaries(v4718);
    var v11586 = this._aspectRatio;
    var v17169 = !v11586;
    if (v17169) {
      v11586 = b$$338.shiftKey;
    }
    var v4719 = v11586;
    if (v4719) {
      l$$56 = this._updateRatio(l$$56, b$$338);
    }
    l$$56 = this._respectSize(l$$56, b$$338);
    this._propagate("resize", b$$338);
    var v29577 = this.position;
    var v29086 = v29577.top;
    var v28329 = v29086 + "px";
    var v29578 = this.position;
    var v29087 = v29578.left;
    var v28330 = v29087 + "px";
    var v29579 = this.size;
    var v29088 = v29579.width;
    var v28331 = v29088 + "px";
    var v29580 = this.size;
    var v29089 = v29580.height;
    var v28332 = v29089 + "px";
    var v27154 = {top:v28329, left:v28330, width:v28331, height:v28332};
    c$$278.css(v27154);
    var v28333 = this._helper;
    var v27155 = !v28333;
    if (v27155) {
      var v28334 = this._proportionallyResizeElements;
      v27155 = v28334.length;
    }
    var v25318 = v27155;
    if (v25318) {
      this._proportionallyResize();
    }
    this._updateCache(l$$56);
    var v17170 = this.ui();
    this._trigger("resize", b$$338, v17170);
    return!1;
  }
  function v1243(b$$337) {
    var d$$213 = this.options;
    var v4720 = this.element;
    var e$$203 = v4720.position();
    var f$$75 = this.element;
    this.resizing = !0;
    var v25319 = a$$434(document);
    var v21132 = v25319.scrollTop();
    var v25320 = a$$434(document);
    var v21133 = v25320.scrollLeft();
    this.documentScroll = {top:v21132, left:v21133};
    var v21134 = f$$75.is(".ui-draggable");
    var v25322 = !v21134;
    if (v25322) {
      var v25321 = f$$75.css("position");
      v21134 = /absolute/.test(v25321);
    }
    var v17171 = v21134;
    if (v17171) {
      var v25323 = e$$203.top;
      var v25324 = e$$203.left;
      var v21135 = {position:"absolute", top:v25323, left:v25324};
      f$$75.css(v21135);
    }
    this._renderProxy();
    var v11587 = this.helper;
    var v4721 = v11587.css("left");
    var g$$114 = c$$273(v4721);
    var v11588 = this.helper;
    var v4722 = v11588.css("top");
    var h$$94 = c$$273(v4722);
    var v29581 = d$$213.containment;
    if (v29581) {
      var v30680 = d$$213.containment;
      var v30600 = a$$434(v30680);
      var v30473 = v30600.scrollLeft();
      var v30601 = !v30473;
      if (v30601) {
        v30473 = 0;
      }
      var v30337 = v30473;
      g$$114 = g$$114 + v30337;
      var v30681 = d$$213.containment;
      var v30602 = a$$434(v30681);
      var v30474 = v30602.scrollTop();
      var v30603 = !v30474;
      if (v30603) {
        v30474 = 0;
      }
      var v30338 = v30474;
      h$$94 = h$$94 + v30338;
    }
    var v29582 = this.helper;
    var v31094 = v29582.offset();
    this.offset = v31094;
    this.position = {left:g$$114, top:h$$94};
    var v28335;
    var v29094 = this._helper;
    if (v29094) {
      var v29090 = f$$75.outerWidth();
      var v29091 = f$$75.outerHeight();
      v28335 = {width:v29090, height:v29091};
    } else {
      var v29092 = f$$75.width();
      var v29093 = f$$75.height();
      v28335 = {width:v29092, height:v29093};
    }
    this.size = v28335;
    var v27156;
    var v28340 = this._helper;
    if (v28340) {
      var v28336 = f$$75.outerWidth();
      var v28337 = f$$75.outerHeight();
      v27156 = {width:v28336, height:v28337};
    } else {
      var v28338 = f$$75.width();
      var v28339 = f$$75.height();
      v27156 = {width:v28338, height:v28339};
    }
    this.originalSize = v27156;
    this.originalPosition = {left:g$$114, top:h$$94};
    var v25325 = f$$75.outerWidth();
    var v25326 = f$$75.width();
    var v21136 = v25325 - v25326;
    var v25327 = f$$75.outerHeight();
    var v25328 = f$$75.height();
    var v21137 = v25327 - v25328;
    this.sizeDiff = {width:v21136, height:v21137};
    var v17172 = b$$337.pageX;
    var v17173 = b$$337.pageY;
    this.originalMousePosition = {left:v17172, top:v17173};
    var v11589;
    var v25329 = d$$213.aspectRatio;
    var v21138 = typeof v25329;
    var v17175 = v21138 == "number";
    if (v17175) {
      v11589 = d$$213.aspectRatio;
    } else {
      var v25330 = this.originalSize;
      var v21139 = v25330.width;
      var v25331 = this.originalSize;
      var v21140 = v25331.height;
      var v17174 = v21139 / v21140;
      var v21141 = !v17174;
      if (v21141) {
        v17174 = 1;
      }
      v11589 = v17174;
    }
    this.aspectRatio = v11589;
    var v17176 = this.axis;
    var v11590 = ".ui-resizable-" + v17176;
    var v4723 = a$$434(v11590);
    var i$$153 = v4723.css("cursor");
    var v21142 = a$$434("body");
    var v25332;
    var v27158 = i$$153 == "auto";
    if (v27158) {
      var v27157 = this.axis;
      v25332 = v27157 + "-resize";
    } else {
      v25332 = i$$153;
    }
    var v21143 = v25332;
    v21142.css("cursor", v21143);
    f$$75.addClass("ui-resizable-resizing");
    this._propagate("start", b$$337);
    return!0;
  }
  function v1242(b$$336) {
    var c$$277 = !1;
    var d$$212;
    var v4725 = this.handles;
    for (d$$212 in v4725) {
      var v25333 = this.handles;
      var v21144 = v25333[d$$212];
      var v17177 = a$$434(v21144);
      var v11591 = v17177[0];
      var v11592 = b$$336.target;
      var v4724 = v11591 == v11592;
      if (v4724) {
        c$$277 = !0;
      }
    }
    var v17178 = this.options;
    var v11593 = v17178.disabled;
    var v4726 = !v11593;
    if (v4726) {
      v4726 = c$$277;
    }
    return v4726;
  }
  function v1241() {
    function b$$334(b$$335) {
      var v25334 = a$$434(b$$335);
      var v21145 = v25334.removeClass("ui-resizable ui-resizable-disabled ui-resizable-resizing");
      var v17179 = v21145.removeData("resizable");
      var v11594 = v17179.unbind(".resizable");
      var v4727 = v11594.find(".ui-resizable-handle");
      v4727.remove();
      return;
    }
    this._mouseDestroy();
    var v4730 = this.elementIsWrapper;
    if (v4730) {
      var v4728 = this.element;
      b$$334(v4728);
      var c$$276 = this.element;
      var v17180 = this.originalElement;
      var v21146 = c$$276.css("position");
      var v21147 = c$$276.outerWidth();
      var v21148 = c$$276.outerHeight();
      var v21149 = c$$276.css("top");
      var v21150 = c$$276.css("left");
      var v17181 = {position:v21146, width:v21147, height:v21148, top:v21149, left:v21150};
      var v11595 = v17180.css(v17181);
      var v4729 = c$$276.after(v11595);
      v4729.remove();
    }
    var v17182 = this.originalElement;
    var v17183 = this.originalResizeStyle;
    v17182.css("resize", v17183);
    var v17184 = this.originalElement;
    b$$334(v17184);
    return this;
  }
  function v1240() {
    function v1239() {
      var v4731 = c$$274.disabled;
      if (v4731) {
        return;
      }
      var v4732 = b$$332.resizing;
      var v11596 = !v4732;
      if (v11596) {
        var v17185 = a$$434(this);
        v17185.addClass("ui-resizable-autohide");
        var v17186 = b$$332._handles;
        v17186.hide();
      }
      return;
    }
    function v1238() {
      var v4733 = c$$274.disabled;
      if (v4733) {
        return;
      }
      var v11597 = a$$434(this);
      v11597.removeClass("ui-resizable-autohide");
      var v11598 = b$$332._handles;
      v11598.show();
      return;
    }
    function v1237() {
      var v11599 = b$$332.resizing;
      var v4737 = !v11599;
      if (v4737) {
        var v4735 = this.className;
        if (v4735) {
          var v4734 = this.className;
          var a$$435 = v4734.match(/ui-resizable-(se|sw|ne|nw|n|e|s|w)/i);
        }
        var v4736;
        var v17187 = a$$435;
        if (v17187) {
          v17187 = a$$435[1];
        }
        var v11600 = v17187;
        if (v11600) {
          v4736 = a$$435[1];
        } else {
          v4736 = "se";
        }
        b$$332.axis = v4736;
      }
      return;
    }
    function v1236(b$$333) {
      var v4738 = b$$333;
      var v11601 = !v4738;
      if (v11601) {
        v4738 = this.element;
      }
      b$$333 = v4738;
      var c$$275;
      var v4746 = this.handles;
      for (c$$275 in v4746) {
        var v21151 = this.handles;
        var v17188 = v21151[c$$275];
        var v11602 = v17188.constructor;
        var v4739 = v11602 == String;
        if (v4739) {
          var v11603 = this.handles;
          var v25335 = this.handles;
          var v21152 = v25335[c$$275];
          var v21153 = this.element;
          var v17189 = a$$434(v21152, v21153);
          var v31095 = v17189.show();
          v11603[c$$275] = v31095;
        }
        var v11604 = this.elementIsWrapper;
        if (v11604) {
          var v25336 = this.originalElement;
          var v21154 = v25336[0];
          var v17190 = v21154.nodeName;
          v11604 = v17190.match(/textarea|input|select|button/i);
        }
        var v4744 = v11604;
        if (v4744) {
          var v11605 = this.handles;
          var v4740 = v11605[c$$275];
          var v4741 = this.element;
          var d$$211 = a$$434(v4740, v4741);
          var e$$202 = 0;
          var v4742;
          var v11606 = /sw|ne|nw|se|n|s/.test(c$$275);
          if (v11606) {
            v4742 = d$$211.outerHeight();
          } else {
            v4742 = d$$211.outerWidth();
          }
          e$$202 = v4742;
          var v17191;
          var v21156 = /ne|nw|n/.test(c$$275);
          if (v21156) {
            v17191 = "Top";
          } else {
            var v21155;
            var v25338 = /se|sw|s/.test(c$$275);
            if (v25338) {
              v21155 = "Bottom";
            } else {
              var v25337;
              var v27159 = /^e$/.test(c$$275);
              if (v27159) {
                v25337 = "Right";
              } else {
                v25337 = "Left";
              }
              v21155 = v25337;
            }
            v17191 = v21155;
          }
          var v11607 = v17191;
          var v4743 = ["padding", v11607];
          var f$$74 = v4743.join("");
          b$$333.css(f$$74, e$$202);
          this._proportionallyResize();
        }
        var v25339 = this.handles;
        var v21157 = v25339[c$$275];
        var v17192 = a$$434(v21157);
        var v11608 = v17192.length;
        var v4745 = !v11608;
        if (v4745) {
        }
      }
      return;
    }
    var b$$332 = this;
    var c$$274 = this.options;
    var v21158 = this.element;
    v21158.addClass("ui-resizable");
    var v28341 = c$$274.aspectRatio;
    var v27160 = !v28341;
    var v25340 = !v27160;
    var v25341 = c$$274.aspectRatio;
    var v25342 = this.element;
    var v27161;
    var v29583 = c$$274.helper;
    var v29895 = !v29583;
    if (v29895) {
      v29583 = c$$274.ghost;
    }
    var v29095 = v29583;
    var v29584 = !v29095;
    if (v29584) {
      v29095 = c$$274.animate;
    }
    var v28343 = v29095;
    if (v28343) {
      var v28342 = c$$274.helper;
      var v29096 = !v28342;
      if (v29096) {
        v28342 = "ui-resizable-helper";
      }
      v27161 = v28342;
    } else {
      v27161 = null;
    }
    var v25343 = v27161;
    var v21159 = {_aspectRatio:v25340, aspectRatio:v25341, originalElement:v25342, _proportionallyResizeElements:[], _helper:v25343};
    a$$434.extend(this, v21159);
    var v27162 = this.element;
    var v25344 = v27162[0];
    var v21160 = v25344.nodeName;
    var v17193 = v21160.match(/canvas|textarea|input|select|button|img/i);
    if (v17193) {
      var v30475 = this.element;
      var v30604 = a$$434('<div class="ui-wrapper" style="overflow: hidden;"></div>');
      var v30732 = this.element;
      var v30682 = v30732.css("position");
      var v30733 = this.element;
      var v30683 = v30733.outerWidth();
      var v30734 = this.element;
      var v30684 = v30734.outerHeight();
      var v30735 = this.element;
      var v30685 = v30735.css("top");
      var v30736 = this.element;
      var v30686 = v30736.css("left");
      var v30605 = {position:v30682, width:v30683, height:v30684, top:v30685, left:v30686};
      var v30476 = v30604.css(v30605);
      v30475.wrap(v30476);
      var v30606 = this.element;
      var v30477 = v30606.parent();
      var v30607 = this.element;
      var v30478 = v30607.data("resizable");
      var v31096 = v30477.data("resizable", v30478);
      this.element = v31096;
      this.elementIsWrapper = !0;
      var v30144 = this.element;
      var v30479 = this.originalElement;
      var v30339 = v30479.css("marginLeft");
      var v30480 = this.originalElement;
      var v30340 = v30480.css("marginTop");
      var v30481 = this.originalElement;
      var v30341 = v30481.css("marginRight");
      var v30482 = this.originalElement;
      var v30342 = v30482.css("marginBottom");
      var v30145 = {marginLeft:v30339, marginTop:v30340, marginRight:v30341, marginBottom:v30342};
      v30144.css(v30145);
      var v29896 = this.originalElement;
      var v29897 = {marginLeft:0, marginTop:0, marginRight:0, marginBottom:0};
      v29896.css(v29897);
      var v29585 = this.originalElement;
      var v31097 = v29585.css("resize");
      this.originalResizeStyle = v31097;
      var v29097 = this.originalElement;
      v29097.css("resize", "none");
      var v28344 = this._proportionallyResizeElements;
      var v29098 = this.originalElement;
      var v29099 = {position:"static", zoom:1, display:"block"};
      var v28345 = v29098.css(v29099);
      v28344.push(v28345);
      var v27163 = this.originalElement;
      var v29100 = this.originalElement;
      var v28346 = v29100.css("margin");
      var v27164 = {margin:v28346};
      v27163.css(v27164);
      this._proportionallyResize();
    }
    var v11609 = c$$274.handles;
    var v17195 = !v11609;
    if (v17195) {
      var v17194;
      var v27165 = this.element;
      var v25345 = a$$434(".ui-resizable-handle", v27165);
      var v21161 = v25345.length;
      if (v21161) {
        v17194 = {n:".ui-resizable-n", e:".ui-resizable-e", s:".ui-resizable-s", w:".ui-resizable-w", se:".ui-resizable-se", sw:".ui-resizable-sw", ne:".ui-resizable-ne", nw:".ui-resizable-nw"};
      } else {
        v17194 = "e,s,se";
      }
      v11609 = v17194;
    }
    this.handles = v11609;
    var v17196 = this.handles;
    var v11610 = v17196.constructor;
    var v4752 = v11610 == String;
    if (v4752) {
      var v11611 = this.handles;
      var v4747 = v11611 == "all";
      if (v4747) {
        this.handles = "n,e,s,w,se,sw,ne,nw";
      }
      var v4748 = this.handles;
      var d$$210 = v4748.split(",");
      this.handles = {};
      var e$$201 = 0;
      var v11612 = d$$210.length;
      var v4751 = e$$201 < v11612;
      for (;v4751;) {
        var v4749 = d$$210[e$$201];
        var f$$73 = a$$434.trim(v4749);
        var g$$113 = "ui-resizable-" + f$$73;
        var v11613 = '<div class="ui-resizable-handle ' + g$$113;
        var v4750 = v11613 + '"></div>';
        var h$$93 = a$$434(v4750);
        var v25346 = c$$274.zIndex;
        var v21162 = {zIndex:v25346};
        h$$93.css(v21162);
        var v21163 = "se" == f$$73;
        if (v21163) {
          h$$93.addClass("ui-icon ui-icon-gripsmall-diagonal-se");
        }
        var v17197 = this.handles;
        v17197[f$$73] = ".ui-resizable-" + f$$73;
        var v11614 = this.element;
        v11614.append(h$$93);
        e$$201++;
        var v11615 = d$$210.length;
        v4751 = e$$201 < v11615;
      }
    }
    this._renderAxis = v1236;
    var v27166 = this.element;
    this._renderAxis(v27166);
    var v27167 = this.element;
    var v25347 = a$$434(".ui-resizable-handle", v27167);
    var v31098 = v25347.disableSelection();
    this._handles = v31098;
    var v21164 = this._handles;
    v21164.mouseover(v1237);
    var v17198 = c$$274.autoHide;
    if (v17198) {
      var v25348 = this._handles;
      v25348.hide();
      var v28347 = this.element;
      var v27168 = a$$434(v28347);
      var v25349 = v27168.addClass("ui-resizable-autohide");
      v25349.hover(v1238, v1239);
    }
    this._mouseInit();
    return;
  }
  function d$$209(a$$450) {
    var v11616 = parseInt(a$$450, 10);
    var v4753 = isNaN(v11616);
    return!v4753;
  }
  function c$$273(a$$449) {
    var v4754 = parseInt(a$$449, 10);
    var v11617 = !v4754;
    if (v11617) {
      v4754 = 0;
    }
    return v4754;
  }
  var v29101 = a$$434.ui;
  var v28348 = v29101.mouse;
  var v29586 = !1;
  var v29587 = !1;
  var v29588 = !1;
  var v29589 = !1;
  var v29590 = !1;
  var v29591 = !1;
  var v29592 = !1;
  var v29593 = !1;
  var v29102 = {alsoResize:v29586, animate:v29587, animateDuration:"slow", animateEasing:"swing", aspectRatio:v29588, autoHide:v29589, containment:v29590, ghost:v29591, grid:v29592, handles:"e,s,se", helper:v29593, maxHeight:null, maxWidth:null, minHeight:10, minWidth:10, zIndex:1E3};
  var v29103 = {e:v1253, w:v1254, n:v1255, s:v1256, se:v1257, sw:v1258, ne:v1259, nw:v1260};
  var v28349 = {widgetEventPrefix:"resize", options:v29102, _create:v1240, destroy:v1241, _mouseCapture:v1242, _mouseStart:v1243, _mouseDrag:v1244, _mouseStop:v1245, _updateVirtualBoundaries:v1246, _updateCache:v1247, _updateRatio:v1248, _respectSize:v1249, _proportionallyResize:v1251, _renderProxy:v1252, _change:v29103, _propagate:v1261, plugins:{}, ui:v1262};
  a$$434.widget("ui.resizable", v28348, v28349);
  var v29104 = a$$434.ui;
  var v28350 = v29104.resizable;
  var v28351 = {version:"1.8.24"};
  a$$434.extend(v28350, v28351);
  var v28352 = a$$434.ui;
  var v27169 = v28352.plugin;
  var v27170 = {start:v1265, resize:v1269, stop:v1270};
  v27169.add("resizable", "alsoResize", v27170);
  var v27171 = a$$434.ui;
  var v25350 = v27171.plugin;
  var v25351 = {stop:v1272};
  v25350.add("resizable", "animate", v25351);
  var v25352 = a$$434.ui;
  var v21165 = v25352.plugin;
  var v21166 = {start:v1274, resize:v1275, stop:v1276};
  v21165.add("resizable", "containment", v21166);
  var v21167 = a$$434.ui;
  var v17199 = v21167.plugin;
  var v17200 = {start:v1277, resize:v1278, stop:v1279};
  v17199.add("resizable", "ghost", v17200);
  var v17201 = a$$434.ui;
  var v11618 = v17201.plugin;
  var v11619 = {resize:v1280};
  v11618.add("resizable", "grid", v11619);
  return;
}
function v1235(a$$430, b$$315) {
  function v1234(b$$330, c$$272) {
    var v17202 = b$$330.element;
    var v11620 = v17202.parents(":not(body,html)");
    v11620.unbind("scroll.droppable");
    var v17203 = b$$330.options;
    var v11621 = v17203.refreshPositions;
    var v17205 = !v11621;
    if (v17205) {
      var v21168 = a$$430.ui;
      var v17204 = v21168.ddmanager;
      v17204.prepareOffsets(b$$330, c$$272);
    }
    return;
  }
  function v1233(b$$329, c$$271) {
    function v1232() {
      function v1231() {
        var v17206 = a$$430.data(this, "droppable");
        var v11622 = v17206.options;
        var v4755 = v11622.scope;
        return v4755 === g$$112;
      }
      var v21169 = this.options;
      var v17207 = v21169.disabled;
      var v21170 = !v17207;
      if (v21170) {
        v17207 = this.greedyChild;
      }
      var v11623 = v17207;
      var v17209 = !v11623;
      if (v17209) {
        var v17208 = this.visible;
        v11623 = !v17208;
      }
      var v4756 = v11623;
      if (v4756) {
        return;
      }
      var v4757 = a$$430.ui;
      var v11624 = this.options;
      var v4758 = v11624.tolerance;
      var d$$208 = v4757.intersect(b$$329, this, v4758);
      var v4759;
      var v17210 = !d$$208;
      if (v17210) {
        var v21171 = this.isover;
        v17210 = v21171 == 1;
      }
      var v11626 = v17210;
      if (v11626) {
        v4759 = "isout";
      } else {
        var v11625;
        var v21172 = d$$208;
        if (v21172) {
          var v25353 = this.isover;
          v21172 = v25353 == 0;
        }
        var v17211 = v21172;
        if (v17211) {
          v11625 = "isover";
        } else {
          v11625 = null;
        }
        v4759 = v11625;
      }
      var e$$200 = v4759;
      var v4760 = !e$$200;
      if (v4760) {
        return;
      }
      var f$$72;
      var v11627 = this.options;
      var v4764 = v11627.greedy;
      if (v4764) {
        var v4761 = this.options;
        var g$$112 = v4761.scope;
        var v11628 = this.element;
        var v4762 = v11628.parents(":data(droppable)");
        var h$$92 = v4762.filter(v1231);
        var v4763 = h$$92.length;
        if (v4763) {
          var v17212 = h$$92[0];
          f$$72 = a$$430.data(v17212, "droppable");
          var v17213;
          var v21173 = e$$200 == "isover";
          if (v21173) {
            v17213 = 1;
          } else {
            v17213 = 0;
          }
          f$$72.greedyChild = v17213;
        }
      }
      var v27172 = f$$72;
      if (v27172) {
        v27172 = e$$200 == "isover";
      }
      var v25354 = v27172;
      if (v25354) {
        f$$72.isover = 0;
        f$$72.isout = 1;
        var v28353 = f$$72._out;
        v28353.call(f$$72, c$$271);
      }
      this[e$$200] = 1;
      var v25355;
      var v27173 = e$$200 == "isout";
      if (v27173) {
        v25355 = "isover";
      } else {
        v25355 = "isout";
      }
      var v21174 = v25355;
      this[v21174] = 0;
      var v25356;
      var v27174 = e$$200 == "isover";
      if (v27174) {
        v25356 = "_over";
      } else {
        v25356 = "_out";
      }
      var v21175 = v25356;
      var v17214 = this[v21175];
      v17214.call(this, c$$271);
      var v17215 = f$$72;
      if (v17215) {
        v17215 = e$$200 == "isout";
      }
      var v11629 = v17215;
      if (v11629) {
        f$$72.isout = 0;
        f$$72.isover = 1;
        var v21176 = f$$72._over;
        v21176.call(f$$72, c$$271);
      }
      return;
    }
    var v17216 = b$$329.options;
    var v11630 = v17216.refreshPositions;
    if (v11630) {
      var v21177 = a$$430.ui;
      var v17217 = v21177.ddmanager;
      v17217.prepareOffsets(b$$329, c$$271);
    }
    var v27175 = a$$430.ui;
    var v25357 = v27175.ddmanager;
    var v21178 = v25357.droppables;
    var v25358 = b$$329.options;
    var v21179 = v25358.scope;
    var v17218 = v21178[v21179];
    var v21180 = !v17218;
    if (v21180) {
      v17218 = [];
    }
    var v11631 = v17218;
    a$$430.each(v11631, v1232);
    return;
  }
  function v1230(b$$328, c$$270) {
    function v1229() {
      var v11632 = b$$328.options;
      var v4765 = v11632.refreshPositions;
      var v11634 = !v4765;
      if (v11634) {
        var v17219 = a$$430.ui;
        var v11633 = v17219.ddmanager;
        v11633.prepareOffsets(b$$328, c$$270);
      }
      return;
    }
    var v11635 = b$$328.element;
    var v4766 = v11635.parents(":not(body,html)");
    v4766.bind("scroll.droppable", v1229);
    return;
  }
  function v1228(b$$327, c$$269) {
    function v1227() {
      var v11636 = this.options;
      var v4767 = !v11636;
      if (v4767) {
        return;
      }
      var v27176 = this.options;
      var v25359 = v27176.disabled;
      var v21181 = !v25359;
      if (v21181) {
        v21181 = this.visible;
      }
      var v17220 = v21181;
      if (v17220) {
        var v21182 = a$$430.ui;
        var v25360 = this.options;
        var v21183 = v25360.tolerance;
        v17220 = v21182.intersect(b$$327, this, v21183);
      }
      var v11637 = v17220;
      if (v11637) {
        var v21184 = this._drop;
        var v17221 = v21184.call(this, c$$269);
        var v21185 = !v17221;
        if (v21185) {
          v17221 = d$$207;
        }
        d$$207 = v17221;
      }
      var v27177 = this.options;
      var v25361 = v27177.disabled;
      var v21186 = !v25361;
      if (v21186) {
        v21186 = this.visible;
      }
      var v17222 = v21186;
      if (v17222) {
        var v21187 = this.accept;
        var v25362 = this.element;
        var v21188 = v25362[0];
        var v25363 = b$$327.currentItem;
        var v27178 = !v25363;
        if (v27178) {
          v25363 = b$$327.element;
        }
        var v21189 = v25363;
        v17222 = v21187.call(v21188, v21189);
      }
      var v11638 = v17222;
      if (v11638) {
        this.isout = 1;
        this.isover = 0;
        var v21190 = this._deactivate;
        v21190.call(this, c$$269);
      }
      return;
    }
    var d$$207 = !1;
    var v27179 = a$$430.ui;
    var v25364 = v27179.ddmanager;
    var v21191 = v25364.droppables;
    var v25365 = b$$327.options;
    var v21192 = v25365.scope;
    var v17223 = v21191[v21192];
    var v21193 = !v17223;
    if (v21193) {
      v17223 = [];
    }
    var v11639 = v17223;
    a$$430.each(v11639, v1227);
    return d$$207;
  }
  function v1226(b$$326, c$$268) {
    var v21194 = a$$430.ui;
    var v17224 = v21194.ddmanager;
    var v11640 = v17224.droppables;
    var v17225 = b$$326.options;
    var v11641 = v17225.scope;
    var v4768 = v11640[v11641];
    var v11642 = !v4768;
    if (v11642) {
      v4768 = [];
    }
    var d$$206 = v4768;
    var v4769;
    if (c$$268) {
      v4769 = c$$268.type;
    } else {
      v4769 = null;
    }
    var e$$199 = v4769;
    var v17226 = b$$326.currentItem;
    var v21195 = !v17226;
    if (v21195) {
      v17226 = b$$326.element;
    }
    var v11643 = v17226;
    var v4770 = v11643.find(":data(droppable)");
    var f$$71 = v4770.andSelf();
    var h$$91 = 0;
    var v11644 = d$$206.length;
    var v4777 = h$$91 < v11644;
    g: for (;v4777;) {
      var v21196 = d$$206[h$$91];
      var v17227 = v21196.options;
      var v11645 = v17227.disabled;
      var v17229 = !v11645;
      if (v17229) {
        var v17228 = b$$326;
        if (v17228) {
          var v27180 = d$$206[h$$91];
          var v25366 = v27180.accept;
          var v28354 = d$$206[h$$91];
          var v27181 = v28354.element;
          var v25367 = v27181[0];
          var v27182 = b$$326.currentItem;
          var v28355 = !v27182;
          if (v28355) {
            v27182 = b$$326.element;
          }
          var v25368 = v27182;
          var v21197 = v25366.call(v25367, v25368);
          v17228 = !v21197;
        }
        v11645 = v17228;
      }
      var v4771 = v11645;
      if (v4771) {
        h$$91++;
        var v11646 = d$$206.length;
        v4777 = h$$91 < v11646;
        continue;
      }
      var i$$152 = 0;
      var v11647 = f$$71.length;
      var v4774 = i$$152 < v11647;
      for (;v4774;) {
        var v11648 = f$$71[i$$152];
        var v21198 = d$$206[h$$91];
        var v17230 = v21198.element;
        var v11649 = v17230[0];
        var v4773 = v11648 == v11649;
        if (v4773) {
          var v11650 = d$$206[h$$91];
          var v4772 = v11650.proportions;
          v4772.height = 0;
          i$$152++;
          var v11651 = f$$71.length;
          v4774 = i$$152 < v11651;
          h$$91++;
          var v11652 = d$$206.length;
          v4777 = h$$91 < v11652;
          continue g;
        }
        i$$152++;
        var v11653 = f$$71.length;
        v4774 = i$$152 < v11653;
      }
      var v4775 = d$$206[h$$91];
      var v21199 = d$$206[h$$91];
      var v17231 = v21199.element;
      var v11654 = v17231.css("display");
      v4775.visible = v11654 != "none";
      var v17232 = d$$206[h$$91];
      var v11655 = v17232.visible;
      var v4776 = !v11655;
      if (v4776) {
        h$$91++;
        var v11656 = d$$206.length;
        v4777 = h$$91 < v11656;
        continue;
      }
      var v17233 = e$$199 == "mousedown";
      if (v17233) {
        var v25369 = d$$206[h$$91];
        var v21200 = v25369._activate;
        var v21201 = d$$206[h$$91];
        v21200.call(v21201, c$$268);
      }
      var v17234 = d$$206[h$$91];
      var v25370 = d$$206[h$$91];
      var v21202 = v25370.element;
      var v31099 = v21202.offset();
      v17234.offset = v31099;
      var v11657 = d$$206[h$$91];
      var v27183 = d$$206[h$$91];
      var v25371 = v27183.element;
      var v21203 = v25371[0];
      var v17235 = v21203.offsetWidth;
      var v27184 = d$$206[h$$91];
      var v25372 = v27184.element;
      var v21204 = v25372[0];
      var v17236 = v21204.offsetHeight;
      v11657.proportions = {width:v17235, height:v17236};
      h$$91++;
      var v11658 = d$$206.length;
      v4777 = h$$91 < v11658;
    }
    return;
  }
  function v1225(b$$325, c$$267, d$$205) {
    var v11659 = c$$267.offset;
    var v4778 = !v11659;
    if (v4778) {
      return!1;
    }
    var v11660 = b$$325.positionAbs;
    var v17238 = !v11660;
    if (v17238) {
      var v17237 = b$$325.position;
      v11660 = v17237.absolute;
    }
    var v4779 = v11660;
    var e$$198 = v4779.left;
    var v11661 = b$$325.helperProportions;
    var v4780 = v11661.width;
    var f$$70 = e$$198 + v4780;
    var v11662 = b$$325.positionAbs;
    var v17240 = !v11662;
    if (v17240) {
      var v17239 = b$$325.position;
      v11662 = v17239.absolute;
    }
    var v4781 = v11662;
    var g$$111 = v4781.top;
    var v11663 = b$$325.helperProportions;
    var v4782 = v11663.height;
    var h$$90 = g$$111 + v4782;
    var v4783 = c$$267.offset;
    var i$$151 = v4783.left;
    var v11664 = c$$267.proportions;
    var v4784 = v11664.width;
    var j$$67 = i$$151 + v4784;
    var v4785 = c$$267.offset;
    var k$$44 = v4785.top;
    var v11665 = c$$267.proportions;
    var v4786 = v11665.height;
    var l$$55 = k$$44 + v4786;
    switch(d$$205) {
      case "fit":
        var v17241 = i$$151 <= e$$198;
        if (v17241) {
          v17241 = f$$70 <= j$$67;
        }
        var v11666 = v17241;
        if (v11666) {
          v11666 = k$$44 <= g$$111;
        }
        var v4787 = v11666;
        if (v4787) {
          v4787 = h$$90 <= l$$55;
        }
        return v4787;
      case "intersect":
        var v28356 = b$$325.helperProportions;
        var v27185 = v28356.width;
        var v25373 = v27185 / 2;
        var v21205 = e$$198 + v25373;
        var v17242 = i$$151 < v21205;
        if (v17242) {
          var v28357 = b$$325.helperProportions;
          var v27186 = v28357.width;
          var v25374 = v27186 / 2;
          var v21206 = f$$70 - v25374;
          v17242 = v21206 < j$$67;
        }
        var v11667 = v17242;
        if (v11667) {
          var v27187 = b$$325.helperProportions;
          var v25375 = v27187.height;
          var v21207 = v25375 / 2;
          var v17243 = g$$111 + v21207;
          v11667 = k$$44 < v17243;
        }
        var v4788 = v11667;
        if (v4788) {
          var v25376 = b$$325.helperProportions;
          var v21208 = v25376.height;
          var v17244 = v21208 / 2;
          var v11668 = h$$90 - v17244;
          v4788 = v11668 < l$$55;
        }
        return v4788;
      case "pointer":
        var v17245 = b$$325.positionAbs;
        var v21210 = !v17245;
        if (v21210) {
          var v21209 = b$$325.position;
          v17245 = v21209.absolute;
        }
        var v11669 = v17245;
        var v4789 = v11669.left;
        var v17246 = b$$325.clickOffset;
        var v21212 = !v17246;
        if (v21212) {
          var v21211 = b$$325.offset;
          v17246 = v21211.click;
        }
        var v11670 = v17246;
        var v4790 = v11670.left;
        var m$$29 = v4789 + v4790;
        var v17247 = b$$325.positionAbs;
        var v21214 = !v17247;
        if (v21214) {
          var v21213 = b$$325.position;
          v17247 = v21213.absolute;
        }
        var v11671 = v17247;
        var v4791 = v11671.top;
        var v17248 = b$$325.clickOffset;
        var v21216 = !v17248;
        if (v21216) {
          var v21215 = b$$325.offset;
          v17248 = v21215.click;
        }
        var v11672 = v17248;
        var v4792 = v11672.top;
        var n$$80 = v4791 + v4792;
        var v4793 = a$$430.ui;
        var v11673 = c$$267.proportions;
        var v4794 = v11673.height;
        var v11674 = c$$267.proportions;
        var v4795 = v11674.width;
        var o$$17 = v4793.isOver(n$$80, m$$29, k$$44, i$$151, v4794, v4795);
        return o$$17;
      case "touch":
        var v21217 = g$$111 >= k$$44;
        if (v21217) {
          v21217 = g$$111 <= l$$55;
        }
        var v17249 = v21217;
        var v21219 = !v17249;
        if (v21219) {
          var v21218 = h$$90 >= k$$44;
          if (v21218) {
            v21218 = h$$90 <= l$$55;
          }
          v17249 = v21218;
        }
        var v11675 = v17249;
        var v17251 = !v11675;
        if (v17251) {
          var v17250 = g$$111 < k$$44;
          if (v17250) {
            v17250 = h$$90 > l$$55;
          }
          v11675 = v17250;
        }
        var v4796 = v11675;
        if (v4796) {
          var v21220 = e$$198 >= i$$151;
          if (v21220) {
            v21220 = e$$198 <= j$$67;
          }
          var v17252 = v21220;
          var v21222 = !v17252;
          if (v21222) {
            var v21221 = f$$70 >= i$$151;
            if (v21221) {
              v21221 = f$$70 <= j$$67;
            }
            v17252 = v21221;
          }
          var v11676 = v17252;
          var v17254 = !v11676;
          if (v17254) {
            var v17253 = e$$198 < i$$151;
            if (v17253) {
              v17253 = f$$70 > j$$67;
            }
            v11676 = v17253;
          }
          v4796 = v11676;
        }
        return v4796;
      default:
        return!1;
    }
    return;
  }
  function v1224(a$$433) {
    var v11677 = a$$433.currentItem;
    var v17255 = !v11677;
    if (v17255) {
      v11677 = a$$433.element;
    }
    var v4797 = v11677;
    var v4798 = a$$433.helper;
    var v4799 = a$$433.position;
    var v4800 = a$$433.positionAbs;
    return{draggable:v4797, helper:v4798, position:v4799, offset:v4800};
  }
  function v1223(b$$323, c$$266) {
    function v1222() {
      var b$$324 = a$$430.data(this, "droppable");
      var v27188 = b$$324.options;
      var v25377 = v27188.greedy;
      if (v25377) {
        var v28358 = b$$324.options;
        var v27189 = v28358.disabled;
        v25377 = !v27189;
      }
      var v21223 = v25377;
      if (v21223) {
        var v27190 = b$$324.options;
        var v25378 = v27190.scope;
        var v27191 = d$$204.options;
        var v25379 = v27191.scope;
        v21223 = v25378 == v25379;
      }
      var v17256 = v21223;
      if (v17256) {
        var v21224 = b$$324.accept;
        var v25380 = b$$324.element;
        var v21225 = v25380[0];
        var v25381 = d$$204.currentItem;
        var v27192 = !v25381;
        if (v27192) {
          v25381 = d$$204.element;
        }
        var v21226 = v25381;
        v17256 = v21224.call(v21225, v21226);
      }
      var v11678 = v17256;
      if (v11678) {
        var v17257 = a$$430.ui;
        var v27193 = b$$324.element;
        var v25382 = v27193.offset();
        var v21227 = {offset:v25382};
        var v17258 = a$$430.extend(b$$324, v21227);
        var v21228 = b$$324.options;
        var v17259 = v21228.tolerance;
        v11678 = v17257.intersect(d$$204, v17258, v17259);
      }
      var v4801 = v11678;
      if (v4801) {
        e$$197 = !0;
        return!1;
      }
      return;
    }
    var v4802 = c$$266;
    var v11680 = !v4802;
    if (v11680) {
      var v17260 = a$$430.ui;
      var v11679 = v17260.ddmanager;
      v4802 = v11679.current;
    }
    var d$$204 = v4802;
    var v11681 = !d$$204;
    var v17263 = !v11681;
    if (v17263) {
      var v25383 = d$$204.currentItem;
      var v27194 = !v25383;
      if (v27194) {
        v25383 = d$$204.element;
      }
      var v21229 = v25383;
      var v17261 = v21229[0];
      var v21230 = this.element;
      var v17262 = v21230[0];
      v11681 = v17261 == v17262;
    }
    var v4803 = v11681;
    if (v4803) {
      return!1;
    }
    var e$$197 = !1;
    var v21231 = this.element;
    var v17264 = v21231.find(":data(droppable)");
    var v11682 = v17264.not(".ui-draggable-dragging");
    v11682.each(v1222);
    var v11683;
    if (e$$197) {
      v11683 = !1;
    } else {
      var v17265;
      var v25384 = this.accept;
      var v27195 = this.element;
      var v25385 = v27195[0];
      var v27196 = d$$204.currentItem;
      var v28359 = !v27196;
      if (v28359) {
        v27196 = d$$204.element;
      }
      var v25386 = v27196;
      var v21232 = v25384.call(v25385, v25386);
      if (v21232) {
        var v29105 = this.options;
        var v28360 = v29105.activeClass;
        if (v28360) {
          var v29106 = this.element;
          var v29594 = this.options;
          var v29107 = v29594.activeClass;
          v29106.removeClass(v29107);
        }
        var v29108 = this.options;
        var v28361 = v29108.hoverClass;
        if (v28361) {
          var v29109 = this.element;
          var v29595 = this.options;
          var v29110 = v29595.hoverClass;
          v29109.removeClass(v29110);
        }
        var v27197 = this.ui(d$$204);
        this._trigger("drop", b$$323, v27197);
        v17265 = this.element;
      } else {
        v17265 = !1;
      }
      v11683 = v17265;
    }
    return v11683;
  }
  function v1221(b$$322) {
    var v11684 = a$$430.ui;
    var v4804 = v11684.ddmanager;
    var c$$265 = v4804.current;
    var v11685 = !c$$265;
    var v17268 = !v11685;
    if (v17268) {
      var v25387 = c$$265.currentItem;
      var v27198 = !v25387;
      if (v27198) {
        v25387 = c$$265.element;
      }
      var v21233 = v25387;
      var v17266 = v21233[0];
      var v21234 = this.element;
      var v17267 = v21234[0];
      v11685 = v17266 == v17267;
    }
    var v4805 = v11685;
    if (v4805) {
      return;
    }
    var v11686 = this.accept;
    var v17269 = this.element;
    var v11687 = v17269[0];
    var v17270 = c$$265.currentItem;
    var v21235 = !v17270;
    if (v21235) {
      v17270 = c$$265.element;
    }
    var v11688 = v17270;
    var v4806 = v11686.call(v11687, v11688);
    if (v4806) {
      var v21236 = this.options;
      var v17271 = v21236.hoverClass;
      if (v17271) {
        var v21237 = this.element;
        var v25388 = this.options;
        var v21238 = v25388.hoverClass;
        v21237.removeClass(v21238);
      }
      var v17272 = this.ui(c$$265);
      this._trigger("out", b$$322, v17272);
    }
    return;
  }
  function v1220(b$$321) {
    var v11689 = a$$430.ui;
    var v4807 = v11689.ddmanager;
    var c$$264 = v4807.current;
    var v11690 = !c$$264;
    var v17275 = !v11690;
    if (v17275) {
      var v25389 = c$$264.currentItem;
      var v27199 = !v25389;
      if (v27199) {
        v25389 = c$$264.element;
      }
      var v21239 = v25389;
      var v17273 = v21239[0];
      var v21240 = this.element;
      var v17274 = v21240[0];
      v11690 = v17273 == v17274;
    }
    var v4808 = v11690;
    if (v4808) {
      return;
    }
    var v11691 = this.accept;
    var v17276 = this.element;
    var v11692 = v17276[0];
    var v17277 = c$$264.currentItem;
    var v21241 = !v17277;
    if (v21241) {
      v17277 = c$$264.element;
    }
    var v11693 = v17277;
    var v4809 = v11691.call(v11692, v11693);
    if (v4809) {
      var v21242 = this.options;
      var v17278 = v21242.hoverClass;
      if (v17278) {
        var v21243 = this.element;
        var v25390 = this.options;
        var v21244 = v25390.hoverClass;
        v21243.addClass(v21244);
      }
      var v17279 = this.ui(c$$264);
      this._trigger("over", b$$321, v17279);
    }
    return;
  }
  function v1219(b$$320) {
    var v11694 = a$$430.ui;
    var v4810 = v11694.ddmanager;
    var c$$263 = v4810.current;
    var v17280 = this.options;
    var v11695 = v17280.activeClass;
    if (v11695) {
      var v17281 = this.element;
      var v21245 = this.options;
      var v17282 = v21245.activeClass;
      v17281.removeClass(v17282);
    }
    if (c$$263) {
      var v17283 = this.ui(c$$263);
      this._trigger("deactivate", b$$320, v17283);
    }
    return;
  }
  function v1218(b$$319) {
    var v11696 = a$$430.ui;
    var v4811 = v11696.ddmanager;
    var c$$262 = v4811.current;
    var v17284 = this.options;
    var v11697 = v17284.activeClass;
    if (v11697) {
      var v17285 = this.element;
      var v21246 = this.options;
      var v17286 = v21246.activeClass;
      v17285.addClass(v17286);
    }
    if (c$$262) {
      var v17287 = this.ui(c$$262);
      this._trigger("activate", b$$319, v17287);
    }
    return;
  }
  function v1217(b$$318, c$$261) {
    function v1216(a$$432) {
      return a$$432.is(c$$261);
    }
    var v11698 = b$$318 == "accept";
    if (v11698) {
      var v17288;
      var v21247 = a$$430.isFunction(c$$261);
      if (v21247) {
        v17288 = c$$261;
      } else {
        v17288 = v1216;
      }
      this.accept = v17288;
    }
    var v21248 = a$$430.Widget;
    var v17289 = v21248.prototype;
    var v11699 = v17289._setOption;
    v11699.apply(this, arguments);
    return;
  }
  function v1215() {
    var v17290 = a$$430.ui;
    var v11700 = v17290.ddmanager;
    var v4812 = v11700.droppables;
    var v11701 = this.options;
    var v4813 = v11701.scope;
    var b$$317 = v4812[v4813];
    var c$$260 = 0;
    var v11702 = b$$317.length;
    var v4815 = c$$260 < v11702;
    for (;v4815;) {
      var v11703 = b$$317[c$$260];
      var v4814 = v11703 == this;
      if (v4814) {
        b$$317.splice(c$$260, 1);
      }
      c$$260++;
      var v11704 = b$$317.length;
      v4815 = c$$260 < v11704;
    }
    var v21249 = this.element;
    var v17291 = v21249.removeClass("ui-droppable ui-droppable-disabled");
    var v11705 = v17291.removeData("droppable");
    v11705.unbind(".droppable");
    return this;
  }
  function v1214() {
    function v1213(a$$431) {
      return a$$431.is(c$$259);
    }
    var b$$316 = this.options;
    var c$$259 = b$$316.accept;
    this.isover = 0;
    this.isout = 1;
    var v27200;
    var v28362 = a$$430.isFunction(c$$259);
    if (v28362) {
      v27200 = c$$259;
    } else {
      v27200 = v1213;
    }
    this.accept = v27200;
    var v28363 = this.element;
    var v27201 = v28363[0];
    var v25391 = v27201.offsetWidth;
    var v28364 = this.element;
    var v27202 = v28364[0];
    var v25392 = v27202.offsetHeight;
    this.proportions = {width:v25391, height:v25392};
    var v27203 = a$$430.ui;
    var v25393 = v27203.ddmanager;
    var v21250 = v25393.droppables;
    var v21251 = b$$316.scope;
    var v29111 = a$$430.ui;
    var v28365 = v29111.ddmanager;
    var v27204 = v28365.droppables;
    var v27205 = b$$316.scope;
    var v25394 = v27204[v27205];
    var v27206 = !v25394;
    if (v27206) {
      v25394 = [];
    }
    v21250[v21251] = v25394;
    var v27207 = a$$430.ui;
    var v25395 = v27207.ddmanager;
    var v21252 = v25395.droppables;
    var v21253 = b$$316.scope;
    var v17292 = v21252[v21253];
    v17292.push(this);
    var v11706 = b$$316.addClasses;
    if (v11706) {
      var v17293 = this.element;
      v17293.addClass("ui-droppable");
    }
    return;
  }
  var v27208 = !1;
  var v27209 = !0;
  var v27210 = !1;
  var v27211 = !1;
  var v25396 = {accept:"*", activeClass:v27208, addClasses:v27209, greedy:v27210, hoverClass:v27211, scope:"default", tolerance:"intersect"};
  var v21254 = {widgetEventPrefix:"drop", options:v25396, _create:v1214, destroy:v1215, _setOption:v1217, _activate:v1218, _deactivate:v1219, _over:v1220, _out:v1221, _drop:v1223, ui:v1224};
  a$$430.widget("ui.droppable", v21254);
  var v25397 = a$$430.ui;
  var v21255 = v25397.droppable;
  var v21256 = {version:"1.8.24"};
  a$$430.extend(v21255, v21256);
  var v17294 = a$$430.ui;
  v17294.intersect = v1225;
  var v11707 = a$$430.ui;
  var v17295 = {"default":[]};
  v11707.ddmanager = {current:null, droppables:v17295, prepareOffsets:v1226, drop:v1228, dragStart:v1230, drag:v1233, dragStop:v1234};
  return;
}
function v1212(a$$426, b$$284) {
  function v1211(b$$314, c$$258) {
    var v11708 = a$$426(this);
    var v4816 = v11708.data("draggable");
    var d$$203 = v4816.options;
    var v4817 = d$$203._zIndex;
    if (v4817) {
      var v17296 = c$$258.helper;
      var v11709 = a$$426(v17296);
      var v11710 = d$$203._zIndex;
      v11709.css("zIndex", v11710);
    }
    return;
  }
  function v1210(b$$313, c$$257) {
    var v4818 = c$$257.helper;
    var d$$202 = a$$426(v4818);
    var v11711 = a$$426(this);
    var v4819 = v11711.data("draggable");
    var e$$196 = v4819.options;
    var v11712 = d$$202.css("zIndex");
    if (v11712) {
      var v31100 = d$$202.css("zIndex");
      e$$196._zIndex = v31100;
    }
    var v11713 = e$$196.zIndex;
    d$$202.css("zIndex", v11713);
    return;
  }
  function v1209(b$$311, c$$255) {
    function v1208(a$$429) {
      var v4820 = this.style;
      v4820.zIndex = f$$69 + a$$429;
      return;
    }
    function v1207(b$$312, c$$256) {
      var v21257 = a$$426(b$$312);
      var v17297 = v21257.css("zIndex");
      var v11714 = parseInt(v17297, 10);
      var v17298 = !v11714;
      if (v17298) {
        v11714 = 0;
      }
      var v4821 = v11714;
      var v21258 = a$$426(c$$256);
      var v17299 = v21258.css("zIndex");
      var v11715 = parseInt(v17299, 10);
      var v17300 = !v11715;
      if (v17300) {
        v11715 = 0;
      }
      var v4822 = v11715;
      return v4821 - v4822;
    }
    var v11716 = a$$426(this);
    var v4823 = v11716.data("draggable");
    var d$$201 = v4823.options;
    var v17301 = d$$201.stack;
    var v11717 = a$$426(v17301);
    var v4824 = a$$426.makeArray(v11717);
    var e$$195 = v4824.sort(v1207);
    var v11718 = e$$195.length;
    var v4825 = !v11718;
    if (v4825) {
      return;
    }
    var v21259 = e$$195[0];
    var v17302 = v21259.style;
    var v11719 = v17302.zIndex;
    var v4826 = parseInt(v11719);
    var v11720 = !v4826;
    if (v11720) {
      v4826 = 0;
    }
    var f$$69 = v4826;
    var v11721 = a$$426(e$$195);
    v11721.each(v1208);
    var v17303 = this[0];
    var v11722 = v17303.style;
    var v17304 = e$$195.length;
    v11722.zIndex = f$$69 + v17304;
    return;
  }
  function v1206(b$$310, c$$254) {
    var v4827 = a$$426(this);
    var d$$200 = v4827.data("draggable");
    var e$$194 = d$$200.options;
    var f$$68 = e$$194.snapTolerance;
    var v4828 = c$$254.offset;
    var g$$110 = v4828.left;
    var v11723 = d$$200.helperProportions;
    var v4829 = v11723.width;
    var h$$89 = g$$110 + v4829;
    var v4830 = c$$254.offset;
    var i$$150 = v4830.top;
    var v11724 = d$$200.helperProportions;
    var v4831 = v11724.height;
    var j$$66 = i$$150 + v4831;
    var v11725 = d$$200.snapElements;
    var v4832 = v11725.length;
    var k$$43 = v4832 - 1;
    var v4849 = k$$43 >= 0;
    for (;v4849;) {
      var v11726 = d$$200.snapElements;
      var v4833 = v11726[k$$43];
      var l$$54 = v4833.left;
      var v17305 = d$$200.snapElements;
      var v11727 = v17305[k$$43];
      var v4834 = v11727.width;
      var m$$28 = l$$54 + v4834;
      var v11728 = d$$200.snapElements;
      var v4835 = v11728[k$$43];
      var n$$79 = v4835.top;
      var v17306 = d$$200.snapElements;
      var v11729 = v17306[k$$43];
      var v4836 = v11729.height;
      var o$$16 = n$$79 + v4836;
      var v29596 = l$$54 - f$$68;
      var v29112 = v29596 < g$$110;
      if (v29112) {
        var v29597 = m$$28 + f$$68;
        v29112 = g$$110 < v29597;
      }
      var v28366 = v29112;
      if (v28366) {
        var v29113 = n$$79 - f$$68;
        v28366 = v29113 < i$$150;
      }
      var v27212 = v28366;
      if (v27212) {
        var v28367 = o$$16 + f$$68;
        v27212 = i$$150 < v28367;
      }
      var v25398 = v27212;
      var v27214 = !v25398;
      if (v27214) {
        var v29598 = l$$54 - f$$68;
        var v29114 = v29598 < g$$110;
        if (v29114) {
          var v29599 = m$$28 + f$$68;
          v29114 = g$$110 < v29599;
        }
        var v28368 = v29114;
        if (v28368) {
          var v29115 = n$$79 - f$$68;
          v28368 = v29115 < j$$66;
        }
        var v27213 = v28368;
        if (v27213) {
          var v28369 = o$$16 + f$$68;
          v27213 = j$$66 < v28369;
        }
        v25398 = v27213;
      }
      var v21260 = v25398;
      var v25400 = !v21260;
      if (v25400) {
        var v29116 = l$$54 - f$$68;
        var v28370 = v29116 < h$$89;
        if (v28370) {
          var v29117 = m$$28 + f$$68;
          v28370 = h$$89 < v29117;
        }
        var v27215 = v28370;
        if (v27215) {
          var v28371 = n$$79 - f$$68;
          v27215 = v28371 < i$$150;
        }
        var v25399 = v27215;
        if (v25399) {
          var v27216 = o$$16 + f$$68;
          v25399 = i$$150 < v27216;
        }
        v21260 = v25399;
      }
      var v17307 = v21260;
      var v21262 = !v17307;
      if (v21262) {
        var v28372 = l$$54 - f$$68;
        var v27217 = v28372 < h$$89;
        if (v27217) {
          var v28373 = m$$28 + f$$68;
          v27217 = h$$89 < v28373;
        }
        var v25401 = v27217;
        if (v25401) {
          var v27218 = n$$79 - f$$68;
          v25401 = v27218 < j$$66;
        }
        var v21261 = v25401;
        if (v21261) {
          var v25402 = o$$16 + f$$68;
          v21261 = j$$66 < v25402;
        }
        v17307 = v21261;
      }
      var v11730 = v17307;
      var v4837 = !v11730;
      if (v4837) {
        var v25403 = d$$200.snapElements;
        var v21263 = v25403[k$$43];
        var v17308 = v21263.snapping;
        if (v17308) {
          var v25404 = d$$200.options;
          var v21264 = v25404.snap;
          v17308 = v21264.release;
        }
        var v11731 = v17308;
        if (v11731) {
          var v25405 = d$$200.options;
          var v21265 = v25405.snap;
          var v17309 = v21265.release;
          var v17310 = d$$200.element;
          var v21266 = d$$200._uiHash();
          var v28374 = d$$200.snapElements;
          var v27219 = v28374[k$$43];
          var v25406 = v27219.item;
          var v21267 = {snapItem:v25406};
          var v17311 = a$$426.extend(v21266, v21267);
          v17309.call(v17310, b$$310, v17311);
        }
        var v17312 = d$$200.snapElements;
        var v11732 = v17312[k$$43];
        v11732.snapping = !1;
        k$$43--;
        v4849 = k$$43 >= 0;
        continue;
      }
      var v11733 = e$$194.snapMode;
      var v4842 = v11733 != "inner";
      if (v4842) {
        var v11734 = n$$79 - j$$66;
        var v4838 = Math.abs(v11734);
        var p$$38 = v4838 <= f$$68;
        var v11735 = o$$16 - i$$150;
        var v4839 = Math.abs(v11735);
        var q$$15 = v4839 <= f$$68;
        var v11736 = l$$54 - h$$89;
        var v4840 = Math.abs(v11736);
        var r$$17 = v4840 <= f$$68;
        var v11737 = m$$28 - g$$110;
        var v4841 = Math.abs(v11737);
        var s$$26 = v4841 <= f$$68;
        if (p$$38) {
          var v25407 = c$$254.position;
          var v30146 = d$$200.helperProportions;
          var v29898 = v30146.height;
          var v29600 = n$$79 - v29898;
          var v29118 = {top:v29600, left:0};
          var v28375 = d$$200._convertPositionTo("relative", v29118);
          var v27220 = v28375.top;
          var v28376 = d$$200.margins;
          var v27221 = v28376.top;
          v25407.top = v27220 - v27221;
        }
        if (q$$15) {
          var v25408 = c$$254.position;
          var v29119 = {top:o$$16, left:0};
          var v28377 = d$$200._convertPositionTo("relative", v29119);
          var v27222 = v28377.top;
          var v28378 = d$$200.margins;
          var v27223 = v28378.top;
          v25408.top = v27222 - v27223;
        }
        if (r$$17) {
          var v21268 = c$$254.position;
          var v29899 = d$$200.helperProportions;
          var v29601 = v29899.width;
          var v29120 = l$$54 - v29601;
          var v28379 = {top:0, left:v29120};
          var v27224 = d$$200._convertPositionTo("relative", v28379);
          var v25409 = v27224.left;
          var v27225 = d$$200.margins;
          var v25410 = v27225.left;
          v21268.left = v25409 - v25410;
        }
        if (s$$26) {
          var v17313 = c$$254.position;
          var v27226 = {top:0, left:m$$28};
          var v25411 = d$$200._convertPositionTo("relative", v27226);
          var v21269 = v25411.left;
          var v25412 = d$$200.margins;
          var v21270 = v25412.left;
          v17313.left = v21269 - v21270;
        }
      }
      var v11738 = p$$38 || q$$15;
      var v17314 = !v11738;
      if (v17314) {
        v11738 = r$$17;
      }
      var v4843 = v11738;
      var v11739 = !v4843;
      if (v11739) {
        v4843 = s$$26;
      }
      var t$$11 = v4843;
      var v11740 = e$$194.snapMode;
      var v4848 = v11740 != "outer";
      if (v4848) {
        var v11741 = n$$79 - i$$150;
        var v4844 = Math.abs(v11741);
        p$$38 = v4844 <= f$$68;
        var v11742 = o$$16 - j$$66;
        var v4845 = Math.abs(v11742);
        q$$15 = v4845 <= f$$68;
        var v11743 = l$$54 - g$$110;
        var v4846 = Math.abs(v11743);
        r$$17 = v4846 <= f$$68;
        var v11744 = m$$28 - h$$89;
        var v4847 = Math.abs(v11744);
        s$$26 = v4847 <= f$$68;
        if (p$$38) {
          var v25413 = c$$254.position;
          var v29121 = {top:n$$79, left:0};
          var v28380 = d$$200._convertPositionTo("relative", v29121);
          var v27227 = v28380.top;
          var v28381 = d$$200.margins;
          var v27228 = v28381.top;
          v25413.top = v27227 - v27228;
        }
        if (q$$15) {
          var v25414 = c$$254.position;
          var v30147 = d$$200.helperProportions;
          var v29900 = v30147.height;
          var v29602 = o$$16 - v29900;
          var v29122 = {top:v29602, left:0};
          var v28382 = d$$200._convertPositionTo("relative", v29122);
          var v27229 = v28382.top;
          var v28383 = d$$200.margins;
          var v27230 = v28383.top;
          v25414.top = v27229 - v27230;
        }
        if (r$$17) {
          var v21271 = c$$254.position;
          var v28384 = {top:0, left:l$$54};
          var v27231 = d$$200._convertPositionTo("relative", v28384);
          var v25415 = v27231.left;
          var v27232 = d$$200.margins;
          var v25416 = v27232.left;
          v21271.left = v25415 - v25416;
        }
        if (s$$26) {
          var v17315 = c$$254.position;
          var v29603 = d$$200.helperProportions;
          var v29123 = v29603.width;
          var v28385 = m$$28 - v29123;
          var v27233 = {top:0, left:v28385};
          var v25417 = d$$200._convertPositionTo("relative", v27233);
          var v21272 = v25417.left;
          var v25418 = d$$200.margins;
          var v21273 = v25418.left;
          v17315.left = v21272 - v21273;
        }
      }
      var v28386 = d$$200.snapElements;
      var v27234 = v28386[k$$43];
      var v25419 = v27234.snapping;
      var v21274 = !v25419;
      if (v21274) {
        var v28387 = p$$38 || q$$15;
        var v29124 = !v28387;
        if (v29124) {
          v28387 = r$$17;
        }
        var v27235 = v28387;
        var v28388 = !v27235;
        if (v28388) {
          v27235 = s$$26;
        }
        var v25420 = v27235;
        var v27236 = !v25420;
        if (v27236) {
          v25420 = t$$11;
        }
        v21274 = v25420;
      }
      var v17316 = v21274;
      if (v17316) {
        var v25421 = d$$200.options;
        var v21275 = v25421.snap;
        v17316 = v21275.snap;
      }
      var v11745 = v17316;
      if (v11745) {
        var v25422 = d$$200.options;
        var v21276 = v25422.snap;
        var v17317 = v21276.snap;
        var v17318 = d$$200.element;
        var v21277 = d$$200._uiHash();
        var v28389 = d$$200.snapElements;
        var v27237 = v28389[k$$43];
        var v25423 = v27237.item;
        var v21278 = {snapItem:v25423};
        var v17319 = a$$426.extend(v21277, v21278);
        v17317.call(v17318, b$$310, v17319);
      }
      var v17320 = d$$200.snapElements;
      var v11746 = v17320[k$$43];
      var v25424 = p$$38 || q$$15;
      var v27238 = !v25424;
      if (v27238) {
        v25424 = r$$17;
      }
      var v21279 = v25424;
      var v25425 = !v21279;
      if (v25425) {
        v21279 = s$$26;
      }
      var v17321 = v21279;
      var v21280 = !v17321;
      if (v21280) {
        v17321 = t$$11;
      }
      v11746.snapping = v17321;
      k$$43--;
      v4849 = k$$43 >= 0;
    }
    return;
  }
  function v1205(b$$308, c$$252) {
    function v1204() {
      var b$$309 = a$$426(this);
      var c$$253 = b$$309.offset();
      var v17322 = d$$199.element;
      var v11747 = v17322[0];
      var v4850 = this != v11747;
      if (v4850) {
        var v11748 = d$$199.snapElements;
        var v17323 = b$$309.outerWidth();
        var v17324 = b$$309.outerHeight();
        var v17325 = c$$253.top;
        var v17326 = c$$253.left;
        var v11749 = {item:this, width:v17323, height:v17324, top:v17325, left:v17326};
        v11748.push(v11749);
      }
      return;
    }
    var v4851 = a$$426(this);
    var d$$199 = v4851.data("draggable");
    var e$$193 = d$$199.options;
    d$$199.snapElements = [];
    var v21281;
    var v28390 = e$$193.snap;
    var v27239 = v28390.constructor;
    var v25427 = v27239 != String;
    if (v25427) {
      var v27240 = e$$193.snap;
      var v25426 = v27240.items;
      var v27241 = !v25426;
      if (v27241) {
        v25426 = ":data(draggable)";
      }
      v21281 = v25426;
    } else {
      v21281 = e$$193.snap;
    }
    var v17327 = v21281;
    var v11750 = a$$426(v17327);
    v11750.each(v1204);
    return;
  }
  function v1203(b$$307, c$$251) {
    var v4852 = a$$426(this);
    var d$$198 = v4852.data("draggable");
    var e$$192 = d$$198.options;
    var f$$67 = !1;
    var v21282 = d$$198.scrollParent;
    var v17328 = v21282[0];
    var v11751 = v17328 != document;
    if (v11751) {
      var v25428 = d$$198.scrollParent;
      var v21283 = v25428[0];
      var v17329 = v21283.tagName;
      v11751 = v17329 != "HTML";
    }
    var v4861 = v11751;
    if (v4861) {
      var v17330 = e$$192.axis;
      var v11752 = !v17330;
      var v17332 = !v11752;
      if (v17332) {
        var v17331 = e$$192.axis;
        v11752 = v17331 != "x";
      }
      var v4854 = v11752;
      if (v4854) {
        var v4853;
        var v27242 = d$$198.overflowOffset;
        var v25429 = v27242.top;
        var v28391 = d$$198.scrollParent;
        var v27243 = v28391[0];
        var v25430 = v27243.offsetHeight;
        var v21284 = v25429 + v25430;
        var v21285 = b$$307.pageY;
        var v17333 = v21284 - v21285;
        var v17334 = e$$192.scrollSensitivity;
        var v11755 = v17333 < v17334;
        if (v11755) {
          var v17335 = d$$198.scrollParent;
          var v11753 = v17335[0];
          var v25431 = d$$198.scrollParent;
          var v21286 = v25431[0];
          var v17336 = v21286.scrollTop;
          var v17337 = e$$192.scrollSpeed;
          v4853 = v11753.scrollTop = f$$67 = v17336 + v17337;
        } else {
          var v21287 = b$$307.pageY;
          var v25432 = d$$198.overflowOffset;
          var v21288 = v25432.top;
          var v17338 = v21287 - v21288;
          var v17339 = e$$192.scrollSensitivity;
          var v11754 = v17338 < v17339;
          if (v11754) {
            var v21289 = d$$198.scrollParent;
            var v17340 = v21289[0];
            var v27244 = d$$198.scrollParent;
            var v25433 = v27244[0];
            var v21290 = v25433.scrollTop;
            var v21291 = e$$192.scrollSpeed;
            v11754 = v17340.scrollTop = f$$67 = v21290 - v21291;
          }
          v4853 = v11754;
        }
        v4853;
      }
      var v17341 = e$$192.axis;
      var v11756 = !v17341;
      var v17343 = !v11756;
      if (v17343) {
        var v17342 = e$$192.axis;
        v11756 = v17342 != "y";
      }
      var v4856 = v11756;
      if (v4856) {
        var v4855;
        var v27245 = d$$198.overflowOffset;
        var v25434 = v27245.left;
        var v28392 = d$$198.scrollParent;
        var v27246 = v28392[0];
        var v25435 = v27246.offsetWidth;
        var v21292 = v25434 + v25435;
        var v21293 = b$$307.pageX;
        var v17344 = v21292 - v21293;
        var v17345 = e$$192.scrollSensitivity;
        var v11759 = v17344 < v17345;
        if (v11759) {
          var v17346 = d$$198.scrollParent;
          var v11757 = v17346[0];
          var v25436 = d$$198.scrollParent;
          var v21294 = v25436[0];
          var v17347 = v21294.scrollLeft;
          var v17348 = e$$192.scrollSpeed;
          v4855 = v11757.scrollLeft = f$$67 = v17347 + v17348;
        } else {
          var v21295 = b$$307.pageX;
          var v25437 = d$$198.overflowOffset;
          var v21296 = v25437.left;
          var v17349 = v21295 - v21296;
          var v17350 = e$$192.scrollSensitivity;
          var v11758 = v17349 < v17350;
          if (v11758) {
            var v21297 = d$$198.scrollParent;
            var v17351 = v21297[0];
            var v27247 = d$$198.scrollParent;
            var v25438 = v27247[0];
            var v21298 = v25438.scrollLeft;
            var v21299 = e$$192.scrollSpeed;
            v11758 = v17351.scrollLeft = f$$67 = v21298 - v21299;
          }
          v4855 = v11758;
        }
        v4855;
      }
    } else {
      var v17352 = e$$192.axis;
      var v11760 = !v17352;
      var v17354 = !v11760;
      if (v17354) {
        var v17353 = e$$192.axis;
        v11760 = v17353 != "x";
      }
      var v4858 = v11760;
      if (v4858) {
        var v4857;
        var v21300 = b$$307.pageY;
        var v25439 = a$$426(document);
        var v21301 = v25439.scrollTop();
        var v17355 = v21300 - v21301;
        var v17356 = e$$192.scrollSensitivity;
        var v11764 = v17355 < v17356;
        if (v11764) {
          var v11761 = a$$426(document);
          var v21302 = a$$426(document);
          var v17357 = v21302.scrollTop();
          var v17358 = e$$192.scrollSpeed;
          var v11762 = v17357 - v17358;
          v4857 = f$$67 = v11761.scrollTop(v11762);
        } else {
          var v25440 = a$$426(window);
          var v21303 = v25440.height();
          var v25441 = b$$307.pageY;
          var v27248 = a$$426(document);
          var v25442 = v27248.scrollTop();
          var v21304 = v25441 - v25442;
          var v17359 = v21303 - v21304;
          var v17360 = e$$192.scrollSensitivity;
          var v11763 = v17359 < v17360;
          if (v11763) {
            var v17361 = a$$426(document);
            var v25443 = a$$426(document);
            var v21305 = v25443.scrollTop();
            var v21306 = e$$192.scrollSpeed;
            var v17362 = v21305 + v21306;
            v11763 = f$$67 = v17361.scrollTop(v17362);
          }
          v4857 = v11763;
        }
        v4857;
      }
      var v17363 = e$$192.axis;
      var v11765 = !v17363;
      var v17365 = !v11765;
      if (v17365) {
        var v17364 = e$$192.axis;
        v11765 = v17364 != "y";
      }
      var v4860 = v11765;
      if (v4860) {
        var v4859;
        var v21307 = b$$307.pageX;
        var v25444 = a$$426(document);
        var v21308 = v25444.scrollLeft();
        var v17366 = v21307 - v21308;
        var v17367 = e$$192.scrollSensitivity;
        var v11769 = v17366 < v17367;
        if (v11769) {
          var v11766 = a$$426(document);
          var v21309 = a$$426(document);
          var v17368 = v21309.scrollLeft();
          var v17369 = e$$192.scrollSpeed;
          var v11767 = v17368 - v17369;
          v4859 = f$$67 = v11766.scrollLeft(v11767);
        } else {
          var v25445 = a$$426(window);
          var v21310 = v25445.width();
          var v25446 = b$$307.pageX;
          var v27249 = a$$426(document);
          var v25447 = v27249.scrollLeft();
          var v21311 = v25446 - v25447;
          var v17370 = v21310 - v21311;
          var v17371 = e$$192.scrollSensitivity;
          var v11768 = v17370 < v17371;
          if (v11768) {
            var v17372 = a$$426(document);
            var v25448 = a$$426(document);
            var v21312 = v25448.scrollLeft();
            var v21313 = e$$192.scrollSpeed;
            var v17373 = v21312 + v21313;
            v11768 = f$$67 = v17372.scrollLeft(v17373);
          }
          v4859 = v11768;
        }
        v4859;
      }
    }
    var v21314 = !1;
    var v17374 = f$$67 !== v21314;
    if (v17374) {
      var v21315 = a$$426.ui;
      v17374 = v21315.ddmanager;
    }
    var v11770 = v17374;
    if (v11770) {
      var v17375 = e$$192.dropBehaviour;
      v11770 = !v17375;
    }
    var v4862 = v11770;
    if (v4862) {
      var v17376 = a$$426.ui;
      var v11771 = v17376.ddmanager;
      v11771.prepareOffsets(d$$198, b$$307);
    }
    return;
  }
  function v1202(b$$306, c$$250) {
    var v4863 = a$$426(this);
    var d$$197 = v4863.data("draggable");
    var v21316 = d$$197.scrollParent;
    var v17377 = v21316[0];
    var v11772 = v17377 != document;
    if (v11772) {
      var v25449 = d$$197.scrollParent;
      var v21317 = v25449[0];
      var v17378 = v21317.tagName;
      v11772 = v17378 != "HTML";
    }
    var v4864 = v11772;
    if (v4864) {
      var v11773 = d$$197.scrollParent;
      var v31101 = v11773.offset();
      d$$197.overflowOffset = v31101;
    }
    return;
  }
  function v1201(b$$305, c$$249) {
    var v11774 = a$$426(this);
    var v4865 = v11774.data("draggable");
    var d$$196 = v4865.options;
    var v4866 = d$$196._opacity;
    if (v4866) {
      var v17379 = c$$249.helper;
      var v11775 = a$$426(v17379);
      var v11776 = d$$196._opacity;
      v11775.css("opacity", v11776);
    }
    return;
  }
  function v1200(b$$304, c$$248) {
    var v4867 = c$$248.helper;
    var d$$195 = a$$426(v4867);
    var v11777 = a$$426(this);
    var v4868 = v11777.data("draggable");
    var e$$191 = v4868.options;
    var v11778 = d$$195.css("opacity");
    if (v11778) {
      var v31102 = d$$195.css("opacity");
      e$$191._opacity = v31102;
    }
    var v11779 = e$$191.opacity;
    d$$195.css("opacity", v11779);
    return;
  }
  function v1199(b$$303, c$$247) {
    var v11780 = a$$426(this);
    var v4869 = v11780.data("draggable");
    var d$$194 = v4869.options;
    var v4870 = d$$194._cursor;
    if (v4870) {
      var v11781 = a$$426("body");
      var v11782 = d$$194._cursor;
      v11781.css("cursor", v11782);
    }
    return;
  }
  function v1198(b$$302, c$$246) {
    var d$$193 = a$$426("body");
    var v11783 = a$$426(this);
    var v4871 = v11783.data("draggable");
    var e$$190 = v4871.options;
    var v11784 = d$$193.css("cursor");
    if (v11784) {
      var v31103 = d$$193.css("cursor");
      e$$190._cursor = v31103;
    }
    var v11785 = e$$190.cursor;
    d$$193.css("cursor", v11785);
    return;
  }
  function v1197(b$$300, c$$244) {
    function v1196(f$$66) {
      function v1195() {
        var v4872 = c$$244.helper;
        return v4872[0];
      }
      var v21318 = this.instance;
      v21318.positionAbs = d$$191.positionAbs;
      var v21319 = this.instance;
      v21319.helperProportions = d$$191.helperProportions;
      var v21320 = this.instance;
      var v17380 = v21320.offset;
      var v21321 = d$$191.offset;
      v17380.click = v21321.click;
      var v11786;
      var v21322 = this.instance;
      var v25450 = this.instance;
      var v21323 = v25450.containerCache;
      var v17382 = v21322._intersectsWith(v21323);
      if (v17382) {
        var v25451 = this.instance;
        var v21324 = v25451.isOver;
        var v25452 = !v21324;
        if (v25452) {
          var v30825 = this.instance;
          v30825.isOver = 1;
          var v30826 = this.instance;
          var v30863 = a$$426(e$$188);
          var v30860 = v30863.clone();
          var v30855 = v30860.removeAttr("id");
          var v30861 = this.instance;
          var v30856 = v30861.element;
          var v30842 = v30855.appendTo(v30856);
          var v30843 = !0;
          var v31104 = v30842.data("sortable-item", v30843);
          v30826.currentItem = v31104;
          var v30827 = this.instance;
          var v30801 = v30827.options;
          var v30844 = this.instance;
          var v30828 = v30844.options;
          v30801._helper = v30828.helper;
          var v30802 = this.instance;
          var v30771 = v30802.options;
          v30771.helper = v1195;
          var v30772 = this.instance;
          var v30737 = v30772.currentItem;
          b$$300.target = v30737[0];
          var v30687 = this.instance;
          var v30688 = !0;
          v30687._mouseCapture(b$$300, v30688);
          var v30608 = this.instance;
          var v30609 = !0;
          var v30610 = !0;
          v30608._mouseStart(b$$300, v30609, v30610);
          var v30689 = this.instance;
          var v30611 = v30689.offset;
          var v30483 = v30611.click;
          var v30690 = d$$191.offset;
          var v30612 = v30690.click;
          v30483.top = v30612.top;
          var v30613 = this.instance;
          var v30484 = v30613.offset;
          var v30343 = v30484.click;
          var v30614 = d$$191.offset;
          var v30485 = v30614.click;
          v30343.left = v30485.left;
          var v30486 = this.instance;
          var v30344 = v30486.offset;
          var v30148 = v30344.parent;
          var v30487 = v30148.left;
          var v30738 = d$$191.offset;
          var v30691 = v30738.parent;
          var v30615 = v30691.left;
          var v30773 = this.instance;
          var v30739 = v30773.offset;
          var v30692 = v30739.parent;
          var v30616 = v30692.left;
          var v30488 = v30615 - v30616;
          v30148.left = v30487 - v30488;
          var v30345 = this.instance;
          var v30149 = v30345.offset;
          var v29901 = v30149.parent;
          var v30346 = v29901.top;
          var v30693 = d$$191.offset;
          var v30617 = v30693.parent;
          var v30489 = v30617.top;
          var v30740 = this.instance;
          var v30694 = v30740.offset;
          var v30618 = v30694.parent;
          var v30490 = v30618.top;
          var v30347 = v30489 - v30490;
          v29901.top = v30346 - v30347;
          d$$191._trigger("toSortable", b$$300);
          var v29125 = this.instance;
          d$$191.dropped = v29125.element;
          d$$191.currentItem = d$$191.element;
          var v27250 = this.instance;
          v27250.fromOutside = d$$191;
        }
        var v25453 = this.instance;
        var v21325 = v25453.currentItem;
        if (v21325) {
          var v25454 = this.instance;
          v21325 = v25454._mouseDrag(b$$300);
        }
        v11786 = v21325;
      } else {
        var v21326 = this.instance;
        var v17381 = v21326.isOver;
        if (v17381) {
          var v30491 = this.instance;
          v30491.isOver = 0;
          var v30492 = this.instance;
          v30492.cancelHelperRemoval = !0;
          var v30493 = this.instance;
          var v30348 = v30493.options;
          v30348.revert = !1;
          var v30150 = this.instance;
          var v30349 = this.instance;
          var v30350 = this.instance;
          var v30151 = v30349._uiHash(v30350);
          v30150._trigger("out", b$$300, v30151);
          var v29902 = this.instance;
          var v29903 = !0;
          v29902._mouseStop(b$$300, v29903);
          var v29904 = this.instance;
          var v29604 = v29904.options;
          var v30152 = this.instance;
          var v29905 = v30152.options;
          v29604.helper = v29905._helper;
          var v29605 = this.instance;
          var v29126 = v29605.currentItem;
          v29126.remove();
          var v29127 = this.instance;
          var v28393 = v29127.placeholder;
          if (v28393) {
            var v29606 = this.instance;
            var v29128 = v29606.placeholder;
            v29128.remove();
          }
          d$$191._trigger("fromSortable", b$$300);
          v17381 = d$$191.dropped = !1;
        }
        v11786 = v17381;
      }
      v11786;
      return;
    }
    var v4873 = a$$426(this);
    var d$$191 = v4873.data("draggable");
    var e$$188 = this;
    var v4874 = d$$191.sortables;
    a$$426.each(v4874, v1196);
    return;
  }
  function v1194(b$$299, c$$243) {
    function v1193() {
      var v4875;
      var v17383 = this.instance;
      var v11787 = v17383.isOver;
      if (v11787) {
        var v29129 = this.instance;
        v29129.isOver = 0;
        d$$190.cancelHelperRemoval = !0;
        var v28394 = this.instance;
        v28394.cancelHelperRemoval = !1;
        var v27251 = this.shouldRevert;
        if (v27251) {
          var v29130 = this.instance;
          var v28395 = v29130.options;
          v28395.revert = !0;
        }
        var v25455 = this.instance;
        v25455._mouseStop(b$$299);
        var v25456 = this.instance;
        var v21327 = v25456.options;
        var v27252 = this.instance;
        var v25457 = v27252.options;
        v21327.helper = v25457._helper;
        var v25458 = d$$190.options;
        var v21328 = v25458.helper;
        var v17384 = v21328 == "original";
        if (v17384) {
          var v25459 = this.instance;
          var v21329 = v25459.currentItem;
          var v21330 = {top:"auto", left:"auto"};
          v17384 = v21329.css(v21330);
        }
        v4875 = v17384;
      } else {
        var v17385 = this.instance;
        v17385.cancelHelperRemoval = !1;
        var v17386 = this.instance;
        v4875 = v17386._trigger("deactivate", b$$299, e$$187);
      }
      v4875;
      return;
    }
    var v4876 = a$$426(this);
    var d$$190 = v4876.data("draggable");
    var v11788 = d$$190.element;
    var v4877 = {item:v11788};
    var e$$187 = a$$426.extend({}, c$$243, v4877);
    var v4878 = d$$190.sortables;
    a$$426.each(v4878, v1193);
    return;
  }
  function v1192(b$$298, c$$241) {
    function v1191() {
      var c$$242 = a$$426.data(this, "sortable");
      var v11789 = c$$242;
      if (v11789) {
        var v21331 = c$$242.options;
        var v17387 = v21331.disabled;
        v11789 = !v17387;
      }
      var v4879 = v11789;
      if (v4879) {
        var v21332 = d$$189.sortables;
        var v27253 = c$$242.options;
        var v25460 = v27253.revert;
        var v21333 = {instance:c$$242, shouldRevert:v25460};
        v21332.push(v21333);
        c$$242.refreshPositions();
        c$$242._trigger("activate", b$$298, f$$63);
      }
      return;
    }
    var v4880 = a$$426(this);
    var d$$189 = v4880.data("draggable");
    var e$$186 = d$$189.options;
    var v11790 = d$$189.element;
    var v4881 = {item:v11790};
    var f$$63 = a$$426.extend({}, c$$241, v4881);
    d$$189.sortables = [];
    var v17388 = e$$186.connectToSortable;
    var v11791 = a$$426(v17388);
    v11791.each(v1191);
    return;
  }
  function v1190(a$$428) {
    var v4882 = this.helper;
    var v4883 = this.position;
    var v4884 = this.originalPosition;
    var v4885 = this.positionAbs;
    return{helper:v4882, position:v4883, originalPosition:v4884, offset:v4885};
  }
  function v1189(b$$297, c$$240, d$$188) {
    var v21334 = d$$188;
    var v25461 = !v21334;
    if (v25461) {
      v21334 = this._uiHash();
    }
    d$$188 = v21334;
    var v25462 = a$$426.ui;
    var v21335 = v25462.plugin;
    var v21336 = [c$$240, d$$188];
    v21335.call(this, b$$297, v21336);
    var v17389 = b$$297 == "drag";
    if (v17389) {
      var v31105 = this._convertPositionTo("absolute");
      this.positionAbs = v31105;
    }
    var v21337 = a$$426.Widget;
    var v17390 = v21337.prototype;
    var v11792 = v17390._trigger;
    return v11792.call(this, b$$297, c$$240, d$$188);
  }
  function v1188() {
    var v21338 = this.helper;
    v21338.removeClass("ui-draggable-dragging");
    var v28396 = this.helper;
    var v27254 = v28396[0];
    var v28397 = this.element;
    var v27255 = v28397[0];
    var v25463 = v27254 != v27255;
    if (v25463) {
      var v27256 = this.cancelHelperRemoval;
      v25463 = !v27256;
    }
    var v21339 = v25463;
    if (v21339) {
      var v25464 = this.helper;
      v25464.remove();
    }
    this.helper = null;
    this.cancelHelperRemoval = !1;
    return;
  }
  function v1187(b$$296) {
    var c$$239 = this.options;
    var v4886;
    var v21340 = this.cssPosition;
    var v17391 = v21340 == "absolute";
    if (v17391) {
      var v27257 = this.scrollParent;
      var v25465 = v27257[0];
      var v21341 = v25465 == document;
      var v25467 = !v21341;
      if (v25467) {
        var v27258 = a$$426.ui;
        var v28398 = this.scrollParent;
        var v27259 = v28398[0];
        var v28399 = this.offsetParent;
        var v27260 = v28399[0];
        var v25466 = v27258.contains(v27259, v27260);
        v21341 = !v25466;
      }
      v17391 = v21341;
    }
    var v11793 = v17391;
    if (v11793) {
      v4886 = this.offsetParent;
    } else {
      v4886 = this.scrollParent;
    }
    var d$$187 = v4886;
    var v11794 = d$$187[0];
    var v4887 = v11794.tagName;
    var e$$185 = /(html|body)/i.test(v4887);
    var f$$62 = b$$296.pageX;
    var g$$108 = b$$296.pageY;
    var v4900 = this.originalPosition;
    if (v4900) {
      var h$$87;
      var v4894 = this.containment;
      if (v4894) {
        var v4893 = this.relative_container;
        if (v4893) {
          var v4888 = this.relative_container;
          var i$$148 = v4888.offset();
          var v17392 = this.containment;
          var v11795 = v17392[0];
          var v11796 = i$$148.left;
          var v4889 = v11795 + v11796;
          var v17393 = this.containment;
          var v11797 = v17393[1];
          var v11798 = i$$148.top;
          var v4890 = v11797 + v11798;
          var v17394 = this.containment;
          var v11799 = v17394[2];
          var v11800 = i$$148.left;
          var v4891 = v11799 + v11800;
          var v17395 = this.containment;
          var v11801 = v17395[3];
          var v11802 = i$$148.top;
          var v4892 = v11801 + v11802;
          h$$87 = [v4889, v4890, v4891, v4892];
        } else {
          h$$87 = this.containment;
        }
        var v27261 = b$$296.pageX;
        var v29131 = this.offset;
        var v28400 = v29131.click;
        var v27262 = v28400.left;
        var v25468 = v27261 - v27262;
        var v25469 = h$$87[0];
        var v21342 = v25468 < v25469;
        if (v21342) {
          var v25470 = h$$87[0];
          var v28401 = this.offset;
          var v27263 = v28401.click;
          var v25471 = v27263.left;
          f$$62 = v25470 + v25471;
        }
        var v27264 = b$$296.pageY;
        var v29132 = this.offset;
        var v28402 = v29132.click;
        var v27265 = v28402.top;
        var v25472 = v27264 - v27265;
        var v25473 = h$$87[1];
        var v21343 = v25472 < v25473;
        if (v21343) {
          var v25474 = h$$87[1];
          var v28403 = this.offset;
          var v27266 = v28403.click;
          var v25475 = v27266.top;
          g$$108 = v25474 + v25475;
        }
        var v25476 = b$$296.pageX;
        var v28404 = this.offset;
        var v27267 = v28404.click;
        var v25477 = v27267.left;
        var v21344 = v25476 - v25477;
        var v21345 = h$$87[2];
        var v17396 = v21344 > v21345;
        if (v17396) {
          var v21346 = h$$87[2];
          var v27268 = this.offset;
          var v25478 = v27268.click;
          var v21347 = v25478.left;
          f$$62 = v21346 + v21347;
        }
        var v21348 = b$$296.pageY;
        var v27269 = this.offset;
        var v25479 = v27269.click;
        var v21349 = v25479.top;
        var v17397 = v21348 - v21349;
        var v17398 = h$$87[3];
        var v11803 = v17397 > v17398;
        if (v11803) {
          var v17399 = h$$87[3];
          var v25480 = this.offset;
          var v21350 = v25480.click;
          var v17400 = v21350.top;
          g$$108 = v17399 + v17400;
        }
      }
      var v4899 = c$$239.grid;
      if (v4899) {
        var v4895;
        var v17401 = c$$239.grid;
        var v11806 = v17401[1];
        if (v11806) {
          var v11804 = this.originalPageY;
          var v27270 = this.originalPageY;
          var v25481 = g$$108 - v27270;
          var v27271 = c$$239.grid;
          var v25482 = v27271[1];
          var v21351 = v25481 / v25482;
          var v17402 = Math.round(v21351);
          var v21352 = c$$239.grid;
          var v17403 = v21352[1];
          var v11805 = v17402 * v17403;
          v4895 = v11804 + v11805;
        } else {
          v4895 = this.originalPageY;
        }
        var j$$64 = v4895;
        var v4896;
        if (h$$87) {
          var v11807;
          var v29133 = this.offset;
          var v28405 = v29133.click;
          var v27272 = v28405.top;
          var v25483 = j$$64 - v27272;
          var v25484 = h$$87[1];
          var v21353 = v25483 < v25484;
          var v25487 = !v21353;
          if (v25487) {
            var v29134 = this.offset;
            var v28406 = v29134.click;
            var v27273 = v28406.top;
            var v25485 = j$$64 - v27273;
            var v25486 = h$$87[3];
            v21353 = v25485 > v25486;
          }
          var v17405 = v21353;
          if (v17405) {
            var v17404;
            var v29135 = this.offset;
            var v28407 = v29135.click;
            var v27274 = v28407.top;
            var v25488 = j$$64 - v27274;
            var v25489 = h$$87[1];
            var v21356 = v25488 < v25489;
            if (v21356) {
              var v25490 = c$$239.grid;
              var v21354 = v25490[1];
              v17404 = j$$64 + v21354;
            } else {
              var v25491 = c$$239.grid;
              var v21355 = v25491[1];
              v17404 = j$$64 - v21355;
            }
            v11807 = v17404;
          } else {
            v11807 = j$$64;
          }
          v4896 = v11807;
        } else {
          v4896 = j$$64;
        }
        g$$108 = v4896;
        var v4897;
        var v17406 = c$$239.grid;
        var v11810 = v17406[0];
        if (v11810) {
          var v11808 = this.originalPageX;
          var v27275 = this.originalPageX;
          var v25492 = f$$62 - v27275;
          var v27276 = c$$239.grid;
          var v25493 = v27276[0];
          var v21357 = v25492 / v25493;
          var v17407 = Math.round(v21357);
          var v21358 = c$$239.grid;
          var v17408 = v21358[0];
          var v11809 = v17407 * v17408;
          v4897 = v11808 + v11809;
        } else {
          v4897 = this.originalPageX;
        }
        var k$$42 = v4897;
        var v4898;
        if (h$$87) {
          var v11811;
          var v29136 = this.offset;
          var v28408 = v29136.click;
          var v27277 = v28408.left;
          var v25494 = k$$42 - v27277;
          var v25495 = h$$87[0];
          var v21359 = v25494 < v25495;
          var v25498 = !v21359;
          if (v25498) {
            var v29137 = this.offset;
            var v28409 = v29137.click;
            var v27278 = v28409.left;
            var v25496 = k$$42 - v27278;
            var v25497 = h$$87[2];
            v21359 = v25496 > v25497;
          }
          var v17410 = v21359;
          if (v17410) {
            var v17409;
            var v29138 = this.offset;
            var v28410 = v29138.click;
            var v27279 = v28410.left;
            var v25499 = k$$42 - v27279;
            var v25500 = h$$87[0];
            var v21362 = v25499 < v25500;
            if (v21362) {
              var v25501 = c$$239.grid;
              var v21360 = v25501[0];
              v17409 = k$$42 + v21360;
            } else {
              var v25502 = c$$239.grid;
              var v21361 = v25502[0];
              v17409 = k$$42 - v21361;
            }
            v11811 = v17409;
          } else {
            v11811 = k$$42;
          }
          v4898 = v11811;
        } else {
          v4898 = k$$42;
        }
        f$$62 = v4898;
      }
    }
    var v28411 = this.offset;
    var v27280 = v28411.click;
    var v25503 = v27280.top;
    var v21363 = g$$108 - v25503;
    var v27281 = this.offset;
    var v25504 = v27281.relative;
    var v21364 = v25504.top;
    var v17411 = v21363 - v21364;
    var v25505 = this.offset;
    var v21365 = v25505.parent;
    var v17412 = v21365.top;
    var v11812 = v17411 - v17412;
    var v17413;
    var v28412 = a$$426.browser;
    var v27282 = v28412.safari;
    if (v27282) {
      var v29139 = a$$426.browser;
      var v28413 = v29139.version;
      v27282 = v28413 < 526;
    }
    var v25506 = v27282;
    if (v25506) {
      var v27283 = this.cssPosition;
      v25506 = v27283 == "fixed";
    }
    var v21367 = v25506;
    if (v21367) {
      v17413 = 0;
    } else {
      var v21366;
      var v27284 = this.cssPosition;
      var v25509 = v27284 == "fixed";
      if (v25509) {
        var v27285 = this.scrollParent;
        var v25507 = v27285.scrollTop();
        v21366 = -v25507;
      } else {
        var v25508;
        if (e$$185) {
          v25508 = 0;
        } else {
          v25508 = d$$187.scrollTop();
        }
        v21366 = v25508;
      }
      v17413 = v21366;
    }
    var v11813 = v17413;
    var v4901 = v11812 + v11813;
    var v28414 = this.offset;
    var v27286 = v28414.click;
    var v25510 = v27286.left;
    var v21368 = f$$62 - v25510;
    var v27287 = this.offset;
    var v25511 = v27287.relative;
    var v21369 = v25511.left;
    var v17414 = v21368 - v21369;
    var v25512 = this.offset;
    var v21370 = v25512.parent;
    var v17415 = v21370.left;
    var v11814 = v17414 - v17415;
    var v17416;
    var v28415 = a$$426.browser;
    var v27288 = v28415.safari;
    if (v27288) {
      var v29140 = a$$426.browser;
      var v28416 = v29140.version;
      v27288 = v28416 < 526;
    }
    var v25513 = v27288;
    if (v25513) {
      var v27289 = this.cssPosition;
      v25513 = v27289 == "fixed";
    }
    var v21372 = v25513;
    if (v21372) {
      v17416 = 0;
    } else {
      var v21371;
      var v27290 = this.cssPosition;
      var v25516 = v27290 == "fixed";
      if (v25516) {
        var v27291 = this.scrollParent;
        var v25514 = v27291.scrollLeft();
        v21371 = -v25514;
      } else {
        var v25515;
        if (e$$185) {
          v25515 = 0;
        } else {
          v25515 = d$$187.scrollLeft();
        }
        v21371 = v25515;
      }
      v17416 = v21371;
    }
    var v11815 = v17416;
    var v4902 = v11814 + v11815;
    return{top:v4901, left:v4902};
  }
  function v1186(b$$295, c$$238) {
    var v11816 = !c$$238;
    if (v11816) {
      c$$238 = this.position;
    }
    var v4903;
    var v11817 = b$$295 == "absolute";
    if (v11817) {
      v4903 = 1;
    } else {
      v4903 = -1;
    }
    var d$$186 = v4903;
    var e$$184 = this.options;
    var v4904;
    var v21373 = this.cssPosition;
    var v17417 = v21373 == "absolute";
    if (v17417) {
      var v27292 = this.scrollParent;
      var v25517 = v27292[0];
      var v21374 = v25517 == document;
      var v25519 = !v21374;
      if (v25519) {
        var v27293 = a$$426.ui;
        var v28417 = this.scrollParent;
        var v27294 = v28417[0];
        var v28418 = this.offsetParent;
        var v27295 = v28418[0];
        var v25518 = v27293.contains(v27294, v27295);
        v21374 = !v25518;
      }
      v17417 = v21374;
    }
    var v11818 = v17417;
    if (v11818) {
      v4904 = this.offsetParent;
    } else {
      v4904 = this.scrollParent;
    }
    var f$$61 = v4904;
    var v11819 = f$$61[0];
    var v4905 = v11819.tagName;
    var g$$107 = /(html|body)/i.test(v4905);
    var v21375 = c$$238.top;
    var v28419 = this.offset;
    var v27296 = v28419.relative;
    var v25520 = v27296.top;
    var v21376 = v25520 * d$$186;
    var v17418 = v21375 + v21376;
    var v27297 = this.offset;
    var v25521 = v27297.parent;
    var v21377 = v25521.top;
    var v17419 = v21377 * d$$186;
    var v11820 = v17418 + v17419;
    var v17420;
    var v28420 = a$$426.browser;
    var v27298 = v28420.safari;
    if (v27298) {
      var v29141 = a$$426.browser;
      var v28421 = v29141.version;
      v27298 = v28421 < 526;
    }
    var v25522 = v27298;
    if (v25522) {
      var v27299 = this.cssPosition;
      v25522 = v27299 == "fixed";
    }
    var v21379 = v25522;
    if (v21379) {
      v17420 = 0;
    } else {
      var v25523;
      var v28422 = this.cssPosition;
      var v27302 = v28422 == "fixed";
      if (v27302) {
        var v28423 = this.scrollParent;
        var v27300 = v28423.scrollTop();
        v25523 = -v27300;
      } else {
        var v27301;
        if (g$$107) {
          v27301 = 0;
        } else {
          v27301 = f$$61.scrollTop();
        }
        v25523 = v27301;
      }
      var v21378 = v25523;
      v17420 = v21378 * d$$186;
    }
    var v11821 = v17420;
    var v4906 = v11820 - v11821;
    var v21380 = c$$238.left;
    var v28424 = this.offset;
    var v27303 = v28424.relative;
    var v25524 = v27303.left;
    var v21381 = v25524 * d$$186;
    var v17421 = v21380 + v21381;
    var v27304 = this.offset;
    var v25525 = v27304.parent;
    var v21382 = v25525.left;
    var v17422 = v21382 * d$$186;
    var v11822 = v17421 + v17422;
    var v17423;
    var v28425 = a$$426.browser;
    var v27305 = v28425.safari;
    if (v27305) {
      var v29142 = a$$426.browser;
      var v28426 = v29142.version;
      v27305 = v28426 < 526;
    }
    var v25526 = v27305;
    if (v25526) {
      var v27306 = this.cssPosition;
      v25526 = v27306 == "fixed";
    }
    var v21384 = v25526;
    if (v21384) {
      v17423 = 0;
    } else {
      var v25527;
      var v28427 = this.cssPosition;
      var v27309 = v28427 == "fixed";
      if (v27309) {
        var v28428 = this.scrollParent;
        var v27307 = v28428.scrollLeft();
        v25527 = -v27307;
      } else {
        var v27308;
        if (g$$107) {
          v27308 = 0;
        } else {
          v27308 = f$$61.scrollLeft();
        }
        v25527 = v27308;
      }
      var v21383 = v25527;
      v17423 = v21383 * d$$186;
    }
    var v11823 = v17423;
    var v4907 = v11822 - v11823;
    return{top:v4906, left:v4907};
  }
  function v1185() {
    var b$$294 = this.options;
    var v11824 = b$$294.containment;
    var v4908 = v11824 == "parent";
    if (v4908) {
      var v17424 = this.helper;
      var v11825 = v17424[0];
      b$$294.containment = v11825.parentNode;
    }
    var v17425 = b$$294.containment;
    var v11826 = v17425 == "document";
    var v17427 = !v11826;
    if (v17427) {
      var v17426 = b$$294.containment;
      v11826 = v17426 == "window";
    }
    var v4913 = v11826;
    if (v4913) {
      var v11827;
      var v21385 = b$$294.containment;
      var v17430 = v21385 == "document";
      if (v17430) {
        v11827 = 0;
      } else {
        var v25528 = a$$426(window);
        var v21386 = v25528.scrollLeft();
        var v27310 = this.offset;
        var v25529 = v27310.relative;
        var v21387 = v25529.left;
        var v17428 = v21386 - v21387;
        var v25530 = this.offset;
        var v21388 = v25530.parent;
        var v17429 = v21388.left;
        v11827 = v17428 - v17429;
      }
      var v4909 = v11827;
      var v11828;
      var v21389 = b$$294.containment;
      var v17433 = v21389 == "document";
      if (v17433) {
        v11828 = 0;
      } else {
        var v25531 = a$$426(window);
        var v21390 = v25531.scrollTop();
        var v27311 = this.offset;
        var v25532 = v27311.relative;
        var v21391 = v25532.top;
        var v17431 = v21390 - v21391;
        var v25533 = this.offset;
        var v21392 = v25533.parent;
        var v17432 = v21392.top;
        v11828 = v17431 - v17432;
      }
      var v4910 = v11828;
      var v25534;
      var v28429 = b$$294.containment;
      var v27313 = v28429 == "document";
      if (v27313) {
        v25534 = 0;
      } else {
        var v27312 = a$$426(window);
        v25534 = v27312.scrollLeft();
      }
      var v21393 = v25534;
      var v28430;
      var v29607 = b$$294.containment;
      var v29143 = v29607 == "document";
      if (v29143) {
        v28430 = document;
      } else {
        v28430 = window;
      }
      var v27314 = v28430;
      var v25535 = a$$426(v27314);
      var v21394 = v25535.width();
      var v17434 = v21393 + v21394;
      var v21395 = this.helperProportions;
      var v17435 = v21395.width;
      var v11829 = v17434 - v17435;
      var v17436 = this.margins;
      var v11830 = v17436.left;
      var v4911 = v11829 - v11830;
      var v25536;
      var v28431 = b$$294.containment;
      var v27316 = v28431 == "document";
      if (v27316) {
        v25536 = 0;
      } else {
        var v27315 = a$$426(window);
        v25536 = v27315.scrollTop();
      }
      var v21396 = v25536;
      var v29144;
      var v29906 = b$$294.containment;
      var v29608 = v29906 == "document";
      if (v29608) {
        v29144 = document;
      } else {
        v29144 = window;
      }
      var v28432 = v29144;
      var v27317 = a$$426(v28432);
      var v25537 = v27317.height();
      var v27319 = !v25537;
      if (v27319) {
        var v28433 = document.body;
        var v27318 = v28433.parentNode;
        v25537 = v27318.scrollHeight;
      }
      var v21397 = v25537;
      var v17437 = v21396 + v21397;
      var v21398 = this.helperProportions;
      var v17438 = v21398.height;
      var v11831 = v17437 - v17438;
      var v17439 = this.margins;
      var v11832 = v17439.top;
      var v4912 = v11831 - v11832;
      this.containment = [v4909, v4910, v4911, v4912];
    }
    var v21399 = b$$294.containment;
    var v17440 = /^(document|window|parent)$/.test(v21399);
    var v11833 = !v17440;
    if (v11833) {
      var v21400 = b$$294.containment;
      var v17441 = v21400.constructor;
      v11833 = v17441 != Array;
    }
    var v4918 = v11833;
    if (v4918) {
      var v4914 = b$$294.containment;
      var c$$237 = a$$426(v4914);
      var d$$185 = c$$237[0];
      var v4915 = !d$$185;
      if (v4915) {
        return;
      }
      var e$$183 = c$$237.offset();
      var v11834 = a$$426(d$$185);
      var v4916 = v11834.css("overflow");
      var f$$60 = v4916 != "hidden";
      var v27320 = a$$426(d$$185);
      var v25538 = v27320.css("borderLeftWidth");
      var v21401 = parseInt(v25538, 10);
      var v25539 = !v21401;
      if (v25539) {
        v21401 = 0;
      }
      var v17442 = v21401;
      var v27321 = a$$426(d$$185);
      var v25540 = v27321.css("paddingLeft");
      var v21402 = parseInt(v25540, 10);
      var v25541 = !v21402;
      if (v25541) {
        v21402 = 0;
      }
      var v17443 = v21402;
      var v11835 = v17442 + v17443;
      var v27322 = a$$426(d$$185);
      var v25542 = v27322.css("borderTopWidth");
      var v21403 = parseInt(v25542, 10);
      var v25543 = !v21403;
      if (v25543) {
        v21403 = 0;
      }
      var v17444 = v21403;
      var v27323 = a$$426(d$$185);
      var v25544 = v27323.css("paddingTop");
      var v21404 = parseInt(v25544, 10);
      var v25545 = !v21404;
      if (v25545) {
        v21404 = 0;
      }
      var v17445 = v21404;
      var v11836 = v17444 + v17445;
      var v29145;
      if (f$$60) {
        var v29609 = d$$185.scrollWidth;
        var v29610 = d$$185.offsetWidth;
        v29145 = Math.max(v29609, v29610);
      } else {
        v29145 = d$$185.offsetWidth;
      }
      var v28434 = v29145;
      var v29907 = a$$426(d$$185);
      var v29611 = v29907.css("borderLeftWidth");
      var v29146 = parseInt(v29611, 10);
      var v29612 = !v29146;
      if (v29612) {
        v29146 = 0;
      }
      var v28435 = v29146;
      var v27324 = v28434 - v28435;
      var v29613 = a$$426(d$$185);
      var v29147 = v29613.css("paddingRight");
      var v28436 = parseInt(v29147, 10);
      var v29148 = !v28436;
      if (v29148) {
        v28436 = 0;
      }
      var v27325 = v28436;
      var v25546 = v27324 - v27325;
      var v27326 = this.helperProportions;
      var v25547 = v27326.width;
      var v21405 = v25546 - v25547;
      var v25548 = this.margins;
      var v21406 = v25548.left;
      var v17446 = v21405 - v21406;
      var v21407 = this.margins;
      var v17447 = v21407.right;
      var v11837 = v17446 - v17447;
      var v29149;
      if (f$$60) {
        var v29614 = d$$185.scrollHeight;
        var v29615 = d$$185.offsetHeight;
        v29149 = Math.max(v29614, v29615);
      } else {
        v29149 = d$$185.offsetHeight;
      }
      var v28437 = v29149;
      var v29908 = a$$426(d$$185);
      var v29616 = v29908.css("borderTopWidth");
      var v29150 = parseInt(v29616, 10);
      var v29617 = !v29150;
      if (v29617) {
        v29150 = 0;
      }
      var v28438 = v29150;
      var v27327 = v28437 - v28438;
      var v29618 = a$$426(d$$185);
      var v29151 = v29618.css("paddingBottom");
      var v28439 = parseInt(v29151, 10);
      var v29152 = !v28439;
      if (v29152) {
        v28439 = 0;
      }
      var v27328 = v28439;
      var v25549 = v27327 - v27328;
      var v27329 = this.helperProportions;
      var v25550 = v27329.height;
      var v21408 = v25549 - v25550;
      var v25551 = this.margins;
      var v21409 = v25551.top;
      var v17448 = v21408 - v21409;
      var v21410 = this.margins;
      var v17449 = v21410.bottom;
      var v11838 = v17448 - v17449;
      this.containment = [v11835, v11836, v11837, v11838];
      this.relative_container = c$$237;
    } else {
      var v17450 = b$$294.containment;
      var v11839 = v17450.constructor;
      var v4917 = v11839 == Array;
      if (v4917) {
        this.containment = b$$294.containment;
      }
    }
    return;
  }
  function v1184() {
    var v11840 = this.helper;
    var v4919 = v11840.outerWidth();
    var v11841 = this.helper;
    var v4920 = v11841.outerHeight();
    this.helperProportions = {width:v4919, height:v4920};
    return;
  }
  function v1183() {
    var v21411 = this.element;
    var v17451 = v21411.css("marginLeft");
    var v11842 = parseInt(v17451, 10);
    var v17452 = !v11842;
    if (v17452) {
      v11842 = 0;
    }
    var v4921 = v11842;
    var v21412 = this.element;
    var v17453 = v21412.css("marginTop");
    var v11843 = parseInt(v17453, 10);
    var v17454 = !v11843;
    if (v17454) {
      v11843 = 0;
    }
    var v4922 = v11843;
    var v21413 = this.element;
    var v17455 = v21413.css("marginRight");
    var v11844 = parseInt(v17455, 10);
    var v17456 = !v11844;
    if (v17456) {
      v11844 = 0;
    }
    var v4923 = v11844;
    var v21414 = this.element;
    var v17457 = v21414.css("marginBottom");
    var v11845 = parseInt(v17457, 10);
    var v17458 = !v11845;
    if (v17458) {
      v11845 = 0;
    }
    var v4924 = v11845;
    this.margins = {left:v4921, top:v4922, right:v4923, bottom:v4924};
    return;
  }
  function v1182() {
    var v11846 = this.cssPosition;
    var v4928 = v11846 == "relative";
    if (v4928) {
      var v4925 = this.element;
      var a$$427 = v4925.position();
      var v17459 = a$$427.top;
      var v27330 = this.helper;
      var v25552 = v27330.css("top");
      var v21415 = parseInt(v25552, 10);
      var v25553 = !v21415;
      if (v25553) {
        v21415 = 0;
      }
      var v17460 = v21415;
      var v11847 = v17459 - v17460;
      var v17461 = this.scrollParent;
      var v11848 = v17461.scrollTop();
      var v4926 = v11847 + v11848;
      var v17462 = a$$427.left;
      var v27331 = this.helper;
      var v25554 = v27331.css("left");
      var v21416 = parseInt(v25554, 10);
      var v25555 = !v21416;
      if (v25555) {
        v21416 = 0;
      }
      var v17463 = v21416;
      var v11849 = v17462 - v17463;
      var v17464 = this.scrollParent;
      var v11850 = v17464.scrollLeft();
      var v4927 = v11849 + v11850;
      return{top:v4926, left:v4927};
    }
    return{top:0, left:0};
  }
  function v1181() {
    var v4929 = this.helper;
    var v31106 = v4929.offsetParent();
    this.offsetParent = v31106;
    var v4930 = this.offsetParent;
    var b$$293 = v4930.offset();
    var v21417 = this.cssPosition;
    var v17465 = v21417 == "absolute";
    if (v17465) {
      var v25556 = this.scrollParent;
      var v21418 = v25556[0];
      v17465 = v21418 != document;
    }
    var v11851 = v17465;
    if (v11851) {
      var v17466 = a$$426.ui;
      var v21419 = this.scrollParent;
      var v17467 = v21419[0];
      var v21420 = this.offsetParent;
      var v17468 = v21420[0];
      v11851 = v17466.contains(v17467, v17468);
    }
    var v4931 = v11851;
    if (v4931) {
      var v21421 = b$$293.left;
      var v25557 = this.scrollParent;
      var v21422 = v25557.scrollLeft();
      b$$293.left = v21421 + v21422;
      var v21423 = b$$293.top;
      var v25558 = this.scrollParent;
      var v21424 = v25558.scrollTop();
      b$$293.top = v21423 + v21424;
    }
    var v21425 = this.offsetParent;
    var v17469 = v21425[0];
    var v17470 = document.body;
    var v11852 = v17469 == v17470;
    var v17472 = !v11852;
    if (v17472) {
      var v27332 = this.offsetParent;
      var v25559 = v27332[0];
      var v21426 = v25559.tagName;
      if (v21426) {
        var v29153 = this.offsetParent;
        var v28440 = v29153[0];
        var v27333 = v28440.tagName;
        var v25560 = v27333.toLowerCase();
        v21426 = v25560 == "html";
      }
      var v17471 = v21426;
      if (v17471) {
        var v21427 = a$$426.browser;
        v17471 = v21427.msie;
      }
      v11852 = v17471;
    }
    var v4932 = v11852;
    if (v4932) {
      b$$293 = {top:0, left:0};
    }
    var v11853 = b$$293.top;
    var v25561 = this.offsetParent;
    var v21428 = v25561.css("borderTopWidth");
    var v17473 = parseInt(v21428, 10);
    var v21429 = !v17473;
    if (v21429) {
      v17473 = 0;
    }
    var v11854 = v17473;
    var v4933 = v11853 + v11854;
    var v11855 = b$$293.left;
    var v25562 = this.offsetParent;
    var v21430 = v25562.css("borderLeftWidth");
    var v17474 = parseInt(v21430, 10);
    var v21431 = !v17474;
    if (v21431) {
      v17474 = 0;
    }
    var v11856 = v17474;
    var v4934 = v11855 + v11856;
    return{top:v4933, left:v4934};
  }
  function v1180(b$$292) {
    var v28441 = typeof b$$292;
    var v27334 = v28441 == "string";
    if (v27334) {
      b$$292 = b$$292.split(" ");
    }
    var v27335 = a$$426.isArray(b$$292);
    if (v27335) {
      var v29154 = b$$292[0];
      var v28442 = +v29154;
      var v29619 = b$$292[1];
      var v29155 = +v29619;
      var v29620 = !v29155;
      if (v29620) {
        v29155 = 0;
      }
      var v28443 = v29155;
      b$$292 = {left:v28442, top:v28443};
    }
    var v25563 = "left" in b$$292;
    if (v25563) {
      var v28444 = this.offset;
      var v27336 = v28444.click;
      var v28445 = b$$292.left;
      var v29156 = this.margins;
      var v28446 = v29156.left;
      v27336.left = v28445 + v28446;
    }
    var v21432 = "right" in b$$292;
    if (v21432) {
      var v27337 = this.offset;
      var v25564 = v27337.click;
      var v29157 = this.helperProportions;
      var v28447 = v29157.width;
      var v28448 = b$$292.right;
      var v27338 = v28447 - v28448;
      var v28449 = this.margins;
      var v27339 = v28449.left;
      v25564.left = v27338 + v27339;
    }
    var v17475 = "top" in b$$292;
    if (v17475) {
      var v25565 = this.offset;
      var v21433 = v25565.click;
      var v25566 = b$$292.top;
      var v27340 = this.margins;
      var v25567 = v27340.top;
      v21433.top = v25566 + v25567;
    }
    var v11857 = "bottom" in b$$292;
    if (v11857) {
      var v21434 = this.offset;
      var v17476 = v21434.click;
      var v27341 = this.helperProportions;
      var v25568 = v27341.height;
      var v25569 = b$$292.bottom;
      var v21435 = v25568 - v25569;
      var v25570 = this.margins;
      var v21436 = v25570.top;
      v17476.top = v21435 + v21436;
    }
    return;
  }
  function v1179(b$$291) {
    var c$$236 = this.options;
    var v4935;
    var v17477 = c$$236.helper;
    var v11860 = a$$426.isFunction(v17477);
    if (v11860) {
      var v17478 = c$$236.helper;
      var v21437 = this.element;
      var v17479 = v21437[0];
      var v17480 = [b$$291];
      var v11858 = v17478.apply(v17479, v17480);
      v4935 = a$$426(v11858);
    } else {
      var v11859;
      var v21438 = c$$236.helper;
      var v17482 = v21438 == "clone";
      if (v17482) {
        var v21439 = this.element;
        var v17481 = v21439.clone();
        v11859 = v17481.removeAttr("id");
      } else {
        v11859 = this.element;
      }
      v4935 = v11859;
    }
    var d$$184 = v4935;
    var v21440 = d$$184.parents("body");
    var v17483 = v21440.length;
    var v21442 = !v17483;
    if (v21442) {
      var v25571;
      var v28450 = c$$236.appendTo;
      var v27343 = v28450 == "parent";
      if (v27343) {
        var v28451 = this.element;
        var v27342 = v28451[0];
        v25571 = v27342.parentNode;
      } else {
        v25571 = c$$236.appendTo;
      }
      var v21441 = v25571;
      d$$184.appendTo(v21441);
    }
    var v25572 = d$$184[0];
    var v27344 = this.element;
    var v25573 = v27344[0];
    var v21443 = v25572 != v25573;
    if (v21443) {
      var v27345 = d$$184.css("position");
      var v25574 = /(fixed|absolute)/.test(v27345);
      v21443 = !v25574;
    }
    var v17484 = v21443;
    if (v17484) {
      d$$184.css("position", "absolute");
    }
    return d$$184;
  }
  function v1178(b$$290) {
    function v1177() {
      var v11861 = b$$290.target;
      var v4936 = this == v11861;
      if (v4936) {
        c$$235 = !0;
      }
      return;
    }
    var v4937;
    var v25575 = this.options;
    var v21444 = v25575.handle;
    var v17485 = !v21444;
    var v21446 = !v17485;
    if (v21446) {
      var v28452 = this.options;
      var v27346 = v28452.handle;
      var v27347 = this.element;
      var v25576 = a$$426(v27346, v27347);
      var v21445 = v25576.length;
      v17485 = !v21445;
    }
    var v11862 = v17485;
    if (v11862) {
      v4937 = !0;
    } else {
      v4937 = !1;
    }
    var c$$235 = v4937;
    var v27348 = this.options;
    var v25577 = v27348.handle;
    var v25578 = this.element;
    var v21447 = a$$426(v25577, v25578);
    var v17486 = v21447.find("*");
    var v11863 = v17486.andSelf();
    v11863.each(v1177);
    return c$$235;
  }
  function v1176() {
    var v11864;
    var v21448 = this.helper;
    var v17487 = v21448.is(".ui-draggable-dragging");
    if (v17487) {
      v11864 = this._mouseUp({});
    } else {
      v11864 = this._clear();
    }
    v11864;
    return this;
  }
  function v1175(b$$289) {
    function v1174() {
      var v4938 = this.parentNode;
      v4938.removeChild(this);
      return;
    }
    var v17488 = a$$426("div.ui-draggable-iframeFix");
    v17488.each(v1174);
    var v21449 = a$$426.ui;
    var v17489 = v21449.ddmanager;
    if (v17489) {
      var v25579 = a$$426.ui;
      var v21450 = v25579.ddmanager;
      v21450.dragStop(this, b$$289);
    }
    var v25580 = a$$426.ui;
    var v21451 = v25580.mouse;
    var v17490 = v21451.prototype;
    var v11865 = v17490._mouseUp;
    return v11865.call(this, b$$289);
  }
  function v1173(b$$288) {
    function v1172() {
      var v11866 = f$$59._trigger("stop", b$$288);
      var v11867 = !1;
      var v4939 = v11866 !== v11867;
      if (v4939) {
        f$$59._clear();
      }
      return;
    }
    var c$$234 = !1;
    var v21452 = a$$426.ui;
    var v17491 = v21452.ddmanager;
    if (v17491) {
      var v25581 = this.options;
      var v21453 = v25581.dropBehaviour;
      v17491 = !v21453;
    }
    var v11868 = v17491;
    if (v11868) {
      var v21454 = a$$426.ui;
      var v17492 = v21454.ddmanager;
      c$$234 = v17492.drop(this, b$$288);
    }
    var v11869 = this.dropped;
    if (v11869) {
      c$$234 = this.dropped;
      this.dropped = !1;
    }
    var v4940 = this.element;
    var d$$183 = v4940[0];
    var e$$182 = !1;
    var v11870 = d$$183;
    if (v11870) {
      v11870 = d$$183 = d$$183.parentNode;
    }
    var v4942 = v11870;
    for (;v4942;) {
      var v4941 = d$$183 == document;
      if (v4941) {
        e$$182 = !0;
      }
      var v11871 = d$$183;
      if (v11871) {
        v11871 = d$$183 = d$$183.parentNode;
      }
      v4942 = v11871;
    }
    var v11872 = !e$$182;
    if (v11872) {
      var v21455 = this.options;
      var v17493 = v21455.helper;
      v11872 = v17493 === "original";
    }
    var v4943 = v11872;
    if (v4943) {
      return!1;
    }
    var v28453 = this.options;
    var v27349 = v28453.revert;
    var v25582 = v27349 == "invalid";
    if (v25582) {
      v25582 = !c$$234;
    }
    var v21456 = v25582;
    var v25584 = !v21456;
    if (v25584) {
      var v28454 = this.options;
      var v27350 = v28454.revert;
      var v25583 = v27350 == "valid";
      if (v25583) {
        v25583 = c$$234;
      }
      v21456 = v25583;
    }
    var v17494 = v21456;
    var v21459 = !v17494;
    if (v21459) {
      var v25585 = this.options;
      var v21457 = v25585.revert;
      var v21458 = !0;
      v17494 = v21457 === v21458;
    }
    var v11873 = v17494;
    var v17496 = !v11873;
    if (v17496) {
      var v25586 = this.options;
      var v21460 = v25586.revert;
      var v17495 = a$$426.isFunction(v21460);
      if (v17495) {
        var v25587 = this.options;
        var v21461 = v25587.revert;
        var v21462 = this.element;
        v17495 = v21461.call(v21462, c$$234);
      }
      v11873 = v17495;
    }
    var v4948 = v11873;
    if (v4948) {
      var f$$59 = this;
      var v11874 = this.helper;
      var v4944 = a$$426(v11874);
      var v4945 = this.originalPosition;
      var v17497 = this.options;
      var v11875 = v17497.revertDuration;
      var v4946 = parseInt(v11875, 10);
      v4944.animate(v4945, v4946, v1172);
    } else {
      var v11876 = this._trigger("stop", b$$288);
      var v11877 = !1;
      var v4947 = v11876 !== v11877;
      if (v4947) {
        this._clear();
      }
    }
    return!1;
  }
  function v1171(b$$287, c$$233) {
    var v31107 = this._generatePosition(b$$287);
    this.position = v31107;
    var v31108 = this._convertPositionTo("absolute");
    this.positionAbs = v31108;
    var v4950 = !c$$233;
    if (v4950) {
      var d$$182 = this._uiHash();
      var v11878 = this._trigger("drag", b$$287, d$$182);
      var v11879 = !1;
      var v4949 = v11878 === v11879;
      if (v4949) {
        this._mouseUp({});
        return!1;
      }
      this.position = d$$182.position;
    }
    var v21463 = this.options;
    var v17498 = v21463.axis;
    var v11880 = !v17498;
    var v17500 = !v11880;
    if (v17500) {
      var v21464 = this.options;
      var v17499 = v21464.axis;
      v11880 = v17499 != "y";
    }
    var v4952 = v11880;
    if (v4952) {
      var v17501 = this.helper;
      var v11881 = v17501[0];
      var v4951 = v11881.style;
      var v17502 = this.position;
      var v11882 = v17502.left;
      v4951.left = v11882 + "px";
    }
    var v21465 = this.options;
    var v17503 = v21465.axis;
    var v11883 = !v17503;
    var v17505 = !v11883;
    if (v17505) {
      var v21466 = this.options;
      var v17504 = v21466.axis;
      v11883 = v17504 != "x";
    }
    var v4954 = v11883;
    if (v4954) {
      var v17506 = this.helper;
      var v11884 = v17506[0];
      var v4953 = v11884.style;
      var v17507 = this.position;
      var v11885 = v17507.top;
      v4953.top = v11885 + "px";
    }
    var v17508 = a$$426.ui;
    var v11886 = v17508.ddmanager;
    if (v11886) {
      var v21467 = a$$426.ui;
      var v17509 = v21467.ddmanager;
      v17509.drag(this, b$$287);
    }
    return!1;
  }
  function v1170(b$$286) {
    var c$$232 = this.options;
    var v31109 = this._createHelper(b$$286);
    this.helper = v31109;
    var v30741 = this.helper;
    v30741.addClass("ui-draggable-dragging");
    this._cacheHelperProportions();
    var v30695 = a$$426.ui;
    var v30619 = v30695.ddmanager;
    if (v30619) {
      var v30742 = a$$426.ui;
      var v30696 = v30742.ddmanager;
      v30696.current = this;
    }
    this._cacheMargins();
    var v30351 = this.helper;
    var v31110 = v30351.css("position");
    this.cssPosition = v31110;
    var v30153 = this.helper;
    var v31111 = v30153.scrollParent();
    this.scrollParent = v31111;
    var v29909 = this.element;
    var v31112 = v29909.offset();
    this.offset = this.positionAbs = v31112;
    var v30154 = this.offset;
    var v29910 = v30154.top;
    var v30155 = this.margins;
    var v29911 = v30155.top;
    var v29621 = v29910 - v29911;
    var v30156 = this.offset;
    var v29912 = v30156.left;
    var v30157 = this.margins;
    var v29913 = v30157.left;
    var v29622 = v29912 - v29913;
    this.offset = {top:v29621, left:v29622};
    var v29158 = this.offset;
    var v30158 = b$$286.pageX;
    var v30352 = this.offset;
    var v30159 = v30352.left;
    var v29914 = v30158 - v30159;
    var v30160 = b$$286.pageY;
    var v30353 = this.offset;
    var v30161 = v30353.top;
    var v29915 = v30160 - v30161;
    var v29623 = {left:v29914, top:v29915};
    var v29624 = this._getParentOffset();
    var v29625 = this._getRelativeOffset();
    var v29159 = {click:v29623, parent:v29624, relative:v29625};
    a$$426.extend(v29158, v29159);
    var v31113 = this._generatePosition(b$$286);
    this.originalPosition = this.position = v31113;
    this.originalPageX = b$$286.pageX;
    this.originalPageY = b$$286.pageY;
    var v21468 = c$$232.cursorAt;
    if (v21468) {
      var v25588 = c$$232.cursorAt;
      this._adjustOffsetFromHelper(v25588);
    }
    var v17510 = c$$232.containment;
    if (v17510) {
      this._setContainment();
    }
    var v11887;
    var v21469 = this._trigger("start", b$$286);
    var v21470 = !1;
    var v17511 = v21469 === v21470;
    if (v17511) {
      this._clear();
      v11887 = !1;
    } else {
      this._cacheHelperProportions();
      var v29626 = a$$426.ui;
      var v29160 = v29626.ddmanager;
      if (v29160) {
        var v29627 = c$$232.dropBehaviour;
        v29160 = !v29627;
      }
      var v28455 = v29160;
      if (v28455) {
        var v29628 = a$$426.ui;
        var v29161 = v29628.ddmanager;
        v29161.prepareOffsets(this, b$$286);
      }
      var v27351 = !0;
      this._mouseDrag(b$$286, v27351);
      var v27352 = a$$426.ui;
      var v25589 = v27352.ddmanager;
      if (v25589) {
        var v28456 = a$$426.ui;
        var v27353 = v28456.ddmanager;
        v27353.dragStart(this, b$$286);
      }
      v11887 = !0;
    }
    return v11887;
  }
  function v1169(b$$285) {
    function v1168() {
      var v17512 = a$$426('<div class="ui-draggable-iframeFix" style="background: #fff;"></div>');
      var v25590 = this.offsetWidth;
      var v21471 = v25590 + "px";
      var v25591 = this.offsetHeight;
      var v21472 = v25591 + "px";
      var v17513 = {width:v21471, height:v21472, position:"absolute", opacity:"0.001", zIndex:1E3};
      var v11888 = v17512.css(v17513);
      var v17514 = a$$426(this);
      var v11889 = v17514.offset();
      var v4955 = v11888.css(v11889);
      v4955.appendTo("body");
      return;
    }
    var c$$231 = this.options;
    var v4956;
    var v21473 = this.helper;
    var v25592 = !v21473;
    if (v25592) {
      v21473 = c$$231.disabled;
    }
    var v17515 = v21473;
    var v21475 = !v17515;
    if (v21475) {
      var v25593 = b$$285.target;
      var v21474 = a$$426(v25593);
      v17515 = v21474.is(".ui-resizable-handle");
    }
    var v11890 = v17515;
    if (v11890) {
      v4956 = !1;
    } else {
      var v31114 = this._getHandle(b$$285);
      this.handle = v31114;
      var v17516;
      var v21476 = this.handle;
      if (v21476) {
        var v25594 = c$$231.iframeFix;
        if (v25594) {
          var v29162;
          var v29916 = c$$231.iframeFix;
          var v29917 = !0;
          var v29629 = v29916 === v29917;
          if (v29629) {
            v29162 = "iframe";
          } else {
            v29162 = c$$231.iframeFix;
          }
          var v28457 = v29162;
          var v27354 = a$$426(v28457);
          v27354.each(v1168);
        }
        v17516 = !0;
      } else {
        v17516 = !1;
      }
      v4956 = v17516;
    }
    return v4956;
  }
  function v1167() {
    var v17517 = this.element;
    var v11891 = v17517.data("draggable");
    var v4957 = !v11891;
    if (v4957) {
      return;
    }
    var v25595 = this.element;
    var v21477 = v25595.removeData("draggable");
    var v17518 = v21477.unbind(".draggable");
    v17518.removeClass("ui-draggable ui-draggable-dragging ui-draggable-disabled");
    this._mouseDestroy();
    return this;
  }
  function v1166() {
    var v28458 = this.options;
    var v27355 = v28458.helper;
    var v25596 = v27355 == "original";
    if (v25596) {
      var v29163 = this.element;
      var v28459 = v29163.css("position");
      var v27356 = /^(?:r|a|f)/.test(v28459);
      v25596 = !v27356;
    }
    var v21478 = v25596;
    if (v21478) {
      var v28460 = this.element;
      var v27357 = v28460[0];
      var v25597 = v27357.style;
      v25597.position = "relative";
    }
    var v25598 = this.options;
    var v21479 = v25598.addClasses;
    if (v21479) {
      var v25599 = this.element;
      v25599.addClass("ui-draggable");
    }
    var v21480 = this.options;
    var v17519 = v21480.disabled;
    if (v17519) {
      var v21481 = this.element;
      v21481.addClass("ui-draggable-disabled");
    }
    this._mouseInit();
    return;
  }
  var v29918 = a$$426.ui;
  var v29630 = v29918.mouse;
  var v30162 = !0;
  var v30163 = !1;
  var v30164 = !1;
  var v30165 = !1;
  var v30166 = !1;
  var v30167 = !1;
  var v30168 = !1;
  var v30169 = !1;
  var v30170 = !1;
  var v30171 = !1;
  var v30172 = !1;
  var v30173 = !0;
  var v30174 = !1;
  var v30175 = !1;
  var v30176 = !1;
  var v29919 = {addClasses:v30162, appendTo:"parent", axis:v30163, connectToSortable:v30164, containment:v30165, cursor:"auto", cursorAt:v30166, grid:v30167, handle:v30168, helper:"original", iframeFix:v30169, opacity:v30170, refreshPositions:v30171, revert:v30172, revertDuration:500, scope:"default", scroll:v30173, scrollSensitivity:20, scrollSpeed:20, snap:v30174, snapMode:"both", snapTolerance:20, stack:v30175, zIndex:v30176};
  var v29631 = {widgetEventPrefix:"drag", options:v29919, _create:v1166, destroy:v1167, _mouseCapture:v1169, _mouseStart:v1170, _mouseDrag:v1171, _mouseStop:v1173, _mouseUp:v1175, cancel:v1176, _getHandle:v1178, _createHelper:v1179, _adjustOffsetFromHelper:v1180, _getParentOffset:v1181, _getRelativeOffset:v1182, _cacheMargins:v1183, _cacheHelperProportions:v1184, _setContainment:v1185, _convertPositionTo:v1186, _generatePosition:v1187, _clear:v1188, _trigger:v1189, plugins:{}, _uiHash:v1190};
  a$$426.widget("ui.draggable", v29630, v29631);
  var v29920 = a$$426.ui;
  var v29632 = v29920.draggable;
  var v29633 = {version:"1.8.24"};
  a$$426.extend(v29632, v29633);
  var v29634 = a$$426.ui;
  var v29164 = v29634.plugin;
  var v29165 = {start:v1192, stop:v1194, drag:v1197};
  v29164.add("draggable", "connectToSortable", v29165);
  var v29166 = a$$426.ui;
  var v28461 = v29166.plugin;
  var v28462 = {start:v1198, stop:v1199};
  v28461.add("draggable", "cursor", v28462);
  var v28463 = a$$426.ui;
  var v27358 = v28463.plugin;
  var v27359 = {start:v1200, stop:v1201};
  v27358.add("draggable", "opacity", v27359);
  var v27360 = a$$426.ui;
  var v25600 = v27360.plugin;
  var v25601 = {start:v1202, drag:v1203};
  v25600.add("draggable", "scroll", v25601);
  var v25602 = a$$426.ui;
  var v21482 = v25602.plugin;
  var v21483 = {start:v1205, drag:v1206};
  v21482.add("draggable", "snap", v21483);
  var v21484 = a$$426.ui;
  var v17520 = v21484.plugin;
  var v17521 = {start:v1209};
  v17520.add("draggable", "stack", v17521);
  var v17522 = a$$426.ui;
  var v11892 = v17522.plugin;
  var v11893 = {start:v1210, stop:v1211};
  v11892.add("draggable", "zIndex", v11893);
  return;
}
function v1165(a$$415, b$$279) {
  function v1164(a$$425) {
    return!0;
  }
  function v1163(a$$424) {
    return;
  }
  function v1162(a$$423) {
    return;
  }
  function v1161(a$$422) {
    return;
  }
  function v1160(a$$421) {
    return this.mouseDelayMet;
  }
  function v1159(a$$420) {
    var v25603 = this._mouseDownEvent;
    var v21485 = v25603.pageX;
    var v21486 = a$$420.pageX;
    var v17523 = v21485 - v21486;
    var v11894 = Math.abs(v17523);
    var v25604 = this._mouseDownEvent;
    var v21487 = v25604.pageY;
    var v21488 = a$$420.pageY;
    var v17524 = v21487 - v21488;
    var v11895 = Math.abs(v17524);
    var v4958 = Math.max(v11894, v11895);
    var v11896 = this.options;
    var v4959 = v11896.distance;
    return v4958 >= v4959;
  }
  function v1158(b$$283) {
    var v21489 = a$$415(document);
    var v25605 = this.widgetName;
    var v21490 = "mousemove." + v25605;
    var v21491 = this._mouseMoveDelegate;
    var v17525 = v21489.unbind(v21490, v21491);
    var v21492 = this.widgetName;
    var v17526 = "mouseup." + v21492;
    var v17527 = this._mouseUpDelegate;
    v17525.unbind(v17526, v17527);
    var v17528 = this._mouseStarted;
    if (v17528) {
      this._mouseStarted = !1;
      var v28464 = b$$283.target;
      var v29167 = this._mouseDownEvent;
      var v28465 = v29167.target;
      var v27361 = v28464 == v28465;
      if (v27361) {
        var v28466 = b$$283.target;
        var v29168 = this.widgetName;
        var v28467 = v29168 + ".preventClickEvent";
        var v28468 = !0;
        a$$415.data(v28466, v28467, v28468);
      }
      this._mouseStop(b$$283);
    }
    return!1;
  }
  function v1157(b$$282) {
    var v4960;
    var v27362 = a$$415.browser;
    var v25606 = v27362.msie;
    var v21493 = !v25606;
    var v25608 = !v21493;
    if (v25608) {
      var v25607 = document.documentMode;
      v21493 = v25607 >= 9;
    }
    var v17529 = v21493;
    var v21495 = !v17529;
    if (v21495) {
      var v25609 = b$$282.button;
      var v21494 = !v25609;
      v17529 = !v21494;
    }
    var v11898 = v17529;
    if (v11898) {
      var v11897;
      var v17530 = this._mouseStarted;
      if (v17530) {
        this._mouseDrag(b$$282);
        v11897 = b$$282.preventDefault();
      } else {
        var v25610 = this._mouseDistanceMet(b$$282);
        if (v25610) {
          v25610 = this.mouseDelayMet;
        }
        var v21496 = v25610;
        if (v21496) {
          var v28469 = this._mouseDownEvent;
          var v27363 = this._mouseStart(v28469, b$$282);
          var v27364 = !1;
          this._mouseStarted = v27363 !== v27364;
          var v27365;
          var v28470 = this._mouseStarted;
          if (v28470) {
            v27365 = this._mouseDrag(b$$282);
          } else {
            v27365 = this._mouseUp(b$$282);
          }
          v27365;
        }
        var v21497 = this._mouseStarted;
        v11897 = !v21497;
      }
      v4960 = v11897;
    } else {
      v4960 = this._mouseUp(b$$282);
    }
    return v4960;
  }
  function v1156(b$$281) {
    function v1155(a$$419) {
      return d$$181._mouseUp(a$$419);
    }
    function v1154(a$$418) {
      return d$$181._mouseMove(a$$418);
    }
    function v1153() {
      d$$181.mouseDelayMet = !0;
      return;
    }
    if (c$$229) {
      return;
    }
    var v11899 = this._mouseStarted;
    if (v11899) {
      this._mouseUp(b$$281);
    }
    this._mouseDownEvent = b$$281;
    var d$$181 = this;
    var v4961 = b$$281.which;
    var e$$181 = v4961 == 1;
    var v4962;
    var v27366 = this.options;
    var v25611 = v27366.cancel;
    var v21498 = typeof v25611;
    var v17531 = v21498 == "string";
    if (v17531) {
      var v21499 = b$$281.target;
      v17531 = v21499.nodeName;
    }
    var v11901 = v17531;
    if (v11901) {
      var v21500 = b$$281.target;
      var v17532 = a$$415(v21500);
      var v21501 = this.options;
      var v17533 = v21501.cancel;
      var v11900 = v17532.closest(v17533);
      v4962 = v11900.length;
    } else {
      v4962 = !1;
    }
    var f$$58 = v4962;
    var v17534 = !e$$181;
    var v21502 = !v17534;
    if (v21502) {
      v17534 = f$$58;
    }
    var v11902 = v17534;
    var v17536 = !v11902;
    if (v17536) {
      var v17535 = this._mouseCapture(b$$281);
      v11902 = !v17535;
    }
    var v4963 = v11902;
    if (v4963) {
      return!0;
    }
    var v17537 = this.options;
    var v11903 = v17537.delay;
    this.mouseDelayMet = !v11903;
    var v11904 = this.mouseDelayMet;
    var v17539 = !v11904;
    if (v17539) {
      var v21503 = this.options;
      var v17538 = v21503.delay;
      var v31115 = setTimeout(v1153, v17538);
      this._mouseDelayTimer = v31115;
    }
    var v11905 = this._mouseDistanceMet(b$$281);
    if (v11905) {
      v11905 = this.mouseDelayMet;
    }
    var v4967 = v11905;
    if (v4967) {
      var v4964 = this._mouseStart(b$$281);
      var v4965 = !1;
      this._mouseStarted = v4964 !== v4965;
      var v11906 = this._mouseStarted;
      var v4966 = !v11906;
      if (v4966) {
        b$$281.preventDefault();
        return!0;
      }
    }
    var v29169 = !0;
    var v29635 = b$$281.target;
    var v29921 = this.widgetName;
    var v29636 = v29921 + ".preventClickEvent";
    var v29170 = a$$415.data(v29635, v29636);
    var v28471 = v29169 === v29170;
    if (v28471) {
      var v29171 = b$$281.target;
      var v29637 = this.widgetName;
      var v29172 = v29637 + ".preventClickEvent";
      a$$415.removeData(v29171, v29172);
    }
    this._mouseMoveDelegate = v1154;
    this._mouseUpDelegate = v1155;
    var v27367 = a$$415(document);
    var v28472 = this.widgetName;
    var v27368 = "mousemove." + v28472;
    var v27369 = this._mouseMoveDelegate;
    var v25612 = v27367.bind(v27368, v27369);
    var v27370 = this.widgetName;
    var v25613 = "mouseup." + v27370;
    var v25614 = this._mouseUpDelegate;
    v25612.bind(v25613, v25614);
    b$$281.preventDefault();
    c$$229 = !0;
    return!0;
  }
  function v1152() {
    var v11907 = this.element;
    var v17540 = this.widgetName;
    var v11908 = "." + v17540;
    v11907.unbind(v11908);
    var v11909 = this._mouseMoveDelegate;
    if (v11909) {
      var v21504 = a$$415(document);
      var v25615 = this.widgetName;
      var v21505 = "mousemove." + v25615;
      var v21506 = this._mouseMoveDelegate;
      var v17541 = v21504.unbind(v21505, v21506);
      var v21507 = this.widgetName;
      var v17542 = "mouseup." + v21507;
      var v17543 = this._mouseUpDelegate;
      v17541.unbind(v17542, v17543);
    }
    return;
  }
  function v1151() {
    function v1150(c$$230) {
      var v11910 = !0;
      var v17544 = c$$230.target;
      var v21508 = b$$280.widgetName;
      var v17545 = v21508 + ".preventClickEvent";
      var v11911 = a$$415.data(v17544, v17545);
      var v4968 = v11910 === v11911;
      if (v4968) {
        var v17546 = c$$230.target;
        var v21509 = b$$280.widgetName;
        var v17547 = v21509 + ".preventClickEvent";
        a$$415.removeData(v17546, v17547);
        c$$230.stopImmediatePropagation();
        return!1;
      }
      return;
    }
    function v1149(a$$417) {
      return b$$280._mouseDown(a$$417);
    }
    var b$$280 = this;
    var v17548 = this.element;
    var v21510 = this.widgetName;
    var v17549 = "mousedown." + v21510;
    var v11912 = v17548.bind(v17549, v1149);
    var v17550 = this.widgetName;
    var v11913 = "click." + v17550;
    v11912.bind(v11913, v1150);
    this.started = !1;
    return;
  }
  function v1148(a$$416) {
    c$$229 = !1;
    return;
  }
  var c$$229 = !1;
  var v11914 = a$$415(document);
  v11914.mouseup(v1148);
  var v17551 = {cancel:":input,option", distance:1, delay:0};
  var v11915 = {options:v17551, _mouseInit:v1151, _mouseDestroy:v1152, _mouseDown:v1156, _mouseMove:v1157, _mouseUp:v1158, _mouseDistanceMet:v1159, _mouseDelayMet:v1160, _mouseStart:v1161, _mouseDrag:v1162, _mouseStop:v1163, _mouseCapture:v1164};
  a$$415.widget("ui.mouse", v11915);
  return;
}
function v1147(a$$410, b$$266) {
  function v1146(b$$278, c$$228, d$$180) {
    var e$$180;
    var f$$57;
    var v4969 = this.options;
    var g$$106 = v4969[b$$278];
    d$$180 = d$$180 || {};
    c$$228 = a$$410.Event(c$$228);
    var v25616;
    var v28473 = this.widgetEventPrefix;
    var v27372 = b$$278 === v28473;
    if (v27372) {
      v25616 = b$$278;
    } else {
      var v27371 = this.widgetEventPrefix;
      v25616 = v27371 + b$$278;
    }
    var v21511 = v25616;
    var v31116 = v21511.toLowerCase();
    c$$228.type = v31116;
    var v17552 = this.element;
    c$$228.target = v17552[0];
    f$$57 = c$$228.originalEvent;
    if (f$$57) {
      for (e$$180 in f$$57) {
        var v4970 = e$$180 in c$$228;
        var v11916 = !v4970;
        if (v11916) {
          c$$228[e$$180] = f$$57[e$$180];
        }
      }
    }
    var v11917 = this.element;
    v11917.trigger(c$$228, d$$180);
    var v21512 = a$$410.isFunction(g$$106);
    if (v21512) {
      var v28474 = this.element;
      var v27373 = v28474[0];
      var v25617 = g$$106.call(v27373, c$$228, d$$180);
      var v25618 = !1;
      v21512 = v25617 === v25618;
    }
    var v17553 = v21512;
    var v21513 = !v17553;
    if (v21513) {
      v17553 = c$$228.isDefaultPrevented();
    }
    var v11918 = v17553;
    return!v11918;
  }
  function v1145() {
    var v4971 = !0;
    return this._setOption("disabled", v4971);
  }
  function v1144() {
    var v4972 = !1;
    return this._setOption("disabled", v4972);
  }
  function v1143(a$$414, b$$277) {
    var v17554 = this.options;
    v17554[a$$414] = b$$277;
    var v17555 = a$$414 === "disabled";
    if (v17555) {
      var v25619 = this.widget();
      var v27374;
      if (b$$277) {
        v27374 = "addClass";
      } else {
        v27374 = "removeClass";
      }
      var v25620 = v27374;
      var v29173 = this.widgetBaseClass;
      var v28475 = v29173 + "-disabled";
      var v27375 = v28475 + " ";
      var v25621 = v27375 + "ui-state-disabled";
      var v21514 = v25619[v25620](v25621);
      v21514.attr("aria-disabled", b$$277);
    }
    return this;
  }
  function v1142(b$$275) {
    function v1141(a$$413, b$$276) {
      c$$227._setOption(a$$413, b$$276);
      return;
    }
    var c$$227 = this;
    a$$410.each(b$$275, v1141);
    return this;
  }
  function v1140(c$$226, d$$179) {
    var e$$179 = c$$226;
    var v11919 = arguments.length;
    var v4974 = v11919 === 0;
    if (v4974) {
      var v4973 = this.options;
      return a$$410.extend({}, v4973);
    }
    var v11920 = typeof c$$226;
    var v4977 = v11920 == "string";
    if (v4977) {
      var v4976 = d$$179 === b$$266;
      if (v4976) {
        var v4975 = this.options;
        return v4975[c$$226];
      }
      e$$179 = {};
      e$$179[c$$226] = d$$179;
    }
    this._setOptions(e$$179);
    return this;
  }
  function v1139() {
    return this.element;
  }
  function v1138() {
    var v17556 = this.element;
    var v21515 = this.widgetName;
    var v17557 = "." + v21515;
    var v11921 = v17556.unbind(v17557);
    var v11922 = this.widgetName;
    v11921.removeData(v11922);
    var v21516 = this.widget();
    var v25622 = this.widgetName;
    var v21517 = "." + v25622;
    var v17558 = v21516.unbind(v21517);
    var v11923 = v17558.removeAttr("aria-disabled");
    var v21518 = this.widgetBaseClass;
    var v17559 = v21518 + "-disabled ";
    var v11924 = v17559 + "ui-state-disabled";
    v11923.removeClass(v11924);
    return;
  }
  function v1137() {
    return;
  }
  function v1136() {
    return;
  }
  function v1135() {
    var v4978 = a$$410.metadata;
    if (v4978) {
      var v17560 = a$$410.metadata;
      var v21519 = this.element;
      var v17561 = v21519[0];
      var v11925 = v17560.get(v17561);
      var v11926 = this.widgetName;
      v4978 = v11925[v11926];
    }
    return v4978;
  }
  function v1134(b$$274, c$$225) {
    function v1133() {
      d$$178.destroy();
      return;
    }
    var v17562 = this.widgetName;
    a$$410.data(c$$225, v17562, this);
    var v31117 = a$$410(c$$225);
    this.element = v31117;
    var v11927 = !0;
    var v11928 = this.options;
    var v11929 = this._getCreateOptions();
    var v31118 = a$$410.extend(v11927, {}, v11928, v11929, b$$274);
    this.options = v31118;
    var d$$178 = this;
    var v21520 = this.element;
    var v25623 = this.widgetName;
    var v21521 = "remove." + v25623;
    v21520.bind(v21521, v1133);
    this._create();
    this._trigger("create");
    this._init();
    return;
  }
  function v1132(a$$412, b$$273) {
    var v4979 = arguments.length;
    if (v4979) {
      this._createWidget(a$$412, b$$273);
    }
    return;
  }
  function v1131(c$$224, d$$176) {
    function v1130(e$$178) {
      function v1129() {
        var b$$272 = a$$410.data(this, c$$224);
        var v4980;
        if (b$$272) {
          var v17563 = e$$178 || {};
          var v11930 = b$$272.option(v17563);
          v4980 = v11930._init();
        } else {
          var v11931 = new d$$176(e$$178, this);
          v4980 = a$$410.data(this, c$$224, v11931);
        }
        v4980;
        return;
      }
      function v1128() {
        var d$$177 = a$$410.data(this, c$$224);
        var v4981;
        var v17564 = d$$177;
        if (v17564) {
          var v21522 = d$$177[e$$178];
          v17564 = a$$410.isFunction(v21522);
        }
        var v11933 = v17564;
        if (v11933) {
          var v11932 = d$$177[e$$178];
          v4981 = v11932.apply(d$$177, g$$105);
        } else {
          v4981 = d$$177;
        }
        var f$$56 = v4981;
        var v11934 = f$$56 !== d$$177;
        if (v11934) {
          v11934 = f$$56 !== b$$266;
        }
        var v4982 = v11934;
        if (v4982) {
          h$$86 = f$$56;
          return!1;
        }
        return;
      }
      var v4983 = typeof e$$178;
      var f$$55 = v4983 == "string";
      var v11935 = Array.prototype;
      var v4984 = v11935.slice;
      var g$$105 = v4984.call(arguments, 1);
      var h$$86 = this;
      var v11936;
      var v21523 = !f$$55;
      if (v21523) {
        v21523 = g$$105.length;
      }
      var v17567 = v21523;
      if (v17567) {
        var v17565 = a$$410.extend;
        var v25624 = !0;
        var v21524 = [v25624, e$$178];
        var v17566 = v21524.concat(g$$105);
        v11936 = v17565.apply(null, v17566);
      } else {
        v11936 = e$$178;
      }
      e$$178 = v11936;
      var v11937;
      var v21525 = f$$55;
      if (v21525) {
        var v25625 = e$$178.charAt(0);
        v21525 = v25625 === "_";
      }
      var v17568 = v21525;
      if (v17568) {
        v11937 = h$$86;
      } else {
        var v21526;
        if (f$$55) {
          v21526 = this.each(v1128);
        } else {
          v21526 = this.each(v1129);
        }
        v21526;
        v11937 = h$$86;
      }
      return v11937;
    }
    var v4985 = a$$410.fn;
    v4985[c$$224] = v1130;
    return;
  }
  function v1127(b$$270, c$$222, d$$175) {
    function v1126(a$$411, b$$271) {
      var v4986 = arguments.length;
      if (v4986) {
        this._createWidget(a$$411, b$$271);
      }
      return;
    }
    function v1125(c$$223) {
      var v11938 = a$$410.data(c$$223, b$$270);
      var v4987 = !v11938;
      return!v4987;
    }
    var v4988 = b$$270.split(".");
    var e$$177 = v4988[0];
    var f$$54;
    var v27376 = b$$270.split(".");
    b$$270 = v27376[1];
    var v27377 = e$$177 + "-";
    f$$54 = v27377 + b$$270;
    var v27378 = !d$$175;
    if (v27378) {
      d$$175 = c$$222;
      c$$222 = a$$410.Widget;
    }
    var v25626 = a$$410.expr;
    var v21527 = v25626[":"];
    v21527[f$$54] = v1125;
    var v17569 = a$$410[e$$177];
    var v21528 = !v17569;
    if (v21528) {
      v17569 = {};
    }
    a$$410[e$$177] = v17569;
    var v11939 = a$$410[e$$177];
    v11939[b$$270] = v1126;
    var g$$104 = new c$$222;
    var v17570 = g$$104;
    var v21529 = !0;
    var v21530 = g$$104.options;
    var v31119 = a$$410.extend(v21529, {}, v21530);
    v17570.options = v31119;
    var v21531 = a$$410[e$$177];
    var v17571 = v21531[b$$270];
    var v21532 = !0;
    var v29638 = a$$410[e$$177];
    var v29174 = v29638[b$$270];
    var v28476 = v29174.prototype;
    var v27379 = v28476.widgetEventPrefix;
    var v28477 = !v27379;
    if (v28477) {
      v27379 = b$$270;
    }
    var v25627 = v27379;
    var v21533 = {namespace:e$$177, widgetName:b$$270, widgetEventPrefix:v25627, widgetBaseClass:f$$54};
    var v31120 = a$$410.extend(v21532, g$$104, v21533, d$$175);
    v17571.prototype = v31120;
    var v11940 = a$$410.widget;
    var v17572 = a$$410[e$$177];
    var v11941 = v17572[b$$270];
    v11940.bridge(b$$270, v11941);
    return;
  }
  function v1124(b$$268, c$$221) {
    function v1123() {
      function v1122() {
        try {
          var v4989 = a$$410(this);
          v4989.triggerHandler("remove");
        } catch (b$$269) {
        }
        return;
      }
      var v17574 = !c$$221;
      if (v17574) {
        var v21534 = !b$$268;
        var v25629 = !v21534;
        if (v25629) {
          var v27380 = [this];
          var v25628 = a$$410.filter(b$$268, v27380);
          v21534 = v25628.length;
        }
        var v17573 = v21534;
        if (v17573) {
          var v25630 = a$$410("*", this);
          var v25631 = [this];
          var v21535 = v25630.add(v25631);
          v21535.each(v1122);
        }
      }
      var v11942 = a$$410(this);
      return d$$173.call(v11942, b$$268, c$$221);
    }
    return this.each(v1123);
  }
  function v1121(b$$267) {
    var d$$174 = 0;
    var e$$176;
    var v11943 = e$$176 = b$$267[d$$174];
    var v4991 = v11943 != null;
    for (;v4991;) {
      try {
        var v4990 = a$$410(e$$176);
        v4990.triggerHandler("remove");
      } catch (f$$53) {
      }
      d$$174++;
      var v11944 = e$$176 = b$$267[d$$174];
      v4991 = v11944 != null;
    }
    c$$220(b$$267);
    return;
  }
  var v4994 = a$$410.cleanData;
  if (v4994) {
    var c$$220 = a$$410.cleanData;
    a$$410.cleanData = v1121;
  } else {
    var v4992 = a$$410.fn;
    var d$$173 = v4992.remove;
    var v4993 = a$$410.fn;
    v4993.remove = v1124;
  }
  a$$410.widget = v1127;
  var v21536 = a$$410.widget;
  v21536.bridge = v1131;
  a$$410.Widget = v1132;
  var v11945 = a$$410.Widget;
  var v21537 = !1;
  var v17575 = {disabled:v21537};
  v11945.prototype = {widgetName:"widget", widgetEventPrefix:"", options:v17575, _createWidget:v1134, _getCreateOptions:v1135, _create:v1136, _init:v1137, destroy:v1138, widget:v1139, option:v1140, _setOptions:v1142, _setOption:v1143, enable:v1144, disable:v1145, _trigger:v1146};
  return;
}
function v1120(a$$405, b$$248) {
  function v1119(b$$265, c$$219, d$$172, e$$175, f$$52, g$$103) {
    var v11946 = a$$405.ui;
    var v4995 = v11946.isOverAxis(b$$265, d$$172, f$$52);
    if (v4995) {
      var v11947 = a$$405.ui;
      v4995 = v11947.isOverAxis(c$$219, e$$175, g$$103);
    }
    return v4995;
  }
  function v1118(a$$409, b$$264, c$$218) {
    var v4996 = a$$409 > b$$264;
    if (v4996) {
      var v11948 = b$$264 + c$$218;
      v4996 = a$$409 < v11948;
    }
    return v4996;
  }
  function v1117(b$$263, c$$217) {
    var v17576 = a$$405(b$$263);
    var v11949 = v17576.css("overflow");
    var v4997 = v11949 === "hidden";
    if (v4997) {
      return!1;
    }
    var v4998;
    var v17577 = c$$217;
    if (v17577) {
      v17577 = c$$217 === "left";
    }
    var v11950 = v17577;
    if (v11950) {
      v4998 = "scrollLeft";
    } else {
      v4998 = "scrollTop";
    }
    var d$$171 = v4998;
    var e$$174 = !1;
    var v4999;
    var v17578 = b$$263[d$$171];
    var v11951 = v17578 > 0;
    if (v11951) {
      v4999 = !0;
    } else {
      b$$263[d$$171] = 1;
      var v25632 = b$$263[d$$171];
      e$$174 = v25632 > 0;
      b$$263[d$$171] = 0;
      v4999 = e$$174;
    }
    return v4999;
  }
  function v1116(a$$408, b$$262) {
    var v5000;
    var v11954 = document.compareDocumentPosition;
    if (v11954) {
      var v11952 = a$$408.compareDocumentPosition(b$$262);
      v5000 = v11952 & 16;
    } else {
      var v11953 = a$$408 !== b$$262;
      if (v11953) {
        v11953 = a$$408.contains(b$$262);
      }
      v5000 = v11953;
    }
    return v5000;
  }
  function v1115(a$$407, b$$261, c$$216) {
    var v5001 = a$$407.plugins;
    var d$$170 = v5001[b$$261];
    var v11955 = !d$$170;
    var v17580 = !v11955;
    if (v17580) {
      var v25633 = a$$407.element;
      var v21538 = v25633[0];
      var v17579 = v21538.parentNode;
      v11955 = !v17579;
    }
    var v5002 = v11955;
    if (v5002) {
      return;
    }
    var e$$173 = 0;
    var v11956 = d$$170.length;
    var v5004 = e$$173 < v11956;
    for (;v5004;) {
      var v11957 = a$$407.options;
      var v17581 = d$$170[e$$173];
      var v11958 = v17581[0];
      var v5003 = v11957[v11958];
      if (v5003) {
        var v17582 = d$$170[e$$173];
        var v11959 = v17582[1];
        var v11960 = a$$407.element;
        v11959.apply(v11960, c$$216);
      }
      e$$173++;
      var v11961 = d$$170.length;
      v5004 = e$$173 < v11961;
    }
    return;
  }
  function v1114(b$$260, c$$215, d$$169) {
    var v11962 = a$$405.ui;
    var v5005 = v11962[b$$260];
    var e$$172 = v5005.prototype;
    var f$$51;
    for (f$$51 in d$$169) {
      var v11963 = e$$172.plugins;
      var v21539 = e$$172.plugins;
      var v17583 = v21539[f$$51];
      var v21540 = !v17583;
      if (v21540) {
        v17583 = [];
      }
      v11963[f$$51] = v17583;
      var v17584 = e$$172.plugins;
      var v11964 = v17584[f$$51];
      var v17585 = d$$169[f$$51];
      var v11965 = [c$$215, v17585];
      v11964.push(v11965);
    }
    return;
  }
  function v1113() {
    var b$$259 = document.body;
    var v5006 = c$$214 = document.createElement("div");
    var c$$214 = b$$259.appendChild(v5006);
    c$$214.offsetHeight;
    var v25634 = c$$214.style;
    var v25635 = {minHeight:"100px", height:"auto", padding:0, borderWidth:0};
    a$$405.extend(v25634, v25635);
    var v21541 = a$$405.support;
    var v25636 = c$$214.offsetHeight;
    v21541.minHeight = v25636 === 100;
    var v17586 = a$$405.support;
    v17586.selectstart = "onselectstart" in c$$214;
    var v17587 = b$$259.removeChild(c$$214);
    var v11966 = v17587.style;
    v11966.display = "none";
    return;
  }
  function v1112(b$$258) {
    var d$$168 = a$$405.attr(b$$258, "tabindex");
    var e$$171 = isNaN(d$$168);
    var v11967 = e$$171;
    var v17588 = !v11967;
    if (v17588) {
      v11967 = d$$168 >= 0;
    }
    var v5007 = v11967;
    if (v5007) {
      var v11968 = !e$$171;
      v5007 = c$$204(b$$258, v11968);
    }
    return v5007;
  }
  function v1111(b$$257) {
    var v17589 = a$$405.attr(b$$257, "tabindex");
    var v11969 = isNaN(v17589);
    var v5008 = !v11969;
    return c$$204(b$$257, v5008);
  }
  function v1110(b$$256, c$$213, d$$167) {
    var v17590 = d$$167[3];
    var v11970 = a$$405.data(b$$256, v17590);
    var v5009 = !v11970;
    return!v5009;
  }
  function v1109(b$$255) {
    function v1108(c$$212) {
      var v11971 = a$$405.data(c$$212, b$$255);
      var v5010 = !v11971;
      return!v5010;
    }
    return v1108;
  }
  function v1107(c$$208, d$$165) {
    function v1106(b$$254, c$$211) {
      function v1105() {
        var v5011 = a$$405(this);
        var v17591 = !0;
        var v11972 = h$$85(this, b$$254, v17591, c$$211);
        var v5012 = v11972 + "px";
        v5011.css(f$$49, v5012);
        return;
      }
      var v5013;
      var v17592 = typeof b$$254;
      var v11974 = v17592 != "number";
      if (v11974) {
        var v17593 = "outer" + d$$165;
        var v11973 = g$$102[v17593];
        v5013 = v11973.call(this, b$$254);
      } else {
        v5013 = this.each(v1105);
      }
      return v5013;
    }
    function v1104(c$$210) {
      function v1103() {
        var v5014 = a$$405(this);
        var v11975 = h$$85(this, c$$210);
        var v5015 = v11975 + "px";
        v5014.css(f$$49, v5015);
        return;
      }
      var v5016;
      var v11977 = c$$210 === b$$248;
      if (v11977) {
        var v17594 = "inner" + d$$165;
        var v11976 = g$$102[v17594];
        v5016 = v11976.call(this);
      } else {
        v5016 = this.each(v1103);
      }
      return v5016;
    }
    function h$$85(b$$253, c$$209, d$$166, f$$50) {
      function v1102() {
        var v21542 = c$$209;
        var v28478 = "padding" + this;
        var v28479 = !0;
        var v27381 = a$$405.curCSS(b$$253, v28478, v28479);
        var v25637 = parseFloat(v27381);
        var v27382 = !v25637;
        if (v27382) {
          v25637 = 0;
        }
        var v21543 = v25637;
        c$$209 = v21542 - v21543;
        if (d$$166) {
          var v25638 = c$$209;
          var v29639 = "border" + this;
          var v29175 = v29639 + "Width";
          var v29176 = !0;
          var v28480 = a$$405.curCSS(b$$253, v29175, v29176);
          var v27383 = parseFloat(v28480);
          var v28481 = !v27383;
          if (v28481) {
            v27383 = 0;
          }
          var v25639 = v27383;
          c$$209 = v25638 - v25639;
        }
        if (f$$50) {
          var v21544 = c$$209;
          var v28482 = "margin" + this;
          var v28483 = !0;
          var v27384 = a$$405.curCSS(b$$253, v28482, v28483);
          var v25640 = parseFloat(v27384);
          var v27385 = !v25640;
          if (v27385) {
            v25640 = 0;
          }
          var v21545 = v25640;
          c$$209 = v21544 - v21545;
        }
        return;
      }
      a$$405.each(e$$170, v1102);
      return c$$209;
    }
    var v5017;
    var v11978 = d$$165 === "Width";
    if (v11978) {
      v5017 = ["Left", "Right"];
    } else {
      v5017 = ["Top", "Bottom"];
    }
    var e$$170 = v5017;
    var f$$49 = d$$165.toLowerCase();
    var v11979 = a$$405.fn;
    var v5018 = v11979.innerWidth;
    var v11980 = a$$405.fn;
    var v5019 = v11980.innerHeight;
    var v11981 = a$$405.fn;
    var v5020 = v11981.outerWidth;
    var v11982 = a$$405.fn;
    var v5021 = v11982.outerHeight;
    var g$$102 = {innerWidth:v5018, innerHeight:v5019, outerWidth:v5020, outerHeight:v5021};
    var v11983 = a$$405.fn;
    var v11984 = "inner" + d$$165;
    v11983[v11984] = v1104;
    var v11985 = a$$405.fn;
    var v11986 = "outer" + d$$165;
    v11985[v11986] = v1106;
    return;
  }
  function v1101() {
    return this.unbind(".ui-disableSelection");
  }
  function v1100() {
    function v1099(a$$406) {
      a$$406.preventDefault();
      return;
    }
    var v17595;
    var v25641 = a$$405.support;
    var v21546 = v25641.selectstart;
    if (v21546) {
      v17595 = "selectstart";
    } else {
      v17595 = "mousedown";
    }
    var v11987 = v17595;
    var v5022 = v11987 + ".ui-disableSelection";
    return this.bind(v5022, v1099);
  }
  function v1098(c$$207) {
    var v5023 = c$$207 !== b$$248;
    if (v5023) {
      return this.css("zIndex", c$$207);
    }
    var v5029 = this.length;
    if (v5029) {
      var v5024 = this[0];
      var d$$164 = a$$405(v5024);
      var e$$169;
      var f$$48;
      var v11988 = d$$164.length;
      if (v11988) {
        var v17596 = d$$164[0];
        v11988 = v17596 !== document;
      }
      var v5028 = v11988;
      for (;v5028;) {
        e$$169 = d$$164.css("position");
        var v17597 = e$$169 === "absolute";
        var v21547 = !v17597;
        if (v21547) {
          v17597 = e$$169 === "relative";
        }
        var v11989 = v17597;
        var v17598 = !v11989;
        if (v17598) {
          v11989 = e$$169 === "fixed";
        }
        var v5027 = v11989;
        if (v5027) {
          var v5025 = d$$164.css("zIndex");
          f$$48 = parseInt(v5025, 10);
          var v17599 = isNaN(f$$48);
          var v11990 = !v17599;
          if (v11990) {
            v11990 = f$$48 !== 0;
          }
          var v5026 = v11990;
          if (v5026) {
            return f$$48;
          }
        }
        d$$164 = d$$164.parent();
        var v11991 = d$$164.length;
        if (v11991) {
          var v17600 = d$$164[0];
          v11991 = v17600 !== document;
        }
        v5028 = v11991;
      }
    }
    return 0;
  }
  function v1097() {
    function v1096() {
      var v17601 = a$$405.curCSS(this, "overflow", 1);
      var v17602 = a$$405.curCSS(this, "overflow-y", 1);
      var v11992 = v17601 + v17602;
      var v11993 = a$$405.curCSS(this, "overflow-x", 1);
      var v5030 = v11992 + v11993;
      return/(auto|scroll)/.test(v5030);
    }
    function v1095() {
      var v11994 = a$$405.curCSS(this, "position", 1);
      var v5031 = /(relative|absolute|fixed)/.test(v11994);
      if (v5031) {
        var v21548 = a$$405.curCSS(this, "overflow", 1);
        var v21549 = a$$405.curCSS(this, "overflow-y", 1);
        var v17603 = v21548 + v21549;
        var v17604 = a$$405.curCSS(this, "overflow-x", 1);
        var v11995 = v17603 + v17604;
        v5031 = /(auto|scroll)/.test(v11995);
      }
      return v5031;
    }
    var b$$252;
    var v11996;
    var v27386 = a$$405.browser;
    var v25642 = v27386.msie;
    if (v25642) {
      var v27387 = this.css("position");
      v25642 = /(static|relative)/.test(v27387);
    }
    var v21550 = v25642;
    var v25644 = !v21550;
    if (v25644) {
      var v25643 = this.css("position");
      v21550 = /absolute/.test(v25643);
    }
    var v17607 = v21550;
    if (v17607) {
      var v21551 = this.parents();
      var v17605 = v21551.filter(v1095);
      v11996 = b$$252 = v17605.eq(0);
    } else {
      var v21552 = this.parents();
      var v17606 = v21552.filter(v1096);
      v11996 = b$$252 = v17606.eq(0);
    }
    v11996;
    var v11997;
    var v25645 = this.css("position");
    var v21553 = /fixed/.test(v25645);
    var v25647 = !v21553;
    if (v25647) {
      var v25646 = b$$252.length;
      v21553 = !v25646;
    }
    var v17608 = v21553;
    if (v17608) {
      v11997 = a$$405(document);
    } else {
      v11997 = b$$252;
    }
    return v11997;
  }
  function v1094(b$$251, c$$206) {
    function v1093() {
      function v1092() {
        var v11998 = a$$405(d$$163);
        v11998.focus();
        if (c$$206) {
          c$$206.call(d$$163);
        }
        return;
      }
      var d$$163 = this;
      setTimeout(v1092, b$$251);
      return;
    }
    var v5032;
    var v17609 = typeof b$$251;
    var v12000 = v17609 == "number";
    if (v12000) {
      v5032 = this.each(v1093);
    } else {
      var v11999 = this._focus;
      v5032 = v11999.apply(this, arguments);
    }
    return v5032;
  }
  function c$$204(b$$249, c$$205) {
    var v5033 = b$$249.nodeName;
    var e$$168 = v5033.toLowerCase();
    var v5035 = "area" === e$$168;
    if (v5035) {
      var f$$47 = b$$249.parentNode;
      var g$$101 = f$$47.name;
      var h$$84;
      var v5034;
      var v25648 = b$$249.href;
      var v21554 = !v25648;
      var v25649 = !v21554;
      if (v25649) {
        v21554 = !g$$101;
      }
      var v17610 = v21554;
      var v21556 = !v17610;
      if (v21556) {
        var v25650 = f$$47.nodeName;
        var v21555 = v25650.toLowerCase();
        v17610 = v21555 !== "map";
      }
      var v12001 = v17610;
      if (v12001) {
        v5034 = !1;
      } else {
        var v25651 = "img[usemap=#" + g$$101;
        var v21557 = v25651 + "]";
        var v17611 = a$$405(v21557);
        h$$84 = v17611[0];
        var v21558 = !h$$84;
        var v17612 = !v21558;
        if (v17612) {
          v17612 = d$$162(h$$84);
        }
        v5034 = v17612;
      }
      return v5034;
    }
    var v12002;
    var v17615 = /input|select|textarea|button|object/.test(e$$168);
    if (v17615) {
      var v17613 = b$$249.disabled;
      v12002 = !v17613;
    } else {
      var v17614;
      var v21560 = "a" == e$$168;
      if (v21560) {
        var v21559 = b$$249.href;
        var v25652 = !v21559;
        if (v25652) {
          v21559 = c$$205;
        }
        v17614 = v21559;
      } else {
        v17614 = c$$205;
      }
      v12002 = v17614;
    }
    var v5036 = v12002;
    if (v5036) {
      v5036 = d$$162(b$$249);
    }
    return v5036;
  }
  function d$$162(b$$250) {
    function v1091() {
      var v12003 = a$$405.curCSS(this, "visibility");
      var v5037 = v12003 === "hidden";
      var v12005 = !v5037;
      if (v12005) {
        var v17616 = a$$405.expr;
        var v12004 = v17616.filters;
        v5037 = v12004.hidden(this);
      }
      return v5037;
    }
    var v25653 = a$$405(b$$250);
    var v21561 = v25653.parents();
    var v17617 = v21561.andSelf();
    var v12006 = v17617.filter(v1091);
    var v5038 = v12006.length;
    return!v5038;
  }
  var v5039 = a$$405.ui;
  var v12007 = !v5039;
  if (v12007) {
    v5039 = {};
  }
  a$$405.ui = v5039;
  var v12008 = a$$405.ui;
  var v5040 = v12008.version;
  if (v5040) {
    return;
  }
  var v28484 = a$$405.ui;
  var v29177 = {ALT:18, BACKSPACE:8, CAPS_LOCK:20, COMMA:188, COMMAND:91, COMMAND_LEFT:91, COMMAND_RIGHT:93, CONTROL:17, DELETE:46, DOWN:40, END:35, ENTER:13, ESCAPE:27, HOME:36, INSERT:45, LEFT:37, MENU:93, NUMPAD_ADD:107, NUMPAD_DECIMAL:110, NUMPAD_DIVIDE:111, NUMPAD_ENTER:108, NUMPAD_MULTIPLY:106, NUMPAD_SUBTRACT:109, PAGE_DOWN:34, PAGE_UP:33, PERIOD:190, RIGHT:39, SHIFT:16, SPACE:32, TAB:9, UP:38, WINDOWS:91};
  var v28485 = {version:"1.8.24", keyCode:v29177};
  a$$405.extend(v28484, v28485);
  var v28486 = a$$405.fn;
  var v29922 = a$$405.fn;
  var v29640 = v29922.prop;
  var v29924 = !v29640;
  if (v29924) {
    var v29923 = a$$405.fn;
    v29640 = v29923.attr;
  }
  var v29178 = v29640;
  var v29641 = a$$405.fn;
  var v29179 = v29641.focus;
  var v28487 = {propAttr:v29178, _focus:v29179, focus:v1094, scrollParent:v1097, zIndex:v1098, disableSelection:v1100, enableSelection:v1101};
  v28486.extend(v28487);
  var v29180 = a$$405("<a>");
  var v28488 = v29180.outerWidth(1);
  var v27388 = v28488.jquery;
  var v28490 = !v27388;
  if (v28490) {
    var v28489 = ["Width", "Height"];
    a$$405.each(v28489, v1107);
  }
  var v27389 = a$$405.expr;
  var v25654 = v27389[":"];
  var v28491;
  var v29642 = a$$405.expr;
  var v29182 = v29642.createPseudo;
  if (v29182) {
    var v29181 = a$$405.expr;
    v28491 = v29181.createPseudo(v1109);
  } else {
    v28491 = v1110;
  }
  var v27390 = v28491;
  var v25655 = {data:v27390, focusable:v1111, tabbable:v1112};
  a$$405.extend(v25654, v25655);
  a$$405(v1113);
  var v17618 = a$$405.curCSS;
  var v21562 = !v17618;
  if (v21562) {
    a$$405.curCSS = a$$405.css;
  }
  var v12009 = a$$405.ui;
  var v17619 = {add:v1114, call:v1115};
  var v12010 = {plugin:v17619, contains:v1116, hasScroll:v1117, isOverAxis:v1118, isOver:v1119};
  a$$405.extend(v12009, v12010);
  return;
}
function v1090(a$$13, b$$9) {
  function v1089() {
    return f$$4;
  }
  function v1088(a$$400, c$$202) {
    function v1087(a$$403) {
      function v1086(a$$404, c$$203, h$$83) {
        var i$$147;
        var j$$63;
        var k$$41;
        var l$$53;
        var v5042 = f$$4.isWindow(a$$404);
        if (v5042) {
          i$$147 = a$$404.document;
          var v12011 = i$$147.documentElement;
          j$$63 = v12011[d$$161];
          var v21563 = f$$4.support;
          var v17620 = v21563.boxModel;
          if (v17620) {
            v17620 = j$$63;
          }
          var v12012 = v17620;
          var v17622 = !v12012;
          if (v17622) {
            var v17621 = i$$147.body;
            if (v17621) {
              var v21564 = i$$147.body;
              v17621 = v21564[d$$161];
            }
            v12012 = v17621;
          }
          var v5041 = v12012;
          var v12013 = !v5041;
          if (v12013) {
            v5041 = j$$63;
          }
          return v5041;
        }
        var v12014 = a$$404.nodeType;
        var v5048 = v12014 === 9;
        if (v5048) {
          i$$147 = a$$404.documentElement;
          var v12015 = i$$147[d$$161];
          var v12016 = i$$147[e$$167];
          var v5043 = v12015 >= v12016;
          if (v5043) {
            return i$$147[d$$161];
          }
          var v12017 = a$$404.body;
          var v5044 = v12017[e$$167];
          var v5045 = i$$147[e$$167];
          var v12018 = a$$404.body;
          var v5046 = v12018[g$$100];
          var v5047 = i$$147[g$$100];
          return Math.max(v5044, v5045, v5046, v5047);
        }
        var v5050 = h$$83 === b$$9;
        if (v5050) {
          k$$41 = f$$4.css(a$$404, c$$203);
          l$$53 = parseFloat(k$$41);
          var v5049;
          var v12019 = f$$4.isNumeric(l$$53);
          if (v12019) {
            v5049 = l$$53;
          } else {
            v5049 = k$$41;
          }
          return v5049;
        }
        var v5051 = f$$4(a$$404);
        v5051.css(c$$203, h$$83);
        return;
      }
      var v5052 = arguments.length;
      return f$$4.access(this, v1086, c$$202, a$$403, v5052, null);
    }
    function v1085(a$$402) {
      var b$$247 = this[0];
      var v5053;
      if (b$$247) {
        var v12020;
        var v17624 = b$$247.style;
        if (v17624) {
          var v25656;
          if (a$$402) {
            v25656 = "margin";
          } else {
            v25656 = "border";
          }
          var v21565 = v25656;
          var v17623 = f$$4.css(b$$247, c$$202, v21565);
          v12020 = parseFloat(v17623);
        } else {
          v12020 = this[c$$202]();
        }
        v5053 = v12020;
      } else {
        v5053 = null;
      }
      return v5053;
    }
    function v1084() {
      var a$$401 = this[0];
      var v5054;
      if (a$$401) {
        var v12021;
        var v17626 = a$$401.style;
        if (v17626) {
          var v17625 = f$$4.css(a$$401, c$$202, "padding");
          v12021 = parseFloat(v17625);
        } else {
          v12021 = this[c$$202]();
        }
        v5054 = v12021;
      } else {
        v5054 = null;
      }
      return v5054;
    }
    var d$$161 = "client" + a$$400;
    var e$$167 = "scroll" + a$$400;
    var g$$100 = "offset" + a$$400;
    var v17627 = f$$4.fn;
    var v17628 = "inner" + a$$400;
    v17627[v17628] = v1084;
    var v17629 = f$$4.fn;
    var v17630 = "outer" + a$$400;
    v17629[v17630] = v1085;
    var v12022 = f$$4.fn;
    v12022[c$$202] = v1087;
    return;
  }
  function v1083(a$$398, c$$201) {
    function v1082(e$$165) {
      function v1081(a$$399, e$$166, g$$99) {
        var h$$82 = cy(a$$399);
        var v5056 = g$$99 === b$$9;
        if (v5056) {
          var v5055;
          if (h$$82) {
            var v12023;
            var v17632 = c$$201 in h$$82;
            if (v17632) {
              v12023 = h$$82[c$$201];
            } else {
              var v25657 = f$$4.support;
              var v21566 = v25657.boxModel;
              if (v21566) {
                var v27391 = h$$82.document;
                var v25658 = v27391.documentElement;
                v21566 = v25658[e$$166];
              }
              var v17631 = v21566;
              var v21568 = !v17631;
              if (v21568) {
                var v25659 = h$$82.document;
                var v21567 = v25659.body;
                v17631 = v21567[e$$166];
              }
              v12023 = v17631;
            }
            v5055 = v12023;
          } else {
            v5055 = a$$399[e$$166];
          }
          return v5055;
        }
        var v5057;
        if (h$$82) {
          var v17633;
          if (d$$160) {
            var v21569 = f$$4(h$$82);
            v17633 = v21569.scrollLeft();
          } else {
            v17633 = g$$99;
          }
          var v12024 = v17633;
          var v17634;
          if (d$$160) {
            v17634 = g$$99;
          } else {
            var v21570 = f$$4(h$$82);
            v17634 = v21570.scrollTop();
          }
          var v12025 = v17634;
          v5057 = h$$82.scrollTo(v12024, v12025);
        } else {
          v5057 = a$$399[e$$166] = g$$99;
        }
        v5057;
        return;
      }
      var v5058 = arguments.length;
      return f$$4.access(this, v1081, a$$398, e$$165, v5058, null);
    }
    var d$$160 = /Y/.test(c$$201);
    var v5059 = f$$4.fn;
    v5059[a$$398] = v1082;
    return;
  }
  function v1080() {
    function v1079() {
      var v5060 = this.offsetParent;
      var v12026 = !v5060;
      if (v12026) {
        v5060 = c$$5.body;
      }
      var a$$397 = v5060;
      var v17635 = a$$397;
      if (v17635) {
        var v25660 = a$$397.nodeName;
        var v21571 = cx.test(v25660);
        v17635 = !v21571;
      }
      var v12027 = v17635;
      if (v12027) {
        var v17636 = f$$4.css(a$$397, "position");
        v12027 = v17636 === "static";
      }
      var v5061 = v12027;
      for (;v5061;) {
        a$$397 = a$$397.offsetParent;
        var v17637 = a$$397;
        if (v17637) {
          var v25661 = a$$397.nodeName;
          var v21572 = cx.test(v25661);
          v17637 = !v21572;
        }
        var v12028 = v17637;
        if (v12028) {
          var v17638 = f$$4.css(a$$397, "position");
          v12028 = v17638 === "static";
        }
        v5061 = v12028;
      }
      return a$$397;
    }
    return this.map(v1079);
  }
  function v1078() {
    var v12029 = this[0];
    var v5062 = !v12029;
    if (v5062) {
      return null;
    }
    var a$$396 = this[0];
    var b$$246 = this.offsetParent();
    var c$$200 = this.offset();
    var v5063;
    var v21573 = b$$246[0];
    var v17639 = v21573.nodeName;
    var v12030 = cx.test(v17639);
    if (v12030) {
      v5063 = {top:0, left:0};
    } else {
      v5063 = b$$246.offset();
    }
    var d$$159 = v5063;
    var v25662 = c$$200.top;
    var v28492 = f$$4.css(a$$396, "marginTop");
    var v27392 = parseFloat(v28492);
    var v28493 = !v27392;
    if (v28493) {
      v27392 = 0;
    }
    var v25663 = v27392;
    c$$200.top = v25662 - v25663;
    var v25664 = c$$200.left;
    var v28494 = f$$4.css(a$$396, "marginLeft");
    var v27393 = parseFloat(v28494);
    var v28495 = !v27393;
    if (v28495) {
      v27393 = 0;
    }
    var v25665 = v27393;
    c$$200.left = v25664 - v25665;
    var v21574 = d$$159.top;
    var v28496 = b$$246[0];
    var v27394 = f$$4.css(v28496, "borderTopWidth");
    var v25666 = parseFloat(v27394);
    var v27395 = !v25666;
    if (v27395) {
      v25666 = 0;
    }
    var v21575 = v25666;
    d$$159.top = v21574 + v21575;
    var v17640 = d$$159.left;
    var v27396 = b$$246[0];
    var v25667 = f$$4.css(v27396, "borderLeftWidth");
    var v21576 = parseFloat(v25667);
    var v25668 = !v21576;
    if (v25668) {
      v21576 = 0;
    }
    var v17641 = v21576;
    d$$159.left = v17640 + v17641;
    var v12031 = c$$200.top;
    var v12032 = d$$159.top;
    var v5064 = v12031 - v12032;
    var v12033 = c$$200.left;
    var v12034 = d$$159.left;
    var v5065 = v12033 - v12034;
    return{top:v5064, left:v5065};
  }
  function v1077(a$$395, b$$245, c$$199) {
    var d$$158 = f$$4.css(a$$395, "position");
    var v5066 = d$$158 === "static";
    if (v5066) {
      var v12035 = a$$395.style;
      v12035.position = "relative";
    }
    var e$$164 = f$$4(a$$395);
    var g$$98 = e$$164.offset();
    var h$$81 = f$$4.css(a$$395, "top");
    var i$$146 = f$$4.css(a$$395, "left");
    var v12036 = d$$158 === "absolute";
    var v17642 = !v12036;
    if (v17642) {
      v12036 = d$$158 === "fixed";
    }
    var v5067 = v12036;
    if (v5067) {
      var v17643 = [h$$81, i$$146];
      var v12037 = f$$4.inArray("auto", v17643);
      v5067 = v12037 > -1;
    }
    var j$$62 = v5067;
    var k$$40 = {};
    var l$$52 = {};
    var m$$27;
    var n$$78;
    var v25669;
    if (j$$62) {
      l$$52 = e$$164.position();
      m$$27 = l$$52.top;
      v25669 = n$$78 = l$$52.left;
    } else {
      var v28497 = parseFloat(h$$81);
      var v29183 = !v28497;
      if (v29183) {
        v28497 = 0;
      }
      m$$27 = v28497;
      var v28498 = parseFloat(i$$146);
      var v29184 = !v28498;
      if (v29184) {
        v28498 = 0;
      }
      v25669 = n$$78 = v28498;
    }
    v25669;
    var v25670 = f$$4.isFunction(b$$245);
    if (v25670) {
      b$$245 = b$$245.call(a$$395, c$$199, g$$98);
    }
    var v25671 = b$$245.top;
    var v21577 = v25671 != null;
    if (v21577) {
      var v27397 = b$$245.top;
      var v27398 = g$$98.top;
      var v25672 = v27397 - v27398;
      k$$40.top = v25672 + m$$27;
    }
    var v21578 = b$$245.left;
    var v17644 = v21578 != null;
    if (v17644) {
      var v25673 = b$$245.left;
      var v25674 = g$$98.left;
      var v21579 = v25673 - v25674;
      k$$40.left = v21579 + n$$78;
    }
    var v12038;
    var v17646 = "using" in b$$245;
    if (v17646) {
      var v17645 = b$$245.using;
      v12038 = v17645.call(a$$395, k$$40);
    } else {
      v12038 = e$$164.css(k$$40);
    }
    v12038;
    return;
  }
  function v1076(a$$394) {
    var b$$244 = a$$394.offsetTop;
    var c$$198 = a$$394.offsetLeft;
    var v12039 = f$$4.support;
    var v5068 = v12039.doesNotIncludeMarginInBodyOffset;
    if (v5068) {
      var v27399 = f$$4.css(a$$394, "marginTop");
      var v25675 = parseFloat(v27399);
      var v27400 = !v25675;
      if (v27400) {
        v25675 = 0;
      }
      var v21580 = v25675;
      b$$244 = b$$244 + v21580;
      var v27401 = f$$4.css(a$$394, "marginLeft");
      var v25676 = parseFloat(v27401);
      var v27402 = !v25676;
      if (v27402) {
        v25676 = 0;
      }
      var v21581 = v25676;
      c$$198 = c$$198 + v21581;
    }
    return{top:b$$244, left:c$$198};
  }
  function v1075(a$$393) {
    function v1074(b$$243) {
      var v5069 = f$$4.offset;
      v5069.setOffset(this, a$$393, b$$243);
      return;
    }
    var v5071 = arguments.length;
    if (v5071) {
      var v5070;
      var v12040 = a$$393 === b$$9;
      if (v12040) {
        v5070 = this;
      } else {
        v5070 = this.each(v1074);
      }
      return v5070;
    }
    var c$$197 = this[0];
    var v5072 = c$$197;
    if (v5072) {
      v5072 = c$$197.ownerDocument;
    }
    var d$$157 = v5072;
    var v5073 = !d$$157;
    if (v5073) {
      return null;
    }
    var v12041 = d$$157.body;
    var v5075 = c$$197 === v12041;
    if (v5075) {
      var v5074 = f$$4.offset;
      return v5074.bodyOffset(c$$197);
    }
    var v5076 = d$$157.documentElement;
    return cv(c$$197, d$$157, v5076);
  }
  function v1073(a$$392, b$$242, c$$196) {
    var d$$156;
    var e$$163 = a$$392.offsetParent;
    var g$$97 = a$$392;
    var h$$80 = b$$242.body;
    var i$$145 = b$$242.defaultView;
    var v5077;
    if (i$$145) {
      v5077 = i$$145.getComputedStyle(a$$392, null);
    } else {
      v5077 = a$$392.currentStyle;
    }
    var j$$61 = v5077;
    var k$$39 = a$$392.offsetTop;
    var l$$51 = a$$392.offsetLeft;
    var v17647 = a$$392 = a$$392.parentNode;
    if (v17647) {
      v17647 = a$$392 !== h$$80;
    }
    var v12042 = v17647;
    if (v12042) {
      v12042 = a$$392 !== c$$196;
    }
    var v5079 = v12042;
    for (;v5079;) {
      var v17648 = f$$4.support;
      var v12043 = v17648.fixedPosition;
      if (v12043) {
        var v17649 = j$$61.position;
        v12043 = v17649 === "fixed";
      }
      var v5078 = v12043;
      if (v5078) {
        break;
      }
      var v27403;
      if (i$$145) {
        v27403 = i$$145.getComputedStyle(a$$392, null);
      } else {
        v27403 = a$$392.currentStyle;
      }
      d$$156 = v27403;
      var v28499 = a$$392.scrollTop;
      k$$39 = k$$39 - v28499;
      var v27404 = a$$392.scrollLeft;
      l$$51 = l$$51 - v27404;
      var v21582 = a$$392 === e$$163;
      if (v21582) {
        var v29925 = a$$392.offsetTop;
        k$$39 = k$$39 + v29925;
        var v29926 = a$$392.offsetLeft;
        l$$51 = l$$51 + v29926;
        var v29927 = f$$4.support;
        var v29643 = v29927.doesNotAddBorder;
        if (v29643) {
          var v30354 = f$$4.support;
          var v30177 = v30354.doesAddBorderForTableAndCells;
          var v29928 = !v30177;
          var v30179 = !v29928;
          if (v30179) {
            var v30355 = a$$392.nodeName;
            var v30178 = cw.test(v30355);
            v29928 = !v30178;
          }
          v29643 = v29928;
        }
        var v29185 = v29643;
        if (v29185) {
          var v30494 = d$$156.borderTopWidth;
          var v30356 = parseFloat(v30494);
          var v30495 = !v30356;
          if (v30495) {
            v30356 = 0;
          }
          var v30180 = v30356;
          k$$39 = k$$39 + v30180;
          var v30496 = d$$156.borderLeftWidth;
          var v30357 = parseFloat(v30496);
          var v30497 = !v30357;
          if (v30497) {
            v30357 = 0;
          }
          var v30181 = v30357;
          l$$51 = l$$51 + v30181;
        }
        g$$97 = e$$163;
        e$$163 = a$$392.offsetParent;
      }
      var v25677 = f$$4.support;
      var v21583 = v25677.subtractsBorderForOverflowNotVisible;
      if (v21583) {
        var v25678 = d$$156.overflow;
        v21583 = v25678 !== "visible";
      }
      var v17650 = v21583;
      if (v17650) {
        var v29186 = d$$156.borderTopWidth;
        var v28500 = parseFloat(v29186);
        var v29187 = !v28500;
        if (v29187) {
          v28500 = 0;
        }
        var v27405 = v28500;
        k$$39 = k$$39 + v27405;
        var v29188 = d$$156.borderLeftWidth;
        var v28501 = parseFloat(v29188);
        var v29189 = !v28501;
        if (v29189) {
          v28501 = 0;
        }
        var v27406 = v28501;
        l$$51 = l$$51 + v27406;
      }
      j$$61 = d$$156;
      var v17651 = a$$392 = a$$392.parentNode;
      if (v17651) {
        v17651 = a$$392 !== h$$80;
      }
      var v12044 = v17651;
      if (v12044) {
        v12044 = a$$392 !== c$$196;
      }
      v5079 = v12044;
    }
    var v17652 = j$$61.position;
    var v12045 = v17652 === "relative";
    var v17654 = !v12045;
    if (v17654) {
      var v17653 = j$$61.position;
      v12045 = v17653 === "static";
    }
    var v5080 = v12045;
    if (v5080) {
      var v17655 = h$$80.offsetTop;
      k$$39 = k$$39 + v17655;
      var v17656 = h$$80.offsetLeft;
      l$$51 = l$$51 + v17656;
    }
    var v17657 = f$$4.support;
    var v12046 = v17657.fixedPosition;
    if (v12046) {
      var v17658 = j$$61.position;
      v12046 = v17658 === "fixed";
    }
    var v5081 = v12046;
    if (v5081) {
      var v25679 = c$$196.scrollTop;
      var v25680 = h$$80.scrollTop;
      var v21584 = Math.max(v25679, v25680);
      k$$39 = k$$39 + v21584;
      var v25681 = c$$196.scrollLeft;
      var v25682 = h$$80.scrollLeft;
      var v21585 = Math.max(v25681, v25682);
      l$$51 = l$$51 + v21585;
    }
    return{top:k$$39, left:l$$51};
  }
  function v1072(a$$391, b$$241, c$$195, d$$155) {
    try {
      d$$155 = a$$391.getBoundingClientRect();
    } catch (e$$162) {
    }
    var v12047 = !d$$155;
    var v17660 = !v12047;
    if (v17660) {
      var v17659 = f$$4.contains(c$$195, a$$391);
      v12047 = !v17659;
    }
    var v5083 = v12047;
    if (v5083) {
      var v5082;
      if (d$$155) {
        var v12048 = d$$155.top;
        var v12049 = d$$155.left;
        v5082 = {top:v12048, left:v12049};
      } else {
        v5082 = {top:0, left:0};
      }
      return v5082;
    }
    var g$$96 = b$$241.body;
    var h$$79 = cy(b$$241);
    var v12050 = c$$195.clientTop;
    var v17661 = !v12050;
    if (v17661) {
      v12050 = g$$96.clientTop;
    }
    var v5084 = v12050;
    var v12051 = !v5084;
    if (v12051) {
      v5084 = 0;
    }
    var i$$144 = v5084;
    var v12052 = c$$195.clientLeft;
    var v17662 = !v12052;
    if (v17662) {
      v12052 = g$$96.clientLeft;
    }
    var v5085 = v12052;
    var v12053 = !v5085;
    if (v12053) {
      v5085 = 0;
    }
    var j$$60 = v5085;
    var v12054 = h$$79.pageYOffset;
    var v17664 = !v12054;
    if (v17664) {
      var v21586 = f$$4.support;
      var v17663 = v21586.boxModel;
      if (v17663) {
        v17663 = c$$195.scrollTop;
      }
      v12054 = v17663;
    }
    var v5086 = v12054;
    var v12055 = !v5086;
    if (v12055) {
      v5086 = g$$96.scrollTop;
    }
    var k$$38 = v5086;
    var v12056 = h$$79.pageXOffset;
    var v17666 = !v12056;
    if (v17666) {
      var v21587 = f$$4.support;
      var v17665 = v21587.boxModel;
      if (v17665) {
        v17665 = c$$195.scrollLeft;
      }
      v12056 = v17665;
    }
    var v5087 = v12056;
    var v12057 = !v5087;
    if (v12057) {
      v5087 = g$$96.scrollLeft;
    }
    var l$$50 = v5087;
    var v12058 = d$$155.top;
    var v5088 = v12058 + k$$38;
    var m$$26 = v5088 - i$$144;
    var v12059 = d$$155.left;
    var v5089 = v12059 + l$$50;
    var n$$77 = v5089 - j$$60;
    return{top:m$$26, left:n$$77};
  }
  function v1071(a$$390) {
    function v1070(b$$240) {
      var v5090 = b$$240.elem;
      return a$$390 === v5090;
    }
    var v12060 = f$$4.timers;
    var v5091 = f$$4.grep(v12060, v1070);
    return v5091.length;
  }
  function v1069(a$$388, b$$239) {
    function v1068(a$$389) {
      var v5092 = a$$389.elem;
      var v17667 = a$$389.now;
      var v12061 = Math.max(0, v17667);
      var v12062 = a$$389.unit;
      var v5093 = v12061 + v12062;
      f$$4.style(v5092, b$$239, v5093);
      return;
    }
    var v5094 = b$$239.indexOf("margin");
    if (v5094) {
      var v17668 = f$$4.fx;
      var v12063 = v17668.step;
      v12063[b$$239] = v1068;
    }
    return;
  }
  function v1067(a$$387) {
    var v5095;
    var v21588 = a$$387.elem;
    var v17669 = v21588.style;
    if (v17669) {
      var v27407 = a$$387.elem;
      var v25683 = v27407.style;
      var v25684 = a$$387.prop;
      var v21589 = v25683[v25684];
      v17669 = v21589 != null;
    }
    var v12068 = v17669;
    if (v12068) {
      var v17670 = a$$387.elem;
      var v12064 = v17670.style;
      var v12065 = a$$387.prop;
      var v17671 = a$$387.now;
      var v17672 = a$$387.unit;
      v5095 = v12064[v12065] = v17671 + v17672;
    } else {
      var v12066 = a$$387.elem;
      var v12067 = a$$387.prop;
      v5095 = v12066[v12067] = a$$387.now;
    }
    v5095;
    return;
  }
  function v1066(a$$386) {
    var v5096 = a$$386.elem;
    var v5097 = a$$386.now;
    f$$4.style(v5096, "opacity", v5097);
    return;
  }
  function v1065() {
    clearInterval(co);
    co = null;
    return;
  }
  function v1064() {
    var a$$385;
    var b$$238 = f$$4.timers;
    var c$$194 = 0;
    var v12069 = b$$238.length;
    var v5098 = c$$194 < v12069;
    for (;v5098;) {
      a$$385 = b$$238[c$$194];
      var v21590 = a$$385();
      var v17673 = !v21590;
      if (v17673) {
        var v21591 = b$$238[c$$194];
        v17673 = v21591 === a$$385;
      }
      var v12070 = v17673;
      if (v12070) {
        var v17674 = c$$194;
        c$$194 = c$$194 - 1;
        b$$238.splice(v17674, 1);
      }
      c$$194++;
      var v12071 = b$$238.length;
      v5098 = c$$194 < v12071;
    }
    var v5099 = b$$238.length;
    var v12073 = !v5099;
    if (v12073) {
      var v12072 = f$$4.fx;
      v12072.stop();
    }
    return;
  }
  function v1063(a$$383) {
    function v1062(a$$384, b$$237) {
      var v5100 = h$$78.style;
      var v5101 = "overflow" + b$$237;
      var v12074 = i$$143.overflow;
      v5100[v5101] = v12074[a$$384];
      return;
    }
    var b$$236;
    var c$$193;
    var d$$154;
    var v5102 = cq;
    var v12075 = !v5102;
    if (v12075) {
      v5102 = cr();
    }
    var e$$161 = v5102;
    var g$$95 = !0;
    var h$$78 = this.elem;
    var i$$143 = this.options;
    var v12076 = a$$383;
    var v17676 = !v12076;
    if (v17676) {
      var v21592 = i$$143.duration;
      var v21593 = this.startTime;
      var v17675 = v21592 + v21593;
      v12076 = e$$161 >= v17675;
    }
    var v5107 = v12076;
    if (v5107) {
      this.now = this.end;
      this.pos = this.state = 1;
      this.update();
      var v12077 = i$$143.animatedProperties;
      var v12078 = this.prop;
      v12077[v12078] = !0;
      var v5104 = i$$143.animatedProperties;
      for (b$$236 in v5104) {
        var v17677 = i$$143.animatedProperties;
        var v12079 = v17677[b$$236];
        var v12080 = !0;
        var v5103 = v12079 !== v12080;
        if (v5103) {
          g$$95 = !1;
        }
      }
      if (g$$95) {
        var v21594 = i$$143.overflow;
        var v17678 = v21594 != null;
        if (v17678) {
          var v25685 = f$$4.support;
          var v21595 = v25685.shrinkWrapBlocks;
          v17678 = !v21595;
        }
        var v12081 = v17678;
        if (v12081) {
          var v17679 = ["", "X", "Y"];
          f$$4.each(v17679, v1062);
        }
        var v12082 = i$$143.hide;
        if (v12082) {
          var v17680 = f$$4(h$$78);
          v17680.hide();
        }
        var v12083 = i$$143.hide;
        var v17681 = !v12083;
        if (v17681) {
          v12083 = i$$143.show;
        }
        var v5106 = v12083;
        if (v5106) {
          var v5105 = i$$143.animatedProperties;
          for (b$$236 in v5105) {
            var v21596 = i$$143.orig;
            var v17682 = v21596[b$$236];
            f$$4.style(h$$78, b$$236, v17682);
            var v17683 = "fxshow" + b$$236;
            var v17684 = !0;
            f$$4.removeData(h$$78, v17683, v17684);
            var v12084 = "toggle" + b$$236;
            var v12085 = !0;
            f$$4.removeData(h$$78, v12084, v12085);
          }
        }
        d$$154 = i$$143.complete;
        if (d$$154) {
          i$$143.complete = !1;
          d$$154.call(h$$78);
        }
      }
      return!1;
    }
    var v12086;
    var v21597 = i$$143.duration;
    var v17685 = v21597 == Infinity;
    if (v17685) {
      v12086 = this.now = e$$161;
    } else {
      var v27408 = this.startTime;
      c$$193 = e$$161 - v27408;
      var v27409 = i$$143.duration;
      this.state = c$$193 / v27409;
      var v25686 = f$$4.easing;
      var v27410 = i$$143.animatedProperties;
      var v27411 = this.prop;
      var v25687 = v27410[v27411];
      var v25688 = this.state;
      var v25689 = i$$143.duration;
      var v31121 = v25686[v25687](v25688, c$$193, 0, 1, v25689);
      this.pos = v31121;
      var v21598 = this.start;
      var v27412 = this.end;
      var v27413 = this.start;
      var v25690 = v27412 - v27413;
      var v25691 = this.pos;
      var v21599 = v25690 * v25691;
      v12086 = this.now = v21598 + v21599;
    }
    v12086;
    this.update();
    return!0;
  }
  function v1061() {
    var v21600 = this.options;
    var v17686 = v21600.orig;
    var v17687 = this.prop;
    var v25692 = this.elem;
    var v27414 = this.prop;
    var v25693 = "fxshow" + v27414;
    var v21601 = f$$4._data(v25692, v25693);
    var v25696 = !v21601;
    if (v25696) {
      var v25694 = this.elem;
      var v25695 = this.prop;
      v21601 = f$$4.style(v25694, v25695);
    }
    v17686[v17687] = v21601;
    var v17688 = this.options;
    v17688.hide = !0;
    var v12087 = this.cur();
    this.custom(v12087, 0);
    return;
  }
  function v1060() {
    var v5108 = this.elem;
    var v12088 = this.prop;
    var v5109 = "fxshow" + v12088;
    var a$$382 = f$$4._data(v5108, v5109);
    var v25697 = this.options;
    var v21602 = v25697.orig;
    var v21603 = this.prop;
    var v25698 = a$$382;
    var v27417 = !v25698;
    if (v27417) {
      var v27415 = this.elem;
      var v27416 = this.prop;
      v25698 = f$$4.style(v27415, v27416);
    }
    v21602[v21603] = v25698;
    var v21604 = this.options;
    v21604.show = !0;
    var v17689;
    var v21608 = a$$382 !== b$$9;
    if (v21608) {
      var v21605 = this.cur();
      v17689 = this.custom(v21605, a$$382);
    } else {
      var v25699;
      var v29190 = this.prop;
      var v28502 = v29190 === "width";
      var v29192 = !v28502;
      if (v29192) {
        var v29191 = this.prop;
        v28502 = v29191 === "height";
      }
      var v27418 = v28502;
      if (v27418) {
        v25699 = 1;
      } else {
        v25699 = 0;
      }
      var v21606 = v25699;
      var v21607 = this.cur();
      v17689 = this.custom(v21606, v21607);
    }
    v17689;
    var v17690 = this.elem;
    var v12089 = f$$4(v17690);
    v12089.show();
    return;
  }
  function v1059(a$$380, c$$192, d$$153) {
    function v1058() {
      var v17691 = e$$160.elem;
      var v21609 = e$$160.prop;
      var v17692 = "fxshow" + v21609;
      var v12090 = f$$4._data(v17691, v17692);
      var v5110 = v12090 === b$$9;
      if (v5110) {
        var v12091;
        var v21610 = e$$160.options;
        var v17697 = v21610.hide;
        if (v17697) {
          var v17693 = e$$160.elem;
          var v21611 = e$$160.prop;
          var v17694 = "fxshow" + v21611;
          var v17695 = e$$160.start;
          v12091 = f$$4._data(v17693, v17694, v17695);
        } else {
          var v21612 = e$$160.options;
          var v17696 = v21612.show;
          if (v17696) {
            var v21613 = e$$160.elem;
            var v25700 = e$$160.prop;
            var v21614 = "fxshow" + v25700;
            var v21615 = e$$160.end;
            v17696 = f$$4._data(v21613, v21614, v21615);
          }
          v12091 = v17696;
        }
        v12091;
      }
      return;
    }
    function h$$77(a$$381) {
      return e$$160.step(a$$381);
    }
    var e$$160 = this;
    var g$$94 = f$$4.fx;
    var v29644 = cq;
    var v29929 = !v29644;
    if (v29929) {
      v29644 = cr();
    }
    this.startTime = v29644;
    this.end = c$$192;
    this.now = this.start = a$$380;
    this.pos = this.state = 0;
    var v28503 = d$$153;
    var v29193 = !v28503;
    if (v29193) {
      v28503 = this.unit;
    }
    var v27419 = v28503;
    var v28505 = !v27419;
    if (v28505) {
      var v28504;
      var v29645 = f$$4.cssNumber;
      var v29646 = this.prop;
      var v29194 = v29645[v29646];
      if (v29194) {
        v28504 = "";
      } else {
        v28504 = "px";
      }
      v27419 = v28504;
    }
    this.unit = v27419;
    var v25701 = this.options;
    h$$77.queue = v25701.queue;
    h$$77.elem = this.elem;
    h$$77.saveState = v1058;
    var v21616 = h$$77();
    if (v21616) {
      var v25702 = f$$4.timers;
      v21616 = v25702.push(h$$77);
    }
    var v17698 = v21616;
    if (v17698) {
      v17698 = !co;
    }
    var v12092 = v17698;
    if (v12092) {
      var v17699 = g$$94.tick;
      var v17700 = g$$94.interval;
      co = setInterval(v17699, v17700);
    }
    return;
  }
  function v1057() {
    var v21617 = this.elem;
    var v21618 = this.prop;
    var v17701 = v21617[v21618];
    var v12093 = v17701 != null;
    if (v12093) {
      var v25703 = this.elem;
      var v21619 = v25703.style;
      var v17702 = !v21619;
      var v21621 = !v17702;
      if (v21621) {
        var v27420 = this.elem;
        var v25704 = v27420.style;
        var v25705 = this.prop;
        var v21620 = v25704[v25705];
        v17702 = v21620 == null;
      }
      v12093 = v17702;
    }
    var v5113 = v12093;
    if (v5113) {
      var v5111 = this.elem;
      var v5112 = this.prop;
      return v5111[v5112];
    }
    var a$$379;
    var v5114 = this.elem;
    var v5115 = this.prop;
    var b$$235 = f$$4.css(v5114, v5115);
    var v5116;
    var v17703 = a$$379 = parseFloat(b$$235);
    var v12095 = isNaN(v17703);
    if (v12095) {
      var v12094;
      var v21622 = !b$$235;
      var v25706 = !v21622;
      if (v25706) {
        v21622 = b$$235 === "auto";
      }
      var v17704 = v21622;
      if (v17704) {
        v12094 = 0;
      } else {
        v12094 = b$$235;
      }
      v5116 = v12094;
    } else {
      v5116 = a$$379;
    }
    return v5116;
  }
  function v1056() {
    var v17705 = this.options;
    var v12096 = v17705.step;
    if (v12096) {
      var v21623 = this.options;
      var v17706 = v21623.step;
      var v17707 = this.elem;
      var v17708 = this.now;
      v17706.call(v17707, v17708, this);
    }
    var v25707 = f$$4.fx;
    var v21624 = v25707.step;
    var v21625 = this.prop;
    var v17709 = v21624[v21625];
    var v21627 = !v17709;
    if (v21627) {
      var v25708 = f$$4.fx;
      var v21626 = v25708.step;
      v17709 = v21626._default;
    }
    var v12097 = v17709;
    v12097(this);
    return;
  }
  function v1055(a$$378, b$$234, c$$191) {
    this.options = b$$234;
    this.elem = a$$378;
    this.prop = c$$191;
    var v12098 = b$$234.orig;
    var v17710 = !v12098;
    if (v17710) {
      v12098 = {};
    }
    b$$234.orig = v12098;
    return;
  }
  function v1054(a$$377) {
    var v25709 = Math.PI;
    var v21628 = a$$377 * v25709;
    var v17711 = Math.cos(v21628);
    var v12099 = -v17711;
    var v5117 = v12099 / 2;
    return v5117 + .5;
  }
  function v1053(a$$376) {
    return a$$376;
  }
  function v1052(a$$374, b$$233, c$$190) {
    function v1051(a$$375) {
      var v17712 = d$$152.old;
      var v12100 = f$$4.isFunction(v17712);
      if (v12100) {
        var v17713 = d$$152.old;
        v17713.call(this);
      }
      var v12101;
      var v17716 = d$$152.queue;
      if (v17716) {
        var v17714 = d$$152.queue;
        v12101 = f$$4.dequeue(this, v17714);
      } else {
        var v21629 = !1;
        var v17715 = a$$375 !== v21629;
        if (v17715) {
          v17715 = f$$4._unmark(this);
        }
        v12101 = v17715;
      }
      v12101;
      return;
    }
    var v5118;
    var v17717 = a$$374;
    if (v17717) {
      var v21630 = typeof a$$374;
      v17717 = v21630 == "object";
    }
    var v12104 = v17717;
    if (v12104) {
      v5118 = f$$4.extend({}, a$$374);
    } else {
      var v21631 = c$$190;
      var v25711 = !v21631;
      if (v25711) {
        var v25710 = !c$$190;
        if (v25710) {
          v25710 = b$$233;
        }
        v21631 = v25710;
      }
      var v17718 = v21631;
      var v21633 = !v17718;
      if (v21633) {
        var v21632 = f$$4.isFunction(a$$374);
        if (v21632) {
          v21632 = a$$374;
        }
        v17718 = v21632;
      }
      var v12102 = v17718;
      var v17719 = c$$190 && b$$233;
      var v21635 = !v17719;
      if (v21635) {
        var v25712 = b$$233;
        if (v25712) {
          var v27421 = f$$4.isFunction(b$$233);
          v25712 = !v27421;
        }
        var v21634 = v25712;
        if (v21634) {
          v21634 = b$$233;
        }
        v17719 = v21634;
      }
      var v12103 = v17719;
      v5118 = {complete:v12102, duration:a$$374, easing:v12103};
    }
    var d$$152 = v5118;
    var v5119;
    var v17720 = f$$4.fx;
    var v12106 = v17720.off;
    if (v12106) {
      v5119 = 0;
    } else {
      var v12105;
      var v25713 = d$$152.duration;
      var v21636 = typeof v25713;
      var v17722 = v21636 == "number";
      if (v17722) {
        v12105 = d$$152.duration;
      } else {
        var v17721;
        var v25714 = d$$152.duration;
        var v27422 = f$$4.fx;
        var v25715 = v27422.speeds;
        var v21640 = v25714 in v25715;
        if (v21640) {
          var v25716 = f$$4.fx;
          var v21637 = v25716.speeds;
          var v21638 = d$$152.duration;
          v17721 = v21637[v21638];
        } else {
          var v25717 = f$$4.fx;
          var v21639 = v25717.speeds;
          v17721 = v21639._default;
        }
        v12105 = v17721;
      }
      v5119 = v12105;
    }
    d$$152.duration = v5119;
    var v17723 = d$$152.queue;
    var v12107 = v17723 == null;
    var v17726 = !v12107;
    if (v17726) {
      var v17724 = d$$152.queue;
      var v17725 = !0;
      v12107 = v17724 === v17725;
    }
    var v5120 = v12107;
    if (v5120) {
      d$$152.queue = "fx";
    }
    d$$152.old = d$$152.complete;
    d$$152.complete = v1051;
    return d$$152;
  }
  function v1050(a$$372, b$$232) {
    function v1049(a$$373, c$$189, d$$151) {
      return this.animate(b$$232, a$$373, c$$189, d$$151);
    }
    var v5121 = f$$4.fn;
    v5121[a$$372] = v1049;
    return;
  }
  function v1048(a$$370, c$$186, d$$150) {
    function v1047() {
      var b$$230;
      var c$$187 = !1;
      var e$$158 = f$$4.timers;
      var g$$93 = f$$4._data(this);
      var v12109 = !d$$150;
      if (v12109) {
        var v12108 = !0;
        f$$4._unmark(v12108, this);
      }
      var v5124 = a$$370 == null;
      if (v5124) {
        for (b$$230 in g$$93) {
          var v17727 = g$$93[b$$230];
          if (v17727) {
            var v21641 = g$$93[b$$230];
            v17727 = v21641.stop;
          }
          var v12110 = v17727;
          if (v12110) {
            var v17728 = b$$230.indexOf(".run");
            var v21642 = b$$230.length;
            var v17729 = v21642 - 4;
            v12110 = v17728 === v17729;
          }
          var v5122 = v12110;
          if (v5122) {
            var e$$inline_63 = g$$93[b$$230];
            var v12111 = !0;
            f$$4.removeData(this, b$$230, v12111);
            e$$inline_63.stop(d$$150);
          }
        }
      } else {
        var v17730 = b$$230 = a$$370 + ".run";
        var v12112 = g$$93[v17730];
        if (v12112) {
          var v17731 = g$$93[b$$230];
          v12112 = v17731.stop;
        }
        var v5123 = v12112;
        if (v5123) {
          var e$$inline_68 = g$$93[b$$230];
          var v12113 = !0;
          f$$4.removeData(this, b$$230, v12113);
          e$$inline_68.stop(d$$150);
        }
      }
      b$$230 = e$$158.length;
      var v5126 = b$$230;
      b$$230 = b$$230 - 1;
      for (;v5126;) {
        var v21643 = e$$158[b$$230];
        var v17732 = v21643.elem;
        var v12114 = v17732 === this;
        if (v12114) {
          var v17733 = a$$370 == null;
          var v21645 = !v17733;
          if (v21645) {
            var v25718 = e$$158[b$$230];
            var v21644 = v25718.queue;
            v17733 = v21644 === a$$370;
          }
          v12114 = v17733;
        }
        var v5125 = v12114;
        if (v5125) {
          var v21646;
          if (d$$150) {
            var v25719 = !0;
            v21646 = e$$158[b$$230](v25719);
          } else {
            var v25720 = e$$158[b$$230];
            v21646 = v25720.saveState();
          }
          v21646;
          c$$187 = !0;
          e$$158.splice(b$$230, 1);
        }
        v5126 = b$$230;
        b$$230 = b$$230 - 1;
      }
      var v12115 = !d$$150;
      var v17734 = !v12115;
      if (v17734) {
        v12115 = !c$$187;
      }
      var v5127 = v12115;
      if (v5127) {
        f$$4.dequeue(this, a$$370);
      }
      return;
    }
    var v17735 = typeof a$$370;
    var v12116 = v17735 != "string";
    if (v12116) {
      d$$150 = c$$186;
      c$$186 = a$$370;
      a$$370 = b$$9;
    }
    var v17736 = c$$186;
    if (v17736) {
      var v21647 = !1;
      v17736 = a$$370 !== v21647;
    }
    var v12117 = v17736;
    if (v12117) {
      var v17737 = a$$370 || "fx";
      this.queue(v17737, []);
    }
    return this.each(v1047);
  }
  function v1046(a$$369, b$$228, c$$184, d$$148) {
    function g$$91() {
      var v12118 = e$$157.queue;
      var v12119 = !1;
      var v5128 = v12118 === v12119;
      if (v5128) {
        f$$4._mark(this);
      }
      var b$$229 = f$$4.extend({}, e$$157);
      var v5129 = this.nodeType;
      var c$$185 = v5129 === 1;
      var v5130 = c$$185;
      if (v5130) {
        var v12120 = f$$4(this);
        v5130 = v12120.is(":hidden");
      }
      var d$$149 = v5130;
      var g$$92;
      var h$$75;
      var i$$142;
      var j$$59;
      var k$$37;
      var l$$49;
      var m$$25;
      var n$$76;
      var o$$15;
      var p$$37;
      var q$$14;
      b$$229.animatedProperties = {};
      for (i$$142 in a$$369) {
        g$$92 = f$$4.camelCase(i$$142);
        var v12121 = i$$142 !== g$$92;
        if (v12121) {
          a$$369[g$$92] = a$$369[i$$142];
          delete a$$369[i$$142];
        }
        var v17738 = f$$4.cssHooks;
        var v12122 = k$$37 = v17738[g$$92];
        if (v12122) {
          v12122 = "expand" in k$$37;
        }
        var v5132 = v12122;
        if (v5132) {
          var v12123 = a$$369[g$$92];
          l$$49 = k$$37.expand(v12123);
          delete a$$369[g$$92];
          for (i$$142 in l$$49) {
            var v5131 = i$$142 in a$$369;
            var v12124 = !v5131;
            if (v12124) {
              a$$369[i$$142] = l$$49[i$$142];
            }
          }
        }
      }
      for (g$$92 in a$$369) {
        h$$75 = a$$369[g$$92];
        var v12125;
        var v17740 = f$$4.isArray(h$$75);
        if (v17740) {
          var v21648 = b$$229.animatedProperties;
          v21648[g$$92] = h$$75[1];
          v12125 = h$$75 = a$$369[g$$92] = h$$75[0];
        } else {
          var v17739 = b$$229.animatedProperties;
          var v27423 = b$$229.specialEasing;
          if (v27423) {
            var v28506 = b$$229.specialEasing;
            v27423 = v28506[g$$92];
          }
          var v25721 = v27423;
          var v27424 = !v25721;
          if (v27424) {
            v25721 = b$$229.easing;
          }
          var v21649 = v25721;
          var v25722 = !v21649;
          if (v25722) {
            v21649 = "swing";
          }
          v12125 = v17739[g$$92] = v21649;
        }
        v12125;
        var v17741 = h$$75 === "hide";
        if (v17741) {
          v17741 = d$$149;
        }
        var v12126 = v17741;
        var v17743 = !v12126;
        if (v17743) {
          var v17742 = h$$75 === "show";
          if (v17742) {
            v17742 = !d$$149;
          }
          v12126 = v17742;
        }
        var v5134 = v12126;
        if (v5134) {
          var v5133 = b$$229.complete;
          return v5133.call(this);
        }
        var v12127 = c$$185;
        if (v12127) {
          var v17744 = g$$92 === "height";
          var v21650 = !v17744;
          if (v21650) {
            v17744 = g$$92 === "width";
          }
          v12127 = v17744;
        }
        var v5135 = v12127;
        if (v5135) {
          var v21651 = this.style;
          var v17745 = v21651.overflow;
          var v21652 = this.style;
          var v17746 = v21652.overflowX;
          var v21653 = this.style;
          var v17747 = v21653.overflowY;
          b$$229.overflow = [v17745, v17746, v17747];
          var v25723 = f$$4.css(this, "display");
          var v21654 = v25723 === "inline";
          if (v21654) {
            var v25724 = f$$4.css(this, "float");
            v21654 = v25724 === "none";
          }
          var v17748 = v21654;
          if (v17748) {
            var v21655;
            var v29195 = f$$4.support;
            var v28507 = v29195.inlineBlockNeedsLayout;
            var v27425 = !v28507;
            var v28509 = !v27425;
            if (v28509) {
              var v29196 = this.nodeName;
              var v28508 = cu(v29196);
              v27425 = v28508 === "inline";
            }
            var v25727 = v27425;
            if (v25727) {
              var v25725 = this.style;
              v21655 = v25725.display = "inline-block";
            } else {
              var v25726 = this.style;
              v21655 = v25726.zoom = 1;
            }
            v21655;
          }
        }
      }
      var v12128 = b$$229.overflow;
      var v5136 = v12128 != null;
      if (v5136) {
        var v12129 = this.style;
        v12129.overflow = "hidden";
      }
      for (i$$142 in a$$369) {
        var v17749 = f$$4.fx;
        j$$59 = new v17749(this, b$$229, i$$142);
        h$$75 = a$$369[i$$142];
        var v12130;
        var v17750 = cm.test(h$$75);
        if (v17750) {
          var v25728 = "toggle" + i$$142;
          var v21656 = f$$4._data(this, v25728);
          var v25730 = !v21656;
          if (v25730) {
            var v25729;
            var v27427 = h$$75 === "toggle";
            if (v27427) {
              var v27426;
              if (d$$149) {
                v27426 = "show";
              } else {
                v27426 = "hide";
              }
              v25729 = v27426;
            } else {
              v25729 = 0;
            }
            v21656 = v25729;
          }
          q$$14 = v21656;
          var v21657;
          if (q$$14) {
            var v27428 = "toggle" + i$$142;
            var v28510;
            var v29197 = q$$14 === "show";
            if (v29197) {
              v28510 = "hide";
            } else {
              v28510 = "show";
            }
            var v27429 = v28510;
            f$$4._data(this, v27428, v27429);
            v21657 = j$$59[q$$14]();
          } else {
            v21657 = j$$59[h$$75]();
          }
          v12130 = v21657;
        } else {
          m$$25 = cn.exec(h$$75);
          n$$76 = j$$59.cur();
          var v21658;
          if (m$$25) {
            var v29647 = m$$25[2];
            o$$15 = parseFloat(v29647);
            var v29648 = m$$25[3];
            var v29931 = !v29648;
            if (v29931) {
              var v29930;
              var v30358 = f$$4.cssNumber;
              var v30182 = v30358[i$$142];
              if (v30182) {
                v29930 = "";
              } else {
                v29930 = "px";
              }
              v29648 = v29930;
            }
            p$$37 = v29648;
            var v29198 = p$$37 !== "px";
            if (v29198) {
              var v30359 = o$$15 || 1;
              var v30183 = v30359 + p$$37;
              f$$4.style(this, i$$142, v30183);
              var v30360 = o$$15 || 1;
              var v30361 = j$$59.cur();
              var v30184 = v30360 / v30361;
              n$$76 = v30184 * n$$76;
              var v29932 = n$$76 + p$$37;
              f$$4.style(this, i$$142, v29932);
            }
            var v28511 = m$$25[1];
            if (v28511) {
              var v29933;
              var v30362 = m$$25[1];
              var v30185 = v30362 === "-=";
              if (v30185) {
                v29933 = -1;
              } else {
                v29933 = 1;
              }
              var v29649 = v29933;
              var v29199 = v29649 * o$$15;
              o$$15 = v29199 + n$$76;
            }
            v21658 = j$$59.custom(n$$76, o$$15, p$$37);
          } else {
            v21658 = j$$59.custom(n$$76, h$$75, "");
          }
          v12130 = v21658;
        }
        v12130;
      }
      return!0;
    }
    var e$$157 = f$$4.speed(b$$228, c$$184, d$$148);
    var v5139 = f$$4.isEmptyObject(a$$369);
    if (v5139) {
      var v5137 = e$$157.complete;
      var v12131 = !1;
      var v5138 = [v12131];
      return this.each(v5137, v5138);
    }
    a$$369 = f$$4.extend({}, a$$369);
    var v5140;
    var v17751 = e$$157.queue;
    var v17752 = !1;
    var v12133 = v17751 === v17752;
    if (v12133) {
      v5140 = this.each(g$$91);
    } else {
      var v12132 = e$$157.queue;
      v5140 = this.queue(v12132, g$$91);
    }
    return v5140;
  }
  function v1045(a$$368, b$$227, c$$183, d$$147) {
    var v21659 = this.filter(":hidden");
    var v17753 = v21659.css("opacity", 0);
    var v12134 = v17753.show();
    var v5141 = v12134.end();
    var v5142 = {opacity:b$$227};
    return v5141.animate(v5142, a$$368, c$$183, d$$147);
  }
  function v1044(a$$367, b$$225, c$$182) {
    function v1043() {
      var v5143;
      if (d$$146) {
        v5143 = a$$367;
      } else {
        var v12135 = f$$4(this);
        v5143 = v12135.is(":hidden");
      }
      var b$$226 = v5143;
      var v5144 = f$$4(this);
      var v12136;
      if (b$$226) {
        v12136 = "show";
      } else {
        v12136 = "hide";
      }
      var v5145 = v12136;
      v5144[v5145]();
      return;
    }
    var v5146 = typeof a$$367;
    var d$$146 = v5146 == "boolean";
    var v5147;
    var v17754 = f$$4.isFunction(a$$367);
    if (v17754) {
      v17754 = f$$4.isFunction(b$$225);
    }
    var v12139 = v17754;
    if (v12139) {
      var v12137 = this._toggle;
      v5147 = v12137.apply(this, arguments);
    } else {
      var v12138;
      var v21660 = a$$367 == null;
      var v25731 = !v21660;
      if (v25731) {
        v21660 = d$$146;
      }
      var v17756 = v21660;
      if (v17756) {
        v12138 = this.each(v1043);
      } else {
        var v17755 = ct("toggle", 3);
        v12138 = this.animate(v17755, a$$367, b$$225, c$$182);
      }
      v5147 = v12138;
    }
    v5147;
    return this;
  }
  function v1042(a$$366, b$$224, c$$181) {
    var v12140 = a$$366;
    var v17757 = !v12140;
    if (v17757) {
      v12140 = a$$366 === 0;
    }
    var v5149 = v12140;
    if (v5149) {
      var v5148 = ct("hide", 3);
      return this.animate(v5148, a$$366, b$$224, c$$181);
    }
    var d$$145;
    var e$$156;
    var g$$90 = 0;
    var h$$74 = this.length;
    var v5150 = g$$90 < h$$74;
    for (;v5150;) {
      d$$145 = this[g$$90];
      var v12141 = d$$145.style;
      if (v12141) {
        e$$156 = f$$4.css(d$$145, "display");
        var v25732 = e$$156 !== "none";
        if (v25732) {
          var v27430 = f$$4._data(d$$145, "olddisplay");
          v25732 = !v27430;
        }
        var v21661 = v25732;
        if (v21661) {
          f$$4._data(d$$145, "olddisplay", e$$156);
        }
      }
      g$$90++;
      v5150 = g$$90 < h$$74;
    }
    g$$90 = 0;
    var v5152 = g$$90 < h$$74;
    for (;v5152;) {
      var v12142 = this[g$$90];
      var v5151 = v12142.style;
      if (v5151) {
        var v17758 = this[g$$90];
        var v12143 = v17758.style;
        v12143.display = "none";
      }
      g$$90++;
      v5152 = g$$90 < h$$74;
    }
    return this;
  }
  function v1041(a$$365, b$$223, c$$180) {
    var d$$144;
    var e$$155;
    var v12144 = a$$365;
    var v17759 = !v12144;
    if (v17759) {
      v12144 = a$$365 === 0;
    }
    var v5154 = v12144;
    if (v5154) {
      var v5153 = ct("show", 3);
      return this.animate(v5153, a$$365, b$$223, c$$180);
    }
    var g$$89 = 0;
    var h$$73 = this.length;
    var v5155 = g$$89 < h$$73;
    for (;v5155;) {
      d$$144 = this[g$$89];
      var v12145 = d$$144.style;
      if (v12145) {
        var v25733 = d$$144.style;
        e$$155 = v25733.display;
        var v28512 = f$$4._data(d$$144, "olddisplay");
        var v27431 = !v28512;
        if (v27431) {
          v27431 = e$$155 === "none";
        }
        var v25734 = v27431;
        if (v25734) {
          var v27432 = d$$144.style;
          e$$155 = v27432.display = "";
        }
        var v27433 = e$$155 === "";
        if (v27433) {
          var v28513 = f$$4.css(d$$144, "display");
          v27433 = v28513 === "none";
        }
        var v25735 = v27433;
        var v27435 = !v25735;
        if (v27435) {
          var v29200 = d$$144.ownerDocument;
          var v28514 = v29200.documentElement;
          var v27434 = f$$4.contains(v28514, d$$144);
          v25735 = !v27434;
        }
        var v21662 = v25735;
        if (v21662) {
          var v27436 = d$$144.nodeName;
          var v25736 = cu(v27436);
          f$$4._data(d$$144, "olddisplay", v25736);
        }
      }
      g$$89++;
      v5155 = g$$89 < h$$73;
    }
    g$$89 = 0;
    var v5160 = g$$89 < h$$73;
    for (;v5160;) {
      d$$144 = this[g$$89];
      var v5159 = d$$144.style;
      if (v5159) {
        var v5156 = d$$144.style;
        e$$155 = v5156.display;
        var v12146 = e$$155 === "";
        var v17760 = !v12146;
        if (v17760) {
          v12146 = e$$155 === "none";
        }
        var v5158 = v12146;
        if (v5158) {
          var v5157 = d$$144.style;
          var v12147 = f$$4._data(d$$144, "olddisplay");
          var v17761 = !v12147;
          if (v17761) {
            v12147 = "";
          }
          v5157.display = v12147;
        }
      }
      g$$89++;
      v5160 = g$$89 < h$$73;
    }
    return this;
  }
  function v1040(c$$179) {
    function v1039() {
      if (d$$143) {
        d$$143(0, 1);
      }
      return;
    }
    function v1038(e$$153, g$$88) {
      function v1037(a$$363, e$$154) {
        var j$$58;
        var k$$36;
        var l$$48;
        var m$$24;
        var n$$75;
        try {
          var v12148 = d$$143;
          if (v12148) {
            var v17762 = e$$154;
            var v21664 = !v17762;
            if (v21664) {
              var v21663 = h$$72.readyState;
              v17762 = v21663 === 4;
            }
            v12148 = v17762;
          }
          var v5163 = v12148;
          if (v5163) {
            d$$143 = b$$9;
            if (i$$141) {
              h$$72.onreadystatechange = f$$4.noop;
              if (ce) {
                delete cg[i$$141];
              }
            }
            if (e$$154) {
              var v12149 = h$$72.readyState;
              var v5161 = v12149 !== 4;
              if (v5161) {
                h$$72.abort();
              }
            } else {
              j$$58 = h$$72.status;
              l$$48 = h$$72.getAllResponseHeaders();
              m$$24 = {};
              n$$75 = h$$72.responseXML;
              var v17763 = n$$75;
              if (v17763) {
                v17763 = n$$75.documentElement;
              }
              var v12150 = v17763;
              if (v12150) {
                m$$24.xml = n$$75;
              }
              try {
                m$$24.text = h$$72.responseText;
              } catch (a$$364) {
              }
              try {
                k$$36 = h$$72.statusText;
              } catch (o$$14) {
                k$$36 = "";
              }
              var v5162;
              var v21665 = !j$$58;
              if (v21665) {
                v21665 = c$$179.isLocal;
              }
              var v17764 = v21665;
              if (v17764) {
                var v21666 = c$$179.crossDomain;
                v17764 = !v21666;
              }
              var v12153 = v17764;
              if (v12153) {
                var v12151;
                var v17765 = m$$24.text;
                if (v17765) {
                  v12151 = 200;
                } else {
                  v12151 = 404;
                }
                v5162 = j$$58 = v12151;
              } else {
                var v12152 = j$$58 === 1223;
                if (v12152) {
                  v12152 = j$$58 = 204;
                }
                v5162 = v12152;
              }
              v5162;
            }
          }
        } catch (p$$36) {
          var v12154 = !e$$154;
          if (v12154) {
            g$$88(-1, p$$36);
          }
        }
        if (m$$24) {
          g$$88(j$$58, k$$36, m$$24, l$$48);
        }
        return;
      }
      var h$$72 = c$$179.xhr();
      var i$$141;
      var j$$57;
      var v5164;
      var v12163 = c$$179.username;
      if (v12163) {
        var v12155 = c$$179.type;
        var v12156 = c$$179.url;
        var v12157 = c$$179.async;
        var v12158 = c$$179.username;
        var v12159 = c$$179.password;
        v5164 = h$$72.open(v12155, v12156, v12157, v12158, v12159);
      } else {
        var v12160 = c$$179.type;
        var v12161 = c$$179.url;
        var v12162 = c$$179.async;
        v5164 = h$$72.open(v12160, v12161, v12162);
      }
      v5164;
      var v5167 = c$$179.xhrFields;
      if (v5167) {
        var v5166 = c$$179.xhrFields;
        for (j$$57 in v5166) {
          var v5165 = c$$179.xhrFields;
          h$$72[j$$57] = v5165[j$$57];
        }
      }
      var v17766 = c$$179.mimeType;
      if (v17766) {
        v17766 = h$$72.overrideMimeType;
      }
      var v12164 = v17766;
      if (v12164) {
        var v17767 = c$$179.mimeType;
        h$$72.overrideMimeType(v17767);
      }
      var v21667 = c$$179.crossDomain;
      var v17768 = !v21667;
      if (v17768) {
        var v21668 = e$$153["X-Requested-With"];
        v17768 = !v21668;
      }
      var v12165 = v17768;
      if (v12165) {
        e$$153["X-Requested-With"] = "XMLHttpRequest";
      }
      try {
        for (j$$57 in e$$153) {
          var v5168 = e$$153[j$$57];
          h$$72.setRequestHeader(j$$57, v5168);
        }
      } catch (k$$35) {
      }
      var v25737 = c$$179.hasContent;
      if (v25737) {
        v25737 = c$$179.data;
      }
      var v21669 = v25737;
      var v25738 = !v21669;
      if (v25738) {
        v21669 = null;
      }
      var v17769 = v21669;
      h$$72.send(v17769);
      d$$143 = v1037;
      var v12166;
      var v25739 = c$$179.async;
      var v21670 = !v25739;
      var v25741 = !v21670;
      if (v25741) {
        var v25740 = h$$72.readyState;
        v21670 = v25740 === 4;
      }
      var v17770 = v21670;
      if (v17770) {
        v12166 = d$$143();
      } else {
        i$$141 = cf = cf + 1;
        if (ce) {
          var v29201 = !cg;
          if (v29201) {
            cg = {};
            var v29650 = f$$4(a$$13);
            v29650.unload(ce);
          }
          cg[i$$141] = d$$143;
        }
        v12166 = h$$72.onreadystatechange = d$$143;
      }
      v12166;
      return;
    }
    var v17771 = c$$179.crossDomain;
    var v12167 = !v17771;
    var v17773 = !v12167;
    if (v17773) {
      var v17772 = f$$4.support;
      v12167 = v17772.cors;
    }
    var v5169 = v12167;
    if (v5169) {
      var d$$143;
      return{send:v1038, abort:v1039};
    }
    return;
  }
  function v1036(a$$362) {
    var v5170 = f$$4.support;
    var v17774 = !a$$362;
    var v12168 = !v17774;
    var v21671 = !a$$362;
    var v17775 = !v21671;
    if (v17775) {
      v17775 = "withCredentials" in a$$362;
    }
    var v12169 = v17775;
    var v5171 = {ajax:v12168, cors:v12169};
    f$$4.extend(v5170, v5171);
    return;
  }
  function v1035() {
    var JSCompiler_temp$$10;
    var v17776 = this.isLocal;
    var v12170 = !v17776;
    if (v12170) {
      v12170 = ch$$14();
    }
    var v5173 = JSCompiler_temp$$10 = v12170;
    if (v5173) {
    } else {
      JSCompiler_inline_label_ci_59: {
        try {
          var v5172 = a$$13.ActiveXObject;
          JSCompiler_temp$$10 = new v5172("Microsoft.XMLHTTP");
          break JSCompiler_inline_label_ci_59;
        } catch (b$$inline_58) {
        }
        JSCompiler_temp$$10 = void 0;
      }
    }
    return JSCompiler_temp$$10;
  }
  function v1034() {
    var a$$361;
    for (a$$361 in cg) {
      cg[a$$361](0, 1);
    }
    return;
  }
  function v1033(a$$359) {
    function v1032() {
      if (d$$142) {
        d$$142.onload(0, 1);
      }
      return;
    }
    function v1031(f$$46, g$$87) {
      function v1030(a$$360, c$$178) {
        var v17777 = c$$178;
        var v21673 = !v17777;
        if (v21673) {
          var v21672 = d$$142.readyState;
          v17777 = !v21672;
        }
        var v12171 = v17777;
        var v17779 = !v12171;
        if (v17779) {
          var v17778 = d$$142.readyState;
          v12171 = /loaded|complete/.test(v17778);
        }
        var v5174 = v12171;
        if (v5174) {
          d$$142.onload = d$$142.onreadystatechange = null;
          var v25742 = e$$152;
          if (v25742) {
            v25742 = d$$142.parentNode;
          }
          var v21674 = v25742;
          if (v21674) {
            e$$152.removeChild(d$$142);
          }
          d$$142 = b$$9;
          var v17780 = !c$$178;
          if (v17780) {
            g$$87(200, "success");
          }
        }
        return;
      }
      d$$142 = c$$5.createElement("script");
      d$$142.async = "async";
      var v25743 = a$$359.scriptCharset;
      if (v25743) {
        d$$142.charset = a$$359.scriptCharset;
      }
      d$$142.src = a$$359.url;
      d$$142.onload = d$$142.onreadystatechange = v1030;
      var v12172 = e$$152.firstChild;
      e$$152.insertBefore(d$$142, v12172);
      return;
    }
    var v5176 = a$$359.crossDomain;
    if (v5176) {
      var d$$142;
      var v12173 = c$$5.head;
      var v17782 = !v12173;
      if (v17782) {
        var v17781 = c$$5.getElementsByTagName("head");
        v12173 = v17781[0];
      }
      var v5175 = v12173;
      var v12174 = !v5175;
      if (v12174) {
        v5175 = c$$5.documentElement;
      }
      var e$$152 = v5175;
      return{send:v1031, abort:v1032};
    }
    return;
  }
  function v1029(a$$358) {
    var v17783 = a$$358.cache;
    var v12175 = v17783 === b$$9;
    if (v12175) {
      a$$358.cache = !1;
    }
    var v12176 = a$$358.crossDomain;
    if (v12176) {
      a$$358.type = "GET";
      a$$358.global = !1;
    }
    return;
  }
  function v1028(a$$357) {
    f$$4.globalEval(a$$357);
    return a$$357;
  }
  function v1027(b$$222, c$$177, d$$141) {
    function v1026() {
      var v12178 = !g$$86;
      if (v12178) {
        var v12177 = h$$71 + " was not called";
        f$$4.error(v12177);
      }
      return g$$86[0];
    }
    function v1025() {
      a$$13[h$$71] = i$$140;
      var v17784 = g$$86;
      if (v17784) {
        v17784 = f$$4.isFunction(i$$140);
      }
      var v12179 = v17784;
      if (v12179) {
        var v17785 = g$$86[0];
        a$$13[h$$71](v17785);
      }
      return;
    }
    function v1024(a$$356) {
      g$$86 = [a$$356];
      return;
    }
    var v17786 = b$$222.data;
    var v12180 = typeof v17786;
    var v5177 = v12180 == "string";
    if (v5177) {
      var v12181 = b$$222.contentType;
      v5177 = /^application\/x\-www\-form\-urlencoded/.test(v12181);
    }
    var e$$151 = v5177;
    var v21675 = b$$222.dataTypes;
    var v17787 = v21675[0];
    var v12182 = v17787 === "jsonp";
    var v17789 = !v12182;
    if (v17789) {
      var v21676 = b$$222.jsonp;
      var v21677 = !1;
      var v17788 = v21676 !== v21677;
      if (v17788) {
        var v25744 = b$$222.url;
        var v21678 = cd.test(v25744);
        var v25746 = !v21678;
        if (v25746) {
          var v25745 = e$$151;
          if (v25745) {
            var v27437 = b$$222.data;
            v25745 = cd.test(v27437);
          }
          v21678 = v25745;
        }
        v17788 = v21678;
      }
      v12182 = v17788;
    }
    var v5180 = v12182;
    if (v5180) {
      var g$$86;
      var v5178 = b$$222;
      var v12183;
      var v21679 = b$$222.jsonpCallback;
      var v17790 = f$$4.isFunction(v21679);
      if (v17790) {
        v12183 = b$$222.jsonpCallback();
      } else {
        v12183 = b$$222.jsonpCallback;
      }
      var h$$71 = v5178.jsonpCallback = v12183;
      var i$$140 = a$$13[h$$71];
      var j$$56 = b$$222.url;
      var k$$34 = b$$222.data;
      var v5179 = "$1" + h$$71;
      var l$$47 = v5179 + "$2";
      var v29202 = b$$222.jsonp;
      var v29203 = !1;
      var v28515 = v29202 !== v29203;
      if (v28515) {
        j$$56 = j$$56.replace(cd, l$$47);
        var v29934 = b$$222.url;
        var v29651 = v29934 === j$$56;
        if (v29651) {
          if (e$$151) {
            k$$34 = k$$34.replace(cd, l$$47);
          }
          var v30363 = b$$222.data;
          var v30186 = v30363 === k$$34;
          if (v30186) {
            var v30498 = j$$56;
            var v30774;
            var v30803 = /\?/.test(j$$56);
            if (v30803) {
              v30774 = "&";
            } else {
              v30774 = "?";
            }
            var v30743 = v30774;
            var v30744 = b$$222.jsonp;
            var v30697 = v30743 + v30744;
            var v30620 = v30697 + "=";
            var v30499 = v30620 + h$$71;
            j$$56 = v30498 + v30499;
          }
        }
      }
      b$$222.url = j$$56;
      b$$222.data = k$$34;
      a$$13[h$$71] = v1024;
      d$$141.always(v1025);
      var v17791 = b$$222.converters;
      v17791["script json"] = v1026;
      var v12184 = b$$222.dataTypes;
      v12184[0] = "json";
      return "script";
    }
    return;
  }
  function v1023() {
    var v12185 = f$$4.expando;
    var v5181 = v12185 + "_";
    var v5182 = cc;
    cc = cc + 1;
    return v5181 + v5182;
  }
  function v1022(a$$354, c$$176) {
    function v1021() {
      var v5183 = this.name;
      var v5184 = this.value;
      e$$150(v5183, v5184);
      return;
    }
    function e$$150(a$$355, b$$221) {
      var v12186;
      var v17792 = f$$4.isFunction(b$$221);
      if (v17792) {
        v12186 = b$$221();
      } else {
        v12186 = b$$221;
      }
      b$$221 = v12186;
      var v12187 = d$$140;
      var v12188 = d$$140.length;
      var v21680 = encodeURIComponent(a$$355);
      var v17793 = v21680 + "=";
      var v17794 = encodeURIComponent(b$$221);
      v12187[v12188] = v17793 + v17794;
      return;
    }
    var d$$140 = [];
    var v5185 = c$$176 === b$$9;
    if (v5185) {
      var v12189 = f$$4.ajaxSettings;
      c$$176 = v12189.traditional;
    }
    var v12190 = f$$4.isArray(a$$354);
    var v17796 = !v12190;
    if (v17796) {
      var v17795 = a$$354.jquery;
      if (v17795) {
        var v21681 = f$$4.isPlainObject(a$$354);
        v17795 = !v21681;
      }
      v12190 = v17795;
    }
    var v5187 = v12190;
    if (v5187) {
      f$$4.each(a$$354, v1021);
    } else {
      var g$$85;
      for (g$$85 in a$$354) {
        var v5186 = a$$354[g$$85];
        b_(g$$85, v5186, c$$176, e$$150);
      }
    }
    var v5188 = d$$140.join("&");
    return v5188.replace(bC, "+");
  }
  function v1020(a$$347, c$$172) {
    function v1019() {
      v$$9.abort("timeout");
      return;
    }
    function v1018(a$$353) {
      if (a$$353) {
        var b$$220;
        var v5191 = s$$25 < 2;
        if (v5191) {
          for (b$$220 in a$$353) {
            var v5189 = j$$55[b$$220];
            var v5190 = a$$353[b$$220];
            j$$55[b$$220] = [v5189, v5190];
          }
        } else {
          var v12191 = v$$9.status;
          b$$220 = a$$353[v12191];
          v$$9.then(b$$220, b$$220);
        }
      }
      return this;
    }
    function v1017(a$$352) {
      a$$352 = a$$352 || "abort";
      if (p$$35) {
        p$$35.abort(a$$352);
      }
      w$$15(0, a$$352);
      return this;
    }
    function v1016(a$$351) {
      var v12192 = !s$$25;
      if (v12192) {
        d$$139.mimeType = a$$351;
      }
      return this;
    }
    function v1015(a$$350) {
      var c$$175;
      var v5197 = s$$25 === 2;
      if (v5197) {
        var v5194 = !o$$12;
        if (v5194) {
          o$$12 = {};
          var v5193 = c$$175 = bG.exec(n$$74);
          for (;v5193;) {
            var v12193 = c$$175[1];
            var v5192 = v12193.toLowerCase();
            o$$12[v5192] = c$$175[2];
            v5193 = c$$175 = bG.exec(n$$74);
          }
        }
        var v5195 = o$$12;
        var v5196 = a$$350.toLowerCase();
        c$$175 = v5195[v5196];
      }
      var v5198;
      var v12194 = c$$175 === b$$9;
      if (v12194) {
        v5198 = null;
      } else {
        v5198 = c$$175;
      }
      return v5198;
    }
    function v1014() {
      var v5199;
      var v12195 = s$$25 === 2;
      if (v12195) {
        v5199 = n$$74;
      } else {
        v5199 = null;
      }
      return v5199;
    }
    function v1013(a$$349, b$$219) {
      var v5200 = !s$$25;
      if (v5200) {
        var c$$174 = a$$349.toLowerCase();
        var v12196 = m$$22[c$$174];
        var v17797 = !v12196;
        if (v17797) {
          v12196 = a$$349;
        }
        a$$349 = m$$22[c$$174] = v12196;
        l$$45[a$$349] = b$$219;
      }
      return this;
    }
    function w$$15(a$$348, c$$173, l$$46, m$$23) {
      var v5225 = s$$25 !== 2;
      if (v5225) {
        s$$25 = 2;
        if (q$$13) {
          clearTimeout(q$$13);
        }
        p$$35 = b$$9;
        n$$74 = m$$23 || "";
        var v12197;
        var v17798 = a$$348 > 0;
        if (v17798) {
          v12197 = 4;
        } else {
          v12197 = 0;
        }
        v$$9.readyState = v12197;
        var o$$13;
        var r$$16;
        var u$$9;
        var w$$16 = c$$173;
        var JSCompiler_temp$$6;
        if (l$$46) {
          JSCompiler_inline_label_ca_42: {
            var a$$inline_32 = d$$139;
            var c$$inline_33 = v$$9;
            var d$$inline_34 = l$$46;
            var e$$inline_35 = a$$inline_32.contents;
            var f$$inline_36 = a$$inline_32.dataTypes;
            var g$$inline_37 = a$$inline_32.responseFields;
            var h$$inline_38;
            var i$$inline_39;
            var j$$inline_40;
            var k$$inline_41;
            for (i$$inline_39 in g$$inline_37) {
              var v5201 = i$$inline_39 in d$$inline_34;
              if (v5201) {
                var v12198 = g$$inline_37[i$$inline_39];
                c$$inline_33[v12198] = d$$inline_34[i$$inline_39];
              }
            }
            var v12199 = f$$inline_36[0];
            var v5202 = v12199 === "*";
            for (;v5202;) {
              f$$inline_36.shift();
              var v12200 = h$$inline_38 === b$$9;
              if (v12200) {
                var v17799 = a$$inline_32.mimeType;
                var v21682 = !v17799;
                if (v21682) {
                  v17799 = c$$inline_33.getResponseHeader("content-type");
                }
                h$$inline_38 = v17799;
              }
              var v12201 = f$$inline_36[0];
              v5202 = v12201 === "*";
            }
            if (h$$inline_38) {
              for (i$$inline_39 in e$$inline_35) {
                var v12202 = e$$inline_35[i$$inline_39];
                if (v12202) {
                  var v17800 = e$$inline_35[i$$inline_39];
                  v12202 = v17800.test(h$$inline_38);
                }
                var v5203 = v12202;
                if (v5203) {
                  f$$inline_36.unshift(i$$inline_39);
                  break;
                }
              }
            }
            var v12203 = f$$inline_36[0];
            var v5205 = v12203 in d$$inline_34;
            if (v5205) {
              j$$inline_40 = f$$inline_36[0];
            } else {
              for (i$$inline_39 in d$$inline_34) {
                var v17801 = f$$inline_36[0];
                var v12204 = !v17801;
                var v17804 = !v12204;
                if (v17804) {
                  var v17802 = a$$inline_32.converters;
                  var v21683 = i$$inline_39 + " ";
                  var v21684 = f$$inline_36[0];
                  var v17803 = v21683 + v21684;
                  v12204 = v17802[v17803];
                }
                var v5204 = v12204;
                if (v5204) {
                  j$$inline_40 = i$$inline_39;
                  break;
                }
                var v12205 = !k$$inline_41;
                if (v12205) {
                  k$$inline_41 = i$$inline_39;
                }
              }
              j$$inline_40 = j$$inline_40 || k$$inline_41;
            }
            if (j$$inline_40) {
              var v12206 = f$$inline_36[0];
              var v5206 = j$$inline_40 !== v12206;
              if (v5206) {
                f$$inline_36.unshift(j$$inline_40);
              }
              JSCompiler_temp$$6 = d$$inline_34[j$$inline_40];
              break JSCompiler_inline_label_ca_42;
            }
            JSCompiler_temp$$6 = void 0;
          }
        } else {
          JSCompiler_temp$$6 = b$$9;
        }
        var x$$72 = JSCompiler_temp$$6;
        var y$$53;
        var z$$4;
        var v17805 = a$$348 >= 200;
        if (v17805) {
          v17805 = a$$348 < 300;
        }
        var v12207 = v17805;
        var v17806 = !v12207;
        if (v17806) {
          v12207 = a$$348 === 304;
        }
        var v5224 = v12207;
        if (v5224) {
          var v5211 = d$$139.ifModified;
          if (v5211) {
            var v5208 = y$$53 = v$$9.getResponseHeader("Last-Modified");
            if (v5208) {
              var v5207 = f$$4.lastModified;
              v5207[k$$33] = y$$53;
            }
            var v5210 = z$$4 = v$$9.getResponseHeader("Etag");
            if (v5210) {
              var v5209 = f$$4.etag;
              v5209[k$$33] = z$$4;
            }
          }
          var v5222 = a$$348 === 304;
          if (v5222) {
            w$$16 = "notmodified";
            o$$13 = !0;
          } else {
            try {
              var JSCompiler_inline_result$$5;
              var a$$inline_43 = d$$139;
              var c$$inline_44 = x$$72;
              var v5212 = a$$inline_43.dataFilter;
              if (v5212) {
                var v12208 = a$$inline_43.dataType;
                c$$inline_44 = a$$inline_43.dataFilter(c$$inline_44, v12208);
              }
              var d$$inline_45 = a$$inline_43.dataTypes;
              var e$$inline_46 = {};
              var g$$inline_47;
              var h$$inline_48;
              var i$$inline_49 = d$$inline_45.length;
              var j$$inline_50;
              var k$$inline_51 = d$$inline_45[0];
              var l$$inline_52;
              var m$$inline_53;
              var n$$inline_54;
              var o$$inline_55;
              var p$$inline_56;
              g$$inline_47 = 1;
              var v5221 = g$$inline_47 < i$$inline_49;
              for (;v5221;) {
                var v5215 = g$$inline_47 === 1;
                if (v5215) {
                  var v5214 = a$$inline_43.converters;
                  for (h$$inline_48 in v5214) {
                    var v12209 = typeof h$$inline_48;
                    var v5213 = v12209 == "string";
                    if (v5213) {
                      var v12210 = h$$inline_48.toLowerCase();
                      var v17807 = a$$inline_43.converters;
                      e$$inline_46[v12210] = v17807[h$$inline_48];
                    }
                  }
                }
                l$$inline_52 = k$$inline_51;
                k$$inline_51 = d$$inline_45[g$$inline_47];
                var v5220 = k$$inline_51 === "*";
                if (v5220) {
                  k$$inline_51 = l$$inline_52;
                } else {
                  var v12211 = l$$inline_52 !== "*";
                  if (v12211) {
                    v12211 = l$$inline_52 !== k$$inline_51;
                  }
                  var v5219 = v12211;
                  if (v5219) {
                    var v12212 = l$$inline_52 + " ";
                    m$$inline_53 = v12212 + k$$inline_51;
                    var v12213 = e$$inline_46[m$$inline_53];
                    var v17809 = !v12213;
                    if (v17809) {
                      var v17808 = "* " + k$$inline_51;
                      v12213 = e$$inline_46[v17808];
                    }
                    n$$inline_54 = v12213;
                    var v5218 = !n$$inline_54;
                    if (v5218) {
                      p$$inline_56 = b$$9;
                      for (o$$inline_55 in e$$inline_46) {
                        j$$inline_50 = o$$inline_55.split(" ");
                        var v17810 = j$$inline_50[0];
                        var v12214 = v17810 === l$$inline_52;
                        var v17812 = !v12214;
                        if (v17812) {
                          var v17811 = j$$inline_50[0];
                          v12214 = v17811 === "*";
                        }
                        var v5217 = v12214;
                        if (v5217) {
                          var v17813 = j$$inline_50[1];
                          var v12215 = v17813 + " ";
                          var v5216 = v12215 + k$$inline_51;
                          p$$inline_56 = e$$inline_46[v5216];
                          if (p$$inline_56) {
                            o$$inline_55 = e$$inline_46[o$$inline_55];
                            var v12216;
                            var v21685 = !0;
                            var v17815 = o$$inline_55 === v21685;
                            if (v17815) {
                              v12216 = n$$inline_54 = p$$inline_56;
                            } else {
                              var v21686 = !0;
                              var v17814 = p$$inline_56 === v21686;
                              if (v17814) {
                                v17814 = n$$inline_54 = o$$inline_55;
                              }
                              v12216 = v17814;
                            }
                            v12216;
                            break;
                          }
                        }
                      }
                    }
                    var v17816 = !n$$inline_54;
                    if (v17816) {
                      v17816 = !p$$inline_56;
                    }
                    var v12217 = v17816;
                    if (v12217) {
                      var v21687 = m$$inline_53.replace(" ", " to ");
                      var v17817 = "No conversion from " + v21687;
                      f$$4.error(v17817);
                    }
                    var v17818 = !0;
                    var v12218 = n$$inline_54 !== v17818;
                    if (v12218) {
                      var v17819;
                      if (n$$inline_54) {
                        v17819 = n$$inline_54(c$$inline_44);
                      } else {
                        var v21688 = o$$inline_55(c$$inline_44);
                        v17819 = p$$inline_56(v21688);
                      }
                      c$$inline_44 = v17819;
                    }
                  }
                }
                g$$inline_47++;
                v5221 = g$$inline_47 < i$$inline_49;
              }
              JSCompiler_inline_result$$5 = c$$inline_44;
              r$$16 = JSCompiler_inline_result$$5;
              w$$16 = "success";
              o$$13 = !0;
            } catch (A$$2) {
              w$$16 = "parsererror";
              u$$9 = A$$2;
            }
          }
        } else {
          u$$9 = w$$16;
          var v12219 = !w$$16;
          var v17820 = !v12219;
          if (v17820) {
            v12219 = a$$348;
          }
          var v5223 = v12219;
          if (v5223) {
            w$$16 = "error";
            var v12220 = a$$348 < 0;
            if (v12220) {
              a$$348 = 0;
            }
          }
        }
        v$$9.status = a$$348;
        var v29204 = c$$173 || w$$16;
        v$$9.statusText = "" + v29204;
        var v28516;
        if (o$$13) {
          var v29205 = [r$$16, w$$16, v$$9];
          v28516 = h$$70.resolveWith(e$$149, v29205);
        } else {
          var v29206 = [v$$9, w$$16, u$$9];
          v28516 = h$$70.rejectWith(e$$149, v29206);
        }
        v28516;
        v$$9.statusCode(j$$55);
        j$$55 = b$$9;
        if (t$$10) {
          var v28517;
          if (o$$13) {
            v28517 = "Success";
          } else {
            v28517 = "Error";
          }
          var v27438 = v28517;
          var v25747 = "ajax" + v27438;
          var v28518;
          if (o$$13) {
            v28518 = r$$16;
          } else {
            v28518 = u$$9;
          }
          var v27439 = v28518;
          var v25748 = [v$$9, d$$139, v27439];
          g$$84.trigger(v25747, v25748);
        }
        var v17821 = [v$$9, w$$16];
        i$$139.fireWith(e$$149, v17821);
        if (t$$10) {
          var v21689 = [v$$9, d$$139];
          g$$84.trigger("ajaxComplete", v21689);
          var v27440 = f$$4.active;
          var v21690 = f$$4.active = v27440 - 1;
          var v25750 = !v21690;
          if (v25750) {
            var v25749 = f$$4.event;
            v25749.trigger("ajaxStop");
          }
        }
      }
      return;
    }
    var v17822 = typeof a$$347;
    var v12221 = v17822 == "object";
    if (v12221) {
      c$$172 = a$$347;
      a$$347 = b$$9;
    }
    c$$172 = c$$172 || {};
    var d$$139 = f$$4.ajaxSetup({}, c$$172);
    var v5226 = d$$139.context;
    var v12222 = !v5226;
    if (v12222) {
      v5226 = d$$139;
    }
    var e$$149 = v5226;
    var v5227;
    var v17823 = e$$149 !== d$$139;
    if (v17823) {
      var v21691 = e$$149.nodeType;
      var v25751 = !v21691;
      if (v25751) {
        v21691 = e$$149 instanceof f$$4;
      }
      v17823 = v21691;
    }
    var v12223 = v17823;
    if (v12223) {
      v5227 = f$$4(e$$149);
    } else {
      v5227 = f$$4.event;
    }
    var g$$84 = v5227;
    var h$$70 = f$$4.Deferred();
    var i$$139 = f$$4.Callbacks("once memory");
    var v5228 = d$$139.statusCode;
    var v12224 = !v5228;
    if (v12224) {
      v5228 = {};
    }
    var j$$55 = v5228;
    var k$$33;
    var l$$45 = {};
    var m$$22 = {};
    var n$$74;
    var o$$12;
    var p$$35;
    var q$$13;
    var r$$15;
    var s$$25 = 0;
    var t$$10;
    var u$$8;
    var v$$9 = {readyState:0, setRequestHeader:v1013, getAllResponseHeaders:v1014, getResponseHeader:v1015, overrideMimeType:v1016, abort:v1017};
    h$$70.promise(v$$9);
    v$$9.success = v$$9.done;
    v$$9.error = v$$9.fail;
    v$$9.complete = i$$139.add;
    v$$9.statusCode = v1018;
    var v27441 = d$$139;
    var v29935 = a$$347;
    var v30187 = !v29935;
    if (v30187) {
      v29935 = d$$139.url;
    }
    var v29652 = v29935;
    var v29207 = v29652 + "";
    var v28519 = v29207.replace(bF, "");
    var v29208 = bV[1];
    var v28520 = v29208 + "//";
    var v31122 = v28519.replace(bK, v28520);
    v27441.url = v31122;
    var v25752 = d$$139;
    var v29653 = d$$139.dataType;
    var v29936 = !v29653;
    if (v29936) {
      v29653 = "*";
    }
    var v29209 = v29653;
    var v28521 = f$$4.trim(v29209);
    var v27442 = v28521.toLowerCase();
    var v31123 = v27442.split(bO);
    v25752.dataTypes = v31123;
    var v25753 = d$$139.crossDomain;
    var v21692 = v25753 == null;
    if (v21692) {
      var v28522 = d$$139.url;
      var v27443 = v28522.toLowerCase();
      r$$15 = bQ.exec(v27443);
      var v28523 = !r$$15;
      var v29211 = !v28523;
      if (v29211) {
        var v29937 = r$$15[1];
        var v29938 = bV[1];
        var v29654 = v29937 == v29938;
        if (v29654) {
          var v29939 = r$$15[2];
          var v29940 = bV[2];
          v29654 = v29939 == v29940;
        }
        var v29210 = v29654;
        if (v29210) {
          var v29941 = r$$15[3];
          var v30189 = !v29941;
          if (v30189) {
            var v30188;
            var v30500 = r$$15[1];
            var v30364 = v30500 === "http:";
            if (v30364) {
              v30188 = 80;
            } else {
              v30188 = 443;
            }
            v29941 = v30188;
          }
          var v29655 = v29941;
          var v29942 = bV[3];
          var v30191 = !v29942;
          if (v30191) {
            var v30190;
            var v30501 = bV[1];
            var v30365 = v30501 === "http:";
            if (v30365) {
              v30190 = 80;
            } else {
              v30190 = 443;
            }
            v29942 = v30190;
          }
          var v29656 = v29942;
          v29210 = v29655 == v29656;
        }
        v28523 = v29210;
      }
      var v27444 = v28523;
      d$$139.crossDomain = !v27444;
    }
    var v25754 = d$$139.data;
    if (v25754) {
      v25754 = d$$139.processData;
    }
    var v21693 = v25754;
    if (v21693) {
      var v27445 = d$$139.data;
      var v25755 = typeof v27445;
      v21693 = v25755 != "string";
    }
    var v17824 = v21693;
    if (v17824) {
      var v21694 = d$$139;
      var v25756 = d$$139.data;
      var v25757 = d$$139.traditional;
      var v31124 = f$$4.param(v25756, v25757);
      v21694.data = v31124;
    }
    bZ(bS, d$$139, c$$172, v$$9);
    var v5229 = s$$25 === 2;
    if (v5229) {
      return!1;
    }
    t$$10 = d$$139.global;
    var v21695 = d$$139;
    var v25758 = d$$139.type;
    var v31125 = v25758.toUpperCase();
    v21695.type = v31125;
    var v17825 = d$$139;
    var v25759 = d$$139.type;
    var v21696 = bJ.test(v25759);
    v17825.hasContent = !v21696;
    var v17826 = t$$10;
    if (v17826) {
      var v21697 = f$$4.active;
      var v27446 = f$$4.active;
      f$$4.active = v27446 + 1;
      v17826 = v21697 === 0;
    }
    var v12225 = v17826;
    if (v12225) {
      var v17827 = f$$4.event;
      v17827.trigger("ajaxStart");
    }
    var v12226 = d$$139.hasContent;
    var v5234 = !v12226;
    if (v5234) {
      var v12227 = d$$139.data;
      if (v12227) {
        var v21698 = d$$139;
        var v27447 = v21698.url;
        var v29212;
        var v29943 = d$$139.url;
        var v29657 = bL.test(v29943);
        if (v29657) {
          v29212 = "&";
        } else {
          v29212 = "?";
        }
        var v28524 = v29212;
        var v28525 = d$$139.data;
        var v27448 = v28524 + v28525;
        v21698.url = v27447 + v27448;
        delete d$$139.data;
      }
      k$$33 = d$$139.url;
      var v12228 = d$$139.cache;
      var v12229 = !1;
      var v5233 = v12228 === v12229;
      if (v5233) {
        var x$$71 = f$$4.now();
        var v5230 = d$$139.url;
        var v5231 = "$1_=" + x$$71;
        var y$$52 = v5230.replace(bP, v5231);
        var v5232 = d$$139;
        var v12230 = y$$52;
        var v17828;
        var v25760 = d$$139.url;
        var v21700 = y$$52 === v25760;
        if (v21700) {
          var v27449;
          var v29213 = d$$139.url;
          var v28526 = bL.test(v29213);
          if (v28526) {
            v27449 = "&";
          } else {
            v27449 = "?";
          }
          var v25761 = v27449;
          var v21699 = v25761 + "_=";
          v17828 = v21699 + x$$71;
        } else {
          v17828 = "";
        }
        var v12231 = v17828;
        v5232.url = v12230 + v12231;
      }
    }
    var v27450 = d$$139.data;
    if (v27450) {
      v27450 = d$$139.hasContent;
    }
    var v25762 = v27450;
    if (v25762) {
      var v27451 = d$$139.contentType;
      var v27452 = !1;
      v25762 = v27451 !== v27452;
    }
    var v21701 = v25762;
    var v25763 = !v21701;
    if (v25763) {
      v21701 = c$$172.contentType;
    }
    var v17829 = v21701;
    if (v17829) {
      var v21702 = d$$139.contentType;
      v$$9.setRequestHeader("Content-Type", v21702);
    }
    var v17830 = d$$139.ifModified;
    if (v17830) {
      var v27453 = k$$33;
      var v28527 = !v27453;
      if (v28527) {
        v27453 = d$$139.url;
      }
      k$$33 = v27453;
      var v28528 = f$$4.lastModified;
      var v27454 = v28528[k$$33];
      if (v27454) {
        var v29214 = f$$4.lastModified;
        var v28529 = v29214[k$$33];
        v$$9.setRequestHeader("If-Modified-Since", v28529);
      }
      var v27455 = f$$4.etag;
      var v25764 = v27455[k$$33];
      if (v25764) {
        var v28530 = f$$4.etag;
        var v27456 = v28530[k$$33];
        v$$9.setRequestHeader("If-None-Match", v27456);
      }
    }
    var v17831;
    var v27457 = d$$139.dataTypes;
    var v25765 = v27457[0];
    if (v25765) {
      var v27458 = d$$139.accepts;
      var v28531 = d$$139.dataTypes;
      var v27459 = v28531[0];
      v25765 = v27458[v27459];
    }
    var v21706 = v25765;
    if (v21706) {
      var v25766 = d$$139.accepts;
      var v27460 = d$$139.dataTypes;
      var v25767 = v27460[0];
      var v21703 = v25766[v25767];
      var v25768;
      var v29215 = d$$139.dataTypes;
      var v28532 = v29215[0];
      var v27462 = v28532 !== "*";
      if (v27462) {
        var v27461 = ", " + bW;
        v25768 = v27461 + "; q=0.01";
      } else {
        v25768 = "";
      }
      var v21704 = v25768;
      v17831 = v21703 + v21704;
    } else {
      var v21705 = d$$139.accepts;
      v17831 = v21705["*"];
    }
    var v12232 = v17831;
    v$$9.setRequestHeader("Accept", v12232);
    var v5236 = d$$139.headers;
    for (u$$8 in v5236) {
      var v12233 = d$$139.headers;
      var v5235 = v12233[u$$8];
      v$$9.setRequestHeader(u$$8, v5235);
    }
    var v12234 = d$$139.beforeSend;
    if (v12234) {
      var v25769 = d$$139.beforeSend;
      var v21707 = v25769.call(e$$149, v$$9, d$$139);
      var v21708 = !1;
      var v17832 = v21707 === v21708;
      var v21709 = !v17832;
      if (v21709) {
        v17832 = s$$25 === 2;
      }
      v12234 = v17832;
    }
    var v5237 = v12234;
    if (v5237) {
      v$$9.abort();
      return!1;
    }
    var v5239 = {success:1, error:1, complete:1};
    for (u$$8 in v5239) {
      var v5238 = d$$139[u$$8];
      v$$9[u$$8](v5238);
    }
    p$$35 = bZ(bT, d$$139, c$$172, v$$9);
    var v5241 = !p$$35;
    if (v5241) {
      w$$15(-1, "No Transport");
    } else {
      v$$9.readyState = 1;
      if (t$$10) {
        var v21710 = [v$$9, d$$139];
        g$$84.trigger("ajaxSend", v21710);
      }
      var v17833 = d$$139.async;
      if (v17833) {
        var v21711 = d$$139.timeout;
        v17833 = v21711 > 0;
      }
      var v12235 = v17833;
      if (v12235) {
        var v17834 = d$$139.timeout;
        q$$13 = setTimeout(v1019, v17834);
      }
      try {
        s$$25 = 1;
        p$$35.send(l$$45, w$$15);
      } catch (z$$5) {
        var v5240 = s$$25 < 2;
        if (v5240) {
          w$$15(-1, z$$5);
        } else {
          throw z$$5;
        }
      }
    }
    return v$$9;
  }
  function v1012(a$$346, b$$218) {
    var v12236;
    if (b$$218) {
      var v17835 = f$$4.ajaxSettings;
      v12236 = b$(a$$346, v17835);
    } else {
      b$$218 = a$$346;
      v12236 = a$$346 = f$$4.ajaxSettings;
    }
    v12236;
    b$(a$$346, b$$218);
    return a$$346;
  }
  function v1011(a$$345, b$$217, c$$171) {
    return f$$4.get(a$$345, b$$217, c$$171, "json");
  }
  function v1010(a$$344, c$$170) {
    return f$$4.get(a$$344, b$$9, c$$170, "script");
  }
  function v1009(a$$342, c$$169) {
    function v1008(a$$343, d$$138, e$$148, g$$83) {
      var v5242 = f$$4.isFunction(d$$138);
      if (v5242) {
        g$$83 = g$$83 || e$$148;
        e$$148 = d$$138;
        d$$138 = b$$9;
      }
      var v5243 = {type:c$$169, url:a$$343, data:d$$138, success:e$$148, dataType:g$$83};
      return f$$4.ajax(v5243);
    }
    f$$4[c$$169] = v1008;
    return;
  }
  function v1007(a$$340, b$$216) {
    function v1006(a$$341) {
      return this.on(b$$216, a$$341);
    }
    var v5244 = f$$4.fn;
    v5244[b$$216] = v1006;
    return;
  }
  function v1005() {
    function v1004(a$$338, b$$215) {
      function v1003(a$$339, c$$168) {
        var v5245 = b$$215.name;
        var v5246 = a$$339.replace(bE, "\r\n");
        return{name:v5245, value:v5246};
      }
      var v5247 = f$$4(this);
      var c$$167 = v5247.val();
      var v5248;
      var v12238 = c$$167 == null;
      if (v12238) {
        v5248 = null;
      } else {
        var v12237;
        var v17838 = f$$4.isArray(c$$167);
        if (v17838) {
          v12237 = f$$4.map(c$$167, v1003);
        } else {
          var v17836 = b$$215.name;
          var v17837 = c$$167.replace(bE, "\r\n");
          v12237 = {name:v17836, value:v17837};
        }
        v5248 = v12237;
      }
      return v5248;
    }
    function v1002() {
      var v12239 = this.name;
      if (v12239) {
        var v17839 = this.disabled;
        v12239 = !v17839;
      }
      var v5249 = v12239;
      if (v5249) {
        var v17840 = this.checked;
        var v21713 = !v17840;
        if (v21713) {
          var v21712 = this.nodeName;
          v17840 = bN.test(v21712);
        }
        var v12240 = v17840;
        var v17842 = !v12240;
        if (v17842) {
          var v17841 = this.type;
          v12240 = bH.test(v17841);
        }
        v5249 = v12240;
      }
      return v5249;
    }
    function v1001() {
      var v5250;
      var v12242 = this.elements;
      if (v12242) {
        var v12241 = this.elements;
        v5250 = f$$4.makeArray(v12241);
      } else {
        v5250 = this;
      }
      return v5250;
    }
    var v17843 = this.map(v1001);
    var v12243 = v17843.filter(v1002);
    var v5251 = v12243.map(v1004);
    return v5251.get();
  }
  function v1000() {
    var v5252 = this.serializeArray();
    return f$$4.param(v5252);
  }
  function v999(a$$335, c$$165, d$$137) {
    function v998(a$$336, b$$214, c$$166) {
      function v997(a$$337) {
        c$$166 = a$$337;
        return;
      }
      c$$166 = a$$336.responseText;
      var v17844 = a$$336.isResolved();
      if (v17844) {
        a$$336.done(v997);
        var v27463;
        if (g$$82) {
          var v29216 = f$$4("<div>");
          var v29217 = c$$166.replace(bM, "");
          var v28533 = v29216.append(v29217);
          v27463 = v28533.find(g$$82);
        } else {
          v27463 = c$$166;
        }
        var v25770 = v27463;
        i$$138.html(v25770);
      }
      if (d$$137) {
        var v17845 = [c$$166, b$$214, a$$336];
        i$$138.each(d$$137, v17845);
      }
      return;
    }
    var v17846 = typeof a$$335;
    var v12244 = v17846 != "string";
    if (v12244) {
      v12244 = bR;
    }
    var v5253 = v12244;
    if (v5253) {
      return bR.apply(this, arguments);
    }
    var v12245 = this.length;
    var v5254 = !v12245;
    if (v5254) {
      return this;
    }
    var e$$147 = a$$335.indexOf(" ");
    var v5256 = e$$147 >= 0;
    if (v5256) {
      var v5255 = a$$335.length;
      var g$$82 = a$$335.slice(e$$147, v5255);
      a$$335 = a$$335.slice(0, e$$147);
    }
    var h$$69 = "GET";
    if (c$$165) {
      var v12246;
      var v17848 = f$$4.isFunction(c$$165);
      if (v17848) {
        d$$137 = c$$165;
        v12246 = c$$165 = b$$9;
      } else {
        var v21714 = typeof c$$165;
        var v17847 = v21714 == "object";
        if (v17847) {
          var v27464 = f$$4.ajaxSettings;
          var v25771 = v27464.traditional;
          c$$165 = f$$4.param(c$$165, v25771);
          v17847 = h$$69 = "POST";
        }
        v12246 = v17847;
      }
      v12246;
    }
    var i$$138 = this;
    var v5257 = {url:a$$335, type:h$$69, dataType:"html", data:c$$165, complete:v998};
    f$$4.ajax(v5257);
    return this;
  }
  function v996(a$$334, b$$213) {
    function v995(c$$164) {
      var d$$136;
      var v5258;
      var v17849 = typeof c$$164;
      var v12247 = v17849 == "string";
      if (v12247) {
        v5258 = c$$164.split(" ");
      } else {
        v5258 = [c$$164];
      }
      var e$$146 = v5258;
      var f$$45 = {};
      d$$136 = 0;
      var v5260 = d$$136 < 4;
      for (;v5260;) {
        var v17850 = bx[d$$136];
        var v12248 = a$$334 + v17850;
        var v5259 = v12248 + b$$213;
        var v17851 = e$$146[d$$136];
        var v21716 = !v17851;
        if (v21716) {
          var v21715 = d$$136 - 2;
          v17851 = e$$146[v21715];
        }
        var v12249 = v17851;
        var v17852 = !v12249;
        if (v17852) {
          v12249 = e$$146[0];
        }
        f$$45[v5259] = v12249;
        d$$136++;
        v5260 = d$$136 < 4;
      }
      return f$$45;
    }
    var v5261 = f$$4.cssHooks;
    var v5262 = a$$334 + b$$213;
    v5261[v5262] = {expand:v995};
    return;
  }
  function v994(a$$333) {
    var v17853 = f$$4.expr;
    var v12250 = v17853.filters;
    var v5263 = v12250.hidden(a$$333);
    return!v5263;
  }
  function v993(a$$332) {
    var b$$212 = a$$332.offsetWidth;
    var c$$163 = a$$332.offsetHeight;
    var v12251 = b$$212 === 0;
    if (v12251) {
      v12251 = c$$163 === 0;
    }
    var v5264 = v12251;
    var v12253 = !v5264;
    if (v12253) {
      var v21717 = f$$4.support;
      var v17854 = v21717.reliableHiddenOffsets;
      var v12252 = !v17854;
      if (v12252) {
        var v25772 = a$$332.style;
        if (v25772) {
          var v27465 = a$$332.style;
          v25772 = v27465.display;
        }
        var v21718 = v25772;
        var v25773 = !v21718;
        if (v25773) {
          v21718 = f$$4.css(a$$332, "display");
        }
        var v17855 = v21718;
        v12252 = v17855 === "none";
      }
      v5264 = v12252;
    }
    return v5264;
  }
  function v992() {
    function v991(a$$331, b$$211) {
      function v990() {
        var v5265;
        if (b$$211) {
          v5265 = by(a$$331, "margin-right");
        } else {
          var v12254 = a$$331.style;
          v5265 = v12254.marginRight;
        }
        return v5265;
      }
      var v5266 = {display:"inline-block"};
      return f$$4.swap(a$$331, v5266, v990);
    }
    var v12255 = f$$4.support;
    var v5267 = v12255.reliableMarginRight;
    var v12257 = !v5267;
    if (v12257) {
      var v12256 = f$$4.cssHooks;
      v12256.marginRight = {get:v991};
    }
    return;
  }
  function v989(a$$330, b$$210) {
    var c$$162 = a$$330.style;
    var d$$135 = a$$330.currentStyle;
    var v5268;
    var v12259 = f$$4.isNumeric(b$$210);
    if (v12259) {
      var v17856 = b$$210 * 100;
      var v12258 = "alpha(opacity=" + v17856;
      v5268 = v12258 + ")";
    } else {
      v5268 = "";
    }
    var e$$145 = v5268;
    var v17857 = d$$135;
    if (v17857) {
      v17857 = d$$135.filter;
    }
    var v12260 = v17857;
    var v17858 = !v12260;
    if (v17858) {
      v12260 = c$$162.filter;
    }
    var v5269 = v12260;
    var v12261 = !v5269;
    if (v12261) {
      v5269 = "";
    }
    var g$$81 = v5269;
    c$$162.zoom = 1;
    var v12262 = b$$210 >= 1;
    if (v12262) {
      var v21719 = g$$81.replace(bp, "");
      var v17859 = f$$4.trim(v21719);
      v12262 = v17859 === "";
    }
    var v5271 = v12262;
    if (v5271) {
      c$$162.removeAttribute("filter");
      var v12263 = d$$135;
      if (v12263) {
        var v17860 = d$$135.filter;
        v12263 = !v17860;
      }
      var v5270 = v12263;
      if (v5270) {
        return;
      }
    }
    var v5272;
    var v12265 = bp.test(g$$81);
    if (v12265) {
      v5272 = g$$81.replace(bp, e$$145);
    } else {
      var v12264 = g$$81 + " ";
      v5272 = v12264 + e$$145;
    }
    c$$162.filter = v5272;
    return;
  }
  function v988(a$$329, b$$209) {
    var v5273;
    var v25774;
    var v28534 = b$$209;
    if (v28534) {
      v28534 = a$$329.currentStyle;
    }
    var v27468 = v28534;
    if (v27468) {
      var v27466 = a$$329.currentStyle;
      v25774 = v27466.filter;
    } else {
      var v27467 = a$$329.style;
      v25774 = v27467.filter;
    }
    var v21720 = v25774;
    var v25775 = !v21720;
    if (v25775) {
      v21720 = "";
    }
    var v17861 = v21720;
    var v12268 = bq.test(v17861);
    if (v12268) {
      var v21721 = RegExp.$1;
      var v17862 = parseFloat(v21721);
      var v12266 = v17862 / 100;
      v5273 = v12266 + "";
    } else {
      var v12267;
      if (b$$209) {
        v12267 = "1";
      } else {
        v12267 = "";
      }
      v5273 = v12267;
    }
    return v5273;
  }
  function v987(a$$326, b$$207) {
    function v986(a$$328, b$$208) {
      var v5274;
      var v12269 = bs.test(b$$208);
      if (v12269) {
        v5274 = b$$208 + "px";
      } else {
        v5274 = b$$208;
      }
      return v5274;
    }
    function v985(a$$327, c$$161, d$$134) {
      function v984() {
        return bB(a$$327, b$$207, d$$134);
      }
      if (c$$161) {
        var v5275;
        var v17863 = a$$327.offsetWidth;
        var v12270 = v17863 !== 0;
        if (v12270) {
          v5275 = bB(a$$327, b$$207, d$$134);
        } else {
          v5275 = f$$4.swap(a$$327, bw, v984);
        }
        return v5275;
      }
      return;
    }
    var v5276 = f$$4.cssHooks;
    v5276[b$$207] = {get:v985, set:v986};
    return;
  }
  function v983(a$$325, b$$206) {
    var c$$160;
    var d$$133;
    var e$$144;
    var v5277 = a$$325.currentStyle;
    if (v5277) {
      var v12271 = a$$325.currentStyle;
      v5277 = v12271[b$$206];
    }
    var f$$44 = v5277;
    var g$$80 = a$$325.style;
    var v21722 = f$$44 == null;
    if (v21722) {
      v21722 = g$$80;
    }
    var v17864 = v21722;
    if (v17864) {
      v17864 = e$$144 = g$$80[b$$206];
    }
    var v12272 = v17864;
    if (v12272) {
      f$$44 = e$$144;
    }
    var v12273 = bt.test(f$$44);
    if (v12273) {
      c$$160 = g$$80.left;
      var v29658 = a$$325.runtimeStyle;
      if (v29658) {
        var v29944 = a$$325.runtimeStyle;
        v29658 = v29944.left;
      }
      d$$133 = v29658;
      if (d$$133) {
        var v29659 = a$$325.runtimeStyle;
        var v29945 = a$$325.currentStyle;
        v29659.left = v29945.left;
      }
      var v28535;
      var v29218 = b$$206 === "fontSize";
      if (v29218) {
        v28535 = "1em";
      } else {
        v28535 = f$$44;
      }
      g$$80.left = v28535;
      var v27469 = g$$80.pixelLeft;
      f$$44 = v27469 + "px";
      g$$80.left = c$$160;
      if (d$$133) {
        var v25776 = a$$325.runtimeStyle;
        v25776.left = d$$133;
      }
    }
    var v5278;
    var v12274 = f$$44 === "";
    if (v12274) {
      v5278 = "auto";
    } else {
      v5278 = f$$44;
    }
    return v5278;
  }
  function v982(a$$324, b$$205) {
    var c$$159;
    var d$$132;
    var e$$143;
    var g$$79;
    var h$$68 = a$$324.style;
    var v17865 = b$$205.replace(br, "-$1");
    b$$205 = v17865.toLowerCase();
    var v25777 = a$$324.ownerDocument;
    var v21723 = d$$132 = v25777.defaultView;
    if (v21723) {
      v21723 = e$$143 = d$$132.getComputedStyle(a$$324, null);
    }
    var v17866 = v21723;
    if (v17866) {
      c$$159 = e$$143.getPropertyValue(b$$205);
      var v27470 = c$$159 === "";
      if (v27470) {
        var v29660 = a$$324.ownerDocument;
        var v29219 = v29660.documentElement;
        var v28536 = f$$4.contains(v29219, a$$324);
        v27470 = !v28536;
      }
      var v25778 = v27470;
      if (v25778) {
        c$$159 = f$$4.style(a$$324, b$$205);
      }
    }
    var v28537 = f$$4.support;
    var v27471 = v28537.pixelMargin;
    var v25779 = !v27471;
    if (v25779) {
      v25779 = e$$143;
    }
    var v21724 = v25779;
    if (v21724) {
      v21724 = bv.test(b$$205);
    }
    var v17867 = v21724;
    if (v17867) {
      v17867 = bt.test(c$$159);
    }
    var v12275 = v17867;
    if (v12275) {
      g$$79 = h$$68.width;
      h$$68.width = c$$159;
      c$$159 = e$$143.width;
      h$$68.width = g$$79;
    }
    return c$$159;
  }
  function v981(a$$323, b$$204, c$$158) {
    var d$$131 = {};
    var e$$142;
    var f$$43;
    for (f$$43 in b$$204) {
      var v12276 = a$$323.style;
      d$$131[f$$43] = v12276[f$$43];
      var v12277 = a$$323.style;
      v12277[f$$43] = b$$204[f$$43];
    }
    e$$142 = c$$158.call(a$$323);
    for (f$$43 in b$$204) {
      var v5279 = a$$323.style;
      v5279[f$$43] = d$$131[f$$43];
    }
    return e$$142;
  }
  function v980(a$$322, c$$157, d$$130) {
    var e$$141;
    var g$$78;
    c$$157 = f$$4.camelCase(c$$157);
    var v21725 = f$$4.cssHooks;
    g$$78 = v21725[c$$157];
    var v21726 = f$$4.cssProps;
    var v17868 = v21726[c$$157];
    var v21727 = !v17868;
    if (v21727) {
      v17868 = c$$157;
    }
    c$$157 = v17868;
    var v12278 = c$$157 === "cssFloat";
    if (v12278) {
      c$$157 = "float";
    }
    var v17869 = g$$78;
    if (v17869) {
      v17869 = "get" in g$$78;
    }
    var v12279 = v17869;
    if (v12279) {
      var v21728 = !0;
      var v17870 = e$$141 = g$$78.get(a$$322, v21728, d$$130);
      v12279 = v17870 !== b$$9;
    }
    var v5280 = v12279;
    if (v5280) {
      return e$$141;
    }
    if (by) {
      return by(a$$322, c$$157);
    }
    return;
  }
  function v979(a$$321, c$$156, d$$129, e$$140) {
    var v25780 = !a$$321;
    var v21729 = !v25780;
    if (v21729) {
      var v25781 = a$$321.nodeType;
      v21729 = v25781 !== 3;
    }
    var v17871 = v21729;
    if (v17871) {
      var v21730 = a$$321.nodeType;
      v17871 = v21730 !== 8;
    }
    var v12280 = v17871;
    if (v12280) {
      var v21731 = a$$321.style;
      var v17872 = !v21731;
      v12280 = !v17872;
    }
    var v5288 = v12280;
    if (v5288) {
      var g$$77;
      var h$$67;
      var i$$137 = f$$4.camelCase(c$$156);
      var j$$54 = a$$321.style;
      var v5281 = f$$4.cssHooks;
      var k$$32 = v5281[i$$137];
      var v12281 = f$$4.cssProps;
      var v5282 = v12281[i$$137];
      var v12282 = !v5282;
      if (v12282) {
        v5282 = i$$137;
      }
      c$$156 = v5282;
      var v5284 = d$$129 === b$$9;
      if (v5284) {
        var v17873 = k$$32;
        if (v17873) {
          v17873 = "get" in k$$32;
        }
        var v12283 = v17873;
        if (v12283) {
          var v21732 = !1;
          var v17874 = g$$77 = k$$32.get(a$$321, v21732, e$$140);
          v12283 = v17874 !== b$$9;
        }
        var v5283 = v12283;
        if (v5283) {
          return g$$77;
        }
        return j$$54[c$$156];
      }
      h$$67 = typeof d$$129;
      var v17875 = h$$67 === "string";
      if (v17875) {
        v17875 = g$$77 = bu.exec(d$$129);
      }
      var v12284 = v17875;
      if (v12284) {
        var v28538 = g$$77[1];
        var v27472 = v28538 + 1;
        var v25782 = +v27472;
        var v27473 = g$$77[2];
        var v25783 = +v27473;
        var v21733 = v25782 * v25783;
        var v25784 = f$$4.css(a$$321, c$$156);
        var v21734 = parseFloat(v25784);
        d$$129 = v21733 + v21734;
        h$$67 = "number";
      }
      var v12285 = d$$129 == null;
      var v17877 = !v12285;
      if (v17877) {
        var v17876 = h$$67 === "number";
        if (v17876) {
          v17876 = isNaN(d$$129);
        }
        v12285 = v17876;
      }
      var v5285 = v12285;
      if (v5285) {
        return;
      }
      var v12286 = h$$67 === "number";
      if (v12286) {
        var v21735 = f$$4.cssNumber;
        var v17878 = v21735[i$$137];
        v12286 = !v17878;
      }
      var v5286 = v12286;
      if (v5286) {
        d$$129 = d$$129 + "px";
      }
      var v17879 = !k$$32;
      var v21737 = !v17879;
      if (v21737) {
        var v21736 = "set" in k$$32;
        v17879 = !v21736;
      }
      var v12287 = v17879;
      var v17881 = !v12287;
      if (v17881) {
        var v17880 = d$$129 = k$$32.set(a$$321, d$$129);
        v12287 = v17880 !== b$$9;
      }
      var v5287 = v12287;
      if (v5287) {
        try {
          j$$54[c$$156] = d$$129;
        } catch (l$$44) {
        }
      }
    }
    return;
  }
  function v978(a$$320, b$$203) {
    if (b$$203) {
      var c$$155 = by(a$$320, "opacity");
      var v5289;
      var v12288 = c$$155 === "";
      if (v12288) {
        v5289 = "1";
      } else {
        v5289 = c$$155;
      }
      return v5289;
    }
    var v5290 = a$$320.style;
    return v5290.opacity;
  }
  function v977(a$$318, c$$153) {
    function v976(a$$319, c$$154, d$$128) {
      var v5291;
      var v12289 = d$$128 !== b$$9;
      if (v12289) {
        v5291 = f$$4.style(a$$319, c$$154, d$$128);
      } else {
        v5291 = f$$4.css(a$$319, c$$154);
      }
      return v5291;
    }
    var v12290 = arguments.length;
    var v5292 = v12290 > 1;
    return f$$4.access(this, v976, a$$318, c$$153, v5292);
  }
  function v975(a$$317) {
    var b$$202;
    var c$$152;
    var d$$127 = f$$4.cache;
    var v5293 = f$$4.event;
    var e$$139 = v5293.special;
    var v5294 = f$$4.support;
    var g$$76 = v5294.deleteExpando;
    var h$$66 = 0;
    var i$$136;
    var v12291 = i$$136 = a$$317[h$$66];
    var v5301 = v12291 != null;
    for (;v5301;) {
      var v12292 = i$$136.nodeName;
      if (v12292) {
        var v17882 = f$$4.noData;
        var v21738 = i$$136.nodeName;
        var v17883 = v21738.toLowerCase();
        v12292 = v17882[v17883];
      }
      var v5295 = v12292;
      if (v5295) {
        h$$66++;
        var v12293 = i$$136 = a$$317[h$$66];
        v5301 = v12293 != null;
        continue;
      }
      var v5296 = f$$4.expando;
      c$$152 = i$$136[v5296];
      if (c$$152) {
        b$$202 = d$$127[c$$152];
        var v12294 = b$$202;
        if (v12294) {
          v12294 = b$$202.events;
        }
        var v5300 = v12294;
        if (v5300) {
          var j$$53;
          var v5298 = b$$202.events;
          for (j$$53 in v5298) {
            var v5297;
            var v12297 = e$$139[j$$53];
            if (v12297) {
              var v12295 = f$$4.event;
              v5297 = v12295.remove(i$$136, j$$53);
            } else {
              var v12296 = b$$202.handle;
              v5297 = f$$4.removeEvent(i$$136, j$$53, v12296);
            }
            v5297;
          }
          var v5299 = b$$202.handle;
          if (v5299) {
            var v12298 = b$$202.handle;
            v12298.elem = null;
          }
        }
        var v12299;
        if (g$$76) {
          var v17884 = f$$4.expando;
          v12299 = delete i$$136[v17884];
        } else {
          var v17885 = i$$136.removeAttribute;
          if (v17885) {
            var v21739 = f$$4.expando;
            v17885 = i$$136.removeAttribute(v21739);
          }
          v12299 = v17885;
        }
        v12299;
        delete d$$127[c$$152];
      }
      h$$66++;
      var v12300 = i$$136 = a$$317[h$$66];
      v5301 = v12300 != null;
    }
    return;
  }
  function v974(a$$315, b$$201, d$$126, e$$138) {
    function v973(a$$316) {
      var v12301 = a$$316.type;
      var v5302 = !v12301;
      var v12303 = !v5302;
      if (v12303) {
        var v12302 = a$$316.type;
        v5302 = be.test(v12302);
      }
      return v5302;
    }
    var g$$75;
    var h$$65;
    var i$$135;
    var j$$52 = [];
    b$$201 = b$$201 || c$$5;
    var v21740 = b$$201.createElement;
    var v17886 = typeof v21740;
    var v12304 = v17886 == "undefined";
    if (v12304) {
      var v21741 = b$$201.ownerDocument;
      var v25786 = !v21741;
      if (v25786) {
        var v25785 = b$$201[0];
        if (v25785) {
          var v27474 = b$$201[0];
          v25785 = v27474.ownerDocument;
        }
        v21741 = v25785;
      }
      var v17887 = v21741;
      var v21742 = !v17887;
      if (v21742) {
        v17887 = c$$5;
      }
      b$$201 = v17887;
    }
    var k$$31 = 0;
    var l$$43;
    var v12305 = l$$43 = a$$315[k$$31];
    var v5320 = v12305 != null;
    for (;v5320;) {
      var v12306 = typeof l$$43;
      var v5303 = v12306 == "number";
      if (v5303) {
        l$$43 = l$$43 + "";
      }
      var v5304 = !l$$43;
      if (v5304) {
        k$$31++;
        var v12307 = l$$43 = a$$315[k$$31];
        v5320 = v12307 != null;
        continue;
      }
      var v12308 = typeof l$$43;
      var v5314 = v12308 == "string";
      if (v5314) {
        var v12309 = _$$1.test(l$$43);
        var v5313 = !v12309;
        if (v5313) {
          l$$43 = b$$201.createTextNode(l$$43);
        } else {
          l$$43 = l$$43.replace(Y, "<$1></$2>");
          var v17888 = Z.exec(l$$43);
          var v21743 = !v17888;
          if (v21743) {
            v17888 = ["", ""];
          }
          var v12310 = v17888;
          var v5305 = v12310[1];
          var m$$21 = v5305.toLowerCase();
          var v5306 = bg[m$$21];
          var v12311 = !v5306;
          if (v12311) {
            v5306 = bg._default;
          }
          var n$$73 = v5306;
          var o$$11 = n$$73[0];
          var p$$34 = b$$201.createElement("div");
          var q$$12 = bh.childNodes;
          var r$$14;
          var v12312;
          var v17890 = b$$201 === c$$5;
          if (v17890) {
            v12312 = bh.appendChild(p$$34);
          } else {
            var v17889 = U(b$$201);
            v12312 = v17889.appendChild(p$$34);
          }
          v12312;
          var v17891 = n$$73[1];
          var v12313 = v17891 + l$$43;
          var v12314 = n$$73[2];
          p$$34.innerHTML = v12313 + v12314;
          var v5307 = o$$11;
          o$$11 = o$$11 - 1;
          for (;v5307;) {
            p$$34 = p$$34.lastChild;
            v5307 = o$$11;
            o$$11 = o$$11 - 1;
          }
          var v17892 = f$$4.support;
          var v12315 = v17892.tbody;
          var v5312 = !v12315;
          if (v5312) {
            var s$$24 = $$$2.test(l$$43);
            var v5308;
            var v17893 = m$$21 === "table";
            if (v17893) {
              v17893 = !s$$24;
            }
            var v12318 = v17893;
            if (v12318) {
              var v12316 = p$$34.firstChild;
              if (v12316) {
                var v17894 = p$$34.firstChild;
                v12316 = v17894.childNodes;
              }
              v5308 = v12316;
            } else {
              var v12317;
              var v25787 = n$$73[1];
              var v21744 = v25787 === "<table>";
              if (v21744) {
                v21744 = !s$$24;
              }
              var v17895 = v21744;
              if (v17895) {
                v12317 = p$$34.childNodes;
              } else {
                v12317 = [];
              }
              v5308 = v12317;
            }
            var t$$9 = v5308;
            var v5309 = t$$9.length;
            i$$135 = v5309 - 1;
            var v5311 = i$$135 >= 0;
            for (;v5311;) {
              var v17896 = t$$9[i$$135];
              var v12319 = f$$4.nodeName(v17896, "tbody");
              if (v12319) {
                var v25788 = t$$9[i$$135];
                var v21745 = v25788.childNodes;
                var v17897 = v21745.length;
                v12319 = !v17897;
              }
              var v5310 = v12319;
              if (v5310) {
                var v17898 = t$$9[i$$135];
                var v12320 = v17898.parentNode;
                var v12321 = t$$9[i$$135];
                v12320.removeChild(v12321);
              }
              --i$$135;
              v5311 = i$$135 >= 0;
            }
          }
          var v27475 = f$$4.support;
          var v25789 = v27475.leadingWhitespace;
          var v21746 = !v25789;
          if (v21746) {
            v21746 = X.test(l$$43);
          }
          var v17899 = v21746;
          if (v17899) {
            var v27476 = X.exec(l$$43);
            var v25790 = v27476[0];
            var v21747 = b$$201.createTextNode(v25790);
            var v21748 = p$$34.firstChild;
            p$$34.insertBefore(v21747, v21748);
          }
          l$$43 = p$$34.childNodes;
          if (p$$34) {
            var v21749 = p$$34.parentNode;
            v21749.removeChild(p$$34);
            var v25791 = q$$12.length;
            var v21750 = v25791 > 0;
            if (v21750) {
              var v28539 = q$$12.length;
              var v27477 = v28539 - 1;
              r$$14 = q$$12[v27477];
              var v28540 = r$$14;
              if (v28540) {
                v28540 = r$$14.parentNode;
              }
              var v27478 = v28540;
              if (v27478) {
                var v28541 = r$$14.parentNode;
                v28541.removeChild(r$$14);
              }
            }
          }
        }
      }
      var u$$7;
      var v17900 = f$$4.support;
      var v12322 = v17900.appendChecked;
      var v5318 = !v12322;
      if (v5318) {
        var v12323 = l$$43[0];
        if (v12323) {
          var v21751 = u$$7 = l$$43.length;
          var v17901 = typeof v21751;
          v12323 = v17901 == "number";
        }
        var v5317 = v12323;
        if (v5317) {
          i$$135 = 0;
          var v5316 = i$$135 < u$$7;
          for (;v5316;) {
            var v5315 = l$$43[i$$135];
            bn(v5315);
            i$$135++;
            v5316 = i$$135 < u$$7;
          }
        } else {
          bn(l$$43);
        }
      }
      var v5319;
      var v12324 = l$$43.nodeType;
      if (v12324) {
        v5319 = j$$52.push(l$$43);
      } else {
        v5319 = j$$52 = f$$4.merge(j$$52, l$$43);
      }
      v5319;
      k$$31++;
      var v12325 = l$$43 = a$$315[k$$31];
      v5320 = v12325 != null;
    }
    if (d$$126) {
      g$$75 = v973;
      k$$31 = 0;
      var v5327 = j$$52[k$$31];
      for (;v5327;) {
        h$$65 = j$$52[k$$31];
        var v17902 = e$$138;
        if (v17902) {
          v17902 = f$$4.nodeName(h$$65, "script");
        }
        var v12326 = v17902;
        if (v12326) {
          var v21752 = h$$65.type;
          var v17903 = !v21752;
          var v21754 = !v17903;
          if (v21754) {
            var v21753 = h$$65.type;
            v17903 = be.test(v21753);
          }
          v12326 = v17903;
        }
        var v5326 = v12326;
        if (v5326) {
          var v12327;
          var v17905 = h$$65.parentNode;
          if (v17905) {
            var v17904 = h$$65.parentNode;
            v12327 = v17904.removeChild(h$$65);
          } else {
            v12327 = h$$65;
          }
          var v5321 = v12327;
          e$$138.push(v5321);
        } else {
          var v12328 = h$$65.nodeType;
          var v5325 = v12328 === 1;
          if (v5325) {
            var v5322 = h$$65.getElementsByTagName("script");
            var v$$8 = f$$4.grep(v5322, g$$75);
            var v5323 = j$$52.splice;
            var v17906 = k$$31 + 1;
            var v12329 = [v17906, 0];
            var v5324 = v12329.concat(v$$8);
            v5323.apply(j$$52, v5324);
          }
          d$$126.appendChild(h$$65);
        }
        k$$31++;
        v5327 = j$$52[k$$31];
      }
    }
    return j$$52;
  }
  function v972(a$$314, b$$200, c$$151) {
    var d$$125;
    var e$$137;
    var g$$74;
    var JSCompiler_temp$$7;
    var v21755 = f$$4.support;
    var v17907 = v21755.html5Clone;
    var v21756 = !v17907;
    if (v21756) {
      v17907 = f$$4.isXMLDoc(a$$314);
    }
    var v12330 = v17907;
    var v17909 = !v12330;
    if (v17909) {
      var v27479 = a$$314.nodeName;
      var v25792 = "<" + v27479;
      var v21757 = v25792 + ">";
      var v17908 = bc.test(v21757);
      v12330 = !v17908;
    }
    var v5329 = v12330;
    if (v5329) {
      var v5328 = !0;
      JSCompiler_temp$$7 = a$$314.cloneNode(v5328);
    } else {
      var a$$inline_29 = a$$314;
      var b$$inline_30 = c$$5.createElement("div");
      bh.appendChild(b$$inline_30);
      b$$inline_30.innerHTML = a$$inline_29.outerHTML;
      JSCompiler_temp$$7 = b$$inline_30.firstChild;
    }
    var h$$64 = JSCompiler_temp$$7;
    var v27480 = f$$4.support;
    var v25793 = v27480.noCloneEvent;
    var v21758 = !v25793;
    var v25795 = !v21758;
    if (v25795) {
      var v27481 = f$$4.support;
      var v25794 = v27481.noCloneChecked;
      v21758 = !v25794;
    }
    var v17910 = v21758;
    if (v17910) {
      var v25796 = a$$314.nodeType;
      var v21759 = v25796 === 1;
      var v25798 = !v21759;
      if (v25798) {
        var v25797 = a$$314.nodeType;
        v21759 = v25797 === 11;
      }
      v17910 = v21759;
    }
    var v12331 = v17910;
    if (v12331) {
      var v17911 = f$$4.isXMLDoc(a$$314);
      v12331 = !v17911;
    }
    var v5332 = v12331;
    if (v5332) {
      bk(a$$314, h$$64);
      d$$125 = bl(a$$314);
      e$$137 = bl(h$$64);
      g$$74 = 0;
      var v5331 = d$$125[g$$74];
      for (;v5331;) {
        var v5330 = e$$137[g$$74];
        if (v5330) {
          var v12332 = d$$125[g$$74];
          var v12333 = e$$137[g$$74];
          bk(v12332, v12333);
        }
        ++g$$74;
        v5331 = d$$125[g$$74];
      }
    }
    if (b$$200) {
      bj(a$$314, h$$64);
      if (c$$151) {
        d$$125 = bl(a$$314);
        e$$137 = bl(h$$64);
        g$$74 = 0;
        var v5335 = d$$125[g$$74];
        for (;v5335;) {
          var v5333 = d$$125[g$$74];
          var v5334 = e$$137[g$$74];
          bj(v5333, v5334);
          ++g$$74;
          v5335 = d$$125[g$$74];
        }
      }
    }
    d$$125 = e$$137 = null;
    return h$$64;
  }
  function v971(a$$313, b$$199) {
    function v970(c$$150) {
      var d$$124 = [];
      var e$$136 = f$$4(c$$150);
      var v12334 = this.length;
      var v5336 = v12334 === 1;
      if (v5336) {
        var v12335 = this[0];
        v5336 = v12335.parentNode;
      }
      var g$$73 = v5336;
      var v21760 = g$$73;
      if (v21760) {
        var v25799 = g$$73.nodeType;
        v21760 = v25799 === 11;
      }
      var v17912 = v21760;
      if (v17912) {
        var v25800 = g$$73.childNodes;
        var v21761 = v25800.length;
        v17912 = v21761 === 1;
      }
      var v12336 = v17912;
      if (v12336) {
        var v17913 = e$$136.length;
        v12336 = v17913 === 1;
      }
      var v5338 = v12336;
      if (v5338) {
        var v5337 = this[0];
        e$$136[b$$199](v5337);
        return this;
      }
      var h$$63 = 0;
      var i$$134 = e$$136.length;
      var v5340 = h$$63 < i$$134;
      for (;v5340;) {
        var v12337;
        var v17915 = h$$63 > 0;
        if (v17915) {
          var v17914 = !0;
          v12337 = this.clone(v17914);
        } else {
          v12337 = this;
        }
        var v5339 = v12337;
        var j$$51 = v5339.get();
        var v17916 = e$$136[h$$63];
        var v12338 = f$$4(v17916);
        v12338[b$$199](j$$51);
        d$$124 = d$$124.concat(j$$51);
        h$$63++;
        v5340 = h$$63 < i$$134;
      }
      var v5341 = e$$136.selector;
      return this.pushStack(d$$124, a$$313, v5341);
    }
    var v5342 = f$$4.fn;
    v5342[a$$313] = v970;
    return;
  }
  function v969(a$$312, b$$198, d$$123) {
    var e$$135;
    var g$$72;
    var h$$62;
    var i$$133;
    var j$$50 = a$$312[0];
    var v27482 = b$$198;
    if (v27482) {
      v27482 = b$$198[0];
    }
    var v25801 = v27482;
    if (v25801) {
      var v28542 = b$$198[0];
      var v27483 = v28542.ownerDocument;
      var v28543 = !v27483;
      if (v28543) {
        v27483 = b$$198[0];
      }
      i$$133 = v27483;
    }
    var v25802 = i$$133.createDocumentFragment;
    var v27484 = !v25802;
    if (v27484) {
      i$$133 = c$$5;
    }
    var v30366 = a$$312.length;
    var v30192 = v30366 === 1;
    if (v30192) {
      var v30367 = typeof j$$50;
      v30192 = v30367 == "string";
    }
    var v29946 = v30192;
    if (v29946) {
      var v30193 = j$$50.length;
      v29946 = v30193 < 512;
    }
    var v29661 = v29946;
    if (v29661) {
      v29661 = i$$133 === c$$5;
    }
    var v29220 = v29661;
    if (v29220) {
      var v29662 = j$$50.charAt(0);
      v29220 = v29662 === "<";
    }
    var v28544 = v29220;
    if (v28544) {
      var v29221 = bb.test(j$$50);
      v28544 = !v29221;
    }
    var v27485 = v28544;
    if (v27485) {
      var v29222 = f$$4.support;
      var v28545 = v29222.checkClone;
      var v29224 = !v28545;
      if (v29224) {
        var v29223 = bd.test(j$$50);
        v28545 = !v29223;
      }
      v27485 = v28545;
    }
    var v25803 = v27485;
    if (v25803) {
      var v28546 = f$$4.support;
      var v27486 = v28546.html5Clone;
      var v28548 = !v27486;
      if (v28548) {
        var v28547 = bc.test(j$$50);
        v27486 = !v28547;
      }
      v25803 = v27486;
    }
    var v21762 = v25803;
    if (v21762) {
      g$$72 = !0;
      var v28549 = f$$4.fragments;
      h$$62 = v28549[j$$50];
      var v28550 = h$$62;
      if (v28550) {
        v28550 = h$$62 !== 1;
      }
      var v27487 = v28550;
      if (v27487) {
        e$$135 = h$$62;
      }
    }
    var v21763 = !e$$135;
    if (v21763) {
      e$$135 = i$$133.createDocumentFragment();
      f$$4.clean(a$$312, i$$133, e$$135, d$$123);
    }
    if (g$$72) {
      var v17917 = f$$4.fragments;
      var v21764;
      if (h$$62) {
        v21764 = e$$135;
      } else {
        v21764 = 1;
      }
      v17917[j$$50] = v21764;
    }
    return{fragment:e$$135, cacheable:g$$72};
  }
  function v968(a$$310, c$$149, d$$122) {
    function v967(a$$311, b$$197) {
      var v12339;
      var v17920 = b$$197.src;
      if (v17920) {
        var v21765 = !1;
        var v21766 = b$$197.src;
        var v21767 = !1;
        var v17918 = {type:"GET", global:v21765, url:v21766, async:v21767, dataType:"script"};
        v12339 = f$$4.ajax(v17918);
      } else {
        var v28551 = b$$197.text;
        var v29225 = !v28551;
        if (v29225) {
          v28551 = b$$197.textContent;
        }
        var v27488 = v28551;
        var v28552 = !v27488;
        if (v28552) {
          v27488 = b$$197.innerHTML;
        }
        var v25804 = v27488;
        var v27489 = !v25804;
        if (v27489) {
          v25804 = "";
        }
        var v21768 = v25804;
        var v17919 = v21768.replace(bf, "/*$0*/");
        v12339 = f$$4.globalEval(v17919);
      }
      v12339;
      var v12340 = b$$197.parentNode;
      if (v12340) {
        var v17921 = b$$197.parentNode;
        v17921.removeChild(b$$197);
      }
      return;
    }
    function v966(e$$134) {
      var g$$71 = f$$4(this);
      var v12341 = a$$310;
      var v21769;
      if (c$$149) {
        v21769 = g$$71.html();
      } else {
        v21769 = b$$9;
      }
      var v17922 = v21769;
      var v31126 = j$$49.call(this, e$$134, v17922);
      v12341[0] = v31126;
      g$$71.domManip(a$$310, c$$149, d$$122);
      return;
    }
    function v965() {
      var v5343 = f$$4(this);
      var v5344 = !0;
      v5343.domManip(a$$310, c$$149, d$$122, v5344);
      return;
    }
    var e$$133;
    var g$$70;
    var h$$61;
    var i$$132;
    var j$$49 = a$$310[0];
    var k$$30 = [];
    var v27490 = f$$4.support;
    var v25805 = v27490.checkClone;
    var v21770 = !v25805;
    if (v21770) {
      var v25806 = arguments.length;
      v21770 = v25806 === 3;
    }
    var v17923 = v21770;
    if (v17923) {
      var v21771 = typeof j$$49;
      v17923 = v21771 == "string";
    }
    var v12342 = v17923;
    if (v12342) {
      v12342 = bd.test(j$$49);
    }
    var v5345 = v12342;
    if (v5345) {
      return this.each(v965);
    }
    var v5346 = f$$4.isFunction(j$$49);
    if (v5346) {
      return this.each(v966);
    }
    var v5352 = this[0];
    if (v5352) {
      var v21772 = j$$49;
      if (v21772) {
        v21772 = j$$49.parentNode;
      }
      i$$132 = v21772;
      var v21773;
      var v29663 = f$$4.support;
      var v29226 = v29663.parentNode;
      if (v29226) {
        v29226 = i$$132;
      }
      var v28553 = v29226;
      if (v28553) {
        var v29227 = i$$132.nodeType;
        v28553 = v29227 === 11;
      }
      var v27491 = v28553;
      if (v27491) {
        var v29228 = i$$132.childNodes;
        var v28554 = v29228.length;
        var v28555 = this.length;
        v27491 = v28554 === v28555;
      }
      var v25807 = v27491;
      if (v25807) {
        v21773 = e$$133 = {fragment:i$$132};
      } else {
        v21773 = e$$133 = f$$4.buildFragment(a$$310, this, k$$30);
      }
      v21773;
      h$$61 = e$$133.fragment;
      var v12343;
      var v25808 = h$$61.childNodes;
      var v21774 = v25808.length;
      var v17924 = v21774 === 1;
      if (v17924) {
        v12343 = g$$70 = h$$61 = h$$61.firstChild;
      } else {
        v12343 = g$$70 = h$$61.firstChild;
      }
      v12343;
      if (g$$70) {
        var v5347 = c$$149;
        if (v5347) {
          v5347 = f$$4.nodeName(g$$70, "tr");
        }
        c$$149 = v5347;
        var l$$42 = 0;
        var m$$20 = this.length;
        var n$$72 = m$$20 - 1;
        var v5350 = l$$42 < m$$20;
        for (;v5350;) {
          var v12344;
          if (c$$149) {
            var v17925 = this[l$$42];
            v12344 = bi(v17925, g$$70);
          } else {
            v12344 = this[l$$42];
          }
          var v5348 = v12344;
          var v12345;
          var v21775 = e$$133.cacheable;
          var v25810 = !v21775;
          if (v25810) {
            var v25809 = m$$20 > 1;
            if (v25809) {
              v25809 = l$$42 < n$$72;
            }
            v21775 = v25809;
          }
          var v17928 = v21775;
          if (v17928) {
            var v17926 = !0;
            var v17927 = !0;
            v12345 = f$$4.clone(h$$61, v17926, v17927);
          } else {
            v12345 = h$$61;
          }
          var v5349 = v12345;
          d$$122.call(v5348, v5349);
          l$$42++;
          v5350 = l$$42 < m$$20;
        }
      }
      var v5351 = k$$30.length;
      if (v5351) {
        f$$4.each(k$$30, v967);
      }
    }
    return this;
  }
  function v964(a$$309) {
    var v5353 = !0;
    return this.remove(a$$309, v5353);
  }
  function v963(a$$308) {
    function v962() {
      var b$$196 = this.nextSibling;
      var c$$148 = this.parentNode;
      var v12346 = f$$4(this);
      v12346.remove();
      var v12347;
      if (b$$196) {
        var v17929 = f$$4(b$$196);
        v12347 = v17929.before(a$$308);
      } else {
        var v17930 = f$$4(c$$148);
        v12347 = v17930.append(a$$308);
      }
      v12347;
      return;
    }
    function v961(b$$195) {
      var c$$147 = f$$4(this);
      var d$$121 = c$$147.html();
      var v5354 = a$$308.call(this, b$$195, d$$121);
      c$$147.replaceWith(v5354);
      return;
    }
    var v12348 = this[0];
    if (v12348) {
      var v17931 = this[0];
      v12348 = v17931.parentNode;
    }
    var v5357 = v12348;
    if (v5357) {
      var v5355 = f$$4.isFunction(a$$308);
      if (v5355) {
        return this.each(v961);
      }
      var v12349 = typeof a$$308;
      var v5356 = v12349 != "string";
      if (v5356) {
        var v12350 = f$$4(a$$308);
        a$$308 = v12350.detach();
      }
      return this.each(v962);
    }
    var v5358;
    var v12352 = this.length;
    if (v12352) {
      var v21776;
      var v25811 = f$$4.isFunction(a$$308);
      if (v25811) {
        v21776 = a$$308();
      } else {
        v21776 = a$$308;
      }
      var v17932 = v21776;
      var v12351 = f$$4(v17932);
      v5358 = this.pushStack(v12351, "replaceWith", a$$308);
    } else {
      v5358 = this;
    }
    return v5358;
  }
  function v960(a$$306) {
    function v959(a$$307) {
      var v5359 = this[0];
      var v12353 = !v5359;
      if (v12353) {
        v5359 = {};
      }
      var c$$146 = v5359;
      var d$$120 = 0;
      var e$$132 = this.length;
      var v5361 = a$$307 === b$$9;
      if (v5361) {
        var v5360;
        var v17933 = c$$146.nodeType;
        var v12355 = v17933 === 1;
        if (v12355) {
          var v12354 = c$$146.innerHTML;
          v5360 = v12354.replace(W, "");
        } else {
          v5360 = null;
        }
        return v5360;
      }
      var v25812 = typeof a$$307;
      var v21777 = v25812 == "string";
      if (v21777) {
        var v25813 = ba.test(a$$307);
        v21777 = !v25813;
      }
      var v17934 = v21777;
      if (v17934) {
        var v25814 = f$$4.support;
        var v21778 = v25814.leadingWhitespace;
        var v25816 = !v21778;
        if (v25816) {
          var v25815 = X.test(a$$307);
          v21778 = !v25815;
        }
        v17934 = v21778;
      }
      var v12356 = v17934;
      if (v12356) {
        var v21779 = bg;
        var v28556 = Z.exec(a$$307);
        var v29229 = !v28556;
        if (v29229) {
          v28556 = ["", ""];
        }
        var v27492 = v28556;
        var v25817 = v27492[1];
        var v21780 = v25817.toLowerCase();
        var v17935 = v21779[v21780];
        v12356 = !v17935;
      }
      var v5363 = v12356;
      if (v5363) {
        a$$307 = a$$307.replace(Y, "<$1></$2>");
        try {
          var v5362 = d$$120 < e$$132;
          for (;v5362;) {
            var v12357 = this[d$$120];
            var v17936 = !v12357;
            if (v17936) {
              v12357 = {};
            }
            c$$146 = v12357;
            var v17937 = c$$146.nodeType;
            var v12358 = v17937 === 1;
            if (v12358) {
              var v21781 = c$$146.getElementsByTagName("*");
              f$$4.cleanData(v21781);
              c$$146.innerHTML = a$$307;
            }
            d$$120++;
            v5362 = d$$120 < e$$132;
          }
          c$$146 = 0;
        } catch (g$$69) {
        }
      }
      if (c$$146) {
        var v12359 = this.empty();
        v12359.append(a$$307);
      }
      return;
    }
    var v5364 = arguments.length;
    return f$$4.access(this, v959, null, a$$306, v5364);
  }
  function v958(a$$305, b$$194) {
    function v957() {
      return f$$4.clone(this, a$$305, b$$194);
    }
    var v12360;
    var v17938 = a$$305 == null;
    if (v17938) {
      v12360 = !1;
    } else {
      v12360 = a$$305;
    }
    a$$305 = v12360;
    var v12361;
    var v17939 = b$$194 == null;
    if (v17939) {
      v12361 = a$$305;
    } else {
      v12361 = b$$194;
    }
    b$$194 = v12361;
    return this.map(v957);
  }
  function v956() {
    var a$$304 = 0;
    var b$$193;
    var v12362 = b$$193 = this[a$$304];
    var v5368 = v12362 != null;
    for (;v5368;) {
      var v12363 = b$$193.nodeType;
      var v5365 = v12363 === 1;
      if (v5365) {
        var v12364 = b$$193.getElementsByTagName("*");
        f$$4.cleanData(v12364);
      }
      var v5367 = b$$193.firstChild;
      for (;v5367;) {
        var v5366 = b$$193.firstChild;
        b$$193.removeChild(v5366);
        v5367 = b$$193.firstChild;
      }
      a$$304++;
      var v12365 = b$$193 = this[a$$304];
      v5368 = v12365 != null;
    }
    return this;
  }
  function v955(a$$303, b$$192) {
    var c$$145 = 0;
    var d$$119;
    var v12366 = d$$119 = this[c$$145];
    var v5370 = v12366 != null;
    for (;v5370;) {
      var v12367 = !a$$303;
      var v17941 = !v12367;
      if (v17941) {
        var v21782 = [d$$119];
        var v17940 = f$$4.filter(a$$303, v21782);
        v12367 = v17940.length;
      }
      var v5369 = v12367;
      if (v5369) {
        var v17942 = !b$$192;
        if (v17942) {
          var v21783 = d$$119.nodeType;
          v17942 = v21783 === 1;
        }
        var v12368 = v17942;
        if (v12368) {
          var v21784 = d$$119.getElementsByTagName("*");
          f$$4.cleanData(v21784);
          var v21785 = [d$$119];
          f$$4.cleanData(v21785);
        }
        var v12369 = d$$119.parentNode;
        if (v12369) {
          var v17943 = d$$119.parentNode;
          v17943.removeChild(d$$119);
        }
      }
      c$$145++;
      var v12370 = d$$119 = this[c$$145];
      v5370 = v12370 != null;
    }
    return this;
  }
  function v954() {
    function v953(a$$302) {
      var v5371 = this.parentNode;
      var v5372 = this.nextSibling;
      v5371.insertBefore(a$$302, v5372);
      return;
    }
    var v12371 = this[0];
    if (v12371) {
      var v17944 = this[0];
      v12371 = v17944.parentNode;
    }
    var v5374 = v12371;
    if (v5374) {
      var v5373 = !1;
      return this.domManip(arguments, v5373, v953);
    }
    var v5377 = arguments.length;
    if (v5377) {
      var a$$301 = this.pushStack(this, "after", arguments);
      var v5375 = a$$301.push;
      var v5376 = f$$4.clean(arguments);
      v5375.apply(a$$301, v5376);
      return a$$301;
    }
    return;
  }
  function v952() {
    function v951(a$$300) {
      var v5378 = this.parentNode;
      v5378.insertBefore(a$$300, this);
      return;
    }
    var v12372 = this[0];
    if (v12372) {
      var v17945 = this[0];
      v12372 = v17945.parentNode;
    }
    var v5380 = v12372;
    if (v5380) {
      var v5379 = !1;
      return this.domManip(arguments, v5379, v951);
    }
    var v5383 = arguments.length;
    if (v5383) {
      var a$$299 = f$$4.clean(arguments);
      var v5381 = a$$299.push;
      var v5382 = this.toArray();
      v5381.apply(a$$299, v5382);
      return this.pushStack(a$$299, "before", arguments);
    }
    return;
  }
  function v950() {
    function v949(a$$298) {
      var v12373 = this.nodeType;
      var v5384 = v12373 === 1;
      if (v5384) {
        var v12374 = this.firstChild;
        this.insertBefore(a$$298, v12374);
      }
      return;
    }
    var v5385 = !0;
    return this.domManip(arguments, v5385, v949);
  }
  function v948() {
    function v947(a$$297) {
      var v12375 = this.nodeType;
      var v5386 = v12375 === 1;
      if (v5386) {
        this.appendChild(a$$297);
      }
      return;
    }
    var v5387 = !0;
    return this.domManip(arguments, v5387, v947);
  }
  function v946() {
    function v945() {
      var v5388 = f$$4.nodeName(this, "body");
      var v12378 = !v5388;
      if (v12378) {
        var v12376 = f$$4(this);
        var v12377 = this.childNodes;
        v12376.replaceWith(v12377);
      }
      return;
    }
    var v12379 = this.parent();
    var v5389 = v12379.each(v945);
    return v5389.end();
  }
  function v944(a$$296) {
    function v943(c$$144) {
      var v5390 = f$$4(this);
      var v12380;
      if (b$$191) {
        v12380 = a$$296.call(this, c$$144);
      } else {
        v12380 = a$$296;
      }
      var v5391 = v12380;
      v5390.wrapAll(v5391);
      return;
    }
    var b$$191 = f$$4.isFunction(a$$296);
    return this.each(v943);
  }
  function v942(a$$295) {
    function v941() {
      var b$$190 = f$$4(this);
      var c$$143 = b$$190.contents();
      var v5392;
      var v12381 = c$$143.length;
      if (v12381) {
        v5392 = c$$143.wrapAll(a$$295);
      } else {
        v5392 = b$$190.append(a$$295);
      }
      v5392;
      return;
    }
    function v940(b$$189) {
      var v5393 = f$$4(this);
      var v5394 = a$$295.call(this, b$$189);
      v5393.wrapInner(v5394);
      return;
    }
    var v5395 = f$$4.isFunction(a$$295);
    if (v5395) {
      return this.each(v940);
    }
    return this.each(v941);
  }
  function v939(a$$293) {
    function v938() {
      var a$$294 = this;
      var v12382 = a$$294.firstChild;
      if (v12382) {
        var v21786 = a$$294.firstChild;
        var v17946 = v21786.nodeType;
        v12382 = v17946 === 1;
      }
      var v5396 = v12382;
      for (;v5396;) {
        a$$294 = a$$294.firstChild;
        var v12383 = a$$294.firstChild;
        if (v12383) {
          var v21787 = a$$294.firstChild;
          var v17947 = v21787.nodeType;
          v12383 = v17947 === 1;
        }
        v5396 = v12383;
      }
      return a$$294;
    }
    function v937(b$$188) {
      var v5397 = f$$4(this);
      var v5398 = a$$293.call(this, b$$188);
      v5397.wrapAll(v5398);
      return;
    }
    var v5399 = f$$4.isFunction(a$$293);
    if (v5399) {
      return this.each(v937);
    }
    var v5402 = this[0];
    if (v5402) {
      var v21788 = this[0];
      var v17948 = v21788.ownerDocument;
      var v12384 = f$$4(a$$293, v17948);
      var v5400 = v12384.eq(0);
      var v5401 = !0;
      var b$$187 = v5400.clone(v5401);
      var v17949 = this[0];
      var v12385 = v17949.parentNode;
      if (v12385) {
        var v17950 = this[0];
        b$$187.insertBefore(v17950);
      }
      var v12386 = b$$187.map(v938);
      v12386.append(this);
    }
    return this;
  }
  function v936(a$$291) {
    function v935(a$$292) {
      var v5403;
      var v12389 = a$$292 === b$$9;
      if (v12389) {
        v5403 = f$$4.text(this);
      } else {
        var v12387 = this.empty();
        var v25818 = this[0];
        if (v25818) {
          var v27493 = this[0];
          v25818 = v27493.ownerDocument;
        }
        var v21789 = v25818;
        var v25819 = !v21789;
        if (v25819) {
          v21789 = c$$5;
        }
        var v17951 = v21789;
        var v12388 = v17951.createTextNode(a$$292);
        v5403 = v12387.append(v12388);
      }
      return v5403;
    }
    var v5404 = arguments.length;
    return f$$4.access(this, v935, null, a$$291, v5404);
  }
  function v934(a$$290, b$$186) {
    var c$$142 = [];
    for (;a$$290;) {
      var v17952 = a$$290.nodeType;
      var v12390 = v17952 === 1;
      if (v12390) {
        v12390 = a$$290 !== b$$186;
      }
      var v5405 = v12390;
      if (v5405) {
        c$$142.push(a$$290);
      }
      a$$290 = a$$290.nextSibling;
    }
    return c$$142;
  }
  function v933(a$$289, b$$185, c$$141, d$$118) {
    b$$185 = b$$185 || 1;
    var e$$131 = 0;
    for (;a$$289;) {
      var v17953 = a$$289.nodeType;
      var v12391 = v17953 === 1;
      if (v12391) {
        var v17954 = e$$131 = e$$131 + 1;
        v12391 = v17954 === b$$185;
      }
      var v5406 = v12391;
      if (v5406) {
        break;
      }
      a$$289 = a$$289[c$$141];
    }
    return a$$289;
  }
  function v932(a$$288, c$$140, d$$117) {
    var e$$130 = [];
    var g$$68 = a$$288[c$$140];
    var v17955 = g$$68;
    if (v17955) {
      var v21790 = g$$68.nodeType;
      v17955 = v21790 !== 9;
    }
    var v12392 = v17955;
    if (v12392) {
      var v21791 = d$$117 === b$$9;
      var v25821 = !v21791;
      if (v25821) {
        var v25820 = g$$68.nodeType;
        v21791 = v25820 !== 1;
      }
      var v17956 = v21791;
      var v21793 = !v17956;
      if (v21793) {
        var v25822 = f$$4(g$$68);
        var v21792 = v25822.is(d$$117);
        v17956 = !v21792;
      }
      v12392 = v17956;
    }
    var v5407 = v12392;
    for (;v5407;) {
      var v17957 = g$$68.nodeType;
      var v12393 = v17957 === 1;
      if (v12393) {
        e$$130.push(g$$68);
      }
      g$$68 = g$$68[c$$140];
      var v17958 = g$$68;
      if (v17958) {
        var v21794 = g$$68.nodeType;
        v17958 = v21794 !== 9;
      }
      var v12394 = v17958;
      if (v12394) {
        var v21795 = d$$117 === b$$9;
        var v25824 = !v21795;
        if (v25824) {
          var v25823 = g$$68.nodeType;
          v21795 = v25823 !== 1;
        }
        var v17959 = v21795;
        var v21797 = !v17959;
        if (v21797) {
          var v25825 = f$$4(g$$68);
          var v21796 = v25825.is(d$$117);
          v17959 = !v21796;
        }
        v12394 = v17959;
      }
      v5407 = v12394;
    }
    return e$$130;
  }
  function v931(a$$287, b$$184, c$$139) {
    if (c$$139) {
      var v12395 = ":not(" + a$$287;
      a$$287 = v12395 + ")";
    }
    var v5408;
    var v17960 = b$$184.length;
    var v12398 = v17960 === 1;
    if (v12398) {
      var v12396;
      var v21798 = f$$4.find;
      var v21799 = b$$184[0];
      var v17962 = v21798.matchesSelector(v21799, a$$287);
      if (v17962) {
        var v17961 = b$$184[0];
        v12396 = [v17961];
      } else {
        v12396 = [];
      }
      v5408 = v12396;
    } else {
      var v12397 = f$$4.find;
      v5408 = v12397.matches(a$$287, b$$184);
    }
    return v5408;
  }
  function v930(a$$286, b$$183) {
    function v929(c$$138, d$$116) {
      var e$$129 = f$$4.map(this, b$$183, c$$138);
      var v21800 = L.test(a$$286);
      var v25826 = !v21800;
      if (v25826) {
        d$$116 = c$$138;
      }
      var v25827 = d$$116;
      if (v25827) {
        var v27494 = typeof d$$116;
        v25827 = v27494 == "string";
      }
      var v21801 = v25827;
      if (v21801) {
        e$$129 = f$$4.filter(d$$116, e$$129);
      }
      var v17963;
      var v27495 = this.length;
      var v25828 = v27495 > 1;
      if (v25828) {
        var v27496 = R[a$$286];
        v25828 = !v27496;
      }
      var v21802 = v25828;
      if (v21802) {
        v17963 = f$$4.unique(e$$129);
      } else {
        v17963 = e$$129;
      }
      e$$129 = v17963;
      var v25829 = this.length;
      var v21803 = v25829 > 1;
      var v25830 = !v21803;
      if (v25830) {
        v21803 = N.test(d$$116);
      }
      var v17964 = v21803;
      if (v17964) {
        v17964 = M.test(a$$286);
      }
      var v12399 = v17964;
      if (v12399) {
        e$$129 = e$$129.reverse();
      }
      var v12400 = P.call(arguments);
      var v5409 = v12400.join(",");
      return this.pushStack(e$$129, a$$286, v5409);
    }
    var v5410 = f$$4.fn;
    v5410[a$$286] = v929;
    return;
  }
  function v928(a$$285) {
    var v5411;
    var v12403 = f$$4.nodeName(a$$285, "iframe");
    if (v12403) {
      var v12401 = a$$285.contentDocument;
      var v17966 = !v12401;
      if (v17966) {
        var v17965 = a$$285.contentWindow;
        v12401 = v17965.document;
      }
      v5411 = v12401;
    } else {
      var v12402 = a$$285.childNodes;
      v5411 = f$$4.makeArray(v12402);
    }
    return v5411;
  }
  function v927(a$$284) {
    var v5412 = a$$284.firstChild;
    return f$$4.sibling(v5412);
  }
  function v926(a$$283) {
    var v17967 = a$$283.parentNode;
    var v21804 = !v17967;
    if (v21804) {
      v17967 = {};
    }
    var v12404 = v17967;
    var v5413 = v12404.firstChild;
    return f$$4.sibling(v5413, a$$283);
  }
  function v925(a$$282, b$$182, c$$137) {
    return f$$4.dir(a$$282, "previousSibling", c$$137);
  }
  function v924(a$$281, b$$181, c$$136) {
    return f$$4.dir(a$$281, "nextSibling", c$$136);
  }
  function v923(a$$280) {
    return f$$4.dir(a$$280, "previousSibling");
  }
  function v922(a$$279) {
    return f$$4.dir(a$$279, "nextSibling");
  }
  function v921(a$$278) {
    return f$$4.nth(a$$278, 2, "previousSibling");
  }
  function v920(a$$277) {
    return f$$4.nth(a$$277, 2, "nextSibling");
  }
  function v919(a$$276, b$$180, c$$135) {
    return f$$4.dir(a$$276, "parentNode", c$$135);
  }
  function v918(a$$275) {
    return f$$4.dir(a$$275, "parentNode");
  }
  function v917(a$$274) {
    var b$$179 = a$$274.parentNode;
    var v5414;
    var v17968 = b$$179;
    if (v17968) {
      var v21805 = b$$179.nodeType;
      v17968 = v21805 !== 11;
    }
    var v12405 = v17968;
    if (v12405) {
      v5414 = b$$179;
    } else {
      v5414 = null;
    }
    return v5414;
  }
  function v916() {
    var v5415 = this.prevObject;
    return this.add(v5415);
  }
  function v915(a$$273, b$$178) {
    var v5416;
    var v17969 = typeof a$$273;
    var v12407 = v17969 == "string";
    if (v12407) {
      v5416 = f$$4(a$$273, b$$178);
    } else {
      var v17970;
      var v25831 = a$$273;
      if (v25831) {
        v25831 = a$$273.nodeType;
      }
      var v21806 = v25831;
      if (v21806) {
        v17970 = [a$$273];
      } else {
        v17970 = a$$273;
      }
      var v12406 = v17970;
      v5416 = f$$4.makeArray(v12406);
    }
    var c$$134 = v5416;
    var v5417 = this.get();
    var d$$115 = f$$4.merge(v5417, c$$134);
    var v12408;
    var v25832 = c$$134[0];
    var v21807 = S(v25832);
    var v25834 = !v21807;
    if (v25834) {
      var v25833 = d$$115[0];
      v21807 = S(v25833);
    }
    var v17971 = v21807;
    if (v17971) {
      v12408 = d$$115;
    } else {
      v12408 = f$$4.unique(d$$115);
    }
    var v5418 = v12408;
    return this.pushStack(v5418);
  }
  function v914(a$$272) {
    var v5420 = !a$$272;
    if (v5420) {
      var v5419;
      var v17972 = this[0];
      if (v17972) {
        var v21808 = this[0];
        v17972 = v21808.parentNode;
      }
      var v12410 = v17972;
      if (v12410) {
        var v12409 = this.prevAll();
        v5419 = v12409.length;
      } else {
        v5419 = -1;
      }
      return v5419;
    }
    var v12411 = typeof a$$272;
    var v5423 = v12411 == "string";
    if (v5423) {
      var v5421 = this[0];
      var v5422 = f$$4(a$$272);
      return f$$4.inArray(v5421, v5422);
    }
    var v12412;
    var v17973 = a$$272.jquery;
    if (v17973) {
      v12412 = a$$272[0];
    } else {
      v12412 = a$$272;
    }
    var v5424 = v12412;
    return f$$4.inArray(v5424, this);
  }
  function v913(a$$271, b$$177) {
    var c$$133 = [];
    var d$$114;
    var e$$128;
    var g$$67 = this[0];
    var v5428 = f$$4.isArray(a$$271);
    if (v5428) {
      var h$$60 = 1;
      var v17974 = g$$67;
      if (v17974) {
        v17974 = g$$67.ownerDocument;
      }
      var v12413 = v17974;
      if (v12413) {
        v12413 = g$$67 !== b$$177;
      }
      var v5427 = v12413;
      for (;v5427;) {
        d$$114 = 0;
        var v12414 = a$$271.length;
        var v5426 = d$$114 < v12414;
        for (;v5426;) {
          var v12415 = f$$4(g$$67);
          var v12416 = a$$271[d$$114];
          var v5425 = v12415.is(v12416);
          if (v5425) {
            var v17975 = a$$271[d$$114];
            var v12417 = {selector:v17975, elem:g$$67, level:h$$60};
            c$$133.push(v12417);
          }
          d$$114++;
          var v12418 = a$$271.length;
          v5426 = d$$114 < v12418;
        }
        g$$67 = g$$67.parentNode;
        h$$60++;
        var v17976 = g$$67;
        if (v17976) {
          v17976 = g$$67.ownerDocument;
        }
        var v12419 = v17976;
        if (v12419) {
          v12419 = g$$67 !== b$$177;
        }
        v5427 = v12419;
      }
      return c$$133;
    }
    var v5429;
    var v17977 = Q.test(a$$271);
    var v21810 = !v17977;
    if (v21810) {
      var v21809 = typeof a$$271;
      v17977 = v21809 != "string";
    }
    var v12421 = v17977;
    if (v12421) {
      var v17978 = b$$177;
      var v21811 = !v17978;
      if (v21811) {
        v17978 = this.context;
      }
      var v12420 = v17978;
      v5429 = f$$4(a$$271, v12420);
    } else {
      v5429 = 0;
    }
    var i$$131 = v5429;
    d$$114 = 0;
    e$$128 = this.length;
    var v5432 = d$$114 < e$$128;
    for (;v5432;) {
      g$$67 = this[d$$114];
      for (;g$$67;) {
        var v12422;
        if (i$$131) {
          var v17979 = i$$131.index(g$$67);
          v12422 = v17979 > -1;
        } else {
          var v17980 = f$$4.find;
          v12422 = v17980.matchesSelector(g$$67, a$$271);
        }
        var v5430 = v12422;
        if (v5430) {
          c$$133.push(g$$67);
          break;
        }
        g$$67 = g$$67.parentNode;
        var v21812 = !g$$67;
        var v25836 = !v21812;
        if (v25836) {
          var v25835 = g$$67.ownerDocument;
          v21812 = !v25835;
        }
        var v17981 = v21812;
        var v21813 = !v17981;
        if (v21813) {
          v17981 = g$$67 === b$$177;
        }
        var v12423 = v17981;
        var v17983 = !v12423;
        if (v17983) {
          var v17982 = g$$67.nodeType;
          v12423 = v17982 === 11;
        }
        var v5431 = v12423;
        if (v5431) {
          break;
        }
      }
      d$$114++;
      v5432 = d$$114 < e$$128;
    }
    var v5433;
    var v17984 = c$$133.length;
    var v12424 = v17984 > 1;
    if (v12424) {
      v5433 = f$$4.unique(c$$133);
    } else {
      v5433 = c$$133;
    }
    c$$133 = v5433;
    return this.pushStack(c$$133, "closest", a$$271);
  }
  function v912(a$$270) {
    var v12425 = !a$$270;
    var v5434 = !v12425;
    if (v5434) {
      var v12426;
      var v21814 = typeof a$$270;
      var v17987 = v21814 == "string";
      if (v17987) {
        var v17985;
        var v21817 = Q.test(a$$270);
        if (v21817) {
          var v27497 = this.context;
          var v25837 = f$$4(a$$270, v27497);
          var v25838 = this[0];
          var v21815 = v25837.index(v25838);
          v17985 = v21815 >= 0;
        } else {
          var v25839 = f$$4.filter(a$$270, this);
          var v21816 = v25839.length;
          v17985 = v21816 > 0;
        }
        v12426 = v17985;
      } else {
        var v21818 = this.filter(a$$270);
        var v17986 = v21818.length;
        v12426 = v17986 > 0;
      }
      v5434 = v12426;
    }
    return v5434;
  }
  function v911(a$$269) {
    var v12427 = !0;
    var v5435 = T$$2(this, a$$269, v12427);
    return this.pushStack(v5435, "filter", a$$269);
  }
  function v910(a$$268) {
    var v12428 = !1;
    var v5436 = T$$2(this, a$$268, v12428);
    return this.pushStack(v5436, "not", a$$268);
  }
  function v909(a$$266) {
    function v908() {
      var a$$267 = 0;
      var c$$132 = b$$176.length;
      var v5438 = a$$267 < c$$132;
      for (;v5438;) {
        var v12429 = b$$176[a$$267];
        var v5437 = f$$4.contains(this, v12429);
        if (v5437) {
          return!0;
        }
        a$$267++;
        v5438 = a$$267 < c$$132;
      }
      return;
    }
    var b$$176 = f$$4(a$$266);
    return this.filter(v908);
  }
  function v907(a$$265) {
    function v906() {
      c$$131 = 0;
      d$$113 = b$$175.length;
      var v5440 = c$$131 < d$$113;
      for (;v5440;) {
        var v12430 = b$$175[c$$131];
        var v5439 = f$$4.contains(v12430, this);
        if (v5439) {
          return!0;
        }
        c$$131++;
        v5440 = c$$131 < d$$113;
      }
      return;
    }
    var b$$175 = this;
    var c$$131;
    var d$$113;
    var v12431 = typeof a$$265;
    var v5442 = v12431 != "string";
    if (v5442) {
      var v5441 = f$$4(a$$265);
      return v5441.filter(v906);
    }
    var e$$127 = this.pushStack("", "find", a$$265);
    var g$$66;
    var h$$59;
    var i$$130;
    c$$131 = 0;
    d$$113 = this.length;
    var v5448 = c$$131 < d$$113;
    for (;v5448;) {
      g$$66 = e$$127.length;
      var v12432 = this[c$$131];
      f$$4.find(a$$265, v12432, e$$127);
      var v5447 = c$$131 > 0;
      if (v5447) {
        h$$59 = g$$66;
        var v12433 = e$$127.length;
        var v5446 = h$$59 < v12433;
        for (;v5446;) {
          i$$130 = 0;
          var v5445 = i$$130 < g$$66;
          for (;v5445;) {
            var v12434 = e$$127[i$$130];
            var v12435 = e$$127[h$$59];
            var v5444 = v12434 === v12435;
            if (v5444) {
              var v5443 = h$$59;
              h$$59 = h$$59 - 1;
              e$$127.splice(v5443, 1);
              break;
            }
            i$$130++;
            v5445 = i$$130 < g$$66;
          }
          h$$59++;
          var v12436 = e$$127.length;
          v5446 = h$$59 < v12436;
        }
      }
      c$$131++;
      v5448 = c$$131 < d$$113;
    }
    return e$$127;
  }
  function v905() {
    function v904(a$$263) {
      var v12437;
      if (a$$263) {
        var v17988 = a$$263.ownerDocument;
        var v21819 = !v17988;
        if (v21819) {
          v17988 = a$$263;
        }
        v12437 = v17988;
      } else {
        v12437 = 0;
      }
      var v5449 = v12437;
      var b$$173 = v5449.documentElement;
      var v5450;
      if (b$$173) {
        var v12438 = b$$173.nodeName;
        v5450 = v12438 !== "HTML";
      } else {
        v5450 = !1;
      }
      return v5450;
    }
    function v903() {
      return!1;
    }
    function v902(a$$262, b$$172) {
      var v17989 = a$$262.compareDocumentPosition(b$$172);
      var v12439 = v17989 & 16;
      var v5451 = !v12439;
      return!v5451;
    }
    function v901(a$$261, b$$171) {
      var v5452 = a$$261 !== b$$171;
      if (v5452) {
        var v12440;
        var v17990 = a$$261.contains;
        if (v17990) {
          v12440 = a$$261.contains(b$$171);
        } else {
          v12440 = !0;
        }
        v5452 = v12440;
      }
      return v5452;
    }
    function v900() {
      function v899(a$$260, b$$170, c$$129) {
        var v21820 = b$$170.getElementsByClassName;
        var v17991 = typeof v21820;
        var v12441 = v17991 != "undefined";
        if (v12441) {
          v12441 = !c$$129;
        }
        var v5454 = v12441;
        if (v5454) {
          var v5453 = a$$260[1];
          return b$$170.getElementsByClassName(v5453);
        }
        return;
      }
      var a$$259 = c$$5.createElement("div");
      a$$259.innerHTML = "<div class='test e'></div><div class='test'></div>";
      var v21821 = a$$259.getElementsByClassName;
      var v17992 = !v21821;
      var v12442 = !v17992;
      if (v12442) {
        var v21822 = a$$259.getElementsByClassName("e");
        var v17993 = v21822.length;
        v12442 = v17993 !== 0;
      }
      var v5457 = v12442;
      if (v5457) {
        var v5455 = a$$259.lastChild;
        v5455.className = "e";
        var v17994 = a$$259.getElementsByClassName("e");
        var v12443 = v17994.length;
        var v5456 = v12443 === 1;
        if (v5456) {
          return;
        }
        var v17995 = o$$10.order;
        v17995.splice(1, 0, "CLASS");
        var v17996 = o$$10.find;
        v17996.CLASS = v899;
        a$$259 = null;
      }
      return;
    }
    function v898() {
      function v897(a$$258, c$$128) {
        c$$128 = c$$128.replace(/\=\s*([^'"\]]*)\s*\]/g, "='$1']");
        var v12444 = m$$19.isXML(a$$258);
        var v5460 = !v12444;
        if (v5460) {
          try {
            var v12445 = e$$125;
            var v17998 = !v12445;
            if (v17998) {
              var v27498 = o$$10.match;
              var v25840 = v27498.PSEUDO;
              var v21823 = v25840.test(c$$128);
              var v17997 = !v21823;
              if (v17997) {
                var v21824 = /!=/.test(c$$128);
                v17997 = !v21824;
              }
              v12445 = v17997;
            }
            var v5459 = v12445;
            if (v5459) {
              var f$$41 = b$$169.call(a$$258, c$$128);
              var v17999 = f$$41;
              var v21825 = !v17999;
              if (v21825) {
                v17999 = !d$$111;
              }
              var v12446 = v17999;
              var v18001 = !v12446;
              if (v18001) {
                var v18000 = a$$258.document;
                if (v18000) {
                  var v25841 = a$$258.document;
                  var v21826 = v25841.nodeType;
                  v18000 = v21826 !== 11;
                }
                v12446 = v18000;
              }
              var v5458 = v12446;
              if (v5458) {
                return f$$41;
              }
            }
          } catch (g$$64) {
          }
        }
        var v18002 = [a$$258];
        var v12447 = m$$19(c$$128, null, null, v18002);
        var v5461 = v12447.length;
        return v5461 > 0;
      }
      var a$$257 = c$$5.documentElement;
      var v18003 = a$$257.matchesSelector;
      var v21827 = !v18003;
      if (v21827) {
        v18003 = a$$257.mozMatchesSelector;
      }
      var v12448 = v18003;
      var v18004 = !v12448;
      if (v18004) {
        v12448 = a$$257.webkitMatchesSelector;
      }
      var v5462 = v12448;
      var v12449 = !v5462;
      if (v12449) {
        v5462 = a$$257.msMatchesSelector;
      }
      var b$$169 = v5462;
      if (b$$169) {
        var v12450 = c$$5.createElement("div");
        var v5463 = b$$169.call(v12450, "div");
        var d$$111 = !v5463;
        var e$$125 = !1;
        try {
          var v5464 = c$$5.documentElement;
          b$$169.call(v5464, "[test!='']:sizzle");
        } catch (f$$40) {
          e$$125 = !0;
        }
        m$$19.matchesSelector = v897;
      }
      return;
    }
    function v896() {
      function v895(b$$168, e$$124, f$$39, g$$63) {
        e$$124 = e$$124 || c$$5;
        var v12451 = !g$$63;
        if (v12451) {
          var v18005 = m$$19.isXML(e$$124);
          v12451 = !v18005;
        }
        var v5482 = v12451;
        if (v5482) {
          var h$$57 = /^(\w+$)|^\.([\w\-]+$)|^#([\w\-]+$)/.exec(b$$168);
          var v12452 = h$$57;
          if (v12452) {
            var v21828 = e$$124.nodeType;
            var v18006 = v21828 === 1;
            var v21830 = !v18006;
            if (v21830) {
              var v21829 = e$$124.nodeType;
              v18006 = v21829 === 9;
            }
            v12452 = v18006;
          }
          var v5469 = v12452;
          if (v5469) {
            var v5466 = h$$57[1];
            if (v5466) {
              var v5465 = e$$124.getElementsByTagName(b$$168);
              return s$$22(v5465, f$$39);
            }
            var v18007 = h$$57[2];
            if (v18007) {
              var v21831 = o$$10.find;
              v18007 = v21831.CLASS;
            }
            var v12453 = v18007;
            if (v12453) {
              v12453 = e$$124.getElementsByClassName;
            }
            var v5468 = v12453;
            if (v5468) {
              var v12454 = h$$57[2];
              var v5467 = e$$124.getElementsByClassName(v12454);
              return s$$22(v5467, f$$39);
            }
          }
          var v12455 = e$$124.nodeType;
          var v5481 = v12455 === 9;
          if (v5481) {
            var v12456 = b$$168 === "body";
            if (v12456) {
              v12456 = e$$124.body;
            }
            var v5471 = v12456;
            if (v5471) {
              var v12457 = e$$124.body;
              var v5470 = [v12457];
              return s$$22(v5470, f$$39);
            }
            var v12458 = h$$57;
            if (v12458) {
              v12458 = h$$57[3];
            }
            var v5476 = v12458;
            if (v5476) {
              var v5472 = h$$57[3];
              var i$$128 = e$$124.getElementById(v5472);
              var v12459 = !i$$128;
              var v18009 = !v12459;
              if (v18009) {
                var v18008 = i$$128.parentNode;
                v12459 = !v18008;
              }
              var v5473 = v12459;
              if (v5473) {
                return s$$22([], f$$39);
              }
              var v12460 = i$$128.id;
              var v12461 = h$$57[3];
              var v5475 = v12460 === v12461;
              if (v5475) {
                var v5474 = [i$$128];
                return s$$22(v5474, f$$39);
              }
            }
            try {
              var v5477 = e$$124.querySelectorAll(b$$168);
              return s$$22(v5477, f$$39);
            } catch (j$$48) {
            }
          } else {
            var v18010 = e$$124.nodeType;
            var v12462 = v18010 === 1;
            if (v12462) {
              var v21832 = e$$124.nodeName;
              var v18011 = v21832.toLowerCase();
              v12462 = v18011 !== "object";
            }
            var v5480 = v12462;
            if (v5480) {
              var k$$29 = e$$124;
              var l$$41 = e$$124.getAttribute("id");
              var n$$71 = l$$41 || d$$110;
              var p$$33 = e$$124.parentNode;
              var q$$11 = /^\s*[+~]/.test(b$$168);
              var v12463;
              if (l$$41) {
                v12463 = n$$71 = n$$71.replace(/'/g, "\\$&");
              } else {
                v12463 = e$$124.setAttribute("id", n$$71);
              }
              v12463;
              var v12464 = q$$11 && p$$33;
              if (v12464) {
                e$$124 = e$$124.parentNode;
              }
              try {
                var v12465 = !q$$11;
                var v18012 = !v12465;
                if (v18012) {
                  v12465 = p$$33;
                }
                var v5479 = v12465;
                if (v5479) {
                  var v21833 = "[id='" + n$$71;
                  var v18013 = v21833 + "'] ";
                  var v12466 = v18013 + b$$168;
                  var v5478 = e$$124.querySelectorAll(v12466);
                  return s$$22(v5478, f$$39);
                }
              } catch (r$$13) {
              } finally {
                var v12467 = !l$$41;
                if (v12467) {
                  k$$29.removeAttribute("id");
                }
              }
            }
          }
        }
        return a$$256(b$$168, e$$124, f$$39, g$$63);
      }
      var a$$256 = m$$19;
      var b$$167 = c$$5.createElement("div");
      var d$$110 = "__sizzle__";
      b$$167.innerHTML = "<p class='TEST'></p>";
      var v18014 = b$$167.querySelectorAll;
      var v12468 = !v18014;
      var v18016 = !v12468;
      if (v18016) {
        var v21834 = b$$167.querySelectorAll(".TEST");
        var v18015 = v21834.length;
        v12468 = v18015 !== 0;
      }
      var v5483 = v12468;
      if (v5483) {
        m$$19 = v895;
        var e$$123;
        for (e$$123 in a$$256) {
          m$$19[e$$123] = a$$256[e$$123];
        }
        b$$167 = null;
      }
      return;
    }
    function v894() {
      function v893(a$$255) {
        return a$$255.getAttribute("href", 2);
      }
      function v892(a$$254, b$$166) {
        var v5484 = a$$254[1];
        var c$$127 = b$$166.getElementsByTagName(v5484);
        var v12469 = a$$254[1];
        var v5487 = v12469 === "*";
        if (v5487) {
          var d$$109 = [];
          var e$$122 = 0;
          var v5486 = c$$127[e$$122];
          for (;v5486;) {
            var v18017 = c$$127[e$$122];
            var v12470 = v18017.nodeType;
            var v5485 = v12470 === 1;
            if (v5485) {
              var v12471 = c$$127[e$$122];
              d$$109.push(v12471);
            }
            e$$122++;
            v5486 = c$$127[e$$122];
          }
          c$$127 = d$$109;
        }
        return c$$127;
      }
      var a$$253 = c$$5.createElement("div");
      var v25842 = c$$5.createComment("");
      a$$253.appendChild(v25842);
      var v28557 = a$$253.getElementsByTagName("*");
      var v27499 = v28557.length;
      var v25843 = v27499 > 0;
      if (v25843) {
        var v27500 = o$$10.find;
        v27500.TAG = v892;
      }
      a$$253.innerHTML = "<a href='#'></a>";
      var v25844 = a$$253.firstChild;
      if (v25844) {
        var v29230 = a$$253.firstChild;
        var v28558 = v29230.getAttribute;
        var v27501 = typeof v28558;
        v25844 = v27501 != "undefined";
      }
      var v21835 = v25844;
      if (v21835) {
        var v27502 = a$$253.firstChild;
        var v25845 = v27502.getAttribute("href");
        v21835 = v25845 !== "#";
      }
      var v18018 = v21835;
      if (v18018) {
        var v21836 = o$$10.attrHandle;
        v21836.href = v893;
      }
      a$$253 = null;
      return;
    }
    function v891() {
      function v890(a$$252, b$$165) {
        var v18019 = a$$252.getAttributeNode;
        var v12472 = typeof v18019;
        var v5488 = v12472 != "undefined";
        if (v5488) {
          v5488 = a$$252.getAttributeNode("id");
        }
        var c$$126 = v5488;
        var v18020 = a$$252.nodeType;
        var v12473 = v18020 === 1;
        if (v12473) {
          v12473 = c$$126;
        }
        var v5489 = v12473;
        if (v5489) {
          var v12474 = c$$126.nodeValue;
          v5489 = v12474 === b$$165;
        }
        return v5489;
      }
      function v889(a$$251, c$$125, d$$108) {
        var v21837 = c$$125.getElementById;
        var v18021 = typeof v21837;
        var v12475 = v18021 != "undefined";
        if (v12475) {
          v12475 = !d$$108;
        }
        var v5492 = v12475;
        if (v5492) {
          var v5490 = a$$251[1];
          var e$$121 = c$$125.getElementById(v5490);
          var v5491;
          if (e$$121) {
            var v12476;
            var v25846 = e$$121.id;
            var v25847 = a$$251[1];
            var v21838 = v25846 === v25847;
            var v25849 = !v21838;
            if (v25849) {
              var v28559 = e$$121.getAttributeNode;
              var v27503 = typeof v28559;
              var v25848 = v27503 != "undefined";
              if (v25848) {
                var v28560 = e$$121.getAttributeNode("id");
                var v27504 = v28560.nodeValue;
                var v27505 = a$$251[1];
                v25848 = v27504 === v27505;
              }
              v21838 = v25848;
            }
            var v18022 = v21838;
            if (v18022) {
              v12476 = [e$$121];
            } else {
              v12476 = b$$9;
            }
            v5491 = v12476;
          } else {
            v5491 = [];
          }
          return v5491;
        }
        return;
      }
      var a$$250 = c$$5.createElement("div");
      var v12477 = new Date;
      var v5493 = v12477.getTime();
      var d$$107 = "script" + v5493;
      var e$$120 = c$$5.documentElement;
      var v25850 = "<a name='" + d$$107;
      a$$250.innerHTML = v25850 + "'/>";
      var v25851 = e$$120.firstChild;
      e$$120.insertBefore(a$$250, v25851);
      var v21839 = c$$5.getElementById(d$$107);
      if (v21839) {
        var v27506 = o$$10.find;
        v27506.ID = v889;
        var v27507 = o$$10.filter;
        v27507.ID = v890;
      }
      e$$120.removeChild(a$$250);
      e$$120 = a$$250 = null;
      return;
    }
    function v888(a$$249, b$$164, c$$124) {
      var v5494 = a$$249 === b$$164;
      if (v5494) {
        return c$$124;
      }
      var d$$106 = a$$249.nextSibling;
      for (;d$$106;) {
        var v5495 = d$$106 === b$$164;
        if (v5495) {
          return-1;
        }
        d$$106 = d$$106.nextSibling;
      }
      return 1;
    }
    function v887(a$$248, b$$163) {
      var v5496 = a$$248 === b$$163;
      if (v5496) {
        h$$47 = !0;
        return 0;
      }
      var v12478 = a$$248.sourceIndex;
      if (v12478) {
        v12478 = b$$163.sourceIndex;
      }
      var v5499 = v12478;
      if (v5499) {
        var v5497 = a$$248.sourceIndex;
        var v5498 = b$$163.sourceIndex;
        return v5497 - v5498;
      }
      var c$$123;
      var d$$105;
      var e$$119 = [];
      var f$$38 = [];
      var g$$62 = a$$248.parentNode;
      var i$$127 = b$$163.parentNode;
      var j$$47 = g$$62;
      var v5500 = g$$62 === i$$127;
      if (v5500) {
        return v$$6(a$$248, b$$163);
      }
      var v5501 = !g$$62;
      if (v5501) {
        return-1;
      }
      var v5502 = !i$$127;
      if (v5502) {
        return 1;
      }
      for (;j$$47;) {
        e$$119.unshift(j$$47);
        j$$47 = j$$47.parentNode;
      }
      j$$47 = i$$127;
      for (;j$$47;) {
        f$$38.unshift(j$$47);
        j$$47 = j$$47.parentNode;
      }
      c$$123 = e$$119.length;
      d$$105 = f$$38.length;
      var k$$28 = 0;
      var v12479 = k$$28 < c$$123;
      if (v12479) {
        v12479 = k$$28 < d$$105;
      }
      var v5506 = v12479;
      for (;v5506;) {
        var v12480 = e$$119[k$$28];
        var v12481 = f$$38[k$$28];
        var v5505 = v12480 !== v12481;
        if (v5505) {
          var v5503 = e$$119[k$$28];
          var v5504 = f$$38[k$$28];
          return v$$6(v5503, v5504);
        }
        k$$28++;
        var v12482 = k$$28 < c$$123;
        if (v12482) {
          v12482 = k$$28 < d$$105;
        }
        v5506 = v12482;
      }
      var v5507;
      var v12485 = k$$28 === c$$123;
      if (v12485) {
        var v12483 = f$$38[k$$28];
        v5507 = v$$6(a$$248, v12483, -1);
      } else {
        var v12484 = e$$119[k$$28];
        v5507 = v$$6(v12484, b$$163, 1);
      }
      return v5507;
    }
    function v886(a$$247, b$$162) {
      var v5508 = a$$247 === b$$162;
      if (v5508) {
        h$$47 = !0;
        return 0;
      }
      var v18023 = a$$247.compareDocumentPosition;
      var v12486 = !v18023;
      var v18025 = !v12486;
      if (v18025) {
        var v18024 = b$$162.compareDocumentPosition;
        v12486 = !v18024;
      }
      var v5510 = v12486;
      if (v5510) {
        var v5509;
        var v12487 = a$$247.compareDocumentPosition;
        if (v12487) {
          v5509 = -1;
        } else {
          v5509 = 1;
        }
        return v5509;
      }
      var v5511;
      var v18026 = a$$247.compareDocumentPosition(b$$162);
      var v12488 = v18026 & 4;
      if (v12488) {
        v5511 = -1;
      } else {
        v5511 = 1;
      }
      return v5511;
    }
    function v885(a$$246, b$$161) {
      var c$$122 = 0;
      var d$$104 = b$$161 || [];
      var v12489 = g$$47.call(a$$246);
      var v5518 = v12489 === "[object Array]";
      if (v5518) {
        var v12490 = Array.prototype;
        var v5512 = v12490.push;
        v5512.apply(d$$104, a$$246);
      } else {
        var v18027 = a$$246.length;
        var v12491 = typeof v18027;
        var v5517 = v12491 == "number";
        if (v5517) {
          var e$$118 = a$$246.length;
          var v5514 = c$$122 < e$$118;
          for (;v5514;) {
            var v5513 = a$$246[c$$122];
            d$$104.push(v5513);
            c$$122++;
            v5514 = c$$122 < e$$118;
          }
        } else {
          var v5516 = a$$246[c$$122];
          for (;v5516;) {
            var v5515 = a$$246[c$$122];
            d$$104.push(v5515);
            c$$122++;
            v5516 = a$$246[c$$122];
          }
        }
      }
      return d$$104;
    }
    function v884(a$$243, b$$158, c$$121, d$$103) {
      var e$$117 = b$$158[2];
      var v5519 = o$$10.setFilters;
      var f$$37 = v5519[e$$117];
      if (f$$37) {
        return f$$37(a$$243, c$$121, b$$158, d$$103);
      }
      return;
    }
    function v883(a$$242, b$$157) {
      var c$$120 = b$$157[1];
      var v5520;
      var v12493 = m$$19.attr;
      if (v12493) {
        v5520 = m$$19.attr(a$$242, c$$120);
      } else {
        var v12492;
        var v21840 = o$$10.attrHandle;
        var v18030 = v21840[c$$120];
        if (v18030) {
          var v18028 = o$$10.attrHandle;
          v12492 = v18028[c$$120](a$$242);
        } else {
          var v18029;
          var v25852 = a$$242[c$$120];
          var v21841 = v25852 != null;
          if (v21841) {
            v18029 = a$$242[c$$120];
          } else {
            v18029 = a$$242.getAttribute(c$$120);
          }
          v12492 = v18029;
        }
        v5520 = v12492;
      }
      var d$$102 = v5520;
      var e$$116 = d$$102 + "";
      var f$$36 = b$$157[2];
      var g$$61 = b$$157[4];
      var v5521;
      var v12495 = d$$102 == null;
      if (v12495) {
        v5521 = f$$36 === "!=";
      } else {
        var v12494;
        var v21842 = !f$$36;
        if (v21842) {
          v21842 = m$$19.attr;
        }
        var v18032 = v21842;
        if (v18032) {
          v12494 = d$$102 != null;
        } else {
          var v18031;
          var v21844 = f$$36 === "=";
          if (v21844) {
            v18031 = e$$116 === g$$61;
          } else {
            var v21843;
            var v25855 = f$$36 === "*=";
            if (v25855) {
              var v25853 = e$$116.indexOf(g$$61);
              v21843 = v25853 >= 0;
            } else {
              var v25854;
              var v27510 = f$$36 === "~=";
              if (v27510) {
                var v29231 = " " + e$$116;
                var v28561 = v29231 + " ";
                var v27508 = v28561.indexOf(g$$61);
                v25854 = v27508 >= 0;
              } else {
                var v27509;
                if (g$$61) {
                  var v28562;
                  var v29233 = f$$36 === "!=";
                  if (v29233) {
                    v28562 = e$$116 !== g$$61;
                  } else {
                    var v29232;
                    var v29666 = f$$36 === "^=";
                    if (v29666) {
                      var v29664 = e$$116.indexOf(g$$61);
                      v29232 = v29664 === 0;
                    } else {
                      var v29665;
                      var v29949 = f$$36 === "$=";
                      if (v29949) {
                        var v30368 = e$$116.length;
                        var v30369 = g$$61.length;
                        var v30194 = v30368 - v30369;
                        var v29947 = e$$116.substr(v30194);
                        v29665 = v29947 === g$$61;
                      } else {
                        var v29948;
                        var v30196 = f$$36 === "|=";
                        if (v30196) {
                          var v30195 = e$$116 === g$$61;
                          var v30372 = !v30195;
                          if (v30372) {
                            var v30621 = g$$61.length;
                            var v30502 = v30621 + 1;
                            var v30370 = e$$116.substr(0, v30502);
                            var v30371 = g$$61 + "-";
                            v30195 = v30370 === v30371;
                          }
                          v29948 = v30195;
                        } else {
                          v29948 = !1;
                        }
                        v29665 = v29948;
                      }
                      v29232 = v29665;
                    }
                    v28562 = v29232;
                  }
                  v27509 = v28562;
                } else {
                  var v28563 = e$$116;
                  if (v28563) {
                    var v29234 = !1;
                    v28563 = d$$102 !== v29234;
                  }
                  v27509 = v28563;
                }
                v25854 = v27509;
              }
              v21843 = v25854;
            }
            v18031 = v21843;
          }
          v12494 = v18031;
        }
        v5521 = v12494;
      }
      return v5521;
    }
    function v882(a$$241, b$$156) {
      var v25856 = a$$241.className;
      var v27511 = !v25856;
      if (v27511) {
        v25856 = a$$241.getAttribute("class");
      }
      var v21845 = v25856;
      var v18033 = " " + v21845;
      var v12496 = v18033 + " ";
      var v5522 = v12496.indexOf(b$$156);
      return v5522 > -1;
    }
    function v881(a$$240, b$$155) {
      var v12497 = b$$155 === "*";
      if (v12497) {
        var v18034 = a$$240.nodeType;
        v12497 = v18034 === 1;
      }
      var v5523 = v12497;
      var v12499 = !v5523;
      if (v12499) {
        var v21846 = a$$240.nodeName;
        var v18035 = !v21846;
        var v12498 = !v18035;
        if (v12498) {
          var v21847 = a$$240.nodeName;
          var v18036 = v21847.toLowerCase();
          v12498 = v18036 === b$$155;
        }
        v5523 = v12498;
      }
      return v5523;
    }
    function v880(a$$239, b$$154) {
      var v12500 = a$$239.nodeType;
      var v5524 = v12500 === 1;
      if (v5524) {
        var v12501 = a$$239.getAttribute("id");
        v5524 = v12501 === b$$154;
      }
      return v5524;
    }
    function v879(a$$238, b$$153) {
      var c$$119;
      var e$$115;
      var f$$35;
      var g$$60;
      var h$$56;
      var i$$126;
      var j$$46;
      var k$$27 = b$$153[1];
      var l$$40 = a$$238;
      switch(k$$27) {
        case "only":
        ;
        case "first":
          var v5526 = l$$40 = l$$40.previousSibling;
          for (;v5526;) {
            var v12502 = l$$40.nodeType;
            var v5525 = v12502 === 1;
            if (v5525) {
              return!1;
            }
            v5526 = l$$40 = l$$40.previousSibling;
          }
          var v5527 = k$$27 === "first";
          if (v5527) {
            return!0;
          }
          l$$40 = a$$238;
        case "last":
          var v5529 = l$$40 = l$$40.nextSibling;
          for (;v5529;) {
            var v12503 = l$$40.nodeType;
            var v5528 = v12503 === 1;
            if (v5528) {
              return!1;
            }
            v5529 = l$$40 = l$$40.nextSibling;
          }
          return!0;
        case "nth":
          c$$119 = b$$153[2];
          e$$115 = b$$153[3];
          var v12504 = c$$119 === 1;
          if (v12504) {
            v12504 = e$$115 === 0;
          }
          var v5530 = v12504;
          if (v5530) {
            return!0;
          }
          f$$35 = b$$153[0];
          g$$60 = a$$238.parentNode;
          var v12505 = g$$60;
          if (v12505) {
            var v21848 = g$$60[d$$86];
            var v18037 = v21848 !== f$$35;
            var v21850 = !v18037;
            if (v21850) {
              var v21849 = a$$238.nodeIndex;
              v18037 = !v21849;
            }
            v12505 = v18037;
          }
          var v5532 = v12505;
          if (v5532) {
            i$$126 = 0;
            l$$40 = g$$60.firstChild;
            for (;l$$40;) {
              var v12506 = l$$40.nodeType;
              var v5531 = v12506 === 1;
              if (v5531) {
                l$$40.nodeIndex = i$$126 = i$$126 + 1;
              }
              l$$40 = l$$40.nextSibling;
            }
            g$$60[d$$86] = f$$35;
          }
          var v5533 = a$$238.nodeIndex;
          j$$46 = v5533 - e$$115;
          var v5534;
          var v12508 = c$$119 === 0;
          if (v12508) {
            v5534 = j$$46 === 0;
          } else {
            var v18038 = j$$46 % c$$119;
            var v12507 = v18038 === 0;
            if (v12507) {
              var v18039 = j$$46 / c$$119;
              v12507 = v18039 >= 0;
            }
            v5534 = v12507;
          }
          return v5534;
      }
      return;
    }
    function v878(a$$237, b$$152, c$$118, d$$101) {
      var e$$114 = b$$152[1];
      var v5535 = o$$10.filters;
      var f$$34 = v5535[e$$114];
      if (f$$34) {
        return f$$34(a$$237, c$$118, b$$152, d$$101);
      }
      var v5537 = e$$114 === "contains";
      if (v5537) {
        var v25857 = a$$237.textContent;
        var v27512 = !v25857;
        if (v27512) {
          v25857 = a$$237.innerText;
        }
        var v21851 = v25857;
        var v25859 = !v21851;
        if (v25859) {
          var v25858 = [a$$237];
          v21851 = n$$68(v25858);
        }
        var v18040 = v21851;
        var v21852 = !v18040;
        if (v21852) {
          v18040 = "";
        }
        var v12509 = v18040;
        var v12510 = b$$152[3];
        var v5536 = v12509.indexOf(v12510);
        return v5536 >= 0;
      }
      var v5540 = e$$114 === "not";
      if (v5540) {
        var g$$59 = b$$152[3];
        var h$$55 = 0;
        var i$$125 = g$$59.length;
        var v5539 = h$$55 < i$$125;
        for (;v5539;) {
          var v12511 = g$$59[h$$55];
          var v5538 = v12511 === a$$237;
          if (v5538) {
            return!1;
          }
          h$$55++;
          v5539 = h$$55 < i$$125;
        }
        return!0;
      }
      m$$19.error(e$$114);
      return;
    }
    function v877(a$$236, b$$151, c$$117) {
      var v12512 = c$$117[3];
      var v5541 = v12512 - 0;
      return v5541 === b$$151;
    }
    function v876(a$$235, b$$150, c$$116) {
      var v12513 = c$$116[3];
      var v5542 = v12513 - 0;
      return v5542 === b$$150;
    }
    function v875(a$$234, b$$149, c$$115) {
      var v12514 = c$$115[3];
      var v5543 = v12514 - 0;
      return b$$149 > v5543;
    }
    function v874(a$$233, b$$148, c$$114) {
      var v12515 = c$$114[3];
      var v5544 = v12515 - 0;
      return b$$148 < v5544;
    }
    function v873(a$$232, b$$147) {
      var v5545 = b$$147 % 2;
      return v5545 === 1;
    }
    function v872(a$$231, b$$146) {
      var v5546 = b$$146 % 2;
      return v5546 === 0;
    }
    function v871(a$$230, b$$145, c$$113, d$$100) {
      var v12516 = d$$100.length;
      var v5547 = v12516 - 1;
      return b$$145 === v5547;
    }
    function v870(a$$229, b$$144) {
      return b$$144 === 0;
    }
    function v869(a$$228) {
      var v12517 = a$$228.ownerDocument;
      var v5548 = v12517.activeElement;
      return a$$228 === v5548;
    }
    function v868(a$$227) {
      var v5549 = a$$227.nodeName;
      return/input|select|textarea|button/i.test(v5549);
    }
    function v867(a$$226) {
      var v5550 = a$$226.nodeName;
      var b$$143 = v5550.toLowerCase();
      var v12518 = b$$143 === "input";
      if (v12518) {
        var v18041 = a$$226.type;
        v12518 = "button" === v18041;
      }
      var v5551 = v12518;
      var v12519 = !v5551;
      if (v12519) {
        v5551 = b$$143 === "button";
      }
      return v5551;
    }
    function v866(a$$225) {
      var v5552 = a$$225.nodeName;
      var b$$142 = v5552.toLowerCase();
      var v12520 = b$$142 === "input";
      var v18042 = !v12520;
      if (v18042) {
        v12520 = b$$142 === "button";
      }
      var v5553 = v12520;
      if (v5553) {
        var v12521 = a$$225.type;
        v5553 = "reset" === v12521;
      }
      return v5553;
    }
    function v865(a$$224) {
      var v18043 = a$$224.nodeName;
      var v12522 = v18043.toLowerCase();
      var v5554 = v12522 === "input";
      if (v5554) {
        var v12523 = a$$224.type;
        v5554 = "image" === v12523;
      }
      return v5554;
    }
    function v864(a$$223) {
      var v5555 = a$$223.nodeName;
      var b$$141 = v5555.toLowerCase();
      var v12524 = b$$141 === "input";
      var v18044 = !v12524;
      if (v18044) {
        v12524 = b$$141 === "button";
      }
      var v5556 = v12524;
      if (v5556) {
        var v12525 = a$$223.type;
        v5556 = "submit" === v12525;
      }
      return v5556;
    }
    function v863(a$$222) {
      var v18045 = a$$222.nodeName;
      var v12526 = v18045.toLowerCase();
      var v5557 = v12526 === "input";
      if (v5557) {
        var v12527 = a$$222.type;
        v5557 = "password" === v12527;
      }
      return v5557;
    }
    function v862(a$$221) {
      var v18046 = a$$221.nodeName;
      var v12528 = v18046.toLowerCase();
      var v5558 = v12528 === "input";
      if (v5558) {
        var v12529 = a$$221.type;
        v5558 = "file" === v12529;
      }
      return v5558;
    }
    function v861(a$$220) {
      var v18047 = a$$220.nodeName;
      var v12530 = v18047.toLowerCase();
      var v5559 = v12530 === "input";
      if (v5559) {
        var v12531 = a$$220.type;
        v5559 = "checkbox" === v12531;
      }
      return v5559;
    }
    function v860(a$$219) {
      var v18048 = a$$219.nodeName;
      var v12532 = v18048.toLowerCase();
      var v5560 = v12532 === "input";
      if (v5560) {
        var v12533 = a$$219.type;
        v5560 = "radio" === v12533;
      }
      return v5560;
    }
    function v859(a$$218) {
      var b$$140 = a$$218.getAttribute("type");
      var c$$112 = a$$218.type;
      var v21853 = a$$218.nodeName;
      var v18049 = v21853.toLowerCase();
      var v12534 = v18049 === "input";
      if (v12534) {
        v12534 = "text" === c$$112;
      }
      var v5561 = v12534;
      if (v5561) {
        var v12535 = b$$140 === c$$112;
        var v18050 = !v12535;
        if (v18050) {
          v12535 = b$$140 === null;
        }
        v5561 = v12535;
      }
      return v5561;
    }
    function v858(a$$217) {
      var v5562 = a$$217.nodeName;
      return/h\d/i.test(v5562);
    }
    function v857(a$$216, b$$139, c$$111) {
      var v21854 = c$$111[3];
      var v18051 = m$$19(v21854, a$$216);
      var v12536 = v18051.length;
      var v5563 = !v12536;
      return!v5563;
    }
    function v856(a$$215) {
      var v5564 = a$$215.firstChild;
      return!v5564;
    }
    function v855(a$$214) {
      var v12537 = a$$214.firstChild;
      var v5565 = !v12537;
      return!v5565;
    }
    function v854(a$$213) {
      var v5566 = a$$213.selected;
      var v5567 = !0;
      return v5566 === v5567;
    }
    function v853(a$$212) {
      var v5568 = a$$212.checked;
      var v5569 = !0;
      return v5568 === v5569;
    }
    function v852(a$$211) {
      var v5570 = a$$211.disabled;
      var v5571 = !0;
      return v5570 === v5571;
    }
    function v851(a$$210) {
      var v12538 = a$$210.disabled;
      var v12539 = !1;
      var v5572 = v12538 === v12539;
      if (v5572) {
        var v12540 = a$$210.type;
        v5572 = v12540 !== "hidden";
      }
      return v5572;
    }
    function v850(a$$209) {
      var v5573 = !0;
      a$$209.unshift(v5573);
      return a$$209;
    }
    function v849(b$$138, c$$110, d$$99, e$$113, f$$33) {
      var v12541 = b$$138[1];
      var v5579 = v12541 === "not";
      if (v5579) {
        var v27513 = b$$138[3];
        var v25860 = a$$185.exec(v27513);
        var v27514 = !v25860;
        if (v27514) {
          v25860 = "";
        }
        var v21855 = v25860;
        var v18052 = v21855.length;
        var v12542 = v18052 > 1;
        var v18054 = !v12542;
        if (v18054) {
          var v18053 = b$$138[3];
          v12542 = /^\w/.test(v18053);
        }
        var v5577 = v12542;
        if (v5577) {
          var v5574 = b$$138[3];
          var v31127 = m$$19(v5574, null, null, c$$110);
          b$$138[3] = v31127;
        } else {
          var v5575 = b$$138[3];
          var v12543 = !0;
          var v5576 = v12543 ^ f$$33;
          var g$$58 = m$$19.filter(v5575, c$$110, d$$99, v5576);
          var v12545 = !d$$99;
          if (v12545) {
            var v12544 = e$$113.push;
            v12544.apply(e$$113, g$$58);
          }
          return!1;
        }
      } else {
        var v21856 = o$$10.match;
        var v18055 = v21856.POS;
        var v18056 = b$$138[0];
        var v12546 = v18055.test(v18056);
        var v18059 = !v12546;
        if (v18059) {
          var v21857 = o$$10.match;
          var v18057 = v21857.CHILD;
          var v18058 = b$$138[0];
          v12546 = v18057.test(v18058);
        }
        var v5578 = v12546;
        if (v5578) {
          return!0;
        }
      }
      return b$$138;
    }
    function v848(a$$208, b$$137, c$$109, d$$98, e$$112, f$$32) {
      var v5580 = a$$208[1];
      var v31128 = v5580.replace(j$$41, "");
      var g$$57 = a$$208[1] = v31128;
      var v21858 = !f$$32;
      if (v21858) {
        var v25861 = o$$10.attrMap;
        v21858 = v25861[g$$57];
      }
      var v18060 = v21858;
      if (v18060) {
        var v21859 = o$$10.attrMap;
        a$$208[1] = v21859[g$$57];
      }
      var v25862 = a$$208[4];
      var v27515 = !v25862;
      if (v27515) {
        v25862 = a$$208[5];
      }
      var v21860 = v25862;
      var v25863 = !v21860;
      if (v25863) {
        v21860 = "";
      }
      var v18061 = v21860;
      var v31129 = v18061.replace(j$$41, "");
      a$$208[4] = v31129;
      var v18062 = a$$208[2];
      var v12547 = v18062 === "~=";
      if (v12547) {
        var v21861 = a$$208[4];
        var v18063 = " " + v21861;
        a$$208[4] = v18063 + " ";
      }
      return a$$208;
    }
    function v847(a$$207) {
      var v12548 = a$$207[1];
      var v5583 = v12548 === "nth";
      if (v5583) {
        var v12549 = a$$207[2];
        var v18065 = !v12549;
        if (v18065) {
          var v18064 = a$$207[0];
          m$$19.error(v18064);
        }
        var v12550 = a$$207[2];
        var v31130 = v12550.replace(/^\+|\s*/g, "");
        a$$207[2] = v31130;
        var v27516 = a$$207[2];
        var v25864 = v27516 === "even";
        if (v25864) {
          v25864 = "2n";
        }
        var v21862 = v25864;
        var v25866 = !v21862;
        if (v25866) {
          var v27517 = a$$207[2];
          var v25865 = v27517 === "odd";
          if (v25865) {
            v25865 = "2n+1";
          }
          v21862 = v25865;
        }
        var v18066 = v21862;
        var v21864 = !v18066;
        if (v21864) {
          var v27518 = a$$207[2];
          var v25867 = /\D/.test(v27518);
          var v21863 = !v25867;
          if (v21863) {
            var v25868 = a$$207[2];
            v21863 = "0n+" + v25868;
          }
          v18066 = v21863;
        }
        var v12551 = v18066;
        var v18067 = !v12551;
        if (v18067) {
          v12551 = a$$207[2];
        }
        var v5581 = v12551;
        var b$$136 = /(-?)(\d*)(?:n([+\-]?\d*))?/.exec(v5581);
        var v18068 = b$$136[1];
        var v21865 = b$$136[2];
        var v25869 = !v21865;
        if (v25869) {
          v21865 = 1;
        }
        var v18069 = v21865;
        var v12552 = v18068 + v18069;
        a$$207[2] = v12552 - 0;
        var v12553 = b$$136[3];
        a$$207[3] = v12553 - 0;
      } else {
        var v5582 = a$$207[2];
        if (v5582) {
          var v12554 = a$$207[0];
          m$$19.error(v12554);
        }
      }
      a$$207[0] = e$$101;
      e$$101 = e$$101 + 1;
      return a$$207;
    }
    function v846(a$$206, b$$135) {
      var v12555 = a$$206[1];
      var v5584 = v12555.replace(j$$41, "");
      return v5584.toLowerCase();
    }
    function v845(a$$205) {
      var v5585 = a$$205[1];
      return v5585.replace(j$$41, "");
    }
    function v844(a$$204, b$$134, c$$108, d$$97, e$$111, f$$31) {
      var v18070 = a$$204[1];
      var v12556 = v18070.replace(j$$41, "");
      var v5586 = " " + v12556;
      a$$204 = v5586 + " ";
      if (f$$31) {
        return a$$204;
      }
      var g$$56 = 0;
      var h$$54;
      var v12557 = h$$54 = b$$134[g$$56];
      var v5587 = v12557 != null;
      for (;v5587;) {
        if (h$$54) {
          var v12558;
          var v25870 = h$$54.className;
          if (v25870) {
            var v29950 = h$$54.className;
            var v29667 = " " + v29950;
            var v29235 = v29667 + " ";
            var v28564 = v29235.replace(/[\t\n\r]/g, " ");
            var v27519 = v28564.indexOf(a$$204);
            v25870 = v27519 >= 0;
          }
          var v21866 = v25870;
          var v18073 = e$$111 ^ v21866;
          if (v18073) {
            var v18071 = c$$108;
            var v21867 = !v18071;
            if (v21867) {
              v18071 = d$$97.push(h$$54);
            }
            v12558 = v18071;
          } else {
            var v18072 = c$$108;
            if (v18072) {
              v18072 = b$$134[g$$56] = !1;
            }
            v12558 = v18072;
          }
          v12558;
        }
        g$$56++;
        var v12559 = h$$54 = b$$134[g$$56];
        v5587 = v12559 != null;
      }
      return!1;
    }
    function v843(a$$203, b$$133) {
      var v18074 = b$$133.getElementsByTagName;
      var v12560 = typeof v18074;
      var v5589 = v12560 != "undefined";
      if (v5589) {
        var v5588 = a$$203[1];
        return b$$133.getElementsByTagName(v5588);
      }
      return;
    }
    function v842(a$$202, b$$132) {
      var v18075 = b$$132.getElementsByName;
      var v12561 = typeof v18075;
      var v5594 = v12561 != "undefined";
      if (v5594) {
        var c$$107 = [];
        var v5590 = a$$202[1];
        var d$$96 = b$$132.getElementsByName(v5590);
        var e$$110 = 0;
        var f$$30 = d$$96.length;
        var v5592 = e$$110 < f$$30;
        for (;v5592;) {
          var v18076 = d$$96[e$$110];
          var v12562 = v18076.getAttribute("name");
          var v12563 = a$$202[1];
          var v5591 = v12562 === v12563;
          if (v5591) {
            var v12564 = d$$96[e$$110];
            c$$107.push(v12564);
          }
          e$$110++;
          v5592 = e$$110 < f$$30;
        }
        var v5593;
        var v18077 = c$$107.length;
        var v12565 = v18077 === 0;
        if (v12565) {
          v5593 = null;
        } else {
          v5593 = c$$107;
        }
        return v5593;
      }
      return;
    }
    function v841(a$$201, b$$131, c$$106) {
      var v21868 = b$$131.getElementById;
      var v18078 = typeof v21868;
      var v12566 = v18078 != "undefined";
      if (v12566) {
        v12566 = !c$$106;
      }
      var v5597 = v12566;
      if (v5597) {
        var v5595 = a$$201[1];
        var d$$95 = b$$131.getElementById(v5595);
        var v5596;
        var v18079 = d$$95;
        if (v18079) {
          v18079 = d$$95.parentNode;
        }
        var v12567 = v18079;
        if (v12567) {
          v5596 = [d$$95];
        } else {
          v5596 = [];
        }
        return v5596;
      }
      return;
    }
    function v840(a$$200, b$$130, c$$105) {
      var d$$94;
      var f$$29 = e$$101;
      e$$101 = e$$101 + 1;
      var g$$55 = x$$69;
      var v21869 = typeof b$$130;
      var v18080 = v21869 == "string";
      if (v18080) {
        var v21870 = l$$37.test(b$$130);
        v18080 = !v21870;
      }
      var v12568 = v18080;
      if (v12568) {
        b$$130 = b$$130.toLowerCase();
        d$$94 = b$$130;
        g$$55 = w$$13;
      }
      g$$55("previousSibling", b$$130, f$$29, a$$200, d$$94, c$$105);
      return;
    }
    function v839(a$$199, b$$129, c$$104) {
      var d$$93;
      var f$$28 = e$$101;
      e$$101 = e$$101 + 1;
      var g$$54 = x$$69;
      var v21871 = typeof b$$129;
      var v18081 = v21871 == "string";
      if (v18081) {
        var v21872 = l$$37.test(b$$129);
        v18081 = !v21872;
      }
      var v12569 = v18081;
      if (v12569) {
        b$$129 = b$$129.toLowerCase();
        d$$93 = b$$129;
        g$$54 = w$$13;
      }
      g$$54("parentNode", b$$129, f$$28, a$$199, d$$93, c$$104);
      return;
    }
    function v838(a$$198, b$$128) {
      var c$$103;
      var v5598 = typeof b$$128;
      var d$$92 = v5598 == "string";
      var e$$109 = 0;
      var f$$27 = a$$198.length;
      var v12570 = d$$92;
      if (v12570) {
        var v18082 = l$$37.test(b$$128);
        v12570 = !v18082;
      }
      var v5602 = v12570;
      if (v5602) {
        b$$128 = b$$128.toLowerCase();
        var v5600 = e$$109 < f$$27;
        for (;v5600;) {
          c$$103 = a$$198[e$$109];
          if (c$$103) {
            var g$$53 = c$$103.parentNode;
            var v5599;
            var v21873 = g$$53.nodeName;
            var v18083 = v21873.toLowerCase();
            var v12571 = v18083 === b$$128;
            if (v12571) {
              v5599 = g$$53;
            } else {
              v5599 = !1;
            }
            a$$198[e$$109] = v5599;
          }
          e$$109++;
          v5600 = e$$109 < f$$27;
        }
      } else {
        var v5601 = e$$109 < f$$27;
        for (;v5601;) {
          c$$103 = a$$198[e$$109];
          if (c$$103) {
            var v18084;
            if (d$$92) {
              v18084 = c$$103.parentNode;
            } else {
              var v21874 = c$$103.parentNode;
              v18084 = v21874 === b$$128;
            }
            a$$198[e$$109] = v18084;
          }
          e$$109++;
          v5601 = e$$109 < f$$27;
        }
        if (d$$92) {
          var v12572 = !0;
          m$$19.filter(b$$128, a$$198, v12572);
        }
      }
      return;
    }
    function v837(a$$197, b$$127) {
      var v5603 = typeof b$$127;
      var c$$102 = v5603 == "string";
      var v5604 = c$$102;
      if (v5604) {
        var v12573 = l$$37.test(b$$127);
        v5604 = !v12573;
      }
      var d$$91 = v5604;
      var v5605 = c$$102;
      if (v5605) {
        v5605 = !d$$91;
      }
      var e$$108 = v5605;
      if (d$$91) {
        b$$127 = b$$127.toLowerCase();
      }
      var f$$26 = 0;
      var g$$52 = a$$197.length;
      var h$$53;
      var v5609 = f$$26 < g$$52;
      for (;v5609;) {
        var v5608 = h$$53 = a$$197[f$$26];
        if (v5608) {
          var v12574 = h$$53 = h$$53.previousSibling;
          if (v12574) {
            var v18085 = h$$53.nodeType;
            v12574 = v18085 !== 1;
          }
          var v5606 = v12574;
          for (;v5606;) {
            var v12575 = h$$53 = h$$53.previousSibling;
            if (v12575) {
              var v18086 = h$$53.nodeType;
              v12575 = v18086 !== 1;
            }
            v5606 = v12575;
          }
          var v5607;
          var v18087 = e$$108;
          var v21876 = !v18087;
          if (v21876) {
            var v21875 = h$$53;
            if (v21875) {
              var v27520 = h$$53.nodeName;
              var v25871 = v27520.toLowerCase();
              v21875 = v25871 === b$$127;
            }
            v18087 = v21875;
          }
          var v12577 = v18087;
          if (v12577) {
            var v12576 = h$$53;
            var v18088 = !v12576;
            if (v18088) {
              v12576 = !1;
            }
            v5607 = v12576;
          } else {
            v5607 = h$$53 === b$$127;
          }
          a$$197[f$$26] = v5607;
        }
        f$$26++;
        v5609 = f$$26 < g$$52;
      }
      if (e$$108) {
        var v12578 = !0;
        m$$19.filter(b$$127, a$$197, v12578);
      }
      return;
    }
    function v836(a$$196) {
      return a$$196.getAttribute("type");
    }
    function v835(a$$195) {
      return a$$195.getAttribute("href");
    }
    function v834(a$$194) {
      var b$$126;
      var c$$101;
      var d$$90 = a$$194.nodeType;
      var e$$107 = "";
      if (d$$90) {
        var v18089 = d$$90 === 1;
        var v21877 = !v18089;
        if (v21877) {
          v18089 = d$$90 === 9;
        }
        var v12579 = v18089;
        var v18090 = !v12579;
        if (v18090) {
          v12579 = d$$90 === 11;
        }
        var v5614 = v12579;
        if (v5614) {
          var v18091 = a$$194.textContent;
          var v12580 = typeof v18091;
          var v5610 = v12580 == "string";
          if (v5610) {
            return a$$194.textContent;
          }
          var v18092 = a$$194.innerText;
          var v12581 = typeof v18092;
          var v5612 = v12581 == "string";
          if (v5612) {
            var v5611 = a$$194.innerText;
            return v5611.replace(k$$22, "");
          }
          a$$194 = a$$194.firstChild;
          for (;a$$194;) {
            var v12582 = n$$68(a$$194);
            e$$107 = e$$107 + v12582;
            a$$194 = a$$194.nextSibling;
          }
        } else {
          var v12583 = d$$90 === 3;
          var v18093 = !v12583;
          if (v18093) {
            v12583 = d$$90 === 4;
          }
          var v5613 = v12583;
          if (v5613) {
            return a$$194.nodeValue;
          }
        }
      } else {
        b$$126 = 0;
        var v5616 = c$$101 = a$$194[b$$126];
        for (;v5616;) {
          var v12584 = c$$101.nodeType;
          var v5615 = v12584 !== 8;
          if (v5615) {
            var v18094 = n$$68(c$$101);
            e$$107 = e$$107 + v18094;
          }
          b$$126++;
          v5616 = c$$101 = a$$194[b$$126];
        }
      }
      return e$$107;
    }
    function v833(a$$193) {
      var v5617 = "Syntax error, unrecognized expression: " + a$$193;
      throw new Error(v5617);
    }
    function v832(a$$192, c$$100, d$$89, e$$106) {
      var f$$25;
      var g$$51;
      var h$$52;
      var i$$124;
      var j$$45;
      var k$$26;
      var l$$39;
      var n$$70;
      var p$$32;
      var q$$10 = a$$192;
      var r$$12 = [];
      var s$$23 = c$$100;
      var v12585 = c$$100;
      if (v12585) {
        v12585 = c$$100[0];
      }
      var v5618 = v12585;
      if (v5618) {
        var v12586 = c$$100[0];
        v5618 = m$$19.isXML(v12586);
      }
      var t$$7 = v5618;
      var v12587 = a$$192;
      if (v12587) {
        v12587 = c$$100.length;
      }
      var v5632 = v12587;
      for (;v5632;) {
        var v5629 = o$$10.filter;
        for (h$$52 in v5629) {
          var v25872 = o$$10.leftMatch;
          var v21878 = v25872[h$$52];
          var v18095 = f$$25 = v21878.exec(a$$192);
          var v12588 = v18095 != null;
          if (v12588) {
            v12588 = f$$25[2];
          }
          var v5628 = v12588;
          if (v5628) {
            var v21879 = o$$10.filter;
            k$$26 = v21879[h$$52];
            l$$39 = f$$25[1];
            g$$51 = !1;
            f$$25.splice(1, 1);
            var v21880 = l$$39.length;
            var v18096 = v21880 - 1;
            var v12589 = l$$39.substr(v18096);
            var v5619 = v12589 === "\\";
            if (v5619) {
              continue;
            }
            var v5620 = s$$23 === r$$12;
            if (v5620) {
              r$$12 = [];
            }
            var v12590 = o$$10.preFilter;
            var v5624 = v12590[h$$52];
            if (v5624) {
              var v5621 = o$$10.preFilter;
              f$$25 = v5621[h$$52](f$$25, s$$23, d$$89, r$$12, e$$106, t$$7);
              var v5623 = !f$$25;
              if (v5623) {
                g$$51 = i$$124 = !0;
              } else {
                var v12591 = !0;
                var v5622 = f$$25 === v12591;
                if (v5622) {
                  continue;
                }
              }
            }
            if (f$$25) {
              n$$70 = 0;
              var v12592 = j$$45 = s$$23[n$$70];
              var v5625 = v12592 != null;
              for (;v5625;) {
                if (j$$45) {
                  i$$124 = k$$26(j$$45, f$$25, n$$70, s$$23);
                  p$$32 = e$$106 ^ i$$124;
                  var v18097;
                  var v25873 = d$$89;
                  if (v25873) {
                    v25873 = i$$124 != null;
                  }
                  var v21883 = v25873;
                  if (v21883) {
                    var v21881;
                    if (p$$32) {
                      v21881 = g$$51 = !0;
                    } else {
                      v21881 = s$$23[n$$70] = !1;
                    }
                    v18097 = v21881;
                  } else {
                    var v21882 = p$$32;
                    if (v21882) {
                      r$$12.push(j$$45);
                      v21882 = g$$51 = !0;
                    }
                    v18097 = v21882;
                  }
                  v18097;
                }
                n$$70++;
                var v12593 = j$$45 = s$$23[n$$70];
                v5625 = v12593 != null;
              }
            }
            var v5627 = i$$124 !== b$$9;
            if (v5627) {
              var v18098 = !d$$89;
              if (v18098) {
                s$$23 = r$$12;
              }
              var v18099 = o$$10.match;
              var v12594 = v18099[h$$52];
              a$$192 = a$$192.replace(v12594, "");
              var v5626 = !g$$51;
              if (v5626) {
                return[];
              }
              break;
            }
          }
        }
        var v5631 = a$$192 === q$$10;
        if (v5631) {
          var v5630 = g$$51 == null;
          if (v5630) {
            m$$19.error(a$$192);
          } else {
            break;
          }
        }
        q$$10 = a$$192;
        var v12595 = a$$192;
        if (v12595) {
          v12595 = c$$100.length;
        }
        v5632 = v12595;
      }
      return s$$23;
    }
    function v831(a$$191, b$$125, c$$99) {
      var d$$88;
      var e$$105;
      var f$$24;
      var g$$50;
      var h$$51;
      var i$$123;
      var v5633 = !a$$191;
      if (v5633) {
        return[];
      }
      e$$105 = 0;
      var v12596 = o$$10.order;
      f$$24 = v12596.length;
      var v5639 = e$$105 < f$$24;
      for (;v5639;) {
        var v5634 = o$$10.order;
        h$$51 = v5634[e$$105];
        var v18100 = o$$10.leftMatch;
        var v12597 = v18100[h$$51];
        var v5638 = g$$50 = v12597.exec(a$$191);
        if (v5638) {
          i$$123 = g$$50[1];
          g$$50.splice(1, 1);
          var v21884 = i$$123.length;
          var v18101 = v21884 - 1;
          var v12598 = i$$123.substr(v18101);
          var v5637 = v12598 !== "\\";
          if (v5637) {
            var v18102 = g$$50[1];
            var v21885 = !v18102;
            if (v21885) {
              v18102 = "";
            }
            var v12599 = v18102;
            var v31131 = v12599.replace(j$$41, "");
            g$$50[1] = v31131;
            var v12600 = o$$10.find;
            d$$88 = v12600[h$$51](g$$50, b$$125, c$$99);
            var v5636 = d$$88 != null;
            if (v5636) {
              var v12601 = o$$10.match;
              var v5635 = v12601[h$$51];
              a$$191 = a$$191.replace(v5635, "");
              break;
            }
          }
        }
        e$$105++;
        v5639 = e$$105 < f$$24;
      }
      var v12603 = !d$$88;
      if (v12603) {
        var v12602;
        var v25874 = b$$125.getElementsByTagName;
        var v21886 = typeof v25874;
        var v18103 = v21886 != "undefined";
        if (v18103) {
          v12602 = b$$125.getElementsByTagName("*");
        } else {
          v12602 = [];
        }
        d$$88 = v12602;
      }
      return{set:d$$88, expr:a$$191};
    }
    function v830(a$$190, b$$124) {
      var v18104 = [a$$190];
      var v12604 = m$$19(b$$124, null, null, v18104);
      var v5640 = v12604.length;
      return v5640 > 0;
    }
    function v829(a$$189, b$$123) {
      return m$$19(a$$189, null, null, b$$123);
    }
    function v828(a$$188) {
      if (u$$5) {
        h$$47 = i$$119;
        a$$188.sort(u$$5);
        if (h$$47) {
          var b$$122 = 1;
          var v12605 = a$$188.length;
          var v5642 = b$$122 < v12605;
          for (;v5642;) {
            var v12606 = a$$188[b$$122];
            var v18105 = b$$122 - 1;
            var v12607 = a$$188[v18105];
            var v5641 = v12606 === v12607;
            if (v5641) {
              var v12608 = b$$122;
              b$$122 = b$$122 - 1;
              a$$188.splice(v12608, 1);
            }
            b$$122++;
            var v12609 = a$$188.length;
            v5642 = b$$122 < v12609;
          }
        }
      }
      return a$$188;
    }
    function v827() {
      i$$119 = !1;
      return 0;
    }
    function y$$51(a$$264, b$$174, c$$130) {
      var d$$112;
      var e$$126 = [];
      var f$$42 = "";
      var v5643;
      var v12610 = b$$174.nodeType;
      if (v12610) {
        v5643 = [b$$174];
      } else {
        v5643 = b$$174;
      }
      var g$$65 = v5643;
      var v18106 = o$$10.match;
      var v12611 = v18106.PSEUDO;
      var v5644 = d$$112 = v12611.exec(a$$264);
      for (;v5644;) {
        var v18107 = d$$112[0];
        f$$42 = f$$42 + v18107;
        var v18108 = o$$10.match;
        var v12612 = v18108.PSEUDO;
        a$$264 = a$$264.replace(v12612, "");
        var v18109 = o$$10.match;
        var v12613 = v18109.PSEUDO;
        v5644 = d$$112 = v12613.exec(a$$264);
      }
      var v5645;
      var v18110 = o$$10.relative;
      var v12614 = v18110[a$$264];
      if (v12614) {
        v5645 = a$$264 + "*";
      } else {
        v5645 = a$$264;
      }
      a$$264 = v5645;
      var h$$58 = 0;
      var i$$129 = g$$65.length;
      var v5647 = h$$58 < i$$129;
      for (;v5647;) {
        var v5646 = g$$65[h$$58];
        m$$19(a$$264, v5646, e$$126, c$$130);
        h$$58++;
        v5647 = h$$58 < i$$129;
      }
      return m$$19.filter(f$$42, e$$126);
    }
    function s$$22(a$$245, b$$160) {
      var v12615 = Array.prototype;
      var v5648 = v12615.slice;
      a$$245 = v5648.call(a$$245, 0);
      if (b$$160) {
        var v5649 = b$$160.push;
        v5649.apply(b$$160, a$$245);
        return b$$160;
      }
      return a$$245;
    }
    function q$$8(a$$244, b$$159) {
      var v12616 = b$$159 - 0;
      var v5650 = v12616 + 1;
      return "\\" + v5650;
    }
    function m$$19(b$$121, d$$87, e$$104, f$$23) {
      e$$104 = e$$104 || [];
      d$$87 = d$$87 || c$$5;
      var h$$50 = d$$87;
      var v18111 = d$$87.nodeType;
      var v12617 = v18111 !== 1;
      if (v12617) {
        var v18112 = d$$87.nodeType;
        v12617 = v18112 !== 9;
      }
      var v5651 = v12617;
      if (v5651) {
        return[];
      }
      var v12618 = !b$$121;
      var v18114 = !v12618;
      if (v18114) {
        var v18113 = typeof b$$121;
        v12618 = v18113 != "string";
      }
      var v5652 = v12618;
      if (v5652) {
        return e$$104;
      }
      var i$$122;
      var j$$44;
      var k$$25;
      var l$$38;
      var n$$69;
      var q$$9;
      var r$$11;
      var t$$6;
      var u$$6 = !0;
      var v$$7 = m$$19.isXML(d$$87);
      var w$$14 = [];
      var x$$70 = b$$121;
      do {
        a$$185.exec("");
        i$$122 = a$$185.exec(x$$70);
        if (i$$122) {
          x$$70 = i$$122[3];
          var v12619 = i$$122[1];
          w$$14.push(v12619);
          var v5653 = i$$122[2];
          if (v5653) {
            l$$38 = i$$122[3];
            break;
          }
        }
      } while (i$$122);
      var v18115 = w$$14.length;
      var v12620 = v18115 > 1;
      if (v12620) {
        v12620 = p$$31.exec(b$$121);
      }
      var v5660 = v12620;
      if (v5660) {
        var v18116 = w$$14.length;
        var v12621 = v18116 === 2;
        if (v12621) {
          var v18117 = o$$10.relative;
          var v18118 = w$$14[0];
          v12621 = v18117[v18118];
        }
        var v5657 = v12621;
        if (v5657) {
          var v12622 = w$$14[0];
          var v12623 = w$$14[1];
          var v5654 = v12622 + v12623;
          j$$44 = y$$51(v5654, d$$87, f$$23);
        } else {
          var v5655;
          var v18119 = o$$10.relative;
          var v18120 = w$$14[0];
          var v12625 = v18119[v18120];
          if (v12625) {
            v5655 = [d$$87];
          } else {
            var v12624 = w$$14.shift();
            v5655 = m$$19(v12624, d$$87);
          }
          j$$44 = v5655;
          var v5656 = w$$14.length;
          for (;v5656;) {
            b$$121 = w$$14.shift();
            var v21887 = o$$10.relative;
            var v18121 = v21887[b$$121];
            if (v18121) {
              var v25875 = w$$14.shift();
              b$$121 = b$$121 + v25875;
            }
            j$$44 = y$$51(b$$121, j$$44, f$$23);
            v5656 = w$$14.length;
          }
        }
      } else {
        var v27521 = !f$$23;
        if (v27521) {
          var v28565 = w$$14.length;
          v27521 = v28565 > 1;
        }
        var v25876 = v27521;
        if (v25876) {
          var v27522 = d$$87.nodeType;
          v25876 = v27522 === 9;
        }
        var v21888 = v25876;
        if (v21888) {
          v21888 = !v$$7;
        }
        var v18122 = v21888;
        if (v18122) {
          var v25877 = o$$10.match;
          var v21889 = v25877.ID;
          var v21890 = w$$14[0];
          v18122 = v21889.test(v21890);
        }
        var v12626 = v18122;
        if (v12626) {
          var v25878 = o$$10.match;
          var v21891 = v25878.ID;
          var v27523 = w$$14.length;
          var v25879 = v27523 - 1;
          var v21892 = w$$14[v25879];
          var v18123 = v21891.test(v21892);
          v12626 = !v18123;
        }
        var v5658 = v12626;
        if (v5658) {
          var v18124 = w$$14.shift();
          n$$69 = m$$19.find(v18124, d$$87, v$$7);
          var v18125;
          var v21895 = n$$69.expr;
          if (v21895) {
            var v25880 = n$$69.expr;
            var v25881 = n$$69.set;
            var v21893 = m$$19.filter(v25880, v25881);
            v18125 = v21893[0];
          } else {
            var v21894 = n$$69.set;
            v18125 = v21894[0];
          }
          d$$87 = v18125;
        }
        if (d$$87) {
          var v18126;
          if (f$$23) {
            var v21896 = w$$14.pop();
            var v21897 = s$$22(f$$23);
            v18126 = {expr:v21896, set:v21897};
          } else {
            var v21898 = w$$14.pop();
            var v25882;
            var v29668 = w$$14.length;
            var v29236 = v29668 === 1;
            if (v29236) {
              var v29951 = w$$14[0];
              var v29669 = v29951 === "~";
              var v29953 = !v29669;
              if (v29953) {
                var v29952 = w$$14[0];
                v29669 = v29952 === "+";
              }
              v29236 = v29669;
            }
            var v28566 = v29236;
            if (v28566) {
              v28566 = d$$87.parentNode;
            }
            var v27524 = v28566;
            if (v27524) {
              v25882 = d$$87.parentNode;
            } else {
              v25882 = d$$87;
            }
            var v21899 = v25882;
            v18126 = m$$19.find(v21898, v21899, v$$7);
          }
          n$$69 = v18126;
          var v18127;
          var v21902 = n$$69.expr;
          if (v21902) {
            var v21900 = n$$69.expr;
            var v21901 = n$$69.set;
            v18127 = m$$19.filter(v21900, v21901);
          } else {
            v18127 = n$$69.set;
          }
          j$$44 = v18127;
          var v12627;
          var v21903 = w$$14.length;
          var v18128 = v21903 > 0;
          if (v18128) {
            v12627 = k$$25 = s$$22(j$$44);
          } else {
            v12627 = u$$6 = !1;
          }
          v12627;
          var v5659 = w$$14.length;
          for (;v5659;) {
            q$$9 = w$$14.pop();
            r$$11 = q$$9;
            var v21904;
            var v27525 = o$$10.relative;
            var v25883 = v27525[q$$9];
            if (v25883) {
              v21904 = r$$11 = w$$14.pop();
            } else {
              v21904 = q$$9 = "";
            }
            v21904;
            var v18129 = r$$11 == null;
            if (v18129) {
              r$$11 = d$$87;
            }
            var v12628 = o$$10.relative;
            v12628[q$$9](k$$25, r$$11, v$$7);
            v5659 = w$$14.length;
          }
        } else {
          k$$25 = w$$14 = [];
        }
      }
      var v18130 = !k$$25;
      if (v18130) {
        k$$25 = j$$44;
      }
      var v18132 = !k$$25;
      if (v18132) {
        var v18131 = q$$9 || b$$121;
        m$$19.error(v18131);
      }
      var v12629 = g$$47.call(k$$25);
      var v5668 = v12629 === "[object Array]";
      if (v5668) {
        var v5667 = !u$$6;
        if (v5667) {
          var v5661 = e$$104.push;
          v5661.apply(e$$104, k$$25);
        } else {
          var v12630 = d$$87;
          if (v12630) {
            var v18133 = d$$87.nodeType;
            v12630 = v18133 === 1;
          }
          var v5666 = v12630;
          if (v5666) {
            t$$6 = 0;
            var v12631 = k$$25[t$$6];
            var v5663 = v12631 != null;
            for (;v5663;) {
              var v12632 = k$$25[t$$6];
              if (v12632) {
                var v21905 = k$$25[t$$6];
                var v21906 = !0;
                var v18134 = v21905 === v21906;
                var v21908 = !v18134;
                if (v21908) {
                  var v27526 = k$$25[t$$6];
                  var v25884 = v27526.nodeType;
                  var v21907 = v25884 === 1;
                  if (v21907) {
                    var v25885 = k$$25[t$$6];
                    v21907 = m$$19.contains(d$$87, v25885);
                  }
                  v18134 = v21907;
                }
                v12632 = v18134;
              }
              var v5662 = v12632;
              if (v5662) {
                var v12633 = j$$44[t$$6];
                e$$104.push(v12633);
              }
              t$$6++;
              var v12634 = k$$25[t$$6];
              v5663 = v12634 != null;
            }
          } else {
            t$$6 = 0;
            var v12635 = k$$25[t$$6];
            var v5665 = v12635 != null;
            for (;v5665;) {
              var v12636 = k$$25[t$$6];
              if (v12636) {
                var v21909 = k$$25[t$$6];
                var v18135 = v21909.nodeType;
                v12636 = v18135 === 1;
              }
              var v5664 = v12636;
              if (v5664) {
                var v12637 = j$$44[t$$6];
                e$$104.push(v12637);
              }
              t$$6++;
              var v12638 = k$$25[t$$6];
              v5665 = v12638 != null;
            }
          }
        }
      } else {
        s$$22(k$$25, e$$104);
      }
      if (l$$38) {
        m$$19(l$$38, h$$50, e$$104, f$$23);
        m$$19.uniqueSort(e$$104);
      }
      return e$$104;
    }
    function x$$69(a$$186, b$$119, c$$97, e$$102, f$$21, g$$48) {
      var h$$48 = 0;
      var i$$120 = e$$102.length;
      var v5675 = h$$48 < i$$120;
      for (;v5675;) {
        var j$$42 = e$$102[h$$48];
        if (j$$42) {
          var k$$23 = !1;
          j$$42 = j$$42[a$$186];
          for (;j$$42;) {
            var v12639 = j$$42[d$$86];
            var v5670 = v12639 === c$$97;
            if (v5670) {
              var v5669 = j$$42.sizset;
              k$$23 = e$$102[v5669];
              break;
            }
            var v12640 = j$$42.nodeType;
            var v5674 = v12640 === 1;
            if (v5674) {
              var v12641 = !g$$48;
              if (v12641) {
                j$$42[d$$86] = c$$97;
                j$$42.sizset = h$$48;
              }
              var v12642 = typeof b$$119;
              var v5673 = v12642 != "string";
              if (v5673) {
                var v5671 = j$$42 === b$$119;
                if (v5671) {
                  k$$23 = !0;
                  break;
                }
              } else {
                var v21910 = [j$$42];
                var v18136 = m$$19.filter(b$$119, v21910);
                var v12643 = v18136.length;
                var v5672 = v12643 > 0;
                if (v5672) {
                  k$$23 = j$$42;
                  break;
                }
              }
            }
            j$$42 = j$$42[a$$186];
          }
          e$$102[h$$48] = k$$23;
        }
        h$$48++;
        v5675 = h$$48 < i$$120;
      }
      return;
    }
    function w$$13(a$$187, b$$120, c$$98, e$$103, f$$22, g$$49) {
      var h$$49 = 0;
      var i$$121 = e$$103.length;
      var v5680 = h$$49 < i$$121;
      for (;v5680;) {
        var j$$43 = e$$103[h$$49];
        if (j$$43) {
          var k$$24 = !1;
          j$$43 = j$$43[a$$187];
          for (;j$$43;) {
            var v12644 = j$$43[d$$86];
            var v5677 = v12644 === c$$98;
            if (v5677) {
              var v5676 = j$$43.sizset;
              k$$24 = e$$103[v5676];
              break;
            }
            var v18137 = j$$43.nodeType;
            var v12645 = v18137 === 1;
            if (v12645) {
              v12645 = !g$$49;
            }
            var v5678 = v12645;
            if (v5678) {
              j$$43[d$$86] = c$$98;
              j$$43.sizset = h$$49;
            }
            var v18138 = j$$43.nodeName;
            var v12646 = v18138.toLowerCase();
            var v5679 = v12646 === b$$120;
            if (v5679) {
              k$$24 = j$$43;
              break;
            }
            j$$43 = j$$43[a$$187];
          }
          e$$103[h$$49] = k$$24;
        }
        h$$49++;
        v5680 = h$$49 < i$$121;
      }
      return;
    }
    var a$$185 = /((?:\((?:\([^()]+\)|[^()]+)+\)|\[(?:\[[^\[\]]*\]|['"][^'"]*['"]|[^\[\]'"]+)+\]|\\.|[^ >+~,(\[\\]+)+|[>+~])(\s*,\s*)?((?:.|\r|\n)*)/g;
    var v18139 = Math.random();
    var v12647 = v18139 + "";
    var v5681 = v12647.replace(".", "");
    var d$$86 = "sizcache" + v5681;
    var e$$101 = 0;
    var v5682 = Object.prototype;
    var g$$47 = v5682.toString;
    var h$$47 = !1;
    var i$$119 = !0;
    var j$$41 = /\\/g;
    var k$$22 = /\r\n/g;
    var l$$37 = /\W/;
    var v5683 = [0, 0];
    v5683.sort(v827);
    m$$19.uniqueSort = v828;
    m$$19.matches = v829;
    m$$19.matchesSelector = v830;
    m$$19.find = v831;
    m$$19.filter = v832;
    m$$19.error = v833;
    var n$$68 = m$$19.getText = v834;
    var v5684 = ["ID", "NAME", "TAG"];
    var v5685 = {ID:/#((?:[\w\u00c0-\uFFFF\-]|\\.)+)/, CLASS:/\.((?:[\w\u00c0-\uFFFF\-]|\\.)+)/, NAME:/\[name=['"]*((?:[\w\u00c0-\uFFFF\-]|\\.)+)['"]*\]/, ATTR:/\[\s*((?:[\w\u00c0-\uFFFF\-]|\\.)+)\s*(?:(\S?=)\s*(?:(['"])(.*?)\3|(#?(?:[\w\u00c0-\uFFFF\-]|\\.)*)|)|)\s*\]/, TAG:/^((?:[\w\u00c0-\uFFFF\*\-]|\\.)+)/, CHILD:/:(only|nth|last|first)-child(?:\(\s*(even|odd|(?:[+\-]?\d+|(?:[+\-]?\d*)?n\s*(?:[+\-]\s*\d+)?))\s*\))?/, POS:/:(nth|eq|gt|lt|first|last|even|odd)(?:\((\d*)\))?(?=[^\-]|$)/, PSEUDO:/:((?:[\w\u00c0-\uFFFF\-]|\\.)+)(?:\((['"]?)((?:\([^\)]+\)|[^\(\)]*)+)\2\))?/};
    var v5686 = {"class":"className", "for":"htmlFor"};
    var v5687 = {href:v835, type:v836};
    var v5688 = {"+":v837, ">":v838, "":v839, "~":v840};
    var v5689 = {ID:v841, NAME:v842, TAG:v843};
    var v5690 = {CLASS:v844, ID:v845, TAG:v846, CHILD:v847, ATTR:v848, PSEUDO:v849, POS:v850};
    var v5691 = {enabled:v851, disabled:v852, checked:v853, selected:v854, parent:v855, empty:v856, has:v857, header:v858, text:v859, radio:v860, checkbox:v861, file:v862, password:v863, submit:v864, image:v865, reset:v866, button:v867, input:v868, focus:v869};
    var v5692 = {first:v870, last:v871, even:v872, odd:v873, lt:v874, gt:v875, nth:v876, eq:v877};
    var v5693 = {PSEUDO:v878, CHILD:v879, ID:v880, TAG:v881, CLASS:v882, ATTR:v883, POS:v884};
    var o$$10 = m$$19.selectors = {order:v5684, match:v5685, leftMatch:{}, attrMap:v5686, attrHandle:v5687, relative:v5688, find:v5689, preFilter:v5690, filters:v5691, setFilters:v5692, filter:v5693};
    var v5694 = o$$10.match;
    var p$$31 = v5694.POS;
    var r$$10;
    var v5695 = o$$10.match;
    for (r$$10 in v5695) {
      var v12648 = o$$10.match;
      var v12649 = r$$10;
      var v27527 = o$$10.match;
      var v25886 = v27527[r$$10];
      var v21911 = v25886.source;
      var v21912 = /(?![^\[]*\])(?![^\(]*\))/.source;
      var v18140 = v21911 + v21912;
      var v31132 = new RegExp(v18140);
      v12648[v12649] = v31132;
      var v12650 = o$$10.leftMatch;
      var v12651 = r$$10;
      var v21913 = /(^(?:.|\r|\n)*?)/.source;
      var v28567 = o$$10.match;
      var v27528 = v28567[r$$10];
      var v25887 = v27528.source;
      var v21914 = v25887.replace(/\\(\d+)/g, q$$8);
      var v18141 = v21913 + v21914;
      var v31133 = new RegExp(v18141);
      v12650[v12651] = v31133;
    }
    var v5696 = o$$10.match;
    v5696.globalPOS = p$$31;
    try {
      var v21915 = Array.prototype;
      var v18142 = v21915.slice;
      var v21916 = c$$5.documentElement;
      var v18143 = v21916.childNodes;
      var v12652 = v18142.call(v18143, 0);
      var v5697 = v12652[0];
      v5697.nodeType;
    } catch (t$$8) {
      s$$22 = v885;
    }
    var u$$5;
    var v$$6;
    var v29237;
    var v29954 = c$$5.documentElement;
    var v29670 = v29954.compareDocumentPosition;
    if (v29670) {
      v29237 = u$$5 = v886;
    } else {
      u$$5 = v887;
      v29237 = v$$6 = v888;
    }
    v29237;
    v891();
    v894();
    var v27529 = c$$5.querySelectorAll;
    if (v27529) {
      v896();
    }
    v898();
    v900();
    var v18144;
    var v25888 = c$$5.documentElement;
    var v21918 = v25888.contains;
    if (v21918) {
      v18144 = m$$19.contains = v901;
    } else {
      var v21917;
      var v27530 = c$$5.documentElement;
      var v25889 = v27530.compareDocumentPosition;
      if (v25889) {
        v21917 = m$$19.contains = v902;
      } else {
        v21917 = m$$19.contains = v903;
      }
      v18144 = v21917;
    }
    v18144;
    m$$19.isXML = v904;
    m$$19.attr = f$$4.attr;
    var v29671 = m$$19.selectors;
    v29671.attrMap = {};
    f$$4.find = m$$19;
    f$$4.expr = m$$19.selectors;
    var v27531 = f$$4.expr;
    var v28568 = f$$4.expr;
    v27531[":"] = v28568.filters;
    f$$4.unique = m$$19.uniqueSort;
    f$$4.text = m$$19.getText;
    f$$4.isXMLDoc = m$$19.isXML;
    f$$4.contains = m$$19.contains;
    return;
  }
  function v826(a$$183, b$$118) {
    function v825(a$$184, c$$96) {
      var v5698 = c$$96 == null;
      if (v5698) {
        c$$96 = a$$184;
        a$$184 = null;
      }
      var v5699;
      var v18145 = arguments.length;
      var v12653 = v18145 > 0;
      if (v12653) {
        v5699 = this.on(b$$118, null, a$$184, c$$96);
      } else {
        v5699 = this.trigger(b$$118);
      }
      return v5699;
    }
    var v21919 = f$$4.fn;
    v21919[b$$118] = v825;
    var v21920 = f$$4.attrFn;
    if (v21920) {
      var v25890 = f$$4.attrFn;
      v25890[b$$118] = !0;
    }
    var v18146 = C.test(b$$118);
    if (v18146) {
      var v25891 = f$$4.event;
      var v21921 = v25891.fixHooks;
      var v25892 = f$$4.event;
      v21921[b$$118] = v25892.keyHooks;
    }
    var v12654 = D.test(b$$118);
    if (v12654) {
      var v21922 = f$$4.event;
      var v18147 = v21922.fixHooks;
      var v21923 = f$$4.event;
      v18147[b$$118] = v21923.mouseHooks;
    }
    return;
  }
  function v824(a$$182, b$$117) {
    var v5700 = this.mouseenter(a$$182);
    var v5701 = b$$117 || a$$182;
    return v5700.mouseleave(v5701);
  }
  function v823(a$$181) {
    function e$$99(c$$95) {
      var v21924 = a$$181.guid;
      var v18148 = "lastToggle" + v21924;
      var v12655 = f$$4._data(this, v18148);
      var v18149 = !v12655;
      if (v18149) {
        v12655 = 0;
      }
      var v5702 = v12655;
      var e$$100 = v5702 % d$$85;
      var v18150 = a$$181.guid;
      var v12656 = "lastToggle" + v18150;
      var v12657 = e$$100 + 1;
      f$$4._data(this, v12656, v12657);
      c$$95.preventDefault();
      var v12658 = b$$116[e$$100];
      var v5703 = v12658.apply(this, arguments);
      var v12659 = !v5703;
      if (v12659) {
        v5703 = !1;
      }
      return v5703;
    }
    var b$$116 = arguments;
    var v5704 = a$$181.guid;
    var v12660 = !v5704;
    if (v12660) {
      v5704 = f$$4.guid;
      var v18151 = f$$4.guid;
      f$$4.guid = v18151 + 1;
    }
    var c$$94 = v5704;
    var d$$85 = 0;
    e$$99.guid = c$$94;
    var v12661 = b$$116.length;
    var v5706 = d$$85 < v12661;
    for (;v5706;) {
      var v12662 = d$$85;
      d$$85 = d$$85 + 1;
      var v5705 = b$$116[v12662];
      v5705.guid = c$$94;
      var v12663 = b$$116.length;
      v5706 = d$$85 < v12663;
    }
    return this.click(e$$99);
  }
  function v822(a$$180, b$$115) {
    var v5710 = this[0];
    if (v5710) {
      var v5707 = f$$4.event;
      var v5708 = this[0];
      var v5709 = !0;
      return v5707.trigger(a$$180, b$$115, v5708, v5709);
    }
    return;
  }
  function v821(a$$179, b$$114) {
    function v820() {
      var v5711 = f$$4.event;
      v5711.trigger(a$$179, b$$114, this);
      return;
    }
    return this.each(v820);
  }
  function v819(a$$178, b$$113, c$$93) {
    var v5712;
    var v18152 = arguments.length;
    var v12664 = v18152 == 1;
    if (v12664) {
      v5712 = this.off(a$$178, "**");
    } else {
      v5712 = this.off(b$$113, a$$178, c$$93);
    }
    return v5712;
  }
  function v818(a$$177, b$$112, c$$92, d$$84) {
    return this.on(b$$112, a$$177, c$$92, d$$84);
  }
  function v817(a$$176, b$$111) {
    var v12665 = this.context;
    var v5713 = f$$4(v12665);
    var v12666 = this.selector;
    var v18153 = !v12666;
    if (v18153) {
      v12666 = "**";
    }
    var v5714 = v12666;
    v5713.off(a$$176, v5714, b$$111);
    return this;
  }
  function v816(a$$175, b$$110, c$$91) {
    var v12667 = this.context;
    var v5715 = f$$4(v12667);
    var v5716 = this.selector;
    v5715.on(a$$175, v5716, b$$110, c$$91);
    return this;
  }
  function v815(a$$174, b$$109) {
    return this.off(a$$174, null, b$$109);
  }
  function v814(a$$173, b$$108, c$$90) {
    return this.on(a$$173, null, b$$108, c$$90);
  }
  function v813(a$$172, c$$89, d$$83) {
    function v812() {
      var v5717 = f$$4.event;
      v5717.remove(this, a$$172, d$$83, c$$89);
      return;
    }
    var v18154 = a$$172;
    if (v18154) {
      v18154 = a$$172.preventDefault;
    }
    var v12668 = v18154;
    if (v12668) {
      v12668 = a$$172.handleObj;
    }
    var v5722 = v12668;
    if (v5722) {
      var e$$98 = a$$172.handleObj;
      var v12669 = a$$172.delegateTarget;
      var v5718 = f$$4(v12669);
      var v12670;
      var v18157 = e$$98.namespace;
      if (v18157) {
        var v21925 = e$$98.origType;
        var v18155 = v21925 + ".";
        var v18156 = e$$98.namespace;
        v12670 = v18155 + v18156;
      } else {
        v12670 = e$$98.origType;
      }
      var v5719 = v12670;
      var v5720 = e$$98.selector;
      var v5721 = e$$98.handler;
      v5718.off(v5719, v5720, v5721);
      return this;
    }
    var v12671 = typeof a$$172;
    var v5724 = v12671 == "object";
    if (v5724) {
      var g$$46;
      for (g$$46 in a$$172) {
        var v5723 = a$$172[g$$46];
        this.off(g$$46, c$$89, v5723);
      }
      return this;
    }
    var v18158 = !1;
    var v12672 = c$$89 === v18158;
    var v18160 = !v12672;
    if (v18160) {
      var v18159 = typeof c$$89;
      v12672 = v18159 == "function";
    }
    var v5725 = v12672;
    if (v5725) {
      d$$83 = c$$89;
      c$$89 = b$$9;
    }
    var v12673 = !1;
    var v5726 = d$$83 === v12673;
    if (v5726) {
      d$$83 = J;
    }
    return this.each(v812);
  }
  function v811(a$$171, b$$107, c$$88, d$$82) {
    return this.on(a$$171, b$$107, c$$88, d$$82, 1);
  }
  function v810(a$$169, c$$87, d$$81, e$$97, g$$45) {
    function v809() {
      var v5727 = f$$4.event;
      v5727.add(this, a$$169, e$$97, d$$81, c$$87);
      return;
    }
    function v808(a$$170) {
      var v5728 = f$$4();
      v5728.off(a$$170);
      return h$$46.apply(this, arguments);
    }
    var h$$46;
    var i$$118;
    var v12674 = typeof a$$169;
    var v5731 = v12674 == "object";
    if (v5731) {
      var v12675 = typeof c$$87;
      var v5729 = v12675 != "string";
      if (v5729) {
        d$$81 = d$$81 || c$$87;
        c$$87 = b$$9;
      }
      for (i$$118 in a$$169) {
        var v5730 = a$$169[i$$118];
        this.on(i$$118, c$$87, d$$81, v5730, g$$45);
      }
      return this;
    }
    var v5732;
    var v18161 = d$$81 == null;
    if (v18161) {
      v18161 = e$$97 == null;
    }
    var v12677 = v18161;
    if (v12677) {
      e$$97 = c$$87;
      v5732 = d$$81 = c$$87 = b$$9;
    } else {
      var v12676 = e$$97 == null;
      if (v12676) {
        var v18162;
        var v25893 = typeof c$$87;
        var v21926 = v25893 == "string";
        if (v21926) {
          e$$97 = d$$81;
          v18162 = d$$81 = b$$9;
        } else {
          e$$97 = d$$81;
          d$$81 = c$$87;
          v18162 = c$$87 = b$$9;
        }
        v12676 = v18162;
      }
      v5732 = v12676;
    }
    v5732;
    var v12678 = !1;
    var v5734 = e$$97 === v12678;
    if (v5734) {
      e$$97 = J;
    } else {
      var v5733 = !e$$97;
      if (v5733) {
        return this;
      }
    }
    var v5735 = g$$45 === 1;
    if (v5735) {
      h$$46 = e$$97;
      e$$97 = v808;
      var v18163 = h$$46.guid;
      var v21927 = !v18163;
      if (v21927) {
        v18163 = h$$46.guid = f$$4.guid;
        var v25894 = f$$4.guid;
        f$$4.guid = v25894 + 1;
      }
      e$$97.guid = v18163;
    }
    return this.each(v809);
  }
  function v807(a$$167, b$$106) {
    function v806() {
      var v12679 = d$$80 = d$$80 - 1;
      var v5736 = v12679 === 0;
      if (v5736) {
        var v12680 = !0;
        c$$5.removeEventListener(a$$167, e$$96, v12680);
      }
      return;
    }
    function v805() {
      var v12681 = d$$80;
      d$$80 = d$$80 + 1;
      var v5737 = v12681 === 0;
      if (v5737) {
        var v12682 = !0;
        c$$5.addEventListener(a$$167, e$$96, v12682);
      }
      return;
    }
    function e$$96(a$$168) {
      var v5738 = f$$4.event;
      var v5739 = a$$168.target;
      var v12683 = f$$4.event;
      var v5740 = v12683.fix(a$$168);
      var v5741 = !0;
      v5738.simulate(b$$106, v5739, v5740, v5741);
      return;
    }
    var d$$80 = 0;
    var v12684 = f$$4.event;
    var v5742 = v12684.special;
    v5742[b$$106] = {setup:v805, teardown:v806};
    return;
  }
  function v804() {
    var v5743 = f$$4.event;
    v5743.remove(this, "._change");
    var v5744 = this.nodeName;
    return z$$2.test(v5744);
  }
  function v803(a$$166) {
    var b$$105 = a$$166.target;
    var v21928 = this !== b$$105;
    var v25895 = !v21928;
    if (v25895) {
      v21928 = a$$166.isSimulated;
    }
    var v18164 = v21928;
    var v21929 = !v18164;
    if (v21929) {
      v18164 = a$$166.isTrigger;
    }
    var v12685 = v18164;
    var v18166 = !v12685;
    if (v18166) {
      var v21930 = b$$105.type;
      var v18165 = v21930 !== "radio";
      if (v18165) {
        var v21931 = b$$105.type;
        v18165 = v21931 !== "checkbox";
      }
      v12685 = v18165;
    }
    var v5746 = v12685;
    if (v5746) {
      var v12686 = a$$166.handleObj;
      var v5745 = v12686.handler;
      return v5745.apply(this, arguments);
    }
    return;
  }
  function v802() {
    function v801(a$$164) {
      function v800(a$$165) {
        var v18167 = this.parentNode;
        if (v18167) {
          var v21932 = a$$165.isSimulated;
          v18167 = !v21932;
        }
        var v12687 = v18167;
        if (v12687) {
          var v18168 = a$$165.isTrigger;
          v12687 = !v18168;
        }
        var v5747 = v12687;
        if (v5747) {
          var v12688 = f$$4.event;
          var v12689 = this.parentNode;
          var v12690 = !0;
          v12688.simulate("change", v12689, a$$165, v12690);
        }
        return;
      }
      var b$$104 = a$$164.target;
      var v18169 = b$$104.nodeName;
      var v12691 = z$$2.test(v18169);
      if (v12691) {
        var v18170 = b$$104._change_attached;
        v12691 = !v18170;
      }
      var v5748 = v12691;
      if (v5748) {
        var v18171 = f$$4.event;
        v18171.add(b$$104, "change._change", v800);
        b$$104._change_attached = !0;
      }
      return;
    }
    function v799(a$$163) {
      var v12692 = this._just_changed;
      if (v12692) {
        var v18172 = a$$163.isTrigger;
        v12692 = !v18172;
      }
      var v5749 = v12692;
      if (v5749) {
        this._just_changed = !1;
        var v18173 = f$$4.event;
        var v18174 = !0;
        v18173.simulate("change", this, a$$163, v18174);
      }
      return;
    }
    function v798(a$$162) {
      var v18175 = a$$162.originalEvent;
      var v12693 = v18175.propertyName;
      var v5750 = v12693 === "checked";
      if (v5750) {
        this._just_changed = !0;
      }
      return;
    }
    var v12694 = this.nodeName;
    var v5752 = z$$2.test(v12694);
    if (v5752) {
      var v18176 = this.type;
      var v12695 = v18176 === "checkbox";
      var v18178 = !v12695;
      if (v18178) {
        var v18177 = this.type;
        v12695 = v18177 === "radio";
      }
      var v5751 = v12695;
      if (v5751) {
        var v12696 = f$$4.event;
        v12696.add(this, "propertychange._change", v798);
        var v12697 = f$$4.event;
        v12697.add(this, "click._change", v799);
      }
      return!1;
    }
    var v5753 = f$$4.event;
    v5753.add(this, "beforeactivate._change", v801);
    return;
  }
  function v797() {
    var v5754 = f$$4.nodeName(this, "form");
    if (v5754) {
      return!1;
    }
    var v5755 = f$$4.event;
    v5755.remove(this, "._submit");
    return;
  }
  function v796(a$$161) {
    var v5756 = a$$161._submit_bubble;
    if (v5756) {
      delete a$$161._submit_bubble;
      var v21933 = this.parentNode;
      if (v21933) {
        var v25896 = a$$161.isTrigger;
        v21933 = !v25896;
      }
      var v18179 = v21933;
      if (v18179) {
        var v21934 = f$$4.event;
        var v21935 = this.parentNode;
        var v21936 = !0;
        v21934.simulate("submit", v21935, a$$161, v21936);
      }
    }
    return;
  }
  function v795() {
    function v794(a$$159) {
      function v793(a$$160) {
        a$$160._submit_bubble = !0;
        return;
      }
      var c$$86 = a$$159.target;
      var v5757;
      var v18180 = f$$4.nodeName(c$$86, "input");
      var v21937 = !v18180;
      if (v21937) {
        v18180 = f$$4.nodeName(c$$86, "button");
      }
      var v12698 = v18180;
      if (v12698) {
        v5757 = c$$86.form;
      } else {
        v5757 = b$$9;
      }
      var d$$79 = v5757;
      var v12699 = d$$79;
      if (v12699) {
        var v18181 = d$$79._submit_attached;
        v12699 = !v18181;
      }
      var v5758 = v12699;
      if (v5758) {
        var v18182 = f$$4.event;
        v18182.add(d$$79, "submit._submit", v793);
        d$$79._submit_attached = !0;
      }
      return;
    }
    var v5759 = f$$4.nodeName(this, "form");
    if (v5759) {
      return!1;
    }
    var v5760 = f$$4.event;
    v5760.add(this, "click._submit keypress._submit", v794);
    return;
  }
  function v792(a$$157, b$$103) {
    function v791(a$$158) {
      var c$$85 = this;
      var d$$78 = a$$158.relatedTarget;
      var e$$95 = a$$158.handleObj;
      var g$$44 = e$$95.selector;
      var h$$45;
      var v12700 = !d$$78;
      var v18184 = !v12700;
      if (v18184) {
        var v18183 = d$$78 !== c$$85;
        if (v18183) {
          var v21938 = f$$4.contains(c$$85, d$$78);
          v18183 = !v21938;
        }
        v12700 = v18183;
      }
      var v5761 = v12700;
      if (v5761) {
        a$$158.type = e$$95.origType;
        var v18185 = e$$95.handler;
        h$$45 = v18185.apply(this, arguments);
        a$$158.type = b$$103;
      }
      return h$$45;
    }
    var v12701 = f$$4.event;
    var v5762 = v12701.special;
    v5762[a$$157] = {delegateType:b$$103, bindType:b$$103, handle:v791};
    return;
  }
  function v790() {
    this.isImmediatePropagationStopped = K;
    this.stopPropagation();
    return;
  }
  function v789() {
    this.isPropagationStopped = K;
    var a$$156 = this.originalEvent;
    var v5763 = !a$$156;
    var v12702 = !v5763;
    if (v12702) {
      var v18186 = a$$156.stopPropagation;
      if (v18186) {
        a$$156.stopPropagation();
      }
      a$$156.cancelBubble = !0;
    }
    return;
  }
  function v788() {
    this.isDefaultPrevented = K;
    var a$$155 = this.originalEvent;
    var v5764 = !a$$155;
    var v12704 = !v5764;
    if (v12704) {
      var v12703;
      var v18187 = a$$155.preventDefault;
      if (v18187) {
        v12703 = a$$155.preventDefault();
      } else {
        v12703 = a$$155.returnValue = !1;
      }
      v12703;
    }
    return;
  }
  function v787(a$$154, b$$102) {
    var v18188 = f$$4.Event;
    var v12705 = this instanceof v18188;
    var v5766 = !v12705;
    if (v5766) {
      var v5765 = f$$4.Event;
      return new v5765(a$$154, b$$102);
    }
    var v21939;
    var v27532 = a$$154;
    if (v27532) {
      v27532 = a$$154.type;
    }
    var v25897 = v27532;
    if (v25897) {
      this.originalEvent = a$$154;
      this.type = a$$154.type;
      var v27533;
      var v29672 = a$$154.defaultPrevented;
      var v29957 = !v29672;
      if (v29957) {
        var v29955 = a$$154.returnValue;
        var v29956 = !1;
        v29672 = v29955 === v29956;
      }
      var v29238 = v29672;
      var v29674 = !v29238;
      if (v29674) {
        var v29673 = a$$154.getPreventDefault;
        if (v29673) {
          v29673 = a$$154.getPreventDefault();
        }
        v29238 = v29673;
      }
      var v28569 = v29238;
      if (v28569) {
        v27533 = K;
      } else {
        v27533 = J;
      }
      v21939 = this.isDefaultPrevented = v27533;
    } else {
      v21939 = this.type = a$$154;
    }
    v21939;
    if (b$$102) {
      f$$4.extend(this, b$$102);
    }
    var v21940 = a$$154;
    if (v21940) {
      v21940 = a$$154.timeStamp;
    }
    var v18189 = v21940;
    var v21941 = !v18189;
    if (v21941) {
      v18189 = f$$4.now();
    }
    this.timeStamp = v18189;
    var v12706 = f$$4.expando;
    this[v12706] = !0;
    return;
  }
  function v786(a$$153, b$$101, c$$84) {
    var v5767 = a$$153.detachEvent;
    if (v5767) {
      var v12707 = "on" + b$$101;
      a$$153.detachEvent(v12707, c$$84);
    }
    return;
  }
  function v785(a$$152, b$$100, c$$83) {
    var v5768 = a$$152.removeEventListener;
    if (v5768) {
      var v12708 = !1;
      a$$152.removeEventListener(b$$100, c$$83, v12708);
    }
    return;
  }
  function v784(a$$151, b$$99, c$$82, d$$77) {
    var v12709 = f$$4.Event;
    var v5769 = new v12709;
    var v12710 = !0;
    var v5770 = {type:a$$151, isSimulated:v12710, originalEvent:{}};
    var e$$94 = f$$4.extend(v5769, c$$82, v5770);
    var v12711;
    if (d$$77) {
      var v18190 = f$$4.event;
      v12711 = v18190.trigger(e$$94, null, b$$99);
    } else {
      var v21942 = f$$4.event;
      var v18191 = v21942.dispatch;
      v12711 = v18191.call(b$$99, e$$94);
    }
    v12711;
    var v12712 = e$$94.isDefaultPrevented();
    if (v12712) {
      c$$82.preventDefault();
    }
    return;
  }
  function v783(a$$150, b$$98) {
    var v12713 = this.onbeforeunload;
    var v5771 = v12713 === b$$98;
    if (v5771) {
      this.onbeforeunload = null;
    }
    return;
  }
  function v782(a$$149, b$$97, c$$81) {
    var v5772 = f$$4.isWindow(this);
    if (v5772) {
      this.onbeforeunload = c$$81;
    }
    return;
  }
  function v781(a$$148) {
    var v12714 = f$$4.expando;
    var v5773 = a$$148[v12714];
    if (v5773) {
      return a$$148;
    }
    var d$$76;
    var e$$93;
    var g$$43 = a$$148;
    var v18192 = f$$4.event;
    var v12715 = v18192.fixHooks;
    var v12716 = a$$148.type;
    var v5774 = v12715[v12716];
    var v12717 = !v5774;
    if (v12717) {
      v5774 = {};
    }
    var h$$44 = v5774;
    var v5775;
    var v12720 = h$$44.props;
    if (v12720) {
      var v12718 = this.props;
      var v12719 = h$$44.props;
      v5775 = v12718.concat(v12719);
    } else {
      v5775 = this.props;
    }
    var i$$117 = v5775;
    a$$148 = f$$4.Event(g$$43);
    d$$76 = i$$117.length;
    for (;d$$76;) {
      var v12721 = d$$76 = d$$76 - 1;
      e$$93 = i$$117[v12721];
      a$$148[e$$93] = g$$43[e$$93];
    }
    var v18193 = a$$148.target;
    var v21944 = !v18193;
    if (v21944) {
      var v21943 = g$$43.srcElement;
      var v25898 = !v21943;
      if (v25898) {
        v21943 = c$$5;
      }
      a$$148.target = v21943;
    }
    var v25899 = a$$148.target;
    var v21945 = v25899.nodeType;
    var v18194 = v21945 === 3;
    if (v18194) {
      var v21946 = a$$148.target;
      a$$148.target = v21946.parentNode;
    }
    var v18195 = a$$148.metaKey;
    var v12722 = v18195 === b$$9;
    if (v12722) {
      a$$148.metaKey = a$$148.ctrlKey;
    }
    var v5776;
    var v12723 = h$$44.filter;
    if (v12723) {
      v5776 = h$$44.filter(a$$148, g$$43);
    } else {
      v5776 = a$$148;
    }
    return v5776;
  }
  function v780(a$$147, d$$75) {
    var e$$92;
    var f$$20;
    var g$$42;
    var h$$43 = d$$75.button;
    var i$$116 = d$$75.fromElement;
    var v25900 = a$$147.pageX;
    var v21947 = v25900 == null;
    if (v21947) {
      var v25901 = d$$75.clientX;
      v21947 = v25901 != null;
    }
    var v18196 = v21947;
    if (v18196) {
      var v29675 = a$$147.target;
      var v29239 = v29675.ownerDocument;
      var v29676 = !v29239;
      if (v29676) {
        v29239 = c$$5;
      }
      e$$92 = v29239;
      f$$20 = e$$92.documentElement;
      g$$42 = e$$92.body;
      var v28570 = d$$75.clientX;
      var v29958 = f$$20;
      if (v29958) {
        v29958 = f$$20.scrollLeft;
      }
      var v29677 = v29958;
      var v29960 = !v29677;
      if (v29960) {
        var v29959 = g$$42;
        if (v29959) {
          v29959 = g$$42.scrollLeft;
        }
        v29677 = v29959;
      }
      var v29240 = v29677;
      var v29678 = !v29240;
      if (v29678) {
        v29240 = 0;
      }
      var v28571 = v29240;
      var v27534 = v28570 + v28571;
      var v29679 = f$$20;
      if (v29679) {
        v29679 = f$$20.clientLeft;
      }
      var v29241 = v29679;
      var v29681 = !v29241;
      if (v29681) {
        var v29680 = g$$42;
        if (v29680) {
          v29680 = g$$42.clientLeft;
        }
        v29241 = v29680;
      }
      var v28572 = v29241;
      var v29242 = !v28572;
      if (v29242) {
        v28572 = 0;
      }
      var v27535 = v28572;
      a$$147.pageX = v27534 - v27535;
      var v27536 = d$$75.clientY;
      var v29682 = f$$20;
      if (v29682) {
        v29682 = f$$20.scrollTop;
      }
      var v29243 = v29682;
      var v29684 = !v29243;
      if (v29684) {
        var v29683 = g$$42;
        if (v29683) {
          v29683 = g$$42.scrollTop;
        }
        v29243 = v29683;
      }
      var v28573 = v29243;
      var v29244 = !v28573;
      if (v29244) {
        v28573 = 0;
      }
      var v27537 = v28573;
      var v25902 = v27536 + v27537;
      var v29245 = f$$20;
      if (v29245) {
        v29245 = f$$20.clientTop;
      }
      var v28574 = v29245;
      var v29247 = !v28574;
      if (v29247) {
        var v29246 = g$$42;
        if (v29246) {
          v29246 = g$$42.clientTop;
        }
        v28574 = v29246;
      }
      var v27538 = v28574;
      var v28575 = !v27538;
      if (v28575) {
        v27538 = 0;
      }
      var v25903 = v27538;
      a$$147.pageY = v25902 - v25903;
    }
    var v25904 = a$$147.relatedTarget;
    var v21948 = !v25904;
    if (v21948) {
      v21948 = i$$116;
    }
    var v18197 = v21948;
    if (v18197) {
      var v21949;
      var v27539 = a$$147.target;
      var v25905 = i$$116 === v27539;
      if (v25905) {
        v21949 = d$$75.toElement;
      } else {
        v21949 = i$$116;
      }
      a$$147.relatedTarget = v21949;
    }
    var v21950 = a$$147.which;
    var v18198 = !v21950;
    if (v18198) {
      v18198 = h$$43 !== b$$9;
    }
    var v12724 = v18198;
    if (v12724) {
      var v18199;
      var v21952 = h$$43 & 1;
      if (v21952) {
        v18199 = 1;
      } else {
        var v21951;
        var v25907 = h$$43 & 2;
        if (v25907) {
          v21951 = 3;
        } else {
          var v25906;
          var v27540 = h$$43 & 4;
          if (v27540) {
            v25906 = 2;
          } else {
            v25906 = 0;
          }
          v21951 = v25906;
        }
        v18199 = v21951;
      }
      a$$147.which = v18199;
    }
    return a$$147;
  }
  function v779(a$$146, b$$96) {
    var v12725 = a$$146.which;
    var v5777 = v12725 == null;
    if (v5777) {
      var v12726;
      var v21953 = b$$96.charCode;
      var v18200 = v21953 != null;
      if (v18200) {
        v12726 = b$$96.charCode;
      } else {
        v12726 = b$$96.keyCode;
      }
      a$$146.which = v12726;
    }
    return a$$146;
  }
  function v778(c$$80) {
    var v5778 = f$$4.event;
    var v12727 = c$$80;
    var v18201 = !v12727;
    if (v18201) {
      v12727 = a$$13.event;
    }
    var v5779 = v12727;
    c$$80 = v5778.fix(v5779);
    var v18202 = f$$4._data(this, "events");
    var v21954 = !v18202;
    if (v21954) {
      v18202 = {};
    }
    var v12728 = v18202;
    var v12729 = c$$80.type;
    var v5780 = v12728[v12729];
    var v12730 = !v5780;
    if (v12730) {
      v5780 = [];
    }
    var d$$74 = v5780;
    var e$$91 = d$$74.delegateCount;
    var v5781 = [].slice;
    var g$$41 = v5781.call(arguments, 0);
    var v12731 = c$$80.exclusive;
    var v5782 = !v12731;
    if (v5782) {
      var v12732 = c$$80.namespace;
      v5782 = !v12732;
    }
    var h$$42 = v5782;
    var v18203 = f$$4.event;
    var v12733 = v18203.special;
    var v12734 = c$$80.type;
    var v5783 = v12733[v12734];
    var v12735 = !v5783;
    if (v12735) {
      v5783 = {};
    }
    var i$$115 = v5783;
    var j$$40 = [];
    var k$$21;
    var l$$36;
    var m$$18;
    var n$$67;
    var o$$9;
    var p$$30;
    var q$$7;
    var r$$9;
    var s$$21;
    var t$$5;
    var u$$4;
    g$$41[0] = c$$80;
    c$$80.delegateTarget = this;
    var v18204 = i$$115.preDispatch;
    var v12736 = !v18204;
    var v18207 = !v12736;
    if (v18207) {
      var v21955 = i$$115.preDispatch;
      var v18205 = v21955.call(this, c$$80);
      var v18206 = !1;
      v12736 = v18205 !== v18206;
    }
    var v5799 = v12736;
    if (v5799) {
      var v12737 = e$$91;
      if (v12737) {
        var v21956 = c$$80.button;
        var v18208 = !v21956;
        var v21958 = !v18208;
        if (v21958) {
          var v21957 = c$$80.type;
          v18208 = v21957 !== "click";
        }
        v12737 = v18208;
      }
      var v5792 = v12737;
      if (v5792) {
        n$$67 = f$$4(this);
        var v12738 = this.ownerDocument;
        var v18209 = !v12738;
        if (v18209) {
          v12738 = this;
        }
        n$$67.context = v12738;
        m$$18 = c$$80.target;
        var v5791 = m$$18 != this;
        for (;v5791;) {
          var v12739 = m$$18.disabled;
          var v12740 = !0;
          var v5790 = v12739 !== v12740;
          if (v5790) {
            p$$30 = {};
            r$$9 = [];
            n$$67[0] = m$$18;
            k$$21 = 0;
            var v5788 = k$$21 < e$$91;
            for (;v5788;) {
              s$$21 = d$$74[k$$21];
              var JSCompiler_temp_const$$0 = t$$5 = s$$21.selector;
              var JSCompiler_temp$$1;
              var v12741 = p$$30[t$$5];
              var v5787 = JSCompiler_temp$$1 = v12741 === b$$9;
              if (v5787) {
                var JSCompiler_temp_const$$3 = p$$30;
                var JSCompiler_temp_const$$2 = t$$5;
                var JSCompiler_temp$$4;
                var v5786 = s$$21.quick;
                if (v5786) {
                  var b$$inline_26 = s$$21.quick;
                  var v5784 = m$$18.attributes;
                  var v12742 = !v5784;
                  if (v12742) {
                    v5784 = {};
                  }
                  var c$$inline_27 = v5784;
                  var v21959 = b$$inline_26[1];
                  var v18210 = !v21959;
                  var v21962 = !v18210;
                  if (v21962) {
                    var v25908 = m$$18.nodeName;
                    var v21960 = v25908.toLowerCase();
                    var v21961 = b$$inline_26[1];
                    v18210 = v21960 === v21961;
                  }
                  var v12743 = v18210;
                  if (v12743) {
                    var v21963 = b$$inline_26[2];
                    var v18211 = !v21963;
                    var v21966 = !v18211;
                    if (v21966) {
                      var v27541 = c$$inline_27.id;
                      var v28576 = !v27541;
                      if (v28576) {
                        v27541 = {};
                      }
                      var v25909 = v27541;
                      var v21964 = v25909.value;
                      var v21965 = b$$inline_26[2];
                      v18211 = v21964 === v21965;
                    }
                    v12743 = v18211;
                  }
                  var v5785 = v12743;
                  if (v5785) {
                    var v18212 = b$$inline_26[3];
                    var v12744 = !v18212;
                    var v18215 = !v12744;
                    if (v18215) {
                      var v18213 = b$$inline_26[3];
                      var v25910 = c$$inline_27["class"];
                      var v27542 = !v25910;
                      if (v27542) {
                        v25910 = {};
                      }
                      var v21967 = v25910;
                      var v18214 = v21967.value;
                      v12744 = v18213.test(v18214);
                    }
                    v5785 = v12744;
                  }
                  JSCompiler_temp$$4 = v5785;
                } else {
                  JSCompiler_temp$$4 = n$$67.is(t$$5);
                }
                JSCompiler_temp$$1 = JSCompiler_temp_const$$3[JSCompiler_temp_const$$2] = JSCompiler_temp$$4;
              }
              JSCompiler_temp_const$$0;
              JSCompiler_temp$$1;
              var v12745 = p$$30[t$$5];
              if (v12745) {
                r$$9.push(s$$21);
              }
              k$$21++;
              v5788 = k$$21 < e$$91;
            }
            var v5789 = r$$9.length;
            if (v5789) {
              var v12746 = {elem:m$$18, matches:r$$9};
              j$$40.push(v12746);
            }
          }
          var v12747 = m$$18.parentNode;
          var v18216 = !v12747;
          if (v18216) {
            v12747 = this;
          }
          m$$18 = v12747;
          v5791 = m$$18 != this;
        }
      }
      var v12748 = d$$74.length;
      var v5793 = v12748 > e$$91;
      if (v5793) {
        var v18217 = d$$74.slice(e$$91);
        var v12749 = {elem:this, matches:v18217};
        j$$40.push(v12749);
      }
      k$$21 = 0;
      var v18218 = j$$40.length;
      var v12750 = k$$21 < v18218;
      if (v12750) {
        var v18219 = c$$80.isPropagationStopped();
        v12750 = !v18219;
      }
      var v5797 = v12750;
      for (;v5797;) {
        q$$7 = j$$40[k$$21];
        c$$80.currentTarget = q$$7.elem;
        l$$36 = 0;
        var v21968 = q$$7.matches;
        var v18220 = v21968.length;
        var v12751 = l$$36 < v18220;
        if (v12751) {
          var v18221 = c$$80.isImmediatePropagationStopped();
          v12751 = !v18221;
        }
        var v5796 = v12751;
        for (;v5796;) {
          var v5794 = q$$7.matches;
          s$$21 = v5794[l$$36];
          var v18222 = h$$42;
          var v21970 = !v18222;
          if (v21970) {
            var v25911 = c$$80.namespace;
            var v21969 = !v25911;
            if (v21969) {
              var v25912 = s$$21.namespace;
              v21969 = !v25912;
            }
            v18222 = v21969;
          }
          var v12752 = v18222;
          var v18224 = !v12752;
          if (v18224) {
            var v18223 = c$$80.namespace_re;
            if (v18223) {
              var v21971 = c$$80.namespace_re;
              var v21972 = s$$21.namespace;
              v18223 = v21971.test(v21972);
            }
            v12752 = v18223;
          }
          var v5795 = v12752;
          if (v5795) {
            c$$80.data = s$$21.data;
            c$$80.handleObj = s$$21;
            var v29248 = f$$4.event;
            var v28577 = v29248.special;
            var v28578 = s$$21.origType;
            var v27543 = v28577[v28578];
            var v28579 = !v27543;
            if (v28579) {
              v27543 = {};
            }
            var v25913 = v27543;
            var v21973 = v25913.handle;
            var v25914 = !v21973;
            if (v25914) {
              v21973 = s$$21.handler;
            }
            var v18225 = v21973;
            var v18226 = q$$7.elem;
            o$$9 = v18225.apply(v18226, g$$41);
            var v12753 = o$$9 !== b$$9;
            if (v12753) {
              c$$80.result = o$$9;
              var v25915 = !1;
              var v21974 = o$$9 === v25915;
              if (v21974) {
                c$$80.preventDefault();
                c$$80.stopPropagation();
              }
            }
          }
          l$$36++;
          var v21975 = q$$7.matches;
          var v18227 = v21975.length;
          var v12754 = l$$36 < v18227;
          if (v12754) {
            var v18228 = c$$80.isImmediatePropagationStopped();
            v12754 = !v18228;
          }
          v5796 = v12754;
        }
        k$$21++;
        var v18229 = j$$40.length;
        var v12755 = k$$21 < v18229;
        if (v12755) {
          var v18230 = c$$80.isPropagationStopped();
          v12755 = !v18230;
        }
        v5797 = v12755;
      }
      var v5798 = i$$115.postDispatch;
      if (v5798) {
        var v12756 = i$$115.postDispatch;
        v12756.call(this, c$$80);
      }
      return c$$80.result;
    }
    return;
  }
  function v777(c$$79, d$$73, e$$90, g$$40) {
    var v12757 = !e$$90;
    var v18232 = !v12757;
    if (v18232) {
      var v21976 = e$$90.nodeType;
      var v18231 = v21976 !== 3;
      if (v18231) {
        var v21977 = e$$90.nodeType;
        v18231 = v21977 !== 8;
      }
      v12757 = v18231;
    }
    var v5810 = v12757;
    if (v5810) {
      var v5800 = c$$79.type;
      var v12758 = !v5800;
      if (v12758) {
        v5800 = c$$79;
      }
      var h$$41 = v5800;
      var i$$114 = [];
      var j$$39;
      var k$$20;
      var l$$35;
      var m$$17;
      var n$$66;
      var o$$8;
      var p$$29;
      var q$$6;
      var r$$8;
      var s$$20;
      var v21978 = f$$4.event;
      var v18233 = v21978.triggered;
      var v12759 = h$$41 + v18233;
      var v5801 = E.test(v12759);
      if (v5801) {
        return;
      }
      var v18234 = h$$41.indexOf("!");
      var v12760 = v18234 >= 0;
      if (v12760) {
        h$$41 = h$$41.slice(0, -1);
        k$$20 = !0;
      }
      var v18235 = h$$41.indexOf(".");
      var v12761 = v18235 >= 0;
      if (v12761) {
        i$$114 = h$$41.split(".");
        h$$41 = i$$114.shift();
        i$$114.sort();
      }
      var v18236 = !e$$90;
      var v21980 = !v18236;
      if (v21980) {
        var v25916 = f$$4.event;
        var v21979 = v25916.customEvent;
        v18236 = v21979[h$$41];
      }
      var v12762 = v18236;
      if (v12762) {
        var v25917 = f$$4.event;
        var v21981 = v25917.global;
        var v18237 = v21981[h$$41];
        v12762 = !v18237;
      }
      var v5802 = v12762;
      if (v5802) {
        return;
      }
      var v28580;
      var v29685 = typeof c$$79;
      var v29251 = v29685 == "object";
      if (v29251) {
        var v29249;
        var v29961 = f$$4.expando;
        var v29687 = c$$79[v29961];
        if (v29687) {
          v29249 = c$$79;
        } else {
          var v29686 = f$$4.Event;
          v29249 = new v29686(h$$41, c$$79);
        }
        v28580 = v29249;
      } else {
        var v29250 = f$$4.Event;
        v28580 = new v29250(h$$41);
      }
      c$$79 = v28580;
      c$$79.type = h$$41;
      c$$79.isTrigger = !0;
      c$$79.exclusive = k$$20;
      var v31134 = i$$114.join(".");
      c$$79.namespace = v31134;
      var v18238;
      var v21983 = c$$79.namespace;
      if (v21983) {
        var v27544 = i$$114.join("\\.(?:.*\\.)?");
        var v25918 = "(^|\\.)" + v27544;
        var v21982 = v25918 + "(\\.|$)";
        v18238 = new RegExp(v21982);
      } else {
        v18238 = null;
      }
      c$$79.namespace_re = v18238;
      var v12763;
      var v21984 = h$$41.indexOf(":");
      var v18239 = v21984 < 0;
      if (v18239) {
        v12763 = "on" + h$$41;
      } else {
        v12763 = "";
      }
      o$$8 = v12763;
      var v5804 = !e$$90;
      if (v5804) {
        j$$39 = f$$4.cache;
        for (l$$35 in j$$39) {
          var v18240 = j$$39[l$$35];
          var v12764 = v18240.events;
          if (v12764) {
            var v21985 = j$$39[l$$35];
            var v18241 = v21985.events;
            v12764 = v18241[h$$41];
          }
          var v5803 = v12764;
          if (v5803) {
            var v12765 = f$$4.event;
            var v21986 = j$$39[l$$35];
            var v18242 = v21986.handle;
            var v12766 = v18242.elem;
            var v12767 = !0;
            v12765.trigger(c$$79, d$$73, v12766, v12767);
          }
        }
        return;
      }
      c$$79.result = b$$9;
      var v25919 = c$$79.target;
      var v27545 = !v25919;
      if (v27545) {
        c$$79.target = e$$90;
      }
      var v21987;
      var v25920 = d$$73 != null;
      if (v25920) {
        v21987 = f$$4.makeArray(d$$73);
      } else {
        v21987 = [];
      }
      d$$73 = v21987;
      d$$73.unshift(c$$79);
      var v21988 = f$$4.event;
      var v18243 = v21988.special;
      var v12768 = v18243[h$$41];
      var v18244 = !v12768;
      if (v18244) {
        v12768 = {};
      }
      p$$29 = v12768;
      var v12769 = p$$29.trigger;
      if (v12769) {
        var v21989 = p$$29.trigger;
        var v18245 = v21989.apply(e$$90, d$$73);
        var v18246 = !1;
        v12769 = v18245 === v18246;
      }
      var v5805 = v12769;
      if (v5805) {
        return;
      }
      var v18247 = p$$29.bindType;
      var v21990 = !v18247;
      if (v21990) {
        v18247 = h$$41;
      }
      var v12770 = v18247;
      var v5806 = [e$$90, v12770];
      r$$8 = [v5806];
      var v18248 = !g$$40;
      if (v18248) {
        var v21991 = p$$29.noBubble;
        v18248 = !v21991;
      }
      var v12771 = v18248;
      if (v12771) {
        var v18249 = f$$4.isWindow(e$$90);
        v12771 = !v18249;
      }
      var v5808 = v12771;
      if (v5808) {
        var v18250 = p$$29.delegateType;
        var v21992 = !v18250;
        if (v21992) {
          v18250 = h$$41;
        }
        s$$20 = v18250;
        var v18251;
        var v25921 = s$$20 + h$$41;
        var v21993 = E.test(v25921);
        if (v21993) {
          v18251 = e$$90;
        } else {
          v18251 = e$$90.parentNode;
        }
        m$$17 = v18251;
        n$$66 = null;
        for (;m$$17;) {
          var v12772 = [m$$17, s$$20];
          r$$8.push(v12772);
          n$$66 = m$$17;
          m$$17 = m$$17.parentNode;
        }
        var v12773 = n$$66;
        if (v12773) {
          var v18252 = e$$90.ownerDocument;
          v12773 = n$$66 === v18252;
        }
        var v5807 = v12773;
        if (v5807) {
          var v25922 = n$$66.defaultView;
          var v27546 = !v25922;
          if (v27546) {
            v25922 = n$$66.parentWindow;
          }
          var v21994 = v25922;
          var v25923 = !v21994;
          if (v25923) {
            v21994 = a$$13;
          }
          var v18253 = v21994;
          var v12774 = [v18253, s$$20];
          r$$8.push(v12774);
        }
      }
      l$$35 = 0;
      var v18254 = r$$8.length;
      var v12775 = l$$35 < v18254;
      if (v12775) {
        var v18255 = c$$79.isPropagationStopped();
        v12775 = !v18255;
      }
      var v5809 = v12775;
      for (;v5809;) {
        var v27547 = r$$8[l$$35];
        m$$17 = v27547[0];
        var v27548 = r$$8[l$$35];
        c$$79.type = v27548[1];
        var v28581 = f$$4._data(m$$17, "events");
        var v29252 = !v28581;
        if (v29252) {
          v28581 = {};
        }
        var v27549 = v28581;
        var v27550 = c$$79.type;
        var v25924 = v27549[v27550];
        if (v25924) {
          v25924 = f$$4._data(m$$17, "handle");
        }
        q$$6 = v25924;
        if (q$$6) {
          q$$6.apply(m$$17, d$$73);
        }
        var v18256 = o$$8;
        if (v18256) {
          v18256 = m$$17[o$$8];
        }
        q$$6 = v18256;
        var v21995 = q$$6;
        if (v21995) {
          v21995 = f$$4.acceptData(m$$17);
        }
        var v18257 = v21995;
        if (v18257) {
          var v21996 = q$$6.apply(m$$17, d$$73);
          var v21997 = !1;
          v18257 = v21996 === v21997;
        }
        var v12776 = v18257;
        if (v12776) {
          c$$79.preventDefault();
        }
        l$$35++;
        var v18258 = r$$8.length;
        var v12777 = l$$35 < v18258;
        if (v12777) {
          var v18259 = c$$79.isPropagationStopped();
          v12777 = !v18259;
        }
        v5809 = v12777;
      }
      c$$79.type = h$$41;
      var v29962 = !g$$40;
      if (v29962) {
        var v30197 = c$$79.isDefaultPrevented();
        v29962 = !v30197;
      }
      var v29688 = v29962;
      if (v29688) {
        var v30198 = p$$29._default;
        var v29963 = !v30198;
        var v30201 = !v29963;
        if (v30201) {
          var v30373 = p$$29._default;
          var v30374 = e$$90.ownerDocument;
          var v30199 = v30373.apply(v30374, d$$73);
          var v30200 = !1;
          v29963 = v30199 === v30200;
        }
        v29688 = v29963;
      }
      var v29253 = v29688;
      if (v29253) {
        var v29689 = h$$41 !== "click";
        var v29965 = !v29689;
        if (v29965) {
          var v29964 = f$$4.nodeName(e$$90, "a");
          v29689 = !v29964;
        }
        v29253 = v29689;
      }
      var v28582 = v29253;
      if (v28582) {
        v28582 = f$$4.acceptData(e$$90);
      }
      var v27551 = v28582;
      if (v27551) {
        v27551 = o$$8;
      }
      var v25925 = v27551;
      if (v25925) {
        v25925 = e$$90[h$$41];
      }
      var v21998 = v25925;
      if (v21998) {
        var v27552 = h$$41 !== "focus";
        if (v27552) {
          v27552 = h$$41 !== "blur";
        }
        var v25926 = v27552;
        var v27554 = !v25926;
        if (v27554) {
          var v28583 = c$$79.target;
          var v27553 = v28583.offsetWidth;
          v25926 = v27553 !== 0;
        }
        v21998 = v25926;
      }
      var v18260 = v21998;
      if (v18260) {
        var v21999 = f$$4.isWindow(e$$90);
        v18260 = !v21999;
      }
      var v12778 = v18260;
      if (v12778) {
        n$$66 = e$$90[o$$8];
        if (n$$66) {
          e$$90[o$$8] = null;
        }
        var v28584 = f$$4.event;
        v28584.triggered = h$$41;
        e$$90[h$$41]();
        var v25927 = f$$4.event;
        v25927.triggered = b$$9;
        if (n$$66) {
          e$$90[o$$8] = n$$66;
        }
      }
      return c$$79.result;
    }
    return;
  }
  function v776(a$$145, b$$95, c$$78, d$$72, e$$89) {
    var v5811 = f$$4.hasData(a$$145);
    if (v5811) {
      v5811 = f$$4._data(a$$145);
    }
    var g$$39 = v5811;
    var h$$40;
    var i$$113;
    var j$$38;
    var k$$19;
    var l$$34;
    var m$$16;
    var n$$65;
    var o$$7;
    var p$$28;
    var q$$5;
    var r$$7;
    var s$$19;
    var v18261 = !g$$39;
    var v12779 = !v18261;
    if (v12779) {
      var v22000 = o$$7 = g$$39.events;
      var v18262 = !v22000;
      v12779 = !v18262;
    }
    var v5821 = v12779;
    if (v5821) {
      var v18263 = b$$95 || "";
      var v12780 = I(v18263);
      var v5812 = f$$4.trim(v12780);
      b$$95 = v5812.split(" ");
      h$$40 = 0;
      var v12781 = b$$95.length;
      var v5819 = h$$40 < v12781;
      for (;v5819;) {
        var v22001 = b$$95[h$$40];
        var v18264 = A.exec(v22001);
        var v22002 = !v18264;
        if (v22002) {
          v18264 = [];
        }
        i$$113 = v18264;
        j$$38 = k$$19 = i$$113[1];
        l$$34 = i$$113[2];
        var v5816 = !j$$38;
        if (v5816) {
          for (j$$38 in o$$7) {
            var v5813 = f$$4.event;
            var v12782 = b$$95[h$$40];
            var v5814 = j$$38 + v12782;
            var v5815 = !0;
            v5813.remove(a$$145, v5814, c$$78, d$$72, v5815);
          }
          h$$40++;
          var v12783 = b$$95.length;
          v5819 = h$$40 < v12783;
          continue;
        }
        var v28585 = f$$4.event;
        var v27555 = v28585.special;
        var v25928 = v27555[j$$38];
        var v27556 = !v25928;
        if (v27556) {
          v25928 = {};
        }
        p$$28 = v25928;
        var v27557;
        if (d$$72) {
          v27557 = p$$28.delegateType;
        } else {
          v27557 = p$$28.bindType;
        }
        var v25929 = v27557;
        var v27558 = !v25929;
        if (v27558) {
          v25929 = j$$38;
        }
        j$$38 = v25929;
        var v22003 = o$$7[j$$38];
        var v25930 = !v22003;
        if (v25930) {
          v22003 = [];
        }
        r$$7 = v22003;
        m$$16 = r$$7.length;
        var v12784;
        if (l$$34) {
          var v28586 = l$$34.split(".");
          var v27559 = v28586.sort();
          var v25931 = v27559.join("\\.(?:.*\\.)?");
          var v22004 = "(^|\\.)" + v25931;
          var v18265 = v22004 + "(\\.|$)";
          v12784 = new RegExp(v18265);
        } else {
          v12784 = null;
        }
        l$$34 = v12784;
        n$$65 = 0;
        var v12785 = r$$7.length;
        var v5817 = n$$65 < v12785;
        for (;v5817;) {
          s$$19 = r$$7[n$$65];
          var v27560 = e$$89;
          var v28588 = !v27560;
          if (v28588) {
            var v28587 = s$$19.origType;
            v27560 = k$$19 === v28587;
          }
          var v25932 = v27560;
          if (v25932) {
            var v27561 = !c$$78;
            var v28591 = !v27561;
            if (v28591) {
              var v28589 = c$$78.guid;
              var v28590 = s$$19.guid;
              v27561 = v28589 === v28590;
            }
            v25932 = v27561;
          }
          var v22005 = v25932;
          if (v22005) {
            var v25933 = !l$$34;
            var v27563 = !v25933;
            if (v27563) {
              var v27562 = s$$19.namespace;
              v25933 = l$$34.test(v27562);
            }
            v22005 = v25933;
          }
          var v18266 = v22005;
          if (v18266) {
            var v25934 = !d$$72;
            var v27565 = !v25934;
            if (v27565) {
              var v27564 = s$$19.selector;
              v25934 = d$$72 === v27564;
            }
            var v22006 = v25934;
            var v25936 = !v22006;
            if (v25936) {
              var v25935 = d$$72 === "**";
              if (v25935) {
                v25935 = s$$19.selector;
              }
              v22006 = v25935;
            }
            v18266 = v22006;
          }
          var v12786 = v18266;
          if (v12786) {
            var v25937 = n$$65;
            n$$65 = n$$65 - 1;
            r$$7.splice(v25937, 1);
            var v25938 = s$$19.selector;
            if (v25938) {
              r$$7.delegateCount--;
            }
            var v22007 = p$$28.remove;
            if (v22007) {
              var v25939 = p$$28.remove;
              v25939.call(a$$145, s$$19);
            }
          }
          n$$65++;
          var v12787 = r$$7.length;
          v5817 = n$$65 < v12787;
        }
        var v18267 = r$$7.length;
        var v12788 = v18267 === 0;
        if (v12788) {
          var v18268 = r$$7.length;
          v12788 = m$$16 !== v18268;
        }
        var v5818 = v12788;
        if (v5818) {
          var v25940 = p$$28.teardown;
          var v22008 = !v25940;
          var v25943 = !v22008;
          if (v25943) {
            var v27566 = p$$28.teardown;
            var v25941 = v27566.call(a$$145, l$$34);
            var v25942 = !1;
            v22008 = v25941 === v25942;
          }
          var v18269 = v22008;
          if (v18269) {
            var v22009 = g$$39.handle;
            f$$4.removeEvent(a$$145, j$$38, v22009);
          }
          delete o$$7[j$$38];
        }
        h$$40++;
        var v12789 = b$$95.length;
        v5819 = h$$40 < v12789;
      }
      var v5820 = f$$4.isEmptyObject(o$$7);
      if (v5820) {
        q$$5 = g$$39.handle;
        if (q$$5) {
          q$$5.elem = null;
        }
        var v18270 = ["events", "handle"];
        var v18271 = !0;
        f$$4.removeData(a$$145, v18270, v18271);
      }
    }
    return;
  }
  function v775(a$$143, c$$77, d$$71, e$$88, g$$38) {
    function v774(a$$144) {
      var v5822;
      var v22010 = typeof f$$4;
      var v18272 = v22010 != "undefined";
      if (v18272) {
        var v22011 = !a$$144;
        var v25946 = !v22011;
        if (v25946) {
          var v27567 = f$$4.event;
          var v25944 = v27567.triggered;
          var v25945 = a$$144.type;
          v22011 = v25944 !== v25945;
        }
        v18272 = v22011;
      }
      var v12792 = v18272;
      if (v12792) {
        var v18273 = f$$4.event;
        var v12790 = v18273.dispatch;
        var v12791 = i$$112.elem;
        v5822 = v12790.apply(v12791, arguments);
      } else {
        v5822 = b$$9;
      }
      return v5822;
    }
    var h$$39;
    var i$$112;
    var j$$37;
    var k$$18;
    var l$$33;
    var m$$15;
    var n$$64;
    var o$$6;
    var p$$27;
    var q$$4;
    var r$$6;
    var s$$18;
    var v28592 = a$$143.nodeType;
    var v27568 = v28592 === 3;
    var v28594 = !v27568;
    if (v28594) {
      var v28593 = a$$143.nodeType;
      v27568 = v28593 === 8;
    }
    var v25947 = v27568;
    var v27569 = !v25947;
    if (v27569) {
      v25947 = !c$$77;
    }
    var v22012 = v25947;
    var v25948 = !v22012;
    if (v25948) {
      v22012 = !d$$71;
    }
    var v18274 = v22012;
    var v22014 = !v18274;
    if (v22014) {
      var v22013 = h$$39 = f$$4._data(a$$143);
      v18274 = !v22013;
    }
    var v12793 = v18274;
    var v5827 = !v12793;
    if (v5827) {
      var v28595 = d$$71.handler;
      if (v28595) {
        p$$27 = d$$71;
        d$$71 = p$$27.handler;
        g$$38 = p$$27.selector;
      }
      var v28596 = d$$71.guid;
      var v29254 = !v28596;
      if (v29254) {
        d$$71.guid = f$$4.guid;
        var v29690 = f$$4.guid;
        f$$4.guid = v29690 + 1;
      }
      j$$37 = h$$39.events;
      var v27570 = !j$$37;
      if (v27570) {
        h$$39.events = j$$37 = {};
      }
      i$$112 = h$$39.handle;
      var v22015 = !i$$112;
      if (v22015) {
        h$$39.handle = i$$112 = v774;
        i$$112.elem = a$$143;
      }
      var v18275 = I(c$$77);
      var v12794 = f$$4.trim(v18275);
      c$$77 = v12794.split(" ");
      k$$18 = 0;
      var v12795 = c$$77.length;
      var v5826 = k$$18 < v12795;
      for (;v5826;) {
        var v29691 = c$$77[k$$18];
        var v29255 = A.exec(v29691);
        var v29692 = !v29255;
        if (v29692) {
          v29255 = [];
        }
        l$$33 = v29255;
        m$$15 = l$$33[1];
        var v29693 = l$$33[2];
        var v29966 = !v29693;
        if (v29966) {
          v29693 = "";
        }
        var v29256 = v29693;
        var v28597 = v29256.split(".");
        n$$64 = v28597.sort();
        var v29257 = f$$4.event;
        var v28598 = v29257.special;
        var v27571 = v28598[m$$15];
        var v28599 = !v27571;
        if (v28599) {
          v27571 = {};
        }
        s$$18 = v27571;
        var v27572;
        if (g$$38) {
          v27572 = s$$18.delegateType;
        } else {
          v27572 = s$$18.bindType;
        }
        var v25949 = v27572;
        var v27573 = !v25949;
        if (v27573) {
          v25949 = m$$15;
        }
        m$$15 = v25949;
        var v27574 = f$$4.event;
        var v25950 = v27574.special;
        var v22016 = v25950[m$$15];
        var v25951 = !v22016;
        if (v25951) {
          v22016 = {};
        }
        s$$18 = v22016;
        var v22017 = l$$33[1];
        var v22018 = d$$71.guid;
        var v25952 = g$$38;
        if (v25952) {
          v25952 = G(g$$38);
        }
        var v22019 = v25952;
        var v22020 = n$$64.join(".");
        var v18276 = {type:m$$15, origType:v22017, data:e$$88, handler:d$$71, guid:v22018, selector:g$$38, quick:v22019, namespace:v22020};
        o$$6 = f$$4.extend(v18276, p$$27);
        r$$6 = j$$37[m$$15];
        var v5825 = !r$$6;
        if (v5825) {
          r$$6 = j$$37[m$$15] = [];
          r$$6.delegateCount = 0;
          var v18277 = s$$18.setup;
          var v12796 = !v18277;
          var v18280 = !v12796;
          if (v18280) {
            var v22021 = s$$18.setup;
            var v18278 = v22021.call(a$$143, e$$88, n$$64, i$$112);
            var v18279 = !1;
            v12796 = v18278 === v18279;
          }
          var v5824 = v12796;
          if (v5824) {
            var v5823;
            var v12799 = a$$143.addEventListener;
            if (v12799) {
              var v12797 = !1;
              v5823 = a$$143.addEventListener(m$$15, i$$112, v12797);
            } else {
              var v12798 = a$$143.attachEvent;
              if (v12798) {
                var v18281 = "on" + m$$15;
                v12798 = a$$143.attachEvent(v18281, i$$112);
              }
              v5823 = v12798;
            }
            v5823;
          }
        }
        var v18282 = s$$18.add;
        if (v18282) {
          var v25953 = s$$18.add;
          v25953.call(a$$143, o$$6);
          var v27575 = o$$6.handler;
          var v25954 = v27575.guid;
          var v27577 = !v25954;
          if (v27577) {
            var v27576 = o$$6.handler;
            v27576.guid = d$$71.guid;
          }
        }
        var v18283;
        if (g$$38) {
          var v22022 = r$$6.delegateCount;
          var v27578 = r$$6.delegateCount;
          r$$6.delegateCount = v27578 + 1;
          v18283 = r$$6.splice(v22022, 0, o$$6);
        } else {
          v18283 = r$$6.push(o$$6);
        }
        v18283;
        var v18284 = f$$4.event;
        var v12800 = v18284.global;
        v12800[m$$15] = !0;
        k$$18++;
        var v12801 = c$$77.length;
        v5826 = k$$18 < v12801;
      }
      a$$143 = null;
    }
    return;
  }
  function v773() {
    function v772(a$$139, b$$92) {
      var v5829 = f$$4.isArray(b$$92);
      if (v5829) {
        var v18285 = f$$4(a$$139);
        var v12802 = v18285.val();
        var v5828 = f$$4.inArray(v12802, b$$92);
        return a$$139.checked = v5828 >= 0;
      }
      return;
    }
    var v5830 = f$$4.valHooks;
    var v18286 = f$$4.valHooks;
    var v12803 = v18286[this];
    var v12804 = {set:v772};
    var v31135 = f$$4.extend(v12803, v12804);
    v5830[this] = v31135;
    return;
  }
  function v771() {
    function v770(a$$138) {
      var v5831;
      var v18287 = a$$138.getAttribute("value");
      var v12805 = v18287 === null;
      if (v12805) {
        v5831 = "on";
      } else {
        v5831 = a$$138.value;
      }
      return v5831;
    }
    var v5832 = f$$4.valHooks;
    v5832[this] = {get:v770};
    return;
  }
  function v769(a$$137) {
    var b$$91 = a$$137.parentNode;
    return null;
  }
  function v768(a$$136, b$$90) {
    var v5833 = a$$136.style;
    return v5833.cssText = "" + b$$90;
  }
  function v767(a$$135) {
    var v18288 = a$$135.style;
    var v12806 = v18288.cssText;
    var v5834 = v12806.toLowerCase();
    var v12807 = !v5834;
    if (v12807) {
      v5834 = b$$9;
    }
    return v5834;
  }
  function v766(a$$133, c$$75) {
    function v765(a$$134) {
      var d$$70 = a$$134.getAttribute(c$$75, 2);
      var v5835;
      var v12808 = d$$70 === null;
      if (v12808) {
        v5835 = b$$9;
      } else {
        v5835 = d$$70;
      }
      return v5835;
    }
    var v5836 = f$$4.attrHooks;
    var v5837 = c$$75;
    var v18289 = f$$4.attrHooks;
    var v12809 = v18289[c$$75];
    var v12810 = {get:v765};
    var v31136 = f$$4.extend(v12809, v12810);
    v5836[v5837] = v31136;
    return;
  }
  function v764(a$$132, b$$89, c$$74) {
    var v12811 = b$$89 === "";
    if (v12811) {
      b$$89 = "false";
    }
    w$$11.set(a$$132, b$$89, c$$74);
    return;
  }
  function v763(a$$130, b$$88) {
    function v762(a$$131, c$$73) {
      var v5838 = c$$73 === "";
      if (v5838) {
        a$$131.setAttribute(b$$88, "auto");
        return c$$73;
      }
      return;
    }
    var v5839 = f$$4.attrHooks;
    var v5840 = b$$88;
    var v18290 = f$$4.attrHooks;
    var v12812 = v18290[b$$88];
    var v12813 = {set:v762};
    var v31137 = f$$4.extend(v12812, v12813);
    v5839[v5840] = v31137;
    return;
  }
  function v761(a$$129, b$$87, d$$69) {
    var e$$87 = a$$129.getAttributeNode(d$$69);
    var v12814 = !e$$87;
    if (v12814) {
      e$$87 = c$$5.createAttribute(d$$69);
      a$$129.setAttributeNode(e$$87);
    }
    return e$$87.nodeValue = b$$87 + "";
  }
  function v760(a$$128, c$$72) {
    var d$$68;
    d$$68 = a$$128.getAttributeNode(c$$72);
    var v5841;
    var v18291 = d$$68;
    if (v18291) {
      var v22023;
      var v25956 = y$$49[c$$72];
      if (v25956) {
        var v25955 = d$$68.nodeValue;
        v22023 = v25955 !== "";
      } else {
        v22023 = d$$68.specified;
      }
      v18291 = v22023;
    }
    var v12815 = v18291;
    if (v12815) {
      v5841 = d$$68.nodeValue;
    } else {
      v5841 = b$$9;
    }
    return v5841;
  }
  function v759(a$$127, b$$86, c$$71) {
    var d$$67;
    var v5842;
    var v18292 = !1;
    var v12816 = b$$86 === v18292;
    if (v12816) {
      v5842 = f$$4.removeAttr(a$$127, c$$71);
    } else {
      var v25957 = f$$4.propFix;
      var v22024 = v25957[c$$71];
      var v25958 = !v22024;
      if (v25958) {
        v22024 = c$$71;
      }
      d$$67 = v22024;
      var v22025 = d$$67 in a$$127;
      if (v22025) {
        a$$127[d$$67] = !0;
      }
      var v18293 = c$$71.toLowerCase();
      v5842 = a$$127.setAttribute(c$$71, v18293);
    }
    v5842;
    return c$$71;
  }
  function v758(a$$126, c$$70) {
    var d$$66;
    var e$$86 = f$$4.prop(a$$126, c$$70);
    var v5843;
    var v22026 = !0;
    var v18294 = e$$86 === v22026;
    var v22028 = !v18294;
    if (v22028) {
      var v27579 = typeof e$$86;
      var v25959 = v27579 != "boolean";
      if (v25959) {
        v25959 = d$$66 = a$$126.getAttributeNode(c$$70);
      }
      var v22027 = v25959;
      if (v22027) {
        var v25960 = d$$66.nodeValue;
        var v25961 = !1;
        v22027 = v25960 !== v25961;
      }
      v18294 = v22027;
    }
    var v12817 = v18294;
    if (v12817) {
      v5843 = c$$70.toLowerCase();
    } else {
      v5843 = b$$9;
    }
    return v5843;
  }
  function v757(a$$125) {
    var c$$69 = a$$125.getAttributeNode("tabindex");
    var v5844;
    var v18295 = c$$69;
    if (v18295) {
      v18295 = c$$69.specified;
    }
    var v12820 = v18295;
    if (v12820) {
      var v12818 = c$$69.value;
      v5844 = parseInt(v12818, 10);
    } else {
      var v12819;
      var v25962 = a$$125.nodeName;
      var v22029 = s$$15.test(v25962);
      var v25964 = !v22029;
      if (v25964) {
        var v27580 = a$$125.nodeName;
        var v25963 = t$$2.test(v27580);
        if (v25963) {
          v25963 = a$$125.href;
        }
        v22029 = v25963;
      }
      var v18296 = v22029;
      if (v18296) {
        v12819 = 0;
      } else {
        v12819 = b$$9;
      }
      v5844 = v12819;
    }
    return v5844;
  }
  function v756(a$$124, c$$68, d$$65) {
    var e$$85;
    var g$$37;
    var h$$38;
    var i$$111 = a$$124.nodeType;
    var v25965 = !a$$124;
    var v22030 = !v25965;
    if (v22030) {
      v22030 = i$$111 !== 3;
    }
    var v18297 = v22030;
    if (v18297) {
      v18297 = i$$111 !== 8;
    }
    var v12821 = v18297;
    if (v12821) {
      v12821 = i$$111 !== 2;
    }
    var v5846 = v12821;
    if (v5846) {
      var v12822 = i$$111 !== 1;
      var v18299 = !v12822;
      if (v18299) {
        var v18298 = f$$4.isXMLDoc(a$$124);
        v12822 = !v18298;
      }
      h$$38 = v12822;
      if (h$$38) {
        var v25966 = f$$4.propFix;
        var v22031 = v25966[c$$68];
        var v25967 = !v22031;
        if (v25967) {
          v22031 = c$$68;
        }
        c$$68 = v22031;
        var v22032 = f$$4.propHooks;
        g$$37 = v22032[c$$68];
      }
      var v5845;
      var v12825 = d$$65 !== b$$9;
      if (v12825) {
        var v12823;
        var v25968 = g$$37;
        if (v25968) {
          v25968 = "set" in g$$37;
        }
        var v22033 = v25968;
        if (v22033) {
          var v25969 = e$$85 = g$$37.set(a$$124, d$$65, c$$68);
          v22033 = v25969 !== b$$9;
        }
        var v18300 = v22033;
        if (v18300) {
          v12823 = e$$85;
        } else {
          v12823 = a$$124[c$$68] = d$$65;
        }
        v5845 = v12823;
      } else {
        var v12824;
        var v25970 = g$$37;
        if (v25970) {
          v25970 = "get" in g$$37;
        }
        var v22034 = v25970;
        if (v22034) {
          var v25971 = e$$85 = g$$37.get(a$$124, c$$68);
          v22034 = v25971 !== null;
        }
        var v18301 = v22034;
        if (v18301) {
          v12824 = e$$85;
        } else {
          v12824 = a$$124[c$$68];
        }
        v5845 = v12824;
      }
      return v5845;
    }
    return;
  }
  function v755(a$$123, b$$85, c$$67) {
    var v12826 = w$$11;
    if (v12826) {
      v12826 = f$$4.nodeName(a$$123, "button");
    }
    var v5847 = v12826;
    if (v5847) {
      return w$$11.set(a$$123, b$$85, c$$67);
    }
    a$$123.value = b$$85;
    return;
  }
  function v754(a$$122, b$$84) {
    var v12827 = w$$11;
    if (v12827) {
      v12827 = f$$4.nodeName(a$$122, "button");
    }
    var v5848 = v12827;
    if (v5848) {
      return w$$11.get(a$$122, b$$84);
    }
    var v5849;
    var v12828 = b$$84 in a$$122;
    if (v12828) {
      v5849 = a$$122.value;
    } else {
      v5849 = null;
    }
    return v5849;
  }
  function v753(a$$121, b$$83) {
    var v18302 = a$$121.nodeName;
    var v12829 = r$$2.test(v18302);
    if (v12829) {
      v12829 = a$$121.parentNode;
    }
    var v5851 = v12829;
    if (v5851) {
      f$$4.error("type property can't be changed");
    } else {
      var v25972 = f$$4.support;
      var v22035 = v25972.radioValue;
      var v18303 = !v22035;
      if (v18303) {
        v18303 = b$$83 === "radio";
      }
      var v12830 = v18303;
      if (v12830) {
        v12830 = f$$4.nodeName(a$$121, "input");
      }
      var v5850 = v12830;
      if (v5850) {
        var c$$66 = a$$121.value;
        a$$121.setAttribute("type", b$$83);
        if (c$$66) {
          a$$121.value = c$$66;
        }
        return b$$83;
      }
    }
    return;
  }
  function v752(a$$120, b$$82) {
    var c$$65;
    var d$$64;
    var e$$84;
    var g$$36;
    var h$$37;
    var i$$110 = 0;
    var v12831 = b$$82;
    if (v12831) {
      var v18304 = a$$120.nodeType;
      v12831 = v18304 === 1;
    }
    var v5853 = v12831;
    if (v5853) {
      var v12832 = b$$82.toLowerCase();
      d$$64 = v12832.split(p$$22);
      g$$36 = d$$64.length;
      var v5852 = i$$110 < g$$36;
      for (;v5852;) {
        e$$84 = d$$64[i$$110];
        if (e$$84) {
          var v29258 = f$$4.propFix;
          var v28600 = v29258[e$$84];
          var v29259 = !v28600;
          if (v29259) {
            v28600 = e$$84;
          }
          c$$65 = v28600;
          h$$37 = u$$1.test(e$$84);
          var v28601 = !h$$37;
          if (v28601) {
            f$$4.attr(a$$120, e$$84, "");
          }
          var v27581;
          if (v$$4) {
            v27581 = e$$84;
          } else {
            v27581 = c$$65;
          }
          var v25973 = v27581;
          a$$120.removeAttribute(v25973);
          var v25974 = h$$37;
          if (v25974) {
            v25974 = c$$65 in a$$120;
          }
          var v22036 = v25974;
          if (v22036) {
            a$$120[c$$65] = !1;
          }
        }
        i$$110++;
        v5852 = i$$110 < g$$36;
      }
    }
    return;
  }
  function v751(a$$119, c$$64, d$$63, e$$83) {
    var g$$35;
    var h$$36;
    var i$$109;
    var j$$36 = a$$119.nodeType;
    var v25975 = !a$$119;
    var v22037 = !v25975;
    if (v22037) {
      v22037 = j$$36 !== 3;
    }
    var v18305 = v22037;
    if (v18305) {
      v18305 = j$$36 !== 8;
    }
    var v12833 = v18305;
    if (v12833) {
      v12833 = j$$36 !== 2;
    }
    var v5863 = v12833;
    if (v5863) {
      var v12834 = e$$83;
      if (v12834) {
        var v18306 = f$$4.attrFn;
        v12834 = c$$64 in v18306;
      }
      var v5855 = v12834;
      if (v5855) {
        var v5854 = f$$4(a$$119);
        return v5854[c$$64](d$$63);
      }
      var v18307 = a$$119.getAttribute;
      var v12835 = typeof v18307;
      var v5856 = v12835 == "undefined";
      if (v5856) {
        return f$$4.prop(a$$119, c$$64, d$$63);
      }
      var v12836 = j$$36 !== 1;
      var v18309 = !v12836;
      if (v18309) {
        var v18308 = f$$4.isXMLDoc(a$$119);
        v12836 = !v18308;
      }
      i$$109 = v12836;
      if (i$$109) {
        c$$64 = c$$64.toLowerCase();
        var v25976 = f$$4.attrHooks;
        var v22038 = v25976[c$$64];
        var v25978 = !v22038;
        if (v25978) {
          var v25977;
          var v27582 = u$$1.test(c$$64);
          if (v27582) {
            v25977 = x$$67;
          } else {
            v25977 = w$$11;
          }
          v22038 = v25977;
        }
        h$$36 = v22038;
      }
      var v5860 = d$$63 !== b$$9;
      if (v5860) {
        var v5857 = d$$63 === null;
        if (v5857) {
          f$$4.removeAttr(a$$119, c$$64);
          return;
        }
        var v22039 = h$$36;
        if (v22039) {
          v22039 = "set" in h$$36;
        }
        var v18310 = v22039;
        if (v18310) {
          v18310 = i$$109;
        }
        var v12837 = v18310;
        if (v12837) {
          var v18311 = g$$35 = h$$36.set(a$$119, d$$63, c$$64);
          v12837 = v18311 !== b$$9;
        }
        var v5858 = v12837;
        if (v5858) {
          return g$$35;
        }
        var v5859 = "" + d$$63;
        a$$119.setAttribute(c$$64, v5859);
        return d$$63;
      }
      var v22040 = h$$36;
      if (v22040) {
        v22040 = "get" in h$$36;
      }
      var v18312 = v22040;
      if (v18312) {
        v18312 = i$$109;
      }
      var v12838 = v18312;
      if (v12838) {
        var v18313 = g$$35 = h$$36.get(a$$119, c$$64);
        v12838 = v18313 !== null;
      }
      var v5861 = v12838;
      if (v5861) {
        return g$$35;
      }
      g$$35 = a$$119.getAttribute(c$$64);
      var v5862;
      var v12839 = g$$35 === null;
      if (v12839) {
        v5862 = b$$9;
      } else {
        v5862 = g$$35;
      }
      return v5862;
    }
    return;
  }
  function v750(a$$118, b$$81) {
    function v749() {
      var v18314 = f$$4(this);
      var v12840 = v18314.val();
      var v5864 = f$$4.inArray(v12840, c$$63);
      this.selected = v5864 >= 0;
      return;
    }
    var c$$63 = f$$4.makeArray(b$$81);
    var v18315 = f$$4(a$$118);
    var v12841 = v18315.find("option");
    v12841.each(v749);
    var v12842 = c$$63.length;
    var v18316 = !v12842;
    if (v18316) {
      a$$118.selectedIndex = -1;
    }
    return c$$63;
  }
  function v748(a$$117) {
    var b$$80;
    var c$$62;
    var d$$62;
    var e$$82;
    var g$$34 = a$$117.selectedIndex;
    var h$$35 = [];
    var i$$108 = a$$117.options;
    var v5865 = a$$117.type;
    var j$$35 = v5865 === "select-one";
    var v5866 = g$$34 < 0;
    if (v5866) {
      return null;
    }
    var v12843;
    if (j$$35) {
      v12843 = g$$34;
    } else {
      v12843 = 0;
    }
    c$$62 = v12843;
    var v12844;
    if (j$$35) {
      v12844 = g$$34 + 1;
    } else {
      v12844 = i$$108.length;
    }
    d$$62 = v12844;
    var v5869 = c$$62 < d$$62;
    for (;v5869;) {
      e$$82 = i$$108[c$$62];
      var v18317 = e$$82.selected;
      if (v18317) {
        var v22041;
        var v27583 = f$$4.support;
        var v25981 = v27583.optDisabled;
        if (v25981) {
          var v25979 = e$$82.disabled;
          v22041 = !v25979;
        } else {
          var v25980 = e$$82.getAttribute("disabled");
          v22041 = v25980 === null;
        }
        v18317 = v22041;
      }
      var v12845 = v18317;
      if (v12845) {
        var v25982 = e$$82.parentNode;
        var v22042 = v25982.disabled;
        var v18318 = !v22042;
        var v22044 = !v18318;
        if (v22044) {
          var v25983 = e$$82.parentNode;
          var v22043 = f$$4.nodeName(v25983, "optgroup");
          v18318 = !v22043;
        }
        v12845 = v18318;
      }
      var v5868 = v12845;
      if (v5868) {
        var v5867 = f$$4(e$$82);
        b$$80 = v5867.val();
        if (j$$35) {
          return b$$80;
        }
        h$$35.push(b$$80);
      }
      c$$62++;
      v5869 = c$$62 < d$$62;
    }
    var v18319 = j$$35;
    if (v18319) {
      var v22045 = h$$35.length;
      v18319 = !v22045;
    }
    var v12846 = v18319;
    if (v12846) {
      v12846 = i$$108.length;
    }
    var v5871 = v12846;
    if (v5871) {
      var v12847 = i$$108[g$$34];
      var v5870 = f$$4(v12847);
      return v5870.val();
    }
    return h$$35;
  }
  function v747(a$$116) {
    var v5872 = a$$116.attributes;
    var b$$79 = v5872.value;
    var v5873;
    var v18320 = !b$$79;
    var v22046 = !v18320;
    if (v22046) {
      v18320 = b$$79.specified;
    }
    var v12848 = v18320;
    if (v12848) {
      v5873 = a$$116.value;
    } else {
      v5873 = a$$116.text;
    }
    return v5873;
  }
  function v746(a$$114) {
    function v745(d$$61) {
      function v744(a$$115) {
        var v5874;
        var v12849 = a$$115 == null;
        if (v12849) {
          v5874 = "";
        } else {
          v5874 = a$$115 + "";
        }
        return v5874;
      }
      var g$$33 = f$$4(this);
      var h$$34;
      var v12850 = this.nodeType;
      var v5876 = v12850 === 1;
      if (v5876) {
        var v18321;
        if (e$$81) {
          var v22047 = g$$33.val();
          v18321 = h$$34 = a$$114.call(this, d$$61, v22047);
        } else {
          v18321 = h$$34 = a$$114;
        }
        v18321;
        var v18322;
        var v22049 = h$$34 == null;
        if (v22049) {
          v18322 = h$$34 = "";
        } else {
          var v22048;
          var v27584 = typeof h$$34;
          var v25985 = v27584 == "number";
          if (v25985) {
            v22048 = h$$34 = h$$34 + "";
          } else {
            var v25984 = f$$4.isArray(h$$34);
            if (v25984) {
              v25984 = h$$34 = f$$4.map(h$$34, v744);
            }
            v22048 = v25984;
          }
          v18322 = v22048;
        }
        v18322;
        var v18323 = f$$4.valHooks;
        var v18324 = this.type;
        var v12851 = v18323[v18324];
        var v18327 = !v12851;
        if (v18327) {
          var v18325 = f$$4.valHooks;
          var v22050 = this.nodeName;
          var v18326 = v22050.toLowerCase();
          v12851 = v18325[v18326];
        }
        c$$61 = v12851;
        var v18328 = !c$$61;
        var v22052 = !v18328;
        if (v22052) {
          var v22051 = "set" in c$$61;
          v18328 = !v22051;
        }
        var v12852 = v18328;
        var v18330 = !v12852;
        if (v18330) {
          var v18329 = c$$61.set(this, h$$34, "value");
          v12852 = v18329 === b$$9;
        }
        var v5875 = v12852;
        if (v5875) {
          this.value = h$$34;
        }
      }
      return;
    }
    var c$$61;
    var d$$60;
    var e$$81;
    var g$$32 = this[0];
    var v18331 = arguments.length;
    var v12853 = !v18331;
    var v5877 = !v12853;
    if (v5877) {
      e$$81 = f$$4.isFunction(a$$114);
      return this.each(v745);
    }
    if (g$$32) {
      var v12854 = f$$4.valHooks;
      var v12855 = g$$32.type;
      var v5878 = v12854[v12855];
      var v12858 = !v5878;
      if (v12858) {
        var v12856 = f$$4.valHooks;
        var v18332 = g$$32.nodeName;
        var v12857 = v18332.toLowerCase();
        v5878 = v12856[v12857];
      }
      c$$61 = v5878;
      var v18333 = c$$61;
      if (v18333) {
        v18333 = "get" in c$$61;
      }
      var v12859 = v18333;
      if (v12859) {
        var v18334 = d$$60 = c$$61.get(g$$32, "value");
        v12859 = v18334 !== b$$9;
      }
      var v5879 = v12859;
      if (v5879) {
        return d$$60;
      }
      d$$60 = g$$32.value;
      var v5880;
      var v18335 = typeof d$$60;
      var v12861 = v18335 == "string";
      if (v12861) {
        v5880 = d$$60.replace(q, "");
      } else {
        var v12860;
        var v18336 = d$$60 == null;
        if (v18336) {
          v12860 = "";
        } else {
          v12860 = d$$60;
        }
        v5880 = v12860;
      }
      return v5880;
    }
    return;
  }
  function v743(a$$113) {
    var v5881 = " " + a$$113;
    var b$$78 = v5881 + " ";
    var c$$60 = 0;
    var d$$59 = this.length;
    var v5883 = c$$60 < d$$59;
    for (;v5883;) {
      var v22053 = this[c$$60];
      var v18337 = v22053.nodeType;
      var v12862 = v18337 === 1;
      if (v12862) {
        var v29260 = this[c$$60];
        var v28602 = v29260.className;
        var v27585 = " " + v28602;
        var v25986 = v27585 + " ";
        var v22054 = v25986.replace(o, " ");
        var v18338 = v22054.indexOf(b$$78);
        v12862 = v18338 > -1;
      }
      var v5882 = v12862;
      if (v5882) {
        return!0;
      }
      c$$60++;
      v5883 = c$$60 < d$$59;
    }
    return!1;
  }
  function v742(a$$112, b$$77) {
    function v741() {
      var v5886 = c$$58 === "string";
      if (v5886) {
        var e$$80;
        var g$$31 = 0;
        var h$$33 = f$$4(this);
        var i$$107 = b$$77;
        var j$$34 = a$$112.split(p$$22);
        var v12863 = g$$31;
        g$$31 = g$$31 + 1;
        var v5884 = e$$80 = j$$34[v12863];
        for (;v5884;) {
          var v12864;
          if (d$$58) {
            v12864 = i$$107;
          } else {
            var v18339 = h$$33.hasClass(e$$80);
            v12864 = !v18339;
          }
          i$$107 = v12864;
          var v18340;
          if (i$$107) {
            v18340 = "addClass";
          } else {
            v18340 = "removeClass";
          }
          var v12865 = v18340;
          h$$33[v12865](e$$80);
          var v12866 = g$$31;
          g$$31 = g$$31 + 1;
          v5884 = e$$80 = j$$34[v12866];
        }
      } else {
        var v12867 = c$$58 === "undefined";
        var v18341 = !v12867;
        if (v18341) {
          v12867 = c$$58 === "boolean";
        }
        var v5885 = v12867;
        if (v5885) {
          var v12868 = this.className;
          if (v12868) {
            var v18342 = this.className;
            f$$4._data(this, "__className__", v18342);
          }
          var v12869;
          var v22055 = this.className;
          var v25988 = !v22055;
          if (v25988) {
            var v25987 = !1;
            v22055 = a$$112 === v25987;
          }
          var v18344 = v22055;
          if (v18344) {
            v12869 = "";
          } else {
            var v18343 = f$$4._data(this, "__className__");
            var v22056 = !v18343;
            if (v22056) {
              v18343 = "";
            }
            v12869 = v18343;
          }
          this.className = v12869;
        }
      }
      return;
    }
    function v740(c$$59) {
      var v5887 = f$$4(this);
      var v12870 = this.className;
      var v5888 = a$$112.call(this, c$$59, v12870, b$$77);
      v5887.toggleClass(v5888, b$$77);
      return;
    }
    var c$$58 = typeof a$$112;
    var v5889 = typeof b$$77;
    var d$$58 = v5889 == "boolean";
    var v5890 = f$$4.isFunction(a$$112);
    if (v5890) {
      return this.each(v740);
    }
    return this.each(v741);
  }
  function v739(a$$111) {
    function v738(b$$76) {
      var v5891 = f$$4(this);
      var v12871 = this.className;
      var v5892 = a$$111.call(this, b$$76, v12871);
      v5891.removeClass(v5892);
      return;
    }
    var c$$57;
    var d$$57;
    var e$$79;
    var g$$30;
    var h$$32;
    var i$$106;
    var j$$33;
    var v5893 = f$$4.isFunction(a$$111);
    if (v5893) {
      return this.each(v738);
    }
    var v18345 = a$$111;
    if (v18345) {
      var v22057 = typeof a$$111;
      v18345 = v22057 == "string";
    }
    var v12872 = v18345;
    var v18346 = !v12872;
    if (v18346) {
      v12872 = a$$111 === b$$9;
    }
    var v5901 = v12872;
    if (v5901) {
      var v5894 = a$$111 || "";
      c$$57 = v5894.split(p$$22);
      d$$57 = 0;
      e$$79 = this.length;
      var v5900 = d$$57 < e$$79;
      for (;v5900;) {
        g$$30 = this[d$$57];
        var v18347 = g$$30.nodeType;
        var v12873 = v18347 === 1;
        if (v12873) {
          v12873 = g$$30.className;
        }
        var v5899 = v12873;
        if (v5899) {
          if (a$$111) {
            var v18348 = g$$30.className;
            var v12874 = " " + v18348;
            var v5895 = v12874 + " ";
            h$$32 = v5895.replace(o, " ");
            i$$106 = 0;
            j$$33 = c$$57.length;
            var v5897 = i$$106 < j$$33;
            for (;v5897;) {
              var v18349 = c$$57[i$$106];
              var v12875 = " " + v18349;
              var v5896 = v12875 + " ";
              h$$32 = h$$32.replace(v5896, " ");
              i$$106++;
              v5897 = i$$106 < j$$33;
            }
            var v5898 = g$$30;
            var v31138 = f$$4.trim(h$$32);
            v5898.className = v31138;
          } else {
            g$$30.className = "";
          }
        }
        d$$57++;
        v5900 = d$$57 < e$$79;
      }
    }
    return this;
  }
  function v737(a$$110) {
    function v736(b$$75) {
      var v5902 = f$$4(this);
      var v12876 = this.className;
      var v5903 = a$$110.call(this, b$$75, v12876);
      v5902.addClass(v5903);
      return;
    }
    var b$$74;
    var c$$56;
    var d$$56;
    var e$$78;
    var g$$29;
    var h$$31;
    var i$$105;
    var v5904 = f$$4.isFunction(a$$110);
    if (v5904) {
      return this.each(v736);
    }
    var v12877 = a$$110;
    if (v12877) {
      var v18350 = typeof a$$110;
      v12877 = v18350 == "string";
    }
    var v5912 = v12877;
    if (v5912) {
      b$$74 = a$$110.split(p$$22);
      c$$56 = 0;
      d$$56 = this.length;
      var v5911 = c$$56 < d$$56;
      for (;v5911;) {
        e$$78 = this[c$$56];
        var v12878 = e$$78.nodeType;
        var v5910 = v12878 === 1;
        if (v5910) {
          var v18351 = e$$78.className;
          var v12879 = !v18351;
          if (v12879) {
            var v18352 = b$$74.length;
            v12879 = v18352 === 1;
          }
          var v5909 = v12879;
          if (v5909) {
            e$$78.className = a$$110;
          } else {
            var v12880 = e$$78.className;
            var v5905 = " " + v12880;
            g$$29 = v5905 + " ";
            h$$31 = 0;
            i$$105 = b$$74.length;
            var v5907 = h$$31 < i$$105;
            for (;v5907;) {
              var v25989 = b$$74[h$$31];
              var v22058 = " " + v25989;
              var v18353 = v22058 + " ";
              var v12881 = g$$29.indexOf(v18353);
              var v5906 = ~v12881;
              var v12882 = !v5906;
              if (v12882) {
                var v22059 = b$$74[h$$31];
                var v18354 = v22059 + " ";
                g$$29 = g$$29 + v18354;
              }
              h$$31++;
              v5907 = h$$31 < i$$105;
            }
            var v5908 = e$$78;
            var v31139 = f$$4.trim(g$$29);
            v5908.className = v31139;
          }
        }
        c$$56++;
        v5911 = c$$56 < d$$56;
      }
    }
    return this;
  }
  function v735(a$$109) {
    function v734() {
      try {
        this[a$$109] = b$$9;
        delete this[a$$109];
      } catch (c$$55) {
      }
      return;
    }
    var v12883 = f$$4.propFix;
    var v5913 = v12883[a$$109];
    var v12884 = !v5913;
    if (v12884) {
      v5913 = a$$109;
    }
    a$$109 = v5913;
    return this.each(v734);
  }
  function v733(a$$108, b$$73) {
    var v5914 = f$$4.prop;
    var v12885 = arguments.length;
    var v5915 = v12885 > 1;
    return f$$4.access(this, v5914, a$$108, b$$73, v5915);
  }
  function v732(a$$107) {
    function v731() {
      f$$4.removeAttr(this, a$$107);
      return;
    }
    return this.each(v731);
  }
  function v730(a$$106, b$$72) {
    var v5916 = f$$4.attr;
    var v12886 = arguments.length;
    var v5917 = v12886 > 1;
    return f$$4.access(this, v5916, a$$106, b$$72, v5917);
  }
  function v729(a$$105, c$$54) {
    function m$$14() {
      var v5918 = h$$30 = h$$30 - 1;
      var v12888 = !v5918;
      if (v12888) {
        var v12887 = [e$$77];
        d$$55.resolveWith(e$$77, v12887);
      }
      return;
    }
    var v18355 = typeof a$$105;
    var v12889 = v18355 != "string";
    if (v12889) {
      c$$54 = a$$105;
      a$$105 = b$$9;
    }
    a$$105 = a$$105 || "fx";
    var d$$55 = f$$4.Deferred();
    var e$$77 = this;
    var g$$28 = e$$77.length;
    var h$$30 = 1;
    var i$$104 = a$$105 + "defer";
    var j$$32 = a$$105 + "queue";
    var k$$17 = a$$105 + "mark";
    var l$$32;
    var v5920 = g$$28;
    g$$28 = g$$28 - 1;
    for (;v5920;) {
      var v18356 = e$$77[g$$28];
      var v18357 = !0;
      var v12890 = f$$4.data(v18356, i$$104, b$$9, v18357);
      var v18359 = !v12890;
      if (v18359) {
        var v25990 = e$$77[g$$28];
        var v25991 = !0;
        var v22060 = f$$4.data(v25990, j$$32, b$$9, v25991);
        var v25994 = !v22060;
        if (v25994) {
          var v25992 = e$$77[g$$28];
          var v25993 = !0;
          v22060 = f$$4.data(v25992, k$$17, b$$9, v25993);
        }
        var v18358 = v22060;
        if (v18358) {
          var v22061 = e$$77[g$$28];
          var v22062 = f$$4.Callbacks("once memory");
          var v22063 = !0;
          v18358 = f$$4.data(v22061, i$$104, v22062, v22063);
        }
        v12890 = v18358;
      }
      var v5919 = l$$32 = v12890;
      if (v5919) {
        h$$30++;
        l$$32.add(m$$14);
      }
      v5920 = g$$28;
      g$$28 = g$$28 - 1;
    }
    m$$14();
    return d$$55.promise(c$$54);
  }
  function v728(a$$104) {
    var v5921 = a$$104 || "fx";
    return this.queue(v5921, []);
  }
  function v727(a$$103, b$$70) {
    function v726(b$$71, c$$53) {
      function v725() {
        clearTimeout(d$$54);
        return;
      }
      var d$$54 = setTimeout(b$$71, a$$103);
      c$$53.stop = v725;
      return;
    }
    var v12891;
    var v18361 = f$$4.fx;
    if (v18361) {
      var v25995 = f$$4.fx;
      var v22064 = v25995.speeds;
      var v18360 = v22064[a$$103];
      var v22065 = !v18360;
      if (v22065) {
        v18360 = a$$103;
      }
      v12891 = v18360;
    } else {
      v12891 = a$$103;
    }
    a$$103 = v12891;
    b$$70 = b$$70 || "fx";
    return this.queue(b$$70, v726);
  }
  function v724(a$$102) {
    function v723() {
      f$$4.dequeue(this, a$$102);
      return;
    }
    return this.each(v723);
  }
  function v722(a$$101, c$$52) {
    function v721() {
      var b$$69 = f$$4.queue(this, a$$101, c$$52);
      var v12892 = a$$101 === "fx";
      if (v12892) {
        var v18362 = b$$69[0];
        v12892 = v18362 !== "inprogress";
      }
      var v5922 = v12892;
      if (v5922) {
        f$$4.dequeue(this, a$$101);
      }
      return;
    }
    var d$$53 = 2;
    var v12893 = typeof a$$101;
    var v5923 = v12893 != "string";
    if (v5923) {
      c$$52 = a$$101;
      a$$101 = "fx";
      d$$53--;
    }
    var v12894 = arguments.length;
    var v5925 = v12894 < d$$53;
    if (v5925) {
      var v5924 = this[0];
      return f$$4.queue(v5924, a$$101);
    }
    var v5926;
    var v12895 = c$$52 === b$$9;
    if (v12895) {
      v5926 = this;
    } else {
      v5926 = this.each(v721);
    }
    return v5926;
  }
  function v720(a$$100, b$$68) {
    function v719() {
      f$$4.dequeue(a$$100, b$$68);
      return;
    }
    b$$68 = b$$68 || "fx";
    var c$$51 = f$$4.queue(a$$100, b$$68);
    var d$$52 = c$$51.shift();
    var e$$76 = {};
    var v18363 = d$$52 === "inprogress";
    if (v18363) {
      d$$52 = c$$51.shift();
    }
    if (d$$52) {
      var v27586 = b$$68 === "fx";
      if (v27586) {
        c$$51.unshift("inprogress");
      }
      var v27587 = b$$68 + ".run";
      f$$4._data(a$$100, v27587, e$$76);
      d$$52.call(a$$100, v719, e$$76);
    }
    var v12896 = c$$51.length;
    var v18364 = !v12896;
    if (v18364) {
      var v27588 = b$$68 + "queue ";
      var v25996 = v27588 + b$$68;
      var v22066 = v25996 + ".run";
      var v22067 = !0;
      f$$4.removeData(a$$100, v22066, v22067);
      n$$57(a$$100, b$$68, "queue");
    }
    return;
  }
  function v718(a$$99, b$$67, c$$50) {
    var d$$51;
    if (a$$99) {
      var v18365 = b$$67 || "fx";
      b$$67 = v18365 + "queue";
      d$$51 = f$$4._data(a$$99, b$$67);
      if (c$$50) {
        var v18366;
        var v25997 = !d$$51;
        var v27589 = !v25997;
        if (v27589) {
          v25997 = f$$4.isArray(c$$50);
        }
        var v22069 = v25997;
        if (v22069) {
          var v22068 = f$$4.makeArray(c$$50);
          v18366 = d$$51 = f$$4._data(a$$99, b$$67, v22068);
        } else {
          v18366 = d$$51.push(c$$50);
        }
        v18366;
      }
      return d$$51 || [];
    }
    return;
  }
  function v717(a$$98, b$$66, c$$49) {
    var v12897 = !0;
    var v5927 = a$$98 !== v12897;
    if (v5927) {
      c$$49 = b$$66;
      b$$66 = a$$98;
      a$$98 = !1;
    }
    if (b$$66) {
      c$$49 = c$$49 || "fx";
      var d$$50 = c$$49 + "mark";
      var v5928;
      if (a$$98) {
        v5928 = 0;
      } else {
        var v18367 = f$$4._data(b$$66, d$$50);
        var v22070 = !v18367;
        if (v22070) {
          v18367 = 1;
        }
        var v12898 = v18367;
        v5928 = v12898 - 1;
      }
      var e$$75 = v5928;
      var v5929;
      if (e$$75) {
        v5929 = f$$4._data(b$$66, d$$50, e$$75);
      } else {
        var v18368 = !0;
        f$$4.removeData(b$$66, d$$50, v18368);
        v5929 = n$$57(b$$66, c$$49, "mark");
      }
      v5929;
    }
    return;
  }
  function v716(a$$97, b$$65) {
    if (a$$97) {
      var v18369 = b$$65 || "fx";
      b$$65 = v18369 + "mark";
      var v25998 = f$$4._data(a$$97, b$$65);
      var v27590 = !v25998;
      if (v27590) {
        v25998 = 0;
      }
      var v22071 = v25998;
      var v18370 = v22071 + 1;
      f$$4._data(a$$97, b$$65, v18370);
    }
    return;
  }
  function v715(a$$96) {
    function v714() {
      f$$4.removeData(this, a$$96);
      return;
    }
    return this.each(v714);
  }
  function v713(a$$95, c$$47) {
    function v712(c$$48) {
      function v711() {
        var b$$64 = f$$4(this);
        var v18371 = "setData" + e$$74;
        b$$64.triggerHandler(v18371, d$$49);
        f$$4.data(this, a$$95, c$$48);
        var v12899 = "changeData" + e$$74;
        b$$64.triggerHandler(v12899, d$$49);
        return;
      }
      var v5931 = c$$48 === b$$9;
      if (v5931) {
        var v12900 = "getData" + e$$74;
        var v18372 = d$$49[0];
        var v12901 = [v18372];
        m$$13 = this.triggerHandler(v12900, v12901);
        var v18373 = m$$13 === b$$9;
        if (v18373) {
          v18373 = j$$31;
        }
        var v12902 = v18373;
        if (v12902) {
          m$$13 = f$$4.data(j$$31, a$$95);
          m$$13 = l$$21(j$$31, a$$95, m$$13);
        }
        var v5930;
        var v18374 = m$$13 === b$$9;
        if (v18374) {
          v18374 = d$$49[1];
        }
        var v12904 = v18374;
        if (v12904) {
          var v12903 = d$$49[0];
          v5930 = this.data(v12903);
        } else {
          v5930 = m$$13;
        }
        return v5930;
      }
      d$$49[1] = c$$48;
      this.each(v711);
      return;
    }
    function v710() {
      f$$4.data(this, a$$95);
      return;
    }
    var d$$49;
    var e$$74;
    var g$$27;
    var h$$29;
    var i$$103;
    var j$$31 = this[0];
    var k$$16 = 0;
    var m$$13 = null;
    var v5936 = a$$95 === b$$9;
    if (v5936) {
      var v5935 = this.length;
      if (v5935) {
        m$$13 = f$$4.data(j$$31);
        var v18375 = j$$31.nodeType;
        var v12905 = v18375 === 1;
        if (v12905) {
          var v18376 = f$$4._data(j$$31, "parsedAttrs");
          v12905 = !v18376;
        }
        var v5934 = v12905;
        if (v5934) {
          g$$27 = j$$31.attributes;
          i$$103 = g$$27.length;
          var v5932 = k$$16 < i$$103;
          for (;v5932;) {
            var v12906 = g$$27[k$$16];
            h$$29 = v12906.name;
            var v18377 = h$$29.indexOf("data-");
            var v12907 = v18377 === 0;
            if (v12907) {
              var v22072 = h$$29.substring(5);
              h$$29 = f$$4.camelCase(v22072);
              var v22073 = m$$13[h$$29];
              l$$21(j$$31, h$$29, v22073);
            }
            k$$16++;
            v5932 = k$$16 < i$$103;
          }
          var v5933 = !0;
          f$$4._data(j$$31, "parsedAttrs", v5933);
        }
      }
      return m$$13;
    }
    var v12908 = typeof a$$95;
    var v5937 = v12908 == "object";
    if (v5937) {
      return this.each(v710);
    }
    d$$49 = a$$95.split(".", 2);
    var v18378;
    var v22075 = d$$49[1];
    if (v22075) {
      var v22074 = d$$49[1];
      v18378 = "." + v22074;
    } else {
      v18378 = "";
    }
    d$$49[1] = v18378;
    var v12909 = d$$49[1];
    e$$74 = v12909 + "!";
    var v12910 = arguments.length;
    var v5938 = v12910 > 1;
    var v5939 = !1;
    return f$$4.access(this, v712, null, c$$47, v5938, null, v5939);
  }
  function v709(a$$94) {
    var v5943 = a$$94.nodeName;
    if (v5943) {
      var v5940 = f$$4.noData;
      var v12911 = a$$94.nodeName;
      var v5941 = v12911.toLowerCase();
      var b$$63 = v5940[v5941];
      if (b$$63) {
        var v12912 = !0;
        var v5942 = b$$63 !== v12912;
        if (v5942) {
          var v12913 = a$$94.getAttribute("classid");
          v5942 = v12913 === b$$63;
        }
        return v5942;
      }
    }
    return!0;
  }
  function v708(a$$93, b$$62, c$$46) {
    var v5944 = !0;
    return f$$4.data(a$$93, b$$62, c$$46, v5944);
  }
  function v707(a$$92, b$$61, c$$45) {
    var v18379 = f$$4.acceptData(a$$92);
    var v12914 = !v18379;
    var v5956 = !v12914;
    if (v5956) {
      var d$$48;
      var e$$73;
      var g$$26;
      var h$$28 = f$$4.expando;
      var i$$102 = a$$92.nodeType;
      var v5945;
      if (i$$102) {
        v5945 = f$$4.cache;
      } else {
        v5945 = a$$92;
      }
      var j$$30 = v5945;
      var v5946;
      if (i$$102) {
        v5946 = a$$92[h$$28];
      } else {
        v5946 = h$$28;
      }
      var k$$15 = v5946;
      var v12915 = j$$30[k$$15];
      var v5947 = !v12915;
      if (v5947) {
        return;
      }
      if (b$$61) {
        var v5948;
        if (c$$45) {
          v5948 = j$$30[k$$15];
        } else {
          var v12916 = j$$30[k$$15];
          v5948 = v12916.data;
        }
        d$$48 = v5948;
        if (d$$48) {
          var v5949 = f$$4.isArray(b$$61);
          var v12918 = !v5949;
          if (v12918) {
            var v12917;
            var v18380 = b$$61 in d$$48;
            if (v18380) {
              v12917 = b$$61 = [b$$61];
            } else {
              b$$61 = f$$4.camelCase(b$$61);
              var v22076;
              var v25999 = b$$61 in d$$48;
              if (v25999) {
                v22076 = b$$61 = [b$$61];
              } else {
                v22076 = b$$61 = b$$61.split(" ");
              }
              v12917 = v22076;
            }
            v12917;
          }
          e$$73 = 0;
          g$$26 = b$$61.length;
          var v5951 = e$$73 < g$$26;
          for (;v5951;) {
            var v5950 = b$$61[e$$73];
            delete d$$48[v5950];
            e$$73++;
            v5951 = e$$73 < g$$26;
          }
          var v22077;
          if (c$$45) {
            v22077 = m$$4;
          } else {
            v22077 = f$$4.isEmptyObject;
          }
          var v18381 = v22077;
          var v12919 = v18381(d$$48);
          var v5952 = !v12919;
          if (v5952) {
            return;
          }
        }
      }
      var v5955 = !c$$45;
      if (v5955) {
        var v5953 = j$$30[k$$15];
        delete v5953.data;
        var v18382 = j$$30[k$$15];
        var v12920 = m$$4(v18382);
        var v5954 = !v12920;
        if (v5954) {
          return;
        }
      }
      var v12921;
      var v26000 = f$$4.support;
      var v22078 = v26000.deleteExpando;
      var v26002 = !v22078;
      if (v26002) {
        var v26001 = j$$30.setInterval;
        v22078 = !v26001;
      }
      var v18383 = v22078;
      if (v18383) {
        v12921 = delete j$$30[k$$15];
      } else {
        v12921 = j$$30[k$$15] = null;
      }
      v12921;
      if (i$$102) {
        var v18384;
        var v26003 = f$$4.support;
        var v22080 = v26003.deleteExpando;
        if (v22080) {
          v18384 = delete a$$92[h$$28];
        } else {
          var v22079;
          var v26004 = a$$92.removeAttribute;
          if (v26004) {
            v22079 = a$$92.removeAttribute(h$$28);
          } else {
            v22079 = a$$92[h$$28] = null;
          }
          v18384 = v22079;
        }
        v18384;
      }
    }
    return;
  }
  function v706(a$$91, c$$44, d$$47, e$$72) {
    var v18385 = f$$4.acceptData(a$$91);
    var v12922 = !v18385;
    var v5965 = !v12922;
    if (v5965) {
      var g$$25;
      var h$$27;
      var i$$101;
      var j$$29 = f$$4.expando;
      var v5957 = typeof c$$44;
      var k$$14 = v5957 == "string";
      var l$$31 = a$$91.nodeType;
      var v5958;
      if (l$$31) {
        v5958 = f$$4.cache;
      } else {
        v5958 = a$$91;
      }
      var m$$12 = v5958;
      var v5959;
      if (l$$31) {
        v5959 = a$$91[j$$29];
      } else {
        var v12923 = a$$91[j$$29];
        if (v12923) {
          v12923 = j$$29;
        }
        v5959 = v12923;
      }
      var n$$63 = v5959;
      var o$$5 = c$$44 === "events";
      var v26005 = !n$$63;
      var v27592 = !v26005;
      if (v27592) {
        var v27591 = m$$12[n$$63];
        v26005 = !v27591;
      }
      var v22081 = v26005;
      var v26007 = !v22081;
      if (v26007) {
        var v27593 = !o$$5;
        if (v27593) {
          v27593 = !e$$72;
        }
        var v26006 = v27593;
        if (v26006) {
          var v28603 = m$$12[n$$63];
          var v27594 = v28603.data;
          v26006 = !v27594;
        }
        v22081 = v26006;
      }
      var v18386 = v22081;
      if (v18386) {
        v18386 = k$$14;
      }
      var v12924 = v18386;
      if (v12924) {
        v12924 = d$$47 === b$$9;
      }
      var v5960 = v12924;
      if (v5960) {
        return;
      }
      var v18388 = !n$$63;
      if (v18388) {
        var v18387;
        if (l$$31) {
          var v26008 = f$$4.uuid;
          v18387 = a$$91[j$$29] = n$$63 = f$$4.uuid = v26008 + 1;
        } else {
          v18387 = n$$63 = j$$29;
        }
        v18387;
      }
      var v12925 = m$$12[n$$63];
      var v18389 = !v12925;
      if (v18389) {
        m$$12[n$$63] = {};
        var v26010 = !l$$31;
        if (v26010) {
          var v26009 = m$$12[n$$63];
          v26009.toJSON = f$$4.noop;
        }
      }
      var v18390 = typeof c$$44;
      var v12926 = v18390 == "object";
      var v18392 = !v12926;
      if (v18392) {
        var v18391 = typeof c$$44;
        v12926 = v18391 == "function";
      }
      var v5962 = v12926;
      if (v5962) {
        var v5961;
        if (e$$72) {
          var v12927 = m$$12[n$$63];
          var v31140 = f$$4.extend(v12927, c$$44);
          v5961 = m$$12[n$$63] = v31140;
        } else {
          var v12928 = m$$12[n$$63];
          var v22082 = m$$12[n$$63];
          var v18393 = v22082.data;
          var v31141 = f$$4.extend(v18393, c$$44);
          v5961 = v12928.data = v31141;
        }
        v5961;
      }
      g$$25 = h$$27 = m$$12[n$$63];
      var v22083 = !e$$72;
      if (v22083) {
        var v26011 = h$$27.data;
        var v27595 = !v26011;
        if (v27595) {
          h$$27.data = {};
        }
        h$$27 = h$$27.data;
      }
      var v12929 = d$$47 !== b$$9;
      if (v12929) {
        var v18394 = f$$4.camelCase(c$$44);
        h$$27[v18394] = d$$47;
      }
      var v12930 = o$$5;
      if (v12930) {
        var v18395 = h$$27[c$$44];
        v12930 = !v18395;
      }
      var v5963 = v12930;
      if (v5963) {
        return g$$25.events;
      }
      var v5964;
      if (k$$14) {
        i$$101 = h$$27[c$$44];
        var v18396 = i$$101 == null;
        if (v18396) {
          var v22084 = f$$4.camelCase(c$$44);
          v18396 = i$$101 = h$$27[v22084];
        }
        v5964 = v18396;
      } else {
        v5964 = i$$101 = h$$27;
      }
      v5964;
      return i$$101;
    }
    return;
  }
  function v705(a$$90) {
    var v5966;
    var v12934 = a$$90.nodeType;
    if (v12934) {
      var v12931 = f$$4.cache;
      var v18397 = f$$4.expando;
      var v12932 = a$$90[v18397];
      v5966 = v12931[v12932];
    } else {
      var v12933 = f$$4.expando;
      v5966 = a$$90[v12933];
    }
    a$$90 = v5966;
    var v12935 = !a$$90;
    var v5967 = !v12935;
    if (v5967) {
      var v12936 = m$$4(a$$90);
      v5967 = !v12936;
    }
    return v5967;
  }
  function v704() {
    function v703() {
      var d$$46;
      var e$$71;
      var g$$24;
      var h$$26;
      var i$$100;
      var j$$28;
      var l$$30;
      var m$$11;
      var n$$62;
      var q$$3;
      var r$$5;
      var s$$17;
      var t$$4;
      var v5968 = c$$5.getElementsByTagName("body");
      var u$$3 = v5968[0];
      var v5969 = !u$$3;
      var v12937 = !v5969;
      if (v12937) {
        m$$11 = 1;
        t$$4 = "padding:0;margin:0;border:";
        r$$5 = "position:absolute;top:0;left:0;width:1px;height:1px;";
        s$$17 = t$$4 + "0;visibility:hidden;";
        var v30908 = "style='" + r$$5;
        var v30906 = v30908 + t$$4;
        n$$62 = v30906 + "5px solid #000;";
        var v30913 = "<div " + n$$62;
        var v30912 = v30913 + "display:block;'><div style='";
        var v30911 = v30912 + t$$4;
        var v30910 = v30911 + "0;display:block;overflow:hidden;'></div></div>";
        var v30909 = v30910 + "<table ";
        var v30907 = v30909 + n$$62;
        var v30904 = v30907 + "' cellpadding='0' cellspacing='0'>";
        q$$3 = v30904 + "<tr><td></td></tr></table>";
        d$$46 = c$$5.createElement("div");
        var v30900 = d$$46.style;
        var v30905 = s$$17 + "width:0;height:0;position:static;top:0;margin-top:";
        var v30902 = v30905 + m$$11;
        v30900.cssText = v30902 + "px";
        var v30898 = u$$3.firstChild;
        u$$3.insertBefore(d$$46, v30898);
        p$$26 = c$$5.createElement("div");
        d$$46.appendChild(p$$26);
        var v30890 = "<table><tr><td style='" + t$$4;
        p$$26.innerHTML = v30890 + "0;display:none'></td><td>t</td></tr></table>";
        k$$13 = p$$26.getElementsByTagName("td");
        var v30885 = k$$13[0];
        var v30880 = v30885.offsetHeight;
        o$$4 = v30880 === 0;
        var v30881 = k$$13[0];
        var v30874 = v30881.style;
        v30874.display = "";
        var v30875 = k$$13[1];
        var v30869 = v30875.style;
        v30869.display = "none";
        var v30866 = o$$4;
        if (v30866) {
          var v30876 = k$$13[0];
          var v30870 = v30876.offsetHeight;
          v30866 = v30870 === 0;
        }
        b$$60.reliableHiddenOffsets = v30866;
        var v30864 = a$$13.getComputedStyle;
        if (v30864) {
          p$$26.innerHTML = "";
          l$$30 = c$$5.createElement("div");
          var v30891 = l$$30.style;
          v30891.width = "0";
          var v30886 = l$$30.style;
          v30886.marginRight = "0";
          var v30882 = p$$26.style;
          v30882.width = "2px";
          p$$26.appendChild(l$$30);
          var v30871 = b$$60;
          var v30894 = a$$13.getComputedStyle(l$$30, null);
          var v30896 = !v30894;
          if (v30896) {
            v30894 = {marginRight:0};
          }
          var v30892 = v30894;
          var v30887 = v30892.marginRight;
          var v30883 = parseInt(v30887, 10);
          var v30888 = !v30883;
          if (v30888) {
            v30883 = 0;
          }
          var v30877 = v30883;
          v30871.reliableMarginRight = v30877 === 0;
        }
        var v30872 = p$$26.style;
        var v30867 = v30872.zoom;
        var v30865 = typeof v30867;
        var v30862 = v30865 != "undefined";
        if (v30862) {
          p$$26.innerHTML = "";
          var v30901 = p$$26.style;
          var v30903 = p$$26.style;
          v30901.width = v30903.padding = "1px";
          var v30899 = p$$26.style;
          v30899.border = 0;
          var v30897 = p$$26.style;
          v30897.overflow = "hidden";
          var v30895 = p$$26.style;
          v30895.display = "inline";
          var v30893 = p$$26.style;
          v30893.zoom = 1;
          var v30889 = p$$26.offsetWidth;
          b$$60.inlineBlockNeedsLayout = v30889 === 3;
          var v30884 = p$$26.style;
          v30884.display = "block";
          var v30878 = p$$26.style;
          v30878.overflow = "visible";
          p$$26.innerHTML = "<div style='width:5px;'></div>";
          var v30868 = p$$26.offsetWidth;
          b$$60.shrinkWrapBlocks = v30868 !== 3;
        }
        var v30857 = p$$26.style;
        v30857.cssText = r$$5 + s$$17;
        p$$26.innerHTML = q$$3;
        e$$71 = p$$26.firstChild;
        g$$24 = e$$71.firstChild;
        var v30804 = e$$71.nextSibling;
        var v30775 = v30804.firstChild;
        i$$100 = v30775.firstChild;
        var v30776 = g$$24.offsetTop;
        var v30745 = v30776 !== 5;
        var v30777 = i$$100.offsetTop;
        var v30746 = v30777 === 5;
        j$$28 = {doesNotAddBorder:v30745, doesAddBorderForTableAndCells:v30746};
        var v30698 = g$$24.style;
        v30698.position = "fixed";
        var v30622 = g$$24.style;
        v30622.top = "20px";
        var v30623 = g$$24.offsetTop;
        var v30503 = v30623 === 20;
        var v30625 = !v30503;
        if (v30625) {
          var v30624 = g$$24.offsetTop;
          v30503 = v30624 === 15;
        }
        j$$28.fixedPosition = v30503;
        var v30375 = g$$24.style;
        var v30504 = g$$24.style;
        v30375.position = v30504.top = "";
        var v30202 = e$$71.style;
        v30202.overflow = "hidden";
        var v29967 = e$$71.style;
        v29967.position = "relative";
        var v29694 = g$$24.offsetTop;
        j$$28.subtractsBorderForOverflowNotVisible = v29694 === -5;
        var v29261 = u$$3.offsetTop;
        j$$28.doesNotIncludeMarginInBodyOffset = v29261 !== m$$11;
        var v28604 = a$$13.getComputedStyle;
        if (v28604) {
          var v29695 = p$$26.style;
          v29695.marginTop = "1%";
          var v29696 = b$$60;
          var v30376 = a$$13.getComputedStyle(p$$26, null);
          var v30505 = !v30376;
          if (v30505) {
            v30376 = {marginTop:0};
          }
          var v30203 = v30376;
          var v29968 = v30203.marginTop;
          v29696.pixelMargin = v29968 !== "1%";
        }
        var v29697 = d$$46.style;
        var v29262 = v29697.zoom;
        var v28605 = typeof v29262;
        var v27596 = v28605 != "undefined";
        if (v27596) {
          var v28606 = d$$46.style;
          v28606.zoom = 1;
        }
        u$$3.removeChild(d$$46);
        l$$30 = p$$26 = d$$46 = null;
        f$$4.extend(b$$60, j$$28);
      }
      return;
    }
    function v702() {
      b$$60.noCloneEvent = !1;
      return;
    }
    var b$$60;
    var d$$45;
    var e$$70;
    var g$$23;
    var h$$25;
    var i$$99;
    var j$$27;
    var k$$13;
    var l$$29;
    var m$$10;
    var n$$61;
    var o$$4;
    var p$$26 = c$$5.createElement("div");
    var q$$2 = c$$5.documentElement;
    p$$26.setAttribute("className", "t");
    p$$26.innerHTML = "   <link/><table></table><a href='/a' style='top:1px;float:left;opacity:.55;'>a</a><input type='checkbox'/>";
    d$$45 = p$$26.getElementsByTagName("*");
    var v12938 = p$$26.getElementsByTagName("a");
    e$$70 = v12938[0];
    var v18398 = !d$$45;
    var v22086 = !v18398;
    if (v22086) {
      var v22085 = d$$45.length;
      v18398 = !v22085;
    }
    var v12939 = v18398;
    var v18399 = !v12939;
    if (v18399) {
      v12939 = !e$$70;
    }
    var v5970 = v12939;
    if (v5970) {
      return{};
    }
    g$$23 = c$$5.createElement("select");
    var v29698 = c$$5.createElement("option");
    h$$25 = g$$23.appendChild(v29698);
    var v29263 = p$$26.getElementsByTagName("input");
    i$$99 = v29263[0];
    var v29699 = p$$26.firstChild;
    var v29264 = v29699.nodeType;
    var v28607 = v29264 === 3;
    var v29700 = p$$26.getElementsByTagName("tbody");
    var v29265 = v29700.length;
    var v28608 = !v29265;
    var v29969 = p$$26.getElementsByTagName("link");
    var v29701 = v29969.length;
    var v29266 = !v29701;
    var v28609 = !v29266;
    var v29267 = e$$70.getAttribute("style");
    var v28610 = /top/.test(v29267);
    var v29268 = e$$70.getAttribute("href");
    var v28611 = v29268 === "/a";
    var v29702 = e$$70.style;
    var v29269 = v29702.opacity;
    var v28612 = /^0.55/.test(v29269);
    var v29970 = e$$70.style;
    var v29703 = v29970.cssFloat;
    var v29270 = !v29703;
    var v28613 = !v29270;
    var v29271 = i$$99.value;
    var v28614 = v29271 === "on";
    var v28615 = h$$25.selected;
    var v29272 = p$$26.className;
    var v28616 = v29272 !== "t";
    var v29971 = c$$5.createElement("form");
    var v29704 = v29971.enctype;
    var v29273 = !v29704;
    var v28617 = !v29273;
    var v29972 = c$$5.createElement("nav");
    var v29973 = !0;
    var v29705 = v29972.cloneNode(v29973);
    var v29274 = v29705.outerHTML;
    var v28618 = v29274 !== "<:nav></:nav>";
    var v28619 = !0;
    var v28620 = !0;
    var v28621 = !1;
    var v28622 = !0;
    var v28623 = !0;
    var v28624 = !1;
    var v28625 = !1;
    var v28626 = !0;
    var v28627 = !0;
    b$$60 = {leadingWhitespace:v28607, tbody:v28608, htmlSerialize:v28609, style:v28610, hrefNormalized:v28611, opacity:v28612, cssFloat:v28613, checkOn:v28614, optSelected:v28615, getSetAttribute:v28616, enctype:v28617, html5Clone:v28618, submitBubbles:v28619, changeBubbles:v28620, focusinBubbles:v28621, deleteExpando:v28622, noCloneEvent:v28623, inlineBlockNeedsLayout:v28624, shrinkWrapBlocks:v28625, reliableMarginRight:v28626, pixelMargin:v28627};
    var v27597 = c$$5.compatMode;
    f$$4.boxModel = b$$60.boxModel = v27597 === "CSS1Compat";
    i$$99.checked = !0;
    var v22087 = b$$60;
    var v27598 = !0;
    var v26012 = i$$99.cloneNode(v27598);
    v22087.noCloneChecked = v26012.checked;
    g$$23.disabled = !0;
    var v12940 = h$$25.disabled;
    b$$60.optDisabled = !v12940;
    try {
      delete p$$26.test;
    } catch (r$$4) {
      b$$60.deleteExpando = !1;
    }
    var v30778 = p$$26.addEventListener;
    var v30747 = !v30778;
    if (v30747) {
      v30747 = p$$26.attachEvent;
    }
    var v30699 = v30747;
    if (v30699) {
      v30699 = p$$26.fireEvent;
    }
    var v30626 = v30699;
    if (v30626) {
      p$$26.attachEvent("onclick", v702);
      var v30779 = !0;
      var v30748 = p$$26.cloneNode(v30779);
      v30748.fireEvent("onclick");
    }
    i$$99 = c$$5.createElement("input");
    i$$99.value = "t";
    i$$99.setAttribute("type", "radio");
    var v30204 = i$$99.value;
    b$$60.radioValue = v30204 === "t";
    i$$99.setAttribute("checked", "checked");
    i$$99.setAttribute("name", "t");
    p$$26.appendChild(i$$99);
    j$$27 = c$$5.createDocumentFragment();
    var v27599 = p$$26.lastChild;
    j$$27.appendChild(v27599);
    var v26013 = b$$60;
    var v29706 = !0;
    var v29275 = j$$27.cloneNode(v29706);
    var v29276 = !0;
    var v28628 = v29275.cloneNode(v29276);
    var v27600 = v28628.lastChild;
    v26013.checkClone = v27600.checked;
    b$$60.appendChecked = i$$99.checked;
    j$$27.removeChild(i$$99);
    j$$27.appendChild(p$$26);
    var v5972 = p$$26.attachEvent;
    if (v5972) {
      var v5971 = {submit:1, change:1, focusin:1};
      for (n$$61 in v5971) {
        m$$10 = "on" + n$$61;
        o$$4 = m$$10 in p$$26;
        var v22088 = !o$$4;
        if (v22088) {
          p$$26.setAttribute(m$$10, "return;");
          var v27601 = p$$26[m$$10];
          var v26014 = typeof v27601;
          o$$4 = v26014 == "function";
        }
        var v12941 = n$$61 + "Bubbles";
        b$$60[v12941] = o$$4;
      }
    }
    j$$27.removeChild(p$$26);
    j$$27 = g$$23 = h$$25 = p$$26 = i$$99 = null;
    f$$4(v703);
    return b$$60;
  }
  function v701(a$$87) {
    function m$$9(a$$88) {
      function v699(b$$59) {
        var v12942 = e$$69;
        var v12943 = a$$88;
        var v18400;
        var v26015 = arguments.length;
        var v22089 = v26015 > 1;
        if (v22089) {
          v18400 = i$$85.call(arguments, 0);
        } else {
          v18400 = b$$59;
        }
        v12942[v12943] = v18400;
        j$$26.notifyWith(k$$12, e$$69);
        return;
      }
      return v699;
    }
    function l$$28(a$$89) {
      function v700(c$$43) {
        var v12944 = b$$58;
        var v12945 = a$$89;
        var v18401;
        var v26016 = arguments.length;
        var v22090 = v26016 > 1;
        if (v22090) {
          v18401 = i$$85.call(arguments, 0);
        } else {
          v18401 = c$$43;
        }
        v12944[v12945] = v18401;
        var v12946 = g$$22 = g$$22 - 1;
        var v18402 = !v12946;
        if (v18402) {
          j$$26.resolveWith(j$$26, b$$58);
        }
        return;
      }
      return v700;
    }
    var b$$58 = i$$85.call(arguments, 0);
    var c$$42 = 0;
    var d$$44 = b$$58.length;
    var e$$69 = Array(d$$44);
    var g$$22 = d$$44;
    var h$$24 = d$$44;
    var v5973;
    var v22091 = d$$44 <= 1;
    if (v22091) {
      v22091 = a$$87;
    }
    var v18403 = v22091;
    if (v18403) {
      var v22092 = a$$87.promise;
      v18403 = f$$4.isFunction(v22092);
    }
    var v12947 = v18403;
    if (v12947) {
      v5973 = a$$87;
    } else {
      v5973 = f$$4.Deferred();
    }
    var j$$26 = v5973;
    var k$$12 = j$$26.promise();
    var v5977 = d$$44 > 1;
    if (v5977) {
      var v5975 = c$$42 < d$$44;
      for (;v5975;) {
        var v5974;
        var v22093 = b$$58[c$$42];
        if (v22093) {
          var v26017 = b$$58[c$$42];
          v22093 = v26017.promise;
        }
        var v18404 = v22093;
        if (v18404) {
          var v26018 = b$$58[c$$42];
          var v22094 = v26018.promise;
          v18404 = f$$4.isFunction(v22094);
        }
        var v12952 = v18404;
        if (v12952) {
          var v18405 = b$$58[c$$42];
          var v12948 = v18405.promise();
          var v12949 = l$$28(c$$42);
          var v12950 = j$$26.reject;
          var v12951 = m$$9(c$$42);
          v5974 = v12948.then(v12949, v12950, v12951);
        } else {
          v5974 = g$$22 = g$$22 - 1;
        }
        v5974;
        c$$42++;
        v5975 = c$$42 < d$$44;
      }
      var v12953 = !g$$22;
      if (v12953) {
        j$$26.resolveWith(j$$26, b$$58);
      }
    } else {
      var v5976 = j$$26 !== a$$87;
      if (v5976) {
        var v18406;
        if (d$$44) {
          v18406 = [a$$87];
        } else {
          v18406 = [];
        }
        var v12954 = v18406;
        j$$26.resolveWith(j$$26, v12954);
      }
    }
    return k$$12;
  }
  function v698(a$$82) {
    function v697() {
      e$$67 = "rejected";
      return;
    }
    function v696() {
      e$$67 = "resolved";
      return;
    }
    function v695(a$$86) {
      var v5978 = a$$86 == null;
      if (v5978) {
        a$$86 = h$$23;
      } else {
        var b$$57;
        for (b$$57 in h$$23) {
          a$$86[b$$57] = h$$23[b$$57];
        }
      }
      return a$$86;
    }
    function v694(a$$84, b$$55, c$$40) {
      function v693(d$$43) {
        function v692(a$$85, b$$56) {
          function v691() {
            g$$21 = c$$41.apply(this, arguments);
            var v12955;
            var v22095 = g$$21;
            if (v22095) {
              var v26019 = g$$21.promise;
              v22095 = f$$4.isFunction(v26019);
            }
            var v18414 = v22095;
            if (v18414) {
              var v18407 = g$$21.promise();
              var v18408 = d$$43.resolve;
              var v18409 = d$$43.reject;
              var v18410 = d$$43.notify;
              v12955 = v18407.then(v18408, v18409, v18410);
            } else {
              var v18411 = e$$68 + "With";
              var v22096;
              var v26020 = this === i$$98;
              if (v26020) {
                v22096 = d$$43;
              } else {
                v22096 = this;
              }
              var v18412 = v22096;
              var v18413 = [g$$21];
              v12955 = d$$43[v18411](v18412, v18413);
            }
            v12955;
            return;
          }
          var c$$41 = b$$56[0];
          var e$$68 = b$$56[1];
          var g$$21;
          var v5979;
          var v12957 = f$$4.isFunction(c$$41);
          if (v12957) {
            v5979 = i$$98[a$$85](v691);
          } else {
            var v12956 = d$$43[e$$68];
            v5979 = i$$98[a$$85](v12956);
          }
          v5979;
          return;
        }
        var v12958 = [a$$84, "resolve"];
        var v12959 = [b$$55, "reject"];
        var v12960 = [c$$40, "notify"];
        var v5980 = {done:v12958, fail:v12959, progress:v12960};
        f$$4.each(v5980, v692);
        return;
      }
      var v5981 = f$$4.Deferred(v693);
      return v5981.promise();
    }
    function v690() {
      var v18415 = i$$98.done;
      var v12961 = v18415.apply(i$$98, arguments);
      var v5982 = v12961.fail;
      v5982.apply(i$$98, arguments);
      return this;
    }
    function v689(a$$83, b$$54, c$$39) {
      var v12962 = i$$98.done(a$$83);
      var v5983 = v12962.fail(b$$54);
      v5983.progress(c$$39);
      return this;
    }
    function v688() {
      return e$$67;
    }
    var b$$53 = f$$4.Callbacks("once memory");
    var c$$38 = f$$4.Callbacks("once memory");
    var d$$42 = f$$4.Callbacks("memory");
    var e$$67 = "pending";
    var g$$20 = {resolve:b$$53, reject:c$$38, notify:d$$42};
    var v5984 = b$$53.add;
    var v5985 = c$$38.add;
    var v5986 = d$$42.add;
    var v5987 = b$$53.fired;
    var v5988 = c$$38.fired;
    var h$$23 = {done:v5984, fail:v5985, progress:v5986, state:v688, isResolved:v5987, isRejected:v5988, then:v689, always:v690, pipe:v694, promise:v695};
    var i$$98 = h$$23.promise({});
    var j$$25;
    for (j$$25 in g$$20) {
      var v12963 = g$$20[j$$25];
      i$$98[j$$25] = v12963.fire;
      var v12964 = j$$25 + "With";
      var v18416 = g$$20[j$$25];
      i$$98[v12964] = v18416.fireWith;
    }
    var v18417 = c$$38.disable;
    var v18418 = d$$42.lock;
    var v12965 = i$$98.done(v696, v18417, v18418);
    var v12966 = b$$53.disable;
    var v12967 = d$$42.lock;
    v12965.fail(v697, v12966, v12967);
    if (a$$82) {
      a$$82.call(i$$98, i$$98);
    }
    return i$$98;
  }
  function v687(a$$79) {
    function v686() {
      var v5989 = !i$$96;
      return!v5989;
    }
    function v685() {
      p$$25.fireWith(this, arguments);
      return this;
    }
    function v684(b$$52, c$$37) {
      if (d$$38) {
        var v12968;
        if (j$$24) {
          var v18419 = a$$79.once;
          var v22098 = !v18419;
          if (v22098) {
            var v22097 = [b$$52, c$$37];
            v18419 = d$$38.push(v22097);
          }
          v12968 = v18419;
        } else {
          var v26021 = a$$79.once;
          var v22099 = !v26021;
          var v26022 = !v22099;
          if (v26022) {
            v22099 = !e$$64;
          }
          var v18420 = v22099;
          if (v18420) {
            v18420 = o$$3(b$$52, c$$37);
          }
          v12968 = v18420;
        }
        v12968;
      }
      return this;
    }
    function v683() {
      return!d$$38;
    }
    function v682() {
      d$$38 = b$$9;
      var v18421 = !e$$64;
      var v22101 = !v18421;
      if (v22101) {
        var v22100 = !0;
        v18421 = e$$64 === v22100;
      }
      var v12969 = v18421;
      if (v12969) {
        p$$25.disable();
      }
      return this;
    }
    function v681() {
      return!c$$36;
    }
    function v680() {
      c$$36 = d$$38 = e$$64 = b$$9;
      return this;
    }
    function v679() {
      c$$36 = [];
      return this;
    }
    function v678(a$$81) {
      if (c$$36) {
        var b$$51 = 0;
        var d$$41 = c$$36.length;
        var v5991 = b$$51 < d$$41;
        for (;v5991;) {
          var v12970 = c$$36[b$$51];
          var v5990 = a$$81 === v12970;
          if (v5990) {
            return!0;
          }
          b$$51++;
          v5991 = b$$51 < d$$41;
        }
      }
      return!1;
    }
    function v677() {
      if (c$$36) {
        var b$$50 = arguments;
        var d$$40 = 0;
        var e$$66 = b$$50.length;
        var v5995 = d$$40 < e$$66;
        for (;v5995;) {
          var f$$19 = 0;
          var v12971 = c$$36.length;
          var v5994 = f$$19 < v12971;
          for (;v5994;) {
            var v12972 = b$$50[d$$40];
            var v12973 = c$$36[f$$19];
            var v5993 = v12972 === v12973;
            if (v5993) {
              var v18422 = j$$24;
              if (v18422) {
                v18422 = f$$19 <= l$$27;
              }
              var v12974 = v18422;
              if (v12974) {
                l$$27--;
                var v22102 = f$$19 <= m$$8;
                if (v22102) {
                  m$$8--;
                }
              }
              var v12975 = f$$19;
              f$$19 = f$$19 - 1;
              c$$36.splice(v12975, 1);
              var v5992 = a$$79.unique;
              if (v5992) {
                break;
              }
            }
            f$$19++;
            var v12976 = c$$36.length;
            v5994 = f$$19 < v12976;
          }
          d$$40++;
          v5995 = d$$40 < e$$66;
        }
      }
      return this;
    }
    function v676() {
      if (c$$36) {
        var a$$80 = c$$36.length;
        n$$60(arguments);
        var v12977;
        if (j$$24) {
          v12977 = l$$27 = c$$36.length;
        } else {
          var v22103 = e$$64;
          if (v22103) {
            var v26023 = !0;
            v22103 = e$$64 !== v26023;
          }
          var v18423 = v22103;
          if (v18423) {
            k$$11 = a$$80;
            var v26024 = e$$64[0];
            var v26025 = e$$64[1];
            v18423 = o$$3(v26024, v26025);
          }
          v12977 = v18423;
        }
        v12977;
      }
      return this;
    }
    function o$$3(b$$49, f$$18) {
      f$$18 = f$$18 || [];
      var v29277 = a$$79.memory;
      var v28629 = !v29277;
      var v29278 = !v28629;
      if (v29278) {
        v28629 = [b$$49, f$$18];
      }
      e$$64 = v28629;
      i$$96 = !0;
      j$$24 = !0;
      m$$8 = k$$11 || 0;
      k$$11 = 0;
      l$$27 = c$$36.length;
      var v12978 = c$$36;
      if (v12978) {
        v12978 = m$$8 < l$$27;
      }
      var v5997 = v12978;
      for (;v5997;) {
        var v22104 = c$$36[m$$8];
        var v18424 = v22104.apply(b$$49, f$$18);
        var v18425 = !1;
        var v12979 = v18424 === v18425;
        if (v12979) {
          v12979 = a$$79.stopOnFalse;
        }
        var v5996 = v12979;
        if (v5996) {
          e$$64 = !0;
          break;
        }
        m$$8++;
        var v12980 = c$$36;
        if (v12980) {
          v12980 = m$$8 < l$$27;
        }
        v5997 = v12980;
      }
      j$$24 = !1;
      if (c$$36) {
        var v18426;
        var v22107 = a$$79.once;
        if (v22107) {
          var v22105;
          var v27602 = !0;
          var v26026 = e$$64 === v27602;
          if (v26026) {
            v22105 = p$$25.disable();
          } else {
            v22105 = c$$36 = [];
          }
          v18426 = v22105;
        } else {
          var v26027 = d$$38;
          if (v26027) {
            v26027 = d$$38.length;
          }
          var v22106 = v26027;
          if (v22106) {
            e$$64 = d$$38.shift();
            var v27603 = e$$64[0];
            var v27604 = e$$64[1];
            v22106 = p$$25.fireWith(v27603, v27604);
          }
          v18426 = v22106;
        }
        v18426;
      }
      return;
    }
    function n$$60(b$$48) {
      var d$$39;
      var e$$65;
      var g$$19;
      var h$$22;
      var i$$97;
      d$$39 = 0;
      e$$65 = b$$48.length;
      var v5998 = d$$39 < e$$65;
      for (;v5998;) {
        g$$19 = b$$48[d$$39];
        h$$22 = f$$4.type(g$$19);
        var v12981;
        var v18428 = h$$22 === "array";
        if (v18428) {
          v12981 = n$$60(g$$19);
        } else {
          var v22108 = h$$22 === "function";
          if (v22108) {
            var v27605 = a$$79.unique;
            var v26028 = !v27605;
            var v27607 = !v26028;
            if (v27607) {
              var v27606 = p$$25.has(g$$19);
              v26028 = !v27606;
            }
            v22108 = v26028;
          }
          var v18427 = v22108;
          if (v18427) {
            v18427 = c$$36.push(g$$19);
          }
          v12981 = v18427;
        }
        v12981;
        d$$39++;
        v5998 = d$$39 < e$$65;
      }
      return;
    }
    var v5999;
    if (a$$79) {
      var v12982 = g[a$$79];
      var v18429 = !v12982;
      if (v18429) {
        v12982 = h$$9(a$$79);
      }
      v5999 = v12982;
    } else {
      v5999 = {};
    }
    a$$79 = v5999;
    var c$$36 = [];
    var d$$38 = [];
    var e$$64;
    var i$$96;
    var j$$24;
    var k$$11;
    var l$$27;
    var m$$8;
    var p$$25 = {add:v676, remove:v677, has:v678, empty:v679, disable:v680, disabled:v681, lock:v682, locked:v683, fireWith:v684, fire:v685, fired:v686};
    return p$$25;
  }
  function v675() {
    function v674() {
      var v12983 = c$$5.readyState;
      var v6000 = v12983 === "complete";
      if (v6000) {
        c$$5.detachEvent("onreadystatechange", B$$1);
        e$$61.ready();
      }
      return;
    }
    function v673() {
      var v12984 = !1;
      c$$5.removeEventListener("DOMContentLoaded", B$$1, v12984);
      e$$61.ready();
      return;
    }
    function v672(a$$78, b$$47) {
      var v6001 = I$$1;
      var v12985 = "[object " + b$$47;
      var v6002 = v12985 + "]";
      var v31142 = b$$47.toLowerCase();
      v6001[v6002] = v31142;
      return;
    }
    function v671() {
      function v670(d$$37, f$$17) {
        var v18430 = f$$17;
        if (v18430) {
          v18430 = f$$17 instanceof e$$61;
        }
        var v12986 = v18430;
        if (v12986) {
          var v18431 = f$$17 instanceof a$$77;
          v12986 = !v18431;
        }
        var v6003 = v12986;
        if (v6003) {
          f$$17 = a$$77(f$$17);
        }
        var v12987 = e$$61.fn;
        var v6004 = v12987.init;
        return v6004.call(this, d$$37, f$$17, b$$45);
      }
      function a$$77(b$$46, c$$35) {
        var v12988 = a$$77.fn;
        var v6005 = v12988.init;
        return new v6005(b$$46, c$$35);
      }
      var v28630 = !0;
      e$$61.extend(v28630, a$$77, this);
      a$$77.superclass = this;
      var v27608 = a$$77;
      var v28631 = a$$77;
      var v31143 = this();
      v27608.fn = v28631.prototype = v31143;
      var v26029 = a$$77.fn;
      v26029.constructor = a$$77;
      a$$77.sub = this.sub;
      var v18432 = a$$77.fn;
      v18432.init = v670;
      var v18433 = a$$77.fn;
      var v12989 = v18433.init;
      v12989.prototype = a$$77.fn;
      var b$$45 = a$$77(c$$5);
      return a$$77;
    }
    function v669(a$$76) {
      a$$76 = a$$76.toLowerCase();
      var v22109 = r$$3.exec(a$$76);
      var v26030 = !v22109;
      if (v26030) {
        v22109 = s$$16.exec(a$$76);
      }
      var v18434 = v22109;
      var v22110 = !v18434;
      if (v22110) {
        v18434 = t$$3.exec(a$$76);
      }
      var v12990 = v18434;
      var v18436 = !v12990;
      if (v18436) {
        var v22111 = a$$76.indexOf("compatible");
        var v18435 = v22111 < 0;
        if (v18435) {
          v18435 = u$$2.exec(a$$76);
        }
        v12990 = v18435;
      }
      var v6006 = v12990;
      var v12991 = !v6006;
      if (v12991) {
        v6006 = [];
      }
      var b$$44 = v6006;
      var v12992 = b$$44[1];
      var v18437 = !v12992;
      if (v18437) {
        v12992 = "";
      }
      var v6007 = v12992;
      var v12993 = b$$44[2];
      var v18438 = !v12993;
      if (v18438) {
        v12993 = "0";
      }
      var v6008 = v12993;
      return{browser:v6007, version:v6008};
    }
    function v668() {
      var v6009 = new Date;
      return v6009.getTime();
    }
    function v667(a$$74, c$$33, d$$36, f$$16, g$$18, h$$21, i$$95) {
      function v666(a$$75, b$$43, c$$34) {
        var v6010 = e$$61(a$$75);
        return j$$23.call(v6010, c$$34);
      }
      var j$$23;
      var k$$10 = d$$36 == null;
      var l$$26 = 0;
      var m$$7 = a$$74.length;
      var v12994 = d$$36;
      if (v12994) {
        var v18439 = typeof d$$36;
        v12994 = v18439 == "object";
      }
      var v6016 = v12994;
      if (v6016) {
        for (l$$26 in d$$36) {
          var v6011 = d$$36[l$$26];
          e$$61.access(a$$74, c$$33, l$$26, v6011, 1, h$$21, f$$16);
        }
        g$$18 = 1;
      } else {
        var v6015 = f$$16 !== b$$9;
        if (v6015) {
          var v12995 = i$$95 === b$$9;
          if (v12995) {
            v12995 = e$$61.isFunction(f$$16);
          }
          j$$23 = v12995;
          if (k$$10) {
            var v18440;
            if (j$$23) {
              j$$23 = c$$33;
              v18440 = c$$33 = v666;
            } else {
              c$$33.call(a$$74, f$$16);
              v18440 = c$$33 = null;
            }
            v18440;
          }
          if (c$$33) {
            var v6014 = l$$26 < m$$7;
            for (;v6014;) {
              var v6012 = a$$74[l$$26];
              var v12996;
              if (j$$23) {
                var v18441 = a$$74[l$$26];
                var v22112 = a$$74[l$$26];
                var v18442 = c$$33(v22112, d$$36);
                v12996 = f$$16.call(v18441, l$$26, v18442);
              } else {
                v12996 = f$$16;
              }
              var v6013 = v12996;
              c$$33(v6012, d$$36, v6013, i$$95);
              l$$26++;
              v6014 = l$$26 < m$$7;
            }
          }
          g$$18 = 1;
        }
      }
      var v6017;
      if (g$$18) {
        v6017 = a$$74;
      } else {
        var v12997;
        if (k$$10) {
          v12997 = c$$33.call(a$$74);
        } else {
          var v18443;
          if (m$$7) {
            var v22113 = a$$74[0];
            v18443 = c$$33(v22113, d$$36);
          } else {
            v18443 = h$$21;
          }
          v12997 = v18443;
        }
        v6017 = v12997;
      }
      return v6017;
    }
    function v665(a$$73, c$$32) {
      function g$$17() {
        var v12998 = F$$1.call(arguments);
        var v6018 = f$$15.concat(v12998);
        return a$$73.apply(c$$32, v6018);
      }
      var v12999 = typeof c$$32;
      var v6019 = v12999 == "string";
      if (v6019) {
        var d$$35 = a$$73[c$$32];
        c$$32 = a$$73;
        a$$73 = d$$35;
      }
      var v13000 = e$$61.isFunction(a$$73);
      var v6020 = !v13000;
      if (v6020) {
        return b$$9;
      }
      var f$$15 = F$$1.call(arguments, 2);
      var v13001 = a$$73.guid;
      var v18444 = !v13001;
      if (v18444) {
        v13001 = g$$17.guid;
      }
      var v6021 = v13001;
      var v13002 = !v6021;
      if (v13002) {
        v6021 = e$$61.guid;
        var v18445 = e$$61.guid;
        e$$61.guid = v18445 + 1;
      }
      g$$17.guid = a$$73.guid = v6021;
      return g$$17;
    }
    function v664(a$$72, c$$31, d$$34) {
      var f$$14;
      var g$$16;
      var h$$20 = [];
      var i$$94 = 0;
      var j$$22 = a$$72.length;
      var v6022 = a$$72 instanceof e$$61;
      var v13004 = !v6022;
      if (v13004) {
        var v18446 = j$$22 !== b$$9;
        if (v18446) {
          var v22114 = typeof j$$22;
          v18446 = v22114 == "number";
        }
        var v13003 = v18446;
        if (v13003) {
          var v27609 = j$$22 > 0;
          if (v27609) {
            v27609 = a$$72[0];
          }
          var v26031 = v27609;
          if (v26031) {
            var v27610 = j$$22 - 1;
            v26031 = a$$72[v27610];
          }
          var v22115 = v26031;
          var v26032 = !v22115;
          if (v26032) {
            v22115 = j$$22 === 0;
          }
          var v18447 = v22115;
          var v22116 = !v18447;
          if (v22116) {
            v18447 = e$$61.isArray(a$$72);
          }
          v13003 = v18447;
        }
        v6022 = v13003;
      }
      var k$$9 = v6022;
      if (k$$9) {
        var v6023 = i$$94 < j$$22;
        for (;v6023;) {
          var v13005 = a$$72[i$$94];
          f$$14 = c$$31(v13005, i$$94, d$$34);
          var v13006 = f$$14 != null;
          if (v13006) {
            var v18448 = h$$20.length;
            h$$20[v18448] = f$$14;
          }
          i$$94++;
          v6023 = i$$94 < j$$22;
        }
      } else {
        for (g$$16 in a$$72) {
          var v13007 = a$$72[g$$16];
          f$$14 = c$$31(v13007, g$$16, d$$34);
          var v13008 = f$$14 != null;
          if (v13008) {
            var v18449 = h$$20.length;
            h$$20[v18449] = f$$14;
          }
        }
      }
      var v6024 = h$$20.concat;
      return v6024.apply([], h$$20);
    }
    function v663(a$$71, b$$42, c$$30) {
      var d$$33 = [];
      var e$$63;
      var v6025 = !c$$30;
      c$$30 = !v6025;
      var f$$13 = 0;
      var g$$15 = a$$71.length;
      var v6026 = f$$13 < g$$15;
      for (;v6026;) {
        var v22117 = a$$71[f$$13];
        var v18450 = b$$42(v22117, f$$13);
        var v13009 = !v18450;
        e$$63 = !v13009;
        var v13010 = c$$30 !== e$$63;
        if (v13010) {
          var v18451 = a$$71[f$$13];
          d$$33.push(v18451);
        }
        f$$13++;
        v6026 = f$$13 < g$$15;
      }
      return d$$33;
    }
    function v662(a$$70, c$$29) {
      var d$$32 = a$$70.length;
      var e$$62 = 0;
      var v18452 = c$$29.length;
      var v13011 = typeof v18452;
      var v6031 = v13011 == "number";
      if (v6031) {
        var f$$12 = c$$29.length;
        var v6028 = e$$62 < f$$12;
        for (;v6028;) {
          var v6027 = d$$32;
          d$$32 = d$$32 + 1;
          a$$70[v6027] = c$$29[e$$62];
          e$$62++;
          v6028 = e$$62 < f$$12;
        }
      } else {
        var v13012 = c$$29[e$$62];
        var v6030 = v13012 !== b$$9;
        for (;v6030;) {
          var v6029 = d$$32;
          d$$32 = d$$32 + 1;
          var v13013 = e$$62;
          e$$62 = e$$62 + 1;
          a$$70[v6029] = c$$29[v13013];
          var v13014 = c$$29[e$$62];
          v6030 = v13014 !== b$$9;
        }
      }
      a$$70.length = d$$32;
      return a$$70;
    }
    function v661(a$$69, b$$41, c$$28) {
      var d$$31;
      if (b$$41) {
        if (H$$1) {
          return H$$1.call(b$$41, a$$69, c$$28);
        }
        d$$31 = b$$41.length;
        var v13015;
        if (c$$28) {
          var v18453;
          var v22119 = c$$28 < 0;
          if (v22119) {
            var v22118 = d$$31 + c$$28;
            v18453 = Math.max(0, v22118);
          } else {
            v18453 = c$$28;
          }
          v13015 = v18453;
        } else {
          v13015 = 0;
        }
        c$$28 = v13015;
        var v6033 = c$$28 < d$$31;
        for (;v6033;) {
          var v13016 = c$$28 in b$$41;
          if (v13016) {
            var v18454 = b$$41[c$$28];
            v13016 = v18454 === a$$69;
          }
          var v6032 = v13016;
          if (v6032) {
            return c$$28;
          }
          c$$28++;
          v6033 = c$$28 < d$$31;
        }
      }
      return-1;
    }
    function v660(a$$68, b$$40) {
      var c$$27 = b$$40 || [];
      var v6035 = a$$68 != null;
      if (v6035) {
        var d$$30 = e$$61.type(a$$68);
        var v6034;
        var v28632 = a$$68.length;
        var v27611 = v28632 == null;
        var v28633 = !v27611;
        if (v28633) {
          v27611 = d$$30 === "string";
        }
        var v26033 = v27611;
        var v27612 = !v26033;
        if (v27612) {
          v26033 = d$$30 === "function";
        }
        var v22120 = v26033;
        var v26034 = !v22120;
        if (v26034) {
          v22120 = d$$30 === "regexp";
        }
        var v18455 = v22120;
        var v22121 = !v18455;
        if (v22121) {
          v18455 = e$$61.isWindow(a$$68);
        }
        var v13017 = v18455;
        if (v13017) {
          v6034 = E$$1.call(c$$27, a$$68);
        } else {
          v6034 = e$$61.merge(c$$27, a$$68);
        }
        v6034;
      }
      return c$$27;
    }
    function v659(a$$67) {
      var v6036;
      var v13019 = a$$67 == null;
      if (v13019) {
        v6036 = "";
      } else {
        var v18456 = a$$67 + "";
        var v13018 = v18456.replace(k$$6, "");
        v6036 = v13018.replace(l$$24, "");
      }
      return v6036;
    }
    function v658(a$$66) {
      var v6037;
      var v13020 = a$$66 == null;
      if (v13020) {
        v6037 = "";
      } else {
        v6037 = G$$1.call(a$$66);
      }
      return v6037;
    }
    function v657(a$$65, c$$26, d$$29) {
      var f$$11;
      var g$$14 = 0;
      var h$$19 = a$$65.length;
      var v6038 = h$$19 === b$$9;
      var v13021 = !v6038;
      if (v13021) {
        v6038 = e$$61.isFunction(a$$65);
      }
      var i$$93 = v6038;
      if (d$$29) {
        if (i$$93) {
          for (f$$11 in a$$65) {
            var v18457 = a$$65[f$$11];
            var v13022 = c$$26.apply(v18457, d$$29);
            var v13023 = !1;
            var v6039 = v13022 === v13023;
            if (v6039) {
              break;
            }
          }
        } else {
          var v6041 = g$$14 < h$$19;
          for (;v6041;) {
            var v22122 = g$$14;
            g$$14 = g$$14 + 1;
            var v18458 = a$$65[v22122];
            var v13024 = c$$26.apply(v18458, d$$29);
            var v13025 = !1;
            var v6040 = v13024 === v13025;
            if (v6040) {
              break;
            }
            v6041 = g$$14 < h$$19;
          }
        }
      } else {
        if (i$$93) {
          for (f$$11 in a$$65) {
            var v18459 = a$$65[f$$11];
            var v18460 = a$$65[f$$11];
            var v13026 = c$$26.call(v18459, f$$11, v18460);
            var v13027 = !1;
            var v6042 = v13026 === v13027;
            if (v6042) {
              break;
            }
          }
        } else {
          var v6044 = g$$14 < h$$19;
          for (;v6044;) {
            var v18461 = a$$65[g$$14];
            var v22123 = g$$14;
            g$$14 = g$$14 + 1;
            var v18462 = a$$65[v22123];
            var v13028 = c$$26.call(v18461, g$$14, v18462);
            var v13029 = !1;
            var v6043 = v13028 === v13029;
            if (v6043) {
              break;
            }
            v6044 = g$$14 < h$$19;
          }
        }
      }
      return a$$65;
    }
    function v656(a$$64, b$$39) {
      var v6045 = a$$64.nodeName;
      if (v6045) {
        var v18463 = a$$64.nodeName;
        var v13030 = v18463.toUpperCase();
        var v13031 = b$$39.toUpperCase();
        v6045 = v13030 === v13031;
      }
      return v6045;
    }
    function v655(a$$63) {
      var v6046 = a$$63.replace(w$$12, "ms-");
      return v6046.replace(v$$5, x$$68);
    }
    function v654(b$$37) {
      function v653(b$$38) {
        var v6047 = a$$13.eval;
        v6047.call(a$$13, b$$38);
        return;
      }
      var v13032 = b$$37;
      if (v13032) {
        v13032 = j$$19.test(b$$37);
      }
      var v6048 = v13032;
      if (v6048) {
        var v18464 = a$$13.execScript;
        var v22124 = !v18464;
        if (v22124) {
          v18464 = v653;
        }
        var v13033 = v18464;
        v13033(b$$37);
      }
      return;
    }
    function v652() {
      return;
    }
    function v651(c$$25) {
      var v18465 = typeof c$$25;
      var v13034 = v18465 != "string";
      var v18466 = !v13034;
      if (v18466) {
        v13034 = !c$$25;
      }
      var v6049 = v13034;
      if (v6049) {
        return null;
      }
      var d$$28;
      var f$$10;
      try {
        var v6050;
        var v13035 = a$$13.DOMParser;
        if (v13035) {
          f$$10 = new DOMParser;
          v6050 = d$$28 = f$$10.parseFromString(c$$25, "text/xml");
        } else {
          d$$28 = new ActiveXObject("Microsoft.XMLDOM");
          d$$28.async = "false";
          v6050 = d$$28.loadXML(c$$25);
        }
        v6050;
      } catch (g$$13) {
        d$$28 = b$$9;
      }
      var v18467 = !d$$28;
      var v22126 = !v18467;
      if (v22126) {
        var v22125 = d$$28.documentElement;
        v18467 = !v22125;
      }
      var v13036 = v18467;
      var v18469 = !v13036;
      if (v18469) {
        var v18468 = d$$28.getElementsByTagName("parsererror");
        v13036 = v18468.length;
      }
      var v6051 = v13036;
      if (v6051) {
        var v13037 = "Invalid XML: " + c$$25;
        e$$61.error(v13037);
      }
      return d$$28;
    }
    function v650(b$$36) {
      var v18470 = typeof b$$36;
      var v13038 = v18470 != "string";
      var v18471 = !v13038;
      if (v18471) {
        v13038 = !b$$36;
      }
      var v6052 = v13038;
      if (v6052) {
        return null;
      }
      b$$36 = e$$61.trim(b$$36);
      var v13039 = a$$13.JSON;
      if (v13039) {
        var v18472 = a$$13.JSON;
        v13039 = v18472.parse;
      }
      var v6054 = v13039;
      if (v6054) {
        var v6053 = a$$13.JSON;
        return v6053.parse(b$$36);
      }
      var v22127 = b$$36.replace(o$$2, "@");
      var v18473 = v22127.replace(p$$24, "]");
      var v13040 = v18473.replace(q$$1, "");
      var v6056 = n$$59.test(v13040);
      if (v6056) {
        var v13041 = "return " + b$$36;
        var v6055 = new Function(v13041);
        return v6055();
      }
      var v6057 = "Invalid JSON: " + b$$36;
      e$$61.error(v6057);
      return;
    }
    function v649(a$$62) {
      throw new Error(a$$62);
    }
    function v648(a$$61) {
      var b$$35;
      for (b$$35 in a$$61) {
        return!1;
      }
      return!0;
    }
    function v647(a$$60) {
      var v22128 = !a$$60;
      var v26036 = !v22128;
      if (v26036) {
        var v26035 = e$$61.type(a$$60);
        v22128 = v26035 !== "object";
      }
      var v18474 = v22128;
      var v22129 = !v18474;
      if (v22129) {
        v18474 = a$$60.nodeType;
      }
      var v13042 = v18474;
      var v18475 = !v13042;
      if (v18475) {
        v13042 = e$$61.isWindow(a$$60);
      }
      var v6058 = v13042;
      if (v6058) {
        return!1;
      }
      try {
        var v18476 = a$$60.constructor;
        if (v18476) {
          var v22130 = D$$1.call(a$$60, "constructor");
          v18476 = !v22130;
        }
        var v13043 = v18476;
        if (v13043) {
          var v26037 = a$$60.constructor;
          var v22131 = v26037.prototype;
          var v18477 = D$$1.call(v22131, "isPrototypeOf");
          v13043 = !v18477;
        }
        var v6059 = v13043;
        if (v6059) {
          return!1;
        }
      } catch (c$$24) {
        return!1;
      }
      var d$$27;
      for (d$$27 in a$$60) {
      }
      var v6060 = d$$27 === b$$9;
      var v13044 = !v6060;
      if (v13044) {
        v6060 = D$$1.call(a$$60, d$$27);
      }
      return v6060;
    }
    function v646(a$$59) {
      var v6061;
      var v13046 = a$$59 == null;
      if (v13046) {
        v6061 = String(a$$59);
      } else {
        var v18478 = I$$1;
        var v18479 = C$$1.call(a$$59);
        var v13045 = v18478[v18479];
        var v18480 = !v13045;
        if (v18480) {
          v13045 = "object";
        }
        v6061 = v13045;
      }
      return v6061;
    }
    function v645(a$$58) {
      var v18481 = parseFloat(a$$58);
      var v13047 = isNaN(v18481);
      var v6062 = !v13047;
      if (v6062) {
        v6062 = isFinite(a$$58);
      }
      return v6062;
    }
    function v644(a$$57) {
      var v6063 = a$$57 != null;
      if (v6063) {
        var v13048 = a$$57.window;
        v6063 = a$$57 == v13048;
      }
      return v6063;
    }
    function v643(a$$56) {
      var v6064 = e$$61.type(a$$56);
      return v6064 === "array";
    }
    function v642(a$$55) {
      var v6065 = e$$61.type(a$$55);
      return v6065 === "function";
    }
    function v641() {
      var v6072 = !A$$1;
      if (v6072) {
        A$$1 = e$$61.Callbacks("once memory");
        var v13049 = c$$5.readyState;
        var v6067 = v13049 === "complete";
        if (v6067) {
          var v6066 = e$$61.ready;
          return setTimeout(v6066, 1);
        }
        var v6071 = c$$5.addEventListener;
        if (v6071) {
          var v13050 = !1;
          c$$5.addEventListener("DOMContentLoaded", B$$1, v13050);
          var v13051 = e$$61.ready;
          var v13052 = !1;
          a$$13.addEventListener("load", v13051, v13052);
        } else {
          var v6070 = c$$5.attachEvent;
          if (v6070) {
            c$$5.attachEvent("onreadystatechange", B$$1);
            var v13053 = e$$61.ready;
            a$$13.attachEvent("onload", v13053);
            var b$$34 = !1;
            try {
              var v6068 = a$$13.frameElement;
              b$$34 = v6068 == null;
            } catch (d$$26) {
            }
            var v18482 = c$$5.documentElement;
            var v13054 = v18482.doScroll;
            if (v13054) {
              v13054 = b$$34;
            }
            var v6069 = v13054;
            if (v6069) {
              J$$1();
            }
          }
        }
      }
      return;
    }
    function v640(a$$54) {
      var v22132 = !0;
      var v18483 = a$$54 === v22132;
      if (v18483) {
        var v27613 = e$$61.readyWait;
        var v22133 = e$$61.readyWait = v27613 - 1;
        v18483 = !v22133;
      }
      var v13055 = v18483;
      var v18485 = !v13055;
      if (v18485) {
        var v22134 = !0;
        var v18484 = a$$54 !== v22134;
        if (v18484) {
          var v22135 = e$$61.isReady;
          v18484 = !v22135;
        }
        v13055 = v18484;
      }
      var v6076 = v13055;
      if (v6076) {
        var v13056 = c$$5.body;
        var v6074 = !v13056;
        if (v6074) {
          var v6073 = e$$61.ready;
          return setTimeout(v6073, 1);
        }
        e$$61.isReady = !0;
        var v18486 = !0;
        var v13057 = a$$54 !== v18486;
        if (v13057) {
          var v26038 = e$$61.readyWait;
          var v18487 = e$$61.readyWait = v26038 - 1;
          v13057 = v18487 > 0;
        }
        var v6075 = v13057;
        if (v6075) {
          return;
        }
        var v13058 = [e$$61];
        A$$1.fireWith(c$$5, v13058);
        var v18488 = e$$61.fn;
        var v13059 = v18488.trigger;
        if (v13059) {
          var v22136 = e$$61(c$$5);
          var v18489 = v22136.trigger("ready");
          v18489.off("ready");
        }
      }
      return;
    }
    function v639(a$$53) {
      var v6077;
      if (a$$53) {
        v6077 = e$$61.readyWait;
        var v18490 = e$$61.readyWait;
        e$$61.readyWait = v18490 + 1;
      } else {
        var v13060 = !0;
        v6077 = e$$61.ready(v13060);
      }
      v6077;
      return;
    }
    function v638(b$$33) {
      var v18491 = a$$13.$;
      var v13061 = v18491 === e$$61;
      if (v13061) {
        a$$13.$ = g$$10;
      }
      var v18492 = b$$33;
      if (v18492) {
        var v22137 = a$$13.jQuery;
        v18492 = v22137 === e$$61;
      }
      var v13062 = v18492;
      if (v13062) {
        a$$13.jQuery = f$$7;
      }
      return e$$61;
    }
    function v637() {
      var a$$52;
      var c$$23;
      var d$$25;
      var f$$9;
      var g$$12;
      var h$$18;
      var v6078 = arguments[0];
      var v13063 = !v6078;
      if (v13063) {
        v6078 = {};
      }
      var i$$92 = v6078;
      var j$$21 = 1;
      var k$$8 = arguments.length;
      var l$$25 = !1;
      var v22138 = typeof i$$92;
      var v18493 = v22138 == "boolean";
      if (v18493) {
        l$$25 = i$$92;
        var v27614 = arguments[1];
        var v28634 = !v27614;
        if (v28634) {
          v27614 = {};
        }
        i$$92 = v27614;
        j$$21 = 2;
      }
      var v26039 = typeof i$$92;
      var v22139 = v26039 != "object";
      if (v22139) {
        var v26040 = e$$61.isFunction(i$$92);
        v22139 = !v26040;
      }
      var v18494 = v22139;
      if (v18494) {
        i$$92 = {};
      }
      var v13064 = k$$8 === j$$21;
      if (v13064) {
        i$$92 = this;
        --j$$21;
      }
      var v6082 = j$$21 < k$$8;
      for (;v6082;) {
        var v13065 = a$$52 = arguments[j$$21];
        var v6081 = v13065 != null;
        if (v6081) {
          for (c$$23 in a$$52) {
            d$$25 = i$$92[c$$23];
            f$$9 = a$$52[c$$23];
            var v6079 = i$$92 === f$$9;
            if (v6079) {
              continue;
            }
            var v6080;
            var v18495 = l$$25 && f$$9;
            if (v18495) {
              var v22140 = e$$61.isPlainObject(f$$9);
              var v26041 = !v22140;
              if (v26041) {
                v22140 = g$$12 = e$$61.isArray(f$$9);
              }
              v18495 = v22140;
            }
            var v13067 = v18495;
            if (v13067) {
              var v18496;
              if (g$$12) {
                g$$12 = !1;
                var v26042;
                var v28635 = d$$25;
                if (v28635) {
                  v28635 = e$$61.isArray(d$$25);
                }
                var v27615 = v28635;
                if (v27615) {
                  v26042 = d$$25;
                } else {
                  v26042 = [];
                }
                v18496 = h$$18 = v26042;
              } else {
                var v22141;
                var v27616 = d$$25;
                if (v27616) {
                  v27616 = e$$61.isPlainObject(d$$25);
                }
                var v26043 = v27616;
                if (v26043) {
                  v22141 = d$$25;
                } else {
                  v22141 = {};
                }
                v18496 = h$$18 = v22141;
              }
              v18496;
              var v31144 = e$$61.extend(l$$25, h$$18, f$$9);
              v6080 = i$$92[c$$23] = v31144;
            } else {
              var v13066 = f$$9 !== b$$9;
              if (v13066) {
                v13066 = i$$92[c$$23] = f$$9;
              }
              v6080 = v13066;
            }
            v6080;
          }
        }
        j$$21++;
        v6082 = j$$21 < k$$8;
      }
      return i$$92;
    }
    function v636() {
      var v6083 = this.prevObject;
      var v13068 = !v6083;
      if (v13068) {
        v6083 = this.constructor(null);
      }
      return v6083;
    }
    function v635(a$$51) {
      function v634(b$$32, c$$22) {
        return a$$51.call(b$$32, c$$22, b$$32);
      }
      var v6084 = e$$61.map(this, v634);
      return this.pushStack(v6084);
    }
    function v633() {
      var v6085 = F$$1.apply(this, arguments);
      var v13069 = F$$1.call(arguments);
      var v6086 = v13069.join(",");
      return this.pushStack(v6085, "slice", v6086);
    }
    function v632() {
      return this.eq(-1);
    }
    function v631() {
      return this.eq(0);
    }
    function v630(a$$50) {
      a$$50 = +a$$50;
      var v6087;
      var v13071 = a$$50 === -1;
      if (v13071) {
        v6087 = this.slice(a$$50);
      } else {
        var v13070 = a$$50 + 1;
        v6087 = this.slice(a$$50, v13070);
      }
      return v6087;
    }
    function v629(a$$49) {
      e$$61.bindReady();
      A$$1.add(a$$49);
      return this;
    }
    function v628(a$$48, b$$31) {
      return e$$61.each(this, a$$48, b$$31);
    }
    function v627(a$$47, b$$30, c$$21) {
      var d$$24 = this.constructor();
      var v22142;
      var v26044 = e$$61.isArray(a$$47);
      if (v26044) {
        v22142 = E$$1.apply(d$$24, a$$47);
      } else {
        v22142 = e$$61.merge(d$$24, a$$47);
      }
      v22142;
      d$$24.prevObject = this;
      d$$24.context = this.context;
      var v13072;
      var v18499 = b$$30 === "find";
      if (v18499) {
        var v22143 = this.selector;
        var v26045;
        var v27617 = this.selector;
        if (v27617) {
          v26045 = " ";
        } else {
          v26045 = "";
        }
        var v22144 = v26045;
        var v18497 = v22143 + v22144;
        v13072 = d$$24.selector = v18497 + c$$21;
      } else {
        var v18498 = b$$30;
        if (v18498) {
          var v29279 = this.selector;
          var v28636 = v29279 + ".";
          var v27618 = v28636 + b$$30;
          var v26046 = v27618 + "(";
          var v22145 = v26046 + c$$21;
          v18498 = d$$24.selector = v22145 + ")";
        }
        v13072 = v18498;
      }
      v13072;
      return d$$24;
    }
    function v626(a$$46) {
      var v6088;
      var v13074 = a$$46 == null;
      if (v13074) {
        v6088 = this.toArray();
      } else {
        var v13073;
        var v18501 = a$$46 < 0;
        if (v18501) {
          var v22146 = this.length;
          var v18500 = v22146 + a$$46;
          v13073 = this[v18500];
        } else {
          v13073 = this[a$$46];
        }
        v6088 = v13073;
      }
      return v6088;
    }
    function v625() {
      return F$$1.call(this, 0);
    }
    function v624() {
      return this.length;
    }
    function v623(a$$45, d$$23, f$$8) {
      var g$$11;
      var h$$17;
      var j$$20;
      var k$$7;
      var v6089 = !a$$45;
      if (v6089) {
        return this;
      }
      var v6090 = a$$45.nodeType;
      if (v6090) {
        this.context = this[0] = a$$45;
        this.length = 1;
        return this;
      }
      var v18502 = a$$45 === "body";
      if (v18502) {
        v18502 = !d$$23;
      }
      var v13075 = v18502;
      if (v13075) {
        v13075 = c$$5.body;
      }
      var v6091 = v13075;
      if (v6091) {
        this.context = c$$5;
        this[0] = c$$5.body;
        this.selector = a$$45;
        this.length = 1;
        return this;
      }
      var v13076 = typeof a$$45;
      var v6099 = v13076 == "string";
      if (v6099) {
        var v6092;
        var v26047 = a$$45.charAt(0);
        var v22147 = v26047 !== "<";
        var v26049 = !v22147;
        if (v26049) {
          var v28637 = a$$45.length;
          var v27619 = v28637 - 1;
          var v26048 = a$$45.charAt(v27619);
          v22147 = v26048 !== ">";
        }
        var v18503 = v22147;
        var v22149 = !v18503;
        if (v22149) {
          var v22148 = a$$45.length;
          v18503 = v22148 < 3;
        }
        var v13077 = v18503;
        if (v13077) {
          v6092 = g$$11 = i$$91.exec(a$$45);
        } else {
          v6092 = g$$11 = [null, a$$45, null];
        }
        v6092;
        var v13078 = g$$11;
        if (v13078) {
          var v18504 = g$$11[1];
          var v22150 = !v18504;
          if (v22150) {
            v18504 = !d$$23;
          }
          v13078 = v18504;
        }
        var v6097 = v13078;
        if (v6097) {
          var v6093 = g$$11[1];
          if (v6093) {
            var v22151;
            var v26050 = d$$23 instanceof e$$61;
            if (v26050) {
              v22151 = d$$23[0];
            } else {
              v22151 = d$$23;
            }
            d$$23 = v22151;
            var v22152;
            if (d$$23) {
              var v26051 = d$$23.ownerDocument;
              var v27620 = !v26051;
              if (v27620) {
                v26051 = d$$23;
              }
              v22152 = v26051;
            } else {
              v22152 = c$$5;
            }
            k$$7 = v22152;
            j$$20 = m$$6.exec(a$$45);
            var v13079;
            if (j$$20) {
              var v18505;
              var v22154 = e$$61.isPlainObject(d$$23);
              if (v22154) {
                var v27621 = j$$20[1];
                var v26052 = c$$5.createElement(v27621);
                a$$45 = [v26052];
                var v27622 = e$$61.fn;
                var v26053 = v27622.attr;
                var v26054 = !0;
                v18505 = v26053.call(a$$45, d$$23, v26054);
              } else {
                var v26055 = j$$20[1];
                var v22153 = k$$7.createElement(v26055);
                v18505 = a$$45 = [v22153];
              }
              v13079 = v18505;
            } else {
              var v26056 = g$$11[1];
              var v22155 = [v26056];
              var v22156 = [k$$7];
              j$$20 = e$$61.buildFragment(v22155, v22156);
              var v26057;
              var v27624 = j$$20.cacheable;
              if (v27624) {
                var v27623 = j$$20.fragment;
                v26057 = e$$61.clone(v27623);
              } else {
                v26057 = j$$20.fragment;
              }
              var v22157 = v26057;
              v13079 = a$$45 = v22157.childNodes;
            }
            v13079;
            return e$$61.merge(this, a$$45);
          }
          var v6094 = g$$11[2];
          h$$17 = c$$5.getElementById(v6094);
          var v13080 = h$$17;
          if (v13080) {
            v13080 = h$$17.parentNode;
          }
          var v6096 = v13080;
          if (v6096) {
            var v13081 = h$$17.id;
            var v13082 = g$$11[2];
            var v6095 = v13081 !== v13082;
            if (v6095) {
              return f$$8.find(a$$45);
            }
            this.length = 1;
            this[0] = h$$17;
          }
          this.context = c$$5;
          this.selector = a$$45;
          return this;
        }
        var v6098;
        var v18506 = !d$$23;
        var v22158 = !v18506;
        if (v22158) {
          v18506 = d$$23.jquery;
        }
        var v13085 = v18506;
        if (v13085) {
          var v13083 = d$$23 || f$$8;
          v6098 = v13083.find(a$$45);
        } else {
          var v13084 = this.constructor(d$$23);
          v6098 = v13084.find(a$$45);
        }
        return v6098;
      }
      var v6100 = e$$61.isFunction(a$$45);
      if (v6100) {
        return f$$8.ready(a$$45);
      }
      var v13086 = a$$45.selector;
      var v6101 = v13086 !== b$$9;
      if (v6101) {
        this.selector = a$$45.selector;
        this.context = a$$45.context;
      }
      return e$$61.makeArray(a$$45, this);
    }
    function x$$68(a$$44, b$$29) {
      var v6102 = b$$29 + "";
      return v6102.toUpperCase();
    }
    function e$$61(a$$43, b$$28) {
      var v13087 = e$$61.fn;
      var v6103 = v13087.init;
      return new v6103(a$$43, b$$28, h$$16);
    }
    function J$$1() {
      var v13088 = e$$61.isReady;
      var v6105 = !v13088;
      if (v6105) {
        try {
          var v6104 = c$$5.documentElement;
          v6104.doScroll("left");
        } catch (a$$42) {
          setTimeout(J$$1, 1);
          return;
        }
        e$$61.ready();
      }
      return;
    }
    var f$$7 = a$$13.jQuery;
    var g$$10 = a$$13.$;
    var h$$16;
    var i$$91 = /^(?:[^#<]*(<[\w\W]+>)[^>]*$|#([\w\-]*)$)/;
    var j$$19 = /\S/;
    var k$$6 = /^\s+/;
    var l$$24 = /\s+$/;
    var m$$6 = /^<(\w+)\s*\/?>(?:<\/\1>)?$/;
    var n$$59 = /^[\],:{}\s]*$/;
    var o$$2 = /\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g;
    var p$$24 = /"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g;
    var q$$1 = /(?:^|:|,)(?:\s*\[)+/g;
    var r$$3 = /(webkit)[ \/]([\w.]+)/;
    var s$$16 = /(opera)(?:.*version)?[ \/]([\w.]+)/;
    var t$$3 = /(msie) ([\w.]+)/;
    var u$$2 = /(mozilla)(?:.*? rv:([\w.]+))?/;
    var v$$5 = /-([a-z]|[0-9])/ig;
    var w$$12 = /^-ms-/;
    var y$$50 = d$$6.userAgent;
    var z$$3;
    var A$$1;
    var B$$1;
    var v6106 = Object.prototype;
    var C$$1 = v6106.toString;
    var v6107 = Object.prototype;
    var D$$1 = v6107.hasOwnProperty;
    var v6108 = Array.prototype;
    var E$$1 = v6108.push;
    var v6109 = Array.prototype;
    var F$$1 = v6109.slice;
    var v6110 = String.prototype;
    var G$$1 = v6110.trim;
    var v6111 = Array.prototype;
    var H$$1 = v6111.indexOf;
    var I$$1 = {};
    var v30205 = [].sort;
    var v30206 = [].splice;
    e$$61.fn = e$$61.prototype = {constructor:e$$61, init:v623, selector:"", jquery:"1.7.2", length:0, size:v624, toArray:v625, get:v626, pushStack:v627, each:v628, ready:v629, eq:v630, first:v631, last:v632, slice:v633, map:v635, end:v636, push:E$$1, sort:v30205, splice:v30206};
    var v30377 = e$$61.fn;
    var v30207 = v30377.init;
    v30207.prototype = e$$61.fn;
    var v29974 = e$$61.fn;
    e$$61.extend = v29974.extend = v637;
    var v29975 = !1;
    var v30208 = Array.isArray;
    var v30378 = !v30208;
    if (v30378) {
      v30208 = v643;
    }
    var v29976 = v30208;
    var v30209;
    if (G$$1) {
      v30209 = v658;
    } else {
      v30209 = v659;
    }
    var v29977 = v30209;
    var v29707 = {noConflict:v638, isReady:v29975, readyWait:1, holdReady:v639, ready:v640, bindReady:v641, isFunction:v642, isArray:v29976, isWindow:v644, isNumeric:v645, type:v646, isPlainObject:v647, isEmptyObject:v648, error:v649, parseJSON:v650, parseXML:v651, noop:v652, globalEval:v654, camelCase:v655, nodeName:v656, each:v657, trim:v29977, makeArray:v660, inArray:v661, merge:v662, grep:v663, map:v664, guid:1, proxy:v665, access:v667, now:v668, uaMatch:v669, sub:v671, browser:{}};
    e$$61.extend(v29707);
    var v29280 = "Boolean Number String Function Array Date RegExp Object".split(" ");
    e$$61.each(v29280, v672);
    z$$3 = e$$61.uaMatch(y$$50);
    var v27625 = z$$3.browser;
    if (v27625) {
      var v29281 = e$$61.browser;
      var v29282 = z$$3.browser;
      v29281[v29282] = !0;
      var v29283 = e$$61.browser;
      v29283.version = z$$3.version;
    }
    var v27626 = e$$61.browser;
    var v26058 = v27626.webkit;
    if (v26058) {
      var v27627 = e$$61.browser;
      v27627.safari = !0;
    }
    var v22159 = j$$19.test("\u00a0");
    if (v22159) {
      k$$6 = /^[\s\xA0]+/;
      l$$24 = /[\s\xA0]+$/;
    }
    h$$16 = e$$61(c$$5);
    var v13089;
    var v18508 = c$$5.addEventListener;
    if (v18508) {
      v13089 = B$$1 = v673;
    } else {
      var v18507 = c$$5.attachEvent;
      if (v18507) {
        v18507 = B$$1 = v674;
      }
      v13089 = v18507;
    }
    v13089;
    return e$$61;
  }
  function I(a$$142) {
    var v6112;
    var v22160 = f$$4.event;
    var v18509 = v22160.special;
    var v13090 = v18509.hover;
    if (v13090) {
      v6112 = a$$142;
    } else {
      v6112 = a$$142.replace(B, "mouseenter$1 mouseleave$1");
    }
    return v6112;
  }
  function G(a$$140) {
    var b$$93 = F.exec(a$$140);
    if (b$$93) {
      var v22161 = b$$93[1];
      var v26059 = !v22161;
      if (v26059) {
        v22161 = "";
      }
      var v18510 = v22161;
      var v31145 = v18510.toLowerCase();
      b$$93[1] = v31145;
      var v18511 = b$$93[3];
      if (v18511) {
        var v27628 = b$$93[3];
        var v26060 = "(?:^|\\s)" + v27628;
        var v22162 = v26060 + "(?:\\s|$)";
        v18511 = new RegExp(v22162);
      }
      b$$93[3] = v18511;
    }
    return b$$93;
  }
  function cy(a$$14) {
    var v6113;
    var v13092 = f$$4.isWindow(a$$14);
    if (v13092) {
      v6113 = a$$14;
    } else {
      var v13091;
      var v22163 = a$$14.nodeType;
      var v18513 = v22163 === 9;
      if (v18513) {
        var v18512 = a$$14.defaultView;
        var v22164 = !v18512;
        if (v22164) {
          v18512 = a$$14.parentWindow;
        }
        v13091 = v18512;
      } else {
        v13091 = !1;
      }
      v6113 = v13091;
    }
    return v6113;
  }
  function cu(a$$15) {
    var v13093 = cj[a$$15];
    var v6117 = !v13093;
    if (v6117) {
      var b$$10 = c$$5.body;
      var v18514 = "<" + a$$15;
      var v13094 = v18514 + ">";
      var v6114 = f$$4(v13094);
      var d$$7 = v6114.appendTo(b$$10);
      var e$$48 = d$$7.css("display");
      d$$7.remove();
      var v13095 = e$$48 === "none";
      var v18515 = !v13095;
      if (v18515) {
        v13095 = e$$48 === "";
      }
      var v6116 = v13095;
      if (v6116) {
        var v18516 = !ck;
        if (v18516) {
          ck = c$$5.createElement("iframe");
          ck.frameBorder = ck.width = ck.height = 0;
        }
        b$$10.appendChild(ck);
        var v13096 = !cl;
        var v18518 = !v13096;
        if (v18518) {
          var v18517 = ck.createElement;
          v13096 = !v18517;
        }
        var v6115 = v13096;
        if (v6115) {
          var v22165 = ck.contentWindow;
          var v26061 = !v22165;
          if (v26061) {
            v22165 = ck.contentDocument;
          }
          var v18519 = v22165;
          cl = v18519.document;
          var v26062;
          var v28638 = f$$4.support;
          var v27629 = v28638.boxModel;
          if (v27629) {
            v26062 = "<!doctype html>";
          } else {
            v26062 = "";
          }
          var v22166 = v26062;
          var v18520 = v22166 + "<html><body>";
          cl.write(v18520);
          cl.close();
        }
        d$$7 = cl.createElement(a$$15);
        var v22167 = cl.body;
        v22167.appendChild(d$$7);
        e$$48 = f$$4.css(d$$7, "display");
        b$$10.removeChild(ck);
      }
      cj[a$$15] = e$$48;
    }
    return cj[a$$15];
  }
  function ct(a$$16, b$$11) {
    function v615() {
      c$$6[this] = a$$16;
      return;
    }
    var c$$6 = {};
    var v13097 = cp.concat;
    var v13098 = cp.slice(0, b$$11);
    var v6118 = v13097.apply([], v13098);
    f$$4.each(v6118, v615);
    return c$$6;
  }
  function cs() {
    cq = b$$9;
    return;
  }
  function cr() {
    setTimeout(cs, 0);
    return cq = f$$4.now();
  }
  function ch$$14() {
    try {
      var v6119 = a$$13.XMLHttpRequest;
      return new v6119;
    } catch (b$$13) {
    }
    return;
  }
  function b_(a$$19, b$$14, c$$9, d$$10) {
    function v616(b$$15, e$$52) {
      var v6120;
      var v18521 = c$$9;
      var v22168 = !v18521;
      if (v22168) {
        v18521 = bD.test(a$$19);
      }
      var v13100 = v18521;
      if (v13100) {
        v6120 = d$$10(a$$19, e$$52);
      } else {
        var v22169 = a$$19 + "[";
        var v26063;
        var v28639 = typeof e$$52;
        var v27630 = v28639 == "object";
        if (v27630) {
          v26063 = b$$15;
        } else {
          v26063 = "";
        }
        var v22170 = v26063;
        var v18522 = v22169 + v22170;
        var v13099 = v18522 + "]";
        v6120 = b_(v13099, e$$52, c$$9, d$$10);
      }
      v6120;
      return;
    }
    var v6124 = f$$4.isArray(b$$14);
    if (v6124) {
      f$$4.each(b$$14, v616);
    } else {
      var v13101 = !c$$9;
      if (v13101) {
        var v18523 = f$$4.type(b$$14);
        v13101 = v18523 === "object";
      }
      var v6123 = v13101;
      if (v6123) {
        var e$$51;
        for (e$$51 in b$$14) {
          var v18524 = a$$19 + "[";
          var v13102 = v18524 + e$$51;
          var v6121 = v13102 + "]";
          var v6122 = b$$14[e$$51];
          b_(v6121, v6122, c$$9, d$$10);
        }
      } else {
        d$$10(a$$19, b$$14);
      }
    }
    return;
  }
  function b$(a$$20, c$$10) {
    var d$$11;
    var e$$53;
    var v13103 = f$$4.ajaxSettings;
    var v6125 = v13103.flatOptions;
    var v13104 = !v6125;
    if (v13104) {
      v6125 = {};
    }
    var g$$3 = v6125;
    for (d$$11 in c$$10) {
      var v13105 = c$$10[d$$11];
      var v6126 = v13105 !== b$$9;
      if (v6126) {
        var v18525;
        var v22172 = g$$3[d$$11];
        if (v22172) {
          v18525 = a$$20;
        } else {
          var v22171 = e$$53;
          var v26064 = !v22171;
          if (v26064) {
            v22171 = e$$53 = {};
          }
          v18525 = v22171;
        }
        var v13106 = v18525;
        v13106[d$$11] = c$$10[d$$11];
      }
    }
    if (e$$53) {
      var v13107 = !0;
      f$$4.extend(v13107, a$$20, e$$53);
    }
    return;
  }
  function bZ(a$$21, c$$11, d$$12, e$$54, f$$6, g$$4) {
    var v18526 = f$$6;
    var v22174 = !v18526;
    if (v22174) {
      var v22173 = c$$11.dataTypes;
      v18526 = v22173[0];
    }
    f$$6 = v18526;
    g$$4 = g$$4 || {};
    g$$4[f$$6] = !0;
    var h$$12 = a$$21[f$$6];
    var i$$88 = 0;
    var v6127;
    if (h$$12) {
      v6127 = h$$12.length;
    } else {
      v6127 = 0;
    }
    var j$$17 = v6127;
    var k$$5 = a$$21 === bS;
    var l$$23;
    var v13108 = i$$88 < j$$17;
    if (v13108) {
      var v18527 = k$$5;
      var v22175 = !v18527;
      if (v22175) {
        v18527 = !l$$23;
      }
      v13108 = v18527;
    }
    var v6128 = v13108;
    for (;v6128;) {
      l$$23 = h$$12[i$$88](c$$11, d$$12, e$$54);
      var v18528 = typeof l$$23;
      var v13109 = v18528 == "string";
      if (v13109) {
        var v18529;
        var v26065 = !k$$5;
        var v27631 = !v26065;
        if (v27631) {
          v26065 = g$$4[l$$23];
        }
        var v22176 = v26065;
        if (v22176) {
          v18529 = l$$23 = b$$9;
        } else {
          var v26066 = c$$11.dataTypes;
          v26066.unshift(l$$23);
          v18529 = l$$23 = bZ(a$$21, c$$11, d$$12, e$$54, l$$23, g$$4);
        }
        v18529;
      }
      i$$88++;
      var v13110 = i$$88 < j$$17;
      if (v13110) {
        var v18530 = k$$5;
        var v22177 = !v18530;
        if (v22177) {
          v18530 = !l$$23;
        }
        v13110 = v18530;
      }
      v6128 = v13110;
    }
    var v18531 = k$$5;
    var v22178 = !v18531;
    if (v22178) {
      v18531 = !l$$23;
    }
    var v13111 = v18531;
    if (v13111) {
      var v18532 = g$$4["*"];
      v13111 = !v18532;
    }
    var v6129 = v13111;
    if (v6129) {
      l$$23 = bZ(a$$21, c$$11, d$$12, e$$54, "*", g$$4);
    }
    return l$$23;
  }
  function bY(a$$22) {
    function v617(b$$16, c$$12) {
      var v13112 = typeof b$$16;
      var v6130 = v13112 != "string";
      if (v6130) {
        c$$12 = b$$16;
        b$$16 = "*";
      }
      var v6133 = f$$4.isFunction(c$$12);
      if (v6133) {
        var v6131 = b$$16.toLowerCase();
        var d$$13 = v6131.split(bO);
        var e$$55 = 0;
        var g$$5 = d$$13.length;
        var h$$13;
        var i$$89;
        var j$$18;
        var v6132 = e$$55 < g$$5;
        for (;v6132;) {
          h$$13 = d$$13[e$$55];
          j$$18 = /^\+/.test(h$$13);
          if (j$$18) {
            var v26067 = h$$13.substr(1);
            var v27632 = !v26067;
            if (v27632) {
              v26067 = "*";
            }
            h$$13 = v26067;
          }
          var v18533 = a$$22[h$$13];
          var v22179 = !v18533;
          if (v22179) {
            v18533 = [];
          }
          i$$89 = a$$22[h$$13] = v18533;
          var v18534;
          if (j$$18) {
            v18534 = "unshift";
          } else {
            v18534 = "push";
          }
          var v13113 = v18534;
          i$$89[v13113](c$$12);
          e$$55++;
          v6132 = e$$55 < g$$5;
        }
      }
      return;
    }
    return v617;
  }
  function bB(a$$23, b$$17, c$$13) {
    var v6134;
    var v13114 = b$$17 === "width";
    if (v13114) {
      v6134 = a$$23.offsetWidth;
    } else {
      v6134 = a$$23.offsetHeight;
    }
    var d$$14 = v6134;
    var v6135;
    var v13115 = b$$17 === "width";
    if (v13115) {
      v6135 = 1;
    } else {
      v6135 = 0;
    }
    var e$$56 = v6135;
    var g$$6 = 4;
    var v6138 = d$$14 > 0;
    if (v6138) {
      var v6137 = c$$13 !== "border";
      if (v6137) {
        var v6136 = e$$56 < g$$6;
        for (;v6136;) {
          var v18535 = !c$$13;
          if (v18535) {
            var v29284 = bx[e$$56];
            var v28640 = "padding" + v29284;
            var v27633 = f$$4.css(a$$23, v28640);
            var v26068 = parseFloat(v27633);
            var v27634 = !v26068;
            if (v27634) {
              v26068 = 0;
            }
            var v22180 = v26068;
            d$$14 = d$$14 - v22180;
          }
          var v13116;
          var v18536 = c$$13 === "margin";
          if (v18536) {
            var v29285 = bx[e$$56];
            var v28641 = c$$13 + v29285;
            var v27635 = f$$4.css(a$$23, v28641);
            var v26069 = parseFloat(v27635);
            var v27636 = !v26069;
            if (v27636) {
              v26069 = 0;
            }
            var v22181 = v26069;
            v13116 = d$$14 = d$$14 + v22181;
          } else {
            var v29708 = bx[e$$56];
            var v29286 = "border" + v29708;
            var v28642 = v29286 + "Width";
            var v27637 = f$$4.css(a$$23, v28642);
            var v26070 = parseFloat(v27637);
            var v27638 = !v26070;
            if (v27638) {
              v26070 = 0;
            }
            var v22182 = v26070;
            v13116 = d$$14 = d$$14 - v22182;
          }
          v13116;
          e$$56 = e$$56 + 2;
          v6136 = e$$56 < g$$6;
        }
      }
      return d$$14 + "px";
    }
    d$$14 = by(a$$23, b$$17);
    var v13117 = d$$14 < 0;
    var v18537 = !v13117;
    if (v18537) {
      v13117 = d$$14 == null;
    }
    var v6140 = v13117;
    if (v6140) {
      var v6139 = a$$23.style;
      d$$14 = v6139[b$$17];
    }
    var v6141 = bt.test(d$$14);
    if (v6141) {
      return d$$14;
    }
    var v6142 = parseFloat(d$$14);
    var v13118 = !v6142;
    if (v13118) {
      v6142 = 0;
    }
    d$$14 = v6142;
    if (c$$13) {
      var v6143 = e$$56 < g$$6;
      for (;v6143;) {
        var v29287 = bx[e$$56];
        var v28643 = "padding" + v29287;
        var v27639 = f$$4.css(a$$23, v28643);
        var v26071 = parseFloat(v27639);
        var v27640 = !v26071;
        if (v27640) {
          v26071 = 0;
        }
        var v22183 = v26071;
        d$$14 = d$$14 + v22183;
        var v18538 = c$$13 !== "padding";
        if (v18538) {
          var v29978 = bx[e$$56];
          var v29709 = "border" + v29978;
          var v29288 = v29709 + "Width";
          var v28644 = f$$4.css(a$$23, v29288);
          var v27641 = parseFloat(v28644);
          var v28645 = !v27641;
          if (v28645) {
            v27641 = 0;
          }
          var v26072 = v27641;
          d$$14 = d$$14 + v26072;
        }
        var v13119 = c$$13 === "margin";
        if (v13119) {
          var v29289 = bx[e$$56];
          var v28646 = c$$13 + v29289;
          var v27642 = f$$4.css(a$$23, v28646);
          var v26073 = parseFloat(v27642);
          var v27643 = !v26073;
          if (v27643) {
            v26073 = 0;
          }
          var v22184 = v26073;
          d$$14 = d$$14 + v22184;
        }
        e$$56 = e$$56 + 2;
        v6143 = e$$56 < g$$6;
      }
    }
    return d$$14 + "px";
  }
  function bn(a$$25) {
    var v13120 = a$$25.nodeName;
    var v18539 = !v13120;
    if (v18539) {
      v13120 = "";
    }
    var v6144 = v13120;
    var b$$19 = v6144.toLowerCase();
    var v6145;
    var v13122 = b$$19 === "input";
    if (v13122) {
      v6145 = bm(a$$25);
    } else {
      var v18540 = b$$19 !== "script";
      if (v18540) {
        var v26074 = a$$25.getElementsByTagName;
        var v22185 = typeof v26074;
        v18540 = v22185 != "undefined";
      }
      var v13121 = v18540;
      if (v13121) {
        var v18541 = a$$25.getElementsByTagName("input");
        v13121 = f$$4.grep(v18541, bm);
      }
      v6145 = v13121;
    }
    v6145;
    return;
  }
  function bm(a$$26) {
    var v18542 = a$$26.type;
    var v13123 = v18542 === "checkbox";
    var v18544 = !v13123;
    if (v18544) {
      var v18543 = a$$26.type;
      v13123 = v18543 === "radio";
    }
    var v6146 = v13123;
    if (v6146) {
      a$$26.defaultChecked = a$$26.checked;
    }
    return;
  }
  function bl(a$$27) {
    var v6147;
    var v22186 = a$$27.getElementsByTagName;
    var v18545 = typeof v22186;
    var v13125 = v18545 != "undefined";
    if (v13125) {
      v6147 = a$$27.getElementsByTagName("*");
    } else {
      var v13124;
      var v26075 = a$$27.querySelectorAll;
      var v22187 = typeof v26075;
      var v18546 = v22187 != "undefined";
      if (v18546) {
        v13124 = a$$27.querySelectorAll("*");
      } else {
        v13124 = [];
      }
      v6147 = v13124;
    }
    return v6147;
  }
  function bk(a$$28, b$$20) {
    var c$$14;
    var v13126 = b$$20.nodeType;
    var v6148 = v13126 === 1;
    if (v6148) {
      var v29290 = b$$20.clearAttributes;
      if (v29290) {
        b$$20.clearAttributes();
      }
      var v29291 = b$$20.mergeAttributes;
      if (v29291) {
        b$$20.mergeAttributes(a$$28);
      }
      var v28647 = b$$20.nodeName;
      c$$14 = v28647.toLowerCase();
      var v27644;
      var v28649 = c$$14 === "object";
      if (v28649) {
        v27644 = b$$20.outerHTML = a$$28.outerHTML;
      } else {
        var v28648;
        var v29710 = c$$14 !== "input";
        var v29980 = !v29710;
        if (v29980) {
          var v30210 = a$$28.type;
          var v29979 = v30210 !== "checkbox";
          if (v29979) {
            var v30211 = a$$28.type;
            v29979 = v30211 !== "radio";
          }
          v29710 = v29979;
        }
        var v29293 = v29710;
        if (v29293) {
          var v29292;
          var v29712 = c$$14 === "option";
          if (v29712) {
            v29292 = b$$20.selected = a$$28.defaultSelected;
          } else {
            var v29711;
            var v30212 = c$$14 === "input";
            var v30379 = !v30212;
            if (v30379) {
              v30212 = c$$14 === "textarea";
            }
            var v29982 = v30212;
            if (v29982) {
              v29711 = b$$20.defaultValue = a$$28.defaultValue;
            } else {
              var v30213 = c$$14 === "script";
              if (v30213) {
                var v30380 = b$$20.text;
                var v30381 = a$$28.text;
                v30213 = v30380 !== v30381;
              }
              var v29981 = v30213;
              if (v29981) {
                v29981 = b$$20.text = a$$28.text;
              }
              v29711 = v29981;
            }
            v29292 = v29711;
          }
          v28648 = v29292;
        } else {
          var v29713 = a$$28.checked;
          if (v29713) {
            b$$20.defaultChecked = b$$20.checked = a$$28.checked;
          }
          var v29983 = b$$20.value;
          var v29984 = a$$28.value;
          var v29714 = v29983 !== v29984;
          if (v29714) {
            v29714 = b$$20.value = a$$28.value;
          }
          v28648 = v29714;
        }
        v27644 = v28648;
      }
      v27644;
      var v26076 = f$$4.expando;
      b$$20.removeAttribute(v26076);
      b$$20.removeAttribute("_submit_attached");
      b$$20.removeAttribute("_change_attached");
    }
    return;
  }
  function bj(a$$29, b$$21) {
    var v18547 = b$$21.nodeType;
    var v13127 = v18547 === 1;
    if (v13127) {
      var v22188 = f$$4.hasData(a$$29);
      var v18548 = !v22188;
      v13127 = !v18548;
    }
    var v6153 = v13127;
    if (v6153) {
      var c$$15;
      var d$$15;
      var e$$57;
      var g$$7 = f$$4._data(a$$29);
      var h$$14 = f$$4._data(b$$21, g$$7);
      var i$$90 = g$$7.events;
      if (i$$90) {
        delete h$$14.handle;
        h$$14.events = {};
        for (c$$15 in i$$90) {
          d$$15 = 0;
          var v13128 = i$$90[c$$15];
          e$$57 = v13128.length;
          var v6151 = d$$15 < e$$57;
          for (;v6151;) {
            var v6149 = f$$4.event;
            var v13129 = i$$90[c$$15];
            var v6150 = v13129[d$$15];
            v6149.add(b$$21, c$$15, v6150);
            d$$15++;
            v6151 = d$$15 < e$$57;
          }
        }
      }
      var v6152 = h$$14.data;
      if (v6152) {
        var v13130 = h$$14.data;
        var v31146 = f$$4.extend({}, v13130);
        h$$14.data = v31146;
      }
    }
    return;
  }
  function bi(a$$30, b$$22) {
    var v6154;
    var v13132 = f$$4.nodeName(a$$30, "table");
    if (v13132) {
      var v18549 = a$$30.getElementsByTagName("tbody");
      var v13131 = v18549[0];
      var v18551 = !v13131;
      if (v18551) {
        var v22189 = a$$30.ownerDocument;
        var v18550 = v22189.createElement("tbody");
        v13131 = a$$30.appendChild(v18550);
      }
      v6154 = v13131;
    } else {
      v6154 = a$$30;
    }
    return v6154;
  }
  function U(a$$31) {
    var b$$23 = V.split("|");
    var c$$16 = a$$31.createDocumentFragment();
    var v6157 = c$$16.createElement;
    if (v6157) {
      var v6156 = b$$23.length;
      for (;v6156;) {
        var v6155 = b$$23.pop();
        c$$16.createElement(v6155);
        v6156 = b$$23.length;
      }
    }
    return c$$16;
  }
  function T$$2(a$$32, b$$24, c$$17) {
    function v621(a$$36, d$$19) {
      var v13133 = f$$4.inArray(a$$36, b$$24);
      var v6158 = v13133 >= 0;
      return v6158 === c$$17;
    }
    function v620(a$$35) {
      var v6159 = a$$35.nodeType;
      return v6159 === 1;
    }
    function v619(a$$34, d$$18) {
      var v6160 = a$$34 === b$$24;
      return v6160 === c$$17;
    }
    function v618(a$$33, d$$17) {
      var v13134 = b$$24.call(a$$33, d$$17, a$$33);
      var v6161 = !v13134;
      var e$$58 = !v6161;
      return e$$58 === c$$17;
    }
    b$$24 = b$$24 || 0;
    var v6162 = f$$4.isFunction(b$$24);
    if (v6162) {
      return f$$4.grep(a$$32, v618);
    }
    var v6163 = b$$24.nodeType;
    if (v6163) {
      return f$$4.grep(a$$32, v619);
    }
    var v13135 = typeof b$$24;
    var v6166 = v13135 == "string";
    if (v6166) {
      var d$$16 = f$$4.grep(a$$32, v620);
      var v6165 = O.test(b$$24);
      if (v6165) {
        var v6164 = !c$$17;
        return f$$4.filter(b$$24, d$$16, v6164);
      }
      b$$24 = f$$4.filter(b$$24, d$$16);
    }
    return f$$4.grep(a$$32, v621);
  }
  function S(a$$37) {
    var v13136 = !a$$37;
    var v18553 = !v13136;
    if (v18553) {
      var v18552 = a$$37.parentNode;
      v13136 = !v18552;
    }
    var v6167 = v13136;
    var v13138 = !v6167;
    if (v13138) {
      var v18554 = a$$37.parentNode;
      var v13137 = v18554.nodeType;
      v6167 = v13137 === 11;
    }
    return v6167;
  }
  function K() {
    return!0;
  }
  function J() {
    return!1;
  }
  function n$$57(a$$38, b$$25, c$$18) {
    function v622() {
      var v18555 = f$$4._data(a$$38, e$$59);
      var v13139 = !v18555;
      if (v13139) {
        var v18556 = f$$4._data(a$$38, g$$8);
        v13139 = !v18556;
      }
      var v6168 = v13139;
      if (v6168) {
        var v18557 = !0;
        f$$4.removeData(a$$38, d$$20, v18557);
        h$$15.fire();
      }
      return;
    }
    var d$$20 = b$$25 + "defer";
    var e$$59 = b$$25 + "queue";
    var g$$8 = b$$25 + "mark";
    var h$$15 = f$$4._data(a$$38, d$$20);
    var v18558 = h$$15;
    if (v18558) {
      var v22190 = c$$18 === "queue";
      var v26078 = !v22190;
      if (v26078) {
        var v26077 = f$$4._data(a$$38, e$$59);
        v22190 = !v26077;
      }
      v18558 = v22190;
    }
    var v13140 = v18558;
    if (v13140) {
      var v18559 = c$$18 === "mark";
      var v22192 = !v18559;
      if (v22192) {
        var v22191 = f$$4._data(a$$38, g$$8);
        v18559 = !v22191;
      }
      v13140 = v18559;
    }
    var v6169 = v13140;
    if (v6169) {
      setTimeout(v622, 0);
    }
    return;
  }
  function m$$4(a$$39) {
    var b$$26;
    for (b$$26 in a$$39) {
      var v13141 = b$$26 === "data";
      if (v13141) {
        var v18560 = a$$39[b$$26];
        v13141 = f$$4.isEmptyObject(v18560);
      }
      var v6170 = v13141;
      if (v6170) {
        continue;
      }
      var v6171 = b$$26 !== "toJSON";
      if (v6171) {
        return!1;
      }
    }
    return!0;
  }
  function l$$21(a$$40, c$$19, d$$21) {
    var v13142 = d$$21 === b$$9;
    if (v13142) {
      var v18561 = a$$40.nodeType;
      v13142 = v18561 === 1;
    }
    var v6175 = v13142;
    if (v6175) {
      var v13143 = c$$19.replace(k$$2, "-$1");
      var v6172 = v13143.toLowerCase();
      var e$$60 = "data-" + v6172;
      d$$21 = a$$40.getAttribute(e$$60);
      var v13144 = typeof d$$21;
      var v6174 = v13144 == "string";
      if (v6174) {
        try {
          var v6173;
          var v13146 = d$$21 === "true";
          if (v13146) {
            v6173 = !0;
          } else {
            var v13145;
            var v18563 = d$$21 === "false";
            if (v18563) {
              v13145 = !1;
            } else {
              var v18562;
              var v22194 = d$$21 === "null";
              if (v22194) {
                v18562 = null;
              } else {
                var v22193;
                var v26080 = f$$4.isNumeric(d$$21);
                if (v26080) {
                  v22193 = +d$$21;
                } else {
                  var v26079;
                  var v27645 = j$$14.test(d$$21);
                  if (v27645) {
                    v26079 = f$$4.parseJSON(d$$21);
                  } else {
                    v26079 = d$$21;
                  }
                  v22193 = v26079;
                }
                v18562 = v22193;
              }
              v13145 = v18562;
            }
            v6173 = v13145;
          }
          d$$21 = v6173;
        } catch (g$$9) {
        }
        f$$4.data(a$$40, c$$19, d$$21);
      } else {
        d$$21 = b$$9;
      }
    }
    return d$$21;
  }
  function h$$9(a$$41) {
    var b$$27 = g[a$$41] = {};
    var c$$20;
    var d$$22;
    a$$41 = a$$41.split(/\s+/);
    c$$20 = 0;
    d$$22 = a$$41.length;
    var v6177 = c$$20 < d$$22;
    for (;v6177;) {
      var v6176 = a$$41[c$$20];
      b$$27[v6176] = !0;
      c$$20++;
      v6177 = c$$20 < d$$22;
    }
    return b$$27;
  }
  var c$$5 = a$$13.document;
  var d$$6 = a$$13.navigator;
  var e$$47 = a$$13.location;
  var f$$4 = v675();
  var g = {};
  f$$4.Callbacks = v687;
  var i$$85 = [].slice;
  var v13147 = {Deferred:v698, when:v701};
  f$$4.extend(v13147);
  var v13148 = f$$4;
  var v31147 = v704();
  v13148.support = v31147;
  var j$$14 = /^(?:\{.*\}|\[.*\])$/;
  var k$$2 = /([A-Z])/g;
  var v29715 = f$$4.fn;
  var v29294 = v29715.jquery;
  var v29295 = Math.random();
  var v28650 = v29294 + v29295;
  var v27646 = v28650.replace(/\D/g, "");
  var v26081 = "jQuery" + v27646;
  var v27647 = !0;
  var v27648 = !0;
  var v26082 = {embed:v27647, object:"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000", applet:v27648};
  var v22195 = {cache:{}, uuid:0, expando:v26081, noData:v26082, hasData:v705, data:v706, removeData:v707, _data:v708, acceptData:v709};
  f$$4.extend(v22195);
  var v22196 = f$$4.fn;
  var v22197 = {data:v713, removeData:v715};
  v22196.extend(v22197);
  var v18564 = {_mark:v716, _unmark:v717, queue:v718, dequeue:v720};
  f$$4.extend(v18564);
  var v13149 = f$$4.fn;
  var v13150 = {queue:v722, dequeue:v724, delay:v727, clearQueue:v728, promise:v729};
  v13149.extend(v13150);
  var o = /[\n\t\r]/g;
  var p$$22 = /\s+/;
  var q = /\r/g;
  var r$$2 = /^(?:button|input)$/i;
  var s$$15 = /^(?:button|input|object|select|textarea)$/i;
  var t$$2 = /^a(?:rea)?$/i;
  var u$$1 = /^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$/i;
  var v6178 = f$$4.support;
  var v$$4 = v6178.getSetAttribute;
  var w$$11;
  var x$$67;
  var y$$49;
  var v30214 = f$$4.fn;
  var v30215 = {attr:v730, removeAttr:v732, prop:v733, removeProp:v735, addClass:v737, removeClass:v739, toggleClass:v742, hasClass:v743, val:v746};
  v30214.extend(v30215);
  var v30506 = {get:v747};
  var v30507 = {get:v748, set:v750};
  var v30382 = {option:v30506, select:v30507};
  var v30508 = !0;
  var v30509 = !0;
  var v30510 = !0;
  var v30511 = !0;
  var v30512 = !0;
  var v30513 = !0;
  var v30514 = !0;
  var v30515 = !0;
  var v30383 = {val:v30508, css:v30509, html:v30510, text:v30511, data:v30512, width:v30513, height:v30514, offset:v30515};
  var v30516 = {set:v753};
  var v30517 = {get:v754, set:v755};
  var v30384 = {type:v30516, value:v30517};
  var v30385 = {tabindex:"tabIndex", readonly:"readOnly", "for":"htmlFor", "class":"className", maxlength:"maxLength", cellspacing:"cellSpacing", cellpadding:"cellPadding", rowspan:"rowSpan", colspan:"colSpan", usemap:"useMap", frameborder:"frameBorder", contenteditable:"contentEditable"};
  var v30518 = {get:v757};
  var v30386 = {tabIndex:v30518};
  var v30216 = {valHooks:v30382, attrFn:v30383, attr:v751, removeAttr:v752, attrHooks:v30384, propFix:v30385, prop:v756, propHooks:v30386};
  f$$4.extend(v30216);
  var v29985 = f$$4.attrHooks;
  var v30217 = f$$4.propHooks;
  v29985.tabindex = v30217.tabIndex;
  x$$67 = {get:v758, set:v759};
  var v29716 = !v$$4;
  if (v29716) {
    var v30519 = !0;
    var v30520 = !0;
    var v30521 = !0;
    y$$49 = {name:v30519, id:v30520, coords:v30521};
    var v30522 = f$$4.valHooks;
    w$$11 = v30522.button = {get:v760, set:v761};
    var v30523 = f$$4.attrHooks;
    var v30387 = v30523.tabindex;
    v30387.set = w$$11.set;
    var v30218 = ["width", "height"];
    f$$4.each(v30218, v763);
    var v29986 = f$$4.attrHooks;
    var v30219 = w$$11.get;
    v29986.contenteditable = {get:v30219, set:v764};
  }
  var v29296 = f$$4.support;
  var v28651 = v29296.hrefNormalized;
  var v29298 = !v28651;
  if (v29298) {
    var v29297 = ["href", "src", "width", "height"];
    f$$4.each(v29297, v766);
  }
  var v28652 = f$$4.support;
  var v27649 = v28652.style;
  var v28654 = !v27649;
  if (v28654) {
    var v28653 = f$$4.attrHooks;
    v28653.style = {get:v767, set:v768};
  }
  var v27650 = f$$4.support;
  var v26083 = v27650.optSelected;
  var v27652 = !v26083;
  if (v27652) {
    var v27651 = f$$4.propHooks;
    var v29299 = f$$4.propHooks;
    var v28655 = v29299.selected;
    var v28656 = {get:v769};
    var v31148 = f$$4.extend(v28655, v28656);
    v27651.selected = v31148;
  }
  var v26084 = f$$4.support;
  var v22198 = v26084.enctype;
  var v26086 = !v22198;
  if (v26086) {
    var v26085 = f$$4.propFix;
    v26085.enctype = "encoding";
  }
  var v22199 = f$$4.support;
  var v18565 = v22199.checkOn;
  var v22201 = !v18565;
  if (v22201) {
    var v22200 = ["radio", "checkbox"];
    f$$4.each(v22200, v771);
  }
  var v13151 = ["radio", "checkbox"];
  f$$4.each(v13151, v773);
  var z$$2 = /^(?:textarea|input|select)$/i;
  var A = /^([^\.]*)?(?:\.(.+))?$/;
  var B = /(?:^|\s)hover(\.\S+)?\b/;
  var C = /^key/;
  var D = /^(?:mouse|contextmenu)|click/;
  var E = /^(?:focusinfocus|focusoutblur)$/;
  var F = /^(\w*)(?:#([\w\-]+))?(?:\.([\w\-]+))?$/;
  var v30388 = f$$4;
  var v30627 = !0;
  var v30628 = !0;
  var v30629 = !0;
  var v30524 = {getData:v30627, setData:v30628, changeData:v30629};
  var v30525 = "attrChange attrName relatedNode srcElement altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" ");
  var v30630 = "char charCode key keyCode".split(" ");
  var v30526 = {props:v30630, filter:v779};
  var v30631 = "button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement".split(" ");
  var v30527 = {props:v30631, filter:v780};
  var v30700 = f$$4.bindReady;
  var v30632 = {setup:v30700};
  var v30701 = !0;
  var v30633 = {noBubble:v30701};
  var v30634 = {delegateType:"focusin"};
  var v30635 = {delegateType:"focusout"};
  var v30636 = {setup:v782, teardown:v783};
  var v30528 = {ready:v30632, load:v30633, focus:v30634, blur:v30635, beforeunload:v30636};
  v30388.event = {add:v775, global:{}, remove:v776, customEvent:v30524, trigger:v777, dispatch:v778, props:v30525, fixHooks:{}, keyHooks:v30526, mouseHooks:v30527, fix:v781, special:v30528, simulate:v784};
  var v30389 = f$$4.event;
  var v30529 = f$$4.event;
  v30389.handle = v30529.dispatch;
  var v30220;
  var v30390 = c$$5.removeEventListener;
  if (v30390) {
    v30220 = v785;
  } else {
    v30220 = v786;
  }
  f$$4.removeEvent = v30220;
  f$$4.Event = v787;
  var v29717 = f$$4.Event;
  v29717.prototype = {preventDefault:v788, stopPropagation:v789, stopImmediatePropagation:v790, isDefaultPrevented:J, isPropagationStopped:J, isImmediatePropagationStopped:J};
  var v29300 = {mouseenter:"mouseover", mouseleave:"mouseout"};
  f$$4.each(v29300, v792);
  var v29301 = f$$4.support;
  var v28657 = v29301.submitBubbles;
  var v29303 = !v28657;
  if (v29303) {
    var v29718 = f$$4.event;
    var v29302 = v29718.special;
    v29302.submit = {setup:v795, postDispatch:v796, teardown:v797};
  }
  var v28658 = f$$4.support;
  var v27653 = v28658.changeBubbles;
  var v28660 = !v27653;
  if (v28660) {
    var v29304 = f$$4.event;
    var v28659 = v29304.special;
    v28659.change = {setup:v802, handle:v803, teardown:v804};
  }
  var v27654 = f$$4.support;
  var v26087 = v27654.focusinBubbles;
  var v27656 = !v26087;
  if (v27656) {
    var v27655 = {focus:"focusin", blur:"focusout"};
    f$$4.each(v27655, v807);
  }
  var v22202 = f$$4.fn;
  var v22203 = {on:v810, one:v811, off:v813, bind:v814, unbind:v815, live:v816, die:v817, delegate:v818, undelegate:v819, trigger:v821, triggerHandler:v822, toggle:v823, hover:v824};
  v22202.extend(v22203);
  var v18566 = "blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu".split(" ");
  f$$4.each(v18566, v826);
  v905();
  var L = /Until$/;
  var M = /^(?:parents|prevUntil|prevAll)/;
  var N = /,/;
  var O = /^.[^:#\[\.,]*$/;
  var v6179 = Array.prototype;
  var P = v6179.slice;
  var v13152 = f$$4.expr;
  var v6180 = v13152.match;
  var Q = v6180.globalPOS;
  var v6181 = !0;
  var v6182 = !0;
  var v6183 = !0;
  var v6184 = !0;
  var R = {children:v6181, contents:v6182, next:v6183, prev:v6184};
  var v18567 = f$$4.fn;
  var v18568 = {find:v907, has:v909, not:v910, filter:v911, is:v912, closest:v913, index:v914, add:v915, andSelf:v916};
  v18567.extend(v18568);
  var v18569 = {parent:v917, parents:v918, parentsUntil:v919, next:v920, prev:v921, nextAll:v922, prevAll:v923, nextUntil:v924, prevUntil:v925, siblings:v926, children:v927, contents:v928};
  f$$4.each(v18569, v930);
  var v13153 = {filter:v931, dir:v932, nth:v933, sibling:v934};
  f$$4.extend(v13153);
  var V = "abbr|article|aside|audio|bdi|canvas|data|datalist|details|figcaption|figure|footer|header|hgroup|mark|meter|nav|output|progress|section|summary|time|video";
  var W = / jQuery\d+="(?:\d+|null)"/g;
  var X = /^\s+/;
  var Y = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/ig;
  var Z = /<([\w:]+)/;
  var $$$2 = /<tbody/i;
  var _$$1 = /<|&#?\w+;/;
  var ba = /<(?:script|style)/i;
  var bb = /<(?:script|object|embed|option|style)/i;
  var v13154 = "<(?:" + V;
  var v6185 = v13154 + ")[\\s/>]";
  var bc = new RegExp(v6185, "i");
  var bd = /checked\s*(?:[^=]|=\s*.checked.)/i;
  var be = /\/(java|ecma)script/i;
  var bf = /^\s*<!(?:\[CDATA\[|\-\-)/;
  var v6186 = [1, "<select multiple='multiple'>", "</select>"];
  var v6187 = [1, "<fieldset>", "</fieldset>"];
  var v6188 = [1, "<table>", "</table>"];
  var v6189 = [2, "<table><tbody>", "</tbody></table>"];
  var v6190 = [3, "<table><tbody><tr>", "</tr></tbody></table>"];
  var v6191 = [2, "<table><tbody></tbody><colgroup>", "</colgroup></table>"];
  var v6192 = [1, "<map>", "</map>"];
  var v6193 = [0, "", ""];
  var bg = {option:v6186, legend:v6187, thead:v6188, tr:v6189, td:v6190, col:v6191, area:v6192, _default:v6193};
  var bh = U(c$$5);
  bg.optgroup = bg.option;
  bg.tbody = bg.tfoot = bg.colgroup = bg.caption = bg.thead;
  bg.th = bg.td;
  var v29305 = f$$4.support;
  var v28661 = v29305.htmlSerialize;
  var v29306 = !v28661;
  if (v29306) {
    bg._default = [1, "div<div>", "</div>"];
  }
  var v27657 = f$$4.fn;
  var v27658 = {text:v936, wrapAll:v939, wrapInner:v942, wrap:v944, unwrap:v946, append:v948, prepend:v950, before:v952, after:v954, remove:v955, empty:v956, clone:v958, html:v960, replaceWith:v963, detach:v964, domManip:v968};
  v27657.extend(v27658);
  f$$4.buildFragment = v969;
  f$$4.fragments = {};
  var v18570 = {appendTo:"append", prependTo:"prepend", insertBefore:"before", insertAfter:"after", replaceAll:"replaceWith"};
  f$$4.each(v18570, v971);
  var v13155 = {clone:v972, clean:v974, cleanData:v975};
  f$$4.extend(v13155);
  var bp = /alpha\([^)]*\)/i;
  var bq = /opacity=([^)]*)/;
  var br = /([A-Z]|^ms)/g;
  var bs = /^[\-+]?(?:\d*\.)?\d+$/i;
  var bt = /^-?(?:\d*\.)?\d+(?!px)[^\d\s]+$/i;
  var bu = /^([\-+])=([\-+.\de]+)/;
  var bv = /^margin/;
  var bw = {position:"absolute", visibility:"hidden", display:"block"};
  var bx = ["Top", "Right", "Bottom", "Left"];
  var by;
  var bz;
  var bA;
  var v30221 = f$$4.fn;
  v30221.css = v977;
  var v30530 = {get:v978};
  var v30391 = {opacity:v30530};
  var v30531 = !0;
  var v30532 = !0;
  var v30533 = !0;
  var v30534 = !0;
  var v30535 = !0;
  var v30536 = !0;
  var v30537 = !0;
  var v30538 = !0;
  var v30392 = {fillOpacity:v30531, fontWeight:v30532, lineHeight:v30533, opacity:v30534, orphans:v30535, widows:v30536, zIndex:v30537, zoom:v30538};
  var v30637;
  var v30749 = f$$4.support;
  var v30702 = v30749.cssFloat;
  if (v30702) {
    v30637 = "cssFloat";
  } else {
    v30637 = "styleFloat";
  }
  var v30539 = v30637;
  var v30393 = {"float":v30539};
  var v30222 = {cssHooks:v30391, cssNumber:v30392, cssProps:v30393, style:v979, css:v980, swap:v981};
  f$$4.extend(v30222);
  f$$4.curCSS = f$$4.css;
  var v29987 = c$$5.defaultView;
  if (v29987) {
    var v30223 = c$$5.defaultView;
    v29987 = v30223.getComputedStyle;
  }
  var v29719 = v29987;
  if (v29719) {
    bz = v982;
  }
  var v29720 = c$$5.documentElement;
  var v29307 = v29720.currentStyle;
  if (v29307) {
    bA = v983;
  }
  by = bz || bA;
  var v27659 = ["height", "width"];
  f$$4.each(v27659, v987);
  var v27660 = f$$4.support;
  var v26088 = v27660.opacity;
  var v27662 = !v26088;
  if (v27662) {
    var v27661 = f$$4.cssHooks;
    v27661.opacity = {get:v988, set:v989};
  }
  f$$4(v992);
  var v22204 = f$$4.expr;
  if (v22204) {
    var v26089 = f$$4.expr;
    v22204 = v26089.filters;
  }
  var v18571 = v22204;
  if (v18571) {
    var v27663 = f$$4.expr;
    var v26090 = v27663.filters;
    v26090.hidden = v993;
    var v27664 = f$$4.expr;
    var v26091 = v27664.filters;
    v26091.visible = v994;
  }
  var v13156 = {margin:"", padding:"", border:"Width"};
  f$$4.each(v13156, v996);
  var bC = /%20/g;
  var bD = /\[\]$/;
  var bE = /\r?\n/g;
  var bF = /#.*$/;
  var bG = /^(.*?):[ \t]*([^\r\n]*)\r?$/mg;
  var bH = /^(?:color|date|datetime|datetime-local|email|hidden|month|number|password|range|search|tel|text|time|url|week)$/i;
  var bI = /^(?:about|app|app\-storage|.+\-extension|file|res|widget):$/;
  var bJ = /^(?:GET|HEAD)$/;
  var bK = /^\/\//;
  var bL = /\?/;
  var bM = /<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi;
  var bN = /^(?:select|textarea)/i;
  var bO = /\s+/;
  var bP = /([?&])_=[^&]*/;
  var bQ = /^([\w\+\.\-]+:)(?:\/\/([^\/?#:]*)(?::(\d+))?)?/;
  var v6194 = f$$4.fn;
  var bR = v6194.load;
  var bS = {};
  var bT = {};
  var bU;
  var bV;
  var v6195 = ["*/"];
  var v6196 = ["*"];
  var bW = v6195 + v6196;
  try {
    bU = e$$47.href;
  } catch (bX) {
    bU = c$$5.createElement("a");
    bU.href = "";
    bU = bU.href;
  }
  var v28662 = bU.toLowerCase();
  var v27665 = bQ.exec(v28662);
  var v28663 = !v27665;
  if (v28663) {
    v27665 = [];
  }
  bV = v27665;
  var v27666 = f$$4.fn;
  var v27667 = {load:v999, serialize:v1000, serializeArray:v1005};
  v27666.extend(v27667);
  var v26092 = "ajaxStart ajaxStop ajaxComplete ajaxError ajaxSuccess ajaxSend".split(" ");
  f$$4.each(v26092, v1007);
  var v22205 = ["get", "post"];
  f$$4.each(v22205, v1009);
  var v27668 = bV[1];
  var v26093 = bI.test(v27668);
  var v26094 = !0;
  var v26095 = !0;
  var v26096 = !0;
  var v26097 = {xml:"application/xml, text/xml", html:"text/html", text:"text/plain", json:"application/json, text/javascript", "*":bW};
  var v26098 = {xml:/xml/, html:/html/, json:/json/};
  var v26099 = {xml:"responseXML", text:"responseText"};
  var v27669 = a$$13.String;
  var v27670 = !0;
  var v27671 = f$$4.parseJSON;
  var v27672 = f$$4.parseXML;
  var v26100 = {"* text":v27669, "text html":v27670, "text json":v27671, "text xml":v27672};
  var v27673 = !0;
  var v27674 = !0;
  var v26101 = {context:v27673, url:v27674};
  var v22206 = {url:bU, isLocal:v26093, global:v26094, type:"GET", contentType:"application/x-www-form-urlencoded; charset=UTF-8", processData:v26095, async:v26096, accepts:v26097, contents:v26098, responseFields:v26099, converters:v26100, flatOptions:v26101};
  var v22207 = bY(bS);
  var v22208 = bY(bT);
  var v18572 = {getScript:v1010, getJSON:v1011, ajaxSetup:v1012, ajaxSettings:v22206, ajaxPrefilter:v22207, ajaxTransport:v22208, ajax:v1020, param:v1022};
  f$$4.extend(v18572);
  var v13157 = {active:0, lastModified:{}, etag:{}};
  f$$4.extend(v13157);
  var cc = f$$4.now();
  var cd = /(\=)\?(&|$)|\?\?/i;
  var v26102 = {jsonp:"callback", jsonpCallback:v1023};
  f$$4.ajaxSetup(v26102);
  f$$4.ajaxPrefilter("json jsonp", v1027);
  var v26103 = {script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"};
  var v26104 = {script:/javascript|ecmascript/};
  var v26105 = {"text script":v1028};
  var v22209 = {accepts:v26103, contents:v26104, converters:v26105};
  f$$4.ajaxSetup(v22209);
  f$$4.ajaxPrefilter("script", v1029);
  f$$4.ajaxTransport("script", v1033);
  var v6197;
  var v13158 = a$$13.ActiveXObject;
  if (v13158) {
    v6197 = v1034;
  } else {
    v6197 = !1;
  }
  var ce = v6197;
  var cf = 0;
  var cg;
  var v18573 = f$$4.ajaxSettings;
  var v22210;
  var v26106 = a$$13.ActiveXObject;
  if (v26106) {
    v22210 = v1035;
  } else {
    v22210 = ch$$14;
  }
  v18573.xhr = v22210;
  var v22211 = f$$4.ajaxSettings;
  var v18574 = v22211.xhr();
  v1036(v18574);
  var v18575 = f$$4.support;
  var v13159 = v18575.ajax;
  if (v13159) {
    f$$4.ajaxTransport(v1040);
  }
  var cj = {};
  var ck;
  var cl;
  var cm = /^(?:toggle|show|hide)$/;
  var cn = /^([+\-]=)?([\d+.\-]+)([a-z%]*)$/i;
  var co;
  var v6198 = ["height", "marginTop", "marginBottom", "paddingTop", "paddingBottom"];
  var v6199 = ["width", "marginLeft", "marginRight", "paddingLeft", "paddingRight"];
  var v6200 = ["opacity"];
  var cp = [v6198, v6199, v6200];
  var cq;
  var v28664 = f$$4.fn;
  var v29721 = f$$4.fn;
  var v29308 = v29721.toggle;
  var v28665 = {show:v1041, hide:v1042, _toggle:v29308, toggle:v1044, fadeTo:v1045, animate:v1046, stop:v1048};
  v28664.extend(v28665);
  var v29309 = ct("show", 1);
  var v29310 = ct("hide", 1);
  var v29311 = ct("toggle", 1);
  var v29312 = {opacity:"show"};
  var v29313 = {opacity:"hide"};
  var v29314 = {opacity:"toggle"};
  var v28666 = {slideDown:v29309, slideUp:v29310, slideToggle:v29311, fadeIn:v29312, fadeOut:v29313, fadeToggle:v29314};
  f$$4.each(v28666, v1050);
  var v28667 = {linear:v1053, swing:v1054};
  var v27675 = {speed:v1052, easing:v28667, timers:[], fx:v1055};
  f$$4.extend(v27675);
  var v26107 = f$$4.fx;
  v26107.prototype = {update:v1056, cur:v1057, custom:v1059, show:v1060, hide:v1061, step:v1063};
  var v22212 = f$$4.fx;
  var v26108 = {slow:600, fast:200, _default:400};
  var v26109 = {opacity:v1066, _default:v1067};
  var v22213 = {tick:v1064, interval:13, stop:v1065, speeds:v26108, step:v26109};
  f$$4.extend(v22212, v22213);
  var v22214 = cp.concat;
  var v18576 = v22214.apply([], cp);
  f$$4.each(v18576, v1069);
  var v18577 = f$$4.expr;
  if (v18577) {
    var v22215 = f$$4.expr;
    v18577 = v22215.filters;
  }
  var v13160 = v18577;
  if (v13160) {
    var v22216 = f$$4.expr;
    var v18578 = v22216.filters;
    v18578.animated = v1071;
  }
  var cv;
  var cw = /^t(?:able|d|h)$/i;
  var cx = /^(?:body|html)$/i;
  var v29315;
  var v29988 = c$$5.documentElement;
  var v29722 = "getBoundingClientRect" in v29988;
  if (v29722) {
    v29315 = cv = v1072;
  } else {
    v29315 = cv = v1073;
  }
  v29315;
  var v29316 = f$$4.fn;
  v29316.offset = v1075;
  f$$4.offset = {bodyOffset:v1076, setOffset:v1077};
  var v27676 = f$$4.fn;
  var v27677 = {position:v1078, offsetParent:v1080};
  v27676.extend(v27677);
  var v26110 = {scrollLeft:"pageXOffset", scrollTop:"pageYOffset"};
  f$$4.each(v26110, v1083);
  var v22217 = {Height:"height", Width:"width"};
  f$$4.each(v22217, v1088);
  a$$13.jQuery = a$$13.$ = f$$4;
  var v26111 = typeof define;
  var v22218 = v26111 == "function";
  if (v22218) {
    v22218 = define.amd;
  }
  var v18579 = v22218;
  if (v18579) {
    var v22219 = define.amd;
    v18579 = v22219.jQuery;
  }
  var v13161 = v18579;
  if (v13161) {
    define("jquery", [], v1089);
  }
  return;
}
function v614() {
  function v613(x$$66, y$$48, x2$$1, y2$$1, dashArray) {
    var v6201 = !dashArray;
    if (v6201) {
      dashArray = [10, 5];
    }
    var dashCount = dashArray.length;
    this.moveTo(x$$66, y$$48);
    var dx$$5 = x2$$1 - x$$66;
    var dy$$5 = y2$$1 - y$$48;
    var slope = dy$$5 / dx$$5;
    var v13162 = dx$$5 * dx$$5;
    var v13163 = dy$$5 * dy$$5;
    var v6202 = v13162 + v13163;
    var distRemaining = Math.sqrt(v6202);
    var dashIndex = 0;
    var draw = true;
    var v6207 = distRemaining >= .1;
    for (;v6207;) {
      dashIndex = dashIndex + 1;
      var v6203 = dashIndex % dashCount;
      var dashLength = dashArray[v6203];
      var v6204 = dashLength > distRemaining;
      if (v6204) {
        dashLength = distRemaining;
      }
      var v13164 = dashLength * dashLength;
      var v18580 = slope * slope;
      var v13165 = 1 + v18580;
      var v6205 = v13164 / v13165;
      var xStep = Math.sqrt(v6205);
      x$$66 = x$$66 + xStep;
      var v13166 = slope * xStep;
      y$$48 = y$$48 + v13166;
      var v13167;
      if (draw) {
        v13167 = "lineTo";
      } else {
        v13167 = "moveTo";
      }
      var v6206 = v13167;
      this[v6206](x$$66, y$$48);
      distRemaining = distRemaining - dashLength;
      draw = !draw;
      v6207 = distRemaining >= .1;
    }
    return;
  }
  function v612(npos$$11, pos$$55, dim$$24) {
    var v6208 = npos$$11.x;
    var v6209 = npos$$11.y;
    var a$$12 = new Complex(v6208, v6209);
    var v13168 = a$$12.x;
    var v6210 = v13168 + dim$$24;
    var v13169 = npos$$11.y;
    var v6211 = v13169 - dim$$24;
    var b$$8 = new Complex(v6210, v6211);
    var v6212 = b$$8.x;
    var v13170 = npos$$11.y;
    var v6213 = v13170 + dim$$24;
    var c$$4 = new Complex(v6212, v6213);
    var v6214 = pos$$55.x;
    var v6215 = pos$$55.y;
    pos$$55 = new Complex(v6214, v6215);
    var negOne = new Complex(-1, -1);
    var v13171 = c$$4.x;
    var v13172 = a$$12.x;
    var v6216 = v13171 - v13172;
    var v13173 = c$$4.y;
    var v13174 = a$$12.y;
    var v6217 = v13173 - v13174;
    var v0 = new Complex(v6216, v6217);
    var v13175 = b$$8.x;
    var v13176 = a$$12.x;
    var v6218 = v13175 - v13176;
    var v13177 = b$$8.y;
    var v13178 = a$$12.y;
    var v6219 = v13177 - v13178;
    var v1$$2 = new Complex(v6218, v6219);
    var v13179 = pos$$55.x;
    var v13180 = a$$12.x;
    var v6220 = v13179 - v13180;
    var v13181 = pos$$55.y;
    var v13182 = a$$12.y;
    var v6221 = v13181 - v13182;
    var v2$$2 = new Complex(v6220, v6221);
    var v13183 = v0.x;
    var v13184 = v0.x;
    var v6222 = v13183 * v13184;
    var v13185 = v0.y;
    var v13186 = v0.y;
    var v6223 = v13185 * v13186;
    var dot00 = v6222 + v6223;
    var v13187 = v0.x;
    var v13188 = v1$$2.x;
    var v6224 = v13187 * v13188;
    var v13189 = v0.y;
    var v13190 = v1$$2.y;
    var v6225 = v13189 * v13190;
    var dot01 = v6224 + v6225;
    var v13191 = v0.x;
    var v13192 = v2$$2.x;
    var v6226 = v13191 * v13192;
    var v13193 = v0.y;
    var v13194 = v2$$2.y;
    var v6227 = v13193 * v13194;
    var dot02 = v6226 + v6227;
    var v13195 = v1$$2.x;
    var v13196 = v1$$2.x;
    var v6228 = v13195 * v13196;
    var v13197 = v1$$2.y;
    var v13198 = v1$$2.y;
    var v6229 = v13197 * v13198;
    var dot11 = v6228 + v6229;
    var v13199 = v1$$2.x;
    var v13200 = v2$$2.x;
    var v6230 = v13199 * v13200;
    var v13201 = v1$$2.y;
    var v13202 = v2$$2.y;
    var v6231 = v13201 * v13202;
    var dot12 = v6230 + v6231;
    var v13203 = dot00 * dot11;
    var v13204 = dot01 * dot01;
    var v6232 = v13203 - v13204;
    var inv$$1 = 1 / v6232;
    var v13205 = dot11 * dot02;
    var v13206 = dot01 * dot12;
    var v6233 = v13205 - v13206;
    var u = v6233 * inv$$1;
    var v13207 = dot00 * dot12;
    var v13208 = dot01 * dot02;
    var v6234 = v13207 - v13208;
    var v$$3 = v6234 * inv$$1;
    var v13209 = u > 0;
    if (v13209) {
      v13209 = v$$3 > 0;
    }
    var v6235 = v13209;
    if (v6235) {
      var v13210 = u + v$$3;
      v6235 = v13210 < 1;
    }
    return v6235;
  }
  function v611(type$$58, pos$$54, dim$$23, canvas$$53) {
    var ctx$$24 = canvas$$53.getCtx();
    var c1x$$1 = pos$$54.x;
    var c1y$$1 = pos$$54.y;
    var c2x$$1 = c1x$$1 + dim$$23;
    var v6236 = pos$$54.y;
    var c2y$$1 = v6236 - dim$$23;
    var c3x$$1 = c2x$$1;
    var v6237 = pos$$54.y;
    var c3y$$1 = v6237 + dim$$23;
    ctx$$24.beginPath();
    ctx$$24.moveTo(c1x$$1, c1y$$1);
    ctx$$24.lineTo(c2x$$1, c2y$$1);
    ctx$$24.lineTo(c3x$$1, c3y$$1);
    ctx$$24.closePath();
    ctx$$24[type$$58]();
    return;
  }
  function v610(graph$$20, id$$36, startDepth$$1, flags$$14) {
    function v609(adj$$33) {
      var n$$56 = adj$$33.nodeTo;
      var v18581 = n$$56._flag;
      var v13211 = v18581 === false;
      if (v13211) {
        v13211 = filter$$6(n$$56);
      }
      var v6244 = v13211;
      if (v6244) {
        var v13212 = n$$56._depth;
        var v6243 = v13212 < 0;
        if (v6243) {
          var v13213 = node$$115._depth;
          var v6238 = v13213 + 1;
          n$$56._depth = v6238 + startDepth$$1;
          var v18582 = graph$$20.depth;
          var v18583 = n$$56._depth;
          var v13214 = v18582[v18583];
          var v6241 = !v13214;
          if (v6241) {
            var v6239 = graph$$20.depth;
            var v6240 = n$$56._depth;
            v6239[v6240] = [];
          }
          var v13215 = graph$$20.depth;
          var v13216 = n$$56._depth;
          var v6242 = v13215[v13216];
          v6242.push(n$$56);
        }
        queue$$2.unshift(n$$56);
      }
      return;
    }
    function v608(elem$$60) {
      elem$$60._flag = false;
      elem$$60._depth = -1;
      return;
    }
    startDepth$$1 = startDepth$$1 || 0;
    var filter$$6 = this.filter(flags$$14);
    this.eachNode(graph$$20, v608, flags$$14);
    var root$$20 = graph$$20.getNode(id$$36);
    root$$20._depth = startDepth$$1;
    var queue$$2 = [root$$20];
    graph$$20.depth = [];
    var that$$35 = this;
    var v13217 = queue$$2.length;
    var v6245 = v13217 !== 0;
    for (;v6245;) {
      var node$$115 = queue$$2.pop();
      node$$115._flag = true;
      this.eachAdjacency(node$$115, v609, flags$$14);
      var v13218 = queue$$2.length;
      v6245 = v13218 !== 0;
    }
    return;
  }
  function v607(e$$46, win$$34, scroll$$4) {
    var v18584 = this.config;
    var v13219 = v18584.zooming;
    var v6246 = !v13219;
    if (v6246) {
      return;
    }
    var v6247 = $$$1.event;
    var v13220 = $$$1.event;
    var v6248 = v13220.get(e$$46, win$$34);
    v6247.stop(v6248);
    var v6249 = this.viz;
    v6249.zoom(scroll$$4);
    return;
  }
  function v606(adj$$32, pos$$53) {
    var orn$$17 = this.getOrientation(adj$$32);
    var nodeFrom$$13 = adj$$32.nodeFrom;
    var nodeTo$$15 = adj$$32.nodeTo;
    var v6250 = nodeFrom$$13._depth;
    var v6251 = nodeTo$$15._depth;
    var rel$$7 = v6250 < v6251;
    var v13221 = this.viz;
    var v6252 = v13221.geom;
    var v13222;
    if (rel$$7) {
      v13222 = nodeFrom$$13;
    } else {
      v13222 = nodeTo$$15;
    }
    var v6253 = v13222;
    var from$$16 = v6252.getEdge(v6253, "begin", orn$$17);
    var v13223 = this.viz;
    var v6254 = v13223.geom;
    var v13224;
    if (rel$$7) {
      v13224 = nodeTo$$15;
    } else {
      v13224 = nodeFrom$$13;
    }
    var v6255 = v13224;
    var to$$17 = v6254.getEdge(v6255, "end", orn$$17);
    var v13225 = this.edgeHelper;
    var v6256 = v13225.line;
    var v13226 = this.edge;
    var v6257 = v13226.epsilon;
    return v6256.contains(from$$16, to$$17, pos$$53, v6257);
  }
  function v605(adj$$31, canvas$$52) {
    var orn$$16 = this.getOrientation(adj$$31);
    var nodeFrom$$12 = adj$$31.nodeFrom;
    var nodeTo$$14 = adj$$31.nodeTo;
    var v6258 = nodeFrom$$12._depth;
    var v6259 = nodeTo$$14._depth;
    var rel$$6 = v6258 < v6259;
    var v13227 = this.viz;
    var v6260 = v13227.geom;
    var v13228;
    if (rel$$6) {
      v13228 = nodeFrom$$12;
    } else {
      v13228 = nodeTo$$14;
    }
    var v6261 = v13228;
    var from$$15 = v6260.getEdge(v6261, "begin", orn$$16);
    var v13229 = this.viz;
    var v6262 = v13229.geom;
    var v13230;
    if (rel$$6) {
      v13230 = nodeTo$$14;
    } else {
      v13230 = nodeFrom$$12;
    }
    var v6263 = v13230;
    var to$$16 = v6262.getEdge(v6263, "end", orn$$16);
    var v6264 = from$$15.x;
    var v6265 = to$$16.y;
    var middle = {x:v6264, y:v6265};
    var v13231 = this.edgeHelper;
    var v6266 = v13231.line;
    v6266.render(from$$15, middle, canvas$$52);
    var v13232 = this.edgeHelper;
    var v6267 = v13232.line;
    v6267.render(middle, to$$16, canvas$$52);
    return;
  }
  function v604(adj$$30, canvas$$51) {
    var orn$$15 = this.getOrientation(adj$$30);
    var nodeFrom$$11 = adj$$30.nodeFrom;
    var nodeTo$$13 = adj$$30.nodeTo;
    var v6268 = nodeFrom$$11._depth;
    var v6269 = nodeTo$$13._depth;
    var rel$$5 = v6268 < v6269;
    var v13233 = this.viz;
    var v6270 = v13233.geom;
    var v13234;
    if (rel$$5) {
      v13234 = nodeFrom$$11;
    } else {
      v13234 = nodeTo$$13;
    }
    var v6271 = v13234;
    var begin$$13 = v6270.getEdge(v6271, "begin", orn$$15);
    var v13235 = this.viz;
    var v6272 = v13235.geom;
    var v13236;
    if (rel$$5) {
      v13236 = nodeTo$$13;
    } else {
      v13236 = nodeFrom$$11;
    }
    var v6273 = v13236;
    var end$$3 = v6272.getEdge(v6273, "end", orn$$15);
    var dim$$22 = adj$$30.getData("dim");
    var ctx$$23 = canvas$$51.getCtx();
    ctx$$23.beginPath();
    var v6274 = begin$$13.x;
    var v6275 = begin$$13.y;
    ctx$$23.moveTo(v6274, v6275);
    switch(orn$$15) {
      case "left":
        var v13237 = begin$$13.x;
        var v6276 = v13237 + dim$$22;
        var v6277 = begin$$13.y;
        var v13238 = end$$3.x;
        var v6278 = v13238 - dim$$22;
        var v6279 = end$$3.y;
        var v6280 = end$$3.x;
        var v6281 = end$$3.y;
        ctx$$23.bezierCurveTo(v6276, v6277, v6278, v6279, v6280, v6281);
        break;
      case "right":
        var v13239 = begin$$13.x;
        var v6282 = v13239 - dim$$22;
        var v6283 = begin$$13.y;
        var v13240 = end$$3.x;
        var v6284 = v13240 + dim$$22;
        var v6285 = end$$3.y;
        var v6286 = end$$3.x;
        var v6287 = end$$3.y;
        ctx$$23.bezierCurveTo(v6282, v6283, v6284, v6285, v6286, v6287);
        break;
      case "top":
        var v6288 = begin$$13.x;
        var v13241 = begin$$13.y;
        var v6289 = v13241 + dim$$22;
        var v6290 = end$$3.x;
        var v13242 = end$$3.y;
        var v6291 = v13242 - dim$$22;
        var v6292 = end$$3.x;
        var v6293 = end$$3.y;
        ctx$$23.bezierCurveTo(v6288, v6289, v6290, v6291, v6292, v6293);
        break;
      case "bottom":
        var v6294 = begin$$13.x;
        var v13243 = begin$$13.y;
        var v6295 = v13243 - dim$$22;
        var v6296 = end$$3.x;
        var v13244 = end$$3.y;
        var v6297 = v13244 + dim$$22;
        var v6298 = end$$3.x;
        var v6299 = end$$3.y;
        ctx$$23.bezierCurveTo(v6294, v6295, v6296, v6297, v6298, v6299);
    }
    ctx$$23.stroke();
    return;
  }
  function v603(adj$$29, canvas$$50) {
    var orn$$14 = this.getOrientation(adj$$29);
    var nodeFrom$$10 = adj$$29.nodeFrom;
    var nodeTo$$12 = adj$$29.nodeTo;
    var v6300 = nodeFrom$$10._depth;
    var v6301 = nodeTo$$12._depth;
    var rel$$4 = v6300 < v6301;
    var v13245 = this.viz;
    var v6302 = v13245.geom;
    var v13246;
    if (rel$$4) {
      v13246 = nodeFrom$$10;
    } else {
      v13246 = nodeTo$$12;
    }
    var v6303 = v13246;
    var begin$$12 = v6302.getEdge(v6303, "begin", orn$$14);
    var v13247 = this.viz;
    var v6304 = v13247.geom;
    var v13248;
    if (rel$$4) {
      v13248 = nodeTo$$12;
    } else {
      v13248 = nodeFrom$$10;
    }
    var v6305 = v13248;
    var end$$2 = v6304.getEdge(v6305, "end", orn$$14);
    var dim$$21 = adj$$29.getData("dim");
    var ctx$$22 = canvas$$50.getCtx();
    ctx$$22.beginPath();
    var v6306 = begin$$12.x;
    var v6307 = begin$$12.y;
    ctx$$22.moveTo(v6306, v6307);
    switch(orn$$14) {
      case "left":
        var v13249 = end$$2.x;
        var v6308 = v13249 - dim$$21;
        var v6309 = end$$2.y;
        var v6310 = end$$2.x;
        var v6311 = end$$2.y;
        ctx$$22.quadraticCurveTo(v6308, v6309, v6310, v6311);
        break;
      case "right":
        var v13250 = end$$2.x;
        var v6312 = v13250 + dim$$21;
        var v6313 = end$$2.y;
        var v6314 = end$$2.x;
        var v6315 = end$$2.y;
        ctx$$22.quadraticCurveTo(v6312, v6313, v6314, v6315);
        break;
      case "top":
        var v6316 = end$$2.x;
        var v13251 = end$$2.y;
        var v6317 = v13251 - dim$$21;
        var v6318 = end$$2.x;
        var v6319 = end$$2.y;
        ctx$$22.quadraticCurveTo(v6316, v6317, v6318, v6319);
        break;
      case "bottom":
        var v6320 = end$$2.x;
        var v13252 = end$$2.y;
        var v6321 = v13252 + dim$$21;
        var v6322 = end$$2.x;
        var v6323 = end$$2.y;
        ctx$$22.quadraticCurveTo(v6320, v6321, v6322, v6323);
    }
    ctx$$22.stroke();
    return;
  }
  function v602(adj$$28, canvas$$49) {
    var orn$$13 = this.getOrientation(adj$$28);
    var nodeFrom$$9 = adj$$28.nodeFrom;
    var nodeTo$$11 = adj$$28.nodeTo;
    var v6324 = nodeFrom$$9._depth;
    var v6325 = nodeTo$$11._depth;
    var rel$$3 = v6324 < v6325;
    var v13253 = this.viz;
    var v6326 = v13253.geom;
    var v13254;
    if (rel$$3) {
      v13254 = nodeFrom$$9;
    } else {
      v13254 = nodeTo$$11;
    }
    var v6327 = v13254;
    var begin$$11 = v6326.getEdge(v6327, "begin", orn$$13);
    var v13255 = this.viz;
    var v6328 = v13255.geom;
    var v13256;
    if (rel$$3) {
      v13256 = nodeTo$$11;
    } else {
      v13256 = nodeFrom$$9;
    }
    var v6329 = v13256;
    var end$$1 = v6328.getEdge(v6329, "end", orn$$13);
    var dim$$20 = adj$$28.getData("dim");
    var ctx$$21 = canvas$$49.getCtx();
    ctx$$21.beginPath();
    var v6330 = begin$$11.x;
    var v6331 = begin$$11.y;
    ctx$$21.moveTo(v6330, v6331);
    switch(orn$$13) {
      case "left":
        var v13257 = begin$$11.x;
        var v6332 = v13257 + dim$$20;
        var v6333 = begin$$11.y;
        var v6334 = end$$1.x;
        var v6335 = end$$1.y;
        ctx$$21.quadraticCurveTo(v6332, v6333, v6334, v6335);
        break;
      case "right":
        var v13258 = begin$$11.x;
        var v6336 = v13258 - dim$$20;
        var v6337 = begin$$11.y;
        var v6338 = end$$1.x;
        var v6339 = end$$1.y;
        ctx$$21.quadraticCurveTo(v6336, v6337, v6338, v6339);
        break;
      case "top":
        var v6340 = begin$$11.x;
        var v13259 = begin$$11.y;
        var v6341 = v13259 + dim$$20;
        var v6342 = end$$1.x;
        var v6343 = end$$1.y;
        ctx$$21.quadraticCurveTo(v6340, v6341, v6342, v6343);
        break;
      case "bottom":
        var v6344 = begin$$11.x;
        var v13260 = begin$$11.y;
        var v6345 = v13260 - dim$$20;
        var v6346 = end$$1.x;
        var v6347 = end$$1.y;
        ctx$$21.quadraticCurveTo(v6344, v6345, v6346, v6347);
    }
    ctx$$21.stroke();
    return;
  }
  function v601(adj$$27, pos$$52) {
    var orn$$12 = this.getOrientation(adj$$27);
    var nodeFrom$$8 = adj$$27.nodeFrom;
    var nodeTo$$10 = adj$$27.nodeTo;
    var v6348 = nodeFrom$$8._depth;
    var v6349 = nodeTo$$10._depth;
    var rel$$2 = v6348 < v6349;
    var v13261 = this.viz;
    var v6350 = v13261.geom;
    var v13262;
    if (rel$$2) {
      v13262 = nodeFrom$$8;
    } else {
      v13262 = nodeTo$$10;
    }
    var v6351 = v13262;
    var from$$14 = v6350.getEdge(v6351, "begin", orn$$12);
    var v13263 = this.viz;
    var v6352 = v13263.geom;
    var v13264;
    if (rel$$2) {
      v13264 = nodeTo$$10;
    } else {
      v13264 = nodeFrom$$8;
    }
    var v6353 = v13264;
    var to$$15 = v6352.getEdge(v6353, "end", orn$$12);
    var v13265 = this.edgeHelper;
    var v6354 = v13265.arrow;
    var v13266 = this.edge;
    var v6355 = v13266.epsilon;
    return v6354.contains(from$$14, to$$15, pos$$52, v6355);
  }
  function v600(adj$$26, canvas$$48) {
    var orn$$11 = this.getOrientation(adj$$26);
    var node$$114 = adj$$26.nodeFrom;
    var child$$1 = adj$$26.nodeTo;
    var dim$$19 = adj$$26.getData("dim");
    var v13267 = this.viz;
    var v6356 = v13267.geom;
    var from$$13 = v6356.getEdge(node$$114, "begin", orn$$11);
    var v13268 = this.viz;
    var v6357 = v13268.geom;
    var to$$14 = v6357.getEdge(child$$1, "end", orn$$11);
    var v6358 = adj$$26.data;
    var direction$$3 = v6358.$direction;
    var v13269 = direction$$3;
    if (v13269) {
      var v18585 = direction$$3.length;
      v13269 = v18585 > 1;
    }
    var v6359 = v13269;
    if (v6359) {
      var v13270 = direction$$3[0];
      var v13271 = node$$114.id;
      v6359 = v13270 !== v13271;
    }
    var inv = v6359;
    var v13272 = this.edgeHelper;
    var v6360 = v13272.arrow;
    v6360.render(from$$13, to$$14, dim$$19, inv, canvas$$48);
    return;
  }
  function v599(adj$$25, pos$$51) {
    var orn$$10 = this.getOrientation(adj$$25);
    var nodeFrom$$7 = adj$$25.nodeFrom;
    var nodeTo$$9 = adj$$25.nodeTo;
    var v6361 = nodeFrom$$7._depth;
    var v6362 = nodeTo$$9._depth;
    var rel$$1 = v6361 < v6362;
    var v13273 = this.viz;
    var v6363 = v13273.geom;
    var v13274;
    if (rel$$1) {
      v13274 = nodeFrom$$7;
    } else {
      v13274 = nodeTo$$9;
    }
    var v6364 = v13274;
    var from$$12 = v6363.getEdge(v6364, "begin", orn$$10);
    var v13275 = this.viz;
    var v6365 = v13275.geom;
    var v13276;
    if (rel$$1) {
      v13276 = nodeTo$$9;
    } else {
      v13276 = nodeFrom$$7;
    }
    var v6366 = v13276;
    var to$$13 = v6365.getEdge(v6366, "end", orn$$10);
    var v13277 = this.edgeHelper;
    var v6367 = v13277.line;
    var v13278 = this.edge;
    var v6368 = v13278.epsilon;
    return v6367.contains(from$$12, to$$13, pos$$51, v6368);
  }
  function v598(adj$$24, canvas$$47) {
    var orn$$9 = this.getOrientation(adj$$24);
    var nodeFrom$$6 = adj$$24.nodeFrom;
    var nodeTo$$8 = adj$$24.nodeTo;
    var v6369 = nodeFrom$$6._depth;
    var v6370 = nodeTo$$8._depth;
    var rel = v6369 < v6370;
    var v13279;
    if (rel) {
      v13279 = nodeFrom$$6;
    } else {
      v13279 = nodeTo$$8;
    }
    var v6371 = v13279;
    var from$$11 = v6371.getPos();
    var v13280;
    if (rel) {
      v13280 = nodeTo$$8;
    } else {
      v13280 = nodeFrom$$6;
    }
    var v6372 = v13280;
    var to$$12 = v6372.getPos();
    var JSCompiler_object_inline_x_90 = from$$11.x;
    var JSCompiler_object_inline_y_91 = from$$11.y;
    var v6373 = to$$12.y;
    var middle2 = {x:JSCompiler_object_inline_x_90, y:v6373};
    var v13281 = this.edgeHelper;
    var v6374 = v13281.line;
    v6374.render(from$$11, middle2, canvas$$47);
    var v13282 = this.edgeHelper;
    var v6375 = v13282.line;
    v6375.render(middle2, to$$12, canvas$$47);
    var v18586 = nodeTo$$8.anySubnode();
    var v13283 = !v18586;
    if (v13283) {
      var v18587 = this.config;
      v13283 = v18587.alignName;
    }
    var v6381 = v13283;
    if (v6381) {
      var ctx$$20 = canvas$$47.getCtx();
      ctx$$20.save();
      ctx$$20.lineWidth = 2;
      ctx$$20.lineCap = "butt";
      ctx$$20.fillStyle = ctx$$20.strokeStyle = "#ccb";
      ctx$$20.beginPath();
      var v6376 = to$$12.x;
      var v6377 = to$$12.y;
      var v18588 = this.viz;
      var v13284 = v18588.graph;
      var v6378 = v13284.maxXpos;
      var v6379 = to$$12.y;
      var v6380 = [4, 2];
      ctx$$20.dashedLine(v6376, v6377, v6378, v6379, v6380);
      ctx$$20.closePath();
      ctx$$20.stroke();
      ctx$$20.restore();
    }
    return;
  }
  function v597(node$$113, pos$$50) {
    var v13285 = node$$113.exist;
    var v6382 = !v13285;
    if (v6382) {
      return false;
    }
    var width$$30 = node$$113.getData("width");
    var height$$28 = node$$113.getData("height");
    var dim$$18 = node$$113.getData("dim");
    var v13286 = node$$113.pos;
    var v6383 = v13286.getc(true);
    var npos$$10 = this.getAlignedPos(v6383, width$$30, height$$28);
    var v13287 = this.nodeHelper;
    var v6384 = v13287.triangle;
    var v18589 = npos$$10.x;
    var v18590 = width$$30 / 2;
    var v13288 = v18589 + v18590;
    var v18591 = npos$$10.y;
    var v18592 = height$$28 / 2;
    var v13289 = v18591 + v18592;
    var v6385 = {x:v13288, y:v13289};
    return v6384.contains(v6385, pos$$50, dim$$18);
  }
  function v596(node$$112, canvas$$46) {
    var width$$29 = node$$112.getData("width");
    var height$$27 = node$$112.getData("height");
    var dim$$17 = node$$112.getData("dim");
    var v13290 = node$$112.pos;
    var v6386 = v13290.getc(true);
    var pos$$49 = this.getAlignedPos(v6386, width$$29, height$$27);
    var v13291 = this.nodeHelper;
    var v6387 = v13291.triangle;
    var v18593 = pos$$49.x;
    var v18594 = width$$29 / 2;
    var v13292 = v18593 + v18594;
    var v18595 = pos$$49.y;
    var v18596 = height$$27 / 2;
    var v13293 = v18595 + v18596;
    var v6388 = {x:v13292, y:v13293};
    v6387.render("fill", v6388, dim$$17, canvas$$46);
    return;
  }
  function v595(node$$111, pos$$48) {
    var v13294 = node$$111.exist;
    var v6389 = !v13294;
    if (v6389) {
      return false;
    }
    var width$$28 = node$$111.getData("width");
    var height$$26 = node$$111.getData("height");
    var v13295 = node$$111.pos;
    var v6390 = v13295.getc(true);
    var npos$$9 = this.getAlignedPos(v6390, width$$28, height$$26);
    var v13296 = this.nodeHelper;
    var v6391 = v13296.rectangle;
    var v18597 = npos$$9.x;
    var v18598 = width$$28 / 2;
    var v13297 = v18597 + v18598;
    var v18599 = npos$$9.y;
    var v18600 = height$$26 / 2;
    var v13298 = v18599 + v18600;
    var v6392 = {x:v13297, y:v13298};
    v6391.contains(v6392, pos$$48, width$$28, height$$26);
    return;
  }
  function v594(node$$110, canvas$$45) {
    var width$$27 = node$$110.getData("width");
    var height$$25 = node$$110.getData("height");
    var v13299 = node$$110.pos;
    var v6393 = v13299.getc(true);
    var pos$$47 = this.getAlignedPos(v6393, width$$27, height$$25);
    var v13300 = this.nodeHelper;
    var v6394 = v13300.rectangle;
    var v18601 = pos$$47.x;
    var v18602 = width$$27 / 2;
    var v13301 = v18601 + v18602;
    var v18603 = pos$$47.y;
    var v18604 = height$$25 / 2;
    var v13302 = v18603 + v18604;
    var v6395 = {x:v13301, y:v13302};
    v6394.render("fill", v6395, width$$27, height$$25, canvas$$45);
    return;
  }
  function v593(node$$109, pos$$46) {
    var v13303 = node$$109.exist;
    var v6396 = !v13303;
    if (v6396) {
      return false;
    }
    var width$$26 = node$$109.getData("width");
    var height$$24 = node$$109.getData("height");
    var v13304 = node$$109.pos;
    var v6397 = v13304.getc(true);
    var npos$$8 = this.getAlignedPos(v6397, width$$26, height$$24);
    var v13305 = this.nodeHelper;
    var v6398 = v13305.ellipse;
    var v18605 = npos$$8.x;
    var v18606 = width$$26 / 2;
    var v13306 = v18605 + v18606;
    var v18607 = npos$$8.y;
    var v18608 = height$$24 / 2;
    var v13307 = v18607 + v18608;
    var v6399 = {x:v13306, y:v13307};
    v6398.contains(v6399, pos$$46, width$$26, height$$24);
    return;
  }
  function v592(node$$108, canvas$$44) {
    var width$$25 = node$$108.getData("width");
    var height$$23 = node$$108.getData("height");
    var v13308 = node$$108.pos;
    var v6400 = v13308.getc(true);
    var pos$$45 = this.getAlignedPos(v6400, width$$25, height$$23);
    var v13309 = this.nodeHelper;
    var v6401 = v13309.ellipse;
    var v18609 = pos$$45.x;
    var v18610 = width$$25 / 2;
    var v13310 = v18609 + v18610;
    var v18611 = pos$$45.y;
    var v18612 = height$$23 / 2;
    var v13311 = v18611 + v18612;
    var v6402 = {x:v13310, y:v13311};
    v6401.render("fill", v6402, width$$25, height$$23, canvas$$44);
    return;
  }
  function v591(node$$107, pos$$44) {
    var v13312 = node$$107.exist;
    var v6403 = !v13312;
    if (v6403) {
      return false;
    }
    var dim$$16 = node$$107.getData("dim");
    var v13313 = node$$107.pos;
    var v6404 = v13313.getc(true);
    var npos$$7 = this.getAlignedPos(v6404, dim$$16, dim$$16);
    var dim2$$3 = dim$$16 / 2;
    var v13314 = this.nodeHelper;
    var v6405 = v13314.square;
    var v13315 = npos$$7.x;
    var v18613 = npos$$7.y;
    var v13316 = v18613 + dim2$$3;
    var v6406 = {x:v13315, y:v13316};
    return v6405.contains(v6406, pos$$44, dim2$$3);
  }
  function v590(node$$106, canvas$$43) {
    var dim$$15 = node$$106.getData("dim");
    var dim2$$2 = dim$$15 / 2;
    var v13317 = node$$106.pos;
    var v6407 = v13317.getc(true);
    var pos$$43 = this.getAlignedPos(v6407, dim$$15, dim$$15);
    var v13318 = this.nodeHelper;
    var v6408 = v13318.square;
    var v13319 = pos$$43.x;
    var v18614 = pos$$43.y;
    var v13320 = v18614 + dim2$$2;
    var v6409 = {x:v13319, y:v13320};
    v6408.render("fill", v6409, dim2$$2, canvas$$43);
    return;
  }
  function v589(node$$105, pos$$42) {
    var v13321 = node$$105.exist;
    var v6410 = !v13321;
    if (v6410) {
      return false;
    }
    var dim$$14 = node$$105.getData("dim");
    var v13322 = node$$105.pos;
    var v6411 = v13322.getc(true);
    var npos$$6 = this.getAlignedPos(v6411, dim$$14, dim$$14);
    var dim2$$1 = dim$$14 / 2;
    var v13323 = this.nodeHelper;
    var v6412 = v13323.circle;
    var v13324 = npos$$6.x;
    var v18615 = npos$$6.y;
    var v13325 = v18615 + dim2$$1;
    var v6413 = {x:v13324, y:v13325};
    var v6414 = dim2$$1 + 10;
    return v6412.contains(v6413, pos$$42, v6414);
  }
  function v588(node$$104, canvas$$42) {
    var dim$$13 = node$$104.getData("dim");
    var v13326 = node$$104.pos;
    var v6415 = v13326.getc(true);
    var pos$$41 = this.getAlignedPos(v6415, dim$$13, dim$$13);
    var dim2 = dim$$13 / 2;
    var v13327 = this.nodeHelper;
    var v6416 = v13327.circle;
    var v13328 = pos$$41.x;
    var v18616 = pos$$41.y;
    var v13329 = v18616 + dim2;
    var v6417 = {x:v13328, y:v13329};
    v6416.render("fill", v6417, dim2, canvas$$42);
    return;
  }
  function v587(viz$$30) {
    this.viz = viz$$30;
    return;
  }
  function v586(viz$$29) {
    this.viz = viz$$29;
    return;
  }
  function v585(tag$$4, node$$103, controller$$11) {
    var v13330 = node$$103.pos;
    var v6418 = v13330.getc(true);
    var pos$$40 = v6418.clone();
    var v6419 = this.viz;
    var config$$16 = v6419.config;
    var dim$$12 = config$$16.Node;
    var v6420 = this.viz;
    var canvas$$41 = v6420.canvas;
    var w$$10 = node$$103.getData("width");
    var h$$8 = node$$103.getData("height");
    var radius$$6 = canvas$$41.getSize();
    var labelPos;
    var orn$$8;
    var v6422 = config$$16.alignName;
    if (v6422) {
      var v13331 = this.viz;
      var v6421 = v13331.graph;
      pos$$40.x = v6421.maxXpos;
    }
    var ox$$5 = canvas$$41.translateOffsetX;
    var oy$$6 = canvas$$41.translateOffsetY;
    var sx$$6 = canvas$$41.scaleOffsetX;
    var sy$$6 = canvas$$41.scaleOffsetY;
    var v13332 = pos$$40.x;
    var v6423 = v13332 * sx$$6;
    var posx = v6423 + ox$$5;
    var v13333 = pos$$40.y;
    var v6424 = v13333 * sy$$6;
    var posy = v6424 + oy$$6;
    var v13334 = dim$$12.align;
    var v6429 = v13334 === "left";
    if (v6429) {
      var v13335 = posx + 10;
      var v6425 = Math.round(v13335);
      var v18617 = h$$8 / 2;
      var v13336 = posy - v18617;
      var v6426 = Math.round(v13336);
      labelPos = {x:v6425, y:v6426};
      var v18618 = controller$$11.alignName;
      var v13337 = !v18618;
      if (v13337) {
        var v22220 = node$$103.data;
        var v18619 = v22220.leaf;
        v13337 = !v18619;
      }
      var v6427 = v13337;
      if (v6427) {
        var v13338 = labelPos.x;
        var v13339 = controller$$11.collapsedXOffset;
        labelPos.x = v13338 + v13339;
      }
      var v6428 = tag$$4.style;
      v6428.textAlign = "left";
    } else {
      throw "align: not implemented";
    }
    var style$$6 = tag$$4.style;
    var v6430 = labelPos.x;
    style$$6.left = v6430 + "px";
    var v6431 = labelPos.y;
    style$$6.top = v6431 + "px";
    var v6432;
    var v13340 = this.fitsInCanvas(labelPos, canvas$$41);
    if (v13340) {
      v6432 = "inline";
    } else {
      v6432 = "none";
    }
    style$$6.display = v6432;
    controller$$11.onPlaceLabel(tag$$4, node$$103);
    return;
  }
  function v584(canvas$$40, node$$102, controller$$10) {
    var ctx$$19 = canvas$$40.getCtx();
    var v6433 = node$$102.pos;
    var coord = v6433.getc(true);
    var width$$24 = node$$102.getData("width");
    var height$$22 = node$$102.getData("height");
    var v13341 = this.viz;
    var v6434 = v13341.fx;
    var pos$$39 = v6434.getAlignedPos(coord, width$$24, height$$22);
    var v6435 = node$$102.name;
    var v13342 = pos$$39.x;
    var v13343 = width$$24 / 2;
    var v6436 = v13342 + v13343;
    var v13344 = pos$$39.y;
    var v13345 = height$$22 / 2;
    var v6437 = v13344 + v13345;
    ctx$$19.fillText(v6435, v6436, v6437);
    return;
  }
  function v583(adj$$23) {
    var config$$15 = this.config;
    var orn$$7 = config$$15.orientation;
    var v6439 = config$$15.multitree;
    if (v6439) {
      var nodeFrom$$5 = adj$$23.nodeFrom;
      var nodeTo$$7 = adj$$23.nodeTo;
      var v18620 = nodeFrom$$5.data;
      var v13346 = "$orn" in v18620;
      if (v13346) {
        var v18621 = nodeFrom$$5.data;
        v13346 = v18621.$orn;
      }
      var v6438 = v13346;
      var v13348 = !v6438;
      if (v13348) {
        var v18622 = nodeTo$$7.data;
        var v13347 = "$orn" in v18622;
        if (v13347) {
          var v18623 = nodeTo$$7.data;
          v13347 = v18623.$orn;
        }
        v6438 = v13347;
      }
      orn$$7 = v6438;
    }
    return orn$$7;
  }
  function v582(pos$$38, width$$23, height$$21) {
    var nconfig = this.node;
    var square;
    var orn$$6;
    var v13349 = nconfig.align;
    var v6456 = v13349 === "center";
    if (v6456) {
      var v13350 = pos$$38.x;
      var v13351 = width$$23 / 2;
      var v6440 = v13350 - v13351;
      var v13352 = pos$$38.y;
      var v13353 = height$$21 / 2;
      var v6441 = v13352 - v13353;
      square = {x:v6440, y:v6441};
    } else {
      var v13354 = nconfig.align;
      var v6455 = v13354 === "left";
      if (v6455) {
        var v6442 = this.config;
        orn$$6 = v6442.orientation;
        var v13355 = orn$$6 === "bottom";
        var v18624 = !v13355;
        if (v18624) {
          v13355 = orn$$6 === "top";
        }
        var v6447 = v13355;
        if (v6447) {
          var v13356 = pos$$38.x;
          var v13357 = width$$23 / 2;
          var v6443 = v13356 - v13357;
          var v6444 = pos$$38.y;
          square = {x:v6443, y:v6444};
        } else {
          var v6445 = pos$$38.x;
          var v13358 = pos$$38.y;
          var v13359 = height$$21 / 2;
          var v6446 = v13358 - v13359;
          square = {x:v6445, y:v6446};
        }
      } else {
        var v13360 = nconfig.align;
        var v6454 = v13360 === "right";
        if (v6454) {
          var v6448 = this.config;
          orn$$6 = v6448.orientation;
          var v13361 = orn$$6 === "bottom";
          var v18625 = !v13361;
          if (v18625) {
            v13361 = orn$$6 === "top";
          }
          var v6453 = v13361;
          if (v6453) {
            var v13362 = pos$$38.x;
            var v13363 = width$$23 / 2;
            var v6449 = v13362 - v13363;
            var v13364 = pos$$38.y;
            var v6450 = v13364 - height$$21;
            square = {x:v6449, y:v6450};
          } else {
            var v13365 = pos$$38.x;
            var v6451 = v13365 - width$$23;
            var v13366 = pos$$38.y;
            var v13367 = height$$21 / 2;
            var v6452 = v13366 - v13367;
            square = {x:v6451, y:v6452};
          }
        } else {
          throw "align: not implemented";
        }
      }
    }
    return square;
  }
  function v581(node$$101, opt$$26, scale$$1, animating$$6) {
    function v580(n$$55, ch$$13) {
      var v6457 = config$$14.multitree;
      if (v6457) {
        var v18626 = node$$101.data;
        var v13368 = "$orn" in v18626;
        v6457 = !v13368;
      }
      var root$$19 = v6457;
      var v6458 = root$$19;
      if (v6458) {
        v6458 = node$$101.getData("orns");
      }
      var orns$$3 = v6458;
      var v6459 = !root$$19;
      var v13370 = !v6459;
      if (v13370) {
        var v18627 = node$$101.getData("orn");
        var v13369 = orns$$3.indexOf(v18627);
        v6459 = v13369 > -1;
      }
      return v6459;
    }
    var viz$$28 = this.viz;
    var canvas$$39 = viz$$28.canvas;
    var config$$14 = viz$$28.config;
    var v6460 = Math.max(.001, scale$$1);
    scale$$1 = Math.min(v6460, 1);
    var v6464 = scale$$1 >= 0;
    if (v6464) {
      node$$101.drawn = false;
      var ctx$$18 = canvas$$39.getCtx();
      var v6461 = viz$$28.geom;
      var diff$$4 = v6461.getScaledTreePosition(node$$101, scale$$1);
      var v6462 = diff$$4.x;
      var v6463 = diff$$4.y;
      ctx$$18.translate(v6462, v6463);
      ctx$$18.scale(scale$$1, scale$$1);
    }
    var v22221 = !scale$$1;
    var v18628 = !v22221;
    var v13371 = {"withLabels":true, "hideLabels":v18628, "plotSubtree":v580};
    var v6465 = $$$1.merge(opt$$26, v13371);
    this.plotTree(node$$101, v6465, animating$$6);
    var v6466 = scale$$1 >= 0;
    if (v6466) {
      node$$101.drawn = true;
    }
    return;
  }
  function v579(node$$100, opt$$25, animating$$5) {
    function v578(elem$$59) {
      var v18629 = opt$$25.plotSubtree(node$$100, elem$$59);
      if (v18629) {
        v18629 = elem$$59.exist;
      }
      var v13372 = v18629;
      if (v13372) {
        v13372 = elem$$59.drawn;
      }
      var v6470 = v13372;
      if (v6470) {
        var v6467 = elem$$59.id;
        var adj$$22 = node$$100.getAdjacency(v6467);
        var v6468 = !animating$$5;
        if (v6468) {
          opt$$25.onBeforePlotLine(adj$$22);
        }
        that$$34.plotLine(adj$$22, canvas$$38, animating$$5);
        var v6469 = !animating$$5;
        if (v6469) {
          opt$$25.onAfterPlotLine(adj$$22);
        }
        that$$34.plotTree(elem$$59, opt$$25, animating$$5);
      }
      return;
    }
    var that$$34 = this;
    var viz$$27 = this.viz;
    var canvas$$38 = viz$$27.canvas;
    var config$$13 = this.config;
    var ctx$$17 = canvas$$38.getCtx();
    var nodeAlpha$$2 = node$$100.getData("alpha");
    var v18630 = viz$$27.clickedNode;
    var v13373 = v18630.id;
    var v13374 = node$$100.id;
    var v6471 = v13373 === v13374;
    if (v6471) {
      ctx$$17.save();
      ctx$$17.strokeStyle = "yellow";
    }
    node$$100.eachSubnode(v578);
    var v6478 = node$$100.drawn;
    if (v6478) {
      var v6472 = !animating$$5;
      if (v6472) {
        opt$$25.onBeforePlotNode(node$$100);
      }
      this.plotNode(node$$100, canvas$$38, animating$$5);
      var v6473 = !animating$$5;
      if (v6473) {
        opt$$25.onAfterPlotNode(node$$100);
      }
      var v22222 = opt$$25.hideLabels;
      var v18631 = !v22222;
      if (v18631) {
        v18631 = opt$$25.withLabels;
      }
      var v13375 = v18631;
      if (v13375) {
        v13375 = nodeAlpha$$2 >= .95;
      }
      var v6476 = v13375;
      if (v6476) {
        var v6474 = this.labels;
        v6474.plotLabel(canvas$$38, node$$100, opt$$25);
      } else {
        var v6475 = this.labels;
        v6475.hideLabel(node$$100, false);
      }
    } else {
      var v6477 = this.labels;
      v6477.hideLabel(node$$100, true);
    }
    var v18632 = viz$$27.clickedNode;
    var v13376 = v18632.id;
    var v13377 = node$$100.id;
    var v6479 = v13376 === v13377;
    if (v6479) {
      ctx$$17.restore();
    }
    return;
  }
  function v577(node$$99, action$$10, flags$$13) {
    function v576(node1, node2) {
      var v6480 = node1.data;
      var v18633 = node1.data;
      var v13378 = v18633.len;
      var v18634 = !v13378;
      if (v18634) {
        v13378 = 0;
      }
      v6480.len = v13378;
      var v6481 = node2.data;
      var v18635 = node2.data;
      var v13379 = v18635.len;
      var v18636 = !v13379;
      if (v18636) {
        v13379 = 0;
      }
      v6481.len = v13379;
      var v13380 = node1.data;
      var v6482 = v13380.len;
      var v13381 = node2.data;
      var v6483 = v13381.len;
      return v6482 - v6483;
    }
    var adj$$21 = node$$99.adjacencies;
    var filter$$5 = this.filter(flags$$13);
    var id$$35;
    var i$$84;
    var keys = new Array;
    var nodeList$$1 = new Array;
    for (id$$35 in adj$$21) {
      keys.push(id$$35);
      var v18637 = adj$$21[id$$35];
      var v13382 = v18637.nodeTo;
      var v6486 = node$$99 !== v13382;
      if (v6486) {
        var v13383 = adj$$21[id$$35];
        var v6484 = v13383.nodeTo;
        nodeList$$1.push(v6484);
      } else {
        var v13384 = adj$$21[id$$35];
        var v6485 = v13384.nodeFrom;
        nodeList$$1.push(v6485);
      }
    }
    var v6489 = isLateralise();
    if (v6489) {
      var cmp = v576;
      nodeList$$1 = nodeList$$1.sort(cmp);
      keys = new Array;
      i$$84 = 0;
      var v13385 = nodeList$$1.length;
      var v6488 = i$$84 < v13385;
      for (;v6488;) {
        var v13386 = nodeList$$1[i$$84];
        var v6487 = v13386.id;
        keys.push(v6487);
        i$$84 = i$$84 + 1;
        var v13387 = nodeList$$1.length;
        v6488 = i$$84 < v13387;
      }
    }
    var v13388 = node$$99.data;
    var v6490 = v13388.rotate;
    if (v6490) {
      keys = keys.reverse();
    }
    for (id$$35 in keys) {
      var v6494 = keys.hasOwnProperty(id$$35);
      if (v6494) {
        var v6491 = keys[id$$35];
        var a$$11 = adj$$21[v6491];
        var v6493 = filter$$5(a$$11);
        if (v6493) {
          var v13389 = a$$11.nodeFrom;
          var v6492 = v13389 !== node$$99;
          if (v6492) {
            var tmp$$2 = a$$11.nodeFrom;
            a$$11.nodeFrom = a$$11.nodeTo;
            a$$11.nodeTo = tmp$$2;
          }
          action$$10(a$$11, id$$35);
        }
      }
    }
    return;
  }
  function v575(node$$97, canvas$$37, level$$15) {
    function v574(level$$16, node$$98) {
      var v6495 = level$$16 === 0;
      var v13391 = !v6495;
      if (v13391) {
        var v13390 = node$$98.anySubnode();
        v6495 = !v13390;
      }
      return v6495;
    }
    var csize = canvas$$37.getSize();
    var v22223 = this.config;
    var v18638 = v22223.multitree;
    if (v18638) {
      var v22224 = node$$97.data;
      v18638 = "$orn" in v22224;
    }
    var v13392 = v18638;
    if (v13392) {
      var v18639 = node$$97.data;
      v13392 = v18639.$orn;
    }
    var v6496 = v13392;
    var v13394 = !v6496;
    if (v13394) {
      var v13393 = this.config;
      v6496 = v13393.orientation;
    }
    var s$$14 = v6496;
    var v6497 = csize.width;
    var v6498 = csize.height;
    var size$$10 = this.dispatch(s$$14, v6497, v6498);
    var baseSize = this.getTreeBaseSize(node$$97, level$$15, v574);
    return baseSize < size$$10;
  }
  function v573(node$$96, scale) {
    function $C$$2(a$$10, b$$7) {
      function v572() {
        var v13395 = node$$96.pos;
        var v13396 = new Complex(a$$10, b$$7);
        var v6499 = v13395.add(v13396);
        var v6500 = 1 - scale;
        return v6499.$scale(v6500);
      }
      return v572;
    }
    var dim$$11 = this.node;
    var w$$9 = node$$96.getData("width");
    var h$$7 = node$$96.getData("height");
    var v22225 = this.config;
    var v18640 = v22225.multitree;
    if (v18640) {
      var v22226 = node$$96.data;
      v18640 = "$orn" in v22226;
    }
    var v13397 = v18640;
    if (v13397) {
      var v18641 = node$$96.data;
      v13397 = v18641.$orn;
    }
    var v6501 = v13397;
    var v13399 = !v6501;
    if (v13399) {
      var v13398 = this.config;
      v6501 = v13398.orientation;
    }
    var s$$13 = v6501;
    var v13400 = dim$$11.align;
    var v6516 = v13400 === "left";
    if (v6516) {
      var v6502 = $C$$2(0, h$$7);
      var v6503 = $C$$2(0, 0);
      var v6504 = $C$$2(0, 0);
      var v6505 = $C$$2(w$$9, 0);
      return this.dispatch(s$$13, v6502, v6503, v6504, v6505);
    } else {
      var v13401 = dim$$11.align;
      var v6515 = v13401 === "center";
      if (v6515) {
        var v13402 = h$$7 / 2;
        var v6506 = $C$$2(0, v13402);
        var v18642 = -w$$9;
        var v13403 = v18642 / 2;
        var v6507 = $C$$2(v13403, 0);
        var v18643 = -h$$7;
        var v13404 = v18643 / 2;
        var v6508 = $C$$2(0, v13404);
        var v13405 = w$$9 / 2;
        var v6509 = $C$$2(v13405, 0);
        return this.dispatch(s$$13, v6506, v6507, v6508, v6509);
      } else {
        var v13406 = dim$$11.align;
        var v6514 = v13406 === "right";
        if (v6514) {
          var v6510 = $C$$2(0, 0);
          var v13407 = -w$$9;
          var v6511 = $C$$2(v13407, 0);
          var v13408 = -h$$7;
          var v6512 = $C$$2(0, v13408);
          var v6513 = $C$$2(0, 0);
          return this.dispatch(s$$13, v6510, v6511, v6512, v6513);
        } else {
          throw "align: not implemented";
        }
      }
    }
    return;
  }
  function v571(node$$95, type$$57, s$$12) {
    function $C$$1(a$$9, b$$6) {
      function v570() {
        var v6517 = node$$95.pos;
        var v6518 = new Complex(a$$9, b$$6);
        return v6517.add(v6518);
      }
      return v570;
    }
    var dim$$10 = this.node;
    var w$$8 = node$$95.getData("width");
    var h$$6 = node$$95.getData("height");
    var v6550 = type$$57 === "begin";
    if (v6550) {
      var v13409 = dim$$10.align;
      var v6533 = v13409 === "center";
      if (v6533) {
        var v13410 = h$$6 / 2;
        var v6519 = $C$$1(0, v13410);
        var v18644 = -w$$8;
        var v13411 = v18644 / 2;
        var v6520 = $C$$1(v13411, 0);
        var v18645 = -h$$6;
        var v13412 = v18645 / 2;
        var v6521 = $C$$1(0, v13412);
        var v13413 = w$$8 / 2;
        var v6522 = $C$$1(v13413, 0);
        return this.dispatch(s$$12, v6519, v6520, v6521, v6522);
      } else {
        var v13414 = dim$$10.align;
        var v6532 = v13414 === "left";
        if (v6532) {
          var v6523 = $C$$1(0, h$$6);
          var v6524 = $C$$1(0, 0);
          var v6525 = $C$$1(0, 0);
          var v6526 = $C$$1(w$$8, 0);
          return this.dispatch(s$$12, v6523, v6524, v6525, v6526);
        } else {
          var v13415 = dim$$10.align;
          var v6531 = v13415 === "right";
          if (v6531) {
            var v6527 = $C$$1(0, 0);
            var v13416 = -w$$8;
            var v6528 = $C$$1(v13416, 0);
            var v13417 = -h$$6;
            var v6529 = $C$$1(0, v13417);
            var v6530 = $C$$1(0, 0);
            return this.dispatch(s$$12, v6527, v6528, v6529, v6530);
          } else {
            throw "align: not implemented";
          }
        }
      }
    } else {
      var v6549 = type$$57 === "end";
      if (v6549) {
        var v13418 = dim$$10.align;
        var v6548 = v13418 === "center";
        if (v6548) {
          var v18646 = -h$$6;
          var v13419 = v18646 / 2;
          var v6534 = $C$$1(0, v13419);
          var v13420 = w$$8 / 2;
          var v6535 = $C$$1(v13420, 0);
          var v13421 = h$$6 / 2;
          var v6536 = $C$$1(0, v13421);
          var v18647 = -w$$8;
          var v13422 = v18647 / 2;
          var v6537 = $C$$1(v13422, 0);
          return this.dispatch(s$$12, v6534, v6535, v6536, v6537);
        } else {
          var v13423 = dim$$10.align;
          var v6547 = v13423 === "left";
          if (v6547) {
            var v6538 = $C$$1(0, 0);
            var v6539 = $C$$1(w$$8, 0);
            var v6540 = $C$$1(0, h$$6);
            var v6541 = $C$$1(0, 0);
            return this.dispatch(s$$12, v6538, v6539, v6540, v6541);
          } else {
            var v13424 = dim$$10.align;
            var v6546 = v13424 === "right";
            if (v6546) {
              var v13425 = -h$$6;
              var v6542 = $C$$1(0, v13425);
              var v6543 = $C$$1(0, 0);
              var v6544 = $C$$1(0, 0);
              var v13426 = -w$$8;
              var v6545 = $C$$1(v13426, 0);
              return this.dispatch(s$$12, v6542, v6543, v6544, v6545);
            } else {
              throw "align: not implemented";
            }
          }
        }
      }
    }
    return;
  }
  function v569(node$$94, level$$14, leaf) {
    function v568(elem$$58) {
      var v13427 = baseHeight;
      var v18648 = level$$14 - 1;
      var v13428 = that$$33.getTreeBaseSize(elem$$58, v18648, leaf);
      baseHeight = v13427 + v13428;
      return;
    }
    var size$$9 = this.getSize(node$$94, true);
    var baseHeight = 0;
    var that$$33 = this;
    var v6551 = leaf(level$$14, node$$94);
    if (v6551) {
      return size$$9;
    }
    var v6552 = level$$14 === 0;
    if (v6552) {
      return 0;
    }
    node$$94.eachSubnode(v568);
    var v13429;
    var v18649 = size$$9 > baseHeight;
    if (v18649) {
      v13429 = size$$9;
    } else {
      v13429 = baseHeight;
    }
    var v6553 = v13429;
    var v13430 = this.config;
    var v6554 = v13430.subtreeOffset;
    return v6553 + v6554;
  }
  function v567(n$$54, invert$$1) {
    var data$$27 = n$$54.data;
    var config$$12 = this.config;
    var siblingOffset$$1 = config$$12.siblingOffset;
    var v18650 = config$$12.multitree;
    if (v18650) {
      v18650 = "$orn" in data$$27;
    }
    var v13431 = v18650;
    if (v13431) {
      v13431 = data$$27.$orn;
    }
    var v6555 = v13431;
    var v13432 = !v6555;
    if (v13432) {
      v6555 = config$$12.orientation;
    }
    var s$$11 = v6555;
    var v6556 = n$$54.getData("width");
    var w$$7 = v6556 + siblingOffset$$1;
    var v6557 = n$$54.getData("height");
    var h$$5 = v6557 + siblingOffset$$1;
    var v6558 = !invert$$1;
    if (v6558) {
      return this.dispatch(s$$11, h$$5, w$$7);
    } else {
      return this.dispatch(s$$11, w$$7, h$$5);
    }
    return;
  }
  function v566() {
    function val$$6(a$$8) {
      var v6559;
      var v18651 = typeof a$$8;
      var v13433 = v18651 === "function";
      if (v13433) {
        v6559 = a$$8();
      } else {
        v6559 = a$$8;
      }
      return v6559;
    }
    var v13434 = Array.prototype;
    var v6560 = v13434.slice;
    var args$$3 = v6560.call(arguments);
    var s$$10 = args$$3.shift();
    var len$$6 = args$$3.length;
    var v6567 = len$$6 === 2;
    if (v6567) {
      var v6561;
      var v18652 = s$$10 === "top";
      var v22227 = !v18652;
      if (v22227) {
        v18652 = s$$10 === "bottom";
      }
      var v13437 = v18652;
      if (v13437) {
        var v13435 = args$$3[0];
        v6561 = val$$6(v13435);
      } else {
        var v13436 = args$$3[1];
        v6561 = val$$6(v13436);
      }
      return v6561;
    } else {
      var v6566 = len$$6 === 4;
      if (v6566) {
        switch(s$$10) {
          case "top":
            var v6562 = args$$3[0];
            return val$$6(v6562);
          case "right":
            var v6563 = args$$3[1];
            return val$$6(v6563);
          case "bottom":
            var v6564 = args$$3[2];
            return val$$6(v6564);
          case "left":
            var v6565 = args$$3[3];
            return val$$6(v6565);
        }
      }
    }
    return undefined;
  }
  function v565(orn$$5) {
    var v6568 = this.config;
    v6568.orientation = orn$$5;
    return;
  }
  function v564(nodes$$11) {
    function v563(n$$53) {
      function v562(sn$$1) {
        ans$$17.push(sn$$1);
        return;
      }
      var par$$1 = n$$53.getParents();
      var v13438 = par$$1.length;
      var v6572 = v13438 === 0;
      if (v6572) {
        var v6569 = n$$53.id;
        siblings[v6569] = [n$$53];
      } else {
        var ans$$17 = [];
        var v6570 = par$$1[0];
        v6570.eachSubnode(v562);
        var v6571 = n$$53.id;
        siblings[v6571] = ans$$17;
      }
      return;
    }
    var siblings = {};
    $$$1.each(nodes$$11, v563);
    return siblings;
  }
  function v561(delta$$23, controller$$9, animating$$4) {
    function v560(n$$52) {
      n$$52.drawn = true;
      return;
    }
    function v559(n$$51) {
      var v18653 = root$$18 && orns$$2;
      if (v18653) {
        var v27678 = n$$51.data;
        var v26112 = v27678.$orn;
        var v22228 = orns$$2.indexOf(v26112);
        v18653 = v22228 > 0;
      }
      var v13439 = v18653;
      if (v13439) {
        v13439 = n$$51.drawn;
      }
      var v6576 = v13439;
      if (v6576) {
        n$$51.drawn = false;
        var v13440 = node$$93.id;
        var v6573 = nds[v13440];
        v6573.push(n$$51);
      } else {
        var v18654 = !root$$18;
        var v22229 = !v18654;
        if (v22229) {
          v18654 = !orns$$2;
        }
        var v13441 = v18654;
        if (v13441) {
          v13441 = n$$51.drawn;
        }
        var v6575 = v13441;
        if (v6575) {
          n$$51.drawn = false;
          var v13442 = node$$93.id;
          var v6574 = nds[v13442];
          v6574.push(n$$51);
        }
      }
      return;
    }
    var viz$$26 = this.viz;
    var config$$11 = this.config;
    var canvas$$36 = viz$$26.canvas;
    var ctx$$16 = canvas$$36.getCtx();
    var nodes$$10 = this.nodes;
    var i$$83;
    var node$$93;
    var nds = {};
    i$$83 = 0;
    var v13443 = nodes$$10.length;
    var v6580 = i$$83 < v13443;
    for (;v6580;) {
      node$$93 = nodes$$10[i$$83];
      var v6577 = node$$93.id;
      nds[v6577] = [];
      var v6578 = config$$11.multitree;
      if (v6578) {
        var v18655 = node$$93.data;
        var v13444 = "$orn" in v18655;
        v6578 = !v13444;
      }
      var root$$18 = v6578;
      var v6579 = root$$18;
      if (v6579) {
        var v13445 = node$$93.data;
        v6579 = v13445.$orns;
      }
      var orns$$2 = v6579;
      node$$93.eachSubgraph(v559);
      node$$93.drawn = true;
      i$$83 = i$$83 + 1;
      var v13446 = nodes$$10.length;
      v6580 = i$$83 < v13446;
    }
    var v13447 = nodes$$10.length;
    var v6582 = v13447 > 0;
    if (v6582) {
      var v6581 = viz$$26.fx;
      v6581.plot();
    }
    for (i$$83 in nds) {
      var v6583 = nds[i$$83];
      $$$1.each(v6583, v560);
    }
    i$$83 = 0;
    var v13448 = nodes$$10.length;
    var v6585 = i$$83 < v13448;
    for (;v6585;) {
      node$$93 = nodes$$10[i$$83];
      ctx$$16.save();
      var v6584 = viz$$26.fx;
      v6584.plotSubtree(node$$93, controller$$9, delta$$23, animating$$4);
      ctx$$16.restore();
      i$$83 = i$$83 + 1;
      var v13449 = nodes$$10.length;
      v6585 = i$$83 < v13449;
    }
    return;
  }
  function v558(nodes$$9) {
    function v557(a$$7, b$$5) {
      var v13450 = a$$7._depth;
      var v13451 = b$$5._depth;
      var v6586 = v13450 <= v13451;
      var v13452 = a$$7._depth;
      var v13453 = b$$5._depth;
      var v6587 = v13452 >= v13453;
      return v6586 - v6587;
    }
    var ans$$16 = [];
    var config$$10 = this.config;
    var v6588 = this.viz;
    var root$$17 = v6588.root;
    var i$$82;
    var j$$13;
    var desc;
    nodes$$9.sort(v557);
    i$$82 = 0;
    var v13454 = nodes$$9.length;
    var v6595 = i$$82 < v13454;
    for (;v6595;) {
      var v13455 = nodes$$9[i$$82];
      var v6594 = v13455.anySubnode("exist");
      if (v6594) {
        j$$13 = i$$82 + 1;
        desc = false;
        var v13456 = !desc;
        if (v13456) {
          var v18656 = nodes$$9.length;
          v13456 = j$$13 < v18656;
        }
        var v6591 = v13456;
        for (;v6591;) {
          var v18657 = config$$10.multitree;
          var v13457 = !v18657;
          var v18659 = !v13457;
          if (v18659) {
            var v22230 = nodes$$9[j$$13];
            var v18658 = v22230.data;
            v13457 = "$orn" in v18658;
          }
          var v6590 = v13457;
          if (v6590) {
            var v6589 = desc;
            var v13460 = !v6589;
            if (v13460) {
              var v13458 = nodes$$9[i$$82];
              var v18660 = nodes$$9[j$$13];
              var v13459 = v18660.id;
              v6589 = v13458.isDescendantOf(v13459);
            }
            desc = v6589;
          }
          j$$13 = j$$13 + 1;
          var v13461 = !desc;
          if (v13461) {
            var v18661 = nodes$$9.length;
            v13461 = j$$13 < v18661;
          }
          v6591 = v13461;
        }
        var v6593 = !desc;
        if (v6593) {
          var v6592 = nodes$$9[i$$82];
          ans$$16.push(v6592);
        }
      }
      i$$82 = i$$82 + 1;
      var v13462 = nodes$$9.length;
      v6595 = i$$82 < v13462;
    }
    return ans$$16;
  }
  function v556(nodes$$8) {
    var v31149 = this.getNodesWithChildren(nodes$$8);
    this.nodes = v31149;
    return this.nodes;
  }
  function v555(nodes$$7) {
    function v554(n$$49) {
      function v553(n$$50) {
        var v6596 = n$$50.exist;
        if (v6596) {
          n$$50.drawn = true;
        }
        return;
      }
      function v552(ch$$12) {
        var v26113 = ch$$12.data;
        var v22231 = "$orn" in v26113;
        if (v22231) {
          var v28668 = ch$$12.data;
          var v27679 = v28668.$orn;
          var v26114 = orns$$1.indexOf(v27679);
          v22231 = v26114 < 0;
        }
        var v18662 = v22231;
        if (v18662) {
          v18662 = ch$$12.exist;
        }
        var v13463 = v18662;
        if (v13463) {
          var v18663 = ch$$12.drawn;
          v13463 = !v18663;
        }
        var v6597 = v13463;
        if (v6597) {
          var v22232 = ch$$12.data;
          var v18664 = v22232.$orn;
          var v13464 = v18664 + " ";
          orns$$1 = orns$$1 + v13464;
        }
        return;
      }
      var v13465 = config$$9.multitree;
      if (v13465) {
        var v22233 = n$$49.data;
        var v18665 = "$orn" in v22233;
        v13465 = !v18665;
      }
      var v6600 = v13465;
      if (v6600) {
        var v6598 = n$$49.data;
        delete v6598.$orns;
        var orns$$1 = " ";
        n$$49.eachSubnode(v552);
        var v6599 = n$$49.data;
        v6599.$orns = orns$$1;
      }
      var v6601 = config$$9.levelsToShow;
      n$$49.eachLevel(0, v6601, v553);
      return;
    }
    var config$$9 = this.config;
    this.prepare(nodes$$7);
    $$$1.each(nodes$$7, v554);
    return;
  }
  function v551(nodes$$6, controller$$8) {
    function v550() {
      that$$32.plotStep(undefined, controller$$8, false);
      controller$$8.onComplete();
      return;
    }
    function v549(delta$$22) {
      var v6602 = this.$animating;
      that$$32.plotStep(delta$$22, controller$$8, v6602);
      this.$animating = "expand";
      return;
    }
    var that$$32 = this;
    this.show(nodes$$6);
    var v13466 = this.animation;
    var v18666 = {$animating:false, compute:v549, complete:v550};
    var v13467 = $$$1.merge(controller$$8, v18666);
    var v6603 = v13466.setOptions(v13467);
    v6603.start();
    return;
  }
  function v548(nodes$$5, controller$$7) {
    function v547(n$$48) {
      var v6604 = n$$48.id;
      ids$$1.push(v6604);
      return;
    }
    function v546(elem$$57) {
      var v6606 = elem$$57.exist;
      if (v6606) {
        var v6605 = {"drawn":false, "exist":false};
        $$$1.extend(elem$$57, v6605);
      }
      return;
    }
    var viz$$25 = this.viz;
    var i$$81;
    i$$81 = 0;
    var v13468 = nodes$$5.length;
    var v6613 = i$$81 < v13468;
    for (;v6613;) {
      var v18667 = true;
      var v22234 = !v18667;
      if (v22234) {
        v18667 = !controller$$7;
      }
      var v13469 = v18667;
      var v18669 = !v13469;
      if (v18669) {
        var v18668 = controller$$7.request;
        v13469 = !v18668;
      }
      var v6612 = v13469;
      if (v6612) {
        var v6607 = nodes$$5[i$$81];
        v6607.eachLevel(1, false, v546);
      } else {
        var ids$$1 = [];
        var v6608 = nodes$$5[i$$81];
        v6608.eachLevel(1, false, v547);
        var v6609 = viz$$25.op;
        var v6610 = {"type":"nothing"};
        v6609.removeNode(ids$$1, v6610);
        var v6611 = viz$$25.labels;
        v6611.clearLabels();
      }
      i$$81 = i$$81 + 1;
      var v13470 = nodes$$5.length;
      v6613 = i$$81 < v13470;
    }
    controller$$7.onComplete();
    return;
  }
  function v545(nodes$$4, controller$$6) {
    function v544() {
      that$$31.hide(nodes$$4, controller$$6);
      return;
    }
    function v543(delta$$21) {
      var v6614 = delta$$21 === 1;
      if (v6614) {
        delta$$21 = .99;
      }
      var v6615 = 1 - delta$$21;
      var v6616 = this.$animating;
      that$$31.plotStep(v6615, controller$$6, v6616);
      this.$animating = "contract";
      return;
    }
    var viz$$24 = this.viz;
    var that$$31 = this;
    nodes$$4 = this.prepare(nodes$$4);
    var v13471 = this.animation;
    var v18670 = {$animating:false, compute:v543, complete:v544};
    var v13472 = $$$1.merge(controller$$6, v18670);
    var v6617 = v13471.setOptions(v13472);
    v6617.start();
    return;
  }
  function v542(nodes$$3, controller$$5) {
    function v541(nodeId, data$$26) {
      var v13473 = data$$26;
      if (v13473) {
        v13473 = data$$26.children;
      }
      var v6620 = v13473;
      if (v6620) {
        data$$26.id = nodeId;
        var v6618 = viz$$23.op;
        var v6619 = {type:"nothing"};
        v6618.sum(data$$26, v6619);
      }
      var v13474 = counter = counter + 1;
      var v6623 = v13474 === len$$5;
      if (v6623) {
        var v6621 = viz$$23.graph;
        var v6622 = viz$$23.root;
        v6621.computeLevels(v6622, 0);
        controller$$5.onComplete();
      }
      return;
    }
    var counter = 0;
    var len$$5 = nodes$$3.length;
    var nodeSelected = {};
    var i$$80;
    var viz$$23 = this.viz;
    var v6624 = len$$5 === 0;
    if (v6624) {
      controller$$5.onComplete();
    }
    i$$80 = 0;
    var v6629 = i$$80 < len$$5;
    for (;v6629;) {
      var v13475 = nodes$$3[i$$80];
      var v6625 = v13475.id;
      nodeSelected[v6625] = nodes$$3[i$$80];
      var v13476 = nodes$$3[i$$80];
      var v6626 = v13476.id;
      var v13477 = nodes$$3[i$$80];
      var v6627 = v13477._level;
      var v6628 = {onComplete:v541};
      controller$$5.request(v6626, v6627, v6628);
      i$$80 = i$$80 + 1;
      v6629 = i$$80 < len$$5;
    }
    return;
  }
  function v540(viz$$22) {
    this.viz = viz$$22;
    this.canvas = viz$$22.canvas;
    this.config = viz$$22.config;
    var v31150 = new Animation;
    this.animation = v31150;
    this.nodes = null;
    return;
  }
  function v539() {
    function v538(id$$34, options$$11) {
      var canvas$$35 = this.canvas;
      var that$$30 = this;
      var Geom$$3 = this.geom;
      var config$$8 = this.config;
      var v18671 = config$$8.offsetX;
      var v22235 = !v18671;
      if (v22235) {
        v18671 = 0;
      }
      var v13478 = v18671;
      var v18672 = config$$8.offsetY;
      var v22236 = !v18672;
      if (v22236) {
        v18672 = 0;
      }
      var v13479 = v18672;
      var v6630 = {enable:true, offsetX:v13478, offsetY:v13479};
      var v6631 = $$$1.empty;
      var v6632 = $$$1.empty;
      var v6633 = $$$1.empty;
      var v6634 = $$$1.empty;
      var innerController = {Move:v6630, setRightLevelToShowConfig:false, onBeforeRequest:v6631, onBeforeContract:v6632, onBeforeMove:v6633, onBeforeExpand:v6634};
      var v6635 = this.controller;
      var complete$$1 = $$$1.merge(v6635, innerController, options$$11);
      var v13480 = this.busy;
      var v6640 = !v13480;
      if (v6640) {
        this.busy = true;
        var v6636 = this.graph;
        var node$$92 = v6636.getNode(id$$34);
        var v6637 = this.clickedNode;
        this.selectPath(node$$92, v6637);
        this.clickedNode = node$$92;
        complete$$1.onBeforeCompute(node$$92);
        complete$$1.onBeforeRequest(node$$92);
        complete$$1.onBeforeContract(node$$92);
        var v6638 = complete$$1.setRightLevelToShowConfig;
        Geom$$3.setRightLevelToShow(node$$92, canvas$$35, v6638);
        complete$$1.onBeforeMove(node$$92);
        var nodes$$2 = getNodesToShow.call(this, node$$92);
        var v6639 = that$$30.group;
        v6639.show(nodes$$2);
        that$$30.computePositions(node$$92, "");
        complete$$1.onAfterCompute(id$$34);
        this.busy = false;
      }
      return;
    }
    function v537(id$$33, onComplete$$9) {
      function v536() {
        function v535(n$$47) {
          var v6641 = n$$47.pos;
          var pos$$37 = v6641.getc(true);
          var v6642 = n$$47.startPos;
          var v6643 = pos$$37.x;
          var v6644 = pos$$37.y;
          v6642.setc(v6643, v6644);
          var v6645 = n$$47.endPos;
          var v6646 = pos$$37.x;
          var v6647 = pos$$37.y;
          v6645.setc(v6646, v6647);
          n$$47.visited = false;
          return;
        }
        var v13481 = getNodesToHide.call(that$$29);
        var v6648 = group$$1.prepare(v13481);
        group$$1.hide(v6648, complete);
        geom$$5.setRightLevelToShow(node$$91, canvas$$34);
        that$$29.compute("current");
        var v6649 = that$$29.graph;
        v6649.eachNode(v535);
        var v6650 = complete.offsetX;
        var v6651 = complete.offsetY;
        var offset$$11 = {x:v6650, y:v6651};
        var v6652 = that$$29.geom;
        var v18673 = node$$91.endPos;
        var v13482 = v18673.add(offset$$11);
        var v6653 = v13482.$scale(-1);
        var v6654 = ["start", "current", "end"];
        v6652.translate(v6653, v6654);
        var v6655 = getNodesToShow.call(that$$29);
        group$$1.show(v6655);
        that$$29.plot();
        var v6656 = that$$29.clickedNode;
        complete.onAfterCompute(v6656);
        complete.onComplete();
        return;
      }
      var group$$1 = this.group;
      var geom$$5 = this.geom;
      var v6657 = this.graph;
      var node$$91 = v6657.getNode(id$$33);
      var canvas$$34 = this.canvas;
      var v6658 = this.graph;
      var v6659 = this.root;
      var root$$16 = v6658.getNode(v6659);
      var v6660 = this.controller;
      var complete = $$$1.merge(v6660, onComplete$$9);
      var that$$29 = this;
      complete.onBeforeCompute(node$$91);
      this.selectPath(node$$91);
      this.clickedNode = node$$91;
      var v6661 = {onComplete:v536};
      this.requestNodes(node$$91, v6661);
      return;
    }
    function v534(id$$32, removeRoot, method$$6, onComplete$$8) {
      function v533(n$$46) {
        var v6662 = n$$46.id;
        subids.push(v6662);
        return;
      }
      var v6663 = this.graph;
      var node$$90 = v6663.getNode(id$$32);
      var subids = [];
      var v13483 = !removeRoot;
      var v6664 = +v13483;
      node$$90.eachLevel(v6664, false, v533);
      var v6670 = method$$6 === "replot";
      if (v6670) {
        var v6665 = this.op;
        var v13484 = {type:"replot"};
        var v13485 = onComplete$$8 || {};
        var v6666 = $$$1.extend(v13484, v13485);
        v6665.removeNode(subids, v6666);
      } else {
        var v6669 = method$$6 === "animate";
        if (v6669) {
          var v6667 = this.op;
          var v13486 = {type:"fade:seq"};
          var v13487 = onComplete$$8 || {};
          var v6668 = $$$1.extend(v13486, v13487);
          v6667.removeNode(subids, v6668);
        }
      }
      return;
    }
    function v532(subtree$$2, method$$5, onComplete$$7) {
      var v6676 = method$$5 === "replot";
      if (v6676) {
        var v6671 = this.op;
        var v13488 = {type:"replot"};
        var v13489 = onComplete$$7 || {};
        var v6672 = $$$1.extend(v13488, v13489);
        v6671.sum(subtree$$2, v6672);
      } else {
        var v6675 = method$$5 === "animate";
        if (v6675) {
          var v6673 = this.op;
          var v13490 = {type:"fade:seq"};
          var v13491 = onComplete$$7 || {};
          var v6674 = $$$1.extend(v13490, v13491);
          v6673.sum(subtree$$2, v6674);
        }
      }
      return;
    }
    function v531(id$$31, method$$4, onComplete$$6) {
      function $setRoot() {
        function v530() {
          that$$28.busy = false;
          return;
        }
        this.root = id$$31;
        var v6677 = this.graph;
        var node$$89 = v6677.getNode(id$$31);
        this.clickedNode = clickedNode;
        var v6678 = this.graph;
        var v6679 = this.root;
        v6678.computeLevels(v6679, 0, "ignore");
        node$$89.collapsed = true;
        this.nodesExpCol(node$$89);
        this.computePositions(node$$89, "end", true);
        var v13492 = this.graph;
        var v6680 = v13492.getNode(id$$31);
        this.computeLeaves(v6680, 0);
        var v13493 = this.graph;
        var v6681 = v13493.getNode(id$$31);
        this.fitchParsimony(v6681);
        this.colorCharacter();
        var v6682 = this.fx;
        var v13494 = ["linear", "node-property:alpha"];
        var v6683 = {modes:v13494, onComplete:v530};
        v6682.animate(v6683);
        return;
      }
      var v6684 = this.busy;
      if (v6684) {
        return;
      }
      this.busy = true;
      var that$$28 = this;
      var canvas$$33 = this.canvas;
      var v6685 = this.graph;
      var clickedNode = v6685.getNode(id$$31);
      var v6687 = method$$4 === "animate";
      if (v6687) {
        $setRoot.call(this);
      } else {
        var v6686 = method$$4 === "replot";
        if (v6686) {
          $setRoot.call(this);
        }
      }
      var v18674 = this.graph;
      var v13495 = v18674.depth;
      var v6688 = v13495.length;
      this.zoomIndex = v6688 - 1;
      return;
    }
    function v529(node$$87) {
      function v528(n$$45) {
        n$$45.selected = false;
        return;
      }
      function path(node$$88) {
        function v527(n$$44) {
          n$$44.exist = true;
          n$$44.drawn = true;
          return;
        }
        var v13496 = node$$88 === null;
        var v18675 = !v13496;
        if (v18675) {
          v13496 = node$$88.selected;
        }
        var v6689 = v13496;
        if (v6689) {
          return;
        }
        node$$88.selected = true;
        var v18676 = that$$27.group;
        var v18677 = [node$$88];
        var v13497 = v18676.getSiblings(v18677);
        var v13498 = node$$88.id;
        var v6690 = v13497[v13498];
        $$$1.each(v6690, v527);
        var parents = node$$88.getParents();
        var v6691;
        var v18678 = parents.length;
        var v13499 = v18678 > 0;
        if (v13499) {
          v6691 = parents[0];
        } else {
          v6691 = null;
        }
        parents = v6691;
        path(parents);
        return;
      }
      var that$$27 = this;
      var i$$79;
      var ns$$1;
      var v6692 = this.graph;
      v6692.eachNode(v528);
      i$$79 = 0;
      var v18679 = node$$87.id;
      var v13500 = [v18679];
      ns$$1 = v13500.concat(nodesInPath);
      var v13501 = ns$$1.length;
      var v6694 = i$$79 < v13501;
      for (;v6694;) {
        var v13502 = this.graph;
        var v13503 = ns$$1[i$$79];
        var v6693 = v13502.getNode(v13503);
        path(v6693);
        i$$79 = i$$79 + 1;
        var v13504 = ns$$1.length;
        v6694 = i$$79 < v13504;
      }
      return;
    }
    function v526(node$$86, onComplete$$5) {
      var nodeArray$$2 = getNodesToShow.call(this, node$$86);
      var v6695 = this.group;
      var v13505 = this.controller;
      var v6696 = $$$1.merge(v13505, onComplete$$5);
      v6695.expand(nodeArray$$2, v6696);
      return;
    }
    function v525(node$$85, onComplete$$4) {
      this.compute("end", false);
      var move = onComplete$$4.Move;
      var JSCompiler_object_inline_x_88 = move.offsetX;
      var JSCompiler_object_inline_y_89 = move.offsetY;
      var v6697 = this.fx;
      var v13506 = this.controller;
      var v18680 = ["linear"];
      var v13507 = {modes:v18680};
      var v6698 = $$$1.merge(v13506, v13507, onComplete$$4);
      v6697.animate(v6698);
      return;
    }
    function v524(onComplete$$3, switched) {
      var v6699 = this.config;
      var orn$$4 = v6699.orientation;
      var Geom$$2 = this.geom;
      var Group = this.group;
      if (switched) {
        Geom$$2.switchOrientation(switched);
      }
      var nodes$$1 = getNodesToHide.call(this);
      if (switched) {
        Geom$$2.switchOrientation(orn$$4);
      }
      var v13508 = this.controller;
      var v6700 = $$$1.merge(v13508, onComplete$$3);
      Group.contract(nodes$$1, v6700);
      return;
    }
    function v523(node$$84, onComplete$$2) {
      function v522(n$$43) {
        var v13509 = n$$43.drawn;
        if (v13509) {
          var v18681 = n$$43.anySubnode();
          v13509 = !v18681;
        }
        var v6702 = v13509;
        if (v6702) {
          leaves$$2.push(n$$43);
          var v13510 = n$$43._depth;
          var v6701 = v13510 - d$$5;
          n$$43._level = lev - v6701;
        }
        return;
      }
      var v6703 = this.controller;
      var handler$$3 = $$$1.merge(v6703, onComplete$$2);
      var v6704 = this.config;
      var lev = v6704.levelsToShow;
      var v6706 = handler$$3.request;
      if (v6706) {
        var leaves$$2 = [];
        var d$$5 = node$$84._depth;
        node$$84.eachLevel(0, lev, v522);
        var v6705 = this.group;
        v6705.requestNodes(leaves$$2, handler$$3);
      } else {
        handler$$3.onComplete();
      }
      return;
    }
    function v521() {
      function v520(n$$42) {
        var v6707 = n$$42.exist;
        if (v6707) {
          n$$42.drawn = true;
        }
        return;
      }
      var v6708 = this.graph;
      var v6709 = this.root;
      v6708.computeLevels(v6709, 0, "ignore");
      var v6710 = this.geom;
      var v6711 = this.clickedNode;
      var v6712 = this.canvas;
      v6710.setRightLevelToShow(v6711, v6712);
      var v6713 = this.graph;
      v6713.eachNode(v520);
      this.compute("end");
      return;
    }
    function v519() {
      this.reposition();
      var v18682 = this.clickedNode;
      if (v18682) {
        var v22237 = this.clickedNode;
        v18682 = v22237.id;
      }
      var v13511 = v18682;
      var v18683 = !v13511;
      if (v18683) {
        v13511 = this.root;
      }
      var v6714 = v13511;
      this.select(v6714);
      return;
    }
    function v518(id$$30) {
      nodesInPath.length = 0;
      var v18684 = this.clickedNode;
      if (v18684) {
        var v22238 = this.clickedNode;
        v18684 = v22238.id;
      }
      var v13512 = v18684;
      var v18685 = !v13512;
      if (v18685) {
        v13512 = this.root;
      }
      var v6715 = v13512;
      this.select(v6715);
      return;
    }
    function v517(id$$29) {
      nodesInPath.push(id$$29);
      var v18686 = this.clickedNode;
      if (v18686) {
        var v22239 = this.clickedNode;
        v18686 = v22239.id;
      }
      var v13513 = v18686;
      var v18687 = !v13513;
      if (v18687) {
        v13513 = this.root;
      }
      var v6716 = v13513;
      this.select(v6716);
      return;
    }
    function v516(align$$2, method$$3, onComplete$$1) {
      var v6717 = this.config;
      v6717.align = align$$2;
      var v6721 = method$$3 === "animate";
      if (v6721) {
        var v13514 = this.clickedNode;
        var v6718 = v13514.id;
        this.select(v6718, onComplete$$1);
      } else {
        var v6720 = method$$3 === "replot";
        if (v6720) {
          var v13515 = this.clickedNode;
          var v6719 = v13515.id;
          this.onClick(v6719, onComplete$$1);
        }
      }
      return;
    }
    function v515(pos$$36, method$$2, onComplete) {
      function v514() {
        Geom$$1.switchOrientation(pos$$36);
        that$$26.compute("end", false);
        Plot.busy = false;
        var v6725 = method$$2 === "animate";
        if (v6725) {
          var v13516 = that$$26.clickedNode;
          var v6722 = v13516.id;
          that$$26.onClick(v6722, onComplete);
        } else {
          var v6724 = method$$2 === "replot";
          if (v6724) {
            var v13517 = that$$26.clickedNode;
            var v6723 = v13517.id;
            that$$26.select(v6723, onComplete);
          }
        }
        return;
      }
      var Geom$$1 = this.geom;
      var Plot = this.fx;
      var that$$26 = this;
      var v13518 = Plot.busy;
      var v6727 = !v13518;
      if (v6727) {
        Plot.busy = true;
        var v6726 = {onComplete:v514};
        this.contract(v6726, pos$$36);
      }
      return;
    }
    function v513(scroll$$3) {
      function v512(subn$$5) {
        var v6728;
        if (show$$2) {
          var v13519 = subn$$5.exist;
          v6728 = !v13519;
        } else {
          v6728 = subn$$5.exist;
        }
        var nodeVisible = v6728;
        if (nodeVisible) {
          subn$$5.exist = show$$2;
          subn$$5.drawn = show$$2;
        }
        return;
      }
      var v13520 = this.busy;
      var v6746 = !v13520;
      if (v6746) {
        this.busy = true;
        var v6729 = this.config;
        var v6730 = {name:""};
        v6729.onBeforeCompute(v6730);
        var viz$$21 = this;
        var graph$$19 = viz$$21.graph;
        var flag$$2 = true;
        var v6731 = viz$$21.graph;
        var v6732 = viz$$21.root;
        var node$$83 = v6731.getNode(v6732);
        var step$$2 = 2;
        var min$$6 = 1;
        var v13521 = graph$$19.depth;
        var v6733 = v13521.length;
        var max$$4 = v6733 - 1;
        var j$$12;
        var v18688 = viz$$21.zoomIndex;
        var v13522 = typeof v18688;
        var v6734 = v13522 === "undefined";
        if (v6734) {
          viz$$21.zoomIndex = 1;
        }
        var i$$78 = viz$$21.zoomIndex;
        var v6737 = i$$78 < 1;
        if (v6737) {
          i$$78 = 1;
        } else {
          var v22240 = graph$$19.depth;
          var v18689 = v22240.length;
          var v13523 = v18689 - 1;
          var v6736 = i$$78 > v13523;
          if (v6736) {
            var v13524 = graph$$19.depth;
            var v6735 = v13524.length;
            i$$78 = v6735 - 1;
          }
        }
        var v6738;
        var v13525 = scroll$$3 < 0;
        if (v13525) {
          v6738 = false;
        } else {
          v6738 = true;
        }
        var show$$2 = v6738;
        var v18690 = graph$$19.depth;
        var v13526 = v18690.length;
        var v6739 = v13526 / 10;
        step$$2 = Math.round(v6739);
        step$$2 = Math.max(step$$2, 2);
        var v6740 = graph$$19.depth;
        var maxDepth = v6740.length;
        var v6741 = graph$$19.depth;
        var nodelist = v6741[i$$78];
        var v6742 = nodelist.length;
        j$$12 = v6742 - 1;
        var v6743 = j$$12 >= 0;
        for (;v6743;) {
          var n$$41 = nodelist[j$$12];
          n$$41.eachLevel(1, step$$2, v512);
          j$$12 = j$$12 - 1;
          v6743 = j$$12 >= 0;
        }
        viz$$21.computePositions(node$$83, "");
        viz$$21.plot();
        var v6744 = viz$$21.config;
        var v6745 = "Depth " + i$$78;
        v6744.onAfterCompute(v6745);
        var v22241;
        if (show$$2) {
          v22241 = +1;
        } else {
          v22241 = -1;
        }
        var v18691 = v22241;
        var v13527 = v18691 * step$$2;
        i$$78 = i$$78 + v13527;
        viz$$21.zoomIndex = i$$78;
        this.busy = false;
      }
      return;
    }
    function v511() {
      var v6747 = this.canvas;
      var size$$8 = v6747.getSize();
      var key$$28;
      var i$$77;
      var overflow = false;
      var v13528 = this.clickedNode;
      var v6748 = v13528.id;
      var v13529 = !v6748;
      if (v13529) {
        v6748 = this.root;
      }
      var clicked = v6748;
      var height$$20 = 0;
      var v6749 = this.graph;
      var root$$15 = v6749.getNode(clicked);
      var v6750 = this.graph;
      var depth$$1 = v6750.depth;
      var v6751 = this.config;
      var v6752 = {name:""};
      v6751.onBeforeCompute(v6752);
      for (key$$28 in depth$$1) {
        var v6759 = depth$$1.hasOwnProperty(key$$28);
        if (v6759) {
          var v6758 = depth$$1[key$$28];
          if (v6758) {
            var nodes = depth$$1[key$$28];
            var tempHeight = 0;
            i$$77 = 0;
            var v13530 = nodes.length;
            var v6755 = i$$77 < v13530;
            for (;v6755;) {
              var node$$82 = nodes[i$$77];
              var v13531 = size$$8.height;
              var v6754 = height$$20 < v13531;
              if (v6754) {
                var v13532 = node$$82.data;
                var v6753 = v13532.leaf;
                if (v6753) {
                  var v18692 = node$$82.getData("height", "start");
                  var v13533 = v18692 + 8;
                  tempHeight = tempHeight + v13533;
                } else {
                  var v18693 = node$$82.getData("height", "start");
                  var v13534 = v18693 / 2;
                  tempHeight = tempHeight + v13534;
                }
                node$$82.drawn = true;
                node$$82.exist = true;
              }
              i$$77 = i$$77 + 1;
              var v13535 = nodes.length;
              v6755 = i$$77 < v13535;
            }
            var v18694 = tempHeight + height$$20;
            var v18695 = size$$8.height;
            var v13536 = v18694 < v18695;
            if (v13536) {
              v13536 = !overflow;
            }
            var v6757 = v13536;
            if (v6757) {
              height$$20 = height$$20 + tempHeight;
              var v31151 = parseInt(key$$28, 10);
              this.zoomIndex = v31151;
            } else {
              i$$77 = 0;
              var v13537 = nodes.length;
              var v6756 = i$$77 < v13537;
              for (;v6756;) {
                node$$82 = nodes[i$$77];
                node$$82.exist = false;
                node$$82.drawn = false;
                node$$82.collapsed = true;
                i$$77 = i$$77 + 1;
                var v13538 = nodes.length;
                v6756 = i$$77 < v13538;
              }
              overflow = true;
            }
          }
        }
      }
      var canvas$$32 = this.canvas;
      var ox$$4 = canvas$$32.translateOffsetX;
      var oy$$5 = canvas$$32.translateOffsetY;
      var v6760 = this.canvas;
      var v6761 = -1 * ox$$4;
      var v6762 = -1 * oy$$5;
      v6760.translate(v6761, v6762);
      var v13539 = this.graph;
      var v13540 = this.root;
      var v6763 = v13539.getNode(v13540);
      this.computePositions(v6763, "");
      this.plot();
      var v6764 = this.config;
      v6764.onAfterCompute();
      return;
    }
    function v510() {
      var v6765 = this.fx;
      var v6766 = this.controller;
      v6765.plot(v6766);
      return;
    }
    function v509(value$$42, rangeArray$$2) {
      var i$$76;
      var v18696 = typeof value$$42;
      var v13541 = v18696 === "undefined";
      var v18698 = !v13541;
      if (v18698) {
        var v18697 = typeof rangeArray$$2;
        v13541 = v18697 === "undefined";
      }
      var v6767 = v13541;
      if (v6767) {
        return;
      }
      i$$76 = 0;
      var v13542 = rangeArray$$2.length;
      var v6769 = i$$76 < v13542;
      for (;v6769;) {
        var v13543 = rangeArray$$2[i$$76];
        var v6768 = value$$42 <= v13543;
        if (v6768) {
          break;
        }
        i$$76 = i$$76 + 1;
        var v13544 = rangeArray$$2.length;
        v6769 = i$$76 < v13544;
      }
      var v6770;
      var v18699 = rangeArray$$2.length;
      var v13545 = i$$76 === v18699;
      if (v13545) {
        v6770 = i$$76 - 1;
      } else {
        v6770 = i$$76;
      }
      return v6770;
    }
    function v508() {
      var list$$1;
      var root$$14;
      var i$$75;
      var char$$20;
      var temp$$2 = {};
      var ds = {};
      var j$$11;
      var dschar;
      var sh$$2;
      var jj;
      var v6771 = this.config;
      var shapes$$1 = v6771.shapes;
      var dsAlt = {};
      var dscharAlt;
      var v6772 = this.config;
      var color$$6 = v6772.color;
      var shapePointer = 0;
      var rangeArray$$1;
      var label$$11;
      var v6773 = this.config;
      var quantColor$$1 = v6773.quantColor;
      var v6774 = this.config;
      var quantShape = v6774.quantShape;
      var heading;
      var content;
      var v6775 = this.graph;
      var v6776 = this.root;
      root$$14 = v6775.getNode(v6776);
      var v6777 = this.characterGroups;
      list$$1 = v6777.quali;
      var v6779 = !list$$1;
      if (v6779) {
        this.findAllCharTypes(root$$14);
        var v6778 = this.characterGroups;
        list$$1 = v6778.quali;
      }
      if (list$$1) {
        i$$75 = 0;
        var v13546 = list$$1.length;
        var v6782 = i$$75 < v13546;
        for (;v6782;) {
          char$$20 = list$$1[i$$75];
          var v6780 = this.findDistinctCharacterStates(char$$20);
          temp$$2[char$$20] = v6780.array;
          var v6781 = temp$$2[char$$20];
          if (v6781) {
            var v13547 = temp$$2[char$$20];
            v13547.push("multiple");
          }
          i$$75 = i$$75 + 1;
          var v13548 = list$$1.length;
          v6782 = i$$75 < v13548;
        }
      }
      for (i$$75 in temp$$2) {
        var v6788 = temp$$2.hasOwnProperty(i$$75);
        if (v6788) {
          char$$20 = temp$$2[i$$75];
          dschar = [];
          dscharAlt = {};
          j$$11 = 0;
          var v13549 = char$$20.length;
          var v6787 = j$$11 < v13549;
          for (;v6787;) {
            var v6783;
            var v18700 = color$$6.length;
            var v13551 = v18700 > j$$11;
            if (v13551) {
              v6783 = j$$11;
            } else {
              var v13550 = color$$6.length;
              v6783 = v13550 - 1;
            }
            jj = v6783;
            var v6784;
            var v18701 = shapes$$1.length;
            var v13553 = v18701 > shapePointer;
            if (v13553) {
              v6784 = shapePointer;
            } else {
              var v13552 = shapes$$1.length;
              v6784 = v13552 - 1;
            }
            sh$$2 = v6784;
            var v13554 = color$$6[jj];
            var v13555 = char$$20[j$$11];
            var v13556 = shapes$$1[sh$$2];
            var v6785 = {color:v13554, name:v13555, shape:v13556};
            dschar.push(v6785);
            var v6786 = char$$20[j$$11];
            var v13557 = color$$6[jj];
            var v13558 = shapes$$1[sh$$2];
            dscharAlt[v6786] = {color:v13557, shape:v13558};
            j$$11 = j$$11 + 1;
            var v13559 = char$$20.length;
            v6787 = j$$11 < v13559;
          }
          ds[i$$75] = dschar;
          dsAlt[i$$75] = dscharAlt;
          shapePointer++;
        }
      }
      i$$75 = 0;
      var v22242 = this.characterGroups;
      var v18702 = v22242.quant;
      var v13560 = v18702.length;
      var v6798 = i$$75 < v13560;
      for (;v6798;) {
        var v13561 = this.characterGroups;
        var v6789 = v13561.quant;
        char$$20 = v6789[i$$75];
        var v6790 = this.range;
        rangeArray$$1 = v6790[char$$20];
        dschar = [];
        dscharAlt = {};
        j$$11 = 0;
        var v13562 = rangeArray$$1.length;
        var v6797 = j$$11 < v13562;
        for (;v6797;) {
          var v6791;
          var v18703 = quantColor$$1.length;
          var v13564 = v18703 > j$$11;
          if (v13564) {
            v6791 = j$$11;
          } else {
            var v13563 = quantColor$$1.length;
            v6791 = v13563 - 1;
          }
          jj = v6791;
          var v6792;
          var v18704 = shapes$$1.length;
          var v13566 = v18704 > shapePointer;
          if (v13566) {
            v6792 = shapePointer;
          } else {
            var v13565 = shapes$$1.length;
            v6792 = v13565 - 1;
          }
          sh$$2 = v6792;
          var v18705;
          var v22245 = j$$11 === 0;
          if (v22245) {
            var v27680 = this.characterMinMax;
            var v26115 = v27680[char$$20];
            var v22243 = v26115.min;
            v18705 = v22243.toFixed(2);
          } else {
            var v22244 = j$$11 - 1;
            v18705 = rangeArray$$1[v22244];
          }
          var v13567 = v18705;
          var v6793 = v13567 + " - ";
          var v6794 = rangeArray$$1[j$$11];
          label$$11 = v6793 + v6794;
          var v13568 = quantColor$$1[j$$11];
          var v6795 = {color:v13568, name:label$$11, shape:quantShape};
          dschar.push(v6795);
          var v6796 = quantColor$$1[j$$11];
          dscharAlt[label$$11] = {color:v6796, shape:quantShape};
          j$$11 = j$$11 + 1;
          var v13569 = rangeArray$$1.length;
          v6797 = j$$11 < v13569;
        }
        ds[char$$20] = dschar;
        dsAlt[char$$20] = dscharAlt;
        shapePointer++;
        i$$75 = i$$75 + 1;
        var v22246 = this.characterGroups;
        var v18706 = v22246.quant;
        var v13570 = v18706.length;
        v6798 = i$$75 < v13570;
      }
      heading = "";
      content = "";
      var v6799 = this.config;
      list$$1 = v6799.selectedCharacters;
      i$$75 = 0;
      var v13571 = list$$1.length;
      var v6804 = i$$75 < v13571;
      for (;v6804;) {
        label$$11 = "";
        char$$20 = list$$1[i$$75];
        var v13572 = typeof char$$20;
        var v6803 = v13572 !== "undefined";
        if (v6803) {
          var v6800 = ds[char$$20];
          var v13573 = !v6800;
          if (v13573) {
            v6800 = [];
          }
          dschar = v6800;
          var v13574 = char$$20.replace(/_/g, " ");
          var v6801 = '<tr><th colspan="2">' + v13574;
          heading = v6801 + "</th></tr>";
          j$$11 = 0;
          var v13575 = dschar.length;
          var v6802 = j$$11 < v13575;
          for (;v6802;) {
            sh$$2 = dschar[j$$11];
            var v29317 = sh$$2.shape;
            var v28669 = '<tr><td><div class ="' + v29317;
            var v27681 = v28669 + '" style="background-color:';
            var v27682 = sh$$2.color;
            var v26116 = v27681 + v27682;
            var v22247 = v26116 + ';"></div></td><td>';
            var v22248 = sh$$2.name;
            var v18707 = v22247 + v22248;
            var v13576 = v18707 + "</td></tr>";
            label$$11 = label$$11 + v13576;
            j$$11 = j$$11 + 1;
            var v13577 = dschar.length;
            v6802 = j$$11 < v13577;
          }
          if (label$$11) {
            var v13578 = heading + label$$11;
            content = content + v13578;
          }
        }
        i$$75 = i$$75 + 1;
        var v13579 = list$$1.length;
        v6804 = i$$75 < v13579;
      }
      this.colorCoding = dsAlt;
      this.colorCodingQuali = ds;
      return content;
    }
    function v507(character$$2) {
      var i$$74;
      var result$$17 = [];
      var temp$$1 = {};
      var node$$81;
      var char$$19;
      var j$$10;
      var v13580 = this.graph;
      var v6811 = v13580.nodes;
      for (i$$74 in v6811) {
        var v18708 = this.graph;
        var v13581 = v18708.nodes;
        var v6810 = v13581.hasOwnProperty(i$$74);
        if (v6810) {
          var v13582 = this.graph;
          var v6805 = v13582.nodes;
          node$$81 = v6805[i$$74];
          var v13583 = node$$81.data;
          var v6806 = v13583.character;
          char$$19 = v6806[character$$2];
          var v18709 = node$$81.data;
          var v13584 = v18709.leaf;
          if (v13584) {
            v13584 = char$$19;
          }
          var v6809 = v13584;
          if (v6809) {
            j$$10 = 0;
            var v13585 = char$$19.length;
            var v6808 = j$$10 < v13585;
            for (;v6808;) {
              var v6807 = char$$19[j$$10];
              temp$$1[v6807] = character$$2;
              j$$10++;
              var v13586 = char$$19.length;
              v6808 = j$$10 < v13586;
            }
          }
        }
      }
      for (i$$74 in temp$$1) {
        var v6812 = temp$$1.hasOwnProperty(i$$74);
        if (v6812) {
          result$$17.push(i$$74);
        }
      }
      return{hash:temp$$1, array:result$$17};
    }
    function v506(colorOverwrite) {
      function v505(root$$13, characterColorCollection) {
        function v504(node$$80) {
          var v6813 = node$$80.data;
          var v18710 = node$$80.data;
          var v13587 = v18710.color;
          var v18711 = !v13587;
          if (v18711) {
            v13587 = {};
          }
          v6813.color = v13587;
          var v6817 = node$$80.adjacencies;
          for (adj in v6817) {
            var v13588 = node$$80.adjacencies;
            var v6816 = v13588.hasOwnProperty(adj);
            if (v6816) {
              var v6814 = node$$80.adjacencies;
              currentAdj$$1 = v6814[adj];
              var v6815 = currentAdj$$1.data;
              if (v6815) {
                var v13589 = currentAdj$$1.data;
                delete v13589.$color;
              }
            }
          }
          i$$73 = 0;
          var v22249 = that$$25.characterGroups;
          var v18712 = v22249.quali;
          var v13590 = v18712.length;
          var v6833 = i$$73 < v13590;
          for (;v6833;) {
            var v13591 = that$$25.characterGroups;
            var v6818 = v13591.quali;
            char$$18 = v6818[i$$73];
            var v13592 = node$$80.data;
            var v6819 = v13592.character;
            charArray = v6819[char$$18];
            var v18713 = charArray;
            if (v18713) {
              var v22250 = charArray.length;
              v18713 = v22250 === 1;
            }
            var v13593 = v18713;
            if (v13593) {
              v13593 = charArray[0];
            }
            var v6820 = v13593;
            var v13594 = !v6820;
            if (v13594) {
              v6820 = "";
            }
            key$$27 = v6820;
            if (key$$27) {
              key$$27 = key$$27.replace(/ /g, "");
              var v13595 = node$$80.data;
              var v6821 = v13595.color;
              var v13596 = characterColorCollection[char$$18];
              v6821[char$$18] = v13596.color;
              var v6831 = char$$18 === firstCharacter$$2;
              if (v6831) {
                var v6830 = node$$80.adjacencies;
                for (adj in v6830) {
                  var v13597 = node$$80.adjacencies;
                  var v6829 = v13597.hasOwnProperty(adj);
                  if (v6829) {
                    var v6822 = node$$80.adjacencies;
                    currentAdj$$1 = v6822[adj];
                    var v13598 = node$$80.adjacencies;
                    var v6823 = v13598[adj];
                    var nodeTo$$6 = v6823.nodeTo;
                    var v13599 = node$$80.adjacencies;
                    var v6824 = v13599[adj];
                    var nodeFrom$$4 = v6824.nodeFrom;
                    var v18714 = nodeTo$$6._depth;
                    var v18715 = node$$80._depth;
                    var v13600 = v18714 < v18715;
                    var v18718 = !v13600;
                    if (v18718) {
                      var v18716 = nodeFrom$$4._depth;
                      var v18717 = node$$80._depth;
                      v13600 = v18716 < v18717;
                    }
                    var v6828 = v13600;
                    if (v6828) {
                      var v13601 = charArray.length;
                      var v6827 = v13601 === 1;
                      if (v6827) {
                        var v6825 = currentAdj$$1.data;
                        var v18719 = characterColorCollection[firstCharacter$$2];
                        var v18720 = charArray[0];
                        var v13602 = v18719[v18720];
                        v6825.$color = v13602.color;
                        break;
                      } else {
                        var v6826 = currentAdj$$1.data;
                        delete v6826.$color;
                      }
                    }
                  }
                }
              }
            } else {
              var v13603 = node$$80.data;
              var v6832 = v13603.color;
              var v13604 = characterColorCollection[char$$18];
              v6832[char$$18] = v13604["multiple"];
            }
            i$$73 = i$$73 + 1;
            var v22251 = that$$25.characterGroups;
            var v18721 = v22251.quali;
            var v13605 = v18721.length;
            v6833 = i$$73 < v13605;
          }
          i$$73 = 0;
          var v22252 = that$$25.characterGroups;
          var v18722 = v22252.quant;
          var v13606 = v18722.length;
          var v6849 = i$$73 < v13606;
          for (;v6849;) {
            var v13607 = that$$25.characterGroups;
            var v6834 = v13607.quant;
            char$$18 = v6834[i$$73];
            var v13608 = node$$80.data;
            var v6835 = v13608.character;
            charArray = v6835[char$$18];
            var v18723 = charArray;
            if (v18723) {
              var v22253 = charArray.length;
              v18723 = v22253 === 1;
            }
            var v13609 = v18723;
            if (v13609) {
              v13609 = charArray[0];
            }
            var v6836 = v13609;
            var v13610 = !v6836;
            if (v13610) {
              v6836 = "";
            }
            key$$27 = v6836;
            if (key$$27) {
              var v6837 = that$$25.range;
              var rangeArray = v6837[char$$18];
              var index$$43 = that$$25.findIndex(key$$27, rangeArray);
              var v13611 = node$$80.data;
              var v6838 = v13611.color;
              v6838[char$$18] = quantColor[index$$43];
              var v6848 = char$$18 === firstCharacter$$2;
              if (v6848) {
                var v6847 = node$$80.adjacencies;
                for (adj in v6847) {
                  var v13612 = node$$80.adjacencies;
                  var v6846 = v13612.hasOwnProperty(adj);
                  if (v6846) {
                    var v6839 = node$$80.adjacencies;
                    var currentAdj$$1 = v6839[adj];
                    var v13613 = node$$80.adjacencies;
                    var v6840 = v13613[adj];
                    nodeTo$$6 = v6840.nodeTo;
                    var v13614 = node$$80.adjacencies;
                    var v6841 = v13614[adj];
                    nodeFrom$$4 = v6841.nodeFrom;
                    var v18724 = nodeTo$$6._depth;
                    var v18725 = node$$80._depth;
                    var v13615 = v18724 < v18725;
                    var v18728 = !v13615;
                    if (v18728) {
                      var v18726 = nodeFrom$$4._depth;
                      var v18727 = node$$80._depth;
                      v13615 = v18726 < v18727;
                    }
                    var v6845 = v13615;
                    if (v6845) {
                      var v13616 = charArray.length;
                      var v6844 = v13616 === 1;
                      if (v6844) {
                        var v6842 = currentAdj$$1.data;
                        v6842.$color = quantColor[index$$43];
                        break;
                      } else {
                        var v6843 = currentAdj$$1.data;
                        delete v6843.$color;
                      }
                    }
                  }
                }
              }
            }
            i$$73 = i$$73 + 1;
            var v22254 = that$$25.characterGroups;
            var v18729 = v22254.quant;
            var v13617 = v18729.length;
            v6849 = i$$73 < v13617;
          }
          return;
        }
        var v6850 = that$$25.config;
        var firstCharacter$$2 = v6850.firstCharacter;
        var key$$27;
        var charArray;
        var char$$18;
        var i$$73;
        var v6851 = that$$25.config;
        var quantColor = v6851.quantColor;
        var currentAdj;
        root$$13.eachSubgraph(v504);
        return;
      }
      var speciesHash$$1 = this.character;
      var speciesName$$1;
      var char$$17;
      var i$$72;
      var that$$25 = this;
      var box;
      var node$$79;
      var characterValue;
      var j$$9;
      var html$$5;
      var v6869 = this.hasProperty(speciesHash$$1);
      if (v6869) {
        var $colorCharacter = v505;
        var v6852 = this.graph;
        var v6853 = this.root;
        var rootNode$$1 = v6852.getNode(v6853);
        var string;
        var v6854 = this.config;
        var color$$5 = v6854.color;
        var distinct = {};
        var legendColorCollection = {};
        var pointer = 0;
        var legendRows = "";
        var multiple = false;
        var firstCharacter$$1;
        var firstSpecies;
        var characterKey = [];
        for (speciesName$$1 in speciesHash$$1) {
          var v6857 = speciesHash$$1.hasOwnProperty(speciesName$$1);
          if (v6857) {
            var v6856 = speciesHash$$1[speciesName$$1];
            for (char$$17 in v6856) {
              var v13618 = speciesHash$$1[speciesName$$1];
              var v6855 = v13618.hasOwnProperty(char$$17);
              if (v6855) {
                characterKey.push(char$$17);
              }
            }
            break;
          }
        }
        distinct = legendColorCollection[firstCharacter$$1];
        var v18730 = this.config;
        var v13619 = v18730.initCharacter;
        var v6860 = !v13619;
        if (v6860) {
          var v13620 = this.config;
          var v6858 = v13620.firstCharacter;
          this.setCharacter(v6858);
          var v6859 = this.config;
          v6859.initCharacter = true;
        }
        var v31152 = this.findAllCharTypes(rootNode$$1);
        this.characterGroups = v31152;
        var v13621 = this.characterGroups;
        var v6861 = v13621.quali;
        this.fitchParsimony(rootNode$$1, v6861);
        var v13622 = this.characterGroups;
        var v6862 = v13622.quant;
        this.quantParsimony(rootNode$$1, v6862);
        var v13623 = this.characterGroups;
        var v6863 = v13623.quali;
        this.checkQuali(v6863);
        var v13624 = this.characterGroups;
        var v6864 = v13624.quant;
        this.checkQuant(v6864);
        var v13625 = this.characterGroups;
        var v6865 = v13625.quant;
        var v31153 = this.findQuantMinMax(rootNode$$1, v6865);
        this.characterMinMax = v31153;
        var v6866 = this.characterMinMax;
        var v31154 = this.findQuantRange(v6866);
        this.range = v31154;
        html$$5 = this.createLegend();
        var v13626 = this.graph;
        var v13627 = this.root;
        var v6867 = v13626.getNode(v13627);
        var v6868 = this.colorCoding;
        $colorCharacter(v6867, v6868);
        return html$$5;
      }
      return;
    }
    function v503(quantMinMax) {
      var result$$16 = {};
      var char$$16;
      var v6870 = this.config;
      var rangeCount = v6870.rangeCount;
      var stepsize;
      var i$$71;
      for (char$$16 in quantMinMax) {
        var v6877 = quantMinMax.hasOwnProperty(char$$16);
        if (v6877) {
          var v6871 = quantMinMax[char$$16];
          var min$$5 = v6871.min;
          var v6872 = quantMinMax[char$$16];
          var max$$3 = v6872.max;
          var v6873 = max$$3 - min$$5;
          stepsize = v6873 / rangeCount;
          result$$16[char$$16] = [];
          i$$71 = 1;
          var v6876 = i$$71 <= rangeCount;
          for (;v6876;) {
            var v6874 = result$$16[char$$16];
            var v18731 = i$$71 * stepsize;
            var v13628 = min$$5 + v18731;
            var v6875 = v13628.toFixed(2);
            v6874.push(v6875);
            i$$71 = i$$71 + 1;
            v6876 = i$$71 <= rangeCount;
          }
        }
      }
      return result$$16;
    }
    function v502(root$$12, quantCharacters) {
      function v501(node$$78) {
        var v13629 = node$$78.data;
        var v6882 = v13629.leaf;
        if (v6882) {
          var v18732 = node$$78.data;
          var v13630 = v18732.character;
          var v6878 = v13630[char$$15];
          if (v6878) {
            var v22255 = node$$78.data;
            var v18733 = v22255.character;
            var v13631 = v18733[char$$15];
            v6878 = v13631[0];
          }
          var charState = v6878;
          var v13632 = typeof charState;
          var v6881 = v13632 !== "undefined";
          if (v6881) {
            var v6879;
            var v13633 = min$$4 < charState;
            if (v13633) {
              v6879 = min$$4;
            } else {
              v6879 = charState;
            }
            min$$4 = v6879;
            var v6880;
            var v13634 = max$$2 > charState;
            if (v13634) {
              v6880 = max$$2;
            } else {
              v6880 = charState;
            }
            max$$2 = v6880;
          }
        }
        return;
      }
      var char$$15;
      var min$$4;
      var max$$2;
      var result$$15 = {};
      var i$$70;
      i$$70 = 0;
      var v13635 = quantCharacters.length;
      var v6888 = i$$70 < v13635;
      for (;v6888;) {
        char$$15 = quantCharacters[i$$70];
        var v6883 = result$$15[char$$15];
        var v13636 = !v6883;
        if (v13636) {
          v6883 = {};
        }
        result$$15[char$$15] = v6883;
        var v6884 = result$$15[char$$15];
        v6884.min = min$$4 = Number.MAX_VALUE;
        var v6885 = result$$15[char$$15];
        v6885.max = max$$2 = Number.MIN_VALUE;
        root$$12.eachSubgraph(v501);
        var v6886 = result$$15[char$$15];
        v6886.min = min$$4;
        var v6887 = result$$15[char$$15];
        v6887.max = max$$2;
        i$$70 = i$$70 + 1;
        var v13637 = quantCharacters.length;
        v6888 = i$$70 < v13637;
      }
      return result$$15;
    }
    function v500(root$$11) {
      function v499(node$$77) {
        var v13638 = node$$77.data;
        var v6894 = v13638.leaf;
        if (v6894) {
          i$$69 = 0;
          var v13639 = all.length;
          var v6893 = i$$69 < v13639;
          for (;v6893;) {
            key$$26 = all[i$$69];
            var v22256 = node$$77.data;
            var v18734 = v22256.character;
            var v13640 = v18734[key$$26];
            var v6892 = that$$24.characterType(v13640, "quali");
            if (v6892) {
              quali[key$$26] = true;
              var v13641 = that$$24.config;
              var v6889 = v13641.typeEnum;
              charTypeMapping$$1[key$$26] = v6889.quali;
            } else {
              var v22257 = node$$77.data;
              var v18735 = v22257.character;
              var v13642 = v18735[key$$26];
              var v6891 = that$$24.characterType(v13642, "quant");
              if (v6891) {
                quant[key$$26] = true;
                var v13643 = that$$24.config;
                var v6890 = v13643.typeEnum;
                charTypeMapping$$1[key$$26] = v6890.quant;
              }
            }
            i$$69 = i$$69 + 1;
            var v13644 = all.length;
            v6893 = i$$69 < v13644;
          }
        }
        return;
      }
      var type$$56 = {quant:[], quali:[]};
      var all = [];
      var quali = {};
      var quant = {};
      var key$$26;
      var that$$24 = this;
      var v6895 = this.config;
      var first$$4 = v6895.firstCharacter;
      var charTypeMapping$$1 = {};
      var i$$69;
      var v13645 = all;
      if (v13645) {
        var v18736 = all.length;
        v13645 = v18736 === 0;
      }
      var v6903 = v13645;
      if (v6903) {
        all = this.listCharacters();
        var v22258 = this.config;
        var v18737 = v22258.selectedCharacters;
        var v13646 = v18737.length;
        var v6902 = v13646 !== 0;
        if (v6902) {
          var v26117 = this.config;
          var v22259 = v26117.selectedCharacters;
          var v18738 = v22259[0];
          var v13647 = typeof v18738;
          var v6897 = v13647 === "undefined";
          if (v6897) {
            var v13648 = this.config;
            var v6896 = v13648.selectedCharacters;
            v6896[0] = all[0];
          }
          var v6898 = this.config;
          var v18739 = this.config;
          var v13649 = v18739.selectedCharacters;
          v6898.firstCharacter = v13649[0];
        } else {
          var v13650 = all.length;
          var v6901 = v13650 !== 0;
          if (v6901) {
            var v6899 = this.config;
            var v13651 = all[0];
            v6899.selectedCharacters = [v13651];
            var v6900 = this.config;
            v6900.firstCharacter = all[0];
          }
        }
      }
      var v13652 = all;
      if (v13652) {
        var v18740 = all.length;
        v13652 = v18740 !== 0;
      }
      var v6904 = v13652;
      if (v6904) {
        root$$11.eachSubgraph(v499);
      }
      for (key$$26 in quali) {
        var v6906 = quali.hasOwnProperty(key$$26);
        if (v6906) {
          var v6905 = type$$56.quali;
          v6905.push(key$$26);
        }
      }
      for (key$$26 in quant) {
        var v6908 = quant.hasOwnProperty(key$$26);
        if (v6908) {
          var v6907 = type$$56.quant;
          v6907.push(key$$26);
        }
      }
      this.characterList = all;
      this.charTypeMapping = charTypeMapping$$1;
      return type$$56;
    }
    function v498() {
      var aSpecies;
      var i$$68;
      var result$$14 = [];
      var v6910 = this.character;
      for (aSpecies in v6910) {
        var v13653 = this.character;
        var v6909 = v13653[aSpecies];
        for (i$$68 in v6909) {
          result$$14.push(i$$68);
        }
        return result$$14;
      }
      return;
    }
    function v497(root$$10, characters$$5) {
      function $quantParsimony(node$$76) {
        function v496(n$$40) {
          var result$$13 = $quantParsimony(n$$40);
          i = 0;
          var v13654 = characters$$5.length;
          var v6914 = i < v13654;
          for (;v6914;) {
            var v18741 = characters$$5[i];
            var v13655 = result$$13[v18741];
            if (v13655) {
              var v27683 = characters$$5[i];
              var v26118 = result$$13[v27683];
              var v22260 = v26118[0];
              var v18742 = typeof v22260;
              v13655 = v18742 !== "undefined";
            }
            var v6913 = v13655;
            if (v6913) {
              var v13656 = characters$$5[i];
              var v6911 = childrenValues$$2[v13656];
              var v18743 = characters$$5[i];
              var v13657 = result$$13[v18743];
              var v6912 = v13657[0];
              v6911.push(v6912);
            }
            i = i + 1;
            var v13658 = characters$$5.length;
            v6914 = i < v13658;
          }
          return;
        }
        var childrenValues$$2 = {};
        i = 0;
        var v13659 = characters$$5.length;
        var v6916 = i < v13659;
        for (;v6916;) {
          var v6915 = characters$$5[i];
          childrenValues$$2[v6915] = [];
          i = i + 1;
          var v13660 = characters$$5.length;
          v6916 = i < v13660;
        }
        node$$76.eachSubnode(v496);
        var v18744 = node$$76.data;
        var v13661 = v18744.leaf;
        var v6921 = !v13661;
        if (v6921) {
          i = 0;
          var v13662 = characters$$5.length;
          var v6920 = i < v13662;
          for (;v6920;) {
            var char$$14 = characters$$5[i];
            var v13663 = node$$76.data;
            var v6917 = v13663.character;
            var value$$41 = v6917[char$$14];
            var v6918 = childrenValues$$2[char$$14];
            var mean$$1 = st.mean(v6918);
            var v13664 = node$$76.data;
            var v6919 = v13664.character;
            v6919[char$$14] = [mean$$1];
            i = i + 1;
            var v13665 = characters$$5.length;
            v6920 = i < v13665;
          }
        }
        var v6922 = node$$76.data;
        return v6922.character;
      }
      var methods$$1 = this.calcMethods;
      $quantParsimony(root$$10);
      return;
    }
    function v495(characters$$4) {
      function $checkQuali(node$$75) {
        function v494(n$$39) {
          result$$12 = $checkQuali(n$$39);
          i$$67 = 0;
          var v13666 = characters$$4.length;
          var v6926 = i$$67 < v13666;
          for (;v6926;) {
            var v13667 = characters$$4[i$$67];
            var v6925 = result$$12[v13667];
            if (v6925) {
              var v13668 = characters$$4[i$$67];
              var v6923 = childrenValues$$1[v13668];
              var v13669 = characters$$4[i$$67];
              var v6924 = result$$12[v13669];
              v6923.push(v6924);
            }
            i$$67 = i$$67 + 1;
            var v13670 = characters$$4.length;
            v6926 = i$$67 < v13670;
          }
          return;
        }
        var childrenValues$$1 = {};
        var result$$12;
        var v6927 = node$$75.data;
        var v18745 = node$$75.data;
        var v13671 = v18745.characterConsistency;
        var v18746 = !v13671;
        if (v18746) {
          v13671 = {};
        }
        v6927.characterConsistency = v13671;
        i$$67 = 0;
        var v13672 = characters$$4.length;
        var v6929 = i$$67 < v13672;
        for (;v6929;) {
          var v6928 = characters$$4[i$$67];
          childrenValues$$1[v6928] = [];
          i$$67 = i$$67 + 1;
          var v13673 = characters$$4.length;
          v6929 = i$$67 < v13673;
        }
        node$$75.eachSubnode(v494);
        var v18747 = node$$75.data;
        var v13674 = v18747.leaf;
        var v6933 = !v13674;
        if (v6933) {
          i$$67 = 0;
          var v13675 = characters$$4.length;
          var v6932 = i$$67 < v13675;
          for (;v6932;) {
            var char$$13 = characters$$4[i$$67];
            var v6930 = childrenValues$$1[char$$13];
            result$$12 = compareFunction$$1(v6930);
            var v13676 = node$$75.data;
            var v6931 = v13676.characterConsistency;
            v6931[char$$13] = result$$12;
            i$$67 = i$$67 + 1;
            var v13677 = characters$$4.length;
            v6932 = i$$67 < v13677;
          }
        }
        var v6934 = node$$75.data;
        return v6934.character;
      }
      function compareFunction$$1(sample$$4) {
        var test1$$1 = sample$$4[0];
        var test2$$1;
        var j$$8 = 0;
        var v13678 = sample$$4.length;
        var v6936 = j$$8 < v13678;
        for (;v6936;) {
          test2$$1 = sample$$4[j$$8];
          var result$$11 = that$$23.intersect(test1$$1, test2$$1);
          var v18748 = result$$11.length;
          var v18749 = test1$$1.length;
          var v13679 = v18748 !== v18749;
          var v18752 = !v13679;
          if (v18752) {
            var v18750 = result$$11.length;
            var v18751 = test2$$1.length;
            v13679 = v18750 !== v18751;
          }
          var v6935 = v13679;
          if (v6935) {
            return false;
          }
          test1$$1 = result$$11;
          j$$8 = j$$8 + 1;
          var v13680 = sample$$4.length;
          v6936 = j$$8 < v13680;
        }
        return true;
      }
      var v6937 = this.graph;
      var v6938 = this.root;
      var root$$9 = v6937.getNode(v6938);
      var i$$67;
      var that$$23 = this;
      $checkQuali(root$$9);
      return;
    }
    function v493(characters$$3) {
      function $checkQuant(node$$74) {
        function v492(n$$38) {
          ans$$15 = $checkQuant(n$$38);
          result$$10 = ans$$15.character;
          i$$66 = 0;
          var v13681 = characters$$3.length;
          var v6948 = i$$66 < v13681;
          for (;v6948;) {
            var v18753 = characters$$3[i$$66];
            var v13682 = result$$10[v18753];
            if (v13682) {
              var v27684 = characters$$3[i$$66];
              var v26119 = result$$10[v27684];
              var v22261 = v26119[0];
              var v18754 = typeof v22261;
              v13682 = v18754 !== "undefined";
            }
            var v6947 = v13682;
            if (v6947) {
              var v13683 = characters$$3[i$$66];
              var v6939 = childrenValues[v13683];
              var v18755 = characters$$3[i$$66];
              var v13684 = result$$10[v18755];
              var v6940 = v13684[0];
              v6939.push(v6940);
              var v13685 = characters$$3[i$$66];
              var v6941 = sd$$3[v13685];
              var v18756 = ans$$15.stat;
              var v18757 = characters$$3[i$$66];
              var v13686 = v18756[v18757];
              var v6942 = v13686.sd;
              v6941.push(v6942);
              var v13687 = characters$$3[i$$66];
              var v6943 = ui$$3[v13687];
              var v18758 = ans$$15.stat;
              var v18759 = characters$$3[i$$66];
              var v13688 = v18758[v18759];
              var v6944 = v13688.u;
              v6943.push(v6944);
              var v13689 = characters$$3[i$$66];
              var v6945 = num$$8[v13689];
              var v18760 = ans$$15.stat;
              var v18761 = characters$$3[i$$66];
              var v13690 = v18760[v18761];
              var v6946 = v13690.n;
              v6945.push(v6946);
            }
            i$$66 = i$$66 + 1;
            var v13691 = characters$$3.length;
            v6948 = i$$66 < v13691;
          }
          return;
        }
        var childrenValues = {};
        var result$$10;
        var sd$$3 = {};
        var ui$$3 = {};
        var num$$8 = {};
        var ans$$15;
        var char$$12;
        var v6949 = node$$74.data;
        var v18762 = node$$74.data;
        var v13692 = v18762.characterConsistency;
        var v18763 = !v13692;
        if (v18763) {
          v13692 = {};
        }
        v6949.characterConsistency = v13692;
        var v6950 = node$$74.data;
        v6950.stat = {};
        i$$66 = 0;
        var v13693 = characters$$3.length;
        var v6954 = i$$66 < v13693;
        for (;v6954;) {
          char$$12 = characters$$3[i$$66];
          var v6951 = characters$$3[i$$66];
          childrenValues[v6951] = [];
          var v13694 = node$$74.data;
          var v6952 = v13694.stat;
          var v6953 = characters$$3[i$$66];
          v6952[v6953] = {sd:undefined, u:undefined, n:undefined};
          sd$$3[char$$12] = [];
          ui$$3[char$$12] = [];
          num$$8[char$$12] = [];
          i$$66 = i$$66 + 1;
          var v13695 = characters$$3.length;
          v6954 = i$$66 < v13695;
        }
        node$$74.eachSubnode(v492);
        var v18764 = node$$74.data;
        var v13696 = v18764.leaf;
        var v6974 = !v13696;
        if (v6974) {
          i$$66 = 0;
          var v13697 = characters$$3.length;
          var v6966 = i$$66 < v13697;
          for (;v6966;) {
            char$$12 = characters$$3[i$$66];
            var v18765 = childrenValues[char$$12];
            var v13698 = v18765.length;
            var v6964 = v13698 !== 0;
            if (v6964) {
              var v18766 = node$$74.data;
              var v13699 = v18766.stat;
              var v6955 = v13699[char$$12];
              var v13700 = num$$8[char$$12];
              var v13701 = ui$$3[char$$12];
              var v31155 = that$$22.meanPop(v13700, v13701);
              v6955.u = v31155;
              var v13702 = node$$74.data;
              var v6956 = v13702.character;
              var v26120 = node$$74.data;
              var v22262 = v26120.stat;
              var v18767 = v22262[char$$12];
              var v13703 = v18767.u;
              v6956[char$$12] = [v13703];
              var v18768 = node$$74.data;
              var v13704 = v18768.stat;
              var v6957 = v13704[char$$12];
              var v13705 = num$$8[char$$12];
              var v31156 = that$$22.sum(v13705);
              v6957.n = v31156;
              var v18769 = node$$74.data;
              var v13706 = v18769.stat;
              var v6958 = v13706[char$$12];
              var v13707 = num$$8[char$$12];
              var v13708 = sd$$3[char$$12];
              var v13709 = ui$$3[char$$12];
              var v26121 = node$$74.data;
              var v22263 = v26121.stat;
              var v22264 = characters$$3[i$$66];
              var v18770 = v22263[v22264];
              var v13710 = v18770.u;
              var v31157 = that$$22.sdPop(v13707, v13708, v13709, v13710);
              v6958.sd = v31157;
              var v22265 = node$$74.data;
              var v18771 = v22265.stat;
              var v13711 = v18771[char$$12];
              var v6959 = v13711.u;
              var v22266 = node$$74.data;
              var v18772 = v22266.stat;
              var v13712 = v18772[char$$12];
              var v6960 = v13712.sd;
              var v6961 = meanTree[char$$12];
              var v6962 = sdTree[char$$12];
              result$$10 = compareFunction(v6959, v6960, v6961, v6962);
            } else {
              var v13713 = node$$74.data;
              var v6963 = v13713.stat;
              v6963[char$$12] = {sd:undefined, u:undefined, n:undefined};
              result$$10 = true;
            }
            var v13714 = node$$74.data;
            var v6965 = v13714.characterConsistency;
            v6965[char$$12] = result$$10;
            i$$66 = i$$66 + 1;
            var v13715 = characters$$3.length;
            v6966 = i$$66 < v13715;
          }
        } else {
          i$$66 = 0;
          var v13716 = characters$$3.length;
          var v6973 = i$$66 < v13716;
          for (;v6973;) {
            var v6967 = node$$74.data;
            result$$10 = v6967.character;
            var v18773 = characters$$3[i$$66];
            var v13717 = result$$10[v18773];
            if (v13717) {
              var v27685 = characters$$3[i$$66];
              var v26122 = result$$10[v27685];
              var v22267 = v26122[0];
              var v18774 = typeof v22267;
              v13717 = v18774 !== "undefined";
            }
            var v6972 = v13717;
            if (v6972) {
              var v13718 = node$$74.data;
              var v6968 = v13718.stat;
              var v6969 = characters$$3[i$$66];
              var v22268 = characters$$3[i$$66];
              var v18775 = result$$10[v22268];
              var v13719 = v18775[0];
              v6968[v6969] = {sd:0, u:v13719, n:1};
            } else {
              var v13720 = node$$74.data;
              var v6970 = v13720.stat;
              var v6971 = characters$$3[i$$66];
              v6970[v6971] = {sd:undefined, u:undefined, n:undefined};
            }
            i$$66 = i$$66 + 1;
            var v13721 = characters$$3.length;
            v6973 = i$$66 < v13721;
          }
        }
        return node$$74.data;
      }
      function compareFunction(mean, sd$$2, mTree, sTree) {
        var v13722 = mean - mTree;
        var v6975 = Math.abs(v13722);
        var test1 = v6975 > sTree;
        var test2 = sd$$2 > sTree;
        var v6976 = test1 && test2;
        return!v6976;
      }
      var v6977 = this.config;
      var n$$37 = v6977.threshold;
      var v6978 = this.graph;
      var v6979 = this.root;
      var root$$8 = v6978.getNode(v6979);
      var meanTree = this.meanAtTree(root$$8, characters$$3);
      var sdTree = this.sdAtTree(root$$8, characters$$3);
      var i$$66;
      var that$$22 = this;
      var count$$4 = 0;
      $checkQuant(root$$8);
      return;
    }
    function v491(root$$7, characters$$2) {
      function v490(node$$73) {
        var v13723 = node$$73.data;
        var v6985 = v13723.leaf;
        if (v6985) {
          i = 0;
          var v13724 = characters$$2.length;
          var v6984 = i < v13724;
          for (;v6984;) {
            char$$11 = characters$$2[i];
            var v22269 = node$$73.data;
            var v18776 = v22269.character;
            var v13725 = v18776[char$$11];
            if (v13725) {
              var v28670 = node$$73.data;
              var v27686 = v28670.character;
              var v26123 = v27686[char$$11];
              var v22270 = v26123[0];
              var v18777 = typeof v22270;
              v13725 = v18777 !== "undefined";
            }
            var v6983 = v13725;
            if (v6983) {
              var v13726 = samples$$2[char$$11];
              var v6980 = v13726.value;
              var v22271 = node$$73.data;
              var v18778 = v22271.character;
              var v13727 = v18778[char$$11];
              var v6981 = v13727[0];
              v6980.push(v6981);
              var v13728 = samples$$2[char$$11];
              var v6982 = v13728.number;
              v6982.push(1);
            }
            i = i + 1;
            var v13729 = characters$$2.length;
            v6984 = i < v13729;
          }
        }
        return;
      }
      var samples$$2 = {};
      var char$$11;
      var result$$9 = {};
      i = 0;
      var v13730 = characters$$2.length;
      var v6987 = i < v13730;
      for (;v6987;) {
        var v6986 = characters$$2[i];
        samples$$2[v6986] = {value:[], number:[]};
        i = i + 1;
        var v13731 = characters$$2.length;
        v6987 = i < v13731;
      }
      root$$7.eachSubgraph(v490);
      i = 0;
      var v13732 = characters$$2.length;
      var v6990 = i < v13732;
      for (;v6990;) {
        char$$11 = characters$$2[i];
        var v6988 = result$$9;
        var v6989 = char$$11;
        var v18779 = samples$$2[char$$11];
        var v13733 = v18779.value;
        var v18780 = samples$$2[char$$11];
        var v13734 = v18780.number;
        var v31158 = this.wtmean(v13733, v13734);
        v6988[v6989] = v31158;
        i = i + 1;
        var v13735 = characters$$2.length;
        v6990 = i < v13735;
      }
      return result$$9;
    }
    function v489(root$$6, characters$$1) {
      function v488(node$$72) {
        var v13736 = node$$72.data;
        var v6995 = v13736.leaf;
        if (v6995) {
          i = 0;
          var v13737 = characters$$1.length;
          var v6994 = i < v13737;
          for (;v6994;) {
            char$$10 = characters$$1[i];
            var v22272 = node$$72.data;
            var v18781 = v22272.character;
            var v13738 = v18781[char$$10];
            if (v13738) {
              var v28671 = node$$72.data;
              var v27687 = v28671.character;
              var v26124 = v27687[char$$10];
              var v22273 = v26124[0];
              var v18782 = typeof v22273;
              v13738 = v18782 !== "undefined";
            }
            var v6993 = v13738;
            if (v6993) {
              var v6991 = samples$$1[char$$10];
              var v22274 = node$$72.data;
              var v18783 = v22274.character;
              var v13739 = v18783[char$$10];
              var v6992 = v13739[0];
              v6991.push(v6992);
            }
            i = i + 1;
            var v13740 = characters$$1.length;
            v6994 = i < v13740;
          }
        }
        return;
      }
      var samples$$1 = {};
      var char$$10;
      var result$$8 = {};
      i = 0;
      var v13741 = characters$$1.length;
      var v6997 = i < v13741;
      for (;v6997;) {
        var v6996 = characters$$1[i];
        samples$$1[v6996] = [];
        i = i + 1;
        var v13742 = characters$$1.length;
        v6997 = i < v13742;
      }
      root$$6.eachSubgraph(v488);
      i = 0;
      var v13743 = characters$$1.length;
      var v7000 = i < v13743;
      for (;v7000;) {
        char$$10 = characters$$1[i];
        var v6998 = result$$8;
        var v6999 = char$$10;
        var v13744 = samples$$1[char$$10];
        var v31159 = this.variance(v13744);
        v6998[v6999] = v31159;
        i = i + 1;
        var v13745 = characters$$1.length;
        v7000 = i < v13745;
      }
      return result$$8;
    }
    function v487(root$$5, characters) {
      function v486(node$$71) {
        var v13746 = node$$71.data;
        var v7005 = v13746.leaf;
        if (v7005) {
          i = 0;
          var v13747 = characters.length;
          var v7004 = i < v13747;
          for (;v7004;) {
            char$$9 = characters[i];
            var v22275 = node$$71.data;
            var v18784 = v22275.character;
            var v13748 = v18784[char$$9];
            if (v13748) {
              var v28672 = node$$71.data;
              var v27688 = v28672.character;
              var v26125 = v27688[char$$9];
              var v22276 = v26125[0];
              var v18785 = typeof v22276;
              v13748 = v18785 !== "undefined";
            }
            var v7003 = v13748;
            if (v7003) {
              var v7001 = samples[char$$9];
              var v22277 = node$$71.data;
              var v18786 = v22277.character;
              var v13749 = v18786[char$$9];
              var v7002 = v13749[0];
              v7001.push(v7002);
            }
            i = i + 1;
            var v13750 = characters.length;
            v7004 = i < v13750;
          }
        }
        return;
      }
      var samples = {};
      var char$$9;
      var result$$7 = {};
      i = 0;
      var v13751 = characters.length;
      var v7007 = i < v13751;
      for (;v7007;) {
        var v7006 = characters[i];
        samples[v7006] = [];
        i = i + 1;
        var v13752 = characters.length;
        v7007 = i < v13752;
      }
      root$$5.eachSubgraph(v486);
      i = 0;
      var v13753 = characters.length;
      var v7010 = i < v13753;
      for (;v7010;) {
        char$$9 = characters[i];
        var v7008 = result$$7;
        var v7009 = char$$9;
        var v13754 = samples[char$$9];
        var v31160 = this.sd(v13754);
        v7008[v7009] = v31160;
        i = i + 1;
        var v13755 = characters.length;
        v7010 = i < v13755;
      }
      return result$$7;
    }
    function v485(firstCharacter) {
      var v7011 = firstCharacter;
      var v13757 = !v7011;
      if (v13757) {
        var v13756 = this.config;
        v7011 = v13756.firstCharacter;
      }
      firstCharacter = v7011;
      var v7012 = !firstCharacter;
      if (v7012) {
        return;
      }
      var speciesHash = this.character;
      var speciesName;
      var char$$8;
      var i$$65;
      var v13758 = this.graph;
      var v7022 = v13758.nodes;
      for (i$$65 in v7022) {
        var v18787 = this.graph;
        var v13759 = v18787.nodes;
        var v7021 = v13759.hasOwnProperty(i$$65);
        if (v7021) {
          var v13760 = this.graph;
          var v7013 = v13760.nodes;
          var node$$70 = v7013[i$$65];
          var v7014 = node$$70.data;
          v7014.character = {};
          var v13761 = node$$70.data;
          var v7020 = v13761.leaf;
          if (v7020) {
            for (key in speciesHash) {
              var v7019 = speciesHash.hasOwnProperty(key);
              if (v7019) {
                var v7015 = speciesHash[key];
                var speciesCharacter = v7015[firstCharacter];
                var v13762 = node$$70.name;
                var v7018 = v13762 === key;
                if (v7018) {
                  var v7016 = node$$70.data;
                  v7016.colorCharacter = speciesCharacter;
                  var v7017 = node$$70.data;
                  v7017.character = speciesHash[key];
                  break;
                }
              }
            }
          }
        }
      }
      return;
    }
    function v484(node$$67, characterList) {
      function downPass(node$$68) {
        function v479(snode) {
          char$$7 = downPass(snode);
          i$$63 = 0;
          var v13763 = characterList.length;
          var v7026 = i$$63 < v13763;
          for (;v7026;) {
            key$$24 = characterList[i$$63];
            var v7023 = childrenChar[key$$24];
            var v13764 = !v7023;
            if (v13764) {
              v7023 = [];
            }
            childrenChar[key$$24] = v7023;
            var v7024 = childrenChar[key$$24];
            var v7025 = char$$7[key$$24];
            v7024.push(v7025);
            i$$63 = i$$63 + 1;
            var v13765 = characterList.length;
            v7026 = i$$63 < v13765;
          }
          return;
        }
        var childrenChar = {};
        var key$$24;
        var i$$63;
        var j$$7;
        node$$68.eachSubnode(v479);
        var v13766 = node$$68.data;
        var v7028 = v13766.leaf;
        if (v7028) {
          var v13767 = node$$68.data;
          var v7027 = v13767.character;
          var v13768 = !v7027;
          if (v13768) {
            v7027 = [];
          }
          return v7027;
        }
        var parentChar = {};
        j$$7 = 0;
        var v13769 = characterList.length;
        var v7036 = j$$7 < v13769;
        for (;v7036;) {
          key$$24 = characterList[j$$7];
          var v13770 = childrenChar[key$$24];
          var v7029 = v13770[0];
          var v13771 = !v7029;
          if (v13771) {
            v7029 = [];
          }
          var intersection = v7029;
          i$$63 = 0;
          var v18788 = childrenChar[key$$24];
          var v13772 = v18788.length;
          var v7031 = i$$63 < v13772;
          for (;v7031;) {
            var v13773 = childrenChar[key$$24];
            var v7030 = v13773[i$$63];
            var v13774 = !v7030;
            if (v13774) {
              v7030 = [];
            }
            char$$7 = v7030;
            intersection = that$$21.intersect(intersection, char$$7);
            i$$63 = i$$63 + 1;
            var v18789 = childrenChar[key$$24];
            var v13775 = v18789.length;
            v7031 = i$$63 < v13775;
          }
          var v13776 = intersection.length;
          var v7035 = v13776 > 0;
          if (v7035) {
            parentChar[key$$24] = intersection;
          } else {
            var v13777 = childrenChar[key$$24];
            var v7032 = v13777[0];
            var v13778 = !v7032;
            if (v13778) {
              v7032 = [];
            }
            char$$7 = v7032;
            i$$63 = 1;
            var v18790 = childrenChar[key$$24];
            var v13779 = v18790.length;
            var v7034 = i$$63 < v13779;
            for (;v7034;) {
              var v13780 = childrenChar[key$$24];
              var v7033 = v13780[i$$63];
              char$$7 = that$$21.union(char$$7, v7033);
              i$$63 = i$$63 + 1;
              var v18791 = childrenChar[key$$24];
              var v13781 = v18791.length;
              v7034 = i$$63 < v13781;
            }
            parentChar[key$$24] = char$$7;
          }
          j$$7 = j$$7 + 1;
          var v13782 = characterList.length;
          v7036 = j$$7 < v13782;
        }
        var v7037 = node$$68.data;
        var v18792 = that$$21.config;
        var v13783 = v18792.firstCharacter;
        v7037.colorCharacter = parentChar[v13783];
        var v7038 = node$$68.data;
        return v7038.character = parentChar;
      }
      function upPass(node$$69) {
        function v483(n$$36) {
          $upPass(n$$36);
          return;
        }
        function $upPass(n$$35) {
          function v482(sn) {
            $upPass(sn);
            return;
          }
          function v481(subn$$4) {
            var v18793 = subn$$4.data;
            var v13784 = v18793.character;
            var v7039 = v13784[key$$25];
            cUnion = that$$21.union(cUnion, v7039);
            return;
          }
          function v480(subn$$3) {
            var v7041 = !cIntersect;
            if (v7041) {
              var v13785 = subn$$3.data;
              var v7040 = v13785.character;
              cIntersect = v7040[key$$25];
              return;
            }
            var v18794 = subn$$3.data;
            var v13786 = v18794.character;
            var v7042 = v13786[key$$25];
            cIntersect = that$$21.intersect(cIntersect, v7042);
            return;
          }
          var v13787 = n$$35.data;
          var v7043 = v13787.leaf;
          if (v7043) {
            return;
          }
          var key$$25;
          var v7044 = n$$35.data;
          var morphData = v7044.character;
          var v7045 = n$$35.getParents();
          var p$$21 = v7045[0];
          var fp;
          var i$$64;
          for (key$$25 in morphData) {
            var v7052 = morphData.hasOwnProperty(key$$25);
            if (v7052) {
              var sp = morphData[key$$25];
              var v13788 = p$$21.data;
              var v7046 = v13788.character;
              var fa = v7046[key$$25];
              fp = that$$21.intersect(sp, fa);
              var v13789 = fp.length;
              var v13790 = fa.length;
              var v7050 = v13789 !== v13790;
              if (v7050) {
                var cIntersect;
                n$$35.eachSubnode(v480);
                var v13791 = cIntersect;
                if (v13791) {
                  var v18795 = cIntersect.length;
                  v13791 = v18795 !== 0;
                }
                var v7049 = v13791;
                if (v7049) {
                  var cUnion = [];
                  var aIntersect;
                  n$$35.eachSubnode(v481);
                  aIntersect = that$$21.intersect(cUnion, fa);
                  var v18796 = n$$35.data;
                  var v13792 = v18796.character;
                  var v7047 = v13792[key$$25];
                  fp = that$$21.union(aIntersect, v7047);
                } else {
                  var v18797 = n$$35.data;
                  var v13793 = v18797.character;
                  var v7048 = v13793[key$$25];
                  fp = that$$21.union(v7048, fa);
                }
              }
              var v13794 = n$$35.data;
              var v7051 = v13794.character;
              v7051[key$$25] = fp;
            }
          }
          n$$35.eachSubnode(v482);
          var v7053 = n$$35.data;
          var v18798 = n$$35.data;
          var v13795 = v18798.character;
          var v18799 = that$$21.config;
          var v13796 = v18799.firstCharacter;
          v7053.colorCharacter = v13795[v13796];
          return;
        }
        node$$69.eachSubnode(v483);
        return[];
      }
      var v13797 = characterList;
      if (v13797) {
        var v18800 = characterList.length;
        v13797 = v18800 != 0;
      }
      var v7054 = v13797;
      if (v7054) {
        var i$$62;
        var char$$7;
        var j$$6;
        var that$$21 = this;
        var result$$6;
        downPass(node$$67);
        upPass(node$$67);
      }
      return;
    }
    function v478(node$$66) {
      function v477(elem$$56) {
        elem$$56.exist = false;
        elem$$56.drawn = false;
        var v18801 = elem$$56.data;
        var v13798 = v18801.leaf;
        var v7057 = !v13798;
        if (v7057) {
          var v7055 = elem$$56.data;
          v7055.$type = "circle";
        } else {
          var v7056 = elem$$56.data;
          v7056.$type = "none";
        }
        elem$$56.collapsed = true;
        return;
      }
      function v476(elem$$55) {
        var v13799 = elem$$55.exist;
        var v7058 = !v13799;
        if (v7058) {
          elem$$55.exist = true;
          elem$$55.drawn = true;
        }
        var v18802 = elem$$55.data;
        var v13800 = v18802.leaf;
        var v7061 = !v13800;
        if (v7061) {
          var v7059 = elem$$55.data;
          v7059.$type = "circle";
        } else {
          var v7060 = elem$$55.data;
          v7060.$type = "none";
        }
        elem$$55.collapsed = false;
        var v13801 = elem$$55._depth;
        var v7063 = level$$13 < v13801;
        if (v7063) {
          var v7062 = elem$$55._depth;
          level$$13 = v7062 + 1;
        }
        return;
      }
      var level$$13 = 0;
      var v7070 = node$$66.collapsed;
      if (v7070) {
        node$$66.eachSubgraph(v476);
        var v18803 = node$$66.data;
        var v13802 = v18803.leaf;
        var v7066 = !v13802;
        if (v7066) {
          var v7064 = node$$66.data;
          v7064.$type = "circle";
        } else {
          var v7065 = node$$66.data;
          v7065.$type = "none";
        }
      } else {
        node$$66.eachSubgraph(v477);
        node$$66.exist = true;
        node$$66.drawn = true;
        level$$13 = false;
        var v18804 = node$$66.data;
        var v13803 = v18804.leaf;
        var v7069 = !v13803;
        if (v7069) {
          var v7067 = node$$66.data;
          v7067.$type = "triangle";
        } else {
          var v7068 = node$$66.data;
          v7068.$type = "none";
        }
      }
      return level$$13;
    }
    function v475(node$$65) {
      var v18805 = node$$65.data;
      var v13804 = v18805.$type;
      var v7071 = v13804 === "triangle";
      if (v7071) {
        node$$65.collapsed = true;
      } else {
        node$$65.collapsed = false;
      }
      return;
    }
    function v474(setA$$1, setB$$1) {
      setA$$1 = setA$$1 || [];
      setB$$1 = setB$$1 || [];
      var i$$61;
      var j$$5;
      var sets = [setA$$1, setB$$1];
      var char$$6;
      var union = {};
      i$$61 = 0;
      var v13805 = sets.length;
      var v7074 = i$$61 < v13805;
      for (;v7074;) {
        char$$6 = sets[i$$61];
        j$$5 = 0;
        var v13806 = char$$6.length;
        var v7073 = j$$5 < v13806;
        for (;v7073;) {
          var v7072 = char$$6[j$$5];
          union[v7072] = char$$6[j$$5];
          j$$5 = j$$5 + 1;
          var v13807 = char$$6.length;
          v7073 = j$$5 < v13807;
        }
        i$$61 = i$$61 + 1;
        var v13808 = sets.length;
        v7074 = i$$61 < v13808;
      }
      char$$6 = [];
      for (i$$61 in union) {
        var v7076 = union.hasOwnProperty(i$$61);
        if (v7076) {
          var v7075 = union[i$$61];
          char$$6.push(v7075);
        }
      }
      return char$$6;
    }
    function v473(setA, setB) {
      var v22278 = !setA;
      var v26126 = !v22278;
      if (v26126) {
        v22278 = !setB;
      }
      var v18806 = v22278;
      var v22280 = !v18806;
      if (v22280) {
        var v22279 = setA.length;
        v18806 = v22279 === 0;
      }
      var v13809 = v18806;
      var v18808 = !v13809;
      if (v18808) {
        var v18807 = setB.length;
        v13809 = v18807 === 0;
      }
      var v7077 = v13809;
      if (v7077) {
        return[];
      }
      var hashA = {};
      var i$$60;
      var result$$5 = [];
      i$$60 = 0;
      var v13810 = setA.length;
      var v7079 = i$$60 < v13810;
      for (;v7079;) {
        var v7078 = setA[i$$60];
        hashA[v7078] = true;
        i$$60 = i$$60 + 1;
        var v13811 = setA.length;
        v7079 = i$$60 < v13811;
      }
      i$$60 = 0;
      var v13812 = setB.length;
      var v7082 = i$$60 < v13812;
      for (;v7082;) {
        var v13813 = setB[i$$60];
        var v7081 = hashA[v13813];
        if (v7081) {
          var v7080 = setB[i$$60];
          result$$5.push(v7080);
        }
        i$$60 = i$$60 + 1;
        var v13814 = setB.length;
        v7082 = i$$60 < v13814;
      }
      return result$$5;
    }
    function v472(data$$25, testcase) {
      var v13815 = !data$$25;
      var v18810 = !v13815;
      if (v18810) {
        var v18809 = data$$25.length;
        v13815 = v18809 === 0;
      }
      var v7083 = v13815;
      if (v7083) {
        return;
      }
      switch(testcase) {
        case "quant":
          return this.isQuant(data$$25);
        case "quali":
          return this.isQuali(data$$25);
      }
      return;
    }
    function v471(data$$24) {
      var v18811 = data$$24[0];
      var v13816 = typeof v18811;
      var v7084 = v13816 === "string";
      if (v7084) {
        return true;
      } else {
        return false;
      }
      return;
    }
    function v470(data$$23) {
      var v18812 = data$$23[0];
      var v13817 = typeof v18812;
      var v7085 = v13817 === "number";
      if (v7085) {
        return true;
      } else {
        return false;
      }
      return;
    }
    function v469(ni, ui$$2) {
      var v18813 = !ni;
      var v22281 = !v18813;
      if (v22281) {
        v18813 = !ui$$2;
      }
      var v13818 = v18813;
      var v18816 = !v13818;
      if (v18816) {
        var v18814 = ni.length;
        var v18815 = ui$$2.length;
        v13818 = v18814 != v18815;
      }
      var v7086 = v13818;
      if (v7086) {
        return;
      }
      var v13819 = this.multiply(ni, ui$$2);
      var v7087 = this.sum(v13819);
      var v7088 = this.sum(ni);
      return v7087 / v7088;
    }
    function v468(num$$7, sd$$1, ui$$1, up$$1) {
      var v26127 = !num$$7;
      var v27689 = !v26127;
      if (v27689) {
        v26127 = !sd$$1;
      }
      var v22282 = v26127;
      var v26128 = !v22282;
      if (v26128) {
        v22282 = !ui$$1;
      }
      var v18817 = v22282;
      var v22285 = !v18817;
      if (v22285) {
        var v22283 = num$$7.length;
        var v22284 = sd$$1.length;
        v18817 = v22283 !== v22284;
      }
      var v13820 = v18817;
      var v18820 = !v13820;
      if (v18820) {
        var v18818 = sd$$1.length;
        var v18819 = ui$$1.length;
        v13820 = v18818 !== v18819;
      }
      var v7089 = v13820;
      if (v7089) {
        return;
      }
      var v7090 = this.variancePop(num$$7, sd$$1, ui$$1, up$$1);
      return Math.sqrt(v7090);
    }
    function v467(num$$6, sd, ui, up) {
      function v466(elem$$54) {
        return elem$$54 - 1;
      }
      var v26129 = !num$$6;
      var v27690 = !v26129;
      if (v27690) {
        v26129 = !sd;
      }
      var v22286 = v26129;
      var v26130 = !v22286;
      if (v26130) {
        v22286 = !ui;
      }
      var v18821 = v22286;
      var v22289 = !v18821;
      if (v22289) {
        var v22287 = num$$6.length;
        var v22288 = sd.length;
        v18821 = v22287 !== v22288;
      }
      var v13821 = v18821;
      var v18824 = !v13821;
      if (v18824) {
        var v18822 = sd.length;
        var v18823 = ui.length;
        v13821 = v18822 !== v18823;
      }
      var v7091 = v13821;
      if (v7091) {
        return;
      }
      var v13822 = num$$6.length;
      var v7092 = v13822 === 1;
      if (v7092) {
        return 0;
      }
      var sumNum = this.sum(num$$6);
      var sqUp = up * up;
      var lessNum;
      var sqSd;
      var sqUi;
      var v7093 = $jit.util;
      lessNum = v7093.map(num$$6, v466);
      sqSd = this.square(sd);
      sqUi = this.square(ui);
      var v22290 = this.multiply(lessNum, sqSd);
      var v18825 = this.sum(v22290);
      var v22291 = this.multiply(num$$6, sqUi);
      var v18826 = this.sum(v22291);
      var v13823 = v18825 + v18826;
      var v13824 = sumNum * sqUp;
      var v7094 = v13823 - v13824;
      var v7095 = sumNum - 1;
      return v7094 / v7095;
    }
    function v465(num1, num2) {
      var v18827 = !num1;
      var v22292 = !v18827;
      if (v22292) {
        v18827 = !num2;
      }
      var v13825 = v18827;
      var v18830 = !v13825;
      if (v18830) {
        var v18828 = num1.length;
        var v18829 = num2.length;
        v13825 = v18828 !== v18829;
      }
      var v7096 = v13825;
      if (v7096) {
        return;
      }
      var i$$59;
      var result$$4 = [];
      i$$59 = 0;
      var v13826 = num1.length;
      var v7098 = i$$59 < v13826;
      for (;v7098;) {
        var v13827 = num1[i$$59];
        var v13828 = num2[i$$59];
        var v7097 = v13827 * v13828;
        result$$4.push(v7097);
        i$$59 = i$$59 + 1;
        var v13829 = num1.length;
        v7098 = i$$59 < v13829;
      }
      return result$$4;
    }
    function v464(num$$5) {
      function v463(elem$$53) {
        return elem$$53 * elem$$53;
      }
      var v7099 = $jit.util;
      return v7099.map(num$$5, v463);
    }
    function v462(sample$$3) {
      var v13830 = !sample$$3;
      var v18832 = !v13830;
      if (v18832) {
        var v18831 = sample$$3.length;
        v13830 = v18831 === 0;
      }
      var v7100 = v13830;
      if (v7100) {
        return;
      }
      var v7101 = this.variance(sample$$3);
      return Math.sqrt(v7101);
    }
    function v461(sample$$2) {
      function v460(acc$$1, value$$40) {
        var diff$$3 = value$$40 - avg;
        var v7102 = diff$$3 * diff$$3;
        return acc$$1 + v7102;
      }
      var v13831 = !sample$$2;
      var v18834 = !v13831;
      if (v18834) {
        var v18833 = sample$$2.length;
        v13831 = v18833 === 0;
      }
      var v7103 = v13831;
      if (v7103) {
        return;
      }
      var avg;
      var num$$4;
      var total;
      avg = this.mean(sample$$2);
      num$$4 = sample$$2.length;
      total = $$$1.reduce(sample$$2, v460, 0);
      return total / num$$4;
    }
    function v459(sample$$1, number$$2) {
      var v26131 = !sample$$1;
      var v27692 = !v26131;
      if (v27692) {
        var v27691 = sample$$1.length;
        v26131 = v27691 === 0;
      }
      var v22293 = v26131;
      var v26132 = !v22293;
      if (v26132) {
        v22293 = !number$$2;
      }
      var v18835 = v22293;
      var v22295 = !v18835;
      if (v22295) {
        var v22294 = number$$2.length;
        v18835 = v22294 === 0;
      }
      var v13832 = v18835;
      var v18838 = !v13832;
      if (v18838) {
        var v18836 = number$$2.length;
        var v18837 = sample$$1.length;
        v13832 = v18836 !== v18837;
      }
      var v7104 = v13832;
      if (v7104) {
        return;
      }
      var i$$58;
      var sum$$1 = 0;
      var count$$3 = 0;
      i$$58 = 0;
      var v13833 = number$$2.length;
      var v7105 = i$$58 < v13833;
      for (;v7105;) {
        var v18839 = number$$2[i$$58];
        var v18840 = sample$$1[i$$58];
        var v13834 = v18839 * v18840;
        sum$$1 = sum$$1 + v13834;
        var v13835 = number$$2[i$$58];
        count$$3 = count$$3 + v13835;
        i$$58 = i$$58 + 1;
        var v13836 = number$$2.length;
        v7105 = i$$58 < v13836;
      }
      return sum$$1 / count$$3;
    }
    function v458(sample) {
      var v13837 = !sample;
      var v18842 = !v13837;
      if (v18842) {
        var v18841 = sample.length;
        v13837 = v18841 === 0;
      }
      var v7106 = v13837;
      if (v7106) {
        return;
      }
      var v7107 = this.sum(sample);
      var v7108 = sample.length;
      return v7107 / v7108;
    }
    function v457(array$$13) {
      function v456(acc, value$$39) {
        return acc + value$$39;
      }
      var v13838 = !array$$13;
      var v18844 = !v13838;
      if (v18844) {
        var v18843 = array$$13.length;
        v13838 = v18843 === 0;
      }
      var v7109 = v13838;
      if (v7109) {
        return;
      }
      return $$$1.reduce(array$$13, v456, 0);
    }
    function v455(obj$$30) {
      var v13839 = typeof obj$$30;
      var v7110 = v13839 === "undefined";
      if (v7110) {
        return false;
      }
      var i$$57;
      for (i$$57 in obj$$30) {
        var v7111 = obj$$30.hasOwnProperty(i$$57);
        if (v7111) {
          return true;
        }
      }
      return false;
    }
    function v454(controller$$4) {
      var $Phylo = $jit.Phylo;
      var v7112 = {type:"rectangle"};
      var config$$7 = {levelsToShow:2, levelDistance:30, constrained:true, Node:v7112, duration:700, offsetX:0, offsetY:0};
      var v7113 = Options("Canvas", "Fx", "Tree", "PhyloJive", "Node", "Edge", "Controller", "Tips", "NodeStyles", "Events", "Navigation", "Label");
      var v31161 = $$$1.merge(v7113, config$$7, controller$$4);
      this.controller = this.config = v31161;
      var canvasConfig = this.config;
      var v7119 = canvasConfig.useCanvas;
      if (v7119) {
        this.canvas = canvasConfig.useCanvas;
        var v7114 = this.config;
        var v18845 = this.canvas;
        var v13840 = v18845.id;
        v7114.labelContainer = v13840 + "-label";
      } else {
        var v7117 = canvasConfig.background;
        if (v7117) {
          var v7115 = {type:"Circles"};
          var v7116 = canvasConfig.background;
          var v31162 = $$$1.merge(v7115, v7116);
          canvasConfig.background = v31162;
        }
        var v31163 = new Canvas(this, canvasConfig);
        this.canvas = v31163;
        var v7118 = this.config;
        var v18846;
        var v27693 = canvasConfig.injectInto;
        var v26133 = typeof v27693;
        var v22297 = v26133 === "string";
        if (v22297) {
          v18846 = canvasConfig.injectInto;
        } else {
          var v22296 = canvasConfig.injectInto;
          v18846 = v22296.id;
        }
        var v13841 = v18846;
        v7118.labelContainer = v13841 + "-label";
      }
      this.graphOptions = {"klass":Complex};
      var v7120 = this.graphOptions;
      var v13842 = this.config;
      var v7121 = v13842.Node;
      var v13843 = this.config;
      var v7122 = v13843.Edge;
      var v31164 = new Graph(v7120, v7121, v7122);
      this.graph = v31164;
      var v13844 = $Phylo.Label;
      var v18847 = canvasConfig.Label;
      var v13845 = v18847.type;
      var v7123 = v13844[v13845];
      var v31165 = new v7123(this);
      this.labels = v31165;
      var v7124 = $Phylo.Plot;
      var v31166 = new v7124(this, $Phylo);
      this.fx = v31166;
      var v7125 = $Phylo.Op;
      var v31167 = new v7125(this);
      this.op = v31167;
      var v7126 = $Phylo.Group;
      var v31168 = new v7126(this);
      this.group = v31168;
      var v7127 = $Phylo.Geom;
      var v31169 = new v7127(this);
      this.geom = v31169;
      this.clickedNode = null;
      this.initializeExtras();
      return;
    }
    function getNodesToHide(node$$63) {
      function v451(n$$33) {
        var v13846 = n$$33.exist;
        if (v13846) {
          var v18848 = n$$33.selected;
          v13846 = !v18848;
        }
        var v7128 = v13846;
        if (v7128) {
          nodeArray.push(n$$33);
        }
        return;
      }
      function v450(n$$32) {
        var v13847 = n$$32.exist;
        if (v13847) {
          var v18849 = n$$32.selected;
          v13847 = !v18849;
        }
        var v7131 = v13847;
        if (v7131) {
          var v13848 = node$$63.id;
          var v7130 = n$$32.isDescendantOf(v13848);
          if (v7130) {
            var v13849 = n$$32._depth;
            var v7129 = v13849 <= level$$12;
            if (v7129) {
              nodeArray.push(n$$32);
            }
          } else {
            nodeArray.push(n$$32);
          }
        }
        return;
      }
      var v7132 = node$$63;
      var v13850 = !v7132;
      if (v13850) {
        v7132 = this.clickedNode;
      }
      node$$63 = v7132;
      var v18850 = this.config;
      var v13851 = v18850.constrained;
      var v7133 = !v13851;
      if (v7133) {
        return[];
      }
      var i$$56;
      var Geom = this.geom;
      var graph$$18 = this.graph;
      var canvas$$31 = this.canvas;
      var level$$12 = node$$63._depth;
      var nodeArray = [];
      graph$$18.eachNode(v450);
      var leafLevel = Geom.getRightLevelToShow(node$$63, canvas$$31);
      node$$63.eachLevel(leafLevel, leafLevel, v451);
      i$$56 = 0;
      var v13852 = nodesInPath.length;
      var v7137 = i$$56 < v13852;
      for (;v7137;) {
        var v7134 = this.graph;
        var v7135 = nodesInPath[i$$56];
        var n$$31 = v7134.getNode(v7135);
        var v18851 = node$$63.id;
        var v13853 = n$$31.isDescendantOf(v18851);
        var v7136 = !v13853;
        if (v7136) {
          nodeArray.push(n$$31);
        }
        i$$56 = i$$56 + 1;
        var v13854 = nodesInPath.length;
        v7137 = i$$56 < v13854;
      }
      return nodeArray;
    }
    function getNodesToShow(node$$64) {
      function v453(n$$34) {
        function v452(ch$$11) {
          var v7138 = ch$$11.exist;
          if (v7138) {
            var v13855 = ch$$11.drawn;
            v7138 = !v13855;
          }
          return v7138;
        }
        var v18852 = config$$6.multitree;
        if (v18852) {
          var v26134 = n$$34.data;
          var v22298 = "$orn" in v26134;
          v18852 = !v22298;
        }
        var v13856 = v18852;
        if (v13856) {
          v13856 = n$$34.anySubnode(v452);
        }
        var v7140 = v13856;
        if (v7140) {
          nodeArray$$1.push(n$$34);
        } else {
          var v13857 = n$$34.drawn;
          if (v13857) {
            var v18853 = n$$34.anySubnode("drawn");
            v13857 = !v18853;
          }
          var v7139 = v13857;
          if (v7139) {
            nodeArray$$1.push(n$$34);
          }
        }
        return;
      }
      var nodeArray$$1 = [];
      var config$$6 = this.config;
      var v7141 = node$$64;
      var v13858 = !v7141;
      if (v13858) {
        v7141 = this.clickedNode;
      }
      node$$64 = v7141;
      var v7142 = this.clickedNode;
      var v7143 = config$$6.levelsToShow;
      v7142.eachLevel(0, v7143, v453);
      return nodeArray$$1;
    }
    var nodesInPath = [];
    var v18854 = Layouts.PhyloJive;
    var v13859 = [Loader, Extras, v18854];
    var v7144 = {Implements:v13859, initialize:v454, hasProperty:v455, sum:v457, mean:v458, wtmean:v459, variance:v461, sd:v462, square:v464, multiply:v465, variancePop:v467, sdPop:v468, meanPop:v469, isQuant:v470, isQuali:v471, characterType:v472, intersect:v473, union:v474, setCollapsed:v475, nodesExpCol:v478, fitchParsimony:v484, setCharacter:v485, sdAtTree:v487, varianceAtTree:v489, meanAtTree:v491, checkQuant:v493, checkQuali:v495, quantParsimony:v497, listCharacters:v498, findAllCharTypes:v500, 
    findQuantMinMax:v502, findQuantRange:v503, colorCharacter:v506, findDistinctCharacterStates:v507, createLegend:v508, findIndex:v509, plot:v510, fitScreen:v511, zoom:v513, switchPosition:v515, switchAlignment:v516, addNodeInPath:v517, clearNodesInPath:v518, refresh:v519, reposition:v521, requestNodes:v523, contract:v524, move:v525, expand:v526, selectPath:v529, setRoot:v531, addSubtree:v532, removeSubtree:v534, select:v537, onClick:v538};
    return new Class(v7144);
  }
  function v449() {
    function v448(node$$61, leaves$$1) {
      function v447(node$$62) {
        var v13860 = leaves$$1;
        var v13861 = that$$20.computeLeaves(node$$62, 0);
        leaves$$1 = v13860 + v13861;
        return;
      }
      var that$$20 = this;
      node$$61.eachSubnode(v447);
      var v13862 = node$$61.data;
      var v7146 = v13862.leaf;
      if (v7146) {
        var v7145 = node$$61.data;
        return v7145.leaves = 1;
      }
      var v7147 = node$$61.data;
      return v7147.leaves = leaves$$1;
    }
    function v446(node$$60, prop$$34) {
      function v445(orn$$3) {
        var v7148 = that$$19.graph;
        var v7149 = that$$19.config;
        design(v7148, node$$60, prop$$34, v7149, orn$$3, prop$$34);
        var v7150 = ["x", "y"];
        var v18855 = orn$$3 == "left";
        var v22299 = !v18855;
        if (v22299) {
          v18855 = orn$$3 == "right";
        }
        var v13863 = v18855;
        var v7151 = +v13863;
        var i$$55 = v7150[v7151];
        var prev;
        var v7152 = !prev;
        if (v7152) {
          prev = node$$60;
        }
        return;
      }
      var config$$5 = this.config;
      var multitree$$2 = config$$5.multitree;
      var align$$1 = config$$5.align;
      var v7153 = align$$1 !== "center";
      if (v7153) {
        v7153 = config$$5.indent;
      }
      var indent = v7153;
      var orn$$2 = config$$5.orientation;
      var v7154;
      if (multitree$$2) {
        v7154 = ["top", "right", "bottom", "left"];
      } else {
        v7154 = [orn$$2];
      }
      var orns = v7154;
      var that$$19 = this;
      $$$1.each(orns, v445);
      return;
    }
    function v444(property, computeLevels) {
      var prop$$33 = property || "start";
      var v7155 = this.graph;
      var v7156 = this.root;
      var node$$59 = v7155.getNode(v7156);
      var v7157 = {"drawn":true, "exist":true, "selected":true};
      $$$1.extend(node$$59, v7157);
      var v7158 = this.graph;
      var v7159 = this.config;
      NodeDim.compute(v7158, prop$$33, v7159);
      var v18856 = !computeLevels;
      var v13864 = !v18856;
      var v18858 = !v13864;
      if (v18858) {
        var v18857 = "_depth" in node$$59;
        v13864 = !v18857;
      }
      var v7162 = v13864;
      if (v7162) {
        var v7160 = this.graph;
        var v7161 = this.root;
        v7160.computeLevels(v7161, 0, "ignore");
      }
      this.computePositions(node$$59, prop$$33);
      return;
    }
    function getBoundaries(graph$$16, config$$3, level$$11, orn, prop$$31) {
      function v440(n$$28) {
        var v18859 = n$$28._depth;
        var v13865 = v18859 == level$$11;
        if (v13865) {
          var v18860 = !multitree;
          var v22301 = !v18860;
          if (v22301) {
            var v26135 = n$$28.data;
            var v22300 = "$orn" in v26135;
            if (v22300) {
              var v27694 = n$$28.data;
              var v26136 = v27694.$orn;
              v22300 = v26136 == orn;
            }
            v18860 = v22300;
          }
          v13865 = v18860;
        }
        var v7165 = v13865;
        if (v7165) {
          var dw = n$$28.getData("width", prop$$31);
          var dh = n$$28.getData("height", prop$$31);
          var v7163;
          var v13866 = w$$6 < dw;
          if (v13866) {
            v7163 = dw;
          } else {
            v7163 = w$$6;
          }
          w$$6 = v7163;
          var v7164;
          var v13867 = h$$4 < dh;
          if (v13867) {
            v7164 = dh;
          } else {
            v7164 = h$$4;
          }
          h$$4 = v7164;
        }
        return;
      }
      var dim$$9 = config$$3.Node;
      var multitree = config$$3.multitree;
      var v7168 = dim$$9.overridable;
      if (v7168) {
        var w$$6 = -1;
        var h$$4 = -1;
        graph$$16.eachNode(v440);
        var v13868;
        var v18861 = w$$6 < 0;
        if (v18861) {
          v13868 = dim$$9.width;
        } else {
          v13868 = w$$6;
        }
        var v7166 = v13868;
        var v13869;
        var v18862 = h$$4 < 0;
        if (v18862) {
          v13869 = dim$$9.height;
        } else {
          v13869 = h$$4;
        }
        var v7167 = v13869;
        return{"width":v7166, "height":v7167};
      } else {
        return dim$$9;
      }
      return;
    }
    function design(graph$$17, node$$56, prop$$32, config$$4, orn$$1) {
      function v443(node$$58) {
        var v18863 = node$$58.data;
        var v13870 = v18863.len;
        var v7170 = v13870 < min$$2;
        if (v7170) {
          var v7169 = node$$58.data;
          min$$2 = v7169.len;
        }
        var v18864 = node$$58.data;
        var v13871 = v18864.len;
        var v7172 = v13871 > max$$1;
        if (v7172) {
          var v7171 = node$$58.data;
          max$$1 = v7171.len;
        }
        return;
      }
      function $design(node$$57, maxsize, y$$47, xpos) {
        function v442(n$$30) {
          var v18865 = n$$30.exist;
          var v13872 = !v18865;
          if (v13872) {
            var v18866 = n$$30.drawn;
            v13872 = !v18866;
          }
          var v7173 = v13872;
          if (v7173) {
            anyChildVisible = false;
          }
          return;
        }
        function v441(n$$29) {
          var v7176 = n$$29.exist;
          if (v7176) {
            subnodeVisible = true;
            y$$47 = $design(n$$29, null, y$$47, xpos);
            var v13873 = y$$47.ymid;
            var v7174 = ymin > v13873;
            if (v7174) {
              ymin = y$$47.ymid;
            }
            var v13874 = y$$47.ymid;
            var v7175 = ymax < v13874;
            if (v7175) {
              ymax = y$$47.ymid;
            }
          }
          return;
        }
        var ymin = Number.MAX_VALUE;
        var ymax = Number.MIN_VALUE;
        var subnodeVisible = false;
        var v7177 = config$$4.branchLength;
        if (v7177) {
          var v26137 = graph$$17.factor;
          var v27695 = node$$57.data;
          var v26138 = v27695.len;
          var v22302 = v26137 * v26138;
          var v22303 = config$$4.branchMultiplier;
          var v18867 = v22302 * v22303;
          var v13875 = 10 + v18867;
          xpos = xpos + v13875;
        } else {
          var v13876 = config$$4.levelDistance;
          xpos = xpos + v13876;
        }
        node$$57.eachSubnode(v441);
        var v13877 = graph$$17.maxXpos;
        var v7178 = v13877 < xpos;
        if (v7178) {
          graph$$17.maxXpos = xpos;
        }
        if (subnodeVisible) {
          var v7179 = y$$47;
          var v13878 = node$$57.getPos(prop$$32);
          var v18868 = ymax + ymin;
          v7179.ymid = v13878["y"] = v18868 / 2;
        } else {
          var v7180 = y$$47;
          var v13879 = y$$47;
          var v18869 = y$$47;
          var v22304 = node$$57.getPos(prop$$32);
          var v27696 = y$$47.ymax;
          var v27697 = node$$57.getData(s$$9, prop$$32);
          var v26139 = v27696 + v27697;
          v7180.ymid = v13879.ymin = v18869.ymax = v22304["y"] = v26139 + siblingOffset;
        }
        var v7181 = node$$57.getPos(prop$$32);
        v7181["x"] = xpos;
        var v18870 = node$$57.data;
        var v13880 = v18870.leaf;
        var v7187 = !v13880;
        if (v7187) {
          var anyChildVisible = true;
          node$$57.eachLevel(1, 1, v442);
          var v7186 = !anyChildVisible;
          if (v7186) {
            var v7182 = node$$57.data;
            v7182.display = "";
            var v7183 = node$$57.data;
            v7183.$type = "triangle";
          } else {
            var v7184 = node$$57.data;
            v7184.display = "none";
            var v7185 = node$$57.data;
            v7185.$type = "circle";
          }
        }
        return y$$47;
      }
      var multitree$$1 = config$$4.multitree;
      var auxp = ["x", "y"];
      var auxs = ["width", "height"];
      var v13881 = orn$$1 == "left";
      var v18871 = !v13881;
      if (v18871) {
        v13881 = orn$$1 == "right";
      }
      var v7188 = v13881;
      var ind = +v7188;
      var p$$20 = auxp[ind];
      var v7189 = 1 - ind;
      var notp = auxp[v7189];
      var cnode = config$$4.Node;
      var s$$9 = auxs[ind];
      var v7190 = 1 - ind;
      var nots = auxs[v7190];
      var siblingOffset = config$$4.siblingOffset;
      var subtreeOffset = config$$4.subtreeOffset;
      var align = config$$4.align;
      graph$$17.maxXpos = Number.MIN_VALUE;
      var v22305 = graph$$17.maxLen;
      var v18872 = !v22305;
      if (v18872) {
        var v22306 = graph$$17.minLen;
        v18872 = !v22306;
      }
      var v13882 = v18872;
      if (v13882) {
        var v18873 = graph$$17.factor;
        v13882 = !v18873;
      }
      var v7194 = v13882;
      if (v7194) {
        var max$$1 = Number.MIN_VALUE;
        var min$$2 = Number.MAX_VALUE;
        graph$$17.eachNode(v443);
        graph$$17.minLen = min$$2;
        graph$$17.maxLen = max$$1;
        var v7191 = config$$4.width;
        var v13883 = graph$$17.depth;
        var v7192 = v13883.length;
        var constant = v7191 / v7192;
        var v13884 = graph$$17.maxLen;
        var v13885 = graph$$17.minLen;
        var v7193 = v13884 - v13885;
        graph$$17.factor = constant / v7193;
      }
      var v7195 = {ymid:0, ymin:0, ymax:0};
      $design(node$$56, false, v7195, 0);
      var v13886 = graph$$17.maxXpos;
      var v26140 = node$$56.data;
      var v22307 = v26140.$dim;
      var v18874 = v22307 + 10;
      var v22308 = !v18874;
      if (v22308) {
        v18874 = 0;
      }
      var v13887 = v18874;
      graph$$17.maxXpos = v13886 + v13887;
      return;
    }
    var v7196 = Array.prototype;
    var slice = v7196.slice;
    var v7197 = {compute:v444, computePositions:v446, computeLeaves:v448};
    return new Class(v7197);
  }
  function v439(opt$$24) {
    var v13888 = this.label;
    var v7198 = v13888.style;
    var v7199 = {"visibility":"hidden", "position":"absolute", "width":"auto", "height":"auto"};
    $$$1.extend(v7198, v7199);
    var v7200 = this.label;
    v7200.className = "jit-autoadjust-label";
    return;
  }
  function v438(opt$$23) {
    var v13889 = this.label;
    var v7203 = !v13889;
    if (v7203) {
      var v31170 = document.createElement("div");
      this.label = v31170;
      var v7201 = document.body;
      var v7202 = this.label;
      v7201.appendChild(v7202);
    }
    this.setLabelStyles(opt$$23);
    return;
  }
  function v437(graph$$15, prop$$30, opt$$22) {
    function v436(n$$27) {
      var autoWidth = n$$27.getData("autoWidth");
      var autoHeight = n$$27.getData("autoHeight");
      var v7211 = autoWidth || autoHeight;
      if (v7211) {
        var v7204 = n$$27.data;
        delete v7204.$width;
        var v7205 = n$$27.data;
        delete v7205.$height;
        var v7206 = n$$27.data;
        delete v7206.$dim;
        var width$$22 = n$$27.getData("width");
        var height$$19 = n$$27.getData("height");
        var v7207;
        if (autoWidth) {
          v7207 = "auto";
        } else {
          v7207 = width$$22 + "px";
        }
        style$$5.width = v7207;
        var v7208;
        if (autoHeight) {
          v7208 = "auto";
        } else {
          v7208 = height$$19 + "px";
        }
        style$$5.height = v7208;
        label$$10.innerHTML = n$$27.name;
        var offsetWidth = label$$10.offsetWidth;
        var offsetHeight = label$$10.offsetHeight;
        var type$$55 = n$$27.getData("type");
        var v18875 = ["circle", "square", "triangle", "star"];
        var v13890 = $$$1.indexOf(v18875, type$$55);
        var v7210 = v13890 === -1;
        if (v7210) {
          n$$27.setData("width", offsetWidth);
          n$$27.setData("height", offsetHeight);
        } else {
          var v7209;
          var v13891 = offsetWidth > offsetHeight;
          if (v13891) {
            v7209 = offsetWidth;
          } else {
            v7209 = offsetHeight;
          }
          var dim$$8 = v7209;
          n$$27.setData("width", dim$$8);
          n$$27.setData("height", dim$$8);
          n$$27.setData("dim", dim$$8);
        }
      }
      return;
    }
    this.initializeLabel(opt$$22);
    var label$$10 = this.label;
    var style$$5 = label$$10.style;
    graph$$15.eachNode(v436);
    return;
  }
  function v435(type$$54) {
    function v434(node$$55) {
      function v433(adj$$20) {
        var nodeTo$$5 = adj$$20.nodeTo;
        var v22309 = nodeTo$$5.visited;
        var v18876 = !v22309;
        var v13892 = !v18876;
        var v7212 = v13892 === T$$1;
        if (v7212) {
          var ansAdj = {};
          ansAdj.nodeTo = nodeTo$$5.id;
          ansAdj.data = adj$$20.data;
          adjs$$2.push(ansAdj);
        }
        return;
      }
      var ansNode = {};
      ansNode.id = node$$55.id;
      ansNode.name = node$$55.name;
      ansNode.data = node$$55.data;
      var adjs$$2 = [];
      node$$55.eachAdjacency(v433);
      ansNode.adjacencies = adjs$$2;
      ans$$13.push(ansNode);
      node$$55.visited = !T$$1;
      return;
    }
    function recTree(node$$54) {
      function v432(n$$26) {
        var v7213 = recTree(n$$26);
        ch$$10.push(v7213);
        return;
      }
      var ans$$14 = {};
      ans$$14.id = node$$54.id;
      ans$$14.name = node$$54.name;
      ans$$14.data = node$$54.data;
      var ch$$10 = [];
      node$$54.eachSubnode(v432);
      ans$$14.children = ch$$10;
      return ans$$14;
    }
    type$$54 = type$$54 || "tree";
    var v7218 = type$$54 == "tree";
    if (v7218) {
      var ans$$13 = {};
      var v7214 = this.graph;
      var v7215 = this.root;
      var rootNode = v7214.getNode(v7215);
      ans$$13 = recTree(rootNode);
      return ans$$13;
    } else {
      ans$$13 = [];
      var v22310 = this.graph;
      var v22311 = this.root;
      var v18877 = v22310.getNode(v22311);
      var v13893 = v18877.visited;
      var v7216 = !v13893;
      var T$$1 = !v7216;
      var v7217 = this.graph;
      v7217.eachNode(v434);
      return ans$$13;
    }
    return;
  }
  function v431(json$$8, i$$53) {
    this.json = json$$8;
    var v13894 = this.labels;
    if (v13894) {
      var v18878 = this.labels;
      v13894 = v18878.clearLabels;
    }
    var v7220 = v13894;
    if (v7220) {
      var v7219 = this.labels;
      v7219.clearLabels(true);
    }
    var v31171 = this.construct(json$$8);
    this.graph = v31171;
    var v13895 = $$$1.type(json$$8);
    var v7222 = v13895 != "array";
    if (v7222) {
      this.root = json$$8.id;
    } else {
      var v18879;
      if (i$$53) {
        v18879 = i$$53;
      } else {
        v18879 = 0;
      }
      var v13896 = v18879;
      var v7221 = json$$8[v13896];
      this.root = v7221.id;
    }
    return;
  }
  function v430(json$$5) {
    function v429(ans$$12, json$$7) {
      function getNode(id$$28) {
        var i$$52 = 0;
        var l$$20 = json$$7.length;
        var v7224 = i$$52 < l$$20;
        for (;v7224;) {
          var v18880 = json$$7[i$$52];
          var v13897 = v18880.id;
          var v7223 = v13897 == id$$28;
          if (v7223) {
            return json$$7[i$$52];
          }
          i$$52++;
          v7224 = i$$52 < l$$20;
        }
        var newNode$$1 = {"id":id$$28, "name":id$$28};
        return ans$$12.addNode(newNode$$1);
      }
      var i$$51 = 0;
      var l$$19 = json$$7.length;
      var v7232 = i$$51 < l$$19;
      for (;v7232;) {
        var v7225 = json$$7[i$$51];
        ans$$12.addNode(v7225);
        var v7226 = json$$7[i$$51];
        var adj$$19 = v7226.adjacencies;
        if (adj$$19) {
          var j$$4 = 0;
          var lj = adj$$19.length;
          var v7231 = j$$4 < lj;
          for (;v7231;) {
            var node$$53 = adj$$19[j$$4];
            var data$$22 = {};
            var v18881 = adj$$19[j$$4];
            var v13898 = typeof v18881;
            var v7228 = v13898 != "string";
            if (v7228) {
              var v7227 = node$$53.data;
              data$$22 = $$$1.merge(v7227, {});
              node$$53 = node$$53.nodeTo;
            }
            var v7229 = json$$7[i$$51];
            var v7230 = getNode(node$$53);
            ans$$12.addAdjacence(v7229, v7230, data$$22);
            j$$4++;
            v7231 = j$$4 < lj;
          }
        }
        i$$51++;
        v7232 = i$$51 < l$$19;
      }
      return;
    }
    function v428(ans$$11, json$$6) {
      ans$$11.addNode(json$$6);
      var v7236 = json$$6.children;
      if (v7236) {
        var i$$50 = 0;
        var ch$$9 = json$$6.children;
        var v13899 = ch$$9.length;
        var v7235 = i$$50 < v13899;
        for (;v7235;) {
          var v7233 = ch$$9[i$$50];
          ans$$11.addAdjacence(json$$6, v7233);
          var v7234 = ch$$9[i$$50];
          arguments.callee(ans$$11, v7234);
          i$$50++;
          var v13900 = ch$$9.length;
          v7235 = i$$50 < v13900;
        }
      }
      return;
    }
    var v7237 = $$$1.type(json$$5);
    var isGraph = v7237 == "array";
    var v7238 = this.graphOptions;
    var v13901 = this.config;
    var v7239 = v13901.Node;
    var v13902 = this.config;
    var v7240 = v13902.Edge;
    var v13903 = this.config;
    var v7241 = v13903.Label;
    var ans$$10 = new Graph(v7238, v7239, v7240, v7241);
    var v7242 = !isGraph;
    if (v7242) {
      v428(ans$$10, json$$5);
    } else {
      v429(ans$$10, json$$5);
    }
    return ans$$10;
  }
  function v427(node$$52, canvas$$30) {
    var config$$2 = this.config;
    var level$$10 = config$$2.levelsToShow;
    var constrained = config$$2.constrained;
    var v7243 = !constrained;
    if (v7243) {
      return level$$10;
    }
    var v18882 = this.treeFitsInCanvas(node$$52, canvas$$30, level$$10);
    var v13904 = !v18882;
    if (v13904) {
      v13904 = level$$10 > 1;
    }
    var v7244 = v13904;
    for (;v7244;) {
      level$$10--;
      var v18883 = this.treeFitsInCanvas(node$$52, canvas$$30, level$$10);
      var v13905 = !v18883;
      if (v13905) {
        v13905 = level$$10 > 1;
      }
      v7244 = v13905;
    }
    return level$$10;
  }
  function v426(node$$51, canvas$$29, callback$$25) {
    function v425(n$$25) {
      var v7245 = n$$25._depth;
      var v7246 = node$$51._depth;
      var d$$4 = v7245 - v7246;
      var v7249 = d$$4 > level$$9;
      if (v7249) {
        opt$$21.onHide(n$$25);
        var v7247 = opt$$21.execHide;
        if (v7247) {
          n$$25.drawn = false;
          n$$25.exist = false;
          fx$$1.hideLabel(n$$25, false);
        }
      } else {
        opt$$21.onShow(n$$25);
        var v7248 = opt$$21.execShow;
        if (v7248) {
          n$$25.exist = true;
        }
      }
      return;
    }
    var level$$9 = this.getRightLevelToShow(node$$51, canvas$$29);
    var v7250 = this.viz;
    var fx$$1 = v7250.labels;
    var v13906 = $$$1.empty;
    var v13907 = $$$1.empty;
    var v7251 = {execShow:true, execHide:true, onHide:v13906, onShow:v13907};
    var v7252 = callback$$25 || {};
    var opt$$21 = $$$1.merge(v7251, v7252);
    var v13908 = this.config;
    var v7253 = v13908.levelsToShow;
    node$$51.eachLevel(0, v7253, v425);
    node$$51.drawn = true;
    return;
  }
  function v424(pos$$34, prop$$29) {
    function v423(elem$$52) {
      function v422(p$$19) {
        var v7254 = elem$$52.getPos(p$$19);
        v7254.$add(pos$$34);
        return;
      }
      $$$1.each(prop$$29, v422);
      return;
    }
    prop$$29 = $$$1.splat(prop$$29);
    var v13909 = this.viz;
    var v7255 = v13909.graph;
    v7255.eachNode(v423);
    return;
  }
  function v421(viz$$20) {
    this.viz = viz$$20;
    this.config = viz$$20.config;
    var v7256 = viz$$20.config;
    this.node = v7256.Node;
    var v7257 = viz$$20.config;
    this.edge = v7257.Edge;
    return;
  }
  function v420(canvas$$28, node$$50, controller$$3) {
    var id$$27 = node$$50.id;
    var tag$$3 = this.getLabel(id$$27);
    var v13910 = !tag$$3;
    if (v13910) {
      var v18884 = tag$$3 = document.getElementById(id$$27);
      v13910 = !v18884;
    }
    var v7260 = v13910;
    if (v7260) {
      var ns = "http://www.w3.org/2000/svg";
      tag$$3 = document.createElementNS(ns, "svg:text");
      var tspan = document.createElementNS(ns, "svg:tspan");
      tag$$3.appendChild(tspan);
      var container$$2 = this.getLabelContainer();
      tag$$3.setAttribute("id", id$$27);
      tag$$3.setAttribute("class", "node");
      container$$2.appendChild(tag$$3);
      controller$$3.onCreateLabel(tag$$3, node$$50);
      var v7258 = this.labels;
      var v7259 = node$$50.id;
      v7258[v7259] = tag$$3;
    }
    this.placeLabel(tag$$3, node$$50, controller$$3);
    return;
  }
  function v419(canvas$$27, node$$49, controller$$2) {
    var id$$26 = node$$49.id;
    var tag$$2 = this.getLabel(id$$26);
    var v13911 = !tag$$2;
    if (v13911) {
      var v18885 = tag$$2 = document.getElementById(id$$26);
      v13911 = !v18885;
    }
    var v7264 = v13911;
    if (v7264) {
      tag$$2 = document.createElement("div");
      var container$$1 = this.getLabelContainer();
      tag$$2.id = id$$26;
      tag$$2.className = "node";
      var v7261 = tag$$2.style;
      v7261.position = "absolute";
      controller$$2.onCreateLabel(tag$$2, node$$49);
      container$$1.appendChild(tag$$2);
      var v7262 = this.labels;
      var v7263 = node$$49.id;
      v7262[v7263] = tag$$2;
    }
    this.placeLabel(tag$$2, node$$49, controller$$2);
    return;
  }
  function v418(pos$$33, canvas$$26) {
    var size$$7 = canvas$$26.getSize();
    var v13912 = pos$$33.w;
    if (v13912) {
      v13912 = pos$$33.h;
    }
    var v7267 = v13912;
    if (v7267) {
      var v26141 = pos$$33.x;
      var v26142 = size$$7.width;
      var v22312 = v26141 >= v26142;
      var v26145 = !v22312;
      if (v26145) {
        var v26143 = pos$$33.x;
        var v27698 = pos$$33.w;
        var v26144 = -v27698;
        v22312 = v26143 < v26144;
      }
      var v18886 = v22312;
      var v22315 = !v18886;
      if (v22315) {
        var v22313 = pos$$33.y;
        var v22314 = size$$7.height;
        v18886 = v22313 >= v22314;
      }
      var v13913 = v18886;
      var v18889 = !v13913;
      if (v18889) {
        var v18887 = pos$$33.y;
        var v22316 = pos$$33.h;
        var v18888 = -v22316;
        v13913 = v18887 < v18888;
      }
      var v7265 = v13913;
      if (v7265) {
        return false;
      }
    } else {
      var v26146 = pos$$33.x;
      var v26147 = size$$7.width;
      var v22317 = v26146 >= v26147;
      var v26149 = !v22317;
      if (v26149) {
        var v26148 = pos$$33.x;
        v22317 = v26148 < 0;
      }
      var v18890 = v22317;
      var v22320 = !v18890;
      if (v22320) {
        var v22318 = pos$$33.y;
        var v22319 = size$$7.height;
        v18890 = v22318 >= v22319;
      }
      var v13914 = v18890;
      var v18892 = !v13914;
      if (v18892) {
        var v18891 = pos$$33.y;
        v13914 = v18891 < 0;
      }
      var v7266 = v13914;
      if (v7266) {
        return false;
      }
    }
    return true;
  }
  function v417(node$$48, show$$1) {
    function v416(n$$24) {
      var v7268 = n$$24.id;
      lab = that$$18.getLabel(v7268);
      if (lab) {
        var v7269 = lab.style;
        v7269.display = st$$1;
      }
      return;
    }
    node$$48 = $$$1.splat(node$$48);
    var v7270;
    if (show$$1) {
      v7270 = "";
    } else {
      v7270 = "none";
    }
    var st$$1 = v7270;
    var lab;
    var that$$18 = this;
    $$$1.each(node$$48, v416);
    return;
  }
  function v415(id$$25) {
    var elem$$51 = this.getLabel(id$$25);
    var v13915 = elem$$51;
    if (v13915) {
      v13915 = elem$$51.parentNode;
    }
    var v7272 = v13915;
    if (v7272) {
      var v7271 = elem$$51.parentNode;
      v7271.removeChild(elem$$51);
    }
    return;
  }
  function v414(force$$5) {
    var id$$24;
    var v7275 = this.labels;
    for (id$$24 in v7275) {
      var v13916 = force$$5;
      var v18894 = !v13916;
      if (v18894) {
        var v26150 = this.viz;
        var v22321 = v26150.graph;
        var v18893 = v22321.hasNode(id$$24);
        v13916 = !v18893;
      }
      var v7274 = v13916;
      if (v7274) {
        this.disposeLabel(id$$24);
        var v7273 = this.labels;
        delete v7273[id$$24];
      }
    }
    return;
  }
  function v413(hide) {
    var container = this.getLabelContainer();
    if (hide) {
      var v7276 = container.style;
      v7276.display = "none";
    } else {
      var v7277 = container.style;
      v7277.display = "";
    }
    this.labelsHidden = hide;
    return;
  }
  function v412(id$$23) {
    var v7278;
    var v22322 = this.labels;
    var v18895 = id$$23 in v22322;
    if (v18895) {
      var v26151 = this.labels;
      var v22323 = v26151[id$$23];
      v18895 = v22323 != null;
    }
    var v13919 = v18895;
    if (v13919) {
      var v13917 = this.labels;
      v7278 = v13917[id$$23];
    } else {
      var v13918 = this.labels;
      var v31172 = document.getElementById(id$$23);
      v7278 = v13918[id$$23] = v31172;
    }
    return v7278;
  }
  function v411() {
    var v7279;
    var v13921 = this.labelContainer;
    if (v13921) {
      v7279 = this.labelContainer;
    } else {
      var v22324 = this.viz;
      var v18896 = v22324.config;
      var v13920 = v18896.labelContainer;
      var v31173 = document.getElementById(v13920);
      v7279 = this.labelContainer = v31173;
    }
    return v7279;
  }
  function v410(node$$47, show) {
    function v409(n$$23) {
      n$$23._hideLabel = al;
      return;
    }
    node$$47 = $$$1.splat(node$$47);
    var v7280;
    if (show) {
      v7280 = false;
    } else {
      v7280 = true;
    }
    var al = v7280;
    $$$1.each(node$$47, v409);
    return;
  }
  function v408(canvas$$25, node$$46, controller$$1) {
    var ctx$$15 = canvas$$25.getCtx();
    var v7281 = node$$46.pos;
    var pos$$32 = v7281.getc(true);
    var v7282 = node$$46.name;
    var v7283 = pos$$32.x;
    var v13922 = pos$$32.y;
    var v18897 = node$$46.getData("height");
    var v13923 = v18897 / 2;
    var v7284 = v13922 + v13923;
    ctx$$15.fillText(v7282, v7283, v7284);
    return;
  }
  function v407(canvas$$24, node$$45, controller) {
    var ctx$$14 = canvas$$24.getCtx();
    var v7285 = node$$45.pos;
    var pos$$31 = v7285.getc(true);
    var v22325 = node$$45.getLabelData("style");
    var v18898 = v22325 + " ";
    var v18899 = node$$45.getLabelData("size");
    var v13924 = v18898 + v18899;
    var v7286 = v13924 + "px ";
    var v7287 = node$$45.getLabelData("family");
    ctx$$14.font = v7286 + v7287;
    var v31174 = node$$45.getLabelData("textAlign");
    ctx$$14.textAlign = v31174;
    var v31175 = node$$45.getLabelData("color");
    ctx$$14.fillStyle = ctx$$14.strokeStyle = v31175;
    var v31176 = node$$45.getLabelData("textBaseline");
    ctx$$14.textBaseline = v31176;
    this.renderLabel(canvas$$24, node$$45, controller);
    return;
  }
  function v406(viz$$19) {
    this.viz = viz$$19;
    return;
  }
  function v405(elem$$50, canvas$$23, opt$$20) {
    var gl = canvas$$23.getCtx();
    var viewMatrix = new Matrix4;
    var v13925 = canvas$$23.config;
    var v7288 = v13925.Scene;
    var lighting = v7288.Lighting;
    var v7289 = canvas$$23.canvases;
    var wcanvas = v7289[0];
    var program$$16 = wcanvas.program;
    var camera = wcanvas.camera;
    var v13926 = elem$$50.geometry;
    var v7291 = !v13926;
    if (v7291) {
      var v13927 = O3D;
      var v13928 = elem$$50.getData("type");
      var v7290 = v13927[v13928];
      var v31177 = new v7290;
      elem$$50.geometry = v31177;
    }
    var v7292 = elem$$50.geometry;
    v7292.update(elem$$50);
    var v13929 = elem$$50.webGLVertexBuffer;
    var v7341 = !v13929;
    if (v7341) {
      var vertices = [];
      var faces = [];
      var normals = [];
      var vertexIndex = 0;
      var geom$$4 = elem$$50.geometry;
      var i$$49 = 0;
      var vs = geom$$4.vertices;
      var fs = geom$$4.faces;
      var fsl = fs.length;
      var v7325 = i$$49 < fsl;
      for (;v7325;) {
        var face$$3 = fs[i$$49];
        var v7293 = face$$3.a;
        var v1$$1 = vs[v7293];
        var v7294 = face$$3.b;
        var v2$$1 = vs[v7294];
        var v7295 = face$$3.c;
        var v3 = vs[v7295];
        var v7296;
        var v13931 = face$$3.d;
        if (v13931) {
          var v13930 = face$$3.d;
          v7296 = vs[v13930];
        } else {
          v7296 = false;
        }
        var v4 = v7296;
        var n$$22 = face$$3.normal;
        var v7297 = v1$$1.x;
        var v7298 = v1$$1.y;
        var v7299 = v1$$1.z;
        vertices.push(v7297, v7298, v7299);
        var v7300 = v2$$1.x;
        var v7301 = v2$$1.y;
        var v7302 = v2$$1.z;
        vertices.push(v7300, v7301, v7302);
        var v7303 = v3.x;
        var v7304 = v3.y;
        var v7305 = v3.z;
        vertices.push(v7303, v7304, v7305);
        if (v4) {
          var v7306 = v4.x;
          var v7307 = v4.y;
          var v7308 = v4.z;
          vertices.push(v7306, v7307, v7308);
        }
        var v7309 = n$$22.x;
        var v7310 = n$$22.y;
        var v7311 = n$$22.z;
        normals.push(v7309, v7310, v7311);
        var v7312 = n$$22.x;
        var v7313 = n$$22.y;
        var v7314 = n$$22.z;
        normals.push(v7312, v7313, v7314);
        var v7315 = n$$22.x;
        var v7316 = n$$22.y;
        var v7317 = n$$22.z;
        normals.push(v7315, v7316, v7317);
        if (v4) {
          var v7318 = n$$22.x;
          var v7319 = n$$22.y;
          var v7320 = n$$22.z;
          normals.push(v7318, v7319, v7320);
        }
        var v7321 = vertexIndex + 1;
        var v7322 = vertexIndex + 2;
        faces.push(vertexIndex, v7321, v7322);
        if (v4) {
          var v7323 = vertexIndex + 2;
          var v7324 = vertexIndex + 3;
          faces.push(vertexIndex, v7323, v7324);
          vertexIndex = vertexIndex + 4;
        } else {
          vertexIndex = vertexIndex + 3;
        }
        i$$49++;
        v7325 = i$$49 < fsl;
      }
      var v31178 = gl.createBuffer();
      elem$$50.webGLVertexBuffer = v31178;
      var v7326 = gl.ARRAY_BUFFER;
      var v7327 = elem$$50.webGLVertexBuffer;
      gl.bindBuffer(v7326, v7327);
      var v7328 = gl.ARRAY_BUFFER;
      var v7329 = new Float32Array(vertices);
      var v7330 = gl.STATIC_DRAW;
      gl.bufferData(v7328, v7329, v7330);
      var v31179 = gl.createBuffer();
      elem$$50.webGLFaceBuffer = v31179;
      var v7331 = gl.ELEMENT_ARRAY_BUFFER;
      var v7332 = elem$$50.webGLFaceBuffer;
      gl.bindBuffer(v7331, v7332);
      var v7333 = gl.ELEMENT_ARRAY_BUFFER;
      var v7334 = new Uint16Array(faces);
      var v7335 = gl.STATIC_DRAW;
      gl.bufferData(v7333, v7334, v7335);
      elem$$50.webGLFaceCount = faces.length;
      var v31180 = gl.createBuffer();
      elem$$50.webGLNormalBuffer = v31180;
      var v7336 = gl.ARRAY_BUFFER;
      var v7337 = elem$$50.webGLNormalBuffer;
      gl.bindBuffer(v7336, v7337);
      var v7338 = gl.ARRAY_BUFFER;
      var v7339 = new Float32Array(normals);
      var v7340 = gl.STATIC_DRAW;
      gl.bufferData(v7338, v7339, v7340);
    }
    var v7342 = camera.matrix;
    var v13932 = elem$$50.geometry;
    var v7343 = v13932.matrix;
    viewMatrix.multiply(v7342, v7343);
    var v7344 = program$$16.viewMatrix;
    var v7345 = viewMatrix.flatten();
    gl.uniformMatrix4fv(v7344, false, v7345);
    var v7346 = program$$16.projectionMatrix;
    var v13933 = camera.projectionMatrix;
    var v7347 = v13933.flatten();
    gl.uniformMatrix4fv(v7346, false, v7347);
    var normalMatrix = Matrix4.makeInvert(viewMatrix);
    normalMatrix.$transpose();
    var v7348 = program$$16.normalMatrix;
    var v7349 = normalMatrix.flatten();
    gl.uniformMatrix4fv(v7348, false, v7349);
    var v7350 = elem$$50.getData("color");
    var color$$4 = $$$1.hexToRgb(v7350);
    var v7351 = opt$$20.getAlpha();
    color$$4.push(v7351);
    var v7352 = program$$16.color;
    var v13934 = color$$4[0];
    var v7353 = v13934 / 255;
    var v13935 = color$$4[1];
    var v7354 = v13935 / 255;
    var v13936 = color$$4[2];
    var v7355 = v13936 / 255;
    var v7356 = color$$4[3];
    gl.uniform4f(v7352, v7353, v7354, v7355, v7356);
    var v7357 = program$$16.enableLighting;
    var v7358 = lighting.enable;
    gl.uniform1i(v7357, v7358);
    var v7374 = lighting.enable;
    if (v7374) {
      var v7363 = lighting.ambient;
      if (v7363) {
        var acolor = lighting.ambient;
        var v7359 = program$$16.ambientColor;
        var v7360 = acolor[0];
        var v7361 = acolor[1];
        var v7362 = acolor[2];
        gl.uniform3f(v7359, v7360, v7361, v7362);
      }
      var v7373 = lighting.directional;
      if (v7373) {
        var dir = lighting.directional;
        color$$4 = dir.color;
        var pos$$30 = dir.direction;
        var v18900 = pos$$30.x;
        var v18901 = pos$$30.y;
        var v18902 = pos$$30.z;
        var v13937 = new Vector3(v18900, v18901, v18902);
        var v7364 = v13937.normalize();
        var vd = v7364.$scale(-1);
        var v7365 = program$$16.lightingDirection;
        var v7366 = vd.x;
        var v7367 = vd.y;
        var v7368 = vd.z;
        gl.uniform3f(v7365, v7366, v7367, v7368);
        var v7369 = program$$16.directionalColor;
        var v7370 = color$$4[0];
        var v7371 = color$$4[1];
        var v7372 = color$$4[2];
        gl.uniform3f(v7369, v7370, v7371, v7372);
      }
    }
    var v7375 = gl.ARRAY_BUFFER;
    var v7376 = elem$$50.webGLVertexBuffer;
    gl.bindBuffer(v7375, v7376);
    var v7377 = program$$16.position;
    var v7378 = gl.FLOAT;
    gl.vertexAttribPointer(v7377, 3, v7378, false, 0, 0);
    var v7379 = gl.ARRAY_BUFFER;
    var v7380 = elem$$50.webGLNormalBuffer;
    gl.bindBuffer(v7379, v7380);
    var v7381 = program$$16.normal;
    var v7382 = gl.FLOAT;
    gl.vertexAttribPointer(v7381, 3, v7382, false, 0, 0);
    var v7383 = gl.ELEMENT_ARRAY_BUFFER;
    var v7384 = elem$$50.webGLFaceBuffer;
    gl.bindBuffer(v7383, v7384);
    var v7385 = gl.TRIANGLES;
    var v7386 = elem$$50.webGLFaceCount;
    var v7387 = gl.UNSIGNED_SHORT;
    gl.drawElements(v7385, v7386, v7387, 0);
    return;
  }
  function v404(adj$$18, canvas$$22) {
    function v403() {
      var v13938 = adj$$18.nodeFrom;
      var v7388 = v13938.getData("alpha");
      var v13939 = adj$$18.nodeTo;
      var v7389 = v13939.getData("alpha");
      var v7390 = adj$$18.getData("alpha");
      return Math.min(v7388, v7389, v7390);
    }
    var v13940 = adj$$18.getData("type");
    var v7391 = v13940 == "none";
    if (v7391) {
      return;
    }
    var v7392 = {getAlpha:v403};
    this.plotElement(adj$$18, canvas$$22, v7392);
    return;
  }
  function v402(node$$44, canvas$$21) {
    function v401() {
      return node$$44.getData("alpha");
    }
    var v13941 = node$$44.getData("type");
    var v7393 = v13941 == "none";
    if (v7393) {
      return;
    }
    var v7394 = {getAlpha:v401};
    this.plotElement(node$$44, canvas$$21, v7394);
    return;
  }
  function v400(elem$$49, props$$15, delta$$20) {
    var v7395 = elem$$49.startPos;
    var from$$10 = v7395.getc(true);
    var v7396 = elem$$49.endPos;
    var to$$11 = v7396.getc(true);
    var v7397 = elem$$49.pos;
    var v13942 = from$$10.x;
    var v13943 = to$$11.x;
    var v7398 = this.compute(v13942, v13943, delta$$20);
    var v13944 = from$$10.y;
    var v13945 = to$$11.y;
    var v7399 = this.compute(v13944, v13945, delta$$20);
    var v13946 = from$$10.z;
    var v13947 = to$$11.z;
    var v7400 = this.compute(v13946, v13947, delta$$20);
    v7397.setc(v7398, v7399, v7400);
    return;
  }
  function v399(adj$$17, canvas$$20, animating$$3) {
    var f$$3 = adj$$17.getData("type");
    var v7401 = this.edge;
    var ctxObj$$1 = v7401.CanvasStyles;
    var v7406 = f$$3 != "none";
    if (v7406) {
      var width$$21 = adj$$17.getData("lineWidth");
      var color$$3 = adj$$17.getData("color");
      var ctx$$13 = canvas$$20.getCtx();
      var nodeFrom$$3 = adj$$17.nodeFrom;
      var nodeTo$$4 = adj$$17.nodeTo;
      ctx$$13.save();
      ctx$$13.lineWidth = width$$21;
      ctx$$13.fillStyle = ctx$$13.strokeStyle = color$$3;
      var v7402 = nodeFrom$$3.getData("alpha");
      var v7403 = nodeTo$$4.getData("alpha");
      var v7404 = adj$$17.getData("alpha");
      var v31181 = Math.min(v7402, v7403, v7404);
      ctx$$13.globalAlpha = v31181;
      var s$$8;
      for (s$$8 in ctxObj$$1) {
        var v31182 = adj$$17.getCanvasStyle(s$$8);
        ctx$$13[s$$8] = v31182;
      }
      var v18903 = this.edgeTypes;
      var v13948 = v18903[f$$3];
      var v7405 = v13948.render;
      v7405.call(this, adj$$17, canvas$$20, animating$$3);
      ctx$$13.restore();
    }
    return;
  }
  function v398(node$$43, canvas$$19, animating$$2) {
    var f$$2 = node$$43.getData("type");
    var v7407 = this.node;
    var ctxObj = v7407.CanvasStyles;
    var v7409 = f$$2 != "none";
    if (v7409) {
      var width$$20 = node$$43.getData("lineWidth");
      var color$$2 = node$$43.getData("color");
      var alpha$$3 = node$$43.getData("alpha");
      var ctx$$12 = canvas$$19.getCtx();
      ctx$$12.save();
      ctx$$12.lineWidth = width$$20;
      ctx$$12.fillStyle = ctx$$12.strokeStyle = color$$2;
      ctx$$12.globalAlpha = alpha$$3;
      var s$$7;
      for (s$$7 in ctxObj) {
        var v31183 = node$$43.getCanvasStyle(s$$7);
        ctx$$12[s$$7] = v31183;
      }
      var v18904 = this.nodeTypes;
      var v13949 = v18904[f$$2];
      var v7408 = v13949.render;
      v7408.call(this, node$$43, canvas$$19, animating$$2);
      ctx$$12.restore();
    }
    return;
  }
  function v397(node$$42, opt$$19, animating$$1) {
    function v396(elem$$48) {
      var v18905 = opt$$19.plotSubtree(node$$42, elem$$48);
      if (v18905) {
        v18905 = elem$$48.exist;
      }
      var v13950 = v18905;
      if (v13950) {
        v13950 = elem$$48.drawn;
      }
      var v7413 = v13950;
      if (v7413) {
        var v7410 = elem$$48.id;
        var adj$$16 = node$$42.getAdjacency(v7410);
        var v7411 = !animating$$1;
        if (v7411) {
          opt$$19.onBeforePlotLine(adj$$16);
        }
        that$$17.plotLine(adj$$16, canvas$$18, animating$$1);
        var v7412 = !animating$$1;
        if (v7412) {
          opt$$19.onAfterPlotLine(adj$$16);
        }
        that$$17.plotTree(elem$$48, opt$$19, animating$$1);
      }
      return;
    }
    var that$$17 = this;
    var viz$$18 = this.viz;
    var canvas$$18 = viz$$18.canvas;
    var config$$1 = this.config;
    var ctx$$11 = canvas$$18.getCtx();
    var nodeAlpha$$1 = node$$42.getData("alpha");
    node$$42.eachSubnode(v396);
    var v7420 = node$$42.drawn;
    if (v7420) {
      var v7414 = !animating$$1;
      if (v7414) {
        opt$$19.onBeforePlotNode(node$$42);
      }
      this.plotNode(node$$42, canvas$$18, animating$$1);
      var v7415 = !animating$$1;
      if (v7415) {
        opt$$19.onAfterPlotNode(node$$42);
      }
      var v22326 = opt$$19.hideLabels;
      var v18906 = !v22326;
      if (v18906) {
        v18906 = opt$$19.withLabels;
      }
      var v13951 = v18906;
      if (v13951) {
        v13951 = nodeAlpha$$1 >= .95;
      }
      var v7418 = v13951;
      if (v7418) {
        var v7416 = this.labels;
        v7416.plotLabel(canvas$$18, node$$42, opt$$19);
      } else {
        var v7417 = this.labels;
        v7417.hideLabel(node$$42, false);
      }
    } else {
      var v7419 = this.labels;
      v7419.hideLabel(node$$42, true);
    }
    return;
  }
  function v395(opt$$18, animating) {
    function v394(node$$41) {
      function v393(adj$$15) {
        var nodeTo$$3 = adj$$15.nodeTo;
        var v27699 = nodeTo$$3.visited;
        var v26152 = !v27699;
        var v22327 = !v26152;
        var v18907 = v22327 === T;
        if (v18907) {
          v18907 = node$$41.drawn;
        }
        var v13952 = v18907;
        if (v13952) {
          v13952 = nodeTo$$3.drawn;
        }
        var v7423 = v13952;
        if (v7423) {
          var v7421 = !animating;
          if (v7421) {
            opt$$18.onBeforePlotLine(adj$$15);
          }
          that$$16.plotLine(adj$$15, canvas$$17, animating);
          var v7422 = !animating;
          if (v7422) {
            opt$$18.onAfterPlotLine(adj$$15);
          }
        }
        return;
      }
      var nodeAlpha = node$$41.getData("alpha");
      node$$41.eachAdjacency(v393);
      var v7426 = node$$41.drawn;
      if (v7426) {
        var v7424 = !animating;
        if (v7424) {
          opt$$18.onBeforePlotNode(node$$41);
        }
        that$$16.plotNode(node$$41, canvas$$17, animating);
        var v7425 = !animating;
        if (v7425) {
          opt$$18.onAfterPlotNode(node$$41);
        }
      }
      var v18908 = that$$16.labelsHidden;
      var v13953 = !v18908;
      if (v13953) {
        v13953 = opt$$18.withLabels;
      }
      var v7430 = v13953;
      if (v7430) {
        var v13954 = node$$41.drawn;
        if (v13954) {
          v13954 = nodeAlpha >= .95;
        }
        var v7429 = v13954;
        if (v7429) {
          var v7427 = that$$16.labels;
          v7427.plotLabel(canvas$$17, node$$41, opt$$18);
        } else {
          var v7428 = that$$16.labels;
          v7428.hideLabel(node$$41, false);
        }
      }
      node$$41.visited = !T;
      return;
    }
    var viz$$17 = this.viz;
    var aGraph = viz$$17.graph;
    var canvas$$17 = viz$$17.canvas;
    var id$$22 = viz$$17.root;
    var that$$16 = this;
    var ctx$$10 = canvas$$17.getCtx();
    var min$$1 = Math.min;
    var v7431 = opt$$18;
    var v13956 = !v7431;
    if (v13956) {
      var v13955 = this.viz;
      v7431 = v13955.controller;
    }
    opt$$18 = v7431;
    var v7432 = opt$$18.clearCanvas;
    if (v7432) {
      canvas$$17.clear();
    }
    var root$$4 = aGraph.getNode(id$$22);
    var v7433 = !root$$4;
    if (v7433) {
      return;
    }
    var v13957 = root$$4.visited;
    var v7434 = !v13957;
    var T = !v7434;
    aGraph.eachNode(v394);
    return;
  }
  function v392(opt$$17) {
    function v391(id$$21) {
      var n$$21 = graph$$14.getNode(id$$21);
      if (n$$21) {
        var prop$$28;
        for (prop$$28 in props$$14) {
          var v7435 = props$$14[prop$$28];
          n$$21.setData(prop$$28, v7435, "end");
        }
      }
      return;
    }
    function v390(n$$20) {
      var prop$$27;
      for (prop$$27 in props$$14) {
        var v7436 = props$$14[prop$$27];
        n$$20.setData(prop$$27, v7436, "end");
      }
      return;
    }
    var viz$$16 = this.viz;
    var graph$$14 = viz$$16.graph;
    var animation$$1 = this.nodeFxAnimation;
    var v13958 = this.viz;
    var v7437 = v13958.config;
    var v13959 = {"id":false, "properties":{}};
    var v7438 = {"elements":v13959, "reposition":false};
    var options$$10 = $$$1.merge(v7437, v7438);
    var v7439 = opt$$17 || {};
    var v13960 = $$$1.empty;
    var v13961 = $$$1.empty;
    var v7440 = {onBeforeCompute:v13960, onAfterCompute:v13961};
    opt$$17 = $$$1.merge(options$$10, v7439, v7440);
    animation$$1.stopTimer();
    var v7441 = opt$$17.elements;
    var props$$14 = v7441.properties;
    var v18909 = opt$$17.elements;
    var v13962 = v18909.id;
    var v7443 = !v13962;
    if (v7443) {
      graph$$14.eachNode(v390);
    } else {
      var v13963 = opt$$17.elements;
      var v7442 = v13963.id;
      var ids = $$$1.splat(v7442);
      $$$1.each(ids, v391);
    }
    var propnames = [];
    var prop$$26;
    for (prop$$26 in props$$14) {
      propnames.push(prop$$26);
    }
    var v13964 = propnames.join(":");
    var v7444 = "node-property:" + v13964;
    var modes$$3 = [v7444];
    var v7445 = opt$$17.reposition;
    if (v7445) {
      modes$$3.push("linear");
      viz$$16.compute("end");
    }
    var v13965 = {modes:modes$$3, type:"nodefx"};
    var v7446 = $$$1.merge(opt$$17, v13965);
    this.animate(v7446);
    return;
  }
  function v389(opt$$16, versor) {
    function v388() {
      var v7448 = opt$$16.hideLabels;
      if (v7448) {
        var v7447 = that$$15.labels;
        v7447.hideLabels(false);
      }
      that$$15.plot(opt$$16);
      opt$$16.onComplete();
      return;
    }
    function v387(delta$$19) {
      function v386(node$$40) {
        var p$$18;
        for (p$$18 in m$$3) {
          var v7449 = m$$3[p$$18];
          interp[p$$18](node$$40, v7449, delta$$19, versor);
        }
        return;
      }
      graph$$13.eachNode(v386);
      var v7450 = this.$animating;
      that$$15.plot(opt$$16, v7450, delta$$19);
      this.$animating = true;
      return;
    }
    var v13966 = this.viz;
    var v7451 = v13966.config;
    var v7452 = opt$$16 || {};
    opt$$16 = $$$1.merge(v7451, v7452);
    var that$$15 = this;
    var viz$$15 = this.viz;
    var graph$$13 = viz$$15.graph;
    var interp = this.Interpolator;
    var v7453;
    var v18910 = opt$$16.type;
    var v13967 = v18910 === "nodefx";
    if (v13967) {
      v7453 = this.nodeFxAnimation;
    } else {
      v7453 = this.animation;
    }
    var animation = v7453;
    var v7454 = opt$$16.modes;
    var m$$3 = this.prepare(v7454);
    var v7456 = opt$$16.hideLabels;
    if (v7456) {
      var v7455 = this.labels;
      v7455.hideLabels(true);
    }
    var v18911 = {$animating:false, compute:v387, complete:v388};
    var v13968 = $$$1.extend(opt$$16, v18911);
    var v7457 = animation.setOptions(v13968);
    v7457.start();
    return;
  }
  function v385(modes$$2) {
    function v384(node$$39) {
      function v383(p$$17) {
        function v382(adj$$14) {
          var i$$48 = 0;
          var l$$18 = prop$$25.length;
          var v7461 = i$$48 < l$$18;
          for (;v7461;) {
            var v13969 = accessors[p$$17];
            var v7458 = v13969.setter;
            var v7459 = prop$$25[i$$48];
            var v18912 = accessors[p$$17];
            var v13970 = v18912.getter;
            var v13971 = prop$$25[i$$48];
            var v7460 = adj$$14[v13970](v13971);
            adj$$14[v7458](v7459, v7460, "start");
            i$$48++;
            v7461 = i$$48 < l$$18;
          }
          return;
        }
        var v7462 = p$$17 in m$$2;
        if (v7462) {
          var prop$$25 = m$$2[p$$17];
          node$$39.eachAdjacency(v382);
        }
        return;
      }
      function v381(p$$16) {
        var v7467 = p$$16 in m$$2;
        if (v7467) {
          var prop$$24 = m$$2[p$$16];
          var i$$47 = 0;
          var l$$17 = prop$$24.length;
          var v7466 = i$$47 < l$$17;
          for (;v7466;) {
            var v13972 = accessors[p$$16];
            var v7463 = v13972.setter;
            var v7464 = prop$$24[i$$47];
            var v18913 = accessors[p$$16];
            var v13973 = v18913.getter;
            var v13974 = prop$$24[i$$47];
            var v7465 = node$$39[v13973](v13974);
            node$$39[v7463](v7464, v7465, "start");
            i$$47++;
            v7466 = i$$47 < l$$17;
          }
        }
        return;
      }
      var v7468 = node$$39.startPos;
      var v7469 = node$$39.pos;
      v7468.set(v7469);
      var v7470 = ["node-property", "node-style"];
      $$$1.each(v7470, v381);
      var v7471 = ["edge-property", "edge-style"];
      $$$1.each(v7471, v383);
      return;
    }
    var v7472 = this.viz;
    var graph$$12 = v7472.graph;
    var v7473 = {"getter":"getData", "setter":"setData"};
    var v7474 = {"getter":"getData", "setter":"setData"};
    var v7475 = {"getter":"getCanvasStyle", "setter":"setCanvasStyle"};
    var v7476 = {"getter":"getCanvasStyle", "setter":"setCanvasStyle"};
    var accessors = {"node-property":v7473, "edge-property":v7474, "node-style":v7475, "edge-style":v7476};
    var m$$2 = {};
    var v13975 = $$$1.type(modes$$2);
    var v7484 = v13975 == "array";
    if (v7484) {
      var i$$46 = 0;
      var len$$4 = modes$$2.length;
      var v7479 = i$$46 < len$$4;
      for (;v7479;) {
        var v7477 = modes$$2[i$$46];
        var elems = v7477.split(":");
        var v7478 = elems.shift();
        m$$2[v7478] = elems;
        i$$46++;
        v7479 = i$$46 < len$$4;
      }
    } else {
      var p$$15;
      for (p$$15 in modes$$2) {
        var v7483 = p$$15 == "position";
        if (v7483) {
          var v7480 = modes$$2.position;
          m$$2[v7480] = [];
        } else {
          var v7481 = m$$2;
          var v7482 = p$$15;
          var v13976 = modes$$2[p$$15];
          var v31184 = $$$1.splat(v13976);
          v7481[v7482] = v31184;
        }
      }
    }
    graph$$12.eachNode(v384);
    return m$$2;
  }
  function v380(options$$9) {
    function v379() {
      var v7485 = options$$9.condition();
      if (v7485) {
        options$$9.step();
      } else {
        clearInterval(interval);
        options$$9.onComplete();
      }
      var v7486 = that$$14.viz;
      v7486.refresh(true);
      return;
    }
    var that$$14 = this;
    var v13977 = $$$1.lambda(false);
    var v13978 = $$$1.empty;
    var v13979 = $$$1.empty;
    var v7487 = {condition:v13977, step:v13978, onComplete:v13979, duration:200};
    var v7488 = options$$9 || {};
    options$$9 = $$$1.merge(v7487, v7488);
    var v7489 = options$$9.duration;
    var interval = setInterval(v379, v7489);
    return;
  }
  function v378(elem$$47, prop$$23, delta$$18, getter$$5, setter$$5) {
    function v377() {
      var v7490 = $jit.Complex;
      return new v7490(0, 0);
    }
    var from$$9 = elem$$47[getter$$5](prop$$23, "start");
    var to$$10 = elem$$47[getter$$5](prop$$23, "end");
    var cur$$2 = [];
    var v18914 = from$$9.offset;
    var v13980 = typeof v18914;
    var v7502 = v13980 == "undefined";
    if (v7502) {
      var v7501 = from$$9 === 0;
      if (v7501) {
        from$$9 = $$$1.map(to$$10, v377);
        from$$9.offset = 0;
      } else {
        var v13981 = from$$9.length;
        var v7492 = v13981 == 0;
        if (v7492) {
          var v13982 = $jit.Complex;
          var v7491 = new v13982(0, 0);
          from$$9.push(v7491);
        }
        var v13983 = from$$9.length;
        var v13984 = to$$10.length;
        var v7494 = v13983 < v13984;
        for (;v7494;) {
          var v7493 = from$$9[0];
          from$$9.push(v7493);
          var v13985 = from$$9.length;
          var v13986 = to$$10.length;
          v7494 = v13985 < v13986;
        }
        var v13987 = from$$9.length;
        var v13988 = to$$10.length;
        var v7496 = v13987 > v13988;
        for (;v7496;) {
          var v13989 = to$$10[0];
          var v18916 = !v13989;
          if (v18916) {
            var v18915 = $jit.Complex;
            v13989 = new v18915(0, 0);
          }
          var v7495 = v13989;
          to$$10.push(v7495);
          var v13990 = from$$9.length;
          var v13991 = to$$10.length;
          v7496 = v13990 > v13991;
        }
        var v13992 = from$$9.length;
        var v7497 = v13992 == 0;
        if (v7497) {
          return;
        }
        var l$$16 = from$$9.length;
        var minDist = 1E300;
        var offset$$9 = 0;
        var v7500 = offset$$9 < l$$16;
        for (;v7500;) {
          var d$$3 = 0;
          var i$$45 = 0;
          var v7498 = i$$45 < l$$16;
          for (;v7498;) {
            var v13993 = d$$3;
            var v26153 = offset$$9 + i$$45;
            var v22328 = v26153 % l$$16;
            var v18917 = from$$9[v22328];
            var v18918 = to$$10[i$$45];
            var v13994 = Geometry.dist2(v18917, v18918);
            d$$3 = v13993 + v13994;
            i$$45++;
            v7498 = i$$45 < l$$16;
          }
          var v7499 = d$$3 < minDist;
          if (v7499) {
            from$$9.offset = offset$$9;
            minDist = d$$3;
          }
          offset$$9++;
          v7500 = offset$$9 < l$$16;
        }
      }
    }
    i$$45 = 0;
    l$$16 = from$$9.length;
    var v7505 = i$$45 < l$$16;
    for (;v7505;) {
      var v18919 = from$$9.offset;
      var v13995 = i$$45 + v18919;
      var v7503 = v13995 % l$$16;
      var fromi$$1 = from$$9[v7503];
      var toi$$1 = to$$10[i$$45];
      var v13996 = $jit.Complex;
      var v18920 = fromi$$1.x;
      var v18921 = toi$$1.x;
      var v13997 = this.compute(v18920, v18921, delta$$18);
      var v18922 = fromi$$1.y;
      var v18923 = toi$$1.y;
      var v13998 = this.compute(v18922, v18923, delta$$18);
      var v7504 = new v13996(v13997, v13998);
      cur$$2.push(v7504);
      i$$45++;
      v7505 = i$$45 < l$$16;
    }
    elem$$47[setter$$5](prop$$23, cur$$2);
    return;
  }
  function v376(elem$$46, props$$13, delta$$17) {
    this["edge"](elem$$46, props$$13, delta$$17, "canvas", "getCanvasStyle", "setCanvasStyle");
    return;
  }
  function v375(elem$$45, props$$12, delta$$16) {
    this["node"](elem$$45, props$$12, delta$$16, "canvas", "getCanvasStyle", "setCanvasStyle");
    return;
  }
  function v374(elem$$44, props$$11, delta$$15) {
    this["node"](elem$$44, props$$11, delta$$15, "label", "getLabelData", "setLabelData");
    return;
  }
  function v373(elem$$43, props$$10, delta$$14) {
    this["edge"](elem$$43, props$$10, delta$$14, "map", "getData", "setData");
    return;
  }
  function v372(elem$$42, props$$9, delta$$13) {
    this["node"](elem$$42, props$$9, delta$$13, "map", "getData", "setData");
    return;
  }
  function v371(elem$$41, props$$8, delta$$12, mapKey, getter$$4, setter$$4) {
    var adjs$$1 = elem$$41.adjacencies;
    var id$$20;
    for (id$$20 in adjs$$1) {
      var v7506 = adjs$$1[id$$20];
      this["node"](v7506, props$$8, delta$$12, mapKey, getter$$4, setter$$4);
    }
    return;
  }
  function v370(elem$$40, props$$7, delta$$11, map, getter$$3, setter$$3) {
    map = this[map];
    if (props$$7) {
      var len$$3 = props$$7.length;
      var i$$44 = 0;
      var v7508 = i$$44 < len$$3;
      for (;v7508;) {
        var pi$$1 = props$$7[i$$44];
        var v7507 = map[pi$$1];
        this[v7507](elem$$40, pi$$1, delta$$11, getter$$3, setter$$3);
        i$$44++;
        v7508 = i$$44 < len$$3;
      }
    } else {
      for (pi$$1 in map) {
        var v7509 = map[pi$$1];
        this[v7509](elem$$40, pi$$1, delta$$11, getter$$3, setter$$3);
      }
    }
    return;
  }
  function v369(elem$$39, prop$$22, delta$$10, getter$$2, setter$$2) {
    var from$$8 = elem$$39[getter$$2](prop$$22, "start");
    var to$$9 = elem$$39[getter$$2](prop$$22, "end");
    var cur$$1 = [];
    var i$$43 = 0;
    var l$$15 = from$$8.length;
    var v7514 = i$$43 < l$$15;
    for (;v7514;) {
      var fromi = from$$8[i$$43];
      var toi = to$$9[i$$43];
      var v7513 = fromi.length;
      if (v7513) {
        var j$$3 = 0;
        var len$$2 = fromi.length;
        var curi = [];
        var v7511 = j$$3 < len$$2;
        for (;v7511;) {
          var v13999 = fromi[j$$3];
          var v14000 = toi[j$$3];
          var v7510 = this.compute(v13999, v14000, delta$$10);
          curi.push(v7510);
          j$$3++;
          v7511 = j$$3 < len$$2;
        }
        cur$$1.push(curi);
      } else {
        var v7512 = this.compute(fromi, toi, delta$$10);
        cur$$1.push(v7512);
      }
      i$$43++;
      v7514 = i$$43 < l$$15;
    }
    elem$$39[setter$$2](prop$$22, cur$$1);
    return;
  }
  function v368(elem$$38, prop$$21, delta$$9, getter$$1, setter$$1) {
    var v7515 = elem$$38[getter$$1](prop$$21, "start");
    var from$$7 = $$$1.hexToRgb(v7515);
    var v7516 = elem$$38[getter$$1](prop$$21, "end");
    var to$$8 = $$$1.hexToRgb(v7516);
    var comp = this.compute;
    var v22329 = from$$7[0];
    var v22330 = to$$8[0];
    var v18924 = comp(v22329, v22330, delta$$9);
    var v14001 = parseInt(v18924);
    var v22331 = from$$7[1];
    var v22332 = to$$8[1];
    var v18925 = comp(v22331, v22332, delta$$9);
    var v14002 = parseInt(v18925);
    var v22333 = from$$7[2];
    var v22334 = to$$8[2];
    var v18926 = comp(v22333, v22334, delta$$9);
    var v14003 = parseInt(v18926);
    var v7517 = [v14001, v14002, v14003];
    var val$$5 = $$$1.rgbToHex(v7517);
    elem$$38[setter$$1](prop$$21, val$$5);
    return;
  }
  function v367(elem$$37, prop$$20, delta$$8, getter, setter) {
    var from$$6 = elem$$37[getter](prop$$20, "start");
    var to$$7 = elem$$37[getter](prop$$20, "end");
    var v7518 = this.compute(from$$6, to$$7, delta$$8);
    elem$$37[setter](prop$$20, v7518);
    return;
  }
  function v366(elem$$36, props$$6, delta$$7) {
    var v7519 = elem$$36.startPos;
    var from$$5 = v7519.getp(true);
    var v7520 = elem$$36.endPos;
    var to$$6 = v7520.getp();
    var ans$$9 = to$$6.interpolate(from$$5, delta$$7);
    var v7521 = elem$$36.pos;
    var v7522 = ans$$9.theta;
    var v7523 = ans$$9.rho;
    v7521.setp(v7522, v7523);
    return;
  }
  function v365(elem$$35, props$$5, delta$$6) {
    var v7524 = elem$$35.startPos;
    var from$$4 = v7524.getc(true);
    var v7525 = elem$$35.endPos;
    var to$$5 = v7525.getc(true);
    var v7526 = elem$$35.pos;
    var v14004 = from$$4.x;
    var v14005 = to$$5.x;
    var v7527 = this.compute(v14004, v14005, delta$$6);
    var v14006 = from$$4.y;
    var v14007 = to$$5.y;
    var v7528 = this.compute(v14006, v14007, delta$$6);
    v7526.setc(v7527, v7528);
    return;
  }
  function v364(elem$$34, props$$4, delta$$5, vector) {
    var v7529 = -delta$$5;
    var v$$2 = vector.scale(v7529);
    var v14008 = v$$2.norm();
    var v7534 = v14008 < 1;
    if (v7534) {
      var x$$65 = v$$2.x;
      var y$$46 = v$$2.y;
      var v14009 = elem$$34.startPos;
      var v7530 = v14009.getc();
      var ans$$8 = v7530.moebiusTransformation(v$$2);
      var v7531 = elem$$34.pos;
      var v7532 = ans$$8.x;
      var v7533 = ans$$8.y;
      v7531.setc(v7532, v7533);
      v$$2.x = x$$65;
      v$$2.y = y$$46;
    }
    return;
  }
  function v363(from$$3, to$$4, delta$$4) {
    var v14010 = to$$4 - from$$3;
    var v7535 = v14010 * delta$$4;
    return from$$3 + v7535;
  }
  function v362(viz$$14, klass$$6) {
    this.viz = viz$$14;
    this.config = viz$$14.config;
    var v7536 = viz$$14.config;
    this.node = v7536.Node;
    var v7537 = viz$$14.config;
    this.edge = v7537.Edge;
    var v31185 = new Animation;
    this.animation = v31185;
    var v14011 = klass$$6.Plot;
    var v7538 = v14011.NodeTypes;
    var v31186 = new v7538;
    this.nodeTypes = v31186;
    var v14012 = klass$$6.Plot;
    var v7539 = v14012.EdgeTypes;
    var v31187 = new v7539;
    this.edgeTypes = v31187;
    this.labels = viz$$14.labels;
    return;
  }
  function v361(from$$2, to$$3, r$$1, canvas$$16) {
    function computeArcThroughTwoPoints(p1, p2) {
      var v14013 = p1.x;
      var v14014 = p2.y;
      var v7540 = v14013 * v14014;
      var v14015 = p1.y;
      var v14016 = p2.x;
      var v7541 = v14015 * v14016;
      var aDen = v7540 - v7541;
      var bDen = aDen;
      var sq1 = p1.squaredNorm();
      var sq2 = p2.squaredNorm();
      var v7542 = aDen == 0;
      if (v7542) {
        return{x:0, y:0, ratio:-1};
      }
      var v26154 = p1.y;
      var v22335 = v26154 * sq2;
      var v26155 = p2.y;
      var v22336 = v26155 * sq1;
      var v18927 = v22335 - v22336;
      var v18928 = p1.y;
      var v14017 = v18927 + v18928;
      var v14018 = p2.y;
      var v7543 = v14017 - v14018;
      var a$$6 = v7543 / aDen;
      var v26156 = p2.x;
      var v22337 = v26156 * sq1;
      var v26157 = p1.x;
      var v22338 = v26157 * sq2;
      var v18929 = v22337 - v22338;
      var v18930 = p2.x;
      var v14019 = v18929 + v18930;
      var v14020 = p1.x;
      var v7544 = v14019 - v14020;
      var b$$4 = v7544 / bDen;
      var v7545 = -a$$6;
      var x$$64 = v7545 / 2;
      var v7546 = -b$$4;
      var y$$45 = v7546 / 2;
      var v18931 = a$$6 * a$$6;
      var v18932 = b$$4 * b$$4;
      var v14021 = v18931 + v18932;
      var v7547 = v14021 / 4;
      var squaredRatio = v7547 - 1;
      var v7548 = squaredRatio < 0;
      if (v7548) {
        return{x:0, y:0, ratio:-1};
      }
      var ratio = Math.sqrt(squaredRatio);
      var v14022;
      var v18933 = ratio > 1E3;
      if (v18933) {
        v14022 = -1;
      } else {
        v14022 = ratio;
      }
      var v7549 = v14022;
      var out = {x:x$$64, y:y$$45, ratio:v7549, a:a$$6, b:b$$4};
      return out;
    }
    function sense(angleBegin$$1, angleEnd$$1) {
      var v7550;
      var v14025 = angleBegin$$1 < angleEnd$$1;
      if (v14025) {
        var v14023;
        var v26158 = Math.PI;
        var v22339 = angleBegin$$1 + v26158;
        var v18934 = v22339 > angleEnd$$1;
        if (v18934) {
          v14023 = false;
        } else {
          v14023 = true;
        }
        v7550 = v14023;
      } else {
        var v14024;
        var v26159 = Math.PI;
        var v22340 = angleEnd$$1 + v26159;
        var v18935 = v22340 > angleBegin$$1;
        if (v18935) {
          v14024 = true;
        } else {
          v14024 = false;
        }
        v7550 = v14024;
      }
      return v7550;
    }
    var ctx$$9 = canvas$$16.getCtx();
    var centerOfCircle = computeArcThroughTwoPoints(from$$2, to$$3);
    var v22341 = centerOfCircle.a;
    var v18936 = v22341 > 1E3;
    var v22343 = !v18936;
    if (v22343) {
      var v22342 = centerOfCircle.b;
      v18936 = v22342 > 1E3;
    }
    var v14026 = v18936;
    var v18938 = !v14026;
    if (v18938) {
      var v18937 = centerOfCircle.ratio;
      v14026 = v18937 < 0;
    }
    var v7562 = v14026;
    if (v7562) {
      ctx$$9.beginPath();
      var v14027 = from$$2.x;
      var v7551 = v14027 * r$$1;
      var v14028 = from$$2.y;
      var v7552 = v14028 * r$$1;
      ctx$$9.moveTo(v7551, v7552);
      var v14029 = to$$3.x;
      var v7553 = v14029 * r$$1;
      var v14030 = to$$3.y;
      var v7554 = v14030 * r$$1;
      ctx$$9.lineTo(v7553, v7554);
      ctx$$9.stroke();
    } else {
      var v14031 = to$$3.y;
      var v14032 = centerOfCircle.y;
      var v7555 = v14031 - v14032;
      var v14033 = to$$3.x;
      var v14034 = centerOfCircle.x;
      var v7556 = v14033 - v14034;
      var angleBegin = Math.atan2(v7555, v7556);
      var v14035 = from$$2.y;
      var v14036 = centerOfCircle.y;
      var v7557 = v14035 - v14036;
      var v14037 = from$$2.x;
      var v14038 = centerOfCircle.x;
      var v7558 = v14037 - v14038;
      var angleEnd = Math.atan2(v7557, v7558);
      sense = sense(angleBegin, angleEnd);
      ctx$$9.beginPath();
      var v14039 = centerOfCircle.x;
      var v7559 = v14039 * r$$1;
      var v14040 = centerOfCircle.y;
      var v7560 = v14040 * r$$1;
      var v14041 = centerOfCircle.ratio;
      var v7561 = v14041 * r$$1;
      ctx$$9.arc(v7559, v7560, v7561, angleBegin, angleEnd, sense);
      ctx$$9.stroke();
    }
    return;
  }
  function v360(posFrom$$1, posTo$$1, pos$$29, epsilon$$1) {
    var v7563 = EdgeHelper.line;
    return v7563.contains(posFrom$$1, posTo$$1, pos$$29, epsilon$$1);
  }
  function v359(from$$1, to$$2, dim$$7, swap, canvas$$15) {
    var ctx$$8 = canvas$$15.getCtx();
    if (swap) {
      var tmp$$1 = from$$1;
      from$$1 = to$$2;
      to$$2 = tmp$$1;
    }
    var v14042 = to$$2.x;
    var v14043 = from$$1.x;
    var v7564 = v14042 - v14043;
    var v14044 = to$$2.y;
    var v14045 = from$$1.y;
    var v7565 = v14044 - v14045;
    var vect = new Complex(v7564, v7565);
    var v14046 = vect.norm();
    var v7566 = dim$$7 / v14046;
    vect.$scale(v7566);
    var v14047 = to$$2.x;
    var v14048 = vect.x;
    var v7567 = v14047 - v14048;
    var v14049 = to$$2.y;
    var v14050 = vect.y;
    var v7568 = v14049 - v14050;
    var intermediatePoint = new Complex(v7567, v7568);
    var v18939 = vect.y;
    var v14051 = -v18939;
    var v7569 = v14051 / 2;
    var v14052 = vect.x;
    var v7570 = v14052 / 2;
    var normal = new Complex(v7569, v7570);
    var v1 = intermediatePoint.add(normal);
    var v7571 = normal.$scale(-1);
    var v2 = intermediatePoint.$add(v7571);
    ctx$$8.beginPath();
    var v7572 = from$$1.x;
    var v7573 = from$$1.y;
    ctx$$8.moveTo(v7572, v7573);
    var v7574 = to$$2.x;
    var v7575 = to$$2.y;
    ctx$$8.lineTo(v7574, v7575);
    ctx$$8.stroke();
    ctx$$8.beginPath();
    var v7576 = v1.x;
    var v7577 = v1.y;
    ctx$$8.moveTo(v7576, v7577);
    var v7578 = v2.x;
    var v7579 = v2.y;
    ctx$$8.lineTo(v7578, v7579);
    var v7580 = to$$2.x;
    var v7581 = to$$2.y;
    ctx$$8.lineTo(v7580, v7581);
    ctx$$8.closePath();
    ctx$$8.fill();
    return;
  }
  function v358(posFrom, posTo, pos$$28, epsilon) {
    var min = Math.min;
    var max = Math.max;
    var v7582 = posFrom.x;
    var v7583 = posTo.x;
    var minPosX = min(v7582, v7583);
    var v7584 = posFrom.x;
    var v7585 = posTo.x;
    var maxPosX = max(v7584, v7585);
    var v7586 = posFrom.y;
    var v7587 = posTo.y;
    var minPosY = min(v7586, v7587);
    var v7588 = posFrom.y;
    var v7589 = posTo.y;
    var maxPosY = max(v7588, v7589);
    var v26160 = pos$$28.x;
    var v22344 = v26160 >= minPosX;
    if (v22344) {
      var v26161 = pos$$28.x;
      v22344 = v26161 <= maxPosX;
    }
    var v18940 = v22344;
    if (v18940) {
      var v22345 = pos$$28.y;
      v18940 = v22345 >= minPosY;
    }
    var v14053 = v18940;
    if (v14053) {
      var v18941 = pos$$28.y;
      v14053 = v18941 <= maxPosY;
    }
    var v7594 = v14053;
    if (v7594) {
      var v22346 = posTo.x;
      var v22347 = posFrom.x;
      var v18942 = v22346 - v22347;
      var v14054 = Math.abs(v18942);
      var v7590 = v14054 <= epsilon;
      if (v7590) {
        return true;
      }
      var v22348 = posTo.y;
      var v22349 = posFrom.y;
      var v18943 = v22348 - v22349;
      var v22350 = posTo.x;
      var v22351 = posFrom.x;
      var v18944 = v22350 - v22351;
      var v14055 = v18943 / v18944;
      var v18945 = pos$$28.x;
      var v18946 = posFrom.x;
      var v14056 = v18945 - v18946;
      var v7591 = v14055 * v14056;
      var v7592 = posFrom.y;
      var dist = v7591 + v7592;
      var v18947 = pos$$28.y;
      var v14057 = dist - v18947;
      var v7593 = Math.abs(v14057);
      return v7593 <= epsilon;
    }
    return false;
  }
  function v357(from, to$$1, canvas$$14) {
    var ctx$$7 = canvas$$14.getCtx();
    ctx$$7.beginPath();
    var v7595 = from.x;
    var v7596 = from.y;
    ctx$$7.moveTo(v7595, v7596);
    var v7597 = to$$1.x;
    var v7598 = to$$1.y;
    ctx$$7.lineTo(v7597, v7598);
    ctx$$7.stroke();
    return;
  }
  function v356(npos$$5, pos$$27, dim$$6) {
    var v7599 = NodeHelper.circle;
    return v7599.contains(npos$$5, pos$$27, dim$$6);
  }
  function v355(type$$53, pos$$26, dim$$5, canvas$$13) {
    var ctx$$6 = canvas$$13.getCtx();
    var v7600 = Math.PI;
    var pi5 = v7600 / 5;
    ctx$$6.save();
    var v7601 = pos$$26.x;
    var v7602 = pos$$26.y;
    ctx$$6.translate(v7601, v7602);
    ctx$$6.beginPath();
    ctx$$6.moveTo(dim$$5, 0);
    var i$$42 = 0;
    var v7605 = i$$42 < 9;
    for (;v7605;) {
      ctx$$6.rotate(pi5);
      var v14058 = i$$42 % 2;
      var v7604 = v14058 == 0;
      if (v7604) {
        var v14059 = dim$$5 / .525731;
        var v7603 = v14059 * .200811;
        ctx$$6.lineTo(v7603, 0);
      } else {
        ctx$$6.lineTo(dim$$5, 0);
      }
      i$$42++;
      v7605 = i$$42 < 9;
    }
    ctx$$6.closePath();
    ctx$$6[type$$53]();
    ctx$$6.restore();
    return;
  }
  function v354(npos$$4, pos$$25, dim$$4) {
    var v7606 = NodeHelper.circle;
    return v7606.contains(npos$$4, pos$$25, dim$$4);
  }
  function v353(type$$52, pos$$24, dim$$3, canvas$$12) {
    var ctx$$5 = canvas$$12.getCtx();
    var c1x = pos$$24.x;
    var v7607 = pos$$24.y;
    var c1y = v7607 - dim$$3;
    var c2x = c1x - dim$$3;
    var v7608 = pos$$24.y;
    var c2y = v7608 + dim$$3;
    var c3x = c1x + dim$$3;
    var c3y = c2y;
    ctx$$5.beginPath();
    ctx$$5.moveTo(c1x, c1y);
    ctx$$5.lineTo(c2x, c2y);
    ctx$$5.lineTo(c3x, c3y);
    ctx$$5.closePath();
    ctx$$5[type$$52]();
    return;
  }
  function v352(npos$$3, pos$$23, width$$19, height$$18) {
    var v22352 = pos$$23.x;
    var v22353 = npos$$3.x;
    var v18948 = v22352 - v22353;
    var v14060 = Math.abs(v18948);
    var v14061 = width$$19 / 2;
    var v7609 = v14060 <= v14061;
    if (v7609) {
      var v22354 = pos$$23.y;
      var v22355 = npos$$3.y;
      var v18949 = v22354 - v22355;
      var v14062 = Math.abs(v18949);
      var v14063 = height$$18 / 2;
      v7609 = v14062 <= v14063;
    }
    return v7609;
  }
  function v351(type$$51, pos$$22, width$$18, height$$17, canvas$$11) {
    var v7610 = canvas$$11.getCtx();
    var v7611 = type$$51 + "Rect";
    var v14064 = pos$$22.x;
    var v14065 = width$$18 / 2;
    var v7612 = v14064 - v14065;
    var v14066 = pos$$22.y;
    var v14067 = height$$17 / 2;
    var v7613 = v14066 - v14067;
    v7610[v7611](v7612, v7613, width$$18, height$$17);
    return;
  }
  function v350(npos$$2, pos$$21, dim$$2) {
    var v22356 = pos$$21.x;
    var v22357 = npos$$2.x;
    var v18950 = v22356 - v22357;
    var v14068 = Math.abs(v18950);
    var v7614 = v14068 <= dim$$2;
    if (v7614) {
      var v22358 = pos$$21.y;
      var v22359 = npos$$2.y;
      var v18951 = v22358 - v22359;
      var v14069 = Math.abs(v18951);
      v7614 = v14069 <= dim$$2;
    }
    return v7614;
  }
  function v349(type$$50, pos$$20, dim$$1, canvas$$10) {
    var v7615 = canvas$$10.getCtx();
    var v7616 = type$$50 + "Rect";
    var v14070 = pos$$20.x;
    var v7617 = v14070 - dim$$1;
    var v14071 = pos$$20.y;
    var v7618 = v14071 - dim$$1;
    var v7619 = 2 * dim$$1;
    var v7620 = 2 * dim$$1;
    v7615[v7616](v7617, v7618, v7619, v7620);
    return;
  }
  function v348(npos$$1, pos$$19, width$$17, height$$16) {
    var radius$$5 = 0;
    var scalex$$1 = 1;
    var scaley$$1 = 1;
    var diffx$$1 = 0;
    var diffy$$1 = 0;
    var diff$$2 = 0;
    var v7621 = width$$17 > height$$16;
    if (v7621) {
      radius$$5 = width$$17 / 2;
      scaley$$1 = height$$16 / width$$17;
    } else {
      radius$$5 = height$$16 / 2;
      scalex$$1 = width$$17 / height$$16;
    }
    var v14072 = npos$$1.x;
    var v14073 = pos$$19.x;
    var v7622 = v14072 - v14073;
    var v7623 = 1 / scalex$$1;
    diffx$$1 = v7622 * v7623;
    var v14074 = npos$$1.y;
    var v14075 = pos$$19.y;
    var v7624 = v14074 - v14075;
    var v7625 = 1 / scaley$$1;
    diffy$$1 = v7624 * v7625;
    var v7626 = diffx$$1 * diffx$$1;
    var v7627 = diffy$$1 * diffy$$1;
    diff$$2 = v7626 + v7627;
    var v7628 = radius$$5 * radius$$5;
    return diff$$2 <= v7628;
  }
  function v347(type$$49, pos$$18, width$$16, height$$15, canvas$$9) {
    var ctx$$4 = canvas$$9.getCtx();
    var scalex = 1;
    var scaley = 1;
    var scaleposx = 1;
    var scaleposy = 1;
    var radius$$4 = 0;
    var v7629 = width$$16 > height$$15;
    if (v7629) {
      radius$$4 = width$$16 / 2;
      scaley = height$$15 / width$$16;
      scaleposy = width$$16 / height$$15;
    } else {
      radius$$4 = height$$15 / 2;
      scalex = width$$16 / height$$15;
      scaleposx = height$$15 / width$$16;
    }
    ctx$$4.save();
    ctx$$4.scale(scalex, scaley);
    ctx$$4.beginPath();
    var v14076 = pos$$18.x;
    var v7630 = v14076 * scaleposx;
    var v14077 = pos$$18.y;
    var v7631 = v14077 * scaleposy;
    var v14078 = Math.PI;
    var v7632 = v14078 * 2;
    ctx$$4.arc(v7630, v7631, radius$$4, 0, v7632, true);
    ctx$$4.closePath();
    ctx$$4[type$$49]();
    ctx$$4.restore();
    return;
  }
  function v346(npos, pos$$17, radius$$3) {
    var v7633 = npos.x;
    var v7634 = pos$$17.x;
    var diffx = v7633 - v7634;
    var v7635 = npos.y;
    var v7636 = pos$$17.y;
    var diffy = v7635 - v7636;
    var v7637 = diffx * diffx;
    var v7638 = diffy * diffy;
    var diff$$1 = v7637 + v7638;
    var v7639 = radius$$3 * radius$$3;
    return diff$$1 <= v7639;
  }
  function v345(type$$48, pos$$16, radius$$2, canvas$$8) {
    var ctx$$3 = canvas$$8.getCtx();
    ctx$$3.beginPath();
    var v7640 = pos$$16.x;
    var v7641 = pos$$16.y;
    var v14079 = Math.PI;
    var v7642 = v14079 * 2;
    ctx$$3.arc(v7640, v7641, radius$$2, 0, v7642, true);
    ctx$$3.closePath();
    ctx$$3[type$$48]();
    return;
  }
  function v344(graph$$11) {
    function v343(elem$$33) {
      function v342(adj$$13) {
        var v7643 = viz$$13.graph;
        var v14080 = adj$$13.nodeFrom;
        var v7644 = v14080.id;
        var nodeFrom$$2 = v7643.getNode(v7644);
        var v7645 = viz$$13.graph;
        var v14081 = adj$$13.nodeTo;
        var v7646 = v14081.id;
        var nodeTo$$2 = v7645.getNode(v7646);
        var v14082 = nodeFrom$$2.adjacentTo(nodeTo$$2);
        var v7650 = !v14082;
        if (v7650) {
          var v7647 = viz$$13.graph;
          var v7648 = adj$$13.data;
          adj$$13 = v7647.addAdjacence(nodeFrom$$2, nodeTo$$2, v7648);
          var v18952 = nodeFrom$$2.startAlpha;
          var v18953 = nodeFrom$$2.endAlpha;
          var v14083 = v18952 == v18953;
          if (v14083) {
            var v18954 = nodeTo$$2.startAlpha;
            var v18955 = nodeTo$$2.endAlpha;
            v14083 = v18954 == v18955;
          }
          var v7649 = v14083;
          if (v7649) {
            fadeEdges$$2 = true;
            adj$$13.setData("alpha", 0);
            adj$$13.setData("alpha", 0, "start");
            adj$$13.setData("alpha", 1, "end");
          }
        }
        return;
      }
      elem$$33.eachAdjacency(v342);
      return;
    }
    function v341(elem$$32) {
      var v18956 = viz$$13.graph;
      var v18957 = elem$$32.id;
      var v14084 = v18956.hasNode(v18957);
      var v7654 = !v14084;
      if (v7654) {
        var v7651 = viz$$13.graph;
        v7651.addNode(elem$$32);
        var v7652 = viz$$13.graph;
        var v7653 = elem$$32.id;
        var n$$19 = v7652.getNode(v7653);
        n$$19.setData("alpha", 0);
        n$$19.setData("alpha", 0, "start");
        n$$19.setData("alpha", 1, "end");
      }
      return;
    }
    var viz$$13 = this.viz;
    graph$$11.eachNode(v341);
    var fadeEdges$$2 = false;
    graph$$11.eachNode(v343);
    return fadeEdges$$2;
  }
  function v340(node$$38, opt$$15) {
    function subn$$2(n$$18) {
      function v339(ch$$8) {
        delete ch$$8.ignore;
        var v14085;
        var v22360 = opt$$15.type;
        var v18958 = v22360 == "animate";
        if (v18958) {
          v14085 = "end";
        } else {
          v14085 = "current";
        }
        var v7655 = v14085;
        ch$$8.setData("alpha", 1, v7655);
        subn$$2(ch$$8);
        return;
      }
      n$$18.eachSubnode(v339);
      return;
    }
    var v14086 = "collapsed" in node$$38;
    var v7656 = !v14086;
    if (v7656) {
      return;
    }
    var viz$$12 = this.viz;
    var v7657 = this.options;
    var v7658 = viz$$12.config;
    var v7659 = opt$$15 || {};
    var v14087 = ["node-property:alpha:span", "linear"];
    var v7660 = {"modes":v14087};
    opt$$15 = $$$1.merge(v7657, v7658, v7659, v7660);
    delete node$$38.collapsed;
    subn$$2(node$$38);
    var v14088 = opt$$15.type;
    var v7666 = v14088 == "animate";
    if (v7666) {
      viz$$12.compute("end");
      var v7663 = viz$$12.rotated;
      if (v7663) {
        var v7661 = viz$$12.rotated;
        var v7662 = {"property":"end"};
        viz$$12.rotate(v7661, "none", v7662);
      }
      var v7664 = viz$$12.fx;
      v7664.animate(opt$$15);
    } else {
      var v14089 = opt$$15.type;
      var v7665 = v14089 == "replot";
      if (v7665) {
        viz$$12.refresh();
      }
    }
    return;
  }
  function v338(node$$37, opt$$14) {
    function subn$$1(n$$17) {
      function v337(ch$$7) {
        var v7667 = node$$37.getPos("end");
        ch$$7.setPos(v7667, "end");
        subn$$1(ch$$7);
        return;
      }
      n$$17.eachSubnode(v337);
      return;
    }
    function subn(n$$16) {
      function v336(ch$$6) {
        ch$$6.ignore = true;
        var v14090;
        var v22361 = opt$$14.type;
        var v18959 = v22361 == "animate";
        if (v18959) {
          v14090 = "end";
        } else {
          v14090 = "current";
        }
        var v7668 = v14090;
        ch$$6.setData("alpha", 0, v7668);
        subn(ch$$6);
        return;
      }
      n$$16.eachSubnode(v336);
      return;
    }
    var viz$$11 = this.viz;
    var v14091 = node$$37.collapsed;
    var v18961 = !v14091;
    if (v18961) {
      var v22362 = $$$1.lambda(true);
      var v18960 = node$$37.anySubnode(v22362);
      v14091 = !v18960;
    }
    var v7669 = v14091;
    if (v7669) {
      return;
    }
    var v7670 = this.options;
    var v7671 = viz$$11.config;
    var v7672 = opt$$14 || {};
    var v14092 = ["node-property:alpha:span", "linear"];
    var v7673 = {"modes":v14092};
    opt$$14 = $$$1.merge(v7670, v7671, v7672, v7673);
    node$$37.collapsed = true;
    subn(node$$37);
    var v14093 = opt$$14.type;
    var v7679 = v14093 == "animate";
    if (v7679) {
      viz$$11.compute("end");
      var v7676 = viz$$11.rotated;
      if (v7676) {
        var v7674 = viz$$11.rotated;
        var v7675 = {"property":"end"};
        viz$$11.rotate(v7674, "none", v7675);
      }
      subn$$1(node$$37);
      var v7677 = viz$$11.fx;
      v7677.animate(opt$$14);
    } else {
      var v14094 = opt$$14.type;
      var v7678 = v14094 == "replot";
      if (v7678) {
        viz$$11.refresh();
      }
    }
    return;
  }
  function v335(json$$4, opt$$13, extraModes) {
    function v334() {
      function v333(elem$$31) {
        function v332(adj$$12) {
          var v7683 = adj$$12.ignore;
          if (v7683) {
            var v7680 = viz$$10.graph;
            var v14095 = adj$$12.nodeFrom;
            var v7681 = v14095.id;
            var v14096 = adj$$12.nodeTo;
            var v7682 = v14096.id;
            v7680.removeAdjacence(v7681, v7682);
          }
          return;
        }
        elem$$31.eachAdjacency(v332);
        return;
      }
      function v331(elem$$30) {
        var v7686 = elem$$30.ignore;
        if (v7686) {
          var v7684 = viz$$10.graph;
          var v7685 = elem$$30.id;
          v7684.removeNode(v7685);
        }
        return;
      }
      var v7687 = viz$$10.graph;
      v7687.eachNode(v331);
      var v7688 = viz$$10.graph;
      v7688.eachNode(v333);
      options$$8.onComplete();
      return;
    }
    function v330(elem$$29) {
      var v18962 = elem$$29.id;
      var v14097 = v18962 != root$$3;
      if (v14097) {
        var v22363 = elem$$29.pos;
        var v18963 = v22363.getp();
        var v18964 = Polar.KER;
        v14097 = v18963.equals(v18964);
      }
      var v7693 = v14097;
      if (v7693) {
        var v7689 = elem$$29.pos;
        var v7690 = elem$$29.endPos;
        v7689.set(v7690);
        var v7691 = elem$$29.startPos;
        var v7692 = elem$$29.endPos;
        v7691.set(v7692);
      }
      return;
    }
    function v329(elem$$28) {
      function v328(adj$$11) {
        var v18965 = adj$$11.nodeFrom;
        var v14098 = v18965.ignore;
        var v18967 = !v14098;
        if (v18967) {
          var v18966 = adj$$11.nodeTo;
          v14098 = v18966.ignore;
        }
        var v7694 = v14098;
        if (v7694) {
          return;
        }
        var v14099 = adj$$11.nodeFrom;
        var v7695 = v14099.id;
        var nodeFrom$$1 = graph$$10.getNode(v7695);
        var v14100 = adj$$11.nodeTo;
        var v7696 = v14100.id;
        var nodeTo$$1 = graph$$10.getNode(v7696);
        var v14101 = nodeFrom$$1.adjacentTo(nodeTo$$1);
        var v7700 = !v14101;
        if (v7700) {
          var v7697 = viz$$10.graph;
          var v7698 = nodeFrom$$1.id;
          var v7699 = nodeTo$$1.id;
          adj$$11 = v7697.getAdjacence(v7698, v7699);
          fadeEdges$$1 = true;
          adj$$11.setData("alpha", 1);
          adj$$11.setData("alpha", 1, "start");
          adj$$11.setData("alpha", 0, "end");
        }
        return;
      }
      var v7701 = elem$$28.ignore;
      if (v7701) {
        return;
      }
      elem$$28.eachAdjacency(v328);
      return;
    }
    function v327(elem$$27) {
      var v7702 = elem$$27.id;
      var graphNode = graph$$10.getNode(v7702);
      var v7706 = !graphNode;
      if (v7706) {
        elem$$27.setData("alpha", 1);
        elem$$27.setData("alpha", 1, "start");
        elem$$27.setData("alpha", 0, "end");
        elem$$27.ignore = true;
      } else {
        var graphNodeData = graphNode.data;
        var prop$$19;
        for (prop$$19 in graphNodeData) {
          var v14102 = nodeModes;
          if (v14102) {
            var v18968 = $$$1.indexOf(nodeModes, prop$$19);
            v14102 = v18968 > -1;
          }
          var v7705 = v14102;
          if (v7705) {
            var v7703 = elem$$27.endData;
            v7703[prop$$19] = graphNodeData[prop$$19];
          } else {
            var v7704 = elem$$27.data;
            v7704[prop$$19] = graphNodeData[prop$$19];
          }
        }
      }
      return;
    }
    function v326(n$$15) {
      return "$" + n$$15;
    }
    function v325(elem$$26) {
      function v324(adj$$10) {
        var v22364 = adj$$10.nodeFrom;
        var v18969 = v22364.id;
        var v22365 = adj$$10.nodeTo;
        var v18970 = v22365.id;
        var v14103 = graph$$10.getAdjacence(v18969, v18970);
        var v7710 = !v14103;
        if (v7710) {
          var v7707 = viz$$10.graph;
          var v14104 = adj$$10.nodeFrom;
          var v7708 = v14104.id;
          var v14105 = adj$$10.nodeTo;
          var v7709 = v14105.id;
          v7707.removeAdjacence(v7708, v7709);
        }
        return;
      }
      elem$$26.eachAdjacency(v324);
      var v18971 = elem$$26.id;
      var v14106 = graph$$10.hasNode(v18971);
      var v7713 = !v14106;
      if (v7713) {
        var v7711 = viz$$10.graph;
        var v7712 = elem$$26.id;
        v7711.removeNode(v7712);
      }
      return;
    }
    function v323(elem$$25) {
      function v322(adj$$9) {
        var v18972 = viz$$10.graph;
        var v22366 = adj$$9.nodeFrom;
        var v18973 = v22366.id;
        var v22367 = adj$$9.nodeTo;
        var v18974 = v22367.id;
        var v14107 = v18972.getAdjacence(v18973, v18974);
        var v7714 = !v14107;
        var adjExists = !v7714;
        var v7715 = viz$$10.graph;
        var v7716 = adj$$9.nodeFrom;
        var v7717 = adj$$9.nodeTo;
        var v7718 = adj$$9.data;
        v7715.addAdjacence(v7716, v7717, v7718);
        if (adjExists) {
          var v7719 = viz$$10.graph;
          var v14108 = adj$$9.nodeFrom;
          var v7720 = v14108.id;
          var v14109 = adj$$9.nodeTo;
          var v7721 = v14109.id;
          var addedAdj = v7719.getAdjacence(v7720, v7721);
          var prop$$18;
          var v14110 = adj$$9.data;
          var v18975 = !v14110;
          if (v18975) {
            v14110 = {};
          }
          var v7723 = v14110;
          for (prop$$18 in v7723) {
            var v7722 = addedAdj.data;
            var v14111 = adj$$9.data;
            v7722[prop$$18] = v14111[prop$$18];
          }
        }
        return;
      }
      var v7724 = viz$$10.graph;
      var v7725 = elem$$25.id;
      var nodeExists = v7724.hasNode(v7725);
      elem$$25.eachAdjacency(v322);
      if (nodeExists) {
        var v7726 = viz$$10.graph;
        var v7727 = elem$$25.id;
        var addedNode = v7726.getNode(v7727);
        var prop$$17;
        var v14112 = elem$$25.data;
        var v18976 = !v14112;
        if (v18976) {
          v14112 = {};
        }
        var v7729 = v14112;
        for (prop$$17 in v7729) {
          var v7728 = addedNode.data;
          var v14113 = elem$$25.data;
          v7728[prop$$17] = v14113[prop$$17];
        }
      }
      return;
    }
    extraModes = extraModes || {};
    var viz$$10 = this.viz;
    var v7730 = this.options;
    var v7731 = viz$$10.controller;
    var options$$8 = $$$1.merge(v7730, v7731, opt$$13);
    var root$$3 = viz$$10.root;
    var graph$$10;
    var v7732 = opt$$13.id;
    var v14114 = !v7732;
    if (v14114) {
      v7732 = viz$$10.root;
    }
    viz$$10.root = v7732;
    var v7748 = options$$8.type;
    switch(v7748) {
      case "nothing":
        graph$$10 = viz$$10.construct(json$$4);
        graph$$10.eachNode(v323);
        var v7733 = viz$$10.graph;
        v7733.eachNode(v325);
        break;
      case "replot":
        var v7734 = viz$$10.labels;
        v7734.clearLabels(true);
        var v7735 = {type:"nothing"};
        this.morph(json$$4, v7735);
        viz$$10.refresh(true);
        viz$$10.refresh(true);
        break;
      case "fade:seq":
      ;
      case "fade":
      ;
      case "fade:con":
        that = this;
        graph$$10 = viz$$10.construct(json$$4);
        var v7736 = "node-property" in extraModes;
        if (v7736) {
          var v18977 = extraModes["node-property"];
          var v14115 = $$$1.splat(v18977);
          v7736 = $$$1.map(v14115, v326);
        }
        var nodeModes = v7736;
        var v7737 = viz$$10.graph;
        v7737.eachNode(v327);
        var v7738 = viz$$10.graph;
        v7738.eachNode(v329);
        var fadeEdges$$1 = this.preprocessSum(graph$$10);
        var v7739;
        var v14116 = !fadeEdges$$1;
        if (v14116) {
          v7739 = ["node-property:alpha"];
        } else {
          v7739 = ["node-property:alpha", "edge-property:alpha"];
        }
        var modes$$1 = v7739;
        var v7740 = modes$$1;
        var v14117 = modes$$1[0];
        var v18978;
        var v22369 = "node-property" in extraModes;
        if (v22369) {
          var v27700 = extraModes["node-property"];
          var v26162 = $$$1.splat(v27700);
          var v22368 = v26162.join(":");
          v18978 = ":" + v22368;
        } else {
          v18978 = "";
        }
        var v14118 = v18978;
        v7740[0] = v14117 + v14118;
        var v7741 = modes$$1;
        var v18979 = modes$$1[1];
        var v22370 = !v18979;
        if (v22370) {
          v18979 = "edge-property:alpha";
        }
        var v14119 = v18979;
        var v18980;
        var v22372 = "edge-property" in extraModes;
        if (v22372) {
          var v27701 = extraModes["edge-property"];
          var v26163 = $$$1.splat(v27701);
          var v22371 = v26163.join(":");
          v18980 = ":" + v22371;
        } else {
          v18980 = "";
        }
        var v14120 = v18980;
        v7741[1] = v14119 + v14120;
        var v7743 = "label-property" in extraModes;
        if (v7743) {
          var v22373 = extraModes["label-property"];
          var v18981 = $$$1.splat(v22373);
          var v14121 = v18981.join(":");
          var v7742 = "label-property:" + v14121;
          modes$$1.push(v7742);
        }
        var v7744 = viz$$10.reposition;
        if (v7744) {
          viz$$10.reposition();
        } else {
          viz$$10.compute("end");
        }
        var v7745 = viz$$10.graph;
        v7745.eachNode(v330);
        var v7746 = viz$$10.fx;
        var v27702 = extraModes.position;
        var v28673 = !v27702;
        if (v28673) {
          v27702 = "polar";
        }
        var v26164 = v27702;
        var v22374 = [v26164];
        var v18982 = v22374.concat(modes$$1);
        var v14122 = {modes:v18982, onComplete:v334};
        var v7747 = $$$1.merge(options$$8, v14122);
        v7746.animate(v7747);
      default:
      ;
    }
    return;
  }
  function v321(json$$3, opt$$12) {
    function v320(elem$$24) {
      var v18983 = elem$$24.id;
      var v14123 = v18983 != root$$2;
      if (v14123) {
        var v18984 = elem$$24.pos;
        v14123 = v18984.isZero();
      }
      var v7753 = v14123;
      if (v7753) {
        var v7749 = elem$$24.pos;
        var v7750 = elem$$24.endPos;
        v7749.set(v7750);
        var v7751 = elem$$24.startPos;
        var v7752 = elem$$24.endPos;
        v7751.set(v7752);
      }
      return;
    }
    function v319() {
      function v318() {
        options$$7.onComplete();
        return;
      }
      var v7754 = viz$$9.fx;
      var v14124 = {modes:modes, onComplete:v318};
      var v7755 = $$$1.merge(options$$7, v14124);
      v7754.animate(v7755);
      return;
    }
    function v317(elem$$23) {
      function v316(adj$$8) {
        var v7756 = viz$$9.graph;
        var v7757 = adj$$8.nodeFrom;
        var v7758 = adj$$8.nodeTo;
        var v7759 = adj$$8.data;
        v7756.addAdjacence(v7757, v7758, v7759);
        return;
      }
      elem$$23.eachAdjacency(v316);
      return;
    }
    var viz$$9 = this.viz;
    var v7760 = this.options;
    var v7761 = viz$$9.controller;
    var options$$7 = $$$1.merge(v7760, v7761, opt$$12);
    var root$$2 = viz$$9.root;
    var graph$$9;
    var v7762 = opt$$12.id;
    var v14125 = !v7762;
    if (v14125) {
      v7762 = viz$$9.root;
    }
    viz$$9.root = v7762;
    var v7771 = options$$7.type;
    switch(v7771) {
      case "nothing":
        graph$$9 = viz$$9.construct(json$$3);
        graph$$9.eachNode(v317);
        break;
      case "replot":
        viz$$9.refresh(true);
        var v7763 = {type:"nothing"};
        this.sum(json$$3, v7763);
        viz$$9.refresh(true);
        break;
      case "fade:seq":
      ;
      case "fade":
      ;
      case "fade:con":
        that = this;
        graph$$9 = viz$$9.construct(json$$3);
        var fadeEdges = this.preprocessSum(graph$$9);
        var v7764;
        var v14126 = !fadeEdges;
        if (v14126) {
          v7764 = ["node-property:alpha"];
        } else {
          v7764 = ["node-property:alpha", "edge-property:alpha"];
        }
        var modes = v7764;
        viz$$9.reposition();
        var v14127 = options$$7.type;
        var v7770 = v14127 != "fade:con";
        if (v7770) {
          var v7765 = viz$$9.fx;
          var v18985 = ["linear"];
          var v14128 = {modes:v18985, onComplete:v319};
          var v7766 = $$$1.merge(options$$7, v14128);
          v7765.animate(v7766);
        } else {
          var v7767 = viz$$9.graph;
          v7767.eachNode(v320);
          var v7768 = viz$$9.fx;
          var v22375 = ["linear"];
          var v18986 = v22375.concat(modes);
          var v14129 = {modes:v18986};
          var v7769 = $$$1.merge(options$$7, v14129);
          v7768.animate(v7769);
        }
        break;
      default:
        this.doError();
    }
    return;
  }
  function v315(vertex, opt$$11) {
    function v314() {
      options$$6.onComplete();
      return;
    }
    function v313() {
      var v7772 = v$$1.shift();
      var v7773 = {type:"nothing"};
      that$$13.removeEdge(v7772, v7773);
      var v7774 = viz$$8.labels;
      v7774.clearLabels();
      return;
    }
    function v312() {
      var v7775 = v$$1.length;
      return v7775 != 0;
    }
    function v311() {
      var v7776 = {type:"nothing"};
      that$$13.removeEdge(v$$1, v7776);
      var v7777 = options$$6.onComplete;
      if (v7777) {
        options$$6.onComplete();
      }
      return;
    }
    function v310() {
      var v7778 = {type:"nothing"};
      that$$13.removeEdge(v$$1, v7778);
      viz$$8.reposition();
      var v7779 = viz$$8.fx;
      var v18987 = ["linear"];
      var v14130 = {modes:v18987};
      var v7780 = $$$1.merge(options$$6, v14130);
      v7779.animate(v7780);
      return;
    }
    var viz$$8 = this.viz;
    var v7781 = this.options;
    var v7782 = viz$$8.controller;
    var options$$6 = $$$1.merge(v7781, v7782, opt$$11);
    var v7783;
    var v22376 = vertex[0];
    var v18988 = $$$1.type(v22376);
    var v14131 = v18988 == "string";
    if (v14131) {
      v7783 = [vertex];
    } else {
      v7783 = vertex;
    }
    var v$$1 = v7783;
    var i$$41;
    var that$$13;
    var adj$$7;
    var v7803 = options$$6.type;
    switch(v7803) {
      case "nothing":
        i$$41 = 0;
        var v14132 = v$$1.length;
        var v7787 = i$$41 < v14132;
        for (;v7787;) {
          var v7784 = viz$$8.graph;
          var v14133 = v$$1[i$$41];
          var v7785 = v14133[0];
          var v14134 = v$$1[i$$41];
          var v7786 = v14134[1];
          v7784.removeAdjacence(v7785, v7786);
          i$$41++;
          var v14135 = v$$1.length;
          v7787 = i$$41 < v14135;
        }
        break;
      case "replot":
        var v7788 = {type:"nothing"};
        this.removeEdge(v$$1, v7788);
        viz$$8.refresh(true);
        break;
      case "fade:seq":
      ;
      case "fade":
        that$$13 = this;
        i$$41 = 0;
        var v14136 = v$$1.length;
        var v7792 = i$$41 < v14136;
        for (;v7792;) {
          var v7789 = viz$$8.graph;
          var v14137 = v$$1[i$$41];
          var v7790 = v14137[0];
          var v14138 = v$$1[i$$41];
          var v7791 = v14138[1];
          adj$$7 = v7789.getAdjacence(v7790, v7791);
          if (adj$$7) {
            adj$$7.setData("alpha", 0, "end");
          }
          i$$41++;
          var v14139 = v$$1.length;
          v7792 = i$$41 < v14139;
        }
        var v7793 = viz$$8.fx;
        var v18989 = ["edge-property:alpha"];
        var v14140 = {modes:v18989, onComplete:v310};
        var v7794 = $$$1.merge(options$$6, v14140);
        v7793.animate(v7794);
        break;
      case "fade:con":
        that$$13 = this;
        i$$41 = 0;
        var v14141 = v$$1.length;
        var v7798 = i$$41 < v14141;
        for (;v7798;) {
          var v7795 = viz$$8.graph;
          var v14142 = v$$1[i$$41];
          var v7796 = v14142[0];
          var v14143 = v$$1[i$$41];
          var v7797 = v14143[1];
          adj$$7 = v7795.getAdjacence(v7796, v7797);
          if (adj$$7) {
            adj$$7.setData("alpha", 0, "end");
            adj$$7.ignore = true;
          }
          i$$41++;
          var v14144 = v$$1.length;
          v7798 = i$$41 < v14144;
        }
        viz$$8.reposition();
        var v7799 = viz$$8.fx;
        var v18990 = ["edge-property:alpha", "linear"];
        var v14145 = {modes:v18990, onComplete:v311};
        var v7800 = $$$1.merge(options$$6, v14145);
        v7799.animate(v7800);
        break;
      case "iter":
        that$$13 = this;
        var v7801 = viz$$8.fx;
        var v22377 = options$$6.duration;
        var v22378 = v$$1.length;
        var v18991 = v22377 / v22378;
        var v14146 = Math.ceil(v18991);
        var v7802 = {condition:v312, step:v313, onComplete:v314, duration:v14146};
        v7801.sequence(v7802);
        break;
      default:
        this.doError();
    }
    return;
  }
  function v309(node$$36, opt$$10) {
    function v308() {
      var v7804 = options$$5.onComplete;
      if (v7804) {
        options$$5.onComplete();
      }
      return;
    }
    function v307() {
      var v7805 = n$$14.shift();
      var v7806 = {type:"nothing"};
      that$$12.removeNode(v7805, v7806);
      var v7807 = viz$$7.labels;
      v7807.clearLabels();
      return;
    }
    function v306() {
      var v7808 = n$$14.length;
      return v7808 != 0;
    }
    function v305() {
      var v7809 = {type:"nothing"};
      that$$12.removeNode(n$$14, v7809);
      var v7810 = options$$5.onComplete;
      if (v7810) {
        options$$5.onComplete();
      }
      return;
    }
    function v304() {
      var v7811 = {type:"nothing"};
      that$$12.removeNode(n$$14, v7811);
      var v7812 = viz$$7.labels;
      v7812.clearLabels();
      viz$$7.reposition();
      var v7813 = viz$$7.fx;
      var v18992 = ["linear"];
      var v14147 = {modes:v18992};
      var v7814 = $$$1.merge(options$$5, v14147);
      v7813.animate(v7814);
      return;
    }
    var viz$$7 = this.viz;
    var v7815 = this.options;
    var v7816 = viz$$7.controller;
    var options$$5 = $$$1.merge(v7815, v7816, opt$$10);
    var n$$14 = $$$1.splat(node$$36);
    var i$$40;
    var that$$12;
    var nodeObj;
    var v7835 = options$$5.type;
    switch(v7835) {
      case "nothing":
        i$$40 = 0;
        var v14148 = n$$14.length;
        var v7820 = i$$40 < v14148;
        for (;v7820;) {
          var v14149 = viz$$7.graph;
          var v14150 = n$$14[i$$40];
          var v7817 = v14149.getNode(v14150);
          options$$5.onBeforeRemoveNode(v7817);
          var v7818 = viz$$7.graph;
          var v7819 = n$$14[i$$40];
          v7818.removeNode(v7819);
          i$$40++;
          var v14151 = n$$14.length;
          v7820 = i$$40 < v14151;
        }
        break;
      case "replot":
        var v7821 = {type:"nothing"};
        this.removeNode(n$$14, v7821);
        var v7822 = viz$$7.labels;
        v7822.clearLabels();
        viz$$7.refresh(true);
        break;
      case "fade:seq":
      ;
      case "fade":
        that$$12 = this;
        i$$40 = 0;
        var v14152 = n$$14.length;
        var v7825 = i$$40 < v14152;
        for (;v7825;) {
          var v7823 = viz$$7.graph;
          var v7824 = n$$14[i$$40];
          nodeObj = v7823.getNode(v7824);
          nodeObj.setData("alpha", 0, "end");
          i$$40++;
          var v14153 = n$$14.length;
          v7825 = i$$40 < v14153;
        }
        var v7826 = viz$$7.fx;
        var v18993 = ["node-property:alpha"];
        var v14154 = {modes:v18993, onComplete:v304};
        var v7827 = $$$1.merge(options$$5, v14154);
        v7826.animate(v7827);
        break;
      case "fade:con":
        that$$12 = this;
        i$$40 = 0;
        var v14155 = n$$14.length;
        var v7830 = i$$40 < v14155;
        for (;v7830;) {
          var v7828 = viz$$7.graph;
          var v7829 = n$$14[i$$40];
          nodeObj = v7828.getNode(v7829);
          nodeObj.setData("alpha", 0, "end");
          nodeObj.ignore = true;
          i$$40++;
          var v14156 = n$$14.length;
          v7830 = i$$40 < v14156;
        }
        viz$$7.reposition();
        var v7831 = viz$$7.fx;
        var v18994 = ["node-property:alpha", "linear"];
        var v14157 = {modes:v18994, onComplete:v305};
        var v7832 = $$$1.merge(options$$5, v14157);
        v7831.animate(v7832);
        break;
      case "iter":
        that$$12 = this;
        var v7833 = viz$$7.fx;
        var v22379 = options$$5.duration;
        var v22380 = n$$14.length;
        var v18995 = v22379 / v22380;
        var v14158 = Math.ceil(v18995);
        var v7834 = {condition:v306, step:v307, onComplete:v308, duration:v14158};
        v7833.sequence(v7834);
        break;
      default:
        this.doError();
    }
    return;
  }
  function v303(viz$$6) {
    this.viz = viz$$6;
    return;
  }
  function v302(m$$1) {
    function v301() {
      var v14159 = Graph.Util;
      var v7836 = v14159[m$$1];
      var v7837 = Graph.Util;
      var v14160 = [this];
      var v22381 = Array.prototype;
      var v18996 = v22381.slice;
      var v14161 = v18996.call(arguments);
      var v7838 = v14160.concat(v14161);
      return v7836.apply(v7837, v7838);
    }
    var v14162 = Graph.Node;
    var v7839 = v14162.prototype;
    v7839[m$$1] = v301;
    return;
  }
  function v300(m) {
    function v299() {
      var v14163 = Graph.Util;
      var v7840 = v14163[m];
      var v7841 = Graph.Util;
      var v14164 = [this];
      var v22382 = Array.prototype;
      var v18997 = v22382.slice;
      var v14165 = v18997.call(arguments);
      var v7842 = v14164.concat(v14165);
      return v7840.apply(v7841, v7842);
    }
    var v7843 = Graph.prototype;
    v7843[m] = v299;
    return;
  }
  function v298(graph$$8, pos$$15, prop$$16, flags$$12) {
    function v297(elem$$22) {
      var v7844;
      var v18998 = node$$35 == null;
      var v22385 = !v18998;
      if (v22385) {
        var v27703 = elem$$22.getPos(prop$$16);
        var v26165 = v27703.getc(true);
        var v22383 = distance(v26165, pos$$15);
        var v27704 = node$$35.getPos(prop$$16);
        var v26166 = v27704.getc(true);
        var v22384 = distance(v26166, pos$$15);
        v18998 = v22383 < v22384;
      }
      var v14166 = v18998;
      if (v14166) {
        v7844 = elem$$22;
      } else {
        v7844 = node$$35;
      }
      node$$35 = v7844;
      return;
    }
    function distance(a$$5, b$$3) {
      var v7845 = a$$5.x;
      var v7846 = b$$3.x;
      var d1 = v7845 - v7846;
      var v7847 = a$$5.y;
      var v7848 = b$$3.y;
      var d2 = v7847 - v7848;
      var v7849 = d1 * d1;
      var v7850 = d2 * d2;
      return v7849 + v7850;
    }
    var node$$35 = null;
    prop$$16 = prop$$16 || "current";
    var v14167 = pos$$15;
    if (v14167) {
      v14167 = pos$$15.getc(true);
    }
    var v7851 = v14167;
    var v14168 = !v7851;
    if (v14168) {
      v7851 = Complex.KER;
    }
    pos$$15 = v7851;
    this.eachNode(graph$$8, v297, flags$$12);
    return node$$35;
  }
  function v296(graph$$7, prop$$15, flags$$11) {
    var v7852 = Polar.KER;
    return this.getClosestNodeToPos(graph$$7, v7852, prop$$15, flags$$11);
  }
  function v295(graph$$6) {
    function v294(elem$$21) {
      elem$$21._flag = false;
      return;
    }
    this.eachNode(graph$$6, v294);
    return;
  }
  function v293(node$$34, id$$19) {
    var v14169 = node$$34.id;
    var v7853 = v14169 == id$$19;
    if (v7853) {
      return true;
    }
    var pars = this.getParents(node$$34);
    var ans$$7 = false;
    var i$$39 = 0;
    var v14170 = !ans$$7;
    if (v14170) {
      var v18999 = pars.length;
      v14170 = i$$39 < v18999;
    }
    var v7855 = v14170;
    for (;v7855;) {
      var v7854 = ans$$7;
      var v14172 = !v7854;
      if (v14172) {
        var v14171 = pars[i$$39];
        v7854 = this.isDescendantOf(v14171, id$$19);
      }
      ans$$7 = v7854;
      i$$39++;
      var v14173 = !ans$$7;
      if (v14173) {
        var v19000 = pars.length;
        v14173 = i$$39 < v19000;
      }
      v7855 = v14173;
    }
    return ans$$7;
  }
  function v292(node$$33) {
    function v291(adj$$6) {
      var n$$13 = adj$$6.nodeTo;
      var v14174 = n$$13._depth;
      var v14175 = node$$33._depth;
      var v7856 = v14174 < v14175;
      if (v7856) {
        ans$$6.push(n$$13);
      }
      return;
    }
    var ans$$6 = [];
    this.eachAdjacency(node$$33, v291);
    return ans$$6;
  }
  function v290(node$$32, level$$8, flags$$10) {
    function v289(n$$12) {
      ans$$5.push(n$$12);
      return;
    }
    var ans$$5 = [];
    var that$$11 = this;
    level$$8 = level$$8 || 0;
    var levelStart;
    var levelEnd$$2;
    var v14176 = $$$1.type(level$$8);
    var v7859 = v14176 == "array";
    if (v7859) {
      levelStart = level$$8[0];
      levelEnd$$2 = level$$8[1];
    } else {
      levelStart = level$$8;
      var v7857 = Number.MAX_VALUE;
      var v7858 = node$$32._depth;
      levelEnd$$2 = v7857 - v7858;
    }
    this.eachLevel(node$$32, levelStart, levelEnd$$2, v289, flags$$10);
    return ans$$5;
  }
  function v288(node$$31, cond, flags$$9) {
    function v287(elem$$20) {
      var v7860 = c$$3(elem$$20);
      if (v7860) {
        flag$$1 = true;
      }
      return;
    }
    function v286(n$$11) {
      return n$$11[cond];
    }
    var flag$$1 = false;
    var v7861 = cond;
    var v14177 = !v7861;
    if (v14177) {
      v7861 = $$$1.lambda(true);
    }
    cond = v7861;
    var v7862;
    var v19001 = $$$1.type(cond);
    var v14178 = v19001 == "string";
    if (v14178) {
      v7862 = v286;
    } else {
      v7862 = cond;
    }
    var c$$3 = v7862;
    this.eachSubnode(node$$31, v287, flags$$9);
    return flag$$1;
  }
  function v285(node$$30, action$$9, flags$$8) {
    this.eachLevel(node$$30, 1, 1, action$$9, flags$$8);
    return;
  }
  function v284(node$$29, action$$8, flags$$7) {
    this.eachLevel(node$$29, 0, false, action$$8, flags$$7);
    return;
  }
  function v283(node$$27, levelBegin, levelEnd, action$$7, flags$$6) {
    function loopLevel(node$$28, levelBegin$$1, levelEnd$$1) {
      function v282(adj$$5) {
        var n$$10 = adj$$5.nodeTo;
        var v14179 = n$$10._depth;
        var v7863 = v14179 > d$$2;
        if (v7863) {
          loopLevel(n$$10, levelBegin$$1, levelEnd$$1);
        }
        return;
      }
      var v7864 = !shouldContinue;
      if (v7864) {
        return;
      }
      var d$$2 = node$$28._depth;
      var ret;
      var v19002 = d$$2 >= levelBegin$$1;
      if (v19002) {
        v19002 = d$$2 <= levelEnd$$1;
      }
      var v14180 = v19002;
      if (v14180) {
        v14180 = filter$$4(node$$28);
      }
      var v7865 = v14180;
      if (v7865) {
        ret = action$$7(node$$28, d$$2);
      }
      var v14181 = typeof ret;
      var v7866 = v14181 !== "undefined";
      if (v7866) {
        shouldContinue = ret;
      }
      var v14182 = shouldContinue;
      if (v14182) {
        v14182 = d$$2 < levelEnd$$1;
      }
      var v7867 = v14182;
      if (v7867) {
        that$$10.eachAdjacency(node$$28, v282);
      }
      return;
    }
    var d$$1 = node$$27._depth;
    var filter$$4 = this.filter(flags$$6);
    var that$$10 = this;
    var shouldContinue = true;
    var v7868;
    var v14184 = levelEnd === false;
    if (v14184) {
      var v14183 = Number.MAX_VALUE;
      v7868 = v14183 - d$$1;
    } else {
      v7868 = levelEnd;
    }
    levelEnd = v7868;
    var v7869 = levelBegin + d$$1;
    var v7870 = levelEnd + d$$1;
    loopLevel(node$$27, v7869, v7870);
    return;
  }
  function v281(graph$$5, id$$18, action$$6, flags$$5) {
    function v280(adj$$4) {
      var n$$9 = adj$$4.nodeTo;
      var v19003 = n$$9._flag;
      var v14185 = v19003 == false;
      if (v14185) {
        v14185 = filter$$3(n$$9);
      }
      var v7871 = v14185;
      if (v7871) {
        n$$9._flag = true;
        queue$$1.unshift(n$$9);
      }
      return;
    }
    var filter$$3 = this.filter(flags$$5);
    this.clean(graph$$5);
    var v7872 = graph$$5.getNode(id$$18);
    var queue$$1 = [v7872];
    var v14186 = queue$$1.length;
    var v7875 = v14186 != 0;
    for (;v7875;) {
      var node$$26 = queue$$1.pop();
      var v7873 = !node$$26;
      if (v7873) {
        return;
      }
      node$$26._flag = true;
      var v7874 = node$$26._depth;
      action$$6(node$$26, v7874);
      this.eachAdjacency(node$$26, v280, flags$$5);
      var v14187 = queue$$1.length;
      v7875 = v14187 != 0;
    }
    return;
  }
  function v279(graph$$4, id$$17, startDepth, flags$$4) {
    function v278(adj$$3) {
      var n$$8 = adj$$3.nodeTo;
      var v19004 = n$$8._flag;
      var v14188 = v19004 == false;
      if (v14188) {
        v14188 = filter$$2(n$$8);
      }
      var v7878 = v14188;
      if (v7878) {
        var v14189 = n$$8._depth;
        var v7877 = v14189 < 0;
        if (v7877) {
          var v14190 = node$$25._depth;
          var v7876 = v14190 + 1;
          n$$8._depth = v7876 + startDepth;
        }
        queue.unshift(n$$8);
      }
      return;
    }
    function v277(elem$$19) {
      elem$$19._flag = false;
      elem$$19._depth = -1;
      return;
    }
    startDepth = startDepth || 0;
    var filter$$2 = this.filter(flags$$4);
    this.eachNode(graph$$4, v277, flags$$4);
    var root$$1 = graph$$4.getNode(id$$17);
    root$$1._depth = startDepth;
    var queue = [root$$1];
    var v14191 = queue.length;
    var v7879 = v14191 != 0;
    for (;v7879;) {
      var node$$25 = queue.pop();
      node$$25._flag = true;
      this.eachAdjacency(node$$25, v278, flags$$4);
      var v14192 = queue.length;
      v7879 = v14192 != 0;
    }
    return;
  }
  function v276(node$$24, action$$5, flags$$3) {
    var adj$$2 = node$$24.adjacencies;
    var filter$$1 = this.filter(flags$$3);
    var id$$16;
    for (id$$16 in adj$$2) {
      var a$$4 = adj$$2[id$$16];
      var v7881 = filter$$1(a$$4);
      if (v7881) {
        var v14193 = a$$4.nodeFrom;
        var v7880 = v14193 != node$$24;
        if (v7880) {
          var tmp = a$$4.nodeFrom;
          a$$4.nodeFrom = a$$4.nodeTo;
          a$$4.nodeTo = tmp;
        }
        action$$5(a$$4, id$$16);
      }
    }
    return;
  }
  function v275(graph$$3, action$$4, flags$$2) {
    this.eachNode(graph$$3, action$$4, flags$$2);
    return;
  }
  function v274(graph$$2, action$$3, flags$$1) {
    var filter = this.filter(flags$$1);
    var i$$38;
    var v7884 = graph$$2.nodes;
    for (i$$38 in v7884) {
      var v19005 = graph$$2.nodes;
      var v14194 = v19005[i$$38];
      var v7883 = filter(v14194);
      if (v7883) {
        var v14195 = graph$$2.nodes;
        var v7882 = v14195[i$$38];
        action$$3(v7882);
      }
    }
    return;
  }
  function v273(graph$$1, id$$15) {
    var v7885 = graph$$1.nodes;
    return v7885[id$$15];
  }
  function v272(param$$3) {
    function v271(elem$$18) {
      var i$$37 = 0;
      var v14196 = props$$3.length;
      var v7887 = i$$37 < v14196;
      for (;v7887;) {
        var v14197 = props$$3[i$$37];
        var v7886 = elem$$18[v14197];
        if (v7886) {
          return false;
        }
        i$$37++;
        var v14198 = props$$3.length;
        v7887 = i$$37 < v14198;
      }
      return true;
    }
    function v270() {
      return true;
    }
    var v14199 = !param$$3;
    var v19007 = !v14199;
    if (v19007) {
      var v22386 = $$$1.type(param$$3);
      var v19006 = v22386 == "string";
      v14199 = !v19006;
    }
    var v7888 = v14199;
    if (v7888) {
      return v270;
    }
    var props$$3 = param$$3.split(" ");
    return v271;
  }
  function v269(nodeFrom, nodeTo, data$$21, Edge$$2, Label$$2) {
    this.nodeFrom = nodeFrom;
    this.nodeTo = nodeTo;
    this.data = data$$21 || {};
    this.startData = {};
    this.endData = {};
    this.Config = this.Edge = Edge$$2;
    this.Label = Label$$2;
    return;
  }
  function v268(value$$38, type$$47) {
    type$$47 = type$$47 || "current";
    var pos$$14;
    var v7891 = type$$47 == "current";
    if (v7891) {
      pos$$14 = this.pos;
    } else {
      var v7890 = type$$47 == "end";
      if (v7890) {
        pos$$14 = this.endPos;
      } else {
        var v7889 = type$$47 == "start";
        if (v7889) {
          pos$$14 = this.startPos;
        }
      }
    }
    pos$$14.set(value$$38);
    return;
  }
  function v267(type$$46) {
    type$$46 = type$$46 || "current";
    var v7894 = type$$46 == "current";
    if (v7894) {
      return this.pos;
    } else {
      var v7893 = type$$46 == "end";
      if (v7893) {
        return this.endPos;
      } else {
        var v7892 = type$$46 == "start";
        if (v7892) {
          return this.startPos;
        }
      }
    }
    return;
  }
  function v266(id$$14) {
    var v7895 = this.adjacencies;
    return v7895[id$$14];
  }
  function v265(node$$23) {
    var v7896 = node$$23.id;
    var v7897 = this.adjacencies;
    return v7896 in v7897;
  }
  function v264(opt$$9, klass$$5, Node$$2, Edge$$1, Label$$1) {
    var v7898 = {"begin":0, "end":0};
    var v7899 = new klass$$5;
    var v7900 = new klass$$5;
    var v7901 = new klass$$5;
    var innerOptions$$1 = {"id":"", "name":"", "data":{}, "startData":{}, "endData":{}, "adjacencies":{}, "selected":false, "drawn":false, "exist":false, "angleSpan":v7898, "pos":v7899, "startPos":v7900, "endPos":v7901};
    var v7902 = $$$1.extend(innerOptions$$1, opt$$9);
    $$$1.extend(this, v7902);
    this.Config = this.Node = Node$$2;
    this.Edge = Edge$$1;
    this.Label = Label$$1;
    return;
  }
  function v263() {
    function v262() {
      var v19008 = Array.prototype;
      var v14200 = v19008.slice;
      var v7903 = v14200.call(arguments);
      removeDataInternal.call(this, "label", v7903);
      return;
    }
    function v261(types$$2, obj$$29) {
      types$$2 = $$$1.splat(types$$2);
      var attr$$2;
      for (attr$$2 in obj$$29) {
        var i$$36 = 0;
        var v7904 = obj$$29[attr$$2];
        var val$$4 = $$$1.splat(v7904);
        var l$$14 = types$$2.length;
        var v7907 = i$$36 < l$$14;
        for (;v7907;) {
          var v7905 = val$$4[i$$36];
          var v7906 = types$$2[i$$36];
          this.setLabelData(attr$$2, v7905, v7906);
          i$$36++;
          v7907 = i$$36 < l$$14;
        }
      }
      return;
    }
    function v260(prop$$14, value$$37, type$$45) {
      setDataInternal.call(this, "label", prop$$14, value$$37, type$$45);
      return;
    }
    function v259(prop$$13, type$$44, force$$4) {
      var v7908 = this.Label;
      return getDataInternal.call(this, "label", prop$$13, type$$44, force$$4, v7908);
    }
    function v258() {
      var v19009 = Array.prototype;
      var v14201 = v19009.slice;
      var v7909 = v14201.call(arguments);
      removeDataInternal.call(this, "canvas", v7909);
      return;
    }
    function v257(types$$1, obj$$28) {
      types$$1 = $$$1.splat(types$$1);
      var attr$$1;
      for (attr$$1 in obj$$28) {
        var i$$35 = 0;
        var v7910 = obj$$28[attr$$1];
        var val$$3 = $$$1.splat(v7910);
        var l$$13 = types$$1.length;
        var v7913 = i$$35 < l$$13;
        for (;v7913;) {
          var v7911 = val$$3[i$$35];
          var v7912 = types$$1[i$$35];
          this.setCanvasStyle(attr$$1, v7911, v7912);
          i$$35++;
          v7913 = i$$35 < l$$13;
        }
      }
      return;
    }
    function v256(prop$$12, value$$36, type$$43) {
      setDataInternal.call(this, "canvas", prop$$12, value$$36, type$$43);
      return;
    }
    function v255(prop$$11, type$$42, force$$3) {
      var v14202 = this.Config;
      var v7914 = v14202.CanvasStyles;
      return getDataInternal.call(this, "canvas", prop$$11, type$$42, force$$3, v7914);
    }
    function v254() {
      var v19010 = Array.prototype;
      var v14203 = v19010.slice;
      var v7915 = v14203.call(arguments);
      removeDataInternal.call(this, "", v7915);
      return;
    }
    function v253(types, obj$$27) {
      types = $$$1.splat(types);
      var attr;
      for (attr in obj$$27) {
        var i$$34 = 0;
        var v7916 = obj$$27[attr];
        var val$$2 = $$$1.splat(v7916);
        var l$$12 = types.length;
        var v7919 = i$$34 < l$$12;
        for (;v7919;) {
          var v7917 = val$$2[i$$34];
          var v7918 = types[i$$34];
          this.setData(attr, v7917, v7918);
          i$$34++;
          v7919 = i$$34 < l$$12;
        }
      }
      return;
    }
    function v252(prop$$10, value$$35, type$$41) {
      setDataInternal.call(this, "", prop$$10, value$$35, type$$41);
      return;
    }
    function v251(prop$$9, type$$40, force$$2) {
      var v7920 = this.Config;
      return getDataInternal.call(this, "", prop$$9, type$$40, force$$2, v7920);
    }
    function removeDataInternal(prefix$$4, properties$$3) {
      function v250(prop$$8) {
        var pref = prefix$$4 + prop$$8;
        var v7921 = that$$9.data;
        delete v7921[pref];
        var v7922 = that$$9.endData;
        delete v7922[pref];
        var v7923 = that$$9.startData;
        delete v7923[pref];
        return;
      }
      var v14204;
      if (prefix$$4) {
        v14204 = prefix$$4 + "-";
      } else {
        v14204 = "";
      }
      var v7924 = v14204;
      prefix$$4 = "$" + v7924;
      var that$$9 = this;
      $$$1.each(properties$$3, v250);
      return;
    }
    function setDataInternal(prefix$$3, prop$$7, value$$34, type$$39) {
      type$$39 = type$$39 || "current";
      var v14205;
      if (prefix$$3) {
        v14205 = prefix$$3 + "-";
      } else {
        v14205 = "";
      }
      var v7925 = v14205;
      prefix$$3 = "$" + v7925;
      var data$$20;
      var v7928 = type$$39 == "current";
      if (v7928) {
        data$$20 = this.data;
      } else {
        var v7927 = type$$39 == "start";
        if (v7927) {
          data$$20 = this.startData;
        } else {
          var v7926 = type$$39 == "end";
          if (v7926) {
            data$$20 = this.endData;
          }
        }
      }
      var v7929 = prefix$$3 + prop$$7;
      data$$20[v7929] = value$$34;
      return;
    }
    function getDataInternal(prefix$$2, prop$$6, type$$38, force$$1, prefixConfig) {
      var data$$19;
      type$$38 = type$$38 || "current";
      var v14206;
      if (prefix$$2) {
        v14206 = prefix$$2 + "-";
      } else {
        v14206 = "";
      }
      var v7930 = v14206;
      prefix$$2 = "$" + v7930;
      var v7933 = type$$38 == "current";
      if (v7933) {
        data$$19 = this.data;
      } else {
        var v7932 = type$$38 == "start";
        if (v7932) {
          data$$19 = this.startData;
        } else {
          var v7931 = type$$38 == "end";
          if (v7931) {
            data$$19 = this.endData;
          }
        }
      }
      var dollar = prefix$$2 + prop$$6;
      if (force$$1) {
        return data$$19[dollar];
      }
      var v19011 = this.Config;
      var v14207 = v19011.overridable;
      var v7935 = !v14207;
      if (v7935) {
        var v7934 = prefixConfig[prop$$6];
        var v14208 = !v7934;
        if (v14208) {
          v7934 = 0;
        }
        return v7934;
      }
      var v7936;
      var v14210 = dollar in data$$19;
      if (v14210) {
        v7936 = data$$19[dollar];
      } else {
        var v14209;
        var v22387 = this.data;
        var v19014 = dollar in v22387;
        if (v19014) {
          var v19012 = this.data;
          v14209 = v19012[dollar];
        } else {
          var v19013 = prefixConfig[prop$$6];
          var v22388 = !v19013;
          if (v22388) {
            v19013 = 0;
          }
          v14209 = v19013;
        }
        v7936 = v14209;
      }
      return v7936;
    }
    Accessors = {getData:v251, setData:v252, setDataset:v253, removeData:v254, getCanvasStyle:v255, setCanvasStyle:v256, setCanvasStyles:v257, removeCanvasStyle:v258, getLabelData:v259, setLabelData:v260, setLabelDataset:v261, removeLabelData:v262};
    return;
  }
  function v249() {
    this.nodes = {};
    this.edges = {};
    return;
  }
  function v248(id$$13) {
    var v7937 = this.nodes;
    return id$$13 in v7937;
  }
  function v247(id1, id2$$1) {
    var v14211 = this.edges;
    var v7938 = v14211[id1];
    delete v7938[id2$$1];
    var v14212 = this.edges;
    var v7939 = v14212[id2$$1];
    delete v7939[id1];
    return;
  }
  function v246(id$$12) {
    var v7944 = this.hasNode(id$$12);
    if (v7944) {
      var v7940 = this.nodes;
      delete v7940[id$$12];
      var v7941 = this.edges;
      var adjs = v7941[id$$12];
      var to;
      for (to in adjs) {
        var v14213 = this.edges;
        var v7942 = v14213[to];
        delete v7942[id$$12];
      }
      var v7943 = this.edges;
      delete v7943[id$$12];
    }
    return;
  }
  function v245(obj$$26, obj2, data$$18) {
    var v19015 = obj$$26.id;
    var v14214 = this.hasNode(v19015);
    var v7945 = !v14214;
    if (v7945) {
      this.addNode(obj$$26);
    }
    var v19016 = obj2.id;
    var v14215 = this.hasNode(v19016);
    var v7946 = !v14215;
    if (v7946) {
      this.addNode(obj2);
    }
    var v7947 = this.nodes;
    var v7948 = obj$$26.id;
    obj$$26 = v7947[v7948];
    var v7949 = this.nodes;
    var v7950 = obj2.id;
    obj2 = v7949[v7950];
    var v14216 = obj$$26.adjacentTo(obj2);
    var v7957 = !v14216;
    if (v7957) {
      var v7951 = this.edges;
      var v7952 = obj$$26.id;
      var v19017 = this.edges;
      var v19018 = obj$$26.id;
      var v14217 = v19017[v19018];
      var v19019 = !v14217;
      if (v19019) {
        v14217 = {};
      }
      var adjsObj = v7951[v7952] = v14217;
      var v7953 = this.edges;
      var v7954 = obj2.id;
      var v19020 = this.edges;
      var v19021 = obj2.id;
      var v14218 = v19020[v19021];
      var v19022 = !v14218;
      if (v19022) {
        v14218 = {};
      }
      var adjsObj2 = v7953[v7954] = v14218;
      var v7955 = obj2.id;
      var v14219 = obj$$26.id;
      var v19023 = Graph.Adjacence;
      var v19024 = this.Edge;
      var v19025 = this.Label;
      var v31188 = new v19023(obj$$26, obj2, data$$18, v19024, v19025);
      adjsObj[v7955] = adjsObj2[v14219] = v31188;
      var v7956 = obj2.id;
      return adjsObj[v7956];
    }
    var v14220 = this.edges;
    var v14221 = obj$$26.id;
    var v7958 = v14220[v14221];
    var v7959 = obj2.id;
    return v7958[v7959];
  }
  function v244(obj$$25) {
    var v19026 = this.nodes;
    var v19027 = obj$$25.id;
    var v14222 = v19026[v19027];
    var v7964 = !v14222;
    if (v7964) {
      var v7960 = this.edges;
      var v7961 = obj$$25.id;
      var edges = v7960[v7961] = {};
      var v7962 = this.nodes;
      var v7963 = obj$$25.id;
      var v14223 = Graph.Node;
      var v22389 = obj$$25.id;
      var v22390 = obj$$25.name;
      var v27705 = obj$$25.data;
      var v28674 = !v27705;
      if (v28674) {
        v27705 = {};
      }
      var v26167 = v27705;
      var v22391 = $$$1.merge(v26167, {});
      var v19028 = {"id":v22389, "name":v22390, "data":v22391, "adjacencies":edges};
      var v22392 = this.opt;
      var v19029 = v22392.Node;
      var v14224 = $$$1.extend(v19028, v19029);
      var v19030 = this.opt;
      var v14225 = v19030.klass;
      var v14226 = this.Node;
      var v14227 = this.Edge;
      var v14228 = this.Label;
      var v31189 = new v14223(v14224, v14225, v14226, v14227, v14228);
      v7962[v7963] = v31189;
    }
    var v7965 = this.nodes;
    var v7966 = obj$$25.id;
    return v7965[v7966];
  }
  function v243(id$$11, id2) {
    var v14229 = this.edges;
    var v7968 = id$$11 in v14229;
    if (v7968) {
      var v14230 = this.edges;
      var v7967 = v14230[id$$11];
      return v7967[id2];
    }
    return false;
  }
  function v242(name$$36) {
    var id$$10;
    var v7971 = this.nodes;
    for (id$$10 in v7971) {
      var v7969 = this.nodes;
      var n$$7 = v7969[id$$10];
      var v14231 = n$$7.name;
      var v7970 = v14231 == name$$36;
      if (v7970) {
        return n$$7;
      }
    }
    return false;
  }
  function v241(id$$9) {
    return this.getNode(id$$9);
  }
  function v240(id$$8) {
    var v7973 = this.hasNode(id$$8);
    if (v7973) {
      var v7972 = this.nodes;
      return v7972[id$$8];
    }
    return false;
  }
  function v239(opt$$8, Node$$1, Edge, Label) {
    function v238(p$$14) {
      function v237() {
        function v236(n$$6) {
          var v7974 = n$$6[p$$14];
          v7974.apply(n$$6, args$$2);
          return;
        }
        var v14232 = Array.prototype;
        var v7975 = v14232.slice;
        var args$$2 = v7975.call(arguments);
        that$$8.eachNode(v236);
        return;
      }
      return v237;
    }
    var innerOptions = {"klass":Complex, "Node":{}};
    this.Node = Node$$1;
    this.Edge = Edge;
    this.Label = Label;
    var v7976 = opt$$8 || {};
    var v31190 = $$$1.merge(innerOptions, v7976);
    this.opt = v31190;
    this.nodes = {};
    this.edges = {};
    var that$$8 = this;
    this.nodeList = {};
    var p$$13;
    for (p$$13 in Accessors) {
      var v7977 = that$$8.nodeList;
      var v7978 = p$$13;
      var v31191 = v238(p$$13);
      v7977[v7978] = v31191;
    }
    return;
  }
  function v235() {
    var almostZero$$1 = 1E-4;
    var abs$$1 = Math.abs;
    var v19031 = this.x;
    var v14233 = abs$$1(v19031);
    var v7979 = v14233 < almostZero$$1;
    if (v7979) {
      var v19032 = this.y;
      var v14234 = abs$$1(v19032);
      v7979 = v14234 < almostZero$$1;
    }
    return v7979;
  }
  function v234(pos$$13) {
    var x$$63 = this.x;
    var y$$44 = this.y;
    var sq = pos$$13.squaredNorm();
    var v14235 = pos$$13.x;
    var v7980 = x$$63 * v14235;
    var v14236 = pos$$13.y;
    var v7981 = y$$44 * v14236;
    this.x = v7980 + v7981;
    var v14237 = pos$$13.x;
    var v7982 = y$$44 * v14237;
    var v14238 = pos$$13.y;
    var v7983 = x$$63 * v14238;
    this.y = v7982 - v7983;
    var v7984 = 1 / sq;
    return this.$scale(v7984);
  }
  function v233(factor$$2) {
    var v14239 = this.x;
    this.x = v14239 * factor$$2;
    var v14240 = this.y;
    this.y = v14240 * factor$$2;
    return this;
  }
  function v232() {
    var v7985 = this.y;
    this.y = -v7985;
    return this;
  }
  function v231(pos$$12) {
    var x$$62 = this.x;
    var y$$43 = this.y;
    var v14241 = pos$$12.x;
    var v7986 = x$$62 * v14241;
    var v14242 = pos$$12.y;
    var v7987 = y$$43 * v14242;
    this.x = v7986 - v7987;
    var v14243 = pos$$12.x;
    var v7988 = y$$43 * v14243;
    var v14244 = pos$$12.y;
    var v7989 = x$$62 * v14244;
    this.y = v7988 + v7989;
    return this;
  }
  function v230(pos$$11) {
    var v14245 = this.x;
    var v14246 = pos$$11.x;
    this.x = v14245 + v14246;
    var v14247 = this.y;
    var v14248 = pos$$11.y;
    this.y = v14247 + v14248;
    return this;
  }
  function v229(c$$2) {
    var v14249 = this.x;
    var v14250 = c$$2.x;
    var v7990 = v14249 == v14250;
    if (v7990) {
      var v14251 = this.y;
      var v14252 = c$$2.y;
      v7990 = v14251 == v14252;
    }
    return v7990;
  }
  function v228(factor$$1) {
    var v14253 = this.x;
    var v7991 = v14253 * factor$$1;
    var v14254 = this.y;
    var v7992 = v14254 * factor$$1;
    return new Complex(v7991, v7992);
  }
  function v227() {
    var v7993 = this.x;
    var v14255 = this.y;
    var v7994 = -v14255;
    return new Complex(v7993, v7994);
  }
  function v226(pos$$10) {
    var v19033 = this.x;
    var v19034 = pos$$10.x;
    var v14256 = v19033 * v19034;
    var v19035 = this.y;
    var v19036 = pos$$10.y;
    var v14257 = v19035 * v19036;
    var v7995 = v14256 - v14257;
    var v19037 = this.y;
    var v19038 = pos$$10.x;
    var v14258 = v19037 * v19038;
    var v19039 = this.x;
    var v19040 = pos$$10.y;
    var v14259 = v19039 * v19040;
    var v7996 = v14258 + v14259;
    return new Complex(v7995, v7996);
  }
  function v225(pos$$9) {
    var v14260 = this.x;
    var v14261 = pos$$9.x;
    var v7997 = v14260 + v14261;
    var v14262 = this.y;
    var v14263 = pos$$9.y;
    var v7998 = v14262 + v14263;
    return new Complex(v7997, v7998);
  }
  function v224() {
    var v14264 = this.x;
    var v14265 = this.x;
    var v7999 = v14264 * v14265;
    var v14266 = this.y;
    var v14267 = this.y;
    var v8000 = v14266 * v14267;
    return v7999 + v8000;
  }
  function v223() {
    var v8001 = this.squaredNorm();
    return Math.sqrt(v8001);
  }
  function v222(simple$$3) {
    var rho$$4 = this.norm();
    var v8002 = this.y;
    var v8003 = this.x;
    var atan = Math.atan2(v8002, v8003);
    var v8004 = atan < 0;
    if (v8004) {
      var v19041 = Math.PI;
      var v14268 = v19041 * 2;
      atan = atan + v14268;
    }
    if (simple$$3) {
      return{"theta":atan, "rho":rho$$4};
    }
    return new Polar(atan, rho$$4);
  }
  function v221() {
    var v8005 = this.x;
    var v8006 = this.y;
    return new Complex(v8005, v8006);
  }
  function v220(theta$$2, rho$$3) {
    var v8007 = Math.cos(theta$$2);
    this.x = v8007 * rho$$3;
    var v8008 = Math.sin(theta$$2);
    this.y = v8008 * rho$$3;
    return;
  }
  function v219(x$$61, y$$42) {
    this.x = x$$61;
    this.y = y$$42;
    return;
  }
  function v218(c$$1) {
    c$$1 = c$$1.getc(true);
    this.x = c$$1.x;
    this.y = c$$1.y;
    return;
  }
  function v217(simple$$2) {
    return this.toPolar(simple$$2);
  }
  function v216() {
    return this;
  }
  function v215(elem$$17, delta$$3) {
    function ch$$5(t$$1) {
      var v8009;
      var v14270 = t$$1 < 0;
      if (v14270) {
        var v14269 = t$$1 % pi2;
        v8009 = v14269 + pi2;
      } else {
        v8009 = t$$1 % pi2;
      }
      var a$$1 = v8009;
      return a$$1;
    }
    var pi = Math.PI;
    var pi2 = pi * 2;
    var tt = this.theta;
    var et = elem$$17.theta;
    var sum;
    var v8010 = tt - et;
    var diff = Math.abs(v8010);
    var v8019 = diff == pi;
    if (v8019) {
      var v8013 = tt > et;
      if (v8013) {
        var v22393 = tt - pi2;
        var v19042 = v22393 - et;
        var v14271 = v19042 * delta$$3;
        var v8011 = et + v14271;
        sum = ch$$5(v8011);
      } else {
        var v14272 = et - pi2;
        var v19043 = tt - et;
        var v14273 = v19043 * delta$$3;
        var v8012 = v14272 + v14273;
        sum = ch$$5(v8012);
      }
    } else {
      var v8018 = diff >= pi;
      if (v8018) {
        var v8016 = tt > et;
        if (v8016) {
          var v22394 = tt - pi2;
          var v19044 = v22394 - et;
          var v14274 = v19044 * delta$$3;
          var v8014 = et + v14274;
          sum = ch$$5(v8014);
        } else {
          var v14275 = et - pi2;
          var v22395 = et - pi2;
          var v19045 = tt - v22395;
          var v14276 = v19045 * delta$$3;
          var v8015 = v14275 + v14276;
          sum = ch$$5(v8015);
        }
      } else {
        var v19046 = tt - et;
        var v14277 = v19046 * delta$$3;
        var v8017 = et + v14277;
        sum = ch$$5(v8017);
      }
    }
    var v19047 = this.rho;
    var v19048 = elem$$17.rho;
    var v14278 = v19047 - v19048;
    var v8020 = v14278 * delta$$3;
    var v8021 = elem$$17.rho;
    var r = v8020 + v8021;
    return{"theta":sum, "rho":r};
  }
  function v214() {
    var almostZero = 1E-4;
    var abs = Math.abs;
    var v19049 = this.theta;
    var v14279 = abs(v19049);
    var v8022 = v14279 < almostZero;
    if (v8022) {
      var v19050 = this.rho;
      var v14280 = abs(v19050);
      v8022 = v14280 < almostZero;
    }
    return v8022;
  }
  function v213(number$$1) {
    var v14281 = this.rho;
    this.rho = v14281 * number$$1;
    return this;
  }
  function v212(polar$$2) {
    var v14282 = this.theta;
    var v14283 = polar$$2.theta;
    var v8023 = v14282 + v14283;
    var v14284 = Math.PI;
    var v8024 = v14284 * 2;
    this.theta = v8023 % v8024;
    var v14285 = this.rho;
    var v14286 = polar$$2.rho;
    this.rho = v14285 + v14286;
    return this;
  }
  function v211(polar$$1) {
    var v8025 = this.theta;
    var v8026 = polar$$1.theta;
    this.theta = v8025 + v8026;
    var v14287 = this.rho;
    var v14288 = polar$$1.rho;
    this.rho = v14287 + v14288;
    return this;
  }
  function v210(c) {
    var v14289 = this.theta;
    var v14290 = c.theta;
    var v8027 = v14289 == v14290;
    if (v8027) {
      var v14291 = this.rho;
      var v14292 = c.rho;
      v8027 = v14291 == v14292;
    }
    return v8027;
  }
  function v209(number) {
    var v8028 = this.theta;
    var v14293 = this.rho;
    var v8029 = v14293 * number;
    return new Polar(v8028, v8029);
  }
  function v208(polar) {
    var v14294 = this.theta;
    var v14295 = polar.theta;
    var v8030 = v14294 + v14295;
    var v14296 = this.rho;
    var v14297 = polar.rho;
    var v8031 = v14296 + v14297;
    return new Polar(v8030, v8031);
  }
  function v207(simple$$1) {
    var v14298 = this.theta;
    var v8032 = Math.cos(v14298);
    var v8033 = this.rho;
    var x$$59 = v8032 * v8033;
    var v14299 = this.theta;
    var v8034 = Math.sin(v14299);
    var v8035 = this.rho;
    var y$$40 = v8034 * v8035;
    if (simple$$1) {
      return{"x":x$$59, "y":y$$40};
    }
    return new Complex(x$$59, y$$40);
  }
  function v206() {
    var v8036 = this.theta;
    var v8037 = this.rho;
    return new Polar(v8036, v8037);
  }
  function v205(theta$$1, rho$$2) {
    this.theta = theta$$1;
    this.rho = rho$$2;
    return;
  }
  function v204(x$$58, y$$39) {
    var v14300 = x$$58 * x$$58;
    var v14301 = y$$39 * y$$39;
    var v8038 = v14300 + v14301;
    var v31192 = Math.sqrt(v8038);
    this.rho = v31192;
    var v31193 = Math.atan2(y$$39, x$$58);
    this.theta = v31193;
    var v14302 = this.theta;
    var v8039 = v14302 < 0;
    if (v8039) {
      var v14303 = this.theta;
      var v19051 = Math.PI;
      var v14304 = v19051 * 2;
      this.theta = v14303 + v14304;
    }
    return;
  }
  function v203(v) {
    v = v.getp();
    this.theta = v.theta;
    this.rho = v.rho;
    return;
  }
  function v202() {
    return this;
  }
  function v201(simple) {
    return this.toComplex(simple);
  }
  function v200() {
    function v199(base$$3) {
      var canvas$$7 = base$$3.canvas;
      var ctx$$2 = base$$3.getCtx();
      var conf = this.config;
      var styles$$1 = conf.CanvasStyles;
      var s$$6;
      for (s$$6 in styles$$1) {
        ctx$$2[s$$6] = styles$$1[s$$6];
      }
      var n$$5 = conf.numberOfCircles;
      var rho = conf.levelDistance;
      var i$$33 = 1;
      var v8042 = i$$33 <= n$$5;
      for (;v8042;) {
        ctx$$2.beginPath();
        var v8040 = rho * i$$33;
        var v14305 = Math.PI;
        var v8041 = 2 * v14305;
        ctx$$2.arc(0, 0, v8040, 0, v8041, false);
        ctx$$2.stroke();
        ctx$$2.closePath();
        i$$33++;
        v8042 = i$$33 <= n$$5;
      }
      return;
    }
    function v198(width$$15, height$$14, base$$2) {
      this.plot(base$$2);
      return;
    }
    function v197(viz$$5, options$$4) {
      this.viz = viz$$5;
      var v8043 = {idSuffix:"-bkcanvas", levelDistance:100, numberOfCircles:6, CanvasStyles:{}, offset:0};
      var v31194 = $$$1.merge(v8043, options$$4);
      this.config = v31194;
      return;
    }
    function v196() {
      this.clear();
      var v8044 = this.viz;
      v8044.plot(this);
      return;
    }
    function v195() {
      var size$$6 = this.getSize();
      var ox$$3 = this.translateOffsetX;
      var oy$$4 = this.translateOffsetY;
      var sx$$5 = this.scaleOffsetX;
      var sy$$5 = this.scaleOffsetY;
      var v14306 = 0 - ox$$3;
      var v8045 = v14306 * 1;
      var x$$57 = v8045 / sx$$5;
      var v14307 = 0 - oy$$4;
      var v8046 = v14307 * 1;
      var y$$38 = v8046 / sy$$5;
      var v8047 = this.getCtx();
      var v22396 = size$$6.width;
      var v19052 = v22396 * 1;
      var v14308 = v19052 / sx$$5;
      var v14309 = Math.abs(x$$57);
      var v8048 = v14308 + v14309;
      var v22397 = size$$6.height;
      var v19053 = v22397 * 1;
      var v14310 = v19053 / sy$$5;
      var v14311 = Math.abs(y$$38);
      var v8049 = v14310 + v14311;
      v8047.clearRect(x$$57, y$$38, v8048, v8049);
      return;
    }
    function v194(x$$56, y$$37, disablePlot$$4) {
      var v14312 = this.scaleOffsetX;
      this.scaleOffsetX = v14312 * x$$56;
      var v14313 = this.scaleOffsetY;
      this.scaleOffsetY = v14313 * y$$37;
      var v8050 = this.getCtx();
      v8050.scale(x$$56, y$$37);
      var v8051 = !disablePlot$$4;
      if (v8051) {
        this.plot();
      }
      return;
    }
    function v193(x$$55, y$$36, disablePlot$$3) {
      var sx$$4 = this.scaleOffsetX;
      var sy$$4 = this.scaleOffsetY;
      var v14314 = this.translateOffsetX;
      var v14315 = x$$55 * sx$$4;
      this.translateOffsetX = v14314 + v14315;
      var v14316 = this.translateOffsetY;
      var v14317 = y$$36 * sy$$4;
      this.translateOffsetY = v14316 + v14317;
      var v8052 = this.getCtx();
      v8052.translate(x$$55, y$$36);
      var v8053 = !disablePlot$$3;
      if (v8053) {
        this.plot();
      }
      return;
    }
    function v192(width$$14, height$$13) {
      var size$$5 = this.getSize();
      var canvas$$6 = this.canvas;
      var styles = canvas$$6.style;
      this.size = false;
      canvas$$6.width = width$$14;
      canvas$$6.height = height$$13;
      styles.width = width$$14 + "px";
      styles.height = height$$13 + "px";
      var v8054 = !supportsCanvas;
      if (v8054) {
        this.translateToCenter(size$$5);
      } else {
        this.translateToCenter();
      }
      this.translateOffsetX = this.translateOffsetY = 0;
      this.scaleOffsetX = this.scaleOffsetY = 1;
      this.clear();
      var v8055 = this.viz;
      v8055.resize(width$$14, height$$13, this);
      return;
    }
    function v191(ps) {
      var size$$4 = this.getSize();
      var v8056;
      if (ps) {
        var v19054 = size$$4.width;
        var v19055 = ps.width;
        var v14318 = v19054 - v19055;
        var v19056 = this.translateOffsetX;
        var v14319 = v19056 * 2;
        v8056 = v14318 - v14319;
      } else {
        v8056 = size$$4.width;
      }
      var width$$13 = v8056;
      var v8057;
      if (ps) {
        var v19057 = size$$4.height;
        var v19058 = ps.height;
        var v14320 = v19057 - v19058;
        var v19059 = this.translateOffsetY;
        var v14321 = v19059 * 2;
        v8057 = v14320 - v14321;
      } else {
        v8057 = size$$4.height;
      }
      height = v8057;
      var ctx$$1 = this.getCtx();
      if (ps) {
        var v19060 = this.scaleOffsetX;
        var v14322 = 1 / v19060;
        var v19061 = this.scaleOffsetY;
        var v14323 = 1 / v19061;
        ctx$$1.scale(v14322, v14323);
      }
      return;
    }
    function v190() {
      var v8058 = this.size;
      if (v8058) {
        return this.size;
      }
      var canvas$$5 = this.canvas;
      var v8059 = canvas$$5.width;
      var v8060 = canvas$$5.height;
      return this.size = {width:v8059, height:v8060};
    }
    function v189() {
      var v14324 = this.ctx;
      var v8062 = !v14324;
      if (v8062) {
        var v8061 = this.canvas;
        var v31195 = v8061.getContext("2d");
        return this.ctx = v31195;
      }
      return this.ctx;
    }
    function v188() {
      var opt$$7 = this.opt;
      var width$$12 = opt$$7.width;
      var height$$12 = opt$$7.height;
      var v19062 = opt$$7.injectInto;
      var v19063 = opt$$7.idSuffix;
      var v14325 = v19062 + v19063;
      var v19064 = width$$12 + "px";
      var v19065 = height$$12 + "px";
      var v14326 = {"position":"absolute", "top":0, "left":0, "width":v19064, "height":v19065};
      var v8063 = {"id":v14325, "width":width$$12, "height":height$$12, "style":v14326};
      var v31196 = $E$$1("canvas", v8063);
      this.canvas = v31196;
      return;
    }
    function v187(viz$$4) {
      this.viz = viz$$4;
      this.opt = viz$$4.config;
      this.size = false;
      this.createCanvas();
      this.translateToCenter();
      return;
    }
    function v186(type$$37, idLabel$$1, dim) {
      var NS = "http://www.w3.org/2000/svg";
      var v14327 = type$$37 == "HTML";
      var v19066 = !v14327;
      if (v19066) {
        v14327 = type$$37 == "Native";
      }
      var v8070 = v14327;
      if (v8070) {
        var v22398 = dim.width;
        var v19067 = v22398 + "px";
        var v14328 = {"overflow":"visible", "position":"absolute", "top":0, "left":0, "width":v19067, "height":0};
        var v8064 = {"id":idLabel$$1, "style":v14328};
        return $E$$1("div", v8064);
      } else {
        var v8069 = type$$37 == "SVG";
        if (v8069) {
          var svgContainer = document.createElementNS(NS, "svg:svg");
          var v8065 = dim.width;
          svgContainer.setAttribute("width", v8065);
          var v8066 = dim.height;
          svgContainer.setAttribute("height", v8066);
          var style$$4 = svgContainer.style;
          style$$4.position = "absolute";
          style$$4.left = style$$4.top = "0px";
          var labelContainer$$1 = document.createElementNS(NS, "svg:g");
          var v8067 = dim.width;
          labelContainer$$1.setAttribute("width", v8067);
          var v8068 = dim.height;
          labelContainer$$1.setAttribute("height", v8068);
          labelContainer$$1.setAttribute("x", 0);
          labelContainer$$1.setAttribute("y", 0);
          labelContainer$$1.setAttribute("id", idLabel$$1);
          svgContainer.appendChild(labelContainer$$1);
          return svgContainer;
        }
      }
      return;
    }
    function v185(type$$36, action$$2) {
      var v14329 = this.canvases;
      var v8071 = v14329[0];
      var ctx = v8071.getCtx();
      ctx.beginPath();
      action$$2(ctx);
      ctx[type$$36]();
      ctx.closePath();
      return;
    }
    function v184(i$$32) {
      var v14330 = this.canvases;
      var v14331 = i$$32 || 0;
      var v8072 = v14330[v14331];
      v8072.clear();
      return;
    }
    function v183(force) {
      var v14332 = force;
      var v19069 = !v14332;
      if (v19069) {
        var v19068 = this.pos;
        v14332 = !v19068;
      }
      var v8074 = v14332;
      if (v8074) {
        var v8073 = this.element;
        var v31197 = $$$1.getPos(v8073);
        return this.pos = v31197;
      }
      return this.pos;
    }
    function v182(x$$54, y$$35, disablePlot$$2) {
      var cur = this.getZoom();
      var v8075 = cur.x;
      var px$$1 = x$$54 / v8075;
      var v8076 = cur.y;
      var py$$1 = y$$35 / v8076;
      this.scale(px$$1, py$$1, disablePlot$$2);
      return;
    }
    function v181() {
      var v8077 = this.scaleOffsetX;
      var v8078 = this.scaleOffsetY;
      return new Complex(v8077, v8078);
    }
    function v180(x$$53, y$$34, disablePlot$$1) {
      var v8079 = this.scaleOffsetX;
      var px = v8079 * x$$53;
      var v8080 = this.scaleOffsetY;
      var py = v8080 * y$$34;
      var v14333 = this.translateOffsetX;
      var v14334 = x$$53 - 1;
      var v8081 = v14333 * v14334;
      var dx$$4 = v8081 / px;
      var v14335 = this.translateOffsetY;
      var v14336 = y$$34 - 1;
      var v8082 = v14335 * v14336;
      var dy$$4 = v8082 / py;
      this.scaleOffsetX = px;
      this.scaleOffsetY = py;
      var i$$31 = 0;
      var v8083 = this.canvases;
      var l$$11 = v8083.length;
      var v8085 = i$$31 < l$$11;
      for (;v8085;) {
        var v14337 = this.canvases;
        var v8084 = v14337[i$$31];
        v8084.scale(x$$53, y$$34, true);
        i$$31++;
        v8085 = i$$31 < l$$11;
      }
      this.translate(dx$$4, dy$$4, false);
      return;
    }
    function v179(x$$52, y$$33, disablePlot) {
      var v14338 = this.translateOffsetX;
      var v19070 = this.scaleOffsetX;
      var v14339 = x$$52 * v19070;
      this.translateOffsetX = v14338 + v14339;
      var v14340 = this.translateOffsetY;
      var v19071 = this.scaleOffsetY;
      var v14341 = y$$33 * v19071;
      this.translateOffsetY = v14340 + v14341;
      var i$$30 = 0;
      var v8086 = this.canvases;
      var l$$10 = v8086.length;
      var v8088 = i$$30 < l$$10;
      for (;v8088;) {
        var v14342 = this.canvases;
        var v8087 = v14342[i$$30];
        v8087.translate(x$$52, y$$33, disablePlot);
        i$$30++;
        v8088 = i$$30 < l$$10;
      }
      return;
    }
    function v178(width$$11, height$$11) {
      this.getPos(true);
      this.translateOffsetX = this.translateOffsetY = 0;
      this.scaleOffsetX = this.scaleOffsetY = 1;
      var i$$29 = 0;
      var v8089 = this.canvases;
      var l$$9 = v8089.length;
      var v8091 = i$$29 < l$$9;
      for (;v8091;) {
        var v14343 = this.canvases;
        var v8090 = v14343[i$$29];
        v8090.resize(width$$11, height$$11);
        i$$29++;
        v8091 = i$$29 < l$$9;
      }
      var v8092 = this.element;
      var style$$3 = v8092.style;
      style$$3.width = width$$11 + "px";
      style$$3.height = height$$11 + "px";
      var v8094 = this.labelContainer;
      if (v8094) {
        var v14344 = this.labelContainer;
        var v8093 = v14344.style;
        v8093.width = width$$11 + "px";
      }
      return;
    }
    function v177(i$$28) {
      var v14345 = this.canvases;
      var v14346 = i$$28 || 0;
      var v8095 = v14345[v14346];
      return v8095.getSize();
    }
    function v176() {
      return this.element;
    }
    function v175() {
      return this.opt;
    }
    function v174(i$$27) {
      var v14347 = this.canvases;
      var v14348 = i$$27 || 0;
      var v8096 = v14347[v14348];
      return v8096.getCtx();
    }
    function v173(viz$$3, opt$$6) {
      function v172() {
        function v171() {
          that$$7.getPos(true);
          return;
        }
        clearTimeout(timer);
        timer = setTimeout(v171, 500);
        return;
      }
      function v170() {
        viz$$3.refresh();
        return;
      }
      function v169(base$$1) {
        var v8097 = viz$$3.fx;
        v8097.plot();
        return;
      }
      this.viz = viz$$3;
      this.opt = this.config = opt$$6;
      var v8098;
      var v22399 = opt$$6.injectInto;
      var v19072 = $$$1.type(v22399);
      var v14350 = v19072 == "string";
      if (v14350) {
        v8098 = opt$$6.injectInto;
      } else {
        var v14349 = opt$$6.injectInto;
        v8098 = v14349.id;
      }
      var id$$7 = v8098;
      var type$$35 = opt$$6.type;
      var idLabel = id$$7 + "-label";
      var wrapper = $$$1(id$$7);
      var v8099 = opt$$6.width;
      var v14351 = !v8099;
      if (v14351) {
        v8099 = wrapper.offsetWidth;
      }
      var width$$10 = v8099;
      var v8100 = opt$$6.height;
      var v14352 = !v8100;
      if (v14352) {
        v8100 = wrapper.offsetHeight;
      }
      var height$$10 = v8100;
      this.id = id$$7;
      var canvasOptions = {injectInto:id$$7, width:width$$10, height:height$$10};
      var v14353 = id$$7 + "-canvaswidget";
      var v19073 = width$$10 + "px";
      var v19074 = height$$10 + "px";
      var v14354 = {"position":"relative", "width":v19073, "height":v19074};
      var v8101 = {"id":v14353, "style":v14354};
      var v31198 = $E$$1("div", v8101);
      this.element = v31198;
      var v14355 = opt$$6.Label;
      var v8102 = v14355.type;
      var v31199 = this.createLabelContainer(v8102, idLabel, canvasOptions);
      this.labelContainer = v31199;
      var v8103 = this.canvases;
      var v19075 = Canvas.Base;
      var v14356 = v19075[type$$35];
      var v22400 = {idSuffix:"-canvas"};
      var v19076 = $$$1.extend(v22400, canvasOptions);
      var v14357 = {config:v19076, plot:v169, resize:v170};
      var v8104 = new v14356(v14357);
      v8103.push(v8104);
      var back = opt$$6.background;
      if (back) {
        var v14358 = Canvas.Background;
        var v14359 = back.type;
        var v8105 = v14358[v14359];
        var v8106 = $$$1.extend(back, canvasOptions);
        var backCanvas = new v8105(viz$$3, v8106);
        var v8107 = this.canvases;
        var v19077 = Canvas.Base;
        var v14360 = v19077[type$$35];
        var v8108 = new v14360(backCanvas);
        v8107.push(v8108);
      }
      var v8109 = this.canvases;
      var len$$1 = v8109.length;
      var v8114 = len$$1;
      len$$1 = len$$1 - 1;
      for (;v8114;) {
        var v8110 = this.element;
        var v19078 = this.canvases;
        var v14361 = v19078[len$$1];
        var v8111 = v14361.canvas;
        v8110.appendChild(v8111);
        var v8113 = len$$1 > 0;
        if (v8113) {
          var v14362 = this.canvases;
          var v8112 = v14362[len$$1];
          v8112.plot();
        }
        v8114 = len$$1;
        len$$1 = len$$1 - 1;
      }
      var v8115 = this.element;
      var v8116 = this.labelContainer;
      v8115.appendChild(v8116);
      var v8117 = this.element;
      wrapper.appendChild(v8117);
      var timer = null;
      var that$$7 = this;
      $$$1.addEvent(window, "scroll", v172);
      return;
    }
    function $E$$1(tag$$1, props$$2) {
      var elem$$16 = document.createElement(tag$$1);
      var p$$12;
      for (p$$12 in props$$2) {
        var v19079 = props$$2[p$$12];
        var v14363 = typeof v19079;
        var v8120 = v14363 == "object";
        if (v8120) {
          var v8118 = elem$$16[p$$12];
          var v8119 = props$$2[p$$12];
          $$$1.extend(v8118, v8119);
        } else {
          elem$$16[p$$12] = props$$2[p$$12];
        }
      }
      var v19080 = tag$$1 == "canvas";
      if (v19080) {
        v19080 = !supportsCanvas;
      }
      var v14364 = v19080;
      if (v14364) {
        v14364 = G_vmlCanvasManager;
      }
      var v8122 = v14364;
      if (v8122) {
        var v14365 = document.body;
        var v8121 = v14365.appendChild(elem$$16);
        elem$$16 = G_vmlCanvasManager.initElement(v8121);
      }
      return elem$$16;
    }
    var canvasType = typeof HTMLCanvasElement;
    var v8123 = canvasType == "object";
    var v14366 = !v8123;
    if (v14366) {
      v8123 = canvasType == "function";
    }
    var supportsCanvas = v8123;
    var v8124 = $jit;
    var v14367 = {canvases:[], pos:false, element:false, labelContainer:false, translateOffsetX:0, translateOffsetY:0, scaleOffsetX:1, scaleOffsetY:1, initialize:v173, getCtx:v174, getConfig:v175, getElement:v176, getSize:v177, resize:v178, translate:v179, scale:v180, getZoom:v181, setZoom:v182, getPos:v183, clear:v184, path:v185, createLabelContainer:v186};
    v8124.Canvas = Canvas = new Class(v14367);
    Canvas.Base = {};
    var v8125 = Canvas.Base;
    var v14368 = {translateOffsetX:0, translateOffsetY:0, scaleOffsetX:1, scaleOffsetY:1, initialize:v187, createCanvas:v188, getCtx:v189, getSize:v190, translateToCenter:v191, resize:v192, translate:v193, scale:v194, clear:v195, plot:v196};
    var v31200 = new Class(v14368);
    v8125["2D"] = v31200;
    Canvas.Background = {};
    var v8126 = Canvas.Background;
    var v14369 = {initialize:v197, resize:v198, plot:v199};
    var v31201 = new Class(v14369);
    v8126.Circles = v31201;
    return;
  }
  function v168(e$$45, win$$33, eventInfo$$4, isRightClick$$3) {
    var v19081 = this.config;
    var v14370 = v19081.panning;
    var v8127 = !v14370;
    if (v8127) {
      return;
    }
    this.pressed = false;
    return;
  }
  function v167(e$$44, win$$32, eventInfo$$3) {
    var v19082 = this.config;
    var v14371 = v19082.panning;
    var v8128 = !v14371;
    if (v8128) {
      return;
    }
    var v14372 = this.pressed;
    var v8129 = !v14372;
    if (v8129) {
      return;
    }
    var v22401 = this.config;
    var v19083 = v22401.panning;
    var v14373 = v19083 == "avoid nodes";
    if (v14373) {
      var v19084;
      var v22402 = this.dom;
      if (v22402) {
        v19084 = this.isLabel(e$$44, win$$32);
      } else {
        v19084 = eventInfo$$3.getNode();
      }
      v14373 = v19084;
    }
    var v8130 = v14373;
    if (v8130) {
      return;
    }
    var thispos = this.pos;
    var currentPos = eventInfo$$3.getPos();
    var canvas$$4 = this.canvas;
    var ox$$2 = canvas$$4.translateOffsetX;
    var oy$$3 = canvas$$4.translateOffsetY;
    var sx$$3 = canvas$$4.scaleOffsetX;
    var sy$$3 = canvas$$4.scaleOffsetY;
    var v14374 = currentPos.x;
    currentPos.x = v14374 * sx$$3;
    var v14375 = currentPos.y;
    currentPos.y = v14375 * sy$$3;
    var v14376 = currentPos.x;
    currentPos.x = v14376 + ox$$2;
    var v14377 = currentPos.y;
    currentPos.y = v14377 + oy$$3;
    var v8131 = currentPos.x;
    var v8132 = thispos.x;
    var x$$51 = v8131 - v8132;
    var v8133 = currentPos.y;
    var v8134 = thispos.y;
    var y$$32 = v8133 - v8134;
    this.pos = currentPos;
    var v8135 = this.canvas;
    var v14378 = x$$51 * 1;
    var v8136 = v14378 / sx$$3;
    var v14379 = y$$32 * 1;
    var v8137 = v14379 / sy$$3;
    v8135.translate(v8136, v8137);
    return;
  }
  function v166(e$$43, win$$31, eventInfo$$2) {
    var v19085 = this.config;
    var v14380 = v19085.panning;
    var v8138 = !v14380;
    if (v8138) {
      return;
    }
    var v22403 = this.config;
    var v19086 = v22403.panning;
    var v14381 = v19086 == "avoid nodes";
    if (v14381) {
      var v19087;
      var v22404 = this.dom;
      if (v22404) {
        v19087 = this.isLabel(e$$43, win$$31);
      } else {
        v19087 = eventInfo$$2.getNode();
      }
      v14381 = v19087;
    }
    var v8139 = v14381;
    if (v8139) {
      return;
    }
    this.pressed = true;
    var v31202 = eventInfo$$2.getPos();
    this.pos = v31202;
    var canvas$$3 = this.canvas;
    var ox$$1 = canvas$$3.translateOffsetX;
    var oy$$2 = canvas$$3.translateOffsetY;
    var sx$$2 = canvas$$3.scaleOffsetX;
    var sy$$2 = canvas$$3.scaleOffsetY;
    var v8140 = this.pos;
    var v19088 = v8140.x;
    v8140.x = v19088 * sx$$2;
    var v8141 = this.pos;
    var v19089 = v8141.x;
    v8141.x = v19089 + ox$$1;
    var v8142 = this.pos;
    var v19090 = v8142.y;
    v8142.y = v19090 * sy$$2;
    var v8143 = this.pos;
    var v19091 = v8143.y;
    v8143.y = v19091 + oy$$2;
    return;
  }
  function v165(e$$42, win$$30, scroll$$2) {
    var v19092 = this.config;
    var v14382 = v19092.zooming;
    var v8144 = !v14382;
    if (v8144) {
      return;
    }
    var v8145 = $$$1.event;
    var v14383 = $$$1.event;
    var v8146 = v14383.get(e$$42, win$$30);
    v8145.stop(v8146);
    var v14384 = this.config;
    var v8147 = v14384.zooming;
    var val$$1 = v8147 / 1E3;
    var v8148 = scroll$$2 * val$$1;
    var ans$$4 = 1 + v8148;
    var v8149 = this.canvas;
    v8149.scale(ans$$4, ans$$4);
    return;
  }
  function v164() {
    this.pos = false;
    this.pressed = false;
    return;
  }
  function v163(e$$41, win$$29, event$$15) {
    function v162(n$$4) {
      var v14385 = n$$4.hovered;
      if (v14385) {
        var v19093 = n$$4.selected;
        v14385 = !v19093;
      }
      var v8151 = v14385;
      if (v8151) {
        var s$$5;
        for (s$$5 in nStyles$$3) {
          var v14386 = n$$4.styles;
          var v14387 = "$" + s$$5;
          var v8150 = v14386[v14387];
          n$$4.setData(s$$5, v8150, "end");
        }
        delete n$$4.hovered;
      }
      return;
    }
    var v8152 = this.down;
    if (v8152) {
      this.move = true;
    }
    var v14388 = this.dom;
    if (v14388) {
      v14388 = this.isLabel(e$$41, win$$29);
    }
    var v8153 = v14388;
    if (v8153) {
      return;
    }
    var nStyles$$3 = this.nodeStylesOnHover;
    var v8154 = !nStyles$$3;
    if (v8154) {
      return;
    }
    var v14389 = this.dom;
    var v8168 = !v14389;
    if (v8168) {
      var v8158 = this.hoveredNode;
      if (v8158) {
        var v8155 = this.types;
        var v14390 = this.hoveredNode;
        var v8156 = v14390.getData("type");
        var geom$$3 = v8155[v8156];
        var v14391 = geom$$3;
        if (v14391) {
          v14391 = geom$$3.contains;
        }
        var v8157 = v14391;
        if (v8157) {
          var v14392 = geom$$3.contains;
          var v14393 = this.fx;
          var v14394 = this.hoveredNode;
          var v14395 = event$$15.getPos();
          v8157 = v14392.call(v14393, v14394, v14395);
        }
        var contains$$3 = v8157;
        if (contains$$3) {
          return;
        }
      }
      var node$$22 = event$$15.getNode();
      var v19094 = this.hoveredNode;
      var v14396 = !v19094;
      if (v14396) {
        v14396 = !node$$22;
      }
      var v8159 = v14396;
      if (v8159) {
        return;
      }
      var v8160 = node$$22.hovered;
      if (v8160) {
        return;
      }
      var v14397 = node$$22;
      if (v14397) {
        var v19095 = node$$22.selected;
        v14397 = !v19095;
      }
      var v8167 = v14397;
      if (v8167) {
        var v14398 = this.fx;
        var v8161 = v14398.nodeFxAnimation;
        v8161.stopTimer();
        var v14399 = this.viz;
        var v8162 = v14399.graph;
        v8162.eachNode(v162);
        node$$22.hovered = true;
        this.hoveredNode = node$$22;
        this.toggleStylesOnHover(node$$22, true);
      } else {
        var v14400 = this.hoveredNode;
        if (v14400) {
          var v22405 = this.hoveredNode;
          var v19096 = v22405.selected;
          v14400 = !v19096;
        }
        var v8166 = v14400;
        if (v8166) {
          var v14401 = this.fx;
          var v8163 = v14401.nodeFxAnimation;
          v8163.stopTimer();
          var v8164 = this.hoveredNode;
          this.toggleStylesOnHover(v8164, false);
          var v8165 = this.hoveredNode;
          delete v8165.hovered;
          this.hoveredNode = false;
        }
      }
    }
    return;
  }
  function v161(node$$21) {
    function v160(n$$3) {
      var v8170 = n$$3.selected;
      if (v8170) {
        var s$$4;
        for (s$$4 in nStyles$$2) {
          var v14402 = n$$3.styles;
          var v14403 = "$" + s$$4;
          var v8169 = v14402[v14403];
          n$$3.setData(s$$4, v8169, "end");
        }
        delete n$$3.selected;
      }
      return;
    }
    var v8171 = !node$$21;
    if (v8171) {
      return;
    }
    var nStyles$$2 = this.nodeStylesOnClick;
    var v8172 = !nStyles$$2;
    if (v8172) {
      return;
    }
    var v8174 = node$$21.selected;
    if (v8174) {
      this.toggleStylesOnClick(node$$21, false);
      delete node$$21.selected;
    } else {
      var v14404 = this.viz;
      var v8173 = v14404.graph;
      v8173.eachNode(v160);
      this.toggleStylesOnClick(node$$21, true);
      node$$21.selected = true;
      delete node$$21.hovered;
      this.hoveredNode = false;
    }
    return;
  }
  function v159(type$$34, node$$20, set$$2) {
    var viz$$2 = this.viz;
    var nStyles$$1 = this.nStyles;
    if (set$$2) {
      var that$$6 = this;
      var v14405 = node$$20.styles;
      var v8176 = !v14405;
      if (v8176) {
        var v8175 = node$$20.data;
        var v31203 = $$$1.merge(v8175, {});
        node$$20.styles = v31203;
      }
      var s$$3;
      var v14406 = "nodeStylesOn" + type$$34;
      var v8179 = this[v14406];
      for (s$$3 in v8179) {
        var $s = "$" + s$$3;
        var v19097 = node$$20.styles;
        var v14407 = $s in v19097;
        var v8178 = !v14407;
        if (v8178) {
          var v8177 = node$$20.styles;
          var v31204 = node$$20.getData(s$$3);
          v8177[$s] = v31204;
        }
      }
      var v8180 = viz$$2.fx;
      var v22406 = node$$20.id;
      var v26168 = "nodeStylesOn" + type$$34;
      var v22407 = that$$6[v26168];
      var v19098 = {"id":v22406, "properties":v22407};
      var v22408 = Trans.Quart;
      var v19099 = v22408.easeOut;
      var v14408 = {"elements":v19098, transition:v19099, duration:300, fps:40};
      var v14409 = this.config;
      var v8181 = $$$1.extend(v14408, v14409);
      v8180.nodeFx(v8181);
    } else {
      var restoredStyles$$1 = this.getRestoredStyles(node$$20, type$$34);
      var v8182 = viz$$2.fx;
      var v22409 = node$$20.id;
      var v19100 = {"id":v22409, "properties":restoredStyles$$1};
      var v22410 = Trans.Quart;
      var v19101 = v22410.easeOut;
      var v14410 = {"elements":v19100, transition:v19101, duration:300, fps:40};
      var v14411 = this.config;
      var v8183 = $$$1.extend(v14410, v14411);
      v8182.nodeFx(v8183);
    }
    return;
  }
  function v158(node$$19, set$$1) {
    var v8184 = this.nodeStylesOnClick;
    if (v8184) {
      this.toggleStylesOn("Click", node$$19, set$$1);
    }
    return;
  }
  function v157(node$$18, set) {
    var v8185 = this.nodeStylesOnHover;
    if (v8185) {
      this.toggleStylesOn("Hover", node$$18, set);
    }
    return;
  }
  function v156(node$$17, type$$33) {
    var restoredStyles = {};
    var v8186 = "nodeStylesOn" + type$$33;
    var nStyles = this[v8186];
    var prop$$5;
    for (prop$$5 in nStyles) {
      var v8187 = node$$17.styles;
      var v8188 = "$" + prop$$5;
      restoredStyles[prop$$5] = v8187[v8188];
    }
    return restoredStyles;
  }
  function v155(e$$40, win$$28, event$$14, isRightClick$$2) {
    if (isRightClick$$2) {
      return;
    }
    var v14412 = this.move;
    var v8190 = !v14412;
    if (v8190) {
      var v8189 = event$$14.getNode();
      this.onClick(v8189);
    }
    this.down = this.move = false;
    return;
  }
  function v154(e$$39, win$$27, event$$13, isRightClick$$1) {
    if (isRightClick$$1) {
      return;
    }
    var label$$9;
    var v14413 = this.dom;
    if (v14413) {
      v14413 = label$$9 = this.isLabel(e$$39, win$$27);
    }
    var v8194 = v14413;
    if (v8194) {
      var v14414 = this.viz;
      var v8191 = v14414.graph;
      var v8192 = label$$9.id;
      var v31205 = v8191.getNode(v8192);
      this.down = v31205;
    } else {
      var v14415 = this.dom;
      var v8193 = !v14415;
      if (v8193) {
        var v31206 = event$$13.getNode();
        this.down = v31206;
      }
    }
    this.move = false;
    return;
  }
  function v153(e$$38, win$$26) {
    var label$$8;
    var v14416 = this.dom;
    if (v14416) {
      v14416 = label$$8 = this.isLabel(e$$38, win$$26, true);
    }
    var v8199 = v14416;
    if (v8199) {
      var v14417 = this.viz;
      var v8195 = v14417.graph;
      var v8196 = label$$8.id;
      var node$$16 = v8195.getNode(v8196);
      var v8197 = node$$16.selected;
      if (v8197) {
        return;
      }
      this.hoveredNode = node$$16;
      var v8198 = this.hoveredNode;
      this.toggleStylesOnHover(v8198, true);
    }
    return;
  }
  function v152(e$$37, win$$25) {
    this.down = this.move = false;
    var v14418 = this.hoveredNode;
    var v8200 = !v14418;
    if (v8200) {
      return;
    }
    var v14419 = this.dom;
    if (v14419) {
      v14419 = this.isLabel(e$$37, win$$25, true);
    }
    var v8202 = v14419;
    if (v8202) {
      var v8201 = this.hoveredNode;
      this.toggleStylesOnHover(v8201, false);
    }
    var rt$$2 = e$$37.relatedTarget;
    var v8203 = this.canvas;
    var canvasWidget$$2 = v8203.element;
    var v14420 = rt$$2;
    if (v14420) {
      v14420 = rt$$2.parentNode;
    }
    var v8205 = v14420;
    for (;v8205;) {
      var v14421 = rt$$2.parentNode;
      var v8204 = canvasWidget$$2 == v14421;
      if (v8204) {
        return;
      }
      rt$$2 = rt$$2.parentNode;
      var v14422 = rt$$2;
      if (v14422) {
        v14422 = rt$$2.parentNode;
      }
      v8205 = v14422;
    }
    var v8206 = this.hoveredNode;
    this.toggleStylesOnHover(v8206, false);
    this.hoveredNode = false;
    return;
  }
  function v151() {
    var v8207 = this.viz;
    this.fx = v8207.fx;
    var v14423 = this.viz;
    var v8208 = v14423.fx;
    this.types = v8208.nodeTypes;
    this.nStyles = this.config;
    var v8209 = this.nStyles;
    this.nodeStylesOnHover = v8209.stylesHover;
    var v8210 = this.nStyles;
    this.nodeStylesOnClick = v8210.stylesClick;
    this.hoveredNode = false;
    var v8211 = this.fx;
    var v31207 = new Animation;
    v8211.nodeFxAnimation = v31207;
    this.down = false;
    this.move = false;
    return;
  }
  function v150(triggerCallback) {
    var v14424 = this.tip;
    var v8212 = v14424.style;
    v8212.display = "none";
    if (triggerCallback) {
      var v14425 = this.config;
      v14425.onHide();
    }
    return;
  }
  function v149(pos$$8) {
    var tip$$1 = this.tip;
    var style$$2 = tip$$1.style;
    var cont = this.config;
    style$$2.display = "";
    var v22411 = document.compatMode;
    var v19102 = v22411 === "CSS1Compat";
    if (v19102) {
      v19102 = document.documentElement;
    }
    var v14426 = v19102;
    var v19103 = !v14426;
    if (v19103) {
      v14426 = document.body;
    }
    var v8213 = v14426;
    var v14427 = !v8213;
    if (v14427) {
      v8213 = document.documentElement;
    }
    var elem$$15 = v8213;
    var JSCompiler_object_inline_width_82 = elem$$15.clientWidth;
    var JSCompiler_object_inline_height_83 = elem$$15.clientHeight;
    var v19104 = window.pageXOffset;
    var v22413 = !v19104;
    if (v22413) {
      var v22412 = document.documentElement;
      if (v22412) {
        var v26169 = document.documentElement;
        v22412 = v26169.scrollLeft;
      }
      v19104 = v22412;
    }
    var v14428 = v19104;
    var v19106 = !v14428;
    if (v19106) {
      var v19105 = document.body;
      if (v19105) {
        var v22414 = document.body;
        v19105 = v22414.scrollLeft;
      }
      v14428 = v19105;
    }
    var v8214 = v14428;
    var v14429 = !v8214;
    if (v14429) {
      v8214 = 0;
    }
    var JSCompiler_object_inline_x_84 = v8214;
    var v19107 = window.pageYOffset;
    var v22416 = !v19107;
    if (v22416) {
      var v22415 = document.documentElement;
      if (v22415) {
        var v26170 = document.documentElement;
        v22415 = v26170.scrollTop;
      }
      v19107 = v22415;
    }
    var v14430 = v19107;
    var v19109 = !v14430;
    if (v19109) {
      var v19108 = document.body;
      if (v19108) {
        var v22417 = document.body;
        v19108 = v22417.scrollTop;
      }
      v14430 = v19108;
    }
    var v8215 = v14430;
    var v14431 = !v8215;
    if (v14431) {
      v8215 = 0;
    }
    var JSCompiler_object_inline_y_85 = v8215;
    var JSCompiler_object_inline_width_86 = tip$$1.offsetWidth;
    var JSCompiler_object_inline_height_87 = tip$$1.offsetHeight;
    var x$$50 = cont.offsetX;
    var y$$31 = cont.offsetY;
    var v14432;
    var v27706 = pos$$8.y;
    var v26171 = v27706 + JSCompiler_object_inline_height_87;
    var v22418 = v26171 + y$$31;
    var v22419 = JSCompiler_object_inline_height_83 + JSCompiler_object_inline_y_85;
    var v19112 = v22418 > v22419;
    if (v19112) {
      var v22420 = pos$$8.y;
      var v19110 = v22420 - JSCompiler_object_inline_height_87;
      v14432 = v19110 - y$$31;
    } else {
      var v19111 = pos$$8.y;
      v14432 = v19111 + y$$31;
    }
    var v8216 = v14432;
    style$$2.top = v8216 + "px";
    var v14433;
    var v27707 = pos$$8.x;
    var v26172 = v27707 + JSCompiler_object_inline_width_86;
    var v22421 = v26172 + x$$50;
    var v22422 = JSCompiler_object_inline_width_82 + JSCompiler_object_inline_x_84;
    var v19115 = v22421 > v22422;
    if (v19115) {
      var v22423 = pos$$8.x;
      var v19113 = v22423 - JSCompiler_object_inline_width_86;
      v14433 = v19113 - x$$50;
    } else {
      var v19114 = pos$$8.x;
      v14433 = v19114 + x$$50;
    }
    var v8217 = v14433;
    style$$2.left = v8217 + "px";
    return;
  }
  function v148(e$$36, win$$24, opt$$5) {
    var v14434 = this.dom;
    if (v14434) {
      v14434 = this.isLabel(e$$36, win$$24);
    }
    var v8219 = v14434;
    if (v8219) {
      var v14435 = $$$1.event;
      var v8218 = v14435.getPos(e$$36, win$$24);
      this.setTooltipPosition(v8218);
    }
    var v14436 = this.dom;
    var v8226 = !v14436;
    if (v8226) {
      var node$$15 = opt$$5.getNode();
      var v8220 = !node$$15;
      if (v8220) {
        this.hide(true);
        return;
      }
      var v22424 = this.config;
      var v19116 = v22424.force;
      var v22426 = !v19116;
      if (v22426) {
        var v22425 = this.node;
        v19116 = !v22425;
      }
      var v14437 = v19116;
      var v19119 = !v14437;
      if (v19119) {
        var v22427 = this.node;
        var v19117 = v22427.id;
        var v19118 = node$$15.id;
        v14437 = v19117 != v19118;
      }
      var v8224 = v14437;
      if (v8224) {
        this.node = node$$15;
        var v8221 = this.config;
        var v8222 = this.tip;
        var v8223 = opt$$5.getContains();
        v8221.onShow(v8222, node$$15, v8223);
      }
      var v14438 = $$$1.event;
      var v8225 = v14438.getPos(e$$36, win$$24);
      this.setTooltipPosition(v8225);
    }
    return;
  }
  function v147(e$$35, win$$23) {
    var label$$7;
    var v14439 = this.dom;
    if (v14439) {
      v14439 = label$$7 = this.isLabel(e$$35, win$$23, false);
    }
    var v8232 = v14439;
    if (v8232) {
      var v14440 = this.viz;
      var v8227 = v14440.graph;
      var v8228 = label$$7.id;
      var v31208 = v8227.getNode(v8228);
      this.node = v31208;
      var v8229 = this.config;
      var v8230 = this.tip;
      var v8231 = this.node;
      v8229.onShow(v8230, v8231, label$$7);
    }
    return;
  }
  function v146(e$$34, win$$22) {
    var v8233 = $$$1.event;
    var evt$$16 = v8233.get(e$$34, win$$22);
    var v14441 = this.dom;
    if (v14441) {
      v14441 = this.isLabel(e$$34, win$$22, true);
    }
    var v8234 = v14441;
    if (v8234) {
      this.hide(true);
      return;
    }
    var rt$$1 = e$$34.relatedTarget;
    var v8235 = this.canvas;
    var canvasWidget$$1 = v8235.element;
    var v14442 = rt$$1;
    if (v14442) {
      v14442 = rt$$1.parentNode;
    }
    var v8237 = v14442;
    for (;v8237;) {
      var v14443 = rt$$1.parentNode;
      var v8236 = canvasWidget$$1 == v14443;
      if (v8236) {
        return;
      }
      rt$$1 = rt$$1.parentNode;
      var v14444 = rt$$1;
      if (v14444) {
        v14444 = rt$$1.parentNode;
      }
      v8237 = v14444;
    }
    this.hide(false);
    return;
  }
  function v145() {
    var v8242 = document.body;
    if (v8242) {
      var v8238 = $$$1("_tooltip");
      var v14445 = !v8238;
      if (v14445) {
        v8238 = document.createElement("div");
      }
      var tip = v8238;
      tip.id = "_tooltip";
      tip.className = "tip";
      var v8239 = tip.style;
      var v8240 = {position:"absolute", display:"none", zIndex:13E3};
      $$$1.extend(v8239, v8240);
      var v8241 = document.body;
      v8241.appendChild(tip);
      this.tip = tip;
      this.node = false;
    }
    return;
  }
  function v144(e$$33, win$$21, event$$12) {
    var v8243 = $$$1.event;
    var evt$$15 = v8243.get(e$$33, win$$21);
    var v8249 = this.touched;
    if (v8249) {
      var v8248 = this.touchMoved;
      if (v8248) {
        var v8244 = this.config;
        var v8245 = this.touched;
        v8244.onTouchEnd(v8245, event$$12, evt$$15);
      } else {
        var v8246 = this.config;
        var v8247 = this.touched;
        v8246.onTouchCancel(v8247, event$$12, evt$$15);
      }
      this.touched = this.touchMoved = false;
    }
    return;
  }
  function v143(e$$32, win$$20, event$$11) {
    var v8250 = $$$1.event;
    var evt$$14 = v8250.get(e$$32, win$$20);
    var v8253 = this.touched;
    if (v8253) {
      this.touchMoved = true;
      var v8251 = this.config;
      var v8252 = this.touched;
      v8251.onTouchMove(v8252, event$$11, evt$$14);
    }
    return;
  }
  function v142(e$$31, win$$19, event$$10) {
    var v8254 = $$$1.event;
    var evt$$13 = v8254.get(e$$31, win$$19);
    var label$$6;
    var v14446 = this.dom;
    if (v14446) {
      v14446 = label$$6 = this.isLabel(e$$31, win$$19);
    }
    var v8258 = v14446;
    if (v8258) {
      var v14447 = this.viz;
      var v8255 = v14447.graph;
      var v8256 = label$$6.id;
      var v31209 = v8255.getNode(v8256);
      this.touched = v31209;
    } else {
      var v8257 = event$$10.getNode();
      var v14449 = !v8257;
      if (v14449) {
        var v19120 = this.config;
        var v14448 = v19120.enableForEdges;
        if (v14448) {
          v14448 = event$$10.getEdge();
        }
        v8257 = v14448;
      }
      this.touched = v8257;
    }
    var v8259 = this.touched;
    if (v8259) {
      var v14450 = this.config;
      var v14451 = this.touched;
      v14450.onTouchStart(v14451, event$$10, evt$$13);
    }
    return;
  }
  function v141(e$$30, win$$18, event$$9) {
    var v8260 = $$$1.event;
    var evt$$12 = v8260.get(e$$30, win$$18);
    var label$$5;
    var v8265 = this.dom;
    if (v8265) {
      var v8263 = label$$5 = this.isLabel(e$$30, win$$18);
      if (v8263) {
        var v14452 = this.viz;
        var v8261 = v14452.graph;
        var v8262 = label$$5.id;
        var v31210 = v8261.getNode(v8262);
        this.pressed = v31210;
      }
    } else {
      var v8264 = event$$9.getNode();
      var v14454 = !v8264;
      if (v14454) {
        var v19121 = this.config;
        var v14453 = v19121.enableForEdges;
        if (v14453) {
          v14453 = event$$9.getEdge();
        }
        v8264 = v14453;
      }
      this.pressed = v8264;
    }
    var v8266 = this.pressed;
    if (v8266) {
      var v14455 = this.config;
      var v14456 = this.pressed;
      v14455.onDragStart(v14456, event$$9, evt$$12);
    }
    return;
  }
  function v140(e$$29, win$$17, delta$$2) {
    var v8267 = this.config;
    var v14457 = $$$1.event;
    var v8268 = v14457.get(e$$29, win$$17);
    v8267.onMouseWheel(delta$$2, v8268);
    return;
  }
  function v139(e$$28, win$$16, event$$8) {
    var label$$4;
    var v8269 = $$$1.event;
    var evt$$11 = v8269.get(e$$28, win$$16);
    var v8272 = this.pressed;
    if (v8272) {
      this.moved = true;
      var v8270 = this.config;
      var v8271 = this.pressed;
      v8270.onDragMove(v8271, event$$8, evt$$11);
      return;
    }
    var v8284 = this.dom;
    if (v8284) {
      var v8273 = this.config;
      var v8274 = this.hovered;
      v8273.onMouseMove(v8274, event$$8, evt$$11);
    } else {
      var v8279 = this.hovered;
      if (v8279) {
        var hn = this.hovered;
        var v8275;
        var v14462 = hn.nodeFrom;
        if (v14462) {
          var v14458 = this.etypes;
          var v14459 = hn.getData("type");
          v8275 = v14458[v14459];
        } else {
          var v14460 = this.ntypes;
          var v14461 = hn.getData("type");
          v8275 = v14460[v14461];
        }
        var geom$$2 = v8275;
        var v14463 = geom$$2;
        if (v14463) {
          v14463 = geom$$2.contains;
        }
        var v8276 = v14463;
        if (v8276) {
          var v14464 = geom$$2.contains;
          var v14465 = this.fx;
          var v14466 = event$$8.getPos();
          v8276 = v14464.call(v14465, hn, v14466);
        }
        var contains$$2 = v8276;
        if (contains$$2) {
          var v8277 = this.config;
          v8277.onMouseMove(hn, event$$8, evt$$11);
          return;
        } else {
          var v8278 = this.config;
          v8278.onMouseLeave(hn, event$$8, evt$$11);
          this.hovered = false;
        }
      }
      var v14467 = event$$8.getNode();
      var v19123 = !v14467;
      if (v19123) {
        var v22428 = this.config;
        var v19122 = v22428.enableForEdges;
        if (v19122) {
          v19122 = event$$8.getEdge();
        }
        v14467 = v19122;
      }
      var v8283 = this.hovered = v14467;
      if (v8283) {
        var v8280 = this.config;
        var v8281 = this.hovered;
        v8280.onMouseEnter(v8281, event$$8, evt$$11);
      } else {
        var v8282 = this.config;
        v8282.onMouseMove(false, event$$8, evt$$11);
      }
    }
    return;
  }
  function v138(e$$27, win$$15, event$$7) {
    var v8285 = $$$1.event;
    var evt$$10 = v8285.get(e$$27, win$$15);
    var label$$3;
    var v14468 = this.dom;
    if (v14468) {
      v14468 = label$$3 = this.isLabel(e$$27, win$$15, true);
    }
    var v8290 = v14468;
    if (v8290) {
      var v14469 = this.viz;
      var v8286 = v14469.graph;
      var v8287 = label$$3.id;
      var v31211 = v8286.getNode(v8287);
      this.hovered = v31211;
      var v8288 = this.config;
      var v8289 = this.hovered;
      v8288.onMouseEnter(v8289, event$$7, evt$$10);
    }
    return;
  }
  function v137(e$$26, win$$14, event$$6) {
    var v8291 = $$$1.event;
    var evt$$9 = v8291.get(e$$26, win$$14);
    var label$$2;
    var v14470 = this.dom;
    if (v14470) {
      v14470 = label$$2 = this.isLabel(e$$26, win$$14, true);
    }
    var v8294 = v14470;
    if (v8294) {
      var v8292 = this.config;
      var v19124 = this.viz;
      var v14471 = v19124.graph;
      var v14472 = label$$2.id;
      var v8293 = v14471.getNode(v14472);
      v8292.onMouseLeave(v8293, event$$6, evt$$9);
      this.hovered = false;
      return;
    }
    var rt = evt$$9.relatedTarget;
    var v8295 = this.canvas;
    var canvasWidget = v8295.element;
    var v14473 = rt;
    if (v14473) {
      v14473 = rt.parentNode;
    }
    var v8297 = v14473;
    for (;v8297;) {
      var v14474 = rt.parentNode;
      var v8296 = canvasWidget == v14474;
      if (v8296) {
        return;
      }
      rt = rt.parentNode;
      var v14475 = rt;
      if (v14475) {
        v14475 = rt.parentNode;
      }
      v8297 = v14475;
    }
    var v8300 = this.hovered;
    if (v8300) {
      var v8298 = this.config;
      var v8299 = this.hovered;
      v8298.onMouseLeave(v8299, event$$6, evt$$9);
      this.hovered = false;
    }
    return;
  }
  function v136(e$$25, win$$13, event$$5, isRightClick) {
    var v8301 = $$$1.event;
    var evt$$8 = v8301.get(e$$25, win$$13);
    var v14476 = this.moved;
    var v8306 = !v14476;
    if (v8306) {
      if (isRightClick) {
        var v8302 = this.config;
        var v8303 = this.hovered;
        v8302.onRightClick(v8303, event$$5, evt$$8);
      } else {
        var v8304 = this.config;
        var v8305 = this.pressed;
        v8304.onClick(v8305, event$$5, evt$$8);
      }
    }
    var v8312 = this.pressed;
    if (v8312) {
      var v8311 = this.moved;
      if (v8311) {
        var v8307 = this.config;
        var v8308 = this.pressed;
        v8307.onDragEnd(v8308, event$$5, evt$$8);
      } else {
        var v8309 = this.config;
        var v8310 = this.pressed;
        v8309.onDragCancel(v8310, event$$5, evt$$8);
      }
      this.pressed = this.moved = false;
    }
    return;
  }
  function v135() {
    var v8313 = this.viz;
    this.fx = v8313.fx;
    var v14477 = this.viz;
    var v8314 = v14477.fx;
    this.ntypes = v8314.nodeTypes;
    var v14478 = this.viz;
    var v8315 = v14478.fx;
    this.etypes = v8315.edgeTypes;
    this.hovered = false;
    this.pressed = false;
    this.touched = false;
    this.touchMoved = false;
    this.moved = false;
    return;
  }
  function v134() {
    function v133(k$$1) {
      var v14479 = Extras.Classes;
      var v8316 = v14479[k$$1];
      var obj$$23 = new v8316(k$$1, that$$5);
      var v8317 = obj$$23.isEnabled();
      if (v8317) {
        mem.register(obj$$23);
      }
      var v8319 = obj$$23.setAsProperty();
      if (v8319) {
        var v8318 = k$$1.toLowerCase();
        that$$5[v8318] = obj$$23;
      }
      return;
    }
    var mem = new MouseEventsManager(this);
    var that$$5 = this;
    var v8320 = ["NodeStyles", "Tips", "Navigation", "Events"];
    $$$1.each(v8320, v133);
    return;
  }
  function v132(e$$23, win$$12) {
    function v131() {
      var v8321 = this.getNodeCalled;
      if (v8321) {
        return this.contains;
      }
      this.getNode();
      return this.contains;
    }
    function v130() {
      var v8322 = this.getEdgeCalled;
      if (v8322) {
        return this.edge;
      }
      this.getEdgeCalled = true;
      var hashset = {};
      var id$$6;
      var v8327 = graph.edges;
      for (id$$6 in v8327) {
        var v8323 = graph.edges;
        var edgeFrom = v8323[id$$6];
        hashset[id$$6] = true;
        var edgeId;
        for (edgeId in edgeFrom) {
          var v8324 = edgeId in hashset;
          if (v8324) {
            continue;
          }
          var e$$24 = edgeFrom[edgeId];
          var v8325 = e$$24;
          if (v8325) {
            var v14480 = etypes;
            var v14481 = e$$24.getData("type");
            v8325 = v14480[v14481];
          }
          var geom$$1 = v8325;
          var v14482 = geom$$1;
          if (v14482) {
            v14482 = geom$$1.contains;
          }
          var v8326 = v14482;
          if (v8326) {
            var v14483 = geom$$1.contains;
            var v14484 = this.getPos();
            v8326 = v14483.call(fx, e$$24, v14484);
          }
          var contains$$1 = v8326;
          if (contains$$1) {
            this.contains = contains$$1;
            return that$$4.edge = this.edge = e$$24;
          }
        }
      }
      return that$$4.edge = this.edge = false;
    }
    function v129() {
      var v8328 = this.getNodeCalled;
      if (v8328) {
        return this.node;
      }
      this.getNodeCalled = true;
      var id$$5;
      var v8332 = graph.nodes;
      for (id$$5 in v8332) {
        var v8329 = graph.nodes;
        var n$$2 = v8329[id$$5];
        var v8330 = n$$2;
        if (v8330) {
          var v14485 = ntypes;
          var v14486 = n$$2.getData("type");
          v8330 = v14485[v14486];
        }
        var geom = v8330;
        var v14487 = geom;
        if (v14487) {
          v14487 = geom.contains;
        }
        var v8331 = v14487;
        if (v8331) {
          var v14488 = geom.contains;
          var v14489 = this.getPos();
          v8331 = v14488.call(fx, n$$2, v14489);
        }
        var contains = v8331;
        if (contains) {
          this.contains = contains;
          return that$$4.node = this.node = n$$2;
        }
      }
      return that$$4.node = this.node = false;
    }
    function v128() {
      var v8333 = that$$4.viz;
      var canvas$$2 = v8333.canvas;
      var s$$2 = canvas$$2.getSize();
      var p$$11 = canvas$$2.getPos();
      var ox = canvas$$2.translateOffsetX;
      var oy$$1 = canvas$$2.translateOffsetY;
      var sx$$1 = canvas$$2.scaleOffsetX;
      var sy$$1 = canvas$$2.scaleOffsetY;
      var v8334 = $$$1.event;
      var pos$$7 = v8334.getPos(e$$23, win$$12);
      var v26173 = pos$$7.x;
      var v26174 = p$$11.x;
      var v22429 = v26173 - v26174;
      var v19125 = v22429 - ox;
      var v14490 = v19125 * 1;
      var v8335 = v14490 / sx$$1;
      var v26175 = pos$$7.y;
      var v26176 = p$$11.y;
      var v22430 = v26175 - v26176;
      var v19126 = v22430 - oy$$1;
      var v14491 = v19126 * 1;
      var v8336 = v14491 / sy$$1;
      this.pos = {x:v8335, y:v8336};
      return this.pos;
    }
    var that$$4 = this;
    var v8337 = this.viz;
    var graph = v8337.graph;
    var v8338 = this.viz;
    var fx = v8338.fx;
    var ntypes = fx.nodeTypes;
    var etypes = fx.edgeTypes;
    return{pos:false, node:false, edge:false, contains:false, getNodeCalled:false, getEdgeCalled:false, getPos:v128, getNode:v129, getEdge:v130, getContains:v131};
  }
  function v127() {
    var v14492 = Array.prototype;
    var v8339 = v14492.slice;
    var args$$1 = v8339.call(arguments);
    var type$$32 = args$$1.shift();
    var i$$26 = 0;
    var regs = this.registeredObjects;
    var l$$8 = regs.length;
    var v8342 = i$$26 < l$$8;
    for (;v8342;) {
      var v14493 = regs[i$$26];
      var v14494 = "on" + type$$32;
      var v8340 = v14493[v14494];
      var v8341 = regs[i$$26];
      v8340.apply(v8341, args$$1);
      i$$26++;
      v8342 = i$$26 < l$$8;
    }
    return;
  }
  function v126(obj$$22) {
    var v8343 = this.registeredObjects;
    v8343.push(obj$$22);
    return;
  }
  function v125() {
    function v124(e$$21, win$$10) {
      var v8344 = that$$3.makeEventObject(e$$21, win$$10);
      that$$3.handleEvent("TouchEnd", e$$21, win$$10, v8344);
      return;
    }
    function v123(e$$20, win$$9) {
      var v8345 = that$$3.makeEventObject(e$$20, win$$9);
      that$$3.handleEvent("TouchMove", e$$20, win$$9, v8345);
      return;
    }
    function v122(e$$19, win$$8) {
      var v8346 = that$$3.makeEventObject(e$$19, win$$8);
      that$$3.handleEvent("TouchStart", e$$19, win$$8, v8346);
      return;
    }
    function v121(e$$18, win$$7) {
      var v8347 = that$$3.makeEventObject(e$$18, win$$7);
      that$$3.handleEvent("MouseOut", e$$18, win$$7, v8347);
      return;
    }
    function v120(e$$17, win$$6) {
      var v8348 = that$$3.makeEventObject(e$$17, win$$6);
      that$$3.handleEvent("MouseOver", e$$17, win$$6, v8348);
      return;
    }
    function v119(e$$16, win$$5) {
      var v8349 = that$$3.makeEventObject(e$$16, win$$5);
      that$$3.handleEvent("MouseMove", e$$16, win$$5, v8349);
      return;
    }
    function v118(e$$15, win$$4) {
      var v8350 = $$$1.event;
      var event$$3 = v8350.get(e$$15, win$$4);
      var v8351 = that$$3.makeEventObject(e$$15, win$$4);
      var v14495 = $$$1.event;
      var v8352 = v14495.isRightClick(event$$3);
      that$$3.handleEvent("MouseDown", e$$15, win$$4, v8351, v8352);
      return;
    }
    function v117(e$$14, win$$3) {
      var v8353 = $$$1.event;
      var event$$2 = v8353.get(e$$14, win$$3);
      var v8354 = that$$3.makeEventObject(e$$14, win$$3);
      var v14496 = $$$1.event;
      var v8355 = v14496.isRightClick(event$$2);
      that$$3.handleEvent("MouseUp", e$$14, win$$3, v8354, v8355);
      return;
    }
    function handleMouseWheel(e$$22, win$$11) {
      var v8356 = $$$1.event;
      var event$$4 = v8356.get(e$$22, win$$11);
      var v8357 = $$$1.event;
      var wheel = v8357.getWheel(event$$4);
      that$$3.handleEvent("MouseWheel", e$$22, win$$11, wheel);
      return;
    }
    var v8358 = this.canvas;
    var htmlCanvas = v8358.element;
    var that$$3 = this;
    var v8359 = htmlCanvas;
    var v31212 = $$$1.lambda(false);
    v8359.oncontextmenu = v31212;
    var v8360 = {"mouseup":v117, "mousedown":v118, "mousemove":v119, "mouseover":v120, "mouseout":v121, "touchstart":v122, "touchmove":v123, "touchend":v124};
    $$$1.addEvents(htmlCanvas, v8360);
    var v19127 = document.getBoxObjectFor;
    var v14497 = !v19127;
    if (v14497) {
      var v19128 = window.mozInnerScreenX;
      v14497 = v19128 == null;
    }
    var v8361 = v14497;
    if (v8361) {
      $$$1.addEvent(htmlCanvas, "mousewheel", handleMouseWheel);
    } else {
      htmlCanvas.addEventListener("DOMMouseScroll", handleMouseWheel, false);
    }
    return;
  }
  function v116(viz$$1) {
    this.viz = viz$$1;
    this.canvas = viz$$1.canvas;
    this.node = false;
    this.edge = false;
    this.registeredObjects = [];
    this.attachEvents();
    return;
  }
  function v115(elem$$14, par) {
    var v14498 = elem$$14;
    if (v14498) {
      v14498 = elem$$14.parentNode;
    }
    var v8363 = v14498;
    for (;v8363;) {
      var v14499 = elem$$14.parentNode;
      var v8362 = v14499 == par;
      if (v8362) {
        return elem$$14;
      }
      elem$$14 = elem$$14.parentNode;
      var v14500 = elem$$14;
      if (v14500) {
        v14500 = elem$$14.parentNode;
      }
      v8363 = v14500;
    }
    return false;
  }
  function v114(e$$13, win$$2, group) {
    var v8364 = $$$1.event;
    e$$13 = v8364.get(e$$13, win$$2);
    var labelContainer = this.labelContainer;
    var v8365 = e$$13.target;
    var v14501 = !v8365;
    if (v14501) {
      v8365 = e$$13.srcElement;
    }
    var target$$26 = v8365;
    var related = e$$13.relatedTarget;
    if (group) {
      var v19129 = related;
      if (v19129) {
        var v28675 = this.viz;
        var v27708 = v28675.canvas;
        var v26177 = v27708.getCtx();
        var v22431 = v26177.canvas;
        v19129 = related == v22431;
      }
      var v14502 = v19129;
      if (v14502) {
        var v19130 = !target$$26;
        v14502 = !v19130;
      }
      var v8366 = v14502;
      if (v8366) {
        v8366 = this.isDescendantOf(target$$26, labelContainer);
      }
      return v8366;
    } else {
      return this.isDescendantOf(target$$26, labelContainer);
    }
    return;
  }
  function v113() {
    var v8367 = this.config;
    return v8367.enable;
  }
  function v112(className, viz) {
    this.viz = viz;
    this.canvas = viz.canvas;
    var v8368 = viz.config;
    this.config = v8368[className];
    var v8369 = viz.fx;
    this.nodeTypes = v8369.nodeTypes;
    var v8370 = this.config;
    var type$$31 = v8370.type;
    var v8371;
    var v14504 = type$$31 == "auto";
    if (v14504) {
      var v22432 = viz.config;
      var v19131 = v22432.Label;
      var v14503 = v19131.type;
      v8371 = v14503 != "Native";
    } else {
      v8371 = type$$31 != "Native";
    }
    this.dom = v8371;
    var v8372 = this.dom;
    if (v8372) {
      var v14505 = viz.labels;
      v8372 = v14505.getLabelContainer();
    }
    this.labelContainer = v8372;
    var v8373 = this.isEnabled();
    if (v8373) {
      this.initializePost();
    }
    return;
  }
  function v111() {
    var v14506 = this.timer;
    var v8374 = !v14506;
    if (v8374) {
      return true;
    }
    var v19132 = this.opt;
    var v14507 = v19132.link;
    var v8375 = v14507 == "cancel";
    if (v8375) {
      this.stopTimer();
      return true;
    }
    return false;
  }
  function v110() {
    var v14508 = this.timer;
    var v8376 = !v14508;
    if (v8376) {
      return false;
    }
    var v8377 = $$$1.time();
    var v8378 = this.time;
    this.time = v8377 - v8378;
    var v8379 = this.timer;
    var v31213 = clearInterval(v8379);
    this.timer = v31213;
    return true;
  }
  function v109() {
    this.startTimer();
    return this;
  }
  function v108() {
    this.stopTimer();
    return this;
  }
  function v107() {
    function v106() {
      that$$2.step();
      return;
    }
    var that$$2 = this;
    var v8380 = this.opt;
    var fps = v8380.fps;
    var v8381 = this.timer;
    if (v8381) {
      return false;
    }
    var v8382 = $$$1.time();
    var v8383 = this.time;
    this.time = v8382 - v8383;
    var v14509 = 1E3 / fps;
    var v8384 = Math.round(v14509);
    var v31214 = setInterval(v106, v8384);
    this.timer = v31214;
    return true;
  }
  function v105() {
    var v14510 = this.check();
    var v8385 = !v14510;
    if (v8385) {
      return this;
    }
    this.time = 0;
    this.startTimer();
    return this;
  }
  function v104() {
    var time = $$$1.time();
    var opt$$3 = this.opt;
    var v19133 = this.time;
    var v19134 = opt$$3.duration;
    var v14511 = v19133 + v19134;
    var v8388 = time < v14511;
    if (v8388) {
      var v19135 = this.time;
      var v14512 = time - v19135;
      var v14513 = opt$$3.duration;
      var v8386 = v14512 / v14513;
      var delta$$1 = opt$$3.transition(v8386);
      opt$$3.compute(delta$$1);
    } else {
      var v8387 = this.timer;
      var v31215 = clearInterval(v8387);
      this.timer = v31215;
      opt$$3.compute(1);
      opt$$3.complete();
    }
    return;
  }
  function v103(options$$3) {
    var v14514 = Trans.Quart;
    var v8389 = v14514.easeInOut;
    var v8390 = $$$1.empty;
    var v8391 = $$$1.empty;
    var opt$$2 = {duration:2500, fps:40, transition:v8389, compute:v8390, complete:v8391, link:"ignore"};
    var v8392 = options$$3 || {};
    var v31216 = $$$1.merge(opt$$2, v8392);
    this.opt = v31216;
    return this;
  }
  function v102(options$$2) {
    this.setOptions(options$$2);
    return;
  }
  function v101() {
    function v100(elem$$13, i$$24) {
      function v99(p$$10) {
        var v14515 = i$$24 + 2;
        var v8393 = [v14515];
        return Math.pow(p$$10, v8393);
      }
      var v31217 = makeTrans(v99);
      Trans[elem$$13] = v31217;
      return;
    }
    function v98(val, key$$23) {
      var v31218 = makeTrans(val);
      Trans[key$$23] = v31218;
      return;
    }
    function v97(p$$9, x$$49) {
      var v19136 = p$$9 = p$$9 - 1;
      var v14516 = 10 * v19136;
      var v8394 = Math.pow(2, v14516);
      var v26178 = 20 * p$$9;
      var v26179 = Math.PI;
      var v22433 = v26178 * v26179;
      var v26180 = x$$49[0];
      var v27709 = !v26180;
      if (v27709) {
        v26180 = 1;
      }
      var v22434 = v26180;
      var v19137 = v22433 * v22434;
      var v14517 = v19137 / 3;
      var v8395 = Math.cos(v14517);
      return v8394 * v8395;
    }
    function v96(p$$8) {
      var value$$33;
      var a = 0;
      var b = 1;
      for (;1;) {
        var v22435 = 4 * a;
        var v19138 = 7 - v22435;
        var v14518 = v19138 / 11;
        var v8398 = p$$8 >= v14518;
        if (v8398) {
          var v8396 = b * b;
          var v26181 = 6 * a;
          var v22436 = 11 - v26181;
          var v22437 = 11 * p$$8;
          var v19139 = v22436 - v22437;
          var v14519 = v19139 / 4;
          var v8397 = Math.pow(v14519, 2);
          value$$33 = v8396 - v8397;
          break;
        }
        a = a + b;
        b = b / 2;
      }
      return value$$33;
    }
    function v95(p$$7, x$$48) {
      var v8399 = x$$48[0];
      var v14520 = !v8399;
      if (v14520) {
        v8399 = 1.618;
      }
      x$$48 = v8399;
      var v8400 = Math.pow(p$$7, 2);
      var v19140 = x$$48 + 1;
      var v14521 = v19140 * p$$7;
      var v8401 = v14521 - x$$48;
      return v8400 * v8401;
    }
    function v94(p$$6) {
      var v22438 = 1 - p$$6;
      var v22439 = Math.PI;
      var v19141 = v22438 * v22439;
      var v14522 = v19141 / 2;
      var v8402 = Math.sin(v14522);
      return 1 - v8402;
    }
    function v93(p$$5) {
      var v14523 = Math.acos(p$$5);
      var v8403 = Math.sin(v14523);
      return 1 - v8403;
    }
    function v92(p$$4) {
      var v14524 = p$$4 - 1;
      var v8404 = 8 * v14524;
      return Math.pow(2, v8404);
    }
    function v91(p$$3, x$$47) {
      var v14525 = x$$47[0];
      var v19142 = !v14525;
      if (v19142) {
        v14525 = 6;
      }
      var v8405 = v14525;
      return Math.pow(p$$3, v8405);
    }
    function makeTrans(transition, params) {
      function v90(pos$$6) {
        var v8406;
        var v14528 = pos$$6 <= .5;
        if (v14528) {
          var v19143 = 2 * pos$$6;
          var v14526 = transition(v19143, params);
          v8406 = v14526 / 2;
        } else {
          var v26182 = 1 - pos$$6;
          var v22440 = 2 * v26182;
          var v19144 = transition(v22440, params);
          var v14527 = 2 - v19144;
          v8406 = v14527 / 2;
        }
        return v8406;
      }
      function v89(pos$$5) {
        var v14529 = 1 - pos$$5;
        var v8407 = transition(v14529, params);
        return 1 - v8407;
      }
      function v88(pos$$4) {
        return transition(pos$$4, params);
      }
      params = $$$1.splat(params);
      var v8408 = {easeIn:v88, easeOut:v89, easeInOut:v90};
      return $$$1.extend(transition, v8408);
    }
    var transitions = {Pow:v91, Expo:v92, Circ:v93, Sine:v94, Back:v95, Bounce:v96, Elastic:v97};
    $$$1.each(transitions, v98);
    var v8409 = ["Quad", "Cubic", "Quart", "Quint"];
    $$$1.each(v8409, v100);
    return;
  }
  function v87(p$$2) {
    return p$$2;
  }
  function v86(tree$$5, action$$1) {
    var v8410 = Number.MAX_VALUE;
    this.eachLevel(tree$$5, 0, v8410, action$$1);
    return;
  }
  function v85(tree$$4, initLevel, toLevel, action) {
    var v8415 = initLevel <= toLevel;
    if (v8415) {
      action(tree$$4, initLevel);
      var v14530 = tree$$4.children;
      var v8411 = !v14530;
      if (v8411) {
        return;
      }
      var i$$23 = 0;
      var ch$$4 = tree$$4.children;
      var v14531 = ch$$4.length;
      var v8414 = i$$23 < v14531;
      for (;v8414;) {
        var v8412 = ch$$4[i$$23];
        var v8413 = initLevel + 1;
        this.eachLevel(v8412, v8413, toLevel, action);
        i$$23++;
        var v14532 = ch$$4.length;
        v8414 = i$$23 < v14532;
      }
    }
    return;
  }
  function v84(tree$$3, id$$4) {
    var v14533 = tree$$3.id;
    var v8416 = v14533 == id$$4;
    if (v8416) {
      return tree$$3;
    }
    var i$$22 = 0;
    var ch$$3 = tree$$3.children;
    var v14534 = ch$$3;
    if (v14534) {
      var v19145 = ch$$3.length;
      v14534 = i$$22 < v19145;
    }
    var v8419 = v14534;
    for (;v8419;) {
      var v8417 = ch$$3[i$$22];
      var t = this.getSubtree(v8417, id$$4);
      var v8418 = t != null;
      if (v8418) {
        return t;
      }
      i$$22++;
      var v14535 = ch$$3;
      if (v14535) {
        var v19146 = ch$$3.length;
        v14535 = i$$22 < v19146;
      }
      v8419 = v14535;
    }
    return null;
  }
  function v83(tree$$2, id$$3) {
    var v14536 = tree$$2.id;
    var v8420 = v14536 == id$$3;
    if (v8420) {
      return false;
    }
    var ch$$2 = tree$$2.children;
    var v14537 = ch$$2;
    if (v14537) {
      var v19147 = ch$$2.length;
      v14537 = v19147 > 0;
    }
    var v8424 = v14537;
    if (v8424) {
      var i$$21 = 0;
      var v14538 = ch$$2.length;
      var v8423 = i$$21 < v14538;
      for (;v8423;) {
        var v19148 = ch$$2[i$$21];
        var v14539 = v19148.id;
        var v8422 = v14539 == id$$3;
        if (v8422) {
          return tree$$2;
        } else {
          var v8421 = ch$$2[i$$21];
          var ans$$2 = this.getParent(v8421, id$$3);
          if (ans$$2) {
            return ans$$2;
          }
        }
        i$$21++;
        var v14540 = ch$$2.length;
        v8423 = i$$21 < v14540;
      }
    }
    return false;
  }
  function v82(tree$$1, maxLevel) {
    function v81(elem$$12, i$$20) {
      var v14541 = i$$20 == maxLevel;
      if (v14541) {
        v14541 = elem$$12.children;
      }
      var v8425 = v14541;
      if (v8425) {
        delete elem$$12.children;
        elem$$12.children = [];
      }
      return;
    }
    this.each(tree$$1, v81);
    return;
  }
  function v80() {
    function v79(properties$$2) {
      Class.inherit(proto$$1, properties$$2);
      return;
    }
    var proto$$1 = this.prototype;
    var v19149 = Array.prototype;
    var v14542 = v19149.slice;
    var v14543 = arguments || [];
    var v8426 = v14542.call(v14543);
    $$$1.each(v8426, v79);
    return this;
  }
  function v78(object$$3, name$$35, method$$1) {
    function override$$1() {
      var previous$$2 = this.parent;
      var v8427;
      if (parent$$1) {
        v8427 = parent$$1[name$$35];
      } else {
        v8427 = object$$3[name$$35];
      }
      this.parent = v8427;
      var value$$32 = method$$1.apply(this, arguments);
      this.parent = previous$$2;
      return value$$32;
    }
    var parent$$1 = Class.prototyping;
    var v14544 = parent$$1;
    if (v14544) {
      var v19150 = object$$3[name$$35];
      var v19151 = parent$$1[name$$35];
      v14544 = v19150 != v19151;
    }
    var v8428 = v14544;
    if (v8428) {
      parent$$1 = null;
    }
    object$$3[name$$35] = override$$1;
    return;
  }
  function v77(object$$2, properties$$1) {
    var key$$22;
    for (key$$22 in properties$$1) {
      var override = properties$$1[key$$22];
      var previous$$1 = object$$2[key$$22];
      var type$$30 = $$$1.type(override);
      var v14545 = previous$$1;
      if (v14545) {
        v14545 = type$$30 == "function";
      }
      var v8431 = v14545;
      if (v8431) {
        var v8429 = override != previous$$1;
        if (v8429) {
          Class.override(object$$2, key$$22, override);
        }
      } else {
        var v8430 = type$$30 == "object";
        if (v8430) {
          var v31219 = $$$1.merge(previous$$1, override);
          object$$2[key$$22] = v31219;
        } else {
          object$$2[key$$22] = override;
        }
      }
    }
    return object$$2;
  }
  function v76(self$$1, klasses) {
    function v75(klass$$4) {
      Class.prototyping = klass$$4;
      var v8432;
      var v19152 = typeof klass$$4;
      var v14546 = v19152 == "function";
      if (v14546) {
        v8432 = new klass$$4;
      } else {
        v8432 = klass$$4;
      }
      var instance$$1 = v8432;
      var prop$$4;
      for (prop$$4 in instance$$1) {
        var v14547 = prop$$4 in self$$1;
        var v8433 = !v14547;
        if (v8433) {
          self$$1[prop$$4] = instance$$1[prop$$4];
        }
      }
      delete Class.prototyping;
      return;
    }
    var v8434 = $$$1.splat(klasses);
    $$$1.each(v8434, v75);
    return self$$1;
  }
  function v74(e$$12) {
    var v8435 = e$$12.stopPropagation;
    if (v8435) {
      e$$12.stopPropagation();
    }
    e$$12.cancelBubble = true;
    var v8436 = e$$12.preventDefault;
    if (v8436) {
      e$$12.preventDefault();
    } else {
      e$$12.returnValue = false;
    }
    return;
  }
  function v73(e$$11, win$$1) {
    win$$1 = win$$1 || window;
    var v8437 = e$$11;
    var v14548 = !v8437;
    if (v14548) {
      v8437 = win$$1.event;
    }
    e$$11 = v8437;
    var doc = win$$1.document;
    var v8438 = doc.documentElement;
    var v14549 = !v8438;
    if (v14549) {
      v8438 = doc.body;
    }
    doc = v8438;
    var v14550 = e$$11.touches;
    if (v14550) {
      var v19153 = e$$11.touches;
      v14550 = v19153.length;
    }
    var v8440 = v14550;
    if (v8440) {
      var v8439 = e$$11.touches;
      e$$11 = v8439[0];
    }
    var v14551 = e$$11.pageX;
    var v19156 = !v14551;
    if (v19156) {
      var v19154 = e$$11.clientX;
      var v19155 = doc.scrollLeft;
      v14551 = v19154 + v19155;
    }
    var v8441 = v14551;
    var v14552 = e$$11.pageY;
    var v19159 = !v14552;
    if (v19159) {
      var v19157 = e$$11.clientY;
      var v19158 = doc.scrollTop;
      v14552 = v19157 + v19158;
    }
    var v8442 = v14552;
    var page = {x:v8441, y:v8442};
    return page;
  }
  function v72(e$$10) {
    var v14553 = e$$10.which;
    var v8443 = v14553 == 3;
    var v14555 = !v8443;
    if (v14555) {
      var v14554 = e$$10.button;
      v8443 = v14554 == 2;
    }
    return v8443;
  }
  function v71(e$$9) {
    var v8444;
    var v14558 = e$$9.wheelDelta;
    if (v14558) {
      var v14556 = e$$9.wheelDelta;
      v8444 = v14556 / 120;
    } else {
      var v22441 = e$$9.detail;
      var v26183 = !v22441;
      if (v26183) {
        v22441 = 0;
      }
      var v19160 = v22441;
      var v14557 = -v19160;
      v8444 = v14557 / 3;
    }
    return v8444;
  }
  function v70(e$$8, win) {
    win = win || window;
    var v8445 = e$$8;
    var v14559 = !v8445;
    if (v14559) {
      v8445 = win.event;
    }
    return v8445;
  }
  function v69(elem$$9) {
    function getOffsets(elem$$10) {
      var position = {x:0, y:0};
      var v14560 = elem$$10;
      if (v14560) {
        var v22442 = elem$$10.tagName;
        var v19161 = /^(?:body|html)$/i.test(v22442);
        v14560 = !v19161;
      }
      var v8446 = v14560;
      for (;v8446;) {
        var v14561 = position.x;
        var v14562 = elem$$10.offsetLeft;
        position.x = v14561 + v14562;
        var v14563 = position.y;
        var v14564 = elem$$10.offsetTop;
        position.y = v14563 + v14564;
        elem$$10 = elem$$10.offsetParent;
        var v14565 = elem$$10;
        if (v14565) {
          var v22443 = elem$$10.tagName;
          var v19162 = /^(?:body|html)$/i.test(v22443);
          v14565 = !v19162;
        }
        v8446 = v14565;
      }
      return position;
    }
    function getScrolls(elem$$11) {
      var position$$1 = {x:0, y:0};
      var v14566 = elem$$11;
      if (v14566) {
        var v22444 = elem$$11.tagName;
        var v19163 = /^(?:body|html)$/i.test(v22444);
        v14566 = !v19163;
      }
      var v8447 = v14566;
      for (;v8447;) {
        var v14567 = position$$1.x;
        var v14568 = elem$$11.scrollLeft;
        position$$1.x = v14567 + v14568;
        var v14569 = position$$1.y;
        var v14570 = elem$$11.scrollTop;
        position$$1.y = v14569 + v14570;
        elem$$11 = elem$$11.parentNode;
        var v14571 = elem$$11;
        if (v14571) {
          var v22445 = elem$$11.tagName;
          var v19164 = /^(?:body|html)$/i.test(v22445);
          v14571 = !v19164;
        }
        v8447 = v14571;
      }
      return position$$1;
    }
    var offset$$8 = getOffsets(elem$$9);
    var scroll$$1 = getScrolls(elem$$9);
    var v14572 = offset$$8.x;
    var v14573 = scroll$$1.x;
    var v8448 = v14572 - v14573;
    var v14574 = offset$$8.y;
    var v14575 = scroll$$1.y;
    var v8449 = v14574 - v14575;
    return{x:v8448, y:v8449};
  }
  function v68(obj$$21, klass$$2) {
    var v8450 = obj$$21.className;
    var v19165 = "(^|\\s)" + klass$$2;
    var v14576 = v19165 + "(?:\\s|$)";
    var v8451 = new RegExp(v14576);
    var v31220 = v8450.replace(v8451, "$1");
    obj$$21.className = v31220;
    return;
  }
  function v67(obj$$20, klass$$1) {
    var v14577 = $$$1.hasClass(obj$$20, klass$$1);
    var v8453 = !v14577;
    if (v8453) {
      var v14578 = obj$$20.className;
      var v8452 = v14578 + " ";
      obj$$20.className = v8452 + klass$$1;
    }
    return;
  }
  function v66(obj$$19, klass) {
    var v22446 = obj$$19.className;
    var v19166 = " " + v22446;
    var v14579 = v19166 + " ";
    var v19167 = " " + klass;
    var v14580 = v19167 + " ";
    var v8454 = v14579.indexOf(v14580);
    return v8454 > -1;
  }
  function v65(obj$$18, typeObj) {
    var type$$29;
    for (type$$29 in typeObj) {
      var v8455 = typeObj[type$$29];
      $$$1.addEvent(obj$$18, type$$29, v8455);
    }
    return;
  }
  function v64(obj$$17, type$$28, fn$$1) {
    var v8457 = obj$$17.addEventListener;
    if (v8457) {
      obj$$17.addEventListener(type$$28, fn$$1, false);
    } else {
      var v8456 = "on" + type$$28;
      obj$$17.attachEvent(v8456, fn$$1);
    }
    return;
  }
  function v63(elem$$8) {
    var ch$$1 = elem$$8.childNodes;
    var i$$19 = 0;
    var l$$6 = ch$$1.length;
    var v8459 = i$$19 < l$$6;
    for (;v8459;) {
      var v8458 = ch$$1[i$$19];
      $$$1.destroy(v8458);
      i$$19++;
      v8459 = i$$19 < l$$6;
    }
    return;
  }
  function v62(elem$$7) {
    $$$1.clean(elem$$7);
    var v8461 = elem$$7.parentNode;
    if (v8461) {
      var v8460 = elem$$7.parentNode;
      v8460.removeChild(elem$$7);
    }
    var v8462 = elem$$7.clearAttributes;
    if (v8462) {
      elem$$7.clearAttributes();
    }
    return;
  }
  function v61(hex$$1) {
    var v14581 = hex$$1.length;
    var v8471 = v14581 != 7;
    if (v8471) {
      hex$$1 = hex$$1.match(/^#?(\w{1,2})(\w{1,2})(\w{1,2})$/);
      hex$$1.shift();
      var v14582 = hex$$1.length;
      var v8463 = v14582 != 3;
      if (v8463) {
        return null;
      }
      var rgb = [];
      var i$$18 = 0;
      var v8466 = i$$18 < 3;
      for (;v8466;) {
        var value$$31 = hex$$1[i$$18];
        var v14583 = value$$31.length;
        var v8464 = v14583 == 1;
        if (v8464) {
          value$$31 = value$$31 + value$$31;
        }
        var v8465 = parseInt(value$$31, 16);
        rgb.push(v8465);
        i$$18++;
        v8466 = i$$18 < 3;
      }
      return rgb;
    } else {
      var v8467 = hex$$1.slice(1);
      hex$$1 = parseInt(v8467, 16);
      var v8468 = hex$$1 >> 16;
      var v14584 = hex$$1 >> 8;
      var v8469 = v14584 & 255;
      var v8470 = hex$$1 & 255;
      return[v8468, v8469, v8470];
    }
    return;
  }
  function v60(srcArray, array$$12) {
    var v14585 = srcArray.length;
    var v8472 = v14585 < 3;
    if (v8472) {
      return null;
    }
    var v22447 = srcArray.length;
    var v19168 = v22447 == 4;
    if (v19168) {
      var v22448 = srcArray[3];
      v19168 = v22448 == 0;
    }
    var v14586 = v19168;
    if (v14586) {
      v14586 = !array$$12;
    }
    var v8473 = v14586;
    if (v8473) {
      return "transparent";
    }
    var hex = [];
    var i$$17 = 0;
    var v8476 = i$$17 < 3;
    for (;v8476;) {
      var v14587 = srcArray[i$$17];
      var v8474 = v14587 - 0;
      var bit = v8474.toString(16);
      var v14588;
      var v22449 = bit.length;
      var v19169 = v22449 == 1;
      if (v19169) {
        v14588 = "0" + bit;
      } else {
        v14588 = bit;
      }
      var v8475 = v14588;
      hex.push(v8475);
      i$$17++;
      v8476 = i$$17 < 3;
    }
    var v8477;
    if (array$$12) {
      v8477 = hex;
    } else {
      var v14589 = hex.join("");
      v8477 = "#" + v14589;
    }
    return v8477;
  }
  function v59() {
    var v14590 = arguments.length;
    var v8478 = v14590 === 0;
    if (v8478) {
      return[];
    }
    var j$$2 = 0;
    var ans$$1 = [];
    var l$$5 = arguments.length;
    var v8479 = arguments[0];
    var ml = v8479.length;
    var v8482 = j$$2 < ml;
    for (;v8482;) {
      var i$$16 = 0;
      var row = [];
      var v8481 = i$$16 < l$$5;
      for (;v8481;) {
        var v14591 = arguments[i$$16];
        var v8480 = v14591[j$$2];
        row.push(v8480);
        i$$16++;
        v8481 = i$$16 < l$$5;
      }
      ans$$1.push(row);
      j$$2++;
      v8482 = j$$2 < ml;
    }
    return ans$$1;
  }
  function v58(object$$1) {
    var unlinked;
    var v8486 = $$$1.type(object$$1);
    switch(v8486) {
      case "object":
        unlinked = {};
        var p$$1;
        for (p$$1 in object$$1) {
          var v8483 = object$$1[p$$1];
          var v31221 = $$$1.unlink(v8483);
          unlinked[p$$1] = v31221;
        }
        break;
      case "array":
        unlinked = [];
        var i$$15 = 0;
        var l$$4 = object$$1.length;
        var v8485 = i$$15 < l$$4;
        for (;v8485;) {
          var v8484 = object$$1[i$$15];
          var v31222 = $$$1.unlink(v8484);
          unlinked[i$$15] = v31222;
          i$$15++;
          v8485 = i$$15 < l$$4;
        }
        break;
      default:
        return object$$1;
    }
    return unlinked;
  }
  function v57() {
    var mix = {};
    var i$$14 = 0;
    var l$$3 = arguments.length;
    var v8489 = i$$14 < l$$3;
    for (;v8489;) {
      var object = arguments[i$$14];
      var v14592 = $$$1.type(object);
      var v8487 = v14592 != "object";
      if (v8487) {
        i$$14++;
        v8489 = i$$14 < l$$3;
        continue;
      }
      var key$$20;
      for (key$$20 in object) {
        var op = object[key$$20];
        var mp = mix[key$$20];
        var v8488;
        var v22450 = mp;
        if (v22450) {
          var v26184 = $$$1.type(op);
          v22450 = v26184 == "object";
        }
        var v19170 = v22450;
        if (v19170) {
          var v22451 = $$$1.type(mp);
          v19170 = v22451 == "object";
        }
        var v14593 = v19170;
        if (v14593) {
          v8488 = $$$1.merge(mp, op);
        } else {
          v8488 = $$$1.unlink(op);
        }
        mix[key$$20] = v8488;
      }
      i$$14++;
      v8489 = i$$14 < l$$3;
    }
    return mix;
  }
  function v56(array$$11, f$$1, opt$$1) {
    var l$$2 = array$$11.length;
    var v8490 = l$$2 == 0;
    if (v8490) {
      return opt$$1;
    }
    var v8491;
    var v19171 = arguments.length;
    var v14595 = v19171 == 3;
    if (v14595) {
      v8491 = opt$$1;
    } else {
      var v14594 = l$$2 = l$$2 - 1;
      v8491 = array$$11[v14594];
    }
    var acum = v8491;
    var v8493 = l$$2;
    l$$2 = l$$2 - 1;
    for (;v8493;) {
      var v8492 = array$$11[l$$2];
      acum = f$$1(acum, v8492);
      v8493 = l$$2;
      l$$2 = l$$2 - 1;
    }
    return acum;
  }
  function v55(array$$10, f) {
    function v54(elem$$6, i$$13) {
      var v8494 = f(elem$$6, i$$13);
      ans.push(v8494);
      return;
    }
    var ans = [];
    $$$1.each(array$$10, v54);
    return ans;
  }
  function v53(array$$9, item) {
    var v8495 = Array.indexOf;
    if (v8495) {
      return array$$9.indexOf(item);
    }
    var i$$12 = 0;
    var l$$1 = array$$9.length;
    var v8497 = i$$12 < l$$1;
    for (;v8497;) {
      var v14596 = array$$9[i$$12];
      var v8496 = v14596 === item;
      if (v8496) {
        return i$$12;
      }
      i$$12++;
      v8497 = i$$12 < l$$1;
    }
    return-1;
  }
  function v52(iterable, fn) {
    var type$$27 = $$$1.type(iterable);
    var v8501 = type$$27 == "object";
    if (v8501) {
      var key$$19;
      for (key$$19 in iterable) {
        var v8498 = iterable[key$$19];
        fn(v8498, key$$19);
      }
    } else {
      var i$$11 = 0;
      var l = iterable.length;
      var v8500 = i$$11 < l;
      for (;v8500;) {
        var v8499 = iterable[i$$11];
        fn(v8499, i$$11);
        i$$11++;
        v8500 = i$$11 < l;
      }
    }
    return;
  }
  function v51(elem$$5) {
    var v26185 = $$$1.type;
    var v22452 = v26185.s;
    var v19172 = v22452.call(elem$$5);
    var v14597 = v19172.match(/^\[object\s(.*)\]$/);
    var v8502 = v14597[1];
    var type$$26 = v8502.toLowerCase();
    var v8503 = type$$26 != "object";
    if (v8503) {
      return type$$26;
    }
    var v14598 = elem$$5;
    if (v14598) {
      v14598 = elem$$5.$$family;
    }
    var v8504 = v14598;
    if (v8504) {
      return elem$$5.$$family;
    }
    var v8505;
    var v22453 = elem$$5;
    if (v22453) {
      v22453 = elem$$5.nodeName;
    }
    var v19173 = v22453;
    if (v19173) {
      var v22454 = elem$$5.nodeType;
      v19173 = v22454 == 1;
    }
    var v14599 = v19173;
    if (v14599) {
      v8505 = "element";
    } else {
      v8505 = type$$26;
    }
    return v8505;
  }
  function v50(obj$$16) {
    var type$$25 = $$$1.type(obj$$16);
    var v8506;
    if (type$$25) {
      var v14600;
      var v19174 = type$$25 != "array";
      if (v19174) {
        v14600 = [obj$$16];
      } else {
        v14600 = obj$$16;
      }
      v8506 = v14600;
    } else {
      v8506 = [];
    }
    return v8506;
  }
  function v49() {
    var v8507 = new Date;
    return+v8507;
  }
  function v48(value$$30) {
    function v47() {
      return value$$30;
    }
    var v8508;
    var v19175 = typeof value$$30;
    var v14601 = v19175 == "function";
    if (v14601) {
      v8508 = value$$30;
    } else {
      v8508 = v47;
    }
    return v8508;
  }
  function v46(original, extended) {
    var key$$18;
    var v8509 = extended || {};
    for (key$$18 in v8509) {
      original[key$$18] = extended[key$$18];
    }
    return original;
  }
  function v45() {
    return;
  }
  function v44(w$$5) {
    w$$5 = w$$5 || window;
    var k;
    for (k in $jit) {
      var v14602 = $jit[k];
      var v8510 = v14602.$extend;
      if (v8510) {
        w$$5[k] = $jit[k];
      }
    }
    return;
  }
  function Complex(x$$60, y$$41) {
    this.x = x$$60 || 0;
    this.y = y$$41 || 0;
    return;
  }
  function Polar(theta, rho$$1) {
    this.theta = theta || 0;
    this.rho = rho$$1 || 0;
    return;
  }
  function Options() {
    var args = arguments;
    var i$$25 = 0;
    var l$$7 = args.length;
    var ans$$3 = {};
    var v8514 = i$$25 < l$$7;
    for (;v8514;) {
      var v8511 = args[i$$25];
      var opt$$4 = Options[v8511];
      var v8513 = opt$$4.$extend;
      if (v8513) {
        $$$1.extend(ans$$3, opt$$4);
      } else {
        var v8512 = args[i$$25];
        ans$$3[v8512] = opt$$4;
      }
      i$$25++;
      v8514 = i$$25 < l$$7;
    }
    return ans$$3;
  }
  function Class(properties) {
    function klass$$3() {
      var key$$21;
      for (key$$21 in this) {
        var v19176 = this[key$$21];
        var v14603 = typeof v19176;
        var v8516 = v14603 != "function";
        if (v8516) {
          var v8515 = this[key$$21];
          var v31223 = $$$1.unlink(v8515);
          this[key$$21] = v31223;
        }
      }
      this.constructor = klass$$3;
      var v8517 = Class.prototyping;
      if (v8517) {
        return this;
      }
      var v8518;
      var v14605 = this.initialize;
      if (v14605) {
        var v14604 = this.initialize;
        v8518 = v14604.apply(this, arguments);
      } else {
        v8518 = this;
      }
      var instance = v8518;
      this.$$family = "class";
      return instance;
    }
    properties = properties || {};
    var mutator;
    var v8522 = Class.Mutators;
    for (mutator in v8522) {
      var v14606 = properties[mutator];
      var v8519 = !v14606;
      if (v8519) {
        continue;
      }
      var v8520 = Class.Mutators;
      var v8521 = properties[mutator];
      properties = v8520[mutator](properties, v8521);
      delete properties[mutator];
    }
    $$$1.extend(klass$$3, this);
    klass$$3.constructor = Class;
    klass$$3.prototype = properties;
    return klass$$3;
  }
  function $$$1(d) {
    return document.getElementById(d);
  }
  this.$jit = v44;
  $jit.version = "2.0.1";
  $$$1.empty = v45;
  $$$1.extend = v46;
  $$$1.lambda = v48;
  var v8523 = Date.now;
  var v14607 = !v8523;
  if (v14607) {
    v8523 = v49;
  }
  $$$1.time = v8523;
  $$$1.splat = v50;
  $$$1.type = v51;
  var v8524 = $$$1.type;
  var v14608 = Object.prototype;
  v8524.s = v14608.toString;
  $$$1.each = v52;
  $$$1.indexOf = v53;
  $$$1.map = v55;
  $$$1.reduce = v56;
  $$$1.merge = v57;
  $$$1.unlink = v58;
  $$$1.zip = v59;
  $$$1.rgbToHex = v60;
  $$$1.hexToRgb = v61;
  $$$1.destroy = v62;
  $$$1.clean = v63;
  $$$1.addEvent = v64;
  $$$1.addEvents = v65;
  $$$1.hasClass = v66;
  $$$1.addClass = v67;
  $$$1.removeClass = v68;
  $$$1.getPos = v69;
  $$$1.event = {get:v70, getWheel:v71, isRightClick:v72, getPos:v73, stop:v74};
  $jit.util = $jit.id = $$$1;
  Class.Mutators = {Implements:v76};
  var v8525 = {inherit:v77, override:v78};
  $$$1.extend(Class, v8525);
  var v8526 = Class.prototype;
  v8526.implement = v80;
  $jit.Class = Class;
  $jit.json = {prune:v82, getParent:v83, getSubtree:v84, eachLevel:v85, each:v86};
  $jit.Trans = {$extend:true, linear:v87};
  var Trans = $jit.Trans;
  v101();
  var v8527 = {initialize:v102, setOptions:v103, step:v104, start:v105, startTimer:v107, pause:v108, resume:v109, stopTimer:v110, check:v111};
  var Animation = new Class(v8527);
  var v19177 = [1, 1, 1];
  var v22455 = {x:-100, y:-100, z:-100};
  var v22456 = [.5, .3, .1];
  var v19178 = {direction:v22455, color:v22456};
  var v14609 = {enable:false, ambient:v19177, directional:v19178};
  var v8528 = {Lighting:v14609};
  Options.Canvas = {$extend:true, injectInto:"id", type:"2D", width:false, height:false, useCanvas:false, withLabels:true, background:false, Scene:v8528};
  Options.Tree = {$extend:true, orientation:"left", subtreeOffset:8, siblingOffset:5, indent:10, multitree:false, align:"center"};
  var v8529 = $$$1.empty;
  var v8530 = $$$1.empty;
  var v8531 = ["box", "star", "square"];
  var v8532 = ["BlueViolet", "Brown", "CadetBlue", "Coral", "CornflowerBlue", "Crimson", "DarkCyan", "DarkGoldenrod", "DarkGreen", "DarkKhaki", "DarkOlive Green", "DarkOrange", "DarkRed", "DarkSalmon", "DarkSlateBlue", "DarkSlateGray", "DarkViolet", "DeepPink", "DimGray", "DodgerBlue"];
  var v8533 = {quant:0, quali:1};
  var v8534 = ["#00FFFF", "#00DDFF", "#00BBFF", "#0099FF", "#0088FF", "#0077FF", "#0055FF", "#0044FF", "#0022FF", "#0000FF"];
  Options.PhyloJive = {$extend:true, alignName:false, lateralise:false, collapsedXOffset:25, branchLength:true, levelDistance:40, branchMultiplier:1, initCharacter:false, firstCharacter:false, presentClade:v8529, onPresentClade:v8530, rangeCount:10, shapes:v8531, color:v8532, typeEnum:v8533, quantColor:v8534, quantShape:"quant", selectedCharacters:[]};
  Options.Node = {$extend:false, overridable:false, type:"circle", color:"#ccb", alpha:1, dim:3, height:20, width:90, autoHeight:false, autoWidth:false, lineWidth:1, transform:true, align:"center", angularWidth:1, span:1, CanvasStyles:{}};
  Options.Edge = {$extend:false, overridable:false, type:"line", color:"#ccb", lineWidth:1, dim:15, alpha:1, epsilon:7, CanvasStyles:{}};
  var v19179 = $jit.Trans;
  var v14610 = v19179.Quart;
  var v8535 = v14610.easeInOut;
  Options.Fx = {$extend:true, fps:40, duration:2500, transition:v8535, clearCanvas:true};
  Options.Label = {$extend:false, overridable:false, type:"HTML", style:" ", size:10, family:"sans-serif", textAlign:"center", textBaseline:"alphabetic", color:"#fff"};
  var v8536 = $$$1.empty;
  var v8537 = $$$1.empty;
  Options.Tips = {$extend:false, enable:false, type:"auto", offsetX:20, offsetY:20, force:false, onShow:v8536, onHide:v8537};
  Options.NodeStyles = {$extend:false, enable:false, type:"auto", stylesHover:false, stylesClick:false};
  var v8538 = $$$1.empty;
  var v8539 = $$$1.empty;
  var v8540 = $$$1.empty;
  var v8541 = $$$1.empty;
  var v8542 = $$$1.empty;
  var v8543 = $$$1.empty;
  var v8544 = $$$1.empty;
  var v8545 = $$$1.empty;
  var v8546 = $$$1.empty;
  var v8547 = $$$1.empty;
  var v8548 = $$$1.empty;
  var v8549 = $$$1.empty;
  var v8550 = $$$1.empty;
  Options.Events = {$extend:false, enable:false, enableForEdges:false, type:"auto", onClick:v8538, onRightClick:v8539, onMouseMove:v8540, onMouseEnter:v8541, onMouseLeave:v8542, onDragStart:v8543, onDragMove:v8544, onDragCancel:v8545, onDragEnd:v8546, onTouchStart:v8547, onTouchMove:v8548, onTouchEnd:v8549, onMouseWheel:v8550};
  Options.Navigation = {$extend:false, enable:false, type:"auto", panning:false, zooming:false};
  var v8551 = $$$1.empty;
  var v8552 = $$$1.empty;
  var v8553 = $$$1.empty;
  var v8554 = $$$1.empty;
  var v8555 = $$$1.empty;
  var v8556 = $$$1.empty;
  var v8557 = $$$1.empty;
  var v8558 = $$$1.empty;
  var v8559 = $$$1.empty;
  var v8560 = $$$1.empty;
  Options.Controller = {$extend:true, onBeforeCompute:v8551, onAfterCompute:v8552, onCreateLabel:v8553, onPlaceLabel:v8554, onComplete:v8555, onBeforePlotLine:v8556, onAfterPlotLine:v8557, onBeforePlotNode:v8558, onAfterPlotNode:v8559, onBeforeRemoveNode:v8560, request:false};
  var v8561 = $$$1.empty;
  var v8562 = $$$1.lambda(false);
  var ExtrasInitializer = {initialize:v112, initializePost:v8561, setAsProperty:v8562, isEnabled:v113, isLabel:v114, isDescendantOf:v115};
  var v8563 = $$$1.empty;
  var v8564 = $$$1.empty;
  var v8565 = $$$1.empty;
  var v8566 = $$$1.empty;
  var v8567 = $$$1.empty;
  var v8568 = $$$1.empty;
  var v8569 = $$$1.empty;
  var v8570 = $$$1.empty;
  var v8571 = $$$1.empty;
  var v8572 = $$$1.empty;
  var EventsInterface = {onMouseUp:v8563, onMouseDown:v8564, onMouseMove:v8565, onMouseOver:v8566, onMouseOut:v8567, onMouseWheel:v8568, onTouchStart:v8569, onTouchMove:v8570, onTouchEnd:v8571, onTouchCancel:v8572};
  var v8573 = {initialize:v116, attachEvents:v125, register:v126, handleEvent:v127, makeEventObject:v132};
  var MouseEventsManager = new Class(v8573);
  var Extras = {initializeExtras:v134};
  Extras.Classes = {};
  var v8574 = Extras.Classes;
  var v19180 = [ExtrasInitializer, EventsInterface];
  var v19181 = $$$1.lambda(true);
  var v14611 = {Implements:v19180, initializePost:v135, setAsProperty:v19181, onMouseUp:v136, onMouseOut:v137, onMouseOver:v138, onMouseMove:v139, onMouseWheel:v140, onMouseDown:v141, onTouchStart:v142, onTouchMove:v143, onTouchEnd:v144};
  var v31224 = new Class(v14611);
  v8574.Events = v31224;
  var v8575 = Extras.Classes;
  var v19182 = [ExtrasInitializer, EventsInterface];
  var v19183 = $$$1.lambda(true);
  var v14612 = {Implements:v19182, initializePost:v145, setAsProperty:v19183, onMouseOut:v146, onMouseOver:v147, onMouseMove:v148, setTooltipPosition:v149, hide:v150};
  var v31225 = new Class(v14612);
  v8575.Tips = v31225;
  var v8576 = Extras.Classes;
  var v19184 = [ExtrasInitializer, EventsInterface];
  var v14613 = {Implements:v19184, initializePost:v151, onMouseOut:v152, onMouseOver:v153, onMouseDown:v154, onMouseUp:v155, getRestoredStyles:v156, toggleStylesOnHover:v157, toggleStylesOnClick:v158, toggleStylesOn:v159, onClick:v161, onMouseMove:v163};
  var v31226 = new Class(v14613);
  v8576.NodeStyles = v31226;
  var v8577 = Extras.Classes;
  var v19185 = [ExtrasInitializer, EventsInterface];
  var v14614 = {Implements:v19185, initializePost:v164, onMouseWheel:v165, onMouseDown:v166, onMouseMove:v167, onMouseUp:v168};
  var v31227 = new Class(v14614);
  v8577.Navigation = v31227;
  var Canvas;
  v200();
  $jit.Polar = Polar;
  Polar.prototype = {getc:v201, getp:v202, set:v203, setc:v204, setp:v205, clone:v206, toComplex:v207, add:v208, scale:v209, equals:v210, $add:v211, $madd:v212, $scale:v213, isZero:v214, interpolate:v215};
  var v8578 = Polar;
  var v31228 = new Polar(0, 0);
  v8578.KER = v31228;
  $jit.Complex = Complex;
  Complex.prototype = {getc:v216, getp:v217, set:v218, setc:v219, setp:v220, clone:v221, toPolar:v222, norm:v223, squaredNorm:v224, add:v225, prod:v226, conjugate:v227, scale:v228, equals:v229, $add:v230, $prod:v231, $conjugate:v232, $scale:v233, $div:v234, isZero:v235};
  var v8579 = Complex;
  var v31229 = new Complex(0, 0);
  v8579.KER = v31229;
  var v8580 = Complex;
  var v31230 = new Complex(0, 1);
  v8580.IM = v31230;
  var v8581 = $jit;
  var v14615 = {initialize:v239, getNode:v240, get:v241, getByName:v242, getAdjacence:v243, addNode:v244, addAdjacence:v245, removeNode:v246, removeAdjacence:v247, hasNode:v248, empty:v249};
  var v31231 = new Class(v14615);
  v8581.Graph = v31231;
  var Graph = $jit.Graph;
  var Accessors;
  v263();
  var v8582 = Graph;
  var v14616 = {initialize:v264, adjacentTo:v265, getAdjacency:v266, getPos:v267, setPos:v268};
  var v31232 = new Class(v14616);
  v8582.Node = v31232;
  var v8583 = Graph.Node;
  v8583.implement(Accessors);
  var v8584 = Graph;
  var v14617 = {initialize:v269};
  var v31233 = new Class(v14617);
  v8584.Adjacence = v31233;
  var v8585 = Graph.Adjacence;
  v8585.implement(Accessors);
  Graph.Util = {filter:v272, getNode:v273, eachNode:v274, each:v275, eachAdjacency:v276, computeLevels:v279, eachBFS:v281, eachLevel:v283, eachSubgraph:v284, eachSubnode:v285, anySubnode:v288, getSubnodes:v290, getParents:v292, isDescendantOf:v293, clean:v295, getClosestNodeToOrigin:v296, getClosestNodeToPos:v298};
  var v8586 = ["get", "getNode", "each", "eachNode", "computeLevels", "eachBFS", "clean", "getClosestNodeToPos", "getClosestNodeToOrigin"];
  $$$1.each(v8586, v300);
  var v8587 = ["eachAdjacency", "eachLevel", "eachSubgraph", "eachSubnode", "anySubnode", "getSubnodes", "getParents", "isDescendantOf"];
  $$$1.each(v8587, v302);
  var v8588 = {type:"nothing", duration:2E3, hideLabels:true, fps:30};
  Graph.Op = {options:v8588, initialize:v303, removeNode:v309, removeEdge:v315, sum:v321, morph:v335, contract:v338, expand:v340, preprocessSum:v344};
  var v14618 = $$$1.empty;
  var v14619 = $$$1.lambda(false);
  var v8589 = {"render":v14618, "contains":v14619};
  var v8590 = {"render":v345, "contains":v346};
  var v8591 = {"render":v347, "contains":v348};
  var v8592 = {"render":v349, "contains":v350};
  var v8593 = {"render":v351, "contains":v352};
  var v8594 = {"render":v353, "contains":v354};
  var v8595 = {"render":v355, "contains":v356};
  var NodeHelper = {"none":v8589, "circle":v8590, "ellipse":v8591, "square":v8592, "rectangle":v8593, "triangle":v8594, "star":v8595};
  var v8596 = {"render":v357, "contains":v358};
  var v8597 = {"render":v359, "contains":v360};
  var v14620 = $$$1.lambda(false);
  var v8598 = {"render":v361, "contains":v14620};
  var EdgeHelper = {"line":v8596, "arrow":v8597, "hyperline":v8598};
  var v14621 = {"border":"color", "color":"color", "width":"number", "height":"number", "dim":"number", "alpha":"number", "lineWidth":"number", "angularWidth":"number", "span":"number", "valueArray":"array-number", "dimArray":"array-number", "vertices":"polygon"};
  var v14622 = {"globalAlpha":"number", "fillStyle":"color", "strokeStyle":"color", "lineWidth":"number", "shadowBlur":"number", "shadowColor":"color", "shadowOffsetX":"number", "shadowOffsetY":"number", "miterLimit":"number"};
  var v14623 = {"size":"number", "color":"color"};
  var v8599 = {"map":v14621, "canvas":v14622, "label":v14623, "compute":v363, "moebius":v364, "linear":v365, "polar":v366, "number":v367, "color":v368, "array-number":v369, "node":v370, "edge":v371, "node-property":v372, "edge-property":v373, "label-property":v374, "node-style":v375, "edge-style":v376, "polygon":v378};
  Graph.Plot = {initialize:v362, nodeHelper:NodeHelper, edgeHelper:EdgeHelper, Interpolator:v8599, sequence:v380, prepare:v385, animate:v389, nodeFx:v392, plot:v395, plotTree:v397, plotNode:v398, plotLine:v399};
  var v8600 = Graph;
  var v14624 = Graph.Plot;
  var v19186 = {"linear":v400};
  var v14625 = {Interpolator:v19186, plotNode:v402, plotLine:v404, plotElement:v405};
  var v31234 = $$$1.merge(v14624, v14625);
  v8600.Plot3D = v31234;
  Graph.Label = {};
  var v8601 = Graph.Label;
  var v19187 = $$$1.empty;
  var v14626 = {initialize:v406, plotLabel:v407, renderLabel:v408, hideLabel:v410, hideLabels:v19187};
  var v31235 = new Class(v14626);
  v8601.Native = v31235;
  var v8602 = Graph.Label;
  var v14627 = {labelsHidden:false, labelContainer:false, labels:{}, getLabelContainer:v411, getLabel:v412, hideLabels:v413, clearLabels:v414, disposeLabel:v415, hideLabel:v417, fitsInCanvas:v418};
  var v31236 = new Class(v14627);
  v8602.DOM = v31236;
  var v8603 = Graph.Label;
  var v22457 = Graph.Label;
  var v19188 = v22457.DOM;
  var v14628 = {Implements:v19188, plotLabel:v419};
  var v31237 = new Class(v14628);
  v8603.HTML = v31237;
  var v8604 = Graph.Label;
  var v22458 = Graph.Label;
  var v19189 = v22458.DOM;
  var v14629 = {Implements:v19189, plotLabel:v420};
  var v31238 = new Class(v14629);
  v8604.SVG = v31238;
  var v8605 = Graph;
  var v14630 = {initialize:v421, translate:v424, setRightLevelToShow:v426, getRightLevelToShow:v427};
  var v31239 = new Class(v14630);
  v8605.Geom = v31239;
  var Loader = {construct:v430, loadJSON:v431, toJSON:v435};
  var Layouts = $jit.Layouts = {};
  var NodeDim = {label:null, compute:v437, initializeLabel:v438, setLabelStyles:v439};
  var v8606 = Layouts;
  var v31240 = v449();
  v8606.PhyloJive = v31240;
  var v8607 = $jit;
  var v31241 = v539();
  v8607.Phylo = v31241;
  var v8608 = $jit.Phylo;
  v8608.$extend = true;
  var v8609 = $jit.Phylo;
  var v19190 = Graph.Op;
  var v14631 = {Implements:v19190};
  var v31242 = new Class(v14631);
  v8609.Op = v31242;
  var v8610 = $jit.Phylo;
  var v14632 = {initialize:v540, requestNodes:v542, contract:v545, hide:v548, expand:v551, show:v555, prepare:v556, getNodesWithChildren:v558, plotStep:v561, getSiblings:v564};
  var v31243 = new Class(v14632);
  v8610.Group = v31243;
  var v8611 = $jit.Phylo;
  var v19191 = Graph.Geom;
  var v14633 = {Implements:v19191, switchOrientation:v565, dispatch:v566, getSize:v567, getTreeBaseSize:v569, getEdge:v571, getScaledTreePosition:v573, treeFitsInCanvas:v575};
  var v31244 = new Class(v14633);
  v8611.Geom = v31244;
  var v8612 = Graph.Util;
  v8612.eachAdjacency = v577;
  var v8613 = Graph.Plot;
  v8613.plotTree = v579;
  var v8614 = $jit.Phylo;
  var v19192 = Graph.Plot;
  var v14634 = {Implements:v19192, plotSubtree:v581, getAlignedPos:v582, getOrientation:v583};
  var v31245 = new Class(v14634);
  v8614.Plot = v31245;
  var v8615 = $jit.Phylo;
  v8615.Label = {};
  var v14635 = $jit.Phylo;
  var v8616 = v14635.Label;
  var v22459 = Graph.Label;
  var v19193 = v22459.Native;
  var v14636 = {Implements:v19193, renderLabel:v584};
  var v31246 = new Class(v14636);
  v8616.Native = v31246;
  var v14637 = $jit.Phylo;
  var v8617 = v14637.Label;
  var v22460 = Graph.Label;
  var v19194 = v22460.DOM;
  var v14638 = {Implements:v19194, placeLabel:v585};
  var v31247 = new Class(v14638);
  v8617.DOM = v31247;
  var v14639 = $jit.Phylo;
  var v8618 = v14639.Label;
  var v27710 = $jit.Phylo;
  var v26186 = v27710.Label;
  var v22461 = v26186.DOM;
  var v26187 = Graph.Label;
  var v22462 = v26187.SVG;
  var v19195 = [v22461, v22462];
  var v14640 = {Implements:v19195, initialize:v586};
  var v31248 = new Class(v14640);
  v8618.SVG = v31248;
  var v14641 = $jit.Phylo;
  var v8619 = v14641.Label;
  var v27711 = $jit.Phylo;
  var v26188 = v27711.Label;
  var v22463 = v26188.DOM;
  var v26189 = Graph.Label;
  var v22464 = v26189.HTML;
  var v19196 = [v22463, v22464];
  var v14642 = {Implements:v19196, initialize:v587};
  var v31249 = new Class(v14642);
  v8619.HTML = v31249;
  var v14643 = $jit.Phylo;
  var v8620 = v14643.Plot;
  var v22465 = $$$1.empty;
  var v22466 = $$$1.lambda(false);
  var v19197 = {"render":v22465, "contains":v22466};
  var v19198 = {"render":v588, "contains":v589};
  var v19199 = {"render":v590, "contains":v591};
  var v19200 = {"render":v592, "contains":v593};
  var v19201 = {"render":v594, "contains":v595};
  var v19202 = {"render":v596, "contains":v597};
  var v14644 = {"none":v19197, "circle":v19198, "square":v19199, "ellipse":v19200, "rectangle":v19201, "triangle":v19202};
  var v31250 = new Class(v14644);
  v8620.NodeTypes = v31250;
  var v14645 = $jit.Phylo;
  var v8621 = v14645.Plot;
  var v19203 = $$$1.empty;
  var v19204 = {"render":v598, "contains":v599};
  var v19205 = {"render":v600, "contains":v601};
  var v19206 = {"render":v602};
  var v19207 = {"render":v603};
  var v19208 = {"render":v604};
  var v19209 = {"render":v605, "contains":v606};
  var v14646 = {"none":v19203, "line":v19204, "arrow":v19205, "quadratic:begin":v19206, "quadratic:end":v19207, "bezier":v19208, "rectangular":v19209};
  var v31251 = new Class(v14646);
  v8621.EdgeTypes = v31251;
  var v14647 = Extras.Classes;
  var v8622 = v14647.Navigation;
  var v8623 = {onMouseWheel:v607};
  v8622.implement(v8623);
  var v8624 = Graph.Util;
  v8624.computeLevels = v610;
  NodeHelper.triangle = {render:v611, contains:v612};
  var v8625 = window.CanvasRenderingContext2D;
  if (v8625) {
    v8625 = CanvasRenderingContext2D.prototype;
  }
  var CP = v8625;
  var v14648 = CP;
  if (v14648) {
    v14648 = CP.lineTo;
  }
  var v8626 = v14648;
  if (v8626) {
    CP.dashedLine = v613;
  }
  return;
}
function v43() {
  function v42() {
    return;
  }
  function v41(newickTree) {
    var v14649 = typeof newickTree;
    var v8627 = v14649 === "undefined";
    if (v8627) {
      alert("tree is not defined.");
      return;
    }
    var json;
    var legendElem;
    Smits.NewickParse(newickTree);
    var v8628 = Smits.getRoot();
    var v31252 = v8628.json();
    this.tree = v31252;
    var v8629 = this.tree;
    st.loadJSON(v8629);
    st.compute();
    var v8630 = st.config;
    v8630.initCharacter = false;
    legendElem = $jit.id("legend");
    var v8636 = st.character;
    if (v8636) {
      var v8631 = st.colorCharacter();
      var v14650 = !v8631;
      if (v14650) {
        v8631 = "";
      }
      html = v8631;
      var v8632 = jQuery("#legendBody");
      v8632.html(html);
      var v8633 = legendElem.style;
      v8633.display = "inline";
      var v8634 = st.characterList;
      updateCharacter(v8634);
    } else {
      var v8635 = legendElem.style;
      v8635.display = "none";
    }
    var v8637 = st.root;
    st.onClick(v8637);
    st.fitScreen();
    return;
  }
  var tree;
  var character$$1;
  return{drawTree:v41, drawCharacter:v42};
}
function v40() {
  var rightContainer = $jit.id("right-jitcontainer");
  var v14651 = rightContainer.innerHTML;
  rightContainer.innerHTML = v14651 + '<div id="tabs"><ul><li><a href="#tabAction">Action</a></li><li><a href="#tabCharacter">Character</a></li><li><a href="#tabLegend">Legend</a></li><li><a href="#tabSearch">Search</a></li><li><a href="#tabInput">Input</a></li></ul>  <div id="tabCharacter"><h4>Select Character</h4><p><label>Select: </label><br/><label id="characterSelection">First Characters: <select id="firstCharacter" onChange="onSetCharacter ( )"> </select><br/>Second Chracter: <select id ="secondCharacter" onChange="onSetCharacter ( )"></select><br/>Third Chracter: <select id ="thirdCharacter" onChange="onSetCharacter ( )"></select></label></p></div><div id ="tabAction"><h4>Actions</h4><p><table><tr><td>Node Actions</td></tr><tr><td>Select</td><td><input id="selectClade" name="options" type="radio" checked /><tr><td>Expand / Collapse</td><td><div id="expandDiv"><input id = "expand" name="options" type="radio" /></div></td></tr><tr><td>Rotate</td><td><div id="rotateDiv"><input id = "rotate" name="options" type="radio" /></div></td></tr><tr><td>Set Root</td><td><input id = "setRoot" name="options" type = "radio" onclick = "onSetRoot ( this );"/></td></tr>\x3c!--<tr><td>Get Characters</td><td><input id = "character" name="options" type = "radio" onclick = "onGetCharacter ( this );"/></td></tr>--\x3e</table><br/><table><tr><td>Tree Actions</td></tr><tr><td>Align Names</td><td><div id="settings"><input id="alignName" type="checkbox"  onclick="onClickAlign ( this )"/></div></td></tr><tr><td>Ladderize</td><td><input id = "lateralise"  checked type = "checkbox" onclick = "onLateralise ( this );"/></td></tr><tr><td>Animate</td><td><input id="animate" type="checkbox" checked onClick = "onAnimate( this )"/></td></tr><tr><td>Branch Length</td><td><input id="branchLength" type="checkbox" checked onClick = "onBranchLength( this )"/></td></tr><tr><td>Length Multiplier</td><td><label><input id="branchMultiplier" name="multiply" type="radio" onClick = "onBranchMultiply( 0.1 )"/>x0.1</label> <label><input name="multiply" id="branchMultiplier" type="radio" onClick = "onBranchMultiply( 1 )"/>x1</label> <label><input id="branchMultiplier" name="multiply" type="radio" checked onClick = "onBranchMultiply( 5 )"/>x5</label></td></tr>\x3c!--<tr><td>Selected Nodes</td><td><div id="selected"></div></td></tr>--\x3e</table></p></div><div id="tabLegend"><h4>Legend</h4><p><table id ="legend"><tbody id = "legendBody"><tr><th>Legend:</th><td></td></tr></tbody></table></p></div><div id="tabSearch"><h4>Search</h4><p><table><tr><td>Search:</td><td><input id="searchString" type="text" size="15" /></td><tr><td></td><td><input class ="foswikiButton" type="submit" id="next" value="next"/><input type="submit" id="previous" class ="foswikiButton" value="previous"/></td></tr></table></p></div><div id="tabInput"><h4>Input Tree</h4><p><table><tr><td>Input Tree:</td><td><textarea id="newickTree" size="15"></textarea></td></tr><tr><td></td><td><input id="renderTree" type="submit" value="Render" onclick="onRender ( this )"/></td></tr></table></p></div></div>';
  var v8638 = jQuery("#tabs");
  v8638.tabs();
  return;
}
function v39(character) {
  var v8639 = !character;
  if (v8639) {
    return;
  }
  var options$$1 = "";
  var unselected = "";
  var i$$2;
  var name$$30;
  var v19210 = st.config;
  var v14652 = v19210.selectedCharacters;
  var v8640 = v14652[0];
  var v14653 = !v8640;
  if (v14653) {
    v8640 = false;
  }
  var selectedfirst = v8640;
  var v19211 = st.config;
  var v14654 = v19211.selectedCharacters;
  var v8641 = v14654[0];
  var v14655 = !v8641;
  if (v14655) {
    v8641 = false;
  }
  var first$$1 = v8641;
  var v19212 = st.config;
  var v14656 = v19212.selectedCharacters;
  var v8642 = v14656[1];
  var v14657 = !v8642;
  if (v14657) {
    v8642 = false;
  }
  var second = v8642;
  var v19213 = st.config;
  var v14658 = v19213.selectedCharacters;
  var v8643 = v14658[2];
  var v14659 = !v8643;
  if (v14659) {
    v8643 = false;
  }
  var third = v8643;
  var select1 = "";
  var select2 = "";
  var select3 = "";
  i$$2 = 0;
  var v14660 = character.length;
  var v8648 = i$$2 < v14660;
  for (;v8648;) {
    var opt1 = "";
    var opt2 = "";
    var opt3 = "";
    var v14661 = first$$1 !== false;
    if (v14661) {
      var v19214 = character[i$$2];
      v14661 = first$$1 === v19214;
    }
    var v8644 = v14661;
    if (v8644) {
      opt1 = 'selected="selected"';
    }
    var v14662 = second !== false;
    if (v14662) {
      var v19215 = character[i$$2];
      v14662 = second === v19215;
    }
    var v8645 = v14662;
    if (v8645) {
      opt2 = 'selected="selected"';
    }
    var v14663 = third !== false;
    if (v14663) {
      var v19216 = character[i$$2];
      v14663 = third === v19216;
    }
    var v8646 = v14663;
    if (v8646) {
      opt3 = 'selected="selected"';
    }
    var v8647 = character[i$$2];
    name$$30 = v8647.replace(/_/g, " ");
    var v28676 = "<option " + opt1;
    var v27712 = v28676 + ' value="';
    var v27713 = character[i$$2];
    var v26190 = v27712 + v27713;
    var v22467 = v26190 + '" >';
    var v19217 = v22467 + name$$30;
    var v14664 = v19217 + "</option>";
    select1 = select1 + v14664;
    var v28677 = "<option " + opt2;
    var v27714 = v28677 + ' value="';
    var v27715 = character[i$$2];
    var v26191 = v27714 + v27715;
    var v22468 = v26191 + '" >';
    var v19218 = v22468 + name$$30;
    var v14665 = v19218 + "</option>";
    select2 = select2 + v14665;
    var v28678 = "<option " + opt3;
    var v27716 = v28678 + ' value="';
    var v27717 = character[i$$2];
    var v26192 = v27716 + v27717;
    var v22469 = v26192 + '" >';
    var v19219 = v22469 + name$$30;
    var v14666 = v19219 + "</option>";
    select3 = select3 + v14666;
    i$$2 = i$$2 + 1;
    var v14667 = character.length;
    v8648 = i$$2 < v14667;
  }
  if (select2) {
    select2 = '<option value=""> Please select </option>' + select2;
  }
  if (select3) {
    select3 = '<option value=""> Please select </option>' + select3;
  }
  var v8649 = jQuery("#firstCharacter");
  v8649.html(select1);
  var v8650 = jQuery("#secondCharacter");
  v8650.html(select2);
  var v8651 = jQuery("#thirdCharacter");
  v8651.html(select3);
  return;
}
function v38(opt) {
  function v37() {
    toggleScreen(this);
    return;
  }
  function $E(tag, props$$1) {
    var elem$$1 = document.createElement(tag);
    var p;
    for (p in props$$1) {
      var v19220 = props$$1[p];
      var v14668 = typeof v19220;
      var v8655 = v14668 == "object";
      if (v8655) {
        var v8652 = $jit.util;
        var v8653 = elem$$1[p];
        var v8654 = props$$1[p];
        v8652.extend(v8653, v8654);
      } else {
        elem$$1[p] = props$$1[p];
      }
    }
    return elem$$1;
  }
  opt.codeBase = "";
  var popupHTML = '<div id="popup-close" style="position:relative; width:100%; background-color:lightblue"><a href="#" onclick="this.parentNode.parentNode.style.display=\'none\';" onmouseover="this.style.cursor=\'pointer\';" class="ui-dialog-titlebar-close ui-corner-all" role="button"><span class="ui-icon ui-icon-closethick">close</span></a></div><div id="popup-text"></div>';
  var v30638 = opt.codeBase;
  var v30540 = '<div style="position:relative"><div id="panup" style="position: absolute; left: 13px; top: 4px; width: 18px; height: 18px; cursor: pointer;"><img id="north" src="' + v30638;
  var v30394 = v30540 + 'resources/north-mini.png" /></div><div id="panleft" style="position: absolute; left: 4px; top: 22px; width: 18px; height: 18px; cursor: pointer;"><img id="west" src="';
  var v30395 = opt.codeBase;
  var v30224 = v30394 + v30395;
  var v29989 = v30224 + 'resources/west-mini.png" /></div><div id="panright" style="position: absolute; left: 22px; top: 22px; width: 18px; height: 18px; cursor: pointer;"><img id="east" src="';
  var v29990 = opt.codeBase;
  var v29723 = v29989 + v29990;
  var v29318 = v29723 + 'resources/east-mini.png" /></div><div id="pandown" style="position: absolute; left: 13px; top: 40px; width: 18px; height: 18px; cursor: pointer;"><img id="south" src="';
  var v29319 = opt.codeBase;
  var v28679 = v29318 + v29319;
  var v27718 = v28679 + 'resources/south-mini.png" /></div><div id="zoomout" style="position: absolute; left: 13px; top: 99px; width: 18px; height: 18px; cursor: pointer;"><img id="zoomOUT" src="';
  var v27719 = opt.codeBase;
  var v26193 = v27718 + v27719;
  var v22470 = v26193 + 'resources/zoom-minus-mini.png" /></div><div id="zoomworld" style="position: absolute; left: 13px; top: 81px; width: 18px; height: 18px; cursor: pointer;"><img id="world" style="position: relative; width: 18px; height: 18px;" src="';
  var v22471 = opt.codeBase;
  var v19221 = v22470 + v22471;
  var v14669 = v19221 + 'resources/zoom-world-mini.png"></div><div id="zoomin" style="position: absolute; left: 13px; top: 63px; width: 18px; height: 18px; cursor: pointer;"><img id="zoomIN" src="';
  var v14670 = opt.codeBase;
  var v8656 = v14669 + v14670;
  var navHTML = v8656 + 'resources/zoom-plus-mini.png" /></div><div style="position:absolute;left:-50px;top:123px;width:130px"> Status: <span id="log"></span></div></div>';
  var jitcontainer;
  var rightJitContainer;
  var centerJitContainer;
  var v8657;
  var v22472 = opt.injectInto;
  var v19222 = typeof v22472;
  var v14672 = v19222 == "string";
  if (v14672) {
    v8657 = opt.injectInto;
  } else {
    var v14671 = opt.injectInto;
    v8657 = v14671.id;
  }
  var id = v8657;
  var infovis;
  var parent;
  var popup;
  var navigation;
  var menu;
  var border$$2;
  var v14673 = opt.width;
  var v8658 = v14673 * 100;
  border$$2 = v8658 / 90;
  var v19223 = border$$2 + "px";
  var v27720 = opt.height;
  var v26194 = v27720 + 55;
  var v26195 = border$$2 / 20;
  var v22473 = v26194 + v26195;
  var v19224 = v22473 + "px";
  var v14674 = {"position":"relative", "width":v19223, "height":v19224};
  var v8659 = {"id":"jitcontainer", "className":"clearfix roundedCorner", "style":v14674};
  jitcontainer = $E("div", v8659);
  var v14675 = {display:"none"};
  var v8660 = {"id":"right-jitcontainer", "className":"phylojivepadding", "style":v14675};
  rightJitContainer = $E("div", v8660);
  var v8661 = {"id":"center-jitcontainer", "className":"phylojivepadding"};
  centerJitContainer = $E("div", v8661);
  var v14676 = "#" + id;
  var v8662 = jQuery(v14676);
  infovis = v8662[0];
  parent = infovis.parentNode;
  parent.replaceChild(jitcontainer, infovis);
  centerJitContainer.appendChild(infovis);
  jitcontainer.appendChild(centerJitContainer);
  jitcontainer.appendChild(rightJitContainer);
  var v14677 = {"color":"black", "display":"none", "border":"1px solid green", "background-color":"#B5D397", "position":"absolute", "left":"50px", "top":"90px", "overflow":"auto", "text-align":"left"};
  var v8663 = {"id":"popup", "className":"", "style":v14677};
  popup = $E("div", v8663);
  var v8664 = jQuery(popup);
  v8664.html(popupHTML);
  centerJitContainer.appendChild(popup);
  var v8665 = jQuery(popup);
  var v8666 = {maxHeight:450, maxWidth:350, minHeight:250, minWidth:170};
  v8665.resizable(v8666);
  var v8667 = jQuery(popup);
  var v19225 = opt.injectInto;
  var v14678 = "#" + v19225;
  var v8668 = {handle:"#popup-close", containment:v14678};
  v8667.draggable(v8668);
  var v26196 = opt.width;
  var v22474 = v26196 - 50;
  var v19226 = v22474 + "px";
  var v14679 = {"left":v19226};
  var v8669 = {"id":"navigationPanel", "style":v14679};
  navigation = $E("div", v8669);
  var v8670 = jQuery(navigation);
  v8670.html(navHTML);
  jitcontainer.appendChild(navigation);
  var v8671 = {"id":"jitmenubutton", "className":"menubutton"};
  menu = $E("div", v8671);
  var v8672 = jQuery(menu);
  v8672.click(v37);
  jitcontainer.appendChild(menu);
  return;
}
function v36(text$$7) {
  var v14680 = this.elem;
  var v8673 = !v14680;
  if (v8673) {
    var v31253 = document.getElementById("log");
    this.elem = v31253;
  }
  var v8674 = this.elem;
  v8674.innerHTML = text$$7;
  return;
}
function v35() {
  var ua = navigator.userAgent;
  var v8675 = ua.match(/iPhone/i);
  var v14681 = !v8675;
  if (v14681) {
    v8675 = ua.match(/iPad/i);
  }
  var iStuff = v8675;
  var typeOfCanvas = typeof HTMLCanvasElement;
  var v8676 = typeOfCanvas === "object";
  var v14682 = !v8676;
  if (v14682) {
    v8676 = typeOfCanvas === "function";
  }
  var nativeCanvasSupport = v8676;
  var v8677 = nativeCanvasSupport;
  if (v8677) {
    var v26197 = document.createElement("canvas");
    var v22475 = v26197.getContext("2d");
    var v19227 = v22475.fillText;
    var v14683 = typeof v19227;
    v8677 = v14683 === "function";
  }
  var textSupport = v8677;
  var v8678;
  var v19228 = !nativeCanvasSupport;
  var v22477 = !v19228;
  if (v22477) {
    var v22476 = textSupport;
    if (v22476) {
      v22476 = !iStuff;
    }
    v19228 = v22476;
  }
  var v14684 = v19228;
  if (v14684) {
    v8678 = "Native";
  } else {
    v8678 = "HTML";
  }
  labelType = v8678;
  nativeTextSupport = labelType === "Native";
  useGradients = nativeCanvasSupport;
  var v14685 = iStuff;
  var v19229 = !v14685;
  if (v19229) {
    v14685 = !nativeCanvasSupport;
  }
  var v8679 = v14685;
  animate = !v8679;
  return;
}
function smitsNode2JSON(node$$2) {
  var childJSON = [];
  var leaves = 0;
  var i$$3 = 0;
  var v19230 = node$$2.children;
  var v14686 = v19230.length;
  var v8681 = i$$3 < v14686;
  for (;v8681;) {
    var v14687 = node$$2.children;
    var v8680 = v14687[i$$3];
    var j = smitsNode2JSON(v8680);
    childJSON.push(j);
    var v19231 = j.data;
    var v14688 = v19231.leaf;
    leaves = leaves + v14688;
    var v19232 = j.data;
    var v14689 = v19232.leaves;
    leaves = leaves + v14689;
    i$$3++;
    var v19233 = node$$2.children;
    var v14690 = v19233.length;
    v8681 = i$$3 < v14690;
  }
  var that$$1 = node$$2;
  var sampleid = "";
  var v14691 = childJSON.length;
  var v8691 = v14691 !== 0;
  if (v8691) {
    var v8682 = node$$2.id;
    var v8683 = node$$2.name;
    var v14692 = node$$2.len;
    var v8684 = {"leaves":leaves, "leaf":0, "len":v14692, "$type":"circle", "$dim":5, "$color":"#fff"};
    return{"id":v8682, "name":v8683, "data":v8684, "children":childJSON};
  } else {
    var v8685 = node$$2.name;
    var v31254 = v8685.replace(/_/g, " ");
    node$$2.name = v31254;
    var v8686 = node$$2.name;
    var sampleArray = v8686.split(" ");
    var v14693 = sampleArray.length;
    var v8687 = v14693 > 1;
    if (v8687) {
      sampleid = sampleArray[1];
    }
    var name$$31 = sampleArray[0];
    var v8688 = node$$2.id;
    var v8689 = node$$2.name;
    var v14694 = node$$2.len;
    var v8690 = {"leaves":0, "leaf":1, "len":v14694, "$height":20, "$type":"none", "sampleid":sampleid, "name":name$$31};
    var nodeJSON = {"id":v8688, "name":v8689, "data":v8690, "children":childJSON};
    return nodeJSON;
  }
  return;
}
function phylogenyExplorer_init(initial) {
  function v34(char$$5) {
    var chars = char$$5.split("/");
    var index$$42 = ["firstCharacter", "secondCharacter", "thirdCharacter"];
    var i$$10 = 0;
    var v14695 = chars.length;
    var v8696 = i$$10 < v14695;
    for (;v8696;) {
      var v8692 = chars[i$$10];
      var ch = unescape(v8692);
      var v19234 = index$$42[i$$10];
      var v14696 = "#" + v19234;
      var v8693 = jQuery(v14696);
      var select$$1 = v8693[0];
      var j$$1 = 0;
      var v19235 = select$$1.options;
      var v14697 = v19235.length;
      var v8695 = j$$1 < v14697;
      for (;v8695;) {
        var v22478 = select$$1.options;
        var v19236 = v22478[j$$1];
        var v14698 = v19236.value;
        var v8694 = v14698 === ch;
        if (v8694) {
          select$$1.selectedIndex = j$$1;
          break;
        }
        j$$1++;
        var v19237 = select$$1.options;
        var v14699 = v19237.length;
        v8695 = j$$1 < v14699;
      }
      i$$10++;
      var v14700 = chars.length;
      v8696 = i$$10 < v14700;
    }
    onSetCharacter();
    return;
  }
  function v33() {
    var v8697 = st.root;
    st.onClick(v8697);
    st.fitScreen();
    return;
  }
  function v32() {
    var first$$inline_13;
    var second$$inline_14;
    var third$$inline_15;
    var value$$inline_16 = [];
    var v8698 = jQuery("#firstCharacter");
    first$$inline_13 = v8698.val();
    var v8699 = jQuery("#secondCharacter");
    second$$inline_14 = v8699.val();
    var v8700 = jQuery("#thirdCharacter");
    third$$inline_15 = v8700.val();
    if (first$$inline_13) {
      value$$inline_16.push(first$$inline_13);
    }
    if (second$$inline_14) {
      value$$inline_16.push(second$$inline_14);
    }
    if (third$$inline_15) {
      value$$inline_16.push(third$$inline_15);
    }
    var v8701 = st.config;
    v8701.firstCharacter = first$$inline_13 || "";
    var v8702 = st.config;
    v8702.selectedCharacters = value$$inline_16;
    var v8703;
    var v19238 = typeof first$$inline_13;
    var v14701 = v19238 === "undefined";
    if (v14701) {
      v8703 = "";
    } else {
      v8703 = first$$inline_13;
    }
    first$$inline_13 = v8703;
    var v8704;
    var v19239 = typeof second$$inline_14;
    var v14702 = v19239 === "undefined";
    if (v14702) {
      v8704 = "";
    } else {
      v8704 = second$$inline_14;
    }
    second$$inline_14 = v8704;
    var v8705;
    var v19240 = typeof third$$inline_15;
    var v14703 = v19240 === "undefined";
    if (v14703) {
      v8705 = "";
    } else {
      v8705 = third$$inline_15;
    }
    third$$inline_15 = v8705;
    var v26198 = "character/" + first$$inline_13;
    var v22479 = v26198 + "/";
    var v19241 = v22479 + second$$inline_14;
    var v14704 = v19241 + "/";
    var v8706 = v14704 + third$$inline_15;
    app.navigate(v8706);
    var legendElem$$inline_18 = $jit.id("legend");
    var i$$inline_19;
    var node$$inline_20;
    var label$$inline_21;
    var v8711 = st.character;
    if (v8711) {
      var v8707 = st.colorCharacter();
      var v14705 = !v8707;
      if (v14705) {
        v8707 = "";
      }
      html$$1 = v8707;
      var v8708 = jQuery("#legendBody");
      v8708.html(html$$1);
      var v8709 = legendElem$$inline_18.style;
      v8709.display = "inline";
    } else {
      var v8710 = legendElem$$inline_18.style;
      v8710.display = "none";
    }
    var v14706 = st.graph;
    var v8715 = v14706.nodes;
    for (i$$inline_19 in v8715) {
      var v19242 = st.graph;
      var v14707 = v19242.nodes;
      var v8714 = v14707.hasOwnProperty(i$$inline_19);
      if (v8714) {
        var v14708 = st.graph;
        var v8712 = v14708.nodes;
        node$$inline_20 = v8712[i$$inline_19];
        var v19243 = node$$inline_20.id;
        var v14709 = "#" + v19243;
        var v8713 = jQuery(v14709);
        label$$inline_21 = v8713[0];
        if (label$$inline_21) {
          var v14710 = st.config;
          v14710.onCreateLabel(label$$inline_21, node$$inline_20);
        }
      }
    }
    var v8716 = st.root;
    st.onClick(v8716);
    st.fitScreen();
    return;
  }
  function v31(elem$$4) {
    var v14711 = jQuery("#right-jitcontainer");
    var v8717 = v14711[0];
    var style$$1 = v8717.style;
    var v8718;
    var v19244 = style$$1.display;
    var v14712 = v19244 === "none";
    if (v14712) {
      v8718 = "";
    } else {
      v8718 = "none";
    }
    style$$1.display = v8718;
    var v8721 = style$$1.display;
    if (v8721) {
      var v8719 = jQuery(elem$$4);
      v8719.removeClass("on");
    } else {
      var v8720 = jQuery(elem$$4);
      v8720.addClass("on");
    }
    return;
  }
  function v30(value$$29) {
    var v8722 = st.config;
    v8722.branchMultiplier = value$$29;
    var v14713 = st.graph;
    var v14714 = st.root;
    var v8723 = v14713.getNode(v14714);
    st.computePositions(v8723, "");
    st.plot();
    return;
  }
  function v29(checkbox) {
    var v8724 = st.config;
    v8724.branchLength = checkbox.checked;
    var v14715 = st.graph;
    var v14716 = st.root;
    var v8725 = v14715.getNode(v14716);
    st.computePositions(v8725, "");
    st.plot();
    return;
  }
  function v28(char$$4) {
    return;
  }
  function v27(render) {
    var v8726 = $jit.id("newickTree");
    var newickTree$$1 = v8726.value;
    if (newickTree$$1) {
      var v14717 = Smits.PhyloCanvas;
      var v8727 = v14717.NewickParse;
      var dataObject$$1 = new v8727(newickTree$$1);
      var rootObject;
      var json$$2 = "";
      var v14718 = typeof dataObject$$1;
      var v8728 = v14718 === "object";
      if (v8728) {
        rootObject = dataObject$$1.getRoot();
        json$$2 = smitsNode2JSON(rootObject);
        st.loadJSON(json$$2);
      }
      st.compute();
      var v8729 = st.config;
      v8729.initCharacter = false;
      var legendElem$$3 = $jit.id("legend");
      var v8735 = st.character;
      if (v8735) {
        var v8730 = st.colorCharacter();
        var v14719 = !v8730;
        if (v14719) {
          v8730 = "";
        }
        html$$1 = v8730;
        var v8731 = jQuery("#legendBody");
        v8731.html(html$$1);
        var v8732 = legendElem$$3.style;
        v8732.display = "inline";
        var v8733 = st.characterList;
        updateCharacter(v8733);
      } else {
        var v8734 = legendElem$$3.style;
        v8734.display = "none";
      }
      var v8736 = st.root;
      st.onClick(v8736);
      st.fitScreen();
    }
    return;
  }
  function v26(animate$$1) {
    var v8738 = !animateDuration;
    if (v8738) {
      var v8737 = st.config;
      animateDuration = v8737.duration;
    }
    var v8741 = animate$$1.checked;
    if (v8741) {
      var v8739 = st.config;
      v8739.duration = animateDuration;
    } else {
      var v8740 = st.config;
      v8740.duration = 0;
    }
    return;
  }
  function v25(lat) {
    var v8744 = lat.checked;
    if (v8744) {
      var v8742 = st.config;
      v8742.lateralise = true;
    } else {
      var v8743 = st.config;
      v8743.lateralise = false;
    }
    var v14720 = st.graph;
    var v14721 = st.root;
    var v8745 = v14720.getNode(v14721);
    st.computePositions(v8745, "");
    st.plot();
    return;
  }
  function v24(setRoot$$2) {
    var v14722 = setRoot$$2.value;
    var v8747 = v14722 === "checked";
    if (v8747) {
      var v8746 = st.clickedNode;
      var id$$2 = v8746.id;
      st.setRoot(id$$2, "animate");
    }
    return;
  }
  function v23(alignName$$1) {
    var v8752 = alignName$$1.checked;
    if (v8752) {
      var v8748 = st.config;
      v8748.alignName = true;
      var v8749 = jQuery(".quant");
      v8749.addClass("quantAlign");
    } else {
      var v8750 = st.config;
      v8750.alignName = false;
      var v8751 = jQuery(".quant");
      v8751.removeClass("quantAlign");
    }
    st.plot();
    return;
  }
  function v22() {
    search(-1);
    return;
  }
  function v21() {
    search(1);
    return;
  }
  function v20() {
    st.fitScreen();
    return;
  }
  function v19() {
    var v8753 = st.config;
    return v8753.lateralise;
  }
  function v18(dom, node$$13) {
    var alignName = $jit.id("alignName");
    var v8755 = node$$13.selected;
    if (v8755) {
      var v8754 = dom.style;
      v8754.display = "none";
    }
    var v19245 = node$$13.data;
    var v14723 = v19245.leaf;
    var v8757 = !v14723;
    if (v8757) {
      var v8756 = dom.style;
      v8756.display = "none";
    }
    var v8758 = dom.style;
    var v19246 = node$$13.data;
    var v14724 = v19246.display;
    var v19247 = !v14724;
    if (v19247) {
      v14724 = "block";
    }
    v8758.display = v14724;
    var v8761 = alignName.checked;
    if (v8761) {
      var v22480 = dom.id;
      var v19248 = "#" + v22480;
      var v14725 = v19248 + " .quant";
      var v8759 = jQuery(v14725);
      v8759.addClass("quantAlign");
    } else {
      var v22481 = dom.id;
      var v19249 = "#" + v22481;
      var v14726 = v19249 + " .quant";
      var v8760 = jQuery(v14726);
      v8760.removeClass("quantAlign");
    }
    return;
  }
  function v17(node$$12, eventInfo$$1, e$$7) {
    function v16(n$$1) {
      var v14727 = n$$1.data;
      var v8762 = v14727.leaf;
      if (v8762) {
        var v14728 = elem$$3.innerHTML;
        var v19250 = n$$1.name;
        var v14729 = v19250 + "<br/>";
        elem$$3.innerHTML = v14728 + v14729;
      }
      return;
    }
    if (node$$12) {
      var elem$$3 = document.getElementById("selected");
      var v8763 = node$$12.leaf;
      if (v8763) {
        elem$$3.innerHTML = node$$12.name;
      } else {
        elem$$3.innerHTML = "";
        node$$12.subGraph(v16);
      }
    }
    return;
  }
  function v15(adj$$1) {
    return;
  }
  function v14(node$$11) {
    var result$$3 = true;
    var char$$3;
    var v19251 = node$$11.data;
    var v14730 = v19251.leaf;
    var v8768 = !v14730;
    if (v8768) {
      var key$$17;
      var v14731 = st.config;
      var v8767 = v14731.selectedCharacters;
      for (key$$17 in v8767) {
        var v19252 = node$$11.data;
        var v14732 = v19252.characterConsistency;
        var v8766 = v14732.hasOwnProperty(key$$17);
        if (v8766) {
          var v14733 = st.config;
          var v8764 = v14733.selectedCharacters;
          char$$3 = v8764[key$$17];
          var v8765 = result$$3;
          if (v8765) {
            var v19253 = node$$11.data;
            var v14734 = v19253.characterConsistency;
            v8765 = v14734[char$$3];
          }
          result$$3 = v8765;
        }
      }
    }
    var v14735 = !result$$3;
    if (v14735) {
      var v22482 = node$$11.data;
      var v19254 = v22482.$type;
      v14735 = v19254 !== "triangle";
    }
    var v8770 = v14735;
    if (v8770) {
      var v8769 = node$$11.data;
      v8769.$type = "square";
    }
    var v19255 = node$$11.data;
    var v14736 = v19255.$type;
    var v8777 = v14736 === "circle";
    if (v8777) {
      var v14737 = node$$11.data;
      var v8773 = v14737.rotate;
      if (v8773) {
        var v8771 = node$$11.data;
        v8771.$color = "purple";
      } else {
        var v8772 = node$$11.data;
        v8772.$color = "red";
      }
    } else {
      var v19256 = node$$11.data;
      var v14738 = v19256.$type;
      var v8776 = v14738 === "square";
      if (v8776) {
        var v8774 = node$$11.data;
        v8774.$dim = 10;
        var v8775 = node$$11.data;
        v8775.$color = "red";
      }
    }
    var v19257 = node$$11.data;
    var v14739 = v19257.$type;
    var v8782 = v14739 === "triangle";
    if (v8782) {
      var v8778 = node$$11.data;
      v8778.$dim = 15;
      var v8779 = node$$11.data;
      v8779.$color = "#EE9AA2";
    } else {
      var v19258 = node$$11.data;
      var v14740 = v19258.$type;
      var v8781 = v14740 !== "square";
      if (v8781) {
        var v8780 = node$$11.data;
        delete v8780.$dim;
      }
    }
    var v14741 = st.root;
    var v14742 = node$$11.id;
    var v8784 = v14741 === v14742;
    if (v8784) {
      var v8783 = node$$11.data;
      v8783.$color = "lightblue";
    }
    return;
  }
  function v13(label$$1, node$$10) {
    function v12() {
      var setRoot$$1 = $jit.id("setRoot");
      var v14743 = setRoot$$1.checked;
      var v8786 = !v14743;
      if (v8786) {
        var v14744 = st.controller;
        var v8785 = v14744.Events;
        v8785.onClick(node$$10);
      }
      return;
    }
    var char$$2;
    var v8787 = st.config;
    var list = v8787.selectedCharacters;
    var charTypeMapping = st.charTypeMapping;
    var i$$9;
    var values$$4;
    var div$$2;
    var colorCoding = st.colorCoding;
    var firstColor;
    var index$$41;
    var temp;
    var shape;
    label$$1.id = node$$10.id;
    label$$1.innerHTML = node$$10.name;
    label$$1.onclick = v12;
    var style = label$$1.style;
    style.width = "auto";
    style.height = 17 + "px";
    style.cursor = "pointer";
    style.color = "#333";
    style.fontSize = "0.8em";
    style.textAlign = "left";
    style.paddingTop = "3px";
    style.display = "inline";
    var v8788 = node$$10.data;
    style.color = v8788.$color;
    var boxes = "";
    var v8789 = st.config;
    var first$$3 = v8789.firstCharacter;
    var shapes = ["box", "star", "triangle"];
    index$$41 = 0;
    boxes = "";
    i$$9 = 0;
    var v14745 = list.length;
    var v8805 = i$$9 < v14745;
    for (;v8805;) {
      char$$2 = list[i$$9];
      var v14746 = node$$10.data;
      var v8790 = v14746.character;
      values$$4 = v8790[char$$2];
      var v19259 = values$$4;
      if (v19259) {
        var v22483 = values$$4.length;
        v19259 = v22483 > 0;
      }
      var v14747 = v19259;
      if (v14747) {
        var v22484 = values$$4[0];
        var v19260 = typeof v22484;
        v14747 = v19260 !== "undefined";
      }
      var v8803 = v14747;
      if (v8803) {
        var v14748 = charTypeMapping[char$$2];
        var v22485 = st.config;
        var v19261 = v22485.typeEnum;
        var v14749 = v19261.quali;
        var v8802 = v14748 === v14749;
        if (v8802) {
          temp = colorCoding[char$$2];
          value = values$$4[0];
          var v14750 = values$$4.length;
          var v8791 = v14750 > 1;
          if (v8791) {
            value = "multiple";
          }
          var v29724 = temp[value];
          var v29320 = v29724.shape;
          var v28680 = '<div class="' + v29320;
          var v27721 = v28680 + '" style="float:left;background-color:';
          var v28681 = temp[value];
          var v27722 = v28681.color;
          var v26199 = v27721 + v27722;
          var v22486 = v26199 + ';" title="';
          var v19262 = v22486 + char$$2;
          var v14751 = v19262 + " : ";
          var v14752 = values$$4.join(" , ");
          var v8792 = v14751 + v14752;
          shape = v8792 + '"></div>';
          var v8794 = i$$9 === 0;
          if (v8794) {
            var v8793 = temp[value];
            firstColor = v8793.color;
          }
        } else {
          var v14753 = charTypeMapping[char$$2];
          var v22487 = st.config;
          var v19263 = v22487.typeEnum;
          var v14754 = v19263.quant;
          var v8801 = v14753 === v14754;
          if (v8801) {
            var v8795 = st.colorCodingQuali;
            temp = v8795[char$$2];
            value = values$$4[0];
            var v14755 = st.range;
            var v8796 = v14755[char$$2];
            index$$41 = st.findIndex(value, v8796);
            var v29725 = temp[index$$41];
            var v29321 = v29725.shape;
            var v28682 = '<div class="' + v29321;
            var v27723 = v28682 + '" style="float:left;background-color:';
            var v28683 = temp[index$$41];
            var v27724 = v28683.color;
            var v26200 = v27723 + v27724;
            var v22488 = v26200 + ';" title="';
            var v19264 = v22488 + char$$2;
            var v14756 = v19264 + " : ";
            var v19265 = temp[index$$41];
            var v14757 = v19265.name;
            var v8797 = v14756 + v14757;
            shape = v8797 + '"></div>';
            var v8800 = i$$9 === 0;
            if (v8800) {
              var v14758 = st.config;
              var v8798 = v14758.quantColor;
              var v22489 = st.config;
              var v19266 = v22489.quantColor;
              var v14759 = v19266.length;
              var v8799 = v14759 - 1;
              firstColor = v8798[v8799];
            }
          }
        }
      } else {
        shape = '<div class="empty" style="float:left;background-color:;" title="empty"></div>';
      }
      var v8804 = first$$3 !== char$$2;
      if (v8804) {
        boxes = boxes + shape;
      } else {
        boxes = shape + boxes;
      }
      i$$9 = i$$9 + 1;
      var v14760 = list.length;
      v8805 = i$$9 < v14760;
    }
    if (label$$1) {
      var v19267 = node$$10.data;
      var v14761 = v19267.leaf;
      var v8808 = !v14761;
      if (v8808) {
        var v22490 = boxes + '&nbsp;&nbsp;<div style="display:inline;color:';
        var v19268 = v22490 + firstColor;
        var v14762 = v19268 + '">';
        var v19269 = node$$10.data;
        var v14763 = v19269.leaves;
        var v8806 = v14762 + v14763;
        label$$1.innerHTML = v8806 + " Taxa</div>";
      } else {
        var v22491 = boxes + '&nbsp;&nbsp;<div style="display:inline;color:';
        var v19270 = v22491 + firstColor;
        var v14764 = v19270 + '">';
        var v14765 = node$$10.name;
        var v8807 = v14764 + v14765;
        label$$1.innerHTML = v8807 + "</div>";
      }
    }
    return;
  }
  function v11(msg) {
    if (msg) {
      Log.write(msg);
    } else {
      Log.write("done");
    }
    return;
  }
  function v10(node$$9) {
    var v14766 = node$$9.name;
    var v8809 = "loading " + v14766;
    Log.write(v8809);
    return;
  }
  function v9(div$$1, node$$8) {
    var url$$3 = "";
    var key$$16;
    var i$$8;
    var char$$1;
    var html$$4 = "";
    var name$$33 = "";
    var maptitle = "";
    var index$$40;
    var v19271 = node$$8.name;
    var v14767 = !v19271;
    var v8812 = !v14767;
    if (v8812) {
      var v19272 = node$$8.name;
      var v14768 = v19272.replace(" ", "+");
      var v8810 = '<img class="tipImage" src="http://biocache.ala.org.au/ws/density/map?q=' + v14768;
      url$$3 = v8810 + '"/>';
      maptitle = "<br/>ALA <strong>reported</strong> occurences";
      var v14769 = node$$8.name;
      var v8811 = "<i>" + v14769;
      name$$33 = v8811 + "</i>";
    } else {
      name$$33 = " unnamed clade ";
    }
    name$$33 = name$$33 + "<strong> click</strong> for ";
    var v14770 = node$$8.data;
    var v8814 = v14770.leaf;
    if (v8814) {
      name$$33 = name$$33 + "for linked data";
    } else {
      name$$33 = "Part of " + name$$33;
      var v14771 = node$$8.length;
      var v8813 = v14771 < 30;
      if (v8813) {
        name$$33 = name$$33 + "clade members";
      } else {
        name$$33 = name$$33 + "30 clade members";
      }
    }
    var v8815 = "<h3>" + name$$33;
    name$$33 = v8815 + "</h3>";
    var result$$2 = [];
    var v14772 = st.config;
    var v8821 = v14772.selectedCharacters;
    for (index$$40 in v8821) {
      var v14773 = st.config;
      var v8816 = v14773.selectedCharacters;
      key$$16 = v8816[index$$40];
      var v14774 = node$$8.data;
      var v8817 = v14774.character;
      char$$1 = v8817[key$$16];
      var v8818 = "<strong>" + key$$16;
      html$$4 = v8818 + "</strong>: ";
      var v22492 = typeof char$$1;
      var v19273 = v22492 === "undefined";
      var v22494 = !v19273;
      if (v22494) {
        var v22493 = char$$1.length;
        v19273 = v22493 === 0;
      }
      var v14775 = v19273;
      var v19275 = !v14775;
      if (v19275) {
        var v22495 = char$$1[0];
        var v19274 = typeof v22495;
        v14775 = v19274 === "undefined";
      }
      var v8820 = v14775;
      if (v8820) {
        html$$4 = html$$4 + "&mdash;";
      } else {
        var v19276 = char$$1[0];
        var v14776 = typeof v19276;
        var v8819 = v14776 !== "number";
        if (v8819) {
          var v14777 = char$$1.join(",<br/>....");
          html$$4 = html$$4 + v14777;
        } else {
          var v19277 = char$$1[0];
          var v14778 = v19277.toFixed(4);
          html$$4 = html$$4 + v14778;
        }
      }
      result$$2.push(html$$4);
    }
    var v19278 = result$$2.join("<br/>");
    var v14779 = name$$33 + v19278;
    var v8822 = v14779 + maptitle;
    div$$1.innerHTML = v8822 + url$$3;
    return;
  }
  function v8() {
    var v8823 = $("a.thumbImage1");
    var v8824 = {iframe:true, width:"80%", height:"80%"};
    v8823.colorbox(v8824);
    return;
  }
  function v7(clade) {
    var v8825 = st.config;
    var tmpl = v8825.tmpl;
    var nodeList = [];
    var node$$7;
    var html$$3;
    var split;
    var i$$7 = 0;
    var v19279 = clade.length;
    var v14780 = i$$7 < v19279;
    var v14781 = i$$7 < 30;
    var v8827 = v14780 & v14781;
    for (;v8827;) {
      node$$7 = {};
      var v8826 = clade[i$$7];
      node$$7.name = v8826.name;
      nodeList.push(node$$7);
      i$$7++;
      var v19280 = clade.length;
      var v14782 = i$$7 < v19280;
      var v14783 = i$$7 < 30;
      v8827 = v14782 & v14783;
    }
    if (tmpl) {
      tmpl = _.template(tmpl);
      var v8828 = {nodeList:nodeList};
      html$$3 = tmpl(v8828);
    } else {
    }
    return html$$3;
  }
  function v6(node$$6, eventInfo, e$$6) {
    function v5(elem$$2) {
      var v14784 = elem$$2.data;
      var v8830 = v14784.leaf;
      if (v8830) {
        if (leafs) {
          var v22496 = elem$$2.name;
          var v19281 = "<li>" + v22496;
          var v14785 = v19281 + "</li>";
          leafs = leafs + v14785;
        } else {
          var v14786 = elem$$2.name;
          var v8829 = "<li>" + v14786;
          leafs = v8829 + "</li>";
        }
        selectedClade.push(elem$$2);
      }
      return;
    }
    function v4() {
      return;
    }
    var leafs;
    if (node$$6) {
      selectedClade = [];
      var expand = $jit.id("expand");
      var v8831 = st.labels;
      var v8832 = node$$6.id;
      var pos$$3 = v8831.getLabel(v8832);
      var setRoot = $jit.id("setRoot");
      var rotate = $jit.id("rotate");
      var select = $jit.id("selectClade");
      var v22497 = pos$$3.style;
      var v19282 = v22497.left;
      var v14787 = v19282.replace(/px/, "");
      var v8833 = parseInt(v14787, 10);
      var loc = v8833 + 100;
      var v22498 = pos$$3.style;
      var v19283 = v22498.top;
      var v14788 = v19283.replace(/px/, "");
      var v8834 = parseInt(v14788, 10);
      var locy = v8834 + 40;
      var v8835 = setRoot.checked;
      if (v8835) {
        var id$$1 = node$$6.id;
        st.setRoot(id$$1, "animate");
        st.root = id$$1;
      }
      var v8843 = rotate.checked;
      if (v8843) {
        var v14789 = st.graph;
        var v14790 = st.root;
        var v8836 = v14789.getNode(v14790);
        st.computePositions(v8836, "start");
        var v22499 = node$$6.data;
        var v19284 = v22499.rotate;
        var v14791 = typeof v19284;
        var v8838 = v14791 === "undefined";
        if (v8838) {
          var v8837 = node$$6.data;
          v8837.rotate = false;
        }
        var v8839 = node$$6.data;
        var v19285 = node$$6.data;
        var v14792 = v19285.rotate;
        v8839.rotate = !v14792;
        var v14793 = st.graph;
        var v14794 = st.root;
        var v8840 = v14793.getNode(v14794);
        st.computePositions(v8840, "end");
        var v8841 = st.fx;
        var v14795 = ["linear", "node-property:alpha"];
        var v8842 = {modes:v14795, onComplete:v4};
        v8841.animate(v8842);
      }
      var v8845 = expand.checked;
      if (v8845) {
        st.setCollapsed(node$$6);
        var level$$7 = st.nodesExpCol(node$$6);
        if (level$$7) {
          st.zoomIndex = level$$7;
        }
        var v14796 = st.graph;
        var v14797 = st.root;
        var v8844 = v14796.getNode(v14797);
        st.computePositions(v8844, "");
        st.plot();
      }
      var v8851 = select.checked;
      if (v8851) {
        st.clickedNode = node$$6;
        node$$6.eachSubgraph(v5);
        var v8846 = popup$$1.style;
        v8846.display = "inline";
        var v8847 = popup$$1.style;
        v8847.top = locy + "px";
        var v8848 = popup$$1.style;
        v8848.left = loc + "px";
        var v8849 = popupText;
        var v14798 = st.config;
        var v31255 = v14798.presentClade(selectedClade);
        v8849.innerHTML = v31255;
        var v8850 = st.config;
        v8850.onPresentClade();
        st.plot();
      }
    }
    return;
  }
  function v3() {
    var v19286 = st.canvas;
    var v14799 = v19286.element;
    var v8852 = v14799.style;
    v8852.cursor = "";
    var v8853 = st.tips;
    v8853.hide(true);
    return;
  }
  function v2(node$$5, event$$1, e$$5) {
    var v19287 = st.canvas;
    var v14800 = v19287.element;
    var v8854 = v14800.style;
    v8854.cursor = "pointer";
    var v14801 = st.tips;
    var v8855 = v14801.config;
    var v14802 = st.tips;
    var v8856 = v14802.tip;
    v8855.onShow(v8856, node$$5);
    var v8857 = st.tips;
    var v19288 = $jit.util;
    var v14803 = v19288.event;
    var v8858 = v14803.getPos(e$$5);
    v8857.setTooltipPosition(v8858);
    return;
  }
  function v1(div, node$$4) {
    var url$$2 = "";
    var key$$15;
    var i$$6;
    var char;
    var html$$2 = "";
    var name$$32 = "";
    var index$$39;
    var v14804 = node$$4.data;
    var v8861 = v14804.leaf;
    if (v8861) {
      var v14805 = node$$4.name;
      var v8859 = "<h3>" + v14805;
      name$$32 = v8859 + "</h3>";
      var v22500 = node$$4.name;
      var v19289 = v22500.split(/\s+/);
      var v14806 = v19289.join("+");
      var v8860 = '<img class="tipImage" src="http://biocache.ala.org.au/ws/density/map?q=' + v14806;
      url$$2 = v8860 + '"/>';
    }
    var result$$1 = [];
    var v14807 = st.config;
    var v8867 = v14807.selectedCharacters;
    for (index$$39 in v8867) {
      var v14808 = st.config;
      var v8862 = v14808.selectedCharacters;
      key$$15 = v8862[index$$39];
      var v14809 = node$$4.data;
      var v8863 = v14809.character;
      char = v8863[key$$15];
      var v8864 = "<strong>" + key$$15;
      html$$2 = v8864 + "</strong>: ";
      var v22501 = typeof char;
      var v19290 = v22501 === "undefined";
      var v22503 = !v19290;
      if (v22503) {
        var v22502 = char.length;
        v19290 = v22502 === 0;
      }
      var v14810 = v19290;
      var v19292 = !v14810;
      if (v19292) {
        var v22504 = char[0];
        var v19291 = typeof v22504;
        v14810 = v19291 === "undefined";
      }
      var v8866 = v14810;
      if (v8866) {
        html$$2 = html$$2 + "&mdash;";
      } else {
        var v19293 = char[0];
        var v14811 = typeof v19293;
        var v8865 = v14811 !== "number";
        if (v8865) {
          var v14812 = char.join(",");
          html$$2 = html$$2 + v14812;
        } else {
          var v19294 = char[0];
          var v14813 = v19294.toFixed(4);
          html$$2 = html$$2 + v14813;
        }
      }
      result$$1.push(html$$2);
    }
    var v14814 = result$$1.join("<br/>");
    var v8868 = name$$32 + v14814;
    div.innerHTML = v8868 + url$$2;
    return;
  }
  function search(step$$1) {
    function v0(node$$14) {
      var name$$34 = node$$14.name;
      var pattern$$1 = new RegExp(searchString, "i");
      var v8869 = name$$34.match(pattern$$1);
      if (v8869) {
        result.push(node$$14);
      }
      return;
    }
    var searchString = searchBtn.value;
    var len;
    var v8870 = st.graph;
    var v8871 = st.root;
    var root = v8870.getNode(v8871);
    var v14815 = result.length;
    var v8875 = v14815 > 0;
    if (v8875) {
      len = result.length;
      pos = nextStep(pos, step$$1, len);
      var v8872 = st.labels;
      var v19295 = result;
      var v22505 = -1 * step$$1;
      var v19296 = nextStep(pos, v22505, len);
      var v14816 = v19295[v19296];
      var v8873 = v14816.id;
      var prevElem = v8872.getLabel(v8873);
      var v8874 = prevElem.style;
      v8874.backgroundColor = "";
    }
    var v14817 = searchString;
    if (v14817) {
      v14817 = prevSearch !== searchString;
    }
    var v8877 = v14817;
    if (v8877) {
      result = [];
      prevSearch = searchString;
      root.eachSubgraph(v0);
      pos = nextStep(undefined, step$$1, len);
    } else {
      var v8876 = searchString === "";
      if (v8876) {
        result = [];
      }
    }
    var v14818 = result.length;
    var v8884 = v14818 > 0;
    if (v8884) {
      var shownNode = result[pos];
      var v14819 = shownNode.exist;
      var v8878 = !v14819;
      if (v8878) {
        root.collapsed = true;
        st.nodesExpCol(root);
        st.computePositions(root, "");
        st.plot();
      }
      var canvas$$1 = st.canvas;
      var oy = canvas$$1.translateOffsetY;
      var xTranslate = 0;
      var yTranslate = -oy;
      var v8879 = st.canvas;
      v8879.translate(xTranslate, yTranslate);
      var v8880 = st.labels;
      var v14820 = result[pos];
      var v8881 = v14820.id;
      var element$$2 = v8880.getLabel(v8881);
      var v8882 = element$$2.style;
      v8882.backgroundColor = "yellow";
      var v8883 = jQuery(element$$2);
      v8883.click();
    }
    return;
  }
  function clickHandler() {
    var JSCompiler_object_inline_x_80;
    var JSCompiler_object_inline_y_81;
    var v8885 = this.id;
    switch(v8885) {
      case "north":
        JSCompiler_object_inline_x_80 = 0;
        JSCompiler_object_inline_y_81 = 10;
        true;
        break;
      case "west":
        JSCompiler_object_inline_x_80 = -10;
        JSCompiler_object_inline_y_81 = 0;
        true;
        break;
      case "east":
        JSCompiler_object_inline_x_80 = 10;
        JSCompiler_object_inline_y_81 = 0;
        true;
        break;
      case "south":
        JSCompiler_object_inline_x_80 = 0;
        JSCompiler_object_inline_y_81 = -10;
        true;
    }
    var canvas = st.canvas;
    canvas.translate(JSCompiler_object_inline_x_80, JSCompiler_object_inline_y_81);
    return;
  }
  function zoomHandler() {
    var scroll;
    var v8886 = this.id;
    switch(v8886) {
      case "zoomIN":
        scroll = +1;
        break;
      case "zoomOUT":
        scroll = -1;
    }
    st.zoom(scroll);
    return;
  }
  function nextStep(pos$$2, step, length$$11) {
    var v14821 = typeof pos$$2;
    var v8888 = v14821 === "undefined";
    if (v8888) {
      var v8887;
      var v14822 = step > 0;
      if (v14822) {
        v8887 = 0;
      } else {
        v8887 = length$$11 - 1;
      }
      return v8887;
    }
    var v8889 = pos$$2 + step;
    var i$$4 = v8889 % length$$11;
    var v8890;
    var v14823 = i$$4 < 0;
    if (v14823) {
      v8890 = length$$11 + i$$4;
    } else {
      v8890 = i$$4;
    }
    return v8890;
  }
  function keyHandler(e$$4) {
    var ENTER = 13;
    var shift = e$$4.shiftKey;
    var v14824 = shift;
    if (v14824) {
      var v19297 = e$$4.keyCode;
      v14824 = v19297 === ENTER;
    }
    var v8894 = v14824;
    if (v8894) {
      search(-1);
      var v8891 = e$$4.preventDefault;
      if (v8891) {
        e$$4.preventDefault();
      }
      return false;
    } else {
      var v14825 = e$$4.keyCode;
      var v8893 = v14825 === ENTER;
      if (v8893) {
        search(1);
        var v8892 = e$$4.preventDefault;
        if (v8892) {
          e$$4.preventDefault();
        }
        return false;
      }
    }
    return;
  }
  var v19298 = $jit.Trans;
  var v14826 = v19298.Quart;
  var v8895 = v14826.easeInOut;
  var v8896 = Number.MAX_VALUE;
  var v8897 = {enable:true, panning:"avoid nodes", zooming:50};
  var v8898 = {enable:true, onShow:v1};
  var v8899 = {height:40, width:20, type:"circle", dim:5, color:"#aaa", overridable:true, align:"left"};
  var v14827 = {color:"#EEF2F7"};
  var v8900 = {background:v14827};
  var v8901 = {type:"line", color:"#000", overridable:true, lineWidth:2};
  var v8902 = {enable:true, type:"Native", onMouseEnter:v2, onMouseLeave:v3, onClick:v6};
  var v8903 = {enable:true, onShow:v9};
  var config = {injectInto:"infovis", width:800, height:600, offsetX:0, align:"left", alignName:false, lateralise:true, branchLength:true, branchMultiplier:1, duration:1E3, fps:10, transition:v8895, levelDistance:20, levelsToShow:v8896, constrained:false, firstCharacter:"Raceme_length_median", Navigation:v8897, Tips:v8898, Node:v8899, Canvas:v8900, Edge:v8901, Events:v8902, presentClade:v7, onPresentClade:v8, tmpl:"<ul><% _.each(nodeList , function( value ) { %> <li> <%= value.name %> </li> <% }); %> </ul>", 
  Tips:v8903, onBeforeCompute:v10, onAfterCompute:v11, onCreateLabel:v13, onBeforePlotNode:v14, onBeforePlotLine:v15, onClick:v17, onPlaceLabel:v18};
  var height$$9 = config.height;
  var v8904 = config.width;
  var v14828 = !v8904;
  if (v14828) {
    v8904 = 800;
  }
  var width$$9 = v8904;
  var v8905 = $jit.util;
  v8905.extend(config, initial);
  Nav.load(config);
  var html$$1;
  var rightContainer$$1 = $jit.id("right-jitcontainer");
  var popup$$1 = $jit.id("popup");
  var popupText = $jit.id("popup-text");
  settingsPage();
  var dataObject;
  var json$$1 = "";
  var v8908 = config.tree;
  if (v8908) {
    var v14829 = Smits.PhyloCanvas;
    var v8906 = v14829.NewickParse;
    var v8907 = config.tree;
    dataObject = new v8906(v8907);
  }
  var v14830 = typeof dataObject;
  var v8910 = v14830 === "object";
  if (v8910) {
    var v8909 = dataObject.getRoot();
    json$$1 = smitsNode2JSON(v8909);
  }
  var selectedClade;
  var zoomIN = $jit.id("zoomIN");
  var zoomOUT = $jit.id("zoomOUT");
  var world = $jit.id("world");
  var v8911 = $jit.Phylo;
  st = new v8911(config);
  isLateralise = v19;
  st.loadJSON(json$$1);
  st.compute();
  var v8912 = config.character;
  var v14831 = !v8912;
  if (v14831) {
    v8912 = {};
  }
  st.character = v8912;
  var legendElem$$1 = $jit.id("legend");
  var v8918 = st.character;
  if (v8918) {
    var v8913 = st.colorCharacter();
    var v14832 = !v8913;
    if (v14832) {
      v8913 = "";
    }
    html$$1 = v8913;
    var v8914 = jQuery("#legendBody");
    v8914.html(html$$1);
    var v8915 = legendElem$$1.style;
    v8915.display = "inline";
    var v8916 = st.characterList;
    updateCharacter(v8916);
  } else {
    var v8917 = legendElem$$1.style;
    v8917.display = "none";
  }
  var north = $jit.id("north");
  var east = $jit.id("east");
  var west = $jit.id("west");
  var south = $jit.id("south");
  north.onmousedown = south.onmousedown = east.onmousedown = west.onmousedown = clickHandler;
  zoomIN.onclick = zoomOUT.onclick = zoomHandler;
  world.onclick = v20;
  var result = [];
  var pos;
  var prevSearch;
  var searchBtn = $jit.id("searchString");
  var v8920 = searchBtn.addEventListener;
  if (v8920) {
    searchBtn.addEventListener("keydown", keyHandler, false);
  } else {
    var v8919 = searchBtn.attachEvent;
    if (v8919) {
      searchBtn.attachEvent("onkeydown", keyHandler);
    }
  }
  var next = $jit.id("next");
  var previous = $jit.id("previous");
  next.onclick = v21;
  previous.onclick = v22;
  onClickAlign = v23;
  onSetRoot = v24;
  onLateralise = v25;
  var animateDuration;
  onAnimate = v26;
  onRender = v27;
  onGetCharacter = v28;
  onBranchLength = v29;
  onBranchMultiply = v30;
  toggleScreen = v31;
  onSetCharacter = v32;
  var v8921 = Backbone.Router;
  var v14833 = {"":"start", "character/*char":"characterSelection"};
  var v8922 = {routes:v14833, start:v33, characterSelection:v34};
  var AppRouter = v8921.extend(v8922);
  var app = new AppRouter;
  var v8923 = Backbone.history;
  v8923.start();
  return;
}
function init() {
  var v22506 = [.6837124164];
  var v22507 = [17.1466667213];
  var v22508 = [16.0416993341];
  var v22509 = [1039.2849673203];
  var v22510 = [18998.3660130718];
  var v22511 = [85.9191176471];
  var v22512 = [.8894836614];
  var v22513 = [25.3393464394];
  var v22514 = [157.4640522876];
  var v22515 = [.4932352942];
  var v22516 = [.3231372576];
  var v22517 = [9.081829987];
  var v22518 = [28.0827450671];
  var v22519 = [11.3729411867];
  var v22520 = [.8600326849];
  var v22521 = [.8941764697];
  var v22522 = [.3734836587];
  var v22523 = [.4585424874];
  var v22524 = [10.5782352927];
  var v22525 = [15.4166012935];
  var v22526 = [20.968431512];
  var v22527 = [15.8052941168];
  var v22528 = [4.1385621225];
  var v22529 = [33.0339869281];
  var v22530 = [.0438125788];
  var v22531 = [255.5509803922];
  var v22532 = [5.322875817];
  var v22533 = [143.0516339869];
  var v22534 = [39.0823529412];
  var v22535 = [292.9124183007];
  var v22536 = [36.9261437908];
  var v22537 = [423.4202614379];
  var v22538 = [10.6616340562];
  var v22539 = [17.4772549498];
  var v22540 = [33.0607843137];
  var v22541 = [22.9215031792];
  var v22542 = [15.7764050234];
  var v22543 = [64.9002548406];
  var v22544 = [1.964869281];
  var v22545 = [4.9215686275];
  var v22546 = [4.1215686275];
  var v22547 = [5.8725490196];
  var v22548 = [4.7078431373];
  var v22549 = [19.0273797546];
  var v22550 = [64840.3594771241];
  var v22551 = [4.4690577426];
  var v22552 = [.9153594758];
  var v22553 = [107.6281045752];
  var v22554 = [23.24398698];
  var v22555 = [1.4140000156];
  var v22556 = [292.831372549];
  var v22557 = [5.5785338397];
  var v22558 = [8.4109477124];
  var v22559 = [44557.6633986928];
  var v22560 = [1E-7];
  var v22561 = [19];
  var v22562 = [21.5];
  var v22563 = [1111];
  var v22564 = [18E3];
  var v22565 = [100];
  var v22566 = [1];
  var v22567 = [25.5];
  var v22568 = [200];
  var v22569 = [0];
  var v22570 = [14];
  var v22571 = [30];
  var v22572 = [9];
  var v22573 = [0];
  var v22574 = [.5];
  var v22575 = [0];
  var v22576 = [0];
  var v22577 = [17];
  var v22578 = [18.5];
  var v22579 = [24.5];
  var v22580 = [24.5];
  var v22581 = [11];
  var v22582 = [57];
  var v22583 = [82];
  var v22584 = [0];
  var v22585 = [61];
  var v22586 = [99.5];
  var v22587 = [574.5];
  var v22588 = [72.5];
  var v22589 = [716];
  var v22590 = [15.5];
  var v22591 = [19];
  var v22592 = [18.5];
  var v22593 = [22];
  var v22594 = [19];
  var v22595 = [125];
  var v22596 = [0];
  var v22597 = [4];
  var v22598 = [8];
  var v22599 = [7];
  var v22600 = [4];
  var v22601 = [11];
  var v22602 = [63E3];
  var v22603 = [6];
  var v22604 = [1];
  var v22605 = [177];
  var v22606 = [18];
  var v22607 = [1];
  var v22608 = [295.5];
  var v22609 = [5.5];
  var v22610 = [0];
  var v19299 = {"modelled annual mean moisture index":v22506, "modelled annual mean rad":v22507, "modelled annual mean temp":v22508, "modelled annual precipitation":v22509, "modelled clpk 1 1000 g clay":v22510, "modelled erosional":v22511, "modelled highest period moisture index":v22512, "modelled highest period radiation":v22513, "modelled hydraulic conductivity ksat":v22514, "modelled isothermality":v22515, "modelled lowest period moisture index":v22516, "modelled lowest period radiation":v22517, 
  "modelled max temp warmest period":v22518, "modelled mean diurnal range":v22519, "modelled mean moisture index coldest quarter":v22520, "modelled mean moisture index highest quarter MI":v22521, "modelled mean moisture index lowest quater MI":v22522, "modelled mean moisture index warmest quarter":v22523, "modelled mean temp coldest quarter":v22524, "modelled mean temp driest quater":v22525, "modelled mean temp warmer quarter":v22526, "modelled mean temp wettest quarter":v22527, "modelled min temp coldest period":v22528, 
  "modelled moisture index seasonality":v22529, "modelled phos":v22530, "modelled precipitation coldets quarter":v22531, "modelled precipitation driest period":v22532, "modelled precipitation driest quarter":v22533, "modelled precipitation seasonality":v22534, "modelled precipitation warmest quarter":v22535, "modelled precipitation wettest period":v22536, "modelled precipitation wettest quarter":v22537, "modelled radiation coldest quarter":v22538, "modelled radiation driest quarter":v22539, "modelled radiation seasonality":v22540, 
  "modelled radiation warmest quarter":v22541, "modelled radiation wettest quarter":v22542, "modelled relief":v22543, "modelled ridgetopflat":v22544, "modelled rockalklty":v22545, "modelled rockgrainsz":v22546, "modelled rockhardness":v22547, "modelled rocknutrnt":v22548, "modelled roughness":v22549, "modelled sapk 1 1000 g sand":v22550, "modelled slope":v22551, "modelled soildepth":v22552, "modelled solpawhc":v22553, "modelled temperature annual range":v22554, "modelled temperature seasonality":v22555, 
  "modelled thpk 1 1000 g thickness":v22556, "modelled twi":v22557, "modelled valleybottom":v22558, "modelled whpk 1 1000 g water cap":v22559, "raw annual mean moisture index":v22560, "raw annual mean rad":v22561, "raw annual mean temp":v22562, "raw annual precipitation":v22563, "raw clpk 1 1000 g clay":v22564, "raw erosional":v22565, "raw highest period moisture index":v22566, "raw highest period radiation":v22567, "raw hydraulic conductivity ksat":v22568, "raw lowest period moisture index":v22569, 
  "raw lowest period radiation":v22570, "raw max temp warmest period":v22571, "raw mean diurnal range":v22572, "raw mean moisture index coldest quarter":v22573, "raw mean moisture index highest quarter MI":v22574, "raw mean moisture index lowest quater MI":v22575, "raw mean moisture index warmest quarter":v22576, "raw mean temp coldest quarter":v22577, "raw mean temp driest quater":v22578, "raw mean temp warmer quarter":v22579, "raw mean temp wettest quarter":v22580, "raw min temp coldest period":v22581, 
  "raw moisture index seasonality":v22582, "raw precipitation coldets quarter":v22583, "raw precipitation driest period":v22584, "raw precipitation driest quarter":v22585, "raw precipitation seasonality":v22586, "raw precipitation warmest quarter":v22587, "raw precipitation wettest period":v22588, "raw precipitation wettest quarter":v22589, "raw radiation coldest quarter":v22590, "raw radiation driest quarter":v22591, "raw radiation seasonality":v22592, "raw radiation warmest quarter":v22593, "raw radiation wettest quarter":v22594, 
  "raw relief":v22595, "raw ridgetopflat":v22596, "raw rockalklty":v22597, "raw rockgrainsz":v22598, "raw rockhardness":v22599, "raw rocknutrnt":v22600, "raw roughness":v22601, "raw sapk 1 1000 g sand":v22602, "raw slope":v22603, "raw soildepth":v22604, "raw solpawhc":v22605, "raw temperature annual range":v22606, "raw temperature seasonality":v22607, "raw thpk 1 1000 g thickness":v22608, "raw twi":v22609, "raw valleybottom":v22610};
  var v22611 = [.6050000191];
  var v22612 = [19.6500005722];
  var v22613 = [21.75];
  var v22614 = [1111];
  var v22615 = [18E3];
  var v22616 = [100];
  var v22617 = [1];
  var v22618 = [26.1500005722];
  var v22619 = [200];
  var v22620 = [.5150000155];
  var v22621 = [.1199999973];
  var v22622 = [14.3499999046];
  var v22623 = [30.1999998093];
  var v22624 = [9.6500000954];
  var v22625 = [.5400000066];
  var v22626 = [.9950000048];
  var v22627 = [.1750000007];
  var v22628 = [.7150000036];
  var v22629 = [17.4500007629];
  var v22630 = [18.8999996185];
  var v22631 = [25.1499996185];
  var v22632 = [24.8500003815];
  var v22633 = [11.5999999046];
  var v22634 = [57];
  var v22635 = [.0198370004];
  var v22636 = [82];
  var v22637 = [0];
  var v22638 = [61];
  var v22639 = [99.5];
  var v22640 = [574.5];
  var v22641 = [72.5];
  var v22642 = [716];
  var v22643 = [15.9499998093];
  var v22644 = [19.1999998093];
  var v22645 = [18.5];
  var v22646 = [22.3999996185];
  var v22647 = [19.6000003815];
  var v22648 = [125.4036026001];
  var v22649 = [0];
  var v22650 = [4];
  var v22651 = [8];
  var v22652 = [7];
  var v22653 = [4];
  var v22654 = [11.5456476212];
  var v22655 = [63E3];
  var v22656 = [6.512172699];
  var v22657 = [1.25];
  var v22658 = [177];
  var v22659 = [18.6500005722];
  var v22660 = [1.0499999523];
  var v22661 = [295.5];
  var v22662 = [5.6324121952];
  var v22663 = [0];
  var v22664 = [5E4];
  var v22665 = [0];
  var v22666 = [19];
  var v22667 = [21.75];
  var v22668 = [1107];
  var v22669 = [19E3];
  var v22670 = [100];
  var v22671 = [1];
  var v22672 = [25.25];
  var v22673 = [250];
  var v22674 = [0];
  var v22675 = [14];
  var v22676 = [30];
  var v22677 = [8.5];
  var v22678 = [0];
  var v22679 = [.25];
  var v22680 = [0];
  var v22681 = [0];
  var v22682 = [17.5];
  var v22683 = [18.75];
  var v22684 = [24.75];
  var v22685 = [24.75];
  var v22686 = [11.5];
  var v22687 = [61.5];
  var v22688 = [74.5];
  var v22689 = [0];
  var v22690 = [55];
  var v22691 = [103.75];
  var v22692 = [608.75];
  var v22693 = [75.75];
  var v22694 = [731.5];
  var v22695 = [15.25];
  var v22696 = [19];
  var v22697 = [18.25];
  var v22698 = [21.5];
  var v22699 = [19];
  var v22700 = [162];
  var v22701 = [0];
  var v22702 = [4];
  var v22703 = [8];
  var v22704 = [7];
  var v22705 = [4];
  var v22706 = [15.5];
  var v22707 = [61500];
  var v22708 = [7.5];
  var v22709 = [1];
  var v22710 = [183];
  var v22711 = [17.5];
  var v22712 = [1];
  var v22713 = [285.25];
  var v22714 = [4.75];
  var v22715 = [0];
  var v19300 = {"modelled annual mean moisture index":v22611, "modelled annual mean rad":v22612, "modelled annual mean temp":v22613, "modelled annual precipitation":v22614, "modelled clpk 1 1000 g clay":v22615, "modelled erosional":v22616, "modelled highest period moisture index":v22617, "modelled highest period radiation":v22618, "modelled hydraulic conductivity ksat":v22619, "modelled isothermality":v22620, "modelled lowest period moisture index":v22621, "modelled lowest period radiation":v22622, 
  "modelled max temp warmest period":v22623, "modelled mean diurnal range":v22624, "modelled mean moisture index coldest quarter":v22625, "modelled mean moisture index highest quarter MI":v22626, "modelled mean moisture index lowest quater MI":v22627, "modelled mean moisture index warmest quarter":v22628, "modelled mean temp coldest quarter":v22629, "modelled mean temp driest quater":v22630, "modelled mean temp warmer quarter":v22631, "modelled mean temp wettest quarter":v22632, "modelled min temp coldest period":v22633, 
  "modelled moisture index seasonality":v22634, "modelled phos":v22635, "modelled precipitation coldets quarter":v22636, "modelled precipitation driest period":v22637, "modelled precipitation driest quarter":v22638, "modelled precipitation seasonality":v22639, "modelled precipitation warmest quarter":v22640, "modelled precipitation wettest period":v22641, "modelled precipitation wettest quarter":v22642, "modelled radiation coldest quarter":v22643, "modelled radiation driest quarter":v22644, "modelled radiation seasonality":v22645, 
  "modelled radiation warmest quarter":v22646, "modelled radiation wettest quarter":v22647, "modelled relief":v22648, "modelled ridgetopflat":v22649, "modelled rockalklty":v22650, "modelled rockgrainsz":v22651, "modelled rockhardness":v22652, "modelled rocknutrnt":v22653, "modelled roughness":v22654, "modelled sapk 1 1000 g sand":v22655, "modelled slope":v22656, "modelled soildepth":v22657, "modelled solpawhc":v22658, "modelled temperature annual range":v22659, "modelled temperature seasonality":v22660, 
  "modelled thpk 1 1000 g thickness":v22661, "modelled twi":v22662, "modelled valleybottom":v22663, "modelled whpk 1 1000 g water cap":v22664, "raw annual mean moisture index":v22665, "raw annual mean rad":v22666, "raw annual mean temp":v22667, "raw annual precipitation":v22668, "raw clpk 1 1000 g clay":v22669, "raw erosional":v22670, "raw highest period moisture index":v22671, "raw highest period radiation":v22672, "raw hydraulic conductivity ksat":v22673, "raw lowest period moisture index":v22674, 
  "raw lowest period radiation":v22675, "raw max temp warmest period":v22676, "raw mean diurnal range":v22677, "raw mean moisture index coldest quarter":v22678, "raw mean moisture index highest quarter MI":v22679, "raw mean moisture index lowest quater MI":v22680, "raw mean moisture index warmest quarter":v22681, "raw mean temp coldest quarter":v22682, "raw mean temp driest quater":v22683, "raw mean temp warmer quarter":v22684, "raw mean temp wettest quarter":v22685, "raw min temp coldest period":v22686, 
  "raw moisture index seasonality":v22687, "raw precipitation coldets quarter":v22688, "raw precipitation driest period":v22689, "raw precipitation driest quarter":v22690, "raw precipitation seasonality":v22691, "raw precipitation warmest quarter":v22692, "raw precipitation wettest period":v22693, "raw precipitation wettest quarter":v22694, "raw radiation coldest quarter":v22695, "raw radiation driest quarter":v22696, "raw radiation seasonality":v22697, "raw radiation warmest quarter":v22698, "raw radiation wettest quarter":v22699, 
  "raw relief":v22700, "raw ridgetopflat":v22701, "raw rockalklty":v22702, "raw rockgrainsz":v22703, "raw rockhardness":v22704, "raw rocknutrnt":v22705, "raw roughness":v22706, "raw sapk 1 1000 g sand":v22707, "raw slope":v22708, "raw soildepth":v22709, "raw solpawhc":v22710, "raw temperature annual range":v22711, "raw temperature seasonality":v22712, "raw thpk 1 1000 g thickness":v22713, "raw twi":v22714, "raw valleybottom":v22715};
  var v22716 = [.9200000167];
  var v22717 = [16.8999996185];
  var v22718 = [19.3999996185];
  var v22719 = [1778];
  var v22720 = [14E3];
  var v22721 = [100];
  var v22722 = [1];
  var v22723 = [22.8999996185];
  var v22724 = [300];
  var v22725 = [.4900000095];
  var v22726 = [.7300000191];
  var v22727 = [10.8000001907];
  var v22728 = [27.7999992371];
  var v22729 = [9.5];
  var v22730 = [1];
  var v22731 = [1];
  var v22732 = [.75];
  var v22733 = [.9200000167];
  var v22734 = [14.6000003815];
  var v22735 = [16.1000003815];
  var v22736 = [23.5];
  var v22737 = [23.1000003815];
  var v22738 = [8.1999998093];
  var v22739 = [12];
  var v22740 = [.0327499993];
  var v22741 = [258];
  var v22742 = [11];
  var v22743 = [211];
  var v22744 = [46];
  var v22745 = [670];
  var v22746 = [66];
  var v22747 = [730];
  var v22748 = [12.8999996185];
  var v22749 = [16.2999992371];
  var v22750 = [24];
  var v22751 = [20.1000003815];
  var v22752 = [18.2999992371];
  var v22753 = [178.5762023926];
  var v22754 = [0];
  var v22755 = [5];
  var v22756 = [3];
  var v22757 = [4];
  var v22758 = [4];
  var v22759 = [72.862159729];
  var v22760 = [69E3];
  var v22761 = [10.0389699936];
  var v22762 = [1];
  var v22763 = [169];
  var v22764 = [19.5];
  var v22765 = [1.2000000477];
  var v22766 = [599];
  var v22767 = [2.5513501167];
  var v22768 = [0];
  var v22769 = [117E3];
  var v22770 = [0];
  var v22771 = [16];
  var v22772 = [19];
  var v22773 = [1778];
  var v22774 = [14E3];
  var v22775 = [100];
  var v22776 = [1];
  var v22777 = [22];
  var v22778 = [300];
  var v22779 = [0];
  var v22780 = [10];
  var v22781 = [27];
  var v22782 = [9];
  var v22783 = [1];
  var v22784 = [1];
  var v22785 = [0];
  var v22786 = [0];
  var v22787 = [14];
  var v22788 = [16];
  var v22789 = [23];
  var v22790 = [23];
  var v22791 = [8];
  var v22792 = [12];
  var v22793 = [258];
  var v22794 = [11];
  var v22795 = [211];
  var v22796 = [46];
  var v22797 = [670];
  var v22798 = [66];
  var v22799 = [730];
  var v22800 = [12];
  var v22801 = [16];
  var v22802 = [24];
  var v22803 = [20];
  var v22804 = [18];
  var v22805 = [178];
  var v22806 = [0];
  var v22807 = [5];
  var v22808 = [3];
  var v22809 = [4];
  var v22810 = [4];
  var v22811 = [72];
  var v22812 = [69E3];
  var v22813 = [10];
  var v22814 = [1];
  var v22815 = [169];
  var v22816 = [19];
  var v22817 = [1];
  var v22818 = [599];
  var v22819 = [2];
  var v22820 = [0];
  var v19301 = {"modelled annual mean moisture index":v22716, "modelled annual mean rad":v22717, "modelled annual mean temp":v22718, "modelled annual precipitation":v22719, "modelled clpk 1 1000 g clay":v22720, "modelled erosional":v22721, "modelled highest period moisture index":v22722, "modelled highest period radiation":v22723, "modelled hydraulic conductivity ksat":v22724, "modelled isothermality":v22725, "modelled lowest period moisture index":v22726, "modelled lowest period radiation":v22727, 
  "modelled max temp warmest period":v22728, "modelled mean diurnal range":v22729, "modelled mean moisture index coldest quarter":v22730, "modelled mean moisture index highest quarter MI":v22731, "modelled mean moisture index lowest quater MI":v22732, "modelled mean moisture index warmest quarter":v22733, "modelled mean temp coldest quarter":v22734, "modelled mean temp driest quater":v22735, "modelled mean temp warmer quarter":v22736, "modelled mean temp wettest quarter":v22737, "modelled min temp coldest period":v22738, 
  "modelled moisture index seasonality":v22739, "modelled phos":v22740, "modelled precipitation coldets quarter":v22741, "modelled precipitation driest period":v22742, "modelled precipitation driest quarter":v22743, "modelled precipitation seasonality":v22744, "modelled precipitation warmest quarter":v22745, "modelled precipitation wettest period":v22746, "modelled precipitation wettest quarter":v22747, "modelled radiation coldest quarter":v22748, "modelled radiation driest quarter":v22749, "modelled radiation seasonality":v22750, 
  "modelled radiation warmest quarter":v22751, "modelled radiation wettest quarter":v22752, "modelled relief":v22753, "modelled ridgetopflat":v22754, "modelled rockalklty":v22755, "modelled rockgrainsz":v22756, "modelled rockhardness":v22757, "modelled rocknutrnt":v22758, "modelled roughness":v22759, "modelled sapk 1 1000 g sand":v22760, "modelled slope":v22761, "modelled soildepth":v22762, "modelled solpawhc":v22763, "modelled temperature annual range":v22764, "modelled temperature seasonality":v22765, 
  "modelled thpk 1 1000 g thickness":v22766, "modelled twi":v22767, "modelled valleybottom":v22768, "modelled whpk 1 1000 g water cap":v22769, "raw annual mean moisture index":v22770, "raw annual mean rad":v22771, "raw annual mean temp":v22772, "raw annual precipitation":v22773, "raw clpk 1 1000 g clay":v22774, "raw erosional":v22775, "raw highest period moisture index":v22776, "raw highest period radiation":v22777, "raw hydraulic conductivity ksat":v22778, "raw lowest period moisture index":v22779, 
  "raw lowest period radiation":v22780, "raw max temp warmest period":v22781, "raw mean diurnal range":v22782, "raw mean moisture index coldest quarter":v22783, "raw mean moisture index highest quarter MI":v22784, "raw mean moisture index lowest quater MI":v22785, "raw mean moisture index warmest quarter":v22786, "raw mean temp coldest quarter":v22787, "raw mean temp driest quater":v22788, "raw mean temp warmer quarter":v22789, "raw mean temp wettest quarter":v22790, "raw min temp coldest period":v22791, 
  "raw moisture index seasonality":v22792, "raw precipitation coldets quarter":v22793, "raw precipitation driest period":v22794, "raw precipitation driest quarter":v22795, "raw precipitation seasonality":v22796, "raw precipitation warmest quarter":v22797, "raw precipitation wettest period":v22798, "raw precipitation wettest quarter":v22799, "raw radiation coldest quarter":v22800, "raw radiation driest quarter":v22801, "raw radiation seasonality":v22802, "raw radiation warmest quarter":v22803, "raw radiation wettest quarter":v22804, 
  "raw relief":v22805, "raw ridgetopflat":v22806, "raw rockalklty":v22807, "raw rockgrainsz":v22808, "raw rockhardness":v22809, "raw rocknutrnt":v22810, "raw roughness":v22811, "raw sapk 1 1000 g sand":v22812, "raw slope":v22813, "raw soildepth":v22814, "raw solpawhc":v22815, "raw temperature annual range":v22816, "raw temperature seasonality":v22817, "raw thpk 1 1000 g thickness":v22818, "raw twi":v22819, "raw valleybottom":v22820};
  var v22821 = [.8323181818];
  var v22822 = [17.9524242387];
  var v22823 = [19.2898482727];
  var v22824 = [1888.3636363636];
  var v22825 = [25214.7727272727];
  var v22826 = [92.8787878788];
  var v22827 = [.998939395];
  var v22828 = [24.5178788503];
  var v22829 = [205.6212121212];
  var v22830 = [.5086363656];
  var v22831 = [.4447727201];
  var v22832 = [12.1872727221];
  var v22833 = [28.0525757327];
  var v22834 = [9.485757533];
  var v22835 = [.8951666693];
  var v22836 = [.9978787867];
  var v22837 = [.5378636367];
  var v22838 = [.8636969721];
  var v22839 = [14.951212141];
  var v22840 = [16.7531818144];
  var v22841 = [22.9656060132];
  var v22842 = [22.5318182165];
  var v22843 = [9.4287879063];
  var v22844 = [25.9621212121];
  var v22845 = [.0453631317];
  var v22846 = [235.6090909091];
  var v22847 = [6.7242424242];
  var v22848 = [167.2409090909];
  var v22849 = [68.203030303];
  var v22850 = [790.2136363636];
  var v22851 = [88.2606060606];
  var v22852 = [970.5196969697];
  var v22853 = [14.1262121605];
  var v22854 = [17.7987878742];
  var v22855 = [21.6636363636];
  var v22856 = [20.8286361521];
  var v22857 = [18.6671213323];
  var v22858 = [151.1616860035];
  var v22859 = [0];
  var v22860 = [4.7151515152];
  var v22861 = [5.5742424242];
  var v22862 = [6.2560606061];
  var v22863 = [4.5742424242];
  var v22864 = [14.6029429806];
  var v22865 = [54667.803030303];
  var v22866 = [8.4508264353];
  var v22867 = [1.1122727402];
  var v22868 = [155.3090909091];
  var v22869 = [18.6489395503];
  var v22870 = [1.0938939283];
  var v22871 = [301.3257575758];
  var v22872 = [5.6370893103];
  var v22873 = [7.1212121212];
  var v22874 = [51557.1969696969];
  var v22875 = [0];
  var v22876 = [17.6111111111];
  var v22877 = [18.5];
  var v22878 = [1925.8333333333];
  var v22879 = [26833.3333333333];
  var v22880 = [94.4444444444];
  var v22881 = [.9444444444];
  var v22882 = [24.1111111111];
  var v22883 = [196.1111111111];
  var v22884 = [0];
  var v22885 = [11.8333333333];
  var v22886 = [27.4444444444];
  var v22887 = [9.2777777778];
  var v22888 = [.3888888889];
  var v22889 = [.9444444444];
  var v22890 = [0];
  var v22891 = [.0555555556];
  var v22892 = [14.1111111111];
  var v22893 = [15.8888888889];
  var v22894 = [22.1666666667];
  var v22895 = [21.7222222222];
  var v22896 = [8.5555555556];
  var v22897 = [24.3333333333];
  var v22898 = [238.8888888889];
  var v22899 = [6.5];
  var v22900 = [169.1666666667];
  var v22901 = [69.4444444444];
  var v22902 = [812.7222222222];
  var v22903 = [91.2777777778];
  var v22904 = [998.7222222222];
  var v22905 = [13.6666666667];
  var v22906 = [17.1666666667];
  var v22907 = [21.3333333333];
  var v22908 = [20.3333333333];
  var v22909 = [18.2777777778];
  var v22910 = [163.1111111111];
  var v22911 = [0];
  var v22912 = [4.3888888889];
  var v22913 = [5.5];
  var v22914 = [6.0555555556];
  var v22915 = [4.4444444444];
  var v22916 = [11.8888888889];
  var v22917 = [52583.3333333333];
  var v22918 = [8.5];
  var v22919 = [.8333333333];
  var v22920 = [156.6666666667];
  var v22921 = [18.6111111111];
  var v22922 = [.6111111111];
  var v22923 = [272.0555555556];
  var v22924 = [5.0555555556];
  var v22925 = [5.5555555556];
  var v19302 = {"modelled annual mean moisture index":v22821, "modelled annual mean rad":v22822, "modelled annual mean temp":v22823, "modelled annual precipitation":v22824, "modelled clpk 1 1000 g clay":v22825, "modelled erosional":v22826, "modelled highest period moisture index":v22827, "modelled highest period radiation":v22828, "modelled hydraulic conductivity ksat":v22829, "modelled isothermality":v22830, "modelled lowest period moisture index":v22831, "modelled lowest period radiation":v22832, 
  "modelled max temp warmest period":v22833, "modelled mean diurnal range":v22834, "modelled mean moisture index coldest quarter":v22835, "modelled mean moisture index highest quarter MI":v22836, "modelled mean moisture index lowest quater MI":v22837, "modelled mean moisture index warmest quarter":v22838, "modelled mean temp coldest quarter":v22839, "modelled mean temp driest quater":v22840, "modelled mean temp warmer quarter":v22841, "modelled mean temp wettest quarter":v22842, "modelled min temp coldest period":v22843, 
  "modelled moisture index seasonality":v22844, "modelled phos":v22845, "modelled precipitation coldets quarter":v22846, "modelled precipitation driest period":v22847, "modelled precipitation driest quarter":v22848, "modelled precipitation seasonality":v22849, "modelled precipitation warmest quarter":v22850, "modelled precipitation wettest period":v22851, "modelled precipitation wettest quarter":v22852, "modelled radiation coldest quarter":v22853, "modelled radiation driest quarter":v22854, "modelled radiation seasonality":v22855, 
  "modelled radiation warmest quarter":v22856, "modelled radiation wettest quarter":v22857, "modelled relief":v22858, "modelled ridgetopflat":v22859, "modelled rockalklty":v22860, "modelled rockgrainsz":v22861, "modelled rockhardness":v22862, "modelled rocknutrnt":v22863, "modelled roughness":v22864, "modelled sapk 1 1000 g sand":v22865, "modelled slope":v22866, "modelled soildepth":v22867, "modelled solpawhc":v22868, "modelled temperature annual range":v22869, "modelled temperature seasonality":v22870, 
  "modelled thpk 1 1000 g thickness":v22871, "modelled twi":v22872, "modelled valleybottom":v22873, "modelled whpk 1 1000 g water cap":v22874, "raw annual mean moisture index":v22875, "raw annual mean rad":v22876, "raw annual mean temp":v22877, "raw annual precipitation":v22878, "raw clpk 1 1000 g clay":v22879, "raw erosional":v22880, "raw highest period moisture index":v22881, "raw highest period radiation":v22882, "raw hydraulic conductivity ksat":v22883, "raw lowest period moisture index":v22884, 
  "raw lowest period radiation":v22885, "raw max temp warmest period":v22886, "raw mean diurnal range":v22887, "raw mean moisture index coldest quarter":v22888, "raw mean moisture index highest quarter MI":v22889, "raw mean moisture index lowest quater MI":v22890, "raw mean moisture index warmest quarter":v22891, "raw mean temp coldest quarter":v22892, "raw mean temp driest quater":v22893, "raw mean temp warmer quarter":v22894, "raw mean temp wettest quarter":v22895, "raw min temp coldest period":v22896, 
  "raw moisture index seasonality":v22897, "raw precipitation coldets quarter":v22898, "raw precipitation driest period":v22899, "raw precipitation driest quarter":v22900, "raw precipitation seasonality":v22901, "raw precipitation warmest quarter":v22902, "raw precipitation wettest period":v22903, "raw precipitation wettest quarter":v22904, "raw radiation coldest quarter":v22905, "raw radiation driest quarter":v22906, "raw radiation seasonality":v22907, "raw radiation warmest quarter":v22908, "raw radiation wettest quarter":v22909, 
  "raw relief":v22910, "raw ridgetopflat":v22911, "raw rockalklty":v22912, "raw rockgrainsz":v22913, "raw rockhardness":v22914, "raw rocknutrnt":v22915, "raw roughness":v22916, "raw sapk 1 1000 g sand":v22917, "raw slope":v22918, "raw soildepth":v22919, "raw solpawhc":v22920, "raw temperature annual range":v22921, "raw temperature seasonality":v22922, "raw thpk 1 1000 g thickness":v22923, "raw twi":v22924, "raw valleybottom":v22925};
  var v22926 = [.9350000024];
  var v22927 = [18.0500001907];
  var v22928 = [20.1999998093];
  var v22929 = [2948];
  var v22930 = [42E3];
  var v22931 = [100];
  var v22932 = [1];
  var v22933 = [25.0500001907];
  var v22934 = [300];
  var v22935 = [.5400000215];
  var v22936 = [.5549999774];
  var v22937 = [12.4000000954];
  var v22938 = [28.6499996185];
  var v22939 = [9.4500002861];
  var v22940 = [1];
  var v22941 = [1];
  var v22942 = [.7350000143];
  var v22943 = [.9200000167];
  var v22944 = [16.4500007629];
  var v22945 = [19.4000005722];
  var v22946 = [23.4000005722];
  var v22947 = [22.6499996185];
  var v22948 = [11.3000001907];
  var v22949 = [14];
  var v22950 = [.0769999996];
  var v22951 = [428.5];
  var v22952 = [12.5];
  var v22953 = [247];
  var v22954 = [68.5];
  var v22955 = [1054];
  var v22956 = [131];
  var v22957 = [1492];
  var v22958 = [14.75];
  var v22959 = [19.6499996185];
  var v22960 = [20];
  var v22961 = [20.75];
  var v22962 = [18.0500001907];
  var v22963 = [93.9310970306];
  var v22964 = [0];
  var v22965 = [6];
  var v22966 = [4];
  var v22967 = [7];
  var v22968 = [6];
  var v22969 = [4.0198574662];
  var v22970 = [44E3];
  var v22971 = [5.4142469168];
  var v22972 = [1.1000000238];
  var v22973 = [171];
  var v22974 = [17.4000005722];
  var v22975 = [.9499999881];
  var v22976 = [150];
  var v22977 = [5.4885058403];
  var v22978 = [0];
  var v22979 = [33E3];
  var v22980 = [0];
  var v22981 = [18];
  var v22982 = [20];
  var v22983 = [3017.6666666667];
  var v22984 = [42E3];
  var v22985 = [100];
  var v22986 = [1];
  var v22987 = [25];
  var v22988 = [300];
  var v22989 = [0];
  var v22990 = [12];
  var v22991 = [28];
  var v22992 = [9];
  var v22993 = [1];
  var v22994 = [1];
  var v22995 = [0];
  var v22996 = [0];
  var v22997 = [16];
  var v22998 = [19];
  var v22999 = [23];
  var v23000 = [22];
  var v23001 = [11];
  var v23002 = [13.6666666667];
  var v23003 = [437];
  var v23004 = [12.6666666667];
  var v23005 = [252.3333333333];
  var v23006 = [68.6666666667];
  var v23007 = [1077.3333333333];
  var v23008 = [134.3333333333];
  var v23009 = [1531];
  var v23010 = [14];
  var v23011 = [19];
  var v23012 = [20];
  var v23013 = [20];
  var v23014 = [18];
  var v23015 = [113];
  var v23016 = [0];
  var v23017 = [6];
  var v23018 = [4];
  var v23019 = [7];
  var v23020 = [6];
  var v23021 = [4.6666666667];
  var v23022 = [44E3];
  var v23023 = [6.3333333333];
  var v23024 = [1];
  var v23025 = [165.6666666667];
  var v23026 = [17];
  var v23027 = [0];
  var v23028 = [150];
  var v23029 = [5.3333333333];
  var v23030 = [0];
  var v19303 = {"modelled annual mean moisture index":v22926, "modelled annual mean rad":v22927, "modelled annual mean temp":v22928, "modelled annual precipitation":v22929, "modelled clpk 1 1000 g clay":v22930, "modelled erosional":v22931, "modelled highest period moisture index":v22932, "modelled highest period radiation":v22933, "modelled hydraulic conductivity ksat":v22934, "modelled isothermality":v22935, "modelled lowest period moisture index":v22936, "modelled lowest period radiation":v22937, 
  "modelled max temp warmest period":v22938, "modelled mean diurnal range":v22939, "modelled mean moisture index coldest quarter":v22940, "modelled mean moisture index highest quarter MI":v22941, "modelled mean moisture index lowest quater MI":v22942, "modelled mean moisture index warmest quarter":v22943, "modelled mean temp coldest quarter":v22944, "modelled mean temp driest quater":v22945, "modelled mean temp warmer quarter":v22946, "modelled mean temp wettest quarter":v22947, "modelled min temp coldest period":v22948, 
  "modelled moisture index seasonality":v22949, "modelled phos":v22950, "modelled precipitation coldets quarter":v22951, "modelled precipitation driest period":v22952, "modelled precipitation driest quarter":v22953, "modelled precipitation seasonality":v22954, "modelled precipitation warmest quarter":v22955, "modelled precipitation wettest period":v22956, "modelled precipitation wettest quarter":v22957, "modelled radiation coldest quarter":v22958, "modelled radiation driest quarter":v22959, "modelled radiation seasonality":v22960, 
  "modelled radiation warmest quarter":v22961, "modelled radiation wettest quarter":v22962, "modelled relief":v22963, "modelled ridgetopflat":v22964, "modelled rockalklty":v22965, "modelled rockgrainsz":v22966, "modelled rockhardness":v22967, "modelled rocknutrnt":v22968, "modelled roughness":v22969, "modelled sapk 1 1000 g sand":v22970, "modelled slope":v22971, "modelled soildepth":v22972, "modelled solpawhc":v22973, "modelled temperature annual range":v22974, "modelled temperature seasonality":v22975, 
  "modelled thpk 1 1000 g thickness":v22976, "modelled twi":v22977, "modelled valleybottom":v22978, "modelled whpk 1 1000 g water cap":v22979, "raw annual mean moisture index":v22980, "raw annual mean rad":v22981, "raw annual mean temp":v22982, "raw annual precipitation":v22983, "raw clpk 1 1000 g clay":v22984, "raw erosional":v22985, "raw highest period moisture index":v22986, "raw highest period radiation":v22987, "raw hydraulic conductivity ksat":v22988, "raw lowest period moisture index":v22989, 
  "raw lowest period radiation":v22990, "raw max temp warmest period":v22991, "raw mean diurnal range":v22992, "raw mean moisture index coldest quarter":v22993, "raw mean moisture index highest quarter MI":v22994, "raw mean moisture index lowest quater MI":v22995, "raw mean moisture index warmest quarter":v22996, "raw mean temp coldest quarter":v22997, "raw mean temp driest quater":v22998, "raw mean temp warmer quarter":v22999, "raw mean temp wettest quarter":v23000, "raw min temp coldest period":v23001, 
  "raw moisture index seasonality":v23002, "raw precipitation coldets quarter":v23003, "raw precipitation driest period":v23004, "raw precipitation driest quarter":v23005, "raw precipitation seasonality":v23006, "raw precipitation warmest quarter":v23007, "raw precipitation wettest period":v23008, "raw precipitation wettest quarter":v23009, "raw radiation coldest quarter":v23010, "raw radiation driest quarter":v23011, "raw radiation seasonality":v23012, "raw radiation warmest quarter":v23013, "raw radiation wettest quarter":v23014, 
  "raw relief":v23015, "raw ridgetopflat":v23016, "raw rockalklty":v23017, "raw rockgrainsz":v23018, "raw rockhardness":v23019, "raw rocknutrnt":v23020, "raw roughness":v23021, "raw sapk 1 1000 g sand":v23022, "raw slope":v23023, "raw soildepth":v23024, "raw solpawhc":v23025, "raw temperature annual range":v23026, "raw temperature seasonality":v23027, "raw thpk 1 1000 g thickness":v23028, "raw twi":v23029, "raw valleybottom":v23030};
  var v23031 = [.8325000107];
  var v23032 = [18.5249996185];
  var v23033 = [20.9250001907];
  var v23034 = [2179.25];
  var v23035 = [35250];
  var v23036 = [100];
  var v23037 = [1];
  var v23038 = [25.2750000954];
  var v23039 = [250];
  var v23040 = [.5450000167];
  var v23041 = [.3475000001];
  var v23042 = [13.3499999046];
  var v23043 = [29.2249999046];
  var v23044 = [9.5];
  var v23045 = [.8774999976];
  var v23046 = [1];
  var v23047 = [.4975000024];
  var v23048 = [.8824999928];
  var v23049 = [17.125];
  var v23050 = [19.0499997139];
  var v23051 = [24.0749998093];
  var v23052 = [23.5500001907];
  var v23053 = [11.75];
  var v23054 = [28.5];
  var v23055 = [.0491249994];
  var v23056 = [234.25];
  var v23057 = [5.5];
  var v23058 = [157.75];
  var v23059 = [79];
  var v23060 = [919.25];
  var v23061 = [108.75];
  var v23062 = [1209.25];
  var v23063 = [15.4999997616];
  var v23064 = [18.9500002861];
  var v23065 = [18.75];
  var v23066 = [21];
  var v23067 = [18.4499998093];
  var v23068 = [191.561460495];
  var v23069 = [0];
  var v23070 = [4.5];
  var v23071 = [4.5];
  var v23072 = [6.5];
  var v23073 = [5.5];
  var v23074 = [11.7312440872];
  var v23075 = [46500];
  var v23076 = [10.01773417];
  var v23077 = [1.2000000179];
  var v23078 = [164.5];
  var v23079 = [17.4500000477];
  var v23080 = [.9424999952];
  var v23081 = [195.25];
  var v23082 = [7.2423673272];
  var v23083 = [0];
  var v23084 = [35500];
  var v23085 = [0];
  var v23086 = [18];
  var v23087 = [20.5];
  var v23088 = [2179.25];
  var v23089 = [35250];
  var v23090 = [100];
  var v23091 = [1];
  var v23092 = [25];
  var v23093 = [250];
  var v23094 = [0];
  var v23095 = [13];
  var v23096 = [28.5];
  var v23097 = [9];
  var v23098 = [.75];
  var v23099 = [1];
  var v23100 = [0];
  var v23101 = [0];
  var v23102 = [16.75];
  var v23103 = [18.75];
  var v23104 = [23.75];
  var v23105 = [23];
  var v23106 = [11];
  var v23107 = [28.5];
  var v23108 = [234.25];
  var v23109 = [5.5];
  var v23110 = [157.75];
  var v23111 = [79];
  var v23112 = [919.25];
  var v23113 = [108.75];
  var v23114 = [1209.25];
  var v23115 = [15.25];
  var v23116 = [18.75];
  var v23117 = [18.75];
  var v23118 = [20.75];
  var v23119 = [18];
  var v23120 = [191];
  var v23121 = [0];
  var v23122 = [4.5];
  var v23123 = [4.5];
  var v23124 = [6.5];
  var v23125 = [5.5];
  var v23126 = [11.25];
  var v23127 = [46500];
  var v23128 = [9.5];
  var v23129 = [1];
  var v23130 = [164.5];
  var v23131 = [17];
  var v23132 = [.25];
  var v23133 = [195.25];
  var v23134 = [6.75];
  var v23135 = [0];
  var v19304 = {"modelled annual mean moisture index":v23031, "modelled annual mean rad":v23032, "modelled annual mean temp":v23033, "modelled annual precipitation":v23034, "modelled clpk 1 1000 g clay":v23035, "modelled erosional":v23036, "modelled highest period moisture index":v23037, "modelled highest period radiation":v23038, "modelled hydraulic conductivity ksat":v23039, "modelled isothermality":v23040, "modelled lowest period moisture index":v23041, "modelled lowest period radiation":v23042, 
  "modelled max temp warmest period":v23043, "modelled mean diurnal range":v23044, "modelled mean moisture index coldest quarter":v23045, "modelled mean moisture index highest quarter MI":v23046, "modelled mean moisture index lowest quater MI":v23047, "modelled mean moisture index warmest quarter":v23048, "modelled mean temp coldest quarter":v23049, "modelled mean temp driest quater":v23050, "modelled mean temp warmer quarter":v23051, "modelled mean temp wettest quarter":v23052, "modelled min temp coldest period":v23053, 
  "modelled moisture index seasonality":v23054, "modelled phos":v23055, "modelled precipitation coldets quarter":v23056, "modelled precipitation driest period":v23057, "modelled precipitation driest quarter":v23058, "modelled precipitation seasonality":v23059, "modelled precipitation warmest quarter":v23060, "modelled precipitation wettest period":v23061, "modelled precipitation wettest quarter":v23062, "modelled radiation coldest quarter":v23063, "modelled radiation driest quarter":v23064, "modelled radiation seasonality":v23065, 
  "modelled radiation warmest quarter":v23066, "modelled radiation wettest quarter":v23067, "modelled relief":v23068, "modelled ridgetopflat":v23069, "modelled rockalklty":v23070, "modelled rockgrainsz":v23071, "modelled rockhardness":v23072, "modelled rocknutrnt":v23073, "modelled roughness":v23074, "modelled sapk 1 1000 g sand":v23075, "modelled slope":v23076, "modelled soildepth":v23077, "modelled solpawhc":v23078, "modelled temperature annual range":v23079, "modelled temperature seasonality":v23080, 
  "modelled thpk 1 1000 g thickness":v23081, "modelled twi":v23082, "modelled valleybottom":v23083, "modelled whpk 1 1000 g water cap":v23084, "raw annual mean moisture index":v23085, "raw annual mean rad":v23086, "raw annual mean temp":v23087, "raw annual precipitation":v23088, "raw clpk 1 1000 g clay":v23089, "raw erosional":v23090, "raw highest period moisture index":v23091, "raw highest period radiation":v23092, "raw hydraulic conductivity ksat":v23093, "raw lowest period moisture index":v23094, 
  "raw lowest period radiation":v23095, "raw max temp warmest period":v23096, "raw mean diurnal range":v23097, "raw mean moisture index coldest quarter":v23098, "raw mean moisture index highest quarter MI":v23099, "raw mean moisture index lowest quater MI":v23100, "raw mean moisture index warmest quarter":v23101, "raw mean temp coldest quarter":v23102, "raw mean temp driest quater":v23103, "raw mean temp warmer quarter":v23104, "raw mean temp wettest quarter":v23105, "raw min temp coldest period":v23106, 
  "raw moisture index seasonality":v23107, "raw precipitation coldets quarter":v23108, "raw precipitation driest period":v23109, "raw precipitation driest quarter":v23110, "raw precipitation seasonality":v23111, "raw precipitation warmest quarter":v23112, "raw precipitation wettest period":v23113, "raw precipitation wettest quarter":v23114, "raw radiation coldest quarter":v23115, "raw radiation driest quarter":v23116, "raw radiation seasonality":v23117, "raw radiation warmest quarter":v23118, "raw radiation wettest quarter":v23119, 
  "raw relief":v23120, "raw ridgetopflat":v23121, "raw rockalklty":v23122, "raw rockgrainsz":v23123, "raw rockhardness":v23124, "raw rocknutrnt":v23125, "raw roughness":v23126, "raw sapk 1 1000 g sand":v23127, "raw slope":v23128, "raw soildepth":v23129, "raw solpawhc":v23130, "raw temperature annual range":v23131, "raw temperature seasonality":v23132, "raw thpk 1 1000 g thickness":v23133, "raw twi":v23134, "raw valleybottom":v23135};
  var v23136 = [.8511999941];
  var v23137 = [17.7549997139];
  var v23138 = [20.1320000076];
  var v23139 = [2004.6];
  var v23140 = [24337.5];
  var v23141 = [100];
  var v23142 = [1];
  var v23143 = [24.4609998512];
  var v23144 = [230];
  var v23145 = [.519799999];
  var v23146 = [.4349999921];
  var v23147 = [11.9399999428];
  var v23148 = [28.5809999847];
  var v23149 = [9.3529999971];
  var v23150 = [.9477999979];
  var v23151 = [1];
  var v23152 = [.5399000007];
  var v23153 = [.8883000004];
  var v23154 = [16.0029999352];
  var v23155 = [17.4470001602];
  var v23156 = [23.6520002556];
  var v23157 = [23.2579998207];
  var v23158 = [10.5970001769];
  var v23159 = [24.44];
  var v23160 = [.0236599989];
  var v23161 = [229.2];
  var v23162 = [8.44];
  var v23163 = [170.66];
  var v23164 = [66.77];
  var v23165 = [871.37];
  var v23166 = [92.64];
  var v23167 = [1050.83];
  var v23168 = [14.0290001678];
  var v23169 = [17.2499999809];
  var v23170 = [21.92];
  var v23171 = [20.4790001106];
  var v23172 = [18.3959999466];
  var v23173 = [180.825651741];
  var v23174 = [0];
  var v23175 = [4.92];
  var v23176 = [6.22];
  var v23177 = [6.34];
  var v23178 = [4.34];
  var v23179 = [41.1613443279];
  var v23180 = [52267.5];
  var v23181 = [10.5619576693];
  var v23182 = [1.3479999959];
  var v23183 = [183.33];
  var v23184 = [17.9670000267];
  var v23185 = [1.0439999992];
  var v23186 = [226.16];
  var v23187 = [5.7365186501];
  var v23188 = [1.0625];
  var v23189 = [35632.5];
  var v23190 = [0];
  var v23191 = [17];
  var v23192 = [18.8571428571];
  var v23193 = [1932.7142857143];
  var v23194 = [23678.5714285714];
  var v23195 = [100];
  var v23196 = [1];
  var v23197 = [24.1428571429];
  var v23198 = [242.8571428571];
  var v23199 = [0];
  var v23200 = [11];
  var v23201 = [27.4285714286];
  var v23202 = [9];
  var v23203 = [.4285714286];
  var v23204 = [1];
  var v23205 = [0];
  var v23206 = [0];
  var v23207 = [14.5714285714];
  var v23208 = [16];
  var v23209 = [22.5714285714];
  var v23210 = [22.1428571429];
  var v23211 = [9.2857142857];
  var v23212 = [23.5714285714];
  var v23213 = [226.2857142857];
  var v23214 = [8.4285714286];
  var v23215 = [171.4285714286];
  var v23216 = [64.8571428571];
  var v23217 = [833.5714285714];
  var v23218 = [89];
  var v23219 = [1003.5714285714];
  var v23220 = [13.1428571429];
  var v23221 = [16.4285714286];
  var v23222 = [22.8571428571];
  var v23223 = [20.2857142857];
  var v23224 = [17.8571428571];
  var v23225 = [182.5714285714];
  var v23226 = [0];
  var v23227 = [4];
  var v23228 = [4.8571428571];
  var v23229 = [5.1428571429];
  var v23230 = [3.7142857143];
  var v23231 = [29.7142857143];
  var v23232 = [54535.7142857143];
  var v23233 = [10.1428571429];
  var v23234 = [1];
  var v23235 = [188.7142857143];
  var v23236 = [18];
  var v23237 = [.4285714286];
  var v23238 = [253.4285714286];
  var v23239 = [4.8571428571];
  var v23240 = [0];
  var v19305 = {"modelled annual mean moisture index":v23136, "modelled annual mean rad":v23137, "modelled annual mean temp":v23138, "modelled annual precipitation":v23139, "modelled clpk 1 1000 g clay":v23140, "modelled erosional":v23141, "modelled highest period moisture index":v23142, "modelled highest period radiation":v23143, "modelled hydraulic conductivity ksat":v23144, "modelled isothermality":v23145, "modelled lowest period moisture index":v23146, "modelled lowest period radiation":v23147, 
  "modelled max temp warmest period":v23148, "modelled mean diurnal range":v23149, "modelled mean moisture index coldest quarter":v23150, "modelled mean moisture index highest quarter MI":v23151, "modelled mean moisture index lowest quater MI":v23152, "modelled mean moisture index warmest quarter":v23153, "modelled mean temp coldest quarter":v23154, "modelled mean temp driest quater":v23155, "modelled mean temp warmer quarter":v23156, "modelled mean temp wettest quarter":v23157, "modelled min temp coldest period":v23158, 
  "modelled moisture index seasonality":v23159, "modelled phos":v23160, "modelled precipitation coldets quarter":v23161, "modelled precipitation driest period":v23162, "modelled precipitation driest quarter":v23163, "modelled precipitation seasonality":v23164, "modelled precipitation warmest quarter":v23165, "modelled precipitation wettest period":v23166, "modelled precipitation wettest quarter":v23167, "modelled radiation coldest quarter":v23168, "modelled radiation driest quarter":v23169, "modelled radiation seasonality":v23170, 
  "modelled radiation warmest quarter":v23171, "modelled radiation wettest quarter":v23172, "modelled relief":v23173, "modelled ridgetopflat":v23174, "modelled rockalklty":v23175, "modelled rockgrainsz":v23176, "modelled rockhardness":v23177, "modelled rocknutrnt":v23178, "modelled roughness":v23179, "modelled sapk 1 1000 g sand":v23180, "modelled slope":v23181, "modelled soildepth":v23182, "modelled solpawhc":v23183, "modelled temperature annual range":v23184, "modelled temperature seasonality":v23185, 
  "modelled thpk 1 1000 g thickness":v23186, "modelled twi":v23187, "modelled valleybottom":v23188, "modelled whpk 1 1000 g water cap":v23189, "raw annual mean moisture index":v23190, "raw annual mean rad":v23191, "raw annual mean temp":v23192, "raw annual precipitation":v23193, "raw clpk 1 1000 g clay":v23194, "raw erosional":v23195, "raw highest period moisture index":v23196, "raw highest period radiation":v23197, "raw hydraulic conductivity ksat":v23198, "raw lowest period moisture index":v23199, 
  "raw lowest period radiation":v23200, "raw max temp warmest period":v23201, "raw mean diurnal range":v23202, "raw mean moisture index coldest quarter":v23203, "raw mean moisture index highest quarter MI":v23204, "raw mean moisture index lowest quater MI":v23205, "raw mean moisture index warmest quarter":v23206, "raw mean temp coldest quarter":v23207, "raw mean temp driest quater":v23208, "raw mean temp warmer quarter":v23209, "raw mean temp wettest quarter":v23210, "raw min temp coldest period":v23211, 
  "raw moisture index seasonality":v23212, "raw precipitation coldets quarter":v23213, "raw precipitation driest period":v23214, "raw precipitation driest quarter":v23215, "raw precipitation seasonality":v23216, "raw precipitation warmest quarter":v23217, "raw precipitation wettest period":v23218, "raw precipitation wettest quarter":v23219, "raw radiation coldest quarter":v23220, "raw radiation driest quarter":v23221, "raw radiation seasonality":v23222, "raw radiation warmest quarter":v23223, "raw radiation wettest quarter":v23224, 
  "raw relief":v23225, "raw ridgetopflat":v23226, "raw rockalklty":v23227, "raw rockgrainsz":v23228, "raw rockhardness":v23229, "raw rocknutrnt":v23230, "raw roughness":v23231, "raw sapk 1 1000 g sand":v23232, "raw slope":v23233, "raw soildepth":v23234, "raw solpawhc":v23235, "raw temperature annual range":v23236, "raw temperature seasonality":v23237, "raw thpk 1 1000 g thickness":v23238, "raw twi":v23239, "raw valleybottom":v23240};
  var v23241 = [.8419692351];
  var v23242 = [15.4089230904];
  var v23243 = [11.7830769011];
  var v23244 = [1282.2246153846];
  var v23245 = [21682.3076923077];
  var v23246 = [98.4807692308];
  var v23247 = [.9973846157];
  var v23248 = [24.0646153729];
  var v23249 = [180.3692307692];
  var v23250 = [.4703076909];
  var v23251 = [.48273846];
  var v23252 = [7.0495384554];
  var v23253 = [23.5836921927];
  var v23254 = [10.2701538335];
  var v23255 = [.9867076942];
  var v23256 = [.9953846163];
  var v23257 = [.5702769235];
  var v23258 = [.6286461528];
  var v23259 = [6.664307713];
  var v23260 = [12.2307692];
  var v23261 = [16.8929231204];
  var v23262 = [11.9966153483];
  var v23263 = [1.7335384761];
  var v23264 = [22.3753846154];
  var v23265 = [.0354398355];
  var v23266 = [316.5815384615];
  var v23267 = [13.1261538462];
  var v23268 = [212.48];
  var v23269 = [25.9846153846];
  var v23270 = [333.4307692308];
  var v23271 = [39.5076923077];
  var v23272 = [446.7507692308];
  var v23273 = [8.8353845684];
  var v23274 = [17.0212307989];
  var v23275 = [39.0307692308];
  var v23276 = [21.3784615619];
  var v23277 = [14.3270768371];
  var v23278 = [156.8749819389];
  var v23279 = [.2884615385];
  var v23280 = [4.6646153846];
  var v23281 = [4.6615384615];
  var v23282 = [5.8615384615];
  var v23283 = [4.5569230769];
  var v23284 = [9.5328148233];
  var v23285 = [58780.7692307692];
  var v23286 = [9.5631930516];
  var v23287 = [1.0756923059];
  var v23288 = [151.4553846154];
  var v23289 = [21.8473846553];
  var v23290 = [1.4144307659];
  var v23291 = [278.2092307692];
  var v23292 = [4.8256355231];
  var v23293 = [.4807692308];
  var v23294 = [45223.0769230769];
  var v23295 = [.0083333333];
  var v23296 = [15];
  var v23297 = [11.5];
  var v23298 = [1295.7833333333];
  var v23299 = [22614.5833333333];
  var v23300 = [98.5166666667];
  var v23301 = [.9583333333];
  var v23302 = [23.625];
  var v23303 = [181.4166666667];
  var v23304 = [0];
  var v23305 = [6.7916666667];
  var v23306 = [23.2833333333];
  var v23307 = [9.8083333333];
  var v23308 = [.6333333333];
  var v23309 = [.8583333333];
  var v23310 = [.0083333333];
  var v23311 = [.0083333333];
  var v23312 = [6.4];
  var v23313 = [11.8333333333];
  var v23314 = [16.6];
  var v23315 = [11.9];
  var v23316 = [1.75];
  var v23317 = [22.375];
  var v23318 = [312.6666666667];
  var v23319 = [13.0083333333];
  var v23320 = [212.0583333333];
  var v23321 = [26.6833333333];
  var v23322 = [347.1833333333];
  var v23323 = [40.8166666667];
  var v23324 = [460.0583333333];
  var v23325 = [8.4333333333];
  var v23326 = [16.5416666667];
  var v23327 = [38.6916666667];
  var v23328 = [20.8916666667];
  var v23329 = [13.8916666667];
  var v23330 = [157];
  var v23331 = [.1];
  var v23332 = [4.4083333333];
  var v23333 = [4.6083333333];
  var v23334 = [5.8];
  var v23335 = [4.35];
  var v23336 = [9.5166666667];
  var v23337 = [57129.1666666667];
  var v23338 = [9.1583333333];
  var v23339 = [.6083333333];
  var v23340 = [151.35];
  var v23341 = [21.4333333333];
  var v23342 = [.9416666667];
  var v23343 = [279.0416666667];
  var v23344 = [4.5416666667];
  var v23345 = [.6083333333];
  var v19306 = {"modelled annual mean moisture index":v23241, "modelled annual mean rad":v23242, "modelled annual mean temp":v23243, "modelled annual precipitation":v23244, "modelled clpk 1 1000 g clay":v23245, "modelled erosional":v23246, "modelled highest period moisture index":v23247, "modelled highest period radiation":v23248, "modelled hydraulic conductivity ksat":v23249, "modelled isothermality":v23250, "modelled lowest period moisture index":v23251, "modelled lowest period radiation":v23252, 
  "modelled max temp warmest period":v23253, "modelled mean diurnal range":v23254, "modelled mean moisture index coldest quarter":v23255, "modelled mean moisture index highest quarter MI":v23256, "modelled mean moisture index lowest quater MI":v23257, "modelled mean moisture index warmest quarter":v23258, "modelled mean temp coldest quarter":v23259, "modelled mean temp driest quater":v23260, "modelled mean temp warmer quarter":v23261, "modelled mean temp wettest quarter":v23262, "modelled min temp coldest period":v23263, 
  "modelled moisture index seasonality":v23264, "modelled phos":v23265, "modelled precipitation coldets quarter":v23266, "modelled precipitation driest period":v23267, "modelled precipitation driest quarter":v23268, "modelled precipitation seasonality":v23269, "modelled precipitation warmest quarter":v23270, "modelled precipitation wettest period":v23271, "modelled precipitation wettest quarter":v23272, "modelled radiation coldest quarter":v23273, "modelled radiation driest quarter":v23274, "modelled radiation seasonality":v23275, 
  "modelled radiation warmest quarter":v23276, "modelled radiation wettest quarter":v23277, "modelled relief":v23278, "modelled ridgetopflat":v23279, "modelled rockalklty":v23280, "modelled rockgrainsz":v23281, "modelled rockhardness":v23282, "modelled rocknutrnt":v23283, "modelled roughness":v23284, "modelled sapk 1 1000 g sand":v23285, "modelled slope":v23286, "modelled soildepth":v23287, "modelled solpawhc":v23288, "modelled temperature annual range":v23289, "modelled temperature seasonality":v23290, 
  "modelled thpk 1 1000 g thickness":v23291, "modelled twi":v23292, "modelled valleybottom":v23293, "modelled whpk 1 1000 g water cap":v23294, "raw annual mean moisture index":v23295, "raw annual mean rad":v23296, "raw annual mean temp":v23297, "raw annual precipitation":v23298, "raw clpk 1 1000 g clay":v23299, "raw erosional":v23300, "raw highest period moisture index":v23301, "raw highest period radiation":v23302, "raw hydraulic conductivity ksat":v23303, "raw lowest period moisture index":v23304, 
  "raw lowest period radiation":v23305, "raw max temp warmest period":v23306, "raw mean diurnal range":v23307, "raw mean moisture index coldest quarter":v23308, "raw mean moisture index highest quarter MI":v23309, "raw mean moisture index lowest quater MI":v23310, "raw mean moisture index warmest quarter":v23311, "raw mean temp coldest quarter":v23312, "raw mean temp driest quater":v23313, "raw mean temp warmer quarter":v23314, "raw mean temp wettest quarter":v23315, "raw min temp coldest period":v23316, 
  "raw moisture index seasonality":v23317, "raw precipitation coldets quarter":v23318, "raw precipitation driest period":v23319, "raw precipitation driest quarter":v23320, "raw precipitation seasonality":v23321, "raw precipitation warmest quarter":v23322, "raw precipitation wettest period":v23323, "raw precipitation wettest quarter":v23324, "raw radiation coldest quarter":v23325, "raw radiation driest quarter":v23326, "raw radiation seasonality":v23327, "raw radiation warmest quarter":v23328, "raw radiation wettest quarter":v23329, 
  "raw relief":v23330, "raw ridgetopflat":v23331, "raw rockalklty":v23332, "raw rockgrainsz":v23333, "raw rockhardness":v23334, "raw rocknutrnt":v23335, "raw roughness":v23336, "raw sapk 1 1000 g sand":v23337, "raw slope":v23338, "raw soildepth":v23339, "raw solpawhc":v23340, "raw temperature annual range":v23341, "raw temperature seasonality":v23342, "raw thpk 1 1000 g thickness":v23343, "raw twi":v23344, "raw valleybottom":v23345};
  var v23346 = [.9756666799];
  var v23347 = [12.0000000954];
  var v23348 = [8.4266665936];
  var v23349 = [1407.3333333333];
  var v23350 = [24058.3333333333];
  var v23351 = [99.1666666667];
  var v23352 = [1];
  var v23353 = [20.980000178];
  var v23354 = [166.6666666667];
  var v23355 = [.4939999938];
  var v23356 = [.8756666621];
  var v23357 = [3.9166666349];
  var v23358 = [18.3566667557];
  var v23359 = [8.6166667461];
  var v23360 = [1];
  var v23361 = [1];
  var v23362 = [.9139999986];
  var v23363 = [.9393333415];
  var v23364 = [4.6199999571];
  var v23365 = [12.2033334096];
  var v23366 = [12.313333416];
  var v23367 = [6.9966665745];
  var v23368 = [1.009999985];
  var v23369 = [4.4];
  var v23370 = [.0296393858];
  var v23371 = [405];
  var v23372 = [18.4333333333];
  var v23373 = [267.1666666667];
  var v23374 = [17.3666666667];
  var v23375 = [272.2];
  var v23376 = [36.7];
  var v23377 = [425.8333333333];
  var v23378 = [5.6500000318];
  var v23379 = [17.3266669591];
  var v23380 = [50.7666666667];
  var v23381 = [18.4133333206];
  var v23382 = [11.630000035];
  var v23383 = [187.601335907];
  var v23384 = [0];
  var v23385 = [5.8];
  var v23386 = [5.0333333333];
  var v23387 = [5.7666666667];
  var v23388 = [5.7666666667];
  var v23389 = [11.1428800742];
  var v23390 = [54641.6666666666];
  var v23391 = [12.2245521386];
  var v23392 = [1.0466666738];
  var v23393 = [160.1666666667];
  var v23394 = [17.3433331172];
  var v23395 = [1.0673333148];
  var v23396 = [322.6333333333];
  var v23397 = [5.1204978943];
  var v23398 = [.8333333333];
  var v23399 = [53558.3333333333];
  var v23400 = [.0909090909];
  var v23401 = [11.7272727273];
  var v23402 = [7.9090909091];
  var v23403 = [1400];
  var v23404 = [25386.3636363636];
  var v23405 = [99.3636363636];
  var v23406 = [1];
  var v23407 = [20.8181818182];
  var v23408 = [172.7272727273];
  var v23409 = [.0909090909];
  var v23410 = [3.8181818182];
  var v23411 = [18.0909090909];
  var v23412 = [8.2727272727];
  var v23413 = [1];
  var v23414 = [1];
  var v23415 = [.0909090909];
  var v23416 = [.0909090909];
  var v23417 = [4.2727272727];
  var v23418 = [11.9090909091];
  var v23419 = [11.9090909091];
  var v23420 = [6.2727272727];
  var v23421 = [.6363636364];
  var v23422 = [4.5454545455];
  var v23423 = [404.1818181818];
  var v23424 = [18];
  var v23425 = [264.1818181818];
  var v23426 = [17.6363636364];
  var v23427 = [269];
  var v23428 = [36.3636363636];
  var v23429 = [423.1818181818];
  var v23430 = [5.0909090909];
  var v23431 = [17.1818181818];
  var v23432 = [50.5454545455];
  var v23433 = [18.0909090909];
  var v23434 = [11];
  var v23435 = [214.8181818182];
  var v23436 = [0];
  var v23437 = [5.8181818182];
  var v23438 = [4.9090909091];
  var v23439 = [5.8181818182];
  var v23440 = [5.8181818182];
  var v23441 = [11.5454545455];
  var v23442 = [52431.8181818182];
  var v23443 = [13];
  var v23444 = [.7272727273];
  var v23445 = [167.5454545455];
  var v23446 = [16.9090909091];
  var v23447 = [.8181818182];
  var v23448 = [308.6363636364];
  var v23449 = [4.3636363636];
  var v23450 = [.5454545455];
  var v19307 = {"modelled annual mean moisture index":v23346, "modelled annual mean rad":v23347, "modelled annual mean temp":v23348, "modelled annual precipitation":v23349, "modelled clpk 1 1000 g clay":v23350, "modelled erosional":v23351, "modelled highest period moisture index":v23352, "modelled highest period radiation":v23353, "modelled hydraulic conductivity ksat":v23354, "modelled isothermality":v23355, "modelled lowest period moisture index":v23356, "modelled lowest period radiation":v23357, 
  "modelled max temp warmest period":v23358, "modelled mean diurnal range":v23359, "modelled mean moisture index coldest quarter":v23360, "modelled mean moisture index highest quarter MI":v23361, "modelled mean moisture index lowest quater MI":v23362, "modelled mean moisture index warmest quarter":v23363, "modelled mean temp coldest quarter":v23364, "modelled mean temp driest quater":v23365, "modelled mean temp warmer quarter":v23366, "modelled mean temp wettest quarter":v23367, "modelled min temp coldest period":v23368, 
  "modelled moisture index seasonality":v23369, "modelled phos":v23370, "modelled precipitation coldets quarter":v23371, "modelled precipitation driest period":v23372, "modelled precipitation driest quarter":v23373, "modelled precipitation seasonality":v23374, "modelled precipitation warmest quarter":v23375, "modelled precipitation wettest period":v23376, "modelled precipitation wettest quarter":v23377, "modelled radiation coldest quarter":v23378, "modelled radiation driest quarter":v23379, "modelled radiation seasonality":v23380, 
  "modelled radiation warmest quarter":v23381, "modelled radiation wettest quarter":v23382, "modelled relief":v23383, "modelled ridgetopflat":v23384, "modelled rockalklty":v23385, "modelled rockgrainsz":v23386, "modelled rockhardness":v23387, "modelled rocknutrnt":v23388, "modelled roughness":v23389, "modelled sapk 1 1000 g sand":v23390, "modelled slope":v23391, "modelled soildepth":v23392, "modelled solpawhc":v23393, "modelled temperature annual range":v23394, "modelled temperature seasonality":v23395, 
  "modelled thpk 1 1000 g thickness":v23396, "modelled twi":v23397, "modelled valleybottom":v23398, "modelled whpk 1 1000 g water cap":v23399, "raw annual mean moisture index":v23400, "raw annual mean rad":v23401, "raw annual mean temp":v23402, "raw annual precipitation":v23403, "raw clpk 1 1000 g clay":v23404, "raw erosional":v23405, "raw highest period moisture index":v23406, "raw highest period radiation":v23407, "raw hydraulic conductivity ksat":v23408, "raw lowest period moisture index":v23409, 
  "raw lowest period radiation":v23410, "raw max temp warmest period":v23411, "raw mean diurnal range":v23412, "raw mean moisture index coldest quarter":v23413, "raw mean moisture index highest quarter MI":v23414, "raw mean moisture index lowest quater MI":v23415, "raw mean moisture index warmest quarter":v23416, "raw mean temp coldest quarter":v23417, "raw mean temp driest quater":v23418, "raw mean temp warmer quarter":v23419, "raw mean temp wettest quarter":v23420, "raw min temp coldest period":v23421, 
  "raw moisture index seasonality":v23422, "raw precipitation coldets quarter":v23423, "raw precipitation driest period":v23424, "raw precipitation driest quarter":v23425, "raw precipitation seasonality":v23426, "raw precipitation warmest quarter":v23427, "raw precipitation wettest period":v23428, "raw precipitation wettest quarter":v23429, "raw radiation coldest quarter":v23430, "raw radiation driest quarter":v23431, "raw radiation seasonality":v23432, "raw radiation warmest quarter":v23433, "raw radiation wettest quarter":v23434, 
  "raw relief":v23435, "raw ridgetopflat":v23436, "raw rockalklty":v23437, "raw rockgrainsz":v23438, "raw rockhardness":v23439, "raw rocknutrnt":v23440, "raw roughness":v23441, "raw sapk 1 1000 g sand":v23442, "raw slope":v23443, "raw soildepth":v23444, "raw solpawhc":v23445, "raw temperature annual range":v23446, "raw temperature seasonality":v23447, "raw thpk 1 1000 g thickness":v23448, "raw twi":v23449, "raw valleybottom":v23450};
  var v23451 = [.2800000012];
  var v23452 = [22.1500005722];
  var v23453 = [26.4499998093];
  var v23454 = [732];
  var v23455 = [41500];
  var v23456 = [100];
  var v23457 = [.9199999869];
  var v23458 = [26.8000001907];
  var v23459 = [65];
  var v23460 = [.5400000215];
  var v23461 = [.0049999999];
  var v23462 = [17];
  var v23463 = [38.5];
  var v23464 = [14.9500002861];
  var v23465 = [.0299999993];
  var v23466 = [.8199999928];
  var v23467 = [.0099999998];
  var v23468 = [.2599999979];
  var v23469 = [21];
  var v23470 = [23.25];
  var v23471 = [30.5];
  var v23472 = [29.3500003815];
  var v23473 = [10.7999997139];
  var v23474 = [120];
  var v23475 = [.0149999997];
  var v23476 = [14];
  var v23477 = [0];
  var v23478 = [0];
  var v23479 = [126];
  var v23480 = [239.5];
  var v23481 = [52];
  var v23482 = [546];
  var v23483 = [18.8500003815];
  var v23484 = [21.9499998093];
  var v23485 = [13.5];
  var v23486 = [25.25];
  var v23487 = [22.4000005722];
  var v23488 = [98.6766052246];
  var v23489 = [0];
  var v23490 = [5.5];
  var v23491 = [4.5];
  var v23492 = [4.5];
  var v23493 = [5];
  var v23494 = [17.0805878639];
  var v23495 = [37E3];
  var v23496 = [5.9404842854];
  var v23497 = [1.0000000298];
  var v23498 = [117.5];
  var v23499 = [27.75];
  var v23500 = [1.2549999952];
  var v23501 = [150];
  var v23502 = [8.5943181515];
  var v23503 = [0];
  var v23504 = [20500];
  var v23505 = [0];
  var v23506 = [22];
  var v23507 = [26];
  var v23508 = [732];
  var v23509 = [41500];
  var v23510 = [100];
  var v23511 = [0];
  var v23512 = [26];
  var v23513 = [65];
  var v23514 = [0];
  var v23515 = [16.5];
  var v23516 = [38];
  var v23517 = [14.5];
  var v23518 = [0];
  var v23519 = [0];
  var v23520 = [0];
  var v23521 = [0];
  var v23522 = [20.5];
  var v23523 = [22.5];
  var v23524 = [30];
  var v23525 = [29];
  var v23526 = [10.5];
  var v23527 = [120];
  var v23528 = [14];
  var v23529 = [0];
  var v23530 = [0];
  var v23531 = [126];
  var v23532 = [239.5];
  var v23533 = [52];
  var v23534 = [546];
  var v23535 = [18.5];
  var v23536 = [21.5];
  var v23537 = [13.5];
  var v23538 = [25];
  var v23539 = [22];
  var v23540 = [98];
  var v23541 = [0];
  var v23542 = [5.5];
  var v23543 = [4.5];
  var v23544 = [4.5];
  var v23545 = [5];
  var v23546 = [16.5];
  var v23547 = [37E3];
  var v23548 = [5.5];
  var v23549 = [.5];
  var v23550 = [117.5];
  var v23551 = [27];
  var v23552 = [1];
  var v23553 = [150];
  var v23554 = [8];
  var v23555 = [0];
  var v19308 = {"modelled annual mean moisture index":v23451, "modelled annual mean rad":v23452, "modelled annual mean temp":v23453, "modelled annual precipitation":v23454, "modelled clpk 1 1000 g clay":v23455, "modelled erosional":v23456, "modelled highest period moisture index":v23457, "modelled highest period radiation":v23458, "modelled hydraulic conductivity ksat":v23459, "modelled isothermality":v23460, "modelled lowest period moisture index":v23461, "modelled lowest period radiation":v23462, 
  "modelled max temp warmest period":v23463, "modelled mean diurnal range":v23464, "modelled mean moisture index coldest quarter":v23465, "modelled mean moisture index highest quarter MI":v23466, "modelled mean moisture index lowest quater MI":v23467, "modelled mean moisture index warmest quarter":v23468, "modelled mean temp coldest quarter":v23469, "modelled mean temp driest quater":v23470, "modelled mean temp warmer quarter":v23471, "modelled mean temp wettest quarter":v23472, "modelled min temp coldest period":v23473, 
  "modelled moisture index seasonality":v23474, "modelled phos":v23475, "modelled precipitation coldets quarter":v23476, "modelled precipitation driest period":v23477, "modelled precipitation driest quarter":v23478, "modelled precipitation seasonality":v23479, "modelled precipitation warmest quarter":v23480, "modelled precipitation wettest period":v23481, "modelled precipitation wettest quarter":v23482, "modelled radiation coldest quarter":v23483, "modelled radiation driest quarter":v23484, "modelled radiation seasonality":v23485, 
  "modelled radiation warmest quarter":v23486, "modelled radiation wettest quarter":v23487, "modelled relief":v23488, "modelled ridgetopflat":v23489, "modelled rockalklty":v23490, "modelled rockgrainsz":v23491, "modelled rockhardness":v23492, "modelled rocknutrnt":v23493, "modelled roughness":v23494, "modelled sapk 1 1000 g sand":v23495, "modelled slope":v23496, "modelled soildepth":v23497, "modelled solpawhc":v23498, "modelled temperature annual range":v23499, "modelled temperature seasonality":v23500, 
  "modelled thpk 1 1000 g thickness":v23501, "modelled twi":v23502, "modelled valleybottom":v23503, "modelled whpk 1 1000 g water cap":v23504, "raw annual mean moisture index":v23505, "raw annual mean rad":v23506, "raw annual mean temp":v23507, "raw annual precipitation":v23508, "raw clpk 1 1000 g clay":v23509, "raw erosional":v23510, "raw highest period moisture index":v23511, "raw highest period radiation":v23512, "raw hydraulic conductivity ksat":v23513, "raw lowest period moisture index":v23514, 
  "raw lowest period radiation":v23515, "raw max temp warmest period":v23516, "raw mean diurnal range":v23517, "raw mean moisture index coldest quarter":v23518, "raw mean moisture index highest quarter MI":v23519, "raw mean moisture index lowest quater MI":v23520, "raw mean moisture index warmest quarter":v23521, "raw mean temp coldest quarter":v23522, "raw mean temp driest quater":v23523, "raw mean temp warmer quarter":v23524, "raw mean temp wettest quarter":v23525, "raw min temp coldest period":v23526, 
  "raw moisture index seasonality":v23527, "raw precipitation coldets quarter":v23528, "raw precipitation driest period":v23529, "raw precipitation driest quarter":v23530, "raw precipitation seasonality":v23531, "raw precipitation warmest quarter":v23532, "raw precipitation wettest period":v23533, "raw precipitation wettest quarter":v23534, "raw radiation coldest quarter":v23535, "raw radiation driest quarter":v23536, "raw radiation seasonality":v23537, "raw radiation warmest quarter":v23538, "raw radiation wettest quarter":v23539, 
  "raw relief":v23540, "raw ridgetopflat":v23541, "raw rockalklty":v23542, "raw rockgrainsz":v23543, "raw rockhardness":v23544, "raw rocknutrnt":v23545, "raw roughness":v23546, "raw sapk 1 1000 g sand":v23547, "raw slope":v23548, "raw soildepth":v23549, "raw solpawhc":v23550, "raw temperature annual range":v23551, "raw temperature seasonality":v23552, "raw thpk 1 1000 g thickness":v23553, "raw twi":v23554, "raw valleybottom":v23555};
  var v23556 = [.7365444446];
  var v23557 = [17.1275078493];
  var v23558 = [16.1311112493];
  var v23559 = [1255.8687301587];
  var v23560 = [21822.0634920634];
  var v23561 = [91.9027777778];
  var v23562 = [.9502539679];
  var v23563 = [24.715031606];
  var v23564 = [152.3];
  var v23565 = [.4938333283];
  var v23566 = [.3612952372];
  var v23567 = [9.6579523886];
  var v23568 = [27.2970475527];
  var v23569 = [10.9151110977];
  var v23570 = [.8659396845];
  var v23571 = [.9381000012];
  var v23572 = [.4386444416];
  var v23573 = [.5990571438];
  var v23574 = [11.0153809807];
  var v23575 = [14.1643810366];
  var v23576 = [21.0059206676];
  var v23577 = [18.1127459956];
  var v23578 = [5.1418412599];
  var v23579 = [31.663015873];
  var v23580 = [.0397253511];
  var v23581 = [243.0065079365];
  var v23582 = [7.4119047619];
  var v23583 = [158.4253968254];
  var v23584 = [45.0196825397];
  var v23585 = [418.6682539683];
  var v23586 = [49.3933333333];
  var v23587 = [535.4804761905];
  var v23588 = [11.5418730642];
  var v23589 = [16.7123016274];
  var v23590 = [30.5920634921];
  var v23591 = [21.9849682202];
  var v23592 = [17.2387459149];
  var v23593 = [97.2765801426];
  var v23594 = [.6339285714];
  var v23595 = [4.7514285714];
  var v23596 = [4.3793650794];
  var v23597 = [5.7];
  var v23598 = [4.7347619048];
  var v23599 = [13.9966933051];
  var v23600 = [61094.5238095238];
  var v23601 = [6.4187526792];
  var v23602 = [.9957460357];
  var v23603 = [125.65];
  var v23604 = [22.1440794706];
  var v23605 = [1.3577285743];
  var v23606 = [276.8314285714];
  var v23607 = [6.0713178382];
  var v23608 = [5.5426587302];
  var v23609 = [41211.3919047619];
  var v23610 = [0];
  var v23611 = [16.0625];
  var v23612 = [15.203125];
  var v23613 = [1208.296875];
  var v23614 = [20792.96875];
  var v23615 = [90.5625];
  var v23616 = [.703125];
  var v23617 = [23.421875];
  var v23618 = [141.09375];
  var v23619 = [0];
  var v23620 = [8.8125];
  var v23621 = [25.828125];
  var v23622 = [10.046875];
  var v23623 = [.40625];
  var v23624 = [.640625];
  var v23625 = [0];
  var v23626 = [.015625];
  var v23627 = [10.265625];
  var v23628 = [13.1875];
  var v23629 = [19.796875];
  var v23630 = [16.9375];
  var v23631 = [4.53125];
  var v23632 = [29.625];
  var v23633 = [232.109375];
  var v23634 = [7.28125];
  var v23635 = [157.328125];
  var v23636 = [42.140625];
  var v23637 = [401.015625];
  var v23638 = [45.546875];
  var v23639 = [506.40625];
  var v23640 = [10.625];
  var v23641 = [15.6875];
  var v23642 = [29.78125];
  var v23643 = [20.71875];
  var v23644 = [16.421875];
  var v23645 = [100.15625];
  var v23646 = [.484375];
  var v23647 = [4.109375];
  var v23648 = [3.84375];
  var v23649 = [5.1875];
  var v23650 = [4];
  var v23651 = [13.9375];
  var v23652 = [57734.375];
  var v23653 = [6.078125];
  var v23654 = [.5];
  var v23655 = [116.21875];
  var v23656 = [21.03125];
  var v23657 = [.90625];
  var v23658 = [267.40625];
  var v23659 = [5.46875];
  var v23660 = [4.953125];
  var v19309 = {"modelled annual mean moisture index":v23556, "modelled annual mean rad":v23557, "modelled annual mean temp":v23558, "modelled annual precipitation":v23559, "modelled clpk 1 1000 g clay":v23560, "modelled erosional":v23561, "modelled highest period moisture index":v23562, "modelled highest period radiation":v23563, "modelled hydraulic conductivity ksat":v23564, "modelled isothermality":v23565, "modelled lowest period moisture index":v23566, "modelled lowest period radiation":v23567, 
  "modelled max temp warmest period":v23568, "modelled mean diurnal range":v23569, "modelled mean moisture index coldest quarter":v23570, "modelled mean moisture index highest quarter MI":v23571, "modelled mean moisture index lowest quater MI":v23572, "modelled mean moisture index warmest quarter":v23573, "modelled mean temp coldest quarter":v23574, "modelled mean temp driest quater":v23575, "modelled mean temp warmer quarter":v23576, "modelled mean temp wettest quarter":v23577, "modelled min temp coldest period":v23578, 
  "modelled moisture index seasonality":v23579, "modelled phos":v23580, "modelled precipitation coldets quarter":v23581, "modelled precipitation driest period":v23582, "modelled precipitation driest quarter":v23583, "modelled precipitation seasonality":v23584, "modelled precipitation warmest quarter":v23585, "modelled precipitation wettest period":v23586, "modelled precipitation wettest quarter":v23587, "modelled radiation coldest quarter":v23588, "modelled radiation driest quarter":v23589, "modelled radiation seasonality":v23590, 
  "modelled radiation warmest quarter":v23591, "modelled radiation wettest quarter":v23592, "modelled relief":v23593, "modelled ridgetopflat":v23594, "modelled rockalklty":v23595, "modelled rockgrainsz":v23596, "modelled rockhardness":v23597, "modelled rocknutrnt":v23598, "modelled roughness":v23599, "modelled sapk 1 1000 g sand":v23600, "modelled slope":v23601, "modelled soildepth":v23602, "modelled solpawhc":v23603, "modelled temperature annual range":v23604, "modelled temperature seasonality":v23605, 
  "modelled thpk 1 1000 g thickness":v23606, "modelled twi":v23607, "modelled valleybottom":v23608, "modelled whpk 1 1000 g water cap":v23609, "raw annual mean moisture index":v23610, "raw annual mean rad":v23611, "raw annual mean temp":v23612, "raw annual precipitation":v23613, "raw clpk 1 1000 g clay":v23614, "raw erosional":v23615, "raw highest period moisture index":v23616, "raw highest period radiation":v23617, "raw hydraulic conductivity ksat":v23618, "raw lowest period moisture index":v23619, 
  "raw lowest period radiation":v23620, "raw max temp warmest period":v23621, "raw mean diurnal range":v23622, "raw mean moisture index coldest quarter":v23623, "raw mean moisture index highest quarter MI":v23624, "raw mean moisture index lowest quater MI":v23625, "raw mean moisture index warmest quarter":v23626, "raw mean temp coldest quarter":v23627, "raw mean temp driest quater":v23628, "raw mean temp warmer quarter":v23629, "raw mean temp wettest quarter":v23630, "raw min temp coldest period":v23631, 
  "raw moisture index seasonality":v23632, "raw precipitation coldets quarter":v23633, "raw precipitation driest period":v23634, "raw precipitation driest quarter":v23635, "raw precipitation seasonality":v23636, "raw precipitation warmest quarter":v23637, "raw precipitation wettest period":v23638, "raw precipitation wettest quarter":v23639, "raw radiation coldest quarter":v23640, "raw radiation driest quarter":v23641, "raw radiation seasonality":v23642, "raw radiation warmest quarter":v23643, "raw radiation wettest quarter":v23644, 
  "raw relief":v23645, "raw ridgetopflat":v23646, "raw rockalklty":v23647, "raw rockgrainsz":v23648, "raw rockhardness":v23649, "raw rocknutrnt":v23650, "raw roughness":v23651, "raw sapk 1 1000 g sand":v23652, "raw slope":v23653, "raw soildepth":v23654, "raw solpawhc":v23655, "raw temperature annual range":v23656, "raw temperature seasonality":v23657, "raw thpk 1 1000 g thickness":v23658, "raw twi":v23659, "raw valleybottom":v23660};
  var v23661 = [.7523631571];
  var v23662 = [15.7872632313];
  var v23663 = [14.148368388];
  var v23664 = [1072.0410526316];
  var v23665 = [20124.6052631579];
  var v23666 = [85.6052631579];
  var v23667 = [.9810842105];
  var v23668 = [24.9694211327];
  var v23669 = [130.0578947368];
  var v23670 = [.4845000008];
  var v23671 = [.323263157];
  var v23672 = [7.2001579207];
  var v23673 = [25.3658948326];
  var v23674 = [10.2003158394];
  var v23675 = [.9645894769];
  var v23676 = [.9754421075];
  var v23677 = [.4105263146];
  var v23678 = [.4492105245];
  var v23679 = [9.284631582];
  var v23680 = [15.7744210745];
  var v23681 = [18.8259999486];
  var v23682 = [13.4179999638];
  var v23683 = [4.3915789415];
  var v23684 = [34.51];
  var v23685 = [.0319927152];
  var v23686 = [293.6242105263];
  var v23687 = [7.7615789474];
  var v23688 = [158.1031578947];
  var v23689 = [32.4805263158];
  var v23690 = [240.0526315789];
  var v23691 = [34.3584210526];
  var v23692 = [384.7031578947];
  var v23693 = [9.1081578742];
  var v23694 = [19.6293685346];
  var v23695 = [39.0931578947];
  var v23696 = [22.166210543];
  var v23697 = [13.3475263033];
  var v23698 = [74.8392543699];
  var v23699 = [4.1447368421];
  var v23700 = [4.9478947368];
  var v23701 = [4.0494736842];
  var v23702 = [5.6621052632];
  var v23703 = [4.4805263158];
  var v23704 = [17.1395764974];
  var v23705 = [60505.3947368421];
  var v23706 = [4.8369444082];
  var v23707 = [.9438947287];
  var v23708 = [110.2721052632];
  var v23709 = [20.8948948519];
  var v23710 = [1.3039000004];
  var v23711 = [270.7410526316];
  var v23712 = [5.8377228775];
  var v23713 = [11.2171052632];
  var v23714 = [38992.5510526315];
  var v23715 = [0];
  var v23716 = [14.5428571429];
  var v23717 = [12.8285714286];
  var v23718 = [1000.6];
  var v23719 = [18821.4285714286];
  var v23720 = [77.6];
  var v23721 = [.7714285714];
  var v23722 = [23.1428571429];
  var v23723 = [122.2857142857];
  var v23724 = [0];
  var v23725 = [6.4571428571];
  var v23726 = [23.5142857143];
  var v23727 = [9.2];
  var v23728 = [.4285714286];
  var v23729 = [.7428571429];
  var v23730 = [0];
  var v23731 = [0];
  var v23732 = [8.3714285714];
  var v23733 = [14.3428571429];
  var v23734 = [17.3428571429];
  var v23735 = [12.3428571429];
  var v23736 = [3.6];
  var v23737 = [32.3428571429];
  var v23738 = [272.2571428571];
  var v23739 = [7.2285714286];
  var v23740 = [149.8];
  var v23741 = [30.2857142857];
  var v23742 = [235.7714285714];
  var v23743 = [32.0857142857];
  var v23744 = [363.1714285714];
  var v23745 = [8.2571428571];
  var v23746 = [18];
  var v23747 = [37];
  var v23748 = [20.4285714286];
  var v23749 = [12.1714285714];
  var v23750 = [73.2285714286];
  var v23751 = [4.2571428571];
  var v23752 = [4.2];
  var v23753 = [3.6571428571];
  var v23754 = [4.6];
  var v23755 = [3.8];
  var v23756 = [15.9714285714];
  var v23757 = [55707.1428571429];
  var v23758 = [4.4];
  var v23759 = [.3142857143];
  var v23760 = [99.3714285714];
  var v23761 = [19.4857142857];
  var v23762 = [.8857142857];
  var v23763 = [256.2285714286];
  var v23764 = [5.7428571429];
  var v23765 = [9.3714285714];
  var v19310 = {"modelled annual mean moisture index":v23661, "modelled annual mean rad":v23662, "modelled annual mean temp":v23663, "modelled annual precipitation":v23664, "modelled clpk 1 1000 g clay":v23665, "modelled erosional":v23666, "modelled highest period moisture index":v23667, "modelled highest period radiation":v23668, "modelled hydraulic conductivity ksat":v23669, "modelled isothermality":v23670, "modelled lowest period moisture index":v23671, "modelled lowest period radiation":v23672, 
  "modelled max temp warmest period":v23673, "modelled mean diurnal range":v23674, "modelled mean moisture index coldest quarter":v23675, "modelled mean moisture index highest quarter MI":v23676, "modelled mean moisture index lowest quater MI":v23677, "modelled mean moisture index warmest quarter":v23678, "modelled mean temp coldest quarter":v23679, "modelled mean temp driest quater":v23680, "modelled mean temp warmer quarter":v23681, "modelled mean temp wettest quarter":v23682, "modelled min temp coldest period":v23683, 
  "modelled moisture index seasonality":v23684, "modelled phos":v23685, "modelled precipitation coldets quarter":v23686, "modelled precipitation driest period":v23687, "modelled precipitation driest quarter":v23688, "modelled precipitation seasonality":v23689, "modelled precipitation warmest quarter":v23690, "modelled precipitation wettest period":v23691, "modelled precipitation wettest quarter":v23692, "modelled radiation coldest quarter":v23693, "modelled radiation driest quarter":v23694, "modelled radiation seasonality":v23695, 
  "modelled radiation warmest quarter":v23696, "modelled radiation wettest quarter":v23697, "modelled relief":v23698, "modelled ridgetopflat":v23699, "modelled rockalklty":v23700, "modelled rockgrainsz":v23701, "modelled rockhardness":v23702, "modelled rocknutrnt":v23703, "modelled roughness":v23704, "modelled sapk 1 1000 g sand":v23705, "modelled slope":v23706, "modelled soildepth":v23707, "modelled solpawhc":v23708, "modelled temperature annual range":v23709, "modelled temperature seasonality":v23710, 
  "modelled thpk 1 1000 g thickness":v23711, "modelled twi":v23712, "modelled valleybottom":v23713, "modelled whpk 1 1000 g water cap":v23714, "raw annual mean moisture index":v23715, "raw annual mean rad":v23716, "raw annual mean temp":v23717, "raw annual precipitation":v23718, "raw clpk 1 1000 g clay":v23719, "raw erosional":v23720, "raw highest period moisture index":v23721, "raw highest period radiation":v23722, "raw hydraulic conductivity ksat":v23723, "raw lowest period moisture index":v23724, 
  "raw lowest period radiation":v23725, "raw max temp warmest period":v23726, "raw mean diurnal range":v23727, "raw mean moisture index coldest quarter":v23728, "raw mean moisture index highest quarter MI":v23729, "raw mean moisture index lowest quater MI":v23730, "raw mean moisture index warmest quarter":v23731, "raw mean temp coldest quarter":v23732, "raw mean temp driest quater":v23733, "raw mean temp warmer quarter":v23734, "raw mean temp wettest quarter":v23735, "raw min temp coldest period":v23736, 
  "raw moisture index seasonality":v23737, "raw precipitation coldets quarter":v23738, "raw precipitation driest period":v23739, "raw precipitation driest quarter":v23740, "raw precipitation seasonality":v23741, "raw precipitation warmest quarter":v23742, "raw precipitation wettest period":v23743, "raw precipitation wettest quarter":v23744, "raw radiation coldest quarter":v23745, "raw radiation driest quarter":v23746, "raw radiation seasonality":v23747, "raw radiation warmest quarter":v23748, "raw radiation wettest quarter":v23749, 
  "raw relief":v23750, "raw ridgetopflat":v23751, "raw rockalklty":v23752, "raw rockgrainsz":v23753, "raw rockhardness":v23754, "raw rocknutrnt":v23755, "raw roughness":v23756, "raw sapk 1 1000 g sand":v23757, "raw slope":v23758, "raw soildepth":v23759, "raw solpawhc":v23760, "raw temperature annual range":v23761, "raw temperature seasonality":v23762, "raw thpk 1 1000 g thickness":v23763, "raw twi":v23764, "raw valleybottom":v23765};
  var v23766 = [.3124999981];
  var v23767 = [19.4000000954];
  var v23768 = [17.6749999523];
  var v23769 = [369.5];
  var v23770 = [16375];
  var v23771 = [57.8125];
  var v23772 = [.7574999928];
  var v23773 = [28.8750004768];
  var v23774 = [200];
  var v23775 = [.484999992];
  var v23776 = [.0299999993];
  var v23777 = [9.7249999046];
  var v23778 = [33.1500005722];
  var v23779 = [13.2000000477];
  var v23780 = [.7025000006];
  var v23781 = [.7099999934];
  var v23782 = [.044999999];
  var v23783 = [.0574999992];
  var v23784 = [11.5250000954];
  var v23785 = [21.6499996185];
  var v23786 = [24.25];
  var v23787 = [12.1749999523];
  var v23788 = [5.6000000238];
  var v23789 = [90.25];
  var v23790 = [.0180416674];
  var v23791 = [160.25];
  var v23792 = [0];
  var v23793 = [28.75];
  var v23794 = [59.75];
  var v23795 = [48.75];
  var v23796 = [15];
  var v23797 = [174.5];
  var v23798 = [12.2000000477];
  var v23799 = [27.0499997139];
  var v23800 = [34.75];
  var v23801 = [26.0750002861];
  var v23802 = [11.0250000954];
  var v23803 = [10.535130471];
  var v23804 = [0];
  var v23805 = [5];
  var v23806 = [5.5];
  var v23807 = [5.5];
  var v23808 = [3.75];
  var v23809 = [1.172922425];
  var v23810 = [68250];
  var v23811 = [.6775645409];
  var v23812 = [.875];
  var v23813 = [120];
  var v23814 = [27.5250000954];
  var v23815 = [1.7350000143];
  var v23816 = [277.75];
  var v23817 = [7.6787025928];
  var v23818 = [35.9375];
  var v23819 = [23578.75];
  var v23820 = [0];
  var v23821 = [18.6666666667];
  var v23822 = [16.5];
  var v23823 = [378];
  var v23824 = [14916.6666666667];
  var v23825 = [69.5];
  var v23826 = [0];
  var v23827 = [28.5];
  var v23828 = [233.3333333333];
  var v23829 = [0];
  var v23830 = [9.1666666667];
  var v23831 = [31.6666666667];
  var v23832 = [12.5];
  var v23833 = [0];
  var v23834 = [0];
  var v23835 = [0];
  var v23836 = [0];
  var v23837 = [10.8333333333];
  var v23838 = [21.1666666667];
  var v23839 = [23];
  var v23840 = [11.6666666667];
  var v23841 = [5];
  var v23842 = [89.1666666667];
  var v23843 = [161.6666666667];
  var v23844 = [0];
  var v23845 = [33.1666666667];
  var v23846 = [59];
  var v23847 = [47.8333333333];
  var v23848 = [15];
  var v23849 = [176.3333333333];
  var v23850 = [11.5];
  var v23851 = [26.5];
  var v23852 = [35.1666666667];
  var v23853 = [25.6666666667];
  var v23854 = [10.3333333333];
  var v23855 = [12.3333333333];
  var v23856 = [0];
  var v23857 = [4.1666666667];
  var v23858 = [5];
  var v23859 = [6];
  var v23860 = [3.8333333333];
  var v23861 = [1];
  var v23862 = [71500];
  var v23863 = [.3333333333];
  var v23864 = [.5];
  var v23865 = [122.6666666667];
  var v23866 = [26.3333333333];
  var v23867 = [1.1666666667];
  var v23868 = [315.8333333333];
  var v23869 = [6.6666666667];
  var v23870 = [29];
  var v19311 = {"modelled annual mean moisture index":v23766, "modelled annual mean rad":v23767, "modelled annual mean temp":v23768, "modelled annual precipitation":v23769, "modelled clpk 1 1000 g clay":v23770, "modelled erosional":v23771, "modelled highest period moisture index":v23772, "modelled highest period radiation":v23773, "modelled hydraulic conductivity ksat":v23774, "modelled isothermality":v23775, "modelled lowest period moisture index":v23776, "modelled lowest period radiation":v23777, 
  "modelled max temp warmest period":v23778, "modelled mean diurnal range":v23779, "modelled mean moisture index coldest quarter":v23780, "modelled mean moisture index highest quarter MI":v23781, "modelled mean moisture index lowest quater MI":v23782, "modelled mean moisture index warmest quarter":v23783, "modelled mean temp coldest quarter":v23784, "modelled mean temp driest quater":v23785, "modelled mean temp warmer quarter":v23786, "modelled mean temp wettest quarter":v23787, "modelled min temp coldest period":v23788, 
  "modelled moisture index seasonality":v23789, "modelled phos":v23790, "modelled precipitation coldets quarter":v23791, "modelled precipitation driest period":v23792, "modelled precipitation driest quarter":v23793, "modelled precipitation seasonality":v23794, "modelled precipitation warmest quarter":v23795, "modelled precipitation wettest period":v23796, "modelled precipitation wettest quarter":v23797, "modelled radiation coldest quarter":v23798, "modelled radiation driest quarter":v23799, "modelled radiation seasonality":v23800, 
  "modelled radiation warmest quarter":v23801, "modelled radiation wettest quarter":v23802, "modelled relief":v23803, "modelled ridgetopflat":v23804, "modelled rockalklty":v23805, "modelled rockgrainsz":v23806, "modelled rockhardness":v23807, "modelled rocknutrnt":v23808, "modelled roughness":v23809, "modelled sapk 1 1000 g sand":v23810, "modelled slope":v23811, "modelled soildepth":v23812, "modelled solpawhc":v23813, "modelled temperature annual range":v23814, "modelled temperature seasonality":v23815, 
  "modelled thpk 1 1000 g thickness":v23816, "modelled twi":v23817, "modelled valleybottom":v23818, "modelled whpk 1 1000 g water cap":v23819, "raw annual mean moisture index":v23820, "raw annual mean rad":v23821, "raw annual mean temp":v23822, "raw annual precipitation":v23823, "raw clpk 1 1000 g clay":v23824, "raw erosional":v23825, "raw highest period moisture index":v23826, "raw highest period radiation":v23827, "raw hydraulic conductivity ksat":v23828, "raw lowest period moisture index":v23829, 
  "raw lowest period radiation":v23830, "raw max temp warmest period":v23831, "raw mean diurnal range":v23832, "raw mean moisture index coldest quarter":v23833, "raw mean moisture index highest quarter MI":v23834, "raw mean moisture index lowest quater MI":v23835, "raw mean moisture index warmest quarter":v23836, "raw mean temp coldest quarter":v23837, "raw mean temp driest quater":v23838, "raw mean temp warmer quarter":v23839, "raw mean temp wettest quarter":v23840, "raw min temp coldest period":v23841, 
  "raw moisture index seasonality":v23842, "raw precipitation coldets quarter":v23843, "raw precipitation driest period":v23844, "raw precipitation driest quarter":v23845, "raw precipitation seasonality":v23846, "raw precipitation warmest quarter":v23847, "raw precipitation wettest period":v23848, "raw precipitation wettest quarter":v23849, "raw radiation coldest quarter":v23850, "raw radiation driest quarter":v23851, "raw radiation seasonality":v23852, "raw radiation warmest quarter":v23853, "raw radiation wettest quarter":v23854, 
  "raw relief":v23855, "raw ridgetopflat":v23856, "raw rockalklty":v23857, "raw rockgrainsz":v23858, "raw rockhardness":v23859, "raw rocknutrnt":v23860, "raw roughness":v23861, "raw sapk 1 1000 g sand":v23862, "raw slope":v23863, "raw soildepth":v23864, "raw solpawhc":v23865, "raw temperature annual range":v23866, "raw temperature seasonality":v23867, "raw thpk 1 1000 g thickness":v23868, "raw twi":v23869, "raw valleybottom":v23870};
  var v23871 = [0];
  var v23872 = [16];
  var v23873 = [13.8333333333];
  var v23874 = [683.8333333333];
  var v23875 = [9833.3333333333];
  var v23876 = [67.1666666667];
  var v23877 = [.6666666667];
  var v23878 = [26];
  var v23879 = [266.6666666667];
  var v23880 = [0];
  var v23881 = [6.1666666667];
  var v23882 = [25.1666666667];
  var v23883 = [10];
  var v23884 = [0];
  var v23885 = [.6666666667];
  var v23886 = [0];
  var v23887 = [0];
  var v23888 = [9.5];
  var v23889 = [18.1666666667];
  var v23890 = [18.5];
  var v23891 = [9.6666666667];
  var v23892 = [5];
  var v23893 = [61.3333333333];
  var v23894 = [267.8333333333];
  var v23895 = [0];
  var v23896 = [84.1666666667];
  var v23897 = [46];
  var v23898 = [85.6666666667];
  var v23899 = [24.5];
  var v23900 = [272.8333333333];
  var v23901 = [8.3333333333];
  var v23902 = [24];
  var v23903 = [43.6666666667];
  var v23904 = [23.6666666667];
  var v23905 = [7.8333333333];
  var v23906 = [29.6666666667];
  var v23907 = [0];
  var v23908 = [4.3333333333];
  var v23909 = [4.3333333333];
  var v23910 = [2.1666666667];
  var v23911 = [2.1666666667];
  var v23912 = [21.6666666667];
  var v23913 = [81666.6666666667];
  var v23914 = [1.5];
  var v23915 = [.6666666667];
  var v23916 = [124.8333333333];
  var v23917 = [20.1666666667];
  var v23918 = [1];
  var v23919 = [597.3333333333];
  var v23920 = [8.8333333333];
  var v23921 = [6.1666666667];
  var v19312 = {"modelled annual mean moisture index":[], "modelled annual mean rad":[], "modelled annual mean temp":[], "modelled annual precipitation":[], "modelled clpk 1 1000 g clay":[], "modelled erosional":[], "modelled highest period moisture index":[], "modelled highest period radiation":[], "modelled hydraulic conductivity ksat":[], "modelled isothermality":[], "modelled lowest period moisture index":[], "modelled lowest period radiation":[], "modelled max temp warmest period":[], "modelled mean diurnal range":[], 
  "modelled mean moisture index coldest quarter":[], "modelled mean moisture index highest quarter MI":[], "modelled mean moisture index lowest quater MI":[], "modelled mean moisture index warmest quarter":[], "modelled mean temp coldest quarter":[], "modelled mean temp driest quater":[], "modelled mean temp warmer quarter":[], "modelled mean temp wettest quarter":[], "modelled min temp coldest period":[], "modelled moisture index seasonality":[], "modelled phos":[], "modelled precipitation coldets quarter":[], 
  "modelled precipitation driest period":[], "modelled precipitation driest quarter":[], "modelled precipitation seasonality":[], "modelled precipitation warmest quarter":[], "modelled precipitation wettest period":[], "modelled precipitation wettest quarter":[], "modelled radiation coldest quarter":[], "modelled radiation driest quarter":[], "modelled radiation seasonality":[], "modelled radiation warmest quarter":[], "modelled radiation wettest quarter":[], "modelled relief":[], "modelled ridgetopflat":[], 
  "modelled rockalklty":[], "modelled rockgrainsz":[], "modelled rockhardness":[], "modelled rocknutrnt":[], "modelled roughness":[], "modelled sapk 1 1000 g sand":[], "modelled slope":[], "modelled soildepth":[], "modelled solpawhc":[], "modelled temperature annual range":[], "modelled temperature seasonality":[], "modelled thpk 1 1000 g thickness":[], "modelled twi":[], "modelled valleybottom":[], "modelled whpk 1 1000 g water cap":[], "raw annual mean moisture index":v23871, "raw annual mean rad":v23872, 
  "raw annual mean temp":v23873, "raw annual precipitation":v23874, "raw clpk 1 1000 g clay":v23875, "raw erosional":v23876, "raw highest period moisture index":v23877, "raw highest period radiation":v23878, "raw hydraulic conductivity ksat":v23879, "raw lowest period moisture index":v23880, "raw lowest period radiation":v23881, "raw max temp warmest period":v23882, "raw mean diurnal range":v23883, "raw mean moisture index coldest quarter":v23884, "raw mean moisture index highest quarter MI":v23885, 
  "raw mean moisture index lowest quater MI":v23886, "raw mean moisture index warmest quarter":v23887, "raw mean temp coldest quarter":v23888, "raw mean temp driest quater":v23889, "raw mean temp warmer quarter":v23890, "raw mean temp wettest quarter":v23891, "raw min temp coldest period":v23892, "raw moisture index seasonality":v23893, "raw precipitation coldets quarter":v23894, "raw precipitation driest period":v23895, "raw precipitation driest quarter":v23896, "raw precipitation seasonality":v23897, 
  "raw precipitation warmest quarter":v23898, "raw precipitation wettest period":v23899, "raw precipitation wettest quarter":v23900, "raw radiation coldest quarter":v23901, "raw radiation driest quarter":v23902, "raw radiation seasonality":v23903, "raw radiation warmest quarter":v23904, "raw radiation wettest quarter":v23905, "raw relief":v23906, "raw ridgetopflat":v23907, "raw rockalklty":v23908, "raw rockgrainsz":v23909, "raw rockhardness":v23910, "raw rocknutrnt":v23911, "raw roughness":v23912, 
  "raw sapk 1 1000 g sand":v23913, "raw slope":v23914, "raw soildepth":v23915, "raw solpawhc":v23916, "raw temperature annual range":v23917, "raw temperature seasonality":v23918, "raw thpk 1 1000 g thickness":v23919, "raw twi":v23920, "raw valleybottom":v23921};
  var v23922 = [.7600000054];
  var v23923 = [17.4749999046];
  var v23924 = [17.6499996185];
  var v23925 = [1174];
  var v23926 = [36312.5];
  var v23927 = [75];
  var v23928 = [.962500006];
  var v23929 = [24.5249996185];
  var v23930 = [200];
  var v23931 = [.5150000006];
  var v23932 = [.400000006];
  var v23933 = [10.2999997139];
  var v23934 = [28.25];
  var v23935 = [11.6499998569];
  var v23936 = [.9274999946];
  var v23937 = [.9399999976];
  var v23938 = [.4825000018];
  var v23939 = [.6875];
  var v23940 = [12.5];
  var v23941 = [13.875];
  var v23942 = [22.2500004768];
  var v23943 = [21.8999996185];
  var v23944 = [5.5750000477];
  var v23945 = [25.25];
  var v23946 = [.0735000009];
  var v23947 = [186.5];
  var v23948 = [5.75];
  var v23949 = [144.5];
  var v23950 = [45.5];
  var v23951 = [452];
  var v23952 = [45.75];
  var v23953 = [509.5];
  var v23954 = [12.1000001431];
  var v23955 = [15.5250000954];
  var v23956 = [27.5];
  var v23957 = [21.7000002861];
  var v23958 = [19.7750000954];
  var v23959 = [77.4553109407];
  var v23960 = [0];
  var v23961 = [4.75];
  var v23962 = [3];
  var v23963 = [4.5];
  var v23964 = [4.75];
  var v23965 = [16.6225522161];
  var v23966 = [43625];
  var v23967 = [4.8600849956];
  var v23968 = [1.1749999821];
  var v23969 = [159.5];
  var v23970 = [22.6749997139];
  var v23971 = [1.3325000107];
  var v23972 = [219];
  var v23973 = [10.4112542868];
  var v23974 = [28.125];
  var v23975 = [35500];
  var v23976 = [0];
  var v23977 = [17.4];
  var v23978 = [17.4];
  var v23979 = [1239.4];
  var v23980 = [37300];
  var v23981 = [90];
  var v23982 = [.6];
  var v23983 = [24.2];
  var v23984 = [220];
  var v23985 = [0];
  var v23986 = [10.6];
  var v23987 = [28];
  var v23988 = [11];
  var v23989 = [0];
  var v23990 = [.6];
  var v23991 = [0];
  var v23992 = [0];
  var v23993 = [12.8];
  var v23994 = [14.2];
  var v23995 = [22];
  var v23996 = [21.6];
  var v23997 = [5.8];
  var v23998 = [26.6];
  var v23999 = [177.4];
  var v24000 = [4.6];
  var v24001 = [135.6];
  var v24002 = [52.8];
  var v24003 = [497.4];
  var v24004 = [52.4];
  var v24005 = [579.6];
  var v24006 = [12.2];
  var v24007 = [15.8];
  var v24008 = [25.8];
  var v24009 = [21.2];
  var v24010 = [19.2];
  var v24011 = [81.6];
  var v24012 = [0];
  var v24013 = [4.6];
  var v24014 = [3];
  var v24015 = [4.8];
  var v24016 = [5];
  var v24017 = [15.4];
  var v24018 = [42950];
  var v24019 = [4.6];
  var v24020 = [.8];
  var v24021 = [160.8];
  var v24022 = [21.6];
  var v24023 = [1];
  var v24024 = [227.8];
  var v24025 = [10.4];
  var v24026 = [13.6];
  var v19313 = {"modelled annual mean moisture index":v23922, "modelled annual mean rad":v23923, "modelled annual mean temp":v23924, "modelled annual precipitation":v23925, "modelled clpk 1 1000 g clay":v23926, "modelled erosional":v23927, "modelled highest period moisture index":v23928, "modelled highest period radiation":v23929, "modelled hydraulic conductivity ksat":v23930, "modelled isothermality":v23931, "modelled lowest period moisture index":v23932, "modelled lowest period radiation":v23933, 
  "modelled max temp warmest period":v23934, "modelled mean diurnal range":v23935, "modelled mean moisture index coldest quarter":v23936, "modelled mean moisture index highest quarter MI":v23937, "modelled mean moisture index lowest quater MI":v23938, "modelled mean moisture index warmest quarter":v23939, "modelled mean temp coldest quarter":v23940, "modelled mean temp driest quater":v23941, "modelled mean temp warmer quarter":v23942, "modelled mean temp wettest quarter":v23943, "modelled min temp coldest period":v23944, 
  "modelled moisture index seasonality":v23945, "modelled phos":v23946, "modelled precipitation coldets quarter":v23947, "modelled precipitation driest period":v23948, "modelled precipitation driest quarter":v23949, "modelled precipitation seasonality":v23950, "modelled precipitation warmest quarter":v23951, "modelled precipitation wettest period":v23952, "modelled precipitation wettest quarter":v23953, "modelled radiation coldest quarter":v23954, "modelled radiation driest quarter":v23955, "modelled radiation seasonality":v23956, 
  "modelled radiation warmest quarter":v23957, "modelled radiation wettest quarter":v23958, "modelled relief":v23959, "modelled ridgetopflat":v23960, "modelled rockalklty":v23961, "modelled rockgrainsz":v23962, "modelled rockhardness":v23963, "modelled rocknutrnt":v23964, "modelled roughness":v23965, "modelled sapk 1 1000 g sand":v23966, "modelled slope":v23967, "modelled soildepth":v23968, "modelled solpawhc":v23969, "modelled temperature annual range":v23970, "modelled temperature seasonality":v23971, 
  "modelled thpk 1 1000 g thickness":v23972, "modelled twi":v23973, "modelled valleybottom":v23974, "modelled whpk 1 1000 g water cap":v23975, "raw annual mean moisture index":v23976, "raw annual mean rad":v23977, "raw annual mean temp":v23978, "raw annual precipitation":v23979, "raw clpk 1 1000 g clay":v23980, "raw erosional":v23981, "raw highest period moisture index":v23982, "raw highest period radiation":v23983, "raw hydraulic conductivity ksat":v23984, "raw lowest period moisture index":v23985, 
  "raw lowest period radiation":v23986, "raw max temp warmest period":v23987, "raw mean diurnal range":v23988, "raw mean moisture index coldest quarter":v23989, "raw mean moisture index highest quarter MI":v23990, "raw mean moisture index lowest quater MI":v23991, "raw mean moisture index warmest quarter":v23992, "raw mean temp coldest quarter":v23993, "raw mean temp driest quater":v23994, "raw mean temp warmer quarter":v23995, "raw mean temp wettest quarter":v23996, "raw min temp coldest period":v23997, 
  "raw moisture index seasonality":v23998, "raw precipitation coldets quarter":v23999, "raw precipitation driest period":v24000, "raw precipitation driest quarter":v24001, "raw precipitation seasonality":v24002, "raw precipitation warmest quarter":v24003, "raw precipitation wettest period":v24004, "raw precipitation wettest quarter":v24005, "raw radiation coldest quarter":v24006, "raw radiation driest quarter":v24007, "raw radiation seasonality":v24008, "raw radiation warmest quarter":v24009, "raw radiation wettest quarter":v24010, 
  "raw relief":v24011, "raw ridgetopflat":v24012, "raw rockalklty":v24013, "raw rockgrainsz":v24014, "raw rockhardness":v24015, "raw rocknutrnt":v24016, "raw roughness":v24017, "raw sapk 1 1000 g sand":v24018, "raw slope":v24019, "raw soildepth":v24020, "raw solpawhc":v24021, "raw temperature annual range":v24022, "raw temperature seasonality":v24023, "raw thpk 1 1000 g thickness":v24024, "raw twi":v24025, "raw valleybottom":v24026};
  var v14834 = {"Replace":v19299, "this":v19300, "with":v19301, "your":v19302, "own":v19303, "phylogeny":v19304, "in":v19305, "newick":v19306, "form":v19307, "tree":v19308, "take":v19309, "care":v19310, "to":v19311, "remove":v19312, "quotes_and_other_html_special_characters":v19313};
  var v8924 = {codeBase:"../..", width:550, height:800, alignName:true, lateralise:false, levelsToShow:10, branchMultiplier:1, tree:"((Replace:0.007667365048364433,(this:0.005369261896034483,(with:0.011621228506591308,your:2.100100506802205E-6):0.0027929350821030707):0.012281999999150084):0.0400709772514759,(((own:0.0012025949078822151,phylogeny:0.0024332420478173633):0.006421131153429474,(in:0.008984623535641459,(newick:0.0012074724370825796,form:0.004013224017395373):0.003744210327868966):0.00542385295016945):0.023689622298502563,(tree:0.036702751435909745,((take:0.002448206437464337,care:0.0024347868455663196):0.001504447318880206,(to:0.0023787045835393372,(remove:2.100100506802205E-6,quotes_and_other_html_special_characters:0.01728824049672087):0.010690121488212884):6.006911375427831E-4):0.005347250770554118):0.014788598652250115):0.0400709772514759);", 
  character:v14834};
  phylogenyExplorer_init(v8924);
  return;
}
var labelType;
var useGradients;
var nativeTextSupport;
var animate;
v35();
var Log = {elem:false, write:v36};
var Nav = {elem:false, load:v38};
var settingsPage;
var updateCharacter;
var onSetCharacter;
var onClickAlign;
var onSetRoot;
var onLateralise;
var isLateralise;
var onAnimate;
var onRender;
var onBranchLength;
var onBranchMultiply;
var onGetCharacter;
var st;
var toggleScreen;
updateCharacter = v39;
settingsPage = v40;
var phylojive = v43();
v614();
v1090(window);
v1120(jQuery);
v1147(jQuery);
v1165(jQuery);
v1212(jQuery);
v1235(jQuery);
v1281(jQuery);
v1294(jQuery);
v1351(jQuery);
var v30873 = jQuery.effects;
var v30879 = !v30873;
if (v30879) {
  v1390(jQuery);
}
v1394(jQuery);
v1400(jQuery);
v1404(jQuery);
v1408(jQuery);
v1412(jQuery);
v1416(jQuery);
v1420(jQuery);
v1424(jQuery);
v1429(jQuery);
v1439(jQuery);
v1444(jQuery);
v1448(jQuery);
v1452(jQuery);
v1481(jQuery);
v1525(jQuery);
v1544(jQuery);
v1579(jQuery);
v1675(jQuery);
v1729(jQuery);
v1744(jQuery);
v1752(jQuery);
v1784(jQuery);
v1843(jQuery);
v1885(jQuery, document, window);
Smits = {};
Smits.Common = {nodeIdIncrement:0, activeNode:0, roundFloat:v1886, apply:v1887, addRaphEventHandler:v1890, isInteger:v1891, isXMLSerializerAvailable:v1892, createSvgEl:v1893, createGradientEl:v1894, setCssStyle:v1895};
var v8925 = Smits;
var v31256 = v1903();
v8925.PhyloCanvas = v31256;
var v8926 = Smits.PhyloCanvas;
v8926.prototype = {};
var v8927 = Smits.PhyloCanvas;
var v31257 = v1905();
v8927.Node = v31257;
var v14835 = Smits.PhyloCanvas;
var v8928 = v14835.Node;
v8928.prototype = {getCountAllChildren:v1906, getCountImmediateChildren:v1907, getMidbranchPosition:v1908};
var v8929 = Smits.PhyloCanvas;
var v31258 = v1914();
v8929.NewickParse = v31258;
var v14836 = Smits.PhyloCanvas;
var v8930 = v14836.NewickParse;
v8930.prototype = {};
var v8931 = Smits.PhyloCanvas;
var v31259 = v1920();
v8931.PhyloxmlParse = v31259;
var v14837 = Smits.PhyloCanvas;
var v8932 = v14837.PhyloxmlParse;
v8932.prototype = {};
var v8933 = Smits.PhyloCanvas;
var v31260 = v1926();
v8933.NexmlParse = v31260;
var v14838 = Smits.PhyloCanvas;
var v8934 = v14838.NexmlParse;
v8934.prototype = {};
var v8935 = Smits.PhyloCanvas;
var v31261 = v1932();
v8935.NexmlJsonParse = v31261;
var v14839 = Smits.PhyloCanvas;
var v8936 = v14839.NexmlParse;
v8936.prototype = {};
var v8937 = Smits.PhyloCanvas;
v8937.Render = {};
var v14840 = Smits.PhyloCanvas;
var v8938 = v14840.Render;
var v14841 = {stroke:"rgb(0,0,0)", "stroke-width":1};
var v14842 = {"font-family":"Verdana", "font-size":12, "text-anchor":"start"};
var v14843 = {stroke:"rgb(0,0,0)", "stroke-width":1};
var v14844 = {stroke:"rgb(200,200,200)", "stroke-dasharray":". "};
var v14845 = {fill:"#EEE", stroke:"#DDD"};
var v14846 = {fill:"red"};
var v14847 = {fill:"#003300", stroke:"#DDD"};
v8938.Style = {line:v14841, text:v14842, path:v14843, connectedDash:v14844, textSecantBg:v14845, highlightedEdgeCircle:v14846, barChart:v14847, getStyle:v1933};
var v14848 = Smits.PhyloCanvas;
var v8939 = v14848.Render;
var v19314 = !1;
var v19315 = !1;
var v14849 = {bufferX:200, paddingX:10, paddingY:20, bufferInnerLabels:10, bufferOuterLabels:5, minHeightBetweenLeaves:10, alignPadding:0, alignRight:v19314, showScaleBar:v19315};
var v14850 = {bufferRadius:.33, bufferAngle:20, initStartAngle:160, innerCircleRadius:0, minHeightBetweenLeaves:5, bufferInnerLabels:2, bufferOuterLabels:5};
var v14851 = !1;
v8939.Parameters = {jsOverride:0, Rectangular:v14849, Circular:v14850, binaryCharts:[], integratedBinaryCharts:[], barCharts:[], binaryChartBufferInner:5, binaryChartBufferSiblings:.01, binaryChartThickness:15, binaryChartDisjointed:v14851, barChartBufferInner:3, barChartHeight:50, barChartWidth:.5, mouseRollOver:v1934, mouseRollOut:v1935, set:v1936};
var v14852 = Smits.PhyloCanvas;
var v8940 = v14852.Render;
var v31262 = v1938();
v8940.Line = v31262;
var v14853 = Smits.PhyloCanvas;
var v8941 = v14853.Render;
var v31263 = v1940();
v8941.Text = v31263;
var v14854 = Smits.PhyloCanvas;
var v8942 = v14854.Render;
var v31264 = v1942();
v8942.Path = v31264;
var v14855 = Smits.PhyloCanvas;
var v8943 = v14855.Render;
var v31265 = v1944();
v8943.Circle = v31265;
var v14856 = Smits.PhyloCanvas;
var v8944 = v14856.Render;
var v31266 = v1946();
v8944.SVG = v31266;
var v19316 = Smits.PhyloCanvas;
var v14857 = v19316.Render;
var v8945 = v14857.SVG;
v8945.prototype = {render:v1947, draw:v1948};
var v14858 = Smits.PhyloCanvas;
var v8946 = v14858.Render;
var v31267 = v1952();
v8946.Phylogram = v31267;
var v19317 = Smits.PhyloCanvas;
var v14859 = v19317.Render;
var v8947 = v14859.Phylogram;
v8947.prototype = {};
var v14860 = Smits.PhyloCanvas;
var v8948 = v14860.Render;
var v31268 = v1956();
v8948.CircularPhylogram = v31268;
var v19318 = Smits.PhyloCanvas;
var v14861 = v19318.Render;
var v8949 = v14861.CircularPhylogram;
v8949.prototype = {};
var XMLObjectifier = v1991();
v2127.call(this);
v2226.call(this);
var v8950 = document.body;
v8950.onload = init

}
