function v2226() {
  function v2225(a$$944, b$$831, c$$678) {
    function v2224(d$$505, e$$426) {
      var v2227;
      if (d$$505 === b$$831) {
        v2227 = e$$426;
      } else {
        v2227 = d$$505;
      }
      e$$426 = v2227;
      var v2228;
      if (a$$944) {
        v2228 = JAM.call(a$$944, null, [b$$831, e$$426, c$$678], JAM.policy.p3);
      } else {
        v2228 = JAM.call(b$$831.trigger, b$$831, ["error", b$$831, e$$426, c$$678], JAM.policy.p3);
      }
      v2228;
      return;
    }
    return v2224;
  }
  function v2223(a$$942, b$$830, c$$677) {
    function v2222(a$$943) {
      JAM.call(a$$943.setRequestHeader, a$$943, ["X-HTTP-Method-Override", d$$504], JAM.policy.p3);
      return;
    }
    var d$$504 = H$$5[a$$942];
    if (!c$$677) {
      c$$677 = {};
    }
    var e$$425 = {type:d$$504, dataType:"json"};
    var v2229 = c$$677.url;
    if (!v2229) {
      var v8953 = e$$425;
      var v14862 = n$$110(b$$830, "url");
      if (!v14862) {
        v14862 = t$$33();
      }
      v8953.url = v14862;
    }
    var v14863 = !c$$677.data;
    if (v14863) {
      v14863 = b$$830;
    }
    var v8955 = v14863;
    if (v8955) {
      var v14864 = "create" == a$$942;
      if (!v14864) {
        v14864 = "update" == a$$942;
      }
      v8955 = v14864;
    }
    if (v8955) {
      e$$425.contentType = "application/json";
      var v8956 = e$$425;
      var v30914 = JAM.call(JSON.stringify, JSON, [JAM.call(b$$830.toJSON, b$$830, [], JAM.policy.p3)], JAM.policy.p3);
      v8956.data = v30914;
    }
    var v2231 = g$$232.emulateJSON;
    if (v2231) {
      e$$425.contentType = "application/x-www-form-urlencoded";
      var v14866;
      if (e$$425.data) {
        v14866 = {model:e$$425.data};
      } else {
        v14866 = {};
      }
      e$$425.data = v14866;
    }
    var v8957 = g$$232.emulateHTTP;
    if (v8957) {
      var v14867 = "PUT" === d$$504;
      if (!v14867) {
        v14867 = "DELETE" === d$$504;
      }
      v8957 = v14867;
    }
    if (v8957) {
      var v14868 = g$$232.emulateJSON;
      if (v14868) {
        e$$425.data._method = d$$504;
      }
      e$$425.type = "POST";
      e$$425.beforeSend = v2222;
    }
    var v8958 = "GET" !== e$$425.type;
    if (v8958) {
      v8958 = !g$$232.emulateJSON;
    }
    var v2233 = v8958;
    if (v2233) {
      e$$425.processData = !1;
    }
    return JAM.call(i$$241.ajax, i$$241, [JAM.call(f$$232.extend, f$$232, [e$$425, c$$677], JAM.policy.p3)], JAM.policy.p3);
  }
  function v2221(a$$941, b$$829) {
    var c$$676 = G$$5(this, a$$941, b$$829);
    c$$676.extend = this.extend;
    return c$$676;
  }
  function v2220() {
    if (this.el) {
      JAM.call(this.setElement, this, [this.el, !1], JAM.policy.p3);
    } else {
      var v2237 = n$$110(this, "attributes");
      if (!v2237) {
        v2237 = {};
      }
      var a$$940 = v2237;
      var v2238 = this.id;
      if (v2238) {
        a$$940.id = this.id;
      }
      var v2239 = this.className;
      if (v2239) {
        a$$940["class"] = this.className;
      }
      JAM.call(this.setElement, this, [JAM.call(this.make, this, [this.tagName, a$$940], JAM.policy.p3), !1], JAM.policy.p3);
    }
    return;
  }
  function v2219(a$$939) {
    var v2243 = this.options;
    if (v2243) {
      a$$939 = JAM.call(f$$232.extend, f$$232, [{}, this.options, a$$939], JAM.policy.p3);
    }
    var b$$828 = 0;
    var c$$675 = w$$21.length;
    var v2245 = b$$828 < c$$675;
    for (;v2245;) {
      var d$$503 = w$$21[b$$828];
      var v2244 = a$$939[d$$503];
      if (v2244) {
        JAM.set(this, d$$503, a$$939[d$$503], JAM.policy.p2);
      }
      b$$828++;
      v2245 = b$$828 < c$$675;
    }
    this.options = a$$939;
    return;
  }
  function v2218() {
    var v2246 = this.$el;
    JAM.call(v2246.unbind, v2246, [".delegateEvents" + this.cid], JAM.policy.p3);
    return;
  }
  function v2217(a$$938) {
    var v8963 = a$$938;
    if (!v8963) {
      v8963 = a$$938 = n$$110(this, "events");
    }
    if (v8963) {
      JAM.call(this.undelegateEvents, this, [], JAM.policy.p3);
      var b$$827;
      for (b$$827 in a$$938) {
        var c$$674 = a$$938[b$$827];
        var v2248 = JAM.call(f$$232.isFunction, f$$232, [c$$674], JAM.policy.p3);
        if (!v2248) {
          c$$674 = this[a$$938[b$$827]];
        }
        if (!c$$674) {
          throw Error('Method "' + a$$938[b$$827] + '" does not exist');
        }
        var d$$502 = JAM.call(b$$827.match, b$$827, [F$$6], JAM.policy.p3);
        var e$$424 = d$$502[1];
        d$$502 = d$$502[2];
        c$$674 = JAM.call(f$$232.bind, f$$232, [c$$674, this], JAM.policy.p3);
        e$$424 = e$$424 + (".delegateEvents" + this.cid);
        var v2252;
        if ("" === d$$502) {
          var v8968 = this.$el;
          v2252 = JAM.call(v8968.bind, v8968, [e$$424, c$$674], JAM.policy.p3);
        } else {
          var v8969 = this.$el;
          v2252 = JAM.call(v8969.delegate, v8969, [d$$502, e$$424, c$$674], JAM.policy.p3);
        }
        v2252;
      }
    }
    return;
  }
  function v2216(a$$937, b$$826) {
    var v2254 = this.$el;
    if (v2254) {
      JAM.call(this.undelegateEvents, this, [], JAM.policy.p3);
    }
    var v2255;
    if (a$$937 instanceof i$$241) {
      v2255 = a$$937;
    } else {
      v2255 = JAM.call(i$$241, null, [a$$937], JAM.policy.p3);
    }
    this.$el = v2255;
    this.el = this.$el[0];
    var v2257 = !1 !== b$$826;
    if (v2257) {
      JAM.call(this.delegateEvents, this, [], JAM.policy.p3);
    }
    return this;
  }
  function v2215(a$$936, b$$825, c$$673) {
    a$$936 = JAM.call(document.createElement, document, [a$$936], JAM.policy.p3);
    if (b$$825) {
      var v8973 = JAM.call(i$$241, null, [a$$936], JAM.policy.p3);
      JAM.call(v8973.attr, v8973, [b$$825], JAM.policy.p3);
    }
    if (c$$673) {
      var v8974 = JAM.call(i$$241, null, [a$$936], JAM.policy.p3);
      JAM.call(v8974.html, v8974, [c$$673], JAM.policy.p3);
    }
    return a$$936;
  }
  function v2214() {
    var v2258 = this.$el;
    JAM.call(v2258.remove, v2258, [], JAM.policy.p3);
    return this;
  }
  function v2213() {
    return this;
  }
  function v2212() {
    return;
  }
  function v2211(a$$935) {
    var v2259 = this.$el;
    return JAM.call(v2259.find, v2259, [a$$935], JAM.policy.p3);
  }
  function v2210(a$$934) {
    var v30915 = JAM.call(f$$232.uniqueId, f$$232, ["view"], JAM.policy.p3);
    this.cid = v30915;
    JAM.call(this._configure, this, [a$$934 || {}], JAM.policy.p3);
    JAM.call(this._ensureElement, this, [], JAM.policy.p3);
    var v2261 = this.initialize;
    JAM.call(v2261.apply, v2261, [this, arguments], JAM.policy.p3);
    JAM.call(this.delegateEvents, this, [], JAM.policy.p3);
    return;
  }
  function v2209(a$$933, b$$824, c$$672) {
    var v2262;
    if (c$$672) {
      var v24027 = JAM.call(a$$933.toString, a$$933, [], JAM.policy.p3);
      v2262 = JAM.call(a$$933.replace, a$$933, [JAM.call(v24027.replace, v24027, [/(javascript:|#).*$/, ""], JAM.policy.p3) + "#" + b$$824], JAM.policy.p3);
    } else {
      v2262 = a$$933.hash = b$$824;
    }
    v2262;
    return;
  }
  function v2208(a$$932, b$$823) {
    if (!m$$64.started) {
      return!1;
    }
    var v8977 = !b$$823;
    if (!v8977) {
      v8977 = !0 === b$$823;
    }
    if (v8977) {
      b$$823 = {trigger:b$$823};
    }
    var v2265 = a$$932 || "";
    var c$$671 = JAM.call(v2265.replace, v2265, [s$$36, ""], JAM.policy.p3);
    var v2266 = this.fragment != c$$671;
    if (v2266) {
      var v14876;
      if (this._hasPushState) {
        var v26201 = 0 != JAM.call(c$$671.indexOf, c$$671, [this.options.root], JAM.policy.p3);
        if (v26201) {
          c$$671 = this.options.root + c$$671;
        }
        this.fragment = c$$671;
        var v24028 = window.history;
        var v26202;
        if (b$$823.replace) {
          v26202 = "replaceState";
        } else {
          v26202 = "pushState";
        }
        v14876 = JAM.call(v24028[v26202], v24028, [{}, document.title, c$$671], JAM.policy.p3);
      } else {
        var v19327;
        if (this._wantsHashChange) {
          this.fragment = c$$671;
          JAM.call(this._updateHash, this, [window.location, c$$671, b$$823.replace], JAM.policy.p3);
          var v27730 = this.iframe;
          if (v27730) {
            v27730 = c$$671 != JAM.call(this.getFragment, this, [JAM.call(this.getHash, this, [this.iframe], JAM.policy.p3)], JAM.policy.p3);
          }
          var v26203 = v27730;
          if (v26203) {
            var v28687 = b$$823.replace;
            if (!v28687) {
              var v29727 = this.iframe.document;
              var v29324 = JAM.call(v29727.open, v29727, [], JAM.policy.p3);
              JAM.call(v29324.close, v29324, [], JAM.policy.p3);
            }
            v26203 = JAM.call(this._updateHash, this, [this.iframe.location, c$$671, b$$823.replace], JAM.policy.p3);
          }
          v19327 = v26203;
        } else {
          var v24031 = window.location;
          v19327 = JAM.call(v24031.assign, v24031, [this.options.root + a$$932], JAM.policy.p3);
        }
        v14876 = v19327;
      }
      v14876;
      var v14877 = b$$823.trigger;
      if (v14877) {
        JAM.call(this.loadUrl, this, [a$$932], JAM.policy.p3);
      }
    }
    return;
  }
  function v2207(a$$930) {
    function v2206(a$$931) {
      var v8979 = a$$931.route;
      if (JAM.call(v8979.test, v8979, [b$$822], JAM.policy.p3)) {
        JAM.call(a$$931.callback, a$$931, [b$$822], JAM.policy.p3);
        return!0;
      }
      return;
    }
    var v30916 = JAM.call(this.getFragment, this, [a$$930], JAM.policy.p3);
    var b$$822 = this.fragment = v30916;
    return JAM.call(f$$232.any, f$$232, [this.handlers, v2206], JAM.policy.p3);
  }
  function v2205() {
    var a$$929 = JAM.call(this.getFragment, this, [], JAM.policy.p3);
    var v8980 = a$$929 == this.fragment;
    if (v8980) {
      v8980 = this.iframe;
    }
    var v2269 = v8980;
    if (v2269) {
      a$$929 = JAM.call(this.getFragment, this, [JAM.call(this.getHash, this, [this.iframe], JAM.policy.p3)], JAM.policy.p3);
    }
    if (a$$929 == this.fragment) {
      return!1;
    }
    var v2271 = this.iframe;
    if (v2271) {
      JAM.call(this.navigate, this, [a$$929], JAM.policy.p3);
    }
    var v2272 = JAM.call(this.loadUrl, this, [], JAM.policy.p3);
    if (!v2272) {
      JAM.call(this.loadUrl, this, [JAM.call(this.getHash, this, [], JAM.policy.p3)], JAM.policy.p3);
    }
    return;
  }
  function v2204(a$$928, b$$821) {
    var v2273 = this.handlers;
    JAM.call(v2273.unshift, v2273, [{route:a$$928, callback:b$$821}], JAM.policy.p3);
    return;
  }
  function v2203() {
    var v8985 = JAM.call(i$$241, null, [window], JAM.policy.p3);
    var v2275 = JAM.call(v8985.unbind, v8985, ["popstate", this.checkUrl], JAM.policy.p3);
    JAM.call(v2275.unbind, v2275, ["hashchange", this.checkUrl], JAM.policy.p3);
    clearInterval(this._checkUrlInterval);
    m$$64.started = !1;
    return;
  }
  function v2202(a$$927) {
    if (m$$64.started) {
      throw Error("Backbone.history has already been started");
    }
    m$$64.started = !0;
    var v30917 = JAM.call(f$$232.extend, f$$232, [{}, {root:"/"}, this.options, a$$927], JAM.policy.p3);
    this.options = v30917;
    this._wantsHashChange = !1 !== this.options.hashChange;
    this._wantsPushState = !!this.options.pushState;
    var v14881 = !this.options.pushState;
    if (!v14881) {
      v14881 = !window.history;
    }
    var v8989 = v14881;
    if (!v8989) {
      v8989 = !window.history.pushState;
    }
    this._hasPushState = !v8989;
    a$$927 = JAM.call(this.getFragment, this, [], JAM.policy.p3);
    var b$$820 = document.documentMode;
    var v19333 = navigator.userAgent;
    var v8990 = JAM.call(E$$6.exec, E$$6, [JAM.call(v19333.toLowerCase, v19333, [], JAM.policy.p3)], JAM.policy.p3);
    if (v8990) {
      var v14885 = !b$$820;
      if (!v14885) {
        v14885 = 7 >= b$$820;
      }
      v8990 = v14885;
    }
    if (b$$820 = v8990) {
      var v24035 = JAM.call(i$$241, null, ['<iframe src="javascript:0" tabindex="-1" />'], JAM.policy.p3);
      var v19335 = JAM.call(v24035.hide, v24035, [], JAM.policy.p3);
      this.iframe = JAM.call(v19335.appendTo, v19335, ["body"], JAM.policy.p3)[0].contentWindow;
      JAM.call(this.navigate, this, [a$$927], JAM.policy.p3);
    }
    var v2286;
    if (this._hasPushState) {
      var v8992 = JAM.call(i$$241, null, [window], JAM.policy.p3);
      v2286 = JAM.call(v8992.bind, v8992, ["popstate", this.checkUrl], JAM.policy.p3);
    } else {
      var v8994;
      var v24036 = this._wantsHashChange;
      if (v24036) {
        v24036 = "onhashchange" in window;
      }
      var v19336 = v24036;
      if (v19336) {
        v19336 = !b$$820;
      }
      if (v19336) {
        var v14887 = JAM.call(i$$241, null, [window], JAM.policy.p3);
        v8994 = JAM.call(v14887.bind, v14887, ["hashchange", this.checkUrl], JAM.policy.p3);
      } else {
        var v14889 = this._wantsHashChange;
        if (v14889) {
          var v30918 = JAM.call(setInterval, null, [this.checkUrl, this.interval]);
          v14889 = this._checkUrlInterval = v30918;
        }
        v8994 = v14889;
      }
      v2286 = v8994;
    }
    v2286;
    this.fragment = a$$927;
    a$$927 = window.location;
    b$$820 = a$$927.pathname == this.options.root;
    var v19339 = this._wantsHashChange;
    if (v19339) {
      v19339 = this._wantsPushState;
    }
    var v14891 = v19339;
    if (v14891) {
      v14891 = !this._hasPushState;
    }
    var v8997 = v14891;
    if (v8997) {
      v8997 = !b$$820;
    }
    if (v8997) {
      var v30919 = JAM.call(this.getFragment, this, [null, !0], JAM.policy.p3);
      this.fragment = v30919;
      var v14893 = window.location;
      JAM.call(v14893.replace, v14893, [this.options.root + "#" + this.fragment], JAM.policy.p3);
      return!0;
    }
    var v19343 = this._wantsPushState;
    if (v19343) {
      v19343 = this._hasPushState;
    }
    var v14895 = v19343;
    if (v14895) {
      v14895 = b$$820;
    }
    var v8998 = v14895;
    if (v8998) {
      v8998 = a$$927.hash;
    }
    var v2290 = v8998;
    if (v2290) {
      var v14896 = JAM.call(this.getHash, this, [], JAM.policy.p3);
      var v30920 = JAM.call(v14896.replace, v14896, [s$$36, ""], JAM.policy.p3);
      this.fragment = v30920;
      var v14897 = window.history;
      JAM.call(v14897.replaceState, v14897, [{}, document.title, a$$927.protocol + "//" + a$$927.host + this.options.root + this.fragment], JAM.policy.p3);
    }
    if (!this.options.silent) {
      return JAM.call(this.loadUrl, this, [], JAM.policy.p3);
    }
    return;
  }
  function v2201(a$$926, b$$819) {
    if (null == a$$926) {
      var v9000 = this._hasPushState;
      if (!v9000) {
        v9000 = b$$819;
      }
      if (v9000) {
        a$$926 = window.location.pathname;
        var c$$670 = window.location.search;
        if (c$$670) {
          a$$926 = a$$926 + c$$670;
        }
      } else {
        a$$926 = JAM.call(this.getHash, this, [], JAM.policy.p3);
      }
    }
    var v2296 = JAM.call(a$$926.indexOf, a$$926, [this.options.root], JAM.policy.p3);
    if (!v2296) {
      a$$926 = JAM.call(a$$926.substr, a$$926, [this.options.root.length], JAM.policy.p3);
    }
    return JAM.call(a$$926.replace, a$$926, [s$$36, ""], JAM.policy.p3);
  }
  function v2200(a$$925) {
    var v2297;
    var v24040;
    if (a$$925) {
      v24040 = a$$925.location;
    } else {
      v24040 = window.location;
    }
    var v14904 = v24040.href;
    if (a$$925 = JAM.call(v14904.match, v14904, [/#(.*)$/], JAM.policy.p3)) {
      v2297 = a$$925[1];
    } else {
      v2297 = "";
    }
    return v2297;
  }
  function v2199() {
    this.handlers = [];
    JAM.call(f$$232.bindAll, f$$232, [this, "checkUrl"], JAM.policy.p3);
    return;
  }
  function v2198(a$$924, b$$818) {
    var v2298 = JAM.call(a$$924.exec, a$$924, [b$$818], JAM.policy.p3);
    return JAM.call(v2298.slice, v2298, [1], JAM.policy.p3);
  }
  function v2197(a$$923) {
    var v9005 = JAM.call(a$$923.replace, a$$923, [D$$6, "\\$&"], JAM.policy.p3);
    var v2299 = JAM.call(v9005.replace, v9005, [B$$7, "([^/]+)"], JAM.policy.p3);
    a$$923 = JAM.call(v2299.replace, v2299, [C$$6, "(.*?)"], JAM.policy.p3);
    return RegExp("^" + a$$923 + "$");
  }
  function v2196() {
    if (this.routes) {
      var a$$922 = [];
      var b$$817;
      for (b$$817 in this.routes) {
        JAM.call(a$$922.unshift, a$$922, [[b$$817, this.routes[b$$817]]], JAM.policy.p3);
      }
      b$$817 = 0;
      var c$$669 = a$$922.length;
      var v2306 = b$$817 < c$$669;
      for (;v2306;) {
        JAM.call(this.route, this, [a$$922[b$$817][0], a$$922[b$$817][1], this[a$$922[b$$817][1]]], JAM.policy.p3);
        b$$817++;
        v2306 = b$$817 < c$$669;
      }
    }
    return;
  }
  function v2195(a$$921, b$$816) {
    var v2308 = g$$232.history;
    JAM.call(v2308.navigate, v2308, [a$$921, b$$816], JAM.policy.p3);
    return;
  }
  function v2194(a$$920, b$$815, c$$668) {
    function v2193(d$$501) {
      d$$501 = JAM.call(this._extractParameters, this, [a$$920, d$$501], JAM.policy.p3);
      if (c$$668) {
        JAM.call(c$$668.apply, c$$668, [this, d$$501], JAM.policy.p3);
      }
      var v2309 = this.trigger;
      var v9011 = ["route:" + b$$815];
      JAM.call(v2309.apply, v2309, [this, JAM.call(v9011.concat, v9011, [d$$501], JAM.policy.p3)], JAM.policy.p3);
      var v2311 = g$$232.history;
      JAM.call(v2311.trigger, v2311, ["route", this, b$$815, d$$501], JAM.policy.p3);
      return;
    }
    var v2312 = g$$232.history;
    if (!v2312) {
      var v9012 = g$$232;
      var v30921 = new m$$64;
      v9012.history = v30921;
    }
    var v2313 = JAM.call(f$$232.isRegExp, f$$232, [a$$920], JAM.policy.p3);
    if (!v2313) {
      a$$920 = JAM.call(this._routeToRegExp, this, [a$$920], JAM.policy.p3);
    }
    if (!c$$668) {
      c$$668 = this[b$$815];
    }
    var v2314 = g$$232.history;
    JAM.call(v2314.route, v2314, [a$$920, JAM.call(f$$232.bind, f$$232, [v2193, this], JAM.policy.p3)], JAM.policy.p3);
    return this;
  }
  function v2192() {
    return;
  }
  function v2191(a$$919) {
    if (!a$$919) {
      a$$919 = {};
    }
    var v2316 = a$$919.routes;
    if (v2316) {
      this.routes = a$$919.routes;
    }
    JAM.call(this._bindRoutes, this, [], JAM.policy.p3);
    var v2317 = this.initialize;
    JAM.call(v2317.apply, v2317, [this, arguments], JAM.policy.p3);
    return;
  }
  function v2190(a$$918) {
    function v2189() {
      var v2318 = f$$232[a$$918];
      var v9017 = [this.models];
      return JAM.call(v2318.apply, v2318, [f$$232, JAM.call(v9017.concat, v9017, [JAM.call(f$$232.toArray, f$$232, [arguments], JAM.policy.p3)], JAM.policy.p3)], JAM.policy.p3);
    }
    JAM.set(r$$32.prototype, a$$918, v2189, JAM.policy.p2);
    return;
  }
  function v2188(a$$917, b$$814, c$$667, d$$500) {
    var v14909 = "add" == a$$917;
    if (!v14909) {
      v14909 = "remove" == a$$917;
    }
    var v9019 = v14909;
    if (v9019) {
      v9019 = c$$667 != this;
    }
    var v2321 = v9019;
    if (!v2321) {
      var v19349 = "destroy" == a$$917;
      if (v19349) {
        JAM.call(this.remove, this, [b$$814, d$$500], JAM.policy.p3);
      }
      var v24041 = b$$814;
      if (v24041) {
        v24041 = a$$917 === "change:" + b$$814.idAttribute;
      }
      var v19350 = v24041;
      if (v19350) {
        delete this._byId[JAM.call(b$$814.previous, b$$814, [b$$814.idAttribute], JAM.policy.p3)];
        JAM.set(this._byId, b$$814.id, b$$814, JAM.policy.p2);
      }
      var v14910 = this.trigger;
      JAM.call(v14910.apply, v14910, [this, arguments], JAM.policy.p3);
    }
    return;
  }
  function v2187(a$$916) {
    var v2322 = this == a$$916.collection;
    if (v2322) {
      delete a$$916.collection;
    }
    JAM.call(a$$916.off, a$$916, ["all", this._onModelEvent, this], JAM.policy.p3);
    return;
  }
  function v2186(a$$915, b$$813) {
    if (!b$$813) {
      b$$813 = {};
    }
    var v2324;
    if (a$$915 instanceof o$$42) {
      var v9023 = a$$915.collection;
      if (!v9023) {
        v9023 = a$$915.collection = this;
      }
      v2324 = v9023;
    } else {
      b$$813.collection = this;
      a$$915 = JAM.new(this.model, [a$$915, b$$813]);
      var v14912 = JAM.call(a$$915._validate, a$$915, [a$$915.attributes, b$$813], JAM.policy.p3);
      if (!v14912) {
        v14912 = a$$915 = !1;
      }
      v2324 = v14912;
    }
    v2324;
    return a$$915;
  }
  function v2185() {
    this.length = 0;
    this.models = [];
    this._byId = {};
    this._byCid = {};
    return;
  }
  function v2184() {
    var v2325 = JAM.call(f$$232, null, [this.models], JAM.policy.p3);
    return JAM.call(v2325.chain, v2325, [], JAM.policy.p3);
  }
  function v2183(a$$914) {
    return a$$914;
  }
  function v2182(a$$913, b$$812) {
    function v2181(e$$423, f$$237) {
      var v2326 = b$$812.wait;
      if (v2326) {
        JAM.call(c$$666.add, c$$666, [e$$423, b$$812], JAM.policy.p3);
      }
      var v2327;
      if (d$$499) {
        v2327 = JAM.call(d$$499, null, [e$$423, f$$237], JAM.policy.p3);
      } else {
        v2327 = JAM.call(e$$423.trigger, e$$423, ["sync", a$$913, f$$237, b$$812], JAM.policy.p3);
      }
      v2327;
      return;
    }
    var c$$666 = this;
    var v2328;
    if (b$$812) {
      v2328 = JAM.call(f$$232.clone, f$$232, [b$$812], JAM.policy.p3);
    } else {
      v2328 = {};
    }
    b$$812 = v2328;
    a$$913 = JAM.call(this._prepareModel, this, [a$$913, b$$812], JAM.policy.p3);
    if (!a$$913) {
      return!1;
    }
    var v2330 = b$$812.wait;
    if (!v2330) {
      JAM.call(c$$666.add, c$$666, [a$$913, b$$812], JAM.policy.p3);
    }
    var d$$499 = b$$812.success;
    b$$812.success = v2181;
    JAM.call(a$$913.save, a$$913, [null, b$$812], JAM.policy.p3);
    return a$$913;
  }
  function v2180(a$$912) {
    function v2179(d$$498, e$$422, f$$236) {
      var v9027;
      if (a$$912.add) {
        v9027 = "add";
      } else {
        v9027 = "reset";
      }
      JAM.call(b$$811[v9027], b$$811, [JAM.call(b$$811.parse, b$$811, [d$$498, f$$236], JAM.policy.p3), a$$912], JAM.policy.p3);
      if (c$$665) {
        JAM.call(c$$665, null, [b$$811, d$$498], JAM.policy.p3);
      }
      return;
    }
    var v2333;
    if (a$$912) {
      v2333 = JAM.call(f$$232.clone, f$$232, [a$$912], JAM.policy.p3);
    } else {
      v2333 = {};
    }
    a$$912 = v2333;
    var v2334 = void 0 === a$$912.parse;
    if (v2334) {
      a$$912.parse = !0;
    }
    var b$$811 = this;
    var c$$665 = a$$912.success;
    a$$912.success = v2179;
    var v2335 = a$$912;
    var v30922 = JAM.call(g$$232.wrapError, g$$232, [a$$912.error, b$$811, a$$912], JAM.policy.p3);
    v2335.error = v30922;
    var v9031 = this.sync;
    if (!v9031) {
      v9031 = g$$232.sync;
    }
    var v2336 = v9031;
    return JAM.call(v2336.call, v2336, [this, "read", this, a$$912], JAM.policy.p3);
  }
  function v2178(a$$911, b$$810) {
    if (!a$$911) {
      a$$911 = [];
    }
    if (!b$$810) {
      b$$810 = {};
    }
    var c$$664 = 0;
    var d$$497 = this.models.length;
    var v2339 = c$$664 < d$$497;
    for (;v2339;) {
      JAM.call(this._removeReference, this, [this.models[c$$664]], JAM.policy.p3);
      c$$664++;
      v2339 = c$$664 < d$$497;
    }
    JAM.call(this._reset, this, [], JAM.policy.p3);
    JAM.call(this.add, this, [a$$911, JAM.call(f$$232.extend, f$$232, [{silent:!0}, b$$810], JAM.policy.p3)], JAM.policy.p3);
    var v2341 = b$$810.silent;
    if (!v2341) {
      JAM.call(this.trigger, this, ["reset", this, b$$810], JAM.policy.p3);
    }
    return this;
  }
  function v2177(a$$910) {
    function v2176(b$$809) {
      return JAM.call(b$$809.get, b$$809, [a$$910], JAM.policy.p3);
    }
    return JAM.call(f$$232.map, f$$232, [this.models, v2176], JAM.policy.p3);
  }
  function v2175(a$$909) {
    if (!a$$909) {
      a$$909 = {};
    }
    if (!this.comparator) {
      throw Error("Cannot sort a set without a comparator");
    }
    var b$$808 = JAM.call(f$$232.bind, f$$232, [this.comparator, this], JAM.policy.p3);
    var v2345;
    if (1 == this.comparator.length) {
      var v30923 = JAM.call(this.sortBy, this, [b$$808], JAM.policy.p3);
      v2345 = this.models = v30923;
    } else {
      var v9039 = this.models;
      v2345 = JAM.call(v9039.sort, v9039, [b$$808], JAM.policy.p3);
    }
    v2345;
    var v2346 = a$$909.silent;
    if (!v2346) {
      JAM.call(this.trigger, this, ["reset", this, a$$909], JAM.policy.p3);
    }
    return this;
  }
  function v2174(a$$908) {
    function v2173(b$$807) {
      var c$$663;
      for (c$$663 in a$$908) {
        if (a$$908[c$$663] !== JAM.call(b$$807.get, b$$807, [c$$663], JAM.policy.p3)) {
          return!1;
        }
      }
      return!0;
    }
    var v2348;
    if (JAM.call(f$$232.isEmpty, f$$232, [a$$908], JAM.policy.p3)) {
      v2348 = [];
    } else {
      v2348 = JAM.call(this.filter, this, [v2173], JAM.policy.p3);
    }
    return v2348;
  }
  function v2172(a$$907) {
    return this.models[a$$907];
  }
  function v2171(a$$906) {
    var v2350 = a$$906;
    if (v2350) {
      var v9045 = this._byCid;
      var v14917 = a$$906.cid;
      if (!v14917) {
        v14917 = a$$906;
      }
      v2350 = v9045[v14917];
    }
    return v2350;
  }
  function v2170(a$$905) {
    var v2351;
    if (null == a$$905) {
      v2351 = void 0;
    } else {
      var v9047 = this._byId;
      var v14918;
      if (null != a$$905.id) {
        v14918 = a$$905.id;
      } else {
        v14918 = a$$905;
      }
      v2351 = v9047[v14918];
    }
    return v2351;
  }
  function v2169(a$$904) {
    var b$$806 = JAM.call(this.at, this, [0], JAM.policy.p3);
    JAM.call(this.remove, this, [b$$806, a$$904], JAM.policy.p3);
    return b$$806;
  }
  function v2168(a$$903, b$$805) {
    a$$903 = JAM.call(this._prepareModel, this, [a$$903, b$$805], JAM.policy.p3);
    JAM.call(this.add, this, [a$$903, JAM.call(f$$232.extend, f$$232, [{at:0}, b$$805], JAM.policy.p3)], JAM.policy.p3);
    return a$$903;
  }
  function v2167(a$$902) {
    var b$$804 = JAM.call(this.at, this, [this.length - 1], JAM.policy.p3);
    JAM.call(this.remove, this, [b$$804, a$$902], JAM.policy.p3);
    return b$$804;
  }
  function v2166(a$$901, b$$803) {
    a$$901 = JAM.call(this._prepareModel, this, [a$$901, b$$803], JAM.policy.p3);
    JAM.call(this.add, this, [a$$901, b$$803], JAM.policy.p3);
    return a$$901;
  }
  function v2165(a$$900, b$$802) {
    var c$$662;
    var d$$496;
    var e$$421;
    var g$$238;
    if (!b$$802) {
      b$$802 = {};
    }
    var v2354;
    if (JAM.call(f$$232.isArray, f$$232, [a$$900], JAM.policy.p3)) {
      v2354 = JAM.call(a$$900.slice, a$$900, [], JAM.policy.p3);
    } else {
      v2354 = [a$$900];
    }
    a$$900 = v2354;
    c$$662 = 0;
    d$$496 = a$$900.length;
    var v2356 = c$$662 < d$$496;
    for (;v2356;) {
      var v9054 = JAM.call(this.getByCid, this, [a$$900[c$$662]], JAM.policy.p3);
      if (!v9054) {
        v9054 = JAM.call(this.get, this, [a$$900[c$$662]], JAM.policy.p3);
      }
      if (g$$238 = v9054) {
        delete this._byId[g$$238.id];
        delete this._byCid[g$$238.cid];
        e$$421 = JAM.call(this.indexOf, this, [g$$238], JAM.policy.p3);
        var v24043 = this.models;
        JAM.call(v24043.splice, v24043, [e$$421, 1], JAM.policy.p3);
        this.length--;
        var v14922 = b$$802.silent;
        if (!v14922) {
          b$$802.index = e$$421;
          JAM.call(g$$238.trigger, g$$238, ["remove", g$$238, this, b$$802], JAM.policy.p3);
        }
        JAM.call(this._removeReference, this, [g$$238], JAM.policy.p3);
      }
      c$$662++;
      v2356 = c$$662 < d$$496;
    }
    return this;
  }
  function v2164(a$$899, b$$801) {
    var c$$661;
    var d$$495;
    var e$$420;
    var g$$237;
    var i$$243;
    var j$$130 = {};
    var k$$94 = {};
    var l$$98 = [];
    if (!b$$801) {
      b$$801 = {};
    }
    var v2357;
    if (JAM.call(f$$232.isArray, f$$232, [a$$899], JAM.policy.p3)) {
      v2357 = JAM.call(a$$899.slice, a$$899, [], JAM.policy.p3);
    } else {
      v2357 = [a$$899];
    }
    a$$899 = v2357;
    c$$661 = 0;
    d$$495 = a$$899.length;
    var v2360 = c$$661 < d$$495;
    for (;v2360;) {
      var v30924 = JAM.call(this._prepareModel, this, [a$$899[c$$661], b$$801], JAM.policy.p3);
      if (!(e$$420 = JAM.set(a$$899, c$$661, v30924, JAM.policy.p2))) {
        throw Error("Can't add an invalid model to a collection");
      }
      g$$237 = e$$420.cid;
      i$$243 = e$$420.id;
      var v2359;
      var v19358 = j$$130[g$$237];
      if (!v19358) {
        v19358 = this._byCid[g$$237];
      }
      var v14924 = v19358;
      if (!v14924) {
        var v19359 = null != i$$243;
        if (v19359) {
          var v24046 = k$$94[i$$243];
          if (!v24046) {
            v24046 = this._byId[i$$243];
          }
          v19359 = v24046;
        }
        v14924 = v19359;
      }
      if (v14924) {
        v2359 = JAM.call(l$$98.push, l$$98, [c$$661], JAM.policy.p3);
      } else {
        v2359 = JAM.set(j$$130, g$$237, JAM.set(k$$94, i$$243, e$$420, JAM.policy.p2), JAM.policy.p2);
      }
      v2359;
      c$$661++;
      v2360 = c$$661 < d$$495;
    }
    c$$661 = l$$98.length;
    var v2362 = c$$661;
    c$$661 = c$$661 - 1;
    for (;v2362;) {
      JAM.call(a$$899.splice, a$$899, [l$$98[c$$661], 1], JAM.policy.p3);
      v2362 = c$$661;
      c$$661 = c$$661 - 1;
    }
    c$$661 = 0;
    d$$495 = a$$899.length;
    var v2363 = c$$661 < d$$495;
    for (;v2363;) {
      var v14925 = e$$420 = a$$899[c$$661];
      JAM.call(v14925.on, v14925, ["all", this._onModelEvent, this], JAM.policy.p3);
      JAM.set(this._byCid, e$$420.cid, e$$420, JAM.policy.p2);
      var v9059 = null != e$$420.id;
      if (v9059) {
        JAM.set(this._byId, e$$420.id, e$$420, JAM.policy.p2);
      }
      c$$661++;
      v2363 = c$$661 < d$$495;
    }
    this.length = this.length + d$$495;
    var v2364 = this.models;
    var v19361;
    if (null != b$$801.at) {
      v19361 = b$$801.at;
    } else {
      v19361 = this.models.length;
    }
    var v9061 = [v19361, 0];
    JAM.call(A$$7.apply, A$$7, [v2364, JAM.call(v9061.concat, v9061, [a$$899], JAM.policy.p3)], JAM.policy.p3);
    var v2366 = this.comparator;
    if (v2366) {
      JAM.call(this.sort, this, [{silent:!0}], JAM.policy.p3);
    }
    if (b$$801.silent) {
      return this;
    }
    c$$661 = 0;
    d$$495 = this.models.length;
    var v2370 = c$$661 < d$$495;
    for (;v2370;) {
      if (j$$130[(e$$420 = this.models[c$$661]).cid]) {
        b$$801.index = c$$661;
        JAM.call(e$$420.trigger, e$$420, ["add", e$$420, this, b$$801], JAM.policy.p3);
      }
      c$$661++;
      v2370 = c$$661 < d$$495;
    }
    return this;
  }
  function v2163(a$$898) {
    function v2162(b$$800) {
      return JAM.call(b$$800.toJSON, b$$800, [a$$898], JAM.policy.p3);
    }
    return JAM.call(this.map, this, [v2162], JAM.policy.p3);
  }
  function v2161() {
    return;
  }
  function v2160(a$$897, b$$799) {
    if (!b$$799) {
      b$$799 = {};
    }
    var v2371 = b$$799.model;
    if (v2371) {
      this.model = b$$799.model;
    }
    var v2372 = b$$799.comparator;
    if (v2372) {
      this.comparator = b$$799.comparator;
    }
    JAM.call(this._reset, this, [], JAM.policy.p3);
    var v2373 = this.initialize;
    JAM.call(v2373.apply, v2373, [this, arguments], JAM.policy.p3);
    if (a$$897) {
      JAM.call(this.reset, this, [a$$897, {silent:!0, parse:b$$799.parse}], JAM.policy.p3);
    }
    return;
  }
  function v2159(a$$896, b$$798) {
    var v9066 = b$$798.silent;
    if (!v9066) {
      v9066 = !this.validate;
    }
    if (v9066) {
      return!0;
    }
    a$$896 = JAM.call(f$$232.extend, f$$232, [{}, this.attributes, a$$896], JAM.policy.p3);
    var c$$660 = JAM.call(this.validate, this, [a$$896, b$$798], JAM.policy.p3);
    if (!c$$660) {
      return!0;
    }
    var v2377;
    var v14939 = b$$798;
    if (v14939) {
      v14939 = b$$798.error;
    }
    if (v14939) {
      v2377 = JAM.call(b$$798.error, b$$798, [this, c$$660, b$$798], JAM.policy.p3);
    } else {
      v2377 = JAM.call(this.trigger, this, ["error", this, c$$660, b$$798], JAM.policy.p3);
    }
    v2377;
    return!1;
  }
  function v2158() {
    return!JAM.call(this.validate, this, [this.attributes], JAM.policy.p3);
  }
  function v2157() {
    return JAM.call(f$$232.clone, f$$232, [this._previousAttributes], JAM.policy.p3);
  }
  function v2156(a$$895) {
    var v2380;
    var v14940 = !arguments.length;
    if (!v14940) {
      v14940 = !this._previousAttributes;
    }
    if (v14940) {
      v2380 = null;
    } else {
      v2380 = this._previousAttributes[a$$895];
    }
    return v2380;
  }
  function v2155(a$$894) {
    if (!a$$894) {
      var v2381;
      if (JAM.call(this.hasChanged, this, [], JAM.policy.p3)) {
        v2381 = JAM.call(f$$232.clone, f$$232, [this.changed], JAM.policy.p3);
      } else {
        v2381 = !1;
      }
      return v2381;
    }
    var b$$797;
    var c$$659 = !1;
    var d$$494 = this._previousAttributes;
    var e$$419;
    for (e$$419 in a$$894) {
      if (!JAM.call(f$$232.isEqual, f$$232, [d$$494[e$$419], b$$797 = a$$894[e$$419]], JAM.policy.p3)) {
        var v9074 = c$$659;
        if (!v9074) {
          v9074 = c$$659 = {};
        }
        JAM.set(v9074, e$$419, b$$797, JAM.policy.p2);
      }
    }
    return c$$659;
  }
  function v2154(a$$893) {
    var v2385;
    if (!arguments.length) {
      v2385 = !JAM.call(f$$232.isEmpty, f$$232, [this.changed], JAM.policy.p3);
    } else {
      v2385 = JAM.call(f$$232.has, f$$232, [this.changed, a$$893], JAM.policy.p3);
    }
    return v2385;
  }
  function v2153(a$$892) {
    if (!a$$892) {
      a$$892 = {};
    }
    var b$$796 = this._changing;
    this._changing = !0;
    var c$$658;
    for (c$$658 in this._silent) {
      JAM.set(this._pending, c$$658, !0, JAM.policy.p2);
    }
    var d$$493 = JAM.call(f$$232.extend, f$$232, [{}, a$$892.changes, this._silent], JAM.policy.p3);
    this._silent = {};
    for (c$$658 in d$$493) {
      JAM.call(this.trigger, this, ["change:" + c$$658, this, JAM.call(this.get, this, [c$$658], JAM.policy.p3), a$$892], JAM.policy.p3);
    }
    if (b$$796) {
      return this;
    }
    var v2395 = !JAM.call(f$$232.isEmpty, f$$232, [this._pending], JAM.policy.p3);
    for (;v2395;) {
      this._pending = {};
      JAM.call(this.trigger, this, ["change", this, a$$892], JAM.policy.p3);
      for (c$$658 in this.changed) {
        var v9080 = !this._pending[c$$658];
        if (v9080) {
          v9080 = !this._silent[c$$658];
        }
        var v2392 = v9080;
        if (v2392) {
          delete this.changed[c$$658];
        }
      }
      var v30925 = JAM.call(f$$232.clone, f$$232, [this.attributes], JAM.policy.p3);
      this._previousAttributes = v30925;
      v2395 = !JAM.call(f$$232.isEmpty, f$$232, [this._pending], JAM.policy.p3);
    }
    this._changing = !1;
    return this;
  }
  function v2152() {
    return null == this.id;
  }
  function v2151() {
    return JAM.new(this.constructor, [this.attributes]);
  }
  function v2150(a$$891) {
    return a$$891;
  }
  function v2149() {
    var v9083 = n$$110(this, "urlRoot");
    if (!v9083) {
      v9083 = n$$110(this.collection, "url");
    }
    var v2399 = v9083;
    if (!v2399) {
      v2399 = t$$33();
    }
    var a$$890 = v2399;
    var v2400;
    if (JAM.call(this.isNew, this, [], JAM.policy.p3)) {
      v2400 = a$$890;
    } else {
      var v19368;
      if ("/" == JAM.call(a$$890.charAt, a$$890, [a$$890.length - 1], JAM.policy.p3)) {
        v19368 = "";
      } else {
        v19368 = "/";
      }
      v2400 = a$$890 + v19368 + encodeURIComponent(this.id);
    }
    return v2400;
  }
  function v2148(a$$889) {
    function v2147(e$$418) {
      var v2401 = a$$889.wait;
      if (v2401) {
        d$$492();
      }
      var v2402;
      if (c$$657) {
        v2402 = JAM.call(c$$657, null, [b$$795, e$$418], JAM.policy.p3);
      } else {
        v2402 = JAM.call(b$$795.trigger, b$$795, ["sync", b$$795, e$$418, a$$889], JAM.policy.p3);
      }
      v2402;
      return;
    }
    function d$$492() {
      JAM.call(b$$795.trigger, b$$795, ["destroy", b$$795, b$$795.collection, a$$889], JAM.policy.p3);
      return;
    }
    var v2404;
    if (a$$889) {
      v2404 = JAM.call(f$$232.clone, f$$232, [a$$889], JAM.policy.p3);
    } else {
      v2404 = {};
    }
    a$$889 = v2404;
    var b$$795 = this;
    var c$$657 = a$$889.success;
    if (JAM.call(this.isNew, this, [], JAM.policy.p3)) {
      d$$492();
      return!1;
    }
    a$$889.success = v2147;
    var v2406 = a$$889;
    var v30926 = JAM.call(g$$232.wrapError, g$$232, [a$$889.error, b$$795, a$$889], JAM.policy.p3);
    v2406.error = v30926;
    var v9089 = this.sync;
    if (!v9089) {
      v9089 = g$$232.sync;
    }
    var v2407 = v9089;
    var e$$417 = JAM.call(v2407.call, v2407, [this, "delete", this, a$$889], JAM.policy.p3);
    var v2408 = a$$889.wait;
    if (!v2408) {
      d$$492();
    }
    return e$$417;
  }
  function v2146(a$$887, b$$793, c$$656) {
    function v2145(a$$888, b$$794, e$$416) {
      b$$794 = JAM.call(h$$194.parse, h$$194, [a$$888, e$$416], JAM.policy.p3);
      if (c$$656.wait) {
        delete c$$656.wait;
        b$$794 = JAM.call(f$$232.extend, f$$232, [d$$491 || {}, b$$794], JAM.policy.p3);
      }
      if (!JAM.call(h$$194.set, h$$194, [b$$794, c$$656], JAM.policy.p3)) {
        return false;
      }
      var v2412;
      if (i$$242) {
        v2412 = JAM.call(i$$242, null, [h$$194, a$$888], JAM.policy.p3);
      } else {
        v2412 = JAM.call(h$$194.trigger, h$$194, ["sync", h$$194, a$$888, c$$656], JAM.policy.p3);
      }
      v2412;
      return;
    }
    var d$$491;
    var e$$415;
    var v2413;
    var v14955 = JAM.call(f$$232.isObject, f$$232, [a$$887], JAM.policy.p3);
    if (!v14955) {
      v14955 = null == a$$887;
    }
    if (v14955) {
      d$$491 = a$$887;
      v2413 = c$$656 = b$$793;
    } else {
      d$$491 = {};
      v2413 = JAM.set(d$$491, a$$887, b$$793, JAM.policy.p2);
    }
    v2413;
    var v2414;
    if (c$$656) {
      v2414 = JAM.call(f$$232.clone, f$$232, [c$$656], JAM.policy.p3);
    } else {
      v2414 = {};
    }
    c$$656 = v2414;
    if (c$$656.wait) {
      if (!JAM.call(this._validate, this, [d$$491, c$$656], JAM.policy.p3)) {
        return!1;
      }
      e$$415 = JAM.call(f$$232.clone, f$$232, [this.attributes], JAM.policy.p3);
    }
    a$$887 = JAM.call(f$$232.extend, f$$232, [{}, c$$656, {silent:!0}], JAM.policy.p3);
    var v9095 = d$$491;
    if (v9095) {
      var v24050;
      if (c$$656.wait) {
        v24050 = a$$887;
      } else {
        v24050 = c$$656;
      }
      v9095 = !JAM.call(this.set, this, [d$$491, v24050], JAM.policy.p3);
    }
    if (v9095) {
      return!1;
    }
    var h$$194 = this;
    var i$$242 = c$$656.success;
    c$$656.success = v2145;
    var v2420 = c$$656;
    var v30927 = JAM.call(g$$232.wrapError, g$$232, [c$$656.error, h$$194, c$$656], JAM.policy.p3);
    v2420.error = v30927;
    var v2421;
    if (JAM.call(this.isNew, this, [], JAM.policy.p3)) {
      v2421 = "create";
    } else {
      v2421 = "update";
    }
    b$$793 = v2421;
    var v9098 = this.sync;
    if (!v9098) {
      v9098 = g$$232.sync;
    }
    var v2422 = v9098;
    b$$793 = JAM.call(v2422.call, v2422, [this, b$$793, this, c$$656], JAM.policy.p3);
    var v2423 = c$$656.wait;
    if (v2423) {
      JAM.call(this.set, this, [e$$415, a$$887], JAM.policy.p3);
    }
    return b$$793;
  }
  function v2144(a$$886) {
    function v2143(d$$490, e$$414, f$$235) {
      if (!JAM.call(b$$792.set, b$$792, [JAM.call(b$$792.parse, b$$792, [d$$490, f$$235], JAM.policy.p3), a$$886], JAM.policy.p3)) {
        return!1;
      }
      if (c$$655) {
        JAM.call(c$$655, null, [b$$792, d$$490], JAM.policy.p3);
      }
      return;
    }
    var v2425;
    if (a$$886) {
      v2425 = JAM.call(f$$232.clone, f$$232, [a$$886], JAM.policy.p3);
    } else {
      v2425 = {};
    }
    a$$886 = v2425;
    var b$$792 = this;
    var c$$655 = a$$886.success;
    a$$886.success = v2143;
    var v2426 = a$$886;
    var v30928 = JAM.call(g$$232.wrapError, g$$232, [a$$886.error, b$$792, a$$886], JAM.policy.p3);
    v2426.error = v30928;
    var v9101 = this.sync;
    if (!v9101) {
      v9101 = g$$232.sync;
    }
    var v2427 = v9101;
    return JAM.call(v2427.call, v2427, [this, "read", this, a$$886], JAM.policy.p3);
  }
  function v2142(a$$885) {
    var v9102 = a$$885;
    if (!v9102) {
      v9102 = a$$885 = {};
    }
    v9102.unset = !0;
    return JAM.call(this.set, this, [JAM.call(f$$232.clone, f$$232, [this.attributes], JAM.policy.p3), a$$885], JAM.policy.p3);
  }
  function v2141(a$$884, b$$791) {
    var v9104 = b$$791;
    if (!v9104) {
      v9104 = b$$791 = {};
    }
    v9104.unset = !0;
    return JAM.call(this.set, this, [a$$884, null, b$$791], JAM.policy.p3);
  }
  function v2140(a$$883, b$$790, c$$654) {
    var d$$489;
    var e$$413;
    var v2431;
    var v14962 = JAM.call(f$$232.isObject, f$$232, [a$$883], JAM.policy.p3);
    if (!v14962) {
      v14962 = null == a$$883;
    }
    if (v14962) {
      d$$489 = a$$883;
      v2431 = c$$654 = b$$790;
    } else {
      d$$489 = {};
      v2431 = JAM.set(d$$489, a$$883, b$$790, JAM.policy.p2);
    }
    v2431;
    if (!c$$654) {
      c$$654 = {};
    }
    if (!d$$489) {
      return this;
    }
    var v2433 = d$$489 instanceof o$$42;
    if (v2433) {
      d$$489 = d$$489.attributes;
    }
    if (c$$654.unset) {
      for (e$$413 in d$$489) {
        JAM.set(d$$489, e$$413, void 0, JAM.policy.p2);
      }
    }
    if (!JAM.call(this._validate, this, [d$$489, c$$654], JAM.policy.p3)) {
      return!1;
    }
    var v2436 = this.idAttribute in d$$489;
    if (v2436) {
      this.id = d$$489[this.idAttribute];
    }
    b$$790 = c$$654.changes = {};
    var h$$193 = this.attributes;
    var g$$236 = this._escapedAttributes;
    var v2437 = this._previousAttributes;
    if (!v2437) {
      v2437 = {};
    }
    var j$$129 = v2437;
    for (e$$413 in d$$489) {
      a$$883 = d$$489[e$$413];
      var v9111 = !JAM.call(f$$232.isEqual, f$$232, [h$$193[e$$413], a$$883], JAM.policy.p3);
      if (!v9111) {
        var v14964 = c$$654.unset;
        if (v14964) {
          v14964 = JAM.call(f$$232.has, f$$232, [h$$193, e$$413], JAM.policy.p3);
        }
        v9111 = v14964;
      }
      if (v9111) {
        delete g$$236[e$$413];
        var v14966;
        if (c$$654.silent) {
          v14966 = this._silent;
        } else {
          v14966 = b$$790;
        }
        JAM.set(v14966, e$$413, !0, JAM.policy.p2);
      }
      var v2439;
      if (c$$654.unset) {
        v2439 = delete h$$193[e$$413];
      } else {
        v2439 = JAM.set(h$$193, e$$413, a$$883, JAM.policy.p2);
      }
      v2439;
      var v2440;
      var v14967 = !JAM.call(f$$232.isEqual, f$$232, [j$$129[e$$413], a$$883], JAM.policy.p3);
      if (!v14967) {
        v14967 = JAM.call(f$$232.has, f$$232, [h$$193, e$$413], JAM.policy.p3) != JAM.call(f$$232.has, f$$232, [j$$129, e$$413], JAM.policy.p3);
      }
      if (v14967) {
        JAM.set(this.changed, e$$413, a$$883, JAM.policy.p2);
        var v14969 = c$$654.silent;
        if (!v14969) {
          v14969 = JAM.set(this._pending, e$$413, !0, JAM.policy.p2);
        }
        v2440 = v14969;
      } else {
        delete this.changed[e$$413];
        v2440 = delete this._pending[e$$413];
      }
      v2440;
    }
    var v2441 = c$$654.silent;
    if (!v2441) {
      JAM.call(this.change, this, [c$$654], JAM.policy.p3);
    }
    return this;
  }
  function v2139(a$$882) {
    return null != JAM.call(this.get, this, [a$$882], JAM.policy.p3);
  }
  function v2138(a$$881) {
    var b$$789;
    if (b$$789 = this._escapedAttributes[a$$881]) {
      return b$$789;
    }
    b$$789 = JAM.call(this.get, this, [a$$881], JAM.policy.p3);
    var v2444 = this._escapedAttributes;
    var v14972;
    if (null == b$$789) {
      v14972 = "";
    } else {
      v14972 = "" + b$$789;
    }
    var v30929 = JAM.call(f$$232.escape, f$$232, [v14972], JAM.policy.p3);
    return JAM.set(v2444, a$$881, v30929, JAM.policy.p2);
  }
  function v2137(a$$880) {
    return this.attributes[a$$880];
  }
  function v2136() {
    return JAM.call(f$$232.clone, f$$232, [this.attributes], JAM.policy.p3);
  }
  function v2135() {
    return;
  }
  function v2134(a$$879, b$$788) {
    var c$$653;
    if (!a$$879) {
      a$$879 = {};
    }
    var v9119 = b$$788;
    if (v9119) {
      v9119 = b$$788.parse;
    }
    var v2447 = v9119;
    if (v2447) {
      a$$879 = JAM.call(this.parse, this, [a$$879], JAM.policy.p3);
    }
    if (c$$653 = n$$110(this, "defaults")) {
      a$$879 = JAM.call(f$$232.extend, f$$232, [{}, c$$653, a$$879], JAM.policy.p3);
    }
    var v9120 = b$$788;
    if (v9120) {
      v9120 = b$$788.collection;
    }
    var v2449 = v9120;
    if (v2449) {
      this.collection = b$$788.collection;
    }
    this.attributes = {};
    this._escapedAttributes = {};
    var v30930 = JAM.call(f$$232.uniqueId, f$$232, ["c"], JAM.policy.p3);
    this.cid = v30930;
    this.changed = {};
    this._silent = {};
    this._pending = {};
    JAM.call(this.set, this, [a$$879, {silent:!0}], JAM.policy.p3);
    this.changed = {};
    this._silent = {};
    this._pending = {};
    var v30931 = JAM.call(f$$232.clone, f$$232, [this.attributes], JAM.policy.p3);
    this._previousAttributes = v30931;
    var v2452 = this.initialize;
    JAM.call(v2452.apply, v2452, [this, arguments], JAM.policy.p3);
    return;
  }
  function v2133(a$$878) {
    var b$$787;
    var c$$652;
    var d$$488;
    var e$$412;
    var f$$234;
    var g$$235;
    if (!(d$$488 = this._callbacks)) {
      return this;
    }
    f$$234 = d$$488.all;
    a$$878 = JAM.call(a$$878.split, a$$878, [p$$61], JAM.policy.p3);
    g$$235 = JAM.call(z$$11.call, z$$11, [arguments, 1], JAM.policy.p3);
    var v2463 = b$$787 = JAM.call(a$$878.shift, a$$878, [], JAM.policy.p3);
    for (;v2463;) {
      if (c$$652 = d$$488[b$$787]) {
        e$$412 = c$$652.tail;
        var v2456 = (c$$652 = c$$652.next) !== e$$412;
        for (;v2456;) {
          var v2454 = c$$652.callback;
          var v9124 = c$$652.context;
          if (!v9124) {
            v9124 = this;
          }
          JAM.call(v2454.apply, v2454, [v9124, g$$235], JAM.policy.p3);
          v2456 = (c$$652 = c$$652.next) !== e$$412;
        }
      }
      if (c$$652 = f$$234) {
        e$$412 = c$$652.tail;
        var v2458 = [b$$787];
        b$$787 = JAM.call(v2458.concat, v2458, [g$$235], JAM.policy.p3);
        var v2461 = (c$$652 = c$$652.next) !== e$$412;
        for (;v2461;) {
          var v2459 = c$$652.callback;
          var v9127 = c$$652.context;
          if (!v9127) {
            v9127 = this;
          }
          JAM.call(v2459.apply, v2459, [v9127, b$$787], JAM.policy.p3);
          v2461 = (c$$652 = c$$652.next) !== e$$412;
        }
      }
      v2463 = b$$787 = JAM.call(a$$878.shift, a$$878, [], JAM.policy.p3);
    }
    return this;
  }
  function v2132(a$$877, b$$786, c$$651) {
    var d$$487;
    var e$$411;
    var h$$192;
    var g$$234;
    var j$$128;
    var q$$28;
    if (e$$411 = this._callbacks) {
      var v14975 = !a$$877;
      if (v14975) {
        v14975 = !b$$786;
      }
      var v9129 = v14975;
      if (v9129) {
        v9129 = !c$$651;
      }
      if (v9129) {
        delete this._callbacks;
        return this;
      }
      var v2465;
      if (a$$877) {
        v2465 = JAM.call(a$$877.split, a$$877, [p$$61], JAM.policy.p3);
      } else {
        v2465 = JAM.call(f$$232.keys, f$$232, [e$$411], JAM.policy.p3);
      }
      a$$877 = v2465;
      var v2469 = d$$487 = JAM.call(a$$877.shift, a$$877, [], JAM.policy.p3);
      for (;v2469;) {
        h$$192 = e$$411[d$$487];
        delete e$$411[d$$487];
        var v14976 = h$$192;
        if (v14976) {
          v14976 = b$$786 || c$$651;
        }
        if (v14976) {
          g$$234 = h$$192.tail;
          var v2467 = (h$$192 = h$$192.next) !== g$$234;
          for (;v2467;) {
            j$$128 = h$$192.callback;
            q$$28 = h$$192.context;
            var v19381 = b$$786;
            if (v19381) {
              v19381 = j$$128 !== b$$786;
            }
            var v14977 = v19381;
            if (!v14977) {
              var v19382 = c$$651;
              if (v19382) {
                v19382 = q$$28 !== c$$651;
              }
              v14977 = v19382;
            }
            if (v14977) {
              JAM.call(this.on, this, [d$$487, j$$128, q$$28], JAM.policy.p3);
            }
            v2467 = (h$$192 = h$$192.next) !== g$$234;
          }
        }
        v2469 = d$$487 = JAM.call(a$$877.shift, a$$877, [], JAM.policy.p3);
      }
      return this;
    }
    return;
  }
  function v2131(a$$876, b$$785, c$$650) {
    var d$$486;
    var e$$410;
    var f$$233;
    var g$$233;
    var j$$127;
    if (!b$$785) {
      return this;
    }
    a$$876 = JAM.call(a$$876.split, a$$876, [p$$61], JAM.policy.p3);
    var v2472 = this._callbacks;
    if (!v2472) {
      v2472 = this._callbacks = {};
    }
    d$$486 = v2472;
    var v2473 = e$$410 = JAM.call(a$$876.shift, a$$876, [], JAM.policy.p3);
    for (;v2473;) {
      var v24052;
      if (j$$127 = d$$486[e$$410]) {
        v24052 = j$$127.tail;
      } else {
        v24052 = {};
      }
      f$$233 = v24052;
      f$$233.next = g$$233 = {};
      f$$233.context = c$$650;
      f$$233.callback = b$$785;
      var v14978;
      if (j$$127) {
        v14978 = j$$127.next;
      } else {
        v14978 = f$$233;
      }
      JAM.set(d$$486, e$$410, {tail:g$$233, next:v14978}, JAM.policy.p2);
      v2473 = e$$410 = JAM.call(a$$876.shift, a$$876, [], JAM.policy.p3);
    }
    return this;
  }
  function v2130() {
    l$$97.Backbone = y$$57;
    return this;
  }
  function v2129(a$$875) {
    i$$241 = a$$875;
    return;
  }
  function t$$33() {
    throw Error('A "url" property or function must be specified');
  }
  function n$$110(a$$946, b$$833) {
    var v2474;
    var v14979 = !a$$946;
    if (!v14979) {
      v14979 = !a$$946[b$$833];
    }
    if (v14979) {
      v2474 = null;
    } else {
      var v9134;
      if (JAM.call(f$$232.isFunction, f$$232, [a$$946[b$$833]], JAM.policy.p3)) {
        v9134 = JAM.call(a$$946[b$$833], a$$946, [], JAM.policy.p3);
      } else {
        v9134 = a$$946[b$$833];
      }
      v2474 = v9134;
    }
    return v2474;
  }
  function G$$5(a$$945, b$$832, c$$679) {
    function v2128() {
      JAM.call(a$$945.apply, a$$945, [this, arguments], JAM.policy.p3);
      return;
    }
    var d$$506;
    var v2475;
    var v14981 = b$$832;
    if (v14981) {
      v14981 = JAM.call(b$$832.hasOwnProperty, b$$832, ["constructor"], JAM.policy.p3);
    }
    if (v14981) {
      v2475 = b$$832.constructor;
    } else {
      v2475 = v2128;
    }
    d$$506 = v2475;
    JAM.call(f$$232.extend, f$$232, [d$$506, a$$945], JAM.policy.p3);
    x$$77.prototype = a$$945.prototype;
    var v2476 = d$$506;
    var v30932 = new x$$77;
    v2476.prototype = v30932;
    if (b$$832) {
      JAM.call(f$$232.extend, f$$232, [d$$506.prototype, b$$832], JAM.policy.p3);
    }
    if (c$$679) {
      JAM.call(f$$232.extend, f$$232, [d$$506, c$$679], JAM.policy.p3);
    }
    d$$506.prototype.constructor = d$$506;
    d$$506.__super__ = a$$945.prototype;
    return d$$506;
  }
  function x$$77() {
    return;
  }
  var l$$97 = this;
  var y$$57 = l$$97.Backbone;
  var z$$11 = Array.prototype.slice;
  var A$$7 = Array.prototype.splice;
  var g$$232;
  var v2480;
  if ("undefined" !== typeof exports) {
    v2480 = exports;
  } else {
    v2480 = l$$97.Backbone = {};
  }
  g$$232 = v2480;
  g$$232.VERSION = "0.9.2";
  var f$$232 = l$$97._;
  var v9139 = !f$$232;
  if (v9139) {
    v9139 = "undefined" !== typeof require;
  }
  var v2481 = v9139;
  if (v2481) {
    f$$232 = JAM.call(require, null, ["underscore"], JAM.policy.p3);
  }
  var v9140 = l$$97.jQuery;
  if (!v9140) {
    v9140 = l$$97.Zepto;
  }
  var v2482 = v9140;
  if (!v2482) {
    v2482 = l$$97.ender;
  }
  var i$$241 = v2482;
  g$$232.setDomLibrary = v2129;
  g$$232.noConflict = v2130;
  g$$232.emulateHTTP = !1;
  g$$232.emulateJSON = !1;
  var p$$61 = /\s+/;
  var k$$93 = g$$232.Events = {on:v2131, off:v2132, trigger:v2133};
  k$$93.bind = k$$93.on;
  k$$93.unbind = k$$93.off;
  var o$$42 = g$$232.Model = v2134;
  JAM.call(f$$232.extend, f$$232, [o$$42.prototype, k$$93, {changed:null, _silent:null, _pending:null, idAttribute:"id", initialize:v2135, toJSON:v2136, get:v2137, escape:v2138, has:v2139, set:v2140, unset:v2141, clear:v2142, fetch:v2144, save:v2146, destroy:v2148, url:v2149, parse:v2150, clone:v2151, isNew:v2152, change:v2153, hasChanged:v2154, changedAttributes:v2155, previous:v2156, previousAttributes:v2157, isValid:v2158, _validate:v2159}], JAM.policy.p3);
  var r$$32 = g$$232.Collection = v2160;
  JAM.call(f$$232.extend, f$$232, [r$$32.prototype, k$$93, {model:o$$42, initialize:v2161, toJSON:v2163, add:v2164, remove:v2165, push:v2166, pop:v2167, unshift:v2168, shift:v2169, get:v2170, getByCid:v2171, at:v2172, where:v2174, sort:v2175, pluck:v2177, reset:v2178, fetch:v2180, create:v2182, parse:v2183, chain:v2184, _reset:v2185, _prepareModel:v2186, _removeReference:v2187, _onModelEvent:v2188}], JAM.policy.p3);
  JAM.call(f$$232.each, f$$232, [JAM.call("forEach,each,map,reduce,reduceRight,find,detect,filter,select,reject,every,all,some,any,include,contains,invoke,max,min,sortBy,sortedIndex,toArray,size,first,initial,rest,last,without,indexOf,shuffle,lastIndexOf,isEmpty,groupBy".split, "forEach,each,map,reduce,reduceRight,find,detect,filter,select,reject,every,all,some,any,include,contains,invoke,max,min,sortBy,sortedIndex,toArray,size,first,initial,rest,last,without,indexOf,shuffle,lastIndexOf,isEmpty,groupBy", 
  [","], JAM.policy.p3), v2190], JAM.policy.p3);
  var u$$20 = g$$232.Router = v2191;
  var B$$7 = /:\w+/g;
  var C$$6 = /\*\w+/g;
  var D$$6 = /[-[\]{}()+?.,\\^$|#\s]/g;
  JAM.call(f$$232.extend, f$$232, [u$$20.prototype, k$$93, {initialize:v2192, route:v2194, navigate:v2195, _bindRoutes:v2196, _routeToRegExp:v2197, _extractParameters:v2198}], JAM.policy.p3);
  var m$$64 = g$$232.History = v2199;
  var s$$36 = /^[#\/]/;
  var E$$6 = /msie [\w.]+/;
  m$$64.started = !1;
  JAM.call(f$$232.extend, f$$232, [m$$64.prototype, k$$93, {interval:50, getHash:v2200, getFragment:v2201, start:v2202, stop:v2203, route:v2204, checkUrl:v2205, loadUrl:v2207, navigate:v2208, _updateHash:v2209}], JAM.policy.p3);
  var v$$15 = g$$232.View = v2210;
  var F$$6 = /^(\S+)\s*(.*)$/;
  var w$$21 = JAM.call("model,collection,el,id,attributes,className,tagName".split, "model,collection,el,id,attributes,className,tagName", [","], JAM.policy.p3);
  JAM.call(f$$232.extend, f$$232, [v$$15.prototype, k$$93, {tagName:"div", $:v2211, initialize:v2212, render:v2213, remove:v2214, make:v2215, setElement:v2216, delegateEvents:v2217, undelegateEvents:v2218, _configure:v2219, _ensureElement:v2220}], JAM.policy.p3);
  o$$42.extend = r$$32.extend = u$$20.extend = v$$15.extend = v2221;
  var H$$5 = {create:"POST", update:"PUT", "delete":"DELETE", read:"GET"};
  g$$232.sync = v2223;
  g$$232.wrapError = v2225;
  return;
}
function v2127() {
  function v2126() {
    return this._wrapped;
  }
  function v2125() {
    this._chain = true;
    return this;
  }
  function v2124(a$$874) {
    function v2123() {
      return x$$76(JAM.call(b$$784.apply, b$$784, [this._wrapped, arguments], JAM.policy.p3), this._chain);
    }
    var b$$784 = k$$92[a$$874];
    JAM.set(m$$63.prototype, a$$874, v2123, JAM.policy.p2);
    return;
  }
  function v2122(a$$873) {
    function v2121() {
      var d$$485 = this._wrapped;
      JAM.call(b$$783.apply, b$$783, [d$$485, arguments], JAM.policy.p3);
      var e$$409 = d$$485.length;
      var v14985 = a$$873 == "shift";
      if (!v14985) {
        v14985 = a$$873 == "splice";
      }
      var v9143 = v14985;
      if (v9143) {
        v9143 = e$$409 === 0;
      }
      var v2497 = v9143;
      if (v2497) {
        delete d$$485[0];
      }
      return x$$76(d$$485, this._chain);
    }
    var b$$783 = k$$92[a$$873];
    JAM.set(m$$63.prototype, a$$873, v2121, JAM.policy.p2);
    return;
  }
  function v2120(a$$868) {
    var v2500 = b$$743(a$$868);
    return JAM.call(v2500.chain, v2500, [], JAM.policy.p3);
  }
  function v2119(a$$862, c$$647, d$$484) {
    function v2118(a$$867) {
      return JAM.call(e$$408.call, e$$408, [this, a$$867, b$$743], JAM.policy.p3);
    }
    function v2117(a$$866, b$$782) {
      return "';\n" + w$$20(b$$782) + "\n;__p+='";
    }
    function v2116(a$$865, b$$781) {
      return "'+\n(" + w$$20(b$$781) + ")+\n'";
    }
    function v2115(a$$864, b$$780) {
      return "'+\n_.escape(" + w$$20(b$$780) + ")+\n'";
    }
    function v2114(a$$863) {
      return "\\" + n$$109[a$$863];
    }
    d$$484 = JAM.call(b$$743.defaults, b$$743, [d$$484 || {}, b$$743.templateSettings], JAM.policy.p3);
    var v24053 = JAM.call(a$$862.replace, a$$862, [O$$3, v2114], JAM.policy.p3);
    var v26220 = d$$484.escape;
    if (!v26220) {
      v26220 = u$$19;
    }
    var v19388 = JAM.call(v24053.replace, v24053, [v26220, v2115], JAM.policy.p3);
    var v24055 = d$$484.interpolate;
    if (!v24055) {
      v24055 = u$$19;
    }
    var v14986 = JAM.call(v19388.replace, v19388, [v24055, v2116], JAM.policy.p3);
    var v19390 = d$$484.evaluate;
    if (!v19390) {
      v19390 = u$$19;
    }
    a$$862 = "__p+='" + JAM.call(v14986.replace, v14986, [v19390, v2117], JAM.policy.p3) + "';\n";
    var v2508 = d$$484.variable;
    if (!v2508) {
      a$$862 = "with(obj||{}){\n" + a$$862 + "}\n";
    }
    a$$862 = "var __p='';var print=function(){__p+=Array.prototype.join.call(arguments, '')};\n" + a$$862 + "return __p;\n";
    var v9150 = d$$484.variable;
    if (!v9150) {
      v9150 = "obj";
    }
    var e$$408 = JAM.new(Function, [v9150, "_", a$$862]);
    if (c$$647) {
      return JAM.call(e$$408, null, [c$$647, b$$743], JAM.policy.p3);
    }
    c$$647 = v2118;
    var v24057 = d$$484.variable;
    if (!v24057) {
      v24057 = "obj";
    }
    c$$647.source = "function(" + v24057 + "){\n" + a$$862 + "}";
    return c$$647;
  }
  function v2113(a$$859) {
    var b$$778 = N$$3;
    N$$3 = N$$3 + 1;
    var v2512;
    if (a$$859) {
      v2512 = a$$859 + b$$778;
    } else {
      v2512 = b$$778;
    }
    return v2512;
  }
  function v2112(a$$858) {
    function v2111(c$$646) {
      M$$3(c$$646, JAM.set(b$$743, c$$646, a$$858[c$$646], JAM.policy.p2));
      return;
    }
    JAM.call(j$$125, null, [JAM.call(b$$743.functions, b$$743, [a$$858], JAM.policy.p3), v2111], JAM.policy.p3);
    return;
  }
  function v2110(a$$857, c$$645) {
    if (a$$857 == null) {
      return null;
    }
    var d$$483 = a$$857[c$$645];
    var v2516;
    if (JAM.call(b$$743.isFunction, b$$743, [d$$483], JAM.policy.p3)) {
      v2516 = JAM.call(d$$483.call, d$$483, [a$$857], JAM.policy.p3);
    } else {
      v2516 = d$$483;
    }
    return v2516;
  }
  function v2109(a$$856) {
    var v26223 = "" + a$$856;
    var v24058 = JAM.call(v26223.replace, v26223, [/&/g, "&amp;"], JAM.policy.p3);
    var v19392 = JAM.call(v24058.replace, v24058, [/</g, "&lt;"], JAM.policy.p3);
    var v14990 = JAM.call(v19392.replace, v19392, [/>/g, "&gt;"], JAM.policy.p3);
    var v9153 = JAM.call(v14990.replace, v14990, [/"/g, "&quot;"], JAM.policy.p3);
    var v2517 = JAM.call(v9153.replace, v9153, [/'/g, "&#x27;"], JAM.policy.p3);
    return JAM.call(v2517.replace, v2517, [/\//g, "&#x2F;"], JAM.policy.p3);
  }
  function v2108(a$$855, b$$777, d$$482) {
    var e$$407 = 0;
    var v2518 = e$$407 < a$$855;
    for (;v2518;) {
      JAM.call(b$$777.call, b$$777, [d$$482, e$$407], JAM.policy.p3);
      e$$407++;
      v2518 = e$$407 < a$$855;
    }
    return;
  }
  function v2107(a$$854) {
    return a$$854;
  }
  function v2106() {
    s$$35._ = I$$4;
    return this;
  }
  function v2105(a$$853, b$$776) {
    return JAM.call(K$$3.call, K$$3, [a$$853, b$$776], JAM.policy.p3);
  }
  function v2104(a$$852) {
    return a$$852 === void 0;
  }
  function v2103(a$$851) {
    return a$$851 === null;
  }
  function v2102(a$$850) {
    return JAM.call(l$$96.call, l$$96, [a$$850], JAM.policy.p3) == "[object RegExp]";
  }
  function v2101(a$$849) {
    return JAM.call(l$$96.call, l$$96, [a$$849], JAM.policy.p3) == "[object Date]";
  }
  function v2100(a$$848) {
    var v9154 = a$$848 === true;
    if (!v9154) {
      v9154 = a$$848 === false;
    }
    var v2522 = v9154;
    if (!v2522) {
      v2522 = JAM.call(l$$96.call, l$$96, [a$$848], JAM.policy.p3) == "[object Boolean]";
    }
    return v2522;
  }
  function v2099(a$$847) {
    return a$$847 !== a$$847;
  }
  function v2098(a$$846) {
    var v2523 = JAM.call(b$$743.isNumber, b$$743, [a$$846], JAM.policy.p3);
    if (v2523) {
      v2523 = isFinite(a$$846);
    }
    return v2523;
  }
  function v2097(a$$845) {
    return JAM.call(l$$96.call, l$$96, [a$$845], JAM.policy.p3) == "[object Number]";
  }
  function v2096(a$$844) {
    return JAM.call(l$$96.call, l$$96, [a$$844], JAM.policy.p3) == "[object String]";
  }
  function v2095(a$$843) {
    return JAM.call(l$$96.call, l$$96, [a$$843], JAM.policy.p3) == "[object Function]";
  }
  function v2094(a$$842) {
    var v9157 = !a$$842;
    if (!v9157) {
      v9157 = !JAM.call(b$$743.has, b$$743, [a$$842, "callee"], JAM.policy.p3);
    }
    return!v9157;
  }
  function v2093(a$$841) {
    return JAM.call(l$$96.call, l$$96, [a$$841], JAM.policy.p3) == "[object Arguments]";
  }
  function v2092(a$$840) {
    return a$$840 === Object(a$$840);
  }
  function v2091(a$$839) {
    return JAM.call(l$$96.call, l$$96, [a$$839], JAM.policy.p3) == "[object Array]";
  }
  function v2090(a$$838) {
    var v14994 = a$$838;
    if (v14994) {
      v14994 = a$$838.nodeType == 1;
    }
    return!!v14994;
  }
  function v2089(a$$837) {
    if (a$$837 == null) {
      return true;
    }
    var v9159 = JAM.call(b$$743.isArray, b$$743, [a$$837], JAM.policy.p3);
    if (!v9159) {
      v9159 = JAM.call(b$$743.isString, b$$743, [a$$837], JAM.policy.p3);
    }
    if (v9159) {
      return a$$837.length === 0;
    }
    var c$$644;
    for (c$$644 in a$$837) {
      if (JAM.call(b$$743.has, b$$743, [a$$837, c$$644], JAM.policy.p3)) {
        return false;
      }
    }
    return true;
  }
  function v2088(a$$836, b$$775) {
    return r$$31(a$$836, b$$775, []);
  }
  function v2087(a$$835, b$$774) {
    JAM.call(b$$774, null, [a$$835], JAM.policy.p3);
    return a$$835;
  }
  function v2086(a$$834) {
    var v2536;
    if (!JAM.call(b$$743.isObject, b$$743, [a$$834], JAM.policy.p3)) {
      v2536 = a$$834;
    } else {
      var v9160;
      if (JAM.call(b$$743.isArray, b$$743, [a$$834], JAM.policy.p3)) {
        v9160 = JAM.call(a$$834.slice, a$$834, [], JAM.policy.p3);
      } else {
        v9160 = JAM.call(b$$743.extend, b$$743, [{}, a$$834], JAM.policy.p3);
      }
      v2536 = v9160;
    }
    return v2536;
  }
  function v2085(a$$833) {
    function v2084(b$$773) {
      var d$$481;
      for (d$$481 in b$$773) {
        var v2537 = a$$833[d$$481] == null;
        if (v2537) {
          JAM.set(a$$833, d$$481, b$$773[d$$481], JAM.policy.p2);
        }
      }
      return;
    }
    JAM.call(j$$125, null, [JAM.call(i$$238.call, i$$238, [arguments, 1], JAM.policy.p3), v2084], JAM.policy.p3);
    return a$$833;
  }
  function v2083(a$$832) {
    function v2082(b$$772) {
      var v2539 = b$$772 in a$$832;
      if (v2539) {
        JAM.set(c$$643, b$$772, a$$832[b$$772], JAM.policy.p2);
      }
      return;
    }
    var c$$643 = {};
    JAM.call(j$$125, null, [JAM.call(b$$743.flatten, b$$743, [JAM.call(i$$238.call, i$$238, [arguments, 1], JAM.policy.p3)], JAM.policy.p3), v2082], JAM.policy.p3);
    return c$$643;
  }
  function v2081(a$$831) {
    function v2080(b$$771) {
      var d$$480;
      for (d$$480 in b$$771) {
        JAM.set(a$$831, d$$480, b$$771[d$$480], JAM.policy.p2);
      }
      return;
    }
    JAM.call(j$$125, null, [JAM.call(i$$238.call, i$$238, [arguments, 1], JAM.policy.p3), v2080], JAM.policy.p3);
    return a$$831;
  }
  function v2079(a$$830) {
    var c$$642 = [];
    var d$$479;
    for (d$$479 in a$$830) {
      var v2542 = JAM.call(b$$743.isFunction, b$$743, [a$$830[d$$479]], JAM.policy.p3);
      if (v2542) {
        JAM.call(c$$642.push, c$$642, [d$$479], JAM.policy.p3);
      }
    }
    return JAM.call(c$$642.sort, c$$642, [], JAM.policy.p3);
  }
  function v2078(a$$829) {
    return JAM.call(b$$743.map, b$$743, [a$$829, b$$743.identity], JAM.policy.p3);
  }
  function v2077(a$$828) {
    if (a$$828 !== Object(a$$828)) {
      throw new TypeError("Invalid object");
    }
    var c$$641 = [];
    var d$$478;
    for (d$$478 in a$$828) {
      var v2545 = JAM.call(b$$743.has, b$$743, [a$$828, d$$478], JAM.policy.p3);
      if (v2545) {
        var v9166 = c$$641.length;
        introspect(JAM.policy.p2) {
          c$$641[v9166] = d$$478;
        }
      }
    }
    return c$$641;
  }
  function v2076(a$$827, b$$770) {
    function v2075() {
      if ((a$$827 = a$$827 - 1) < 1) {
        return JAM.call(b$$770.apply, b$$770, [this, arguments], JAM.policy.p3);
      }
      return;
    }
    var v2547;
    if (a$$827 <= 0) {
      v2547 = JAM.call(b$$770, null, [], JAM.policy.p3);
    } else {
      v2547 = v2075;
    }
    return v2547;
  }
  function v2074() {
    function v2073() {
      var b$$769 = arguments;
      var d$$477 = a$$826.length - 1;
      var v2550 = d$$477 >= 0;
      for (;v2550;) {
        var v9169 = a$$826[d$$477];
        b$$769 = [JAM.call(v9169.apply, v9169, [this, b$$769], JAM.policy.p3)];
        d$$477--;
        v2550 = d$$477 >= 0;
      }
      return b$$769[0];
    }
    var a$$826 = arguments;
    return v2073;
  }
  function v2072(a$$825, b$$768) {
    function v2071() {
      var v2551 = [a$$825];
      var d$$476 = JAM.call(v2551.concat, v2551, [JAM.call(i$$238.call, i$$238, [arguments, 0], JAM.policy.p3)], JAM.policy.p3);
      return JAM.call(b$$768.apply, b$$768, [this, d$$476], JAM.policy.p3);
    }
    return v2071;
  }
  function v2070(a$$824) {
    function v2069() {
      if (b$$767) {
        return d$$475;
      }
      b$$767 = true;
      return d$$475 = JAM.call(a$$824.apply, a$$824, [this, arguments], JAM.policy.p3);
    }
    var b$$767 = false;
    var d$$475;
    return v2069;
  }
  function v2068(a$$823, b$$766, d$$474) {
    function v2067() {
      function v2066() {
        e$$406 = null;
        if (!d$$474) {
          JAM.call(a$$823.apply, a$$823, [f$$231, g$$231], JAM.policy.p3);
        }
        return;
      }
      var f$$231 = this;
      var g$$231 = arguments;
      var v9171 = d$$474;
      if (v9171) {
        v9171 = !e$$406;
      }
      var v2553 = v9171;
      if (v2553) {
        JAM.call(a$$823.apply, a$$823, [f$$231, g$$231], JAM.policy.p3);
      }
      clearTimeout(e$$406);
      e$$406 = JAM.call(setTimeout, null, [v2066, b$$766]);
      return;
    }
    var e$$406;
    return v2067;
  }
  function v2065(a$$822, c$$640) {
    function v2064() {
      function v2063() {
        f$$230 = null;
        if (h$$191) {
          JAM.call(a$$822.apply, a$$822, [d$$473, e$$405], JAM.policy.p3);
        }
        JAM.call(j$$126, null, [], JAM.policy.p3);
        return;
      }
      d$$473 = this;
      e$$405 = arguments;
      if (!f$$230) {
        f$$230 = JAM.call(setTimeout, null, [v2063, c$$640]);
      }
      var v2554;
      if (g$$230) {
        v2554 = h$$191 = true;
      } else {
        v2554 = i$$240 = JAM.call(a$$822.apply, a$$822, [d$$473, e$$405], JAM.policy.p3);
      }
      v2554;
      JAM.call(j$$126, null, [], JAM.policy.p3);
      g$$230 = true;
      return i$$240;
    }
    function v2062() {
      h$$191 = g$$230 = false;
      return;
    }
    var d$$473;
    var e$$405;
    var f$$230;
    var g$$230;
    var h$$191;
    var i$$240;
    var j$$126 = JAM.call(b$$743.debounce, b$$743, [v2062, c$$640], JAM.policy.p3);
    return v2064;
  }
  function v2061(a$$821) {
    var v2555 = b$$743.delay;
    var v9173 = [a$$821, 1];
    return JAM.call(v2555.apply, v2555, [b$$743, JAM.call(v9173.concat, v9173, [JAM.call(i$$238.call, i$$238, [arguments, 1], JAM.policy.p3)], JAM.policy.p3)], JAM.policy.p3);
  }
  function v2060(a$$820, b$$765) {
    function v2059() {
      return JAM.call(a$$820.apply, a$$820, [null, d$$472], JAM.policy.p3);
    }
    var d$$472 = JAM.call(i$$238.call, i$$238, [arguments, 2], JAM.policy.p3);
    return JAM.call(setTimeout, null, [v2059, b$$765]);
  }
  function v2058(a$$819, c$$639) {
    function v2057() {
      var e$$404 = JAM.call(c$$639.apply, c$$639, [this, arguments], JAM.policy.p3);
      var v2557;
      if (JAM.call(b$$743.has, b$$743, [d$$471, e$$404], JAM.policy.p3)) {
        v2557 = d$$471[e$$404];
      } else {
        var v9175 = d$$471;
        var v30933 = JAM.call(a$$819.apply, a$$819, [this, arguments], JAM.policy.p3);
        v2557 = JAM.set(v9175, e$$404, v30933, JAM.policy.p2);
      }
      return v2557;
    }
    var d$$471 = {};
    if (!c$$639) {
      c$$639 = b$$743.identity;
    }
    return v2057;
  }
  function v2056(a$$818) {
    function v2055(c$$638) {
      var v2558 = a$$818;
      var v30934 = JAM.call(b$$743.bind, b$$743, [a$$818[c$$638], a$$818], JAM.policy.p3);
      JAM.set(v2558, c$$638, v30934, JAM.policy.p2);
      return;
    }
    var c$$637 = JAM.call(i$$238.call, i$$238, [arguments, 1], JAM.policy.p3);
    var v2559 = c$$637.length == 0;
    if (v2559) {
      c$$637 = JAM.call(b$$743.functions, b$$743, [a$$818], JAM.policy.p3);
    }
    JAM.call(j$$125, null, [c$$637, v2055], JAM.policy.p3);
    return a$$818;
  }
  function v2054(a$$817, c$$636) {
    function v2053() {
      if (!(this instanceof d$$470)) {
        return JAM.call(a$$817.apply, a$$817, [c$$636, JAM.call(e$$403.concat, e$$403, [JAM.call(i$$238.call, i$$238, [arguments], JAM.policy.p3)], JAM.policy.p3)], JAM.policy.p3);
      }
      H$$4.prototype = a$$817.prototype;
      var b$$764 = new H$$4;
      var g$$229 = JAM.call(a$$817.apply, a$$817, [b$$764, JAM.call(e$$403.concat, e$$403, [JAM.call(i$$238.call, i$$238, [arguments], JAM.policy.p3)], JAM.policy.p3)], JAM.policy.p3);
      var v2563;
      if (Object(g$$229) === g$$229) {
        v2563 = g$$229;
      } else {
        v2563 = b$$764;
      }
      return v2563;
    }
    var d$$470;
    var e$$403;
    var v9184 = a$$817.bind === t$$32;
    if (v9184) {
      v9184 = t$$32;
    }
    if (v9184) {
      return JAM.call(t$$32.apply, t$$32, [a$$817, JAM.call(i$$238.call, i$$238, [arguments, 1], JAM.policy.p3)], JAM.policy.p3);
    }
    if (!JAM.call(b$$743.isFunction, b$$743, [a$$817], JAM.policy.p3)) {
      throw new TypeError;
    }
    e$$403 = JAM.call(i$$238.call, i$$238, [arguments, 2], JAM.policy.p3);
    return d$$470 = v2053;
  }
  function v2052(a$$816, b$$763, d$$469) {
    if (arguments.length <= 1) {
      b$$763 = a$$816 || 0;
      a$$816 = 0;
    }
    var v2568 = arguments[2];
    if (!v2568) {
      v2568 = 1;
    }
    d$$469 = v2568;
    var e$$402 = JAM.call(Math.max, Math, [JAM.call(Math.ceil, Math, [(b$$763 - a$$816) / d$$469], JAM.policy.p3), 0], JAM.policy.p3);
    var f$$229 = 0;
    var g$$228 = Array(e$$402);
    var v2571 = f$$229 < e$$402;
    for (;v2571;) {
      var v2570 = f$$229;
      f$$229 = f$$229 + 1;
      introspect(JAM.policy.p2) {
        g$$228[v2570] = a$$816;
      }
      a$$816 = a$$816 + d$$469;
      v2571 = f$$229 < e$$402;
    }
    return g$$228;
  }
  function v2051(a$$815, b$$762) {
    if (a$$815 == null) {
      return-1;
    }
    var v9189 = F$$5;
    if (v9189) {
      v9189 = a$$815.lastIndexOf === F$$5;
    }
    if (v9189) {
      return JAM.call(a$$815.lastIndexOf, a$$815, [b$$762], JAM.policy.p3);
    }
    var d$$468 = a$$815.length;
    var v2575 = d$$468;
    d$$468 = d$$468 - 1;
    for (;v2575;) {
      var v9190 = d$$468 in a$$815;
      if (v9190) {
        v9190 = a$$815[d$$468] === b$$762;
      }
      if (v9190) {
        return d$$468;
      }
      v2575 = d$$468;
      d$$468 = d$$468 - 1;
    }
    return-1;
  }
  function v2050(a$$814, c$$635, d$$467) {
    if (a$$814 == null) {
      return-1;
    }
    var e$$401;
    if (d$$467) {
      d$$467 = JAM.call(b$$743.sortedIndex, b$$743, [a$$814, c$$635], JAM.policy.p3);
      var v2577;
      if (a$$814[d$$467] === c$$635) {
        v2577 = d$$467;
      } else {
        v2577 = -1;
      }
      return v2577;
    }
    var v9192 = q$$27;
    if (v9192) {
      v9192 = a$$814.indexOf === q$$27;
    }
    if (v9192) {
      return JAM.call(a$$814.indexOf, a$$814, [c$$635], JAM.policy.p3);
    }
    d$$467 = 0;
    e$$401 = a$$814.length;
    var v2580 = d$$467 < e$$401;
    for (;v2580;) {
      var v9193 = d$$467 in a$$814;
      if (v9193) {
        v9193 = a$$814[d$$467] === c$$635;
      }
      if (v9193) {
        return d$$467;
      }
      d$$467++;
      v2580 = d$$467 < e$$401;
    }
    return-1;
  }
  function v2049() {
    var a$$813 = JAM.call(i$$238.call, i$$238, [arguments], JAM.policy.p3);
    var c$$634 = JAM.call(b$$743.max, b$$743, [JAM.call(b$$743.pluck, b$$743, [a$$813, "length"], JAM.policy.p3)], JAM.policy.p3);
    var d$$466 = Array(c$$634);
    var e$$400 = 0;
    var v2583 = e$$400 < c$$634;
    for (;v2583;) {
      var v30935 = JAM.call(b$$743.pluck, b$$743, [a$$813, "" + e$$400], JAM.policy.p3);
      introspect(JAM.policy.p2) {
        d$$466[e$$400] = v30935;
      }
      e$$400++;
      v2583 = e$$400 < c$$634;
    }
    return d$$466;
  }
  function v2048(a$$811) {
    function v2047(a$$812) {
      return!JAM.call(b$$743.include, b$$743, [c$$633, a$$812], JAM.policy.p3);
    }
    var c$$633 = JAM.call(b$$743.flatten, b$$743, [JAM.call(i$$238.call, i$$238, [arguments, 1], JAM.policy.p3), true], JAM.policy.p3);
    return JAM.call(b$$743.filter, b$$743, [a$$811, v2047], JAM.policy.p3);
  }
  function v2046(a$$809) {
    function v2045(a$$810) {
      function v2044(c$$632) {
        return JAM.call(b$$743.indexOf, b$$743, [c$$632, a$$810], JAM.policy.p3) >= 0;
      }
      return JAM.call(b$$743.every, b$$743, [c$$631, v2044], JAM.policy.p3);
    }
    var c$$631 = JAM.call(i$$238.call, i$$238, [arguments, 1], JAM.policy.p3);
    return JAM.call(b$$743.filter, b$$743, [JAM.call(b$$743.uniq, b$$743, [a$$809], JAM.policy.p3), v2045], JAM.policy.p3);
  }
  function v2043() {
    return JAM.call(b$$743.uniq, b$$743, [JAM.call(b$$743.flatten, b$$743, [arguments, true], JAM.policy.p3)], JAM.policy.p3);
  }
  function v2042(a$$808, c$$630, d$$464) {
    function v2041(d$$465, g$$227, h$$190) {
      var v9194;
      if (c$$630) {
        var v15006 = JAM.call(b$$743.last, b$$743, [d$$465], JAM.policy.p3) !== g$$227;
        if (!v15006) {
          v15006 = !d$$465.length;
        }
        v9194 = v15006;
      } else {
        v9194 = !JAM.call(b$$743.include, b$$743, [d$$465, g$$227], JAM.policy.p3);
      }
      if (v9194) {
        JAM.call(d$$465.push, d$$465, [g$$227], JAM.policy.p3);
        JAM.call(e$$399.push, e$$399, [a$$808[h$$190]], JAM.policy.p3);
      }
      return d$$465;
    }
    var v2591;
    if (d$$464) {
      v2591 = JAM.call(b$$743.map, b$$743, [a$$808, d$$464], JAM.policy.p3);
    } else {
      v2591 = a$$808;
    }
    d$$464 = v2591;
    var e$$399 = [];
    var v2592 = a$$808.length < 3;
    if (v2592) {
      c$$630 = true;
    }
    JAM.call(b$$743.reduce, b$$743, [d$$464, v2041, []], JAM.policy.p3);
    return e$$399;
  }
  function v2040(a$$807) {
    return JAM.call(b$$743.difference, b$$743, [a$$807, JAM.call(i$$238.call, i$$238, [arguments, 1], JAM.policy.p3)], JAM.policy.p3);
  }
  function v2039(a$$805, c$$629) {
    function v2038(a$$806, e$$398) {
      if (JAM.call(b$$743.isArray, b$$743, [e$$398], JAM.policy.p3)) {
        var v9196;
        if (c$$629) {
          v9196 = e$$398;
        } else {
          v9196 = JAM.call(b$$743.flatten, b$$743, [e$$398], JAM.policy.p3);
        }
        return JAM.call(a$$806.concat, a$$806, [v9196], JAM.policy.p3);
      }
      JAM.set(a$$806, a$$806.length, e$$398, JAM.policy.p2);
      return a$$806;
    }
    return JAM.call(b$$743.reduce, b$$743, [a$$805, v2038, []], JAM.policy.p3);
  }
  function v2037(a$$803) {
    function v2036(a$$804) {
      return!!a$$804;
    }
    return JAM.call(b$$743.filter, b$$743, [a$$803, v2036], JAM.policy.p3);
  }
  function v2035(a$$802, b$$761, d$$463) {
    var v9197;
    var v19397 = b$$761 == null;
    if (!v19397) {
      v19397 = d$$463;
    }
    if (v19397) {
      v9197 = 1;
    } else {
      v9197 = b$$761;
    }
    return JAM.call(i$$238.call, i$$238, [a$$802, v9197], JAM.policy.p3);
  }
  function v2034(a$$801, b$$760, d$$462) {
    var v2599;
    var v15009 = b$$760 != null;
    if (v15009) {
      v15009 = !d$$462;
    }
    if (v15009) {
      v2599 = JAM.call(i$$238.call, i$$238, [a$$801, JAM.call(Math.max, Math, [a$$801.length - b$$760, 0], JAM.policy.p3)], JAM.policy.p3);
    } else {
      v2599 = a$$801[a$$801.length - 1];
    }
    return v2599;
  }
  function v2033(a$$800, b$$759, d$$461) {
    var v9201 = a$$800.length;
    var v15012;
    var v24060 = b$$759 == null;
    if (!v24060) {
      v24060 = d$$461;
    }
    if (v24060) {
      v15012 = 1;
    } else {
      v15012 = b$$759;
    }
    return JAM.call(i$$238.call, i$$238, [a$$800, 0, v9201 - v15012], JAM.policy.p3);
  }
  function v2032(a$$799, b$$758, d$$460) {
    var v2601;
    var v15013 = b$$758 != null;
    if (v15013) {
      v15013 = !d$$460;
    }
    if (v15013) {
      v2601 = JAM.call(i$$238.call, i$$238, [a$$799, 0, b$$758], JAM.policy.p3);
    } else {
      v2601 = a$$799[0];
    }
    return v2601;
  }
  function v2031(a$$798) {
    var v2602;
    if (JAM.call(b$$743.isArray, b$$743, [a$$798], JAM.policy.p3)) {
      v2602 = a$$798.length;
    } else {
      v2602 = JAM.call(b$$743.keys, b$$743, [a$$798], JAM.policy.p3).length;
    }
    return v2602;
  }
  function v2030(a$$797) {
    var v2603;
    if (!a$$797) {
      v2603 = [];
    } else {
      var v9206;
      var v19400 = JAM.call(b$$743.isArray, b$$743, [a$$797], JAM.policy.p3);
      if (!v19400) {
        v19400 = JAM.call(b$$743.isArguments, b$$743, [a$$797], JAM.policy.p3);
      }
      if (v19400) {
        v9206 = JAM.call(i$$238.call, i$$238, [a$$797], JAM.policy.p3);
      } else {
        var v15014;
        var v24062 = a$$797.toArray;
        if (v24062) {
          v24062 = JAM.call(b$$743.isFunction, b$$743, [a$$797.toArray], JAM.policy.p3);
        }
        if (v24062) {
          v15014 = JAM.call(a$$797.toArray, a$$797, [], JAM.policy.p3);
        } else {
          v15014 = JAM.call(b$$743.values, b$$743, [a$$797], JAM.policy.p3);
        }
        v9206 = v15014;
      }
      v2603 = v9206;
    }
    return v2603;
  }
  function v2029(a$$796, c$$628, d$$459) {
    if (!d$$459) {
      d$$459 = b$$743.identity;
    }
    var e$$397 = 0;
    var f$$228 = a$$796.length;
    var v2606 = e$$397 < f$$228;
    for (;v2606;) {
      var g$$226 = e$$397 + f$$228 >> 1;
      var v2605;
      if (JAM.call(d$$459, null, [a$$796[g$$226]], JAM.policy.p3) < JAM.call(d$$459, null, [c$$628], JAM.policy.p3)) {
        v2605 = e$$397 = g$$226 + 1;
      } else {
        v2605 = f$$228 = g$$226;
      }
      v2605;
      v2606 = e$$397 < f$$228;
    }
    return e$$397;
  }
  function v2028(a$$793, c$$626) {
    function v2027(a$$795, b$$757) {
      var c$$627 = JAM.call(e$$396, null, [a$$795, b$$757], JAM.policy.p3);
      var v9210 = d$$458[c$$627];
      if (!v9210) {
        v9210 = JAM.set(d$$458, c$$627, [], JAM.policy.p2);
      }
      var v2607 = v9210;
      JAM.call(v2607.push, v2607, [a$$795], JAM.policy.p3);
      return;
    }
    function v2026(a$$794) {
      return a$$794[c$$626];
    }
    var d$$458 = {};
    var v2608;
    if (JAM.call(b$$743.isFunction, b$$743, [c$$626], JAM.policy.p3)) {
      v2608 = c$$626;
    } else {
      v2608 = v2026;
    }
    var e$$396 = v2608;
    JAM.call(j$$125, null, [a$$793, v2027], JAM.policy.p3);
    return d$$458;
  }
  function v2025(a$$789, c$$623, d$$456) {
    function v2024(a$$792, b$$756) {
      var c$$625 = a$$792.criteria;
      var d$$457 = b$$756.criteria;
      var v2609;
      if (c$$625 === void 0) {
        v2609 = 1;
      } else {
        var v9212;
        if (d$$457 === void 0) {
          v9212 = -1;
        } else {
          var v15020;
          if (c$$625 < d$$457) {
            v15020 = -1;
          } else {
            var v19404;
            if (c$$625 > d$$457) {
              v19404 = 1;
            } else {
              v19404 = 0;
            }
            v15020 = v19404;
          }
          v9212 = v15020;
        }
        v2609 = v9212;
      }
      return v2609;
    }
    function v2023(a$$791, b$$755, c$$624) {
      return{value:a$$791, criteria:JAM.call(e$$395.call, e$$395, [d$$456, a$$791, b$$755, c$$624], JAM.policy.p3)};
    }
    function v2022(a$$790) {
      return a$$790[c$$623];
    }
    var v2611;
    if (JAM.call(b$$743.isFunction, b$$743, [c$$623], JAM.policy.p3)) {
      v2611 = c$$623;
    } else {
      v2611 = v2022;
    }
    var e$$395 = v2611;
    var v9215 = JAM.call(b$$743.map, b$$743, [a$$789, v2023], JAM.policy.p3);
    return JAM.call(b$$743.pluck, b$$743, [JAM.call(v9215.sort, v9215, [v2024], JAM.policy.p3), "value"], JAM.policy.p3);
  }
  function v2021(a$$787) {
    function v2020(a$$788, f$$227) {
      d$$455 = JAM.call(Math.floor, Math, [JAM.call(Math.random, Math, [], JAM.policy.p3) * (f$$227 + 1)], JAM.policy.p3);
      JAM.set(b$$754, f$$227, b$$754[d$$455], JAM.policy.p2);
      introspect(JAM.policy.p2) {
        b$$754[d$$455] = a$$788;
      }
      return;
    }
    var b$$754 = [];
    var d$$455;
    JAM.call(j$$125, null, [a$$787, v2020], JAM.policy.p3);
    return b$$754;
  }
  function v2019(a$$785, c$$622, d$$454) {
    function v2018(a$$786, b$$753, h$$189) {
      var v2614;
      if (c$$622) {
        v2614 = JAM.call(c$$622.call, c$$622, [d$$454, a$$786, b$$753, h$$189], JAM.policy.p3);
      } else {
        v2614 = a$$786;
      }
      b$$753 = v2614;
      var v2615 = b$$753 < e$$394.computed;
      if (v2615) {
        e$$394 = {value:a$$786, computed:b$$753};
      }
      return;
    }
    var v15022 = !c$$622;
    if (v15022) {
      v15022 = JAM.call(b$$743.isArray, b$$743, [a$$785], JAM.policy.p3);
    }
    var v9219 = v15022;
    if (v9219) {
      v9219 = a$$785[0] === +a$$785[0];
    }
    if (v9219) {
      var v2616 = Math.min;
      return JAM.call(v2616.apply, v2616, [Math, a$$785], JAM.policy.p3);
    }
    var v9220 = !c$$622;
    if (v9220) {
      v9220 = JAM.call(b$$743.isEmpty, b$$743, [a$$785], JAM.policy.p3);
    }
    if (v9220) {
      return Infinity;
    }
    var e$$394 = {computed:Infinity};
    JAM.call(j$$125, null, [a$$785, v2018], JAM.policy.p3);
    return e$$394.value;
  }
  function v2017(a$$783, c$$621, d$$453) {
    function v2016(a$$784, b$$752, h$$188) {
      var v2619;
      if (c$$621) {
        v2619 = JAM.call(c$$621.call, c$$621, [d$$453, a$$784, b$$752, h$$188], JAM.policy.p3);
      } else {
        v2619 = a$$784;
      }
      b$$752 = v2619;
      var v2620 = b$$752 >= e$$393.computed;
      if (v2620) {
        e$$393 = {value:a$$784, computed:b$$752};
      }
      return;
    }
    var v15025 = !c$$621;
    if (v15025) {
      v15025 = JAM.call(b$$743.isArray, b$$743, [a$$783], JAM.policy.p3);
    }
    var v9222 = v15025;
    if (v9222) {
      v9222 = a$$783[0] === +a$$783[0];
    }
    if (v9222) {
      var v2621 = Math.max;
      return JAM.call(v2621.apply, v2621, [Math, a$$783], JAM.policy.p3);
    }
    var v9223 = !c$$621;
    if (v9223) {
      v9223 = JAM.call(b$$743.isEmpty, b$$743, [a$$783], JAM.policy.p3);
    }
    if (v9223) {
      return-Infinity;
    }
    var e$$393 = {computed:-Infinity};
    JAM.call(j$$125, null, [a$$783, v2016], JAM.policy.p3);
    return e$$393.value;
  }
  function v2015(a$$781, c$$620) {
    function v2014(a$$782) {
      return a$$782[c$$620];
    }
    return JAM.call(b$$743.map, b$$743, [a$$781, v2014], JAM.policy.p3);
  }
  function v2013(a$$779, c$$619) {
    function v2012(a$$780) {
      var v9224;
      if (JAM.call(b$$743.isFunction, b$$743, [c$$619], JAM.policy.p3)) {
        v9224 = c$$619 || a$$780;
      } else {
        v9224 = a$$780[c$$619];
      }
      var v2625 = v9224;
      return JAM.call(v2625.apply, v2625, [a$$780, d$$452], JAM.policy.p3);
    }
    var d$$452 = JAM.call(i$$238.call, i$$238, [arguments, 2], JAM.policy.p3);
    return JAM.call(b$$743.map, b$$743, [a$$779, v2012], JAM.policy.p3);
  }
  function v2011(a$$777, c$$618) {
    function v2010(a$$778) {
      return a$$778 === c$$618;
    }
    var b$$751 = false;
    if (a$$777 == null) {
      return b$$751;
    }
    var v9225 = q$$27;
    if (v9225) {
      v9225 = a$$777.indexOf === q$$27;
    }
    if (v9225) {
      return JAM.call(a$$777.indexOf, a$$777, [c$$618], JAM.policy.p3) != -1;
    }
    return b$$751 = JAM.call(G$$4, null, [a$$777, v2010], JAM.policy.p3);
  }
  function v2009(a$$775, c$$617, d$$451) {
    function v2008(a$$776, b$$750, h$$187) {
      var v9226 = e$$392;
      if (!v9226) {
        v9226 = e$$392 = JAM.call(c$$617.call, c$$617, [d$$451, a$$776, b$$750, h$$187], JAM.policy.p3);
      }
      if (v9226) {
        return o$$41;
      }
      return;
    }
    if (!c$$617) {
      c$$617 = b$$743.identity;
    }
    var e$$392 = false;
    if (a$$775 == null) {
      return e$$392;
    }
    var v9228 = E$$5;
    if (v9228) {
      v9228 = a$$775.some === E$$5;
    }
    if (v9228) {
      return JAM.call(a$$775.some, a$$775, [c$$617, d$$451], JAM.policy.p3);
    }
    JAM.call(j$$125, null, [a$$775, v2008], JAM.policy.p3);
    return!!e$$392;
  }
  function v2007(a$$773, c$$616, b$$749) {
    function v2006(a$$774, g$$225, h$$186) {
      var v15032 = e$$391;
      if (v15032) {
        v15032 = JAM.call(c$$616.call, c$$616, [b$$749, a$$774, g$$225, h$$186], JAM.policy.p3);
      }
      if (!(e$$391 = v15032)) {
        return o$$41;
      }
      return;
    }
    var e$$391 = true;
    if (a$$773 == null) {
      return e$$391;
    }
    var v9230 = D$$5;
    if (v9230) {
      v9230 = a$$773.every === D$$5;
    }
    if (v9230) {
      return JAM.call(a$$773.every, a$$773, [c$$616, b$$749], JAM.policy.p3);
    }
    JAM.call(j$$125, null, [a$$773, v2006], JAM.policy.p3);
    return!!e$$391;
  }
  function v2005(a$$771, c$$615, b$$748) {
    function v2004(a$$772, g$$224, h$$185) {
      var v2637 = JAM.call(c$$615.call, c$$615, [b$$748, a$$772, g$$224, h$$185], JAM.policy.p3);
      if (!v2637) {
        var v9231 = e$$390.length;
        introspect(JAM.policy.p2) {
          e$$390[v9231] = a$$772;
        }
      }
      return;
    }
    var e$$390 = [];
    if (a$$771 == null) {
      return e$$390;
    }
    JAM.call(j$$125, null, [a$$771, v2004], JAM.policy.p3);
    return e$$390;
  }
  function v2003(a$$769, c$$614, b$$747) {
    function v2002(a$$770, g$$223, h$$184) {
      var v2639 = JAM.call(c$$614.call, c$$614, [b$$747, a$$770, g$$223, h$$184], JAM.policy.p3);
      if (v2639) {
        var v9233 = e$$389.length;
        introspect(JAM.policy.p2) {
          e$$389[v9233] = a$$770;
        }
      }
      return;
    }
    var e$$389 = [];
    if (a$$769 == null) {
      return e$$389;
    }
    var v9234 = C$$5;
    if (v9234) {
      v9234 = a$$769.filter === C$$5;
    }
    if (v9234) {
      return JAM.call(a$$769.filter, a$$769, [c$$614, b$$747], JAM.policy.p3);
    }
    JAM.call(j$$125, null, [a$$769, v2002], JAM.policy.p3);
    return e$$389;
  }
  function v2001(a$$767, c$$613, b$$746) {
    function v2000(a$$768, g$$222, h$$183) {
      if (JAM.call(c$$613.call, c$$613, [b$$746, a$$768, g$$222, h$$183], JAM.policy.p3)) {
        e$$388 = a$$768;
        return true;
      }
      return;
    }
    var e$$388;
    JAM.call(G$$4, null, [a$$767, v2000], JAM.policy.p3);
    return e$$388;
  }
  function v1999(a$$766, c$$612, d$$450, e$$387) {
    var f$$226 = arguments.length > 2;
    var v2644 = a$$766 == null;
    if (v2644) {
      a$$766 = [];
    }
    var v9235 = B$$6;
    if (v9235) {
      v9235 = a$$766.reduceRight === B$$6;
    }
    if (v9235) {
      if (e$$387) {
        c$$612 = JAM.call(b$$743.bind, b$$743, [c$$612, e$$387], JAM.policy.p3);
      }
      var v2645;
      if (f$$226) {
        v2645 = JAM.call(a$$766.reduceRight, a$$766, [c$$612, d$$450], JAM.policy.p3);
      } else {
        v2645 = JAM.call(a$$766.reduceRight, a$$766, [c$$612], JAM.policy.p3);
      }
      return v2645;
    }
    var v2647 = JAM.call(b$$743.toArray, b$$743, [a$$766], JAM.policy.p3);
    var g$$221 = JAM.call(v2647.reverse, v2647, [], JAM.policy.p3);
    var v9236 = e$$387;
    if (v9236) {
      v9236 = !f$$226;
    }
    var v2648 = v9236;
    if (v2648) {
      c$$612 = JAM.call(b$$743.bind, b$$743, [c$$612, e$$387], JAM.policy.p3);
    }
    var v2649;
    if (f$$226) {
      v2649 = JAM.call(b$$743.reduce, b$$743, [g$$221, c$$612, d$$450, e$$387], JAM.policy.p3);
    } else {
      v2649 = JAM.call(b$$743.reduce, b$$743, [g$$221, c$$612], JAM.policy.p3);
    }
    return v2649;
  }
  function v1998(a$$764, c$$611, d$$449, e$$386) {
    function v1997(a$$765, b$$745, i$$239) {
      if (f$$225) {
        d$$449 = JAM.call(c$$611.call, c$$611, [e$$386, d$$449, a$$765, b$$745, i$$239], JAM.policy.p3);
      } else {
        d$$449 = a$$765;
        f$$225 = true;
      }
      return;
    }
    var f$$225 = arguments.length > 2;
    var v2651 = a$$764 == null;
    if (v2651) {
      a$$764 = [];
    }
    var v9237 = A$$6;
    if (v9237) {
      v9237 = a$$764.reduce === A$$6;
    }
    if (v9237) {
      if (e$$386) {
        c$$611 = JAM.call(b$$743.bind, b$$743, [c$$611, e$$386], JAM.policy.p3);
      }
      var v2652;
      if (f$$225) {
        v2652 = JAM.call(a$$764.reduce, a$$764, [c$$611, d$$449], JAM.policy.p3);
      } else {
        v2652 = JAM.call(a$$764.reduce, a$$764, [c$$611], JAM.policy.p3);
      }
      return v2652;
    }
    JAM.call(j$$125, null, [a$$764, v1997], JAM.policy.p3);
    if (!f$$225) {
      throw new TypeError("Reduce of empty array with no initial value");
    }
    return d$$449;
  }
  function v1996(a$$762, c$$610, b$$744) {
    function v1995(a$$763, g$$220, h$$182) {
      var v2655 = e$$385;
      var v2656 = e$$385.length;
      var v30936 = JAM.call(c$$610.call, c$$610, [b$$744, a$$763, g$$220, h$$182], JAM.policy.p3);
      introspect(JAM.policy.p2) {
        v2655[v2656] = v30936;
      }
      return;
    }
    var e$$385 = [];
    if (a$$762 == null) {
      return e$$385;
    }
    var v9238 = z$$10;
    if (v9238) {
      v9238 = a$$762.map === z$$10;
    }
    if (v9238) {
      return JAM.call(a$$762.map, a$$762, [c$$610, b$$744], JAM.policy.p3);
    }
    JAM.call(j$$125, null, [a$$762, v1995], JAM.policy.p3);
    if (a$$762.length === +a$$762.length) {
      e$$385.length = a$$762.length;
    }
    return e$$385;
  }
  function v1994(a$$761, c$$609, d$$448) {
    if (a$$761 != null) {
      var v9241 = y$$56;
      if (v9241) {
        v9241 = a$$761.forEach === y$$56;
      }
      if (v9241) {
        JAM.call(a$$761.forEach, a$$761, [c$$609, d$$448], JAM.policy.p3);
      } else {
        if (a$$761.length === +a$$761.length) {
          var e$$384 = 0;
          var f$$224 = a$$761.length;
          var v2661 = e$$384 < f$$224;
          for (;v2661;) {
            var v9244 = e$$384 in a$$761;
            if (v9244) {
              v9244 = JAM.call(c$$609.call, c$$609, [d$$448, a$$761[e$$384], e$$384, a$$761], JAM.policy.p3) === o$$41;
            }
            if (v9244) {
              break;
            }
            e$$384++;
            v2661 = e$$384 < f$$224;
          }
        } else {
          for (e$$384 in a$$761) {
            var v9245 = JAM.call(b$$743.has, b$$743, [a$$761, e$$384], JAM.policy.p3);
            if (v9245) {
              v9245 = JAM.call(c$$609.call, c$$609, [d$$448, a$$761[e$$384], e$$384, a$$761], JAM.policy.p3) === o$$41;
            }
            if (v9245) {
              break;
            }
          }
        }
      }
    }
    return;
  }
  function M$$3(a$$871, c$$649) {
    function v1992() {
      var a$$872 = JAM.call(i$$238.call, i$$238, [arguments], JAM.policy.p3);
      JAM.call(J$$4.call, J$$4, [a$$872, this._wrapped], JAM.policy.p3);
      return x$$76(JAM.call(c$$649.apply, c$$649, [b$$743, a$$872], JAM.policy.p3), this._chain);
    }
    JAM.set(m$$63.prototype, a$$871, v1992, JAM.policy.p2);
    return;
  }
  function x$$76(a$$870, c$$648) {
    var v2670;
    if (c$$648) {
      var v9246 = b$$743(a$$870);
      v2670 = JAM.call(v9246.chain, v9246, [], JAM.policy.p3);
    } else {
      v2670 = a$$870;
    }
    return v2670;
  }
  function m$$63(a$$869) {
    this._wrapped = a$$869;
    return;
  }
  function w$$20(a$$860) {
    function v1993(a$$861, b$$779) {
      return n$$109[b$$779];
    }
    return JAM.call(a$$860.replace, a$$860, [P$$3, v1993], JAM.policy.p3);
  }
  function H$$4() {
    return;
  }
  function b$$743(a$$760) {
    return new m$$63(a$$760);
  }
  function r$$31(a$$759, c$$608, d$$447) {
    if (a$$759 === c$$608) {
      var v2671 = 0 !== a$$759;
      if (!v2671) {
        v2671 = 1 / a$$759 == 1 / c$$608;
      }
      return v2671;
    }
    var v9250 = null == a$$759;
    if (!v9250) {
      v9250 = null == c$$608;
    }
    if (v9250) {
      return a$$759 === c$$608;
    }
    var v2674 = a$$759._chain;
    if (v2674) {
      a$$759 = a$$759._wrapped;
    }
    var v2675 = c$$608._chain;
    if (v2675) {
      c$$608 = c$$608._wrapped;
    }
    var v9251 = a$$759.isEqual;
    if (v9251) {
      v9251 = JAM.call(b$$743.isFunction, b$$743, [a$$759.isEqual], JAM.policy.p3);
    }
    if (v9251) {
      return JAM.call(a$$759.isEqual, a$$759, [c$$608], JAM.policy.p3);
    }
    var v9252 = c$$608.isEqual;
    if (v9252) {
      v9252 = JAM.call(b$$743.isFunction, b$$743, [c$$608.isEqual], JAM.policy.p3);
    }
    if (v9252) {
      return JAM.call(c$$608.isEqual, c$$608, [a$$759], JAM.policy.p3);
    }
    var e$$383 = JAM.call(l$$96.call, l$$96, [a$$759], JAM.policy.p3);
    if (e$$383 != JAM.call(l$$96.call, l$$96, [c$$608], JAM.policy.p3)) {
      return!1;
    }
    switch(e$$383) {
      case "[object String]":
        return a$$759 == "" + c$$608;
      case "[object Number]":
        var v2680;
        if (a$$759 != +a$$759) {
          v2680 = c$$608 != +c$$608;
        } else {
          var v9255;
          if (0 == a$$759) {
            v9255 = 1 / a$$759 == 1 / c$$608;
          } else {
            v9255 = a$$759 == +c$$608;
          }
          v2680 = v9255;
        }
        return v2680;
      case "[object Date]":
      ;
      case "[object Boolean]":
        return+a$$759 == +c$$608;
      case "[object RegExp]":
        var v15051 = a$$759.source == c$$608.source;
        if (v15051) {
          v15051 = a$$759.global == c$$608.global;
        }
        var v9257 = v15051;
        if (v9257) {
          v9257 = a$$759.multiline == c$$608.multiline;
        }
        var v2683 = v9257;
        if (v2683) {
          v2683 = a$$759.ignoreCase == c$$608.ignoreCase;
        }
        return v2683;
    }
    var v9260 = "object" != typeof a$$759;
    if (!v9260) {
      v9260 = "object" != typeof c$$608;
    }
    if (v9260) {
      return!1;
    }
    var f$$223 = d$$447.length;
    var v2686 = f$$223;
    f$$223 = f$$223 - 1;
    for (;v2686;) {
      if (d$$447[f$$223] == a$$759) {
        return!0;
      }
      v2686 = f$$223;
      f$$223 = f$$223 - 1;
    }
    JAM.call(d$$447.push, d$$447, [a$$759], JAM.policy.p3);
    f$$223 = 0;
    var g$$219 = !0;
    if ("[object Array]" == e$$383) {
      f$$223 = a$$759.length;
      if (g$$219 = f$$223 == c$$608.length) {
        var v9262 = f$$223;
        f$$223 = f$$223 - 1;
        if (v9262) {
          var v15058 = f$$223 in a$$759 == f$$223 in c$$608;
          if (v15058) {
            v15058 = r$$31(a$$759[f$$223], c$$608[f$$223], d$$447);
          }
          v9262 = g$$219 = v15058;
        }
        var v2687 = v9262;
        for (;v2687;) {
          var v9263 = f$$223;
          f$$223 = f$$223 - 1;
          if (v9263) {
            var v15059 = f$$223 in a$$759 == f$$223 in c$$608;
            if (v15059) {
              v15059 = r$$31(a$$759[f$$223], c$$608[f$$223], d$$447);
            }
            v9263 = g$$219 = v15059;
          }
          v2687 = v9263;
        }
      }
    } else {
      var v9264 = "constructor" in a$$759 != "constructor" in c$$608;
      if (!v9264) {
        v9264 = a$$759.constructor != c$$608.constructor;
      }
      if (v9264) {
        return!1;
      }
      var h$$181;
      for (h$$181 in a$$759) {
        var v9265 = JAM.call(b$$743.has, b$$743, [a$$759, h$$181], JAM.policy.p3);
        if (v9265) {
          f$$223++;
          var v24064 = JAM.call(b$$743.has, b$$743, [c$$608, h$$181], JAM.policy.p3);
          if (v24064) {
            v24064 = r$$31(a$$759[h$$181], c$$608[h$$181], d$$447);
          }
          v9265 = !(g$$219 = v24064);
        }
        if (v9265) {
          break;
        }
      }
      if (g$$219) {
        for (h$$181 in c$$608) {
          var v9266 = JAM.call(b$$743.has, b$$743, [c$$608, h$$181], JAM.policy.p3);
          if (v9266) {
            var v15065 = f$$223;
            f$$223 = f$$223 - 1;
            v9266 = !v15065;
          }
          if (v9266) {
            break;
          }
        }
        g$$219 = !f$$223;
      }
    }
    JAM.call(d$$447.pop, d$$447, [], JAM.policy.p3);
    return g$$219;
  }
  var s$$35 = this;
  var I$$4 = s$$35._;
  var o$$41 = {};
  var k$$92 = Array.prototype;
  var p$$60 = Object.prototype;
  var i$$238 = k$$92.slice;
  var J$$4 = k$$92.unshift;
  var l$$96 = p$$60.toString;
  var K$$3 = p$$60.hasOwnProperty;
  var y$$56 = k$$92.forEach;
  var z$$10 = k$$92.map;
  var A$$6 = k$$92.reduce;
  var B$$6 = k$$92.reduceRight;
  var C$$5 = k$$92.filter;
  var D$$5 = k$$92.every;
  var E$$5 = k$$92.some;
  var q$$27 = k$$92.indexOf;
  var F$$5 = k$$92.lastIndexOf;
  p$$60 = Array.isArray;
  var L$$3 = Object.keys;
  var t$$32 = Function.prototype.bind;
  var v2694;
  if ("undefined" !== typeof exports) {
    var v19423 = "undefined" !== typeof module;
    if (v19423) {
      v19423 = module.exports;
    }
    var v15067 = v19423;
    if (v15067) {
      exports = module.exports = b$$743;
    }
    v2694 = exports._ = b$$743;
  } else {
    v2694 = s$$35._ = b$$743;
  }
  v2694;
  b$$743.VERSION = "1.3.3";
  var j$$125 = b$$743.each = b$$743.forEach = v1994;
  b$$743.map = b$$743.collect = v1996;
  b$$743.reduce = b$$743.foldl = b$$743.inject = v1998;
  b$$743.reduceRight = b$$743.foldr = v1999;
  b$$743.find = b$$743.detect = v2001;
  b$$743.filter = b$$743.select = v2003;
  b$$743.reject = v2005;
  b$$743.every = b$$743.all = v2007;
  var G$$4 = b$$743.some = b$$743.any = v2009;
  b$$743.include = b$$743.contains = v2011;
  b$$743.invoke = v2013;
  b$$743.pluck = v2015;
  b$$743.max = v2017;
  b$$743.min = v2019;
  b$$743.shuffle = v2021;
  b$$743.sortBy = v2025;
  b$$743.groupBy = v2028;
  b$$743.sortedIndex = v2029;
  b$$743.toArray = v2030;
  b$$743.size = v2031;
  b$$743.first = b$$743.head = b$$743.take = v2032;
  b$$743.initial = v2033;
  b$$743.last = v2034;
  b$$743.rest = b$$743.tail = v2035;
  b$$743.compact = v2037;
  b$$743.flatten = v2039;
  b$$743.without = v2040;
  b$$743.uniq = b$$743.unique = v2042;
  b$$743.union = v2043;
  b$$743.intersection = b$$743.intersect = v2046;
  b$$743.difference = v2048;
  b$$743.zip = v2049;
  b$$743.indexOf = v2050;
  b$$743.lastIndexOf = v2051;
  b$$743.range = v2052;
  b$$743.bind = v2054;
  b$$743.bindAll = v2056;
  b$$743.memoize = v2058;
  b$$743.delay = v2060;
  b$$743.defer = v2061;
  b$$743.throttle = v2065;
  b$$743.debounce = v2068;
  b$$743.once = v2070;
  b$$743.wrap = v2072;
  b$$743.compose = v2074;
  b$$743.after = v2076;
  b$$743.keys = L$$3 || v2077;
  b$$743.values = v2078;
  b$$743.functions = b$$743.methods = v2079;
  b$$743.extend = v2081;
  b$$743.pick = v2083;
  b$$743.defaults = v2085;
  b$$743.clone = v2086;
  b$$743.tap = v2087;
  b$$743.isEqual = v2088;
  b$$743.isEmpty = v2089;
  b$$743.isElement = v2090;
  b$$743.isArray = p$$60 || v2091;
  b$$743.isObject = v2092;
  b$$743.isArguments = v2093;
  var v2695 = JAM.call(b$$743.isArguments, b$$743, [arguments], JAM.policy.p3);
  if (!v2695) {
    b$$743.isArguments = v2094;
  }
  b$$743.isFunction = v2095;
  b$$743.isString = v2096;
  b$$743.isNumber = v2097;
  b$$743.isFinite = v2098;
  b$$743.isNaN = v2099;
  b$$743.isBoolean = v2100;
  b$$743.isDate = v2101;
  b$$743.isRegExp = v2102;
  b$$743.isNull = v2103;
  b$$743.isUndefined = v2104;
  b$$743.has = v2105;
  b$$743.noConflict = v2106;
  b$$743.identity = v2107;
  b$$743.times = v2108;
  b$$743.escape = v2109;
  b$$743.result = v2110;
  b$$743.mixin = v2112;
  var N$$3 = 0;
  b$$743.uniqueId = v2113;
  b$$743.templateSettings = {evaluate:/<%([\s\S]+?)%>/g, interpolate:/<%=([\s\S]+?)%>/g, escape:/<%-([\s\S]+?)%>/g};
  var u$$19 = /.^/;
  var n$$109 = {"\\":"\\", "'":"'", r:"\r", n:"\n", t:"\t", u2028:"\u2028", u2029:"\u2029"};
  var v$$14;
  for (v$$14 in n$$109) {
    JAM.set(n$$109, n$$109[v$$14], v$$14, JAM.policy.p2);
  }
  var O$$3 = /\\|'|\r|\n|\t|\u2028|\u2029/g;
  var P$$3 = /\\(\\|'|r|n|t|u2028|u2029)/g;
  b$$743.template = v2119;
  b$$743.chain = v2120;
  b$$743.prototype = m$$63.prototype;
  JAM.call(b$$743.mixin, b$$743, [b$$743], JAM.policy.p3);
  JAM.call(j$$125, null, [JAM.call("pop,push,reverse,shift,sort,splice,unshift".split, "pop,push,reverse,shift,sort,splice,unshift", [","], JAM.policy.p3), v2122], JAM.policy.p3);
  JAM.call(j$$125, null, [["concat", "join", "slice"], v2124], JAM.policy.p3);
  m$$63.prototype.chain = v2125;
  m$$63.prototype.value = v2126;
  return;
}
function v1991() {
  function v1990(a$$758) {
    var b$$742 = null;
    try {
      var v9269;
      if (document.all) {
        v9269 = new ActiveXObject("Microsoft.XMLDOM");
      } else {
        v9269 = new DOMParser;
      }
      b$$742 = v9269;
      b$$742.async = !1;
    } catch (f$$222) {
      throw Error("XML Parser could not be instantiated");
    }
    var k$$91;
    try {
      var v2701;
      if (document.all) {
        var v9270;
        if (JAM.call(b$$742.loadXML, b$$742, [a$$758], JAM.policy.p3)) {
          v9270 = b$$742;
        } else {
          v9270 = !1;
        }
        v2701 = v9270;
      } else {
        v2701 = JAM.call(b$$742.parseFromString, b$$742, [a$$758, "text/xml"], JAM.policy.p3);
      }
      k$$91 = v2701;
    } catch (l$$95) {
      throw Error("Error parsing XML string");
    }
    return k$$91;
  }
  function v1989(c$$589) {
    function v1988(a$$757, b$$741) {
      var c$$607;
      var e$$382;
      var f$$221;
      var m$$61 = "";
      if (!b$$741) {
        return null;
      }
      var v2703 = b$$741.attributes.length > 0;
      if (v2703) {
        JAM.call(l$$92, null, [a$$757, b$$741], JAM.policy.p3);
      }
      a$$757.Text = "";
      if (JAM.call(b$$741.hasChildNodes, b$$741, [], JAM.policy.p3)) {
        var o$$40 = b$$741.childNodes.length - 1;
        var q$$26 = 0;
        var v9274 = q$$26;
        q$$26 = q$$26 + 1;
        var v2714 = v9274 < o$$40;
        do {
          e$$382 = b$$741.childNodes[q$$26];
          switch(e$$382.nodeType) {
            case 1:
              a$$757._children = [];
              var v2705;
              if (e$$382.localName) {
                v2705 = e$$382.localName;
              } else {
                v2705 = e$$382.baseName;
              }
              c$$607 = v2705;
              var v2706 = String(c$$607);
              c$$607 = JAM.call(v2706.replace, v2706, [/-/g, "_"], JAM.policy.p3);
              var v2707 = m$$61 != c$$607;
              if (v2707) {
                var v9276 = a$$757._children;
                JAM.call(v9276.push, v9276, [c$$607], JAM.policy.p3);
              }
              var v2708 = a$$757[c$$607];
              if (!v2708) {
                JAM.set(a$$757, c$$607, [], JAM.policy.p2);
              }
              f$$221 = {};
              var v2709 = a$$757[c$$607];
              JAM.call(v2709.push, v2709, [f$$221], JAM.policy.p3);
              var v2710 = e$$382.attributes.length > 0;
              if (v2710) {
                JAM.call(l$$92, null, [f$$221, e$$382], JAM.policy.p3);
              }
              var v2711 = a$$757[c$$607].contains;
              if (!v2711) {
                JAM.call(p$$59, null, [a$$757[c$$607]], JAM.policy.p3);
              }
              m$$61 = c$$607;
              var v2712 = JAM.call(e$$382.hasChildNodes, e$$382, [], JAM.policy.p3);
              if (v2712) {
                JAM.call(g$$212, null, [f$$221, e$$382], JAM.policy.p3);
              }
              break;
            case 3:
              a$$757.Text = a$$757.Text + JAM.call(k$$87, null, [e$$382.nodeValue], JAM.policy.p3);
              break;
            case 4:
              var v9284 = a$$757.Text;
              var v15074;
              if (e$$382.text) {
                v15074 = JAM.call(k$$87, null, [e$$382.text], JAM.policy.p3);
              } else {
                v15074 = JAM.call(k$$87, null, [e$$382.nodeValue], JAM.policy.p3);
              }
              a$$757.Text = v9284 + v15074;
          }
          var v9286 = q$$26;
          q$$26 = q$$26 + 1;
          v2714 = v9286 < o$$40;
        } while (v2714);
      }
      return;
    }
    function v1987(b$$731) {
      function v1986(b$$739, d$$445) {
        function v1985(a$$756, f$$220) {
          var g$$218 = 0;
          var k$$90;
          var l$$94;
          k$$90 = JAM.call(c$$605, null, [a$$756, b$$739], JAM.policy.p3);
          l$$94 = JAM.call(c$$605, null, [f$$220, b$$739], JAM.policy.p3);
          var v2716;
          if (k$$90 < l$$94) {
            v2716 = g$$218 = -1;
          } else {
            var v9287 = l$$94 < k$$90;
            if (v9287) {
              v9287 = g$$218 = 1;
            }
            v2716 = v9287;
          }
          v2716;
          if (d$$445) {
            var v9289;
            if (JAM.call(d$$445.toUpperCase, d$$445, [], JAM.policy.p3) == "DESC") {
              v9289 = 0 - g$$218;
            } else {
              v9289 = g$$218;
            }
            g$$218 = v9289;
          }
          return g$$218;
        }
        function v1984(b$$740, d$$446) {
          var c$$606 = b$$740[d$$446][0].Text;
          var v2718;
          if (a$$740(c$$606)) {
            v2718 = parseFloat(c$$606);
          } else {
            v2718 = c$$606;
          }
          return c$$606 = v2718;
        }
        if (this.length) {
          var c$$605 = v1984;
          JAM.call(this.sort, this, [v1985], JAM.policy.p3);
        }
        return;
      }
      function v1983(b$$737) {
        function v1982(a$$755, c$$604) {
          var f$$219 = 0;
          var g$$217;
          var k$$89;
          g$$217 = JAM.call(d$$444, null, [a$$755], JAM.policy.p3);
          k$$89 = JAM.call(d$$444, null, [c$$604], JAM.policy.p3);
          var v2720;
          if (g$$217 < k$$89) {
            v2720 = f$$219 = -1;
          } else {
            var v9292 = k$$89 < g$$217;
            if (v9292) {
              v9292 = f$$219 = 1;
            }
            v2720 = v9292;
          }
          v2720;
          if (b$$737) {
            var v9294;
            if (JAM.call(b$$737.toUpperCase, b$$737, [], JAM.policy.p3) == "DESC") {
              v9294 = 0 - f$$219;
            } else {
              v9294 = f$$219;
            }
            f$$219 = v9294;
          }
          return f$$219;
        }
        function v1981(b$$738) {
          b$$738 = b$$738.Text;
          var v2721;
          if (a$$740(b$$738)) {
            v2721 = parseFloat(b$$738);
          } else {
            v2721 = b$$738;
          }
          return b$$738 = v2721;
        }
        if (this.length) {
          var d$$444 = v1981;
          JAM.call(this.sort, this, [v1982], JAM.policy.p3);
        }
        return;
      }
      function v1980(b$$735, d$$442) {
        function v1979(a$$754, f$$218) {
          var g$$216 = 0;
          var k$$88;
          var l$$93;
          k$$88 = JAM.call(c$$602, null, [a$$754, b$$735], JAM.policy.p3);
          l$$93 = JAM.call(c$$602, null, [f$$218, b$$735], JAM.policy.p3);
          var v2723;
          if (k$$88 < l$$93) {
            v2723 = g$$216 = -1;
          } else {
            var v9296 = l$$93 < k$$88;
            if (v9296) {
              v9296 = g$$216 = 1;
            }
            v2723 = v9296;
          }
          v2723;
          if (d$$442) {
            var v9298;
            if (JAM.call(d$$442.toUpperCase, d$$442, [], JAM.policy.p3) == "DESC") {
              v9298 = 0 - g$$216;
            } else {
              v9298 = g$$216;
            }
            g$$216 = v9298;
          }
          return g$$216;
        }
        function v1978(b$$736, d$$443) {
          var c$$603 = b$$736[d$$443];
          var v2724;
          if (a$$740(c$$603)) {
            v2724 = parseFloat(c$$603);
          } else {
            v2724 = c$$603;
          }
          return c$$603 = v2724;
        }
        if (this.length) {
          var c$$602 = v1978;
          JAM.call(this.sort, this, [v1979], JAM.policy.p3);
        }
        return;
      }
      function v1977(a$$753, b$$734) {
        var d$$441 = -1;
        if (this.length > 0) {
          var c$$601 = this.length - 1;
          try {
            var v2728 = c$$601;
            c$$601 = c$$601 - 1;
            do {
              var v2727 = this[c$$601][a$$753] == b$$734;
              if (v2727) {
                d$$441 = c$$601;
              }
              v2728 = c$$601;
              c$$601 = c$$601 - 1;
            } while (v2728);
          } catch (f$$217) {
            return-1;
          }
          return d$$441;
        }
        return;
      }
      function v1976(a$$752, b$$733) {
        if (this.length > 0) {
          var d$$440 = this.length - 1;
          try {
            var v2732 = d$$440;
            d$$440 = d$$440 - 1;
            do {
              if (this[d$$440][a$$752] == b$$733) {
                return!0;
              }
              v2732 = d$$440;
              d$$440 = d$$440 - 1;
            } while (v2732);
          } catch (c$$600) {
          }
          return!1;
        }
        return;
      }
      function v1975(a$$751, b$$732) {
        if (this.length > 0) {
          var d$$439;
          var c$$599 = this.length - 1;
          try {
            var v2736 = c$$599;
            c$$599 = c$$599 - 1;
            do {
              d$$439 = this[c$$599];
              if (d$$439[a$$751] == b$$732) {
                return d$$439;
              }
              v2736 = c$$599;
              c$$599 = c$$599 - 1;
            } while (v2736);
          } catch (f$$216) {
          }
          return!1;
        }
        return;
      }
      b$$731.getNodeByAttribute = v1975;
      b$$731.contains = v1976;
      b$$731.indexOf = v1977;
      b$$731.SortByAttribute = v1980;
      b$$731.SortByValue = v1983;
      b$$731.SortByNode = v1986;
      return;
    }
    function v1974() {
      function v1973() {
        function v1972(b$$729, c$$598) {
          function v1971(a$$750, d$$438) {
            var f$$215;
            var g$$215;
            f$$215 = JAM.call(e$$381, null, [a$$750, b$$729], JAM.policy.p3);
            g$$215 = JAM.call(e$$381, null, [d$$438, b$$729], JAM.policy.p3);
            var v2738;
            if (f$$215 < g$$215) {
              v2738 = -1;
            } else {
              var v9305;
              if (g$$215 < f$$215) {
                v9305 = 1;
              } else {
                v9305 = 0;
              }
              v2738 = v9305;
            }
            f$$215 = v2738;
            if (c$$598) {
              var v9307;
              if (JAM.call(c$$598.toUpperCase, c$$598, [], JAM.policy.p3) === "DESC") {
                v9307 = 0 - f$$215;
              } else {
                v9307 = f$$215;
              }
              f$$215 = v9307;
            }
            return f$$215;
          }
          function v1970(a$$749, b$$730) {
            var d$$437 = a$$749[b$$730][0].Text;
            var v2740;
            var v15083 = bam.validation;
            if (JAM.call(v15083.isNumeric, v15083, [d$$437], JAM.policy.p3)) {
              v2740 = parseFloat(d$$437);
            } else {
              v2740 = d$$437;
            }
            return d$$437 = v2740;
          }
          var v9310 = a$$744;
          if (v9310) {
            v9310 = a$$744.length > 0;
          }
          if (v9310) {
            var e$$381 = v1970;
            JAM.call(a$$744.sort, a$$744, [v1971], JAM.policy.p3);
          }
          return;
        }
        function v1969(b$$728) {
          function v1968(a$$748, d$$436) {
            var f$$214;
            var g$$214;
            f$$214 = JAM.call(c$$597, null, [a$$748], JAM.policy.p3);
            g$$214 = JAM.call(c$$597, null, [d$$436], JAM.policy.p3);
            var v2742;
            if (f$$214 < g$$214) {
              v2742 = -1;
            } else {
              var v9311;
              if (g$$214 < f$$214) {
                v9311 = 1;
              } else {
                v9311 = 0;
              }
              v2742 = v9311;
            }
            f$$214 = v2742;
            if (b$$728) {
              var v9313;
              if (JAM.call(b$$728.toUpperCase, b$$728, [], JAM.policy.p3) === "DESC") {
                v9313 = 0 - f$$214;
              } else {
                v9313 = f$$214;
              }
              f$$214 = v9313;
            }
            return f$$214;
          }
          function v1967(a$$747) {
            a$$747 = a$$747.Text;
            var v2743;
            var v15087 = bam.validation;
            if (JAM.call(v15087.isNumeric, v15087, [a$$747], JAM.policy.p3)) {
              v2743 = parseFloat(a$$747);
            } else {
              v2743 = a$$747;
            }
            return a$$747 = v2743;
          }
          var v9315 = a$$744;
          if (v9315) {
            v9315 = a$$744.length > 0;
          }
          if (v9315) {
            var c$$597 = v1967;
            JAM.call(a$$744.sort, a$$744, [v1968], JAM.policy.p3);
          }
          return;
        }
        function v1966(b$$726, c$$596) {
          function v1965(a$$746, d$$435) {
            var f$$213;
            var g$$213;
            f$$213 = JAM.call(e$$380, null, [a$$746, b$$726], JAM.policy.p3);
            g$$213 = JAM.call(e$$380, null, [d$$435, b$$726], JAM.policy.p3);
            var v2745;
            if (f$$213 < g$$213) {
              v2745 = -1;
            } else {
              var v9316;
              if (g$$213 < f$$213) {
                v9316 = 1;
              } else {
                v9316 = 0;
              }
              v2745 = v9316;
            }
            f$$213 = v2745;
            if (c$$596) {
              var v9318;
              if (JAM.call(c$$596.toUpperCase, c$$596, [], JAM.policy.p3) === "DESC") {
                v9318 = 0 - f$$213;
              } else {
                v9318 = f$$213;
              }
              f$$213 = v9318;
            }
            return f$$213;
          }
          function v1964(a$$745, b$$727) {
            var d$$434 = a$$745[b$$727];
            var v2746;
            var v15091 = bam.validation;
            if (JAM.call(v15091.isNumeric, v15091, [d$$434], JAM.policy.p3)) {
              v2746 = parseFloat(d$$434);
            } else {
              v2746 = d$$434;
            }
            return d$$434 = v2746;
          }
          var v9320 = a$$744;
          if (v9320) {
            v9320 = a$$744.length > 0;
          }
          if (v9320) {
            var e$$380 = v1964;
            JAM.call(a$$744.sort, a$$744, [v1965], JAM.policy.p3);
          }
          return;
        }
        function v1963(b$$725, c$$595) {
          var e$$379 = -1;
          var v9321 = a$$744;
          if (v9321) {
            v9321 = a$$744.length > 0;
          }
          if (v9321) {
            var h$$180 = a$$744.length - 1;
            try {
              var v2750 = h$$180;
              h$$180 = h$$180 - 1;
              do {
                var v2749 = a$$744[h$$180][b$$725] === c$$595;
                if (v2749) {
                  e$$379 = h$$180;
                }
                v2750 = h$$180;
                h$$180 = h$$180 - 1;
              } while (v2750);
            } catch (f$$212) {
              return-1;
            }
            return e$$379;
          }
          return;
        }
        function v1962(b$$724, c$$594) {
          var v9323 = a$$744;
          if (v9323) {
            v9323 = a$$744.length > 0;
          }
          if (v9323) {
            var e$$378 = a$$744.length - 1;
            try {
              var v2754 = e$$378;
              e$$378 = e$$378 - 1;
              do {
                if (a$$744[e$$378][b$$724] === c$$594) {
                  return!0;
                }
                v2754 = e$$378;
                e$$378 = e$$378 - 1;
              } while (v2754);
            } catch (h$$179) {
            }
            return!1;
          }
          return;
        }
        function v1961(b$$723) {
          var v9325 = a$$744;
          if (v9325) {
            v9325 = a$$744.length > 0;
          }
          if (v9325) {
            var c$$593 = [];
            var e$$377;
            var h$$178 = a$$744.length - 1;
            try {
              var v2757 = h$$178;
              h$$178 = h$$178 - 1;
              do {
                e$$377 = a$$744[h$$178];
                var v15098 = e$$377.Text;
                if (v15098) {
                  v15098 = e$$377.Text === b$$723;
                }
                var v9326 = v15098;
                if (v9326) {
                  JAM.call(c$$593.push, c$$593, [e$$377], JAM.policy.p3);
                }
                v2757 = h$$178;
                h$$178 = h$$178 - 1;
              } while (v2757);
              return c$$593;
            } catch (f$$211) {
            }
            return null;
          }
          return;
        }
        function v1960(b$$722, c$$592) {
          var v9327 = a$$744;
          if (v9327) {
            v9327 = a$$744.length > 0;
          }
          if (v9327) {
            var e$$376;
            var h$$177 = a$$744.length - 1;
            try {
              var v2761 = h$$177;
              h$$177 = h$$177 - 1;
              do {
                e$$376 = a$$744[h$$177];
                if (e$$376[b$$722] === c$$592) {
                  return e$$376;
                }
                v2761 = h$$177;
                h$$177 = h$$177 - 1;
              } while (v2761);
            } catch (f$$210) {
            }
            return null;
          }
          return;
        }
        function v1959(b$$721, c$$591) {
          var v9328 = a$$744;
          if (v9328) {
            v9328 = a$$744.length > 0;
          }
          if (v9328) {
            var e$$375 = [];
            var h$$176;
            var f$$209 = a$$744.length - 1;
            try {
              var v2764 = f$$209;
              f$$209 = f$$209 - 1;
              do {
                h$$176 = a$$744[f$$209];
                var v9329 = h$$176[b$$721] === c$$591;
                if (v9329) {
                  JAM.call(e$$375.push, e$$375, [h$$176], JAM.policy.p3);
                }
                v2764 = f$$209;
                f$$209 = f$$209 - 1;
              } while (v2764);
              JAM.call(e$$375.reverse, e$$375, [], JAM.policy.p3);
              return e$$375;
            } catch (o$$39) {
            }
            return null;
          }
          return;
        }
        var a$$744 = [];
        a$$744.getNodesByAttribute = v1959;
        a$$744.getNodeByAttribute = v1960;
        a$$744.getNodesByValue = v1961;
        a$$744.contains = v1962;
        a$$744.indexOf = v1963;
        a$$744.SortByAttribute = v1966;
        a$$744.SortByValue = v1969;
        a$$744.SortByNode = v1972;
        return a$$744;
      }
      return{activate:v1973};
    }
    function v1958(a$$743, b$$720) {
      if (b$$720.attributes.length > 0) {
        var c$$590 = b$$720.attributes.length - 1;
        var e$$374;
        a$$743._attributes = [];
        var v2767 = c$$590;
        c$$590 = c$$590 - 1;
        do {
          var v19434 = String(b$$720.attributes[c$$590].name);
          e$$374 = String(JAM.call(v19434.replace, v19434, [/-/g, "_"], JAM.policy.p3));
          var v15105 = a$$743._attributes;
          JAM.call(v15105.push, v15105, [e$$374], JAM.policy.p3);
          var v30937 = JAM.call(k$$87, null, [b$$720.attributes[c$$590].value], JAM.policy.p3);
          JAM.set(a$$743, e$$374, v30937, JAM.policy.p2);
          v2767 = c$$590;
          c$$590 = c$$590 - 1;
        } while (v2767);
      }
      return;
    }
    function v1957(a$$742) {
      return JAM.call(a$$742.replace, a$$742, [/^\s+|\s+$/gm, ""], JAM.policy.p3);
    }
    try {
      if (!c$$589) {
        return null;
      }
      var b$$719 = {typeOf:"JSXBObject"};
      var v2770;
      if (c$$589.nodeType == 9) {
        v2770 = c$$589.documentElement;
      } else {
        v2770 = c$$589;
      }
      var f$$208 = v2770;
      var v2771 = f$$208.nodeName;
      if (!v2771) {
        v2771 = "";
      }
      b$$719.RootName = v2771;
      var v9335 = c$$589.nodeType == 3;
      if (!v9335) {
        v9335 = c$$589.nodeType == 4;
      }
      if (v9335) {
        return c$$589.nodeValue;
      }
      var k$$87 = v1957;
      var l$$92 = v1958;
      v1974();
      var p$$59 = v1987;
      var g$$212 = v1988;
      JAM.call(g$$212, null, [b$$719, f$$208], JAM.policy.p3);
      f$$208 = c$$589 = null;
      return b$$719;
    } catch (m$$62) {
      return null;
    }
    return;
  }
  function a$$740(a$$741) {
    var b$$718 = "";
    var v9336 = a$$741;
    if (v9336) {
      v9336 = typeof a$$741 === "string";
    }
    var v2773 = v9336;
    if (v2773) {
      b$$718 = a$$741;
    }
    return JAM.call(/^((-)?([0-9]*)((\.{0,1})([0-9]+))?$)/.test, /^((-)?([0-9]*)((\.{0,1})([0-9]+))?$)/, [b$$718], JAM.policy.p3);
  }
  return{xmlToJSON:v1989, textToXML:v1990};
}
function v1956() {
  function v1955(a$$739, b$$717, c$$588) {
    function v1954() {
      return JAM.call(b$$717.getRoot, b$$717, [], JAM.policy.p3);
    }
    function v1953() {
      return[h$$171, n$$106];
    }
    this.getCanvasSize = v1953;
    this.getRoot = v1954;
    if (JAM.call(b$$717.getValidate, b$$717, [], JAM.policy.p3)) {
      JAM.call(a$$739.draw, a$$739, [{type:"text", x:0, y:a$$739.canvasSize[1] / 3, text:JAM.call(b$$717.getValidate, b$$717, [], JAM.policy.p3)}], JAM.policy.p3);
    } else {
      i$$235 = a$$739;
      a$$739 = JAM.call(b$$717.getRoot, b$$717, [], JAM.policy.p3);
      var f$$207 = JAM.call(b$$717.getNewickLen, b$$717, [], JAM.policy.p3);
      h$$171 = i$$235.canvasSize[0];
      n$$106 = i$$235.canvasSize[1];
      E$$4 = h$$171 / 2;
      r$$29 = n$$106 / 2;
      var v2777 = Math.min;
      o$$36 = JAM.call(v2777.apply, v2777, [null, [h$$171, n$$106]], JAM.policy.p3);
      var v2779;
      if (e$$368.bufferRadius > 1) {
        v2779 = e$$368.bufferRadius;
      } else {
        var v9339 = Smits.Common;
        v2779 = JAM.call(v9339.roundFloat, v9339, [o$$36 * e$$368.bufferRadius, 4], JAM.policy.p3);
      }
      c$$588 = v2779;
      C$$4 = e$$368.bufferAngle;
      z$$9 = e$$368.innerCircleRadius;
      D$$4 = e$$368.initStartAngle;
      v$$13 = JAM.call(Math.round, Math, [(o$$36 - c$$588 - z$$9) / 2], JAM.policy.p3);
      q$$24 = (v$$13 - z$$9) / f$$207;
      var v2782 = Smits.Common;
      u$$18 = JAM.call(v2782.roundFloat, v2782, [(360 - C$$4) / JAM.call(a$$739.getCountAllChildren, a$$739, [], JAM.policy.p3), 4], JAM.policy.p3);
      p$$57(a$$739, z$$9);
      w$$19 = v$$13 + x$$75 + e$$368.bufferOuterLabels;
      if (Smits.PhyloCanvas.Render.Parameters.integratedBinaryCharts.length) {
        c$$588 = Smits.PhyloCanvas.Render.Parameters.integratedBinaryCharts;
        var g$$211;
        for (g$$211 in c$$588) {
          var v19438;
          if (c$$588[g$$211].thickness) {
            v19438 = c$$588[g$$211].thickness;
          } else {
            v19438 = Smits.PhyloCanvas.Render.Parameters.binaryChartThickness;
          }
          var v9347 = w$$19 - v19438;
          var v15119;
          if (c$$588[g$$211].bufferInner) {
            v15119 = c$$588[g$$211].bufferInner;
          } else {
            v15119 = Smits.PhyloCanvas.Render.Parameters.binaryChartBufferInner;
          }
          w$$19 = d$$423(v9347 - v15119, c$$588[g$$211].chart, c$$588[g$$211]);
        }
      }
      w$$19 = m$$58();
      if (Smits.PhyloCanvas.Render.Parameters.binaryCharts.length) {
        c$$588 = Smits.PhyloCanvas.Render.Parameters.binaryCharts;
        for (g$$211 in c$$588) {
          w$$19 = d$$423(w$$19, c$$588[g$$211].chart, c$$588[g$$211]);
        }
      }
      if (Smits.PhyloCanvas.Render.Parameters.barCharts.length) {
        c$$588 = Smits.PhyloCanvas.Render.Parameters.barCharts;
        for (g$$211 in c$$588) {
          w$$19 = j$$120(w$$19, c$$588[g$$211].chart, c$$588[g$$211]);
        }
      }
    }
    return;
  }
  function a$$731(a$$732, d$$424) {
    d$$424 = d$$424 + D$$4;
    var v9354 = Smits.Common;
    var v2800 = JAM.call(v9354.roundFloat, v9354, [E$$4 + a$$732 * JAM.call(Math.sin, Math, [d$$424 * F$$4], JAM.policy.p3), 4], JAM.policy.p3);
    var v9356 = Smits.Common;
    return[v2800, JAM.call(v9356.roundFloat, v9356, [r$$29 + a$$732 * JAM.call(Math.cos, Math, [d$$424 * F$$4], JAM.policy.p3), 4], JAM.policy.p3)];
  }
  function c$$583(a$$733) {
    a$$733 = k$$85(90 - a$$733 - D$$4);
    var v9359 = a$$733 > 90;
    if (v9359) {
      v9359 = a$$733 < 270;
    }
    if (v9359) {
      a$$733 = a$$733 + 180;
      var d$$425 = "end";
    } else {
      d$$425 = "start";
    }
    return[a$$733, d$$425];
  }
  function b$$710(d$$426, b$$711, c$$584, e$$369) {
    var i$$236 = a$$731(d$$426, b$$711);
    var h$$172 = a$$731(d$$426, c$$584);
    var j$$121 = [];
    var f$$204 = 0;
    var v2804;
    if (JAM.call(Math.abs, Math, [k$$85(c$$584 - b$$711)], JAM.policy.p3) > 180) {
      v2804 = 1;
    } else {
      v2804 = -1;
    }
    b$$711 = v2804;
    var v9361 = e$$369;
    if (v9361) {
      v9361 = e$$369.invertSecant;
    }
    var v2805 = v9361;
    if (v2805) {
      b$$711 = b$$711 * -1;
      f$$204 = 1;
    }
    var v9362 = !e$$369;
    if (!v9362) {
      v9362 = !e$$369.noMove;
    }
    var v2806 = v9362;
    if (v2806) {
      JAM.call(j$$121.push, j$$121, ["M"], JAM.policy.p3);
    }
    var v2807 = i$$236[0];
    var v2808 = i$$236[1];
    var v9363;
    if (b$$711 < 1) {
      v9363 = 0;
    } else {
      v9363 = 1;
    }
    JAM.call(j$$121.push, j$$121, [v2807, v2808, "A", d$$426, d$$426, 0, v9363, f$$204, h$$172[0], h$$172[1]], JAM.policy.p3);
    return j$$121;
  }
  function f$$203(d$$427, b$$712, c$$585, e$$370) {
    var i$$237 = [];
    b$$712 = a$$731(b$$712, d$$427);
    d$$427 = a$$731(c$$585, d$$427);
    var v9364 = !e$$370;
    if (!v9364) {
      v9364 = !e$$370.noMove;
    }
    var v2812 = v9364;
    if (v2812) {
      JAM.call(i$$237.push, i$$237, ["M"], JAM.policy.p3);
    }
    JAM.call(i$$237.push, i$$237, [b$$712[0], b$$712[1], "L", d$$427[0], d$$427[1]], JAM.policy.p3);
    return i$$237;
  }
  function k$$85(a$$734) {
    var v9365 = a$$734 > 360;
    if (!v9365) {
      v9365 = a$$734 < 0;
    }
    var v2818 = v9365;
    for (;v2818;) {
      var v2817;
      if (a$$734 > 360) {
        v2817 = a$$734 = a$$734 - 360;
      } else {
        var v9366 = a$$734 < 0;
        if (v9366) {
          v9366 = a$$734 = a$$734 + 360;
        }
        v2817 = v9366;
      }
      v2817;
      var v9368 = a$$734 > 360;
      if (!v9368) {
        v9368 = a$$734 < 0;
      }
      v2818 = v9368;
    }
    return a$$734;
  }
  function l$$90(a$$735, d$$428, c$$586, e$$371) {
    var v9369 = !d$$428;
    if (v9369) {
      v9369 = a$$735.length > 1;
    }
    var v2819 = v9369;
    if (v2819) {
      e$$371 = a$$735[3];
      c$$586 = a$$735[2];
      d$$428 = a$$735[1];
      a$$735 = a$$735[0];
    }
    return g$$209("M", b$$710(a$$735, c$$586, e$$371, {noMove:1, invertSecant:0}), "L", b$$710(d$$428, e$$371, c$$586, {noMove:1, invertSecant:1}), "Z");
  }
  function p$$57(d$$429, h$$173) {
    var v2822 = d$$429.len;
    if (v2822) {
      var v9372;
      if (B$$5) {
        v9372 = A$$5 = C$$4 || 1;
      } else {
        var v15137 = d$$429.children.length == 0;
        if (v15137) {
          var v19450 = Smits.Common;
          v15137 = A$$5 = JAM.call(v19450.roundFloat, v19450, [A$$5 + u$$18, 4], JAM.policy.p3);
        }
        v9372 = v15137;
      }
      v9372;
    }
    if (d$$429.children.length > 0) {
      var j$$122 = [];
      var o$$37;
      var n$$107;
      var k$$86;
      o$$37 = h$$173;
      var v15139 = Smits.Common;
      n$$107 = h$$173 = h$$173 + JAM.call(v15139.roundFloat, v15139, [q$$24 * d$$429.len, 4], JAM.policy.p3);
      var v9375 = d$$429.children;
      if (v9375) {
        v9375 = d$$429.children.length;
      }
      if (v9375) {
        var l$$91 = 0;
        var v2825 = l$$91 < d$$429.children.length;
        for (;v2825;) {
          var m$$59 = p$$57(d$$429.children[l$$91], h$$173);
          var v2824 = m$$59 > 0;
          if (v2824) {
            JAM.call(j$$122.push, j$$122, [m$$59], JAM.policy.p3);
          }
          l$$91++;
          v2825 = l$$91 < d$$429.children.length;
        }
      }
      var v2827 = Smits.Common;
      var v9379 = Math.min;
      l$$91 = JAM.call(v2827.roundFloat, v2827, [JAM.call(v9379.apply, v9379, [null, j$$122], JAM.policy.p3), 4], JAM.policy.p3);
      var v2829 = Smits.Common;
      var v9380 = Math.max;
      j$$122 = JAM.call(v2829.roundFloat, v2829, [JAM.call(v9380.apply, v9380, [null, j$$122], JAM.policy.p3), 4], JAM.policy.p3);
      var v2831 = d$$429.level != 0;
      if (v2831) {
        JAM.call(i$$235.draw, i$$235, [JAM.new(Smits.PhyloCanvas.Render.Path, [g$$209("M", a$$731(h$$173 + .01, l$$91), "L", b$$710(h$$173, l$$91, j$$122, {noMove:!0}), "L", a$$731(h$$173 + .01, j$$122))])], JAM.policy.p3);
      }
      var v2832 = d$$429.len;
      if (v2832) {
        var v15146 = Smits.Common;
        k$$86 = JAM.call(v15146.roundFloat, v15146, [l$$91 + (j$$122 - l$$91) / 2, 4], JAM.policy.p3);
        JAM.call(i$$235.draw, i$$235, [JAM.new(Smits.PhyloCanvas.Render.Path, [f$$203(k$$86, o$$37, n$$107)])], JAM.policy.p3);
      }
    } else {
      d$$429.y = A$$5;
      JAM.call(s$$34.push, s$$34, [d$$429], JAM.policy.p3);
      o$$37 = h$$173;
      var v27743 = Smits.Common;
      n$$107 = JAM.call(v27743.roundFloat, v27743, [h$$173 + q$$24 * d$$429.len], JAM.policy.p3);
      k$$86 = A$$5;
      JAM.call(i$$235.draw, i$$235, [JAM.new(Smits.PhyloCanvas.Render.Path, [f$$203(k$$86, o$$37, n$$107)])], JAM.policy.p3);
      JAM.call(i$$235.draw, i$$235, [JAM.new(Smits.PhyloCanvas.Render.Path, [f$$203(k$$86, n$$107, v$$13), {attr:Smits.PhyloCanvas.Render.Style.connectedDash}])], JAM.policy.p3);
      if (d$$429.name) {
        o$$37 = a$$731(v$$13 + e$$368.bufferInnerLabels, k$$86);
        l$$91 = c$$583(k$$86);
        j$$122 = l$$91[0];
        l$$91 = l$$91[1];
        m$$59 = {};
        var v2834 = d$$429.style;
        if (v2834) {
          var v9384 = Smits.Common;
          var v15149 = Smits.PhyloCanvas.Render.Style;
          JAM.call(v9384.apply, v9384, [m$$59, JAM.call(v15149.getStyle, v15149, [d$$429.style, "text"], JAM.policy.p3)], JAM.policy.p3);
        }
        m$$59["text-anchor"] = l$$91;
        if (d$$429.uri) {
          m$$59.href = d$$429.uri;
        }
        if (d$$429.description) {
          m$$59.title = d$$429.description;
        }
        j$$122 = JAM.call(i$$235.draw, i$$235, [JAM.new(Smits.PhyloCanvas.Render.Text, [o$$37[0], o$$37[1], d$$429.name, {attr:m$$59, rotate:[j$$122, o$$37[0], o$$37[1]]}])], JAM.policy.p3);
        var v2838 = d$$429.bgStyle;
        if (v2838) {
          JAM.call(t$$30.push, t$$30, [[d$$429.bgStyle, k$$86]], JAM.policy.p3);
        }
        o$$37 = a$$731(n$$107, k$$86);
        var v2839 = Smits.PhyloCanvas.Render.Parameters.mouseRollOver;
        if (v2839) {
          var v9393 = Smits.Common;
          JAM.call(v9393.addRaphEventHandler, v9393, [j$$122[0], "mouseover", Smits.PhyloCanvas.Render.Parameters.mouseRollOver, {svg:i$$235, node:d$$429, x:o$$37[0], y:o$$37[1], textEl:j$$122[0]}], JAM.policy.p3);
        }
        var v2840 = Smits.PhyloCanvas.Render.Parameters.mouseRollOut;
        if (v2840) {
          var v9398 = Smits.Common;
          JAM.call(v9398.addRaphEventHandler, v9398, [j$$122[0], "mouseout", Smits.PhyloCanvas.Render.Parameters.mouseRollOut, {svg:i$$235, node:d$$429, x:o$$37[0], y:o$$37[1], textEl:j$$122[0]}], JAM.policy.p3);
        }
        var v2841 = Smits.PhyloCanvas.Render.Parameters.onClickAction;
        if (v2841) {
          var v9403 = Smits.Common;
          JAM.call(v9403.addRaphEventHandler, v9403, [j$$122[0], "click", Smits.PhyloCanvas.Render.Parameters.onClickAction, {svg:i$$235, node:d$$429, x:o$$37[0], y:o$$37[1], textEl:j$$122[0]}], JAM.policy.p3);
        }
        x$$75 = JAM.call(Math.max, Math, [j$$122[1], x$$75], JAM.policy.p3);
      }
    }
    if (B$$5) {
      B$$5 = !1;
    }
    return k$$86;
  }
  function g$$209(a$$736) {
    var d$$430 = a$$736;
    var b$$713 = 1;
    var v2846 = b$$713 < arguments.length;
    for (;v2846;) {
      d$$430 = JAM.call(d$$430.concat, d$$430, [arguments[b$$713]], JAM.policy.p3);
      b$$713++;
      v2846 = b$$713 < arguments.length;
    }
    return d$$430;
  }
  function m$$58() {
    var a$$737 = [];
    if (t$$30.length > 0) {
      if (Smits.PhyloCanvas.Render.Style.jsphylosvgGradientList) {
        var d$$431 = 0;
        var v2852 = d$$431 < Smits.PhyloCanvas.Render.Style.jsphylosvgGradientList.length;
        for (;v2852;) {
          var b$$714 = Smits.PhyloCanvas.Render.Style.jsphylosvgGradientList[d$$431];
          var v2848 = Smits.Common;
          b$$714 = JAM.call(v2848.createGradientEl, v2848, [b$$714, Smits.PhyloCanvas.Render.Style[b$$714], [E$$4, r$$29, v$$13 + x$$75 + e$$368.bufferOuterLabels]], JAM.policy.p3);
          var v2851 = i$$235.svg.defs;
          JAM.call(v2851.appendChild, v2851, [b$$714], JAM.policy.p3);
          d$$431++;
          v2852 = d$$431 < Smits.PhyloCanvas.Render.Style.jsphylosvgGradientList.length;
        }
      }
      d$$431 = 0;
      var v2855 = d$$431 < t$$30.length;
      for (;v2855;) {
        var v2854;
        var v15176 = d$$431 != t$$30.length - 1;
        if (v15176) {
          v15176 = t$$30[d$$431][0] == t$$30[d$$431 + 1][0];
        }
        if (v15176) {
          var v9418 = t$$30[d$$431 + 1];
          var v15178;
          if (t$$30[d$$431][2]) {
            v15178 = t$$30[d$$431][2];
          } else {
            v15178 = t$$30[d$$431][1];
          }
          v2854 = v9418[2] = v15178;
        } else {
          var v27748 = v$$13 + x$$75 + e$$368.bufferOuterLabels;
          var v28696;
          if (t$$30[d$$431][2]) {
            v28696 = t$$30[d$$431][2] - u$$18 / 2;
          } else {
            v28696 = t$$30[d$$431][1] - u$$18 / 2;
          }
          a$$737 = l$$90(v$$13, v27748, v28696, t$$30[d$$431][1] + u$$18 / 2);
          var v27751 = Smits.PhyloCanvas.Render.Style;
          b$$714 = JAM.call(v27751.getStyle, v27751, [t$$30[d$$431][0], "textSecantBg"], JAM.policy.p3);
          var v27753 = Smits.PhyloCanvas.Render.Path;
          var v29337;
          if (b$$714.type) {
            v29337 = {};
          } else {
            v29337 = b$$714;
          }
          a$$737 = JAM.call(i$$235.draw, i$$235, [JAM.new(v27753, [a$$737, {attr:v29337}])], JAM.policy.p3);
          var v26242 = b$$714.type;
          if (v26242) {
            v26242 = b$$714.type == "radialGradient";
          }
          var v24101 = v26242;
          if (v24101) {
            var v26243 = a$$737[0].node;
            JAM.call(v26243.setAttribute, v26243, ["fill", "url(#" + b$$714.name + ")"], JAM.policy.p3);
          }
          var v24102 = b$$714.type;
          if (v24102) {
            v24102 = b$$714.type == "radialGradient";
          }
          var v19482 = v24102;
          if (v19482) {
            var v24103 = a$$737[0].node;
            JAM.call(v24103.setAttribute, v24103, ["stroke", "none"], JAM.policy.p3);
          }
          var v15179 = a$$737[0];
          v2854 = JAM.call(v15179.toBack, v15179, [], JAM.policy.p3);
        }
        v2854;
        d$$431++;
        v2855 = d$$431 < t$$30.length;
      }
    }
    a$$737 = l$$90(v$$13, v$$13 + x$$75 + e$$368.bufferOuterLabels, (C$$4 || 1) - u$$18 / 2, 360 - u$$18 / 2);
    a$$737 = JAM.call(i$$235.draw, i$$235, [JAM.new(Smits.PhyloCanvas.Render.Path, [a$$737, {attr:Smits.PhyloCanvas.Render.Style.textSecantBg}])], JAM.policy.p3);
    var v2861 = a$$737[0];
    JAM.call(v2861.toBack, v2861, [], JAM.policy.p3);
    return v$$13 + x$$75 + e$$368.bufferOuterLabels;
  }
  function d$$423(d$$432, b$$715, e$$372) {
    var v2864;
    var v15182 = e$$372;
    if (v15182) {
      v15182 = e$$372.bufferInner;
    }
    if (v15182) {
      v2864 = parseFloat(e$$372.bufferInner);
    } else {
      v2864 = Smits.PhyloCanvas.Render.Parameters.binaryChartBufferInner;
    }
    var j$$123 = v2864;
    var v9431;
    var v19486 = e$$372;
    if (v19486) {
      v19486 = e$$372.bufferSiblings;
    }
    if (v19486) {
      v9431 = e$$372.bufferSiblings * u$$18;
    } else {
      v9431 = 0;
    }
    var v2865 = v9431;
    var v9432;
    if (Smits.PhyloCanvas.Render.Parameters.binaryChartBufferSiblings < 1) {
      v9432 = u$$18 * Smits.PhyloCanvas.Render.Parameters.binaryChartBufferSiblings;
    } else {
      v9432 = Smits.PhyloCanvas.Render.Parameters.binaryChartBufferSiblings;
    }
    var h$$174 = v2865 | v9432;
    var v2867;
    var v15189 = e$$372;
    if (v15189) {
      v15189 = e$$372.thickness;
    }
    if (v15189) {
      v2867 = parseFloat(e$$372.thickness);
    } else {
      v2867 = Smits.PhyloCanvas.Render.Parameters.binaryChartThickness;
    }
    var f$$205 = v2867;
    var v9436;
    var v19491 = e$$372;
    if (v19491) {
      v19491 = e$$372.disjointed;
    }
    if (v19491) {
      v9436 = e$$372.disjointed;
    } else {
      v9436 = 0;
    }
    var o$$38 = v9436 | Smits.PhyloCanvas.Render.Parameters.binaryChartDisjointed;
    var v2870;
    var v15193 = e$$372;
    if (v15193) {
      v15193 = e$$372.isInternal;
    }
    if (v15193) {
      v2870 = e$$372.isInternal;
    } else {
      v2870 = !1;
    }
    e$$372 = v2870;
    var n$$108 = !0;
    var g$$210;
    var m$$60 = 0;
    var v2890 = m$$60 < s$$34.length;
    for (;v2890;) {
      var q$$25 = s$$34[m$$60];
      var v19493 = !s$$34[m$$60 + 1];
      if (!v19493) {
        v19493 = q$$25.chart[b$$715] !== s$$34[m$$60 + 1].chart[b$$715];
      }
      var v15194 = v19493;
      if (!v15194) {
        v15194 = o$$38;
      }
      var v9440 = v15194;
      if (v9440) {
        v9440 = q$$25.chart[b$$715] != "none";
      }
      if (v9440) {
        var v2871 = Smits.PhyloCanvas.Render.Style;
        var p$$58 = JAM.call(v2871.getStyle, v2871, [q$$25.chart[b$$715], "textSecantBg"], JAM.policy.p3);
        var v2873;
        if (e$$372) {
          var v9443 = v$$13 - j$$123 - f$$205;
          var v9444 = v$$13 - j$$123;
          var v24112;
          if (g$$210) {
            v24112 = g$$210;
          } else {
            v24112 = q$$25.y;
          }
          var v15198 = v24112 - u$$18 / 2;
          var v19498;
          var v26253 = n$$108;
          if (v26253) {
            v26253 = !o$$38;
          }
          if (v26253) {
            v19498 = 0;
          } else {
            v19498 = h$$174 / 2;
          }
          var v9445 = v15198 + v19498;
          var v15200 = q$$25.y + u$$18 / 2;
          var v19501;
          var v26254 = m$$60 == s$$34.length - 1;
          if (v26254) {
            v26254 = !o$$38;
          }
          if (v26254) {
            v19501 = 0;
          } else {
            v19501 = h$$174 / 2;
          }
          v2873 = [v9443, v9444, v9445, v15200 - v19501];
        } else {
          var v9447 = d$$432 + j$$123;
          var v9448 = d$$432 + j$$123 + f$$205;
          var v24115;
          if (g$$210) {
            v24115 = g$$210;
          } else {
            v24115 = q$$25.y;
          }
          var v15203 = v24115 - u$$18 / 2;
          var v19504;
          var v26255 = n$$108;
          if (v26255) {
            v26255 = !o$$38;
          }
          if (v26255) {
            v19504 = 0;
          } else {
            v19504 = h$$174 / 2;
          }
          var v9449 = v15203 + v19504;
          var v15205 = q$$25.y + u$$18 / 2;
          var v19507;
          var v26256 = m$$60 == s$$34.length - 1;
          if (v26256) {
            v26256 = !o$$38;
          }
          if (v26256) {
            v19507 = 0;
          } else {
            v19507 = h$$174 / 2;
          }
          v2873 = [v9447, v9448, v9449, v15205 - v19507];
        }
        g$$210 = v2873;
        if (p$$58.label) {
          var v2874 = Smits.PhyloCanvas.Render.Style;
          n$$108 = JAM.call(v2874.getStyle, v2874, [p$$58.labelStyle, "text"], JAM.policy.p3);
          q$$25 = a$$731((g$$210[0] + g$$210[1]) / 2, (g$$210[2] + g$$210[3]) / 2);
          var r$$30 = c$$583((g$$210[2] + g$$210[3]) / 2);
          var v9455 = r$$30[0];
          var v15214;
          if (n$$108.rotate) {
            v15214 = parseFloat(n$$108.rotate);
          } else {
            v15214 = 0;
          }
          r$$30 = k$$85(v9455 + v15214);
          var t$$31 = k$$85(90 - (g$$210[2] + g$$210[3]) / 2 - D$$4);
          var v9458 = t$$31 > 90;
          if (v9458) {
            v9458 = t$$31 < 270;
          }
          var v2881 = v9458;
          if (v2881) {
            r$$30 = r$$30 + 180;
          }
          var v2882 = n$$108["text-anchor"];
          if (!v2882) {
            n$$108["text-anchor"] = "middle";
          }
          var v2883 = JAM.call(i$$235.draw, i$$235, [JAM.new(Smits.PhyloCanvas.Render.Text, [q$$25[0], q$$25[1], p$$58.label, {attr:n$$108, rotate:r$$30}])], JAM.policy.p3)[0];
          JAM.call(v2883.toBack, v2883, [], JAM.policy.p3);
        }
        var v2885 = p$$58.borderStyle;
        if (v2885) {
          var v15217 = Smits.PhyloCanvas.Render.Style;
          n$$108 = JAM.call(v15217.getStyle, v15217, [p$$58.borderStyle, "textSecantBg"], JAM.policy.p3);
          var v26258 = Smits.PhyloCanvas.Render.Path;
          var v29338;
          if (n$$108.fullsize) {
            v29338 = g$$210[1];
          } else {
            v29338 = g$$210[0];
          }
          var v15219 = JAM.call(i$$235.draw, i$$235, [JAM.new(v26258, [l$$90([v$$13, v29338, g$$210[2], g$$210[3]]), {attr:n$$108}])], JAM.policy.p3)[0];
          JAM.call(v15219.toBack, v15219, [], JAM.policy.p3);
        }
        var v2886 = JAM.call(i$$235.draw, i$$235, [JAM.new(Smits.PhyloCanvas.Render.Path, [l$$90(g$$210), {attr:p$$58}])], JAM.policy.p3)[0];
        JAM.call(v2886.toBack, v2886, [], JAM.policy.p3);
        g$$210 = 0;
      } else {
        if (!g$$210) {
          g$$210 = q$$25.y;
        }
        var v2888 = q$$25.chart[b$$715] == "none";
        if (v2888) {
          g$$210 = 0;
        }
      }
      n$$108 = !1;
      m$$60++;
      v2890 = m$$60 < s$$34.length;
    }
    var v2891;
    if (e$$372) {
      v2891 = d$$432;
    } else {
      v2891 = d$$432 + j$$123 + f$$205;
    }
    return v2891;
  }
  function j$$120(d$$433, a$$738, b$$716) {
    var c$$587 = [];
    var v2892;
    var v15222 = b$$716;
    if (v15222) {
      v15222 = b$$716.bufferInner;
    }
    if (v15222) {
      v2892 = parseFloat(b$$716.bufferInner);
    } else {
      v2892 = Smits.PhyloCanvas.Render.Parameters.barChartBufferInner;
    }
    var e$$373 = v2892;
    var v2893;
    var v15224 = b$$716;
    if (v15224) {
      v15224 = b$$716.height;
    }
    if (v15224) {
      v2893 = parseFloat(b$$716.height);
    } else {
      var v9469;
      if (Smits.PhyloCanvas.Render.Parameters.barChartHeight) {
        v9469 = Smits.PhyloCanvas.Render.Parameters.barChartHeight;
      } else {
        v9469 = 0;
      }
      v2893 = v9469;
    }
    var j$$124 = v2893;
    var v2894;
    var v15227 = b$$716;
    if (v15227) {
      v15227 = b$$716.width;
    }
    if (v15227) {
      var v9471;
      if (parseFloat(b$$716.width) < 1) {
        v9471 = u$$18 * parseFloat(b$$716.width);
      } else {
        v9471 = parseFloat(b$$716.width);
      }
      v2894 = v9471;
    } else {
      var v15232;
      if (Smits.PhyloCanvas.Render.Parameters.barChartWidth < 1) {
        v15232 = u$$18 * Smits.PhyloCanvas.Render.Parameters.barChartWidth;
      } else {
        v15232 = Smits.PhyloCanvas.Render.Parameters.barChartWidth;
      }
      v2894 = 0 | v15232;
    }
    b$$716 = v2894;
    var h$$175 = 0;
    var f$$206 = 0;
    var v2896 = f$$206 < s$$34.length;
    for (;v2896;) {
      JAM.call(c$$587.push, c$$587, [s$$34[f$$206].chart[a$$738]], JAM.policy.p3);
      f$$206++;
      v2896 = f$$206 < s$$34.length;
    }
    var v2897 = Math.max;
    c$$587 = JAM.call(v2897.apply, v2897, [null, c$$587], JAM.policy.p3);
    var v2898 = Smits.Common;
    h$$175 = JAM.call(v2898.roundFloat, v2898, [j$$124 / c$$587, 4], JAM.policy.p3);
    f$$206 = 0;
    var v2900 = f$$206 < s$$34.length;
    for (;v2900;) {
      c$$587 = s$$34[f$$206];
      var v9478 = c$$587.chart[a$$738] > 0;
      if (v9478) {
        var v19530 = Smits.PhyloCanvas.Render.Path;
        var v19531 = l$$90(d$$433 + e$$373, d$$433 + e$$373 + h$$175 * c$$587.chart[a$$738], c$$587.y - b$$716 / 2, c$$587.y + b$$716 / 2);
        var v26273 = Smits.PhyloCanvas.Render.Style;
        JAM.call(i$$235.draw, i$$235, [JAM.new(v19530, [v19531, {attr:JAM.call(v26273.getStyle, v26273, [c$$587.chart[a$$738], "barChart"], JAM.policy.p3)}])], JAM.policy.p3);
      }
      f$$206++;
      v2900 = f$$206 < s$$34.length;
    }
    return d$$433 + e$$373 + j$$124;
  }
  var i$$235;
  var e$$368 = Smits.PhyloCanvas.Render.Parameters.Circular;
  var h$$171;
  var n$$106;
  var o$$36;
  var q$$24;
  var u$$18;
  var z$$9;
  var B$$5 = !0;
  var A$$5 = 0;
  var E$$4;
  var r$$29;
  var v$$13;
  var s$$34 = [];
  var t$$30 = [];
  var C$$4;
  var w$$19;
  var x$$75 = 0;
  var D$$4;
  var F$$4 = Math.PI / 180;
  return v1955;
}
function v1952() {
  function v1951(q$$23, m$$57) {
    function v1950() {
      return JAM.call(m$$57.getRoot, m$$57, [], JAM.policy.p3);
    }
    function v1949() {
      return[b$$706, f$$200];
    }
    this.getCanvasSize = v1949;
    this.getRoot = v1950;
    var v2904 = JAM.call(m$$57.getValidate, m$$57, [], JAM.policy.p3);
    if (v2904) {
      JAM.call(a$$730.draw, a$$730, [0, 0, JAM.call(m$$57.getValidate, m$$57, [], JAM.policy.p3)], JAM.policy.p3);
    }
    a$$730 = q$$23;
    var r$$28 = JAM.call(m$$57.getRoot, m$$57, [], JAM.policy.p3);
    var v$$12 = JAM.call(m$$57.getNewickLen, m$$57, [], JAM.policy.p3);
    b$$706 = a$$730.canvasSize[0];
    f$$200 = a$$730.canvasSize[1];
    h$$167 = c$$580.bufferX;
    n$$104 = c$$580.paddingX;
    o$$34 = c$$580.paddingY;
    g$$207 = c$$580.minHeightBetweenLeaves;
    d$$420 = o$$34;
    k$$84 = JAM.call(Math.round, Math, [(b$$706 - h$$167 - n$$104 * 2) / v$$12], JAM.policy.p3);
    var v9483 = f$$200 - o$$34 * 2;
    var v15240;
    if (c$$580.showScaleBar) {
      v15240 = JAM.call(r$$28.getCountAllChildren, r$$28, [], JAM.policy.p3);
    } else {
      v15240 = JAM.call(r$$28.getCountAllChildren, r$$28, [], JAM.policy.p3) - 1;
    }
    l$$89 = JAM.call(Math.round, Math, [v9483 / v15240], JAM.policy.p3);
    var v2909 = l$$89 < g$$207;
    if (v2909) {
      l$$89 = g$$207;
    }
    p$$56 = JAM.call(Math.round, Math, [b$$706 - h$$167 - n$$104 * 2], JAM.policy.p3);
    var v9487 = Smits.PhyloCanvas.Render.Parameters.binaryCharts.length;
    if (!v9487) {
      v9487 = Smits.PhyloCanvas.Render.Parameters.barCharts.length;
    }
    if (v9487) {
      c$$580.alignRight = !0;
    }
    u$$17(r$$28, n$$104);
    var v2912 = c$$580.showScaleBar;
    if (v2912) {
      y = d$$420 + l$$89;
      e$$364 = c$$580.showScaleBar * k$$84;
      JAM.call(a$$730.draw, a$$730, [JAM.new(Smits.PhyloCanvas.Render.Line, [0, e$$364, y, y])], JAM.policy.p3);
      JAM.call(a$$730.draw, a$$730, [JAM.new(Smits.PhyloCanvas.Render.Text, [(0 + e$$364) / 2, y - 8, c$$580.showScaleBar])], JAM.policy.p3);
    }
    i$$231 = p$$56 + j$$117 + c$$580.bufferInnerLabels;
    if (Smits.PhyloCanvas.Render.Parameters.binaryCharts.length) {
      r$$28 = Smits.PhyloCanvas.Render.Parameters.binaryCharts;
      var s$$33;
      for (s$$33 in r$$28) {
        i$$231 = z$$8(i$$231, r$$28[s$$33].chart, r$$28[s$$33]);
      }
    }
    if (Smits.PhyloCanvas.Render.Parameters.barCharts.length) {
      r$$28 = Smits.PhyloCanvas.Render.Parameters.barCharts;
      for (s$$33 in r$$28) {
        B$$4(i$$231, r$$28[s$$33].chart, r$$28[s$$33]);
      }
    }
    return;
  }
  function B$$4(d$$422, c$$582, b$$709) {
    var e$$367 = [];
    var v2923;
    var v15249 = b$$709;
    if (v15249) {
      v15249 = b$$709.bufferInner;
    }
    if (v15249) {
      v2923 = b$$709.bufferInner;
    } else {
      v2923 = 0 | Smits.PhyloCanvas.Render.Parameters.barChartBufferInner;
    }
    var i$$234 = v2923;
    var v2924;
    var v15251 = b$$709;
    if (v15251) {
      v15251 = b$$709.height;
    }
    if (v15251) {
      v2924 = b$$709.height;
    } else {
      v2924 = 0 | Smits.PhyloCanvas.Render.Parameters.barChartHeight;
    }
    var h$$170 = v2924;
    var v2925;
    var v15253 = b$$709;
    if (v15253) {
      v15253 = b$$709.width;
    }
    if (v15253) {
      var v9497;
      if (b$$709.width < 1) {
        v9497 = l$$89 * b$$709.width;
      } else {
        v9497 = b$$709.width;
      }
      v2925 = v9497;
    } else {
      var v15256;
      if (Smits.PhyloCanvas.Render.Parameters.barChartWidth < 1) {
        v15256 = l$$89 * Smits.PhyloCanvas.Render.Parameters.barChartWidth;
      } else {
        v15256 = Smits.PhyloCanvas.Render.Parameters.barChartWidth;
      }
      v2925 = 0 | v15256;
    }
    b$$709 = v2925;
    var j$$119 = 0;
    var f$$202 = 0;
    var v2927 = f$$202 < q$$22.length;
    for (;v2927;) {
      JAM.call(e$$367.push, e$$367, [q$$22[f$$202].chart[c$$582]], JAM.policy.p3);
      f$$202++;
      v2927 = f$$202 < q$$22.length;
    }
    var v2928 = Math.max;
    e$$367 = JAM.call(v2928.apply, v2928, [null, e$$367], JAM.policy.p3);
    var v2929 = Smits.Common;
    j$$119 = JAM.call(v2929.roundFloat, v2929, [h$$170 / e$$367, 4], JAM.policy.p3);
    f$$202 = 0;
    var v2931 = f$$202 < q$$22.length;
    for (;v2931;) {
      e$$367 = q$$22[f$$202];
      var v15258 = Smits.PhyloCanvas.Render.Path;
      var v15259 = ["M", d$$422 + i$$234, e$$367.y - b$$709 / 2, "L", d$$422 + i$$234 + j$$119 * e$$367.chart[c$$582], e$$367.y - b$$709 / 2, "L", d$$422 + i$$234 + j$$119 * e$$367.chart[c$$582], e$$367.y + b$$709 / 2, "L", d$$422 + i$$234, e$$367.y + b$$709 / 2, "Z"];
      var v24163 = Smits.PhyloCanvas.Render.Style;
      JAM.call(a$$730.draw, a$$730, [JAM.new(v15258, [v15259, {attr:JAM.call(v24163.getStyle, v24163, [e$$367.chart[c$$582], "barChart"], JAM.policy.p3)}])], JAM.policy.p3);
      f$$202++;
      v2931 = f$$202 < q$$22.length;
    }
    return d$$422 + i$$234 + h$$170;
  }
  function z$$8(d$$421, c$$581, b$$708) {
    var v9506;
    var v19561 = b$$708;
    if (v19561) {
      v19561 = b$$708.bufferInner;
    }
    if (v19561) {
      v9506 = b$$708.bufferInner;
    } else {
      v9506 = 0;
    }
    var e$$366 = v9506 | Smits.PhyloCanvas.Render.Parameters.binaryChartBufferInner;
    var v9508;
    var v19563 = b$$708;
    if (v19563) {
      v19563 = b$$708.bufferSiblings;
    }
    if (v19563) {
      v9508 = b$$708.bufferSiblings * l$$89;
    } else {
      v9508 = 0;
    }
    var v2935 = v9508;
    var v9509;
    if (Smits.PhyloCanvas.Render.Parameters.binaryChartBufferSiblings < 1) {
      v9509 = l$$89 * Smits.PhyloCanvas.Render.Parameters.binaryChartBufferSiblings;
    } else {
      v9509 = Smits.PhyloCanvas.Render.Parameters.binaryChartBufferSiblings;
    }
    var i$$233 = v2935 | v9509;
    var v9510;
    var v19567 = b$$708;
    if (v19567) {
      v19567 = b$$708.thickness;
    }
    if (v19567) {
      v9510 = b$$708.thickness;
    } else {
      v9510 = 0;
    }
    b$$708 = v9510 | Smits.PhyloCanvas.Render.Parameters.binaryChartThickness;
    var h$$169 = 0;
    var v2940 = h$$169 < q$$22.length;
    for (;v2940;) {
      var j$$118 = q$$22[h$$169];
      var v9513 = Smits.PhyloCanvas.Render.Path;
      var v9514 = ["M", d$$421 + e$$366, j$$118.y - l$$89 / 2 + i$$233 / 2, "L", d$$421 + e$$366 + b$$708, j$$118.y - l$$89 / 2 + i$$233 / 2, "L", d$$421 + e$$366 + b$$708, j$$118.y + l$$89 / 2 - i$$233 / 2, "L", d$$421 + e$$366, j$$118.y + l$$89 / 2 - i$$233 / 2, "Z"];
      var v19580 = Smits.PhyloCanvas.Render.Style;
      JAM.call(a$$730.draw, a$$730, [JAM.new(v9513, [v9514, {attr:JAM.call(v19580.getStyle, v19580, [j$$118.chart[c$$581], "textSecantBg"], JAM.policy.p3)}])], JAM.policy.p3);
      h$$169++;
      v2940 = h$$169 < q$$22.length;
    }
    return d$$421 + e$$366 + b$$708;
  }
  function u$$17(b$$707, e$$365) {
    var v15280 = b$$707.len;
    if (v15280) {
      v15280 = m$$56 == !1;
    }
    var v9517 = v15280;
    if (v9517) {
      v9517 = b$$707.children.length == 0;
    }
    var v2942 = v9517;
    if (v2942) {
      var v9518 = Smits.Common;
      d$$420 = JAM.call(v9518.roundFloat, v9518, [d$$420 + l$$89, 4], JAM.policy.p3);
    }
    if (b$$707.children.length > 0) {
      var i$$232 = [];
      var h$$168;
      var f$$201;
      var o$$35;
      var n$$105;
      var v2943 = b$$707.len;
      if (v2943) {
        h$$168 = e$$365;
        var v24178 = Smits.Common;
        f$$201 = e$$365 = JAM.call(v24178.roundFloat, v24178, [e$$365 + k$$84 * b$$707.len, 4], JAM.policy.p3);
        n$$105 = o$$35 = d$$420 + JAM.call(b$$707.getMidbranchPosition, b$$707, [m$$56], JAM.policy.p3) * l$$89;
        JAM.call(a$$730.draw, a$$730, [JAM.new(Smits.PhyloCanvas.Render.Line, [h$$168, f$$201, o$$35, n$$105])], JAM.policy.p3);
      }
      if (b$$707.name) {
        h$$168 = {};
        var v2944 = Smits.PhyloCanvas.Render.Style;
        h$$168 = JAM.call(v2944.getStyle, v2944, ["bootstrap", "text"], JAM.policy.p3);
        if (b$$707.uri) {
          h$$168.href = b$$707.uri;
        }
        if (b$$707.description) {
          h$$168.title = b$$707.description;
        }
        var v2947;
        if (b$$707.level == 0) {
          v2947 = d$$420 + JAM.call(b$$707.getMidbranchPosition, b$$707, [m$$56], JAM.policy.p3) * l$$89;
        } else {
          v2947 = n$$105;
        }
        var g$$208 = v2947;
        JAM.call(a$$730.draw, a$$730, [JAM.new(Smits.PhyloCanvas.Render.Text, [(f$$201 || e$$365) + 5, g$$208, b$$707.name, {attr:h$$168}])], JAM.policy.p3);
      }
      var v9529 = b$$707.children;
      if (v9529) {
        v9529 = b$$707.children.length;
      }
      if (v9529) {
        h$$168 = 0;
        var v2951 = h$$168 < b$$707.children.length;
        for (;v2951;) {
          JAM.call(i$$232.push, i$$232, [u$$17(b$$707.children[h$$168], e$$365)], JAM.policy.p3);
          h$$168++;
          v2951 = h$$168 < b$$707.children.length;
        }
      }
      f$$201 = [];
      h$$168 = 0;
      var v2953 = h$$168 < i$$232.length;
      for (;v2953;) {
        var v9534 = i$$232[h$$168][0];
        if (v9534) {
          JAM.call(f$$201.push, f$$201, [i$$232[h$$168][0]], JAM.policy.p3);
        }
        var v9535 = i$$232[h$$168][1];
        if (v9535) {
          JAM.call(f$$201.push, f$$201, [i$$232[h$$168][1]], JAM.policy.p3);
        }
        h$$168++;
        v2953 = h$$168 < i$$232.length;
      }
      var v2954 = Math.min;
      i$$232 = JAM.call(v2954.apply, v2954, [null, f$$201], JAM.policy.p3);
      var v2955 = Math.max;
      f$$201 = JAM.call(v2955.apply, v2955, [null, f$$201], JAM.policy.p3);
      JAM.call(a$$730.draw, a$$730, [JAM.new(Smits.PhyloCanvas.Render.Path, [["M", e$$365 + 1E-4, i$$232, "L", e$$365, i$$232, "L", e$$365, f$$201, "L", e$$365 + 1E-4, f$$201], {attr:Smits.PhyloCanvas.Render.Style.line}])], JAM.policy.p3);
    } else {
      h$$168 = e$$365;
      var v2957 = Smits.Common;
      f$$201 = JAM.call(v2957.roundFloat, v2957, [e$$365 + k$$84 * b$$707.len, 2], JAM.policy.p3);
      n$$105 = o$$35 = d$$420;
      b$$707.y = d$$420;
      JAM.call(q$$22.push, q$$22, [b$$707], JAM.policy.p3);
      JAM.call(a$$730.draw, a$$730, [JAM.new(Smits.PhyloCanvas.Render.Line, [h$$168, f$$201, o$$35, n$$105])], JAM.policy.p3);
      var v2960 = c$$580.alignRight;
      if (v2960) {
        JAM.call(a$$730.draw, a$$730, [JAM.new(Smits.PhyloCanvas.Render.Path, [["M", f$$201, o$$35, "L", c$$580.alignPadding + p$$56, n$$105], {attr:Smits.PhyloCanvas.Render.Style.connectedDash}])], JAM.policy.p3);
      }
      if (b$$707.name) {
        h$$168 = {};
        var v2961 = b$$707.style;
        if (v2961) {
          var v9543 = Smits.PhyloCanvas.Render.Style;
          h$$168 = JAM.call(v9543.getStyle, v9543, [b$$707.style, "text"], JAM.policy.p3);
        }
        h$$168["text-anchor"] = "start";
        if (b$$707.uri) {
          h$$168.href = b$$707.uri;
        }
        if (b$$707.description) {
          h$$168.title = b$$707.description;
        }
        var v9545 = Smits.PhyloCanvas.Render.Text;
        var v15308;
        if (c$$580.alignRight) {
          v15308 = p$$56 + c$$580.bufferInnerLabels + c$$580.alignPadding;
        } else {
          v15308 = f$$201 + c$$580.bufferInnerLabels;
        }
        i$$232 = JAM.call(a$$730.draw, a$$730, [JAM.new(v9545, [v15308, n$$105, b$$707.name, {attr:h$$168}])], JAM.policy.p3);
        j$$117 = JAM.call(Math.max, Math, [i$$232[1], j$$117], JAM.policy.p3);
        var v2966 = Smits.PhyloCanvas.Render.Parameters.mouseRollOver;
        if (v2966) {
          var v9550 = Smits.Common;
          JAM.call(v9550.addRaphEventHandler, v9550, [i$$232[0], "mouseover", Smits.PhyloCanvas.Render.Parameters.mouseRollOver, {svg:a$$730, node:b$$707, x:f$$201, y:n$$105, textEl:i$$232[0]}], JAM.policy.p3);
        }
        var v2967 = Smits.PhyloCanvas.Render.Parameters.mouseRollOut;
        if (v2967) {
          var v9555 = Smits.Common;
          JAM.call(v9555.addRaphEventHandler, v9555, [i$$232[0], "mouseout", Smits.PhyloCanvas.Render.Parameters.mouseRollOut, {svg:a$$730, node:b$$707, x:f$$201, y:n$$105, textEl:i$$232[0]}], JAM.policy.p3);
        }
        var v2968 = Smits.PhyloCanvas.Render.Parameters.onClickAction;
        if (v2968) {
          var v9560 = Smits.Common;
          JAM.call(v9560.addRaphEventHandler, v9560, [i$$232[0], "click", Smits.PhyloCanvas.Render.Parameters.onClickAction, {svg:a$$730, node:b$$707, x:f$$201, y:n$$105, textEl:i$$232[0]}], JAM.policy.p3);
        }
      }
      if (m$$56) {
        m$$56 = !1;
      }
    }
    return[o$$35, n$$105];
  }
  var a$$730;
  var c$$580 = Smits.PhyloCanvas.Render.Parameters.Rectangular;
  var b$$706;
  var f$$200;
  var k$$84;
  var l$$89;
  var p$$56;
  var g$$207;
  var m$$56 = !0;
  var d$$420 = 0;
  var j$$117 = 0;
  var i$$231;
  var e$$364;
  var h$$167;
  var n$$104;
  var o$$34;
  var q$$22 = [];
  return v1951;
}
function v1948(a$$729) {
  var c$$579;
  var b$$705;
  var v2972;
  if (a$$729.type == "line") {
    var v15320 = this.svg;
    var v9565 = JAM.call(v15320.path, v15320, [["M", a$$729.x1, a$$729.y1, "L", a$$729.x2, a$$729.y2]], JAM.policy.p3);
    v2972 = c$$579 = JAM.call(v9565.attr, v9565, [Smits.PhyloCanvas.Render.Style.line], JAM.policy.p3);
  } else {
    var v9567;
    if (a$$729.type == "path") {
      var v19614 = this.svg;
      var v15323 = JAM.call(v19614.path, v19614, [a$$729.path], JAM.policy.p3);
      v9567 = c$$579 = JAM.call(v15323.attr, v15323, [a$$729.attr], JAM.policy.p3);
    } else {
      var v15325;
      if (a$$729.type == "circle") {
        var v24192 = this.svg;
        var v19616 = JAM.call(v24192.circle, v24192, [a$$729.x, a$$729.y, a$$729.radius], JAM.policy.p3);
        v15325 = c$$579 = JAM.call(v19616.attr, v19616, [{stroke:"red"}], JAM.policy.p3);
      } else {
        var v19618 = a$$729.type == "text";
        if (v19618) {
          var v29733 = this.svg;
          var v29339 = JAM.call(v29733.text, v29733, [a$$729.x, a$$729.y, a$$729.text], JAM.policy.p3);
          c$$579 = JAM.call(v29339.attr, v29339, [Smits.PhyloCanvas.Render.Style.text], JAM.policy.p3);
          var v29341 = a$$729.attr;
          if (v29341) {
            JAM.call(c$$579.attr, c$$579, [a$$729.attr], JAM.policy.p3);
          }
          var v28715 = a$$729.rotate;
          if (v28715) {
            JAM.call(c$$579.rotate, c$$579, [a$$729.rotate], JAM.policy.p3);
          }
          a$$729 = JAM.call(c$$579.getBBox, c$$579, [], JAM.policy.p3);
          v19618 = b$$705 = JAM.call(Math.sqrt, Math, [a$$729.height * a$$729.height + a$$729.width * a$$729.width], JAM.policy.p3);
        }
        v15325 = v19618;
      }
      v9567 = v15325;
    }
    v2972 = v9567;
  }
  v2972;
  return[c$$579, b$$705];
}
function v1947() {
  var v2973 = this.phylogramObject;
  var a$$728 = JAM.call(v2973.getDrawInstructs, v2973, [], JAM.policy.p3);
  var v9569 = this.phylogramObject;
  JAM.call(console.log, console, ["render", JAM.call(v9569.getDrawInstructs, v9569, [], JAM.policy.p3)], JAM.policy.p3);
  var c$$578 = 0;
  var v2988 = c$$578 < a$$728.length;
  for (;v2988;) {
    if (a$$728[c$$578].type == "line") {
      var v9572 = this.svg;
      var v2975 = JAM.call(v9572.path, v9572, [["M", a$$728[c$$578].x1, a$$728[c$$578].y1, "L", a$$728[c$$578].x2, a$$728[c$$578].y2]], JAM.policy.p3);
      JAM.call(v2975.attr, v2975, [Smits.PhyloCanvas.Render.Style.line], JAM.policy.p3);
    } else {
      if (a$$728[c$$578].type == "path") {
        var v9576 = this.svg;
        var v2977 = JAM.call(v9576.path, v9576, [a$$728[c$$578].path], JAM.policy.p3);
        JAM.call(v2977.attr, v2977, [a$$728[c$$578].attr], JAM.policy.p3);
      } else {
        if (a$$728[c$$578].type == "circle") {
          var v9580 = this.svg;
          var v2979 = JAM.call(v9580.circle, v9580, [a$$728[c$$578].x, a$$728[c$$578].y, a$$728[c$$578].radius], JAM.policy.p3);
          JAM.call(v2979.attr, v2979, [{stroke:"red"}], JAM.policy.p3);
        } else {
          var v9584 = this.svg;
          var v2981 = JAM.call(v9584.text, v9584, [a$$728[c$$578].x, a$$728[c$$578].y, a$$728[c$$578].text], JAM.policy.p3);
          var b$$704 = JAM.call(v2981.attr, v2981, [Smits.PhyloCanvas.Render.Style.text], JAM.policy.p3);
          var v2983 = a$$728[c$$578].attr;
          if (v2983) {
            JAM.call(b$$704.attr, b$$704, [a$$728[c$$578].attr], JAM.policy.p3);
          }
          var v2984 = a$$728[c$$578].rotate;
          if (v2984) {
            JAM.call(b$$704.rotate, b$$704, [a$$728[c$$578].rotate], JAM.policy.p3);
          }
          JAM.call(b$$704.getBBox, b$$704, [], JAM.policy.p3);
        }
      }
    }
    c$$578++;
    v2988 = c$$578 < a$$728.length;
  }
  return;
}
function v1946() {
  function v1945(a$$727, c$$577, b$$703) {
    this.canvasSize = [c$$577, b$$703];
    var v30938 = JAM.call(Raphael, null, [a$$727, this.canvasSize[0], this.canvasSize[1]], JAM.policy.p3);
    this.svg = v30938;
    return;
  }
  return v1945;
}
function v1944() {
  function v1943(a$$726, c$$576, b$$702, f$$199) {
    this.type = "circle";
    this.x = a$$726;
    this.y = c$$576;
    this.radius = b$$702;
    var v9596 = f$$199;
    if (v9596) {
      var v19626 = Smits.Common;
      JAM.call(v19626.apply, v19626, [this, f$$199], JAM.policy.p3);
      v9596 = f$$199.attr;
    }
    if (v9596) {
      this.attr = f$$199.attr;
    }
    return;
  }
  return v1943;
}
function v1942() {
  function v1941(a$$725, c$$575) {
    this.type = "path";
    this.attr = Smits.PhyloCanvas.Render.Style.path;
    this.path = a$$725;
    var v9598 = c$$575;
    if (v9598) {
      var v19627 = Smits.Common;
      JAM.call(v19627.apply, v19627, [this, c$$575], JAM.policy.p3);
      v9598 = c$$575.attr;
    }
    if (v9598) {
      this.attr = c$$575.attr;
    }
    return;
  }
  return v1941;
}
function v1940() {
  function v1939(a$$724, c$$574, b$$701, f$$198) {
    this.type = "text";
    this.attr = Smits.PhyloCanvas.Render.Style.text;
    this.x = a$$724;
    this.y = c$$574;
    this.text = b$$701;
    var v9600 = f$$198;
    if (v9600) {
      var v19628 = Smits.Common;
      JAM.call(v19628.apply, v19628, [this, f$$198], JAM.policy.p3);
      v9600 = f$$198.attr;
    }
    if (v9600) {
      this.attr = f$$198.attr;
    }
    return;
  }
  return v1939;
}
function v1938() {
  function v1937(a$$723, c$$573, b$$700, f$$197, k$$83) {
    this.type = "line";
    this.attr = Smits.PhyloCanvas.Render.Style.line;
    this.x1 = a$$723;
    this.x2 = c$$573;
    this.y1 = b$$700;
    this.y2 = f$$197;
    var v9602 = k$$83;
    if (v9602) {
      var v19629 = Smits.Common;
      JAM.call(v19629.apply, v19629, [this, k$$83], JAM.policy.p3);
      v9602 = k$$83.attr;
    }
    if (v9602) {
      this.attr = k$$83.attr;
    }
    return;
  }
  return v1937;
}
function v1936(a$$722, c$$572, b$$699) {
  var v2998 = this.jsOverride;
  if (!v2998) {
    var v9603;
    if (b$$699) {
      var v15348;
      if (b$$699 == "circular") {
        var v19630 = this.Circular;
        var v30939 = parseFloat(c$$572);
        v15348 = JAM.set(v19630, a$$722, v30939, JAM.policy.p2);
      } else {
        var v19631 = b$$699 == "rectangular";
        if (v19631) {
          var v24197 = this.Rectangular;
          var v30940 = parseFloat(c$$572);
          v19631 = JAM.set(v24197, a$$722, v30940, JAM.policy.p2);
        }
        v15348 = v19631;
      }
      v9603 = v15348;
    } else {
      var v30941 = parseFloat(c$$572);
      v9603 = JAM.set(this, a$$722, v30941, JAM.policy.p2);
    }
    v9603;
  }
  return;
}
function v1935(a$$721) {
  var v2999 = a$$721.node.edgeCircleHighlight;
  JAM.call(v2999.hide, v2999, [], JAM.policy.p3);
  var v3000 = a$$721.textEl;
  JAM.call(v3000.attr, v3000, [{fill:"#000"}], JAM.policy.p3);
  return;
}
function v1934(a$$720) {
  if (a$$720.node.edgeCircleHighlight) {
    var v3002 = a$$720.node.edgeCircleHighlight;
    JAM.call(v3002.show, v3002, [], JAM.policy.p3);
  } else {
    var v3003 = a$$720.svg;
    var c$$571 = JAM.call(v3003.draw, v3003, [JAM.new(Smits.PhyloCanvas.Render.Circle, [a$$720.x, a$$720.y, 5, {attr:Smits.PhyloCanvas.Render.Style.highlightedEdgeCircle}])], JAM.policy.p3);
    a$$720.node.edgeCircleHighlight = c$$571[0];
  }
  var v3007 = a$$720.textEl;
  JAM.call(v3007.attr, v3007, [{fill:"red"}], JAM.policy.p3);
  return;
}
function v1933(a$$719, c$$570) {
  var v3009;
  if (this[a$$719]) {
    v3009 = this[a$$719];
  } else {
    v3009 = this[c$$570];
  }
  return v3009;
}
function v1932() {
  function v1931(d$$419) {
    function v1930() {
      return f$$196;
    }
    function v1929() {
      return c$$567;
    }
    function v1928() {
      return a$$716;
    }
    function v1927() {
      return b$$695;
    }
    this.getRoot = v1927;
    this.getLevels = v1928;
    this.getNewickLen = v1929;
    this.getValidate = v1930;
    var j$$116 = d$$419.nexmlJson.nexml;
    var i$$230 = j$$116.render;
    var v9613 = i$$230;
    if (v9613) {
      v9613 = i$$230.styles;
    }
    if (v9613) {
      var e$$363 = i$$230.styles;
      var h$$166;
      for (h$$166 in e$$363) {
        var v9614 = h$$166 != "_children";
        if (v9614) {
          v9614 = h$$166 != "Text";
        }
        if (v9614) {
          var v15351 = e$$363[h$$166]["@attributes"].type;
          if (v15351) {
            v15351 = e$$363[h$$166]["@attributes"].type == "radialGradient";
          }
          var v9615 = v15351;
          if (v9615) {
            v9615 = Raphael.svg;
          }
          if (v9615) {
            e$$363[h$$166].name = h$$166;
            e$$363[h$$166].type = e$$363[h$$166]["@attributes"].type;
            JAM.set(Smits.PhyloCanvas.Render.Style, h$$166, e$$363[h$$166], JAM.policy.p2);
            var v15352 = Smits.PhyloCanvas.Render.Style.jsphylosvgGradientList;
            if (!v15352) {
              Smits.PhyloCanvas.Render.Style.jsphylosvgGradientList = [];
            }
            var v9616 = Smits.PhyloCanvas.Render.Style.jsphylosvgGradientList;
            JAM.call(v9616.push, v9616, [h$$166], JAM.policy.p3);
          } else {
            var n$$103;
            var v15354 = Smits.PhyloCanvas.Render.Style[h$$166];
            if (!v15354) {
              JAM.set(Smits.PhyloCanvas.Render.Style, h$$166, {}, JAM.policy.p2);
            }
            for (n$$103 in e$$363[h$$166]["@attributes"]) {
              var v15356 = n$$103 != "_attributes";
              if (v15356) {
                v15356 = n$$103 != "_children";
              }
              var v9617 = v15356;
              if (v9617) {
                v9617 = n$$103 != "type";
              }
              var v3011 = v9617;
              if (v3011) {
                JAM.set(Smits.PhyloCanvas.Render.Style[h$$166], JAM.call(n$$103.replace, n$$103, ["_", "-"], JAM.policy.p3), e$$363[h$$166]["@attributes"][n$$103], JAM.policy.p2);
              }
            }
          }
        }
      }
    }
    var v9620 = i$$230;
    if (v9620) {
      v9620 = i$$230.parameters;
    }
    var v3016 = v9620;
    if (v3016) {
      m$$55(i$$230.parameters);
    }
    var v9622 = i$$230;
    if (v9622) {
      v9622 = i$$230.charts;
    }
    if (v9622) {
      i$$230 = i$$230.charts;
      for (h$$166 in i$$230) {
        i$$230[h$$166]["@attributes"].chart = h$$166;
        var v9624;
        if (i$$230[h$$166]["@attributes"].type == "binary") {
          var v15360 = Smits.PhyloCanvas.Render.Parameters.binaryCharts;
          v9624 = JAM.call(v15360.push, v15360, [i$$230[h$$166]["@attributes"]], JAM.policy.p3);
        } else {
          var v15362;
          if (i$$230[h$$166]["@attributes"].type == "integratedBinary") {
            var v19650 = Smits.PhyloCanvas.Render.Parameters.integratedBinaryCharts;
            v15362 = JAM.call(v19650.push, v19650, [i$$230[h$$166]["@attributes"]], JAM.policy.p3);
          } else {
            var v19652 = i$$230[h$$166]["@attributes"].type == "bar";
            if (v19652) {
              var v24216 = Smits.PhyloCanvas.Render.Parameters.barCharts;
              v19652 = JAM.call(v24216.push, v24216, [i$$230[h$$166]["@attributes"]], JAM.policy.p3);
            }
            v15362 = v19652;
          }
          v9624 = v15362;
        }
        v9624;
      }
    }
    var v15364 = d$$419.tree;
    if (v15364) {
      v15364 = j$$116.trees[0];
    }
    var v9625 = v15364;
    if (v9625) {
      v9625 = j$$116.trees[0].tree[d$$419.tree - 1];
    }
    if (v9625) {
      k$$82 = j$$116.trees[0].tree[d$$419.tree - 1].edge;
      l$$88 = j$$116.trees[0].tree[d$$419.tree - 1].node;
    } else {
      h$$166 = 0;
      var v3020 = h$$166 < j$$116.trees.tree.edge.length;
      for (;v3020;) {
        JAM.call(k$$82.push, k$$82, [j$$116.trees.tree.edge[h$$166]["@attributes"]], JAM.policy.p3);
        h$$166++;
        v3020 = h$$166 < j$$116.trees.tree.edge.length;
      }
      h$$166 = 0;
      var v3024 = h$$166 < j$$116.trees.tree.node.length;
      for (;v3024;) {
        d$$419 = j$$116.trees.tree.node[h$$166]["@attributes"];
        if (d$$419.label) {
          d$$419.chart = j$$116.trees.tree.node[h$$166].chart;
        }
        JAM.call(l$$88.push, l$$88, [d$$419], JAM.policy.p3);
        h$$166++;
        v3024 = h$$166 < j$$116.trees.tree.node.length;
      }
    }
    h$$166 = 0;
    var v3027 = h$$166 < l$$88.length;
    for (;v3027;) {
      var v9636 = l$$88[h$$166].root;
      if (v9636) {
        v9636 = l$$88[h$$166].root == "true";
      }
      var v3026 = v9636;
      if (v3026) {
        b$$695 = l$$88[h$$166];
      }
      h$$166++;
      v3027 = h$$166 < l$$88.length;
    }
    var v3028;
    if (b$$695) {
      b$$695 = p$$55(b$$695);
      v3028 = b$$695 = g$$206(b$$695);
    } else {
      v3028 = f$$196 = "Error. Currently, only rooted NeXML trees are supported.";
    }
    v3028;
    return;
  }
  function m$$55(a$$718, c$$569) {
    var b$$698;
    for (b$$698 in a$$718) {
      var v9638 = b$$698 != "_children";
      if (v9638) {
        v9638 = b$$698 != "Text";
      }
      var v3029 = v9638;
      if (v3029) {
        var v9639;
        var v19669 = b$$698 == "rectangular";
        if (!v19669) {
          v19669 = b$$698 == "circular";
        }
        if (v19669) {
          v9639 = m$$55(a$$718[b$$698], b$$698);
        } else {
          var v19670 = Smits.PhyloCanvas.Render.Parameters[b$$698];
          if (!v19670) {
            JAM.set(Smits.PhyloCanvas.Render.Parameters, b$$698, {}, JAM.policy.p2);
          }
          var v19671 = Smits.PhyloCanvas.Render.Parameters;
          v9639 = JAM.call(v19671.set, v19671, [b$$698, a$$718[b$$698], c$$569], JAM.policy.p3);
        }
        v9639;
      }
    }
    return;
  }
  function g$$206(d$$418) {
    var v9640 = d$$418.children;
    if (v9640) {
      v9640 = d$$418.children.length;
    }
    if (v9640) {
      var b$$697 = 0;
      var v3035 = b$$697 < d$$418.children.length;
      for (;v3035;) {
        var i$$229 = d$$418.children[b$$697];
        i$$229.newickLen = JAM.call(Math.round, Math, [(i$$229.len + d$$418.newickLen) * 1E4], JAM.policy.p3) / 1E4;
        if (i$$229.level > a$$716) {
          a$$716 = i$$229.level;
        }
        if (i$$229.newickLen > c$$567) {
          c$$567 = i$$229.newickLen;
        }
        var v3034 = i$$229.children.length > 0;
        if (v3034) {
          g$$206(i$$229, d$$418);
        }
        b$$697++;
        v3035 = b$$697 < d$$418.children.length;
      }
    }
    return d$$418;
  }
  function p$$55(a$$717, c$$568, i$$228) {
    var e$$362 = new Smits.PhyloCanvas.Node;
    if (i$$228) {
      e$$362.level = i$$228.level + 1;
    }
    i$$228 = 0;
    var v3042 = i$$228 < k$$82.length;
    for (;v3042;) {
      if (k$$82[i$$228].source == a$$717.id) {
        var b$$696 = 0;
        var v3040 = b$$696 < l$$88.length;
        for (;v3040;) {
          var v3039 = k$$82[i$$228].target == l$$88[b$$696].id;
          if (v3039) {
            var v9654 = e$$362.children;
            JAM.call(v9654.push, v9654, [p$$55(l$$88[b$$696], k$$82[i$$228].length, e$$362)], JAM.policy.p3);
          }
          b$$696++;
          v3040 = b$$696 < l$$88.length;
        }
      }
      i$$228++;
      v3042 = i$$228 < k$$82.length;
    }
    var v9658 = c$$568;
    if (v9658) {
      var v19676 = Smits.Common;
      var v30942 = JAM.call(v19676.roundFloat, v19676, [c$$568, 4], JAM.policy.p3);
      e$$362.len = v30942;
      v9658 = e$$362.len == 0;
    }
    if (v9658) {
      e$$362.len = 1E-4;
    }
    if (a$$717.label) {
      e$$362.type = "label";
      e$$362.name = a$$717.label;
      if (a$$717.accession) {
        e$$362.accession = a$$717.accession;
      }
      if (a$$717.style) {
        e$$362.style = a$$717.style;
      }
      if (a$$717.bgStyle) {
        e$$362.bgStyle = a$$717.bgStyle;
      }
    }
    if (a$$717.chart) {
      e$$362.chart = a$$717.chart;
    }
    var v9659 = e$$362;
    if (v9659) {
      v9659 = e$$362.level > 1;
    }
    var v3049 = v9659;
    if (v3049) {
      var v9660 = e$$362.len;
      if (!v9660) {
        f$$196 = "Error. Please include Branch Lengths - we only draw rooted phylogenetic trees.";
      }
    }
    return e$$362;
  }
  var a$$716 = 0;
  var c$$567 = 0;
  var b$$695;
  var f$$196;
  var k$$82 = [];
  var l$$88 = [];
  return v1931;
}
function v1926() {
  function v1925(m$$54, d$$417) {
    function v1924() {
      return f$$195;
    }
    function v1923() {
      return c$$565;
    }
    function v1922() {
      return a$$714;
    }
    function v1921() {
      return b$$693;
    }
    this.getRoot = v1921;
    this.getLevels = v1922;
    this.getNewickLen = v1923;
    this.getValidate = v1924;
    var v3050;
    var v19678 = d$$417.tree;
    if (v19678) {
      v19678 = m$$54.trees[0];
    }
    var v15394 = v19678;
    if (v15394) {
      v15394 = m$$54.trees[0].tree[d$$417.tree - 1];
    }
    if (v15394) {
      k$$81 = m$$54.trees[0].tree[d$$417.tree - 1].edge;
      v3050 = l$$87 = m$$54.trees[0].tree[d$$417.tree - 1].node;
    } else {
      k$$81 = m$$54.trees[0].tree[0].edge;
      v3050 = l$$87 = m$$54.trees[0].tree[0].node;
    }
    v3050;
    var j$$115 = 0;
    var v3055 = j$$115 < l$$87.length;
    for (;v3055;) {
      var i$$227 = 0;
      var v9663 = l$$87[j$$115].root;
      if (v9663) {
        v9663 = l$$87[j$$115].root == "true";
      }
      if (v9663) {
        b$$693 = l$$87[j$$115];
        break;
      }
      var e$$361 = 0;
      var v3053 = e$$361 < k$$81.length;
      for (;v3053;) {
        var v3052 = k$$81[e$$361].target == l$$87[j$$115].id;
        if (v3052) {
          i$$227++;
        }
        e$$361++;
        v3053 = e$$361 < k$$81.length;
      }
      if (i$$227 == 0) {
        b$$693 = l$$87[j$$115];
        break;
      }
      j$$115++;
      v3055 = j$$115 < l$$87.length;
    }
    var v3056;
    if (b$$693) {
      b$$693 = p$$54(b$$693);
      v3056 = b$$693 = g$$205(b$$693);
    } else {
      v3056 = f$$195 = "Error. Currently, only rooted NeXML trees are supported.";
    }
    v3056;
    return;
  }
  function g$$205(b$$694) {
    var v9669 = b$$694.children;
    if (v9669) {
      v9669 = b$$694.children.length;
    }
    if (v9669) {
      var d$$416 = 0;
      var v3062 = d$$416 < b$$694.children.length;
      for (;v3062;) {
        var j$$114 = b$$694.children[d$$416];
        j$$114.newickLen = JAM.call(Math.round, Math, [(j$$114.len + b$$694.newickLen) * 1E4], JAM.policy.p3) / 1E4;
        if (j$$114.level > a$$714) {
          a$$714 = j$$114.level;
        }
        if (j$$114.newickLen > c$$565) {
          c$$565 = j$$114.newickLen;
        }
        var v3061 = j$$114.children.length > 0;
        if (v3061) {
          g$$205(j$$114, b$$694);
        }
        d$$416++;
        v3062 = d$$416 < b$$694.children.length;
      }
    }
    return b$$694;
  }
  function p$$54(a$$715, d$$415, c$$566) {
    var i$$226 = new Smits.PhyloCanvas.Node;
    if (c$$566) {
      i$$226.level = c$$566.level + 1;
    }
    c$$566 = 0;
    var v3069 = c$$566 < k$$81.length;
    for (;v3069;) {
      if (k$$81[c$$566].source == a$$715.id) {
        var e$$360 = 0;
        var v3067 = e$$360 < l$$87.length;
        for (;v3067;) {
          var v3066 = k$$81[c$$566].target == l$$87[e$$360].id;
          if (v3066) {
            var v9683 = i$$226.children;
            JAM.call(v9683.push, v9683, [p$$54(l$$87[e$$360], k$$81[c$$566].length, i$$226)], JAM.policy.p3);
          }
          e$$360++;
          v3067 = e$$360 < l$$87.length;
        }
      }
      c$$566++;
      v3069 = c$$566 < k$$81.length;
    }
    var v15413 = i$$226;
    if (v15413) {
      v15413 = i$$226.level > 0;
    }
    var v9687 = v15413;
    if (v9687) {
      v9687 = !i$$226.len;
    }
    if (v9687) {
      i$$226.len = 1;
    }
    var v9688 = d$$415;
    if (v9688) {
      var v19692 = Smits.Common;
      var v30943 = JAM.call(v19692.roundFloat, v19692, [d$$415, 4], JAM.policy.p3);
      i$$226.len = v30943;
      v9688 = i$$226.len == 0;
    }
    if (v9688) {
      i$$226.len = 1E-4;
    }
    var v9689 = a$$715.label;
    if (v9689) {
      i$$226.type = "label";
      i$$226.name = a$$715.label;
      v9689 = a$$715.style;
    }
    if (v9689) {
      i$$226.style = a$$715.style;
    }
    return i$$226;
  }
  var a$$714 = 0;
  var c$$565 = 0;
  var b$$693;
  var f$$195;
  var k$$81;
  var l$$87;
  return v1925;
}
function v1920() {
  function v1919(g$$204) {
    function v1918() {
      return f$$193;
    }
    function v1917() {
      return c$$562;
    }
    function v1916() {
      return a$$711;
    }
    function v1915() {
      return b$$691;
    }
    this.getRoot = v1915;
    this.getLevels = v1916;
    this.getNewickLen = v1917;
    this.getValidate = v1918;
    var v15415 = g$$204.phylogeny;
    if (v15415) {
      v15415 = g$$204.phylogeny[0];
    }
    var v9690 = v15415;
    if (v9690) {
      v9690 = g$$204.phylogeny[0].clade;
    }
    var v3073 = v9690;
    if (v3073) {
      b$$691 = k$$80(g$$204.phylogeny[0].clade[0]);
    }
    var v19697 = g$$204.phylogeny;
    if (v19697) {
      v19697 = g$$204.phylogeny[0];
    }
    var v15418 = v19697;
    if (v15418) {
      v15418 = g$$204.phylogeny[0].render;
    }
    var v9692 = v15418;
    if (v9692) {
      v9692 = g$$204.phylogeny[0].render[0];
    }
    if (v9692) {
      var v9693 = g$$204 = g$$204.phylogeny[0].render[0];
      if (v9693) {
        v9693 = g$$204.styles;
      }
      if (v9693) {
        var m$$53 = g$$204.styles[0];
        var d$$414;
        for (d$$414 in m$$53) {
          var v9694 = d$$414 != "_children";
          if (v9694) {
            v9694 = d$$414 != "Text";
          }
          if (v9694) {
            var v15421 = m$$53[d$$414][0].type;
            if (v15421) {
              v15421 = m$$53[d$$414][0].type == "radialGradient";
            }
            var v9695 = v15421;
            if (v9695) {
              v9695 = Raphael.svg;
            }
            if (v9695) {
              m$$53[d$$414][0].name = d$$414;
              JAM.set(Smits.PhyloCanvas.Render.Style, d$$414, m$$53[d$$414][0], JAM.policy.p2);
              var v15422 = Smits.PhyloCanvas.Render.Style.jsphylosvgGradientList;
              if (!v15422) {
                Smits.PhyloCanvas.Render.Style.jsphylosvgGradientList = [];
              }
              var v9696 = Smits.PhyloCanvas.Render.Style.jsphylosvgGradientList;
              JAM.call(v9696.push, v9696, [d$$414], JAM.policy.p3);
            } else {
              var j$$113;
              var v15424 = Smits.PhyloCanvas.Render.Style[d$$414];
              if (!v15424) {
                JAM.set(Smits.PhyloCanvas.Render.Style, d$$414, {}, JAM.policy.p2);
              }
              for (j$$113 in m$$53[d$$414][0]) {
                var v15426 = j$$113 != "_attributes";
                if (v15426) {
                  v15426 = j$$113 != "_children";
                }
                var v9697 = v15426;
                if (v9697) {
                  v9697 = j$$113 != "type";
                }
                var v3075 = v9697;
                if (v3075) {
                  JAM.set(Smits.PhyloCanvas.Render.Style[d$$414], JAM.call(j$$113.replace, j$$113, ["_", "-"], JAM.policy.p3), m$$53[d$$414][0][j$$113], JAM.policy.p2);
                }
              }
            }
          }
        }
      }
      var v9700 = g$$204;
      if (v9700) {
        v9700 = g$$204.parameters;
      }
      var v3080 = v9700;
      if (v3080) {
        p$$53(g$$204.parameters[0]);
      }
      var v9702 = g$$204;
      if (v9702) {
        v9702 = g$$204.charts;
      }
      if (v9702) {
        g$$204 = g$$204.charts[0];
        for (d$$414 in g$$204) {
          var v9703 = d$$414 != "_children";
          if (v9703) {
            v9703 = d$$414 != "Text";
          }
          if (v9703) {
            for (j$$113 in g$$204[d$$414]) {
              if (g$$204[d$$414][j$$113].type == "binary") {
                g$$204[d$$414][j$$113].chart = d$$414;
                var v9706 = Smits.PhyloCanvas.Render.Parameters.binaryCharts;
                JAM.call(v9706.push, v9706, [g$$204[d$$414][j$$113]], JAM.policy.p3);
              } else {
                if (g$$204[d$$414][j$$113].type == "integratedBinary") {
                  g$$204[d$$414][j$$113].chart = d$$414;
                  var v9710 = Smits.PhyloCanvas.Render.Parameters.integratedBinaryCharts;
                  JAM.call(v9710.push, v9710, [g$$204[d$$414][j$$113]], JAM.policy.p3);
                } else {
                  if (g$$204[d$$414][j$$113].type == "bar") {
                    g$$204[d$$414][j$$113].chart = d$$414;
                    var v9714 = Smits.PhyloCanvas.Render.Parameters.barCharts;
                    JAM.call(v9714.push, v9714, [g$$204[d$$414][j$$113]], JAM.policy.p3);
                  }
                }
              }
            }
          }
        }
      }
    }
    b$$691 = l$$86(b$$691);
    return;
  }
  function p$$53(a$$713, c$$564) {
    var d$$413;
    for (d$$413 in a$$713) {
      var v9716 = d$$413 != "_children";
      if (v9716) {
        v9716 = d$$413 != "Text";
      }
      var v3089 = v9716;
      if (v3089) {
        var v9717;
        var v19720 = d$$413 == "rectangular";
        if (!v19720) {
          v19720 = d$$413 == "circular";
        }
        if (v19720) {
          v9717 = p$$53(a$$713[d$$413][0], d$$413);
        } else {
          var v19722 = Smits.PhyloCanvas.Render.Parameters[d$$413];
          if (!v19722) {
            JAM.set(Smits.PhyloCanvas.Render.Parameters, d$$413, {}, JAM.policy.p2);
          }
          var v19723 = Smits.PhyloCanvas.Render.Parameters;
          v9717 = JAM.call(v19723.set, v19723, [d$$413, a$$713[d$$413][0].Text, c$$564], JAM.policy.p3);
        }
        v9717;
      }
    }
    return;
  }
  function l$$86(b$$692) {
    var v9718 = b$$692.children;
    if (v9718) {
      v9718 = b$$692.children.length;
    }
    if (v9718) {
      var f$$194 = 0;
      var v3095 = f$$194 < b$$692.children.length;
      for (;v3095;) {
        var d$$412 = b$$692.children[f$$194];
        d$$412.newickLen = JAM.call(Math.round, Math, [(d$$412.len + b$$692.newickLen) * 1E4], JAM.policy.p3) / 1E4;
        if (d$$412.level > a$$711) {
          a$$711 = d$$412.level;
        }
        if (d$$412.newickLen > c$$562) {
          c$$562 = d$$412.newickLen;
        }
        var v3094 = d$$412.children.length > 0;
        if (v3094) {
          l$$86(d$$412, b$$692);
        }
        f$$194++;
        v3095 = f$$194 < b$$692.children.length;
      }
    }
    return b$$692;
  }
  function k$$80(a$$712, c$$563) {
    var d$$411 = new Smits.PhyloCanvas.Node;
    if (c$$563) {
      d$$411.level = c$$563.level + 1;
    }
    var v9726 = a$$712.clade;
    if (v9726) {
      v9726 = a$$712.clade.length;
    }
    if (v9726) {
      var j$$112 = 0;
      var v3101 = j$$112 < a$$712.clade.length;
      for (;v3101;) {
        var v3099 = d$$411.children;
        JAM.call(v3099.push, v3099, [k$$80(a$$712.clade[j$$112], d$$411)], JAM.policy.p3);
        j$$112++;
        v3101 = j$$112 < a$$712.clade.length;
      }
    }
    if (a$$712.branch_length) {
      if (typeof a$$712.branch_length === "object") {
        a$$712.branch_length = a$$712.branch_length[0].Text;
      }
      var v3105 = Smits.Common;
      var v30944 = JAM.call(v3105.roundFloat, v3105, [a$$712.branch_length, 4], JAM.policy.p3);
      d$$411.len = v30944;
      if (d$$411.len == 0) {
        d$$411.len = 1E-4;
      }
    }
    if (a$$712.name) {
      d$$411.type = "label";
      d$$411.name = a$$712.name[0].Text;
      var v9734 = a$$712.name[0];
      if (v9734) {
        v9734 = a$$712.name[0].style;
      }
      if (v9734) {
        d$$411.style = a$$712.name[0].style;
      }
      var v9736 = a$$712.name[0];
      if (v9736) {
        v9736 = a$$712.name[0].bgStyle;
      }
      if (v9736) {
        d$$411.bgStyle = a$$712.name[0].bgStyle;
      }
    } else {
      if (a$$712.confidence) {
        d$$411.name = a$$712.confidence[0].Text;
      }
    }
    var v24265 = a$$712.sequence;
    if (v24265) {
      v24265 = a$$712.sequence[0];
    }
    var v19729 = v24265;
    if (v19729) {
      v19729 = a$$712.sequence[0].name;
    }
    var v15459 = v19729;
    if (v15459) {
      v15459 = a$$712.sequence[0].name[0];
    }
    var v9739 = v15459;
    if (v9739) {
      v9739 = a$$712.sequence[0].name[0].Text;
    }
    if (v9739) {
      d$$411.sequenceName = a$$712.sequence[0].name[0].Text;
    }
    var v9741 = a$$712.taxonomy;
    if (v9741) {
      v9741 = a$$712.taxonomy[0];
    }
    if (v9741) {
      var v15463 = a$$712.taxonomy[0].scientific_name;
      if (v15463) {
        v15463 = a$$712.taxonomy[0].scientific_name[0];
      }
      var v9742 = v15463;
      if (v9742) {
        v9742 = a$$712.taxonomy[0].scientific_name[0].Text;
      }
      if (v9742) {
        d$$411.taxonomyScientificName = a$$712.taxonomy[0].scientific_name[0].Text;
      }
      var v15466 = a$$712.taxonomy[0].common_name;
      if (v15466) {
        v15466 = a$$712.taxonomy[0].common_name[0];
      }
      var v9744 = v15466;
      if (v9744) {
        v9744 = a$$712.taxonomy[0].common_name[0].Text;
      }
      if (v9744) {
        d$$411.taxonomyCommonName = a$$712.taxonomy[0].common_name[0].Text;
      }
    }
    var v24275 = a$$712.sequence;
    if (v24275) {
      v24275 = a$$712.sequence[0];
    }
    var v19741 = v24275;
    if (v19741) {
      v19741 = a$$712.sequence[0].accession;
    }
    var v15469 = v19741;
    if (v15469) {
      v15469 = a$$712.sequence[0].accession[0];
    }
    var v9746 = v15469;
    if (v9746) {
      v9746 = a$$712.sequence[0].accession[0].Text;
    }
    if (v9746) {
      d$$411.sequenceAccession = a$$712.sequence[0].accession[0].Text;
    }
    if (a$$712.point) {
      d$$411.LatLong = [a$$712.point[0].lat[0].Text, a$$712.point[0]["long"][0].Text];
    }
    if (!d$$411.name) {
      if (d$$411.sequenceName) {
        d$$411.name = d$$411.sequenceName;
      } else {
        if (d$$411.taxonomyScientificName) {
          d$$411.name = d$$411.taxonomyScientificName;
        } else {
          if (d$$411.taxonomyCommonName) {
            d$$411.name = d$$411.taxonomyCommonName;
          } else {
            if (d$$411.sequenceAccession) {
              d$$411.name = d$$411.sequenceAccession;
            }
          }
        }
      }
      if (d$$411.name) {
        d$$411.type = "label";
      }
    }
    if (a$$712.annotation) {
      var v19747 = a$$712.annotation[0];
      if (v19747) {
        v19747 = a$$712.annotation[0].desc;
      }
      var v15474 = v19747;
      if (v15474) {
        v15474 = a$$712.annotation[0].desc[0];
      }
      var v9751 = v15474;
      if (v9751) {
        v9751 = a$$712.annotation[0].desc[0].Text;
      }
      if (v9751) {
        d$$411.description = a$$712.annotation[0].desc[0].Text;
      }
      var v19751 = a$$712.annotation[0];
      if (v19751) {
        v19751 = a$$712.annotation[0].uri;
      }
      var v15477 = v19751;
      if (v15477) {
        v15477 = a$$712.annotation[0].uri[0];
      }
      var v9753 = v15477;
      if (v9753) {
        v9753 = a$$712.annotation[0].uri[0].Text;
      }
      if (v9753) {
        d$$411.uri = a$$712.annotation[0].uri[0].Text;
      }
      var v9755 = a$$712.annotation[0];
      if (v9755) {
        v9755 = a$$712.annotation[0].img;
      }
      if (v9755) {
        for (j$$112 in a$$712.annotation[0].img) {
          var v9757 = Smits.Common;
          if (JAM.call(v9757.isInteger, v9757, [j$$112], JAM.policy.p3)) {
            JAM.set(d$$411.img, j$$112, a$$712.annotation[0].img[j$$112].Text, JAM.policy.p2);
          }
        }
      }
    }
    var v9759 = a$$712.chart;
    if (v9759) {
      v9759 = a$$712.chart[0];
    }
    if (v9759) {
      for (j$$112 in a$$712.chart[0]) {
        var v9761 = j$$112 != "Text";
        if (v9761) {
          v9761 = j$$112 != "_children";
        }
        if (v9761) {
          JAM.set(d$$411.chart, j$$112, a$$712.chart[0][j$$112][0].Text, JAM.policy.p2);
        }
      }
    }
    var v9763 = d$$411;
    if (v9763) {
      v9763 = d$$411.level > 1;
    }
    var v3148 = v9763;
    if (v3148) {
      var v9764 = d$$411.len;
      if (!v9764) {
        f$$193 = "Error. Please include Branch Lengths - we only draw rooted phylogenetic trees.";
      }
    }
    return d$$411;
  }
  var a$$711 = 0;
  var c$$562 = 0;
  var b$$691;
  var f$$193;
  return v1919;
}
function v1914() {
  function v1913(c$$561) {
    function v1912() {
      return;
    }
    function v1911() {
      return k$$79;
    }
    function v1910() {
      return f$$192;
    }
    function v1909() {
      return l$$85;
    }
    this.getRoot = v1909;
    this.getLevels = v1910;
    this.getNewickLen = v1911;
    this.getValidate = v1912;
    k$$79 = f$$192 = 0;
    a$$706 = c$$561;
    b$$689 = 0;
    d$$409();
    l$$85 = g$$202();
    l$$85 = j$$110(l$$85);
    return;
  }
  function j$$110(d$$410) {
    var v9765 = d$$410.children;
    if (v9765) {
      v9765 = d$$410.children.length;
    }
    if (v9765) {
      var c$$560 = 0;
      var v3156 = c$$560 < d$$410.children.length;
      for (;v3156;) {
        var a$$710 = d$$410.children[c$$560];
        if (a$$710.len === 0) {
          a$$710.len = 1;
        }
        var v3151 = Smits.Common;
        var v30945 = JAM.call(v3151.roundFloat, v3151, [a$$710.len + d$$410.newickLen, 4], JAM.policy.p3);
        a$$710.newickLen = v30945;
        if (a$$710.level > f$$192) {
          f$$192 = a$$710.level;
        }
        if (a$$710.newickLen > k$$79) {
          k$$79 = a$$710.newickLen;
        }
        var v3155 = a$$710.children.length > 0;
        if (v3155) {
          j$$110(a$$710, d$$410);
        }
        c$$560++;
        v3156 = c$$560 < d$$410.children.length;
      }
    }
    return d$$410;
  }
  function d$$409() {
    c$$559 = JAM.call(a$$706.charAt, a$$706, [b$$689], JAM.policy.p3);
    b$$689 = b$$689 + 1;
    return c$$559;
  }
  function m$$52() {
    var a$$709 = "";
    var v19758 = c$$559 !== ":";
    if (v19758) {
      v19758 = c$$559 !== ")";
    }
    var v15492 = v19758;
    if (v15492) {
      v15492 = c$$559 !== ",";
    }
    var v9774 = v15492;
    if (v9774) {
      v9774 = c$$559 !== ";";
    }
    var v3158 = v9774;
    for (;v3158;) {
      a$$709 = a$$709 + c$$559;
      d$$409();
      var v19759 = c$$559 !== ":";
      if (v19759) {
        v19759 = c$$559 !== ")";
      }
      var v15493 = v19759;
      if (v15493) {
        v15493 = c$$559 !== ",";
      }
      var v9775 = v15493;
      if (v9775) {
        v9775 = c$$559 !== ";";
      }
      v3158 = v9775;
    }
    return a$$709;
  }
  function g$$202(a$$708) {
    var e$$359 = new Smits.PhyloCanvas.Node;
    if (a$$708) {
      e$$359.level = a$$708.level + 1;
    }
    var v3161 = c$$559 !== ")";
    for (;v3161;) {
      d$$409();
      var v9777;
      if (c$$559 === "(") {
        var v15494 = e$$359.children;
        v9777 = JAM.call(v15494.push, v15494, [g$$202(e$$359)], JAM.policy.p3);
      } else {
        var v15496 = e$$359.children;
        v9777 = JAM.call(v15496.push, v15496, [p$$52(e$$359)], JAM.policy.p3);
      }
      v9777;
      v3161 = c$$559 !== ")";
    }
    d$$409();
    var v19760 = c$$559 !== ":";
    if (v19760) {
      v19760 = c$$559 !== ")";
    }
    var v15499 = v19760;
    if (v15499) {
      v15499 = c$$559 !== ",";
    }
    var v9778 = v15499;
    if (v9778) {
      v9778 = c$$559 !== ";";
    }
    if (v9778) {
      e$$359.type = "label";
      var v30946 = m$$52();
      e$$359.name = v30946;
    }
    if (c$$559 === ":") {
      d$$409();
      var v3163 = Smits.Common;
      var v30947 = JAM.call(v3163.roundFloat, v3163, [m$$52(), 4], JAM.policy.p3);
      e$$359.len = v30947;
      if (e$$359.len == 0) {
        e$$359.len = 1E-4;
      }
      e$$359.type = "stem";
    }
    return e$$359;
  }
  function p$$52(a$$707) {
    var e$$358 = new Smits.PhyloCanvas.Node;
    var v9781 = c$$559 !== ")";
    if (v9781) {
      v9781 = c$$559 !== ",";
    }
    var v3172 = v9781;
    for (;v3172;) {
      if (c$$559 === ":") {
        d$$409();
        var v19761 = Smits.Common;
        var v30948 = JAM.call(v19761.roundFloat, v19761, [m$$52(), 4], JAM.policy.p3);
        e$$358.len = v30948;
        if (e$$358.len == 0) {
          e$$358.len = 1E-4;
        }
      } else {
        var v9782 = c$$559 === "'";
        if (!v9782) {
          v9782 = c$$559 === '"';
        }
        if (v9782) {
          e$$358.type = "label";
          var g$$203 = e$$358;
          var j$$111 = c$$559;
          var b$$690 = "";
          var v3169 = c$$559 !== j$$111;
          for (;v3169;) {
            b$$690 = b$$690 + c$$559;
            d$$409();
            v3169 = c$$559 !== j$$111;
          }
          g$$203.name = b$$690;
        } else {
          e$$358.type = "label";
          var v30949 = m$$52();
          e$$358.name = v30949;
        }
      }
      var v9783 = c$$559 !== ")";
      if (v9783) {
        v9783 = c$$559 !== ",";
      }
      v3172 = v9783;
    }
    e$$358.level = a$$707.level + 1;
    return e$$358;
  }
  var a$$706;
  var c$$559;
  var b$$689;
  var f$$192 = 0;
  var k$$79 = 0;
  var l$$85;
  return v1913;
}
function v1908(a$$705) {
  if (this._midBranchPosition !== !1) {
    return this._midBranchPosition;
  }
  var c$$558 = [0, 0];
  var b$$688 = 0;
  var v3177 = b$$688 < this.children.length;
  for (;v3177;) {
    var f$$191 = this.children[b$$688];
    var v3176;
    var v15503 = f$$191.children;
    if (v15503) {
      v15503 = f$$191.children.length > 0;
    }
    if (v15503) {
      var v9787;
      var v19764 = b$$688 == 0;
      if (v19764) {
        v19764 = a$$705;
      }
      if (v19764) {
        var v30950 = JAM.call(f$$191.getMidbranchPosition, f$$191, [!0], JAM.policy.p3);
        c$$558[0] = v30950;
        v9787 = c$$558[1] = c$$558[1] + (JAM.call(f$$191.getCountAllChildren, f$$191, [], JAM.policy.p3) - 1);
      } else {
        var v15504;
        if (b$$688 == 0) {
          var v30951 = JAM.call(f$$191.getMidbranchPosition, f$$191, [], JAM.policy.p3);
          c$$558[0] = v30951;
          v15504 = c$$558[1] = c$$558[1] + JAM.call(f$$191.getCountAllChildren, f$$191, [], JAM.policy.p3);
        } else {
          var v24294 = c$$558[1];
          var v26348;
          if (b$$688 == this.children.length - 1) {
            v26348 = JAM.call(f$$191.getMidbranchPosition, f$$191, [], JAM.policy.p3);
          } else {
            v26348 = JAM.call(f$$191.getCountAllChildren, f$$191, [], JAM.policy.p3);
          }
          v15504 = c$$558[1] = v24294 + v26348;
        }
        v9787 = v15504;
      }
      v3176 = v9787;
    } else {
      var v9788;
      var v19767 = b$$688 == 0;
      if (v19767) {
        v19767 = a$$705;
      }
      if (v19767) {
        v9788 = c$$558[0] = 0;
      } else {
        var v19768 = b$$688 == 0;
        if (v19768) {
          c$$558[0] = 1;
        }
        v9788 = c$$558[1] = c$$558[1] + 1;
      }
      v3176 = v9788;
    }
    v3176;
    b$$688++;
    v3177 = b$$688 < this.children.length;
  }
  var v3178;
  if (c$$558[1] >= c$$558[0]) {
    v3178 = (c$$558[1] + c$$558[0]) / 2;
  } else {
    v3178 = c$$558[0];
  }
  return this._midBranchPosition = v3178;
}
function v1907() {
  if (this._countImmediateChildren !== !1) {
    return this._countImmediateChildren;
  }
  var a$$704 = 0;
  var c$$557;
  for (c$$557 in this.children) {
    a$$704 = a$$704 + this.children[c$$557].length;
  }
  return this._countImmediateChildren = a$$704;
}
function v1906() {
  if (this._countAllChildren !== !1) {
    return this._countAllChildren;
  }
  var a$$703 = 0;
  var c$$556;
  for (c$$556 in this.children) {
    var v9798 = Smits.Common;
    if (JAM.call(v9798.isInteger, v9798, [c$$556], JAM.policy.p3)) {
      var b$$687 = this.children[c$$556];
      var v3183;
      var v15513 = b$$687.children;
      if (v15513) {
        v15513 = b$$687.children.length > 0;
      }
      if (v15513) {
        v3183 = a$$703 = a$$703 + JAM.call(b$$687.getCountAllChildren, b$$687, [], JAM.policy.p3);
      } else {
        v3183 = a$$703;
        a$$703 = a$$703 + 1;
      }
      v3183;
    }
  }
  return this._countAllChildren = a$$703;
}
function v1905() {
  function v1904(a$$702, c$$555) {
    var v3186 = Smits.Common;
    this.id = v3186.nodeIdIncrement = v3186.nodeIdIncrement + 1;
    this.newickLen = this.len = this.level = 0;
    this.type = this.name = "";
    this.chart = {};
    this.img = [];
    if (a$$702) {
      var v9800 = Smits.Common;
      JAM.call(v9800.apply, v9800, [this, a$$702], JAM.policy.p3);
    }
    this._midBranchPosition = this._countImmediateChildren = this._countAllChildren = !1;
    this.children = [];
    if (c$$555) {
      var v9801 = c$$555.children;
      JAM.call(v9801.push, v9801, [this], JAM.policy.p3);
    }
    return;
  }
  return v1904;
}
function v1903() {
  function v1902(k$$78, l$$84, p$$51, g$$201, m$$51) {
    function v1901() {
      var v3187;
      var v15516 = Raphael.svg;
      if (v15516) {
        var v19771 = Smits.Common;
        v15516 = JAM.call(v19771.isXMLSerializerAvailable, v19771, [], JAM.policy.p3);
      }
      if (v15516) {
        var v9802 = new XMLSerializer;
        v3187 = JAM.call(v9802.serializeToString, v9802, [b$$686.svg.canvas], JAM.policy.p3);
      } else {
        v3187 = !1;
      }
      return v3187;
    }
    function v1900() {
      return a$$701;
    }
    function v1899() {
      return b$$686;
    }
    function v1898(d$$408) {
      var v3188 = b$$686.svg;
      JAM.call(v3188.scale, v3188, [d$$408], JAM.policy.p3);
      return;
    }
    function v1897() {
      return;
    }
    function v1896() {
      return;
    }
    this.getNewickObject = v1896;
    this.clear = v1897;
    this.scale = v1898;
    this.getSvg = v1899;
    this.getPhylogram = v1900;
    this.getSvgSource = v1901;
    if (typeof k$$78 === "object") {
      if (k$$78.xml) {
        var v3189;
        if (k$$78.fileSource) {
          v3189 = k$$78.xml;
        } else {
          v3189 = JAM.call(XMLObjectifier.textToXML, XMLObjectifier, [k$$78.xml], JAM.policy.p3);
        }
        var d$$407 = v3189;
        d$$407 = JAM.call(XMLObjectifier.xmlToJSON, XMLObjectifier, [d$$407], JAM.policy.p3);
        f$$190 = JAM.new(Smits.PhyloCanvas.PhyloxmlParse, [d$$407]);
      } else {
        var v3191;
        if (k$$78.phyloxml) {
          var v19772;
          if (k$$78.fileSource) {
            v19772 = k$$78.phyloxml;
          } else {
            v19772 = JAM.call(XMLObjectifier.textToXML, XMLObjectifier, [k$$78.phyloxml], JAM.policy.p3);
          }
          d$$407 = v19772;
          d$$407 = JAM.call(XMLObjectifier.xmlToJSON, XMLObjectifier, [d$$407], JAM.policy.p3);
          v3191 = f$$190 = JAM.new(Smits.PhyloCanvas.PhyloxmlParse, [d$$407]);
        } else {
          var v9809;
          if (k$$78.nexml) {
            var v24300;
            if (k$$78.fileSource) {
              v24300 = k$$78.nexml;
            } else {
              v24300 = JAM.call(XMLObjectifier.textToXML, XMLObjectifier, [k$$78.nexml], JAM.policy.p3);
            }
            d$$407 = v24300;
            d$$407 = JAM.call(XMLObjectifier.xmlToJSON, XMLObjectifier, [d$$407], JAM.policy.p3);
            v9809 = f$$190 = JAM.new(Smits.PhyloCanvas.NexmlParse, [d$$407, k$$78]);
          } else {
            var v15519;
            if (k$$78.json) {
              v15519 = f$$190 = JAM.new(Smits.PhyloCanvas.PhyloxmlParse, [k$$78.json]);
            } else {
              var v19777;
              if (k$$78.newick) {
                v19777 = f$$190 = JAM.new(Smits.PhyloCanvas.NewickParse, [k$$78.newick]);
              } else {
                var v24305;
                if (k$$78.nexmlJson) {
                  v24305 = f$$190 = JAM.new(Smits.PhyloCanvas.NexmlJsonParse, [k$$78]);
                } else {
                  v24305 = alert("Please set the format of input data");
                }
                v19777 = v24305;
              }
              v15519 = v19777;
            }
            v9809 = v15519;
          }
          v3191 = v9809;
        }
        v3191;
      }
    } else {
      f$$190 = JAM.new(Smits.PhyloCanvas.NewickParse, [k$$78]);
    }
    c$$554 = l$$84;
    b$$686 = JAM.new(Smits.PhyloCanvas.Render.SVG, [c$$554, p$$51, g$$201]);
    var v3196;
    if (m$$51 == "circular") {
      v3196 = JAM.new(Smits.PhyloCanvas.Render.CircularPhylogram, [b$$686, f$$190]);
    } else {
      v3196 = JAM.new(Smits.PhyloCanvas.Render.Phylogram, [b$$686, f$$190]);
    }
    a$$701 = v3196;
    return;
  }
  var a$$701;
  var c$$554;
  var b$$686;
  var f$$190;
  return v1902;
}
function v1895(a$$700, c$$553) {
  var b$$685 = document.styleSheets[0];
  var v3198;
  if (b$$685.addRule) {
    v3198 = JAM.call(b$$685.addRule, b$$685, [a$$700, c$$553], JAM.policy.p3);
  } else {
    var v9816 = b$$685.insertRule;
    if (v9816) {
      v9816 = JAM.call(b$$685.insertRule, b$$685, [a$$700 + " { " + c$$553 + " }", b$$685.cssRules.length], JAM.policy.p3);
    }
    v3198 = v9816;
  }
  v3198;
  return;
}
function v1894(a$$699, c$$552, b$$684) {
  if (c$$552.type != "radialGradient") {
    return!1;
  }
  var v3200 = Smits.Common;
  a$$699 = JAM.call(v3200.createSvgEl, v3200, ["radialGradient", {id:a$$699, gradientUnits:"userSpaceOnUse", cx:b$$684[0], cy:b$$684[1], r:b$$684[2], fx:b$$684[0], fy:b$$684[1]}], JAM.policy.p3);
  if (c$$552.stop) {
    c$$552 = c$$552.stop;
    b$$684 = 0;
    var v3203 = b$$684 < c$$552.length;
    for (;v3203;) {
      var f$$189 = c$$552[b$$684];
      var v3202;
      if (f$$189["@attributes"]) {
        var v15526 = Smits.Common;
        v3202 = JAM.call(a$$699.appendChild, a$$699, [JAM.call(v15526.createSvgEl, v15526, ["stop", f$$189["@attributes"]], JAM.policy.p3)], JAM.policy.p3);
      } else {
        var v24308 = f$$189._attributes;
        if (v24308) {
          delete f$$189._attributes;
        }
        var v24309 = f$$189._children;
        if (v24309) {
          delete f$$189._children;
        }
        var v19783 = f$$189.__proto__;
        if (v19783) {
          delete f$$189.__proto__;
        }
        var v19784 = Smits.Common;
        v3202 = JAM.call(a$$699.appendChild, a$$699, [JAM.call(v19784.createSvgEl, v19784, ["stop", f$$189], JAM.policy.p3)], JAM.policy.p3);
      }
      v3202;
      b$$684++;
      v3203 = b$$684 < c$$552.length;
    }
  }
  return a$$699;
}
function v1893(a$$698, c$$551) {
  a$$698 = JAM.call(document.createElementNS, document, ["http://www.w3.org/2000/svg", a$$698], JAM.policy.p3);
  if (c$$551) {
    var b$$683;
    for (b$$683 in c$$551) {
      var v3205 = JAM.call(c$$551.hasOwnProperty, c$$551, [b$$683], JAM.policy.p3);
      if (v3205) {
        JAM.call(a$$698.setAttribute, a$$698, [b$$683, String(c$$551[b$$683])], JAM.policy.p3);
      }
    }
  }
  return a$$698;
}
function v1892() {
  var v3206;
  if (typeof XMLSerializer == "function") {
    v3206 = !0;
  } else {
    v3206 = !1;
  }
  return v3206;
}
function v1891(a$$697) {
  return!isNaN(parseInt(a$$697));
}
function v1890(a$$695, c$$549, b$$682, f$$188) {
  function v1889(c$$550, a$$696) {
    function v1888(g$$200) {
      a$$696.e = g$$200;
      JAM.call(c$$550, null, [a$$696], JAM.policy.p3);
      return;
    }
    return v1888;
  }
  try {
    JAM.call(a$$695[c$$549], a$$695, [v1889(b$$682, f$$188)], JAM.policy.p3);
  } catch (k$$77) {
  }
  return;
}
function v1887(a$$694, c$$548) {
  var v9831 = a$$694;
  if (v9831) {
    v9831 = typeof c$$548 == "object";
  }
  if (v9831) {
    var b$$681;
    for (b$$681 in c$$548) {
      JAM.set(a$$694, b$$681, c$$548[b$$681], JAM.policy.p2);
    }
  }
  return a$$694;
}
function v1886(a$$693, c$$547) {
  var b$$680 = 0;
  var f$$187 = 1;
  var v3210 = b$$680 < c$$547;
  for (;v3210;) {
    f$$187 = f$$187 * 10;
    b$$680++;
    v3210 = b$$680 < c$$547;
  }
  return JAM.call(Math.round, Math, [a$$693 * f$$187], JAM.policy.p3) / f$$187;
}
function v1885(e$$347, t$$15, i$$210) {
  function v1884() {
    return JAM.call(e$$347, null, [N$$2], JAM.policy.p3);
  }
  function v1883() {
    if (g$$199) {
      JAM.call(g$$199.stop, g$$199, [], JAM.policy.p3);
      var v29344 = e$$347.colorbox;
      JAM.call(v29344.close, v29344, [], JAM.policy.p3);
      var v28722 = JAM.call(g$$199.stop, g$$199, [], JAM.policy.p3);
      JAM.call(v28722.remove, v28722, [], JAM.policy.p3);
      JAM.call(w$$18.remove, w$$18, [], JAM.policy.p3);
      q$$21 = !1;
      g$$199 = null;
      var v24310 = JAM.call(e$$347, null, ["." + et$$1], JAM.policy.p3);
      var v19785 = JAM.call(v24310.removeData, v24310, [Y$$2], JAM.policy.p3);
      JAM.call(v19785.removeClass, v19785, [et$$1], JAM.policy.p3);
      var v15532 = JAM.call(e$$347, null, [t$$15], JAM.policy.p3);
      JAM.call(v15532.unbind, v15532, ["click." + Z$$2], JAM.policy.p3);
    }
    return;
  }
  function v1882() {
    function v1881() {
      function v1880() {
        q$$21 = !1;
        c$$545(rt$$3, B$$3.onClosed);
        return;
      }
      var v24311 = JAM.call(g$$199.add, g$$199, [w$$18], JAM.policy.p3);
      var v19786 = JAM.call(v24311.css, v24311, [{opacity:1, cursor:"auto"}], JAM.policy.p3);
      JAM.call(v19786.hide, v19786, [], JAM.policy.p3);
      c$$545(ht);
      var v15534 = JAM.call(H$$3.empty, H$$3, [], JAM.policy.p3);
      JAM.call(v15534.remove, v15534, [], JAM.policy.p3);
      JAM.call(setTimeout, null, [v1880, 1]);
      return;
    }
    var v9834 = U$$2;
    if (v9834) {
      v9834 = !q$$21;
    }
    var v3212 = v9834;
    if (v3212) {
      q$$21 = !0;
      U$$2 = !1;
      c$$545(nt, B$$3.onCleanup);
      JAM.call(E$$3.unbind, E$$3, ["." + Z$$2], JAM.policy.p3);
      var v24314 = B$$3.fadeOut;
      if (!v24314) {
        v24314 = 0;
      }
      JAM.call(w$$18.fadeTo, w$$18, [v24314, 0], JAM.policy.p3);
      var v15535 = JAM.call(g$$199.stop, g$$199, [], JAM.policy.p3);
      var v19788 = B$$3.fadeOut;
      if (!v19788) {
        v19788 = 0;
      }
      JAM.call(v15535.fadeTo, v15535, [v19788, 0, v1881], JAM.policy.p3);
    }
    return;
  }
  function v1879() {
    var v15537 = !$$$4;
    if (v15537) {
      v15537 = k$$76[1];
    }
    var v9835 = v15537;
    if (v9835) {
      var v15538 = B$$3.loop;
      if (!v15538) {
        v15538 = z$$7;
      }
      v9835 = v15538;
    }
    var v3213 = v9835;
    if (v3213) {
      z$$7 = r$$22(-1);
      u$$13(k$$76[z$$7]);
    }
    return;
  }
  function v1878() {
    var v15540 = !$$$4;
    if (v15540) {
      v15540 = k$$76[1];
    }
    var v9836 = v15540;
    if (v9836) {
      var v15541 = B$$3.loop;
      if (!v15541) {
        v15541 = k$$76[z$$7 + 1];
      }
      v9836 = v15541;
    }
    var v3214 = v9836;
    if (v3214) {
      z$$7 = r$$22(1);
      u$$13(k$$76[z$$7]);
    }
    return;
  }
  function v1877(i$$223) {
    function v1876() {
      JAM.call(Q$$2.position, Q$$2, [0, a$$691], JAM.policy.p3);
      return;
    }
    function v1875() {
      function v1874() {
        n$$101.src = "//about:blank";
        return;
      }
      function v1873() {
        var i$$225;
        var o$$33;
        var n$$102 = k$$76[this];
        var r$$27 = JAM.call(e$$347.data, e$$347, [n$$102, Y$$2], JAM.policy.p3);
        var v9837;
        var v19792 = r$$27;
        if (v19792) {
          v19792 = r$$27.href;
        }
        if (v19792) {
          i$$225 = r$$27.href;
          var v19793 = JAM.call(e$$347.isFunction, e$$347, [i$$225], JAM.policy.p3);
          if (v19793) {
            v19793 = i$$225 = JAM.call(i$$225.call, i$$225, [n$$102], JAM.policy.p3);
          }
          v9837 = v19793;
        } else {
          var v15543 = JAM.call(e$$347, null, [n$$102], JAM.policy.p3);
          v9837 = i$$225 = JAM.call(v15543.attr, v15543, ["href"], JAM.policy.p3);
        }
        v9837;
        var v15545 = i$$225;
        if (v15545) {
          var v19794 = r$$27.photo;
          if (!v19794) {
            var v24316 = r$$27.photoRegex;
            v19794 = JAM.call(v24316.test, v24316, [i$$225], JAM.policy.p3);
          }
          v15545 = v19794;
        }
        var v9838 = v15545;
        if (v9838) {
          i$$225 = s$$30(r$$27, i$$225);
          o$$33 = JAM.call(t$$15.createElement, t$$15, ["img"], JAM.policy.p3);
          o$$33.src = i$$225;
        }
        return;
      }
      function v1872() {
        clearTimeout(G$$3);
        JAM.call(F$$3.hide, F$$3, [], JAM.policy.p3);
        c$$545(ot, B$$3.onComplete);
        return;
      }
      function i$$224() {
        var v3215 = e$$347.support.opacity === !1;
        if (v3215) {
          var v9842 = g$$199[0].style;
          JAM.call(v9842.removeAttribute, v9842, ["filter"], JAM.policy.p3);
        }
        return;
      }
      var n$$101;
      var h$$165;
      var a$$692 = k$$76.length;
      var u$$16 = "frameBorder";
      var f$$186 = "allowTransparency";
      if (U$$2) {
        h$$165 = v1872;
        var v27791 = JAM.call(L$$2.html, L$$2, [B$$3.title], JAM.policy.p3);
        var v26357 = JAM.call(v27791.add, v27791, [H$$3], JAM.policy.p3);
        JAM.call(v26357.show, v26357, [], JAM.policy.p3);
        var v24318;
        if (a$$692 > 1) {
          var v29740 = "string" == typeof B$$3.current;
          if (v29740) {
            var v30541 = B$$3.current;
            var v30396 = JAM.call(v30541.replace, v30541, ["{current}", z$$7 + 1], JAM.policy.p3);
            var v29994 = JAM.call(S$$2.html, S$$2, [JAM.call(v30396.replace, v30396, ["{total}", a$$692], JAM.policy.p3)], JAM.policy.p3);
            JAM.call(v29994.show, v29994, [], JAM.policy.p3);
          }
          var v30228;
          var v30543 = B$$3.loop;
          if (!v30543) {
            v30543 = a$$692 - 1 > z$$7;
          }
          if (v30543) {
            v30228 = "show";
          } else {
            v30228 = "hide";
          }
          var v29741 = JAM.call(R$$2[v30228], R$$2, [], JAM.policy.p3);
          JAM.call(v29741.html, v29741, [B$$3.next], JAM.policy.p3);
          var v29996;
          var v30398 = B$$3.loop;
          if (!v30398) {
            v30398 = z$$7;
          }
          if (v30398) {
            v29996 = "show";
          } else {
            v29996 = "hide";
          }
          var v29345 = JAM.call(I$$3[v29996], I$$3, [], JAM.policy.p3);
          JAM.call(v29345.html, v29345, [B$$3.previous], JAM.policy.p3);
          JAM.call(ct$$1, null, [], JAM.policy.p3);
          var v27792 = B$$3.preloading;
          if (v27792) {
            v27792 = JAM.call(e$$347.each, e$$347, [[r$$22(-1), r$$22(1)], v1873], JAM.policy.p3);
          }
          v24318 = v27792;
        } else {
          v24318 = JAM.call(P$$2.hide, P$$2, [], JAM.policy.p3);
        }
        v24318;
        var v19795;
        if (B$$3.iframe) {
          n$$101 = o$$26("iframe")[0];
          var v29998 = u$$16 in n$$101;
          if (v29998) {
            JAM.set(n$$101, u$$16, 0, JAM.policy.p2);
          }
          var v29744 = f$$186 in n$$101;
          if (v29744) {
            JAM.set(n$$101, f$$186, "true", JAM.policy.p2);
          }
          var v29349 = B$$3.scrolling;
          if (!v29349) {
            n$$101.scrolling = "no";
          }
          var v29746 = JAM.call(e$$347, null, [n$$101], JAM.policy.p3);
          var v29999 = B$$3.href;
          var v30230 = new Date;
          var v29350 = JAM.call(v29746.attr, v29746, [{src:v29999, name:JAM.call(v30230.getTime, v30230, [], JAM.policy.p3), "class":Z$$2 + "Iframe", allowFullScreen:!0, webkitAllowFullScreen:!0, mozallowfullscreen:!0}], JAM.policy.p3);
          var v28725 = JAM.call(v29350.one, v29350, ["load", h$$165], JAM.policy.p3);
          JAM.call(v28725.appendTo, v28725, [H$$3], JAM.policy.p3);
          JAM.call(lt.one, lt, [ht, v1874], JAM.policy.p3);
          var v26359 = B$$3.fastIframe;
          if (v26359) {
            var v27793 = JAM.call(e$$347, null, [n$$101], JAM.policy.p3);
            v26359 = JAM.call(v27793.trigger, v27793, ["load"], JAM.policy.p3);
          }
          v19795 = v26359;
        } else {
          v19795 = JAM.call(h$$165, null, [], JAM.policy.p3);
        }
        v19795;
        var v15548;
        if ("fade" === B$$3.transition) {
          v15548 = JAM.call(g$$199.fadeTo, g$$199, [d$$406, 1, i$$224], JAM.policy.p3);
        } else {
          v15548 = i$$224();
        }
        v15548;
      }
      return;
    }
    if (U$$2) {
      var a$$691;
      var v3216;
      if ("none" === B$$3.transition) {
        v3216 = 0;
      } else {
        v3216 = B$$3.speed;
      }
      var d$$406 = v3216;
      var v27794 = JAM.call(H$$3.empty, H$$3, [], JAM.policy.p3);
      JAM.call(v27794.remove, v27794, [], JAM.policy.p3);
      var v27795 = o$$26(st$$2, "LoadedContent");
      H$$3 = JAM.call(v27795.append, v27795, [i$$223], JAM.policy.p3);
      var v29351 = JAM.call(H$$3.hide, H$$3, [], JAM.policy.p3);
      var v28726 = JAM.call(v29351.appendTo, v29351, [JAM.call(W$$2.show, W$$2, [], JAM.policy.p3)], JAM.policy.p3);
      var v30231 = B$$3;
      var v30399 = B$$3.w;
      if (!v30399) {
        v30399 = JAM.call(H$$3.width, H$$3, [], JAM.policy.p3);
      }
      v30231.w = v30399;
      var v30232;
      var v30546 = B$$3.mw;
      if (v30546) {
        v30546 = B$$3.mw < B$$3.w;
      }
      if (v30546) {
        v30232 = B$$3.mw;
      } else {
        v30232 = B$$3.w;
      }
      B$$3.w = v30232;
      var v29353 = B$$3.w;
      var v29748;
      if (B$$3.scrolling) {
        v29748 = "auto";
      } else {
        v29748 = "hidden";
      }
      var v27796 = JAM.call(v28726.css, v28726, [{width:v29353, overflow:v29748}], JAM.policy.p3);
      var v30006 = B$$3;
      var v30233 = B$$3.h;
      if (!v30233) {
        v30233 = JAM.call(H$$3.height, H$$3, [], JAM.policy.p3);
      }
      v30006.h = v30233;
      var v30007;
      var v30402 = B$$3.mh;
      if (v30402) {
        v30402 = B$$3.mh < B$$3.h;
      }
      if (v30402) {
        v30007 = B$$3.mh;
      } else {
        v30007 = B$$3.h;
      }
      B$$3.h = v30007;
      var v26360 = JAM.call(v27796.css, v27796, [{height:B$$3.h}], JAM.policy.p3);
      JAM.call(v26360.prependTo, v26360, [y$$55], JAM.policy.p3);
      JAM.call(W$$2.hide, W$$2, [], JAM.policy.p3);
      var v19797 = JAM.call(e$$347, null, [j$$109], JAM.policy.p3);
      JAM.call(v19797.css, v19797, [{"float":"none"}], JAM.policy.p3);
      a$$691 = v1875;
      var v9844;
      if ("fade" === B$$3.transition) {
        v9844 = JAM.call(g$$199.fadeTo, g$$199, [d$$406, 0, v1876], JAM.policy.p3);
      } else {
        v9844 = JAM.call(Q$$2.position, Q$$2, [d$$406, a$$691], JAM.policy.p3);
      }
      v9844;
    }
    return;
  }
  function v1871(e$$357) {
    var t$$29;
    if (U$$2) {
      e$$357 = e$$357 || {};
      var v30008 = e$$357.width;
      if (v30008) {
        B$$3.w = h$$162(e$$357.width, "x") - A$$4 - _$$3;
      }
      var v29749 = e$$357.innerWidth;
      if (v29749) {
        var v30009 = B$$3;
        var v30952 = h$$162(e$$357.innerWidth, "x");
        v30009.w = v30952;
      }
      JAM.call(H$$3.css, H$$3, [{width:B$$3.w}], JAM.policy.p3);
      var v28729 = e$$357.height;
      if (v28729) {
        B$$3.h = h$$162(e$$357.height, "y") - D$$3 - O$$2;
      }
      var v27798 = e$$357.innerHeight;
      if (v27798) {
        var v28730 = B$$3;
        var v30953 = h$$162(e$$357.innerHeight, "y");
        v28730.h = v30953;
      }
      var v27799 = e$$357.innerHeight;
      if (!v27799) {
        v27799 = e$$357.height;
      }
      var v26361 = v27799;
      if (!v26361) {
        t$$29 = JAM.call(H$$3.scrollTop, H$$3, [], JAM.policy.p3);
        JAM.call(H$$3.css, H$$3, [{height:"auto"}], JAM.policy.p3);
        var v28732 = B$$3;
        var v30954 = JAM.call(H$$3.height, H$$3, [], JAM.policy.p3);
        v28732.h = v30954;
      }
      JAM.call(H$$3.css, H$$3, [{height:B$$3.h}], JAM.policy.p3);
      if (t$$29) {
        JAM.call(H$$3.scrollTop, H$$3, [t$$29], JAM.policy.p3);
      }
      var v19800;
      if ("none" === B$$3.transition) {
        v19800 = 0;
      } else {
        v19800 = B$$3.speed;
      }
      JAM.call(Q$$2.position, Q$$2, [v19800], JAM.policy.p3);
    }
    return;
  }
  function v1870(t$$28, i$$222) {
    function v1869() {
      function v1868() {
        JAM.call(E$$3.bind, E$$3, ["resize." + Z$$2, Q$$2.position], JAM.policy.p3);
        return;
      }
      o$$32();
      $$$4 = !1;
      v$$11[0].style.width = B$$3.w + A$$4 + _$$3 + "px";
      v$$11[0].style.height = B$$3.h + D$$3 + O$$2 + "px";
      var v15552 = B$$3.reposition;
      if (v15552) {
        JAM.call(setTimeout, null, [v1868, 1]);
      }
      if (i$$222) {
        JAM.call(i$$222, null, [], JAM.policy.p3);
      }
      return;
    }
    function v1867(e$$356) {
      var v3219;
      if (r$$26[e$$356] !== dt[e$$356]) {
        u$$15 = t$$28;
        v3219 = void 0;
      } else {
        v3219 = void 0;
      }
      return v3219;
    }
    function o$$32() {
      x$$74[0].style.width = C$$3[0].style.width = y$$55[0].style.width = parseInt(g$$199[0].style.width, 10) - _$$3 + "px";
      y$$55[0].style.height = b$$679[0].style.height = T$$4[0].style.height = parseInt(g$$199[0].style.height, 10) - O$$2 + "px";
      return;
    }
    var r$$26;
    var l$$83;
    var s$$32;
    var a$$690 = 0;
    var d$$405 = 0;
    var c$$546 = JAM.call(g$$199.offset, g$$199, [], JAM.policy.p3);
    JAM.call(E$$3.unbind, E$$3, ["resize." + Z$$2], JAM.policy.p3);
    JAM.call(g$$199.css, g$$199, [{top:-9E4, left:-9E4}], JAM.policy.p3);
    l$$83 = JAM.call(E$$3.scrollTop, E$$3, [], JAM.policy.p3);
    s$$32 = JAM.call(E$$3.scrollLeft, E$$3, [], JAM.policy.p3);
    var v29361;
    if (B$$3.fixed) {
      c$$546.top = c$$546.top - l$$83;
      c$$546.left = c$$546.left - s$$32;
      v29361 = JAM.call(g$$199.css, g$$199, [{position:"fixed"}], JAM.policy.p3);
    } else {
      a$$690 = l$$83;
      d$$405 = s$$32;
      v29361 = JAM.call(g$$199.css, g$$199, [{position:"absolute"}], JAM.policy.p3);
    }
    v29361;
    var v29362 = d$$405;
    var v29753;
    if (B$$3.right !== !1) {
      v29753 = JAM.call(Math.max, Math, [JAM.call(E$$3.width, E$$3, [], JAM.policy.p3) - B$$3.w - A$$4 - _$$3 - h$$162(B$$3.right, "x"), 0], JAM.policy.p3);
    } else {
      var v30014;
      if (B$$3.left !== !1) {
        v30014 = h$$162(B$$3.left, "x");
      } else {
        v30014 = JAM.call(Math.round, Math, [JAM.call(Math.max, Math, [JAM.call(E$$3.width, E$$3, [], JAM.policy.p3) - B$$3.w - A$$4 - _$$3, 0], JAM.policy.p3) / 2], JAM.policy.p3);
      }
      v29753 = v30014;
    }
    d$$405 = v29362 + v29753;
    var v28736 = a$$690;
    var v29364;
    if (B$$3.bottom !== !1) {
      v29364 = JAM.call(Math.max, Math, [n$$96() - B$$3.h - D$$3 - O$$2 - h$$162(B$$3.bottom, "y"), 0], JAM.policy.p3);
    } else {
      var v29755;
      if (B$$3.top !== !1) {
        v29755 = h$$162(B$$3.top, "y");
      } else {
        v29755 = JAM.call(Math.round, Math, [JAM.call(Math.max, Math, [n$$96() - B$$3.h - D$$3 - O$$2, 0], JAM.policy.p3) / 2], JAM.policy.p3);
      }
      v29364 = v29755;
    }
    a$$690 = v28736 + v29364;
    JAM.call(g$$199.css, g$$199, [{top:c$$546.top, left:c$$546.left, visibility:"visible"}], JAM.policy.p3);
    v$$11[0].style.width = v$$11[0].style.height = "9999px";
    r$$26 = {width:B$$3.w + A$$4 + _$$3, height:B$$3.h + D$$3 + O$$2, top:a$$690, left:d$$405};
    if (t$$28) {
      var u$$15 = 0;
      JAM.call(e$$347.each, e$$347, [r$$26, v1867], JAM.policy.p3);
      t$$28 = u$$15;
    }
    dt = r$$26;
    if (!t$$28) {
      JAM.call(g$$199.css, g$$199, [r$$26], JAM.policy.p3);
    }
    var v9848 = JAM.call(g$$199.dequeue, g$$199, [], JAM.policy.p3);
    JAM.call(v9848.animate, v9848, [r$$26, {duration:t$$28 || 0, complete:v1869, step:o$$32}], JAM.policy.p3);
    return;
  }
  function v1866(t$$27, i$$221) {
    function v1865() {
      var v15560 = JAM.call(e$$347.data, e$$347, [this, Y$$2], JAM.policy.p3);
      if (!v15560) {
        v15560 = X$$2;
      }
      JAM.call(e$$347.data, e$$347, [this, Y$$2, JAM.call(e$$347.extend, e$$347, [{}, v15560, t$$27], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    var o$$31 = this;
    t$$27 = t$$27 || {};
    f$$184();
    if (p$$50()) {
      if (JAM.call(e$$347.isFunction, e$$347, [o$$31], JAM.policy.p3)) {
        o$$31 = JAM.call(e$$347, null, ["<a/>"], JAM.policy.p3);
        t$$27.open = !0;
      } else {
        if (!o$$31[0]) {
          return o$$31;
        }
      }
      if (i$$221) {
        t$$27.onComplete = i$$221;
      }
      var v15561 = JAM.call(o$$31.each, o$$31, [v1865], JAM.policy.p3);
      JAM.call(v15561.addClass, v15561, [et$$1], JAM.policy.p3);
      var v19810 = JAM.call(e$$347.isFunction, e$$347, [t$$27.open], JAM.policy.p3);
      if (v19810) {
        var v24334 = t$$27.open;
        v19810 = JAM.call(v24334.call, v24334, [o$$31], JAM.policy.p3);
      }
      var v15562 = v19810;
      if (!v15562) {
        v15562 = t$$27.open;
      }
      var v9852 = v15562;
      if (v9852) {
        u$$13(o$$31[0]);
      }
    }
    return o$$31;
  }
  function v1864() {
    function v1863() {
      var v3225;
      if (r$$25) {
        var v9853 = B$$3.slideshow;
        if (!v9853) {
          JAM.call(lt.unbind, lt, [nt, n$$99], JAM.policy.p3);
          v9853 = n$$99();
        }
        v3225 = v9853;
      } else {
        var v15565 = B$$3.slideshow;
        if (v15565) {
          v15565 = k$$76[1];
        }
        var v9854 = v15565;
        if (v9854) {
          r$$25 = !0;
          JAM.call(lt.one, lt, [nt, n$$99], JAM.policy.p3);
          var v24335;
          if (B$$3.slideshowAuto) {
            v24335 = i$$220();
          } else {
            v24335 = o$$30();
          }
          v24335;
          v9854 = JAM.call(M$$2.show, M$$2, [], JAM.policy.p3);
        }
        v3225 = v9854;
      }
      v3225;
      return;
    }
    function e$$355() {
      clearTimeout(h$$163);
      return;
    }
    function t$$26() {
      var v9855 = B$$3.loop;
      if (!v9855) {
        v9855 = k$$76[z$$7 + 1];
      }
      var v3226 = v9855;
      if (v3226) {
        e$$355();
        h$$163 = JAM.call(setTimeout, null, [Q$$2.next, B$$3.slideshowSpeed]);
      }
      return;
    }
    function i$$220() {
      var v19812 = JAM.call(M$$2.html, M$$2, [B$$3.slideshowStop], JAM.policy.p3);
      var v15570 = JAM.call(v19812.unbind, v19812, [s$$31], JAM.policy.p3);
      JAM.call(v15570.one, v15570, [s$$31, o$$30], JAM.policy.p3);
      var v15571 = JAM.call(lt.bind, lt, [ot, t$$26], JAM.policy.p3);
      JAM.call(v15571.bind, v15571, [it, e$$355], JAM.policy.p3);
      var v9856 = JAM.call(g$$199.removeClass, g$$199, [l$$82 + "off"], JAM.policy.p3);
      JAM.call(v9856.addClass, v9856, [l$$82 + "on"], JAM.policy.p3);
      return;
    }
    function o$$30() {
      function v1862() {
        JAM.call(Q$$2.next, Q$$2, [], JAM.policy.p3);
        i$$220();
        return;
      }
      e$$355();
      var v19813 = JAM.call(lt.unbind, lt, [ot, t$$26], JAM.policy.p3);
      JAM.call(v19813.unbind, v19813, [it, e$$355], JAM.policy.p3);
      var v19814 = JAM.call(M$$2.html, M$$2, [B$$3.slideshowStart], JAM.policy.p3);
      var v15573 = JAM.call(v19814.unbind, v19814, [s$$31], JAM.policy.p3);
      JAM.call(v15573.one, v15573, [s$$31, v1862], JAM.policy.p3);
      var v9858 = JAM.call(g$$199.removeClass, g$$199, [l$$82 + "on"], JAM.policy.p3);
      JAM.call(v9858.addClass, v9858, [l$$82 + "off"], JAM.policy.p3);
      return;
    }
    function n$$99() {
      r$$25 = !1;
      JAM.call(M$$2.hide, M$$2, [], JAM.policy.p3);
      e$$355();
      var v15575 = JAM.call(lt.unbind, lt, [ot, t$$26], JAM.policy.p3);
      JAM.call(v15575.unbind, v15575, [it, e$$355], JAM.policy.p3);
      JAM.call(g$$199.removeClass, g$$199, [l$$82 + "off " + l$$82 + "on"], JAM.policy.p3);
      return;
    }
    var r$$25;
    var h$$163;
    var l$$82 = Z$$2 + "Slideshow_";
    var s$$31 = "click." + Z$$2;
    return v1863;
  }
  function o$$26(i$$211, o$$27, n$$97) {
    var r$$23 = JAM.call(t$$15.createElement, t$$15, [i$$211], JAM.policy.p3);
    if (o$$27) {
      r$$23.id = Z$$2 + o$$27;
    }
    if (n$$97) {
      r$$23.style.cssText = n$$97;
    }
    return JAM.call(e$$347, null, [r$$23], JAM.policy.p3);
  }
  function n$$96() {
    var v3227;
    if (i$$210.innerHeight) {
      v3227 = i$$210.innerHeight;
    } else {
      var v9861 = JAM.call(e$$347, null, [i$$210], JAM.policy.p3);
      v3227 = JAM.call(v9861.height, v9861, [], JAM.policy.p3);
    }
    return v3227;
  }
  function r$$22(e$$348) {
    var t$$16 = k$$76.length;
    var i$$212 = (z$$7 + e$$348) % t$$16;
    var v3229;
    if (0 > i$$212) {
      v3229 = t$$16 + i$$212;
    } else {
      v3229 = i$$212;
    }
    return v3229;
  }
  function h$$162(e$$349, t$$17) {
    var v15577;
    if (JAM.call(/%/.test, /%/, [e$$349], JAM.policy.p3)) {
      var v24338;
      if ("x" === t$$17) {
        v24338 = JAM.call(E$$3.width, E$$3, [], JAM.policy.p3);
      } else {
        v24338 = n$$96();
      }
      v15577 = v24338 / 100;
    } else {
      v15577 = 1;
    }
    return JAM.call(Math.round, Math, [v15577 * parseInt(e$$349, 10)], JAM.policy.p3);
  }
  function s$$30(e$$351, t$$19) {
    var v3231;
    var v15578 = e$$351.retinaUrl;
    if (v15578) {
      v15578 = i$$210.devicePixelRatio > 1;
    }
    if (v15578) {
      v3231 = JAM.call(t$$19.replace, t$$19, [e$$351.photoRegex, e$$351.retinaSuffix], JAM.policy.p3);
    } else {
      v3231 = t$$19;
    }
    return v3231;
  }
  function a$$688(e$$352) {
    var v9869 = "contains" in g$$199[0];
    if (v9869) {
      var v19820 = g$$199[0];
      v9869 = !JAM.call(v19820.contains, v19820, [e$$352.target], JAM.policy.p3);
    }
    var v3232 = v9869;
    if (v3232) {
      JAM.call(e$$352.stopPropagation, e$$352, [], JAM.policy.p3);
      JAM.call(g$$199.focus, g$$199, [], JAM.policy.p3);
    }
    return;
  }
  function d$$404() {
    var t$$20;
    var i$$213 = JAM.call(e$$347.data, e$$347, [N$$2, Y$$2], JAM.policy.p3);
    var v3233;
    if (null == i$$213) {
      B$$3 = JAM.call(e$$347.extend, e$$347, [{}, X$$2], JAM.policy.p3);
      var v19822 = console;
      if (v19822) {
        v19822 = console.log;
      }
      var v15581 = v19822;
      if (v15581) {
        v15581 = JAM.call(console.log, console, ["Error: cboxElement missing settings object"], JAM.policy.p3);
      }
      v3233 = v15581;
    } else {
      v3233 = B$$3 = JAM.call(e$$347.extend, e$$347, [{}, i$$213], JAM.policy.p3);
    }
    v3233;
    for (t$$20 in B$$3) {
      var v9871 = JAM.call(e$$347.isFunction, e$$347, [B$$3[t$$20]], JAM.policy.p3);
      if (v9871) {
        v9871 = "on" !== JAM.call(t$$20.slice, t$$20, [0, 2], JAM.policy.p3);
      }
      var v3234 = v9871;
      if (v3234) {
        var v9872 = B$$3;
        var v15584 = B$$3[t$$20];
        var v30955 = JAM.call(v15584.call, v15584, [N$$2], JAM.policy.p3);
        JAM.set(v9872, t$$20, v30955, JAM.policy.p2);
      }
    }
    var v19823 = B$$3;
    var v27808 = B$$3.rel;
    if (!v27808) {
      v27808 = N$$2.rel;
    }
    var v26376 = v27808;
    if (!v26376) {
      var v27809 = JAM.call(e$$347, null, [N$$2], JAM.policy.p3);
      v26376 = JAM.call(v27809.data, v27809, ["rel"], JAM.policy.p3);
    }
    var v24339 = v26376;
    if (!v24339) {
      v24339 = "nofollow";
    }
    v19823.rel = v24339;
    var v19824 = B$$3;
    var v24340 = B$$3.href;
    if (!v24340) {
      var v26378 = JAM.call(e$$347, null, [N$$2], JAM.policy.p3);
      v24340 = JAM.call(v26378.attr, v26378, ["href"], JAM.policy.p3);
    }
    v19824.href = v24340;
    var v15585 = B$$3.title;
    if (!v15585) {
      v15585 = N$$2.title;
    }
    B$$3.title = v15585;
    var v9873 = "string" == typeof B$$3.href;
    if (v9873) {
      var v15587 = B$$3;
      var v30956 = JAM.call(e$$347.trim, e$$347, [B$$3.href], JAM.policy.p3);
      v15587.href = v30956;
    }
    return;
  }
  function c$$545(i$$214, o$$28) {
    var v15588 = JAM.call(e$$347, null, [t$$15], JAM.policy.p3);
    JAM.call(v15588.trigger, v15588, [i$$214], JAM.policy.p3);
    JAM.call(lt.triggerHandler, lt, [i$$214], JAM.policy.p3);
    var v9874 = JAM.call(e$$347.isFunction, e$$347, [o$$28], JAM.policy.p3);
    if (v9874) {
      JAM.call(o$$28.call, o$$28, [N$$2], JAM.policy.p3);
    }
    return;
  }
  function u$$13(i$$215) {
    function v1846() {
      var v3235 = JAM.call(e$$347, null, [N$$2], JAM.policy.p3);
      JAM.call(v3235.focus, v3235, [], JAM.policy.p3);
      return;
    }
    function v1845() {
      JAM.call(t$$15.removeEventListener, t$$15, ["focus", a$$688, !0], JAM.policy.p3);
      return;
    }
    function v1844() {
      var t$$21;
      var i$$216 = JAM.call(e$$347.data, e$$347, [this, Y$$2], JAM.policy.p3);
      if (i$$216) {
        var v24341 = JAM.call(e$$347, null, [this], JAM.policy.p3);
        var v19828 = JAM.call(v24341.data, v24341, ["rel"], JAM.policy.p3);
        if (!v19828) {
          v19828 = i$$216.rel;
        }
        var v15589 = v19828;
        if (!v15589) {
          v15589 = this.rel;
        }
        t$$21 = v15589;
      }
      return t$$21 === B$$3.rel;
    }
    if (!q$$21) {
      N$$2 = i$$215;
      d$$404();
      k$$76 = JAM.call(e$$347, null, [N$$2], JAM.policy.p3);
      z$$7 = 0;
      var v29757 = "nofollow" !== B$$3.rel;
      if (v29757) {
        var v30413 = JAM.call(e$$347, null, ["." + et$$1], JAM.policy.p3);
        k$$76 = JAM.call(v30413.filter, v30413, [v1844], JAM.policy.p3);
        z$$7 = JAM.call(k$$76.index, k$$76, [N$$2], JAM.policy.p3);
        var v30252 = -1 === z$$7;
        if (v30252) {
          k$$76 = JAM.call(k$$76.add, k$$76, [N$$2], JAM.policy.p3);
          z$$7 = k$$76.length - 1;
        }
      }
      var v30024 = parseFloat(B$$3.opacity);
      var v30254;
      if (B$$3.overlayClose) {
        v30254 = "pointer";
      } else {
        v30254 = "auto";
      }
      var v29365 = JAM.call(w$$18.css, w$$18, [{opacity:v30024, cursor:v30254, visibility:"visible"}], JAM.policy.p3);
      JAM.call(v29365.show, v29365, [], JAM.policy.p3);
      if (J$$3) {
        var v29366 = JAM.call(g$$199.add, g$$199, [w$$18], JAM.policy.p3);
        JAM.call(v29366.removeClass, v29366, [J$$3], JAM.policy.p3);
      }
      var v27811 = B$$3.className;
      if (v27811) {
        var v28739 = JAM.call(g$$199.add, g$$199, [w$$18], JAM.policy.p3);
        JAM.call(v28739.addClass, v28739, [B$$3.className], JAM.policy.p3);
      }
      J$$3 = B$$3.className;
      var v24343;
      if (B$$3.closeButton) {
        var v26380 = JAM.call(K$$2.html, K$$2, [B$$3.close], JAM.policy.p3);
        v24343 = JAM.call(v26380.appendTo, v26380, [y$$55], JAM.policy.p3);
      } else {
        v24343 = JAM.call(K$$2.appendTo, K$$2, ["<div/>"], JAM.policy.p3);
      }
      v24343;
      if (!U$$2) {
        U$$2 = $$$4 = !0;
        JAM.call(g$$199.css, g$$199, [{visibility:"hidden", display:"block"}], JAM.policy.p3);
        H$$3 = o$$26(st$$2, "LoadedContent", "width:0; height:0; overflow:hidden");
        var v30805 = JAM.call(y$$55.css, y$$55, [{width:"", height:""}], JAM.policy.p3);
        JAM.call(v30805.append, v30805, [H$$3], JAM.policy.p3);
        O$$2 = JAM.call(x$$74.height, x$$74, [], JAM.policy.p3) + JAM.call(C$$3.height, C$$3, [], JAM.policy.p3) + JAM.call(y$$55.outerHeight, y$$55, [!0], JAM.policy.p3) - JAM.call(y$$55.height, y$$55, [], JAM.policy.p3);
        _$$3 = JAM.call(b$$679.width, b$$679, [], JAM.policy.p3) + JAM.call(T$$4.width, T$$4, [], JAM.policy.p3) + JAM.call(y$$55.outerWidth, y$$55, [!0], JAM.policy.p3) - JAM.call(y$$55.width, y$$55, [], JAM.policy.p3);
        D$$3 = JAM.call(H$$3.outerHeight, H$$3, [!0], JAM.policy.p3);
        A$$4 = JAM.call(H$$3.outerWidth, H$$3, [!0], JAM.policy.p3);
        var v30557 = B$$3;
        var v30957 = h$$162(B$$3.initialWidth, "x");
        v30557.w = v30957;
        var v30415 = B$$3;
        var v30958 = h$$162(B$$3.initialHeight, "y");
        v30415.h = v30958;
        JAM.call(H$$3.css, H$$3, [{width:"", height:B$$3.h}], JAM.policy.p3);
        JAM.call(Q$$2.position, Q$$2, [], JAM.policy.p3);
        c$$545(tt$$1, B$$3.onOpen);
        var v29367 = JAM.call(P$$2.add, P$$2, [L$$2], JAM.policy.p3);
        JAM.call(v29367.hide, v29367, [], JAM.policy.p3);
        JAM.call(g$$199.focus, g$$199, [], JAM.policy.p3);
        var v28741 = B$$3.trapFocus;
        if (v28741) {
          v28741 = t$$15.addEventListener;
        }
        var v27813 = v28741;
        if (v27813) {
          JAM.call(t$$15.addEventListener, t$$15, ["focus", a$$688, !0], JAM.policy.p3);
          JAM.call(lt.one, lt, [rt$$3, v1845], JAM.policy.p3);
        }
        var v26382 = B$$3.returnFocus;
        if (v26382) {
          JAM.call(lt.one, lt, [rt$$3, v1846], JAM.policy.p3);
        }
      }
      m$$50();
    }
    return;
  }
  function f$$184() {
    var v9877 = !g$$199;
    if (v9877) {
      v9877 = t$$15.body;
    }
    var v3237 = v9877;
    if (v3237) {
      V$$2 = !1;
      E$$3 = JAM.call(e$$347, null, [i$$210], JAM.policy.p3);
      var v30417 = o$$26(st$$2);
      var v30650;
      if (e$$347.support.opacity === !1) {
        v30650 = Z$$2 + "IE";
      } else {
        v30650 = "";
      }
      var v30256 = JAM.call(v30417.attr, v30417, [{id:Y$$2, "class":v30650, role:"dialog", tabindex:"-1"}], JAM.policy.p3);
      g$$199 = JAM.call(v30256.hide, v30256, [], JAM.policy.p3);
      var v30026 = o$$26(st$$2, "Overlay");
      w$$18 = JAM.call(v30026.hide, v30026, [], JAM.policy.p3);
      F$$3 = JAM.call(e$$347, null, [[o$$26(st$$2, "LoadingOverlay")[0], o$$26(st$$2, "LoadingGraphic")[0]]], JAM.policy.p3);
      v$$11 = o$$26(st$$2, "Wrapper");
      var v28742 = o$$26(st$$2, "Content");
      var v28743 = L$$2 = o$$26(st$$2, "Title");
      var v28744 = S$$2 = o$$26(st$$2, "Current");
      var v29369 = JAM.call(e$$347, null, ['<button type="button"/>'], JAM.policy.p3);
      var v28745 = I$$3 = JAM.call(v29369.attr, v29369, [{id:Z$$2 + "Previous"}], JAM.policy.p3);
      var v29371 = JAM.call(e$$347, null, ['<button type="button"/>'], JAM.policy.p3);
      y$$55 = JAM.call(v28742.append, v28742, [v28743, v28744, v28745, R$$2 = JAM.call(v29371.attr, v29371, [{id:Z$$2 + "Next"}], JAM.policy.p3), M$$2 = o$$26("button", "Slideshow"), F$$3], JAM.policy.p3);
      var v27814 = JAM.call(e$$347, null, ['<button type="button"/>'], JAM.policy.p3);
      K$$2 = JAM.call(v27814.attr, v27814, [{id:Z$$2 + "Close"}], JAM.policy.p3);
      var v29373 = o$$26(st$$2);
      var v28749 = JAM.call(v29373.append, v29373, [o$$26(st$$2, "TopLeft"), x$$74 = o$$26(st$$2, "TopCenter"), o$$26(st$$2, "TopRight")], JAM.policy.p3);
      var v29377 = o$$26(st$$2, !1, "clear:left");
      var v28750 = JAM.call(v29377.append, v29377, [b$$679 = o$$26(st$$2, "MiddleLeft"), y$$55, T$$4 = o$$26(st$$2, "MiddleRight")], JAM.policy.p3);
      var v29380 = o$$26(st$$2, !1, "clear:left");
      var v27816 = JAM.call(v$$11.append, v$$11, [v28749, v28750, JAM.call(v29380.append, v29380, [o$$26(st$$2, "BottomLeft"), C$$3 = o$$26(st$$2, "BottomCenter"), o$$26(st$$2, "BottomRight")], JAM.policy.p3)], JAM.policy.p3);
      var v26383 = JAM.call(v27816.find, v27816, ["div div"], JAM.policy.p3);
      JAM.call(v26383.css, v26383, [{"float":"left"}], JAM.policy.p3);
      W$$2 = o$$26(st$$2, !1, "position:absolute; width:9999px; visibility:hidden; display:none; max-width:none;");
      var v24346 = JAM.call(R$$2.add, R$$2, [I$$3], JAM.policy.p3);
      var v19830 = JAM.call(v24346.add, v24346, [S$$2], JAM.policy.p3);
      P$$2 = JAM.call(v19830.add, v19830, [M$$2], JAM.policy.p3);
      var v15590 = JAM.call(e$$347, null, [t$$15.body], JAM.policy.p3);
      JAM.call(v15590.append, v15590, [w$$18, JAM.call(g$$199.append, g$$199, [v$$11, W$$2], JAM.policy.p3)], JAM.policy.p3);
    }
    return;
  }
  function p$$50() {
    function v1851(e$$354) {
      var t$$22 = e$$354.keyCode;
      var v19832 = U$$2;
      if (v19832) {
        v19832 = B$$3.escKey;
      }
      var v15592 = v19832;
      if (v15592) {
        v15592 = 27 === t$$22;
      }
      var v9878 = v15592;
      if (v9878) {
        JAM.call(e$$354.preventDefault, e$$354, [], JAM.policy.p3);
        JAM.call(Q$$2.close, Q$$2, [], JAM.policy.p3);
      }
      var v24347 = U$$2;
      if (v24347) {
        v24347 = B$$3.arrowKey;
      }
      var v19833 = v24347;
      if (v19833) {
        v19833 = k$$76[1];
      }
      var v15593 = v19833;
      if (v15593) {
        v15593 = !e$$354.altKey;
      }
      var v9879 = v15593;
      if (v9879) {
        var v15594;
        if (37 === t$$22) {
          JAM.call(e$$354.preventDefault, e$$354, [], JAM.policy.p3);
          v15594 = JAM.call(I$$3.click, I$$3, [], JAM.policy.p3);
        } else {
          var v19835 = 39 === t$$22;
          if (v19835) {
            JAM.call(e$$354.preventDefault, e$$354, [], JAM.policy.p3);
            v19835 = JAM.call(R$$2.click, R$$2, [], JAM.policy.p3);
          }
          v15594 = v19835;
        }
        v15594;
      }
      return;
    }
    function v1850() {
      var v3238 = B$$3.overlayClose;
      if (v3238) {
        JAM.call(Q$$2.close, Q$$2, [], JAM.policy.p3);
      }
      return;
    }
    function v1849() {
      JAM.call(Q$$2.close, Q$$2, [], JAM.policy.p3);
      return;
    }
    function v1848() {
      JAM.call(Q$$2.prev, Q$$2, [], JAM.policy.p3);
      return;
    }
    function v1847() {
      JAM.call(Q$$2.next, Q$$2, [], JAM.policy.p3);
      return;
    }
    function i$$217(e$$353) {
      var v24348 = e$$353.which > 1;
      if (!v24348) {
        v24348 = e$$353.shiftKey;
      }
      var v19837 = v24348;
      if (!v19837) {
        v19837 = e$$353.altKey;
      }
      var v15595 = v19837;
      if (!v15595) {
        v15595 = e$$353.metaKey;
      }
      var v9880 = v15595;
      if (!v9880) {
        v9880 = e$$353.ctrlKey;
      }
      var v3239 = v9880;
      if (!v3239) {
        JAM.call(e$$353.preventDefault, e$$353, [], JAM.policy.p3);
        u$$13(this);
      }
      return;
    }
    var v3240;
    if (g$$199) {
      if (!V$$2) {
        V$$2 = !0;
        JAM.call(R$$2.click, R$$2, [v1847], JAM.policy.p3);
        JAM.call(I$$3.click, I$$3, [v1848], JAM.policy.p3);
        JAM.call(K$$2.click, K$$2, [v1849], JAM.policy.p3);
        JAM.call(w$$18.click, w$$18, [v1850], JAM.policy.p3);
        var v26387 = JAM.call(e$$347, null, [t$$15], JAM.policy.p3);
        JAM.call(v26387.bind, v26387, ["keydown." + Z$$2, v1851], JAM.policy.p3);
        var v24350;
        if (JAM.call(e$$347.isFunction, e$$347, [e$$347.fn.on], JAM.policy.p3)) {
          var v26389 = JAM.call(e$$347, null, [t$$15], JAM.policy.p3);
          v24350 = JAM.call(v26389.on, v26389, ["click." + Z$$2, "." + et$$1, i$$217], JAM.policy.p3);
        } else {
          var v26392 = JAM.call(e$$347, null, ["." + et$$1], JAM.policy.p3);
          v24350 = JAM.call(v26392.live, v26392, ["click." + Z$$2, i$$217], JAM.policy.p3);
        }
        v24350;
      }
      v3240 = !0;
    } else {
      v3240 = !1;
    }
    return v3240;
  }
  function m$$50() {
    function v1861(t$$25, i$$219) {
      var v3241 = f$$185 === at;
      if (v3241) {
        var v15597;
        if ("error" === i$$219) {
          var v19840 = o$$26(st$$2, "Error");
          v15597 = JAM.call(v19840.html, v19840, [B$$3.xhrError], JAM.policy.p3);
        } else {
          var v19842 = JAM.call(e$$347, null, [this], JAM.policy.p3);
          v15597 = JAM.call(v19842.contents, v19842, [], JAM.policy.p3);
        }
        JAM.call(u$$14, null, [v15597], JAM.policy.p3);
      }
      return;
    }
    function v1860() {
      j$$109.src = n$$98;
      return;
    }
    function v1859() {
      function v1858() {
        JAM.call(u$$14, null, [j$$109], JAM.policy.p3);
        return;
      }
      function v1857() {
        JAM.call(Q$$2.next, Q$$2, [], JAM.policy.p3);
        return;
      }
      function v1856() {
        j$$109.height = j$$109.height - j$$109.height * t$$23;
        j$$109.width = j$$109.width - j$$109.width * t$$23;
        return;
      }
      function v1855(t$$24, i$$218) {
        var v9883 = JAM.call(e$$347, null, [N$$2], JAM.policy.p3);
        var v3242 = JAM.call(v9883.attr, v9883, [i$$218], JAM.policy.p3);
        if (!v3242) {
          var v9884 = JAM.call(e$$347, null, [N$$2], JAM.policy.p3);
          v3242 = JAM.call(v9884.attr, v9884, ["data-" + i$$218], JAM.policy.p3);
        }
        var o$$29 = v3242;
        if (o$$29) {
          JAM.call(j$$109.setAttribute, j$$109, [i$$218, o$$29], JAM.policy.p3);
        }
        return;
      }
      var t$$23;
      var v3243 = f$$185 === at;
      if (v3243) {
        JAM.call(e$$347.each, e$$347, [["alt", "longdesc", "aria-describedby"], v1855], JAM.policy.p3);
        var v29765 = B$$3.retinaImage;
        if (v29765) {
          v29765 = i$$210.devicePixelRatio > 1;
        }
        var v29385 = v29765;
        if (v29385) {
          j$$109.height = j$$109.height / i$$210.devicePixelRatio;
          j$$109.width = j$$109.width / i$$210.devicePixelRatio;
        }
        var v28753 = B$$3.scalePhotos;
        if (v28753) {
          r$$24 = v1856;
          var v30259 = B$$3.mw;
          if (v30259) {
            v30259 = j$$109.width > B$$3.mw;
          }
          var v30034 = v30259;
          if (v30034) {
            t$$23 = (j$$109.width - B$$3.mw) / j$$109.width;
            JAM.call(r$$24, null, [], JAM.policy.p3);
          }
          var v30035 = B$$3.mh;
          if (v30035) {
            v30035 = j$$109.height > B$$3.mh;
          }
          var v29766 = v30035;
          if (v29766) {
            t$$23 = (j$$109.height - B$$3.mh) / j$$109.height;
            JAM.call(r$$24, null, [], JAM.policy.p3);
          }
        }
        var v27819 = B$$3.h;
        if (v27819) {
          j$$109.style.marginTop = JAM.call(Math.max, Math, [B$$3.mh - j$$109.height, 0], JAM.policy.p3) / 2 + "px";
        }
        var v27820 = k$$76[1];
        if (v27820) {
          var v28755 = B$$3.loop;
          if (!v28755) {
            v28755 = k$$76[z$$7 + 1];
          }
          v27820 = v28755;
        }
        var v26395 = v27820;
        if (v26395) {
          j$$109.style.cursor = "pointer";
          JAM.set(j$$109, "onclick", v1857);
        }
        j$$109.style.width = j$$109.width + "px";
        j$$109.style.height = j$$109.height + "px";
        JAM.call(setTimeout, null, [v1858, 1]);
      }
      return;
    }
    function v1854() {
      B$$3.title = !1;
      var v15602 = o$$26(st$$2, "Error");
      JAM.call(u$$14, null, [JAM.call(v15602.html, v15602, [B$$3.imgError], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    function v1853() {
      JAM.call(a$$689.replaceWith, a$$689, [JAM.call(H$$3.children, H$$3, [], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    function v1852() {
      JAM.call(F$$3.show, F$$3, [], JAM.policy.p3);
      return;
    }
    var n$$98;
    var r$$24;
    var a$$689;
    var u$$14 = Q$$2.prep;
    var f$$185 = at = at + 1;
    $$$4 = !0;
    j$$109 = !1;
    N$$2 = k$$76[z$$7];
    d$$404();
    c$$545(ht);
    c$$545(it, B$$3.onLoad);
    var v29768 = B$$3;
    var v30038;
    if (B$$3.height) {
      v30038 = h$$162(B$$3.height, "y") - D$$3 - O$$2;
    } else {
      var v30267 = B$$3.innerHeight;
      if (v30267) {
        v30267 = h$$162(B$$3.innerHeight, "y");
      }
      v30038 = v30267;
    }
    v29768.h = v30038;
    var v29389 = B$$3;
    var v29769;
    if (B$$3.width) {
      v29769 = h$$162(B$$3.width, "x") - A$$4 - _$$3;
    } else {
      var v30040 = B$$3.innerWidth;
      if (v30040) {
        v30040 = h$$162(B$$3.innerWidth, "x");
      }
      v29769 = v30040;
    }
    v29389.w = v29769;
    B$$3.mw = B$$3.w;
    B$$3.mh = B$$3.h;
    var v26397 = B$$3.maxWidth;
    if (v26397) {
      B$$3.mw = h$$162(B$$3.maxWidth, "x") - A$$4 - _$$3;
      var v28758;
      var v29771 = B$$3.w;
      if (v29771) {
        v29771 = B$$3.w < B$$3.mw;
      }
      if (v29771) {
        v28758 = B$$3.w;
      } else {
        v28758 = B$$3.mw;
      }
      B$$3.mw = v28758;
    }
    var v24353 = B$$3.maxHeight;
    if (v24353) {
      B$$3.mh = h$$162(B$$3.maxHeight, "y") - D$$3 - O$$2;
      var v27822;
      var v29393 = B$$3.h;
      if (v29393) {
        v29393 = B$$3.h < B$$3.mh;
      }
      if (v29393) {
        v27822 = B$$3.h;
      } else {
        v27822 = B$$3.mh;
      }
      B$$3.mh = v27822;
    }
    n$$98 = B$$3.href;
    G$$3 = JAM.call(setTimeout, null, [v1852, 100]);
    var v9888;
    if (B$$3.inline) {
      var v26398 = o$$26(st$$2);
      var v24354 = JAM.call(v26398.hide, v26398, [], JAM.policy.p3);
      a$$689 = JAM.call(v24354.insertBefore, v24354, [JAM.call(e$$347, null, [n$$98], JAM.policy.p3)[0]], JAM.policy.p3);
      JAM.call(lt.one, lt, [ht, v1853], JAM.policy.p3);
      v9888 = JAM.call(u$$14, null, [JAM.call(e$$347, null, [n$$98], JAM.policy.p3)], JAM.policy.p3);
    } else {
      var v15604;
      if (B$$3.iframe) {
        v15604 = JAM.call(u$$14, null, [" "], JAM.policy.p3);
      } else {
        var v19848;
        if (B$$3.html) {
          v19848 = JAM.call(u$$14, null, [B$$3.html], JAM.policy.p3);
        } else {
          var v24357;
          var v27823 = B$$3.photo;
          if (!v27823) {
            var v28761 = B$$3.photoRegex;
            v27823 = JAM.call(v28761.test, v28761, [n$$98], JAM.policy.p3);
          }
          if (v27823) {
            n$$98 = s$$30(B$$3, n$$98);
            j$$109 = JAM.call(t$$15.createElement, t$$15, ["img"], JAM.policy.p3);
            var v29775 = JAM.call(e$$347, null, [j$$109], JAM.policy.p3);
            var v29394 = JAM.call(v29775.addClass, v29775, [Z$$2 + "Photo"], JAM.policy.p3);
            var v28763 = JAM.call(v29394.bind, v29394, ["error", v1854], JAM.policy.p3);
            JAM.call(v28763.one, v28763, ["load", v1859], JAM.policy.p3);
            v24357 = JAM.call(setTimeout, null, [v1860, 1]);
          } else {
            var v26400 = n$$98;
            if (v26400) {
              v26400 = JAM.call(W$$2.load, W$$2, [n$$98, B$$3.data, v1861], JAM.policy.p3);
            }
            v24357 = v26400;
          }
          v19848 = v24357;
        }
        v15604 = v19848;
      }
      v9888 = v15604;
    }
    v9888;
    return;
  }
  var w$$18;
  var g$$199;
  var v$$11;
  var y$$55;
  var x$$74;
  var b$$679;
  var T$$4;
  var C$$3;
  var k$$76;
  var E$$3;
  var H$$3;
  var W$$2;
  var F$$3;
  var L$$2;
  var S$$2;
  var M$$2;
  var R$$2;
  var I$$3;
  var K$$2;
  var P$$2;
  var B$$3;
  var O$$2;
  var _$$3;
  var D$$3;
  var A$$4;
  var N$$2;
  var z$$7;
  var j$$109;
  var U$$2;
  var $$$4;
  var q$$21;
  var G$$3;
  var Q$$2;
  var J$$3;
  var V$$2;
  var X$$2 = {html:!1, photo:!1, iframe:!1, inline:!1, transition:"elastic", speed:300, fadeOut:300, width:!1, initialWidth:"600", innerWidth:!1, maxWidth:!1, height:!1, initialHeight:"450", innerHeight:!1, maxHeight:!1, scalePhotos:!0, scrolling:!0, href:!1, title:!1, rel:!1, opacity:.9, preloading:!0, className:!1, overlayClose:!0, escKey:!0, arrowKey:!0, top:!1, bottom:!1, left:!1, right:!1, fixed:!1, data:void 0, closeButton:!0, fastIframe:!0, open:!1, reposition:!0, loop:!0, slideshow:!1, slideshowAuto:!0, 
  slideshowSpeed:2500, slideshowStart:"start slideshow", slideshowStop:"stop slideshow", photoRegex:/\.(gif|png|jp(e|g|eg)|bmp|ico|webp)((#|\?).*)?$/i, retinaImage:!1, retinaUrl:!1, retinaSuffix:"@2x.$1", current:"image {current} of {total}", previous:"previous", next:"next", close:"close", xhrError:"This content failed to load.", imgError:"This image failed to load.", returnFocus:!0, trapFocus:!0, onOpen:!1, onLoad:!1, onComplete:!1, onCleanup:!1, onClosed:!1};
  var Y$$2 = "colorbox";
  var Z$$2 = "cbox";
  var et$$1 = Z$$2 + "Element";
  var tt$$1 = Z$$2 + "_open";
  var it = Z$$2 + "_load";
  var ot = Z$$2 + "_complete";
  var nt = Z$$2 + "_cleanup";
  var rt$$3 = Z$$2 + "_closed";
  var ht = Z$$2 + "_purge";
  var lt = JAM.call(e$$347, null, ["<a/>"], JAM.policy.p3);
  var st$$2 = "div";
  var at = 0;
  var dt = {};
  var ct$$1 = v1864();
  var v3287 = e$$347.colorbox;
  if (!v3287) {
    JAM.call(e$$347, null, [f$$184], JAM.policy.p3);
    Q$$2 = JAM.set(e$$347.fn, Y$$2, JAM.set(e$$347, Y$$2, v1866, JAM.policy.p2), JAM.policy.p2);
    Q$$2.position = v1870;
    Q$$2.resize = v1871;
    Q$$2.prep = v1877;
    Q$$2.next = v1878;
    Q$$2.prev = v1879;
    Q$$2.close = v1882;
    Q$$2.remove = v1883;
    Q$$2.element = v1884;
    Q$$2.settings = X$$2;
  }
  return;
}
function v1843(a$$663, b$$652) {
  function v1842(a$$684, b$$677) {
    function v1841(a$$687) {
      var v3288 = a$$687.clientX;
      if (v3288) {
        JAM.call(c$$544.rotate, c$$544, [null], JAM.policy.p3);
      }
      return;
    }
    function v1840(a$$686) {
      JAM.call(e$$346, null, [], JAM.policy.p3);
      return;
    }
    function v1839(b$$678) {
      function v1838() {
        var a$$685 = d$$403.selected;
        var v9890;
        if ((a$$685 = a$$685 + 1) < c$$544.anchors.length) {
          v9890 = a$$685;
        } else {
          v9890 = 0;
        }
        JAM.call(c$$544.select, c$$544, [v9890], JAM.policy.p3);
        return;
      }
      clearTimeout(c$$544.rotation);
      var v15608 = c$$544;
      var v30959 = JAM.call(setTimeout, null, [v1838, a$$684]);
      v15608.rotation = v30959;
      if (b$$678) {
        JAM.call(b$$678.stopPropagation, b$$678, [], JAM.policy.p3);
      }
      return;
    }
    var c$$544 = this;
    var d$$403 = this.options;
    var v3290 = c$$544._rotate;
    if (!v3290) {
      v3290 = c$$544._rotate = v1839;
    }
    var e$$346 = v3290;
    var v3291 = c$$544._unrotate;
    if (!v3291) {
      var v9892;
      if (b$$677) {
        v9892 = v1840;
      } else {
        v9892 = v1841;
      }
      v3291 = c$$544._unrotate = v9892;
    }
    var f$$183 = v3291;
    var v9894;
    if (a$$684) {
      var v24360 = this.element;
      JAM.call(v24360.bind, v24360, ["tabsshow", e$$346], JAM.policy.p3);
      var v24361 = this.anchors;
      JAM.call(v24361.bind, v24361, [d$$403.event + ".tabs", f$$183], JAM.policy.p3);
      v9894 = JAM.call(e$$346, null, [], JAM.policy.p3);
    } else {
      clearTimeout(c$$544.rotation);
      var v27826 = this.element;
      JAM.call(v27826.unbind, v27826, ["tabsshow", e$$346], JAM.policy.p3);
      var v26403 = this.anchors;
      JAM.call(v26403.unbind, v26403, [d$$403.event + ".tabs", f$$183], JAM.policy.p3);
      delete this._rotate;
      v9894 = delete this._unrotate;
    }
    v9894;
    return this;
  }
  function v1837() {
    return this.anchors.length;
  }
  function v1836(a$$683, b$$676) {
    var v19852 = this.anchors;
    var v15609 = JAM.call(v19852.eq, v19852, [a$$683], JAM.policy.p3);
    var v9895 = JAM.call(v15609.removeData, v15609, ["cache.tabs"], JAM.policy.p3);
    JAM.call(v9895.data, v9895, ["load.tabs", b$$676], JAM.policy.p3);
    return this;
  }
  function v1835() {
    var v26405 = this.element;
    JAM.call(v26405.queue, v26405, [[]], JAM.policy.p3);
    var v26406 = this.panels;
    JAM.call(v26406.stop, v26406, [!1, !0], JAM.policy.p3);
    var v24363 = this.element;
    var v27828 = this.element;
    var v26409 = JAM.call(v27828.queue, v27828, ["tabs"], JAM.policy.p3);
    JAM.call(v24363.queue, v24363, ["tabs", JAM.call(v26409.splice, v26409, [-2, 2], JAM.policy.p3)], JAM.policy.p3);
    var v19853 = this.xhr;
    if (v19853) {
      var v26410 = this.xhr;
      JAM.call(v26410.abort, v26410, [], JAM.policy.p3);
      delete this.xhr;
    }
    JAM.call(this._cleanup, this, [], JAM.policy.p3);
    return this;
  }
  function v1834(b$$675) {
    function v1833(a$$682, f$$182, g$$197) {
      JAM.call(c$$543._cleanup, c$$543, [], JAM.policy.p3);
      JAM.call(c$$543._trigger, c$$543, ["load", null, JAM.call(c$$543._ui, c$$543, [c$$543.anchors[b$$675], c$$543.panels[b$$675]], JAM.policy.p3)], JAM.policy.p3);
      try {
        var v3293 = d$$402.ajaxOptions;
        JAM.call(v3293.error, v3293, [a$$682, f$$182, b$$675, e$$345], JAM.policy.p3);
      } catch (g$$198) {
      }
      return;
    }
    function v1832(f$$181, g$$196) {
      var v24365 = c$$543.element;
      var v19856 = JAM.call(v24365.find, v24365, [JAM.call(c$$543._sanitizeSelector, c$$543, [e$$345.hash], JAM.policy.p3)], JAM.policy.p3);
      JAM.call(v19856.html, v19856, [f$$181], JAM.policy.p3);
      JAM.call(c$$543._cleanup, c$$543, [], JAM.policy.p3);
      var v15612 = d$$402.cache;
      if (v15612) {
        JAM.call(a$$663.data, a$$663, [e$$345, "cache.tabs", !0], JAM.policy.p3);
      }
      JAM.call(c$$543._trigger, c$$543, ["load", null, JAM.call(c$$543._ui, c$$543, [c$$543.anchors[b$$675], c$$543.panels[b$$675]], JAM.policy.p3)], JAM.policy.p3);
      try {
        var v3294 = d$$402.ajaxOptions;
        JAM.call(v3294.success, v3294, [f$$181, g$$196], JAM.policy.p3);
      } catch (h$$161) {
      }
      return;
    }
    b$$675 = JAM.call(this._getIndex, this, [b$$675], JAM.policy.p3);
    var c$$543 = this;
    var d$$402 = this.options;
    var v9898 = this.anchors;
    var e$$345 = JAM.call(v9898.eq, v9898, [b$$675], JAM.policy.p3)[0];
    var f$$180 = JAM.call(a$$663.data, a$$663, [e$$345, "load.tabs"], JAM.policy.p3);
    JAM.call(this.abort, this, [], JAM.policy.p3);
    var v9899 = !f$$180;
    if (!v9899) {
      var v26412 = this.element;
      var v15615 = JAM.call(v26412.queue, v26412, ["tabs"], JAM.policy.p3).length !== 0;
      if (v15615) {
        v15615 = JAM.call(a$$663.data, a$$663, [e$$345, "cache.tabs"], JAM.policy.p3);
      }
      v9899 = v15615;
    }
    if (v9899) {
      var v3296 = this.element;
      JAM.call(v3296.dequeue, v3296, ["tabs"], JAM.policy.p3);
      return;
    }
    var v9900 = this.lis;
    var v3298 = JAM.call(v9900.eq, v9900, [b$$675], JAM.policy.p3);
    JAM.call(v3298.addClass, v3298, ["ui-state-processing"], JAM.policy.p3);
    if (d$$402.spinner) {
      var g$$195 = JAM.call(a$$663, null, ["span", e$$345], JAM.policy.p3);
      var v3299 = JAM.call(g$$195.data, g$$195, ["label.tabs", JAM.call(g$$195.html, g$$195, [], JAM.policy.p3)], JAM.policy.p3);
      JAM.call(v3299.html, v3299, [d$$402.spinner], JAM.policy.p3);
    }
    var v30960 = JAM.call(a$$663.ajax, a$$663, [JAM.call(a$$663.extend, a$$663, [{}, d$$402.ajaxOptions, {url:f$$180, success:v1832, error:v1833}], JAM.policy.p3)], JAM.policy.p3);
    this.xhr = v30960;
    var v15618 = c$$543.element;
    JAM.call(v15618.dequeue, v15618, ["tabs"], JAM.policy.p3);
    return this;
  }
  function v1831(a$$681) {
    a$$681 = JAM.call(this._getIndex, this, [a$$681], JAM.policy.p3);
    if (a$$681 == -1) {
      var v9902 = this.options.collapsible;
      if (v9902) {
        v9902 = this.options.selected != -1;
      }
      if (v9902) {
        a$$681 = this.options.selected;
      } else {
        return this;
      }
    }
    var v15621 = this.anchors;
    var v9903 = JAM.call(v15621.eq, v15621, [a$$681], JAM.policy.p3);
    JAM.call(v9903.trigger, v9903, [this.options.event + ".tabs"], JAM.policy.p3);
    return this;
  }
  function v1830(a$$680) {
    a$$680 = JAM.call(this._getIndex, this, [a$$680], JAM.policy.p3);
    var b$$674 = this;
    var c$$542 = this.options;
    var v9905 = a$$680 != c$$542.selected;
    if (v9905) {
      var v27829 = this.lis;
      var v26413 = JAM.call(v27829.eq, v27829, [a$$680], JAM.policy.p3);
      JAM.call(v26413.addClass, v26413, ["ui-state-disabled"], JAM.policy.p3);
      var v26414 = c$$542.disabled;
      JAM.call(v26414.push, v26414, [a$$680], JAM.policy.p3);
      var v24368 = c$$542.disabled;
      JAM.call(v24368.sort, v24368, [], JAM.policy.p3);
      JAM.call(this._trigger, this, ["disable", null, JAM.call(this._ui, this, [this.anchors[a$$680], this.panels[a$$680]], JAM.policy.p3)], JAM.policy.p3);
    }
    return this;
  }
  function v1829(b$$673) {
    function v1828(a$$679, c$$541) {
      return a$$679 != b$$673;
    }
    b$$673 = JAM.call(this._getIndex, this, [b$$673], JAM.policy.p3);
    var c$$540 = this.options;
    if (JAM.call(a$$663.inArray, a$$663, [b$$673, c$$540.disabled], JAM.policy.p3) == -1) {
      return;
    }
    var v24371 = this.lis;
    var v19866 = JAM.call(v24371.eq, v24371, [b$$673], JAM.policy.p3);
    JAM.call(v19866.removeClass, v19866, ["ui-state-disabled"], JAM.policy.p3);
    var v19867 = c$$540;
    var v30961 = JAM.call(a$$663.grep, a$$663, [c$$540.disabled, v1828], JAM.policy.p3);
    v19867.disabled = v30961;
    JAM.call(this._trigger, this, ["enable", null, JAM.call(this._ui, this, [this.anchors[b$$673], this.panels[b$$673]], JAM.policy.p3)], JAM.policy.p3);
    return this;
  }
  function v1827(b$$672) {
    function v1826(a$$678, c$$539) {
      var v3306;
      if (a$$678 >= b$$672) {
        v3306 = a$$678 = a$$678 - 1;
      } else {
        v3306 = a$$678;
      }
      return v3306;
    }
    function v1825(a$$677, c$$538) {
      return a$$677 != b$$672;
    }
    b$$672 = JAM.call(this._getIndex, this, [b$$672], JAM.policy.p3);
    var c$$537 = this.options;
    var v9908 = this.lis;
    var v3307 = JAM.call(v9908.eq, v9908, [b$$672], JAM.policy.p3);
    var d$$401 = JAM.call(v3307.remove, v3307, [], JAM.policy.p3);
    var v9909 = this.panels;
    var v3308 = JAM.call(v9909.eq, v9909, [b$$672], JAM.policy.p3);
    var e$$344 = JAM.call(v3308.remove, v3308, [], JAM.policy.p3);
    var v26417 = JAM.call(d$$401.hasClass, d$$401, ["ui-tabs-selected"], JAM.policy.p3);
    if (v26417) {
      v26417 = this.anchors.length > 1;
    }
    var v24375 = v26417;
    if (v24375) {
      var v28765;
      if (b$$672 + 1 < this.anchors.length) {
        v28765 = 1;
      } else {
        v28765 = -1;
      }
      JAM.call(this.select, this, [b$$672 + v28765], JAM.policy.p3);
    }
    var v24376 = c$$537;
    var v30962 = JAM.call(a$$663.map, a$$663, [JAM.call(a$$663.grep, a$$663, [c$$537.disabled, v1825], JAM.policy.p3), v1826], JAM.policy.p3);
    v24376.disabled = v30962;
    JAM.call(this._tabify, this, [], JAM.policy.p3);
    JAM.call(this._trigger, this, ["remove", null, JAM.call(this._ui, this, [JAM.call(d$$401.find, d$$401, ["a"], JAM.policy.p3)[0], e$$344[0]], JAM.policy.p3)], JAM.policy.p3);
    return this;
  }
  function v1824(c$$536, d$$400, e$$343) {
    function v1823() {
      JAM.call(f$$179._trigger, f$$179, ["show", null, JAM.call(f$$179._ui, f$$179, [f$$179.anchors[0], f$$179.panels[0]], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    function v1822(a$$676, b$$671) {
      var v3310;
      if (a$$676 >= e$$343) {
        v3310 = a$$676 = a$$676 + 1;
      } else {
        v3310 = a$$676;
      }
      return v3310;
    }
    var v3311 = e$$343 === b$$652;
    if (v3311) {
      e$$343 = this.anchors.length;
    }
    var f$$179 = this;
    var g$$194 = this.options;
    var v15629 = g$$194.tabTemplate;
    var v9914 = JAM.call(v15629.replace, v15629, [/#\{href\}/g, c$$536], JAM.policy.p3);
    var h$$160 = JAM.call(a$$663, null, [JAM.call(v9914.replace, v9914, [/#\{label\}/g, d$$400], JAM.policy.p3)], JAM.policy.p3);
    var v3313;
    if (JAM.call(c$$536.indexOf, c$$536, ["#"], JAM.policy.p3)) {
      v3313 = JAM.call(this._tabId, this, [JAM.call(a$$663, null, ["a", h$$160], JAM.policy.p3)[0]], JAM.policy.p3);
    } else {
      v3313 = JAM.call(c$$536.replace, c$$536, ["#", ""], JAM.policy.p3);
    }
    var i$$209 = v3313;
    var v3314 = JAM.call(h$$160.addClass, h$$160, ["ui-state-default ui-corner-top"], JAM.policy.p3);
    JAM.call(v3314.data, v3314, ["destroy.tabs", !0], JAM.policy.p3);
    var v3316 = f$$179.element;
    var j$$108 = JAM.call(v3316.find, v3316, ["#" + i$$209], JAM.policy.p3);
    var v28766 = j$$108.length;
    if (!v28766) {
      var v29779 = JAM.call(a$$663, null, [g$$194.panelTemplate], JAM.policy.p3);
      var v29396 = JAM.call(v29779.attr, v29779, ["id", i$$209], JAM.policy.p3);
      j$$108 = JAM.call(v29396.data, v29396, ["destroy.tabs", !0], JAM.policy.p3);
    }
    JAM.call(j$$108.addClass, j$$108, ["ui-tabs-panel ui-widget-content ui-corner-bottom ui-tabs-hide"], JAM.policy.p3);
    var v27833;
    if (e$$343 >= this.lis.length) {
      JAM.call(h$$160.appendTo, h$$160, [this.list], JAM.policy.p3);
      v27833 = JAM.call(j$$108.appendTo, j$$108, [this.list[0].parentNode], JAM.policy.p3);
    } else {
      JAM.call(h$$160.insertBefore, h$$160, [this.lis[e$$343]], JAM.policy.p3);
      v27833 = JAM.call(j$$108.insertBefore, j$$108, [this.panels[e$$343]], JAM.policy.p3);
    }
    v27833;
    var v26420 = g$$194;
    var v30963 = JAM.call(a$$663.map, a$$663, [g$$194.disabled, v1822], JAM.policy.p3);
    v26420.disabled = v30963;
    JAM.call(this._tabify, this, [], JAM.policy.p3);
    var v19872 = this.anchors.length == 1;
    if (v19872) {
      g$$194.selected = 0;
      JAM.call(h$$160.addClass, h$$160, ["ui-tabs-selected ui-state-active"], JAM.policy.p3);
      JAM.call(j$$108.removeClass, j$$108, ["ui-tabs-hide"], JAM.policy.p3);
      var v27835 = this.element;
      JAM.call(v27835.queue, v27835, ["tabs", v1823], JAM.policy.p3);
      JAM.call(this.load, this, [0], JAM.policy.p3);
    }
    JAM.call(this._trigger, this, ["add", null, JAM.call(this._ui, this, [this.anchors[e$$343], this.panels[e$$343]], JAM.policy.p3)], JAM.policy.p3);
    return this;
  }
  function v1821() {
    function v1820() {
      var v3318;
      if (JAM.call(a$$663.data, a$$663, [this, "destroy.tabs"], JAM.policy.p3)) {
        var v9917 = JAM.call(a$$663, null, [this], JAM.policy.p3);
        v3318 = JAM.call(v9917.remove, v9917, [], JAM.policy.p3);
      } else {
        var v9918 = JAM.call(a$$663, null, [this], JAM.policy.p3);
        var v15632 = ["ui-state-default", "ui-corner-top", "ui-tabs-selected", "ui-state-active", "ui-state-hover", "ui-state-focus", "ui-state-disabled", "ui-tabs-panel", "ui-widget-content", "ui-corner-bottom", "ui-tabs-hide"];
        v3318 = JAM.call(v9918.removeClass, v9918, [JAM.call(v15632.join, v15632, [" "], JAM.policy.p3)], JAM.policy.p3);
      }
      v3318;
      return;
    }
    function v1819() {
      function v1818(a$$675, b$$670) {
        JAM.call(c$$535.removeData, c$$535, [b$$670 + ".tabs"], JAM.policy.p3);
        return;
      }
      var b$$669 = JAM.call(a$$663.data, a$$663, [this, "href.tabs"], JAM.policy.p3);
      if (b$$669) {
        this.href = b$$669;
      }
      var v3320 = JAM.call(a$$663, null, [this], JAM.policy.p3);
      var c$$535 = JAM.call(v3320.unbind, v3320, [".tabs"], JAM.policy.p3);
      JAM.call(a$$663.each, a$$663, [["href", "load", "cache"], v1818], JAM.policy.p3);
      return;
    }
    var b$$668 = this.options;
    JAM.call(this.abort, this, [], JAM.policy.p3);
    var v29404 = this.element;
    var v28768 = JAM.call(v29404.unbind, v29404, [".tabs"], JAM.policy.p3);
    var v27836 = JAM.call(v28768.removeClass, v28768, ["ui-tabs ui-widget ui-widget-content ui-corner-all ui-tabs-collapsible"], JAM.policy.p3);
    JAM.call(v27836.removeData, v27836, ["tabs"], JAM.policy.p3);
    var v26422 = this.list;
    JAM.call(v26422.removeClass, v26422, ["ui-tabs-nav ui-helper-reset ui-helper-clearfix ui-widget-header ui-corner-all"], JAM.policy.p3);
    var v24381 = this.anchors;
    JAM.call(v24381.each, v24381, [v1819], JAM.policy.p3);
    var v26423 = this.lis;
    var v24382 = JAM.call(v26423.unbind, v26423, [".tabs"], JAM.policy.p3);
    var v19875 = JAM.call(v24382.add, v24382, [this.panels], JAM.policy.p3);
    JAM.call(v19875.each, v19875, [v1820], JAM.policy.p3);
    var v15633 = b$$668.cookie;
    if (v15633) {
      JAM.call(this._cookie, this, [null, b$$668.cookie], JAM.policy.p3);
    }
    return this;
  }
  function v1817(a$$674) {
    var v9921 = typeof a$$674 == "string";
    if (v9921) {
      var v15635 = this.anchors;
      var v19877 = this.anchors;
      a$$674 = JAM.call(v15635.index, v15635, [JAM.call(v19877.filter, v19877, ["[href$='" + a$$674 + "']"], JAM.policy.p3)], JAM.policy.p3);
    }
    return a$$674;
  }
  function v1816(c$$528) {
    function v1815() {
      return!1;
    }
    function v1814() {
      function v1813() {
        JAM.call(n$$95, null, [b$$667, g$$193], JAM.policy.p3);
        return;
      }
      function v1812() {
        JAM.call(o$$25, null, [b$$667, f$$178], JAM.policy.p3);
        return;
      }
      function v1811() {
        JAM.call(n$$95, null, [b$$667, g$$193], JAM.policy.p3);
        return;
      }
      function v1810() {
        JAM.call(o$$25, null, [b$$667, f$$178], JAM.policy.p3);
        return;
      }
      var b$$667 = this;
      var v3322 = JAM.call(a$$663, null, [b$$667], JAM.policy.p3);
      var c$$534 = JAM.call(v3322.closest, v3322, ["li"], JAM.policy.p3);
      var v3323 = d$$399.panels;
      var f$$178 = JAM.call(v3323.filter, v3323, [":not(.ui-tabs-hide)"], JAM.policy.p3);
      var v3324 = d$$399.element;
      var g$$193 = JAM.call(v3324.find, v3324, [JAM.call(d$$399._sanitizeSelector, d$$399, [b$$667.hash], JAM.policy.p3)], JAM.policy.p3);
      var v26424 = JAM.call(c$$534.hasClass, c$$534, ["ui-tabs-selected"], JAM.policy.p3);
      if (v26424) {
        v26424 = !e$$342.collapsible;
      }
      var v24385 = v26424;
      if (!v24385) {
        v24385 = JAM.call(c$$534.hasClass, c$$534, ["ui-state-disabled"], JAM.policy.p3);
      }
      var v19879 = v24385;
      if (!v19879) {
        v19879 = JAM.call(c$$534.hasClass, c$$534, ["ui-state-processing"], JAM.policy.p3);
      }
      var v15637 = v19879;
      if (!v15637) {
        var v24387 = d$$399.panels;
        v15637 = JAM.call(v24387.filter, v24387, [":animated"], JAM.policy.p3).length;
      }
      var v9923 = v15637;
      if (!v9923) {
        v9923 = JAM.call(d$$399._trigger, d$$399, ["select", null, JAM.call(d$$399._ui, d$$399, [this, g$$193[0]], JAM.policy.p3)], JAM.policy.p3) === !1;
      }
      if (v9923) {
        JAM.call(this.blur, this, [], JAM.policy.p3);
        return!1;
      }
      var v9924 = e$$342;
      var v15641 = d$$399.anchors;
      var v30964 = JAM.call(v15641.index, v15641, [this], JAM.policy.p3);
      v9924.selected = v30964;
      JAM.call(d$$399.abort, d$$399, [], JAM.policy.p3);
      if (e$$342.collapsible) {
        if (JAM.call(c$$534.hasClass, c$$534, ["ui-tabs-selected"], JAM.policy.p3)) {
          e$$342.selected = -1;
          var v24389 = e$$342.cookie;
          if (v24389) {
            JAM.call(d$$399._cookie, d$$399, [e$$342.selected, e$$342.cookie], JAM.policy.p3);
          }
          var v24390 = d$$399.element;
          var v19883 = JAM.call(v24390.queue, v24390, ["tabs", v1810], JAM.policy.p3);
          JAM.call(v19883.dequeue, v19883, ["tabs"], JAM.policy.p3);
          JAM.call(this.blur, this, [], JAM.policy.p3);
          return!1;
        }
        if (!f$$178.length) {
          var v24391 = e$$342.cookie;
          if (v24391) {
            JAM.call(d$$399._cookie, d$$399, [e$$342.selected, e$$342.cookie], JAM.policy.p3);
          }
          var v24392 = d$$399.element;
          JAM.call(v24392.queue, v24392, ["tabs", v1811], JAM.policy.p3);
          var v24393 = d$$399.anchors;
          JAM.call(d$$399.load, d$$399, [JAM.call(v24393.index, v24393, [this], JAM.policy.p3)], JAM.policy.p3);
          JAM.call(this.blur, this, [], JAM.policy.p3);
          return!1;
        }
      }
      var v3330 = e$$342.cookie;
      if (v3330) {
        JAM.call(d$$399._cookie, d$$399, [e$$342.selected, e$$342.cookie], JAM.policy.p3);
      }
      if (g$$193.length) {
        var v15642 = f$$178.length;
        if (v15642) {
          var v19885 = d$$399.element;
          JAM.call(v19885.queue, v19885, ["tabs", v1812], JAM.policy.p3);
        }
        var v15643 = d$$399.element;
        JAM.call(v15643.queue, v15643, ["tabs", v1813], JAM.policy.p3);
        var v15644 = d$$399.anchors;
        JAM.call(d$$399.load, d$$399, [JAM.call(v15644.index, v15644, [this], JAM.policy.p3)], JAM.policy.p3);
      } else {
        throw "jQuery UI Tabs: Mismatching fragment identifier.";
      }
      var v3332 = a$$663.browser.msie;
      if (v3332) {
        JAM.call(this.blur, this, [], JAM.policy.p3);
      }
      return;
    }
    function v1809(a$$673, b$$666, c$$533) {
      var v15645 = d$$399.lis;
      JAM.call(v15645.removeClass, v15645, ["ui-tabs-selected ui-state-active"], JAM.policy.p3);
      JAM.call(b$$666.addClass, b$$666, ["ui-tabs-hide"], JAM.policy.p3);
      var v9930 = d$$399.element;
      JAM.call(v9930.dequeue, v9930, ["tabs"], JAM.policy.p3);
      return;
    }
    function v1808(a$$672, b$$665) {
      function v1807() {
        var v19886 = d$$399.lis;
        JAM.call(v19886.removeClass, v19886, ["ui-tabs-selected ui-state-active"], JAM.policy.p3);
        JAM.call(b$$665.addClass, b$$665, ["ui-tabs-hide"], JAM.policy.p3);
        m$$49(b$$665, k$$74);
        var v9931 = d$$399.element;
        JAM.call(v9931.dequeue, v9931, ["tabs"], JAM.policy.p3);
        return;
      }
      var v9932 = k$$74.duration;
      if (!v9932) {
        v9932 = "normal";
      }
      JAM.call(b$$665.animate, b$$665, [k$$74, v9932, v1807], JAM.policy.p3);
      return;
    }
    function v1806(b$$664, c$$532) {
      var v19887 = JAM.call(a$$663, null, [b$$664], JAM.policy.p3);
      var v15647 = JAM.call(v19887.closest, v19887, ["li"], JAM.policy.p3);
      JAM.call(v15647.addClass, v15647, ["ui-tabs-selected ui-state-active"], JAM.policy.p3);
      JAM.call(c$$532.removeClass, c$$532, ["ui-tabs-hide"], JAM.policy.p3);
      JAM.call(d$$399._trigger, d$$399, ["show", null, JAM.call(d$$399._ui, d$$399, [b$$664, c$$532[0]], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    function v1805(b$$663, c$$531) {
      function v1804() {
        m$$49(c$$531, l$$80);
        JAM.call(d$$399._trigger, d$$399, ["show", null, JAM.call(d$$399._ui, d$$399, [b$$663, c$$531[0]], JAM.policy.p3)], JAM.policy.p3);
        return;
      }
      var v15650 = JAM.call(a$$663, null, [b$$663], JAM.policy.p3);
      var v9935 = JAM.call(v15650.closest, v15650, ["li"], JAM.policy.p3);
      JAM.call(v9935.addClass, v9935, ["ui-tabs-selected ui-state-active"], JAM.policy.p3);
      var v15651 = JAM.call(c$$531.hide, c$$531, [], JAM.policy.p3);
      var v9936 = JAM.call(v15651.removeClass, v15651, ["ui-tabs-hide"], JAM.policy.p3);
      var v15652 = l$$80.duration;
      if (!v15652) {
        v15652 = "normal";
      }
      JAM.call(v9936.animate, v9936, [l$$80, v15652, v1804], JAM.policy.p3);
      return;
    }
    function v1803() {
      var v3334 = JAM.call(a$$663, null, [this], JAM.policy.p3);
      var b$$inline_78 = JAM.call(v3334.closest, v3334, ["li"], JAM.policy.p3);
      JAM.call(b$$inline_78.removeClass, b$$inline_78, ["ui-state-" + "focus"], JAM.policy.p3);
      return;
    }
    function v1802() {
      var v9938 = JAM.call(a$$663, null, [this], JAM.policy.p3);
      JAM.call(i$$207, null, ["focus", JAM.call(v9938.closest, v9938, ["li"], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    function v1801() {
      var b$$inline_75 = JAM.call(a$$663, null, [this], JAM.policy.p3);
      JAM.call(b$$inline_75.removeClass, b$$inline_75, ["ui-state-" + "hover"], JAM.policy.p3);
      return;
    }
    function v1800() {
      JAM.call(i$$207, null, ["hover", JAM.call(a$$663, null, [this], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    function v1799(a$$670, b$$661) {
      var v3339 = JAM.call(b$$661.is, b$$661, [":not(.ui-state-disabled)"], JAM.policy.p3);
      if (v3339) {
        JAM.call(b$$661.addClass, b$$661, ["ui-state-" + a$$670], JAM.policy.p3);
      }
      return;
    }
    function v1798() {
      var v15653 = d$$399.lis;
      var v9940 = JAM.call(v15653.add, v15653, [d$$399.anchors], JAM.policy.p3);
      JAM.call(v9940.unbind, v9940, [".tabs"], JAM.policy.p3);
      d$$399.lis = d$$399.anchors = d$$399.panels = null;
      return;
    }
    function v1797() {
      var v9941 = d$$399.anchors[e$$342.selected];
      var v19889 = d$$399.element;
      JAM.call(d$$399._trigger, d$$399, ["show", null, JAM.call(d$$399._ui, d$$399, [v9941, JAM.call(v19889.find, v19889, [JAM.call(d$$399._sanitizeSelector, d$$399, [d$$399.anchors[e$$342.selected].hash], JAM.policy.p3)], JAM.policy.p3)[0]], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    function v1796(a$$669, b$$660) {
      var v3341 = d$$399.lis;
      return JAM.call(v3341.index, v3341, [a$$669], JAM.policy.p3);
    }
    function v1795(a$$668, b$$659) {
      if (b$$659.hash == location.hash) {
        e$$342.selected = a$$668;
        return!1;
      }
      return;
    }
    function v1794(b$$658, c$$530) {
      var v3343 = JAM.call(a$$663, null, [c$$530], JAM.policy.p3);
      var g$$192 = JAM.call(v3343.attr, v3343, ["href"], JAM.policy.p3);
      var h$$159 = JAM.call(g$$192.split, g$$192, ["#"], JAM.policy.p3)[0];
      var i$$208;
      var v9945 = h$$159;
      if (v9945) {
        var v26431 = JAM.call(location.toString, location, [], JAM.policy.p3);
        var v15658 = h$$159 === JAM.call(v26431.split, v26431, ["#"], JAM.policy.p3)[0];
        if (!v15658) {
          var v19892 = i$$208 = JAM.call(a$$663, null, ["base"], JAM.policy.p3)[0];
          if (v19892) {
            v19892 = h$$159 === i$$208.href;
          }
          v15658 = v19892;
        }
        v9945 = v15658;
      }
      var v3345 = v9945;
      if (v3345) {
        g$$192 = c$$530.hash;
        c$$530.href = g$$192;
      }
      if (JAM.call(f$$177.test, f$$177, [g$$192], JAM.policy.p3)) {
        var v3346 = d$$399;
        var v9946 = d$$399.panels;
        var v15659 = d$$399.element;
        var v30965 = JAM.call(v9946.add, v9946, [JAM.call(v15659.find, v15659, [JAM.call(d$$399._sanitizeSelector, d$$399, [g$$192], JAM.policy.p3)], JAM.policy.p3)], JAM.policy.p3);
        v3346.panels = v30965;
      } else {
        var v9948 = g$$192;
        if (v9948) {
          v9948 = g$$192 !== "#";
        }
        if (v9948) {
          JAM.call(a$$663.data, a$$663, [c$$530, "href.tabs", g$$192], JAM.policy.p3);
          JAM.call(a$$663.data, a$$663, [c$$530, "load.tabs", JAM.call(g$$192.replace, g$$192, [/#.*$/, ""], JAM.policy.p3)], JAM.policy.p3);
          var j$$107 = JAM.call(d$$399._tabId, d$$399, [c$$530], JAM.policy.p3);
          c$$530.href = "#" + j$$107;
          var v3347 = d$$399.element;
          var k$$75 = JAM.call(v3347.find, v3347, ["#" + j$$107], JAM.policy.p3);
          var v9950 = k$$75.length;
          if (!v9950) {
            var v26432 = JAM.call(a$$663, null, [e$$342.panelTemplate], JAM.policy.p3);
            var v24398 = JAM.call(v26432.attr, v26432, ["id", j$$107], JAM.policy.p3);
            var v19894 = JAM.call(v24398.addClass, v24398, ["ui-tabs-panel ui-widget-content ui-corner-bottom"], JAM.policy.p3);
            var v24399 = d$$399.panels[b$$658 - 1];
            if (!v24399) {
              v24399 = d$$399.list;
            }
            k$$75 = JAM.call(v19894.insertAfter, v19894, [v24399], JAM.policy.p3);
            JAM.call(k$$75.data, k$$75, ["destroy.tabs", !0], JAM.policy.p3);
          }
          var v9951 = d$$399;
          var v15662 = d$$399.panels;
          var v30966 = JAM.call(v15662.add, v15662, [k$$75], JAM.policy.p3);
          v9951.panels = v30966;
        } else {
          var v3349 = e$$342.disabled;
          JAM.call(v3349.push, v3349, [b$$658], JAM.policy.p3);
        }
      }
      return;
    }
    function v1793() {
      return JAM.call(a$$663, null, ["a", this], JAM.policy.p3)[0];
    }
    function m$$49(b$$657, c$$529) {
      JAM.call(b$$657.css, b$$657, ["display", ""], JAM.policy.p3);
      var v15663 = !a$$663.support.opacity;
      if (v15663) {
        v15663 = c$$529.opacity;
      }
      var v9952 = v15663;
      if (v9952) {
        var v15664 = b$$657[0].style;
        JAM.call(v15664.removeAttribute, v15664, ["filter"], JAM.policy.p3);
      }
      return;
    }
    var d$$399 = this;
    var e$$342 = this.options;
    var f$$177 = /^#.+/;
    var v29405 = this.element;
    var v28769 = JAM.call(v29405.find, v29405, ["ol,ul"], JAM.policy.p3);
    var v30967 = JAM.call(v28769.eq, v28769, [0], JAM.policy.p3);
    this.list = v30967;
    var v30968 = JAM.call(a$$663, null, [" > li:has(a[href])", this.list], JAM.policy.p3);
    this.lis = v30968;
    var v27841 = this.lis;
    var v30969 = JAM.call(v27841.map, v27841, [v1793], JAM.policy.p3);
    this.anchors = v30969;
    var v30970 = JAM.call(a$$663, null, [[]], JAM.policy.p3);
    this.panels = v30970;
    var v24401 = this.anchors;
    JAM.call(v24401.each, v24401, [v1794], JAM.policy.p3);
    var v19899;
    if (c$$528) {
      var v30708 = this.element;
      JAM.call(v30708.addClass, v30708, ["ui-tabs ui-widget ui-widget-content ui-corner-all"], JAM.policy.p3);
      var v30709 = this.list;
      JAM.call(v30709.addClass, v30709, ["ui-tabs-nav ui-helper-reset ui-helper-clearfix ui-widget-header ui-corner-all"], JAM.policy.p3);
      var v30651 = this.lis;
      JAM.call(v30651.addClass, v30651, ["ui-state-default ui-corner-top"], JAM.policy.p3);
      var v30563 = this.panels;
      JAM.call(v30563.addClass, v30563, ["ui-tabs-panel ui-widget-content ui-corner-bottom"], JAM.policy.p3);
      var v30428;
      if (e$$342.selected === b$$652) {
        var v30756 = location.hash;
        if (v30756) {
          var v30785 = this.anchors;
          JAM.call(v30785.each, v30785, [v1795], JAM.policy.p3);
        }
        var v30786 = typeof e$$342.selected != "number";
        if (v30786) {
          v30786 = e$$342.cookie;
        }
        var v30757 = v30786;
        if (v30757) {
          var v30787 = e$$342;
          var v30971 = parseInt(JAM.call(d$$399._cookie, d$$399, [], JAM.policy.p3), 10);
          v30787.selected = v30971;
        }
        var v30758 = typeof e$$342.selected != "number";
        if (v30758) {
          var v30814 = this.lis;
          v30758 = JAM.call(v30814.filter, v30814, [".ui-tabs-selected"], JAM.policy.p3).length;
        }
        var v30710 = v30758;
        if (v30710) {
          var v30759 = e$$342;
          var v30790 = this.lis;
          var v30815 = this.lis;
          var v30972 = JAM.call(v30790.index, v30790, [JAM.call(v30815.filter, v30815, [".ui-tabs-selected"], JAM.policy.p3)], JAM.policy.p3);
          v30759.selected = v30972;
        }
        var v30653 = e$$342.selected;
        if (!v30653) {
          var v30711;
          if (this.lis.length) {
            v30711 = 0;
          } else {
            v30711 = -1;
          }
          v30653 = v30711;
        }
        v30428 = e$$342.selected = v30653;
      } else {
        var v30564 = e$$342.selected === null;
        if (v30564) {
          v30564 = e$$342.selected = -1;
        }
        v30428 = v30564;
      }
      v30428;
      var v30272;
      var v30655 = e$$342.selected >= 0;
      if (v30655) {
        v30655 = this.anchors[e$$342.selected];
      }
      var v30566 = v30655;
      if (!v30566) {
        v30566 = e$$342.selected < 0;
      }
      if (v30566) {
        v30272 = e$$342.selected;
      } else {
        v30272 = 0;
      }
      e$$342.selected = v30272;
      var v30048 = e$$342;
      var v30567 = e$$342.disabled;
      var v30716 = this.lis;
      var v30273 = JAM.call(a$$663.unique, a$$663, [JAM.call(v30567.concat, v30567, [JAM.call(a$$663.map, a$$663, [JAM.call(v30716.filter, v30716, [".ui-state-disabled"], JAM.policy.p3), v1796], JAM.policy.p3)], JAM.policy.p3)], JAM.policy.p3);
      var v30973 = JAM.call(v30273.sort, v30273, [], JAM.policy.p3);
      v30048.disabled = v30973;
      var v29784 = JAM.call(a$$663.inArray, a$$663, [e$$342.selected, e$$342.disabled], JAM.policy.p3) != -1;
      if (v29784) {
        var v30050 = e$$342.disabled;
        JAM.call(v30050.splice, v30050, [JAM.call(a$$663.inArray, a$$663, [e$$342.selected, e$$342.disabled], JAM.policy.p3), 1], JAM.policy.p3);
      }
      var v29406 = this.panels;
      JAM.call(v29406.addClass, v29406, ["ui-tabs-hide"], JAM.policy.p3);
      var v28771 = this.lis;
      JAM.call(v28771.removeClass, v28771, ["ui-tabs-selected ui-state-active"], JAM.policy.p3);
      var v28772 = e$$342.selected >= 0;
      if (v28772) {
        v28772 = this.anchors.length;
      }
      var v27842 = v28772;
      if (v27842) {
        var v30278 = d$$399.element;
        var v30052 = JAM.call(v30278.find, v30278, [JAM.call(d$$399._sanitizeSelector, d$$399, [d$$399.anchors[e$$342.selected].hash], JAM.policy.p3)], JAM.policy.p3);
        JAM.call(v30052.removeClass, v30052, ["ui-tabs-hide"], JAM.policy.p3);
        var v30280 = this.lis;
        var v30053 = JAM.call(v30280.eq, v30280, [e$$342.selected], JAM.policy.p3);
        JAM.call(v30053.addClass, v30053, ["ui-tabs-selected ui-state-active"], JAM.policy.p3);
        var v29785 = d$$399.element;
        JAM.call(v29785.queue, v29785, ["tabs", v1797], JAM.policy.p3);
        JAM.call(this.load, this, [e$$342.selected], JAM.policy.p3);
      }
      var v26436 = JAM.call(a$$663, null, [window], JAM.policy.p3);
      v19899 = JAM.call(v26436.bind, v26436, ["unload", v1798], JAM.policy.p3);
    } else {
      var v24402 = e$$342;
      var v26437 = this.lis;
      var v27843 = this.lis;
      var v30974 = JAM.call(v26437.index, v26437, [JAM.call(v27843.filter, v27843, [".ui-tabs-selected"], JAM.policy.p3)], JAM.policy.p3);
      v19899 = v24402.selected = v30974;
    }
    v19899;
    var v15665 = this.element;
    var v19900;
    if (e$$342.collapsible) {
      v19900 = "addClass";
    } else {
      v19900 = "removeClass";
    }
    JAM.call(v15665[v19900], v15665, ["ui-tabs-collapsible"], JAM.policy.p3);
    var v9953 = e$$342.cookie;
    if (v9953) {
      JAM.call(this._cookie, this, [e$$342.selected, e$$342.cookie], JAM.policy.p3);
    }
    var g$$191 = 0;
    var h$$158;
    var v3355 = h$$158 = this.lis[g$$191];
    for (;v3355;) {
      var v3353 = JAM.call(a$$663, null, [h$$158], JAM.policy.p3);
      var v9955;
      var v19901 = JAM.call(a$$663.inArray, a$$663, [g$$191, e$$342.disabled], JAM.policy.p3) != -1;
      if (v19901) {
        var v26440 = JAM.call(a$$663, null, [h$$158], JAM.policy.p3);
        v19901 = !JAM.call(v26440.hasClass, v26440, ["ui-tabs-selected"], JAM.policy.p3);
      }
      if (v19901) {
        v9955 = "addClass";
      } else {
        v9955 = "removeClass";
      }
      JAM.call(v3353[v9955], v3353, ["ui-state-disabled"], JAM.policy.p3);
      g$$191++;
      v3355 = h$$158 = this.lis[g$$191];
    }
    var v9957 = e$$342.cache === !1;
    if (v9957) {
      var v15672 = this.anchors;
      JAM.call(v15672.removeData, v15672, ["cache.tabs"], JAM.policy.p3);
    }
    var v15673 = this.lis;
    var v9958 = JAM.call(v15673.add, v15673, [this.anchors], JAM.policy.p3);
    JAM.call(v9958.unbind, v9958, [".tabs"], JAM.policy.p3);
    if (e$$342.event !== "mouseover") {
      var i$$207 = v1799;
      var v19902 = this.lis;
      JAM.call(v19902.bind, v19902, ["mouseover.tabs", v1800], JAM.policy.p3);
      var v19903 = this.lis;
      JAM.call(v19903.bind, v19903, ["mouseout.tabs", v1801], JAM.policy.p3);
      var v15675 = this.anchors;
      JAM.call(v15675.bind, v15675, ["focus.tabs", v1802], JAM.policy.p3);
      var v9960 = this.anchors;
      JAM.call(v9960.bind, v9960, ["blur.tabs", v1803], JAM.policy.p3);
    }
    var k$$74;
    var l$$80;
    var v3357 = e$$342.fx;
    if (v3357) {
      var v9961;
      if (JAM.call(a$$663.isArray, a$$663, [e$$342.fx], JAM.policy.p3)) {
        k$$74 = e$$342.fx[0];
        v9961 = l$$80 = e$$342.fx[1];
      } else {
        v9961 = k$$74 = l$$80 = e$$342.fx;
      }
      v9961;
    }
    var v3358;
    if (l$$80) {
      v3358 = v1805;
    } else {
      v3358 = v1806;
    }
    var n$$95 = v3358;
    var v3359;
    if (k$$74) {
      v3359 = v1808;
    } else {
      v3359 = v1809;
    }
    var o$$25 = v3359;
    var v9962 = this.anchors;
    JAM.call(v9962.bind, v9962, [e$$342.event + ".tabs", v1814], JAM.policy.p3);
    var v9964 = this.anchors;
    JAM.call(v9964.bind, v9964, ["click.tabs", v1815], JAM.policy.p3);
    return;
  }
  function v1792() {
    function v1791() {
      var b$$656 = JAM.call(a$$663, null, [this], JAM.policy.p3);
      var v3360 = JAM.call(b$$656.html, b$$656, [JAM.call(b$$656.data, b$$656, ["label.tabs"], JAM.policy.p3)], JAM.policy.p3);
      JAM.call(v3360.removeData, v3360, ["label.tabs"], JAM.policy.p3);
      return;
    }
    var v19907 = this.lis;
    var v15678 = JAM.call(v19907.filter, v19907, [".ui-state-processing"], JAM.policy.p3);
    var v9966 = JAM.call(v15678.removeClass, v15678, ["ui-state-processing"], JAM.policy.p3);
    var v3361 = JAM.call(v9966.find, v9966, ["span:data(label.tabs)"], JAM.policy.p3);
    JAM.call(v3361.each, v3361, [v1791], JAM.policy.p3);
    return;
  }
  function v1790(a$$667, b$$655) {
    var v9967 = this.anchors;
    return{tab:a$$667, panel:b$$655, index:JAM.call(v9967.index, v9967, [a$$667], JAM.policy.p3)};
  }
  function v1789() {
    var v3363 = this.cookie;
    if (!v3363) {
      var v9968 = this.options.cookie.name;
      if (!v9968) {
        v9968 = "ui-tabs-" + (d$$398 = d$$398 + 1);
      }
      introspect(JAM.policy.p2) {
        v3363 = this.cookie = v9968;
      }
    }
    var b$$654 = v3363;
    var v3364 = a$$663.cookie;
    var v9970 = [b$$654];
    return JAM.call(v3364.apply, v3364, [null, JAM.call(v9970.concat, v9970, [JAM.call(a$$663.makeArray, a$$663, [arguments], JAM.policy.p3)], JAM.policy.p3)], JAM.policy.p3);
  }
  function v1788(a$$666) {
    return JAM.call(a$$666.replace, a$$666, [/:/g, "\\:"], JAM.policy.p3);
  }
  function v1787(a$$665) {
    var v9972 = a$$665.title;
    if (v9972) {
      var v19909 = a$$665.title;
      var v15682 = JAM.call(v19909.replace, v19909, [/\s/g, "_"], JAM.policy.p3);
      v9972 = JAM.call(v15682.replace, v15682, [/[^\w\u00c0-\uFFFF-]/g, ""], JAM.policy.p3);
    }
    var v3366 = v9972;
    if (!v3366) {
      v3366 = this.options.idPrefix + (c$$527 = c$$527 + 1);
    }
    return v3366;
  }
  function v1786(a$$664, b$$653) {
    if (a$$664 == "selected") {
      var v9976 = this.options.collapsible;
      if (v9976) {
        v9976 = b$$653 == this.options.selected;
      }
      if (v9976) {
        return;
      }
      JAM.call(this.select, this, [b$$653], JAM.policy.p3);
    } else {
      JAM.set(this.options, a$$664, b$$653, JAM.policy.p2);
      JAM.call(this._tabify, this, [], JAM.policy.p3);
    }
    return;
  }
  function v1785() {
    JAM.call(this._tabify, this, [!0], JAM.policy.p3);
    return;
  }
  var c$$527 = 0;
  var d$$398 = 0;
  JAM.call(a$$663.widget, a$$663, ["ui.tabs", {options:{add:null, ajaxOptions:null, cache:!1, cookie:null, collapsible:!1, disable:null, disabled:[], enable:null, event:"click", fx:null, idPrefix:"ui-tabs-", load:null, panelTemplate:"<div></div>", remove:null, select:null, show:null, spinner:"<em>Loading&#8230;</em>", tabTemplate:"<li><a href='#{href}'><span>#{label}</span></a></li>"}, _create:v1785, _setOption:v1786, _tabId:v1787, _sanitizeSelector:v1788, _cookie:v1789, _ui:v1790, _cleanup:v1792, 
  _tabify:v1816, _getIndex:v1817, destroy:v1821, add:v1824, remove:v1827, enable:v1829, disable:v1830, select:v1831, load:v1834, abort:v1835, url:v1836, length:v1837}], JAM.policy.p3);
  JAM.call(a$$663.extend, a$$663, [a$$663.ui.tabs, {version:"1.8.24"}], JAM.policy.p3);
  JAM.call(a$$663.extend, a$$663, [a$$663.ui.tabs.prototype, {rotation:null, rotate:v1842}], JAM.policy.p3);
  return;
}
function v1784(a$$649, b$$635) {
  function v1783() {
    function v1782(b$$651, i$$206) {
      f$$175 = (JAM.call(d$$397.values, d$$397, [b$$651], JAM.policy.p3) - d$$397.options.min) / (d$$397.options.max - d$$397.options.min) * 100;
      var v26443;
      if (d$$397.orientation === "horizontal") {
        v26443 = "left";
      } else {
        v26443 = "bottom";
      }
      JAM.set(g$$190, v26443, f$$175 + "%", JAM.policy.p2);
      var v24410 = JAM.call(a$$649, null, [this], JAM.policy.p3);
      var v19914 = JAM.call(v24410.stop, v24410, [1, 1], JAM.policy.p3);
      var v24411;
      if (e$$340) {
        v24411 = "animate";
      } else {
        v24411 = "css";
      }
      JAM.call(v19914[v24411], v19914, [g$$190, c$$526.animate], JAM.policy.p3);
      var v15690 = d$$397.options.range === !0;
      if (v15690) {
        var v19919;
        if (d$$397.orientation === "horizontal") {
          var v26445 = b$$651 === 0;
          if (v26445) {
            var v28777 = d$$397.range;
            var v27849 = JAM.call(v28777.stop, v28777, [1, 1], JAM.policy.p3);
            var v28778;
            if (e$$340) {
              v28778 = "animate";
            } else {
              v28778 = "css";
            }
            JAM.call(v27849[v28778], v27849, [{left:f$$175 + "%"}, c$$526.animate], JAM.policy.p3);
          }
          var v26446 = b$$651 === 1;
          if (v26446) {
            var v27853 = d$$397.range;
            var v28780;
            if (e$$340) {
              v28780 = "animate";
            } else {
              v28780 = "css";
            }
            v26446 = JAM.call(v27853[v28780], v27853, [{width:f$$175 - h$$157 + "%"}, {queue:!1, duration:c$$526.animate}], JAM.policy.p3);
          }
          v19919 = v26446;
        } else {
          var v26447 = b$$651 === 0;
          if (v26447) {
            var v28784 = d$$397.range;
            var v27857 = JAM.call(v28784.stop, v28784, [1, 1], JAM.policy.p3);
            var v28785;
            if (e$$340) {
              v28785 = "animate";
            } else {
              v28785 = "css";
            }
            JAM.call(v27857[v28785], v27857, [{bottom:f$$175 + "%"}, c$$526.animate], JAM.policy.p3);
          }
          var v26448 = b$$651 === 1;
          if (v26448) {
            var v27861 = d$$397.range;
            var v28787;
            if (e$$340) {
              v28787 = "animate";
            } else {
              v28787 = "css";
            }
            v26448 = JAM.call(v27861[v28787], v27861, [{height:f$$175 - h$$157 + "%"}, {queue:!1, duration:c$$526.animate}], JAM.policy.p3);
          }
          v19919 = v26448;
        }
        v19919;
      }
      h$$157 = f$$175;
      return;
    }
    var b$$650 = this.options.range;
    var c$$526 = this.options;
    var d$$397 = this;
    var v3371;
    if (this._animateOff) {
      v3371 = !1;
    } else {
      v3371 = c$$526.animate;
    }
    var e$$340 = v3371;
    var f$$175;
    var g$$190 = {};
    var h$$157;
    var i$$205;
    var j$$105;
    var k$$73;
    var v3372;
    var v15691 = this.options.values;
    if (v15691) {
      v15691 = this.options.values.length;
    }
    if (v15691) {
      var v9981 = this.handles;
      v3372 = JAM.call(v9981.each, v9981, [v1782], JAM.policy.p3);
    } else {
      i$$205 = JAM.call(this.value, this, [], JAM.policy.p3);
      j$$105 = this.options.min;
      k$$73 = this.options.max;
      var v29412;
      if (k$$73 !== j$$105) {
        v29412 = (i$$205 - j$$105) / (k$$73 - j$$105) * 100;
      } else {
        v29412 = 0;
      }
      f$$175 = v29412;
      var v29413;
      if (d$$397.orientation === "horizontal") {
        v29413 = "left";
      } else {
        v29413 = "bottom";
      }
      JAM.set(g$$190, v29413, f$$175 + "%", JAM.policy.p2);
      var v28792 = this.handle;
      var v27865 = JAM.call(v28792.stop, v28792, [1, 1], JAM.policy.p3);
      var v28793;
      if (e$$340) {
        v28793 = "animate";
      } else {
        v28793 = "css";
      }
      JAM.call(v27865[v28793], v27865, [g$$190, c$$526.animate], JAM.policy.p3);
      var v27868 = b$$650 === "min";
      if (v27868) {
        v27868 = this.orientation === "horizontal";
      }
      var v26449 = v27868;
      if (v26449) {
        var v28795 = this.range;
        var v27869 = JAM.call(v28795.stop, v28795, [1, 1], JAM.policy.p3);
        var v28796;
        if (e$$340) {
          v28796 = "animate";
        } else {
          v28796 = "css";
        }
        JAM.call(v27869[v28796], v27869, [{width:f$$175 + "%"}, c$$526.animate], JAM.policy.p3);
      }
      var v26450 = b$$650 === "max";
      if (v26450) {
        v26450 = this.orientation === "horizontal";
      }
      var v24415 = v26450;
      if (v24415) {
        var v26451 = this.range;
        var v27874;
        if (e$$340) {
          v27874 = "animate";
        } else {
          v27874 = "css";
        }
        JAM.call(v26451[v27874], v26451, [{width:100 - f$$175 + "%"}, {queue:!1, duration:c$$526.animate}], JAM.policy.p3);
      }
      var v24416 = b$$650 === "min";
      if (v24416) {
        v24416 = this.orientation === "vertical";
      }
      var v19922 = v24416;
      if (v19922) {
        var v26456 = this.range;
        var v24417 = JAM.call(v26456.stop, v26456, [1, 1], JAM.policy.p3);
        var v26457;
        if (e$$340) {
          v26457 = "animate";
        } else {
          v26457 = "css";
        }
        JAM.call(v24417[v26457], v24417, [{height:f$$175 + "%"}, c$$526.animate], JAM.policy.p3);
      }
      var v19923 = b$$650 === "max";
      if (v19923) {
        v19923 = this.orientation === "vertical";
      }
      var v15692 = v19923;
      if (v15692) {
        var v19924 = this.range;
        var v24422;
        if (e$$340) {
          v24422 = "animate";
        } else {
          v24422 = "css";
        }
        v15692 = JAM.call(v19924[v24422], v19924, [{height:100 - f$$175 + "%"}, {queue:!1, duration:c$$526.animate}], JAM.policy.p3);
      }
      v3372 = v15692;
    }
    v3372;
    return;
  }
  function v1781() {
    return this.options.max;
  }
  function v1780() {
    return this.options.min;
  }
  function v1779(a$$662) {
    if (a$$662 <= this.options.min) {
      return this.options.min;
    }
    if (a$$662 >= this.options.max) {
      return this.options.max;
    }
    var v3379;
    if (this.options.step > 0) {
      v3379 = this.options.step;
    } else {
      v3379 = 1;
    }
    var b$$649 = v3379;
    var c$$525 = (a$$662 - this.options.min) % b$$649;
    var d$$396 = a$$662 - c$$525;
    var v9988 = JAM.call(Math.abs, Math, [c$$525], JAM.policy.p3) * 2 >= b$$649;
    if (v9988) {
      var v24426;
      if (c$$525 > 0) {
        v24426 = b$$649;
      } else {
        v24426 = -b$$649;
      }
      d$$396 = d$$396 + v24426;
    }
    return parseFloat(JAM.call(d$$396.toFixed, d$$396, [5], JAM.policy.p3));
  }
  function v1778(a$$661) {
    var b$$648;
    var c$$524;
    var d$$395;
    if (arguments.length) {
      b$$648 = this.options.values[a$$661];
      b$$648 = JAM.call(this._trimAlignValue, this, [b$$648], JAM.policy.p3);
      return b$$648;
    }
    var v3382 = this.options.values;
    c$$524 = JAM.call(v3382.slice, v3382, [], JAM.policy.p3);
    d$$395 = 0;
    var v3384 = d$$395 < c$$524.length;
    for (;v3384;) {
      var v30975 = JAM.call(this._trimAlignValue, this, [c$$524[d$$395]], JAM.policy.p3);
      JAM.set(c$$524, d$$395, v30975, JAM.policy.p2);
      d$$395 = d$$395 + 1;
      v3384 = d$$395 < c$$524.length;
    }
    return c$$524;
  }
  function v1777() {
    var a$$660 = this.options.value;
    a$$660 = JAM.call(this._trimAlignValue, this, [a$$660], JAM.policy.p3);
    return a$$660;
  }
  function v1776(b$$647, c$$523) {
    var d$$394;
    var e$$339 = 0;
    var v9993 = JAM.call(a$$649.isArray, a$$649, [this.options.values], JAM.policy.p3);
    if (v9993) {
      e$$339 = this.options.values.length;
    }
    var v9994 = a$$649.Widget.prototype._setOption;
    JAM.call(v9994.apply, v9994, [this, arguments], JAM.policy.p3);
    switch(b$$647) {
      case "disabled":
        var v3386;
        if (c$$523) {
          var v26461 = this.handles;
          var v24427 = JAM.call(v26461.filter, v26461, [".ui-state-focus"], JAM.policy.p3);
          JAM.call(v24427.blur, v24427, [], JAM.policy.p3);
          var v24428 = this.handles;
          JAM.call(v24428.removeClass, v24428, ["ui-state-hover"], JAM.policy.p3);
          var v19935 = this.handles;
          JAM.call(v19935.propAttr, v19935, ["disabled", !0], JAM.policy.p3);
          var v15702 = this.element;
          v3386 = JAM.call(v15702.addClass, v15702, ["ui-disabled"], JAM.policy.p3);
        } else {
          var v15703 = this.handles;
          JAM.call(v15703.propAttr, v15703, ["disabled", !1], JAM.policy.p3);
          var v15705 = this.element;
          v3386 = JAM.call(v15705.removeClass, v15705, ["ui-disabled"], JAM.policy.p3);
        }
        v3386;
        break;
      case "orientation":
        JAM.call(this._detectOrientation, this, [], JAM.policy.p3);
        var v19937 = this.element;
        var v15706 = JAM.call(v19937.removeClass, v19937, ["ui-slider-horizontal ui-slider-vertical"], JAM.policy.p3);
        JAM.call(v15706.addClass, v15706, ["ui-slider-" + this.orientation], JAM.policy.p3);
        JAM.call(this._refreshValue, this, [], JAM.policy.p3);
        break;
      case "value":
        this._animateOff = !0;
        JAM.call(this._refreshValue, this, [], JAM.policy.p3);
        JAM.call(this._change, this, [null, 0], JAM.policy.p3);
        this._animateOff = !1;
        break;
      case "values":
        this._animateOff = !0;
        JAM.call(this._refreshValue, this, [], JAM.policy.p3);
        d$$394 = 0;
        var v3387 = d$$394 < e$$339;
        for (;v3387;) {
          JAM.call(this._change, this, [null, d$$394], JAM.policy.p3);
          d$$394 = d$$394 + 1;
          v3387 = d$$394 < e$$339;
        }
        this._animateOff = !1;
    }
    return;
  }
  function v1775(b$$646, c$$522) {
    var d$$393;
    var e$$338;
    var f$$174;
    if (arguments.length > 1) {
      var v15708 = this.options.values;
      var v30976 = JAM.call(this._trimAlignValue, this, [c$$522], JAM.policy.p3);
      JAM.set(v15708, b$$646, v30976, JAM.policy.p2);
      JAM.call(this._refreshValue, this, [], JAM.policy.p3);
      JAM.call(this._change, this, [null, b$$646], JAM.policy.p3);
      return;
    }
    if (!arguments.length) {
      return JAM.call(this._values, this, [], JAM.policy.p3);
    }
    if (!JAM.call(a$$649.isArray, a$$649, [arguments[0]], JAM.policy.p3)) {
      var v3390;
      var v15710 = this.options.values;
      if (v15710) {
        v15710 = this.options.values.length;
      }
      if (v15710) {
        v3390 = JAM.call(this._values, this, [b$$646], JAM.policy.p3);
      } else {
        v3390 = JAM.call(this.value, this, [], JAM.policy.p3);
      }
      return v3390;
    }
    d$$393 = this.options.values;
    e$$338 = arguments[0];
    f$$174 = 0;
    var v3392 = f$$174 < d$$393.length;
    for (;v3392;) {
      var v30977 = JAM.call(this._trimAlignValue, this, [e$$338[f$$174]], JAM.policy.p3);
      JAM.set(d$$393, f$$174, v30977, JAM.policy.p2);
      JAM.call(this._change, this, [null, f$$174], JAM.policy.p3);
      f$$174 = f$$174 + 1;
      v3392 = f$$174 < d$$393.length;
    }
    JAM.call(this._refreshValue, this, [], JAM.policy.p3);
    return;
  }
  function v1774(a$$659) {
    if (arguments.length) {
      var v15711 = this.options;
      var v30978 = JAM.call(this._trimAlignValue, this, [a$$659], JAM.policy.p3);
      v15711.value = v30978;
      JAM.call(this._refreshValue, this, [], JAM.policy.p3);
      JAM.call(this._change, this, [null, 0], JAM.policy.p3);
      return;
    }
    return JAM.call(this._value, this, [], JAM.policy.p3);
  }
  function v1773(a$$658, b$$645) {
    var v10003 = !this._keySliding;
    if (v10003) {
      v10003 = !this._mouseSliding;
    }
    if (v10003) {
      var c$$521 = {handle:this.handles[b$$645], value:JAM.call(this.value, this, [], JAM.policy.p3)};
      var v15714 = this.options.values;
      if (v15714) {
        v15714 = this.options.values.length;
      }
      var v10005 = v15714;
      if (v10005) {
        var v30979 = JAM.call(this.values, this, [b$$645], JAM.policy.p3);
        c$$521.value = v30979;
        var v30980 = JAM.call(this.values, this, [], JAM.policy.p3);
        c$$521.values = v30980;
      }
      JAM.call(this._trigger, this, ["change", a$$658, c$$521], JAM.policy.p3);
    }
    return;
  }
  function v1772(a$$657, b$$644) {
    var c$$520 = {handle:this.handles[b$$644], value:JAM.call(this.value, this, [], JAM.policy.p3)};
    var v15715 = this.options.values;
    if (v15715) {
      v15715 = this.options.values.length;
    }
    var v10007 = v15715;
    if (v10007) {
      var v30981 = JAM.call(this.values, this, [b$$644], JAM.policy.p3);
      c$$520.value = v30981;
      var v30982 = JAM.call(this.values, this, [], JAM.policy.p3);
      c$$520.values = v30982;
    }
    JAM.call(this._trigger, this, ["stop", a$$657, c$$520], JAM.policy.p3);
    return;
  }
  function v1771(a$$656, b$$643, c$$519) {
    var d$$392;
    var e$$337;
    var f$$173;
    var v3399;
    var v15716 = this.options.values;
    if (v15716) {
      v15716 = this.options.values.length;
    }
    if (v15716) {
      var v24433;
      if (b$$643) {
        v24433 = 0;
      } else {
        v24433 = 1;
      }
      d$$392 = JAM.call(this.values, this, [v24433], JAM.policy.p3);
      var v26462 = this.options.values.length === 2;
      if (v26462) {
        v26462 = this.options.range === !0;
      }
      var v24434 = v26462;
      if (v24434) {
        var v27881 = b$$643 === 0;
        if (v27881) {
          v27881 = c$$519 > d$$392;
        }
        var v26463 = v27881;
        if (!v26463) {
          var v27882 = b$$643 === 1;
          if (v27882) {
            v27882 = c$$519 < d$$392;
          }
          v26463 = v27882;
        }
        v24434 = v26463;
      }
      var v19949 = v24434;
      if (v19949) {
        c$$519 = d$$392;
      }
      var v15717 = c$$519 !== JAM.call(this.values, this, [b$$643], JAM.policy.p3);
      if (v15717) {
        e$$337 = JAM.call(this.values, this, [], JAM.policy.p3);
        JAM.set(e$$337, b$$643, c$$519, JAM.policy.p2);
        f$$173 = JAM.call(this._trigger, this, ["slide", a$$656, {handle:this.handles[b$$643], value:c$$519, values:e$$337}], JAM.policy.p3);
        var v27885;
        if (b$$643) {
          v27885 = 0;
        } else {
          v27885 = 1;
        }
        d$$392 = JAM.call(this.values, this, [v27885], JAM.policy.p3);
        var v24435 = f$$173 !== !1;
        if (v24435) {
          v24435 = JAM.call(this.values, this, [b$$643, c$$519, !0], JAM.policy.p3);
        }
        v15717 = v24435;
      }
      v3399 = v15717;
    } else {
      var v10008 = c$$519 !== JAM.call(this.value, this, [], JAM.policy.p3);
      if (v10008) {
        f$$173 = JAM.call(this._trigger, this, ["slide", a$$656, {handle:this.handles[b$$643], value:c$$519}], JAM.policy.p3);
        var v19952 = f$$173 !== !1;
        if (v19952) {
          v19952 = JAM.call(this.value, this, [c$$519], JAM.policy.p3);
        }
        v10008 = v19952;
      }
      v3399 = v10008;
    }
    v3399;
    return;
  }
  function v1770(a$$655, b$$642) {
    var c$$518 = {handle:this.handles[b$$642], value:JAM.call(this.value, this, [], JAM.policy.p3)};
    var v15719 = this.options.values;
    if (v15719) {
      v15719 = this.options.values.length;
    }
    var v10011 = v15719;
    if (v10011) {
      var v30983 = JAM.call(this.values, this, [b$$642], JAM.policy.p3);
      c$$518.value = v30983;
      var v30984 = JAM.call(this.values, this, [], JAM.policy.p3);
      c$$518.values = v30984;
    }
    return JAM.call(this._trigger, this, ["start", a$$655, c$$518], JAM.policy.p3);
  }
  function v1769(a$$654) {
    var b$$641;
    var c$$517;
    var d$$391;
    var e$$336;
    var f$$172;
    var v28802;
    if (this.orientation === "horizontal") {
      b$$641 = this.elementSize.width;
      var v29792 = a$$654.x - this.elementOffset.left;
      var v30060;
      if (this._clickOffset) {
        v30060 = this._clickOffset.left;
      } else {
        v30060 = 0;
      }
      v28802 = c$$517 = v29792 - v30060;
    } else {
      b$$641 = this.elementSize.height;
      var v29795 = a$$654.y - this.elementOffset.top;
      var v30063;
      if (this._clickOffset) {
        v30063 = this._clickOffset.top;
      } else {
        v30063 = 0;
      }
      v28802 = c$$517 = v29795 - v30063;
    }
    v28802;
    d$$391 = c$$517 / b$$641;
    var v27886 = d$$391 > 1;
    if (v27886) {
      d$$391 = 1;
    }
    var v26468 = d$$391 < 0;
    if (v26468) {
      d$$391 = 0;
    }
    var v24439 = this.orientation === "vertical";
    if (v24439) {
      d$$391 = 1 - d$$391;
    }
    e$$336 = this.options.max - this.options.min;
    f$$172 = this.options.min + d$$391 * e$$336;
    return JAM.call(this._trimAlignValue, this, [f$$172], JAM.policy.p3);
  }
  function v1768() {
    var v3402;
    if (this.options.orientation === "vertical") {
      v3402 = "vertical";
    } else {
      v3402 = "horizontal";
    }
    this.orientation = v3402;
    return;
  }
  function v1767(a$$653) {
    var v28803 = this.handles;
    JAM.call(v28803.removeClass, v28803, ["ui-state-active"], JAM.policy.p3);
    this._mouseSliding = !1;
    JAM.call(this._stop, this, [a$$653, this._handleIndex], JAM.policy.p3);
    JAM.call(this._change, this, [a$$653, this._handleIndex], JAM.policy.p3);
    this._handleIndex = null;
    this._clickOffset = null;
    this._animateOff = !1;
    return!1;
  }
  function v1766(a$$652) {
    var b$$640 = {x:a$$652.pageX, y:a$$652.pageY};
    var c$$516 = JAM.call(this._normValueFromMouse, this, [b$$640], JAM.policy.p3);
    JAM.call(this._slide, this, [a$$652, this._handleIndex, c$$516], JAM.policy.p3);
    return!1;
  }
  function v1765(a$$651) {
    return!0;
  }
  function v1764(b$$638) {
    function v1763(b$$639) {
      var c$$515 = JAM.call(Math.abs, Math, [e$$335 - JAM.call(h$$156.values, h$$156, [b$$639], JAM.policy.p3)], JAM.policy.p3);
      var v3406 = f$$171 > c$$515;
      if (v3406) {
        f$$171 = c$$515;
        g$$189 = JAM.call(a$$649, null, [this], JAM.policy.p3);
        i$$204 = b$$639;
      }
      return;
    }
    var c$$514 = this.options;
    var d$$390;
    var e$$335;
    var f$$171;
    var g$$189;
    var h$$156;
    var i$$204;
    var j$$104;
    var k$$72;
    var l$$79;
    var v3407;
    if (c$$514.disabled) {
      v3407 = !1;
    } else {
      var v30288 = this.element;
      var v30064 = JAM.call(v30288.outerWidth, v30288, [], JAM.policy.p3);
      var v30289 = this.element;
      this.elementSize = {width:v30064, height:JAM.call(v30289.outerHeight, v30289, [], JAM.policy.p3)};
      var v30066 = this.element;
      var v30985 = JAM.call(v30066.offset, v30066, [], JAM.policy.p3);
      this.elementOffset = v30985;
      d$$390 = {x:b$$638.pageX, y:b$$638.pageY};
      e$$335 = JAM.call(this._normValueFromMouse, this, [d$$390], JAM.policy.p3);
      f$$171 = this.options.max - this.options.min + 1;
      h$$156 = this;
      var v26471 = this.handles;
      JAM.call(v26471.each, v26471, [v1763], JAM.policy.p3);
      var v26472 = c$$514.range === !0;
      if (v26472) {
        v26472 = JAM.call(this.values, this, [1], JAM.policy.p3) === c$$514.min;
      }
      var v24442 = v26472;
      if (v24442) {
        i$$204 = i$$204 + 1;
        g$$189 = JAM.call(a$$649, null, [this.handles[i$$204]], JAM.policy.p3);
      }
      j$$104 = JAM.call(this._start, this, [b$$638, i$$204], JAM.policy.p3);
      var v15723;
      if (j$$104 === !1) {
        v15723 = !1;
      } else {
        this._mouseSliding = !0;
        h$$156._handleIndex = i$$204;
        var v30067 = JAM.call(g$$189.addClass, g$$189, ["ui-state-active"], JAM.policy.p3);
        JAM.call(v30067.focus, v30067, [], JAM.policy.p3);
        k$$72 = JAM.call(g$$189.offset, g$$189, [], JAM.policy.p3);
        var v30290 = JAM.call(a$$649, null, [b$$638.target], JAM.policy.p3);
        var v30068 = JAM.call(v30290.parents, v30290, [], JAM.policy.p3);
        var v29801 = JAM.call(v30068.andSelf, v30068, [], JAM.policy.p3);
        l$$79 = !JAM.call(v29801.is, v29801, [".ui-slider-handle"], JAM.policy.p3);
        var v28806;
        if (l$$79) {
          v28806 = {left:0, top:0};
        } else {
          var v29420 = b$$638.pageX - k$$72.left - JAM.call(g$$189.width, g$$189, [], JAM.policy.p3) / 2;
          var v30291 = b$$638.pageY - k$$72.top - JAM.call(g$$189.height, g$$189, [], JAM.policy.p3) / 2;
          var v30435 = parseInt(JAM.call(g$$189.css, g$$189, ["borderTopWidth"], JAM.policy.p3), 10);
          if (!v30435) {
            v30435 = 0;
          }
          var v30072 = v30291 - v30435;
          var v30293 = parseInt(JAM.call(g$$189.css, g$$189, ["borderBottomWidth"], JAM.policy.p3), 10);
          if (!v30293) {
            v30293 = 0;
          }
          var v29804 = v30072 - v30293;
          var v30074 = parseInt(JAM.call(g$$189.css, g$$189, ["marginTop"], JAM.policy.p3), 10);
          if (!v30074) {
            v30074 = 0;
          }
          v28806 = {left:v29420, top:v29804 + v30074};
        }
        this._clickOffset = v28806;
        var v28807 = this.handles;
        var v27893 = JAM.call(v28807.hasClass, v28807, ["ui-state-hover"], JAM.policy.p3);
        if (!v27893) {
          JAM.call(this._slide, this, [b$$638, i$$204, e$$335], JAM.policy.p3);
        }
        this._animateOff = !0;
        v15723 = !0;
      }
      v3407 = v15723;
    }
    return v3407;
  }
  function v1762() {
    var v24444 = this.handles;
    JAM.call(v24444.remove, v24444, [], JAM.policy.p3);
    var v24445 = this.range;
    JAM.call(v24445.remove, v24445, [], JAM.policy.p3);
    var v26473 = this.element;
    var v24446 = JAM.call(v26473.removeClass, v26473, ["ui-slider ui-slider-horizontal ui-slider-vertical ui-slider-disabled ui-widget ui-widget-content ui-corner-all"], JAM.policy.p3);
    var v19960 = JAM.call(v24446.removeData, v24446, ["slider"], JAM.policy.p3);
    JAM.call(v19960.unbind, v19960, [".slider"], JAM.policy.p3);
    JAM.call(this._mouseDestroy, this, [], JAM.policy.p3);
    return this;
  }
  function v1761() {
    function v1760(c$$513) {
      var v3408 = JAM.call(a$$649, null, [this], JAM.policy.p3);
      var d$$389 = JAM.call(v3408.data, v3408, ["index.ui-slider-handle"], JAM.policy.p3);
      var v3409 = b$$636._keySliding;
      if (v3409) {
        b$$636._keySliding = !1;
        JAM.call(b$$636._stop, b$$636, [c$$513, d$$389], JAM.policy.p3);
        JAM.call(b$$636._change, b$$636, [c$$513, d$$389], JAM.policy.p3);
        var v15724 = JAM.call(a$$649, null, [this], JAM.policy.p3);
        JAM.call(v15724.removeClass, v15724, ["ui-state-active"], JAM.policy.p3);
      }
      return;
    }
    function v1759(d$$388) {
      var v3410 = JAM.call(a$$649, null, [this], JAM.policy.p3);
      var e$$334 = JAM.call(v3410.data, v3410, ["index.ui-slider-handle"], JAM.policy.p3);
      var f$$170;
      var g$$188;
      var h$$155;
      var i$$203;
      if (b$$636.options.disabled) {
        return;
      }
      switch(d$$388.keyCode) {
        case a$$649.ui.keyCode.HOME:
        ;
        case a$$649.ui.keyCode.END:
        ;
        case a$$649.ui.keyCode.PAGE_UP:
        ;
        case a$$649.ui.keyCode.PAGE_DOWN:
        ;
        case a$$649.ui.keyCode.UP:
        ;
        case a$$649.ui.keyCode.RIGHT:
        ;
        case a$$649.ui.keyCode.DOWN:
        ;
        case a$$649.ui.keyCode.LEFT:
          JAM.call(d$$388.preventDefault, d$$388, [], JAM.policy.p3);
          if (!b$$636._keySliding) {
            b$$636._keySliding = !0;
            var v15725 = JAM.call(a$$649, null, [this], JAM.policy.p3);
            JAM.call(v15725.addClass, v15725, ["ui-state-active"], JAM.policy.p3);
            f$$170 = JAM.call(b$$636._start, b$$636, [d$$388, e$$334], JAM.policy.p3);
            if (f$$170 === !1) {
              return;
            }
          }
        ;
      }
      i$$203 = b$$636.options.step;
      var v10021;
      var v19961 = b$$636.options.values;
      if (v19961) {
        v19961 = b$$636.options.values.length;
      }
      if (v19961) {
        v10021 = g$$188 = h$$155 = JAM.call(b$$636.values, b$$636, [e$$334], JAM.policy.p3);
      } else {
        v10021 = g$$188 = h$$155 = JAM.call(b$$636.value, b$$636, [], JAM.policy.p3);
      }
      v10021;
      switch(d$$388.keyCode) {
        case a$$649.ui.keyCode.HOME:
          h$$155 = b$$636.options.min;
          break;
        case a$$649.ui.keyCode.END:
          h$$155 = b$$636.options.max;
          break;
        case a$$649.ui.keyCode.PAGE_UP:
          h$$155 = JAM.call(b$$636._trimAlignValue, b$$636, [g$$188 + (b$$636.options.max - b$$636.options.min) / c$$512], JAM.policy.p3);
          break;
        case a$$649.ui.keyCode.PAGE_DOWN:
          h$$155 = JAM.call(b$$636._trimAlignValue, b$$636, [g$$188 - (b$$636.options.max - b$$636.options.min) / c$$512], JAM.policy.p3);
          break;
        case a$$649.ui.keyCode.UP:
        ;
        case a$$649.ui.keyCode.RIGHT:
          if (g$$188 === b$$636.options.max) {
            return;
          }
          h$$155 = JAM.call(b$$636._trimAlignValue, b$$636, [g$$188 + i$$203], JAM.policy.p3);
          break;
        case a$$649.ui.keyCode.DOWN:
        ;
        case a$$649.ui.keyCode.LEFT:
          if (g$$188 === b$$636.options.min) {
            return;
          }
          h$$155 = JAM.call(b$$636._trimAlignValue, b$$636, [g$$188 - i$$203], JAM.policy.p3);
      }
      JAM.call(b$$636._slide, b$$636, [d$$388, e$$334, h$$155], JAM.policy.p3);
      return;
    }
    function v1758(b$$637) {
      var v3424 = JAM.call(a$$649, null, [this], JAM.policy.p3);
      JAM.call(v3424.data, v3424, ["index.ui-slider-handle", b$$637], JAM.policy.p3);
      return;
    }
    function v1757() {
      var v3425 = JAM.call(a$$649, null, [this], JAM.policy.p3);
      JAM.call(v3425.removeClass, v3425, ["ui-state-focus"], JAM.policy.p3);
      return;
    }
    function v1756() {
      var v3426;
      if (d$$387.disabled) {
        var v10026 = JAM.call(a$$649, null, [this], JAM.policy.p3);
        v3426 = JAM.call(v10026.blur, v10026, [], JAM.policy.p3);
      } else {
        var v15731 = JAM.call(a$$649, null, [".ui-slider .ui-state-focus"], JAM.policy.p3);
        JAM.call(v15731.removeClass, v15731, ["ui-state-focus"], JAM.policy.p3);
        var v15732 = JAM.call(a$$649, null, [this], JAM.policy.p3);
        v3426 = JAM.call(v15732.addClass, v15732, ["ui-state-focus"], JAM.policy.p3);
      }
      v3426;
      return;
    }
    function v1755() {
      var v3427 = JAM.call(a$$649, null, [this], JAM.policy.p3);
      JAM.call(v3427.removeClass, v3427, ["ui-state-hover"], JAM.policy.p3);
      return;
    }
    function v1754() {
      var v3428 = d$$387.disabled;
      if (!v3428) {
        var v10028 = JAM.call(a$$649, null, [this], JAM.policy.p3);
        JAM.call(v10028.addClass, v10028, ["ui-state-hover"], JAM.policy.p3);
      }
      return;
    }
    function v1753(a$$650) {
      JAM.call(a$$650.preventDefault, a$$650, [], JAM.policy.p3);
      return;
    }
    var b$$636 = this;
    var d$$387 = this.options;
    var v10030 = this.element;
    var v3429 = JAM.call(v10030.find, v10030, [".ui-slider-handle"], JAM.policy.p3);
    var e$$333 = JAM.call(v3429.addClass, v3429, ["ui-state-default ui-corner-all"], JAM.policy.p3);
    var f$$169 = "<a class='ui-slider-handle ui-state-default ui-corner-all' href='#'></a>";
    var v10031 = d$$387.values;
    if (v10031) {
      v10031 = d$$387.values.length;
    }
    var v3430 = v10031;
    if (!v3430) {
      v3430 = 1;
    }
    var g$$187 = v3430;
    var h$$154 = [];
    this._keySliding = !1;
    this._mouseSliding = !1;
    this._animateOff = !0;
    this._handleIndex = null;
    JAM.call(this._detectOrientation, this, [], JAM.policy.p3);
    JAM.call(this._mouseInit, this, [], JAM.policy.p3);
    var v19966 = this.element;
    var v24453 = "ui-slider ui-slider-" + this.orientation + " ui-widget" + " ui-widget-content" + " ui-corner-all";
    var v26476;
    if (d$$387.disabled) {
      v26476 = " ui-slider-disabled ui-disabled";
    } else {
      v26476 = "";
    }
    JAM.call(v19966.addClass, v19966, [v24453 + v26476], JAM.policy.p3);
    var v30986 = JAM.call(a$$649, null, [[]], JAM.policy.p3);
    this.range = v30986;
    var v10033 = d$$387.range;
    if (v10033) {
      var v19968 = d$$387.range === !0;
      if (v19968) {
        var v26477 = d$$387.values;
        if (!v26477) {
          d$$387.values = [this.options.min, this.options.min];
        }
        var v27899 = d$$387.values.length;
        if (v27899) {
          v27899 = d$$387.values.length !== 2;
        }
        var v26478 = v27899;
        if (v26478) {
          d$$387.values = [d$$387.values[0], d$$387.values[0]];
        }
      }
      var v24457 = JAM.call(a$$649, null, ["<div></div>"], JAM.policy.p3);
      var v19969 = JAM.call(v24457.appendTo, v24457, [this.element], JAM.policy.p3);
      var v26479;
      var v28816 = d$$387.range === "min";
      if (!v28816) {
        v28816 = d$$387.range === "max";
      }
      if (v28816) {
        v26479 = " ui-slider-range-" + d$$387.range;
      } else {
        v26479 = "";
      }
      var v30987 = JAM.call(v19969.addClass, v19969, ["ui-slider-range ui-widget-header" + v26479], JAM.policy.p3);
      this.range = v30987;
    }
    var i$$202 = e$$333.length;
    var v3431 = i$$202 < g$$187;
    for (;v3431;) {
      JAM.call(h$$154.push, h$$154, [f$$169], JAM.policy.p3);
      i$$202 = i$$202 + 1;
      v3431 = i$$202 < g$$187;
    }
    var v28817 = JAM.call(a$$649, null, [JAM.call(h$$154.join, h$$154, [""], JAM.policy.p3)], JAM.policy.p3);
    var v30988 = JAM.call(e$$333.add, e$$333, [JAM.call(v28817.appendTo, v28817, [b$$636.element], JAM.policy.p3)], JAM.policy.p3);
    this.handles = v30988;
    var v27905 = this.handles;
    var v30989 = JAM.call(v27905.eq, v27905, [0], JAM.policy.p3);
    this.handle = v30989;
    var v30075 = this.handles;
    var v29806 = JAM.call(v30075.add, v30075, [this.range], JAM.policy.p3);
    var v29428 = JAM.call(v29806.filter, v29806, ["a"], JAM.policy.p3);
    var v28819 = JAM.call(v29428.click, v29428, [v1753], JAM.policy.p3);
    var v27906 = JAM.call(v28819.hover, v28819, [v1754, v1755], JAM.policy.p3);
    var v26480 = JAM.call(v27906.focus, v27906, [v1756], JAM.policy.p3);
    JAM.call(v26480.blur, v26480, [v1757], JAM.policy.p3);
    var v24460 = this.handles;
    JAM.call(v24460.each, v24460, [v1758], JAM.policy.p3);
    var v24461 = this.handles;
    var v19971 = JAM.call(v24461.keydown, v24461, [v1759], JAM.policy.p3);
    JAM.call(v19971.keyup, v19971, [v1760], JAM.policy.p3);
    JAM.call(this._refreshValue, this, [], JAM.policy.p3);
    this._animateOff = !1;
    return;
  }
  var c$$512 = 5;
  JAM.call(a$$649.widget, a$$649, ["ui.slider", a$$649.ui.mouse, {widgetEventPrefix:"slide", options:{animate:!1, distance:0, max:100, min:0, orientation:"horizontal", range:!1, step:1, value:0, values:null}, _create:v1761, destroy:v1762, _mouseCapture:v1764, _mouseStart:v1765, _mouseDrag:v1766, _mouseStop:v1767, _detectOrientation:v1768, _normValueFromMouse:v1769, _start:v1770, _slide:v1771, _stop:v1772, _change:v1773, value:v1774, values:v1775, _setOption:v1776, _value:v1777, _values:v1778, _trimAlignValue:v1779, 
  _valueMin:v1780, _valueMax:v1781, _refreshValue:v1783}], JAM.policy.p3);
  JAM.call(a$$649.extend, a$$649, [a$$649.ui.slider, {version:"1.8.24"}], JAM.policy.p3);
  return;
}
function v1752(a$$645, b$$632) {
  function v1751() {
    var a$$648 = JAM.call(this.value, this, [], JAM.policy.p3);
    var b$$634 = JAM.call(this._percentage, this, [], JAM.policy.p3);
    var v15737 = this.oldValue !== a$$648;
    if (v15737) {
      this.oldValue = a$$648;
      JAM.call(this._trigger, this, ["change"], JAM.policy.p3);
    }
    var v24462 = this.valueDiv;
    var v19975 = JAM.call(v24462.toggle, v24462, [a$$648 > this.min], JAM.policy.p3);
    var v15738 = JAM.call(v19975.toggleClass, v19975, ["ui-corner-right", a$$648 === this.options.max], JAM.policy.p3);
    JAM.call(v15738.width, v15738, [JAM.call(b$$634.toFixed, b$$634, [0], JAM.policy.p3) + "%"], JAM.policy.p3);
    var v10038 = this.element;
    JAM.call(v10038.attr, v10038, ["aria-valuenow", a$$648], JAM.policy.p3);
    return;
  }
  function v1750() {
    return 100 * JAM.call(this._value, this, [], JAM.policy.p3) / this.options.max;
  }
  function v1749() {
    var a$$647 = this.options.value;
    var v10041 = typeof a$$647 != "number";
    if (v10041) {
      a$$647 = 0;
    }
    return JAM.call(Math.min, Math, [this.options.max, JAM.call(Math.max, Math, [this.min, a$$647], JAM.policy.p3)], JAM.policy.p3);
  }
  function v1748(b$$633, c$$511) {
    var v10044 = b$$633 === "value";
    if (v10044) {
      this.options.value = c$$511;
      JAM.call(this._refreshValue, this, [], JAM.policy.p3);
      var v19978 = JAM.call(this._value, this, [], JAM.policy.p3) === this.options.max;
      if (v19978) {
        JAM.call(this._trigger, this, ["complete"], JAM.policy.p3);
      }
    }
    var v10045 = a$$645.Widget.prototype._setOption;
    JAM.call(v10045.apply, v10045, [this, arguments], JAM.policy.p3);
    return;
  }
  function v1747(a$$646) {
    var v3435;
    if (a$$646 === b$$632) {
      v3435 = JAM.call(this._value, this, [], JAM.policy.p3);
    } else {
      JAM.call(this._setOption, this, ["value", a$$646], JAM.policy.p3);
      v3435 = this;
    }
    return v3435;
  }
  function v1746() {
    var v27907 = this.element;
    var v26484 = JAM.call(v27907.removeClass, v27907, ["ui-progressbar ui-widget ui-widget-content ui-corner-all"], JAM.policy.p3);
    var v24468 = JAM.call(v26484.removeAttr, v26484, ["role"], JAM.policy.p3);
    var v19980 = JAM.call(v24468.removeAttr, v24468, ["aria-valuemin"], JAM.policy.p3);
    var v15744 = JAM.call(v19980.removeAttr, v19980, ["aria-valuemax"], JAM.policy.p3);
    JAM.call(v15744.removeAttr, v15744, ["aria-valuenow"], JAM.policy.p3);
    var v15745 = this.valueDiv;
    JAM.call(v15745.remove, v15745, [], JAM.policy.p3);
    var v10047 = a$$645.Widget.prototype.destroy;
    JAM.call(v10047.apply, v10047, [this, arguments], JAM.policy.p3);
    return;
  }
  function v1745() {
    var v24469 = this.element;
    var v19982 = JAM.call(v24469.addClass, v24469, ["ui-progressbar ui-widget ui-widget-content ui-corner-all"], JAM.policy.p3);
    JAM.call(v19982.attr, v19982, [{role:"progressbar", "aria-valuemin":this.min, "aria-valuemax":this.options.max, "aria-valuenow":JAM.call(this._value, this, [], JAM.policy.p3)}], JAM.policy.p3);
    var v19984 = JAM.call(a$$645, null, ["<div class='ui-progressbar-value ui-widget-header ui-corner-left'></div>"], JAM.policy.p3);
    var v30990 = JAM.call(v19984.appendTo, v19984, [this.element], JAM.policy.p3);
    this.valueDiv = v30990;
    var v30991 = JAM.call(this._value, this, [], JAM.policy.p3);
    this.oldValue = v30991;
    JAM.call(this._refreshValue, this, [], JAM.policy.p3);
    return;
  }
  JAM.call(a$$645.widget, a$$645, ["ui.progressbar", {options:{value:0, max:100}, min:0, _create:v1745, destroy:v1746, value:v1747, _setOption:v1748, _value:v1749, _percentage:v1750, _refreshValue:v1751}], JAM.policy.p3);
  JAM.call(a$$645.extend, a$$645, [a$$645.ui.progressbar, {version:"1.8.24"}], JAM.policy.p3);
  return;
}
function v1744(a$$642, b$$622) {
  function v1743() {
    function v1742(a$$644, b$$631) {
      return b$$631;
    }
    var b$$630 = JAM.call(document.getElementsByTagName, document, ["body"], JAM.policy.p3)[0];
    var c$$510 = JAM.call(document.createElement, document, ["div"], JAM.policy.p3);
    var d$$386;
    var e$$332;
    var g$$186;
    var h$$153;
    var i$$201;
    var v19986;
    if (b$$630) {
      v19986 = "div";
    } else {
      v19986 = "body";
    }
    d$$386 = JAM.call(document.createElement, document, [v19986], JAM.policy.p3);
    g$$186 = {visibility:"hidden", width:0, height:0, border:0, margin:0, background:"none"};
    if (b$$630) {
      JAM.call(a$$642.extend, a$$642, [g$$186, {position:"absolute", left:"-1000px", top:"-1000px"}], JAM.policy.p3);
    }
    var j$$103;
    for (j$$103 in g$$186) {
      JAM.set(d$$386.style, j$$103, g$$186[j$$103], JAM.policy.p2);
    }
    JAM.call(d$$386.appendChild, d$$386, [c$$510], JAM.policy.p3);
    var v29429 = b$$630;
    if (!v29429) {
      v29429 = document.documentElement;
    }
    e$$332 = v29429;
    JAM.call(e$$332.insertBefore, e$$332, [d$$386, e$$332.firstChild], JAM.policy.p3);
    c$$510.style.cssText = "position: absolute; left: 10.7432222px; top: 10.432325px; height: 30px; width: 201px;";
    var v27909 = JAM.call(a$$642, null, [c$$510], JAM.policy.p3);
    var v26486 = JAM.call(v27909.offset, v27909, [v1742], JAM.policy.p3);
    h$$153 = JAM.call(v26486.offset, v26486, [], JAM.policy.p3);
    JAM.set(d$$386, "innerHTML", "");
    JAM.call(e$$332.removeChild, e$$332, [d$$386], JAM.policy.p3);
    var v15751 = h$$153.top + h$$153.left;
    var v19989;
    if (b$$630) {
      v19989 = 2E3;
    } else {
      v19989 = 0;
    }
    i$$201 = v15751 + v19989;
    var v10051 = i$$201 > 21;
    if (v10051) {
      v10051 = i$$201 < 22;
    }
    f$$165.fractions = v10051;
    return;
  }
  function v1741(b$$629) {
    function v1740() {
      var v3438 = a$$642.offset;
      JAM.call(v3438.setOffset, v3438, [this, b$$629], JAM.policy.p3);
      return;
    }
    function v1739(c$$509) {
      var v3439 = JAM.call(a$$642, null, [this], JAM.policy.p3);
      var v15753 = JAM.call(a$$642, null, [this], JAM.policy.p3);
      JAM.call(v3439.offset, v3439, [JAM.call(b$$629.call, b$$629, [this, c$$509, JAM.call(v15753.offset, v15753, [], JAM.policy.p3)], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    var c$$508 = this[0];
    var v3441;
    var v15754 = !c$$508;
    if (!v15754) {
      v15754 = !c$$508.ownerDocument;
    }
    if (v15754) {
      v3441 = null;
    } else {
      var v10053;
      if (b$$629) {
        var v15755;
        if (JAM.call(a$$642.isFunction, a$$642, [b$$629], JAM.policy.p3)) {
          v15755 = JAM.call(this.each, this, [v1739], JAM.policy.p3);
        } else {
          v15755 = JAM.call(this.each, this, [v1740], JAM.policy.p3);
        }
        v10053 = v15755;
      } else {
        v10053 = JAM.call(h$$147.call, h$$147, [this], JAM.policy.p3);
      }
      v3441 = v10053;
    }
    return v3441;
  }
  function v1738(b$$628, c$$507) {
    var v3442 = JAM.call(/static/.test, /static/, [JAM.call(a$$642.curCSS, a$$642, [b$$628, "position"], JAM.policy.p3)], JAM.policy.p3);
    if (v3442) {
      b$$628.style.position = "relative";
    }
    var d$$385 = JAM.call(a$$642, null, [b$$628], JAM.policy.p3);
    var e$$331 = JAM.call(d$$385.offset, d$$385, [], JAM.policy.p3);
    var v3443 = parseInt(JAM.call(a$$642.curCSS, a$$642, [b$$628, "top", !0], JAM.policy.p3), 10);
    if (!v3443) {
      v3443 = 0;
    }
    var f$$168 = v3443;
    var v3444 = parseInt(JAM.call(a$$642.curCSS, a$$642, [b$$628, "left", !0], JAM.policy.p3), 10);
    if (!v3444) {
      v3444 = 0;
    }
    var g$$185 = v3444;
    var h$$152 = {top:c$$507.top - e$$331.top + f$$168, left:c$$507.left - e$$331.left + g$$185};
    var v3447;
    if ("using" in c$$507) {
      var v10063 = c$$507.using;
      v3447 = JAM.call(v10063.call, v10063, [b$$628, h$$152], JAM.policy.p3);
    } else {
      v3447 = JAM.call(d$$385.css, d$$385, [h$$152], JAM.policy.p3);
    }
    v3447;
    return;
  }
  function v1737(b$$627, c$$506) {
    if (c$$506.at[1] === e$$327) {
      return;
    }
    var d$$384 = JAM.call(a$$642, null, [window], JAM.policy.p3);
    var f$$167 = c$$506.collisionPosition.top + c$$506.collisionHeight - JAM.call(d$$384.height, d$$384, [], JAM.policy.p3) - JAM.call(d$$384.scrollTop, d$$384, [], JAM.policy.p3);
    var v3451;
    if (c$$506.my[1] === "top") {
      v3451 = -c$$506.elemHeight;
    } else {
      var v10069;
      if (c$$506.my[1] === "bottom") {
        v10069 = c$$506.elemHeight;
      } else {
        v10069 = 0;
      }
      v3451 = v10069;
    }
    var g$$184 = v3451;
    var v3452;
    if (c$$506.at[1] === "top") {
      v3452 = c$$506.targetHeight;
    } else {
      v3452 = -c$$506.targetHeight;
    }
    var h$$151 = v3452;
    var i$$200 = -2 * c$$506.offset[1];
    var v10074 = b$$627.top;
    var v15768;
    if (c$$506.collisionPosition.top < 0) {
      v15768 = g$$184 + h$$151 + i$$200;
    } else {
      var v19998;
      if (f$$167 > 0) {
        v19998 = g$$184 + h$$151 + i$$200;
      } else {
        v19998 = 0;
      }
      v15768 = v19998;
    }
    b$$627.top = v10074 + v15768;
    return;
  }
  function v1736(b$$626, c$$505) {
    if (c$$505.at[0] === e$$327) {
      return;
    }
    var d$$383 = JAM.call(a$$642, null, [window], JAM.policy.p3);
    var f$$166 = c$$505.collisionPosition.left + c$$505.collisionWidth - JAM.call(d$$383.width, d$$383, [], JAM.policy.p3) - JAM.call(d$$383.scrollLeft, d$$383, [], JAM.policy.p3);
    var v3457;
    if (c$$505.my[0] === "left") {
      v3457 = -c$$505.elemWidth;
    } else {
      var v10080;
      if (c$$505.my[0] === "right") {
        v10080 = c$$505.elemWidth;
      } else {
        v10080 = 0;
      }
      v3457 = v10080;
    }
    var g$$183 = v3457;
    var v3458;
    if (c$$505.at[0] === "left") {
      v3458 = c$$505.targetWidth;
    } else {
      v3458 = -c$$505.targetWidth;
    }
    var h$$150 = v3458;
    var i$$199 = -2 * c$$505.offset[0];
    var v10085 = b$$626.left;
    var v15775;
    if (c$$505.collisionPosition.left < 0) {
      v15775 = g$$183 + h$$150 + i$$199;
    } else {
      var v20005;
      if (f$$166 > 0) {
        v20005 = g$$183 + h$$150 + i$$199;
      } else {
        v20005 = 0;
      }
      v15775 = v20005;
    }
    b$$626.left = v10085 + v15775;
    return;
  }
  function v1735(b$$625, c$$504) {
    var d$$382 = JAM.call(a$$642, null, [window], JAM.policy.p3);
    var e$$330 = c$$504.collisionPosition.top + c$$504.collisionHeight - JAM.call(d$$382.height, d$$382, [], JAM.policy.p3) - JAM.call(d$$382.scrollTop, d$$382, [], JAM.policy.p3);
    var v3462;
    if (e$$330 > 0) {
      v3462 = b$$625.top - e$$330;
    } else {
      v3462 = JAM.call(Math.max, Math, [b$$625.top - c$$504.collisionPosition.top, b$$625.top], JAM.policy.p3);
    }
    b$$625.top = v3462;
    return;
  }
  function v1734(b$$624, c$$503) {
    var d$$381 = JAM.call(a$$642, null, [window], JAM.policy.p3);
    var e$$329 = c$$503.collisionPosition.left + c$$503.collisionWidth - JAM.call(d$$381.width, d$$381, [], JAM.policy.p3) - JAM.call(d$$381.scrollLeft, d$$381, [], JAM.policy.p3);
    var v3465;
    if (e$$329 > 0) {
      v3465 = b$$624.left - e$$329;
    } else {
      v3465 = JAM.call(Math.max, Math, [b$$624.left - c$$503.collisionPosition.left, b$$624.left], JAM.policy.p3);
    }
    b$$624.left = v3465;
    return;
  }
  function v1733(b$$623) {
    function v1732() {
      function v1731(c$$502, e$$328) {
        var v3466 = a$$642.ui.position[j$$102[c$$502]];
        if (v3466) {
          var v10101 = a$$642.ui.position[j$$102[c$$502]];
          JAM.call(v10101[e$$328], v10101, [q$$20, {targetWidth:l$$78, targetHeight:m$$48, elemWidth:d$$380, elemHeight:g$$182, collisionPosition:r$$21, collisionWidth:o$$24, collisionHeight:p$$49, offset:k$$71, my:b$$623.my, at:b$$623.at}], JAM.policy.p3);
        }
        return;
      }
      var c$$501 = JAM.call(a$$642, null, [this], JAM.policy.p3);
      var d$$380 = JAM.call(c$$501.outerWidth, c$$501, [], JAM.policy.p3);
      var g$$182 = JAM.call(c$$501.outerHeight, c$$501, [], JAM.policy.p3);
      var v3467 = parseInt(JAM.call(a$$642.curCSS, a$$642, [this, "marginLeft", !0], JAM.policy.p3));
      if (!v3467) {
        v3467 = 0;
      }
      var h$$149 = v3467;
      var v3468 = parseInt(JAM.call(a$$642.curCSS, a$$642, [this, "marginTop", !0], JAM.policy.p3));
      if (!v3468) {
        v3468 = 0;
      }
      var i$$198 = v3468;
      var v3469 = d$$380 + h$$149;
      var v10107 = parseInt(JAM.call(a$$642.curCSS, a$$642, [this, "marginRight", !0], JAM.policy.p3));
      if (!v10107) {
        v10107 = 0;
      }
      var o$$24 = v3469 + v10107;
      var v3471 = g$$182 + i$$198;
      var v10108 = parseInt(JAM.call(a$$642.curCSS, a$$642, [this, "marginBottom", !0], JAM.policy.p3));
      if (!v10108) {
        v10108 = 0;
      }
      var p$$49 = v3471 + v10108;
      var q$$20 = JAM.call(a$$642.extend, a$$642, [{}, n$$94], JAM.policy.p3);
      var r$$21;
      var v27910;
      if (b$$623.my[0] === "right") {
        v27910 = q$$20.left = q$$20.left - d$$380;
      } else {
        var v28821 = b$$623.my[0] === e$$327;
        if (v28821) {
          v28821 = q$$20.left = q$$20.left - d$$380 / 2;
        }
        v27910 = v28821;
      }
      v27910;
      var v27911;
      if (b$$623.my[1] === "bottom") {
        v27911 = q$$20.top = q$$20.top - g$$182;
      } else {
        var v28823 = b$$623.my[1] === e$$327;
        if (v28823) {
          v28823 = q$$20.top = q$$20.top - g$$182 / 2;
        }
        v27911 = v28823;
      }
      v27911;
      var v26489 = f$$165.fractions;
      if (!v26489) {
        var v28825 = q$$20;
        var v30992 = JAM.call(Math.round, Math, [q$$20.left], JAM.policy.p3);
        v28825.left = v30992;
        var v28826 = q$$20;
        var v30993 = JAM.call(Math.round, Math, [q$$20.top], JAM.policy.p3);
        v28826.top = v30993;
      }
      r$$21 = {left:q$$20.left - h$$149, top:q$$20.top - i$$198};
      JAM.call(a$$642.each, a$$642, [["left", "top"], v1731], JAM.policy.p3);
      var v15795 = a$$642.fn.bgiframe;
      if (v15795) {
        JAM.call(c$$501.bgiframe, c$$501, [], JAM.policy.p3);
      }
      JAM.call(c$$501.offset, c$$501, [JAM.call(a$$642.extend, a$$642, [q$$20, {using:b$$623.using}], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    function v1730() {
      var v10110 = b$$623[this];
      if (!v10110) {
        v10110 = "";
      }
      var v3473 = v10110;
      var a$$643 = JAM.call(v3473.split, v3473, [" "], JAM.policy.p3);
      var v20017 = a$$643.length === 1;
      if (v20017) {
        var v24484;
        if (JAM.call(c$$500.test, c$$500, [a$$643[0]], JAM.policy.p3)) {
          v24484 = JAM.call(a$$643.concat, a$$643, [[e$$327]], JAM.policy.p3);
        } else {
          var v26493;
          if (JAM.call(d$$379.test, d$$379, [a$$643[0]], JAM.policy.p3)) {
            var v27914 = [e$$327];
            v26493 = JAM.call(v27914.concat, v27914, [a$$643], JAM.policy.p3);
          } else {
            v26493 = [e$$327, e$$327];
          }
          v24484 = v26493;
        }
        a$$643 = v24484;
      }
      var v20018;
      if (JAM.call(c$$500.test, c$$500, [a$$643[0]], JAM.policy.p3)) {
        v20018 = a$$643[0];
      } else {
        v20018 = e$$327;
      }
      a$$643[0] = v20018;
      var v15798;
      if (JAM.call(d$$379.test, d$$379, [a$$643[1]], JAM.policy.p3)) {
        v15798 = a$$643[1];
      } else {
        v15798 = e$$327;
      }
      a$$643[1] = v15798;
      JAM.set(b$$623, this, a$$643, JAM.policy.p2);
      return;
    }
    var v10111 = !b$$623;
    if (!v10111) {
      v10111 = !b$$623.of;
    }
    if (v10111) {
      return JAM.call(g$$181.apply, g$$181, [this, arguments], JAM.policy.p3);
    }
    b$$623 = JAM.call(a$$642.extend, a$$642, [{}, b$$623], JAM.policy.p3);
    var h$$148 = JAM.call(a$$642, null, [b$$623.of], JAM.policy.p3);
    var i$$197 = h$$148[0];
    var v10112 = b$$623.collision;
    if (!v10112) {
      v10112 = "flip";
    }
    var v3476 = v10112;
    var j$$102 = JAM.call(v3476.split, v3476, [" "], JAM.policy.p3);
    var v3477;
    if (b$$623.offset) {
      var v10113 = b$$623.offset;
      v3477 = JAM.call(v10113.split, v10113, [" "], JAM.policy.p3);
    } else {
      v3477 = [0, 0];
    }
    var k$$71 = v3477;
    var l$$78;
    var m$$48;
    var n$$94;
    var v30077;
    if (i$$197.nodeType === 9) {
      l$$78 = JAM.call(h$$148.width, h$$148, [], JAM.policy.p3);
      m$$48 = JAM.call(h$$148.height, h$$148, [], JAM.policy.p3);
      v30077 = n$$94 = {top:0, left:0};
    } else {
      var v30296;
      if (i$$197.setTimeout) {
        l$$78 = JAM.call(h$$148.width, h$$148, [], JAM.policy.p3);
        m$$48 = JAM.call(h$$148.height, h$$148, [], JAM.policy.p3);
        v30296 = n$$94 = {top:JAM.call(h$$148.scrollTop, h$$148, [], JAM.policy.p3), left:JAM.call(h$$148.scrollLeft, h$$148, [], JAM.policy.p3)};
      } else {
        var v30439;
        if (i$$197.preventDefault) {
          b$$623.at = "left top";
          l$$78 = m$$48 = 0;
          v30439 = n$$94 = {top:b$$623.of.pageY, left:b$$623.of.pageX};
        } else {
          l$$78 = JAM.call(h$$148.outerWidth, h$$148, [], JAM.policy.p3);
          m$$48 = JAM.call(h$$148.outerHeight, h$$148, [], JAM.policy.p3);
          v30439 = n$$94 = JAM.call(h$$148.offset, h$$148, [], JAM.policy.p3);
        }
        v30296 = v30439;
      }
      v30077 = v30296;
    }
    v30077;
    JAM.call(a$$642.each, a$$642, [["my", "at"], v1730], JAM.policy.p3);
    var v29816 = j$$102.length === 1;
    if (v29816) {
      j$$102[1] = j$$102[0];
    }
    var v29438 = k$$71;
    var v29817 = parseInt(k$$71[0], 10);
    if (!v29817) {
      v29817 = 0;
    }
    v29438[0] = v29817;
    var v28828 = k$$71.length === 1;
    if (v28828) {
      k$$71[1] = k$$71[0];
    }
    var v27916 = k$$71;
    var v28829 = parseInt(k$$71[1], 10);
    if (!v28829) {
      v28829 = 0;
    }
    v27916[1] = v28829;
    var v26496;
    if (b$$623.at[0] === "right") {
      v26496 = n$$94.left = n$$94.left + l$$78;
    } else {
      var v27917 = b$$623.at[0] === e$$327;
      if (v27917) {
        v27917 = n$$94.left = n$$94.left + l$$78 / 2;
      }
      v26496 = v27917;
    }
    v26496;
    var v24487;
    if (b$$623.at[1] === "bottom") {
      v24487 = n$$94.top = n$$94.top + m$$48;
    } else {
      var v26497 = b$$623.at[1] === e$$327;
      if (v26497) {
        v26497 = n$$94.top = n$$94.top + m$$48 / 2;
      }
      v24487 = v26497;
    }
    v24487;
    n$$94.left = n$$94.left + k$$71[0];
    n$$94.top = n$$94.top + k$$71[1];
    return JAM.call(this.each, this, [v1732], JAM.policy.p3);
  }
  var v3478 = a$$642.ui;
  if (!v3478) {
    v3478 = {};
  }
  a$$642.ui = v3478;
  var c$$500 = /left|center|right/;
  var d$$379 = /top|center|bottom/;
  var e$$327 = "center";
  var f$$165 = {};
  var g$$181 = a$$642.fn.position;
  var h$$147 = a$$642.fn.offset;
  a$$642.fn.position = v1733;
  a$$642.ui.position = {fit:{left:v1734, top:v1735}, flip:{left:v1736, top:v1737}};
  var v20022 = a$$642.offset.setOffset;
  if (!v20022) {
    a$$642.offset.setOffset = v1738;
    a$$642.fn.offset = v1741;
  }
  var v15802 = a$$642.curCSS;
  if (!v15802) {
    a$$642.curCSS = a$$642.css;
  }
  v1743();
  return;
}
function v1729(a$$628, b$$594) {
  function v1728() {
    var v3481 = a$$628.ui.dialog.overlay;
    JAM.call(v3481.destroy, v3481, [this.$el], JAM.policy.p3);
    return;
  }
  function v1727() {
    function v1726() {
      b$$621 = JAM.call(b$$621.add, b$$621, [this], JAM.policy.p3);
      return;
    }
    var b$$621 = JAM.call(a$$628, null, [[]], JAM.policy.p3);
    JAM.call(a$$628.each, a$$628, [a$$628.ui.dialog.overlay.instances, v1726], JAM.policy.p3);
    var v10118 = JAM.call(b$$621.css, b$$621, [{width:0, height:0}], JAM.policy.p3);
    var v20025 = a$$628.ui.dialog.overlay;
    var v15806 = JAM.call(v20025.width, v20025, [], JAM.policy.p3);
    var v20026 = a$$628.ui.dialog.overlay;
    JAM.call(v10118.css, v10118, [{width:v15806, height:JAM.call(v20026.height, v20026, [], JAM.policy.p3)}], JAM.policy.p3);
    return;
  }
  function v1725() {
    var b$$620;
    var c$$499;
    var v3483;
    if (a$$628.browser.msie) {
      b$$620 = JAM.call(Math.max, Math, [document.documentElement.scrollWidth, document.body.scrollWidth], JAM.policy.p3);
      c$$499 = JAM.call(Math.max, Math, [document.documentElement.offsetWidth, document.body.offsetWidth], JAM.policy.p3);
      var v15809;
      if (b$$620 < c$$499) {
        var v24501 = JAM.call(a$$628, null, [window], JAM.policy.p3);
        v15809 = JAM.call(v24501.width, v24501, [], JAM.policy.p3) + "px";
      } else {
        v15809 = b$$620 + "px";
      }
      v3483 = v15809;
    } else {
      var v15810 = JAM.call(a$$628, null, [document], JAM.policy.p3);
      v3483 = JAM.call(v15810.width, v15810, [], JAM.policy.p3) + "px";
    }
    return v3483;
  }
  function v1724() {
    var b$$619;
    var c$$498;
    var v3484;
    var v15811 = a$$628.browser.msie;
    if (v15811) {
      v15811 = a$$628.browser.version < 7;
    }
    if (v15811) {
      b$$619 = JAM.call(Math.max, Math, [document.documentElement.scrollHeight, document.body.scrollHeight], JAM.policy.p3);
      c$$498 = JAM.call(Math.max, Math, [document.documentElement.offsetHeight, document.body.offsetHeight], JAM.policy.p3);
      var v15812;
      if (b$$619 < c$$498) {
        var v24507 = JAM.call(a$$628, null, [window], JAM.policy.p3);
        v15812 = JAM.call(v24507.height, v24507, [], JAM.policy.p3) + "px";
      } else {
        v15812 = b$$619 + "px";
      }
      v3484 = v15812;
    } else {
      var v15813 = JAM.call(a$$628, null, [document], JAM.policy.p3);
      v3484 = JAM.call(v15813.height, v15813, [], JAM.policy.p3) + "px";
    }
    return v3484;
  }
  function v1723(b$$618) {
    function v1722() {
      d$$378 = JAM.call(Math.max, Math, [d$$378, JAM.call(this.css, this, ["z-index"], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    var c$$497 = JAM.call(a$$628.inArray, a$$628, [b$$618, this.instances], JAM.policy.p3);
    var v15814 = c$$497 != -1;
    if (v15814) {
      var v20041 = this.oldInstances;
      var v26505 = this.instances;
      JAM.call(v20041.push, v20041, [JAM.call(v26505.splice, v26505, [c$$497, 1], JAM.policy.p3)[0]], JAM.policy.p3);
    }
    var v15815 = this.instances.length === 0;
    if (v15815) {
      var v20044 = JAM.call(a$$628, null, [[document, window]], JAM.policy.p3);
      JAM.call(v20044.unbind, v20044, [".dialog-overlay"], JAM.policy.p3);
    }
    JAM.call(b$$618.remove, b$$618, [], JAM.policy.p3);
    var d$$378 = 0;
    JAM.call(a$$628.each, a$$628, [this.instances, v1722], JAM.policy.p3);
    this.maxZ = d$$378;
    return;
  }
  function v1721(b$$616) {
    function v1720(c$$496) {
      var v20045 = b$$616.options.closeOnEscape;
      if (v20045) {
        v20045 = !JAM.call(c$$496.isDefaultPrevented, c$$496, [], JAM.policy.p3);
      }
      var v15816 = v20045;
      if (v15816) {
        v15816 = c$$496.keyCode;
      }
      var v10125 = v15816;
      if (v10125) {
        v10125 = c$$496.keyCode === a$$628.ui.keyCode.ESCAPE;
      }
      var v3487 = v10125;
      if (v3487) {
        JAM.call(b$$616.close, b$$616, [c$$496], JAM.policy.p3);
        JAM.call(c$$496.preventDefault, c$$496, [], JAM.policy.p3);
      }
      return;
    }
    function v1719() {
      function v1718(b$$617) {
        var v15819 = JAM.call(a$$628, null, [b$$617.target], JAM.policy.p3);
        if (JAM.call(v15819.zIndex, v15819, [], JAM.policy.p3) < a$$628.ui.dialog.overlay.maxZ) {
          return!1;
        }
        return;
      }
      var v3489 = a$$628.ui.dialog.overlay.instances.length;
      if (v3489) {
        var v10129 = JAM.call(a$$628, null, [document], JAM.policy.p3);
        JAM.call(v10129.bind, v10129, [a$$628.ui.dialog.overlay.events, v1718], JAM.policy.p3);
      }
      return;
    }
    var v3490 = this.instances.length === 0;
    if (v3490) {
      JAM.call(setTimeout, null, [v1719, 1]);
      var v20051 = JAM.call(a$$628, null, [document], JAM.policy.p3);
      JAM.call(v20051.bind, v20051, ["keydown.dialog-overlay", v1720], JAM.policy.p3);
      var v15824 = JAM.call(a$$628, null, [window], JAM.policy.p3);
      JAM.call(v15824.bind, v15824, ["resize.dialog-overlay", a$$628.ui.dialog.overlay.resize], JAM.policy.p3);
    }
    var v20053 = this.oldInstances;
    var v15826 = JAM.call(v20053.pop, v20053, [], JAM.policy.p3);
    if (!v15826) {
      var v20054 = JAM.call(a$$628, null, ["<div></div>"], JAM.policy.p3);
      v15826 = JAM.call(v20054.addClass, v20054, ["ui-widget-overlay"], JAM.policy.p3);
    }
    var v10132 = v15826;
    var v3491 = JAM.call(v10132.appendTo, v10132, [document.body], JAM.policy.p3);
    var c$$495 = JAM.call(v3491.css, v3491, [{width:JAM.call(this.width, this, [], JAM.policy.p3), height:JAM.call(this.height, this, [], JAM.policy.p3)}], JAM.policy.p3);
    var v15827 = a$$628.fn.bgiframe;
    if (v15827) {
      JAM.call(c$$495.bgiframe, c$$495, [], JAM.policy.p3);
    }
    var v15828 = this.instances;
    JAM.call(v15828.push, v15828, [c$$495], JAM.policy.p3);
    return c$$495;
  }
  function v1717(a$$641) {
    return a$$641 + ".dialog-overlay";
  }
  function v1716(b$$615) {
    var v3493 = a$$628.ui.dialog.overlay;
    var v30994 = JAM.call(v3493.create, v3493, [b$$615], JAM.policy.p3);
    this.$el = v30994;
    return;
  }
  function v1715(a$$640) {
    var b$$614 = JAM.call(a$$640.attr, a$$640, ["id"], JAM.policy.p3);
    if (!b$$614) {
      this.uuid = this.uuid + 1;
      b$$614 = this.uuid;
    }
    return "ui-dialog-title-" + b$$614;
  }
  function v1714() {
    var b$$613 = this.options;
    var c$$494;
    var d$$377;
    var v3494 = this.uiDialog;
    var e$$326 = JAM.call(v3494.is, v3494, [":visible"], JAM.policy.p3);
    var v24519 = this.element;
    var v20057 = JAM.call(v24519.show, v24519, [], JAM.policy.p3);
    JAM.call(v20057.css, v20057, [{width:"auto", minHeight:0, height:0}], JAM.policy.p3);
    var v20059 = b$$613.minWidth > b$$613.width;
    if (v20059) {
      b$$613.width = b$$613.minWidth;
    }
    var v20060 = this.uiDialog;
    var v15831 = JAM.call(v20060.css, v20060, [{height:"auto", width:b$$613.width}], JAM.policy.p3);
    c$$494 = JAM.call(v15831.height, v15831, [], JAM.policy.p3);
    d$$377 = JAM.call(Math.max, Math, [0, b$$613.minHeight - c$$494], JAM.policy.p3);
    if (b$$613.height === "auto") {
      if (a$$628.support.minHeight) {
        var v3495 = this.element;
        JAM.call(v3495.css, v3495, [{minHeight:d$$377, height:"auto"}], JAM.policy.p3);
      } else {
        var v3497 = this.uiDialog;
        JAM.call(v3497.show, v3497, [], JAM.policy.p3);
        var v10140 = this.element;
        var v3498 = JAM.call(v10140.css, v10140, ["height", "auto"], JAM.policy.p3);
        var f$$164 = JAM.call(v3498.height, v3498, [], JAM.policy.p3);
        if (!e$$326) {
          var v15833 = this.uiDialog;
          JAM.call(v15833.hide, v15833, [], JAM.policy.p3);
        }
        var v10141 = this.element;
        JAM.call(v10141.height, v10141, [JAM.call(Math.max, Math, [f$$164, d$$377], JAM.policy.p3)], JAM.policy.p3);
      }
    } else {
      var v3500 = this.element;
      JAM.call(v3500.height, v3500, [JAM.call(Math.max, Math, [b$$613.height - c$$494, 0], JAM.policy.p3)], JAM.policy.p3);
    }
    var v10144 = this.uiDialog;
    var v3503 = JAM.call(v10144.is, v10144, [":data(resizable)"], JAM.policy.p3);
    if (v3503) {
      var v10145 = this.uiDialog;
      JAM.call(v10145.resizable, v10145, ["option", "minHeight", JAM.call(this._minHeight, this, [], JAM.policy.p3)], JAM.policy.p3);
    }
    return;
  }
  function v1713(b$$612, d$$376) {
    var e$$325 = this;
    var f$$163 = e$$325.uiDialog;
    switch(b$$612) {
      case "beforeclose":
        b$$612 = "beforeClose";
        break;
      case "buttons":
        JAM.call(e$$325._createButtons, e$$325, [d$$376], JAM.policy.p3);
        break;
      case "closeText":
        var v3504 = e$$325.uiDialogTitlebarCloseText;
        JAM.call(v3504.text, v3504, ["" + d$$376], JAM.policy.p3);
        break;
      case "dialogClass":
        var v3506 = JAM.call(f$$163.removeClass, f$$163, [e$$325.options.dialogClass], JAM.policy.p3);
        JAM.call(v3506.addClass, v3506, [c$$479 + d$$376], JAM.policy.p3);
        break;
      case "disabled":
        var v3508;
        if (d$$376) {
          v3508 = JAM.call(f$$163.addClass, f$$163, ["ui-dialog-disabled"], JAM.policy.p3);
        } else {
          v3508 = JAM.call(f$$163.removeClass, f$$163, ["ui-dialog-disabled"], JAM.policy.p3);
        }
        v3508;
        break;
      case "draggable":
        var g$$180 = JAM.call(f$$163.is, f$$163, [":data(draggable)"], JAM.policy.p3);
        var v15837 = g$$180;
        if (v15837) {
          v15837 = !d$$376;
        }
        var v10148 = v15837;
        if (v10148) {
          JAM.call(f$$163.draggable, f$$163, ["destroy"], JAM.policy.p3);
        }
        var v15838 = !g$$180;
        if (v15838) {
          v15838 = d$$376;
        }
        var v10149 = v15838;
        if (v10149) {
          JAM.call(e$$325._makeDraggable, e$$325, [], JAM.policy.p3);
        }
        break;
      case "position":
        JAM.call(e$$325._position, e$$325, [d$$376], JAM.policy.p3);
        break;
      case "resizable":
        var h$$146 = JAM.call(f$$163.is, f$$163, [":data(resizable)"], JAM.policy.p3);
        var v20062 = h$$146;
        if (v20062) {
          v20062 = !d$$376;
        }
        var v15839 = v20062;
        if (v15839) {
          JAM.call(f$$163.resizable, f$$163, ["destroy"], JAM.policy.p3);
        }
        var v20063 = h$$146;
        if (v20063) {
          v20063 = typeof d$$376 == "string";
        }
        var v15840 = v20063;
        if (v15840) {
          JAM.call(f$$163.resizable, f$$163, ["option", "handles", d$$376], JAM.policy.p3);
        }
        var v15841 = !h$$146;
        if (v15841) {
          v15841 = d$$376 !== !1;
        }
        var v10150 = v15841;
        if (v10150) {
          JAM.call(e$$325._makeResizable, e$$325, [d$$376], JAM.policy.p3);
        }
        break;
      case "title":
        var v3509 = JAM.call(a$$628, null, [".ui-dialog-title", e$$325.uiDialogTitlebar], JAM.policy.p3);
        JAM.call(v3509.html, v3509, ["" + (d$$376 || "&#160;")], JAM.policy.p3);
    }
    var v3511 = a$$628.Widget.prototype._setOption;
    JAM.call(v3511.apply, v3511, [e$$325, arguments], JAM.policy.p3);
    return;
  }
  function v1712(b$$610) {
    function v1711(a$$639, b$$611) {
      JAM.call(c$$493._setOption, c$$493, [a$$639, b$$611], JAM.policy.p3);
      var v15843 = a$$639 in d$$364;
      if (v15843) {
        g$$179 = !0;
      }
      var v10154 = a$$639 in e$$315;
      if (v10154) {
        JAM.set(f$$162, a$$639, b$$611, JAM.policy.p2);
      }
      return;
    }
    var c$$493 = this;
    var f$$162 = {};
    var g$$179 = !1;
    JAM.call(a$$628.each, a$$628, [b$$610, v1711], JAM.policy.p3);
    if (g$$179) {
      JAM.call(this._size, this, [], JAM.policy.p3);
    }
    var v15844 = this.uiDialog;
    var v10155 = JAM.call(v15844.is, v15844, [":data(resizable)"], JAM.policy.p3);
    if (v10155) {
      var v15845 = this.uiDialog;
      JAM.call(v15845.resizable, v15845, ["option", f$$162], JAM.policy.p3);
    }
    return;
  }
  function v1710(b$$608) {
    function v1709(a$$638, b$$609) {
      var v3512 = +c$$492[a$$638] === c$$492[a$$638];
      if (v3512) {
        JAM.set(d$$375, a$$638, c$$492[a$$638], JAM.policy.p2);
        JAM.set(c$$492, a$$638, b$$609, JAM.policy.p2);
      }
      return;
    }
    var c$$492 = [];
    var d$$375 = [0, 0];
    var e$$324;
    if (b$$608) {
      var v10158 = typeof b$$608 == "string";
      if (!v10158) {
        var v15848 = typeof b$$608 == "object";
        if (v15848) {
          v15848 = "0" in b$$608;
        }
        v10158 = v15848;
      }
      if (v10158) {
        var v20066;
        if (b$$608.split) {
          v20066 = JAM.call(b$$608.split, b$$608, [" "], JAM.policy.p3);
        } else {
          v20066 = [b$$608[0], b$$608[1]];
        }
        c$$492 = v20066;
        var v20067 = c$$492.length === 1;
        if (v20067) {
          c$$492[1] = c$$492[0];
        }
        JAM.call(a$$628.each, a$$628, [["left", "top"], v1709], JAM.policy.p3);
        b$$608 = {my:JAM.call(c$$492.join, c$$492, [" "], JAM.policy.p3), at:JAM.call(c$$492.join, c$$492, [" "], JAM.policy.p3), offset:JAM.call(d$$375.join, d$$375, [" "], JAM.policy.p3)};
      }
      b$$608 = JAM.call(a$$628.extend, a$$628, [{}, a$$628.ui.dialog.prototype.options.position, b$$608], JAM.policy.p3);
    } else {
      b$$608 = a$$628.ui.dialog.prototype.options.position;
    }
    var v20070 = this.uiDialog;
    e$$324 = JAM.call(v20070.is, v20070, [":visible"], JAM.policy.p3);
    if (!e$$324) {
      var v24529 = this.uiDialog;
      JAM.call(v24529.show, v24529, [], JAM.policy.p3);
    }
    var v20071 = this.uiDialog;
    var v15853 = JAM.call(v20071.css, v20071, [{top:0, left:0}], JAM.policy.p3);
    JAM.call(v15853.position, v15853, [JAM.call(a$$628.extend, a$$628, [{of:window}, b$$608], JAM.policy.p3)], JAM.policy.p3);
    if (!e$$324) {
      var v15855 = this.uiDialog;
      JAM.call(v15855.hide, v15855, [], JAM.policy.p3);
    }
    return;
  }
  function v1708() {
    var a$$637 = this.options;
    var v3516;
    if (a$$637.height === "auto") {
      v3516 = a$$637.minHeight;
    } else {
      v3516 = JAM.call(Math.min, Math, [a$$637.minHeight, a$$637.height], JAM.policy.p3);
    }
    return v3516;
  }
  function v1707(c$$489) {
    function v1706(b$$607, c$$491) {
      var v24531 = JAM.call(a$$628, null, [this], JAM.policy.p3);
      JAM.call(v24531.removeClass, v24531, ["ui-dialog-resizing"], JAM.policy.p3);
      var v24532 = e$$323;
      var v26507 = JAM.call(a$$628, null, [this], JAM.policy.p3);
      var v30995 = JAM.call(v26507.height, v26507, [], JAM.policy.p3);
      v24532.height = v30995;
      var v20074 = e$$323;
      var v24533 = JAM.call(a$$628, null, [this], JAM.policy.p3);
      var v30996 = JAM.call(v24533.width, v24533, [], JAM.policy.p3);
      v20074.width = v30996;
      JAM.call(d$$374._trigger, d$$374, ["resizeStop", b$$607, h$$145(c$$491)], JAM.policy.p3);
      var v10167 = a$$628.ui.dialog.overlay;
      JAM.call(v10167.resize, v10167, [], JAM.policy.p3);
      return;
    }
    function v1705(a$$636, b$$606) {
      JAM.call(d$$374._trigger, d$$374, ["resize", a$$636, h$$145(b$$606)], JAM.policy.p3);
      return;
    }
    function v1704(b$$605, c$$490) {
      var v10168 = JAM.call(a$$628, null, [this], JAM.policy.p3);
      JAM.call(v10168.addClass, v10168, ["ui-dialog-resizing"], JAM.policy.p3);
      JAM.call(d$$374._trigger, d$$374, ["resizeStart", b$$605, h$$145(c$$490)], JAM.policy.p3);
      return;
    }
    function h$$145(a$$635) {
      return{originalPosition:a$$635.originalPosition, originalSize:a$$635.originalSize, position:a$$635.position, size:a$$635.size};
    }
    var v3522;
    if (c$$489 === b$$594) {
      v3522 = this.options.resizable;
    } else {
      v3522 = c$$489;
    }
    c$$489 = v3522;
    var d$$374 = this;
    var e$$323 = d$$374.options;
    var v3523 = d$$374.uiDialog;
    var f$$161 = JAM.call(v3523.css, v3523, ["position"], JAM.policy.p3);
    var v3524;
    if (typeof c$$489 == "string") {
      v3524 = c$$489;
    } else {
      v3524 = "n,e,s,w,se,sw,ne,nw";
    }
    var g$$178 = v3524;
    var v20076 = d$$374.uiDialog;
    var v15861 = JAM.call(v20076.resizable, v20076, [{cancel:".ui-dialog-content", containment:"document", alsoResize:d$$374.element, maxWidth:e$$323.maxWidth, maxHeight:e$$323.maxHeight, minWidth:e$$323.minWidth, minHeight:JAM.call(d$$374._minHeight, d$$374, [], JAM.policy.p3), handles:g$$178, start:v1704, resize:v1705, stop:v1706}], JAM.policy.p3);
    var v10173 = JAM.call(v15861.css, v15861, ["position", f$$161], JAM.policy.p3);
    var v3525 = JAM.call(v10173.find, v10173, [".ui-resizable-se"], JAM.policy.p3);
    JAM.call(v3525.addClass, v3525, ["ui-icon ui-icon-grip-diagonal-se"], JAM.policy.p3);
    return;
  }
  function v1703() {
    function v1702(g$$177, h$$144) {
      c$$487.position = [h$$144.position.left - JAM.call(d$$372.scrollLeft, d$$372, [], JAM.policy.p3), h$$144.position.top - JAM.call(d$$372.scrollTop, d$$372, [], JAM.policy.p3)];
      var v24541 = JAM.call(a$$628, null, [this], JAM.policy.p3);
      var v20079 = JAM.call(v24541.removeClass, v24541, ["ui-dialog-dragging"], JAM.policy.p3);
      JAM.call(v20079.height, v20079, [e$$322], JAM.policy.p3);
      JAM.call(b$$604._trigger, b$$604, ["dragStop", g$$177, f$$160(h$$144)], JAM.policy.p3);
      var v10174 = a$$628.ui.dialog.overlay;
      JAM.call(v10174.resize, v10174, [], JAM.policy.p3);
      return;
    }
    function v1701(a$$634, c$$488) {
      JAM.call(b$$604._trigger, b$$604, ["drag", a$$634, f$$160(c$$488)], JAM.policy.p3);
      return;
    }
    function v1700(d$$373, g$$176) {
      var v15864;
      if (c$$487.height === "auto") {
        v15864 = "auto";
      } else {
        var v20081 = JAM.call(a$$628, null, [this], JAM.policy.p3);
        v15864 = JAM.call(v20081.height, v20081, [], JAM.policy.p3);
      }
      e$$322 = v15864;
      var v20083 = JAM.call(a$$628, null, [this], JAM.policy.p3);
      var v24543 = JAM.call(a$$628, null, [this], JAM.policy.p3);
      var v15865 = JAM.call(v20083.height, v20083, [JAM.call(v24543.height, v24543, [], JAM.policy.p3)], JAM.policy.p3);
      JAM.call(v15865.addClass, v15865, ["ui-dialog-dragging"], JAM.policy.p3);
      JAM.call(b$$604._trigger, b$$604, ["dragStart", d$$373, f$$160(g$$176)], JAM.policy.p3);
      return;
    }
    function f$$160(a$$633) {
      return{position:a$$633.position, offset:a$$633.offset};
    }
    var b$$604 = this;
    var c$$487 = b$$604.options;
    var d$$372 = JAM.call(a$$628, null, [document], JAM.policy.p3);
    var e$$322;
    var v3529 = b$$604.uiDialog;
    JAM.call(v3529.draggable, v3529, [{cancel:".ui-dialog-content, .ui-dialog-titlebar-close", handle:".ui-dialog-titlebar", containment:"document", start:v1700, drag:v1701, stop:v1702}], JAM.policy.p3);
    return;
  }
  function v1699(b$$601) {
    function v1698(b$$602, d$$371) {
      function v1697(a$$632, b$$603) {
        if (a$$632 === "click") {
          return;
        }
        var v3532;
        if (a$$632 in e$$321) {
          v3532 = JAM.call(e$$321[a$$632], e$$321, [b$$603], JAM.policy.p3);
        } else {
          v3532 = JAM.call(e$$321.attr, e$$321, [a$$632, b$$603], JAM.policy.p3);
        }
        v3532;
        return;
      }
      function v1696() {
        var v3533 = d$$371.click;
        JAM.call(v3533.apply, v3533, [c$$486.element[0], arguments], JAM.policy.p3);
        return;
      }
      var v3535;
      if (JAM.call(a$$628.isFunction, a$$628, [d$$371], JAM.policy.p3)) {
        v3535 = {click:d$$371, text:b$$602};
      } else {
        v3535 = d$$371;
      }
      d$$371 = v3535;
      var v10179 = JAM.call(a$$628, null, ['<button type="button"></button>'], JAM.policy.p3);
      var v3536 = JAM.call(v10179.click, v10179, [v1696], JAM.policy.p3);
      var e$$321 = JAM.call(v3536.appendTo, v3536, [f$$159], JAM.policy.p3);
      JAM.call(a$$628.each, a$$628, [d$$371, v1697], JAM.policy.p3);
      var v10180 = a$$628.fn.button;
      if (v10180) {
        JAM.call(e$$321.button, e$$321, [], JAM.policy.p3);
      }
      return;
    }
    function v1695() {
      return!(d$$370 = !0);
    }
    var c$$486 = this;
    var d$$370 = !1;
    var v3538 = JAM.call(a$$628, null, ["<div></div>"], JAM.policy.p3);
    var e$$320 = JAM.call(v3538.addClass, v3538, ["ui-dialog-buttonpane ui-widget-content ui-helper-clearfix"], JAM.policy.p3);
    var v10181 = JAM.call(a$$628, null, ["<div></div>"], JAM.policy.p3);
    var v3539 = JAM.call(v10181.addClass, v10181, ["ui-dialog-buttonset"], JAM.policy.p3);
    var f$$159 = JAM.call(v3539.appendTo, v3539, [e$$320], JAM.policy.p3);
    var v20085 = c$$486.uiDialog;
    var v15867 = JAM.call(v20085.find, v20085, [".ui-dialog-buttonpane"], JAM.policy.p3);
    JAM.call(v15867.remove, v15867, [], JAM.policy.p3);
    var v20086 = typeof b$$601 == "object";
    if (v20086) {
      v20086 = b$$601 !== null;
    }
    var v15868 = v20086;
    if (v15868) {
      JAM.call(a$$628.each, a$$628, [b$$601, v1695], JAM.policy.p3);
    }
    if (d$$370) {
      JAM.call(a$$628.each, a$$628, [b$$601, v1698], JAM.policy.p3);
      JAM.call(e$$320.appendTo, e$$320, [c$$486.uiDialog], JAM.policy.p3);
    }
    return;
  }
  function v1694() {
    function v1693(b$$600) {
      if (b$$600.keyCode !== a$$628.ui.keyCode.TAB) {
        return;
      }
      var c$$485 = JAM.call(a$$628, null, [":tabbable", this], JAM.policy.p3);
      var d$$369 = JAM.call(c$$485.filter, c$$485, [":first"], JAM.policy.p3);
      var e$$319 = JAM.call(c$$485.filter, c$$485, [":last"], JAM.policy.p3);
      var v10184 = b$$600.target === e$$319[0];
      if (v10184) {
        v10184 = !b$$600.shiftKey;
      }
      if (v10184) {
        JAM.call(d$$369.focus, d$$369, [1], JAM.policy.p3);
        return!1;
      }
      var v10185 = b$$600.target === d$$369[0];
      if (v10185) {
        v10185 = b$$600.shiftKey;
      }
      if (v10185) {
        JAM.call(e$$319.focus, e$$319, [1], JAM.policy.p3);
        return!1;
      }
      return;
    }
    if (this._isOpen) {
      return;
    }
    var b$$599 = this;
    var c$$484 = b$$599.options;
    var d$$368 = b$$599.uiDialog;
    var v29818 = b$$599;
    var v30082;
    if (c$$484.modal) {
      v30082 = JAM.new(a$$628.ui.dialog.overlay, [b$$599]);
    } else {
      v30082 = null;
    }
    v29818.overlay = v30082;
    JAM.call(b$$599._size, b$$599, [], JAM.policy.p3);
    JAM.call(b$$599._position, b$$599, [c$$484.position], JAM.policy.p3);
    JAM.call(d$$368.show, d$$368, [c$$484.show], JAM.policy.p3);
    JAM.call(b$$599.moveToTop, b$$599, [!0], JAM.policy.p3);
    var v26512 = c$$484.modal;
    if (v26512) {
      JAM.call(d$$368.bind, d$$368, ["keydown.ui-dialog", v1693], JAM.policy.p3);
    }
    var v29819 = b$$599.element;
    var v29447 = JAM.call(v29819.find, v29819, [":tabbable"], JAM.policy.p3);
    var v28838 = JAM.call(v29447.get, v29447, [], JAM.policy.p3);
    var v29820 = JAM.call(d$$368.find, d$$368, [".ui-dialog-buttonpane :tabbable"], JAM.policy.p3);
    var v29448 = JAM.call(v29820.get, v29820, [], JAM.policy.p3);
    var v26513 = JAM.call(a$$628, null, [JAM.call(v28838.concat, v28838, [JAM.call(v29448.concat, v29448, [JAM.call(d$$368.get, d$$368, [], JAM.policy.p3)], JAM.policy.p3)], JAM.policy.p3)], JAM.policy.p3);
    var v24545 = JAM.call(v26513.eq, v26513, [0], JAM.policy.p3);
    JAM.call(v24545.focus, v24545, [], JAM.policy.p3);
    b$$599._isOpen = !0;
    JAM.call(b$$599._trigger, b$$599, ["open"], JAM.policy.p3);
    return b$$599;
  }
  function v1692(b$$598, c$$483) {
    var d$$367 = this;
    var e$$318 = d$$367.options;
    var f$$158;
    var v3544;
    var v20089 = e$$318.modal;
    if (v20089) {
      v20089 = !b$$598;
    }
    var v15875 = v20089;
    if (!v15875) {
      var v20090 = !e$$318.stack;
      if (v20090) {
        v20090 = !e$$318.modal;
      }
      v15875 = v20090;
    }
    if (v15875) {
      v3544 = JAM.call(d$$367._trigger, d$$367, ["focus", c$$483], JAM.policy.p3);
    } else {
      var v29450 = e$$318.zIndex > a$$628.ui.dialog.maxZ;
      if (v29450) {
        a$$628.ui.dialog.maxZ = e$$318.zIndex;
      }
      var v29451 = d$$367.overlay;
      if (v29451) {
        var v30085 = a$$628.ui.dialog;
        v30085.maxZ = v30085.maxZ + 1;
        var v30086 = d$$367.overlay.$el;
        JAM.call(v30086.css, v30086, ["z-index", a$$628.ui.dialog.overlay.maxZ = a$$628.ui.dialog.maxZ], JAM.policy.p3);
      }
      var v29452 = d$$367.element;
      var v28840 = JAM.call(v29452.scrollTop, v29452, [], JAM.policy.p3);
      var v29453 = d$$367.element;
      f$$158 = {scrollTop:v28840, scrollLeft:JAM.call(v29453.scrollLeft, v29453, [], JAM.policy.p3)};
      var v27926 = a$$628.ui.dialog;
      v27926.maxZ = v27926.maxZ + 1;
      var v26514 = d$$367.uiDialog;
      JAM.call(v26514.css, v26514, ["z-index", a$$628.ui.dialog.maxZ], JAM.policy.p3);
      var v24548 = d$$367.element;
      JAM.call(v24548.attr, v24548, [f$$158], JAM.policy.p3);
      JAM.call(d$$367._trigger, d$$367, ["focus", c$$483], JAM.policy.p3);
      v3544 = d$$367;
    }
    return v3544;
  }
  function v1691() {
    return this._isOpen;
  }
  function v1690(b$$597) {
    function v1689() {
      var v3545 = this !== c$$482.uiDialog[0];
      if (v3545) {
        var v15877 = JAM.call(a$$628, null, [this], JAM.policy.p3);
        e$$317 = JAM.call(v15877.css, v15877, ["z-index"], JAM.policy.p3);
        var v15878 = isNaN(e$$317);
        if (!v15878) {
          d$$366 = JAM.call(Math.max, Math, [d$$366, e$$317], JAM.policy.p3);
        }
      }
      return;
    }
    function v1688() {
      JAM.call(c$$482._trigger, c$$482, ["close", b$$597], JAM.policy.p3);
      return;
    }
    var c$$482 = this;
    var d$$366;
    var e$$317;
    if (!1 === JAM.call(c$$482._trigger, c$$482, ["beforeClose", b$$597], JAM.policy.p3)) {
      return;
    }
    var v27928 = c$$482.overlay;
    if (v27928) {
      var v28844 = c$$482.overlay;
      JAM.call(v28844.destroy, v28844, [], JAM.policy.p3);
    }
    var v27929 = c$$482.uiDialog;
    JAM.call(v27929.unbind, v27929, ["keypress.ui-dialog"], JAM.policy.p3);
    c$$482._isOpen = !1;
    var v24549;
    if (c$$482.options.hide) {
      var v26516 = c$$482.uiDialog;
      v24549 = JAM.call(v26516.hide, v26516, [c$$482.options.hide, v1688], JAM.policy.p3);
    } else {
      var v27932 = c$$482.uiDialog;
      JAM.call(v27932.hide, v27932, [], JAM.policy.p3);
      v24549 = JAM.call(c$$482._trigger, c$$482, ["close", b$$597], JAM.policy.p3);
    }
    v24549;
    var v20093 = a$$628.ui.dialog.overlay;
    JAM.call(v20093.resize, v20093, [], JAM.policy.p3);
    var v15879 = c$$482.options.modal;
    if (v15879) {
      d$$366 = 0;
      var v26520 = JAM.call(a$$628, null, [".ui-dialog"], JAM.policy.p3);
      JAM.call(v26520.each, v26520, [v1689], JAM.policy.p3);
      a$$628.ui.dialog.maxZ = d$$366;
    }
    return c$$482;
  }
  function v1687() {
    return this.uiDialog;
  }
  function v1686() {
    var a$$631 = this;
    var v26522 = a$$631.overlay;
    if (v26522) {
      var v27933 = a$$631.overlay;
      JAM.call(v27933.destroy, v27933, [], JAM.policy.p3);
    }
    var v26523 = a$$631.uiDialog;
    JAM.call(v26523.hide, v26523, [], JAM.policy.p3);
    var v29455 = a$$631.element;
    var v28845 = JAM.call(v29455.unbind, v29455, [".dialog"], JAM.policy.p3);
    var v27934 = JAM.call(v28845.removeData, v28845, ["dialog"], JAM.policy.p3);
    var v26524 = JAM.call(v27934.removeClass, v27934, ["ui-dialog-content ui-widget-content"], JAM.policy.p3);
    var v24552 = JAM.call(v26524.hide, v26524, [], JAM.policy.p3);
    JAM.call(v24552.appendTo, v24552, ["body"], JAM.policy.p3);
    var v20095 = a$$631.uiDialog;
    JAM.call(v20095.remove, v20095, [], JAM.policy.p3);
    var v15880 = a$$631.originalTitle;
    if (v15880) {
      var v20096 = a$$631.element;
      JAM.call(v20096.attr, v20096, ["title", a$$631.originalTitle], JAM.policy.p3);
    }
    return a$$631;
  }
  function v1685() {
    var v3547 = this.options.autoOpen;
    if (v3547) {
      JAM.call(this.open, this, [], JAM.policy.p3);
    }
    return;
  }
  function v1684() {
    function v1683(a$$630) {
      JAM.call(b$$596.close, b$$596, [a$$630], JAM.policy.p3);
      return!1;
    }
    function v1682() {
      JAM.call(j$$101.removeClass, j$$101, ["ui-state-focus"], JAM.policy.p3);
      return;
    }
    function v1681() {
      JAM.call(j$$101.addClass, j$$101, ["ui-state-focus"], JAM.policy.p3);
      return;
    }
    function v1680() {
      JAM.call(j$$101.removeClass, j$$101, ["ui-state-hover"], JAM.policy.p3);
      return;
    }
    function v1679() {
      JAM.call(j$$101.addClass, j$$101, ["ui-state-hover"], JAM.policy.p3);
      return;
    }
    function v1678(a$$629) {
      JAM.call(b$$596.moveToTop, b$$596, [!1, a$$629], JAM.policy.p3);
      return;
    }
    function v1677(c$$481) {
      var v20098 = d$$365.closeOnEscape;
      if (v20098) {
        v20098 = !JAM.call(c$$481.isDefaultPrevented, c$$481, [], JAM.policy.p3);
      }
      var v15881 = v20098;
      if (v15881) {
        v15881 = c$$481.keyCode;
      }
      var v10191 = v15881;
      if (v10191) {
        v10191 = c$$481.keyCode === a$$628.ui.keyCode.ESCAPE;
      }
      var v3549 = v10191;
      if (v3549) {
        JAM.call(b$$596.close, b$$596, [c$$481], JAM.policy.p3);
        JAM.call(c$$481.preventDefault, c$$481, [], JAM.policy.p3);
      }
      return;
    }
    var v15884 = this.element;
    var v30997 = JAM.call(v15884.attr, v15884, ["title"], JAM.policy.p3);
    this.originalTitle = v30997;
    var v15885 = typeof this.originalTitle != "string";
    if (v15885) {
      this.originalTitle = "";
    }
    var v10192 = this.options;
    var v15886 = this.options.title;
    if (!v15886) {
      v15886 = this.originalTitle;
    }
    v10192.title = v15886;
    var b$$596 = this;
    var d$$365 = b$$596.options;
    var v3550 = d$$365.title;
    if (!v3550) {
      v3550 = "&#160;";
    }
    var e$$316 = v3550;
    var v3551 = a$$628.ui.dialog;
    var f$$157 = JAM.call(v3551.getTitleId, v3551, [b$$596.element], JAM.policy.p3);
    var v29824 = b$$596;
    var v30998 = JAM.call(a$$628, null, ["<div></div>"], JAM.policy.p3);
    var v29456 = v29824.uiDialog = v30998;
    var v28846 = JAM.call(v29456.appendTo, v29456, [document.body], JAM.policy.p3);
    var v27935 = JAM.call(v28846.hide, v28846, [], JAM.policy.p3);
    var v26525 = JAM.call(v27935.addClass, v27935, [c$$479 + d$$365.dialogClass], JAM.policy.p3);
    var v24556 = JAM.call(v26525.css, v26525, [{zIndex:d$$365.zIndex}], JAM.policy.p3);
    var v20103 = JAM.call(v24556.attr, v24556, ["tabIndex", -1], JAM.policy.p3);
    var v15887 = JAM.call(v20103.css, v20103, ["outline", 0], JAM.policy.p3);
    var v10195 = JAM.call(v15887.keydown, v15887, [v1677], JAM.policy.p3);
    var v3553 = JAM.call(v10195.attr, v10195, [{role:"dialog", "aria-labelledby":f$$157}], JAM.policy.p3);
    var g$$175 = JAM.call(v3553.mousedown, v3553, [v1678], JAM.policy.p3);
    var v20104 = b$$596.element;
    var v15888 = JAM.call(v20104.show, v20104, [], JAM.policy.p3);
    var v10197 = JAM.call(v15888.removeAttr, v15888, ["title"], JAM.policy.p3);
    var v3554 = JAM.call(v10197.addClass, v10197, ["ui-dialog-content ui-widget-content"], JAM.policy.p3);
    var h$$143 = JAM.call(v3554.appendTo, v3554, [g$$175], JAM.policy.p3);
    var v15889 = b$$596;
    var v30999 = JAM.call(a$$628, null, ["<div></div>"], JAM.policy.p3);
    var v10198 = v15889.uiDialogTitlebar = v30999;
    var v3555 = JAM.call(v10198.addClass, v10198, ["ui-dialog-titlebar ui-widget-header ui-corner-all ui-helper-clearfix"], JAM.policy.p3);
    var i$$196 = JAM.call(v3555.prependTo, v3555, [g$$175], JAM.policy.p3);
    var v27938 = JAM.call(a$$628, null, ['<a href="#"></a>'], JAM.policy.p3);
    var v26527 = JAM.call(v27938.addClass, v27938, ["ui-dialog-titlebar-close ui-corner-all"], JAM.policy.p3);
    var v24557 = JAM.call(v26527.attr, v26527, ["role", "button"], JAM.policy.p3);
    var v20105 = JAM.call(v24557.hover, v24557, [v1679, v1680], JAM.policy.p3);
    var v15890 = JAM.call(v20105.focus, v20105, [v1681], JAM.policy.p3);
    var v10199 = JAM.call(v15890.blur, v15890, [v1682], JAM.policy.p3);
    var v3556 = JAM.call(v10199.click, v10199, [v1683], JAM.policy.p3);
    var j$$101 = JAM.call(v3556.appendTo, v3556, [i$$196], JAM.policy.p3);
    var v20106 = b$$596;
    var v31000 = JAM.call(a$$628, null, ["<span></span>"], JAM.policy.p3);
    var v15891 = v20106.uiDialogTitlebarCloseText = v31000;
    var v10200 = JAM.call(v15891.addClass, v15891, ["ui-icon ui-icon-closethick"], JAM.policy.p3);
    var v3557 = JAM.call(v10200.text, v10200, [d$$365.closeText], JAM.policy.p3);
    var k$$70 = JAM.call(v3557.appendTo, v3557, [j$$101], JAM.policy.p3);
    var v20107 = JAM.call(a$$628, null, ["<span></span>"], JAM.policy.p3);
    var v15892 = JAM.call(v20107.addClass, v20107, ["ui-dialog-title"], JAM.policy.p3);
    var v10202 = JAM.call(v15892.attr, v15892, ["id", f$$157], JAM.policy.p3);
    var v3558 = JAM.call(v10202.html, v10202, [e$$316], JAM.policy.p3);
    var l$$77 = JAM.call(v3558.prependTo, v3558, [i$$196], JAM.policy.p3);
    var v28848 = JAM.call(a$$628.isFunction, a$$628, [d$$365.beforeclose], JAM.policy.p3);
    if (v28848) {
      v28848 = !JAM.call(a$$628.isFunction, a$$628, [d$$365.beforeClose], JAM.policy.p3);
    }
    var v27939 = v28848;
    if (v27939) {
      d$$365.beforeClose = d$$365.beforeclose;
    }
    var v28849 = JAM.call(i$$196.find, i$$196, ["*"], JAM.policy.p3);
    var v27940 = JAM.call(v28849.add, v28849, [i$$196], JAM.policy.p3);
    JAM.call(v27940.disableSelection, v27940, [], JAM.policy.p3);
    var v27941 = d$$365.draggable;
    if (v27941) {
      v27941 = a$$628.fn.draggable;
    }
    var v26528 = v27941;
    if (v26528) {
      JAM.call(b$$596._makeDraggable, b$$596, [], JAM.policy.p3);
    }
    var v26529 = d$$365.resizable;
    if (v26529) {
      v26529 = a$$628.fn.resizable;
    }
    var v24558 = v26529;
    if (v24558) {
      JAM.call(b$$596._makeResizable, b$$596, [], JAM.policy.p3);
    }
    JAM.call(b$$596._createButtons, b$$596, [d$$365.buttons], JAM.policy.p3);
    b$$596._isOpen = !1;
    var v10203 = a$$628.fn.bgiframe;
    if (v10203) {
      JAM.call(g$$175.bgiframe, g$$175, [], JAM.policy.p3);
    }
    return;
  }
  function v1676(b$$595) {
    var v15894 = JAM.call(a$$628, null, [this], JAM.policy.p3);
    var v10204 = JAM.call(v15894.css, v15894, [b$$595], JAM.policy.p3);
    var c$$480 = JAM.call(v10204.offset, v10204, [], JAM.policy.p3).top;
    var v3560 = c$$480 < 0;
    if (v3560) {
      var v10205 = JAM.call(a$$628, null, [this], JAM.policy.p3);
      JAM.call(v10205.css, v10205, ["top", b$$595.top - c$$480], JAM.policy.p3);
    }
    return;
  }
  var c$$479 = "ui-dialog ui-widget ui-widget-content ui-corner-all ";
  var d$$364 = {buttons:!0, height:!0, maxHeight:!0, maxWidth:!0, minHeight:!0, minWidth:!0, width:!0};
  var e$$315 = {maxHeight:!0, maxWidth:!0, minHeight:!0, minWidth:!0};
  JAM.call(a$$628.widget, a$$628, ["ui.dialog", {options:{autoOpen:!0, buttons:{}, closeOnEscape:!0, closeText:"close", dialogClass:"", draggable:!0, hide:null, height:"auto", maxHeight:!1, maxWidth:!1, minHeight:150, minWidth:150, modal:!1, position:{my:"center", at:"center", collision:"fit", using:v1676}, resizable:!0, show:null, stack:!0, title:"", width:300, zIndex:1E3}, _create:v1684, _init:v1685, destroy:v1686, widget:v1687, close:v1690, isOpen:v1691, moveToTop:v1692, open:v1694, _createButtons:v1699, 
  _makeDraggable:v1703, _makeResizable:v1707, _minHeight:v1708, _position:v1710, _setOptions:v1712, _setOption:v1713, _size:v1714}], JAM.policy.p3);
  JAM.call(a$$628.extend, a$$628, [a$$628.ui.dialog, {version:"1.8.24", uuid:0, maxZ:0, getTitleId:v1715, overlay:v1716}], JAM.policy.p3);
  var v15896 = a$$628.ui.dialog.overlay;
  var v24562 = JAM.call(a$$628.map, a$$628, [JAM.call("focus,mousedown,mouseup,keydown,keypress,click".split, "focus,mousedown,mouseup,keydown,keypress,click", [","], JAM.policy.p3), v1717], JAM.policy.p3);
  JAM.call(a$$628.extend, a$$628, [v15896, {instances:[], oldInstances:[], maxZ:0, events:JAM.call(v24562.join, v24562, [" "], JAM.policy.p3), create:v1721, destroy:v1723, height:v1724, width:v1725, resize:v1727}], JAM.policy.p3);
  JAM.call(a$$628.extend, a$$628, [a$$628.ui.dialog.overlay.prototype, {destroy:v1728}], JAM.policy.p3);
  return;
}
function v1675($$$3, undefined$$1) {
  function v1674(a$$627) {
    function v1673() {
      var v3572;
      if (typeof a$$627 == "string") {
        var v10209 = $$$3.datepicker["_" + a$$627 + "Datepicker"];
        var v10210 = $$$3.datepicker;
        var v15902 = [this];
        v3572 = JAM.call(v10209.apply, v10209, [v10210, JAM.call(v15902.concat, v15902, [b$$593], JAM.policy.p3)], JAM.policy.p3);
      } else {
        var v10212 = $$$3.datepicker;
        v3572 = JAM.call(v10212._attachDatepicker, v10212, [this, a$$627], JAM.policy.p3);
      }
      v3572;
      return;
    }
    if (!this.length) {
      return this;
    }
    var v3574 = $$$3.datepicker.initialized;
    if (!v3574) {
      var v24564 = JAM.call($$$3, null, [document], JAM.policy.p3);
      var v20116 = JAM.call(v24564.mousedown, v24564, [$$$3.datepicker._checkExternalClick], JAM.policy.p3);
      var v15903 = JAM.call(v20116.find, v20116, ["body"], JAM.policy.p3);
      JAM.call(v15903.append, v15903, [$$$3.datepicker.dpDiv], JAM.policy.p3);
      $$$3.datepicker.initialized = !0;
    }
    var v3575 = Array.prototype.slice;
    var b$$593 = JAM.call(v3575.call, v3575, [arguments, 1], JAM.policy.p3);
    var v3576;
    var v15906 = typeof a$$627 != "string";
    if (!v15906) {
      var v24566 = a$$627 != "isDisabled";
      if (v24566) {
        v24566 = a$$627 != "getDate";
      }
      var v20119 = v24566;
      if (v20119) {
        v20119 = a$$627 != "widget";
      }
      v15906 = v20119;
    }
    if (v15906) {
      var v10218;
      var v24567 = a$$627 == "option";
      if (v24567) {
        v24567 = arguments.length == 2;
      }
      var v20121 = v24567;
      if (v20121) {
        v20121 = typeof arguments[1] == "string";
      }
      if (v20121) {
        var v15907 = $$$3.datepicker["_" + a$$627 + "Datepicker"];
        var v15908 = $$$3.datepicker;
        var v20124 = [this[0]];
        v10218 = JAM.call(v15907.apply, v15907, [v15908, JAM.call(v20124.concat, v20124, [b$$593], JAM.policy.p3)], JAM.policy.p3);
      } else {
        v10218 = JAM.call(this.each, this, [v1673], JAM.policy.p3);
      }
      v3576 = v10218;
    } else {
      var v10219 = $$$3.datepicker["_" + a$$627 + "Datepicker"];
      var v10220 = $$$3.datepicker;
      var v15913 = [this[0]];
      v3576 = JAM.call(v10219.apply, v10219, [v10220, JAM.call(v15913.concat, v15913, [b$$593], JAM.policy.p3)], JAM.policy.p3);
    }
    return v3576;
  }
  function v1672(a$$626, b$$592, c$$478, d$$363) {
    if (!b$$592) {
      a$$626.currentDay = a$$626.selectedDay;
      a$$626.currentMonth = a$$626.selectedMonth;
      a$$626.currentYear = a$$626.selectedYear;
    }
    var v3577;
    if (b$$592) {
      var v10224;
      if (typeof b$$592 == "object") {
        v10224 = b$$592;
      } else {
        v10224 = JAM.call(this._daylightSavingAdjust, this, [new Date(d$$363, c$$478, b$$592)], JAM.policy.p3);
      }
      v3577 = v10224;
    } else {
      v3577 = JAM.call(this._daylightSavingAdjust, this, [new Date(a$$626.currentYear, a$$626.currentMonth, a$$626.currentDay)], JAM.policy.p3);
    }
    var e$$314 = v3577;
    return JAM.call(this.formatDate, this, [JAM.call(this._get, this, [a$$626, "dateFormat"], JAM.policy.p3), e$$314, JAM.call(this._getFormatConfig, this, [a$$626], JAM.policy.p3)], JAM.policy.p3);
  }
  function v1671(a$$625) {
    var b$$591 = JAM.call(this._get, this, [a$$625, "shortYearCutoff"], JAM.policy.p3);
    var v10226;
    if (typeof b$$591 != "string") {
      v10226 = b$$591;
    } else {
      var v24571 = new Date;
      v10226 = JAM.call(v24571.getFullYear, v24571, [], JAM.policy.p3) % 100 + parseInt(b$$591, 10);
    }
    b$$591 = v10226;
    return{shortYearCutoff:b$$591, dayNamesShort:JAM.call(this._get, this, [a$$625, "dayNamesShort"], JAM.policy.p3), dayNames:JAM.call(this._get, this, [a$$625, "dayNames"], JAM.policy.p3), monthNamesShort:JAM.call(this._get, this, [a$$625, "monthNamesShort"], JAM.policy.p3), monthNames:JAM.call(this._get, this, [a$$625, "monthNames"], JAM.policy.p3)};
  }
  function v1670(a$$624, b$$590) {
    var c$$477 = JAM.call(this._getMinMaxDate, this, [a$$624, "min"], JAM.policy.p3);
    var d$$362 = JAM.call(this._getMinMaxDate, this, [a$$624, "max"], JAM.policy.p3);
    var v10231 = !c$$477;
    if (!v10231) {
      v10231 = JAM.call(b$$590.getTime, b$$590, [], JAM.policy.p3) >= JAM.call(c$$477.getTime, c$$477, [], JAM.policy.p3);
    }
    var v3580 = v10231;
    if (v3580) {
      var v10232 = !d$$362;
      if (!v10232) {
        v10232 = JAM.call(b$$590.getTime, b$$590, [], JAM.policy.p3) <= JAM.call(d$$362.getTime, d$$362, [], JAM.policy.p3);
      }
      v3580 = v10232;
    }
    return v3580;
  }
  function v1669(a$$623, b$$589, c$$476, d$$361) {
    var e$$313 = JAM.call(this._getNumberOfMonths, this, [a$$623], JAM.policy.p3);
    var v20130;
    if (b$$589 < 0) {
      v20130 = b$$589;
    } else {
      v20130 = e$$313[0] * e$$313[1];
    }
    var f$$156 = JAM.call(this._daylightSavingAdjust, this, [new Date(c$$476, d$$361 + v20130, 1)], JAM.policy.p3);
    var v10234 = b$$589 < 0;
    if (v10234) {
      JAM.call(f$$156.setDate, f$$156, [JAM.call(this._getDaysInMonth, this, [JAM.call(f$$156.getFullYear, f$$156, [], JAM.policy.p3), JAM.call(f$$156.getMonth, f$$156, [], JAM.policy.p3)], JAM.policy.p3)], JAM.policy.p3);
    }
    return JAM.call(this._isInRange, this, [a$$623, f$$156], JAM.policy.p3);
  }
  function v1668(a$$622, b$$588) {
    var v3582 = new Date(a$$622, b$$588, 1);
    return JAM.call(v3582.getDay, v3582, [], JAM.policy.p3);
  }
  function v1667(a$$621, b$$587) {
    var v10235 = JAM.call(this._daylightSavingAdjust, this, [new Date(a$$621, b$$587, 32)], JAM.policy.p3);
    return 32 - JAM.call(v10235.getDate, v10235, [], JAM.policy.p3);
  }
  function v1666(a$$620, b$$586) {
    return JAM.call(this._determineDate, this, [a$$620, JAM.call(this._get, this, [a$$620, b$$586 + "Date"], JAM.policy.p3), null], JAM.policy.p3);
  }
  function v1665(a$$619) {
    var b$$585 = JAM.call(this._get, this, [a$$619, "numberOfMonths"], JAM.policy.p3);
    var v3585;
    if (b$$585 == null) {
      v3585 = [1, 1];
    } else {
      var v10237;
      if (typeof b$$585 == "number") {
        v10237 = [1, b$$585];
      } else {
        v10237 = b$$585;
      }
      v3585 = v10237;
    }
    return v3585;
  }
  function v1664(a$$618) {
    var b$$584 = JAM.call(this._get, this, [a$$618, "onChangeMonthYear"], JAM.policy.p3);
    if (b$$584) {
      var v15932;
      if (a$$618.input) {
        v15932 = a$$618.input[0];
      } else {
        v15932 = null;
      }
      JAM.call(b$$584.apply, b$$584, [v15932, [a$$618.selectedYear, a$$618.selectedMonth + 1, a$$618]], JAM.policy.p3);
    }
    return;
  }
  function v1663(a$$617, b$$583) {
    var c$$475 = JAM.call(this._getMinMaxDate, this, [a$$617, "min"], JAM.policy.p3);
    var d$$360 = JAM.call(this._getMinMaxDate, this, [a$$617, "max"], JAM.policy.p3);
    var v3586;
    var v15935 = c$$475;
    if (v15935) {
      v15935 = b$$583 < c$$475;
    }
    if (v15935) {
      v3586 = c$$475;
    } else {
      v3586 = b$$583;
    }
    var e$$312 = v3586;
    var v10242;
    var v20137 = d$$360;
    if (v20137) {
      v20137 = e$$312 > d$$360;
    }
    if (v20137) {
      v10242 = d$$360;
    } else {
      v10242 = e$$312;
    }
    e$$312 = v10242;
    return e$$312;
  }
  function v1662(a$$616, b$$582, c$$474) {
    var v3587 = a$$616.drawYear;
    var v10243;
    if (c$$474 == "Y") {
      v10243 = b$$582;
    } else {
      v10243 = 0;
    }
    var d$$359 = v3587 + v10243;
    var v3589 = a$$616.drawMonth;
    var v10244;
    if (c$$474 == "M") {
      v10244 = b$$582;
    } else {
      v10244 = 0;
    }
    var e$$311 = v3589 + v10244;
    var v3591 = JAM.call(Math.min, Math, [a$$616.selectedDay, JAM.call(this._getDaysInMonth, this, [d$$359, e$$311], JAM.policy.p3)], JAM.policy.p3);
    var v10247;
    if (c$$474 == "D") {
      v10247 = b$$582;
    } else {
      v10247 = 0;
    }
    var f$$155 = v3591 + v10247;
    var g$$174 = JAM.call(this._restrictMinMax, this, [a$$616, JAM.call(this._daylightSavingAdjust, this, [new Date(d$$359, e$$311, f$$155)], JAM.policy.p3)], JAM.policy.p3);
    var v31001 = JAM.call(g$$174.getDate, g$$174, [], JAM.policy.p3);
    a$$616.selectedDay = v31001;
    var v31002 = JAM.call(g$$174.getMonth, g$$174, [], JAM.policy.p3);
    a$$616.drawMonth = a$$616.selectedMonth = v31002;
    var v31003 = JAM.call(g$$174.getFullYear, g$$174, [], JAM.policy.p3);
    a$$616.drawYear = a$$616.selectedYear = v31003;
    var v15940 = c$$474 == "M";
    if (!v15940) {
      v15940 = c$$474 == "Y";
    }
    var v10249 = v15940;
    if (v10249) {
      JAM.call(this._notifyChange, this, [a$$616], JAM.policy.p3);
    }
    return;
  }
  function v1661(a$$614, b$$580, c$$473, d$$358, e$$310, f$$154, g$$173, h$$142) {
    function v1660(a$$615) {
      var v3594;
      if (JAM.call(a$$615.match, a$$615, [/c[+-].*/], JAM.policy.p3)) {
        v3594 = c$$473 + parseInt(JAM.call(a$$615.substring, a$$615, [1], JAM.policy.p3), 10);
      } else {
        var v10252;
        if (JAM.call(a$$615.match, a$$615, [/[+-].*/], JAM.policy.p3)) {
          v10252 = r$$20 + parseInt(a$$615, 10);
        } else {
          v10252 = parseInt(a$$615, 10);
        }
        v3594 = v10252;
      }
      var b$$581 = v3594;
      var v3595;
      if (isNaN(b$$581)) {
        v3595 = r$$20;
      } else {
        v3595 = b$$581;
      }
      return v3595;
    }
    var i$$195 = JAM.call(this._get, this, [a$$614, "changeMonth"], JAM.policy.p3);
    var j$$100 = JAM.call(this._get, this, [a$$614, "changeYear"], JAM.policy.p3);
    var k$$69 = JAM.call(this._get, this, [a$$614, "showMonthAfterYear"], JAM.policy.p3);
    var l$$76 = '<div class="ui-datepicker-title">';
    var m$$47 = "";
    var v10255 = f$$154;
    if (!v10255) {
      v10255 = !i$$195;
    }
    if (v10255) {
      m$$47 = m$$47 + ('<span class="ui-datepicker-month">' + g$$173[b$$580] + "</span>");
    } else {
      var v3596 = d$$358;
      if (v3596) {
        v3596 = JAM.call(d$$358.getFullYear, d$$358, [], JAM.policy.p3) == c$$473;
      }
      var n$$93 = v3596;
      var v3597 = e$$310;
      if (v3597) {
        v3597 = JAM.call(e$$310.getFullYear, e$$310, [], JAM.policy.p3) == c$$473;
      }
      var o$$23 = v3597;
      m$$47 = m$$47 + '<select class="ui-datepicker-month" data-handler="selectMonth" data-event="change">';
      var p$$48 = 0;
      var v3599 = p$$48 < 12;
      for (;v3599;) {
        var v15947 = !n$$93;
        if (!v15947) {
          v15947 = p$$48 >= JAM.call(d$$358.getMonth, d$$358, [], JAM.policy.p3);
        }
        var v10259 = v15947;
        if (v10259) {
          var v15948 = !o$$23;
          if (!v15948) {
            v15948 = p$$48 <= JAM.call(e$$310.getMonth, e$$310, [], JAM.policy.p3);
          }
          v10259 = v15948;
        }
        var v3598 = v10259;
        if (v3598) {
          var v27943 = '<option value="' + p$$48 + '"';
          var v28852;
          if (p$$48 == b$$580) {
            v28852 = ' selected="selected"';
          } else {
            v28852 = "";
          }
          m$$47 = m$$47 + (v27943 + v28852 + ">" + h$$142[p$$48] + "</option>");
        }
        p$$48++;
        v3599 = p$$48 < 12;
      }
      m$$47 = m$$47 + "</select>";
    }
    if (!k$$69) {
      var v24577;
      var v28853 = f$$154;
      if (!v28853) {
        v28853 = !i$$195;
      }
      var v27945 = v28853;
      if (!v27945) {
        v27945 = !j$$100;
      }
      if (v27945) {
        v24577 = "&#xa0;";
      } else {
        v24577 = "";
      }
      l$$76 = l$$76 + (m$$47 + v24577);
    }
    if (!a$$614.yearshtml) {
      a$$614.yearshtml = "";
      var v10262 = f$$154;
      if (!v10262) {
        v10262 = !j$$100;
      }
      if (v10262) {
        l$$76 = l$$76 + ('<span class="ui-datepicker-year">' + c$$473 + "</span>");
      } else {
        var v3601 = JAM.call(this._get, this, [a$$614, "yearRange"], JAM.policy.p3);
        var q$$19 = JAM.call(v3601.split, v3601, [":"], JAM.policy.p3);
        var v3602 = new Date;
        var r$$20 = JAM.call(v3602.getFullYear, v3602, [], JAM.policy.p3);
        var s$$29 = v1660;
        var t$$14 = JAM.call(s$$29, null, [q$$19[0]], JAM.policy.p3);
        var v15953 = q$$19[1];
        if (!v15953) {
          v15953 = "";
        }
        var u$$12 = JAM.call(Math.max, Math, [t$$14, JAM.call(s$$29, null, [v15953], JAM.policy.p3)], JAM.policy.p3);
        var v15954;
        if (d$$358) {
          v15954 = JAM.call(Math.max, Math, [t$$14, JAM.call(d$$358.getFullYear, d$$358, [], JAM.policy.p3)], JAM.policy.p3);
        } else {
          v15954 = t$$14;
        }
        t$$14 = v15954;
        var v15955;
        if (e$$310) {
          v15955 = JAM.call(Math.min, Math, [u$$12, JAM.call(e$$310.getFullYear, e$$310, [], JAM.policy.p3)], JAM.policy.p3);
        } else {
          v15955 = u$$12;
        }
        u$$12 = v15955;
        a$$614.yearshtml = a$$614.yearshtml + '<select class="ui-datepicker-year" data-handler="selectYear" data-event="change">';
        var v3605 = t$$14 <= u$$12;
        for (;v3605;) {
          var v10265 = a$$614.yearshtml;
          var v26545 = '<option value="' + t$$14 + '"';
          var v27947;
          if (t$$14 == c$$473) {
            v27947 = ' selected="selected"';
          } else {
            v27947 = "";
          }
          a$$614.yearshtml = v10265 + (v26545 + v27947 + ">" + t$$14 + "</option>");
          t$$14++;
          v3605 = t$$14 <= u$$12;
        }
        a$$614.yearshtml = a$$614.yearshtml + "</select>";
        l$$76 = l$$76 + a$$614.yearshtml;
        a$$614.yearshtml = null;
      }
    }
    l$$76 = l$$76 + JAM.call(this._get, this, [a$$614, "yearSuffix"], JAM.policy.p3);
    if (k$$69) {
      var v28856;
      var v30088 = f$$154;
      if (!v30088) {
        v30088 = !i$$195;
      }
      var v29826 = v30088;
      if (!v29826) {
        v29826 = !j$$100;
      }
      if (v29826) {
        v28856 = "&#xa0;";
      } else {
        v28856 = "";
      }
      l$$76 = l$$76 + (v28856 + m$$47);
    }
    l$$76 = l$$76 + "</div>";
    return l$$76;
  }
  function v1659(a$$613) {
    var b$$579 = new Date;
    b$$579 = JAM.call(this._daylightSavingAdjust, this, [new Date(JAM.call(b$$579.getFullYear, b$$579, [], JAM.policy.p3), JAM.call(b$$579.getMonth, b$$579, [], JAM.policy.p3), JAM.call(b$$579.getDate, b$$579, [], JAM.policy.p3))], JAM.policy.p3);
    var c$$472 = JAM.call(this._get, this, [a$$613, "isRTL"], JAM.policy.p3);
    var d$$357 = JAM.call(this._get, this, [a$$613, "showButtonPanel"], JAM.policy.p3);
    var e$$309 = JAM.call(this._get, this, [a$$613, "hideIfNoPrevNext"], JAM.policy.p3);
    var f$$153 = JAM.call(this._get, this, [a$$613, "navigationAsDateFormat"], JAM.policy.p3);
    var g$$172 = JAM.call(this._getNumberOfMonths, this, [a$$613], JAM.policy.p3);
    var h$$141 = JAM.call(this._get, this, [a$$613, "showCurrentAtPos"], JAM.policy.p3);
    var i$$194 = JAM.call(this._get, this, [a$$613, "stepMonths"], JAM.policy.p3);
    var v3609 = g$$172[0] != 1;
    if (!v3609) {
      v3609 = g$$172[1] != 1;
    }
    var j$$99 = v3609;
    var v10273;
    if (a$$613.currentDay) {
      v10273 = new Date(a$$613.currentYear, a$$613.currentMonth, a$$613.currentDay);
    } else {
      v10273 = new Date(9999, 9, 9);
    }
    var k$$68 = JAM.call(this._daylightSavingAdjust, this, [v10273], JAM.policy.p3);
    var l$$75 = JAM.call(this._getMinMaxDate, this, [a$$613, "min"], JAM.policy.p3);
    var m$$46 = JAM.call(this._getMinMaxDate, this, [a$$613, "max"], JAM.policy.p3);
    var n$$92 = a$$613.drawMonth - h$$141;
    var o$$22 = a$$613.drawYear;
    var v3612 = n$$92 < 0;
    if (v3612) {
      n$$92 = n$$92 + 12;
      o$$22--;
    }
    if (m$$46) {
      var p$$47 = JAM.call(this._daylightSavingAdjust, this, [new Date(JAM.call(m$$46.getFullYear, m$$46, [], JAM.policy.p3), JAM.call(m$$46.getMonth, m$$46, [], JAM.policy.p3) - g$$172[0] * g$$172[1] + 1, JAM.call(m$$46.getDate, m$$46, [], JAM.policy.p3))], JAM.policy.p3);
      var v3614;
      var v15963 = l$$75;
      if (v15963) {
        v15963 = p$$47 < l$$75;
      }
      if (v15963) {
        v3614 = l$$75;
      } else {
        v3614 = p$$47;
      }
      p$$47 = v3614;
      var v3615 = JAM.call(this._daylightSavingAdjust, this, [new Date(o$$22, n$$92, 1)], JAM.policy.p3) > p$$47;
      for (;v3615;) {
        n$$92--;
        var v10279 = n$$92 < 0;
        if (v10279) {
          n$$92 = 11;
          o$$22--;
        }
        v3615 = JAM.call(this._daylightSavingAdjust, this, [new Date(o$$22, n$$92, 1)], JAM.policy.p3) > p$$47;
      }
    }
    a$$613.drawMonth = n$$92;
    a$$613.drawYear = o$$22;
    var q$$18 = JAM.call(this._get, this, [a$$613, "prevText"], JAM.policy.p3);
    var v3616;
    if (f$$153) {
      v3616 = JAM.call(this.formatDate, this, [q$$18, JAM.call(this._daylightSavingAdjust, this, [new Date(o$$22, n$$92 - i$$194, 1)], JAM.policy.p3), JAM.call(this._getFormatConfig, this, [a$$613], JAM.policy.p3)], JAM.policy.p3);
    } else {
      v3616 = q$$18;
    }
    q$$18 = v3616;
    var v3617;
    if (JAM.call(this._canAdjustMonth, this, [a$$613, -1, o$$22, n$$92], JAM.policy.p3)) {
      var v24583 = '<a class="ui-datepicker-prev ui-corner-all" data-handler="prev" data-event="click" title="' + q$$18 + '"><span class="ui-icon ui-icon-circle-triangle-';
      var v26549;
      if (c$$472) {
        v26549 = "e";
      } else {
        v26549 = "w";
      }
      v3617 = v24583 + v26549 + '">' + q$$18 + "</span></a>";
    } else {
      var v10284;
      if (e$$309) {
        v10284 = "";
      } else {
        var v26550 = '<a class="ui-datepicker-prev ui-corner-all ui-state-disabled" title="' + q$$18 + '"><span class="ui-icon ui-icon-circle-triangle-';
        var v27950;
        if (c$$472) {
          v27950 = "e";
        } else {
          v27950 = "w";
        }
        v10284 = v26550 + v27950 + '">' + q$$18 + "</span></a>";
      }
      v3617 = v10284;
    }
    var r$$19 = v3617;
    var s$$28 = JAM.call(this._get, this, [a$$613, "nextText"], JAM.policy.p3);
    var v3618;
    if (f$$153) {
      v3618 = JAM.call(this.formatDate, this, [s$$28, JAM.call(this._daylightSavingAdjust, this, [new Date(o$$22, n$$92 + i$$194, 1)], JAM.policy.p3), JAM.call(this._getFormatConfig, this, [a$$613], JAM.policy.p3)], JAM.policy.p3);
    } else {
      v3618 = s$$28;
    }
    s$$28 = v3618;
    var v3619;
    if (JAM.call(this._canAdjustMonth, this, [a$$613, 1, o$$22, n$$92], JAM.policy.p3)) {
      var v24586 = '<a class="ui-datepicker-next ui-corner-all" data-handler="next" data-event="click" title="' + s$$28 + '"><span class="ui-icon ui-icon-circle-triangle-';
      var v26553;
      if (c$$472) {
        v26553 = "w";
      } else {
        v26553 = "e";
      }
      v3619 = v24586 + v26553 + '">' + s$$28 + "</span></a>";
    } else {
      var v10289;
      if (e$$309) {
        v10289 = "";
      } else {
        var v26554 = '<a class="ui-datepicker-next ui-corner-all ui-state-disabled" title="' + s$$28 + '"><span class="ui-icon ui-icon-circle-triangle-';
        var v27952;
        if (c$$472) {
          v27952 = "w";
        } else {
          v27952 = "e";
        }
        v10289 = v26554 + v27952 + '">' + s$$28 + "</span></a>";
      }
      v3619 = v10289;
    }
    var t$$13 = v3619;
    var u$$11 = JAM.call(this._get, this, [a$$613, "currentText"], JAM.policy.p3);
    var v3620;
    var v15972 = JAM.call(this._get, this, [a$$613, "gotoCurrent"], JAM.policy.p3);
    if (v15972) {
      v15972 = a$$613.currentDay;
    }
    if (v15972) {
      v3620 = k$$68;
    } else {
      v3620 = b$$579;
    }
    var v$$10 = v3620;
    var v3621;
    if (f$$153) {
      v3621 = JAM.call(this.formatDate, this, [u$$11, v$$10, JAM.call(this._getFormatConfig, this, [a$$613], JAM.policy.p3)], JAM.policy.p3);
    } else {
      v3621 = u$$11;
    }
    u$$11 = v3621;
    var v3622;
    if (a$$613.inline) {
      v3622 = "";
    } else {
      v3622 = '<button type="button" class="ui-datepicker-close ui-state-default ui-priority-primary ui-corner-all" data-handler="hide" data-event="click">' + JAM.call(this._get, this, [a$$613, "closeText"], JAM.policy.p3) + "</button>";
    }
    var w$$17 = v3622;
    var v3623;
    if (d$$357) {
      var v26556;
      if (c$$472) {
        v26556 = w$$17;
      } else {
        v26556 = "";
      }
      var v20162 = '<div class="ui-datepicker-buttonpane ui-widget-content">' + v26556;
      var v24590;
      if (JAM.call(this._isInRange, this, [a$$613, v$$10], JAM.policy.p3)) {
        v24590 = '<button type="button" class="ui-datepicker-current ui-state-default ui-priority-secondary ui-corner-all" data-handler="today" data-event="click">' + u$$11 + "</button>";
      } else {
        v24590 = "";
      }
      var v15974 = v20162 + v24590;
      var v20164;
      if (c$$472) {
        v20164 = "";
      } else {
        v20164 = w$$17;
      }
      v3623 = v15974 + v20164 + "</div>";
    } else {
      v3623 = "";
    }
    var x$$73 = v3623;
    var y$$54 = parseInt(JAM.call(this._get, this, [a$$613, "firstDay"], JAM.policy.p3), 10);
    var v3625;
    if (isNaN(y$$54)) {
      v3625 = 0;
    } else {
      v3625 = y$$54;
    }
    y$$54 = v3625;
    var z$$6 = JAM.call(this._get, this, [a$$613, "showWeek"], JAM.policy.p3);
    var A$$3 = JAM.call(this._get, this, [a$$613, "dayNames"], JAM.policy.p3);
    var B$$2 = JAM.call(this._get, this, [a$$613, "dayNamesShort"], JAM.policy.p3);
    var C$$2 = JAM.call(this._get, this, [a$$613, "dayNamesMin"], JAM.policy.p3);
    var D$$2 = JAM.call(this._get, this, [a$$613, "monthNames"], JAM.policy.p3);
    var E$$2 = JAM.call(this._get, this, [a$$613, "monthNamesShort"], JAM.policy.p3);
    var F$$2 = JAM.call(this._get, this, [a$$613, "beforeShowDay"], JAM.policy.p3);
    var G$$2 = JAM.call(this._get, this, [a$$613, "showOtherMonths"], JAM.policy.p3);
    var H$$2 = JAM.call(this._get, this, [a$$613, "selectOtherMonths"], JAM.policy.p3);
    var v3626 = JAM.call(this._get, this, [a$$613, "calculateWeek"], JAM.policy.p3);
    if (!v3626) {
      v3626 = this.iso8601Week;
    }
    var I$$2 = v3626;
    var J$$2 = JAM.call(this._getDefaultDate, this, [a$$613], JAM.policy.p3);
    var K$$1 = "";
    var L$$1 = 0;
    var v3644 = L$$1 < g$$172[0];
    for (;v3644;) {
      var M$$1 = "";
      this.maxRows = 4;
      var N$$1 = 0;
      var v3643 = N$$1 < g$$172[1];
      for (;v3643;) {
        var O$$1 = JAM.call(this._daylightSavingAdjust, this, [new Date(o$$22, n$$92, a$$613.selectedDay)], JAM.policy.p3);
        var P$$1 = " ui-corner-all";
        var Q$$1 = "";
        if (j$$99) {
          Q$$1 = Q$$1 + '<div class="ui-datepicker-group';
          if (g$$172[1] > 1) {
            switch(N$$1) {
              case 0:
                Q$$1 = Q$$1 + " ui-datepicker-group-first";
                var v15976;
                if (c$$472) {
                  v15976 = "right";
                } else {
                  v15976 = "left";
                }
                P$$1 = " ui-corner-" + v15976;
                break;
              case g$$172[1] - 1:
                Q$$1 = Q$$1 + " ui-datepicker-group-last";
                var v15977;
                if (c$$472) {
                  v15977 = "left";
                } else {
                  v15977 = "right";
                }
                P$$1 = " ui-corner-" + v15977;
                break;
              default:
                Q$$1 = Q$$1 + " ui-datepicker-group-middle";
                P$$1 = "";
            }
          }
          Q$$1 = Q$$1 + '">';
        }
        var v27953 = '<div class="ui-datepicker-header ui-widget-header ui-helper-clearfix' + P$$1 + '">';
        var v28858;
        var v29827 = JAM.call(/all|left/.test, /all|left/, [P$$1], JAM.policy.p3);
        if (v29827) {
          v29827 = L$$1 == 0;
        }
        if (v29827) {
          var v29463;
          if (c$$472) {
            v29463 = t$$13;
          } else {
            v29463 = r$$19;
          }
          v28858 = v29463;
        } else {
          v28858 = "";
        }
        var v26559 = v27953 + v28858;
        var v27955;
        var v29465 = JAM.call(/all|right/.test, /all|right/, [P$$1], JAM.policy.p3);
        if (v29465) {
          v29465 = L$$1 == 0;
        }
        if (v29465) {
          var v28859;
          if (c$$472) {
            v28859 = r$$19;
          } else {
            v28859 = t$$13;
          }
          v27955 = v28859;
        } else {
          v27955 = "";
        }
        var v24591 = v26559 + v27955;
        var v27956 = L$$1 > 0;
        if (!v27956) {
          v27956 = N$$1 > 0;
        }
        Q$$1 = Q$$1 + (v24591 + JAM.call(this._generateMonthYearHeader, this, [a$$613, n$$92, o$$22, l$$75, m$$46, v27956, D$$2, E$$2], JAM.policy.p3) + '</div><table class="ui-datepicker-calendar"><thead>' + "<tr>");
        var v3629;
        if (z$$6) {
          v3629 = '<th class="ui-datepicker-week-col">' + JAM.call(this._get, this, [a$$613, "weekHeader"], JAM.policy.p3) + "</th>";
        } else {
          v3629 = "";
        }
        var R$$1 = v3629;
        var S$$1 = 0;
        var v3631 = S$$1 < 7;
        for (;v3631;) {
          var T$$3 = (S$$1 + y$$54) % 7;
          var v29828;
          if ((S$$1 + y$$54 + 6) % 7 >= 5) {
            v29828 = ' class="ui-datepicker-week-end"';
          } else {
            v29828 = "";
          }
          R$$1 = R$$1 + ("<th" + v29828 + ">" + '<span title="' + A$$3[T$$3] + '">' + C$$2[T$$3] + "</span></th>");
          S$$1++;
          v3631 = S$$1 < 7;
        }
        Q$$1 = Q$$1 + (R$$1 + "</tr></thead><tbody>");
        var U$$1 = JAM.call(this._getDaysInMonth, this, [o$$22, n$$92], JAM.policy.p3);
        var v10308 = o$$22 == a$$613.selectedYear;
        if (v10308) {
          v10308 = n$$92 == a$$613.selectedMonth;
        }
        var v3632 = v10308;
        if (v3632) {
          var v31004 = JAM.call(Math.min, Math, [a$$613.selectedDay, U$$1], JAM.policy.p3);
          a$$613.selectedDay = v31004;
        }
        var V$$1 = (JAM.call(this._getFirstDayOfMonth, this, [o$$22, n$$92], JAM.policy.p3) - y$$54 + 7) % 7;
        var W$$1 = JAM.call(Math.ceil, Math, [(V$$1 + U$$1) / 7], JAM.policy.p3);
        var v3635;
        if (j$$99) {
          var v10312;
          if (this.maxRows > W$$1) {
            v10312 = this.maxRows;
          } else {
            v10312 = W$$1;
          }
          v3635 = v10312;
        } else {
          v3635 = W$$1;
        }
        var X$$1 = v3635;
        this.maxRows = X$$1;
        var Y$$1 = JAM.call(this._daylightSavingAdjust, this, [new Date(o$$22, n$$92, 1 - V$$1)], JAM.policy.p3);
        var Z$$1 = 0;
        var v3642 = Z$$1 < X$$1;
        for (;v3642;) {
          Q$$1 = Q$$1 + "<tr>";
          var v3637;
          if (z$$6) {
            v3637 = '<td class="ui-datepicker-week-col">' + JAM.call(JAM.call(this._get, this, [a$$613, "calculateWeek"], JAM.policy.p3), null, [Y$$1], JAM.policy.p3) + "</td>";
          } else {
            v3637 = "";
          }
          var _$$2 = v3637;
          S$$1 = 0;
          var v3641 = S$$1 < 7;
          for (;v3641;) {
            var v3638;
            if (F$$2) {
              var v15986;
              if (a$$613.input) {
                v15986 = a$$613.input[0];
              } else {
                v15986 = null;
              }
              v3638 = JAM.call(F$$2.apply, F$$2, [v15986, [Y$$1]], JAM.policy.p3);
            } else {
              v3638 = [!0, ""];
            }
            var ba$$1 = v3638;
            var bb$$1 = JAM.call(Y$$1.getMonth, Y$$1, [], JAM.policy.p3) != n$$92;
            var v20172 = bb$$1;
            if (v20172) {
              v20172 = !H$$2;
            }
            var v15987 = v20172;
            if (!v15987) {
              v15987 = !ba$$1[0];
            }
            var v10318 = v15987;
            if (!v10318) {
              var v15988 = l$$75;
              if (v15988) {
                v15988 = Y$$1 < l$$75;
              }
              v10318 = v15988;
            }
            var v3640 = v10318;
            if (!v3640) {
              var v10319 = m$$46;
              if (v10319) {
                v10319 = Y$$1 > m$$46;
              }
              v3640 = v10319;
            }
            var bc$$1 = v3640;
            var v30719;
            if ((S$$1 + y$$54 + 6) % 7 >= 5) {
              v30719 = " ui-datepicker-week-end";
            } else {
              v30719 = "";
            }
            var v30582 = '<td class="' + v30719;
            var v30664;
            if (bb$$1) {
              v30664 = " ui-datepicker-other-month";
            } else {
              v30664 = "";
            }
            var v30446 = v30582 + v30664;
            var v30584;
            var v30794 = JAM.call(Y$$1.getTime, Y$$1, [], JAM.policy.p3) == JAM.call(O$$1.getTime, O$$1, [], JAM.policy.p3);
            if (v30794) {
              v30794 = n$$92 == a$$613.selectedMonth;
            }
            var v30762 = v30794;
            if (v30762) {
              v30762 = a$$613._keyEvent;
            }
            var v30720 = v30762;
            if (!v30720) {
              var v30763 = JAM.call(J$$2.getTime, J$$2, [], JAM.policy.p3) == JAM.call(Y$$1.getTime, Y$$1, [], JAM.policy.p3);
              if (v30763) {
                v30763 = JAM.call(J$$2.getTime, J$$2, [], JAM.policy.p3) == JAM.call(O$$1.getTime, O$$1, [], JAM.policy.p3);
              }
              v30720 = v30763;
            }
            if (v30720) {
              v30584 = " " + this._dayOverClass;
            } else {
              v30584 = "";
            }
            var v30306 = v30446 + v30584;
            var v30448;
            if (bc$$1) {
              v30448 = " " + this._unselectableClass + " ui-state-disabled";
            } else {
              v30448 = "";
            }
            var v30091 = v30306 + v30448;
            var v30308;
            var v30586 = bb$$1;
            if (v30586) {
              v30586 = !G$$2;
            }
            if (v30586) {
              v30308 = "";
            } else {
              var v30587 = " " + ba$$1[1];
              var v30669;
              if (JAM.call(Y$$1.getTime, Y$$1, [], JAM.policy.p3) == JAM.call(k$$68.getTime, k$$68, [], JAM.policy.p3)) {
                v30669 = " " + this._currentClass;
              } else {
                v30669 = "";
              }
              var v30449 = v30587 + v30669;
              var v30589;
              if (JAM.call(Y$$1.getTime, Y$$1, [], JAM.policy.p3) == JAM.call(b$$579.getTime, b$$579, [], JAM.policy.p3)) {
                v30589 = " ui-datepicker-today";
              } else {
                v30589 = "";
              }
              v30308 = v30449 + v30589;
            }
            var v29467 = v30091 + v30308 + '"';
            var v29830;
            var v30452 = !bb$$1;
            if (!v30452) {
              v30452 = G$$2;
            }
            var v30309 = v30452;
            if (v30309) {
              v30309 = ba$$1[2];
            }
            if (v30309) {
              v29830 = ' title="' + ba$$1[2] + '"';
            } else {
              v29830 = "";
            }
            var v28863 = v29467 + v29830;
            var v29469;
            if (bc$$1) {
              v29469 = "";
            } else {
              v29469 = ' data-handler="selectDay" data-event="click" data-month="' + JAM.call(Y$$1.getMonth, Y$$1, [], JAM.policy.p3) + '" data-year="' + JAM.call(Y$$1.getFullYear, Y$$1, [], JAM.policy.p3) + '"';
            }
            var v26564 = v28863 + v29469 + ">";
            var v27959;
            var v29470 = bb$$1;
            if (v29470) {
              v29470 = !G$$2;
            }
            if (v29470) {
              v27959 = "&#xa0;";
            } else {
              var v28865;
              if (bc$$1) {
                v28865 = '<span class="ui-state-default">' + JAM.call(Y$$1.getDate, Y$$1, [], JAM.policy.p3) + "</span>";
              } else {
                var v30671;
                if (JAM.call(Y$$1.getTime, Y$$1, [], JAM.policy.p3) == JAM.call(b$$579.getTime, b$$579, [], JAM.policy.p3)) {
                  v30671 = " ui-state-highlight";
                } else {
                  v30671 = "";
                }
                var v30454 = '<a class="ui-state-default' + v30671;
                var v30592;
                if (JAM.call(Y$$1.getTime, Y$$1, [], JAM.policy.p3) == JAM.call(k$$68.getTime, k$$68, [], JAM.policy.p3)) {
                  v30592 = " ui-state-active";
                } else {
                  v30592 = "";
                }
                var v30312 = v30454 + v30592;
                var v30456;
                if (bb$$1) {
                  v30456 = " ui-priority-secondary";
                } else {
                  v30456 = "";
                }
                v28865 = v30312 + v30456 + '" href="#">' + JAM.call(Y$$1.getDate, Y$$1, [], JAM.policy.p3) + "</a>";
              }
              v27959 = v28865;
            }
            _$$2 = _$$2 + (v26564 + v27959 + "</td>");
            JAM.call(Y$$1.setDate, Y$$1, [JAM.call(Y$$1.getDate, Y$$1, [], JAM.policy.p3) + 1], JAM.policy.p3);
            Y$$1 = JAM.call(this._daylightSavingAdjust, this, [Y$$1], JAM.policy.p3);
            S$$1++;
            v3641 = S$$1 < 7;
          }
          Q$$1 = Q$$1 + (_$$2 + "</tr>");
          Z$$1++;
          v3642 = Z$$1 < X$$1;
        }
        n$$92++;
        var v20177 = n$$92 > 11;
        if (v20177) {
          n$$92 = 0;
          o$$22++;
        }
        var v26566;
        if (j$$99) {
          var v28867;
          var v29835 = g$$172[0] > 0;
          if (v29835) {
            v29835 = N$$1 == g$$172[1] - 1;
          }
          if (v29835) {
            v28867 = '<div class="ui-datepicker-row-break"></div>';
          } else {
            v28867 = "";
          }
          v26566 = "</div>" + v28867;
        } else {
          v26566 = "";
        }
        Q$$1 = Q$$1 + ("</tbody></table>" + v26566);
        M$$1 = M$$1 + Q$$1;
        N$$1++;
        v3643 = N$$1 < g$$172[1];
      }
      K$$1 = K$$1 + M$$1;
      L$$1++;
      v3644 = L$$1 < g$$172[0];
    }
    var v26567;
    var v29474 = $$$3.browser.msie;
    if (v29474) {
      v29474 = parseInt($$$3.browser.version, 10) < 7;
    }
    var v28868 = v29474;
    if (v28868) {
      v28868 = !a$$613.inline;
    }
    if (v28868) {
      v26567 = '<iframe src="javascript:false;" class="ui-datepicker-cover" frameborder="0"></iframe>';
    } else {
      v26567 = "";
    }
    K$$1 = K$$1 + (x$$73 + v26567);
    a$$613._keyEvent = !1;
    return K$$1;
  }
  function v1658(a$$611) {
    function v1657() {
      function v1656() {
        var v10324 = window["DP_jQuery_" + dpuuid].datepicker;
        JAM.call(v10324._selectMonthYear, v10324, [c$$471, this, "Y"], JAM.policy.p3);
        return!1;
      }
      function v1655() {
        var v10325 = window["DP_jQuery_" + dpuuid].datepicker;
        JAM.call(v10325._selectMonthYear, v10325, [c$$471, this, "M"], JAM.policy.p3);
        return!1;
      }
      function v1654() {
        var v10326 = window["DP_jQuery_" + dpuuid].datepicker;
        JAM.call(v10326._selectDay, v10326, [c$$471, +JAM.call(this.getAttribute, this, ["data-month"], JAM.policy.p3), +JAM.call(this.getAttribute, this, ["data-year"], JAM.policy.p3), this], JAM.policy.p3);
        return!1;
      }
      function v1653() {
        var v3645 = window["DP_jQuery_" + dpuuid].datepicker;
        JAM.call(v3645._gotoToday, v3645, [c$$471], JAM.policy.p3);
        return;
      }
      function v1652() {
        var v3646 = window["DP_jQuery_" + dpuuid].datepicker;
        JAM.call(v3646._hideDatepicker, v3646, [], JAM.policy.p3);
        return;
      }
      function v1651() {
        var v3647 = window["DP_jQuery_" + dpuuid].datepicker;
        JAM.call(v3647._adjustDate, v3647, [c$$471, +b$$578, "M"], JAM.policy.p3);
        return;
      }
      function v1650() {
        var v3649 = window["DP_jQuery_" + dpuuid].datepicker;
        JAM.call(v3649._adjustDate, v3649, [c$$471, -b$$578, "M"], JAM.policy.p3);
        return;
      }
      var a$$612 = {prev:v1650, next:v1651, hide:v1652, today:v1653, selectDay:v1654, selectMonth:v1655, selectYear:v1656};
      var v3651 = JAM.call($$$3, null, [this], JAM.policy.p3);
      JAM.call(v3651.bind, v3651, [JAM.call(this.getAttribute, this, ["data-event"], JAM.policy.p3), a$$612[JAM.call(this.getAttribute, this, ["data-handler"], JAM.policy.p3)]], JAM.policy.p3);
      return;
    }
    var b$$578 = JAM.call(this._get, this, [a$$611, "stepMonths"], JAM.policy.p3);
    var v10335 = a$$611.id;
    var c$$471 = "#" + JAM.call(v10335.replace, v10335, [/\\\\/g, "\\"], JAM.policy.p3);
    var v10336 = a$$611.dpDiv;
    var v3655 = JAM.call(v10336.find, v10336, ["[data-handler]"], JAM.policy.p3);
    JAM.call(v3655.map, v3655, [v1657], JAM.policy.p3);
    return;
  }
  function v1649(a$$610) {
    var v3656;
    var v16000 = !a$$610.currentYear;
    if (!v16000) {
      var v20184 = a$$610.input;
      if (v20184) {
        var v26568 = a$$610.input;
        v20184 = JAM.call(v26568.val, v26568, [], JAM.policy.p3) == "";
      }
      v16000 = v20184;
    }
    if (v16000) {
      v3656 = null;
    } else {
      v3656 = JAM.call(this._daylightSavingAdjust, this, [new Date(a$$610.currentYear, a$$610.currentMonth, a$$610.currentDay)], JAM.policy.p3);
    }
    var b$$577 = v3656;
    return b$$577;
  }
  function v1648(a$$609, b$$576, c$$470) {
    var d$$356 = !b$$576;
    var e$$308 = a$$609.selectedMonth;
    var f$$152 = a$$609.selectedYear;
    var g$$171 = JAM.call(this._restrictMinMax, this, [a$$609, JAM.call(this._determineDate, this, [a$$609, b$$576, new Date], JAM.policy.p3)], JAM.policy.p3);
    var v31005 = JAM.call(g$$171.getDate, g$$171, [], JAM.policy.p3);
    a$$609.selectedDay = a$$609.currentDay = v31005;
    var v31006 = JAM.call(g$$171.getMonth, g$$171, [], JAM.policy.p3);
    a$$609.drawMonth = a$$609.selectedMonth = a$$609.currentMonth = v31006;
    var v31007 = JAM.call(g$$171.getFullYear, g$$171, [], JAM.policy.p3);
    a$$609.drawYear = a$$609.selectedYear = a$$609.currentYear = v31007;
    var v26569 = e$$308 != a$$609.selectedMonth;
    if (!v26569) {
      v26569 = f$$152 != a$$609.selectedYear;
    }
    var v24598 = v26569;
    if (v24598) {
      v24598 = !c$$470;
    }
    var v20186 = v24598;
    if (v20186) {
      JAM.call(this._notifyChange, this, [a$$609], JAM.policy.p3);
    }
    JAM.call(this._adjustInstDate, this, [a$$609], JAM.policy.p3);
    var v10340 = a$$609.input;
    if (v10340) {
      var v16004 = a$$609.input;
      var v20187;
      if (d$$356) {
        v20187 = "";
      } else {
        v20187 = JAM.call(this._formatDate, this, [a$$609], JAM.policy.p3);
      }
      JAM.call(v16004.val, v16004, [v20187], JAM.policy.p3);
    }
    return;
  }
  function v1647(a$$608) {
    var v3658;
    if (a$$608) {
      var v20188;
      if (JAM.call(a$$608.getHours, a$$608, [], JAM.policy.p3) > 12) {
        v20188 = JAM.call(a$$608.getHours, a$$608, [], JAM.policy.p3) + 2;
      } else {
        v20188 = 0;
      }
      JAM.call(a$$608.setHours, a$$608, [v20188], JAM.policy.p3);
      v3658 = a$$608;
    } else {
      v3658 = null;
    }
    return v3658;
  }
  function v1646(a$$606, b$$573, c$$468) {
    function e$$306(b$$575) {
      try {
        var v3659 = $$$3.datepicker;
        var v10341 = $$$3.datepicker;
        var v3660 = JAM.call(v10341._get, v10341, [a$$606, "dateFormat"], JAM.policy.p3);
        var v10342 = $$$3.datepicker;
        return JAM.call(v3659.parseDate, v3659, [v3660, b$$575, JAM.call(v10342._getFormatConfig, v10342, [a$$606], JAM.policy.p3)], JAM.policy.p3);
      } catch (c$$469) {
      }
      var v10343;
      var v20189 = JAM.call(b$$575.toLowerCase, b$$575, [], JAM.policy.p3);
      if (JAM.call(v20189.match, v20189, [/^c/], JAM.policy.p3)) {
        var v16007 = $$$3.datepicker;
        v10343 = JAM.call(v16007._getDate, v16007, [a$$606], JAM.policy.p3);
      } else {
        v10343 = null;
      }
      var v3662 = v10343;
      if (!v3662) {
        v3662 = new Date;
      }
      var d$$355 = v3662;
      var e$$307 = JAM.call(d$$355.getFullYear, d$$355, [], JAM.policy.p3);
      var f$$151 = JAM.call(d$$355.getMonth, d$$355, [], JAM.policy.p3);
      var g$$170 = JAM.call(d$$355.getDate, d$$355, [], JAM.policy.p3);
      var h$$140 = /([+-]?[0-9]+)\s*(d|D|w|W|m|M|y|Y)?/g;
      var i$$193 = JAM.call(h$$140.exec, h$$140, [b$$575], JAM.policy.p3);
      for (;i$$193;) {
        var v10345 = i$$193[2];
        if (!v10345) {
          v10345 = "d";
        }
        switch(v10345) {
          case "d":
          ;
          case "D":
            g$$170 = g$$170 + parseInt(i$$193[1], 10);
            break;
          case "w":
          ;
          case "W":
            g$$170 = g$$170 + parseInt(i$$193[1], 10) * 7;
            break;
          case "m":
          ;
          case "M":
            f$$151 = f$$151 + parseInt(i$$193[1], 10);
            var v16013 = $$$3.datepicker;
            g$$170 = JAM.call(Math.min, Math, [g$$170, JAM.call(v16013._getDaysInMonth, v16013, [e$$307, f$$151], JAM.policy.p3)], JAM.policy.p3);
            break;
          case "y":
          ;
          case "Y":
            e$$307 = e$$307 + parseInt(i$$193[1], 10);
            var v16015 = $$$3.datepicker;
            g$$170 = JAM.call(Math.min, Math, [g$$170, JAM.call(v16015._getDaysInMonth, v16015, [e$$307, f$$151], JAM.policy.p3)], JAM.policy.p3);
        }
        i$$193 = JAM.call(h$$140.exec, h$$140, [b$$575], JAM.policy.p3);
      }
      return new Date(e$$307, f$$151, g$$170);
    }
    function d$$354(a$$607) {
      var b$$574 = new Date;
      JAM.call(b$$574.setDate, b$$574, [JAM.call(b$$574.getDate, b$$574, [], JAM.policy.p3) + a$$607], JAM.policy.p3);
      return b$$574;
    }
    var v3664;
    var v16017 = b$$573 == null;
    if (!v16017) {
      v16017 = b$$573 === "";
    }
    if (v16017) {
      v3664 = c$$468;
    } else {
      var v10351;
      if (typeof b$$573 == "string") {
        v10351 = e$$306(b$$573);
      } else {
        var v16018;
        if (typeof b$$573 == "number") {
          var v20195;
          if (isNaN(b$$573)) {
            v20195 = c$$468;
          } else {
            v20195 = d$$354(b$$573);
          }
          v16018 = v20195;
        } else {
          v16018 = new Date(JAM.call(b$$573.getTime, b$$573, [], JAM.policy.p3));
        }
        v10351 = v16018;
      }
      v3664 = v10351;
    }
    var f$$150 = v3664;
    var v16020;
    var v24603 = f$$150;
    if (v24603) {
      v24603 = JAM.call(f$$150.toString, f$$150, [], JAM.policy.p3) == "Invalid Date";
    }
    if (v24603) {
      v16020 = c$$468;
    } else {
      v16020 = f$$150;
    }
    f$$150 = v16020;
    if (f$$150) {
      JAM.call(f$$150.setHours, f$$150, [0], JAM.policy.p3);
      JAM.call(f$$150.setMinutes, f$$150, [0], JAM.policy.p3);
      JAM.call(f$$150.setSeconds, f$$150, [0], JAM.policy.p3);
      JAM.call(f$$150.setMilliseconds, f$$150, [0], JAM.policy.p3);
    }
    return JAM.call(this._daylightSavingAdjust, this, [f$$150], JAM.policy.p3);
  }
  function v1645(a$$605) {
    return JAM.call(this._restrictMinMax, this, [a$$605, JAM.call(this._determineDate, this, [a$$605, JAM.call(this._get, this, [a$$605, "defaultDate"], JAM.policy.p3), new Date], JAM.policy.p3)], JAM.policy.p3);
  }
  function v1644(a$$604, b$$572) {
    var v16021 = a$$604.input;
    if (JAM.call(v16021.val, v16021, [], JAM.policy.p3) == a$$604.lastVal) {
      return;
    }
    var c$$467 = JAM.call(this._get, this, [a$$604, "dateFormat"], JAM.policy.p3);
    var v3667;
    if (a$$604.input) {
      var v10357 = a$$604.input;
      v3667 = JAM.call(v10357.val, v10357, [], JAM.policy.p3);
    } else {
      v3667 = null;
    }
    var d$$353 = a$$604.lastVal = v3667;
    var e$$305;
    var f$$149;
    e$$305 = f$$149 = JAM.call(this._getDefaultDate, this, [a$$604], JAM.policy.p3);
    var g$$169 = JAM.call(this._getFormatConfig, this, [a$$604], JAM.policy.p3);
    try {
      var v3668 = JAM.call(this.parseDate, this, [c$$467, d$$353, g$$169], JAM.policy.p3);
      if (!v3668) {
        v3668 = f$$149;
      }
      e$$305 = v3668;
    } catch (h$$139) {
      JAM.call(this.log, this, [h$$139], JAM.policy.p3);
      var v10360;
      if (b$$572) {
        v10360 = "";
      } else {
        v10360 = d$$353;
      }
      d$$353 = v10360;
    }
    var v31008 = JAM.call(e$$305.getDate, e$$305, [], JAM.policy.p3);
    a$$604.selectedDay = v31008;
    var v31009 = JAM.call(e$$305.getMonth, e$$305, [], JAM.policy.p3);
    a$$604.drawMonth = a$$604.selectedMonth = v31009;
    var v31010 = JAM.call(e$$305.getFullYear, e$$305, [], JAM.policy.p3);
    a$$604.drawYear = a$$604.selectedYear = v31010;
    var v24604;
    if (d$$353) {
      v24604 = JAM.call(e$$305.getDate, e$$305, [], JAM.policy.p3);
    } else {
      v24604 = 0;
    }
    a$$604.currentDay = v24604;
    var v20199;
    if (d$$353) {
      v20199 = JAM.call(e$$305.getMonth, e$$305, [], JAM.policy.p3);
    } else {
      v20199 = 0;
    }
    a$$604.currentMonth = v20199;
    var v16022;
    if (d$$353) {
      v16022 = JAM.call(e$$305.getFullYear, e$$305, [], JAM.policy.p3);
    } else {
      v16022 = 0;
    }
    a$$604.currentYear = v16022;
    JAM.call(this._adjustInstDate, this, [a$$604], JAM.policy.p3);
    return;
  }
  function v1643(a$$603, b$$571) {
    var v3669;
    if (a$$603.settings[b$$571] !== undefined$$1) {
      v3669 = a$$603.settings[b$$571];
    } else {
      v3669 = this._defaults[b$$571];
    }
    return v3669;
  }
  function v1642(a$$602) {
    function d$$352(b$$570) {
      var v3670 = e$$304 + 1 < a$$602.length;
      if (v3670) {
        v3670 = JAM.call(a$$602.charAt, a$$602, [e$$304 + 1], JAM.policy.p3) == b$$570;
      }
      var c$$466 = v3670;
      if (c$$466) {
        e$$304++;
      }
      return c$$466;
    }
    var b$$569 = "";
    var c$$465 = !1;
    var e$$304 = 0;
    var v3674 = e$$304 < a$$602.length;
    for (;v3674;) {
      if (c$$465) {
        var v3671;
        var v16025 = JAM.call(a$$602.charAt, a$$602, [e$$304], JAM.policy.p3) == "'";
        if (v16025) {
          v16025 = !d$$352("'");
        }
        if (v16025) {
          v3671 = c$$465 = !1;
        } else {
          v3671 = b$$569 = b$$569 + JAM.call(a$$602.charAt, a$$602, [e$$304], JAM.policy.p3);
        }
        v3671;
      } else {
        switch(JAM.call(a$$602.charAt, a$$602, [e$$304], JAM.policy.p3)) {
          case "d":
          ;
          case "m":
          ;
          case "y":
          ;
          case "@":
            b$$569 = b$$569 + "0123456789";
            break;
          case "D":
          ;
          case "M":
            return null;
          case "'":
            var v3672;
            if (d$$352("'")) {
              v3672 = b$$569 = b$$569 + "'";
            } else {
              v3672 = c$$465 = !0;
            }
            v3672;
            break;
          default:
            b$$569 = b$$569 + JAM.call(a$$602.charAt, a$$602, [e$$304], JAM.policy.p3);
        }
      }
      e$$304++;
      v3674 = e$$304 < a$$602.length;
    }
    return b$$569;
  }
  function v1641(a$$599, b$$565, c$$461) {
    function j$$98(a$$601, b$$568, c$$464, d$$351) {
      var v3675;
      if (h$$138(a$$601)) {
        v3675 = d$$351[b$$568];
      } else {
        v3675 = c$$464[b$$568];
      }
      return v3675;
    }
    function i$$192(a$$600, b$$567, c$$463) {
      var d$$350 = "" + b$$567;
      if (h$$138(a$$600)) {
        var v3676 = d$$350.length < c$$463;
        for (;v3676;) {
          d$$350 = "0" + d$$350;
          v3676 = d$$350.length < c$$463;
        }
      }
      return d$$350;
    }
    function h$$138(b$$566) {
      var v3678 = m$$45 + 1 < a$$599.length;
      if (v3678) {
        v3678 = JAM.call(a$$599.charAt, a$$599, [m$$45 + 1], JAM.policy.p3) == b$$566;
      }
      var c$$462 = v3678;
      if (c$$462) {
        m$$45++;
      }
      return c$$462;
    }
    if (!b$$565) {
      return "";
    }
    var v10379;
    if (c$$461) {
      v10379 = c$$461.dayNamesShort;
    } else {
      v10379 = null;
    }
    var v3680 = v10379;
    if (!v3680) {
      v3680 = this._defaults.dayNamesShort;
    }
    var d$$349 = v3680;
    var v10382;
    if (c$$461) {
      v10382 = c$$461.dayNames;
    } else {
      v10382 = null;
    }
    var v3681 = v10382;
    if (!v3681) {
      v3681 = this._defaults.dayNames;
    }
    var e$$303 = v3681;
    var v10385;
    if (c$$461) {
      v10385 = c$$461.monthNamesShort;
    } else {
      v10385 = null;
    }
    var v3682 = v10385;
    if (!v3682) {
      v3682 = this._defaults.monthNamesShort;
    }
    var f$$148 = v3682;
    var v10388;
    if (c$$461) {
      v10388 = c$$461.monthNames;
    } else {
      v10388 = null;
    }
    var v3683 = v10388;
    if (!v3683) {
      v3683 = this._defaults.monthNames;
    }
    var g$$168 = v3683;
    var k$$67 = "";
    var l$$74 = !1;
    if (b$$565) {
      var m$$45 = 0;
      var v3687 = m$$45 < a$$599.length;
      for (;v3687;) {
        if (l$$74) {
          var v3684;
          var v16029 = JAM.call(a$$599.charAt, a$$599, [m$$45], JAM.policy.p3) == "'";
          if (v16029) {
            v16029 = !h$$138("'");
          }
          if (v16029) {
            v3684 = l$$74 = !1;
          } else {
            v3684 = k$$67 = k$$67 + JAM.call(a$$599.charAt, a$$599, [m$$45], JAM.policy.p3);
          }
          v3684;
        } else {
          switch(JAM.call(a$$599.charAt, a$$599, [m$$45], JAM.policy.p3)) {
            case "d":
              k$$67 = k$$67 + i$$192("d", JAM.call(b$$565.getDate, b$$565, [], JAM.policy.p3), 2);
              break;
            case "D":
              k$$67 = k$$67 + j$$98("D", JAM.call(b$$565.getDay, b$$565, [], JAM.policy.p3), d$$349, e$$303);
              break;
            case "o":
              var v10397 = k$$67;
              var v27965 = new Date(JAM.call(b$$565.getFullYear, b$$565, [], JAM.policy.p3), JAM.call(b$$565.getMonth, b$$565, [], JAM.policy.p3), JAM.call(b$$565.getDate, b$$565, [], JAM.policy.p3));
              var v26572 = JAM.call(v27965.getTime, v27965, [], JAM.policy.p3);
              var v27966 = new Date(JAM.call(b$$565.getFullYear, b$$565, [], JAM.policy.p3), 0, 0);
              k$$67 = v10397 + i$$192("o", JAM.call(Math.round, Math, [(v26572 - JAM.call(v27966.getTime, v27966, [], JAM.policy.p3)) / 864E5], JAM.policy.p3), 3);
              break;
            case "m":
              k$$67 = k$$67 + i$$192("m", JAM.call(b$$565.getMonth, b$$565, [], JAM.policy.p3) + 1, 2);
              break;
            case "M":
              k$$67 = k$$67 + j$$98("M", JAM.call(b$$565.getMonth, b$$565, [], JAM.policy.p3), f$$148, g$$168);
              break;
            case "y":
              var v10403 = k$$67;
              var v16037;
              if (h$$138("y")) {
                v16037 = JAM.call(b$$565.getFullYear, b$$565, [], JAM.policy.p3);
              } else {
                var v24606;
                if (JAM.call(b$$565.getYear, b$$565, [], JAM.policy.p3) % 100 < 10) {
                  v24606 = "0";
                } else {
                  v24606 = "";
                }
                v16037 = v24606 + JAM.call(b$$565.getYear, b$$565, [], JAM.policy.p3) % 100;
              }
              k$$67 = v10403 + v16037;
              break;
            case "@":
              k$$67 = k$$67 + JAM.call(b$$565.getTime, b$$565, [], JAM.policy.p3);
              break;
            case "!":
              k$$67 = k$$67 + (JAM.call(b$$565.getTime, b$$565, [], JAM.policy.p3) * 1E4 + this._ticksTo1970);
              break;
            case "'":
              var v3685;
              if (h$$138("'")) {
                v3685 = k$$67 = k$$67 + "'";
              } else {
                v3685 = l$$74 = !0;
              }
              v3685;
              break;
            default:
              k$$67 = k$$67 + JAM.call(a$$599.charAt, a$$599, [m$$45], JAM.policy.p3);
          }
        }
        m$$45++;
        v3687 = m$$45 < a$$599.length;
      }
    }
    return k$$67;
  }
  function v1640(a$$593, b$$561, c$$456) {
    function q$$17() {
      if (JAM.call(b$$561.charAt, b$$561, [r$$18], JAM.policy.p3) != JAM.call(a$$593.charAt, a$$593, [s$$27], JAM.policy.p3)) {
        throw "Unexpected literal at position " + r$$18;
      }
      r$$18++;
      return;
    }
    function p$$46(a$$595, c$$459, d$$347) {
      function v1639(a$$598, c$$460) {
        var d$$348 = c$$460[1];
        var v16040 = JAM.call(b$$561.substr, b$$561, [r$$18, d$$348.length], JAM.policy.p3);
        if (JAM.call(v16040.toLowerCase, v16040, [], JAM.policy.p3) == JAM.call(d$$348.toLowerCase, d$$348, [], JAM.policy.p3)) {
          f$$147 = c$$460[0];
          r$$18 = r$$18 + d$$348.length;
          return!1;
        }
        return;
      }
      function v1638(a$$597, b$$564) {
        return-(a$$597[1].length - b$$564[1].length);
      }
      function v1637(a$$596, b$$563) {
        return[[b$$563, a$$596]];
      }
      var v16043;
      if (n$$91(a$$595)) {
        v16043 = d$$347;
      } else {
        v16043 = c$$459;
      }
      var v3692 = JAM.call($$$3.map, $$$3, [v16043, v1637], JAM.policy.p3);
      var e$$302 = JAM.call(v3692.sort, v3692, [v1638], JAM.policy.p3);
      var f$$147 = -1;
      JAM.call($$$3.each, $$$3, [e$$302, v1639], JAM.policy.p3);
      if (f$$147 != -1) {
        return f$$147 + 1;
      }
      throw "Unknown name at position " + r$$18;
    }
    function o$$21(a$$594) {
      var c$$458 = n$$91(a$$594);
      var v3694;
      if (a$$594 == "@") {
        v3694 = 14;
      } else {
        var v10420;
        if (a$$594 == "!") {
          v10420 = 20;
        } else {
          var v16044;
          var v24608 = a$$594 == "y";
          if (v24608) {
            v24608 = c$$458;
          }
          if (v24608) {
            v16044 = 4;
          } else {
            var v20214;
            if (a$$594 == "o") {
              v20214 = 3;
            } else {
              v20214 = 2;
            }
            v16044 = v20214;
          }
          v10420 = v16044;
        }
        v3694 = v10420;
      }
      var d$$346 = v3694;
      var e$$301 = new RegExp("^\\d{1," + d$$346 + "}");
      var v3696 = JAM.call(b$$561.substring, b$$561, [r$$18], JAM.policy.p3);
      var f$$146 = JAM.call(v3696.match, v3696, [e$$301], JAM.policy.p3);
      if (!f$$146) {
        throw "Missing number at position " + r$$18;
      }
      r$$18 = r$$18 + f$$146[0].length;
      return parseInt(f$$146[0], 10);
    }
    function n$$91(b$$562) {
      var v3698 = s$$27 + 1 < a$$593.length;
      if (v3698) {
        v3698 = JAM.call(a$$593.charAt, a$$593, [s$$27 + 1], JAM.policy.p3) == b$$562;
      }
      var c$$457 = v3698;
      if (c$$457) {
        s$$27++;
      }
      return c$$457;
    }
    var v10427 = a$$593 == null;
    if (!v10427) {
      v10427 = b$$561 == null;
    }
    if (v10427) {
      throw "Invalid arguments";
    }
    var v3700;
    if (typeof b$$561 == "object") {
      v3700 = JAM.call(b$$561.toString, b$$561, [], JAM.policy.p3);
    } else {
      v3700 = b$$561 + "";
    }
    b$$561 = v3700;
    if (b$$561 == "") {
      return null;
    }
    var v10429;
    if (c$$456) {
      v10429 = c$$456.shortYearCutoff;
    } else {
      v10429 = null;
    }
    var v3702 = v10429;
    if (!v3702) {
      v3702 = this._defaults.shortYearCutoff;
    }
    var d$$345 = v3702;
    var v3703;
    if (typeof d$$345 != "string") {
      v3703 = d$$345;
    } else {
      var v20217 = new Date;
      v3703 = JAM.call(v20217.getFullYear, v20217, [], JAM.policy.p3) % 100 + parseInt(d$$345, 10);
    }
    d$$345 = v3703;
    var v10435;
    if (c$$456) {
      v10435 = c$$456.dayNamesShort;
    } else {
      v10435 = null;
    }
    var v3704 = v10435;
    if (!v3704) {
      v3704 = this._defaults.dayNamesShort;
    }
    var e$$300 = v3704;
    var v10438;
    if (c$$456) {
      v10438 = c$$456.dayNames;
    } else {
      v10438 = null;
    }
    var v3705 = v10438;
    if (!v3705) {
      v3705 = this._defaults.dayNames;
    }
    var f$$145 = v3705;
    var v10441;
    if (c$$456) {
      v10441 = c$$456.monthNamesShort;
    } else {
      v10441 = null;
    }
    var v3706 = v10441;
    if (!v3706) {
      v3706 = this._defaults.monthNamesShort;
    }
    var g$$167 = v3706;
    var v10444;
    if (c$$456) {
      v10444 = c$$456.monthNames;
    } else {
      v10444 = null;
    }
    var v3707 = v10444;
    if (!v3707) {
      v3707 = this._defaults.monthNames;
    }
    var h$$137 = v3707;
    var i$$191 = -1;
    var j$$97 = -1;
    var k$$66 = -1;
    var l$$73 = -1;
    var m$$44 = !1;
    var r$$18 = 0;
    var s$$27 = 0;
    var v3713 = s$$27 < a$$593.length;
    for (;v3713;) {
      if (m$$44) {
        var v3708;
        var v16052 = JAM.call(a$$593.charAt, a$$593, [s$$27], JAM.policy.p3) == "'";
        if (v16052) {
          v16052 = !n$$91("'");
        }
        if (v16052) {
          v3708 = m$$44 = !1;
        } else {
          v3708 = q$$17();
        }
        v3708;
      } else {
        switch(JAM.call(a$$593.charAt, a$$593, [s$$27], JAM.policy.p3)) {
          case "d":
            k$$66 = o$$21("d");
            break;
          case "D":
            p$$46("D", e$$300, f$$145);
            break;
          case "o":
            l$$73 = o$$21("o");
            break;
          case "m":
            j$$97 = o$$21("m");
            break;
          case "M":
            j$$97 = p$$46("M", g$$167, h$$137);
            break;
          case "y":
            i$$191 = o$$21("y");
            break;
          case "@":
            var t$$12 = new Date(o$$21("@"));
            i$$191 = JAM.call(t$$12.getFullYear, t$$12, [], JAM.policy.p3);
            j$$97 = JAM.call(t$$12.getMonth, t$$12, [], JAM.policy.p3) + 1;
            k$$66 = JAM.call(t$$12.getDate, t$$12, [], JAM.policy.p3);
            break;
          case "!":
            t$$12 = new Date((o$$21("!") - this._ticksTo1970) / 1E4);
            i$$191 = JAM.call(t$$12.getFullYear, t$$12, [], JAM.policy.p3);
            j$$97 = JAM.call(t$$12.getMonth, t$$12, [], JAM.policy.p3) + 1;
            k$$66 = JAM.call(t$$12.getDate, t$$12, [], JAM.policy.p3);
            break;
          case "'":
            var v3711;
            if (n$$91("'")) {
              v3711 = q$$17();
            } else {
              v3711 = m$$44 = !0;
            }
            v3711;
            break;
          default:
            q$$17();
        }
      }
      s$$27++;
      v3713 = s$$27 < a$$593.length;
    }
    if (r$$18 < b$$561.length) {
      throw "Extra/unparsed characters found in date: " + JAM.call(b$$561.substring, b$$561, [r$$18], JAM.policy.p3);
    }
    var v3716;
    if (i$$191 == -1) {
      var v10453 = new Date;
      v3716 = i$$191 = JAM.call(v10453.getFullYear, v10453, [], JAM.policy.p3);
    } else {
      var v10454 = i$$191 < 100;
      if (v10454) {
        var v20220 = i$$191;
        var v27968 = new Date;
        var v26575 = JAM.call(v27968.getFullYear, v27968, [], JAM.policy.p3);
        var v28874 = new Date;
        var v24610 = v26575 - JAM.call(v28874.getFullYear, v28874, [], JAM.policy.p3) % 100;
        var v26577;
        if (i$$191 <= d$$345) {
          v26577 = 0;
        } else {
          v26577 = -100;
        }
        v10454 = i$$191 = v20220 + (v24610 + v26577);
      }
      v3716 = v10454;
    }
    v3716;
    if (l$$73 > -1) {
      j$$97 = 1;
      k$$66 = l$$73;
      var v3719 = !0;
      do {
        var u$$10 = JAM.call(this._getDaysInMonth, this, [i$$191, j$$97 - 1], JAM.policy.p3);
        if (k$$66 <= u$$10) {
          break;
        }
        j$$97++;
        k$$66 = k$$66 - u$$10;
        v3719 = !0;
      } while (v3719);
    }
    t$$12 = JAM.call(this._daylightSavingAdjust, this, [new Date(i$$191, j$$97 - 1, k$$66)], JAM.policy.p3);
    var v16057 = JAM.call(t$$12.getFullYear, t$$12, [], JAM.policy.p3) != i$$191;
    if (!v16057) {
      v16057 = JAM.call(t$$12.getMonth, t$$12, [], JAM.policy.p3) + 1 != j$$97;
    }
    var v10457 = v16057;
    if (!v10457) {
      v10457 = JAM.call(t$$12.getDate, t$$12, [], JAM.policy.p3) != k$$66;
    }
    if (v10457) {
      throw "Invalid date";
    }
    return t$$12;
  }
  function v1636(a$$592) {
    var b$$560 = new Date(JAM.call(a$$592.getTime, a$$592, [], JAM.policy.p3));
    var v10458 = JAM.call(b$$560.getDate, b$$560, [], JAM.policy.p3) + 4;
    var v16061 = JAM.call(b$$560.getDay, b$$560, [], JAM.policy.p3);
    if (!v16061) {
      v16061 = 7;
    }
    JAM.call(b$$560.setDate, b$$560, [v10458 - v16061], JAM.policy.p3);
    var c$$455 = JAM.call(b$$560.getTime, b$$560, [], JAM.policy.p3);
    JAM.call(b$$560.setMonth, b$$560, [0], JAM.policy.p3);
    JAM.call(b$$560.setDate, b$$560, [1], JAM.policy.p3);
    return JAM.call(Math.floor, Math, [JAM.call(Math.round, Math, [(c$$455 - b$$560) / 864E5], JAM.policy.p3) / 7], JAM.policy.p3) + 1;
  }
  function v1635(a$$591) {
    var b$$559 = JAM.call(a$$591.getDay, a$$591, [], JAM.policy.p3);
    var v10461 = b$$559 > 0;
    if (v10461) {
      v10461 = b$$559 < 6;
    }
    return[v10461, ""];
  }
  function v1634(a$$590) {
    function v1633() {
      var v3726 = JAM.call($$$3, null, [this], JAM.policy.p3);
      JAM.call(v3726.val, v3726, [e$$299], JAM.policy.p3);
      return;
    }
    var b$$558 = JAM.call(this._get, this, [a$$590, "altField"], JAM.policy.p3);
    if (b$$558) {
      var v3727 = JAM.call(this._get, this, [a$$590, "altFormat"], JAM.policy.p3);
      if (!v3727) {
        v3727 = JAM.call(this._get, this, [a$$590, "dateFormat"], JAM.policy.p3);
      }
      var c$$454 = v3727;
      var d$$344 = JAM.call(this._getDate, this, [a$$590], JAM.policy.p3);
      var e$$299 = JAM.call(this.formatDate, this, [c$$454, d$$344, JAM.call(this._getFormatConfig, this, [a$$590], JAM.policy.p3)], JAM.policy.p3);
      var v3729 = JAM.call($$$3, null, [b$$558], JAM.policy.p3);
      JAM.call(v3729.each, v3729, [v1633], JAM.policy.p3);
    }
    return;
  }
  function v1632(a$$589, b$$557) {
    var c$$453 = JAM.call($$$3, null, [a$$589], JAM.policy.p3);
    var d$$343 = JAM.call(this._getInst, this, [c$$453[0]], JAM.policy.p3);
    var v16063;
    if (b$$557 != null) {
      v16063 = b$$557;
    } else {
      v16063 = JAM.call(this._formatDate, this, [d$$343], JAM.policy.p3);
    }
    b$$557 = v16063;
    var v16064 = d$$343.input;
    if (v16064) {
      var v20228 = d$$343.input;
      JAM.call(v20228.val, v20228, [b$$557], JAM.policy.p3);
    }
    JAM.call(this._updateAlternate, this, [d$$343], JAM.policy.p3);
    var e$$298 = JAM.call(this._get, this, [d$$343, "onSelect"], JAM.policy.p3);
    var v10463;
    if (e$$298) {
      var v20229;
      if (d$$343.input) {
        v20229 = d$$343.input[0];
      } else {
        v20229 = null;
      }
      v10463 = JAM.call(e$$298.apply, e$$298, [v20229, [b$$557, d$$343]], JAM.policy.p3);
    } else {
      var v16067 = d$$343.input;
      if (v16067) {
        var v20230 = d$$343.input;
        v16067 = JAM.call(v20230.trigger, v20230, ["change"], JAM.policy.p3);
      }
      v10463 = v16067;
    }
    v10463;
    var v10464;
    if (d$$343.inline) {
      v10464 = JAM.call(this._updateDatepicker, this, [d$$343], JAM.policy.p3);
    } else {
      JAM.call(this._hideDatepicker, this, [], JAM.policy.p3);
      this._lastInput = d$$343.input[0];
      var v24616 = typeof d$$343.input[0] != "object";
      if (v24616) {
        var v26581 = d$$343.input;
        JAM.call(v26581.focus, v26581, [], JAM.policy.p3);
      }
      v10464 = this._lastInput = null;
    }
    v10464;
    return;
  }
  function v1631(a$$588) {
    var b$$556 = JAM.call($$$3, null, [a$$588], JAM.policy.p3);
    var c$$452 = JAM.call(this._getInst, this, [b$$556[0]], JAM.policy.p3);
    JAM.call(this._selectDate, this, [b$$556, ""], JAM.policy.p3);
    return;
  }
  function v1630(a$$587, b$$555, c$$451, d$$342) {
    var e$$297 = JAM.call($$$3, null, [a$$587], JAM.policy.p3);
    var v16069 = JAM.call($$$3, null, [d$$342], JAM.policy.p3);
    var v10465 = JAM.call(v16069.hasClass, v16069, [this._unselectableClass], JAM.policy.p3);
    if (!v10465) {
      v10465 = JAM.call(this._isDisabledDatepicker, this, [e$$297[0]], JAM.policy.p3);
    }
    if (v10465) {
      return;
    }
    var f$$144 = JAM.call(this._getInst, this, [e$$297[0]], JAM.policy.p3);
    var v20231 = JAM.call($$$3, null, ["a", d$$342], JAM.policy.p3);
    var v31011 = JAM.call(v20231.html, v20231, [], JAM.policy.p3);
    f$$144.selectedDay = f$$144.currentDay = v31011;
    f$$144.selectedMonth = f$$144.currentMonth = b$$555;
    f$$144.selectedYear = f$$144.currentYear = c$$451;
    JAM.call(this._selectDate, this, [a$$587, JAM.call(this._formatDate, this, [f$$144, f$$144.currentDay, f$$144.currentMonth, f$$144.currentYear], JAM.policy.p3)], JAM.policy.p3);
    return;
  }
  function v1629(a$$586, b$$554, c$$450) {
    var d$$341 = JAM.call($$$3, null, [a$$586], JAM.policy.p3);
    var e$$296 = JAM.call(this._getInst, this, [d$$341[0]], JAM.policy.p3);
    var v24617;
    if (c$$450 == "M") {
      v24617 = "Month";
    } else {
      v24617 = "Year";
    }
    var v16076 = "selected" + v24617;
    var v26583;
    if (c$$450 == "M") {
      v26583 = "Month";
    } else {
      v26583 = "Year";
    }
    var v20233 = "draw" + v26583;
    var v31012 = parseInt(b$$554.options[b$$554.selectedIndex].value, 10);
    JAM.set(e$$296, v16076, JAM.set(e$$296, v20233, v31012, JAM.policy.p2), JAM.policy.p2);
    JAM.call(this._notifyChange, this, [e$$296], JAM.policy.p3);
    JAM.call(this._adjustDate, this, [d$$341], JAM.policy.p3);
    return;
  }
  function v1628(a$$585) {
    var b$$553 = JAM.call($$$3, null, [a$$585], JAM.policy.p3);
    var c$$449 = JAM.call(this._getInst, this, [b$$553[0]], JAM.policy.p3);
    var v10467 = JAM.call(this._get, this, [c$$449, "gotoCurrent"], JAM.policy.p3);
    if (v10467) {
      v10467 = c$$449.currentDay;
    }
    if (v10467) {
      c$$449.selectedDay = c$$449.currentDay;
      c$$449.drawMonth = c$$449.selectedMonth = c$$449.currentMonth;
      c$$449.drawYear = c$$449.selectedYear = c$$449.currentYear;
    } else {
      var d$$340 = new Date;
      var v31013 = JAM.call(d$$340.getDate, d$$340, [], JAM.policy.p3);
      c$$449.selectedDay = v31013;
      var v31014 = JAM.call(d$$340.getMonth, d$$340, [], JAM.policy.p3);
      c$$449.drawMonth = c$$449.selectedMonth = v31014;
      var v31015 = JAM.call(d$$340.getFullYear, d$$340, [], JAM.policy.p3);
      c$$449.drawYear = c$$449.selectedYear = v31015;
    }
    JAM.call(this._notifyChange, this, [c$$449], JAM.policy.p3);
    JAM.call(this._adjustDate, this, [b$$553], JAM.policy.p3);
    return;
  }
  function v1627(a$$584, b$$552, c$$448) {
    var d$$339 = JAM.call($$$3, null, [a$$584], JAM.policy.p3);
    var e$$295 = JAM.call(this._getInst, this, [d$$339[0]], JAM.policy.p3);
    if (JAM.call(this._isDisabledDatepicker, this, [d$$339[0]], JAM.policy.p3)) {
      return;
    }
    var v20234;
    if (c$$448 == "M") {
      v20234 = JAM.call(this._get, this, [e$$295, "showCurrentAtPos"], JAM.policy.p3);
    } else {
      v20234 = 0;
    }
    JAM.call(this._adjustInstDate, this, [e$$295, b$$552 + v20234, c$$448], JAM.policy.p3);
    JAM.call(this._updateDatepicker, this, [e$$295], JAM.policy.p3);
    return;
  }
  function v1626(a$$583) {
    if (!$$$3.datepicker._curInst) {
      return;
    }
    var b$$551 = JAM.call($$$3, null, [a$$583.target], JAM.policy.p3);
    var v3741 = $$$3.datepicker;
    var c$$447 = JAM.call(v3741._getInst, v3741, [b$$551[0]], JAM.policy.p3);
    var v27975 = b$$551[0].id != $$$3.datepicker._mainDivId;
    if (v27975) {
      v27975 = JAM.call(b$$551.parents, b$$551, ["#" + $$$3.datepicker._mainDivId], JAM.policy.p3).length == 0;
    }
    var v26585 = v27975;
    if (v26585) {
      v26585 = !JAM.call(b$$551.hasClass, b$$551, [$$$3.datepicker.markerClassName], JAM.policy.p3);
    }
    var v24621 = v26585;
    if (v24621) {
      v24621 = !JAM.call(b$$551.closest, b$$551, ["." + $$$3.datepicker._triggerClass], JAM.policy.p3).length;
    }
    var v20235 = v24621;
    if (v20235) {
      v20235 = $$$3.datepicker._datepickerShowing;
    }
    var v16079 = v20235;
    if (v16079) {
      var v20236 = !$$$3.datepicker._inDialog;
      if (!v20236) {
        v20236 = !$$$3.blockUI;
      }
      v16079 = v20236;
    }
    var v10471 = v16079;
    if (!v10471) {
      var v16080 = JAM.call(b$$551.hasClass, b$$551, [$$$3.datepicker.markerClassName], JAM.policy.p3);
      if (v16080) {
        v16080 = $$$3.datepicker._curInst != c$$447;
      }
      v10471 = v16080;
    }
    var v3743 = v10471;
    if (v3743) {
      var v10472 = $$$3.datepicker;
      JAM.call(v10472._hideDatepicker, v10472, [], JAM.policy.p3);
    }
    return;
  }
  function v1625(a$$582) {
    var v10473 = a$$582.dpDiv;
    var v3744 = JAM.call(v10473.removeClass, v10473, [this._dialogClass], JAM.policy.p3);
    JAM.call(v3744.unbind, v3744, [".ui-datepicker-calendar"], JAM.policy.p3);
    return;
  }
  function v1624(a$$581) {
    function v1623() {
      var v3745 = $$$3.datepicker;
      JAM.call(v3745._tidyDialog, v3745, [b$$550], JAM.policy.p3);
      return;
    }
    var b$$550 = this._curInst;
    var v10475 = !b$$550;
    if (!v10475) {
      var v16082 = a$$581;
      if (v16082) {
        v16082 = b$$550 != JAM.call($$$3.data, $$$3, [a$$581, PROP_NAME], JAM.policy.p3);
      }
      v10475 = v16082;
    }
    if (v10475) {
      return;
    }
    if (this._datepickerShowing) {
      var c$$446 = JAM.call(this._get, this, [b$$550, "showAnim"], JAM.policy.p3);
      var d$$338 = JAM.call(this._get, this, [b$$550, "duration"], JAM.policy.p3);
      var e$$294 = v1623;
      var v16084;
      var v24628 = $$$3.effects;
      if (v24628) {
        v24628 = $$$3.effects[c$$446];
      }
      if (v24628) {
        var v20241 = b$$550.dpDiv;
        var v24629 = $$$3.datepicker;
        v16084 = JAM.call(v20241.hide, v20241, [c$$446, JAM.call(v24629._get, v24629, [b$$550, "showOptions"], JAM.policy.p3), d$$338, e$$294], JAM.policy.p3);
      } else {
        var v20243 = b$$550.dpDiv;
        var v24630;
        if (c$$446 == "slideDown") {
          v24630 = "slideUp";
        } else {
          var v26589;
          if (c$$446 == "fadeIn") {
            v26589 = "fadeOut";
          } else {
            v26589 = "hide";
          }
          v24630 = v26589;
        }
        var v20244 = v24630;
        var v24631;
        if (c$$446) {
          v24631 = d$$338;
        } else {
          v24631 = null;
        }
        v16084 = JAM.call(v20243[v20244], v20243, [v24631, e$$294], JAM.policy.p3);
      }
      v16084;
      if (!c$$446) {
        JAM.call(e$$294, null, [], JAM.policy.p3);
      }
      this._datepickerShowing = !1;
      var f$$143 = JAM.call(this._get, this, [b$$550, "onClose"], JAM.policy.p3);
      if (f$$143) {
        var v26591;
        if (b$$550.input) {
          v26591 = b$$550.input[0];
        } else {
          v26591 = null;
        }
        var v24632 = v26591;
        var v27981;
        if (b$$550.input) {
          var v28881 = b$$550.input;
          v27981 = JAM.call(v28881.val, v28881, [], JAM.policy.p3);
        } else {
          v27981 = "";
        }
        JAM.call(f$$143.apply, f$$143, [v24632, [v27981, b$$550]], JAM.policy.p3);
      }
      this._lastInput = null;
      var v16085 = this._inDialog;
      if (v16085) {
        var v24634 = this._dialogInput;
        JAM.call(v24634.css, v24634, [{position:"absolute", left:"0", top:"-100px"}], JAM.policy.p3);
        var v24636 = $$$3.blockUI;
        if (v24636) {
          JAM.call($$$3.unblockUI, $$$3, [], JAM.policy.p3);
          var v27982 = JAM.call($$$3, null, ["body"], JAM.policy.p3);
          JAM.call(v27982.append, v27982, [this.dpDiv], JAM.policy.p3);
        }
      }
      this._inDialog = !1;
    }
    return;
  }
  function v1622(a$$580) {
    var b$$549 = JAM.call(this._getInst, this, [a$$580], JAM.policy.p3);
    var c$$445 = JAM.call(this._get, this, [b$$549, "isRTL"], JAM.policy.p3);
    var v10476 = a$$580;
    if (v10476) {
      var v20248 = a$$580.type == "hidden";
      if (!v20248) {
        v20248 = a$$580.nodeType != 1;
      }
      var v16086 = v20248;
      if (!v16086) {
        var v20249 = $$$3.expr.filters;
        v16086 = JAM.call(v20249.hidden, v20249, [a$$580], JAM.policy.p3);
      }
      v10476 = v16086;
    }
    var v3749 = v10476;
    for (;v3749;) {
      var v10477;
      if (c$$445) {
        v10477 = "previousSibling";
      } else {
        v10477 = "nextSibling";
      }
      a$$580 = a$$580[v10477];
      var v10478 = a$$580;
      if (v10478) {
        var v20251 = a$$580.type == "hidden";
        if (!v20251) {
          v20251 = a$$580.nodeType != 1;
        }
        var v16087 = v20251;
        if (!v16087) {
          var v20252 = $$$3.expr.filters;
          v16087 = JAM.call(v20252.hidden, v20252, [a$$580], JAM.policy.p3);
        }
        v10478 = v16087;
      }
      v3749 = v10478;
    }
    var v3750 = JAM.call($$$3, null, [a$$580], JAM.policy.p3);
    var d$$337 = JAM.call(v3750.offset, v3750, [], JAM.policy.p3);
    return[d$$337.left, d$$337.top];
  }
  function v1621(a$$579, b$$548, c$$444) {
    var v3753 = a$$579.dpDiv;
    var d$$336 = JAM.call(v3753.outerWidth, v3753, [], JAM.policy.p3);
    var v3754 = a$$579.dpDiv;
    var e$$293 = JAM.call(v3754.outerHeight, v3754, [], JAM.policy.p3);
    var v3755;
    if (a$$579.input) {
      var v10479 = a$$579.input;
      v3755 = JAM.call(v10479.outerWidth, v10479, [], JAM.policy.p3);
    } else {
      v3755 = 0;
    }
    var f$$142 = v3755;
    var v3756;
    if (a$$579.input) {
      var v10481 = a$$579.input;
      v3756 = JAM.call(v10481.outerHeight, v10481, [], JAM.policy.p3);
    } else {
      v3756 = 0;
    }
    var g$$166 = v3756;
    var v3757 = document.documentElement.clientWidth;
    var v10484;
    if (c$$444) {
      v10484 = 0;
    } else {
      var v16088 = JAM.call($$$3, null, [document], JAM.policy.p3);
      v10484 = JAM.call(v16088.scrollLeft, v16088, [], JAM.policy.p3);
    }
    var h$$136 = v3757 + v10484;
    var v3759 = document.documentElement.clientHeight;
    var v10486;
    if (c$$444) {
      v10486 = 0;
    } else {
      var v16089 = JAM.call($$$3, null, [document], JAM.policy.p3);
      v10486 = JAM.call(v16089.scrollTop, v16089, [], JAM.policy.p3);
    }
    var i$$190 = v3759 + v10486;
    var v27984 = b$$548.left;
    var v28883;
    if (JAM.call(this._get, this, [a$$579, "isRTL"], JAM.policy.p3)) {
      v28883 = d$$336 - f$$142;
    } else {
      v28883 = 0;
    }
    b$$548.left = v27984 - v28883;
    var v27986 = b$$548.left;
    var v28884;
    var v29840 = c$$444;
    if (v29840) {
      var v30102 = b$$548.left;
      var v30457 = a$$579.input;
      v29840 = v30102 == JAM.call(v30457.offset, v30457, [], JAM.policy.p3).left;
    }
    if (v29840) {
      var v29482 = JAM.call($$$3, null, [document], JAM.policy.p3);
      v28884 = JAM.call(v29482.scrollLeft, v29482, [], JAM.policy.p3);
    } else {
      v28884 = 0;
    }
    b$$548.left = v27986 - v28884;
    var v26593 = b$$548.top;
    var v27988;
    var v29484 = c$$444;
    if (v29484) {
      var v29841 = b$$548.top;
      var v30458 = a$$579.input;
      v29484 = v29841 == JAM.call(v30458.offset, v30458, [], JAM.policy.p3).top + g$$166;
    }
    if (v29484) {
      var v28885 = JAM.call($$$3, null, [document], JAM.policy.p3);
      v27988 = JAM.call(v28885.scrollTop, v28885, [], JAM.policy.p3);
    } else {
      v27988 = 0;
    }
    b$$548.top = v26593 - v27988;
    var v24645 = b$$548.left;
    var v26595 = b$$548.left;
    var v27989;
    var v29485 = b$$548.left + d$$336 > h$$136;
    if (v29485) {
      v29485 = h$$136 > d$$336;
    }
    if (v29485) {
      v27989 = JAM.call(Math.abs, Math, [b$$548.left + d$$336 - h$$136], JAM.policy.p3);
    } else {
      v27989 = 0;
    }
    b$$548.left = v24645 - JAM.call(Math.min, Math, [v26595, v27989], JAM.policy.p3);
    var v20254 = b$$548.top;
    var v24647 = b$$548.top;
    var v26597;
    var v28889 = b$$548.top + e$$293 > i$$190;
    if (v28889) {
      v28889 = i$$190 > e$$293;
    }
    if (v28889) {
      v26597 = JAM.call(Math.abs, Math, [e$$293 + g$$166], JAM.policy.p3);
    } else {
      v26597 = 0;
    }
    b$$548.top = v20254 - JAM.call(Math.min, Math, [v24647, v26597], JAM.policy.p3);
    return b$$548;
  }
  function v1620(a$$577) {
    function b$$547(a$$578) {
      var v3761 = {thin:1, medium:2, thick:3}[a$$578];
      if (!v3761) {
        v3761 = a$$578;
      }
      return v3761;
    }
    return[parseFloat(b$$547(JAM.call(a$$577.css, a$$577, ["border-left-width"], JAM.policy.p3))), parseFloat(b$$547(JAM.call(a$$577.css, a$$577, ["border-top-width"], JAM.policy.p3)))];
  }
  function v1619(a$$576) {
    function v1618() {
      var v16092 = h$$135 === a$$576.yearshtml;
      if (v16092) {
        v16092 = a$$576.yearshtml;
      }
      var v10491 = v16092;
      if (v10491) {
        var v20257 = a$$576.dpDiv;
        var v16093 = JAM.call(v20257.find, v20257, ["select.ui-datepicker-year:first"], JAM.policy.p3);
        JAM.call(v16093.replaceWith, v16093, [a$$576.yearshtml], JAM.policy.p3);
      }
      h$$135 = a$$576.yearshtml = null;
      return;
    }
    var b$$546 = this;
    b$$546.maxRows = 4;
    var v3764 = $$$3.datepicker;
    var c$$443 = JAM.call(v3764._getBorders, v3764, [a$$576.dpDiv], JAM.policy.p3);
    instActive = a$$576;
    var v20258 = a$$576.dpDiv;
    var v16095 = JAM.call(v20258.empty, v20258, [], JAM.policy.p3);
    JAM.call(v16095.append, v16095, [JAM.call(this._generateHTML, this, [a$$576], JAM.policy.p3)], JAM.policy.p3);
    JAM.call(this._attachHandlers, this, [a$$576], JAM.policy.p3);
    var v3766 = a$$576.dpDiv;
    var d$$335 = JAM.call(v3766.find, v3766, ["iframe.ui-datepicker-cover"], JAM.policy.p3);
    var v10492 = !d$$335.length;
    if (!v10492) {
      var v20259 = -c$$443[0];
      var v20260 = -c$$443[1];
      var v24651 = a$$576.dpDiv;
      var v20261 = JAM.call(v24651.outerWidth, v24651, [], JAM.policy.p3);
      var v24652 = a$$576.dpDiv;
      JAM.call(d$$335.css, d$$335, [{left:v20259, top:v20260, width:v20261, height:JAM.call(v24652.outerHeight, v24652, [], JAM.policy.p3)}], JAM.policy.p3);
    }
    var v16100 = a$$576.dpDiv;
    var v10493 = JAM.call(v16100.find, v16100, ["." + this._dayOverClass + " a"], JAM.policy.p3);
    JAM.call(v10493.mouseover, v10493, [], JAM.policy.p3);
    var e$$292 = JAM.call(this._getNumberOfMonths, this, [a$$576], JAM.policy.p3);
    var f$$141 = e$$292[1];
    var g$$165 = 17;
    var v26598 = a$$576.dpDiv;
    var v24654 = JAM.call(v26598.removeClass, v26598, ["ui-datepicker-multi-2 ui-datepicker-multi-3 ui-datepicker-multi-4"], JAM.policy.p3);
    JAM.call(v24654.width, v24654, [""], JAM.policy.p3);
    var v24655 = f$$141 > 1;
    if (v24655) {
      var v27992 = a$$576.dpDiv;
      var v26599 = JAM.call(v27992.addClass, v27992, ["ui-datepicker-multi-" + f$$141], JAM.policy.p3);
      JAM.call(v26599.css, v26599, ["width", g$$165 * f$$141 + "em"], JAM.policy.p3);
    }
    var v20264 = a$$576.dpDiv;
    var v26601;
    var v28890 = e$$292[0] != 1;
    if (!v28890) {
      v28890 = e$$292[1] != 1;
    }
    if (v28890) {
      v26601 = "add";
    } else {
      v26601 = "remove";
    }
    JAM.call(v20264[v26601 + "Class"], v20264, ["ui-datepicker-multi"], JAM.policy.p3);
    var v16102 = a$$576.dpDiv;
    var v24657;
    if (JAM.call(this._get, this, [a$$576, "isRTL"], JAM.policy.p3)) {
      v24657 = "add";
    } else {
      v24657 = "remove";
    }
    JAM.call(v16102[v24657 + "Class"], v16102, ["ui-datepicker-rtl"], JAM.policy.p3);
    var v27996 = a$$576 == $$$3.datepicker._curInst;
    if (v27996) {
      v27996 = $$$3.datepicker._datepickerShowing;
    }
    var v26603 = v27996;
    if (v26603) {
      v26603 = a$$576.input;
    }
    var v24658 = v26603;
    if (v24658) {
      var v26604 = a$$576.input;
      v24658 = JAM.call(v26604.is, v26604, [":visible"], JAM.policy.p3);
    }
    var v20267 = v24658;
    if (v20267) {
      var v26605 = a$$576.input;
      v20267 = !JAM.call(v26605.is, v26605, [":disabled"], JAM.policy.p3);
    }
    var v16104 = v20267;
    if (v16104) {
      v16104 = a$$576.input[0] != document.activeElement;
    }
    var v10494 = v16104;
    if (v10494) {
      var v16105 = a$$576.input;
      JAM.call(v16105.focus, v16105, [], JAM.policy.p3);
    }
    if (a$$576.yearshtml) {
      var h$$135 = a$$576.yearshtml;
      JAM.call(setTimeout, null, [v1618, 0]);
    }
    return;
  }
  function v1617(a$$574) {
    function v1616() {
      var v3768 = b$$545.dpDiv;
      var a$$575 = JAM.call(v3768.find, v3768, ["iframe.ui-datepicker-cover"], JAM.policy.p3);
      if (!!a$$575.length) {
        var v3769 = $$$3.datepicker;
        var c$$442 = JAM.call(v3769._getBorders, v3769, [b$$545.dpDiv], JAM.policy.p3);
        var v10496 = -c$$442[0];
        var v10497 = -c$$442[1];
        var v16109 = b$$545.dpDiv;
        var v10498 = JAM.call(v16109.outerWidth, v16109, [], JAM.policy.p3);
        var v16110 = b$$545.dpDiv;
        JAM.call(a$$575.css, a$$575, [{left:v10496, top:v10497, width:v10498, height:JAM.call(v16110.outerHeight, v16110, [], JAM.policy.p3)}], JAM.policy.p3);
      }
      return;
    }
    function v1615() {
      var v16111 = e$$291;
      var v24661 = JAM.call($$$3, null, [this], JAM.policy.p3);
      e$$291 = v16111 | JAM.call(v24661.css, v24661, ["position"], JAM.policy.p3) == "fixed";
      return!e$$291;
    }
    var v10500 = a$$574.target;
    if (!v10500) {
      v10500 = a$$574;
    }
    a$$574 = v10500;
    var v20271 = a$$574.nodeName;
    var v10501 = JAM.call(v20271.toLowerCase, v20271, [], JAM.policy.p3) != "input";
    if (v10501) {
      a$$574 = JAM.call($$$3, null, ["input", a$$574.parentNode], JAM.policy.p3)[0];
    }
    var v16116 = $$$3.datepicker;
    var v10502 = JAM.call(v16116._isDisabledDatepicker, v16116, [a$$574], JAM.policy.p3);
    if (!v10502) {
      v10502 = $$$3.datepicker._lastInput == a$$574;
    }
    if (v10502) {
      return;
    }
    var v3774 = $$$3.datepicker;
    var b$$545 = JAM.call(v3774._getInst, v3774, [a$$574], JAM.policy.p3);
    var v10503 = $$$3.datepicker._curInst;
    if (v10503) {
      v10503 = $$$3.datepicker._curInst != b$$545;
    }
    var v3775 = v10503;
    if (v3775) {
      var v16121 = $$$3.datepicker._curInst.dpDiv;
      JAM.call(v16121.stop, v16121, [!0, !0], JAM.policy.p3);
      var v20276 = b$$545;
      if (v20276) {
        v20276 = $$$3.datepicker._datepickerShowing;
      }
      var v16124 = v20276;
      if (v16124) {
        var v20277 = $$$3.datepicker;
        JAM.call(v20277._hideDatepicker, v20277, [$$$3.datepicker._curInst.input[0]], JAM.policy.p3);
      }
    }
    var v3776 = $$$3.datepicker;
    var c$$441 = JAM.call(v3776._get, v3776, [b$$545, "beforeShow"], JAM.policy.p3);
    var v3777;
    if (c$$441) {
      v3777 = JAM.call(c$$441.apply, c$$441, [a$$574, [a$$574, b$$545]], JAM.policy.p3);
    } else {
      v3777 = {};
    }
    var d$$334 = v3777;
    if (d$$334 === !1) {
      return;
    }
    extendRemove(b$$545.settings, d$$334);
    b$$545.lastVal = null;
    $$$3.datepicker._lastInput = a$$574;
    var v20279 = $$$3.datepicker;
    JAM.call(v20279._setDateFromField, v20279, [b$$545], JAM.policy.p3);
    var v16125 = $$$3.datepicker._inDialog;
    if (v16125) {
      a$$574.value = "";
    }
    var v10506 = $$$3.datepicker._pos;
    if (!v10506) {
      var v20281 = $$$3.datepicker;
      var v24666 = $$$3.datepicker;
      var v31016 = JAM.call(v24666._findPos, v24666, [a$$574], JAM.policy.p3);
      v20281._pos = v31016;
      var v20282 = $$$3.datepicker._pos;
      v20282[1] = v20282[1] + a$$574.offsetHeight;
    }
    var e$$291 = !1;
    var v16128 = JAM.call($$$3, null, [a$$574], JAM.policy.p3);
    var v10507 = JAM.call(v16128.parents, v16128, [], JAM.policy.p3);
    JAM.call(v10507.each, v10507, [v1615], JAM.policy.p3);
    var v16129 = e$$291;
    if (v16129) {
      v16129 = $$$3.browser.opera;
    }
    var v10508 = v16129;
    if (v10508) {
      var v20284 = $$$3.datepicker._pos;
      v20284[0] = v20284[0] - document.documentElement.scrollLeft;
      var v20285 = $$$3.datepicker._pos;
      v20285[1] = v20285[1] - document.documentElement.scrollTop;
    }
    var f$$140 = {left:$$$3.datepicker._pos[0], top:$$$3.datepicker._pos[1]};
    $$$3.datepicker._pos = null;
    var v26615 = b$$545.dpDiv;
    JAM.call(v26615.empty, v26615, [], JAM.policy.p3);
    var v24670 = b$$545.dpDiv;
    JAM.call(v24670.css, v24670, [{position:"absolute", display:"block", top:"-1000px"}], JAM.policy.p3);
    var v20286 = $$$3.datepicker;
    JAM.call(v20286._updateDatepicker, v20286, [b$$545], JAM.policy.p3);
    var v16132 = $$$3.datepicker;
    f$$140 = JAM.call(v16132._checkOffset, v16132, [b$$545, f$$140, e$$291], JAM.policy.p3);
    var v10511 = b$$545.dpDiv;
    var v20287;
    var v26616 = $$$3.datepicker._inDialog;
    if (v26616) {
      v26616 = $$$3.blockUI;
    }
    if (v26616) {
      v20287 = "static";
    } else {
      var v24672;
      if (e$$291) {
        v24672 = "fixed";
      } else {
        v24672 = "absolute";
      }
      v20287 = v24672;
    }
    JAM.call(v10511.css, v10511, [{position:v20287, display:"none", left:f$$140.left + "px", top:f$$140.top + "px"}], JAM.policy.p3);
    if (!b$$545.inline) {
      var v3781 = $$$3.datepicker;
      var g$$164 = JAM.call(v3781._get, v3781, [b$$545, "showAnim"], JAM.policy.p3);
      var v3782 = $$$3.datepicker;
      var h$$134 = JAM.call(v3782._get, v3782, [b$$545, "duration"], JAM.policy.p3);
      var i$$189 = v1616;
      var v26617 = b$$545.dpDiv;
      var v28893 = JAM.call($$$3, null, [a$$574], JAM.policy.p3);
      JAM.call(v26617.zIndex, v26617, [JAM.call(v28893.zIndex, v28893, [], JAM.policy.p3) + 1], JAM.policy.p3);
      $$$3.datepicker._datepickerShowing = !0;
      var v24674;
      var v28002 = $$$3.effects;
      if (v28002) {
        v28002 = $$$3.effects[g$$164];
      }
      if (v28002) {
        var v26620 = b$$545.dpDiv;
        var v28003 = $$$3.datepicker;
        v24674 = JAM.call(v26620.show, v26620, [g$$164, JAM.call(v28003._get, v28003, [b$$545, "showOptions"], JAM.policy.p3), h$$134, i$$189], JAM.policy.p3);
      } else {
        var v26622 = b$$545.dpDiv;
        var v26623 = g$$164 || "show";
        var v28004;
        if (g$$164) {
          v28004 = h$$134;
        } else {
          v28004 = null;
        }
        v24674 = JAM.call(v26622[v26623], v26622, [v28004, i$$189], JAM.policy.p3);
      }
      v24674;
      var v24675 = !g$$164;
      if (!v24675) {
        v24675 = !h$$134;
      }
      var v20290 = v24675;
      if (v20290) {
        JAM.call(i$$189, null, [], JAM.policy.p3);
      }
      var v24676 = b$$545.input;
      var v20291 = JAM.call(v24676.is, v24676, [":visible"], JAM.policy.p3);
      if (v20291) {
        var v26627 = b$$545.input;
        v20291 = !JAM.call(v26627.is, v26627, [":disabled"], JAM.policy.p3);
      }
      var v16136 = v20291;
      if (v16136) {
        var v20292 = b$$545.input;
        JAM.call(v20292.focus, v20292, [], JAM.policy.p3);
      }
      $$$3.datepicker._curInst = b$$545;
    }
    return;
  }
  function v1614(a$$573) {
    var v3784 = $$$3.datepicker;
    var b$$544 = JAM.call(v3784._getInst, v3784, [a$$573.target], JAM.policy.p3);
    var v16137 = b$$544.input;
    if (JAM.call(v16137.val, v16137, [], JAM.policy.p3) != b$$544.lastVal) {
      try {
        var v3786 = $$$3.datepicker;
        var v10517 = $$$3.datepicker;
        var v3787 = JAM.call(v10517._get, v10517, [b$$544, "dateFormat"], JAM.policy.p3);
        var v10518;
        if (b$$544.input) {
          var v16138 = b$$544.input;
          v10518 = JAM.call(v16138.val, v16138, [], JAM.policy.p3);
        } else {
          v10518 = null;
        }
        var v3788 = v10518;
        var v10519 = $$$3.datepicker;
        var c$$440 = JAM.call(v3786.parseDate, v3786, [v3787, v3788, JAM.call(v10519._getFormatConfig, v10519, [b$$544], JAM.policy.p3)], JAM.policy.p3);
        if (c$$440) {
          var v20293 = $$$3.datepicker;
          JAM.call(v20293._setDateFromField, v20293, [b$$544], JAM.policy.p3);
          var v20294 = $$$3.datepicker;
          JAM.call(v20294._updateAlternate, v20294, [b$$544], JAM.policy.p3);
          var v16140 = $$$3.datepicker;
          JAM.call(v16140._updateDatepicker, v16140, [b$$544], JAM.policy.p3);
        }
      } catch (d$$333) {
        var v3790 = $$$3.datepicker;
        JAM.call(v3790.log, v3790, [d$$333], JAM.policy.p3);
      }
    }
    return!0;
  }
  function v1613(a$$572) {
    var v3792 = $$$3.datepicker;
    var b$$543 = JAM.call(v3792._getInst, v3792, [a$$572.target], JAM.policy.p3);
    var v10520 = $$$3.datepicker;
    if (JAM.call(v10520._get, v10520, [b$$543, "constrainInput"], JAM.policy.p3)) {
      var v3794 = $$$3.datepicker;
      var v10521 = $$$3.datepicker;
      var c$$439 = JAM.call(v3794._possibleChars, v3794, [JAM.call(v10521._get, v10521, [b$$543, "dateFormat"], JAM.policy.p3)], JAM.policy.p3);
      var v10522;
      if (a$$572.charCode == undefined$$1) {
        v10522 = a$$572.keyCode;
      } else {
        v10522 = a$$572.charCode;
      }
      var d$$332 = JAM.call(String.fromCharCode, String, [v10522], JAM.policy.p3);
      var v20296 = a$$572.ctrlKey;
      if (!v20296) {
        v20296 = a$$572.metaKey;
      }
      var v16142 = v20296;
      if (!v16142) {
        v16142 = d$$332 < " ";
      }
      var v10523 = v16142;
      if (!v10523) {
        v10523 = !c$$439;
      }
      var v3797 = v10523;
      if (!v3797) {
        v3797 = JAM.call(c$$439.indexOf, c$$439, [d$$332], JAM.policy.p3) > -1;
      }
      return v3797;
    }
    return;
  }
  function v1612(a$$571) {
    var v3799 = $$$3.datepicker;
    var b$$542 = JAM.call(v3799._getInst, v3799, [a$$571.target], JAM.policy.p3);
    var c$$438 = !0;
    var v3801 = b$$542.dpDiv;
    var d$$331 = JAM.call(v3801.is, v3801, [".ui-datepicker-rtl"], JAM.policy.p3);
    b$$542._keyEvent = !0;
    if ($$$3.datepicker._datepickerShowing) {
      switch(a$$571.keyCode) {
        case 9:
          var v10527 = $$$3.datepicker;
          JAM.call(v10527._hideDatepicker, v10527, [], JAM.policy.p3);
          c$$438 = !1;
          break;
        case 13:
          var e$$290 = JAM.call($$$3, null, ["td." + $$$3.datepicker._dayOverClass + ":not(." + $$$3.datepicker._currentClass + ")", b$$542.dpDiv], JAM.policy.p3);
          var v3804 = e$$290[0];
          if (v3804) {
            var v10529 = $$$3.datepicker;
            JAM.call(v10529._selectDay, v10529, [a$$571.target, b$$542.selectedMonth, b$$542.selectedYear, e$$290[0]], JAM.policy.p3);
          }
          var v3805 = $$$3.datepicker;
          var f$$139 = JAM.call(v3805._get, v3805, [b$$542, "onSelect"], JAM.policy.p3);
          if (f$$139) {
            var v3806 = $$$3.datepicker;
            var g$$163 = JAM.call(v3806._formatDate, v3806, [b$$542], JAM.policy.p3);
            var v10534;
            if (b$$542.input) {
              v10534 = b$$542.input[0];
            } else {
              v10534 = null;
            }
            JAM.call(f$$139.apply, f$$139, [v10534, [g$$163, b$$542]], JAM.policy.p3);
          } else {
            var v3809 = $$$3.datepicker;
            JAM.call(v3809._hideDatepicker, v3809, [], JAM.policy.p3);
          }
          return!1;
        case 27:
          var v3810 = $$$3.datepicker;
          JAM.call(v3810._hideDatepicker, v3810, [], JAM.policy.p3);
          break;
        case 33:
          var v3811 = $$$3.datepicker;
          var v3812 = a$$571.target;
          var v10535;
          if (a$$571.ctrlKey) {
            var v20300 = $$$3.datepicker;
            v10535 = -JAM.call(v20300._get, v20300, [b$$542, "stepBigMonths"], JAM.policy.p3);
          } else {
            var v20301 = $$$3.datepicker;
            v10535 = -JAM.call(v20301._get, v20301, [b$$542, "stepMonths"], JAM.policy.p3);
          }
          JAM.call(v3811._adjustDate, v3811, [v3812, v10535, "M"], JAM.policy.p3);
          break;
        case 34:
          var v3814 = $$$3.datepicker;
          var v3815 = a$$571.target;
          var v10536;
          if (a$$571.ctrlKey) {
            var v20302 = $$$3.datepicker;
            v10536 = +JAM.call(v20302._get, v20302, [b$$542, "stepBigMonths"], JAM.policy.p3);
          } else {
            var v20303 = $$$3.datepicker;
            v10536 = +JAM.call(v20303._get, v20303, [b$$542, "stepMonths"], JAM.policy.p3);
          }
          JAM.call(v3814._adjustDate, v3814, [v3815, v10536, "M"], JAM.policy.p3);
          break;
        case 35:
          var v16154 = a$$571.ctrlKey;
          if (!v16154) {
            v16154 = a$$571.metaKey;
          }
          var v10537 = v16154;
          if (v10537) {
            var v16155 = $$$3.datepicker;
            JAM.call(v16155._clearDate, v16155, [a$$571.target], JAM.policy.p3);
          }
          var v10538 = a$$571.ctrlKey;
          if (!v10538) {
            v10538 = a$$571.metaKey;
          }
          c$$438 = v10538;
          break;
        case 36:
          var v16158 = a$$571.ctrlKey;
          if (!v16158) {
            v16158 = a$$571.metaKey;
          }
          var v10539 = v16158;
          if (v10539) {
            var v16159 = $$$3.datepicker;
            JAM.call(v16159._gotoToday, v16159, [a$$571.target], JAM.policy.p3);
          }
          var v10540 = a$$571.ctrlKey;
          if (!v10540) {
            v10540 = a$$571.metaKey;
          }
          c$$438 = v10540;
          break;
        case 37:
          var v20306 = a$$571.ctrlKey;
          if (!v20306) {
            v20306 = a$$571.metaKey;
          }
          var v16162 = v20306;
          if (v16162) {
            var v20307 = $$$3.datepicker;
            var v20308 = a$$571.target;
            var v24681;
            if (d$$331) {
              v24681 = 1;
            } else {
              v24681 = -1;
            }
            JAM.call(v20307._adjustDate, v20307, [v20308, v24681, "D"], JAM.policy.p3);
          }
          var v16163 = a$$571.ctrlKey;
          if (!v16163) {
            v16163 = a$$571.metaKey;
          }
          c$$438 = v16163;
          var v10541 = a$$571.originalEvent.altKey;
          if (v10541) {
            var v16165 = $$$3.datepicker;
            var v16166 = a$$571.target;
            var v20311;
            if (a$$571.ctrlKey) {
              var v26629 = $$$3.datepicker;
              v20311 = -JAM.call(v26629._get, v26629, [b$$542, "stepBigMonths"], JAM.policy.p3);
            } else {
              var v26630 = $$$3.datepicker;
              v20311 = -JAM.call(v26630._get, v26630, [b$$542, "stepMonths"], JAM.policy.p3);
            }
            JAM.call(v16165._adjustDate, v16165, [v16166, v20311, "M"], JAM.policy.p3);
          }
          break;
        case 38:
          var v16168 = a$$571.ctrlKey;
          if (!v16168) {
            v16168 = a$$571.metaKey;
          }
          var v10542 = v16168;
          if (v10542) {
            var v16169 = $$$3.datepicker;
            JAM.call(v16169._adjustDate, v16169, [a$$571.target, -7, "D"], JAM.policy.p3);
          }
          var v10543 = a$$571.ctrlKey;
          if (!v10543) {
            v10543 = a$$571.metaKey;
          }
          c$$438 = v10543;
          break;
        case 39:
          var v20313 = a$$571.ctrlKey;
          if (!v20313) {
            v20313 = a$$571.metaKey;
          }
          var v16172 = v20313;
          if (v16172) {
            var v20314 = $$$3.datepicker;
            var v20315 = a$$571.target;
            var v24686;
            if (d$$331) {
              v24686 = -1;
            } else {
              v24686 = 1;
            }
            JAM.call(v20314._adjustDate, v20314, [v20315, v24686, "D"], JAM.policy.p3);
          }
          var v16173 = a$$571.ctrlKey;
          if (!v16173) {
            v16173 = a$$571.metaKey;
          }
          c$$438 = v16173;
          var v10544 = a$$571.originalEvent.altKey;
          if (v10544) {
            var v16175 = $$$3.datepicker;
            var v16176 = a$$571.target;
            var v20318;
            if (a$$571.ctrlKey) {
              var v26631 = $$$3.datepicker;
              v20318 = +JAM.call(v26631._get, v26631, [b$$542, "stepBigMonths"], JAM.policy.p3);
            } else {
              var v26632 = $$$3.datepicker;
              v20318 = +JAM.call(v26632._get, v26632, [b$$542, "stepMonths"], JAM.policy.p3);
            }
            JAM.call(v16175._adjustDate, v16175, [v16176, v20318, "M"], JAM.policy.p3);
          }
          break;
        case 40:
          var v16178 = a$$571.ctrlKey;
          if (!v16178) {
            v16178 = a$$571.metaKey;
          }
          var v10545 = v16178;
          if (v10545) {
            var v16179 = $$$3.datepicker;
            JAM.call(v16179._adjustDate, v16179, [a$$571.target, 7, "D"], JAM.policy.p3);
          }
          var v10546 = a$$571.ctrlKey;
          if (!v10546) {
            v10546 = a$$571.metaKey;
          }
          c$$438 = v10546;
          break;
        default:
          c$$438 = !1;
      }
    } else {
      var v3818;
      var v16182 = a$$571.keyCode == 36;
      if (v16182) {
        v16182 = a$$571.ctrlKey;
      }
      if (v16182) {
        var v10547 = $$$3.datepicker;
        v3818 = JAM.call(v10547._showDatepicker, v10547, [this], JAM.policy.p3);
      } else {
        v3818 = c$$438 = !1;
      }
      v3818;
    }
    if (c$$438) {
      JAM.call(a$$571.preventDefault, a$$571, [], JAM.policy.p3);
      JAM.call(a$$571.stopPropagation, a$$571, [], JAM.policy.p3);
    }
    return;
  }
  function v1611(a$$570, b$$541) {
    var c$$437 = JAM.call(this._getInst, this, [a$$570], JAM.policy.p3);
    var v16183 = c$$437;
    if (v16183) {
      v16183 = !c$$437.inline;
    }
    var v10549 = v16183;
    if (v10549) {
      JAM.call(this._setDateFromField, this, [c$$437, b$$541], JAM.policy.p3);
    }
    var v10550;
    if (c$$437) {
      v10550 = JAM.call(this._getDate, this, [c$$437], JAM.policy.p3);
    } else {
      v10550 = null;
    }
    return v10550;
  }
  function v1610(a$$569, b$$540) {
    var c$$436 = JAM.call(this._getInst, this, [a$$569], JAM.policy.p3);
    if (c$$436) {
      JAM.call(this._setDate, this, [c$$436, b$$540], JAM.policy.p3);
      JAM.call(this._updateDatepicker, this, [c$$436], JAM.policy.p3);
      JAM.call(this._updateAlternate, this, [c$$436], JAM.policy.p3);
    }
    return;
  }
  function v1609(a$$568) {
    var b$$539 = JAM.call(this._getInst, this, [a$$568], JAM.policy.p3);
    if (b$$539) {
      JAM.call(this._updateDatepicker, this, [b$$539], JAM.policy.p3);
    }
    return;
  }
  function v1608(a$$567, b$$538, c$$435) {
    JAM.call(this._optionDatepicker, this, [a$$567, b$$538, c$$435], JAM.policy.p3);
    return;
  }
  function v1607(a$$566, b$$537, c$$434) {
    var d$$330 = JAM.call(this._getInst, this, [a$$566], JAM.policy.p3);
    var v10551 = arguments.length == 2;
    if (v10551) {
      v10551 = typeof b$$537 == "string";
    }
    if (v10551) {
      var v3820;
      if (b$$537 == "defaults") {
        v3820 = JAM.call($$$3.extend, $$$3, [{}, $$$3.datepicker._defaults], JAM.policy.p3);
      } else {
        var v10553;
        if (d$$330) {
          var v16187;
          if (b$$537 == "all") {
            v16187 = JAM.call($$$3.extend, $$$3, [{}, d$$330.settings], JAM.policy.p3);
          } else {
            v16187 = JAM.call(this._get, this, [d$$330, b$$537], JAM.policy.p3);
          }
          v10553 = v16187;
        } else {
          v10553 = null;
        }
        v3820 = v10553;
      }
      return v3820;
    }
    var e$$289 = b$$537 || {};
    var v3822 = typeof b$$537 == "string";
    if (v3822) {
      e$$289 = {};
      JAM.set(e$$289, b$$537, c$$434, JAM.policy.p2);
    }
    if (d$$330) {
      var v3823 = this._curInst == d$$330;
      if (v3823) {
        JAM.call(this._hideDatepicker, this, [], JAM.policy.p3);
      }
      var f$$138 = JAM.call(this._getDateDatepicker, this, [a$$566, !0], JAM.policy.p3);
      var g$$162 = JAM.call(this._getMinMaxDate, this, [d$$330, "min"], JAM.policy.p3);
      var h$$133 = JAM.call(this._getMinMaxDate, this, [d$$330, "max"], JAM.policy.p3);
      extendRemove(d$$330.settings, e$$289);
      var v29846 = g$$162 !== null;
      if (v29846) {
        v29846 = e$$289.dateFormat !== undefined$$1;
      }
      var v29492 = v29846;
      if (v29492) {
        v29492 = e$$289.minDate === undefined$$1;
      }
      var v28896 = v29492;
      if (v28896) {
        var v29493 = d$$330.settings;
        var v31017 = JAM.call(this._formatDate, this, [d$$330, g$$162], JAM.policy.p3);
        v29493.minDate = v31017;
      }
      var v29494 = h$$133 !== null;
      if (v29494) {
        v29494 = e$$289.dateFormat !== undefined$$1;
      }
      var v28897 = v29494;
      if (v28897) {
        v28897 = e$$289.maxDate === undefined$$1;
      }
      var v28005 = v28897;
      if (v28005) {
        var v28898 = d$$330.settings;
        var v31018 = JAM.call(this._formatDate, this, [d$$330, h$$133], JAM.policy.p3);
        v28898.maxDate = v31018;
      }
      JAM.call(this._attachments, this, [JAM.call($$$3, null, [a$$566], JAM.policy.p3), d$$330], JAM.policy.p3);
      JAM.call(this._autoSize, this, [d$$330], JAM.policy.p3);
      JAM.call(this._setDate, this, [d$$330, f$$138], JAM.policy.p3);
      JAM.call(this._updateAlternate, this, [d$$330], JAM.policy.p3);
      JAM.call(this._updateDatepicker, this, [d$$330], JAM.policy.p3);
    }
    return;
  }
  function v1606(a$$565) {
    try {
      return JAM.call($$$3.data, $$$3, [a$$565, PROP_NAME], JAM.policy.p3);
    } catch (b$$536) {
      throw "Missing instance data for this datepicker";
    }
    return;
  }
  function v1605(a$$564) {
    if (!a$$564) {
      return!1;
    }
    var b$$535 = 0;
    var v3827 = b$$535 < this._disabledInputs.length;
    for (;v3827;) {
      if (this._disabledInputs[b$$535] == a$$564) {
        return!0;
      }
      b$$535++;
      v3827 = b$$535 < this._disabledInputs.length;
    }
    return!1;
  }
  function v1604(a$$563) {
    function v1603(b$$534) {
      var v3828;
      if (b$$534 == a$$563) {
        v3828 = null;
      } else {
        v3828 = b$$534;
      }
      return v3828;
    }
    function v1602() {
      this.disabled = !0;
      return;
    }
    var b$$533 = JAM.call($$$3, null, [a$$563], JAM.policy.p3);
    var c$$433 = JAM.call($$$3.data, $$$3, [a$$563, PROP_NAME], JAM.policy.p3);
    if (!JAM.call(b$$533.hasClass, b$$533, [this.markerClassName], JAM.policy.p3)) {
      return;
    }
    var v3830 = a$$563.nodeName;
    var d$$329 = JAM.call(v3830.toLowerCase, v3830, [], JAM.policy.p3);
    if (d$$329 == "input") {
      a$$563.disabled = !0;
      var v26634 = c$$433.trigger;
      var v24690 = JAM.call(v26634.filter, v26634, ["button"], JAM.policy.p3);
      var v20324 = JAM.call(v24690.each, v24690, [v1602], JAM.policy.p3);
      var v16192 = JAM.call(v20324.end, v20324, [], JAM.policy.p3);
      var v10562 = JAM.call(v16192.filter, v16192, ["img"], JAM.policy.p3);
      JAM.call(v10562.css, v10562, [{opacity:"0.5", cursor:"default"}], JAM.policy.p3);
    } else {
      var v10564 = d$$329 == "div";
      if (!v10564) {
        v10564 = d$$329 == "span";
      }
      if (v10564) {
        var e$$288 = JAM.call(b$$533.children, b$$533, ["." + this._inlineClass], JAM.policy.p3);
        var v10566 = JAM.call(e$$288.children, e$$288, [], JAM.policy.p3);
        JAM.call(v10566.addClass, v10566, ["ui-state-disabled"], JAM.policy.p3);
        var v10567 = JAM.call(e$$288.find, e$$288, ["select.ui-datepicker-month, select.ui-datepicker-year"], JAM.policy.p3);
        JAM.call(v10567.attr, v10567, ["disabled", "disabled"], JAM.policy.p3);
      }
    }
    var v31019 = JAM.call($$$3.map, $$$3, [this._disabledInputs, v1603], JAM.policy.p3);
    this._disabledInputs = v31019;
    JAM.set(this._disabledInputs, this._disabledInputs.length, a$$563, JAM.policy.p2);
    return;
  }
  function v1601(a$$562) {
    function v1600(b$$532) {
      var v3834;
      if (b$$532 == a$$562) {
        v3834 = null;
      } else {
        v3834 = b$$532;
      }
      return v3834;
    }
    function v1599() {
      this.disabled = !1;
      return;
    }
    var b$$531 = JAM.call($$$3, null, [a$$562], JAM.policy.p3);
    var c$$432 = JAM.call($$$3.data, $$$3, [a$$562, PROP_NAME], JAM.policy.p3);
    if (!JAM.call(b$$531.hasClass, b$$531, [this.markerClassName], JAM.policy.p3)) {
      return;
    }
    var v3836 = a$$562.nodeName;
    var d$$328 = JAM.call(v3836.toLowerCase, v3836, [], JAM.policy.p3);
    if (d$$328 == "input") {
      a$$562.disabled = !1;
      var v26635 = c$$432.trigger;
      var v24691 = JAM.call(v26635.filter, v26635, ["button"], JAM.policy.p3);
      var v20325 = JAM.call(v24691.each, v24691, [v1599], JAM.policy.p3);
      var v16196 = JAM.call(v20325.end, v20325, [], JAM.policy.p3);
      var v10573 = JAM.call(v16196.filter, v16196, ["img"], JAM.policy.p3);
      JAM.call(v10573.css, v10573, [{opacity:"1.0", cursor:""}], JAM.policy.p3);
    } else {
      var v10575 = d$$328 == "div";
      if (!v10575) {
        v10575 = d$$328 == "span";
      }
      if (v10575) {
        var e$$287 = JAM.call(b$$531.children, b$$531, ["." + this._inlineClass], JAM.policy.p3);
        var v10577 = JAM.call(e$$287.children, e$$287, [], JAM.policy.p3);
        JAM.call(v10577.removeClass, v10577, ["ui-state-disabled"], JAM.policy.p3);
        var v10578 = JAM.call(e$$287.find, e$$287, ["select.ui-datepicker-month, select.ui-datepicker-year"], JAM.policy.p3);
        JAM.call(v10578.removeAttr, v10578, ["disabled"], JAM.policy.p3);
      }
    }
    var v31020 = JAM.call($$$3.map, $$$3, [this._disabledInputs, v1600], JAM.policy.p3);
    this._disabledInputs = v31020;
    return;
  }
  function v1598(a$$561) {
    var b$$530 = JAM.call($$$3, null, [a$$561], JAM.policy.p3);
    var c$$431 = JAM.call($$$3.data, $$$3, [a$$561, PROP_NAME], JAM.policy.p3);
    if (!JAM.call(b$$530.hasClass, b$$530, [this.markerClassName], JAM.policy.p3)) {
      return;
    }
    var v3842 = a$$561.nodeName;
    var d$$327 = JAM.call(v3842.toLowerCase, v3842, [], JAM.policy.p3);
    JAM.call($$$3.removeData, $$$3, [a$$561, PROP_NAME], JAM.policy.p3);
    var v10580;
    if (d$$327 == "input") {
      var v24692 = c$$431.append;
      JAM.call(v24692.remove, v24692, [], JAM.policy.p3);
      var v24693 = c$$431.trigger;
      JAM.call(v24693.remove, v24693, [], JAM.policy.p3);
      var v28006 = JAM.call(b$$530.removeClass, b$$530, [this.markerClassName], JAM.policy.p3);
      var v26636 = JAM.call(v28006.unbind, v28006, ["focus", this._showDatepicker], JAM.policy.p3);
      var v24694 = JAM.call(v26636.unbind, v26636, ["keydown", this._doKeyDown], JAM.policy.p3);
      var v20326 = JAM.call(v24694.unbind, v24694, ["keypress", this._doKeyPress], JAM.policy.p3);
      v10580 = JAM.call(v20326.unbind, v20326, ["keyup", this._doKeyUp], JAM.policy.p3);
    } else {
      var v20328 = d$$327 == "div";
      if (!v20328) {
        v20328 = d$$327 == "span";
      }
      var v16199 = v20328;
      if (v16199) {
        var v20329 = JAM.call(b$$530.removeClass, b$$530, [this.markerClassName], JAM.policy.p3);
        v16199 = JAM.call(v20329.empty, v20329, [], JAM.policy.p3);
      }
      v10580 = v16199;
    }
    v10580;
    return;
  }
  function v1597(a$$560, b$$529, c$$430, d$$326, e$$286) {
    var f$$137 = this._dialogInst;
    if (!f$$137) {
      this.uuid = this.uuid + 1;
      var g$$161 = "dp" + this.uuid;
      var v31021 = JAM.call($$$3, null, ['<input type="text" id="' + g$$161 + '" style="position: absolute; top: -100px; width: 0px;"/>'], JAM.policy.p3);
      this._dialogInput = v31021;
      var v26639 = this._dialogInput;
      JAM.call(v26639.keydown, v26639, [this._doKeyDown], JAM.policy.p3);
      var v24698 = JAM.call($$$3, null, ["body"], JAM.policy.p3);
      JAM.call(v24698.append, v24698, [this._dialogInput], JAM.policy.p3);
      var v31022 = JAM.call(this._newInst, this, [this._dialogInput, !1], JAM.policy.p3);
      f$$137 = this._dialogInst = v31022;
      f$$137.settings = {};
      JAM.call($$$3.data, $$$3, [this._dialogInput[0], PROP_NAME, f$$137], JAM.policy.p3);
    }
    extendRemove(f$$137.settings, d$$326 || {});
    var v20334;
    var v26641 = b$$529;
    if (v26641) {
      v26641 = b$$529.constructor == Date;
    }
    if (v26641) {
      v20334 = JAM.call(this._formatDate, this, [f$$137, b$$529], JAM.policy.p3);
    } else {
      v20334 = b$$529;
    }
    b$$529 = v20334;
    var v16202 = this._dialogInput;
    JAM.call(v16202.val, v16202, [b$$529], JAM.policy.p3);
    var v10583;
    if (e$$286) {
      var v16203;
      if (e$$286.length) {
        v16203 = e$$286;
      } else {
        v16203 = [e$$286.pageX, e$$286.pageY];
      }
      v10583 = v16203;
    } else {
      v10583 = null;
    }
    this._pos = v10583;
    if (!this._pos) {
      var h$$132 = document.documentElement.clientWidth;
      var i$$188 = document.documentElement.clientHeight;
      var v3847 = document.documentElement.scrollLeft;
      if (!v3847) {
        v3847 = document.body.scrollLeft;
      }
      var j$$96 = v3847;
      var v3848 = document.documentElement.scrollTop;
      if (!v3848) {
        v3848 = document.body.scrollTop;
      }
      var k$$65 = v3848;
      this._pos = [h$$132 / 2 - 100 + j$$96, i$$188 / 2 - 150 + k$$65];
    }
    var v29496 = this._dialogInput;
    var v28900 = JAM.call(v29496.css, v29496, ["left", this._pos[0] + 20 + "px"], JAM.policy.p3);
    JAM.call(v28900.css, v28900, ["top", this._pos[1] + "px"], JAM.policy.p3);
    f$$137.settings.onSelect = c$$430;
    this._inDialog = !0;
    var v26642 = this.dpDiv;
    JAM.call(v26642.addClass, v26642, [this._dialogClass], JAM.policy.p3);
    JAM.call(this._showDatepicker, this, [this._dialogInput[0]], JAM.policy.p3);
    var v20338 = $$$3.blockUI;
    if (v20338) {
      JAM.call($$$3.blockUI, $$$3, [this.dpDiv], JAM.policy.p3);
    }
    JAM.call($$$3.data, $$$3, [this._dialogInput[0], PROP_NAME, f$$137], JAM.policy.p3);
    return this;
  }
  function v1596(a$$557, b$$528) {
    function v1595(a$$559, c$$429) {
      return JAM.call(this._get, this, [b$$528, c$$429], JAM.policy.p3);
    }
    function v1594(a$$558, c$$428, d$$325) {
      JAM.set(b$$528.settings, c$$428, d$$325, JAM.policy.p2);
      return;
    }
    var c$$427 = JAM.call($$$3, null, [a$$557], JAM.policy.p3);
    if (JAM.call(c$$427.hasClass, c$$427, [this.markerClassName], JAM.policy.p3)) {
      return;
    }
    var v29499 = JAM.call(c$$427.addClass, c$$427, [this.markerClassName], JAM.policy.p3);
    var v28903 = JAM.call(v29499.append, v29499, [b$$528.dpDiv], JAM.policy.p3);
    var v28010 = JAM.call(v28903.bind, v28903, ["setData.datepicker", v1594], JAM.policy.p3);
    JAM.call(v28010.bind, v28010, ["getData.datepicker", v1595], JAM.policy.p3);
    JAM.call($$$3.data, $$$3, [a$$557, PROP_NAME, b$$528], JAM.policy.p3);
    JAM.call(this._setDate, this, [b$$528, JAM.call(this._getDefaultDate, this, [b$$528], JAM.policy.p3), !0], JAM.policy.p3);
    JAM.call(this._updateDatepicker, this, [b$$528], JAM.policy.p3);
    JAM.call(this._updateAlternate, this, [b$$528], JAM.policy.p3);
    var v16207 = b$$528.settings.disabled;
    if (v16207) {
      JAM.call(this._disableDatepicker, this, [a$$557], JAM.policy.p3);
    }
    var v10594 = b$$528.dpDiv;
    JAM.call(v10594.css, v10594, ["display", "block"], JAM.policy.p3);
    return;
  }
  function v1593(a$$555) {
    function v1592(a$$556) {
      var b$$527 = 0;
      var c$$426 = 0;
      var d$$324 = 0;
      var v3855 = d$$324 < a$$556.length;
      for (;v3855;) {
        var v3854 = a$$556[d$$324].length > b$$527;
        if (v3854) {
          b$$527 = a$$556[d$$324].length;
          c$$426 = d$$324;
        }
        d$$324++;
        v3855 = d$$324 < a$$556.length;
      }
      return c$$426;
    }
    var v10598 = JAM.call(this._get, this, [a$$555, "autoSize"], JAM.policy.p3);
    if (v10598) {
      v10598 = !a$$555.inline;
    }
    if (v10598) {
      var b$$526 = new Date(2009, 11, 20);
      var c$$425 = JAM.call(this._get, this, [a$$555, "dateFormat"], JAM.policy.p3);
      if (JAM.call(c$$425.match, c$$425, [/[DM]/], JAM.policy.p3)) {
        var d$$323 = v1592;
        var v24703;
        if (JAM.call(c$$425.match, c$$425, [/MM/], JAM.policy.p3)) {
          v24703 = "monthNames";
        } else {
          v24703 = "monthNamesShort";
        }
        JAM.call(b$$526.setMonth, b$$526, [JAM.call(d$$323, null, [JAM.call(this._get, this, [a$$555, v24703], JAM.policy.p3)], JAM.policy.p3)], JAM.policy.p3);
        var v28011;
        if (JAM.call(c$$425.match, c$$425, [/DD/], JAM.policy.p3)) {
          v28011 = "dayNames";
        } else {
          v28011 = "dayNamesShort";
        }
        JAM.call(b$$526.setDate, b$$526, [JAM.call(d$$323, null, [JAM.call(this._get, this, [a$$555, v28011], JAM.policy.p3)], JAM.policy.p3) + 20 - JAM.call(b$$526.getDay, b$$526, [], JAM.policy.p3)], JAM.policy.p3);
      }
      var v3857 = a$$555.input;
      JAM.call(v3857.attr, v3857, ["size", JAM.call(this._formatDate, this, [a$$555, b$$526], JAM.policy.p3).length], JAM.policy.p3);
    }
    return;
  }
  function v1591(a$$554, b$$525) {
    function v1590() {
      var v10602;
      var v20343 = $$$3.datepicker._datepickerShowing;
      if (v20343) {
        v20343 = $$$3.datepicker._lastInput == a$$554[0];
      }
      if (v20343) {
        var v16214 = $$$3.datepicker;
        v10602 = JAM.call(v16214._hideDatepicker, v16214, [], JAM.policy.p3);
      } else {
        var v16215;
        var v24708 = $$$3.datepicker._datepickerShowing;
        if (v24708) {
          v24708 = $$$3.datepicker._lastInput != a$$554[0];
        }
        if (v24708) {
          var v24709 = $$$3.datepicker;
          JAM.call(v24709._hideDatepicker, v24709, [], JAM.policy.p3);
          var v24710 = $$$3.datepicker;
          v16215 = JAM.call(v24710._showDatepicker, v24710, [a$$554[0]], JAM.policy.p3);
        } else {
          var v20344 = $$$3.datepicker;
          v16215 = JAM.call(v20344._showDatepicker, v20344, [a$$554[0]], JAM.policy.p3);
        }
        v10602 = v16215;
      }
      v10602;
      return!1;
    }
    var c$$424 = JAM.call(this._get, this, [b$$525, "appendText"], JAM.policy.p3);
    var d$$322 = JAM.call(this._get, this, [b$$525, "isRTL"], JAM.policy.p3);
    var v20347 = b$$525.append;
    if (v20347) {
      var v24712 = b$$525.append;
      JAM.call(v24712.remove, v24712, [], JAM.policy.p3);
    }
    if (c$$424) {
      var v26653 = b$$525;
      var v31023 = JAM.call($$$3, null, ['<span class="' + this._appendClass + '">' + c$$424 + "</span>"], JAM.policy.p3);
      v26653.append = v31023;
      var v28014;
      if (d$$322) {
        v28014 = "before";
      } else {
        v28014 = "after";
      }
      JAM.call(a$$554[v28014], a$$554, [b$$525.append], JAM.policy.p3);
    }
    JAM.call(a$$554.unbind, a$$554, ["focus", this._showDatepicker], JAM.policy.p3);
    var v10603 = b$$525.trigger;
    if (v10603) {
      var v16218 = b$$525.trigger;
      JAM.call(v16218.remove, v16218, [], JAM.policy.p3);
    }
    var e$$285 = JAM.call(this._get, this, [b$$525, "showOn"], JAM.policy.p3);
    var v10604 = e$$285 == "focus";
    if (!v10604) {
      v10604 = e$$285 == "both";
    }
    var v3860 = v10604;
    if (v3860) {
      JAM.call(a$$554.focus, a$$554, [this._showDatepicker], JAM.policy.p3);
    }
    var v10606 = e$$285 == "button";
    if (!v10606) {
      v10606 = e$$285 == "both";
    }
    if (v10606) {
      var f$$136 = JAM.call(this._get, this, [b$$525, "buttonText"], JAM.policy.p3);
      var g$$160 = JAM.call(this._get, this, [b$$525, "buttonImage"], JAM.policy.p3);
      var v16221 = b$$525;
      var v24713;
      if (JAM.call(this._get, this, [b$$525, "buttonImageOnly"], JAM.policy.p3)) {
        var v28015 = JAM.call($$$3, null, ["<img/>"], JAM.policy.p3);
        var v26656 = JAM.call(v28015.addClass, v28015, [this._triggerClass], JAM.policy.p3);
        v24713 = JAM.call(v26656.attr, v26656, [{src:g$$160, alt:f$$136, title:f$$136}], JAM.policy.p3);
      } else {
        var v28017 = JAM.call($$$3, null, ['<button type="button"></button>'], JAM.policy.p3);
        var v26658 = JAM.call(v28017.addClass, v28017, [this._triggerClass], JAM.policy.p3);
        var v28019;
        if (g$$160 == "") {
          v28019 = f$$136;
        } else {
          var v28906 = JAM.call($$$3, null, ["<img/>"], JAM.policy.p3);
          v28019 = JAM.call(v28906.attr, v28906, [{src:g$$160, alt:f$$136, title:f$$136}], JAM.policy.p3);
        }
        v24713 = JAM.call(v26658.html, v26658, [v28019], JAM.policy.p3);
      }
      var v31024 = JAM.call($$$3, null, [v24713], JAM.policy.p3);
      v16221.trigger = v31024;
      var v20349;
      if (d$$322) {
        v20349 = "before";
      } else {
        v20349 = "after";
      }
      JAM.call(a$$554[v20349], a$$554, [b$$525.trigger], JAM.policy.p3);
      var v10607 = b$$525.trigger;
      JAM.call(v10607.click, v10607, [v1590], JAM.policy.p3);
    }
    return;
  }
  function v1589(a$$551, b$$524) {
    function v1588(a$$553, c$$423) {
      return JAM.call(this._get, this, [b$$524, c$$423], JAM.policy.p3);
    }
    function v1587(a$$552, c$$422, d$$321) {
      JAM.set(b$$524.settings, c$$422, d$$321, JAM.policy.p2);
      return;
    }
    var c$$421 = JAM.call($$$3, null, [a$$551], JAM.policy.p3);
    var v10608 = b$$524;
    var v31025 = JAM.call($$$3, null, [[]], JAM.policy.p3);
    v10608.append = v31025;
    var v10609 = b$$524;
    var v31026 = JAM.call($$$3, null, [[]], JAM.policy.p3);
    v10609.trigger = v31026;
    if (JAM.call(c$$421.hasClass, c$$421, [this.markerClassName], JAM.policy.p3)) {
      return;
    }
    JAM.call(this._attachments, this, [c$$421, b$$524], JAM.policy.p3);
    var v29502 = JAM.call(c$$421.addClass, c$$421, [this.markerClassName], JAM.policy.p3);
    var v28909 = JAM.call(v29502.keydown, v29502, [this._doKeyDown], JAM.policy.p3);
    var v28020 = JAM.call(v28909.keypress, v28909, [this._doKeyPress], JAM.policy.p3);
    var v26661 = JAM.call(v28020.keyup, v28020, [this._doKeyUp], JAM.policy.p3);
    var v24714 = JAM.call(v26661.bind, v26661, ["setData.datepicker", v1587], JAM.policy.p3);
    JAM.call(v24714.bind, v24714, ["getData.datepicker", v1588], JAM.policy.p3);
    JAM.call(this._autoSize, this, [b$$524], JAM.policy.p3);
    JAM.call($$$3.data, $$$3, [a$$551, PROP_NAME, b$$524], JAM.policy.p3);
    var v10611 = b$$524.settings.disabled;
    if (v10611) {
      JAM.call(this._disableDatepicker, this, [a$$551], JAM.policy.p3);
    }
    return;
  }
  function v1586(a$$550, b$$523) {
    var v3864 = a$$550[0].id;
    var c$$420 = JAM.call(v3864.replace, v3864, [/([^A-Za-z0-9_-])/g, "\\\\$1"], JAM.policy.p3);
    var v10613;
    if (b$$523) {
      v10613 = bindHover(JAM.call($$$3, null, ['<div class="' + this._inlineClass + ' ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all"></div>'], JAM.policy.p3));
    } else {
      v10613 = this.dpDiv;
    }
    return{id:c$$420, input:a$$550, selectedDay:0, selectedMonth:0, selectedYear:0, drawMonth:0, drawYear:0, inline:b$$523, dpDiv:v10613};
  }
  function v1585(target$$27, settings) {
    var inlineSettings = null;
    var attrName;
    for (attrName in this._defaults) {
      var attrValue = JAM.call(target$$27.getAttribute, target$$27, ["date:" + attrName], JAM.policy.p3);
      if (attrValue) {
        inlineSettings = inlineSettings || {};
        try {
          if (JAM.isEval(eval)) {
            var v31027 = eval("introspect(JAM.policy.pFull) { " + attrValue + " }")
          } else {
            var v31027 = JAM.call(eval, null, [attrValue])
          }
          JAM.set(inlineSettings, attrName, v31027, JAM.policy.p2);
        } catch (err) {
          JAM.set(inlineSettings, attrName, attrValue, JAM.policy.p2);
        }
      }
    }
    var v3868 = target$$27.nodeName;
    var nodeName = JAM.call(v3868.toLowerCase, v3868, [], JAM.policy.p3);
    var v3869 = nodeName == "div";
    if (!v3869) {
      v3869 = nodeName == "span";
    }
    var inline = v3869;
    var v3870 = target$$27.id;
    if (!v3870) {
      this.uuid = this.uuid + 1;
      target$$27.id = "dp" + this.uuid;
    }
    var inst = JAM.call(this._newInst, this, [JAM.call($$$3, null, [target$$27], JAM.policy.p3), inline], JAM.policy.p3);
    var v31028 = JAM.call($$$3.extend, $$$3, [{}, settings || {}, inlineSettings || {}], JAM.policy.p3);
    inst.settings = v31028;
    var v10618;
    if (nodeName == "input") {
      v10618 = JAM.call(this._connectDatepicker, this, [target$$27, inst], JAM.policy.p3);
    } else {
      var v16227 = inline;
      if (v16227) {
        v16227 = JAM.call(this._inlineDatepicker, this, [target$$27, inst], JAM.policy.p3);
      }
      v10618 = v16227;
    }
    v10618;
    return;
  }
  function v1584(a$$549) {
    extendRemove(this._defaults, a$$549 || {});
    return this;
  }
  function v1583() {
    return this.dpDiv;
  }
  function v1582() {
    var v3872 = this.debug;
    if (v3872) {
      var v10621 = console.log;
      JAM.call(v10621.apply, v10621, ["", arguments], JAM.policy.p3);
    }
    return;
  }
  function Datepicker() {
    this.debug = !1;
    this._curInst = null;
    this._keyEvent = !1;
    this._disabledInputs = [];
    this._datepickerShowing = !1;
    this._inDialog = !1;
    this._mainDivId = "ui-datepicker-div";
    this._inlineClass = "ui-datepicker-inline";
    this._appendClass = "ui-datepicker-append";
    this._triggerClass = "ui-datepicker-trigger";
    this._dialogClass = "ui-datepicker-dialog";
    this._disableClass = "ui-datepicker-disabled";
    this._unselectableClass = "ui-datepicker-unselectable";
    this._currentClass = "ui-datepicker-current-day";
    this._dayOverClass = "ui-datepicker-days-cell-over";
    this.regional = [];
    this.regional[""] = {closeText:"Done", prevText:"Prev", nextText:"Next", currentText:"Today", monthNames:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], monthNamesShort:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], dayNames:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], dayNamesShort:["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], dayNamesMin:["Su", 
    "Mo", "Tu", "We", "Th", "Fr", "Sa"], weekHeader:"Wk", dateFormat:"mm/dd/yy", firstDay:0, isRTL:!1, showMonthAfterYear:!1, yearSuffix:""};
    this._defaults = {showOn:"focus", showAnim:"fadeIn", showOptions:{}, defaultDate:null, appendText:"", buttonText:"...", buttonImage:"", buttonImageOnly:!1, hideIfNoPrevNext:!1, navigationAsDateFormat:!1, gotoCurrent:!1, changeMonth:!1, changeYear:!1, yearRange:"c-10:c+10", showOtherMonths:!1, selectOtherMonths:!1, showWeek:!1, calculateWeek:this.iso8601Week, shortYearCutoff:"+10", minDate:null, maxDate:null, duration:"fast", beforeShowDay:null, beforeShow:null, onSelect:null, onChangeMonthYear:null, 
    onClose:null, numberOfMonths:1, showCurrentAtPos:0, stepMonths:1, stepBigMonths:12, altField:"", altFormat:"", constrainInput:!0, showButtonPanel:!1, autoSize:!1, disabled:!1};
    JAM.call($$$3.extend, $$$3, [this._defaults, this.regional[""]], JAM.policy.p3);
    var v31029 = bindHover(JAM.call($$$3, null, ['<div id="' + this._mainDivId + '" class="ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all"></div>'], JAM.policy.p3));
    this.dpDiv = v31029;
    return;
  }
  function bindHover(a$$545) {
    function v1581(c$$418) {
      var v3873 = JAM.call($$$3, null, [c$$418.target], JAM.policy.p3);
      var d$$320 = JAM.call(v3873.closest, v3873, [b$$521], JAM.policy.p3);
      var v16232 = $$$3.datepicker;
      var v20368;
      if (instActive.inline) {
        v20368 = JAM.call(a$$545.parent, a$$545, [], JAM.policy.p3)[0];
      } else {
        v20368 = instActive.input[0];
      }
      var v10624 = JAM.call(v16232._isDisabledDatepicker, v16232, [v20368], JAM.policy.p3);
      if (!v10624) {
        v10624 = !d$$320.length;
      }
      if (v10624) {
        return;
      }
      var v24721 = JAM.call(d$$320.parents, d$$320, [".ui-datepicker-calendar"], JAM.policy.p3);
      var v20369 = JAM.call(v24721.find, v24721, ["a"], JAM.policy.p3);
      JAM.call(v20369.removeClass, v20369, ["ui-state-hover"], JAM.policy.p3);
      JAM.call(d$$320.addClass, d$$320, ["ui-state-hover"], JAM.policy.p3);
      var v16236 = JAM.call(d$$320.hasClass, d$$320, ["ui-datepicker-prev"], JAM.policy.p3);
      if (v16236) {
        JAM.call(d$$320.addClass, d$$320, ["ui-datepicker-prev-hover"], JAM.policy.p3);
      }
      var v10625 = JAM.call(d$$320.hasClass, d$$320, ["ui-datepicker-next"], JAM.policy.p3);
      if (v10625) {
        JAM.call(d$$320.addClass, d$$320, ["ui-datepicker-next-hover"], JAM.policy.p3);
      }
      return;
    }
    function v1580(a$$546) {
      var v3875 = JAM.call($$$3, null, [a$$546.target], JAM.policy.p3);
      var c$$417 = JAM.call(v3875.closest, v3875, [b$$521], JAM.policy.p3);
      if (!c$$417.length) {
        return;
      }
      JAM.call(c$$417.removeClass, c$$417, ["ui-state-hover ui-datepicker-prev-hover ui-datepicker-next-hover"], JAM.policy.p3);
      return;
    }
    var b$$521 = "button, .ui-datepicker-prev, .ui-datepicker-next, .ui-datepicker-calendar td a";
    var v3877 = JAM.call(a$$545.bind, a$$545, ["mouseout", v1580], JAM.policy.p3);
    return JAM.call(v3877.bind, v3877, ["mouseover", v1581], JAM.policy.p3);
  }
  function extendRemove(a$$547, b$$522) {
    JAM.call($$$3.extend, $$$3, [a$$547, b$$522], JAM.policy.p3);
    var c$$419;
    for (c$$419 in b$$522) {
      var v10628 = b$$522[c$$419] == null;
      if (!v10628) {
        v10628 = b$$522[c$$419] == undefined$$1;
      }
      if (v10628) {
        JAM.set(a$$547, c$$419, b$$522[c$$419], JAM.policy.p2);
      }
    }
    return a$$547;
  }
  JAM.call($$$3.extend, $$$3, [$$$3.ui, {datepicker:{version:"1.8.24"}}], JAM.policy.p3);
  var PROP_NAME = "datepicker";
  var v3881 = new Date;
  var dpuuid = JAM.call(v3881.getTime, v3881, [], JAM.policy.p3);
  var instActive;
  JAM.call($$$3.extend, $$$3, [Datepicker.prototype, {markerClassName:"hasDatepicker", maxRows:4, log:v1582, _widgetDatepicker:v1583, setDefaults:v1584, _attachDatepicker:v1585, _newInst:v1586, _connectDatepicker:v1589, _attachments:v1591, _autoSize:v1593, _inlineDatepicker:v1596, _dialogDatepicker:v1597, _destroyDatepicker:v1598, _enableDatepicker:v1601, _disableDatepicker:v1604, _isDisabledDatepicker:v1605, _getInst:v1606, _optionDatepicker:v1607, _changeDatepicker:v1608, _refreshDatepicker:v1609, 
  _setDateDatepicker:v1610, _getDateDatepicker:v1611, _doKeyDown:v1612, _doKeyPress:v1613, _doKeyUp:v1614, _showDatepicker:v1617, _updateDatepicker:v1619, _getBorders:v1620, _checkOffset:v1621, _findPos:v1622, _hideDatepicker:v1624, _tidyDialog:v1625, _checkExternalClick:v1626, _adjustDate:v1627, _gotoToday:v1628, _selectMonthYear:v1629, _selectDay:v1630, _clearDate:v1631, _selectDate:v1632, _updateAlternate:v1634, noWeekends:v1635, iso8601Week:v1636, parseDate:v1640, ATOM:"yy-mm-dd", COOKIE:"D, dd M yy", 
  ISO_8601:"yy-mm-dd", RFC_822:"D, d M y", RFC_850:"DD, dd-M-y", RFC_1036:"D, d M y", RFC_1123:"D, d M yy", RFC_2822:"D, d M yy", RSS:"D, d M y", TICKS:"!", TIMESTAMP:"@", W3C:"yy-mm-dd", _ticksTo1970:(718685 + JAM.call(Math.floor, Math, [492.5], JAM.policy.p3) - JAM.call(Math.floor, Math, [19.7], JAM.policy.p3) + JAM.call(Math.floor, Math, [4.925], JAM.policy.p3)) * 24 * 60 * 60 * 1E7, formatDate:v1641, _possibleChars:v1642, _get:v1643, _setDateFromField:v1644, _getDefaultDate:v1645, _determineDate:v1646, 
  _daylightSavingAdjust:v1647, _setDate:v1648, _getDate:v1649, _attachHandlers:v1658, _generateHTML:v1659, _generateMonthYearHeader:v1661, _adjustInstDate:v1662, _restrictMinMax:v1663, _notifyChange:v1664, _getNumberOfMonths:v1665, _getMinMaxDate:v1666, _getDaysInMonth:v1667, _getFirstDayOfMonth:v1668, _canAdjustMonth:v1669, _isInRange:v1670, _getFormatConfig:v1671, _formatDate:v1672}], JAM.policy.p3);
  $$$3.fn.datepicker = v1674;
  var v26670 = $$$3;
  var v31030 = new Datepicker;
  v26670.datepicker = v31030;
  $$$3.datepicker.initialized = !1;
  var v20370 = $$$3.datepicker;
  var v24723 = new Date;
  var v31031 = JAM.call(v24723.getTime, v24723, [], JAM.policy.p3);
  v20370.uuid = v31031;
  $$$3.datepicker.version = "1.8.24";
  JAM.set(window, "DP_jQuery_" + dpuuid, $$$3, JAM.policy.p2);
  return;
}
function v1579(a$$540, b$$509) {
  function v1578() {
    function v1577() {
      var v10631 = JAM.call(a$$540, null, [this], JAM.policy.p3);
      return JAM.call(v10631.button, v10631, ["widget"], JAM.policy.p3)[0];
    }
    var v16241 = this.element;
    JAM.call(v16241.removeClass, v16241, ["ui-buttonset"], JAM.policy.p3);
    var v26671 = this.buttons;
    var v24724 = JAM.call(v26671.map, v26671, [v1577], JAM.policy.p3);
    var v20371 = JAM.call(v24724.removeClass, v24724, ["ui-corner-left ui-corner-right"], JAM.policy.p3);
    var v16242 = JAM.call(v20371.end, v20371, [], JAM.policy.p3);
    JAM.call(v16242.button, v16242, ["destroy"], JAM.policy.p3);
    var v10632 = a$$540.Widget.prototype.destroy;
    JAM.call(v10632.call, v10632, [this], JAM.policy.p3);
    return;
  }
  function v1576() {
    function v1575() {
      var v10633 = JAM.call(a$$540, null, [this], JAM.policy.p3);
      return JAM.call(v10633.button, v10633, ["widget"], JAM.policy.p3)[0];
    }
    var v10634 = this.element;
    var b$$520 = JAM.call(v10634.css, v10634, ["direction"], JAM.policy.p3) === "rtl";
    var v30728 = this.element;
    var v30674 = JAM.call(v30728.find, v30728, [this.options.items], JAM.policy.p3);
    var v30595 = JAM.call(v30674.filter, v30674, [":ui-button"], JAM.policy.p3);
    var v30461 = JAM.call(v30595.button, v30595, ["refresh"], JAM.policy.p3);
    var v30321 = JAM.call(v30461.end, v30461, [], JAM.policy.p3);
    var v30110 = JAM.call(v30321.not, v30321, [":ui-button"], JAM.policy.p3);
    var v29855 = JAM.call(v30110.button, v30110, [], JAM.policy.p3);
    var v29505 = JAM.call(v29855.end, v29855, [], JAM.policy.p3);
    var v28912 = JAM.call(v29505.map, v29505, [v1575], JAM.policy.p3);
    var v28025 = JAM.call(v28912.removeClass, v28912, ["ui-corner-all ui-corner-left ui-corner-right"], JAM.policy.p3);
    var v26672 = JAM.call(v28025.filter, v28025, [":first"], JAM.policy.p3);
    var v28026;
    if (b$$520) {
      v28026 = "ui-corner-right";
    } else {
      v28026 = "ui-corner-left";
    }
    var v24725 = JAM.call(v26672.addClass, v26672, [v28026], JAM.policy.p3);
    var v20373 = JAM.call(v24725.end, v24725, [], JAM.policy.p3);
    var v16244 = JAM.call(v20373.filter, v20373, [":last"], JAM.policy.p3);
    var v20374;
    if (b$$520) {
      v20374 = "ui-corner-left";
    } else {
      v20374 = "ui-corner-right";
    }
    var v10635 = JAM.call(v16244.addClass, v16244, [v20374], JAM.policy.p3);
    var v3885 = JAM.call(v10635.end, v10635, [], JAM.policy.p3);
    var v31032 = JAM.call(v3885.end, v3885, [], JAM.policy.p3);
    this.buttons = v31032;
    return;
  }
  function v1574(b$$519, c$$416) {
    var v10636 = b$$519 === "disabled";
    if (v10636) {
      var v16246 = this.buttons;
      JAM.call(v16246.button, v16246, ["option", b$$519, c$$416], JAM.policy.p3);
    }
    var v10637 = a$$540.Widget.prototype._setOption;
    JAM.call(v10637.apply, v10637, [this, arguments], JAM.policy.p3);
    return;
  }
  function v1573() {
    JAM.call(this.refresh, this, [], JAM.policy.p3);
    return;
  }
  function v1572() {
    var v3886 = this.element;
    JAM.call(v3886.addClass, v3886, ["ui-buttonset"], JAM.policy.p3);
    return;
  }
  function v1571() {
    if (this.type === "input") {
      var v3887 = this.options.label;
      if (v3887) {
        var v10640 = this.element;
        JAM.call(v10640.val, v10640, [this.options.label], JAM.policy.p3);
      }
      return;
    }
    var v3889 = this.buttonElement;
    var b$$518 = JAM.call(v3889.removeClass, v3889, [i$$186], JAM.policy.p3);
    var v20376 = JAM.call(a$$540, null, ["<span></span>", this.element[0].ownerDocument], JAM.policy.p3);
    var v16249 = JAM.call(v20376.addClass, v20376, ["ui-button-text"], JAM.policy.p3);
    var v10642 = JAM.call(v16249.html, v16249, [this.options.label], JAM.policy.p3);
    var v3890 = JAM.call(v10642.appendTo, v10642, [JAM.call(b$$518.empty, b$$518, [], JAM.policy.p3)], JAM.policy.p3);
    var c$$415 = JAM.call(v3890.text, v3890, [], JAM.policy.p3);
    var d$$319 = this.options.icons;
    var v3892 = d$$319.primary;
    if (v3892) {
      v3892 = d$$319.secondary;
    }
    var e$$284 = v3892;
    var f$$135 = [];
    var v10644;
    var v20378 = d$$319.primary;
    if (!v20378) {
      v20378 = d$$319.secondary;
    }
    if (v20378) {
      var v26675 = this.options.text;
      if (v26675) {
        var v29506;
        if (e$$284) {
          v29506 = "s";
        } else {
          var v29856;
          if (d$$319.primary) {
            v29856 = "-primary";
          } else {
            v29856 = "-secondary";
          }
          v29506 = v29856;
        }
        JAM.call(f$$135.push, f$$135, ["ui-button-text-icon" + v29506], JAM.policy.p3);
      }
      var v26676 = d$$319.primary;
      if (v26676) {
        JAM.call(b$$518.prepend, b$$518, ["<span class='ui-button-icon-primary ui-icon " + d$$319.primary + "'></span>"], JAM.policy.p3);
      }
      var v24728 = d$$319.secondary;
      if (v24728) {
        JAM.call(b$$518.append, b$$518, ["<span class='ui-button-icon-secondary ui-icon " + d$$319.secondary + "'></span>"], JAM.policy.p3);
      }
      var v20379 = this.options.text;
      if (!v20379) {
        var v28032;
        if (e$$284) {
          v28032 = "ui-button-icons-only";
        } else {
          v28032 = "ui-button-icon-only";
        }
        JAM.call(f$$135.push, f$$135, [v28032], JAM.policy.p3);
        var v26679 = this.hasTitle;
        if (!v26679) {
          v26679 = JAM.call(b$$518.attr, b$$518, ["title", c$$415], JAM.policy.p3);
        }
        v20379 = v26679;
      }
      v10644 = v20379;
    } else {
      v10644 = JAM.call(f$$135.push, f$$135, ["ui-button-text-only"], JAM.policy.p3);
    }
    v10644;
    JAM.call(b$$518.addClass, b$$518, [JAM.call(f$$135.join, f$$135, [" "], JAM.policy.p3)], JAM.policy.p3);
    return;
  }
  function v1570() {
    function v1569() {
      var v3893;
      var v16252 = JAM.call(a$$540, null, [this], JAM.policy.p3);
      if (JAM.call(v16252.is, v16252, [":checked"], JAM.policy.p3)) {
        var v20380 = JAM.call(a$$540, null, [this], JAM.policy.p3);
        var v16253 = JAM.call(v20380.button, v20380, ["widget"], JAM.policy.p3);
        var v10646 = JAM.call(v16253.addClass, v16253, ["ui-state-active"], JAM.policy.p3);
        v3893 = JAM.call(v10646.attr, v10646, ["aria-pressed", "true"], JAM.policy.p3);
      } else {
        var v20381 = JAM.call(a$$540, null, [this], JAM.policy.p3);
        var v16254 = JAM.call(v20381.button, v20381, ["widget"], JAM.policy.p3);
        var v10647 = JAM.call(v16254.removeClass, v16254, ["ui-state-active"], JAM.policy.p3);
        v3893 = JAM.call(v10647.attr, v10647, ["aria-pressed", "false"], JAM.policy.p3);
      }
      v3893;
      return;
    }
    var v3894 = this.element;
    var b$$517 = JAM.call(v3894.is, v3894, [":disabled"], JAM.policy.p3);
    var v10649 = b$$517 !== this.options.disabled;
    if (v10649) {
      JAM.call(this._setOption, this, ["disabled", b$$517], JAM.policy.p3);
    }
    var v10650;
    if (this.type === "radio") {
      var v16256 = k$$64(this.element[0]);
      v10650 = JAM.call(v16256.each, v16256, [v1569], JAM.policy.p3);
    } else {
      var v16257 = this.type === "checkbox";
      if (v16257) {
        var v20386;
        var v26680 = this.element;
        if (JAM.call(v26680.is, v26680, [":checked"], JAM.policy.p3)) {
          var v26681 = this.buttonElement;
          var v24732 = JAM.call(v26681.addClass, v26681, ["ui-state-active"], JAM.policy.p3);
          v20386 = JAM.call(v24732.attr, v24732, ["aria-pressed", "true"], JAM.policy.p3);
        } else {
          var v26682 = this.buttonElement;
          var v24733 = JAM.call(v26682.removeClass, v26682, ["ui-state-active"], JAM.policy.p3);
          v20386 = JAM.call(v24733.attr, v24733, ["aria-pressed", "false"], JAM.policy.p3);
        }
        v16257 = v20386;
      }
      v10650 = v16257;
    }
    v10650;
    return;
  }
  function v1568(b$$516, c$$414) {
    var v3895 = a$$540.Widget.prototype._setOption;
    JAM.call(v3895.apply, v3895, [this, arguments], JAM.policy.p3);
    if (b$$516 === "disabled") {
      var v3896;
      if (c$$414) {
        var v10652 = this.element;
        v3896 = JAM.call(v10652.propAttr, v10652, ["disabled", !0], JAM.policy.p3);
      } else {
        var v10654 = this.element;
        v3896 = JAM.call(v10654.propAttr, v10654, ["disabled", !1], JAM.policy.p3);
      }
      v3896;
      return;
    }
    JAM.call(this._resetButton, this, [], JAM.policy.p3);
    return;
  }
  function v1567() {
    var v20387 = this.element;
    JAM.call(v20387.removeClass, v20387, ["ui-helper-hidden-accessible"], JAM.policy.p3);
    var v28034 = this.buttonElement;
    var v26683 = JAM.call(v28034.removeClass, v28034, [g$$159 + " " + h$$130 + " " + i$$186], JAM.policy.p3);
    var v24735 = JAM.call(v26683.removeAttr, v26683, ["role"], JAM.policy.p3);
    var v20388 = JAM.call(v24735.removeAttr, v24735, ["aria-pressed"], JAM.policy.p3);
    var v26684 = this.buttonElement;
    var v24736 = JAM.call(v26684.find, v26684, [".ui-button-text"], JAM.policy.p3);
    JAM.call(v20388.html, v20388, [JAM.call(v24736.html, v24736, [], JAM.policy.p3)], JAM.policy.p3);
    var v16260 = this.hasTitle;
    if (!v16260) {
      var v20390 = this.buttonElement;
      JAM.call(v20390.removeAttr, v20390, ["title"], JAM.policy.p3);
    }
    var v10656 = a$$540.Widget.prototype.destroy;
    JAM.call(v10656.call, v10656, [this], JAM.policy.p3);
    return;
  }
  function v1566() {
    return this.buttonElement;
  }
  function v1565() {
    var v3898;
    var v16262 = this.element;
    if (JAM.call(v16262.is, v16262, [":checkbox"], JAM.policy.p3)) {
      v3898 = this.type = "checkbox";
    } else {
      var v10657;
      var v20393 = this.element;
      if (JAM.call(v20393.is, v20393, [":radio"], JAM.policy.p3)) {
        v10657 = this.type = "radio";
      } else {
        var v16263;
        var v24737 = this.element;
        if (JAM.call(v24737.is, v24737, ["input"], JAM.policy.p3)) {
          v16263 = this.type = "input";
        } else {
          v16263 = this.type = "button";
        }
        v10657 = v16263;
      }
      v3898 = v10657;
    }
    v3898;
    var v10659 = this.type === "checkbox";
    if (!v10659) {
      v10659 = this.type === "radio";
    }
    if (v10659) {
      var v10660 = this.element;
      var v3899 = JAM.call(v10660.parents, v10660, [], JAM.policy.p3);
      var a$$544 = JAM.call(v3899.filter, v3899, [":last"], JAM.policy.p3);
      var v16268 = this.element;
      var b$$515 = "label[for='" + JAM.call(v16268.attr, v16268, ["id"], JAM.policy.p3) + "']";
      var v31033 = JAM.call(a$$544.find, a$$544, [b$$515], JAM.policy.p3);
      this.buttonElement = v31033;
      var v16269 = this.buttonElement.length;
      if (!v16269) {
        var v26685;
        if (a$$544.length) {
          v26685 = JAM.call(a$$544.siblings, a$$544, [], JAM.policy.p3);
        } else {
          var v28036 = this.element;
          v26685 = JAM.call(v28036.siblings, v28036, [], JAM.policy.p3);
        }
        a$$544 = v26685;
        var v31034 = JAM.call(a$$544.filter, a$$544, [b$$515], JAM.policy.p3);
        this.buttonElement = v31034;
        var v24738 = this.buttonElement.length;
        if (!v24738) {
          var v31035 = JAM.call(a$$544.find, a$$544, [b$$515], JAM.policy.p3);
          this.buttonElement = v31035;
        }
      }
      var v10662 = this.element;
      JAM.call(v10662.addClass, v10662, ["ui-helper-hidden-accessible"], JAM.policy.p3);
      var v3901 = this.element;
      var c$$413 = JAM.call(v3901.is, v3901, [":checked"], JAM.policy.p3);
      if (c$$413) {
        var v16270 = this.buttonElement;
        JAM.call(v16270.addClass, v16270, ["ui-state-active"], JAM.policy.p3);
      }
      var v10663 = this.buttonElement;
      JAM.call(v10663.attr, v10663, ["aria-pressed", c$$413], JAM.policy.p3);
    } else {
      this.buttonElement = this.element;
    }
    return;
  }
  function v1564() {
    function v1563(b$$514) {
      var v3903 = b$$514.keyCode === a$$540.ui.keyCode.SPACE;
      if (v3903) {
        var v10666 = JAM.call(a$$540, null, [this], JAM.policy.p3);
        JAM.call(v10666.click, v10666, [], JAM.policy.p3);
      }
      return;
    }
    function v1562() {
      var v3904 = JAM.call(a$$540, null, [this], JAM.policy.p3);
      JAM.call(v3904.removeClass, v3904, ["ui-state-active"], JAM.policy.p3);
      return;
    }
    function v1561(b$$513) {
      if (h$$131.disabled) {
        return!1;
      }
      var v10667 = b$$513.keyCode == a$$540.ui.keyCode.SPACE;
      if (!v10667) {
        v10667 = b$$513.keyCode == a$$540.ui.keyCode.ENTER;
      }
      var v3906 = v10667;
      if (v3906) {
        var v10668 = JAM.call(a$$540, null, [this], JAM.policy.p3);
        JAM.call(v10668.addClass, v10668, ["ui-state-active"], JAM.policy.p3);
      }
      return;
    }
    function v1560() {
      if (h$$131.disabled) {
        return!1;
      }
      var v3908 = JAM.call(a$$540, null, [this], JAM.policy.p3);
      JAM.call(v3908.removeClass, v3908, ["ui-state-active"], JAM.policy.p3);
      return;
    }
    function v1559() {
      function v1558() {
        c$$410 = null;
        return;
      }
      if (h$$131.disabled) {
        return!1;
      }
      var v16277 = JAM.call(a$$540, null, [this], JAM.policy.p3);
      JAM.call(v16277.addClass, v16277, ["ui-state-active"], JAM.policy.p3);
      c$$410 = this;
      var v10669 = JAM.call(a$$540, null, [document], JAM.policy.p3);
      JAM.call(v10669.one, v10669, ["mouseup", v1558], JAM.policy.p3);
      return;
    }
    function v1557() {
      function v1556() {
        var v10670 = JAM.call(a$$540, null, [this], JAM.policy.p3);
        return JAM.call(v10670.button, v10670, ["widget"], JAM.policy.p3)[0];
      }
      var v10671 = h$$131.disabled;
      if (!v10671) {
        v10671 = f$$134;
      }
      if (v10671) {
        return!1;
      }
      var v10672 = JAM.call(a$$540, null, [this], JAM.policy.p3);
      JAM.call(v10672.addClass, v10672, ["ui-state-active"], JAM.policy.p3);
      var v10673 = b$$512.buttonElement;
      JAM.call(v10673.attr, v10673, ["aria-pressed", "true"], JAM.policy.p3);
      var c$$412 = b$$512.element[0];
      var v20400 = k$$64(c$$412);
      var v16279 = JAM.call(v20400.not, v20400, [c$$412], JAM.policy.p3);
      var v10674 = JAM.call(v16279.map, v16279, [v1556], JAM.policy.p3);
      var v3913 = JAM.call(v10674.removeClass, v10674, ["ui-state-active"], JAM.policy.p3);
      JAM.call(v3913.attr, v3913, ["aria-pressed", "false"], JAM.policy.p3);
      return;
    }
    function v1555() {
      var v10675 = h$$131.disabled;
      if (!v10675) {
        v10675 = f$$134;
      }
      if (v10675) {
        return!1;
      }
      var v10676 = JAM.call(a$$540, null, [this], JAM.policy.p3);
      JAM.call(v10676.toggleClass, v10676, ["ui-state-active"], JAM.policy.p3);
      var v10677 = b$$512.buttonElement;
      JAM.call(v10677.attr, v10677, ["aria-pressed", b$$512.element[0].checked], JAM.policy.p3);
      return;
    }
    function v1554(a$$543) {
      if (h$$131.disabled) {
        return;
      }
      var v10679 = d$$317 !== a$$543.pageX;
      if (!v10679) {
        v10679 = e$$282 !== a$$543.pageY;
      }
      if (v10679) {
        f$$134 = !0;
      }
      return;
    }
    function v1553(a$$542) {
      if (h$$131.disabled) {
        return;
      }
      f$$134 = !1;
      d$$317 = a$$542.pageX;
      e$$282 = a$$542.pageY;
      return;
    }
    function v1552() {
      if (f$$134) {
        return;
      }
      JAM.call(b$$512.refresh, b$$512, [], JAM.policy.p3);
      return;
    }
    function v1551() {
      var v3918 = b$$512.buttonElement;
      JAM.call(v3918.removeClass, v3918, [m$$43], JAM.policy.p3);
      return;
    }
    function v1550() {
      var v3919 = b$$512.buttonElement;
      JAM.call(v3919.addClass, v3919, [m$$43], JAM.policy.p3);
      return;
    }
    function v1549(a$$541) {
      var v3920 = h$$131.disabled;
      if (v3920) {
        JAM.call(a$$541.preventDefault, a$$541, [], JAM.policy.p3);
        JAM.call(a$$541.stopImmediatePropagation, a$$541, [], JAM.policy.p3);
      }
      return;
    }
    function v1548() {
      if (h$$131.disabled) {
        return;
      }
      var v3922 = JAM.call(a$$540, null, [this], JAM.policy.p3);
      JAM.call(v3922.removeClass, v3922, [l$$72], JAM.policy.p3);
      return;
    }
    function v1547() {
      if (h$$131.disabled) {
        return;
      }
      var v10680 = JAM.call(a$$540, null, [this], JAM.policy.p3);
      JAM.call(v10680.addClass, v10680, ["ui-state-hover"], JAM.policy.p3);
      var v10681 = this === c$$410;
      if (v10681) {
        var v16285 = JAM.call(a$$540, null, [this], JAM.policy.p3);
        JAM.call(v16285.addClass, v16285, ["ui-state-active"], JAM.policy.p3);
      }
      return;
    }
    var v26688 = this.element;
    var v24741 = JAM.call(v26688.closest, v26688, ["form"], JAM.policy.p3);
    var v20402 = JAM.call(v24741.unbind, v24741, ["reset.button"], JAM.policy.p3);
    JAM.call(v20402.bind, v20402, ["reset.button", j$$95], JAM.policy.p3);
    var v20403;
    if (typeof this.options.disabled != "boolean") {
      var v24742 = this.options;
      var v28918 = this.element;
      v20403 = v24742.disabled = !!JAM.call(v28918.propAttr, v28918, ["disabled"], JAM.policy.p3);
    } else {
      var v24743 = this.element;
      v20403 = JAM.call(v24743.propAttr, v24743, ["disabled", this.options.disabled], JAM.policy.p3);
    }
    v20403;
    JAM.call(this._determineButtonType, this, [], JAM.policy.p3);
    var v20404 = this.buttonElement;
    this.hasTitle = !!JAM.call(v20404.attr, v20404, ["title"], JAM.policy.p3);
    var b$$512 = this;
    var h$$131 = this.options;
    var v3924 = this.type === "checkbox";
    if (!v3924) {
      v3924 = this.type === "radio";
    }
    var i$$187 = v3924;
    var v10686;
    if (i$$187) {
      v10686 = "";
    } else {
      v10686 = " ui-state-active";
    }
    var l$$72 = "ui-state-hover" + v10686;
    var m$$43 = "ui-state-focus";
    var v28040 = h$$131.label === null;
    if (v28040) {
      var v28920 = h$$131;
      var v29509 = this.buttonElement;
      var v31036 = JAM.call(v29509.html, v29509, [], JAM.policy.p3);
      v28920.label = v31036;
    }
    var v30112 = this.buttonElement;
    var v29858 = JAM.call(v30112.addClass, v30112, [g$$159], JAM.policy.p3);
    var v29510 = JAM.call(v29858.attr, v29858, ["role", "button"], JAM.policy.p3);
    var v28921 = JAM.call(v29510.bind, v29510, ["mouseenter.button", v1547], JAM.policy.p3);
    var v28041 = JAM.call(v28921.bind, v28921, ["mouseleave.button", v1548], JAM.policy.p3);
    JAM.call(v28041.bind, v28041, ["click.button", v1549], JAM.policy.p3);
    var v28042 = this.element;
    var v26692 = JAM.call(v28042.bind, v28042, ["focus.button", v1550], JAM.policy.p3);
    JAM.call(v26692.bind, v26692, ["blur.button", v1551], JAM.policy.p3);
    if (i$$187) {
      var v28043 = this.element;
      JAM.call(v28043.bind, v28043, ["change.button", v1552], JAM.policy.p3);
      var v28922 = this.buttonElement;
      var v28044 = JAM.call(v28922.bind, v28922, ["mousedown.button", v1553], JAM.policy.p3);
      JAM.call(v28044.bind, v28044, ["mouseup.button", v1554], JAM.policy.p3);
    }
    var v20405;
    if (this.type === "checkbox") {
      var v24746 = this.buttonElement;
      v20405 = JAM.call(v24746.bind, v24746, ["click.button", v1555], JAM.policy.p3);
    } else {
      var v24747;
      if (this.type === "radio") {
        var v26694 = this.buttonElement;
        v24747 = JAM.call(v26694.bind, v26694, ["click.button", v1557], JAM.policy.p3);
      } else {
        var v29859 = this.buttonElement;
        var v29511 = JAM.call(v29859.bind, v29859, ["mousedown.button", v1559], JAM.policy.p3);
        var v28923 = JAM.call(v29511.bind, v29511, ["mouseup.button", v1560], JAM.policy.p3);
        var v28046 = JAM.call(v28923.bind, v28923, ["keydown.button", v1561], JAM.policy.p3);
        JAM.call(v28046.bind, v28046, ["keyup.button", v1562], JAM.policy.p3);
        var v28924 = this.buttonElement;
        var v28047 = JAM.call(v28924.is, v28924, ["a"], JAM.policy.p3);
        if (v28047) {
          var v28925 = this.buttonElement;
          v28047 = JAM.call(v28925.keyup, v28925, [v1563], JAM.policy.p3);
        }
        v24747 = v28047;
      }
      v20405 = v24747;
    }
    v20405;
    JAM.call(this._setOption, this, ["disabled", h$$131.disabled], JAM.policy.p3);
    JAM.call(this._resetButton, this, [], JAM.policy.p3);
    return;
  }
  function k$$64(b$$511) {
    function v1545() {
      return!this.form;
    }
    var c$$411 = b$$511.name;
    var d$$318 = b$$511.form;
    var e$$283 = JAM.call(a$$540, null, [[]], JAM.policy.p3);
    if (c$$411) {
      var v16288;
      if (d$$318) {
        var v20406 = JAM.call(a$$540, null, [d$$318], JAM.policy.p3);
        v16288 = e$$283 = JAM.call(v20406.find, v20406, ["[name='" + c$$411 + "']"], JAM.policy.p3);
      } else {
        var v20408 = JAM.call(a$$540, null, ["[name='" + c$$411 + "']", b$$511.ownerDocument], JAM.policy.p3);
        v16288 = e$$283 = JAM.call(v20408.filter, v20408, [v1545], JAM.policy.p3);
      }
      v16288;
    }
    return e$$283;
  }
  function j$$95() {
    function v1546() {
      JAM.call(b$$510.button, b$$510, ["refresh"], JAM.policy.p3);
      return;
    }
    var v3927 = JAM.call(a$$540, null, [this], JAM.policy.p3);
    var b$$510 = JAM.call(v3927.find, v3927, [":ui-button"], JAM.policy.p3);
    JAM.call(setTimeout, null, [v1546, 1]);
    return;
  }
  var c$$410;
  var d$$317;
  var e$$282;
  var f$$134;
  var g$$159 = "ui-button ui-widget ui-state-default ui-corner-all";
  var h$$130 = "ui-state-hover ui-state-active ";
  var i$$186 = "ui-button-icons-only ui-button-icon-only ui-button-text-icons ui-button-text-icon-primary ui-button-text-icon-secondary ui-button-text-only";
  JAM.call(a$$540.widget, a$$540, ["ui.button", {options:{disabled:null, text:!0, label:null, icons:{primary:null, secondary:null}}, _create:v1564, _determineButtonType:v1565, widget:v1566, destroy:v1567, _setOption:v1568, refresh:v1570, _resetButton:v1571}], JAM.policy.p3);
  JAM.call(a$$540.widget, a$$540, ["ui.buttonset", {options:{items:":button, :submit, :reset, :checkbox, :radio, a, :data(button)"}, _create:v1572, _init:v1573, _setOption:v1574, refresh:v1576, destroy:v1578}], JAM.policy.p3);
  return;
}
function v1544(a$$534) {
  function v1543(a$$539) {
    JAM.call(this._trigger, this, ["selected", a$$539, {item:this.active}], JAM.policy.p3);
    return;
  }
  function v1542() {
    var v10690 = this.element;
    var v3929 = JAM.call(v10690.height, v10690, [], JAM.policy.p3);
    var v10691 = this.element;
    var v16291;
    if (a$$534.fn.prop) {
      v16291 = "prop";
    } else {
      v16291 = "attr";
    }
    return v3929 < JAM.call(v10691[v16291], v10691, ["scrollHeight"], JAM.policy.p3);
  }
  function v1541(b$$507) {
    function v1540() {
      var v24753 = JAM.call(a$$534, null, [this], JAM.policy.p3);
      var v3931 = JAM.call(v24753.offset, v24753, [], JAM.policy.p3).top - c$$409 + d$$316;
      var v10694 = JAM.call(a$$534, null, [this], JAM.policy.p3);
      var b$$508 = v3931 - JAM.call(v10694.height, v10694, [], JAM.policy.p3);
      var v3933 = b$$508 < 10;
      if (v3933) {
        v3933 = b$$508 > -10;
      }
      return v3933;
    }
    if (JAM.call(this.hasScroll, this, [], JAM.policy.p3)) {
      var v10695 = !this.active;
      if (!v10695) {
        v10695 = JAM.call(this.first, this, [], JAM.policy.p3);
      }
      if (v10695) {
        var v10696 = this.element;
        JAM.call(this.activate, this, [b$$507, JAM.call(v10696.children, v10696, [".ui-menu-item:last"], JAM.policy.p3)], JAM.policy.p3);
        return;
      }
      var v10697 = this.active;
      var c$$409 = JAM.call(v10697.offset, v10697, [], JAM.policy.p3).top;
      var v3937 = this.element;
      var d$$316 = JAM.call(v3937.height, v3937, [], JAM.policy.p3);
      var v10698 = this.element;
      var v3938 = JAM.call(v10698.children, v10698, [".ui-menu-item"], JAM.policy.p3);
      var e$$281 = JAM.call(v3938.filter, v3938, [v1540], JAM.policy.p3);
      var v10699 = e$$281.length;
      if (!v10699) {
        var v16295 = this.element;
        e$$281 = JAM.call(v16295.children, v16295, [".ui-menu-item:first"], JAM.policy.p3);
      }
      JAM.call(this.activate, this, [b$$507, e$$281], JAM.policy.p3);
    } else {
      var v16297 = this.element;
      var v10700 = JAM.call(v16297.children, v16297, [".ui-menu-item"], JAM.policy.p3);
      var v16298;
      var v24754 = !this.active;
      if (!v24754) {
        v24754 = JAM.call(this.first, this, [], JAM.policy.p3);
      }
      if (v24754) {
        v16298 = ":last";
      } else {
        v16298 = ":first";
      }
      JAM.call(this.activate, this, [b$$507, JAM.call(v10700.filter, v10700, [v16298], JAM.policy.p3)], JAM.policy.p3);
    }
    return;
  }
  function v1539(b$$505) {
    function v1538() {
      var v24755 = JAM.call(a$$534, null, [this], JAM.policy.p3);
      var v3941 = JAM.call(v24755.offset, v24755, [], JAM.policy.p3).top - c$$408 - d$$315;
      var v10703 = JAM.call(a$$534, null, [this], JAM.policy.p3);
      var b$$506 = v3941 + JAM.call(v10703.height, v10703, [], JAM.policy.p3);
      var v3943 = b$$506 < 10;
      if (v3943) {
        v3943 = b$$506 > -10;
      }
      return v3943;
    }
    if (JAM.call(this.hasScroll, this, [], JAM.policy.p3)) {
      var v10704 = !this.active;
      if (!v10704) {
        v10704 = JAM.call(this.last, this, [], JAM.policy.p3);
      }
      if (v10704) {
        var v10705 = this.element;
        JAM.call(this.activate, this, [b$$505, JAM.call(v10705.children, v10705, [".ui-menu-item:first"], JAM.policy.p3)], JAM.policy.p3);
        return;
      }
      var v10706 = this.active;
      var c$$408 = JAM.call(v10706.offset, v10706, [], JAM.policy.p3).top;
      var v3947 = this.element;
      var d$$315 = JAM.call(v3947.height, v3947, [], JAM.policy.p3);
      var v10707 = this.element;
      var v3948 = JAM.call(v10707.children, v10707, [".ui-menu-item"], JAM.policy.p3);
      var e$$280 = JAM.call(v3948.filter, v3948, [v1538], JAM.policy.p3);
      var v10708 = e$$280.length;
      if (!v10708) {
        var v16302 = this.element;
        e$$280 = JAM.call(v16302.children, v16302, [".ui-menu-item:last"], JAM.policy.p3);
      }
      JAM.call(this.activate, this, [b$$505, e$$280], JAM.policy.p3);
    } else {
      var v16304 = this.element;
      var v10709 = JAM.call(v16304.children, v16304, [".ui-menu-item"], JAM.policy.p3);
      var v16305;
      var v24756 = !this.active;
      if (!v24756) {
        v24756 = JAM.call(this.last, this, [], JAM.policy.p3);
      }
      if (v24756) {
        v16305 = ":first";
      } else {
        v16305 = ":last";
      }
      JAM.call(this.activate, this, [b$$505, JAM.call(v10709.filter, v10709, [v16305], JAM.policy.p3)], JAM.policy.p3);
    }
    return;
  }
  function v1537(a$$538, b$$504, c$$407) {
    if (!this.active) {
      var v10712 = this.element;
      JAM.call(this.activate, this, [c$$407, JAM.call(v10712.children, v10712, [b$$504], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    var v10713 = this.active;
    var v3953 = JAM.call(v10713[a$$538 + "All"], v10713, [".ui-menu-item"], JAM.policy.p3);
    var d$$314 = JAM.call(v3953.eq, v3953, [0], JAM.policy.p3);
    var v3954;
    if (d$$314.length) {
      v3954 = JAM.call(this.activate, this, [c$$407, d$$314], JAM.policy.p3);
    } else {
      var v16306 = this.element;
      v3954 = JAM.call(this.activate, this, [c$$407, JAM.call(v16306.children, v16306, [b$$504], JAM.policy.p3)], JAM.policy.p3);
    }
    v3954;
    return;
  }
  function v1536() {
    var v3955 = this.active;
    if (v3955) {
      var v20416 = this.active;
      v3955 = !JAM.call(v20416.nextAll, v20416, [".ui-menu-item"], JAM.policy.p3).length;
    }
    return v3955;
  }
  function v1535() {
    var v3956 = this.active;
    if (v3956) {
      var v20417 = this.active;
      v3956 = !JAM.call(v20417.prevAll, v20417, [".ui-menu-item"], JAM.policy.p3).length;
    }
    return v3956;
  }
  function v1534(a$$537) {
    JAM.call(this.move, this, ["prev", ".ui-menu-item:last", a$$537], JAM.policy.p3);
    return;
  }
  function v1533(a$$536) {
    JAM.call(this.move, this, ["next", ".ui-menu-item:first", a$$536], JAM.policy.p3);
    return;
  }
  function v1532() {
    if (!this.active) {
      return;
    }
    var v24757 = this.active;
    var v20418 = JAM.call(v24757.children, v24757, ["a"], JAM.policy.p3);
    var v16309 = JAM.call(v20418.removeClass, v20418, ["ui-state-hover"], JAM.policy.p3);
    JAM.call(v16309.removeAttr, v16309, ["id"], JAM.policy.p3);
    JAM.call(this._trigger, this, ["blur"], JAM.policy.p3);
    this.active = null;
    return;
  }
  function v1531(a$$535, b$$503) {
    JAM.call(this.deactivate, this, [], JAM.policy.p3);
    if (JAM.call(this.hasScroll, this, [], JAM.policy.p3)) {
      var v3958 = JAM.call(b$$503.offset, b$$503, [], JAM.policy.p3).top;
      var v16310 = this.element;
      var c$$406 = v3958 - JAM.call(v16310.offset, v16310, [], JAM.policy.p3).top;
      var v3960 = this.element;
      var d$$313 = JAM.call(v3960.scrollTop, v3960, [], JAM.policy.p3);
      var v3961 = this.element;
      var e$$279 = JAM.call(v3961.height, v3961, [], JAM.policy.p3);
      var v3962;
      if (c$$406 < 0) {
        var v10722 = this.element;
        v3962 = JAM.call(v10722.scrollTop, v10722, [d$$313 + c$$406], JAM.policy.p3);
      } else {
        var v10724 = c$$406 >= e$$279;
        if (v10724) {
          var v16311 = this.element;
          v10724 = JAM.call(v16311.scrollTop, v16311, [d$$313 + c$$406 - e$$279 + JAM.call(b$$503.height, b$$503, [], JAM.policy.p3)], JAM.policy.p3);
        }
        v3962 = v10724;
      }
      v3962;
    }
    var v24759 = JAM.call(b$$503.eq, b$$503, [0], JAM.policy.p3);
    var v20421 = JAM.call(v24759.children, v24759, ["a"], JAM.policy.p3);
    var v16313 = JAM.call(v20421.addClass, v20421, ["ui-state-hover"], JAM.policy.p3);
    var v10726 = JAM.call(v16313.attr, v16313, ["id", "ui-active-menuitem"], JAM.policy.p3);
    var v31037 = JAM.call(v10726.end, v10726, [], JAM.policy.p3);
    this.active = v31037;
    JAM.call(this._trigger, this, ["focus", a$$535, {item:b$$503}], JAM.policy.p3);
    return;
  }
  function v1530() {
    function v1529() {
      JAM.call(b$$502.deactivate, b$$502, [], JAM.policy.p3);
      return;
    }
    function v1528(c$$405) {
      var v10728 = JAM.call(a$$534, null, [this], JAM.policy.p3);
      JAM.call(b$$502.activate, b$$502, [c$$405, JAM.call(v10728.parent, v10728, [], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    var b$$502 = this;
    var v16314 = this.element;
    var v10729 = JAM.call(v16314.children, v16314, ["li:not(.ui-menu-item):has(a)"], JAM.policy.p3);
    var v3965 = JAM.call(v10729.addClass, v10729, ["ui-menu-item"], JAM.policy.p3);
    var c$$404 = JAM.call(v3965.attr, v3965, ["role", "menuitem"], JAM.policy.p3);
    var v20422 = JAM.call(c$$404.children, c$$404, ["a"], JAM.policy.p3);
    var v16315 = JAM.call(v20422.addClass, v20422, ["ui-corner-all"], JAM.policy.p3);
    var v10730 = JAM.call(v16315.attr, v16315, ["tabindex", -1], JAM.policy.p3);
    var v3966 = JAM.call(v10730.mouseenter, v10730, [v1528], JAM.policy.p3);
    JAM.call(v3966.mouseleave, v3966, [v1529], JAM.policy.p3);
    return;
  }
  function v1527() {
    function v1526(c$$403) {
      var v20423 = JAM.call(a$$534, null, [c$$403.target], JAM.policy.p3);
      if (!JAM.call(v20423.closest, v20423, [".ui-menu-item a"], JAM.policy.p3).length) {
        return;
      }
      JAM.call(c$$403.preventDefault, c$$403, [], JAM.policy.p3);
      JAM.call(b$$501.select, b$$501, [c$$403], JAM.policy.p3);
      return;
    }
    var b$$501 = this;
    var v20424 = this.element;
    var v16317 = JAM.call(v20424.addClass, v20424, ["ui-menu ui-widget ui-widget-content ui-corner-all"], JAM.policy.p3);
    var v10732 = JAM.call(v16317.attr, v16317, [{role:"listbox", "aria-activedescendant":"ui-active-menuitem"}], JAM.policy.p3);
    JAM.call(v10732.click, v10732, [v1526], JAM.policy.p3);
    JAM.call(this.refresh, this, [], JAM.policy.p3);
    return;
  }
  JAM.call(a$$534.widget, a$$534, ["ui.menu", {_create:v1527, refresh:v1530, activate:v1531, deactivate:v1532, next:v1533, previous:v1534, first:v1535, last:v1536, move:v1537, nextPage:v1539, previousPage:v1541, hasScroll:v1542, select:v1543}], JAM.policy.p3);
  return;
}
function v1525(a$$515, b$$485) {
  function v1524(b$$500, c$$402) {
    function v1523(a$$533) {
      var v16319 = a$$533.label;
      if (!v16319) {
        v16319 = a$$533.value;
      }
      var v10733 = v16319;
      if (!v10733) {
        v10733 = a$$533;
      }
      return JAM.call(d$$312.test, d$$312, [v10733], JAM.policy.p3);
    }
    var v10734 = a$$515.ui.autocomplete;
    var d$$312 = new RegExp(JAM.call(v10734.escapeRegex, v10734, [c$$402], JAM.policy.p3), "i");
    return JAM.call(a$$515.grep, a$$515, [b$$500, v1523], JAM.policy.p3);
  }
  function v1522(a$$532) {
    return JAM.call(a$$532.replace, a$$532, [/[-[\]{}()*+?.,\\^$|#\s]/g, "\\$&"], JAM.policy.p3);
  }
  function v1521(a$$531, b$$499) {
    var v10735 = !this.isMultiLine;
    if (!v10735) {
      var v16323 = this.menu.element;
      v10735 = JAM.call(v16323.is, v16323, [":visible"], JAM.policy.p3);
    }
    if (v10735) {
      JAM.call(this._move, this, [a$$531, b$$499], JAM.policy.p3);
      JAM.call(b$$499.preventDefault, b$$499, [], JAM.policy.p3);
    }
    return;
  }
  function v1520() {
    return this.menu.element;
  }
  function v1519(a$$530, b$$498) {
    var v16325 = this.menu.element;
    if (!JAM.call(v16325.is, v16325, [":visible"], JAM.policy.p3)) {
      JAM.call(this.search, this, [null, b$$498], JAM.policy.p3);
      return;
    }
    var v20428 = this.menu;
    var v16326 = JAM.call(v20428.first, v20428, [], JAM.policy.p3);
    if (v16326) {
      v16326 = JAM.call(/^previous/.test, /^previous/, [a$$530], JAM.policy.p3);
    }
    var v10737 = v16326;
    if (!v10737) {
      var v20429 = this.menu;
      var v16327 = JAM.call(v20429.last, v20429, [], JAM.policy.p3);
      if (v16327) {
        v16327 = JAM.call(/^next/.test, /^next/, [a$$530], JAM.policy.p3);
      }
      v10737 = v16327;
    }
    if (v10737) {
      var v10738 = this.element;
      JAM.call(v10738.val, v10738, [this.term], JAM.policy.p3);
      var v10740 = this.menu;
      JAM.call(v10740.deactivate, v10740, [], JAM.policy.p3);
      return;
    }
    var v3975 = this.menu;
    JAM.call(v3975[a$$530], v3975, [b$$498], JAM.policy.p3);
    return;
  }
  function v1518(b$$497, c$$401) {
    var v16329 = JAM.call(a$$515, null, ["<li></li>"], JAM.policy.p3);
    var v10741 = JAM.call(v16329.data, v16329, ["item.autocomplete", c$$401], JAM.policy.p3);
    var v16330 = JAM.call(a$$515, null, ["<a></a>"], JAM.policy.p3);
    var v3976 = JAM.call(v10741.append, v10741, [JAM.call(v16330.text, v16330, [c$$401.label], JAM.policy.p3)], JAM.policy.p3);
    return JAM.call(v3976.appendTo, v3976, [b$$497], JAM.policy.p3);
  }
  function v1517(b$$496, c$$399) {
    function v1516(a$$529, c$$400) {
      JAM.call(d$$311._renderItem, d$$311, [b$$496, c$$400], JAM.policy.p3);
      return;
    }
    var d$$311 = this;
    JAM.call(a$$515.each, a$$515, [c$$399, v1516], JAM.policy.p3);
    return;
  }
  function v1515() {
    var a$$528 = this.menu.element;
    var v20430 = JAM.call(a$$528.width, a$$528, [""], JAM.policy.p3);
    var v10743 = JAM.call(v20430.outerWidth, v20430, [], JAM.policy.p3) + 1;
    var v16333 = this.element;
    JAM.call(a$$528.outerWidth, a$$528, [JAM.call(Math.max, Math, [v10743, JAM.call(v16333.outerWidth, v16333, [], JAM.policy.p3)], JAM.policy.p3)], JAM.policy.p3);
    return;
  }
  function v1514(b$$495) {
    var v10745 = this.menu.element;
    var v3979 = JAM.call(v10745.empty, v10745, [], JAM.policy.p3);
    var v16335 = this.element;
    var c$$398 = JAM.call(v3979.zIndex, v3979, [JAM.call(v16335.zIndex, v16335, [], JAM.policy.p3) + 1], JAM.policy.p3);
    JAM.call(this._renderMenu, this, [c$$398, b$$495], JAM.policy.p3);
    var v28048 = this.menu;
    JAM.call(v28048.deactivate, v28048, [], JAM.policy.p3);
    var v26701 = this.menu;
    JAM.call(v26701.refresh, v26701, [], JAM.policy.p3);
    JAM.call(c$$398.show, c$$398, [], JAM.policy.p3);
    JAM.call(this._resizeMenu, this, [], JAM.policy.p3);
    JAM.call(c$$398.position, c$$398, [JAM.call(a$$515.extend, a$$515, [{of:this.element}, this.options.position], JAM.policy.p3)], JAM.policy.p3);
    var v10747 = this.options.autoFocus;
    if (v10747) {
      var v16338 = this.menu;
      JAM.call(v16338.next, v16338, [JAM.new(a$$515.Event, ["mouseover"])], JAM.policy.p3);
    }
    return;
  }
  function v1513(b$$493) {
    function v1512(b$$494) {
      var v3981;
      if (typeof b$$494 == "string") {
        v3981 = {label:b$$494, value:b$$494};
      } else {
        var v20434 = b$$494.label;
        if (!v20434) {
          v20434 = b$$494.value;
        }
        var v16341 = v20434;
        var v20435 = b$$494.value;
        if (!v20435) {
          v20435 = b$$494.label;
        }
        v3981 = JAM.call(a$$515.extend, a$$515, [{label:v16341, value:v20435}, b$$494], JAM.policy.p3);
      }
      return v3981;
    }
    var v3982;
    var v20436 = b$$493.length;
    if (v20436) {
      v20436 = b$$493[0].label;
    }
    var v16343 = v20436;
    if (v16343) {
      v16343 = b$$493[0].value;
    }
    if (v16343) {
      v3982 = b$$493;
    } else {
      v3982 = JAM.call(a$$515.map, a$$515, [b$$493, v1512], JAM.policy.p3);
    }
    return v3982;
  }
  function v1511(a$$527) {
    var v10751 = this.previous;
    var v16344 = this.element;
    var v3983 = v10751 !== JAM.call(v16344.val, v16344, [], JAM.policy.p3);
    if (v3983) {
      JAM.call(this._trigger, this, ["change", a$$527, {item:this.selectedItem}], JAM.policy.p3);
    }
    return;
  }
  function v1510(a$$526) {
    clearTimeout(this.closing);
    var v16346 = this.menu.element;
    var v10755 = JAM.call(v16346.is, v16346, [":visible"], JAM.policy.p3);
    if (v10755) {
      var v24766 = this.menu.element;
      JAM.call(v24766.hide, v24766, [], JAM.policy.p3);
      var v24767 = this.menu;
      JAM.call(v24767.deactivate, v24767, [], JAM.policy.p3);
      JAM.call(this._trigger, this, ["close", a$$526], JAM.policy.p3);
    }
    return;
  }
  function v1509(a$$525) {
    var v3984;
    var v20439 = !this.options.disabled;
    if (v20439) {
      v20439 = a$$525;
    }
    var v16347 = v20439;
    if (v16347) {
      v16347 = a$$525.length;
    }
    if (v16347) {
      a$$525 = JAM.call(this._normalize, this, [a$$525], JAM.policy.p3);
      JAM.call(this._suggest, this, [a$$525], JAM.policy.p3);
      v3984 = JAM.call(this._trigger, this, ["open"], JAM.policy.p3);
    } else {
      v3984 = JAM.call(this.close, this, [], JAM.policy.p3);
    }
    v3984;
    return;
  }
  function v1508() {
    function v1507(d$$310) {
      var v16348 = b$$492 === c$$388;
      if (v16348) {
        JAM.call(a$$524.__response, a$$524, [d$$310], JAM.policy.p3);
      }
      a$$524.pending--;
      var v10757 = a$$524.pending;
      if (!v10757) {
        var v16349 = a$$524.element;
        JAM.call(v16349.removeClass, v16349, ["ui-autocomplete-loading"], JAM.policy.p3);
      }
      return;
    }
    var a$$524 = this;
    var b$$492 = c$$388 = c$$388 + 1;
    return v1507;
  }
  function v1506(a$$523) {
    this.pending++;
    var v16351 = this.element;
    JAM.call(v16351.addClass, v16351, ["ui-autocomplete-loading"], JAM.policy.p3);
    JAM.call(this.source, this, [{term:a$$523}, JAM.call(this._response, this, [], JAM.policy.p3)], JAM.policy.p3);
    return;
  }
  function v1505(a$$522, b$$491) {
    var v10760;
    if (a$$522 != null) {
      v10760 = a$$522;
    } else {
      var v16352 = this.element;
      v10760 = JAM.call(v16352.val, v16352, [], JAM.policy.p3);
    }
    a$$522 = v10760;
    var v10761 = this.element;
    var v31038 = JAM.call(v10761.val, v10761, [], JAM.policy.p3);
    this.term = v31038;
    if (a$$522.length < this.options.minLength) {
      return JAM.call(this.close, this, [b$$491], JAM.policy.p3);
    }
    clearTimeout(this.closing);
    if (JAM.call(this._trigger, this, ["search", b$$491], JAM.policy.p3) === !1) {
      return;
    }
    return JAM.call(this._search, this, [a$$522], JAM.policy.p3);
  }
  function v1504() {
    function v1503(c$$397, e$$278) {
      function v1502() {
        JAM.call(e$$278, null, [[]], JAM.policy.p3);
        return;
      }
      function v1501(a$$521, b$$490) {
        JAM.call(e$$278, null, [a$$521], JAM.policy.p3);
        return;
      }
      var v10766 = b$$488.xhr;
      if (v10766) {
        var v16355 = b$$488.xhr;
        JAM.call(v16355.abort, v16355, [], JAM.policy.p3);
      }
      var v10767 = b$$488;
      var v31039 = JAM.call(a$$515.ajax, a$$515, [{url:d$$308, data:c$$397, dataType:"json", success:v1501, error:v1502}], JAM.policy.p3);
      v10767.xhr = v31039;
      return;
    }
    function v1500(b$$489, d$$309) {
      var v10768 = a$$515.ui.autocomplete;
      JAM.call(d$$309, null, [JAM.call(v10768.filter, v10768, [c$$396, b$$489.term], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    var b$$488 = this;
    var c$$396;
    var d$$308;
    var v3989;
    if (JAM.call(a$$515.isArray, a$$515, [this.options.source], JAM.policy.p3)) {
      c$$396 = this.options.source;
      v3989 = this.source = v1500;
    } else {
      var v10770;
      if (typeof this.options.source == "string") {
        d$$308 = this.options.source;
        v10770 = this.source = v1503;
      } else {
        v10770 = this.source = this.options.source;
      }
      v3989 = v10770;
    }
    v3989;
    return;
  }
  function v1499(b$$487, c$$395) {
    var v20443 = a$$515.Widget.prototype._setOption;
    JAM.call(v20443.apply, v20443, [this, arguments], JAM.policy.p3);
    var v20444 = b$$487 === "source";
    if (v20444) {
      JAM.call(this._initSource, this, [], JAM.policy.p3);
    }
    var v16362 = b$$487 === "appendTo";
    if (v16362) {
      var v20445 = this.menu.element;
      JAM.call(v20445.appendTo, v20445, [JAM.call(a$$515, null, [c$$395 || "body", this.element[0].ownerDocument], JAM.policy.p3)[0]], JAM.policy.p3);
    }
    var v20447 = b$$487 === "disabled";
    if (v20447) {
      v20447 = c$$395;
    }
    var v16363 = v20447;
    if (v16363) {
      v16363 = this.xhr;
    }
    var v10772 = v16363;
    if (v10772) {
      var v16364 = this.xhr;
      JAM.call(v16364.abort, v16364, [], JAM.policy.p3);
    }
    return;
  }
  function v1498() {
    var v28927 = this.element;
    var v28050 = JAM.call(v28927.removeClass, v28927, ["ui-autocomplete-input"], JAM.policy.p3);
    var v26708 = JAM.call(v28050.removeAttr, v28050, ["autocomplete"], JAM.policy.p3);
    var v24773 = JAM.call(v26708.removeAttr, v26708, ["role"], JAM.policy.p3);
    var v20448 = JAM.call(v24773.removeAttr, v24773, ["aria-autocomplete"], JAM.policy.p3);
    JAM.call(v20448.removeAttr, v20448, ["aria-haspopup"], JAM.policy.p3);
    var v20449 = this.menu.element;
    JAM.call(v20449.remove, v20449, [], JAM.policy.p3);
    var v16365 = JAM.call(a$$515, null, [window], JAM.policy.p3);
    JAM.call(v16365.unbind, v16365, ["beforeunload", this.beforeunloadHandler], JAM.policy.p3);
    var v10773 = a$$515.Widget.prototype.destroy;
    JAM.call(v10773.call, v10773, [this], JAM.policy.p3);
    return;
  }
  function v1497() {
    function v1496() {
      var v3990 = b$$486.element;
      JAM.call(v3990.removeAttr, v3990, ["autocomplete"], JAM.policy.p3);
      return;
    }
    function v1495(a$$520, c$$394) {
      var v16368 = b$$486.menu.element;
      var v10774 = JAM.call(v16368.is, v16368, [":visible"], JAM.policy.p3);
      if (v10774) {
        var v20452 = b$$486.element;
        v10774 = JAM.call(v20452.val, v20452, [], JAM.policy.p3) !== b$$486.term;
      }
      var v3991 = v10774;
      if (v3991) {
        var v10775 = b$$486.element;
        JAM.call(v10775.val, v10775, [b$$486.term], JAM.policy.p3);
      }
      return;
    }
    function v1494(a$$519, d$$307) {
      function v1493() {
        b$$486.previous = f$$133;
        b$$486.selectedItem = e$$277;
        return;
      }
      var v3992 = d$$307.item;
      var e$$277 = JAM.call(v3992.data, v3992, ["item.autocomplete"], JAM.policy.p3);
      var f$$133 = b$$486.previous;
      var v24775 = b$$486.element[0] !== c$$389.activeElement;
      if (v24775) {
        var v28928 = b$$486.element;
        JAM.call(v28928.focus, v28928, [], JAM.policy.p3);
        b$$486.previous = f$$133;
        JAM.call(setTimeout, null, [v1493, 1]);
      }
      var v24776 = !1 !== JAM.call(b$$486._trigger, b$$486, ["select", a$$519, {item:e$$277}], JAM.policy.p3);
      if (v24776) {
        var v26713 = b$$486.element;
        JAM.call(v26713.val, v26713, [e$$277.value], JAM.policy.p3);
      }
      var v20453 = b$$486;
      var v24777 = b$$486.element;
      var v31040 = JAM.call(v24777.val, v24777, [], JAM.policy.p3);
      v20453.term = v31040;
      JAM.call(b$$486.close, b$$486, [a$$519], JAM.policy.p3);
      b$$486.selectedItem = e$$277;
      return;
    }
    function v1492(a$$518, c$$393) {
      var v3993 = c$$393.item;
      var d$$306 = JAM.call(v3993.data, v3993, ["item.autocomplete"], JAM.policy.p3);
      var v10777 = !1 !== JAM.call(b$$486._trigger, b$$486, ["focus", a$$518, {item:d$$306}], JAM.policy.p3);
      if (v10777) {
        v10777 = JAM.call(/^key/.test, /^key/, [a$$518.originalEvent.type], JAM.policy.p3);
      }
      var v3994 = v10777;
      if (v3994) {
        var v10778 = b$$486.element;
        JAM.call(v10778.val, v10778, [d$$306.value], JAM.policy.p3);
      }
      return;
    }
    function v1491(c$$391) {
      function v1490() {
        clearTimeout(b$$486.closing);
        return;
      }
      function v1489() {
        function v1488(c$$392) {
          var v16374 = c$$392.target !== b$$486.element[0];
          if (v16374) {
            v16374 = c$$392.target !== d$$305;
          }
          var v10780 = v16374;
          if (v10780) {
            var v20459 = a$$515.ui;
            v10780 = !JAM.call(v20459.contains, v20459, [d$$305, c$$392.target], JAM.policy.p3);
          }
          var v3996 = v10780;
          if (v3996) {
            JAM.call(b$$486.close, b$$486, [], JAM.policy.p3);
          }
          return;
        }
        var v3997 = JAM.call(a$$515, null, [document], JAM.policy.p3);
        JAM.call(v3997.one, v3997, ["mousedown", v1488], JAM.policy.p3);
        return;
      }
      var d$$305 = b$$486.menu.element[0];
      var v20461 = JAM.call(a$$515, null, [c$$391.target], JAM.policy.p3);
      var v10782 = JAM.call(v20461.closest, v20461, [".ui-menu-item"], JAM.policy.p3).length;
      if (!v10782) {
        JAM.call(setTimeout, null, [v1489, 1]);
      }
      JAM.call(setTimeout, null, [v1490, 13]);
      return;
    }
    function v1487(a$$517) {
      function v1486() {
        JAM.call(b$$486.close, b$$486, [a$$517], JAM.policy.p3);
        JAM.call(b$$486._change, b$$486, [a$$517], JAM.policy.p3);
        return;
      }
      if (b$$486.options.disabled) {
        return;
      }
      clearTimeout(b$$486.searching);
      var v10785 = b$$486;
      var v31041 = JAM.call(setTimeout, null, [v1486, 150]);
      v10785.closing = v31041;
      return;
    }
    function v1485() {
      if (b$$486.options.disabled) {
        return;
      }
      b$$486.selectedItem = null;
      var v10787 = b$$486;
      var v16378 = b$$486.element;
      var v31042 = JAM.call(v16378.val, v16378, [], JAM.policy.p3);
      v10787.previous = v31042;
      return;
    }
    function v1484(a$$516) {
      if (d$$304) {
        d$$304 = !1;
        JAM.call(a$$516.preventDefault, a$$516, [], JAM.policy.p3);
      }
      return;
    }
    function v1483(c$$390) {
      function v1482() {
        var v10788 = b$$486.term;
        var v16379 = b$$486.element;
        var v4001 = v10788 != JAM.call(v16379.val, v16379, [], JAM.policy.p3);
        if (v4001) {
          b$$486.selectedItem = null;
          JAM.call(b$$486.search, b$$486, [null, c$$390], JAM.policy.p3);
        }
        return;
      }
      var v10790 = b$$486.options.disabled;
      if (!v10790) {
        var v16381 = b$$486.element;
        v10790 = JAM.call(v16381.propAttr, v16381, ["readOnly"], JAM.policy.p3);
      }
      if (v10790) {
        return;
      }
      d$$304 = !1;
      var e$$276 = a$$515.ui.keyCode;
      switch(c$$390.keyCode) {
        case e$$276.PAGE_UP:
          JAM.call(b$$486._move, b$$486, ["previousPage", c$$390], JAM.policy.p3);
          break;
        case e$$276.PAGE_DOWN:
          JAM.call(b$$486._move, b$$486, ["nextPage", c$$390], JAM.policy.p3);
          break;
        case e$$276.UP:
          JAM.call(b$$486._keyEvent, b$$486, ["previous", c$$390], JAM.policy.p3);
          break;
        case e$$276.DOWN:
          JAM.call(b$$486._keyEvent, b$$486, ["next", c$$390], JAM.policy.p3);
          break;
        case e$$276.ENTER:
        ;
        case e$$276.NUMPAD_ENTER:
          var v4004 = b$$486.menu.active;
          if (v4004) {
            d$$304 = !0;
            JAM.call(c$$390.preventDefault, c$$390, [], JAM.policy.p3);
          }
        ;
        case e$$276.TAB:
          if (!b$$486.menu.active) {
            return;
          }
          var v4006 = b$$486.menu;
          JAM.call(v4006.select, v4006, [c$$390], JAM.policy.p3);
          break;
        case e$$276.ESCAPE:
          var v10793 = b$$486.element;
          JAM.call(v10793.val, v10793, [b$$486.term], JAM.policy.p3);
          JAM.call(b$$486.close, b$$486, [c$$390], JAM.policy.p3);
          break;
        default:
          clearTimeout(b$$486.searching);
          var v10796 = b$$486;
          var v31043 = JAM.call(setTimeout, null, [v1482, b$$486.options.delay]);
          v10796.searching = v31043;
      }
      return;
    }
    var b$$486 = this;
    var c$$389 = this.element[0].ownerDocument;
    var d$$304;
    var v28053 = this.element;
    var v31044 = JAM.call(v28053.is, v28053, ["textarea"], JAM.policy.p3);
    this.isMultiLine = v31044;
    var v30462 = this.element;
    var v30322 = JAM.call(v30462.addClass, v30462, ["ui-autocomplete-input"], JAM.policy.p3);
    var v30113 = JAM.call(v30322.attr, v30322, ["autocomplete", "off"], JAM.policy.p3);
    var v29860 = JAM.call(v30113.attr, v30113, [{role:"textbox", "aria-autocomplete":"list", "aria-haspopup":"true"}], JAM.policy.p3);
    var v29512 = JAM.call(v29860.bind, v29860, ["keydown.autocomplete", v1483], JAM.policy.p3);
    var v28929 = JAM.call(v29512.bind, v29512, ["keypress.autocomplete", v1484], JAM.policy.p3);
    var v28054 = JAM.call(v28929.bind, v28929, ["focus.autocomplete", v1485], JAM.policy.p3);
    JAM.call(v28054.bind, v28054, ["blur.autocomplete", v1487], JAM.policy.p3);
    JAM.call(this._initSource, this, [], JAM.policy.p3);
    var v30323 = JAM.call(a$$515, null, ["<ul></ul>"], JAM.policy.p3);
    var v30115 = JAM.call(v30323.addClass, v30323, ["ui-autocomplete"], JAM.policy.p3);
    var v30596 = this.options.appendTo;
    if (!v30596) {
      v30596 = "body";
    }
    var v29861 = JAM.call(v30115.appendTo, v30115, [JAM.call(a$$515, null, [v30596, c$$389], JAM.policy.p3)[0]], JAM.policy.p3);
    var v29513 = JAM.call(v29861.mousedown, v29861, [v1491], JAM.policy.p3);
    var v28930 = JAM.call(v29513.menu, v29513, [{focus:v1492, selected:v1494, blur:v1495}], JAM.policy.p3);
    var v29862 = this.element;
    var v28055 = JAM.call(v28930.zIndex, v28930, [JAM.call(v29862.zIndex, v29862, [], JAM.policy.p3) + 1], JAM.policy.p3);
    var v26715 = JAM.call(v28055.css, v28055, [{top:0, left:0}], JAM.policy.p3);
    var v24780 = JAM.call(v26715.hide, v26715, [], JAM.policy.p3);
    var v31045 = JAM.call(v24780.data, v24780, ["menu"], JAM.policy.p3);
    this.menu = v31045;
    var v20463 = a$$515.fn.bgiframe;
    if (v20463) {
      var v24782 = this.menu.element;
      JAM.call(v24782.bgiframe, v24782, [], JAM.policy.p3);
    }
    b$$486.beforeunloadHandler = v1496;
    var v10798 = JAM.call(a$$515, null, [window], JAM.policy.p3);
    JAM.call(v10798.bind, v10798, ["beforeunload", b$$486.beforeunloadHandler], JAM.policy.p3);
    return;
  }
  var c$$388 = 0;
  JAM.call(a$$515.widget, a$$515, ["ui.autocomplete", {options:{appendTo:"body", autoFocus:!1, delay:300, minLength:1, position:{my:"left top", at:"left bottom", collision:"none"}, source:null}, pending:0, _create:v1497, destroy:v1498, _setOption:v1499, _initSource:v1504, search:v1505, _search:v1506, _response:v1508, __response:v1509, close:v1510, _change:v1511, _normalize:v1513, _suggest:v1514, _resizeMenu:v1515, _renderMenu:v1517, _renderItem:v1518, _move:v1519, widget:v1520, _keyEvent:v1521}], 
  JAM.policy.p3);
  JAM.call(a$$515.extend, a$$515, [a$$515.ui.autocomplete, {escapeRegex:v1522, filter:v1524}], JAM.policy.p3);
  return;
}
function v1481(a$$507, b$$473) {
  function v1480(a$$514) {
    var v16387;
    if (a$$514.down) {
      v16387 = "easeOutBounce";
    } else {
      v16387 = "swing";
    }
    var v10803 = v16387;
    var v16388;
    if (a$$514.down) {
      v16388 = 1E3;
    } else {
      v16388 = 200;
    }
    JAM.call(this.slide, this, [a$$514, {easing:v10803, duration:v16388}], JAM.policy.p3);
    return;
  }
  function v1479(b$$484, c$$385) {
    function v1478() {
      var v16389 = b$$484.autoHeight;
      if (!v16389) {
        var v20468 = b$$484.toShow;
        JAM.call(v20468.css, v20468, ["height", ""], JAM.policy.p3);
      }
      var v16390 = b$$484.toShow;
      JAM.call(v16390.css, v16390, [{width:i$$185, overflow:d$$302}], JAM.policy.p3);
      JAM.call(b$$484.complete, b$$484, [], JAM.policy.p3);
      return;
    }
    function v1477(a$$513, c$$387) {
      var v10805 = c$$387.prop == "height";
      if (v10805) {
        var v16393;
        if (c$$387.end - c$$387.start === 0) {
          v16393 = 0;
        } else {
          v16393 = (c$$387.now - c$$387.start) / (c$$387.end - c$$387.start);
        }
        e$$274 = v16393;
      }
      JAM.set(b$$484.toShow[0].style, c$$387.prop, e$$274 * f$$132[c$$387.prop].value + f$$132[c$$387.prop].unit, JAM.policy.p2);
      return;
    }
    function v1476(c$$386, d$$303) {
      JAM.set(g$$158, d$$303, "hide", JAM.policy.p2);
      var v4010 = "" + JAM.call(a$$507.css, a$$507, [b$$484.toShow[0], d$$303], JAM.policy.p3);
      var e$$275 = JAM.call(v4010.match, v4010, [/^([\d+-.]+)(.*)$/], JAM.policy.p3);
      var v4011 = e$$275[1];
      var v10809 = e$$275[2];
      if (!v10809) {
        v10809 = "px";
      }
      JAM.set(f$$132, d$$303, {value:v4011, unit:v10809}, JAM.policy.p2);
      return;
    }
    b$$484 = JAM.call(a$$507.extend, a$$507, [{easing:"swing", duration:300}, b$$484, c$$385], JAM.policy.p3);
    var v16399 = b$$484.toHide;
    if (!JAM.call(v16399.size, v16399, [], JAM.policy.p3)) {
      var v4014 = b$$484.toShow;
      JAM.call(v4014.animate, v4014, [{height:"show", paddingTop:"show", paddingBottom:"show"}, b$$484], JAM.policy.p3);
      return;
    }
    var v16400 = b$$484.toShow;
    if (!JAM.call(v16400.size, v16400, [], JAM.policy.p3)) {
      var v4017 = b$$484.toHide;
      JAM.call(v4017.animate, v4017, [{height:"hide", paddingTop:"hide", paddingBottom:"hide"}, b$$484], JAM.policy.p3);
      return;
    }
    var v4020 = b$$484.toShow;
    var d$$302 = JAM.call(v4020.css, v4020, ["overflow"], JAM.policy.p3);
    var e$$274 = 0;
    var f$$132 = {};
    var g$$158 = {};
    var h$$129 = ["height", "paddingTop", "paddingBottom"];
    var i$$185;
    var j$$94 = b$$484.toShow;
    i$$185 = j$$94[0].style.width;
    var v29863 = JAM.call(j$$94.parent, j$$94, [], JAM.policy.p3);
    var v28057 = JAM.call(v29863.width, v29863, [], JAM.policy.p3) - parseFloat(JAM.call(j$$94.css, j$$94, ["paddingLeft"], JAM.policy.p3)) - parseFloat(JAM.call(j$$94.css, j$$94, ["paddingRight"], JAM.policy.p3));
    var v28934 = parseFloat(JAM.call(j$$94.css, j$$94, ["borderLeftWidth"], JAM.policy.p3));
    if (!v28934) {
      v28934 = 0;
    }
    var v26721 = v28057 - v28934;
    var v28059 = parseFloat(JAM.call(j$$94.css, j$$94, ["borderRightWidth"], JAM.policy.p3));
    if (!v28059) {
      v28059 = 0;
    }
    JAM.call(j$$94.width, j$$94, [v26721 - v28059], JAM.policy.p3);
    JAM.call(a$$507.each, a$$507, [h$$129, v1476], JAM.policy.p3);
    var v20477 = b$$484.toShow;
    var v16401 = JAM.call(v20477.css, v20477, [{height:0, overflow:"hidden"}], JAM.policy.p3);
    JAM.call(v16401.show, v16401, [], JAM.policy.p3);
    var v26723 = b$$484.toHide;
    var v24792 = JAM.call(v26723.filter, v26723, [":hidden"], JAM.policy.p3);
    var v20479 = JAM.call(v24792.each, v24792, [b$$484.complete], JAM.policy.p3);
    var v16402 = JAM.call(v20479.end, v20479, [], JAM.policy.p3);
    var v10812 = JAM.call(v16402.filter, v16402, [":visible"], JAM.policy.p3);
    JAM.call(v10812.animate, v10812, [g$$158, {step:v1477, duration:b$$484.duration, easing:b$$484.easing, complete:v1478}], JAM.policy.p3);
    return;
  }
  function v1475(a$$512) {
    var v4021;
    if (a$$512) {
      v4021 = 0;
    } else {
      v4021 = this.running = this.running - 1;
    }
    this.running = v4021;
    if (this.running) {
      return;
    }
    var v20480 = this.options.clearStyle;
    if (v20480) {
      var v26724 = this.toShow;
      var v24795 = JAM.call(v26724.add, v26724, [this.toHide], JAM.policy.p3);
      JAM.call(v24795.css, v24795, [{height:"", overflow:""}], JAM.policy.p3);
    }
    var v20481 = this.toHide;
    JAM.call(v20481.removeClass, v20481, ["ui-accordion-content-active"], JAM.policy.p3);
    var v16406 = this.toHide.length;
    if (v16406) {
      var v26726 = this.toHide;
      var v20483 = JAM.call(v26726.parent, v26726, [], JAM.policy.p3)[0];
      var v28060 = this.toHide;
      v20483.className = JAM.call(v28060.parent, v28060, [], JAM.policy.p3)[0].className;
    }
    JAM.call(this._trigger, this, ["change", null, this.data], JAM.policy.p3);
    return;
  }
  function v1474(b$$483, c$$384, d$$301, e$$273, f$$131) {
    function v1473(a$$511) {
      JAM.call(this.slide, this, [a$$511, {easing:m$$42, duration:l$$71 || 700}], JAM.policy.p3);
      return;
    }
    function i$$184() {
      if (!g$$157) {
        return;
      }
      var v4025 = g$$157._completed;
      return JAM.call(v4025.apply, v4025, [g$$157, arguments], JAM.policy.p3);
    }
    var g$$157 = this;
    var h$$128 = g$$157.options;
    g$$157.toShow = b$$483;
    g$$157.toHide = c$$384;
    g$$157.data = d$$301;
    JAM.call(g$$157._trigger, g$$157, ["changestart", null, g$$157.data], JAM.policy.p3);
    var v10817 = g$$157;
    var v16407;
    if (JAM.call(c$$384.size, c$$384, [], JAM.policy.p3) === 0) {
      v16407 = JAM.call(b$$483.size, b$$483, [], JAM.policy.p3);
    } else {
      v16407 = JAM.call(c$$384.size, c$$384, [], JAM.policy.p3);
    }
    v10817.running = v16407;
    if (h$$128.animated) {
      var j$$93 = {};
      var v24800;
      var v28061 = h$$128.collapsible;
      if (v28061) {
        v28061 = e$$273;
      }
      if (v28061) {
        var v26728 = JAM.call(a$$507, null, [[]], JAM.policy.p3);
        var v28062 = h$$128.autoHeight;
        if (!v28062) {
          v28062 = h$$128.fillSpace;
        }
        v24800 = j$$93 = {toShow:v26728, toHide:c$$384, complete:i$$184, down:f$$131, autoHeight:v28062};
      } else {
        var v28063 = h$$128.autoHeight;
        if (!v28063) {
          v28063 = h$$128.fillSpace;
        }
        v24800 = j$$93 = {toShow:b$$483, toHide:c$$384, complete:i$$184, down:f$$131, autoHeight:v28063};
      }
      v24800;
      var v24801 = h$$128.proxied;
      if (!v24801) {
        h$$128.proxied = h$$128.animated;
      }
      var v20485 = h$$128.proxiedDuration;
      if (!v20485) {
        h$$128.proxiedDuration = h$$128.duration;
      }
      var v16408 = h$$128;
      var v20486;
      if (JAM.call(a$$507.isFunction, a$$507, [h$$128.proxied], JAM.policy.p3)) {
        v20486 = JAM.call(h$$128.proxied, h$$128, [j$$93], JAM.policy.p3);
      } else {
        v20486 = h$$128.proxied;
      }
      v16408.animated = v20486;
      var v10818 = h$$128;
      var v16409;
      if (JAM.call(a$$507.isFunction, a$$507, [h$$128.proxiedDuration], JAM.policy.p3)) {
        v16409 = JAM.call(h$$128.proxiedDuration, h$$128, [j$$93], JAM.policy.p3);
      } else {
        v16409 = h$$128.proxiedDuration;
      }
      v10818.duration = v16409;
      var k$$63 = a$$507.ui.accordion.animations;
      var l$$71 = h$$128.duration;
      var m$$42 = h$$128.animated;
      var v24805 = m$$42;
      if (v24805) {
        v24805 = !k$$63[m$$42];
      }
      var v20488 = v24805;
      if (v20488) {
        v20488 = !a$$507.easing[m$$42];
      }
      var v16410 = v20488;
      if (v16410) {
        m$$42 = "slide";
      }
      var v16411 = k$$63[m$$42];
      if (!v16411) {
        JAM.set(k$$63, m$$42, v1473, JAM.policy.p2);
      }
      JAM.call(k$$63[m$$42], k$$63, [j$$93], JAM.policy.p3);
    } else {
      var v10820;
      var v20490 = h$$128.collapsible;
      if (v20490) {
        v20490 = e$$273;
      }
      if (v20490) {
        v10820 = JAM.call(b$$483.toggle, b$$483, [], JAM.policy.p3);
      } else {
        JAM.call(c$$384.hide, c$$384, [], JAM.policy.p3);
        v10820 = JAM.call(b$$483.show, b$$483, [], JAM.policy.p3);
      }
      v10820;
      i$$184(!0);
    }
    var v16413 = JAM.call(c$$384.prev, c$$384, [], JAM.policy.p3);
    var v10822 = JAM.call(v16413.attr, v16413, [{"aria-expanded":"false", "aria-selected":"false", tabIndex:-1}], JAM.policy.p3);
    JAM.call(v10822.blur, v10822, [], JAM.policy.p3);
    var v16415 = JAM.call(b$$483.prev, b$$483, [], JAM.policy.p3);
    var v10823 = JAM.call(v16415.attr, v16415, [{"aria-expanded":"true", "aria-selected":"true", tabIndex:0}], JAM.policy.p3);
    JAM.call(v10823.focus, v10823, [], JAM.policy.p3);
    return;
  }
  function v1472(b$$482, c$$383) {
    var d$$300 = this.options;
    if (d$$300.disabled) {
      return;
    }
    if (!b$$482.target) {
      if (!d$$300.collapsible) {
        return;
      }
      var v26736 = this.active;
      var v24807 = JAM.call(v26736.removeClass, v26736, ["ui-state-active ui-corner-top"], JAM.policy.p3);
      var v20491 = JAM.call(v24807.addClass, v24807, ["ui-state-default ui-corner-all"], JAM.policy.p3);
      var v16417 = JAM.call(v20491.children, v20491, [".ui-icon"], JAM.policy.p3);
      var v10826 = JAM.call(v16417.removeClass, v16417, [d$$300.icons.headerSelected], JAM.policy.p3);
      JAM.call(v10826.addClass, v10826, [d$$300.icons.header], JAM.policy.p3);
      var v16420 = this.active;
      var v10828 = JAM.call(v16420.next, v16420, [], JAM.policy.p3);
      JAM.call(v10828.addClass, v10828, ["ui-accordion-content-active"], JAM.policy.p3);
      var v4030 = this.active;
      var e$$272 = JAM.call(v4030.next, v4030, [], JAM.policy.p3);
      var f$$130 = {options:d$$300, newHeader:JAM.call(a$$507, null, [[]], JAM.policy.p3), oldHeader:d$$300.active, newContent:JAM.call(a$$507, null, [[]], JAM.policy.p3), oldContent:e$$272};
      var v31046 = JAM.call(a$$507, null, [[]], JAM.policy.p3);
      var g$$156 = this.active = v31046;
      JAM.call(this._toggle, this, [g$$156, e$$272, f$$130], JAM.policy.p3);
      return;
    }
    var v10829 = b$$482.currentTarget;
    if (!v10829) {
      v10829 = c$$383;
    }
    var h$$127 = JAM.call(a$$507, null, [v10829], JAM.policy.p3);
    var i$$183 = h$$127[0] === this.active[0];
    var v4038;
    var v16422 = d$$300.collapsible;
    if (v16422) {
      v16422 = i$$183;
    }
    if (v16422) {
      v4038 = !1;
    } else {
      var v10831 = this.headers;
      v4038 = JAM.call(v10831.index, v10831, [h$$127], JAM.policy.p3);
    }
    d$$300.active = v4038;
    var v10833 = this.running;
    if (!v10833) {
      var v16423 = !d$$300.collapsible;
      if (v16423) {
        v16423 = i$$183;
      }
      v10833 = v16423;
    }
    if (v10833) {
      return;
    }
    var j$$92 = this.active;
    g$$156 = JAM.call(h$$127.next, h$$127, [], JAM.policy.p3);
    var v4040 = this.active;
    e$$272 = JAM.call(v4040.next, v4040, [], JAM.policy.p3);
    var v10834;
    var v20494 = i$$183;
    if (v20494) {
      v20494 = d$$300.collapsible;
    }
    if (v20494) {
      v10834 = JAM.call(a$$507, null, [[]], JAM.policy.p3);
    } else {
      v10834 = h$$127;
    }
    var v4041 = v10834;
    var v4042 = this.active;
    var v10835;
    var v20495 = i$$183;
    if (v20495) {
      v20495 = d$$300.collapsible;
    }
    if (v20495) {
      v10835 = JAM.call(a$$507, null, [[]], JAM.policy.p3);
    } else {
      v10835 = g$$156;
    }
    f$$130 = {options:d$$300, newHeader:v4041, oldHeader:v4042, newContent:v10835, oldContent:e$$272};
    var v10836 = this.headers;
    var v4044 = JAM.call(v10836.index, v10836, [this.active[0]], JAM.policy.p3);
    var v10838 = this.headers;
    var k$$62 = v4044 > JAM.call(v10838.index, v10838, [h$$127[0]], JAM.policy.p3);
    var v20496;
    if (i$$183) {
      v20496 = JAM.call(a$$507, null, [[]], JAM.policy.p3);
    } else {
      v20496 = h$$127;
    }
    this.active = v20496;
    JAM.call(this._toggle, this, [g$$156, e$$272, f$$130, i$$183, k$$62], JAM.policy.p3);
    var v26737 = JAM.call(j$$92.removeClass, j$$92, ["ui-state-active ui-corner-top"], JAM.policy.p3);
    var v24808 = JAM.call(v26737.addClass, v26737, ["ui-state-default ui-corner-all"], JAM.policy.p3);
    var v20497 = JAM.call(v24808.children, v24808, [".ui-icon"], JAM.policy.p3);
    var v16428 = JAM.call(v20497.removeClass, v20497, [d$$300.icons.headerSelected], JAM.policy.p3);
    JAM.call(v16428.addClass, v16428, [d$$300.icons.header], JAM.policy.p3);
    if (!i$$183) {
      var v28064 = JAM.call(h$$127.removeClass, h$$127, ["ui-state-default ui-corner-all"], JAM.policy.p3);
      var v26738 = JAM.call(v28064.addClass, v28064, ["ui-state-active ui-corner-top"], JAM.policy.p3);
      var v24810 = JAM.call(v26738.children, v26738, [".ui-icon"], JAM.policy.p3);
      var v20500 = JAM.call(v24810.removeClass, v24810, [d$$300.icons.header], JAM.policy.p3);
      JAM.call(v20500.addClass, v20500, [d$$300.icons.headerSelected], JAM.policy.p3);
      var v20502 = JAM.call(h$$127.next, h$$127, [], JAM.policy.p3);
      JAM.call(v20502.addClass, v20502, ["ui-accordion-content-active"], JAM.policy.p3);
    }
    return;
  }
  function v1471(b$$481) {
    var v4046;
    if (b$$481) {
      var v10840;
      if (typeof b$$481 == "number") {
        var v16431 = this.headers;
        v10840 = JAM.call(v16431.filter, v16431, [":eq(" + b$$481 + ")"], JAM.policy.p3);
      } else {
        var v16433 = this.headers;
        var v20505 = this.headers;
        v10840 = JAM.call(v16433.not, v16433, [JAM.call(v20505.not, v20505, [b$$481], JAM.policy.p3)], JAM.policy.p3);
      }
      v4046 = v10840;
    } else {
      var v10841;
      if (b$$481 === !1) {
        v10841 = JAM.call(a$$507, null, [[]], JAM.policy.p3);
      } else {
        var v16436 = this.headers;
        v10841 = JAM.call(v16436.filter, v16436, [":eq(0)"], JAM.policy.p3);
      }
      v4046 = v10841;
    }
    return v4046;
  }
  function v1470(a$$510) {
    this.options.active = a$$510;
    var b$$480 = JAM.call(this._findActive, this, [a$$510], JAM.policy.p3)[0];
    JAM.call(this._clickHandler, this, [{target:b$$480}, b$$480], JAM.policy.p3);
    return this;
  }
  function v1469() {
    function v1468() {
      var v16438 = JAM.call(a$$507, null, [this], JAM.policy.p3);
      var v10843 = JAM.call(v16438.height, v16438, [""], JAM.policy.p3);
      c$$382 = JAM.call(Math.max, Math, [c$$382, JAM.call(v10843.height, v10843, [], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    function v1467() {
      var v4050 = JAM.call(a$$507, null, [this], JAM.policy.p3);
      var v20507 = c$$382;
      var v24813 = JAM.call(a$$507, null, [this], JAM.policy.p3);
      var v16439 = v20507 - JAM.call(v24813.innerHeight, v24813, [], JAM.policy.p3);
      var v20509 = JAM.call(a$$507, null, [this], JAM.policy.p3);
      JAM.call(v4050.height, v4050, [JAM.call(Math.max, Math, [0, v16439 + JAM.call(v20509.height, v20509, [], JAM.policy.p3)], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    function v1466() {
      var v10845 = c$$382;
      var v16441 = JAM.call(a$$507, null, [this], JAM.policy.p3);
      c$$382 = v10845 - JAM.call(v16441.outerHeight, v16441, [!0], JAM.policy.p3);
      return;
    }
    var b$$479 = this.options;
    var c$$382;
    if (b$$479.fillSpace) {
      if (a$$507.browser.msie) {
        var v10848 = this.element;
        var v4052 = JAM.call(v10848.parent, v10848, [], JAM.policy.p3);
        var d$$299 = JAM.call(v4052.css, v4052, ["overflow"], JAM.policy.p3);
        var v10849 = this.element;
        var v4053 = JAM.call(v10849.parent, v10849, [], JAM.policy.p3);
        JAM.call(v4053.css, v4053, ["overflow", "hidden"], JAM.policy.p3);
      }
      var v24814 = this.element;
      var v20510 = JAM.call(v24814.parent, v24814, [], JAM.policy.p3);
      c$$382 = JAM.call(v20510.height, v20510, [], JAM.policy.p3);
      var v20511 = a$$507.browser.msie;
      if (v20511) {
        var v26740 = this.element;
        var v24816 = JAM.call(v26740.parent, v26740, [], JAM.policy.p3);
        JAM.call(v24816.css, v24816, ["overflow", d$$299], JAM.policy.p3);
      }
      var v16443 = this.headers;
      JAM.call(v16443.each, v16443, [v1466], JAM.policy.p3);
      var v20512 = this.headers;
      var v16444 = JAM.call(v20512.next, v20512, [], JAM.policy.p3);
      var v10850 = JAM.call(v16444.each, v16444, [v1467], JAM.policy.p3);
      JAM.call(v10850.css, v10850, ["overflow", "auto"], JAM.policy.p3);
    } else {
      var v4055 = b$$479.autoHeight;
      if (v4055) {
        c$$382 = 0;
        var v24817 = this.headers;
        var v20513 = JAM.call(v24817.next, v24817, [], JAM.policy.p3);
        var v16445 = JAM.call(v20513.each, v20513, [v1468], JAM.policy.p3);
        JAM.call(v16445.height, v16445, [c$$382], JAM.policy.p3);
      }
    }
    return this;
  }
  function v1465(b$$478) {
    var v16446 = this.options.disabled;
    if (!v16446) {
      v16446 = b$$478.altKey;
    }
    var v10851 = v16446;
    if (!v10851) {
      v10851 = b$$478.ctrlKey;
    }
    if (v10851) {
      return;
    }
    var c$$381 = a$$507.ui.keyCode;
    var d$$298 = this.headers.length;
    var v4060 = this.headers;
    var e$$271 = JAM.call(v4060.index, v4060, [b$$478.target], JAM.policy.p3);
    var f$$129 = !1;
    switch(b$$478.keyCode) {
      case c$$381.RIGHT:
      ;
      case c$$381.DOWN:
        f$$129 = this.headers[(e$$271 + 1) % d$$298];
        break;
      case c$$381.LEFT:
      ;
      case c$$381.UP:
        f$$129 = this.headers[(e$$271 - 1 + d$$298) % d$$298];
        break;
      case c$$381.SPACE:
      ;
      case c$$381.ENTER:
        JAM.call(this._clickHandler, this, [{target:b$$478.target}, b$$478.target], JAM.policy.p3);
        JAM.call(b$$478.preventDefault, b$$478, [], JAM.policy.p3);
    }
    var v4067;
    if (f$$129) {
      var v24818 = JAM.call(a$$507, null, [b$$478.target], JAM.policy.p3);
      JAM.call(v24818.attr, v24818, ["tabIndex", -1], JAM.policy.p3);
      var v24819 = JAM.call(a$$507, null, [f$$129], JAM.policy.p3);
      JAM.call(v24819.attr, v24819, ["tabIndex", 0], JAM.policy.p3);
      JAM.call(f$$129.focus, f$$129, [], JAM.policy.p3);
      v4067 = !1;
    } else {
      v4067 = !0;
    }
    return v4067;
  }
  function v1464(b$$477, c$$380) {
    var v20516 = a$$507.Widget.prototype._setOption;
    JAM.call(v20516.apply, v20516, [this, arguments], JAM.policy.p3);
    var v20517 = b$$477 == "active";
    if (v20517) {
      JAM.call(this.activate, this, [c$$380], JAM.policy.p3);
    }
    var v16450 = b$$477 == "icons";
    if (v16450) {
      JAM.call(this._destroyIcons, this, [], JAM.policy.p3);
      if (c$$380) {
        JAM.call(this._createIcons, this, [], JAM.policy.p3);
      }
    }
    var v10856 = b$$477 == "disabled";
    if (v10856) {
      var v20518 = this.headers;
      var v24821 = this.headers;
      var v16451 = JAM.call(v20518.add, v20518, [JAM.call(v24821.next, v24821, [], JAM.policy.p3)], JAM.policy.p3);
      var v20520;
      if (c$$380) {
        v20520 = "addClass";
      } else {
        v20520 = "removeClass";
      }
      JAM.call(v16451[v20520], v16451, ["ui-accordion-disabled ui-state-disabled"], JAM.policy.p3);
    }
    return;
  }
  function v1463() {
    var b$$476 = this.options;
    var v24822 = this.element;
    var v20521 = JAM.call(v24822.removeClass, v24822, ["ui-accordion ui-widget ui-helper-reset"], JAM.policy.p3);
    JAM.call(v20521.removeAttr, v20521, ["role"], JAM.policy.p3);
    var v29521 = this.headers;
    var v28939 = JAM.call(v29521.unbind, v29521, [".accordion"], JAM.policy.p3);
    var v28065 = JAM.call(v28939.removeClass, v28939, ["ui-accordion-header ui-accordion-disabled ui-helper-reset ui-state-default ui-corner-all ui-state-active ui-state-disabled ui-corner-top"], JAM.policy.p3);
    var v26743 = JAM.call(v28065.removeAttr, v28065, ["role"], JAM.policy.p3);
    var v24823 = JAM.call(v26743.removeAttr, v26743, ["aria-expanded"], JAM.policy.p3);
    var v20522 = JAM.call(v24823.removeAttr, v24823, ["aria-selected"], JAM.policy.p3);
    JAM.call(v20522.removeAttr, v20522, ["tabIndex"], JAM.policy.p3);
    var v20523 = this.headers;
    var v16453 = JAM.call(v20523.find, v20523, ["a"], JAM.policy.p3);
    JAM.call(v16453.removeAttr, v16453, ["tabIndex"], JAM.policy.p3);
    JAM.call(this._destroyIcons, this, [], JAM.policy.p3);
    var v20524 = this.headers;
    var v16454 = JAM.call(v20524.next, v20524, [], JAM.policy.p3);
    var v10857 = JAM.call(v16454.css, v16454, ["display", ""], JAM.policy.p3);
    var v4068 = JAM.call(v10857.removeAttr, v10857, ["role"], JAM.policy.p3);
    var c$$379 = JAM.call(v4068.removeClass, v4068, ["ui-helper-reset ui-widget-content ui-corner-bottom ui-accordion-content ui-accordion-content-active ui-accordion-disabled ui-state-disabled"], JAM.policy.p3);
    var v16455 = b$$476.autoHeight;
    if (!v16455) {
      v16455 = b$$476.fillHeight;
    }
    var v10858 = v16455;
    if (v10858) {
      JAM.call(c$$379.css, c$$379, ["height", ""], JAM.policy.p3);
    }
    var v10859 = a$$507.Widget.prototype.destroy;
    return JAM.call(v10859.call, v10859, [this], JAM.policy.p3);
  }
  function v1462() {
    var v16457 = this.headers;
    var v10860 = JAM.call(v16457.children, v16457, [".ui-icon"], JAM.policy.p3);
    JAM.call(v10860.remove, v10860, [], JAM.policy.p3);
    var v10861 = this.element;
    JAM.call(v10861.removeClass, v10861, ["ui-accordion-icons"], JAM.policy.p3);
    return;
  }
  function v1461() {
    var b$$475 = this.options;
    var v4069 = b$$475.icons;
    if (v4069) {
      var v24824 = JAM.call(a$$507, null, ["<span></span>"], JAM.policy.p3);
      var v20527 = JAM.call(v24824.addClass, v24824, ["ui-icon " + b$$475.icons.header], JAM.policy.p3);
      JAM.call(v20527.prependTo, v20527, [this.headers], JAM.policy.p3);
      var v26745 = this.active;
      var v24826 = JAM.call(v26745.children, v26745, [".ui-icon"], JAM.policy.p3);
      var v20529 = JAM.call(v24826.toggleClass, v24826, [b$$475.icons.header], JAM.policy.p3);
      JAM.call(v20529.toggleClass, v20529, [b$$475.icons.headerSelected], JAM.policy.p3);
      var v16458 = this.element;
      JAM.call(v16458.addClass, v16458, ["ui-accordion-icons"], JAM.policy.p3);
    }
    return;
  }
  function v1460() {
    function v1459(a$$509) {
      var v10862 = b$$474._clickHandler;
      JAM.call(v10862.call, v10862, [b$$474, a$$509, this], JAM.policy.p3);
      JAM.call(a$$509.preventDefault, a$$509, [], JAM.policy.p3);
      return;
    }
    function v1458(a$$508) {
      return JAM.call(b$$474._keydown, b$$474, [a$$508], JAM.policy.p3);
    }
    function v1457() {
      if (c$$378.disabled) {
        return;
      }
      var v4071 = JAM.call(a$$507, null, [this], JAM.policy.p3);
      JAM.call(v4071.removeClass, v4071, ["ui-state-focus"], JAM.policy.p3);
      return;
    }
    function v1456() {
      if (c$$378.disabled) {
        return;
      }
      var v4073 = JAM.call(a$$507, null, [this], JAM.policy.p3);
      JAM.call(v4073.addClass, v4073, ["ui-state-focus"], JAM.policy.p3);
      return;
    }
    function v1455() {
      if (c$$378.disabled) {
        return;
      }
      var v4075 = JAM.call(a$$507, null, [this], JAM.policy.p3);
      JAM.call(v4075.removeClass, v4075, ["ui-state-hover"], JAM.policy.p3);
      return;
    }
    function v1454() {
      if (c$$378.disabled) {
        return;
      }
      var v4077 = JAM.call(a$$507, null, [this], JAM.policy.p3);
      JAM.call(v4077.addClass, v4077, ["ui-state-hover"], JAM.policy.p3);
      return;
    }
    var b$$474 = this;
    var c$$378 = b$$474.options;
    b$$474.running = 0;
    var v26747 = b$$474.element;
    var v24829 = JAM.call(v26747.addClass, v26747, ["ui-accordion ui-widget ui-helper-reset"], JAM.policy.p3);
    var v20531 = JAM.call(v24829.children, v24829, ["li"], JAM.policy.p3);
    JAM.call(v20531.addClass, v20531, ["ui-accordion-li-fix"], JAM.policy.p3);
    var v16459 = b$$474;
    var v29522 = b$$474.element;
    var v28940 = JAM.call(v29522.find, v29522, [c$$378.header], JAM.policy.p3);
    var v28067 = JAM.call(v28940.addClass, v28940, ["ui-accordion-header ui-helper-reset ui-state-default ui-corner-all"], JAM.policy.p3);
    var v26748 = JAM.call(v28067.bind, v28067, ["mouseenter.accordion", v1454], JAM.policy.p3);
    var v24830 = JAM.call(v26748.bind, v26748, ["mouseleave.accordion", v1455], JAM.policy.p3);
    var v20532 = JAM.call(v24830.bind, v24830, ["focus.accordion", v1456], JAM.policy.p3);
    var v31047 = JAM.call(v20532.bind, v20532, ["blur.accordion", v1457], JAM.policy.p3);
    v16459.headers = v31047;
    var v16460 = b$$474.headers;
    var v10863 = JAM.call(v16460.next, v16460, [], JAM.policy.p3);
    JAM.call(v10863.addClass, v10863, ["ui-accordion-content ui-helper-reset ui-widget-content ui-corner-bottom"], JAM.policy.p3);
    if (c$$378.navigation) {
      var v16461 = b$$474.element;
      var v10864 = JAM.call(v16461.find, v16461, ["a"], JAM.policy.p3);
      var v4078 = JAM.call(v10864.filter, v10864, [c$$378.navigationFilter], JAM.policy.p3);
      var d$$297 = JAM.call(v4078.eq, v4078, [0], JAM.policy.p3);
      if (d$$297.length) {
        var e$$270 = JAM.call(d$$297.closest, d$$297, [".ui-accordion-header"], JAM.policy.p3);
        var v4079;
        if (e$$270.length) {
          v4079 = b$$474.active = e$$270;
        } else {
          var v10866 = b$$474;
          var v16462 = JAM.call(d$$297.closest, d$$297, [".ui-accordion-content"], JAM.policy.p3);
          var v31048 = JAM.call(v16462.prev, v16462, [], JAM.policy.p3);
          v4079 = v10866.active = v31048;
        }
        v4079;
      }
    }
    var v29865 = b$$474;
    var v30677 = b$$474.active;
    if (!v30677) {
      v30677 = c$$378.active;
    }
    var v30464 = JAM.call(b$$474._findActive, b$$474, [v30677], JAM.policy.p3);
    var v30325 = JAM.call(v30464.addClass, v30464, ["ui-state-default ui-state-active"], JAM.policy.p3);
    var v30117 = JAM.call(v30325.toggleClass, v30325, ["ui-corner-all"], JAM.policy.p3);
    var v31049 = JAM.call(v30117.toggleClass, v30117, ["ui-corner-top"], JAM.policy.p3);
    v29865.active = v31049;
    var v30118 = b$$474.active;
    var v29866 = JAM.call(v30118.next, v30118, [], JAM.policy.p3);
    JAM.call(v29866.addClass, v29866, ["ui-accordion-content-active"], JAM.policy.p3);
    JAM.call(b$$474._createIcons, b$$474, [], JAM.policy.p3);
    JAM.call(b$$474.resize, b$$474, [], JAM.policy.p3);
    var v28068 = b$$474.element;
    JAM.call(v28068.attr, v28068, ["role", "tablist"], JAM.policy.p3);
    var v29524 = b$$474.headers;
    var v28941 = JAM.call(v29524.attr, v29524, ["role", "tab"], JAM.policy.p3);
    var v28069 = JAM.call(v28941.bind, v28941, ["keydown.accordion", v1458], JAM.policy.p3);
    var v26749 = JAM.call(v28069.next, v28069, [], JAM.policy.p3);
    JAM.call(v26749.attr, v26749, ["role", "tabpanel"], JAM.policy.p3);
    var v28942 = b$$474.headers;
    var v29525 = b$$474.active;
    if (!v29525) {
      v29525 = "";
    }
    var v28070 = JAM.call(v28942.not, v28942, [v29525], JAM.policy.p3);
    var v26750 = JAM.call(v28070.attr, v28070, [{"aria-expanded":"false", "aria-selected":"false", tabIndex:-1}], JAM.policy.p3);
    var v24831 = JAM.call(v26750.next, v26750, [], JAM.policy.p3);
    JAM.call(v24831.hide, v24831, [], JAM.policy.p3);
    var v20533;
    if (b$$474.active.length) {
      var v24832 = b$$474.active;
      v20533 = JAM.call(v24832.attr, v24832, [{"aria-expanded":"true", "aria-selected":"true", tabIndex:0}], JAM.policy.p3);
    } else {
      var v26752 = b$$474.headers;
      var v24834 = JAM.call(v26752.eq, v26752, [0], JAM.policy.p3);
      v20533 = JAM.call(v24834.attr, v24834, ["tabIndex", 0], JAM.policy.p3);
    }
    v20533;
    var v16463 = a$$507.browser.safari;
    if (!v16463) {
      var v24836 = b$$474.headers;
      var v20535 = JAM.call(v24836.find, v24836, ["a"], JAM.policy.p3);
      JAM.call(v20535.attr, v20535, ["tabIndex", -1], JAM.policy.p3);
    }
    var v10868 = c$$378.event;
    if (v10868) {
      var v16464 = b$$474.headers;
      var v26753 = c$$378.event;
      var v24837 = JAM.call(v26753.split, v26753, [" "], JAM.policy.p3);
      JAM.call(v16464.bind, v16464, [JAM.call(v24837.join, v24837, [".accordion "], JAM.policy.p3) + ".accordion", v1459], JAM.policy.p3);
    }
    return;
  }
  function v1453() {
    var v10869 = this.href;
    var v4082 = JAM.call(v10869.toLowerCase, v10869, [], JAM.policy.p3);
    var v10870 = location.href;
    return v4082 === JAM.call(v10870.toLowerCase, v10870, [], JAM.policy.p3);
  }
  JAM.call(a$$507.widget, a$$507, ["ui.accordion", {options:{active:0, animated:"slide", autoHeight:!0, clearStyle:!1, collapsible:!1, event:"click", fillSpace:!1, header:"> li > :first-child,> :not(li):even", icons:{header:"ui-icon-triangle-1-e", headerSelected:"ui-icon-triangle-1-s"}, navigation:!1, navigationFilter:v1453}, _create:v1460, _createIcons:v1461, _destroyIcons:v1462, destroy:v1463, _setOption:v1464, _keydown:v1465, resize:v1469, activate:v1470, _findActive:v1471, _clickHandler:v1472, 
  _toggle:v1474, _completed:v1475}], JAM.policy.p3);
  JAM.call(a$$507.extend, a$$507, [a$$507.ui.accordion, {version:"1.8.24", animations:{slide:v1479, bounceslide:v1480}}], JAM.policy.p3);
  return;
}
function v1452(a$$506, b$$471) {
  function v1451(b$$472) {
    function v1450() {
      function v1449() {
        JAM.call(h$$126.remove, h$$126, [], JAM.policy.p3);
        var v16469 = b$$472.callback;
        if (v16469) {
          var v20544 = b$$472.callback;
          JAM.call(v20544.apply, v20544, [c$$377[0], arguments], JAM.policy.p3);
        }
        JAM.call(c$$377.dequeue, c$$377, [], JAM.policy.p3);
        return;
      }
      var c$$377 = JAM.call(a$$506, null, [this], JAM.policy.p3);
      var d$$296 = JAM.call(a$$506, null, [b$$472.options.to], JAM.policy.p3);
      var e$$269 = JAM.call(d$$296.offset, d$$296, [], JAM.policy.p3);
      var f$$128 = {top:e$$269.top, left:e$$269.left, height:JAM.call(d$$296.innerHeight, d$$296, [], JAM.policy.p3), width:JAM.call(d$$296.innerWidth, d$$296, [], JAM.policy.p3)};
      var g$$155 = JAM.call(c$$377.offset, c$$377, [], JAM.policy.p3);
      var v20546 = JAM.call(a$$506, null, ['<div class="ui-effects-transfer"></div>'], JAM.policy.p3);
      var v16470 = JAM.call(v20546.appendTo, v20546, [document.body], JAM.policy.p3);
      var v10875 = JAM.call(v16470.addClass, v16470, [b$$472.options.className], JAM.policy.p3);
      var v4089 = JAM.call(v10875.css, v10875, [{top:g$$155.top, left:g$$155.left, height:JAM.call(c$$377.innerHeight, c$$377, [], JAM.policy.p3), width:JAM.call(c$$377.innerWidth, c$$377, [], JAM.policy.p3), position:"absolute"}], JAM.policy.p3);
      var h$$126 = JAM.call(v4089.animate, v4089, [f$$128, b$$472.duration, b$$472.options.easing, v1449], JAM.policy.p3);
      return;
    }
    return JAM.call(this.queue, this, [v1450], JAM.policy.p3);
  }
  a$$506.effects.transfer = v1451;
  return;
}
function v1448(a$$505, b$$469) {
  function v1447(b$$470) {
    function v1446() {
      function v1445() {
        var v24838 = e$$268 == "hide";
        if (v24838) {
          JAM.call(c$$376.hide, c$$376, [], JAM.policy.p3);
        }
        var v24839 = a$$505.effects;
        JAM.call(v24839.restore, v24839, [c$$376, d$$295], JAM.policy.p3);
        var v20549 = a$$505.effects;
        JAM.call(v20549.removeWrapper, v20549, [c$$376], JAM.policy.p3);
        var v16476 = b$$470.callback;
        if (v16476) {
          var v20550 = b$$470.callback;
          JAM.call(v20550.apply, v20550, [this, arguments], JAM.policy.p3);
        }
        JAM.call(c$$376.dequeue, c$$376, [], JAM.policy.p3);
        return;
      }
      var c$$376 = JAM.call(a$$505, null, [this], JAM.policy.p3);
      var d$$295 = ["position", "top", "bottom", "left", "right"];
      var v4093 = a$$505.effects;
      var v10878 = b$$470.options.mode;
      if (!v10878) {
        v10878 = "show";
      }
      var e$$268 = JAM.call(v4093.setMode, v4093, [c$$376, v10878], JAM.policy.p3);
      var v4095 = b$$470.options.direction;
      if (!v4095) {
        v4095 = "left";
      }
      var f$$127 = v4095;
      var v16479 = a$$505.effects;
      JAM.call(v16479.save, v16479, [c$$376, d$$295], JAM.policy.p3);
      JAM.call(c$$376.show, c$$376, [], JAM.policy.p3);
      var v16480 = a$$505.effects;
      var v10881 = JAM.call(v16480.createWrapper, v16480, [c$$376], JAM.policy.p3);
      JAM.call(v10881.css, v10881, [{overflow:"hidden"}], JAM.policy.p3);
      var v4096;
      var v16481 = f$$127 == "up";
      if (!v16481) {
        v16481 = f$$127 == "down";
      }
      if (v16481) {
        v4096 = "top";
      } else {
        v4096 = "left";
      }
      var g$$154 = v4096;
      var v4097;
      var v16482 = f$$127 == "up";
      if (!v16482) {
        v16482 = f$$127 == "left";
      }
      if (v16482) {
        v4097 = "pos";
      } else {
        v4097 = "neg";
      }
      var h$$125 = v4097;
      var v4098 = b$$470.options.distance;
      if (!v4098) {
        var v10886;
        if (g$$154 == "top") {
          v10886 = JAM.call(c$$376.outerHeight, c$$376, [!0], JAM.policy.p3);
        } else {
          v10886 = JAM.call(c$$376.outerWidth, c$$376, [!0], JAM.policy.p3);
        }
        v4098 = v10886;
      }
      var i$$182 = v4098;
      var v4099 = e$$268 == "show";
      if (v4099) {
        var v16486;
        if (h$$125 == "pos") {
          var v20553;
          if (isNaN(i$$182)) {
            v20553 = "-" + i$$182;
          } else {
            v20553 = -i$$182;
          }
          v16486 = v20553;
        } else {
          v16486 = i$$182;
        }
        JAM.call(c$$376.css, c$$376, [g$$154, v16486], JAM.policy.p3);
      }
      var j$$91 = {};
      var v16487;
      if (e$$268 == "show") {
        var v20555;
        if (h$$125 == "pos") {
          v20555 = "+=";
        } else {
          v20555 = "-=";
        }
        v16487 = v20555;
      } else {
        var v20556;
        if (h$$125 == "pos") {
          v20556 = "-=";
        } else {
          v20556 = "+=";
        }
        v16487 = v20556;
      }
      JAM.set(j$$91, g$$154, v16487 + i$$182, JAM.policy.p2);
      JAM.call(c$$376.animate, c$$376, [j$$91, {queue:!1, duration:b$$470.duration, easing:b$$470.options.easing, complete:v1445}], JAM.policy.p3);
      return;
    }
    return JAM.call(this.queue, this, [v1446], JAM.policy.p3);
  }
  a$$505.effects.slide = v1447;
  return;
}
function v1444(a$$504, b$$467) {
  function v1443(b$$468) {
    function v1442() {
      function v1441() {
        JAM.call(c$$375.dequeue, c$$375, [], JAM.policy.p3);
        return;
      }
      function v1440() {
        var v16491 = a$$504.effects;
        JAM.call(v16491.restore, v16491, [c$$375, d$$294], JAM.policy.p3);
        var v16492 = a$$504.effects;
        JAM.call(v16492.removeWrapper, v16492, [c$$375], JAM.policy.p3);
        var v10891 = b$$468.callback;
        if (v10891) {
          var v16493 = b$$468.callback;
          JAM.call(v16493.apply, v16493, [this, arguments], JAM.policy.p3);
        }
        return;
      }
      var c$$375 = JAM.call(a$$504, null, [this], JAM.policy.p3);
      var d$$294 = ["position", "top", "bottom", "left", "right"];
      var v4101 = a$$504.effects;
      var v10892 = b$$468.options.mode;
      if (!v10892) {
        v10892 = "effect";
      }
      var e$$267 = JAM.call(v4101.setMode, v4101, [c$$375, v10892], JAM.policy.p3);
      var v4103 = b$$468.options.direction;
      if (!v4103) {
        v4103 = "left";
      }
      var f$$126 = v4103;
      var v4104 = b$$468.options.distance;
      if (!v4104) {
        v4104 = 20;
      }
      var g$$153 = v4104;
      var v4105 = b$$468.options.times;
      if (!v4105) {
        v4105 = 3;
      }
      var h$$124 = v4105;
      var v10899 = b$$468.duration;
      if (!v10899) {
        v10899 = b$$468.options.duration;
      }
      var v4106 = v10899;
      if (!v4106) {
        v4106 = 140;
      }
      var i$$181 = v4106;
      var v16498 = a$$504.effects;
      JAM.call(v16498.save, v16498, [c$$375, d$$294], JAM.policy.p3);
      JAM.call(c$$375.show, c$$375, [], JAM.policy.p3);
      var v10901 = a$$504.effects;
      JAM.call(v10901.createWrapper, v10901, [c$$375], JAM.policy.p3);
      var v4107;
      var v16499 = f$$126 == "up";
      if (!v16499) {
        v16499 = f$$126 == "down";
      }
      if (v16499) {
        v4107 = "top";
      } else {
        v4107 = "left";
      }
      var j$$90 = v4107;
      var v4108;
      var v16500 = f$$126 == "up";
      if (!v16500) {
        v16500 = f$$126 == "left";
      }
      if (v16500) {
        v4108 = "pos";
      } else {
        v4108 = "neg";
      }
      var k$$61 = v4108;
      var l$$70 = {};
      var m$$41 = {};
      var n$$90 = {};
      var v24843;
      if (k$$61 == "pos") {
        v24843 = "-=";
      } else {
        v24843 = "+=";
      }
      JAM.set(l$$70, j$$90, v24843 + g$$153, JAM.policy.p2);
      var v24844;
      if (k$$61 == "pos") {
        v24844 = "+=";
      } else {
        v24844 = "-=";
      }
      JAM.set(m$$41, j$$90, v24844 + g$$153 * 2, JAM.policy.p2);
      var v20564;
      if (k$$61 == "pos") {
        v20564 = "-=";
      } else {
        v20564 = "+=";
      }
      JAM.set(n$$90, j$$90, v20564 + g$$153 * 2, JAM.policy.p2);
      JAM.call(c$$375.animate, c$$375, [l$$70, i$$181, b$$468.options.easing], JAM.policy.p3);
      var p$$45 = 1;
      var v4111 = p$$45 < h$$124;
      for (;v4111;) {
        var v4109 = JAM.call(c$$375.animate, c$$375, [m$$41, i$$181, b$$468.options.easing], JAM.policy.p3);
        JAM.call(v4109.animate, v4109, [n$$90, i$$181, b$$468.options.easing], JAM.policy.p3);
        p$$45++;
        v4111 = p$$45 < h$$124;
      }
      var v16505 = JAM.call(c$$375.animate, c$$375, [m$$41, i$$181, b$$468.options.easing], JAM.policy.p3);
      JAM.call(v16505.animate, v16505, [l$$70, i$$181 / 2, b$$468.options.easing, v1440], JAM.policy.p3);
      JAM.call(c$$375.queue, c$$375, ["fx", v1441], JAM.policy.p3);
      JAM.call(c$$375.dequeue, c$$375, [], JAM.policy.p3);
      return;
    }
    return JAM.call(this.queue, this, [v1442], JAM.policy.p3);
  }
  a$$504.effects.shake = v1443;
  return;
}
function v1439(a$$503, b$$463) {
  function v1438(b$$466) {
    function v1437() {
      function v1436() {
        var v26756 = c$$373.to.opacity === 0;
        if (v26756) {
          JAM.call(c$$373.css, c$$373, ["opacity", c$$373.from.opacity], JAM.policy.p3);
        }
        var v26757 = j$$89 == "hide";
        if (v26757) {
          JAM.call(c$$373.hide, c$$373, [], JAM.policy.p3);
        }
        var v24847 = a$$503.effects;
        var v26758;
        if (k$$60) {
          v26758 = d$$292;
        } else {
          v26758 = e$$266;
        }
        JAM.call(v24847.restore, v24847, [c$$373, v26758], JAM.policy.p3);
        var v20567 = a$$503.effects;
        JAM.call(v20567.removeWrapper, v20567, [c$$373], JAM.policy.p3);
        var v16508 = b$$466.callback;
        if (v16508) {
          var v20568 = b$$466.callback;
          JAM.call(v20568.apply, v20568, [this, arguments], JAM.policy.p3);
        }
        JAM.call(c$$373.dequeue, c$$373, [], JAM.policy.p3);
        return;
      }
      function v1435() {
        function v1434() {
          if (k$$60) {
            var v10907 = a$$503.effects;
            JAM.call(v10907.restore, v10907, [c$$374, f$$125], JAM.policy.p3);
          }
          return;
        }
        var c$$374 = JAM.call(a$$503, null, [this], JAM.policy.p3);
        if (k$$60) {
          var v10908 = a$$503.effects;
          JAM.call(v10908.save, v10908, [c$$374, f$$125], JAM.policy.p3);
        }
        var JSCompiler_object_inline_height_96 = JAM.call(c$$374.height, c$$374, [], JAM.policy.p3);
        var JSCompiler_object_inline_width_97 = JAM.call(c$$374.width, c$$374, [], JAM.policy.p3);
        c$$374.from = {height:JSCompiler_object_inline_height_96 * JSCompiler_object_inline_y_100, width:JSCompiler_object_inline_width_97 * JSCompiler_object_inline_x_101};
        c$$374.to = {height:JSCompiler_object_inline_height_96 * JSCompiler_object_inline_y_102, width:JSCompiler_object_inline_width_97 * JSCompiler_object_inline_x_103};
        var v24849 = JSCompiler_object_inline_y_100 != JSCompiler_object_inline_y_102;
        if (v24849) {
          var v28074 = c$$374;
          var v28946 = a$$503.effects;
          var v31050 = JAM.call(v28946.setTransition, v28946, [c$$374, h$$123, JSCompiler_object_inline_y_100, c$$374.from], JAM.policy.p3);
          v28074.from = v31050;
          var v28075 = c$$374;
          var v28948 = a$$503.effects;
          var v31051 = JAM.call(v28948.setTransition, v28948, [c$$374, h$$123, JSCompiler_object_inline_y_102, c$$374.to], JAM.policy.p3);
          v28075.to = v31051;
        }
        var v20569 = JSCompiler_object_inline_x_101 != JSCompiler_object_inline_x_103;
        if (v20569) {
          var v26763 = c$$374;
          var v28076 = a$$503.effects;
          var v31052 = JAM.call(v28076.setTransition, v28076, [c$$374, i$$180, JSCompiler_object_inline_x_101, c$$374.from], JAM.policy.p3);
          v26763.from = v31052;
          var v26764 = c$$374;
          var v28078 = a$$503.effects;
          var v31053 = JAM.call(v28078.setTransition, v28078, [c$$374, i$$180, JSCompiler_object_inline_x_103, c$$374.to], JAM.policy.p3);
          v26764.to = v31053;
        }
        JAM.call(c$$374.css, c$$374, [c$$374.from], JAM.policy.p3);
        JAM.call(c$$374.animate, c$$374, [c$$374.to, b$$466.duration, b$$466.options.easing, v1434], JAM.policy.p3);
        return;
      }
      var c$$373 = JAM.call(a$$503, null, [this], JAM.policy.p3);
      var d$$292 = ["position", "top", "bottom", "left", "right", "width", "height", "overflow", "opacity"];
      var e$$266 = ["position", "top", "bottom", "left", "right", "overflow", "opacity"];
      var f$$125 = ["width", "height", "overflow"];
      var g$$152 = ["fontSize"];
      var h$$123 = ["borderTopWidth", "borderBottomWidth", "paddingTop", "paddingBottom"];
      var i$$180 = ["borderLeftWidth", "borderRightWidth", "paddingLeft", "paddingRight"];
      var v4113 = a$$503.effects;
      var v10912 = b$$466.options.mode;
      if (!v10912) {
        v10912 = "effect";
      }
      var j$$89 = JAM.call(v4113.setMode, v4113, [c$$373, v10912], JAM.policy.p3);
      var v4115 = b$$466.options.restore;
      if (!v4115) {
        v4115 = !1;
      }
      var k$$60 = v4115;
      var v4116 = b$$466.options.scale;
      if (!v4116) {
        v4116 = "both";
      }
      var l$$69 = v4116;
      var m$$40 = b$$466.options.origin;
      var n$$89 = {height:JAM.call(c$$373.height, c$$373, [], JAM.policy.p3), width:JAM.call(c$$373.width, c$$373, [], JAM.policy.p3)};
      var v10917 = b$$466.options.from;
      if (!v10917) {
        v10917 = n$$89;
      }
      c$$373.from = v10917;
      var v10918 = b$$466.options.to;
      if (!v10918) {
        v10918 = n$$89;
      }
      c$$373.to = v10918;
      if (m$$40) {
        var v4120 = a$$503.effects;
        var p$$44 = JAM.call(v4120.getBaseline, v4120, [m$$40, n$$89], JAM.policy.p3);
        c$$373.from.top = (n$$89.height - c$$373.from.height) * p$$44.y;
        c$$373.from.left = (n$$89.width - c$$373.from.width) * p$$44.x;
        c$$373.to.top = (n$$89.height - c$$373.to.height) * p$$44.y;
        c$$373.to.left = (n$$89.width - c$$373.to.width) * p$$44.x;
      }
      var JSCompiler_object_inline_y_100 = c$$373.from.height / n$$89.height;
      var JSCompiler_object_inline_x_101 = c$$373.from.width / n$$89.width;
      var JSCompiler_object_inline_y_102 = c$$373.to.height / n$$89.height;
      var JSCompiler_object_inline_x_103 = c$$373.to.width / n$$89.width;
      var v10924 = l$$69 == "box";
      if (!v10924) {
        v10924 = l$$69 == "both";
      }
      if (v10924) {
        var v10925 = JSCompiler_object_inline_y_100 != JSCompiler_object_inline_y_102;
        if (v10925) {
          d$$292 = JAM.call(d$$292.concat, d$$292, [h$$123], JAM.policy.p3);
          var v24857 = c$$373;
          var v26770 = a$$503.effects;
          var v31054 = JAM.call(v26770.setTransition, v26770, [c$$373, h$$123, JSCompiler_object_inline_y_100, c$$373.from], JAM.policy.p3);
          v24857.from = v31054;
          var v20576 = c$$373;
          var v24858 = a$$503.effects;
          var v31055 = JAM.call(v24858.setTransition, v24858, [c$$373, h$$123, JSCompiler_object_inline_y_102, c$$373.to], JAM.policy.p3);
          v20576.to = v31055;
        }
        var v10926 = JSCompiler_object_inline_x_101 != JSCompiler_object_inline_x_103;
        if (v10926) {
          d$$292 = JAM.call(d$$292.concat, d$$292, [i$$180], JAM.policy.p3);
          var v24860 = c$$373;
          var v26772 = a$$503.effects;
          var v31056 = JAM.call(v26772.setTransition, v26772, [c$$373, i$$180, JSCompiler_object_inline_x_101, c$$373.from], JAM.policy.p3);
          v24860.from = v31056;
          var v20577 = c$$373;
          var v24861 = a$$503.effects;
          var v31057 = JAM.call(v24861.setTransition, v24861, [c$$373, i$$180, JSCompiler_object_inline_x_103, c$$373.to], JAM.policy.p3);
          v20577.to = v31057;
        }
      }
      var v28082 = l$$69 == "content";
      if (!v28082) {
        v28082 = l$$69 == "both";
      }
      var v26774 = v28082;
      if (v26774) {
        v26774 = JSCompiler_object_inline_y_100 != JSCompiler_object_inline_y_102;
      }
      var v24863 = v26774;
      if (v24863) {
        d$$292 = JAM.call(d$$292.concat, d$$292, [g$$152], JAM.policy.p3);
        var v28951 = c$$373;
        var v29526 = a$$503.effects;
        var v31058 = JAM.call(v29526.setTransition, v29526, [c$$373, g$$152, JSCompiler_object_inline_y_100, c$$373.from], JAM.policy.p3);
        v28951.from = v31058;
        var v28083 = c$$373;
        var v28952 = a$$503.effects;
        var v31059 = JAM.call(v28952.setTransition, v28952, [c$$373, g$$152, JSCompiler_object_inline_y_102, c$$373.to], JAM.policy.p3);
        v28083.to = v31059;
      }
      var v24864 = a$$503.effects;
      var v26775;
      if (k$$60) {
        v26775 = d$$292;
      } else {
        v26775 = e$$266;
      }
      JAM.call(v24864.save, v24864, [c$$373, v26775], JAM.policy.p3);
      JAM.call(c$$373.show, c$$373, [], JAM.policy.p3);
      var v16521 = a$$503.effects;
      JAM.call(v16521.createWrapper, v16521, [c$$373], JAM.policy.p3);
      var v10927 = JAM.call(c$$373.css, c$$373, ["overflow", "hidden"], JAM.policy.p3);
      JAM.call(v10927.css, v10927, [c$$373.from], JAM.policy.p3);
      var v10929 = l$$69 == "content";
      if (!v10929) {
        v10929 = l$$69 == "both";
      }
      if (v10929) {
        var v20578 = JAM.call(h$$123.concat, h$$123, [["marginTop", "marginBottom"]], JAM.policy.p3);
        h$$123 = JAM.call(v20578.concat, v20578, [g$$152], JAM.policy.p3);
        i$$180 = JAM.call(i$$180.concat, i$$180, [["marginLeft", "marginRight"]], JAM.policy.p3);
        var v16523 = JAM.call(d$$292.concat, d$$292, [h$$123], JAM.policy.p3);
        f$$125 = JAM.call(v16523.concat, v16523, [i$$180], JAM.policy.p3);
        var v10930 = JAM.call(c$$373.find, c$$373, ["*[width]"], JAM.policy.p3);
        JAM.call(v10930.each, v10930, [v1435], JAM.policy.p3);
      }
      JAM.call(c$$373.animate, c$$373, [c$$373.to, {queue:!1, duration:b$$466.duration, easing:b$$466.options.easing, complete:v1436}], JAM.policy.p3);
      return;
    }
    return JAM.call(this.queue, this, [v1437], JAM.policy.p3);
  }
  function v1433(b$$465) {
    function v1432() {
      var c$$372 = JAM.call(a$$503, null, [this], JAM.policy.p3);
      var d$$291 = JAM.call(a$$503.extend, a$$503, [!0, {}, b$$465.options], JAM.policy.p3);
      var v4135 = a$$503.effects;
      var v10934 = b$$465.options.mode;
      if (!v10934) {
        v10934 = "effect";
      }
      var e$$265 = JAM.call(v4135.setMode, v4135, [c$$372, v10934], JAM.policy.p3);
      var v4137 = parseInt(b$$465.options.percent, 10);
      if (!v4137) {
        var v10936;
        if (parseInt(b$$465.options.percent, 10) == 0) {
          v10936 = 0;
        } else {
          var v16528;
          if (e$$265 == "hide") {
            v16528 = 0;
          } else {
            v16528 = 100;
          }
          v10936 = v16528;
        }
        v4137 = v10936;
      }
      var f$$124 = v4137;
      var v4138 = b$$465.options.direction;
      if (!v4138) {
        v4138 = "both";
      }
      var g$$151 = v4138;
      var h$$122 = b$$465.options.origin;
      var v4140 = e$$265 != "effect";
      if (v4140) {
        var v16530 = h$$122;
        if (!v16530) {
          v16530 = ["middle", "center"];
        }
        d$$291.origin = v16530;
        d$$291.restore = !0;
      }
      var i$$179 = {height:JAM.call(c$$372.height, c$$372, [], JAM.policy.p3), width:JAM.call(c$$372.width, c$$372, [], JAM.policy.p3)};
      var v4143 = b$$465.options.from;
      if (!v4143) {
        var v10941;
        if (e$$265 == "show") {
          v10941 = {height:0, width:0};
        } else {
          v10941 = i$$179;
        }
        v4143 = v10941;
      }
      c$$372.from = v4143;
      var v4144;
      if (g$$151 != "horizontal") {
        v4144 = f$$124 / 100;
      } else {
        v4144 = 1;
      }
      var JSCompiler_object_inline_y_94 = v4144;
      var v4145;
      if (g$$151 != "vertical") {
        v4145 = f$$124 / 100;
      } else {
        v4145 = 1;
      }
      var JSCompiler_object_inline_x_95 = v4145;
      c$$372.to = {height:i$$179.height * JSCompiler_object_inline_y_94, width:i$$179.width * JSCompiler_object_inline_x_95};
      var v28086 = b$$465.options.fade;
      if (v28086) {
        var v29528 = e$$265 == "show";
        if (v29528) {
          c$$372.from.opacity = 0;
          c$$372.to.opacity = 1;
        }
        var v29529 = e$$265 == "hide";
        if (v29529) {
          c$$372.from.opacity = 1;
          c$$372.to.opacity = 0;
        }
      }
      d$$291.from = c$$372.from;
      d$$291.to = c$$372.to;
      d$$291.mode = e$$265;
      JAM.call(c$$372.effect, c$$372, ["size", d$$291, b$$465.duration, b$$465.callback], JAM.policy.p3);
      JAM.call(c$$372.dequeue, c$$372, [], JAM.policy.p3);
      return;
    }
    return JAM.call(this.queue, this, [v1432], JAM.policy.p3);
  }
  function v1431(b$$464) {
    function v1430() {
      var c$$371 = JAM.call(a$$503, null, [this], JAM.policy.p3);
      var v4146 = a$$503.effects;
      var v10945 = b$$464.options.mode;
      if (!v10945) {
        v10945 = "hide";
      }
      var d$$290 = JAM.call(v4146.setMode, v4146, [c$$371, v10945], JAM.policy.p3);
      var v4148 = parseInt(b$$464.options.percent, 10);
      if (!v4148) {
        v4148 = 150;
      }
      var e$$264 = v4148;
      var f$$123 = e$$264 / 100;
      var g$$150 = {height:JAM.call(c$$371.height, c$$371, [], JAM.policy.p3), width:JAM.call(c$$371.width, c$$371, [], JAM.policy.p3)};
      var v16537 = b$$464.options;
      var v20583 = !0;
      var v24868;
      if (d$$290 == "hide") {
        v24868 = e$$264;
      } else {
        v24868 = 100;
      }
      var v20584 = v24868;
      var v24869;
      if (d$$290 == "hide") {
        v24869 = g$$150;
      } else {
        v24869 = {height:g$$150.height * f$$123, width:g$$150.width * f$$123};
      }
      JAM.call(a$$503.extend, a$$503, [v16537, {fade:v20583, mode:d$$290, percent:v20584, from:v24869}], JAM.policy.p3);
      JAM.call(c$$371.effect, c$$371, ["scale", b$$464.options, b$$464.duration, b$$464.callback], JAM.policy.p3);
      JAM.call(c$$371.dequeue, c$$371, [], JAM.policy.p3);
      return;
    }
    return JAM.call(this.queue, this, [v1430], JAM.policy.p3);
  }
  a$$503.effects.puff = v1431;
  a$$503.effects.scale = v1433;
  a$$503.effects.size = v1438;
  return;
}
function v1429(a$$502, b$$461) {
  function v1428(b$$462) {
    function v1427() {
      function v1426() {
        JAM.call(c$$370.dequeue, c$$370, [], JAM.policy.p3);
        return;
      }
      function v1425() {
        var v10949 = h$$121 == 0;
        if (v10949) {
          JAM.call(c$$370.hide, c$$370, [], JAM.policy.p3);
        }
        var v10950 = b$$462.callback;
        if (v10950) {
          var v16544 = b$$462.callback;
          JAM.call(v16544.apply, v16544, [this, arguments], JAM.policy.p3);
        }
        return;
      }
      var c$$370 = JAM.call(a$$502, null, [this], JAM.policy.p3);
      var v4151 = a$$502.effects;
      var v10951 = b$$462.options.mode;
      if (!v10951) {
        v10951 = "show";
      }
      var d$$289 = JAM.call(v4151.setMode, v4151, [c$$370, v10951], JAM.policy.p3);
      var v16547 = b$$462.options.times;
      if (!v16547) {
        v16547 = 5;
      }
      var e$$263 = v16547 * 2 - 1;
      var v4154;
      if (b$$462.duration) {
        v4154 = b$$462.duration / 2;
      } else {
        v4154 = a$$502.fx.speeds._default / 2;
      }
      var f$$122 = v4154;
      var g$$149 = JAM.call(c$$370.is, c$$370, [":visible"], JAM.policy.p3);
      var h$$121 = 0;
      if (!g$$149) {
        var v20589 = JAM.call(c$$370.css, c$$370, ["opacity", 0], JAM.policy.p3);
        JAM.call(v20589.show, v20589, [], JAM.policy.p3);
        h$$121 = 1;
      }
      var v20590 = d$$289 == "hide";
      if (v20590) {
        v20590 = g$$149;
      }
      var v16550 = v20590;
      if (!v16550) {
        var v20591 = d$$289 == "show";
        if (v20591) {
          v20591 = !g$$149;
        }
        v16550 = v20591;
      }
      var v10956 = v16550;
      if (v10956) {
        e$$263--;
      }
      var i$$178 = 0;
      var v4155 = i$$178 < e$$263;
      for (;v4155;) {
        JAM.call(c$$370.animate, c$$370, [{opacity:h$$121}, f$$122, b$$462.options.easing], JAM.policy.p3);
        h$$121 = (h$$121 + 1) % 2;
        i$$178++;
        v4155 = i$$178 < e$$263;
      }
      JAM.call(c$$370.animate, c$$370, [{opacity:h$$121}, f$$122, b$$462.options.easing, v1425], JAM.policy.p3);
      var v10962 = JAM.call(c$$370.queue, c$$370, ["fx", v1426], JAM.policy.p3);
      JAM.call(v10962.dequeue, v10962, [], JAM.policy.p3);
      return;
    }
    return JAM.call(this.queue, this, [v1427], JAM.policy.p3);
  }
  a$$502.effects.pulsate = v1428;
  return;
}
function v1424(a$$501, b$$459) {
  function v1423(b$$460) {
    function v1422() {
      function v1421() {
        var v24870 = e$$262 == "hide";
        if (v24870) {
          JAM.call(c$$369.hide, c$$369, [], JAM.policy.p3);
        }
        var v24871 = a$$501.effects;
        JAM.call(v24871.restore, v24871, [c$$369, d$$288], JAM.policy.p3);
        var v24872 = e$$262 == "show";
        if (v24872) {
          v24872 = !a$$501.support.opacity;
        }
        var v20593 = v24872;
        if (v20593) {
          var v24873 = this.style;
          JAM.call(v24873.removeAttribute, v24873, ["filter"], JAM.policy.p3);
        }
        var v16553 = b$$460.callback;
        if (v16553) {
          var v20594 = b$$460.callback;
          JAM.call(v20594.apply, v20594, [this, arguments], JAM.policy.p3);
        }
        JAM.call(c$$369.dequeue, c$$369, [], JAM.policy.p3);
        return;
      }
      var c$$369 = JAM.call(a$$501, null, [this], JAM.policy.p3);
      var d$$288 = ["backgroundImage", "backgroundColor", "opacity"];
      var v4157 = a$$501.effects;
      var v10963 = b$$460.options.mode;
      if (!v10963) {
        v10963 = "show";
      }
      var e$$262 = JAM.call(v4157.setMode, v4157, [c$$369, v10963], JAM.policy.p3);
      var f$$121 = {backgroundColor:JAM.call(c$$369.css, c$$369, ["backgroundColor"], JAM.policy.p3)};
      var v16556 = e$$262 == "hide";
      if (v16556) {
        f$$121.opacity = 0;
      }
      var v16557 = a$$501.effects;
      JAM.call(v16557.save, v16557, [c$$369, d$$288], JAM.policy.p3);
      var v16558 = JAM.call(c$$369.show, c$$369, [], JAM.policy.p3);
      var v24874 = b$$460.options.color;
      if (!v24874) {
        v24874 = "#ffff99";
      }
      var v10964 = JAM.call(v16558.css, v16558, [{backgroundImage:"none", backgroundColor:v24874}], JAM.policy.p3);
      JAM.call(v10964.animate, v10964, [f$$121, {queue:!1, duration:b$$460.duration, easing:b$$460.options.easing, complete:v1421}], JAM.policy.p3);
      return;
    }
    return JAM.call(this.queue, this, [v1422], JAM.policy.p3);
  }
  a$$501.effects.highlight = v1423;
  return;
}
function v1420(a$$500, b$$457) {
  function v1419(b$$458) {
    function v1418() {
      function v1417() {
        var v24875 = e$$261 == "hide";
        if (v24875) {
          JAM.call(c$$368.hide, c$$368, [], JAM.policy.p3);
        }
        var v24876 = a$$500.effects;
        JAM.call(v24876.restore, v24876, [c$$368, d$$287], JAM.policy.p3);
        var v20597 = a$$500.effects;
        JAM.call(v20597.removeWrapper, v20597, [c$$368], JAM.policy.p3);
        var v16563 = b$$458.callback;
        if (v16563) {
          var v20598 = b$$458.callback;
          JAM.call(v20598.apply, v20598, [c$$368[0], arguments], JAM.policy.p3);
        }
        JAM.call(c$$368.dequeue, c$$368, [], JAM.policy.p3);
        return;
      }
      var c$$368 = JAM.call(a$$500, null, [this], JAM.policy.p3);
      var d$$287 = ["position", "top", "bottom", "left", "right"];
      var v4161 = a$$500.effects;
      var v10966 = b$$458.options.mode;
      if (!v10966) {
        v10966 = "hide";
      }
      var e$$261 = JAM.call(v4161.setMode, v4161, [c$$368, v10966], JAM.policy.p3);
      var v4163 = b$$458.options.size;
      if (!v4163) {
        v4163 = 15;
      }
      var f$$120 = v4163;
      var g$$148 = !!b$$458.options.horizFirst;
      var v4165;
      if (b$$458.duration) {
        v4165 = b$$458.duration / 2;
      } else {
        v4165 = a$$500.fx.speeds._default / 2;
      }
      var h$$120 = v4165;
      var v10973 = a$$500.effects;
      JAM.call(v10973.save, v10973, [c$$368, d$$287], JAM.policy.p3);
      JAM.call(c$$368.show, c$$368, [], JAM.policy.p3);
      var v10974 = a$$500.effects;
      var v4166 = JAM.call(v10974.createWrapper, v10974, [c$$368], JAM.policy.p3);
      var i$$177 = JAM.call(v4166.css, v4166, [{overflow:"hidden"}], JAM.policy.p3);
      var j$$87 = e$$261 == "show" != g$$148;
      var v4169;
      if (j$$87) {
        v4169 = ["width", "height"];
      } else {
        v4169 = ["height", "width"];
      }
      var k$$59 = v4169;
      var v4170;
      if (j$$87) {
        v4170 = [JAM.call(i$$177.width, i$$177, [], JAM.policy.p3), JAM.call(i$$177.height, i$$177, [], JAM.policy.p3)];
      } else {
        v4170 = [JAM.call(i$$177.height, i$$177, [], JAM.policy.p3), JAM.call(i$$177.width, i$$177, [], JAM.policy.p3)];
      }
      var l$$68 = v4170;
      var m$$39 = JAM.call(/([0-9]+)%/.exec, /([0-9]+)%/, [f$$120], JAM.policy.p3);
      if (m$$39) {
        var v16568 = parseInt(m$$39[1], 10) / 100;
        var v24878;
        if (e$$261 == "hide") {
          v24878 = 0;
        } else {
          v24878 = 1;
        }
        f$$120 = v16568 * l$$68[v24878];
      }
      var v10979 = e$$261 == "show";
      if (v10979) {
        var v20603;
        if (g$$148) {
          v20603 = {height:0, width:f$$120};
        } else {
          v20603 = {height:f$$120, width:0};
        }
        JAM.call(i$$177.css, i$$177, [v20603], JAM.policy.p3);
      }
      var n$$88 = {};
      var p$$43 = {};
      var v16571 = k$$59[0];
      var v20604;
      if (e$$261 == "show") {
        v20604 = l$$68[0];
      } else {
        v20604 = f$$120;
      }
      JAM.set(n$$88, v16571, v20604, JAM.policy.p2);
      var v16572 = k$$59[1];
      var v20605;
      if (e$$261 == "show") {
        v20605 = l$$68[1];
      } else {
        v20605 = 0;
      }
      JAM.set(p$$43, v16572, v20605, JAM.policy.p2);
      var v10980 = JAM.call(i$$177.animate, i$$177, [n$$88, h$$120, b$$458.options.easing], JAM.policy.p3);
      JAM.call(v10980.animate, v10980, [p$$43, h$$120, b$$458.options.easing, v1417], JAM.policy.p3);
      return;
    }
    return JAM.call(this.queue, this, [v1418], JAM.policy.p3);
  }
  a$$500.effects.fold = v1419;
  return;
}
function v1416(a$$499, b$$455) {
  function v1415(b$$456) {
    function v1414() {
      function v1413() {
        var v10982 = b$$456.callback;
        if (v10982) {
          var v16575 = b$$456.callback;
          JAM.call(v16575.apply, v16575, [this, arguments], JAM.policy.p3);
        }
        JAM.call(c$$367.dequeue, c$$367, [], JAM.policy.p3);
        return;
      }
      var c$$367 = JAM.call(a$$499, null, [this], JAM.policy.p3);
      var v4172 = a$$499.effects;
      var v10983 = b$$456.options.mode;
      if (!v10983) {
        v10983 = "hide";
      }
      var d$$286 = JAM.call(v4172.setMode, v4172, [c$$367, v10983], JAM.policy.p3);
      JAM.call(c$$367.animate, c$$367, [{opacity:d$$286}, {queue:!1, duration:b$$456.duration, easing:b$$456.options.easing, complete:v1413}], JAM.policy.p3);
      return;
    }
    return JAM.call(this.queue, this, [v1414], JAM.policy.p3);
  }
  a$$499.effects.fade = v1415;
  return;
}
function v1412(a$$498, b$$453) {
  function v1411(b$$454) {
    function v1410() {
      function v1409() {
        var v20607;
        if (b$$454.options.mode == "show") {
          v20607 = JAM.call(e$$260.css, e$$260, [{visibility:"visible"}], JAM.policy.p3);
        } else {
          var v24882 = JAM.call(e$$260.css, e$$260, [{visibility:"visible"}], JAM.policy.p3);
          v20607 = JAM.call(v24882.hide, v24882, [], JAM.policy.p3);
        }
        v20607;
        var v20608 = b$$454.callback;
        if (v20608) {
          var v24884 = b$$454.callback;
          JAM.call(v24884.apply, v24884, [e$$260[0]], JAM.policy.p3);
        }
        JAM.call(e$$260.dequeue, e$$260, [], JAM.policy.p3);
        var v10987 = JAM.call(a$$498, null, ["div.ui-effects-explode"], JAM.policy.p3);
        JAM.call(v10987.remove, v10987, [], JAM.policy.p3);
        return;
      }
      var v4177;
      if (b$$454.options.pieces) {
        v4177 = JAM.call(Math.round, Math, [JAM.call(Math.sqrt, Math, [b$$454.options.pieces], JAM.policy.p3)], JAM.policy.p3);
      } else {
        v4177 = 3;
      }
      var c$$366 = v4177;
      var v4178;
      if (b$$454.options.pieces) {
        v4178 = JAM.call(Math.round, Math, [JAM.call(Math.sqrt, Math, [b$$454.options.pieces], JAM.policy.p3)], JAM.policy.p3);
      } else {
        v4178 = 3;
      }
      var d$$285 = v4178;
      var v4179 = b$$454.options;
      var v10992;
      if (b$$454.options.mode == "toggle") {
        var v16583;
        var v24887 = JAM.call(a$$498, null, [this], JAM.policy.p3);
        if (JAM.call(v24887.is, v24887, [":visible"], JAM.policy.p3)) {
          v16583 = "hide";
        } else {
          v16583 = "show";
        }
        v10992 = v16583;
      } else {
        v10992 = b$$454.options.mode;
      }
      v4179.mode = v10992;
      var v10993 = JAM.call(a$$498, null, [this], JAM.policy.p3);
      var v4180 = JAM.call(v10993.show, v10993, [], JAM.policy.p3);
      var e$$260 = JAM.call(v4180.css, v4180, ["visibility", "hidden"], JAM.policy.p3);
      var f$$119 = JAM.call(e$$260.offset, e$$260, [], JAM.policy.p3);
      var v10994 = f$$119;
      var v20613 = v10994.top;
      var v24888 = parseInt(JAM.call(e$$260.css, e$$260, ["marginTop"], JAM.policy.p3), 10);
      if (!v24888) {
        v24888 = 0;
      }
      v10994.top = v20613 - v24888;
      var v10995 = f$$119;
      var v20615 = v10995.left;
      var v24889 = parseInt(JAM.call(e$$260.css, e$$260, ["marginLeft"], JAM.policy.p3), 10);
      if (!v24889) {
        v24889 = 0;
      }
      v10995.left = v20615 - v24889;
      var g$$147 = JAM.call(e$$260.outerWidth, e$$260, [!0], JAM.policy.p3);
      var h$$119 = JAM.call(e$$260.outerHeight, e$$260, [!0], JAM.policy.p3);
      var i$$176 = 0;
      var v4187 = i$$176 < c$$366;
      for (;v4187;) {
        var j$$86 = 0;
        var v4186 = j$$86 < d$$285;
        for (;v4186;) {
          var v28091 = JAM.call(e$$260.clone, e$$260, [], JAM.policy.p3);
          var v26791 = JAM.call(v28091.appendTo, v28091, ["body"], JAM.policy.p3);
          var v24890 = JAM.call(v26791.wrap, v26791, ["<div></div>"], JAM.policy.p3);
          var v20617 = JAM.call(v24890.css, v24890, [{position:"absolute", visibility:"visible", left:-j$$86 * (g$$147 / d$$285), top:-i$$176 * (h$$119 / c$$366)}], JAM.policy.p3);
          var v16586 = JAM.call(v20617.parent, v20617, [], JAM.policy.p3);
          var v10996 = JAM.call(v16586.addClass, v16586, ["ui-effects-explode"], JAM.policy.p3);
          var v16587 = g$$147 / d$$285;
          var v16588 = h$$119 / c$$366;
          var v20618 = f$$119.left + j$$86 * (g$$147 / d$$285);
          var v24894;
          if (b$$454.options.mode == "show") {
            v24894 = (j$$86 - JAM.call(Math.floor, Math, [d$$285 / 2], JAM.policy.p3)) * (g$$147 / d$$285);
          } else {
            v24894 = 0;
          }
          var v16589 = v20618 + v24894;
          var v20620 = f$$119.top + i$$176 * (h$$119 / c$$366);
          var v24897;
          if (b$$454.options.mode == "show") {
            v24897 = (i$$176 - JAM.call(Math.floor, Math, [c$$366 / 2], JAM.policy.p3)) * (h$$119 / c$$366);
          } else {
            v24897 = 0;
          }
          var v16590 = v20620 + v24897;
          var v20622;
          if (b$$454.options.mode == "show") {
            v20622 = 0;
          } else {
            v20622 = 1;
          }
          var v4183 = JAM.call(v10996.css, v10996, [{position:"absolute", overflow:"hidden", width:v16587, height:v16588, left:v16589, top:v16590, opacity:v20622}], JAM.policy.p3);
          var v16592 = f$$119.left + j$$86 * (g$$147 / d$$285);
          var v20625;
          if (b$$454.options.mode == "show") {
            v20625 = 0;
          } else {
            v20625 = (j$$86 - JAM.call(Math.floor, Math, [d$$285 / 2], JAM.policy.p3)) * (g$$147 / d$$285);
          }
          var v10998 = v16592 + v20625;
          var v16594 = f$$119.top + i$$176 * (h$$119 / c$$366);
          var v20628;
          if (b$$454.options.mode == "show") {
            v20628 = 0;
          } else {
            v20628 = (i$$176 - JAM.call(Math.floor, Math, [c$$366 / 2], JAM.policy.p3)) * (h$$119 / c$$366);
          }
          var v10999 = v16594 + v20628;
          var v16596;
          if (b$$454.options.mode == "show") {
            v16596 = 1;
          } else {
            v16596 = 0;
          }
          var v4184 = {left:v10998, top:v10999, opacity:v16596};
          var v11001 = b$$454.duration;
          if (!v11001) {
            v11001 = 500;
          }
          JAM.call(v4183.animate, v4183, [v4184, v11001], JAM.policy.p3);
          j$$86++;
          v4186 = j$$86 < d$$285;
        }
        i$$176++;
        v4187 = i$$176 < c$$366;
      }
      var v11002 = b$$454.duration;
      if (!v11002) {
        v11002 = 500;
      }
      JAM.call(setTimeout, null, [v1409, v11002]);
      return;
    }
    return JAM.call(this.queue, this, [v1410], JAM.policy.p3);
  }
  a$$498.effects.explode = v1411;
  return;
}
function v1408(a$$497, b$$451) {
  function v1407(b$$452) {
    function v1406() {
      function v1405() {
        var v24908 = e$$259 == "hide";
        if (v24908) {
          JAM.call(c$$365.hide, c$$365, [], JAM.policy.p3);
        }
        var v24909 = a$$497.effects;
        JAM.call(v24909.restore, v24909, [c$$365, d$$284], JAM.policy.p3);
        var v20630 = a$$497.effects;
        JAM.call(v20630.removeWrapper, v20630, [c$$365], JAM.policy.p3);
        var v16599 = b$$452.callback;
        if (v16599) {
          var v20631 = b$$452.callback;
          JAM.call(v20631.apply, v20631, [this, arguments], JAM.policy.p3);
        }
        JAM.call(c$$365.dequeue, c$$365, [], JAM.policy.p3);
        return;
      }
      var c$$365 = JAM.call(a$$497, null, [this], JAM.policy.p3);
      var d$$284 = ["position", "top", "bottom", "left", "right", "opacity"];
      var v4190 = a$$497.effects;
      var v11003 = b$$452.options.mode;
      if (!v11003) {
        v11003 = "hide";
      }
      var e$$259 = JAM.call(v4190.setMode, v4190, [c$$365, v11003], JAM.policy.p3);
      var v4192 = b$$452.options.direction;
      if (!v4192) {
        v4192 = "left";
      }
      var f$$118 = v4192;
      var v16602 = a$$497.effects;
      JAM.call(v16602.save, v16602, [c$$365, d$$284], JAM.policy.p3);
      JAM.call(c$$365.show, c$$365, [], JAM.policy.p3);
      var v11006 = a$$497.effects;
      JAM.call(v11006.createWrapper, v11006, [c$$365], JAM.policy.p3);
      var v4193;
      var v16603 = f$$118 == "up";
      if (!v16603) {
        v16603 = f$$118 == "down";
      }
      if (v16603) {
        v4193 = "top";
      } else {
        v4193 = "left";
      }
      var g$$146 = v4193;
      var v4194;
      var v16604 = f$$118 == "up";
      if (!v16604) {
        v16604 = f$$118 == "left";
      }
      if (v16604) {
        v4194 = "pos";
      } else {
        v4194 = "neg";
      }
      var h$$118 = v4194;
      var v4195 = b$$452.options.distance;
      if (!v4195) {
        var v11010;
        if (g$$146 == "top") {
          v11010 = JAM.call(c$$365.outerHeight, c$$365, [!0], JAM.policy.p3) / 2;
        } else {
          v11010 = JAM.call(c$$365.outerWidth, c$$365, [!0], JAM.policy.p3) / 2;
        }
        v4195 = v11010;
      }
      var i$$175 = v4195;
      var v4196 = e$$259 == "show";
      if (v4196) {
        var v11012 = JAM.call(c$$365.css, c$$365, ["opacity", 0], JAM.policy.p3);
        var v16608;
        if (h$$118 == "pos") {
          v16608 = -i$$175;
        } else {
          v16608 = i$$175;
        }
        JAM.call(v11012.css, v11012, [g$$146, v16608], JAM.policy.p3);
      }
      var v11014;
      if (e$$259 == "show") {
        v11014 = 1;
      } else {
        v11014 = 0;
      }
      var j$$85 = {opacity:v11014};
      var v16610;
      if (e$$259 == "show") {
        var v20637;
        if (h$$118 == "pos") {
          v20637 = "+=";
        } else {
          v20637 = "-=";
        }
        v16610 = v20637;
      } else {
        var v20638;
        if (h$$118 == "pos") {
          v20638 = "-=";
        } else {
          v20638 = "+=";
        }
        v16610 = v20638;
      }
      JAM.set(j$$85, g$$146, v16610 + i$$175, JAM.policy.p2);
      JAM.call(c$$365.animate, c$$365, [j$$85, {queue:!1, duration:b$$452.duration, easing:b$$452.options.easing, complete:v1405}], JAM.policy.p3);
      return;
    }
    return JAM.call(this.queue, this, [v1406], JAM.policy.p3);
  }
  a$$497.effects.drop = v1407;
  return;
}
function v1404(a$$496, b$$449) {
  function v1403(b$$450) {
    function v1402() {
      function v1401() {
        var v24912 = e$$258 == "hide";
        if (v24912) {
          JAM.call(c$$364.hide, c$$364, [], JAM.policy.p3);
        }
        var v24913 = a$$496.effects;
        JAM.call(v24913.restore, v24913, [c$$364, d$$283], JAM.policy.p3);
        var v20641 = a$$496.effects;
        JAM.call(v20641.removeWrapper, v20641, [c$$364], JAM.policy.p3);
        var v16614 = b$$450.callback;
        if (v16614) {
          var v20642 = b$$450.callback;
          JAM.call(v20642.apply, v20642, [c$$364[0], arguments], JAM.policy.p3);
        }
        JAM.call(c$$364.dequeue, c$$364, [], JAM.policy.p3);
        return;
      }
      var c$$364 = JAM.call(a$$496, null, [this], JAM.policy.p3);
      var d$$283 = ["position", "top", "bottom", "left", "right", "height", "width"];
      var v4199 = a$$496.effects;
      var v11017 = b$$450.options.mode;
      if (!v11017) {
        v11017 = "hide";
      }
      var e$$258 = JAM.call(v4199.setMode, v4199, [c$$364, v11017], JAM.policy.p3);
      var v4201 = b$$450.options.direction;
      if (!v4201) {
        v4201 = "vertical";
      }
      var f$$117 = v4201;
      var v11020 = a$$496.effects;
      JAM.call(v11020.save, v11020, [c$$364, d$$283], JAM.policy.p3);
      JAM.call(c$$364.show, c$$364, [], JAM.policy.p3);
      var v11021 = a$$496.effects;
      var v4202 = JAM.call(v11021.createWrapper, v11021, [c$$364], JAM.policy.p3);
      var g$$145 = JAM.call(v4202.css, v4202, [{overflow:"hidden"}], JAM.policy.p3);
      var v4204;
      if (c$$364[0].tagName == "IMG") {
        v4204 = g$$145;
      } else {
        v4204 = c$$364;
      }
      var h$$117 = v4204;
      var v4205;
      if (f$$117 == "vertical") {
        v4205 = "height";
      } else {
        v4205 = "width";
      }
      var JSCompiler_object_inline_size_92 = v4205;
      var v4206;
      if (f$$117 == "vertical") {
        v4206 = "top";
      } else {
        v4206 = "left";
      }
      var JSCompiler_object_inline_position_93 = v4206;
      var v4207;
      if (f$$117 == "vertical") {
        v4207 = JAM.call(h$$117.height, h$$117, [], JAM.policy.p3);
      } else {
        v4207 = JAM.call(h$$117.width, h$$117, [], JAM.policy.p3);
      }
      var j$$84 = v4207;
      var v4208 = e$$258 == "show";
      if (v4208) {
        JAM.call(h$$117.css, h$$117, [JSCompiler_object_inline_size_92, 0], JAM.policy.p3);
        JAM.call(h$$117.css, h$$117, [JSCompiler_object_inline_position_93, j$$84 / 2], JAM.policy.p3);
      }
      var k$$58 = {};
      var v16619;
      if (e$$258 == "show") {
        v16619 = j$$84;
      } else {
        v16619 = 0;
      }
      JAM.set(k$$58, JSCompiler_object_inline_size_92, v16619, JAM.policy.p2);
      var v16620;
      if (e$$258 == "show") {
        v16620 = 0;
      } else {
        v16620 = j$$84 / 2;
      }
      JAM.set(k$$58, JSCompiler_object_inline_position_93, v16620, JAM.policy.p2);
      JAM.call(h$$117.animate, h$$117, [k$$58, {queue:!1, duration:b$$450.duration, easing:b$$450.options.easing, complete:v1401}], JAM.policy.p3);
      return;
    }
    return JAM.call(this.queue, this, [v1402], JAM.policy.p3);
  }
  a$$496.effects.clip = v1403;
  return;
}
function v1400(a$$495, b$$447) {
  function v1399(b$$448) {
    function v1398() {
      function v1397() {
        JAM.call(c$$363.dequeue, c$$363, [], JAM.policy.p3);
        return;
      }
      function v1396() {
        var v16624 = a$$495.effects;
        JAM.call(v16624.restore, v16624, [c$$363, d$$282], JAM.policy.p3);
        var v16625 = a$$495.effects;
        JAM.call(v16625.removeWrapper, v16625, [c$$363], JAM.policy.p3);
        var v11027 = b$$448.callback;
        if (v11027) {
          var v16626 = b$$448.callback;
          JAM.call(v16626.apply, v16626, [this, arguments], JAM.policy.p3);
        }
        return;
      }
      function v1395() {
        JAM.call(c$$363.hide, c$$363, [], JAM.policy.p3);
        var v20648 = a$$495.effects;
        JAM.call(v20648.restore, v20648, [c$$363, d$$282], JAM.policy.p3);
        var v16627 = a$$495.effects;
        JAM.call(v16627.removeWrapper, v16627, [c$$363], JAM.policy.p3);
        var v11028 = b$$448.callback;
        if (v11028) {
          var v16628 = b$$448.callback;
          JAM.call(v16628.apply, v16628, [this, arguments], JAM.policy.p3);
        }
        return;
      }
      var c$$363 = JAM.call(a$$495, null, [this], JAM.policy.p3);
      var d$$282 = ["position", "top", "bottom", "left", "right"];
      var v4210 = a$$495.effects;
      var v11029 = b$$448.options.mode;
      if (!v11029) {
        v11029 = "effect";
      }
      var e$$257 = JAM.call(v4210.setMode, v4210, [c$$363, v11029], JAM.policy.p3);
      var v4212 = b$$448.options.direction;
      if (!v4212) {
        v4212 = "up";
      }
      var f$$116 = v4212;
      var v4213 = b$$448.options.distance;
      if (!v4213) {
        v4213 = 20;
      }
      var g$$144 = v4213;
      var v4214 = b$$448.options.times;
      if (!v4214) {
        v4214 = 5;
      }
      var h$$116 = v4214;
      var v4215 = b$$448.duration;
      if (!v4215) {
        v4215 = 250;
      }
      var i$$173 = v4215;
      var v20649 = JAM.call(/show|hide/.test, /show|hide/, [e$$257], JAM.policy.p3);
      if (v20649) {
        JAM.call(d$$282.push, d$$282, ["opacity"], JAM.policy.p3);
      }
      var v20650 = a$$495.effects;
      JAM.call(v20650.save, v20650, [c$$363, d$$282], JAM.policy.p3);
      JAM.call(c$$363.show, c$$363, [], JAM.policy.p3);
      var v11037 = a$$495.effects;
      JAM.call(v11037.createWrapper, v11037, [c$$363], JAM.policy.p3);
      var v4216;
      var v16631 = f$$116 == "up";
      if (!v16631) {
        v16631 = f$$116 == "down";
      }
      if (v16631) {
        v4216 = "top";
      } else {
        v4216 = "left";
      }
      var j$$83 = v4216;
      var v4217;
      var v16632 = f$$116 == "up";
      if (!v16632) {
        v16632 = f$$116 == "left";
      }
      if (v16632) {
        v4217 = "pos";
      } else {
        v4217 = "neg";
      }
      var k$$57 = v4217;
      var v4218 = b$$448.options.distance;
      if (!v4218) {
        var v11041;
        if (j$$83 == "top") {
          v11041 = JAM.call(c$$363.outerHeight, c$$363, [!0], JAM.policy.p3) / 3;
        } else {
          v11041 = JAM.call(c$$363.outerWidth, c$$363, [!0], JAM.policy.p3) / 3;
        }
        v4218 = v11041;
      }
      g$$144 = v4218;
      var v16636 = e$$257 == "show";
      if (v16636) {
        var v20655 = JAM.call(c$$363.css, c$$363, ["opacity", 0], JAM.policy.p3);
        var v24914;
        if (k$$57 == "pos") {
          v24914 = -g$$144;
        } else {
          v24914 = g$$144;
        }
        JAM.call(v20655.css, v20655, [j$$83, v24914], JAM.policy.p3);
      }
      var v16637 = e$$257 == "hide";
      if (v16637) {
        g$$144 = g$$144 / (h$$116 * 2);
      }
      var v11043 = e$$257 != "hide";
      if (v11043) {
        h$$116--;
      }
      if (e$$257 == "show") {
        var l$$67 = {opacity:1};
        var v24915;
        if (k$$57 == "pos") {
          v24915 = "+=";
        } else {
          v24915 = "-=";
        }
        JAM.set(l$$67, j$$83, v24915 + g$$144, JAM.policy.p2);
        JAM.call(c$$363.animate, c$$363, [l$$67, i$$173 / 2, b$$448.options.easing], JAM.policy.p3);
        g$$144 = g$$144 / 2;
        h$$116--;
      }
      var m$$38 = 0;
      var v4220 = m$$38 < h$$116;
      for (;v4220;) {
        var n$$87 = {};
        var p$$42 = {};
        var v24917;
        if (k$$57 == "pos") {
          v24917 = "-=";
        } else {
          v24917 = "+=";
        }
        JAM.set(n$$87, j$$83, v24917 + g$$144, JAM.policy.p2);
        var v24918;
        if (k$$57 == "pos") {
          v24918 = "+=";
        } else {
          v24918 = "-=";
        }
        JAM.set(p$$42, j$$83, v24918 + g$$144, JAM.policy.p2);
        var v16638 = JAM.call(c$$363.animate, c$$363, [n$$87, i$$173 / 2, b$$448.options.easing], JAM.policy.p3);
        JAM.call(v16638.animate, v16638, [p$$42, i$$173 / 2, b$$448.options.easing], JAM.policy.p3);
        var v11044;
        if (e$$257 == "hide") {
          v11044 = g$$144 * 2;
        } else {
          v11044 = g$$144 / 2;
        }
        g$$144 = v11044;
        m$$38++;
        v4220 = m$$38 < h$$116;
      }
      if (e$$257 == "hide") {
        l$$67 = {opacity:0};
        var v16642;
        if (k$$57 == "pos") {
          v16642 = "-=";
        } else {
          v16642 = "+=";
        }
        JAM.set(l$$67, j$$83, v16642 + g$$144, JAM.policy.p2);
        JAM.call(c$$363.animate, c$$363, [l$$67, i$$173 / 2, b$$448.options.easing, v1395], JAM.policy.p3);
      } else {
        n$$87 = {};
        p$$42 = {};
        var v20667;
        if (k$$57 == "pos") {
          v20667 = "-=";
        } else {
          v20667 = "+=";
        }
        JAM.set(n$$87, j$$83, v20667 + g$$144, JAM.policy.p2);
        var v20668;
        if (k$$57 == "pos") {
          v20668 = "+=";
        } else {
          v20668 = "-=";
        }
        JAM.set(p$$42, j$$83, v20668 + g$$144, JAM.policy.p2);
        var v11048 = JAM.call(c$$363.animate, c$$363, [n$$87, i$$173 / 2, b$$448.options.easing], JAM.policy.p3);
        JAM.call(v11048.animate, v11048, [p$$42, i$$173 / 2, b$$448.options.easing, v1396], JAM.policy.p3);
      }
      JAM.call(c$$363.queue, c$$363, ["fx", v1397], JAM.policy.p3);
      JAM.call(c$$363.dequeue, c$$363, [], JAM.policy.p3);
      return;
    }
    return JAM.call(this.queue, this, [v1398], JAM.policy.p3);
  }
  a$$495.effects.bounce = v1399;
  return;
}
function v1394(a$$494, b$$445) {
  function v1393(b$$446) {
    function v1392() {
      function v1391() {
        var v24922 = e$$256 == "hide";
        if (v24922) {
          JAM.call(c$$362.hide, c$$362, [], JAM.policy.p3);
        }
        var v24923 = a$$494.effects;
        JAM.call(v24923.restore, v24923, [c$$362, d$$281], JAM.policy.p3);
        var v20670 = a$$494.effects;
        JAM.call(v20670.removeWrapper, v20670, [c$$362], JAM.policy.p3);
        var v16649 = b$$446.callback;
        if (v16649) {
          var v20671 = b$$446.callback;
          JAM.call(v20671.apply, v20671, [c$$362[0], arguments], JAM.policy.p3);
        }
        JAM.call(c$$362.dequeue, c$$362, [], JAM.policy.p3);
        return;
      }
      var c$$362 = JAM.call(a$$494, null, [this], JAM.policy.p3);
      var d$$281 = ["position", "top", "bottom", "left", "right"];
      var v4223 = a$$494.effects;
      var v11051 = b$$446.options.mode;
      if (!v11051) {
        v11051 = "hide";
      }
      var e$$256 = JAM.call(v4223.setMode, v4223, [c$$362, v11051], JAM.policy.p3);
      var v4225 = b$$446.options.direction;
      if (!v4225) {
        v4225 = "vertical";
      }
      var f$$115 = v4225;
      var v11054 = a$$494.effects;
      JAM.call(v11054.save, v11054, [c$$362, d$$281], JAM.policy.p3);
      JAM.call(c$$362.show, c$$362, [], JAM.policy.p3);
      var v11055 = a$$494.effects;
      var v4226 = JAM.call(v11055.createWrapper, v11055, [c$$362], JAM.policy.p3);
      var g$$143 = JAM.call(v4226.css, v4226, [{overflow:"hidden"}], JAM.policy.p3);
      var v4228;
      if (f$$115 == "vertical") {
        v4228 = "height";
      } else {
        v4228 = "width";
      }
      var h$$115 = v4228;
      var v4229;
      if (f$$115 == "vertical") {
        v4229 = JAM.call(g$$143.height, g$$143, [], JAM.policy.p3);
      } else {
        v4229 = JAM.call(g$$143.width, g$$143, [], JAM.policy.p3);
      }
      var i$$172 = v4229;
      var v4230 = e$$256 == "show";
      if (v4230) {
        JAM.call(g$$143.css, g$$143, [h$$115, 0], JAM.policy.p3);
      }
      var j$$82 = {};
      var v11058;
      if (e$$256 == "show") {
        v11058 = i$$172;
      } else {
        v11058 = 0;
      }
      JAM.set(j$$82, h$$115, v11058, JAM.policy.p2);
      JAM.call(g$$143.animate, g$$143, [j$$82, b$$446.duration, b$$446.options.easing, v1391], JAM.policy.p3);
      return;
    }
    return JAM.call(this.queue, this, [v1392], JAM.policy.p3);
  }
  a$$494.effects.blind = v1393;
  return;
}
function v1390(a$$470, b$$414) {
  function v1389(b$$444, c$$361) {
    function v1388(a$$493) {
      var v4232;
      if (a$$493 < .5) {
        v4232 = JAM.call(c$$361, null, [a$$493 * 2], JAM.policy.p3) / 2;
      } else {
        v4232 = JAM.call(c$$361, null, [a$$493 * -2 + 2], JAM.policy.p3) / -2 + 1;
      }
      return v4232;
    }
    function v1387(a$$492) {
      return 1 - JAM.call(c$$361, null, [1 - a$$492], JAM.policy.p3);
    }
    JAM.set(a$$470.easing, "easeIn" + b$$444, c$$361, JAM.policy.p2);
    JAM.set(a$$470.easing, "easeOut" + b$$444, v1387, JAM.policy.p2);
    JAM.set(a$$470.easing, "easeInOut" + b$$444, v1388, JAM.policy.p2);
    return;
  }
  function v1386(a$$491) {
    var b$$443;
    var c$$360 = 4;
    var v4234 = a$$491 < ((b$$443 = JAM.call(Math.pow, Math, [2, c$$360 = c$$360 - 1], JAM.policy.p3)) - 1) / 11;
    for (;v4234;) {
      v4234 = a$$491 < ((b$$443 = JAM.call(Math.pow, Math, [2, c$$360 = c$$360 - 1], JAM.policy.p3)) - 1) / 11;
    }
    return 1 / JAM.call(Math.pow, Math, [4, 3 - c$$360], JAM.policy.p3) - 7.5625 * JAM.call(Math.pow, Math, [(b$$443 * 3 - 2) / 22 - a$$491, 2], JAM.policy.p3);
  }
  function v1385(a$$490) {
    return a$$490 * a$$490 * (3 * a$$490 - 2);
  }
  function v1384(a$$489) {
    var v4239;
    var v16664 = a$$489 === 0;
    if (!v16664) {
      v16664 = a$$489 === 1;
    }
    if (v16664) {
      v4239 = a$$489;
    } else {
      v4239 = -JAM.call(Math.pow, Math, [2, 8 * (a$$489 - 1)], JAM.policy.p3) * JAM.call(Math.sin, Math, [((a$$489 - 1) * 80 - 7.5) * Math.PI / 15], JAM.policy.p3);
    }
    return v4239;
  }
  function v1383(a$$488) {
    return 1 - JAM.call(Math.sqrt, Math, [1 - a$$488 * a$$488], JAM.policy.p3);
  }
  function v1382(a$$487) {
    return 1 - JAM.call(Math.cos, Math, [a$$487 * Math.PI / 2], JAM.policy.p3);
  }
  function v1381(a$$486, b$$441) {
    function v1380(b$$442) {
      return JAM.call(Math.pow, Math, [b$$442, a$$486 + 2], JAM.policy.p3);
    }
    JAM.set(m$$36, b$$441, v1380, JAM.policy.p2);
    return;
  }
  function v1379(b$$439) {
    function v1378(a$$485, b$$440) {
      var v4243 = JAM.call(c$$359.indexOf, c$$359, [b$$440], JAM.policy.p3) > 0;
      if (v4243) {
        d$$280 = [parseFloat(c$$359), b$$440];
      }
      return;
    }
    var c$$359 = JAM.call(this.css, this, [b$$439], JAM.policy.p3);
    var d$$280 = [];
    JAM.call(a$$470.each, a$$470, [["em", "px", "%", "pt"], v1378], JAM.policy.p3);
    return d$$280;
  }
  function v1377(b$$438) {
    var v16669 = l$$65(b$$438);
    if (!v16669) {
      v16669 = typeof b$$438 == "boolean";
    }
    var v11080 = v16669;
    if (!v11080) {
      v11080 = JAM.call(a$$470.isFunction, a$$470, [b$$438], JAM.policy.p3);
    }
    if (v11080) {
      var v4244 = this.__toggle;
      return JAM.call(v4244.apply, v4244, [this, arguments], JAM.policy.p3);
    }
    var c$$358 = JAM.call(k$$55.apply, k$$55, [this, arguments], JAM.policy.p3);
    c$$358[1].mode = "toggle";
    var v11082 = this.effect;
    return JAM.call(v11082.apply, v11082, [this, c$$358], JAM.policy.p3);
  }
  function v1376(a$$484) {
    if (l$$65(a$$484)) {
      var v4246 = this._hide;
      return JAM.call(v4246.apply, v4246, [this, arguments], JAM.policy.p3);
    }
    var b$$437 = JAM.call(k$$55.apply, k$$55, [this, arguments], JAM.policy.p3);
    b$$437[1].mode = "hide";
    var v11084 = this.effect;
    return JAM.call(v11084.apply, v11084, [this, b$$437], JAM.policy.p3);
  }
  function v1375(a$$483) {
    if (l$$65(a$$483)) {
      var v4248 = this._show;
      return JAM.call(v4248.apply, v4248, [this, arguments], JAM.policy.p3);
    }
    var b$$436 = JAM.call(k$$55.apply, k$$55, [this, arguments], JAM.policy.p3);
    b$$436[1].mode = "show";
    var v11086 = this.effect;
    return JAM.call(v11086.apply, v11086, [this, b$$436], JAM.policy.p3);
  }
  function v1374(b$$435, c$$357, d$$279, e$$255) {
    function v1373() {
      var v4250 = g$$142.callback;
      if (v4250) {
        var v11087 = g$$142.callback;
        JAM.call(v11087.call, v11087, [this], JAM.policy.p3);
      }
      return;
    }
    var f$$114 = JAM.call(k$$55.apply, k$$55, [this, arguments], JAM.policy.p3);
    var g$$142 = {options:f$$114[1], duration:f$$114[2], callback:f$$114[3]};
    var h$$114 = g$$142.options.mode;
    var i$$171 = a$$470.effects[b$$435];
    var v4256;
    var v16671 = a$$470.fx.off;
    if (!v16671) {
      v16671 = !i$$171;
    }
    if (v16671) {
      var v11088;
      if (h$$114) {
        v11088 = JAM.call(this[h$$114], this, [g$$142.duration, g$$142.callback], JAM.policy.p3);
      } else {
        v11088 = JAM.call(this.each, this, [v1373], JAM.policy.p3);
      }
      v4256 = v11088;
    } else {
      v4256 = JAM.call(i$$171.call, i$$171, [this, g$$142], JAM.policy.p3);
    }
    return v4256;
  }
  function v1372(b$$434, c$$355, d$$278, e$$254) {
    function v1371(a$$482, c$$356) {
      var f$$113 = JAM.call(b$$434.cssUnit, b$$434, [c$$356], JAM.policy.p3);
      var v4257 = f$$113[0] > 0;
      if (v4257) {
        JAM.set(e$$254, c$$356, f$$113[0] * d$$278 + f$$113[1], JAM.policy.p2);
      }
      return;
    }
    e$$254 = e$$254 || {};
    JAM.call(a$$470.each, a$$470, [c$$355, v1371], JAM.policy.p3);
    return e$$254;
  }
  function v1370(b$$433) {
    var c$$354;
    var d$$277 = document.activeElement;
    var v4258;
    var v16675 = JAM.call(b$$433.parent, b$$433, [], JAM.policy.p3);
    if (JAM.call(v16675.is, v16675, [".ui-effects-wrapper"], JAM.policy.p3)) {
      var v20685 = JAM.call(b$$433.parent, b$$433, [], JAM.policy.p3);
      c$$354 = JAM.call(v20685.replaceWith, v20685, [b$$433], JAM.policy.p3);
      var v24931 = b$$433[0] === d$$277;
      if (!v24931) {
        v24931 = JAM.call(a$$470.contains, a$$470, [b$$433[0], d$$277], JAM.policy.p3);
      }
      var v20686 = v24931;
      if (v20686) {
        var v24932 = JAM.call(a$$470, null, [d$$277], JAM.policy.p3);
        JAM.call(v24932.focus, v24932, [], JAM.policy.p3);
      }
      v4258 = c$$354;
    } else {
      v4258 = b$$433;
    }
    return v4258;
  }
  function v1369(b$$432) {
    function v1368(a$$481, d$$276) {
      var v11094 = c$$353;
      var v31060 = JAM.call(b$$432.css, b$$432, [d$$276], JAM.policy.p3);
      JAM.set(v11094, d$$276, v31060, JAM.policy.p2);
      var v11095 = isNaN(parseInt(c$$353[d$$276], 10));
      if (v11095) {
        JAM.set(c$$353, d$$276, "auto", JAM.policy.p2);
      }
      return;
    }
    var v11096 = JAM.call(b$$432.parent, b$$432, [], JAM.policy.p3);
    if (JAM.call(v11096.is, v11096, [".ui-effects-wrapper"], JAM.policy.p3)) {
      return JAM.call(b$$432.parent, b$$432, [], JAM.policy.p3);
    }
    var c$$353 = {width:JAM.call(b$$432.outerWidth, b$$432, [!0], JAM.policy.p3), height:JAM.call(b$$432.outerHeight, b$$432, [!0], JAM.policy.p3), "float":JAM.call(b$$432.css, b$$432, ["float"], JAM.policy.p3)};
    var v11099 = JAM.call(a$$470, null, ["<div></div>"], JAM.policy.p3);
    var v4263 = JAM.call(v11099.addClass, v11099, ["ui-effects-wrapper"], JAM.policy.p3);
    var d$$275 = JAM.call(v4263.css, v4263, [{fontSize:"100%", background:"transparent", border:"none", margin:0, padding:0}], JAM.policy.p3);
    var e$$253 = document.activeElement;
    try {
    } catch (f$$112) {
      e$$253 = document.body;
    }
    JAM.call(b$$432.wrap, b$$432, [d$$275], JAM.policy.p3);
    var v26819 = b$$432[0] === e$$253;
    if (!v26819) {
      v26819 = JAM.call(a$$470.contains, a$$470, [b$$432[0], e$$253], JAM.policy.p3);
    }
    var v24933 = v26819;
    if (v24933) {
      var v26820 = JAM.call(a$$470, null, [e$$253], JAM.policy.p3);
      JAM.call(v26820.focus, v26820, [], JAM.policy.p3);
    }
    d$$275 = JAM.call(b$$432.parent, b$$432, [], JAM.policy.p3);
    var v16677;
    if (JAM.call(b$$432.css, b$$432, ["position"], JAM.policy.p3) == "static") {
      JAM.call(d$$275.css, d$$275, [{position:"relative"}], JAM.policy.p3);
      v16677 = JAM.call(b$$432.css, b$$432, [{position:"relative"}], JAM.policy.p3);
    } else {
      JAM.call(a$$470.extend, a$$470, [c$$353, {position:JAM.call(b$$432.css, b$$432, ["position"], JAM.policy.p3), zIndex:JAM.call(b$$432.css, b$$432, ["z-index"], JAM.policy.p3)}], JAM.policy.p3);
      JAM.call(a$$470.each, a$$470, [["top", "left", "bottom", "right"], v1368], JAM.policy.p3);
      v16677 = JAM.call(b$$432.css, b$$432, [{position:"relative", top:0, left:0, right:"auto", bottom:"auto"}], JAM.policy.p3);
    }
    v16677;
    var v11100 = JAM.call(d$$275.css, d$$275, [c$$353], JAM.policy.p3);
    return JAM.call(v11100.show, v11100, [], JAM.policy.p3);
  }
  function v1367(a$$480, b$$431) {
    var c$$352;
    var d$$274;
    switch(a$$480[0]) {
      case "top":
        c$$352 = 0;
        break;
      case "middle":
        c$$352 = .5;
        break;
      case "bottom":
        c$$352 = 1;
        break;
      default:
        c$$352 = a$$480[0] / b$$431.height;
    }
    switch(a$$480[1]) {
      case "left":
        d$$274 = 0;
        break;
      case "center":
        d$$274 = .5;
        break;
      case "right":
        d$$274 = 1;
        break;
      default:
        d$$274 = a$$480[1] / b$$431.width;
    }
    return{x:d$$274, y:c$$352};
  }
  function v1366(a$$479, b$$430) {
    var v11101 = b$$430 == "toggle";
    if (v11101) {
      var v16678;
      if (JAM.call(a$$479.is, a$$479, [":hidden"], JAM.policy.p3)) {
        v16678 = "show";
      } else {
        v16678 = "hide";
      }
      b$$430 = v16678;
    }
    return b$$430;
  }
  function v1365(a$$478, b$$429) {
    var c$$351 = 0;
    var v4272 = c$$351 < b$$429.length;
    for (;v4272;) {
      var v4271 = b$$429[c$$351] !== null;
      if (v4271) {
        JAM.call(a$$478.css, a$$478, [b$$429[c$$351], JAM.call(a$$478.data, a$$478, ["ec.storage." + b$$429[c$$351]], JAM.policy.p3)], JAM.policy.p3);
      }
      c$$351++;
      v4272 = c$$351 < b$$429.length;
    }
    return;
  }
  function v1364(a$$477, b$$428) {
    var c$$350 = 0;
    var v4274 = c$$350 < b$$428.length;
    for (;v4274;) {
      var v4273 = b$$428[c$$350] !== null;
      if (v4273) {
        JAM.call(a$$477.data, a$$477, ["ec.storage." + b$$428[c$$350], a$$477[0].style[b$$428[c$$350]]], JAM.policy.p3);
      }
      c$$350++;
      v4274 = c$$350 < b$$428.length;
    }
    return;
  }
  function v1363(b$$427, c$$349, d$$273, e$$252, f$$111) {
    var v4275 = a$$470.effects.animateClass;
    return JAM.call(v4275.apply, v4275, [this, [{add:c$$349, remove:b$$427}, d$$273, e$$252, f$$111]], JAM.policy.p3);
  }
  function v1362(c$$348, d$$272, e$$251, f$$110, g$$141) {
    var v4277;
    var v16683 = typeof d$$272 == "boolean";
    if (!v16683) {
      v16683 = d$$272 === b$$414;
    }
    if (v16683) {
      var v11114;
      if (e$$251) {
        var v16684 = a$$470.effects.animateClass;
        var v24938;
        if (d$$272) {
          v24938 = {add:c$$348};
        } else {
          v24938 = {remove:c$$348};
        }
        v11114 = JAM.call(v16684.apply, v16684, [this, [v24938, e$$251, f$$110, g$$141]], JAM.policy.p3);
      } else {
        v11114 = JAM.call(this._toggleClass, this, [c$$348, d$$272], JAM.policy.p3);
      }
      v4277 = v11114;
    } else {
      var v11115 = a$$470.effects.animateClass;
      v4277 = JAM.call(v11115.apply, v11115, [this, [{toggle:c$$348}, d$$272, e$$251, f$$110]], JAM.policy.p3);
    }
    return v4277;
  }
  function v1361(b$$426, c$$347, d$$271, e$$250) {
    var v4278;
    if (c$$347) {
      var v11118 = a$$470.effects.animateClass;
      v4278 = JAM.call(v11118.apply, v11118, [this, [{remove:b$$426}, c$$347, d$$271, e$$250]], JAM.policy.p3);
    } else {
      v4278 = JAM.call(this._removeClass, this, [b$$426], JAM.policy.p3);
    }
    return v4278;
  }
  function v1360(b$$425, c$$346, d$$270, e$$249) {
    var v4279;
    if (c$$346) {
      var v11120 = a$$470.effects.animateClass;
      v4279 = JAM.call(v11120.apply, v11120, [this, [{add:b$$425}, c$$346, d$$270, e$$249]], JAM.policy.p3);
    } else {
      v4279 = JAM.call(this._addClass, this, [b$$425], JAM.policy.p3);
    }
    return v4279;
  }
  function v1359(b$$424, c$$343, d$$269, e$$248) {
    function v1358() {
      function v1357() {
        function v1356(a$$476, c$$345) {
          var v4280 = b$$424[c$$345];
          if (v4280) {
            JAM.call(g$$140[c$$345 + "Class"], g$$140, [b$$424[c$$345]], JAM.policy.p3);
          }
          return;
        }
        JAM.call(a$$470.each, a$$470, [f$$109, v1356], JAM.policy.p3);
        var v20696;
        if (typeof JAM.call(g$$140.attr, g$$140, ["style"], JAM.policy.p3) == "object") {
          JAM.call(g$$140.attr, g$$140, ["style"], JAM.policy.p3).cssText = "";
          v20696 = JAM.call(g$$140.attr, g$$140, ["style"], JAM.policy.p3).cssText = k$$56;
        } else {
          v20696 = JAM.call(g$$140.attr, g$$140, ["style", k$$56], JAM.policy.p3);
        }
        v20696;
        if (e$$248) {
          JAM.call(e$$248.apply, e$$248, [this, arguments], JAM.policy.p3);
        }
        JAM.call(a$$470.dequeue, a$$470, [this], JAM.policy.p3);
        return;
      }
      function v1355(a$$475, c$$344) {
        var v4281 = b$$424[c$$344];
        if (v4281) {
          JAM.call(g$$140[c$$344 + "Class"], g$$140, [b$$424[c$$344]], JAM.policy.p3);
        }
        return;
      }
      var g$$140 = JAM.call(a$$470, null, [this], JAM.policy.p3);
      var v4282 = JAM.call(g$$140.attr, g$$140, ["style"], JAM.policy.p3);
      if (!v4282) {
        v4282 = " ";
      }
      var k$$56 = v4282;
      var l$$66 = i$$170(JAM.call(h$$113.call, h$$113, [this], JAM.policy.p3));
      var m$$37;
      var v4284 = JAM.call(g$$140.attr, g$$140, ["class"], JAM.policy.p3);
      if (!v4284) {
        v4284 = "";
      }
      var n$$86 = v4284;
      JAM.call(a$$470.each, a$$470, [f$$109, v1355], JAM.policy.p3);
      m$$37 = i$$170(JAM.call(h$$113.call, h$$113, [this], JAM.policy.p3));
      JAM.call(g$$140.attr, g$$140, ["class", n$$86], JAM.policy.p3);
      JAM.call(g$$140.animate, g$$140, [j$$81(l$$66, m$$37), {queue:!1, duration:c$$343, easing:d$$269, complete:v1357}], JAM.policy.p3);
      return;
    }
    var v11130 = JAM.call(a$$470.isFunction, a$$470, [d$$269], JAM.policy.p3);
    if (v11130) {
      e$$248 = d$$269;
      d$$269 = null;
    }
    return JAM.call(this.queue, this, [v1358], JAM.policy.p3);
  }
  function v1354(b$$423, e$$247) {
    function v1353(a$$474) {
      var JSCompiler_temp$$8;
      if (JSCompiler_temp$$8 = a$$474.colorInit) {
      } else {
        var JSCompiler_inline_result$$9;
        var b$$inline_70 = a$$474.elem;
        var d$$inline_71 = e$$247;
        var e$$inline_72;
        var v4287 = b$$inline_70 = b$$inline_70.parentNode;
        do {
          var v11131 = a$$470.curCSS;
          if (!v11131) {
            v11131 = a$$470.css;
          }
          e$$inline_72 = JAM.call(v11131, null, [b$$inline_70, d$$inline_71], JAM.policy.p3);
          var v16694 = e$$inline_72 != "";
          if (v16694) {
            v16694 = e$$inline_72 != "transparent";
          }
          var v11132 = v16694;
          if (!v11132) {
            v11132 = JAM.call(a$$470.nodeName, a$$470, [b$$inline_70, "body"], JAM.policy.p3);
          }
          if (v11132) {
            break;
          }
          d$$inline_71 = "backgroundColor";
          v4287 = b$$inline_70 = b$$inline_70.parentNode;
        } while (v4287);
        JSCompiler_inline_result$$9 = c$$337(e$$inline_72);
        a$$474.start = JSCompiler_inline_result$$9;
        var v31061 = c$$337(a$$474.end);
        a$$474.end = v31061;
        JSCompiler_temp$$8 = a$$474.colorInit = !0;
      }
      JSCompiler_temp$$8;
      JAM.set(a$$474.elem.style, e$$247, "rgb(" + JAM.call(Math.max, Math, [JAM.call(Math.min, Math, [parseInt(a$$474.pos * (a$$474.end[0] - a$$474.start[0]) + a$$474.start[0], 10), 255], JAM.policy.p3), 0], JAM.policy.p3) + "," + JAM.call(Math.max, Math, [JAM.call(Math.min, Math, [parseInt(a$$474.pos * (a$$474.end[1] - a$$474.start[1]) + a$$474.start[1], 10), 255], JAM.policy.p3), 0], JAM.policy.p3) + "," + JAM.call(Math.max, Math, [JAM.call(Math.min, Math, [parseInt(a$$474.pos * (a$$474.end[2] - 
      a$$474.start[2]) + a$$474.start[2], 10), 255], JAM.policy.p3), 0], JAM.policy.p3) + ")", JAM.policy.p2);
      return;
    }
    JAM.set(a$$470.fx.step, e$$247, v1353, JAM.policy.p2);
    return;
  }
  function c$$337(b$$415) {
    var c$$338;
    var v4290;
    var v20700 = b$$415;
    if (v20700) {
      v20700 = b$$415.constructor == Array;
    }
    var v16699 = v20700;
    if (v16699) {
      v16699 = b$$415.length == 3;
    }
    if (v16699) {
      v4290 = b$$415;
    } else {
      var v11136;
      if (c$$338 = JAM.call(/rgb\(\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*\)/.exec, /rgb\(\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*\)/, [b$$415], JAM.policy.p3)) {
        v11136 = [parseInt(c$$338[1], 10), parseInt(c$$338[2], 10), parseInt(c$$338[3], 10)];
      } else {
        var v16703;
        if (c$$338 = JAM.call(/rgb\(\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*\)/.exec, /rgb\(\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*\)/, [b$$415], JAM.policy.p3)) {
          v16703 = [parseFloat(c$$338[1]) * 2.55, parseFloat(c$$338[2]) * 2.55, parseFloat(c$$338[3]) * 2.55];
        } else {
          var v20708;
          if (c$$338 = JAM.call(/#([a-fA-F0-9]{2})([a-fA-F0-9]{2})([a-fA-F0-9]{2})/.exec, /#([a-fA-F0-9]{2})([a-fA-F0-9]{2})([a-fA-F0-9]{2})/, [b$$415], JAM.policy.p3)) {
            v20708 = [parseInt(c$$338[1], 16), parseInt(c$$338[2], 16), parseInt(c$$338[3], 16)];
          } else {
            var v24949;
            if (c$$338 = JAM.call(/#([a-fA-F0-9])([a-fA-F0-9])([a-fA-F0-9])/.exec, /#([a-fA-F0-9])([a-fA-F0-9])([a-fA-F0-9])/, [b$$415], JAM.policy.p3)) {
              v24949 = [parseInt(c$$338[1] + c$$338[1], 16), parseInt(c$$338[2] + c$$338[2], 16), parseInt(c$$338[3] + c$$338[3], 16)];
            } else {
              var v26838;
              if (c$$338 = JAM.call(/rgba\(0, 0, 0, 0\)/.exec, /rgba\(0, 0, 0, 0\)/, [b$$415], JAM.policy.p3)) {
                v26838 = e$$243.transparent;
              } else {
                var v28120 = e$$243;
                var v28971 = JAM.call(a$$470.trim, a$$470, [b$$415], JAM.policy.p3);
                v26838 = v28120[JAM.call(v28971.toLowerCase, v28971, [], JAM.policy.p3)];
              }
              v24949 = v26838;
            }
            v20708 = v24949;
          }
          v16703 = v20708;
        }
        v11136 = v16703;
      }
      v4290 = v11136;
    }
    return v4290;
  }
  function h$$113() {
    function v1352(a$$472, b$$418) {
      return JAM.call(b$$418.toUpperCase, b$$418, [], JAM.policy.p3);
    }
    var v4291;
    if (document.defaultView) {
      var v11138 = document.defaultView;
      v4291 = JAM.call(v11138.getComputedStyle, v11138, [this, null], JAM.policy.p3);
    } else {
      v4291 = this.currentStyle;
    }
    var a$$471 = v4291;
    var b$$417 = {};
    var c$$339;
    var d$$265;
    var v20710 = a$$471;
    if (v20710) {
      v20710 = a$$471.length;
    }
    var v16705 = v20710;
    if (v16705) {
      v16705 = a$$471[0];
    }
    var v11140 = v16705;
    if (v11140) {
      v11140 = a$$471[a$$471[0]];
    }
    if (v11140) {
      var e$$245 = a$$471.length;
      var v4292 = e$$245;
      e$$245 = e$$245 - 1;
      for (;v4292;) {
        c$$339 = a$$471[e$$245];
        var v11141 = typeof a$$471[c$$339] == "string";
        if (v11141) {
          d$$265 = JAM.call(c$$339.replace, c$$339, [/\-(\w)/g, v1352], JAM.policy.p3);
          JAM.set(b$$417, d$$265, a$$471[c$$339], JAM.policy.p2);
        }
        v4292 = e$$245;
        e$$245 = e$$245 - 1;
      }
    } else {
      for (c$$339 in a$$471) {
        var v4293 = typeof a$$471[c$$339] == "string";
        if (v4293) {
          JAM.set(b$$417, c$$339, a$$471[c$$339], JAM.policy.p2);
        }
      }
    }
    return b$$417;
  }
  function i$$170(b$$419) {
    var c$$340;
    var d$$266;
    for (c$$340 in b$$419) {
      d$$266 = b$$419[c$$340];
      var v26840 = d$$266 == null;
      if (!v26840) {
        v26840 = JAM.call(a$$470.isFunction, a$$470, [d$$266], JAM.policy.p3);
      }
      var v24951 = v26840;
      if (!v24951) {
        v24951 = c$$340 in g$$139;
      }
      var v20712 = v24951;
      if (!v20712) {
        v20712 = JAM.call(/scrollbar/.test, /scrollbar/, [c$$340], JAM.policy.p3);
      }
      var v16709 = v20712;
      if (!v16709) {
        var v20713 = !JAM.call(/color/i.test, /color/i, [c$$340], JAM.policy.p3);
        if (v20713) {
          v20713 = isNaN(parseFloat(d$$266));
        }
        v16709 = v20713;
      }
      var v11143 = v16709;
      if (v11143) {
        delete b$$419[c$$340];
      }
    }
    return b$$419;
  }
  function j$$81(a$$473, b$$420) {
    var c$$341 = {_:0};
    var d$$267;
    for (d$$267 in b$$420) {
      var v4295 = a$$473[d$$267] != b$$420[d$$267];
      if (v4295) {
        JAM.set(c$$341, d$$267, b$$420[d$$267], JAM.policy.p2);
      }
    }
    return c$$341;
  }
  function k$$55(b$$421, c$$342, d$$268, e$$246) {
    var v11146 = typeof b$$421 == "object";
    if (v11146) {
      e$$246 = c$$342;
      d$$268 = null;
      c$$342 = b$$421;
      b$$421 = c$$342.effect;
    }
    var v11147 = JAM.call(a$$470.isFunction, a$$470, [c$$342], JAM.policy.p3);
    if (v11147) {
      e$$246 = c$$342;
      d$$268 = null;
      c$$342 = {};
    }
    var v11148 = typeof c$$342 == "number";
    if (!v11148) {
      v11148 = a$$470.fx.speeds[c$$342];
    }
    if (v11148) {
      e$$246 = d$$268;
      d$$268 = c$$342;
      c$$342 = {};
    }
    var v26842 = JAM.call(a$$470.isFunction, a$$470, [d$$268], JAM.policy.p3);
    if (v26842) {
      e$$246 = d$$268;
      d$$268 = null;
    }
    c$$342 = c$$342 || {};
    var v24955 = d$$268;
    if (!v24955) {
      v24955 = c$$342.duration;
    }
    d$$268 = v24955;
    var v20716;
    if (a$$470.fx.off) {
      v20716 = 0;
    } else {
      var v24956;
      if (typeof d$$268 == "number") {
        v24956 = d$$268;
      } else {
        var v26845;
        if (d$$268 in a$$470.fx.speeds) {
          v26845 = a$$470.fx.speeds[d$$268];
        } else {
          v26845 = a$$470.fx.speeds._default;
        }
        v24956 = v26845;
      }
      v20716 = v24956;
    }
    d$$268 = v20716;
    var v16714 = e$$246;
    if (!v16714) {
      v16714 = c$$342.complete;
    }
    e$$246 = v16714;
    return[b$$421, c$$342, d$$268, e$$246];
  }
  function l$$65(b$$422) {
    var v4297;
    var v20718 = !b$$422;
    if (!v20718) {
      v20718 = typeof b$$422 == "number";
    }
    var v16715 = v20718;
    if (!v16715) {
      v16715 = a$$470.fx.speeds[b$$422];
    }
    if (v16715) {
      v4297 = !0;
    } else {
      var v11149;
      var v20721 = typeof b$$422 == "string";
      if (v20721) {
        v20721 = !a$$470.effects[b$$422];
      }
      if (v20721) {
        v11149 = !0;
      } else {
        v11149 = !1;
      }
      v4297 = v11149;
    }
    return v4297;
  }
  a$$470.effects = {};
  JAM.call(a$$470.each, a$$470, [["backgroundColor", "borderBottomColor", "borderLeftColor", "borderRightColor", "borderTopColor", "borderColor", "color", "outlineColor"], v1354], JAM.policy.p3);
  var e$$243 = {aqua:[0, 255, 255], azure:[240, 255, 255], beige:[245, 245, 220], black:[0, 0, 0], blue:[0, 0, 255], brown:[165, 42, 42], cyan:[0, 255, 255], darkblue:[0, 0, 139], darkcyan:[0, 139, 139], darkgrey:[169, 169, 169], darkgreen:[0, 100, 0], darkkhaki:[189, 183, 107], darkmagenta:[139, 0, 139], darkolivegreen:[85, 107, 47], darkorange:[255, 140, 0], darkorchid:[153, 50, 204], darkred:[139, 0, 0], darksalmon:[233, 150, 122], darkviolet:[148, 0, 211], fuchsia:[255, 0, 255], gold:[255, 215, 
  0], green:[0, 128, 0], indigo:[75, 0, 130], khaki:[240, 230, 140], lightblue:[173, 216, 230], lightcyan:[224, 255, 255], lightgreen:[144, 238, 144], lightgrey:[211, 211, 211], lightpink:[255, 182, 193], lightyellow:[255, 255, 224], lime:[0, 255, 0], magenta:[255, 0, 255], maroon:[128, 0, 0], navy:[0, 0, 128], olive:[128, 128, 0], orange:[255, 165, 0], pink:[255, 192, 203], purple:[128, 0, 128], violet:[128, 0, 128], red:[255, 0, 0], silver:[192, 192, 192], white:[255, 255, 255], yellow:[255, 255, 
  0], transparent:[255, 255, 255]};
  var f$$109 = ["add", "remove", "toggle"];
  var g$$139 = {border:1, borderBottom:1, borderColor:1, borderLeft:1, borderRight:1, borderTop:1, borderWidth:1, margin:1, padding:1};
  a$$470.effects.animateClass = v1359;
  var v20723 = a$$470.fn;
  JAM.call(v20723.extend, v20723, [{_addClass:a$$470.fn.addClass, addClass:v1360, _removeClass:a$$470.fn.removeClass, removeClass:v1361, _toggleClass:a$$470.fn.toggleClass, toggleClass:v1362, switchClass:v1363}], JAM.policy.p3);
  JAM.call(a$$470.extend, a$$470, [a$$470.effects, {version:"1.8.24", save:v1364, restore:v1365, setMode:v1366, getBaseline:v1367, createWrapper:v1369, removeWrapper:v1370, setTransition:v1372}], JAM.policy.p3);
  var v11152 = a$$470.fn;
  JAM.call(v11152.extend, v11152, [{effect:v1374, _show:a$$470.fn.show, show:v1375, _hide:a$$470.fn.hide, hide:v1376, __toggle:a$$470.fn.toggle, toggle:v1377, cssUnit:v1379}], JAM.policy.p3);
  var m$$36 = {};
  JAM.call(a$$470.each, a$$470, [["Quad", "Cubic", "Quart", "Quint", "Expo"], v1381], JAM.policy.p3);
  JAM.call(a$$470.extend, a$$470, [m$$36, {Sine:v1382, Circ:v1383, Elastic:v1384, Back:v1385, Bounce:v1386}], JAM.policy.p3);
  JAM.call(a$$470.each, a$$470, [m$$36, v1389], JAM.policy.p3);
  return;
}
function v1351(a$$452, b$$380) {
  function v1350(b$$413) {
    var c$$336 = b$$413 || this;
    var v4342 = c$$336.helper;
    var v11154 = c$$336.placeholder;
    if (!v11154) {
      v11154 = JAM.call(a$$452, null, [[]], JAM.policy.p3);
    }
    var v4343 = v11154;
    var v4344 = c$$336.position;
    var v4345 = c$$336.originalPosition;
    var v4346 = c$$336.positionAbs;
    var v4347 = c$$336.currentItem;
    var v11155;
    if (b$$413) {
      v11155 = b$$413.element;
    } else {
      v11155 = null;
    }
    return{helper:v4342, placeholder:v4343, position:v4344, originalPosition:v4345, offset:v4346, item:v4347, sender:v11155};
  }
  function v1349() {
    var v16725 = a$$452.Widget.prototype._trigger;
    var v4349 = JAM.call(v16725.apply, v16725, [this, arguments], JAM.policy.p3) === !1;
    if (v4349) {
      JAM.call(this.cancel, this, [], JAM.policy.p3);
    }
    return;
  }
  function v1348(b$$408, c$$335) {
    function v1347(a$$469) {
      function v1346(b$$412) {
        JAM.call(a$$469._trigger, a$$469, ["out", b$$412, JAM.call(this._uiHash, this, [this], JAM.policy.p3)], JAM.policy.p3);
        return;
      }
      return v1346;
    }
    function v1345(a$$468) {
      function v1344(b$$411) {
        JAM.call(a$$468._trigger, a$$468, ["deactivate", b$$411, JAM.call(this._uiHash, this, [this], JAM.policy.p3)], JAM.policy.p3);
        return;
      }
      return v1344;
    }
    function v1343(a$$467) {
      function v1342(b$$410) {
        JAM.call(a$$467._trigger, a$$467, ["update", b$$410, JAM.call(this._uiHash, this, [this], JAM.policy.p3)], JAM.policy.p3);
        return;
      }
      return v1342;
    }
    function v1341(a$$466) {
      function v1340(b$$409) {
        JAM.call(a$$466._trigger, a$$466, ["receive", b$$409, JAM.call(this._uiHash, this, [this], JAM.policy.p3)], JAM.policy.p3);
        return;
      }
      return v1340;
    }
    function v1339(a$$465) {
      JAM.call(this._trigger, this, ["remove", a$$465, JAM.call(this._uiHash, this, [], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    function v1338(a$$464) {
      JAM.call(this._trigger, this, ["update", a$$464, JAM.call(this._uiHash, this, [], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    function v1337(a$$463) {
      JAM.call(this._trigger, this, ["receive", a$$463, JAM.call(this._uiHash, this, [this.fromOutside], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    this.reverting = !1;
    var d$$262 = [];
    var e$$242 = this;
    var v16726 = !this._noFinalSort;
    if (v16726) {
      var v24967 = this.currentItem;
      v16726 = JAM.call(v24967.parent, v24967, [], JAM.policy.p3).length;
    }
    var v11159 = v16726;
    if (v11159) {
      var v16727 = this.placeholder;
      JAM.call(v16727.before, v16727, [this.currentItem], JAM.policy.p3);
    }
    this._noFinalSort = null;
    if (this.helper[0] == this.currentItem[0]) {
      var f$$108;
      for (f$$108 in this._storedCSS) {
        var v11162 = this._storedCSS[f$$108] == "auto";
        if (!v11162) {
          v11162 = this._storedCSS[f$$108] == "static";
        }
        if (v11162) {
          JAM.set(this._storedCSS, f$$108, "", JAM.policy.p2);
        }
      }
      var v11163 = this.currentItem;
      var v4360 = JAM.call(v11163.css, v11163, [this._storedCSS], JAM.policy.p3);
      JAM.call(v4360.removeClass, v4360, ["ui-sortable-helper"], JAM.policy.p3);
    } else {
      var v4361 = this.currentItem;
      JAM.call(v4361.show, v4361, [], JAM.policy.p3);
    }
    var v20733 = this.fromOutside;
    if (v20733) {
      v20733 = !c$$335;
    }
    var v16734 = v20733;
    if (v16734) {
      JAM.call(d$$262.push, d$$262, [v1337], JAM.policy.p3);
    }
    var v26851 = this.fromOutside;
    if (!v26851) {
      var v28128 = this.domPosition.prev;
      var v29873 = this.currentItem;
      var v29536 = JAM.call(v29873.prev, v29873, [], JAM.policy.p3);
      v26851 = v28128 != JAM.call(v29536.not, v29536, [".ui-sortable-helper"], JAM.policy.p3)[0];
    }
    var v24968 = v26851;
    if (!v24968) {
      var v26852 = this.domPosition.parent;
      var v28977 = this.currentItem;
      v24968 = v26852 != JAM.call(v28977.parent, v28977, [], JAM.policy.p3)[0];
    }
    var v20734 = v24968;
    if (v20734) {
      v20734 = !c$$335;
    }
    var v16735 = v20734;
    if (v16735) {
      JAM.call(d$$262.push, d$$262, [v1338], JAM.policy.p3);
    }
    var v11165 = this !== this.currentContainer;
    if (v11165) {
      if (!c$$335) {
        JAM.call(d$$262.push, d$$262, [v1339], JAM.policy.p3);
        JAM.call(d$$262.push, d$$262, [JAM.call(v1341.call, v1341, [this, this.currentContainer], JAM.policy.p3)], JAM.policy.p3);
        JAM.call(d$$262.push, d$$262, [JAM.call(v1343.call, v1343, [this, this.currentContainer], JAM.policy.p3)], JAM.policy.p3);
      }
    }
    f$$108 = this.containers.length - 1;
    var v4364 = f$$108 >= 0;
    for (;v4364;) {
      if (!c$$335) {
        JAM.call(d$$262.push, d$$262, [JAM.call(v1345.call, v1345, [this, this.containers[f$$108]], JAM.policy.p3)], JAM.policy.p3);
      }
      var v11167 = this.containers[f$$108].containerCache.over;
      if (v11167) {
        JAM.call(d$$262.push, d$$262, [JAM.call(v1347.call, v1347, [this, this.containers[f$$108]], JAM.policy.p3)], JAM.policy.p3);
        this.containers[f$$108].containerCache.over = 0;
      }
      f$$108--;
      v4364 = f$$108 >= 0;
    }
    var v20740 = this._storedCursor;
    if (v20740) {
      var v24974 = JAM.call(a$$452, null, ["body"], JAM.policy.p3);
      JAM.call(v24974.css, v24974, ["cursor", this._storedCursor], JAM.policy.p3);
    }
    var v20741 = this._storedOpacity;
    if (v20741) {
      var v24976 = this.helper;
      JAM.call(v24976.css, v24976, ["opacity", this._storedOpacity], JAM.policy.p3);
    }
    var v16740 = this._storedZIndex;
    if (v16740) {
      var v20742 = this.helper;
      var v24978;
      if (this._storedZIndex == "auto") {
        v24978 = "";
      } else {
        v24978 = this._storedZIndex;
      }
      JAM.call(v20742.css, v20742, ["zIndex", v24978], JAM.policy.p3);
    }
    this.dragging = !1;
    if (this.cancelHelperRemoval) {
      if (!c$$335) {
        JAM.call(this._trigger, this, ["beforeStop", b$$408, JAM.call(this._uiHash, this, [], JAM.policy.p3)], JAM.policy.p3);
        f$$108 = 0;
        var v4367 = f$$108 < d$$262.length;
        for (;v4367;) {
          var v4366 = d$$262[f$$108];
          JAM.call(v4366.call, v4366, [this, b$$408], JAM.policy.p3);
          f$$108++;
          v4367 = f$$108 < d$$262.length;
        }
        JAM.call(this._trigger, this, ["stop", b$$408, JAM.call(this._uiHash, this, [], JAM.policy.p3)], JAM.policy.p3);
      }
      this.fromOutside = !1;
      return!1;
    }
    if (!c$$335) {
      JAM.call(this._trigger, this, ["beforeStop", b$$408, JAM.call(this._uiHash, this, [], JAM.policy.p3)], JAM.policy.p3);
    }
    var v20744 = this.placeholder[0].parentNode;
    JAM.call(v20744.removeChild, v20744, [this.placeholder[0]], JAM.policy.p3);
    var v16741 = this.helper[0] != this.currentItem[0];
    if (v16741) {
      var v20748 = this.helper;
      JAM.call(v20748.remove, v20748, [], JAM.policy.p3);
    }
    this.helper = null;
    if (!c$$335) {
      f$$108 = 0;
      var v4372 = f$$108 < d$$262.length;
      for (;v4372;) {
        var v4371 = d$$262[f$$108];
        JAM.call(v4371.call, v4371, [this, b$$408], JAM.policy.p3);
        f$$108++;
        v4372 = f$$108 < d$$262.length;
      }
      JAM.call(this._trigger, this, ["stop", b$$408, JAM.call(this._uiHash, this, [], JAM.policy.p3)], JAM.policy.p3);
    }
    this.fromOutside = !1;
    return!0;
  }
  function v1336(a$$462, b$$407, c$$334, d$$261) {
    function v1335() {
      var v4375 = f$$107 == e$$241.counter;
      if (v4375) {
        JAM.call(e$$241.refreshPositions, e$$241, [!d$$261], JAM.policy.p3);
      }
      return;
    }
    var v11174;
    if (c$$334) {
      var v16742 = c$$334[0];
      v11174 = JAM.call(v16742.appendChild, v16742, [this.placeholder[0]], JAM.policy.p3);
    } else {
      var v16744 = b$$407.item[0].parentNode;
      var v16745 = this.placeholder[0];
      var v20752;
      if (this.direction == "down") {
        v20752 = b$$407.item[0];
      } else {
        v20752 = b$$407.item[0].nextSibling;
      }
      v11174 = JAM.call(v16744.insertBefore, v16744, [v16745, v20752], JAM.policy.p3);
    }
    v11174;
    var v11175;
    if (this.counter) {
      v11175 = this.counter = this.counter + 1;
    } else {
      v11175 = 1;
    }
    this.counter = v11175;
    var e$$241 = this;
    var f$$107 = this.counter;
    JAM.call(window.setTimeout, window, [v1335, 0], JAM.policy.p3);
    return;
  }
  function v1334(b$$406) {
    var c$$333 = this.options;
    var v4376;
    var v16748 = this.cssPosition == "absolute";
    if (v16748) {
      var v20755 = this.scrollParent[0] == document;
      if (!v20755) {
        var v26864 = a$$452.ui;
        v20755 = !JAM.call(v26864.contains, v26864, [this.scrollParent[0], this.offsetParent[0]], JAM.policy.p3);
      }
      v16748 = v20755;
    }
    if (v16748) {
      v4376 = this.offsetParent;
    } else {
      v4376 = this.scrollParent;
    }
    var d$$260 = v4376;
    var e$$240 = JAM.call(/(html|body)/i.test, /(html|body)/i, [d$$260[0].tagName], JAM.policy.p3);
    var v11178 = this.cssPosition == "relative";
    if (v11178) {
      var v16750 = this.scrollParent[0] == document;
      if (!v16750) {
        v16750 = this.scrollParent[0] == this.offsetParent[0];
      }
      v11178 = v16750;
    }
    var v4378 = v11178;
    if (v4378) {
      var v11179 = this.offset;
      var v31062 = JAM.call(this._getRelativeOffset, this, [], JAM.policy.p3);
      v11179.relative = v31062;
    }
    var f$$106 = b$$406.pageX;
    var g$$138 = b$$406.pageY;
    if (this.originalPosition) {
      var v4379 = this.containment;
      if (v4379) {
        var v24995 = b$$406.pageX - this.offset.click.left < this.containment[0];
        if (v24995) {
          f$$106 = this.containment[0] + this.offset.click.left;
        }
        var v24996 = b$$406.pageY - this.offset.click.top < this.containment[1];
        if (v24996) {
          g$$138 = this.containment[1] + this.offset.click.top;
        }
        var v20760 = b$$406.pageX - this.offset.click.left > this.containment[2];
        if (v20760) {
          f$$106 = this.containment[2] + this.offset.click.left;
        }
        var v16751 = b$$406.pageY - this.offset.click.top > this.containment[3];
        if (v16751) {
          g$$138 = this.containment[3] + this.offset.click.top;
        }
      }
      if (c$$333.grid) {
        var h$$112 = this.originalPageY + JAM.call(Math.round, Math, [(g$$138 - this.originalPageY) / c$$333.grid[1]], JAM.policy.p3) * c$$333.grid[1];
        var v4382;
        if (this.containment) {
          var v11182;
          var v20767 = h$$112 - this.offset.click.top < this.containment[1];
          if (!v20767) {
            v20767 = h$$112 - this.offset.click.top > this.containment[3];
          }
          if (v20767) {
            var v16754;
            if (h$$112 - this.offset.click.top < this.containment[1]) {
              v16754 = h$$112 + c$$333.grid[1];
            } else {
              v16754 = h$$112 - c$$333.grid[1];
            }
            v11182 = v16754;
          } else {
            v11182 = h$$112;
          }
          v4382 = v11182;
        } else {
          v4382 = h$$112;
        }
        g$$138 = v4382;
        var i$$169 = this.originalPageX + JAM.call(Math.round, Math, [(f$$106 - this.originalPageX) / c$$333.grid[0]], JAM.policy.p3) * c$$333.grid[0];
        var v4385;
        if (this.containment) {
          var v11186;
          var v20773 = i$$169 - this.offset.click.left < this.containment[0];
          if (!v20773) {
            v20773 = i$$169 - this.offset.click.left > this.containment[2];
          }
          if (v20773) {
            var v16758;
            if (i$$169 - this.offset.click.left < this.containment[0]) {
              v16758 = i$$169 + c$$333.grid[0];
            } else {
              v16758 = i$$169 - c$$333.grid[0];
            }
            v11186 = v16758;
          } else {
            v11186 = i$$169;
          }
          v4385 = v11186;
        } else {
          v4385 = i$$169;
        }
        f$$106 = v4385;
      }
    }
    var v11188 = g$$138 - this.offset.click.top - this.offset.relative.top - this.offset.parent.top;
    var v16762;
    var v25031 = a$$452.browser.safari;
    if (v25031) {
      v25031 = this.cssPosition == "fixed";
    }
    if (v25031) {
      v16762 = 0;
    } else {
      var v20780;
      if (this.cssPosition == "fixed") {
        var v26899 = this.scrollParent;
        v20780 = -JAM.call(v26899.scrollTop, v26899, [], JAM.policy.p3);
      } else {
        var v25033;
        if (e$$240) {
          v25033 = 0;
        } else {
          v25033 = JAM.call(d$$260.scrollTop, d$$260, [], JAM.policy.p3);
        }
        v20780 = v25033;
      }
      v16762 = v20780;
    }
    var v4388 = v11188 + v16762;
    var v11190 = f$$106 - this.offset.click.left - this.offset.relative.left - this.offset.parent.left;
    var v16765;
    var v25038 = a$$452.browser.safari;
    if (v25038) {
      v25038 = this.cssPosition == "fixed";
    }
    if (v25038) {
      v16765 = 0;
    } else {
      var v20785;
      if (this.cssPosition == "fixed") {
        var v26905 = this.scrollParent;
        v20785 = -JAM.call(v26905.scrollLeft, v26905, [], JAM.policy.p3);
      } else {
        var v25040;
        if (e$$240) {
          v25040 = 0;
        } else {
          v25040 = JAM.call(d$$260.scrollLeft, d$$260, [], JAM.policy.p3);
        }
        v20785 = v25040;
      }
      v16765 = v20785;
    }
    return{top:v4388, left:v11190 + v16765};
  }
  function v1333(b$$405, c$$332) {
    if (!c$$332) {
      c$$332 = this.position;
    }
    var v4390;
    if (b$$405 == "absolute") {
      v4390 = 1;
    } else {
      v4390 = -1;
    }
    var d$$259 = v4390;
    var e$$239 = this.options;
    var v4391;
    var v16766 = this.cssPosition == "absolute";
    if (v16766) {
      var v20788 = this.scrollParent[0] == document;
      if (!v20788) {
        var v26907 = a$$452.ui;
        v20788 = !JAM.call(v26907.contains, v26907, [this.scrollParent[0], this.offsetParent[0]], JAM.policy.p3);
      }
      v16766 = v20788;
    }
    if (v16766) {
      v4391 = this.offsetParent;
    } else {
      v4391 = this.scrollParent;
    }
    var f$$105 = v4391;
    var g$$137 = JAM.call(/(html|body)/i.test, /(html|body)/i, [f$$105[0].tagName], JAM.policy.p3);
    var v11196 = c$$332.top + this.offset.relative.top * d$$259 + this.offset.parent.top * d$$259;
    var v16769;
    var v25047 = a$$452.browser.safari;
    if (v25047) {
      v25047 = this.cssPosition == "fixed";
    }
    if (v25047) {
      v16769 = 0;
    } else {
      var v25048;
      if (this.cssPosition == "fixed") {
        var v28162 = this.scrollParent;
        v25048 = -JAM.call(v28162.scrollTop, v28162, [], JAM.policy.p3);
      } else {
        var v26915;
        if (g$$137) {
          v26915 = 0;
        } else {
          v26915 = JAM.call(f$$105.scrollTop, f$$105, [], JAM.policy.p3);
        }
        v25048 = v26915;
      }
      v16769 = v25048 * d$$259;
    }
    var v4393 = v11196 - v16769;
    var v11198 = c$$332.left + this.offset.relative.left * d$$259 + this.offset.parent.left * d$$259;
    var v16772;
    var v25051 = a$$452.browser.safari;
    if (v25051) {
      v25051 = this.cssPosition == "fixed";
    }
    if (v25051) {
      v16772 = 0;
    } else {
      var v25052;
      if (this.cssPosition == "fixed") {
        var v28165 = this.scrollParent;
        v25052 = -JAM.call(v28165.scrollLeft, v28165, [], JAM.policy.p3);
      } else {
        var v26922;
        if (g$$137) {
          v26922 = 0;
        } else {
          v26922 = JAM.call(f$$105.scrollLeft, f$$105, [], JAM.policy.p3);
        }
        v25052 = v26922;
      }
      v16772 = v25052 * d$$259;
    }
    return{top:v4393, left:v11198 - v16772};
  }
  function v1332() {
    var b$$404 = this.options;
    var v4395 = b$$404.containment == "parent";
    if (v4395) {
      b$$404.containment = this.helper[0].parentNode;
    }
    var v11202 = b$$404.containment == "document";
    if (!v11202) {
      v11202 = b$$404.containment == "window";
    }
    if (v11202) {
      var v4396 = 0 - this.offset.relative.left - this.offset.parent.left;
      var v4397 = 0 - this.offset.relative.top - this.offset.parent.top;
      var v26924;
      if (b$$404.containment == "document") {
        v26924 = document;
      } else {
        v26924 = window;
      }
      var v20803 = JAM.call(a$$452, null, [v26924], JAM.policy.p3);
      var v4398 = JAM.call(v20803.width, v20803, [], JAM.policy.p3) - this.helperProportions.width - this.margins.left;
      var v28167;
      if (b$$404.containment == "document") {
        v28167 = document;
      } else {
        v28167 = window;
      }
      var v25056 = JAM.call(a$$452, null, [v28167], JAM.policy.p3);
      var v20805 = JAM.call(v25056.height, v25056, [], JAM.policy.p3);
      if (!v20805) {
        v20805 = document.body.parentNode.scrollHeight;
      }
      this.containment = [v4396, v4397, v4398, v20805 - this.helperProportions.height - this.margins.top];
    }
    if (!JAM.call(/^(document|window|parent)$/.test, /^(document|window|parent)$/, [b$$404.containment], JAM.policy.p3)) {
      var c$$331 = JAM.call(a$$452, null, [b$$404.containment], JAM.policy.p3)[0];
      var v4402 = JAM.call(a$$452, null, [b$$404.containment], JAM.policy.p3);
      var d$$258 = JAM.call(v4402.offset, v4402, [], JAM.policy.p3);
      var v11214 = JAM.call(a$$452, null, [c$$331], JAM.policy.p3);
      var e$$238 = JAM.call(v11214.css, v11214, ["overflow"], JAM.policy.p3) != "hidden";
      var v20807 = d$$258.left;
      var v28168 = JAM.call(a$$452, null, [c$$331], JAM.policy.p3);
      var v25059 = parseInt(JAM.call(v28168.css, v28168, ["borderLeftWidth"], JAM.policy.p3), 10);
      if (!v25059) {
        v25059 = 0;
      }
      var v16788 = v20807 + v25059;
      var v26929 = JAM.call(a$$452, null, [c$$331], JAM.policy.p3);
      var v20809 = parseInt(JAM.call(v26929.css, v26929, ["paddingLeft"], JAM.policy.p3), 10);
      if (!v20809) {
        v20809 = 0;
      }
      var v4404 = v16788 + v20809 - this.margins.left;
      var v20810 = d$$258.top;
      var v28169 = JAM.call(a$$452, null, [c$$331], JAM.policy.p3);
      var v25062 = parseInt(JAM.call(v28169.css, v28169, ["borderTopWidth"], JAM.policy.p3), 10);
      if (!v25062) {
        v25062 = 0;
      }
      var v16791 = v20810 + v25062;
      var v26932 = JAM.call(a$$452, null, [c$$331], JAM.policy.p3);
      var v20812 = parseInt(JAM.call(v26932.css, v26932, ["paddingTop"], JAM.policy.p3), 10);
      if (!v20812) {
        v20812 = 0;
      }
      var v4405 = v16791 + v20812 - this.margins.top;
      var v26933 = d$$258.left;
      var v28170;
      if (e$$238) {
        v28170 = JAM.call(Math.max, Math, [c$$331.scrollWidth, c$$331.offsetWidth], JAM.policy.p3);
      } else {
        v28170 = c$$331.offsetWidth;
      }
      var v25065 = v26933 + v28170;
      var v28993 = JAM.call(a$$452, null, [c$$331], JAM.policy.p3);
      var v26935 = parseInt(JAM.call(v28993.css, v28993, ["borderLeftWidth"], JAM.policy.p3), 10);
      if (!v26935) {
        v26935 = 0;
      }
      var v20813 = v25065 - v26935;
      var v28173 = JAM.call(a$$452, null, [c$$331], JAM.policy.p3);
      var v25067 = parseInt(JAM.call(v28173.css, v28173, ["paddingRight"], JAM.policy.p3), 10);
      if (!v25067) {
        v25067 = 0;
      }
      var v4406 = v20813 - v25067 - this.helperProportions.width - this.margins.left;
      var v26938 = d$$258.top;
      var v28174;
      if (e$$238) {
        v28174 = JAM.call(Math.max, Math, [c$$331.scrollHeight, c$$331.offsetHeight], JAM.policy.p3);
      } else {
        v28174 = c$$331.offsetHeight;
      }
      var v25068 = v26938 + v28174;
      var v28996 = JAM.call(a$$452, null, [c$$331], JAM.policy.p3);
      var v26940 = parseInt(JAM.call(v28996.css, v28996, ["borderTopWidth"], JAM.policy.p3), 10);
      if (!v26940) {
        v26940 = 0;
      }
      var v20816 = v25068 - v26940;
      var v28177 = JAM.call(a$$452, null, [c$$331], JAM.policy.p3);
      var v25070 = parseInt(JAM.call(v28177.css, v28177, ["paddingBottom"], JAM.policy.p3), 10);
      if (!v25070) {
        v25070 = 0;
      }
      this.containment = [v4404, v4405, v4406, v20816 - v25070 - this.helperProportions.height - this.margins.top];
    }
    return;
  }
  function v1331() {
    var v11223 = this.helper;
    var v4409 = JAM.call(v11223.outerWidth, v11223, [], JAM.policy.p3);
    var v11224 = this.helper;
    this.helperProportions = {width:v4409, height:JAM.call(v11224.outerHeight, v11224, [], JAM.policy.p3)};
    return;
  }
  function v1330() {
    var v20819 = this.currentItem;
    var v11225 = parseInt(JAM.call(v20819.css, v20819, ["marginLeft"], JAM.policy.p3), 10);
    if (!v11225) {
      v11225 = 0;
    }
    var v4411 = v11225;
    var v20820 = this.currentItem;
    var v11226 = parseInt(JAM.call(v20820.css, v20820, ["marginTop"], JAM.policy.p3), 10);
    if (!v11226) {
      v11226 = 0;
    }
    this.margins = {left:v4411, top:v11226};
    return;
  }
  function v1329() {
    if (this.cssPosition == "relative") {
      var v4413 = this.currentItem;
      var a$$461 = JAM.call(v4413.position, v4413, [], JAM.policy.p3);
      var v16804 = a$$461.top;
      var v26943 = this.helper;
      var v20821 = parseInt(JAM.call(v26943.css, v26943, ["top"], JAM.policy.p3), 10);
      if (!v20821) {
        v20821 = 0;
      }
      var v11228 = v16804 - v20821;
      var v16806 = this.scrollParent;
      var v4414 = v11228 + JAM.call(v16806.scrollTop, v16806, [], JAM.policy.p3);
      var v16807 = a$$461.left;
      var v26944 = this.helper;
      var v20822 = parseInt(JAM.call(v26944.css, v26944, ["left"], JAM.policy.p3), 10);
      if (!v20822) {
        v20822 = 0;
      }
      var v11230 = v16807 - v20822;
      var v16809 = this.scrollParent;
      return{top:v4414, left:v11230 + JAM.call(v16809.scrollLeft, v16809, [], JAM.policy.p3)};
    }
    return{top:0, left:0};
  }
  function v1328() {
    var v4417 = this.helper;
    var v31063 = JAM.call(v4417.offsetParent, v4417, [], JAM.policy.p3);
    this.offsetParent = v31063;
    var v4418 = this.offsetParent;
    var b$$403 = JAM.call(v4418.offset, v4418, [], JAM.policy.p3);
    var v16810 = this.cssPosition == "absolute";
    if (v16810) {
      v16810 = this.scrollParent[0] != document;
    }
    var v11232 = v16810;
    if (v11232) {
      var v16811 = a$$452.ui;
      v11232 = JAM.call(v16811.contains, v16811, [this.scrollParent[0], this.offsetParent[0]], JAM.policy.p3);
    }
    var v4419 = v11232;
    if (v4419) {
      var v20827 = b$$403.left;
      var v25076 = this.scrollParent;
      b$$403.left = v20827 + JAM.call(v25076.scrollLeft, v25076, [], JAM.policy.p3);
      var v20829 = b$$403.top;
      var v25077 = this.scrollParent;
      b$$403.top = v20829 + JAM.call(v25077.scrollTop, v25077, [], JAM.policy.p3);
    }
    var v11233 = this.offsetParent[0] == document.body;
    if (!v11233) {
      var v20832 = this.offsetParent[0].tagName;
      if (v20832) {
        var v26946 = this.offsetParent[0].tagName;
        v20832 = JAM.call(v26946.toLowerCase, v26946, [], JAM.policy.p3) == "html";
      }
      var v16816 = v20832;
      if (v16816) {
        v16816 = a$$452.browser.msie;
      }
      v11233 = v16816;
    }
    if (v11233) {
      b$$403 = {top:0, left:0};
    }
    var v11234 = b$$403.top;
    var v25080 = this.offsetParent;
    var v16818 = parseInt(JAM.call(v25080.css, v25080, ["borderTopWidth"], JAM.policy.p3), 10);
    if (!v16818) {
      v16818 = 0;
    }
    var v4421 = v11234 + v16818;
    var v11236 = b$$403.left;
    var v25081 = this.offsetParent;
    var v16819 = parseInt(JAM.call(v25081.css, v25081, ["borderLeftWidth"], JAM.policy.p3), 10);
    if (!v16819) {
      v16819 = 0;
    }
    return{top:v4421, left:v11236 + v16819};
  }
  function v1327(b$$402) {
    var v26947 = typeof b$$402 == "string";
    if (v26947) {
      b$$402 = JAM.call(b$$402.split, b$$402, [" "], JAM.policy.p3);
    }
    var v26948 = JAM.call(a$$452.isArray, a$$452, [b$$402], JAM.policy.p3);
    if (v26948) {
      var v28180 = +b$$402[0];
      var v28999 = +b$$402[1];
      if (!v28999) {
        v28999 = 0;
      }
      b$$402 = {left:v28180, top:v28999};
    }
    var v25082 = "left" in b$$402;
    if (v25082) {
      this.offset.click.left = b$$402.left + this.margins.left;
    }
    var v20838 = "right" in b$$402;
    if (v20838) {
      this.offset.click.left = this.helperProportions.width - b$$402.right + this.margins.left;
    }
    var v16820 = "top" in b$$402;
    if (v16820) {
      this.offset.click.top = b$$402.top + this.margins.top;
    }
    var v11238 = "bottom" in b$$402;
    if (v11238) {
      this.offset.click.top = this.helperProportions.height - b$$402.bottom + this.margins.top;
    }
    return;
  }
  function v1326(b$$401) {
    var c$$330 = this.options;
    var v4423;
    if (JAM.call(a$$452.isFunction, a$$452, [c$$330.helper], JAM.policy.p3)) {
      var v16823 = c$$330.helper;
      v4423 = JAM.call(a$$452, null, [JAM.call(v16823.apply, v16823, [this.element[0], [b$$401, this.currentItem]], JAM.policy.p3)], JAM.policy.p3);
    } else {
      var v11240;
      if (c$$330.helper == "clone") {
        var v16826 = this.currentItem;
        v11240 = JAM.call(v16826.clone, v16826, [], JAM.policy.p3);
      } else {
        v11240 = this.currentItem;
      }
      v4423 = v11240;
    }
    var d$$257 = v4423;
    var v25090 = JAM.call(d$$257.parents, d$$257, ["body"], JAM.policy.p3).length;
    if (!v25090) {
      var v29542;
      if (c$$330.appendTo != "parent") {
        v29542 = c$$330.appendTo;
      } else {
        v29542 = this.currentItem[0].parentNode;
      }
      var v26956 = JAM.call(a$$452, null, [v29542], JAM.policy.p3)[0];
      JAM.call(v26956.appendChild, v26956, [d$$257[0]], JAM.policy.p3);
    }
    var v25091 = d$$257[0] == this.currentItem[0];
    if (v25091) {
      var v26961 = this.currentItem[0].style.width;
      var v26962 = this.currentItem[0].style.height;
      var v28192 = this.currentItem;
      var v26963 = JAM.call(v28192.css, v28192, ["position"], JAM.policy.p3);
      var v28193 = this.currentItem;
      var v26964 = JAM.call(v28193.css, v28193, ["top"], JAM.policy.p3);
      var v28194 = this.currentItem;
      this._storedCSS = {width:v26961, height:v26962, position:v26963, top:v26964, left:JAM.call(v28194.css, v28194, ["left"], JAM.policy.p3)};
    }
    var v25092 = d$$257[0].style.width == "";
    if (!v25092) {
      v25092 = c$$330.forceHelperSize;
    }
    var v20846 = v25092;
    if (v20846) {
      var v26968 = this.currentItem;
      JAM.call(d$$257.width, d$$257, [JAM.call(v26968.width, v26968, [], JAM.policy.p3)], JAM.policy.p3);
    }
    var v20847 = d$$257[0].style.height == "";
    if (!v20847) {
      v20847 = c$$330.forceHelperSize;
    }
    var v16828 = v20847;
    if (v16828) {
      var v25096 = this.currentItem;
      JAM.call(d$$257.height, d$$257, [JAM.call(v25096.height, v25096, [], JAM.policy.p3)], JAM.policy.p3);
    }
    return d$$257;
  }
  function v1325(b$$400) {
    var c$$329 = null;
    var d$$256 = null;
    var e$$237 = this.containers.length - 1;
    var v4429 = e$$237 >= 0;
    for (;v4429;) {
      var v11243 = a$$452.ui;
      if (JAM.call(v11243.contains, v11243, [this.currentItem[0], this.containers[e$$237].element[0]], JAM.policy.p3)) {
        e$$237--;
        v4429 = e$$237 >= 0;
        continue;
      }
      if (JAM.call(this._intersectsWith, this, [this.containers[e$$237].containerCache], JAM.policy.p3)) {
        var v11247 = c$$329;
        if (v11247) {
          var v16832 = a$$452.ui;
          v11247 = JAM.call(v16832.contains, v16832, [this.containers[e$$237].element[0], c$$329.element[0]], JAM.policy.p3);
        }
        if (v11247) {
          e$$237--;
          v4429 = e$$237 >= 0;
          continue;
        }
        c$$329 = this.containers[e$$237];
        d$$256 = e$$237;
      } else {
        var v4427 = this.containers[e$$237].containerCache.over;
        if (v4427) {
          var v16836 = this.containers[e$$237];
          JAM.call(v16836._trigger, v16836, ["out", b$$400, JAM.call(this._uiHash, this, [this], JAM.policy.p3)], JAM.policy.p3);
          this.containers[e$$237].containerCache.over = 0;
        }
      }
      e$$237--;
      v4429 = e$$237 >= 0;
    }
    if (!c$$329) {
      return;
    }
    if (this.containers.length === 1) {
      var v11251 = this.containers[d$$256];
      JAM.call(v11251._trigger, v11251, ["over", b$$400, JAM.call(this._uiHash, this, [this], JAM.policy.p3)], JAM.policy.p3);
      this.containers[d$$256].containerCache.over = 1;
    } else {
      if (this.currentContainer != this.containers[d$$256]) {
        var f$$104 = 1E4;
        var g$$136 = null;
        var v4431 = this.positionAbs;
        var v11256;
        if (this.containers[d$$256].floating) {
          v11256 = "left";
        } else {
          v11256 = "top";
        }
        var h$$111 = v4431[v11256];
        var i$$168 = this.items.length - 1;
        var v4437 = i$$168 >= 0;
        for (;v4437;) {
          var v16844 = a$$452.ui;
          if (!JAM.call(v16844.contains, v16844, [this.containers[d$$256].element[0], this.items[i$$168].item[0]], JAM.policy.p3)) {
            i$$168--;
            v4437 = i$$168 >= 0;
            continue;
          }
          var v4435;
          if (this.containers[d$$256].floating) {
            var v16848 = this.items[i$$168].item;
            v4435 = JAM.call(v16848.offset, v16848, [], JAM.policy.p3).left;
          } else {
            var v16849 = this.items[i$$168].item;
            v4435 = JAM.call(v16849.offset, v16849, [], JAM.policy.p3).top;
          }
          var j$$80 = v4435;
          var v4436 = JAM.call(Math.abs, Math, [j$$80 - h$$111], JAM.policy.p3) < f$$104;
          if (v4436) {
            f$$104 = JAM.call(Math.abs, Math, [j$$80 - h$$111], JAM.policy.p3);
            g$$136 = this.items[i$$168];
            var v16851;
            if (j$$80 - h$$111 > 0) {
              v16851 = "down";
            } else {
              v16851 = "up";
            }
            this.direction = v16851;
          }
          i$$168--;
          v4437 = i$$168 >= 0;
        }
        var v11263 = !g$$136;
        if (v11263) {
          v11263 = !this.options.dropOnEmpty;
        }
        if (v11263) {
          return;
        }
        this.currentContainer = this.containers[d$$256];
        var v28198;
        if (g$$136) {
          v28198 = JAM.call(this._rearrange, this, [b$$400, g$$136, null, !0], JAM.policy.p3);
        } else {
          v28198 = JAM.call(this._rearrange, this, [b$$400, null, this.containers[d$$256].element, !0], JAM.policy.p3);
        }
        v28198;
        JAM.call(this._trigger, this, ["change", b$$400, JAM.call(this._uiHash, this, [], JAM.policy.p3)], JAM.policy.p3);
        var v25106 = this.containers[d$$256];
        JAM.call(v25106._trigger, v25106, ["change", b$$400, JAM.call(this._uiHash, this, [this], JAM.policy.p3)], JAM.policy.p3);
        var v20867 = this.options.placeholder;
        JAM.call(v20867.update, v20867, [this.currentContainer, this.placeholder], JAM.policy.p3);
        var v16853 = this.containers[d$$256];
        JAM.call(v16853._trigger, v16853, ["over", b$$400, JAM.call(this._uiHash, this, [this], JAM.policy.p3)], JAM.policy.p3);
        this.containers[d$$256].containerCache.over = 1;
      }
    }
    return;
  }
  function v1324(b$$397) {
    function v1323(a$$460, b$$399) {
      var v11265 = e$$236;
      if (v11265) {
        v11265 = !d$$255.forcePlaceholderSize;
      }
      if (v11265) {
        return;
      }
      var v11266 = JAM.call(b$$399.height, b$$399, [], JAM.policy.p3);
      if (!v11266) {
        var v26975 = c$$328.currentItem;
        var v25109 = JAM.call(v26975.innerHeight, v26975, [], JAM.policy.p3);
        var v29009 = c$$328.currentItem;
        var v28199 = JAM.call(v29009.css, v29009, ["paddingTop"], JAM.policy.p3);
        if (!v28199) {
          v28199 = 0;
        }
        var v20872 = v25109 - parseInt(v28199, 10);
        var v28200 = c$$328.currentItem;
        var v26977 = JAM.call(v28200.css, v28200, ["paddingBottom"], JAM.policy.p3);
        if (!v26977) {
          v26977 = 0;
        }
        JAM.call(b$$399.height, b$$399, [v20872 - parseInt(v26977, 10)], JAM.policy.p3);
      }
      var v11267 = JAM.call(b$$399.width, b$$399, [], JAM.policy.p3);
      if (!v11267) {
        var v26978 = c$$328.currentItem;
        var v25112 = JAM.call(v26978.innerWidth, v26978, [], JAM.policy.p3);
        var v29011 = c$$328.currentItem;
        var v28202 = JAM.call(v29011.css, v29011, ["paddingLeft"], JAM.policy.p3);
        if (!v28202) {
          v28202 = 0;
        }
        var v20874 = v25112 - parseInt(v28202, 10);
        var v28203 = c$$328.currentItem;
        var v26980 = JAM.call(v28203.css, v28203, ["paddingRight"], JAM.policy.p3);
        if (!v26980) {
          v26980 = 0;
        }
        JAM.call(b$$399.width, b$$399, [v20874 - parseInt(v26980, 10)], JAM.policy.p3);
      }
      return;
    }
    function v1322() {
      var v16861 = JAM.call(a$$452, null, [JAM.call(document.createElement, document, [c$$328.currentItem[0].nodeName], JAM.policy.p3)], JAM.policy.p3);
      var v20877 = e$$236;
      if (!v20877) {
        v20877 = c$$328.currentItem[0].className + " ui-sortable-placeholder";
      }
      var v11268 = JAM.call(v16861.addClass, v16861, [v20877], JAM.policy.p3);
      var b$$398 = JAM.call(v11268.removeClass, v11268, ["ui-sortable-helper"], JAM.policy.p3)[0];
      if (!e$$236) {
        b$$398.style.visibility = "hidden";
      }
      return b$$398;
    }
    var c$$328 = b$$397 || this;
    var d$$255 = c$$328.options;
    var v11269 = !d$$255.placeholder;
    if (!v11269) {
      v11269 = d$$255.placeholder.constructor == String;
    }
    if (v11269) {
      var e$$236 = d$$255.placeholder;
      d$$255.placeholder = {element:v1322, update:v1323};
    }
    var v16868 = c$$328;
    var v25118 = d$$255.placeholder.element;
    var v31064 = JAM.call(a$$452, null, [JAM.call(v25118.call, v25118, [c$$328.element, c$$328.currentItem], JAM.policy.p3)], JAM.policy.p3);
    v16868.placeholder = v31064;
    var v16869 = c$$328.currentItem;
    JAM.call(v16869.after, v16869, [c$$328.placeholder], JAM.policy.p3);
    var v11270 = d$$255.placeholder;
    JAM.call(v11270.update, v11270, [c$$328, c$$328.placeholder], JAM.policy.p3);
    return;
  }
  function v1321(b$$396) {
    var v11272 = this.offsetParent;
    if (v11272) {
      v11272 = this.helper;
    }
    var v4444 = v11272;
    if (v4444) {
      var v11273 = this.offset;
      var v31065 = JAM.call(this._getParentOffset, this, [], JAM.policy.p3);
      v11273.parent = v31065;
    }
    var c$$327 = this.items.length - 1;
    var v4449 = c$$327 >= 0;
    for (;v4449;) {
      var d$$254 = this.items[c$$327];
      var v16871 = d$$254.instance != this.currentContainer;
      if (v16871) {
        v16871 = this.currentContainer;
      }
      var v11275 = v16871;
      if (v11275) {
        v11275 = d$$254.item[0] != this.currentItem[0];
      }
      if (v11275) {
        c$$327--;
        v4449 = c$$327 >= 0;
        continue;
      }
      var v4448;
      if (this.options.toleranceElement) {
        v4448 = JAM.call(a$$452, null, [this.options.toleranceElement, d$$254.item], JAM.policy.p3);
      } else {
        v4448 = d$$254.item;
      }
      var e$$235 = v4448;
      if (!b$$396) {
        var v31066 = JAM.call(e$$235.outerWidth, e$$235, [], JAM.policy.p3);
        d$$254.width = v31066;
        var v31067 = JAM.call(e$$235.outerHeight, e$$235, [], JAM.policy.p3);
        d$$254.height = v31067;
      }
      var f$$103 = JAM.call(e$$235.offset, e$$235, [], JAM.policy.p3);
      d$$254.left = f$$103.left;
      d$$254.top = f$$103.top;
      c$$327--;
      v4449 = c$$327 >= 0;
    }
    var v11280 = this.options.custom;
    if (v11280) {
      v11280 = this.options.custom.refreshContainers;
    }
    if (v11280) {
      var v4450 = this.options.custom.refreshContainers;
      JAM.call(v4450.call, v4450, [this], JAM.policy.p3);
    } else {
      c$$327 = this.containers.length - 1;
      var v4453 = c$$327 >= 0;
      for (;v4453;) {
        var v4452 = this.containers[c$$327].element;
        f$$103 = JAM.call(v4452.offset, v4452, [], JAM.policy.p3);
        this.containers[c$$327].containerCache.left = f$$103.left;
        this.containers[c$$327].containerCache.top = f$$103.top;
        var v16880 = this.containers[c$$327].containerCache;
        var v20888 = this.containers[c$$327].element;
        var v31068 = JAM.call(v20888.outerWidth, v20888, [], JAM.policy.p3);
        v16880.width = v31068;
        var v11284 = this.containers[c$$327].containerCache;
        var v16882 = this.containers[c$$327].element;
        var v31069 = JAM.call(v16882.outerHeight, v16882, [], JAM.policy.p3);
        v11284.height = v31069;
        c$$327--;
        v4453 = c$$327 >= 0;
      }
    }
    return this;
  }
  function v1320(b$$395) {
    this.items = [];
    this.containers = [this];
    var c$$326 = this.items;
    var d$$253 = this;
    var v16883;
    if (JAM.call(a$$452.isFunction, a$$452, [this.options.items], JAM.policy.p3)) {
      var v20891 = this.options.items;
      v16883 = JAM.call(v20891.call, v20891, [this.element[0], b$$395, {item:this.currentItem}], JAM.policy.p3);
    } else {
      v16883 = JAM.call(a$$452, null, [this.options.items, this.element], JAM.policy.p3);
    }
    var e$$234 = [[v16883, this]];
    var f$$102 = JAM.call(this._connectWith, this, [], JAM.policy.p3);
    var v11286 = f$$102;
    if (v11286) {
      v11286 = this.ready;
    }
    if (v11286) {
      var g$$135 = f$$102.length - 1;
      var v4463 = g$$135 >= 0;
      for (;v4463;) {
        var h$$110 = JAM.call(a$$452, null, [f$$102[g$$135]], JAM.policy.p3);
        var i$$167 = h$$110.length - 1;
        var v4462 = i$$167 >= 0;
        for (;v4462;) {
          var j$$79 = JAM.call(a$$452.data, a$$452, [h$$110[i$$167], this.widgetName], JAM.policy.p3);
          var v16884 = j$$79;
          if (v16884) {
            v16884 = j$$79 != this;
          }
          var v11287 = v16884;
          if (v11287) {
            v11287 = !j$$79.options.disabled;
          }
          var v4461 = v11287;
          if (v4461) {
            var v25131;
            if (JAM.call(a$$452.isFunction, a$$452, [j$$79.options.items], JAM.policy.p3)) {
              var v26988 = j$$79.options.items;
              v25131 = JAM.call(v26988.call, v26988, [j$$79.element[0], b$$395, {item:this.currentItem}], JAM.policy.p3);
            } else {
              v25131 = JAM.call(a$$452, null, [j$$79.options.items, j$$79.element], JAM.policy.p3);
            }
            JAM.call(e$$234.push, e$$234, [[v25131, j$$79]], JAM.policy.p3);
            var v16887 = this.containers;
            JAM.call(v16887.push, v16887, [j$$79], JAM.policy.p3);
          }
          i$$167--;
          v4462 = i$$167 >= 0;
        }
        g$$135--;
        v4463 = g$$135 >= 0;
      }
    }
    g$$135 = e$$234.length - 1;
    var v4470 = g$$135 >= 0;
    for (;v4470;) {
      var k$$54 = e$$234[g$$135][1];
      var l$$64 = e$$234[g$$135][0];
      i$$167 = 0;
      var m$$35 = l$$64.length;
      var v4469 = i$$167 < m$$35;
      for (;v4469;) {
        var n$$85 = JAM.call(a$$452, null, [l$$64[i$$167]], JAM.policy.p3);
        JAM.call(n$$85.data, n$$85, [this.widgetName + "-item", k$$54], JAM.policy.p3);
        JAM.call(c$$326.push, c$$326, [{item:n$$85, instance:k$$54, width:0, height:0, left:0, top:0}], JAM.policy.p3);
        i$$167++;
        v4469 = i$$167 < m$$35;
      }
      g$$135--;
      v4470 = g$$135 >= 0;
    }
    return;
  }
  function v1319() {
    var v4471 = this.currentItem;
    var a$$459 = JAM.call(v4471.find, v4471, [":data(" + this.widgetName + "-item)"], JAM.policy.p3);
    var b$$394 = 0;
    var v4475 = b$$394 < this.items.length;
    for (;v4475;) {
      var c$$325 = 0;
      var v4474 = c$$325 < a$$459.length;
      for (;v4474;) {
        var v4473 = a$$459[c$$325] == this.items[b$$394].item[0];
        if (v4473) {
          var v11295 = this.items;
          JAM.call(v11295.splice, v11295, [b$$394, 1], JAM.policy.p3);
        }
        c$$325++;
        v4474 = c$$325 < a$$459.length;
      }
      b$$394++;
      v4475 = b$$394 < this.items.length;
    }
    return;
  }
  function v1318(b$$393) {
    function v1317() {
      JAM.call(d$$252.push, d$$252, [this], JAM.policy.p3);
      return;
    }
    var c$$324 = this;
    var d$$252 = [];
    var e$$233 = [];
    var f$$101 = JAM.call(this._connectWith, this, [], JAM.policy.p3);
    if (f$$101 && b$$393) {
      var g$$134 = f$$101.length - 1;
      var v4483 = g$$134 >= 0;
      for (;v4483;) {
        var h$$109 = JAM.call(a$$452, null, [f$$101[g$$134]], JAM.policy.p3);
        var i$$166 = h$$109.length - 1;
        var v4482 = i$$166 >= 0;
        for (;v4482;) {
          var j$$78 = JAM.call(a$$452.data, a$$452, [h$$109[i$$166], this.widgetName], JAM.policy.p3);
          var v16893 = j$$78;
          if (v16893) {
            v16893 = j$$78 != this;
          }
          var v11298 = v16893;
          if (v11298) {
            v11298 = !j$$78.options.disabled;
          }
          var v4481 = v11298;
          if (v4481) {
            var v20901;
            if (JAM.call(a$$452.isFunction, a$$452, [j$$78.options.items], JAM.policy.p3)) {
              var v25133 = j$$78.options.items;
              v20901 = JAM.call(v25133.call, v25133, [j$$78.element], JAM.policy.p3);
            } else {
              var v26996 = JAM.call(a$$452, null, [j$$78.options.items, j$$78.element], JAM.policy.p3);
              var v25135 = JAM.call(v26996.not, v26996, [".ui-sortable-helper"], JAM.policy.p3);
              v20901 = JAM.call(v25135.not, v25135, [".ui-sortable-placeholder"], JAM.policy.p3);
            }
            JAM.call(e$$233.push, e$$233, [[v20901, j$$78]], JAM.policy.p3);
          }
          i$$166--;
          v4482 = i$$166 >= 0;
        }
        g$$134--;
        v4483 = g$$134 >= 0;
      }
    }
    var v16896;
    if (JAM.call(a$$452.isFunction, a$$452, [this.options.items], JAM.policy.p3)) {
      var v20902 = this.options.items;
      v16896 = JAM.call(v20902.call, v20902, [this.element, null, {options:this.options, item:this.currentItem}], JAM.policy.p3);
    } else {
      var v25141 = JAM.call(a$$452, null, [this.options.items, this.element], JAM.policy.p3);
      var v20905 = JAM.call(v25141.not, v25141, [".ui-sortable-helper"], JAM.policy.p3);
      v16896 = JAM.call(v20905.not, v20905, [".ui-sortable-placeholder"], JAM.policy.p3);
    }
    JAM.call(e$$233.push, e$$233, [[v16896, this]], JAM.policy.p3);
    g$$134 = e$$233.length - 1;
    var v4488 = g$$134 >= 0;
    for (;v4488;) {
      var v4487 = e$$233[g$$134][0];
      JAM.call(v4487.each, v4487, [v1317], JAM.policy.p3);
      g$$134--;
      v4488 = g$$134 >= 0;
    }
    return JAM.call(a$$452, null, [d$$252], JAM.policy.p3);
  }
  function v1316() {
    var a$$458 = this.options;
    var v4489;
    if (a$$458.connectWith.constructor == String) {
      v4489 = [a$$458.connectWith];
    } else {
      v4489 = a$$458.connectWith;
    }
    return v4489;
  }
  function v1315(a$$457) {
    JAM.call(this._refreshItems, this, [a$$457], JAM.policy.p3);
    JAM.call(this.refreshPositions, this, [], JAM.policy.p3);
    return this;
  }
  function v1314() {
    var a$$456 = this.positionAbs.left - this.lastPositionAbs.left;
    var v4492 = a$$456 != 0;
    if (v4492) {
      var v11306;
      if (a$$456 > 0) {
        v11306 = "right";
      } else {
        v11306 = "left";
      }
      v4492 = v11306;
    }
    return v4492;
  }
  function v1313() {
    var a$$455 = this.positionAbs.top - this.lastPositionAbs.top;
    var v4495 = a$$455 != 0;
    if (v4495) {
      var v11309;
      if (a$$455 > 0) {
        v11309 = "down";
      } else {
        v11309 = "up";
      }
      v4495 = v11309;
    }
    return v4495;
  }
  function v1312(b$$392) {
    var v4496 = a$$452.ui;
    var c$$323 = JAM.call(v4496.isOverAxis, v4496, [this.positionAbs.top + this.offset.click.top, b$$392.top + b$$392.height / 2, b$$392.height], JAM.policy.p3);
    var v4500 = a$$452.ui;
    var d$$251 = JAM.call(v4500.isOverAxis, v4500, [this.positionAbs.left + this.offset.click.left, b$$392.left + b$$392.width / 2, b$$392.width], JAM.policy.p3);
    var e$$232 = JAM.call(this._getDragVerticalDirection, this, [], JAM.policy.p3);
    var f$$100 = JAM.call(this._getDragHorizontalDirection, this, [], JAM.policy.p3);
    var v4504;
    var v16906 = this.floating;
    if (v16906) {
      v16906 = f$$100;
    }
    if (v16906) {
      var v16907 = f$$100 == "right";
      if (v16907) {
        v16907 = d$$251;
      }
      var v11318 = v16907;
      if (!v11318) {
        var v16908 = f$$100 == "left";
        if (v16908) {
          v16908 = !d$$251;
        }
        v11318 = v16908;
      }
      v4504 = v11318;
    } else {
      var v11319 = e$$232;
      if (v11319) {
        var v20910 = e$$232 == "down";
        if (v20910) {
          v20910 = c$$323;
        }
        var v16910 = v20910;
        if (!v16910) {
          var v20911 = e$$232 == "up";
          if (v20911) {
            v20911 = !c$$323;
          }
          v16910 = v20911;
        }
        v11319 = v16910;
      }
      v4504 = v11319;
    }
    return v4504;
  }
  function v1311(b$$391) {
    var v4505 = this.options.axis === "x";
    if (!v4505) {
      var v11322 = a$$452.ui;
      v4505 = JAM.call(v11322.isOverAxis, v11322, [this.positionAbs.top + this.offset.click.top, b$$391.top, b$$391.height], JAM.policy.p3);
    }
    var c$$322 = v4505;
    var v4506 = this.options.axis === "y";
    if (!v4506) {
      var v11328 = a$$452.ui;
      v4506 = JAM.call(v11328.isOverAxis, v11328, [this.positionAbs.left + this.offset.click.left, b$$391.left, b$$391.width], JAM.policy.p3);
    }
    var d$$250 = v4506;
    var e$$231 = c$$322 && d$$250;
    var f$$99 = JAM.call(this._getDragVerticalDirection, this, [], JAM.policy.p3);
    var g$$133 = JAM.call(this._getDragHorizontalDirection, this, [], JAM.policy.p3);
    var v4507;
    if (e$$231) {
      var v11333;
      if (this.floating) {
        var v16917;
        var v27000 = g$$133;
        if (v27000) {
          v27000 = g$$133 == "right";
        }
        var v25144 = v27000;
        if (!v25144) {
          v25144 = f$$99 == "down";
        }
        if (v25144) {
          v16917 = 2;
        } else {
          v16917 = 1;
        }
        v11333 = v16917;
      } else {
        var v16918 = f$$99;
        if (v16918) {
          var v20918;
          if (f$$99 == "down") {
            v20918 = 2;
          } else {
            v20918 = 1;
          }
          v16918 = v20918;
        }
        v11333 = v16918;
      }
      v4507 = v11333;
    } else {
      v4507 = !1;
    }
    return v4507;
  }
  function v1310(a$$454) {
    var b$$390 = this.positionAbs.left;
    var c$$321 = b$$390 + this.helperProportions.width;
    var d$$249 = this.positionAbs.top;
    var e$$230 = d$$249 + this.helperProportions.height;
    var f$$98 = a$$454.left;
    var g$$132 = f$$98 + a$$454.width;
    var h$$108 = a$$454.top;
    var i$$165 = h$$108 + a$$454.height;
    var j$$77 = this.offset.click.top;
    var k$$53 = this.offset.click.left;
    var v16920 = d$$249 + j$$77 > h$$108;
    if (v16920) {
      v16920 = d$$249 + j$$77 < i$$165;
    }
    var v11338 = v16920;
    if (v11338) {
      v11338 = b$$390 + k$$53 > f$$98;
    }
    var v4516 = v11338;
    if (v4516) {
      v4516 = b$$390 + k$$53 < g$$132;
    }
    var l$$63 = v4516;
    var v4517;
    var v20921 = this.options.tolerance == "pointer";
    if (!v20921) {
      v20921 = this.options.forcePointerForContainers;
    }
    var v16922 = v20921;
    if (!v16922) {
      var v20922 = this.options.tolerance != "pointer";
      if (v20922) {
        var v27004 = this.helperProportions;
        var v28216;
        if (this.floating) {
          v28216 = "width";
        } else {
          v28216 = "height";
        }
        var v25150 = v27004[v28216];
        var v28217;
        if (this.floating) {
          v28217 = "width";
        } else {
          v28217 = "height";
        }
        v20922 = v25150 > a$$454[v28217];
      }
      v16922 = v20922;
    }
    if (v16922) {
      v4517 = l$$63;
    } else {
      var v20924 = f$$98 < b$$390 + this.helperProportions.width / 2;
      if (v20924) {
        v20924 = c$$321 - this.helperProportions.width / 2 < g$$132;
      }
      var v16923 = v20924;
      if (v16923) {
        v16923 = h$$108 < d$$249 + this.helperProportions.height / 2;
      }
      var v11340 = v16923;
      if (v11340) {
        v11340 = e$$230 - this.helperProportions.height / 2 < i$$165;
      }
      v4517 = v11340;
    }
    return v4517;
  }
  function v1309(b$$389) {
    function v1308() {
      var v25156 = b$$389.item;
      if (!v25156) {
        v25156 = this;
      }
      var v16925 = JAM.call(a$$452, null, [v25156], JAM.policy.p3);
      var v20928 = b$$389.attribute;
      if (!v20928) {
        v20928 = "id";
      }
      var v11342 = JAM.call(v16925.attr, v16925, [v20928], JAM.policy.p3);
      if (!v11342) {
        v11342 = "";
      }
      JAM.call(d$$248.push, d$$248, [v11342], JAM.policy.p3);
      return;
    }
    var v11343 = b$$389;
    if (v11343) {
      v11343 = b$$389.connected;
    }
    var c$$320 = JAM.call(this._getItemsAsjQuery, this, [v11343], JAM.policy.p3);
    var d$$248 = [];
    b$$389 = b$$389 || {};
    JAM.call(c$$320.each, c$$320, [v1308], JAM.policy.p3);
    return d$$248;
  }
  function v1307(b$$388) {
    function v1306() {
      var v25158 = b$$388.item;
      if (!v25158) {
        v25158 = this;
      }
      var v16928 = JAM.call(a$$452, null, [v25158], JAM.policy.p3);
      var v20930 = b$$388.attribute;
      if (!v20930) {
        v20930 = "id";
      }
      var v11344 = JAM.call(v16928.attr, v16928, [v20930], JAM.policy.p3);
      if (!v11344) {
        v11344 = "";
      }
      var v4520 = v11344;
      var v11345 = b$$388.expression;
      if (!v11345) {
        v11345 = /(.+)[-=_](.+)/;
      }
      var c$$319 = JAM.call(v4520.match, v4520, [v11345], JAM.policy.p3);
      if (c$$319) {
        var v25160 = b$$388.key;
        if (!v25160) {
          v25160 = c$$319[1] + "[]";
        }
        var v16932 = v25160 + "=";
        var v20932;
        var v27015 = b$$388.key;
        if (v27015) {
          v27015 = b$$388.expression;
        }
        if (v27015) {
          v20932 = c$$319[1];
        } else {
          v20932 = c$$319[2];
        }
        JAM.call(d$$247.push, d$$247, [v16932 + v20932], JAM.policy.p3);
      }
      return;
    }
    var v11347 = b$$388;
    if (v11347) {
      v11347 = b$$388.connected;
    }
    var c$$318 = JAM.call(this._getItemsAsjQuery, this, [v11347], JAM.policy.p3);
    var d$$247 = [];
    b$$388 = b$$388 || {};
    var v20933 = JAM.call(a$$452, null, [c$$318], JAM.policy.p3);
    JAM.call(v20933.each, v20933, [v1306], JAM.policy.p3);
    var v20934 = !d$$247.length;
    if (v20934) {
      v20934 = b$$388.key;
    }
    var v16934 = v20934;
    if (v16934) {
      JAM.call(d$$247.push, d$$247, [b$$388.key + "="], JAM.policy.p3);
    }
    return JAM.call(d$$247.join, d$$247, ["&"], JAM.policy.p3);
  }
  function v1305() {
    var b$$387 = this;
    if (this.dragging) {
      JAM.call(this._mouseUp, this, [{target:null}], JAM.policy.p3);
      var v11349;
      if (this.options.helper == "original") {
        var v20937 = this.currentItem;
        var v16935 = JAM.call(v20937.css, v20937, [this._storedCSS], JAM.policy.p3);
        v11349 = JAM.call(v16935.removeClass, v16935, ["ui-sortable-helper"], JAM.policy.p3);
      } else {
        var v16936 = this.currentItem;
        v11349 = JAM.call(v16936.show, v16936, [], JAM.policy.p3);
      }
      v11349;
      var c$$317 = this.containers.length - 1;
      var v4524 = c$$317 >= 0;
      for (;v4524;) {
        var v11351 = this.containers[c$$317];
        JAM.call(v11351._trigger, v11351, ["deactivate", null, JAM.call(b$$387._uiHash, b$$387, [this], JAM.policy.p3)], JAM.policy.p3);
        var v11353 = this.containers[c$$317].containerCache.over;
        if (v11353) {
          var v20940 = this.containers[c$$317];
          JAM.call(v20940._trigger, v20940, ["out", null, JAM.call(b$$387._uiHash, b$$387, [this], JAM.policy.p3)], JAM.policy.p3);
          this.containers[c$$317].containerCache.over = 0;
        }
        c$$317--;
        v4524 = c$$317 >= 0;
      }
    }
    var v11354 = this.placeholder;
    if (v11354) {
      var v27017 = this.placeholder[0].parentNode;
      if (v27017) {
        var v28222 = this.placeholder[0].parentNode;
        JAM.call(v28222.removeChild, v28222, [this.placeholder[0]], JAM.policy.p3);
      }
      var v29022 = this.options.helper != "original";
      if (v29022) {
        v29022 = this.helper;
      }
      var v28224 = v29022;
      if (v28224) {
        v28224 = this.helper[0].parentNode;
      }
      var v27018 = v28224;
      if (v27018) {
        var v28225 = this.helper;
        JAM.call(v28225.remove, v28225, [], JAM.policy.p3);
      }
      JAM.call(a$$452.extend, a$$452, [this, {helper:null, dragging:!1, reverting:!1, _noFinalSort:null}], JAM.policy.p3);
      var v20943;
      if (this.domPosition.prev) {
        var v25169 = JAM.call(a$$452, null, [this.domPosition.prev], JAM.policy.p3);
        v20943 = JAM.call(v25169.after, v25169, [this.currentItem], JAM.policy.p3);
      } else {
        var v25171 = JAM.call(a$$452, null, [this.domPosition.parent], JAM.policy.p3);
        v20943 = JAM.call(v25171.prepend, v25171, [this.currentItem], JAM.policy.p3);
      }
      v20943;
    }
    return this;
  }
  function v1304(b$$386, c$$316) {
    function v1303() {
      JAM.call(d$$246._clear, d$$246, [b$$386], JAM.policy.p3);
      return;
    }
    if (!b$$386) {
      return;
    }
    var v11355 = a$$452.ui.ddmanager;
    if (v11355) {
      v11355 = !this.options.dropBehaviour;
    }
    var v4527 = v11355;
    if (v4527) {
      var v11356 = a$$452.ui.ddmanager;
      JAM.call(v11356.drop, v11356, [this, b$$386], JAM.policy.p3);
    }
    if (this.options.revert) {
      var d$$246 = this;
      var v4528 = d$$246.placeholder;
      var e$$229 = JAM.call(v4528.offset, v4528, [], JAM.policy.p3);
      d$$246.reverting = !0;
      var v11358 = JAM.call(a$$452, null, [this.helper], JAM.policy.p3);
      var v20945 = e$$229.left - this.offset.parent.left - d$$246.margins.left;
      var v25176;
      if (this.offsetParent[0] == document.body) {
        v25176 = 0;
      } else {
        v25176 = this.offsetParent[0].scrollLeft;
      }
      var v16944 = v20945 + v25176;
      var v20947 = e$$229.top - this.offset.parent.top - d$$246.margins.top;
      var v25179;
      if (this.offsetParent[0] == document.body) {
        v25179 = 0;
      } else {
        v25179 = this.offsetParent[0].scrollTop;
      }
      var v11359 = {left:v16944, top:v20947 + v25179};
      var v16946 = parseInt(this.options.revert, 10);
      if (!v16946) {
        v16946 = 500;
      }
      JAM.call(v11358.animate, v11358, [v11359, v16946, v1303], JAM.policy.p3);
    } else {
      JAM.call(this._clear, this, [b$$386, c$$316], JAM.policy.p3);
    }
    return!1;
  }
  function v1302(b$$385) {
    var v31070 = JAM.call(this._generatePosition, this, [b$$385], JAM.policy.p3);
    this.position = v31070;
    var v31071 = JAM.call(this._convertPositionTo, this, ["absolute"], JAM.policy.p3);
    this.positionAbs = v31071;
    var v11361 = this.lastPositionAbs;
    if (!v11361) {
      this.lastPositionAbs = this.positionAbs;
    }
    if (this.options.scroll) {
      var c$$315 = this.options;
      var d$$245 = !1;
      var v11363;
      var v20951 = this.scrollParent[0] != document;
      if (v20951) {
        v20951 = this.scrollParent[0].tagName != "HTML";
      }
      if (v20951) {
        var v20952;
        if (this.overflowOffset.top + this.scrollParent[0].offsetHeight - b$$385.pageY < c$$315.scrollSensitivity) {
          v20952 = this.scrollParent[0].scrollTop = d$$245 = this.scrollParent[0].scrollTop + c$$315.scrollSpeed;
        } else {
          var v25184 = b$$385.pageY - this.overflowOffset.top < c$$315.scrollSensitivity;
          if (v25184) {
            v25184 = this.scrollParent[0].scrollTop = d$$245 = this.scrollParent[0].scrollTop - c$$315.scrollSpeed;
          }
          v20952 = v25184;
        }
        v20952;
        var v20953;
        if (this.overflowOffset.left + this.scrollParent[0].offsetWidth - b$$385.pageX < c$$315.scrollSensitivity) {
          v20953 = this.scrollParent[0].scrollLeft = d$$245 = this.scrollParent[0].scrollLeft + c$$315.scrollSpeed;
        } else {
          var v25187 = b$$385.pageX - this.overflowOffset.left < c$$315.scrollSensitivity;
          if (v25187) {
            v25187 = this.scrollParent[0].scrollLeft = d$$245 = this.scrollParent[0].scrollLeft - c$$315.scrollSpeed;
          }
          v20953 = v25187;
        }
        v11363 = v20953;
      } else {
        var v20954;
        var v28253 = b$$385.pageY;
        var v29038 = JAM.call(a$$452, null, [document], JAM.policy.p3);
        if (v28253 - JAM.call(v29038.scrollTop, v29038, [], JAM.policy.p3) < c$$315.scrollSensitivity) {
          var v25189 = JAM.call(a$$452, null, [document], JAM.policy.p3);
          var v28255 = JAM.call(a$$452, null, [document], JAM.policy.p3);
          v20954 = d$$245 = JAM.call(v25189.scrollTop, v25189, [JAM.call(v28255.scrollTop, v28255, [], JAM.policy.p3) - c$$315.scrollSpeed], JAM.policy.p3);
        } else {
          var v29039 = JAM.call(a$$452, null, [window], JAM.policy.p3);
          var v28256 = JAM.call(v29039.height, v29039, [], JAM.policy.p3);
          var v29040 = b$$385.pageY;
          var v29555 = JAM.call(a$$452, null, [document], JAM.policy.p3);
          var v25191 = v28256 - (v29040 - JAM.call(v29555.scrollTop, v29555, [], JAM.policy.p3)) < c$$315.scrollSensitivity;
          if (v25191) {
            var v27058 = JAM.call(a$$452, null, [document], JAM.policy.p3);
            var v29042 = JAM.call(a$$452, null, [document], JAM.policy.p3);
            v25191 = d$$245 = JAM.call(v27058.scrollTop, v27058, [JAM.call(v29042.scrollTop, v29042, [], JAM.policy.p3) + c$$315.scrollSpeed], JAM.policy.p3);
          }
          v20954 = v25191;
        }
        v20954;
        var v20955;
        var v28260 = b$$385.pageX;
        var v29043 = JAM.call(a$$452, null, [document], JAM.policy.p3);
        if (v28260 - JAM.call(v29043.scrollLeft, v29043, [], JAM.policy.p3) < c$$315.scrollSensitivity) {
          var v25193 = JAM.call(a$$452, null, [document], JAM.policy.p3);
          var v28262 = JAM.call(a$$452, null, [document], JAM.policy.p3);
          v20955 = d$$245 = JAM.call(v25193.scrollLeft, v25193, [JAM.call(v28262.scrollLeft, v28262, [], JAM.policy.p3) - c$$315.scrollSpeed], JAM.policy.p3);
        } else {
          var v29044 = JAM.call(a$$452, null, [window], JAM.policy.p3);
          var v28263 = JAM.call(v29044.width, v29044, [], JAM.policy.p3);
          var v29045 = b$$385.pageX;
          var v29556 = JAM.call(a$$452, null, [document], JAM.policy.p3);
          var v25195 = v28263 - (v29045 - JAM.call(v29556.scrollLeft, v29556, [], JAM.policy.p3)) < c$$315.scrollSensitivity;
          if (v25195) {
            var v27066 = JAM.call(a$$452, null, [document], JAM.policy.p3);
            var v29047 = JAM.call(a$$452, null, [document], JAM.policy.p3);
            v25195 = d$$245 = JAM.call(v27066.scrollLeft, v27066, [JAM.call(v29047.scrollLeft, v29047, [], JAM.policy.p3) + c$$315.scrollSpeed], JAM.policy.p3);
          }
          v20955 = v25195;
        }
        v11363 = v20955;
      }
      v11363;
      var v20956 = d$$245 !== !1;
      if (v20956) {
        v20956 = a$$452.ui.ddmanager;
      }
      var v16949 = v20956;
      if (v16949) {
        v16949 = !c$$315.dropBehaviour;
      }
      var v11364 = v16949;
      if (v11364) {
        var v16950 = a$$452.ui.ddmanager;
        JAM.call(v16950.prepareOffsets, v16950, [this, b$$385], JAM.policy.p3);
      }
    }
    var v31072 = JAM.call(this._convertPositionTo, this, ["absolute"], JAM.policy.p3);
    this.positionAbs = v31072;
    var v11365 = !this.options.axis;
    if (!v11365) {
      v11365 = this.options.axis != "y";
    }
    if (v11365) {
      this.helper[0].style.left = this.position.left + "px";
    }
    var v11368 = !this.options.axis;
    if (!v11368) {
      v11368 = this.options.axis != "x";
    }
    if (v11368) {
      this.helper[0].style.top = this.position.top + "px";
    }
    var e$$228 = this.items.length - 1;
    var v4544 = e$$228 >= 0;
    for (;v4544;) {
      var f$$97 = this.items[e$$228];
      var g$$131 = f$$97.item[0];
      var h$$107 = JAM.call(this._intersectsWithPointer, this, [f$$97], JAM.policy.p3);
      if (!h$$107) {
        e$$228--;
        v4544 = e$$228 >= 0;
        continue;
      }
      if (f$$97.instance !== this.currentContainer) {
        e$$228--;
        v4544 = e$$228 >= 0;
        continue;
      }
      var v20963 = g$$131 != this.currentItem[0];
      if (v20963) {
        var v28267 = this.placeholder;
        var v29048;
        if (h$$107 == 1) {
          v29048 = "next";
        } else {
          v29048 = "prev";
        }
        v20963 = JAM.call(v28267[v29048], v28267, [], JAM.policy.p3)[0] != g$$131;
      }
      var v16961 = v20963;
      if (v16961) {
        var v25201 = a$$452.ui;
        v16961 = !JAM.call(v25201.contains, v25201, [this.placeholder[0], g$$131], JAM.policy.p3);
      }
      var v11374 = v16961;
      if (v11374) {
        var v16962;
        if (this.options.type == "semi-dynamic") {
          var v25204 = a$$452.ui;
          v16962 = !JAM.call(v25204.contains, v25204, [this.element[0], g$$131], JAM.policy.p3);
        } else {
          v16962 = !0;
        }
        v11374 = v16962;
      }
      if (v11374) {
        var v4540;
        if (h$$107 == 1) {
          v4540 = "down";
        } else {
          v4540 = "up";
        }
        this.direction = v4540;
        var v11376 = this.options.tolerance == "pointer";
        if (!v11376) {
          v11376 = JAM.call(this._intersectsWithSides, this, [f$$97], JAM.policy.p3);
        }
        if (v11376) {
          JAM.call(this._rearrange, this, [b$$385, f$$97], JAM.policy.p3);
        } else {
          break;
        }
        JAM.call(this._trigger, this, ["change", b$$385, JAM.call(this._uiHash, this, [], JAM.policy.p3)], JAM.policy.p3);
        break;
      }
      e$$228--;
      v4544 = e$$228 >= 0;
    }
    JAM.call(this._contactContainers, this, [b$$385], JAM.policy.p3);
    var v25206 = a$$452.ui.ddmanager;
    if (v25206) {
      var v27074 = a$$452.ui.ddmanager;
      JAM.call(v27074.drag, v27074, [this, b$$385], JAM.policy.p3);
    }
    JAM.call(this._trigger, this, ["sort", b$$385, JAM.call(this._uiHash, this, [], JAM.policy.p3)], JAM.policy.p3);
    this.lastPositionAbs = this.positionAbs;
    return!1;
  }
  function v1301(b$$384, c$$314, d$$244) {
    var e$$227 = this.options;
    var f$$96 = this;
    this.currentContainer = this;
    JAM.call(this.refreshPositions, this, [], JAM.policy.p3);
    var v31073 = JAM.call(this._createHelper, this, [b$$384], JAM.policy.p3);
    this.helper = v31073;
    JAM.call(this._cacheHelperProportions, this, [], JAM.policy.p3);
    JAM.call(this._cacheMargins, this, [], JAM.policy.p3);
    var v30846 = this.helper;
    var v31074 = JAM.call(v30846.scrollParent, v30846, [], JAM.policy.p3);
    this.scrollParent = v31074;
    var v30835 = this.currentItem;
    var v31075 = JAM.call(v30835.offset, v30835, [], JAM.policy.p3);
    this.offset = v31075;
    this.offset = {top:this.offset.top - this.margins.top, left:this.offset.left - this.margins.left};
    JAM.call(a$$452.extend, a$$452, [this.offset, {click:{left:b$$384.pageX - this.offset.left, top:b$$384.pageY - this.offset.top}, parent:JAM.call(this._getParentOffset, this, [], JAM.policy.p3), relative:JAM.call(this._getRelativeOffset, this, [], JAM.policy.p3)}], JAM.policy.p3);
    var v30770 = this.helper;
    JAM.call(v30770.css, v30770, ["position", "absolute"], JAM.policy.p3);
    var v30731 = this.helper;
    var v31076 = JAM.call(v30731.css, v30731, ["position"], JAM.policy.p3);
    this.cssPosition = v31076;
    var v31077 = JAM.call(this._generatePosition, this, [b$$384], JAM.policy.p3);
    this.originalPosition = v31077;
    this.originalPageX = b$$384.pageX;
    this.originalPageY = b$$384.pageY;
    var v30330 = e$$227.cursorAt;
    if (v30330) {
      JAM.call(this._adjustOffsetFromHelper, this, [e$$227.cursorAt], JAM.policy.p3);
    }
    var v30471 = this.currentItem;
    var v30131 = JAM.call(v30471.prev, v30471, [], JAM.policy.p3)[0];
    var v30472 = this.currentItem;
    this.domPosition = {prev:v30131, parent:JAM.call(v30472.parent, v30472, [], JAM.policy.p3)[0]};
    var v29880 = this.helper[0] != this.currentItem[0];
    if (v29880) {
      var v30135 = this.currentItem;
      JAM.call(v30135.hide, v30135, [], JAM.policy.p3);
    }
    JAM.call(this._createPlaceholder, this, [], JAM.policy.p3);
    var v29049 = e$$227.containment;
    if (v29049) {
      JAM.call(this._setContainment, this, [], JAM.policy.p3);
    }
    var v28270 = e$$227.cursor;
    if (v28270) {
      var v29881 = JAM.call(a$$452, null, ["body"], JAM.policy.p3);
      var v29558 = JAM.call(v29881.css, v29881, ["cursor"], JAM.policy.p3);
      if (v29558) {
        var v29882 = JAM.call(a$$452, null, ["body"], JAM.policy.p3);
        var v31078 = JAM.call(v29882.css, v29882, ["cursor"], JAM.policy.p3);
        this._storedCursor = v31078;
      }
      var v29559 = JAM.call(a$$452, null, ["body"], JAM.policy.p3);
      JAM.call(v29559.css, v29559, ["cursor", e$$227.cursor], JAM.policy.p3);
    }
    var v27075 = e$$227.opacity;
    if (v27075) {
      var v29561 = this.helper;
      var v29050 = JAM.call(v29561.css, v29561, ["opacity"], JAM.policy.p3);
      if (v29050) {
        var v29562 = this.helper;
        var v31079 = JAM.call(v29562.css, v29562, ["opacity"], JAM.policy.p3);
        this._storedOpacity = v31079;
      }
      var v29051 = this.helper;
      JAM.call(v29051.css, v29051, ["opacity", e$$227.opacity], JAM.policy.p3);
    }
    var v25207 = e$$227.zIndex;
    if (v25207) {
      var v29053 = this.helper;
      var v28271 = JAM.call(v29053.css, v29053, ["zIndex"], JAM.policy.p3);
      if (v28271) {
        var v29054 = this.helper;
        var v31080 = JAM.call(v29054.css, v29054, ["zIndex"], JAM.policy.p3);
        this._storedZIndex = v31080;
      }
      var v28272 = this.helper;
      JAM.call(v28272.css, v28272, ["zIndex", e$$227.zIndex], JAM.policy.p3);
    }
    var v25208 = this.scrollParent[0] != document;
    if (v25208) {
      v25208 = this.scrollParent[0].tagName != "HTML";
    }
    var v20969 = v25208;
    if (v20969) {
      var v25209 = this.scrollParent;
      var v31081 = JAM.call(v25209.offset, v25209, [], JAM.policy.p3);
      this.overflowOffset = v31081;
    }
    JAM.call(this._trigger, this, ["start", b$$384, JAM.call(this._uiHash, this, [], JAM.policy.p3)], JAM.policy.p3);
    var v11377 = this._preserveHelperProportions;
    if (!v11377) {
      JAM.call(this._cacheHelperProportions, this, [], JAM.policy.p3);
    }
    if (!d$$244) {
      var g$$130 = this.containers.length - 1;
      var v4548 = g$$130 >= 0;
      for (;v4548;) {
        var v4546 = this.containers[g$$130];
        JAM.call(v4546._trigger, v4546, ["activate", b$$384, JAM.call(f$$96._uiHash, f$$96, [this], JAM.policy.p3)], JAM.policy.p3);
        g$$130--;
        v4548 = g$$130 >= 0;
      }
    }
    var v27078 = a$$452.ui.ddmanager;
    if (v27078) {
      a$$452.ui.ddmanager.current = this;
    }
    var v28278 = a$$452.ui.ddmanager;
    if (v28278) {
      v28278 = !e$$227.dropBehaviour;
    }
    var v27079 = v28278;
    if (v27079) {
      var v28279 = a$$452.ui.ddmanager;
      JAM.call(v28279.prepareOffsets, v28279, [this, b$$384], JAM.policy.p3);
    }
    this.dragging = !0;
    var v20970 = this.helper;
    JAM.call(v20970.addClass, v20970, ["ui-sortable-helper"], JAM.policy.p3);
    JAM.call(this._mouseDrag, this, [b$$384], JAM.policy.p3);
    return!0;
  }
  function v1300(b$$383, c$$313) {
    function v1299() {
      var v4550 = this == b$$383.target;
      if (v4550) {
        h$$106 = !0;
      }
      return;
    }
    function v1298() {
      if (JAM.call(a$$452.data, a$$452, [this, d$$243.widgetName + "-item"], JAM.policy.p3) == f$$95) {
        e$$226 = JAM.call(a$$452, null, [this], JAM.policy.p3);
        return!1;
      }
      return;
    }
    var d$$243 = this;
    if (this.reverting) {
      return!1;
    }
    var v11382 = this.options.disabled;
    if (!v11382) {
      v11382 = this.options.type == "static";
    }
    if (v11382) {
      return!1;
    }
    JAM.call(this._refreshItems, this, [b$$383], JAM.policy.p3);
    var e$$226 = null;
    var f$$95 = this;
    var v11383 = JAM.call(a$$452, null, [b$$383.target], JAM.policy.p3);
    var v4554 = JAM.call(v11383.parents, v11383, [], JAM.policy.p3);
    var g$$129 = JAM.call(v4554.each, v4554, [v1298], JAM.policy.p3);
    var v4555 = JAM.call(a$$452.data, a$$452, [b$$383.target, d$$243.widgetName + "-item"], JAM.policy.p3) == f$$95;
    if (v4555) {
      e$$226 = JAM.call(a$$452, null, [b$$383.target], JAM.policy.p3);
    }
    if (!e$$226) {
      return!1;
    }
    var v11386 = this.options.handle;
    if (v11386) {
      v11386 = !c$$313;
    }
    if (v11386) {
      var h$$106 = !1;
      var v16975 = JAM.call(a$$452, null, [this.options.handle, e$$226], JAM.policy.p3);
      var v11387 = JAM.call(v16975.find, v16975, ["*"], JAM.policy.p3);
      var v4557 = JAM.call(v11387.andSelf, v11387, [], JAM.policy.p3);
      JAM.call(v4557.each, v4557, [v1299], JAM.policy.p3);
      if (!h$$106) {
        return!1;
      }
    }
    this.currentItem = e$$226;
    JAM.call(this._removeCurrentsFromItems, this, [], JAM.policy.p3);
    return!0;
  }
  function v1297(b$$382, c$$312) {
    var v4560;
    if (b$$382 === "disabled") {
      JAM.set(this.options, b$$382, c$$312, JAM.policy.p2);
      var v16977 = JAM.call(this.widget, this, [], JAM.policy.p3);
      var v20975;
      if (c$$312) {
        v20975 = "addClass";
      } else {
        v20975 = "removeClass";
      }
      v4560 = JAM.call(v16977[v20975], v16977, ["ui-sortable-disabled"], JAM.policy.p3);
    } else {
      var v11388 = a$$452.Widget.prototype._setOption;
      v4560 = JAM.call(v11388.apply, v11388, [this, arguments], JAM.policy.p3);
    }
    v4560;
    return;
  }
  function v1296() {
    var v16980 = a$$452.Widget.prototype.destroy;
    JAM.call(v16980.call, v16980, [this], JAM.policy.p3);
    var v16981 = this.element;
    JAM.call(v16981.removeClass, v16981, ["ui-sortable ui-sortable-disabled"], JAM.policy.p3);
    JAM.call(this._mouseDestroy, this, [], JAM.policy.p3);
    var b$$381 = this.items.length - 1;
    var v4564 = b$$381 >= 0;
    for (;v4564;) {
      var v4562 = this.items[b$$381].item;
      JAM.call(v4562.removeData, v4562, [this.widgetName + "-item"], JAM.policy.p3);
      b$$381--;
      v4564 = b$$381 >= 0;
    }
    return this;
  }
  function v1295() {
    var a$$453 = this.options;
    this.containerCache = {};
    var v28280 = this.element;
    JAM.call(v28280.addClass, v28280, ["ui-sortable"], JAM.policy.p3);
    JAM.call(this.refresh, this, [], JAM.policy.p3);
    var v25212;
    if (this.items.length) {
      var v28282 = a$$453.axis === "x";
      if (!v28282) {
        var v29563 = this.items[0].item;
        v28282 = JAM.call(/left|right/.test, /left|right/, [JAM.call(v29563.css, v29563, ["float"], JAM.policy.p3)], JAM.policy.p3);
      }
      var v27080 = v28282;
      if (!v27080) {
        var v29063 = this.items[0].item;
        v27080 = JAM.call(/inline|table-cell/.test, /inline|table-cell/, [JAM.call(v29063.css, v29063, ["display"], JAM.policy.p3)], JAM.policy.p3);
      }
      v25212 = v27080;
    } else {
      v25212 = !1;
    }
    this.floating = v25212;
    var v20978 = this.element;
    var v31082 = JAM.call(v20978.offset, v20978, [], JAM.policy.p3);
    this.offset = v31082;
    JAM.call(this._mouseInit, this, [], JAM.policy.p3);
    this.ready = !0;
    return;
  }
  JAM.call(a$$452.widget, a$$452, ["ui.sortable", a$$452.ui.mouse, {widgetEventPrefix:"sort", ready:!1, options:{appendTo:"parent", axis:!1, connectWith:!1, containment:!1, cursor:"auto", cursorAt:!1, dropOnEmpty:!0, forcePlaceholderSize:!1, forceHelperSize:!1, grid:!1, handle:!1, helper:"original", items:"> *", opacity:!1, placeholder:!1, revert:!1, scroll:!0, scrollSensitivity:20, scrollSpeed:20, scope:"default", tolerance:"intersect", zIndex:1E3}, _create:v1295, destroy:v1296, _setOption:v1297, 
  _mouseCapture:v1300, _mouseStart:v1301, _mouseDrag:v1302, _mouseStop:v1304, cancel:v1305, serialize:v1307, toArray:v1309, _intersectsWith:v1310, _intersectsWithPointer:v1311, _intersectsWithSides:v1312, _getDragVerticalDirection:v1313, _getDragHorizontalDirection:v1314, refresh:v1315, _connectWith:v1316, _getItemsAsjQuery:v1318, _removeCurrentsFromItems:v1319, _refreshItems:v1320, refreshPositions:v1321, _createPlaceholder:v1324, _contactContainers:v1325, _createHelper:v1326, _adjustOffsetFromHelper:v1327, 
  _getParentOffset:v1328, _getRelativeOffset:v1329, _cacheMargins:v1330, _cacheHelperProportions:v1331, _setContainment:v1332, _convertPositionTo:v1333, _generatePosition:v1334, _rearrange:v1336, _clear:v1348, _trigger:v1349, _uiHash:v1350}], JAM.policy.p3);
  JAM.call(a$$452.extend, a$$452, [a$$452.ui.sortable, {version:"1.8.24"}], JAM.policy.p3);
  return;
}
function v1294(a$$451, b$$374) {
  function v1293(b$$379) {
    function v1292() {
      var d$$242 = JAM.call(a$$451.data, a$$451, [this, "selectable-item"], JAM.policy.p3);
      var v27082 = d$$242.$element;
      var v25213 = JAM.call(v27082.removeClass, v27082, ["ui-selecting"], JAM.policy.p3);
      JAM.call(v25213.addClass, v25213, ["ui-selected"], JAM.policy.p3);
      d$$242.selecting = !1;
      d$$242.selected = !0;
      d$$242.startselected = !0;
      JAM.call(c$$311._trigger, c$$311, ["selected", b$$379, {selected:d$$242.element}], JAM.policy.p3);
      return;
    }
    function v1291() {
      var d$$241 = JAM.call(a$$451.data, a$$451, [this, "selectable-item"], JAM.policy.p3);
      var v20992 = d$$241.$element;
      JAM.call(v20992.removeClass, v20992, ["ui-unselecting"], JAM.policy.p3);
      d$$241.unselecting = !1;
      d$$241.startselected = !1;
      JAM.call(c$$311._trigger, c$$311, ["unselected", b$$379, {unselected:d$$241.element}], JAM.policy.p3);
      return;
    }
    var c$$311 = this;
    this.dragged = !1;
    var d$$240 = this.options;
    var v25214 = JAM.call(a$$451, null, [".ui-unselecting", this.element[0]], JAM.policy.p3);
    JAM.call(v25214.each, v25214, [v1291], JAM.policy.p3);
    var v25215 = JAM.call(a$$451, null, [".ui-selecting", this.element[0]], JAM.policy.p3);
    JAM.call(v25215.each, v25215, [v1292], JAM.policy.p3);
    JAM.call(this._trigger, this, ["stop", b$$379], JAM.policy.p3);
    var v16989 = this.helper;
    JAM.call(v16989.remove, v16989, [], JAM.policy.p3);
    return!1;
  }
  function v1290(b$$378) {
    function v1289() {
      var i$$164 = JAM.call(a$$451.data, a$$451, [this, "selectable-item"], JAM.policy.p3);
      var v11399 = !i$$164;
      if (!v11399) {
        v11399 = i$$164.element == c$$310.element[0];
      }
      if (v11399) {
        return;
      }
      var j$$76 = !1;
      var v11400;
      if (d$$239.tolerance == "touch") {
        var v27085 = i$$164.left > g$$128;
        if (!v27085) {
          v27085 = i$$164.right < e$$225;
        }
        var v25216 = v27085;
        if (!v25216) {
          v25216 = i$$164.top > h$$105;
        }
        var v20995 = v25216;
        if (!v20995) {
          v20995 = i$$164.bottom < f$$94;
        }
        v11400 = j$$76 = !v20995;
      } else {
        var v16994 = d$$239.tolerance == "fit";
        if (v16994) {
          var v27088 = i$$164.left > e$$225;
          if (v27088) {
            v27088 = i$$164.right < g$$128;
          }
          var v25219 = v27088;
          if (v25219) {
            v25219 = i$$164.top > f$$94;
          }
          var v20997 = v25219;
          if (v20997) {
            v20997 = i$$164.bottom < h$$105;
          }
          v16994 = j$$76 = v20997;
        }
        v11400 = v16994;
      }
      v11400;
      var v11401;
      if (j$$76) {
        var v25221 = i$$164.selected;
        if (v25221) {
          var v28292 = i$$164.$element;
          JAM.call(v28292.removeClass, v28292, ["ui-selected"], JAM.policy.p3);
          i$$164.selected = !1;
        }
        var v25222 = i$$164.unselecting;
        if (v25222) {
          var v28293 = i$$164.$element;
          JAM.call(v28293.removeClass, v28293, ["ui-unselecting"], JAM.policy.p3);
          i$$164.unselecting = !1;
        }
        var v20998 = i$$164.selecting;
        if (!v20998) {
          var v28294 = i$$164.$element;
          JAM.call(v28294.addClass, v28294, ["ui-selecting"], JAM.policy.p3);
          i$$164.selecting = !0;
          v20998 = JAM.call(c$$310._trigger, c$$310, ["selecting", b$$378, {selecting:i$$164.element}], JAM.policy.p3);
        }
        v11401 = v20998;
      } else {
        var v20999 = i$$164.selecting;
        if (v20999) {
          var v25224;
          var v29064 = b$$378.metaKey;
          if (!v29064) {
            v29064 = b$$378.ctrlKey;
          }
          var v28296 = v29064;
          if (v28296) {
            v28296 = i$$164.startselected;
          }
          if (v28296) {
            var v29566 = i$$164.$element;
            JAM.call(v29566.removeClass, v29566, ["ui-selecting"], JAM.policy.p3);
            i$$164.selecting = !1;
            var v29065 = i$$164.$element;
            JAM.call(v29065.addClass, v29065, ["ui-selected"], JAM.policy.p3);
            v25224 = i$$164.selected = !0;
          } else {
            var v29567 = i$$164.$element;
            JAM.call(v29567.removeClass, v29567, ["ui-selecting"], JAM.policy.p3);
            i$$164.selecting = !1;
            var v29066 = i$$164.startselected;
            if (v29066) {
              var v29885 = i$$164.$element;
              JAM.call(v29885.addClass, v29885, ["ui-unselecting"], JAM.policy.p3);
              i$$164.unselecting = !0;
            }
            v25224 = JAM.call(c$$310._trigger, c$$310, ["unselecting", b$$378, {unselecting:i$$164.element}], JAM.policy.p3);
          }
          v25224;
        }
        var v28298 = i$$164.selected;
        if (v28298) {
          v28298 = !b$$378.metaKey;
        }
        var v27092 = v28298;
        if (v27092) {
          v27092 = !b$$378.ctrlKey;
        }
        var v25225 = v27092;
        if (v25225) {
          v25225 = !i$$164.startselected;
        }
        var v21000 = v25225;
        if (v21000) {
          var v29568 = i$$164.$element;
          JAM.call(v29568.removeClass, v29568, ["ui-selected"], JAM.policy.p3);
          i$$164.selected = !1;
          var v29069 = i$$164.$element;
          JAM.call(v29069.addClass, v29069, ["ui-unselecting"], JAM.policy.p3);
          i$$164.unselecting = !0;
          v21000 = JAM.call(c$$310._trigger, c$$310, ["unselecting", b$$378, {unselecting:i$$164.element}], JAM.policy.p3);
        }
        v11401 = v21000;
      }
      v11401;
      return;
    }
    var c$$310 = this;
    this.dragged = !0;
    if (this.options.disabled) {
      return;
    }
    var d$$239 = this.options;
    var e$$225 = this.opos[0];
    var f$$94 = this.opos[1];
    var g$$128 = b$$378.pageX;
    var h$$105 = b$$378.pageY;
    if (e$$225 > g$$128) {
      var i$$163 = g$$128;
      g$$128 = e$$225;
      e$$225 = i$$163;
    }
    if (f$$94 > h$$105) {
      i$$163 = h$$105;
      h$$105 = f$$94;
      f$$94 = i$$163;
    }
    var v16996 = this.helper;
    JAM.call(v16996.css, v16996, [{left:e$$225, top:f$$94, width:g$$128 - e$$225, height:h$$105 - f$$94}], JAM.policy.p3);
    var v16998 = this.selectees;
    JAM.call(v16998.each, v16998, [v1289], JAM.policy.p3);
    return!1;
  }
  function v1288(b$$377) {
    function v1287() {
      var d$$238 = JAM.call(a$$451.data, a$$451, [this, "selectable-item"], JAM.policy.p3);
      if (d$$238) {
        var v11403 = !b$$377.metaKey;
        if (v11403) {
          v11403 = !b$$377.ctrlKey;
        }
        var v4571 = v11403;
        if (!v4571) {
          var v17001 = d$$238.$element;
          v4571 = !JAM.call(v17001.hasClass, v17001, ["ui-selected"], JAM.policy.p3);
        }
        var e$$224 = v4571;
        var v28301 = d$$238.$element;
        var v29070;
        if (e$$224) {
          v29070 = "ui-unselecting";
        } else {
          v29070 = "ui-selected";
        }
        var v27095 = JAM.call(v28301.removeClass, v28301, [v29070], JAM.policy.p3);
        var v28303;
        if (e$$224) {
          v28303 = "ui-selecting";
        } else {
          v28303 = "ui-unselecting";
        }
        JAM.call(v27095.addClass, v27095, [v28303], JAM.policy.p3);
        d$$238.unselecting = !e$$224;
        d$$238.selecting = e$$224;
        d$$238.selected = e$$224;
        var v17002;
        if (e$$224) {
          v17002 = JAM.call(c$$309._trigger, c$$309, ["selecting", b$$377, {selecting:d$$238.element}], JAM.policy.p3);
        } else {
          v17002 = JAM.call(c$$309._trigger, c$$309, ["unselecting", b$$377, {unselecting:d$$238.element}], JAM.policy.p3);
        }
        v17002;
        return!1;
      }
      return;
    }
    function v1286() {
      var d$$237 = JAM.call(a$$451.data, a$$451, [this, "selectable-item"], JAM.policy.p3);
      d$$237.startselected = !0;
      var v17003 = !b$$377.metaKey;
      if (v17003) {
        v17003 = !b$$377.ctrlKey;
      }
      var v11406 = v17003;
      if (v11406) {
        var v28304 = d$$237.$element;
        JAM.call(v28304.removeClass, v28304, ["ui-selected"], JAM.policy.p3);
        d$$237.selected = !1;
        var v27097 = d$$237.$element;
        JAM.call(v27097.addClass, v27097, ["ui-unselecting"], JAM.policy.p3);
        d$$237.unselecting = !0;
        JAM.call(c$$309._trigger, c$$309, ["unselecting", b$$377, {unselecting:d$$237.element}], JAM.policy.p3);
      }
      return;
    }
    var c$$309 = this;
    this.opos = [b$$377.pageX, b$$377.pageY];
    if (this.options.disabled) {
      return;
    }
    var d$$236 = this.options;
    var v31083 = JAM.call(a$$451, null, [d$$236.filter, this.element[0]], JAM.policy.p3);
    this.selectees = v31083;
    JAM.call(this._trigger, this, ["start", b$$377], JAM.policy.p3);
    var v27098 = JAM.call(a$$451, null, [d$$236.appendTo], JAM.policy.p3);
    JAM.call(v27098.append, v27098, [this.helper], JAM.policy.p3);
    var v25229 = this.helper;
    JAM.call(v25229.css, v25229, [{left:b$$377.clientX, top:b$$377.clientY, width:0, height:0}], JAM.policy.p3);
    var v21008 = d$$236.autoRefresh;
    if (v21008) {
      JAM.call(this.refresh, this, [], JAM.policy.p3);
    }
    var v21009 = this.selectees;
    var v17004 = JAM.call(v21009.filter, v21009, [".ui-selected"], JAM.policy.p3);
    JAM.call(v17004.each, v17004, [v1286], JAM.policy.p3);
    var v21010 = JAM.call(a$$451, null, [b$$377.target], JAM.policy.p3);
    var v17005 = JAM.call(v21010.parents, v21010, [], JAM.policy.p3);
    var v11408 = JAM.call(v17005.andSelf, v17005, [], JAM.policy.p3);
    JAM.call(v11408.each, v11408, [v1287], JAM.policy.p3);
    return;
  }
  function v1285() {
    var v25232 = this.selectees;
    var v21011 = JAM.call(v25232.removeClass, v25232, ["ui-selectee"], JAM.policy.p3);
    JAM.call(v21011.removeData, v21011, ["selectable-item"], JAM.policy.p3);
    var v27102 = this.element;
    var v25233 = JAM.call(v27102.removeClass, v27102, ["ui-selectable ui-selectable-disabled"], JAM.policy.p3);
    var v21012 = JAM.call(v25233.removeData, v25233, ["selectable"], JAM.policy.p3);
    JAM.call(v21012.unbind, v21012, [".selectable"], JAM.policy.p3);
    JAM.call(this._mouseDestroy, this, [], JAM.policy.p3);
    return this;
  }
  function v1284() {
    function v1283() {
      function v1282() {
        var b$$376 = JAM.call(a$$451, null, [this], JAM.policy.p3);
        var c$$308 = JAM.call(b$$376.offset, b$$376, [], JAM.policy.p3);
        JAM.call(a$$451.data, a$$451, [this, "selectable-item", {element:this, $element:b$$376, left:c$$308.left, top:c$$308.top, right:c$$308.left + JAM.call(b$$376.outerWidth, b$$376, [], JAM.policy.p3), bottom:c$$308.top + JAM.call(b$$376.outerHeight, b$$376, [], JAM.policy.p3), startselected:!1, selected:JAM.call(b$$376.hasClass, b$$376, ["ui-selected"], JAM.policy.p3), selecting:JAM.call(b$$376.hasClass, b$$376, ["ui-selecting"], JAM.policy.p3), unselecting:JAM.call(b$$376.hasClass, b$$376, 
        ["ui-unselecting"], JAM.policy.p3)}], JAM.policy.p3);
        return;
      }
      c$$307 = JAM.call(a$$451, null, [b$$375.options.filter, b$$375.element[0]], JAM.policy.p3);
      JAM.call(c$$307.addClass, c$$307, ["ui-selectee"], JAM.policy.p3);
      JAM.call(c$$307.each, c$$307, [v1282], JAM.policy.p3);
      return;
    }
    var b$$375 = this;
    var v11417 = this.element;
    JAM.call(v11417.addClass, v11417, ["ui-selectable"], JAM.policy.p3);
    this.dragged = !1;
    var c$$307;
    this.refresh = v1283;
    JAM.call(this.refresh, this, [], JAM.policy.p3);
    var v31084 = JAM.call(c$$307.addClass, c$$307, ["ui-selectee"], JAM.policy.p3);
    this.selectees = v31084;
    JAM.call(this._mouseInit, this, [], JAM.policy.p3);
    var v31085 = JAM.call(a$$451, null, ["<div class='ui-selectable-helper'></div>"], JAM.policy.p3);
    this.helper = v31085;
    return;
  }
  JAM.call(a$$451.widget, a$$451, ["ui.selectable", a$$451.ui.mouse, {options:{appendTo:"body", autoRefresh:!0, distance:0, filter:"*", tolerance:"touch"}, _create:v1284, destroy:v1285, _mouseStart:v1288, _mouseDrag:v1290, _mouseStop:v1293}], JAM.policy.p3);
  JAM.call(a$$451.extend, a$$451, [a$$451.ui.selectable, {version:"1.8.24"}], JAM.policy.p3);
  return;
}
function v1281(a$$434, b$$331) {
  function v1280(b$$373, c$$306) {
    var v4576 = JAM.call(a$$434, null, [this], JAM.policy.p3);
    var d$$235 = JAM.call(v4576.data, v4576, ["resizable"], JAM.policy.p3);
    var e$$223 = d$$235.options;
    var f$$93 = d$$235.size;
    var g$$127 = d$$235.originalSize;
    var h$$104 = d$$235.originalPosition;
    var i$$162 = d$$235.axis;
    var v4577 = e$$223._aspectRatio;
    if (!v4577) {
      v4577 = b$$373.shiftKey;
    }
    var j$$75 = v4577;
    var v4578;
    if (typeof e$$223.grid == "number") {
      v4578 = [e$$223.grid, e$$223.grid];
    } else {
      v4578 = e$$223.grid;
    }
    e$$223.grid = v4578;
    var v17016 = f$$93.width - g$$127.width;
    var v21019 = e$$223.grid[0];
    if (!v21019) {
      v21019 = 1;
    }
    var v4579 = JAM.call(Math.round, Math, [v17016 / v21019], JAM.policy.p3);
    var v11427 = e$$223.grid[0];
    if (!v11427) {
      v11427 = 1;
    }
    var k$$52 = v4579 * v11427;
    var v17020 = f$$93.height - g$$127.height;
    var v21022 = e$$223.grid[1];
    if (!v21022) {
      v21022 = 1;
    }
    var v4581 = JAM.call(Math.round, Math, [v17020 / v21022], JAM.policy.p3);
    var v11429 = e$$223.grid[1];
    if (!v11429) {
      v11429 = 1;
    }
    var l$$62 = v4581 * v11429;
    var v4583;
    if (JAM.call(/^(se|s|e)$/.test, /^(se|s|e)$/, [i$$162], JAM.policy.p3)) {
      d$$235.size.width = g$$127.width + k$$52;
      v4583 = d$$235.size.height = g$$127.height + l$$62;
    } else {
      var v11430;
      if (JAM.call(/^(ne)$/.test, /^(ne)$/, [i$$162], JAM.policy.p3)) {
        d$$235.size.width = g$$127.width + k$$52;
        d$$235.size.height = g$$127.height + l$$62;
        v11430 = d$$235.position.top = h$$104.top - l$$62;
      } else {
        var v17026;
        if (JAM.call(/^(sw)$/.test, /^(sw)$/, [i$$162], JAM.policy.p3)) {
          d$$235.size.width = g$$127.width + k$$52;
          d$$235.size.height = g$$127.height + l$$62;
          v17026 = d$$235.position.left = h$$104.left - k$$52;
        } else {
          d$$235.size.width = g$$127.width + k$$52;
          d$$235.size.height = g$$127.height + l$$62;
          d$$235.position.top = h$$104.top - l$$62;
          v17026 = d$$235.position.left = h$$104.left - k$$52;
        }
        v11430 = v17026;
      }
      v4583 = v11430;
    }
    v4583;
    return;
  }
  function v1279(b$$372, c$$305) {
    var v4584 = JAM.call(a$$434, null, [this], JAM.policy.p3);
    var d$$234 = JAM.call(v4584.data, v4584, ["resizable"], JAM.policy.p3);
    var e$$222 = d$$234.options;
    var v11432 = d$$234.ghost;
    if (v11432) {
      v11432 = d$$234.helper;
    }
    var v4585 = v11432;
    if (v4585) {
      var v17028 = d$$234.helper;
      var v11433 = JAM.call(v17028.get, v17028, [0], JAM.policy.p3);
      var v17029 = d$$234.ghost;
      JAM.call(v11433.removeChild, v11433, [JAM.call(v17029.get, v17029, [0], JAM.policy.p3)], JAM.policy.p3);
    }
    return;
  }
  function v1278(b$$371, c$$304) {
    var v4586 = JAM.call(a$$434, null, [this], JAM.policy.p3);
    var d$$233 = JAM.call(v4586.data, v4586, ["resizable"], JAM.policy.p3);
    var e$$221 = d$$233.options;
    var v4587 = d$$233.ghost;
    if (v4587) {
      var v11435 = d$$233.ghost;
      JAM.call(v11435.css, v11435, [{position:"relative", height:d$$233.size.height, width:d$$233.size.width}], JAM.policy.p3);
    }
    return;
  }
  function v1277(b$$370, c$$303) {
    var v4588 = JAM.call(a$$434, null, [this], JAM.policy.p3);
    var d$$232 = JAM.call(v4588.data, v4588, ["resizable"], JAM.policy.p3);
    var e$$220 = d$$232.options;
    var f$$92 = d$$232.size;
    var v17032 = d$$232.originalElement;
    var v31086 = JAM.call(v17032.clone, v17032, [], JAM.policy.p3);
    d$$232.ghost = v31086;
    var v25243 = d$$232.ghost;
    var v21029 = JAM.call(v25243.css, v25243, [{opacity:.25, display:"block", position:"relative", height:f$$92.height, width:f$$92.width, margin:0, left:0, top:0}], JAM.policy.p3);
    var v17033 = JAM.call(v21029.addClass, v21029, ["ui-resizable-ghost"], JAM.policy.p3);
    var v21030;
    if (typeof e$$220.ghost == "string") {
      v21030 = e$$220.ghost;
    } else {
      v21030 = "";
    }
    JAM.call(v17033.addClass, v17033, [v21030], JAM.policy.p3);
    var v11437 = d$$232.ghost;
    JAM.call(v11437.appendTo, v11437, [d$$232.helper], JAM.policy.p3);
    return;
  }
  function v1276(b$$369, c$$302) {
    var v4589 = JAM.call(a$$434, null, [this], JAM.policy.p3);
    var d$$231 = JAM.call(v4589.data, v4589, ["resizable"], JAM.policy.p3);
    var e$$219 = d$$231.options;
    var f$$91 = d$$231.position;
    var g$$126 = d$$231.containerOffset;
    var h$$103 = d$$231.containerPosition;
    var i$$161 = d$$231.containerElement;
    var j$$74 = JAM.call(a$$434, null, [d$$231.helper], JAM.policy.p3);
    var k$$51 = JAM.call(j$$74.offset, j$$74, [], JAM.policy.p3);
    var l$$61 = JAM.call(j$$74.outerWidth, j$$74, [], JAM.policy.p3) - d$$231.sizeDiff.width;
    var m$$34 = JAM.call(j$$74.outerHeight, j$$74, [], JAM.policy.p3) - d$$231.sizeDiff.height;
    var v21031 = d$$231._helper;
    if (v21031) {
      v21031 = !e$$219.animate;
    }
    var v17035 = v21031;
    if (v17035) {
      v17035 = JAM.call(/relative/.test, /relative/, [JAM.call(i$$161.css, i$$161, ["position"], JAM.policy.p3)], JAM.policy.p3);
    }
    var v11441 = v17035;
    if (v11441) {
      var v17036 = JAM.call(a$$434, null, [this], JAM.policy.p3);
      JAM.call(v17036.css, v17036, [{left:k$$51.left - h$$103.left - g$$126.left, width:l$$61, height:m$$34}], JAM.policy.p3);
    }
    var v21034 = d$$231._helper;
    if (v21034) {
      v21034 = !e$$219.animate;
    }
    var v17038 = v21034;
    if (v17038) {
      v17038 = JAM.call(/static/.test, /static/, [JAM.call(i$$161.css, i$$161, ["position"], JAM.policy.p3)], JAM.policy.p3);
    }
    var v11442 = v17038;
    if (v11442) {
      var v17039 = JAM.call(a$$434, null, [this], JAM.policy.p3);
      JAM.call(v17039.css, v17039, [{left:k$$51.left - h$$103.left - g$$126.left, width:l$$61, height:m$$34}], JAM.policy.p3);
    }
    return;
  }
  function v1275(b$$368, c$$301) {
    var v4595 = JAM.call(a$$434, null, [this], JAM.policy.p3);
    var d$$230 = JAM.call(v4595.data, v4595, ["resizable"], JAM.policy.p3);
    var e$$218 = d$$230.options;
    var f$$90 = d$$230.containerSize;
    var g$$125 = d$$230.containerOffset;
    var h$$102 = d$$230.size;
    var i$$160 = d$$230.position;
    var v4596 = d$$230._aspectRatio;
    if (!v4596) {
      v4596 = b$$368.shiftKey;
    }
    var j$$73 = v4596;
    var k$$50 = {top:0, left:0};
    var l$$60 = d$$230.containerElement;
    var v27117 = l$$60[0] != document;
    if (v27117) {
      v27117 = JAM.call(/static/.test, /static/, [JAM.call(l$$60.css, l$$60, ["position"], JAM.policy.p3)], JAM.policy.p3);
    }
    var v25252 = v27117;
    if (v25252) {
      k$$50 = g$$125;
    }
    var v27118 = i$$160.left;
    var v28316;
    if (d$$230._helper) {
      v28316 = g$$125.left;
    } else {
      v28316 = 0;
    }
    var v25253 = v27118 < v28316;
    if (v25253) {
      var v29075 = d$$230.size;
      var v29569 = d$$230.size.width;
      var v29887;
      if (d$$230._helper) {
        v29887 = d$$230.position.left - g$$125.left;
      } else {
        v29887 = d$$230.position.left - k$$50.left;
      }
      v29075.width = v29569 + v29887;
      if (j$$73) {
        d$$230.size.height = d$$230.size.width / d$$230.aspectRatio;
      }
      var v28317 = d$$230.position;
      var v29076;
      if (e$$218.helper) {
        v29076 = g$$125.left;
      } else {
        v29076 = 0;
      }
      v28317.left = v29076;
    }
    var v25254 = i$$160.top;
    var v27120;
    if (d$$230._helper) {
      v27120 = g$$125.top;
    } else {
      v27120 = 0;
    }
    var v21037 = v25254 < v27120;
    if (v21037) {
      var v28319 = d$$230.size;
      var v29077 = d$$230.size.height;
      var v29574;
      if (d$$230._helper) {
        v29574 = d$$230.position.top - g$$125.top;
      } else {
        v29574 = d$$230.position.top;
      }
      v28319.height = v29077 + v29574;
      if (j$$73) {
        d$$230.size.width = d$$230.size.height * d$$230.aspectRatio;
      }
      var v27121 = d$$230.position;
      var v28320;
      if (d$$230._helper) {
        v28320 = g$$125.top;
      } else {
        v28320 = 0;
      }
      v27121.top = v28320;
    }
    d$$230.offset.left = d$$230.parentData.left + d$$230.position.left;
    d$$230.offset.top = d$$230.parentData.top + d$$230.position.top;
    var v17044;
    if (d$$230._helper) {
      v17044 = d$$230.offset.left - k$$50.left;
    } else {
      v17044 = d$$230.offset.left - k$$50.left;
    }
    var m$$33 = JAM.call(Math.abs, Math, [v17044 + d$$230.sizeDiff.width], JAM.policy.p3);
    var v17046;
    if (d$$230._helper) {
      v17046 = d$$230.offset.top - k$$50.top;
    } else {
      v17046 = d$$230.offset.top - g$$125.top;
    }
    var n$$84 = JAM.call(Math.abs, Math, [v17046 + d$$230.sizeDiff.height], JAM.policy.p3);
    var v11449 = d$$230.containerElement;
    var v4599 = JAM.call(v11449.get, v11449, [0], JAM.policy.p3);
    var v17048 = d$$230.element;
    var v11450 = JAM.call(v17048.parent, v17048, [], JAM.policy.p3);
    var o$$20 = v4599 == JAM.call(v11450.get, v11450, [0], JAM.policy.p3);
    var v11451 = d$$230.containerElement;
    var p$$41 = JAM.call(/relative|absolute/.test, /relative|absolute/, [JAM.call(v11451.css, v11451, ["position"], JAM.policy.p3)], JAM.policy.p3);
    var v17049 = o$$20 && p$$41;
    if (v17049) {
      m$$33 = m$$33 - d$$230.parentData.left;
    }
    var v17050 = m$$33 + d$$230.size.width >= d$$230.parentData.width;
    if (v17050) {
      d$$230.size.width = d$$230.parentData.width - m$$33;
      if (j$$73) {
        d$$230.size.height = d$$230.size.width / d$$230.aspectRatio;
      }
    }
    var v11452 = n$$84 + d$$230.size.height >= d$$230.parentData.height;
    if (v11452) {
      d$$230.size.height = d$$230.parentData.height - n$$84;
      if (j$$73) {
        d$$230.size.width = d$$230.size.height * d$$230.aspectRatio;
      }
    }
    return;
  }
  function v1274(b$$366, d$$229) {
    function v1273(a$$448, b$$367) {
      var v4602 = k$$49;
      var v31087 = c$$273(JAM.call(j$$72.css, j$$72, ["padding" + b$$367], JAM.policy.p3));
      JAM.set(v4602, a$$448, v31087, JAM.policy.p2);
      return;
    }
    var v4603 = JAM.call(a$$434, null, [this], JAM.policy.p3);
    var e$$217 = JAM.call(v4603.data, v4603, ["resizable"], JAM.policy.p3);
    var f$$89 = e$$217.options;
    var g$$124 = e$$217.element;
    var h$$101 = f$$89.containment;
    var v4604;
    if (h$$101 instanceof a$$434) {
      v4604 = JAM.call(h$$101.get, h$$101, [0], JAM.policy.p3);
    } else {
      var v11454;
      if (JAM.call(/parent/.test, /parent/, [h$$101], JAM.policy.p3)) {
        var v17054 = JAM.call(g$$124.parent, g$$124, [], JAM.policy.p3);
        v11454 = JAM.call(v17054.get, v17054, [0], JAM.policy.p3);
      } else {
        v11454 = h$$101;
      }
      v4604 = v11454;
    }
    var i$$159 = v4604;
    if (!i$$159) {
      return;
    }
    var v4606 = e$$217;
    var v31088 = JAM.call(a$$434, null, [i$$159], JAM.policy.p3);
    v4606.containerElement = v31088;
    var v11456 = JAM.call(/document/.test, /document/, [h$$101], JAM.policy.p3);
    if (!v11456) {
      v11456 = h$$101 == document;
    }
    if (v11456) {
      e$$217.containerOffset = {left:0, top:0};
      e$$217.containerPosition = {left:0, top:0};
      var v11457 = e$$217;
      var v17057 = JAM.call(a$$434, null, [document], JAM.policy.p3);
      var v21057 = JAM.call(a$$434, null, [document], JAM.policy.p3);
      var v17058 = JAM.call(v21057.width, v21057, [], JAM.policy.p3);
      var v25269 = JAM.call(a$$434, null, [document], JAM.policy.p3);
      var v21058 = JAM.call(v25269.height, v25269, [], JAM.policy.p3);
      if (!v21058) {
        v21058 = document.body.parentNode.scrollHeight;
      }
      v11457.parentData = {element:v17057, left:0, top:0, width:v17058, height:v21058};
    } else {
      var j$$72 = JAM.call(a$$434, null, [i$$159], JAM.policy.p3);
      var k$$49 = [];
      var v21059 = JAM.call(a$$434, null, [["Top", "Right", "Left", "Bottom"]], JAM.policy.p3);
      JAM.call(v21059.each, v21059, [v1273], JAM.policy.p3);
      var v21060 = e$$217;
      var v31089 = JAM.call(j$$72.offset, j$$72, [], JAM.policy.p3);
      v21060.containerOffset = v31089;
      var v17060 = e$$217;
      var v31090 = JAM.call(j$$72.position, j$$72, [], JAM.policy.p3);
      v17060.containerPosition = v31090;
      e$$217.containerSize = {height:JAM.call(j$$72.innerHeight, j$$72, [], JAM.policy.p3) - k$$49[3], width:JAM.call(j$$72.innerWidth, j$$72, [], JAM.policy.p3) - k$$49[1]};
      var l$$59 = e$$217.containerOffset;
      var m$$32 = e$$217.containerSize.height;
      var n$$83 = e$$217.containerSize.width;
      var v4609;
      var v17063 = a$$434.ui;
      if (JAM.call(v17063.hasScroll, v17063, [i$$159, "left"], JAM.policy.p3)) {
        v4609 = i$$159.scrollWidth;
      } else {
        v4609 = n$$83;
      }
      var o$$19 = v4609;
      var v4610;
      var v17064 = a$$434.ui;
      if (JAM.call(v17064.hasScroll, v17064, [i$$159], JAM.policy.p3)) {
        v4610 = i$$159.scrollHeight;
      } else {
        v4610 = m$$32;
      }
      var p$$40 = v4610;
      e$$217.parentData = {element:i$$159, left:l$$59.left, top:l$$59.top, width:o$$19, height:p$$40};
    }
    return;
  }
  function v1272(b$$365, c$$299) {
    function v1271() {
      var v17065 = d$$228.element;
      var v4614 = parseInt(JAM.call(v17065.css, v17065, ["width"], JAM.policy.p3), 10);
      var v17066 = d$$228.element;
      var v4615 = parseInt(JAM.call(v17066.css, v17066, ["height"], JAM.policy.p3), 10);
      var v17067 = d$$228.element;
      var v4616 = parseInt(JAM.call(v17067.css, v17067, ["top"], JAM.policy.p3), 10);
      var v17068 = d$$228.element;
      var c$$300 = {width:v4614, height:v4615, top:v4616, left:parseInt(JAM.call(v17068.css, v17068, ["left"], JAM.policy.p3), 10)};
      var v21065 = f$$88;
      if (v21065) {
        v21065 = f$$88.length;
      }
      var v17069 = v21065;
      if (v17069) {
        var v21066 = JAM.call(a$$434, null, [f$$88[0]], JAM.policy.p3);
        JAM.call(v21066.css, v21066, [{width:c$$300.width, height:c$$300.height}], JAM.policy.p3);
      }
      JAM.call(d$$228._updateCache, d$$228, [c$$300], JAM.policy.p3);
      JAM.call(d$$228._propagate, d$$228, ["resize", b$$365], JAM.policy.p3);
      return;
    }
    var v4618 = JAM.call(a$$434, null, [this], JAM.policy.p3);
    var d$$228 = JAM.call(v4618.data, v4618, ["resizable"], JAM.policy.p3);
    var e$$216 = d$$228.options;
    var f$$88 = d$$228._proportionallyResizeElements;
    var v4619 = f$$88.length;
    if (v4619) {
      v4619 = JAM.call(/textarea/i.test, /textarea/i, [f$$88[0].nodeName], JAM.policy.p3);
    }
    var g$$123 = v4619;
    var v4620;
    var v17071 = g$$123;
    if (v17071) {
      var v21068 = a$$434.ui;
      v17071 = JAM.call(v21068.hasScroll, v21068, [f$$88[0], "left"], JAM.policy.p3);
    }
    if (v17071) {
      v4620 = 0;
    } else {
      v4620 = d$$228.sizeDiff.height;
    }
    var h$$100 = v4620;
    var v4621;
    if (g$$123) {
      v4621 = 0;
    } else {
      v4621 = d$$228.sizeDiff.width;
    }
    var i$$158 = v4621;
    var j$$71 = {width:d$$228.size.width - i$$158, height:d$$228.size.height - h$$100};
    var v21070 = d$$228.element;
    var v4624 = parseInt(JAM.call(v21070.css, v21070, ["left"], JAM.policy.p3), 10) + (d$$228.position.left - d$$228.originalPosition.left);
    if (!v4624) {
      v4624 = null;
    }
    var k$$48 = v4624;
    var v21073 = d$$228.element;
    var v4625 = parseInt(JAM.call(v21073.css, v21073, ["top"], JAM.policy.p3), 10) + (d$$228.position.top - d$$228.originalPosition.top);
    if (!v4625) {
      v4625 = null;
    }
    var l$$58 = v4625;
    var v4626 = d$$228.element;
    var v17080;
    if (l$$58 && k$$48) {
      v17080 = {top:l$$58, left:k$$48};
    } else {
      v17080 = {};
    }
    JAM.call(v4626.animate, v4626, [JAM.call(a$$434.extend, a$$434, [j$$71, v17080], JAM.policy.p3), {duration:e$$216.animateDuration, easing:e$$216.animateEasing, step:v1271}], JAM.policy.p3);
    return;
  }
  function v1270(b$$364, c$$298) {
    var v4629 = JAM.call(a$$434, null, [this], JAM.policy.p3);
    JAM.call(v4629.removeData, v4629, ["resizable-alsoresize"], JAM.policy.p3);
    return;
  }
  function v1269(b$$359, c$$296) {
    function v1268(a$$447, b$$363) {
      i$$157(a$$447, b$$363);
      return;
    }
    function i$$157(b$$360, d$$227) {
      function v1267() {
        function v1266(a$$446, b$$362) {
          var v11480 = e$$215[b$$362];
          if (!v11480) {
            v11480 = 0;
          }
          var v4630 = v11480;
          var v11481 = h$$99[b$$362];
          if (!v11481) {
            v11481 = 0;
          }
          var c$$297 = v4630 + v11481;
          var v11482 = c$$297;
          if (v11482) {
            v11482 = c$$297 >= 0;
          }
          var v4632 = v11482;
          if (v4632) {
            JAM.set(f$$87, b$$362, c$$297 || null, JAM.policy.p2);
          }
          return;
        }
        var b$$361 = JAM.call(a$$434, null, [this], JAM.policy.p3);
        var v4633 = JAM.call(a$$434, null, [this], JAM.policy.p3);
        var e$$215 = JAM.call(v4633.data, v4633, ["resizable-alsoresize"], JAM.policy.p3);
        var f$$87 = {};
        var v4634;
        var v17083 = d$$227;
        if (v17083) {
          v17083 = d$$227.length;
        }
        if (v17083) {
          v4634 = d$$227;
        } else {
          var v11483;
          if (JAM.call(b$$361.parents, b$$361, [c$$296.originalElement[0]], JAM.policy.p3).length) {
            v11483 = ["width", "height"];
          } else {
            v11483 = ["width", "height", "top", "left"];
          }
          v4634 = v11483;
        }
        var g$$122 = v4634;
        JAM.call(a$$434.each, a$$434, [g$$122, v1266], JAM.policy.p3);
        JAM.call(b$$361.css, b$$361, [f$$87], JAM.policy.p3);
        return;
      }
      var v4635 = JAM.call(a$$434, null, [b$$360], JAM.policy.p3);
      JAM.call(v4635.each, v4635, [v1267], JAM.policy.p3);
      return;
    }
    var v4636 = JAM.call(a$$434, null, [this], JAM.policy.p3);
    var d$$226 = JAM.call(v4636.data, v4636, ["resizable"], JAM.policy.p3);
    var e$$214 = d$$226.options;
    var f$$86 = d$$226.originalSize;
    var g$$121 = d$$226.originalPosition;
    var v11485 = d$$226.size.height - f$$86.height;
    if (!v11485) {
      v11485 = 0;
    }
    var v4637 = v11485;
    var v11486 = d$$226.size.width - f$$86.width;
    if (!v11486) {
      v11486 = 0;
    }
    var v4638 = v11486;
    var v11487 = d$$226.position.top - g$$121.top;
    if (!v11487) {
      v11487 = 0;
    }
    var v4639 = v11487;
    var v11488 = d$$226.position.left - g$$121.left;
    if (!v11488) {
      v11488 = 0;
    }
    var h$$99 = {height:v4637, width:v4638, top:v4639, left:v11488};
    var v4641;
    var v17097 = typeof e$$214.alsoResize == "object";
    if (v17097) {
      v17097 = !e$$214.alsoResize.nodeType;
    }
    if (v17097) {
      v4641 = JAM.call(a$$434.each, a$$434, [e$$214.alsoResize, v1268], JAM.policy.p3);
    } else {
      v4641 = i$$157(e$$214.alsoResize);
    }
    v4641;
    return;
  }
  function v1265(b$$356, c$$295) {
    function v1264(a$$445) {
      f$$85(a$$445);
      return;
    }
    function f$$85(b$$357) {
      function v1263() {
        var b$$358 = JAM.call(a$$434, null, [this], JAM.policy.p3);
        JAM.call(b$$358.data, b$$358, ["resizable-alsoresize", {width:parseInt(JAM.call(b$$358.width, b$$358, [], JAM.policy.p3), 10), height:parseInt(JAM.call(b$$358.height, b$$358, [], JAM.policy.p3), 10), left:parseInt(JAM.call(b$$358.css, b$$358, ["left"], JAM.policy.p3), 10), top:parseInt(JAM.call(b$$358.css, b$$358, ["top"], JAM.policy.p3), 10)}], JAM.policy.p3);
        return;
      }
      var v4643 = JAM.call(a$$434, null, [b$$357], JAM.policy.p3);
      JAM.call(v4643.each, v4643, [v1263], JAM.policy.p3);
      return;
    }
    var v4644 = JAM.call(a$$434, null, [this], JAM.policy.p3);
    var d$$225 = JAM.call(v4644.data, v4644, ["resizable"], JAM.policy.p3);
    var e$$213 = d$$225.options;
    var v4645;
    var v17102 = typeof e$$213.alsoResize == "object";
    if (v17102) {
      v17102 = !e$$213.alsoResize.parentNode;
    }
    if (v17102) {
      var v11496;
      if (e$$213.alsoResize.length) {
        e$$213.alsoResize = e$$213.alsoResize[0];
        v11496 = f$$85(e$$213.alsoResize);
      } else {
        v11496 = JAM.call(a$$434.each, a$$434, [e$$213.alsoResize, v1264], JAM.policy.p3);
      }
      v4645 = v11496;
    } else {
      v4645 = f$$85(e$$213.alsoResize);
    }
    v4645;
    return;
  }
  function v1262() {
    return{originalElement:this.originalElement, element:this.element, helper:this.helper, position:this.position, size:this.size, originalSize:this.originalSize, originalPosition:this.originalPosition};
  }
  function v1261(b$$355, c$$294) {
    var v11499 = a$$434.ui.plugin;
    JAM.call(v11499.call, v11499, [this, b$$355, [c$$294, JAM.call(this.ui, this, [], JAM.policy.p3)]], JAM.policy.p3);
    var v11501 = b$$355 != "resize";
    if (v11501) {
      JAM.call(this._trigger, this, [b$$355, c$$294, JAM.call(this.ui, this, [], JAM.policy.p3)], JAM.policy.p3);
    }
    return;
  }
  function v1260(b$$354, c$$293, d$$224) {
    var v11502 = this._change.n;
    var v4653 = JAM.call(v11502.apply, v11502, [this, arguments], JAM.policy.p3);
    var v11503 = this._change.w;
    return JAM.call(a$$434.extend, a$$434, [v4653, JAM.call(v11503.apply, v11503, [this, [b$$354, c$$293, d$$224]], JAM.policy.p3)], JAM.policy.p3);
  }
  function v1259(b$$353, c$$292, d$$223) {
    var v11505 = this._change.n;
    var v4655 = JAM.call(v11505.apply, v11505, [this, arguments], JAM.policy.p3);
    var v11506 = this._change.e;
    return JAM.call(a$$434.extend, a$$434, [v4655, JAM.call(v11506.apply, v11506, [this, [b$$353, c$$292, d$$223]], JAM.policy.p3)], JAM.policy.p3);
  }
  function v1258(b$$352, c$$291, d$$222) {
    var v11508 = this._change.s;
    var v4657 = JAM.call(v11508.apply, v11508, [this, arguments], JAM.policy.p3);
    var v11509 = this._change.w;
    return JAM.call(a$$434.extend, a$$434, [v4657, JAM.call(v11509.apply, v11509, [this, [b$$352, c$$291, d$$222]], JAM.policy.p3)], JAM.policy.p3);
  }
  function v1257(b$$351, c$$290, d$$221) {
    var v11511 = this._change.s;
    var v4659 = JAM.call(v11511.apply, v11511, [this, arguments], JAM.policy.p3);
    var v11512 = this._change.e;
    return JAM.call(a$$434.extend, a$$434, [v4659, JAM.call(v11512.apply, v11512, [this, [b$$351, c$$290, d$$221]], JAM.policy.p3)], JAM.policy.p3);
  }
  function v1256(a$$444, b$$350, c$$289) {
    return{height:this.originalSize.height + c$$289};
  }
  function v1255(a$$443, b$$349, c$$288) {
    var d$$220 = this.options;
    var e$$212 = this.originalSize;
    var f$$84 = this.originalPosition;
    return{top:f$$84.top + c$$288, height:e$$212.height - c$$288};
  }
  function v1254(a$$442, b$$348, c$$287) {
    var d$$219 = this.options;
    var e$$211 = this.originalSize;
    var f$$83 = this.originalPosition;
    return{left:f$$83.left + b$$348, width:e$$211.width - b$$348};
  }
  function v1253(a$$441, b$$347, c$$286) {
    return{width:this.originalSize.width + b$$347};
  }
  function v1252() {
    var b$$346 = this.element;
    var c$$285 = this.options;
    var v31091 = JAM.call(b$$346.offset, b$$346, [], JAM.policy.p3);
    this.elementOffset = v31091;
    if (this._helper) {
      var v4667 = this.helper;
      if (!v4667) {
        v4667 = JAM.call(a$$434, null, ['<div style="overflow:hidden;"></div>'], JAM.policy.p3);
      }
      this.helper = v4667;
      var v4668 = a$$434.browser.msie;
      if (v4668) {
        v4668 = a$$434.browser.version < 7;
      }
      var d$$218 = v4668;
      var v4669;
      if (d$$218) {
        v4669 = 1;
      } else {
        v4669 = 0;
      }
      var e$$210 = v4669;
      var v4670;
      if (d$$218) {
        v4670 = 2;
      } else {
        v4670 = -1;
      }
      var f$$82 = v4670;
      var v17119 = this.helper;
      var v11523 = JAM.call(v17119.addClass, v17119, [this._helper], JAM.policy.p3);
      var v25281 = this.element;
      var v17121 = JAM.call(v25281.outerWidth, v25281, [], JAM.policy.p3) + f$$82;
      var v25282 = this.element;
      JAM.call(v11523.css, v11523, [{width:v17121, height:JAM.call(v25282.outerHeight, v25282, [], JAM.policy.p3) + f$$82, position:"absolute", left:this.elementOffset.left - e$$210 + "px", top:this.elementOffset.top - e$$210 + "px", zIndex:c$$285.zIndex = c$$285.zIndex + 1}], JAM.policy.p3);
      var v17126 = this.helper;
      var v11525 = JAM.call(v17126.appendTo, v17126, ["body"], JAM.policy.p3);
      JAM.call(v11525.disableSelection, v11525, [], JAM.policy.p3);
    } else {
      this.helper = this.element;
    }
    return;
  }
  function v1251() {
    function v1250(a$$440, b$$345) {
      var v4672 = parseInt(a$$440, 10);
      if (!v4672) {
        v4672 = 0;
      }
      var c$$284 = v4672;
      var v4673 = parseInt(g$$120[b$$345], 10);
      if (!v4673) {
        v4673 = 0;
      }
      var d$$217 = v4673;
      return c$$284 + d$$217;
    }
    var b$$344 = this.options;
    if (!this._proportionallyResizeElements.length) {
      return;
    }
    var v4675 = this.helper;
    if (!v4675) {
      v4675 = this.element;
    }
    var c$$283 = v4675;
    var d$$216 = 0;
    var v4688 = d$$216 < this._proportionallyResizeElements.length;
    for (;v4688;) {
      var e$$209 = this._proportionallyResizeElements[d$$216];
      if (!this.borderDif) {
        var f$$81 = [JAM.call(e$$209.css, e$$209, ["borderTopWidth"], JAM.policy.p3), JAM.call(e$$209.css, e$$209, ["borderRightWidth"], JAM.policy.p3), JAM.call(e$$209.css, e$$209, ["borderBottomWidth"], JAM.policy.p3), JAM.call(e$$209.css, e$$209, ["borderLeftWidth"], JAM.policy.p3)];
        var g$$120 = [JAM.call(e$$209.css, e$$209, ["paddingTop"], JAM.policy.p3), JAM.call(e$$209.css, e$$209, ["paddingRight"], JAM.policy.p3), JAM.call(e$$209.css, e$$209, ["paddingBottom"], JAM.policy.p3), JAM.call(e$$209.css, e$$209, ["paddingLeft"], JAM.policy.p3)];
        var v31092 = JAM.call(a$$434.map, a$$434, [f$$81, v1250], JAM.policy.p3);
        this.borderDif = v31092;
      }
      var v11533 = !a$$434.browser.msie;
      if (!v11533) {
        var v25286 = JAM.call(a$$434, null, [c$$283], JAM.policy.p3);
        var v17130 = !JAM.call(v25286.is, v25286, [":hidden"], JAM.policy.p3);
        if (v17130) {
          var v27133 = JAM.call(a$$434, null, [c$$283], JAM.policy.p3);
          v17130 = !JAM.call(v27133.parents, v27133, [":hidden"], JAM.policy.p3).length;
        }
        v11533 = v17130;
      }
      if (v11533) {
        var v17132 = JAM.call(c$$283.height, c$$283, [], JAM.policy.p3) - this.borderDif[0] - this.borderDif[2];
        if (!v17132) {
          v17132 = 0;
        }
        var v11534 = v17132;
        var v17133 = JAM.call(c$$283.width, c$$283, [], JAM.policy.p3) - this.borderDif[1] - this.borderDif[3];
        if (!v17133) {
          v17133 = 0;
        }
        JAM.call(e$$209.css, e$$209, [{height:v11534, width:v17133}], JAM.policy.p3);
      } else {
      }
      d$$216++;
      v4688 = d$$216 < this._proportionallyResizeElements.length;
    }
    return;
  }
  function v1249(a$$439, b$$343) {
    var c$$282 = this.helper;
    var e$$208 = this._vBoundaries;
    var v4689 = this._aspectRatio;
    if (!v4689) {
      v4689 = b$$343.shiftKey;
    }
    var f$$80 = v4689;
    var g$$119 = this.axis;
    var v11538 = d$$209(a$$439.width);
    if (v11538) {
      v11538 = e$$208.maxWidth;
    }
    var v4690 = v11538;
    if (v4690) {
      v4690 = e$$208.maxWidth < a$$439.width;
    }
    var h$$98 = v4690;
    var v11541 = d$$209(a$$439.height);
    if (v11541) {
      v11541 = e$$208.maxHeight;
    }
    var v4691 = v11541;
    if (v4691) {
      v4691 = e$$208.maxHeight < a$$439.height;
    }
    var i$$156 = v4691;
    var v11544 = d$$209(a$$439.width);
    if (v11544) {
      v11544 = e$$208.minWidth;
    }
    var v4692 = v11544;
    if (v4692) {
      v4692 = e$$208.minWidth > a$$439.width;
    }
    var j$$70 = v4692;
    var v11547 = d$$209(a$$439.height);
    if (v11547) {
      v11547 = e$$208.minHeight;
    }
    var v4693 = v11547;
    if (v4693) {
      v4693 = e$$208.minHeight > a$$439.height;
    }
    var k$$47 = v4693;
    if (j$$70) {
      a$$439.width = e$$208.minWidth;
    }
    if (k$$47) {
      a$$439.height = e$$208.minHeight;
    }
    if (h$$98) {
      a$$439.width = e$$208.maxWidth;
    }
    if (i$$156) {
      a$$439.height = e$$208.maxHeight;
    }
    var l$$57 = this.originalPosition.left + this.originalSize.width;
    var m$$31 = this.position.top + this.size.height;
    var n$$82 = JAM.call(/sw|nw|w/.test, /sw|nw|w/, [g$$119], JAM.policy.p3);
    var o$$18 = JAM.call(/nw|ne|n/.test, /nw|ne|n/, [g$$119], JAM.policy.p3);
    var v21102 = j$$70 && n$$82;
    if (v21102) {
      a$$439.left = l$$57 - e$$208.minWidth;
    }
    var v21103 = h$$98 && n$$82;
    if (v21103) {
      a$$439.left = l$$57 - e$$208.maxWidth;
    }
    var v17139 = k$$47 && o$$18;
    if (v17139) {
      a$$439.top = m$$31 - e$$208.minHeight;
    }
    var v11554 = i$$156 && o$$18;
    if (v11554) {
      a$$439.top = m$$31 - e$$208.maxHeight;
    }
    var v4698 = !a$$439.width;
    if (v4698) {
      v4698 = !a$$439.height;
    }
    var p$$39 = v4698;
    var v11557;
    var v25296 = p$$39;
    if (v25296) {
      v25296 = !a$$439.left;
    }
    var v21105 = v25296;
    if (v21105) {
      v21105 = a$$439.top;
    }
    if (v21105) {
      v11557 = a$$439.top = null;
    } else {
      var v25297 = p$$39;
      if (v25297) {
        v25297 = !a$$439.top;
      }
      var v21106 = v25297;
      if (v21106) {
        v21106 = a$$439.left;
      }
      var v17141 = v21106;
      if (v17141) {
        v17141 = a$$439.left = null;
      }
      v11557 = v17141;
    }
    v11557;
    return a$$439;
  }
  function v1248(a$$438, b$$342) {
    var c$$281 = this.options;
    var e$$207 = this.position;
    var f$$79 = this.size;
    var g$$118 = this.axis;
    var v21107;
    if (d$$209(a$$438.height)) {
      v21107 = a$$438.width = a$$438.height * this.aspectRatio;
    } else {
      var v25300 = d$$209(a$$438.width);
      if (v25300) {
        v25300 = a$$438.height = a$$438.width / this.aspectRatio;
      }
      v21107 = v25300;
    }
    v21107;
    var v21108 = g$$118 == "sw";
    if (v21108) {
      a$$438.left = e$$207.left + (f$$79.width - a$$438.width);
      a$$438.top = null;
    }
    var v17143 = g$$118 == "nw";
    if (v17143) {
      a$$438.top = e$$207.top + (f$$79.height - a$$438.height);
      a$$438.left = e$$207.left + (f$$79.width - a$$438.width);
    }
    return a$$438;
  }
  function v1247(a$$437) {
    var b$$341 = this.options;
    var v25306 = this.helper;
    var v31093 = JAM.call(v25306.offset, v25306, [], JAM.policy.p3);
    this.offset = v31093;
    var v25307 = d$$209(a$$437.left);
    if (v25307) {
      this.position.left = a$$437.left;
    }
    var v21109 = d$$209(a$$437.top);
    if (v21109) {
      this.position.top = a$$437.top;
    }
    var v17144 = d$$209(a$$437.height);
    if (v17144) {
      this.size.height = a$$437.height;
    }
    var v11558 = d$$209(a$$437.width);
    if (v11558) {
      this.size.width = a$$437.width;
    }
    return;
  }
  function v1246(a$$436) {
    var b$$340 = this.options;
    var c$$280;
    var e$$206;
    var f$$78;
    var g$$117;
    var h$$97;
    var v11559;
    if (d$$209(b$$340.minWidth)) {
      v11559 = b$$340.minWidth;
    } else {
      v11559 = 0;
    }
    var v4699 = v11559;
    var v11560;
    if (d$$209(b$$340.maxWidth)) {
      v11560 = b$$340.maxWidth;
    } else {
      v11560 = Infinity;
    }
    var v4700 = v11560;
    var v11561;
    if (d$$209(b$$340.minHeight)) {
      v11561 = b$$340.minHeight;
    } else {
      v11561 = 0;
    }
    var v4701 = v11561;
    var v11562;
    if (d$$209(b$$340.maxHeight)) {
      v11562 = b$$340.maxHeight;
    } else {
      v11562 = Infinity;
    }
    h$$97 = {minWidth:v4699, maxWidth:v4700, minHeight:v4701, maxHeight:v11562};
    var v11563 = this._aspectRatio;
    if (!v11563) {
      v11563 = a$$436;
    }
    if (v11563) {
      c$$280 = h$$97.minHeight * this.aspectRatio;
      f$$78 = h$$97.minWidth / this.aspectRatio;
      e$$206 = h$$97.maxHeight * this.aspectRatio;
      g$$117 = h$$97.maxWidth / this.aspectRatio;
      var v25310 = c$$280 > h$$97.minWidth;
      if (v25310) {
        h$$97.minWidth = c$$280;
      }
      var v21116 = f$$78 > h$$97.minHeight;
      if (v21116) {
        h$$97.minHeight = f$$78;
      }
      var v17152 = e$$206 < h$$97.maxWidth;
      if (v17152) {
        h$$97.maxWidth = e$$206;
      }
      var v11564 = g$$117 < h$$97.maxHeight;
      if (v11564) {
        h$$97.maxHeight = g$$117;
      }
    }
    this._vBoundaries = h$$97;
    return;
  }
  function v1245(b$$339) {
    this.resizing = !1;
    var c$$279 = this.options;
    var d$$215 = this;
    if (this._helper) {
      var e$$205 = this._proportionallyResizeElements;
      var v4704 = e$$205.length;
      if (v4704) {
        v4704 = JAM.call(/textarea/i.test, /textarea/i, [e$$205[0].nodeName], JAM.policy.p3);
      }
      var f$$77 = v4704;
      var v4705;
      var v17155 = f$$77;
      if (v17155) {
        var v21118 = a$$434.ui;
        v17155 = JAM.call(v21118.hasScroll, v21118, [e$$205[0], "left"], JAM.policy.p3);
      }
      if (v17155) {
        v4705 = 0;
      } else {
        v4705 = d$$215.sizeDiff.height;
      }
      var g$$116 = v4705;
      var v4706;
      if (f$$77) {
        v4706 = 0;
      } else {
        v4706 = d$$215.sizeDiff.width;
      }
      var h$$96 = v4706;
      var v17156 = d$$215.helper;
      var v4707 = JAM.call(v17156.width, v17156, [], JAM.policy.p3) - h$$96;
      var v17157 = d$$215.helper;
      var i$$155 = {width:v4707, height:JAM.call(v17157.height, v17157, [], JAM.policy.p3) - g$$116};
      var v21120 = d$$215.element;
      var v4709 = parseInt(JAM.call(v21120.css, v21120, ["left"], JAM.policy.p3), 10) + (d$$215.position.left - d$$215.originalPosition.left);
      if (!v4709) {
        v4709 = null;
      }
      var j$$69 = v4709;
      var v21123 = d$$215.element;
      var v4710 = parseInt(JAM.call(v21123.css, v21123, ["top"], JAM.policy.p3), 10) + (d$$215.position.top - d$$215.originalPosition.top);
      if (!v4710) {
        v4710 = null;
      }
      var k$$46 = v4710;
      var v21126 = c$$279.animate;
      if (!v21126) {
        var v25312 = this.element;
        JAM.call(v25312.css, v25312, [JAM.call(a$$434.extend, a$$434, [i$$155, {top:k$$46, left:j$$69}], JAM.policy.p3)], JAM.policy.p3);
      }
      var v21127 = d$$215.helper;
      JAM.call(v21127.height, v21127, [d$$215.size.height], JAM.policy.p3);
      var v17164 = d$$215.helper;
      JAM.call(v17164.width, v17164, [d$$215.size.width], JAM.policy.p3);
      var v17166 = this._helper;
      if (v17166) {
        v17166 = !c$$279.animate;
      }
      var v11577 = v17166;
      if (v11577) {
        JAM.call(this._proportionallyResize, this, [], JAM.policy.p3);
      }
    }
    var v25316 = JAM.call(a$$434, null, ["body"], JAM.policy.p3);
    JAM.call(v25316.css, v25316, ["cursor", "auto"], JAM.policy.p3);
    var v25317 = this.element;
    JAM.call(v25317.removeClass, v25317, ["ui-resizable-resizing"], JAM.policy.p3);
    JAM.call(this._propagate, this, ["stop", b$$339], JAM.policy.p3);
    var v17167 = this._helper;
    if (v17167) {
      var v21131 = this.helper;
      JAM.call(v21131.remove, v21131, [], JAM.policy.p3);
    }
    return!1;
  }
  function v1244(b$$338) {
    var c$$278 = this.helper;
    var d$$214 = this.options;
    var f$$76 = this;
    var g$$115 = this.originalMousePosition;
    var h$$95 = this.axis;
    var v4712 = b$$338.pageX - g$$115.left;
    if (!v4712) {
      v4712 = 0;
    }
    var i$$154 = v4712;
    var v4713 = b$$338.pageY - g$$115.top;
    if (!v4713) {
      v4713 = 0;
    }
    var j$$68 = v4713;
    var k$$45 = this._change[h$$95];
    if (!k$$45) {
      return!1;
    }
    var l$$56 = JAM.call(k$$45.apply, k$$45, [this, [b$$338, i$$154, j$$68]], JAM.policy.p3);
    var v4717 = a$$434.browser.msie;
    if (v4717) {
      v4717 = a$$434.browser.version < 7;
    }
    var m$$30 = v4717;
    var n$$81 = this.sizeDiff;
    JAM.call(this._updateVirtualBoundaries, this, [b$$338.shiftKey], JAM.policy.p3);
    var v11586 = this._aspectRatio;
    if (!v11586) {
      v11586 = b$$338.shiftKey;
    }
    if (v11586) {
      l$$56 = JAM.call(this._updateRatio, this, [l$$56, b$$338], JAM.policy.p3);
    }
    l$$56 = JAM.call(this._respectSize, this, [l$$56, b$$338], JAM.policy.p3);
    JAM.call(this._propagate, this, ["resize", b$$338], JAM.policy.p3);
    JAM.call(c$$278.css, c$$278, [{top:this.position.top + "px", left:this.position.left + "px", width:this.size.width + "px", height:this.size.height + "px"}], JAM.policy.p3);
    var v27155 = !this._helper;
    if (v27155) {
      v27155 = this._proportionallyResizeElements.length;
    }
    var v25318 = v27155;
    if (v25318) {
      JAM.call(this._proportionallyResize, this, [], JAM.policy.p3);
    }
    JAM.call(this._updateCache, this, [l$$56], JAM.policy.p3);
    JAM.call(this._trigger, this, ["resize", b$$338, JAM.call(this.ui, this, [], JAM.policy.p3)], JAM.policy.p3);
    return!1;
  }
  function v1243(b$$337) {
    var d$$213 = this.options;
    var v4720 = this.element;
    var e$$203 = JAM.call(v4720.position, v4720, [], JAM.policy.p3);
    var f$$75 = this.element;
    this.resizing = !0;
    var v25319 = JAM.call(a$$434, null, [document], JAM.policy.p3);
    var v21132 = JAM.call(v25319.scrollTop, v25319, [], JAM.policy.p3);
    var v25320 = JAM.call(a$$434, null, [document], JAM.policy.p3);
    this.documentScroll = {top:v21132, left:JAM.call(v25320.scrollLeft, v25320, [], JAM.policy.p3)};
    var v21134 = JAM.call(f$$75.is, f$$75, [".ui-draggable"], JAM.policy.p3);
    if (!v21134) {
      v21134 = JAM.call(/absolute/.test, /absolute/, [JAM.call(f$$75.css, f$$75, ["position"], JAM.policy.p3)], JAM.policy.p3);
    }
    var v17171 = v21134;
    if (v17171) {
      JAM.call(f$$75.css, f$$75, [{position:"absolute", top:e$$203.top, left:e$$203.left}], JAM.policy.p3);
    }
    JAM.call(this._renderProxy, this, [], JAM.policy.p3);
    var v11587 = this.helper;
    var g$$114 = c$$273(JAM.call(v11587.css, v11587, ["left"], JAM.policy.p3));
    var v11588 = this.helper;
    var h$$94 = c$$273(JAM.call(v11588.css, v11588, ["top"], JAM.policy.p3));
    var v29581 = d$$213.containment;
    if (v29581) {
      var v30600 = JAM.call(a$$434, null, [d$$213.containment], JAM.policy.p3);
      var v30473 = JAM.call(v30600.scrollLeft, v30600, [], JAM.policy.p3);
      if (!v30473) {
        v30473 = 0;
      }
      g$$114 = g$$114 + v30473;
      var v30602 = JAM.call(a$$434, null, [d$$213.containment], JAM.policy.p3);
      var v30474 = JAM.call(v30602.scrollTop, v30602, [], JAM.policy.p3);
      if (!v30474) {
        v30474 = 0;
      }
      h$$94 = h$$94 + v30474;
    }
    var v29582 = this.helper;
    var v31094 = JAM.call(v29582.offset, v29582, [], JAM.policy.p3);
    this.offset = v31094;
    this.position = {left:g$$114, top:h$$94};
    var v28335;
    if (this._helper) {
      v28335 = {width:JAM.call(f$$75.outerWidth, f$$75, [], JAM.policy.p3), height:JAM.call(f$$75.outerHeight, f$$75, [], JAM.policy.p3)};
    } else {
      v28335 = {width:JAM.call(f$$75.width, f$$75, [], JAM.policy.p3), height:JAM.call(f$$75.height, f$$75, [], JAM.policy.p3)};
    }
    this.size = v28335;
    var v27156;
    if (this._helper) {
      v27156 = {width:JAM.call(f$$75.outerWidth, f$$75, [], JAM.policy.p3), height:JAM.call(f$$75.outerHeight, f$$75, [], JAM.policy.p3)};
    } else {
      v27156 = {width:JAM.call(f$$75.width, f$$75, [], JAM.policy.p3), height:JAM.call(f$$75.height, f$$75, [], JAM.policy.p3)};
    }
    this.originalSize = v27156;
    this.originalPosition = {left:g$$114, top:h$$94};
    this.sizeDiff = {width:JAM.call(f$$75.outerWidth, f$$75, [], JAM.policy.p3) - JAM.call(f$$75.width, f$$75, [], JAM.policy.p3), height:JAM.call(f$$75.outerHeight, f$$75, [], JAM.policy.p3) - JAM.call(f$$75.height, f$$75, [], JAM.policy.p3)};
    this.originalMousePosition = {left:b$$337.pageX, top:b$$337.pageY};
    var v11589;
    if (typeof d$$213.aspectRatio == "number") {
      v11589 = d$$213.aspectRatio;
    } else {
      var v17174 = this.originalSize.width / this.originalSize.height;
      if (!v17174) {
        v17174 = 1;
      }
      v11589 = v17174;
    }
    this.aspectRatio = v11589;
    var v4723 = JAM.call(a$$434, null, [".ui-resizable-" + this.axis], JAM.policy.p3);
    var i$$153 = JAM.call(v4723.css, v4723, ["cursor"], JAM.policy.p3);
    var v21142 = JAM.call(a$$434, null, ["body"], JAM.policy.p3);
    var v25332;
    if (i$$153 == "auto") {
      v25332 = this.axis + "-resize";
    } else {
      v25332 = i$$153;
    }
    JAM.call(v21142.css, v21142, ["cursor", v25332], JAM.policy.p3);
    JAM.call(f$$75.addClass, f$$75, ["ui-resizable-resizing"], JAM.policy.p3);
    JAM.call(this._propagate, this, ["start", b$$337], JAM.policy.p3);
    return!0;
  }
  function v1242(b$$336) {
    var c$$277 = !1;
    var d$$212;
    for (d$$212 in this.handles) {
      var v4724 = JAM.call(a$$434, null, [this.handles[d$$212]], JAM.policy.p3)[0] == b$$336.target;
      if (v4724) {
        c$$277 = !0;
      }
    }
    var v4726 = !this.options.disabled;
    if (v4726) {
      v4726 = c$$277;
    }
    return v4726;
  }
  function v1241() {
    function b$$334(b$$335) {
      var v25334 = JAM.call(a$$434, null, [b$$335], JAM.policy.p3);
      var v21145 = JAM.call(v25334.removeClass, v25334, ["ui-resizable ui-resizable-disabled ui-resizable-resizing"], JAM.policy.p3);
      var v17179 = JAM.call(v21145.removeData, v21145, ["resizable"], JAM.policy.p3);
      var v11594 = JAM.call(v17179.unbind, v17179, [".resizable"], JAM.policy.p3);
      var v4727 = JAM.call(v11594.find, v11594, [".ui-resizable-handle"], JAM.policy.p3);
      JAM.call(v4727.remove, v4727, [], JAM.policy.p3);
      return;
    }
    JAM.call(this._mouseDestroy, this, [], JAM.policy.p3);
    if (this.elementIsWrapper) {
      b$$334(this.element);
      var c$$276 = this.element;
      var v17180 = this.originalElement;
      var v4729 = JAM.call(c$$276.after, c$$276, [JAM.call(v17180.css, v17180, [{position:JAM.call(c$$276.css, c$$276, ["position"], JAM.policy.p3), width:JAM.call(c$$276.outerWidth, c$$276, [], JAM.policy.p3), height:JAM.call(c$$276.outerHeight, c$$276, [], JAM.policy.p3), top:JAM.call(c$$276.css, c$$276, ["top"], JAM.policy.p3), left:JAM.call(c$$276.css, c$$276, ["left"], JAM.policy.p3)}], JAM.policy.p3)], JAM.policy.p3);
      JAM.call(v4729.remove, v4729, [], JAM.policy.p3);
    }
    var v17182 = this.originalElement;
    JAM.call(v17182.css, v17182, ["resize", this.originalResizeStyle], JAM.policy.p3);
    b$$334(this.originalElement);
    return this;
  }
  function v1240() {
    function v1239() {
      if (c$$274.disabled) {
        return;
      }
      var v4732 = b$$332.resizing;
      if (!v4732) {
        var v17185 = JAM.call(a$$434, null, [this], JAM.policy.p3);
        JAM.call(v17185.addClass, v17185, ["ui-resizable-autohide"], JAM.policy.p3);
        var v17186 = b$$332._handles;
        JAM.call(v17186.hide, v17186, [], JAM.policy.p3);
      }
      return;
    }
    function v1238() {
      if (c$$274.disabled) {
        return;
      }
      var v11597 = JAM.call(a$$434, null, [this], JAM.policy.p3);
      JAM.call(v11597.removeClass, v11597, ["ui-resizable-autohide"], JAM.policy.p3);
      var v11598 = b$$332._handles;
      JAM.call(v11598.show, v11598, [], JAM.policy.p3);
      return;
    }
    function v1237() {
      if (!b$$332.resizing) {
        if (this.className) {
          var v4734 = this.className;
          var a$$435 = JAM.call(v4734.match, v4734, [/ui-resizable-(se|sw|ne|nw|n|e|s|w)/i], JAM.policy.p3);
        }
        var v4736;
        var v17187 = a$$435;
        if (v17187) {
          v17187 = a$$435[1];
        }
        if (v17187) {
          v4736 = a$$435[1];
        } else {
          v4736 = "se";
        }
        b$$332.axis = v4736;
      }
      return;
    }
    function v1236(b$$333) {
      var v4738 = b$$333;
      if (!v4738) {
        v4738 = this.element;
      }
      b$$333 = v4738;
      var c$$275;
      for (c$$275 in this.handles) {
        var v4739 = this.handles[c$$275].constructor == String;
        if (v4739) {
          var v11603 = this.handles;
          var v17189 = JAM.call(a$$434, null, [this.handles[c$$275], this.element], JAM.policy.p3);
          var v31095 = JAM.call(v17189.show, v17189, [], JAM.policy.p3);
          JAM.set(v11603, c$$275, v31095, JAM.policy.p2);
        }
        var v11604 = this.elementIsWrapper;
        if (v11604) {
          var v17190 = this.originalElement[0].nodeName;
          v11604 = JAM.call(v17190.match, v17190, [/textarea|input|select|button/i], JAM.policy.p3);
        }
        if (v11604) {
          var d$$211 = JAM.call(a$$434, null, [this.handles[c$$275], this.element], JAM.policy.p3);
          var e$$202 = 0;
          var v4742;
          if (JAM.call(/sw|ne|nw|se|n|s/.test, /sw|ne|nw|se|n|s/, [c$$275], JAM.policy.p3)) {
            v4742 = JAM.call(d$$211.outerHeight, d$$211, [], JAM.policy.p3);
          } else {
            v4742 = JAM.call(d$$211.outerWidth, d$$211, [], JAM.policy.p3);
          }
          e$$202 = v4742;
          var v17191;
          if (JAM.call(/ne|nw|n/.test, /ne|nw|n/, [c$$275], JAM.policy.p3)) {
            v17191 = "Top";
          } else {
            var v21155;
            if (JAM.call(/se|sw|s/.test, /se|sw|s/, [c$$275], JAM.policy.p3)) {
              v21155 = "Bottom";
            } else {
              var v25337;
              if (JAM.call(/^e$/.test, /^e$/, [c$$275], JAM.policy.p3)) {
                v25337 = "Right";
              } else {
                v25337 = "Left";
              }
              v21155 = v25337;
            }
            v17191 = v21155;
          }
          var v4743 = ["padding", v17191];
          var f$$74 = JAM.call(v4743.join, v4743, [""], JAM.policy.p3);
          JAM.call(b$$333.css, b$$333, [f$$74, e$$202], JAM.policy.p3);
          JAM.call(this._proportionallyResize, this, [], JAM.policy.p3);
        }
        if (!JAM.call(a$$434, null, [this.handles[c$$275]], JAM.policy.p3).length) {
        }
      }
      return;
    }
    var b$$332 = this;
    var c$$274 = this.options;
    var v21158 = this.element;
    JAM.call(v21158.addClass, v21158, ["ui-resizable"], JAM.policy.p3);
    var v25340 = !!c$$274.aspectRatio;
    var v25341 = c$$274.aspectRatio;
    var v25342 = this.element;
    var v27161;
    var v29583 = c$$274.helper;
    if (!v29583) {
      v29583 = c$$274.ghost;
    }
    var v29095 = v29583;
    if (!v29095) {
      v29095 = c$$274.animate;
    }
    if (v29095) {
      var v28342 = c$$274.helper;
      if (!v28342) {
        v28342 = "ui-resizable-helper";
      }
      v27161 = v28342;
    } else {
      v27161 = null;
    }
    JAM.call(a$$434.extend, a$$434, [this, {_aspectRatio:v25340, aspectRatio:v25341, originalElement:v25342, _proportionallyResizeElements:[], _helper:v27161}], JAM.policy.p3);
    var v21160 = this.element[0].nodeName;
    var v17193 = JAM.call(v21160.match, v21160, [/canvas|textarea|input|select|button|img/i], JAM.policy.p3);
    if (v17193) {
      var v30475 = this.element;
      var v30604 = JAM.call(a$$434, null, ['<div class="ui-wrapper" style="overflow: hidden;"></div>'], JAM.policy.p3);
      var v30732 = this.element;
      var v30682 = JAM.call(v30732.css, v30732, ["position"], JAM.policy.p3);
      var v30733 = this.element;
      var v30683 = JAM.call(v30733.outerWidth, v30733, [], JAM.policy.p3);
      var v30734 = this.element;
      var v30684 = JAM.call(v30734.outerHeight, v30734, [], JAM.policy.p3);
      var v30735 = this.element;
      var v30685 = JAM.call(v30735.css, v30735, ["top"], JAM.policy.p3);
      var v30736 = this.element;
      JAM.call(v30475.wrap, v30475, [JAM.call(v30604.css, v30604, [{position:v30682, width:v30683, height:v30684, top:v30685, left:JAM.call(v30736.css, v30736, ["left"], JAM.policy.p3)}], JAM.policy.p3)], JAM.policy.p3);
      var v30606 = this.element;
      var v30477 = JAM.call(v30606.parent, v30606, [], JAM.policy.p3);
      var v30607 = this.element;
      var v31096 = JAM.call(v30477.data, v30477, ["resizable", JAM.call(v30607.data, v30607, ["resizable"], JAM.policy.p3)], JAM.policy.p3);
      this.element = v31096;
      this.elementIsWrapper = !0;
      var v30144 = this.element;
      var v30479 = this.originalElement;
      var v30339 = JAM.call(v30479.css, v30479, ["marginLeft"], JAM.policy.p3);
      var v30480 = this.originalElement;
      var v30340 = JAM.call(v30480.css, v30480, ["marginTop"], JAM.policy.p3);
      var v30481 = this.originalElement;
      var v30341 = JAM.call(v30481.css, v30481, ["marginRight"], JAM.policy.p3);
      var v30482 = this.originalElement;
      JAM.call(v30144.css, v30144, [{marginLeft:v30339, marginTop:v30340, marginRight:v30341, marginBottom:JAM.call(v30482.css, v30482, ["marginBottom"], JAM.policy.p3)}], JAM.policy.p3);
      var v29896 = this.originalElement;
      JAM.call(v29896.css, v29896, [{marginLeft:0, marginTop:0, marginRight:0, marginBottom:0}], JAM.policy.p3);
      var v29585 = this.originalElement;
      var v31097 = JAM.call(v29585.css, v29585, ["resize"], JAM.policy.p3);
      this.originalResizeStyle = v31097;
      var v29097 = this.originalElement;
      JAM.call(v29097.css, v29097, ["resize", "none"], JAM.policy.p3);
      var v28344 = this._proportionallyResizeElements;
      var v29098 = this.originalElement;
      JAM.call(v28344.push, v28344, [JAM.call(v29098.css, v29098, [{position:"static", zoom:1, display:"block"}], JAM.policy.p3)], JAM.policy.p3);
      var v27163 = this.originalElement;
      var v29100 = this.originalElement;
      JAM.call(v27163.css, v27163, [{margin:JAM.call(v29100.css, v29100, ["margin"], JAM.policy.p3)}], JAM.policy.p3);
      JAM.call(this._proportionallyResize, this, [], JAM.policy.p3);
    }
    var v11609 = c$$274.handles;
    if (!v11609) {
      var v17194;
      if (JAM.call(a$$434, null, [".ui-resizable-handle", this.element], JAM.policy.p3).length) {
        v17194 = {n:".ui-resizable-n", e:".ui-resizable-e", s:".ui-resizable-s", w:".ui-resizable-w", se:".ui-resizable-se", sw:".ui-resizable-sw", ne:".ui-resizable-ne", nw:".ui-resizable-nw"};
      } else {
        v17194 = "e,s,se";
      }
      v11609 = v17194;
    }
    this.handles = v11609;
    if (this.handles.constructor == String) {
      var v4747 = this.handles == "all";
      if (v4747) {
        this.handles = "n,e,s,w,se,sw,ne,nw";
      }
      var v4748 = this.handles;
      var d$$210 = JAM.call(v4748.split, v4748, [","], JAM.policy.p3);
      this.handles = {};
      var e$$201 = 0;
      var v4751 = e$$201 < d$$210.length;
      for (;v4751;) {
        var f$$73 = JAM.call(a$$434.trim, a$$434, [d$$210[e$$201]], JAM.policy.p3);
        var g$$113 = "ui-resizable-" + f$$73;
        var h$$93 = JAM.call(a$$434, null, ['<div class="ui-resizable-handle ' + g$$113 + '"></div>'], JAM.policy.p3);
        JAM.call(h$$93.css, h$$93, [{zIndex:c$$274.zIndex}], JAM.policy.p3);
        var v21163 = "se" == f$$73;
        if (v21163) {
          JAM.call(h$$93.addClass, h$$93, ["ui-icon ui-icon-gripsmall-diagonal-se"], JAM.policy.p3);
        }
        JAM.set(this.handles, f$$73, ".ui-resizable-" + f$$73, JAM.policy.p2);
        var v11614 = this.element;
        JAM.call(v11614.append, v11614, [h$$93], JAM.policy.p3);
        e$$201++;
        v4751 = e$$201 < d$$210.length;
      }
    }
    this._renderAxis = v1236;
    JAM.call(this._renderAxis, this, [this.element], JAM.policy.p3);
    var v25347 = JAM.call(a$$434, null, [".ui-resizable-handle", this.element], JAM.policy.p3);
    var v31098 = JAM.call(v25347.disableSelection, v25347, [], JAM.policy.p3);
    this._handles = v31098;
    var v21164 = this._handles;
    JAM.call(v21164.mouseover, v21164, [v1237], JAM.policy.p3);
    var v17198 = c$$274.autoHide;
    if (v17198) {
      var v25348 = this._handles;
      JAM.call(v25348.hide, v25348, [], JAM.policy.p3);
      var v27168 = JAM.call(a$$434, null, [this.element], JAM.policy.p3);
      var v25349 = JAM.call(v27168.addClass, v27168, ["ui-resizable-autohide"], JAM.policy.p3);
      JAM.call(v25349.hover, v25349, [v1238, v1239], JAM.policy.p3);
    }
    JAM.call(this._mouseInit, this, [], JAM.policy.p3);
    return;
  }
  function d$$209(a$$450) {
    return!isNaN(parseInt(a$$450, 10));
  }
  function c$$273(a$$449) {
    var v4754 = parseInt(a$$449, 10);
    if (!v4754) {
      v4754 = 0;
    }
    return v4754;
  }
  JAM.call(a$$434.widget, a$$434, ["ui.resizable", a$$434.ui.mouse, {widgetEventPrefix:"resize", options:{alsoResize:!1, animate:!1, animateDuration:"slow", animateEasing:"swing", aspectRatio:!1, autoHide:!1, containment:!1, ghost:!1, grid:!1, handles:"e,s,se", helper:!1, maxHeight:null, maxWidth:null, minHeight:10, minWidth:10, zIndex:1E3}, _create:v1240, destroy:v1241, _mouseCapture:v1242, _mouseStart:v1243, _mouseDrag:v1244, _mouseStop:v1245, _updateVirtualBoundaries:v1246, _updateCache:v1247, 
  _updateRatio:v1248, _respectSize:v1249, _proportionallyResize:v1251, _renderProxy:v1252, _change:{e:v1253, w:v1254, n:v1255, s:v1256, se:v1257, sw:v1258, ne:v1259, nw:v1260}, _propagate:v1261, plugins:{}, ui:v1262}], JAM.policy.p3);
  JAM.call(a$$434.extend, a$$434, [a$$434.ui.resizable, {version:"1.8.24"}], JAM.policy.p3);
  var v27169 = a$$434.ui.plugin;
  JAM.call(v27169.add, v27169, ["resizable", "alsoResize", {start:v1265, resize:v1269, stop:v1270}], JAM.policy.p3);
  var v25350 = a$$434.ui.plugin;
  JAM.call(v25350.add, v25350, ["resizable", "animate", {stop:v1272}], JAM.policy.p3);
  var v21165 = a$$434.ui.plugin;
  JAM.call(v21165.add, v21165, ["resizable", "containment", {start:v1274, resize:v1275, stop:v1276}], JAM.policy.p3);
  var v17199 = a$$434.ui.plugin;
  JAM.call(v17199.add, v17199, ["resizable", "ghost", {start:v1277, resize:v1278, stop:v1279}], JAM.policy.p3);
  var v11618 = a$$434.ui.plugin;
  JAM.call(v11618.add, v11618, ["resizable", "grid", {resize:v1280}], JAM.policy.p3);
  return;
}
function v1235(a$$430, b$$315) {
  function v1234(b$$330, c$$272) {
    var v17202 = b$$330.element;
    var v11620 = JAM.call(v17202.parents, v17202, [":not(body,html)"], JAM.policy.p3);
    JAM.call(v11620.unbind, v11620, ["scroll.droppable"], JAM.policy.p3);
    var v11621 = b$$330.options.refreshPositions;
    if (!v11621) {
      var v17204 = a$$430.ui.ddmanager;
      JAM.call(v17204.prepareOffsets, v17204, [b$$330, c$$272], JAM.policy.p3);
    }
    return;
  }
  function v1233(b$$329, c$$271) {
    function v1232() {
      function v1231() {
        return JAM.call(a$$430.data, a$$430, [this, "droppable"], JAM.policy.p3).options.scope === g$$112;
      }
      var v17207 = this.options.disabled;
      if (!v17207) {
        v17207 = this.greedyChild;
      }
      var v11623 = v17207;
      if (!v11623) {
        v11623 = !this.visible;
      }
      if (v11623) {
        return;
      }
      var v4757 = a$$430.ui;
      var d$$208 = JAM.call(v4757.intersect, v4757, [b$$329, this, this.options.tolerance], JAM.policy.p3);
      var v4759;
      var v17210 = !d$$208;
      if (v17210) {
        v17210 = this.isover == 1;
      }
      if (v17210) {
        v4759 = "isout";
      } else {
        var v11625;
        var v21172 = d$$208;
        if (v21172) {
          v21172 = this.isover == 0;
        }
        if (v21172) {
          v11625 = "isover";
        } else {
          v11625 = null;
        }
        v4759 = v11625;
      }
      var e$$200 = v4759;
      if (!e$$200) {
        return;
      }
      var f$$72;
      if (this.options.greedy) {
        var g$$112 = this.options.scope;
        var v11628 = this.element;
        var v4762 = JAM.call(v11628.parents, v11628, [":data(droppable)"], JAM.policy.p3);
        var h$$92 = JAM.call(v4762.filter, v4762, [v1231], JAM.policy.p3);
        var v4763 = h$$92.length;
        if (v4763) {
          f$$72 = JAM.call(a$$430.data, a$$430, [h$$92[0], "droppable"], JAM.policy.p3);
          var v17213;
          if (e$$200 == "isover") {
            v17213 = 1;
          } else {
            v17213 = 0;
          }
          f$$72.greedyChild = v17213;
        }
      }
      var v27172 = f$$72;
      if (v27172) {
        v27172 = e$$200 == "isover";
      }
      var v25354 = v27172;
      if (v25354) {
        f$$72.isover = 0;
        f$$72.isout = 1;
        var v28353 = f$$72._out;
        JAM.call(v28353.call, v28353, [f$$72, c$$271], JAM.policy.p3);
      }
      JAM.set(this, e$$200, 1, JAM.policy.p2);
      var v25355;
      if (e$$200 == "isout") {
        v25355 = "isover";
      } else {
        v25355 = "isout";
      }
      JAM.set(this, v25355, 0, JAM.policy.p2);
      var v25356;
      if (e$$200 == "isover") {
        v25356 = "_over";
      } else {
        v25356 = "_out";
      }
      var v17214 = this[v25356];
      JAM.call(v17214.call, v17214, [this, c$$271], JAM.policy.p3);
      var v17215 = f$$72;
      if (v17215) {
        v17215 = e$$200 == "isout";
      }
      var v11629 = v17215;
      if (v11629) {
        f$$72.isout = 0;
        f$$72.isover = 1;
        var v21176 = f$$72._over;
        JAM.call(v21176.call, v21176, [f$$72, c$$271], JAM.policy.p3);
      }
      return;
    }
    var v11630 = b$$329.options.refreshPositions;
    if (v11630) {
      var v17217 = a$$430.ui.ddmanager;
      JAM.call(v17217.prepareOffsets, v17217, [b$$329, c$$271], JAM.policy.p3);
    }
    var v17218 = a$$430.ui.ddmanager.droppables[b$$329.options.scope];
    if (!v17218) {
      v17218 = [];
    }
    JAM.call(a$$430.each, a$$430, [v17218, v1232], JAM.policy.p3);
    return;
  }
  function v1230(b$$328, c$$270) {
    function v1229() {
      var v4765 = b$$328.options.refreshPositions;
      if (!v4765) {
        var v11633 = a$$430.ui.ddmanager;
        JAM.call(v11633.prepareOffsets, v11633, [b$$328, c$$270], JAM.policy.p3);
      }
      return;
    }
    var v11635 = b$$328.element;
    var v4766 = JAM.call(v11635.parents, v11635, [":not(body,html)"], JAM.policy.p3);
    JAM.call(v4766.bind, v4766, ["scroll.droppable", v1229], JAM.policy.p3);
    return;
  }
  function v1228(b$$327, c$$269) {
    function v1227() {
      if (!this.options) {
        return;
      }
      var v21181 = !this.options.disabled;
      if (v21181) {
        v21181 = this.visible;
      }
      var v17220 = v21181;
      if (v17220) {
        var v21182 = a$$430.ui;
        v17220 = JAM.call(v21182.intersect, v21182, [b$$327, this, this.options.tolerance], JAM.policy.p3);
      }
      var v11637 = v17220;
      if (v11637) {
        var v21184 = this._drop;
        var v17221 = JAM.call(v21184.call, v21184, [this, c$$269], JAM.policy.p3);
        if (!v17221) {
          v17221 = d$$207;
        }
        d$$207 = v17221;
      }
      var v21186 = !this.options.disabled;
      if (v21186) {
        v21186 = this.visible;
      }
      var v17222 = v21186;
      if (v17222) {
        var v21187 = this.accept;
        var v21188 = this.element[0];
        var v25363 = b$$327.currentItem;
        if (!v25363) {
          v25363 = b$$327.element;
        }
        v17222 = JAM.call(v21187.call, v21187, [v21188, v25363], JAM.policy.p3);
      }
      var v11638 = v17222;
      if (v11638) {
        this.isout = 1;
        this.isover = 0;
        var v21190 = this._deactivate;
        JAM.call(v21190.call, v21190, [this, c$$269], JAM.policy.p3);
      }
      return;
    }
    var d$$207 = !1;
    var v17223 = a$$430.ui.ddmanager.droppables[b$$327.options.scope];
    if (!v17223) {
      v17223 = [];
    }
    JAM.call(a$$430.each, a$$430, [v17223, v1227], JAM.policy.p3);
    return d$$207;
  }
  function v1226(b$$326, c$$268) {
    var v4768 = a$$430.ui.ddmanager.droppables[b$$326.options.scope];
    if (!v4768) {
      v4768 = [];
    }
    var d$$206 = v4768;
    var v4769;
    if (c$$268) {
      v4769 = c$$268.type;
    } else {
      v4769 = null;
    }
    var e$$199 = v4769;
    var v17226 = b$$326.currentItem;
    if (!v17226) {
      v17226 = b$$326.element;
    }
    var v11643 = v17226;
    var v4770 = JAM.call(v11643.find, v11643, [":data(droppable)"], JAM.policy.p3);
    var f$$71 = JAM.call(v4770.andSelf, v4770, [], JAM.policy.p3);
    var h$$91 = 0;
    var v4777 = h$$91 < d$$206.length;
    g: for (;v4777;) {
      var v11645 = d$$206[h$$91].options.disabled;
      if (!v11645) {
        var v17228 = b$$326;
        if (v17228) {
          var v25366 = d$$206[h$$91].accept;
          var v25367 = d$$206[h$$91].element[0];
          var v27182 = b$$326.currentItem;
          if (!v27182) {
            v27182 = b$$326.element;
          }
          v17228 = !JAM.call(v25366.call, v25366, [v25367, v27182], JAM.policy.p3);
        }
        v11645 = v17228;
      }
      if (v11645) {
        h$$91++;
        v4777 = h$$91 < d$$206.length;
        continue;
      }
      var i$$152 = 0;
      var v4774 = i$$152 < f$$71.length;
      for (;v4774;) {
        if (f$$71[i$$152] == d$$206[h$$91].element[0]) {
          d$$206[h$$91].proportions.height = 0;
          i$$152++;
          v4774 = i$$152 < f$$71.length;
          h$$91++;
          v4777 = h$$91 < d$$206.length;
          continue g;
        }
        i$$152++;
        v4774 = i$$152 < f$$71.length;
      }
      var v4775 = d$$206[h$$91];
      var v17231 = d$$206[h$$91].element;
      v4775.visible = JAM.call(v17231.css, v17231, ["display"], JAM.policy.p3) != "none";
      if (!d$$206[h$$91].visible) {
        h$$91++;
        v4777 = h$$91 < d$$206.length;
        continue;
      }
      var v17233 = e$$199 == "mousedown";
      if (v17233) {
        var v21200 = d$$206[h$$91]._activate;
        JAM.call(v21200.call, v21200, [d$$206[h$$91], c$$268], JAM.policy.p3);
      }
      var v17234 = d$$206[h$$91];
      var v21202 = d$$206[h$$91].element;
      var v31099 = JAM.call(v21202.offset, v21202, [], JAM.policy.p3);
      v17234.offset = v31099;
      d$$206[h$$91].proportions = {width:d$$206[h$$91].element[0].offsetWidth, height:d$$206[h$$91].element[0].offsetHeight};
      h$$91++;
      v4777 = h$$91 < d$$206.length;
    }
    return;
  }
  function v1225(b$$325, c$$267, d$$205) {
    if (!c$$267.offset) {
      return!1;
    }
    var v11660 = b$$325.positionAbs;
    if (!v11660) {
      v11660 = b$$325.position.absolute;
    }
    var e$$198 = v11660.left;
    var f$$70 = e$$198 + b$$325.helperProportions.width;
    var v11662 = b$$325.positionAbs;
    if (!v11662) {
      v11662 = b$$325.position.absolute;
    }
    var g$$111 = v11662.top;
    var h$$90 = g$$111 + b$$325.helperProportions.height;
    var i$$151 = c$$267.offset.left;
    var j$$67 = i$$151 + c$$267.proportions.width;
    var k$$44 = c$$267.offset.top;
    var l$$55 = k$$44 + c$$267.proportions.height;
    switch(d$$205) {
      case "fit":
        var v17241 = i$$151 <= e$$198;
        if (v17241) {
          v17241 = f$$70 <= j$$67;
        }
        var v11666 = v17241;
        if (v11666) {
          v11666 = k$$44 <= g$$111;
        }
        var v4787 = v11666;
        if (v4787) {
          v4787 = h$$90 <= l$$55;
        }
        return v4787;
      case "intersect":
        var v17242 = i$$151 < e$$198 + b$$325.helperProportions.width / 2;
        if (v17242) {
          v17242 = f$$70 - b$$325.helperProportions.width / 2 < j$$67;
        }
        var v11667 = v17242;
        if (v11667) {
          v11667 = k$$44 < g$$111 + b$$325.helperProportions.height / 2;
        }
        var v4788 = v11667;
        if (v4788) {
          v4788 = h$$90 - b$$325.helperProportions.height / 2 < l$$55;
        }
        return v4788;
      case "pointer":
        var v17245 = b$$325.positionAbs;
        if (!v17245) {
          v17245 = b$$325.position.absolute;
        }
        var v4789 = v17245.left;
        var v17246 = b$$325.clickOffset;
        if (!v17246) {
          v17246 = b$$325.offset.click;
        }
        var m$$29 = v4789 + v17246.left;
        var v17247 = b$$325.positionAbs;
        if (!v17247) {
          v17247 = b$$325.position.absolute;
        }
        var v4791 = v17247.top;
        var v17248 = b$$325.clickOffset;
        if (!v17248) {
          v17248 = b$$325.offset.click;
        }
        var n$$80 = v4791 + v17248.top;
        var v4793 = a$$430.ui;
        var o$$17 = JAM.call(v4793.isOver, v4793, [n$$80, m$$29, k$$44, i$$151, c$$267.proportions.height, c$$267.proportions.width], JAM.policy.p3);
        return o$$17;
      case "touch":
        var v21217 = g$$111 >= k$$44;
        if (v21217) {
          v21217 = g$$111 <= l$$55;
        }
        var v17249 = v21217;
        if (!v17249) {
          var v21218 = h$$90 >= k$$44;
          if (v21218) {
            v21218 = h$$90 <= l$$55;
          }
          v17249 = v21218;
        }
        var v11675 = v17249;
        if (!v11675) {
          var v17250 = g$$111 < k$$44;
          if (v17250) {
            v17250 = h$$90 > l$$55;
          }
          v11675 = v17250;
        }
        var v4796 = v11675;
        if (v4796) {
          var v21220 = e$$198 >= i$$151;
          if (v21220) {
            v21220 = e$$198 <= j$$67;
          }
          var v17252 = v21220;
          if (!v17252) {
            var v21221 = f$$70 >= i$$151;
            if (v21221) {
              v21221 = f$$70 <= j$$67;
            }
            v17252 = v21221;
          }
          var v11676 = v17252;
          if (!v11676) {
            var v17253 = e$$198 < i$$151;
            if (v17253) {
              v17253 = f$$70 > j$$67;
            }
            v11676 = v17253;
          }
          v4796 = v11676;
        }
        return v4796;
      default:
        return!1;
    }
    return;
  }
  function v1224(a$$433) {
    var v11677 = a$$433.currentItem;
    if (!v11677) {
      v11677 = a$$433.element;
    }
    return{draggable:v11677, helper:a$$433.helper, position:a$$433.position, offset:a$$433.positionAbs};
  }
  function v1223(b$$323, c$$266) {
    function v1222() {
      var b$$324 = JAM.call(a$$430.data, a$$430, [this, "droppable"], JAM.policy.p3);
      var v25377 = b$$324.options.greedy;
      if (v25377) {
        v25377 = !b$$324.options.disabled;
      }
      var v21223 = v25377;
      if (v21223) {
        v21223 = b$$324.options.scope == d$$204.options.scope;
      }
      var v17256 = v21223;
      if (v17256) {
        var v21224 = b$$324.accept;
        var v21225 = b$$324.element[0];
        var v25381 = d$$204.currentItem;
        if (!v25381) {
          v25381 = d$$204.element;
        }
        v17256 = JAM.call(v21224.call, v21224, [v21225, v25381], JAM.policy.p3);
      }
      var v11678 = v17256;
      if (v11678) {
        var v17257 = a$$430.ui;
        var v27193 = b$$324.element;
        v11678 = JAM.call(v17257.intersect, v17257, [d$$204, JAM.call(a$$430.extend, a$$430, [b$$324, {offset:JAM.call(v27193.offset, v27193, [], JAM.policy.p3)}], JAM.policy.p3), b$$324.options.tolerance], JAM.policy.p3);
      }
      if (v11678) {
        e$$197 = !0;
        return!1;
      }
      return;
    }
    var v4802 = c$$266;
    if (!v4802) {
      v4802 = a$$430.ui.ddmanager.current;
    }
    var d$$204 = v4802;
    var v11681 = !d$$204;
    if (!v11681) {
      var v25383 = d$$204.currentItem;
      if (!v25383) {
        v25383 = d$$204.element;
      }
      v11681 = v25383[0] == this.element[0];
    }
    if (v11681) {
      return!1;
    }
    var e$$197 = !1;
    var v21231 = this.element;
    var v17264 = JAM.call(v21231.find, v21231, [":data(droppable)"], JAM.policy.p3);
    var v11682 = JAM.call(v17264.not, v17264, [".ui-draggable-dragging"], JAM.policy.p3);
    JAM.call(v11682.each, v11682, [v1222], JAM.policy.p3);
    var v11683;
    if (e$$197) {
      v11683 = !1;
    } else {
      var v17265;
      var v25384 = this.accept;
      var v25385 = this.element[0];
      var v27196 = d$$204.currentItem;
      if (!v27196) {
        v27196 = d$$204.element;
      }
      if (JAM.call(v25384.call, v25384, [v25385, v27196], JAM.policy.p3)) {
        var v28360 = this.options.activeClass;
        if (v28360) {
          var v29106 = this.element;
          JAM.call(v29106.removeClass, v29106, [this.options.activeClass], JAM.policy.p3);
        }
        var v28361 = this.options.hoverClass;
        if (v28361) {
          var v29109 = this.element;
          JAM.call(v29109.removeClass, v29109, [this.options.hoverClass], JAM.policy.p3);
        }
        JAM.call(this._trigger, this, ["drop", b$$323, JAM.call(this.ui, this, [d$$204], JAM.policy.p3)], JAM.policy.p3);
        v17265 = this.element;
      } else {
        v17265 = !1;
      }
      v11683 = v17265;
    }
    return v11683;
  }
  function v1221(b$$322) {
    var c$$265 = a$$430.ui.ddmanager.current;
    var v11685 = !c$$265;
    if (!v11685) {
      var v25387 = c$$265.currentItem;
      if (!v25387) {
        v25387 = c$$265.element;
      }
      v11685 = v25387[0] == this.element[0];
    }
    if (v11685) {
      return;
    }
    var v11686 = this.accept;
    var v11687 = this.element[0];
    var v17270 = c$$265.currentItem;
    if (!v17270) {
      v17270 = c$$265.element;
    }
    var v4806 = JAM.call(v11686.call, v11686, [v11687, v17270], JAM.policy.p3);
    if (v4806) {
      var v17271 = this.options.hoverClass;
      if (v17271) {
        var v21237 = this.element;
        JAM.call(v21237.removeClass, v21237, [this.options.hoverClass], JAM.policy.p3);
      }
      JAM.call(this._trigger, this, ["out", b$$322, JAM.call(this.ui, this, [c$$265], JAM.policy.p3)], JAM.policy.p3);
    }
    return;
  }
  function v1220(b$$321) {
    var c$$264 = a$$430.ui.ddmanager.current;
    var v11690 = !c$$264;
    if (!v11690) {
      var v25389 = c$$264.currentItem;
      if (!v25389) {
        v25389 = c$$264.element;
      }
      v11690 = v25389[0] == this.element[0];
    }
    if (v11690) {
      return;
    }
    var v11691 = this.accept;
    var v11692 = this.element[0];
    var v17277 = c$$264.currentItem;
    if (!v17277) {
      v17277 = c$$264.element;
    }
    var v4809 = JAM.call(v11691.call, v11691, [v11692, v17277], JAM.policy.p3);
    if (v4809) {
      var v17278 = this.options.hoverClass;
      if (v17278) {
        var v21243 = this.element;
        JAM.call(v21243.addClass, v21243, [this.options.hoverClass], JAM.policy.p3);
      }
      JAM.call(this._trigger, this, ["over", b$$321, JAM.call(this.ui, this, [c$$264], JAM.policy.p3)], JAM.policy.p3);
    }
    return;
  }
  function v1219(b$$320) {
    var c$$263 = a$$430.ui.ddmanager.current;
    var v11695 = this.options.activeClass;
    if (v11695) {
      var v17281 = this.element;
      JAM.call(v17281.removeClass, v17281, [this.options.activeClass], JAM.policy.p3);
    }
    if (c$$263) {
      JAM.call(this._trigger, this, ["deactivate", b$$320, JAM.call(this.ui, this, [c$$263], JAM.policy.p3)], JAM.policy.p3);
    }
    return;
  }
  function v1218(b$$319) {
    var c$$262 = a$$430.ui.ddmanager.current;
    var v11697 = this.options.activeClass;
    if (v11697) {
      var v17285 = this.element;
      JAM.call(v17285.addClass, v17285, [this.options.activeClass], JAM.policy.p3);
    }
    if (c$$262) {
      JAM.call(this._trigger, this, ["activate", b$$319, JAM.call(this.ui, this, [c$$262], JAM.policy.p3)], JAM.policy.p3);
    }
    return;
  }
  function v1217(b$$318, c$$261) {
    function v1216(a$$432) {
      return JAM.call(a$$432.is, a$$432, [c$$261], JAM.policy.p3);
    }
    var v11698 = b$$318 == "accept";
    if (v11698) {
      var v17288;
      if (JAM.call(a$$430.isFunction, a$$430, [c$$261], JAM.policy.p3)) {
        v17288 = c$$261;
      } else {
        v17288 = v1216;
      }
      this.accept = v17288;
    }
    var v11699 = a$$430.Widget.prototype._setOption;
    JAM.call(v11699.apply, v11699, [this, arguments], JAM.policy.p3);
    return;
  }
  function v1215() {
    var b$$317 = a$$430.ui.ddmanager.droppables[this.options.scope];
    var c$$260 = 0;
    var v4815 = c$$260 < b$$317.length;
    for (;v4815;) {
      var v4814 = b$$317[c$$260] == this;
      if (v4814) {
        JAM.call(b$$317.splice, b$$317, [c$$260, 1], JAM.policy.p3);
      }
      c$$260++;
      v4815 = c$$260 < b$$317.length;
    }
    var v21249 = this.element;
    var v17291 = JAM.call(v21249.removeClass, v21249, ["ui-droppable ui-droppable-disabled"], JAM.policy.p3);
    var v11705 = JAM.call(v17291.removeData, v17291, ["droppable"], JAM.policy.p3);
    JAM.call(v11705.unbind, v11705, [".droppable"], JAM.policy.p3);
    return this;
  }
  function v1214() {
    function v1213(a$$431) {
      return JAM.call(a$$431.is, a$$431, [c$$259], JAM.policy.p3);
    }
    var b$$316 = this.options;
    var c$$259 = b$$316.accept;
    this.isover = 0;
    this.isout = 1;
    var v27200;
    if (JAM.call(a$$430.isFunction, a$$430, [c$$259], JAM.policy.p3)) {
      v27200 = c$$259;
    } else {
      v27200 = v1213;
    }
    this.accept = v27200;
    this.proportions = {width:this.element[0].offsetWidth, height:this.element[0].offsetHeight};
    var v21250 = a$$430.ui.ddmanager.droppables;
    var v21251 = b$$316.scope;
    var v25394 = a$$430.ui.ddmanager.droppables[b$$316.scope];
    if (!v25394) {
      v25394 = [];
    }
    JAM.set(v21250, v21251, v25394, JAM.policy.p2);
    var v17292 = a$$430.ui.ddmanager.droppables[b$$316.scope];
    JAM.call(v17292.push, v17292, [this], JAM.policy.p3);
    var v11706 = b$$316.addClasses;
    if (v11706) {
      var v17293 = this.element;
      JAM.call(v17293.addClass, v17293, ["ui-droppable"], JAM.policy.p3);
    }
    return;
  }
  JAM.call(a$$430.widget, a$$430, ["ui.droppable", {widgetEventPrefix:"drop", options:{accept:"*", activeClass:!1, addClasses:!0, greedy:!1, hoverClass:!1, scope:"default", tolerance:"intersect"}, _create:v1214, destroy:v1215, _setOption:v1217, _activate:v1218, _deactivate:v1219, _over:v1220, _out:v1221, _drop:v1223, ui:v1224}], JAM.policy.p3);
  JAM.call(a$$430.extend, a$$430, [a$$430.ui.droppable, {version:"1.8.24"}], JAM.policy.p3);
  a$$430.ui.intersect = v1225;
  a$$430.ui.ddmanager = {current:null, droppables:{"default":[]}, prepareOffsets:v1226, drop:v1228, dragStart:v1230, drag:v1233, dragStop:v1234};
  return;
}
function v1212(a$$426, b$$284) {
  function v1211(b$$314, c$$258) {
    var v11708 = JAM.call(a$$426, null, [this], JAM.policy.p3);
    var d$$203 = JAM.call(v11708.data, v11708, ["draggable"], JAM.policy.p3).options;
    var v4817 = d$$203._zIndex;
    if (v4817) {
      var v11709 = JAM.call(a$$426, null, [c$$258.helper], JAM.policy.p3);
      JAM.call(v11709.css, v11709, ["zIndex", d$$203._zIndex], JAM.policy.p3);
    }
    return;
  }
  function v1210(b$$313, c$$257) {
    var d$$202 = JAM.call(a$$426, null, [c$$257.helper], JAM.policy.p3);
    var v11711 = JAM.call(a$$426, null, [this], JAM.policy.p3);
    var e$$196 = JAM.call(v11711.data, v11711, ["draggable"], JAM.policy.p3).options;
    var v11712 = JAM.call(d$$202.css, d$$202, ["zIndex"], JAM.policy.p3);
    if (v11712) {
      var v31100 = JAM.call(d$$202.css, d$$202, ["zIndex"], JAM.policy.p3);
      e$$196._zIndex = v31100;
    }
    JAM.call(d$$202.css, d$$202, ["zIndex", e$$196.zIndex], JAM.policy.p3);
    return;
  }
  function v1209(b$$311, c$$255) {
    function v1208(a$$429) {
      this.style.zIndex = f$$69 + a$$429;
      return;
    }
    function v1207(b$$312, c$$256) {
      var v21257 = JAM.call(a$$426, null, [b$$312], JAM.policy.p3);
      var v11714 = parseInt(JAM.call(v21257.css, v21257, ["zIndex"], JAM.policy.p3), 10);
      if (!v11714) {
        v11714 = 0;
      }
      var v4821 = v11714;
      var v21258 = JAM.call(a$$426, null, [c$$256], JAM.policy.p3);
      var v11715 = parseInt(JAM.call(v21258.css, v21258, ["zIndex"], JAM.policy.p3), 10);
      if (!v11715) {
        v11715 = 0;
      }
      return v4821 - v11715;
    }
    var v11716 = JAM.call(a$$426, null, [this], JAM.policy.p3);
    var d$$201 = JAM.call(v11716.data, v11716, ["draggable"], JAM.policy.p3).options;
    var v4824 = JAM.call(a$$426.makeArray, a$$426, [JAM.call(a$$426, null, [d$$201.stack], JAM.policy.p3)], JAM.policy.p3);
    var e$$195 = JAM.call(v4824.sort, v4824, [v1207], JAM.policy.p3);
    if (!e$$195.length) {
      return;
    }
    var v4826 = parseInt(e$$195[0].style.zIndex);
    if (!v4826) {
      v4826 = 0;
    }
    var f$$69 = v4826;
    var v11721 = JAM.call(a$$426, null, [e$$195], JAM.policy.p3);
    JAM.call(v11721.each, v11721, [v1208], JAM.policy.p3);
    this[0].style.zIndex = f$$69 + e$$195.length;
    return;
  }
  function v1206(b$$310, c$$254) {
    var v4827 = JAM.call(a$$426, null, [this], JAM.policy.p3);
    var d$$200 = JAM.call(v4827.data, v4827, ["draggable"], JAM.policy.p3);
    var e$$194 = d$$200.options;
    var f$$68 = e$$194.snapTolerance;
    var g$$110 = c$$254.offset.left;
    var h$$89 = g$$110 + d$$200.helperProportions.width;
    var i$$150 = c$$254.offset.top;
    var j$$66 = i$$150 + d$$200.helperProportions.height;
    var k$$43 = d$$200.snapElements.length - 1;
    var v4849 = k$$43 >= 0;
    for (;v4849;) {
      var l$$54 = d$$200.snapElements[k$$43].left;
      var m$$28 = l$$54 + d$$200.snapElements[k$$43].width;
      var n$$79 = d$$200.snapElements[k$$43].top;
      var o$$16 = n$$79 + d$$200.snapElements[k$$43].height;
      var v29112 = l$$54 - f$$68 < g$$110;
      if (v29112) {
        v29112 = g$$110 < m$$28 + f$$68;
      }
      var v28366 = v29112;
      if (v28366) {
        v28366 = n$$79 - f$$68 < i$$150;
      }
      var v27212 = v28366;
      if (v27212) {
        v27212 = i$$150 < o$$16 + f$$68;
      }
      var v25398 = v27212;
      if (!v25398) {
        var v29114 = l$$54 - f$$68 < g$$110;
        if (v29114) {
          v29114 = g$$110 < m$$28 + f$$68;
        }
        var v28368 = v29114;
        if (v28368) {
          v28368 = n$$79 - f$$68 < j$$66;
        }
        var v27213 = v28368;
        if (v27213) {
          v27213 = j$$66 < o$$16 + f$$68;
        }
        v25398 = v27213;
      }
      var v21260 = v25398;
      if (!v21260) {
        var v28370 = l$$54 - f$$68 < h$$89;
        if (v28370) {
          v28370 = h$$89 < m$$28 + f$$68;
        }
        var v27215 = v28370;
        if (v27215) {
          v27215 = n$$79 - f$$68 < i$$150;
        }
        var v25399 = v27215;
        if (v25399) {
          v25399 = i$$150 < o$$16 + f$$68;
        }
        v21260 = v25399;
      }
      var v17307 = v21260;
      if (!v17307) {
        var v27217 = l$$54 - f$$68 < h$$89;
        if (v27217) {
          v27217 = h$$89 < m$$28 + f$$68;
        }
        var v25401 = v27217;
        if (v25401) {
          v25401 = n$$79 - f$$68 < j$$66;
        }
        var v21261 = v25401;
        if (v21261) {
          v21261 = j$$66 < o$$16 + f$$68;
        }
        v17307 = v21261;
      }
      if (!v17307) {
        var v17308 = d$$200.snapElements[k$$43].snapping;
        if (v17308) {
          v17308 = d$$200.options.snap.release;
        }
        var v11731 = v17308;
        if (v11731) {
          var v17309 = d$$200.options.snap.release;
          JAM.call(v17309.call, v17309, [d$$200.element, b$$310, JAM.call(a$$426.extend, a$$426, [JAM.call(d$$200._uiHash, d$$200, [], JAM.policy.p3), {snapItem:d$$200.snapElements[k$$43].item}], JAM.policy.p3)], JAM.policy.p3);
        }
        d$$200.snapElements[k$$43].snapping = !1;
        k$$43--;
        v4849 = k$$43 >= 0;
        continue;
      }
      if (e$$194.snapMode != "inner") {
        var p$$38 = JAM.call(Math.abs, Math, [n$$79 - j$$66], JAM.policy.p3) <= f$$68;
        var q$$15 = JAM.call(Math.abs, Math, [o$$16 - i$$150], JAM.policy.p3) <= f$$68;
        var r$$17 = JAM.call(Math.abs, Math, [l$$54 - h$$89], JAM.policy.p3) <= f$$68;
        var s$$26 = JAM.call(Math.abs, Math, [m$$28 - g$$110], JAM.policy.p3) <= f$$68;
        if (p$$38) {
          c$$254.position.top = JAM.call(d$$200._convertPositionTo, d$$200, ["relative", {top:n$$79 - d$$200.helperProportions.height, left:0}], JAM.policy.p3).top - d$$200.margins.top;
        }
        if (q$$15) {
          c$$254.position.top = JAM.call(d$$200._convertPositionTo, d$$200, ["relative", {top:o$$16, left:0}], JAM.policy.p3).top - d$$200.margins.top;
        }
        if (r$$17) {
          c$$254.position.left = JAM.call(d$$200._convertPositionTo, d$$200, ["relative", {top:0, left:l$$54 - d$$200.helperProportions.width}], JAM.policy.p3).left - d$$200.margins.left;
        }
        if (s$$26) {
          c$$254.position.left = JAM.call(d$$200._convertPositionTo, d$$200, ["relative", {top:0, left:m$$28}], JAM.policy.p3).left - d$$200.margins.left;
        }
      }
      var v11738 = p$$38 || q$$15;
      if (!v11738) {
        v11738 = r$$17;
      }
      var v4843 = v11738;
      if (!v4843) {
        v4843 = s$$26;
      }
      var t$$11 = v4843;
      if (e$$194.snapMode != "outer") {
        p$$38 = JAM.call(Math.abs, Math, [n$$79 - i$$150], JAM.policy.p3) <= f$$68;
        q$$15 = JAM.call(Math.abs, Math, [o$$16 - j$$66], JAM.policy.p3) <= f$$68;
        r$$17 = JAM.call(Math.abs, Math, [l$$54 - g$$110], JAM.policy.p3) <= f$$68;
        s$$26 = JAM.call(Math.abs, Math, [m$$28 - h$$89], JAM.policy.p3) <= f$$68;
        if (p$$38) {
          c$$254.position.top = JAM.call(d$$200._convertPositionTo, d$$200, ["relative", {top:n$$79, left:0}], JAM.policy.p3).top - d$$200.margins.top;
        }
        if (q$$15) {
          c$$254.position.top = JAM.call(d$$200._convertPositionTo, d$$200, ["relative", {top:o$$16 - d$$200.helperProportions.height, left:0}], JAM.policy.p3).top - d$$200.margins.top;
        }
        if (r$$17) {
          c$$254.position.left = JAM.call(d$$200._convertPositionTo, d$$200, ["relative", {top:0, left:l$$54}], JAM.policy.p3).left - d$$200.margins.left;
        }
        if (s$$26) {
          c$$254.position.left = JAM.call(d$$200._convertPositionTo, d$$200, ["relative", {top:0, left:m$$28 - d$$200.helperProportions.width}], JAM.policy.p3).left - d$$200.margins.left;
        }
      }
      var v21274 = !d$$200.snapElements[k$$43].snapping;
      if (v21274) {
        var v28387 = p$$38 || q$$15;
        if (!v28387) {
          v28387 = r$$17;
        }
        var v27235 = v28387;
        if (!v27235) {
          v27235 = s$$26;
        }
        var v25420 = v27235;
        if (!v25420) {
          v25420 = t$$11;
        }
        v21274 = v25420;
      }
      var v17316 = v21274;
      if (v17316) {
        v17316 = d$$200.options.snap.snap;
      }
      var v11745 = v17316;
      if (v11745) {
        var v17317 = d$$200.options.snap.snap;
        JAM.call(v17317.call, v17317, [d$$200.element, b$$310, JAM.call(a$$426.extend, a$$426, [JAM.call(d$$200._uiHash, d$$200, [], JAM.policy.p3), {snapItem:d$$200.snapElements[k$$43].item}], JAM.policy.p3)], JAM.policy.p3);
      }
      var v11746 = d$$200.snapElements[k$$43];
      var v25424 = p$$38 || q$$15;
      if (!v25424) {
        v25424 = r$$17;
      }
      var v21279 = v25424;
      if (!v21279) {
        v21279 = s$$26;
      }
      var v17321 = v21279;
      if (!v17321) {
        v17321 = t$$11;
      }
      v11746.snapping = v17321;
      k$$43--;
      v4849 = k$$43 >= 0;
    }
    return;
  }
  function v1205(b$$308, c$$252) {
    function v1204() {
      var b$$309 = JAM.call(a$$426, null, [this], JAM.policy.p3);
      var c$$253 = JAM.call(b$$309.offset, b$$309, [], JAM.policy.p3);
      var v4850 = this != d$$199.element[0];
      if (v4850) {
        var v11748 = d$$199.snapElements;
        JAM.call(v11748.push, v11748, [{item:this, width:JAM.call(b$$309.outerWidth, b$$309, [], JAM.policy.p3), height:JAM.call(b$$309.outerHeight, b$$309, [], JAM.policy.p3), top:c$$253.top, left:c$$253.left}], JAM.policy.p3);
      }
      return;
    }
    var v4851 = JAM.call(a$$426, null, [this], JAM.policy.p3);
    var d$$199 = JAM.call(v4851.data, v4851, ["draggable"], JAM.policy.p3);
    var e$$193 = d$$199.options;
    d$$199.snapElements = [];
    var v21281;
    if (e$$193.snap.constructor != String) {
      var v25426 = e$$193.snap.items;
      if (!v25426) {
        v25426 = ":data(draggable)";
      }
      v21281 = v25426;
    } else {
      v21281 = e$$193.snap;
    }
    var v11750 = JAM.call(a$$426, null, [v21281], JAM.policy.p3);
    JAM.call(v11750.each, v11750, [v1204], JAM.policy.p3);
    return;
  }
  function v1203(b$$307, c$$251) {
    var v4852 = JAM.call(a$$426, null, [this], JAM.policy.p3);
    var d$$198 = JAM.call(v4852.data, v4852, ["draggable"], JAM.policy.p3);
    var e$$192 = d$$198.options;
    var f$$67 = !1;
    var v11751 = d$$198.scrollParent[0] != document;
    if (v11751) {
      v11751 = d$$198.scrollParent[0].tagName != "HTML";
    }
    if (v11751) {
      var v11752 = !e$$192.axis;
      if (!v11752) {
        v11752 = e$$192.axis != "x";
      }
      if (v11752) {
        var v4853;
        if (d$$198.overflowOffset.top + d$$198.scrollParent[0].offsetHeight - b$$307.pageY < e$$192.scrollSensitivity) {
          v4853 = d$$198.scrollParent[0].scrollTop = f$$67 = d$$198.scrollParent[0].scrollTop + e$$192.scrollSpeed;
        } else {
          var v11754 = b$$307.pageY - d$$198.overflowOffset.top < e$$192.scrollSensitivity;
          if (v11754) {
            v11754 = d$$198.scrollParent[0].scrollTop = f$$67 = d$$198.scrollParent[0].scrollTop - e$$192.scrollSpeed;
          }
          v4853 = v11754;
        }
        v4853;
      }
      var v11756 = !e$$192.axis;
      if (!v11756) {
        v11756 = e$$192.axis != "y";
      }
      if (v11756) {
        var v4855;
        if (d$$198.overflowOffset.left + d$$198.scrollParent[0].offsetWidth - b$$307.pageX < e$$192.scrollSensitivity) {
          v4855 = d$$198.scrollParent[0].scrollLeft = f$$67 = d$$198.scrollParent[0].scrollLeft + e$$192.scrollSpeed;
        } else {
          var v11758 = b$$307.pageX - d$$198.overflowOffset.left < e$$192.scrollSensitivity;
          if (v11758) {
            v11758 = d$$198.scrollParent[0].scrollLeft = f$$67 = d$$198.scrollParent[0].scrollLeft - e$$192.scrollSpeed;
          }
          v4855 = v11758;
        }
        v4855;
      }
    } else {
      var v11760 = !e$$192.axis;
      if (!v11760) {
        v11760 = e$$192.axis != "x";
      }
      if (v11760) {
        var v4857;
        var v21300 = b$$307.pageY;
        var v25439 = JAM.call(a$$426, null, [document], JAM.policy.p3);
        if (v21300 - JAM.call(v25439.scrollTop, v25439, [], JAM.policy.p3) < e$$192.scrollSensitivity) {
          var v11761 = JAM.call(a$$426, null, [document], JAM.policy.p3);
          var v21302 = JAM.call(a$$426, null, [document], JAM.policy.p3);
          v4857 = f$$67 = JAM.call(v11761.scrollTop, v11761, [JAM.call(v21302.scrollTop, v21302, [], JAM.policy.p3) - e$$192.scrollSpeed], JAM.policy.p3);
        } else {
          var v25440 = JAM.call(a$$426, null, [window], JAM.policy.p3);
          var v21303 = JAM.call(v25440.height, v25440, [], JAM.policy.p3);
          var v25441 = b$$307.pageY;
          var v27248 = JAM.call(a$$426, null, [document], JAM.policy.p3);
          var v11763 = v21303 - (v25441 - JAM.call(v27248.scrollTop, v27248, [], JAM.policy.p3)) < e$$192.scrollSensitivity;
          if (v11763) {
            var v17361 = JAM.call(a$$426, null, [document], JAM.policy.p3);
            var v25443 = JAM.call(a$$426, null, [document], JAM.policy.p3);
            v11763 = f$$67 = JAM.call(v17361.scrollTop, v17361, [JAM.call(v25443.scrollTop, v25443, [], JAM.policy.p3) + e$$192.scrollSpeed], JAM.policy.p3);
          }
          v4857 = v11763;
        }
        v4857;
      }
      var v11765 = !e$$192.axis;
      if (!v11765) {
        v11765 = e$$192.axis != "y";
      }
      if (v11765) {
        var v4859;
        var v21307 = b$$307.pageX;
        var v25444 = JAM.call(a$$426, null, [document], JAM.policy.p3);
        if (v21307 - JAM.call(v25444.scrollLeft, v25444, [], JAM.policy.p3) < e$$192.scrollSensitivity) {
          var v11766 = JAM.call(a$$426, null, [document], JAM.policy.p3);
          var v21309 = JAM.call(a$$426, null, [document], JAM.policy.p3);
          v4859 = f$$67 = JAM.call(v11766.scrollLeft, v11766, [JAM.call(v21309.scrollLeft, v21309, [], JAM.policy.p3) - e$$192.scrollSpeed], JAM.policy.p3);
        } else {
          var v25445 = JAM.call(a$$426, null, [window], JAM.policy.p3);
          var v21310 = JAM.call(v25445.width, v25445, [], JAM.policy.p3);
          var v25446 = b$$307.pageX;
          var v27249 = JAM.call(a$$426, null, [document], JAM.policy.p3);
          var v11768 = v21310 - (v25446 - JAM.call(v27249.scrollLeft, v27249, [], JAM.policy.p3)) < e$$192.scrollSensitivity;
          if (v11768) {
            var v17372 = JAM.call(a$$426, null, [document], JAM.policy.p3);
            var v25448 = JAM.call(a$$426, null, [document], JAM.policy.p3);
            v11768 = f$$67 = JAM.call(v17372.scrollLeft, v17372, [JAM.call(v25448.scrollLeft, v25448, [], JAM.policy.p3) + e$$192.scrollSpeed], JAM.policy.p3);
          }
          v4859 = v11768;
        }
        v4859;
      }
    }
    var v17374 = f$$67 !== !1;
    if (v17374) {
      v17374 = a$$426.ui.ddmanager;
    }
    var v11770 = v17374;
    if (v11770) {
      v11770 = !e$$192.dropBehaviour;
    }
    var v4862 = v11770;
    if (v4862) {
      var v11771 = a$$426.ui.ddmanager;
      JAM.call(v11771.prepareOffsets, v11771, [d$$198, b$$307], JAM.policy.p3);
    }
    return;
  }
  function v1202(b$$306, c$$250) {
    var v4863 = JAM.call(a$$426, null, [this], JAM.policy.p3);
    var d$$197 = JAM.call(v4863.data, v4863, ["draggable"], JAM.policy.p3);
    var v11772 = d$$197.scrollParent[0] != document;
    if (v11772) {
      v11772 = d$$197.scrollParent[0].tagName != "HTML";
    }
    var v4864 = v11772;
    if (v4864) {
      var v11773 = d$$197.scrollParent;
      var v31101 = JAM.call(v11773.offset, v11773, [], JAM.policy.p3);
      d$$197.overflowOffset = v31101;
    }
    return;
  }
  function v1201(b$$305, c$$249) {
    var v11774 = JAM.call(a$$426, null, [this], JAM.policy.p3);
    var d$$196 = JAM.call(v11774.data, v11774, ["draggable"], JAM.policy.p3).options;
    var v4866 = d$$196._opacity;
    if (v4866) {
      var v11775 = JAM.call(a$$426, null, [c$$249.helper], JAM.policy.p3);
      JAM.call(v11775.css, v11775, ["opacity", d$$196._opacity], JAM.policy.p3);
    }
    return;
  }
  function v1200(b$$304, c$$248) {
    var d$$195 = JAM.call(a$$426, null, [c$$248.helper], JAM.policy.p3);
    var v11777 = JAM.call(a$$426, null, [this], JAM.policy.p3);
    var e$$191 = JAM.call(v11777.data, v11777, ["draggable"], JAM.policy.p3).options;
    var v11778 = JAM.call(d$$195.css, d$$195, ["opacity"], JAM.policy.p3);
    if (v11778) {
      var v31102 = JAM.call(d$$195.css, d$$195, ["opacity"], JAM.policy.p3);
      e$$191._opacity = v31102;
    }
    JAM.call(d$$195.css, d$$195, ["opacity", e$$191.opacity], JAM.policy.p3);
    return;
  }
  function v1199(b$$303, c$$247) {
    var v11780 = JAM.call(a$$426, null, [this], JAM.policy.p3);
    var d$$194 = JAM.call(v11780.data, v11780, ["draggable"], JAM.policy.p3).options;
    var v4870 = d$$194._cursor;
    if (v4870) {
      var v11781 = JAM.call(a$$426, null, ["body"], JAM.policy.p3);
      JAM.call(v11781.css, v11781, ["cursor", d$$194._cursor], JAM.policy.p3);
    }
    return;
  }
  function v1198(b$$302, c$$246) {
    var d$$193 = JAM.call(a$$426, null, ["body"], JAM.policy.p3);
    var v11783 = JAM.call(a$$426, null, [this], JAM.policy.p3);
    var e$$190 = JAM.call(v11783.data, v11783, ["draggable"], JAM.policy.p3).options;
    var v11784 = JAM.call(d$$193.css, d$$193, ["cursor"], JAM.policy.p3);
    if (v11784) {
      var v31103 = JAM.call(d$$193.css, d$$193, ["cursor"], JAM.policy.p3);
      e$$190._cursor = v31103;
    }
    JAM.call(d$$193.css, d$$193, ["cursor", e$$190.cursor], JAM.policy.p3);
    return;
  }
  function v1197(b$$300, c$$244) {
    function v1196(f$$66) {
      function v1195() {
        return c$$244.helper[0];
      }
      this.instance.positionAbs = d$$191.positionAbs;
      this.instance.helperProportions = d$$191.helperProportions;
      this.instance.offset.click = d$$191.offset.click;
      var v11786;
      var v21322 = this.instance;
      if (JAM.call(v21322._intersectsWith, v21322, [this.instance.containerCache], JAM.policy.p3)) {
        var v21324 = this.instance.isOver;
        if (!v21324) {
          this.instance.isOver = 1;
          var v30826 = this.instance;
          var v30863 = JAM.call(a$$426, null, [e$$188], JAM.policy.p3);
          var v30860 = JAM.call(v30863.clone, v30863, [], JAM.policy.p3);
          var v30855 = JAM.call(v30860.removeAttr, v30860, ["id"], JAM.policy.p3);
          var v30842 = JAM.call(v30855.appendTo, v30855, [this.instance.element], JAM.policy.p3);
          var v31104 = JAM.call(v30842.data, v30842, ["sortable-item", !0], JAM.policy.p3);
          v30826.currentItem = v31104;
          this.instance.options._helper = this.instance.options.helper;
          this.instance.options.helper = v1195;
          b$$300.target = this.instance.currentItem[0];
          var v30687 = this.instance;
          JAM.call(v30687._mouseCapture, v30687, [b$$300, !0], JAM.policy.p3);
          var v30608 = this.instance;
          JAM.call(v30608._mouseStart, v30608, [b$$300, !0, !0], JAM.policy.p3);
          this.instance.offset.click.top = d$$191.offset.click.top;
          this.instance.offset.click.left = d$$191.offset.click.left;
          var v30148 = this.instance.offset.parent;
          v30148.left = v30148.left - (d$$191.offset.parent.left - this.instance.offset.parent.left);
          var v29901 = this.instance.offset.parent;
          v29901.top = v29901.top - (d$$191.offset.parent.top - this.instance.offset.parent.top);
          JAM.call(d$$191._trigger, d$$191, ["toSortable", b$$300], JAM.policy.p3);
          d$$191.dropped = this.instance.element;
          d$$191.currentItem = d$$191.element;
          this.instance.fromOutside = d$$191;
        }
        var v21325 = this.instance.currentItem;
        if (v21325) {
          var v25454 = this.instance;
          v21325 = JAM.call(v25454._mouseDrag, v25454, [b$$300], JAM.policy.p3);
        }
        v11786 = v21325;
      } else {
        var v17381 = this.instance.isOver;
        if (v17381) {
          this.instance.isOver = 0;
          this.instance.cancelHelperRemoval = !0;
          this.instance.options.revert = !1;
          var v30150 = this.instance;
          var v30349 = this.instance;
          JAM.call(v30150._trigger, v30150, ["out", b$$300, JAM.call(v30349._uiHash, v30349, [this.instance], JAM.policy.p3)], JAM.policy.p3);
          var v29902 = this.instance;
          JAM.call(v29902._mouseStop, v29902, [b$$300, !0], JAM.policy.p3);
          this.instance.options.helper = this.instance.options._helper;
          var v29126 = this.instance.currentItem;
          JAM.call(v29126.remove, v29126, [], JAM.policy.p3);
          var v28393 = this.instance.placeholder;
          if (v28393) {
            var v29128 = this.instance.placeholder;
            JAM.call(v29128.remove, v29128, [], JAM.policy.p3);
          }
          JAM.call(d$$191._trigger, d$$191, ["fromSortable", b$$300], JAM.policy.p3);
          v17381 = d$$191.dropped = !1;
        }
        v11786 = v17381;
      }
      v11786;
      return;
    }
    var v4873 = JAM.call(a$$426, null, [this], JAM.policy.p3);
    var d$$191 = JAM.call(v4873.data, v4873, ["draggable"], JAM.policy.p3);
    var e$$188 = this;
    JAM.call(a$$426.each, a$$426, [d$$191.sortables, v1196], JAM.policy.p3);
    return;
  }
  function v1194(b$$299, c$$243) {
    function v1193() {
      var v4875;
      if (this.instance.isOver) {
        this.instance.isOver = 0;
        d$$190.cancelHelperRemoval = !0;
        this.instance.cancelHelperRemoval = !1;
        var v27251 = this.shouldRevert;
        if (v27251) {
          this.instance.options.revert = !0;
        }
        var v25455 = this.instance;
        JAM.call(v25455._mouseStop, v25455, [b$$299], JAM.policy.p3);
        this.instance.options.helper = this.instance.options._helper;
        var v17384 = d$$190.options.helper == "original";
        if (v17384) {
          var v21329 = this.instance.currentItem;
          v17384 = JAM.call(v21329.css, v21329, [{top:"auto", left:"auto"}], JAM.policy.p3);
        }
        v4875 = v17384;
      } else {
        this.instance.cancelHelperRemoval = !1;
        var v17386 = this.instance;
        v4875 = JAM.call(v17386._trigger, v17386, ["deactivate", b$$299, e$$187], JAM.policy.p3);
      }
      v4875;
      return;
    }
    var v4876 = JAM.call(a$$426, null, [this], JAM.policy.p3);
    var d$$190 = JAM.call(v4876.data, v4876, ["draggable"], JAM.policy.p3);
    var e$$187 = JAM.call(a$$426.extend, a$$426, [{}, c$$243, {item:d$$190.element}], JAM.policy.p3);
    JAM.call(a$$426.each, a$$426, [d$$190.sortables, v1193], JAM.policy.p3);
    return;
  }
  function v1192(b$$298, c$$241) {
    function v1191() {
      var c$$242 = JAM.call(a$$426.data, a$$426, [this, "sortable"], JAM.policy.p3);
      var v11789 = c$$242;
      if (v11789) {
        v11789 = !c$$242.options.disabled;
      }
      var v4879 = v11789;
      if (v4879) {
        var v21332 = d$$189.sortables;
        JAM.call(v21332.push, v21332, [{instance:c$$242, shouldRevert:c$$242.options.revert}], JAM.policy.p3);
        JAM.call(c$$242.refreshPositions, c$$242, [], JAM.policy.p3);
        JAM.call(c$$242._trigger, c$$242, ["activate", b$$298, f$$63], JAM.policy.p3);
      }
      return;
    }
    var v4880 = JAM.call(a$$426, null, [this], JAM.policy.p3);
    var d$$189 = JAM.call(v4880.data, v4880, ["draggable"], JAM.policy.p3);
    var e$$186 = d$$189.options;
    var f$$63 = JAM.call(a$$426.extend, a$$426, [{}, c$$241, {item:d$$189.element}], JAM.policy.p3);
    d$$189.sortables = [];
    var v11791 = JAM.call(a$$426, null, [e$$186.connectToSortable], JAM.policy.p3);
    JAM.call(v11791.each, v11791, [v1191], JAM.policy.p3);
    return;
  }
  function v1190(a$$428) {
    return{helper:this.helper, position:this.position, originalPosition:this.originalPosition, offset:this.positionAbs};
  }
  function v1189(b$$297, c$$240, d$$188) {
    var v21334 = d$$188;
    if (!v21334) {
      v21334 = JAM.call(this._uiHash, this, [], JAM.policy.p3);
    }
    d$$188 = v21334;
    var v21335 = a$$426.ui.plugin;
    JAM.call(v21335.call, v21335, [this, b$$297, [c$$240, d$$188]], JAM.policy.p3);
    var v17389 = b$$297 == "drag";
    if (v17389) {
      var v31105 = JAM.call(this._convertPositionTo, this, ["absolute"], JAM.policy.p3);
      this.positionAbs = v31105;
    }
    var v11792 = a$$426.Widget.prototype._trigger;
    return JAM.call(v11792.call, v11792, [this, b$$297, c$$240, d$$188], JAM.policy.p3);
  }
  function v1188() {
    var v21338 = this.helper;
    JAM.call(v21338.removeClass, v21338, ["ui-draggable-dragging"], JAM.policy.p3);
    var v25463 = this.helper[0] != this.element[0];
    if (v25463) {
      v25463 = !this.cancelHelperRemoval;
    }
    var v21339 = v25463;
    if (v21339) {
      var v25464 = this.helper;
      JAM.call(v25464.remove, v25464, [], JAM.policy.p3);
    }
    this.helper = null;
    this.cancelHelperRemoval = !1;
    return;
  }
  function v1187(b$$296) {
    var c$$239 = this.options;
    var v4886;
    var v17391 = this.cssPosition == "absolute";
    if (v17391) {
      var v21341 = this.scrollParent[0] == document;
      if (!v21341) {
        var v27258 = a$$426.ui;
        v21341 = !JAM.call(v27258.contains, v27258, [this.scrollParent[0], this.offsetParent[0]], JAM.policy.p3);
      }
      v17391 = v21341;
    }
    if (v17391) {
      v4886 = this.offsetParent;
    } else {
      v4886 = this.scrollParent;
    }
    var d$$187 = v4886;
    var e$$185 = JAM.call(/(html|body)/i.test, /(html|body)/i, [d$$187[0].tagName], JAM.policy.p3);
    var f$$62 = b$$296.pageX;
    var g$$108 = b$$296.pageY;
    if (this.originalPosition) {
      var h$$87;
      if (this.containment) {
        if (this.relative_container) {
          var v4888 = this.relative_container;
          var i$$148 = JAM.call(v4888.offset, v4888, [], JAM.policy.p3);
          h$$87 = [this.containment[0] + i$$148.left, this.containment[1] + i$$148.top, this.containment[2] + i$$148.left, this.containment[3] + i$$148.top];
        } else {
          h$$87 = this.containment;
        }
        var v21342 = b$$296.pageX - this.offset.click.left < h$$87[0];
        if (v21342) {
          f$$62 = h$$87[0] + this.offset.click.left;
        }
        var v21343 = b$$296.pageY - this.offset.click.top < h$$87[1];
        if (v21343) {
          g$$108 = h$$87[1] + this.offset.click.top;
        }
        var v17396 = b$$296.pageX - this.offset.click.left > h$$87[2];
        if (v17396) {
          f$$62 = h$$87[2] + this.offset.click.left;
        }
        var v11803 = b$$296.pageY - this.offset.click.top > h$$87[3];
        if (v11803) {
          g$$108 = h$$87[3] + this.offset.click.top;
        }
      }
      if (c$$239.grid) {
        var v4895;
        if (c$$239.grid[1]) {
          v4895 = this.originalPageY + JAM.call(Math.round, Math, [(g$$108 - this.originalPageY) / c$$239.grid[1]], JAM.policy.p3) * c$$239.grid[1];
        } else {
          v4895 = this.originalPageY;
        }
        var j$$64 = v4895;
        var v4896;
        if (h$$87) {
          var v11807;
          var v21353 = j$$64 - this.offset.click.top < h$$87[1];
          if (!v21353) {
            v21353 = j$$64 - this.offset.click.top > h$$87[3];
          }
          if (v21353) {
            var v17404;
            if (j$$64 - this.offset.click.top < h$$87[1]) {
              v17404 = j$$64 + c$$239.grid[1];
            } else {
              v17404 = j$$64 - c$$239.grid[1];
            }
            v11807 = v17404;
          } else {
            v11807 = j$$64;
          }
          v4896 = v11807;
        } else {
          v4896 = j$$64;
        }
        g$$108 = v4896;
        var v4897;
        if (c$$239.grid[0]) {
          v4897 = this.originalPageX + JAM.call(Math.round, Math, [(f$$62 - this.originalPageX) / c$$239.grid[0]], JAM.policy.p3) * c$$239.grid[0];
        } else {
          v4897 = this.originalPageX;
        }
        var k$$42 = v4897;
        var v4898;
        if (h$$87) {
          var v11811;
          var v21359 = k$$42 - this.offset.click.left < h$$87[0];
          if (!v21359) {
            v21359 = k$$42 - this.offset.click.left > h$$87[2];
          }
          if (v21359) {
            var v17409;
            if (k$$42 - this.offset.click.left < h$$87[0]) {
              v17409 = k$$42 + c$$239.grid[0];
            } else {
              v17409 = k$$42 - c$$239.grid[0];
            }
            v11811 = v17409;
          } else {
            v11811 = k$$42;
          }
          v4898 = v11811;
        } else {
          v4898 = k$$42;
        }
        f$$62 = v4898;
      }
    }
    var v11812 = g$$108 - this.offset.click.top - this.offset.relative.top - this.offset.parent.top;
    var v17413;
    var v27282 = a$$426.browser.safari;
    if (v27282) {
      v27282 = a$$426.browser.version < 526;
    }
    var v25506 = v27282;
    if (v25506) {
      v25506 = this.cssPosition == "fixed";
    }
    if (v25506) {
      v17413 = 0;
    } else {
      var v21366;
      if (this.cssPosition == "fixed") {
        var v27285 = this.scrollParent;
        v21366 = -JAM.call(v27285.scrollTop, v27285, [], JAM.policy.p3);
      } else {
        var v25508;
        if (e$$185) {
          v25508 = 0;
        } else {
          v25508 = JAM.call(d$$187.scrollTop, d$$187, [], JAM.policy.p3);
        }
        v21366 = v25508;
      }
      v17413 = v21366;
    }
    var v4901 = v11812 + v17413;
    var v11814 = f$$62 - this.offset.click.left - this.offset.relative.left - this.offset.parent.left;
    var v17416;
    var v27288 = a$$426.browser.safari;
    if (v27288) {
      v27288 = a$$426.browser.version < 526;
    }
    var v25513 = v27288;
    if (v25513) {
      v25513 = this.cssPosition == "fixed";
    }
    if (v25513) {
      v17416 = 0;
    } else {
      var v21371;
      if (this.cssPosition == "fixed") {
        var v27291 = this.scrollParent;
        v21371 = -JAM.call(v27291.scrollLeft, v27291, [], JAM.policy.p3);
      } else {
        var v25515;
        if (e$$185) {
          v25515 = 0;
        } else {
          v25515 = JAM.call(d$$187.scrollLeft, d$$187, [], JAM.policy.p3);
        }
        v21371 = v25515;
      }
      v17416 = v21371;
    }
    return{top:v4901, left:v11814 + v17416};
  }
  function v1186(b$$295, c$$238) {
    if (!c$$238) {
      c$$238 = this.position;
    }
    var v4903;
    if (b$$295 == "absolute") {
      v4903 = 1;
    } else {
      v4903 = -1;
    }
    var d$$186 = v4903;
    var e$$184 = this.options;
    var v4904;
    var v17417 = this.cssPosition == "absolute";
    if (v17417) {
      var v21374 = this.scrollParent[0] == document;
      if (!v21374) {
        var v27293 = a$$426.ui;
        v21374 = !JAM.call(v27293.contains, v27293, [this.scrollParent[0], this.offsetParent[0]], JAM.policy.p3);
      }
      v17417 = v21374;
    }
    if (v17417) {
      v4904 = this.offsetParent;
    } else {
      v4904 = this.scrollParent;
    }
    var f$$61 = v4904;
    var g$$107 = JAM.call(/(html|body)/i.test, /(html|body)/i, [f$$61[0].tagName], JAM.policy.p3);
    var v11820 = c$$238.top + this.offset.relative.top * d$$186 + this.offset.parent.top * d$$186;
    var v17420;
    var v27298 = a$$426.browser.safari;
    if (v27298) {
      v27298 = a$$426.browser.version < 526;
    }
    var v25522 = v27298;
    if (v25522) {
      v25522 = this.cssPosition == "fixed";
    }
    if (v25522) {
      v17420 = 0;
    } else {
      var v25523;
      if (this.cssPosition == "fixed") {
        var v28423 = this.scrollParent;
        v25523 = -JAM.call(v28423.scrollTop, v28423, [], JAM.policy.p3);
      } else {
        var v27301;
        if (g$$107) {
          v27301 = 0;
        } else {
          v27301 = JAM.call(f$$61.scrollTop, f$$61, [], JAM.policy.p3);
        }
        v25523 = v27301;
      }
      v17420 = v25523 * d$$186;
    }
    var v4906 = v11820 - v17420;
    var v11822 = c$$238.left + this.offset.relative.left * d$$186 + this.offset.parent.left * d$$186;
    var v17423;
    var v27305 = a$$426.browser.safari;
    if (v27305) {
      v27305 = a$$426.browser.version < 526;
    }
    var v25526 = v27305;
    if (v25526) {
      v25526 = this.cssPosition == "fixed";
    }
    if (v25526) {
      v17423 = 0;
    } else {
      var v25527;
      if (this.cssPosition == "fixed") {
        var v28428 = this.scrollParent;
        v25527 = -JAM.call(v28428.scrollLeft, v28428, [], JAM.policy.p3);
      } else {
        var v27308;
        if (g$$107) {
          v27308 = 0;
        } else {
          v27308 = JAM.call(f$$61.scrollLeft, f$$61, [], JAM.policy.p3);
        }
        v25527 = v27308;
      }
      v17423 = v25527 * d$$186;
    }
    return{top:v4906, left:v11822 - v17423};
  }
  function v1185() {
    var b$$294 = this.options;
    var v4908 = b$$294.containment == "parent";
    if (v4908) {
      b$$294.containment = this.helper[0].parentNode;
    }
    var v11826 = b$$294.containment == "document";
    if (!v11826) {
      v11826 = b$$294.containment == "window";
    }
    if (v11826) {
      var v11827;
      if (b$$294.containment == "document") {
        v11827 = 0;
      } else {
        var v25528 = JAM.call(a$$426, null, [window], JAM.policy.p3);
        v11827 = JAM.call(v25528.scrollLeft, v25528, [], JAM.policy.p3) - this.offset.relative.left - this.offset.parent.left;
      }
      var v4909 = v11827;
      var v11828;
      if (b$$294.containment == "document") {
        v11828 = 0;
      } else {
        var v25531 = JAM.call(a$$426, null, [window], JAM.policy.p3);
        v11828 = JAM.call(v25531.scrollTop, v25531, [], JAM.policy.p3) - this.offset.relative.top - this.offset.parent.top;
      }
      var v4910 = v11828;
      var v25534;
      if (b$$294.containment == "document") {
        v25534 = 0;
      } else {
        var v27312 = JAM.call(a$$426, null, [window], JAM.policy.p3);
        v25534 = JAM.call(v27312.scrollLeft, v27312, [], JAM.policy.p3);
      }
      var v21393 = v25534;
      var v28430;
      if (b$$294.containment == "document") {
        v28430 = document;
      } else {
        v28430 = window;
      }
      var v25535 = JAM.call(a$$426, null, [v28430], JAM.policy.p3);
      var v4911 = v21393 + JAM.call(v25535.width, v25535, [], JAM.policy.p3) - this.helperProportions.width - this.margins.left;
      var v25536;
      if (b$$294.containment == "document") {
        v25536 = 0;
      } else {
        var v27315 = JAM.call(a$$426, null, [window], JAM.policy.p3);
        v25536 = JAM.call(v27315.scrollTop, v27315, [], JAM.policy.p3);
      }
      var v21396 = v25536;
      var v29144;
      if (b$$294.containment == "document") {
        v29144 = document;
      } else {
        v29144 = window;
      }
      var v27317 = JAM.call(a$$426, null, [v29144], JAM.policy.p3);
      var v25537 = JAM.call(v27317.height, v27317, [], JAM.policy.p3);
      if (!v25537) {
        v25537 = document.body.parentNode.scrollHeight;
      }
      this.containment = [v4909, v4910, v4911, v21396 + v25537 - this.helperProportions.height - this.margins.top];
    }
    var v11833 = !JAM.call(/^(document|window|parent)$/.test, /^(document|window|parent)$/, [b$$294.containment], JAM.policy.p3);
    if (v11833) {
      v11833 = b$$294.containment.constructor != Array;
    }
    if (v11833) {
      var c$$237 = JAM.call(a$$426, null, [b$$294.containment], JAM.policy.p3);
      var d$$185 = c$$237[0];
      if (!d$$185) {
        return;
      }
      var e$$183 = JAM.call(c$$237.offset, c$$237, [], JAM.policy.p3);
      var v11834 = JAM.call(a$$426, null, [d$$185], JAM.policy.p3);
      var f$$60 = JAM.call(v11834.css, v11834, ["overflow"], JAM.policy.p3) != "hidden";
      var v27320 = JAM.call(a$$426, null, [d$$185], JAM.policy.p3);
      var v21401 = parseInt(JAM.call(v27320.css, v27320, ["borderLeftWidth"], JAM.policy.p3), 10);
      if (!v21401) {
        v21401 = 0;
      }
      var v17442 = v21401;
      var v27321 = JAM.call(a$$426, null, [d$$185], JAM.policy.p3);
      var v21402 = parseInt(JAM.call(v27321.css, v27321, ["paddingLeft"], JAM.policy.p3), 10);
      if (!v21402) {
        v21402 = 0;
      }
      var v11835 = v17442 + v21402;
      var v27322 = JAM.call(a$$426, null, [d$$185], JAM.policy.p3);
      var v21403 = parseInt(JAM.call(v27322.css, v27322, ["borderTopWidth"], JAM.policy.p3), 10);
      if (!v21403) {
        v21403 = 0;
      }
      var v17444 = v21403;
      var v27323 = JAM.call(a$$426, null, [d$$185], JAM.policy.p3);
      var v21404 = parseInt(JAM.call(v27323.css, v27323, ["paddingTop"], JAM.policy.p3), 10);
      if (!v21404) {
        v21404 = 0;
      }
      var v11836 = v17444 + v21404;
      var v29145;
      if (f$$60) {
        v29145 = JAM.call(Math.max, Math, [d$$185.scrollWidth, d$$185.offsetWidth], JAM.policy.p3);
      } else {
        v29145 = d$$185.offsetWidth;
      }
      var v28434 = v29145;
      var v29907 = JAM.call(a$$426, null, [d$$185], JAM.policy.p3);
      var v29146 = parseInt(JAM.call(v29907.css, v29907, ["borderLeftWidth"], JAM.policy.p3), 10);
      if (!v29146) {
        v29146 = 0;
      }
      var v27324 = v28434 - v29146;
      var v29613 = JAM.call(a$$426, null, [d$$185], JAM.policy.p3);
      var v28436 = parseInt(JAM.call(v29613.css, v29613, ["paddingRight"], JAM.policy.p3), 10);
      if (!v28436) {
        v28436 = 0;
      }
      var v11837 = v27324 - v28436 - this.helperProportions.width - this.margins.left - this.margins.right;
      var v29149;
      if (f$$60) {
        v29149 = JAM.call(Math.max, Math, [d$$185.scrollHeight, d$$185.offsetHeight], JAM.policy.p3);
      } else {
        v29149 = d$$185.offsetHeight;
      }
      var v28437 = v29149;
      var v29908 = JAM.call(a$$426, null, [d$$185], JAM.policy.p3);
      var v29150 = parseInt(JAM.call(v29908.css, v29908, ["borderTopWidth"], JAM.policy.p3), 10);
      if (!v29150) {
        v29150 = 0;
      }
      var v27327 = v28437 - v29150;
      var v29618 = JAM.call(a$$426, null, [d$$185], JAM.policy.p3);
      var v28439 = parseInt(JAM.call(v29618.css, v29618, ["paddingBottom"], JAM.policy.p3), 10);
      if (!v28439) {
        v28439 = 0;
      }
      this.containment = [v11835, v11836, v11837, v27327 - v28439 - this.helperProportions.height - this.margins.top - this.margins.bottom];
      this.relative_container = c$$237;
    } else {
      var v4917 = b$$294.containment.constructor == Array;
      if (v4917) {
        this.containment = b$$294.containment;
      }
    }
    return;
  }
  function v1184() {
    var v11840 = this.helper;
    var v4919 = JAM.call(v11840.outerWidth, v11840, [], JAM.policy.p3);
    var v11841 = this.helper;
    this.helperProportions = {width:v4919, height:JAM.call(v11841.outerHeight, v11841, [], JAM.policy.p3)};
    return;
  }
  function v1183() {
    var v21411 = this.element;
    var v11842 = parseInt(JAM.call(v21411.css, v21411, ["marginLeft"], JAM.policy.p3), 10);
    if (!v11842) {
      v11842 = 0;
    }
    var v4921 = v11842;
    var v21412 = this.element;
    var v11843 = parseInt(JAM.call(v21412.css, v21412, ["marginTop"], JAM.policy.p3), 10);
    if (!v11843) {
      v11843 = 0;
    }
    var v4922 = v11843;
    var v21413 = this.element;
    var v11844 = parseInt(JAM.call(v21413.css, v21413, ["marginRight"], JAM.policy.p3), 10);
    if (!v11844) {
      v11844 = 0;
    }
    var v4923 = v11844;
    var v21414 = this.element;
    var v11845 = parseInt(JAM.call(v21414.css, v21414, ["marginBottom"], JAM.policy.p3), 10);
    if (!v11845) {
      v11845 = 0;
    }
    this.margins = {left:v4921, top:v4922, right:v4923, bottom:v11845};
    return;
  }
  function v1182() {
    if (this.cssPosition == "relative") {
      var v4925 = this.element;
      var a$$427 = JAM.call(v4925.position, v4925, [], JAM.policy.p3);
      var v17459 = a$$427.top;
      var v27330 = this.helper;
      var v21415 = parseInt(JAM.call(v27330.css, v27330, ["top"], JAM.policy.p3), 10);
      if (!v21415) {
        v21415 = 0;
      }
      var v11847 = v17459 - v21415;
      var v17461 = this.scrollParent;
      var v4926 = v11847 + JAM.call(v17461.scrollTop, v17461, [], JAM.policy.p3);
      var v17462 = a$$427.left;
      var v27331 = this.helper;
      var v21416 = parseInt(JAM.call(v27331.css, v27331, ["left"], JAM.policy.p3), 10);
      if (!v21416) {
        v21416 = 0;
      }
      var v11849 = v17462 - v21416;
      var v17464 = this.scrollParent;
      return{top:v4926, left:v11849 + JAM.call(v17464.scrollLeft, v17464, [], JAM.policy.p3)};
    }
    return{top:0, left:0};
  }
  function v1181() {
    var v4929 = this.helper;
    var v31106 = JAM.call(v4929.offsetParent, v4929, [], JAM.policy.p3);
    this.offsetParent = v31106;
    var v4930 = this.offsetParent;
    var b$$293 = JAM.call(v4930.offset, v4930, [], JAM.policy.p3);
    var v17465 = this.cssPosition == "absolute";
    if (v17465) {
      v17465 = this.scrollParent[0] != document;
    }
    var v11851 = v17465;
    if (v11851) {
      var v17466 = a$$426.ui;
      v11851 = JAM.call(v17466.contains, v17466, [this.scrollParent[0], this.offsetParent[0]], JAM.policy.p3);
    }
    var v4931 = v11851;
    if (v4931) {
      var v21421 = b$$293.left;
      var v25557 = this.scrollParent;
      b$$293.left = v21421 + JAM.call(v25557.scrollLeft, v25557, [], JAM.policy.p3);
      var v21423 = b$$293.top;
      var v25558 = this.scrollParent;
      b$$293.top = v21423 + JAM.call(v25558.scrollTop, v25558, [], JAM.policy.p3);
    }
    var v11852 = this.offsetParent[0] == document.body;
    if (!v11852) {
      var v21426 = this.offsetParent[0].tagName;
      if (v21426) {
        var v27333 = this.offsetParent[0].tagName;
        v21426 = JAM.call(v27333.toLowerCase, v27333, [], JAM.policy.p3) == "html";
      }
      var v17471 = v21426;
      if (v17471) {
        v17471 = a$$426.browser.msie;
      }
      v11852 = v17471;
    }
    if (v11852) {
      b$$293 = {top:0, left:0};
    }
    var v11853 = b$$293.top;
    var v25561 = this.offsetParent;
    var v17473 = parseInt(JAM.call(v25561.css, v25561, ["borderTopWidth"], JAM.policy.p3), 10);
    if (!v17473) {
      v17473 = 0;
    }
    var v4933 = v11853 + v17473;
    var v11855 = b$$293.left;
    var v25562 = this.offsetParent;
    var v17474 = parseInt(JAM.call(v25562.css, v25562, ["borderLeftWidth"], JAM.policy.p3), 10);
    if (!v17474) {
      v17474 = 0;
    }
    return{top:v4933, left:v11855 + v17474};
  }
  function v1180(b$$292) {
    var v27334 = typeof b$$292 == "string";
    if (v27334) {
      b$$292 = JAM.call(b$$292.split, b$$292, [" "], JAM.policy.p3);
    }
    var v27335 = JAM.call(a$$426.isArray, a$$426, [b$$292], JAM.policy.p3);
    if (v27335) {
      var v28442 = +b$$292[0];
      var v29155 = +b$$292[1];
      if (!v29155) {
        v29155 = 0;
      }
      b$$292 = {left:v28442, top:v29155};
    }
    var v25563 = "left" in b$$292;
    if (v25563) {
      this.offset.click.left = b$$292.left + this.margins.left;
    }
    var v21432 = "right" in b$$292;
    if (v21432) {
      this.offset.click.left = this.helperProportions.width - b$$292.right + this.margins.left;
    }
    var v17475 = "top" in b$$292;
    if (v17475) {
      this.offset.click.top = b$$292.top + this.margins.top;
    }
    var v11857 = "bottom" in b$$292;
    if (v11857) {
      this.offset.click.top = this.helperProportions.height - b$$292.bottom + this.margins.top;
    }
    return;
  }
  function v1179(b$$291) {
    var c$$236 = this.options;
    var v4935;
    if (JAM.call(a$$426.isFunction, a$$426, [c$$236.helper], JAM.policy.p3)) {
      var v17478 = c$$236.helper;
      v4935 = JAM.call(a$$426, null, [JAM.call(v17478.apply, v17478, [this.element[0], [b$$291]], JAM.policy.p3)], JAM.policy.p3);
    } else {
      var v11859;
      if (c$$236.helper == "clone") {
        var v21439 = this.element;
        var v17481 = JAM.call(v21439.clone, v21439, [], JAM.policy.p3);
        v11859 = JAM.call(v17481.removeAttr, v17481, ["id"], JAM.policy.p3);
      } else {
        v11859 = this.element;
      }
      v4935 = v11859;
    }
    var d$$184 = v4935;
    var v17483 = JAM.call(d$$184.parents, d$$184, ["body"], JAM.policy.p3).length;
    if (!v17483) {
      var v25571;
      if (c$$236.appendTo == "parent") {
        v25571 = this.element[0].parentNode;
      } else {
        v25571 = c$$236.appendTo;
      }
      JAM.call(d$$184.appendTo, d$$184, [v25571], JAM.policy.p3);
    }
    var v21443 = d$$184[0] != this.element[0];
    if (v21443) {
      v21443 = !JAM.call(/(fixed|absolute)/.test, /(fixed|absolute)/, [JAM.call(d$$184.css, d$$184, ["position"], JAM.policy.p3)], JAM.policy.p3);
    }
    var v17484 = v21443;
    if (v17484) {
      JAM.call(d$$184.css, d$$184, ["position", "absolute"], JAM.policy.p3);
    }
    return d$$184;
  }
  function v1178(b$$290) {
    function v1177() {
      var v4936 = this == b$$290.target;
      if (v4936) {
        c$$235 = !0;
      }
      return;
    }
    var v4937;
    var v17485 = !this.options.handle;
    if (!v17485) {
      v17485 = !JAM.call(a$$426, null, [this.options.handle, this.element], JAM.policy.p3).length;
    }
    if (v17485) {
      v4937 = !0;
    } else {
      v4937 = !1;
    }
    var c$$235 = v4937;
    var v21447 = JAM.call(a$$426, null, [this.options.handle, this.element], JAM.policy.p3);
    var v17486 = JAM.call(v21447.find, v21447, ["*"], JAM.policy.p3);
    var v11863 = JAM.call(v17486.andSelf, v17486, [], JAM.policy.p3);
    JAM.call(v11863.each, v11863, [v1177], JAM.policy.p3);
    return c$$235;
  }
  function v1176() {
    var v11864;
    var v21448 = this.helper;
    if (JAM.call(v21448.is, v21448, [".ui-draggable-dragging"], JAM.policy.p3)) {
      v11864 = JAM.call(this._mouseUp, this, [{}], JAM.policy.p3);
    } else {
      v11864 = JAM.call(this._clear, this, [], JAM.policy.p3);
    }
    v11864;
    return this;
  }
  function v1175(b$$289) {
    function v1174() {
      var v4938 = this.parentNode;
      JAM.call(v4938.removeChild, v4938, [this], JAM.policy.p3);
      return;
    }
    var v17488 = JAM.call(a$$426, null, ["div.ui-draggable-iframeFix"], JAM.policy.p3);
    JAM.call(v17488.each, v17488, [v1174], JAM.policy.p3);
    var v17489 = a$$426.ui.ddmanager;
    if (v17489) {
      var v21450 = a$$426.ui.ddmanager;
      JAM.call(v21450.dragStop, v21450, [this, b$$289], JAM.policy.p3);
    }
    var v11865 = a$$426.ui.mouse.prototype._mouseUp;
    return JAM.call(v11865.call, v11865, [this, b$$289], JAM.policy.p3);
  }
  function v1173(b$$288) {
    function v1172() {
      var v4939 = JAM.call(f$$59._trigger, f$$59, ["stop", b$$288], JAM.policy.p3) !== !1;
      if (v4939) {
        JAM.call(f$$59._clear, f$$59, [], JAM.policy.p3);
      }
      return;
    }
    var c$$234 = !1;
    var v17491 = a$$426.ui.ddmanager;
    if (v17491) {
      v17491 = !this.options.dropBehaviour;
    }
    var v11868 = v17491;
    if (v11868) {
      var v17492 = a$$426.ui.ddmanager;
      c$$234 = JAM.call(v17492.drop, v17492, [this, b$$288], JAM.policy.p3);
    }
    var v11869 = this.dropped;
    if (v11869) {
      c$$234 = this.dropped;
      this.dropped = !1;
    }
    var d$$183 = this.element[0];
    var e$$182 = !1;
    var v11870 = d$$183;
    if (v11870) {
      v11870 = d$$183 = d$$183.parentNode;
    }
    var v4942 = v11870;
    for (;v4942;) {
      var v4941 = d$$183 == document;
      if (v4941) {
        e$$182 = !0;
      }
      var v11871 = d$$183;
      if (v11871) {
        v11871 = d$$183 = d$$183.parentNode;
      }
      v4942 = v11871;
    }
    var v11872 = !e$$182;
    if (v11872) {
      v11872 = this.options.helper === "original";
    }
    if (v11872) {
      return!1;
    }
    var v25582 = this.options.revert == "invalid";
    if (v25582) {
      v25582 = !c$$234;
    }
    var v21456 = v25582;
    if (!v21456) {
      var v25583 = this.options.revert == "valid";
      if (v25583) {
        v25583 = c$$234;
      }
      v21456 = v25583;
    }
    var v17494 = v21456;
    if (!v17494) {
      v17494 = this.options.revert === !0;
    }
    var v11873 = v17494;
    if (!v11873) {
      var v17495 = JAM.call(a$$426.isFunction, a$$426, [this.options.revert], JAM.policy.p3);
      if (v17495) {
        var v21461 = this.options.revert;
        v17495 = JAM.call(v21461.call, v21461, [this.element, c$$234], JAM.policy.p3);
      }
      v11873 = v17495;
    }
    if (v11873) {
      var f$$59 = this;
      var v4944 = JAM.call(a$$426, null, [this.helper], JAM.policy.p3);
      JAM.call(v4944.animate, v4944, [this.originalPosition, parseInt(this.options.revertDuration, 10), v1172], JAM.policy.p3);
    } else {
      var v4947 = JAM.call(this._trigger, this, ["stop", b$$288], JAM.policy.p3) !== !1;
      if (v4947) {
        JAM.call(this._clear, this, [], JAM.policy.p3);
      }
    }
    return!1;
  }
  function v1171(b$$287, c$$233) {
    var v31107 = JAM.call(this._generatePosition, this, [b$$287], JAM.policy.p3);
    this.position = v31107;
    var v31108 = JAM.call(this._convertPositionTo, this, ["absolute"], JAM.policy.p3);
    this.positionAbs = v31108;
    if (!c$$233) {
      var d$$182 = JAM.call(this._uiHash, this, [], JAM.policy.p3);
      if (JAM.call(this._trigger, this, ["drag", b$$287, d$$182], JAM.policy.p3) === !1) {
        JAM.call(this._mouseUp, this, [{}], JAM.policy.p3);
        return!1;
      }
      this.position = d$$182.position;
    }
    var v11880 = !this.options.axis;
    if (!v11880) {
      v11880 = this.options.axis != "y";
    }
    if (v11880) {
      this.helper[0].style.left = this.position.left + "px";
    }
    var v11883 = !this.options.axis;
    if (!v11883) {
      v11883 = this.options.axis != "x";
    }
    if (v11883) {
      this.helper[0].style.top = this.position.top + "px";
    }
    var v11886 = a$$426.ui.ddmanager;
    if (v11886) {
      var v17509 = a$$426.ui.ddmanager;
      JAM.call(v17509.drag, v17509, [this, b$$287], JAM.policy.p3);
    }
    return!1;
  }
  function v1170(b$$286) {
    var c$$232 = this.options;
    var v31109 = JAM.call(this._createHelper, this, [b$$286], JAM.policy.p3);
    this.helper = v31109;
    var v30741 = this.helper;
    JAM.call(v30741.addClass, v30741, ["ui-draggable-dragging"], JAM.policy.p3);
    JAM.call(this._cacheHelperProportions, this, [], JAM.policy.p3);
    var v30619 = a$$426.ui.ddmanager;
    if (v30619) {
      a$$426.ui.ddmanager.current = this;
    }
    JAM.call(this._cacheMargins, this, [], JAM.policy.p3);
    var v30351 = this.helper;
    var v31110 = JAM.call(v30351.css, v30351, ["position"], JAM.policy.p3);
    this.cssPosition = v31110;
    var v30153 = this.helper;
    var v31111 = JAM.call(v30153.scrollParent, v30153, [], JAM.policy.p3);
    this.scrollParent = v31111;
    var v29909 = this.element;
    var v31112 = JAM.call(v29909.offset, v29909, [], JAM.policy.p3);
    this.offset = this.positionAbs = v31112;
    this.offset = {top:this.offset.top - this.margins.top, left:this.offset.left - this.margins.left};
    JAM.call(a$$426.extend, a$$426, [this.offset, {click:{left:b$$286.pageX - this.offset.left, top:b$$286.pageY - this.offset.top}, parent:JAM.call(this._getParentOffset, this, [], JAM.policy.p3), relative:JAM.call(this._getRelativeOffset, this, [], JAM.policy.p3)}], JAM.policy.p3);
    var v31113 = JAM.call(this._generatePosition, this, [b$$286], JAM.policy.p3);
    this.originalPosition = this.position = v31113;
    this.originalPageX = b$$286.pageX;
    this.originalPageY = b$$286.pageY;
    var v21468 = c$$232.cursorAt;
    if (v21468) {
      JAM.call(this._adjustOffsetFromHelper, this, [c$$232.cursorAt], JAM.policy.p3);
    }
    var v17510 = c$$232.containment;
    if (v17510) {
      JAM.call(this._setContainment, this, [], JAM.policy.p3);
    }
    var v11887;
    if (JAM.call(this._trigger, this, ["start", b$$286], JAM.policy.p3) === !1) {
      JAM.call(this._clear, this, [], JAM.policy.p3);
      v11887 = !1;
    } else {
      JAM.call(this._cacheHelperProportions, this, [], JAM.policy.p3);
      var v29160 = a$$426.ui.ddmanager;
      if (v29160) {
        v29160 = !c$$232.dropBehaviour;
      }
      var v28455 = v29160;
      if (v28455) {
        var v29161 = a$$426.ui.ddmanager;
        JAM.call(v29161.prepareOffsets, v29161, [this, b$$286], JAM.policy.p3);
      }
      JAM.call(this._mouseDrag, this, [b$$286, !0], JAM.policy.p3);
      var v25589 = a$$426.ui.ddmanager;
      if (v25589) {
        var v27353 = a$$426.ui.ddmanager;
        JAM.call(v27353.dragStart, v27353, [this, b$$286], JAM.policy.p3);
      }
      v11887 = !0;
    }
    return v11887;
  }
  function v1169(b$$285) {
    function v1168() {
      var v17512 = JAM.call(a$$426, null, ['<div class="ui-draggable-iframeFix" style="background: #fff;"></div>'], JAM.policy.p3);
      var v11888 = JAM.call(v17512.css, v17512, [{width:this.offsetWidth + "px", height:this.offsetHeight + "px", position:"absolute", opacity:"0.001", zIndex:1E3}], JAM.policy.p3);
      var v17514 = JAM.call(a$$426, null, [this], JAM.policy.p3);
      var v4955 = JAM.call(v11888.css, v11888, [JAM.call(v17514.offset, v17514, [], JAM.policy.p3)], JAM.policy.p3);
      JAM.call(v4955.appendTo, v4955, ["body"], JAM.policy.p3);
      return;
    }
    var c$$231 = this.options;
    var v4956;
    var v21473 = this.helper;
    if (!v21473) {
      v21473 = c$$231.disabled;
    }
    var v17515 = v21473;
    if (!v17515) {
      var v21474 = JAM.call(a$$426, null, [b$$285.target], JAM.policy.p3);
      v17515 = JAM.call(v21474.is, v21474, [".ui-resizable-handle"], JAM.policy.p3);
    }
    if (v17515) {
      v4956 = !1;
    } else {
      var v31114 = JAM.call(this._getHandle, this, [b$$285], JAM.policy.p3);
      this.handle = v31114;
      var v17516;
      if (this.handle) {
        var v25594 = c$$231.iframeFix;
        if (v25594) {
          var v29162;
          if (c$$231.iframeFix === !0) {
            v29162 = "iframe";
          } else {
            v29162 = c$$231.iframeFix;
          }
          var v27354 = JAM.call(a$$426, null, [v29162], JAM.policy.p3);
          JAM.call(v27354.each, v27354, [v1168], JAM.policy.p3);
        }
        v17516 = !0;
      } else {
        v17516 = !1;
      }
      v4956 = v17516;
    }
    return v4956;
  }
  function v1167() {
    var v17517 = this.element;
    if (!JAM.call(v17517.data, v17517, ["draggable"], JAM.policy.p3)) {
      return;
    }
    var v25595 = this.element;
    var v21477 = JAM.call(v25595.removeData, v25595, ["draggable"], JAM.policy.p3);
    var v17518 = JAM.call(v21477.unbind, v21477, [".draggable"], JAM.policy.p3);
    JAM.call(v17518.removeClass, v17518, ["ui-draggable ui-draggable-dragging ui-draggable-disabled"], JAM.policy.p3);
    JAM.call(this._mouseDestroy, this, [], JAM.policy.p3);
    return this;
  }
  function v1166() {
    var v25596 = this.options.helper == "original";
    if (v25596) {
      var v29163 = this.element;
      v25596 = !JAM.call(/^(?:r|a|f)/.test, /^(?:r|a|f)/, [JAM.call(v29163.css, v29163, ["position"], JAM.policy.p3)], JAM.policy.p3);
    }
    var v21478 = v25596;
    if (v21478) {
      this.element[0].style.position = "relative";
    }
    var v21479 = this.options.addClasses;
    if (v21479) {
      var v25599 = this.element;
      JAM.call(v25599.addClass, v25599, ["ui-draggable"], JAM.policy.p3);
    }
    var v17519 = this.options.disabled;
    if (v17519) {
      var v21481 = this.element;
      JAM.call(v21481.addClass, v21481, ["ui-draggable-disabled"], JAM.policy.p3);
    }
    JAM.call(this._mouseInit, this, [], JAM.policy.p3);
    return;
  }
  JAM.call(a$$426.widget, a$$426, ["ui.draggable", a$$426.ui.mouse, {widgetEventPrefix:"drag", options:{addClasses:!0, appendTo:"parent", axis:!1, connectToSortable:!1, containment:!1, cursor:"auto", cursorAt:!1, grid:!1, handle:!1, helper:"original", iframeFix:!1, opacity:!1, refreshPositions:!1, revert:!1, revertDuration:500, scope:"default", scroll:!0, scrollSensitivity:20, scrollSpeed:20, snap:!1, snapMode:"both", snapTolerance:20, stack:!1, zIndex:!1}, _create:v1166, destroy:v1167, _mouseCapture:v1169, 
  _mouseStart:v1170, _mouseDrag:v1171, _mouseStop:v1173, _mouseUp:v1175, cancel:v1176, _getHandle:v1178, _createHelper:v1179, _adjustOffsetFromHelper:v1180, _getParentOffset:v1181, _getRelativeOffset:v1182, _cacheMargins:v1183, _cacheHelperProportions:v1184, _setContainment:v1185, _convertPositionTo:v1186, _generatePosition:v1187, _clear:v1188, _trigger:v1189, plugins:{}, _uiHash:v1190}], JAM.policy.p3);
  JAM.call(a$$426.extend, a$$426, [a$$426.ui.draggable, {version:"1.8.24"}], JAM.policy.p3);
  var v29164 = a$$426.ui.plugin;
  JAM.call(v29164.add, v29164, ["draggable", "connectToSortable", {start:v1192, stop:v1194, drag:v1197}], JAM.policy.p3);
  var v28461 = a$$426.ui.plugin;
  JAM.call(v28461.add, v28461, ["draggable", "cursor", {start:v1198, stop:v1199}], JAM.policy.p3);
  var v27358 = a$$426.ui.plugin;
  JAM.call(v27358.add, v27358, ["draggable", "opacity", {start:v1200, stop:v1201}], JAM.policy.p3);
  var v25600 = a$$426.ui.plugin;
  JAM.call(v25600.add, v25600, ["draggable", "scroll", {start:v1202, drag:v1203}], JAM.policy.p3);
  var v21482 = a$$426.ui.plugin;
  JAM.call(v21482.add, v21482, ["draggable", "snap", {start:v1205, drag:v1206}], JAM.policy.p3);
  var v17520 = a$$426.ui.plugin;
  JAM.call(v17520.add, v17520, ["draggable", "stack", {start:v1209}], JAM.policy.p3);
  var v11892 = a$$426.ui.plugin;
  JAM.call(v11892.add, v11892, ["draggable", "zIndex", {start:v1210, stop:v1211}], JAM.policy.p3);
  return;
}
function v1165(a$$415, b$$279) {
  function v1164(a$$425) {
    return!0;
  }
  function v1163(a$$424) {
    return;
  }
  function v1162(a$$423) {
    return;
  }
  function v1161(a$$422) {
    return;
  }
  function v1160(a$$421) {
    return this.mouseDelayMet;
  }
  function v1159(a$$420) {
    return JAM.call(Math.max, Math, [JAM.call(Math.abs, Math, [this._mouseDownEvent.pageX - a$$420.pageX], JAM.policy.p3), JAM.call(Math.abs, Math, [this._mouseDownEvent.pageY - a$$420.pageY], JAM.policy.p3)], JAM.policy.p3) >= this.options.distance;
  }
  function v1158(b$$283) {
    var v21489 = JAM.call(a$$415, null, [document], JAM.policy.p3);
    var v17525 = JAM.call(v21489.unbind, v21489, ["mousemove." + this.widgetName, this._mouseMoveDelegate], JAM.policy.p3);
    JAM.call(v17525.unbind, v17525, ["mouseup." + this.widgetName, this._mouseUpDelegate], JAM.policy.p3);
    var v17528 = this._mouseStarted;
    if (v17528) {
      this._mouseStarted = !1;
      var v27361 = b$$283.target == this._mouseDownEvent.target;
      if (v27361) {
        JAM.call(a$$415.data, a$$415, [b$$283.target, this.widgetName + ".preventClickEvent", !0], JAM.policy.p3);
      }
      JAM.call(this._mouseStop, this, [b$$283], JAM.policy.p3);
    }
    return!1;
  }
  function v1157(b$$282) {
    var v4960;
    var v21493 = !a$$415.browser.msie;
    if (!v21493) {
      v21493 = document.documentMode >= 9;
    }
    var v17529 = v21493;
    if (!v17529) {
      v17529 = !!b$$282.button;
    }
    if (v17529) {
      var v11897;
      if (this._mouseStarted) {
        JAM.call(this._mouseDrag, this, [b$$282], JAM.policy.p3);
        v11897 = JAM.call(b$$282.preventDefault, b$$282, [], JAM.policy.p3);
      } else {
        var v25610 = JAM.call(this._mouseDistanceMet, this, [b$$282], JAM.policy.p3);
        if (v25610) {
          v25610 = this.mouseDelayMet;
        }
        var v21496 = v25610;
        if (v21496) {
          this._mouseStarted = JAM.call(this._mouseStart, this, [this._mouseDownEvent, b$$282], JAM.policy.p3) !== !1;
          var v27365;
          if (this._mouseStarted) {
            v27365 = JAM.call(this._mouseDrag, this, [b$$282], JAM.policy.p3);
          } else {
            v27365 = JAM.call(this._mouseUp, this, [b$$282], JAM.policy.p3);
          }
          v27365;
        }
        v11897 = !this._mouseStarted;
      }
      v4960 = v11897;
    } else {
      v4960 = JAM.call(this._mouseUp, this, [b$$282], JAM.policy.p3);
    }
    return v4960;
  }
  function v1156(b$$281) {
    function v1155(a$$419) {
      return JAM.call(d$$181._mouseUp, d$$181, [a$$419], JAM.policy.p3);
    }
    function v1154(a$$418) {
      return JAM.call(d$$181._mouseMove, d$$181, [a$$418], JAM.policy.p3);
    }
    function v1153() {
      d$$181.mouseDelayMet = !0;
      return;
    }
    if (c$$229) {
      return;
    }
    var v11899 = this._mouseStarted;
    if (v11899) {
      JAM.call(this._mouseUp, this, [b$$281], JAM.policy.p3);
    }
    this._mouseDownEvent = b$$281;
    var d$$181 = this;
    var e$$181 = b$$281.which == 1;
    var v4962;
    var v17531 = typeof this.options.cancel == "string";
    if (v17531) {
      v17531 = b$$281.target.nodeName;
    }
    if (v17531) {
      var v17532 = JAM.call(a$$415, null, [b$$281.target], JAM.policy.p3);
      v4962 = JAM.call(v17532.closest, v17532, [this.options.cancel], JAM.policy.p3).length;
    } else {
      v4962 = !1;
    }
    var f$$58 = v4962;
    var v17534 = !e$$181;
    if (!v17534) {
      v17534 = f$$58;
    }
    var v11902 = v17534;
    if (!v11902) {
      v11902 = !JAM.call(this._mouseCapture, this, [b$$281], JAM.policy.p3);
    }
    if (v11902) {
      return!0;
    }
    this.mouseDelayMet = !this.options.delay;
    var v11904 = this.mouseDelayMet;
    if (!v11904) {
      var v31115 = JAM.call(setTimeout, null, [v1153, this.options.delay]);
      this._mouseDelayTimer = v31115;
    }
    var v11905 = JAM.call(this._mouseDistanceMet, this, [b$$281], JAM.policy.p3);
    if (v11905) {
      v11905 = this.mouseDelayMet;
    }
    if (v11905) {
      this._mouseStarted = JAM.call(this._mouseStart, this, [b$$281], JAM.policy.p3) !== !1;
      if (!this._mouseStarted) {
        JAM.call(b$$281.preventDefault, b$$281, [], JAM.policy.p3);
        return!0;
      }
    }
    var v28471 = !0 === JAM.call(a$$415.data, a$$415, [b$$281.target, this.widgetName + ".preventClickEvent"], JAM.policy.p3);
    if (v28471) {
      JAM.call(a$$415.removeData, a$$415, [b$$281.target, this.widgetName + ".preventClickEvent"], JAM.policy.p3);
    }
    this._mouseMoveDelegate = v1154;
    this._mouseUpDelegate = v1155;
    var v27367 = JAM.call(a$$415, null, [document], JAM.policy.p3);
    var v25612 = JAM.call(v27367.bind, v27367, ["mousemove." + this.widgetName, this._mouseMoveDelegate], JAM.policy.p3);
    JAM.call(v25612.bind, v25612, ["mouseup." + this.widgetName, this._mouseUpDelegate], JAM.policy.p3);
    JAM.call(b$$281.preventDefault, b$$281, [], JAM.policy.p3);
    c$$229 = !0;
    return!0;
  }
  function v1152() {
    var v11907 = this.element;
    JAM.call(v11907.unbind, v11907, ["." + this.widgetName], JAM.policy.p3);
    var v11909 = this._mouseMoveDelegate;
    if (v11909) {
      var v21504 = JAM.call(a$$415, null, [document], JAM.policy.p3);
      var v17541 = JAM.call(v21504.unbind, v21504, ["mousemove." + this.widgetName, this._mouseMoveDelegate], JAM.policy.p3);
      JAM.call(v17541.unbind, v17541, ["mouseup." + this.widgetName, this._mouseUpDelegate], JAM.policy.p3);
    }
    return;
  }
  function v1151() {
    function v1150(c$$230) {
      if (!0 === JAM.call(a$$415.data, a$$415, [c$$230.target, b$$280.widgetName + ".preventClickEvent"], JAM.policy.p3)) {
        JAM.call(a$$415.removeData, a$$415, [c$$230.target, b$$280.widgetName + ".preventClickEvent"], JAM.policy.p3);
        JAM.call(c$$230.stopImmediatePropagation, c$$230, [], JAM.policy.p3);
        return!1;
      }
      return;
    }
    function v1149(a$$417) {
      return JAM.call(b$$280._mouseDown, b$$280, [a$$417], JAM.policy.p3);
    }
    var b$$280 = this;
    var v17548 = this.element;
    var v11912 = JAM.call(v17548.bind, v17548, ["mousedown." + this.widgetName, v1149], JAM.policy.p3);
    JAM.call(v11912.bind, v11912, ["click." + this.widgetName, v1150], JAM.policy.p3);
    this.started = !1;
    return;
  }
  function v1148(a$$416) {
    c$$229 = !1;
    return;
  }
  var c$$229 = !1;
  var v11914 = JAM.call(a$$415, null, [document], JAM.policy.p3);
  JAM.call(v11914.mouseup, v11914, [v1148], JAM.policy.p3);
  JAM.call(a$$415.widget, a$$415, ["ui.mouse", {options:{cancel:":input,option", distance:1, delay:0}, _mouseInit:v1151, _mouseDestroy:v1152, _mouseDown:v1156, _mouseMove:v1157, _mouseUp:v1158, _mouseDistanceMet:v1159, _mouseDelayMet:v1160, _mouseStart:v1161, _mouseDrag:v1162, _mouseStop:v1163, _mouseCapture:v1164}], JAM.policy.p3);
  return;
}
function v1147(a$$410, b$$266) {
  function v1146(b$$278, c$$228, d$$180) {
    var e$$180;
    var f$$57;
    var g$$106 = this.options[b$$278];
    d$$180 = d$$180 || {};
    c$$228 = JAM.call(a$$410.Event, a$$410, [c$$228], JAM.policy.p3);
    var v25616;
    if (b$$278 === this.widgetEventPrefix) {
      v25616 = b$$278;
    } else {
      v25616 = this.widgetEventPrefix + b$$278;
    }
    var v21511 = v25616;
    var v31116 = JAM.call(v21511.toLowerCase, v21511, [], JAM.policy.p3);
    c$$228.type = v31116;
    c$$228.target = this.element[0];
    f$$57 = c$$228.originalEvent;
    if (f$$57) {
      for (e$$180 in f$$57) {
        var v4970 = e$$180 in c$$228;
        if (!v4970) {
          JAM.set(c$$228, e$$180, f$$57[e$$180], JAM.policy.p2);
        }
      }
    }
    var v11917 = this.element;
    JAM.call(v11917.trigger, v11917, [c$$228, d$$180], JAM.policy.p3);
    var v21512 = JAM.call(a$$410.isFunction, a$$410, [g$$106], JAM.policy.p3);
    if (v21512) {
      v21512 = JAM.call(g$$106.call, g$$106, [this.element[0], c$$228, d$$180], JAM.policy.p3) === !1;
    }
    var v17553 = v21512;
    if (!v17553) {
      v17553 = JAM.call(c$$228.isDefaultPrevented, c$$228, [], JAM.policy.p3);
    }
    return!v17553;
  }
  function v1145() {
    return JAM.call(this._setOption, this, ["disabled", !0], JAM.policy.p3);
  }
  function v1144() {
    return JAM.call(this._setOption, this, ["disabled", !1], JAM.policy.p3);
  }
  function v1143(a$$414, b$$277) {
    JAM.set(this.options, a$$414, b$$277, JAM.policy.p2);
    var v17555 = a$$414 === "disabled";
    if (v17555) {
      var v25619 = JAM.call(this.widget, this, [], JAM.policy.p3);
      var v27374;
      if (b$$277) {
        v27374 = "addClass";
      } else {
        v27374 = "removeClass";
      }
      var v21514 = JAM.call(v25619[v27374], v25619, [this.widgetBaseClass + "-disabled" + " " + "ui-state-disabled"], JAM.policy.p3);
      JAM.call(v21514.attr, v21514, ["aria-disabled", b$$277], JAM.policy.p3);
    }
    return this;
  }
  function v1142(b$$275) {
    function v1141(a$$413, b$$276) {
      JAM.call(c$$227._setOption, c$$227, [a$$413, b$$276], JAM.policy.p3);
      return;
    }
    var c$$227 = this;
    JAM.call(a$$410.each, a$$410, [b$$275, v1141], JAM.policy.p3);
    return this;
  }
  function v1140(c$$226, d$$179) {
    var e$$179 = c$$226;
    if (arguments.length === 0) {
      return JAM.call(a$$410.extend, a$$410, [{}, this.options], JAM.policy.p3);
    }
    if (typeof c$$226 == "string") {
      if (d$$179 === b$$266) {
        return this.options[c$$226];
      }
      e$$179 = {};
      JAM.set(e$$179, c$$226, d$$179, JAM.policy.p2);
    }
    JAM.call(this._setOptions, this, [e$$179], JAM.policy.p3);
    return this;
  }
  function v1139() {
    return this.element;
  }
  function v1138() {
    var v17556 = this.element;
    var v11921 = JAM.call(v17556.unbind, v17556, ["." + this.widgetName], JAM.policy.p3);
    JAM.call(v11921.removeData, v11921, [this.widgetName], JAM.policy.p3);
    var v21516 = JAM.call(this.widget, this, [], JAM.policy.p3);
    var v17558 = JAM.call(v21516.unbind, v21516, ["." + this.widgetName], JAM.policy.p3);
    var v11923 = JAM.call(v17558.removeAttr, v17558, ["aria-disabled"], JAM.policy.p3);
    JAM.call(v11923.removeClass, v11923, [this.widgetBaseClass + "-disabled " + "ui-state-disabled"], JAM.policy.p3);
    return;
  }
  function v1137() {
    return;
  }
  function v1136() {
    return;
  }
  function v1135() {
    var v4978 = a$$410.metadata;
    if (v4978) {
      var v17560 = a$$410.metadata;
      v4978 = JAM.call(v17560.get, v17560, [this.element[0]], JAM.policy.p3)[this.widgetName];
    }
    return v4978;
  }
  function v1134(b$$274, c$$225) {
    function v1133() {
      JAM.call(d$$178.destroy, d$$178, [], JAM.policy.p3);
      return;
    }
    JAM.call(a$$410.data, a$$410, [c$$225, this.widgetName, this], JAM.policy.p3);
    var v31117 = JAM.call(a$$410, null, [c$$225], JAM.policy.p3);
    this.element = v31117;
    var v31118 = JAM.call(a$$410.extend, a$$410, [!0, {}, this.options, JAM.call(this._getCreateOptions, this, [], JAM.policy.p3), b$$274], JAM.policy.p3);
    this.options = v31118;
    var d$$178 = this;
    var v21520 = this.element;
    JAM.call(v21520.bind, v21520, ["remove." + this.widgetName, v1133], JAM.policy.p3);
    JAM.call(this._create, this, [], JAM.policy.p3);
    JAM.call(this._trigger, this, ["create"], JAM.policy.p3);
    JAM.call(this._init, this, [], JAM.policy.p3);
    return;
  }
  function v1132(a$$412, b$$273) {
    var v4979 = arguments.length;
    if (v4979) {
      JAM.call(this._createWidget, this, [a$$412, b$$273], JAM.policy.p3);
    }
    return;
  }
  function v1131(c$$224, d$$176) {
    function v1130(e$$178) {
      function v1129() {
        var b$$272 = JAM.call(a$$410.data, a$$410, [this, c$$224], JAM.policy.p3);
        var v4980;
        if (b$$272) {
          var v11930 = JAM.call(b$$272.option, b$$272, [e$$178 || {}], JAM.policy.p3);
          v4980 = JAM.call(v11930._init, v11930, [], JAM.policy.p3);
        } else {
          v4980 = JAM.call(a$$410.data, a$$410, [this, c$$224, JAM.new(d$$176, [e$$178, this])], JAM.policy.p3);
        }
        v4980;
        return;
      }
      function v1128() {
        var d$$177 = JAM.call(a$$410.data, a$$410, [this, c$$224], JAM.policy.p3);
        var v4981;
        var v17564 = d$$177;
        if (v17564) {
          v17564 = JAM.call(a$$410.isFunction, a$$410, [d$$177[e$$178]], JAM.policy.p3);
        }
        if (v17564) {
          var v11932 = d$$177[e$$178];
          v4981 = JAM.call(v11932.apply, v11932, [d$$177, g$$105], JAM.policy.p3);
        } else {
          v4981 = d$$177;
        }
        var f$$56 = v4981;
        var v11934 = f$$56 !== d$$177;
        if (v11934) {
          v11934 = f$$56 !== b$$266;
        }
        if (v11934) {
          h$$86 = f$$56;
          return!1;
        }
        return;
      }
      var f$$55 = typeof e$$178 == "string";
      var v4984 = Array.prototype.slice;
      var g$$105 = JAM.call(v4984.call, v4984, [arguments, 1], JAM.policy.p3);
      var h$$86 = this;
      var v11936;
      var v21523 = !f$$55;
      if (v21523) {
        v21523 = g$$105.length;
      }
      if (v21523) {
        var v17565 = a$$410.extend;
        var v21524 = [!0, e$$178];
        v11936 = JAM.call(v17565.apply, v17565, [null, JAM.call(v21524.concat, v21524, [g$$105], JAM.policy.p3)], JAM.policy.p3);
      } else {
        v11936 = e$$178;
      }
      e$$178 = v11936;
      var v11937;
      var v21525 = f$$55;
      if (v21525) {
        v21525 = JAM.call(e$$178.charAt, e$$178, [0], JAM.policy.p3) === "_";
      }
      if (v21525) {
        v11937 = h$$86;
      } else {
        var v21526;
        if (f$$55) {
          v21526 = JAM.call(this.each, this, [v1128], JAM.policy.p3);
        } else {
          v21526 = JAM.call(this.each, this, [v1129], JAM.policy.p3);
        }
        v21526;
        v11937 = h$$86;
      }
      return v11937;
    }
    JAM.set(a$$410.fn, c$$224, v1130, JAM.policy.p2);
    return;
  }
  function v1127(b$$270, c$$222, d$$175) {
    function v1126(a$$411, b$$271) {
      var v4986 = arguments.length;
      if (v4986) {
        JAM.call(this._createWidget, this, [a$$411, b$$271], JAM.policy.p3);
      }
      return;
    }
    function v1125(c$$223) {
      return!!JAM.call(a$$410.data, a$$410, [c$$223, b$$270], JAM.policy.p3);
    }
    var e$$177 = JAM.call(b$$270.split, b$$270, ["."], JAM.policy.p3)[0];
    var f$$54;
    b$$270 = JAM.call(b$$270.split, b$$270, ["."], JAM.policy.p3)[1];
    f$$54 = e$$177 + "-" + b$$270;
    if (!d$$175) {
      d$$175 = c$$222;
      c$$222 = a$$410.Widget;
    }
    JAM.set(a$$410.expr[":"], f$$54, v1125, JAM.policy.p2);
    var v17569 = a$$410[e$$177];
    if (!v17569) {
      v17569 = {};
    }
    JAM.set(a$$410, e$$177, v17569, JAM.policy.p2);
    JAM.set(a$$410[e$$177], b$$270, v1126, JAM.policy.p2);
    var g$$104 = new c$$222;
    var v17570 = g$$104;
    var v31119 = JAM.call(a$$410.extend, a$$410, [!0, {}, g$$104.options], JAM.policy.p3);
    v17570.options = v31119;
    var v17571 = a$$410[e$$177][b$$270];
    var v21532 = !0;
    var v27379 = a$$410[e$$177][b$$270].prototype.widgetEventPrefix;
    if (!v27379) {
      v27379 = b$$270;
    }
    var v31120 = JAM.call(a$$410.extend, a$$410, [v21532, g$$104, {namespace:e$$177, widgetName:b$$270, widgetEventPrefix:v27379, widgetBaseClass:f$$54}, d$$175], JAM.policy.p3);
    v17571.prototype = v31120;
    var v11940 = a$$410.widget;
    JAM.call(v11940.bridge, v11940, [b$$270, a$$410[e$$177][b$$270]], JAM.policy.p3);
    return;
  }
  function v1124(b$$268, c$$221) {
    function v1123() {
      function v1122() {
        try {
          var v4989 = JAM.call(a$$410, null, [this], JAM.policy.p3);
          JAM.call(v4989.triggerHandler, v4989, ["remove"], JAM.policy.p3);
        } catch (b$$269) {
        }
        return;
      }
      if (!c$$221) {
        var v21534 = !b$$268;
        if (!v21534) {
          v21534 = JAM.call(a$$410.filter, a$$410, [b$$268, [this]], JAM.policy.p3).length;
        }
        var v17573 = v21534;
        if (v17573) {
          var v25630 = JAM.call(a$$410, null, ["*", this], JAM.policy.p3);
          var v21535 = JAM.call(v25630.add, v25630, [[this]], JAM.policy.p3);
          JAM.call(v21535.each, v21535, [v1122], JAM.policy.p3);
        }
      }
      return JAM.call(d$$173.call, d$$173, [JAM.call(a$$410, null, [this], JAM.policy.p3), b$$268, c$$221], JAM.policy.p3);
    }
    return JAM.call(this.each, this, [v1123], JAM.policy.p3);
  }
  function v1121(b$$267) {
    var d$$174 = 0;
    var e$$176;
    var v4991 = (e$$176 = b$$267[d$$174]) != null;
    for (;v4991;) {
      try {
        var v4990 = JAM.call(a$$410, null, [e$$176], JAM.policy.p3);
        JAM.call(v4990.triggerHandler, v4990, ["remove"], JAM.policy.p3);
      } catch (f$$53) {
      }
      d$$174++;
      v4991 = (e$$176 = b$$267[d$$174]) != null;
    }
    JAM.call(c$$220, null, [b$$267], JAM.policy.p3);
    return;
  }
  if (a$$410.cleanData) {
    var c$$220 = a$$410.cleanData;
    a$$410.cleanData = v1121;
  } else {
    var d$$173 = a$$410.fn.remove;
    a$$410.fn.remove = v1124;
  }
  a$$410.widget = v1127;
  a$$410.widget.bridge = v1131;
  a$$410.Widget = v1132;
  a$$410.Widget.prototype = {widgetName:"widget", widgetEventPrefix:"", options:{disabled:!1}, _createWidget:v1134, _getCreateOptions:v1135, _create:v1136, _init:v1137, destroy:v1138, widget:v1139, option:v1140, _setOptions:v1142, _setOption:v1143, enable:v1144, disable:v1145, _trigger:v1146};
  return;
}
function v1120(a$$405, b$$248) {
  function v1119(b$$265, c$$219, d$$172, e$$175, f$$52, g$$103) {
    var v11946 = a$$405.ui;
    var v4995 = JAM.call(v11946.isOverAxis, v11946, [b$$265, d$$172, f$$52], JAM.policy.p3);
    if (v4995) {
      var v11947 = a$$405.ui;
      v4995 = JAM.call(v11947.isOverAxis, v11947, [c$$219, e$$175, g$$103], JAM.policy.p3);
    }
    return v4995;
  }
  function v1118(a$$409, b$$264, c$$218) {
    var v4996 = a$$409 > b$$264;
    if (v4996) {
      v4996 = a$$409 < b$$264 + c$$218;
    }
    return v4996;
  }
  function v1117(b$$263, c$$217) {
    var v17576 = JAM.call(a$$405, null, [b$$263], JAM.policy.p3);
    if (JAM.call(v17576.css, v17576, ["overflow"], JAM.policy.p3) === "hidden") {
      return!1;
    }
    var v4998;
    var v17577 = c$$217;
    if (v17577) {
      v17577 = c$$217 === "left";
    }
    if (v17577) {
      v4998 = "scrollLeft";
    } else {
      v4998 = "scrollTop";
    }
    var d$$171 = v4998;
    var e$$174 = !1;
    var v4999;
    if (b$$263[d$$171] > 0) {
      v4999 = !0;
    } else {
      JAM.set(b$$263, d$$171, 1, JAM.policy.p2);
      e$$174 = b$$263[d$$171] > 0;
      JAM.set(b$$263, d$$171, 0, JAM.policy.p2);
      v4999 = e$$174;
    }
    return v4999;
  }
  function v1116(a$$408, b$$262) {
    var v5000;
    if (document.compareDocumentPosition) {
      v5000 = JAM.call(a$$408.compareDocumentPosition, a$$408, [b$$262], JAM.policy.p3) & 16;
    } else {
      var v11953 = a$$408 !== b$$262;
      if (v11953) {
        v11953 = JAM.call(a$$408.contains, a$$408, [b$$262], JAM.policy.p3);
      }
      v5000 = v11953;
    }
    return v5000;
  }
  function v1115(a$$407, b$$261, c$$216) {
    var d$$170 = a$$407.plugins[b$$261];
    var v11955 = !d$$170;
    if (!v11955) {
      v11955 = !a$$407.element[0].parentNode;
    }
    if (v11955) {
      return;
    }
    var e$$173 = 0;
    var v5004 = e$$173 < d$$170.length;
    for (;v5004;) {
      var v5003 = a$$407.options[d$$170[e$$173][0]];
      if (v5003) {
        var v11959 = d$$170[e$$173][1];
        JAM.call(v11959.apply, v11959, [a$$407.element, c$$216], JAM.policy.p3);
      }
      e$$173++;
      v5004 = e$$173 < d$$170.length;
    }
    return;
  }
  function v1114(b$$260, c$$215, d$$169) {
    var e$$172 = a$$405.ui[b$$260].prototype;
    var f$$51;
    for (f$$51 in d$$169) {
      var v11963 = e$$172.plugins;
      var v17583 = e$$172.plugins[f$$51];
      if (!v17583) {
        v17583 = [];
      }
      JAM.set(v11963, f$$51, v17583, JAM.policy.p2);
      var v11964 = e$$172.plugins[f$$51];
      JAM.call(v11964.push, v11964, [[c$$215, d$$169[f$$51]]], JAM.policy.p3);
    }
    return;
  }
  function v1113() {
    var b$$259 = document.body;
    var c$$214 = JAM.call(b$$259.appendChild, b$$259, [c$$214 = JAM.call(document.createElement, document, ["div"], JAM.policy.p3)], JAM.policy.p3);
    c$$214.offsetHeight;
    JAM.call(a$$405.extend, a$$405, [c$$214.style, {minHeight:"100px", height:"auto", padding:0, borderWidth:0}], JAM.policy.p3);
    a$$405.support.minHeight = c$$214.offsetHeight === 100;
    a$$405.support.selectstart = "onselectstart" in c$$214;
    JAM.call(b$$259.removeChild, b$$259, [c$$214], JAM.policy.p3).style.display = "none";
    return;
  }
  function v1112(b$$258) {
    var d$$168 = JAM.call(a$$405.attr, a$$405, [b$$258, "tabindex"], JAM.policy.p3);
    var e$$171 = isNaN(d$$168);
    var v11967 = e$$171;
    if (!v11967) {
      v11967 = d$$168 >= 0;
    }
    var v5007 = v11967;
    if (v5007) {
      v5007 = c$$204(b$$258, !e$$171);
    }
    return v5007;
  }
  function v1111(b$$257) {
    return c$$204(b$$257, !isNaN(JAM.call(a$$405.attr, a$$405, [b$$257, "tabindex"], JAM.policy.p3)));
  }
  function v1110(b$$256, c$$213, d$$167) {
    return!!JAM.call(a$$405.data, a$$405, [b$$256, d$$167[3]], JAM.policy.p3);
  }
  function v1109(b$$255) {
    function v1108(c$$212) {
      return!!JAM.call(a$$405.data, a$$405, [c$$212, b$$255], JAM.policy.p3);
    }
    return v1108;
  }
  function v1107(c$$208, d$$165) {
    function v1106(b$$254, c$$211) {
      function v1105() {
        var v5011 = JAM.call(a$$405, null, [this], JAM.policy.p3);
        JAM.call(v5011.css, v5011, [f$$49, h$$85(this, b$$254, !0, c$$211) + "px"], JAM.policy.p3);
        return;
      }
      var v5013;
      if (typeof b$$254 != "number") {
        var v11973 = g$$102["outer" + d$$165];
        v5013 = JAM.call(v11973.call, v11973, [this, b$$254], JAM.policy.p3);
      } else {
        v5013 = JAM.call(this.each, this, [v1105], JAM.policy.p3);
      }
      return v5013;
    }
    function v1104(c$$210) {
      function v1103() {
        var v5014 = JAM.call(a$$405, null, [this], JAM.policy.p3);
        JAM.call(v5014.css, v5014, [f$$49, h$$85(this, c$$210) + "px"], JAM.policy.p3);
        return;
      }
      var v5016;
      if (c$$210 === b$$248) {
        var v11976 = g$$102["inner" + d$$165];
        v5016 = JAM.call(v11976.call, v11976, [this], JAM.policy.p3);
      } else {
        v5016 = JAM.call(this.each, this, [v1103], JAM.policy.p3);
      }
      return v5016;
    }
    function h$$85(b$$253, c$$209, d$$166, f$$50) {
      function v1102() {
        var v21542 = c$$209;
        var v25637 = parseFloat(JAM.call(a$$405.curCSS, a$$405, [b$$253, "padding" + this, !0], JAM.policy.p3));
        if (!v25637) {
          v25637 = 0;
        }
        c$$209 = v21542 - v25637;
        if (d$$166) {
          var v25638 = c$$209;
          var v27383 = parseFloat(JAM.call(a$$405.curCSS, a$$405, [b$$253, "border" + this + "Width", !0], JAM.policy.p3));
          if (!v27383) {
            v27383 = 0;
          }
          c$$209 = v25638 - v27383;
        }
        if (f$$50) {
          var v21544 = c$$209;
          var v25640 = parseFloat(JAM.call(a$$405.curCSS, a$$405, [b$$253, "margin" + this, !0], JAM.policy.p3));
          if (!v25640) {
            v25640 = 0;
          }
          c$$209 = v21544 - v25640;
        }
        return;
      }
      JAM.call(a$$405.each, a$$405, [e$$170, v1102], JAM.policy.p3);
      return c$$209;
    }
    var v5017;
    if (d$$165 === "Width") {
      v5017 = ["Left", "Right"];
    } else {
      v5017 = ["Top", "Bottom"];
    }
    var e$$170 = v5017;
    var f$$49 = JAM.call(d$$165.toLowerCase, d$$165, [], JAM.policy.p3);
    var g$$102 = {innerWidth:a$$405.fn.innerWidth, innerHeight:a$$405.fn.innerHeight, outerWidth:a$$405.fn.outerWidth, outerHeight:a$$405.fn.outerHeight};
    JAM.set(a$$405.fn, "inner" + d$$165, v1104, JAM.policy.p2);
    JAM.set(a$$405.fn, "outer" + d$$165, v1106, JAM.policy.p2);
    return;
  }
  function v1101() {
    return JAM.call(this.unbind, this, [".ui-disableSelection"], JAM.policy.p3);
  }
  function v1100() {
    function v1099(a$$406) {
      JAM.call(a$$406.preventDefault, a$$406, [], JAM.policy.p3);
      return;
    }
    var v17595;
    if (a$$405.support.selectstart) {
      v17595 = "selectstart";
    } else {
      v17595 = "mousedown";
    }
    return JAM.call(this.bind, this, [v17595 + ".ui-disableSelection", v1099], JAM.policy.p3);
  }
  function v1098(c$$207) {
    if (c$$207 !== b$$248) {
      return JAM.call(this.css, this, ["zIndex", c$$207], JAM.policy.p3);
    }
    if (this.length) {
      var d$$164 = JAM.call(a$$405, null, [this[0]], JAM.policy.p3);
      var e$$169;
      var f$$48;
      var v11988 = d$$164.length;
      if (v11988) {
        v11988 = d$$164[0] !== document;
      }
      var v5028 = v11988;
      for (;v5028;) {
        e$$169 = JAM.call(d$$164.css, d$$164, ["position"], JAM.policy.p3);
        var v17597 = e$$169 === "absolute";
        if (!v17597) {
          v17597 = e$$169 === "relative";
        }
        var v11989 = v17597;
        if (!v11989) {
          v11989 = e$$169 === "fixed";
        }
        if (v11989) {
          f$$48 = parseInt(JAM.call(d$$164.css, d$$164, ["zIndex"], JAM.policy.p3), 10);
          var v11990 = !isNaN(f$$48);
          if (v11990) {
            v11990 = f$$48 !== 0;
          }
          if (v11990) {
            return f$$48;
          }
        }
        d$$164 = JAM.call(d$$164.parent, d$$164, [], JAM.policy.p3);
        var v11991 = d$$164.length;
        if (v11991) {
          v11991 = d$$164[0] !== document;
        }
        v5028 = v11991;
      }
    }
    return 0;
  }
  function v1097() {
    function v1096() {
      return JAM.call(/(auto|scroll)/.test, /(auto|scroll)/, [JAM.call(a$$405.curCSS, a$$405, [this, "overflow", 1], JAM.policy.p3) + JAM.call(a$$405.curCSS, a$$405, [this, "overflow-y", 1], JAM.policy.p3) + JAM.call(a$$405.curCSS, a$$405, [this, "overflow-x", 1], JAM.policy.p3)], JAM.policy.p3);
    }
    function v1095() {
      var v5031 = JAM.call(/(relative|absolute|fixed)/.test, /(relative|absolute|fixed)/, [JAM.call(a$$405.curCSS, a$$405, [this, "position", 1], JAM.policy.p3)], JAM.policy.p3);
      if (v5031) {
        v5031 = JAM.call(/(auto|scroll)/.test, /(auto|scroll)/, [JAM.call(a$$405.curCSS, a$$405, [this, "overflow", 1], JAM.policy.p3) + JAM.call(a$$405.curCSS, a$$405, [this, "overflow-y", 1], JAM.policy.p3) + JAM.call(a$$405.curCSS, a$$405, [this, "overflow-x", 1], JAM.policy.p3)], JAM.policy.p3);
      }
      return v5031;
    }
    var b$$252;
    var v11996;
    var v25642 = a$$405.browser.msie;
    if (v25642) {
      v25642 = JAM.call(/(static|relative)/.test, /(static|relative)/, [JAM.call(this.css, this, ["position"], JAM.policy.p3)], JAM.policy.p3);
    }
    var v21550 = v25642;
    if (!v21550) {
      v21550 = JAM.call(/absolute/.test, /absolute/, [JAM.call(this.css, this, ["position"], JAM.policy.p3)], JAM.policy.p3);
    }
    if (v21550) {
      var v21551 = JAM.call(this.parents, this, [], JAM.policy.p3);
      var v17605 = JAM.call(v21551.filter, v21551, [v1095], JAM.policy.p3);
      v11996 = b$$252 = JAM.call(v17605.eq, v17605, [0], JAM.policy.p3);
    } else {
      var v21552 = JAM.call(this.parents, this, [], JAM.policy.p3);
      var v17606 = JAM.call(v21552.filter, v21552, [v1096], JAM.policy.p3);
      v11996 = b$$252 = JAM.call(v17606.eq, v17606, [0], JAM.policy.p3);
    }
    v11996;
    var v11997;
    var v21553 = JAM.call(/fixed/.test, /fixed/, [JAM.call(this.css, this, ["position"], JAM.policy.p3)], JAM.policy.p3);
    if (!v21553) {
      v21553 = !b$$252.length;
    }
    if (v21553) {
      v11997 = JAM.call(a$$405, null, [document], JAM.policy.p3);
    } else {
      v11997 = b$$252;
    }
    return v11997;
  }
  function v1094(b$$251, c$$206) {
    function v1093() {
      function v1092() {
        var v11998 = JAM.call(a$$405, null, [d$$163], JAM.policy.p3);
        JAM.call(v11998.focus, v11998, [], JAM.policy.p3);
        if (c$$206) {
          JAM.call(c$$206.call, c$$206, [d$$163], JAM.policy.p3);
        }
        return;
      }
      var d$$163 = this;
      JAM.call(setTimeout, null, [v1092, b$$251]);
      return;
    }
    var v5032;
    if (typeof b$$251 == "number") {
      v5032 = JAM.call(this.each, this, [v1093], JAM.policy.p3);
    } else {
      var v11999 = this._focus;
      v5032 = JAM.call(v11999.apply, v11999, [this, arguments], JAM.policy.p3);
    }
    return v5032;
  }
  function c$$204(b$$249, c$$205) {
    var v5033 = b$$249.nodeName;
    var e$$168 = JAM.call(v5033.toLowerCase, v5033, [], JAM.policy.p3);
    if ("area" === e$$168) {
      var f$$47 = b$$249.parentNode;
      var g$$101 = f$$47.name;
      var h$$84;
      var v5034;
      var v21554 = !b$$249.href;
      if (!v21554) {
        v21554 = !g$$101;
      }
      var v17610 = v21554;
      if (!v17610) {
        var v25650 = f$$47.nodeName;
        v17610 = JAM.call(v25650.toLowerCase, v25650, [], JAM.policy.p3) !== "map";
      }
      if (v17610) {
        v5034 = !1;
      } else {
        h$$84 = JAM.call(a$$405, null, ["img[usemap=#" + g$$101 + "]"], JAM.policy.p3)[0];
        var v17612 = !!h$$84;
        if (v17612) {
          v17612 = d$$162(h$$84);
        }
        v5034 = v17612;
      }
      return v5034;
    }
    var v12002;
    if (JAM.call(/input|select|textarea|button|object/.test, /input|select|textarea|button|object/, [e$$168], JAM.policy.p3)) {
      v12002 = !b$$249.disabled;
    } else {
      var v17614;
      if ("a" == e$$168) {
        var v21559 = b$$249.href;
        if (!v21559) {
          v21559 = c$$205;
        }
        v17614 = v21559;
      } else {
        v17614 = c$$205;
      }
      v12002 = v17614;
    }
    var v5036 = v12002;
    if (v5036) {
      v5036 = d$$162(b$$249);
    }
    return v5036;
  }
  function d$$162(b$$250) {
    function v1091() {
      var v5037 = JAM.call(a$$405.curCSS, a$$405, [this, "visibility"], JAM.policy.p3) === "hidden";
      if (!v5037) {
        var v12004 = a$$405.expr.filters;
        v5037 = JAM.call(v12004.hidden, v12004, [this], JAM.policy.p3);
      }
      return v5037;
    }
    var v25653 = JAM.call(a$$405, null, [b$$250], JAM.policy.p3);
    var v21561 = JAM.call(v25653.parents, v25653, [], JAM.policy.p3);
    var v17617 = JAM.call(v21561.andSelf, v21561, [], JAM.policy.p3);
    return!JAM.call(v17617.filter, v17617, [v1091], JAM.policy.p3).length;
  }
  var v5039 = a$$405.ui;
  if (!v5039) {
    v5039 = {};
  }
  a$$405.ui = v5039;
  if (a$$405.ui.version) {
    return;
  }
  JAM.call(a$$405.extend, a$$405, [a$$405.ui, {version:"1.8.24", keyCode:{ALT:18, BACKSPACE:8, CAPS_LOCK:20, COMMA:188, COMMAND:91, COMMAND_LEFT:91, COMMAND_RIGHT:93, CONTROL:17, DELETE:46, DOWN:40, END:35, ENTER:13, ESCAPE:27, HOME:36, INSERT:45, LEFT:37, MENU:93, NUMPAD_ADD:107, NUMPAD_DECIMAL:110, NUMPAD_DIVIDE:111, NUMPAD_ENTER:108, NUMPAD_MULTIPLY:106, NUMPAD_SUBTRACT:109, PAGE_DOWN:34, PAGE_UP:33, PERIOD:190, RIGHT:39, SHIFT:16, SPACE:32, TAB:9, UP:38, WINDOWS:91}}], JAM.policy.p3);
  var v28486 = a$$405.fn;
  var v29640 = a$$405.fn.prop;
  if (!v29640) {
    v29640 = a$$405.fn.attr;
  }
  JAM.call(v28486.extend, v28486, [{propAttr:v29640, _focus:a$$405.fn.focus, focus:v1094, scrollParent:v1097, zIndex:v1098, disableSelection:v1100, enableSelection:v1101}], JAM.policy.p3);
  var v29180 = JAM.call(a$$405, null, ["<a>"], JAM.policy.p3);
  var v27388 = JAM.call(v29180.outerWidth, v29180, [1], JAM.policy.p3).jquery;
  if (!v27388) {
    JAM.call(a$$405.each, a$$405, [["Width", "Height"], v1107], JAM.policy.p3);
  }
  var v25654 = a$$405.expr[":"];
  var v28491;
  if (a$$405.expr.createPseudo) {
    var v29181 = a$$405.expr;
    v28491 = JAM.call(v29181.createPseudo, v29181, [v1109], JAM.policy.p3);
  } else {
    v28491 = v1110;
  }
  JAM.call(a$$405.extend, a$$405, [v25654, {data:v28491, focusable:v1111, tabbable:v1112}], JAM.policy.p3);
  JAM.call(a$$405, null, [v1113], JAM.policy.p3);
  var v17618 = a$$405.curCSS;
  if (!v17618) {
    a$$405.curCSS = a$$405.css;
  }
  JAM.call(a$$405.extend, a$$405, [a$$405.ui, {plugin:{add:v1114, call:v1115}, contains:v1116, hasScroll:v1117, isOverAxis:v1118, isOver:v1119}], JAM.policy.p3);
  return;
}
function v1090(a$$13, b$$9) {
  function v1089() {
    return f$$4;
  }
  function v1088(a$$400, c$$202) {
    function v1087(a$$403) {
      function v1086(a$$404, c$$203, h$$83) {
        var i$$147;
        var j$$63;
        var k$$41;
        var l$$53;
        if (JAM.call(f$$4.isWindow, f$$4, [a$$404], JAM.policy.p3)) {
          i$$147 = a$$404.document;
          j$$63 = i$$147.documentElement[d$$161];
          var v17620 = f$$4.support.boxModel;
          if (v17620) {
            v17620 = j$$63;
          }
          var v12012 = v17620;
          if (!v12012) {
            var v17621 = i$$147.body;
            if (v17621) {
              v17621 = i$$147.body[d$$161];
            }
            v12012 = v17621;
          }
          var v5041 = v12012;
          if (!v5041) {
            v5041 = j$$63;
          }
          return v5041;
        }
        if (a$$404.nodeType === 9) {
          i$$147 = a$$404.documentElement;
          if (i$$147[d$$161] >= i$$147[e$$167]) {
            return i$$147[d$$161];
          }
          return JAM.call(Math.max, Math, [a$$404.body[e$$167], i$$147[e$$167], a$$404.body[g$$100], i$$147[g$$100]], JAM.policy.p3);
        }
        if (h$$83 === b$$9) {
          k$$41 = JAM.call(f$$4.css, f$$4, [a$$404, c$$203], JAM.policy.p3);
          l$$53 = parseFloat(k$$41);
          var v5049;
          if (JAM.call(f$$4.isNumeric, f$$4, [l$$53], JAM.policy.p3)) {
            v5049 = l$$53;
          } else {
            v5049 = k$$41;
          }
          return v5049;
        }
        var v5051 = JAM.call(f$$4, null, [a$$404], JAM.policy.p3);
        JAM.call(v5051.css, v5051, [c$$203, h$$83], JAM.policy.p3);
        return;
      }
      return JAM.call(f$$4.access, f$$4, [this, v1086, c$$202, a$$403, arguments.length, null], JAM.policy.p3);
    }
    function v1085(a$$402) {
      var b$$247 = this[0];
      var v5053;
      if (b$$247) {
        var v12020;
        if (b$$247.style) {
          var v25656;
          if (a$$402) {
            v25656 = "margin";
          } else {
            v25656 = "border";
          }
          v12020 = parseFloat(JAM.call(f$$4.css, f$$4, [b$$247, c$$202, v25656], JAM.policy.p3));
        } else {
          v12020 = JAM.call(this[c$$202], this, [], JAM.policy.p3);
        }
        v5053 = v12020;
      } else {
        v5053 = null;
      }
      return v5053;
    }
    function v1084() {
      var a$$401 = this[0];
      var v5054;
      if (a$$401) {
        var v12021;
        if (a$$401.style) {
          v12021 = parseFloat(JAM.call(f$$4.css, f$$4, [a$$401, c$$202, "padding"], JAM.policy.p3));
        } else {
          v12021 = JAM.call(this[c$$202], this, [], JAM.policy.p3);
        }
        v5054 = v12021;
      } else {
        v5054 = null;
      }
      return v5054;
    }
    var d$$161 = "client" + a$$400;
    var e$$167 = "scroll" + a$$400;
    var g$$100 = "offset" + a$$400;
    JAM.set(f$$4.fn, "inner" + a$$400, v1084, JAM.policy.p2);
    JAM.set(f$$4.fn, "outer" + a$$400, v1085, JAM.policy.p2);
    JAM.set(f$$4.fn, c$$202, v1087, JAM.policy.p2);
    return;
  }
  function v1083(a$$398, c$$201) {
    function v1082(e$$165) {
      function v1081(a$$399, e$$166, g$$99) {
        var h$$82 = cy(a$$399);
        if (g$$99 === b$$9) {
          var v5055;
          if (h$$82) {
            var v12023;
            if (c$$201 in h$$82) {
              v12023 = h$$82[c$$201];
            } else {
              var v21566 = f$$4.support.boxModel;
              if (v21566) {
                v21566 = h$$82.document.documentElement[e$$166];
              }
              var v17631 = v21566;
              if (!v17631) {
                v17631 = h$$82.document.body[e$$166];
              }
              v12023 = v17631;
            }
            v5055 = v12023;
          } else {
            v5055 = a$$399[e$$166];
          }
          return v5055;
        }
        var v5057;
        if (h$$82) {
          var v17633;
          if (d$$160) {
            var v21569 = JAM.call(f$$4, null, [h$$82], JAM.policy.p3);
            v17633 = JAM.call(v21569.scrollLeft, v21569, [], JAM.policy.p3);
          } else {
            v17633 = g$$99;
          }
          var v12024 = v17633;
          var v17634;
          if (d$$160) {
            v17634 = g$$99;
          } else {
            var v21570 = JAM.call(f$$4, null, [h$$82], JAM.policy.p3);
            v17634 = JAM.call(v21570.scrollTop, v21570, [], JAM.policy.p3);
          }
          v5057 = JAM.call(h$$82.scrollTo, h$$82, [v12024, v17634], JAM.policy.p3);
        } else {
          v5057 = JAM.set(a$$399, e$$166, g$$99, JAM.policy.p2);
        }
        v5057;
        return;
      }
      return JAM.call(f$$4.access, f$$4, [this, v1081, a$$398, e$$165, arguments.length, null], JAM.policy.p3);
    }
    var d$$160 = JAM.call(/Y/.test, /Y/, [c$$201], JAM.policy.p3);
    JAM.set(f$$4.fn, a$$398, v1082, JAM.policy.p2);
    return;
  }
  function v1080() {
    function v1079() {
      var v5060 = this.offsetParent;
      if (!v5060) {
        v5060 = c$$5.body;
      }
      var a$$397 = v5060;
      var v17635 = a$$397;
      if (v17635) {
        v17635 = !JAM.call(cx.test, cx, [a$$397.nodeName], JAM.policy.p3);
      }
      var v12027 = v17635;
      if (v12027) {
        v12027 = JAM.call(f$$4.css, f$$4, [a$$397, "position"], JAM.policy.p3) === "static";
      }
      var v5061 = v12027;
      for (;v5061;) {
        a$$397 = a$$397.offsetParent;
        var v17637 = a$$397;
        if (v17637) {
          v17637 = !JAM.call(cx.test, cx, [a$$397.nodeName], JAM.policy.p3);
        }
        var v12028 = v17637;
        if (v12028) {
          v12028 = JAM.call(f$$4.css, f$$4, [a$$397, "position"], JAM.policy.p3) === "static";
        }
        v5061 = v12028;
      }
      return a$$397;
    }
    return JAM.call(this.map, this, [v1079], JAM.policy.p3);
  }
  function v1078() {
    if (!this[0]) {
      return null;
    }
    var a$$396 = this[0];
    var b$$246 = JAM.call(this.offsetParent, this, [], JAM.policy.p3);
    var c$$200 = JAM.call(this.offset, this, [], JAM.policy.p3);
    var v5063;
    if (JAM.call(cx.test, cx, [b$$246[0].nodeName], JAM.policy.p3)) {
      v5063 = {top:0, left:0};
    } else {
      v5063 = JAM.call(b$$246.offset, b$$246, [], JAM.policy.p3);
    }
    var d$$159 = v5063;
    var v25662 = c$$200.top;
    var v27392 = parseFloat(JAM.call(f$$4.css, f$$4, [a$$396, "marginTop"], JAM.policy.p3));
    if (!v27392) {
      v27392 = 0;
    }
    c$$200.top = v25662 - v27392;
    var v25664 = c$$200.left;
    var v27393 = parseFloat(JAM.call(f$$4.css, f$$4, [a$$396, "marginLeft"], JAM.policy.p3));
    if (!v27393) {
      v27393 = 0;
    }
    c$$200.left = v25664 - v27393;
    var v21574 = d$$159.top;
    var v25666 = parseFloat(JAM.call(f$$4.css, f$$4, [b$$246[0], "borderTopWidth"], JAM.policy.p3));
    if (!v25666) {
      v25666 = 0;
    }
    d$$159.top = v21574 + v25666;
    var v17640 = d$$159.left;
    var v21576 = parseFloat(JAM.call(f$$4.css, f$$4, [b$$246[0], "borderLeftWidth"], JAM.policy.p3));
    if (!v21576) {
      v21576 = 0;
    }
    d$$159.left = v17640 + v21576;
    return{top:c$$200.top - d$$159.top, left:c$$200.left - d$$159.left};
  }
  function v1077(a$$395, b$$245, c$$199) {
    var d$$158 = JAM.call(f$$4.css, f$$4, [a$$395, "position"], JAM.policy.p3);
    var v5066 = d$$158 === "static";
    if (v5066) {
      a$$395.style.position = "relative";
    }
    var e$$164 = JAM.call(f$$4, null, [a$$395], JAM.policy.p3);
    var g$$98 = JAM.call(e$$164.offset, e$$164, [], JAM.policy.p3);
    var h$$81 = JAM.call(f$$4.css, f$$4, [a$$395, "top"], JAM.policy.p3);
    var i$$146 = JAM.call(f$$4.css, f$$4, [a$$395, "left"], JAM.policy.p3);
    var v12036 = d$$158 === "absolute";
    if (!v12036) {
      v12036 = d$$158 === "fixed";
    }
    var v5067 = v12036;
    if (v5067) {
      v5067 = JAM.call(f$$4.inArray, f$$4, ["auto", [h$$81, i$$146]], JAM.policy.p3) > -1;
    }
    var j$$62 = v5067;
    var k$$40 = {};
    var l$$52 = {};
    var m$$27;
    var n$$78;
    var v25669;
    if (j$$62) {
      l$$52 = JAM.call(e$$164.position, e$$164, [], JAM.policy.p3);
      m$$27 = l$$52.top;
      v25669 = n$$78 = l$$52.left;
    } else {
      var v28497 = parseFloat(h$$81);
      if (!v28497) {
        v28497 = 0;
      }
      m$$27 = v28497;
      var v28498 = parseFloat(i$$146);
      if (!v28498) {
        v28498 = 0;
      }
      v25669 = n$$78 = v28498;
    }
    v25669;
    var v25670 = JAM.call(f$$4.isFunction, f$$4, [b$$245], JAM.policy.p3);
    if (v25670) {
      b$$245 = JAM.call(b$$245.call, b$$245, [a$$395, c$$199, g$$98], JAM.policy.p3);
    }
    var v21577 = b$$245.top != null;
    if (v21577) {
      k$$40.top = b$$245.top - g$$98.top + m$$27;
    }
    var v17644 = b$$245.left != null;
    if (v17644) {
      k$$40.left = b$$245.left - g$$98.left + n$$78;
    }
    var v12038;
    if ("using" in b$$245) {
      var v17645 = b$$245.using;
      v12038 = JAM.call(v17645.call, v17645, [a$$395, k$$40], JAM.policy.p3);
    } else {
      v12038 = JAM.call(e$$164.css, e$$164, [k$$40], JAM.policy.p3);
    }
    v12038;
    return;
  }
  function v1076(a$$394) {
    var b$$244 = a$$394.offsetTop;
    var c$$198 = a$$394.offsetLeft;
    var v5068 = f$$4.support.doesNotIncludeMarginInBodyOffset;
    if (v5068) {
      var v25675 = parseFloat(JAM.call(f$$4.css, f$$4, [a$$394, "marginTop"], JAM.policy.p3));
      if (!v25675) {
        v25675 = 0;
      }
      b$$244 = b$$244 + v25675;
      var v25676 = parseFloat(JAM.call(f$$4.css, f$$4, [a$$394, "marginLeft"], JAM.policy.p3));
      if (!v25676) {
        v25676 = 0;
      }
      c$$198 = c$$198 + v25676;
    }
    return{top:b$$244, left:c$$198};
  }
  function v1075(a$$393) {
    function v1074(b$$243) {
      var v5069 = f$$4.offset;
      JAM.call(v5069.setOffset, v5069, [this, a$$393, b$$243], JAM.policy.p3);
      return;
    }
    if (arguments.length) {
      var v5070;
      if (a$$393 === b$$9) {
        v5070 = this;
      } else {
        v5070 = JAM.call(this.each, this, [v1074], JAM.policy.p3);
      }
      return v5070;
    }
    var c$$197 = this[0];
    var v5072 = c$$197;
    if (v5072) {
      v5072 = c$$197.ownerDocument;
    }
    var d$$157 = v5072;
    if (!d$$157) {
      return null;
    }
    if (c$$197 === d$$157.body) {
      var v5074 = f$$4.offset;
      return JAM.call(v5074.bodyOffset, v5074, [c$$197], JAM.policy.p3);
    }
    return JAM.call(cv, null, [c$$197, d$$157, d$$157.documentElement], JAM.policy.p3);
  }
  function v1073(a$$392, b$$242, c$$196) {
    var d$$156;
    var e$$163 = a$$392.offsetParent;
    var g$$97 = a$$392;
    var h$$80 = b$$242.body;
    var i$$145 = b$$242.defaultView;
    var v5077;
    if (i$$145) {
      v5077 = JAM.call(i$$145.getComputedStyle, i$$145, [a$$392, null], JAM.policy.p3);
    } else {
      v5077 = a$$392.currentStyle;
    }
    var j$$61 = v5077;
    var k$$39 = a$$392.offsetTop;
    var l$$51 = a$$392.offsetLeft;
    var v17647 = a$$392 = a$$392.parentNode;
    if (v17647) {
      v17647 = a$$392 !== h$$80;
    }
    var v12042 = v17647;
    if (v12042) {
      v12042 = a$$392 !== c$$196;
    }
    var v5079 = v12042;
    for (;v5079;) {
      var v12043 = f$$4.support.fixedPosition;
      if (v12043) {
        v12043 = j$$61.position === "fixed";
      }
      if (v12043) {
        break;
      }
      var v27403;
      if (i$$145) {
        v27403 = JAM.call(i$$145.getComputedStyle, i$$145, [a$$392, null], JAM.policy.p3);
      } else {
        v27403 = a$$392.currentStyle;
      }
      d$$156 = v27403;
      k$$39 = k$$39 - a$$392.scrollTop;
      l$$51 = l$$51 - a$$392.scrollLeft;
      var v21582 = a$$392 === e$$163;
      if (v21582) {
        k$$39 = k$$39 + a$$392.offsetTop;
        l$$51 = l$$51 + a$$392.offsetLeft;
        var v29643 = f$$4.support.doesNotAddBorder;
        if (v29643) {
          var v29928 = !f$$4.support.doesAddBorderForTableAndCells;
          if (!v29928) {
            v29928 = !JAM.call(cw.test, cw, [a$$392.nodeName], JAM.policy.p3);
          }
          v29643 = v29928;
        }
        var v29185 = v29643;
        if (v29185) {
          var v30356 = parseFloat(d$$156.borderTopWidth);
          if (!v30356) {
            v30356 = 0;
          }
          k$$39 = k$$39 + v30356;
          var v30357 = parseFloat(d$$156.borderLeftWidth);
          if (!v30357) {
            v30357 = 0;
          }
          l$$51 = l$$51 + v30357;
        }
        g$$97 = e$$163;
        e$$163 = a$$392.offsetParent;
      }
      var v21583 = f$$4.support.subtractsBorderForOverflowNotVisible;
      if (v21583) {
        v21583 = d$$156.overflow !== "visible";
      }
      var v17650 = v21583;
      if (v17650) {
        var v28500 = parseFloat(d$$156.borderTopWidth);
        if (!v28500) {
          v28500 = 0;
        }
        k$$39 = k$$39 + v28500;
        var v28501 = parseFloat(d$$156.borderLeftWidth);
        if (!v28501) {
          v28501 = 0;
        }
        l$$51 = l$$51 + v28501;
      }
      j$$61 = d$$156;
      var v17651 = a$$392 = a$$392.parentNode;
      if (v17651) {
        v17651 = a$$392 !== h$$80;
      }
      var v12044 = v17651;
      if (v12044) {
        v12044 = a$$392 !== c$$196;
      }
      v5079 = v12044;
    }
    var v12045 = j$$61.position === "relative";
    if (!v12045) {
      v12045 = j$$61.position === "static";
    }
    if (v12045) {
      k$$39 = k$$39 + h$$80.offsetTop;
      l$$51 = l$$51 + h$$80.offsetLeft;
    }
    var v12046 = f$$4.support.fixedPosition;
    if (v12046) {
      v12046 = j$$61.position === "fixed";
    }
    var v5081 = v12046;
    if (v5081) {
      k$$39 = k$$39 + JAM.call(Math.max, Math, [c$$196.scrollTop, h$$80.scrollTop], JAM.policy.p3);
      l$$51 = l$$51 + JAM.call(Math.max, Math, [c$$196.scrollLeft, h$$80.scrollLeft], JAM.policy.p3);
    }
    return{top:k$$39, left:l$$51};
  }
  function v1072(a$$391, b$$241, c$$195, d$$155) {
    try {
      d$$155 = JAM.call(a$$391.getBoundingClientRect, a$$391, [], JAM.policy.p3);
    } catch (e$$162) {
    }
    var v12047 = !d$$155;
    if (!v12047) {
      v12047 = !JAM.call(f$$4.contains, f$$4, [c$$195, a$$391], JAM.policy.p3);
    }
    if (v12047) {
      var v5082;
      if (d$$155) {
        v5082 = {top:d$$155.top, left:d$$155.left};
      } else {
        v5082 = {top:0, left:0};
      }
      return v5082;
    }
    var g$$96 = b$$241.body;
    var h$$79 = cy(b$$241);
    var v12050 = c$$195.clientTop;
    if (!v12050) {
      v12050 = g$$96.clientTop;
    }
    var v5084 = v12050;
    if (!v5084) {
      v5084 = 0;
    }
    var i$$144 = v5084;
    var v12052 = c$$195.clientLeft;
    if (!v12052) {
      v12052 = g$$96.clientLeft;
    }
    var v5085 = v12052;
    if (!v5085) {
      v5085 = 0;
    }
    var j$$60 = v5085;
    var v12054 = h$$79.pageYOffset;
    if (!v12054) {
      var v17663 = f$$4.support.boxModel;
      if (v17663) {
        v17663 = c$$195.scrollTop;
      }
      v12054 = v17663;
    }
    var v5086 = v12054;
    if (!v5086) {
      v5086 = g$$96.scrollTop;
    }
    var k$$38 = v5086;
    var v12056 = h$$79.pageXOffset;
    if (!v12056) {
      var v17665 = f$$4.support.boxModel;
      if (v17665) {
        v17665 = c$$195.scrollLeft;
      }
      v12056 = v17665;
    }
    var v5087 = v12056;
    if (!v5087) {
      v5087 = g$$96.scrollLeft;
    }
    var l$$50 = v5087;
    var m$$26 = d$$155.top + k$$38 - i$$144;
    var n$$77 = d$$155.left + l$$50 - j$$60;
    return{top:m$$26, left:n$$77};
  }
  function v1071(a$$390) {
    function v1070(b$$240) {
      return a$$390 === b$$240.elem;
    }
    return JAM.call(f$$4.grep, f$$4, [f$$4.timers, v1070], JAM.policy.p3).length;
  }
  function v1069(a$$388, b$$239) {
    function v1068(a$$389) {
      JAM.call(f$$4.style, f$$4, [a$$389.elem, b$$239, JAM.call(Math.max, Math, [0, a$$389.now], JAM.policy.p3) + a$$389.unit], JAM.policy.p3);
      return;
    }
    var v5094 = JAM.call(b$$239.indexOf, b$$239, ["margin"], JAM.policy.p3);
    if (v5094) {
      JAM.set(f$$4.fx.step, b$$239, v1068, JAM.policy.p2);
    }
    return;
  }
  function v1067(a$$387) {
    var v5095;
    var v17669 = a$$387.elem.style;
    if (v17669) {
      v17669 = a$$387.elem.style[a$$387.prop] != null;
    }
    if (v17669) {
      v5095 = JAM.set(a$$387.elem.style, a$$387.prop, a$$387.now + a$$387.unit, JAM.policy.p2);
    } else {
      v5095 = JAM.set(a$$387.elem, a$$387.prop, a$$387.now, JAM.policy.p2);
    }
    v5095;
    return;
  }
  function v1066(a$$386) {
    JAM.call(f$$4.style, f$$4, [a$$386.elem, "opacity", a$$386.now], JAM.policy.p3);
    return;
  }
  function v1065() {
    clearInterval(co);
    co = null;
    return;
  }
  function v1064() {
    var a$$385;
    var b$$238 = f$$4.timers;
    var c$$194 = 0;
    var v5098 = c$$194 < b$$238.length;
    for (;v5098;) {
      a$$385 = b$$238[c$$194];
      var v17673 = !JAM.call(a$$385, null, [], JAM.policy.p3);
      if (v17673) {
        v17673 = b$$238[c$$194] === a$$385;
      }
      var v12070 = v17673;
      if (v12070) {
        var v17674 = c$$194;
        c$$194 = c$$194 - 1;
        JAM.call(b$$238.splice, b$$238, [v17674, 1], JAM.policy.p3);
      }
      c$$194++;
      v5098 = c$$194 < b$$238.length;
    }
    var v5099 = b$$238.length;
    if (!v5099) {
      var v12072 = f$$4.fx;
      JAM.call(v12072.stop, v12072, [], JAM.policy.p3);
    }
    return;
  }
  function v1063(a$$383) {
    function v1062(a$$384, b$$237) {
      JAM.set(h$$78.style, "overflow" + b$$237, i$$143.overflow[a$$384], JAM.policy.p2);
      return;
    }
    var b$$236;
    var c$$193;
    var d$$154;
    var v5102 = cq;
    if (!v5102) {
      v5102 = cr();
    }
    var e$$161 = v5102;
    var g$$95 = !0;
    var h$$78 = this.elem;
    var i$$143 = this.options;
    var v12076 = a$$383;
    if (!v12076) {
      v12076 = e$$161 >= i$$143.duration + this.startTime;
    }
    if (v12076) {
      this.now = this.end;
      this.pos = this.state = 1;
      JAM.call(this.update, this, [], JAM.policy.p3);
      JAM.set(i$$143.animatedProperties, this.prop, !0, JAM.policy.p2);
      for (b$$236 in i$$143.animatedProperties) {
        var v5103 = i$$143.animatedProperties[b$$236] !== !0;
        if (v5103) {
          g$$95 = !1;
        }
      }
      if (g$$95) {
        var v17678 = i$$143.overflow != null;
        if (v17678) {
          v17678 = !f$$4.support.shrinkWrapBlocks;
        }
        var v12081 = v17678;
        if (v12081) {
          JAM.call(f$$4.each, f$$4, [["", "X", "Y"], v1062], JAM.policy.p3);
        }
        var v12082 = i$$143.hide;
        if (v12082) {
          var v17680 = JAM.call(f$$4, null, [h$$78], JAM.policy.p3);
          JAM.call(v17680.hide, v17680, [], JAM.policy.p3);
        }
        var v12083 = i$$143.hide;
        if (!v12083) {
          v12083 = i$$143.show;
        }
        if (v12083) {
          for (b$$236 in i$$143.animatedProperties) {
            JAM.call(f$$4.style, f$$4, [h$$78, b$$236, i$$143.orig[b$$236]], JAM.policy.p3);
            JAM.call(f$$4.removeData, f$$4, [h$$78, "fxshow" + b$$236, !0], JAM.policy.p3);
            JAM.call(f$$4.removeData, f$$4, [h$$78, "toggle" + b$$236, !0], JAM.policy.p3);
          }
        }
        d$$154 = i$$143.complete;
        if (d$$154) {
          i$$143.complete = !1;
          JAM.call(d$$154.call, d$$154, [h$$78], JAM.policy.p3);
        }
      }
      return!1;
    }
    var v12086;
    if (i$$143.duration == Infinity) {
      v12086 = this.now = e$$161;
    } else {
      c$$193 = e$$161 - this.startTime;
      this.state = c$$193 / i$$143.duration;
      var v25686 = f$$4.easing;
      var v31121 = JAM.call(v25686[i$$143.animatedProperties[this.prop]], v25686, [this.state, c$$193, 0, 1, i$$143.duration], JAM.policy.p3);
      this.pos = v31121;
      v12086 = this.now = this.start + (this.end - this.start) * this.pos;
    }
    v12086;
    JAM.call(this.update, this, [], JAM.policy.p3);
    return!0;
  }
  function v1061() {
    var v17686 = this.options.orig;
    var v17687 = this.prop;
    var v21601 = JAM.call(f$$4._data, f$$4, [this.elem, "fxshow" + this.prop], JAM.policy.p3);
    if (!v21601) {
      v21601 = JAM.call(f$$4.style, f$$4, [this.elem, this.prop], JAM.policy.p3);
    }
    JAM.set(v17686, v17687, v21601, JAM.policy.p2);
    this.options.hide = !0;
    JAM.call(this.custom, this, [JAM.call(this.cur, this, [], JAM.policy.p3), 0], JAM.policy.p3);
    return;
  }
  function v1060() {
    var a$$382 = JAM.call(f$$4._data, f$$4, [this.elem, "fxshow" + this.prop], JAM.policy.p3);
    var v21602 = this.options.orig;
    var v21603 = this.prop;
    var v25698 = a$$382;
    if (!v25698) {
      v25698 = JAM.call(f$$4.style, f$$4, [this.elem, this.prop], JAM.policy.p3);
    }
    JAM.set(v21602, v21603, v25698, JAM.policy.p2);
    this.options.show = !0;
    var v17689;
    if (a$$382 !== b$$9) {
      v17689 = JAM.call(this.custom, this, [JAM.call(this.cur, this, [], JAM.policy.p3), a$$382], JAM.policy.p3);
    } else {
      var v25699;
      var v28502 = this.prop === "width";
      if (!v28502) {
        v28502 = this.prop === "height";
      }
      if (v28502) {
        v25699 = 1;
      } else {
        v25699 = 0;
      }
      v17689 = JAM.call(this.custom, this, [v25699, JAM.call(this.cur, this, [], JAM.policy.p3)], JAM.policy.p3);
    }
    v17689;
    var v12089 = JAM.call(f$$4, null, [this.elem], JAM.policy.p3);
    JAM.call(v12089.show, v12089, [], JAM.policy.p3);
    return;
  }
  function v1059(a$$380, c$$192, d$$153) {
    function v1058() {
      var v5110 = JAM.call(f$$4._data, f$$4, [e$$160.elem, "fxshow" + e$$160.prop], JAM.policy.p3) === b$$9;
      if (v5110) {
        var v12091;
        if (e$$160.options.hide) {
          v12091 = JAM.call(f$$4._data, f$$4, [e$$160.elem, "fxshow" + e$$160.prop, e$$160.start], JAM.policy.p3);
        } else {
          var v17696 = e$$160.options.show;
          if (v17696) {
            v17696 = JAM.call(f$$4._data, f$$4, [e$$160.elem, "fxshow" + e$$160.prop, e$$160.end], JAM.policy.p3);
          }
          v12091 = v17696;
        }
        v12091;
      }
      return;
    }
    function h$$77(a$$381) {
      return JAM.call(e$$160.step, e$$160, [a$$381], JAM.policy.p3);
    }
    var e$$160 = this;
    var g$$94 = f$$4.fx;
    var v29644 = cq;
    if (!v29644) {
      v29644 = cr();
    }
    this.startTime = v29644;
    this.end = c$$192;
    this.now = this.start = a$$380;
    this.pos = this.state = 0;
    var v28503 = d$$153;
    if (!v28503) {
      v28503 = this.unit;
    }
    var v27419 = v28503;
    if (!v27419) {
      var v28504;
      if (f$$4.cssNumber[this.prop]) {
        v28504 = "";
      } else {
        v28504 = "px";
      }
      v27419 = v28504;
    }
    this.unit = v27419;
    h$$77.queue = this.options.queue;
    h$$77.elem = this.elem;
    h$$77.saveState = v1058;
    var v21616 = h$$77();
    if (v21616) {
      var v25702 = f$$4.timers;
      v21616 = JAM.call(v25702.push, v25702, [h$$77], JAM.policy.p3);
    }
    var v17698 = v21616;
    if (v17698) {
      v17698 = !co;
    }
    var v12092 = v17698;
    if (v12092) {
      co = JAM.call(setInterval, null, [g$$94.tick, g$$94.interval]);
    }
    return;
  }
  function v1057() {
    var v12093 = this.elem[this.prop] != null;
    if (v12093) {
      var v17702 = !this.elem.style;
      if (!v17702) {
        v17702 = this.elem.style[this.prop] == null;
      }
      v12093 = v17702;
    }
    if (v12093) {
      return this.elem[this.prop];
    }
    var a$$379;
    var b$$235 = JAM.call(f$$4.css, f$$4, [this.elem, this.prop], JAM.policy.p3);
    var v5116;
    if (isNaN(a$$379 = parseFloat(b$$235))) {
      var v12094;
      var v21622 = !b$$235;
      if (!v21622) {
        v21622 = b$$235 === "auto";
      }
      if (v21622) {
        v12094 = 0;
      } else {
        v12094 = b$$235;
      }
      v5116 = v12094;
    } else {
      v5116 = a$$379;
    }
    return v5116;
  }
  function v1056() {
    var v12096 = this.options.step;
    if (v12096) {
      var v17706 = this.options.step;
      JAM.call(v17706.call, v17706, [this.elem, this.now, this], JAM.policy.p3);
    }
    var v17709 = f$$4.fx.step[this.prop];
    if (!v17709) {
      v17709 = f$$4.fx.step._default;
    }
    JAM.call(v17709, null, [this], JAM.policy.p3);
    return;
  }
  function v1055(a$$378, b$$234, c$$191) {
    this.options = b$$234;
    this.elem = a$$378;
    this.prop = c$$191;
    var v12098 = b$$234.orig;
    if (!v12098) {
      v12098 = {};
    }
    b$$234.orig = v12098;
    return;
  }
  function v1054(a$$377) {
    return-JAM.call(Math.cos, Math, [a$$377 * Math.PI], JAM.policy.p3) / 2 + .5;
  }
  function v1053(a$$376) {
    return a$$376;
  }
  function v1052(a$$374, b$$233, c$$190) {
    function v1051(a$$375) {
      var v12100 = JAM.call(f$$4.isFunction, f$$4, [d$$152.old], JAM.policy.p3);
      if (v12100) {
        var v17713 = d$$152.old;
        JAM.call(v17713.call, v17713, [this], JAM.policy.p3);
      }
      var v12101;
      if (d$$152.queue) {
        v12101 = JAM.call(f$$4.dequeue, f$$4, [this, d$$152.queue], JAM.policy.p3);
      } else {
        var v17715 = a$$375 !== !1;
        if (v17715) {
          v17715 = JAM.call(f$$4._unmark, f$$4, [this], JAM.policy.p3);
        }
        v12101 = v17715;
      }
      v12101;
      return;
    }
    var v5118;
    var v17717 = a$$374;
    if (v17717) {
      v17717 = typeof a$$374 == "object";
    }
    if (v17717) {
      v5118 = JAM.call(f$$4.extend, f$$4, [{}, a$$374], JAM.policy.p3);
    } else {
      var v21631 = c$$190;
      if (!v21631) {
        var v25710 = !c$$190;
        if (v25710) {
          v25710 = b$$233;
        }
        v21631 = v25710;
      }
      var v17718 = v21631;
      if (!v17718) {
        var v21632 = JAM.call(f$$4.isFunction, f$$4, [a$$374], JAM.policy.p3);
        if (v21632) {
          v21632 = a$$374;
        }
        v17718 = v21632;
      }
      var v12102 = v17718;
      var v17719 = c$$190 && b$$233;
      if (!v17719) {
        var v25712 = b$$233;
        if (v25712) {
          v25712 = !JAM.call(f$$4.isFunction, f$$4, [b$$233], JAM.policy.p3);
        }
        var v21634 = v25712;
        if (v21634) {
          v21634 = b$$233;
        }
        v17719 = v21634;
      }
      v5118 = {complete:v12102, duration:a$$374, easing:v17719};
    }
    var d$$152 = v5118;
    var v5119;
    if (f$$4.fx.off) {
      v5119 = 0;
    } else {
      var v12105;
      if (typeof d$$152.duration == "number") {
        v12105 = d$$152.duration;
      } else {
        var v17721;
        if (d$$152.duration in f$$4.fx.speeds) {
          v17721 = f$$4.fx.speeds[d$$152.duration];
        } else {
          v17721 = f$$4.fx.speeds._default;
        }
        v12105 = v17721;
      }
      v5119 = v12105;
    }
    d$$152.duration = v5119;
    var v12107 = d$$152.queue == null;
    if (!v12107) {
      v12107 = d$$152.queue === !0;
    }
    if (v12107) {
      d$$152.queue = "fx";
    }
    d$$152.old = d$$152.complete;
    d$$152.complete = v1051;
    return d$$152;
  }
  function v1050(a$$372, b$$232) {
    function v1049(a$$373, c$$189, d$$151) {
      return JAM.call(this.animate, this, [b$$232, a$$373, c$$189, d$$151], JAM.policy.p3);
    }
    JAM.set(f$$4.fn, a$$372, v1049, JAM.policy.p2);
    return;
  }
  function v1048(a$$370, c$$186, d$$150) {
    function v1047() {
      var b$$230;
      var c$$187 = !1;
      var e$$158 = f$$4.timers;
      var g$$93 = JAM.call(f$$4._data, f$$4, [this], JAM.policy.p3);
      if (!d$$150) {
        JAM.call(f$$4._unmark, f$$4, [!0, this], JAM.policy.p3);
      }
      if (a$$370 == null) {
        for (b$$230 in g$$93) {
          var v17727 = g$$93[b$$230];
          if (v17727) {
            v17727 = g$$93[b$$230].stop;
          }
          var v12110 = v17727;
          if (v12110) {
            v12110 = JAM.call(b$$230.indexOf, b$$230, [".run"], JAM.policy.p3) === b$$230.length - 4;
          }
          if (v12110) {
            var e$$inline_63 = g$$93[b$$230];
            JAM.call(f$$4.removeData, f$$4, [this, b$$230, !0], JAM.policy.p3);
            JAM.call(e$$inline_63.stop, e$$inline_63, [d$$150], JAM.policy.p3);
          }
        }
      } else {
        var v12112 = g$$93[b$$230 = a$$370 + ".run"];
        if (v12112) {
          v12112 = g$$93[b$$230].stop;
        }
        if (v12112) {
          var e$$inline_68 = g$$93[b$$230];
          JAM.call(f$$4.removeData, f$$4, [this, b$$230, !0], JAM.policy.p3);
          JAM.call(e$$inline_68.stop, e$$inline_68, [d$$150], JAM.policy.p3);
        }
      }
      b$$230 = e$$158.length;
      var v5126 = b$$230;
      b$$230 = b$$230 - 1;
      for (;v5126;) {
        var v12114 = e$$158[b$$230].elem === this;
        if (v12114) {
          var v17733 = a$$370 == null;
          if (!v17733) {
            v17733 = e$$158[b$$230].queue === a$$370;
          }
          v12114 = v17733;
        }
        var v5125 = v12114;
        if (v5125) {
          var v21646;
          if (d$$150) {
            v21646 = JAM.call(e$$158[b$$230], e$$158, [!0], JAM.policy.p3);
          } else {
            var v25720 = e$$158[b$$230];
            v21646 = JAM.call(v25720.saveState, v25720, [], JAM.policy.p3);
          }
          v21646;
          c$$187 = !0;
          JAM.call(e$$158.splice, e$$158, [b$$230, 1], JAM.policy.p3);
        }
        v5126 = b$$230;
        b$$230 = b$$230 - 1;
      }
      var v12115 = !d$$150;
      if (!v12115) {
        v12115 = !c$$187;
      }
      var v5127 = v12115;
      if (v5127) {
        JAM.call(f$$4.dequeue, f$$4, [this, a$$370], JAM.policy.p3);
      }
      return;
    }
    var v12116 = typeof a$$370 != "string";
    if (v12116) {
      d$$150 = c$$186;
      c$$186 = a$$370;
      a$$370 = b$$9;
    }
    var v17736 = c$$186;
    if (v17736) {
      v17736 = a$$370 !== !1;
    }
    var v12117 = v17736;
    if (v12117) {
      JAM.call(this.queue, this, [a$$370 || "fx", []], JAM.policy.p3);
    }
    return JAM.call(this.each, this, [v1047], JAM.policy.p3);
  }
  function v1046(a$$369, b$$228, c$$184, d$$148) {
    function g$$91() {
      var v5128 = e$$157.queue === !1;
      if (v5128) {
        JAM.call(f$$4._mark, f$$4, [this], JAM.policy.p3);
      }
      var b$$229 = JAM.call(f$$4.extend, f$$4, [{}, e$$157], JAM.policy.p3);
      var c$$185 = this.nodeType === 1;
      var v5130 = c$$185;
      if (v5130) {
        var v12120 = JAM.call(f$$4, null, [this], JAM.policy.p3);
        v5130 = JAM.call(v12120.is, v12120, [":hidden"], JAM.policy.p3);
      }
      var d$$149 = v5130;
      var g$$92;
      var h$$75;
      var i$$142;
      var j$$59;
      var k$$37;
      var l$$49;
      var m$$25;
      var n$$76;
      var o$$15;
      var p$$37;
      var q$$14;
      b$$229.animatedProperties = {};
      for (i$$142 in a$$369) {
        g$$92 = JAM.call(f$$4.camelCase, f$$4, [i$$142], JAM.policy.p3);
        var v12121 = i$$142 !== g$$92;
        if (v12121) {
          JAM.set(a$$369, g$$92, a$$369[i$$142], JAM.policy.p2);
          delete a$$369[i$$142];
        }
        var v12122 = k$$37 = f$$4.cssHooks[g$$92];
        if (v12122) {
          v12122 = "expand" in k$$37;
        }
        if (v12122) {
          l$$49 = JAM.call(k$$37.expand, k$$37, [a$$369[g$$92]], JAM.policy.p3);
          delete a$$369[g$$92];
          for (i$$142 in l$$49) {
            var v5131 = i$$142 in a$$369;
            if (!v5131) {
              JAM.set(a$$369, i$$142, l$$49[i$$142], JAM.policy.p2);
            }
          }
        }
      }
      for (g$$92 in a$$369) {
        h$$75 = a$$369[g$$92];
        var v12125;
        if (JAM.call(f$$4.isArray, f$$4, [h$$75], JAM.policy.p3)) {
          JAM.set(b$$229.animatedProperties, g$$92, h$$75[1], JAM.policy.p2);
          v12125 = h$$75 = JAM.set(a$$369, g$$92, h$$75[0], JAM.policy.p2);
        } else {
          var v17739 = b$$229.animatedProperties;
          var v27423 = b$$229.specialEasing;
          if (v27423) {
            v27423 = b$$229.specialEasing[g$$92];
          }
          var v25721 = v27423;
          if (!v25721) {
            v25721 = b$$229.easing;
          }
          var v21649 = v25721;
          if (!v21649) {
            v21649 = "swing";
          }
          v12125 = JAM.set(v17739, g$$92, v21649, JAM.policy.p2);
        }
        v12125;
        var v17741 = h$$75 === "hide";
        if (v17741) {
          v17741 = d$$149;
        }
        var v12126 = v17741;
        if (!v12126) {
          var v17742 = h$$75 === "show";
          if (v17742) {
            v17742 = !d$$149;
          }
          v12126 = v17742;
        }
        if (v12126) {
          var v5133 = b$$229.complete;
          return JAM.call(v5133.call, v5133, [this], JAM.policy.p3);
        }
        var v12127 = c$$185;
        if (v12127) {
          var v17744 = g$$92 === "height";
          if (!v17744) {
            v17744 = g$$92 === "width";
          }
          v12127 = v17744;
        }
        var v5135 = v12127;
        if (v5135) {
          b$$229.overflow = [this.style.overflow, this.style.overflowX, this.style.overflowY];
          var v21654 = JAM.call(f$$4.css, f$$4, [this, "display"], JAM.policy.p3) === "inline";
          if (v21654) {
            v21654 = JAM.call(f$$4.css, f$$4, [this, "float"], JAM.policy.p3) === "none";
          }
          var v17748 = v21654;
          if (v17748) {
            var v21655;
            var v27425 = !f$$4.support.inlineBlockNeedsLayout;
            if (!v27425) {
              v27425 = cu(this.nodeName) === "inline";
            }
            if (v27425) {
              v21655 = this.style.display = "inline-block";
            } else {
              v21655 = this.style.zoom = 1;
            }
            v21655;
          }
        }
      }
      var v5136 = b$$229.overflow != null;
      if (v5136) {
        this.style.overflow = "hidden";
      }
      for (i$$142 in a$$369) {
        j$$59 = JAM.new(f$$4.fx, [this, b$$229, i$$142]);
        h$$75 = a$$369[i$$142];
        var v12130;
        if (JAM.call(cm.test, cm, [h$$75], JAM.policy.p3)) {
          var v21656 = JAM.call(f$$4._data, f$$4, [this, "toggle" + i$$142], JAM.policy.p3);
          if (!v21656) {
            var v25729;
            if (h$$75 === "toggle") {
              var v27426;
              if (d$$149) {
                v27426 = "show";
              } else {
                v27426 = "hide";
              }
              v25729 = v27426;
            } else {
              v25729 = 0;
            }
            v21656 = v25729;
          }
          q$$14 = v21656;
          var v21657;
          if (q$$14) {
            var v27428 = "toggle" + i$$142;
            var v28510;
            if (q$$14 === "show") {
              v28510 = "hide";
            } else {
              v28510 = "show";
            }
            JAM.call(f$$4._data, f$$4, [this, v27428, v28510], JAM.policy.p3);
            v21657 = JAM.call(j$$59[q$$14], j$$59, [], JAM.policy.p3);
          } else {
            v21657 = JAM.call(j$$59[h$$75], j$$59, [], JAM.policy.p3);
          }
          v12130 = v21657;
        } else {
          m$$25 = JAM.call(cn.exec, cn, [h$$75], JAM.policy.p3);
          n$$76 = JAM.call(j$$59.cur, j$$59, [], JAM.policy.p3);
          var v21658;
          if (m$$25) {
            o$$15 = parseFloat(m$$25[2]);
            var v29648 = m$$25[3];
            if (!v29648) {
              var v29930;
              if (f$$4.cssNumber[i$$142]) {
                v29930 = "";
              } else {
                v29930 = "px";
              }
              v29648 = v29930;
            }
            p$$37 = v29648;
            var v29198 = p$$37 !== "px";
            if (v29198) {
              JAM.call(f$$4.style, f$$4, [this, i$$142, (o$$15 || 1) + p$$37], JAM.policy.p3);
              n$$76 = (o$$15 || 1) / JAM.call(j$$59.cur, j$$59, [], JAM.policy.p3) * n$$76;
              JAM.call(f$$4.style, f$$4, [this, i$$142, n$$76 + p$$37], JAM.policy.p3);
            }
            var v28511 = m$$25[1];
            if (v28511) {
              var v29933;
              if (m$$25[1] === "-=") {
                v29933 = -1;
              } else {
                v29933 = 1;
              }
              o$$15 = v29933 * o$$15 + n$$76;
            }
            v21658 = JAM.call(j$$59.custom, j$$59, [n$$76, o$$15, p$$37], JAM.policy.p3);
          } else {
            v21658 = JAM.call(j$$59.custom, j$$59, [n$$76, h$$75, ""], JAM.policy.p3);
          }
          v12130 = v21658;
        }
        v12130;
      }
      return!0;
    }
    var e$$157 = JAM.call(f$$4.speed, f$$4, [b$$228, c$$184, d$$148], JAM.policy.p3);
    if (JAM.call(f$$4.isEmptyObject, f$$4, [a$$369], JAM.policy.p3)) {
      return JAM.call(this.each, this, [e$$157.complete, [!1]], JAM.policy.p3);
    }
    a$$369 = JAM.call(f$$4.extend, f$$4, [{}, a$$369], JAM.policy.p3);
    var v5140;
    if (e$$157.queue === !1) {
      v5140 = JAM.call(this.each, this, [g$$91], JAM.policy.p3);
    } else {
      v5140 = JAM.call(this.queue, this, [e$$157.queue, g$$91], JAM.policy.p3);
    }
    return v5140;
  }
  function v1045(a$$368, b$$227, c$$183, d$$147) {
    var v21659 = JAM.call(this.filter, this, [":hidden"], JAM.policy.p3);
    var v17753 = JAM.call(v21659.css, v21659, ["opacity", 0], JAM.policy.p3);
    var v12134 = JAM.call(v17753.show, v17753, [], JAM.policy.p3);
    var v5141 = JAM.call(v12134.end, v12134, [], JAM.policy.p3);
    return JAM.call(v5141.animate, v5141, [{opacity:b$$227}, a$$368, c$$183, d$$147], JAM.policy.p3);
  }
  function v1044(a$$367, b$$225, c$$182) {
    function v1043() {
      var v5143;
      if (d$$146) {
        v5143 = a$$367;
      } else {
        var v12135 = JAM.call(f$$4, null, [this], JAM.policy.p3);
        v5143 = JAM.call(v12135.is, v12135, [":hidden"], JAM.policy.p3);
      }
      var b$$226 = v5143;
      var v5144 = JAM.call(f$$4, null, [this], JAM.policy.p3);
      var v12136;
      if (b$$226) {
        v12136 = "show";
      } else {
        v12136 = "hide";
      }
      JAM.call(v5144[v12136], v5144, [], JAM.policy.p3);
      return;
    }
    var d$$146 = typeof a$$367 == "boolean";
    var v5147;
    var v17754 = JAM.call(f$$4.isFunction, f$$4, [a$$367], JAM.policy.p3);
    if (v17754) {
      v17754 = JAM.call(f$$4.isFunction, f$$4, [b$$225], JAM.policy.p3);
    }
    if (v17754) {
      var v12137 = this._toggle;
      v5147 = JAM.call(v12137.apply, v12137, [this, arguments], JAM.policy.p3);
    } else {
      var v12138;
      var v21660 = a$$367 == null;
      if (!v21660) {
        v21660 = d$$146;
      }
      if (v21660) {
        v12138 = JAM.call(this.each, this, [v1043], JAM.policy.p3);
      } else {
        v12138 = JAM.call(this.animate, this, [ct("toggle", 3), a$$367, b$$225, c$$182], JAM.policy.p3);
      }
      v5147 = v12138;
    }
    v5147;
    return this;
  }
  function v1042(a$$366, b$$224, c$$181) {
    var v12140 = a$$366;
    if (!v12140) {
      v12140 = a$$366 === 0;
    }
    if (v12140) {
      return JAM.call(this.animate, this, [ct("hide", 3), a$$366, b$$224, c$$181], JAM.policy.p3);
    }
    var d$$145;
    var e$$156;
    var g$$90 = 0;
    var h$$74 = this.length;
    var v5150 = g$$90 < h$$74;
    for (;v5150;) {
      d$$145 = this[g$$90];
      var v12141 = d$$145.style;
      if (v12141) {
        e$$156 = JAM.call(f$$4.css, f$$4, [d$$145, "display"], JAM.policy.p3);
        var v25732 = e$$156 !== "none";
        if (v25732) {
          v25732 = !JAM.call(f$$4._data, f$$4, [d$$145, "olddisplay"], JAM.policy.p3);
        }
        var v21661 = v25732;
        if (v21661) {
          JAM.call(f$$4._data, f$$4, [d$$145, "olddisplay", e$$156], JAM.policy.p3);
        }
      }
      g$$90++;
      v5150 = g$$90 < h$$74;
    }
    g$$90 = 0;
    var v5152 = g$$90 < h$$74;
    for (;v5152;) {
      var v5151 = this[g$$90].style;
      if (v5151) {
        this[g$$90].style.display = "none";
      }
      g$$90++;
      v5152 = g$$90 < h$$74;
    }
    return this;
  }
  function v1041(a$$365, b$$223, c$$180) {
    var d$$144;
    var e$$155;
    var v12144 = a$$365;
    if (!v12144) {
      v12144 = a$$365 === 0;
    }
    if (v12144) {
      return JAM.call(this.animate, this, [ct("show", 3), a$$365, b$$223, c$$180], JAM.policy.p3);
    }
    var g$$89 = 0;
    var h$$73 = this.length;
    var v5155 = g$$89 < h$$73;
    for (;v5155;) {
      d$$144 = this[g$$89];
      var v12145 = d$$144.style;
      if (v12145) {
        e$$155 = d$$144.style.display;
        var v27431 = !JAM.call(f$$4._data, f$$4, [d$$144, "olddisplay"], JAM.policy.p3);
        if (v27431) {
          v27431 = e$$155 === "none";
        }
        var v25734 = v27431;
        if (v25734) {
          e$$155 = d$$144.style.display = "";
        }
        var v27433 = e$$155 === "";
        if (v27433) {
          v27433 = JAM.call(f$$4.css, f$$4, [d$$144, "display"], JAM.policy.p3) === "none";
        }
        var v25735 = v27433;
        if (!v25735) {
          v25735 = !JAM.call(f$$4.contains, f$$4, [d$$144.ownerDocument.documentElement, d$$144], JAM.policy.p3);
        }
        var v21662 = v25735;
        if (v21662) {
          JAM.call(f$$4._data, f$$4, [d$$144, "olddisplay", cu(d$$144.nodeName)], JAM.policy.p3);
        }
      }
      g$$89++;
      v5155 = g$$89 < h$$73;
    }
    g$$89 = 0;
    var v5160 = g$$89 < h$$73;
    for (;v5160;) {
      d$$144 = this[g$$89];
      if (d$$144.style) {
        e$$155 = d$$144.style.display;
        var v12146 = e$$155 === "";
        if (!v12146) {
          v12146 = e$$155 === "none";
        }
        if (v12146) {
          var v5157 = d$$144.style;
          var v12147 = JAM.call(f$$4._data, f$$4, [d$$144, "olddisplay"], JAM.policy.p3);
          if (!v12147) {
            v12147 = "";
          }
          v5157.display = v12147;
        }
      }
      g$$89++;
      v5160 = g$$89 < h$$73;
    }
    return this;
  }
  function v1040(c$$179) {
    function v1039() {
      if (d$$143) {
        JAM.call(d$$143, null, [0, 1], JAM.policy.p3);
      }
      return;
    }
    function v1038(e$$153, g$$88) {
      function v1037(a$$363, e$$154) {
        var j$$58;
        var k$$36;
        var l$$48;
        var m$$24;
        var n$$75;
        try {
          var v12148 = d$$143;
          if (v12148) {
            var v17762 = e$$154;
            if (!v17762) {
              v17762 = h$$72.readyState === 4;
            }
            v12148 = v17762;
          }
          if (v12148) {
            d$$143 = b$$9;
            if (i$$141) {
              JAM.set(h$$72, "onreadystatechange", f$$4.noop);
              if (ce) {
                delete cg[i$$141];
              }
            }
            if (e$$154) {
              var v5161 = h$$72.readyState !== 4;
              if (v5161) {
                JAM.call(h$$72.abort, h$$72, [], JAM.policy.p3);
              }
            } else {
              j$$58 = h$$72.status;
              l$$48 = JAM.call(h$$72.getAllResponseHeaders, h$$72, [], JAM.policy.p3);
              m$$24 = {};
              n$$75 = h$$72.responseXML;
              var v17763 = n$$75;
              if (v17763) {
                v17763 = n$$75.documentElement;
              }
              var v12150 = v17763;
              if (v12150) {
                m$$24.xml = n$$75;
              }
              try {
                m$$24.text = h$$72.responseText;
              } catch (a$$364) {
              }
              try {
                k$$36 = h$$72.statusText;
              } catch (o$$14) {
                k$$36 = "";
              }
              var v5162;
              var v21665 = !j$$58;
              if (v21665) {
                v21665 = c$$179.isLocal;
              }
              var v17764 = v21665;
              if (v17764) {
                v17764 = !c$$179.crossDomain;
              }
              if (v17764) {
                var v12151;
                if (m$$24.text) {
                  v12151 = 200;
                } else {
                  v12151 = 404;
                }
                v5162 = j$$58 = v12151;
              } else {
                var v12152 = j$$58 === 1223;
                if (v12152) {
                  v12152 = j$$58 = 204;
                }
                v5162 = v12152;
              }
              v5162;
            }
          }
        } catch (p$$36) {
          if (!e$$154) {
            JAM.call(g$$88, null, [-1, p$$36], JAM.policy.p3);
          }
        }
        if (m$$24) {
          JAM.call(g$$88, null, [j$$58, k$$36, m$$24, l$$48], JAM.policy.p3);
        }
        return;
      }
      var h$$72 = JAM.call(c$$179.xhr, c$$179, [], JAM.policy.p3);
      var i$$141;
      var j$$57;
      var v5164;
      if (c$$179.username) {
        v5164 = JAM.call(h$$72.open, h$$72, [c$$179.type, c$$179.url, c$$179.async, c$$179.username, c$$179.password], JAM.policy.p3);
      } else {
        v5164 = JAM.call(h$$72.open, h$$72, [c$$179.type, c$$179.url, c$$179.async], JAM.policy.p3);
      }
      v5164;
      if (c$$179.xhrFields) {
        for (j$$57 in c$$179.xhrFields) {
          JAM.set(h$$72, j$$57, c$$179.xhrFields[j$$57], JAM.policy.p2);
        }
      }
      var v17766 = c$$179.mimeType;
      if (v17766) {
        v17766 = h$$72.overrideMimeType;
      }
      var v12164 = v17766;
      if (v12164) {
        JAM.call(h$$72.overrideMimeType, h$$72, [c$$179.mimeType], JAM.policy.p3);
      }
      var v17768 = !c$$179.crossDomain;
      if (v17768) {
        v17768 = !e$$153["X-Requested-With"];
      }
      var v12165 = v17768;
      if (v12165) {
        e$$153["X-Requested-With"] = "XMLHttpRequest";
      }
      try {
        for (j$$57 in e$$153) {
          JAM.call(h$$72.setRequestHeader, h$$72, [j$$57, e$$153[j$$57]], JAM.policy.p3);
        }
      } catch (k$$35) {
      }
      var v25737 = c$$179.hasContent;
      if (v25737) {
        v25737 = c$$179.data;
      }
      var v21669 = v25737;
      if (!v21669) {
        v21669 = null;
      }
      JAM.call(h$$72.send, h$$72, [v21669], JAM.policy.p3);
      d$$143 = v1037;
      var v12166;
      var v21670 = !c$$179.async;
      if (!v21670) {
        v21670 = h$$72.readyState === 4;
      }
      if (v21670) {
        v12166 = JAM.call(d$$143, null, [], JAM.policy.p3);
      } else {
        i$$141 = cf = cf + 1;
        if (ce) {
          if (!cg) {
            cg = {};
            var v29650 = JAM.call(f$$4, null, [a$$13], JAM.policy.p3);
            JAM.call(v29650.unload, v29650, [ce], JAM.policy.p3);
          }
          JAM.set(cg, i$$141, d$$143, JAM.policy.p2);
        }
        v12166 = JAM.set(h$$72, "onreadystatechange", d$$143);
      }
      v12166;
      return;
    }
    var v12167 = !c$$179.crossDomain;
    if (!v12167) {
      v12167 = f$$4.support.cors;
    }
    if (v12167) {
      var d$$143;
      return{send:v1038, abort:v1039};
    }
    return;
  }
  function v1036(a$$362) {
    var v5170 = f$$4.support;
    var v12168 = !!a$$362;
    var v17775 = !!a$$362;
    if (v17775) {
      v17775 = "withCredentials" in a$$362;
    }
    JAM.call(f$$4.extend, f$$4, [v5170, {ajax:v12168, cors:v17775}], JAM.policy.p3);
    return;
  }
  function v1035() {
    var JSCompiler_temp$$10;
    var v12170 = !this.isLocal;
    if (v12170) {
      v12170 = ch$$14();
    }
    if (JSCompiler_temp$$10 = v12170) {
    } else {
      JSCompiler_inline_label_ci_59: {
        try {
          JSCompiler_temp$$10 = JAM.new(a$$13.ActiveXObject, ["Microsoft.XMLHTTP"]);
          break JSCompiler_inline_label_ci_59;
        } catch (b$$inline_58) {
        }
        JSCompiler_temp$$10 = void 0;
      }
    }
    return JSCompiler_temp$$10;
  }
  function v1034() {
    var a$$361;
    for (a$$361 in cg) {
      JAM.call(cg[a$$361], cg, [0, 1], JAM.policy.p3);
    }
    return;
  }
  function v1033(a$$359) {
    function v1032() {
      if (d$$142) {
        JAM.call(d$$142.onload, d$$142, [0, 1], JAM.policy.p3);
      }
      return;
    }
    function v1031(f$$46, g$$87) {
      function v1030(a$$360, c$$178) {
        var v17777 = c$$178;
        if (!v17777) {
          v17777 = !d$$142.readyState;
        }
        var v12171 = v17777;
        if (!v12171) {
          v12171 = JAM.call(/loaded|complete/.test, /loaded|complete/, [d$$142.readyState], JAM.policy.p3);
        }
        if (v12171) {
          JAM.set(d$$142, "onload", JAM.set(d$$142, "onreadystatechange", null));
          var v25742 = e$$152;
          if (v25742) {
            v25742 = d$$142.parentNode;
          }
          var v21674 = v25742;
          if (v21674) {
            JAM.call(e$$152.removeChild, e$$152, [d$$142], JAM.policy.p3);
          }
          d$$142 = b$$9;
          if (!c$$178) {
            JAM.call(g$$87, null, [200, "success"], JAM.policy.p3);
          }
        }
        return;
      }
      d$$142 = JAM.call(c$$5.createElement, c$$5, ["script"], JAM.policy.p3);
      d$$142.async = "async";
      var v25743 = a$$359.scriptCharset;
      if (v25743) {
        d$$142.charset = a$$359.scriptCharset;
      }
      d$$142.src = a$$359.url;
      JAM.set(d$$142, "onload", JAM.set(d$$142, "onreadystatechange", v1030));
      JAM.call(e$$152.insertBefore, e$$152, [d$$142, e$$152.firstChild], JAM.policy.p3);
      return;
    }
    if (a$$359.crossDomain) {
      var d$$142;
      var v12173 = c$$5.head;
      if (!v12173) {
        v12173 = JAM.call(c$$5.getElementsByTagName, c$$5, ["head"], JAM.policy.p3)[0];
      }
      var v5175 = v12173;
      if (!v5175) {
        v5175 = c$$5.documentElement;
      }
      var e$$152 = v5175;
      return{send:v1031, abort:v1032};
    }
    return;
  }
  function v1029(a$$358) {
    var v12175 = a$$358.cache === b$$9;
    if (v12175) {
      a$$358.cache = !1;
    }
    var v12176 = a$$358.crossDomain;
    if (v12176) {
      a$$358.type = "GET";
      a$$358.global = !1;
    }
    return;
  }
  function v1028(a$$357) {
    JAM.call(f$$4.globalEval, f$$4, [a$$357], JAM.policy.p3);
    return a$$357;
  }
  function v1027(b$$222, c$$177, d$$141) {
    function v1026() {
      if (!g$$86) {
        JAM.call(f$$4.error, f$$4, [h$$71 + " was not called"], JAM.policy.p3);
      }
      return g$$86[0];
    }
    function v1025() {
      JAM.set(a$$13, h$$71, i$$140, JAM.policy.p2);
      var v17784 = g$$86;
      if (v17784) {
        v17784 = JAM.call(f$$4.isFunction, f$$4, [i$$140], JAM.policy.p3);
      }
      var v12179 = v17784;
      if (v12179) {
        JAM.call(a$$13[h$$71], a$$13, [g$$86[0]], JAM.policy.p3);
      }
      return;
    }
    function v1024(a$$356) {
      g$$86 = [a$$356];
      return;
    }
    var v5177 = typeof b$$222.data == "string";
    if (v5177) {
      v5177 = JAM.call(/^application\/x\-www\-form\-urlencoded/.test, /^application\/x\-www\-form\-urlencoded/, [b$$222.contentType], JAM.policy.p3);
    }
    var e$$151 = v5177;
    var v12182 = b$$222.dataTypes[0] === "jsonp";
    if (!v12182) {
      var v17788 = b$$222.jsonp !== !1;
      if (v17788) {
        var v21678 = JAM.call(cd.test, cd, [b$$222.url], JAM.policy.p3);
        if (!v21678) {
          var v25745 = e$$151;
          if (v25745) {
            v25745 = JAM.call(cd.test, cd, [b$$222.data], JAM.policy.p3);
          }
          v21678 = v25745;
        }
        v17788 = v21678;
      }
      v12182 = v17788;
    }
    if (v12182) {
      var g$$86;
      var v5178 = b$$222;
      var v12183;
      if (JAM.call(f$$4.isFunction, f$$4, [b$$222.jsonpCallback], JAM.policy.p3)) {
        v12183 = JAM.call(b$$222.jsonpCallback, b$$222, [], JAM.policy.p3);
      } else {
        v12183 = b$$222.jsonpCallback;
      }
      var h$$71 = v5178.jsonpCallback = v12183;
      var i$$140 = a$$13[h$$71];
      var j$$56 = b$$222.url;
      var k$$34 = b$$222.data;
      var l$$47 = "$1" + h$$71 + "$2";
      var v28515 = b$$222.jsonp !== !1;
      if (v28515) {
        j$$56 = JAM.call(j$$56.replace, j$$56, [cd, l$$47], JAM.policy.p3);
        var v29651 = b$$222.url === j$$56;
        if (v29651) {
          if (e$$151) {
            k$$34 = JAM.call(k$$34.replace, k$$34, [cd, l$$47], JAM.policy.p3);
          }
          var v30186 = b$$222.data === k$$34;
          if (v30186) {
            var v30498 = j$$56;
            var v30774;
            if (JAM.call(/\?/.test, /\?/, [j$$56], JAM.policy.p3)) {
              v30774 = "&";
            } else {
              v30774 = "?";
            }
            j$$56 = v30498 + (v30774 + b$$222.jsonp + "=" + h$$71);
          }
        }
      }
      b$$222.url = j$$56;
      b$$222.data = k$$34;
      JAM.set(a$$13, h$$71, v1024, JAM.policy.p2);
      JAM.call(d$$141.always, d$$141, [v1025], JAM.policy.p3);
      b$$222.converters["script json"] = v1026;
      b$$222.dataTypes[0] = "json";
      return "script";
    }
    return;
  }
  function v1023() {
    var v5181 = f$$4.expando + "_";
    var v5182 = cc;
    cc = cc + 1;
    return v5181 + v5182;
  }
  function v1022(a$$354, c$$176) {
    function v1021() {
      e$$150(this.name, this.value);
      return;
    }
    function e$$150(a$$355, b$$221) {
      var v12186;
      if (JAM.call(f$$4.isFunction, f$$4, [b$$221], JAM.policy.p3)) {
        v12186 = JAM.call(b$$221, null, [], JAM.policy.p3);
      } else {
        v12186 = b$$221;
      }
      b$$221 = v12186;
      var v12187 = d$$140;
      var v12188 = d$$140.length;
      var v17793 = encodeURIComponent(a$$355) + "=";
      var v17794 = encodeURIComponent(b$$221);
      introspect(JAM.policy.p2) {
        v12187[v12188] = v17793 + v17794;
      }
      return;
    }
    var d$$140 = [];
    var v5185 = c$$176 === b$$9;
    if (v5185) {
      c$$176 = f$$4.ajaxSettings.traditional;
    }
    var v12190 = JAM.call(f$$4.isArray, f$$4, [a$$354], JAM.policy.p3);
    if (!v12190) {
      var v17795 = a$$354.jquery;
      if (v17795) {
        v17795 = !JAM.call(f$$4.isPlainObject, f$$4, [a$$354], JAM.policy.p3);
      }
      v12190 = v17795;
    }
    if (v12190) {
      JAM.call(f$$4.each, f$$4, [a$$354, v1021], JAM.policy.p3);
    } else {
      var g$$85;
      for (g$$85 in a$$354) {
        b_(g$$85, a$$354[g$$85], c$$176, e$$150);
      }
    }
    var v5188 = JAM.call(d$$140.join, d$$140, ["&"], JAM.policy.p3);
    return JAM.call(v5188.replace, v5188, [bC, "+"], JAM.policy.p3);
  }
  function v1020(a$$347, c$$172) {
    function v1019() {
      JAM.call(v$$9.abort, v$$9, ["timeout"], JAM.policy.p3);
      return;
    }
    function v1018(a$$353) {
      if (a$$353) {
        var b$$220;
        if (s$$25 < 2) {
          for (b$$220 in a$$353) {
            JAM.set(j$$55, b$$220, [j$$55[b$$220], a$$353[b$$220]], JAM.policy.p2);
          }
        } else {
          b$$220 = a$$353[v$$9.status];
          JAM.call(v$$9.then, v$$9, [b$$220, b$$220], JAM.policy.p3);
        }
      }
      return this;
    }
    function v1017(a$$352) {
      a$$352 = a$$352 || "abort";
      if (p$$35) {
        JAM.call(p$$35.abort, p$$35, [a$$352], JAM.policy.p3);
      }
      w$$15(0, a$$352);
      return this;
    }
    function v1016(a$$351) {
      if (!s$$25) {
        d$$139.mimeType = a$$351;
      }
      return this;
    }
    function v1015(a$$350) {
      var c$$175;
      if (s$$25 === 2) {
        if (!o$$12) {
          o$$12 = {};
          var v5193 = c$$175 = JAM.call(bG.exec, bG, [n$$74], JAM.policy.p3);
          for (;v5193;) {
            var v12193 = c$$175[1];
            JAM.set(o$$12, JAM.call(v12193.toLowerCase, v12193, [], JAM.policy.p3), c$$175[2], JAM.policy.p2);
            v5193 = c$$175 = JAM.call(bG.exec, bG, [n$$74], JAM.policy.p3);
          }
        }
        c$$175 = o$$12[JAM.call(a$$350.toLowerCase, a$$350, [], JAM.policy.p3)];
      }
      var v5198;
      if (c$$175 === b$$9) {
        v5198 = null;
      } else {
        v5198 = c$$175;
      }
      return v5198;
    }
    function v1014() {
      var v5199;
      if (s$$25 === 2) {
        v5199 = n$$74;
      } else {
        v5199 = null;
      }
      return v5199;
    }
    function v1013(a$$349, b$$219) {
      if (!s$$25) {
        var c$$174 = JAM.call(a$$349.toLowerCase, a$$349, [], JAM.policy.p3);
        var v12196 = m$$22[c$$174];
        if (!v12196) {
          v12196 = a$$349;
        }
        a$$349 = JAM.set(m$$22, c$$174, v12196, JAM.policy.p2);
        JAM.set(l$$45, a$$349, b$$219, JAM.policy.p2);
      }
      return this;
    }
    function w$$15(a$$348, c$$173, l$$46, m$$23) {
      if (s$$25 !== 2) {
        s$$25 = 2;
        if (q$$13) {
          clearTimeout(q$$13);
        }
        p$$35 = b$$9;
        n$$74 = m$$23 || "";
        var v12197;
        if (a$$348 > 0) {
          v12197 = 4;
        } else {
          v12197 = 0;
        }
        v$$9.readyState = v12197;
        var o$$13;
        var r$$16;
        var u$$9;
        var w$$16 = c$$173;
        var JSCompiler_temp$$6;
        if (l$$46) {
          JSCompiler_inline_label_ca_42: {
            var a$$inline_32 = d$$139;
            var c$$inline_33 = v$$9;
            var d$$inline_34 = l$$46;
            var e$$inline_35 = a$$inline_32.contents;
            var f$$inline_36 = a$$inline_32.dataTypes;
            var g$$inline_37 = a$$inline_32.responseFields;
            var h$$inline_38;
            var i$$inline_39;
            var j$$inline_40;
            var k$$inline_41;
            for (i$$inline_39 in g$$inline_37) {
              var v5201 = i$$inline_39 in d$$inline_34;
              if (v5201) {
                JAM.set(c$$inline_33, g$$inline_37[i$$inline_39], d$$inline_34[i$$inline_39], JAM.policy.p2);
              }
            }
            var v5202 = f$$inline_36[0] === "*";
            for (;v5202;) {
              JAM.call(f$$inline_36.shift, f$$inline_36, [], JAM.policy.p3);
              var v12200 = h$$inline_38 === b$$9;
              if (v12200) {
                var v17799 = a$$inline_32.mimeType;
                if (!v17799) {
                  v17799 = JAM.call(c$$inline_33.getResponseHeader, c$$inline_33, ["content-type"], JAM.policy.p3);
                }
                h$$inline_38 = v17799;
              }
              v5202 = f$$inline_36[0] === "*";
            }
            if (h$$inline_38) {
              for (i$$inline_39 in e$$inline_35) {
                var v12202 = e$$inline_35[i$$inline_39];
                if (v12202) {
                  var v17800 = e$$inline_35[i$$inline_39];
                  v12202 = JAM.call(v17800.test, v17800, [h$$inline_38], JAM.policy.p3);
                }
                if (v12202) {
                  JAM.call(f$$inline_36.unshift, f$$inline_36, [i$$inline_39], JAM.policy.p3);
                  break;
                }
              }
            }
            if (f$$inline_36[0] in d$$inline_34) {
              j$$inline_40 = f$$inline_36[0];
            } else {
              for (i$$inline_39 in d$$inline_34) {
                var v12204 = !f$$inline_36[0];
                if (!v12204) {
                  v12204 = a$$inline_32.converters[i$$inline_39 + " " + f$$inline_36[0]];
                }
                if (v12204) {
                  j$$inline_40 = i$$inline_39;
                  break;
                }
                if (!k$$inline_41) {
                  k$$inline_41 = i$$inline_39;
                }
              }
              j$$inline_40 = j$$inline_40 || k$$inline_41;
            }
            if (j$$inline_40) {
              var v5206 = j$$inline_40 !== f$$inline_36[0];
              if (v5206) {
                JAM.call(f$$inline_36.unshift, f$$inline_36, [j$$inline_40], JAM.policy.p3);
              }
              JSCompiler_temp$$6 = d$$inline_34[j$$inline_40];
              break JSCompiler_inline_label_ca_42;
            }
            JSCompiler_temp$$6 = void 0;
          }
        } else {
          JSCompiler_temp$$6 = b$$9;
        }
        var x$$72 = JSCompiler_temp$$6;
        var y$$53;
        var z$$4;
        var v17805 = a$$348 >= 200;
        if (v17805) {
          v17805 = a$$348 < 300;
        }
        var v12207 = v17805;
        if (!v12207) {
          v12207 = a$$348 === 304;
        }
        if (v12207) {
          if (d$$139.ifModified) {
            if (y$$53 = JAM.call(v$$9.getResponseHeader, v$$9, ["Last-Modified"], JAM.policy.p3)) {
              JAM.set(f$$4.lastModified, k$$33, y$$53, JAM.policy.p2);
            }
            if (z$$4 = JAM.call(v$$9.getResponseHeader, v$$9, ["Etag"], JAM.policy.p3)) {
              JAM.set(f$$4.etag, k$$33, z$$4, JAM.policy.p2);
            }
          }
          if (a$$348 === 304) {
            w$$16 = "notmodified";
            o$$13 = !0;
          } else {
            try {
              var JSCompiler_inline_result$$5;
              var a$$inline_43 = d$$139;
              var c$$inline_44 = x$$72;
              var v5212 = a$$inline_43.dataFilter;
              if (v5212) {
                c$$inline_44 = JAM.call(a$$inline_43.dataFilter, a$$inline_43, [c$$inline_44, a$$inline_43.dataType], JAM.policy.p3);
              }
              var d$$inline_45 = a$$inline_43.dataTypes;
              var e$$inline_46 = {};
              var g$$inline_47;
              var h$$inline_48;
              var i$$inline_49 = d$$inline_45.length;
              var j$$inline_50;
              var k$$inline_51 = d$$inline_45[0];
              var l$$inline_52;
              var m$$inline_53;
              var n$$inline_54;
              var o$$inline_55;
              var p$$inline_56;
              g$$inline_47 = 1;
              var v5221 = g$$inline_47 < i$$inline_49;
              for (;v5221;) {
                if (g$$inline_47 === 1) {
                  for (h$$inline_48 in a$$inline_43.converters) {
                    var v5213 = typeof h$$inline_48 == "string";
                    if (v5213) {
                      JAM.set(e$$inline_46, JAM.call(h$$inline_48.toLowerCase, h$$inline_48, [], JAM.policy.p3), a$$inline_43.converters[h$$inline_48], JAM.policy.p2);
                    }
                  }
                }
                l$$inline_52 = k$$inline_51;
                k$$inline_51 = d$$inline_45[g$$inline_47];
                if (k$$inline_51 === "*") {
                  k$$inline_51 = l$$inline_52;
                } else {
                  var v12211 = l$$inline_52 !== "*";
                  if (v12211) {
                    v12211 = l$$inline_52 !== k$$inline_51;
                  }
                  if (v12211) {
                    m$$inline_53 = l$$inline_52 + " " + k$$inline_51;
                    var v12213 = e$$inline_46[m$$inline_53];
                    if (!v12213) {
                      v12213 = e$$inline_46["* " + k$$inline_51];
                    }
                    n$$inline_54 = v12213;
                    if (!n$$inline_54) {
                      p$$inline_56 = b$$9;
                      for (o$$inline_55 in e$$inline_46) {
                        j$$inline_50 = JAM.call(o$$inline_55.split, o$$inline_55, [" "], JAM.policy.p3);
                        var v12214 = j$$inline_50[0] === l$$inline_52;
                        if (!v12214) {
                          v12214 = j$$inline_50[0] === "*";
                        }
                        if (v12214) {
                          p$$inline_56 = e$$inline_46[j$$inline_50[1] + " " + k$$inline_51];
                          if (p$$inline_56) {
                            o$$inline_55 = e$$inline_46[o$$inline_55];
                            var v12216;
                            if (o$$inline_55 === !0) {
                              v12216 = n$$inline_54 = p$$inline_56;
                            } else {
                              var v17814 = p$$inline_56 === !0;
                              if (v17814) {
                                v17814 = n$$inline_54 = o$$inline_55;
                              }
                              v12216 = v17814;
                            }
                            v12216;
                            break;
                          }
                        }
                      }
                    }
                    var v17816 = !n$$inline_54;
                    if (v17816) {
                      v17816 = !p$$inline_56;
                    }
                    var v12217 = v17816;
                    if (v12217) {
                      JAM.call(f$$4.error, f$$4, ["No conversion from " + JAM.call(m$$inline_53.replace, m$$inline_53, [" ", " to "], JAM.policy.p3)], JAM.policy.p3);
                    }
                    var v12218 = n$$inline_54 !== !0;
                    if (v12218) {
                      var v17819;
                      if (n$$inline_54) {
                        v17819 = JAM.call(n$$inline_54, null, [c$$inline_44], JAM.policy.p3);
                      } else {
                        v17819 = JAM.call(p$$inline_56, null, [JAM.call(o$$inline_55, null, [c$$inline_44], JAM.policy.p3)], JAM.policy.p3);
                      }
                      c$$inline_44 = v17819;
                    }
                  }
                }
                g$$inline_47++;
                v5221 = g$$inline_47 < i$$inline_49;
              }
              JSCompiler_inline_result$$5 = c$$inline_44;
              r$$16 = JSCompiler_inline_result$$5;
              w$$16 = "success";
              o$$13 = !0;
            } catch (A$$2) {
              w$$16 = "parsererror";
              u$$9 = A$$2;
            }
          }
        } else {
          u$$9 = w$$16;
          var v12219 = !w$$16;
          if (!v12219) {
            v12219 = a$$348;
          }
          if (v12219) {
            w$$16 = "error";
            var v12220 = a$$348 < 0;
            if (v12220) {
              a$$348 = 0;
            }
          }
        }
        v$$9.status = a$$348;
        v$$9.statusText = "" + (c$$173 || w$$16);
        var v28516;
        if (o$$13) {
          v28516 = JAM.call(h$$70.resolveWith, h$$70, [e$$149, [r$$16, w$$16, v$$9]], JAM.policy.p3);
        } else {
          v28516 = JAM.call(h$$70.rejectWith, h$$70, [e$$149, [v$$9, w$$16, u$$9]], JAM.policy.p3);
        }
        v28516;
        JAM.call(v$$9.statusCode, v$$9, [j$$55], JAM.policy.p3);
        j$$55 = b$$9;
        if (t$$10) {
          var v28517;
          if (o$$13) {
            v28517 = "Success";
          } else {
            v28517 = "Error";
          }
          var v25747 = "ajax" + v28517;
          var v28518;
          if (o$$13) {
            v28518 = r$$16;
          } else {
            v28518 = u$$9;
          }
          JAM.call(g$$84.trigger, g$$84, [v25747, [v$$9, d$$139, v28518]], JAM.policy.p3);
        }
        JAM.call(i$$139.fireWith, i$$139, [e$$149, [v$$9, w$$16]], JAM.policy.p3);
        if (t$$10) {
          JAM.call(g$$84.trigger, g$$84, ["ajaxComplete", [v$$9, d$$139]], JAM.policy.p3);
          var v21690 = f$$4.active = f$$4.active - 1;
          if (!v21690) {
            var v25749 = f$$4.event;
            JAM.call(v25749.trigger, v25749, ["ajaxStop"], JAM.policy.p3);
          }
        }
      }
      return;
    }
    var v12221 = typeof a$$347 == "object";
    if (v12221) {
      c$$172 = a$$347;
      a$$347 = b$$9;
    }
    c$$172 = c$$172 || {};
    var d$$139 = JAM.call(f$$4.ajaxSetup, f$$4, [{}, c$$172], JAM.policy.p3);
    var v5226 = d$$139.context;
    if (!v5226) {
      v5226 = d$$139;
    }
    var e$$149 = v5226;
    var v5227;
    var v17823 = e$$149 !== d$$139;
    if (v17823) {
      var v21691 = e$$149.nodeType;
      if (!v21691) {
        v21691 = e$$149 instanceof f$$4;
      }
      v17823 = v21691;
    }
    if (v17823) {
      v5227 = JAM.call(f$$4, null, [e$$149], JAM.policy.p3);
    } else {
      v5227 = f$$4.event;
    }
    var g$$84 = v5227;
    var h$$70 = JAM.call(f$$4.Deferred, f$$4, [], JAM.policy.p3);
    var i$$139 = JAM.call(f$$4.Callbacks, f$$4, ["once memory"], JAM.policy.p3);
    var v5228 = d$$139.statusCode;
    if (!v5228) {
      v5228 = {};
    }
    var j$$55 = v5228;
    var k$$33;
    var l$$45 = {};
    var m$$22 = {};
    var n$$74;
    var o$$12;
    var p$$35;
    var q$$13;
    var r$$15;
    var s$$25 = 0;
    var t$$10;
    var u$$8;
    var v$$9 = {readyState:0, setRequestHeader:v1013, getAllResponseHeaders:v1014, getResponseHeader:v1015, overrideMimeType:v1016, abort:v1017};
    JAM.call(h$$70.promise, h$$70, [v$$9], JAM.policy.p3);
    v$$9.success = v$$9.done;
    v$$9.error = v$$9.fail;
    v$$9.complete = i$$139.add;
    v$$9.statusCode = v1018;
    var v27441 = d$$139;
    var v29935 = a$$347;
    if (!v29935) {
      v29935 = d$$139.url;
    }
    var v29207 = v29935 + "";
    var v28519 = JAM.call(v29207.replace, v29207, [bF, ""], JAM.policy.p3);
    var v31122 = JAM.call(v28519.replace, v28519, [bK, bV[1] + "//"], JAM.policy.p3);
    v27441.url = v31122;
    var v25752 = d$$139;
    var v29653 = d$$139.dataType;
    if (!v29653) {
      v29653 = "*";
    }
    var v28521 = JAM.call(f$$4.trim, f$$4, [v29653], JAM.policy.p3);
    var v27442 = JAM.call(v28521.toLowerCase, v28521, [], JAM.policy.p3);
    var v31123 = JAM.call(v27442.split, v27442, [bO], JAM.policy.p3);
    v25752.dataTypes = v31123;
    var v21692 = d$$139.crossDomain == null;
    if (v21692) {
      var v28522 = d$$139.url;
      r$$15 = JAM.call(bQ.exec, bQ, [JAM.call(v28522.toLowerCase, v28522, [], JAM.policy.p3)], JAM.policy.p3);
      var v28523 = !r$$15;
      if (!v28523) {
        var v29654 = r$$15[1] == bV[1];
        if (v29654) {
          v29654 = r$$15[2] == bV[2];
        }
        var v29210 = v29654;
        if (v29210) {
          var v29941 = r$$15[3];
          if (!v29941) {
            var v30188;
            if (r$$15[1] === "http:") {
              v30188 = 80;
            } else {
              v30188 = 443;
            }
            v29941 = v30188;
          }
          var v29655 = v29941;
          var v29942 = bV[3];
          if (!v29942) {
            var v30190;
            if (bV[1] === "http:") {
              v30190 = 80;
            } else {
              v30190 = 443;
            }
            v29942 = v30190;
          }
          v29210 = v29655 == v29942;
        }
        v28523 = v29210;
      }
      d$$139.crossDomain = !v28523;
    }
    var v25754 = d$$139.data;
    if (v25754) {
      v25754 = d$$139.processData;
    }
    var v21693 = v25754;
    if (v21693) {
      v21693 = typeof d$$139.data != "string";
    }
    var v17824 = v21693;
    if (v17824) {
      var v21694 = d$$139;
      var v31124 = JAM.call(f$$4.param, f$$4, [d$$139.data, d$$139.traditional], JAM.policy.p3);
      v21694.data = v31124;
    }
    bZ(bS, d$$139, c$$172, v$$9);
    if (s$$25 === 2) {
      return!1;
    }
    t$$10 = d$$139.global;
    var v21695 = d$$139;
    var v25758 = d$$139.type;
    var v31125 = JAM.call(v25758.toUpperCase, v25758, [], JAM.policy.p3);
    v21695.type = v31125;
    d$$139.hasContent = !JAM.call(bJ.test, bJ, [d$$139.type], JAM.policy.p3);
    var v17826 = t$$10;
    if (v17826) {
      var v21697 = f$$4.active;
      f$$4.active = f$$4.active + 1;
      v17826 = v21697 === 0;
    }
    var v12225 = v17826;
    if (v12225) {
      var v17827 = f$$4.event;
      JAM.call(v17827.trigger, v17827, ["ajaxStart"], JAM.policy.p3);
    }
    if (!d$$139.hasContent) {
      var v12227 = d$$139.data;
      if (v12227) {
        var v21698 = d$$139;
        var v27447 = v21698.url;
        var v29212;
        if (JAM.call(bL.test, bL, [d$$139.url], JAM.policy.p3)) {
          v29212 = "&";
        } else {
          v29212 = "?";
        }
        v21698.url = v27447 + (v29212 + d$$139.data);
        delete d$$139.data;
      }
      k$$33 = d$$139.url;
      if (d$$139.cache === !1) {
        var x$$71 = JAM.call(f$$4.now, f$$4, [], JAM.policy.p3);
        var v5230 = d$$139.url;
        var y$$52 = JAM.call(v5230.replace, v5230, [bP, "$1_=" + x$$71], JAM.policy.p3);
        var v5232 = d$$139;
        var v12230 = y$$52;
        var v17828;
        if (y$$52 === d$$139.url) {
          var v27449;
          if (JAM.call(bL.test, bL, [d$$139.url], JAM.policy.p3)) {
            v27449 = "&";
          } else {
            v27449 = "?";
          }
          v17828 = v27449 + "_=" + x$$71;
        } else {
          v17828 = "";
        }
        v5232.url = v12230 + v17828;
      }
    }
    var v27450 = d$$139.data;
    if (v27450) {
      v27450 = d$$139.hasContent;
    }
    var v25762 = v27450;
    if (v25762) {
      v25762 = d$$139.contentType !== !1;
    }
    var v21701 = v25762;
    if (!v21701) {
      v21701 = c$$172.contentType;
    }
    var v17829 = v21701;
    if (v17829) {
      JAM.call(v$$9.setRequestHeader, v$$9, ["Content-Type", d$$139.contentType], JAM.policy.p3);
    }
    var v17830 = d$$139.ifModified;
    if (v17830) {
      var v27453 = k$$33;
      if (!v27453) {
        v27453 = d$$139.url;
      }
      k$$33 = v27453;
      var v27454 = f$$4.lastModified[k$$33];
      if (v27454) {
        JAM.call(v$$9.setRequestHeader, v$$9, ["If-Modified-Since", f$$4.lastModified[k$$33]], JAM.policy.p3);
      }
      var v25764 = f$$4.etag[k$$33];
      if (v25764) {
        JAM.call(v$$9.setRequestHeader, v$$9, ["If-None-Match", f$$4.etag[k$$33]], JAM.policy.p3);
      }
    }
    var v17831;
    var v25765 = d$$139.dataTypes[0];
    if (v25765) {
      v25765 = d$$139.accepts[d$$139.dataTypes[0]];
    }
    if (v25765) {
      var v21703 = d$$139.accepts[d$$139.dataTypes[0]];
      var v25768;
      if (d$$139.dataTypes[0] !== "*") {
        v25768 = ", " + bW + "; q=0.01";
      } else {
        v25768 = "";
      }
      v17831 = v21703 + v25768;
    } else {
      v17831 = d$$139.accepts["*"];
    }
    JAM.call(v$$9.setRequestHeader, v$$9, ["Accept", v17831], JAM.policy.p3);
    for (u$$8 in d$$139.headers) {
      JAM.call(v$$9.setRequestHeader, v$$9, [u$$8, d$$139.headers[u$$8]], JAM.policy.p3);
    }
    var v12234 = d$$139.beforeSend;
    if (v12234) {
      var v25769 = d$$139.beforeSend;
      var v17832 = JAM.call(v25769.call, v25769, [e$$149, v$$9, d$$139], JAM.policy.p3) === !1;
      if (!v17832) {
        v17832 = s$$25 === 2;
      }
      v12234 = v17832;
    }
    if (v12234) {
      JAM.call(v$$9.abort, v$$9, [], JAM.policy.p3);
      return!1;
    }
    for (u$$8 in{success:1, error:1, complete:1}) {
      JAM.call(v$$9[u$$8], v$$9, [d$$139[u$$8]], JAM.policy.p3);
    }
    p$$35 = bZ(bT, d$$139, c$$172, v$$9);
    if (!p$$35) {
      w$$15(-1, "No Transport");
    } else {
      v$$9.readyState = 1;
      if (t$$10) {
        JAM.call(g$$84.trigger, g$$84, ["ajaxSend", [v$$9, d$$139]], JAM.policy.p3);
      }
      var v17833 = d$$139.async;
      if (v17833) {
        v17833 = d$$139.timeout > 0;
      }
      var v12235 = v17833;
      if (v12235) {
        q$$13 = JAM.call(setTimeout, null, [v1019, d$$139.timeout]);
      }
      try {
        s$$25 = 1;
        JAM.call(p$$35.send, p$$35, [l$$45, w$$15], JAM.policy.p3);
      } catch (z$$5) {
        if (s$$25 < 2) {
          w$$15(-1, z$$5);
        } else {
          throw z$$5;
        }
      }
    }
    return v$$9;
  }
  function v1012(a$$346, b$$218) {
    var v12236;
    if (b$$218) {
      v12236 = b$(a$$346, f$$4.ajaxSettings);
    } else {
      b$$218 = a$$346;
      v12236 = a$$346 = f$$4.ajaxSettings;
    }
    v12236;
    b$(a$$346, b$$218);
    return a$$346;
  }
  function v1011(a$$345, b$$217, c$$171) {
    return JAM.call(f$$4.get, f$$4, [a$$345, b$$217, c$$171, "json"], JAM.policy.p3);
  }
  function v1010(a$$344, c$$170) {
    return JAM.call(f$$4.get, f$$4, [a$$344, b$$9, c$$170, "script"], JAM.policy.p3);
  }
  function v1009(a$$342, c$$169) {
    function v1008(a$$343, d$$138, e$$148, g$$83) {
      var v5242 = JAM.call(f$$4.isFunction, f$$4, [d$$138], JAM.policy.p3);
      if (v5242) {
        g$$83 = g$$83 || e$$148;
        e$$148 = d$$138;
        d$$138 = b$$9;
      }
      return JAM.call(f$$4.ajax, f$$4, [{type:c$$169, url:a$$343, data:d$$138, success:e$$148, dataType:g$$83}], JAM.policy.p3);
    }
    JAM.set(f$$4, c$$169, v1008, JAM.policy.p2);
    return;
  }
  function v1007(a$$340, b$$216) {
    function v1006(a$$341) {
      return JAM.call(this.on, this, [b$$216, a$$341], JAM.policy.p3);
    }
    JAM.set(f$$4.fn, b$$216, v1006, JAM.policy.p2);
    return;
  }
  function v1005() {
    function v1004(a$$338, b$$215) {
      function v1003(a$$339, c$$168) {
        return{name:b$$215.name, value:JAM.call(a$$339.replace, a$$339, [bE, "\r\n"], JAM.policy.p3)};
      }
      var v5247 = JAM.call(f$$4, null, [this], JAM.policy.p3);
      var c$$167 = JAM.call(v5247.val, v5247, [], JAM.policy.p3);
      var v5248;
      if (c$$167 == null) {
        v5248 = null;
      } else {
        var v12237;
        if (JAM.call(f$$4.isArray, f$$4, [c$$167], JAM.policy.p3)) {
          v12237 = JAM.call(f$$4.map, f$$4, [c$$167, v1003], JAM.policy.p3);
        } else {
          v12237 = {name:b$$215.name, value:JAM.call(c$$167.replace, c$$167, [bE, "\r\n"], JAM.policy.p3)};
        }
        v5248 = v12237;
      }
      return v5248;
    }
    function v1002() {
      var v12239 = this.name;
      if (v12239) {
        v12239 = !this.disabled;
      }
      var v5249 = v12239;
      if (v5249) {
        var v17840 = this.checked;
        if (!v17840) {
          v17840 = JAM.call(bN.test, bN, [this.nodeName], JAM.policy.p3);
        }
        var v12240 = v17840;
        if (!v12240) {
          v12240 = JAM.call(bH.test, bH, [this.type], JAM.policy.p3);
        }
        v5249 = v12240;
      }
      return v5249;
    }
    function v1001() {
      var v5250;
      if (this.elements) {
        v5250 = JAM.call(f$$4.makeArray, f$$4, [this.elements], JAM.policy.p3);
      } else {
        v5250 = this;
      }
      return v5250;
    }
    var v17843 = JAM.call(this.map, this, [v1001], JAM.policy.p3);
    var v12243 = JAM.call(v17843.filter, v17843, [v1002], JAM.policy.p3);
    var v5251 = JAM.call(v12243.map, v12243, [v1004], JAM.policy.p3);
    return JAM.call(v5251.get, v5251, [], JAM.policy.p3);
  }
  function v1000() {
    return JAM.call(f$$4.param, f$$4, [JAM.call(this.serializeArray, this, [], JAM.policy.p3)], JAM.policy.p3);
  }
  function v999(a$$335, c$$165, d$$137) {
    function v998(a$$336, b$$214, c$$166) {
      function v997(a$$337) {
        c$$166 = a$$337;
        return;
      }
      c$$166 = a$$336.responseText;
      var v17844 = JAM.call(a$$336.isResolved, a$$336, [], JAM.policy.p3);
      if (v17844) {
        JAM.call(a$$336.done, a$$336, [v997], JAM.policy.p3);
        var v27463;
        if (g$$82) {
          var v29216 = JAM.call(f$$4, null, ["<div>"], JAM.policy.p3);
          var v28533 = JAM.call(v29216.append, v29216, [JAM.call(c$$166.replace, c$$166, [bM, ""], JAM.policy.p3)], JAM.policy.p3);
          v27463 = JAM.call(v28533.find, v28533, [g$$82], JAM.policy.p3);
        } else {
          v27463 = c$$166;
        }
        JAM.call(i$$138.html, i$$138, [v27463], JAM.policy.p3);
      }
      if (d$$137) {
        JAM.call(i$$138.each, i$$138, [d$$137, [c$$166, b$$214, a$$336]], JAM.policy.p3);
      }
      return;
    }
    var v12244 = typeof a$$335 != "string";
    if (v12244) {
      v12244 = bR;
    }
    if (v12244) {
      return JAM.call(bR.apply, bR, [this, arguments], JAM.policy.p3);
    }
    if (!this.length) {
      return this;
    }
    var e$$147 = JAM.call(a$$335.indexOf, a$$335, [" "], JAM.policy.p3);
    if (e$$147 >= 0) {
      var g$$82 = JAM.call(a$$335.slice, a$$335, [e$$147, a$$335.length], JAM.policy.p3);
      a$$335 = JAM.call(a$$335.slice, a$$335, [0, e$$147], JAM.policy.p3);
    }
    var h$$69 = "GET";
    if (c$$165) {
      var v12246;
      if (JAM.call(f$$4.isFunction, f$$4, [c$$165], JAM.policy.p3)) {
        d$$137 = c$$165;
        v12246 = c$$165 = b$$9;
      } else {
        var v17847 = typeof c$$165 == "object";
        if (v17847) {
          c$$165 = JAM.call(f$$4.param, f$$4, [c$$165, f$$4.ajaxSettings.traditional], JAM.policy.p3);
          v17847 = h$$69 = "POST";
        }
        v12246 = v17847;
      }
      v12246;
    }
    var i$$138 = this;
    JAM.call(f$$4.ajax, f$$4, [{url:a$$335, type:h$$69, dataType:"html", data:c$$165, complete:v998}], JAM.policy.p3);
    return this;
  }
  function v996(a$$334, b$$213) {
    function v995(c$$164) {
      var d$$136;
      var v5258;
      if (typeof c$$164 == "string") {
        v5258 = JAM.call(c$$164.split, c$$164, [" "], JAM.policy.p3);
      } else {
        v5258 = [c$$164];
      }
      var e$$146 = v5258;
      var f$$45 = {};
      d$$136 = 0;
      var v5260 = d$$136 < 4;
      for (;v5260;) {
        var v5259 = a$$334 + bx[d$$136] + b$$213;
        var v17851 = e$$146[d$$136];
        if (!v17851) {
          v17851 = e$$146[d$$136 - 2];
        }
        var v12249 = v17851;
        if (!v12249) {
          v12249 = e$$146[0];
        }
        JAM.set(f$$45, v5259, v12249, JAM.policy.p2);
        d$$136++;
        v5260 = d$$136 < 4;
      }
      return f$$45;
    }
    JAM.set(f$$4.cssHooks, a$$334 + b$$213, {expand:v995}, JAM.policy.p2);
    return;
  }
  function v994(a$$333) {
    var v12250 = f$$4.expr.filters;
    return!JAM.call(v12250.hidden, v12250, [a$$333], JAM.policy.p3);
  }
  function v993(a$$332) {
    var b$$212 = a$$332.offsetWidth;
    var c$$163 = a$$332.offsetHeight;
    var v12251 = b$$212 === 0;
    if (v12251) {
      v12251 = c$$163 === 0;
    }
    var v5264 = v12251;
    if (!v5264) {
      var v12252 = !f$$4.support.reliableHiddenOffsets;
      if (v12252) {
        var v25772 = a$$332.style;
        if (v25772) {
          v25772 = a$$332.style.display;
        }
        var v21718 = v25772;
        if (!v21718) {
          v21718 = JAM.call(f$$4.css, f$$4, [a$$332, "display"], JAM.policy.p3);
        }
        v12252 = v21718 === "none";
      }
      v5264 = v12252;
    }
    return v5264;
  }
  function v992() {
    function v991(a$$331, b$$211) {
      function v990() {
        var v5265;
        if (b$$211) {
          v5265 = JAM.call(by, null, [a$$331, "margin-right"], JAM.policy.p3);
        } else {
          v5265 = a$$331.style.marginRight;
        }
        return v5265;
      }
      return JAM.call(f$$4.swap, f$$4, [a$$331, {display:"inline-block"}, v990], JAM.policy.p3);
    }
    var v5267 = f$$4.support.reliableMarginRight;
    if (!v5267) {
      f$$4.cssHooks.marginRight = {get:v991};
    }
    return;
  }
  function v989(a$$330, b$$210) {
    var c$$162 = a$$330.style;
    var d$$135 = a$$330.currentStyle;
    var v5268;
    if (JAM.call(f$$4.isNumeric, f$$4, [b$$210], JAM.policy.p3)) {
      v5268 = "alpha(opacity=" + b$$210 * 100 + ")";
    } else {
      v5268 = "";
    }
    var e$$145 = v5268;
    var v17857 = d$$135;
    if (v17857) {
      v17857 = d$$135.filter;
    }
    var v12260 = v17857;
    if (!v12260) {
      v12260 = c$$162.filter;
    }
    var v5269 = v12260;
    if (!v5269) {
      v5269 = "";
    }
    var g$$81 = v5269;
    c$$162.zoom = 1;
    var v12262 = b$$210 >= 1;
    if (v12262) {
      v12262 = JAM.call(f$$4.trim, f$$4, [JAM.call(g$$81.replace, g$$81, [bp, ""], JAM.policy.p3)], JAM.policy.p3) === "";
    }
    if (v12262) {
      JAM.call(c$$162.removeAttribute, c$$162, ["filter"], JAM.policy.p3);
      var v12263 = d$$135;
      if (v12263) {
        v12263 = !d$$135.filter;
      }
      if (v12263) {
        return;
      }
    }
    var v5272;
    if (JAM.call(bp.test, bp, [g$$81], JAM.policy.p3)) {
      v5272 = JAM.call(g$$81.replace, g$$81, [bp, e$$145], JAM.policy.p3);
    } else {
      v5272 = g$$81 + " " + e$$145;
    }
    c$$162.filter = v5272;
    return;
  }
  function v988(a$$329, b$$209) {
    var v5273;
    var v25774;
    var v28534 = b$$209;
    if (v28534) {
      v28534 = a$$329.currentStyle;
    }
    if (v28534) {
      v25774 = a$$329.currentStyle.filter;
    } else {
      v25774 = a$$329.style.filter;
    }
    var v21720 = v25774;
    if (!v21720) {
      v21720 = "";
    }
    if (JAM.call(bq.test, bq, [v21720], JAM.policy.p3)) {
      v5273 = parseFloat(RegExp.$1) / 100 + "";
    } else {
      var v12267;
      if (b$$209) {
        v12267 = "1";
      } else {
        v12267 = "";
      }
      v5273 = v12267;
    }
    return v5273;
  }
  function v987(a$$326, b$$207) {
    function v986(a$$328, b$$208) {
      var v5274;
      if (JAM.call(bs.test, bs, [b$$208], JAM.policy.p3)) {
        v5274 = b$$208 + "px";
      } else {
        v5274 = b$$208;
      }
      return v5274;
    }
    function v985(a$$327, c$$161, d$$134) {
      function v984() {
        return bB(a$$327, b$$207, d$$134);
      }
      if (c$$161) {
        var v5275;
        if (a$$327.offsetWidth !== 0) {
          v5275 = bB(a$$327, b$$207, d$$134);
        } else {
          v5275 = JAM.call(f$$4.swap, f$$4, [a$$327, bw, v984], JAM.policy.p3);
        }
        return v5275;
      }
      return;
    }
    JAM.set(f$$4.cssHooks, b$$207, {get:v985, set:v986}, JAM.policy.p2);
    return;
  }
  function v983(a$$325, b$$206) {
    var c$$160;
    var d$$133;
    var e$$144;
    var v5277 = a$$325.currentStyle;
    if (v5277) {
      v5277 = a$$325.currentStyle[b$$206];
    }
    var f$$44 = v5277;
    var g$$80 = a$$325.style;
    var v21722 = f$$44 == null;
    if (v21722) {
      v21722 = g$$80;
    }
    var v17864 = v21722;
    if (v17864) {
      v17864 = e$$144 = g$$80[b$$206];
    }
    var v12272 = v17864;
    if (v12272) {
      f$$44 = e$$144;
    }
    var v12273 = JAM.call(bt.test, bt, [f$$44], JAM.policy.p3);
    if (v12273) {
      c$$160 = g$$80.left;
      var v29658 = a$$325.runtimeStyle;
      if (v29658) {
        v29658 = a$$325.runtimeStyle.left;
      }
      d$$133 = v29658;
      if (d$$133) {
        a$$325.runtimeStyle.left = a$$325.currentStyle.left;
      }
      var v28535;
      if (b$$206 === "fontSize") {
        v28535 = "1em";
      } else {
        v28535 = f$$44;
      }
      g$$80.left = v28535;
      f$$44 = g$$80.pixelLeft + "px";
      g$$80.left = c$$160;
      if (d$$133) {
        a$$325.runtimeStyle.left = d$$133;
      }
    }
    var v5278;
    if (f$$44 === "") {
      v5278 = "auto";
    } else {
      v5278 = f$$44;
    }
    return v5278;
  }
  function v982(a$$324, b$$205) {
    var c$$159;
    var d$$132;
    var e$$143;
    var g$$79;
    var h$$68 = a$$324.style;
    var v17865 = JAM.call(b$$205.replace, b$$205, [br, "-$1"], JAM.policy.p3);
    b$$205 = JAM.call(v17865.toLowerCase, v17865, [], JAM.policy.p3);
    var v21723 = d$$132 = a$$324.ownerDocument.defaultView;
    if (v21723) {
      v21723 = e$$143 = JAM.call(d$$132.getComputedStyle, d$$132, [a$$324, null], JAM.policy.p3);
    }
    var v17866 = v21723;
    if (v17866) {
      c$$159 = JAM.call(e$$143.getPropertyValue, e$$143, [b$$205], JAM.policy.p3);
      var v27470 = c$$159 === "";
      if (v27470) {
        v27470 = !JAM.call(f$$4.contains, f$$4, [a$$324.ownerDocument.documentElement, a$$324], JAM.policy.p3);
      }
      var v25778 = v27470;
      if (v25778) {
        c$$159 = JAM.call(f$$4.style, f$$4, [a$$324, b$$205], JAM.policy.p3);
      }
    }
    var v25779 = !f$$4.support.pixelMargin;
    if (v25779) {
      v25779 = e$$143;
    }
    var v21724 = v25779;
    if (v21724) {
      v21724 = JAM.call(bv.test, bv, [b$$205], JAM.policy.p3);
    }
    var v17867 = v21724;
    if (v17867) {
      v17867 = JAM.call(bt.test, bt, [c$$159], JAM.policy.p3);
    }
    var v12275 = v17867;
    if (v12275) {
      g$$79 = h$$68.width;
      h$$68.width = c$$159;
      c$$159 = e$$143.width;
      h$$68.width = g$$79;
    }
    return c$$159;
  }
  function v981(a$$323, b$$204, c$$158) {
    var d$$131 = {};
    var e$$142;
    var f$$43;
    for (f$$43 in b$$204) {
      JAM.set(d$$131, f$$43, a$$323.style[f$$43], JAM.policy.p2);
      JAM.set(a$$323.style, f$$43, b$$204[f$$43], JAM.policy.p2);
    }
    e$$142 = JAM.call(c$$158.call, c$$158, [a$$323], JAM.policy.p3);
    for (f$$43 in b$$204) {
      JAM.set(a$$323.style, f$$43, d$$131[f$$43], JAM.policy.p2);
    }
    return e$$142;
  }
  function v980(a$$322, c$$157, d$$130) {
    var e$$141;
    var g$$78;
    c$$157 = JAM.call(f$$4.camelCase, f$$4, [c$$157], JAM.policy.p3);
    g$$78 = f$$4.cssHooks[c$$157];
    var v17868 = f$$4.cssProps[c$$157];
    if (!v17868) {
      v17868 = c$$157;
    }
    c$$157 = v17868;
    var v12278 = c$$157 === "cssFloat";
    if (v12278) {
      c$$157 = "float";
    }
    var v17869 = g$$78;
    if (v17869) {
      v17869 = "get" in g$$78;
    }
    var v12279 = v17869;
    if (v12279) {
      v12279 = (e$$141 = JAM.call(g$$78.get, g$$78, [a$$322, !0, d$$130], JAM.policy.p3)) !== b$$9;
    }
    if (v12279) {
      return e$$141;
    }
    if (by) {
      return JAM.call(by, null, [a$$322, c$$157], JAM.policy.p3);
    }
    return;
  }
  function v979(a$$321, c$$156, d$$129, e$$140) {
    var v21729 = !!a$$321;
    if (v21729) {
      v21729 = a$$321.nodeType !== 3;
    }
    var v17871 = v21729;
    if (v17871) {
      v17871 = a$$321.nodeType !== 8;
    }
    var v12280 = v17871;
    if (v12280) {
      v12280 = !!a$$321.style;
    }
    if (v12280) {
      var g$$77;
      var h$$67;
      var i$$137 = JAM.call(f$$4.camelCase, f$$4, [c$$156], JAM.policy.p3);
      var j$$54 = a$$321.style;
      var k$$32 = f$$4.cssHooks[i$$137];
      var v5282 = f$$4.cssProps[i$$137];
      if (!v5282) {
        v5282 = i$$137;
      }
      c$$156 = v5282;
      if (d$$129 === b$$9) {
        var v17873 = k$$32;
        if (v17873) {
          v17873 = "get" in k$$32;
        }
        var v12283 = v17873;
        if (v12283) {
          v12283 = (g$$77 = JAM.call(k$$32.get, k$$32, [a$$321, !1, e$$140], JAM.policy.p3)) !== b$$9;
        }
        if (v12283) {
          return g$$77;
        }
        return j$$54[c$$156];
      }
      h$$67 = typeof d$$129;
      var v17875 = h$$67 === "string";
      if (v17875) {
        v17875 = g$$77 = JAM.call(bu.exec, bu, [d$$129], JAM.policy.p3);
      }
      var v12284 = v17875;
      if (v12284) {
        d$$129 = +(g$$77[1] + 1) * +g$$77[2] + parseFloat(JAM.call(f$$4.css, f$$4, [a$$321, c$$156], JAM.policy.p3));
        h$$67 = "number";
      }
      var v12285 = d$$129 == null;
      if (!v12285) {
        var v17876 = h$$67 === "number";
        if (v17876) {
          v17876 = isNaN(d$$129);
        }
        v12285 = v17876;
      }
      if (v12285) {
        return;
      }
      var v12286 = h$$67 === "number";
      if (v12286) {
        v12286 = !f$$4.cssNumber[i$$137];
      }
      var v5286 = v12286;
      if (v5286) {
        d$$129 = d$$129 + "px";
      }
      var v17879 = !k$$32;
      if (!v17879) {
        v17879 = !("set" in k$$32);
      }
      var v12287 = v17879;
      if (!v12287) {
        v12287 = (d$$129 = JAM.call(k$$32.set, k$$32, [a$$321, d$$129], JAM.policy.p3)) !== b$$9;
      }
      if (v12287) {
        try {
          JAM.set(j$$54, c$$156, d$$129, JAM.policy.p2);
        } catch (l$$44) {
        }
      }
    }
    return;
  }
  function v978(a$$320, b$$203) {
    if (b$$203) {
      var c$$155 = JAM.call(by, null, [a$$320, "opacity"], JAM.policy.p3);
      var v5289;
      if (c$$155 === "") {
        v5289 = "1";
      } else {
        v5289 = c$$155;
      }
      return v5289;
    }
    return a$$320.style.opacity;
  }
  function v977(a$$318, c$$153) {
    function v976(a$$319, c$$154, d$$128) {
      var v5291;
      if (d$$128 !== b$$9) {
        v5291 = JAM.call(f$$4.style, f$$4, [a$$319, c$$154, d$$128], JAM.policy.p3);
      } else {
        v5291 = JAM.call(f$$4.css, f$$4, [a$$319, c$$154], JAM.policy.p3);
      }
      return v5291;
    }
    return JAM.call(f$$4.access, f$$4, [this, v976, a$$318, c$$153, arguments.length > 1], JAM.policy.p3);
  }
  function v975(a$$317) {
    var b$$202;
    var c$$152;
    var d$$127 = f$$4.cache;
    var e$$139 = f$$4.event.special;
    var g$$76 = f$$4.support.deleteExpando;
    var h$$66 = 0;
    var i$$136;
    var v5301 = (i$$136 = a$$317[h$$66]) != null;
    for (;v5301;) {
      var v12292 = i$$136.nodeName;
      if (v12292) {
        var v17882 = f$$4.noData;
        var v21738 = i$$136.nodeName;
        v12292 = v17882[JAM.call(v21738.toLowerCase, v21738, [], JAM.policy.p3)];
      }
      if (v12292) {
        h$$66++;
        v5301 = (i$$136 = a$$317[h$$66]) != null;
        continue;
      }
      c$$152 = i$$136[f$$4.expando];
      if (c$$152) {
        b$$202 = d$$127[c$$152];
        var v12294 = b$$202;
        if (v12294) {
          v12294 = b$$202.events;
        }
        if (v12294) {
          var j$$53;
          for (j$$53 in b$$202.events) {
            var v5297;
            if (e$$139[j$$53]) {
              var v12295 = f$$4.event;
              v5297 = JAM.call(v12295.remove, v12295, [i$$136, j$$53], JAM.policy.p3);
            } else {
              v5297 = JAM.call(f$$4.removeEvent, f$$4, [i$$136, j$$53, b$$202.handle], JAM.policy.p3);
            }
            v5297;
          }
          var v5299 = b$$202.handle;
          if (v5299) {
            b$$202.handle.elem = null;
          }
        }
        var v12299;
        if (g$$76) {
          v12299 = delete i$$136[f$$4.expando];
        } else {
          var v17885 = i$$136.removeAttribute;
          if (v17885) {
            v17885 = JAM.call(i$$136.removeAttribute, i$$136, [f$$4.expando], JAM.policy.p3);
          }
          v12299 = v17885;
        }
        v12299;
        delete d$$127[c$$152];
      }
      h$$66++;
      v5301 = (i$$136 = a$$317[h$$66]) != null;
    }
    return;
  }
  function v974(a$$315, b$$201, d$$126, e$$138) {
    function v973(a$$316) {
      var v5302 = !a$$316.type;
      if (!v5302) {
        v5302 = JAM.call(be.test, be, [a$$316.type], JAM.policy.p3);
      }
      return v5302;
    }
    var g$$75;
    var h$$65;
    var i$$135;
    var j$$52 = [];
    b$$201 = b$$201 || c$$5;
    var v12304 = typeof b$$201.createElement == "undefined";
    if (v12304) {
      var v21741 = b$$201.ownerDocument;
      if (!v21741) {
        var v25785 = b$$201[0];
        if (v25785) {
          v25785 = b$$201[0].ownerDocument;
        }
        v21741 = v25785;
      }
      var v17887 = v21741;
      if (!v17887) {
        v17887 = c$$5;
      }
      b$$201 = v17887;
    }
    var k$$31 = 0;
    var l$$43;
    var v5320 = (l$$43 = a$$315[k$$31]) != null;
    for (;v5320;) {
      var v5303 = typeof l$$43 == "number";
      if (v5303) {
        l$$43 = l$$43 + "";
      }
      if (!l$$43) {
        k$$31++;
        v5320 = (l$$43 = a$$315[k$$31]) != null;
        continue;
      }
      if (typeof l$$43 == "string") {
        if (!JAM.call(_$$1.test, _$$1, [l$$43], JAM.policy.p3)) {
          l$$43 = JAM.call(b$$201.createTextNode, b$$201, [l$$43], JAM.policy.p3);
        } else {
          l$$43 = JAM.call(l$$43.replace, l$$43, [Y, "<$1></$2>"], JAM.policy.p3);
          var v17888 = JAM.call(Z.exec, Z, [l$$43], JAM.policy.p3);
          if (!v17888) {
            v17888 = ["", ""];
          }
          var v5305 = v17888[1];
          var m$$21 = JAM.call(v5305.toLowerCase, v5305, [], JAM.policy.p3);
          var v5306 = bg[m$$21];
          if (!v5306) {
            v5306 = bg._default;
          }
          var n$$73 = v5306;
          var o$$11 = n$$73[0];
          var p$$34 = JAM.call(b$$201.createElement, b$$201, ["div"], JAM.policy.p3);
          var q$$12 = bh.childNodes;
          var r$$14;
          var v12312;
          if (b$$201 === c$$5) {
            v12312 = JAM.call(bh.appendChild, bh, [p$$34], JAM.policy.p3);
          } else {
            var v17889 = U(b$$201);
            v12312 = JAM.call(v17889.appendChild, v17889, [p$$34], JAM.policy.p3);
          }
          v12312;
          JAM.set(p$$34, "innerHTML", n$$73[1] + l$$43 + n$$73[2]);
          var v5307 = o$$11;
          o$$11 = o$$11 - 1;
          for (;v5307;) {
            p$$34 = p$$34.lastChild;
            v5307 = o$$11;
            o$$11 = o$$11 - 1;
          }
          if (!f$$4.support.tbody) {
            var s$$24 = JAM.call($$$2.test, $$$2, [l$$43], JAM.policy.p3);
            var v5308;
            var v17893 = m$$21 === "table";
            if (v17893) {
              v17893 = !s$$24;
            }
            if (v17893) {
              var v12316 = p$$34.firstChild;
              if (v12316) {
                v12316 = p$$34.firstChild.childNodes;
              }
              v5308 = v12316;
            } else {
              var v12317;
              var v21744 = n$$73[1] === "<table>";
              if (v21744) {
                v21744 = !s$$24;
              }
              if (v21744) {
                v12317 = p$$34.childNodes;
              } else {
                v12317 = [];
              }
              v5308 = v12317;
            }
            var t$$9 = v5308;
            i$$135 = t$$9.length - 1;
            var v5311 = i$$135 >= 0;
            for (;v5311;) {
              var v12319 = JAM.call(f$$4.nodeName, f$$4, [t$$9[i$$135], "tbody"], JAM.policy.p3);
              if (v12319) {
                v12319 = !t$$9[i$$135].childNodes.length;
              }
              var v5310 = v12319;
              if (v5310) {
                var v12320 = t$$9[i$$135].parentNode;
                JAM.call(v12320.removeChild, v12320, [t$$9[i$$135]], JAM.policy.p3);
              }
              --i$$135;
              v5311 = i$$135 >= 0;
            }
          }
          var v21746 = !f$$4.support.leadingWhitespace;
          if (v21746) {
            v21746 = JAM.call(X.test, X, [l$$43], JAM.policy.p3);
          }
          var v17899 = v21746;
          if (v17899) {
            JAM.call(p$$34.insertBefore, p$$34, [JAM.call(b$$201.createTextNode, b$$201, [JAM.call(X.exec, X, [l$$43], JAM.policy.p3)[0]], JAM.policy.p3), p$$34.firstChild], JAM.policy.p3);
          }
          l$$43 = p$$34.childNodes;
          if (p$$34) {
            var v21749 = p$$34.parentNode;
            JAM.call(v21749.removeChild, v21749, [p$$34], JAM.policy.p3);
            var v21750 = q$$12.length > 0;
            if (v21750) {
              r$$14 = q$$12[q$$12.length - 1];
              var v28540 = r$$14;
              if (v28540) {
                v28540 = r$$14.parentNode;
              }
              var v27478 = v28540;
              if (v27478) {
                var v28541 = r$$14.parentNode;
                JAM.call(v28541.removeChild, v28541, [r$$14], JAM.policy.p3);
              }
            }
          }
        }
      }
      var u$$7;
      if (!f$$4.support.appendChecked) {
        var v12323 = l$$43[0];
        if (v12323) {
          v12323 = typeof(u$$7 = l$$43.length) == "number";
        }
        if (v12323) {
          i$$135 = 0;
          var v5316 = i$$135 < u$$7;
          for (;v5316;) {
            bn(l$$43[i$$135]);
            i$$135++;
            v5316 = i$$135 < u$$7;
          }
        } else {
          bn(l$$43);
        }
      }
      var v5319;
      if (l$$43.nodeType) {
        v5319 = JAM.call(j$$52.push, j$$52, [l$$43], JAM.policy.p3);
      } else {
        v5319 = j$$52 = JAM.call(f$$4.merge, f$$4, [j$$52, l$$43], JAM.policy.p3);
      }
      v5319;
      k$$31++;
      v5320 = (l$$43 = a$$315[k$$31]) != null;
    }
    if (d$$126) {
      g$$75 = v973;
      k$$31 = 0;
      var v5327 = j$$52[k$$31];
      for (;v5327;) {
        h$$65 = j$$52[k$$31];
        var v17902 = e$$138;
        if (v17902) {
          v17902 = JAM.call(f$$4.nodeName, f$$4, [h$$65, "script"], JAM.policy.p3);
        }
        var v12326 = v17902;
        if (v12326) {
          var v17903 = !h$$65.type;
          if (!v17903) {
            v17903 = JAM.call(be.test, be, [h$$65.type], JAM.policy.p3);
          }
          v12326 = v17903;
        }
        if (v12326) {
          var v12327;
          if (h$$65.parentNode) {
            var v17904 = h$$65.parentNode;
            v12327 = JAM.call(v17904.removeChild, v17904, [h$$65], JAM.policy.p3);
          } else {
            v12327 = h$$65;
          }
          JAM.call(e$$138.push, e$$138, [v12327], JAM.policy.p3);
        } else {
          if (h$$65.nodeType === 1) {
            var v$$8 = JAM.call(f$$4.grep, f$$4, [JAM.call(h$$65.getElementsByTagName, h$$65, ["script"], JAM.policy.p3), g$$75], JAM.policy.p3);
            var v5323 = j$$52.splice;
            var v12329 = [k$$31 + 1, 0];
            JAM.call(v5323.apply, v5323, [j$$52, JAM.call(v12329.concat, v12329, [v$$8], JAM.policy.p3)], JAM.policy.p3);
          }
          JAM.call(d$$126.appendChild, d$$126, [h$$65], JAM.policy.p3);
        }
        k$$31++;
        v5327 = j$$52[k$$31];
      }
    }
    return j$$52;
  }
  function v972(a$$314, b$$200, c$$151) {
    var d$$125;
    var e$$137;
    var g$$74;
    var JSCompiler_temp$$7;
    var v17907 = f$$4.support.html5Clone;
    if (!v17907) {
      v17907 = JAM.call(f$$4.isXMLDoc, f$$4, [a$$314], JAM.policy.p3);
    }
    var v12330 = v17907;
    if (!v12330) {
      v12330 = !JAM.call(bc.test, bc, ["<" + a$$314.nodeName + ">"], JAM.policy.p3);
    }
    if (v12330) {
      JSCompiler_temp$$7 = JAM.call(a$$314.cloneNode, a$$314, [!0], JAM.policy.p3);
    } else {
      var a$$inline_29 = a$$314;
      var b$$inline_30 = JAM.call(c$$5.createElement, c$$5, ["div"], JAM.policy.p3);
      JAM.call(bh.appendChild, bh, [b$$inline_30], JAM.policy.p3);
      JAM.set(b$$inline_30, "innerHTML", a$$inline_29.outerHTML);
      JSCompiler_temp$$7 = b$$inline_30.firstChild;
    }
    var h$$64 = JSCompiler_temp$$7;
    var v21758 = !f$$4.support.noCloneEvent;
    if (!v21758) {
      v21758 = !f$$4.support.noCloneChecked;
    }
    var v17910 = v21758;
    if (v17910) {
      var v21759 = a$$314.nodeType === 1;
      if (!v21759) {
        v21759 = a$$314.nodeType === 11;
      }
      v17910 = v21759;
    }
    var v12331 = v17910;
    if (v12331) {
      v12331 = !JAM.call(f$$4.isXMLDoc, f$$4, [a$$314], JAM.policy.p3);
    }
    if (v12331) {
      bk(a$$314, h$$64);
      d$$125 = bl(a$$314);
      e$$137 = bl(h$$64);
      g$$74 = 0;
      var v5331 = d$$125[g$$74];
      for (;v5331;) {
        var v5330 = e$$137[g$$74];
        if (v5330) {
          bk(d$$125[g$$74], e$$137[g$$74]);
        }
        ++g$$74;
        v5331 = d$$125[g$$74];
      }
    }
    if (b$$200) {
      bj(a$$314, h$$64);
      if (c$$151) {
        d$$125 = bl(a$$314);
        e$$137 = bl(h$$64);
        g$$74 = 0;
        var v5335 = d$$125[g$$74];
        for (;v5335;) {
          bj(d$$125[g$$74], e$$137[g$$74]);
          ++g$$74;
          v5335 = d$$125[g$$74];
        }
      }
    }
    d$$125 = e$$137 = null;
    return h$$64;
  }
  function v971(a$$313, b$$199) {
    function v970(c$$150) {
      var d$$124 = [];
      var e$$136 = JAM.call(f$$4, null, [c$$150], JAM.policy.p3);
      var v5336 = this.length === 1;
      if (v5336) {
        v5336 = this[0].parentNode;
      }
      var g$$73 = v5336;
      var v21760 = g$$73;
      if (v21760) {
        v21760 = g$$73.nodeType === 11;
      }
      var v17912 = v21760;
      if (v17912) {
        v17912 = g$$73.childNodes.length === 1;
      }
      var v12336 = v17912;
      if (v12336) {
        v12336 = e$$136.length === 1;
      }
      if (v12336) {
        JAM.call(e$$136[b$$199], e$$136, [this[0]], JAM.policy.p3);
        return this;
      }
      var h$$63 = 0;
      var i$$134 = e$$136.length;
      var v5340 = h$$63 < i$$134;
      for (;v5340;) {
        var v12337;
        if (h$$63 > 0) {
          v12337 = JAM.call(this.clone, this, [!0], JAM.policy.p3);
        } else {
          v12337 = this;
        }
        var v5339 = v12337;
        var j$$51 = JAM.call(v5339.get, v5339, [], JAM.policy.p3);
        var v12338 = JAM.call(f$$4, null, [e$$136[h$$63]], JAM.policy.p3);
        JAM.call(v12338[b$$199], v12338, [j$$51], JAM.policy.p3);
        d$$124 = JAM.call(d$$124.concat, d$$124, [j$$51], JAM.policy.p3);
        h$$63++;
        v5340 = h$$63 < i$$134;
      }
      return JAM.call(this.pushStack, this, [d$$124, a$$313, e$$136.selector], JAM.policy.p3);
    }
    JAM.set(f$$4.fn, a$$313, v970, JAM.policy.p2);
    return;
  }
  function v969(a$$312, b$$198, d$$123) {
    var e$$135;
    var g$$72;
    var h$$62;
    var i$$133;
    var j$$50 = a$$312[0];
    var v27482 = b$$198;
    if (v27482) {
      v27482 = b$$198[0];
    }
    var v25801 = v27482;
    if (v25801) {
      var v27483 = b$$198[0].ownerDocument;
      if (!v27483) {
        v27483 = b$$198[0];
      }
      i$$133 = v27483;
    }
    var v25802 = i$$133.createDocumentFragment;
    if (!v25802) {
      i$$133 = c$$5;
    }
    var v30192 = a$$312.length === 1;
    if (v30192) {
      v30192 = typeof j$$50 == "string";
    }
    var v29946 = v30192;
    if (v29946) {
      v29946 = j$$50.length < 512;
    }
    var v29661 = v29946;
    if (v29661) {
      v29661 = i$$133 === c$$5;
    }
    var v29220 = v29661;
    if (v29220) {
      v29220 = JAM.call(j$$50.charAt, j$$50, [0], JAM.policy.p3) === "<";
    }
    var v28544 = v29220;
    if (v28544) {
      v28544 = !JAM.call(bb.test, bb, [j$$50], JAM.policy.p3);
    }
    var v27485 = v28544;
    if (v27485) {
      var v28545 = f$$4.support.checkClone;
      if (!v28545) {
        v28545 = !JAM.call(bd.test, bd, [j$$50], JAM.policy.p3);
      }
      v27485 = v28545;
    }
    var v25803 = v27485;
    if (v25803) {
      var v27486 = f$$4.support.html5Clone;
      if (!v27486) {
        v27486 = !JAM.call(bc.test, bc, [j$$50], JAM.policy.p3);
      }
      v25803 = v27486;
    }
    var v21762 = v25803;
    if (v21762) {
      g$$72 = !0;
      h$$62 = f$$4.fragments[j$$50];
      var v28550 = h$$62;
      if (v28550) {
        v28550 = h$$62 !== 1;
      }
      var v27487 = v28550;
      if (v27487) {
        e$$135 = h$$62;
      }
    }
    if (!e$$135) {
      e$$135 = JAM.call(i$$133.createDocumentFragment, i$$133, [], JAM.policy.p3);
      JAM.call(f$$4.clean, f$$4, [a$$312, i$$133, e$$135, d$$123], JAM.policy.p3);
    }
    if (g$$72) {
      var v17917 = f$$4.fragments;
      var v21764;
      if (h$$62) {
        v21764 = e$$135;
      } else {
        v21764 = 1;
      }
      JAM.set(v17917, j$$50, v21764, JAM.policy.p2);
    }
    return{fragment:e$$135, cacheable:g$$72};
  }
  function v968(a$$310, c$$149, d$$122) {
    function v967(a$$311, b$$197) {
      var v12339;
      if (b$$197.src) {
        v12339 = JAM.call(f$$4.ajax, f$$4, [{type:"GET", global:!1, url:b$$197.src, async:!1, dataType:"script"}], JAM.policy.p3);
      } else {
        var v28551 = b$$197.text;
        if (!v28551) {
          v28551 = b$$197.textContent;
        }
        var v27488 = v28551;
        if (!v27488) {
          v27488 = b$$197.innerHTML;
        }
        var v25804 = v27488;
        if (!v25804) {
          v25804 = "";
        }
        var v21768 = v25804;
        v12339 = JAM.call(f$$4.globalEval, f$$4, [JAM.call(v21768.replace, v21768, [bf, "/*$0*/"], JAM.policy.p3)], JAM.policy.p3);
      }
      v12339;
      var v12340 = b$$197.parentNode;
      if (v12340) {
        var v17921 = b$$197.parentNode;
        JAM.call(v17921.removeChild, v17921, [b$$197], JAM.policy.p3);
      }
      return;
    }
    function v966(e$$134) {
      var g$$71 = JAM.call(f$$4, null, [this], JAM.policy.p3);
      var v12341 = a$$310;
      var v21769;
      if (c$$149) {
        v21769 = JAM.call(g$$71.html, g$$71, [], JAM.policy.p3);
      } else {
        v21769 = b$$9;
      }
      var v31126 = JAM.call(j$$49.call, j$$49, [this, e$$134, v21769], JAM.policy.p3);
      v12341[0] = v31126;
      JAM.call(g$$71.domManip, g$$71, [a$$310, c$$149, d$$122], JAM.policy.p3);
      return;
    }
    function v965() {
      var v5343 = JAM.call(f$$4, null, [this], JAM.policy.p3);
      JAM.call(v5343.domManip, v5343, [a$$310, c$$149, d$$122, !0], JAM.policy.p3);
      return;
    }
    var e$$133;
    var g$$70;
    var h$$61;
    var i$$132;
    var j$$49 = a$$310[0];
    var k$$30 = [];
    var v21770 = !f$$4.support.checkClone;
    if (v21770) {
      v21770 = arguments.length === 3;
    }
    var v17923 = v21770;
    if (v17923) {
      v17923 = typeof j$$49 == "string";
    }
    var v12342 = v17923;
    if (v12342) {
      v12342 = JAM.call(bd.test, bd, [j$$49], JAM.policy.p3);
    }
    if (v12342) {
      return JAM.call(this.each, this, [v965], JAM.policy.p3);
    }
    if (JAM.call(f$$4.isFunction, f$$4, [j$$49], JAM.policy.p3)) {
      return JAM.call(this.each, this, [v966], JAM.policy.p3);
    }
    if (this[0]) {
      var v21772 = j$$49;
      if (v21772) {
        v21772 = j$$49.parentNode;
      }
      i$$132 = v21772;
      var v21773;
      var v29226 = f$$4.support.parentNode;
      if (v29226) {
        v29226 = i$$132;
      }
      var v28553 = v29226;
      if (v28553) {
        v28553 = i$$132.nodeType === 11;
      }
      var v27491 = v28553;
      if (v27491) {
        v27491 = i$$132.childNodes.length === this.length;
      }
      if (v27491) {
        v21773 = e$$133 = {fragment:i$$132};
      } else {
        v21773 = e$$133 = JAM.call(f$$4.buildFragment, f$$4, [a$$310, this, k$$30], JAM.policy.p3);
      }
      v21773;
      h$$61 = e$$133.fragment;
      var v12343;
      if (h$$61.childNodes.length === 1) {
        v12343 = g$$70 = h$$61 = h$$61.firstChild;
      } else {
        v12343 = g$$70 = h$$61.firstChild;
      }
      v12343;
      if (g$$70) {
        var v5347 = c$$149;
        if (v5347) {
          v5347 = JAM.call(f$$4.nodeName, f$$4, [g$$70, "tr"], JAM.policy.p3);
        }
        c$$149 = v5347;
        var l$$42 = 0;
        var m$$20 = this.length;
        var n$$72 = m$$20 - 1;
        var v5350 = l$$42 < m$$20;
        for (;v5350;) {
          var v12344;
          if (c$$149) {
            v12344 = bi(this[l$$42], g$$70);
          } else {
            v12344 = this[l$$42];
          }
          var v5348 = v12344;
          var v12345;
          var v21775 = e$$133.cacheable;
          if (!v21775) {
            var v25809 = m$$20 > 1;
            if (v25809) {
              v25809 = l$$42 < n$$72;
            }
            v21775 = v25809;
          }
          if (v21775) {
            v12345 = JAM.call(f$$4.clone, f$$4, [h$$61, !0, !0], JAM.policy.p3);
          } else {
            v12345 = h$$61;
          }
          JAM.call(d$$122.call, d$$122, [v5348, v12345], JAM.policy.p3);
          l$$42++;
          v5350 = l$$42 < m$$20;
        }
      }
      var v5351 = k$$30.length;
      if (v5351) {
        JAM.call(f$$4.each, f$$4, [k$$30, v967], JAM.policy.p3);
      }
    }
    return this;
  }
  function v964(a$$309) {
    return JAM.call(this.remove, this, [a$$309, !0], JAM.policy.p3);
  }
  function v963(a$$308) {
    function v962() {
      var b$$196 = this.nextSibling;
      var c$$148 = this.parentNode;
      var v12346 = JAM.call(f$$4, null, [this], JAM.policy.p3);
      JAM.call(v12346.remove, v12346, [], JAM.policy.p3);
      var v12347;
      if (b$$196) {
        var v17929 = JAM.call(f$$4, null, [b$$196], JAM.policy.p3);
        v12347 = JAM.call(v17929.before, v17929, [a$$308], JAM.policy.p3);
      } else {
        var v17930 = JAM.call(f$$4, null, [c$$148], JAM.policy.p3);
        v12347 = JAM.call(v17930.append, v17930, [a$$308], JAM.policy.p3);
      }
      v12347;
      return;
    }
    function v961(b$$195) {
      var c$$147 = JAM.call(f$$4, null, [this], JAM.policy.p3);
      var d$$121 = JAM.call(c$$147.html, c$$147, [], JAM.policy.p3);
      JAM.call(c$$147.replaceWith, c$$147, [JAM.call(a$$308.call, a$$308, [this, b$$195, d$$121], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    var v12348 = this[0];
    if (v12348) {
      v12348 = this[0].parentNode;
    }
    if (v12348) {
      if (JAM.call(f$$4.isFunction, f$$4, [a$$308], JAM.policy.p3)) {
        return JAM.call(this.each, this, [v961], JAM.policy.p3);
      }
      var v5356 = typeof a$$308 != "string";
      if (v5356) {
        var v12350 = JAM.call(f$$4, null, [a$$308], JAM.policy.p3);
        a$$308 = JAM.call(v12350.detach, v12350, [], JAM.policy.p3);
      }
      return JAM.call(this.each, this, [v962], JAM.policy.p3);
    }
    var v5358;
    if (this.length) {
      var v21776;
      if (JAM.call(f$$4.isFunction, f$$4, [a$$308], JAM.policy.p3)) {
        v21776 = JAM.call(a$$308, null, [], JAM.policy.p3);
      } else {
        v21776 = a$$308;
      }
      v5358 = JAM.call(this.pushStack, this, [JAM.call(f$$4, null, [v21776], JAM.policy.p3), "replaceWith", a$$308], JAM.policy.p3);
    } else {
      v5358 = this;
    }
    return v5358;
  }
  function v960(a$$306) {
    function v959(a$$307) {
      var v5359 = this[0];
      if (!v5359) {
        v5359 = {};
      }
      var c$$146 = v5359;
      var d$$120 = 0;
      var e$$132 = this.length;
      if (a$$307 === b$$9) {
        var v5360;
        if (c$$146.nodeType === 1) {
          var v12354 = c$$146.innerHTML;
          v5360 = JAM.call(v12354.replace, v12354, [W, ""], JAM.policy.p3);
        } else {
          v5360 = null;
        }
        return v5360;
      }
      var v21777 = typeof a$$307 == "string";
      if (v21777) {
        v21777 = !JAM.call(ba.test, ba, [a$$307], JAM.policy.p3);
      }
      var v17934 = v21777;
      if (v17934) {
        var v21778 = f$$4.support.leadingWhitespace;
        if (!v21778) {
          v21778 = !JAM.call(X.test, X, [a$$307], JAM.policy.p3);
        }
        v17934 = v21778;
      }
      var v12356 = v17934;
      if (v12356) {
        var v21779 = bg;
        var v28556 = JAM.call(Z.exec, Z, [a$$307], JAM.policy.p3);
        if (!v28556) {
          v28556 = ["", ""];
        }
        var v25817 = v28556[1];
        v12356 = !v21779[JAM.call(v25817.toLowerCase, v25817, [], JAM.policy.p3)];
      }
      if (v12356) {
        a$$307 = JAM.call(a$$307.replace, a$$307, [Y, "<$1></$2>"], JAM.policy.p3);
        try {
          var v5362 = d$$120 < e$$132;
          for (;v5362;) {
            var v12357 = this[d$$120];
            if (!v12357) {
              v12357 = {};
            }
            c$$146 = v12357;
            var v12358 = c$$146.nodeType === 1;
            if (v12358) {
              JAM.call(f$$4.cleanData, f$$4, [JAM.call(c$$146.getElementsByTagName, c$$146, ["*"], JAM.policy.p3)], JAM.policy.p3);
              JAM.set(c$$146, "innerHTML", a$$307);
            }
            d$$120++;
            v5362 = d$$120 < e$$132;
          }
          c$$146 = 0;
        } catch (g$$69) {
        }
      }
      if (c$$146) {
        var v12359 = JAM.call(this.empty, this, [], JAM.policy.p3);
        JAM.call(v12359.append, v12359, [a$$307], JAM.policy.p3);
      }
      return;
    }
    return JAM.call(f$$4.access, f$$4, [this, v959, null, a$$306, arguments.length], JAM.policy.p3);
  }
  function v958(a$$305, b$$194) {
    function v957() {
      return JAM.call(f$$4.clone, f$$4, [this, a$$305, b$$194], JAM.policy.p3);
    }
    var v12360;
    if (a$$305 == null) {
      v12360 = !1;
    } else {
      v12360 = a$$305;
    }
    a$$305 = v12360;
    var v12361;
    if (b$$194 == null) {
      v12361 = a$$305;
    } else {
      v12361 = b$$194;
    }
    b$$194 = v12361;
    return JAM.call(this.map, this, [v957], JAM.policy.p3);
  }
  function v956() {
    var a$$304 = 0;
    var b$$193;
    var v5368 = (b$$193 = this[a$$304]) != null;
    for (;v5368;) {
      var v5365 = b$$193.nodeType === 1;
      if (v5365) {
        JAM.call(f$$4.cleanData, f$$4, [JAM.call(b$$193.getElementsByTagName, b$$193, ["*"], JAM.policy.p3)], JAM.policy.p3);
      }
      var v5367 = b$$193.firstChild;
      for (;v5367;) {
        JAM.call(b$$193.removeChild, b$$193, [b$$193.firstChild], JAM.policy.p3);
        v5367 = b$$193.firstChild;
      }
      a$$304++;
      v5368 = (b$$193 = this[a$$304]) != null;
    }
    return this;
  }
  function v955(a$$303, b$$192) {
    var c$$145 = 0;
    var d$$119;
    var v5370 = (d$$119 = this[c$$145]) != null;
    for (;v5370;) {
      var v12367 = !a$$303;
      if (!v12367) {
        v12367 = JAM.call(f$$4.filter, f$$4, [a$$303, [d$$119]], JAM.policy.p3).length;
      }
      if (v12367) {
        var v17942 = !b$$192;
        if (v17942) {
          v17942 = d$$119.nodeType === 1;
        }
        var v12368 = v17942;
        if (v12368) {
          JAM.call(f$$4.cleanData, f$$4, [JAM.call(d$$119.getElementsByTagName, d$$119, ["*"], JAM.policy.p3)], JAM.policy.p3);
          JAM.call(f$$4.cleanData, f$$4, [[d$$119]], JAM.policy.p3);
        }
        var v12369 = d$$119.parentNode;
        if (v12369) {
          var v17943 = d$$119.parentNode;
          JAM.call(v17943.removeChild, v17943, [d$$119], JAM.policy.p3);
        }
      }
      c$$145++;
      v5370 = (d$$119 = this[c$$145]) != null;
    }
    return this;
  }
  function v954() {
    function v953(a$$302) {
      var v5371 = this.parentNode;
      JAM.call(v5371.insertBefore, v5371, [a$$302, this.nextSibling], JAM.policy.p3);
      return;
    }
    var v12371 = this[0];
    if (v12371) {
      v12371 = this[0].parentNode;
    }
    if (v12371) {
      return JAM.call(this.domManip, this, [arguments, !1, v953], JAM.policy.p3);
    }
    if (arguments.length) {
      var a$$301 = JAM.call(this.pushStack, this, [this, "after", arguments], JAM.policy.p3);
      var v5375 = a$$301.push;
      JAM.call(v5375.apply, v5375, [a$$301, JAM.call(f$$4.clean, f$$4, [arguments], JAM.policy.p3)], JAM.policy.p3);
      return a$$301;
    }
    return;
  }
  function v952() {
    function v951(a$$300) {
      var v5378 = this.parentNode;
      JAM.call(v5378.insertBefore, v5378, [a$$300, this], JAM.policy.p3);
      return;
    }
    var v12372 = this[0];
    if (v12372) {
      v12372 = this[0].parentNode;
    }
    if (v12372) {
      return JAM.call(this.domManip, this, [arguments, !1, v951], JAM.policy.p3);
    }
    if (arguments.length) {
      var a$$299 = JAM.call(f$$4.clean, f$$4, [arguments], JAM.policy.p3);
      var v5381 = a$$299.push;
      JAM.call(v5381.apply, v5381, [a$$299, JAM.call(this.toArray, this, [], JAM.policy.p3)], JAM.policy.p3);
      return JAM.call(this.pushStack, this, [a$$299, "before", arguments], JAM.policy.p3);
    }
    return;
  }
  function v950() {
    function v949(a$$298) {
      var v5384 = this.nodeType === 1;
      if (v5384) {
        JAM.call(this.insertBefore, this, [a$$298, this.firstChild], JAM.policy.p3);
      }
      return;
    }
    return JAM.call(this.domManip, this, [arguments, !0, v949], JAM.policy.p3);
  }
  function v948() {
    function v947(a$$297) {
      var v5386 = this.nodeType === 1;
      if (v5386) {
        JAM.call(this.appendChild, this, [a$$297], JAM.policy.p3);
      }
      return;
    }
    return JAM.call(this.domManip, this, [arguments, !0, v947], JAM.policy.p3);
  }
  function v946() {
    function v945() {
      var v5388 = JAM.call(f$$4.nodeName, f$$4, [this, "body"], JAM.policy.p3);
      if (!v5388) {
        var v12376 = JAM.call(f$$4, null, [this], JAM.policy.p3);
        JAM.call(v12376.replaceWith, v12376, [this.childNodes], JAM.policy.p3);
      }
      return;
    }
    var v12379 = JAM.call(this.parent, this, [], JAM.policy.p3);
    var v5389 = JAM.call(v12379.each, v12379, [v945], JAM.policy.p3);
    return JAM.call(v5389.end, v5389, [], JAM.policy.p3);
  }
  function v944(a$$296) {
    function v943(c$$144) {
      var v5390 = JAM.call(f$$4, null, [this], JAM.policy.p3);
      var v12380;
      if (b$$191) {
        v12380 = JAM.call(a$$296.call, a$$296, [this, c$$144], JAM.policy.p3);
      } else {
        v12380 = a$$296;
      }
      JAM.call(v5390.wrapAll, v5390, [v12380], JAM.policy.p3);
      return;
    }
    var b$$191 = JAM.call(f$$4.isFunction, f$$4, [a$$296], JAM.policy.p3);
    return JAM.call(this.each, this, [v943], JAM.policy.p3);
  }
  function v942(a$$295) {
    function v941() {
      var b$$190 = JAM.call(f$$4, null, [this], JAM.policy.p3);
      var c$$143 = JAM.call(b$$190.contents, b$$190, [], JAM.policy.p3);
      var v5392;
      if (c$$143.length) {
        v5392 = JAM.call(c$$143.wrapAll, c$$143, [a$$295], JAM.policy.p3);
      } else {
        v5392 = JAM.call(b$$190.append, b$$190, [a$$295], JAM.policy.p3);
      }
      v5392;
      return;
    }
    function v940(b$$189) {
      var v5393 = JAM.call(f$$4, null, [this], JAM.policy.p3);
      JAM.call(v5393.wrapInner, v5393, [JAM.call(a$$295.call, a$$295, [this, b$$189], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    if (JAM.call(f$$4.isFunction, f$$4, [a$$295], JAM.policy.p3)) {
      return JAM.call(this.each, this, [v940], JAM.policy.p3);
    }
    return JAM.call(this.each, this, [v941], JAM.policy.p3);
  }
  function v939(a$$293) {
    function v938() {
      var a$$294 = this;
      var v12382 = a$$294.firstChild;
      if (v12382) {
        v12382 = a$$294.firstChild.nodeType === 1;
      }
      var v5396 = v12382;
      for (;v5396;) {
        a$$294 = a$$294.firstChild;
        var v12383 = a$$294.firstChild;
        if (v12383) {
          v12383 = a$$294.firstChild.nodeType === 1;
        }
        v5396 = v12383;
      }
      return a$$294;
    }
    function v937(b$$188) {
      var v5397 = JAM.call(f$$4, null, [this], JAM.policy.p3);
      JAM.call(v5397.wrapAll, v5397, [JAM.call(a$$293.call, a$$293, [this, b$$188], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    if (JAM.call(f$$4.isFunction, f$$4, [a$$293], JAM.policy.p3)) {
      return JAM.call(this.each, this, [v937], JAM.policy.p3);
    }
    if (this[0]) {
      var v12384 = JAM.call(f$$4, null, [a$$293, this[0].ownerDocument], JAM.policy.p3);
      var v5400 = JAM.call(v12384.eq, v12384, [0], JAM.policy.p3);
      var b$$187 = JAM.call(v5400.clone, v5400, [!0], JAM.policy.p3);
      var v12385 = this[0].parentNode;
      if (v12385) {
        JAM.call(b$$187.insertBefore, b$$187, [this[0]], JAM.policy.p3);
      }
      var v12386 = JAM.call(b$$187.map, b$$187, [v938], JAM.policy.p3);
      JAM.call(v12386.append, v12386, [this], JAM.policy.p3);
    }
    return this;
  }
  function v936(a$$291) {
    function v935(a$$292) {
      var v5403;
      if (a$$292 === b$$9) {
        v5403 = JAM.call(f$$4.text, f$$4, [this], JAM.policy.p3);
      } else {
        var v12387 = JAM.call(this.empty, this, [], JAM.policy.p3);
        var v25818 = this[0];
        if (v25818) {
          v25818 = this[0].ownerDocument;
        }
        var v21789 = v25818;
        if (!v21789) {
          v21789 = c$$5;
        }
        var v17951 = v21789;
        v5403 = JAM.call(v12387.append, v12387, [JAM.call(v17951.createTextNode, v17951, [a$$292], JAM.policy.p3)], JAM.policy.p3);
      }
      return v5403;
    }
    return JAM.call(f$$4.access, f$$4, [this, v935, null, a$$291, arguments.length], JAM.policy.p3);
  }
  function v934(a$$290, b$$186) {
    var c$$142 = [];
    for (;a$$290;) {
      var v12390 = a$$290.nodeType === 1;
      if (v12390) {
        v12390 = a$$290 !== b$$186;
      }
      var v5405 = v12390;
      if (v5405) {
        JAM.call(c$$142.push, c$$142, [a$$290], JAM.policy.p3);
      }
      a$$290 = a$$290.nextSibling;
    }
    return c$$142;
  }
  function v933(a$$289, b$$185, c$$141, d$$118) {
    b$$185 = b$$185 || 1;
    var e$$131 = 0;
    for (;a$$289;) {
      var v12391 = a$$289.nodeType === 1;
      if (v12391) {
        v12391 = (e$$131 = e$$131 + 1) === b$$185;
      }
      if (v12391) {
        break;
      }
      a$$289 = a$$289[c$$141];
    }
    return a$$289;
  }
  function v932(a$$288, c$$140, d$$117) {
    var e$$130 = [];
    var g$$68 = a$$288[c$$140];
    var v17955 = g$$68;
    if (v17955) {
      v17955 = g$$68.nodeType !== 9;
    }
    var v12392 = v17955;
    if (v12392) {
      var v21791 = d$$117 === b$$9;
      if (!v21791) {
        v21791 = g$$68.nodeType !== 1;
      }
      var v17956 = v21791;
      if (!v17956) {
        var v25822 = JAM.call(f$$4, null, [g$$68], JAM.policy.p3);
        v17956 = !JAM.call(v25822.is, v25822, [d$$117], JAM.policy.p3);
      }
      v12392 = v17956;
    }
    var v5407 = v12392;
    for (;v5407;) {
      var v12393 = g$$68.nodeType === 1;
      if (v12393) {
        JAM.call(e$$130.push, e$$130, [g$$68], JAM.policy.p3);
      }
      g$$68 = g$$68[c$$140];
      var v17958 = g$$68;
      if (v17958) {
        v17958 = g$$68.nodeType !== 9;
      }
      var v12394 = v17958;
      if (v12394) {
        var v21795 = d$$117 === b$$9;
        if (!v21795) {
          v21795 = g$$68.nodeType !== 1;
        }
        var v17959 = v21795;
        if (!v17959) {
          var v25825 = JAM.call(f$$4, null, [g$$68], JAM.policy.p3);
          v17959 = !JAM.call(v25825.is, v25825, [d$$117], JAM.policy.p3);
        }
        v12394 = v17959;
      }
      v5407 = v12394;
    }
    return e$$130;
  }
  function v931(a$$287, b$$184, c$$139) {
    if (c$$139) {
      a$$287 = ":not(" + a$$287 + ")";
    }
    var v5408;
    if (b$$184.length === 1) {
      var v12396;
      var v21798 = f$$4.find;
      if (JAM.call(v21798.matchesSelector, v21798, [b$$184[0], a$$287], JAM.policy.p3)) {
        v12396 = [b$$184[0]];
      } else {
        v12396 = [];
      }
      v5408 = v12396;
    } else {
      var v12397 = f$$4.find;
      v5408 = JAM.call(v12397.matches, v12397, [a$$287, b$$184], JAM.policy.p3);
    }
    return v5408;
  }
  function v930(a$$286, b$$183) {
    function v929(c$$138, d$$116) {
      var e$$129 = JAM.call(f$$4.map, f$$4, [this, b$$183, c$$138], JAM.policy.p3);
      var v21800 = JAM.call(L.test, L, [a$$286], JAM.policy.p3);
      if (!v21800) {
        d$$116 = c$$138;
      }
      var v25827 = d$$116;
      if (v25827) {
        v25827 = typeof d$$116 == "string";
      }
      var v21801 = v25827;
      if (v21801) {
        e$$129 = JAM.call(f$$4.filter, f$$4, [d$$116, e$$129], JAM.policy.p3);
      }
      var v17963;
      var v25828 = this.length > 1;
      if (v25828) {
        v25828 = !R[a$$286];
      }
      if (v25828) {
        v17963 = JAM.call(f$$4.unique, f$$4, [e$$129], JAM.policy.p3);
      } else {
        v17963 = e$$129;
      }
      e$$129 = v17963;
      var v21803 = this.length > 1;
      if (!v21803) {
        v21803 = JAM.call(N.test, N, [d$$116], JAM.policy.p3);
      }
      var v17964 = v21803;
      if (v17964) {
        v17964 = JAM.call(M.test, M, [a$$286], JAM.policy.p3);
      }
      var v12399 = v17964;
      if (v12399) {
        e$$129 = JAM.call(e$$129.reverse, e$$129, [], JAM.policy.p3);
      }
      var v12400 = JAM.call(P.call, P, [arguments], JAM.policy.p3);
      return JAM.call(this.pushStack, this, [e$$129, a$$286, JAM.call(v12400.join, v12400, [","], JAM.policy.p3)], JAM.policy.p3);
    }
    JAM.set(f$$4.fn, a$$286, v929, JAM.policy.p2);
    return;
  }
  function v928(a$$285) {
    var v5411;
    if (JAM.call(f$$4.nodeName, f$$4, [a$$285, "iframe"], JAM.policy.p3)) {
      var v12401 = a$$285.contentDocument;
      if (!v12401) {
        v12401 = a$$285.contentWindow.document;
      }
      v5411 = v12401;
    } else {
      v5411 = JAM.call(f$$4.makeArray, f$$4, [a$$285.childNodes], JAM.policy.p3);
    }
    return v5411;
  }
  function v927(a$$284) {
    return JAM.call(f$$4.sibling, f$$4, [a$$284.firstChild], JAM.policy.p3);
  }
  function v926(a$$283) {
    var v17967 = a$$283.parentNode;
    if (!v17967) {
      v17967 = {};
    }
    return JAM.call(f$$4.sibling, f$$4, [v17967.firstChild, a$$283], JAM.policy.p3);
  }
  function v925(a$$282, b$$182, c$$137) {
    return JAM.call(f$$4.dir, f$$4, [a$$282, "previousSibling", c$$137], JAM.policy.p3);
  }
  function v924(a$$281, b$$181, c$$136) {
    return JAM.call(f$$4.dir, f$$4, [a$$281, "nextSibling", c$$136], JAM.policy.p3);
  }
  function v923(a$$280) {
    return JAM.call(f$$4.dir, f$$4, [a$$280, "previousSibling"], JAM.policy.p3);
  }
  function v922(a$$279) {
    return JAM.call(f$$4.dir, f$$4, [a$$279, "nextSibling"], JAM.policy.p3);
  }
  function v921(a$$278) {
    return JAM.call(f$$4.nth, f$$4, [a$$278, 2, "previousSibling"], JAM.policy.p3);
  }
  function v920(a$$277) {
    return JAM.call(f$$4.nth, f$$4, [a$$277, 2, "nextSibling"], JAM.policy.p3);
  }
  function v919(a$$276, b$$180, c$$135) {
    return JAM.call(f$$4.dir, f$$4, [a$$276, "parentNode", c$$135], JAM.policy.p3);
  }
  function v918(a$$275) {
    return JAM.call(f$$4.dir, f$$4, [a$$275, "parentNode"], JAM.policy.p3);
  }
  function v917(a$$274) {
    var b$$179 = a$$274.parentNode;
    var v5414;
    var v17968 = b$$179;
    if (v17968) {
      v17968 = b$$179.nodeType !== 11;
    }
    if (v17968) {
      v5414 = b$$179;
    } else {
      v5414 = null;
    }
    return v5414;
  }
  function v916() {
    return JAM.call(this.add, this, [this.prevObject], JAM.policy.p3);
  }
  function v915(a$$273, b$$178) {
    var v5416;
    if (typeof a$$273 == "string") {
      v5416 = JAM.call(f$$4, null, [a$$273, b$$178], JAM.policy.p3);
    } else {
      var v17970;
      var v25831 = a$$273;
      if (v25831) {
        v25831 = a$$273.nodeType;
      }
      if (v25831) {
        v17970 = [a$$273];
      } else {
        v17970 = a$$273;
      }
      v5416 = JAM.call(f$$4.makeArray, f$$4, [v17970], JAM.policy.p3);
    }
    var c$$134 = v5416;
    var d$$115 = JAM.call(f$$4.merge, f$$4, [JAM.call(this.get, this, [], JAM.policy.p3), c$$134], JAM.policy.p3);
    var v12408;
    var v21807 = S(c$$134[0]);
    if (!v21807) {
      v21807 = S(d$$115[0]);
    }
    if (v21807) {
      v12408 = d$$115;
    } else {
      v12408 = JAM.call(f$$4.unique, f$$4, [d$$115], JAM.policy.p3);
    }
    return JAM.call(this.pushStack, this, [v12408], JAM.policy.p3);
  }
  function v914(a$$272) {
    if (!a$$272) {
      var v5419;
      var v17972 = this[0];
      if (v17972) {
        v17972 = this[0].parentNode;
      }
      if (v17972) {
        v5419 = JAM.call(this.prevAll, this, [], JAM.policy.p3).length;
      } else {
        v5419 = -1;
      }
      return v5419;
    }
    if (typeof a$$272 == "string") {
      return JAM.call(f$$4.inArray, f$$4, [this[0], JAM.call(f$$4, null, [a$$272], JAM.policy.p3)], JAM.policy.p3);
    }
    var v12412;
    if (a$$272.jquery) {
      v12412 = a$$272[0];
    } else {
      v12412 = a$$272;
    }
    return JAM.call(f$$4.inArray, f$$4, [v12412, this], JAM.policy.p3);
  }
  function v913(a$$271, b$$177) {
    var c$$133 = [];
    var d$$114;
    var e$$128;
    var g$$67 = this[0];
    if (JAM.call(f$$4.isArray, f$$4, [a$$271], JAM.policy.p3)) {
      var h$$60 = 1;
      var v17974 = g$$67;
      if (v17974) {
        v17974 = g$$67.ownerDocument;
      }
      var v12413 = v17974;
      if (v12413) {
        v12413 = g$$67 !== b$$177;
      }
      var v5427 = v12413;
      for (;v5427;) {
        d$$114 = 0;
        var v5426 = d$$114 < a$$271.length;
        for (;v5426;) {
          var v12415 = JAM.call(f$$4, null, [g$$67], JAM.policy.p3);
          var v5425 = JAM.call(v12415.is, v12415, [a$$271[d$$114]], JAM.policy.p3);
          if (v5425) {
            JAM.call(c$$133.push, c$$133, [{selector:a$$271[d$$114], elem:g$$67, level:h$$60}], JAM.policy.p3);
          }
          d$$114++;
          v5426 = d$$114 < a$$271.length;
        }
        g$$67 = g$$67.parentNode;
        h$$60++;
        var v17976 = g$$67;
        if (v17976) {
          v17976 = g$$67.ownerDocument;
        }
        var v12419 = v17976;
        if (v12419) {
          v12419 = g$$67 !== b$$177;
        }
        v5427 = v12419;
      }
      return c$$133;
    }
    var v5429;
    var v17977 = JAM.call(Q.test, Q, [a$$271], JAM.policy.p3);
    if (!v17977) {
      v17977 = typeof a$$271 != "string";
    }
    if (v17977) {
      var v17978 = b$$177;
      if (!v17978) {
        v17978 = this.context;
      }
      v5429 = JAM.call(f$$4, null, [a$$271, v17978], JAM.policy.p3);
    } else {
      v5429 = 0;
    }
    var i$$131 = v5429;
    d$$114 = 0;
    e$$128 = this.length;
    var v5432 = d$$114 < e$$128;
    for (;v5432;) {
      g$$67 = this[d$$114];
      for (;g$$67;) {
        var v12422;
        if (i$$131) {
          v12422 = JAM.call(i$$131.index, i$$131, [g$$67], JAM.policy.p3) > -1;
        } else {
          var v17980 = f$$4.find;
          v12422 = JAM.call(v17980.matchesSelector, v17980, [g$$67, a$$271], JAM.policy.p3);
        }
        if (v12422) {
          JAM.call(c$$133.push, c$$133, [g$$67], JAM.policy.p3);
          break;
        }
        g$$67 = g$$67.parentNode;
        var v21812 = !g$$67;
        if (!v21812) {
          v21812 = !g$$67.ownerDocument;
        }
        var v17981 = v21812;
        if (!v17981) {
          v17981 = g$$67 === b$$177;
        }
        var v12423 = v17981;
        if (!v12423) {
          v12423 = g$$67.nodeType === 11;
        }
        if (v12423) {
          break;
        }
      }
      d$$114++;
      v5432 = d$$114 < e$$128;
    }
    var v5433;
    if (c$$133.length > 1) {
      v5433 = JAM.call(f$$4.unique, f$$4, [c$$133], JAM.policy.p3);
    } else {
      v5433 = c$$133;
    }
    c$$133 = v5433;
    return JAM.call(this.pushStack, this, [c$$133, "closest", a$$271], JAM.policy.p3);
  }
  function v912(a$$270) {
    var v5434 = !!a$$270;
    if (v5434) {
      var v12426;
      if (typeof a$$270 == "string") {
        var v17985;
        if (JAM.call(Q.test, Q, [a$$270], JAM.policy.p3)) {
          var v25837 = JAM.call(f$$4, null, [a$$270, this.context], JAM.policy.p3);
          v17985 = JAM.call(v25837.index, v25837, [this[0]], JAM.policy.p3) >= 0;
        } else {
          v17985 = JAM.call(f$$4.filter, f$$4, [a$$270, this], JAM.policy.p3).length > 0;
        }
        v12426 = v17985;
      } else {
        v12426 = JAM.call(this.filter, this, [a$$270], JAM.policy.p3).length > 0;
      }
      v5434 = v12426;
    }
    return v5434;
  }
  function v911(a$$269) {
    return JAM.call(this.pushStack, this, [T$$2(this, a$$269, !0), "filter", a$$269], JAM.policy.p3);
  }
  function v910(a$$268) {
    return JAM.call(this.pushStack, this, [T$$2(this, a$$268, !1), "not", a$$268], JAM.policy.p3);
  }
  function v909(a$$266) {
    function v908() {
      var a$$267 = 0;
      var c$$132 = b$$176.length;
      var v5438 = a$$267 < c$$132;
      for (;v5438;) {
        if (JAM.call(f$$4.contains, f$$4, [this, b$$176[a$$267]], JAM.policy.p3)) {
          return!0;
        }
        a$$267++;
        v5438 = a$$267 < c$$132;
      }
      return;
    }
    var b$$176 = JAM.call(f$$4, null, [a$$266], JAM.policy.p3);
    return JAM.call(this.filter, this, [v908], JAM.policy.p3);
  }
  function v907(a$$265) {
    function v906() {
      c$$131 = 0;
      d$$113 = b$$175.length;
      var v5440 = c$$131 < d$$113;
      for (;v5440;) {
        if (JAM.call(f$$4.contains, f$$4, [b$$175[c$$131], this], JAM.policy.p3)) {
          return!0;
        }
        c$$131++;
        v5440 = c$$131 < d$$113;
      }
      return;
    }
    var b$$175 = this;
    var c$$131;
    var d$$113;
    if (typeof a$$265 != "string") {
      var v5441 = JAM.call(f$$4, null, [a$$265], JAM.policy.p3);
      return JAM.call(v5441.filter, v5441, [v906], JAM.policy.p3);
    }
    var e$$127 = JAM.call(this.pushStack, this, ["", "find", a$$265], JAM.policy.p3);
    var g$$66;
    var h$$59;
    var i$$130;
    c$$131 = 0;
    d$$113 = this.length;
    var v5448 = c$$131 < d$$113;
    for (;v5448;) {
      g$$66 = e$$127.length;
      JAM.call(f$$4.find, f$$4, [a$$265, this[c$$131], e$$127], JAM.policy.p3);
      if (c$$131 > 0) {
        h$$59 = g$$66;
        var v5446 = h$$59 < e$$127.length;
        for (;v5446;) {
          i$$130 = 0;
          var v5445 = i$$130 < g$$66;
          for (;v5445;) {
            if (e$$127[i$$130] === e$$127[h$$59]) {
              var v5443 = h$$59;
              h$$59 = h$$59 - 1;
              JAM.call(e$$127.splice, e$$127, [v5443, 1], JAM.policy.p3);
              break;
            }
            i$$130++;
            v5445 = i$$130 < g$$66;
          }
          h$$59++;
          v5446 = h$$59 < e$$127.length;
        }
      }
      c$$131++;
      v5448 = c$$131 < d$$113;
    }
    return e$$127;
  }
  function v905() {
    function v904(a$$263) {
      var v12437;
      if (a$$263) {
        var v17988 = a$$263.ownerDocument;
        if (!v17988) {
          v17988 = a$$263;
        }
        v12437 = v17988;
      } else {
        v12437 = 0;
      }
      var b$$173 = v12437.documentElement;
      var v5450;
      if (b$$173) {
        v5450 = b$$173.nodeName !== "HTML";
      } else {
        v5450 = !1;
      }
      return v5450;
    }
    function v903() {
      return!1;
    }
    function v902(a$$262, b$$172) {
      return!!(JAM.call(a$$262.compareDocumentPosition, a$$262, [b$$172], JAM.policy.p3) & 16);
    }
    function v901(a$$261, b$$171) {
      var v5452 = a$$261 !== b$$171;
      if (v5452) {
        var v12440;
        if (a$$261.contains) {
          v12440 = JAM.call(a$$261.contains, a$$261, [b$$171], JAM.policy.p3);
        } else {
          v12440 = !0;
        }
        v5452 = v12440;
      }
      return v5452;
    }
    function v900() {
      function v899(a$$260, b$$170, c$$129) {
        var v12441 = typeof b$$170.getElementsByClassName != "undefined";
        if (v12441) {
          v12441 = !c$$129;
        }
        if (v12441) {
          return JAM.call(b$$170.getElementsByClassName, b$$170, [a$$260[1]], JAM.policy.p3);
        }
        return;
      }
      var a$$259 = JAM.call(c$$5.createElement, c$$5, ["div"], JAM.policy.p3);
      JAM.set(a$$259, "innerHTML", "<div class='test e'></div><div class='test'></div>");
      var v12442 = !!a$$259.getElementsByClassName;
      if (v12442) {
        v12442 = JAM.call(a$$259.getElementsByClassName, a$$259, ["e"], JAM.policy.p3).length !== 0;
      }
      if (v12442) {
        a$$259.lastChild.className = "e";
        if (JAM.call(a$$259.getElementsByClassName, a$$259, ["e"], JAM.policy.p3).length === 1) {
          return;
        }
        var v17995 = o$$10.order;
        JAM.call(v17995.splice, v17995, [1, 0, "CLASS"], JAM.policy.p3);
        o$$10.find.CLASS = v899;
        a$$259 = null;
      }
      return;
    }
    function v898() {
      function v897(a$$258, c$$128) {
        c$$128 = JAM.call(c$$128.replace, c$$128, [/\=\s*([^'"\]]*)\s*\]/g, "='$1']"], JAM.policy.p3);
        if (!JAM.call(m$$19.isXML, m$$19, [a$$258], JAM.policy.p3)) {
          try {
            var v12445 = e$$125;
            if (!v12445) {
              var v25840 = o$$10.match.PSEUDO;
              var v17997 = !JAM.call(v25840.test, v25840, [c$$128], JAM.policy.p3);
              if (v17997) {
                v17997 = !JAM.call(/!=/.test, /!=/, [c$$128], JAM.policy.p3);
              }
              v12445 = v17997;
            }
            if (v12445) {
              var f$$41 = JAM.call(b$$169.call, b$$169, [a$$258, c$$128], JAM.policy.p3);
              var v17999 = f$$41;
              if (!v17999) {
                v17999 = !d$$111;
              }
              var v12446 = v17999;
              if (!v12446) {
                var v18000 = a$$258.document;
                if (v18000) {
                  v18000 = a$$258.document.nodeType !== 11;
                }
                v12446 = v18000;
              }
              if (v12446) {
                return f$$41;
              }
            }
          } catch (g$$64) {
          }
        }
        return JAM.call(m$$19, null, [c$$128, null, null, [a$$258]], JAM.policy.p3).length > 0;
      }
      var a$$257 = c$$5.documentElement;
      var v18003 = a$$257.matchesSelector;
      if (!v18003) {
        v18003 = a$$257.mozMatchesSelector;
      }
      var v12448 = v18003;
      if (!v12448) {
        v12448 = a$$257.webkitMatchesSelector;
      }
      var v5462 = v12448;
      if (!v5462) {
        v5462 = a$$257.msMatchesSelector;
      }
      var b$$169 = v5462;
      if (b$$169) {
        var d$$111 = !JAM.call(b$$169.call, b$$169, [JAM.call(c$$5.createElement, c$$5, ["div"], JAM.policy.p3), "div"], JAM.policy.p3);
        var e$$125 = !1;
        try {
          JAM.call(b$$169.call, b$$169, [c$$5.documentElement, "[test!='']:sizzle"], JAM.policy.p3);
        } catch (f$$40) {
          e$$125 = !0;
        }
        m$$19.matchesSelector = v897;
      }
      return;
    }
    function v896() {
      function v895(b$$168, e$$124, f$$39, g$$63) {
        e$$124 = e$$124 || c$$5;
        var v12451 = !g$$63;
        if (v12451) {
          v12451 = !JAM.call(m$$19.isXML, m$$19, [e$$124], JAM.policy.p3);
        }
        if (v12451) {
          var h$$57 = JAM.call(/^(\w+$)|^\.([\w\-]+$)|^#([\w\-]+$)/.exec, /^(\w+$)|^\.([\w\-]+$)|^#([\w\-]+$)/, [b$$168], JAM.policy.p3);
          var v12452 = h$$57;
          if (v12452) {
            var v18006 = e$$124.nodeType === 1;
            if (!v18006) {
              v18006 = e$$124.nodeType === 9;
            }
            v12452 = v18006;
          }
          if (v12452) {
            if (h$$57[1]) {
              return JAM.call(s$$22, null, [JAM.call(e$$124.getElementsByTagName, e$$124, [b$$168], JAM.policy.p3), f$$39], JAM.policy.p3);
            }
            var v18007 = h$$57[2];
            if (v18007) {
              v18007 = o$$10.find.CLASS;
            }
            var v12453 = v18007;
            if (v12453) {
              v12453 = e$$124.getElementsByClassName;
            }
            if (v12453) {
              return JAM.call(s$$22, null, [JAM.call(e$$124.getElementsByClassName, e$$124, [h$$57[2]], JAM.policy.p3), f$$39], JAM.policy.p3);
            }
          }
          if (e$$124.nodeType === 9) {
            var v12456 = b$$168 === "body";
            if (v12456) {
              v12456 = e$$124.body;
            }
            if (v12456) {
              return JAM.call(s$$22, null, [[e$$124.body], f$$39], JAM.policy.p3);
            }
            var v12458 = h$$57;
            if (v12458) {
              v12458 = h$$57[3];
            }
            if (v12458) {
              var i$$128 = JAM.call(e$$124.getElementById, e$$124, [h$$57[3]], JAM.policy.p3);
              var v12459 = !i$$128;
              if (!v12459) {
                v12459 = !i$$128.parentNode;
              }
              if (v12459) {
                return JAM.call(s$$22, null, [[], f$$39], JAM.policy.p3);
              }
              if (i$$128.id === h$$57[3]) {
                return JAM.call(s$$22, null, [[i$$128], f$$39], JAM.policy.p3);
              }
            }
            try {
              return JAM.call(s$$22, null, [JAM.call(e$$124.querySelectorAll, e$$124, [b$$168], JAM.policy.p3), f$$39], JAM.policy.p3);
            } catch (j$$48) {
            }
          } else {
            var v12462 = e$$124.nodeType === 1;
            if (v12462) {
              var v21832 = e$$124.nodeName;
              v12462 = JAM.call(v21832.toLowerCase, v21832, [], JAM.policy.p3) !== "object";
            }
            if (v12462) {
              var k$$29 = e$$124;
              var l$$41 = JAM.call(e$$124.getAttribute, e$$124, ["id"], JAM.policy.p3);
              var n$$71 = l$$41 || d$$110;
              var p$$33 = e$$124.parentNode;
              var q$$11 = JAM.call(/^\s*[+~]/.test, /^\s*[+~]/, [b$$168], JAM.policy.p3);
              var v12463;
              if (l$$41) {
                v12463 = n$$71 = JAM.call(n$$71.replace, n$$71, [/'/g, "\\$&"], JAM.policy.p3);
              } else {
                v12463 = JAM.call(e$$124.setAttribute, e$$124, ["id", n$$71], JAM.policy.p3);
              }
              v12463;
              var v12464 = q$$11 && p$$33;
              if (v12464) {
                e$$124 = e$$124.parentNode;
              }
              try {
                var v12465 = !q$$11;
                if (!v12465) {
                  v12465 = p$$33;
                }
                if (v12465) {
                  return JAM.call(s$$22, null, [JAM.call(e$$124.querySelectorAll, e$$124, ["[id='" + n$$71 + "'] " + b$$168], JAM.policy.p3), f$$39], JAM.policy.p3);
                }
              } catch (r$$13) {
              } finally {
                if (!l$$41) {
                  JAM.call(k$$29.removeAttribute, k$$29, ["id"], JAM.policy.p3);
                }
              }
            }
          }
        }
        return JAM.call(a$$256, null, [b$$168, e$$124, f$$39, g$$63], JAM.policy.p3);
      }
      var a$$256 = m$$19;
      var b$$167 = JAM.call(c$$5.createElement, c$$5, ["div"], JAM.policy.p3);
      var d$$110 = "__sizzle__";
      JAM.set(b$$167, "innerHTML", "<p class='TEST'></p>");
      var v12468 = !b$$167.querySelectorAll;
      if (!v12468) {
        v12468 = JAM.call(b$$167.querySelectorAll, b$$167, [".TEST"], JAM.policy.p3).length !== 0;
      }
      if (v12468) {
        m$$19 = v895;
        var e$$123;
        for (e$$123 in a$$256) {
          JAM.set(m$$19, e$$123, a$$256[e$$123], JAM.policy.p2);
        }
        b$$167 = null;
      }
      return;
    }
    function v894() {
      function v893(a$$255) {
        return JAM.call(a$$255.getAttribute, a$$255, ["href", 2], JAM.policy.p3);
      }
      function v892(a$$254, b$$166) {
        var c$$127 = JAM.call(b$$166.getElementsByTagName, b$$166, [a$$254[1]], JAM.policy.p3);
        if (a$$254[1] === "*") {
          var d$$109 = [];
          var e$$122 = 0;
          var v5486 = c$$127[e$$122];
          for (;v5486;) {
            var v5485 = c$$127[e$$122].nodeType === 1;
            if (v5485) {
              JAM.call(d$$109.push, d$$109, [c$$127[e$$122]], JAM.policy.p3);
            }
            e$$122++;
            v5486 = c$$127[e$$122];
          }
          c$$127 = d$$109;
        }
        return c$$127;
      }
      var a$$253 = JAM.call(c$$5.createElement, c$$5, ["div"], JAM.policy.p3);
      JAM.call(a$$253.appendChild, a$$253, [JAM.call(c$$5.createComment, c$$5, [""], JAM.policy.p3)], JAM.policy.p3);
      var v25843 = JAM.call(a$$253.getElementsByTagName, a$$253, ["*"], JAM.policy.p3).length > 0;
      if (v25843) {
        o$$10.find.TAG = v892;
      }
      JAM.set(a$$253, "innerHTML", "<a href='#'></a>");
      var v25844 = a$$253.firstChild;
      if (v25844) {
        v25844 = typeof a$$253.firstChild.getAttribute != "undefined";
      }
      var v21835 = v25844;
      if (v21835) {
        var v27502 = a$$253.firstChild;
        v21835 = JAM.call(v27502.getAttribute, v27502, ["href"], JAM.policy.p3) !== "#";
      }
      var v18018 = v21835;
      if (v18018) {
        o$$10.attrHandle.href = v893;
      }
      a$$253 = null;
      return;
    }
    function v891() {
      function v890(a$$252, b$$165) {
        var v5488 = typeof a$$252.getAttributeNode != "undefined";
        if (v5488) {
          v5488 = JAM.call(a$$252.getAttributeNode, a$$252, ["id"], JAM.policy.p3);
        }
        var c$$126 = v5488;
        var v12473 = a$$252.nodeType === 1;
        if (v12473) {
          v12473 = c$$126;
        }
        var v5489 = v12473;
        if (v5489) {
          v5489 = c$$126.nodeValue === b$$165;
        }
        return v5489;
      }
      function v889(a$$251, c$$125, d$$108) {
        var v12475 = typeof c$$125.getElementById != "undefined";
        if (v12475) {
          v12475 = !d$$108;
        }
        if (v12475) {
          var e$$121 = JAM.call(c$$125.getElementById, c$$125, [a$$251[1]], JAM.policy.p3);
          var v5491;
          if (e$$121) {
            var v12476;
            var v21838 = e$$121.id === a$$251[1];
            if (!v21838) {
              var v25848 = typeof e$$121.getAttributeNode != "undefined";
              if (v25848) {
                v25848 = JAM.call(e$$121.getAttributeNode, e$$121, ["id"], JAM.policy.p3).nodeValue === a$$251[1];
              }
              v21838 = v25848;
            }
            if (v21838) {
              v12476 = [e$$121];
            } else {
              v12476 = b$$9;
            }
            v5491 = v12476;
          } else {
            v5491 = [];
          }
          return v5491;
        }
        return;
      }
      var a$$250 = JAM.call(c$$5.createElement, c$$5, ["div"], JAM.policy.p3);
      var v12477 = new Date;
      var d$$107 = "script" + JAM.call(v12477.getTime, v12477, [], JAM.policy.p3);
      var e$$120 = c$$5.documentElement;
      JAM.set(a$$250, "innerHTML", "<a name='" + d$$107 + "'/>");
      JAM.call(e$$120.insertBefore, e$$120, [a$$250, e$$120.firstChild], JAM.policy.p3);
      var v21839 = JAM.call(c$$5.getElementById, c$$5, [d$$107], JAM.policy.p3);
      if (v21839) {
        o$$10.find.ID = v889;
        o$$10.filter.ID = v890;
      }
      JAM.call(e$$120.removeChild, e$$120, [a$$250], JAM.policy.p3);
      e$$120 = a$$250 = null;
      return;
    }
    function v888(a$$249, b$$164, c$$124) {
      if (a$$249 === b$$164) {
        return c$$124;
      }
      var d$$106 = a$$249.nextSibling;
      for (;d$$106;) {
        if (d$$106 === b$$164) {
          return-1;
        }
        d$$106 = d$$106.nextSibling;
      }
      return 1;
    }
    function v887(a$$248, b$$163) {
      if (a$$248 === b$$163) {
        h$$47 = !0;
        return 0;
      }
      var v12478 = a$$248.sourceIndex;
      if (v12478) {
        v12478 = b$$163.sourceIndex;
      }
      if (v12478) {
        return a$$248.sourceIndex - b$$163.sourceIndex;
      }
      var c$$123;
      var d$$105;
      var e$$119 = [];
      var f$$38 = [];
      var g$$62 = a$$248.parentNode;
      var i$$127 = b$$163.parentNode;
      var j$$47 = g$$62;
      if (g$$62 === i$$127) {
        return JAM.call(v$$6, null, [a$$248, b$$163], JAM.policy.p3);
      }
      if (!g$$62) {
        return-1;
      }
      if (!i$$127) {
        return 1;
      }
      for (;j$$47;) {
        JAM.call(e$$119.unshift, e$$119, [j$$47], JAM.policy.p3);
        j$$47 = j$$47.parentNode;
      }
      j$$47 = i$$127;
      for (;j$$47;) {
        JAM.call(f$$38.unshift, f$$38, [j$$47], JAM.policy.p3);
        j$$47 = j$$47.parentNode;
      }
      c$$123 = e$$119.length;
      d$$105 = f$$38.length;
      var k$$28 = 0;
      var v12479 = k$$28 < c$$123;
      if (v12479) {
        v12479 = k$$28 < d$$105;
      }
      var v5506 = v12479;
      for (;v5506;) {
        if (e$$119[k$$28] !== f$$38[k$$28]) {
          return JAM.call(v$$6, null, [e$$119[k$$28], f$$38[k$$28]], JAM.policy.p3);
        }
        k$$28++;
        var v12482 = k$$28 < c$$123;
        if (v12482) {
          v12482 = k$$28 < d$$105;
        }
        v5506 = v12482;
      }
      var v5507;
      if (k$$28 === c$$123) {
        v5507 = JAM.call(v$$6, null, [a$$248, f$$38[k$$28], -1], JAM.policy.p3);
      } else {
        v5507 = JAM.call(v$$6, null, [e$$119[k$$28], b$$163, 1], JAM.policy.p3);
      }
      return v5507;
    }
    function v886(a$$247, b$$162) {
      if (a$$247 === b$$162) {
        h$$47 = !0;
        return 0;
      }
      var v12486 = !a$$247.compareDocumentPosition;
      if (!v12486) {
        v12486 = !b$$162.compareDocumentPosition;
      }
      if (v12486) {
        var v5509;
        if (a$$247.compareDocumentPosition) {
          v5509 = -1;
        } else {
          v5509 = 1;
        }
        return v5509;
      }
      var v5511;
      if (JAM.call(a$$247.compareDocumentPosition, a$$247, [b$$162], JAM.policy.p3) & 4) {
        v5511 = -1;
      } else {
        v5511 = 1;
      }
      return v5511;
    }
    function v885(a$$246, b$$161) {
      var c$$122 = 0;
      var d$$104 = b$$161 || [];
      if (JAM.call(g$$47.call, g$$47, [a$$246], JAM.policy.p3) === "[object Array]") {
        var v5512 = Array.prototype.push;
        JAM.call(v5512.apply, v5512, [d$$104, a$$246], JAM.policy.p3);
      } else {
        if (typeof a$$246.length == "number") {
          var e$$118 = a$$246.length;
          var v5514 = c$$122 < e$$118;
          for (;v5514;) {
            JAM.call(d$$104.push, d$$104, [a$$246[c$$122]], JAM.policy.p3);
            c$$122++;
            v5514 = c$$122 < e$$118;
          }
        } else {
          var v5516 = a$$246[c$$122];
          for (;v5516;) {
            JAM.call(d$$104.push, d$$104, [a$$246[c$$122]], JAM.policy.p3);
            c$$122++;
            v5516 = a$$246[c$$122];
          }
        }
      }
      return d$$104;
    }
    function v884(a$$243, b$$158, c$$121, d$$103) {
      var e$$117 = b$$158[2];
      var f$$37 = o$$10.setFilters[e$$117];
      if (f$$37) {
        return JAM.call(f$$37, null, [a$$243, c$$121, b$$158, d$$103], JAM.policy.p3);
      }
      return;
    }
    function v883(a$$242, b$$157) {
      var c$$120 = b$$157[1];
      var v5520;
      if (m$$19.attr) {
        v5520 = JAM.call(m$$19.attr, m$$19, [a$$242, c$$120], JAM.policy.p3);
      } else {
        var v12492;
        if (o$$10.attrHandle[c$$120]) {
          var v18028 = o$$10.attrHandle;
          v12492 = JAM.call(v18028[c$$120], v18028, [a$$242], JAM.policy.p3);
        } else {
          var v18029;
          if (a$$242[c$$120] != null) {
            v18029 = a$$242[c$$120];
          } else {
            v18029 = JAM.call(a$$242.getAttribute, a$$242, [c$$120], JAM.policy.p3);
          }
          v12492 = v18029;
        }
        v5520 = v12492;
      }
      var d$$102 = v5520;
      var e$$116 = d$$102 + "";
      var f$$36 = b$$157[2];
      var g$$61 = b$$157[4];
      var v5521;
      if (d$$102 == null) {
        v5521 = f$$36 === "!=";
      } else {
        var v12494;
        var v21842 = !f$$36;
        if (v21842) {
          v21842 = m$$19.attr;
        }
        if (v21842) {
          v12494 = d$$102 != null;
        } else {
          var v18031;
          if (f$$36 === "=") {
            v18031 = e$$116 === g$$61;
          } else {
            var v21843;
            if (f$$36 === "*=") {
              v21843 = JAM.call(e$$116.indexOf, e$$116, [g$$61], JAM.policy.p3) >= 0;
            } else {
              var v25854;
              if (f$$36 === "~=") {
                var v28561 = " " + e$$116 + " ";
                v25854 = JAM.call(v28561.indexOf, v28561, [g$$61], JAM.policy.p3) >= 0;
              } else {
                var v27509;
                if (g$$61) {
                  var v28562;
                  if (f$$36 === "!=") {
                    v28562 = e$$116 !== g$$61;
                  } else {
                    var v29232;
                    if (f$$36 === "^=") {
                      v29232 = JAM.call(e$$116.indexOf, e$$116, [g$$61], JAM.policy.p3) === 0;
                    } else {
                      var v29665;
                      if (f$$36 === "$=") {
                        v29665 = JAM.call(e$$116.substr, e$$116, [e$$116.length - g$$61.length], JAM.policy.p3) === g$$61;
                      } else {
                        var v29948;
                        if (f$$36 === "|=") {
                          var v30195 = e$$116 === g$$61;
                          if (!v30195) {
                            v30195 = JAM.call(e$$116.substr, e$$116, [0, g$$61.length + 1], JAM.policy.p3) === g$$61 + "-";
                          }
                          v29948 = v30195;
                        } else {
                          v29948 = !1;
                        }
                        v29665 = v29948;
                      }
                      v29232 = v29665;
                    }
                    v28562 = v29232;
                  }
                  v27509 = v28562;
                } else {
                  var v28563 = e$$116;
                  if (v28563) {
                    v28563 = d$$102 !== !1;
                  }
                  v27509 = v28563;
                }
                v25854 = v27509;
              }
              v21843 = v25854;
            }
            v18031 = v21843;
          }
          v12494 = v18031;
        }
        v5521 = v12494;
      }
      return v5521;
    }
    function v882(a$$241, b$$156) {
      var v25856 = a$$241.className;
      if (!v25856) {
        v25856 = JAM.call(a$$241.getAttribute, a$$241, ["class"], JAM.policy.p3);
      }
      var v12496 = " " + v25856 + " ";
      return JAM.call(v12496.indexOf, v12496, [b$$156], JAM.policy.p3) > -1;
    }
    function v881(a$$240, b$$155) {
      var v12497 = b$$155 === "*";
      if (v12497) {
        v12497 = a$$240.nodeType === 1;
      }
      var v5523 = v12497;
      if (!v5523) {
        var v12498 = !!a$$240.nodeName;
        if (v12498) {
          var v21847 = a$$240.nodeName;
          v12498 = JAM.call(v21847.toLowerCase, v21847, [], JAM.policy.p3) === b$$155;
        }
        v5523 = v12498;
      }
      return v5523;
    }
    function v880(a$$239, b$$154) {
      var v5524 = a$$239.nodeType === 1;
      if (v5524) {
        v5524 = JAM.call(a$$239.getAttribute, a$$239, ["id"], JAM.policy.p3) === b$$154;
      }
      return v5524;
    }
    function v879(a$$238, b$$153) {
      var c$$119;
      var e$$115;
      var f$$35;
      var g$$60;
      var h$$56;
      var i$$126;
      var j$$46;
      var k$$27 = b$$153[1];
      var l$$40 = a$$238;
      switch(k$$27) {
        case "only":
        ;
        case "first":
          var v5526 = l$$40 = l$$40.previousSibling;
          for (;v5526;) {
            if (l$$40.nodeType === 1) {
              return!1;
            }
            v5526 = l$$40 = l$$40.previousSibling;
          }
          if (k$$27 === "first") {
            return!0;
          }
          l$$40 = a$$238;
        case "last":
          var v5529 = l$$40 = l$$40.nextSibling;
          for (;v5529;) {
            if (l$$40.nodeType === 1) {
              return!1;
            }
            v5529 = l$$40 = l$$40.nextSibling;
          }
          return!0;
        case "nth":
          c$$119 = b$$153[2];
          e$$115 = b$$153[3];
          var v12504 = c$$119 === 1;
          if (v12504) {
            v12504 = e$$115 === 0;
          }
          if (v12504) {
            return!0;
          }
          f$$35 = b$$153[0];
          g$$60 = a$$238.parentNode;
          var v12505 = g$$60;
          if (v12505) {
            var v18037 = g$$60[d$$86] !== f$$35;
            if (!v18037) {
              v18037 = !a$$238.nodeIndex;
            }
            v12505 = v18037;
          }
          if (v12505) {
            i$$126 = 0;
            l$$40 = g$$60.firstChild;
            for (;l$$40;) {
              var v5531 = l$$40.nodeType === 1;
              if (v5531) {
                l$$40.nodeIndex = i$$126 = i$$126 + 1;
              }
              l$$40 = l$$40.nextSibling;
            }
            JAM.set(g$$60, d$$86, f$$35, JAM.policy.p2);
          }
          j$$46 = a$$238.nodeIndex - e$$115;
          var v5534;
          if (c$$119 === 0) {
            v5534 = j$$46 === 0;
          } else {
            var v12507 = j$$46 % c$$119 === 0;
            if (v12507) {
              v12507 = j$$46 / c$$119 >= 0;
            }
            v5534 = v12507;
          }
          return v5534;
      }
      return;
    }
    function v878(a$$237, b$$152, c$$118, d$$101) {
      var e$$114 = b$$152[1];
      var f$$34 = o$$10.filters[e$$114];
      if (f$$34) {
        return JAM.call(f$$34, null, [a$$237, c$$118, b$$152, d$$101], JAM.policy.p3);
      }
      if (e$$114 === "contains") {
        var v25857 = a$$237.textContent;
        if (!v25857) {
          v25857 = a$$237.innerText;
        }
        var v21851 = v25857;
        if (!v21851) {
          v21851 = JAM.call(n$$68, null, [[a$$237]], JAM.policy.p3);
        }
        var v18040 = v21851;
        if (!v18040) {
          v18040 = "";
        }
        var v12509 = v18040;
        return JAM.call(v12509.indexOf, v12509, [b$$152[3]], JAM.policy.p3) >= 0;
      }
      if (e$$114 === "not") {
        var g$$59 = b$$152[3];
        var h$$55 = 0;
        var i$$125 = g$$59.length;
        var v5539 = h$$55 < i$$125;
        for (;v5539;) {
          if (g$$59[h$$55] === a$$237) {
            return!1;
          }
          h$$55++;
          v5539 = h$$55 < i$$125;
        }
        return!0;
      }
      JAM.call(m$$19.error, m$$19, [e$$114], JAM.policy.p3);
      return;
    }
    function v877(a$$236, b$$151, c$$117) {
      return c$$117[3] - 0 === b$$151;
    }
    function v876(a$$235, b$$150, c$$116) {
      return c$$116[3] - 0 === b$$150;
    }
    function v875(a$$234, b$$149, c$$115) {
      return b$$149 > c$$115[3] - 0;
    }
    function v874(a$$233, b$$148, c$$114) {
      return b$$148 < c$$114[3] - 0;
    }
    function v873(a$$232, b$$147) {
      return b$$147 % 2 === 1;
    }
    function v872(a$$231, b$$146) {
      return b$$146 % 2 === 0;
    }
    function v871(a$$230, b$$145, c$$113, d$$100) {
      return b$$145 === d$$100.length - 1;
    }
    function v870(a$$229, b$$144) {
      return b$$144 === 0;
    }
    function v869(a$$228) {
      return a$$228 === a$$228.ownerDocument.activeElement;
    }
    function v868(a$$227) {
      return JAM.call(/input|select|textarea|button/i.test, /input|select|textarea|button/i, [a$$227.nodeName], JAM.policy.p3);
    }
    function v867(a$$226) {
      var v5550 = a$$226.nodeName;
      var b$$143 = JAM.call(v5550.toLowerCase, v5550, [], JAM.policy.p3);
      var v12518 = b$$143 === "input";
      if (v12518) {
        v12518 = "button" === a$$226.type;
      }
      var v5551 = v12518;
      if (!v5551) {
        v5551 = b$$143 === "button";
      }
      return v5551;
    }
    function v866(a$$225) {
      var v5552 = a$$225.nodeName;
      var b$$142 = JAM.call(v5552.toLowerCase, v5552, [], JAM.policy.p3);
      var v12520 = b$$142 === "input";
      if (!v12520) {
        v12520 = b$$142 === "button";
      }
      var v5553 = v12520;
      if (v5553) {
        v5553 = "reset" === a$$225.type;
      }
      return v5553;
    }
    function v865(a$$224) {
      var v18043 = a$$224.nodeName;
      var v5554 = JAM.call(v18043.toLowerCase, v18043, [], JAM.policy.p3) === "input";
      if (v5554) {
        v5554 = "image" === a$$224.type;
      }
      return v5554;
    }
    function v864(a$$223) {
      var v5555 = a$$223.nodeName;
      var b$$141 = JAM.call(v5555.toLowerCase, v5555, [], JAM.policy.p3);
      var v12524 = b$$141 === "input";
      if (!v12524) {
        v12524 = b$$141 === "button";
      }
      var v5556 = v12524;
      if (v5556) {
        v5556 = "submit" === a$$223.type;
      }
      return v5556;
    }
    function v863(a$$222) {
      var v18045 = a$$222.nodeName;
      var v5557 = JAM.call(v18045.toLowerCase, v18045, [], JAM.policy.p3) === "input";
      if (v5557) {
        v5557 = "password" === a$$222.type;
      }
      return v5557;
    }
    function v862(a$$221) {
      var v18046 = a$$221.nodeName;
      var v5558 = JAM.call(v18046.toLowerCase, v18046, [], JAM.policy.p3) === "input";
      if (v5558) {
        v5558 = "file" === a$$221.type;
      }
      return v5558;
    }
    function v861(a$$220) {
      var v18047 = a$$220.nodeName;
      var v5559 = JAM.call(v18047.toLowerCase, v18047, [], JAM.policy.p3) === "input";
      if (v5559) {
        v5559 = "checkbox" === a$$220.type;
      }
      return v5559;
    }
    function v860(a$$219) {
      var v18048 = a$$219.nodeName;
      var v5560 = JAM.call(v18048.toLowerCase, v18048, [], JAM.policy.p3) === "input";
      if (v5560) {
        v5560 = "radio" === a$$219.type;
      }
      return v5560;
    }
    function v859(a$$218) {
      var b$$140 = JAM.call(a$$218.getAttribute, a$$218, ["type"], JAM.policy.p3);
      var c$$112 = a$$218.type;
      var v21853 = a$$218.nodeName;
      var v12534 = JAM.call(v21853.toLowerCase, v21853, [], JAM.policy.p3) === "input";
      if (v12534) {
        v12534 = "text" === c$$112;
      }
      var v5561 = v12534;
      if (v5561) {
        var v12535 = b$$140 === c$$112;
        if (!v12535) {
          v12535 = b$$140 === null;
        }
        v5561 = v12535;
      }
      return v5561;
    }
    function v858(a$$217) {
      return JAM.call(/h\d/i.test, /h\d/i, [a$$217.nodeName], JAM.policy.p3);
    }
    function v857(a$$216, b$$139, c$$111) {
      return!!JAM.call(m$$19, null, [c$$111[3], a$$216], JAM.policy.p3).length;
    }
    function v856(a$$215) {
      return!a$$215.firstChild;
    }
    function v855(a$$214) {
      return!!a$$214.firstChild;
    }
    function v854(a$$213) {
      return a$$213.selected === !0;
    }
    function v853(a$$212) {
      return a$$212.checked === !0;
    }
    function v852(a$$211) {
      return a$$211.disabled === !0;
    }
    function v851(a$$210) {
      var v5572 = a$$210.disabled === !1;
      if (v5572) {
        v5572 = a$$210.type !== "hidden";
      }
      return v5572;
    }
    function v850(a$$209) {
      JAM.call(a$$209.unshift, a$$209, [!0], JAM.policy.p3);
      return a$$209;
    }
    function v849(b$$138, c$$110, d$$99, e$$113, f$$33) {
      if (b$$138[1] === "not") {
        var v25860 = JAM.call(a$$185.exec, a$$185, [b$$138[3]], JAM.policy.p3);
        if (!v25860) {
          v25860 = "";
        }
        var v12542 = v25860.length > 1;
        if (!v12542) {
          v12542 = JAM.call(/^\w/.test, /^\w/, [b$$138[3]], JAM.policy.p3);
        }
        if (v12542) {
          var v31127 = JAM.call(m$$19, null, [b$$138[3], null, null, c$$110], JAM.policy.p3);
          b$$138[3] = v31127;
        } else {
          var g$$58 = JAM.call(m$$19.filter, m$$19, [b$$138[3], c$$110, d$$99, !0 ^ f$$33], JAM.policy.p3);
          if (!d$$99) {
            var v12544 = e$$113.push;
            JAM.call(v12544.apply, v12544, [e$$113, g$$58], JAM.policy.p3);
          }
          return!1;
        }
      } else {
        var v18055 = o$$10.match.POS;
        var v12546 = JAM.call(v18055.test, v18055, [b$$138[0]], JAM.policy.p3);
        if (!v12546) {
          var v18057 = o$$10.match.CHILD;
          v12546 = JAM.call(v18057.test, v18057, [b$$138[0]], JAM.policy.p3);
        }
        if (v12546) {
          return!0;
        }
      }
      return b$$138;
    }
    function v848(a$$208, b$$137, c$$109, d$$98, e$$112, f$$32) {
      var v5580 = a$$208[1];
      var v31128 = JAM.call(v5580.replace, v5580, [j$$41, ""], JAM.policy.p3);
      var g$$57 = a$$208[1] = v31128;
      var v21858 = !f$$32;
      if (v21858) {
        v21858 = o$$10.attrMap[g$$57];
      }
      var v18060 = v21858;
      if (v18060) {
        a$$208[1] = o$$10.attrMap[g$$57];
      }
      var v25862 = a$$208[4];
      if (!v25862) {
        v25862 = a$$208[5];
      }
      var v21860 = v25862;
      if (!v21860) {
        v21860 = "";
      }
      var v18061 = v21860;
      var v31129 = JAM.call(v18061.replace, v18061, [j$$41, ""], JAM.policy.p3);
      a$$208[4] = v31129;
      var v12547 = a$$208[2] === "~=";
      if (v12547) {
        a$$208[4] = " " + a$$208[4] + " ";
      }
      return a$$208;
    }
    function v847(a$$207) {
      if (a$$207[1] === "nth") {
        var v12549 = a$$207[2];
        if (!v12549) {
          JAM.call(m$$19.error, m$$19, [a$$207[0]], JAM.policy.p3);
        }
        var v12550 = a$$207[2];
        var v31130 = JAM.call(v12550.replace, v12550, [/^\+|\s*/g, ""], JAM.policy.p3);
        a$$207[2] = v31130;
        var v25864 = a$$207[2] === "even";
        if (v25864) {
          v25864 = "2n";
        }
        var v21862 = v25864;
        if (!v21862) {
          var v25865 = a$$207[2] === "odd";
          if (v25865) {
            v25865 = "2n+1";
          }
          v21862 = v25865;
        }
        var v18066 = v21862;
        if (!v18066) {
          var v21863 = !JAM.call(/\D/.test, /\D/, [a$$207[2]], JAM.policy.p3);
          if (v21863) {
            v21863 = "0n+" + a$$207[2];
          }
          v18066 = v21863;
        }
        var v12551 = v18066;
        if (!v12551) {
          v12551 = a$$207[2];
        }
        var b$$136 = JAM.call(/(-?)(\d*)(?:n([+\-]?\d*))?/.exec, /(-?)(\d*)(?:n([+\-]?\d*))?/, [v12551], JAM.policy.p3);
        var v18068 = b$$136[1];
        var v21865 = b$$136[2];
        if (!v21865) {
          v21865 = 1;
        }
        a$$207[2] = v18068 + v21865 - 0;
        a$$207[3] = b$$136[3] - 0;
      } else {
        var v5582 = a$$207[2];
        if (v5582) {
          JAM.call(m$$19.error, m$$19, [a$$207[0]], JAM.policy.p3);
        }
      }
      a$$207[0] = e$$101;
      e$$101 = e$$101 + 1;
      return a$$207;
    }
    function v846(a$$206, b$$135) {
      var v12555 = a$$206[1];
      var v5584 = JAM.call(v12555.replace, v12555, [j$$41, ""], JAM.policy.p3);
      return JAM.call(v5584.toLowerCase, v5584, [], JAM.policy.p3);
    }
    function v845(a$$205) {
      var v5585 = a$$205[1];
      return JAM.call(v5585.replace, v5585, [j$$41, ""], JAM.policy.p3);
    }
    function v844(a$$204, b$$134, c$$108, d$$97, e$$111, f$$31) {
      var v18070 = a$$204[1];
      a$$204 = " " + JAM.call(v18070.replace, v18070, [j$$41, ""], JAM.policy.p3) + " ";
      if (f$$31) {
        return a$$204;
      }
      var g$$56 = 0;
      var h$$54;
      var v5587 = (h$$54 = b$$134[g$$56]) != null;
      for (;v5587;) {
        if (h$$54) {
          var v12558;
          var v25870 = h$$54.className;
          if (v25870) {
            var v29235 = " " + h$$54.className + " ";
            var v28564 = JAM.call(v29235.replace, v29235, [/[\t\n\r]/g, " "], JAM.policy.p3);
            v25870 = JAM.call(v28564.indexOf, v28564, [a$$204], JAM.policy.p3) >= 0;
          }
          if (e$$111 ^ v25870) {
            var v18071 = c$$108;
            if (!v18071) {
              v18071 = JAM.call(d$$97.push, d$$97, [h$$54], JAM.policy.p3);
            }
            v12558 = v18071;
          } else {
            var v18072 = c$$108;
            if (v18072) {
              introspect(JAM.policy.p2) {
                v18072 = b$$134[g$$56] = !1;
              }
            }
            v12558 = v18072;
          }
          v12558;
        }
        g$$56++;
        v5587 = (h$$54 = b$$134[g$$56]) != null;
      }
      return!1;
    }
    function v843(a$$203, b$$133) {
      if (typeof b$$133.getElementsByTagName != "undefined") {
        return JAM.call(b$$133.getElementsByTagName, b$$133, [a$$203[1]], JAM.policy.p3);
      }
      return;
    }
    function v842(a$$202, b$$132) {
      if (typeof b$$132.getElementsByName != "undefined") {
        var c$$107 = [];
        var d$$96 = JAM.call(b$$132.getElementsByName, b$$132, [a$$202[1]], JAM.policy.p3);
        var e$$110 = 0;
        var f$$30 = d$$96.length;
        var v5592 = e$$110 < f$$30;
        for (;v5592;) {
          var v18076 = d$$96[e$$110];
          var v5591 = JAM.call(v18076.getAttribute, v18076, ["name"], JAM.policy.p3) === a$$202[1];
          if (v5591) {
            JAM.call(c$$107.push, c$$107, [d$$96[e$$110]], JAM.policy.p3);
          }
          e$$110++;
          v5592 = e$$110 < f$$30;
        }
        var v5593;
        if (c$$107.length === 0) {
          v5593 = null;
        } else {
          v5593 = c$$107;
        }
        return v5593;
      }
      return;
    }
    function v841(a$$201, b$$131, c$$106) {
      var v12566 = typeof b$$131.getElementById != "undefined";
      if (v12566) {
        v12566 = !c$$106;
      }
      if (v12566) {
        var d$$95 = JAM.call(b$$131.getElementById, b$$131, [a$$201[1]], JAM.policy.p3);
        var v5596;
        var v18079 = d$$95;
        if (v18079) {
          v18079 = d$$95.parentNode;
        }
        if (v18079) {
          v5596 = [d$$95];
        } else {
          v5596 = [];
        }
        return v5596;
      }
      return;
    }
    function v840(a$$200, b$$130, c$$105) {
      var d$$94;
      var f$$29 = e$$101;
      e$$101 = e$$101 + 1;
      var g$$55 = x$$69;
      var v18080 = typeof b$$130 == "string";
      if (v18080) {
        v18080 = !JAM.call(l$$37.test, l$$37, [b$$130], JAM.policy.p3);
      }
      var v12568 = v18080;
      if (v12568) {
        b$$130 = JAM.call(b$$130.toLowerCase, b$$130, [], JAM.policy.p3);
        d$$94 = b$$130;
        g$$55 = w$$13;
      }
      JAM.call(g$$55, null, ["previousSibling", b$$130, f$$29, a$$200, d$$94, c$$105], JAM.policy.p3);
      return;
    }
    function v839(a$$199, b$$129, c$$104) {
      var d$$93;
      var f$$28 = e$$101;
      e$$101 = e$$101 + 1;
      var g$$54 = x$$69;
      var v18081 = typeof b$$129 == "string";
      if (v18081) {
        v18081 = !JAM.call(l$$37.test, l$$37, [b$$129], JAM.policy.p3);
      }
      var v12569 = v18081;
      if (v12569) {
        b$$129 = JAM.call(b$$129.toLowerCase, b$$129, [], JAM.policy.p3);
        d$$93 = b$$129;
        g$$54 = w$$13;
      }
      JAM.call(g$$54, null, ["parentNode", b$$129, f$$28, a$$199, d$$93, c$$104], JAM.policy.p3);
      return;
    }
    function v838(a$$198, b$$128) {
      var c$$103;
      var d$$92 = typeof b$$128 == "string";
      var e$$109 = 0;
      var f$$27 = a$$198.length;
      var v12570 = d$$92;
      if (v12570) {
        v12570 = !JAM.call(l$$37.test, l$$37, [b$$128], JAM.policy.p3);
      }
      if (v12570) {
        b$$128 = JAM.call(b$$128.toLowerCase, b$$128, [], JAM.policy.p3);
        var v5600 = e$$109 < f$$27;
        for (;v5600;) {
          c$$103 = a$$198[e$$109];
          if (c$$103) {
            var g$$53 = c$$103.parentNode;
            var v5599;
            var v21873 = g$$53.nodeName;
            if (JAM.call(v21873.toLowerCase, v21873, [], JAM.policy.p3) === b$$128) {
              v5599 = g$$53;
            } else {
              v5599 = !1;
            }
            introspect(JAM.policy.p2) {
              a$$198[e$$109] = v5599;
            }
          }
          e$$109++;
          v5600 = e$$109 < f$$27;
        }
      } else {
        var v5601 = e$$109 < f$$27;
        for (;v5601;) {
          c$$103 = a$$198[e$$109];
          if (c$$103) {
            var v18084;
            if (d$$92) {
              v18084 = c$$103.parentNode;
            } else {
              v18084 = c$$103.parentNode === b$$128;
            }
            introspect(JAM.policy.p2) {
              a$$198[e$$109] = v18084;
            }
          }
          e$$109++;
          v5601 = e$$109 < f$$27;
        }
        if (d$$92) {
          JAM.call(m$$19.filter, m$$19, [b$$128, a$$198, !0], JAM.policy.p3);
        }
      }
      return;
    }
    function v837(a$$197, b$$127) {
      var c$$102 = typeof b$$127 == "string";
      var v5604 = c$$102;
      if (v5604) {
        v5604 = !JAM.call(l$$37.test, l$$37, [b$$127], JAM.policy.p3);
      }
      var d$$91 = v5604;
      var v5605 = c$$102;
      if (v5605) {
        v5605 = !d$$91;
      }
      var e$$108 = v5605;
      if (d$$91) {
        b$$127 = JAM.call(b$$127.toLowerCase, b$$127, [], JAM.policy.p3);
      }
      var f$$26 = 0;
      var g$$52 = a$$197.length;
      var h$$53;
      var v5609 = f$$26 < g$$52;
      for (;v5609;) {
        if (h$$53 = a$$197[f$$26]) {
          var v12574 = h$$53 = h$$53.previousSibling;
          if (v12574) {
            v12574 = h$$53.nodeType !== 1;
          }
          var v5606 = v12574;
          for (;v5606;) {
            var v12575 = h$$53 = h$$53.previousSibling;
            if (v12575) {
              v12575 = h$$53.nodeType !== 1;
            }
            v5606 = v12575;
          }
          var v5607;
          var v18087 = e$$108;
          if (!v18087) {
            var v21875 = h$$53;
            if (v21875) {
              var v27520 = h$$53.nodeName;
              v21875 = JAM.call(v27520.toLowerCase, v27520, [], JAM.policy.p3) === b$$127;
            }
            v18087 = v21875;
          }
          if (v18087) {
            var v12576 = h$$53;
            if (!v12576) {
              v12576 = !1;
            }
            v5607 = v12576;
          } else {
            v5607 = h$$53 === b$$127;
          }
          introspect(JAM.policy.p2) {
            a$$197[f$$26] = v5607;
          }
        }
        f$$26++;
        v5609 = f$$26 < g$$52;
      }
      if (e$$108) {
        JAM.call(m$$19.filter, m$$19, [b$$127, a$$197, !0], JAM.policy.p3);
      }
      return;
    }
    function v836(a$$196) {
      return JAM.call(a$$196.getAttribute, a$$196, ["type"], JAM.policy.p3);
    }
    function v835(a$$195) {
      return JAM.call(a$$195.getAttribute, a$$195, ["href"], JAM.policy.p3);
    }
    function v834(a$$194) {
      var b$$126;
      var c$$101;
      var d$$90 = a$$194.nodeType;
      var e$$107 = "";
      if (d$$90) {
        var v18089 = d$$90 === 1;
        if (!v18089) {
          v18089 = d$$90 === 9;
        }
        var v12579 = v18089;
        if (!v12579) {
          v12579 = d$$90 === 11;
        }
        if (v12579) {
          if (typeof a$$194.textContent == "string") {
            return a$$194.textContent;
          }
          if (typeof a$$194.innerText == "string") {
            var v5611 = a$$194.innerText;
            return JAM.call(v5611.replace, v5611, [k$$22, ""], JAM.policy.p3);
          }
          a$$194 = a$$194.firstChild;
          for (;a$$194;) {
            e$$107 = e$$107 + JAM.call(n$$68, null, [a$$194], JAM.policy.p3);
            a$$194 = a$$194.nextSibling;
          }
        } else {
          var v12583 = d$$90 === 3;
          if (!v12583) {
            v12583 = d$$90 === 4;
          }
          if (v12583) {
            return a$$194.nodeValue;
          }
        }
      } else {
        b$$126 = 0;
        var v5616 = c$$101 = a$$194[b$$126];
        for (;v5616;) {
          var v5615 = c$$101.nodeType !== 8;
          if (v5615) {
            e$$107 = e$$107 + JAM.call(n$$68, null, [c$$101], JAM.policy.p3);
          }
          b$$126++;
          v5616 = c$$101 = a$$194[b$$126];
        }
      }
      return e$$107;
    }
    function v833(a$$193) {
      throw new Error("Syntax error, unrecognized expression: " + a$$193);
    }
    function v832(a$$192, c$$100, d$$89, e$$106) {
      var f$$25;
      var g$$51;
      var h$$52;
      var i$$124;
      var j$$45;
      var k$$26;
      var l$$39;
      var n$$70;
      var p$$32;
      var q$$10 = a$$192;
      var r$$12 = [];
      var s$$23 = c$$100;
      var v12585 = c$$100;
      if (v12585) {
        v12585 = c$$100[0];
      }
      var v5618 = v12585;
      if (v5618) {
        v5618 = JAM.call(m$$19.isXML, m$$19, [c$$100[0]], JAM.policy.p3);
      }
      var t$$7 = v5618;
      var v12587 = a$$192;
      if (v12587) {
        v12587 = c$$100.length;
      }
      var v5632 = v12587;
      for (;v5632;) {
        for (h$$52 in o$$10.filter) {
          var v21878 = o$$10.leftMatch[h$$52];
          var v12588 = (f$$25 = JAM.call(v21878.exec, v21878, [a$$192], JAM.policy.p3)) != null;
          if (v12588) {
            v12588 = f$$25[2];
          }
          if (v12588) {
            k$$26 = o$$10.filter[h$$52];
            l$$39 = f$$25[1];
            g$$51 = !1;
            JAM.call(f$$25.splice, f$$25, [1, 1], JAM.policy.p3);
            if (JAM.call(l$$39.substr, l$$39, [l$$39.length - 1], JAM.policy.p3) === "\\") {
              continue;
            }
            var v5620 = s$$23 === r$$12;
            if (v5620) {
              r$$12 = [];
            }
            if (o$$10.preFilter[h$$52]) {
              var v5621 = o$$10.preFilter;
              f$$25 = JAM.call(v5621[h$$52], v5621, [f$$25, s$$23, d$$89, r$$12, e$$106, t$$7], JAM.policy.p3);
              if (!f$$25) {
                g$$51 = i$$124 = !0;
              } else {
                if (f$$25 === !0) {
                  continue;
                }
              }
            }
            if (f$$25) {
              n$$70 = 0;
              var v5625 = (j$$45 = s$$23[n$$70]) != null;
              for (;v5625;) {
                if (j$$45) {
                  i$$124 = JAM.call(k$$26, null, [j$$45, f$$25, n$$70, s$$23], JAM.policy.p3);
                  p$$32 = e$$106 ^ i$$124;
                  var v18097;
                  var v25873 = d$$89;
                  if (v25873) {
                    v25873 = i$$124 != null;
                  }
                  if (v25873) {
                    var v21881;
                    if (p$$32) {
                      v21881 = g$$51 = !0;
                    } else {
                      v21881 = JAM.set(s$$23, n$$70, !1, JAM.policy.p2);
                    }
                    v18097 = v21881;
                  } else {
                    var v21882 = p$$32;
                    if (v21882) {
                      JAM.call(r$$12.push, r$$12, [j$$45], JAM.policy.p3);
                      v21882 = g$$51 = !0;
                    }
                    v18097 = v21882;
                  }
                  v18097;
                }
                n$$70++;
                v5625 = (j$$45 = s$$23[n$$70]) != null;
              }
            }
            if (i$$124 !== b$$9) {
              if (!d$$89) {
                s$$23 = r$$12;
              }
              a$$192 = JAM.call(a$$192.replace, a$$192, [o$$10.match[h$$52], ""], JAM.policy.p3);
              if (!g$$51) {
                return[];
              }
              break;
            }
          }
        }
        if (a$$192 === q$$10) {
          if (g$$51 == null) {
            JAM.call(m$$19.error, m$$19, [a$$192], JAM.policy.p3);
          } else {
            break;
          }
        }
        q$$10 = a$$192;
        var v12595 = a$$192;
        if (v12595) {
          v12595 = c$$100.length;
        }
        v5632 = v12595;
      }
      return s$$23;
    }
    function v831(a$$191, b$$125, c$$99) {
      var d$$88;
      var e$$105;
      var f$$24;
      var g$$50;
      var h$$51;
      var i$$123;
      if (!a$$191) {
        return[];
      }
      e$$105 = 0;
      f$$24 = o$$10.order.length;
      var v5639 = e$$105 < f$$24;
      for (;v5639;) {
        h$$51 = o$$10.order[e$$105];
        var v12597 = o$$10.leftMatch[h$$51];
        if (g$$50 = JAM.call(v12597.exec, v12597, [a$$191], JAM.policy.p3)) {
          i$$123 = g$$50[1];
          JAM.call(g$$50.splice, g$$50, [1, 1], JAM.policy.p3);
          if (JAM.call(i$$123.substr, i$$123, [i$$123.length - 1], JAM.policy.p3) !== "\\") {
            var v18102 = g$$50[1];
            if (!v18102) {
              v18102 = "";
            }
            var v12599 = v18102;
            var v31131 = JAM.call(v12599.replace, v12599, [j$$41, ""], JAM.policy.p3);
            g$$50[1] = v31131;
            var v12600 = o$$10.find;
            d$$88 = JAM.call(v12600[h$$51], v12600, [g$$50, b$$125, c$$99], JAM.policy.p3);
            if (d$$88 != null) {
              a$$191 = JAM.call(a$$191.replace, a$$191, [o$$10.match[h$$51], ""], JAM.policy.p3);
              break;
            }
          }
        }
        e$$105++;
        v5639 = e$$105 < f$$24;
      }
      if (!d$$88) {
        var v12602;
        if (typeof b$$125.getElementsByTagName != "undefined") {
          v12602 = JAM.call(b$$125.getElementsByTagName, b$$125, ["*"], JAM.policy.p3);
        } else {
          v12602 = [];
        }
        d$$88 = v12602;
      }
      return{set:d$$88, expr:a$$191};
    }
    function v830(a$$190, b$$124) {
      return JAM.call(m$$19, null, [b$$124, null, null, [a$$190]], JAM.policy.p3).length > 0;
    }
    function v829(a$$189, b$$123) {
      return JAM.call(m$$19, null, [a$$189, null, null, b$$123], JAM.policy.p3);
    }
    function v828(a$$188) {
      if (u$$5) {
        h$$47 = i$$119;
        JAM.call(a$$188.sort, a$$188, [u$$5], JAM.policy.p3);
        if (h$$47) {
          var b$$122 = 1;
          var v5642 = b$$122 < a$$188.length;
          for (;v5642;) {
            var v5641 = a$$188[b$$122] === a$$188[b$$122 - 1];
            if (v5641) {
              var v12608 = b$$122;
              b$$122 = b$$122 - 1;
              JAM.call(a$$188.splice, a$$188, [v12608, 1], JAM.policy.p3);
            }
            b$$122++;
            v5642 = b$$122 < a$$188.length;
          }
        }
      }
      return a$$188;
    }
    function v827() {
      i$$119 = !1;
      return 0;
    }
    function y$$51(a$$264, b$$174, c$$130) {
      var d$$112;
      var e$$126 = [];
      var f$$42 = "";
      var v5643;
      if (b$$174.nodeType) {
        v5643 = [b$$174];
      } else {
        v5643 = b$$174;
      }
      var g$$65 = v5643;
      var v12611 = o$$10.match.PSEUDO;
      var v5644 = d$$112 = JAM.call(v12611.exec, v12611, [a$$264], JAM.policy.p3);
      for (;v5644;) {
        f$$42 = f$$42 + d$$112[0];
        a$$264 = JAM.call(a$$264.replace, a$$264, [o$$10.match.PSEUDO, ""], JAM.policy.p3);
        var v12613 = o$$10.match.PSEUDO;
        v5644 = d$$112 = JAM.call(v12613.exec, v12613, [a$$264], JAM.policy.p3);
      }
      var v5645;
      if (o$$10.relative[a$$264]) {
        v5645 = a$$264 + "*";
      } else {
        v5645 = a$$264;
      }
      a$$264 = v5645;
      var h$$58 = 0;
      var i$$129 = g$$65.length;
      var v5647 = h$$58 < i$$129;
      for (;v5647;) {
        JAM.call(m$$19, null, [a$$264, g$$65[h$$58], e$$126, c$$130], JAM.policy.p3);
        h$$58++;
        v5647 = h$$58 < i$$129;
      }
      return JAM.call(m$$19.filter, m$$19, [f$$42, e$$126], JAM.policy.p3);
    }
    function s$$22(a$$245, b$$160) {
      var v5648 = Array.prototype.slice;
      a$$245 = JAM.call(v5648.call, v5648, [a$$245, 0], JAM.policy.p3);
      if (b$$160) {
        var v5649 = b$$160.push;
        JAM.call(v5649.apply, v5649, [b$$160, a$$245], JAM.policy.p3);
        return b$$160;
      }
      return a$$245;
    }
    function q$$8(a$$244, b$$159) {
      return "\\" + (b$$159 - 0 + 1);
    }
    function m$$19(b$$121, d$$87, e$$104, f$$23) {
      e$$104 = e$$104 || [];
      d$$87 = d$$87 || c$$5;
      var h$$50 = d$$87;
      var v12617 = d$$87.nodeType !== 1;
      if (v12617) {
        v12617 = d$$87.nodeType !== 9;
      }
      if (v12617) {
        return[];
      }
      var v12618 = !b$$121;
      if (!v12618) {
        v12618 = typeof b$$121 != "string";
      }
      if (v12618) {
        return e$$104;
      }
      var i$$122;
      var j$$44;
      var k$$25;
      var l$$38;
      var n$$69;
      var q$$9;
      var r$$11;
      var t$$6;
      var u$$6 = !0;
      var v$$7 = JAM.call(m$$19.isXML, m$$19, [d$$87], JAM.policy.p3);
      var w$$14 = [];
      var x$$70 = b$$121;
      do {
        JAM.call(a$$185.exec, a$$185, [""], JAM.policy.p3);
        i$$122 = JAM.call(a$$185.exec, a$$185, [x$$70], JAM.policy.p3);
        if (i$$122) {
          x$$70 = i$$122[3];
          JAM.call(w$$14.push, w$$14, [i$$122[1]], JAM.policy.p3);
          if (i$$122[2]) {
            l$$38 = i$$122[3];
            break;
          }
        }
      } while (i$$122);
      var v12620 = w$$14.length > 1;
      if (v12620) {
        v12620 = JAM.call(p$$31.exec, p$$31, [b$$121], JAM.policy.p3);
      }
      if (v12620) {
        var v12621 = w$$14.length === 2;
        if (v12621) {
          v12621 = o$$10.relative[w$$14[0]];
        }
        if (v12621) {
          j$$44 = y$$51(w$$14[0] + w$$14[1], d$$87, f$$23);
        } else {
          var v5655;
          if (o$$10.relative[w$$14[0]]) {
            v5655 = [d$$87];
          } else {
            v5655 = JAM.call(m$$19, null, [JAM.call(w$$14.shift, w$$14, [], JAM.policy.p3), d$$87], JAM.policy.p3);
          }
          j$$44 = v5655;
          var v5656 = w$$14.length;
          for (;v5656;) {
            b$$121 = JAM.call(w$$14.shift, w$$14, [], JAM.policy.p3);
            var v18121 = o$$10.relative[b$$121];
            if (v18121) {
              b$$121 = b$$121 + JAM.call(w$$14.shift, w$$14, [], JAM.policy.p3);
            }
            j$$44 = y$$51(b$$121, j$$44, f$$23);
            v5656 = w$$14.length;
          }
        }
      } else {
        var v27521 = !f$$23;
        if (v27521) {
          v27521 = w$$14.length > 1;
        }
        var v25876 = v27521;
        if (v25876) {
          v25876 = d$$87.nodeType === 9;
        }
        var v21888 = v25876;
        if (v21888) {
          v21888 = !v$$7;
        }
        var v18122 = v21888;
        if (v18122) {
          var v21889 = o$$10.match.ID;
          v18122 = JAM.call(v21889.test, v21889, [w$$14[0]], JAM.policy.p3);
        }
        var v12626 = v18122;
        if (v12626) {
          var v21891 = o$$10.match.ID;
          v12626 = !JAM.call(v21891.test, v21891, [w$$14[w$$14.length - 1]], JAM.policy.p3);
        }
        var v5658 = v12626;
        if (v5658) {
          n$$69 = JAM.call(m$$19.find, m$$19, [JAM.call(w$$14.shift, w$$14, [], JAM.policy.p3), d$$87, v$$7], JAM.policy.p3);
          var v18125;
          if (n$$69.expr) {
            v18125 = JAM.call(m$$19.filter, m$$19, [n$$69.expr, n$$69.set], JAM.policy.p3)[0];
          } else {
            v18125 = n$$69.set[0];
          }
          d$$87 = v18125;
        }
        if (d$$87) {
          var v18126;
          if (f$$23) {
            v18126 = {expr:JAM.call(w$$14.pop, w$$14, [], JAM.policy.p3), set:JAM.call(s$$22, null, [f$$23], JAM.policy.p3)};
          } else {
            var v21898 = JAM.call(w$$14.pop, w$$14, [], JAM.policy.p3);
            var v25882;
            var v29236 = w$$14.length === 1;
            if (v29236) {
              var v29669 = w$$14[0] === "~";
              if (!v29669) {
                v29669 = w$$14[0] === "+";
              }
              v29236 = v29669;
            }
            var v28566 = v29236;
            if (v28566) {
              v28566 = d$$87.parentNode;
            }
            if (v28566) {
              v25882 = d$$87.parentNode;
            } else {
              v25882 = d$$87;
            }
            v18126 = JAM.call(m$$19.find, m$$19, [v21898, v25882, v$$7], JAM.policy.p3);
          }
          n$$69 = v18126;
          var v18127;
          if (n$$69.expr) {
            v18127 = JAM.call(m$$19.filter, m$$19, [n$$69.expr, n$$69.set], JAM.policy.p3);
          } else {
            v18127 = n$$69.set;
          }
          j$$44 = v18127;
          var v12627;
          if (w$$14.length > 0) {
            v12627 = k$$25 = JAM.call(s$$22, null, [j$$44], JAM.policy.p3);
          } else {
            v12627 = u$$6 = !1;
          }
          v12627;
          var v5659 = w$$14.length;
          for (;v5659;) {
            q$$9 = JAM.call(w$$14.pop, w$$14, [], JAM.policy.p3);
            r$$11 = q$$9;
            var v21904;
            if (o$$10.relative[q$$9]) {
              v21904 = r$$11 = JAM.call(w$$14.pop, w$$14, [], JAM.policy.p3);
            } else {
              v21904 = q$$9 = "";
            }
            v21904;
            var v18129 = r$$11 == null;
            if (v18129) {
              r$$11 = d$$87;
            }
            var v12628 = o$$10.relative;
            JAM.call(v12628[q$$9], v12628, [k$$25, r$$11, v$$7], JAM.policy.p3);
            v5659 = w$$14.length;
          }
        } else {
          k$$25 = w$$14 = [];
        }
      }
      if (!k$$25) {
        k$$25 = j$$44;
      }
      if (!k$$25) {
        JAM.call(m$$19.error, m$$19, [q$$9 || b$$121], JAM.policy.p3);
      }
      if (JAM.call(g$$47.call, g$$47, [k$$25], JAM.policy.p3) === "[object Array]") {
        if (!u$$6) {
          var v5661 = e$$104.push;
          JAM.call(v5661.apply, v5661, [e$$104, k$$25], JAM.policy.p3);
        } else {
          var v12630 = d$$87;
          if (v12630) {
            v12630 = d$$87.nodeType === 1;
          }
          if (v12630) {
            t$$6 = 0;
            var v5663 = k$$25[t$$6] != null;
            for (;v5663;) {
              var v12632 = k$$25[t$$6];
              if (v12632) {
                var v18134 = k$$25[t$$6] === !0;
                if (!v18134) {
                  var v21907 = k$$25[t$$6].nodeType === 1;
                  if (v21907) {
                    v21907 = JAM.call(m$$19.contains, m$$19, [d$$87, k$$25[t$$6]], JAM.policy.p3);
                  }
                  v18134 = v21907;
                }
                v12632 = v18134;
              }
              var v5662 = v12632;
              if (v5662) {
                JAM.call(e$$104.push, e$$104, [j$$44[t$$6]], JAM.policy.p3);
              }
              t$$6++;
              v5663 = k$$25[t$$6] != null;
            }
          } else {
            t$$6 = 0;
            var v5665 = k$$25[t$$6] != null;
            for (;v5665;) {
              var v12636 = k$$25[t$$6];
              if (v12636) {
                v12636 = k$$25[t$$6].nodeType === 1;
              }
              var v5664 = v12636;
              if (v5664) {
                JAM.call(e$$104.push, e$$104, [j$$44[t$$6]], JAM.policy.p3);
              }
              t$$6++;
              v5665 = k$$25[t$$6] != null;
            }
          }
        }
      } else {
        JAM.call(s$$22, null, [k$$25, e$$104], JAM.policy.p3);
      }
      if (l$$38) {
        JAM.call(m$$19, null, [l$$38, h$$50, e$$104, f$$23], JAM.policy.p3);
        JAM.call(m$$19.uniqueSort, m$$19, [e$$104], JAM.policy.p3);
      }
      return e$$104;
    }
    function x$$69(a$$186, b$$119, c$$97, e$$102, f$$21, g$$48) {
      var h$$48 = 0;
      var i$$120 = e$$102.length;
      var v5675 = h$$48 < i$$120;
      for (;v5675;) {
        var j$$42 = e$$102[h$$48];
        if (j$$42) {
          var k$$23 = !1;
          j$$42 = j$$42[a$$186];
          for (;j$$42;) {
            if (j$$42[d$$86] === c$$97) {
              k$$23 = e$$102[j$$42.sizset];
              break;
            }
            if (j$$42.nodeType === 1) {
              if (!g$$48) {
                JAM.set(j$$42, d$$86, c$$97, JAM.policy.p2);
                j$$42.sizset = h$$48;
              }
              if (typeof b$$119 != "string") {
                if (j$$42 === b$$119) {
                  k$$23 = !0;
                  break;
                }
              } else {
                if (JAM.call(m$$19.filter, m$$19, [b$$119, [j$$42]], JAM.policy.p3).length > 0) {
                  k$$23 = j$$42;
                  break;
                }
              }
            }
            j$$42 = j$$42[a$$186];
          }
          introspect(JAM.policy.p2) {
            e$$102[h$$48] = k$$23;
          }
        }
        h$$48++;
        v5675 = h$$48 < i$$120;
      }
      return;
    }
    function w$$13(a$$187, b$$120, c$$98, e$$103, f$$22, g$$49) {
      var h$$49 = 0;
      var i$$121 = e$$103.length;
      var v5680 = h$$49 < i$$121;
      for (;v5680;) {
        var j$$43 = e$$103[h$$49];
        if (j$$43) {
          var k$$24 = !1;
          j$$43 = j$$43[a$$187];
          for (;j$$43;) {
            if (j$$43[d$$86] === c$$98) {
              k$$24 = e$$103[j$$43.sizset];
              break;
            }
            var v12645 = j$$43.nodeType === 1;
            if (v12645) {
              v12645 = !g$$49;
            }
            var v5678 = v12645;
            if (v5678) {
              JAM.set(j$$43, d$$86, c$$98, JAM.policy.p2);
              j$$43.sizset = h$$49;
            }
            var v18138 = j$$43.nodeName;
            if (JAM.call(v18138.toLowerCase, v18138, [], JAM.policy.p3) === b$$120) {
              k$$24 = j$$43;
              break;
            }
            j$$43 = j$$43[a$$187];
          }
          introspect(JAM.policy.p2) {
            e$$103[h$$49] = k$$24;
          }
        }
        h$$49++;
        v5680 = h$$49 < i$$121;
      }
      return;
    }
    var a$$185 = /((?:\((?:\([^()]+\)|[^()]+)+\)|\[(?:\[[^\[\]]*\]|['"][^'"]*['"]|[^\[\]'"]+)+\]|\\.|[^ >+~,(\[\\]+)+|[>+~])(\s*,\s*)?((?:.|\r|\n)*)/g;
    var v12647 = JAM.call(Math.random, Math, [], JAM.policy.p3) + "";
    var d$$86 = "sizcache" + JAM.call(v12647.replace, v12647, [".", ""], JAM.policy.p3);
    var e$$101 = 0;
    var g$$47 = Object.prototype.toString;
    var h$$47 = !1;
    var i$$119 = !0;
    var j$$41 = /\\/g;
    var k$$22 = /\r\n/g;
    var l$$37 = /\W/;
    var v5683 = [0, 0];
    JAM.call(v5683.sort, v5683, [v827], JAM.policy.p3);
    m$$19.uniqueSort = v828;
    m$$19.matches = v829;
    m$$19.matchesSelector = v830;
    m$$19.find = v831;
    m$$19.filter = v832;
    m$$19.error = v833;
    var n$$68 = m$$19.getText = v834;
    var o$$10 = m$$19.selectors = {order:["ID", "NAME", "TAG"], match:{ID:/#((?:[\w\u00c0-\uFFFF\-]|\\.)+)/, CLASS:/\.((?:[\w\u00c0-\uFFFF\-]|\\.)+)/, NAME:/\[name=['"]*((?:[\w\u00c0-\uFFFF\-]|\\.)+)['"]*\]/, ATTR:/\[\s*((?:[\w\u00c0-\uFFFF\-]|\\.)+)\s*(?:(\S?=)\s*(?:(['"])(.*?)\3|(#?(?:[\w\u00c0-\uFFFF\-]|\\.)*)|)|)\s*\]/, TAG:/^((?:[\w\u00c0-\uFFFF\*\-]|\\.)+)/, CHILD:/:(only|nth|last|first)-child(?:\(\s*(even|odd|(?:[+\-]?\d+|(?:[+\-]?\d*)?n\s*(?:[+\-]\s*\d+)?))\s*\))?/, POS:/:(nth|eq|gt|lt|first|last|even|odd)(?:\((\d*)\))?(?=[^\-]|$)/, 
    PSEUDO:/:((?:[\w\u00c0-\uFFFF\-]|\\.)+)(?:\((['"]?)((?:\([^\)]+\)|[^\(\)]*)+)\2\))?/}, leftMatch:{}, attrMap:{"class":"className", "for":"htmlFor"}, attrHandle:{href:v835, type:v836}, relative:{"+":v837, ">":v838, "":v839, "~":v840}, find:{ID:v841, NAME:v842, TAG:v843}, preFilter:{CLASS:v844, ID:v845, TAG:v846, CHILD:v847, ATTR:v848, PSEUDO:v849, POS:v850}, filters:{enabled:v851, disabled:v852, checked:v853, selected:v854, parent:v855, empty:v856, has:v857, header:v858, text:v859, radio:v860, 
    checkbox:v861, file:v862, password:v863, submit:v864, image:v865, reset:v866, button:v867, input:v868, focus:v869}, setFilters:{first:v870, last:v871, even:v872, odd:v873, lt:v874, gt:v875, nth:v876, eq:v877}, filter:{PSEUDO:v878, CHILD:v879, ID:v880, TAG:v881, CLASS:v882, ATTR:v883, POS:v884}};
    var p$$31 = o$$10.match.POS;
    var r$$10;
    for (r$$10 in o$$10.match) {
      var v12648 = o$$10.match;
      var v12649 = r$$10;
      var v31132 = new RegExp(o$$10.match[r$$10].source + /(?![^\[]*\])(?![^\(]*\))/.source);
      JAM.set(v12648, v12649, v31132, JAM.policy.p2);
      var v12650 = o$$10.leftMatch;
      var v12651 = r$$10;
      var v21913 = /(^(?:.|\r|\n)*?)/.source;
      var v25887 = o$$10.match[r$$10].source;
      var v31133 = new RegExp(v21913 + JAM.call(v25887.replace, v25887, [/\\(\d+)/g, q$$8], JAM.policy.p3));
      JAM.set(v12650, v12651, v31133, JAM.policy.p2);
    }
    o$$10.match.globalPOS = p$$31;
    try {
      var v18142 = Array.prototype.slice;
      JAM.call(v18142.call, v18142, [c$$5.documentElement.childNodes, 0], JAM.policy.p3)[0].nodeType;
    } catch (t$$8) {
      s$$22 = v885;
    }
    var u$$5;
    var v$$6;
    var v29237;
    if (c$$5.documentElement.compareDocumentPosition) {
      v29237 = u$$5 = v886;
    } else {
      u$$5 = v887;
      v29237 = v$$6 = v888;
    }
    v29237;
    v891();
    v894();
    var v27529 = c$$5.querySelectorAll;
    if (v27529) {
      v896();
    }
    v898();
    v900();
    var v18144;
    if (c$$5.documentElement.contains) {
      v18144 = m$$19.contains = v901;
    } else {
      var v21917;
      if (c$$5.documentElement.compareDocumentPosition) {
        v21917 = m$$19.contains = v902;
      } else {
        v21917 = m$$19.contains = v903;
      }
      v18144 = v21917;
    }
    v18144;
    m$$19.isXML = v904;
    m$$19.attr = f$$4.attr;
    m$$19.selectors.attrMap = {};
    f$$4.find = m$$19;
    f$$4.expr = m$$19.selectors;
    f$$4.expr[":"] = f$$4.expr.filters;
    f$$4.unique = m$$19.uniqueSort;
    f$$4.text = m$$19.getText;
    f$$4.isXMLDoc = m$$19.isXML;
    f$$4.contains = m$$19.contains;
    return;
  }
  function v826(a$$183, b$$118) {
    function v825(a$$184, c$$96) {
      var v5698 = c$$96 == null;
      if (v5698) {
        c$$96 = a$$184;
        a$$184 = null;
      }
      var v5699;
      if (arguments.length > 0) {
        v5699 = JAM.call(this.on, this, [b$$118, null, a$$184, c$$96], JAM.policy.p3);
      } else {
        v5699 = JAM.call(this.trigger, this, [b$$118], JAM.policy.p3);
      }
      return v5699;
    }
    JAM.set(f$$4.fn, b$$118, v825, JAM.policy.p2);
    var v21920 = f$$4.attrFn;
    if (v21920) {
      JAM.set(f$$4.attrFn, b$$118, !0, JAM.policy.p2);
    }
    var v18146 = JAM.call(C.test, C, [b$$118], JAM.policy.p3);
    if (v18146) {
      JAM.set(f$$4.event.fixHooks, b$$118, f$$4.event.keyHooks, JAM.policy.p2);
    }
    var v12654 = JAM.call(D.test, D, [b$$118], JAM.policy.p3);
    if (v12654) {
      JAM.set(f$$4.event.fixHooks, b$$118, f$$4.event.mouseHooks, JAM.policy.p2);
    }
    return;
  }
  function v824(a$$182, b$$117) {
    var v5700 = JAM.call(this.mouseenter, this, [a$$182], JAM.policy.p3);
    return JAM.call(v5700.mouseleave, v5700, [b$$117 || a$$182], JAM.policy.p3);
  }
  function v823(a$$181) {
    function e$$99(c$$95) {
      var v12655 = JAM.call(f$$4._data, f$$4, [this, "lastToggle" + a$$181.guid], JAM.policy.p3);
      if (!v12655) {
        v12655 = 0;
      }
      var e$$100 = v12655 % d$$85;
      JAM.call(f$$4._data, f$$4, [this, "lastToggle" + a$$181.guid, e$$100 + 1], JAM.policy.p3);
      JAM.call(c$$95.preventDefault, c$$95, [], JAM.policy.p3);
      var v12658 = b$$116[e$$100];
      var v5703 = JAM.call(v12658.apply, v12658, [this, arguments], JAM.policy.p3);
      if (!v5703) {
        v5703 = !1;
      }
      return v5703;
    }
    var b$$116 = arguments;
    var v5704 = a$$181.guid;
    if (!v5704) {
      v5704 = f$$4.guid;
      f$$4.guid = f$$4.guid + 1;
    }
    var c$$94 = v5704;
    var d$$85 = 0;
    e$$99.guid = c$$94;
    var v5706 = d$$85 < b$$116.length;
    for (;v5706;) {
      var v12662 = d$$85;
      d$$85 = d$$85 + 1;
      b$$116[v12662].guid = c$$94;
      v5706 = d$$85 < b$$116.length;
    }
    return JAM.call(this.click, this, [e$$99], JAM.policy.p3);
  }
  function v822(a$$180, b$$115) {
    if (this[0]) {
      var v5707 = f$$4.event;
      return JAM.call(v5707.trigger, v5707, [a$$180, b$$115, this[0], !0], JAM.policy.p3);
    }
    return;
  }
  function v821(a$$179, b$$114) {
    function v820() {
      var v5711 = f$$4.event;
      JAM.call(v5711.trigger, v5711, [a$$179, b$$114, this], JAM.policy.p3);
      return;
    }
    return JAM.call(this.each, this, [v820], JAM.policy.p3);
  }
  function v819(a$$178, b$$113, c$$93) {
    var v5712;
    if (arguments.length == 1) {
      v5712 = JAM.call(this.off, this, [a$$178, "**"], JAM.policy.p3);
    } else {
      v5712 = JAM.call(this.off, this, [b$$113, a$$178, c$$93], JAM.policy.p3);
    }
    return v5712;
  }
  function v818(a$$177, b$$112, c$$92, d$$84) {
    return JAM.call(this.on, this, [b$$112, a$$177, c$$92, d$$84], JAM.policy.p3);
  }
  function v817(a$$176, b$$111) {
    var v5713 = JAM.call(f$$4, null, [this.context], JAM.policy.p3);
    var v12666 = this.selector;
    if (!v12666) {
      v12666 = "**";
    }
    JAM.call(v5713.off, v5713, [a$$176, v12666, b$$111], JAM.policy.p3);
    return this;
  }
  function v816(a$$175, b$$110, c$$91) {
    var v5715 = JAM.call(f$$4, null, [this.context], JAM.policy.p3);
    JAM.call(v5715.on, v5715, [a$$175, this.selector, b$$110, c$$91], JAM.policy.p3);
    return this;
  }
  function v815(a$$174, b$$109) {
    return JAM.call(this.off, this, [a$$174, null, b$$109], JAM.policy.p3);
  }
  function v814(a$$173, b$$108, c$$90) {
    return JAM.call(this.on, this, [a$$173, null, b$$108, c$$90], JAM.policy.p3);
  }
  function v813(a$$172, c$$89, d$$83) {
    function v812() {
      var v5717 = f$$4.event;
      JAM.call(v5717.remove, v5717, [this, a$$172, d$$83, c$$89], JAM.policy.p3);
      return;
    }
    var v18154 = a$$172;
    if (v18154) {
      v18154 = a$$172.preventDefault;
    }
    var v12668 = v18154;
    if (v12668) {
      v12668 = a$$172.handleObj;
    }
    if (v12668) {
      var e$$98 = a$$172.handleObj;
      var v5718 = JAM.call(f$$4, null, [a$$172.delegateTarget], JAM.policy.p3);
      var v12670;
      if (e$$98.namespace) {
        v12670 = e$$98.origType + "." + e$$98.namespace;
      } else {
        v12670 = e$$98.origType;
      }
      JAM.call(v5718.off, v5718, [v12670, e$$98.selector, e$$98.handler], JAM.policy.p3);
      return this;
    }
    if (typeof a$$172 == "object") {
      var g$$46;
      for (g$$46 in a$$172) {
        JAM.call(this.off, this, [g$$46, c$$89, a$$172[g$$46]], JAM.policy.p3);
      }
      return this;
    }
    var v12672 = c$$89 === !1;
    if (!v12672) {
      v12672 = typeof c$$89 == "function";
    }
    if (v12672) {
      d$$83 = c$$89;
      c$$89 = b$$9;
    }
    var v5726 = d$$83 === !1;
    if (v5726) {
      d$$83 = J;
    }
    return JAM.call(this.each, this, [v812], JAM.policy.p3);
  }
  function v811(a$$171, b$$107, c$$88, d$$82) {
    return JAM.call(this.on, this, [a$$171, b$$107, c$$88, d$$82, 1], JAM.policy.p3);
  }
  function v810(a$$169, c$$87, d$$81, e$$97, g$$45) {
    function v809() {
      var v5727 = f$$4.event;
      JAM.call(v5727.add, v5727, [this, a$$169, e$$97, d$$81, c$$87], JAM.policy.p3);
      return;
    }
    function v808(a$$170) {
      var v5728 = JAM.call(f$$4, null, [], JAM.policy.p3);
      JAM.call(v5728.off, v5728, [a$$170], JAM.policy.p3);
      return JAM.call(h$$46.apply, h$$46, [this, arguments], JAM.policy.p3);
    }
    var h$$46;
    var i$$118;
    if (typeof a$$169 == "object") {
      var v5729 = typeof c$$87 != "string";
      if (v5729) {
        d$$81 = d$$81 || c$$87;
        c$$87 = b$$9;
      }
      for (i$$118 in a$$169) {
        JAM.call(this.on, this, [i$$118, c$$87, d$$81, a$$169[i$$118], g$$45], JAM.policy.p3);
      }
      return this;
    }
    var v5732;
    var v18161 = d$$81 == null;
    if (v18161) {
      v18161 = e$$97 == null;
    }
    if (v18161) {
      e$$97 = c$$87;
      v5732 = d$$81 = c$$87 = b$$9;
    } else {
      var v12676 = e$$97 == null;
      if (v12676) {
        var v18162;
        if (typeof c$$87 == "string") {
          e$$97 = d$$81;
          v18162 = d$$81 = b$$9;
        } else {
          e$$97 = d$$81;
          d$$81 = c$$87;
          v18162 = c$$87 = b$$9;
        }
        v12676 = v18162;
      }
      v5732 = v12676;
    }
    v5732;
    if (e$$97 === !1) {
      e$$97 = J;
    } else {
      if (!e$$97) {
        return this;
      }
    }
    var v5735 = g$$45 === 1;
    if (v5735) {
      h$$46 = e$$97;
      e$$97 = v808;
      var v18163 = h$$46.guid;
      if (!v18163) {
        v18163 = h$$46.guid = f$$4.guid;
        f$$4.guid = f$$4.guid + 1;
      }
      e$$97.guid = v18163;
    }
    return JAM.call(this.each, this, [v809], JAM.policy.p3);
  }
  function v807(a$$167, b$$106) {
    function v806() {
      var v5736 = (d$$80 = d$$80 - 1) === 0;
      if (v5736) {
        JAM.call(c$$5.removeEventListener, c$$5, [a$$167, e$$96, !0], JAM.policy.p3);
      }
      return;
    }
    function v805() {
      var v12681 = d$$80;
      d$$80 = d$$80 + 1;
      var v5737 = v12681 === 0;
      if (v5737) {
        JAM.call(c$$5.addEventListener, c$$5, [a$$167, e$$96, !0], JAM.policy.p3);
      }
      return;
    }
    function e$$96(a$$168) {
      var v5738 = f$$4.event;
      var v5739 = a$$168.target;
      var v12683 = f$$4.event;
      JAM.call(v5738.simulate, v5738, [b$$106, v5739, JAM.call(v12683.fix, v12683, [a$$168], JAM.policy.p3), !0], JAM.policy.p3);
      return;
    }
    var d$$80 = 0;
    JAM.set(f$$4.event.special, b$$106, {setup:v805, teardown:v806}, JAM.policy.p2);
    return;
  }
  function v804() {
    var v5743 = f$$4.event;
    JAM.call(v5743.remove, v5743, [this, "._change"], JAM.policy.p3);
    return JAM.call(z$$2.test, z$$2, [this.nodeName], JAM.policy.p3);
  }
  function v803(a$$166) {
    var b$$105 = a$$166.target;
    var v21928 = this !== b$$105;
    if (!v21928) {
      v21928 = a$$166.isSimulated;
    }
    var v18164 = v21928;
    if (!v18164) {
      v18164 = a$$166.isTrigger;
    }
    var v12685 = v18164;
    if (!v12685) {
      var v18165 = b$$105.type !== "radio";
      if (v18165) {
        v18165 = b$$105.type !== "checkbox";
      }
      v12685 = v18165;
    }
    if (v12685) {
      var v5745 = a$$166.handleObj.handler;
      return JAM.call(v5745.apply, v5745, [this, arguments], JAM.policy.p3);
    }
    return;
  }
  function v802() {
    function v801(a$$164) {
      function v800(a$$165) {
        var v18167 = this.parentNode;
        if (v18167) {
          v18167 = !a$$165.isSimulated;
        }
        var v12687 = v18167;
        if (v12687) {
          v12687 = !a$$165.isTrigger;
        }
        var v5747 = v12687;
        if (v5747) {
          var v12688 = f$$4.event;
          JAM.call(v12688.simulate, v12688, ["change", this.parentNode, a$$165, !0], JAM.policy.p3);
        }
        return;
      }
      var b$$104 = a$$164.target;
      var v12691 = JAM.call(z$$2.test, z$$2, [b$$104.nodeName], JAM.policy.p3);
      if (v12691) {
        v12691 = !b$$104._change_attached;
      }
      var v5748 = v12691;
      if (v5748) {
        var v18171 = f$$4.event;
        JAM.call(v18171.add, v18171, [b$$104, "change._change", v800], JAM.policy.p3);
        b$$104._change_attached = !0;
      }
      return;
    }
    function v799(a$$163) {
      var v12692 = this._just_changed;
      if (v12692) {
        v12692 = !a$$163.isTrigger;
      }
      var v5749 = v12692;
      if (v5749) {
        this._just_changed = !1;
        var v18173 = f$$4.event;
        JAM.call(v18173.simulate, v18173, ["change", this, a$$163, !0], JAM.policy.p3);
      }
      return;
    }
    function v798(a$$162) {
      var v5750 = a$$162.originalEvent.propertyName === "checked";
      if (v5750) {
        this._just_changed = !0;
      }
      return;
    }
    if (JAM.call(z$$2.test, z$$2, [this.nodeName], JAM.policy.p3)) {
      var v12695 = this.type === "checkbox";
      if (!v12695) {
        v12695 = this.type === "radio";
      }
      if (v12695) {
        var v12696 = f$$4.event;
        JAM.call(v12696.add, v12696, [this, "propertychange._change", v798], JAM.policy.p3);
        var v12697 = f$$4.event;
        JAM.call(v12697.add, v12697, [this, "click._change", v799], JAM.policy.p3);
      }
      return!1;
    }
    var v5753 = f$$4.event;
    JAM.call(v5753.add, v5753, [this, "beforeactivate._change", v801], JAM.policy.p3);
    return;
  }
  function v797() {
    if (JAM.call(f$$4.nodeName, f$$4, [this, "form"], JAM.policy.p3)) {
      return!1;
    }
    var v5755 = f$$4.event;
    JAM.call(v5755.remove, v5755, [this, "._submit"], JAM.policy.p3);
    return;
  }
  function v796(a$$161) {
    var v5756 = a$$161._submit_bubble;
    if (v5756) {
      delete a$$161._submit_bubble;
      var v21933 = this.parentNode;
      if (v21933) {
        v21933 = !a$$161.isTrigger;
      }
      var v18179 = v21933;
      if (v18179) {
        var v21934 = f$$4.event;
        JAM.call(v21934.simulate, v21934, ["submit", this.parentNode, a$$161, !0], JAM.policy.p3);
      }
    }
    return;
  }
  function v795() {
    function v794(a$$159) {
      function v793(a$$160) {
        a$$160._submit_bubble = !0;
        return;
      }
      var c$$86 = a$$159.target;
      var v5757;
      var v18180 = JAM.call(f$$4.nodeName, f$$4, [c$$86, "input"], JAM.policy.p3);
      if (!v18180) {
        v18180 = JAM.call(f$$4.nodeName, f$$4, [c$$86, "button"], JAM.policy.p3);
      }
      if (v18180) {
        v5757 = c$$86.form;
      } else {
        v5757 = b$$9;
      }
      var d$$79 = v5757;
      var v12699 = d$$79;
      if (v12699) {
        v12699 = !d$$79._submit_attached;
      }
      var v5758 = v12699;
      if (v5758) {
        var v18182 = f$$4.event;
        JAM.call(v18182.add, v18182, [d$$79, "submit._submit", v793], JAM.policy.p3);
        d$$79._submit_attached = !0;
      }
      return;
    }
    if (JAM.call(f$$4.nodeName, f$$4, [this, "form"], JAM.policy.p3)) {
      return!1;
    }
    var v5760 = f$$4.event;
    JAM.call(v5760.add, v5760, [this, "click._submit keypress._submit", v794], JAM.policy.p3);
    return;
  }
  function v792(a$$157, b$$103) {
    function v791(a$$158) {
      var c$$85 = this;
      var d$$78 = a$$158.relatedTarget;
      var e$$95 = a$$158.handleObj;
      var g$$44 = e$$95.selector;
      var h$$45;
      var v12700 = !d$$78;
      if (!v12700) {
        var v18183 = d$$78 !== c$$85;
        if (v18183) {
          v18183 = !JAM.call(f$$4.contains, f$$4, [c$$85, d$$78], JAM.policy.p3);
        }
        v12700 = v18183;
      }
      if (v12700) {
        a$$158.type = e$$95.origType;
        var v18185 = e$$95.handler;
        h$$45 = JAM.call(v18185.apply, v18185, [this, arguments], JAM.policy.p3);
        a$$158.type = b$$103;
      }
      return h$$45;
    }
    JAM.set(f$$4.event.special, a$$157, {delegateType:b$$103, bindType:b$$103, handle:v791}, JAM.policy.p2);
    return;
  }
  function v790() {
    this.isImmediatePropagationStopped = K;
    JAM.call(this.stopPropagation, this, [], JAM.policy.p3);
    return;
  }
  function v789() {
    this.isPropagationStopped = K;
    var a$$156 = this.originalEvent;
    var v5763 = !a$$156;
    if (!v5763) {
      var v18186 = a$$156.stopPropagation;
      if (v18186) {
        JAM.call(a$$156.stopPropagation, a$$156, [], JAM.policy.p3);
      }
      a$$156.cancelBubble = !0;
    }
    return;
  }
  function v788() {
    this.isDefaultPrevented = K;
    var a$$155 = this.originalEvent;
    var v5764 = !a$$155;
    if (!v5764) {
      var v12703;
      if (a$$155.preventDefault) {
        v12703 = JAM.call(a$$155.preventDefault, a$$155, [], JAM.policy.p3);
      } else {
        v12703 = a$$155.returnValue = !1;
      }
      v12703;
    }
    return;
  }
  function v787(a$$154, b$$102) {
    if (!(this instanceof f$$4.Event)) {
      return JAM.new(f$$4.Event, [a$$154, b$$102]);
    }
    var v21939;
    var v27532 = a$$154;
    if (v27532) {
      v27532 = a$$154.type;
    }
    if (v27532) {
      this.originalEvent = a$$154;
      this.type = a$$154.type;
      var v27533;
      var v29672 = a$$154.defaultPrevented;
      if (!v29672) {
        v29672 = a$$154.returnValue === !1;
      }
      var v29238 = v29672;
      if (!v29238) {
        var v29673 = a$$154.getPreventDefault;
        if (v29673) {
          v29673 = JAM.call(a$$154.getPreventDefault, a$$154, [], JAM.policy.p3);
        }
        v29238 = v29673;
      }
      if (v29238) {
        v27533 = K;
      } else {
        v27533 = J;
      }
      v21939 = this.isDefaultPrevented = v27533;
    } else {
      v21939 = this.type = a$$154;
    }
    v21939;
    if (b$$102) {
      JAM.call(f$$4.extend, f$$4, [this, b$$102], JAM.policy.p3);
    }
    var v21940 = a$$154;
    if (v21940) {
      v21940 = a$$154.timeStamp;
    }
    var v18189 = v21940;
    if (!v18189) {
      v18189 = JAM.call(f$$4.now, f$$4, [], JAM.policy.p3);
    }
    this.timeStamp = v18189;
    JAM.set(this, f$$4.expando, !0, JAM.policy.p2);
    return;
  }
  function v786(a$$153, b$$101, c$$84) {
    var v5767 = a$$153.detachEvent;
    if (v5767) {
      JAM.call(a$$153.detachEvent, a$$153, ["on" + b$$101, c$$84], JAM.policy.p3);
    }
    return;
  }
  function v785(a$$152, b$$100, c$$83) {
    var v5768 = a$$152.removeEventListener;
    if (v5768) {
      JAM.call(a$$152.removeEventListener, a$$152, [b$$100, c$$83, !1], JAM.policy.p3);
    }
    return;
  }
  function v784(a$$151, b$$99, c$$82, d$$77) {
    var e$$94 = JAM.call(f$$4.extend, f$$4, [new f$$4.Event, c$$82, {type:a$$151, isSimulated:!0, originalEvent:{}}], JAM.policy.p3);
    var v12711;
    if (d$$77) {
      var v18190 = f$$4.event;
      v12711 = JAM.call(v18190.trigger, v18190, [e$$94, null, b$$99], JAM.policy.p3);
    } else {
      var v18191 = f$$4.event.dispatch;
      v12711 = JAM.call(v18191.call, v18191, [b$$99, e$$94], JAM.policy.p3);
    }
    v12711;
    var v12712 = JAM.call(e$$94.isDefaultPrevented, e$$94, [], JAM.policy.p3);
    if (v12712) {
      JAM.call(c$$82.preventDefault, c$$82, [], JAM.policy.p3);
    }
    return;
  }
  function v783(a$$150, b$$98) {
    var v5771 = this.onbeforeunload === b$$98;
    if (v5771) {
      JAM.set(this, "onbeforeunload", null);
    }
    return;
  }
  function v782(a$$149, b$$97, c$$81) {
    var v5772 = JAM.call(f$$4.isWindow, f$$4, [this], JAM.policy.p3);
    if (v5772) {
      JAM.set(this, "onbeforeunload", c$$81);
    }
    return;
  }
  function v781(a$$148) {
    if (a$$148[f$$4.expando]) {
      return a$$148;
    }
    var d$$76;
    var e$$93;
    var g$$43 = a$$148;
    var v5774 = f$$4.event.fixHooks[a$$148.type];
    if (!v5774) {
      v5774 = {};
    }
    var h$$44 = v5774;
    var v5775;
    if (h$$44.props) {
      var v12718 = this.props;
      v5775 = JAM.call(v12718.concat, v12718, [h$$44.props], JAM.policy.p3);
    } else {
      v5775 = this.props;
    }
    var i$$117 = v5775;
    a$$148 = JAM.call(f$$4.Event, f$$4, [g$$43], JAM.policy.p3);
    d$$76 = i$$117.length;
    for (;d$$76;) {
      e$$93 = i$$117[d$$76 = d$$76 - 1];
      JAM.set(a$$148, e$$93, g$$43[e$$93], JAM.policy.p2);
    }
    var v18193 = a$$148.target;
    if (!v18193) {
      var v21943 = g$$43.srcElement;
      if (!v21943) {
        v21943 = c$$5;
      }
      a$$148.target = v21943;
    }
    var v18194 = a$$148.target.nodeType === 3;
    if (v18194) {
      a$$148.target = a$$148.target.parentNode;
    }
    var v12722 = a$$148.metaKey === b$$9;
    if (v12722) {
      a$$148.metaKey = a$$148.ctrlKey;
    }
    var v5776;
    if (h$$44.filter) {
      v5776 = JAM.call(h$$44.filter, h$$44, [a$$148, g$$43], JAM.policy.p3);
    } else {
      v5776 = a$$148;
    }
    return v5776;
  }
  function v780(a$$147, d$$75) {
    var e$$92;
    var f$$20;
    var g$$42;
    var h$$43 = d$$75.button;
    var i$$116 = d$$75.fromElement;
    var v21947 = a$$147.pageX == null;
    if (v21947) {
      v21947 = d$$75.clientX != null;
    }
    var v18196 = v21947;
    if (v18196) {
      var v29239 = a$$147.target.ownerDocument;
      if (!v29239) {
        v29239 = c$$5;
      }
      e$$92 = v29239;
      f$$20 = e$$92.documentElement;
      g$$42 = e$$92.body;
      var v28570 = d$$75.clientX;
      var v29958 = f$$20;
      if (v29958) {
        v29958 = f$$20.scrollLeft;
      }
      var v29677 = v29958;
      if (!v29677) {
        var v29959 = g$$42;
        if (v29959) {
          v29959 = g$$42.scrollLeft;
        }
        v29677 = v29959;
      }
      var v29240 = v29677;
      if (!v29240) {
        v29240 = 0;
      }
      var v27534 = v28570 + v29240;
      var v29679 = f$$20;
      if (v29679) {
        v29679 = f$$20.clientLeft;
      }
      var v29241 = v29679;
      if (!v29241) {
        var v29680 = g$$42;
        if (v29680) {
          v29680 = g$$42.clientLeft;
        }
        v29241 = v29680;
      }
      var v28572 = v29241;
      if (!v28572) {
        v28572 = 0;
      }
      a$$147.pageX = v27534 - v28572;
      var v27536 = d$$75.clientY;
      var v29682 = f$$20;
      if (v29682) {
        v29682 = f$$20.scrollTop;
      }
      var v29243 = v29682;
      if (!v29243) {
        var v29683 = g$$42;
        if (v29683) {
          v29683 = g$$42.scrollTop;
        }
        v29243 = v29683;
      }
      var v28573 = v29243;
      if (!v28573) {
        v28573 = 0;
      }
      var v25902 = v27536 + v28573;
      var v29245 = f$$20;
      if (v29245) {
        v29245 = f$$20.clientTop;
      }
      var v28574 = v29245;
      if (!v28574) {
        var v29246 = g$$42;
        if (v29246) {
          v29246 = g$$42.clientTop;
        }
        v28574 = v29246;
      }
      var v27538 = v28574;
      if (!v27538) {
        v27538 = 0;
      }
      a$$147.pageY = v25902 - v27538;
    }
    var v21948 = !a$$147.relatedTarget;
    if (v21948) {
      v21948 = i$$116;
    }
    var v18197 = v21948;
    if (v18197) {
      var v21949;
      if (i$$116 === a$$147.target) {
        v21949 = d$$75.toElement;
      } else {
        v21949 = i$$116;
      }
      a$$147.relatedTarget = v21949;
    }
    var v18198 = !a$$147.which;
    if (v18198) {
      v18198 = h$$43 !== b$$9;
    }
    var v12724 = v18198;
    if (v12724) {
      var v18199;
      if (h$$43 & 1) {
        v18199 = 1;
      } else {
        var v21951;
        if (h$$43 & 2) {
          v21951 = 3;
        } else {
          var v25906;
          if (h$$43 & 4) {
            v25906 = 2;
          } else {
            v25906 = 0;
          }
          v21951 = v25906;
        }
        v18199 = v21951;
      }
      a$$147.which = v18199;
    }
    return a$$147;
  }
  function v779(a$$146, b$$96) {
    var v5777 = a$$146.which == null;
    if (v5777) {
      var v12726;
      if (b$$96.charCode != null) {
        v12726 = b$$96.charCode;
      } else {
        v12726 = b$$96.keyCode;
      }
      a$$146.which = v12726;
    }
    return a$$146;
  }
  function v778(c$$80) {
    var v5778 = f$$4.event;
    var v12727 = c$$80;
    if (!v12727) {
      v12727 = a$$13.event;
    }
    c$$80 = JAM.call(v5778.fix, v5778, [v12727], JAM.policy.p3);
    var v18202 = JAM.call(f$$4._data, f$$4, [this, "events"], JAM.policy.p3);
    if (!v18202) {
      v18202 = {};
    }
    var v5780 = v18202[c$$80.type];
    if (!v5780) {
      v5780 = [];
    }
    var d$$74 = v5780;
    var e$$91 = d$$74.delegateCount;
    var v5781 = [].slice;
    var g$$41 = JAM.call(v5781.call, v5781, [arguments, 0], JAM.policy.p3);
    var v5782 = !c$$80.exclusive;
    if (v5782) {
      v5782 = !c$$80.namespace;
    }
    var h$$42 = v5782;
    var v5783 = f$$4.event.special[c$$80.type];
    if (!v5783) {
      v5783 = {};
    }
    var i$$115 = v5783;
    var j$$40 = [];
    var k$$21;
    var l$$36;
    var m$$18;
    var n$$67;
    var o$$9;
    var p$$30;
    var q$$7;
    var r$$9;
    var s$$21;
    var t$$5;
    var u$$4;
    g$$41[0] = c$$80;
    c$$80.delegateTarget = this;
    var v12736 = !i$$115.preDispatch;
    if (!v12736) {
      var v21955 = i$$115.preDispatch;
      v12736 = JAM.call(v21955.call, v21955, [this, c$$80], JAM.policy.p3) !== !1;
    }
    if (v12736) {
      var v12737 = e$$91;
      if (v12737) {
        var v18208 = !c$$80.button;
        if (!v18208) {
          v18208 = c$$80.type !== "click";
        }
        v12737 = v18208;
      }
      if (v12737) {
        n$$67 = JAM.call(f$$4, null, [this], JAM.policy.p3);
        var v12738 = this.ownerDocument;
        if (!v12738) {
          v12738 = this;
        }
        n$$67.context = v12738;
        m$$18 = c$$80.target;
        var v5791 = m$$18 != this;
        for (;v5791;) {
          if (m$$18.disabled !== !0) {
            p$$30 = {};
            r$$9 = [];
            n$$67[0] = m$$18;
            k$$21 = 0;
            var v5788 = k$$21 < e$$91;
            for (;v5788;) {
              s$$21 = d$$74[k$$21];
              var JSCompiler_temp_const$$0 = t$$5 = s$$21.selector;
              var JSCompiler_temp$$1;
              if (JSCompiler_temp$$1 = p$$30[t$$5] === b$$9) {
                var JSCompiler_temp_const$$3 = p$$30;
                var JSCompiler_temp_const$$2 = t$$5;
                var JSCompiler_temp$$4;
                if (s$$21.quick) {
                  var b$$inline_26 = s$$21.quick;
                  var v5784 = m$$18.attributes;
                  if (!v5784) {
                    v5784 = {};
                  }
                  var c$$inline_27 = v5784;
                  var v18210 = !b$$inline_26[1];
                  if (!v18210) {
                    var v25908 = m$$18.nodeName;
                    v18210 = JAM.call(v25908.toLowerCase, v25908, [], JAM.policy.p3) === b$$inline_26[1];
                  }
                  var v12743 = v18210;
                  if (v12743) {
                    var v18211 = !b$$inline_26[2];
                    if (!v18211) {
                      var v27541 = c$$inline_27.id;
                      if (!v27541) {
                        v27541 = {};
                      }
                      v18211 = v27541.value === b$$inline_26[2];
                    }
                    v12743 = v18211;
                  }
                  var v5785 = v12743;
                  if (v5785) {
                    var v12744 = !b$$inline_26[3];
                    if (!v12744) {
                      var v18213 = b$$inline_26[3];
                      var v25910 = c$$inline_27["class"];
                      if (!v25910) {
                        v25910 = {};
                      }
                      v12744 = JAM.call(v18213.test, v18213, [v25910.value], JAM.policy.p3);
                    }
                    v5785 = v12744;
                  }
                  JSCompiler_temp$$4 = v5785;
                } else {
                  JSCompiler_temp$$4 = JAM.call(n$$67.is, n$$67, [t$$5], JAM.policy.p3);
                }
                JSCompiler_temp$$1 = JAM.set(JSCompiler_temp_const$$3, JSCompiler_temp_const$$2, JSCompiler_temp$$4, JAM.policy.p2);
              }
              JSCompiler_temp_const$$0;
              JSCompiler_temp$$1;
              var v12745 = p$$30[t$$5];
              if (v12745) {
                JAM.call(r$$9.push, r$$9, [s$$21], JAM.policy.p3);
              }
              k$$21++;
              v5788 = k$$21 < e$$91;
            }
            var v5789 = r$$9.length;
            if (v5789) {
              JAM.call(j$$40.push, j$$40, [{elem:m$$18, matches:r$$9}], JAM.policy.p3);
            }
          }
          var v12747 = m$$18.parentNode;
          if (!v12747) {
            v12747 = this;
          }
          m$$18 = v12747;
          v5791 = m$$18 != this;
        }
      }
      var v5793 = d$$74.length > e$$91;
      if (v5793) {
        JAM.call(j$$40.push, j$$40, [{elem:this, matches:JAM.call(d$$74.slice, d$$74, [e$$91], JAM.policy.p3)}], JAM.policy.p3);
      }
      k$$21 = 0;
      var v12750 = k$$21 < j$$40.length;
      if (v12750) {
        v12750 = !JAM.call(c$$80.isPropagationStopped, c$$80, [], JAM.policy.p3);
      }
      var v5797 = v12750;
      for (;v5797;) {
        q$$7 = j$$40[k$$21];
        c$$80.currentTarget = q$$7.elem;
        l$$36 = 0;
        var v12751 = l$$36 < q$$7.matches.length;
        if (v12751) {
          v12751 = !JAM.call(c$$80.isImmediatePropagationStopped, c$$80, [], JAM.policy.p3);
        }
        var v5796 = v12751;
        for (;v5796;) {
          s$$21 = q$$7.matches[l$$36];
          var v18222 = h$$42;
          if (!v18222) {
            var v21969 = !c$$80.namespace;
            if (v21969) {
              v21969 = !s$$21.namespace;
            }
            v18222 = v21969;
          }
          var v12752 = v18222;
          if (!v12752) {
            var v18223 = c$$80.namespace_re;
            if (v18223) {
              var v21971 = c$$80.namespace_re;
              v18223 = JAM.call(v21971.test, v21971, [s$$21.namespace], JAM.policy.p3);
            }
            v12752 = v18223;
          }
          if (v12752) {
            c$$80.data = s$$21.data;
            c$$80.handleObj = s$$21;
            var v27543 = f$$4.event.special[s$$21.origType];
            if (!v27543) {
              v27543 = {};
            }
            var v21973 = v27543.handle;
            if (!v21973) {
              v21973 = s$$21.handler;
            }
            var v18225 = v21973;
            o$$9 = JAM.call(v18225.apply, v18225, [q$$7.elem, g$$41], JAM.policy.p3);
            var v12753 = o$$9 !== b$$9;
            if (v12753) {
              c$$80.result = o$$9;
              var v21974 = o$$9 === !1;
              if (v21974) {
                JAM.call(c$$80.preventDefault, c$$80, [], JAM.policy.p3);
                JAM.call(c$$80.stopPropagation, c$$80, [], JAM.policy.p3);
              }
            }
          }
          l$$36++;
          var v12754 = l$$36 < q$$7.matches.length;
          if (v12754) {
            v12754 = !JAM.call(c$$80.isImmediatePropagationStopped, c$$80, [], JAM.policy.p3);
          }
          v5796 = v12754;
        }
        k$$21++;
        var v12755 = k$$21 < j$$40.length;
        if (v12755) {
          v12755 = !JAM.call(c$$80.isPropagationStopped, c$$80, [], JAM.policy.p3);
        }
        v5797 = v12755;
      }
      var v5798 = i$$115.postDispatch;
      if (v5798) {
        var v12756 = i$$115.postDispatch;
        JAM.call(v12756.call, v12756, [this, c$$80], JAM.policy.p3);
      }
      return c$$80.result;
    }
    return;
  }
  function v777(c$$79, d$$73, e$$90, g$$40) {
    var v12757 = !e$$90;
    if (!v12757) {
      var v18231 = e$$90.nodeType !== 3;
      if (v18231) {
        v18231 = e$$90.nodeType !== 8;
      }
      v12757 = v18231;
    }
    if (v12757) {
      var v5800 = c$$79.type;
      if (!v5800) {
        v5800 = c$$79;
      }
      var h$$41 = v5800;
      var i$$114 = [];
      var j$$39;
      var k$$20;
      var l$$35;
      var m$$17;
      var n$$66;
      var o$$8;
      var p$$29;
      var q$$6;
      var r$$8;
      var s$$20;
      if (JAM.call(E.test, E, [h$$41 + f$$4.event.triggered], JAM.policy.p3)) {
        return;
      }
      var v12760 = JAM.call(h$$41.indexOf, h$$41, ["!"], JAM.policy.p3) >= 0;
      if (v12760) {
        h$$41 = JAM.call(h$$41.slice, h$$41, [0, -1], JAM.policy.p3);
        k$$20 = !0;
      }
      var v12761 = JAM.call(h$$41.indexOf, h$$41, ["."], JAM.policy.p3) >= 0;
      if (v12761) {
        i$$114 = JAM.call(h$$41.split, h$$41, ["."], JAM.policy.p3);
        h$$41 = JAM.call(i$$114.shift, i$$114, [], JAM.policy.p3);
        JAM.call(i$$114.sort, i$$114, [], JAM.policy.p3);
      }
      var v18236 = !e$$90;
      if (!v18236) {
        v18236 = f$$4.event.customEvent[h$$41];
      }
      var v12762 = v18236;
      if (v12762) {
        v12762 = !f$$4.event.global[h$$41];
      }
      if (v12762) {
        return;
      }
      var v28580;
      if (typeof c$$79 == "object") {
        var v29249;
        if (c$$79[f$$4.expando]) {
          v29249 = c$$79;
        } else {
          v29249 = JAM.new(f$$4.Event, [h$$41, c$$79]);
        }
        v28580 = v29249;
      } else {
        v28580 = JAM.new(f$$4.Event, [h$$41]);
      }
      c$$79 = v28580;
      c$$79.type = h$$41;
      c$$79.isTrigger = !0;
      c$$79.exclusive = k$$20;
      var v31134 = JAM.call(i$$114.join, i$$114, ["."], JAM.policy.p3);
      c$$79.namespace = v31134;
      var v18238;
      if (c$$79.namespace) {
        v18238 = new RegExp("(^|\\.)" + JAM.call(i$$114.join, i$$114, ["\\.(?:.*\\.)?"], JAM.policy.p3) + "(\\.|$)");
      } else {
        v18238 = null;
      }
      c$$79.namespace_re = v18238;
      var v12763;
      if (JAM.call(h$$41.indexOf, h$$41, [":"], JAM.policy.p3) < 0) {
        v12763 = "on" + h$$41;
      } else {
        v12763 = "";
      }
      o$$8 = v12763;
      if (!e$$90) {
        j$$39 = f$$4.cache;
        for (l$$35 in j$$39) {
          var v12764 = j$$39[l$$35].events;
          if (v12764) {
            v12764 = j$$39[l$$35].events[h$$41];
          }
          var v5803 = v12764;
          if (v5803) {
            var v12765 = f$$4.event;
            JAM.call(v12765.trigger, v12765, [c$$79, d$$73, j$$39[l$$35].handle.elem, !0], JAM.policy.p3);
          }
        }
        return;
      }
      c$$79.result = b$$9;
      var v25919 = c$$79.target;
      if (!v25919) {
        c$$79.target = e$$90;
      }
      var v21987;
      if (d$$73 != null) {
        v21987 = JAM.call(f$$4.makeArray, f$$4, [d$$73], JAM.policy.p3);
      } else {
        v21987 = [];
      }
      d$$73 = v21987;
      JAM.call(d$$73.unshift, d$$73, [c$$79], JAM.policy.p3);
      var v12768 = f$$4.event.special[h$$41];
      if (!v12768) {
        v12768 = {};
      }
      p$$29 = v12768;
      var v12769 = p$$29.trigger;
      if (v12769) {
        var v21989 = p$$29.trigger;
        v12769 = JAM.call(v21989.apply, v21989, [e$$90, d$$73], JAM.policy.p3) === !1;
      }
      if (v12769) {
        return;
      }
      var v18247 = p$$29.bindType;
      if (!v18247) {
        v18247 = h$$41;
      }
      r$$8 = [[e$$90, v18247]];
      var v18248 = !g$$40;
      if (v18248) {
        v18248 = !p$$29.noBubble;
      }
      var v12771 = v18248;
      if (v12771) {
        v12771 = !JAM.call(f$$4.isWindow, f$$4, [e$$90], JAM.policy.p3);
      }
      if (v12771) {
        var v18250 = p$$29.delegateType;
        if (!v18250) {
          v18250 = h$$41;
        }
        s$$20 = v18250;
        var v18251;
        if (JAM.call(E.test, E, [s$$20 + h$$41], JAM.policy.p3)) {
          v18251 = e$$90;
        } else {
          v18251 = e$$90.parentNode;
        }
        m$$17 = v18251;
        n$$66 = null;
        for (;m$$17;) {
          JAM.call(r$$8.push, r$$8, [[m$$17, s$$20]], JAM.policy.p3);
          n$$66 = m$$17;
          m$$17 = m$$17.parentNode;
        }
        var v12773 = n$$66;
        if (v12773) {
          v12773 = n$$66 === e$$90.ownerDocument;
        }
        var v5807 = v12773;
        if (v5807) {
          var v25922 = n$$66.defaultView;
          if (!v25922) {
            v25922 = n$$66.parentWindow;
          }
          var v21994 = v25922;
          if (!v21994) {
            v21994 = a$$13;
          }
          JAM.call(r$$8.push, r$$8, [[v21994, s$$20]], JAM.policy.p3);
        }
      }
      l$$35 = 0;
      var v12775 = l$$35 < r$$8.length;
      if (v12775) {
        v12775 = !JAM.call(c$$79.isPropagationStopped, c$$79, [], JAM.policy.p3);
      }
      var v5809 = v12775;
      for (;v5809;) {
        m$$17 = r$$8[l$$35][0];
        c$$79.type = r$$8[l$$35][1];
        var v28581 = JAM.call(f$$4._data, f$$4, [m$$17, "events"], JAM.policy.p3);
        if (!v28581) {
          v28581 = {};
        }
        var v25924 = v28581[c$$79.type];
        if (v25924) {
          v25924 = JAM.call(f$$4._data, f$$4, [m$$17, "handle"], JAM.policy.p3);
        }
        q$$6 = v25924;
        if (q$$6) {
          JAM.call(q$$6.apply, q$$6, [m$$17, d$$73], JAM.policy.p3);
        }
        var v18256 = o$$8;
        if (v18256) {
          v18256 = m$$17[o$$8];
        }
        q$$6 = v18256;
        var v21995 = q$$6;
        if (v21995) {
          v21995 = JAM.call(f$$4.acceptData, f$$4, [m$$17], JAM.policy.p3);
        }
        var v18257 = v21995;
        if (v18257) {
          v18257 = JAM.call(q$$6.apply, q$$6, [m$$17, d$$73], JAM.policy.p3) === !1;
        }
        var v12776 = v18257;
        if (v12776) {
          JAM.call(c$$79.preventDefault, c$$79, [], JAM.policy.p3);
        }
        l$$35++;
        var v12777 = l$$35 < r$$8.length;
        if (v12777) {
          v12777 = !JAM.call(c$$79.isPropagationStopped, c$$79, [], JAM.policy.p3);
        }
        v5809 = v12777;
      }
      c$$79.type = h$$41;
      var v29962 = !g$$40;
      if (v29962) {
        v29962 = !JAM.call(c$$79.isDefaultPrevented, c$$79, [], JAM.policy.p3);
      }
      var v29688 = v29962;
      if (v29688) {
        var v29963 = !p$$29._default;
        if (!v29963) {
          var v30373 = p$$29._default;
          v29963 = JAM.call(v30373.apply, v30373, [e$$90.ownerDocument, d$$73], JAM.policy.p3) === !1;
        }
        v29688 = v29963;
      }
      var v29253 = v29688;
      if (v29253) {
        var v29689 = h$$41 !== "click";
        if (!v29689) {
          v29689 = !JAM.call(f$$4.nodeName, f$$4, [e$$90, "a"], JAM.policy.p3);
        }
        v29253 = v29689;
      }
      var v28582 = v29253;
      if (v28582) {
        v28582 = JAM.call(f$$4.acceptData, f$$4, [e$$90], JAM.policy.p3);
      }
      var v27551 = v28582;
      if (v27551) {
        v27551 = o$$8;
      }
      var v25925 = v27551;
      if (v25925) {
        v25925 = e$$90[h$$41];
      }
      var v21998 = v25925;
      if (v21998) {
        var v27552 = h$$41 !== "focus";
        if (v27552) {
          v27552 = h$$41 !== "blur";
        }
        var v25926 = v27552;
        if (!v25926) {
          v25926 = c$$79.target.offsetWidth !== 0;
        }
        v21998 = v25926;
      }
      var v18260 = v21998;
      if (v18260) {
        v18260 = !JAM.call(f$$4.isWindow, f$$4, [e$$90], JAM.policy.p3);
      }
      var v12778 = v18260;
      if (v12778) {
        n$$66 = e$$90[o$$8];
        if (n$$66) {
          JAM.set(e$$90, o$$8, null, JAM.policy.p2);
        }
        f$$4.event.triggered = h$$41;
        JAM.call(e$$90[h$$41], e$$90, [], JAM.policy.p3);
        f$$4.event.triggered = b$$9;
        if (n$$66) {
          JAM.set(e$$90, o$$8, n$$66, JAM.policy.p2);
        }
      }
      return c$$79.result;
    }
    return;
  }
  function v776(a$$145, b$$95, c$$78, d$$72, e$$89) {
    var v5811 = JAM.call(f$$4.hasData, f$$4, [a$$145], JAM.policy.p3);
    if (v5811) {
      v5811 = JAM.call(f$$4._data, f$$4, [a$$145], JAM.policy.p3);
    }
    var g$$39 = v5811;
    var h$$40;
    var i$$113;
    var j$$38;
    var k$$19;
    var l$$34;
    var m$$16;
    var n$$65;
    var o$$7;
    var p$$28;
    var q$$5;
    var r$$7;
    var s$$19;
    var v12779 = !!g$$39;
    if (v12779) {
      v12779 = !!(o$$7 = g$$39.events);
    }
    if (v12779) {
      var v5812 = JAM.call(f$$4.trim, f$$4, [I(b$$95 || "")], JAM.policy.p3);
      b$$95 = JAM.call(v5812.split, v5812, [" "], JAM.policy.p3);
      h$$40 = 0;
      var v5819 = h$$40 < b$$95.length;
      for (;v5819;) {
        var v18264 = JAM.call(A.exec, A, [b$$95[h$$40]], JAM.policy.p3);
        if (!v18264) {
          v18264 = [];
        }
        i$$113 = v18264;
        j$$38 = k$$19 = i$$113[1];
        l$$34 = i$$113[2];
        if (!j$$38) {
          for (j$$38 in o$$7) {
            var v5813 = f$$4.event;
            JAM.call(v5813.remove, v5813, [a$$145, j$$38 + b$$95[h$$40], c$$78, d$$72, !0], JAM.policy.p3);
          }
          h$$40++;
          v5819 = h$$40 < b$$95.length;
          continue;
        }
        var v25928 = f$$4.event.special[j$$38];
        if (!v25928) {
          v25928 = {};
        }
        p$$28 = v25928;
        var v27557;
        if (d$$72) {
          v27557 = p$$28.delegateType;
        } else {
          v27557 = p$$28.bindType;
        }
        var v25929 = v27557;
        if (!v25929) {
          v25929 = j$$38;
        }
        j$$38 = v25929;
        var v22003 = o$$7[j$$38];
        if (!v22003) {
          v22003 = [];
        }
        r$$7 = v22003;
        m$$16 = r$$7.length;
        var v12784;
        if (l$$34) {
          var v28586 = JAM.call(l$$34.split, l$$34, ["."], JAM.policy.p3);
          var v27559 = JAM.call(v28586.sort, v28586, [], JAM.policy.p3);
          v12784 = new RegExp("(^|\\.)" + JAM.call(v27559.join, v27559, ["\\.(?:.*\\.)?"], JAM.policy.p3) + "(\\.|$)");
        } else {
          v12784 = null;
        }
        l$$34 = v12784;
        n$$65 = 0;
        var v5817 = n$$65 < r$$7.length;
        for (;v5817;) {
          s$$19 = r$$7[n$$65];
          var v27560 = e$$89;
          if (!v27560) {
            v27560 = k$$19 === s$$19.origType;
          }
          var v25932 = v27560;
          if (v25932) {
            var v27561 = !c$$78;
            if (!v27561) {
              v27561 = c$$78.guid === s$$19.guid;
            }
            v25932 = v27561;
          }
          var v22005 = v25932;
          if (v22005) {
            var v25933 = !l$$34;
            if (!v25933) {
              v25933 = JAM.call(l$$34.test, l$$34, [s$$19.namespace], JAM.policy.p3);
            }
            v22005 = v25933;
          }
          var v18266 = v22005;
          if (v18266) {
            var v25934 = !d$$72;
            if (!v25934) {
              v25934 = d$$72 === s$$19.selector;
            }
            var v22006 = v25934;
            if (!v22006) {
              var v25935 = d$$72 === "**";
              if (v25935) {
                v25935 = s$$19.selector;
              }
              v22006 = v25935;
            }
            v18266 = v22006;
          }
          var v12786 = v18266;
          if (v12786) {
            var v25937 = n$$65;
            n$$65 = n$$65 - 1;
            JAM.call(r$$7.splice, r$$7, [v25937, 1], JAM.policy.p3);
            var v25938 = s$$19.selector;
            if (v25938) {
              r$$7.delegateCount--;
            }
            var v22007 = p$$28.remove;
            if (v22007) {
              var v25939 = p$$28.remove;
              JAM.call(v25939.call, v25939, [a$$145, s$$19], JAM.policy.p3);
            }
          }
          n$$65++;
          v5817 = n$$65 < r$$7.length;
        }
        var v12788 = r$$7.length === 0;
        if (v12788) {
          v12788 = m$$16 !== r$$7.length;
        }
        var v5818 = v12788;
        if (v5818) {
          var v22008 = !p$$28.teardown;
          if (!v22008) {
            var v27566 = p$$28.teardown;
            v22008 = JAM.call(v27566.call, v27566, [a$$145, l$$34], JAM.policy.p3) === !1;
          }
          var v18269 = v22008;
          if (v18269) {
            JAM.call(f$$4.removeEvent, f$$4, [a$$145, j$$38, g$$39.handle], JAM.policy.p3);
          }
          delete o$$7[j$$38];
        }
        h$$40++;
        v5819 = h$$40 < b$$95.length;
      }
      var v5820 = JAM.call(f$$4.isEmptyObject, f$$4, [o$$7], JAM.policy.p3);
      if (v5820) {
        q$$5 = g$$39.handle;
        if (q$$5) {
          q$$5.elem = null;
        }
        JAM.call(f$$4.removeData, f$$4, [a$$145, ["events", "handle"], !0], JAM.policy.p3);
      }
    }
    return;
  }
  function v775(a$$143, c$$77, d$$71, e$$88, g$$38) {
    function v774(a$$144) {
      var v5822;
      var v18272 = typeof f$$4 != "undefined";
      if (v18272) {
        var v22011 = !a$$144;
        if (!v22011) {
          v22011 = f$$4.event.triggered !== a$$144.type;
        }
        v18272 = v22011;
      }
      if (v18272) {
        var v12790 = f$$4.event.dispatch;
        v5822 = JAM.call(v12790.apply, v12790, [i$$112.elem, arguments], JAM.policy.p3);
      } else {
        v5822 = b$$9;
      }
      return v5822;
    }
    var h$$39;
    var i$$112;
    var j$$37;
    var k$$18;
    var l$$33;
    var m$$15;
    var n$$64;
    var o$$6;
    var p$$27;
    var q$$4;
    var r$$6;
    var s$$18;
    var v27568 = a$$143.nodeType === 3;
    if (!v27568) {
      v27568 = a$$143.nodeType === 8;
    }
    var v25947 = v27568;
    if (!v25947) {
      v25947 = !c$$77;
    }
    var v22012 = v25947;
    if (!v22012) {
      v22012 = !d$$71;
    }
    var v18274 = v22012;
    if (!v18274) {
      v18274 = !(h$$39 = JAM.call(f$$4._data, f$$4, [a$$143], JAM.policy.p3));
    }
    if (!v18274) {
      var v28595 = d$$71.handler;
      if (v28595) {
        p$$27 = d$$71;
        d$$71 = p$$27.handler;
        g$$38 = p$$27.selector;
      }
      var v28596 = d$$71.guid;
      if (!v28596) {
        d$$71.guid = f$$4.guid;
        f$$4.guid = f$$4.guid + 1;
      }
      j$$37 = h$$39.events;
      if (!j$$37) {
        h$$39.events = j$$37 = {};
      }
      i$$112 = h$$39.handle;
      if (!i$$112) {
        h$$39.handle = i$$112 = v774;
        i$$112.elem = a$$143;
      }
      var v12794 = JAM.call(f$$4.trim, f$$4, [I(c$$77)], JAM.policy.p3);
      c$$77 = JAM.call(v12794.split, v12794, [" "], JAM.policy.p3);
      k$$18 = 0;
      var v5826 = k$$18 < c$$77.length;
      for (;v5826;) {
        var v29255 = JAM.call(A.exec, A, [c$$77[k$$18]], JAM.policy.p3);
        if (!v29255) {
          v29255 = [];
        }
        l$$33 = v29255;
        m$$15 = l$$33[1];
        var v29693 = l$$33[2];
        if (!v29693) {
          v29693 = "";
        }
        var v29256 = v29693;
        var v28597 = JAM.call(v29256.split, v29256, ["."], JAM.policy.p3);
        n$$64 = JAM.call(v28597.sort, v28597, [], JAM.policy.p3);
        var v27571 = f$$4.event.special[m$$15];
        if (!v27571) {
          v27571 = {};
        }
        s$$18 = v27571;
        var v27572;
        if (g$$38) {
          v27572 = s$$18.delegateType;
        } else {
          v27572 = s$$18.bindType;
        }
        var v25949 = v27572;
        if (!v25949) {
          v25949 = m$$15;
        }
        m$$15 = v25949;
        var v22016 = f$$4.event.special[m$$15];
        if (!v22016) {
          v22016 = {};
        }
        s$$18 = v22016;
        var v22017 = l$$33[1];
        var v22018 = d$$71.guid;
        var v25952 = g$$38;
        if (v25952) {
          v25952 = G(g$$38);
        }
        o$$6 = JAM.call(f$$4.extend, f$$4, [{type:m$$15, origType:v22017, data:e$$88, handler:d$$71, guid:v22018, selector:g$$38, quick:v25952, namespace:JAM.call(n$$64.join, n$$64, ["."], JAM.policy.p3)}, p$$27], JAM.policy.p3);
        r$$6 = j$$37[m$$15];
        if (!r$$6) {
          r$$6 = JAM.set(j$$37, m$$15, [], JAM.policy.p2);
          r$$6.delegateCount = 0;
          var v12796 = !s$$18.setup;
          if (!v12796) {
            var v22021 = s$$18.setup;
            v12796 = JAM.call(v22021.call, v22021, [a$$143, e$$88, n$$64, i$$112], JAM.policy.p3) === !1;
          }
          if (v12796) {
            var v5823;
            if (a$$143.addEventListener) {
              v5823 = JAM.call(a$$143.addEventListener, a$$143, [m$$15, i$$112, !1], JAM.policy.p3);
            } else {
              var v12798 = a$$143.attachEvent;
              if (v12798) {
                v12798 = JAM.call(a$$143.attachEvent, a$$143, ["on" + m$$15, i$$112], JAM.policy.p3);
              }
              v5823 = v12798;
            }
            v5823;
          }
        }
        var v18282 = s$$18.add;
        if (v18282) {
          var v25953 = s$$18.add;
          JAM.call(v25953.call, v25953, [a$$143, o$$6], JAM.policy.p3);
          var v25954 = o$$6.handler.guid;
          if (!v25954) {
            o$$6.handler.guid = d$$71.guid;
          }
        }
        var v18283;
        if (g$$38) {
          var v22022 = r$$6.delegateCount;
          r$$6.delegateCount = r$$6.delegateCount + 1;
          v18283 = JAM.call(r$$6.splice, r$$6, [v22022, 0, o$$6], JAM.policy.p3);
        } else {
          v18283 = JAM.call(r$$6.push, r$$6, [o$$6], JAM.policy.p3);
        }
        v18283;
        JAM.set(f$$4.event.global, m$$15, !0, JAM.policy.p2);
        k$$18++;
        v5826 = k$$18 < c$$77.length;
      }
      a$$143 = null;
    }
    return;
  }
  function v773() {
    function v772(a$$139, b$$92) {
      if (JAM.call(f$$4.isArray, f$$4, [b$$92], JAM.policy.p3)) {
        var v18285 = JAM.call(f$$4, null, [a$$139], JAM.policy.p3);
        return a$$139.checked = JAM.call(f$$4.inArray, f$$4, [JAM.call(v18285.val, v18285, [], JAM.policy.p3), b$$92], JAM.policy.p3) >= 0;
      }
      return;
    }
    var v5830 = f$$4.valHooks;
    var v31135 = JAM.call(f$$4.extend, f$$4, [f$$4.valHooks[this], {set:v772}], JAM.policy.p3);
    JAM.set(v5830, this, v31135, JAM.policy.p2);
    return;
  }
  function v771() {
    function v770(a$$138) {
      var v5831;
      if (JAM.call(a$$138.getAttribute, a$$138, ["value"], JAM.policy.p3) === null) {
        v5831 = "on";
      } else {
        v5831 = a$$138.value;
      }
      return v5831;
    }
    JAM.set(f$$4.valHooks, this, {get:v770}, JAM.policy.p2);
    return;
  }
  function v769(a$$137) {
    var b$$91 = a$$137.parentNode;
    return null;
  }
  function v768(a$$136, b$$90) {
    return a$$136.style.cssText = "" + b$$90;
  }
  function v767(a$$135) {
    var v12806 = a$$135.style.cssText;
    var v5834 = JAM.call(v12806.toLowerCase, v12806, [], JAM.policy.p3);
    if (!v5834) {
      v5834 = b$$9;
    }
    return v5834;
  }
  function v766(a$$133, c$$75) {
    function v765(a$$134) {
      var d$$70 = JAM.call(a$$134.getAttribute, a$$134, [c$$75, 2], JAM.policy.p3);
      var v5835;
      if (d$$70 === null) {
        v5835 = b$$9;
      } else {
        v5835 = d$$70;
      }
      return v5835;
    }
    var v5836 = f$$4.attrHooks;
    var v5837 = c$$75;
    var v31136 = JAM.call(f$$4.extend, f$$4, [f$$4.attrHooks[c$$75], {get:v765}], JAM.policy.p3);
    JAM.set(v5836, v5837, v31136, JAM.policy.p2);
    return;
  }
  function v764(a$$132, b$$89, c$$74) {
    var v12811 = b$$89 === "";
    if (v12811) {
      b$$89 = "false";
    }
    JAM.call(w$$11.set, w$$11, [a$$132, b$$89, c$$74], JAM.policy.p3);
    return;
  }
  function v763(a$$130, b$$88) {
    function v762(a$$131, c$$73) {
      if (c$$73 === "") {
        JAM.call(a$$131.setAttribute, a$$131, [b$$88, "auto"], JAM.policy.p3);
        return c$$73;
      }
      return;
    }
    var v5839 = f$$4.attrHooks;
    var v5840 = b$$88;
    var v31137 = JAM.call(f$$4.extend, f$$4, [f$$4.attrHooks[b$$88], {set:v762}], JAM.policy.p3);
    JAM.set(v5839, v5840, v31137, JAM.policy.p2);
    return;
  }
  function v761(a$$129, b$$87, d$$69) {
    var e$$87 = JAM.call(a$$129.getAttributeNode, a$$129, [d$$69], JAM.policy.p3);
    if (!e$$87) {
      e$$87 = JAM.call(c$$5.createAttribute, c$$5, [d$$69], JAM.policy.p3);
      JAM.call(a$$129.setAttributeNode, a$$129, [e$$87], JAM.policy.p3);
    }
    return e$$87.nodeValue = b$$87 + "";
  }
  function v760(a$$128, c$$72) {
    var d$$68;
    d$$68 = JAM.call(a$$128.getAttributeNode, a$$128, [c$$72], JAM.policy.p3);
    var v5841;
    var v18291 = d$$68;
    if (v18291) {
      var v22023;
      if (y$$49[c$$72]) {
        v22023 = d$$68.nodeValue !== "";
      } else {
        v22023 = d$$68.specified;
      }
      v18291 = v22023;
    }
    if (v18291) {
      v5841 = d$$68.nodeValue;
    } else {
      v5841 = b$$9;
    }
    return v5841;
  }
  function v759(a$$127, b$$86, c$$71) {
    var d$$67;
    var v5842;
    if (b$$86 === !1) {
      v5842 = JAM.call(f$$4.removeAttr, f$$4, [a$$127, c$$71], JAM.policy.p3);
    } else {
      var v22024 = f$$4.propFix[c$$71];
      if (!v22024) {
        v22024 = c$$71;
      }
      d$$67 = v22024;
      var v22025 = d$$67 in a$$127;
      if (v22025) {
        JAM.set(a$$127, d$$67, !0, JAM.policy.p2);
      }
      v5842 = JAM.call(a$$127.setAttribute, a$$127, [c$$71, JAM.call(c$$71.toLowerCase, c$$71, [], JAM.policy.p3)], JAM.policy.p3);
    }
    v5842;
    return c$$71;
  }
  function v758(a$$126, c$$70) {
    var d$$66;
    var e$$86 = JAM.call(f$$4.prop, f$$4, [a$$126, c$$70], JAM.policy.p3);
    var v5843;
    var v18294 = e$$86 === !0;
    if (!v18294) {
      var v25959 = typeof e$$86 != "boolean";
      if (v25959) {
        v25959 = d$$66 = JAM.call(a$$126.getAttributeNode, a$$126, [c$$70], JAM.policy.p3);
      }
      var v22027 = v25959;
      if (v22027) {
        v22027 = d$$66.nodeValue !== !1;
      }
      v18294 = v22027;
    }
    if (v18294) {
      v5843 = JAM.call(c$$70.toLowerCase, c$$70, [], JAM.policy.p3);
    } else {
      v5843 = b$$9;
    }
    return v5843;
  }
  function v757(a$$125) {
    var c$$69 = JAM.call(a$$125.getAttributeNode, a$$125, ["tabindex"], JAM.policy.p3);
    var v5844;
    var v18295 = c$$69;
    if (v18295) {
      v18295 = c$$69.specified;
    }
    if (v18295) {
      v5844 = parseInt(c$$69.value, 10);
    } else {
      var v12819;
      var v22029 = JAM.call(s$$15.test, s$$15, [a$$125.nodeName], JAM.policy.p3);
      if (!v22029) {
        var v25963 = JAM.call(t$$2.test, t$$2, [a$$125.nodeName], JAM.policy.p3);
        if (v25963) {
          v25963 = a$$125.href;
        }
        v22029 = v25963;
      }
      if (v22029) {
        v12819 = 0;
      } else {
        v12819 = b$$9;
      }
      v5844 = v12819;
    }
    return v5844;
  }
  function v756(a$$124, c$$68, d$$65) {
    var e$$85;
    var g$$37;
    var h$$38;
    var i$$111 = a$$124.nodeType;
    var v22030 = !!a$$124;
    if (v22030) {
      v22030 = i$$111 !== 3;
    }
    var v18297 = v22030;
    if (v18297) {
      v18297 = i$$111 !== 8;
    }
    var v12821 = v18297;
    if (v12821) {
      v12821 = i$$111 !== 2;
    }
    if (v12821) {
      var v12822 = i$$111 !== 1;
      if (!v12822) {
        v12822 = !JAM.call(f$$4.isXMLDoc, f$$4, [a$$124], JAM.policy.p3);
      }
      h$$38 = v12822;
      if (h$$38) {
        var v22031 = f$$4.propFix[c$$68];
        if (!v22031) {
          v22031 = c$$68;
        }
        c$$68 = v22031;
        g$$37 = f$$4.propHooks[c$$68];
      }
      var v5845;
      if (d$$65 !== b$$9) {
        var v12823;
        var v25968 = g$$37;
        if (v25968) {
          v25968 = "set" in g$$37;
        }
        var v22033 = v25968;
        if (v22033) {
          v22033 = (e$$85 = JAM.call(g$$37.set, g$$37, [a$$124, d$$65, c$$68], JAM.policy.p3)) !== b$$9;
        }
        if (v22033) {
          v12823 = e$$85;
        } else {
          v12823 = JAM.set(a$$124, c$$68, d$$65, JAM.policy.p2);
        }
        v5845 = v12823;
      } else {
        var v12824;
        var v25970 = g$$37;
        if (v25970) {
          v25970 = "get" in g$$37;
        }
        var v22034 = v25970;
        if (v22034) {
          v22034 = (e$$85 = JAM.call(g$$37.get, g$$37, [a$$124, c$$68], JAM.policy.p3)) !== null;
        }
        if (v22034) {
          v12824 = e$$85;
        } else {
          v12824 = a$$124[c$$68];
        }
        v5845 = v12824;
      }
      return v5845;
    }
    return;
  }
  function v755(a$$123, b$$85, c$$67) {
    var v12826 = w$$11;
    if (v12826) {
      v12826 = JAM.call(f$$4.nodeName, f$$4, [a$$123, "button"], JAM.policy.p3);
    }
    if (v12826) {
      return JAM.call(w$$11.set, w$$11, [a$$123, b$$85, c$$67], JAM.policy.p3);
    }
    a$$123.value = b$$85;
    return;
  }
  function v754(a$$122, b$$84) {
    var v12827 = w$$11;
    if (v12827) {
      v12827 = JAM.call(f$$4.nodeName, f$$4, [a$$122, "button"], JAM.policy.p3);
    }
    if (v12827) {
      return JAM.call(w$$11.get, w$$11, [a$$122, b$$84], JAM.policy.p3);
    }
    var v5849;
    if (b$$84 in a$$122) {
      v5849 = a$$122.value;
    } else {
      v5849 = null;
    }
    return v5849;
  }
  function v753(a$$121, b$$83) {
    var v12829 = JAM.call(r$$2.test, r$$2, [a$$121.nodeName], JAM.policy.p3);
    if (v12829) {
      v12829 = a$$121.parentNode;
    }
    if (v12829) {
      JAM.call(f$$4.error, f$$4, ["type property can't be changed"], JAM.policy.p3);
    } else {
      var v18303 = !f$$4.support.radioValue;
      if (v18303) {
        v18303 = b$$83 === "radio";
      }
      var v12830 = v18303;
      if (v12830) {
        v12830 = JAM.call(f$$4.nodeName, f$$4, [a$$121, "input"], JAM.policy.p3);
      }
      if (v12830) {
        var c$$66 = a$$121.value;
        JAM.call(a$$121.setAttribute, a$$121, ["type", b$$83], JAM.policy.p3);
        if (c$$66) {
          a$$121.value = c$$66;
        }
        return b$$83;
      }
    }
    return;
  }
  function v752(a$$120, b$$82) {
    var c$$65;
    var d$$64;
    var e$$84;
    var g$$36;
    var h$$37;
    var i$$110 = 0;
    var v12831 = b$$82;
    if (v12831) {
      v12831 = a$$120.nodeType === 1;
    }
    if (v12831) {
      var v12832 = JAM.call(b$$82.toLowerCase, b$$82, [], JAM.policy.p3);
      d$$64 = JAM.call(v12832.split, v12832, [p$$22], JAM.policy.p3);
      g$$36 = d$$64.length;
      var v5852 = i$$110 < g$$36;
      for (;v5852;) {
        e$$84 = d$$64[i$$110];
        if (e$$84) {
          var v28600 = f$$4.propFix[e$$84];
          if (!v28600) {
            v28600 = e$$84;
          }
          c$$65 = v28600;
          h$$37 = JAM.call(u$$1.test, u$$1, [e$$84], JAM.policy.p3);
          if (!h$$37) {
            JAM.call(f$$4.attr, f$$4, [a$$120, e$$84, ""], JAM.policy.p3);
          }
          var v27581;
          if (v$$4) {
            v27581 = e$$84;
          } else {
            v27581 = c$$65;
          }
          JAM.call(a$$120.removeAttribute, a$$120, [v27581], JAM.policy.p3);
          var v25974 = h$$37;
          if (v25974) {
            v25974 = c$$65 in a$$120;
          }
          var v22036 = v25974;
          if (v22036) {
            JAM.set(a$$120, c$$65, !1, JAM.policy.p2);
          }
        }
        i$$110++;
        v5852 = i$$110 < g$$36;
      }
    }
    return;
  }
  function v751(a$$119, c$$64, d$$63, e$$83) {
    var g$$35;
    var h$$36;
    var i$$109;
    var j$$36 = a$$119.nodeType;
    var v22037 = !!a$$119;
    if (v22037) {
      v22037 = j$$36 !== 3;
    }
    var v18305 = v22037;
    if (v18305) {
      v18305 = j$$36 !== 8;
    }
    var v12833 = v18305;
    if (v12833) {
      v12833 = j$$36 !== 2;
    }
    if (v12833) {
      var v12834 = e$$83;
      if (v12834) {
        v12834 = c$$64 in f$$4.attrFn;
      }
      if (v12834) {
        var v5854 = JAM.call(f$$4, null, [a$$119], JAM.policy.p3);
        return JAM.call(v5854[c$$64], v5854, [d$$63], JAM.policy.p3);
      }
      if (typeof a$$119.getAttribute == "undefined") {
        return JAM.call(f$$4.prop, f$$4, [a$$119, c$$64, d$$63], JAM.policy.p3);
      }
      var v12836 = j$$36 !== 1;
      if (!v12836) {
        v12836 = !JAM.call(f$$4.isXMLDoc, f$$4, [a$$119], JAM.policy.p3);
      }
      i$$109 = v12836;
      if (i$$109) {
        c$$64 = JAM.call(c$$64.toLowerCase, c$$64, [], JAM.policy.p3);
        var v22038 = f$$4.attrHooks[c$$64];
        if (!v22038) {
          var v25977;
          if (JAM.call(u$$1.test, u$$1, [c$$64], JAM.policy.p3)) {
            v25977 = x$$67;
          } else {
            v25977 = w$$11;
          }
          v22038 = v25977;
        }
        h$$36 = v22038;
      }
      if (d$$63 !== b$$9) {
        if (d$$63 === null) {
          JAM.call(f$$4.removeAttr, f$$4, [a$$119, c$$64], JAM.policy.p3);
          return;
        }
        var v22039 = h$$36;
        if (v22039) {
          v22039 = "set" in h$$36;
        }
        var v18310 = v22039;
        if (v18310) {
          v18310 = i$$109;
        }
        var v12837 = v18310;
        if (v12837) {
          v12837 = (g$$35 = JAM.call(h$$36.set, h$$36, [a$$119, d$$63, c$$64], JAM.policy.p3)) !== b$$9;
        }
        if (v12837) {
          return g$$35;
        }
        JAM.call(a$$119.setAttribute, a$$119, [c$$64, "" + d$$63], JAM.policy.p3);
        return d$$63;
      }
      var v22040 = h$$36;
      if (v22040) {
        v22040 = "get" in h$$36;
      }
      var v18312 = v22040;
      if (v18312) {
        v18312 = i$$109;
      }
      var v12838 = v18312;
      if (v12838) {
        v12838 = (g$$35 = JAM.call(h$$36.get, h$$36, [a$$119, c$$64], JAM.policy.p3)) !== null;
      }
      if (v12838) {
        return g$$35;
      }
      g$$35 = JAM.call(a$$119.getAttribute, a$$119, [c$$64], JAM.policy.p3);
      var v5862;
      if (g$$35 === null) {
        v5862 = b$$9;
      } else {
        v5862 = g$$35;
      }
      return v5862;
    }
    return;
  }
  function v750(a$$118, b$$81) {
    function v749() {
      var v18314 = JAM.call(f$$4, null, [this], JAM.policy.p3);
      this.selected = JAM.call(f$$4.inArray, f$$4, [JAM.call(v18314.val, v18314, [], JAM.policy.p3), c$$63], JAM.policy.p3) >= 0;
      return;
    }
    var c$$63 = JAM.call(f$$4.makeArray, f$$4, [b$$81], JAM.policy.p3);
    var v18315 = JAM.call(f$$4, null, [a$$118], JAM.policy.p3);
    var v12841 = JAM.call(v18315.find, v18315, ["option"], JAM.policy.p3);
    JAM.call(v12841.each, v12841, [v749], JAM.policy.p3);
    var v12842 = c$$63.length;
    if (!v12842) {
      a$$118.selectedIndex = -1;
    }
    return c$$63;
  }
  function v748(a$$117) {
    var b$$80;
    var c$$62;
    var d$$62;
    var e$$82;
    var g$$34 = a$$117.selectedIndex;
    var h$$35 = [];
    var i$$108 = a$$117.options;
    var j$$35 = a$$117.type === "select-one";
    if (g$$34 < 0) {
      return null;
    }
    var v12843;
    if (j$$35) {
      v12843 = g$$34;
    } else {
      v12843 = 0;
    }
    c$$62 = v12843;
    var v12844;
    if (j$$35) {
      v12844 = g$$34 + 1;
    } else {
      v12844 = i$$108.length;
    }
    d$$62 = v12844;
    var v5869 = c$$62 < d$$62;
    for (;v5869;) {
      e$$82 = i$$108[c$$62];
      var v18317 = e$$82.selected;
      if (v18317) {
        var v22041;
        if (f$$4.support.optDisabled) {
          v22041 = !e$$82.disabled;
        } else {
          v22041 = JAM.call(e$$82.getAttribute, e$$82, ["disabled"], JAM.policy.p3) === null;
        }
        v18317 = v22041;
      }
      var v12845 = v18317;
      if (v12845) {
        var v18318 = !e$$82.parentNode.disabled;
        if (!v18318) {
          v18318 = !JAM.call(f$$4.nodeName, f$$4, [e$$82.parentNode, "optgroup"], JAM.policy.p3);
        }
        v12845 = v18318;
      }
      if (v12845) {
        var v5867 = JAM.call(f$$4, null, [e$$82], JAM.policy.p3);
        b$$80 = JAM.call(v5867.val, v5867, [], JAM.policy.p3);
        if (j$$35) {
          return b$$80;
        }
        JAM.call(h$$35.push, h$$35, [b$$80], JAM.policy.p3);
      }
      c$$62++;
      v5869 = c$$62 < d$$62;
    }
    var v18319 = j$$35;
    if (v18319) {
      v18319 = !h$$35.length;
    }
    var v12846 = v18319;
    if (v12846) {
      v12846 = i$$108.length;
    }
    if (v12846) {
      var v5870 = JAM.call(f$$4, null, [i$$108[g$$34]], JAM.policy.p3);
      return JAM.call(v5870.val, v5870, [], JAM.policy.p3);
    }
    return h$$35;
  }
  function v747(a$$116) {
    var b$$79 = a$$116.attributes.value;
    var v5873;
    var v18320 = !b$$79;
    if (!v18320) {
      v18320 = b$$79.specified;
    }
    if (v18320) {
      v5873 = a$$116.value;
    } else {
      v5873 = a$$116.text;
    }
    return v5873;
  }
  function v746(a$$114) {
    function v745(d$$61) {
      function v744(a$$115) {
        var v5874;
        if (a$$115 == null) {
          v5874 = "";
        } else {
          v5874 = a$$115 + "";
        }
        return v5874;
      }
      var g$$33 = JAM.call(f$$4, null, [this], JAM.policy.p3);
      var h$$34;
      if (this.nodeType === 1) {
        var v18321;
        if (e$$81) {
          v18321 = h$$34 = JAM.call(a$$114.call, a$$114, [this, d$$61, JAM.call(g$$33.val, g$$33, [], JAM.policy.p3)], JAM.policy.p3);
        } else {
          v18321 = h$$34 = a$$114;
        }
        v18321;
        var v18322;
        if (h$$34 == null) {
          v18322 = h$$34 = "";
        } else {
          var v22048;
          if (typeof h$$34 == "number") {
            v22048 = h$$34 = h$$34 + "";
          } else {
            var v25984 = JAM.call(f$$4.isArray, f$$4, [h$$34], JAM.policy.p3);
            if (v25984) {
              v25984 = h$$34 = JAM.call(f$$4.map, f$$4, [h$$34, v744], JAM.policy.p3);
            }
            v22048 = v25984;
          }
          v18322 = v22048;
        }
        v18322;
        var v12851 = f$$4.valHooks[this.type];
        if (!v12851) {
          var v18325 = f$$4.valHooks;
          var v22050 = this.nodeName;
          v12851 = v18325[JAM.call(v22050.toLowerCase, v22050, [], JAM.policy.p3)];
        }
        c$$61 = v12851;
        var v18328 = !c$$61;
        if (!v18328) {
          v18328 = !("set" in c$$61);
        }
        var v12852 = v18328;
        if (!v12852) {
          v12852 = JAM.call(c$$61.set, c$$61, [this, h$$34, "value"], JAM.policy.p3) === b$$9;
        }
        if (v12852) {
          this.value = h$$34;
        }
      }
      return;
    }
    var c$$61;
    var d$$60;
    var e$$81;
    var g$$32 = this[0];
    if (!!arguments.length) {
      e$$81 = JAM.call(f$$4.isFunction, f$$4, [a$$114], JAM.policy.p3);
      return JAM.call(this.each, this, [v745], JAM.policy.p3);
    }
    if (g$$32) {
      var v5878 = f$$4.valHooks[g$$32.type];
      if (!v5878) {
        var v12856 = f$$4.valHooks;
        var v18332 = g$$32.nodeName;
        v5878 = v12856[JAM.call(v18332.toLowerCase, v18332, [], JAM.policy.p3)];
      }
      c$$61 = v5878;
      var v18333 = c$$61;
      if (v18333) {
        v18333 = "get" in c$$61;
      }
      var v12859 = v18333;
      if (v12859) {
        v12859 = (d$$60 = JAM.call(c$$61.get, c$$61, [g$$32, "value"], JAM.policy.p3)) !== b$$9;
      }
      if (v12859) {
        return d$$60;
      }
      d$$60 = g$$32.value;
      var v5880;
      if (typeof d$$60 == "string") {
        v5880 = JAM.call(d$$60.replace, d$$60, [q, ""], JAM.policy.p3);
      } else {
        var v12860;
        if (d$$60 == null) {
          v12860 = "";
        } else {
          v12860 = d$$60;
        }
        v5880 = v12860;
      }
      return v5880;
    }
    return;
  }
  function v743(a$$113) {
    var b$$78 = " " + a$$113 + " ";
    var c$$60 = 0;
    var d$$59 = this.length;
    var v5883 = c$$60 < d$$59;
    for (;v5883;) {
      var v12862 = this[c$$60].nodeType === 1;
      if (v12862) {
        var v25986 = " " + this[c$$60].className + " ";
        var v22054 = JAM.call(v25986.replace, v25986, [o, " "], JAM.policy.p3);
        v12862 = JAM.call(v22054.indexOf, v22054, [b$$78], JAM.policy.p3) > -1;
      }
      if (v12862) {
        return!0;
      }
      c$$60++;
      v5883 = c$$60 < d$$59;
    }
    return!1;
  }
  function v742(a$$112, b$$77) {
    function v741() {
      if (c$$58 === "string") {
        var e$$80;
        var g$$31 = 0;
        var h$$33 = JAM.call(f$$4, null, [this], JAM.policy.p3);
        var i$$107 = b$$77;
        var j$$34 = JAM.call(a$$112.split, a$$112, [p$$22], JAM.policy.p3);
        var v12863 = g$$31;
        g$$31 = g$$31 + 1;
        var v5884 = e$$80 = j$$34[v12863];
        for (;v5884;) {
          var v12864;
          if (d$$58) {
            v12864 = i$$107;
          } else {
            v12864 = !JAM.call(h$$33.hasClass, h$$33, [e$$80], JAM.policy.p3);
          }
          i$$107 = v12864;
          var v18340;
          if (i$$107) {
            v18340 = "addClass";
          } else {
            v18340 = "removeClass";
          }
          JAM.call(h$$33[v18340], h$$33, [e$$80], JAM.policy.p3);
          var v12866 = g$$31;
          g$$31 = g$$31 + 1;
          v5884 = e$$80 = j$$34[v12866];
        }
      } else {
        var v12867 = c$$58 === "undefined";
        if (!v12867) {
          v12867 = c$$58 === "boolean";
        }
        if (v12867) {
          var v12868 = this.className;
          if (v12868) {
            JAM.call(f$$4._data, f$$4, [this, "__className__", this.className], JAM.policy.p3);
          }
          var v12869;
          var v22055 = this.className;
          if (!v22055) {
            v22055 = a$$112 === !1;
          }
          if (v22055) {
            v12869 = "";
          } else {
            var v18343 = JAM.call(f$$4._data, f$$4, [this, "__className__"], JAM.policy.p3);
            if (!v18343) {
              v18343 = "";
            }
            v12869 = v18343;
          }
          this.className = v12869;
        }
      }
      return;
    }
    function v740(c$$59) {
      var v5887 = JAM.call(f$$4, null, [this], JAM.policy.p3);
      JAM.call(v5887.toggleClass, v5887, [JAM.call(a$$112.call, a$$112, [this, c$$59, this.className, b$$77], JAM.policy.p3), b$$77], JAM.policy.p3);
      return;
    }
    var c$$58 = typeof a$$112;
    var d$$58 = typeof b$$77 == "boolean";
    if (JAM.call(f$$4.isFunction, f$$4, [a$$112], JAM.policy.p3)) {
      return JAM.call(this.each, this, [v740], JAM.policy.p3);
    }
    return JAM.call(this.each, this, [v741], JAM.policy.p3);
  }
  function v739(a$$111) {
    function v738(b$$76) {
      var v5891 = JAM.call(f$$4, null, [this], JAM.policy.p3);
      JAM.call(v5891.removeClass, v5891, [JAM.call(a$$111.call, a$$111, [this, b$$76, this.className], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    var c$$57;
    var d$$57;
    var e$$79;
    var g$$30;
    var h$$32;
    var i$$106;
    var j$$33;
    if (JAM.call(f$$4.isFunction, f$$4, [a$$111], JAM.policy.p3)) {
      return JAM.call(this.each, this, [v738], JAM.policy.p3);
    }
    var v18345 = a$$111;
    if (v18345) {
      v18345 = typeof a$$111 == "string";
    }
    var v12872 = v18345;
    if (!v12872) {
      v12872 = a$$111 === b$$9;
    }
    if (v12872) {
      var v5894 = a$$111 || "";
      c$$57 = JAM.call(v5894.split, v5894, [p$$22], JAM.policy.p3);
      d$$57 = 0;
      e$$79 = this.length;
      var v5900 = d$$57 < e$$79;
      for (;v5900;) {
        g$$30 = this[d$$57];
        var v12873 = g$$30.nodeType === 1;
        if (v12873) {
          v12873 = g$$30.className;
        }
        if (v12873) {
          if (a$$111) {
            var v5895 = " " + g$$30.className + " ";
            h$$32 = JAM.call(v5895.replace, v5895, [o, " "], JAM.policy.p3);
            i$$106 = 0;
            j$$33 = c$$57.length;
            var v5897 = i$$106 < j$$33;
            for (;v5897;) {
              h$$32 = JAM.call(h$$32.replace, h$$32, [" " + c$$57[i$$106] + " ", " "], JAM.policy.p3);
              i$$106++;
              v5897 = i$$106 < j$$33;
            }
            var v5898 = g$$30;
            var v31138 = JAM.call(f$$4.trim, f$$4, [h$$32], JAM.policy.p3);
            v5898.className = v31138;
          } else {
            g$$30.className = "";
          }
        }
        d$$57++;
        v5900 = d$$57 < e$$79;
      }
    }
    return this;
  }
  function v737(a$$110) {
    function v736(b$$75) {
      var v5902 = JAM.call(f$$4, null, [this], JAM.policy.p3);
      JAM.call(v5902.addClass, v5902, [JAM.call(a$$110.call, a$$110, [this, b$$75, this.className], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    var b$$74;
    var c$$56;
    var d$$56;
    var e$$78;
    var g$$29;
    var h$$31;
    var i$$105;
    if (JAM.call(f$$4.isFunction, f$$4, [a$$110], JAM.policy.p3)) {
      return JAM.call(this.each, this, [v736], JAM.policy.p3);
    }
    var v12877 = a$$110;
    if (v12877) {
      v12877 = typeof a$$110 == "string";
    }
    if (v12877) {
      b$$74 = JAM.call(a$$110.split, a$$110, [p$$22], JAM.policy.p3);
      c$$56 = 0;
      d$$56 = this.length;
      var v5911 = c$$56 < d$$56;
      for (;v5911;) {
        e$$78 = this[c$$56];
        if (e$$78.nodeType === 1) {
          var v12879 = !e$$78.className;
          if (v12879) {
            v12879 = b$$74.length === 1;
          }
          if (v12879) {
            e$$78.className = a$$110;
          } else {
            g$$29 = " " + e$$78.className + " ";
            h$$31 = 0;
            i$$105 = b$$74.length;
            var v5907 = h$$31 < i$$105;
            for (;v5907;) {
              var v5906 = ~JAM.call(g$$29.indexOf, g$$29, [" " + b$$74[h$$31] + " "], JAM.policy.p3);
              if (!v5906) {
                g$$29 = g$$29 + (b$$74[h$$31] + " ");
              }
              h$$31++;
              v5907 = h$$31 < i$$105;
            }
            var v5908 = e$$78;
            var v31139 = JAM.call(f$$4.trim, f$$4, [g$$29], JAM.policy.p3);
            v5908.className = v31139;
          }
        }
        c$$56++;
        v5911 = c$$56 < d$$56;
      }
    }
    return this;
  }
  function v735(a$$109) {
    function v734() {
      try {
        JAM.set(this, a$$109, b$$9, JAM.policy.p2);
        delete this[a$$109];
      } catch (c$$55) {
      }
      return;
    }
    var v5913 = f$$4.propFix[a$$109];
    if (!v5913) {
      v5913 = a$$109;
    }
    a$$109 = v5913;
    return JAM.call(this.each, this, [v734], JAM.policy.p3);
  }
  function v733(a$$108, b$$73) {
    return JAM.call(f$$4.access, f$$4, [this, f$$4.prop, a$$108, b$$73, arguments.length > 1], JAM.policy.p3);
  }
  function v732(a$$107) {
    function v731() {
      JAM.call(f$$4.removeAttr, f$$4, [this, a$$107], JAM.policy.p3);
      return;
    }
    return JAM.call(this.each, this, [v731], JAM.policy.p3);
  }
  function v730(a$$106, b$$72) {
    return JAM.call(f$$4.access, f$$4, [this, f$$4.attr, a$$106, b$$72, arguments.length > 1], JAM.policy.p3);
  }
  function v729(a$$105, c$$54) {
    function m$$14() {
      var v5918 = h$$30 = h$$30 - 1;
      if (!v5918) {
        JAM.call(d$$55.resolveWith, d$$55, [e$$77, [e$$77]], JAM.policy.p3);
      }
      return;
    }
    var v12889 = typeof a$$105 != "string";
    if (v12889) {
      c$$54 = a$$105;
      a$$105 = b$$9;
    }
    a$$105 = a$$105 || "fx";
    var d$$55 = JAM.call(f$$4.Deferred, f$$4, [], JAM.policy.p3);
    var e$$77 = this;
    var g$$28 = e$$77.length;
    var h$$30 = 1;
    var i$$104 = a$$105 + "defer";
    var j$$32 = a$$105 + "queue";
    var k$$17 = a$$105 + "mark";
    var l$$32;
    var v5920 = g$$28;
    g$$28 = g$$28 - 1;
    for (;v5920;) {
      var v12890 = JAM.call(f$$4.data, f$$4, [e$$77[g$$28], i$$104, b$$9, !0], JAM.policy.p3);
      if (!v12890) {
        var v22060 = JAM.call(f$$4.data, f$$4, [e$$77[g$$28], j$$32, b$$9, !0], JAM.policy.p3);
        if (!v22060) {
          v22060 = JAM.call(f$$4.data, f$$4, [e$$77[g$$28], k$$17, b$$9, !0], JAM.policy.p3);
        }
        var v18358 = v22060;
        if (v18358) {
          v18358 = JAM.call(f$$4.data, f$$4, [e$$77[g$$28], i$$104, JAM.call(f$$4.Callbacks, f$$4, ["once memory"], JAM.policy.p3), !0], JAM.policy.p3);
        }
        v12890 = v18358;
      }
      if (l$$32 = v12890) {
        h$$30++;
        JAM.call(l$$32.add, l$$32, [m$$14], JAM.policy.p3);
      }
      v5920 = g$$28;
      g$$28 = g$$28 - 1;
    }
    m$$14();
    return JAM.call(d$$55.promise, d$$55, [c$$54], JAM.policy.p3);
  }
  function v728(a$$104) {
    return JAM.call(this.queue, this, [a$$104 || "fx", []], JAM.policy.p3);
  }
  function v727(a$$103, b$$70) {
    function v726(b$$71, c$$53) {
      function v725() {
        clearTimeout(d$$54);
        return;
      }
      var d$$54 = JAM.call(setTimeout, null, [b$$71, a$$103]);
      c$$53.stop = v725;
      return;
    }
    var v12891;
    if (f$$4.fx) {
      var v18360 = f$$4.fx.speeds[a$$103];
      if (!v18360) {
        v18360 = a$$103;
      }
      v12891 = v18360;
    } else {
      v12891 = a$$103;
    }
    a$$103 = v12891;
    b$$70 = b$$70 || "fx";
    return JAM.call(this.queue, this, [b$$70, v726], JAM.policy.p3);
  }
  function v724(a$$102) {
    function v723() {
      JAM.call(f$$4.dequeue, f$$4, [this, a$$102], JAM.policy.p3);
      return;
    }
    return JAM.call(this.each, this, [v723], JAM.policy.p3);
  }
  function v722(a$$101, c$$52) {
    function v721() {
      var b$$69 = JAM.call(f$$4.queue, f$$4, [this, a$$101, c$$52], JAM.policy.p3);
      var v12892 = a$$101 === "fx";
      if (v12892) {
        v12892 = b$$69[0] !== "inprogress";
      }
      var v5922 = v12892;
      if (v5922) {
        JAM.call(f$$4.dequeue, f$$4, [this, a$$101], JAM.policy.p3);
      }
      return;
    }
    var d$$53 = 2;
    var v5923 = typeof a$$101 != "string";
    if (v5923) {
      c$$52 = a$$101;
      a$$101 = "fx";
      d$$53--;
    }
    if (arguments.length < d$$53) {
      return JAM.call(f$$4.queue, f$$4, [this[0], a$$101], JAM.policy.p3);
    }
    var v5926;
    if (c$$52 === b$$9) {
      v5926 = this;
    } else {
      v5926 = JAM.call(this.each, this, [v721], JAM.policy.p3);
    }
    return v5926;
  }
  function v720(a$$100, b$$68) {
    function v719() {
      JAM.call(f$$4.dequeue, f$$4, [a$$100, b$$68], JAM.policy.p3);
      return;
    }
    b$$68 = b$$68 || "fx";
    var c$$51 = JAM.call(f$$4.queue, f$$4, [a$$100, b$$68], JAM.policy.p3);
    var d$$52 = JAM.call(c$$51.shift, c$$51, [], JAM.policy.p3);
    var e$$76 = {};
    var v18363 = d$$52 === "inprogress";
    if (v18363) {
      d$$52 = JAM.call(c$$51.shift, c$$51, [], JAM.policy.p3);
    }
    if (d$$52) {
      var v27586 = b$$68 === "fx";
      if (v27586) {
        JAM.call(c$$51.unshift, c$$51, ["inprogress"], JAM.policy.p3);
      }
      JAM.call(f$$4._data, f$$4, [a$$100, b$$68 + ".run", e$$76], JAM.policy.p3);
      JAM.call(d$$52.call, d$$52, [a$$100, v719, e$$76], JAM.policy.p3);
    }
    var v12896 = c$$51.length;
    if (!v12896) {
      JAM.call(f$$4.removeData, f$$4, [a$$100, b$$68 + "queue " + b$$68 + ".run", !0], JAM.policy.p3);
      n$$57(a$$100, b$$68, "queue");
    }
    return;
  }
  function v718(a$$99, b$$67, c$$50) {
    var d$$51;
    if (a$$99) {
      b$$67 = (b$$67 || "fx") + "queue";
      d$$51 = JAM.call(f$$4._data, f$$4, [a$$99, b$$67], JAM.policy.p3);
      if (c$$50) {
        var v18366;
        var v25997 = !d$$51;
        if (!v25997) {
          v25997 = JAM.call(f$$4.isArray, f$$4, [c$$50], JAM.policy.p3);
        }
        if (v25997) {
          v18366 = d$$51 = JAM.call(f$$4._data, f$$4, [a$$99, b$$67, JAM.call(f$$4.makeArray, f$$4, [c$$50], JAM.policy.p3)], JAM.policy.p3);
        } else {
          v18366 = JAM.call(d$$51.push, d$$51, [c$$50], JAM.policy.p3);
        }
        v18366;
      }
      return d$$51 || [];
    }
    return;
  }
  function v717(a$$98, b$$66, c$$49) {
    var v5927 = a$$98 !== !0;
    if (v5927) {
      c$$49 = b$$66;
      b$$66 = a$$98;
      a$$98 = !1;
    }
    if (b$$66) {
      c$$49 = c$$49 || "fx";
      var d$$50 = c$$49 + "mark";
      var v5928;
      if (a$$98) {
        v5928 = 0;
      } else {
        var v18367 = JAM.call(f$$4._data, f$$4, [b$$66, d$$50], JAM.policy.p3);
        if (!v18367) {
          v18367 = 1;
        }
        v5928 = v18367 - 1;
      }
      var e$$75 = v5928;
      var v5929;
      if (e$$75) {
        v5929 = JAM.call(f$$4._data, f$$4, [b$$66, d$$50, e$$75], JAM.policy.p3);
      } else {
        JAM.call(f$$4.removeData, f$$4, [b$$66, d$$50, !0], JAM.policy.p3);
        v5929 = n$$57(b$$66, c$$49, "mark");
      }
      v5929;
    }
    return;
  }
  function v716(a$$97, b$$65) {
    if (a$$97) {
      b$$65 = (b$$65 || "fx") + "mark";
      var v25998 = JAM.call(f$$4._data, f$$4, [a$$97, b$$65], JAM.policy.p3);
      if (!v25998) {
        v25998 = 0;
      }
      JAM.call(f$$4._data, f$$4, [a$$97, b$$65, v25998 + 1], JAM.policy.p3);
    }
    return;
  }
  function v715(a$$96) {
    function v714() {
      JAM.call(f$$4.removeData, f$$4, [this, a$$96], JAM.policy.p3);
      return;
    }
    return JAM.call(this.each, this, [v714], JAM.policy.p3);
  }
  function v713(a$$95, c$$47) {
    function v712(c$$48) {
      function v711() {
        var b$$64 = JAM.call(f$$4, null, [this], JAM.policy.p3);
        JAM.call(b$$64.triggerHandler, b$$64, ["setData" + e$$74, d$$49], JAM.policy.p3);
        JAM.call(f$$4.data, f$$4, [this, a$$95, c$$48], JAM.policy.p3);
        JAM.call(b$$64.triggerHandler, b$$64, ["changeData" + e$$74, d$$49], JAM.policy.p3);
        return;
      }
      if (c$$48 === b$$9) {
        m$$13 = JAM.call(this.triggerHandler, this, ["getData" + e$$74, [d$$49[0]]], JAM.policy.p3);
        var v18373 = m$$13 === b$$9;
        if (v18373) {
          v18373 = j$$31;
        }
        var v12902 = v18373;
        if (v12902) {
          m$$13 = JAM.call(f$$4.data, f$$4, [j$$31, a$$95], JAM.policy.p3);
          m$$13 = l$$21(j$$31, a$$95, m$$13);
        }
        var v5930;
        var v18374 = m$$13 === b$$9;
        if (v18374) {
          v18374 = d$$49[1];
        }
        if (v18374) {
          v5930 = JAM.call(this.data, this, [d$$49[0]], JAM.policy.p3);
        } else {
          v5930 = m$$13;
        }
        return v5930;
      }
      d$$49[1] = c$$48;
      JAM.call(this.each, this, [v711], JAM.policy.p3);
      return;
    }
    function v710() {
      JAM.call(f$$4.data, f$$4, [this, a$$95], JAM.policy.p3);
      return;
    }
    var d$$49;
    var e$$74;
    var g$$27;
    var h$$29;
    var i$$103;
    var j$$31 = this[0];
    var k$$16 = 0;
    var m$$13 = null;
    if (a$$95 === b$$9) {
      if (this.length) {
        m$$13 = JAM.call(f$$4.data, f$$4, [j$$31], JAM.policy.p3);
        var v12905 = j$$31.nodeType === 1;
        if (v12905) {
          v12905 = !JAM.call(f$$4._data, f$$4, [j$$31, "parsedAttrs"], JAM.policy.p3);
        }
        if (v12905) {
          g$$27 = j$$31.attributes;
          i$$103 = g$$27.length;
          var v5932 = k$$16 < i$$103;
          for (;v5932;) {
            h$$29 = g$$27[k$$16].name;
            var v12907 = JAM.call(h$$29.indexOf, h$$29, ["data-"], JAM.policy.p3) === 0;
            if (v12907) {
              h$$29 = JAM.call(f$$4.camelCase, f$$4, [JAM.call(h$$29.substring, h$$29, [5], JAM.policy.p3)], JAM.policy.p3);
              l$$21(j$$31, h$$29, m$$13[h$$29]);
            }
            k$$16++;
            v5932 = k$$16 < i$$103;
          }
          JAM.call(f$$4._data, f$$4, [j$$31, "parsedAttrs", !0], JAM.policy.p3);
        }
      }
      return m$$13;
    }
    if (typeof a$$95 == "object") {
      return JAM.call(this.each, this, [v710], JAM.policy.p3);
    }
    d$$49 = JAM.call(a$$95.split, a$$95, [".", 2], JAM.policy.p3);
    var v18378;
    if (d$$49[1]) {
      v18378 = "." + d$$49[1];
    } else {
      v18378 = "";
    }
    d$$49[1] = v18378;
    e$$74 = d$$49[1] + "!";
    return JAM.call(f$$4.access, f$$4, [this, v712, null, c$$47, arguments.length > 1, null, !1], JAM.policy.p3);
  }
  function v709(a$$94) {
    if (a$$94.nodeName) {
      var v5940 = f$$4.noData;
      var v12911 = a$$94.nodeName;
      var b$$63 = v5940[JAM.call(v12911.toLowerCase, v12911, [], JAM.policy.p3)];
      if (b$$63) {
        var v5942 = b$$63 !== !0;
        if (v5942) {
          v5942 = JAM.call(a$$94.getAttribute, a$$94, ["classid"], JAM.policy.p3) === b$$63;
        }
        return v5942;
      }
    }
    return!0;
  }
  function v708(a$$93, b$$62, c$$46) {
    return JAM.call(f$$4.data, f$$4, [a$$93, b$$62, c$$46, !0], JAM.policy.p3);
  }
  function v707(a$$92, b$$61, c$$45) {
    if (!!JAM.call(f$$4.acceptData, f$$4, [a$$92], JAM.policy.p3)) {
      var d$$48;
      var e$$73;
      var g$$26;
      var h$$28 = f$$4.expando;
      var i$$102 = a$$92.nodeType;
      var v5945;
      if (i$$102) {
        v5945 = f$$4.cache;
      } else {
        v5945 = a$$92;
      }
      var j$$30 = v5945;
      var v5946;
      if (i$$102) {
        v5946 = a$$92[h$$28];
      } else {
        v5946 = h$$28;
      }
      var k$$15 = v5946;
      if (!j$$30[k$$15]) {
        return;
      }
      if (b$$61) {
        var v5948;
        if (c$$45) {
          v5948 = j$$30[k$$15];
        } else {
          v5948 = j$$30[k$$15].data;
        }
        d$$48 = v5948;
        if (d$$48) {
          var v5949 = JAM.call(f$$4.isArray, f$$4, [b$$61], JAM.policy.p3);
          if (!v5949) {
            var v12917;
            if (b$$61 in d$$48) {
              v12917 = b$$61 = [b$$61];
            } else {
              b$$61 = JAM.call(f$$4.camelCase, f$$4, [b$$61], JAM.policy.p3);
              var v22076;
              if (b$$61 in d$$48) {
                v22076 = b$$61 = [b$$61];
              } else {
                v22076 = b$$61 = JAM.call(b$$61.split, b$$61, [" "], JAM.policy.p3);
              }
              v12917 = v22076;
            }
            v12917;
          }
          e$$73 = 0;
          g$$26 = b$$61.length;
          var v5951 = e$$73 < g$$26;
          for (;v5951;) {
            delete d$$48[b$$61[e$$73]];
            e$$73++;
            v5951 = e$$73 < g$$26;
          }
          var v22077;
          if (c$$45) {
            v22077 = m$$4;
          } else {
            v22077 = f$$4.isEmptyObject;
          }
          if (!JAM.call(v22077, null, [d$$48], JAM.policy.p3)) {
            return;
          }
        }
      }
      if (!c$$45) {
        delete j$$30[k$$15].data;
        if (!m$$4(j$$30[k$$15])) {
          return;
        }
      }
      var v12921;
      var v22078 = f$$4.support.deleteExpando;
      if (!v22078) {
        v22078 = !j$$30.setInterval;
      }
      if (v22078) {
        v12921 = delete j$$30[k$$15];
      } else {
        v12921 = JAM.set(j$$30, k$$15, null, JAM.policy.p2);
      }
      v12921;
      if (i$$102) {
        var v18384;
        if (f$$4.support.deleteExpando) {
          v18384 = delete a$$92[h$$28];
        } else {
          var v22079;
          if (a$$92.removeAttribute) {
            v22079 = JAM.call(a$$92.removeAttribute, a$$92, [h$$28], JAM.policy.p3);
          } else {
            v22079 = JAM.set(a$$92, h$$28, null, JAM.policy.p2);
          }
          v18384 = v22079;
        }
        v18384;
      }
    }
    return;
  }
  function v706(a$$91, c$$44, d$$47, e$$72) {
    if (!!JAM.call(f$$4.acceptData, f$$4, [a$$91], JAM.policy.p3)) {
      var g$$25;
      var h$$27;
      var i$$101;
      var j$$29 = f$$4.expando;
      var k$$14 = typeof c$$44 == "string";
      var l$$31 = a$$91.nodeType;
      var v5958;
      if (l$$31) {
        v5958 = f$$4.cache;
      } else {
        v5958 = a$$91;
      }
      var m$$12 = v5958;
      var v5959;
      if (l$$31) {
        v5959 = a$$91[j$$29];
      } else {
        var v12923 = a$$91[j$$29];
        if (v12923) {
          v12923 = j$$29;
        }
        v5959 = v12923;
      }
      var n$$63 = v5959;
      var o$$5 = c$$44 === "events";
      var v26005 = !n$$63;
      if (!v26005) {
        v26005 = !m$$12[n$$63];
      }
      var v22081 = v26005;
      if (!v22081) {
        var v27593 = !o$$5;
        if (v27593) {
          v27593 = !e$$72;
        }
        var v26006 = v27593;
        if (v26006) {
          v26006 = !m$$12[n$$63].data;
        }
        v22081 = v26006;
      }
      var v18386 = v22081;
      if (v18386) {
        v18386 = k$$14;
      }
      var v12924 = v18386;
      if (v12924) {
        v12924 = d$$47 === b$$9;
      }
      if (v12924) {
        return;
      }
      if (!n$$63) {
        var v18387;
        if (l$$31) {
          v18387 = JAM.set(a$$91, j$$29, n$$63 = JAM.set(f$$4, "uuid", f$$4.uuid + 1, JAM.policy.p2), JAM.policy.p2);
        } else {
          v18387 = n$$63 = j$$29;
        }
        v18387;
      }
      var v12925 = m$$12[n$$63];
      if (!v12925) {
        JAM.set(m$$12, n$$63, {}, JAM.policy.p2);
        if (!l$$31) {
          m$$12[n$$63].toJSON = f$$4.noop;
        }
      }
      var v12926 = typeof c$$44 == "object";
      if (!v12926) {
        v12926 = typeof c$$44 == "function";
      }
      if (v12926) {
        var v5961;
        if (e$$72) {
          var v31140 = JAM.call(f$$4.extend, f$$4, [m$$12[n$$63], c$$44], JAM.policy.p3);
          v5961 = JAM.set(m$$12, n$$63, v31140, JAM.policy.p2);
        } else {
          var v12928 = m$$12[n$$63];
          var v31141 = JAM.call(f$$4.extend, f$$4, [m$$12[n$$63].data, c$$44], JAM.policy.p3);
          v5961 = v12928.data = v31141;
        }
        v5961;
      }
      g$$25 = h$$27 = m$$12[n$$63];
      if (!e$$72) {
        var v26011 = h$$27.data;
        if (!v26011) {
          h$$27.data = {};
        }
        h$$27 = h$$27.data;
      }
      var v12929 = d$$47 !== b$$9;
      if (v12929) {
        JAM.set(h$$27, JAM.call(f$$4.camelCase, f$$4, [c$$44], JAM.policy.p3), d$$47, JAM.policy.p2);
      }
      var v12930 = o$$5;
      if (v12930) {
        v12930 = !h$$27[c$$44];
      }
      if (v12930) {
        return g$$25.events;
      }
      var v5964;
      if (k$$14) {
        i$$101 = h$$27[c$$44];
        var v18396 = i$$101 == null;
        if (v18396) {
          v18396 = i$$101 = h$$27[JAM.call(f$$4.camelCase, f$$4, [c$$44], JAM.policy.p3)];
        }
        v5964 = v18396;
      } else {
        v5964 = i$$101 = h$$27;
      }
      v5964;
      return i$$101;
    }
    return;
  }
  function v705(a$$90) {
    var v5966;
    if (a$$90.nodeType) {
      v5966 = f$$4.cache[a$$90[f$$4.expando]];
    } else {
      v5966 = a$$90[f$$4.expando];
    }
    a$$90 = v5966;
    var v5967 = !!a$$90;
    if (v5967) {
      v5967 = !m$$4(a$$90);
    }
    return v5967;
  }
  function v704() {
    function v703() {
      var d$$46;
      var e$$71;
      var g$$24;
      var h$$26;
      var i$$100;
      var j$$28;
      var l$$30;
      var m$$11;
      var n$$62;
      var q$$3;
      var r$$5;
      var s$$17;
      var t$$4;
      var u$$3 = JAM.call(c$$5.getElementsByTagName, c$$5, ["body"], JAM.policy.p3)[0];
      var v5969 = !u$$3;
      if (!v5969) {
        m$$11 = 1;
        t$$4 = "padding:0;margin:0;border:";
        r$$5 = "position:absolute;top:0;left:0;width:1px;height:1px;";
        s$$17 = t$$4 + "0;visibility:hidden;";
        n$$62 = "style='" + r$$5 + t$$4 + "5px solid #000;";
        q$$3 = "<div " + n$$62 + "display:block;'><div style='" + t$$4 + "0;display:block;overflow:hidden;'></div></div>" + "<table " + n$$62 + "' cellpadding='0' cellspacing='0'>" + "<tr><td></td></tr></table>";
        d$$46 = JAM.call(c$$5.createElement, c$$5, ["div"], JAM.policy.p3);
        d$$46.style.cssText = s$$17 + "width:0;height:0;position:static;top:0;margin-top:" + m$$11 + "px";
        JAM.call(u$$3.insertBefore, u$$3, [d$$46, u$$3.firstChild], JAM.policy.p3);
        p$$26 = JAM.call(c$$5.createElement, c$$5, ["div"], JAM.policy.p3);
        JAM.call(d$$46.appendChild, d$$46, [p$$26], JAM.policy.p3);
        JAM.set(p$$26, "innerHTML", "<table><tr><td style='" + t$$4 + "0;display:none'></td><td>t</td></tr></table>");
        k$$13 = JAM.call(p$$26.getElementsByTagName, p$$26, ["td"], JAM.policy.p3);
        o$$4 = k$$13[0].offsetHeight === 0;
        k$$13[0].style.display = "";
        k$$13[1].style.display = "none";
        var v30866 = o$$4;
        if (v30866) {
          v30866 = k$$13[0].offsetHeight === 0;
        }
        b$$60.reliableHiddenOffsets = v30866;
        var v30864 = a$$13.getComputedStyle;
        if (v30864) {
          JAM.set(p$$26, "innerHTML", "");
          l$$30 = JAM.call(c$$5.createElement, c$$5, ["div"], JAM.policy.p3);
          l$$30.style.width = "0";
          l$$30.style.marginRight = "0";
          p$$26.style.width = "2px";
          JAM.call(p$$26.appendChild, p$$26, [l$$30], JAM.policy.p3);
          var v30871 = b$$60;
          var v30894 = JAM.call(a$$13.getComputedStyle, a$$13, [l$$30, null], JAM.policy.p3);
          if (!v30894) {
            v30894 = {marginRight:0};
          }
          var v30883 = parseInt(v30894.marginRight, 10);
          if (!v30883) {
            v30883 = 0;
          }
          v30871.reliableMarginRight = v30883 === 0;
        }
        var v30862 = typeof p$$26.style.zoom != "undefined";
        if (v30862) {
          JAM.set(p$$26, "innerHTML", "");
          p$$26.style.width = p$$26.style.padding = "1px";
          p$$26.style.border = 0;
          p$$26.style.overflow = "hidden";
          p$$26.style.display = "inline";
          p$$26.style.zoom = 1;
          b$$60.inlineBlockNeedsLayout = p$$26.offsetWidth === 3;
          p$$26.style.display = "block";
          p$$26.style.overflow = "visible";
          JAM.set(p$$26, "innerHTML", "<div style='width:5px;'></div>");
          b$$60.shrinkWrapBlocks = p$$26.offsetWidth !== 3;
        }
        p$$26.style.cssText = r$$5 + s$$17;
        JAM.set(p$$26, "innerHTML", q$$3);
        e$$71 = p$$26.firstChild;
        g$$24 = e$$71.firstChild;
        i$$100 = e$$71.nextSibling.firstChild.firstChild;
        j$$28 = {doesNotAddBorder:g$$24.offsetTop !== 5, doesAddBorderForTableAndCells:i$$100.offsetTop === 5};
        g$$24.style.position = "fixed";
        g$$24.style.top = "20px";
        var v30503 = g$$24.offsetTop === 20;
        if (!v30503) {
          v30503 = g$$24.offsetTop === 15;
        }
        j$$28.fixedPosition = v30503;
        g$$24.style.position = g$$24.style.top = "";
        e$$71.style.overflow = "hidden";
        e$$71.style.position = "relative";
        j$$28.subtractsBorderForOverflowNotVisible = g$$24.offsetTop === -5;
        j$$28.doesNotIncludeMarginInBodyOffset = u$$3.offsetTop !== m$$11;
        var v28604 = a$$13.getComputedStyle;
        if (v28604) {
          p$$26.style.marginTop = "1%";
          var v29696 = b$$60;
          var v30376 = JAM.call(a$$13.getComputedStyle, a$$13, [p$$26, null], JAM.policy.p3);
          if (!v30376) {
            v30376 = {marginTop:0};
          }
          v29696.pixelMargin = v30376.marginTop !== "1%";
        }
        var v27596 = typeof d$$46.style.zoom != "undefined";
        if (v27596) {
          d$$46.style.zoom = 1;
        }
        JAM.call(u$$3.removeChild, u$$3, [d$$46], JAM.policy.p3);
        l$$30 = p$$26 = d$$46 = null;
        JAM.call(f$$4.extend, f$$4, [b$$60, j$$28], JAM.policy.p3);
      }
      return;
    }
    function v702() {
      b$$60.noCloneEvent = !1;
      return;
    }
    var b$$60;
    var d$$45;
    var e$$70;
    var g$$23;
    var h$$25;
    var i$$99;
    var j$$27;
    var k$$13;
    var l$$29;
    var m$$10;
    var n$$61;
    var o$$4;
    var p$$26 = JAM.call(c$$5.createElement, c$$5, ["div"], JAM.policy.p3);
    var q$$2 = c$$5.documentElement;
    JAM.call(p$$26.setAttribute, p$$26, ["className", "t"], JAM.policy.p3);
    JAM.set(p$$26, "innerHTML", "   <link/><table></table><a href='/a' style='top:1px;float:left;opacity:.55;'>a</a><input type='checkbox'/>");
    d$$45 = JAM.call(p$$26.getElementsByTagName, p$$26, ["*"], JAM.policy.p3);
    e$$70 = JAM.call(p$$26.getElementsByTagName, p$$26, ["a"], JAM.policy.p3)[0];
    var v18398 = !d$$45;
    if (!v18398) {
      v18398 = !d$$45.length;
    }
    var v12939 = v18398;
    if (!v12939) {
      v12939 = !e$$70;
    }
    if (v12939) {
      return{};
    }
    g$$23 = JAM.call(c$$5.createElement, c$$5, ["select"], JAM.policy.p3);
    h$$25 = JAM.call(g$$23.appendChild, g$$23, [JAM.call(c$$5.createElement, c$$5, ["option"], JAM.policy.p3)], JAM.policy.p3);
    i$$99 = JAM.call(p$$26.getElementsByTagName, p$$26, ["input"], JAM.policy.p3)[0];
    var v28607 = p$$26.firstChild.nodeType === 3;
    var v28608 = !JAM.call(p$$26.getElementsByTagName, p$$26, ["tbody"], JAM.policy.p3).length;
    var v28609 = !!JAM.call(p$$26.getElementsByTagName, p$$26, ["link"], JAM.policy.p3).length;
    var v28610 = JAM.call(/top/.test, /top/, [JAM.call(e$$70.getAttribute, e$$70, ["style"], JAM.policy.p3)], JAM.policy.p3);
    var v28611 = JAM.call(e$$70.getAttribute, e$$70, ["href"], JAM.policy.p3) === "/a";
    var v28612 = JAM.call(/^0.55/.test, /^0.55/, [e$$70.style.opacity], JAM.policy.p3);
    var v28613 = !!e$$70.style.cssFloat;
    var v28614 = i$$99.value === "on";
    var v28615 = h$$25.selected;
    var v28616 = p$$26.className !== "t";
    var v28617 = !!JAM.call(c$$5.createElement, c$$5, ["form"], JAM.policy.p3).enctype;
    var v29972 = JAM.call(c$$5.createElement, c$$5, ["nav"], JAM.policy.p3);
    b$$60 = {leadingWhitespace:v28607, tbody:v28608, htmlSerialize:v28609, style:v28610, hrefNormalized:v28611, opacity:v28612, cssFloat:v28613, checkOn:v28614, optSelected:v28615, getSetAttribute:v28616, enctype:v28617, html5Clone:JAM.call(v29972.cloneNode, v29972, [!0], JAM.policy.p3).outerHTML !== "<:nav></:nav>", submitBubbles:!0, changeBubbles:!0, focusinBubbles:!1, deleteExpando:!0, noCloneEvent:!0, inlineBlockNeedsLayout:!1, shrinkWrapBlocks:!1, reliableMarginRight:!0, pixelMargin:!0};
    f$$4.boxModel = b$$60.boxModel = c$$5.compatMode === "CSS1Compat";
    i$$99.checked = !0;
    b$$60.noCloneChecked = JAM.call(i$$99.cloneNode, i$$99, [!0], JAM.policy.p3).checked;
    g$$23.disabled = !0;
    b$$60.optDisabled = !h$$25.disabled;
    try {
      delete p$$26.test;
    } catch (r$$4) {
      b$$60.deleteExpando = !1;
    }
    var v30747 = !p$$26.addEventListener;
    if (v30747) {
      v30747 = p$$26.attachEvent;
    }
    var v30699 = v30747;
    if (v30699) {
      v30699 = p$$26.fireEvent;
    }
    var v30626 = v30699;
    if (v30626) {
      JAM.call(p$$26.attachEvent, p$$26, ["onclick", v702], JAM.policy.p3);
      var v30748 = JAM.call(p$$26.cloneNode, p$$26, [!0], JAM.policy.p3);
      JAM.call(v30748.fireEvent, v30748, ["onclick"], JAM.policy.p3);
    }
    i$$99 = JAM.call(c$$5.createElement, c$$5, ["input"], JAM.policy.p3);
    i$$99.value = "t";
    JAM.call(i$$99.setAttribute, i$$99, ["type", "radio"], JAM.policy.p3);
    b$$60.radioValue = i$$99.value === "t";
    JAM.call(i$$99.setAttribute, i$$99, ["checked", "checked"], JAM.policy.p3);
    JAM.call(i$$99.setAttribute, i$$99, ["name", "t"], JAM.policy.p3);
    JAM.call(p$$26.appendChild, p$$26, [i$$99], JAM.policy.p3);
    j$$27 = JAM.call(c$$5.createDocumentFragment, c$$5, [], JAM.policy.p3);
    JAM.call(j$$27.appendChild, j$$27, [p$$26.lastChild], JAM.policy.p3);
    var v26013 = b$$60;
    var v29275 = JAM.call(j$$27.cloneNode, j$$27, [!0], JAM.policy.p3);
    v26013.checkClone = JAM.call(v29275.cloneNode, v29275, [!0], JAM.policy.p3).lastChild.checked;
    b$$60.appendChecked = i$$99.checked;
    JAM.call(j$$27.removeChild, j$$27, [i$$99], JAM.policy.p3);
    JAM.call(j$$27.appendChild, j$$27, [p$$26], JAM.policy.p3);
    if (p$$26.attachEvent) {
      for (n$$61 in{submit:1, change:1, focusin:1}) {
        m$$10 = "on" + n$$61;
        o$$4 = m$$10 in p$$26;
        if (!o$$4) {
          JAM.call(p$$26.setAttribute, p$$26, [m$$10, "return;"], JAM.policy.p3);
          o$$4 = typeof p$$26[m$$10] == "function";
        }
        JAM.set(b$$60, n$$61 + "Bubbles", o$$4, JAM.policy.p2);
      }
    }
    JAM.call(j$$27.removeChild, j$$27, [p$$26], JAM.policy.p3);
    j$$27 = g$$23 = h$$25 = p$$26 = i$$99 = null;
    JAM.call(f$$4, null, [v703], JAM.policy.p3);
    return b$$60;
  }
  function v701(a$$87) {
    function m$$9(a$$88) {
      function v699(b$$59) {
        var v12942 = e$$69;
        var v12943 = a$$88;
        var v18400;
        if (arguments.length > 1) {
          v18400 = JAM.call(i$$85.call, i$$85, [arguments, 0], JAM.policy.p3);
        } else {
          v18400 = b$$59;
        }
        JAM.set(v12942, v12943, v18400, JAM.policy.p2);
        JAM.call(j$$26.notifyWith, j$$26, [k$$12, e$$69], JAM.policy.p3);
        return;
      }
      return v699;
    }
    function l$$28(a$$89) {
      function v700(c$$43) {
        var v12944 = b$$58;
        var v12945 = a$$89;
        var v18401;
        if (arguments.length > 1) {
          v18401 = JAM.call(i$$85.call, i$$85, [arguments, 0], JAM.policy.p3);
        } else {
          v18401 = c$$43;
        }
        JAM.set(v12944, v12945, v18401, JAM.policy.p2);
        var v12946 = g$$22 = g$$22 - 1;
        if (!v12946) {
          JAM.call(j$$26.resolveWith, j$$26, [j$$26, b$$58], JAM.policy.p3);
        }
        return;
      }
      return v700;
    }
    var b$$58 = JAM.call(i$$85.call, i$$85, [arguments, 0], JAM.policy.p3);
    var c$$42 = 0;
    var d$$44 = b$$58.length;
    var e$$69 = Array(d$$44);
    var g$$22 = d$$44;
    var h$$24 = d$$44;
    var v5973;
    var v22091 = d$$44 <= 1;
    if (v22091) {
      v22091 = a$$87;
    }
    var v18403 = v22091;
    if (v18403) {
      v18403 = JAM.call(f$$4.isFunction, f$$4, [a$$87.promise], JAM.policy.p3);
    }
    if (v18403) {
      v5973 = a$$87;
    } else {
      v5973 = JAM.call(f$$4.Deferred, f$$4, [], JAM.policy.p3);
    }
    var j$$26 = v5973;
    var k$$12 = JAM.call(j$$26.promise, j$$26, [], JAM.policy.p3);
    if (d$$44 > 1) {
      var v5975 = c$$42 < d$$44;
      for (;v5975;) {
        var v5974;
        var v22093 = b$$58[c$$42];
        if (v22093) {
          v22093 = b$$58[c$$42].promise;
        }
        var v18404 = v22093;
        if (v18404) {
          v18404 = JAM.call(f$$4.isFunction, f$$4, [b$$58[c$$42].promise], JAM.policy.p3);
        }
        if (v18404) {
          var v18405 = b$$58[c$$42];
          var v12948 = JAM.call(v18405.promise, v18405, [], JAM.policy.p3);
          v5974 = JAM.call(v12948.then, v12948, [l$$28(c$$42), j$$26.reject, m$$9(c$$42)], JAM.policy.p3);
        } else {
          v5974 = g$$22 = g$$22 - 1;
        }
        v5974;
        c$$42++;
        v5975 = c$$42 < d$$44;
      }
      if (!g$$22) {
        JAM.call(j$$26.resolveWith, j$$26, [j$$26, b$$58], JAM.policy.p3);
      }
    } else {
      var v5976 = j$$26 !== a$$87;
      if (v5976) {
        var v18406;
        if (d$$44) {
          v18406 = [a$$87];
        } else {
          v18406 = [];
        }
        JAM.call(j$$26.resolveWith, j$$26, [j$$26, v18406], JAM.policy.p3);
      }
    }
    return k$$12;
  }
  function v698(a$$82) {
    function v697() {
      e$$67 = "rejected";
      return;
    }
    function v696() {
      e$$67 = "resolved";
      return;
    }
    function v695(a$$86) {
      if (a$$86 == null) {
        a$$86 = h$$23;
      } else {
        var b$$57;
        for (b$$57 in h$$23) {
          JAM.set(a$$86, b$$57, h$$23[b$$57], JAM.policy.p2);
        }
      }
      return a$$86;
    }
    function v694(a$$84, b$$55, c$$40) {
      function v693(d$$43) {
        function v692(a$$85, b$$56) {
          function v691() {
            g$$21 = JAM.call(c$$41.apply, c$$41, [this, arguments], JAM.policy.p3);
            var v12955;
            var v22095 = g$$21;
            if (v22095) {
              v22095 = JAM.call(f$$4.isFunction, f$$4, [g$$21.promise], JAM.policy.p3);
            }
            if (v22095) {
              var v18407 = JAM.call(g$$21.promise, g$$21, [], JAM.policy.p3);
              v12955 = JAM.call(v18407.then, v18407, [d$$43.resolve, d$$43.reject, d$$43.notify], JAM.policy.p3);
            } else {
              var v18411 = e$$68 + "With";
              var v22096;
              if (this === i$$98) {
                v22096 = d$$43;
              } else {
                v22096 = this;
              }
              v12955 = JAM.call(d$$43[v18411], d$$43, [v22096, [g$$21]], JAM.policy.p3);
            }
            v12955;
            return;
          }
          var c$$41 = b$$56[0];
          var e$$68 = b$$56[1];
          var g$$21;
          var v5979;
          if (JAM.call(f$$4.isFunction, f$$4, [c$$41], JAM.policy.p3)) {
            v5979 = JAM.call(i$$98[a$$85], i$$98, [v691], JAM.policy.p3);
          } else {
            v5979 = JAM.call(i$$98[a$$85], i$$98, [d$$43[e$$68]], JAM.policy.p3);
          }
          v5979;
          return;
        }
        JAM.call(f$$4.each, f$$4, [{done:[a$$84, "resolve"], fail:[b$$55, "reject"], progress:[c$$40, "notify"]}, v692], JAM.policy.p3);
        return;
      }
      var v5981 = JAM.call(f$$4.Deferred, f$$4, [v693], JAM.policy.p3);
      return JAM.call(v5981.promise, v5981, [], JAM.policy.p3);
    }
    function v690() {
      var v18415 = i$$98.done;
      var v5982 = JAM.call(v18415.apply, v18415, [i$$98, arguments], JAM.policy.p3).fail;
      JAM.call(v5982.apply, v5982, [i$$98, arguments], JAM.policy.p3);
      return this;
    }
    function v689(a$$83, b$$54, c$$39) {
      var v12962 = JAM.call(i$$98.done, i$$98, [a$$83], JAM.policy.p3);
      var v5983 = JAM.call(v12962.fail, v12962, [b$$54], JAM.policy.p3);
      JAM.call(v5983.progress, v5983, [c$$39], JAM.policy.p3);
      return this;
    }
    function v688() {
      return e$$67;
    }
    var b$$53 = JAM.call(f$$4.Callbacks, f$$4, ["once memory"], JAM.policy.p3);
    var c$$38 = JAM.call(f$$4.Callbacks, f$$4, ["once memory"], JAM.policy.p3);
    var d$$42 = JAM.call(f$$4.Callbacks, f$$4, ["memory"], JAM.policy.p3);
    var e$$67 = "pending";
    var g$$20 = {resolve:b$$53, reject:c$$38, notify:d$$42};
    var h$$23 = {done:b$$53.add, fail:c$$38.add, progress:d$$42.add, state:v688, isResolved:b$$53.fired, isRejected:c$$38.fired, then:v689, always:v690, pipe:v694, promise:v695};
    var i$$98 = JAM.call(h$$23.promise, h$$23, [{}], JAM.policy.p3);
    var j$$25;
    for (j$$25 in g$$20) {
      JAM.set(i$$98, j$$25, g$$20[j$$25].fire, JAM.policy.p2);
      JAM.set(i$$98, j$$25 + "With", g$$20[j$$25].fireWith, JAM.policy.p2);
    }
    var v12965 = JAM.call(i$$98.done, i$$98, [v696, c$$38.disable, d$$42.lock], JAM.policy.p3);
    JAM.call(v12965.fail, v12965, [v697, b$$53.disable, d$$42.lock], JAM.policy.p3);
    if (a$$82) {
      JAM.call(a$$82.call, a$$82, [i$$98, i$$98], JAM.policy.p3);
    }
    return i$$98;
  }
  function v687(a$$79) {
    function v686() {
      return!!i$$96;
    }
    function v685() {
      JAM.call(p$$25.fireWith, p$$25, [this, arguments], JAM.policy.p3);
      return this;
    }
    function v684(b$$52, c$$37) {
      if (d$$38) {
        var v12968;
        if (j$$24) {
          var v18419 = a$$79.once;
          if (!v18419) {
            v18419 = JAM.call(d$$38.push, d$$38, [[b$$52, c$$37]], JAM.policy.p3);
          }
          v12968 = v18419;
        } else {
          var v22099 = !a$$79.once;
          if (!v22099) {
            v22099 = !e$$64;
          }
          var v18420 = v22099;
          if (v18420) {
            v18420 = o$$3(b$$52, c$$37);
          }
          v12968 = v18420;
        }
        v12968;
      }
      return this;
    }
    function v683() {
      return!d$$38;
    }
    function v682() {
      d$$38 = b$$9;
      var v18421 = !e$$64;
      if (!v18421) {
        v18421 = e$$64 === !0;
      }
      var v12969 = v18421;
      if (v12969) {
        JAM.call(p$$25.disable, p$$25, [], JAM.policy.p3);
      }
      return this;
    }
    function v681() {
      return!c$$36;
    }
    function v680() {
      c$$36 = d$$38 = e$$64 = b$$9;
      return this;
    }
    function v679() {
      c$$36 = [];
      return this;
    }
    function v678(a$$81) {
      if (c$$36) {
        var b$$51 = 0;
        var d$$41 = c$$36.length;
        var v5991 = b$$51 < d$$41;
        for (;v5991;) {
          if (a$$81 === c$$36[b$$51]) {
            return!0;
          }
          b$$51++;
          v5991 = b$$51 < d$$41;
        }
      }
      return!1;
    }
    function v677() {
      if (c$$36) {
        var b$$50 = arguments;
        var d$$40 = 0;
        var e$$66 = b$$50.length;
        var v5995 = d$$40 < e$$66;
        for (;v5995;) {
          var f$$19 = 0;
          var v5994 = f$$19 < c$$36.length;
          for (;v5994;) {
            if (b$$50[d$$40] === c$$36[f$$19]) {
              var v18422 = j$$24;
              if (v18422) {
                v18422 = f$$19 <= l$$27;
              }
              var v12974 = v18422;
              if (v12974) {
                l$$27--;
                var v22102 = f$$19 <= m$$8;
                if (v22102) {
                  m$$8--;
                }
              }
              var v12975 = f$$19;
              f$$19 = f$$19 - 1;
              JAM.call(c$$36.splice, c$$36, [v12975, 1], JAM.policy.p3);
              if (a$$79.unique) {
                break;
              }
            }
            f$$19++;
            v5994 = f$$19 < c$$36.length;
          }
          d$$40++;
          v5995 = d$$40 < e$$66;
        }
      }
      return this;
    }
    function v676() {
      if (c$$36) {
        var a$$80 = c$$36.length;
        n$$60(arguments);
        var v12977;
        if (j$$24) {
          v12977 = l$$27 = c$$36.length;
        } else {
          var v22103 = e$$64;
          if (v22103) {
            v22103 = e$$64 !== !0;
          }
          var v18423 = v22103;
          if (v18423) {
            k$$11 = a$$80;
            v18423 = o$$3(e$$64[0], e$$64[1]);
          }
          v12977 = v18423;
        }
        v12977;
      }
      return this;
    }
    function o$$3(b$$49, f$$18) {
      f$$18 = f$$18 || [];
      var v28629 = !a$$79.memory;
      if (!v28629) {
        v28629 = [b$$49, f$$18];
      }
      e$$64 = v28629;
      i$$96 = !0;
      j$$24 = !0;
      m$$8 = k$$11 || 0;
      k$$11 = 0;
      l$$27 = c$$36.length;
      var v12978 = c$$36;
      if (v12978) {
        v12978 = m$$8 < l$$27;
      }
      var v5997 = v12978;
      for (;v5997;) {
        var v22104 = c$$36[m$$8];
        var v12979 = JAM.call(v22104.apply, v22104, [b$$49, f$$18], JAM.policy.p3) === !1;
        if (v12979) {
          v12979 = a$$79.stopOnFalse;
        }
        if (v12979) {
          e$$64 = !0;
          break;
        }
        m$$8++;
        var v12980 = c$$36;
        if (v12980) {
          v12980 = m$$8 < l$$27;
        }
        v5997 = v12980;
      }
      j$$24 = !1;
      if (c$$36) {
        var v18426;
        if (a$$79.once) {
          var v22105;
          if (e$$64 === !0) {
            v22105 = JAM.call(p$$25.disable, p$$25, [], JAM.policy.p3);
          } else {
            v22105 = c$$36 = [];
          }
          v18426 = v22105;
        } else {
          var v26027 = d$$38;
          if (v26027) {
            v26027 = d$$38.length;
          }
          var v22106 = v26027;
          if (v22106) {
            e$$64 = JAM.call(d$$38.shift, d$$38, [], JAM.policy.p3);
            v22106 = JAM.call(p$$25.fireWith, p$$25, [e$$64[0], e$$64[1]], JAM.policy.p3);
          }
          v18426 = v22106;
        }
        v18426;
      }
      return;
    }
    function n$$60(b$$48) {
      var d$$39;
      var e$$65;
      var g$$19;
      var h$$22;
      var i$$97;
      d$$39 = 0;
      e$$65 = b$$48.length;
      var v5998 = d$$39 < e$$65;
      for (;v5998;) {
        g$$19 = b$$48[d$$39];
        h$$22 = JAM.call(f$$4.type, f$$4, [g$$19], JAM.policy.p3);
        var v12981;
        if (h$$22 === "array") {
          v12981 = n$$60(g$$19);
        } else {
          var v22108 = h$$22 === "function";
          if (v22108) {
            var v26028 = !a$$79.unique;
            if (!v26028) {
              v26028 = !JAM.call(p$$25.has, p$$25, [g$$19], JAM.policy.p3);
            }
            v22108 = v26028;
          }
          var v18427 = v22108;
          if (v18427) {
            v18427 = JAM.call(c$$36.push, c$$36, [g$$19], JAM.policy.p3);
          }
          v12981 = v18427;
        }
        v12981;
        d$$39++;
        v5998 = d$$39 < e$$65;
      }
      return;
    }
    var v5999;
    if (a$$79) {
      var v12982 = g[a$$79];
      if (!v12982) {
        v12982 = h$$9(a$$79);
      }
      v5999 = v12982;
    } else {
      v5999 = {};
    }
    a$$79 = v5999;
    var c$$36 = [];
    var d$$38 = [];
    var e$$64;
    var i$$96;
    var j$$24;
    var k$$11;
    var l$$27;
    var m$$8;
    var p$$25 = {add:v676, remove:v677, has:v678, empty:v679, disable:v680, disabled:v681, lock:v682, locked:v683, fireWith:v684, fire:v685, fired:v686};
    return p$$25;
  }
  function v675() {
    function v674() {
      var v6000 = c$$5.readyState === "complete";
      if (v6000) {
        JAM.call(c$$5.detachEvent, c$$5, ["onreadystatechange", B$$1], JAM.policy.p3);
        JAM.call(e$$61.ready, e$$61, [], JAM.policy.p3);
      }
      return;
    }
    function v673() {
      JAM.call(c$$5.removeEventListener, c$$5, ["DOMContentLoaded", B$$1, !1], JAM.policy.p3);
      JAM.call(e$$61.ready, e$$61, [], JAM.policy.p3);
      return;
    }
    function v672(a$$78, b$$47) {
      var v6001 = I$$1;
      var v6002 = "[object " + b$$47 + "]";
      var v31142 = JAM.call(b$$47.toLowerCase, b$$47, [], JAM.policy.p3);
      JAM.set(v6001, v6002, v31142, JAM.policy.p2);
      return;
    }
    function v671() {
      function v670(d$$37, f$$17) {
        var v18430 = f$$17;
        if (v18430) {
          v18430 = f$$17 instanceof e$$61;
        }
        var v12986 = v18430;
        if (v12986) {
          v12986 = !(f$$17 instanceof a$$77);
        }
        var v6003 = v12986;
        if (v6003) {
          f$$17 = a$$77(f$$17);
        }
        var v6004 = e$$61.fn.init;
        return JAM.call(v6004.call, v6004, [this, d$$37, f$$17, b$$45], JAM.policy.p3);
      }
      function a$$77(b$$46, c$$35) {
        return JAM.new(a$$77.fn.init, [b$$46, c$$35]);
      }
      JAM.call(e$$61.extend, e$$61, [!0, a$$77, this], JAM.policy.p3);
      a$$77.superclass = this;
      var v27608 = a$$77;
      var v28631 = a$$77;
      var v31143 = JAM.call(this, null, [], JAM.policy.p3);
      v27608.fn = v28631.prototype = v31143;
      a$$77.fn.constructor = a$$77;
      a$$77.sub = this.sub;
      a$$77.fn.init = v670;
      a$$77.fn.init.prototype = a$$77.fn;
      var b$$45 = a$$77(c$$5);
      return a$$77;
    }
    function v669(a$$76) {
      a$$76 = JAM.call(a$$76.toLowerCase, a$$76, [], JAM.policy.p3);
      var v22109 = JAM.call(r$$3.exec, r$$3, [a$$76], JAM.policy.p3);
      if (!v22109) {
        v22109 = JAM.call(s$$16.exec, s$$16, [a$$76], JAM.policy.p3);
      }
      var v18434 = v22109;
      if (!v18434) {
        v18434 = JAM.call(t$$3.exec, t$$3, [a$$76], JAM.policy.p3);
      }
      var v12990 = v18434;
      if (!v12990) {
        var v18435 = JAM.call(a$$76.indexOf, a$$76, ["compatible"], JAM.policy.p3) < 0;
        if (v18435) {
          v18435 = JAM.call(u$$2.exec, u$$2, [a$$76], JAM.policy.p3);
        }
        v12990 = v18435;
      }
      var v6006 = v12990;
      if (!v6006) {
        v6006 = [];
      }
      var b$$44 = v6006;
      var v12992 = b$$44[1];
      if (!v12992) {
        v12992 = "";
      }
      var v6007 = v12992;
      var v12993 = b$$44[2];
      if (!v12993) {
        v12993 = "0";
      }
      return{browser:v6007, version:v12993};
    }
    function v668() {
      var v6009 = new Date;
      return JAM.call(v6009.getTime, v6009, [], JAM.policy.p3);
    }
    function v667(a$$74, c$$33, d$$36, f$$16, g$$18, h$$21, i$$95) {
      function v666(a$$75, b$$43, c$$34) {
        return JAM.call(j$$23.call, j$$23, [e$$61(a$$75), c$$34], JAM.policy.p3);
      }
      var j$$23;
      var k$$10 = d$$36 == null;
      var l$$26 = 0;
      var m$$7 = a$$74.length;
      var v12994 = d$$36;
      if (v12994) {
        v12994 = typeof d$$36 == "object";
      }
      if (v12994) {
        for (l$$26 in d$$36) {
          JAM.call(e$$61.access, e$$61, [a$$74, c$$33, l$$26, d$$36[l$$26], 1, h$$21, f$$16], JAM.policy.p3);
        }
        g$$18 = 1;
      } else {
        if (f$$16 !== b$$9) {
          var v12995 = i$$95 === b$$9;
          if (v12995) {
            v12995 = JAM.call(e$$61.isFunction, e$$61, [f$$16], JAM.policy.p3);
          }
          j$$23 = v12995;
          if (k$$10) {
            var v18440;
            if (j$$23) {
              j$$23 = c$$33;
              v18440 = c$$33 = v666;
            } else {
              JAM.call(c$$33.call, c$$33, [a$$74, f$$16], JAM.policy.p3);
              v18440 = c$$33 = null;
            }
            v18440;
          }
          if (c$$33) {
            var v6014 = l$$26 < m$$7;
            for (;v6014;) {
              var v6012 = a$$74[l$$26];
              var v12996;
              if (j$$23) {
                v12996 = JAM.call(f$$16.call, f$$16, [a$$74[l$$26], l$$26, JAM.call(c$$33, null, [a$$74[l$$26], d$$36], JAM.policy.p3)], JAM.policy.p3);
              } else {
                v12996 = f$$16;
              }
              JAM.call(c$$33, null, [v6012, d$$36, v12996, i$$95], JAM.policy.p3);
              l$$26++;
              v6014 = l$$26 < m$$7;
            }
          }
          g$$18 = 1;
        }
      }
      var v6017;
      if (g$$18) {
        v6017 = a$$74;
      } else {
        var v12997;
        if (k$$10) {
          v12997 = JAM.call(c$$33.call, c$$33, [a$$74], JAM.policy.p3);
        } else {
          var v18443;
          if (m$$7) {
            v18443 = JAM.call(c$$33, null, [a$$74[0], d$$36], JAM.policy.p3);
          } else {
            v18443 = h$$21;
          }
          v12997 = v18443;
        }
        v6017 = v12997;
      }
      return v6017;
    }
    function v665(a$$73, c$$32) {
      function g$$17() {
        return JAM.call(a$$73.apply, a$$73, [c$$32, JAM.call(f$$15.concat, f$$15, [JAM.call(F$$1.call, F$$1, [arguments], JAM.policy.p3)], JAM.policy.p3)], JAM.policy.p3);
      }
      if (typeof c$$32 == "string") {
        var d$$35 = a$$73[c$$32];
        c$$32 = a$$73;
        a$$73 = d$$35;
      }
      if (!JAM.call(e$$61.isFunction, e$$61, [a$$73], JAM.policy.p3)) {
        return b$$9;
      }
      var f$$15 = JAM.call(F$$1.call, F$$1, [arguments, 2], JAM.policy.p3);
      var v13001 = a$$73.guid;
      if (!v13001) {
        v13001 = g$$17.guid;
      }
      var v6021 = v13001;
      if (!v6021) {
        v6021 = e$$61.guid;
        e$$61.guid = e$$61.guid + 1;
      }
      g$$17.guid = a$$73.guid = v6021;
      return g$$17;
    }
    function v664(a$$72, c$$31, d$$34) {
      var f$$14;
      var g$$16;
      var h$$20 = [];
      var i$$94 = 0;
      var j$$22 = a$$72.length;
      var v6022 = a$$72 instanceof e$$61;
      if (!v6022) {
        var v18446 = j$$22 !== b$$9;
        if (v18446) {
          v18446 = typeof j$$22 == "number";
        }
        var v13003 = v18446;
        if (v13003) {
          var v27609 = j$$22 > 0;
          if (v27609) {
            v27609 = a$$72[0];
          }
          var v26031 = v27609;
          if (v26031) {
            v26031 = a$$72[j$$22 - 1];
          }
          var v22115 = v26031;
          if (!v22115) {
            v22115 = j$$22 === 0;
          }
          var v18447 = v22115;
          if (!v18447) {
            v18447 = JAM.call(e$$61.isArray, e$$61, [a$$72], JAM.policy.p3);
          }
          v13003 = v18447;
        }
        v6022 = v13003;
      }
      var k$$9 = v6022;
      if (k$$9) {
        var v6023 = i$$94 < j$$22;
        for (;v6023;) {
          f$$14 = JAM.call(c$$31, null, [a$$72[i$$94], i$$94, d$$34], JAM.policy.p3);
          var v13006 = f$$14 != null;
          if (v13006) {
            var v18448 = h$$20.length;
            introspect(JAM.policy.p2) {
              h$$20[v18448] = f$$14;
            }
          }
          i$$94++;
          v6023 = i$$94 < j$$22;
        }
      } else {
        for (g$$16 in a$$72) {
          f$$14 = JAM.call(c$$31, null, [a$$72[g$$16], g$$16, d$$34], JAM.policy.p3);
          var v13008 = f$$14 != null;
          if (v13008) {
            var v18449 = h$$20.length;
            introspect(JAM.policy.p2) {
              h$$20[v18449] = f$$14;
            }
          }
        }
      }
      var v6024 = h$$20.concat;
      return JAM.call(v6024.apply, v6024, [[], h$$20], JAM.policy.p3);
    }
    function v663(a$$71, b$$42, c$$30) {
      var d$$33 = [];
      var e$$63;
      c$$30 = !!c$$30;
      var f$$13 = 0;
      var g$$15 = a$$71.length;
      var v6026 = f$$13 < g$$15;
      for (;v6026;) {
        e$$63 = !!JAM.call(b$$42, null, [a$$71[f$$13], f$$13], JAM.policy.p3);
        var v13010 = c$$30 !== e$$63;
        if (v13010) {
          JAM.call(d$$33.push, d$$33, [a$$71[f$$13]], JAM.policy.p3);
        }
        f$$13++;
        v6026 = f$$13 < g$$15;
      }
      return d$$33;
    }
    function v662(a$$70, c$$29) {
      var d$$32 = a$$70.length;
      var e$$62 = 0;
      if (typeof c$$29.length == "number") {
        var f$$12 = c$$29.length;
        var v6028 = e$$62 < f$$12;
        for (;v6028;) {
          var v6027 = d$$32;
          d$$32 = d$$32 + 1;
          JAM.set(a$$70, v6027, c$$29[e$$62], JAM.policy.p2);
          e$$62++;
          v6028 = e$$62 < f$$12;
        }
      } else {
        var v6030 = c$$29[e$$62] !== b$$9;
        for (;v6030;) {
          var v6029 = d$$32;
          d$$32 = d$$32 + 1;
          var v13013 = e$$62;
          e$$62 = e$$62 + 1;
          JAM.set(a$$70, v6029, c$$29[v13013], JAM.policy.p2);
          v6030 = c$$29[e$$62] !== b$$9;
        }
      }
      a$$70.length = d$$32;
      return a$$70;
    }
    function v661(a$$69, b$$41, c$$28) {
      var d$$31;
      if (b$$41) {
        if (H$$1) {
          return JAM.call(H$$1.call, H$$1, [b$$41, a$$69, c$$28], JAM.policy.p3);
        }
        d$$31 = b$$41.length;
        var v13015;
        if (c$$28) {
          var v18453;
          if (c$$28 < 0) {
            v18453 = JAM.call(Math.max, Math, [0, d$$31 + c$$28], JAM.policy.p3);
          } else {
            v18453 = c$$28;
          }
          v13015 = v18453;
        } else {
          v13015 = 0;
        }
        c$$28 = v13015;
        var v6033 = c$$28 < d$$31;
        for (;v6033;) {
          var v13016 = c$$28 in b$$41;
          if (v13016) {
            v13016 = b$$41[c$$28] === a$$69;
          }
          if (v13016) {
            return c$$28;
          }
          c$$28++;
          v6033 = c$$28 < d$$31;
        }
      }
      return-1;
    }
    function v660(a$$68, b$$40) {
      var c$$27 = b$$40 || [];
      if (a$$68 != null) {
        var d$$30 = JAM.call(e$$61.type, e$$61, [a$$68], JAM.policy.p3);
        var v6034;
        var v27611 = a$$68.length == null;
        if (!v27611) {
          v27611 = d$$30 === "string";
        }
        var v26033 = v27611;
        if (!v26033) {
          v26033 = d$$30 === "function";
        }
        var v22120 = v26033;
        if (!v22120) {
          v22120 = d$$30 === "regexp";
        }
        var v18455 = v22120;
        if (!v18455) {
          v18455 = JAM.call(e$$61.isWindow, e$$61, [a$$68], JAM.policy.p3);
        }
        if (v18455) {
          v6034 = JAM.call(E$$1.call, E$$1, [c$$27, a$$68], JAM.policy.p3);
        } else {
          v6034 = JAM.call(e$$61.merge, e$$61, [c$$27, a$$68], JAM.policy.p3);
        }
        v6034;
      }
      return c$$27;
    }
    function v659(a$$67) {
      var v6036;
      if (a$$67 == null) {
        v6036 = "";
      } else {
        var v18456 = a$$67 + "";
        var v13018 = JAM.call(v18456.replace, v18456, [k$$6, ""], JAM.policy.p3);
        v6036 = JAM.call(v13018.replace, v13018, [l$$24, ""], JAM.policy.p3);
      }
      return v6036;
    }
    function v658(a$$66) {
      var v6037;
      if (a$$66 == null) {
        v6037 = "";
      } else {
        v6037 = JAM.call(G$$1.call, G$$1, [a$$66], JAM.policy.p3);
      }
      return v6037;
    }
    function v657(a$$65, c$$26, d$$29) {
      var f$$11;
      var g$$14 = 0;
      var h$$19 = a$$65.length;
      var v6038 = h$$19 === b$$9;
      if (!v6038) {
        v6038 = JAM.call(e$$61.isFunction, e$$61, [a$$65], JAM.policy.p3);
      }
      var i$$93 = v6038;
      if (d$$29) {
        if (i$$93) {
          for (f$$11 in a$$65) {
            if (JAM.call(c$$26.apply, c$$26, [a$$65[f$$11], d$$29], JAM.policy.p3) === !1) {
              break;
            }
          }
        } else {
          var v6041 = g$$14 < h$$19;
          for (;v6041;) {
            var v22122 = g$$14;
            g$$14 = g$$14 + 1;
            if (JAM.call(c$$26.apply, c$$26, [a$$65[v22122], d$$29], JAM.policy.p3) === !1) {
              break;
            }
            v6041 = g$$14 < h$$19;
          }
        }
      } else {
        if (i$$93) {
          for (f$$11 in a$$65) {
            if (JAM.call(c$$26.call, c$$26, [a$$65[f$$11], f$$11, a$$65[f$$11]], JAM.policy.p3) === !1) {
              break;
            }
          }
        } else {
          var v6044 = g$$14 < h$$19;
          for (;v6044;) {
            var v18461 = a$$65[g$$14];
            var v22123 = g$$14;
            g$$14 = g$$14 + 1;
            if (JAM.call(c$$26.call, c$$26, [v18461, g$$14, a$$65[v22123]], JAM.policy.p3) === !1) {
              break;
            }
            v6044 = g$$14 < h$$19;
          }
        }
      }
      return a$$65;
    }
    function v656(a$$64, b$$39) {
      var v6045 = a$$64.nodeName;
      if (v6045) {
        var v18463 = a$$64.nodeName;
        v6045 = JAM.call(v18463.toUpperCase, v18463, [], JAM.policy.p3) === JAM.call(b$$39.toUpperCase, b$$39, [], JAM.policy.p3);
      }
      return v6045;
    }
    function v655(a$$63) {
      var v6046 = JAM.call(a$$63.replace, a$$63, [w$$12, "ms-"], JAM.policy.p3);
      return JAM.call(v6046.replace, v6046, [v$$5, x$$68], JAM.policy.p3);
    }
    function v654(b$$37) {
      function v653(b$$38) {
        var v6047 = a$$13.eval;
        JAM.call(v6047.call, v6047, [a$$13, b$$38], JAM.policy.p3);
        return;
      }
      var v13032 = b$$37;
      if (v13032) {
        v13032 = JAM.call(j$$19.test, j$$19, [b$$37], JAM.policy.p3);
      }
      var v6048 = v13032;
      if (v6048) {
        var v18464 = a$$13.execScript;
        if (!v18464) {
          v18464 = v653;
        }
        JAM.call(v18464, null, [b$$37], JAM.policy.p3);
      }
      return;
    }
    function v652() {
      return;
    }
    function v651(c$$25) {
      var v13034 = typeof c$$25 != "string";
      if (!v13034) {
        v13034 = !c$$25;
      }
      if (v13034) {
        return null;
      }
      var d$$28;
      var f$$10;
      try {
        var v6050;
        if (a$$13.DOMParser) {
          f$$10 = new DOMParser;
          v6050 = d$$28 = JAM.call(f$$10.parseFromString, f$$10, [c$$25, "text/xml"], JAM.policy.p3);
        } else {
          d$$28 = new ActiveXObject("Microsoft.XMLDOM");
          d$$28.async = "false";
          v6050 = JAM.call(d$$28.loadXML, d$$28, [c$$25], JAM.policy.p3);
        }
        v6050;
      } catch (g$$13) {
        d$$28 = b$$9;
      }
      var v18467 = !d$$28;
      if (!v18467) {
        v18467 = !d$$28.documentElement;
      }
      var v13036 = v18467;
      if (!v13036) {
        v13036 = JAM.call(d$$28.getElementsByTagName, d$$28, ["parsererror"], JAM.policy.p3).length;
      }
      var v6051 = v13036;
      if (v6051) {
        JAM.call(e$$61.error, e$$61, ["Invalid XML: " + c$$25], JAM.policy.p3);
      }
      return d$$28;
    }
    function v650(b$$36) {
      var v13038 = typeof b$$36 != "string";
      if (!v13038) {
        v13038 = !b$$36;
      }
      if (v13038) {
        return null;
      }
      b$$36 = JAM.call(e$$61.trim, e$$61, [b$$36], JAM.policy.p3);
      var v13039 = a$$13.JSON;
      if (v13039) {
        v13039 = a$$13.JSON.parse;
      }
      if (v13039) {
        var v6053 = a$$13.JSON;
        return JAM.call(v6053.parse, v6053, [b$$36], JAM.policy.p3);
      }
      var v22127 = JAM.call(b$$36.replace, b$$36, [o$$2, "@"], JAM.policy.p3);
      var v18473 = JAM.call(v22127.replace, v22127, [p$$24, "]"], JAM.policy.p3);
      if (JAM.call(n$$59.test, n$$59, [JAM.call(v18473.replace, v18473, [q$$1, ""], JAM.policy.p3)], JAM.policy.p3)) {
        return JAM.call(JAM.new(Function, ["return " + b$$36]), null, [], JAM.policy.p3);
      }
      JAM.call(e$$61.error, e$$61, ["Invalid JSON: " + b$$36], JAM.policy.p3);
      return;
    }
    function v649(a$$62) {
      throw new Error(a$$62);
    }
    function v648(a$$61) {
      var b$$35;
      for (b$$35 in a$$61) {
        return!1;
      }
      return!0;
    }
    function v647(a$$60) {
      var v22128 = !a$$60;
      if (!v22128) {
        v22128 = JAM.call(e$$61.type, e$$61, [a$$60], JAM.policy.p3) !== "object";
      }
      var v18474 = v22128;
      if (!v18474) {
        v18474 = a$$60.nodeType;
      }
      var v13042 = v18474;
      if (!v13042) {
        v13042 = JAM.call(e$$61.isWindow, e$$61, [a$$60], JAM.policy.p3);
      }
      if (v13042) {
        return!1;
      }
      try {
        var v18476 = a$$60.constructor;
        if (v18476) {
          v18476 = !JAM.call(D$$1.call, D$$1, [a$$60, "constructor"], JAM.policy.p3);
        }
        var v13043 = v18476;
        if (v13043) {
          v13043 = !JAM.call(D$$1.call, D$$1, [a$$60.constructor.prototype, "isPrototypeOf"], JAM.policy.p3);
        }
        if (v13043) {
          return!1;
        }
      } catch (c$$24) {
        return!1;
      }
      var d$$27;
      for (d$$27 in a$$60) {
      }
      var v6060 = d$$27 === b$$9;
      if (!v6060) {
        v6060 = JAM.call(D$$1.call, D$$1, [a$$60, d$$27], JAM.policy.p3);
      }
      return v6060;
    }
    function v646(a$$59) {
      var v6061;
      if (a$$59 == null) {
        v6061 = String(a$$59);
      } else {
        var v13045 = I$$1[JAM.call(C$$1.call, C$$1, [a$$59], JAM.policy.p3)];
        if (!v13045) {
          v13045 = "object";
        }
        v6061 = v13045;
      }
      return v6061;
    }
    function v645(a$$58) {
      var v6062 = !isNaN(parseFloat(a$$58));
      if (v6062) {
        v6062 = isFinite(a$$58);
      }
      return v6062;
    }
    function v644(a$$57) {
      var v6063 = a$$57 != null;
      if (v6063) {
        v6063 = a$$57 == a$$57.window;
      }
      return v6063;
    }
    function v643(a$$56) {
      return JAM.call(e$$61.type, e$$61, [a$$56], JAM.policy.p3) === "array";
    }
    function v642(a$$55) {
      return JAM.call(e$$61.type, e$$61, [a$$55], JAM.policy.p3) === "function";
    }
    function v641() {
      if (!A$$1) {
        A$$1 = JAM.call(e$$61.Callbacks, e$$61, ["once memory"], JAM.policy.p3);
        if (c$$5.readyState === "complete") {
          return JAM.call(setTimeout, null, [e$$61.ready, 1]);
        }
        if (c$$5.addEventListener) {
          JAM.call(c$$5.addEventListener, c$$5, ["DOMContentLoaded", B$$1, !1], JAM.policy.p3);
          JAM.call(a$$13.addEventListener, a$$13, ["load", e$$61.ready, !1], JAM.policy.p3);
        } else {
          if (c$$5.attachEvent) {
            JAM.call(c$$5.attachEvent, c$$5, ["onreadystatechange", B$$1], JAM.policy.p3);
            JAM.call(a$$13.attachEvent, a$$13, ["onload", e$$61.ready], JAM.policy.p3);
            var b$$34 = !1;
            try {
              b$$34 = a$$13.frameElement == null;
            } catch (d$$26) {
            }
            var v13054 = c$$5.documentElement.doScroll;
            if (v13054) {
              v13054 = b$$34;
            }
            var v6069 = v13054;
            if (v6069) {
              J$$1();
            }
          }
        }
      }
      return;
    }
    function v640(a$$54) {
      var v18483 = a$$54 === !0;
      if (v18483) {
        v18483 = !(e$$61.readyWait = e$$61.readyWait - 1);
      }
      var v13055 = v18483;
      if (!v13055) {
        var v18484 = a$$54 !== !0;
        if (v18484) {
          v18484 = !e$$61.isReady;
        }
        v13055 = v18484;
      }
      if (v13055) {
        if (!c$$5.body) {
          return JAM.call(setTimeout, null, [e$$61.ready, 1]);
        }
        e$$61.isReady = !0;
        var v13057 = a$$54 !== !0;
        if (v13057) {
          v13057 = (e$$61.readyWait = e$$61.readyWait - 1) > 0;
        }
        if (v13057) {
          return;
        }
        JAM.call(A$$1.fireWith, A$$1, [c$$5, [e$$61]], JAM.policy.p3);
        var v13059 = e$$61.fn.trigger;
        if (v13059) {
          var v22136 = e$$61(c$$5);
          var v18489 = JAM.call(v22136.trigger, v22136, ["ready"], JAM.policy.p3);
          JAM.call(v18489.off, v18489, ["ready"], JAM.policy.p3);
        }
      }
      return;
    }
    function v639(a$$53) {
      var v6077;
      if (a$$53) {
        v6077 = e$$61.readyWait;
        e$$61.readyWait = e$$61.readyWait + 1;
      } else {
        v6077 = JAM.call(e$$61.ready, e$$61, [!0], JAM.policy.p3);
      }
      v6077;
      return;
    }
    function v638(b$$33) {
      var v13061 = a$$13.$ === e$$61;
      if (v13061) {
        a$$13.$ = g$$10;
      }
      var v18492 = b$$33;
      if (v18492) {
        v18492 = a$$13.jQuery === e$$61;
      }
      var v13062 = v18492;
      if (v13062) {
        a$$13.jQuery = f$$7;
      }
      return e$$61;
    }
    function v637() {
      var a$$52;
      var c$$23;
      var d$$25;
      var f$$9;
      var g$$12;
      var h$$18;
      var v6078 = arguments[0];
      if (!v6078) {
        v6078 = {};
      }
      var i$$92 = v6078;
      var j$$21 = 1;
      var k$$8 = arguments.length;
      var l$$25 = !1;
      var v18493 = typeof i$$92 == "boolean";
      if (v18493) {
        l$$25 = i$$92;
        var v27614 = arguments[1];
        if (!v27614) {
          v27614 = {};
        }
        i$$92 = v27614;
        j$$21 = 2;
      }
      var v22139 = typeof i$$92 != "object";
      if (v22139) {
        v22139 = !JAM.call(e$$61.isFunction, e$$61, [i$$92], JAM.policy.p3);
      }
      var v18494 = v22139;
      if (v18494) {
        i$$92 = {};
      }
      var v13064 = k$$8 === j$$21;
      if (v13064) {
        i$$92 = this;
        --j$$21;
      }
      var v6082 = j$$21 < k$$8;
      for (;v6082;) {
        if ((a$$52 = arguments[j$$21]) != null) {
          for (c$$23 in a$$52) {
            d$$25 = i$$92[c$$23];
            f$$9 = a$$52[c$$23];
            if (i$$92 === f$$9) {
              continue;
            }
            var v6080;
            var v18495 = l$$25 && f$$9;
            if (v18495) {
              var v22140 = JAM.call(e$$61.isPlainObject, e$$61, [f$$9], JAM.policy.p3);
              if (!v22140) {
                v22140 = g$$12 = JAM.call(e$$61.isArray, e$$61, [f$$9], JAM.policy.p3);
              }
              v18495 = v22140;
            }
            if (v18495) {
              var v18496;
              if (g$$12) {
                g$$12 = !1;
                var v26042;
                var v28635 = d$$25;
                if (v28635) {
                  v28635 = JAM.call(e$$61.isArray, e$$61, [d$$25], JAM.policy.p3);
                }
                if (v28635) {
                  v26042 = d$$25;
                } else {
                  v26042 = [];
                }
                v18496 = h$$18 = v26042;
              } else {
                var v22141;
                var v27616 = d$$25;
                if (v27616) {
                  v27616 = JAM.call(e$$61.isPlainObject, e$$61, [d$$25], JAM.policy.p3);
                }
                if (v27616) {
                  v22141 = d$$25;
                } else {
                  v22141 = {};
                }
                v18496 = h$$18 = v22141;
              }
              v18496;
              var v31144 = JAM.call(e$$61.extend, e$$61, [l$$25, h$$18, f$$9], JAM.policy.p3);
              v6080 = JAM.set(i$$92, c$$23, v31144, JAM.policy.p2);
            } else {
              var v13066 = f$$9 !== b$$9;
              if (v13066) {
                v13066 = JAM.set(i$$92, c$$23, f$$9, JAM.policy.p2);
              }
              v6080 = v13066;
            }
            v6080;
          }
        }
        j$$21++;
        v6082 = j$$21 < k$$8;
      }
      return i$$92;
    }
    function v636() {
      var v6083 = this.prevObject;
      if (!v6083) {
        v6083 = JAM.call(this.constructor, this, [null], JAM.policy.p3);
      }
      return v6083;
    }
    function v635(a$$51) {
      function v634(b$$32, c$$22) {
        return JAM.call(a$$51.call, a$$51, [b$$32, c$$22, b$$32], JAM.policy.p3);
      }
      return JAM.call(this.pushStack, this, [JAM.call(e$$61.map, e$$61, [this, v634], JAM.policy.p3)], JAM.policy.p3);
    }
    function v633() {
      var v6085 = JAM.call(F$$1.apply, F$$1, [this, arguments], JAM.policy.p3);
      var v13069 = JAM.call(F$$1.call, F$$1, [arguments], JAM.policy.p3);
      return JAM.call(this.pushStack, this, [v6085, "slice", JAM.call(v13069.join, v13069, [","], JAM.policy.p3)], JAM.policy.p3);
    }
    function v632() {
      return JAM.call(this.eq, this, [-1], JAM.policy.p3);
    }
    function v631() {
      return JAM.call(this.eq, this, [0], JAM.policy.p3);
    }
    function v630(a$$50) {
      a$$50 = +a$$50;
      var v6087;
      if (a$$50 === -1) {
        v6087 = JAM.call(this.slice, this, [a$$50], JAM.policy.p3);
      } else {
        v6087 = JAM.call(this.slice, this, [a$$50, a$$50 + 1], JAM.policy.p3);
      }
      return v6087;
    }
    function v629(a$$49) {
      JAM.call(e$$61.bindReady, e$$61, [], JAM.policy.p3);
      JAM.call(A$$1.add, A$$1, [a$$49], JAM.policy.p3);
      return this;
    }
    function v628(a$$48, b$$31) {
      return JAM.call(e$$61.each, e$$61, [this, a$$48, b$$31], JAM.policy.p3);
    }
    function v627(a$$47, b$$30, c$$21) {
      var d$$24 = JAM.call(this.constructor, this, [], JAM.policy.p3);
      var v22142;
      if (JAM.call(e$$61.isArray, e$$61, [a$$47], JAM.policy.p3)) {
        v22142 = JAM.call(E$$1.apply, E$$1, [d$$24, a$$47], JAM.policy.p3);
      } else {
        v22142 = JAM.call(e$$61.merge, e$$61, [d$$24, a$$47], JAM.policy.p3);
      }
      v22142;
      d$$24.prevObject = this;
      d$$24.context = this.context;
      var v13072;
      if (b$$30 === "find") {
        var v22143 = this.selector;
        var v26045;
        if (this.selector) {
          v26045 = " ";
        } else {
          v26045 = "";
        }
        v13072 = d$$24.selector = v22143 + v26045 + c$$21;
      } else {
        var v18498 = b$$30;
        if (v18498) {
          v18498 = d$$24.selector = this.selector + "." + b$$30 + "(" + c$$21 + ")";
        }
        v13072 = v18498;
      }
      v13072;
      return d$$24;
    }
    function v626(a$$46) {
      var v6088;
      if (a$$46 == null) {
        v6088 = JAM.call(this.toArray, this, [], JAM.policy.p3);
      } else {
        var v13073;
        if (a$$46 < 0) {
          v13073 = this[this.length + a$$46];
        } else {
          v13073 = this[a$$46];
        }
        v6088 = v13073;
      }
      return v6088;
    }
    function v625() {
      return JAM.call(F$$1.call, F$$1, [this, 0], JAM.policy.p3);
    }
    function v624() {
      return this.length;
    }
    function v623(a$$45, d$$23, f$$8) {
      var g$$11;
      var h$$17;
      var j$$20;
      var k$$7;
      if (!a$$45) {
        return this;
      }
      if (a$$45.nodeType) {
        this.context = this[0] = a$$45;
        this.length = 1;
        return this;
      }
      var v18502 = a$$45 === "body";
      if (v18502) {
        v18502 = !d$$23;
      }
      var v13075 = v18502;
      if (v13075) {
        v13075 = c$$5.body;
      }
      if (v13075) {
        this.context = c$$5;
        this[0] = c$$5.body;
        this.selector = a$$45;
        this.length = 1;
        return this;
      }
      if (typeof a$$45 == "string") {
        var v6092;
        var v22147 = JAM.call(a$$45.charAt, a$$45, [0], JAM.policy.p3) !== "<";
        if (!v22147) {
          v22147 = JAM.call(a$$45.charAt, a$$45, [a$$45.length - 1], JAM.policy.p3) !== ">";
        }
        var v18503 = v22147;
        if (!v18503) {
          v18503 = a$$45.length < 3;
        }
        if (v18503) {
          v6092 = g$$11 = JAM.call(i$$91.exec, i$$91, [a$$45], JAM.policy.p3);
        } else {
          v6092 = g$$11 = [null, a$$45, null];
        }
        v6092;
        var v13078 = g$$11;
        if (v13078) {
          var v18504 = g$$11[1];
          if (!v18504) {
            v18504 = !d$$23;
          }
          v13078 = v18504;
        }
        if (v13078) {
          if (g$$11[1]) {
            var v22151;
            if (d$$23 instanceof e$$61) {
              v22151 = d$$23[0];
            } else {
              v22151 = d$$23;
            }
            d$$23 = v22151;
            var v22152;
            if (d$$23) {
              var v26051 = d$$23.ownerDocument;
              if (!v26051) {
                v26051 = d$$23;
              }
              v22152 = v26051;
            } else {
              v22152 = c$$5;
            }
            k$$7 = v22152;
            j$$20 = JAM.call(m$$6.exec, m$$6, [a$$45], JAM.policy.p3);
            var v13079;
            if (j$$20) {
              var v18505;
              if (JAM.call(e$$61.isPlainObject, e$$61, [d$$23], JAM.policy.p3)) {
                a$$45 = [JAM.call(c$$5.createElement, c$$5, [j$$20[1]], JAM.policy.p3)];
                var v26053 = e$$61.fn.attr;
                v18505 = JAM.call(v26053.call, v26053, [a$$45, d$$23, !0], JAM.policy.p3);
              } else {
                v18505 = a$$45 = [JAM.call(k$$7.createElement, k$$7, [j$$20[1]], JAM.policy.p3)];
              }
              v13079 = v18505;
            } else {
              j$$20 = JAM.call(e$$61.buildFragment, e$$61, [[g$$11[1]], [k$$7]], JAM.policy.p3);
              var v26057;
              if (j$$20.cacheable) {
                v26057 = JAM.call(e$$61.clone, e$$61, [j$$20.fragment], JAM.policy.p3);
              } else {
                v26057 = j$$20.fragment;
              }
              v13079 = a$$45 = v26057.childNodes;
            }
            v13079;
            return JAM.call(e$$61.merge, e$$61, [this, a$$45], JAM.policy.p3);
          }
          h$$17 = JAM.call(c$$5.getElementById, c$$5, [g$$11[2]], JAM.policy.p3);
          var v13080 = h$$17;
          if (v13080) {
            v13080 = h$$17.parentNode;
          }
          if (v13080) {
            if (h$$17.id !== g$$11[2]) {
              return JAM.call(f$$8.find, f$$8, [a$$45], JAM.policy.p3);
            }
            this.length = 1;
            this[0] = h$$17;
          }
          this.context = c$$5;
          this.selector = a$$45;
          return this;
        }
        var v6098;
        var v18506 = !d$$23;
        if (!v18506) {
          v18506 = d$$23.jquery;
        }
        if (v18506) {
          var v13083 = d$$23 || f$$8;
          v6098 = JAM.call(v13083.find, v13083, [a$$45], JAM.policy.p3);
        } else {
          var v13084 = JAM.call(this.constructor, this, [d$$23], JAM.policy.p3);
          v6098 = JAM.call(v13084.find, v13084, [a$$45], JAM.policy.p3);
        }
        return v6098;
      }
      if (JAM.call(e$$61.isFunction, e$$61, [a$$45], JAM.policy.p3)) {
        return JAM.call(f$$8.ready, f$$8, [a$$45], JAM.policy.p3);
      }
      var v6101 = a$$45.selector !== b$$9;
      if (v6101) {
        this.selector = a$$45.selector;
        this.context = a$$45.context;
      }
      return JAM.call(e$$61.makeArray, e$$61, [a$$45, this], JAM.policy.p3);
    }
    function x$$68(a$$44, b$$29) {
      var v6102 = b$$29 + "";
      return JAM.call(v6102.toUpperCase, v6102, [], JAM.policy.p3);
    }
    function e$$61(a$$43, b$$28) {
      return JAM.new(e$$61.fn.init, [a$$43, b$$28, h$$16]);
    }
    function J$$1() {
      if (!e$$61.isReady) {
        try {
          var v6104 = c$$5.documentElement;
          JAM.call(v6104.doScroll, v6104, ["left"], JAM.policy.p3);
        } catch (a$$42) {
          JAM.call(setTimeout, null, [J$$1, 1]);
          return;
        }
        JAM.call(e$$61.ready, e$$61, [], JAM.policy.p3);
      }
      return;
    }
    var f$$7 = a$$13.jQuery;
    var g$$10 = a$$13.$;
    var h$$16;
    var i$$91 = /^(?:[^#<]*(<[\w\W]+>)[^>]*$|#([\w\-]*)$)/;
    var j$$19 = /\S/;
    var k$$6 = /^\s+/;
    var l$$24 = /\s+$/;
    var m$$6 = /^<(\w+)\s*\/?>(?:<\/\1>)?$/;
    var n$$59 = /^[\],:{}\s]*$/;
    var o$$2 = /\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g;
    var p$$24 = /"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g;
    var q$$1 = /(?:^|:|,)(?:\s*\[)+/g;
    var r$$3 = /(webkit)[ \/]([\w.]+)/;
    var s$$16 = /(opera)(?:.*version)?[ \/]([\w.]+)/;
    var t$$3 = /(msie) ([\w.]+)/;
    var u$$2 = /(mozilla)(?:.*? rv:([\w.]+))?/;
    var v$$5 = /-([a-z]|[0-9])/ig;
    var w$$12 = /^-ms-/;
    var y$$50 = d$$6.userAgent;
    var z$$3;
    var A$$1;
    var B$$1;
    var C$$1 = Object.prototype.toString;
    var D$$1 = Object.prototype.hasOwnProperty;
    var E$$1 = Array.prototype.push;
    var F$$1 = Array.prototype.slice;
    var G$$1 = String.prototype.trim;
    var H$$1 = Array.prototype.indexOf;
    var I$$1 = {};
    e$$61.fn = e$$61.prototype = {constructor:e$$61, init:v623, selector:"", jquery:"1.7.2", length:0, size:v624, toArray:v625, get:v626, pushStack:v627, each:v628, ready:v629, eq:v630, first:v631, last:v632, slice:v633, map:v635, end:v636, push:E$$1, sort:[].sort, splice:[].splice};
    e$$61.fn.init.prototype = e$$61.fn;
    e$$61.extend = e$$61.fn.extend = v637;
    var v29975 = !1;
    var v30208 = Array.isArray;
    if (!v30208) {
      v30208 = v643;
    }
    var v29976 = v30208;
    var v30209;
    if (G$$1) {
      v30209 = v658;
    } else {
      v30209 = v659;
    }
    JAM.call(e$$61.extend, e$$61, [{noConflict:v638, isReady:v29975, readyWait:1, holdReady:v639, ready:v640, bindReady:v641, isFunction:v642, isArray:v29976, isWindow:v644, isNumeric:v645, type:v646, isPlainObject:v647, isEmptyObject:v648, error:v649, parseJSON:v650, parseXML:v651, noop:v652, globalEval:v654, camelCase:v655, nodeName:v656, each:v657, trim:v30209, makeArray:v660, inArray:v661, merge:v662, grep:v663, map:v664, guid:1, proxy:v665, access:v667, now:v668, uaMatch:v669, sub:v671, browser:{}}], 
    JAM.policy.p3);
    JAM.call(e$$61.each, e$$61, [JAM.call("Boolean Number String Function Array Date RegExp Object".split, "Boolean Number String Function Array Date RegExp Object", [" "], JAM.policy.p3), v672], JAM.policy.p3);
    z$$3 = JAM.call(e$$61.uaMatch, e$$61, [y$$50], JAM.policy.p3);
    var v27625 = z$$3.browser;
    if (v27625) {
      JAM.set(e$$61.browser, z$$3.browser, !0, JAM.policy.p2);
      e$$61.browser.version = z$$3.version;
    }
    var v26058 = e$$61.browser.webkit;
    if (v26058) {
      e$$61.browser.safari = !0;
    }
    var v22159 = JAM.call(j$$19.test, j$$19, ["\u00a0"], JAM.policy.p3);
    if (v22159) {
      k$$6 = /^[\s\xA0]+/;
      l$$24 = /[\s\xA0]+$/;
    }
    h$$16 = e$$61(c$$5);
    var v13089;
    if (c$$5.addEventListener) {
      v13089 = B$$1 = v673;
    } else {
      var v18507 = c$$5.attachEvent;
      if (v18507) {
        v18507 = B$$1 = v674;
      }
      v13089 = v18507;
    }
    v13089;
    return e$$61;
  }
  function I(a$$142) {
    var v6112;
    if (f$$4.event.special.hover) {
      v6112 = a$$142;
    } else {
      v6112 = JAM.call(a$$142.replace, a$$142, [B, "mouseenter$1 mouseleave$1"], JAM.policy.p3);
    }
    return v6112;
  }
  function G(a$$140) {
    var b$$93 = JAM.call(F.exec, F, [a$$140], JAM.policy.p3);
    if (b$$93) {
      var v22161 = b$$93[1];
      if (!v22161) {
        v22161 = "";
      }
      var v18510 = v22161;
      var v31145 = JAM.call(v18510.toLowerCase, v18510, [], JAM.policy.p3);
      b$$93[1] = v31145;
      var v18511 = b$$93[3];
      if (v18511) {
        v18511 = new RegExp("(?:^|\\s)" + b$$93[3] + "(?:\\s|$)");
      }
      b$$93[3] = v18511;
    }
    return b$$93;
  }
  function cy(a$$14) {
    var v6113;
    if (JAM.call(f$$4.isWindow, f$$4, [a$$14], JAM.policy.p3)) {
      v6113 = a$$14;
    } else {
      var v13091;
      if (a$$14.nodeType === 9) {
        var v18512 = a$$14.defaultView;
        if (!v18512) {
          v18512 = a$$14.parentWindow;
        }
        v13091 = v18512;
      } else {
        v13091 = !1;
      }
      v6113 = v13091;
    }
    return v6113;
  }
  function cu(a$$15) {
    if (!cj[a$$15]) {
      var b$$10 = c$$5.body;
      var v6114 = JAM.call(f$$4, null, ["<" + a$$15 + ">"], JAM.policy.p3);
      var d$$7 = JAM.call(v6114.appendTo, v6114, [b$$10], JAM.policy.p3);
      var e$$48 = JAM.call(d$$7.css, d$$7, ["display"], JAM.policy.p3);
      JAM.call(d$$7.remove, d$$7, [], JAM.policy.p3);
      var v13095 = e$$48 === "none";
      if (!v13095) {
        v13095 = e$$48 === "";
      }
      if (v13095) {
        if (!ck) {
          ck = JAM.call(c$$5.createElement, c$$5, ["iframe"], JAM.policy.p3);
          ck.frameBorder = ck.width = ck.height = 0;
        }
        JAM.call(b$$10.appendChild, b$$10, [ck], JAM.policy.p3);
        var v13096 = !cl;
        if (!v13096) {
          v13096 = !ck.createElement;
        }
        if (v13096) {
          var v22165 = ck.contentWindow;
          if (!v22165) {
            v22165 = ck.contentDocument;
          }
          cl = v22165.document;
          var v26062;
          if (f$$4.support.boxModel) {
            v26062 = "<!doctype html>";
          } else {
            v26062 = "";
          }
          JAM.call(cl.write, cl, [v26062 + "<html><body>"], JAM.policy.p3);
          JAM.call(cl.close, cl, [], JAM.policy.p3);
        }
        d$$7 = JAM.call(cl.createElement, cl, [a$$15], JAM.policy.p3);
        var v22167 = cl.body;
        JAM.call(v22167.appendChild, v22167, [d$$7], JAM.policy.p3);
        e$$48 = JAM.call(f$$4.css, f$$4, [d$$7, "display"], JAM.policy.p3);
        JAM.call(b$$10.removeChild, b$$10, [ck], JAM.policy.p3);
      }
      JAM.set(cj, a$$15, e$$48, JAM.policy.p2);
    }
    return cj[a$$15];
  }
  function ct(a$$16, b$$11) {
    function v615() {
      JAM.set(c$$6, this, a$$16, JAM.policy.p2);
      return;
    }
    var c$$6 = {};
    var v13097 = cp.concat;
    JAM.call(f$$4.each, f$$4, [JAM.call(v13097.apply, v13097, [[], JAM.call(cp.slice, cp, [0, b$$11], JAM.policy.p3)], JAM.policy.p3), v615], JAM.policy.p3);
    return c$$6;
  }
  function cs() {
    cq = b$$9;
    return;
  }
  function cr() {
    JAM.call(setTimeout, null, [cs, 0]);
    return cq = JAM.call(f$$4.now, f$$4, [], JAM.policy.p3);
  }
  function ch$$14() {
    try {
      return new a$$13.XMLHttpRequest;
    } catch (b$$13) {
    }
    return;
  }
  function b_(a$$19, b$$14, c$$9, d$$10) {
    function v616(b$$15, e$$52) {
      var v6120;
      var v18521 = c$$9;
      if (!v18521) {
        v18521 = JAM.call(bD.test, bD, [a$$19], JAM.policy.p3);
      }
      if (v18521) {
        v6120 = JAM.call(d$$10, null, [a$$19, e$$52], JAM.policy.p3);
      } else {
        var v22169 = a$$19 + "[";
        var v26063;
        if (typeof e$$52 == "object") {
          v26063 = b$$15;
        } else {
          v26063 = "";
        }
        v6120 = b_(v22169 + v26063 + "]", e$$52, c$$9, d$$10);
      }
      v6120;
      return;
    }
    if (JAM.call(f$$4.isArray, f$$4, [b$$14], JAM.policy.p3)) {
      JAM.call(f$$4.each, f$$4, [b$$14, v616], JAM.policy.p3);
    } else {
      var v13101 = !c$$9;
      if (v13101) {
        v13101 = JAM.call(f$$4.type, f$$4, [b$$14], JAM.policy.p3) === "object";
      }
      if (v13101) {
        var e$$51;
        for (e$$51 in b$$14) {
          b_(a$$19 + "[" + e$$51 + "]", b$$14[e$$51], c$$9, d$$10);
        }
      } else {
        JAM.call(d$$10, null, [a$$19, b$$14], JAM.policy.p3);
      }
    }
    return;
  }
  function b$(a$$20, c$$10) {
    var d$$11;
    var e$$53;
    var v6125 = f$$4.ajaxSettings.flatOptions;
    if (!v6125) {
      v6125 = {};
    }
    var g$$3 = v6125;
    for (d$$11 in c$$10) {
      var v6126 = c$$10[d$$11] !== b$$9;
      if (v6126) {
        var v18525;
        if (g$$3[d$$11]) {
          v18525 = a$$20;
        } else {
          var v22171 = e$$53;
          if (!v22171) {
            v22171 = e$$53 = {};
          }
          v18525 = v22171;
        }
        JAM.set(v18525, d$$11, c$$10[d$$11], JAM.policy.p2);
      }
    }
    if (e$$53) {
      JAM.call(f$$4.extend, f$$4, [!0, a$$20, e$$53], JAM.policy.p3);
    }
    return;
  }
  function bZ(a$$21, c$$11, d$$12, e$$54, f$$6, g$$4) {
    var v18526 = f$$6;
    if (!v18526) {
      v18526 = c$$11.dataTypes[0];
    }
    f$$6 = v18526;
    g$$4 = g$$4 || {};
    JAM.set(g$$4, f$$6, !0, JAM.policy.p2);
    var h$$12 = a$$21[f$$6];
    var i$$88 = 0;
    var v6127;
    if (h$$12) {
      v6127 = h$$12.length;
    } else {
      v6127 = 0;
    }
    var j$$17 = v6127;
    var k$$5 = a$$21 === bS;
    var l$$23;
    var v13108 = i$$88 < j$$17;
    if (v13108) {
      var v18527 = k$$5;
      if (!v18527) {
        v18527 = !l$$23;
      }
      v13108 = v18527;
    }
    var v6128 = v13108;
    for (;v6128;) {
      l$$23 = JAM.call(h$$12[i$$88], h$$12, [c$$11, d$$12, e$$54], JAM.policy.p3);
      var v13109 = typeof l$$23 == "string";
      if (v13109) {
        var v18529;
        var v26065 = !k$$5;
        if (!v26065) {
          v26065 = g$$4[l$$23];
        }
        if (v26065) {
          v18529 = l$$23 = b$$9;
        } else {
          var v26066 = c$$11.dataTypes;
          JAM.call(v26066.unshift, v26066, [l$$23], JAM.policy.p3);
          v18529 = l$$23 = bZ(a$$21, c$$11, d$$12, e$$54, l$$23, g$$4);
        }
        v18529;
      }
      i$$88++;
      var v13110 = i$$88 < j$$17;
      if (v13110) {
        var v18530 = k$$5;
        if (!v18530) {
          v18530 = !l$$23;
        }
        v13110 = v18530;
      }
      v6128 = v13110;
    }
    var v18531 = k$$5;
    if (!v18531) {
      v18531 = !l$$23;
    }
    var v13111 = v18531;
    if (v13111) {
      v13111 = !g$$4["*"];
    }
    var v6129 = v13111;
    if (v6129) {
      l$$23 = bZ(a$$21, c$$11, d$$12, e$$54, "*", g$$4);
    }
    return l$$23;
  }
  function bY(a$$22) {
    function v617(b$$16, c$$12) {
      var v6130 = typeof b$$16 != "string";
      if (v6130) {
        c$$12 = b$$16;
        b$$16 = "*";
      }
      if (JAM.call(f$$4.isFunction, f$$4, [c$$12], JAM.policy.p3)) {
        var v6131 = JAM.call(b$$16.toLowerCase, b$$16, [], JAM.policy.p3);
        var d$$13 = JAM.call(v6131.split, v6131, [bO], JAM.policy.p3);
        var e$$55 = 0;
        var g$$5 = d$$13.length;
        var h$$13;
        var i$$89;
        var j$$18;
        var v6132 = e$$55 < g$$5;
        for (;v6132;) {
          h$$13 = d$$13[e$$55];
          j$$18 = JAM.call(/^\+/.test, /^\+/, [h$$13], JAM.policy.p3);
          if (j$$18) {
            var v26067 = JAM.call(h$$13.substr, h$$13, [1], JAM.policy.p3);
            if (!v26067) {
              v26067 = "*";
            }
            h$$13 = v26067;
          }
          var v18533 = a$$22[h$$13];
          if (!v18533) {
            v18533 = [];
          }
          i$$89 = JAM.set(a$$22, h$$13, v18533, JAM.policy.p2);
          var v18534;
          if (j$$18) {
            v18534 = "unshift";
          } else {
            v18534 = "push";
          }
          JAM.call(i$$89[v18534], i$$89, [c$$12], JAM.policy.p3);
          e$$55++;
          v6132 = e$$55 < g$$5;
        }
      }
      return;
    }
    return v617;
  }
  function bB(a$$23, b$$17, c$$13) {
    var v6134;
    if (b$$17 === "width") {
      v6134 = a$$23.offsetWidth;
    } else {
      v6134 = a$$23.offsetHeight;
    }
    var d$$14 = v6134;
    var v6135;
    if (b$$17 === "width") {
      v6135 = 1;
    } else {
      v6135 = 0;
    }
    var e$$56 = v6135;
    var g$$6 = 4;
    if (d$$14 > 0) {
      if (c$$13 !== "border") {
        var v6136 = e$$56 < g$$6;
        for (;v6136;) {
          if (!c$$13) {
            var v26068 = parseFloat(JAM.call(f$$4.css, f$$4, [a$$23, "padding" + bx[e$$56]], JAM.policy.p3));
            if (!v26068) {
              v26068 = 0;
            }
            d$$14 = d$$14 - v26068;
          }
          var v13116;
          if (c$$13 === "margin") {
            var v26069 = parseFloat(JAM.call(f$$4.css, f$$4, [a$$23, c$$13 + bx[e$$56]], JAM.policy.p3));
            if (!v26069) {
              v26069 = 0;
            }
            v13116 = d$$14 = d$$14 + v26069;
          } else {
            var v26070 = parseFloat(JAM.call(f$$4.css, f$$4, [a$$23, "border" + bx[e$$56] + "Width"], JAM.policy.p3));
            if (!v26070) {
              v26070 = 0;
            }
            v13116 = d$$14 = d$$14 - v26070;
          }
          v13116;
          e$$56 = e$$56 + 2;
          v6136 = e$$56 < g$$6;
        }
      }
      return d$$14 + "px";
    }
    d$$14 = JAM.call(by, null, [a$$23, b$$17], JAM.policy.p3);
    var v13117 = d$$14 < 0;
    if (!v13117) {
      v13117 = d$$14 == null;
    }
    if (v13117) {
      d$$14 = a$$23.style[b$$17];
    }
    if (JAM.call(bt.test, bt, [d$$14], JAM.policy.p3)) {
      return d$$14;
    }
    var v6142 = parseFloat(d$$14);
    if (!v6142) {
      v6142 = 0;
    }
    d$$14 = v6142;
    if (c$$13) {
      var v6143 = e$$56 < g$$6;
      for (;v6143;) {
        var v26071 = parseFloat(JAM.call(f$$4.css, f$$4, [a$$23, "padding" + bx[e$$56]], JAM.policy.p3));
        if (!v26071) {
          v26071 = 0;
        }
        d$$14 = d$$14 + v26071;
        var v18538 = c$$13 !== "padding";
        if (v18538) {
          var v27641 = parseFloat(JAM.call(f$$4.css, f$$4, [a$$23, "border" + bx[e$$56] + "Width"], JAM.policy.p3));
          if (!v27641) {
            v27641 = 0;
          }
          d$$14 = d$$14 + v27641;
        }
        var v13119 = c$$13 === "margin";
        if (v13119) {
          var v26073 = parseFloat(JAM.call(f$$4.css, f$$4, [a$$23, c$$13 + bx[e$$56]], JAM.policy.p3));
          if (!v26073) {
            v26073 = 0;
          }
          d$$14 = d$$14 + v26073;
        }
        e$$56 = e$$56 + 2;
        v6143 = e$$56 < g$$6;
      }
    }
    return d$$14 + "px";
  }
  function bn(a$$25) {
    var v13120 = a$$25.nodeName;
    if (!v13120) {
      v13120 = "";
    }
    var v6144 = v13120;
    var b$$19 = JAM.call(v6144.toLowerCase, v6144, [], JAM.policy.p3);
    var v6145;
    if (b$$19 === "input") {
      v6145 = bm(a$$25);
    } else {
      var v18540 = b$$19 !== "script";
      if (v18540) {
        v18540 = typeof a$$25.getElementsByTagName != "undefined";
      }
      var v13121 = v18540;
      if (v13121) {
        v13121 = JAM.call(f$$4.grep, f$$4, [JAM.call(a$$25.getElementsByTagName, a$$25, ["input"], JAM.policy.p3), bm], JAM.policy.p3);
      }
      v6145 = v13121;
    }
    v6145;
    return;
  }
  function bm(a$$26) {
    var v13123 = a$$26.type === "checkbox";
    if (!v13123) {
      v13123 = a$$26.type === "radio";
    }
    if (v13123) {
      a$$26.defaultChecked = a$$26.checked;
    }
    return;
  }
  function bl(a$$27) {
    var v6147;
    if (typeof a$$27.getElementsByTagName != "undefined") {
      v6147 = JAM.call(a$$27.getElementsByTagName, a$$27, ["*"], JAM.policy.p3);
    } else {
      var v13124;
      if (typeof a$$27.querySelectorAll != "undefined") {
        v13124 = JAM.call(a$$27.querySelectorAll, a$$27, ["*"], JAM.policy.p3);
      } else {
        v13124 = [];
      }
      v6147 = v13124;
    }
    return v6147;
  }
  function bk(a$$28, b$$20) {
    var c$$14;
    var v6148 = b$$20.nodeType === 1;
    if (v6148) {
      var v29290 = b$$20.clearAttributes;
      if (v29290) {
        JAM.call(b$$20.clearAttributes, b$$20, [], JAM.policy.p3);
      }
      var v29291 = b$$20.mergeAttributes;
      if (v29291) {
        JAM.call(b$$20.mergeAttributes, b$$20, [a$$28], JAM.policy.p3);
      }
      var v28647 = b$$20.nodeName;
      c$$14 = JAM.call(v28647.toLowerCase, v28647, [], JAM.policy.p3);
      var v27644;
      if (c$$14 === "object") {
        v27644 = JAM.set(b$$20, "outerHTML", a$$28.outerHTML);
      } else {
        var v28648;
        var v29710 = c$$14 !== "input";
        if (!v29710) {
          var v29979 = a$$28.type !== "checkbox";
          if (v29979) {
            v29979 = a$$28.type !== "radio";
          }
          v29710 = v29979;
        }
        if (v29710) {
          var v29292;
          if (c$$14 === "option") {
            v29292 = b$$20.selected = a$$28.defaultSelected;
          } else {
            var v29711;
            var v30212 = c$$14 === "input";
            if (!v30212) {
              v30212 = c$$14 === "textarea";
            }
            if (v30212) {
              v29711 = b$$20.defaultValue = a$$28.defaultValue;
            } else {
              var v30213 = c$$14 === "script";
              if (v30213) {
                v30213 = b$$20.text !== a$$28.text;
              }
              var v29981 = v30213;
              if (v29981) {
                v29981 = b$$20.text = a$$28.text;
              }
              v29711 = v29981;
            }
            v29292 = v29711;
          }
          v28648 = v29292;
        } else {
          var v29713 = a$$28.checked;
          if (v29713) {
            b$$20.defaultChecked = b$$20.checked = a$$28.checked;
          }
          var v29714 = b$$20.value !== a$$28.value;
          if (v29714) {
            v29714 = b$$20.value = a$$28.value;
          }
          v28648 = v29714;
        }
        v27644 = v28648;
      }
      v27644;
      JAM.call(b$$20.removeAttribute, b$$20, [f$$4.expando], JAM.policy.p3);
      JAM.call(b$$20.removeAttribute, b$$20, ["_submit_attached"], JAM.policy.p3);
      JAM.call(b$$20.removeAttribute, b$$20, ["_change_attached"], JAM.policy.p3);
    }
    return;
  }
  function bj(a$$29, b$$21) {
    var v13127 = b$$21.nodeType === 1;
    if (v13127) {
      v13127 = !!JAM.call(f$$4.hasData, f$$4, [a$$29], JAM.policy.p3);
    }
    if (v13127) {
      var c$$15;
      var d$$15;
      var e$$57;
      var g$$7 = JAM.call(f$$4._data, f$$4, [a$$29], JAM.policy.p3);
      var h$$14 = JAM.call(f$$4._data, f$$4, [b$$21, g$$7], JAM.policy.p3);
      var i$$90 = g$$7.events;
      if (i$$90) {
        delete h$$14.handle;
        h$$14.events = {};
        for (c$$15 in i$$90) {
          d$$15 = 0;
          e$$57 = i$$90[c$$15].length;
          var v6151 = d$$15 < e$$57;
          for (;v6151;) {
            var v6149 = f$$4.event;
            JAM.call(v6149.add, v6149, [b$$21, c$$15, i$$90[c$$15][d$$15]], JAM.policy.p3);
            d$$15++;
            v6151 = d$$15 < e$$57;
          }
        }
      }
      var v6152 = h$$14.data;
      if (v6152) {
        var v31146 = JAM.call(f$$4.extend, f$$4, [{}, h$$14.data], JAM.policy.p3);
        h$$14.data = v31146;
      }
    }
    return;
  }
  function bi(a$$30, b$$22) {
    var v6154;
    if (JAM.call(f$$4.nodeName, f$$4, [a$$30, "table"], JAM.policy.p3)) {
      var v13131 = JAM.call(a$$30.getElementsByTagName, a$$30, ["tbody"], JAM.policy.p3)[0];
      if (!v13131) {
        var v22189 = a$$30.ownerDocument;
        v13131 = JAM.call(a$$30.appendChild, a$$30, [JAM.call(v22189.createElement, v22189, ["tbody"], JAM.policy.p3)], JAM.policy.p3);
      }
      v6154 = v13131;
    } else {
      v6154 = a$$30;
    }
    return v6154;
  }
  function U(a$$31) {
    var b$$23 = JAM.call(V.split, V, ["|"], JAM.policy.p3);
    var c$$16 = JAM.call(a$$31.createDocumentFragment, a$$31, [], JAM.policy.p3);
    if (c$$16.createElement) {
      var v6156 = b$$23.length;
      for (;v6156;) {
        JAM.call(c$$16.createElement, c$$16, [JAM.call(b$$23.pop, b$$23, [], JAM.policy.p3)], JAM.policy.p3);
        v6156 = b$$23.length;
      }
    }
    return c$$16;
  }
  function T$$2(a$$32, b$$24, c$$17) {
    function v621(a$$36, d$$19) {
      return JAM.call(f$$4.inArray, f$$4, [a$$36, b$$24], JAM.policy.p3) >= 0 === c$$17;
    }
    function v620(a$$35) {
      return a$$35.nodeType === 1;
    }
    function v619(a$$34, d$$18) {
      return a$$34 === b$$24 === c$$17;
    }
    function v618(a$$33, d$$17) {
      var e$$58 = !!JAM.call(b$$24.call, b$$24, [a$$33, d$$17, a$$33], JAM.policy.p3);
      return e$$58 === c$$17;
    }
    b$$24 = b$$24 || 0;
    if (JAM.call(f$$4.isFunction, f$$4, [b$$24], JAM.policy.p3)) {
      return JAM.call(f$$4.grep, f$$4, [a$$32, v618], JAM.policy.p3);
    }
    if (b$$24.nodeType) {
      return JAM.call(f$$4.grep, f$$4, [a$$32, v619], JAM.policy.p3);
    }
    if (typeof b$$24 == "string") {
      var d$$16 = JAM.call(f$$4.grep, f$$4, [a$$32, v620], JAM.policy.p3);
      if (JAM.call(O.test, O, [b$$24], JAM.policy.p3)) {
        return JAM.call(f$$4.filter, f$$4, [b$$24, d$$16, !c$$17], JAM.policy.p3);
      }
      b$$24 = JAM.call(f$$4.filter, f$$4, [b$$24, d$$16], JAM.policy.p3);
    }
    return JAM.call(f$$4.grep, f$$4, [a$$32, v621], JAM.policy.p3);
  }
  function S(a$$37) {
    var v13136 = !a$$37;
    if (!v13136) {
      v13136 = !a$$37.parentNode;
    }
    var v6167 = v13136;
    if (!v6167) {
      v6167 = a$$37.parentNode.nodeType === 11;
    }
    return v6167;
  }
  function K() {
    return!0;
  }
  function J() {
    return!1;
  }
  function n$$57(a$$38, b$$25, c$$18) {
    function v622() {
      var v13139 = !JAM.call(f$$4._data, f$$4, [a$$38, e$$59], JAM.policy.p3);
      if (v13139) {
        v13139 = !JAM.call(f$$4._data, f$$4, [a$$38, g$$8], JAM.policy.p3);
      }
      var v6168 = v13139;
      if (v6168) {
        JAM.call(f$$4.removeData, f$$4, [a$$38, d$$20, !0], JAM.policy.p3);
        JAM.call(h$$15.fire, h$$15, [], JAM.policy.p3);
      }
      return;
    }
    var d$$20 = b$$25 + "defer";
    var e$$59 = b$$25 + "queue";
    var g$$8 = b$$25 + "mark";
    var h$$15 = JAM.call(f$$4._data, f$$4, [a$$38, d$$20], JAM.policy.p3);
    var v18558 = h$$15;
    if (v18558) {
      var v22190 = c$$18 === "queue";
      if (!v22190) {
        v22190 = !JAM.call(f$$4._data, f$$4, [a$$38, e$$59], JAM.policy.p3);
      }
      v18558 = v22190;
    }
    var v13140 = v18558;
    if (v13140) {
      var v18559 = c$$18 === "mark";
      if (!v18559) {
        v18559 = !JAM.call(f$$4._data, f$$4, [a$$38, g$$8], JAM.policy.p3);
      }
      v13140 = v18559;
    }
    var v6169 = v13140;
    if (v6169) {
      JAM.call(setTimeout, null, [v622, 0]);
    }
    return;
  }
  function m$$4(a$$39) {
    var b$$26;
    for (b$$26 in a$$39) {
      var v13141 = b$$26 === "data";
      if (v13141) {
        v13141 = JAM.call(f$$4.isEmptyObject, f$$4, [a$$39[b$$26]], JAM.policy.p3);
      }
      if (v13141) {
        continue;
      }
      if (b$$26 !== "toJSON") {
        return!1;
      }
    }
    return!0;
  }
  function l$$21(a$$40, c$$19, d$$21) {
    var v13142 = d$$21 === b$$9;
    if (v13142) {
      v13142 = a$$40.nodeType === 1;
    }
    if (v13142) {
      var v13143 = JAM.call(c$$19.replace, c$$19, [k$$2, "-$1"], JAM.policy.p3);
      var e$$60 = "data-" + JAM.call(v13143.toLowerCase, v13143, [], JAM.policy.p3);
      d$$21 = JAM.call(a$$40.getAttribute, a$$40, [e$$60], JAM.policy.p3);
      if (typeof d$$21 == "string") {
        try {
          var v6173;
          if (d$$21 === "true") {
            v6173 = !0;
          } else {
            var v13145;
            if (d$$21 === "false") {
              v13145 = !1;
            } else {
              var v18562;
              if (d$$21 === "null") {
                v18562 = null;
              } else {
                var v22193;
                if (JAM.call(f$$4.isNumeric, f$$4, [d$$21], JAM.policy.p3)) {
                  v22193 = +d$$21;
                } else {
                  var v26079;
                  if (JAM.call(j$$14.test, j$$14, [d$$21], JAM.policy.p3)) {
                    v26079 = JAM.call(f$$4.parseJSON, f$$4, [d$$21], JAM.policy.p3);
                  } else {
                    v26079 = d$$21;
                  }
                  v22193 = v26079;
                }
                v18562 = v22193;
              }
              v13145 = v18562;
            }
            v6173 = v13145;
          }
          d$$21 = v6173;
        } catch (g$$9) {
        }
        JAM.call(f$$4.data, f$$4, [a$$40, c$$19, d$$21], JAM.policy.p3);
      } else {
        d$$21 = b$$9;
      }
    }
    return d$$21;
  }
  function h$$9(a$$41) {
    var b$$27 = JAM.set(g, a$$41, {}, JAM.policy.p2);
    var c$$20;
    var d$$22;
    a$$41 = JAM.call(a$$41.split, a$$41, [/\s+/], JAM.policy.p3);
    c$$20 = 0;
    d$$22 = a$$41.length;
    var v6177 = c$$20 < d$$22;
    for (;v6177;) {
      JAM.set(b$$27, a$$41[c$$20], !0, JAM.policy.p2);
      c$$20++;
      v6177 = c$$20 < d$$22;
    }
    return b$$27;
  }
  var c$$5 = a$$13.document;
  var d$$6 = a$$13.navigator;
  var e$$47 = a$$13.location;
  var f$$4 = v675();
  var g = {};
  f$$4.Callbacks = v687;
  var i$$85 = [].slice;
  JAM.call(f$$4.extend, f$$4, [{Deferred:v698, when:v701}], JAM.policy.p3);
  var v13148 = f$$4;
  var v31147 = v704();
  v13148.support = v31147;
  var j$$14 = /^(?:\{.*\}|\[.*\])$/;
  var k$$2 = /([A-Z])/g;
  var v28650 = f$$4.fn.jquery + JAM.call(Math.random, Math, [], JAM.policy.p3);
  JAM.call(f$$4.extend, f$$4, [{cache:{}, uuid:0, expando:"jQuery" + JAM.call(v28650.replace, v28650, [/\D/g, ""], JAM.policy.p3), noData:{embed:!0, object:"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000", applet:!0}, hasData:v705, data:v706, removeData:v707, _data:v708, acceptData:v709}], JAM.policy.p3);
  var v22196 = f$$4.fn;
  JAM.call(v22196.extend, v22196, [{data:v713, removeData:v715}], JAM.policy.p3);
  JAM.call(f$$4.extend, f$$4, [{_mark:v716, _unmark:v717, queue:v718, dequeue:v720}], JAM.policy.p3);
  var v13149 = f$$4.fn;
  JAM.call(v13149.extend, v13149, [{queue:v722, dequeue:v724, delay:v727, clearQueue:v728, promise:v729}], JAM.policy.p3);
  var o = /[\n\t\r]/g;
  var p$$22 = /\s+/;
  var q = /\r/g;
  var r$$2 = /^(?:button|input)$/i;
  var s$$15 = /^(?:button|input|object|select|textarea)$/i;
  var t$$2 = /^a(?:rea)?$/i;
  var u$$1 = /^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$/i;
  var v$$4 = f$$4.support.getSetAttribute;
  var w$$11;
  var x$$67;
  var y$$49;
  var v30214 = f$$4.fn;
  JAM.call(v30214.extend, v30214, [{attr:v730, removeAttr:v732, prop:v733, removeProp:v735, addClass:v737, removeClass:v739, toggleClass:v742, hasClass:v743, val:v746}], JAM.policy.p3);
  JAM.call(f$$4.extend, f$$4, [{valHooks:{option:{get:v747}, select:{get:v748, set:v750}}, attrFn:{val:!0, css:!0, html:!0, text:!0, data:!0, width:!0, height:!0, offset:!0}, attr:v751, removeAttr:v752, attrHooks:{type:{set:v753}, value:{get:v754, set:v755}}, propFix:{tabindex:"tabIndex", readonly:"readOnly", "for":"htmlFor", "class":"className", maxlength:"maxLength", cellspacing:"cellSpacing", cellpadding:"cellPadding", rowspan:"rowSpan", colspan:"colSpan", usemap:"useMap", frameborder:"frameBorder", 
  contenteditable:"contentEditable"}, prop:v756, propHooks:{tabIndex:{get:v757}}}], JAM.policy.p3);
  f$$4.attrHooks.tabindex = f$$4.propHooks.tabIndex;
  x$$67 = {get:v758, set:v759};
  if (!v$$4) {
    y$$49 = {name:!0, id:!0, coords:!0};
    w$$11 = f$$4.valHooks.button = {get:v760, set:v761};
    f$$4.attrHooks.tabindex.set = w$$11.set;
    JAM.call(f$$4.each, f$$4, [["width", "height"], v763], JAM.policy.p3);
    f$$4.attrHooks.contenteditable = {get:w$$11.get, set:v764};
  }
  var v28651 = f$$4.support.hrefNormalized;
  if (!v28651) {
    JAM.call(f$$4.each, f$$4, [["href", "src", "width", "height"], v766], JAM.policy.p3);
  }
  var v27649 = f$$4.support.style;
  if (!v27649) {
    f$$4.attrHooks.style = {get:v767, set:v768};
  }
  var v26083 = f$$4.support.optSelected;
  if (!v26083) {
    var v27651 = f$$4.propHooks;
    var v31148 = JAM.call(f$$4.extend, f$$4, [f$$4.propHooks.selected, {get:v769}], JAM.policy.p3);
    v27651.selected = v31148;
  }
  var v22198 = f$$4.support.enctype;
  if (!v22198) {
    f$$4.propFix.enctype = "encoding";
  }
  var v18565 = f$$4.support.checkOn;
  if (!v18565) {
    JAM.call(f$$4.each, f$$4, [["radio", "checkbox"], v771], JAM.policy.p3);
  }
  JAM.call(f$$4.each, f$$4, [["radio", "checkbox"], v773], JAM.policy.p3);
  var z$$2 = /^(?:textarea|input|select)$/i;
  var A = /^([^\.]*)?(?:\.(.+))?$/;
  var B = /(?:^|\s)hover(\.\S+)?\b/;
  var C = /^key/;
  var D = /^(?:mouse|contextmenu)|click/;
  var E = /^(?:focusinfocus|focusoutblur)$/;
  var F = /^(\w*)(?:#([\w\-]+))?(?:\.([\w\-]+))?$/;
  f$$4.event = {add:v775, global:{}, remove:v776, customEvent:{getData:!0, setData:!0, changeData:!0}, trigger:v777, dispatch:v778, props:JAM.call("attrChange attrName relatedNode srcElement altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split, "attrChange attrName relatedNode srcElement altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which", [" "], JAM.policy.p3), 
  fixHooks:{}, keyHooks:{props:JAM.call("char charCode key keyCode".split, "char charCode key keyCode", [" "], JAM.policy.p3), filter:v779}, mouseHooks:{props:JAM.call("button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement".split, "button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement", [" "], JAM.policy.p3), filter:v780}, fix:v781, special:{ready:{setup:f$$4.bindReady}, load:{noBubble:!0}, focus:{delegateType:"focusin"}, 
  blur:{delegateType:"focusout"}, beforeunload:{setup:v782, teardown:v783}}, simulate:v784};
  f$$4.event.handle = f$$4.event.dispatch;
  var v30220;
  if (c$$5.removeEventListener) {
    v30220 = v785;
  } else {
    v30220 = v786;
  }
  f$$4.removeEvent = v30220;
  f$$4.Event = v787;
  f$$4.Event.prototype = {preventDefault:v788, stopPropagation:v789, stopImmediatePropagation:v790, isDefaultPrevented:J, isPropagationStopped:J, isImmediatePropagationStopped:J};
  JAM.call(f$$4.each, f$$4, [{mouseenter:"mouseover", mouseleave:"mouseout"}, v792], JAM.policy.p3);
  var v28657 = f$$4.support.submitBubbles;
  if (!v28657) {
    f$$4.event.special.submit = {setup:v795, postDispatch:v796, teardown:v797};
  }
  var v27653 = f$$4.support.changeBubbles;
  if (!v27653) {
    f$$4.event.special.change = {setup:v802, handle:v803, teardown:v804};
  }
  var v26087 = f$$4.support.focusinBubbles;
  if (!v26087) {
    JAM.call(f$$4.each, f$$4, [{focus:"focusin", blur:"focusout"}, v807], JAM.policy.p3);
  }
  var v22202 = f$$4.fn;
  JAM.call(v22202.extend, v22202, [{on:v810, one:v811, off:v813, bind:v814, unbind:v815, live:v816, die:v817, delegate:v818, undelegate:v819, trigger:v821, triggerHandler:v822, toggle:v823, hover:v824}], JAM.policy.p3);
  JAM.call(f$$4.each, f$$4, [JAM.call("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu".split, "blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu", [" "], JAM.policy.p3), v826], JAM.policy.p3);
  v905();
  var L = /Until$/;
  var M = /^(?:parents|prevUntil|prevAll)/;
  var N = /,/;
  var O = /^.[^:#\[\.,]*$/;
  var P = Array.prototype.slice;
  var Q = f$$4.expr.match.globalPOS;
  var R = {children:!0, contents:!0, next:!0, prev:!0};
  var v18567 = f$$4.fn;
  JAM.call(v18567.extend, v18567, [{find:v907, has:v909, not:v910, filter:v911, is:v912, closest:v913, index:v914, add:v915, andSelf:v916}], JAM.policy.p3);
  JAM.call(f$$4.each, f$$4, [{parent:v917, parents:v918, parentsUntil:v919, next:v920, prev:v921, nextAll:v922, prevAll:v923, nextUntil:v924, prevUntil:v925, siblings:v926, children:v927, contents:v928}, v930], JAM.policy.p3);
  JAM.call(f$$4.extend, f$$4, [{filter:v931, dir:v932, nth:v933, sibling:v934}], JAM.policy.p3);
  var V = "abbr|article|aside|audio|bdi|canvas|data|datalist|details|figcaption|figure|footer|header|hgroup|mark|meter|nav|output|progress|section|summary|time|video";
  var W = / jQuery\d+="(?:\d+|null)"/g;
  var X = /^\s+/;
  var Y = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/ig;
  var Z = /<([\w:]+)/;
  var $$$2 = /<tbody/i;
  var _$$1 = /<|&#?\w+;/;
  var ba = /<(?:script|style)/i;
  var bb = /<(?:script|object|embed|option|style)/i;
  var bc = new RegExp("<(?:" + V + ")[\\s/>]", "i");
  var bd = /checked\s*(?:[^=]|=\s*.checked.)/i;
  var be = /\/(java|ecma)script/i;
  var bf = /^\s*<!(?:\[CDATA\[|\-\-)/;
  var bg = {option:[1, "<select multiple='multiple'>", "</select>"], legend:[1, "<fieldset>", "</fieldset>"], thead:[1, "<table>", "</table>"], tr:[2, "<table><tbody>", "</tbody></table>"], td:[3, "<table><tbody><tr>", "</tr></tbody></table>"], col:[2, "<table><tbody></tbody><colgroup>", "</colgroup></table>"], area:[1, "<map>", "</map>"], _default:[0, "", ""]};
  var bh = U(c$$5);
  bg.optgroup = bg.option;
  bg.tbody = bg.tfoot = bg.colgroup = bg.caption = bg.thead;
  bg.th = bg.td;
  var v28661 = f$$4.support.htmlSerialize;
  if (!v28661) {
    bg._default = [1, "div<div>", "</div>"];
  }
  var v27657 = f$$4.fn;
  JAM.call(v27657.extend, v27657, [{text:v936, wrapAll:v939, wrapInner:v942, wrap:v944, unwrap:v946, append:v948, prepend:v950, before:v952, after:v954, remove:v955, empty:v956, clone:v958, html:v960, replaceWith:v963, detach:v964, domManip:v968}], JAM.policy.p3);
  f$$4.buildFragment = v969;
  f$$4.fragments = {};
  JAM.call(f$$4.each, f$$4, [{appendTo:"append", prependTo:"prepend", insertBefore:"before", insertAfter:"after", replaceAll:"replaceWith"}, v971], JAM.policy.p3);
  JAM.call(f$$4.extend, f$$4, [{clone:v972, clean:v974, cleanData:v975}], JAM.policy.p3);
  var bp = /alpha\([^)]*\)/i;
  var bq = /opacity=([^)]*)/;
  var br = /([A-Z]|^ms)/g;
  var bs = /^[\-+]?(?:\d*\.)?\d+$/i;
  var bt = /^-?(?:\d*\.)?\d+(?!px)[^\d\s]+$/i;
  var bu = /^([\-+])=([\-+.\de]+)/;
  var bv = /^margin/;
  var bw = {position:"absolute", visibility:"hidden", display:"block"};
  var bx = ["Top", "Right", "Bottom", "Left"];
  var by;
  var bz;
  var bA;
  f$$4.fn.css = v977;
  var v30391 = {opacity:{get:v978}};
  var v30392 = {fillOpacity:!0, fontWeight:!0, lineHeight:!0, opacity:!0, orphans:!0, widows:!0, zIndex:!0, zoom:!0};
  var v30637;
  if (f$$4.support.cssFloat) {
    v30637 = "cssFloat";
  } else {
    v30637 = "styleFloat";
  }
  JAM.call(f$$4.extend, f$$4, [{cssHooks:v30391, cssNumber:v30392, cssProps:{"float":v30637}, style:v979, css:v980, swap:v981}], JAM.policy.p3);
  f$$4.curCSS = f$$4.css;
  var v29987 = c$$5.defaultView;
  if (v29987) {
    v29987 = c$$5.defaultView.getComputedStyle;
  }
  var v29719 = v29987;
  if (v29719) {
    bz = v982;
  }
  var v29307 = c$$5.documentElement.currentStyle;
  if (v29307) {
    bA = v983;
  }
  by = bz || bA;
  JAM.call(f$$4.each, f$$4, [["height", "width"], v987], JAM.policy.p3);
  var v26088 = f$$4.support.opacity;
  if (!v26088) {
    f$$4.cssHooks.opacity = {get:v988, set:v989};
  }
  JAM.call(f$$4, null, [v992], JAM.policy.p3);
  var v22204 = f$$4.expr;
  if (v22204) {
    v22204 = f$$4.expr.filters;
  }
  var v18571 = v22204;
  if (v18571) {
    f$$4.expr.filters.hidden = v993;
    f$$4.expr.filters.visible = v994;
  }
  JAM.call(f$$4.each, f$$4, [{margin:"", padding:"", border:"Width"}, v996], JAM.policy.p3);
  var bC = /%20/g;
  var bD = /\[\]$/;
  var bE = /\r?\n/g;
  var bF = /#.*$/;
  var bG = /^(.*?):[ \t]*([^\r\n]*)\r?$/mg;
  var bH = /^(?:color|date|datetime|datetime-local|email|hidden|month|number|password|range|search|tel|text|time|url|week)$/i;
  var bI = /^(?:about|app|app\-storage|.+\-extension|file|res|widget):$/;
  var bJ = /^(?:GET|HEAD)$/;
  var bK = /^\/\//;
  var bL = /\?/;
  var bM = /<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi;
  var bN = /^(?:select|textarea)/i;
  var bO = /\s+/;
  var bP = /([?&])_=[^&]*/;
  var bQ = /^([\w\+\.\-]+:)(?:\/\/([^\/?#:]*)(?::(\d+))?)?/;
  var bR = f$$4.fn.load;
  var bS = {};
  var bT = {};
  var bU;
  var bV;
  var bW = ["*/"] + ["*"];
  try {
    bU = e$$47.href;
  } catch (bX) {
    bU = JAM.call(c$$5.createElement, c$$5, ["a"], JAM.policy.p3);
    bU.href = "";
    bU = bU.href;
  }
  var v27665 = JAM.call(bQ.exec, bQ, [JAM.call(bU.toLowerCase, bU, [], JAM.policy.p3)], JAM.policy.p3);
  if (!v27665) {
    v27665 = [];
  }
  bV = v27665;
  var v27666 = f$$4.fn;
  JAM.call(v27666.extend, v27666, [{load:v999, serialize:v1000, serializeArray:v1005}], JAM.policy.p3);
  JAM.call(f$$4.each, f$$4, [JAM.call("ajaxStart ajaxStop ajaxComplete ajaxError ajaxSuccess ajaxSend".split, "ajaxStart ajaxStop ajaxComplete ajaxError ajaxSuccess ajaxSend", [" "], JAM.policy.p3), v1007], JAM.policy.p3);
  JAM.call(f$$4.each, f$$4, [["get", "post"], v1009], JAM.policy.p3);
  JAM.call(f$$4.extend, f$$4, [{getScript:v1010, getJSON:v1011, ajaxSetup:v1012, ajaxSettings:{url:bU, isLocal:JAM.call(bI.test, bI, [bV[1]], JAM.policy.p3), global:!0, type:"GET", contentType:"application/x-www-form-urlencoded; charset=UTF-8", processData:!0, async:!0, accepts:{xml:"application/xml, text/xml", html:"text/html", text:"text/plain", json:"application/json, text/javascript", "*":bW}, contents:{xml:/xml/, html:/html/, json:/json/}, responseFields:{xml:"responseXML", text:"responseText"}, 
  converters:{"* text":a$$13.String, "text html":!0, "text json":f$$4.parseJSON, "text xml":f$$4.parseXML}, flatOptions:{context:!0, url:!0}}, ajaxPrefilter:bY(bS), ajaxTransport:bY(bT), ajax:v1020, param:v1022}], JAM.policy.p3);
  JAM.call(f$$4.extend, f$$4, [{active:0, lastModified:{}, etag:{}}], JAM.policy.p3);
  var cc = JAM.call(f$$4.now, f$$4, [], JAM.policy.p3);
  var cd = /(\=)\?(&|$)|\?\?/i;
  JAM.call(f$$4.ajaxSetup, f$$4, [{jsonp:"callback", jsonpCallback:v1023}], JAM.policy.p3);
  JAM.call(f$$4.ajaxPrefilter, f$$4, ["json jsonp", v1027], JAM.policy.p3);
  JAM.call(f$$4.ajaxSetup, f$$4, [{accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"}, contents:{script:/javascript|ecmascript/}, converters:{"text script":v1028}}], JAM.policy.p3);
  JAM.call(f$$4.ajaxPrefilter, f$$4, ["script", v1029], JAM.policy.p3);
  JAM.call(f$$4.ajaxTransport, f$$4, ["script", v1033], JAM.policy.p3);
  var v6197;
  if (a$$13.ActiveXObject) {
    v6197 = v1034;
  } else {
    v6197 = !1;
  }
  var ce = v6197;
  var cf = 0;
  var cg;
  var v18573 = f$$4.ajaxSettings;
  var v22210;
  if (a$$13.ActiveXObject) {
    v22210 = v1035;
  } else {
    v22210 = ch$$14;
  }
  v18573.xhr = v22210;
  var v22211 = f$$4.ajaxSettings;
  v1036(JAM.call(v22211.xhr, v22211, [], JAM.policy.p3));
  var v13159 = f$$4.support.ajax;
  if (v13159) {
    JAM.call(f$$4.ajaxTransport, f$$4, [v1040], JAM.policy.p3);
  }
  var cj = {};
  var ck;
  var cl;
  var cm = /^(?:toggle|show|hide)$/;
  var cn = /^([+\-]=)?([\d+.\-]+)([a-z%]*)$/i;
  var co;
  var cp = [["height", "marginTop", "marginBottom", "paddingTop", "paddingBottom"], ["width", "marginLeft", "marginRight", "paddingLeft", "paddingRight"], ["opacity"]];
  var cq;
  var v28664 = f$$4.fn;
  JAM.call(v28664.extend, v28664, [{show:v1041, hide:v1042, _toggle:f$$4.fn.toggle, toggle:v1044, fadeTo:v1045, animate:v1046, stop:v1048}], JAM.policy.p3);
  JAM.call(f$$4.each, f$$4, [{slideDown:ct("show", 1), slideUp:ct("hide", 1), slideToggle:ct("toggle", 1), fadeIn:{opacity:"show"}, fadeOut:{opacity:"hide"}, fadeToggle:{opacity:"toggle"}}, v1050], JAM.policy.p3);
  JAM.call(f$$4.extend, f$$4, [{speed:v1052, easing:{linear:v1053, swing:v1054}, timers:[], fx:v1055}], JAM.policy.p3);
  f$$4.fx.prototype = {update:v1056, cur:v1057, custom:v1059, show:v1060, hide:v1061, step:v1063};
  JAM.call(f$$4.extend, f$$4, [f$$4.fx, {tick:v1064, interval:13, stop:v1065, speeds:{slow:600, fast:200, _default:400}, step:{opacity:v1066, _default:v1067}}], JAM.policy.p3);
  var v22214 = cp.concat;
  JAM.call(f$$4.each, f$$4, [JAM.call(v22214.apply, v22214, [[], cp], JAM.policy.p3), v1069], JAM.policy.p3);
  var v18577 = f$$4.expr;
  if (v18577) {
    v18577 = f$$4.expr.filters;
  }
  var v13160 = v18577;
  if (v13160) {
    f$$4.expr.filters.animated = v1071;
  }
  var cv;
  var cw = /^t(?:able|d|h)$/i;
  var cx = /^(?:body|html)$/i;
  var v29315;
  if ("getBoundingClientRect" in c$$5.documentElement) {
    v29315 = cv = v1072;
  } else {
    v29315 = cv = v1073;
  }
  v29315;
  f$$4.fn.offset = v1075;
  f$$4.offset = {bodyOffset:v1076, setOffset:v1077};
  var v27676 = f$$4.fn;
  JAM.call(v27676.extend, v27676, [{position:v1078, offsetParent:v1080}], JAM.policy.p3);
  JAM.call(f$$4.each, f$$4, [{scrollLeft:"pageXOffset", scrollTop:"pageYOffset"}, v1083], JAM.policy.p3);
  JAM.call(f$$4.each, f$$4, [{Height:"height", Width:"width"}, v1088], JAM.policy.p3);
  a$$13.jQuery = a$$13.$ = f$$4;
  var v22218 = typeof define == "function";
  if (v22218) {
    v22218 = define.amd;
  }
  var v18579 = v22218;
  if (v18579) {
    v18579 = define.amd.jQuery;
  }
  var v13161 = v18579;
  if (v13161) {
    JAM.call(define, null, ["jquery", [], v1089], JAM.policy.p3);
  }
  return;
}
function v614() {
  function v613(x$$66, y$$48, x2$$1, y2$$1, dashArray) {
    if (!dashArray) {
      dashArray = [10, 5];
    }
    var dashCount = dashArray.length;
    JAM.call(this.moveTo, this, [x$$66, y$$48], JAM.policy.p3);
    var dx$$5 = x2$$1 - x$$66;
    var dy$$5 = y2$$1 - y$$48;
    var slope = dy$$5 / dx$$5;
    var distRemaining = JAM.call(Math.sqrt, Math, [dx$$5 * dx$$5 + dy$$5 * dy$$5], JAM.policy.p3);
    var dashIndex = 0;
    var draw = true;
    var v6207 = distRemaining >= .1;
    for (;v6207;) {
      dashIndex = dashIndex + 1;
      var dashLength = dashArray[dashIndex % dashCount];
      if (dashLength > distRemaining) {
        dashLength = distRemaining;
      }
      var xStep = JAM.call(Math.sqrt, Math, [dashLength * dashLength / (1 + slope * slope)], JAM.policy.p3);
      x$$66 = x$$66 + xStep;
      y$$48 = y$$48 + slope * xStep;
      var v13167;
      if (draw) {
        v13167 = "lineTo";
      } else {
        v13167 = "moveTo";
      }
      JAM.call(this[v13167], this, [x$$66, y$$48], JAM.policy.p3);
      distRemaining = distRemaining - dashLength;
      draw = !draw;
      v6207 = distRemaining >= .1;
    }
    return;
  }
  function v612(npos$$11, pos$$55, dim$$24) {
    var a$$12 = new Complex(npos$$11.x, npos$$11.y);
    var b$$8 = new Complex(a$$12.x + dim$$24, npos$$11.y - dim$$24);
    var c$$4 = new Complex(b$$8.x, npos$$11.y + dim$$24);
    pos$$55 = new Complex(pos$$55.x, pos$$55.y);
    var negOne = new Complex(-1, -1);
    var v0 = new Complex(c$$4.x - a$$12.x, c$$4.y - a$$12.y);
    var v1$$2 = new Complex(b$$8.x - a$$12.x, b$$8.y - a$$12.y);
    var v2$$2 = new Complex(pos$$55.x - a$$12.x, pos$$55.y - a$$12.y);
    var dot00 = v0.x * v0.x + v0.y * v0.y;
    var dot01 = v0.x * v1$$2.x + v0.y * v1$$2.y;
    var dot02 = v0.x * v2$$2.x + v0.y * v2$$2.y;
    var dot11 = v1$$2.x * v1$$2.x + v1$$2.y * v1$$2.y;
    var dot12 = v1$$2.x * v2$$2.x + v1$$2.y * v2$$2.y;
    var inv$$1 = 1 / (dot00 * dot11 - dot01 * dot01);
    var u = (dot11 * dot02 - dot01 * dot12) * inv$$1;
    var v$$3 = (dot00 * dot12 - dot01 * dot02) * inv$$1;
    var v13209 = u > 0;
    if (v13209) {
      v13209 = v$$3 > 0;
    }
    var v6235 = v13209;
    if (v6235) {
      v6235 = u + v$$3 < 1;
    }
    return v6235;
  }
  function v611(type$$58, pos$$54, dim$$23, canvas$$53) {
    var ctx$$24 = JAM.call(canvas$$53.getCtx, canvas$$53, [], JAM.policy.p3);
    var c1x$$1 = pos$$54.x;
    var c1y$$1 = pos$$54.y;
    var c2x$$1 = c1x$$1 + dim$$23;
    var c2y$$1 = pos$$54.y - dim$$23;
    var c3x$$1 = c2x$$1;
    var c3y$$1 = pos$$54.y + dim$$23;
    JAM.call(ctx$$24.beginPath, ctx$$24, [], JAM.policy.p3);
    JAM.call(ctx$$24.moveTo, ctx$$24, [c1x$$1, c1y$$1], JAM.policy.p3);
    JAM.call(ctx$$24.lineTo, ctx$$24, [c2x$$1, c2y$$1], JAM.policy.p3);
    JAM.call(ctx$$24.lineTo, ctx$$24, [c3x$$1, c3y$$1], JAM.policy.p3);
    JAM.call(ctx$$24.closePath, ctx$$24, [], JAM.policy.p3);
    JAM.call(ctx$$24[type$$58], ctx$$24, [], JAM.policy.p3);
    return;
  }
  function v610(graph$$20, id$$36, startDepth$$1, flags$$14) {
    function v609(adj$$33) {
      var n$$56 = adj$$33.nodeTo;
      var v13211 = n$$56._flag === false;
      if (v13211) {
        v13211 = JAM.call(filter$$6, null, [n$$56], JAM.policy.p3);
      }
      if (v13211) {
        if (n$$56._depth < 0) {
          n$$56._depth = node$$115._depth + 1 + startDepth$$1;
          if (!graph$$20.depth[n$$56._depth]) {
            JAM.set(graph$$20.depth, n$$56._depth, [], JAM.policy.p2);
          }
          var v6242 = graph$$20.depth[n$$56._depth];
          JAM.call(v6242.push, v6242, [n$$56], JAM.policy.p3);
        }
        JAM.call(queue$$2.unshift, queue$$2, [n$$56], JAM.policy.p3);
      }
      return;
    }
    function v608(elem$$60) {
      elem$$60._flag = false;
      elem$$60._depth = -1;
      return;
    }
    startDepth$$1 = startDepth$$1 || 0;
    var filter$$6 = JAM.call(this.filter, this, [flags$$14], JAM.policy.p3);
    JAM.call(this.eachNode, this, [graph$$20, v608, flags$$14], JAM.policy.p3);
    var root$$20 = JAM.call(graph$$20.getNode, graph$$20, [id$$36], JAM.policy.p3);
    root$$20._depth = startDepth$$1;
    var queue$$2 = [root$$20];
    graph$$20.depth = [];
    var that$$35 = this;
    var v6245 = queue$$2.length !== 0;
    for (;v6245;) {
      var node$$115 = JAM.call(queue$$2.pop, queue$$2, [], JAM.policy.p3);
      node$$115._flag = true;
      JAM.call(this.eachAdjacency, this, [node$$115, v609, flags$$14], JAM.policy.p3);
      v6245 = queue$$2.length !== 0;
    }
    return;
  }
  function v607(e$$46, win$$34, scroll$$4) {
    if (!this.config.zooming) {
      return;
    }
    var v6247 = $$$1.event;
    var v13220 = $$$1.event;
    JAM.call(v6247.stop, v6247, [JAM.call(v13220.get, v13220, [e$$46, win$$34], JAM.policy.p3)], JAM.policy.p3);
    var v6249 = this.viz;
    JAM.call(v6249.zoom, v6249, [scroll$$4], JAM.policy.p3);
    return;
  }
  function v606(adj$$32, pos$$53) {
    var orn$$17 = JAM.call(this.getOrientation, this, [adj$$32], JAM.policy.p3);
    var nodeFrom$$13 = adj$$32.nodeFrom;
    var nodeTo$$15 = adj$$32.nodeTo;
    var rel$$7 = nodeFrom$$13._depth < nodeTo$$15._depth;
    var v6252 = this.viz.geom;
    var v13222;
    if (rel$$7) {
      v13222 = nodeFrom$$13;
    } else {
      v13222 = nodeTo$$15;
    }
    var from$$16 = JAM.call(v6252.getEdge, v6252, [v13222, "begin", orn$$17], JAM.policy.p3);
    var v6254 = this.viz.geom;
    var v13224;
    if (rel$$7) {
      v13224 = nodeTo$$15;
    } else {
      v13224 = nodeFrom$$13;
    }
    var to$$17 = JAM.call(v6254.getEdge, v6254, [v13224, "end", orn$$17], JAM.policy.p3);
    var v6256 = this.edgeHelper.line;
    return JAM.call(v6256.contains, v6256, [from$$16, to$$17, pos$$53, this.edge.epsilon], JAM.policy.p3);
  }
  function v605(adj$$31, canvas$$52) {
    var orn$$16 = JAM.call(this.getOrientation, this, [adj$$31], JAM.policy.p3);
    var nodeFrom$$12 = adj$$31.nodeFrom;
    var nodeTo$$14 = adj$$31.nodeTo;
    var rel$$6 = nodeFrom$$12._depth < nodeTo$$14._depth;
    var v6260 = this.viz.geom;
    var v13228;
    if (rel$$6) {
      v13228 = nodeFrom$$12;
    } else {
      v13228 = nodeTo$$14;
    }
    var from$$15 = JAM.call(v6260.getEdge, v6260, [v13228, "begin", orn$$16], JAM.policy.p3);
    var v6262 = this.viz.geom;
    var v13230;
    if (rel$$6) {
      v13230 = nodeTo$$14;
    } else {
      v13230 = nodeFrom$$12;
    }
    var to$$16 = JAM.call(v6262.getEdge, v6262, [v13230, "end", orn$$16], JAM.policy.p3);
    var middle = {x:from$$15.x, y:to$$16.y};
    var v6266 = this.edgeHelper.line;
    JAM.call(v6266.render, v6266, [from$$15, middle, canvas$$52], JAM.policy.p3);
    var v6267 = this.edgeHelper.line;
    JAM.call(v6267.render, v6267, [middle, to$$16, canvas$$52], JAM.policy.p3);
    return;
  }
  function v604(adj$$30, canvas$$51) {
    var orn$$15 = JAM.call(this.getOrientation, this, [adj$$30], JAM.policy.p3);
    var nodeFrom$$11 = adj$$30.nodeFrom;
    var nodeTo$$13 = adj$$30.nodeTo;
    var rel$$5 = nodeFrom$$11._depth < nodeTo$$13._depth;
    var v6270 = this.viz.geom;
    var v13234;
    if (rel$$5) {
      v13234 = nodeFrom$$11;
    } else {
      v13234 = nodeTo$$13;
    }
    var begin$$13 = JAM.call(v6270.getEdge, v6270, [v13234, "begin", orn$$15], JAM.policy.p3);
    var v6272 = this.viz.geom;
    var v13236;
    if (rel$$5) {
      v13236 = nodeTo$$13;
    } else {
      v13236 = nodeFrom$$11;
    }
    var end$$3 = JAM.call(v6272.getEdge, v6272, [v13236, "end", orn$$15], JAM.policy.p3);
    var dim$$22 = JAM.call(adj$$30.getData, adj$$30, ["dim"], JAM.policy.p3);
    var ctx$$23 = JAM.call(canvas$$51.getCtx, canvas$$51, [], JAM.policy.p3);
    JAM.call(ctx$$23.beginPath, ctx$$23, [], JAM.policy.p3);
    JAM.call(ctx$$23.moveTo, ctx$$23, [begin$$13.x, begin$$13.y], JAM.policy.p3);
    switch(orn$$15) {
      case "left":
        JAM.call(ctx$$23.bezierCurveTo, ctx$$23, [begin$$13.x + dim$$22, begin$$13.y, end$$3.x - dim$$22, end$$3.y, end$$3.x, end$$3.y], JAM.policy.p3);
        break;
      case "right":
        JAM.call(ctx$$23.bezierCurveTo, ctx$$23, [begin$$13.x - dim$$22, begin$$13.y, end$$3.x + dim$$22, end$$3.y, end$$3.x, end$$3.y], JAM.policy.p3);
        break;
      case "top":
        JAM.call(ctx$$23.bezierCurveTo, ctx$$23, [begin$$13.x, begin$$13.y + dim$$22, end$$3.x, end$$3.y - dim$$22, end$$3.x, end$$3.y], JAM.policy.p3);
        break;
      case "bottom":
        JAM.call(ctx$$23.bezierCurveTo, ctx$$23, [begin$$13.x, begin$$13.y - dim$$22, end$$3.x, end$$3.y + dim$$22, end$$3.x, end$$3.y], JAM.policy.p3);
    }
    JAM.call(ctx$$23.stroke, ctx$$23, [], JAM.policy.p3);
    return;
  }
  function v603(adj$$29, canvas$$50) {
    var orn$$14 = JAM.call(this.getOrientation, this, [adj$$29], JAM.policy.p3);
    var nodeFrom$$10 = adj$$29.nodeFrom;
    var nodeTo$$12 = adj$$29.nodeTo;
    var rel$$4 = nodeFrom$$10._depth < nodeTo$$12._depth;
    var v6302 = this.viz.geom;
    var v13246;
    if (rel$$4) {
      v13246 = nodeFrom$$10;
    } else {
      v13246 = nodeTo$$12;
    }
    var begin$$12 = JAM.call(v6302.getEdge, v6302, [v13246, "begin", orn$$14], JAM.policy.p3);
    var v6304 = this.viz.geom;
    var v13248;
    if (rel$$4) {
      v13248 = nodeTo$$12;
    } else {
      v13248 = nodeFrom$$10;
    }
    var end$$2 = JAM.call(v6304.getEdge, v6304, [v13248, "end", orn$$14], JAM.policy.p3);
    var dim$$21 = JAM.call(adj$$29.getData, adj$$29, ["dim"], JAM.policy.p3);
    var ctx$$22 = JAM.call(canvas$$50.getCtx, canvas$$50, [], JAM.policy.p3);
    JAM.call(ctx$$22.beginPath, ctx$$22, [], JAM.policy.p3);
    JAM.call(ctx$$22.moveTo, ctx$$22, [begin$$12.x, begin$$12.y], JAM.policy.p3);
    switch(orn$$14) {
      case "left":
        JAM.call(ctx$$22.quadraticCurveTo, ctx$$22, [end$$2.x - dim$$21, end$$2.y, end$$2.x, end$$2.y], JAM.policy.p3);
        break;
      case "right":
        JAM.call(ctx$$22.quadraticCurveTo, ctx$$22, [end$$2.x + dim$$21, end$$2.y, end$$2.x, end$$2.y], JAM.policy.p3);
        break;
      case "top":
        JAM.call(ctx$$22.quadraticCurveTo, ctx$$22, [end$$2.x, end$$2.y - dim$$21, end$$2.x, end$$2.y], JAM.policy.p3);
        break;
      case "bottom":
        JAM.call(ctx$$22.quadraticCurveTo, ctx$$22, [end$$2.x, end$$2.y + dim$$21, end$$2.x, end$$2.y], JAM.policy.p3);
    }
    JAM.call(ctx$$22.stroke, ctx$$22, [], JAM.policy.p3);
    return;
  }
  function v602(adj$$28, canvas$$49) {
    var orn$$13 = JAM.call(this.getOrientation, this, [adj$$28], JAM.policy.p3);
    var nodeFrom$$9 = adj$$28.nodeFrom;
    var nodeTo$$11 = adj$$28.nodeTo;
    var rel$$3 = nodeFrom$$9._depth < nodeTo$$11._depth;
    var v6326 = this.viz.geom;
    var v13254;
    if (rel$$3) {
      v13254 = nodeFrom$$9;
    } else {
      v13254 = nodeTo$$11;
    }
    var begin$$11 = JAM.call(v6326.getEdge, v6326, [v13254, "begin", orn$$13], JAM.policy.p3);
    var v6328 = this.viz.geom;
    var v13256;
    if (rel$$3) {
      v13256 = nodeTo$$11;
    } else {
      v13256 = nodeFrom$$9;
    }
    var end$$1 = JAM.call(v6328.getEdge, v6328, [v13256, "end", orn$$13], JAM.policy.p3);
    var dim$$20 = JAM.call(adj$$28.getData, adj$$28, ["dim"], JAM.policy.p3);
    var ctx$$21 = JAM.call(canvas$$49.getCtx, canvas$$49, [], JAM.policy.p3);
    JAM.call(ctx$$21.beginPath, ctx$$21, [], JAM.policy.p3);
    JAM.call(ctx$$21.moveTo, ctx$$21, [begin$$11.x, begin$$11.y], JAM.policy.p3);
    switch(orn$$13) {
      case "left":
        JAM.call(ctx$$21.quadraticCurveTo, ctx$$21, [begin$$11.x + dim$$20, begin$$11.y, end$$1.x, end$$1.y], JAM.policy.p3);
        break;
      case "right":
        JAM.call(ctx$$21.quadraticCurveTo, ctx$$21, [begin$$11.x - dim$$20, begin$$11.y, end$$1.x, end$$1.y], JAM.policy.p3);
        break;
      case "top":
        JAM.call(ctx$$21.quadraticCurveTo, ctx$$21, [begin$$11.x, begin$$11.y + dim$$20, end$$1.x, end$$1.y], JAM.policy.p3);
        break;
      case "bottom":
        JAM.call(ctx$$21.quadraticCurveTo, ctx$$21, [begin$$11.x, begin$$11.y - dim$$20, end$$1.x, end$$1.y], JAM.policy.p3);
    }
    JAM.call(ctx$$21.stroke, ctx$$21, [], JAM.policy.p3);
    return;
  }
  function v601(adj$$27, pos$$52) {
    var orn$$12 = JAM.call(this.getOrientation, this, [adj$$27], JAM.policy.p3);
    var nodeFrom$$8 = adj$$27.nodeFrom;
    var nodeTo$$10 = adj$$27.nodeTo;
    var rel$$2 = nodeFrom$$8._depth < nodeTo$$10._depth;
    var v6350 = this.viz.geom;
    var v13262;
    if (rel$$2) {
      v13262 = nodeFrom$$8;
    } else {
      v13262 = nodeTo$$10;
    }
    var from$$14 = JAM.call(v6350.getEdge, v6350, [v13262, "begin", orn$$12], JAM.policy.p3);
    var v6352 = this.viz.geom;
    var v13264;
    if (rel$$2) {
      v13264 = nodeTo$$10;
    } else {
      v13264 = nodeFrom$$8;
    }
    var to$$15 = JAM.call(v6352.getEdge, v6352, [v13264, "end", orn$$12], JAM.policy.p3);
    var v6354 = this.edgeHelper.arrow;
    return JAM.call(v6354.contains, v6354, [from$$14, to$$15, pos$$52, this.edge.epsilon], JAM.policy.p3);
  }
  function v600(adj$$26, canvas$$48) {
    var orn$$11 = JAM.call(this.getOrientation, this, [adj$$26], JAM.policy.p3);
    var node$$114 = adj$$26.nodeFrom;
    var child$$1 = adj$$26.nodeTo;
    var dim$$19 = JAM.call(adj$$26.getData, adj$$26, ["dim"], JAM.policy.p3);
    var v6356 = this.viz.geom;
    var from$$13 = JAM.call(v6356.getEdge, v6356, [node$$114, "begin", orn$$11], JAM.policy.p3);
    var v6357 = this.viz.geom;
    var to$$14 = JAM.call(v6357.getEdge, v6357, [child$$1, "end", orn$$11], JAM.policy.p3);
    var direction$$3 = adj$$26.data.$direction;
    var v13269 = direction$$3;
    if (v13269) {
      v13269 = direction$$3.length > 1;
    }
    var v6359 = v13269;
    if (v6359) {
      v6359 = direction$$3[0] !== node$$114.id;
    }
    var inv = v6359;
    var v6360 = this.edgeHelper.arrow;
    JAM.call(v6360.render, v6360, [from$$13, to$$14, dim$$19, inv, canvas$$48], JAM.policy.p3);
    return;
  }
  function v599(adj$$25, pos$$51) {
    var orn$$10 = JAM.call(this.getOrientation, this, [adj$$25], JAM.policy.p3);
    var nodeFrom$$7 = adj$$25.nodeFrom;
    var nodeTo$$9 = adj$$25.nodeTo;
    var rel$$1 = nodeFrom$$7._depth < nodeTo$$9._depth;
    var v6363 = this.viz.geom;
    var v13274;
    if (rel$$1) {
      v13274 = nodeFrom$$7;
    } else {
      v13274 = nodeTo$$9;
    }
    var from$$12 = JAM.call(v6363.getEdge, v6363, [v13274, "begin", orn$$10], JAM.policy.p3);
    var v6365 = this.viz.geom;
    var v13276;
    if (rel$$1) {
      v13276 = nodeTo$$9;
    } else {
      v13276 = nodeFrom$$7;
    }
    var to$$13 = JAM.call(v6365.getEdge, v6365, [v13276, "end", orn$$10], JAM.policy.p3);
    var v6367 = this.edgeHelper.line;
    return JAM.call(v6367.contains, v6367, [from$$12, to$$13, pos$$51, this.edge.epsilon], JAM.policy.p3);
  }
  function v598(adj$$24, canvas$$47) {
    var orn$$9 = JAM.call(this.getOrientation, this, [adj$$24], JAM.policy.p3);
    var nodeFrom$$6 = adj$$24.nodeFrom;
    var nodeTo$$8 = adj$$24.nodeTo;
    var rel = nodeFrom$$6._depth < nodeTo$$8._depth;
    var v13279;
    if (rel) {
      v13279 = nodeFrom$$6;
    } else {
      v13279 = nodeTo$$8;
    }
    var v6371 = v13279;
    var from$$11 = JAM.call(v6371.getPos, v6371, [], JAM.policy.p3);
    var v13280;
    if (rel) {
      v13280 = nodeTo$$8;
    } else {
      v13280 = nodeFrom$$6;
    }
    var v6372 = v13280;
    var to$$12 = JAM.call(v6372.getPos, v6372, [], JAM.policy.p3);
    var JSCompiler_object_inline_x_90 = from$$11.x;
    var JSCompiler_object_inline_y_91 = from$$11.y;
    var middle2 = {x:JSCompiler_object_inline_x_90, y:to$$12.y};
    var v6374 = this.edgeHelper.line;
    JAM.call(v6374.render, v6374, [from$$11, middle2, canvas$$47], JAM.policy.p3);
    var v6375 = this.edgeHelper.line;
    JAM.call(v6375.render, v6375, [middle2, to$$12, canvas$$47], JAM.policy.p3);
    var v13283 = !JAM.call(nodeTo$$8.anySubnode, nodeTo$$8, [], JAM.policy.p3);
    if (v13283) {
      v13283 = this.config.alignName;
    }
    if (v13283) {
      var ctx$$20 = JAM.call(canvas$$47.getCtx, canvas$$47, [], JAM.policy.p3);
      JAM.call(ctx$$20.save, ctx$$20, [], JAM.policy.p3);
      ctx$$20.lineWidth = 2;
      ctx$$20.lineCap = "butt";
      ctx$$20.fillStyle = ctx$$20.strokeStyle = "#ccb";
      JAM.call(ctx$$20.beginPath, ctx$$20, [], JAM.policy.p3);
      JAM.call(ctx$$20.dashedLine, ctx$$20, [to$$12.x, to$$12.y, this.viz.graph.maxXpos, to$$12.y, [4, 2]], JAM.policy.p3);
      JAM.call(ctx$$20.closePath, ctx$$20, [], JAM.policy.p3);
      JAM.call(ctx$$20.stroke, ctx$$20, [], JAM.policy.p3);
      JAM.call(ctx$$20.restore, ctx$$20, [], JAM.policy.p3);
    }
    return;
  }
  function v597(node$$113, pos$$50) {
    if (!node$$113.exist) {
      return false;
    }
    var width$$30 = JAM.call(node$$113.getData, node$$113, ["width"], JAM.policy.p3);
    var height$$28 = JAM.call(node$$113.getData, node$$113, ["height"], JAM.policy.p3);
    var dim$$18 = JAM.call(node$$113.getData, node$$113, ["dim"], JAM.policy.p3);
    var v13286 = node$$113.pos;
    var npos$$10 = JAM.call(this.getAlignedPos, this, [JAM.call(v13286.getc, v13286, [true], JAM.policy.p3), width$$30, height$$28], JAM.policy.p3);
    var v6384 = this.nodeHelper.triangle;
    return JAM.call(v6384.contains, v6384, [{x:npos$$10.x + width$$30 / 2, y:npos$$10.y + height$$28 / 2}, pos$$50, dim$$18], JAM.policy.p3);
  }
  function v596(node$$112, canvas$$46) {
    var width$$29 = JAM.call(node$$112.getData, node$$112, ["width"], JAM.policy.p3);
    var height$$27 = JAM.call(node$$112.getData, node$$112, ["height"], JAM.policy.p3);
    var dim$$17 = JAM.call(node$$112.getData, node$$112, ["dim"], JAM.policy.p3);
    var v13290 = node$$112.pos;
    var pos$$49 = JAM.call(this.getAlignedPos, this, [JAM.call(v13290.getc, v13290, [true], JAM.policy.p3), width$$29, height$$27], JAM.policy.p3);
    var v6387 = this.nodeHelper.triangle;
    JAM.call(v6387.render, v6387, ["fill", {x:pos$$49.x + width$$29 / 2, y:pos$$49.y + height$$27 / 2}, dim$$17, canvas$$46], JAM.policy.p3);
    return;
  }
  function v595(node$$111, pos$$48) {
    if (!node$$111.exist) {
      return false;
    }
    var width$$28 = JAM.call(node$$111.getData, node$$111, ["width"], JAM.policy.p3);
    var height$$26 = JAM.call(node$$111.getData, node$$111, ["height"], JAM.policy.p3);
    var v13295 = node$$111.pos;
    var npos$$9 = JAM.call(this.getAlignedPos, this, [JAM.call(v13295.getc, v13295, [true], JAM.policy.p3), width$$28, height$$26], JAM.policy.p3);
    var v6391 = this.nodeHelper.rectangle;
    JAM.call(v6391.contains, v6391, [{x:npos$$9.x + width$$28 / 2, y:npos$$9.y + height$$26 / 2}, pos$$48, width$$28, height$$26], JAM.policy.p3);
    return;
  }
  function v594(node$$110, canvas$$45) {
    var width$$27 = JAM.call(node$$110.getData, node$$110, ["width"], JAM.policy.p3);
    var height$$25 = JAM.call(node$$110.getData, node$$110, ["height"], JAM.policy.p3);
    var v13299 = node$$110.pos;
    var pos$$47 = JAM.call(this.getAlignedPos, this, [JAM.call(v13299.getc, v13299, [true], JAM.policy.p3), width$$27, height$$25], JAM.policy.p3);
    var v6394 = this.nodeHelper.rectangle;
    JAM.call(v6394.render, v6394, ["fill", {x:pos$$47.x + width$$27 / 2, y:pos$$47.y + height$$25 / 2}, width$$27, height$$25, canvas$$45], JAM.policy.p3);
    return;
  }
  function v593(node$$109, pos$$46) {
    if (!node$$109.exist) {
      return false;
    }
    var width$$26 = JAM.call(node$$109.getData, node$$109, ["width"], JAM.policy.p3);
    var height$$24 = JAM.call(node$$109.getData, node$$109, ["height"], JAM.policy.p3);
    var v13304 = node$$109.pos;
    var npos$$8 = JAM.call(this.getAlignedPos, this, [JAM.call(v13304.getc, v13304, [true], JAM.policy.p3), width$$26, height$$24], JAM.policy.p3);
    var v6398 = this.nodeHelper.ellipse;
    JAM.call(v6398.contains, v6398, [{x:npos$$8.x + width$$26 / 2, y:npos$$8.y + height$$24 / 2}, pos$$46, width$$26, height$$24], JAM.policy.p3);
    return;
  }
  function v592(node$$108, canvas$$44) {
    var width$$25 = JAM.call(node$$108.getData, node$$108, ["width"], JAM.policy.p3);
    var height$$23 = JAM.call(node$$108.getData, node$$108, ["height"], JAM.policy.p3);
    var v13308 = node$$108.pos;
    var pos$$45 = JAM.call(this.getAlignedPos, this, [JAM.call(v13308.getc, v13308, [true], JAM.policy.p3), width$$25, height$$23], JAM.policy.p3);
    var v6401 = this.nodeHelper.ellipse;
    JAM.call(v6401.render, v6401, ["fill", {x:pos$$45.x + width$$25 / 2, y:pos$$45.y + height$$23 / 2}, width$$25, height$$23, canvas$$44], JAM.policy.p3);
    return;
  }
  function v591(node$$107, pos$$44) {
    if (!node$$107.exist) {
      return false;
    }
    var dim$$16 = JAM.call(node$$107.getData, node$$107, ["dim"], JAM.policy.p3);
    var v13313 = node$$107.pos;
    var npos$$7 = JAM.call(this.getAlignedPos, this, [JAM.call(v13313.getc, v13313, [true], JAM.policy.p3), dim$$16, dim$$16], JAM.policy.p3);
    var dim2$$3 = dim$$16 / 2;
    var v6405 = this.nodeHelper.square;
    return JAM.call(v6405.contains, v6405, [{x:npos$$7.x, y:npos$$7.y + dim2$$3}, pos$$44, dim2$$3], JAM.policy.p3);
  }
  function v590(node$$106, canvas$$43) {
    var dim$$15 = JAM.call(node$$106.getData, node$$106, ["dim"], JAM.policy.p3);
    var dim2$$2 = dim$$15 / 2;
    var v13317 = node$$106.pos;
    var pos$$43 = JAM.call(this.getAlignedPos, this, [JAM.call(v13317.getc, v13317, [true], JAM.policy.p3), dim$$15, dim$$15], JAM.policy.p3);
    var v6408 = this.nodeHelper.square;
    JAM.call(v6408.render, v6408, ["fill", {x:pos$$43.x, y:pos$$43.y + dim2$$2}, dim2$$2, canvas$$43], JAM.policy.p3);
    return;
  }
  function v589(node$$105, pos$$42) {
    if (!node$$105.exist) {
      return false;
    }
    var dim$$14 = JAM.call(node$$105.getData, node$$105, ["dim"], JAM.policy.p3);
    var v13322 = node$$105.pos;
    var npos$$6 = JAM.call(this.getAlignedPos, this, [JAM.call(v13322.getc, v13322, [true], JAM.policy.p3), dim$$14, dim$$14], JAM.policy.p3);
    var dim2$$1 = dim$$14 / 2;
    var v6412 = this.nodeHelper.circle;
    return JAM.call(v6412.contains, v6412, [{x:npos$$6.x, y:npos$$6.y + dim2$$1}, pos$$42, dim2$$1 + 10], JAM.policy.p3);
  }
  function v588(node$$104, canvas$$42) {
    var dim$$13 = JAM.call(node$$104.getData, node$$104, ["dim"], JAM.policy.p3);
    var v13326 = node$$104.pos;
    var pos$$41 = JAM.call(this.getAlignedPos, this, [JAM.call(v13326.getc, v13326, [true], JAM.policy.p3), dim$$13, dim$$13], JAM.policy.p3);
    var dim2 = dim$$13 / 2;
    var v6416 = this.nodeHelper.circle;
    JAM.call(v6416.render, v6416, ["fill", {x:pos$$41.x, y:pos$$41.y + dim2}, dim2, canvas$$42], JAM.policy.p3);
    return;
  }
  function v587(viz$$30) {
    this.viz = viz$$30;
    return;
  }
  function v586(viz$$29) {
    this.viz = viz$$29;
    return;
  }
  function v585(tag$$4, node$$103, controller$$11) {
    var v13330 = node$$103.pos;
    var v6418 = JAM.call(v13330.getc, v13330, [true], JAM.policy.p3);
    var pos$$40 = JAM.call(v6418.clone, v6418, [], JAM.policy.p3);
    var config$$16 = this.viz.config;
    var dim$$12 = config$$16.Node;
    var canvas$$41 = this.viz.canvas;
    var w$$10 = JAM.call(node$$103.getData, node$$103, ["width"], JAM.policy.p3);
    var h$$8 = JAM.call(node$$103.getData, node$$103, ["height"], JAM.policy.p3);
    var radius$$6 = JAM.call(canvas$$41.getSize, canvas$$41, [], JAM.policy.p3);
    var labelPos;
    var orn$$8;
    if (config$$16.alignName) {
      pos$$40.x = this.viz.graph.maxXpos;
    }
    var ox$$5 = canvas$$41.translateOffsetX;
    var oy$$6 = canvas$$41.translateOffsetY;
    var sx$$6 = canvas$$41.scaleOffsetX;
    var sy$$6 = canvas$$41.scaleOffsetY;
    var posx = pos$$40.x * sx$$6 + ox$$5;
    var posy = pos$$40.y * sy$$6 + oy$$6;
    if (dim$$12.align === "left") {
      labelPos = {x:JAM.call(Math.round, Math, [posx + 10], JAM.policy.p3), y:JAM.call(Math.round, Math, [posy - h$$8 / 2], JAM.policy.p3)};
      var v13337 = !controller$$11.alignName;
      if (v13337) {
        v13337 = !node$$103.data.leaf;
      }
      if (v13337) {
        labelPos.x = labelPos.x + controller$$11.collapsedXOffset;
      }
      tag$$4.style.textAlign = "left";
    } else {
      throw "align: not implemented";
    }
    var style$$6 = tag$$4.style;
    style$$6.left = labelPos.x + "px";
    style$$6.top = labelPos.y + "px";
    var v6432;
    if (JAM.call(this.fitsInCanvas, this, [labelPos, canvas$$41], JAM.policy.p3)) {
      v6432 = "inline";
    } else {
      v6432 = "none";
    }
    style$$6.display = v6432;
    JAM.call(controller$$11.onPlaceLabel, controller$$11, [tag$$4, node$$103], JAM.policy.p3);
    return;
  }
  function v584(canvas$$40, node$$102, controller$$10) {
    var ctx$$19 = JAM.call(canvas$$40.getCtx, canvas$$40, [], JAM.policy.p3);
    var v6433 = node$$102.pos;
    var coord = JAM.call(v6433.getc, v6433, [true], JAM.policy.p3);
    var width$$24 = JAM.call(node$$102.getData, node$$102, ["width"], JAM.policy.p3);
    var height$$22 = JAM.call(node$$102.getData, node$$102, ["height"], JAM.policy.p3);
    var v6434 = this.viz.fx;
    var pos$$39 = JAM.call(v6434.getAlignedPos, v6434, [coord, width$$24, height$$22], JAM.policy.p3);
    JAM.call(ctx$$19.fillText, ctx$$19, [node$$102.name, pos$$39.x + width$$24 / 2, pos$$39.y + height$$22 / 2], JAM.policy.p3);
    return;
  }
  function v583(adj$$23) {
    var config$$15 = this.config;
    var orn$$7 = config$$15.orientation;
    if (config$$15.multitree) {
      var nodeFrom$$5 = adj$$23.nodeFrom;
      var nodeTo$$7 = adj$$23.nodeTo;
      var v13346 = "$orn" in nodeFrom$$5.data;
      if (v13346) {
        v13346 = nodeFrom$$5.data.$orn;
      }
      var v6438 = v13346;
      if (!v6438) {
        var v13347 = "$orn" in nodeTo$$7.data;
        if (v13347) {
          v13347 = nodeTo$$7.data.$orn;
        }
        v6438 = v13347;
      }
      orn$$7 = v6438;
    }
    return orn$$7;
  }
  function v582(pos$$38, width$$23, height$$21) {
    var nconfig = this.node;
    var square;
    var orn$$6;
    if (nconfig.align === "center") {
      square = {x:pos$$38.x - width$$23 / 2, y:pos$$38.y - height$$21 / 2};
    } else {
      if (nconfig.align === "left") {
        orn$$6 = this.config.orientation;
        var v13355 = orn$$6 === "bottom";
        if (!v13355) {
          v13355 = orn$$6 === "top";
        }
        if (v13355) {
          square = {x:pos$$38.x - width$$23 / 2, y:pos$$38.y};
        } else {
          square = {x:pos$$38.x, y:pos$$38.y - height$$21 / 2};
        }
      } else {
        if (nconfig.align === "right") {
          orn$$6 = this.config.orientation;
          var v13361 = orn$$6 === "bottom";
          if (!v13361) {
            v13361 = orn$$6 === "top";
          }
          if (v13361) {
            square = {x:pos$$38.x - width$$23 / 2, y:pos$$38.y - height$$21};
          } else {
            square = {x:pos$$38.x - width$$23, y:pos$$38.y - height$$21 / 2};
          }
        } else {
          throw "align: not implemented";
        }
      }
    }
    return square;
  }
  function v581(node$$101, opt$$26, scale$$1, animating$$6) {
    function v580(n$$55, ch$$13) {
      var v6457 = config$$14.multitree;
      if (v6457) {
        v6457 = !("$orn" in node$$101.data);
      }
      var root$$19 = v6457;
      var v6458 = root$$19;
      if (v6458) {
        v6458 = JAM.call(node$$101.getData, node$$101, ["orns"], JAM.policy.p3);
      }
      var orns$$3 = v6458;
      var v6459 = !root$$19;
      if (!v6459) {
        v6459 = JAM.call(orns$$3.indexOf, orns$$3, [JAM.call(node$$101.getData, node$$101, ["orn"], JAM.policy.p3)], JAM.policy.p3) > -1;
      }
      return v6459;
    }
    var viz$$28 = this.viz;
    var canvas$$39 = viz$$28.canvas;
    var config$$14 = viz$$28.config;
    scale$$1 = JAM.call(Math.min, Math, [JAM.call(Math.max, Math, [.001, scale$$1], JAM.policy.p3), 1], JAM.policy.p3);
    if (scale$$1 >= 0) {
      node$$101.drawn = false;
      var ctx$$18 = JAM.call(canvas$$39.getCtx, canvas$$39, [], JAM.policy.p3);
      var v6461 = viz$$28.geom;
      var diff$$4 = JAM.call(v6461.getScaledTreePosition, v6461, [node$$101, scale$$1], JAM.policy.p3);
      JAM.call(ctx$$18.translate, ctx$$18, [diff$$4.x, diff$$4.y], JAM.policy.p3);
      JAM.call(ctx$$18.scale, ctx$$18, [scale$$1, scale$$1], JAM.policy.p3);
    }
    JAM.call(this.plotTree, this, [node$$101, JAM.call($$$1.merge, $$$1, [opt$$26, {"withLabels":true, "hideLabels":!!scale$$1, "plotSubtree":v580}], JAM.policy.p3), animating$$6], JAM.policy.p3);
    if (scale$$1 >= 0) {
      node$$101.drawn = true;
    }
    return;
  }
  function v579(node$$100, opt$$25, animating$$5) {
    function v578(elem$$59) {
      var v18629 = JAM.call(opt$$25.plotSubtree, opt$$25, [node$$100, elem$$59], JAM.policy.p3);
      if (v18629) {
        v18629 = elem$$59.exist;
      }
      var v13372 = v18629;
      if (v13372) {
        v13372 = elem$$59.drawn;
      }
      if (v13372) {
        var adj$$22 = JAM.call(node$$100.getAdjacency, node$$100, [elem$$59.id], JAM.policy.p3);
        var v6468 = !animating$$5;
        if (v6468) {
          JAM.call(opt$$25.onBeforePlotLine, opt$$25, [adj$$22], JAM.policy.p3);
        }
        JAM.call(that$$34.plotLine, that$$34, [adj$$22, canvas$$38, animating$$5], JAM.policy.p3);
        var v6469 = !animating$$5;
        if (v6469) {
          JAM.call(opt$$25.onAfterPlotLine, opt$$25, [adj$$22], JAM.policy.p3);
        }
        JAM.call(that$$34.plotTree, that$$34, [elem$$59, opt$$25, animating$$5], JAM.policy.p3);
      }
      return;
    }
    var that$$34 = this;
    var viz$$27 = this.viz;
    var canvas$$38 = viz$$27.canvas;
    var config$$13 = this.config;
    var ctx$$17 = JAM.call(canvas$$38.getCtx, canvas$$38, [], JAM.policy.p3);
    var nodeAlpha$$2 = JAM.call(node$$100.getData, node$$100, ["alpha"], JAM.policy.p3);
    if (viz$$27.clickedNode.id === node$$100.id) {
      JAM.call(ctx$$17.save, ctx$$17, [], JAM.policy.p3);
      ctx$$17.strokeStyle = "yellow";
    }
    JAM.call(node$$100.eachSubnode, node$$100, [v578], JAM.policy.p3);
    if (node$$100.drawn) {
      var v6472 = !animating$$5;
      if (v6472) {
        JAM.call(opt$$25.onBeforePlotNode, opt$$25, [node$$100], JAM.policy.p3);
      }
      JAM.call(this.plotNode, this, [node$$100, canvas$$38, animating$$5], JAM.policy.p3);
      var v6473 = !animating$$5;
      if (v6473) {
        JAM.call(opt$$25.onAfterPlotNode, opt$$25, [node$$100], JAM.policy.p3);
      }
      var v18631 = !opt$$25.hideLabels;
      if (v18631) {
        v18631 = opt$$25.withLabels;
      }
      var v13375 = v18631;
      if (v13375) {
        v13375 = nodeAlpha$$2 >= .95;
      }
      if (v13375) {
        var v6474 = this.labels;
        JAM.call(v6474.plotLabel, v6474, [canvas$$38, node$$100, opt$$25], JAM.policy.p3);
      } else {
        var v6475 = this.labels;
        JAM.call(v6475.hideLabel, v6475, [node$$100, false], JAM.policy.p3);
      }
    } else {
      var v6477 = this.labels;
      JAM.call(v6477.hideLabel, v6477, [node$$100, true], JAM.policy.p3);
    }
    if (viz$$27.clickedNode.id === node$$100.id) {
      JAM.call(ctx$$17.restore, ctx$$17, [], JAM.policy.p3);
    }
    return;
  }
  function v577(node$$99, action$$10, flags$$13) {
    function v576(node1, node2) {
      var v6480 = node1.data;
      var v13378 = node1.data.len;
      if (!v13378) {
        v13378 = 0;
      }
      v6480.len = v13378;
      var v6481 = node2.data;
      var v13379 = node2.data.len;
      if (!v13379) {
        v13379 = 0;
      }
      v6481.len = v13379;
      return node1.data.len - node2.data.len;
    }
    var adj$$21 = node$$99.adjacencies;
    var filter$$5 = JAM.call(this.filter, this, [flags$$13], JAM.policy.p3);
    var id$$35;
    var i$$84;
    var keys = new Array;
    var nodeList$$1 = new Array;
    for (id$$35 in adj$$21) {
      JAM.call(keys.push, keys, [id$$35], JAM.policy.p3);
      if (node$$99 !== adj$$21[id$$35].nodeTo) {
        JAM.call(nodeList$$1.push, nodeList$$1, [adj$$21[id$$35].nodeTo], JAM.policy.p3);
      } else {
        JAM.call(nodeList$$1.push, nodeList$$1, [adj$$21[id$$35].nodeFrom], JAM.policy.p3);
      }
    }
    if (isLateralise()) {
      var cmp = v576;
      nodeList$$1 = JAM.call(nodeList$$1.sort, nodeList$$1, [cmp], JAM.policy.p3);
      keys = new Array;
      i$$84 = 0;
      var v6488 = i$$84 < nodeList$$1.length;
      for (;v6488;) {
        JAM.call(keys.push, keys, [nodeList$$1[i$$84].id], JAM.policy.p3);
        i$$84 = i$$84 + 1;
        v6488 = i$$84 < nodeList$$1.length;
      }
    }
    if (node$$99.data.rotate) {
      keys = JAM.call(keys.reverse, keys, [], JAM.policy.p3);
    }
    for (id$$35 in keys) {
      if (JAM.call(keys.hasOwnProperty, keys, [id$$35], JAM.policy.p3)) {
        var a$$11 = adj$$21[keys[id$$35]];
        if (JAM.call(filter$$5, null, [a$$11], JAM.policy.p3)) {
          if (a$$11.nodeFrom !== node$$99) {
            var tmp$$2 = a$$11.nodeFrom;
            a$$11.nodeFrom = a$$11.nodeTo;
            a$$11.nodeTo = tmp$$2;
          }
          JAM.call(action$$10, null, [a$$11, id$$35], JAM.policy.p3);
        }
      }
    }
    return;
  }
  function v575(node$$97, canvas$$37, level$$15) {
    function v574(level$$16, node$$98) {
      var v6495 = level$$16 === 0;
      if (!v6495) {
        v6495 = !JAM.call(node$$98.anySubnode, node$$98, [], JAM.policy.p3);
      }
      return v6495;
    }
    var csize = JAM.call(canvas$$37.getSize, canvas$$37, [], JAM.policy.p3);
    var v18638 = this.config.multitree;
    if (v18638) {
      v18638 = "$orn" in node$$97.data;
    }
    var v13392 = v18638;
    if (v13392) {
      v13392 = node$$97.data.$orn;
    }
    var v6496 = v13392;
    if (!v6496) {
      v6496 = this.config.orientation;
    }
    var s$$14 = v6496;
    var size$$10 = JAM.call(this.dispatch, this, [s$$14, csize.width, csize.height], JAM.policy.p3);
    var baseSize = JAM.call(this.getTreeBaseSize, this, [node$$97, level$$15, v574], JAM.policy.p3);
    return baseSize < size$$10;
  }
  function v573(node$$96, scale) {
    function $C$$2(a$$10, b$$7) {
      function v572() {
        var v13395 = node$$96.pos;
        var v6499 = JAM.call(v13395.add, v13395, [new Complex(a$$10, b$$7)], JAM.policy.p3);
        return JAM.call(v6499.$scale, v6499, [1 - scale], JAM.policy.p3);
      }
      return v572;
    }
    var dim$$11 = this.node;
    var w$$9 = JAM.call(node$$96.getData, node$$96, ["width"], JAM.policy.p3);
    var h$$7 = JAM.call(node$$96.getData, node$$96, ["height"], JAM.policy.p3);
    var v18640 = this.config.multitree;
    if (v18640) {
      v18640 = "$orn" in node$$96.data;
    }
    var v13397 = v18640;
    if (v13397) {
      v13397 = node$$96.data.$orn;
    }
    var v6501 = v13397;
    if (!v6501) {
      v6501 = this.config.orientation;
    }
    var s$$13 = v6501;
    if (dim$$11.align === "left") {
      return JAM.call(this.dispatch, this, [s$$13, $C$$2(0, h$$7), $C$$2(0, 0), $C$$2(0, 0), $C$$2(w$$9, 0)], JAM.policy.p3);
    } else {
      if (dim$$11.align === "center") {
        return JAM.call(this.dispatch, this, [s$$13, $C$$2(0, h$$7 / 2), $C$$2(-w$$9 / 2, 0), $C$$2(0, -h$$7 / 2), $C$$2(w$$9 / 2, 0)], JAM.policy.p3);
      } else {
        if (dim$$11.align === "right") {
          return JAM.call(this.dispatch, this, [s$$13, $C$$2(0, 0), $C$$2(-w$$9, 0), $C$$2(0, -h$$7), $C$$2(0, 0)], JAM.policy.p3);
        } else {
          throw "align: not implemented";
        }
      }
    }
    return;
  }
  function v571(node$$95, type$$57, s$$12) {
    function $C$$1(a$$9, b$$6) {
      function v570() {
        var v6517 = node$$95.pos;
        return JAM.call(v6517.add, v6517, [new Complex(a$$9, b$$6)], JAM.policy.p3);
      }
      return v570;
    }
    var dim$$10 = this.node;
    var w$$8 = JAM.call(node$$95.getData, node$$95, ["width"], JAM.policy.p3);
    var h$$6 = JAM.call(node$$95.getData, node$$95, ["height"], JAM.policy.p3);
    if (type$$57 === "begin") {
      if (dim$$10.align === "center") {
        return JAM.call(this.dispatch, this, [s$$12, $C$$1(0, h$$6 / 2), $C$$1(-w$$8 / 2, 0), $C$$1(0, -h$$6 / 2), $C$$1(w$$8 / 2, 0)], JAM.policy.p3);
      } else {
        if (dim$$10.align === "left") {
          return JAM.call(this.dispatch, this, [s$$12, $C$$1(0, h$$6), $C$$1(0, 0), $C$$1(0, 0), $C$$1(w$$8, 0)], JAM.policy.p3);
        } else {
          if (dim$$10.align === "right") {
            return JAM.call(this.dispatch, this, [s$$12, $C$$1(0, 0), $C$$1(-w$$8, 0), $C$$1(0, -h$$6), $C$$1(0, 0)], JAM.policy.p3);
          } else {
            throw "align: not implemented";
          }
        }
      }
    } else {
      if (type$$57 === "end") {
        if (dim$$10.align === "center") {
          return JAM.call(this.dispatch, this, [s$$12, $C$$1(0, -h$$6 / 2), $C$$1(w$$8 / 2, 0), $C$$1(0, h$$6 / 2), $C$$1(-w$$8 / 2, 0)], JAM.policy.p3);
        } else {
          if (dim$$10.align === "left") {
            return JAM.call(this.dispatch, this, [s$$12, $C$$1(0, 0), $C$$1(w$$8, 0), $C$$1(0, h$$6), $C$$1(0, 0)], JAM.policy.p3);
          } else {
            if (dim$$10.align === "right") {
              return JAM.call(this.dispatch, this, [s$$12, $C$$1(0, -h$$6), $C$$1(0, 0), $C$$1(0, 0), $C$$1(-w$$8, 0)], JAM.policy.p3);
            } else {
              throw "align: not implemented";
            }
          }
        }
      }
    }
    return;
  }
  function v569(node$$94, level$$14, leaf) {
    function v568(elem$$58) {
      baseHeight = baseHeight + JAM.call(that$$33.getTreeBaseSize, that$$33, [elem$$58, level$$14 - 1, leaf], JAM.policy.p3);
      return;
    }
    var size$$9 = JAM.call(this.getSize, this, [node$$94, true], JAM.policy.p3);
    var baseHeight = 0;
    var that$$33 = this;
    if (JAM.call(leaf, null, [level$$14, node$$94], JAM.policy.p3)) {
      return size$$9;
    }
    if (level$$14 === 0) {
      return 0;
    }
    JAM.call(node$$94.eachSubnode, node$$94, [v568], JAM.policy.p3);
    var v13429;
    if (size$$9 > baseHeight) {
      v13429 = size$$9;
    } else {
      v13429 = baseHeight;
    }
    return v13429 + this.config.subtreeOffset;
  }
  function v567(n$$54, invert$$1) {
    var data$$27 = n$$54.data;
    var config$$12 = this.config;
    var siblingOffset$$1 = config$$12.siblingOffset;
    var v18650 = config$$12.multitree;
    if (v18650) {
      v18650 = "$orn" in data$$27;
    }
    var v13431 = v18650;
    if (v13431) {
      v13431 = data$$27.$orn;
    }
    var v6555 = v13431;
    if (!v6555) {
      v6555 = config$$12.orientation;
    }
    var s$$11 = v6555;
    var w$$7 = JAM.call(n$$54.getData, n$$54, ["width"], JAM.policy.p3) + siblingOffset$$1;
    var h$$5 = JAM.call(n$$54.getData, n$$54, ["height"], JAM.policy.p3) + siblingOffset$$1;
    if (!invert$$1) {
      return JAM.call(this.dispatch, this, [s$$11, h$$5, w$$7], JAM.policy.p3);
    } else {
      return JAM.call(this.dispatch, this, [s$$11, w$$7, h$$5], JAM.policy.p3);
    }
    return;
  }
  function v566() {
    function val$$6(a$$8) {
      var v6559;
      if (typeof a$$8 === "function") {
        v6559 = JAM.call(a$$8, null, [], JAM.policy.p3);
      } else {
        v6559 = a$$8;
      }
      return v6559;
    }
    var v6560 = Array.prototype.slice;
    var args$$3 = JAM.call(v6560.call, v6560, [arguments], JAM.policy.p3);
    var s$$10 = JAM.call(args$$3.shift, args$$3, [], JAM.policy.p3);
    var len$$6 = args$$3.length;
    if (len$$6 === 2) {
      var v6561;
      var v18652 = s$$10 === "top";
      if (!v18652) {
        v18652 = s$$10 === "bottom";
      }
      if (v18652) {
        v6561 = val$$6(args$$3[0]);
      } else {
        v6561 = val$$6(args$$3[1]);
      }
      return v6561;
    } else {
      if (len$$6 === 4) {
        switch(s$$10) {
          case "top":
            return val$$6(args$$3[0]);
          case "right":
            return val$$6(args$$3[1]);
          case "bottom":
            return val$$6(args$$3[2]);
          case "left":
            return val$$6(args$$3[3]);
        }
      }
    }
    return undefined;
  }
  function v565(orn$$5) {
    this.config.orientation = orn$$5;
    return;
  }
  function v564(nodes$$11) {
    function v563(n$$53) {
      function v562(sn$$1) {
        JAM.call(ans$$17.push, ans$$17, [sn$$1], JAM.policy.p3);
        return;
      }
      var par$$1 = JAM.call(n$$53.getParents, n$$53, [], JAM.policy.p3);
      if (par$$1.length === 0) {
        JAM.set(siblings, n$$53.id, [n$$53], JAM.policy.p2);
      } else {
        var ans$$17 = [];
        var v6570 = par$$1[0];
        JAM.call(v6570.eachSubnode, v6570, [v562], JAM.policy.p3);
        JAM.set(siblings, n$$53.id, ans$$17, JAM.policy.p2);
      }
      return;
    }
    var siblings = {};
    JAM.call($$$1.each, $$$1, [nodes$$11, v563], JAM.policy.p3);
    return siblings;
  }
  function v561(delta$$23, controller$$9, animating$$4) {
    function v560(n$$52) {
      n$$52.drawn = true;
      return;
    }
    function v559(n$$51) {
      var v18653 = root$$18 && orns$$2;
      if (v18653) {
        v18653 = JAM.call(orns$$2.indexOf, orns$$2, [n$$51.data.$orn], JAM.policy.p3) > 0;
      }
      var v13439 = v18653;
      if (v13439) {
        v13439 = n$$51.drawn;
      }
      if (v13439) {
        n$$51.drawn = false;
        var v6573 = nds[node$$93.id];
        JAM.call(v6573.push, v6573, [n$$51], JAM.policy.p3);
      } else {
        var v18654 = !root$$18;
        if (!v18654) {
          v18654 = !orns$$2;
        }
        var v13441 = v18654;
        if (v13441) {
          v13441 = n$$51.drawn;
        }
        if (v13441) {
          n$$51.drawn = false;
          var v6574 = nds[node$$93.id];
          JAM.call(v6574.push, v6574, [n$$51], JAM.policy.p3);
        }
      }
      return;
    }
    var viz$$26 = this.viz;
    var config$$11 = this.config;
    var canvas$$36 = viz$$26.canvas;
    var ctx$$16 = JAM.call(canvas$$36.getCtx, canvas$$36, [], JAM.policy.p3);
    var nodes$$10 = this.nodes;
    var i$$83;
    var node$$93;
    var nds = {};
    i$$83 = 0;
    var v6580 = i$$83 < nodes$$10.length;
    for (;v6580;) {
      node$$93 = nodes$$10[i$$83];
      JAM.set(nds, node$$93.id, [], JAM.policy.p2);
      var v6578 = config$$11.multitree;
      if (v6578) {
        v6578 = !("$orn" in node$$93.data);
      }
      var root$$18 = v6578;
      var v6579 = root$$18;
      if (v6579) {
        v6579 = node$$93.data.$orns;
      }
      var orns$$2 = v6579;
      JAM.call(node$$93.eachSubgraph, node$$93, [v559], JAM.policy.p3);
      node$$93.drawn = true;
      i$$83 = i$$83 + 1;
      v6580 = i$$83 < nodes$$10.length;
    }
    if (nodes$$10.length > 0) {
      var v6581 = viz$$26.fx;
      JAM.call(v6581.plot, v6581, [], JAM.policy.p3);
    }
    for (i$$83 in nds) {
      JAM.call($$$1.each, $$$1, [nds[i$$83], v560], JAM.policy.p3);
    }
    i$$83 = 0;
    var v6585 = i$$83 < nodes$$10.length;
    for (;v6585;) {
      node$$93 = nodes$$10[i$$83];
      JAM.call(ctx$$16.save, ctx$$16, [], JAM.policy.p3);
      var v6584 = viz$$26.fx;
      JAM.call(v6584.plotSubtree, v6584, [node$$93, controller$$9, delta$$23, animating$$4], JAM.policy.p3);
      JAM.call(ctx$$16.restore, ctx$$16, [], JAM.policy.p3);
      i$$83 = i$$83 + 1;
      v6585 = i$$83 < nodes$$10.length;
    }
    return;
  }
  function v558(nodes$$9) {
    function v557(a$$7, b$$5) {
      return(a$$7._depth <= b$$5._depth) - (a$$7._depth >= b$$5._depth);
    }
    var ans$$16 = [];
    var config$$10 = this.config;
    var root$$17 = this.viz.root;
    var i$$82;
    var j$$13;
    var desc;
    JAM.call(nodes$$9.sort, nodes$$9, [v557], JAM.policy.p3);
    i$$82 = 0;
    var v6595 = i$$82 < nodes$$9.length;
    for (;v6595;) {
      var v13455 = nodes$$9[i$$82];
      if (JAM.call(v13455.anySubnode, v13455, ["exist"], JAM.policy.p3)) {
        j$$13 = i$$82 + 1;
        desc = false;
        var v13456 = !desc;
        if (v13456) {
          v13456 = j$$13 < nodes$$9.length;
        }
        var v6591 = v13456;
        for (;v6591;) {
          var v13457 = !config$$10.multitree;
          if (!v13457) {
            v13457 = "$orn" in nodes$$9[j$$13].data;
          }
          if (v13457) {
            var v6589 = desc;
            if (!v6589) {
              var v13458 = nodes$$9[i$$82];
              v6589 = JAM.call(v13458.isDescendantOf, v13458, [nodes$$9[j$$13].id], JAM.policy.p3);
            }
            desc = v6589;
          }
          j$$13 = j$$13 + 1;
          var v13461 = !desc;
          if (v13461) {
            v13461 = j$$13 < nodes$$9.length;
          }
          v6591 = v13461;
        }
        if (!desc) {
          JAM.call(ans$$16.push, ans$$16, [nodes$$9[i$$82]], JAM.policy.p3);
        }
      }
      i$$82 = i$$82 + 1;
      v6595 = i$$82 < nodes$$9.length;
    }
    return ans$$16;
  }
  function v556(nodes$$8) {
    var v31149 = JAM.call(this.getNodesWithChildren, this, [nodes$$8], JAM.policy.p3);
    this.nodes = v31149;
    return this.nodes;
  }
  function v555(nodes$$7) {
    function v554(n$$49) {
      function v553(n$$50) {
        if (n$$50.exist) {
          n$$50.drawn = true;
        }
        return;
      }
      function v552(ch$$12) {
        var v22231 = "$orn" in ch$$12.data;
        if (v22231) {
          v22231 = JAM.call(orns$$1.indexOf, orns$$1, [ch$$12.data.$orn], JAM.policy.p3) < 0;
        }
        var v18662 = v22231;
        if (v18662) {
          v18662 = ch$$12.exist;
        }
        var v13463 = v18662;
        if (v13463) {
          v13463 = !ch$$12.drawn;
        }
        if (v13463) {
          orns$$1 = orns$$1 + (ch$$12.data.$orn + " ");
        }
        return;
      }
      var v13465 = config$$9.multitree;
      if (v13465) {
        v13465 = !("$orn" in n$$49.data);
      }
      if (v13465) {
        delete n$$49.data.$orns;
        var orns$$1 = " ";
        JAM.call(n$$49.eachSubnode, n$$49, [v552], JAM.policy.p3);
        n$$49.data.$orns = orns$$1;
      }
      JAM.call(n$$49.eachLevel, n$$49, [0, config$$9.levelsToShow, v553], JAM.policy.p3);
      return;
    }
    var config$$9 = this.config;
    JAM.call(this.prepare, this, [nodes$$7], JAM.policy.p3);
    JAM.call($$$1.each, $$$1, [nodes$$7, v554], JAM.policy.p3);
    return;
  }
  function v551(nodes$$6, controller$$8) {
    function v550() {
      JAM.call(that$$32.plotStep, that$$32, [undefined, controller$$8, false], JAM.policy.p3);
      JAM.call(controller$$8.onComplete, controller$$8, [], JAM.policy.p3);
      return;
    }
    function v549(delta$$22) {
      JAM.call(that$$32.plotStep, that$$32, [delta$$22, controller$$8, this.$animating], JAM.policy.p3);
      this.$animating = "expand";
      return;
    }
    var that$$32 = this;
    JAM.call(this.show, this, [nodes$$6], JAM.policy.p3);
    var v13466 = this.animation;
    var v6603 = JAM.call(v13466.setOptions, v13466, [JAM.call($$$1.merge, $$$1, [controller$$8, {$animating:false, compute:v549, complete:v550}], JAM.policy.p3)], JAM.policy.p3);
    JAM.call(v6603.start, v6603, [], JAM.policy.p3);
    return;
  }
  function v548(nodes$$5, controller$$7) {
    function v547(n$$48) {
      JAM.call(ids$$1.push, ids$$1, [n$$48.id], JAM.policy.p3);
      return;
    }
    function v546(elem$$57) {
      if (elem$$57.exist) {
        JAM.call($$$1.extend, $$$1, [elem$$57, {"drawn":false, "exist":false}], JAM.policy.p3);
      }
      return;
    }
    var viz$$25 = this.viz;
    var i$$81;
    i$$81 = 0;
    var v6613 = i$$81 < nodes$$5.length;
    for (;v6613;) {
      var v18667 = true;
      if (!v18667) {
        v18667 = !controller$$7;
      }
      var v13469 = v18667;
      if (!v13469) {
        v13469 = !controller$$7.request;
      }
      if (v13469) {
        var v6607 = nodes$$5[i$$81];
        JAM.call(v6607.eachLevel, v6607, [1, false, v546], JAM.policy.p3);
      } else {
        var ids$$1 = [];
        var v6608 = nodes$$5[i$$81];
        JAM.call(v6608.eachLevel, v6608, [1, false, v547], JAM.policy.p3);
        var v6609 = viz$$25.op;
        JAM.call(v6609.removeNode, v6609, [ids$$1, {"type":"nothing"}], JAM.policy.p3);
        var v6611 = viz$$25.labels;
        JAM.call(v6611.clearLabels, v6611, [], JAM.policy.p3);
      }
      i$$81 = i$$81 + 1;
      v6613 = i$$81 < nodes$$5.length;
    }
    JAM.call(controller$$7.onComplete, controller$$7, [], JAM.policy.p3);
    return;
  }
  function v545(nodes$$4, controller$$6) {
    function v544() {
      JAM.call(that$$31.hide, that$$31, [nodes$$4, controller$$6], JAM.policy.p3);
      return;
    }
    function v543(delta$$21) {
      if (delta$$21 === 1) {
        delta$$21 = .99;
      }
      JAM.call(that$$31.plotStep, that$$31, [1 - delta$$21, controller$$6, this.$animating], JAM.policy.p3);
      this.$animating = "contract";
      return;
    }
    var viz$$24 = this.viz;
    var that$$31 = this;
    nodes$$4 = JAM.call(this.prepare, this, [nodes$$4], JAM.policy.p3);
    var v13471 = this.animation;
    var v6617 = JAM.call(v13471.setOptions, v13471, [JAM.call($$$1.merge, $$$1, [controller$$6, {$animating:false, compute:v543, complete:v544}], JAM.policy.p3)], JAM.policy.p3);
    JAM.call(v6617.start, v6617, [], JAM.policy.p3);
    return;
  }
  function v542(nodes$$3, controller$$5) {
    function v541(nodeId, data$$26) {
      var v13473 = data$$26;
      if (v13473) {
        v13473 = data$$26.children;
      }
      if (v13473) {
        data$$26.id = nodeId;
        var v6618 = viz$$23.op;
        JAM.call(v6618.sum, v6618, [data$$26, {type:"nothing"}], JAM.policy.p3);
      }
      if ((counter = counter + 1) === len$$5) {
        var v6621 = viz$$23.graph;
        JAM.call(v6621.computeLevels, v6621, [viz$$23.root, 0], JAM.policy.p3);
        JAM.call(controller$$5.onComplete, controller$$5, [], JAM.policy.p3);
      }
      return;
    }
    var counter = 0;
    var len$$5 = nodes$$3.length;
    var nodeSelected = {};
    var i$$80;
    var viz$$23 = this.viz;
    if (len$$5 === 0) {
      JAM.call(controller$$5.onComplete, controller$$5, [], JAM.policy.p3);
    }
    i$$80 = 0;
    var v6629 = i$$80 < len$$5;
    for (;v6629;) {
      JAM.set(nodeSelected, nodes$$3[i$$80].id, nodes$$3[i$$80], JAM.policy.p2);
      JAM.call(controller$$5.request, controller$$5, [nodes$$3[i$$80].id, nodes$$3[i$$80]._level, {onComplete:v541}], JAM.policy.p3);
      i$$80 = i$$80 + 1;
      v6629 = i$$80 < len$$5;
    }
    return;
  }
  function v540(viz$$22) {
    this.viz = viz$$22;
    this.canvas = viz$$22.canvas;
    this.config = viz$$22.config;
    var v31150 = new Animation;
    this.animation = v31150;
    this.nodes = null;
    return;
  }
  function v539() {
    function v538(id$$34, options$$11) {
      var canvas$$35 = this.canvas;
      var that$$30 = this;
      var Geom$$3 = this.geom;
      var config$$8 = this.config;
      var v18671 = config$$8.offsetX;
      if (!v18671) {
        v18671 = 0;
      }
      var v13478 = v18671;
      var v18672 = config$$8.offsetY;
      if (!v18672) {
        v18672 = 0;
      }
      var innerController = {Move:{enable:true, offsetX:v13478, offsetY:v18672}, setRightLevelToShowConfig:false, onBeforeRequest:$$$1.empty, onBeforeContract:$$$1.empty, onBeforeMove:$$$1.empty, onBeforeExpand:$$$1.empty};
      var complete$$1 = JAM.call($$$1.merge, $$$1, [this.controller, innerController, options$$11], JAM.policy.p3);
      if (!this.busy) {
        this.busy = true;
        var v6636 = this.graph;
        var node$$92 = JAM.call(v6636.getNode, v6636, [id$$34], JAM.policy.p3);
        JAM.call(this.selectPath, this, [node$$92, this.clickedNode], JAM.policy.p3);
        this.clickedNode = node$$92;
        JAM.call(complete$$1.onBeforeCompute, complete$$1, [node$$92], JAM.policy.p3);
        JAM.call(complete$$1.onBeforeRequest, complete$$1, [node$$92], JAM.policy.p3);
        JAM.call(complete$$1.onBeforeContract, complete$$1, [node$$92], JAM.policy.p3);
        JAM.call(Geom$$3.setRightLevelToShow, Geom$$3, [node$$92, canvas$$35, complete$$1.setRightLevelToShowConfig], JAM.policy.p3);
        JAM.call(complete$$1.onBeforeMove, complete$$1, [node$$92], JAM.policy.p3);
        var nodes$$2 = JAM.call(getNodesToShow.call, getNodesToShow, [this, node$$92], JAM.policy.p3);
        var v6639 = that$$30.group;
        JAM.call(v6639.show, v6639, [nodes$$2], JAM.policy.p3);
        JAM.call(that$$30.computePositions, that$$30, [node$$92, ""], JAM.policy.p3);
        JAM.call(complete$$1.onAfterCompute, complete$$1, [id$$34], JAM.policy.p3);
        this.busy = false;
      }
      return;
    }
    function v537(id$$33, onComplete$$9) {
      function v536() {
        function v535(n$$47) {
          var v6641 = n$$47.pos;
          var pos$$37 = JAM.call(v6641.getc, v6641, [true], JAM.policy.p3);
          var v6642 = n$$47.startPos;
          JAM.call(v6642.setc, v6642, [pos$$37.x, pos$$37.y], JAM.policy.p3);
          var v6645 = n$$47.endPos;
          JAM.call(v6645.setc, v6645, [pos$$37.x, pos$$37.y], JAM.policy.p3);
          n$$47.visited = false;
          return;
        }
        JAM.call(group$$1.hide, group$$1, [JAM.call(group$$1.prepare, group$$1, [JAM.call(getNodesToHide.call, getNodesToHide, [that$$29], JAM.policy.p3)], JAM.policy.p3), complete], JAM.policy.p3);
        JAM.call(geom$$5.setRightLevelToShow, geom$$5, [node$$91, canvas$$34], JAM.policy.p3);
        JAM.call(that$$29.compute, that$$29, ["current"], JAM.policy.p3);
        var v6649 = that$$29.graph;
        JAM.call(v6649.eachNode, v6649, [v535], JAM.policy.p3);
        var offset$$11 = {x:complete.offsetX, y:complete.offsetY};
        var v6652 = that$$29.geom;
        var v18673 = node$$91.endPos;
        var v13482 = JAM.call(v18673.add, v18673, [offset$$11], JAM.policy.p3);
        JAM.call(v6652.translate, v6652, [JAM.call(v13482.$scale, v13482, [-1], JAM.policy.p3), ["start", "current", "end"]], JAM.policy.p3);
        JAM.call(group$$1.show, group$$1, [JAM.call(getNodesToShow.call, getNodesToShow, [that$$29], JAM.policy.p3)], JAM.policy.p3);
        JAM.call(that$$29.plot, that$$29, [], JAM.policy.p3);
        JAM.call(complete.onAfterCompute, complete, [that$$29.clickedNode], JAM.policy.p3);
        JAM.call(complete.onComplete, complete, [], JAM.policy.p3);
        return;
      }
      var group$$1 = this.group;
      var geom$$5 = this.geom;
      var v6657 = this.graph;
      var node$$91 = JAM.call(v6657.getNode, v6657, [id$$33], JAM.policy.p3);
      var canvas$$34 = this.canvas;
      var v6658 = this.graph;
      var root$$16 = JAM.call(v6658.getNode, v6658, [this.root], JAM.policy.p3);
      var complete = JAM.call($$$1.merge, $$$1, [this.controller, onComplete$$9], JAM.policy.p3);
      var that$$29 = this;
      JAM.call(complete.onBeforeCompute, complete, [node$$91], JAM.policy.p3);
      JAM.call(this.selectPath, this, [node$$91], JAM.policy.p3);
      this.clickedNode = node$$91;
      JAM.call(this.requestNodes, this, [node$$91, {onComplete:v536}], JAM.policy.p3);
      return;
    }
    function v534(id$$32, removeRoot, method$$6, onComplete$$8) {
      function v533(n$$46) {
        JAM.call(subids.push, subids, [n$$46.id], JAM.policy.p3);
        return;
      }
      var v6663 = this.graph;
      var node$$90 = JAM.call(v6663.getNode, v6663, [id$$32], JAM.policy.p3);
      var subids = [];
      JAM.call(node$$90.eachLevel, node$$90, [+!removeRoot, false, v533], JAM.policy.p3);
      if (method$$6 === "replot") {
        var v6665 = this.op;
        JAM.call(v6665.removeNode, v6665, [subids, JAM.call($$$1.extend, $$$1, [{type:"replot"}, onComplete$$8 || {}], JAM.policy.p3)], JAM.policy.p3);
      } else {
        if (method$$6 === "animate") {
          var v6667 = this.op;
          JAM.call(v6667.removeNode, v6667, [subids, JAM.call($$$1.extend, $$$1, [{type:"fade:seq"}, onComplete$$8 || {}], JAM.policy.p3)], JAM.policy.p3);
        }
      }
      return;
    }
    function v532(subtree$$2, method$$5, onComplete$$7) {
      if (method$$5 === "replot") {
        var v6671 = this.op;
        JAM.call(v6671.sum, v6671, [subtree$$2, JAM.call($$$1.extend, $$$1, [{type:"replot"}, onComplete$$7 || {}], JAM.policy.p3)], JAM.policy.p3);
      } else {
        if (method$$5 === "animate") {
          var v6673 = this.op;
          JAM.call(v6673.sum, v6673, [subtree$$2, JAM.call($$$1.extend, $$$1, [{type:"fade:seq"}, onComplete$$7 || {}], JAM.policy.p3)], JAM.policy.p3);
        }
      }
      return;
    }
    function v531(id$$31, method$$4, onComplete$$6) {
      function $setRoot() {
        function v530() {
          that$$28.busy = false;
          return;
        }
        this.root = id$$31;
        var v6677 = this.graph;
        var node$$89 = JAM.call(v6677.getNode, v6677, [id$$31], JAM.policy.p3);
        this.clickedNode = clickedNode;
        var v6678 = this.graph;
        JAM.call(v6678.computeLevels, v6678, [this.root, 0, "ignore"], JAM.policy.p3);
        node$$89.collapsed = true;
        JAM.call(this.nodesExpCol, this, [node$$89], JAM.policy.p3);
        JAM.call(this.computePositions, this, [node$$89, "end", true], JAM.policy.p3);
        var v13492 = this.graph;
        JAM.call(this.computeLeaves, this, [JAM.call(v13492.getNode, v13492, [id$$31], JAM.policy.p3), 0], JAM.policy.p3);
        var v13493 = this.graph;
        JAM.call(this.fitchParsimony, this, [JAM.call(v13493.getNode, v13493, [id$$31], JAM.policy.p3)], JAM.policy.p3);
        JAM.call(this.colorCharacter, this, [], JAM.policy.p3);
        var v6682 = this.fx;
        JAM.call(v6682.animate, v6682, [{modes:["linear", "node-property:alpha"], onComplete:v530}], JAM.policy.p3);
        return;
      }
      if (this.busy) {
        return;
      }
      this.busy = true;
      var that$$28 = this;
      var canvas$$33 = this.canvas;
      var v6685 = this.graph;
      var clickedNode = JAM.call(v6685.getNode, v6685, [id$$31], JAM.policy.p3);
      if (method$$4 === "animate") {
        JAM.call($setRoot.call, $setRoot, [this], JAM.policy.p3);
      } else {
        if (method$$4 === "replot") {
          JAM.call($setRoot.call, $setRoot, [this], JAM.policy.p3);
        }
      }
      this.zoomIndex = this.graph.depth.length - 1;
      return;
    }
    function v529(node$$87) {
      function v528(n$$45) {
        n$$45.selected = false;
        return;
      }
      function path(node$$88) {
        function v527(n$$44) {
          n$$44.exist = true;
          n$$44.drawn = true;
          return;
        }
        var v13496 = node$$88 === null;
        if (!v13496) {
          v13496 = node$$88.selected;
        }
        if (v13496) {
          return;
        }
        node$$88.selected = true;
        var v18676 = that$$27.group;
        JAM.call($$$1.each, $$$1, [JAM.call(v18676.getSiblings, v18676, [[node$$88]], JAM.policy.p3)[node$$88.id], v527], JAM.policy.p3);
        var parents = JAM.call(node$$88.getParents, node$$88, [], JAM.policy.p3);
        var v6691;
        if (parents.length > 0) {
          v6691 = parents[0];
        } else {
          v6691 = null;
        }
        parents = v6691;
        path(parents);
        return;
      }
      var that$$27 = this;
      var i$$79;
      var ns$$1;
      var v6692 = this.graph;
      JAM.call(v6692.eachNode, v6692, [v528], JAM.policy.p3);
      i$$79 = 0;
      var v13500 = [node$$87.id];
      ns$$1 = JAM.call(v13500.concat, v13500, [nodesInPath], JAM.policy.p3);
      var v6694 = i$$79 < ns$$1.length;
      for (;v6694;) {
        var v13502 = this.graph;
        path(JAM.call(v13502.getNode, v13502, [ns$$1[i$$79]], JAM.policy.p3));
        i$$79 = i$$79 + 1;
        v6694 = i$$79 < ns$$1.length;
      }
      return;
    }
    function v526(node$$86, onComplete$$5) {
      var nodeArray$$2 = JAM.call(getNodesToShow.call, getNodesToShow, [this, node$$86], JAM.policy.p3);
      var v6695 = this.group;
      JAM.call(v6695.expand, v6695, [nodeArray$$2, JAM.call($$$1.merge, $$$1, [this.controller, onComplete$$5], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    function v525(node$$85, onComplete$$4) {
      JAM.call(this.compute, this, ["end", false], JAM.policy.p3);
      var move = onComplete$$4.Move;
      var JSCompiler_object_inline_x_88 = move.offsetX;
      var JSCompiler_object_inline_y_89 = move.offsetY;
      var v6697 = this.fx;
      JAM.call(v6697.animate, v6697, [JAM.call($$$1.merge, $$$1, [this.controller, {modes:["linear"]}, onComplete$$4], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    function v524(onComplete$$3, switched) {
      var orn$$4 = this.config.orientation;
      var Geom$$2 = this.geom;
      var Group = this.group;
      if (switched) {
        JAM.call(Geom$$2.switchOrientation, Geom$$2, [switched], JAM.policy.p3);
      }
      var nodes$$1 = JAM.call(getNodesToHide.call, getNodesToHide, [this], JAM.policy.p3);
      if (switched) {
        JAM.call(Geom$$2.switchOrientation, Geom$$2, [orn$$4], JAM.policy.p3);
      }
      JAM.call(Group.contract, Group, [nodes$$1, JAM.call($$$1.merge, $$$1, [this.controller, onComplete$$3], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    function v523(node$$84, onComplete$$2) {
      function v522(n$$43) {
        var v13509 = n$$43.drawn;
        if (v13509) {
          v13509 = !JAM.call(n$$43.anySubnode, n$$43, [], JAM.policy.p3);
        }
        if (v13509) {
          JAM.call(leaves$$2.push, leaves$$2, [n$$43], JAM.policy.p3);
          n$$43._level = lev - (n$$43._depth - d$$5);
        }
        return;
      }
      var handler$$3 = JAM.call($$$1.merge, $$$1, [this.controller, onComplete$$2], JAM.policy.p3);
      var lev = this.config.levelsToShow;
      if (handler$$3.request) {
        var leaves$$2 = [];
        var d$$5 = node$$84._depth;
        JAM.call(node$$84.eachLevel, node$$84, [0, lev, v522], JAM.policy.p3);
        var v6705 = this.group;
        JAM.call(v6705.requestNodes, v6705, [leaves$$2, handler$$3], JAM.policy.p3);
      } else {
        JAM.call(handler$$3.onComplete, handler$$3, [], JAM.policy.p3);
      }
      return;
    }
    function v521() {
      function v520(n$$42) {
        if (n$$42.exist) {
          n$$42.drawn = true;
        }
        return;
      }
      var v6708 = this.graph;
      JAM.call(v6708.computeLevels, v6708, [this.root, 0, "ignore"], JAM.policy.p3);
      var v6710 = this.geom;
      JAM.call(v6710.setRightLevelToShow, v6710, [this.clickedNode, this.canvas], JAM.policy.p3);
      var v6713 = this.graph;
      JAM.call(v6713.eachNode, v6713, [v520], JAM.policy.p3);
      JAM.call(this.compute, this, ["end"], JAM.policy.p3);
      return;
    }
    function v519() {
      JAM.call(this.reposition, this, [], JAM.policy.p3);
      var v18682 = this.clickedNode;
      if (v18682) {
        v18682 = this.clickedNode.id;
      }
      var v13511 = v18682;
      if (!v13511) {
        v13511 = this.root;
      }
      JAM.call(this.select, this, [v13511], JAM.policy.p3);
      return;
    }
    function v518(id$$30) {
      nodesInPath.length = 0;
      var v18684 = this.clickedNode;
      if (v18684) {
        v18684 = this.clickedNode.id;
      }
      var v13512 = v18684;
      if (!v13512) {
        v13512 = this.root;
      }
      JAM.call(this.select, this, [v13512], JAM.policy.p3);
      return;
    }
    function v517(id$$29) {
      JAM.call(nodesInPath.push, nodesInPath, [id$$29], JAM.policy.p3);
      var v18686 = this.clickedNode;
      if (v18686) {
        v18686 = this.clickedNode.id;
      }
      var v13513 = v18686;
      if (!v13513) {
        v13513 = this.root;
      }
      JAM.call(this.select, this, [v13513], JAM.policy.p3);
      return;
    }
    function v516(align$$2, method$$3, onComplete$$1) {
      this.config.align = align$$2;
      if (method$$3 === "animate") {
        JAM.call(this.select, this, [this.clickedNode.id, onComplete$$1], JAM.policy.p3);
      } else {
        if (method$$3 === "replot") {
          JAM.call(this.onClick, this, [this.clickedNode.id, onComplete$$1], JAM.policy.p3);
        }
      }
      return;
    }
    function v515(pos$$36, method$$2, onComplete) {
      function v514() {
        JAM.call(Geom$$1.switchOrientation, Geom$$1, [pos$$36], JAM.policy.p3);
        JAM.call(that$$26.compute, that$$26, ["end", false], JAM.policy.p3);
        Plot.busy = false;
        if (method$$2 === "animate") {
          JAM.call(that$$26.onClick, that$$26, [that$$26.clickedNode.id, onComplete], JAM.policy.p3);
        } else {
          if (method$$2 === "replot") {
            JAM.call(that$$26.select, that$$26, [that$$26.clickedNode.id, onComplete], JAM.policy.p3);
          }
        }
        return;
      }
      var Geom$$1 = this.geom;
      var Plot = this.fx;
      var that$$26 = this;
      if (!Plot.busy) {
        Plot.busy = true;
        JAM.call(this.contract, this, [{onComplete:v514}, pos$$36], JAM.policy.p3);
      }
      return;
    }
    function v513(scroll$$3) {
      function v512(subn$$5) {
        var v6728;
        if (show$$2) {
          v6728 = !subn$$5.exist;
        } else {
          v6728 = subn$$5.exist;
        }
        var nodeVisible = v6728;
        if (nodeVisible) {
          subn$$5.exist = show$$2;
          subn$$5.drawn = show$$2;
        }
        return;
      }
      if (!this.busy) {
        this.busy = true;
        var v6729 = this.config;
        JAM.call(v6729.onBeforeCompute, v6729, [{name:""}], JAM.policy.p3);
        var viz$$21 = this;
        var graph$$19 = viz$$21.graph;
        var flag$$2 = true;
        var v6731 = viz$$21.graph;
        var node$$83 = JAM.call(v6731.getNode, v6731, [viz$$21.root], JAM.policy.p3);
        var step$$2 = 2;
        var min$$6 = 1;
        var max$$4 = graph$$19.depth.length - 1;
        var j$$12;
        if (typeof viz$$21.zoomIndex === "undefined") {
          viz$$21.zoomIndex = 1;
        }
        var i$$78 = viz$$21.zoomIndex;
        if (i$$78 < 1) {
          i$$78 = 1;
        } else {
          if (i$$78 > graph$$19.depth.length - 1) {
            i$$78 = graph$$19.depth.length - 1;
          }
        }
        var v6738;
        if (scroll$$3 < 0) {
          v6738 = false;
        } else {
          v6738 = true;
        }
        var show$$2 = v6738;
        step$$2 = JAM.call(Math.round, Math, [graph$$19.depth.length / 10], JAM.policy.p3);
        step$$2 = JAM.call(Math.max, Math, [step$$2, 2], JAM.policy.p3);
        var maxDepth = graph$$19.depth.length;
        var nodelist = graph$$19.depth[i$$78];
        j$$12 = nodelist.length - 1;
        var v6743 = j$$12 >= 0;
        for (;v6743;) {
          var n$$41 = nodelist[j$$12];
          JAM.call(n$$41.eachLevel, n$$41, [1, step$$2, v512], JAM.policy.p3);
          j$$12 = j$$12 - 1;
          v6743 = j$$12 >= 0;
        }
        JAM.call(viz$$21.computePositions, viz$$21, [node$$83, ""], JAM.policy.p3);
        JAM.call(viz$$21.plot, viz$$21, [], JAM.policy.p3);
        var v6744 = viz$$21.config;
        JAM.call(v6744.onAfterCompute, v6744, ["Depth " + i$$78], JAM.policy.p3);
        var v22241;
        if (show$$2) {
          v22241 = +1;
        } else {
          v22241 = -1;
        }
        i$$78 = i$$78 + v22241 * step$$2;
        viz$$21.zoomIndex = i$$78;
        this.busy = false;
      }
      return;
    }
    function v511() {
      var v6747 = this.canvas;
      var size$$8 = JAM.call(v6747.getSize, v6747, [], JAM.policy.p3);
      var key$$28;
      var i$$77;
      var overflow = false;
      var v6748 = this.clickedNode.id;
      if (!v6748) {
        v6748 = this.root;
      }
      var clicked = v6748;
      var height$$20 = 0;
      var v6749 = this.graph;
      var root$$15 = JAM.call(v6749.getNode, v6749, [clicked], JAM.policy.p3);
      var depth$$1 = this.graph.depth;
      var v6751 = this.config;
      JAM.call(v6751.onBeforeCompute, v6751, [{name:""}], JAM.policy.p3);
      for (key$$28 in depth$$1) {
        if (JAM.call(depth$$1.hasOwnProperty, depth$$1, [key$$28], JAM.policy.p3)) {
          if (depth$$1[key$$28]) {
            var nodes = depth$$1[key$$28];
            var tempHeight = 0;
            i$$77 = 0;
            var v6755 = i$$77 < nodes.length;
            for (;v6755;) {
              var node$$82 = nodes[i$$77];
              if (height$$20 < size$$8.height) {
                if (node$$82.data.leaf) {
                  tempHeight = tempHeight + (JAM.call(node$$82.getData, node$$82, ["height", "start"], JAM.policy.p3) + 8);
                } else {
                  tempHeight = tempHeight + JAM.call(node$$82.getData, node$$82, ["height", "start"], JAM.policy.p3) / 2;
                }
                node$$82.drawn = true;
                node$$82.exist = true;
              }
              i$$77 = i$$77 + 1;
              v6755 = i$$77 < nodes.length;
            }
            var v13536 = tempHeight + height$$20 < size$$8.height;
            if (v13536) {
              v13536 = !overflow;
            }
            if (v13536) {
              height$$20 = height$$20 + tempHeight;
              var v31151 = parseInt(key$$28, 10);
              this.zoomIndex = v31151;
            } else {
              i$$77 = 0;
              var v6756 = i$$77 < nodes.length;
              for (;v6756;) {
                node$$82 = nodes[i$$77];
                node$$82.exist = false;
                node$$82.drawn = false;
                node$$82.collapsed = true;
                i$$77 = i$$77 + 1;
                v6756 = i$$77 < nodes.length;
              }
              overflow = true;
            }
          }
        }
      }
      var canvas$$32 = this.canvas;
      var ox$$4 = canvas$$32.translateOffsetX;
      var oy$$5 = canvas$$32.translateOffsetY;
      var v6760 = this.canvas;
      JAM.call(v6760.translate, v6760, [-1 * ox$$4, -1 * oy$$5], JAM.policy.p3);
      var v13539 = this.graph;
      JAM.call(this.computePositions, this, [JAM.call(v13539.getNode, v13539, [this.root], JAM.policy.p3), ""], JAM.policy.p3);
      JAM.call(this.plot, this, [], JAM.policy.p3);
      var v6764 = this.config;
      JAM.call(v6764.onAfterCompute, v6764, [], JAM.policy.p3);
      return;
    }
    function v510() {
      var v6765 = this.fx;
      JAM.call(v6765.plot, v6765, [this.controller], JAM.policy.p3);
      return;
    }
    function v509(value$$42, rangeArray$$2) {
      var i$$76;
      var v13541 = typeof value$$42 === "undefined";
      if (!v13541) {
        v13541 = typeof rangeArray$$2 === "undefined";
      }
      if (v13541) {
        return;
      }
      i$$76 = 0;
      var v6769 = i$$76 < rangeArray$$2.length;
      for (;v6769;) {
        if (value$$42 <= rangeArray$$2[i$$76]) {
          break;
        }
        i$$76 = i$$76 + 1;
        v6769 = i$$76 < rangeArray$$2.length;
      }
      var v6770;
      if (i$$76 === rangeArray$$2.length) {
        v6770 = i$$76 - 1;
      } else {
        v6770 = i$$76;
      }
      return v6770;
    }
    function v508() {
      var list$$1;
      var root$$14;
      var i$$75;
      var char$$20;
      var temp$$2 = {};
      var ds = {};
      var j$$11;
      var dschar;
      var sh$$2;
      var jj;
      var shapes$$1 = this.config.shapes;
      var dsAlt = {};
      var dscharAlt;
      var color$$6 = this.config.color;
      var shapePointer = 0;
      var rangeArray$$1;
      var label$$11;
      var quantColor$$1 = this.config.quantColor;
      var quantShape = this.config.quantShape;
      var heading;
      var content;
      var v6775 = this.graph;
      root$$14 = JAM.call(v6775.getNode, v6775, [this.root], JAM.policy.p3);
      list$$1 = this.characterGroups.quali;
      if (!list$$1) {
        JAM.call(this.findAllCharTypes, this, [root$$14], JAM.policy.p3);
        list$$1 = this.characterGroups.quali;
      }
      if (list$$1) {
        i$$75 = 0;
        var v6782 = i$$75 < list$$1.length;
        for (;v6782;) {
          char$$20 = list$$1[i$$75];
          JAM.set(temp$$2, char$$20, JAM.call(this.findDistinctCharacterStates, this, [char$$20], JAM.policy.p3).array, JAM.policy.p2);
          var v6781 = temp$$2[char$$20];
          if (v6781) {
            var v13547 = temp$$2[char$$20];
            JAM.call(v13547.push, v13547, ["multiple"], JAM.policy.p3);
          }
          i$$75 = i$$75 + 1;
          v6782 = i$$75 < list$$1.length;
        }
      }
      for (i$$75 in temp$$2) {
        if (JAM.call(temp$$2.hasOwnProperty, temp$$2, [i$$75], JAM.policy.p3)) {
          char$$20 = temp$$2[i$$75];
          dschar = [];
          dscharAlt = {};
          j$$11 = 0;
          var v6787 = j$$11 < char$$20.length;
          for (;v6787;) {
            var v6783;
            if (color$$6.length > j$$11) {
              v6783 = j$$11;
            } else {
              v6783 = color$$6.length - 1;
            }
            jj = v6783;
            var v6784;
            if (shapes$$1.length > shapePointer) {
              v6784 = shapePointer;
            } else {
              v6784 = shapes$$1.length - 1;
            }
            sh$$2 = v6784;
            JAM.call(dschar.push, dschar, [{color:color$$6[jj], name:char$$20[j$$11], shape:shapes$$1[sh$$2]}], JAM.policy.p3);
            JAM.set(dscharAlt, char$$20[j$$11], {color:color$$6[jj], shape:shapes$$1[sh$$2]}, JAM.policy.p2);
            j$$11 = j$$11 + 1;
            v6787 = j$$11 < char$$20.length;
          }
          JAM.set(ds, i$$75, dschar, JAM.policy.p2);
          JAM.set(dsAlt, i$$75, dscharAlt, JAM.policy.p2);
          shapePointer++;
        }
      }
      i$$75 = 0;
      var v6798 = i$$75 < this.characterGroups.quant.length;
      for (;v6798;) {
        char$$20 = this.characterGroups.quant[i$$75];
        rangeArray$$1 = this.range[char$$20];
        dschar = [];
        dscharAlt = {};
        j$$11 = 0;
        var v6797 = j$$11 < rangeArray$$1.length;
        for (;v6797;) {
          var v6791;
          if (quantColor$$1.length > j$$11) {
            v6791 = j$$11;
          } else {
            v6791 = quantColor$$1.length - 1;
          }
          jj = v6791;
          var v6792;
          if (shapes$$1.length > shapePointer) {
            v6792 = shapePointer;
          } else {
            v6792 = shapes$$1.length - 1;
          }
          sh$$2 = v6792;
          var v18705;
          if (j$$11 === 0) {
            var v22243 = this.characterMinMax[char$$20].min;
            v18705 = JAM.call(v22243.toFixed, v22243, [2], JAM.policy.p3);
          } else {
            v18705 = rangeArray$$1[j$$11 - 1];
          }
          label$$11 = v18705 + " - " + rangeArray$$1[j$$11];
          JAM.call(dschar.push, dschar, [{color:quantColor$$1[j$$11], name:label$$11, shape:quantShape}], JAM.policy.p3);
          JAM.set(dscharAlt, label$$11, {color:quantColor$$1[j$$11], shape:quantShape}, JAM.policy.p2);
          j$$11 = j$$11 + 1;
          v6797 = j$$11 < rangeArray$$1.length;
        }
        JAM.set(ds, char$$20, dschar, JAM.policy.p2);
        JAM.set(dsAlt, char$$20, dscharAlt, JAM.policy.p2);
        shapePointer++;
        i$$75 = i$$75 + 1;
        v6798 = i$$75 < this.characterGroups.quant.length;
      }
      heading = "";
      content = "";
      list$$1 = this.config.selectedCharacters;
      i$$75 = 0;
      var v6804 = i$$75 < list$$1.length;
      for (;v6804;) {
        label$$11 = "";
        char$$20 = list$$1[i$$75];
        if (typeof char$$20 !== "undefined") {
          var v6800 = ds[char$$20];
          if (!v6800) {
            v6800 = [];
          }
          dschar = v6800;
          heading = '<tr><th colspan="2">' + JAM.call(char$$20.replace, char$$20, [/_/g, " "], JAM.policy.p3) + "</th></tr>";
          j$$11 = 0;
          var v6802 = j$$11 < dschar.length;
          for (;v6802;) {
            sh$$2 = dschar[j$$11];
            label$$11 = label$$11 + ('<tr><td><div class ="' + sh$$2.shape + '" style="background-color:' + sh$$2.color + ';"></div></td><td>' + sh$$2.name + "</td></tr>");
            j$$11 = j$$11 + 1;
            v6802 = j$$11 < dschar.length;
          }
          if (label$$11) {
            content = content + (heading + label$$11);
          }
        }
        i$$75 = i$$75 + 1;
        v6804 = i$$75 < list$$1.length;
      }
      this.colorCoding = dsAlt;
      this.colorCodingQuali = ds;
      return content;
    }
    function v507(character$$2) {
      var i$$74;
      var result$$17 = [];
      var temp$$1 = {};
      var node$$81;
      var char$$19;
      var j$$10;
      for (i$$74 in this.graph.nodes) {
        var v13581 = this.graph.nodes;
        if (JAM.call(v13581.hasOwnProperty, v13581, [i$$74], JAM.policy.p3)) {
          node$$81 = this.graph.nodes[i$$74];
          char$$19 = node$$81.data.character[character$$2];
          var v13584 = node$$81.data.leaf;
          if (v13584) {
            v13584 = char$$19;
          }
          if (v13584) {
            j$$10 = 0;
            var v6808 = j$$10 < char$$19.length;
            for (;v6808;) {
              JAM.set(temp$$1, char$$19[j$$10], character$$2, JAM.policy.p2);
              j$$10++;
              v6808 = j$$10 < char$$19.length;
            }
          }
        }
      }
      for (i$$74 in temp$$1) {
        if (JAM.call(temp$$1.hasOwnProperty, temp$$1, [i$$74], JAM.policy.p3)) {
          JAM.call(result$$17.push, result$$17, [i$$74], JAM.policy.p3);
        }
      }
      return{hash:temp$$1, array:result$$17};
    }
    function v506(colorOverwrite) {
      function v505(root$$13, characterColorCollection) {
        function v504(node$$80) {
          var v6813 = node$$80.data;
          var v13587 = node$$80.data.color;
          if (!v13587) {
            v13587 = {};
          }
          v6813.color = v13587;
          for (adj in node$$80.adjacencies) {
            var v13588 = node$$80.adjacencies;
            if (JAM.call(v13588.hasOwnProperty, v13588, [adj], JAM.policy.p3)) {
              currentAdj$$1 = node$$80.adjacencies[adj];
              var v6815 = currentAdj$$1.data;
              if (v6815) {
                delete currentAdj$$1.data.$color;
              }
            }
          }
          i$$73 = 0;
          var v6833 = i$$73 < that$$25.characterGroups.quali.length;
          for (;v6833;) {
            char$$18 = that$$25.characterGroups.quali[i$$73];
            charArray = node$$80.data.character[char$$18];
            var v18713 = charArray;
            if (v18713) {
              v18713 = charArray.length === 1;
            }
            var v13593 = v18713;
            if (v13593) {
              v13593 = charArray[0];
            }
            var v6820 = v13593;
            if (!v6820) {
              v6820 = "";
            }
            key$$27 = v6820;
            if (key$$27) {
              key$$27 = JAM.call(key$$27.replace, key$$27, [/ /g, ""], JAM.policy.p3);
              JAM.set(node$$80.data.color, char$$18, characterColorCollection[char$$18].color, JAM.policy.p2);
              if (char$$18 === firstCharacter$$2) {
                for (adj in node$$80.adjacencies) {
                  var v13597 = node$$80.adjacencies;
                  if (JAM.call(v13597.hasOwnProperty, v13597, [adj], JAM.policy.p3)) {
                    currentAdj$$1 = node$$80.adjacencies[adj];
                    var nodeTo$$6 = node$$80.adjacencies[adj].nodeTo;
                    var nodeFrom$$4 = node$$80.adjacencies[adj].nodeFrom;
                    var v13600 = nodeTo$$6._depth < node$$80._depth;
                    if (!v13600) {
                      v13600 = nodeFrom$$4._depth < node$$80._depth;
                    }
                    if (v13600) {
                      if (charArray.length === 1) {
                        currentAdj$$1.data.$color = characterColorCollection[firstCharacter$$2][charArray[0]].color;
                        break;
                      } else {
                        delete currentAdj$$1.data.$color;
                      }
                    }
                  }
                }
              }
            } else {
              JAM.set(node$$80.data.color, char$$18, characterColorCollection[char$$18]["multiple"], JAM.policy.p2);
            }
            i$$73 = i$$73 + 1;
            v6833 = i$$73 < that$$25.characterGroups.quali.length;
          }
          i$$73 = 0;
          var v6849 = i$$73 < that$$25.characterGroups.quant.length;
          for (;v6849;) {
            char$$18 = that$$25.characterGroups.quant[i$$73];
            charArray = node$$80.data.character[char$$18];
            var v18723 = charArray;
            if (v18723) {
              v18723 = charArray.length === 1;
            }
            var v13609 = v18723;
            if (v13609) {
              v13609 = charArray[0];
            }
            var v6836 = v13609;
            if (!v6836) {
              v6836 = "";
            }
            key$$27 = v6836;
            if (key$$27) {
              var rangeArray = that$$25.range[char$$18];
              var index$$43 = JAM.call(that$$25.findIndex, that$$25, [key$$27, rangeArray], JAM.policy.p3);
              JAM.set(node$$80.data.color, char$$18, quantColor[index$$43], JAM.policy.p2);
              if (char$$18 === firstCharacter$$2) {
                for (adj in node$$80.adjacencies) {
                  var v13612 = node$$80.adjacencies;
                  if (JAM.call(v13612.hasOwnProperty, v13612, [adj], JAM.policy.p3)) {
                    var currentAdj$$1 = node$$80.adjacencies[adj];
                    nodeTo$$6 = node$$80.adjacencies[adj].nodeTo;
                    nodeFrom$$4 = node$$80.adjacencies[adj].nodeFrom;
                    var v13615 = nodeTo$$6._depth < node$$80._depth;
                    if (!v13615) {
                      v13615 = nodeFrom$$4._depth < node$$80._depth;
                    }
                    if (v13615) {
                      if (charArray.length === 1) {
                        currentAdj$$1.data.$color = quantColor[index$$43];
                        break;
                      } else {
                        delete currentAdj$$1.data.$color;
                      }
                    }
                  }
                }
              }
            }
            i$$73 = i$$73 + 1;
            v6849 = i$$73 < that$$25.characterGroups.quant.length;
          }
          return;
        }
        var firstCharacter$$2 = that$$25.config.firstCharacter;
        var key$$27;
        var charArray;
        var char$$18;
        var i$$73;
        var quantColor = that$$25.config.quantColor;
        var currentAdj;
        JAM.call(root$$13.eachSubgraph, root$$13, [v504], JAM.policy.p3);
        return;
      }
      var speciesHash$$1 = this.character;
      var speciesName$$1;
      var char$$17;
      var i$$72;
      var that$$25 = this;
      var box;
      var node$$79;
      var characterValue;
      var j$$9;
      var html$$5;
      if (JAM.call(this.hasProperty, this, [speciesHash$$1], JAM.policy.p3)) {
        var $colorCharacter = v505;
        var v6852 = this.graph;
        var rootNode$$1 = JAM.call(v6852.getNode, v6852, [this.root], JAM.policy.p3);
        var string;
        var color$$5 = this.config.color;
        var distinct = {};
        var legendColorCollection = {};
        var pointer = 0;
        var legendRows = "";
        var multiple = false;
        var firstCharacter$$1;
        var firstSpecies;
        var characterKey = [];
        for (speciesName$$1 in speciesHash$$1) {
          if (JAM.call(speciesHash$$1.hasOwnProperty, speciesHash$$1, [speciesName$$1], JAM.policy.p3)) {
            for (char$$17 in speciesHash$$1[speciesName$$1]) {
              var v13618 = speciesHash$$1[speciesName$$1];
              if (JAM.call(v13618.hasOwnProperty, v13618, [char$$17], JAM.policy.p3)) {
                JAM.call(characterKey.push, characterKey, [char$$17], JAM.policy.p3);
              }
            }
            break;
          }
        }
        distinct = legendColorCollection[firstCharacter$$1];
        if (!this.config.initCharacter) {
          JAM.call(this.setCharacter, this, [this.config.firstCharacter], JAM.policy.p3);
          this.config.initCharacter = true;
        }
        var v31152 = JAM.call(this.findAllCharTypes, this, [rootNode$$1], JAM.policy.p3);
        this.characterGroups = v31152;
        JAM.call(this.fitchParsimony, this, [rootNode$$1, this.characterGroups.quali], JAM.policy.p3);
        JAM.call(this.quantParsimony, this, [rootNode$$1, this.characterGroups.quant], JAM.policy.p3);
        JAM.call(this.checkQuali, this, [this.characterGroups.quali], JAM.policy.p3);
        JAM.call(this.checkQuant, this, [this.characterGroups.quant], JAM.policy.p3);
        var v31153 = JAM.call(this.findQuantMinMax, this, [rootNode$$1, this.characterGroups.quant], JAM.policy.p3);
        this.characterMinMax = v31153;
        var v31154 = JAM.call(this.findQuantRange, this, [this.characterMinMax], JAM.policy.p3);
        this.range = v31154;
        html$$5 = JAM.call(this.createLegend, this, [], JAM.policy.p3);
        var v13626 = this.graph;
        JAM.call($colorCharacter, null, [JAM.call(v13626.getNode, v13626, [this.root], JAM.policy.p3), this.colorCoding], JAM.policy.p3);
        return html$$5;
      }
      return;
    }
    function v503(quantMinMax) {
      var result$$16 = {};
      var char$$16;
      var rangeCount = this.config.rangeCount;
      var stepsize;
      var i$$71;
      for (char$$16 in quantMinMax) {
        if (JAM.call(quantMinMax.hasOwnProperty, quantMinMax, [char$$16], JAM.policy.p3)) {
          var min$$5 = quantMinMax[char$$16].min;
          var max$$3 = quantMinMax[char$$16].max;
          stepsize = (max$$3 - min$$5) / rangeCount;
          JAM.set(result$$16, char$$16, [], JAM.policy.p2);
          i$$71 = 1;
          var v6876 = i$$71 <= rangeCount;
          for (;v6876;) {
            var v6874 = result$$16[char$$16];
            var v13628 = min$$5 + i$$71 * stepsize;
            JAM.call(v6874.push, v6874, [JAM.call(v13628.toFixed, v13628, [2], JAM.policy.p3)], JAM.policy.p3);
            i$$71 = i$$71 + 1;
            v6876 = i$$71 <= rangeCount;
          }
        }
      }
      return result$$16;
    }
    function v502(root$$12, quantCharacters) {
      function v501(node$$78) {
        if (node$$78.data.leaf) {
          var v6878 = node$$78.data.character[char$$15];
          if (v6878) {
            v6878 = node$$78.data.character[char$$15][0];
          }
          var charState = v6878;
          if (typeof charState !== "undefined") {
            var v6879;
            if (min$$4 < charState) {
              v6879 = min$$4;
            } else {
              v6879 = charState;
            }
            min$$4 = v6879;
            var v6880;
            if (max$$2 > charState) {
              v6880 = max$$2;
            } else {
              v6880 = charState;
            }
            max$$2 = v6880;
          }
        }
        return;
      }
      var char$$15;
      var min$$4;
      var max$$2;
      var result$$15 = {};
      var i$$70;
      i$$70 = 0;
      var v6888 = i$$70 < quantCharacters.length;
      for (;v6888;) {
        char$$15 = quantCharacters[i$$70];
        var v6883 = result$$15[char$$15];
        if (!v6883) {
          v6883 = {};
        }
        JAM.set(result$$15, char$$15, v6883, JAM.policy.p2);
        result$$15[char$$15].min = min$$4 = Number.MAX_VALUE;
        result$$15[char$$15].max = max$$2 = Number.MIN_VALUE;
        JAM.call(root$$12.eachSubgraph, root$$12, [v501], JAM.policy.p3);
        result$$15[char$$15].min = min$$4;
        result$$15[char$$15].max = max$$2;
        i$$70 = i$$70 + 1;
        v6888 = i$$70 < quantCharacters.length;
      }
      return result$$15;
    }
    function v500(root$$11) {
      function v499(node$$77) {
        if (node$$77.data.leaf) {
          i$$69 = 0;
          var v6893 = i$$69 < all.length;
          for (;v6893;) {
            key$$26 = all[i$$69];
            if (JAM.call(that$$24.characterType, that$$24, [node$$77.data.character[key$$26], "quali"], JAM.policy.p3)) {
              JAM.set(quali, key$$26, true, JAM.policy.p2);
              JAM.set(charTypeMapping$$1, key$$26, that$$24.config.typeEnum.quali, JAM.policy.p2);
            } else {
              if (JAM.call(that$$24.characterType, that$$24, [node$$77.data.character[key$$26], "quant"], JAM.policy.p3)) {
                JAM.set(quant, key$$26, true, JAM.policy.p2);
                JAM.set(charTypeMapping$$1, key$$26, that$$24.config.typeEnum.quant, JAM.policy.p2);
              }
            }
            i$$69 = i$$69 + 1;
            v6893 = i$$69 < all.length;
          }
        }
        return;
      }
      var type$$56 = {quant:[], quali:[]};
      var all = [];
      var quali = {};
      var quant = {};
      var key$$26;
      var that$$24 = this;
      var first$$4 = this.config.firstCharacter;
      var charTypeMapping$$1 = {};
      var i$$69;
      var v13645 = all;
      if (v13645) {
        v13645 = all.length === 0;
      }
      if (v13645) {
        all = JAM.call(this.listCharacters, this, [], JAM.policy.p3);
        if (this.config.selectedCharacters.length !== 0) {
          if (typeof this.config.selectedCharacters[0] === "undefined") {
            this.config.selectedCharacters[0] = all[0];
          }
          this.config.firstCharacter = this.config.selectedCharacters[0];
        } else {
          if (all.length !== 0) {
            this.config.selectedCharacters = [all[0]];
            this.config.firstCharacter = all[0];
          }
        }
      }
      var v13652 = all;
      if (v13652) {
        v13652 = all.length !== 0;
      }
      if (v13652) {
        JAM.call(root$$11.eachSubgraph, root$$11, [v499], JAM.policy.p3);
      }
      for (key$$26 in quali) {
        if (JAM.call(quali.hasOwnProperty, quali, [key$$26], JAM.policy.p3)) {
          var v6905 = type$$56.quali;
          JAM.call(v6905.push, v6905, [key$$26], JAM.policy.p3);
        }
      }
      for (key$$26 in quant) {
        if (JAM.call(quant.hasOwnProperty, quant, [key$$26], JAM.policy.p3)) {
          var v6907 = type$$56.quant;
          JAM.call(v6907.push, v6907, [key$$26], JAM.policy.p3);
        }
      }
      this.characterList = all;
      this.charTypeMapping = charTypeMapping$$1;
      return type$$56;
    }
    function v498() {
      var aSpecies;
      var i$$68;
      var result$$14 = [];
      for (aSpecies in this.character) {
        for (i$$68 in this.character[aSpecies]) {
          JAM.call(result$$14.push, result$$14, [i$$68], JAM.policy.p3);
        }
        return result$$14;
      }
      return;
    }
    function v497(root$$10, characters$$5) {
      function $quantParsimony(node$$76) {
        function v496(n$$40) {
          var result$$13 = $quantParsimony(n$$40);
          i = 0;
          var v6914 = i < characters$$5.length;
          for (;v6914;) {
            var v13655 = result$$13[characters$$5[i]];
            if (v13655) {
              v13655 = typeof result$$13[characters$$5[i]][0] !== "undefined";
            }
            if (v13655) {
              var v6911 = childrenValues$$2[characters$$5[i]];
              JAM.call(v6911.push, v6911, [result$$13[characters$$5[i]][0]], JAM.policy.p3);
            }
            i = i + 1;
            v6914 = i < characters$$5.length;
          }
          return;
        }
        var childrenValues$$2 = {};
        i = 0;
        var v6916 = i < characters$$5.length;
        for (;v6916;) {
          JAM.set(childrenValues$$2, characters$$5[i], [], JAM.policy.p2);
          i = i + 1;
          v6916 = i < characters$$5.length;
        }
        JAM.call(node$$76.eachSubnode, node$$76, [v496], JAM.policy.p3);
        if (!node$$76.data.leaf) {
          i = 0;
          var v6920 = i < characters$$5.length;
          for (;v6920;) {
            var char$$14 = characters$$5[i];
            var value$$41 = node$$76.data.character[char$$14];
            var mean$$1 = JAM.call(st.mean, st, [childrenValues$$2[char$$14]], JAM.policy.p3);
            JAM.set(node$$76.data.character, char$$14, [mean$$1], JAM.policy.p2);
            i = i + 1;
            v6920 = i < characters$$5.length;
          }
        }
        return node$$76.data.character;
      }
      var methods$$1 = this.calcMethods;
      $quantParsimony(root$$10);
      return;
    }
    function v495(characters$$4) {
      function $checkQuali(node$$75) {
        function v494(n$$39) {
          result$$12 = $checkQuali(n$$39);
          i$$67 = 0;
          var v6926 = i$$67 < characters$$4.length;
          for (;v6926;) {
            if (result$$12[characters$$4[i$$67]]) {
              var v6923 = childrenValues$$1[characters$$4[i$$67]];
              JAM.call(v6923.push, v6923, [result$$12[characters$$4[i$$67]]], JAM.policy.p3);
            }
            i$$67 = i$$67 + 1;
            v6926 = i$$67 < characters$$4.length;
          }
          return;
        }
        var childrenValues$$1 = {};
        var result$$12;
        var v6927 = node$$75.data;
        var v13671 = node$$75.data.characterConsistency;
        if (!v13671) {
          v13671 = {};
        }
        v6927.characterConsistency = v13671;
        i$$67 = 0;
        var v6929 = i$$67 < characters$$4.length;
        for (;v6929;) {
          JAM.set(childrenValues$$1, characters$$4[i$$67], [], JAM.policy.p2);
          i$$67 = i$$67 + 1;
          v6929 = i$$67 < characters$$4.length;
        }
        JAM.call(node$$75.eachSubnode, node$$75, [v494], JAM.policy.p3);
        if (!node$$75.data.leaf) {
          i$$67 = 0;
          var v6932 = i$$67 < characters$$4.length;
          for (;v6932;) {
            var char$$13 = characters$$4[i$$67];
            result$$12 = compareFunction$$1(childrenValues$$1[char$$13]);
            JAM.set(node$$75.data.characterConsistency, char$$13, result$$12, JAM.policy.p2);
            i$$67 = i$$67 + 1;
            v6932 = i$$67 < characters$$4.length;
          }
        }
        return node$$75.data.character;
      }
      function compareFunction$$1(sample$$4) {
        var test1$$1 = sample$$4[0];
        var test2$$1;
        var j$$8 = 0;
        var v6936 = j$$8 < sample$$4.length;
        for (;v6936;) {
          test2$$1 = sample$$4[j$$8];
          var result$$11 = JAM.call(that$$23.intersect, that$$23, [test1$$1, test2$$1], JAM.policy.p3);
          var v13679 = result$$11.length !== test1$$1.length;
          if (!v13679) {
            v13679 = result$$11.length !== test2$$1.length;
          }
          if (v13679) {
            return false;
          }
          test1$$1 = result$$11;
          j$$8 = j$$8 + 1;
          v6936 = j$$8 < sample$$4.length;
        }
        return true;
      }
      var v6937 = this.graph;
      var root$$9 = JAM.call(v6937.getNode, v6937, [this.root], JAM.policy.p3);
      var i$$67;
      var that$$23 = this;
      $checkQuali(root$$9);
      return;
    }
    function v493(characters$$3) {
      function $checkQuant(node$$74) {
        function v492(n$$38) {
          ans$$15 = $checkQuant(n$$38);
          result$$10 = ans$$15.character;
          i$$66 = 0;
          var v6948 = i$$66 < characters$$3.length;
          for (;v6948;) {
            var v13682 = result$$10[characters$$3[i$$66]];
            if (v13682) {
              v13682 = typeof result$$10[characters$$3[i$$66]][0] !== "undefined";
            }
            if (v13682) {
              var v6939 = childrenValues[characters$$3[i$$66]];
              JAM.call(v6939.push, v6939, [result$$10[characters$$3[i$$66]][0]], JAM.policy.p3);
              var v6941 = sd$$3[characters$$3[i$$66]];
              JAM.call(v6941.push, v6941, [ans$$15.stat[characters$$3[i$$66]].sd], JAM.policy.p3);
              var v6943 = ui$$3[characters$$3[i$$66]];
              JAM.call(v6943.push, v6943, [ans$$15.stat[characters$$3[i$$66]].u], JAM.policy.p3);
              var v6945 = num$$8[characters$$3[i$$66]];
              JAM.call(v6945.push, v6945, [ans$$15.stat[characters$$3[i$$66]].n], JAM.policy.p3);
            }
            i$$66 = i$$66 + 1;
            v6948 = i$$66 < characters$$3.length;
          }
          return;
        }
        var childrenValues = {};
        var result$$10;
        var sd$$3 = {};
        var ui$$3 = {};
        var num$$8 = {};
        var ans$$15;
        var char$$12;
        var v6949 = node$$74.data;
        var v13692 = node$$74.data.characterConsistency;
        if (!v13692) {
          v13692 = {};
        }
        v6949.characterConsistency = v13692;
        node$$74.data.stat = {};
        i$$66 = 0;
        var v6954 = i$$66 < characters$$3.length;
        for (;v6954;) {
          char$$12 = characters$$3[i$$66];
          JAM.set(childrenValues, characters$$3[i$$66], [], JAM.policy.p2);
          JAM.set(node$$74.data.stat, characters$$3[i$$66], {sd:undefined, u:undefined, n:undefined}, JAM.policy.p2);
          JAM.set(sd$$3, char$$12, [], JAM.policy.p2);
          JAM.set(ui$$3, char$$12, [], JAM.policy.p2);
          JAM.set(num$$8, char$$12, [], JAM.policy.p2);
          i$$66 = i$$66 + 1;
          v6954 = i$$66 < characters$$3.length;
        }
        JAM.call(node$$74.eachSubnode, node$$74, [v492], JAM.policy.p3);
        if (!node$$74.data.leaf) {
          i$$66 = 0;
          var v6966 = i$$66 < characters$$3.length;
          for (;v6966;) {
            char$$12 = characters$$3[i$$66];
            if (childrenValues[char$$12].length !== 0) {
              var v6955 = node$$74.data.stat[char$$12];
              var v31155 = JAM.call(that$$22.meanPop, that$$22, [num$$8[char$$12], ui$$3[char$$12]], JAM.policy.p3);
              v6955.u = v31155;
              JAM.set(node$$74.data.character, char$$12, [node$$74.data.stat[char$$12].u], JAM.policy.p2);
              var v6957 = node$$74.data.stat[char$$12];
              var v31156 = JAM.call(that$$22.sum, that$$22, [num$$8[char$$12]], JAM.policy.p3);
              v6957.n = v31156;
              var v6958 = node$$74.data.stat[char$$12];
              var v31157 = JAM.call(that$$22.sdPop, that$$22, [num$$8[char$$12], sd$$3[char$$12], ui$$3[char$$12], node$$74.data.stat[characters$$3[i$$66]].u], JAM.policy.p3);
              v6958.sd = v31157;
              result$$10 = compareFunction(node$$74.data.stat[char$$12].u, node$$74.data.stat[char$$12].sd, meanTree[char$$12], sdTree[char$$12]);
            } else {
              JAM.set(node$$74.data.stat, char$$12, {sd:undefined, u:undefined, n:undefined}, JAM.policy.p2);
              result$$10 = true;
            }
            JAM.set(node$$74.data.characterConsistency, char$$12, result$$10, JAM.policy.p2);
            i$$66 = i$$66 + 1;
            v6966 = i$$66 < characters$$3.length;
          }
        } else {
          i$$66 = 0;
          var v6973 = i$$66 < characters$$3.length;
          for (;v6973;) {
            result$$10 = node$$74.data.character;
            var v13717 = result$$10[characters$$3[i$$66]];
            if (v13717) {
              v13717 = typeof result$$10[characters$$3[i$$66]][0] !== "undefined";
            }
            if (v13717) {
              JAM.set(node$$74.data.stat, characters$$3[i$$66], {sd:0, u:result$$10[characters$$3[i$$66]][0], n:1}, JAM.policy.p2);
            } else {
              JAM.set(node$$74.data.stat, characters$$3[i$$66], {sd:undefined, u:undefined, n:undefined}, JAM.policy.p2);
            }
            i$$66 = i$$66 + 1;
            v6973 = i$$66 < characters$$3.length;
          }
        }
        return node$$74.data;
      }
      function compareFunction(mean, sd$$2, mTree, sTree) {
        var test1 = JAM.call(Math.abs, Math, [mean - mTree], JAM.policy.p3) > sTree;
        var test2 = sd$$2 > sTree;
        return!(test1 && test2);
      }
      var n$$37 = this.config.threshold;
      var v6978 = this.graph;
      var root$$8 = JAM.call(v6978.getNode, v6978, [this.root], JAM.policy.p3);
      var meanTree = JAM.call(this.meanAtTree, this, [root$$8, characters$$3], JAM.policy.p3);
      var sdTree = JAM.call(this.sdAtTree, this, [root$$8, characters$$3], JAM.policy.p3);
      var i$$66;
      var that$$22 = this;
      var count$$4 = 0;
      $checkQuant(root$$8);
      return;
    }
    function v491(root$$7, characters$$2) {
      function v490(node$$73) {
        if (node$$73.data.leaf) {
          i = 0;
          var v6984 = i < characters$$2.length;
          for (;v6984;) {
            char$$11 = characters$$2[i];
            var v13725 = node$$73.data.character[char$$11];
            if (v13725) {
              v13725 = typeof node$$73.data.character[char$$11][0] !== "undefined";
            }
            if (v13725) {
              var v6980 = samples$$2[char$$11].value;
              JAM.call(v6980.push, v6980, [node$$73.data.character[char$$11][0]], JAM.policy.p3);
              var v6982 = samples$$2[char$$11].number;
              JAM.call(v6982.push, v6982, [1], JAM.policy.p3);
            }
            i = i + 1;
            v6984 = i < characters$$2.length;
          }
        }
        return;
      }
      var samples$$2 = {};
      var char$$11;
      var result$$9 = {};
      i = 0;
      var v6987 = i < characters$$2.length;
      for (;v6987;) {
        JAM.set(samples$$2, characters$$2[i], {value:[], number:[]}, JAM.policy.p2);
        i = i + 1;
        v6987 = i < characters$$2.length;
      }
      JAM.call(root$$7.eachSubgraph, root$$7, [v490], JAM.policy.p3);
      i = 0;
      var v6990 = i < characters$$2.length;
      for (;v6990;) {
        char$$11 = characters$$2[i];
        var v6988 = result$$9;
        var v6989 = char$$11;
        var v31158 = JAM.call(this.wtmean, this, [samples$$2[char$$11].value, samples$$2[char$$11].number], JAM.policy.p3);
        JAM.set(v6988, v6989, v31158, JAM.policy.p2);
        i = i + 1;
        v6990 = i < characters$$2.length;
      }
      return result$$9;
    }
    function v489(root$$6, characters$$1) {
      function v488(node$$72) {
        if (node$$72.data.leaf) {
          i = 0;
          var v6994 = i < characters$$1.length;
          for (;v6994;) {
            char$$10 = characters$$1[i];
            var v13738 = node$$72.data.character[char$$10];
            if (v13738) {
              v13738 = typeof node$$72.data.character[char$$10][0] !== "undefined";
            }
            if (v13738) {
              var v6991 = samples$$1[char$$10];
              JAM.call(v6991.push, v6991, [node$$72.data.character[char$$10][0]], JAM.policy.p3);
            }
            i = i + 1;
            v6994 = i < characters$$1.length;
          }
        }
        return;
      }
      var samples$$1 = {};
      var char$$10;
      var result$$8 = {};
      i = 0;
      var v6997 = i < characters$$1.length;
      for (;v6997;) {
        JAM.set(samples$$1, characters$$1[i], [], JAM.policy.p2);
        i = i + 1;
        v6997 = i < characters$$1.length;
      }
      JAM.call(root$$6.eachSubgraph, root$$6, [v488], JAM.policy.p3);
      i = 0;
      var v7000 = i < characters$$1.length;
      for (;v7000;) {
        char$$10 = characters$$1[i];
        var v6998 = result$$8;
        var v6999 = char$$10;
        var v31159 = JAM.call(this.variance, this, [samples$$1[char$$10]], JAM.policy.p3);
        JAM.set(v6998, v6999, v31159, JAM.policy.p2);
        i = i + 1;
        v7000 = i < characters$$1.length;
      }
      return result$$8;
    }
    function v487(root$$5, characters) {
      function v486(node$$71) {
        if (node$$71.data.leaf) {
          i = 0;
          var v7004 = i < characters.length;
          for (;v7004;) {
            char$$9 = characters[i];
            var v13748 = node$$71.data.character[char$$9];
            if (v13748) {
              v13748 = typeof node$$71.data.character[char$$9][0] !== "undefined";
            }
            if (v13748) {
              var v7001 = samples[char$$9];
              JAM.call(v7001.push, v7001, [node$$71.data.character[char$$9][0]], JAM.policy.p3);
            }
            i = i + 1;
            v7004 = i < characters.length;
          }
        }
        return;
      }
      var samples = {};
      var char$$9;
      var result$$7 = {};
      i = 0;
      var v7007 = i < characters.length;
      for (;v7007;) {
        JAM.set(samples, characters[i], [], JAM.policy.p2);
        i = i + 1;
        v7007 = i < characters.length;
      }
      JAM.call(root$$5.eachSubgraph, root$$5, [v486], JAM.policy.p3);
      i = 0;
      var v7010 = i < characters.length;
      for (;v7010;) {
        char$$9 = characters[i];
        var v7008 = result$$7;
        var v7009 = char$$9;
        var v31160 = JAM.call(this.sd, this, [samples[char$$9]], JAM.policy.p3);
        JAM.set(v7008, v7009, v31160, JAM.policy.p2);
        i = i + 1;
        v7010 = i < characters.length;
      }
      return result$$7;
    }
    function v485(firstCharacter) {
      var v7011 = firstCharacter;
      if (!v7011) {
        v7011 = this.config.firstCharacter;
      }
      firstCharacter = v7011;
      if (!firstCharacter) {
        return;
      }
      var speciesHash = this.character;
      var speciesName;
      var char$$8;
      var i$$65;
      for (i$$65 in this.graph.nodes) {
        var v13759 = this.graph.nodes;
        if (JAM.call(v13759.hasOwnProperty, v13759, [i$$65], JAM.policy.p3)) {
          var node$$70 = this.graph.nodes[i$$65];
          node$$70.data.character = {};
          if (node$$70.data.leaf) {
            for (key in speciesHash) {
              if (JAM.call(speciesHash.hasOwnProperty, speciesHash, [key], JAM.policy.p3)) {
                var speciesCharacter = speciesHash[key][firstCharacter];
                if (node$$70.name === key) {
                  node$$70.data.colorCharacter = speciesCharacter;
                  node$$70.data.character = speciesHash[key];
                  break;
                }
              }
            }
          }
        }
      }
      return;
    }
    function v484(node$$67, characterList) {
      function downPass(node$$68) {
        function v479(snode) {
          char$$7 = downPass(snode);
          i$$63 = 0;
          var v7026 = i$$63 < characterList.length;
          for (;v7026;) {
            key$$24 = characterList[i$$63];
            var v7023 = childrenChar[key$$24];
            if (!v7023) {
              v7023 = [];
            }
            JAM.set(childrenChar, key$$24, v7023, JAM.policy.p2);
            var v7024 = childrenChar[key$$24];
            JAM.call(v7024.push, v7024, [char$$7[key$$24]], JAM.policy.p3);
            i$$63 = i$$63 + 1;
            v7026 = i$$63 < characterList.length;
          }
          return;
        }
        var childrenChar = {};
        var key$$24;
        var i$$63;
        var j$$7;
        JAM.call(node$$68.eachSubnode, node$$68, [v479], JAM.policy.p3);
        if (node$$68.data.leaf) {
          var v7027 = node$$68.data.character;
          if (!v7027) {
            v7027 = [];
          }
          return v7027;
        }
        var parentChar = {};
        j$$7 = 0;
        var v7036 = j$$7 < characterList.length;
        for (;v7036;) {
          key$$24 = characterList[j$$7];
          var v7029 = childrenChar[key$$24][0];
          if (!v7029) {
            v7029 = [];
          }
          var intersection = v7029;
          i$$63 = 0;
          var v7031 = i$$63 < childrenChar[key$$24].length;
          for (;v7031;) {
            var v7030 = childrenChar[key$$24][i$$63];
            if (!v7030) {
              v7030 = [];
            }
            char$$7 = v7030;
            intersection = JAM.call(that$$21.intersect, that$$21, [intersection, char$$7], JAM.policy.p3);
            i$$63 = i$$63 + 1;
            v7031 = i$$63 < childrenChar[key$$24].length;
          }
          if (intersection.length > 0) {
            JAM.set(parentChar, key$$24, intersection, JAM.policy.p2);
          } else {
            var v7032 = childrenChar[key$$24][0];
            if (!v7032) {
              v7032 = [];
            }
            char$$7 = v7032;
            i$$63 = 1;
            var v7034 = i$$63 < childrenChar[key$$24].length;
            for (;v7034;) {
              char$$7 = JAM.call(that$$21.union, that$$21, [char$$7, childrenChar[key$$24][i$$63]], JAM.policy.p3);
              i$$63 = i$$63 + 1;
              v7034 = i$$63 < childrenChar[key$$24].length;
            }
            JAM.set(parentChar, key$$24, char$$7, JAM.policy.p2);
          }
          j$$7 = j$$7 + 1;
          v7036 = j$$7 < characterList.length;
        }
        node$$68.data.colorCharacter = parentChar[that$$21.config.firstCharacter];
        return node$$68.data.character = parentChar;
      }
      function upPass(node$$69) {
        function v483(n$$36) {
          $upPass(n$$36);
          return;
        }
        function $upPass(n$$35) {
          function v482(sn) {
            $upPass(sn);
            return;
          }
          function v481(subn$$4) {
            cUnion = JAM.call(that$$21.union, that$$21, [cUnion, subn$$4.data.character[key$$25]], JAM.policy.p3);
            return;
          }
          function v480(subn$$3) {
            if (!cIntersect) {
              cIntersect = subn$$3.data.character[key$$25];
              return;
            }
            cIntersect = JAM.call(that$$21.intersect, that$$21, [cIntersect, subn$$3.data.character[key$$25]], JAM.policy.p3);
            return;
          }
          if (n$$35.data.leaf) {
            return;
          }
          var key$$25;
          var morphData = n$$35.data.character;
          var p$$21 = JAM.call(n$$35.getParents, n$$35, [], JAM.policy.p3)[0];
          var fp;
          var i$$64;
          for (key$$25 in morphData) {
            if (JAM.call(morphData.hasOwnProperty, morphData, [key$$25], JAM.policy.p3)) {
              var sp = morphData[key$$25];
              var fa = p$$21.data.character[key$$25];
              fp = JAM.call(that$$21.intersect, that$$21, [sp, fa], JAM.policy.p3);
              if (fp.length !== fa.length) {
                var cIntersect;
                JAM.call(n$$35.eachSubnode, n$$35, [v480], JAM.policy.p3);
                var v13791 = cIntersect;
                if (v13791) {
                  v13791 = cIntersect.length !== 0;
                }
                if (v13791) {
                  var cUnion = [];
                  var aIntersect;
                  JAM.call(n$$35.eachSubnode, n$$35, [v481], JAM.policy.p3);
                  aIntersect = JAM.call(that$$21.intersect, that$$21, [cUnion, fa], JAM.policy.p3);
                  fp = JAM.call(that$$21.union, that$$21, [aIntersect, n$$35.data.character[key$$25]], JAM.policy.p3);
                } else {
                  fp = JAM.call(that$$21.union, that$$21, [n$$35.data.character[key$$25], fa], JAM.policy.p3);
                }
              }
              JAM.set(n$$35.data.character, key$$25, fp, JAM.policy.p2);
            }
          }
          JAM.call(n$$35.eachSubnode, n$$35, [v482], JAM.policy.p3);
          n$$35.data.colorCharacter = n$$35.data.character[that$$21.config.firstCharacter];
          return;
        }
        JAM.call(node$$69.eachSubnode, node$$69, [v483], JAM.policy.p3);
        return[];
      }
      var v13797 = characterList;
      if (v13797) {
        v13797 = characterList.length != 0;
      }
      if (v13797) {
        var i$$62;
        var char$$7;
        var j$$6;
        var that$$21 = this;
        var result$$6;
        downPass(node$$67);
        upPass(node$$67);
      }
      return;
    }
    function v478(node$$66) {
      function v477(elem$$56) {
        elem$$56.exist = false;
        elem$$56.drawn = false;
        if (!elem$$56.data.leaf) {
          elem$$56.data.$type = "circle";
        } else {
          elem$$56.data.$type = "none";
        }
        elem$$56.collapsed = true;
        return;
      }
      function v476(elem$$55) {
        if (!elem$$55.exist) {
          elem$$55.exist = true;
          elem$$55.drawn = true;
        }
        if (!elem$$55.data.leaf) {
          elem$$55.data.$type = "circle";
        } else {
          elem$$55.data.$type = "none";
        }
        elem$$55.collapsed = false;
        if (level$$13 < elem$$55._depth) {
          level$$13 = elem$$55._depth + 1;
        }
        return;
      }
      var level$$13 = 0;
      if (node$$66.collapsed) {
        JAM.call(node$$66.eachSubgraph, node$$66, [v476], JAM.policy.p3);
        if (!node$$66.data.leaf) {
          node$$66.data.$type = "circle";
        } else {
          node$$66.data.$type = "none";
        }
      } else {
        JAM.call(node$$66.eachSubgraph, node$$66, [v477], JAM.policy.p3);
        node$$66.exist = true;
        node$$66.drawn = true;
        level$$13 = false;
        if (!node$$66.data.leaf) {
          node$$66.data.$type = "triangle";
        } else {
          node$$66.data.$type = "none";
        }
      }
      return level$$13;
    }
    function v475(node$$65) {
      if (node$$65.data.$type === "triangle") {
        node$$65.collapsed = true;
      } else {
        node$$65.collapsed = false;
      }
      return;
    }
    function v474(setA$$1, setB$$1) {
      setA$$1 = setA$$1 || [];
      setB$$1 = setB$$1 || [];
      var i$$61;
      var j$$5;
      var sets = [setA$$1, setB$$1];
      var char$$6;
      var union = {};
      i$$61 = 0;
      var v7074 = i$$61 < sets.length;
      for (;v7074;) {
        char$$6 = sets[i$$61];
        j$$5 = 0;
        var v7073 = j$$5 < char$$6.length;
        for (;v7073;) {
          JAM.set(union, char$$6[j$$5], char$$6[j$$5], JAM.policy.p2);
          j$$5 = j$$5 + 1;
          v7073 = j$$5 < char$$6.length;
        }
        i$$61 = i$$61 + 1;
        v7074 = i$$61 < sets.length;
      }
      char$$6 = [];
      for (i$$61 in union) {
        if (JAM.call(union.hasOwnProperty, union, [i$$61], JAM.policy.p3)) {
          JAM.call(char$$6.push, char$$6, [union[i$$61]], JAM.policy.p3);
        }
      }
      return char$$6;
    }
    function v473(setA, setB) {
      var v22278 = !setA;
      if (!v22278) {
        v22278 = !setB;
      }
      var v18806 = v22278;
      if (!v18806) {
        v18806 = setA.length === 0;
      }
      var v13809 = v18806;
      if (!v13809) {
        v13809 = setB.length === 0;
      }
      if (v13809) {
        return[];
      }
      var hashA = {};
      var i$$60;
      var result$$5 = [];
      i$$60 = 0;
      var v7079 = i$$60 < setA.length;
      for (;v7079;) {
        JAM.set(hashA, setA[i$$60], true, JAM.policy.p2);
        i$$60 = i$$60 + 1;
        v7079 = i$$60 < setA.length;
      }
      i$$60 = 0;
      var v7082 = i$$60 < setB.length;
      for (;v7082;) {
        if (hashA[setB[i$$60]]) {
          JAM.call(result$$5.push, result$$5, [setB[i$$60]], JAM.policy.p3);
        }
        i$$60 = i$$60 + 1;
        v7082 = i$$60 < setB.length;
      }
      return result$$5;
    }
    function v472(data$$25, testcase) {
      var v13815 = !data$$25;
      if (!v13815) {
        v13815 = data$$25.length === 0;
      }
      if (v13815) {
        return;
      }
      switch(testcase) {
        case "quant":
          return JAM.call(this.isQuant, this, [data$$25], JAM.policy.p3);
        case "quali":
          return JAM.call(this.isQuali, this, [data$$25], JAM.policy.p3);
      }
      return;
    }
    function v471(data$$24) {
      if (typeof data$$24[0] === "string") {
        return true;
      } else {
        return false;
      }
      return;
    }
    function v470(data$$23) {
      if (typeof data$$23[0] === "number") {
        return true;
      } else {
        return false;
      }
      return;
    }
    function v469(ni, ui$$2) {
      var v18813 = !ni;
      if (!v18813) {
        v18813 = !ui$$2;
      }
      var v13818 = v18813;
      if (!v13818) {
        v13818 = ni.length != ui$$2.length;
      }
      if (v13818) {
        return;
      }
      return JAM.call(this.sum, this, [JAM.call(this.multiply, this, [ni, ui$$2], JAM.policy.p3)], JAM.policy.p3) / JAM.call(this.sum, this, [ni], JAM.policy.p3);
    }
    function v468(num$$7, sd$$1, ui$$1, up$$1) {
      var v26127 = !num$$7;
      if (!v26127) {
        v26127 = !sd$$1;
      }
      var v22282 = v26127;
      if (!v22282) {
        v22282 = !ui$$1;
      }
      var v18817 = v22282;
      if (!v18817) {
        v18817 = num$$7.length !== sd$$1.length;
      }
      var v13820 = v18817;
      if (!v13820) {
        v13820 = sd$$1.length !== ui$$1.length;
      }
      if (v13820) {
        return;
      }
      return JAM.call(Math.sqrt, Math, [JAM.call(this.variancePop, this, [num$$7, sd$$1, ui$$1, up$$1], JAM.policy.p3)], JAM.policy.p3);
    }
    function v467(num$$6, sd, ui, up) {
      function v466(elem$$54) {
        return elem$$54 - 1;
      }
      var v26129 = !num$$6;
      if (!v26129) {
        v26129 = !sd;
      }
      var v22286 = v26129;
      if (!v22286) {
        v22286 = !ui;
      }
      var v18821 = v22286;
      if (!v18821) {
        v18821 = num$$6.length !== sd.length;
      }
      var v13821 = v18821;
      if (!v13821) {
        v13821 = sd.length !== ui.length;
      }
      if (v13821) {
        return;
      }
      if (num$$6.length === 1) {
        return 0;
      }
      var sumNum = JAM.call(this.sum, this, [num$$6], JAM.policy.p3);
      var sqUp = up * up;
      var lessNum;
      var sqSd;
      var sqUi;
      var v7093 = $jit.util;
      lessNum = JAM.call(v7093.map, v7093, [num$$6, v466], JAM.policy.p3);
      sqSd = JAM.call(this.square, this, [sd], JAM.policy.p3);
      sqUi = JAM.call(this.square, this, [ui], JAM.policy.p3);
      return(JAM.call(this.sum, this, [JAM.call(this.multiply, this, [lessNum, sqSd], JAM.policy.p3)], JAM.policy.p3) + JAM.call(this.sum, this, [JAM.call(this.multiply, this, [num$$6, sqUi], JAM.policy.p3)], JAM.policy.p3) - sumNum * sqUp) / (sumNum - 1);
    }
    function v465(num1, num2) {
      var v18827 = !num1;
      if (!v18827) {
        v18827 = !num2;
      }
      var v13825 = v18827;
      if (!v13825) {
        v13825 = num1.length !== num2.length;
      }
      if (v13825) {
        return;
      }
      var i$$59;
      var result$$4 = [];
      i$$59 = 0;
      var v7098 = i$$59 < num1.length;
      for (;v7098;) {
        JAM.call(result$$4.push, result$$4, [num1[i$$59] * num2[i$$59]], JAM.policy.p3);
        i$$59 = i$$59 + 1;
        v7098 = i$$59 < num1.length;
      }
      return result$$4;
    }
    function v464(num$$5) {
      function v463(elem$$53) {
        return elem$$53 * elem$$53;
      }
      var v7099 = $jit.util;
      return JAM.call(v7099.map, v7099, [num$$5, v463], JAM.policy.p3);
    }
    function v462(sample$$3) {
      var v13830 = !sample$$3;
      if (!v13830) {
        v13830 = sample$$3.length === 0;
      }
      if (v13830) {
        return;
      }
      return JAM.call(Math.sqrt, Math, [JAM.call(this.variance, this, [sample$$3], JAM.policy.p3)], JAM.policy.p3);
    }
    function v461(sample$$2) {
      function v460(acc$$1, value$$40) {
        var diff$$3 = value$$40 - avg;
        return acc$$1 + diff$$3 * diff$$3;
      }
      var v13831 = !sample$$2;
      if (!v13831) {
        v13831 = sample$$2.length === 0;
      }
      if (v13831) {
        return;
      }
      var avg;
      var num$$4;
      var total;
      avg = JAM.call(this.mean, this, [sample$$2], JAM.policy.p3);
      num$$4 = sample$$2.length;
      total = JAM.call($$$1.reduce, $$$1, [sample$$2, v460, 0], JAM.policy.p3);
      return total / num$$4;
    }
    function v459(sample$$1, number$$2) {
      var v26131 = !sample$$1;
      if (!v26131) {
        v26131 = sample$$1.length === 0;
      }
      var v22293 = v26131;
      if (!v22293) {
        v22293 = !number$$2;
      }
      var v18835 = v22293;
      if (!v18835) {
        v18835 = number$$2.length === 0;
      }
      var v13832 = v18835;
      if (!v13832) {
        v13832 = number$$2.length !== sample$$1.length;
      }
      if (v13832) {
        return;
      }
      var i$$58;
      var sum$$1 = 0;
      var count$$3 = 0;
      i$$58 = 0;
      var v7105 = i$$58 < number$$2.length;
      for (;v7105;) {
        sum$$1 = sum$$1 + number$$2[i$$58] * sample$$1[i$$58];
        count$$3 = count$$3 + number$$2[i$$58];
        i$$58 = i$$58 + 1;
        v7105 = i$$58 < number$$2.length;
      }
      return sum$$1 / count$$3;
    }
    function v458(sample) {
      var v13837 = !sample;
      if (!v13837) {
        v13837 = sample.length === 0;
      }
      if (v13837) {
        return;
      }
      return JAM.call(this.sum, this, [sample], JAM.policy.p3) / sample.length;
    }
    function v457(array$$13) {
      function v456(acc, value$$39) {
        return acc + value$$39;
      }
      var v13838 = !array$$13;
      if (!v13838) {
        v13838 = array$$13.length === 0;
      }
      if (v13838) {
        return;
      }
      return JAM.call($$$1.reduce, $$$1, [array$$13, v456, 0], JAM.policy.p3);
    }
    function v455(obj$$30) {
      if (typeof obj$$30 === "undefined") {
        return false;
      }
      var i$$57;
      for (i$$57 in obj$$30) {
        if (JAM.call(obj$$30.hasOwnProperty, obj$$30, [i$$57], JAM.policy.p3)) {
          return true;
        }
      }
      return false;
    }
    function v454(controller$$4) {
      var $Phylo = $jit.Phylo;
      var config$$7 = {levelsToShow:2, levelDistance:30, constrained:true, Node:{type:"rectangle"}, duration:700, offsetX:0, offsetY:0};
      var v31161 = JAM.call($$$1.merge, $$$1, [Options("Canvas", "Fx", "Tree", "PhyloJive", "Node", "Edge", "Controller", "Tips", "NodeStyles", "Events", "Navigation", "Label"), config$$7, controller$$4], JAM.policy.p3);
      this.controller = this.config = v31161;
      var canvasConfig = this.config;
      if (canvasConfig.useCanvas) {
        this.canvas = canvasConfig.useCanvas;
        this.config.labelContainer = this.canvas.id + "-label";
      } else {
        if (canvasConfig.background) {
          var v31162 = JAM.call($$$1.merge, $$$1, [{type:"Circles"}, canvasConfig.background], JAM.policy.p3);
          canvasConfig.background = v31162;
        }
        var v31163 = JAM.new(Canvas, [this, canvasConfig]);
        this.canvas = v31163;
        var v7118 = this.config;
        var v18846;
        if (typeof canvasConfig.injectInto === "string") {
          v18846 = canvasConfig.injectInto;
        } else {
          v18846 = canvasConfig.injectInto.id;
        }
        v7118.labelContainer = v18846 + "-label";
      }
      this.graphOptions = {"klass":Complex};
      var v31164 = JAM.new(Graph, [this.graphOptions, this.config.Node, this.config.Edge]);
      this.graph = v31164;
      var v31165 = JAM.new($Phylo.Label[canvasConfig.Label.type], [this]);
      this.labels = v31165;
      var v31166 = JAM.new($Phylo.Plot, [this, $Phylo]);
      this.fx = v31166;
      var v31167 = JAM.new($Phylo.Op, [this]);
      this.op = v31167;
      var v31168 = JAM.new($Phylo.Group, [this]);
      this.group = v31168;
      var v31169 = JAM.new($Phylo.Geom, [this]);
      this.geom = v31169;
      this.clickedNode = null;
      JAM.call(this.initializeExtras, this, [], JAM.policy.p3);
      return;
    }
    function getNodesToHide(node$$63) {
      function v451(n$$33) {
        var v13846 = n$$33.exist;
        if (v13846) {
          v13846 = !n$$33.selected;
        }
        if (v13846) {
          JAM.call(nodeArray.push, nodeArray, [n$$33], JAM.policy.p3);
        }
        return;
      }
      function v450(n$$32) {
        var v13847 = n$$32.exist;
        if (v13847) {
          v13847 = !n$$32.selected;
        }
        if (v13847) {
          if (JAM.call(n$$32.isDescendantOf, n$$32, [node$$63.id], JAM.policy.p3)) {
            if (n$$32._depth <= level$$12) {
              JAM.call(nodeArray.push, nodeArray, [n$$32], JAM.policy.p3);
            }
          } else {
            JAM.call(nodeArray.push, nodeArray, [n$$32], JAM.policy.p3);
          }
        }
        return;
      }
      var v7132 = node$$63;
      if (!v7132) {
        v7132 = this.clickedNode;
      }
      node$$63 = v7132;
      if (!this.config.constrained) {
        return[];
      }
      var i$$56;
      var Geom = this.geom;
      var graph$$18 = this.graph;
      var canvas$$31 = this.canvas;
      var level$$12 = node$$63._depth;
      var nodeArray = [];
      JAM.call(graph$$18.eachNode, graph$$18, [v450], JAM.policy.p3);
      var leafLevel = JAM.call(Geom.getRightLevelToShow, Geom, [node$$63, canvas$$31], JAM.policy.p3);
      JAM.call(node$$63.eachLevel, node$$63, [leafLevel, leafLevel, v451], JAM.policy.p3);
      i$$56 = 0;
      var v7137 = i$$56 < nodesInPath.length;
      for (;v7137;) {
        var v7134 = this.graph;
        var n$$31 = JAM.call(v7134.getNode, v7134, [nodesInPath[i$$56]], JAM.policy.p3);
        if (!JAM.call(n$$31.isDescendantOf, n$$31, [node$$63.id], JAM.policy.p3)) {
          JAM.call(nodeArray.push, nodeArray, [n$$31], JAM.policy.p3);
        }
        i$$56 = i$$56 + 1;
        v7137 = i$$56 < nodesInPath.length;
      }
      return nodeArray;
    }
    function getNodesToShow(node$$64) {
      function v453(n$$34) {
        function v452(ch$$11) {
          var v7138 = ch$$11.exist;
          if (v7138) {
            v7138 = !ch$$11.drawn;
          }
          return v7138;
        }
        var v18852 = config$$6.multitree;
        if (v18852) {
          v18852 = !("$orn" in n$$34.data);
        }
        var v13856 = v18852;
        if (v13856) {
          v13856 = JAM.call(n$$34.anySubnode, n$$34, [v452], JAM.policy.p3);
        }
        if (v13856) {
          JAM.call(nodeArray$$1.push, nodeArray$$1, [n$$34], JAM.policy.p3);
        } else {
          var v13857 = n$$34.drawn;
          if (v13857) {
            v13857 = !JAM.call(n$$34.anySubnode, n$$34, ["drawn"], JAM.policy.p3);
          }
          if (v13857) {
            JAM.call(nodeArray$$1.push, nodeArray$$1, [n$$34], JAM.policy.p3);
          }
        }
        return;
      }
      var nodeArray$$1 = [];
      var config$$6 = this.config;
      var v7141 = node$$64;
      if (!v7141) {
        v7141 = this.clickedNode;
      }
      node$$64 = v7141;
      var v7142 = this.clickedNode;
      JAM.call(v7142.eachLevel, v7142, [0, config$$6.levelsToShow, v453], JAM.policy.p3);
      return nodeArray$$1;
    }
    var nodesInPath = [];
    return new Class({Implements:[Loader, Extras, Layouts.PhyloJive], initialize:v454, hasProperty:v455, sum:v457, mean:v458, wtmean:v459, variance:v461, sd:v462, square:v464, multiply:v465, variancePop:v467, sdPop:v468, meanPop:v469, isQuant:v470, isQuali:v471, characterType:v472, intersect:v473, union:v474, setCollapsed:v475, nodesExpCol:v478, fitchParsimony:v484, setCharacter:v485, sdAtTree:v487, varianceAtTree:v489, meanAtTree:v491, checkQuant:v493, checkQuali:v495, quantParsimony:v497, listCharacters:v498, 
    findAllCharTypes:v500, findQuantMinMax:v502, findQuantRange:v503, colorCharacter:v506, findDistinctCharacterStates:v507, createLegend:v508, findIndex:v509, plot:v510, fitScreen:v511, zoom:v513, switchPosition:v515, switchAlignment:v516, addNodeInPath:v517, clearNodesInPath:v518, refresh:v519, reposition:v521, requestNodes:v523, contract:v524, move:v525, expand:v526, selectPath:v529, setRoot:v531, addSubtree:v532, removeSubtree:v534, select:v537, onClick:v538});
  }
  function v449() {
    function v448(node$$61, leaves$$1) {
      function v447(node$$62) {
        leaves$$1 = leaves$$1 + JAM.call(that$$20.computeLeaves, that$$20, [node$$62, 0], JAM.policy.p3);
        return;
      }
      var that$$20 = this;
      JAM.call(node$$61.eachSubnode, node$$61, [v447], JAM.policy.p3);
      if (node$$61.data.leaf) {
        return node$$61.data.leaves = 1;
      }
      return node$$61.data.leaves = leaves$$1;
    }
    function v446(node$$60, prop$$34) {
      function v445(orn$$3) {
        design(that$$19.graph, node$$60, prop$$34, that$$19.config, orn$$3, prop$$34);
        var v7150 = ["x", "y"];
        var v18855 = orn$$3 == "left";
        if (!v18855) {
          v18855 = orn$$3 == "right";
        }
        var i$$55 = v7150[+v18855];
        var prev;
        if (!prev) {
          prev = node$$60;
        }
        return;
      }
      var config$$5 = this.config;
      var multitree$$2 = config$$5.multitree;
      var align$$1 = config$$5.align;
      var v7153 = align$$1 !== "center";
      if (v7153) {
        v7153 = config$$5.indent;
      }
      var indent = v7153;
      var orn$$2 = config$$5.orientation;
      var v7154;
      if (multitree$$2) {
        v7154 = ["top", "right", "bottom", "left"];
      } else {
        v7154 = [orn$$2];
      }
      var orns = v7154;
      var that$$19 = this;
      JAM.call($$$1.each, $$$1, [orns, v445], JAM.policy.p3);
      return;
    }
    function v444(property, computeLevels) {
      var prop$$33 = property || "start";
      var v7155 = this.graph;
      var node$$59 = JAM.call(v7155.getNode, v7155, [this.root], JAM.policy.p3);
      JAM.call($$$1.extend, $$$1, [node$$59, {"drawn":true, "exist":true, "selected":true}], JAM.policy.p3);
      JAM.call(NodeDim.compute, NodeDim, [this.graph, prop$$33, this.config], JAM.policy.p3);
      var v13864 = !!computeLevels;
      if (!v13864) {
        v13864 = !("_depth" in node$$59);
      }
      if (v13864) {
        var v7160 = this.graph;
        JAM.call(v7160.computeLevels, v7160, [this.root, 0, "ignore"], JAM.policy.p3);
      }
      JAM.call(this.computePositions, this, [node$$59, prop$$33], JAM.policy.p3);
      return;
    }
    function getBoundaries(graph$$16, config$$3, level$$11, orn, prop$$31) {
      function v440(n$$28) {
        var v13865 = n$$28._depth == level$$11;
        if (v13865) {
          var v18860 = !multitree;
          if (!v18860) {
            var v22300 = "$orn" in n$$28.data;
            if (v22300) {
              v22300 = n$$28.data.$orn == orn;
            }
            v18860 = v22300;
          }
          v13865 = v18860;
        }
        if (v13865) {
          var dw = JAM.call(n$$28.getData, n$$28, ["width", prop$$31], JAM.policy.p3);
          var dh = JAM.call(n$$28.getData, n$$28, ["height", prop$$31], JAM.policy.p3);
          var v7163;
          if (w$$6 < dw) {
            v7163 = dw;
          } else {
            v7163 = w$$6;
          }
          w$$6 = v7163;
          var v7164;
          if (h$$4 < dh) {
            v7164 = dh;
          } else {
            v7164 = h$$4;
          }
          h$$4 = v7164;
        }
        return;
      }
      var dim$$9 = config$$3.Node;
      var multitree = config$$3.multitree;
      if (dim$$9.overridable) {
        var w$$6 = -1;
        var h$$4 = -1;
        JAM.call(graph$$16.eachNode, graph$$16, [v440], JAM.policy.p3);
        var v13868;
        if (w$$6 < 0) {
          v13868 = dim$$9.width;
        } else {
          v13868 = w$$6;
        }
        var v7166 = v13868;
        var v13869;
        if (h$$4 < 0) {
          v13869 = dim$$9.height;
        } else {
          v13869 = h$$4;
        }
        return{"width":v7166, "height":v13869};
      } else {
        return dim$$9;
      }
      return;
    }
    function design(graph$$17, node$$56, prop$$32, config$$4, orn$$1) {
      function v443(node$$58) {
        if (node$$58.data.len < min$$2) {
          min$$2 = node$$58.data.len;
        }
        if (node$$58.data.len > max$$1) {
          max$$1 = node$$58.data.len;
        }
        return;
      }
      function $design(node$$57, maxsize, y$$47, xpos) {
        function v442(n$$30) {
          var v13872 = !n$$30.exist;
          if (v13872) {
            v13872 = !n$$30.drawn;
          }
          if (v13872) {
            anyChildVisible = false;
          }
          return;
        }
        function v441(n$$29) {
          if (n$$29.exist) {
            subnodeVisible = true;
            y$$47 = $design(n$$29, null, y$$47, xpos);
            if (ymin > y$$47.ymid) {
              ymin = y$$47.ymid;
            }
            if (ymax < y$$47.ymid) {
              ymax = y$$47.ymid;
            }
          }
          return;
        }
        var ymin = Number.MAX_VALUE;
        var ymax = Number.MIN_VALUE;
        var subnodeVisible = false;
        if (config$$4.branchLength) {
          xpos = xpos + (10 + graph$$17.factor * node$$57.data.len * config$$4.branchMultiplier);
        } else {
          xpos = xpos + config$$4.levelDistance;
        }
        JAM.call(node$$57.eachSubnode, node$$57, [v441], JAM.policy.p3);
        if (graph$$17.maxXpos < xpos) {
          graph$$17.maxXpos = xpos;
        }
        if (subnodeVisible) {
          y$$47.ymid = JAM.call(node$$57.getPos, node$$57, [prop$$32], JAM.policy.p3)["y"] = (ymax + ymin) / 2;
        } else {
          y$$47.ymid = y$$47.ymin = y$$47.ymax = JAM.call(node$$57.getPos, node$$57, [prop$$32], JAM.policy.p3)["y"] = y$$47.ymax + JAM.call(node$$57.getData, node$$57, [s$$9, prop$$32], JAM.policy.p3) + siblingOffset;
        }
        JAM.call(node$$57.getPos, node$$57, [prop$$32], JAM.policy.p3)["x"] = xpos;
        if (!node$$57.data.leaf) {
          var anyChildVisible = true;
          JAM.call(node$$57.eachLevel, node$$57, [1, 1, v442], JAM.policy.p3);
          if (!anyChildVisible) {
            node$$57.data.display = "";
            node$$57.data.$type = "triangle";
          } else {
            node$$57.data.display = "none";
            node$$57.data.$type = "circle";
          }
        }
        return y$$47;
      }
      var multitree$$1 = config$$4.multitree;
      var auxp = ["x", "y"];
      var auxs = ["width", "height"];
      var v13881 = orn$$1 == "left";
      if (!v13881) {
        v13881 = orn$$1 == "right";
      }
      var ind = +v13881;
      var p$$20 = auxp[ind];
      var notp = auxp[1 - ind];
      var cnode = config$$4.Node;
      var s$$9 = auxs[ind];
      var nots = auxs[1 - ind];
      var siblingOffset = config$$4.siblingOffset;
      var subtreeOffset = config$$4.subtreeOffset;
      var align = config$$4.align;
      graph$$17.maxXpos = Number.MIN_VALUE;
      var v18872 = !graph$$17.maxLen;
      if (v18872) {
        v18872 = !graph$$17.minLen;
      }
      var v13882 = v18872;
      if (v13882) {
        v13882 = !graph$$17.factor;
      }
      if (v13882) {
        var max$$1 = Number.MIN_VALUE;
        var min$$2 = Number.MAX_VALUE;
        JAM.call(graph$$17.eachNode, graph$$17, [v443], JAM.policy.p3);
        graph$$17.minLen = min$$2;
        graph$$17.maxLen = max$$1;
        var constant = config$$4.width / graph$$17.depth.length;
        graph$$17.factor = constant / (graph$$17.maxLen - graph$$17.minLen);
      }
      $design(node$$56, false, {ymid:0, ymin:0, ymax:0}, 0);
      var v13886 = graph$$17.maxXpos;
      var v18874 = node$$56.data.$dim + 10;
      if (!v18874) {
        v18874 = 0;
      }
      graph$$17.maxXpos = v13886 + v18874;
      return;
    }
    var slice = Array.prototype.slice;
    return new Class({compute:v444, computePositions:v446, computeLeaves:v448});
  }
  function v439(opt$$24) {
    JAM.call($$$1.extend, $$$1, [this.label.style, {"visibility":"hidden", "position":"absolute", "width":"auto", "height":"auto"}], JAM.policy.p3);
    this.label.className = "jit-autoadjust-label";
    return;
  }
  function v438(opt$$23) {
    if (!this.label) {
      var v31170 = JAM.call(document.createElement, document, ["div"], JAM.policy.p3);
      this.label = v31170;
      var v7201 = document.body;
      JAM.call(v7201.appendChild, v7201, [this.label], JAM.policy.p3);
    }
    JAM.call(this.setLabelStyles, this, [opt$$23], JAM.policy.p3);
    return;
  }
  function v437(graph$$15, prop$$30, opt$$22) {
    function v436(n$$27) {
      var autoWidth = JAM.call(n$$27.getData, n$$27, ["autoWidth"], JAM.policy.p3);
      var autoHeight = JAM.call(n$$27.getData, n$$27, ["autoHeight"], JAM.policy.p3);
      if (autoWidth || autoHeight) {
        delete n$$27.data.$width;
        delete n$$27.data.$height;
        delete n$$27.data.$dim;
        var width$$22 = JAM.call(n$$27.getData, n$$27, ["width"], JAM.policy.p3);
        var height$$19 = JAM.call(n$$27.getData, n$$27, ["height"], JAM.policy.p3);
        var v7207;
        if (autoWidth) {
          v7207 = "auto";
        } else {
          v7207 = width$$22 + "px";
        }
        style$$5.width = v7207;
        var v7208;
        if (autoHeight) {
          v7208 = "auto";
        } else {
          v7208 = height$$19 + "px";
        }
        style$$5.height = v7208;
        JAM.set(label$$10, "innerHTML", n$$27.name);
        var offsetWidth = label$$10.offsetWidth;
        var offsetHeight = label$$10.offsetHeight;
        var type$$55 = JAM.call(n$$27.getData, n$$27, ["type"], JAM.policy.p3);
        if (JAM.call($$$1.indexOf, $$$1, [["circle", "square", "triangle", "star"], type$$55], JAM.policy.p3) === -1) {
          JAM.call(n$$27.setData, n$$27, ["width", offsetWidth], JAM.policy.p3);
          JAM.call(n$$27.setData, n$$27, ["height", offsetHeight], JAM.policy.p3);
        } else {
          var v7209;
          if (offsetWidth > offsetHeight) {
            v7209 = offsetWidth;
          } else {
            v7209 = offsetHeight;
          }
          var dim$$8 = v7209;
          JAM.call(n$$27.setData, n$$27, ["width", dim$$8], JAM.policy.p3);
          JAM.call(n$$27.setData, n$$27, ["height", dim$$8], JAM.policy.p3);
          JAM.call(n$$27.setData, n$$27, ["dim", dim$$8], JAM.policy.p3);
        }
      }
      return;
    }
    JAM.call(this.initializeLabel, this, [opt$$22], JAM.policy.p3);
    var label$$10 = this.label;
    var style$$5 = label$$10.style;
    JAM.call(graph$$15.eachNode, graph$$15, [v436], JAM.policy.p3);
    return;
  }
  function v435(type$$54) {
    function v434(node$$55) {
      function v433(adj$$20) {
        var nodeTo$$5 = adj$$20.nodeTo;
        if (!!nodeTo$$5.visited === T$$1) {
          var ansAdj = {};
          ansAdj.nodeTo = nodeTo$$5.id;
          ansAdj.data = adj$$20.data;
          JAM.call(adjs$$2.push, adjs$$2, [ansAdj], JAM.policy.p3);
        }
        return;
      }
      var ansNode = {};
      ansNode.id = node$$55.id;
      ansNode.name = node$$55.name;
      ansNode.data = node$$55.data;
      var adjs$$2 = [];
      JAM.call(node$$55.eachAdjacency, node$$55, [v433], JAM.policy.p3);
      ansNode.adjacencies = adjs$$2;
      JAM.call(ans$$13.push, ans$$13, [ansNode], JAM.policy.p3);
      node$$55.visited = !T$$1;
      return;
    }
    function recTree(node$$54) {
      function v432(n$$26) {
        JAM.call(ch$$10.push, ch$$10, [recTree(n$$26)], JAM.policy.p3);
        return;
      }
      var ans$$14 = {};
      ans$$14.id = node$$54.id;
      ans$$14.name = node$$54.name;
      ans$$14.data = node$$54.data;
      var ch$$10 = [];
      JAM.call(node$$54.eachSubnode, node$$54, [v432], JAM.policy.p3);
      ans$$14.children = ch$$10;
      return ans$$14;
    }
    type$$54 = type$$54 || "tree";
    if (type$$54 == "tree") {
      var ans$$13 = {};
      var v7214 = this.graph;
      var rootNode = JAM.call(v7214.getNode, v7214, [this.root], JAM.policy.p3);
      ans$$13 = recTree(rootNode);
      return ans$$13;
    } else {
      ans$$13 = [];
      var v22310 = this.graph;
      var T$$1 = !!JAM.call(v22310.getNode, v22310, [this.root], JAM.policy.p3).visited;
      var v7217 = this.graph;
      JAM.call(v7217.eachNode, v7217, [v434], JAM.policy.p3);
      return ans$$13;
    }
    return;
  }
  function v431(json$$8, i$$53) {
    this.json = json$$8;
    var v13894 = this.labels;
    if (v13894) {
      v13894 = this.labels.clearLabels;
    }
    if (v13894) {
      var v7219 = this.labels;
      JAM.call(v7219.clearLabels, v7219, [true], JAM.policy.p3);
    }
    var v31171 = JAM.call(this.construct, this, [json$$8], JAM.policy.p3);
    this.graph = v31171;
    if (JAM.call($$$1.type, $$$1, [json$$8], JAM.policy.p3) != "array") {
      this.root = json$$8.id;
    } else {
      var v18879;
      if (i$$53) {
        v18879 = i$$53;
      } else {
        v18879 = 0;
      }
      this.root = json$$8[v18879].id;
    }
    return;
  }
  function v430(json$$5) {
    function v429(ans$$12, json$$7) {
      function getNode(id$$28) {
        var i$$52 = 0;
        var l$$20 = json$$7.length;
        var v7224 = i$$52 < l$$20;
        for (;v7224;) {
          if (json$$7[i$$52].id == id$$28) {
            return json$$7[i$$52];
          }
          i$$52++;
          v7224 = i$$52 < l$$20;
        }
        var newNode$$1 = {"id":id$$28, "name":id$$28};
        return JAM.call(ans$$12.addNode, ans$$12, [newNode$$1], JAM.policy.p3);
      }
      var i$$51 = 0;
      var l$$19 = json$$7.length;
      var v7232 = i$$51 < l$$19;
      for (;v7232;) {
        JAM.call(ans$$12.addNode, ans$$12, [json$$7[i$$51]], JAM.policy.p3);
        var adj$$19 = json$$7[i$$51].adjacencies;
        if (adj$$19) {
          var j$$4 = 0;
          var lj = adj$$19.length;
          var v7231 = j$$4 < lj;
          for (;v7231;) {
            var node$$53 = adj$$19[j$$4];
            var data$$22 = {};
            if (typeof adj$$19[j$$4] != "string") {
              data$$22 = JAM.call($$$1.merge, $$$1, [node$$53.data, {}], JAM.policy.p3);
              node$$53 = node$$53.nodeTo;
            }
            JAM.call(ans$$12.addAdjacence, ans$$12, [json$$7[i$$51], getNode(node$$53), data$$22], JAM.policy.p3);
            j$$4++;
            v7231 = j$$4 < lj;
          }
        }
        i$$51++;
        v7232 = i$$51 < l$$19;
      }
      return;
    }
    function v428(ans$$11, json$$6) {
      JAM.call(ans$$11.addNode, ans$$11, [json$$6], JAM.policy.p3);
      if (json$$6.children) {
        var i$$50 = 0;
        var ch$$9 = json$$6.children;
        var v7235 = i$$50 < ch$$9.length;
        for (;v7235;) {
          JAM.call(ans$$11.addAdjacence, ans$$11, [json$$6, ch$$9[i$$50]], JAM.policy.p3);
          JAM.call(arguments.callee, arguments, [ans$$11, ch$$9[i$$50]], JAM.policy.p3);
          i$$50++;
          v7235 = i$$50 < ch$$9.length;
        }
      }
      return;
    }
    var isGraph = JAM.call($$$1.type, $$$1, [json$$5], JAM.policy.p3) == "array";
    var ans$$10 = JAM.new(Graph, [this.graphOptions, this.config.Node, this.config.Edge, this.config.Label]);
    if (!isGraph) {
      v428(ans$$10, json$$5);
    } else {
      v429(ans$$10, json$$5);
    }
    return ans$$10;
  }
  function v427(node$$52, canvas$$30) {
    var config$$2 = this.config;
    var level$$10 = config$$2.levelsToShow;
    var constrained = config$$2.constrained;
    if (!constrained) {
      return level$$10;
    }
    var v13904 = !JAM.call(this.treeFitsInCanvas, this, [node$$52, canvas$$30, level$$10], JAM.policy.p3);
    if (v13904) {
      v13904 = level$$10 > 1;
    }
    var v7244 = v13904;
    for (;v7244;) {
      level$$10--;
      var v13905 = !JAM.call(this.treeFitsInCanvas, this, [node$$52, canvas$$30, level$$10], JAM.policy.p3);
      if (v13905) {
        v13905 = level$$10 > 1;
      }
      v7244 = v13905;
    }
    return level$$10;
  }
  function v426(node$$51, canvas$$29, callback$$25) {
    function v425(n$$25) {
      var d$$4 = n$$25._depth - node$$51._depth;
      if (d$$4 > level$$9) {
        JAM.call(opt$$21.onHide, opt$$21, [n$$25], JAM.policy.p3);
        if (opt$$21.execHide) {
          n$$25.drawn = false;
          n$$25.exist = false;
          JAM.call(fx$$1.hideLabel, fx$$1, [n$$25, false], JAM.policy.p3);
        }
      } else {
        JAM.call(opt$$21.onShow, opt$$21, [n$$25], JAM.policy.p3);
        if (opt$$21.execShow) {
          n$$25.exist = true;
        }
      }
      return;
    }
    var level$$9 = JAM.call(this.getRightLevelToShow, this, [node$$51, canvas$$29], JAM.policy.p3);
    var fx$$1 = this.viz.labels;
    var opt$$21 = JAM.call($$$1.merge, $$$1, [{execShow:true, execHide:true, onHide:$$$1.empty, onShow:$$$1.empty}, callback$$25 || {}], JAM.policy.p3);
    JAM.call(node$$51.eachLevel, node$$51, [0, this.config.levelsToShow, v425], JAM.policy.p3);
    node$$51.drawn = true;
    return;
  }
  function v424(pos$$34, prop$$29) {
    function v423(elem$$52) {
      function v422(p$$19) {
        var v7254 = JAM.call(elem$$52.getPos, elem$$52, [p$$19], JAM.policy.p3);
        JAM.call(v7254.$add, v7254, [pos$$34], JAM.policy.p3);
        return;
      }
      JAM.call($$$1.each, $$$1, [prop$$29, v422], JAM.policy.p3);
      return;
    }
    prop$$29 = JAM.call($$$1.splat, $$$1, [prop$$29], JAM.policy.p3);
    var v7255 = this.viz.graph;
    JAM.call(v7255.eachNode, v7255, [v423], JAM.policy.p3);
    return;
  }
  function v421(viz$$20) {
    this.viz = viz$$20;
    this.config = viz$$20.config;
    this.node = viz$$20.config.Node;
    this.edge = viz$$20.config.Edge;
    return;
  }
  function v420(canvas$$28, node$$50, controller$$3) {
    var id$$27 = node$$50.id;
    var tag$$3 = JAM.call(this.getLabel, this, [id$$27], JAM.policy.p3);
    var v13910 = !tag$$3;
    if (v13910) {
      v13910 = !(tag$$3 = JAM.call(document.getElementById, document, [id$$27], JAM.policy.p3));
    }
    if (v13910) {
      var ns = "http://www.w3.org/2000/svg";
      tag$$3 = JAM.call(document.createElementNS, document, [ns, "svg:text"], JAM.policy.p3);
      var tspan = JAM.call(document.createElementNS, document, [ns, "svg:tspan"], JAM.policy.p3);
      JAM.call(tag$$3.appendChild, tag$$3, [tspan], JAM.policy.p3);
      var container$$2 = JAM.call(this.getLabelContainer, this, [], JAM.policy.p3);
      JAM.call(tag$$3.setAttribute, tag$$3, ["id", id$$27], JAM.policy.p3);
      JAM.call(tag$$3.setAttribute, tag$$3, ["class", "node"], JAM.policy.p3);
      JAM.call(container$$2.appendChild, container$$2, [tag$$3], JAM.policy.p3);
      JAM.call(controller$$3.onCreateLabel, controller$$3, [tag$$3, node$$50], JAM.policy.p3);
      JAM.set(this.labels, node$$50.id, tag$$3, JAM.policy.p2);
    }
    JAM.call(this.placeLabel, this, [tag$$3, node$$50, controller$$3], JAM.policy.p3);
    return;
  }
  function v419(canvas$$27, node$$49, controller$$2) {
    var id$$26 = node$$49.id;
    var tag$$2 = JAM.call(this.getLabel, this, [id$$26], JAM.policy.p3);
    var v13911 = !tag$$2;
    if (v13911) {
      v13911 = !(tag$$2 = JAM.call(document.getElementById, document, [id$$26], JAM.policy.p3));
    }
    if (v13911) {
      tag$$2 = JAM.call(document.createElement, document, ["div"], JAM.policy.p3);
      var container$$1 = JAM.call(this.getLabelContainer, this, [], JAM.policy.p3);
      tag$$2.id = id$$26;
      tag$$2.className = "node";
      tag$$2.style.position = "absolute";
      JAM.call(controller$$2.onCreateLabel, controller$$2, [tag$$2, node$$49], JAM.policy.p3);
      JAM.call(container$$1.appendChild, container$$1, [tag$$2], JAM.policy.p3);
      JAM.set(this.labels, node$$49.id, tag$$2, JAM.policy.p2);
    }
    JAM.call(this.placeLabel, this, [tag$$2, node$$49, controller$$2], JAM.policy.p3);
    return;
  }
  function v418(pos$$33, canvas$$26) {
    var size$$7 = JAM.call(canvas$$26.getSize, canvas$$26, [], JAM.policy.p3);
    var v13912 = pos$$33.w;
    if (v13912) {
      v13912 = pos$$33.h;
    }
    if (v13912) {
      var v22312 = pos$$33.x >= size$$7.width;
      if (!v22312) {
        v22312 = pos$$33.x < -pos$$33.w;
      }
      var v18886 = v22312;
      if (!v18886) {
        v18886 = pos$$33.y >= size$$7.height;
      }
      var v13913 = v18886;
      if (!v13913) {
        v13913 = pos$$33.y < -pos$$33.h;
      }
      if (v13913) {
        return false;
      }
    } else {
      var v22317 = pos$$33.x >= size$$7.width;
      if (!v22317) {
        v22317 = pos$$33.x < 0;
      }
      var v18890 = v22317;
      if (!v18890) {
        v18890 = pos$$33.y >= size$$7.height;
      }
      var v13914 = v18890;
      if (!v13914) {
        v13914 = pos$$33.y < 0;
      }
      if (v13914) {
        return false;
      }
    }
    return true;
  }
  function v417(node$$48, show$$1) {
    function v416(n$$24) {
      lab = JAM.call(that$$18.getLabel, that$$18, [n$$24.id], JAM.policy.p3);
      if (lab) {
        lab.style.display = st$$1;
      }
      return;
    }
    node$$48 = JAM.call($$$1.splat, $$$1, [node$$48], JAM.policy.p3);
    var v7270;
    if (show$$1) {
      v7270 = "";
    } else {
      v7270 = "none";
    }
    var st$$1 = v7270;
    var lab;
    var that$$18 = this;
    JAM.call($$$1.each, $$$1, [node$$48, v416], JAM.policy.p3);
    return;
  }
  function v415(id$$25) {
    var elem$$51 = JAM.call(this.getLabel, this, [id$$25], JAM.policy.p3);
    var v13915 = elem$$51;
    if (v13915) {
      v13915 = elem$$51.parentNode;
    }
    if (v13915) {
      var v7271 = elem$$51.parentNode;
      JAM.call(v7271.removeChild, v7271, [elem$$51], JAM.policy.p3);
    }
    return;
  }
  function v414(force$$5) {
    var id$$24;
    for (id$$24 in this.labels) {
      var v13916 = force$$5;
      if (!v13916) {
        var v22321 = this.viz.graph;
        v13916 = !JAM.call(v22321.hasNode, v22321, [id$$24], JAM.policy.p3);
      }
      if (v13916) {
        JAM.call(this.disposeLabel, this, [id$$24], JAM.policy.p3);
        delete this.labels[id$$24];
      }
    }
    return;
  }
  function v413(hide) {
    var container = JAM.call(this.getLabelContainer, this, [], JAM.policy.p3);
    if (hide) {
      container.style.display = "none";
    } else {
      container.style.display = "";
    }
    this.labelsHidden = hide;
    return;
  }
  function v412(id$$23) {
    var v7278;
    var v18895 = id$$23 in this.labels;
    if (v18895) {
      v18895 = this.labels[id$$23] != null;
    }
    if (v18895) {
      v7278 = this.labels[id$$23];
    } else {
      var v13918 = this.labels;
      var v31172 = JAM.call(document.getElementById, document, [id$$23], JAM.policy.p3);
      v7278 = JAM.set(v13918, id$$23, v31172, JAM.policy.p2);
    }
    return v7278;
  }
  function v411() {
    var v7279;
    if (this.labelContainer) {
      v7279 = this.labelContainer;
    } else {
      var v31173 = JAM.call(document.getElementById, document, [this.viz.config.labelContainer], JAM.policy.p3);
      v7279 = this.labelContainer = v31173;
    }
    return v7279;
  }
  function v410(node$$47, show) {
    function v409(n$$23) {
      n$$23._hideLabel = al;
      return;
    }
    node$$47 = JAM.call($$$1.splat, $$$1, [node$$47], JAM.policy.p3);
    var v7280;
    if (show) {
      v7280 = false;
    } else {
      v7280 = true;
    }
    var al = v7280;
    JAM.call($$$1.each, $$$1, [node$$47, v409], JAM.policy.p3);
    return;
  }
  function v408(canvas$$25, node$$46, controller$$1) {
    var ctx$$15 = JAM.call(canvas$$25.getCtx, canvas$$25, [], JAM.policy.p3);
    var v7281 = node$$46.pos;
    var pos$$32 = JAM.call(v7281.getc, v7281, [true], JAM.policy.p3);
    JAM.call(ctx$$15.fillText, ctx$$15, [node$$46.name, pos$$32.x, pos$$32.y + JAM.call(node$$46.getData, node$$46, ["height"], JAM.policy.p3) / 2], JAM.policy.p3);
    return;
  }
  function v407(canvas$$24, node$$45, controller) {
    var ctx$$14 = JAM.call(canvas$$24.getCtx, canvas$$24, [], JAM.policy.p3);
    var v7285 = node$$45.pos;
    var pos$$31 = JAM.call(v7285.getc, v7285, [true], JAM.policy.p3);
    ctx$$14.font = JAM.call(node$$45.getLabelData, node$$45, ["style"], JAM.policy.p3) + " " + JAM.call(node$$45.getLabelData, node$$45, ["size"], JAM.policy.p3) + "px " + JAM.call(node$$45.getLabelData, node$$45, ["family"], JAM.policy.p3);
    var v31174 = JAM.call(node$$45.getLabelData, node$$45, ["textAlign"], JAM.policy.p3);
    ctx$$14.textAlign = v31174;
    var v31175 = JAM.call(node$$45.getLabelData, node$$45, ["color"], JAM.policy.p3);
    ctx$$14.fillStyle = ctx$$14.strokeStyle = v31175;
    var v31176 = JAM.call(node$$45.getLabelData, node$$45, ["textBaseline"], JAM.policy.p3);
    ctx$$14.textBaseline = v31176;
    JAM.call(this.renderLabel, this, [canvas$$24, node$$45, controller], JAM.policy.p3);
    return;
  }
  function v406(viz$$19) {
    this.viz = viz$$19;
    return;
  }
  function v405(elem$$50, canvas$$23, opt$$20) {
    var gl = JAM.call(canvas$$23.getCtx, canvas$$23, [], JAM.policy.p3);
    var viewMatrix = new Matrix4;
    var lighting = canvas$$23.config.Scene.Lighting;
    var wcanvas = canvas$$23.canvases[0];
    var program$$16 = wcanvas.program;
    var camera = wcanvas.camera;
    if (!elem$$50.geometry) {
      var v31177 = new (O3D[JAM.call(elem$$50.getData, elem$$50, ["type"], JAM.policy.p3)]);
      elem$$50.geometry = v31177;
    }
    var v7292 = elem$$50.geometry;
    JAM.call(v7292.update, v7292, [elem$$50], JAM.policy.p3);
    if (!elem$$50.webGLVertexBuffer) {
      var vertices = [];
      var faces = [];
      var normals = [];
      var vertexIndex = 0;
      var geom$$4 = elem$$50.geometry;
      var i$$49 = 0;
      var vs = geom$$4.vertices;
      var fs = geom$$4.faces;
      var fsl = fs.length;
      var v7325 = i$$49 < fsl;
      for (;v7325;) {
        var face$$3 = fs[i$$49];
        var v1$$1 = vs[face$$3.a];
        var v2$$1 = vs[face$$3.b];
        var v3 = vs[face$$3.c];
        var v7296;
        if (face$$3.d) {
          v7296 = vs[face$$3.d];
        } else {
          v7296 = false;
        }
        var v4 = v7296;
        var n$$22 = face$$3.normal;
        JAM.call(vertices.push, vertices, [v1$$1.x, v1$$1.y, v1$$1.z], JAM.policy.p3);
        JAM.call(vertices.push, vertices, [v2$$1.x, v2$$1.y, v2$$1.z], JAM.policy.p3);
        JAM.call(vertices.push, vertices, [v3.x, v3.y, v3.z], JAM.policy.p3);
        if (v4) {
          JAM.call(vertices.push, vertices, [v4.x, v4.y, v4.z], JAM.policy.p3);
        }
        JAM.call(normals.push, normals, [n$$22.x, n$$22.y, n$$22.z], JAM.policy.p3);
        JAM.call(normals.push, normals, [n$$22.x, n$$22.y, n$$22.z], JAM.policy.p3);
        JAM.call(normals.push, normals, [n$$22.x, n$$22.y, n$$22.z], JAM.policy.p3);
        if (v4) {
          JAM.call(normals.push, normals, [n$$22.x, n$$22.y, n$$22.z], JAM.policy.p3);
        }
        JAM.call(faces.push, faces, [vertexIndex, vertexIndex + 1, vertexIndex + 2], JAM.policy.p3);
        if (v4) {
          JAM.call(faces.push, faces, [vertexIndex, vertexIndex + 2, vertexIndex + 3], JAM.policy.p3);
          vertexIndex = vertexIndex + 4;
        } else {
          vertexIndex = vertexIndex + 3;
        }
        i$$49++;
        v7325 = i$$49 < fsl;
      }
      var v31178 = JAM.call(gl.createBuffer, gl, [], JAM.policy.p3);
      elem$$50.webGLVertexBuffer = v31178;
      JAM.call(gl.bindBuffer, gl, [gl.ARRAY_BUFFER, elem$$50.webGLVertexBuffer], JAM.policy.p3);
      JAM.call(gl.bufferData, gl, [gl.ARRAY_BUFFER, new Float32Array(vertices), gl.STATIC_DRAW], JAM.policy.p3);
      var v31179 = JAM.call(gl.createBuffer, gl, [], JAM.policy.p3);
      elem$$50.webGLFaceBuffer = v31179;
      JAM.call(gl.bindBuffer, gl, [gl.ELEMENT_ARRAY_BUFFER, elem$$50.webGLFaceBuffer], JAM.policy.p3);
      JAM.call(gl.bufferData, gl, [gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(faces), gl.STATIC_DRAW], JAM.policy.p3);
      elem$$50.webGLFaceCount = faces.length;
      var v31180 = JAM.call(gl.createBuffer, gl, [], JAM.policy.p3);
      elem$$50.webGLNormalBuffer = v31180;
      JAM.call(gl.bindBuffer, gl, [gl.ARRAY_BUFFER, elem$$50.webGLNormalBuffer], JAM.policy.p3);
      JAM.call(gl.bufferData, gl, [gl.ARRAY_BUFFER, new Float32Array(normals), gl.STATIC_DRAW], JAM.policy.p3);
    }
    JAM.call(viewMatrix.multiply, viewMatrix, [camera.matrix, elem$$50.geometry.matrix], JAM.policy.p3);
    JAM.call(gl.uniformMatrix4fv, gl, [program$$16.viewMatrix, false, JAM.call(viewMatrix.flatten, viewMatrix, [], JAM.policy.p3)], JAM.policy.p3);
    var v7346 = program$$16.projectionMatrix;
    var v13933 = camera.projectionMatrix;
    JAM.call(gl.uniformMatrix4fv, gl, [v7346, false, JAM.call(v13933.flatten, v13933, [], JAM.policy.p3)], JAM.policy.p3);
    var normalMatrix = JAM.call(Matrix4.makeInvert, Matrix4, [viewMatrix], JAM.policy.p3);
    JAM.call(normalMatrix.$transpose, normalMatrix, [], JAM.policy.p3);
    JAM.call(gl.uniformMatrix4fv, gl, [program$$16.normalMatrix, false, JAM.call(normalMatrix.flatten, normalMatrix, [], JAM.policy.p3)], JAM.policy.p3);
    var color$$4 = JAM.call($$$1.hexToRgb, $$$1, [JAM.call(elem$$50.getData, elem$$50, ["color"], JAM.policy.p3)], JAM.policy.p3);
    JAM.call(color$$4.push, color$$4, [JAM.call(opt$$20.getAlpha, opt$$20, [], JAM.policy.p3)], JAM.policy.p3);
    JAM.call(gl.uniform4f, gl, [program$$16.color, color$$4[0] / 255, color$$4[1] / 255, color$$4[2] / 255, color$$4[3]], JAM.policy.p3);
    JAM.call(gl.uniform1i, gl, [program$$16.enableLighting, lighting.enable], JAM.policy.p3);
    if (lighting.enable) {
      if (lighting.ambient) {
        var acolor = lighting.ambient;
        JAM.call(gl.uniform3f, gl, [program$$16.ambientColor, acolor[0], acolor[1], acolor[2]], JAM.policy.p3);
      }
      if (lighting.directional) {
        var dir = lighting.directional;
        color$$4 = dir.color;
        var pos$$30 = dir.direction;
        var v13937 = new Vector3(pos$$30.x, pos$$30.y, pos$$30.z);
        var v7364 = JAM.call(v13937.normalize, v13937, [], JAM.policy.p3);
        var vd = JAM.call(v7364.$scale, v7364, [-1], JAM.policy.p3);
        JAM.call(gl.uniform3f, gl, [program$$16.lightingDirection, vd.x, vd.y, vd.z], JAM.policy.p3);
        JAM.call(gl.uniform3f, gl, [program$$16.directionalColor, color$$4[0], color$$4[1], color$$4[2]], JAM.policy.p3);
      }
    }
    JAM.call(gl.bindBuffer, gl, [gl.ARRAY_BUFFER, elem$$50.webGLVertexBuffer], JAM.policy.p3);
    JAM.call(gl.vertexAttribPointer, gl, [program$$16.position, 3, gl.FLOAT, false, 0, 0], JAM.policy.p3);
    JAM.call(gl.bindBuffer, gl, [gl.ARRAY_BUFFER, elem$$50.webGLNormalBuffer], JAM.policy.p3);
    JAM.call(gl.vertexAttribPointer, gl, [program$$16.normal, 3, gl.FLOAT, false, 0, 0], JAM.policy.p3);
    JAM.call(gl.bindBuffer, gl, [gl.ELEMENT_ARRAY_BUFFER, elem$$50.webGLFaceBuffer], JAM.policy.p3);
    JAM.call(gl.drawElements, gl, [gl.TRIANGLES, elem$$50.webGLFaceCount, gl.UNSIGNED_SHORT, 0], JAM.policy.p3);
    return;
  }
  function v404(adj$$18, canvas$$22) {
    function v403() {
      var v13938 = adj$$18.nodeFrom;
      var v7388 = JAM.call(v13938.getData, v13938, ["alpha"], JAM.policy.p3);
      var v13939 = adj$$18.nodeTo;
      return JAM.call(Math.min, Math, [v7388, JAM.call(v13939.getData, v13939, ["alpha"], JAM.policy.p3), JAM.call(adj$$18.getData, adj$$18, ["alpha"], JAM.policy.p3)], JAM.policy.p3);
    }
    if (JAM.call(adj$$18.getData, adj$$18, ["type"], JAM.policy.p3) == "none") {
      return;
    }
    JAM.call(this.plotElement, this, [adj$$18, canvas$$22, {getAlpha:v403}], JAM.policy.p3);
    return;
  }
  function v402(node$$44, canvas$$21) {
    function v401() {
      return JAM.call(node$$44.getData, node$$44, ["alpha"], JAM.policy.p3);
    }
    if (JAM.call(node$$44.getData, node$$44, ["type"], JAM.policy.p3) == "none") {
      return;
    }
    JAM.call(this.plotElement, this, [node$$44, canvas$$21, {getAlpha:v401}], JAM.policy.p3);
    return;
  }
  function v400(elem$$49, props$$15, delta$$20) {
    var v7395 = elem$$49.startPos;
    var from$$10 = JAM.call(v7395.getc, v7395, [true], JAM.policy.p3);
    var v7396 = elem$$49.endPos;
    var to$$11 = JAM.call(v7396.getc, v7396, [true], JAM.policy.p3);
    var v7397 = elem$$49.pos;
    JAM.call(v7397.setc, v7397, [JAM.call(this.compute, this, [from$$10.x, to$$11.x, delta$$20], JAM.policy.p3), JAM.call(this.compute, this, [from$$10.y, to$$11.y, delta$$20], JAM.policy.p3), JAM.call(this.compute, this, [from$$10.z, to$$11.z, delta$$20], JAM.policy.p3)], JAM.policy.p3);
    return;
  }
  function v399(adj$$17, canvas$$20, animating$$3) {
    var f$$3 = JAM.call(adj$$17.getData, adj$$17, ["type"], JAM.policy.p3);
    var ctxObj$$1 = this.edge.CanvasStyles;
    if (f$$3 != "none") {
      var width$$21 = JAM.call(adj$$17.getData, adj$$17, ["lineWidth"], JAM.policy.p3);
      var color$$3 = JAM.call(adj$$17.getData, adj$$17, ["color"], JAM.policy.p3);
      var ctx$$13 = JAM.call(canvas$$20.getCtx, canvas$$20, [], JAM.policy.p3);
      var nodeFrom$$3 = adj$$17.nodeFrom;
      var nodeTo$$4 = adj$$17.nodeTo;
      JAM.call(ctx$$13.save, ctx$$13, [], JAM.policy.p3);
      ctx$$13.lineWidth = width$$21;
      ctx$$13.fillStyle = ctx$$13.strokeStyle = color$$3;
      var v31181 = JAM.call(Math.min, Math, [JAM.call(nodeFrom$$3.getData, nodeFrom$$3, ["alpha"], JAM.policy.p3), JAM.call(nodeTo$$4.getData, nodeTo$$4, ["alpha"], JAM.policy.p3), JAM.call(adj$$17.getData, adj$$17, ["alpha"], JAM.policy.p3)], JAM.policy.p3);
      ctx$$13.globalAlpha = v31181;
      var s$$8;
      for (s$$8 in ctxObj$$1) {
        var v31182 = JAM.call(adj$$17.getCanvasStyle, adj$$17, [s$$8], JAM.policy.p3);
        JAM.set(ctx$$13, s$$8, v31182, JAM.policy.p2);
      }
      var v7405 = this.edgeTypes[f$$3].render;
      JAM.call(v7405.call, v7405, [this, adj$$17, canvas$$20, animating$$3], JAM.policy.p3);
      JAM.call(ctx$$13.restore, ctx$$13, [], JAM.policy.p3);
    }
    return;
  }
  function v398(node$$43, canvas$$19, animating$$2) {
    var f$$2 = JAM.call(node$$43.getData, node$$43, ["type"], JAM.policy.p3);
    var ctxObj = this.node.CanvasStyles;
    if (f$$2 != "none") {
      var width$$20 = JAM.call(node$$43.getData, node$$43, ["lineWidth"], JAM.policy.p3);
      var color$$2 = JAM.call(node$$43.getData, node$$43, ["color"], JAM.policy.p3);
      var alpha$$3 = JAM.call(node$$43.getData, node$$43, ["alpha"], JAM.policy.p3);
      var ctx$$12 = JAM.call(canvas$$19.getCtx, canvas$$19, [], JAM.policy.p3);
      JAM.call(ctx$$12.save, ctx$$12, [], JAM.policy.p3);
      ctx$$12.lineWidth = width$$20;
      ctx$$12.fillStyle = ctx$$12.strokeStyle = color$$2;
      ctx$$12.globalAlpha = alpha$$3;
      var s$$7;
      for (s$$7 in ctxObj) {
        var v31183 = JAM.call(node$$43.getCanvasStyle, node$$43, [s$$7], JAM.policy.p3);
        JAM.set(ctx$$12, s$$7, v31183, JAM.policy.p2);
      }
      var v7408 = this.nodeTypes[f$$2].render;
      JAM.call(v7408.call, v7408, [this, node$$43, canvas$$19, animating$$2], JAM.policy.p3);
      JAM.call(ctx$$12.restore, ctx$$12, [], JAM.policy.p3);
    }
    return;
  }
  function v397(node$$42, opt$$19, animating$$1) {
    function v396(elem$$48) {
      var v18905 = JAM.call(opt$$19.plotSubtree, opt$$19, [node$$42, elem$$48], JAM.policy.p3);
      if (v18905) {
        v18905 = elem$$48.exist;
      }
      var v13950 = v18905;
      if (v13950) {
        v13950 = elem$$48.drawn;
      }
      if (v13950) {
        var adj$$16 = JAM.call(node$$42.getAdjacency, node$$42, [elem$$48.id], JAM.policy.p3);
        var v7411 = !animating$$1;
        if (v7411) {
          JAM.call(opt$$19.onBeforePlotLine, opt$$19, [adj$$16], JAM.policy.p3);
        }
        JAM.call(that$$17.plotLine, that$$17, [adj$$16, canvas$$18, animating$$1], JAM.policy.p3);
        var v7412 = !animating$$1;
        if (v7412) {
          JAM.call(opt$$19.onAfterPlotLine, opt$$19, [adj$$16], JAM.policy.p3);
        }
        JAM.call(that$$17.plotTree, that$$17, [elem$$48, opt$$19, animating$$1], JAM.policy.p3);
      }
      return;
    }
    var that$$17 = this;
    var viz$$18 = this.viz;
    var canvas$$18 = viz$$18.canvas;
    var config$$1 = this.config;
    var ctx$$11 = JAM.call(canvas$$18.getCtx, canvas$$18, [], JAM.policy.p3);
    var nodeAlpha$$1 = JAM.call(node$$42.getData, node$$42, ["alpha"], JAM.policy.p3);
    JAM.call(node$$42.eachSubnode, node$$42, [v396], JAM.policy.p3);
    if (node$$42.drawn) {
      var v7414 = !animating$$1;
      if (v7414) {
        JAM.call(opt$$19.onBeforePlotNode, opt$$19, [node$$42], JAM.policy.p3);
      }
      JAM.call(this.plotNode, this, [node$$42, canvas$$18, animating$$1], JAM.policy.p3);
      var v7415 = !animating$$1;
      if (v7415) {
        JAM.call(opt$$19.onAfterPlotNode, opt$$19, [node$$42], JAM.policy.p3);
      }
      var v18906 = !opt$$19.hideLabels;
      if (v18906) {
        v18906 = opt$$19.withLabels;
      }
      var v13951 = v18906;
      if (v13951) {
        v13951 = nodeAlpha$$1 >= .95;
      }
      if (v13951) {
        var v7416 = this.labels;
        JAM.call(v7416.plotLabel, v7416, [canvas$$18, node$$42, opt$$19], JAM.policy.p3);
      } else {
        var v7417 = this.labels;
        JAM.call(v7417.hideLabel, v7417, [node$$42, false], JAM.policy.p3);
      }
    } else {
      var v7419 = this.labels;
      JAM.call(v7419.hideLabel, v7419, [node$$42, true], JAM.policy.p3);
    }
    return;
  }
  function v395(opt$$18, animating) {
    function v394(node$$41) {
      function v393(adj$$15) {
        var nodeTo$$3 = adj$$15.nodeTo;
        var v18907 = !!nodeTo$$3.visited === T;
        if (v18907) {
          v18907 = node$$41.drawn;
        }
        var v13952 = v18907;
        if (v13952) {
          v13952 = nodeTo$$3.drawn;
        }
        if (v13952) {
          var v7421 = !animating;
          if (v7421) {
            JAM.call(opt$$18.onBeforePlotLine, opt$$18, [adj$$15], JAM.policy.p3);
          }
          JAM.call(that$$16.plotLine, that$$16, [adj$$15, canvas$$17, animating], JAM.policy.p3);
          var v7422 = !animating;
          if (v7422) {
            JAM.call(opt$$18.onAfterPlotLine, opt$$18, [adj$$15], JAM.policy.p3);
          }
        }
        return;
      }
      var nodeAlpha = JAM.call(node$$41.getData, node$$41, ["alpha"], JAM.policy.p3);
      JAM.call(node$$41.eachAdjacency, node$$41, [v393], JAM.policy.p3);
      if (node$$41.drawn) {
        var v7424 = !animating;
        if (v7424) {
          JAM.call(opt$$18.onBeforePlotNode, opt$$18, [node$$41], JAM.policy.p3);
        }
        JAM.call(that$$16.plotNode, that$$16, [node$$41, canvas$$17, animating], JAM.policy.p3);
        var v7425 = !animating;
        if (v7425) {
          JAM.call(opt$$18.onAfterPlotNode, opt$$18, [node$$41], JAM.policy.p3);
        }
      }
      var v13953 = !that$$16.labelsHidden;
      if (v13953) {
        v13953 = opt$$18.withLabels;
      }
      if (v13953) {
        var v13954 = node$$41.drawn;
        if (v13954) {
          v13954 = nodeAlpha >= .95;
        }
        if (v13954) {
          var v7427 = that$$16.labels;
          JAM.call(v7427.plotLabel, v7427, [canvas$$17, node$$41, opt$$18], JAM.policy.p3);
        } else {
          var v7428 = that$$16.labels;
          JAM.call(v7428.hideLabel, v7428, [node$$41, false], JAM.policy.p3);
        }
      }
      node$$41.visited = !T;
      return;
    }
    var viz$$17 = this.viz;
    var aGraph = viz$$17.graph;
    var canvas$$17 = viz$$17.canvas;
    var id$$22 = viz$$17.root;
    var that$$16 = this;
    var ctx$$10 = JAM.call(canvas$$17.getCtx, canvas$$17, [], JAM.policy.p3);
    var min$$1 = Math.min;
    var v7431 = opt$$18;
    if (!v7431) {
      v7431 = this.viz.controller;
    }
    opt$$18 = v7431;
    var v7432 = opt$$18.clearCanvas;
    if (v7432) {
      JAM.call(canvas$$17.clear, canvas$$17, [], JAM.policy.p3);
    }
    var root$$4 = JAM.call(aGraph.getNode, aGraph, [id$$22], JAM.policy.p3);
    if (!root$$4) {
      return;
    }
    var T = !!root$$4.visited;
    JAM.call(aGraph.eachNode, aGraph, [v394], JAM.policy.p3);
    return;
  }
  function v392(opt$$17) {
    function v391(id$$21) {
      var n$$21 = JAM.call(graph$$14.getNode, graph$$14, [id$$21], JAM.policy.p3);
      if (n$$21) {
        var prop$$28;
        for (prop$$28 in props$$14) {
          JAM.call(n$$21.setData, n$$21, [prop$$28, props$$14[prop$$28], "end"], JAM.policy.p3);
        }
      }
      return;
    }
    function v390(n$$20) {
      var prop$$27;
      for (prop$$27 in props$$14) {
        JAM.call(n$$20.setData, n$$20, [prop$$27, props$$14[prop$$27], "end"], JAM.policy.p3);
      }
      return;
    }
    var viz$$16 = this.viz;
    var graph$$14 = viz$$16.graph;
    var animation$$1 = this.nodeFxAnimation;
    var options$$10 = JAM.call($$$1.merge, $$$1, [this.viz.config, {"elements":{"id":false, "properties":{}}, "reposition":false}], JAM.policy.p3);
    opt$$17 = JAM.call($$$1.merge, $$$1, [options$$10, opt$$17 || {}, {onBeforeCompute:$$$1.empty, onAfterCompute:$$$1.empty}], JAM.policy.p3);
    JAM.call(animation$$1.stopTimer, animation$$1, [], JAM.policy.p3);
    var props$$14 = opt$$17.elements.properties;
    if (!opt$$17.elements.id) {
      JAM.call(graph$$14.eachNode, graph$$14, [v390], JAM.policy.p3);
    } else {
      var ids = JAM.call($$$1.splat, $$$1, [opt$$17.elements.id], JAM.policy.p3);
      JAM.call($$$1.each, $$$1, [ids, v391], JAM.policy.p3);
    }
    var propnames = [];
    var prop$$26;
    for (prop$$26 in props$$14) {
      JAM.call(propnames.push, propnames, [prop$$26], JAM.policy.p3);
    }
    var modes$$3 = ["node-property:" + JAM.call(propnames.join, propnames, [":"], JAM.policy.p3)];
    if (opt$$17.reposition) {
      JAM.call(modes$$3.push, modes$$3, ["linear"], JAM.policy.p3);
      JAM.call(viz$$16.compute, viz$$16, ["end"], JAM.policy.p3);
    }
    JAM.call(this.animate, this, [JAM.call($$$1.merge, $$$1, [opt$$17, {modes:modes$$3, type:"nodefx"}], JAM.policy.p3)], JAM.policy.p3);
    return;
  }
  function v389(opt$$16, versor) {
    function v388() {
      if (opt$$16.hideLabels) {
        var v7447 = that$$15.labels;
        JAM.call(v7447.hideLabels, v7447, [false], JAM.policy.p3);
      }
      JAM.call(that$$15.plot, that$$15, [opt$$16], JAM.policy.p3);
      JAM.call(opt$$16.onComplete, opt$$16, [], JAM.policy.p3);
      return;
    }
    function v387(delta$$19) {
      function v386(node$$40) {
        var p$$18;
        for (p$$18 in m$$3) {
          JAM.call(interp[p$$18], interp, [node$$40, m$$3[p$$18], delta$$19, versor], JAM.policy.p3);
        }
        return;
      }
      JAM.call(graph$$13.eachNode, graph$$13, [v386], JAM.policy.p3);
      JAM.call(that$$15.plot, that$$15, [opt$$16, this.$animating, delta$$19], JAM.policy.p3);
      this.$animating = true;
      return;
    }
    opt$$16 = JAM.call($$$1.merge, $$$1, [this.viz.config, opt$$16 || {}], JAM.policy.p3);
    var that$$15 = this;
    var viz$$15 = this.viz;
    var graph$$13 = viz$$15.graph;
    var interp = this.Interpolator;
    var v7453;
    if (opt$$16.type === "nodefx") {
      v7453 = this.nodeFxAnimation;
    } else {
      v7453 = this.animation;
    }
    var animation = v7453;
    var m$$3 = JAM.call(this.prepare, this, [opt$$16.modes], JAM.policy.p3);
    if (opt$$16.hideLabels) {
      var v7455 = this.labels;
      JAM.call(v7455.hideLabels, v7455, [true], JAM.policy.p3);
    }
    var v7457 = JAM.call(animation.setOptions, animation, [JAM.call($$$1.extend, $$$1, [opt$$16, {$animating:false, compute:v387, complete:v388}], JAM.policy.p3)], JAM.policy.p3);
    JAM.call(v7457.start, v7457, [], JAM.policy.p3);
    return;
  }
  function v385(modes$$2) {
    function v384(node$$39) {
      function v383(p$$17) {
        function v382(adj$$14) {
          var i$$48 = 0;
          var l$$18 = prop$$25.length;
          var v7461 = i$$48 < l$$18;
          for (;v7461;) {
            JAM.call(adj$$14[accessors[p$$17].setter], adj$$14, [prop$$25[i$$48], JAM.call(adj$$14[accessors[p$$17].getter], adj$$14, [prop$$25[i$$48]], JAM.policy.p3), "start"], JAM.policy.p3);
            i$$48++;
            v7461 = i$$48 < l$$18;
          }
          return;
        }
        if (p$$17 in m$$2) {
          var prop$$25 = m$$2[p$$17];
          JAM.call(node$$39.eachAdjacency, node$$39, [v382], JAM.policy.p3);
        }
        return;
      }
      function v381(p$$16) {
        if (p$$16 in m$$2) {
          var prop$$24 = m$$2[p$$16];
          var i$$47 = 0;
          var l$$17 = prop$$24.length;
          var v7466 = i$$47 < l$$17;
          for (;v7466;) {
            JAM.call(node$$39[accessors[p$$16].setter], node$$39, [prop$$24[i$$47], JAM.call(node$$39[accessors[p$$16].getter], node$$39, [prop$$24[i$$47]], JAM.policy.p3), "start"], JAM.policy.p3);
            i$$47++;
            v7466 = i$$47 < l$$17;
          }
        }
        return;
      }
      var v7468 = node$$39.startPos;
      JAM.call(v7468.set, v7468, [node$$39.pos], JAM.policy.p3);
      JAM.call($$$1.each, $$$1, [["node-property", "node-style"], v381], JAM.policy.p3);
      JAM.call($$$1.each, $$$1, [["edge-property", "edge-style"], v383], JAM.policy.p3);
      return;
    }
    var graph$$12 = this.viz.graph;
    var accessors = {"node-property":{"getter":"getData", "setter":"setData"}, "edge-property":{"getter":"getData", "setter":"setData"}, "node-style":{"getter":"getCanvasStyle", "setter":"setCanvasStyle"}, "edge-style":{"getter":"getCanvasStyle", "setter":"setCanvasStyle"}};
    var m$$2 = {};
    if (JAM.call($$$1.type, $$$1, [modes$$2], JAM.policy.p3) == "array") {
      var i$$46 = 0;
      var len$$4 = modes$$2.length;
      var v7479 = i$$46 < len$$4;
      for (;v7479;) {
        var v7477 = modes$$2[i$$46];
        var elems = JAM.call(v7477.split, v7477, [":"], JAM.policy.p3);
        JAM.set(m$$2, JAM.call(elems.shift, elems, [], JAM.policy.p3), elems, JAM.policy.p2);
        i$$46++;
        v7479 = i$$46 < len$$4;
      }
    } else {
      var p$$15;
      for (p$$15 in modes$$2) {
        if (p$$15 == "position") {
          JAM.set(m$$2, modes$$2.position, [], JAM.policy.p2);
        } else {
          var v7481 = m$$2;
          var v7482 = p$$15;
          var v31184 = JAM.call($$$1.splat, $$$1, [modes$$2[p$$15]], JAM.policy.p3);
          JAM.set(v7481, v7482, v31184, JAM.policy.p2);
        }
      }
    }
    JAM.call(graph$$12.eachNode, graph$$12, [v384], JAM.policy.p3);
    return m$$2;
  }
  function v380(options$$9) {
    function v379() {
      if (JAM.call(options$$9.condition, options$$9, [], JAM.policy.p3)) {
        JAM.call(options$$9.step, options$$9, [], JAM.policy.p3);
      } else {
        clearInterval(interval);
        JAM.call(options$$9.onComplete, options$$9, [], JAM.policy.p3);
      }
      var v7486 = that$$14.viz;
      JAM.call(v7486.refresh, v7486, [true], JAM.policy.p3);
      return;
    }
    var that$$14 = this;
    options$$9 = JAM.call($$$1.merge, $$$1, [{condition:JAM.call($$$1.lambda, $$$1, [false], JAM.policy.p3), step:$$$1.empty, onComplete:$$$1.empty, duration:200}, options$$9 || {}], JAM.policy.p3);
    var interval = JAM.call(setInterval, null, [v379, options$$9.duration]);
    return;
  }
  function v378(elem$$47, prop$$23, delta$$18, getter$$5, setter$$5) {
    function v377() {
      return JAM.new($jit.Complex, [0, 0]);
    }
    var from$$9 = JAM.call(elem$$47[getter$$5], elem$$47, [prop$$23, "start"], JAM.policy.p3);
    var to$$10 = JAM.call(elem$$47[getter$$5], elem$$47, [prop$$23, "end"], JAM.policy.p3);
    var cur$$2 = [];
    if (typeof from$$9.offset == "undefined") {
      if (from$$9 === 0) {
        from$$9 = JAM.call($$$1.map, $$$1, [to$$10, v377], JAM.policy.p3);
        from$$9.offset = 0;
      } else {
        if (from$$9.length == 0) {
          JAM.call(from$$9.push, from$$9, [JAM.new($jit.Complex, [0, 0])], JAM.policy.p3);
        }
        var v7494 = from$$9.length < to$$10.length;
        for (;v7494;) {
          JAM.call(from$$9.push, from$$9, [from$$9[0]], JAM.policy.p3);
          v7494 = from$$9.length < to$$10.length;
        }
        var v7496 = from$$9.length > to$$10.length;
        for (;v7496;) {
          var v13989 = to$$10[0];
          if (!v13989) {
            v13989 = JAM.new($jit.Complex, [0, 0]);
          }
          JAM.call(to$$10.push, to$$10, [v13989], JAM.policy.p3);
          v7496 = from$$9.length > to$$10.length;
        }
        if (from$$9.length == 0) {
          return;
        }
        var l$$16 = from$$9.length;
        var minDist = 1E300;
        var offset$$9 = 0;
        var v7500 = offset$$9 < l$$16;
        for (;v7500;) {
          var d$$3 = 0;
          var i$$45 = 0;
          var v7498 = i$$45 < l$$16;
          for (;v7498;) {
            d$$3 = d$$3 + JAM.call(Geometry.dist2, Geometry, [from$$9[(offset$$9 + i$$45) % l$$16], to$$10[i$$45]], JAM.policy.p3);
            i$$45++;
            v7498 = i$$45 < l$$16;
          }
          if (d$$3 < minDist) {
            from$$9.offset = offset$$9;
            minDist = d$$3;
          }
          offset$$9++;
          v7500 = offset$$9 < l$$16;
        }
      }
    }
    i$$45 = 0;
    l$$16 = from$$9.length;
    var v7505 = i$$45 < l$$16;
    for (;v7505;) {
      var fromi$$1 = from$$9[(i$$45 + from$$9.offset) % l$$16];
      var toi$$1 = to$$10[i$$45];
      JAM.call(cur$$2.push, cur$$2, [JAM.new($jit.Complex, [JAM.call(this.compute, this, [fromi$$1.x, toi$$1.x, delta$$18], JAM.policy.p3), JAM.call(this.compute, this, [fromi$$1.y, toi$$1.y, delta$$18], JAM.policy.p3)])], JAM.policy.p3);
      i$$45++;
      v7505 = i$$45 < l$$16;
    }
    JAM.call(elem$$47[setter$$5], elem$$47, [prop$$23, cur$$2], JAM.policy.p3);
    return;
  }
  function v376(elem$$46, props$$13, delta$$17) {
    JAM.call(this["edge"], this, [elem$$46, props$$13, delta$$17, "canvas", "getCanvasStyle", "setCanvasStyle"], JAM.policy.p3);
    return;
  }
  function v375(elem$$45, props$$12, delta$$16) {
    JAM.call(this["node"], this, [elem$$45, props$$12, delta$$16, "canvas", "getCanvasStyle", "setCanvasStyle"], JAM.policy.p3);
    return;
  }
  function v374(elem$$44, props$$11, delta$$15) {
    JAM.call(this["node"], this, [elem$$44, props$$11, delta$$15, "label", "getLabelData", "setLabelData"], JAM.policy.p3);
    return;
  }
  function v373(elem$$43, props$$10, delta$$14) {
    JAM.call(this["edge"], this, [elem$$43, props$$10, delta$$14, "map", "getData", "setData"], JAM.policy.p3);
    return;
  }
  function v372(elem$$42, props$$9, delta$$13) {
    JAM.call(this["node"], this, [elem$$42, props$$9, delta$$13, "map", "getData", "setData"], JAM.policy.p3);
    return;
  }
  function v371(elem$$41, props$$8, delta$$12, mapKey, getter$$4, setter$$4) {
    var adjs$$1 = elem$$41.adjacencies;
    var id$$20;
    for (id$$20 in adjs$$1) {
      JAM.call(this["node"], this, [adjs$$1[id$$20], props$$8, delta$$12, mapKey, getter$$4, setter$$4], JAM.policy.p3);
    }
    return;
  }
  function v370(elem$$40, props$$7, delta$$11, map, getter$$3, setter$$3) {
    map = this[map];
    if (props$$7) {
      var len$$3 = props$$7.length;
      var i$$44 = 0;
      var v7508 = i$$44 < len$$3;
      for (;v7508;) {
        var pi$$1 = props$$7[i$$44];
        JAM.call(this[map[pi$$1]], this, [elem$$40, pi$$1, delta$$11, getter$$3, setter$$3], JAM.policy.p3);
        i$$44++;
        v7508 = i$$44 < len$$3;
      }
    } else {
      for (pi$$1 in map) {
        JAM.call(this[map[pi$$1]], this, [elem$$40, pi$$1, delta$$11, getter$$3, setter$$3], JAM.policy.p3);
      }
    }
    return;
  }
  function v369(elem$$39, prop$$22, delta$$10, getter$$2, setter$$2) {
    var from$$8 = JAM.call(elem$$39[getter$$2], elem$$39, [prop$$22, "start"], JAM.policy.p3);
    var to$$9 = JAM.call(elem$$39[getter$$2], elem$$39, [prop$$22, "end"], JAM.policy.p3);
    var cur$$1 = [];
    var i$$43 = 0;
    var l$$15 = from$$8.length;
    var v7514 = i$$43 < l$$15;
    for (;v7514;) {
      var fromi = from$$8[i$$43];
      var toi = to$$9[i$$43];
      if (fromi.length) {
        var j$$3 = 0;
        var len$$2 = fromi.length;
        var curi = [];
        var v7511 = j$$3 < len$$2;
        for (;v7511;) {
          JAM.call(curi.push, curi, [JAM.call(this.compute, this, [fromi[j$$3], toi[j$$3], delta$$10], JAM.policy.p3)], JAM.policy.p3);
          j$$3++;
          v7511 = j$$3 < len$$2;
        }
        JAM.call(cur$$1.push, cur$$1, [curi], JAM.policy.p3);
      } else {
        JAM.call(cur$$1.push, cur$$1, [JAM.call(this.compute, this, [fromi, toi, delta$$10], JAM.policy.p3)], JAM.policy.p3);
      }
      i$$43++;
      v7514 = i$$43 < l$$15;
    }
    JAM.call(elem$$39[setter$$2], elem$$39, [prop$$22, cur$$1], JAM.policy.p3);
    return;
  }
  function v368(elem$$38, prop$$21, delta$$9, getter$$1, setter$$1) {
    var from$$7 = JAM.call($$$1.hexToRgb, $$$1, [JAM.call(elem$$38[getter$$1], elem$$38, [prop$$21, "start"], JAM.policy.p3)], JAM.policy.p3);
    var to$$8 = JAM.call($$$1.hexToRgb, $$$1, [JAM.call(elem$$38[getter$$1], elem$$38, [prop$$21, "end"], JAM.policy.p3)], JAM.policy.p3);
    var comp = this.compute;
    var val$$5 = JAM.call($$$1.rgbToHex, $$$1, [[parseInt(JAM.call(comp, null, [from$$7[0], to$$8[0], delta$$9], JAM.policy.p3)), parseInt(JAM.call(comp, null, [from$$7[1], to$$8[1], delta$$9], JAM.policy.p3)), parseInt(JAM.call(comp, null, [from$$7[2], to$$8[2], delta$$9], JAM.policy.p3))]], JAM.policy.p3);
    JAM.call(elem$$38[setter$$1], elem$$38, [prop$$21, val$$5], JAM.policy.p3);
    return;
  }
  function v367(elem$$37, prop$$20, delta$$8, getter, setter) {
    var from$$6 = JAM.call(elem$$37[getter], elem$$37, [prop$$20, "start"], JAM.policy.p3);
    var to$$7 = JAM.call(elem$$37[getter], elem$$37, [prop$$20, "end"], JAM.policy.p3);
    JAM.call(elem$$37[setter], elem$$37, [prop$$20, JAM.call(this.compute, this, [from$$6, to$$7, delta$$8], JAM.policy.p3)], JAM.policy.p3);
    return;
  }
  function v366(elem$$36, props$$6, delta$$7) {
    var v7519 = elem$$36.startPos;
    var from$$5 = JAM.call(v7519.getp, v7519, [true], JAM.policy.p3);
    var v7520 = elem$$36.endPos;
    var to$$6 = JAM.call(v7520.getp, v7520, [], JAM.policy.p3);
    var ans$$9 = JAM.call(to$$6.interpolate, to$$6, [from$$5, delta$$7], JAM.policy.p3);
    var v7521 = elem$$36.pos;
    JAM.call(v7521.setp, v7521, [ans$$9.theta, ans$$9.rho], JAM.policy.p3);
    return;
  }
  function v365(elem$$35, props$$5, delta$$6) {
    var v7524 = elem$$35.startPos;
    var from$$4 = JAM.call(v7524.getc, v7524, [true], JAM.policy.p3);
    var v7525 = elem$$35.endPos;
    var to$$5 = JAM.call(v7525.getc, v7525, [true], JAM.policy.p3);
    var v7526 = elem$$35.pos;
    JAM.call(v7526.setc, v7526, [JAM.call(this.compute, this, [from$$4.x, to$$5.x, delta$$6], JAM.policy.p3), JAM.call(this.compute, this, [from$$4.y, to$$5.y, delta$$6], JAM.policy.p3)], JAM.policy.p3);
    return;
  }
  function v364(elem$$34, props$$4, delta$$5, vector) {
    var v$$2 = JAM.call(vector.scale, vector, [-delta$$5], JAM.policy.p3);
    if (JAM.call(v$$2.norm, v$$2, [], JAM.policy.p3) < 1) {
      var x$$65 = v$$2.x;
      var y$$46 = v$$2.y;
      var v14009 = elem$$34.startPos;
      var v7530 = JAM.call(v14009.getc, v14009, [], JAM.policy.p3);
      var ans$$8 = JAM.call(v7530.moebiusTransformation, v7530, [v$$2], JAM.policy.p3);
      var v7531 = elem$$34.pos;
      JAM.call(v7531.setc, v7531, [ans$$8.x, ans$$8.y], JAM.policy.p3);
      v$$2.x = x$$65;
      v$$2.y = y$$46;
    }
    return;
  }
  function v363(from$$3, to$$4, delta$$4) {
    return from$$3 + (to$$4 - from$$3) * delta$$4;
  }
  function v362(viz$$14, klass$$6) {
    this.viz = viz$$14;
    this.config = viz$$14.config;
    this.node = viz$$14.config.Node;
    this.edge = viz$$14.config.Edge;
    var v31185 = new Animation;
    this.animation = v31185;
    var v31186 = new klass$$6.Plot.NodeTypes;
    this.nodeTypes = v31186;
    var v31187 = new klass$$6.Plot.EdgeTypes;
    this.edgeTypes = v31187;
    this.labels = viz$$14.labels;
    return;
  }
  function v361(from$$2, to$$3, r$$1, canvas$$16) {
    function computeArcThroughTwoPoints(p1, p2) {
      var aDen = p1.x * p2.y - p1.y * p2.x;
      var bDen = aDen;
      var sq1 = JAM.call(p1.squaredNorm, p1, [], JAM.policy.p3);
      var sq2 = JAM.call(p2.squaredNorm, p2, [], JAM.policy.p3);
      if (aDen == 0) {
        return{x:0, y:0, ratio:-1};
      }
      var a$$6 = (p1.y * sq2 - p2.y * sq1 + p1.y - p2.y) / aDen;
      var b$$4 = (p2.x * sq1 - p1.x * sq2 + p2.x - p1.x) / bDen;
      var x$$64 = -a$$6 / 2;
      var y$$45 = -b$$4 / 2;
      var squaredRatio = (a$$6 * a$$6 + b$$4 * b$$4) / 4 - 1;
      if (squaredRatio < 0) {
        return{x:0, y:0, ratio:-1};
      }
      var ratio = JAM.call(Math.sqrt, Math, [squaredRatio], JAM.policy.p3);
      var v14022;
      if (ratio > 1E3) {
        v14022 = -1;
      } else {
        v14022 = ratio;
      }
      var out = {x:x$$64, y:y$$45, ratio:v14022, a:a$$6, b:b$$4};
      return out;
    }
    function sense(angleBegin$$1, angleEnd$$1) {
      var v7550;
      if (angleBegin$$1 < angleEnd$$1) {
        var v14023;
        if (angleBegin$$1 + Math.PI > angleEnd$$1) {
          v14023 = false;
        } else {
          v14023 = true;
        }
        v7550 = v14023;
      } else {
        var v14024;
        if (angleEnd$$1 + Math.PI > angleBegin$$1) {
          v14024 = true;
        } else {
          v14024 = false;
        }
        v7550 = v14024;
      }
      return v7550;
    }
    var ctx$$9 = JAM.call(canvas$$16.getCtx, canvas$$16, [], JAM.policy.p3);
    var centerOfCircle = computeArcThroughTwoPoints(from$$2, to$$3);
    var v18936 = centerOfCircle.a > 1E3;
    if (!v18936) {
      v18936 = centerOfCircle.b > 1E3;
    }
    var v14026 = v18936;
    if (!v14026) {
      v14026 = centerOfCircle.ratio < 0;
    }
    if (v14026) {
      JAM.call(ctx$$9.beginPath, ctx$$9, [], JAM.policy.p3);
      JAM.call(ctx$$9.moveTo, ctx$$9, [from$$2.x * r$$1, from$$2.y * r$$1], JAM.policy.p3);
      JAM.call(ctx$$9.lineTo, ctx$$9, [to$$3.x * r$$1, to$$3.y * r$$1], JAM.policy.p3);
      JAM.call(ctx$$9.stroke, ctx$$9, [], JAM.policy.p3);
    } else {
      var angleBegin = JAM.call(Math.atan2, Math, [to$$3.y - centerOfCircle.y, to$$3.x - centerOfCircle.x], JAM.policy.p3);
      var angleEnd = JAM.call(Math.atan2, Math, [from$$2.y - centerOfCircle.y, from$$2.x - centerOfCircle.x], JAM.policy.p3);
      sense = JAM.call(sense, null, [angleBegin, angleEnd], JAM.policy.p3);
      JAM.call(ctx$$9.beginPath, ctx$$9, [], JAM.policy.p3);
      JAM.call(ctx$$9.arc, ctx$$9, [centerOfCircle.x * r$$1, centerOfCircle.y * r$$1, centerOfCircle.ratio * r$$1, angleBegin, angleEnd, sense], JAM.policy.p3);
      JAM.call(ctx$$9.stroke, ctx$$9, [], JAM.policy.p3);
    }
    return;
  }
  function v360(posFrom$$1, posTo$$1, pos$$29, epsilon$$1) {
    var v7563 = EdgeHelper.line;
    return JAM.call(v7563.contains, v7563, [posFrom$$1, posTo$$1, pos$$29, epsilon$$1], JAM.policy.p3);
  }
  function v359(from$$1, to$$2, dim$$7, swap, canvas$$15) {
    var ctx$$8 = JAM.call(canvas$$15.getCtx, canvas$$15, [], JAM.policy.p3);
    if (swap) {
      var tmp$$1 = from$$1;
      from$$1 = to$$2;
      to$$2 = tmp$$1;
    }
    var vect = new Complex(to$$2.x - from$$1.x, to$$2.y - from$$1.y);
    JAM.call(vect.$scale, vect, [dim$$7 / JAM.call(vect.norm, vect, [], JAM.policy.p3)], JAM.policy.p3);
    var intermediatePoint = new Complex(to$$2.x - vect.x, to$$2.y - vect.y);
    var normal = new Complex(-vect.y / 2, vect.x / 2);
    var v1 = JAM.call(intermediatePoint.add, intermediatePoint, [normal], JAM.policy.p3);
    var v2 = JAM.call(intermediatePoint.$add, intermediatePoint, [JAM.call(normal.$scale, normal, [-1], JAM.policy.p3)], JAM.policy.p3);
    JAM.call(ctx$$8.beginPath, ctx$$8, [], JAM.policy.p3);
    JAM.call(ctx$$8.moveTo, ctx$$8, [from$$1.x, from$$1.y], JAM.policy.p3);
    JAM.call(ctx$$8.lineTo, ctx$$8, [to$$2.x, to$$2.y], JAM.policy.p3);
    JAM.call(ctx$$8.stroke, ctx$$8, [], JAM.policy.p3);
    JAM.call(ctx$$8.beginPath, ctx$$8, [], JAM.policy.p3);
    JAM.call(ctx$$8.moveTo, ctx$$8, [v1.x, v1.y], JAM.policy.p3);
    JAM.call(ctx$$8.lineTo, ctx$$8, [v2.x, v2.y], JAM.policy.p3);
    JAM.call(ctx$$8.lineTo, ctx$$8, [to$$2.x, to$$2.y], JAM.policy.p3);
    JAM.call(ctx$$8.closePath, ctx$$8, [], JAM.policy.p3);
    JAM.call(ctx$$8.fill, ctx$$8, [], JAM.policy.p3);
    return;
  }
  function v358(posFrom, posTo, pos$$28, epsilon) {
    var min = Math.min;
    var max = Math.max;
    var minPosX = JAM.call(min, null, [posFrom.x, posTo.x], JAM.policy.p3);
    var maxPosX = JAM.call(max, null, [posFrom.x, posTo.x], JAM.policy.p3);
    var minPosY = JAM.call(min, null, [posFrom.y, posTo.y], JAM.policy.p3);
    var maxPosY = JAM.call(max, null, [posFrom.y, posTo.y], JAM.policy.p3);
    var v22344 = pos$$28.x >= minPosX;
    if (v22344) {
      v22344 = pos$$28.x <= maxPosX;
    }
    var v18940 = v22344;
    if (v18940) {
      v18940 = pos$$28.y >= minPosY;
    }
    var v14053 = v18940;
    if (v14053) {
      v14053 = pos$$28.y <= maxPosY;
    }
    if (v14053) {
      if (JAM.call(Math.abs, Math, [posTo.x - posFrom.x], JAM.policy.p3) <= epsilon) {
        return true;
      }
      var dist = (posTo.y - posFrom.y) / (posTo.x - posFrom.x) * (pos$$28.x - posFrom.x) + posFrom.y;
      return JAM.call(Math.abs, Math, [dist - pos$$28.y], JAM.policy.p3) <= epsilon;
    }
    return false;
  }
  function v357(from, to$$1, canvas$$14) {
    var ctx$$7 = JAM.call(canvas$$14.getCtx, canvas$$14, [], JAM.policy.p3);
    JAM.call(ctx$$7.beginPath, ctx$$7, [], JAM.policy.p3);
    JAM.call(ctx$$7.moveTo, ctx$$7, [from.x, from.y], JAM.policy.p3);
    JAM.call(ctx$$7.lineTo, ctx$$7, [to$$1.x, to$$1.y], JAM.policy.p3);
    JAM.call(ctx$$7.stroke, ctx$$7, [], JAM.policy.p3);
    return;
  }
  function v356(npos$$5, pos$$27, dim$$6) {
    var v7599 = NodeHelper.circle;
    return JAM.call(v7599.contains, v7599, [npos$$5, pos$$27, dim$$6], JAM.policy.p3);
  }
  function v355(type$$53, pos$$26, dim$$5, canvas$$13) {
    var ctx$$6 = JAM.call(canvas$$13.getCtx, canvas$$13, [], JAM.policy.p3);
    var pi5 = Math.PI / 5;
    JAM.call(ctx$$6.save, ctx$$6, [], JAM.policy.p3);
    JAM.call(ctx$$6.translate, ctx$$6, [pos$$26.x, pos$$26.y], JAM.policy.p3);
    JAM.call(ctx$$6.beginPath, ctx$$6, [], JAM.policy.p3);
    JAM.call(ctx$$6.moveTo, ctx$$6, [dim$$5, 0], JAM.policy.p3);
    var i$$42 = 0;
    var v7605 = i$$42 < 9;
    for (;v7605;) {
      JAM.call(ctx$$6.rotate, ctx$$6, [pi5], JAM.policy.p3);
      if (i$$42 % 2 == 0) {
        JAM.call(ctx$$6.lineTo, ctx$$6, [dim$$5 / .525731 * .200811, 0], JAM.policy.p3);
      } else {
        JAM.call(ctx$$6.lineTo, ctx$$6, [dim$$5, 0], JAM.policy.p3);
      }
      i$$42++;
      v7605 = i$$42 < 9;
    }
    JAM.call(ctx$$6.closePath, ctx$$6, [], JAM.policy.p3);
    JAM.call(ctx$$6[type$$53], ctx$$6, [], JAM.policy.p3);
    JAM.call(ctx$$6.restore, ctx$$6, [], JAM.policy.p3);
    return;
  }
  function v354(npos$$4, pos$$25, dim$$4) {
    var v7606 = NodeHelper.circle;
    return JAM.call(v7606.contains, v7606, [npos$$4, pos$$25, dim$$4], JAM.policy.p3);
  }
  function v353(type$$52, pos$$24, dim$$3, canvas$$12) {
    var ctx$$5 = JAM.call(canvas$$12.getCtx, canvas$$12, [], JAM.policy.p3);
    var c1x = pos$$24.x;
    var c1y = pos$$24.y - dim$$3;
    var c2x = c1x - dim$$3;
    var c2y = pos$$24.y + dim$$3;
    var c3x = c1x + dim$$3;
    var c3y = c2y;
    JAM.call(ctx$$5.beginPath, ctx$$5, [], JAM.policy.p3);
    JAM.call(ctx$$5.moveTo, ctx$$5, [c1x, c1y], JAM.policy.p3);
    JAM.call(ctx$$5.lineTo, ctx$$5, [c2x, c2y], JAM.policy.p3);
    JAM.call(ctx$$5.lineTo, ctx$$5, [c3x, c3y], JAM.policy.p3);
    JAM.call(ctx$$5.closePath, ctx$$5, [], JAM.policy.p3);
    JAM.call(ctx$$5[type$$52], ctx$$5, [], JAM.policy.p3);
    return;
  }
  function v352(npos$$3, pos$$23, width$$19, height$$18) {
    var v7609 = JAM.call(Math.abs, Math, [pos$$23.x - npos$$3.x], JAM.policy.p3) <= width$$19 / 2;
    if (v7609) {
      v7609 = JAM.call(Math.abs, Math, [pos$$23.y - npos$$3.y], JAM.policy.p3) <= height$$18 / 2;
    }
    return v7609;
  }
  function v351(type$$51, pos$$22, width$$18, height$$17, canvas$$11) {
    var v7610 = JAM.call(canvas$$11.getCtx, canvas$$11, [], JAM.policy.p3);
    JAM.call(v7610[type$$51 + "Rect"], v7610, [pos$$22.x - width$$18 / 2, pos$$22.y - height$$17 / 2, width$$18, height$$17], JAM.policy.p3);
    return;
  }
  function v350(npos$$2, pos$$21, dim$$2) {
    var v7614 = JAM.call(Math.abs, Math, [pos$$21.x - npos$$2.x], JAM.policy.p3) <= dim$$2;
    if (v7614) {
      v7614 = JAM.call(Math.abs, Math, [pos$$21.y - npos$$2.y], JAM.policy.p3) <= dim$$2;
    }
    return v7614;
  }
  function v349(type$$50, pos$$20, dim$$1, canvas$$10) {
    var v7615 = JAM.call(canvas$$10.getCtx, canvas$$10, [], JAM.policy.p3);
    JAM.call(v7615[type$$50 + "Rect"], v7615, [pos$$20.x - dim$$1, pos$$20.y - dim$$1, 2 * dim$$1, 2 * dim$$1], JAM.policy.p3);
    return;
  }
  function v348(npos$$1, pos$$19, width$$17, height$$16) {
    var radius$$5 = 0;
    var scalex$$1 = 1;
    var scaley$$1 = 1;
    var diffx$$1 = 0;
    var diffy$$1 = 0;
    var diff$$2 = 0;
    if (width$$17 > height$$16) {
      radius$$5 = width$$17 / 2;
      scaley$$1 = height$$16 / width$$17;
    } else {
      radius$$5 = height$$16 / 2;
      scalex$$1 = width$$17 / height$$16;
    }
    diffx$$1 = (npos$$1.x - pos$$19.x) * (1 / scalex$$1);
    diffy$$1 = (npos$$1.y - pos$$19.y) * (1 / scaley$$1);
    diff$$2 = diffx$$1 * diffx$$1 + diffy$$1 * diffy$$1;
    return diff$$2 <= radius$$5 * radius$$5;
  }
  function v347(type$$49, pos$$18, width$$16, height$$15, canvas$$9) {
    var ctx$$4 = JAM.call(canvas$$9.getCtx, canvas$$9, [], JAM.policy.p3);
    var scalex = 1;
    var scaley = 1;
    var scaleposx = 1;
    var scaleposy = 1;
    var radius$$4 = 0;
    if (width$$16 > height$$15) {
      radius$$4 = width$$16 / 2;
      scaley = height$$15 / width$$16;
      scaleposy = width$$16 / height$$15;
    } else {
      radius$$4 = height$$15 / 2;
      scalex = width$$16 / height$$15;
      scaleposx = height$$15 / width$$16;
    }
    JAM.call(ctx$$4.save, ctx$$4, [], JAM.policy.p3);
    JAM.call(ctx$$4.scale, ctx$$4, [scalex, scaley], JAM.policy.p3);
    JAM.call(ctx$$4.beginPath, ctx$$4, [], JAM.policy.p3);
    JAM.call(ctx$$4.arc, ctx$$4, [pos$$18.x * scaleposx, pos$$18.y * scaleposy, radius$$4, 0, Math.PI * 2, true], JAM.policy.p3);
    JAM.call(ctx$$4.closePath, ctx$$4, [], JAM.policy.p3);
    JAM.call(ctx$$4[type$$49], ctx$$4, [], JAM.policy.p3);
    JAM.call(ctx$$4.restore, ctx$$4, [], JAM.policy.p3);
    return;
  }
  function v346(npos, pos$$17, radius$$3) {
    var diffx = npos.x - pos$$17.x;
    var diffy = npos.y - pos$$17.y;
    var diff$$1 = diffx * diffx + diffy * diffy;
    return diff$$1 <= radius$$3 * radius$$3;
  }
  function v345(type$$48, pos$$16, radius$$2, canvas$$8) {
    var ctx$$3 = JAM.call(canvas$$8.getCtx, canvas$$8, [], JAM.policy.p3);
    JAM.call(ctx$$3.beginPath, ctx$$3, [], JAM.policy.p3);
    JAM.call(ctx$$3.arc, ctx$$3, [pos$$16.x, pos$$16.y, radius$$2, 0, Math.PI * 2, true], JAM.policy.p3);
    JAM.call(ctx$$3.closePath, ctx$$3, [], JAM.policy.p3);
    JAM.call(ctx$$3[type$$48], ctx$$3, [], JAM.policy.p3);
    return;
  }
  function v344(graph$$11) {
    function v343(elem$$33) {
      function v342(adj$$13) {
        var v7643 = viz$$13.graph;
        var nodeFrom$$2 = JAM.call(v7643.getNode, v7643, [adj$$13.nodeFrom.id], JAM.policy.p3);
        var v7645 = viz$$13.graph;
        var nodeTo$$2 = JAM.call(v7645.getNode, v7645, [adj$$13.nodeTo.id], JAM.policy.p3);
        if (!JAM.call(nodeFrom$$2.adjacentTo, nodeFrom$$2, [nodeTo$$2], JAM.policy.p3)) {
          var v7647 = viz$$13.graph;
          adj$$13 = JAM.call(v7647.addAdjacence, v7647, [nodeFrom$$2, nodeTo$$2, adj$$13.data], JAM.policy.p3);
          var v14083 = nodeFrom$$2.startAlpha == nodeFrom$$2.endAlpha;
          if (v14083) {
            v14083 = nodeTo$$2.startAlpha == nodeTo$$2.endAlpha;
          }
          if (v14083) {
            fadeEdges$$2 = true;
            JAM.call(adj$$13.setData, adj$$13, ["alpha", 0], JAM.policy.p3);
            JAM.call(adj$$13.setData, adj$$13, ["alpha", 0, "start"], JAM.policy.p3);
            JAM.call(adj$$13.setData, adj$$13, ["alpha", 1, "end"], JAM.policy.p3);
          }
        }
        return;
      }
      JAM.call(elem$$33.eachAdjacency, elem$$33, [v342], JAM.policy.p3);
      return;
    }
    function v341(elem$$32) {
      var v18956 = viz$$13.graph;
      if (!JAM.call(v18956.hasNode, v18956, [elem$$32.id], JAM.policy.p3)) {
        var v7651 = viz$$13.graph;
        JAM.call(v7651.addNode, v7651, [elem$$32], JAM.policy.p3);
        var v7652 = viz$$13.graph;
        var n$$19 = JAM.call(v7652.getNode, v7652, [elem$$32.id], JAM.policy.p3);
        JAM.call(n$$19.setData, n$$19, ["alpha", 0], JAM.policy.p3);
        JAM.call(n$$19.setData, n$$19, ["alpha", 0, "start"], JAM.policy.p3);
        JAM.call(n$$19.setData, n$$19, ["alpha", 1, "end"], JAM.policy.p3);
      }
      return;
    }
    var viz$$13 = this.viz;
    JAM.call(graph$$11.eachNode, graph$$11, [v341], JAM.policy.p3);
    var fadeEdges$$2 = false;
    JAM.call(graph$$11.eachNode, graph$$11, [v343], JAM.policy.p3);
    return fadeEdges$$2;
  }
  function v340(node$$38, opt$$15) {
    function subn$$2(n$$18) {
      function v339(ch$$8) {
        delete ch$$8.ignore;
        var v14085;
        if (opt$$15.type == "animate") {
          v14085 = "end";
        } else {
          v14085 = "current";
        }
        JAM.call(ch$$8.setData, ch$$8, ["alpha", 1, v14085], JAM.policy.p3);
        subn$$2(ch$$8);
        return;
      }
      JAM.call(n$$18.eachSubnode, n$$18, [v339], JAM.policy.p3);
      return;
    }
    if (!("collapsed" in node$$38)) {
      return;
    }
    var viz$$12 = this.viz;
    opt$$15 = JAM.call($$$1.merge, $$$1, [this.options, viz$$12.config, opt$$15 || {}, {"modes":["node-property:alpha:span", "linear"]}], JAM.policy.p3);
    delete node$$38.collapsed;
    subn$$2(node$$38);
    if (opt$$15.type == "animate") {
      JAM.call(viz$$12.compute, viz$$12, ["end"], JAM.policy.p3);
      if (viz$$12.rotated) {
        JAM.call(viz$$12.rotate, viz$$12, [viz$$12.rotated, "none", {"property":"end"}], JAM.policy.p3);
      }
      var v7664 = viz$$12.fx;
      JAM.call(v7664.animate, v7664, [opt$$15], JAM.policy.p3);
    } else {
      if (opt$$15.type == "replot") {
        JAM.call(viz$$12.refresh, viz$$12, [], JAM.policy.p3);
      }
    }
    return;
  }
  function v338(node$$37, opt$$14) {
    function subn$$1(n$$17) {
      function v337(ch$$7) {
        JAM.call(ch$$7.setPos, ch$$7, [JAM.call(node$$37.getPos, node$$37, ["end"], JAM.policy.p3), "end"], JAM.policy.p3);
        subn$$1(ch$$7);
        return;
      }
      JAM.call(n$$17.eachSubnode, n$$17, [v337], JAM.policy.p3);
      return;
    }
    function subn(n$$16) {
      function v336(ch$$6) {
        ch$$6.ignore = true;
        var v14090;
        if (opt$$14.type == "animate") {
          v14090 = "end";
        } else {
          v14090 = "current";
        }
        JAM.call(ch$$6.setData, ch$$6, ["alpha", 0, v14090], JAM.policy.p3);
        subn(ch$$6);
        return;
      }
      JAM.call(n$$16.eachSubnode, n$$16, [v336], JAM.policy.p3);
      return;
    }
    var viz$$11 = this.viz;
    var v14091 = node$$37.collapsed;
    if (!v14091) {
      v14091 = !JAM.call(node$$37.anySubnode, node$$37, [JAM.call($$$1.lambda, $$$1, [true], JAM.policy.p3)], JAM.policy.p3);
    }
    if (v14091) {
      return;
    }
    opt$$14 = JAM.call($$$1.merge, $$$1, [this.options, viz$$11.config, opt$$14 || {}, {"modes":["node-property:alpha:span", "linear"]}], JAM.policy.p3);
    node$$37.collapsed = true;
    subn(node$$37);
    if (opt$$14.type == "animate") {
      JAM.call(viz$$11.compute, viz$$11, ["end"], JAM.policy.p3);
      if (viz$$11.rotated) {
        JAM.call(viz$$11.rotate, viz$$11, [viz$$11.rotated, "none", {"property":"end"}], JAM.policy.p3);
      }
      subn$$1(node$$37);
      var v7677 = viz$$11.fx;
      JAM.call(v7677.animate, v7677, [opt$$14], JAM.policy.p3);
    } else {
      if (opt$$14.type == "replot") {
        JAM.call(viz$$11.refresh, viz$$11, [], JAM.policy.p3);
      }
    }
    return;
  }
  function v335(json$$4, opt$$13, extraModes) {
    function v334() {
      function v333(elem$$31) {
        function v332(adj$$12) {
          if (adj$$12.ignore) {
            var v7680 = viz$$10.graph;
            JAM.call(v7680.removeAdjacence, v7680, [adj$$12.nodeFrom.id, adj$$12.nodeTo.id], JAM.policy.p3);
          }
          return;
        }
        JAM.call(elem$$31.eachAdjacency, elem$$31, [v332], JAM.policy.p3);
        return;
      }
      function v331(elem$$30) {
        if (elem$$30.ignore) {
          var v7684 = viz$$10.graph;
          JAM.call(v7684.removeNode, v7684, [elem$$30.id], JAM.policy.p3);
        }
        return;
      }
      var v7687 = viz$$10.graph;
      JAM.call(v7687.eachNode, v7687, [v331], JAM.policy.p3);
      var v7688 = viz$$10.graph;
      JAM.call(v7688.eachNode, v7688, [v333], JAM.policy.p3);
      JAM.call(options$$8.onComplete, options$$8, [], JAM.policy.p3);
      return;
    }
    function v330(elem$$29) {
      var v14097 = elem$$29.id != root$$3;
      if (v14097) {
        var v22363 = elem$$29.pos;
        var v18963 = JAM.call(v22363.getp, v22363, [], JAM.policy.p3);
        v14097 = JAM.call(v18963.equals, v18963, [Polar.KER], JAM.policy.p3);
      }
      if (v14097) {
        var v7689 = elem$$29.pos;
        JAM.call(v7689.set, v7689, [elem$$29.endPos], JAM.policy.p3);
        var v7691 = elem$$29.startPos;
        JAM.call(v7691.set, v7691, [elem$$29.endPos], JAM.policy.p3);
      }
      return;
    }
    function v329(elem$$28) {
      function v328(adj$$11) {
        var v14098 = adj$$11.nodeFrom.ignore;
        if (!v14098) {
          v14098 = adj$$11.nodeTo.ignore;
        }
        if (v14098) {
          return;
        }
        var nodeFrom$$1 = JAM.call(graph$$10.getNode, graph$$10, [adj$$11.nodeFrom.id], JAM.policy.p3);
        var nodeTo$$1 = JAM.call(graph$$10.getNode, graph$$10, [adj$$11.nodeTo.id], JAM.policy.p3);
        if (!JAM.call(nodeFrom$$1.adjacentTo, nodeFrom$$1, [nodeTo$$1], JAM.policy.p3)) {
          var v7697 = viz$$10.graph;
          adj$$11 = JAM.call(v7697.getAdjacence, v7697, [nodeFrom$$1.id, nodeTo$$1.id], JAM.policy.p3);
          fadeEdges$$1 = true;
          JAM.call(adj$$11.setData, adj$$11, ["alpha", 1], JAM.policy.p3);
          JAM.call(adj$$11.setData, adj$$11, ["alpha", 1, "start"], JAM.policy.p3);
          JAM.call(adj$$11.setData, adj$$11, ["alpha", 0, "end"], JAM.policy.p3);
        }
        return;
      }
      if (elem$$28.ignore) {
        return;
      }
      JAM.call(elem$$28.eachAdjacency, elem$$28, [v328], JAM.policy.p3);
      return;
    }
    function v327(elem$$27) {
      var graphNode = JAM.call(graph$$10.getNode, graph$$10, [elem$$27.id], JAM.policy.p3);
      if (!graphNode) {
        JAM.call(elem$$27.setData, elem$$27, ["alpha", 1], JAM.policy.p3);
        JAM.call(elem$$27.setData, elem$$27, ["alpha", 1, "start"], JAM.policy.p3);
        JAM.call(elem$$27.setData, elem$$27, ["alpha", 0, "end"], JAM.policy.p3);
        elem$$27.ignore = true;
      } else {
        var graphNodeData = graphNode.data;
        var prop$$19;
        for (prop$$19 in graphNodeData) {
          var v14102 = nodeModes;
          if (v14102) {
            v14102 = JAM.call($$$1.indexOf, $$$1, [nodeModes, prop$$19], JAM.policy.p3) > -1;
          }
          if (v14102) {
            JAM.set(elem$$27.endData, prop$$19, graphNodeData[prop$$19], JAM.policy.p2);
          } else {
            JAM.set(elem$$27.data, prop$$19, graphNodeData[prop$$19], JAM.policy.p2);
          }
        }
      }
      return;
    }
    function v326(n$$15) {
      return "$" + n$$15;
    }
    function v325(elem$$26) {
      function v324(adj$$10) {
        if (!JAM.call(graph$$10.getAdjacence, graph$$10, [adj$$10.nodeFrom.id, adj$$10.nodeTo.id], JAM.policy.p3)) {
          var v7707 = viz$$10.graph;
          JAM.call(v7707.removeAdjacence, v7707, [adj$$10.nodeFrom.id, adj$$10.nodeTo.id], JAM.policy.p3);
        }
        return;
      }
      JAM.call(elem$$26.eachAdjacency, elem$$26, [v324], JAM.policy.p3);
      if (!JAM.call(graph$$10.hasNode, graph$$10, [elem$$26.id], JAM.policy.p3)) {
        var v7711 = viz$$10.graph;
        JAM.call(v7711.removeNode, v7711, [elem$$26.id], JAM.policy.p3);
      }
      return;
    }
    function v323(elem$$25) {
      function v322(adj$$9) {
        var v18972 = viz$$10.graph;
        var adjExists = !!JAM.call(v18972.getAdjacence, v18972, [adj$$9.nodeFrom.id, adj$$9.nodeTo.id], JAM.policy.p3);
        var v7715 = viz$$10.graph;
        JAM.call(v7715.addAdjacence, v7715, [adj$$9.nodeFrom, adj$$9.nodeTo, adj$$9.data], JAM.policy.p3);
        if (adjExists) {
          var v7719 = viz$$10.graph;
          var addedAdj = JAM.call(v7719.getAdjacence, v7719, [adj$$9.nodeFrom.id, adj$$9.nodeTo.id], JAM.policy.p3);
          var prop$$18;
          var v14110 = adj$$9.data;
          if (!v14110) {
            v14110 = {};
          }
          for (prop$$18 in v14110) {
            JAM.set(addedAdj.data, prop$$18, adj$$9.data[prop$$18], JAM.policy.p2);
          }
        }
        return;
      }
      var v7724 = viz$$10.graph;
      var nodeExists = JAM.call(v7724.hasNode, v7724, [elem$$25.id], JAM.policy.p3);
      JAM.call(elem$$25.eachAdjacency, elem$$25, [v322], JAM.policy.p3);
      if (nodeExists) {
        var v7726 = viz$$10.graph;
        var addedNode = JAM.call(v7726.getNode, v7726, [elem$$25.id], JAM.policy.p3);
        var prop$$17;
        var v14112 = elem$$25.data;
        if (!v14112) {
          v14112 = {};
        }
        for (prop$$17 in v14112) {
          JAM.set(addedNode.data, prop$$17, elem$$25.data[prop$$17], JAM.policy.p2);
        }
      }
      return;
    }
    extraModes = extraModes || {};
    var viz$$10 = this.viz;
    var options$$8 = JAM.call($$$1.merge, $$$1, [this.options, viz$$10.controller, opt$$13], JAM.policy.p3);
    var root$$3 = viz$$10.root;
    var graph$$10;
    var v7732 = opt$$13.id;
    if (!v7732) {
      v7732 = viz$$10.root;
    }
    viz$$10.root = v7732;
    switch(options$$8.type) {
      case "nothing":
        graph$$10 = JAM.call(viz$$10.construct, viz$$10, [json$$4], JAM.policy.p3);
        JAM.call(graph$$10.eachNode, graph$$10, [v323], JAM.policy.p3);
        var v7733 = viz$$10.graph;
        JAM.call(v7733.eachNode, v7733, [v325], JAM.policy.p3);
        break;
      case "replot":
        var v7734 = viz$$10.labels;
        JAM.call(v7734.clearLabels, v7734, [true], JAM.policy.p3);
        JAM.call(this.morph, this, [json$$4, {type:"nothing"}], JAM.policy.p3);
        JAM.call(viz$$10.refresh, viz$$10, [true], JAM.policy.p3);
        JAM.call(viz$$10.refresh, viz$$10, [true], JAM.policy.p3);
        break;
      case "fade:seq":
      ;
      case "fade":
      ;
      case "fade:con":
        that = this;
        graph$$10 = JAM.call(viz$$10.construct, viz$$10, [json$$4], JAM.policy.p3);
        var v7736 = "node-property" in extraModes;
        if (v7736) {
          v7736 = JAM.call($$$1.map, $$$1, [JAM.call($$$1.splat, $$$1, [extraModes["node-property"]], JAM.policy.p3), v326], JAM.policy.p3);
        }
        var nodeModes = v7736;
        var v7737 = viz$$10.graph;
        JAM.call(v7737.eachNode, v7737, [v327], JAM.policy.p3);
        var v7738 = viz$$10.graph;
        JAM.call(v7738.eachNode, v7738, [v329], JAM.policy.p3);
        var fadeEdges$$1 = JAM.call(this.preprocessSum, this, [graph$$10], JAM.policy.p3);
        var v7739;
        if (!fadeEdges$$1) {
          v7739 = ["node-property:alpha"];
        } else {
          v7739 = ["node-property:alpha", "edge-property:alpha"];
        }
        var modes$$1 = v7739;
        var v7740 = modes$$1;
        var v14117 = modes$$1[0];
        var v18978;
        if ("node-property" in extraModes) {
          var v26162 = JAM.call($$$1.splat, $$$1, [extraModes["node-property"]], JAM.policy.p3);
          v18978 = ":" + JAM.call(v26162.join, v26162, [":"], JAM.policy.p3);
        } else {
          v18978 = "";
        }
        v7740[0] = v14117 + v18978;
        var v7741 = modes$$1;
        var v18979 = modes$$1[1];
        if (!v18979) {
          v18979 = "edge-property:alpha";
        }
        var v14119 = v18979;
        var v18980;
        if ("edge-property" in extraModes) {
          var v26163 = JAM.call($$$1.splat, $$$1, [extraModes["edge-property"]], JAM.policy.p3);
          v18980 = ":" + JAM.call(v26163.join, v26163, [":"], JAM.policy.p3);
        } else {
          v18980 = "";
        }
        v7741[1] = v14119 + v18980;
        if ("label-property" in extraModes) {
          var v18981 = JAM.call($$$1.splat, $$$1, [extraModes["label-property"]], JAM.policy.p3);
          JAM.call(modes$$1.push, modes$$1, ["label-property:" + JAM.call(v18981.join, v18981, [":"], JAM.policy.p3)], JAM.policy.p3);
        }
        if (viz$$10.reposition) {
          JAM.call(viz$$10.reposition, viz$$10, [], JAM.policy.p3);
        } else {
          JAM.call(viz$$10.compute, viz$$10, ["end"], JAM.policy.p3);
        }
        var v7745 = viz$$10.graph;
        JAM.call(v7745.eachNode, v7745, [v330], JAM.policy.p3);
        var v7746 = viz$$10.fx;
        var v27702 = extraModes.position;
        if (!v27702) {
          v27702 = "polar";
        }
        var v22374 = [v27702];
        JAM.call(v7746.animate, v7746, [JAM.call($$$1.merge, $$$1, [options$$8, {modes:JAM.call(v22374.concat, v22374, [modes$$1], JAM.policy.p3), onComplete:v334}], JAM.policy.p3)], JAM.policy.p3);
      default:
      ;
    }
    return;
  }
  function v321(json$$3, opt$$12) {
    function v320(elem$$24) {
      var v14123 = elem$$24.id != root$$2;
      if (v14123) {
        var v18984 = elem$$24.pos;
        v14123 = JAM.call(v18984.isZero, v18984, [], JAM.policy.p3);
      }
      if (v14123) {
        var v7749 = elem$$24.pos;
        JAM.call(v7749.set, v7749, [elem$$24.endPos], JAM.policy.p3);
        var v7751 = elem$$24.startPos;
        JAM.call(v7751.set, v7751, [elem$$24.endPos], JAM.policy.p3);
      }
      return;
    }
    function v319() {
      function v318() {
        JAM.call(options$$7.onComplete, options$$7, [], JAM.policy.p3);
        return;
      }
      var v7754 = viz$$9.fx;
      JAM.call(v7754.animate, v7754, [JAM.call($$$1.merge, $$$1, [options$$7, {modes:modes, onComplete:v318}], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    function v317(elem$$23) {
      function v316(adj$$8) {
        var v7756 = viz$$9.graph;
        JAM.call(v7756.addAdjacence, v7756, [adj$$8.nodeFrom, adj$$8.nodeTo, adj$$8.data], JAM.policy.p3);
        return;
      }
      JAM.call(elem$$23.eachAdjacency, elem$$23, [v316], JAM.policy.p3);
      return;
    }
    var viz$$9 = this.viz;
    var options$$7 = JAM.call($$$1.merge, $$$1, [this.options, viz$$9.controller, opt$$12], JAM.policy.p3);
    var root$$2 = viz$$9.root;
    var graph$$9;
    var v7762 = opt$$12.id;
    if (!v7762) {
      v7762 = viz$$9.root;
    }
    viz$$9.root = v7762;
    switch(options$$7.type) {
      case "nothing":
        graph$$9 = JAM.call(viz$$9.construct, viz$$9, [json$$3], JAM.policy.p3);
        JAM.call(graph$$9.eachNode, graph$$9, [v317], JAM.policy.p3);
        break;
      case "replot":
        JAM.call(viz$$9.refresh, viz$$9, [true], JAM.policy.p3);
        JAM.call(this.sum, this, [json$$3, {type:"nothing"}], JAM.policy.p3);
        JAM.call(viz$$9.refresh, viz$$9, [true], JAM.policy.p3);
        break;
      case "fade:seq":
      ;
      case "fade":
      ;
      case "fade:con":
        that = this;
        graph$$9 = JAM.call(viz$$9.construct, viz$$9, [json$$3], JAM.policy.p3);
        var fadeEdges = JAM.call(this.preprocessSum, this, [graph$$9], JAM.policy.p3);
        var v7764;
        if (!fadeEdges) {
          v7764 = ["node-property:alpha"];
        } else {
          v7764 = ["node-property:alpha", "edge-property:alpha"];
        }
        var modes = v7764;
        JAM.call(viz$$9.reposition, viz$$9, [], JAM.policy.p3);
        if (options$$7.type != "fade:con") {
          var v7765 = viz$$9.fx;
          JAM.call(v7765.animate, v7765, [JAM.call($$$1.merge, $$$1, [options$$7, {modes:["linear"], onComplete:v319}], JAM.policy.p3)], JAM.policy.p3);
        } else {
          var v7767 = viz$$9.graph;
          JAM.call(v7767.eachNode, v7767, [v320], JAM.policy.p3);
          var v7768 = viz$$9.fx;
          var v22375 = ["linear"];
          JAM.call(v7768.animate, v7768, [JAM.call($$$1.merge, $$$1, [options$$7, {modes:JAM.call(v22375.concat, v22375, [modes], JAM.policy.p3)}], JAM.policy.p3)], JAM.policy.p3);
        }
        break;
      default:
        JAM.call(this.doError, this, [], JAM.policy.p3);
    }
    return;
  }
  function v315(vertex, opt$$11) {
    function v314() {
      JAM.call(options$$6.onComplete, options$$6, [], JAM.policy.p3);
      return;
    }
    function v313() {
      JAM.call(that$$13.removeEdge, that$$13, [JAM.call(v$$1.shift, v$$1, [], JAM.policy.p3), {type:"nothing"}], JAM.policy.p3);
      var v7774 = viz$$8.labels;
      JAM.call(v7774.clearLabels, v7774, [], JAM.policy.p3);
      return;
    }
    function v312() {
      return v$$1.length != 0;
    }
    function v311() {
      JAM.call(that$$13.removeEdge, that$$13, [v$$1, {type:"nothing"}], JAM.policy.p3);
      var v7777 = options$$6.onComplete;
      if (v7777) {
        JAM.call(options$$6.onComplete, options$$6, [], JAM.policy.p3);
      }
      return;
    }
    function v310() {
      JAM.call(that$$13.removeEdge, that$$13, [v$$1, {type:"nothing"}], JAM.policy.p3);
      JAM.call(viz$$8.reposition, viz$$8, [], JAM.policy.p3);
      var v7779 = viz$$8.fx;
      JAM.call(v7779.animate, v7779, [JAM.call($$$1.merge, $$$1, [options$$6, {modes:["linear"]}], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    var viz$$8 = this.viz;
    var options$$6 = JAM.call($$$1.merge, $$$1, [this.options, viz$$8.controller, opt$$11], JAM.policy.p3);
    var v7783;
    if (JAM.call($$$1.type, $$$1, [vertex[0]], JAM.policy.p3) == "string") {
      v7783 = [vertex];
    } else {
      v7783 = vertex;
    }
    var v$$1 = v7783;
    var i$$41;
    var that$$13;
    var adj$$7;
    switch(options$$6.type) {
      case "nothing":
        i$$41 = 0;
        var v7787 = i$$41 < v$$1.length;
        for (;v7787;) {
          var v7784 = viz$$8.graph;
          JAM.call(v7784.removeAdjacence, v7784, [v$$1[i$$41][0], v$$1[i$$41][1]], JAM.policy.p3);
          i$$41++;
          v7787 = i$$41 < v$$1.length;
        }
        break;
      case "replot":
        JAM.call(this.removeEdge, this, [v$$1, {type:"nothing"}], JAM.policy.p3);
        JAM.call(viz$$8.refresh, viz$$8, [true], JAM.policy.p3);
        break;
      case "fade:seq":
      ;
      case "fade":
        that$$13 = this;
        i$$41 = 0;
        var v7792 = i$$41 < v$$1.length;
        for (;v7792;) {
          var v7789 = viz$$8.graph;
          adj$$7 = JAM.call(v7789.getAdjacence, v7789, [v$$1[i$$41][0], v$$1[i$$41][1]], JAM.policy.p3);
          if (adj$$7) {
            JAM.call(adj$$7.setData, adj$$7, ["alpha", 0, "end"], JAM.policy.p3);
          }
          i$$41++;
          v7792 = i$$41 < v$$1.length;
        }
        var v7793 = viz$$8.fx;
        JAM.call(v7793.animate, v7793, [JAM.call($$$1.merge, $$$1, [options$$6, {modes:["edge-property:alpha"], onComplete:v310}], JAM.policy.p3)], JAM.policy.p3);
        break;
      case "fade:con":
        that$$13 = this;
        i$$41 = 0;
        var v7798 = i$$41 < v$$1.length;
        for (;v7798;) {
          var v7795 = viz$$8.graph;
          adj$$7 = JAM.call(v7795.getAdjacence, v7795, [v$$1[i$$41][0], v$$1[i$$41][1]], JAM.policy.p3);
          if (adj$$7) {
            JAM.call(adj$$7.setData, adj$$7, ["alpha", 0, "end"], JAM.policy.p3);
            adj$$7.ignore = true;
          }
          i$$41++;
          v7798 = i$$41 < v$$1.length;
        }
        JAM.call(viz$$8.reposition, viz$$8, [], JAM.policy.p3);
        var v7799 = viz$$8.fx;
        JAM.call(v7799.animate, v7799, [JAM.call($$$1.merge, $$$1, [options$$6, {modes:["edge-property:alpha", "linear"], onComplete:v311}], JAM.policy.p3)], JAM.policy.p3);
        break;
      case "iter":
        that$$13 = this;
        var v7801 = viz$$8.fx;
        JAM.call(v7801.sequence, v7801, [{condition:v312, step:v313, onComplete:v314, duration:JAM.call(Math.ceil, Math, [options$$6.duration / v$$1.length], JAM.policy.p3)}], JAM.policy.p3);
        break;
      default:
        JAM.call(this.doError, this, [], JAM.policy.p3);
    }
    return;
  }
  function v309(node$$36, opt$$10) {
    function v308() {
      var v7804 = options$$5.onComplete;
      if (v7804) {
        JAM.call(options$$5.onComplete, options$$5, [], JAM.policy.p3);
      }
      return;
    }
    function v307() {
      JAM.call(that$$12.removeNode, that$$12, [JAM.call(n$$14.shift, n$$14, [], JAM.policy.p3), {type:"nothing"}], JAM.policy.p3);
      var v7807 = viz$$7.labels;
      JAM.call(v7807.clearLabels, v7807, [], JAM.policy.p3);
      return;
    }
    function v306() {
      return n$$14.length != 0;
    }
    function v305() {
      JAM.call(that$$12.removeNode, that$$12, [n$$14, {type:"nothing"}], JAM.policy.p3);
      var v7810 = options$$5.onComplete;
      if (v7810) {
        JAM.call(options$$5.onComplete, options$$5, [], JAM.policy.p3);
      }
      return;
    }
    function v304() {
      JAM.call(that$$12.removeNode, that$$12, [n$$14, {type:"nothing"}], JAM.policy.p3);
      var v7812 = viz$$7.labels;
      JAM.call(v7812.clearLabels, v7812, [], JAM.policy.p3);
      JAM.call(viz$$7.reposition, viz$$7, [], JAM.policy.p3);
      var v7813 = viz$$7.fx;
      JAM.call(v7813.animate, v7813, [JAM.call($$$1.merge, $$$1, [options$$5, {modes:["linear"]}], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    var viz$$7 = this.viz;
    var options$$5 = JAM.call($$$1.merge, $$$1, [this.options, viz$$7.controller, opt$$10], JAM.policy.p3);
    var n$$14 = JAM.call($$$1.splat, $$$1, [node$$36], JAM.policy.p3);
    var i$$40;
    var that$$12;
    var nodeObj;
    switch(options$$5.type) {
      case "nothing":
        i$$40 = 0;
        var v7820 = i$$40 < n$$14.length;
        for (;v7820;) {
          var v14149 = viz$$7.graph;
          JAM.call(options$$5.onBeforeRemoveNode, options$$5, [JAM.call(v14149.getNode, v14149, [n$$14[i$$40]], JAM.policy.p3)], JAM.policy.p3);
          var v7818 = viz$$7.graph;
          JAM.call(v7818.removeNode, v7818, [n$$14[i$$40]], JAM.policy.p3);
          i$$40++;
          v7820 = i$$40 < n$$14.length;
        }
        break;
      case "replot":
        JAM.call(this.removeNode, this, [n$$14, {type:"nothing"}], JAM.policy.p3);
        var v7822 = viz$$7.labels;
        JAM.call(v7822.clearLabels, v7822, [], JAM.policy.p3);
        JAM.call(viz$$7.refresh, viz$$7, [true], JAM.policy.p3);
        break;
      case "fade:seq":
      ;
      case "fade":
        that$$12 = this;
        i$$40 = 0;
        var v7825 = i$$40 < n$$14.length;
        for (;v7825;) {
          var v7823 = viz$$7.graph;
          nodeObj = JAM.call(v7823.getNode, v7823, [n$$14[i$$40]], JAM.policy.p3);
          JAM.call(nodeObj.setData, nodeObj, ["alpha", 0, "end"], JAM.policy.p3);
          i$$40++;
          v7825 = i$$40 < n$$14.length;
        }
        var v7826 = viz$$7.fx;
        JAM.call(v7826.animate, v7826, [JAM.call($$$1.merge, $$$1, [options$$5, {modes:["node-property:alpha"], onComplete:v304}], JAM.policy.p3)], JAM.policy.p3);
        break;
      case "fade:con":
        that$$12 = this;
        i$$40 = 0;
        var v7830 = i$$40 < n$$14.length;
        for (;v7830;) {
          var v7828 = viz$$7.graph;
          nodeObj = JAM.call(v7828.getNode, v7828, [n$$14[i$$40]], JAM.policy.p3);
          JAM.call(nodeObj.setData, nodeObj, ["alpha", 0, "end"], JAM.policy.p3);
          nodeObj.ignore = true;
          i$$40++;
          v7830 = i$$40 < n$$14.length;
        }
        JAM.call(viz$$7.reposition, viz$$7, [], JAM.policy.p3);
        var v7831 = viz$$7.fx;
        JAM.call(v7831.animate, v7831, [JAM.call($$$1.merge, $$$1, [options$$5, {modes:["node-property:alpha", "linear"], onComplete:v305}], JAM.policy.p3)], JAM.policy.p3);
        break;
      case "iter":
        that$$12 = this;
        var v7833 = viz$$7.fx;
        JAM.call(v7833.sequence, v7833, [{condition:v306, step:v307, onComplete:v308, duration:JAM.call(Math.ceil, Math, [options$$5.duration / n$$14.length], JAM.policy.p3)}], JAM.policy.p3);
        break;
      default:
        JAM.call(this.doError, this, [], JAM.policy.p3);
    }
    return;
  }
  function v303(viz$$6) {
    this.viz = viz$$6;
    return;
  }
  function v302(m$$1) {
    function v301() {
      var v7836 = Graph.Util[m$$1];
      var v7837 = Graph.Util;
      var v14160 = [this];
      var v18996 = Array.prototype.slice;
      return JAM.call(v7836.apply, v7836, [v7837, JAM.call(v14160.concat, v14160, [JAM.call(v18996.call, v18996, [arguments], JAM.policy.p3)], JAM.policy.p3)], JAM.policy.p3);
    }
    JAM.set(Graph.Node.prototype, m$$1, v301, JAM.policy.p2);
    return;
  }
  function v300(m) {
    function v299() {
      var v7840 = Graph.Util[m];
      var v7841 = Graph.Util;
      var v14164 = [this];
      var v18997 = Array.prototype.slice;
      return JAM.call(v7840.apply, v7840, [v7841, JAM.call(v14164.concat, v14164, [JAM.call(v18997.call, v18997, [arguments], JAM.policy.p3)], JAM.policy.p3)], JAM.policy.p3);
    }
    JAM.set(Graph.prototype, m, v299, JAM.policy.p2);
    return;
  }
  function v298(graph$$8, pos$$15, prop$$16, flags$$12) {
    function v297(elem$$22) {
      var v7844;
      var v18998 = node$$35 == null;
      if (!v18998) {
        var v27703 = JAM.call(elem$$22.getPos, elem$$22, [prop$$16], JAM.policy.p3);
        var v22383 = distance(JAM.call(v27703.getc, v27703, [true], JAM.policy.p3), pos$$15);
        var v27704 = JAM.call(node$$35.getPos, node$$35, [prop$$16], JAM.policy.p3);
        v18998 = v22383 < distance(JAM.call(v27704.getc, v27704, [true], JAM.policy.p3), pos$$15);
      }
      if (v18998) {
        v7844 = elem$$22;
      } else {
        v7844 = node$$35;
      }
      node$$35 = v7844;
      return;
    }
    function distance(a$$5, b$$3) {
      var d1 = a$$5.x - b$$3.x;
      var d2 = a$$5.y - b$$3.y;
      return d1 * d1 + d2 * d2;
    }
    var node$$35 = null;
    prop$$16 = prop$$16 || "current";
    var v14167 = pos$$15;
    if (v14167) {
      v14167 = JAM.call(pos$$15.getc, pos$$15, [true], JAM.policy.p3);
    }
    var v7851 = v14167;
    if (!v7851) {
      v7851 = Complex.KER;
    }
    pos$$15 = v7851;
    JAM.call(this.eachNode, this, [graph$$8, v297, flags$$12], JAM.policy.p3);
    return node$$35;
  }
  function v296(graph$$7, prop$$15, flags$$11) {
    return JAM.call(this.getClosestNodeToPos, this, [graph$$7, Polar.KER, prop$$15, flags$$11], JAM.policy.p3);
  }
  function v295(graph$$6) {
    function v294(elem$$21) {
      elem$$21._flag = false;
      return;
    }
    JAM.call(this.eachNode, this, [graph$$6, v294], JAM.policy.p3);
    return;
  }
  function v293(node$$34, id$$19) {
    if (node$$34.id == id$$19) {
      return true;
    }
    var pars = JAM.call(this.getParents, this, [node$$34], JAM.policy.p3);
    var ans$$7 = false;
    var i$$39 = 0;
    var v14170 = !ans$$7;
    if (v14170) {
      v14170 = i$$39 < pars.length;
    }
    var v7855 = v14170;
    for (;v7855;) {
      var v7854 = ans$$7;
      if (!v7854) {
        v7854 = JAM.call(this.isDescendantOf, this, [pars[i$$39], id$$19], JAM.policy.p3);
      }
      ans$$7 = v7854;
      i$$39++;
      var v14173 = !ans$$7;
      if (v14173) {
        v14173 = i$$39 < pars.length;
      }
      v7855 = v14173;
    }
    return ans$$7;
  }
  function v292(node$$33) {
    function v291(adj$$6) {
      var n$$13 = adj$$6.nodeTo;
      if (n$$13._depth < node$$33._depth) {
        JAM.call(ans$$6.push, ans$$6, [n$$13], JAM.policy.p3);
      }
      return;
    }
    var ans$$6 = [];
    JAM.call(this.eachAdjacency, this, [node$$33, v291], JAM.policy.p3);
    return ans$$6;
  }
  function v290(node$$32, level$$8, flags$$10) {
    function v289(n$$12) {
      JAM.call(ans$$5.push, ans$$5, [n$$12], JAM.policy.p3);
      return;
    }
    var ans$$5 = [];
    var that$$11 = this;
    level$$8 = level$$8 || 0;
    var levelStart;
    var levelEnd$$2;
    if (JAM.call($$$1.type, $$$1, [level$$8], JAM.policy.p3) == "array") {
      levelStart = level$$8[0];
      levelEnd$$2 = level$$8[1];
    } else {
      levelStart = level$$8;
      levelEnd$$2 = Number.MAX_VALUE - node$$32._depth;
    }
    JAM.call(this.eachLevel, this, [node$$32, levelStart, levelEnd$$2, v289, flags$$10], JAM.policy.p3);
    return ans$$5;
  }
  function v288(node$$31, cond, flags$$9) {
    function v287(elem$$20) {
      if (JAM.call(c$$3, null, [elem$$20], JAM.policy.p3)) {
        flag$$1 = true;
      }
      return;
    }
    function v286(n$$11) {
      return n$$11[cond];
    }
    var flag$$1 = false;
    var v7861 = cond;
    if (!v7861) {
      v7861 = JAM.call($$$1.lambda, $$$1, [true], JAM.policy.p3);
    }
    cond = v7861;
    var v7862;
    if (JAM.call($$$1.type, $$$1, [cond], JAM.policy.p3) == "string") {
      v7862 = v286;
    } else {
      v7862 = cond;
    }
    var c$$3 = v7862;
    JAM.call(this.eachSubnode, this, [node$$31, v287, flags$$9], JAM.policy.p3);
    return flag$$1;
  }
  function v285(node$$30, action$$9, flags$$8) {
    JAM.call(this.eachLevel, this, [node$$30, 1, 1, action$$9, flags$$8], JAM.policy.p3);
    return;
  }
  function v284(node$$29, action$$8, flags$$7) {
    JAM.call(this.eachLevel, this, [node$$29, 0, false, action$$8, flags$$7], JAM.policy.p3);
    return;
  }
  function v283(node$$27, levelBegin, levelEnd, action$$7, flags$$6) {
    function loopLevel(node$$28, levelBegin$$1, levelEnd$$1) {
      function v282(adj$$5) {
        var n$$10 = adj$$5.nodeTo;
        if (n$$10._depth > d$$2) {
          loopLevel(n$$10, levelBegin$$1, levelEnd$$1);
        }
        return;
      }
      if (!shouldContinue) {
        return;
      }
      var d$$2 = node$$28._depth;
      var ret;
      var v19002 = d$$2 >= levelBegin$$1;
      if (v19002) {
        v19002 = d$$2 <= levelEnd$$1;
      }
      var v14180 = v19002;
      if (v14180) {
        v14180 = JAM.call(filter$$4, null, [node$$28], JAM.policy.p3);
      }
      if (v14180) {
        ret = JAM.call(action$$7, null, [node$$28, d$$2], JAM.policy.p3);
      }
      if (typeof ret !== "undefined") {
        shouldContinue = ret;
      }
      var v14182 = shouldContinue;
      if (v14182) {
        v14182 = d$$2 < levelEnd$$1;
      }
      if (v14182) {
        JAM.call(that$$10.eachAdjacency, that$$10, [node$$28, v282], JAM.policy.p3);
      }
      return;
    }
    var d$$1 = node$$27._depth;
    var filter$$4 = JAM.call(this.filter, this, [flags$$6], JAM.policy.p3);
    var that$$10 = this;
    var shouldContinue = true;
    var v7868;
    if (levelEnd === false) {
      v7868 = Number.MAX_VALUE - d$$1;
    } else {
      v7868 = levelEnd;
    }
    levelEnd = v7868;
    loopLevel(node$$27, levelBegin + d$$1, levelEnd + d$$1);
    return;
  }
  function v281(graph$$5, id$$18, action$$6, flags$$5) {
    function v280(adj$$4) {
      var n$$9 = adj$$4.nodeTo;
      var v14185 = n$$9._flag == false;
      if (v14185) {
        v14185 = JAM.call(filter$$3, null, [n$$9], JAM.policy.p3);
      }
      if (v14185) {
        n$$9._flag = true;
        JAM.call(queue$$1.unshift, queue$$1, [n$$9], JAM.policy.p3);
      }
      return;
    }
    var filter$$3 = JAM.call(this.filter, this, [flags$$5], JAM.policy.p3);
    JAM.call(this.clean, this, [graph$$5], JAM.policy.p3);
    var queue$$1 = [JAM.call(graph$$5.getNode, graph$$5, [id$$18], JAM.policy.p3)];
    var v7875 = queue$$1.length != 0;
    for (;v7875;) {
      var node$$26 = JAM.call(queue$$1.pop, queue$$1, [], JAM.policy.p3);
      if (!node$$26) {
        return;
      }
      node$$26._flag = true;
      JAM.call(action$$6, null, [node$$26, node$$26._depth], JAM.policy.p3);
      JAM.call(this.eachAdjacency, this, [node$$26, v280, flags$$5], JAM.policy.p3);
      v7875 = queue$$1.length != 0;
    }
    return;
  }
  function v279(graph$$4, id$$17, startDepth, flags$$4) {
    function v278(adj$$3) {
      var n$$8 = adj$$3.nodeTo;
      var v14188 = n$$8._flag == false;
      if (v14188) {
        v14188 = JAM.call(filter$$2, null, [n$$8], JAM.policy.p3);
      }
      if (v14188) {
        if (n$$8._depth < 0) {
          n$$8._depth = node$$25._depth + 1 + startDepth;
        }
        JAM.call(queue.unshift, queue, [n$$8], JAM.policy.p3);
      }
      return;
    }
    function v277(elem$$19) {
      elem$$19._flag = false;
      elem$$19._depth = -1;
      return;
    }
    startDepth = startDepth || 0;
    var filter$$2 = JAM.call(this.filter, this, [flags$$4], JAM.policy.p3);
    JAM.call(this.eachNode, this, [graph$$4, v277, flags$$4], JAM.policy.p3);
    var root$$1 = JAM.call(graph$$4.getNode, graph$$4, [id$$17], JAM.policy.p3);
    root$$1._depth = startDepth;
    var queue = [root$$1];
    var v7879 = queue.length != 0;
    for (;v7879;) {
      var node$$25 = JAM.call(queue.pop, queue, [], JAM.policy.p3);
      node$$25._flag = true;
      JAM.call(this.eachAdjacency, this, [node$$25, v278, flags$$4], JAM.policy.p3);
      v7879 = queue.length != 0;
    }
    return;
  }
  function v276(node$$24, action$$5, flags$$3) {
    var adj$$2 = node$$24.adjacencies;
    var filter$$1 = JAM.call(this.filter, this, [flags$$3], JAM.policy.p3);
    var id$$16;
    for (id$$16 in adj$$2) {
      var a$$4 = adj$$2[id$$16];
      if (JAM.call(filter$$1, null, [a$$4], JAM.policy.p3)) {
        if (a$$4.nodeFrom != node$$24) {
          var tmp = a$$4.nodeFrom;
          a$$4.nodeFrom = a$$4.nodeTo;
          a$$4.nodeTo = tmp;
        }
        JAM.call(action$$5, null, [a$$4, id$$16], JAM.policy.p3);
      }
    }
    return;
  }
  function v275(graph$$3, action$$4, flags$$2) {
    JAM.call(this.eachNode, this, [graph$$3, action$$4, flags$$2], JAM.policy.p3);
    return;
  }
  function v274(graph$$2, action$$3, flags$$1) {
    var filter = JAM.call(this.filter, this, [flags$$1], JAM.policy.p3);
    var i$$38;
    for (i$$38 in graph$$2.nodes) {
      if (JAM.call(filter, null, [graph$$2.nodes[i$$38]], JAM.policy.p3)) {
        JAM.call(action$$3, null, [graph$$2.nodes[i$$38]], JAM.policy.p3);
      }
    }
    return;
  }
  function v273(graph$$1, id$$15) {
    return graph$$1.nodes[id$$15];
  }
  function v272(param$$3) {
    function v271(elem$$18) {
      var i$$37 = 0;
      var v7887 = i$$37 < props$$3.length;
      for (;v7887;) {
        if (elem$$18[props$$3[i$$37]]) {
          return false;
        }
        i$$37++;
        v7887 = i$$37 < props$$3.length;
      }
      return true;
    }
    function v270() {
      return true;
    }
    var v14199 = !param$$3;
    if (!v14199) {
      v14199 = !(JAM.call($$$1.type, $$$1, [param$$3], JAM.policy.p3) == "string");
    }
    if (v14199) {
      return v270;
    }
    var props$$3 = JAM.call(param$$3.split, param$$3, [" "], JAM.policy.p3);
    return v271;
  }
  function v269(nodeFrom, nodeTo, data$$21, Edge$$2, Label$$2) {
    this.nodeFrom = nodeFrom;
    this.nodeTo = nodeTo;
    this.data = data$$21 || {};
    this.startData = {};
    this.endData = {};
    this.Config = this.Edge = Edge$$2;
    this.Label = Label$$2;
    return;
  }
  function v268(value$$38, type$$47) {
    type$$47 = type$$47 || "current";
    var pos$$14;
    if (type$$47 == "current") {
      pos$$14 = this.pos;
    } else {
      if (type$$47 == "end") {
        pos$$14 = this.endPos;
      } else {
        if (type$$47 == "start") {
          pos$$14 = this.startPos;
        }
      }
    }
    JAM.call(pos$$14.set, pos$$14, [value$$38], JAM.policy.p3);
    return;
  }
  function v267(type$$46) {
    type$$46 = type$$46 || "current";
    if (type$$46 == "current") {
      return this.pos;
    } else {
      if (type$$46 == "end") {
        return this.endPos;
      } else {
        if (type$$46 == "start") {
          return this.startPos;
        }
      }
    }
    return;
  }
  function v266(id$$14) {
    return this.adjacencies[id$$14];
  }
  function v265(node$$23) {
    return node$$23.id in this.adjacencies;
  }
  function v264(opt$$9, klass$$5, Node$$2, Edge$$1, Label$$1) {
    var innerOptions$$1 = {"id":"", "name":"", "data":{}, "startData":{}, "endData":{}, "adjacencies":{}, "selected":false, "drawn":false, "exist":false, "angleSpan":{"begin":0, "end":0}, "pos":new klass$$5, "startPos":new klass$$5, "endPos":new klass$$5};
    JAM.call($$$1.extend, $$$1, [this, JAM.call($$$1.extend, $$$1, [innerOptions$$1, opt$$9], JAM.policy.p3)], JAM.policy.p3);
    this.Config = this.Node = Node$$2;
    this.Edge = Edge$$1;
    this.Label = Label$$1;
    return;
  }
  function v263() {
    function v262() {
      var v14200 = Array.prototype.slice;
      JAM.call(removeDataInternal.call, removeDataInternal, [this, "label", JAM.call(v14200.call, v14200, [arguments], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    function v261(types$$2, obj$$29) {
      types$$2 = JAM.call($$$1.splat, $$$1, [types$$2], JAM.policy.p3);
      var attr$$2;
      for (attr$$2 in obj$$29) {
        var i$$36 = 0;
        var val$$4 = JAM.call($$$1.splat, $$$1, [obj$$29[attr$$2]], JAM.policy.p3);
        var l$$14 = types$$2.length;
        var v7907 = i$$36 < l$$14;
        for (;v7907;) {
          JAM.call(this.setLabelData, this, [attr$$2, val$$4[i$$36], types$$2[i$$36]], JAM.policy.p3);
          i$$36++;
          v7907 = i$$36 < l$$14;
        }
      }
      return;
    }
    function v260(prop$$14, value$$37, type$$45) {
      JAM.call(setDataInternal.call, setDataInternal, [this, "label", prop$$14, value$$37, type$$45], JAM.policy.p3);
      return;
    }
    function v259(prop$$13, type$$44, force$$4) {
      return JAM.call(getDataInternal.call, getDataInternal, [this, "label", prop$$13, type$$44, force$$4, this.Label], JAM.policy.p3);
    }
    function v258() {
      var v14201 = Array.prototype.slice;
      JAM.call(removeDataInternal.call, removeDataInternal, [this, "canvas", JAM.call(v14201.call, v14201, [arguments], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    function v257(types$$1, obj$$28) {
      types$$1 = JAM.call($$$1.splat, $$$1, [types$$1], JAM.policy.p3);
      var attr$$1;
      for (attr$$1 in obj$$28) {
        var i$$35 = 0;
        var val$$3 = JAM.call($$$1.splat, $$$1, [obj$$28[attr$$1]], JAM.policy.p3);
        var l$$13 = types$$1.length;
        var v7913 = i$$35 < l$$13;
        for (;v7913;) {
          JAM.call(this.setCanvasStyle, this, [attr$$1, val$$3[i$$35], types$$1[i$$35]], JAM.policy.p3);
          i$$35++;
          v7913 = i$$35 < l$$13;
        }
      }
      return;
    }
    function v256(prop$$12, value$$36, type$$43) {
      JAM.call(setDataInternal.call, setDataInternal, [this, "canvas", prop$$12, value$$36, type$$43], JAM.policy.p3);
      return;
    }
    function v255(prop$$11, type$$42, force$$3) {
      return JAM.call(getDataInternal.call, getDataInternal, [this, "canvas", prop$$11, type$$42, force$$3, this.Config.CanvasStyles], JAM.policy.p3);
    }
    function v254() {
      var v14203 = Array.prototype.slice;
      JAM.call(removeDataInternal.call, removeDataInternal, [this, "", JAM.call(v14203.call, v14203, [arguments], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    function v253(types, obj$$27) {
      types = JAM.call($$$1.splat, $$$1, [types], JAM.policy.p3);
      var attr;
      for (attr in obj$$27) {
        var i$$34 = 0;
        var val$$2 = JAM.call($$$1.splat, $$$1, [obj$$27[attr]], JAM.policy.p3);
        var l$$12 = types.length;
        var v7919 = i$$34 < l$$12;
        for (;v7919;) {
          JAM.call(this.setData, this, [attr, val$$2[i$$34], types[i$$34]], JAM.policy.p3);
          i$$34++;
          v7919 = i$$34 < l$$12;
        }
      }
      return;
    }
    function v252(prop$$10, value$$35, type$$41) {
      JAM.call(setDataInternal.call, setDataInternal, [this, "", prop$$10, value$$35, type$$41], JAM.policy.p3);
      return;
    }
    function v251(prop$$9, type$$40, force$$2) {
      return JAM.call(getDataInternal.call, getDataInternal, [this, "", prop$$9, type$$40, force$$2, this.Config], JAM.policy.p3);
    }
    function removeDataInternal(prefix$$4, properties$$3) {
      function v250(prop$$8) {
        var pref = prefix$$4 + prop$$8;
        delete that$$9.data[pref];
        delete that$$9.endData[pref];
        delete that$$9.startData[pref];
        return;
      }
      var v14204;
      if (prefix$$4) {
        v14204 = prefix$$4 + "-";
      } else {
        v14204 = "";
      }
      prefix$$4 = "$" + v14204;
      var that$$9 = this;
      JAM.call($$$1.each, $$$1, [properties$$3, v250], JAM.policy.p3);
      return;
    }
    function setDataInternal(prefix$$3, prop$$7, value$$34, type$$39) {
      type$$39 = type$$39 || "current";
      var v14205;
      if (prefix$$3) {
        v14205 = prefix$$3 + "-";
      } else {
        v14205 = "";
      }
      prefix$$3 = "$" + v14205;
      var data$$20;
      if (type$$39 == "current") {
        data$$20 = this.data;
      } else {
        if (type$$39 == "start") {
          data$$20 = this.startData;
        } else {
          if (type$$39 == "end") {
            data$$20 = this.endData;
          }
        }
      }
      JAM.set(data$$20, prefix$$3 + prop$$7, value$$34, JAM.policy.p2);
      return;
    }
    function getDataInternal(prefix$$2, prop$$6, type$$38, force$$1, prefixConfig) {
      var data$$19;
      type$$38 = type$$38 || "current";
      var v14206;
      if (prefix$$2) {
        v14206 = prefix$$2 + "-";
      } else {
        v14206 = "";
      }
      prefix$$2 = "$" + v14206;
      if (type$$38 == "current") {
        data$$19 = this.data;
      } else {
        if (type$$38 == "start") {
          data$$19 = this.startData;
        } else {
          if (type$$38 == "end") {
            data$$19 = this.endData;
          }
        }
      }
      var dollar = prefix$$2 + prop$$6;
      if (force$$1) {
        return data$$19[dollar];
      }
      if (!this.Config.overridable) {
        var v7934 = prefixConfig[prop$$6];
        if (!v7934) {
          v7934 = 0;
        }
        return v7934;
      }
      var v7936;
      if (dollar in data$$19) {
        v7936 = data$$19[dollar];
      } else {
        var v14209;
        if (dollar in this.data) {
          v14209 = this.data[dollar];
        } else {
          var v19013 = prefixConfig[prop$$6];
          if (!v19013) {
            v19013 = 0;
          }
          v14209 = v19013;
        }
        v7936 = v14209;
      }
      return v7936;
    }
    Accessors = {getData:v251, setData:v252, setDataset:v253, removeData:v254, getCanvasStyle:v255, setCanvasStyle:v256, setCanvasStyles:v257, removeCanvasStyle:v258, getLabelData:v259, setLabelData:v260, setLabelDataset:v261, removeLabelData:v262};
    return;
  }
  function v249() {
    this.nodes = {};
    this.edges = {};
    return;
  }
  function v248(id$$13) {
    return id$$13 in this.nodes;
  }
  function v247(id1, id2$$1) {
    delete this.edges[id1][id2$$1];
    delete this.edges[id2$$1][id1];
    return;
  }
  function v246(id$$12) {
    if (JAM.call(this.hasNode, this, [id$$12], JAM.policy.p3)) {
      delete this.nodes[id$$12];
      var adjs = this.edges[id$$12];
      var to;
      for (to in adjs) {
        delete this.edges[to][id$$12];
      }
      delete this.edges[id$$12];
    }
    return;
  }
  function v245(obj$$26, obj2, data$$18) {
    if (!JAM.call(this.hasNode, this, [obj$$26.id], JAM.policy.p3)) {
      JAM.call(this.addNode, this, [obj$$26], JAM.policy.p3);
    }
    if (!JAM.call(this.hasNode, this, [obj2.id], JAM.policy.p3)) {
      JAM.call(this.addNode, this, [obj2], JAM.policy.p3);
    }
    obj$$26 = this.nodes[obj$$26.id];
    obj2 = this.nodes[obj2.id];
    if (!JAM.call(obj$$26.adjacentTo, obj$$26, [obj2], JAM.policy.p3)) {
      var v7951 = this.edges;
      var v7952 = obj$$26.id;
      var v14217 = this.edges[obj$$26.id];
      if (!v14217) {
        v14217 = {};
      }
      var adjsObj = JAM.set(v7951, v7952, v14217, JAM.policy.p2);
      var v7953 = this.edges;
      var v7954 = obj2.id;
      var v14218 = this.edges[obj2.id];
      if (!v14218) {
        v14218 = {};
      }
      var adjsObj2 = JAM.set(v7953, v7954, v14218, JAM.policy.p2);
      var v7955 = obj2.id;
      var v14219 = obj$$26.id;
      var v31188 = JAM.new(Graph.Adjacence, [obj$$26, obj2, data$$18, this.Edge, this.Label]);
      JAM.set(adjsObj, v7955, JAM.set(adjsObj2, v14219, v31188, JAM.policy.p2), JAM.policy.p2);
      return adjsObj[obj2.id];
    }
    return this.edges[obj$$26.id][obj2.id];
  }
  function v244(obj$$25) {
    if (!this.nodes[obj$$25.id]) {
      var edges = JAM.set(this.edges, obj$$25.id, {}, JAM.policy.p2);
      var v7962 = this.nodes;
      var v7963 = obj$$25.id;
      var v14223 = Graph.Node;
      var v22389 = obj$$25.id;
      var v22390 = obj$$25.name;
      var v27705 = obj$$25.data;
      if (!v27705) {
        v27705 = {};
      }
      var v31189 = JAM.new(v14223, [JAM.call($$$1.extend, $$$1, [{"id":v22389, "name":v22390, "data":JAM.call($$$1.merge, $$$1, [v27705, {}], JAM.policy.p3), "adjacencies":edges}, this.opt.Node], JAM.policy.p3), this.opt.klass, this.Node, this.Edge, this.Label]);
      JAM.set(v7962, v7963, v31189, JAM.policy.p2);
    }
    return this.nodes[obj$$25.id];
  }
  function v243(id$$11, id2) {
    if (id$$11 in this.edges) {
      return this.edges[id$$11][id2];
    }
    return false;
  }
  function v242(name$$36) {
    var id$$10;
    for (id$$10 in this.nodes) {
      var n$$7 = this.nodes[id$$10];
      if (n$$7.name == name$$36) {
        return n$$7;
      }
    }
    return false;
  }
  function v241(id$$9) {
    return JAM.call(this.getNode, this, [id$$9], JAM.policy.p3);
  }
  function v240(id$$8) {
    if (JAM.call(this.hasNode, this, [id$$8], JAM.policy.p3)) {
      return this.nodes[id$$8];
    }
    return false;
  }
  function v239(opt$$8, Node$$1, Edge, Label) {
    function v238(p$$14) {
      function v237() {
        function v236(n$$6) {
          var v7974 = n$$6[p$$14];
          JAM.call(v7974.apply, v7974, [n$$6, args$$2], JAM.policy.p3);
          return;
        }
        var v7975 = Array.prototype.slice;
        var args$$2 = JAM.call(v7975.call, v7975, [arguments], JAM.policy.p3);
        JAM.call(that$$8.eachNode, that$$8, [v236], JAM.policy.p3);
        return;
      }
      return v237;
    }
    var innerOptions = {"klass":Complex, "Node":{}};
    this.Node = Node$$1;
    this.Edge = Edge;
    this.Label = Label;
    var v31190 = JAM.call($$$1.merge, $$$1, [innerOptions, opt$$8 || {}], JAM.policy.p3);
    this.opt = v31190;
    this.nodes = {};
    this.edges = {};
    var that$$8 = this;
    this.nodeList = {};
    var p$$13;
    for (p$$13 in Accessors) {
      var v7977 = that$$8.nodeList;
      var v7978 = p$$13;
      var v31191 = v238(p$$13);
      JAM.set(v7977, v7978, v31191, JAM.policy.p2);
    }
    return;
  }
  function v235() {
    var almostZero$$1 = 1E-4;
    var abs$$1 = Math.abs;
    var v7979 = JAM.call(abs$$1, null, [this.x], JAM.policy.p3) < almostZero$$1;
    if (v7979) {
      v7979 = JAM.call(abs$$1, null, [this.y], JAM.policy.p3) < almostZero$$1;
    }
    return v7979;
  }
  function v234(pos$$13) {
    var x$$63 = this.x;
    var y$$44 = this.y;
    var sq = JAM.call(pos$$13.squaredNorm, pos$$13, [], JAM.policy.p3);
    this.x = x$$63 * pos$$13.x + y$$44 * pos$$13.y;
    this.y = y$$44 * pos$$13.x - x$$63 * pos$$13.y;
    return JAM.call(this.$scale, this, [1 / sq], JAM.policy.p3);
  }
  function v233(factor$$2) {
    this.x = this.x * factor$$2;
    this.y = this.y * factor$$2;
    return this;
  }
  function v232() {
    this.y = -this.y;
    return this;
  }
  function v231(pos$$12) {
    var x$$62 = this.x;
    var y$$43 = this.y;
    this.x = x$$62 * pos$$12.x - y$$43 * pos$$12.y;
    this.y = y$$43 * pos$$12.x + x$$62 * pos$$12.y;
    return this;
  }
  function v230(pos$$11) {
    this.x = this.x + pos$$11.x;
    this.y = this.y + pos$$11.y;
    return this;
  }
  function v229(c$$2) {
    var v7990 = this.x == c$$2.x;
    if (v7990) {
      v7990 = this.y == c$$2.y;
    }
    return v7990;
  }
  function v228(factor$$1) {
    return new Complex(this.x * factor$$1, this.y * factor$$1);
  }
  function v227() {
    return new Complex(this.x, -this.y);
  }
  function v226(pos$$10) {
    return new Complex(this.x * pos$$10.x - this.y * pos$$10.y, this.y * pos$$10.x + this.x * pos$$10.y);
  }
  function v225(pos$$9) {
    return new Complex(this.x + pos$$9.x, this.y + pos$$9.y);
  }
  function v224() {
    return this.x * this.x + this.y * this.y;
  }
  function v223() {
    return JAM.call(Math.sqrt, Math, [JAM.call(this.squaredNorm, this, [], JAM.policy.p3)], JAM.policy.p3);
  }
  function v222(simple$$3) {
    var rho$$4 = JAM.call(this.norm, this, [], JAM.policy.p3);
    var atan = JAM.call(Math.atan2, Math, [this.y, this.x], JAM.policy.p3);
    if (atan < 0) {
      atan = atan + Math.PI * 2;
    }
    if (simple$$3) {
      return{"theta":atan, "rho":rho$$4};
    }
    return new Polar(atan, rho$$4);
  }
  function v221() {
    return new Complex(this.x, this.y);
  }
  function v220(theta$$2, rho$$3) {
    this.x = JAM.call(Math.cos, Math, [theta$$2], JAM.policy.p3) * rho$$3;
    this.y = JAM.call(Math.sin, Math, [theta$$2], JAM.policy.p3) * rho$$3;
    return;
  }
  function v219(x$$61, y$$42) {
    this.x = x$$61;
    this.y = y$$42;
    return;
  }
  function v218(c$$1) {
    c$$1 = JAM.call(c$$1.getc, c$$1, [true], JAM.policy.p3);
    this.x = c$$1.x;
    this.y = c$$1.y;
    return;
  }
  function v217(simple$$2) {
    return JAM.call(this.toPolar, this, [simple$$2], JAM.policy.p3);
  }
  function v216() {
    return this;
  }
  function v215(elem$$17, delta$$3) {
    function ch$$5(t$$1) {
      var v8009;
      if (t$$1 < 0) {
        v8009 = t$$1 % pi2 + pi2;
      } else {
        v8009 = t$$1 % pi2;
      }
      var a$$1 = v8009;
      return a$$1;
    }
    var pi = Math.PI;
    var pi2 = pi * 2;
    var tt = this.theta;
    var et = elem$$17.theta;
    var sum;
    var diff = JAM.call(Math.abs, Math, [tt - et], JAM.policy.p3);
    if (diff == pi) {
      if (tt > et) {
        sum = ch$$5(et + (tt - pi2 - et) * delta$$3);
      } else {
        sum = ch$$5(et - pi2 + (tt - et) * delta$$3);
      }
    } else {
      if (diff >= pi) {
        if (tt > et) {
          sum = ch$$5(et + (tt - pi2 - et) * delta$$3);
        } else {
          sum = ch$$5(et - pi2 + (tt - (et - pi2)) * delta$$3);
        }
      } else {
        sum = ch$$5(et + (tt - et) * delta$$3);
      }
    }
    var r = (this.rho - elem$$17.rho) * delta$$3 + elem$$17.rho;
    return{"theta":sum, "rho":r};
  }
  function v214() {
    var almostZero = 1E-4;
    var abs = Math.abs;
    var v8022 = JAM.call(abs, null, [this.theta], JAM.policy.p3) < almostZero;
    if (v8022) {
      v8022 = JAM.call(abs, null, [this.rho], JAM.policy.p3) < almostZero;
    }
    return v8022;
  }
  function v213(number$$1) {
    this.rho = this.rho * number$$1;
    return this;
  }
  function v212(polar$$2) {
    this.theta = (this.theta + polar$$2.theta) % (Math.PI * 2);
    this.rho = this.rho + polar$$2.rho;
    return this;
  }
  function v211(polar$$1) {
    this.theta = this.theta + polar$$1.theta;
    this.rho = this.rho + polar$$1.rho;
    return this;
  }
  function v210(c) {
    var v8027 = this.theta == c.theta;
    if (v8027) {
      v8027 = this.rho == c.rho;
    }
    return v8027;
  }
  function v209(number) {
    return new Polar(this.theta, this.rho * number);
  }
  function v208(polar) {
    return new Polar(this.theta + polar.theta, this.rho + polar.rho);
  }
  function v207(simple$$1) {
    var x$$59 = JAM.call(Math.cos, Math, [this.theta], JAM.policy.p3) * this.rho;
    var y$$40 = JAM.call(Math.sin, Math, [this.theta], JAM.policy.p3) * this.rho;
    if (simple$$1) {
      return{"x":x$$59, "y":y$$40};
    }
    return new Complex(x$$59, y$$40);
  }
  function v206() {
    return new Polar(this.theta, this.rho);
  }
  function v205(theta$$1, rho$$2) {
    this.theta = theta$$1;
    this.rho = rho$$2;
    return;
  }
  function v204(x$$58, y$$39) {
    var v31192 = JAM.call(Math.sqrt, Math, [x$$58 * x$$58 + y$$39 * y$$39], JAM.policy.p3);
    this.rho = v31192;
    var v31193 = JAM.call(Math.atan2, Math, [y$$39, x$$58], JAM.policy.p3);
    this.theta = v31193;
    if (this.theta < 0) {
      this.theta = this.theta + Math.PI * 2;
    }
    return;
  }
  function v203(v) {
    v = JAM.call(v.getp, v, [], JAM.policy.p3);
    this.theta = v.theta;
    this.rho = v.rho;
    return;
  }
  function v202() {
    return this;
  }
  function v201(simple) {
    return JAM.call(this.toComplex, this, [simple], JAM.policy.p3);
  }
  function v200() {
    function v199(base$$3) {
      var canvas$$7 = base$$3.canvas;
      var ctx$$2 = JAM.call(base$$3.getCtx, base$$3, [], JAM.policy.p3);
      var conf = this.config;
      var styles$$1 = conf.CanvasStyles;
      var s$$6;
      for (s$$6 in styles$$1) {
        JAM.set(ctx$$2, s$$6, styles$$1[s$$6], JAM.policy.p2);
      }
      var n$$5 = conf.numberOfCircles;
      var rho = conf.levelDistance;
      var i$$33 = 1;
      var v8042 = i$$33 <= n$$5;
      for (;v8042;) {
        JAM.call(ctx$$2.beginPath, ctx$$2, [], JAM.policy.p3);
        JAM.call(ctx$$2.arc, ctx$$2, [0, 0, rho * i$$33, 0, 2 * Math.PI, false], JAM.policy.p3);
        JAM.call(ctx$$2.stroke, ctx$$2, [], JAM.policy.p3);
        JAM.call(ctx$$2.closePath, ctx$$2, [], JAM.policy.p3);
        i$$33++;
        v8042 = i$$33 <= n$$5;
      }
      return;
    }
    function v198(width$$15, height$$14, base$$2) {
      JAM.call(this.plot, this, [base$$2], JAM.policy.p3);
      return;
    }
    function v197(viz$$5, options$$4) {
      this.viz = viz$$5;
      var v31194 = JAM.call($$$1.merge, $$$1, [{idSuffix:"-bkcanvas", levelDistance:100, numberOfCircles:6, CanvasStyles:{}, offset:0}, options$$4], JAM.policy.p3);
      this.config = v31194;
      return;
    }
    function v196() {
      JAM.call(this.clear, this, [], JAM.policy.p3);
      var v8044 = this.viz;
      JAM.call(v8044.plot, v8044, [this], JAM.policy.p3);
      return;
    }
    function v195() {
      var size$$6 = JAM.call(this.getSize, this, [], JAM.policy.p3);
      var ox$$3 = this.translateOffsetX;
      var oy$$4 = this.translateOffsetY;
      var sx$$5 = this.scaleOffsetX;
      var sy$$5 = this.scaleOffsetY;
      var x$$57 = (0 - ox$$3) * 1 / sx$$5;
      var y$$38 = (0 - oy$$4) * 1 / sy$$5;
      var v8047 = JAM.call(this.getCtx, this, [], JAM.policy.p3);
      JAM.call(v8047.clearRect, v8047, [x$$57, y$$38, size$$6.width * 1 / sx$$5 + JAM.call(Math.abs, Math, [x$$57], JAM.policy.p3), size$$6.height * 1 / sy$$5 + JAM.call(Math.abs, Math, [y$$38], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    function v194(x$$56, y$$37, disablePlot$$4) {
      this.scaleOffsetX = this.scaleOffsetX * x$$56;
      this.scaleOffsetY = this.scaleOffsetY * y$$37;
      var v8050 = JAM.call(this.getCtx, this, [], JAM.policy.p3);
      JAM.call(v8050.scale, v8050, [x$$56, y$$37], JAM.policy.p3);
      var v8051 = !disablePlot$$4;
      if (v8051) {
        JAM.call(this.plot, this, [], JAM.policy.p3);
      }
      return;
    }
    function v193(x$$55, y$$36, disablePlot$$3) {
      var sx$$4 = this.scaleOffsetX;
      var sy$$4 = this.scaleOffsetY;
      this.translateOffsetX = this.translateOffsetX + x$$55 * sx$$4;
      this.translateOffsetY = this.translateOffsetY + y$$36 * sy$$4;
      var v8052 = JAM.call(this.getCtx, this, [], JAM.policy.p3);
      JAM.call(v8052.translate, v8052, [x$$55, y$$36], JAM.policy.p3);
      var v8053 = !disablePlot$$3;
      if (v8053) {
        JAM.call(this.plot, this, [], JAM.policy.p3);
      }
      return;
    }
    function v192(width$$14, height$$13) {
      var size$$5 = JAM.call(this.getSize, this, [], JAM.policy.p3);
      var canvas$$6 = this.canvas;
      var styles = canvas$$6.style;
      this.size = false;
      canvas$$6.width = width$$14;
      canvas$$6.height = height$$13;
      styles.width = width$$14 + "px";
      styles.height = height$$13 + "px";
      if (!supportsCanvas) {
        JAM.call(this.translateToCenter, this, [size$$5], JAM.policy.p3);
      } else {
        JAM.call(this.translateToCenter, this, [], JAM.policy.p3);
      }
      this.translateOffsetX = this.translateOffsetY = 0;
      this.scaleOffsetX = this.scaleOffsetY = 1;
      JAM.call(this.clear, this, [], JAM.policy.p3);
      var v8055 = this.viz;
      JAM.call(v8055.resize, v8055, [width$$14, height$$13, this], JAM.policy.p3);
      return;
    }
    function v191(ps) {
      var size$$4 = JAM.call(this.getSize, this, [], JAM.policy.p3);
      var v8056;
      if (ps) {
        v8056 = size$$4.width - ps.width - this.translateOffsetX * 2;
      } else {
        v8056 = size$$4.width;
      }
      var width$$13 = v8056;
      var v8057;
      if (ps) {
        v8057 = size$$4.height - ps.height - this.translateOffsetY * 2;
      } else {
        v8057 = size$$4.height;
      }
      height = v8057;
      var ctx$$1 = JAM.call(this.getCtx, this, [], JAM.policy.p3);
      if (ps) {
        JAM.call(ctx$$1.scale, ctx$$1, [1 / this.scaleOffsetX, 1 / this.scaleOffsetY], JAM.policy.p3);
      }
      return;
    }
    function v190() {
      if (this.size) {
        return this.size;
      }
      var canvas$$5 = this.canvas;
      return this.size = {width:canvas$$5.width, height:canvas$$5.height};
    }
    function v189() {
      if (!this.ctx) {
        var v8061 = this.canvas;
        var v31195 = JAM.call(v8061.getContext, v8061, ["2d"], JAM.policy.p3);
        return this.ctx = v31195;
      }
      return this.ctx;
    }
    function v188() {
      var opt$$7 = this.opt;
      var width$$12 = opt$$7.width;
      var height$$12 = opt$$7.height;
      var v31196 = $E$$1("canvas", {"id":opt$$7.injectInto + opt$$7.idSuffix, "width":width$$12, "height":height$$12, "style":{"position":"absolute", "top":0, "left":0, "width":width$$12 + "px", "height":height$$12 + "px"}});
      this.canvas = v31196;
      return;
    }
    function v187(viz$$4) {
      this.viz = viz$$4;
      this.opt = viz$$4.config;
      this.size = false;
      JAM.call(this.createCanvas, this, [], JAM.policy.p3);
      JAM.call(this.translateToCenter, this, [], JAM.policy.p3);
      return;
    }
    function v186(type$$37, idLabel$$1, dim) {
      var NS = "http://www.w3.org/2000/svg";
      var v14327 = type$$37 == "HTML";
      if (!v14327) {
        v14327 = type$$37 == "Native";
      }
      if (v14327) {
        return $E$$1("div", {"id":idLabel$$1, "style":{"overflow":"visible", "position":"absolute", "top":0, "left":0, "width":dim.width + "px", "height":0}});
      } else {
        if (type$$37 == "SVG") {
          var svgContainer = JAM.call(document.createElementNS, document, [NS, "svg:svg"], JAM.policy.p3);
          JAM.call(svgContainer.setAttribute, svgContainer, ["width", dim.width], JAM.policy.p3);
          JAM.call(svgContainer.setAttribute, svgContainer, ["height", dim.height], JAM.policy.p3);
          var style$$4 = svgContainer.style;
          style$$4.position = "absolute";
          style$$4.left = style$$4.top = "0px";
          var labelContainer$$1 = JAM.call(document.createElementNS, document, [NS, "svg:g"], JAM.policy.p3);
          JAM.call(labelContainer$$1.setAttribute, labelContainer$$1, ["width", dim.width], JAM.policy.p3);
          JAM.call(labelContainer$$1.setAttribute, labelContainer$$1, ["height", dim.height], JAM.policy.p3);
          JAM.call(labelContainer$$1.setAttribute, labelContainer$$1, ["x", 0], JAM.policy.p3);
          JAM.call(labelContainer$$1.setAttribute, labelContainer$$1, ["y", 0], JAM.policy.p3);
          JAM.call(labelContainer$$1.setAttribute, labelContainer$$1, ["id", idLabel$$1], JAM.policy.p3);
          JAM.call(svgContainer.appendChild, svgContainer, [labelContainer$$1], JAM.policy.p3);
          return svgContainer;
        }
      }
      return;
    }
    function v185(type$$36, action$$2) {
      var v8071 = this.canvases[0];
      var ctx = JAM.call(v8071.getCtx, v8071, [], JAM.policy.p3);
      JAM.call(ctx.beginPath, ctx, [], JAM.policy.p3);
      JAM.call(action$$2, null, [ctx], JAM.policy.p3);
      JAM.call(ctx[type$$36], ctx, [], JAM.policy.p3);
      JAM.call(ctx.closePath, ctx, [], JAM.policy.p3);
      return;
    }
    function v184(i$$32) {
      var v8072 = this.canvases[i$$32 || 0];
      JAM.call(v8072.clear, v8072, [], JAM.policy.p3);
      return;
    }
    function v183(force) {
      var v14332 = force;
      if (!v14332) {
        v14332 = !this.pos;
      }
      if (v14332) {
        var v31197 = JAM.call($$$1.getPos, $$$1, [this.element], JAM.policy.p3);
        return this.pos = v31197;
      }
      return this.pos;
    }
    function v182(x$$54, y$$35, disablePlot$$2) {
      var cur = JAM.call(this.getZoom, this, [], JAM.policy.p3);
      var px$$1 = x$$54 / cur.x;
      var py$$1 = y$$35 / cur.y;
      JAM.call(this.scale, this, [px$$1, py$$1, disablePlot$$2], JAM.policy.p3);
      return;
    }
    function v181() {
      return new Complex(this.scaleOffsetX, this.scaleOffsetY);
    }
    function v180(x$$53, y$$34, disablePlot$$1) {
      var px = this.scaleOffsetX * x$$53;
      var py = this.scaleOffsetY * y$$34;
      var dx$$4 = this.translateOffsetX * (x$$53 - 1) / px;
      var dy$$4 = this.translateOffsetY * (y$$34 - 1) / py;
      this.scaleOffsetX = px;
      this.scaleOffsetY = py;
      var i$$31 = 0;
      var l$$11 = this.canvases.length;
      var v8085 = i$$31 < l$$11;
      for (;v8085;) {
        var v8084 = this.canvases[i$$31];
        JAM.call(v8084.scale, v8084, [x$$53, y$$34, true], JAM.policy.p3);
        i$$31++;
        v8085 = i$$31 < l$$11;
      }
      JAM.call(this.translate, this, [dx$$4, dy$$4, false], JAM.policy.p3);
      return;
    }
    function v179(x$$52, y$$33, disablePlot) {
      this.translateOffsetX = this.translateOffsetX + x$$52 * this.scaleOffsetX;
      this.translateOffsetY = this.translateOffsetY + y$$33 * this.scaleOffsetY;
      var i$$30 = 0;
      var l$$10 = this.canvases.length;
      var v8088 = i$$30 < l$$10;
      for (;v8088;) {
        var v8087 = this.canvases[i$$30];
        JAM.call(v8087.translate, v8087, [x$$52, y$$33, disablePlot], JAM.policy.p3);
        i$$30++;
        v8088 = i$$30 < l$$10;
      }
      return;
    }
    function v178(width$$11, height$$11) {
      JAM.call(this.getPos, this, [true], JAM.policy.p3);
      this.translateOffsetX = this.translateOffsetY = 0;
      this.scaleOffsetX = this.scaleOffsetY = 1;
      var i$$29 = 0;
      var l$$9 = this.canvases.length;
      var v8091 = i$$29 < l$$9;
      for (;v8091;) {
        var v8090 = this.canvases[i$$29];
        JAM.call(v8090.resize, v8090, [width$$11, height$$11], JAM.policy.p3);
        i$$29++;
        v8091 = i$$29 < l$$9;
      }
      var style$$3 = this.element.style;
      style$$3.width = width$$11 + "px";
      style$$3.height = height$$11 + "px";
      if (this.labelContainer) {
        this.labelContainer.style.width = width$$11 + "px";
      }
      return;
    }
    function v177(i$$28) {
      var v8095 = this.canvases[i$$28 || 0];
      return JAM.call(v8095.getSize, v8095, [], JAM.policy.p3);
    }
    function v176() {
      return this.element;
    }
    function v175() {
      return this.opt;
    }
    function v174(i$$27) {
      var v8096 = this.canvases[i$$27 || 0];
      return JAM.call(v8096.getCtx, v8096, [], JAM.policy.p3);
    }
    function v173(viz$$3, opt$$6) {
      function v172() {
        function v171() {
          JAM.call(that$$7.getPos, that$$7, [true], JAM.policy.p3);
          return;
        }
        clearTimeout(timer);
        timer = JAM.call(setTimeout, null, [v171, 500]);
        return;
      }
      function v170() {
        JAM.call(viz$$3.refresh, viz$$3, [], JAM.policy.p3);
        return;
      }
      function v169(base$$1) {
        var v8097 = viz$$3.fx;
        JAM.call(v8097.plot, v8097, [], JAM.policy.p3);
        return;
      }
      this.viz = viz$$3;
      this.opt = this.config = opt$$6;
      var v8098;
      if (JAM.call($$$1.type, $$$1, [opt$$6.injectInto], JAM.policy.p3) == "string") {
        v8098 = opt$$6.injectInto;
      } else {
        v8098 = opt$$6.injectInto.id;
      }
      var id$$7 = v8098;
      var type$$35 = opt$$6.type;
      var idLabel = id$$7 + "-label";
      var wrapper = $$$1(id$$7);
      var v8099 = opt$$6.width;
      if (!v8099) {
        v8099 = wrapper.offsetWidth;
      }
      var width$$10 = v8099;
      var v8100 = opt$$6.height;
      if (!v8100) {
        v8100 = wrapper.offsetHeight;
      }
      var height$$10 = v8100;
      this.id = id$$7;
      var canvasOptions = {injectInto:id$$7, width:width$$10, height:height$$10};
      var v31198 = $E$$1("div", {"id":id$$7 + "-canvaswidget", "style":{"position":"relative", "width":width$$10 + "px", "height":height$$10 + "px"}});
      this.element = v31198;
      var v31199 = JAM.call(this.createLabelContainer, this, [opt$$6.Label.type, idLabel, canvasOptions], JAM.policy.p3);
      this.labelContainer = v31199;
      var v8103 = this.canvases;
      JAM.call(v8103.push, v8103, [JAM.new(Canvas.Base[type$$35], [{config:JAM.call($$$1.extend, $$$1, [{idSuffix:"-canvas"}, canvasOptions], JAM.policy.p3), plot:v169, resize:v170}])], JAM.policy.p3);
      var back = opt$$6.background;
      if (back) {
        var backCanvas = JAM.new(Canvas.Background[back.type], [viz$$3, JAM.call($$$1.extend, $$$1, [back, canvasOptions], JAM.policy.p3)]);
        var v8107 = this.canvases;
        JAM.call(v8107.push, v8107, [JAM.new(Canvas.Base[type$$35], [backCanvas])], JAM.policy.p3);
      }
      var len$$1 = this.canvases.length;
      var v8114 = len$$1;
      len$$1 = len$$1 - 1;
      for (;v8114;) {
        var v8110 = this.element;
        JAM.call(v8110.appendChild, v8110, [this.canvases[len$$1].canvas], JAM.policy.p3);
        if (len$$1 > 0) {
          var v8112 = this.canvases[len$$1];
          JAM.call(v8112.plot, v8112, [], JAM.policy.p3);
        }
        v8114 = len$$1;
        len$$1 = len$$1 - 1;
      }
      var v8115 = this.element;
      JAM.call(v8115.appendChild, v8115, [this.labelContainer], JAM.policy.p3);
      JAM.call(wrapper.appendChild, wrapper, [this.element], JAM.policy.p3);
      var timer = null;
      var that$$7 = this;
      JAM.call($$$1.addEvent, $$$1, [window, "scroll", v172], JAM.policy.p3);
      return;
    }
    function $E$$1(tag$$1, props$$2) {
      var elem$$16 = JAM.call(document.createElement, document, [tag$$1], JAM.policy.p3);
      var p$$12;
      for (p$$12 in props$$2) {
        if (typeof props$$2[p$$12] == "object") {
          JAM.call($$$1.extend, $$$1, [elem$$16[p$$12], props$$2[p$$12]], JAM.policy.p3);
        } else {
          JAM.set(elem$$16, p$$12, props$$2[p$$12], JAM.policy.p2);
        }
      }
      var v19080 = tag$$1 == "canvas";
      if (v19080) {
        v19080 = !supportsCanvas;
      }
      var v14364 = v19080;
      if (v14364) {
        v14364 = G_vmlCanvasManager;
      }
      if (v14364) {
        var v14365 = document.body;
        elem$$16 = JAM.call(G_vmlCanvasManager.initElement, G_vmlCanvasManager, [JAM.call(v14365.appendChild, v14365, [elem$$16], JAM.policy.p3)], JAM.policy.p3);
      }
      return elem$$16;
    }
    var canvasType = typeof HTMLCanvasElement;
    var v8123 = canvasType == "object";
    if (!v8123) {
      v8123 = canvasType == "function";
    }
    var supportsCanvas = v8123;
    $jit.Canvas = Canvas = new Class({canvases:[], pos:false, element:false, labelContainer:false, translateOffsetX:0, translateOffsetY:0, scaleOffsetX:1, scaleOffsetY:1, initialize:v173, getCtx:v174, getConfig:v175, getElement:v176, getSize:v177, resize:v178, translate:v179, scale:v180, getZoom:v181, setZoom:v182, getPos:v183, clear:v184, path:v185, createLabelContainer:v186});
    Canvas.Base = {};
    var v8125 = Canvas.Base;
    var v31200 = new Class({translateOffsetX:0, translateOffsetY:0, scaleOffsetX:1, scaleOffsetY:1, initialize:v187, createCanvas:v188, getCtx:v189, getSize:v190, translateToCenter:v191, resize:v192, translate:v193, scale:v194, clear:v195, plot:v196});
    v8125["2D"] = v31200;
    Canvas.Background = {};
    var v8126 = Canvas.Background;
    var v31201 = new Class({initialize:v197, resize:v198, plot:v199});
    v8126.Circles = v31201;
    return;
  }
  function v168(e$$45, win$$33, eventInfo$$4, isRightClick$$3) {
    if (!this.config.panning) {
      return;
    }
    this.pressed = false;
    return;
  }
  function v167(e$$44, win$$32, eventInfo$$3) {
    if (!this.config.panning) {
      return;
    }
    if (!this.pressed) {
      return;
    }
    var v14373 = this.config.panning == "avoid nodes";
    if (v14373) {
      var v19084;
      if (this.dom) {
        v19084 = JAM.call(this.isLabel, this, [e$$44, win$$32], JAM.policy.p3);
      } else {
        v19084 = JAM.call(eventInfo$$3.getNode, eventInfo$$3, [], JAM.policy.p3);
      }
      v14373 = v19084;
    }
    if (v14373) {
      return;
    }
    var thispos = this.pos;
    var currentPos = JAM.call(eventInfo$$3.getPos, eventInfo$$3, [], JAM.policy.p3);
    var canvas$$4 = this.canvas;
    var ox$$2 = canvas$$4.translateOffsetX;
    var oy$$3 = canvas$$4.translateOffsetY;
    var sx$$3 = canvas$$4.scaleOffsetX;
    var sy$$3 = canvas$$4.scaleOffsetY;
    currentPos.x = currentPos.x * sx$$3;
    currentPos.y = currentPos.y * sy$$3;
    currentPos.x = currentPos.x + ox$$2;
    currentPos.y = currentPos.y + oy$$3;
    var x$$51 = currentPos.x - thispos.x;
    var y$$32 = currentPos.y - thispos.y;
    this.pos = currentPos;
    var v8135 = this.canvas;
    JAM.call(v8135.translate, v8135, [x$$51 * 1 / sx$$3, y$$32 * 1 / sy$$3], JAM.policy.p3);
    return;
  }
  function v166(e$$43, win$$31, eventInfo$$2) {
    if (!this.config.panning) {
      return;
    }
    var v14381 = this.config.panning == "avoid nodes";
    if (v14381) {
      var v19087;
      if (this.dom) {
        v19087 = JAM.call(this.isLabel, this, [e$$43, win$$31], JAM.policy.p3);
      } else {
        v19087 = JAM.call(eventInfo$$2.getNode, eventInfo$$2, [], JAM.policy.p3);
      }
      v14381 = v19087;
    }
    if (v14381) {
      return;
    }
    this.pressed = true;
    var v31202 = JAM.call(eventInfo$$2.getPos, eventInfo$$2, [], JAM.policy.p3);
    this.pos = v31202;
    var canvas$$3 = this.canvas;
    var ox$$1 = canvas$$3.translateOffsetX;
    var oy$$2 = canvas$$3.translateOffsetY;
    var sx$$2 = canvas$$3.scaleOffsetX;
    var sy$$2 = canvas$$3.scaleOffsetY;
    var v8140 = this.pos;
    v8140.x = v8140.x * sx$$2;
    var v8141 = this.pos;
    v8141.x = v8141.x + ox$$1;
    var v8142 = this.pos;
    v8142.y = v8142.y * sy$$2;
    var v8143 = this.pos;
    v8143.y = v8143.y + oy$$2;
    return;
  }
  function v165(e$$42, win$$30, scroll$$2) {
    if (!this.config.zooming) {
      return;
    }
    var v8145 = $$$1.event;
    var v14383 = $$$1.event;
    JAM.call(v8145.stop, v8145, [JAM.call(v14383.get, v14383, [e$$42, win$$30], JAM.policy.p3)], JAM.policy.p3);
    var val$$1 = this.config.zooming / 1E3;
    var ans$$4 = 1 + scroll$$2 * val$$1;
    var v8149 = this.canvas;
    JAM.call(v8149.scale, v8149, [ans$$4, ans$$4], JAM.policy.p3);
    return;
  }
  function v164() {
    this.pos = false;
    this.pressed = false;
    return;
  }
  function v163(e$$41, win$$29, event$$15) {
    function v162(n$$4) {
      var v14385 = n$$4.hovered;
      if (v14385) {
        v14385 = !n$$4.selected;
      }
      if (v14385) {
        var s$$5;
        for (s$$5 in nStyles$$3) {
          JAM.call(n$$4.setData, n$$4, [s$$5, n$$4.styles["$" + s$$5], "end"], JAM.policy.p3);
        }
        delete n$$4.hovered;
      }
      return;
    }
    if (this.down) {
      this.move = true;
    }
    var v14388 = this.dom;
    if (v14388) {
      v14388 = JAM.call(this.isLabel, this, [e$$41, win$$29], JAM.policy.p3);
    }
    if (v14388) {
      return;
    }
    var nStyles$$3 = this.nodeStylesOnHover;
    if (!nStyles$$3) {
      return;
    }
    if (!this.dom) {
      if (this.hoveredNode) {
        var v8155 = this.types;
        var v14390 = this.hoveredNode;
        var geom$$3 = v8155[JAM.call(v14390.getData, v14390, ["type"], JAM.policy.p3)];
        var v14391 = geom$$3;
        if (v14391) {
          v14391 = geom$$3.contains;
        }
        var v8157 = v14391;
        if (v8157) {
          var v14392 = geom$$3.contains;
          v8157 = JAM.call(v14392.call, v14392, [this.fx, this.hoveredNode, JAM.call(event$$15.getPos, event$$15, [], JAM.policy.p3)], JAM.policy.p3);
        }
        var contains$$3 = v8157;
        if (contains$$3) {
          return;
        }
      }
      var node$$22 = JAM.call(event$$15.getNode, event$$15, [], JAM.policy.p3);
      var v14396 = !this.hoveredNode;
      if (v14396) {
        v14396 = !node$$22;
      }
      if (v14396) {
        return;
      }
      if (node$$22.hovered) {
        return;
      }
      var v14397 = node$$22;
      if (v14397) {
        v14397 = !node$$22.selected;
      }
      if (v14397) {
        var v8161 = this.fx.nodeFxAnimation;
        JAM.call(v8161.stopTimer, v8161, [], JAM.policy.p3);
        var v8162 = this.viz.graph;
        JAM.call(v8162.eachNode, v8162, [v162], JAM.policy.p3);
        node$$22.hovered = true;
        this.hoveredNode = node$$22;
        JAM.call(this.toggleStylesOnHover, this, [node$$22, true], JAM.policy.p3);
      } else {
        var v14400 = this.hoveredNode;
        if (v14400) {
          v14400 = !this.hoveredNode.selected;
        }
        if (v14400) {
          var v8163 = this.fx.nodeFxAnimation;
          JAM.call(v8163.stopTimer, v8163, [], JAM.policy.p3);
          JAM.call(this.toggleStylesOnHover, this, [this.hoveredNode, false], JAM.policy.p3);
          delete this.hoveredNode.hovered;
          this.hoveredNode = false;
        }
      }
    }
    return;
  }
  function v161(node$$21) {
    function v160(n$$3) {
      if (n$$3.selected) {
        var s$$4;
        for (s$$4 in nStyles$$2) {
          JAM.call(n$$3.setData, n$$3, [s$$4, n$$3.styles["$" + s$$4], "end"], JAM.policy.p3);
        }
        delete n$$3.selected;
      }
      return;
    }
    if (!node$$21) {
      return;
    }
    var nStyles$$2 = this.nodeStylesOnClick;
    if (!nStyles$$2) {
      return;
    }
    if (node$$21.selected) {
      JAM.call(this.toggleStylesOnClick, this, [node$$21, false], JAM.policy.p3);
      delete node$$21.selected;
    } else {
      var v8173 = this.viz.graph;
      JAM.call(v8173.eachNode, v8173, [v160], JAM.policy.p3);
      JAM.call(this.toggleStylesOnClick, this, [node$$21, true], JAM.policy.p3);
      node$$21.selected = true;
      delete node$$21.hovered;
      this.hoveredNode = false;
    }
    return;
  }
  function v159(type$$34, node$$20, set$$2) {
    var viz$$2 = this.viz;
    var nStyles$$1 = this.nStyles;
    if (set$$2) {
      var that$$6 = this;
      if (!node$$20.styles) {
        var v31203 = JAM.call($$$1.merge, $$$1, [node$$20.data, {}], JAM.policy.p3);
        node$$20.styles = v31203;
      }
      var s$$3;
      for (s$$3 in this["nodeStylesOn" + type$$34]) {
        var $s = "$" + s$$3;
        if (!($s in node$$20.styles)) {
          var v8177 = node$$20.styles;
          var v31204 = JAM.call(node$$20.getData, node$$20, [s$$3], JAM.policy.p3);
          JAM.set(v8177, $s, v31204, JAM.policy.p2);
        }
      }
      var v8180 = viz$$2.fx;
      JAM.call(v8180.nodeFx, v8180, [JAM.call($$$1.extend, $$$1, [{"elements":{"id":node$$20.id, "properties":that$$6["nodeStylesOn" + type$$34]}, transition:Trans.Quart.easeOut, duration:300, fps:40}, this.config], JAM.policy.p3)], JAM.policy.p3);
    } else {
      var restoredStyles$$1 = JAM.call(this.getRestoredStyles, this, [node$$20, type$$34], JAM.policy.p3);
      var v8182 = viz$$2.fx;
      JAM.call(v8182.nodeFx, v8182, [JAM.call($$$1.extend, $$$1, [{"elements":{"id":node$$20.id, "properties":restoredStyles$$1}, transition:Trans.Quart.easeOut, duration:300, fps:40}, this.config], JAM.policy.p3)], JAM.policy.p3);
    }
    return;
  }
  function v158(node$$19, set$$1) {
    if (this.nodeStylesOnClick) {
      JAM.call(this.toggleStylesOn, this, ["Click", node$$19, set$$1], JAM.policy.p3);
    }
    return;
  }
  function v157(node$$18, set) {
    if (this.nodeStylesOnHover) {
      JAM.call(this.toggleStylesOn, this, ["Hover", node$$18, set], JAM.policy.p3);
    }
    return;
  }
  function v156(node$$17, type$$33) {
    var restoredStyles = {};
    var nStyles = this["nodeStylesOn" + type$$33];
    var prop$$5;
    for (prop$$5 in nStyles) {
      JAM.set(restoredStyles, prop$$5, node$$17.styles["$" + prop$$5], JAM.policy.p2);
    }
    return restoredStyles;
  }
  function v155(e$$40, win$$28, event$$14, isRightClick$$2) {
    if (isRightClick$$2) {
      return;
    }
    if (!this.move) {
      JAM.call(this.onClick, this, [JAM.call(event$$14.getNode, event$$14, [], JAM.policy.p3)], JAM.policy.p3);
    }
    this.down = this.move = false;
    return;
  }
  function v154(e$$39, win$$27, event$$13, isRightClick$$1) {
    if (isRightClick$$1) {
      return;
    }
    var label$$9;
    var v14413 = this.dom;
    if (v14413) {
      v14413 = label$$9 = JAM.call(this.isLabel, this, [e$$39, win$$27], JAM.policy.p3);
    }
    if (v14413) {
      var v8191 = this.viz.graph;
      var v31205 = JAM.call(v8191.getNode, v8191, [label$$9.id], JAM.policy.p3);
      this.down = v31205;
    } else {
      if (!this.dom) {
        var v31206 = JAM.call(event$$13.getNode, event$$13, [], JAM.policy.p3);
        this.down = v31206;
      }
    }
    this.move = false;
    return;
  }
  function v153(e$$38, win$$26) {
    var label$$8;
    var v14416 = this.dom;
    if (v14416) {
      v14416 = label$$8 = JAM.call(this.isLabel, this, [e$$38, win$$26, true], JAM.policy.p3);
    }
    if (v14416) {
      var v8195 = this.viz.graph;
      var node$$16 = JAM.call(v8195.getNode, v8195, [label$$8.id], JAM.policy.p3);
      if (node$$16.selected) {
        return;
      }
      this.hoveredNode = node$$16;
      JAM.call(this.toggleStylesOnHover, this, [this.hoveredNode, true], JAM.policy.p3);
    }
    return;
  }
  function v152(e$$37, win$$25) {
    this.down = this.move = false;
    if (!this.hoveredNode) {
      return;
    }
    var v14419 = this.dom;
    if (v14419) {
      v14419 = JAM.call(this.isLabel, this, [e$$37, win$$25, true], JAM.policy.p3);
    }
    if (v14419) {
      JAM.call(this.toggleStylesOnHover, this, [this.hoveredNode, false], JAM.policy.p3);
    }
    var rt$$2 = e$$37.relatedTarget;
    var canvasWidget$$2 = this.canvas.element;
    var v14420 = rt$$2;
    if (v14420) {
      v14420 = rt$$2.parentNode;
    }
    var v8205 = v14420;
    for (;v8205;) {
      if (canvasWidget$$2 == rt$$2.parentNode) {
        return;
      }
      rt$$2 = rt$$2.parentNode;
      var v14422 = rt$$2;
      if (v14422) {
        v14422 = rt$$2.parentNode;
      }
      v8205 = v14422;
    }
    JAM.call(this.toggleStylesOnHover, this, [this.hoveredNode, false], JAM.policy.p3);
    this.hoveredNode = false;
    return;
  }
  function v151() {
    this.fx = this.viz.fx;
    this.types = this.viz.fx.nodeTypes;
    this.nStyles = this.config;
    this.nodeStylesOnHover = this.nStyles.stylesHover;
    this.nodeStylesOnClick = this.nStyles.stylesClick;
    this.hoveredNode = false;
    var v8211 = this.fx;
    var v31207 = new Animation;
    v8211.nodeFxAnimation = v31207;
    this.down = false;
    this.move = false;
    return;
  }
  function v150(triggerCallback) {
    this.tip.style.display = "none";
    if (triggerCallback) {
      var v14425 = this.config;
      JAM.call(v14425.onHide, v14425, [], JAM.policy.p3);
    }
    return;
  }
  function v149(pos$$8) {
    var tip$$1 = this.tip;
    var style$$2 = tip$$1.style;
    var cont = this.config;
    style$$2.display = "";
    var v19102 = document.compatMode === "CSS1Compat";
    if (v19102) {
      v19102 = document.documentElement;
    }
    var v14426 = v19102;
    if (!v14426) {
      v14426 = document.body;
    }
    var v8213 = v14426;
    if (!v8213) {
      v8213 = document.documentElement;
    }
    var elem$$15 = v8213;
    var JSCompiler_object_inline_width_82 = elem$$15.clientWidth;
    var JSCompiler_object_inline_height_83 = elem$$15.clientHeight;
    var v19104 = window.pageXOffset;
    if (!v19104) {
      var v22412 = document.documentElement;
      if (v22412) {
        v22412 = document.documentElement.scrollLeft;
      }
      v19104 = v22412;
    }
    var v14428 = v19104;
    if (!v14428) {
      var v19105 = document.body;
      if (v19105) {
        v19105 = document.body.scrollLeft;
      }
      v14428 = v19105;
    }
    var v8214 = v14428;
    if (!v8214) {
      v8214 = 0;
    }
    var JSCompiler_object_inline_x_84 = v8214;
    var v19107 = window.pageYOffset;
    if (!v19107) {
      var v22415 = document.documentElement;
      if (v22415) {
        v22415 = document.documentElement.scrollTop;
      }
      v19107 = v22415;
    }
    var v14430 = v19107;
    if (!v14430) {
      var v19108 = document.body;
      if (v19108) {
        v19108 = document.body.scrollTop;
      }
      v14430 = v19108;
    }
    var v8215 = v14430;
    if (!v8215) {
      v8215 = 0;
    }
    var JSCompiler_object_inline_y_85 = v8215;
    var JSCompiler_object_inline_width_86 = tip$$1.offsetWidth;
    var JSCompiler_object_inline_height_87 = tip$$1.offsetHeight;
    var x$$50 = cont.offsetX;
    var y$$31 = cont.offsetY;
    var v14432;
    if (pos$$8.y + JSCompiler_object_inline_height_87 + y$$31 > JSCompiler_object_inline_height_83 + JSCompiler_object_inline_y_85) {
      v14432 = pos$$8.y - JSCompiler_object_inline_height_87 - y$$31;
    } else {
      v14432 = pos$$8.y + y$$31;
    }
    style$$2.top = v14432 + "px";
    var v14433;
    if (pos$$8.x + JSCompiler_object_inline_width_86 + x$$50 > JSCompiler_object_inline_width_82 + JSCompiler_object_inline_x_84) {
      v14433 = pos$$8.x - JSCompiler_object_inline_width_86 - x$$50;
    } else {
      v14433 = pos$$8.x + x$$50;
    }
    style$$2.left = v14433 + "px";
    return;
  }
  function v148(e$$36, win$$24, opt$$5) {
    var v14434 = this.dom;
    if (v14434) {
      v14434 = JAM.call(this.isLabel, this, [e$$36, win$$24], JAM.policy.p3);
    }
    if (v14434) {
      var v14435 = $$$1.event;
      JAM.call(this.setTooltipPosition, this, [JAM.call(v14435.getPos, v14435, [e$$36, win$$24], JAM.policy.p3)], JAM.policy.p3);
    }
    if (!this.dom) {
      var node$$15 = JAM.call(opt$$5.getNode, opt$$5, [], JAM.policy.p3);
      if (!node$$15) {
        JAM.call(this.hide, this, [true], JAM.policy.p3);
        return;
      }
      var v19116 = this.config.force;
      if (!v19116) {
        v19116 = !this.node;
      }
      var v14437 = v19116;
      if (!v14437) {
        v14437 = this.node.id != node$$15.id;
      }
      if (v14437) {
        this.node = node$$15;
        var v8221 = this.config;
        JAM.call(v8221.onShow, v8221, [this.tip, node$$15, JAM.call(opt$$5.getContains, opt$$5, [], JAM.policy.p3)], JAM.policy.p3);
      }
      var v14438 = $$$1.event;
      JAM.call(this.setTooltipPosition, this, [JAM.call(v14438.getPos, v14438, [e$$36, win$$24], JAM.policy.p3)], JAM.policy.p3);
    }
    return;
  }
  function v147(e$$35, win$$23) {
    var label$$7;
    var v14439 = this.dom;
    if (v14439) {
      v14439 = label$$7 = JAM.call(this.isLabel, this, [e$$35, win$$23, false], JAM.policy.p3);
    }
    if (v14439) {
      var v8227 = this.viz.graph;
      var v31208 = JAM.call(v8227.getNode, v8227, [label$$7.id], JAM.policy.p3);
      this.node = v31208;
      var v8229 = this.config;
      JAM.call(v8229.onShow, v8229, [this.tip, this.node, label$$7], JAM.policy.p3);
    }
    return;
  }
  function v146(e$$34, win$$22) {
    var v8233 = $$$1.event;
    var evt$$16 = JAM.call(v8233.get, v8233, [e$$34, win$$22], JAM.policy.p3);
    var v14441 = this.dom;
    if (v14441) {
      v14441 = JAM.call(this.isLabel, this, [e$$34, win$$22, true], JAM.policy.p3);
    }
    if (v14441) {
      JAM.call(this.hide, this, [true], JAM.policy.p3);
      return;
    }
    var rt$$1 = e$$34.relatedTarget;
    var canvasWidget$$1 = this.canvas.element;
    var v14442 = rt$$1;
    if (v14442) {
      v14442 = rt$$1.parentNode;
    }
    var v8237 = v14442;
    for (;v8237;) {
      if (canvasWidget$$1 == rt$$1.parentNode) {
        return;
      }
      rt$$1 = rt$$1.parentNode;
      var v14444 = rt$$1;
      if (v14444) {
        v14444 = rt$$1.parentNode;
      }
      v8237 = v14444;
    }
    JAM.call(this.hide, this, [false], JAM.policy.p3);
    return;
  }
  function v145() {
    if (document.body) {
      var v8238 = $$$1("_tooltip");
      if (!v8238) {
        v8238 = JAM.call(document.createElement, document, ["div"], JAM.policy.p3);
      }
      var tip = v8238;
      tip.id = "_tooltip";
      tip.className = "tip";
      JAM.call($$$1.extend, $$$1, [tip.style, {position:"absolute", display:"none", zIndex:13E3}], JAM.policy.p3);
      var v8241 = document.body;
      JAM.call(v8241.appendChild, v8241, [tip], JAM.policy.p3);
      this.tip = tip;
      this.node = false;
    }
    return;
  }
  function v144(e$$33, win$$21, event$$12) {
    var v8243 = $$$1.event;
    var evt$$15 = JAM.call(v8243.get, v8243, [e$$33, win$$21], JAM.policy.p3);
    if (this.touched) {
      if (this.touchMoved) {
        var v8244 = this.config;
        JAM.call(v8244.onTouchEnd, v8244, [this.touched, event$$12, evt$$15], JAM.policy.p3);
      } else {
        var v8246 = this.config;
        JAM.call(v8246.onTouchCancel, v8246, [this.touched, event$$12, evt$$15], JAM.policy.p3);
      }
      this.touched = this.touchMoved = false;
    }
    return;
  }
  function v143(e$$32, win$$20, event$$11) {
    var v8250 = $$$1.event;
    var evt$$14 = JAM.call(v8250.get, v8250, [e$$32, win$$20], JAM.policy.p3);
    if (this.touched) {
      this.touchMoved = true;
      var v8251 = this.config;
      JAM.call(v8251.onTouchMove, v8251, [this.touched, event$$11, evt$$14], JAM.policy.p3);
    }
    return;
  }
  function v142(e$$31, win$$19, event$$10) {
    var v8254 = $$$1.event;
    var evt$$13 = JAM.call(v8254.get, v8254, [e$$31, win$$19], JAM.policy.p3);
    var label$$6;
    var v14446 = this.dom;
    if (v14446) {
      v14446 = label$$6 = JAM.call(this.isLabel, this, [e$$31, win$$19], JAM.policy.p3);
    }
    if (v14446) {
      var v8255 = this.viz.graph;
      var v31209 = JAM.call(v8255.getNode, v8255, [label$$6.id], JAM.policy.p3);
      this.touched = v31209;
    } else {
      var v8257 = JAM.call(event$$10.getNode, event$$10, [], JAM.policy.p3);
      if (!v8257) {
        var v14448 = this.config.enableForEdges;
        if (v14448) {
          v14448 = JAM.call(event$$10.getEdge, event$$10, [], JAM.policy.p3);
        }
        v8257 = v14448;
      }
      this.touched = v8257;
    }
    var v8259 = this.touched;
    if (v8259) {
      var v14450 = this.config;
      JAM.call(v14450.onTouchStart, v14450, [this.touched, event$$10, evt$$13], JAM.policy.p3);
    }
    return;
  }
  function v141(e$$30, win$$18, event$$9) {
    var v8260 = $$$1.event;
    var evt$$12 = JAM.call(v8260.get, v8260, [e$$30, win$$18], JAM.policy.p3);
    var label$$5;
    if (this.dom) {
      if (label$$5 = JAM.call(this.isLabel, this, [e$$30, win$$18], JAM.policy.p3)) {
        var v8261 = this.viz.graph;
        var v31210 = JAM.call(v8261.getNode, v8261, [label$$5.id], JAM.policy.p3);
        this.pressed = v31210;
      }
    } else {
      var v8264 = JAM.call(event$$9.getNode, event$$9, [], JAM.policy.p3);
      if (!v8264) {
        var v14453 = this.config.enableForEdges;
        if (v14453) {
          v14453 = JAM.call(event$$9.getEdge, event$$9, [], JAM.policy.p3);
        }
        v8264 = v14453;
      }
      this.pressed = v8264;
    }
    var v8266 = this.pressed;
    if (v8266) {
      var v14455 = this.config;
      JAM.call(v14455.onDragStart, v14455, [this.pressed, event$$9, evt$$12], JAM.policy.p3);
    }
    return;
  }
  function v140(e$$29, win$$17, delta$$2) {
    var v8267 = this.config;
    var v14457 = $$$1.event;
    JAM.call(v8267.onMouseWheel, v8267, [delta$$2, JAM.call(v14457.get, v14457, [e$$29, win$$17], JAM.policy.p3)], JAM.policy.p3);
    return;
  }
  function v139(e$$28, win$$16, event$$8) {
    var label$$4;
    var v8269 = $$$1.event;
    var evt$$11 = JAM.call(v8269.get, v8269, [e$$28, win$$16], JAM.policy.p3);
    if (this.pressed) {
      this.moved = true;
      var v8270 = this.config;
      JAM.call(v8270.onDragMove, v8270, [this.pressed, event$$8, evt$$11], JAM.policy.p3);
      return;
    }
    if (this.dom) {
      var v8273 = this.config;
      JAM.call(v8273.onMouseMove, v8273, [this.hovered, event$$8, evt$$11], JAM.policy.p3);
    } else {
      if (this.hovered) {
        var hn = this.hovered;
        var v8275;
        if (hn.nodeFrom) {
          v8275 = this.etypes[JAM.call(hn.getData, hn, ["type"], JAM.policy.p3)];
        } else {
          v8275 = this.ntypes[JAM.call(hn.getData, hn, ["type"], JAM.policy.p3)];
        }
        var geom$$2 = v8275;
        var v14463 = geom$$2;
        if (v14463) {
          v14463 = geom$$2.contains;
        }
        var v8276 = v14463;
        if (v8276) {
          var v14464 = geom$$2.contains;
          v8276 = JAM.call(v14464.call, v14464, [this.fx, hn, JAM.call(event$$8.getPos, event$$8, [], JAM.policy.p3)], JAM.policy.p3);
        }
        var contains$$2 = v8276;
        if (contains$$2) {
          var v8277 = this.config;
          JAM.call(v8277.onMouseMove, v8277, [hn, event$$8, evt$$11], JAM.policy.p3);
          return;
        } else {
          var v8278 = this.config;
          JAM.call(v8278.onMouseLeave, v8278, [hn, event$$8, evt$$11], JAM.policy.p3);
          this.hovered = false;
        }
      }
      var v14467 = JAM.call(event$$8.getNode, event$$8, [], JAM.policy.p3);
      if (!v14467) {
        var v19122 = this.config.enableForEdges;
        if (v19122) {
          v19122 = JAM.call(event$$8.getEdge, event$$8, [], JAM.policy.p3);
        }
        v14467 = v19122;
      }
      if (this.hovered = v14467) {
        var v8280 = this.config;
        JAM.call(v8280.onMouseEnter, v8280, [this.hovered, event$$8, evt$$11], JAM.policy.p3);
      } else {
        var v8282 = this.config;
        JAM.call(v8282.onMouseMove, v8282, [false, event$$8, evt$$11], JAM.policy.p3);
      }
    }
    return;
  }
  function v138(e$$27, win$$15, event$$7) {
    var v8285 = $$$1.event;
    var evt$$10 = JAM.call(v8285.get, v8285, [e$$27, win$$15], JAM.policy.p3);
    var label$$3;
    var v14468 = this.dom;
    if (v14468) {
      v14468 = label$$3 = JAM.call(this.isLabel, this, [e$$27, win$$15, true], JAM.policy.p3);
    }
    if (v14468) {
      var v8286 = this.viz.graph;
      var v31211 = JAM.call(v8286.getNode, v8286, [label$$3.id], JAM.policy.p3);
      this.hovered = v31211;
      var v8288 = this.config;
      JAM.call(v8288.onMouseEnter, v8288, [this.hovered, event$$7, evt$$10], JAM.policy.p3);
    }
    return;
  }
  function v137(e$$26, win$$14, event$$6) {
    var v8291 = $$$1.event;
    var evt$$9 = JAM.call(v8291.get, v8291, [e$$26, win$$14], JAM.policy.p3);
    var label$$2;
    var v14470 = this.dom;
    if (v14470) {
      v14470 = label$$2 = JAM.call(this.isLabel, this, [e$$26, win$$14, true], JAM.policy.p3);
    }
    if (v14470) {
      var v8292 = this.config;
      var v14471 = this.viz.graph;
      JAM.call(v8292.onMouseLeave, v8292, [JAM.call(v14471.getNode, v14471, [label$$2.id], JAM.policy.p3), event$$6, evt$$9], JAM.policy.p3);
      this.hovered = false;
      return;
    }
    var rt = evt$$9.relatedTarget;
    var canvasWidget = this.canvas.element;
    var v14473 = rt;
    if (v14473) {
      v14473 = rt.parentNode;
    }
    var v8297 = v14473;
    for (;v8297;) {
      if (canvasWidget == rt.parentNode) {
        return;
      }
      rt = rt.parentNode;
      var v14475 = rt;
      if (v14475) {
        v14475 = rt.parentNode;
      }
      v8297 = v14475;
    }
    if (this.hovered) {
      var v8298 = this.config;
      JAM.call(v8298.onMouseLeave, v8298, [this.hovered, event$$6, evt$$9], JAM.policy.p3);
      this.hovered = false;
    }
    return;
  }
  function v136(e$$25, win$$13, event$$5, isRightClick) {
    var v8301 = $$$1.event;
    var evt$$8 = JAM.call(v8301.get, v8301, [e$$25, win$$13], JAM.policy.p3);
    if (!this.moved) {
      if (isRightClick) {
        var v8302 = this.config;
        JAM.call(v8302.onRightClick, v8302, [this.hovered, event$$5, evt$$8], JAM.policy.p3);
      } else {
        var v8304 = this.config;
        JAM.call(v8304.onClick, v8304, [this.pressed, event$$5, evt$$8], JAM.policy.p3);
      }
    }
    if (this.pressed) {
      if (this.moved) {
        var v8307 = this.config;
        JAM.call(v8307.onDragEnd, v8307, [this.pressed, event$$5, evt$$8], JAM.policy.p3);
      } else {
        var v8309 = this.config;
        JAM.call(v8309.onDragCancel, v8309, [this.pressed, event$$5, evt$$8], JAM.policy.p3);
      }
      this.pressed = this.moved = false;
    }
    return;
  }
  function v135() {
    this.fx = this.viz.fx;
    this.ntypes = this.viz.fx.nodeTypes;
    this.etypes = this.viz.fx.edgeTypes;
    this.hovered = false;
    this.pressed = false;
    this.touched = false;
    this.touchMoved = false;
    this.moved = false;
    return;
  }
  function v134() {
    function v133(k$$1) {
      var obj$$23 = JAM.new(Extras.Classes[k$$1], [k$$1, that$$5]);
      if (JAM.call(obj$$23.isEnabled, obj$$23, [], JAM.policy.p3)) {
        JAM.call(mem.register, mem, [obj$$23], JAM.policy.p3);
      }
      if (JAM.call(obj$$23.setAsProperty, obj$$23, [], JAM.policy.p3)) {
        JAM.set(that$$5, JAM.call(k$$1.toLowerCase, k$$1, [], JAM.policy.p3), obj$$23, JAM.policy.p2);
      }
      return;
    }
    var mem = JAM.new(MouseEventsManager, [this]);
    var that$$5 = this;
    JAM.call($$$1.each, $$$1, [["NodeStyles", "Tips", "Navigation", "Events"], v133], JAM.policy.p3);
    return;
  }
  function v132(e$$23, win$$12) {
    function v131() {
      if (this.getNodeCalled) {
        return this.contains;
      }
      JAM.call(this.getNode, this, [], JAM.policy.p3);
      return this.contains;
    }
    function v130() {
      if (this.getEdgeCalled) {
        return this.edge;
      }
      this.getEdgeCalled = true;
      var hashset = {};
      var id$$6;
      for (id$$6 in graph.edges) {
        var edgeFrom = graph.edges[id$$6];
        JAM.set(hashset, id$$6, true, JAM.policy.p2);
        var edgeId;
        for (edgeId in edgeFrom) {
          if (edgeId in hashset) {
            continue;
          }
          var e$$24 = edgeFrom[edgeId];
          var v8325 = e$$24;
          if (v8325) {
            v8325 = etypes[JAM.call(e$$24.getData, e$$24, ["type"], JAM.policy.p3)];
          }
          var geom$$1 = v8325;
          var v14482 = geom$$1;
          if (v14482) {
            v14482 = geom$$1.contains;
          }
          var v8326 = v14482;
          if (v8326) {
            var v14483 = geom$$1.contains;
            v8326 = JAM.call(v14483.call, v14483, [fx, e$$24, JAM.call(this.getPos, this, [], JAM.policy.p3)], JAM.policy.p3);
          }
          var contains$$1 = v8326;
          if (contains$$1) {
            this.contains = contains$$1;
            return that$$4.edge = this.edge = e$$24;
          }
        }
      }
      return that$$4.edge = this.edge = false;
    }
    function v129() {
      if (this.getNodeCalled) {
        return this.node;
      }
      this.getNodeCalled = true;
      var id$$5;
      for (id$$5 in graph.nodes) {
        var n$$2 = graph.nodes[id$$5];
        var v8330 = n$$2;
        if (v8330) {
          v8330 = ntypes[JAM.call(n$$2.getData, n$$2, ["type"], JAM.policy.p3)];
        }
        var geom = v8330;
        var v14487 = geom;
        if (v14487) {
          v14487 = geom.contains;
        }
        var v8331 = v14487;
        if (v8331) {
          var v14488 = geom.contains;
          v8331 = JAM.call(v14488.call, v14488, [fx, n$$2, JAM.call(this.getPos, this, [], JAM.policy.p3)], JAM.policy.p3);
        }
        var contains = v8331;
        if (contains) {
          this.contains = contains;
          return that$$4.node = this.node = n$$2;
        }
      }
      return that$$4.node = this.node = false;
    }
    function v128() {
      var canvas$$2 = that$$4.viz.canvas;
      var s$$2 = JAM.call(canvas$$2.getSize, canvas$$2, [], JAM.policy.p3);
      var p$$11 = JAM.call(canvas$$2.getPos, canvas$$2, [], JAM.policy.p3);
      var ox = canvas$$2.translateOffsetX;
      var oy$$1 = canvas$$2.translateOffsetY;
      var sx$$1 = canvas$$2.scaleOffsetX;
      var sy$$1 = canvas$$2.scaleOffsetY;
      var v8334 = $$$1.event;
      var pos$$7 = JAM.call(v8334.getPos, v8334, [e$$23, win$$12], JAM.policy.p3);
      this.pos = {x:(pos$$7.x - p$$11.x - ox) * 1 / sx$$1, y:(pos$$7.y - p$$11.y - oy$$1) * 1 / sy$$1};
      return this.pos;
    }
    var that$$4 = this;
    var graph = this.viz.graph;
    var fx = this.viz.fx;
    var ntypes = fx.nodeTypes;
    var etypes = fx.edgeTypes;
    return{pos:false, node:false, edge:false, contains:false, getNodeCalled:false, getEdgeCalled:false, getPos:v128, getNode:v129, getEdge:v130, getContains:v131};
  }
  function v127() {
    var v8339 = Array.prototype.slice;
    var args$$1 = JAM.call(v8339.call, v8339, [arguments], JAM.policy.p3);
    var type$$32 = JAM.call(args$$1.shift, args$$1, [], JAM.policy.p3);
    var i$$26 = 0;
    var regs = this.registeredObjects;
    var l$$8 = regs.length;
    var v8342 = i$$26 < l$$8;
    for (;v8342;) {
      var v8340 = regs[i$$26]["on" + type$$32];
      JAM.call(v8340.apply, v8340, [regs[i$$26], args$$1], JAM.policy.p3);
      i$$26++;
      v8342 = i$$26 < l$$8;
    }
    return;
  }
  function v126(obj$$22) {
    var v8343 = this.registeredObjects;
    JAM.call(v8343.push, v8343, [obj$$22], JAM.policy.p3);
    return;
  }
  function v125() {
    function v124(e$$21, win$$10) {
      JAM.call(that$$3.handleEvent, that$$3, ["TouchEnd", e$$21, win$$10, JAM.call(that$$3.makeEventObject, that$$3, [e$$21, win$$10], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    function v123(e$$20, win$$9) {
      JAM.call(that$$3.handleEvent, that$$3, ["TouchMove", e$$20, win$$9, JAM.call(that$$3.makeEventObject, that$$3, [e$$20, win$$9], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    function v122(e$$19, win$$8) {
      JAM.call(that$$3.handleEvent, that$$3, ["TouchStart", e$$19, win$$8, JAM.call(that$$3.makeEventObject, that$$3, [e$$19, win$$8], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    function v121(e$$18, win$$7) {
      JAM.call(that$$3.handleEvent, that$$3, ["MouseOut", e$$18, win$$7, JAM.call(that$$3.makeEventObject, that$$3, [e$$18, win$$7], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    function v120(e$$17, win$$6) {
      JAM.call(that$$3.handleEvent, that$$3, ["MouseOver", e$$17, win$$6, JAM.call(that$$3.makeEventObject, that$$3, [e$$17, win$$6], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    function v119(e$$16, win$$5) {
      JAM.call(that$$3.handleEvent, that$$3, ["MouseMove", e$$16, win$$5, JAM.call(that$$3.makeEventObject, that$$3, [e$$16, win$$5], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    function v118(e$$15, win$$4) {
      var v8350 = $$$1.event;
      var event$$3 = JAM.call(v8350.get, v8350, [e$$15, win$$4], JAM.policy.p3);
      var v8351 = JAM.call(that$$3.makeEventObject, that$$3, [e$$15, win$$4], JAM.policy.p3);
      var v14495 = $$$1.event;
      JAM.call(that$$3.handleEvent, that$$3, ["MouseDown", e$$15, win$$4, v8351, JAM.call(v14495.isRightClick, v14495, [event$$3], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    function v117(e$$14, win$$3) {
      var v8353 = $$$1.event;
      var event$$2 = JAM.call(v8353.get, v8353, [e$$14, win$$3], JAM.policy.p3);
      var v8354 = JAM.call(that$$3.makeEventObject, that$$3, [e$$14, win$$3], JAM.policy.p3);
      var v14496 = $$$1.event;
      JAM.call(that$$3.handleEvent, that$$3, ["MouseUp", e$$14, win$$3, v8354, JAM.call(v14496.isRightClick, v14496, [event$$2], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    function handleMouseWheel(e$$22, win$$11) {
      var v8356 = $$$1.event;
      var event$$4 = JAM.call(v8356.get, v8356, [e$$22, win$$11], JAM.policy.p3);
      var v8357 = $$$1.event;
      var wheel = JAM.call(v8357.getWheel, v8357, [event$$4], JAM.policy.p3);
      JAM.call(that$$3.handleEvent, that$$3, ["MouseWheel", e$$22, win$$11, wheel], JAM.policy.p3);
      return;
    }
    var htmlCanvas = this.canvas.element;
    var that$$3 = this;
    var v8359 = htmlCanvas;
    var v31212 = JAM.call($$$1.lambda, $$$1, [false], JAM.policy.p3);
    JAM.set(v8359, "oncontextmenu", v31212);
    JAM.call($$$1.addEvents, $$$1, [htmlCanvas, {"mouseup":v117, "mousedown":v118, "mousemove":v119, "mouseover":v120, "mouseout":v121, "touchstart":v122, "touchmove":v123, "touchend":v124}], JAM.policy.p3);
    var v14497 = !document.getBoxObjectFor;
    if (v14497) {
      v14497 = window.mozInnerScreenX == null;
    }
    if (v14497) {
      JAM.call($$$1.addEvent, $$$1, [htmlCanvas, "mousewheel", handleMouseWheel], JAM.policy.p3);
    } else {
      JAM.call(htmlCanvas.addEventListener, htmlCanvas, ["DOMMouseScroll", handleMouseWheel, false], JAM.policy.p3);
    }
    return;
  }
  function v116(viz$$1) {
    this.viz = viz$$1;
    this.canvas = viz$$1.canvas;
    this.node = false;
    this.edge = false;
    this.registeredObjects = [];
    JAM.call(this.attachEvents, this, [], JAM.policy.p3);
    return;
  }
  function v115(elem$$14, par) {
    var v14498 = elem$$14;
    if (v14498) {
      v14498 = elem$$14.parentNode;
    }
    var v8363 = v14498;
    for (;v8363;) {
      if (elem$$14.parentNode == par) {
        return elem$$14;
      }
      elem$$14 = elem$$14.parentNode;
      var v14500 = elem$$14;
      if (v14500) {
        v14500 = elem$$14.parentNode;
      }
      v8363 = v14500;
    }
    return false;
  }
  function v114(e$$13, win$$2, group) {
    var v8364 = $$$1.event;
    e$$13 = JAM.call(v8364.get, v8364, [e$$13, win$$2], JAM.policy.p3);
    var labelContainer = this.labelContainer;
    var v8365 = e$$13.target;
    if (!v8365) {
      v8365 = e$$13.srcElement;
    }
    var target$$26 = v8365;
    var related = e$$13.relatedTarget;
    if (group) {
      var v19129 = related;
      if (v19129) {
        var v27708 = this.viz.canvas;
        v19129 = related == JAM.call(v27708.getCtx, v27708, [], JAM.policy.p3).canvas;
      }
      var v14502 = v19129;
      if (v14502) {
        v14502 = !!target$$26;
      }
      var v8366 = v14502;
      if (v8366) {
        v8366 = JAM.call(this.isDescendantOf, this, [target$$26, labelContainer], JAM.policy.p3);
      }
      return v8366;
    } else {
      return JAM.call(this.isDescendantOf, this, [target$$26, labelContainer], JAM.policy.p3);
    }
    return;
  }
  function v113() {
    return this.config.enable;
  }
  function v112(className, viz) {
    this.viz = viz;
    this.canvas = viz.canvas;
    this.config = viz.config[className];
    this.nodeTypes = viz.fx.nodeTypes;
    var type$$31 = this.config.type;
    var v8371;
    if (type$$31 == "auto") {
      v8371 = viz.config.Label.type != "Native";
    } else {
      v8371 = type$$31 != "Native";
    }
    this.dom = v8371;
    var v8372 = this.dom;
    if (v8372) {
      var v14505 = viz.labels;
      v8372 = JAM.call(v14505.getLabelContainer, v14505, [], JAM.policy.p3);
    }
    this.labelContainer = v8372;
    var v8373 = JAM.call(this.isEnabled, this, [], JAM.policy.p3);
    if (v8373) {
      JAM.call(this.initializePost, this, [], JAM.policy.p3);
    }
    return;
  }
  function v111() {
    if (!this.timer) {
      return true;
    }
    if (this.opt.link == "cancel") {
      JAM.call(this.stopTimer, this, [], JAM.policy.p3);
      return true;
    }
    return false;
  }
  function v110() {
    if (!this.timer) {
      return false;
    }
    this.time = JAM.call($$$1.time, $$$1, [], JAM.policy.p3) - this.time;
    var v31213 = clearInterval(this.timer);
    this.timer = v31213;
    return true;
  }
  function v109() {
    JAM.call(this.startTimer, this, [], JAM.policy.p3);
    return this;
  }
  function v108() {
    JAM.call(this.stopTimer, this, [], JAM.policy.p3);
    return this;
  }
  function v107() {
    function v106() {
      JAM.call(that$$2.step, that$$2, [], JAM.policy.p3);
      return;
    }
    var that$$2 = this;
    var fps = this.opt.fps;
    if (this.timer) {
      return false;
    }
    this.time = JAM.call($$$1.time, $$$1, [], JAM.policy.p3) - this.time;
    var v31214 = JAM.call(setInterval, null, [v106, JAM.call(Math.round, Math, [1E3 / fps], JAM.policy.p3)]);
    this.timer = v31214;
    return true;
  }
  function v105() {
    if (!JAM.call(this.check, this, [], JAM.policy.p3)) {
      return this;
    }
    this.time = 0;
    JAM.call(this.startTimer, this, [], JAM.policy.p3);
    return this;
  }
  function v104() {
    var time = JAM.call($$$1.time, $$$1, [], JAM.policy.p3);
    var opt$$3 = this.opt;
    if (time < this.time + opt$$3.duration) {
      var delta$$1 = JAM.call(opt$$3.transition, opt$$3, [(time - this.time) / opt$$3.duration], JAM.policy.p3);
      JAM.call(opt$$3.compute, opt$$3, [delta$$1], JAM.policy.p3);
    } else {
      var v31215 = clearInterval(this.timer);
      this.timer = v31215;
      JAM.call(opt$$3.compute, opt$$3, [1], JAM.policy.p3);
      JAM.call(opt$$3.complete, opt$$3, [], JAM.policy.p3);
    }
    return;
  }
  function v103(options$$3) {
    var opt$$2 = {duration:2500, fps:40, transition:Trans.Quart.easeInOut, compute:$$$1.empty, complete:$$$1.empty, link:"ignore"};
    var v31216 = JAM.call($$$1.merge, $$$1, [opt$$2, options$$3 || {}], JAM.policy.p3);
    this.opt = v31216;
    return this;
  }
  function v102(options$$2) {
    JAM.call(this.setOptions, this, [options$$2], JAM.policy.p3);
    return;
  }
  function v101() {
    function v100(elem$$13, i$$24) {
      function v99(p$$10) {
        return JAM.call(Math.pow, Math, [p$$10, [i$$24 + 2]], JAM.policy.p3);
      }
      var v31217 = makeTrans(v99);
      JAM.set(Trans, elem$$13, v31217, JAM.policy.p2);
      return;
    }
    function v98(val, key$$23) {
      var v31218 = makeTrans(val);
      JAM.set(Trans, key$$23, v31218, JAM.policy.p2);
      return;
    }
    function v97(p$$9, x$$49) {
      var v8394 = JAM.call(Math.pow, Math, [2, 10 * (p$$9 = p$$9 - 1)], JAM.policy.p3);
      var v22433 = 20 * p$$9 * Math.PI;
      var v26180 = x$$49[0];
      if (!v26180) {
        v26180 = 1;
      }
      return v8394 * JAM.call(Math.cos, Math, [v22433 * v26180 / 3], JAM.policy.p3);
    }
    function v96(p$$8) {
      var value$$33;
      var a = 0;
      var b = 1;
      for (;1;) {
        if (p$$8 >= (7 - 4 * a) / 11) {
          value$$33 = b * b - JAM.call(Math.pow, Math, [(11 - 6 * a - 11 * p$$8) / 4, 2], JAM.policy.p3);
          break;
        }
        a = a + b;
        b = b / 2;
      }
      return value$$33;
    }
    function v95(p$$7, x$$48) {
      var v8399 = x$$48[0];
      if (!v8399) {
        v8399 = 1.618;
      }
      x$$48 = v8399;
      return JAM.call(Math.pow, Math, [p$$7, 2], JAM.policy.p3) * ((x$$48 + 1) * p$$7 - x$$48);
    }
    function v94(p$$6) {
      return 1 - JAM.call(Math.sin, Math, [(1 - p$$6) * Math.PI / 2], JAM.policy.p3);
    }
    function v93(p$$5) {
      return 1 - JAM.call(Math.sin, Math, [JAM.call(Math.acos, Math, [p$$5], JAM.policy.p3)], JAM.policy.p3);
    }
    function v92(p$$4) {
      return JAM.call(Math.pow, Math, [2, 8 * (p$$4 - 1)], JAM.policy.p3);
    }
    function v91(p$$3, x$$47) {
      var v14525 = x$$47[0];
      if (!v14525) {
        v14525 = 6;
      }
      return JAM.call(Math.pow, Math, [p$$3, v14525], JAM.policy.p3);
    }
    function makeTrans(transition, params) {
      function v90(pos$$6) {
        var v8406;
        if (pos$$6 <= .5) {
          v8406 = JAM.call(transition, null, [2 * pos$$6, params], JAM.policy.p3) / 2;
        } else {
          v8406 = (2 - JAM.call(transition, null, [2 * (1 - pos$$6), params], JAM.policy.p3)) / 2;
        }
        return v8406;
      }
      function v89(pos$$5) {
        return 1 - JAM.call(transition, null, [1 - pos$$5, params], JAM.policy.p3);
      }
      function v88(pos$$4) {
        return JAM.call(transition, null, [pos$$4, params], JAM.policy.p3);
      }
      params = JAM.call($$$1.splat, $$$1, [params], JAM.policy.p3);
      return JAM.call($$$1.extend, $$$1, [transition, {easeIn:v88, easeOut:v89, easeInOut:v90}], JAM.policy.p3);
    }
    var transitions = {Pow:v91, Expo:v92, Circ:v93, Sine:v94, Back:v95, Bounce:v96, Elastic:v97};
    JAM.call($$$1.each, $$$1, [transitions, v98], JAM.policy.p3);
    JAM.call($$$1.each, $$$1, [["Quad", "Cubic", "Quart", "Quint"], v100], JAM.policy.p3);
    return;
  }
  function v87(p$$2) {
    return p$$2;
  }
  function v86(tree$$5, action$$1) {
    JAM.call(this.eachLevel, this, [tree$$5, 0, Number.MAX_VALUE, action$$1], JAM.policy.p3);
    return;
  }
  function v85(tree$$4, initLevel, toLevel, action) {
    if (initLevel <= toLevel) {
      JAM.call(action, null, [tree$$4, initLevel], JAM.policy.p3);
      if (!tree$$4.children) {
        return;
      }
      var i$$23 = 0;
      var ch$$4 = tree$$4.children;
      var v8414 = i$$23 < ch$$4.length;
      for (;v8414;) {
        JAM.call(this.eachLevel, this, [ch$$4[i$$23], initLevel + 1, toLevel, action], JAM.policy.p3);
        i$$23++;
        v8414 = i$$23 < ch$$4.length;
      }
    }
    return;
  }
  function v84(tree$$3, id$$4) {
    if (tree$$3.id == id$$4) {
      return tree$$3;
    }
    var i$$22 = 0;
    var ch$$3 = tree$$3.children;
    var v14534 = ch$$3;
    if (v14534) {
      v14534 = i$$22 < ch$$3.length;
    }
    var v8419 = v14534;
    for (;v8419;) {
      var t = JAM.call(this.getSubtree, this, [ch$$3[i$$22], id$$4], JAM.policy.p3);
      if (t != null) {
        return t;
      }
      i$$22++;
      var v14535 = ch$$3;
      if (v14535) {
        v14535 = i$$22 < ch$$3.length;
      }
      v8419 = v14535;
    }
    return null;
  }
  function v83(tree$$2, id$$3) {
    if (tree$$2.id == id$$3) {
      return false;
    }
    var ch$$2 = tree$$2.children;
    var v14537 = ch$$2;
    if (v14537) {
      v14537 = ch$$2.length > 0;
    }
    if (v14537) {
      var i$$21 = 0;
      var v8423 = i$$21 < ch$$2.length;
      for (;v8423;) {
        if (ch$$2[i$$21].id == id$$3) {
          return tree$$2;
        } else {
          var ans$$2 = JAM.call(this.getParent, this, [ch$$2[i$$21], id$$3], JAM.policy.p3);
          if (ans$$2) {
            return ans$$2;
          }
        }
        i$$21++;
        v8423 = i$$21 < ch$$2.length;
      }
    }
    return false;
  }
  function v82(tree$$1, maxLevel) {
    function v81(elem$$12, i$$20) {
      var v14541 = i$$20 == maxLevel;
      if (v14541) {
        v14541 = elem$$12.children;
      }
      if (v14541) {
        delete elem$$12.children;
        elem$$12.children = [];
      }
      return;
    }
    JAM.call(this.each, this, [tree$$1, v81], JAM.policy.p3);
    return;
  }
  function v80() {
    function v79(properties$$2) {
      JAM.call(Class.inherit, Class, [proto$$1, properties$$2], JAM.policy.p3);
      return;
    }
    var proto$$1 = this.prototype;
    var v14542 = Array.prototype.slice;
    JAM.call($$$1.each, $$$1, [JAM.call(v14542.call, v14542, [arguments || []], JAM.policy.p3), v79], JAM.policy.p3);
    return this;
  }
  function v78(object$$3, name$$35, method$$1) {
    function override$$1() {
      var previous$$2 = this.parent;
      var v8427;
      if (parent$$1) {
        v8427 = parent$$1[name$$35];
      } else {
        v8427 = object$$3[name$$35];
      }
      this.parent = v8427;
      var value$$32 = JAM.call(method$$1.apply, method$$1, [this, arguments], JAM.policy.p3);
      this.parent = previous$$2;
      return value$$32;
    }
    var parent$$1 = Class.prototyping;
    var v14544 = parent$$1;
    if (v14544) {
      v14544 = object$$3[name$$35] != parent$$1[name$$35];
    }
    if (v14544) {
      parent$$1 = null;
    }
    JAM.set(object$$3, name$$35, override$$1, JAM.policy.p2);
    return;
  }
  function v77(object$$2, properties$$1) {
    var key$$22;
    for (key$$22 in properties$$1) {
      var override = properties$$1[key$$22];
      var previous$$1 = object$$2[key$$22];
      var type$$30 = JAM.call($$$1.type, $$$1, [override], JAM.policy.p3);
      var v14545 = previous$$1;
      if (v14545) {
        v14545 = type$$30 == "function";
      }
      if (v14545) {
        if (override != previous$$1) {
          JAM.call(Class.override, Class, [object$$2, key$$22, override], JAM.policy.p3);
        }
      } else {
        if (type$$30 == "object") {
          var v31219 = JAM.call($$$1.merge, $$$1, [previous$$1, override], JAM.policy.p3);
          JAM.set(object$$2, key$$22, v31219, JAM.policy.p2);
        } else {
          JAM.set(object$$2, key$$22, override, JAM.policy.p2);
        }
      }
    }
    return object$$2;
  }
  function v76(self$$1, klasses) {
    function v75(klass$$4) {
      Class.prototyping = klass$$4;
      var v8432;
      if (typeof klass$$4 == "function") {
        v8432 = new klass$$4;
      } else {
        v8432 = klass$$4;
      }
      var instance$$1 = v8432;
      var prop$$4;
      for (prop$$4 in instance$$1) {
        if (!(prop$$4 in self$$1)) {
          JAM.set(self$$1, prop$$4, instance$$1[prop$$4], JAM.policy.p2);
        }
      }
      delete Class.prototyping;
      return;
    }
    JAM.call($$$1.each, $$$1, [JAM.call($$$1.splat, $$$1, [klasses], JAM.policy.p3), v75], JAM.policy.p3);
    return self$$1;
  }
  function v74(e$$12) {
    if (e$$12.stopPropagation) {
      JAM.call(e$$12.stopPropagation, e$$12, [], JAM.policy.p3);
    }
    e$$12.cancelBubble = true;
    if (e$$12.preventDefault) {
      JAM.call(e$$12.preventDefault, e$$12, [], JAM.policy.p3);
    } else {
      e$$12.returnValue = false;
    }
    return;
  }
  function v73(e$$11, win$$1) {
    win$$1 = win$$1 || window;
    var v8437 = e$$11;
    if (!v8437) {
      v8437 = win$$1.event;
    }
    e$$11 = v8437;
    var doc = win$$1.document;
    var v8438 = doc.documentElement;
    if (!v8438) {
      v8438 = doc.body;
    }
    doc = v8438;
    var v14550 = e$$11.touches;
    if (v14550) {
      v14550 = e$$11.touches.length;
    }
    if (v14550) {
      e$$11 = e$$11.touches[0];
    }
    var v14551 = e$$11.pageX;
    if (!v14551) {
      v14551 = e$$11.clientX + doc.scrollLeft;
    }
    var v8441 = v14551;
    var v14552 = e$$11.pageY;
    if (!v14552) {
      v14552 = e$$11.clientY + doc.scrollTop;
    }
    var page = {x:v8441, y:v14552};
    return page;
  }
  function v72(e$$10) {
    var v8443 = e$$10.which == 3;
    if (!v8443) {
      v8443 = e$$10.button == 2;
    }
    return v8443;
  }
  function v71(e$$9) {
    var v8444;
    if (e$$9.wheelDelta) {
      v8444 = e$$9.wheelDelta / 120;
    } else {
      var v22441 = e$$9.detail;
      if (!v22441) {
        v22441 = 0;
      }
      v8444 = -v22441 / 3;
    }
    return v8444;
  }
  function v70(e$$8, win) {
    win = win || window;
    var v8445 = e$$8;
    if (!v8445) {
      v8445 = win.event;
    }
    return v8445;
  }
  function v69(elem$$9) {
    function getOffsets(elem$$10) {
      var position = {x:0, y:0};
      var v14560 = elem$$10;
      if (v14560) {
        v14560 = !JAM.call(/^(?:body|html)$/i.test, /^(?:body|html)$/i, [elem$$10.tagName], JAM.policy.p3);
      }
      var v8446 = v14560;
      for (;v8446;) {
        position.x = position.x + elem$$10.offsetLeft;
        position.y = position.y + elem$$10.offsetTop;
        elem$$10 = elem$$10.offsetParent;
        var v14565 = elem$$10;
        if (v14565) {
          v14565 = !JAM.call(/^(?:body|html)$/i.test, /^(?:body|html)$/i, [elem$$10.tagName], JAM.policy.p3);
        }
        v8446 = v14565;
      }
      return position;
    }
    function getScrolls(elem$$11) {
      var position$$1 = {x:0, y:0};
      var v14566 = elem$$11;
      if (v14566) {
        v14566 = !JAM.call(/^(?:body|html)$/i.test, /^(?:body|html)$/i, [elem$$11.tagName], JAM.policy.p3);
      }
      var v8447 = v14566;
      for (;v8447;) {
        position$$1.x = position$$1.x + elem$$11.scrollLeft;
        position$$1.y = position$$1.y + elem$$11.scrollTop;
        elem$$11 = elem$$11.parentNode;
        var v14571 = elem$$11;
        if (v14571) {
          v14571 = !JAM.call(/^(?:body|html)$/i.test, /^(?:body|html)$/i, [elem$$11.tagName], JAM.policy.p3);
        }
        v8447 = v14571;
      }
      return position$$1;
    }
    var offset$$8 = getOffsets(elem$$9);
    var scroll$$1 = getScrolls(elem$$9);
    return{x:offset$$8.x - scroll$$1.x, y:offset$$8.y - scroll$$1.y};
  }
  function v68(obj$$21, klass$$2) {
    var v8450 = obj$$21.className;
    var v31220 = JAM.call(v8450.replace, v8450, [new RegExp("(^|\\s)" + klass$$2 + "(?:\\s|$)"), "$1"], JAM.policy.p3);
    obj$$21.className = v31220;
    return;
  }
  function v67(obj$$20, klass$$1) {
    if (!JAM.call($$$1.hasClass, $$$1, [obj$$20, klass$$1], JAM.policy.p3)) {
      obj$$20.className = obj$$20.className + " " + klass$$1;
    }
    return;
  }
  function v66(obj$$19, klass) {
    var v14579 = " " + obj$$19.className + " ";
    return JAM.call(v14579.indexOf, v14579, [" " + klass + " "], JAM.policy.p3) > -1;
  }
  function v65(obj$$18, typeObj) {
    var type$$29;
    for (type$$29 in typeObj) {
      JAM.call($$$1.addEvent, $$$1, [obj$$18, type$$29, typeObj[type$$29]], JAM.policy.p3);
    }
    return;
  }
  function v64(obj$$17, type$$28, fn$$1) {
    if (obj$$17.addEventListener) {
      JAM.call(obj$$17.addEventListener, obj$$17, [type$$28, fn$$1, false], JAM.policy.p3);
    } else {
      JAM.call(obj$$17.attachEvent, obj$$17, ["on" + type$$28, fn$$1], JAM.policy.p3);
    }
    return;
  }
  function v63(elem$$8) {
    var ch$$1 = elem$$8.childNodes;
    var i$$19 = 0;
    var l$$6 = ch$$1.length;
    var v8459 = i$$19 < l$$6;
    for (;v8459;) {
      JAM.call($$$1.destroy, $$$1, [ch$$1[i$$19]], JAM.policy.p3);
      i$$19++;
      v8459 = i$$19 < l$$6;
    }
    return;
  }
  function v62(elem$$7) {
    JAM.call($$$1.clean, $$$1, [elem$$7], JAM.policy.p3);
    if (elem$$7.parentNode) {
      var v8460 = elem$$7.parentNode;
      JAM.call(v8460.removeChild, v8460, [elem$$7], JAM.policy.p3);
    }
    if (elem$$7.clearAttributes) {
      JAM.call(elem$$7.clearAttributes, elem$$7, [], JAM.policy.p3);
    }
    return;
  }
  function v61(hex$$1) {
    if (hex$$1.length != 7) {
      hex$$1 = JAM.call(hex$$1.match, hex$$1, [/^#?(\w{1,2})(\w{1,2})(\w{1,2})$/], JAM.policy.p3);
      JAM.call(hex$$1.shift, hex$$1, [], JAM.policy.p3);
      if (hex$$1.length != 3) {
        return null;
      }
      var rgb = [];
      var i$$18 = 0;
      var v8466 = i$$18 < 3;
      for (;v8466;) {
        var value$$31 = hex$$1[i$$18];
        if (value$$31.length == 1) {
          value$$31 = value$$31 + value$$31;
        }
        JAM.call(rgb.push, rgb, [parseInt(value$$31, 16)], JAM.policy.p3);
        i$$18++;
        v8466 = i$$18 < 3;
      }
      return rgb;
    } else {
      hex$$1 = parseInt(JAM.call(hex$$1.slice, hex$$1, [1], JAM.policy.p3), 16);
      return[hex$$1 >> 16, hex$$1 >> 8 & 255, hex$$1 & 255];
    }
    return;
  }
  function v60(srcArray, array$$12) {
    if (srcArray.length < 3) {
      return null;
    }
    var v19168 = srcArray.length == 4;
    if (v19168) {
      v19168 = srcArray[3] == 0;
    }
    var v14586 = v19168;
    if (v14586) {
      v14586 = !array$$12;
    }
    if (v14586) {
      return "transparent";
    }
    var hex = [];
    var i$$17 = 0;
    var v8476 = i$$17 < 3;
    for (;v8476;) {
      var v8474 = srcArray[i$$17] - 0;
      var bit = JAM.call(v8474.toString, v8474, [16], JAM.policy.p3);
      var v14588;
      if (bit.length == 1) {
        v14588 = "0" + bit;
      } else {
        v14588 = bit;
      }
      JAM.call(hex.push, hex, [v14588], JAM.policy.p3);
      i$$17++;
      v8476 = i$$17 < 3;
    }
    var v8477;
    if (array$$12) {
      v8477 = hex;
    } else {
      v8477 = "#" + JAM.call(hex.join, hex, [""], JAM.policy.p3);
    }
    return v8477;
  }
  function v59() {
    if (arguments.length === 0) {
      return[];
    }
    var j$$2 = 0;
    var ans$$1 = [];
    var l$$5 = arguments.length;
    var ml = arguments[0].length;
    var v8482 = j$$2 < ml;
    for (;v8482;) {
      var i$$16 = 0;
      var row = [];
      var v8481 = i$$16 < l$$5;
      for (;v8481;) {
        JAM.call(row.push, row, [arguments[i$$16][j$$2]], JAM.policy.p3);
        i$$16++;
        v8481 = i$$16 < l$$5;
      }
      JAM.call(ans$$1.push, ans$$1, [row], JAM.policy.p3);
      j$$2++;
      v8482 = j$$2 < ml;
    }
    return ans$$1;
  }
  function v58(object$$1) {
    var unlinked;
    switch(JAM.call($$$1.type, $$$1, [object$$1], JAM.policy.p3)) {
      case "object":
        unlinked = {};
        var p$$1;
        for (p$$1 in object$$1) {
          var v31221 = JAM.call($$$1.unlink, $$$1, [object$$1[p$$1]], JAM.policy.p3);
          JAM.set(unlinked, p$$1, v31221, JAM.policy.p2);
        }
        break;
      case "array":
        unlinked = [];
        var i$$15 = 0;
        var l$$4 = object$$1.length;
        var v8485 = i$$15 < l$$4;
        for (;v8485;) {
          var v31222 = JAM.call($$$1.unlink, $$$1, [object$$1[i$$15]], JAM.policy.p3);
          introspect(JAM.policy.p2) {
            unlinked[i$$15] = v31222;
          }
          i$$15++;
          v8485 = i$$15 < l$$4;
        }
        break;
      default:
        return object$$1;
    }
    return unlinked;
  }
  function v57() {
    var mix = {};
    var i$$14 = 0;
    var l$$3 = arguments.length;
    var v8489 = i$$14 < l$$3;
    for (;v8489;) {
      var object = arguments[i$$14];
      if (JAM.call($$$1.type, $$$1, [object], JAM.policy.p3) != "object") {
        i$$14++;
        v8489 = i$$14 < l$$3;
        continue;
      }
      var key$$20;
      for (key$$20 in object) {
        var op = object[key$$20];
        var mp = mix[key$$20];
        var v8488;
        var v22450 = mp;
        if (v22450) {
          v22450 = JAM.call($$$1.type, $$$1, [op], JAM.policy.p3) == "object";
        }
        var v19170 = v22450;
        if (v19170) {
          v19170 = JAM.call($$$1.type, $$$1, [mp], JAM.policy.p3) == "object";
        }
        if (v19170) {
          v8488 = JAM.call($$$1.merge, $$$1, [mp, op], JAM.policy.p3);
        } else {
          v8488 = JAM.call($$$1.unlink, $$$1, [op], JAM.policy.p3);
        }
        JAM.set(mix, key$$20, v8488, JAM.policy.p2);
      }
      i$$14++;
      v8489 = i$$14 < l$$3;
    }
    return mix;
  }
  function v56(array$$11, f$$1, opt$$1) {
    var l$$2 = array$$11.length;
    if (l$$2 == 0) {
      return opt$$1;
    }
    var v8491;
    if (arguments.length == 3) {
      v8491 = opt$$1;
    } else {
      v8491 = array$$11[l$$2 = l$$2 - 1];
    }
    var acum = v8491;
    var v8493 = l$$2;
    l$$2 = l$$2 - 1;
    for (;v8493;) {
      acum = JAM.call(f$$1, null, [acum, array$$11[l$$2]], JAM.policy.p3);
      v8493 = l$$2;
      l$$2 = l$$2 - 1;
    }
    return acum;
  }
  function v55(array$$10, f) {
    function v54(elem$$6, i$$13) {
      JAM.call(ans.push, ans, [JAM.call(f, null, [elem$$6, i$$13], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    var ans = [];
    JAM.call($$$1.each, $$$1, [array$$10, v54], JAM.policy.p3);
    return ans;
  }
  function v53(array$$9, item) {
    if (Array.indexOf) {
      return JAM.call(array$$9.indexOf, array$$9, [item], JAM.policy.p3);
    }
    var i$$12 = 0;
    var l$$1 = array$$9.length;
    var v8497 = i$$12 < l$$1;
    for (;v8497;) {
      if (array$$9[i$$12] === item) {
        return i$$12;
      }
      i$$12++;
      v8497 = i$$12 < l$$1;
    }
    return-1;
  }
  function v52(iterable, fn) {
    var type$$27 = JAM.call($$$1.type, $$$1, [iterable], JAM.policy.p3);
    if (type$$27 == "object") {
      var key$$19;
      for (key$$19 in iterable) {
        JAM.call(fn, null, [iterable[key$$19], key$$19], JAM.policy.p3);
      }
    } else {
      var i$$11 = 0;
      var l = iterable.length;
      var v8500 = i$$11 < l;
      for (;v8500;) {
        JAM.call(fn, null, [iterable[i$$11], i$$11], JAM.policy.p3);
        i$$11++;
        v8500 = i$$11 < l;
      }
    }
    return;
  }
  function v51(elem$$5) {
    var v22452 = $$$1.type.s;
    var v19172 = JAM.call(v22452.call, v22452, [elem$$5], JAM.policy.p3);
    var v8502 = JAM.call(v19172.match, v19172, [/^\[object\s(.*)\]$/], JAM.policy.p3)[1];
    var type$$26 = JAM.call(v8502.toLowerCase, v8502, [], JAM.policy.p3);
    if (type$$26 != "object") {
      return type$$26;
    }
    var v14598 = elem$$5;
    if (v14598) {
      v14598 = elem$$5.$$family;
    }
    if (v14598) {
      return elem$$5.$$family;
    }
    var v8505;
    var v22453 = elem$$5;
    if (v22453) {
      v22453 = elem$$5.nodeName;
    }
    var v19173 = v22453;
    if (v19173) {
      v19173 = elem$$5.nodeType == 1;
    }
    if (v19173) {
      v8505 = "element";
    } else {
      v8505 = type$$26;
    }
    return v8505;
  }
  function v50(obj$$16) {
    var type$$25 = JAM.call($$$1.type, $$$1, [obj$$16], JAM.policy.p3);
    var v8506;
    if (type$$25) {
      var v14600;
      if (type$$25 != "array") {
        v14600 = [obj$$16];
      } else {
        v14600 = obj$$16;
      }
      v8506 = v14600;
    } else {
      v8506 = [];
    }
    return v8506;
  }
  function v49() {
    return+new Date;
  }
  function v48(value$$30) {
    function v47() {
      return value$$30;
    }
    var v8508;
    if (typeof value$$30 == "function") {
      v8508 = value$$30;
    } else {
      v8508 = v47;
    }
    return v8508;
  }
  function v46(original, extended) {
    var key$$18;
    for (key$$18 in extended || {}) {
      JAM.set(original, key$$18, extended[key$$18], JAM.policy.p2);
    }
    return original;
  }
  function v45() {
    return;
  }
  function v44(w$$5) {
    w$$5 = w$$5 || window;
    var k;
    for (k in $jit) {
      if ($jit[k].$extend) {
        JAM.set(w$$5, k, $jit[k], JAM.policy.p2);
      }
    }
    return;
  }
  function Complex(x$$60, y$$41) {
    this.x = x$$60 || 0;
    this.y = y$$41 || 0;
    return;
  }
  function Polar(theta, rho$$1) {
    this.theta = theta || 0;
    this.rho = rho$$1 || 0;
    return;
  }
  function Options() {
    var args = arguments;
    var i$$25 = 0;
    var l$$7 = args.length;
    var ans$$3 = {};
    var v8514 = i$$25 < l$$7;
    for (;v8514;) {
      var opt$$4 = Options[args[i$$25]];
      if (opt$$4.$extend) {
        JAM.call($$$1.extend, $$$1, [ans$$3, opt$$4], JAM.policy.p3);
      } else {
        JAM.set(ans$$3, args[i$$25], opt$$4, JAM.policy.p2);
      }
      i$$25++;
      v8514 = i$$25 < l$$7;
    }
    return ans$$3;
  }
  function Class(properties) {
    function klass$$3() {
      var key$$21;
      for (key$$21 in this) {
        if (typeof this[key$$21] != "function") {
          var v31223 = JAM.call($$$1.unlink, $$$1, [this[key$$21]], JAM.policy.p3);
          JAM.set(this, key$$21, v31223, JAM.policy.p2);
        }
      }
      this.constructor = klass$$3;
      if (Class.prototyping) {
        return this;
      }
      var v8518;
      if (this.initialize) {
        var v14604 = this.initialize;
        v8518 = JAM.call(v14604.apply, v14604, [this, arguments], JAM.policy.p3);
      } else {
        v8518 = this;
      }
      var instance = v8518;
      this.$$family = "class";
      return instance;
    }
    properties = properties || {};
    var mutator;
    for (mutator in Class.Mutators) {
      if (!properties[mutator]) {
        continue;
      }
      var v8520 = Class.Mutators;
      properties = JAM.call(v8520[mutator], v8520, [properties, properties[mutator]], JAM.policy.p3);
      delete properties[mutator];
    }
    JAM.call($$$1.extend, $$$1, [klass$$3, this], JAM.policy.p3);
    klass$$3.constructor = Class;
    klass$$3.prototype = properties;
    return klass$$3;
  }
  function $$$1(d) {
    return JAM.call(document.getElementById, document, [d], JAM.policy.p3);
  }
  this.$jit = v44;
  $jit.version = "2.0.1";
  $$$1.empty = v45;
  $$$1.extend = v46;
  $$$1.lambda = v48;
  var v8523 = Date.now;
  if (!v8523) {
    v8523 = v49;
  }
  $$$1.time = v8523;
  $$$1.splat = v50;
  $$$1.type = v51;
  $$$1.type.s = Object.prototype.toString;
  $$$1.each = v52;
  $$$1.indexOf = v53;
  $$$1.map = v55;
  $$$1.reduce = v56;
  $$$1.merge = v57;
  $$$1.unlink = v58;
  $$$1.zip = v59;
  $$$1.rgbToHex = v60;
  $$$1.hexToRgb = v61;
  $$$1.destroy = v62;
  $$$1.clean = v63;
  $$$1.addEvent = v64;
  $$$1.addEvents = v65;
  $$$1.hasClass = v66;
  $$$1.addClass = v67;
  $$$1.removeClass = v68;
  $$$1.getPos = v69;
  $$$1.event = {get:v70, getWheel:v71, isRightClick:v72, getPos:v73, stop:v74};
  $jit.util = $jit.id = $$$1;
  Class.Mutators = {Implements:v76};
  JAM.call($$$1.extend, $$$1, [Class, {inherit:v77, override:v78}], JAM.policy.p3);
  Class.prototype.implement = v80;
  $jit.Class = Class;
  $jit.json = {prune:v82, getParent:v83, getSubtree:v84, eachLevel:v85, each:v86};
  $jit.Trans = {$extend:true, linear:v87};
  var Trans = $jit.Trans;
  v101();
  var Animation = new Class({initialize:v102, setOptions:v103, step:v104, start:v105, startTimer:v107, pause:v108, resume:v109, stopTimer:v110, check:v111});
  Options.Canvas = {$extend:true, injectInto:"id", type:"2D", width:false, height:false, useCanvas:false, withLabels:true, background:false, Scene:{Lighting:{enable:false, ambient:[1, 1, 1], directional:{direction:{x:-100, y:-100, z:-100}, color:[.5, .3, .1]}}}};
  Options.Tree = {$extend:true, orientation:"left", subtreeOffset:8, siblingOffset:5, indent:10, multitree:false, align:"center"};
  Options.PhyloJive = {$extend:true, alignName:false, lateralise:false, collapsedXOffset:25, branchLength:true, levelDistance:40, branchMultiplier:1, initCharacter:false, firstCharacter:false, presentClade:$$$1.empty, onPresentClade:$$$1.empty, rangeCount:10, shapes:["box", "star", "square"], color:["BlueViolet", "Brown", "CadetBlue", "Coral", "CornflowerBlue", "Crimson", "DarkCyan", "DarkGoldenrod", "DarkGreen", "DarkKhaki", "DarkOlive Green", "DarkOrange", "DarkRed", "DarkSalmon", "DarkSlateBlue", 
  "DarkSlateGray", "DarkViolet", "DeepPink", "DimGray", "DodgerBlue"], typeEnum:{quant:0, quali:1}, quantColor:["#00FFFF", "#00DDFF", "#00BBFF", "#0099FF", "#0088FF", "#0077FF", "#0055FF", "#0044FF", "#0022FF", "#0000FF"], quantShape:"quant", selectedCharacters:[]};
  Options.Node = {$extend:false, overridable:false, type:"circle", color:"#ccb", alpha:1, dim:3, height:20, width:90, autoHeight:false, autoWidth:false, lineWidth:1, transform:true, align:"center", angularWidth:1, span:1, CanvasStyles:{}};
  Options.Edge = {$extend:false, overridable:false, type:"line", color:"#ccb", lineWidth:1, dim:15, alpha:1, epsilon:7, CanvasStyles:{}};
  Options.Fx = {$extend:true, fps:40, duration:2500, transition:$jit.Trans.Quart.easeInOut, clearCanvas:true};
  Options.Label = {$extend:false, overridable:false, type:"HTML", style:" ", size:10, family:"sans-serif", textAlign:"center", textBaseline:"alphabetic", color:"#fff"};
  Options.Tips = {$extend:false, enable:false, type:"auto", offsetX:20, offsetY:20, force:false, onShow:$$$1.empty, onHide:$$$1.empty};
  Options.NodeStyles = {$extend:false, enable:false, type:"auto", stylesHover:false, stylesClick:false};
  Options.Events = {$extend:false, enable:false, enableForEdges:false, type:"auto", onClick:$$$1.empty, onRightClick:$$$1.empty, onMouseMove:$$$1.empty, onMouseEnter:$$$1.empty, onMouseLeave:$$$1.empty, onDragStart:$$$1.empty, onDragMove:$$$1.empty, onDragCancel:$$$1.empty, onDragEnd:$$$1.empty, onTouchStart:$$$1.empty, onTouchMove:$$$1.empty, onTouchEnd:$$$1.empty, onMouseWheel:$$$1.empty};
  Options.Navigation = {$extend:false, enable:false, type:"auto", panning:false, zooming:false};
  Options.Controller = {$extend:true, onBeforeCompute:$$$1.empty, onAfterCompute:$$$1.empty, onCreateLabel:$$$1.empty, onPlaceLabel:$$$1.empty, onComplete:$$$1.empty, onBeforePlotLine:$$$1.empty, onAfterPlotLine:$$$1.empty, onBeforePlotNode:$$$1.empty, onAfterPlotNode:$$$1.empty, onBeforeRemoveNode:$$$1.empty, request:false};
  var ExtrasInitializer = {initialize:v112, initializePost:$$$1.empty, setAsProperty:JAM.call($$$1.lambda, $$$1, [false], JAM.policy.p3), isEnabled:v113, isLabel:v114, isDescendantOf:v115};
  var EventsInterface = {onMouseUp:$$$1.empty, onMouseDown:$$$1.empty, onMouseMove:$$$1.empty, onMouseOver:$$$1.empty, onMouseOut:$$$1.empty, onMouseWheel:$$$1.empty, onTouchStart:$$$1.empty, onTouchMove:$$$1.empty, onTouchEnd:$$$1.empty, onTouchCancel:$$$1.empty};
  var MouseEventsManager = new Class({initialize:v116, attachEvents:v125, register:v126, handleEvent:v127, makeEventObject:v132});
  var Extras = {initializeExtras:v134};
  Extras.Classes = {};
  var v8574 = Extras.Classes;
  var v31224 = new Class({Implements:[ExtrasInitializer, EventsInterface], initializePost:v135, setAsProperty:JAM.call($$$1.lambda, $$$1, [true], JAM.policy.p3), onMouseUp:v136, onMouseOut:v137, onMouseOver:v138, onMouseMove:v139, onMouseWheel:v140, onMouseDown:v141, onTouchStart:v142, onTouchMove:v143, onTouchEnd:v144});
  v8574.Events = v31224;
  var v8575 = Extras.Classes;
  var v31225 = new Class({Implements:[ExtrasInitializer, EventsInterface], initializePost:v145, setAsProperty:JAM.call($$$1.lambda, $$$1, [true], JAM.policy.p3), onMouseOut:v146, onMouseOver:v147, onMouseMove:v148, setTooltipPosition:v149, hide:v150});
  v8575.Tips = v31225;
  var v8576 = Extras.Classes;
  var v31226 = new Class({Implements:[ExtrasInitializer, EventsInterface], initializePost:v151, onMouseOut:v152, onMouseOver:v153, onMouseDown:v154, onMouseUp:v155, getRestoredStyles:v156, toggleStylesOnHover:v157, toggleStylesOnClick:v158, toggleStylesOn:v159, onClick:v161, onMouseMove:v163});
  v8576.NodeStyles = v31226;
  var v8577 = Extras.Classes;
  var v31227 = new Class({Implements:[ExtrasInitializer, EventsInterface], initializePost:v164, onMouseWheel:v165, onMouseDown:v166, onMouseMove:v167, onMouseUp:v168});
  v8577.Navigation = v31227;
  var Canvas;
  v200();
  $jit.Polar = Polar;
  Polar.prototype = {getc:v201, getp:v202, set:v203, setc:v204, setp:v205, clone:v206, toComplex:v207, add:v208, scale:v209, equals:v210, $add:v211, $madd:v212, $scale:v213, isZero:v214, interpolate:v215};
  var v8578 = Polar;
  var v31228 = new Polar(0, 0);
  v8578.KER = v31228;
  $jit.Complex = Complex;
  Complex.prototype = {getc:v216, getp:v217, set:v218, setc:v219, setp:v220, clone:v221, toPolar:v222, norm:v223, squaredNorm:v224, add:v225, prod:v226, conjugate:v227, scale:v228, equals:v229, $add:v230, $prod:v231, $conjugate:v232, $scale:v233, $div:v234, isZero:v235};
  var v8579 = Complex;
  var v31229 = new Complex(0, 0);
  v8579.KER = v31229;
  var v8580 = Complex;
  var v31230 = new Complex(0, 1);
  v8580.IM = v31230;
  var v8581 = $jit;
  var v31231 = new Class({initialize:v239, getNode:v240, get:v241, getByName:v242, getAdjacence:v243, addNode:v244, addAdjacence:v245, removeNode:v246, removeAdjacence:v247, hasNode:v248, empty:v249});
  v8581.Graph = v31231;
  var Graph = $jit.Graph;
  var Accessors;
  v263();
  var v8582 = Graph;
  var v31232 = new Class({initialize:v264, adjacentTo:v265, getAdjacency:v266, getPos:v267, setPos:v268});
  v8582.Node = v31232;
  var v8583 = Graph.Node;
  JAM.call(v8583.implement, v8583, [Accessors], JAM.policy.p3);
  var v8584 = Graph;
  var v31233 = new Class({initialize:v269});
  v8584.Adjacence = v31233;
  var v8585 = Graph.Adjacence;
  JAM.call(v8585.implement, v8585, [Accessors], JAM.policy.p3);
  Graph.Util = {filter:v272, getNode:v273, eachNode:v274, each:v275, eachAdjacency:v276, computeLevels:v279, eachBFS:v281, eachLevel:v283, eachSubgraph:v284, eachSubnode:v285, anySubnode:v288, getSubnodes:v290, getParents:v292, isDescendantOf:v293, clean:v295, getClosestNodeToOrigin:v296, getClosestNodeToPos:v298};
  JAM.call($$$1.each, $$$1, [["get", "getNode", "each", "eachNode", "computeLevels", "eachBFS", "clean", "getClosestNodeToPos", "getClosestNodeToOrigin"], v300], JAM.policy.p3);
  JAM.call($$$1.each, $$$1, [["eachAdjacency", "eachLevel", "eachSubgraph", "eachSubnode", "anySubnode", "getSubnodes", "getParents", "isDescendantOf"], v302], JAM.policy.p3);
  Graph.Op = {options:{type:"nothing", duration:2E3, hideLabels:true, fps:30}, initialize:v303, removeNode:v309, removeEdge:v315, sum:v321, morph:v335, contract:v338, expand:v340, preprocessSum:v344};
  var NodeHelper = {"none":{"render":$$$1.empty, "contains":JAM.call($$$1.lambda, $$$1, [false], JAM.policy.p3)}, "circle":{"render":v345, "contains":v346}, "ellipse":{"render":v347, "contains":v348}, "square":{"render":v349, "contains":v350}, "rectangle":{"render":v351, "contains":v352}, "triangle":{"render":v353, "contains":v354}, "star":{"render":v355, "contains":v356}};
  var EdgeHelper = {"line":{"render":v357, "contains":v358}, "arrow":{"render":v359, "contains":v360}, "hyperline":{"render":v361, "contains":JAM.call($$$1.lambda, $$$1, [false], JAM.policy.p3)}};
  Graph.Plot = {initialize:v362, nodeHelper:NodeHelper, edgeHelper:EdgeHelper, Interpolator:{"map":{"border":"color", "color":"color", "width":"number", "height":"number", "dim":"number", "alpha":"number", "lineWidth":"number", "angularWidth":"number", "span":"number", "valueArray":"array-number", "dimArray":"array-number", "vertices":"polygon"}, "canvas":{"globalAlpha":"number", "fillStyle":"color", "strokeStyle":"color", "lineWidth":"number", "shadowBlur":"number", "shadowColor":"color", "shadowOffsetX":"number", 
  "shadowOffsetY":"number", "miterLimit":"number"}, "label":{"size":"number", "color":"color"}, "compute":v363, "moebius":v364, "linear":v365, "polar":v366, "number":v367, "color":v368, "array-number":v369, "node":v370, "edge":v371, "node-property":v372, "edge-property":v373, "label-property":v374, "node-style":v375, "edge-style":v376, "polygon":v378}, sequence:v380, prepare:v385, animate:v389, nodeFx:v392, plot:v395, plotTree:v397, plotNode:v398, plotLine:v399};
  var v8600 = Graph;
  var v31234 = JAM.call($$$1.merge, $$$1, [Graph.Plot, {Interpolator:{"linear":v400}, plotNode:v402, plotLine:v404, plotElement:v405}], JAM.policy.p3);
  v8600.Plot3D = v31234;
  Graph.Label = {};
  var v8601 = Graph.Label;
  var v31235 = new Class({initialize:v406, plotLabel:v407, renderLabel:v408, hideLabel:v410, hideLabels:$$$1.empty});
  v8601.Native = v31235;
  var v8602 = Graph.Label;
  var v31236 = new Class({labelsHidden:false, labelContainer:false, labels:{}, getLabelContainer:v411, getLabel:v412, hideLabels:v413, clearLabels:v414, disposeLabel:v415, hideLabel:v417, fitsInCanvas:v418});
  v8602.DOM = v31236;
  var v8603 = Graph.Label;
  var v31237 = new Class({Implements:Graph.Label.DOM, plotLabel:v419});
  v8603.HTML = v31237;
  var v8604 = Graph.Label;
  var v31238 = new Class({Implements:Graph.Label.DOM, plotLabel:v420});
  v8604.SVG = v31238;
  var v8605 = Graph;
  var v31239 = new Class({initialize:v421, translate:v424, setRightLevelToShow:v426, getRightLevelToShow:v427});
  v8605.Geom = v31239;
  var Loader = {construct:v430, loadJSON:v431, toJSON:v435};
  var Layouts = $jit.Layouts = {};
  var NodeDim = {label:null, compute:v437, initializeLabel:v438, setLabelStyles:v439};
  var v8606 = Layouts;
  var v31240 = v449();
  v8606.PhyloJive = v31240;
  var v8607 = $jit;
  var v31241 = v539();
  v8607.Phylo = v31241;
  $jit.Phylo.$extend = true;
  var v8609 = $jit.Phylo;
  var v31242 = new Class({Implements:Graph.Op});
  v8609.Op = v31242;
  var v8610 = $jit.Phylo;
  var v31243 = new Class({initialize:v540, requestNodes:v542, contract:v545, hide:v548, expand:v551, show:v555, prepare:v556, getNodesWithChildren:v558, plotStep:v561, getSiblings:v564});
  v8610.Group = v31243;
  var v8611 = $jit.Phylo;
  var v31244 = new Class({Implements:Graph.Geom, switchOrientation:v565, dispatch:v566, getSize:v567, getTreeBaseSize:v569, getEdge:v571, getScaledTreePosition:v573, treeFitsInCanvas:v575});
  v8611.Geom = v31244;
  Graph.Util.eachAdjacency = v577;
  Graph.Plot.plotTree = v579;
  var v8614 = $jit.Phylo;
  var v31245 = new Class({Implements:Graph.Plot, plotSubtree:v581, getAlignedPos:v582, getOrientation:v583});
  v8614.Plot = v31245;
  $jit.Phylo.Label = {};
  var v8616 = $jit.Phylo.Label;
  var v31246 = new Class({Implements:Graph.Label.Native, renderLabel:v584});
  v8616.Native = v31246;
  var v8617 = $jit.Phylo.Label;
  var v31247 = new Class({Implements:Graph.Label.DOM, placeLabel:v585});
  v8617.DOM = v31247;
  var v8618 = $jit.Phylo.Label;
  var v31248 = new Class({Implements:[$jit.Phylo.Label.DOM, Graph.Label.SVG], initialize:v586});
  v8618.SVG = v31248;
  var v8619 = $jit.Phylo.Label;
  var v31249 = new Class({Implements:[$jit.Phylo.Label.DOM, Graph.Label.HTML], initialize:v587});
  v8619.HTML = v31249;
  var v8620 = $jit.Phylo.Plot;
  var v31250 = new Class({"none":{"render":$$$1.empty, "contains":JAM.call($$$1.lambda, $$$1, [false], JAM.policy.p3)}, "circle":{"render":v588, "contains":v589}, "square":{"render":v590, "contains":v591}, "ellipse":{"render":v592, "contains":v593}, "rectangle":{"render":v594, "contains":v595}, "triangle":{"render":v596, "contains":v597}});
  v8620.NodeTypes = v31250;
  var v8621 = $jit.Phylo.Plot;
  var v31251 = new Class({"none":$$$1.empty, "line":{"render":v598, "contains":v599}, "arrow":{"render":v600, "contains":v601}, "quadratic:begin":{"render":v602}, "quadratic:end":{"render":v603}, "bezier":{"render":v604}, "rectangular":{"render":v605, "contains":v606}});
  v8621.EdgeTypes = v31251;
  var v8622 = Extras.Classes.Navigation;
  JAM.call(v8622.implement, v8622, [{onMouseWheel:v607}], JAM.policy.p3);
  Graph.Util.computeLevels = v610;
  NodeHelper.triangle = {render:v611, contains:v612};
  var v8625 = window.CanvasRenderingContext2D;
  if (v8625) {
    v8625 = CanvasRenderingContext2D.prototype;
  }
  var CP = v8625;
  var v14648 = CP;
  if (v14648) {
    v14648 = CP.lineTo;
  }
  if (v14648) {
    CP.dashedLine = v613;
  }
  return;
}
function v43() {
  function v42() {
    return;
  }
  function v41(newickTree) {
    if (typeof newickTree === "undefined") {
      alert("tree is not defined.");
      return;
    }
    var json;
    var legendElem;
    JAM.call(Smits.NewickParse, Smits, [newickTree], JAM.policy.p3);
    var v8628 = JAM.call(Smits.getRoot, Smits, [], JAM.policy.p3);
    var v31252 = JAM.call(v8628.json, v8628, [], JAM.policy.p3);
    this.tree = v31252;
    JAM.call(st.loadJSON, st, [this.tree], JAM.policy.p3);
    JAM.call(st.compute, st, [], JAM.policy.p3);
    st.config.initCharacter = false;
    legendElem = JAM.call($jit.id, $jit, ["legend"], JAM.policy.p3);
    if (st.character) {
      var v8631 = JAM.call(st.colorCharacter, st, [], JAM.policy.p3);
      if (!v8631) {
        v8631 = "";
      }
      html = v8631;
      var v8632 = JAM.call(jQuery, null, ["#legendBody"], JAM.policy.p3);
      JAM.call(v8632.html, v8632, [html], JAM.policy.p3);
      legendElem.style.display = "inline";
      JAM.call(updateCharacter, null, [st.characterList]);
    } else {
      legendElem.style.display = "none";
    }
    JAM.call(st.onClick, st, [st.root], JAM.policy.p3);
    JAM.call(st.fitScreen, st, [], JAM.policy.p3);
    return;
  }
  var tree;
  var character$$1;
  return{drawTree:v41, drawCharacter:v42};
}
function v40() {
  var rightContainer = JAM.call($jit.id, $jit, ["right-jitcontainer"], JAM.policy.p3);
  JAM.set(rightContainer, "innerHTML", rightContainer.innerHTML + '<div id="tabs"><ul><li><a href="#tabAction">Action</a></li><li><a href="#tabCharacter">Character</a></li><li><a href="#tabLegend">Legend</a></li><li><a href="#tabSearch">Search</a></li><li><a href="#tabInput">Input</a></li></ul>  <div id="tabCharacter"><h4>Select Character</h4><p><label>Select: </label><br/><label id="characterSelection">First Characters: <select id="firstCharacter" onChange="onSetCharacter ( )"> </select><br/>Second Chracter: <select id ="secondCharacter" onChange="onSetCharacter ( )"></select><br/>Third Chracter: <select id ="thirdCharacter" onChange="onSetCharacter ( )"></select></label></p></div><div id ="tabAction"><h4>Actions</h4><p><table><tr><td>Node Actions</td></tr><tr><td>Select</td><td><input id="selectClade" name="options" type="radio" checked /><tr><td>Expand / Collapse</td><td><div id="expandDiv"><input id = "expand" name="options" type="radio" /></div></td></tr><tr><td>Rotate</td><td><div id="rotateDiv"><input id = "rotate" name="options" type="radio" /></div></td></tr><tr><td>Set Root</td><td><input id = "setRoot" name="options" type = "radio" onclick = "onSetRoot ( this );"/></td></tr>\x3c!--<tr><td>Get Characters</td><td><input id = "character" name="options" type = "radio" onclick = "onGetCharacter ( this );"/></td></tr>--\x3e</table><br/><table><tr><td>Tree Actions</td></tr><tr><td>Align Names</td><td><div id="settings"><input id="alignName" type="checkbox"  onclick="onClickAlign ( this )"/></div></td></tr><tr><td>Ladderize</td><td><input id = "lateralise"  checked type = "checkbox" onclick = "onLateralise ( this );"/></td></tr><tr><td>Animate</td><td><input id="animate" type="checkbox" checked onClick = "onAnimate( this )"/></td></tr><tr><td>Branch Length</td><td><input id="branchLength" type="checkbox" checked onClick = "onBranchLength( this )"/></td></tr><tr><td>Length Multiplier</td><td><label><input id="branchMultiplier" name="multiply" type="radio" onClick = "onBranchMultiply( 0.1 )"/>x0.1</label> <label><input name="multiply" id="branchMultiplier" type="radio" onClick = "onBranchMultiply( 1 )"/>x1</label> <label><input id="branchMultiplier" name="multiply" type="radio" checked onClick = "onBranchMultiply( 5 )"/>x5</label></td></tr>\x3c!--<tr><td>Selected Nodes</td><td><div id="selected"></div></td></tr>--\x3e</table></p></div><div id="tabLegend"><h4>Legend</h4><p><table id ="legend"><tbody id = "legendBody"><tr><th>Legend:</th><td></td></tr></tbody></table></p></div><div id="tabSearch"><h4>Search</h4><p><table><tr><td>Search:</td><td><input id="searchString" type="text" size="15" /></td><tr><td></td><td><input class ="foswikiButton" type="submit" id="next" value="next"/><input type="submit" id="previous" class ="foswikiButton" value="previous"/></td></tr></table></p></div><div id="tabInput"><h4>Input Tree</h4><p><table><tr><td>Input Tree:</td><td><textarea id="newickTree" size="15"></textarea></td></tr><tr><td></td><td><input id="renderTree" type="submit" value="Render" onclick="onRender ( this )"/></td></tr></table></p></div></div>');
  var v8638 = JAM.call(jQuery, null, ["#tabs"], JAM.policy.p3);
  JAM.call(v8638.tabs, v8638, [], JAM.policy.p3);
  return;
}
function v39(character) {
  if (!character) {
    return;
  }
  var options$$1 = "";
  var unselected = "";
  var i$$2;
  var name$$30;
  var v8640 = st.config.selectedCharacters[0];
  if (!v8640) {
    v8640 = false;
  }
  var selectedfirst = v8640;
  var v8641 = st.config.selectedCharacters[0];
  if (!v8641) {
    v8641 = false;
  }
  var first$$1 = v8641;
  var v8642 = st.config.selectedCharacters[1];
  if (!v8642) {
    v8642 = false;
  }
  var second = v8642;
  var v8643 = st.config.selectedCharacters[2];
  if (!v8643) {
    v8643 = false;
  }
  var third = v8643;
  var select1 = "";
  var select2 = "";
  var select3 = "";
  i$$2 = 0;
  var v8648 = i$$2 < character.length;
  for (;v8648;) {
    var opt1 = "";
    var opt2 = "";
    var opt3 = "";
    var v14661 = first$$1 !== false;
    if (v14661) {
      v14661 = first$$1 === character[i$$2];
    }
    if (v14661) {
      opt1 = 'selected="selected"';
    }
    var v14662 = second !== false;
    if (v14662) {
      v14662 = second === character[i$$2];
    }
    if (v14662) {
      opt2 = 'selected="selected"';
    }
    var v14663 = third !== false;
    if (v14663) {
      v14663 = third === character[i$$2];
    }
    if (v14663) {
      opt3 = 'selected="selected"';
    }
    var v8647 = character[i$$2];
    name$$30 = JAM.call(v8647.replace, v8647, [/_/g, " "], JAM.policy.p3);
    select1 = select1 + ("<option " + opt1 + ' value="' + character[i$$2] + '" >' + name$$30 + "</option>");
    select2 = select2 + ("<option " + opt2 + ' value="' + character[i$$2] + '" >' + name$$30 + "</option>");
    select3 = select3 + ("<option " + opt3 + ' value="' + character[i$$2] + '" >' + name$$30 + "</option>");
    i$$2 = i$$2 + 1;
    v8648 = i$$2 < character.length;
  }
  if (select2) {
    select2 = '<option value=""> Please select </option>' + select2;
  }
  if (select3) {
    select3 = '<option value=""> Please select </option>' + select3;
  }
  var v8649 = JAM.call(jQuery, null, ["#firstCharacter"], JAM.policy.p3);
  JAM.call(v8649.html, v8649, [select1], JAM.policy.p3);
  var v8650 = JAM.call(jQuery, null, ["#secondCharacter"], JAM.policy.p3);
  JAM.call(v8650.html, v8650, [select2], JAM.policy.p3);
  var v8651 = JAM.call(jQuery, null, ["#thirdCharacter"], JAM.policy.p3);
  JAM.call(v8651.html, v8651, [select3], JAM.policy.p3);
  return;
}
function v38(opt) {
  function v37() {
    JAM.call(toggleScreen, null, [this]);
    return;
  }
  function $E(tag, props$$1) {
    var elem$$1 = JAM.call(document.createElement, document, [tag], JAM.policy.p3);
    var p;
    for (p in props$$1) {
      if (typeof props$$1[p] == "object") {
        var v8652 = $jit.util;
        JAM.call(v8652.extend, v8652, [elem$$1[p], props$$1[p]], JAM.policy.p3);
      } else {
        JAM.set(elem$$1, p, props$$1[p], JAM.policy.p2);
      }
    }
    return elem$$1;
  }
  opt.codeBase = "";
  var popupHTML = '<div id="popup-close" style="position:relative; width:100%; background-color:lightblue"><a href="#" onclick="this.parentNode.parentNode.style.display=\'none\';" onmouseover="this.style.cursor=\'pointer\';" class="ui-dialog-titlebar-close ui-corner-all" role="button"><span class="ui-icon ui-icon-closethick">close</span></a></div><div id="popup-text"></div>';
  var navHTML = '<div style="position:relative"><div id="panup" style="position: absolute; left: 13px; top: 4px; width: 18px; height: 18px; cursor: pointer;"><img id="north" src="' + opt.codeBase + 'resources/north-mini.png" /></div><div id="panleft" style="position: absolute; left: 4px; top: 22px; width: 18px; height: 18px; cursor: pointer;"><img id="west" src="' + opt.codeBase + 'resources/west-mini.png" /></div><div id="panright" style="position: absolute; left: 22px; top: 22px; width: 18px; height: 18px; cursor: pointer;"><img id="east" src="' + 
  opt.codeBase + 'resources/east-mini.png" /></div><div id="pandown" style="position: absolute; left: 13px; top: 40px; width: 18px; height: 18px; cursor: pointer;"><img id="south" src="' + opt.codeBase + 'resources/south-mini.png" /></div><div id="zoomout" style="position: absolute; left: 13px; top: 99px; width: 18px; height: 18px; cursor: pointer;"><img id="zoomOUT" src="' + opt.codeBase + 'resources/zoom-minus-mini.png" /></div><div id="zoomworld" style="position: absolute; left: 13px; top: 81px; width: 18px; height: 18px; cursor: pointer;"><img id="world" style="position: relative; width: 18px; height: 18px;" src="' + 
  opt.codeBase + 'resources/zoom-world-mini.png"></div><div id="zoomin" style="position: absolute; left: 13px; top: 63px; width: 18px; height: 18px; cursor: pointer;"><img id="zoomIN" src="' + opt.codeBase + 'resources/zoom-plus-mini.png" /></div><div style="position:absolute;left:-50px;top:123px;width:130px"> Status: <span id="log"></span></div></div>';
  var jitcontainer;
  var rightJitContainer;
  var centerJitContainer;
  var v8657;
  if (typeof opt.injectInto == "string") {
    v8657 = opt.injectInto;
  } else {
    v8657 = opt.injectInto.id;
  }
  var id = v8657;
  var infovis;
  var parent;
  var popup;
  var navigation;
  var menu;
  var border$$2;
  border$$2 = opt.width * 100 / 90;
  jitcontainer = $E("div", {"id":"jitcontainer", "className":"clearfix roundedCorner", "style":{"position":"relative", "width":border$$2 + "px", "height":opt.height + 55 + border$$2 / 20 + "px"}});
  rightJitContainer = $E("div", {"id":"right-jitcontainer", "className":"phylojivepadding", "style":{display:"none"}});
  centerJitContainer = $E("div", {"id":"center-jitcontainer", "className":"phylojivepadding"});
  infovis = JAM.call(jQuery, null, ["#" + id], JAM.policy.p3)[0];
  parent = infovis.parentNode;
  JAM.call(parent.replaceChild, parent, [jitcontainer, infovis], JAM.policy.p3);
  JAM.call(centerJitContainer.appendChild, centerJitContainer, [infovis], JAM.policy.p3);
  JAM.call(jitcontainer.appendChild, jitcontainer, [centerJitContainer], JAM.policy.p3);
  JAM.call(jitcontainer.appendChild, jitcontainer, [rightJitContainer], JAM.policy.p3);
  popup = $E("div", {"id":"popup", "className":"", "style":{"color":"black", "display":"none", "border":"1px solid green", "background-color":"#B5D397", "position":"absolute", "left":"50px", "top":"90px", "overflow":"auto", "text-align":"left"}});
  var v8664 = JAM.call(jQuery, null, [popup], JAM.policy.p3);
  JAM.call(v8664.html, v8664, [popupHTML], JAM.policy.p3);
  JAM.call(centerJitContainer.appendChild, centerJitContainer, [popup], JAM.policy.p3);
  var v8665 = JAM.call(jQuery, null, [popup], JAM.policy.p3);
  JAM.call(v8665.resizable, v8665, [{maxHeight:450, maxWidth:350, minHeight:250, minWidth:170}], JAM.policy.p3);
  var v8667 = JAM.call(jQuery, null, [popup], JAM.policy.p3);
  JAM.call(v8667.draggable, v8667, [{handle:"#popup-close", containment:"#" + opt.injectInto}], JAM.policy.p3);
  navigation = $E("div", {"id":"navigationPanel", "style":{"left":opt.width - 50 + "px"}});
  var v8670 = JAM.call(jQuery, null, [navigation], JAM.policy.p3);
  JAM.call(v8670.html, v8670, [navHTML], JAM.policy.p3);
  JAM.call(jitcontainer.appendChild, jitcontainer, [navigation], JAM.policy.p3);
  menu = $E("div", {"id":"jitmenubutton", "className":"menubutton"});
  var v8672 = JAM.call(jQuery, null, [menu], JAM.policy.p3);
  JAM.call(v8672.click, v8672, [v37], JAM.policy.p3);
  JAM.call(jitcontainer.appendChild, jitcontainer, [menu], JAM.policy.p3);
  return;
}
function v36(text$$7) {
  if (!this.elem) {
    var v31253 = JAM.call(document.getElementById, document, ["log"], JAM.policy.p3);
    this.elem = v31253;
  }
  JAM.set(this.elem, "innerHTML", text$$7);
  return;
}
function v35() {
  var ua = navigator.userAgent;
  var v8675 = JAM.call(ua.match, ua, [/iPhone/i], JAM.policy.p3);
  if (!v8675) {
    v8675 = JAM.call(ua.match, ua, [/iPad/i], JAM.policy.p3);
  }
  var iStuff = v8675;
  var typeOfCanvas = typeof HTMLCanvasElement;
  var v8676 = typeOfCanvas === "object";
  if (!v8676) {
    v8676 = typeOfCanvas === "function";
  }
  var nativeCanvasSupport = v8676;
  var v8677 = nativeCanvasSupport;
  if (v8677) {
    var v26197 = JAM.call(document.createElement, document, ["canvas"], JAM.policy.p3);
    v8677 = typeof JAM.call(v26197.getContext, v26197, ["2d"], JAM.policy.p3).fillText === "function";
  }
  var textSupport = v8677;
  var v8678;
  var v19228 = !nativeCanvasSupport;
  if (!v19228) {
    var v22476 = textSupport;
    if (v22476) {
      v22476 = !iStuff;
    }
    v19228 = v22476;
  }
  if (v19228) {
    v8678 = "Native";
  } else {
    v8678 = "HTML";
  }
  labelType = v8678;
  nativeTextSupport = labelType === "Native";
  useGradients = nativeCanvasSupport;
  var v14685 = iStuff;
  if (!v14685) {
    v14685 = !nativeCanvasSupport;
  }
  animate = !v14685;
  return;
}
function smitsNode2JSON(node$$2) {
  var childJSON = [];
  var leaves = 0;
  var i$$3 = 0;
  var v8681 = i$$3 < node$$2.children.length;
  for (;v8681;) {
    var j = smitsNode2JSON(node$$2.children[i$$3]);
    JAM.call(childJSON.push, childJSON, [j], JAM.policy.p3);
    leaves = leaves + j.data.leaf;
    leaves = leaves + j.data.leaves;
    i$$3++;
    v8681 = i$$3 < node$$2.children.length;
  }
  var that$$1 = node$$2;
  var sampleid = "";
  if (childJSON.length !== 0) {
    return{"id":node$$2.id, "name":node$$2.name, "data":{"leaves":leaves, "leaf":0, "len":node$$2.len, "$type":"circle", "$dim":5, "$color":"#fff"}, "children":childJSON};
  } else {
    var v8685 = node$$2.name;
    var v31254 = JAM.call(v8685.replace, v8685, [/_/g, " "], JAM.policy.p3);
    node$$2.name = v31254;
    var v8686 = node$$2.name;
    var sampleArray = JAM.call(v8686.split, v8686, [" "], JAM.policy.p3);
    if (sampleArray.length > 1) {
      sampleid = sampleArray[1];
    }
    var name$$31 = sampleArray[0];
    var nodeJSON = {"id":node$$2.id, "name":node$$2.name, "data":{"leaves":0, "leaf":1, "len":node$$2.len, "$height":20, "$type":"none", "sampleid":sampleid, "name":name$$31}, "children":childJSON};
    return nodeJSON;
  }
  return;
}
function phylogenyExplorer_init(initial) {
  function v34(char$$5) {
    var chars = JAM.call(char$$5.split, char$$5, ["/"], JAM.policy.p3);
    var index$$42 = ["firstCharacter", "secondCharacter", "thirdCharacter"];
    var i$$10 = 0;
    var v8696 = i$$10 < chars.length;
    for (;v8696;) {
      var ch = unescape(chars[i$$10]);
      var select$$1 = JAM.call(jQuery, null, ["#" + index$$42[i$$10]], JAM.policy.p3)[0];
      var j$$1 = 0;
      var v8695 = j$$1 < select$$1.options.length;
      for (;v8695;) {
        if (select$$1.options[j$$1].value === ch) {
          select$$1.selectedIndex = j$$1;
          break;
        }
        j$$1++;
        v8695 = j$$1 < select$$1.options.length;
      }
      i$$10++;
      v8696 = i$$10 < chars.length;
    }
    onSetCharacter();
    return;
  }
  function v33() {
    JAM.call(st.onClick, st, [st.root], JAM.policy.p3);
    JAM.call(st.fitScreen, st, [], JAM.policy.p3);
    return;
  }
  function v32() {
    var first$$inline_13;
    var second$$inline_14;
    var third$$inline_15;
    var value$$inline_16 = [];
    var v8698 = JAM.call(jQuery, null, ["#firstCharacter"], JAM.policy.p3);
    first$$inline_13 = JAM.call(v8698.val, v8698, [], JAM.policy.p3);
    var v8699 = JAM.call(jQuery, null, ["#secondCharacter"], JAM.policy.p3);
    second$$inline_14 = JAM.call(v8699.val, v8699, [], JAM.policy.p3);
    var v8700 = JAM.call(jQuery, null, ["#thirdCharacter"], JAM.policy.p3);
    third$$inline_15 = JAM.call(v8700.val, v8700, [], JAM.policy.p3);
    if (first$$inline_13) {
      JAM.call(value$$inline_16.push, value$$inline_16, [first$$inline_13], JAM.policy.p3);
    }
    if (second$$inline_14) {
      JAM.call(value$$inline_16.push, value$$inline_16, [second$$inline_14], JAM.policy.p3);
    }
    if (third$$inline_15) {
      JAM.call(value$$inline_16.push, value$$inline_16, [third$$inline_15], JAM.policy.p3);
    }
    st.config.firstCharacter = first$$inline_13 || "";
    st.config.selectedCharacters = value$$inline_16;
    var v8703;
    if (typeof first$$inline_13 === "undefined") {
      v8703 = "";
    } else {
      v8703 = first$$inline_13;
    }
    first$$inline_13 = v8703;
    var v8704;
    if (typeof second$$inline_14 === "undefined") {
      v8704 = "";
    } else {
      v8704 = second$$inline_14;
    }
    second$$inline_14 = v8704;
    var v8705;
    if (typeof third$$inline_15 === "undefined") {
      v8705 = "";
    } else {
      v8705 = third$$inline_15;
    }
    third$$inline_15 = v8705;
    JAM.call(app.navigate, app, ["character/" + first$$inline_13 + "/" + second$$inline_14 + "/" + third$$inline_15], JAM.policy.p3);
    var legendElem$$inline_18 = JAM.call($jit.id, $jit, ["legend"], JAM.policy.p3);
    var i$$inline_19;
    var node$$inline_20;
    var label$$inline_21;
    if (st.character) {
      var v8707 = JAM.call(st.colorCharacter, st, [], JAM.policy.p3);
      if (!v8707) {
        v8707 = "";
      }
      html$$1 = v8707;
      var v8708 = JAM.call(jQuery, null, ["#legendBody"], JAM.policy.p3);
      JAM.call(v8708.html, v8708, [html$$1], JAM.policy.p3);
      legendElem$$inline_18.style.display = "inline";
    } else {
      legendElem$$inline_18.style.display = "none";
    }
    for (i$$inline_19 in st.graph.nodes) {
      var v14707 = st.graph.nodes;
      if (JAM.call(v14707.hasOwnProperty, v14707, [i$$inline_19], JAM.policy.p3)) {
        node$$inline_20 = st.graph.nodes[i$$inline_19];
        label$$inline_21 = JAM.call(jQuery, null, ["#" + node$$inline_20.id], JAM.policy.p3)[0];
        if (label$$inline_21) {
          var v14710 = st.config;
          JAM.call(v14710.onCreateLabel, v14710, [label$$inline_21, node$$inline_20], JAM.policy.p3);
        }
      }
    }
    JAM.call(st.onClick, st, [st.root], JAM.policy.p3);
    JAM.call(st.fitScreen, st, [], JAM.policy.p3);
    return;
  }
  function v31(elem$$4) {
    var style$$1 = JAM.call(jQuery, null, ["#right-jitcontainer"], JAM.policy.p3)[0].style;
    var v8718;
    if (style$$1.display === "none") {
      v8718 = "";
    } else {
      v8718 = "none";
    }
    style$$1.display = v8718;
    if (style$$1.display) {
      var v8719 = JAM.call(jQuery, null, [elem$$4], JAM.policy.p3);
      JAM.call(v8719.removeClass, v8719, ["on"], JAM.policy.p3);
    } else {
      var v8720 = JAM.call(jQuery, null, [elem$$4], JAM.policy.p3);
      JAM.call(v8720.addClass, v8720, ["on"], JAM.policy.p3);
    }
    return;
  }
  function v30(value$$29) {
    st.config.branchMultiplier = value$$29;
    var v14713 = st.graph;
    JAM.call(st.computePositions, st, [JAM.call(v14713.getNode, v14713, [st.root], JAM.policy.p3), ""], JAM.policy.p3);
    JAM.call(st.plot, st, [], JAM.policy.p3);
    return;
  }
  function v29(checkbox) {
    st.config.branchLength = checkbox.checked;
    var v14715 = st.graph;
    JAM.call(st.computePositions, st, [JAM.call(v14715.getNode, v14715, [st.root], JAM.policy.p3), ""], JAM.policy.p3);
    JAM.call(st.plot, st, [], JAM.policy.p3);
    return;
  }
  function v28(char$$4) {
    return;
  }
  function v27(render) {
    var newickTree$$1 = JAM.call($jit.id, $jit, ["newickTree"], JAM.policy.p3).value;
    if (newickTree$$1) {
      var dataObject$$1 = JAM.new(Smits.PhyloCanvas.NewickParse, [newickTree$$1]);
      var rootObject;
      var json$$2 = "";
      if (typeof dataObject$$1 === "object") {
        rootObject = JAM.call(dataObject$$1.getRoot, dataObject$$1, [], JAM.policy.p3);
        json$$2 = smitsNode2JSON(rootObject);
        JAM.call(st.loadJSON, st, [json$$2], JAM.policy.p3);
      }
      JAM.call(st.compute, st, [], JAM.policy.p3);
      st.config.initCharacter = false;
      var legendElem$$3 = JAM.call($jit.id, $jit, ["legend"], JAM.policy.p3);
      if (st.character) {
        var v8730 = JAM.call(st.colorCharacter, st, [], JAM.policy.p3);
        if (!v8730) {
          v8730 = "";
        }
        html$$1 = v8730;
        var v8731 = JAM.call(jQuery, null, ["#legendBody"], JAM.policy.p3);
        JAM.call(v8731.html, v8731, [html$$1], JAM.policy.p3);
        legendElem$$3.style.display = "inline";
        JAM.call(updateCharacter, null, [st.characterList]);
      } else {
        legendElem$$3.style.display = "none";
      }
      JAM.call(st.onClick, st, [st.root], JAM.policy.p3);
      JAM.call(st.fitScreen, st, [], JAM.policy.p3);
    }
    return;
  }
  function v26(animate$$1) {
    if (!animateDuration) {
      animateDuration = st.config.duration;
    }
    if (animate$$1.checked) {
      st.config.duration = animateDuration;
    } else {
      st.config.duration = 0;
    }
    return;
  }
  function v25(lat) {
    if (lat.checked) {
      st.config.lateralise = true;
    } else {
      st.config.lateralise = false;
    }
    var v14720 = st.graph;
    JAM.call(st.computePositions, st, [JAM.call(v14720.getNode, v14720, [st.root], JAM.policy.p3), ""], JAM.policy.p3);
    JAM.call(st.plot, st, [], JAM.policy.p3);
    return;
  }
  function v24(setRoot$$2) {
    if (setRoot$$2.value === "checked") {
      var id$$2 = st.clickedNode.id;
      JAM.call(st.setRoot, st, [id$$2, "animate"], JAM.policy.p3);
    }
    return;
  }
  function v23(alignName$$1) {
    if (alignName$$1.checked) {
      st.config.alignName = true;
      var v8749 = JAM.call(jQuery, null, [".quant"], JAM.policy.p3);
      JAM.call(v8749.addClass, v8749, ["quantAlign"], JAM.policy.p3);
    } else {
      st.config.alignName = false;
      var v8751 = JAM.call(jQuery, null, [".quant"], JAM.policy.p3);
      JAM.call(v8751.removeClass, v8751, ["quantAlign"], JAM.policy.p3);
    }
    JAM.call(st.plot, st, [], JAM.policy.p3);
    return;
  }
  function v22() {
    search(-1);
    return;
  }
  function v21() {
    search(1);
    return;
  }
  function v20() {
    JAM.call(st.fitScreen, st, [], JAM.policy.p3);
    return;
  }
  function v19() {
    return st.config.lateralise;
  }
  function v18(dom, node$$13) {
    var alignName = JAM.call($jit.id, $jit, ["alignName"], JAM.policy.p3);
    if (node$$13.selected) {
      dom.style.display = "none";
    }
    if (!node$$13.data.leaf) {
      dom.style.display = "none";
    }
    var v8758 = dom.style;
    var v14724 = node$$13.data.display;
    if (!v14724) {
      v14724 = "block";
    }
    v8758.display = v14724;
    if (alignName.checked) {
      var v8759 = JAM.call(jQuery, null, ["#" + dom.id + " .quant"], JAM.policy.p3);
      JAM.call(v8759.addClass, v8759, ["quantAlign"], JAM.policy.p3);
    } else {
      var v8760 = JAM.call(jQuery, null, ["#" + dom.id + " .quant"], JAM.policy.p3);
      JAM.call(v8760.removeClass, v8760, ["quantAlign"], JAM.policy.p3);
    }
    return;
  }
  function v17(node$$12, eventInfo$$1, e$$7) {
    function v16(n$$1) {
      if (n$$1.data.leaf) {
        JAM.set(elem$$3, "innerHTML", elem$$3.innerHTML + (n$$1.name + "<br/>"));
      }
      return;
    }
    if (node$$12) {
      var elem$$3 = JAM.call(document.getElementById, document, ["selected"], JAM.policy.p3);
      if (node$$12.leaf) {
        JAM.set(elem$$3, "innerHTML", node$$12.name);
      } else {
        JAM.set(elem$$3, "innerHTML", "");
        JAM.call(node$$12.subGraph, node$$12, [v16], JAM.policy.p3);
      }
    }
    return;
  }
  function v15(adj$$1) {
    return;
  }
  function v14(node$$11) {
    var result$$3 = true;
    var char$$3;
    if (!node$$11.data.leaf) {
      var key$$17;
      for (key$$17 in st.config.selectedCharacters) {
        var v14732 = node$$11.data.characterConsistency;
        if (JAM.call(v14732.hasOwnProperty, v14732, [key$$17], JAM.policy.p3)) {
          char$$3 = st.config.selectedCharacters[key$$17];
          var v8765 = result$$3;
          if (v8765) {
            v8765 = node$$11.data.characterConsistency[char$$3];
          }
          result$$3 = v8765;
        }
      }
    }
    var v14735 = !result$$3;
    if (v14735) {
      v14735 = node$$11.data.$type !== "triangle";
    }
    if (v14735) {
      node$$11.data.$type = "square";
    }
    if (node$$11.data.$type === "circle") {
      if (node$$11.data.rotate) {
        node$$11.data.$color = "purple";
      } else {
        node$$11.data.$color = "red";
      }
    } else {
      if (node$$11.data.$type === "square") {
        node$$11.data.$dim = 10;
        node$$11.data.$color = "red";
      }
    }
    if (node$$11.data.$type === "triangle") {
      node$$11.data.$dim = 15;
      node$$11.data.$color = "#EE9AA2";
    } else {
      if (node$$11.data.$type !== "square") {
        delete node$$11.data.$dim;
      }
    }
    if (st.root === node$$11.id) {
      node$$11.data.$color = "lightblue";
    }
    return;
  }
  function v13(label$$1, node$$10) {
    function v12() {
      var setRoot$$1 = JAM.call($jit.id, $jit, ["setRoot"], JAM.policy.p3);
      if (!setRoot$$1.checked) {
        var v8785 = st.controller.Events;
        JAM.call(v8785.onClick, v8785, [node$$10], JAM.policy.p3);
      }
      return;
    }
    var char$$2;
    var list = st.config.selectedCharacters;
    var charTypeMapping = st.charTypeMapping;
    var i$$9;
    var values$$4;
    var div$$2;
    var colorCoding = st.colorCoding;
    var firstColor;
    var index$$41;
    var temp;
    var shape;
    label$$1.id = node$$10.id;
    JAM.set(label$$1, "innerHTML", node$$10.name);
    JAM.set(label$$1, "onclick", v12);
    var style = label$$1.style;
    style.width = "auto";
    style.height = 17 + "px";
    style.cursor = "pointer";
    style.color = "#333";
    style.fontSize = "0.8em";
    style.textAlign = "left";
    style.paddingTop = "3px";
    style.display = "inline";
    style.color = node$$10.data.$color;
    var boxes = "";
    var first$$3 = st.config.firstCharacter;
    var shapes = ["box", "star", "triangle"];
    index$$41 = 0;
    boxes = "";
    i$$9 = 0;
    var v8805 = i$$9 < list.length;
    for (;v8805;) {
      char$$2 = list[i$$9];
      values$$4 = node$$10.data.character[char$$2];
      var v19259 = values$$4;
      if (v19259) {
        v19259 = values$$4.length > 0;
      }
      var v14747 = v19259;
      if (v14747) {
        v14747 = typeof values$$4[0] !== "undefined";
      }
      if (v14747) {
        if (charTypeMapping[char$$2] === st.config.typeEnum.quali) {
          temp = colorCoding[char$$2];
          value = values$$4[0];
          if (values$$4.length > 1) {
            value = "multiple";
          }
          shape = '<div class="' + temp[value].shape + '" style="float:left;background-color:' + temp[value].color + ';" title="' + char$$2 + " : " + JAM.call(values$$4.join, values$$4, [" , "], JAM.policy.p3) + '"></div>';
          if (i$$9 === 0) {
            firstColor = temp[value].color;
          }
        } else {
          if (charTypeMapping[char$$2] === st.config.typeEnum.quant) {
            temp = st.colorCodingQuali[char$$2];
            value = values$$4[0];
            index$$41 = JAM.call(st.findIndex, st, [value, st.range[char$$2]], JAM.policy.p3);
            shape = '<div class="' + temp[index$$41].shape + '" style="float:left;background-color:' + temp[index$$41].color + ';" title="' + char$$2 + " : " + temp[index$$41].name + '"></div>';
            if (i$$9 === 0) {
              firstColor = st.config.quantColor[st.config.quantColor.length - 1];
            }
          }
        }
      } else {
        shape = '<div class="empty" style="float:left;background-color:;" title="empty"></div>';
      }
      if (first$$3 !== char$$2) {
        boxes = boxes + shape;
      } else {
        boxes = shape + boxes;
      }
      i$$9 = i$$9 + 1;
      v8805 = i$$9 < list.length;
    }
    if (label$$1) {
      if (!node$$10.data.leaf) {
        JAM.set(label$$1, "innerHTML", boxes + '&nbsp;&nbsp;<div style="display:inline;color:' + firstColor + '">' + node$$10.data.leaves + " Taxa</div>");
      } else {
        JAM.set(label$$1, "innerHTML", boxes + '&nbsp;&nbsp;<div style="display:inline;color:' + firstColor + '">' + node$$10.name + "</div>");
      }
    }
    return;
  }
  function v11(msg) {
    if (msg) {
      JAM.call(Log.write, Log, [msg], JAM.policy.p3);
    } else {
      JAM.call(Log.write, Log, ["done"], JAM.policy.p3);
    }
    return;
  }
  function v10(node$$9) {
    JAM.call(Log.write, Log, ["loading " + node$$9.name], JAM.policy.p3);
    return;
  }
  function v9(div$$1, node$$8) {
    var url$$3 = "";
    var key$$16;
    var i$$8;
    var char$$1;
    var html$$4 = "";
    var name$$33 = "";
    var maptitle = "";
    var index$$40;
    if (!!node$$8.name) {
      var v19272 = node$$8.name;
      url$$3 = '<img class="tipImage" src="http://biocache.ala.org.au/ws/density/map?q=' + JAM.call(v19272.replace, v19272, [" ", "+"], JAM.policy.p3) + '"/>';
      maptitle = "<br/>ALA <strong>reported</strong> occurences";
      name$$33 = "<i>" + node$$8.name + "</i>";
    } else {
      name$$33 = " unnamed clade ";
    }
    name$$33 = name$$33 + "<strong> click</strong> for ";
    if (node$$8.data.leaf) {
      name$$33 = name$$33 + "for linked data";
    } else {
      name$$33 = "Part of " + name$$33;
      if (node$$8.length < 30) {
        name$$33 = name$$33 + "clade members";
      } else {
        name$$33 = name$$33 + "30 clade members";
      }
    }
    name$$33 = "<h3>" + name$$33 + "</h3>";
    var result$$2 = [];
    for (index$$40 in st.config.selectedCharacters) {
      key$$16 = st.config.selectedCharacters[index$$40];
      char$$1 = node$$8.data.character[key$$16];
      html$$4 = "<strong>" + key$$16 + "</strong>: ";
      var v19273 = typeof char$$1 === "undefined";
      if (!v19273) {
        v19273 = char$$1.length === 0;
      }
      var v14775 = v19273;
      if (!v14775) {
        v14775 = typeof char$$1[0] === "undefined";
      }
      if (v14775) {
        html$$4 = html$$4 + "&mdash;";
      } else {
        if (typeof char$$1[0] !== "number") {
          html$$4 = html$$4 + JAM.call(char$$1.join, char$$1, [",<br/>...."], JAM.policy.p3);
        } else {
          var v19277 = char$$1[0];
          html$$4 = html$$4 + JAM.call(v19277.toFixed, v19277, [4], JAM.policy.p3);
        }
      }
      JAM.call(result$$2.push, result$$2, [html$$4], JAM.policy.p3);
    }
    JAM.set(div$$1, "innerHTML", name$$33 + JAM.call(result$$2.join, result$$2, ["<br/>"], JAM.policy.p3) + maptitle + url$$3);
    return;
  }
  function v8() {
    var v8823 = JAM.call($, null, ["a.thumbImage1"], JAM.policy.p3);
    JAM.call(v8823.colorbox, v8823, [{iframe:true, width:"80%", height:"80%"}], JAM.policy.p3);
    return;
  }
  function v7(clade) {
    var tmpl = st.config.tmpl;
    var nodeList = [];
    var node$$7;
    var html$$3;
    var split;
    var i$$7 = 0;
    var v8827 = i$$7 < clade.length & i$$7 < 30;
    for (;v8827;) {
      node$$7 = {};
      node$$7.name = clade[i$$7].name;
      JAM.call(nodeList.push, nodeList, [node$$7], JAM.policy.p3);
      i$$7++;
      v8827 = i$$7 < clade.length & i$$7 < 30;
    }
    if (tmpl) {
      tmpl = JAM.call(_.template, _, [tmpl], JAM.policy.p3);
      html$$3 = JAM.call(tmpl, null, [{nodeList:nodeList}], JAM.policy.p3);
    } else {
    }
    return html$$3;
  }
  function v6(node$$6, eventInfo, e$$6) {
    function v5(elem$$2) {
      if (elem$$2.data.leaf) {
        if (leafs) {
          leafs = leafs + ("<li>" + elem$$2.name + "</li>");
        } else {
          leafs = "<li>" + elem$$2.name + "</li>";
        }
        JAM.call(selectedClade.push, selectedClade, [elem$$2], JAM.policy.p3);
      }
      return;
    }
    function v4$$1() {
      return;
    }
    var leafs;
    if (node$$6) {
      selectedClade = [];
      var expand = JAM.call($jit.id, $jit, ["expand"], JAM.policy.p3);
      var v8831 = st.labels;
      var pos$$3 = JAM.call(v8831.getLabel, v8831, [node$$6.id], JAM.policy.p3);
      var setRoot = JAM.call($jit.id, $jit, ["setRoot"], JAM.policy.p3);
      var rotate = JAM.call($jit.id, $jit, ["rotate"], JAM.policy.p3);
      var select = JAM.call($jit.id, $jit, ["selectClade"], JAM.policy.p3);
      var v19282 = pos$$3.style.left;
      var loc = parseInt(JAM.call(v19282.replace, v19282, [/px/, ""], JAM.policy.p3), 10) + 100;
      var v19283 = pos$$3.style.top;
      var locy = parseInt(JAM.call(v19283.replace, v19283, [/px/, ""], JAM.policy.p3), 10) + 40;
      if (setRoot.checked) {
        var id$$1 = node$$6.id;
        JAM.call(st.setRoot, st, [id$$1, "animate"], JAM.policy.p3);
        st.root = id$$1;
      }
      if (rotate.checked) {
        var v14789 = st.graph;
        JAM.call(st.computePositions, st, [JAM.call(v14789.getNode, v14789, [st.root], JAM.policy.p3), "start"], JAM.policy.p3);
        if (typeof node$$6.data.rotate === "undefined") {
          node$$6.data.rotate = false;
        }
        node$$6.data.rotate = !node$$6.data.rotate;
        var v14793 = st.graph;
        JAM.call(st.computePositions, st, [JAM.call(v14793.getNode, v14793, [st.root], JAM.policy.p3), "end"], JAM.policy.p3);
        var v8841 = st.fx;
        JAM.call(v8841.animate, v8841, [{modes:["linear", "node-property:alpha"], onComplete:v4$$1}], JAM.policy.p3);
      }
      if (expand.checked) {
        JAM.call(st.setCollapsed, st, [node$$6], JAM.policy.p3);
        var level$$7 = JAM.call(st.nodesExpCol, st, [node$$6], JAM.policy.p3);
        if (level$$7) {
          st.zoomIndex = level$$7;
        }
        var v14796 = st.graph;
        JAM.call(st.computePositions, st, [JAM.call(v14796.getNode, v14796, [st.root], JAM.policy.p3), ""], JAM.policy.p3);
        JAM.call(st.plot, st, [], JAM.policy.p3);
      }
      if (select.checked) {
        st.clickedNode = node$$6;
        JAM.call(node$$6.eachSubgraph, node$$6, [v5], JAM.policy.p3);
        popup$$1.style.display = "inline";
        popup$$1.style.top = locy + "px";
        popup$$1.style.left = loc + "px";
        var v8849 = popupText;
        var v14798 = st.config;
        var v31255 = JAM.call(v14798.presentClade, v14798, [selectedClade], JAM.policy.p3);
        JAM.set(v8849, "innerHTML", v31255);
        var v8850 = st.config;
        JAM.call(v8850.onPresentClade, v8850, [], JAM.policy.p3);
        JAM.call(st.plot, st, [], JAM.policy.p3);
      }
    }
    return;
  }
  function v3$$1() {
    st.canvas.element.style.cursor = "";
    var v8853 = st.tips;
    JAM.call(v8853.hide, v8853, [true], JAM.policy.p3);
    return;
  }
  function v2$$1(node$$5, event$$1, e$$5) {
    st.canvas.element.style.cursor = "pointer";
    var v8855 = st.tips.config;
    JAM.call(v8855.onShow, v8855, [st.tips.tip, node$$5], JAM.policy.p3);
    var v8857 = st.tips;
    var v14803 = $jit.util.event;
    JAM.call(v8857.setTooltipPosition, v8857, [JAM.call(v14803.getPos, v14803, [e$$5], JAM.policy.p3)], JAM.policy.p3);
    return;
  }
  function v1$$1(div, node$$4) {
    var url$$2 = "";
    var key$$15;
    var i$$6;
    var char;
    var html$$2 = "";
    var name$$32 = "";
    var index$$39;
    if (node$$4.data.leaf) {
      name$$32 = "<h3>" + node$$4.name + "</h3>";
      var v22500 = node$$4.name;
      var v19289 = JAM.call(v22500.split, v22500, [/\s+/], JAM.policy.p3);
      url$$2 = '<img class="tipImage" src="http://biocache.ala.org.au/ws/density/map?q=' + JAM.call(v19289.join, v19289, ["+"], JAM.policy.p3) + '"/>';
    }
    var result$$1 = [];
    for (index$$39 in st.config.selectedCharacters) {
      key$$15 = st.config.selectedCharacters[index$$39];
      char = node$$4.data.character[key$$15];
      html$$2 = "<strong>" + key$$15 + "</strong>: ";
      var v19290 = typeof char === "undefined";
      if (!v19290) {
        v19290 = char.length === 0;
      }
      var v14810 = v19290;
      if (!v14810) {
        v14810 = typeof char[0] === "undefined";
      }
      if (v14810) {
        html$$2 = html$$2 + "&mdash;";
      } else {
        if (typeof char[0] !== "number") {
          html$$2 = html$$2 + JAM.call(char.join, char, [","], JAM.policy.p3);
        } else {
          var v19294 = char[0];
          html$$2 = html$$2 + JAM.call(v19294.toFixed, v19294, [4], JAM.policy.p3);
        }
      }
      JAM.call(result$$1.push, result$$1, [html$$2], JAM.policy.p3);
    }
    JAM.set(div, "innerHTML", name$$32 + JAM.call(result$$1.join, result$$1, ["<br/>"], JAM.policy.p3) + url$$2);
    return;
  }
  function search(step$$1) {
    function v0$$1(node$$14) {
      var name$$34 = node$$14.name;
      var pattern$$1 = new RegExp(searchString, "i");
      if (JAM.call(name$$34.match, name$$34, [pattern$$1], JAM.policy.p3)) {
        JAM.call(result.push, result, [node$$14], JAM.policy.p3);
      }
      return;
    }
    var searchString = searchBtn.value;
    var len;
    var v8870 = st.graph;
    var root = JAM.call(v8870.getNode, v8870, [st.root], JAM.policy.p3);
    if (result.length > 0) {
      len = result.length;
      pos = nextStep(pos, step$$1, len);
      var v8872 = st.labels;
      var prevElem = JAM.call(v8872.getLabel, v8872, [result[nextStep(pos, -1 * step$$1, len)].id], JAM.policy.p3);
      prevElem.style.backgroundColor = "";
    }
    var v14817 = searchString;
    if (v14817) {
      v14817 = prevSearch !== searchString;
    }
    if (v14817) {
      result = [];
      prevSearch = searchString;
      JAM.call(root.eachSubgraph, root, [v0$$1], JAM.policy.p3);
      pos = nextStep(undefined, step$$1, len);
    } else {
      if (searchString === "") {
        result = [];
      }
    }
    if (result.length > 0) {
      var shownNode = result[pos];
      if (!shownNode.exist) {
        root.collapsed = true;
        JAM.call(st.nodesExpCol, st, [root], JAM.policy.p3);
        JAM.call(st.computePositions, st, [root, ""], JAM.policy.p3);
        JAM.call(st.plot, st, [], JAM.policy.p3);
      }
      var canvas$$1 = st.canvas;
      var oy = canvas$$1.translateOffsetY;
      var xTranslate = 0;
      var yTranslate = -oy;
      var v8879 = st.canvas;
      JAM.call(v8879.translate, v8879, [xTranslate, yTranslate], JAM.policy.p3);
      var v8880 = st.labels;
      var element$$2 = JAM.call(v8880.getLabel, v8880, [result[pos].id], JAM.policy.p3);
      element$$2.style.backgroundColor = "yellow";
      var v8883 = JAM.call(jQuery, null, [element$$2], JAM.policy.p3);
      JAM.call(v8883.click, v8883, [], JAM.policy.p3);
    }
    return;
  }
  function clickHandler() {
    var JSCompiler_object_inline_x_80;
    var JSCompiler_object_inline_y_81;
    switch(this.id) {
      case "north":
        JSCompiler_object_inline_x_80 = 0;
        JSCompiler_object_inline_y_81 = 10;
        true;
        break;
      case "west":
        JSCompiler_object_inline_x_80 = -10;
        JSCompiler_object_inline_y_81 = 0;
        true;
        break;
      case "east":
        JSCompiler_object_inline_x_80 = 10;
        JSCompiler_object_inline_y_81 = 0;
        true;
        break;
      case "south":
        JSCompiler_object_inline_x_80 = 0;
        JSCompiler_object_inline_y_81 = -10;
        true;
    }
    var canvas = st.canvas;
    JAM.call(canvas.translate, canvas, [JSCompiler_object_inline_x_80, JSCompiler_object_inline_y_81], JAM.policy.p3);
    return;
  }
  function zoomHandler() {
    var scroll;
    switch(this.id) {
      case "zoomIN":
        scroll = +1;
        break;
      case "zoomOUT":
        scroll = -1;
    }
    JAM.call(st.zoom, st, [scroll], JAM.policy.p3);
    return;
  }
  function nextStep(pos$$2, step, length$$11) {
    if (typeof pos$$2 === "undefined") {
      var v8887;
      if (step > 0) {
        v8887 = 0;
      } else {
        v8887 = length$$11 - 1;
      }
      return v8887;
    }
    var i$$4 = (pos$$2 + step) % length$$11;
    var v8890;
    if (i$$4 < 0) {
      v8890 = length$$11 + i$$4;
    } else {
      v8890 = i$$4;
    }
    return v8890;
  }
  function keyHandler(e$$4) {
    var ENTER = 13;
    var shift = e$$4.shiftKey;
    var v14824 = shift;
    if (v14824) {
      v14824 = e$$4.keyCode === ENTER;
    }
    if (v14824) {
      search(-1);
      if (e$$4.preventDefault) {
        JAM.call(e$$4.preventDefault, e$$4, [], JAM.policy.p3);
      }
      return false;
    } else {
      if (e$$4.keyCode === ENTER) {
        search(1);
        if (e$$4.preventDefault) {
          JAM.call(e$$4.preventDefault, e$$4, [], JAM.policy.p3);
        }
        return false;
      }
    }
    return;
  }
  var config = {injectInto:"infovis", width:800, height:600, offsetX:0, align:"left", alignName:false, lateralise:true, branchLength:true, branchMultiplier:1, duration:1E3, fps:10, transition:$jit.Trans.Quart.easeInOut, levelDistance:20, levelsToShow:Number.MAX_VALUE, constrained:false, firstCharacter:"Raceme_length_median", Navigation:{enable:true, panning:"avoid nodes", zooming:50}, Tips:{enable:true, onShow:v1$$1}, Node:{height:40, width:20, type:"circle", dim:5, color:"#aaa", overridable:true, 
  align:"left"}, Canvas:{background:{color:"#EEF2F7"}}, Edge:{type:"line", color:"#000", overridable:true, lineWidth:2}, Events:{enable:true, type:"Native", onMouseEnter:v2$$1, onMouseLeave:v3$$1, onClick:v6}, presentClade:v7, onPresentClade:v8, tmpl:"<ul><% _.each(nodeList , function( value ) { %> <li> <%= value.name %> </li> <% }); %> </ul>", Tips:{enable:true, onShow:v9}, onBeforeCompute:v10, onAfterCompute:v11, onCreateLabel:v13, onBeforePlotNode:v14, onBeforePlotLine:v15, onClick:v17, onPlaceLabel:v18};
  var height$$9 = config.height;
  var v8904 = config.width;
  if (!v8904) {
    v8904 = 800;
  }
  var width$$9 = v8904;
  var v8905 = $jit.util;
  JAM.call(v8905.extend, v8905, [config, initial], JAM.policy.p3);
  JAM.call(Nav.load, Nav, [config], JAM.policy.p3);
  var html$$1;
  var rightContainer$$1 = JAM.call($jit.id, $jit, ["right-jitcontainer"], JAM.policy.p3);
  var popup$$1 = JAM.call($jit.id, $jit, ["popup"], JAM.policy.p3);
  var popupText = JAM.call($jit.id, $jit, ["popup-text"], JAM.policy.p3);
  settingsPage();
  var dataObject;
  var json$$1 = "";
  if (config.tree) {
    dataObject = JAM.new(Smits.PhyloCanvas.NewickParse, [config.tree]);
  }
  if (typeof dataObject === "object") {
    json$$1 = smitsNode2JSON(JAM.call(dataObject.getRoot, dataObject, [], JAM.policy.p3));
  }
  var selectedClade;
  var zoomIN = JAM.call($jit.id, $jit, ["zoomIN"], JAM.policy.p3);
  var zoomOUT = JAM.call($jit.id, $jit, ["zoomOUT"], JAM.policy.p3);
  var world = JAM.call($jit.id, $jit, ["world"], JAM.policy.p3);
  st = JAM.new($jit.Phylo, [config]);
  isLateralise = v19;
  JAM.call(st.loadJSON, st, [json$$1], JAM.policy.p3);
  JAM.call(st.compute, st, [], JAM.policy.p3);
  var v8912 = config.character;
  if (!v8912) {
    v8912 = {};
  }
  st.character = v8912;
  var legendElem$$1 = JAM.call($jit.id, $jit, ["legend"], JAM.policy.p3);
  if (st.character) {
    var v8913 = JAM.call(st.colorCharacter, st, [], JAM.policy.p3);
    if (!v8913) {
      v8913 = "";
    }
    html$$1 = v8913;
    var v8914 = JAM.call(jQuery, null, ["#legendBody"], JAM.policy.p3);
    JAM.call(v8914.html, v8914, [html$$1], JAM.policy.p3);
    legendElem$$1.style.display = "inline";
    JAM.call(updateCharacter, null, [st.characterList]);
  } else {
    legendElem$$1.style.display = "none";
  }
  var north = JAM.call($jit.id, $jit, ["north"], JAM.policy.p3);
  var east = JAM.call($jit.id, $jit, ["east"], JAM.policy.p3);
  var west = JAM.call($jit.id, $jit, ["west"], JAM.policy.p3);
  var south = JAM.call($jit.id, $jit, ["south"], JAM.policy.p3);
  JAM.set(north, "onmousedown", JAM.set(south, "onmousedown", JAM.set(east, "onmousedown", JAM.set(west, "onmousedown", clickHandler))));
  JAM.set(zoomIN, "onclick", JAM.set(zoomOUT, "onclick", zoomHandler));
  JAM.set(world, "onclick", v20);
  var result = [];
  var pos;
  var prevSearch;
  var searchBtn = JAM.call($jit.id, $jit, ["searchString"], JAM.policy.p3);
  if (searchBtn.addEventListener) {
    JAM.call(searchBtn.addEventListener, searchBtn, ["keydown", keyHandler, false], JAM.policy.p3);
  } else {
    if (searchBtn.attachEvent) {
      JAM.call(searchBtn.attachEvent, searchBtn, ["onkeydown", keyHandler], JAM.policy.p3);
    }
  }
  var next = JAM.call($jit.id, $jit, ["next"], JAM.policy.p3);
  var previous = JAM.call($jit.id, $jit, ["previous"], JAM.policy.p3);
  JAM.set(next, "onclick", v21);
  JAM.set(previous, "onclick", v22);
  onClickAlign = v23;
  onSetRoot = v24;
  onLateralise = v25;
  var animateDuration;
  onAnimate = v26;
  onRender = v27;
  onGetCharacter = v28;
  onBranchLength = v29;
  onBranchMultiply = v30;
  toggleScreen = v31;
  onSetCharacter = v32;
  var v8921 = Backbone.Router;
  var AppRouter = JAM.call(v8921.extend, v8921, [{routes:{"":"start", "character/*char":"characterSelection"}, start:v33, characterSelection:v34}], JAM.policy.p3);
  var app = new AppRouter;
  var v8923 = Backbone.history;
  JAM.call(v8923.start, v8923, [], JAM.policy.p3);
  return;
}
function init() {
  phylogenyExplorer_init({codeBase:"../..", width:550, height:800, alignName:true, lateralise:false, levelsToShow:10, branchMultiplier:1, tree:"((Replace:0.007667365048364433,(this:0.005369261896034483,(with:0.011621228506591308,your:2.100100506802205E-6):0.0027929350821030707):0.012281999999150084):0.0400709772514759,(((own:0.0012025949078822151,phylogeny:0.0024332420478173633):0.006421131153429474,(in:0.008984623535641459,(newick:0.0012074724370825796,form:0.004013224017395373):0.003744210327868966):0.00542385295016945):0.023689622298502563,(tree:0.036702751435909745,((take:0.002448206437464337,care:0.0024347868455663196):0.001504447318880206,(to:0.0023787045835393372,(remove:2.100100506802205E-6,quotes_and_other_html_special_characters:0.01728824049672087):0.010690121488212884):6.006911375427831E-4):0.005347250770554118):0.014788598652250115):0.0400709772514759);", 
  character:{"Replace":{"modelled annual mean moisture index":[.6837124164], "modelled annual mean rad":[17.1466667213], "modelled annual mean temp":[16.0416993341], "modelled annual precipitation":[1039.2849673203], "modelled clpk 1 1000 g clay":[18998.3660130718], "modelled erosional":[85.9191176471], "modelled highest period moisture index":[.8894836614], "modelled highest period radiation":[25.3393464394], "modelled hydraulic conductivity ksat":[157.4640522876], "modelled isothermality":[.4932352942], 
  "modelled lowest period moisture index":[.3231372576], "modelled lowest period radiation":[9.081829987], "modelled max temp warmest period":[28.0827450671], "modelled mean diurnal range":[11.3729411867], "modelled mean moisture index coldest quarter":[.8600326849], "modelled mean moisture index highest quarter MI":[.8941764697], "modelled mean moisture index lowest quater MI":[.3734836587], "modelled mean moisture index warmest quarter":[.4585424874], "modelled mean temp coldest quarter":[10.5782352927], 
  "modelled mean temp driest quater":[15.4166012935], "modelled mean temp warmer quarter":[20.968431512], "modelled mean temp wettest quarter":[15.8052941168], "modelled min temp coldest period":[4.1385621225], "modelled moisture index seasonality":[33.0339869281], "modelled phos":[.0438125788], "modelled precipitation coldets quarter":[255.5509803922], "modelled precipitation driest period":[5.322875817], "modelled precipitation driest quarter":[143.0516339869], "modelled precipitation seasonality":[39.0823529412], 
  "modelled precipitation warmest quarter":[292.9124183007], "modelled precipitation wettest period":[36.9261437908], "modelled precipitation wettest quarter":[423.4202614379], "modelled radiation coldest quarter":[10.6616340562], "modelled radiation driest quarter":[17.4772549498], "modelled radiation seasonality":[33.0607843137], "modelled radiation warmest quarter":[22.9215031792], "modelled radiation wettest quarter":[15.7764050234], "modelled relief":[64.9002548406], "modelled ridgetopflat":[1.964869281], 
  "modelled rockalklty":[4.9215686275], "modelled rockgrainsz":[4.1215686275], "modelled rockhardness":[5.8725490196], "modelled rocknutrnt":[4.7078431373], "modelled roughness":[19.0273797546], "modelled sapk 1 1000 g sand":[64840.3594771241], "modelled slope":[4.4690577426], "modelled soildepth":[.9153594758], "modelled solpawhc":[107.6281045752], "modelled temperature annual range":[23.24398698], "modelled temperature seasonality":[1.4140000156], "modelled thpk 1 1000 g thickness":[292.831372549], 
  "modelled twi":[5.5785338397], "modelled valleybottom":[8.4109477124], "modelled whpk 1 1000 g water cap":[44557.6633986928], "raw annual mean moisture index":[1E-7], "raw annual mean rad":[19], "raw annual mean temp":[21.5], "raw annual precipitation":[1111], "raw clpk 1 1000 g clay":[18E3], "raw erosional":[100], "raw highest period moisture index":[1], "raw highest period radiation":[25.5], "raw hydraulic conductivity ksat":[200], "raw lowest period moisture index":[0], "raw lowest period radiation":[14], 
  "raw max temp warmest period":[30], "raw mean diurnal range":[9], "raw mean moisture index coldest quarter":[0], "raw mean moisture index highest quarter MI":[.5], "raw mean moisture index lowest quater MI":[0], "raw mean moisture index warmest quarter":[0], "raw mean temp coldest quarter":[17], "raw mean temp driest quater":[18.5], "raw mean temp warmer quarter":[24.5], "raw mean temp wettest quarter":[24.5], "raw min temp coldest period":[11], "raw moisture index seasonality":[57], "raw precipitation coldets quarter":[82], 
  "raw precipitation driest period":[0], "raw precipitation driest quarter":[61], "raw precipitation seasonality":[99.5], "raw precipitation warmest quarter":[574.5], "raw precipitation wettest period":[72.5], "raw precipitation wettest quarter":[716], "raw radiation coldest quarter":[15.5], "raw radiation driest quarter":[19], "raw radiation seasonality":[18.5], "raw radiation warmest quarter":[22], "raw radiation wettest quarter":[19], "raw relief":[125], "raw ridgetopflat":[0], "raw rockalklty":[4], 
  "raw rockgrainsz":[8], "raw rockhardness":[7], "raw rocknutrnt":[4], "raw roughness":[11], "raw sapk 1 1000 g sand":[63E3], "raw slope":[6], "raw soildepth":[1], "raw solpawhc":[177], "raw temperature annual range":[18], "raw temperature seasonality":[1], "raw thpk 1 1000 g thickness":[295.5], "raw twi":[5.5], "raw valleybottom":[0]}, "this":{"modelled annual mean moisture index":[.6050000191], "modelled annual mean rad":[19.6500005722], "modelled annual mean temp":[21.75], "modelled annual precipitation":[1111], 
  "modelled clpk 1 1000 g clay":[18E3], "modelled erosional":[100], "modelled highest period moisture index":[1], "modelled highest period radiation":[26.1500005722], "modelled hydraulic conductivity ksat":[200], "modelled isothermality":[.5150000155], "modelled lowest period moisture index":[.1199999973], "modelled lowest period radiation":[14.3499999046], "modelled max temp warmest period":[30.1999998093], "modelled mean diurnal range":[9.6500000954], "modelled mean moisture index coldest quarter":[.5400000066], 
  "modelled mean moisture index highest quarter MI":[.9950000048], "modelled mean moisture index lowest quater MI":[.1750000007], "modelled mean moisture index warmest quarter":[.7150000036], "modelled mean temp coldest quarter":[17.4500007629], "modelled mean temp driest quater":[18.8999996185], "modelled mean temp warmer quarter":[25.1499996185], "modelled mean temp wettest quarter":[24.8500003815], "modelled min temp coldest period":[11.5999999046], "modelled moisture index seasonality":[57], 
  "modelled phos":[.0198370004], "modelled precipitation coldets quarter":[82], "modelled precipitation driest period":[0], "modelled precipitation driest quarter":[61], "modelled precipitation seasonality":[99.5], "modelled precipitation warmest quarter":[574.5], "modelled precipitation wettest period":[72.5], "modelled precipitation wettest quarter":[716], "modelled radiation coldest quarter":[15.9499998093], "modelled radiation driest quarter":[19.1999998093], "modelled radiation seasonality":[18.5], 
  "modelled radiation warmest quarter":[22.3999996185], "modelled radiation wettest quarter":[19.6000003815], "modelled relief":[125.4036026001], "modelled ridgetopflat":[0], "modelled rockalklty":[4], "modelled rockgrainsz":[8], "modelled rockhardness":[7], "modelled rocknutrnt":[4], "modelled roughness":[11.5456476212], "modelled sapk 1 1000 g sand":[63E3], "modelled slope":[6.512172699], "modelled soildepth":[1.25], "modelled solpawhc":[177], "modelled temperature annual range":[18.6500005722], 
  "modelled temperature seasonality":[1.0499999523], "modelled thpk 1 1000 g thickness":[295.5], "modelled twi":[5.6324121952], "modelled valleybottom":[0], "modelled whpk 1 1000 g water cap":[5E4], "raw annual mean moisture index":[0], "raw annual mean rad":[19], "raw annual mean temp":[21.75], "raw annual precipitation":[1107], "raw clpk 1 1000 g clay":[19E3], "raw erosional":[100], "raw highest period moisture index":[1], "raw highest period radiation":[25.25], "raw hydraulic conductivity ksat":[250], 
  "raw lowest period moisture index":[0], "raw lowest period radiation":[14], "raw max temp warmest period":[30], "raw mean diurnal range":[8.5], "raw mean moisture index coldest quarter":[0], "raw mean moisture index highest quarter MI":[.25], "raw mean moisture index lowest quater MI":[0], "raw mean moisture index warmest quarter":[0], "raw mean temp coldest quarter":[17.5], "raw mean temp driest quater":[18.75], "raw mean temp warmer quarter":[24.75], "raw mean temp wettest quarter":[24.75], "raw min temp coldest period":[11.5], 
  "raw moisture index seasonality":[61.5], "raw precipitation coldets quarter":[74.5], "raw precipitation driest period":[0], "raw precipitation driest quarter":[55], "raw precipitation seasonality":[103.75], "raw precipitation warmest quarter":[608.75], "raw precipitation wettest period":[75.75], "raw precipitation wettest quarter":[731.5], "raw radiation coldest quarter":[15.25], "raw radiation driest quarter":[19], "raw radiation seasonality":[18.25], "raw radiation warmest quarter":[21.5], "raw radiation wettest quarter":[19], 
  "raw relief":[162], "raw ridgetopflat":[0], "raw rockalklty":[4], "raw rockgrainsz":[8], "raw rockhardness":[7], "raw rocknutrnt":[4], "raw roughness":[15.5], "raw sapk 1 1000 g sand":[61500], "raw slope":[7.5], "raw soildepth":[1], "raw solpawhc":[183], "raw temperature annual range":[17.5], "raw temperature seasonality":[1], "raw thpk 1 1000 g thickness":[285.25], "raw twi":[4.75], "raw valleybottom":[0]}, "with":{"modelled annual mean moisture index":[.9200000167], "modelled annual mean rad":[16.8999996185], 
  "modelled annual mean temp":[19.3999996185], "modelled annual precipitation":[1778], "modelled clpk 1 1000 g clay":[14E3], "modelled erosional":[100], "modelled highest period moisture index":[1], "modelled highest period radiation":[22.8999996185], "modelled hydraulic conductivity ksat":[300], "modelled isothermality":[.4900000095], "modelled lowest period moisture index":[.7300000191], "modelled lowest period radiation":[10.8000001907], "modelled max temp warmest period":[27.7999992371], "modelled mean diurnal range":[9.5], 
  "modelled mean moisture index coldest quarter":[1], "modelled mean moisture index highest quarter MI":[1], "modelled mean moisture index lowest quater MI":[.75], "modelled mean moisture index warmest quarter":[.9200000167], "modelled mean temp coldest quarter":[14.6000003815], "modelled mean temp driest quater":[16.1000003815], "modelled mean temp warmer quarter":[23.5], "modelled mean temp wettest quarter":[23.1000003815], "modelled min temp coldest period":[8.1999998093], "modelled moisture index seasonality":[12], 
  "modelled phos":[.0327499993], "modelled precipitation coldets quarter":[258], "modelled precipitation driest period":[11], "modelled precipitation driest quarter":[211], "modelled precipitation seasonality":[46], "modelled precipitation warmest quarter":[670], "modelled precipitation wettest period":[66], "modelled precipitation wettest quarter":[730], "modelled radiation coldest quarter":[12.8999996185], "modelled radiation driest quarter":[16.2999992371], "modelled radiation seasonality":[24], 
  "modelled radiation warmest quarter":[20.1000003815], "modelled radiation wettest quarter":[18.2999992371], "modelled relief":[178.5762023926], "modelled ridgetopflat":[0], "modelled rockalklty":[5], "modelled rockgrainsz":[3], "modelled rockhardness":[4], "modelled rocknutrnt":[4], "modelled roughness":[72.862159729], "modelled sapk 1 1000 g sand":[69E3], "modelled slope":[10.0389699936], "modelled soildepth":[1], "modelled solpawhc":[169], "modelled temperature annual range":[19.5], "modelled temperature seasonality":[1.2000000477], 
  "modelled thpk 1 1000 g thickness":[599], "modelled twi":[2.5513501167], "modelled valleybottom":[0], "modelled whpk 1 1000 g water cap":[117E3], "raw annual mean moisture index":[0], "raw annual mean rad":[16], "raw annual mean temp":[19], "raw annual precipitation":[1778], "raw clpk 1 1000 g clay":[14E3], "raw erosional":[100], "raw highest period moisture index":[1], "raw highest period radiation":[22], "raw hydraulic conductivity ksat":[300], "raw lowest period moisture index":[0], "raw lowest period radiation":[10], 
  "raw max temp warmest period":[27], "raw mean diurnal range":[9], "raw mean moisture index coldest quarter":[1], "raw mean moisture index highest quarter MI":[1], "raw mean moisture index lowest quater MI":[0], "raw mean moisture index warmest quarter":[0], "raw mean temp coldest quarter":[14], "raw mean temp driest quater":[16], "raw mean temp warmer quarter":[23], "raw mean temp wettest quarter":[23], "raw min temp coldest period":[8], "raw moisture index seasonality":[12], "raw precipitation coldets quarter":[258], 
  "raw precipitation driest period":[11], "raw precipitation driest quarter":[211], "raw precipitation seasonality":[46], "raw precipitation warmest quarter":[670], "raw precipitation wettest period":[66], "raw precipitation wettest quarter":[730], "raw radiation coldest quarter":[12], "raw radiation driest quarter":[16], "raw radiation seasonality":[24], "raw radiation warmest quarter":[20], "raw radiation wettest quarter":[18], "raw relief":[178], "raw ridgetopflat":[0], "raw rockalklty":[5], "raw rockgrainsz":[3], 
  "raw rockhardness":[4], "raw rocknutrnt":[4], "raw roughness":[72], "raw sapk 1 1000 g sand":[69E3], "raw slope":[10], "raw soildepth":[1], "raw solpawhc":[169], "raw temperature annual range":[19], "raw temperature seasonality":[1], "raw thpk 1 1000 g thickness":[599], "raw twi":[2], "raw valleybottom":[0]}, "your":{"modelled annual mean moisture index":[.8323181818], "modelled annual mean rad":[17.9524242387], "modelled annual mean temp":[19.2898482727], "modelled annual precipitation":[1888.3636363636], 
  "modelled clpk 1 1000 g clay":[25214.7727272727], "modelled erosional":[92.8787878788], "modelled highest period moisture index":[.998939395], "modelled highest period radiation":[24.5178788503], "modelled hydraulic conductivity ksat":[205.6212121212], "modelled isothermality":[.5086363656], "modelled lowest period moisture index":[.4447727201], "modelled lowest period radiation":[12.1872727221], "modelled max temp warmest period":[28.0525757327], "modelled mean diurnal range":[9.485757533], "modelled mean moisture index coldest quarter":[.8951666693], 
  "modelled mean moisture index highest quarter MI":[.9978787867], "modelled mean moisture index lowest quater MI":[.5378636367], "modelled mean moisture index warmest quarter":[.8636969721], "modelled mean temp coldest quarter":[14.951212141], "modelled mean temp driest quater":[16.7531818144], "modelled mean temp warmer quarter":[22.9656060132], "modelled mean temp wettest quarter":[22.5318182165], "modelled min temp coldest period":[9.4287879063], "modelled moisture index seasonality":[25.9621212121], 
  "modelled phos":[.0453631317], "modelled precipitation coldets quarter":[235.6090909091], "modelled precipitation driest period":[6.7242424242], "modelled precipitation driest quarter":[167.2409090909], "modelled precipitation seasonality":[68.203030303], "modelled precipitation warmest quarter":[790.2136363636], "modelled precipitation wettest period":[88.2606060606], "modelled precipitation wettest quarter":[970.5196969697], "modelled radiation coldest quarter":[14.1262121605], "modelled radiation driest quarter":[17.7987878742], 
  "modelled radiation seasonality":[21.6636363636], "modelled radiation warmest quarter":[20.8286361521], "modelled radiation wettest quarter":[18.6671213323], "modelled relief":[151.1616860035], "modelled ridgetopflat":[0], "modelled rockalklty":[4.7151515152], "modelled rockgrainsz":[5.5742424242], "modelled rockhardness":[6.2560606061], "modelled rocknutrnt":[4.5742424242], "modelled roughness":[14.6029429806], "modelled sapk 1 1000 g sand":[54667.803030303], "modelled slope":[8.4508264353], "modelled soildepth":[1.1122727402], 
  "modelled solpawhc":[155.3090909091], "modelled temperature annual range":[18.6489395503], "modelled temperature seasonality":[1.0938939283], "modelled thpk 1 1000 g thickness":[301.3257575758], "modelled twi":[5.6370893103], "modelled valleybottom":[7.1212121212], "modelled whpk 1 1000 g water cap":[51557.1969696969], "raw annual mean moisture index":[0], "raw annual mean rad":[17.6111111111], "raw annual mean temp":[18.5], "raw annual precipitation":[1925.8333333333], "raw clpk 1 1000 g clay":[26833.3333333333], 
  "raw erosional":[94.4444444444], "raw highest period moisture index":[.9444444444], "raw highest period radiation":[24.1111111111], "raw hydraulic conductivity ksat":[196.1111111111], "raw lowest period moisture index":[0], "raw lowest period radiation":[11.8333333333], "raw max temp warmest period":[27.4444444444], "raw mean diurnal range":[9.2777777778], "raw mean moisture index coldest quarter":[.3888888889], "raw mean moisture index highest quarter MI":[.9444444444], "raw mean moisture index lowest quater MI":[0], 
  "raw mean moisture index warmest quarter":[.0555555556], "raw mean temp coldest quarter":[14.1111111111], "raw mean temp driest quater":[15.8888888889], "raw mean temp warmer quarter":[22.1666666667], "raw mean temp wettest quarter":[21.7222222222], "raw min temp coldest period":[8.5555555556], "raw moisture index seasonality":[24.3333333333], "raw precipitation coldets quarter":[238.8888888889], "raw precipitation driest period":[6.5], "raw precipitation driest quarter":[169.1666666667], "raw precipitation seasonality":[69.4444444444], 
  "raw precipitation warmest quarter":[812.7222222222], "raw precipitation wettest period":[91.2777777778], "raw precipitation wettest quarter":[998.7222222222], "raw radiation coldest quarter":[13.6666666667], "raw radiation driest quarter":[17.1666666667], "raw radiation seasonality":[21.3333333333], "raw radiation warmest quarter":[20.3333333333], "raw radiation wettest quarter":[18.2777777778], "raw relief":[163.1111111111], "raw ridgetopflat":[0], "raw rockalklty":[4.3888888889], "raw rockgrainsz":[5.5], 
  "raw rockhardness":[6.0555555556], "raw rocknutrnt":[4.4444444444], "raw roughness":[11.8888888889], "raw sapk 1 1000 g sand":[52583.3333333333], "raw slope":[8.5], "raw soildepth":[.8333333333], "raw solpawhc":[156.6666666667], "raw temperature annual range":[18.6111111111], "raw temperature seasonality":[.6111111111], "raw thpk 1 1000 g thickness":[272.0555555556], "raw twi":[5.0555555556], "raw valleybottom":[5.5555555556]}, "own":{"modelled annual mean moisture index":[.9350000024], "modelled annual mean rad":[18.0500001907], 
  "modelled annual mean temp":[20.1999998093], "modelled annual precipitation":[2948], "modelled clpk 1 1000 g clay":[42E3], "modelled erosional":[100], "modelled highest period moisture index":[1], "modelled highest period radiation":[25.0500001907], "modelled hydraulic conductivity ksat":[300], "modelled isothermality":[.5400000215], "modelled lowest period moisture index":[.5549999774], "modelled lowest period radiation":[12.4000000954], "modelled max temp warmest period":[28.6499996185], "modelled mean diurnal range":[9.4500002861], 
  "modelled mean moisture index coldest quarter":[1], "modelled mean moisture index highest quarter MI":[1], "modelled mean moisture index lowest quater MI":[.7350000143], "modelled mean moisture index warmest quarter":[.9200000167], "modelled mean temp coldest quarter":[16.4500007629], "modelled mean temp driest quater":[19.4000005722], "modelled mean temp warmer quarter":[23.4000005722], "modelled mean temp wettest quarter":[22.6499996185], "modelled min temp coldest period":[11.3000001907], "modelled moisture index seasonality":[14], 
  "modelled phos":[.0769999996], "modelled precipitation coldets quarter":[428.5], "modelled precipitation driest period":[12.5], "modelled precipitation driest quarter":[247], "modelled precipitation seasonality":[68.5], "modelled precipitation warmest quarter":[1054], "modelled precipitation wettest period":[131], "modelled precipitation wettest quarter":[1492], "modelled radiation coldest quarter":[14.75], "modelled radiation driest quarter":[19.6499996185], "modelled radiation seasonality":[20], 
  "modelled radiation warmest quarter":[20.75], "modelled radiation wettest quarter":[18.0500001907], "modelled relief":[93.9310970306], "modelled ridgetopflat":[0], "modelled rockalklty":[6], "modelled rockgrainsz":[4], "modelled rockhardness":[7], "modelled rocknutrnt":[6], "modelled roughness":[4.0198574662], "modelled sapk 1 1000 g sand":[44E3], "modelled slope":[5.4142469168], "modelled soildepth":[1.1000000238], "modelled solpawhc":[171], "modelled temperature annual range":[17.4000005722], 
  "modelled temperature seasonality":[.9499999881], "modelled thpk 1 1000 g thickness":[150], "modelled twi":[5.4885058403], "modelled valleybottom":[0], "modelled whpk 1 1000 g water cap":[33E3], "raw annual mean moisture index":[0], "raw annual mean rad":[18], "raw annual mean temp":[20], "raw annual precipitation":[3017.6666666667], "raw clpk 1 1000 g clay":[42E3], "raw erosional":[100], "raw highest period moisture index":[1], "raw highest period radiation":[25], "raw hydraulic conductivity ksat":[300], 
  "raw lowest period moisture index":[0], "raw lowest period radiation":[12], "raw max temp warmest period":[28], "raw mean diurnal range":[9], "raw mean moisture index coldest quarter":[1], "raw mean moisture index highest quarter MI":[1], "raw mean moisture index lowest quater MI":[0], "raw mean moisture index warmest quarter":[0], "raw mean temp coldest quarter":[16], "raw mean temp driest quater":[19], "raw mean temp warmer quarter":[23], "raw mean temp wettest quarter":[22], "raw min temp coldest period":[11], 
  "raw moisture index seasonality":[13.6666666667], "raw precipitation coldets quarter":[437], "raw precipitation driest period":[12.6666666667], "raw precipitation driest quarter":[252.3333333333], "raw precipitation seasonality":[68.6666666667], "raw precipitation warmest quarter":[1077.3333333333], "raw precipitation wettest period":[134.3333333333], "raw precipitation wettest quarter":[1531], "raw radiation coldest quarter":[14], "raw radiation driest quarter":[19], "raw radiation seasonality":[20], 
  "raw radiation warmest quarter":[20], "raw radiation wettest quarter":[18], "raw relief":[113], "raw ridgetopflat":[0], "raw rockalklty":[6], "raw rockgrainsz":[4], "raw rockhardness":[7], "raw rocknutrnt":[6], "raw roughness":[4.6666666667], "raw sapk 1 1000 g sand":[44E3], "raw slope":[6.3333333333], "raw soildepth":[1], "raw solpawhc":[165.6666666667], "raw temperature annual range":[17], "raw temperature seasonality":[0], "raw thpk 1 1000 g thickness":[150], "raw twi":[5.3333333333], "raw valleybottom":[0]}, 
  "phylogeny":{"modelled annual mean moisture index":[.8325000107], "modelled annual mean rad":[18.5249996185], "modelled annual mean temp":[20.9250001907], "modelled annual precipitation":[2179.25], "modelled clpk 1 1000 g clay":[35250], "modelled erosional":[100], "modelled highest period moisture index":[1], "modelled highest period radiation":[25.2750000954], "modelled hydraulic conductivity ksat":[250], "modelled isothermality":[.5450000167], "modelled lowest period moisture index":[.3475000001], 
  "modelled lowest period radiation":[13.3499999046], "modelled max temp warmest period":[29.2249999046], "modelled mean diurnal range":[9.5], "modelled mean moisture index coldest quarter":[.8774999976], "modelled mean moisture index highest quarter MI":[1], "modelled mean moisture index lowest quater MI":[.4975000024], "modelled mean moisture index warmest quarter":[.8824999928], "modelled mean temp coldest quarter":[17.125], "modelled mean temp driest quater":[19.0499997139], "modelled mean temp warmer quarter":[24.0749998093], 
  "modelled mean temp wettest quarter":[23.5500001907], "modelled min temp coldest period":[11.75], "modelled moisture index seasonality":[28.5], "modelled phos":[.0491249994], "modelled precipitation coldets quarter":[234.25], "modelled precipitation driest period":[5.5], "modelled precipitation driest quarter":[157.75], "modelled precipitation seasonality":[79], "modelled precipitation warmest quarter":[919.25], "modelled precipitation wettest period":[108.75], "modelled precipitation wettest quarter":[1209.25], 
  "modelled radiation coldest quarter":[15.4999997616], "modelled radiation driest quarter":[18.9500002861], "modelled radiation seasonality":[18.75], "modelled radiation warmest quarter":[21], "modelled radiation wettest quarter":[18.4499998093], "modelled relief":[191.561460495], "modelled ridgetopflat":[0], "modelled rockalklty":[4.5], "modelled rockgrainsz":[4.5], "modelled rockhardness":[6.5], "modelled rocknutrnt":[5.5], "modelled roughness":[11.7312440872], "modelled sapk 1 1000 g sand":[46500], 
  "modelled slope":[10.01773417], "modelled soildepth":[1.2000000179], "modelled solpawhc":[164.5], "modelled temperature annual range":[17.4500000477], "modelled temperature seasonality":[.9424999952], "modelled thpk 1 1000 g thickness":[195.25], "modelled twi":[7.2423673272], "modelled valleybottom":[0], "modelled whpk 1 1000 g water cap":[35500], "raw annual mean moisture index":[0], "raw annual mean rad":[18], "raw annual mean temp":[20.5], "raw annual precipitation":[2179.25], "raw clpk 1 1000 g clay":[35250], 
  "raw erosional":[100], "raw highest period moisture index":[1], "raw highest period radiation":[25], "raw hydraulic conductivity ksat":[250], "raw lowest period moisture index":[0], "raw lowest period radiation":[13], "raw max temp warmest period":[28.5], "raw mean diurnal range":[9], "raw mean moisture index coldest quarter":[.75], "raw mean moisture index highest quarter MI":[1], "raw mean moisture index lowest quater MI":[0], "raw mean moisture index warmest quarter":[0], "raw mean temp coldest quarter":[16.75], 
  "raw mean temp driest quater":[18.75], "raw mean temp warmer quarter":[23.75], "raw mean temp wettest quarter":[23], "raw min temp coldest period":[11], "raw moisture index seasonality":[28.5], "raw precipitation coldets quarter":[234.25], "raw precipitation driest period":[5.5], "raw precipitation driest quarter":[157.75], "raw precipitation seasonality":[79], "raw precipitation warmest quarter":[919.25], "raw precipitation wettest period":[108.75], "raw precipitation wettest quarter":[1209.25], 
  "raw radiation coldest quarter":[15.25], "raw radiation driest quarter":[18.75], "raw radiation seasonality":[18.75], "raw radiation warmest quarter":[20.75], "raw radiation wettest quarter":[18], "raw relief":[191], "raw ridgetopflat":[0], "raw rockalklty":[4.5], "raw rockgrainsz":[4.5], "raw rockhardness":[6.5], "raw rocknutrnt":[5.5], "raw roughness":[11.25], "raw sapk 1 1000 g sand":[46500], "raw slope":[9.5], "raw soildepth":[1], "raw solpawhc":[164.5], "raw temperature annual range":[17], 
  "raw temperature seasonality":[.25], "raw thpk 1 1000 g thickness":[195.25], "raw twi":[6.75], "raw valleybottom":[0]}, "in":{"modelled annual mean moisture index":[.8511999941], "modelled annual mean rad":[17.7549997139], "modelled annual mean temp":[20.1320000076], "modelled annual precipitation":[2004.6], "modelled clpk 1 1000 g clay":[24337.5], "modelled erosional":[100], "modelled highest period moisture index":[1], "modelled highest period radiation":[24.4609998512], "modelled hydraulic conductivity ksat":[230], 
  "modelled isothermality":[.519799999], "modelled lowest period moisture index":[.4349999921], "modelled lowest period radiation":[11.9399999428], "modelled max temp warmest period":[28.5809999847], "modelled mean diurnal range":[9.3529999971], "modelled mean moisture index coldest quarter":[.9477999979], "modelled mean moisture index highest quarter MI":[1], "modelled mean moisture index lowest quater MI":[.5399000007], "modelled mean moisture index warmest quarter":[.8883000004], "modelled mean temp coldest quarter":[16.0029999352], 
  "modelled mean temp driest quater":[17.4470001602], "modelled mean temp warmer quarter":[23.6520002556], "modelled mean temp wettest quarter":[23.2579998207], "modelled min temp coldest period":[10.5970001769], "modelled moisture index seasonality":[24.44], "modelled phos":[.0236599989], "modelled precipitation coldets quarter":[229.2], "modelled precipitation driest period":[8.44], "modelled precipitation driest quarter":[170.66], "modelled precipitation seasonality":[66.77], "modelled precipitation warmest quarter":[871.37], 
  "modelled precipitation wettest period":[92.64], "modelled precipitation wettest quarter":[1050.83], "modelled radiation coldest quarter":[14.0290001678], "modelled radiation driest quarter":[17.2499999809], "modelled radiation seasonality":[21.92], "modelled radiation warmest quarter":[20.4790001106], "modelled radiation wettest quarter":[18.3959999466], "modelled relief":[180.825651741], "modelled ridgetopflat":[0], "modelled rockalklty":[4.92], "modelled rockgrainsz":[6.22], "modelled rockhardness":[6.34], 
  "modelled rocknutrnt":[4.34], "modelled roughness":[41.1613443279], "modelled sapk 1 1000 g sand":[52267.5], "modelled slope":[10.5619576693], "modelled soildepth":[1.3479999959], "modelled solpawhc":[183.33], "modelled temperature annual range":[17.9670000267], "modelled temperature seasonality":[1.0439999992], "modelled thpk 1 1000 g thickness":[226.16], "modelled twi":[5.7365186501], "modelled valleybottom":[1.0625], "modelled whpk 1 1000 g water cap":[35632.5], "raw annual mean moisture index":[0], 
  "raw annual mean rad":[17], "raw annual mean temp":[18.8571428571], "raw annual precipitation":[1932.7142857143], "raw clpk 1 1000 g clay":[23678.5714285714], "raw erosional":[100], "raw highest period moisture index":[1], "raw highest period radiation":[24.1428571429], "raw hydraulic conductivity ksat":[242.8571428571], "raw lowest period moisture index":[0], "raw lowest period radiation":[11], "raw max temp warmest period":[27.4285714286], "raw mean diurnal range":[9], "raw mean moisture index coldest quarter":[.4285714286], 
  "raw mean moisture index highest quarter MI":[1], "raw mean moisture index lowest quater MI":[0], "raw mean moisture index warmest quarter":[0], "raw mean temp coldest quarter":[14.5714285714], "raw mean temp driest quater":[16], "raw mean temp warmer quarter":[22.5714285714], "raw mean temp wettest quarter":[22.1428571429], "raw min temp coldest period":[9.2857142857], "raw moisture index seasonality":[23.5714285714], "raw precipitation coldets quarter":[226.2857142857], "raw precipitation driest period":[8.4285714286], 
  "raw precipitation driest quarter":[171.4285714286], "raw precipitation seasonality":[64.8571428571], "raw precipitation warmest quarter":[833.5714285714], "raw precipitation wettest period":[89], "raw precipitation wettest quarter":[1003.5714285714], "raw radiation coldest quarter":[13.1428571429], "raw radiation driest quarter":[16.4285714286], "raw radiation seasonality":[22.8571428571], "raw radiation warmest quarter":[20.2857142857], "raw radiation wettest quarter":[17.8571428571], "raw relief":[182.5714285714], 
  "raw ridgetopflat":[0], "raw rockalklty":[4], "raw rockgrainsz":[4.8571428571], "raw rockhardness":[5.1428571429], "raw rocknutrnt":[3.7142857143], "raw roughness":[29.7142857143], "raw sapk 1 1000 g sand":[54535.7142857143], "raw slope":[10.1428571429], "raw soildepth":[1], "raw solpawhc":[188.7142857143], "raw temperature annual range":[18], "raw temperature seasonality":[.4285714286], "raw thpk 1 1000 g thickness":[253.4285714286], "raw twi":[4.8571428571], "raw valleybottom":[0]}, "newick":{"modelled annual mean moisture index":[.8419692351], 
  "modelled annual mean rad":[15.4089230904], "modelled annual mean temp":[11.7830769011], "modelled annual precipitation":[1282.2246153846], "modelled clpk 1 1000 g clay":[21682.3076923077], "modelled erosional":[98.4807692308], "modelled highest period moisture index":[.9973846157], "modelled highest period radiation":[24.0646153729], "modelled hydraulic conductivity ksat":[180.3692307692], "modelled isothermality":[.4703076909], "modelled lowest period moisture index":[.48273846], "modelled lowest period radiation":[7.0495384554], 
  "modelled max temp warmest period":[23.5836921927], "modelled mean diurnal range":[10.2701538335], "modelled mean moisture index coldest quarter":[.9867076942], "modelled mean moisture index highest quarter MI":[.9953846163], "modelled mean moisture index lowest quater MI":[.5702769235], "modelled mean moisture index warmest quarter":[.6286461528], "modelled mean temp coldest quarter":[6.664307713], "modelled mean temp driest quater":[12.2307692], "modelled mean temp warmer quarter":[16.8929231204], 
  "modelled mean temp wettest quarter":[11.9966153483], "modelled min temp coldest period":[1.7335384761], "modelled moisture index seasonality":[22.3753846154], "modelled phos":[.0354398355], "modelled precipitation coldets quarter":[316.5815384615], "modelled precipitation driest period":[13.1261538462], "modelled precipitation driest quarter":[212.48], "modelled precipitation seasonality":[25.9846153846], "modelled precipitation warmest quarter":[333.4307692308], "modelled precipitation wettest period":[39.5076923077], 
  "modelled precipitation wettest quarter":[446.7507692308], "modelled radiation coldest quarter":[8.8353845684], "modelled radiation driest quarter":[17.0212307989], "modelled radiation seasonality":[39.0307692308], "modelled radiation warmest quarter":[21.3784615619], "modelled radiation wettest quarter":[14.3270768371], "modelled relief":[156.8749819389], "modelled ridgetopflat":[.2884615385], "modelled rockalklty":[4.6646153846], "modelled rockgrainsz":[4.6615384615], "modelled rockhardness":[5.8615384615], 
  "modelled rocknutrnt":[4.5569230769], "modelled roughness":[9.5328148233], "modelled sapk 1 1000 g sand":[58780.7692307692], "modelled slope":[9.5631930516], "modelled soildepth":[1.0756923059], "modelled solpawhc":[151.4553846154], "modelled temperature annual range":[21.8473846553], "modelled temperature seasonality":[1.4144307659], "modelled thpk 1 1000 g thickness":[278.2092307692], "modelled twi":[4.8256355231], "modelled valleybottom":[.4807692308], "modelled whpk 1 1000 g water cap":[45223.0769230769], 
  "raw annual mean moisture index":[.0083333333], "raw annual mean rad":[15], "raw annual mean temp":[11.5], "raw annual precipitation":[1295.7833333333], "raw clpk 1 1000 g clay":[22614.5833333333], "raw erosional":[98.5166666667], "raw highest period moisture index":[.9583333333], "raw highest period radiation":[23.625], "raw hydraulic conductivity ksat":[181.4166666667], "raw lowest period moisture index":[0], "raw lowest period radiation":[6.7916666667], "raw max temp warmest period":[23.2833333333], 
  "raw mean diurnal range":[9.8083333333], "raw mean moisture index coldest quarter":[.6333333333], "raw mean moisture index highest quarter MI":[.8583333333], "raw mean moisture index lowest quater MI":[.0083333333], "raw mean moisture index warmest quarter":[.0083333333], "raw mean temp coldest quarter":[6.4], "raw mean temp driest quater":[11.8333333333], "raw mean temp warmer quarter":[16.6], "raw mean temp wettest quarter":[11.9], "raw min temp coldest period":[1.75], "raw moisture index seasonality":[22.375], 
  "raw precipitation coldets quarter":[312.6666666667], "raw precipitation driest period":[13.0083333333], "raw precipitation driest quarter":[212.0583333333], "raw precipitation seasonality":[26.6833333333], "raw precipitation warmest quarter":[347.1833333333], "raw precipitation wettest period":[40.8166666667], "raw precipitation wettest quarter":[460.0583333333], "raw radiation coldest quarter":[8.4333333333], "raw radiation driest quarter":[16.5416666667], "raw radiation seasonality":[38.6916666667], 
  "raw radiation warmest quarter":[20.8916666667], "raw radiation wettest quarter":[13.8916666667], "raw relief":[157], "raw ridgetopflat":[.1], "raw rockalklty":[4.4083333333], "raw rockgrainsz":[4.6083333333], "raw rockhardness":[5.8], "raw rocknutrnt":[4.35], "raw roughness":[9.5166666667], "raw sapk 1 1000 g sand":[57129.1666666667], "raw slope":[9.1583333333], "raw soildepth":[.6083333333], "raw solpawhc":[151.35], "raw temperature annual range":[21.4333333333], "raw temperature seasonality":[.9416666667], 
  "raw thpk 1 1000 g thickness":[279.0416666667], "raw twi":[4.5416666667], "raw valleybottom":[.6083333333]}, "form":{"modelled annual mean moisture index":[.9756666799], "modelled annual mean rad":[12.0000000954], "modelled annual mean temp":[8.4266665936], "modelled annual precipitation":[1407.3333333333], "modelled clpk 1 1000 g clay":[24058.3333333333], "modelled erosional":[99.1666666667], "modelled highest period moisture index":[1], "modelled highest period radiation":[20.980000178], "modelled hydraulic conductivity ksat":[166.6666666667], 
  "modelled isothermality":[.4939999938], "modelled lowest period moisture index":[.8756666621], "modelled lowest period radiation":[3.9166666349], "modelled max temp warmest period":[18.3566667557], "modelled mean diurnal range":[8.6166667461], "modelled mean moisture index coldest quarter":[1], "modelled mean moisture index highest quarter MI":[1], "modelled mean moisture index lowest quater MI":[.9139999986], "modelled mean moisture index warmest quarter":[.9393333415], "modelled mean temp coldest quarter":[4.6199999571], 
  "modelled mean temp driest quater":[12.2033334096], "modelled mean temp warmer quarter":[12.313333416], "modelled mean temp wettest quarter":[6.9966665745], "modelled min temp coldest period":[1.009999985], "modelled moisture index seasonality":[4.4], "modelled phos":[.0296393858], "modelled precipitation coldets quarter":[405], "modelled precipitation driest period":[18.4333333333], "modelled precipitation driest quarter":[267.1666666667], "modelled precipitation seasonality":[17.3666666667], 
  "modelled precipitation warmest quarter":[272.2], "modelled precipitation wettest period":[36.7], "modelled precipitation wettest quarter":[425.8333333333], "modelled radiation coldest quarter":[5.6500000318], "modelled radiation driest quarter":[17.3266669591], "modelled radiation seasonality":[50.7666666667], "modelled radiation warmest quarter":[18.4133333206], "modelled radiation wettest quarter":[11.630000035], "modelled relief":[187.601335907], "modelled ridgetopflat":[0], "modelled rockalklty":[5.8], 
  "modelled rockgrainsz":[5.0333333333], "modelled rockhardness":[5.7666666667], "modelled rocknutrnt":[5.7666666667], "modelled roughness":[11.1428800742], "modelled sapk 1 1000 g sand":[54641.6666666666], "modelled slope":[12.2245521386], "modelled soildepth":[1.0466666738], "modelled solpawhc":[160.1666666667], "modelled temperature annual range":[17.3433331172], "modelled temperature seasonality":[1.0673333148], "modelled thpk 1 1000 g thickness":[322.6333333333], "modelled twi":[5.1204978943], 
  "modelled valleybottom":[.8333333333], "modelled whpk 1 1000 g water cap":[53558.3333333333], "raw annual mean moisture index":[.0909090909], "raw annual mean rad":[11.7272727273], "raw annual mean temp":[7.9090909091], "raw annual precipitation":[1400], "raw clpk 1 1000 g clay":[25386.3636363636], "raw erosional":[99.3636363636], "raw highest period moisture index":[1], "raw highest period radiation":[20.8181818182], "raw hydraulic conductivity ksat":[172.7272727273], "raw lowest period moisture index":[.0909090909], 
  "raw lowest period radiation":[3.8181818182], "raw max temp warmest period":[18.0909090909], "raw mean diurnal range":[8.2727272727], "raw mean moisture index coldest quarter":[1], "raw mean moisture index highest quarter MI":[1], "raw mean moisture index lowest quater MI":[.0909090909], "raw mean moisture index warmest quarter":[.0909090909], "raw mean temp coldest quarter":[4.2727272727], "raw mean temp driest quater":[11.9090909091], "raw mean temp warmer quarter":[11.9090909091], "raw mean temp wettest quarter":[6.2727272727], 
  "raw min temp coldest period":[.6363636364], "raw moisture index seasonality":[4.5454545455], "raw precipitation coldets quarter":[404.1818181818], "raw precipitation driest period":[18], "raw precipitation driest quarter":[264.1818181818], "raw precipitation seasonality":[17.6363636364], "raw precipitation warmest quarter":[269], "raw precipitation wettest period":[36.3636363636], "raw precipitation wettest quarter":[423.1818181818], "raw radiation coldest quarter":[5.0909090909], "raw radiation driest quarter":[17.1818181818], 
  "raw radiation seasonality":[50.5454545455], "raw radiation warmest quarter":[18.0909090909], "raw radiation wettest quarter":[11], "raw relief":[214.8181818182], "raw ridgetopflat":[0], "raw rockalklty":[5.8181818182], "raw rockgrainsz":[4.9090909091], "raw rockhardness":[5.8181818182], "raw rocknutrnt":[5.8181818182], "raw roughness":[11.5454545455], "raw sapk 1 1000 g sand":[52431.8181818182], "raw slope":[13], "raw soildepth":[.7272727273], "raw solpawhc":[167.5454545455], "raw temperature annual range":[16.9090909091], 
  "raw temperature seasonality":[.8181818182], "raw thpk 1 1000 g thickness":[308.6363636364], "raw twi":[4.3636363636], "raw valleybottom":[.5454545455]}, "tree":{"modelled annual mean moisture index":[.2800000012], "modelled annual mean rad":[22.1500005722], "modelled annual mean temp":[26.4499998093], "modelled annual precipitation":[732], "modelled clpk 1 1000 g clay":[41500], "modelled erosional":[100], "modelled highest period moisture index":[.9199999869], "modelled highest period radiation":[26.8000001907], 
  "modelled hydraulic conductivity ksat":[65], "modelled isothermality":[.5400000215], "modelled lowest period moisture index":[.0049999999], "modelled lowest period radiation":[17], "modelled max temp warmest period":[38.5], "modelled mean diurnal range":[14.9500002861], "modelled mean moisture index coldest quarter":[.0299999993], "modelled mean moisture index highest quarter MI":[.8199999928], "modelled mean moisture index lowest quater MI":[.0099999998], "modelled mean moisture index warmest quarter":[.2599999979], 
  "modelled mean temp coldest quarter":[21], "modelled mean temp driest quater":[23.25], "modelled mean temp warmer quarter":[30.5], "modelled mean temp wettest quarter":[29.3500003815], "modelled min temp coldest period":[10.7999997139], "modelled moisture index seasonality":[120], "modelled phos":[.0149999997], "modelled precipitation coldets quarter":[14], "modelled precipitation driest period":[0], "modelled precipitation driest quarter":[0], "modelled precipitation seasonality":[126], "modelled precipitation warmest quarter":[239.5], 
  "modelled precipitation wettest period":[52], "modelled precipitation wettest quarter":[546], "modelled radiation coldest quarter":[18.8500003815], "modelled radiation driest quarter":[21.9499998093], "modelled radiation seasonality":[13.5], "modelled radiation warmest quarter":[25.25], "modelled radiation wettest quarter":[22.4000005722], "modelled relief":[98.6766052246], "modelled ridgetopflat":[0], "modelled rockalklty":[5.5], "modelled rockgrainsz":[4.5], "modelled rockhardness":[4.5], "modelled rocknutrnt":[5], 
  "modelled roughness":[17.0805878639], "modelled sapk 1 1000 g sand":[37E3], "modelled slope":[5.9404842854], "modelled soildepth":[1.0000000298], "modelled solpawhc":[117.5], "modelled temperature annual range":[27.75], "modelled temperature seasonality":[1.2549999952], "modelled thpk 1 1000 g thickness":[150], "modelled twi":[8.5943181515], "modelled valleybottom":[0], "modelled whpk 1 1000 g water cap":[20500], "raw annual mean moisture index":[0], "raw annual mean rad":[22], "raw annual mean temp":[26], 
  "raw annual precipitation":[732], "raw clpk 1 1000 g clay":[41500], "raw erosional":[100], "raw highest period moisture index":[0], "raw highest period radiation":[26], "raw hydraulic conductivity ksat":[65], "raw lowest period moisture index":[0], "raw lowest period radiation":[16.5], "raw max temp warmest period":[38], "raw mean diurnal range":[14.5], "raw mean moisture index coldest quarter":[0], "raw mean moisture index highest quarter MI":[0], "raw mean moisture index lowest quater MI":[0], 
  "raw mean moisture index warmest quarter":[0], "raw mean temp coldest quarter":[20.5], "raw mean temp driest quater":[22.5], "raw mean temp warmer quarter":[30], "raw mean temp wettest quarter":[29], "raw min temp coldest period":[10.5], "raw moisture index seasonality":[120], "raw precipitation coldets quarter":[14], "raw precipitation driest period":[0], "raw precipitation driest quarter":[0], "raw precipitation seasonality":[126], "raw precipitation warmest quarter":[239.5], "raw precipitation wettest period":[52], 
  "raw precipitation wettest quarter":[546], "raw radiation coldest quarter":[18.5], "raw radiation driest quarter":[21.5], "raw radiation seasonality":[13.5], "raw radiation warmest quarter":[25], "raw radiation wettest quarter":[22], "raw relief":[98], "raw ridgetopflat":[0], "raw rockalklty":[5.5], "raw rockgrainsz":[4.5], "raw rockhardness":[4.5], "raw rocknutrnt":[5], "raw roughness":[16.5], "raw sapk 1 1000 g sand":[37E3], "raw slope":[5.5], "raw soildepth":[.5], "raw solpawhc":[117.5], "raw temperature annual range":[27], 
  "raw temperature seasonality":[1], "raw thpk 1 1000 g thickness":[150], "raw twi":[8], "raw valleybottom":[0]}, "take":{"modelled annual mean moisture index":[.7365444446], "modelled annual mean rad":[17.1275078493], "modelled annual mean temp":[16.1311112493], "modelled annual precipitation":[1255.8687301587], "modelled clpk 1 1000 g clay":[21822.0634920634], "modelled erosional":[91.9027777778], "modelled highest period moisture index":[.9502539679], "modelled highest period radiation":[24.715031606], 
  "modelled hydraulic conductivity ksat":[152.3], "modelled isothermality":[.4938333283], "modelled lowest period moisture index":[.3612952372], "modelled lowest period radiation":[9.6579523886], "modelled max temp warmest period":[27.2970475527], "modelled mean diurnal range":[10.9151110977], "modelled mean moisture index coldest quarter":[.8659396845], "modelled mean moisture index highest quarter MI":[.9381000012], "modelled mean moisture index lowest quater MI":[.4386444416], "modelled mean moisture index warmest quarter":[.5990571438], 
  "modelled mean temp coldest quarter":[11.0153809807], "modelled mean temp driest quater":[14.1643810366], "modelled mean temp warmer quarter":[21.0059206676], "modelled mean temp wettest quarter":[18.1127459956], "modelled min temp coldest period":[5.1418412599], "modelled moisture index seasonality":[31.663015873], "modelled phos":[.0397253511], "modelled precipitation coldets quarter":[243.0065079365], "modelled precipitation driest period":[7.4119047619], "modelled precipitation driest quarter":[158.4253968254], 
  "modelled precipitation seasonality":[45.0196825397], "modelled precipitation warmest quarter":[418.6682539683], "modelled precipitation wettest period":[49.3933333333], "modelled precipitation wettest quarter":[535.4804761905], "modelled radiation coldest quarter":[11.5418730642], "modelled radiation driest quarter":[16.7123016274], "modelled radiation seasonality":[30.5920634921], "modelled radiation warmest quarter":[21.9849682202], "modelled radiation wettest quarter":[17.2387459149], "modelled relief":[97.2765801426], 
  "modelled ridgetopflat":[.6339285714], "modelled rockalklty":[4.7514285714], "modelled rockgrainsz":[4.3793650794], "modelled rockhardness":[5.7], "modelled rocknutrnt":[4.7347619048], "modelled roughness":[13.9966933051], "modelled sapk 1 1000 g sand":[61094.5238095238], "modelled slope":[6.4187526792], "modelled soildepth":[.9957460357], "modelled solpawhc":[125.65], "modelled temperature annual range":[22.1440794706], "modelled temperature seasonality":[1.3577285743], "modelled thpk 1 1000 g thickness":[276.8314285714], 
  "modelled twi":[6.0713178382], "modelled valleybottom":[5.5426587302], "modelled whpk 1 1000 g water cap":[41211.3919047619], "raw annual mean moisture index":[0], "raw annual mean rad":[16.0625], "raw annual mean temp":[15.203125], "raw annual precipitation":[1208.296875], "raw clpk 1 1000 g clay":[20792.96875], "raw erosional":[90.5625], "raw highest period moisture index":[.703125], "raw highest period radiation":[23.421875], "raw hydraulic conductivity ksat":[141.09375], "raw lowest period moisture index":[0], 
  "raw lowest period radiation":[8.8125], "raw max temp warmest period":[25.828125], "raw mean diurnal range":[10.046875], "raw mean moisture index coldest quarter":[.40625], "raw mean moisture index highest quarter MI":[.640625], "raw mean moisture index lowest quater MI":[0], "raw mean moisture index warmest quarter":[.015625], "raw mean temp coldest quarter":[10.265625], "raw mean temp driest quater":[13.1875], "raw mean temp warmer quarter":[19.796875], "raw mean temp wettest quarter":[16.9375], 
  "raw min temp coldest period":[4.53125], "raw moisture index seasonality":[29.625], "raw precipitation coldets quarter":[232.109375], "raw precipitation driest period":[7.28125], "raw precipitation driest quarter":[157.328125], "raw precipitation seasonality":[42.140625], "raw precipitation warmest quarter":[401.015625], "raw precipitation wettest period":[45.546875], "raw precipitation wettest quarter":[506.40625], "raw radiation coldest quarter":[10.625], "raw radiation driest quarter":[15.6875], 
  "raw radiation seasonality":[29.78125], "raw radiation warmest quarter":[20.71875], "raw radiation wettest quarter":[16.421875], "raw relief":[100.15625], "raw ridgetopflat":[.484375], "raw rockalklty":[4.109375], "raw rockgrainsz":[3.84375], "raw rockhardness":[5.1875], "raw rocknutrnt":[4], "raw roughness":[13.9375], "raw sapk 1 1000 g sand":[57734.375], "raw slope":[6.078125], "raw soildepth":[.5], "raw solpawhc":[116.21875], "raw temperature annual range":[21.03125], "raw temperature seasonality":[.90625], 
  "raw thpk 1 1000 g thickness":[267.40625], "raw twi":[5.46875], "raw valleybottom":[4.953125]}, "care":{"modelled annual mean moisture index":[.7523631571], "modelled annual mean rad":[15.7872632313], "modelled annual mean temp":[14.148368388], "modelled annual precipitation":[1072.0410526316], "modelled clpk 1 1000 g clay":[20124.6052631579], "modelled erosional":[85.6052631579], "modelled highest period moisture index":[.9810842105], "modelled highest period radiation":[24.9694211327], "modelled hydraulic conductivity ksat":[130.0578947368], 
  "modelled isothermality":[.4845000008], "modelled lowest period moisture index":[.323263157], "modelled lowest period radiation":[7.2001579207], "modelled max temp warmest period":[25.3658948326], "modelled mean diurnal range":[10.2003158394], "modelled mean moisture index coldest quarter":[.9645894769], "modelled mean moisture index highest quarter MI":[.9754421075], "modelled mean moisture index lowest quater MI":[.4105263146], "modelled mean moisture index warmest quarter":[.4492105245], "modelled mean temp coldest quarter":[9.284631582], 
  "modelled mean temp driest quater":[15.7744210745], "modelled mean temp warmer quarter":[18.8259999486], "modelled mean temp wettest quarter":[13.4179999638], "modelled min temp coldest period":[4.3915789415], "modelled moisture index seasonality":[34.51], "modelled phos":[.0319927152], "modelled precipitation coldets quarter":[293.6242105263], "modelled precipitation driest period":[7.7615789474], "modelled precipitation driest quarter":[158.1031578947], "modelled precipitation seasonality":[32.4805263158], 
  "modelled precipitation warmest quarter":[240.0526315789], "modelled precipitation wettest period":[34.3584210526], "modelled precipitation wettest quarter":[384.7031578947], "modelled radiation coldest quarter":[9.1081578742], "modelled radiation driest quarter":[19.6293685346], "modelled radiation seasonality":[39.0931578947], "modelled radiation warmest quarter":[22.166210543], "modelled radiation wettest quarter":[13.3475263033], "modelled relief":[74.8392543699], "modelled ridgetopflat":[4.1447368421], 
  "modelled rockalklty":[4.9478947368], "modelled rockgrainsz":[4.0494736842], "modelled rockhardness":[5.6621052632], "modelled rocknutrnt":[4.4805263158], "modelled roughness":[17.1395764974], "modelled sapk 1 1000 g sand":[60505.3947368421], "modelled slope":[4.8369444082], "modelled soildepth":[.9438947287], "modelled solpawhc":[110.2721052632], "modelled temperature annual range":[20.8948948519], "modelled temperature seasonality":[1.3039000004], "modelled thpk 1 1000 g thickness":[270.7410526316], 
  "modelled twi":[5.8377228775], "modelled valleybottom":[11.2171052632], "modelled whpk 1 1000 g water cap":[38992.5510526315], "raw annual mean moisture index":[0], "raw annual mean rad":[14.5428571429], "raw annual mean temp":[12.8285714286], "raw annual precipitation":[1000.6], "raw clpk 1 1000 g clay":[18821.4285714286], "raw erosional":[77.6], "raw highest period moisture index":[.7714285714], "raw highest period radiation":[23.1428571429], "raw hydraulic conductivity ksat":[122.2857142857], 
  "raw lowest period moisture index":[0], "raw lowest period radiation":[6.4571428571], "raw max temp warmest period":[23.5142857143], "raw mean diurnal range":[9.2], "raw mean moisture index coldest quarter":[.4285714286], "raw mean moisture index highest quarter MI":[.7428571429], "raw mean moisture index lowest quater MI":[0], "raw mean moisture index warmest quarter":[0], "raw mean temp coldest quarter":[8.3714285714], "raw mean temp driest quater":[14.3428571429], "raw mean temp warmer quarter":[17.3428571429], 
  "raw mean temp wettest quarter":[12.3428571429], "raw min temp coldest period":[3.6], "raw moisture index seasonality":[32.3428571429], "raw precipitation coldets quarter":[272.2571428571], "raw precipitation driest period":[7.2285714286], "raw precipitation driest quarter":[149.8], "raw precipitation seasonality":[30.2857142857], "raw precipitation warmest quarter":[235.7714285714], "raw precipitation wettest period":[32.0857142857], "raw precipitation wettest quarter":[363.1714285714], "raw radiation coldest quarter":[8.2571428571], 
  "raw radiation driest quarter":[18], "raw radiation seasonality":[37], "raw radiation warmest quarter":[20.4285714286], "raw radiation wettest quarter":[12.1714285714], "raw relief":[73.2285714286], "raw ridgetopflat":[4.2571428571], "raw rockalklty":[4.2], "raw rockgrainsz":[3.6571428571], "raw rockhardness":[4.6], "raw rocknutrnt":[3.8], "raw roughness":[15.9714285714], "raw sapk 1 1000 g sand":[55707.1428571429], "raw slope":[4.4], "raw soildepth":[.3142857143], "raw solpawhc":[99.3714285714], 
  "raw temperature annual range":[19.4857142857], "raw temperature seasonality":[.8857142857], "raw thpk 1 1000 g thickness":[256.2285714286], "raw twi":[5.7428571429], "raw valleybottom":[9.3714285714]}, "to":{"modelled annual mean moisture index":[.3124999981], "modelled annual mean rad":[19.4000000954], "modelled annual mean temp":[17.6749999523], "modelled annual precipitation":[369.5], "modelled clpk 1 1000 g clay":[16375], "modelled erosional":[57.8125], "modelled highest period moisture index":[.7574999928], 
  "modelled highest period radiation":[28.8750004768], "modelled hydraulic conductivity ksat":[200], "modelled isothermality":[.484999992], "modelled lowest period moisture index":[.0299999993], "modelled lowest period radiation":[9.7249999046], "modelled max temp warmest period":[33.1500005722], "modelled mean diurnal range":[13.2000000477], "modelled mean moisture index coldest quarter":[.7025000006], "modelled mean moisture index highest quarter MI":[.7099999934], "modelled mean moisture index lowest quater MI":[.044999999], 
  "modelled mean moisture index warmest quarter":[.0574999992], "modelled mean temp coldest quarter":[11.5250000954], "modelled mean temp driest quater":[21.6499996185], "modelled mean temp warmer quarter":[24.25], "modelled mean temp wettest quarter":[12.1749999523], "modelled min temp coldest period":[5.6000000238], "modelled moisture index seasonality":[90.25], "modelled phos":[.0180416674], "modelled precipitation coldets quarter":[160.25], "modelled precipitation driest period":[0], "modelled precipitation driest quarter":[28.75], 
  "modelled precipitation seasonality":[59.75], "modelled precipitation warmest quarter":[48.75], "modelled precipitation wettest period":[15], "modelled precipitation wettest quarter":[174.5], "modelled radiation coldest quarter":[12.2000000477], "modelled radiation driest quarter":[27.0499997139], "modelled radiation seasonality":[34.75], "modelled radiation warmest quarter":[26.0750002861], "modelled radiation wettest quarter":[11.0250000954], "modelled relief":[10.535130471], "modelled ridgetopflat":[0], 
  "modelled rockalklty":[5], "modelled rockgrainsz":[5.5], "modelled rockhardness":[5.5], "modelled rocknutrnt":[3.75], "modelled roughness":[1.172922425], "modelled sapk 1 1000 g sand":[68250], "modelled slope":[.6775645409], "modelled soildepth":[.875], "modelled solpawhc":[120], "modelled temperature annual range":[27.5250000954], "modelled temperature seasonality":[1.7350000143], "modelled thpk 1 1000 g thickness":[277.75], "modelled twi":[7.6787025928], "modelled valleybottom":[35.9375], "modelled whpk 1 1000 g water cap":[23578.75], 
  "raw annual mean moisture index":[0], "raw annual mean rad":[18.6666666667], "raw annual mean temp":[16.5], "raw annual precipitation":[378], "raw clpk 1 1000 g clay":[14916.6666666667], "raw erosional":[69.5], "raw highest period moisture index":[0], "raw highest period radiation":[28.5], "raw hydraulic conductivity ksat":[233.3333333333], "raw lowest period moisture index":[0], "raw lowest period radiation":[9.1666666667], "raw max temp warmest period":[31.6666666667], "raw mean diurnal range":[12.5], 
  "raw mean moisture index coldest quarter":[0], "raw mean moisture index highest quarter MI":[0], "raw mean moisture index lowest quater MI":[0], "raw mean moisture index warmest quarter":[0], "raw mean temp coldest quarter":[10.8333333333], "raw mean temp driest quater":[21.1666666667], "raw mean temp warmer quarter":[23], "raw mean temp wettest quarter":[11.6666666667], "raw min temp coldest period":[5], "raw moisture index seasonality":[89.1666666667], "raw precipitation coldets quarter":[161.6666666667], 
  "raw precipitation driest period":[0], "raw precipitation driest quarter":[33.1666666667], "raw precipitation seasonality":[59], "raw precipitation warmest quarter":[47.8333333333], "raw precipitation wettest period":[15], "raw precipitation wettest quarter":[176.3333333333], "raw radiation coldest quarter":[11.5], "raw radiation driest quarter":[26.5], "raw radiation seasonality":[35.1666666667], "raw radiation warmest quarter":[25.6666666667], "raw radiation wettest quarter":[10.3333333333], 
  "raw relief":[12.3333333333], "raw ridgetopflat":[0], "raw rockalklty":[4.1666666667], "raw rockgrainsz":[5], "raw rockhardness":[6], "raw rocknutrnt":[3.8333333333], "raw roughness":[1], "raw sapk 1 1000 g sand":[71500], "raw slope":[.3333333333], "raw soildepth":[.5], "raw solpawhc":[122.6666666667], "raw temperature annual range":[26.3333333333], "raw temperature seasonality":[1.1666666667], "raw thpk 1 1000 g thickness":[315.8333333333], "raw twi":[6.6666666667], "raw valleybottom":[29]}, "remove":{"modelled annual mean moisture index":[], 
  "modelled annual mean rad":[], "modelled annual mean temp":[], "modelled annual precipitation":[], "modelled clpk 1 1000 g clay":[], "modelled erosional":[], "modelled highest period moisture index":[], "modelled highest period radiation":[], "modelled hydraulic conductivity ksat":[], "modelled isothermality":[], "modelled lowest period moisture index":[], "modelled lowest period radiation":[], "modelled max temp warmest period":[], "modelled mean diurnal range":[], "modelled mean moisture index coldest quarter":[], 
  "modelled mean moisture index highest quarter MI":[], "modelled mean moisture index lowest quater MI":[], "modelled mean moisture index warmest quarter":[], "modelled mean temp coldest quarter":[], "modelled mean temp driest quater":[], "modelled mean temp warmer quarter":[], "modelled mean temp wettest quarter":[], "modelled min temp coldest period":[], "modelled moisture index seasonality":[], "modelled phos":[], "modelled precipitation coldets quarter":[], "modelled precipitation driest period":[], 
  "modelled precipitation driest quarter":[], "modelled precipitation seasonality":[], "modelled precipitation warmest quarter":[], "modelled precipitation wettest period":[], "modelled precipitation wettest quarter":[], "modelled radiation coldest quarter":[], "modelled radiation driest quarter":[], "modelled radiation seasonality":[], "modelled radiation warmest quarter":[], "modelled radiation wettest quarter":[], "modelled relief":[], "modelled ridgetopflat":[], "modelled rockalklty":[], "modelled rockgrainsz":[], 
  "modelled rockhardness":[], "modelled rocknutrnt":[], "modelled roughness":[], "modelled sapk 1 1000 g sand":[], "modelled slope":[], "modelled soildepth":[], "modelled solpawhc":[], "modelled temperature annual range":[], "modelled temperature seasonality":[], "modelled thpk 1 1000 g thickness":[], "modelled twi":[], "modelled valleybottom":[], "modelled whpk 1 1000 g water cap":[], "raw annual mean moisture index":[0], "raw annual mean rad":[16], "raw annual mean temp":[13.8333333333], "raw annual precipitation":[683.8333333333], 
  "raw clpk 1 1000 g clay":[9833.3333333333], "raw erosional":[67.1666666667], "raw highest period moisture index":[.6666666667], "raw highest period radiation":[26], "raw hydraulic conductivity ksat":[266.6666666667], "raw lowest period moisture index":[0], "raw lowest period radiation":[6.1666666667], "raw max temp warmest period":[25.1666666667], "raw mean diurnal range":[10], "raw mean moisture index coldest quarter":[0], "raw mean moisture index highest quarter MI":[.6666666667], "raw mean moisture index lowest quater MI":[0], 
  "raw mean moisture index warmest quarter":[0], "raw mean temp coldest quarter":[9.5], "raw mean temp driest quater":[18.1666666667], "raw mean temp warmer quarter":[18.5], "raw mean temp wettest quarter":[9.6666666667], "raw min temp coldest period":[5], "raw moisture index seasonality":[61.3333333333], "raw precipitation coldets quarter":[267.8333333333], "raw precipitation driest period":[0], "raw precipitation driest quarter":[84.1666666667], "raw precipitation seasonality":[46], "raw precipitation warmest quarter":[85.6666666667], 
  "raw precipitation wettest period":[24.5], "raw precipitation wettest quarter":[272.8333333333], "raw radiation coldest quarter":[8.3333333333], "raw radiation driest quarter":[24], "raw radiation seasonality":[43.6666666667], "raw radiation warmest quarter":[23.6666666667], "raw radiation wettest quarter":[7.8333333333], "raw relief":[29.6666666667], "raw ridgetopflat":[0], "raw rockalklty":[4.3333333333], "raw rockgrainsz":[4.3333333333], "raw rockhardness":[2.1666666667], "raw rocknutrnt":[2.1666666667], 
  "raw roughness":[21.6666666667], "raw sapk 1 1000 g sand":[81666.6666666667], "raw slope":[1.5], "raw soildepth":[.6666666667], "raw solpawhc":[124.8333333333], "raw temperature annual range":[20.1666666667], "raw temperature seasonality":[1], "raw thpk 1 1000 g thickness":[597.3333333333], "raw twi":[8.8333333333], "raw valleybottom":[6.1666666667]}, "quotes_and_other_html_special_characters":{"modelled annual mean moisture index":[.7600000054], "modelled annual mean rad":[17.4749999046], "modelled annual mean temp":[17.6499996185], 
  "modelled annual precipitation":[1174], "modelled clpk 1 1000 g clay":[36312.5], "modelled erosional":[75], "modelled highest period moisture index":[.962500006], "modelled highest period radiation":[24.5249996185], "modelled hydraulic conductivity ksat":[200], "modelled isothermality":[.5150000006], "modelled lowest period moisture index":[.400000006], "modelled lowest period radiation":[10.2999997139], "modelled max temp warmest period":[28.25], "modelled mean diurnal range":[11.6499998569], 
  "modelled mean moisture index coldest quarter":[.9274999946], "modelled mean moisture index highest quarter MI":[.9399999976], "modelled mean moisture index lowest quater MI":[.4825000018], "modelled mean moisture index warmest quarter":[.6875], "modelled mean temp coldest quarter":[12.5], "modelled mean temp driest quater":[13.875], "modelled mean temp warmer quarter":[22.2500004768], "modelled mean temp wettest quarter":[21.8999996185], "modelled min temp coldest period":[5.5750000477], "modelled moisture index seasonality":[25.25], 
  "modelled phos":[.0735000009], "modelled precipitation coldets quarter":[186.5], "modelled precipitation driest period":[5.75], "modelled precipitation driest quarter":[144.5], "modelled precipitation seasonality":[45.5], "modelled precipitation warmest quarter":[452], "modelled precipitation wettest period":[45.75], "modelled precipitation wettest quarter":[509.5], "modelled radiation coldest quarter":[12.1000001431], "modelled radiation driest quarter":[15.5250000954], "modelled radiation seasonality":[27.5], 
  "modelled radiation warmest quarter":[21.7000002861], "modelled radiation wettest quarter":[19.7750000954], "modelled relief":[77.4553109407], "modelled ridgetopflat":[0], "modelled rockalklty":[4.75], "modelled rockgrainsz":[3], "modelled rockhardness":[4.5], "modelled rocknutrnt":[4.75], "modelled roughness":[16.6225522161], "modelled sapk 1 1000 g sand":[43625], "modelled slope":[4.8600849956], "modelled soildepth":[1.1749999821], "modelled solpawhc":[159.5], "modelled temperature annual range":[22.6749997139], 
  "modelled temperature seasonality":[1.3325000107], "modelled thpk 1 1000 g thickness":[219], "modelled twi":[10.4112542868], "modelled valleybottom":[28.125], "modelled whpk 1 1000 g water cap":[35500], "raw annual mean moisture index":[0], "raw annual mean rad":[17.4], "raw annual mean temp":[17.4], "raw annual precipitation":[1239.4], "raw clpk 1 1000 g clay":[37300], "raw erosional":[90], "raw highest period moisture index":[.6], "raw highest period radiation":[24.2], "raw hydraulic conductivity ksat":[220], 
  "raw lowest period moisture index":[0], "raw lowest period radiation":[10.6], "raw max temp warmest period":[28], "raw mean diurnal range":[11], "raw mean moisture index coldest quarter":[0], "raw mean moisture index highest quarter MI":[.6], "raw mean moisture index lowest quater MI":[0], "raw mean moisture index warmest quarter":[0], "raw mean temp coldest quarter":[12.8], "raw mean temp driest quater":[14.2], "raw mean temp warmer quarter":[22], "raw mean temp wettest quarter":[21.6], "raw min temp coldest period":[5.8], 
  "raw moisture index seasonality":[26.6], "raw precipitation coldets quarter":[177.4], "raw precipitation driest period":[4.6], "raw precipitation driest quarter":[135.6], "raw precipitation seasonality":[52.8], "raw precipitation warmest quarter":[497.4], "raw precipitation wettest period":[52.4], "raw precipitation wettest quarter":[579.6], "raw radiation coldest quarter":[12.2], "raw radiation driest quarter":[15.8], "raw radiation seasonality":[25.8], "raw radiation warmest quarter":[21.2], 
  "raw radiation wettest quarter":[19.2], "raw relief":[81.6], "raw ridgetopflat":[0], "raw rockalklty":[4.6], "raw rockgrainsz":[3], "raw rockhardness":[4.8], "raw rocknutrnt":[5], "raw roughness":[15.4], "raw sapk 1 1000 g sand":[42950], "raw slope":[4.6], "raw soildepth":[.8], "raw solpawhc":[160.8], "raw temperature annual range":[21.6], "raw temperature seasonality":[1], "raw thpk 1 1000 g thickness":[227.8], "raw twi":[10.4], "raw valleybottom":[13.6]}}});
  return;
}
var labelType;
var useGradients;
var nativeTextSupport;
var animate;
v35();
var Log = {elem:false, write:v36};
var Nav = {elem:false, load:v38};
var settingsPage;
var updateCharacter;
var onSetCharacter;
var onClickAlign;
var onSetRoot;
var onLateralise;
var isLateralise;
var onAnimate;
var onRender;
var onBranchLength;
var onBranchMultiply;
var onGetCharacter;
var st;
var toggleScreen;
updateCharacter = v39;
settingsPage = v40;
var phylojive = v43();
v614();
v1090(window);
v1120(jQuery);
v1147(jQuery);
v1165(jQuery);
v1212(jQuery);
v1235(jQuery);
v1281(jQuery);
v1294(jQuery);
v1351(jQuery);
var v30873 = jQuery.effects;
if (!v30873) {
  v1390(jQuery);
}
v1394(jQuery);
v1400(jQuery);
v1404(jQuery);
v1408(jQuery);
v1412(jQuery);
v1416(jQuery);
v1420(jQuery);
v1424(jQuery);
v1429(jQuery);
v1439(jQuery);
v1444(jQuery);
v1448(jQuery);
v1452(jQuery);
v1481(jQuery);
v1525(jQuery);
v1544(jQuery);
v1579(jQuery);
v1675(jQuery);
v1729(jQuery);
v1744(jQuery);
v1752(jQuery);
v1784(jQuery);
v1843(jQuery);
v1885(jQuery, document, window);
Smits = {};
Smits.Common = {nodeIdIncrement:0, activeNode:0, roundFloat:v1886, apply:v1887, addRaphEventHandler:v1890, isInteger:v1891, isXMLSerializerAvailable:v1892, createSvgEl:v1893, createGradientEl:v1894, setCssStyle:v1895};
var v8925 = Smits;
var v31256 = v1903();
v8925.PhyloCanvas = v31256;
Smits.PhyloCanvas.prototype = {};
var v8927 = Smits.PhyloCanvas;
var v31257 = v1905();
v8927.Node = v31257;
Smits.PhyloCanvas.Node.prototype = {getCountAllChildren:v1906, getCountImmediateChildren:v1907, getMidbranchPosition:v1908};
var v8929 = Smits.PhyloCanvas;
var v31258 = v1914();
v8929.NewickParse = v31258;
Smits.PhyloCanvas.NewickParse.prototype = {};
var v8931 = Smits.PhyloCanvas;
var v31259 = v1920();
v8931.PhyloxmlParse = v31259;
Smits.PhyloCanvas.PhyloxmlParse.prototype = {};
var v8933 = Smits.PhyloCanvas;
var v31260 = v1926();
v8933.NexmlParse = v31260;
Smits.PhyloCanvas.NexmlParse.prototype = {};
var v8935 = Smits.PhyloCanvas;
var v31261 = v1932();
v8935.NexmlJsonParse = v31261;
Smits.PhyloCanvas.NexmlParse.prototype = {};
Smits.PhyloCanvas.Render = {};
Smits.PhyloCanvas.Render.Style = {line:{stroke:"rgb(0,0,0)", "stroke-width":1}, text:{"font-family":"Verdana", "font-size":12, "text-anchor":"start"}, path:{stroke:"rgb(0,0,0)", "stroke-width":1}, connectedDash:{stroke:"rgb(200,200,200)", "stroke-dasharray":". "}, textSecantBg:{fill:"#EEE", stroke:"#DDD"}, highlightedEdgeCircle:{fill:"red"}, barChart:{fill:"#003300", stroke:"#DDD"}, getStyle:v1933};
Smits.PhyloCanvas.Render.Parameters = {jsOverride:0, Rectangular:{bufferX:200, paddingX:10, paddingY:20, bufferInnerLabels:10, bufferOuterLabels:5, minHeightBetweenLeaves:10, alignPadding:0, alignRight:!1, showScaleBar:!1}, Circular:{bufferRadius:.33, bufferAngle:20, initStartAngle:160, innerCircleRadius:0, minHeightBetweenLeaves:5, bufferInnerLabels:2, bufferOuterLabels:5}, binaryCharts:[], integratedBinaryCharts:[], barCharts:[], binaryChartBufferInner:5, binaryChartBufferSiblings:.01, binaryChartThickness:15, 
binaryChartDisjointed:!1, barChartBufferInner:3, barChartHeight:50, barChartWidth:.5, mouseRollOver:v1934, mouseRollOut:v1935, set:v1936};
var v8940 = Smits.PhyloCanvas.Render;
var v31262 = v1938();
v8940.Line = v31262;
var v8941 = Smits.PhyloCanvas.Render;
var v31263 = v1940();
v8941.Text = v31263;
var v8942 = Smits.PhyloCanvas.Render;
var v31264 = v1942();
v8942.Path = v31264;
var v8943 = Smits.PhyloCanvas.Render;
var v31265 = v1944();
v8943.Circle = v31265;
var v8944 = Smits.PhyloCanvas.Render;
var v31266 = v1946();
v8944.SVG = v31266;
Smits.PhyloCanvas.Render.SVG.prototype = {render:v1947, draw:v1948};
var v8946 = Smits.PhyloCanvas.Render;
var v31267 = v1952();
v8946.Phylogram = v31267;
Smits.PhyloCanvas.Render.Phylogram.prototype = {};
var v8948 = Smits.PhyloCanvas.Render;
var v31268 = v1956();
v8948.CircularPhylogram = v31268;
Smits.PhyloCanvas.Render.CircularPhylogram.prototype = {};
var XMLObjectifier = v1991();
JAM.call(v2127.call, v2127, [this], JAM.policy.p3);
JAM.call(v2226.call, v2226, [this], JAM.policy.p3);
JAM.set(document.body, "onload", init)
